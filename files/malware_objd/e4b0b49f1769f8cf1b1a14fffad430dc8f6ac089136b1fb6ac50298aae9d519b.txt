
e4b0b49f1769f8cf1b1a14fffad430dc8f6ac089136b1fb6ac50298aae9d519b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x3955e01a
  402b89:	push   ebx
  402b8a:	into   
  402b8b:	cmp    edi,DWORD PTR [edx+0x7a]
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x3a],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1c42f8bf
  402c38:	clc    
  402c39:	mov    ah,0x70
  402c3b:	addr16 dec edx
  402c3d:	rcl    BYTE PTR [esi-0x80],cl
  402c40:	push   esp
  402c41:	aam    0x2b
  402c43:	out    dx,eax
  402c44:	inc    edi
  402c45:	aad    0x48
  402c47:	and    esi,DWORD PTR [edx-0x4c26dee5]
  402c4d:	not    BYTE PTR [ebx-0x244318a3]
  402c53:	cmc    
  402c54:	mov    esp,DWORD PTR [esi]
  402c56:	pop    es
  402c57:	xchg   ebp,eax
  402c58:	mov    edx,esi
  402c5a:	in     eax,dx
  402c5b:	out    0x37,eax
  402c5d:	enter  0x8b38,0x52
  402c61:	mov    esp,fs
  402c63:	inc    esp
  402c64:	(bad)  
  402c65:	adc    ebp,DWORD PTR [ebx-0x322be842]
  402c6b:	loopne 0x402c7f
  402c6d:	xor    eax,0x8b351f75
  402c72:	or     al,0x8c
  402c74:	pop    ds
  402c75:	test   BYTE PTR [eax+ebx*2-0x7ead7ef3],ah
  402c7c:	sar    DWORD PTR [eax+eiz*1-0x6f],1
  402c80:	int    0x36
  402c82:	adc    BYTE PTR [edi+0x74],bl
  402c85:	lock psadbw mm6,QWORD PTR [ebp+0x7e]
  402c8a:	fidiv  DWORD PTR [ebp-0xc]
  402c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c8e:	into   
  402c8f:	mov    ah,0xb
  402c91:	cmc    
  402c92:	test   eax,0x3cedd639
  402c97:	int    0x40
  402c99:	mov    esp,0x3bf5b3fd
  402c9e:	add    eax,0xb80abbb2
  402ca3:	adc    DWORD PTR [edi-0x1],ebp
  402ca6:	ret    0x32d3
  402ca9:	push   ebp
  402caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cab:	inc    esi
  402cac:	xchg   ebp,eax
  402cad:	outs   dx,BYTE PTR ds:[esi]
  402cae:	stos   BYTE PTR es:[edi],al
  402caf:	push   ecx
  402cb0:	rol    DWORD PTR [edi+0x3088e2e2],cl
  402cb6:	retf   0x42b
  402cb9:	mov    bh,0x5b
  402cbb:	inc    ebx
  402cbc:	pop    eax
  402cbd:	jb     0x402d14
  402cbf:	pop    es
  402cc0:	cdq    
  402cc1:	sbb    eax,0x1ef3a76e
  402cc6:	out    dx,al
  402cc7:	in     eax,dx
  402cc8:	test   al,0x22
  402cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ccb:	sbb    ah,BYTE PTR [ebp+0x1b6c60ca]
  402cd1:	cmp    DWORD PTR [eax+edx*2-0x7f751685],esp
  402cd8:	jbe    0x402cd1
  402cda:	push   ebx
  402cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cdd:	dec    eax
  402cde:	retf   0xcae0
  402ce1:	dec    ebx
  402ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce3:	sbb    bh,bl
  402ce5:	and    eax,DWORD PTR [eax+eiz*1]
  402ce8:	sub    eax,0x44af0a6f
  402ced:	fldcw  WORD PTR [eax]
  402cef:	dec    esi
  402cf0:	in     al,0xe2
  402cf2:	xor    dh,ch
  402cf4:	shl    ecx,cl
  402cf6:	lods   al,BYTE PTR es:[esi]
  402cf8:	fst    st(4)
  402cfa:	sub    esi,esp
  402cfc:	adc    BYTE PTR [eax],ch
  402cfe:	out    dx,eax
  402cff:	inc    edi
  402d00:	ficom  DWORD PTR [edi-0x12]
  402d03:	cmp    al,0x4e
  402d05:	stos   DWORD PTR es:[edi],eax
  402d06:	repz push esp
  402d08:	neg    DWORD PTR [eax-0x1d]
  402d0b:	scas   eax,DWORD PTR es:[edi]
  402d0c:	jle    0x402cc8
  402d0e:	stos   BYTE PTR es:[edi],al
  402d0f:	push   esp
  402d10:	shr    DWORD PTR [ebp+0x794a5f90],cl
  402d16:	dec    edx
  402d17:	pop    eax
  402d18:	xor    BYTE PTR [ebx-0x614918cc],dl
  402d1e:	xor    DWORD PTR [eax],eax
  402d20:	jle    0x402ccb
  402d22:	dec    eax
  402d23:	add    DWORD PTR [esi-0x1a],ecx
  402d26:	push   es
  402d27:	adc    al,0x8a
  402d29:	pop    ds
  402d2a:	inc    ebx
  402d2b:	ja     0x402d0c
  402d2d:	not    BYTE PTR [eax]
  402d2f:	xor    edx,ebp
  402d31:	xor    edx,DWORD PTR [ecx+0x5959c990]
  402d37:	lea    esi,[eax+eiz*2]
  402d3a:	call   0x7998:0x6f8ffd62
  402d41:	and    eax,0x9a110eb1
  402d46:	aas    
  402d47:	enter  0xc2b0,0xf7
  402d4b:	mov    al,0x16
  402d4d:	or     al,0x9f
  402d4f:	lea    eax,[edx+0x22]
  402d52:	cmc    
  402d53:	fcom   DWORD PTR [ecx]
  402d55:	push   0xffffffa2
  402d57:	retf   
  402d58:	push   ds
  402d59:	add    ch,0xd0
  402d5c:	dec    ecx
  402d5d:	int    0x30
  402d5f:	pop    ss
  402d60:	(bad)  
  402d62:	(bad)  
  402d63:	push   esp
  402d64:	jmp    0x402d14
  402d66:	cmp    al,0xcd
  402d68:	call   0x1b97:0x3895b3e0
  402d6f:	test   BYTE PTR [eax],dl
  402d71:	ror    eax,cl
  402d73:	mov    dl,0xf6
  402d75:	dec    ebp
  402d76:	daa    
  402d77:	add    edx,DWORD PTR [edx]
  402d79:	inc    edx
  402d7a:	pop    esp
  402d7b:	stc    
  402d7c:	pop    ss
  402d7d:	es mov eax,0x80059101
  402d83:	add    esi,DWORD PTR [eax+0x60]
  402d86:	pop    esp
  402d87:	mov    DWORD PTR [edi-0x8],ecx
  402d8a:	push   edi
  402d8b:	push   ebx
  402d8c:	es dec ecx
  402d8e:	pop    eax
  402d8f:	test   eax,0xf311cbd5
  402d94:	mov    esp,0xa6c5a668
  402d99:	jnp    0x402dba
  402d9b:	sbb    DWORD PTR [edx-0x3f52bcb6],eax
  402da1:	mov    BYTE PTR [edx+ebx*1+0x781c7ed0],bh
  402da8:	mov    ds:0xbb884071,al
  402dad:	pop    ds
  402dae:	test   DWORD PTR [eax+0x16],ebx
  402db1:	pop    ss
  402db2:	jns    0x402e03
  402db4:	std    
  402db5:	retf   0xc677
  402db8:	test   ecx,ebp
  402dba:	sub    ch,BYTE PTR [edx]
  402dbc:	jo     0x402db7
  402dbe:	sub    al,dl
  402dc0:	cmc    
  402dc1:	xchg   ebp,eax
  402dc2:	out    dx,eax
  402dc3:	imul   esi,DWORD PTR [ebp-0x18],0x9
  402dc7:	sub    BYTE PTR [ecx],bl
  402dc9:	leave  
  402dca:	cmp    cl,BYTE PTR ds:0x42108453
  402dd0:	imul   ecx,DWORD PTR [ebp-0x27e3ea3b],0xffffffed
  402dd7:	jmp    0xaa05d5c8
  402ddc:	mov    esi,DWORD PTR [eax]
  402dde:	repz add eax,0x5976eb6b
  402de4:	inc    eax
  402de5:	dec    ebp
  402de6:	nop
  402de7:	ret    
  402de8:	or     bh,ch
  402dea:	push   0xe5b6b4c5
  402def:	sub    DWORD PTR [ebx],edx
  402df1:	aam    0xf9
  402df3:	lods   eax,DWORD PTR ds:[esi]
  402df4:	fidivr DWORD PTR [edi+0x6f51b52]
  402dfa:	mov    al,0xc9
  402dfc:	push   edx
  402dfd:	pop    esp
  402dfe:	pop    ss
  402dff:	push   edx
  402e00:	mov    ds:0xa422ea07,al
  402e05:	lahf   
  402e06:	mov    edi,DWORD PTR [ebx]
  402e08:	shl    DWORD PTR [eax+edx*4-0x6889591b],1
  402e0f:	mov    esp,0xb3e64dd7
  402e14:	out    0xef,al
  402e16:	mov    edx,0x6050276a
  402e1b:	test   al,0x10
  402e1d:	sbb    cl,0x15
  402e20:	rcr    edi,0x52
  402e23:	mov    edx,0x75b9a84b
  402e28:	std    
  402e29:	xchg   ecx,eax
  402e2a:	popa   
  402e2b:	cld    
  402e2c:	stos   BYTE PTR es:[edi],al
  402e2d:	xchg   ecx,eax
  402e2e:	mov    esi,0x4a8e722d
  402e33:	pop    ss
  402e34:	mov    ebx,0x9a7573d6
  402e39:	mov    dh,0xd6
  402e3b:	mov    ch,0xc1
  402e3d:	outs   dx,DWORD PTR ds:[esi]
  402e3e:	das    
  402e3f:	sahf   
  402e40:	pop    eax
  402e41:	aaa    
  402e42:	jnp    0x402e0f
  402e44:	xchg   BYTE PTR [esi+0x651fad1e],dl
  402e4a:	mov    edi,0x77126347
  402e4f:	(bad)  
  402e51:	fmul   DWORD PTR [ebp+0x5b9607c0]
  402e57:	(bad)  
  402e58:	xor    bl,BYTE PTR [ebx+ecx*4]
  402e5b:	cmp    al,0xb6
  402e5d:	adc    ah,BYTE PTR [esi-0x1b]
  402e60:	jl     0x402ed2
  402e62:	shl    ah,1
  402e64:	mov    ch,BYTE PTR [ecx]
  402e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e67:	shl    DWORD PTR [esi],0xfc
  402e6a:	ret    
  402e6b:	psrad  mm4,QWORD PTR [ecx]
  402e6e:	jle    0x402e9e
  402e70:	fdiv   st(1),st
  402e72:	pop    es
  402e73:	mov    cl,0xd2
  402e75:	mov    ch,0xac
  402e77:	xchg   ecx,eax
  402e78:	arpl   WORD PTR [ebp-0x3e],dx
  402e7b:	mov    bl,0x8c
  402e7d:	jmp    0xee61660c
  402e82:	retf   
  402e83:	xchg   esi,eax
  402e84:	sbb    eax,0xdf335a9d
  402e89:	retf   0x6eaf
  402e8c:	cmp    al,0x36
  402e8e:	add    DWORD PTR [esp+edi*8],edi
  402e91:	adc    dh,BYTE PTR [esp+eax*8+0x5e]
  402e95:	or     BYTE PTR [ecx+edx*1-0x39],dh
  402e99:	lock mov dh,BYTE PTR [ecx+0x75]
  402e9d:	dec    edx
  402e9e:	dec    ebx
  402e9f:	mov    ds:0x582a1809,al
  402ea4:	pop    ds
  402ea5:	and    ebx,DWORD PTR [eax+0x37]
  402ea8:	test   BYTE PTR [eax+eax*1+0x2],cl
  402eac:	test   eax,0x26c40e83
  402eb1:	mov    ebp,0xe5a48e93
  402eb6:	pusha  
  402eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eb8:	popf   
  402eb9:	mov    eax,ds:0xe0983a71
  402ebe:	xchg   esi,eax
  402ebf:	lods   eax,DWORD PTR ds:[esi]
  402ec0:	mov    bh,0xde
  402ec2:	dec    edi
  402ec3:	icebp  
  402ec4:	sahf   
  402ec5:	add    ch,BYTE PTR [ebp+0x6b]
  402ec8:	sub    bh,BYTE PTR [eax-0x55c8ebb5]
  402ece:	mov    al,ds:0x389612e1
  402ed3:	ins    BYTE PTR es:[edi],dx
  402ed4:	xlat   BYTE PTR ds:[ebx]
  402ed5:	sti    
  402ed6:	sbb    bl,0x4f
  402ed9:	add    BYTE PTR [edx],ah
  402edb:	mov    BYTE PTR [ecx+0x370983ad],0x57
  402ee2:	imul   esi,DWORD PTR [edi],0xffffffbd
  402ee5:	mov    bl,0x18
  402ee7:	jae    0x402e92
  402ee9:	cld    
  402eea:	push   ds
  402eeb:	xchg   esp,eax
  402eec:	mov    ss,edi
  402eee:	pop    ebp
  402eef:	out    dx,eax
  402ef0:	rol    BYTE PTR ds:0xfa9857e5,cl
  402ef6:	je     0x402f63
  402ef8:	loopne 0x402ee0
  402efa:	sub    edi,DWORD PTR [eax]
  402efc:	call   0x66346cdd
  402f01:	imul   eax,edi,0xffffffff
  402f04:	icebp  
  402f05:	xchg   ecx,eax
  402f06:	mov    edx,0x4dbb9303
  402f0b:	(bad)  
  402f0c:	pslld  mm5,mm7
  402f0f:	xchg   edx,eax
  402f10:	inc    esi
  402f11:	repnz hlt 
  402f13:	pop    es
  402f14:	jne    0x402f37
  402f16:	inc    edi
  402f17:	retf   0x40aa
  402f1a:	inc    edi
  402f1b:	(bad)
  402f1e:	imul   esp,DWORD PTR [ebp+ebp*2+0x11],0x74c6f073
  402f26:	sub    eax,0xb89b0c75
  402f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f2c:	adc    DWORD PTR [edi],0x1f
  402f2f:	push   edx
  402f30:	mov    esp,0xd5cbbd0f
  402f35:	in     al,0x2b
  402f37:	jns    0x402fab
  402f39:	sbb    ebx,DWORD PTR [edx-0x6e]
  402f3c:	push   es
  402f3d:	imul   DWORD PTR [edi-0x3c]
  402f40:	cwde   
  402f41:	stos   BYTE PTR es:[edi],al
  402f42:	xchg   ecx,eax
  402f43:	xchg   edi,eax
  402f44:	fstp   QWORD PTR [eax]
  402f46:	inc    ebx
  402f47:	leave  
  402f48:	jne    0x402f6e
  402f4a:	hlt    
  402f4b:	inc    ebx
  402f4c:	mov    al,0xb4
  402f4e:	add    dh,BYTE PTR [edi]
  402f50:	std    
  402f51:	pop    edx
  402f52:	fxch   st(3)
  402f54:	lods   al,BYTE PTR ds:[esi]
  402f55:	cs aad 0xf2
  402f58:	dec    eax
  402f59:	hlt    
  402f5a:	jb     0x402fbf
  402f5c:	adc    dl,BYTE PTR [edx+0x66]
  402f5f:	test   eax,0xf4f91091
  402f64:	fisub  DWORD PTR [ecx-0x23]
  402f67:	lock cmp DWORD PTR [eax+eax*4+0x2c],0xffffff9d
  402f6d:	fdivr  DWORD PTR [eax]
  402f6f:	jp     0x402fad
  402f71:	xchg   BYTE PTR [edx+ebx*2+0x5d],ch
  402f75:	stc    
  402f76:	sbb    al,0x70
  402f78:	jmp    0x402f97
  402f7a:	sub    eax,0xf7cc3af6
  402f7f:	es pushf 
  402f81:	jns    0x402f51
  402f83:	dec    ebx
  402f84:	jecxz  0x402fa7
  402f86:	jmp    0x402f99
  402f88:	mov    eax,ds:0x6e2fcb77
  402f8d:	ret    0x8226
  402f90:	div    bh
  402f92:	popa   
  402f93:	xlat   BYTE PTR ds:[ebx]
  402f94:	xchg   edi,eax
  402f95:	dec    ebx
  402f96:	loopne 0x402f8b
  402f98:	lea    eax,[eax+eax*4]
  402f9b:	mov    ebx,0xe7d8315c
  402fa0:	fldcw  WORD PTR [ebx-0x40]
  402fa3:	outs   dx,BYTE PTR ds:[esi]
  402fa4:	(bad)
  402fa7:	xchg   ecx,eax
  402fa8:	das    
  402fa9:	sbb    edx,DWORD PTR [edx-0x5a5e3b29]
  402faf:	xor    edx,eax
  402fb1:	sbb    bl,BYTE PTR [eax-0x556cc31e]
  402fb7:	pusha  
  402fb8:	test   al,0x4f
  402fba:	in     eax,0x74
  402fbc:	sar    bl,1
  402fbe:	xchg   ebp,eax
  402fbf:	cmp    eax,0x626e9eef
  402fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fc5:	cld    
  402fc6:	adc    eax,0x1d49aeda
  402fcb:	pop    esi
  402fcc:	xor    BYTE PTR [eax+eax*1-0x87d626d],dl
  402fd3:	in     al,dx
  402fd4:	push   esi
  402fd5:	arpl   cx,bx
  402fd7:	mov    ch,0xe6
  402fd9:	jbe    0x402f6e
  402fdb:	or     al,0x33
  402fdd:	and    al,0xcd
  402fdf:	xchg   DWORD PTR [eax-0x2d425bcf],esp
  402fe5:	ret    
  402fe6:	mov    edx,?
  402fe8:	inc    ebx
  402fe9:	mov    esi,0x5eaa7eda
  402fee:	jg     0x40306f
  402ff0:	ss mov bh,bh
  402ff3:	lods   al,BYTE PTR ds:[esi]
  402ff4:	mov    esp,0xb1f616a2
  402ff9:	inc    ecx
  402ffa:	in     al,dx
  402ffb:	pop    esi
  402ffc:	mov    dh,0x37
  402ffe:	jbe    0x402fc8
  403000:	xor    eax,0xba5f0d6f
  403005:	add    ecx,edx
  403007:	adc    esi,DWORD PTR [ecx-0x41]
  40300a:	jl     0x402fa5
  40300c:	das    
  40300d:	fcmovnb st,st(4)
  40300f:	push   ss
  403010:	lea    ebx,[edx-0x2e39eab8]
  403016:	std    
  403017:	in     eax,dx
  403018:	pushf  
  403019:	pop    esi
  40301a:	jb     0x40302c
  40301c:	jecxz  0x403067
  40301e:	adc    eax,0x45807955
  403023:	les    ebp,FWORD PTR [esi]
  403025:	pop    es
  403026:	dec    esp
  403027:	fs nop
  403029:	xor    al,0x2
  40302b:	pop    eax
  40302c:	sub    eax,0x3bfee9b4
  403031:	mov    ebx,0xb14f440c
  403036:	fwait
  403037:	and    bl,dl
  403039:	es pop eax
  40303b:	ficomp DWORD PTR [ecx-0x4a]
  40303e:	aam    0xd5
  403040:	call   0xa846:0x73c780f1
  403047:	cwde   
  403048:	arpl   WORD PTR [ebp+0x29ebbd56],di
  40304e:	dec    eax
  40304f:	and    eax,0x93ece9ab
  403054:	xchg   edi,eax
  403055:	mov    eax,ds:0xb4aff6b9
  40305a:	sahf   
  40305b:	dec    esp
  40305c:	das    
  40305d:	sbb    dl,BYTE PTR [esi-0x2821a3b]
  403063:	cmp    BYTE PTR [edx],dl
  403065:	shl    BYTE PTR ds:0x8b31dd94,1
  40306b:	jbe    0x403025
  40306d:	repnz or al,0x86
  403070:	cmp    dl,BYTE PTR [esi]
  403072:	mov    dh,0xb4
  403074:	push   esi
  403075:	sbb    BYTE PTR [edi],0x95
  403078:	mov    edx,0xb63c80a3
  40307d:	je     0x4030db
  40307f:	gs nop
  403081:	and    al,0xd3
  403083:	outs   dx,BYTE PTR ds:[esi]
  403084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403085:	scas   al,BYTE PTR es:[edi]
  403086:	(bad)  
  403088:	(bad)  
  403089:	inc    esp
  40308a:	jmp    0xb14a1e1b
  40308f:	and    eax,0x7527d020
  403094:	push   ecx
  403095:	jp     0x4030da
  403097:	fistp  WORD PTR [edi+0x67]
  40309a:	(bad)  
  40309b:	jmp    0x4b1f21e5
  4030a0:	jo     0x40304b
  4030a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a3:	rol    BYTE PTR [ecx+0x1d],cl
  4030a6:	in     eax,dx
  4030a7:	aaa    
  4030a8:	mov    bl,BYTE PTR [ebx]
  4030aa:	(bad)  
  4030ab:	(bad)  
  4030ad:	add    esi,DWORD PTR [ecx]
  4030af:	sar    BYTE PTR [ecx],1
  4030b1:	xor    eax,DWORD PTR [ecx-0x21]
  4030b4:	div    BYTE PTR [eax+eiz*4-0x5a]
  4030b8:	inc    esp
  4030b9:	adc    edx,0x37
  4030bc:	and    BYTE PTR [eax+0x1cbf8b55],0x83
  4030c3:	imul   ebp,DWORD PTR [eax],0x41
  4030c6:	(bad)  
  4030c7:	std    
  4030c8:	ss stc 
  4030ca:	arpl   WORD PTR [edi],bx
  4030cc:	dec    eax
  4030cd:	and    eax,esp
  4030cf:	enter  0xe1e1,0x84
  4030d3:	int    0xc3
  4030d5:	sbb    DWORD PTR [edi+0x36a24796],edi
  4030db:	ja     0x403122
  4030dd:	mov    dl,0x72
  4030df:	mov    fs,ebp
  4030e1:	call   0xa6ebc88b
  4030e6:	fld    QWORD PTR [edi+0x76]
  4030e9:	inc    esp
  4030ea:	iret   
  4030eb:	out    dx,al
  4030ec:	cmp    eax,0xa94346fa
  4030f1:	sub    DWORD PTR [edi+0x2d],ebx
  4030f4:	gs cwde 
  4030f6:	aas    
  4030f7:	fidiv  DWORD PTR [ecx-0x46]
  4030fa:	push   ss
  4030fb:	dec    ecx
  4030fc:	adc    al,0xb0
  4030fe:	push   ebp
  4030ff:	imul   esp
  403101:	shl    BYTE PTR [edi+0x3289c389],0xc0
  403108:	mov    ebp,0x5fb1e5e0
  40310d:	cmp    DWORD PTR [eax+0x42013f27],esi
  403113:	jnp    0x403107
  403115:	daa    
  403116:	dec    eax
  403117:	sub    BYTE PTR [ecx+0x2fcd4f22],0x6
  40311e:	je     0x4030b7
  403120:	add    al,0x20
  403122:	push   0x5e
  403124:	jmp    0x908aeb0
  403129:	test   ax,0xd9a7
  40312d:	adc    edi,ecx
  40312f:	popf   
  403130:	int    0x5c
  403132:	adc    al,0x53
  403134:	mov    ebp,0x63d35d61
  403139:	lods   al,BYTE PTR ds:[esi]
  40313a:	retf   0x5ba4
  40313d:	mov    ch,0x3a
  40313f:	jl     0x403121
  403141:	push   0x6f
  403143:	xchg   edi,eax
  403144:	and    eax,0xb7cb4ebb
  403149:	retf   
  40314a:	mov    BYTE PTR [ecx+0x4],0x59
  40314e:	adc    edx,esp
  403150:	loop   0x403159
  403152:	sbb    DWORD PTR [eax+0x31],0x30
  403156:	out    dx,al
  403157:	out    dx,al
  403158:	sbb    dl,BYTE PTR ds:0xa9d6b9f1
  40315e:	stos   DWORD PTR es:[edi],eax
  40315f:	mov    esi,ebp
  403161:	xchg   esp,eax
  403162:	mov    edx,0x8cfa6fda
  403167:	mov    dl,0xa6
  403169:	out    0x8b,eax
  40316b:	inc    esp
  40316c:	in     eax,0xf
  40316e:	dec    edx
  40316f:	call   0xda28e84f
  403174:	or     ch,BYTE PTR [ebp-0x74fd15f6]
  40317a:	jmp    0x4031ee
  40317c:	test   eax,0xc65db2e8
  403181:	xor    dl,BYTE PTR [edx+0x69fd97dc]
  403187:	and    eax,DWORD PTR [bp+0x59]
  40318b:	pop    ss
  40318c:	fcomi  st,st(2)
  40318e:	fnstenv [eax-0x7b07c7e4]
  403194:	mov    ecx,0xa8e1f009
  403199:	mov    dl,0xe7
  40319b:	aaa    
  40319c:	ret    
  40319d:	add    eax,0x53695ae1
  4031a2:	arpl   ax,cx
  4031a4:	inc    edx
  4031a5:	fwait
  4031a6:	dec    esp
  4031a7:	imul   ecx,DWORD PTR [esi],0xffffff92
  4031aa:	repz popf 
  4031ac:	lss    esp,FWORD PTR [ecx+0x4705d853]
  4031b3:	hlt    
  4031b4:	mov    al,ds:0x62f048c9
  4031b9:	outs   dx,BYTE PTR ds:[esi]
  4031ba:	call   0x4751:0xfa9d90bf
  4031c1:	jl     0x4031af
  4031c3:	cmp    al,0xf
  4031c5:	dec    edi
  4031c6:	sbb    eax,0xbece0532
  4031cb:	pop    edi
  4031cc:	out    0x24,eax
  4031ce:	icebp  
  4031cf:	and    al,0xf3
  4031d1:	sub    bl,BYTE PTR [eax-0x38ffafee]
  4031d7:	out    dx,eax
  4031d8:	adc    DWORD PTR [esp+edx*1-0x44],edi
  4031dc:	dec    edi
  4031dd:	sub    eax,0x3c
  4031e0:	int    0xd0
  4031e2:	push   esi
  4031e3:	fbld   TBYTE PTR [ebx]
  4031e5:	adc    BYTE PTR [ebx+0x7a],ah
  4031e8:	ins    DWORD PTR es:[edi],dx
  4031e9:	add    eax,0x175dd7ee
  4031ee:	mov    edx,0x3f95b87
  4031f3:	xlat   BYTE PTR ds:[ebx]
  4031f4:	mov    al,BYTE PTR [ecx+0x31]
  4031f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f8:	sbb    eax,0xe1fb763a
  4031fd:	or     DWORD PTR [eax],ecx
  4031ff:	ficom  DWORD PTR [esi]
  403201:	sub    BYTE PTR [eax-0x7c],al
  403204:	cmp    al,0x6a
  403206:	in     eax,0x25
  403208:	xchg   BYTE PTR [esi],dh
  40320a:	add    BYTE PTR [ebp+0x1c],ah
  40320d:	pushw  0x1e7b
  403211:	(bad)  
  403213:	fwait
  403214:	dec    esp
  403215:	mov    ebp,0x6fc74da
  40321a:	test   DWORD PTR [ebp-0x53aa38fa],edi
  403220:	push   ecx
  403221:	inc    esi
  403222:	retf   
  403223:	les    ecx,FWORD PTR [ebx+0x64]
  403226:	std    
  403227:	cmp    al,0x60
  403229:	xchg   ebx,eax
  40322a:	mov    ecx,0x9e1ad822
  40322f:	into   
  403230:	or     edi,DWORD PTR [eax]
  403232:	add    al,0xb
  403234:	das    
  403235:	lahf   
  403236:	ret    
  403237:	mov    ecx,0xe2bb6231
  40323c:	call   edx
  40323e:	imul   esi,ecx,0x13
  403241:	push   cs
  403242:	xor    eax,0xe43db729
  403247:	dec    esi
  403248:	xchg   ebp,eax
  403249:	sahf   
  40324a:	dec    ebx
  40324b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40324c:	mov    al,0x2a
  40324e:	xchg   esi,eax
  40324f:	(bad)  
  403250:	pop    ecx
  403251:	lods   al,BYTE PTR ds:[esi]
  403252:	push   edi
  403253:	mov    ecx,0xb79c7ba2
  403258:	mov    fs,WORD PTR [ebx-0x50]
  40325b:	fcmovnu st,st(3)
  40325d:	pop    ebp
  40325e:	push   ebx
  40325f:	out    0x18,al
  403261:	rcr    ah,0xb
  403264:	sar    DWORD PTR [ecx*4-0x390b947d],1
  40326b:	neg    BYTE PTR [edx]
  40326d:	ins    BYTE PTR es:[edi],dx
  40326e:	jg     0x40325e
  403270:	cmc    
  403271:	mov    dh,0x30
  403273:	loop   0x403288
  403275:	das    
  403276:	stos   DWORD PTR es:[di],eax
  403278:	(bad)  
  40327a:	clc    
  40327b:	cdq    
  40327c:	or     al,0x81
  40327e:	(bad)  
  40327f:	lea    edx,[ecx]
  403281:	lods   al,BYTE PTR ds:[esi]
  403282:	loopne 0x4032eb
  403284:	and    eax,0x780fd698
  403289:	sub    al,0xf2
  40328b:	push   ecx
  40328c:	shr    DWORD PTR [ebp-0x6f],cl
  40328f:	je     0x4032d3
  403291:	inc    esp
  403292:	fcomi  st,st(4)
  403294:	cs jnp 0x40327f
  403297:	lahf   
  403298:	call   0x9ff961fe
  40329d:	pushf  
  40329e:	or     dh,dh
  4032a0:	aaa    
  4032a1:	into   
  4032a2:	(bad)  
  4032a3:	scas   eax,DWORD PTR es:[edi]
  4032a4:	xchg   ebx,eax
  4032a5:	ficom  WORD PTR [edi]
  4032a7:	add    al,0xac
  4032a9:	mov    eax,ds:0x3e5db0d4
  4032ae:	sbb    BYTE PTR [esi-0x20],al
  4032b1:	push   cs
  4032b2:	outs   dx,BYTE PTR ds:[esi]
  4032b3:	aad    0x9a
  4032b5:	div    BYTE PTR [esi]
  4032b7:	and    ch,BYTE PTR [ecx]
  4032b9:	fsubr  QWORD PTR [edi+0x66f68c5c]
  4032bf:	pop    edx
  4032c0:	in     eax,0xae
  4032c2:	div    BYTE PTR [ecx+0x69]
  4032c5:	popf   
  4032c6:	pop    ebp
  4032c7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032c9:	xor    bl,BYTE PTR [edi-0x6d013ea7]
  4032cf:	cmp    al,0x96
  4032d1:	dec    edx
  4032d2:	call   0xb1f3ad5d
  4032d7:	test   eax,0xf2bb18b1
  4032dc:	sbb    ebx,DWORD PTR [ecx-0x614050e0]
  4032e2:	dec    ecx
  4032e3:	mov    ecx,ebp
  4032e5:	test   eax,0x200a20d1
  4032ea:	fwait
  4032eb:	push   ds
  4032ec:	inc    ecx
  4032ed:	shr    DWORD PTR [eax],cl
  4032ef:	push   ebp
  4032f0:	stos   DWORD PTR es:[edi],eax
  4032f1:	sbb    al,0x21
  4032f3:	push   ebp
  4032f4:	leave  
  4032f5:	and    DWORD PTR [esi],ebx
  4032f7:	sub    al,0x3e
  4032fa:	sbb    dl,BYTE PTR [eax+edi*8-0x60]
  4032fe:	sbb    eax,0xd5914336
  403303:	or     al,0xd7
  403305:	call   0xff82:0x4716adbf
  40330c:	add    BYTE PTR [ebx-0x19],0xa7
  403310:	aad    0x21
  403312:	inc    edi
  403313:	push   ebp
  403314:	test   BYTE PTR [ebx],bh
  403316:	push   ecx
  403317:	aas    
  403318:	mov    al,0xb4
  40331a:	jne    0x4032e0
  40331c:	mov    ebx,0x936363c1
  403321:	daa    
  403322:	mov    al,ds:0x91da1b29
  403327:	es sbb al,ch
  40332a:	rcr    DWORD PTR [ebx-0x2c099983],cl
  403330:	dec    ebp
  403331:	repnz adc edx,ebp
  403334:	(bad)  
  403335:	cli    
  403336:	pop    eax
  403337:	cs jnp 0x403315
  40333a:	pushf  
  40333b:	jecxz  0x4033ac
  40333d:	lods   eax,DWORD PTR ds:[esi]
  40333e:	dec    ebp
  40333f:	clc    
  403340:	sub    ecx,DWORD PTR [ebx+0x1a]
  403343:	frstor [edx]
  403345:	xchg   ebp,eax
  403346:	loop   0x4032d9
  403348:	jo     0x4032fc
  40334a:	sub    al,0x9c
  40334c:	push   ss
  40334d:	test   esp,ecx
  40334f:	mov    DWORD PTR [edi+0x446aa9],esi
  403355:	sub    ebx,DWORD PTR ds:0x8a606c43
  40335b:	pop    eax
  40335c:	mov    DWORD PTR [ecx-0x78],edi
  40335f:	jl     0x403371
  403361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403362:	sbb    eax,0xcf37039e
  403367:	dec    edx
  403368:	sub    DWORD PTR [edi+0xea58de8],edi
  40336e:	xchg   DWORD PTR [eax+edx*1-0x5598a54c],ecx
  403375:	mov    dh,0x66
  403377:	inc    ebx
  403378:	mov    al,0x62
  40337a:	lea    edx,[ecx-0x4a]
  40337d:	mov    bl,0xaf
  40337f:	xchg   DWORD PTR [eax-0xe],esp
  403382:	outs   dx,BYTE PTR ds:[esi]
  403383:	sbb    BYTE PTR [ebx],dl
  403385:	pusha  
  403386:	ins    BYTE PTR es:[edi],dx
  403387:	or     dh,BYTE PTR [ebp+0x55]
  40338a:	dec    esi
  40338b:	mov    edi,0x6a533316
  403390:	and    eax,0x9cc18d2e
  403395:	dec    ecx
  403396:	test   eax,eax
  403398:	test   eax,0x174f4cc7
  40339d:	push   esi
  40339e:	push   esp
  40339f:	mov    ds:0x2f0c4c92,eax
  4033a4:	pop    edi
  4033a5:	lds    esi,FWORD PTR [ebx+0x34]
  4033a8:	jge    0x4033d4
  4033aa:	(bad)  
  4033ab:	int3   
  4033ac:	pop    edi
  4033ad:	jmp    0xa764:0xdcb38bc
  4033b4:	iret   
  4033b5:	jl     0x4033a0
  4033b7:	jae    0x403424
  4033b9:	test   al,0xe4
  4033bb:	jo     0x403431
  4033bd:	arpl   WORD PTR [edi+0x69936f33],di
  4033c3:	jl     0x40334e
  4033c5:	lahf   
  4033c6:	and    ah,BYTE PTR [eax-0x6fad6e59]
  4033cc:	cs scas al,BYTE PTR es:[edi]
  4033ce:	jmp    0x403350
  4033d0:	xor    eax,0xdc900e98
  4033d5:	std    
  4033d6:	shl    BYTE PTR [ecx-0x7d1db08b],0xb6
  4033dd:	mov    bl,0xe9
  4033df:	cmp    dl,dl
  4033e1:	and    eax,edi
  4033e3:	sar    DWORD PTR [eax-0x3e3445d7],0x53
  4033ea:	jle    0x4033ae
  4033ec:	in     eax,0x95
  4033ee:	inc    ecx
  4033ef:	iret   
  4033f0:	lds    ebp,FWORD PTR [eax+ebx*4-0x2e]
  4033f4:	adc    eax,0xa907480
  4033f9:	inc    ebx
  4033fa:	push   ds
  4033fb:	arpl   WORD PTR [eax+0x20551f13],di
  403401:	out    dx,al
  403402:	and    al,0xc2
  403404:	or     BYTE PTR [eax+0x22],bh
  403407:	and    al,0x36
  403409:	sub    eax,DWORD PTR ds:0x3ee7d024
  40340f:	sub    al,0x74
  403411:	add    eax,0x2b405f16
  403416:	(bad)  
  403417:	popa   
  403418:	mov    al,0x34
  40341a:	(bad)  
  40341b:	(bad)  
  40341c:	push   0x758f9791
  403421:	(bad)  
  403423:	mov    cl,0x97
  403425:	loopne 0x403441
  403427:	xor    edx,DWORD PTR [eax+ebp*8]
  40342a:	cmp    al,0xac
  40342c:	jae    0x403414
  40342e:	pop    eax
  40342f:	sti    
  403430:	push   0x79
  403432:	inc    ebp
  403433:	stc    
  403434:	int3   
  403435:	rcl    DWORD PTR [edx+0x58545407],1
  40343b:	or     dh,BYTE PTR [ebx-0x22f2ce9]
  403441:	mov    eax,ds:0x6a36dc3
  403446:	xchg   edi,eax
  403447:	lds    edi,FWORD PTR [edx-0x17]
  40344a:	test   eax,0x2006cc43
  40344f:	retf   0xeca1
  403452:	dec    esp
  403453:	jbe    0x403449
  403455:	xor    BYTE PTR [ebx+0x18],dh
  403458:	cmp    al,BYTE PTR [ebx+0x42]
  40345b:	jns    0x4034bf
  40345d:	into   
  40345e:	xchg   ebx,eax
  40345f:	xor    ah,BYTE PTR [esi+eiz*4]
  403462:	pushf  
  403463:	retf   0xe07b
  403466:	addr16 adc al,0x8a
  403469:	retf   
  40346a:	xlat   BYTE PTR ds:[ebx]
  40346b:	jae    0x40341e
  40346d:	shr    BYTE PTR [ebx-0x44],0x3e
  403471:	mov    WORD PTR [esi+0x1c],ss
  403474:	mov    BYTE PTR [ebx+0x4ec8c6d0],dh
  40347a:	xor    BYTE PTR [edi+0x24ba9e05],al
  403480:	repnz pop ds
  403482:	push   ebp
  403483:	pop    esi
  403484:	inc    edi
  403485:	or     DWORD PTR [edx-0x52728a32],0x55
  40348c:	scas   al,BYTE PTR es:[edi]
  40348d:	pop    es
  40348e:	cmp    DWORD PTR [edi-0x47],ebx
  403491:	(bad)  
  403493:	lock xor BYTE PTR [edx],cl
  403496:	adc    eax,DWORD PTR [ecx+0x4f13606f]
  40349c:	mov    esp,0x3103bef2
  4034a1:	cmp    DWORD PTR [ebp+0xe],0xc5702169
  4034a8:	ins    DWORD PTR es:[edi],dx
  4034a9:	ret    
  4034aa:	xchg   ebx,eax
  4034ab:	ret    
  4034ac:	ficomp WORD PTR [ecx]
  4034ae:	inc    eax
  4034af:	sub    ebp,eax
  4034b1:	pop    esp
  4034b2:	mov    esi,0xee49b27a
  4034b7:	pop    es
  4034b8:	lea    esp,[ebx-0x617a71e0]
  4034be:	loopne 0x403481
  4034c0:	sbb    dl,BYTE PTR [eax]
  4034c2:	test   BYTE PTR [esi+0x777cf49e],ah
  4034c8:	mov    al,BYTE PTR [edi+eiz*4-0x105c4080]
  4034cf:	mov    bh,0x64
  4034d1:	bound  ebp,QWORD PTR [ebx]
  4034d3:	outs   dx,DWORD PTR ds:[esi]
  4034d4:	hlt    
  4034d5:	cwde   
  4034d6:	add    al,BYTE PTR [edx-0x585511d5]
  4034dc:	sub    al,0x36
  4034de:	call   0x55fb6a4e
  4034e3:	scas   eax,DWORD PTR es:[edi]
  4034e4:	icebp  
  4034e5:	xor    eax,0xa9254a0b
  4034ea:	xchg   esi,eax
  4034eb:	and    BYTE PTR [eax+0x2879b903],bh
  4034f1:	sub    BYTE PTR [edx+ecx*4],0x64
  4034f5:	xor    ebp,edx
  4034f7:	lds    edi,FWORD PTR [ebx-0x66d217ba]
  4034fd:	cmp    dh,bh
  4034ff:	out    0xbe,eax
  403501:	adc    al,0xbb
  403503:	jno    0x403560
  403505:	push   es
  403506:	pop    esp
  403507:	clc    
  403508:	sub    BYTE PTR [eax],dl
  40350a:	inc    esp
  40350b:	mov    esi,0xd9fcec0f
  403510:	or     ah,BYTE PTR [edi-0x72]
  403513:	jmp    0xfb7:0x3a3ba09e
  40351a:	ficomp WORD PTR [ebx+edx*1+0x7a4bb945]
  403521:	arpl   WORD PTR [edx+0x36],bp
  403524:	jmp    0x40358e
  403526:	imul   edi,DWORD PTR [edi],0xfffffff3
  403529:	sbb    eax,0x42e8a78b
  40352e:	or     dl,al
  403530:	sbb    ecx,DWORD PTR [esi]
  403532:	dec    edx
  403533:	and    eax,ebx
  403535:	lods   eax,DWORD PTR ds:[esi]
  403536:	test   BYTE PTR [eax+0x7f77d19c],bl
  40353c:	push   ds
  40353d:	hlt    
  40353e:	fisub  DWORD PTR [ebx-0x59]
  403541:	shl    ebx,0x6c
  403544:	inc    eax
  403545:	dec    esp
  403546:	repnz mov ds:0x5134e37f,al
  40354c:	neg    ebp
  40354e:	loope  0x40354a
  403550:	xchg   edi,eax
  403551:	arpl   WORD PTR [edi+0x68a88d26],di
  403557:	fild   WORD PTR [ebx]
  403559:	xchg   ebx,eax
  40355a:	ins    BYTE PTR es:[edi],dx
  40355b:	sub    al,0xcb
  40355d:	and    ah,BYTE PTR [esi+0x67f52cf8]
  403563:	hlt    
  403564:	test   al,0x78
  403566:	mov    bh,0xfd
  403568:	mov    esi,DWORD PTR [esi-0x4488b6c5]
  40356e:	cmp    ah,BYTE PTR [edi+0x3dc2e5e8]
  403574:	add    DWORD PTR [edx],ebp
  403576:	adc    esp,DWORD PTR [ecx-0x3cc7e688]
  40357c:	and    DWORD PTR [esi+0x66a114b7],eax
  403582:	(bad)  
  403583:	mov    ebp,0xf46152a9
  403588:	sahf   
  403589:	cmc    
  40358a:	mov    ecx,ebp
  40358c:	mov    edi,0x84abc109
  403591:	mul    eax
  403593:	jns    0x4035c4
  403595:	ss dec edx
  403597:	retf   
  403598:	lds    ebp,FWORD PTR [ebx]
  40359a:	cmp    ah,ah
  40359c:	inc    ecx
  40359d:	add    ebx,ecx
  40359f:	jl     0x4035f0
  4035a1:	adc    al,0xb0
  4035a3:	add    al,0xb0
  4035a5:	and    al,0x13
  4035a7:	pop    esi
  4035a8:	xchg   BYTE PTR [ebx+0x584ddb96],ah
  4035ae:	mov    dh,0x6d
  4035b0:	popf   
  4035b1:	vcmpps xmm5,xmm5,XMMWORD PTR [eax+0x345564ca],0xb0
  4035ba:	xor    eax,0xc4b2b6b9
  4035bf:	mov    eax,ds:0xab1d78fd
  4035c4:	dec    eax
  4035c5:	mov    cs,WORD PTR [esi]
  4035c7:	mov    esi,0xb6c53d62
  4035cc:	js     0x4035b5
  4035ce:	push   0xffffff89
  4035d0:	cmp    al,0x50
  4035d2:	push   edx
  4035d3:	mov    ?,esi
  4035d5:	jmp    0x403583
  4035d7:	push   es
  4035d8:	sub    al,0xea
  4035da:	pop    eax
  4035db:	pop    edx
  4035dc:	fistp  WORD PTR [edx+ebp*1-0x4]
  4035e0:	adc    DWORD PTR [ecx],ebx
  4035e2:	pop    ss
  4035e3:	je     0x40360e
  4035e5:	jl     0x403576
  4035e7:	jnp    0x403648
  4035e9:	mov    cl,0xbc
  4035eb:	and    dl,bh
  4035ed:	sub    eax,0xfd03fe92
  4035f2:	nop
  4035f3:	out    0xd5,eax
  4035f5:	pop    ecx
  4035f6:	jns    0x40357b
  4035f8:	por    mm6,mm4
  4035fb:	imul   edx,esi,0x31
  4035fe:	gs cs es inc ecx
  403602:	mov    bh,0x96
  403604:	(bad)  [ecx-0x53cf3555]
  40360a:	cmp    DWORD PTR [ebx-0x265fef4f],0xffffff98
  403611:	mov    ds:0x89193357,al
  403616:	lahf   
  403617:	stc    
  403618:	aas    
  403619:	mov    esi,es
  40361b:	sbb    eax,0xe03d7551
  403620:	sbb    BYTE PTR [ebx-0x39661512],dl
  403626:	fisttp QWORD PTR ds:[ebx+0x4f]
  40362a:	sbb    BYTE PTR [edi+0x2d],dh
  40362d:	int    0x2a
  40362f:	cmc    
  403630:	push   ds
  403631:	ss xchg esi,eax
  403633:	cmc    
  403634:	(bad)  
  403635:	push   esp
  403636:	mov    esi,0x7b939ae3
  40363b:	pop    eax
  40363c:	sub    DWORD PTR [ecx],esp
  40363e:	in     eax,dx
  40363f:	inc    esp
  403640:	in     al,dx
  403641:	push   cs
  403642:	jg     0x4035fa
  403644:	adc    eax,0x61899a3a
  403649:	scas   al,BYTE PTR es:[edi]
  40364a:	dec    edi
  40364b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364c:	cld    
  40364d:	dec    edi
  40364e:	loop   0x403626
  403650:	test   al,0xf7
  403652:	pop    ecx
  403653:	repnz adc DWORD PTR [edx-0x141593d6],esi
  40365a:	cmp    esi,DWORD PTR [edi]
  40365c:	mov    esi,DWORD PTR [esi-0x7dbd8369]
  403662:	push   ebx
  403663:	cmc    
  403664:	push   eax
  403665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403666:	and    eax,0xa0a997d7
  40366b:	fld    TBYTE PTR [ebx]
  40366d:	sbb    ecx,DWORD PTR [edx]
  40366f:	inc    eax
  403670:	mov    ds:0x42ce0f4a,eax
  403675:	and    al,0xec
  403677:	dec    eax
  403678:	or     al,0x39
  40367a:	retf   
  40367b:	mov    DWORD PTR [esi-0x81f7cbd],esi
  403681:	inc    ebp
  403682:	mov    esp,DWORD PTR [esp-0x15]
  403686:	inc    ebp
  403687:	jecxz  0x40367c
  403689:	enter  0x8597,0xfa
  40368d:	in     al,dx
  40368e:	xchg   DWORD PTR [ecx],ecx
  403690:	test   eax,0x8cc54322
  403695:	cwde   
  403696:	sub    eax,0x2928fa76
  40369b:	ror    DWORD PTR [ebx-0x3cf1dc20],0xef
  4036a2:	push   ds
  4036a3:	ins    BYTE PTR es:[edi],dx
  4036a4:	ror    DWORD PTR [edi],1
  4036a6:	jo     0x4036dd
  4036a8:	mul    DWORD PTR [bx+si]
  4036ab:	repz ret 
  4036ad:	and    eax,0x4e987ebb
  4036b2:	cmp    eax,0x44c2e886
  4036b7:	add    eax,0xed6e5d78
  4036bc:	mov    DWORD PTR gs:[ecx],esi
  4036bf:	clc    
  4036c0:	dec    ecx
  4036c1:	inc    edi
  4036c2:	lea    ebp,[edx]
  4036c4:	adc    BYTE PTR ds:0xd94d9cd,0x3a
  4036cb:	fild   DWORD PTR [eax-0x2bc614a3]
  4036d1:	jecxz  0x4036ea
  4036d3:	(bad)
  4036d7:	or     al,0xe2
  4036d9:	rol    BYTE PTR [edx-0x59],1
  4036dc:	xchg   edx,eax
  4036dd:	jge    0x403733
  4036df:	dec    esi
  4036e0:	ret    0xfe94
  4036e3:	js     0x40369b
  4036e5:	in     eax,0xdb
  4036e7:	test   DWORD PTR [ebx+edi*8],esi
  4036ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036eb:	jb     0x40373b
  4036ed:	fidivr DWORD PTR [edx-0x6bb065b]
  4036f3:	adc    BYTE PTR [ecx],0x77
  4036f6:	mov    edi,0xc1bfe1f2
  4036fb:	lods   eax,DWORD PTR ds:[esi]
  4036fc:	aad    0x20
  4036fe:	fld    QWORD PTR [edx-0x1c]
  403701:	push   0xb53d831b
  403706:	fist   DWORD PTR [ebx+0xb]
  403709:	cdq    
  40370a:	loope  0x40376b
  40370c:	pusha  
  40370d:	inc    ebp
  40370e:	test   al,0x4a
  403710:	icebp  
  403711:	or     dl,BYTE PTR [edx-0x27]
  403714:	je     0x4036ba
  403716:	pop    ss
  403717:	and    eax,0x898f35b8
  40371c:	lods   eax,DWORD PTR ds:[esi]
  40371d:	jb     0x4036a5
  40371f:	mov    ebx,0x8506b75c
  403724:	pop    eax
  403725:	sub    BYTE PTR [ecx+0x54],cl
  403728:	xchg   edi,eax
  403729:	xchg   edx,eax
  40372a:	push   esp
  40372b:	mov    ebx,0x3338c810
  403730:	outs   dx,DWORD PTR ds:[esi]
  403731:	sti    
  403732:	iret   
  403733:	int3   
  403734:	js     0x4036e6
  403736:	scas   al,BYTE PTR es:[edi]
  403737:	repz in al,dx
  403739:	rcr    BYTE PTR [ebx+0x4473abdc],cl
  40373f:	or     BYTE PTR [ebx+ebp*2+0x3d251475],ah
  403746:	push   esi
  403747:	inc    edi
  403748:	xchg   DWORD PTR [edi],esp
  40374a:	ret    0x4bbd
  40374d:	mov    cl,0x1b
  40374f:	or     al,0x2b
  403751:	pop    edx
  403752:	sbb    eax,0xfb014e9d
  403757:	bound  eax,QWORD PTR [ecx-0x73]
  40375a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40375b:	mov    DWORD PTR [esi+0x8],ecx
  40375e:	sub    dl,dl
  403760:	sbb    DWORD PTR [eax+0x28],edx
  403763:	and    ecx,ebp
  403765:	cmp    ch,BYTE PTR [edx-0x27]
  403768:	imul   esi,DWORD PTR [edx+0x68],0xd197c2bf
  40376f:	mov    dl,0x3c
  403771:	cmp    esi,ecx
  403773:	dec    ebx
  403774:	outs   dx,BYTE PTR ds:[esi]
  403775:	dec    esi
  403776:	dec    esi
  403777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403778:	adc    eax,0x9f7f3b9d
  40377d:	dec    edi
  40377e:	shl    eax,1
  403780:	cmp    edi,DWORD PTR [edx+0x67629c12]
  403786:	inc    esi
  403787:	aas    
  403788:	bnd jae 0x4037e5
  40378b:	push   cs
  40378c:	out    dx,al
  40378d:	inc    esi
  40378e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40378f:	xchg   edi,eax
  403790:	jmp    0x202feae5
  403795:	mov    al,BYTE PTR [edx]
  403797:	jb     0x4037fe
  403799:	shl    DWORD PTR [esi-0x538d7bba],0xe
  4037a0:	pop    ebp
  4037a1:	(bad)  
  4037a2:	int3   
  4037a3:	lock cli 
  4037a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037a6:	mov    ecx,0xd698fa37
  4037ab:	aad    0x5
  4037ad:	stos   BYTE PTR es:[edi],al
  4037ae:	aam    0xb4
  4037b0:	in     eax,0xc7
  4037b2:	inc    edi
  4037b3:	cs sahf 
  4037b5:	mov    cl,0xd8
  4037b7:	jmp    0x7882ba75
  4037bc:	xchg   edi,ebx
  4037be:	sub    eax,0x78bacb4e
  4037c3:	pop    ecx
  4037c4:	mov    dl,0xaf
  4037c6:	sbb    ebx,edi
  4037c8:	sbb    al,0x42
  4037ca:	fisubr DWORD PTR [esi+0x5f4d6dc9]
  4037d0:	xor    eax,0x7a1e95a9
  4037d5:	daa    
  4037d6:	xchg   esp,eax
  4037d7:	jns    0x4037ca
  4037d9:	push   es
  4037da:	popf   
  4037db:	jno    0x403845
  4037dd:	cmc    
  4037de:	aam    0x13
  4037e0:	cwde   
  4037e1:	sbb    dh,al
  4037e3:	lds    esi,FWORD PTR [edi-0x186900b0]
  4037e9:	xchg   esp,eax
  4037ea:	dec    eax
  4037eb:	push   ss
  4037ec:	push   0xb
  4037ee:	cmp    edx,edx
  4037f0:	pop    es
  4037f1:	push   esp
  4037f2:	jmp    0x403817
  4037f4:	mov    cl,0xca
  4037f6:	(bad)  
  4037f7:	sub    dh,BYTE PTR [ebp-0x26]
  4037fa:	fucom  st(6)
  4037fc:	outs   dx,DWORD PTR ds:[esi]
  4037fd:	pop    esi
  4037fe:	xor    BYTE PTR [eax+0x379184dc],dl
  403804:	mov    edx,0x9328def6
  403809:	sub    cl,cl
  40380b:	div    DWORD PTR [esi+0x771f2461]
  403811:	shl    bh,0x17
  403814:	mov    eax,ds:0xbb7b79fb
  403819:	jnp    0x40381f
  40381b:	sar    BYTE PTR [esi-0x25],cl
  40381e:	bound  ecx,QWORD PTR [ebx]
  403820:	setg   BYTE PTR ds:0x99e6ef68
  403827:	cwde   
  403828:	push   cs
  403829:	mov    esi,0xba7fe251
  40382e:	mov    dl,0x25
  403830:	bound  eax,QWORD PTR [edx+0x4ab64205]
  403836:	xchg   esi,eax
  403837:	pop    esp
  403838:	sar    BYTE PTR [esi+0x43047ce9],0xf0
  40383f:	test   eax,0x28cd972
  403844:	add    al,0x43
  403846:	jecxz  0x403849
  403848:	push   cs
  403849:	stos   BYTE PTR es:[edi],al
  40384a:	outs   dx,DWORD PTR ds:[esi]
  40384b:	cmp    DWORD PTR [ebx-0x64],ecx
  40384e:	out    dx,eax
  40384f:	(bad)  
  403850:	mov    edx,0x7c926444
  403855:	mov    edi,0x185c3e95
  40385a:	push   ss
  40385b:	fdivr  st(5),st
  40385d:	sub    eax,0xdbf4afd3
  403862:	sbb    dl,BYTE PTR [esi+0x63]
  403865:	jg     0x4038b8
  403867:	mov    eax,es:0xb1ce0b2a
  40386d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386e:	test   al,0xd
  403870:	mov    WORD PTR [edi+0x46],ss
  403873:	jo     0x4038a6
  403875:	mov    ah,0x90
  403877:	xor    dl,BYTE PTR [ebp-0x70]
  40387a:	or     bh,cl
  40387c:	popf   
  40387d:	inc    edi
  40387e:	(bad)  [ebx-0x6a]
  403881:	loopne 0x403808
  403883:	out    0xe2,eax
  403885:	jp     0x403876
  403887:	jno    0x403896
  403889:	(bad)  
  40388a:	mov    esp,0x16eac8c1
  40388f:	enter  0x955b,0x8a
  403893:	jle    0x403823
  403895:	xor    BYTE PTR [ebx+0x3d],0x5c
  403899:	add    BYTE PTR [ebp+0x0],ah
  40389c:	in     al,dx
  40389d:	imul   eax,DWORD PTR [ebx-0xc60c30],0x1f
  4038a4:	push   ss
  4038a5:	ret    
  4038a6:	cwde   
  4038a7:	aad    0x53
  4038a9:	ins    DWORD PTR es:[edi],dx
  4038aa:	cmp    al,0x2a
  4038ac:	mov    ebp,0xc77e5e7f
  4038b1:	dec    edi
  4038b2:	sbb    al,0xb2
  4038b4:	cwde   
  4038b5:	clc    
  4038b6:	imul   esp,DWORD PTR [esi+0x5fcf28ca],0x2f
  4038bd:	out    dx,eax
  4038be:	in     al,0x75
  4038c0:	stos   BYTE PTR es:[edi],al
  4038c1:	sub    al,0xbc
  4038c3:	and    DWORD PTR [esi],eax
  4038c5:	mov    bh,0x4a
  4038c7:	mov    esp,0x18c20420
  4038cc:	rol    ebx,0x51
  4038cf:	cmp    al,0xf
  4038d1:	and    dh,BYTE PTR ds:0x60689cdc
  4038d7:	inc    edi
  4038d8:	sub    al,0x5
  4038da:	jge    0x403888
  4038dc:	scas   al,BYTE PTR es:[edi]
  4038dd:	cli    
  4038de:	sbb    BYTE PTR [ecx-0x48],ah
  4038e1:	xor    al,0x9e
  4038e3:	mov    al,ds:0xa81aa573
  4038e8:	and    al,0x67
  4038ea:	mov    bl,BYTE PTR [ebx+edi*1]
  4038ed:	mov    DWORD PTR [edi+0x5dd24f0d],ecx
  4038f3:	jns    0x403973
  4038f5:	aam    0x99
  4038f7:	jb     0x403968
  4038f9:	aas    
  4038fa:	dec    edi
  4038fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038fc:	mov    DWORD PTR [edi+0x44c19850],ebp
  403902:	mov    edx,0xedbb93ab
  403907:	popf   
  403908:	mov    al,0x63
  40390a:	mov    al,ds:0x862dbe72
  40390f:	add    al,0xb8
  403911:	nop
  403912:	sahf   
  403913:	xlat   BYTE PTR es:[ebx]
  403915:	mov    esi,0x8ec575e7
  40391a:	push   esi
  40391b:	cmp    DWORD PTR [ebx],edi
  40391d:	hlt    
  40391e:	jnp    0x4038f0
  403920:	adc    ebx,DWORD PTR [esi]
  403922:	in     eax,0x89
  403924:	sbb    eax,0x83942377
  403929:	and    eax,0x178063a2
  40392e:	jecxz  0x40394e
  403930:	cmp    al,0x3
  403932:	add    eax,ecx
  403934:	pop    ecx
  403935:	adc    dl,cl
  403937:	cmp    eax,0x3b66e9c9
  40393c:	or     al,0xd0
  40393e:	sahf   
  40393f:	mov    dl,0x30
  403941:	cmp    DWORD PTR [eax],edx
  403943:	out    dx,eax
  403944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403945:	(bad)  [edx+0x69aa3833]
  40394b:	mov    eax,edx
  40394d:	clc    
  40394e:	adc    DWORD PTR [eax],0xffffffa4
  403951:	js     0x4038db
  403953:	ret    
  403954:	shl    BYTE PTR [ebp-0x17],0xe5
  403958:	out    dx,eax
  403959:	adc    esi,DWORD PTR [eax-0x5b]
  40395c:	sub    BYTE PTR ds:0x6146ebf5,0x6f
  403963:	sbb    DWORD PTR [edx+0xb8182c7],0xffffffda
  40396a:	mov    edi,0x91d58226
  40396f:	enter  0xcc2e,0xbb
  403973:	cmp    cl,BYTE PTR ss:[ebp+0x25]
  403977:	cmp    DWORD PTR [ecx-0x7b],edx
  40397a:	inc    esi
  40397b:	aaa    
  40397c:	cli    
  40397d:	xchg   ebp,eax
  40397e:	adc    DWORD PTR [esi],esp
  403980:	pop    eax
  403981:	ins    DWORD PTR es:[edi],dx
  403982:	pop    ecx
  403983:	pop    edi
  403984:	je     0x4039ad
  403986:	pop    esp
  403987:	fwait
  403988:	mov    es,WORD PTR [edx]
  40398a:	arpl   WORD PTR [ebp+0x56],sp
  40398d:	mov    eax,ds:0xdbfb0409
  403992:	jle    0x403992
  403994:	lahf   
  403995:	mov    ebx,0xa412fb3a
  40399a:	int3   
  40399b:	stc    
  40399c:	dec    edi
  40399d:	adc    eax,0x28225bcb
  4039a2:	pop    ss
  4039a3:	loopne 0x403a02
  4039a5:	pop    esp
  4039a6:	fldcw  WORD PTR [esi]
  4039a8:	mov    al,ds:0xea9d4a6e
  4039ad:	ret    
  4039ae:	sbb    al,0x1d
  4039b0:	push   ss
  4039b1:	cld    
  4039b2:	pushf  
  4039b3:	dec    esp
  4039b4:	push   es
  4039b5:	lods   al,BYTE PTR ds:[esi]
  4039b6:	test   eax,0xe094b2fa
  4039bb:	in     eax,dx
  4039bc:	out    0x54,eax
  4039be:	jl     0x403a10
  4039c0:	gs push eax
  4039c2:	pushf  
  4039c3:	dec    esi
  4039c4:	in     eax,0xa
  4039c6:	mov    eax,ds:0xb55d653b
  4039cb:	fwait
  4039cc:	add    al,0x9d
  4039ce:	jmp    0x4039d2
  4039d0:	mov    esp,0x12481d91
  4039d5:	fwait
  4039d6:	nop
  4039d7:	stc    
  4039d8:	cwde   
  4039d9:	sbb    BYTE PTR [ebp-0x63e51d17],0xdd
  4039e0:	xchg   ebp,eax
  4039e1:	int3   
  4039e2:	add    eax,0x4e2aad83
  4039e7:	add    al,0x39
  4039e9:	and    cl,BYTE PTR [eax+0x2fd72786]
  4039ef:	push   0xf597d91b
  4039f4:	xchg   DWORD PTR [ebx+esi*1+0x66],ebx
  4039f8:	popf   
  4039f9:	inc    DWORD PTR [ecx-0x62ca99]
  4039ff:	mov    esi,0xc7a78672
  403a04:	and    bl,BYTE PTR [ecx]
  403a06:	mov    dh,0xdc
  403a08:	in     ax,dx
  403a0a:	jns    0x4039e9
  403a0c:	arpl   sp,si
  403a0e:	mov    bl,0xde
  403a10:	pop    edi
  403a11:	mov    dl,0xb9
  403a13:	adc    al,0x2e
  403a15:	es enter 0xe9bf,0x77
  403a1a:	mov    ah,0x88
  403a1c:	std    
  403a1d:	(bad)  
  403a1e:	in     eax,0xe9
  403a20:	mov    al,ds:0x72348a0e
  403a25:	cmc    
  403a26:	popf   
  403a27:	mov    DWORD PTR [esi],esi
  403a29:	mov    eax,0x6646f53b
  403a2e:	jnp    0x403a31
  403a30:	inc    edx
  403a31:	imul   esp,DWORD PTR [ebp+0x2],0x5
  403a35:	adc    al,0x5
  403a37:	sti    
  403a38:	xor    al,0x4e
  403a3a:	push   ecx
  403a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3c:	or     ch,BYTE PTR [edx-0x57]
  403a3f:	push   ss
  403a40:	mov    ebp,0x8dfb56db
  403a45:	loopne 0x403a09
  403a47:	ficomp WORD PTR [ebx]
  403a49:	mov    edx,0xd1feff8c
  403a4e:	sbb    DWORD PTR [esi],edx
  403a50:	mov    ah,0xea
  403a52:	or     dh,dh
  403a54:	call   0x90801a2
  403a59:	outs   dx,DWORD PTR ds:[esi]
  403a5a:	das    
  403a5b:	std    
  403a5c:	jmp    0x380f:0xd867b03d
  403a63:	ins    BYTE PTR es:[edi],dx
  403a64:	bound  edx,QWORD PTR ds:0xd98e53cd
  403a6a:	(bad)  
  403a6c:	bound  eax,QWORD PTR [esi+0x1b]
  403a6f:	and    eax,0x68a2704
  403a74:	xor    edi,esp
  403a76:	int    0xae
  403a78:	scas   al,BYTE PTR es:[edi]
  403a79:	sbb    esi,ecx
  403a7b:	dec    eax
  403a7c:	ds sbb eax,0x918f47c3
  403a82:	int    0xae
  403a84:	push   eax
  403a85:	popf   
  403a86:	aad    0x95
  403a88:	dec    esi
  403a89:	cmc    
  403a8a:	jp     0x403a31
  403a8c:	outs   dx,BYTE PTR ds:[esi]
  403a8d:	push   ebx
  403a8e:	sub    al,0xd8
  403a90:	sub    al,0xa6
  403a92:	xlat   BYTE PTR ds:[ebx]
  403a93:	or     al,0xec
  403a95:	fdiv   QWORD PTR [ebx-0x78]
  403a98:	rcl    BYTE PTR [edx-0xbe33a55],0x9e
  403a9f:	gs mov ah,0x72
  403aa2:	dec    esp
  403aa3:	and    bh,al
  403aa5:	push   esi
  403aa6:	std    
  403aa7:	inc    edx
  403aa8:	into   
  403aa9:	jmp    0xf5333c13
  403aae:	test   eax,0x38bdbdcb
  403ab3:	add    eax,0xd2fc3e6
  403ab8:	les    esp,FWORD PTR [esi+eax*2]
  403abb:	push   esi
  403abc:	dec    esp
  403abd:	add    ebx,0x1d
  403ac0:	retf   
  403ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac2:	shr    DWORD PTR [ebp-0x55cf128f],0x8
  403ac9:	push   edi
  403aca:	mov    ch,0x75
  403acc:	sub    BYTE PTR [edx],bh
  403ace:	add    ch,BYTE PTR [ebp+0x87f5b82]
  403ad4:	push   esp
  403ad5:	es ja  0x403b1a
  403ad8:	mov    al,0x38
  403ada:	adc    DWORD PTR [edx-0x4c],eax
  403add:	add    ebx,0x3aaca07e
  403ae3:	push   eax
  403ae4:	rcl    BYTE PTR [ebp-0x7],1
  403ae7:	mov    edx,0x3cbdd213
  403aec:	mov    eax,0xb3468474
  403af1:	(bad)  
  403af2:	cmp    DWORD PTR [esi+edx*4],ecx
  403af5:	cmp    eax,0xa9e54bb3
  403afa:	pop    ebx
  403afb:	scas   al,BYTE PTR es:[edi]
  403afc:	xor    ah,BYTE PTR [eax+0x24]
  403aff:	and    BYTE PTR [eax+0x52a0802c],0xe8
  403b06:	popa   
  403b07:	add    DWORD PTR [ecx],eax
  403b09:	addr16 dec esi
  403b0b:	xchg   DWORD PTR [esi-0x1b],edi
  403b0e:	dec    ebp
  403b0f:	iret   
  403b10:	and    eax,0x8ab073b3
  403b15:	out    dx,al
  403b16:	je     0x403b15
  403b18:	pop    ss
  403b19:	imul   edi,DWORD PTR [ebp-0x65],0x4f514fb5
  403b20:	stos   DWORD PTR es:[edi],eax
  403b21:	mov    edi,0xce0e6acf
  403b26:	ficomp DWORD PTR [eax]
  403b28:	xchg   ecx,eax
  403b29:	dec    eax
  403b2a:	jle    0x403b32
  403b2c:	mov    ebp,0x49bb28ec
  403b31:	jl     0x403b1e
  403b33:	mov    ?,ecx
  403b35:	nop
  403b36:	mov    ah,0xf2
  403b38:	mov    al,0x17
  403b3a:	test   eax,0x62d6b96e
  403b3f:	sbb    DWORD PTR [esi-0x4c],eax
  403b42:	inc    edx
  403b43:	jmp    0xca29:0x3d78a7d9
  403b4a:	arpl   dx,si
  403b4c:	test   DWORD PTR [ebp-0x7363dd73],0xf4ae050d
  403b56:	arpl   cx,bx
  403b58:	adc    eax,0x736361ad
  403b5d:	stc    
  403b5e:	gs xchg ecx,eax
  403b60:	pop    edi
  403b61:	fldenv [ecx]
  403b63:	lahf   
  403b64:	paddsb mm7,QWORD PTR [ecx]
  403b67:	inc    esp
  403b68:	(bad)  
  403b69:	pop    ecx
  403b6a:	pusha  
  403b6b:	add    edi,DWORD PTR [eax]
  403b6d:	mov    bh,0x6a
  403b6f:	jl     0x403be2
  403b71:	push   ss
  403b72:	push   ds
  403b73:	xchg   DWORD PTR [ecx-0x645e5ba4],esp
  403b79:	or     al,0xfc
  403b7b:	es push ebp
  403b7d:	and    DWORD PTR [ebx+0x25c0b28c],esp
  403b83:	or     al,0x7d
  403b85:	xor    DWORD PTR [edi],ecx
  403b87:	dec    eax
  403b88:	add    ch,BYTE PTR [ebp+0x50]
  403b8b:	push   ds
  403b8c:	inc    ebx
  403b8d:	inc    esp
  403b8e:	sub    BYTE PTR [edi+0x17],al
  403b91:	sahf   
  403b92:	and    al,0x3a
  403b94:	add    ecx,DWORD PTR [ebx-0x39a50736]
  403b9a:	hlt    
  403b9b:	pusha  
  403b9c:	dec    ebp
  403b9d:	jae    0x403ba5
  403b9f:	xor    esi,DWORD PTR [esi]
  403ba1:	inc    ebx
  403ba2:	xchg   edx,eax
  403ba3:	and    DWORD PTR [eax-0x5d256822],ebx
  403ba9:	cdq    
  403baa:	mov    eax,0xef47ae89
  403baf:	jmp    0x403b33
  403bb1:	lds    ebp,FWORD PTR [ebx]
  403bb3:	push   ds
  403bb4:	bound  ebp,QWORD PTR [edi+0x1e]
  403bb7:	mul    DWORD PTR [edx-0x40638549]
  403bbd:	adc    eax,0x6e82b586
  403bc2:	fwait
  403bc3:	cmp    eax,0xf82680ca
  403bc8:	lods   al,BYTE PTR ds:[esi]
  403bc9:	push   edi
  403bca:	clc    
  403bcb:	push   0x7e
  403bcd:	leave  
  403bce:	mov    bh,0xc3
  403bd0:	and    ah,BYTE PTR [edi+edi*1-0x25c29ea4]
  403bd7:	daa    
  403bd8:	add    al,0x2c
  403bda:	call   0x88f03a49
  403bdf:	cmp    dl,BYTE PTR [esi]
  403be1:	mov    dh,0xc7
  403be3:	xor    dl,BYTE PTR [edx+0xe1269fd]
  403be9:	cld    
  403bea:	and    cl,0xe5
  403bed:	jo     0x403bca
  403bef:	push   ss
  403bf0:	jge    0x403bd1
  403bf2:	ds mov eax,0xa349967
  403bf8:	shr    BYTE PTR [ebx],1
  403bfa:	loopne 0x403bec
  403bfc:	push   ds
  403bfd:	(bad)  
  403bfe:	loopne 0x403bbd
  403c00:	dec    edi
  403c01:	xchg   ebx,eax
  403c02:	pushf  
  403c03:	dec    ebx
  403c04:	int    0x9
  403c06:	je     0x403c24
  403c08:	stos   BYTE PTR es:[edi],al
  403c09:	int    0xc2
  403c0b:	xchg   ebx,eax
  403c0c:	pxor   mm6,mm7
  403c0f:	lahf   
  403c10:	or     BYTE PTR [ecx+0x38cbd2fc],al
  403c16:	pop    edi
  403c17:	mov    dl,dl
  403c19:	in     eax,0x27
  403c1b:	loop   0x403c60
  403c1d:	cld    
  403c1e:	int3   
  403c1f:	jg     0x403c77
  403c21:	xor    eax,0x320b85a6
  403c26:	test   DWORD PTR [esi-0x43304c0c],esp
  403c2c:	push   ebx
  403c2d:	inc    esp
  403c2e:	clc    
  403c2f:	jmp    0x403c3c
  403c31:	test   BYTE PTR [edi],dl
  403c33:	dec    edi
  403c34:	bound  ebp,QWORD PTR [edx]
  403c36:	dec    ebx
  403c37:	jp     0x403c92
  403c39:	stos   BYTE PTR es:[edi],al
  403c3a:	or     al,cl
  403c3c:	mov    al,ds:0x945259dc
  403c41:	gs loopne 0x403cb4
  403c44:	push   edi
  403c45:	lock lock mov bh,0xb6
  403c49:	popf   
  403c4a:	iret   
  403c4b:	lea    ebx,[ecx+0x424dcc99]
  403c51:	sub    cl,ah
  403c53:	and    BYTE PTR [edx-0x3eb0cd04],dl
  403c59:	dec    ecx
  403c5a:	arpl   WORD PTR [edx+0x654fcb87],bx
  403c60:	dec    esp
  403c61:	xor    esp,edi
  403c63:	jae    0x403cb2
  403c65:	lds    ecx,FWORD PTR [esi-0x71]
  403c68:	adc    BYTE PTR [esi+0x77283604],ah
  403c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c6f:	pop    esi
  403c70:	xchg   esp,eax
  403c71:	dec    BYTE PTR [ebx]
  403c73:	rcl    DWORD PTR [esi],1
  403c75:	push   eax
  403c76:	xlat   BYTE PTR ds:[ebx]
  403c77:	mov    BYTE PTR [eax-0x34],dh
  403c7a:	push   ebp
  403c7b:	lea    edx,[ebx-0x631ae731]
  403c81:	sub    esp,esp
  403c83:	cmp    eax,0x40087553
  403c88:	and    al,0x45
  403c8a:	adc    DWORD PTR [edi],esi
  403c8c:	or     BYTE PTR [ebp-0x71],dl
  403c8f:	imul   eax,DWORD PTR [eax-0x21],0x3d
  403c93:	xor    edi,DWORD PTR [ebx]
  403c95:	aas    
  403c96:	mov    ds:0xb045bc5d,al
  403c9b:	mov    ds:0x1c144998,eax
  403ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca1:	or     al,0xd7
  403ca3:	fisubr DWORD PTR [edi+ecx*4]
  403ca6:	arpl   di,bp
  403ca8:	sbb    eax,0xa0dc8c73
  403cad:	ret    
  403cae:	mov    bh,0xce
  403cb0:	loop   0x403cff
  403cb2:	nop
  403cb3:	ret    
  403cb4:	call   ebp
  403cb6:	xor    edi,edx
  403cb8:	shl    DWORD PTR [esi-0x734b67b3],cl
  403cbe:	xchg   ebp,eax
  403cbf:	lods   al,BYTE PTR ds:[esi]
  403cc0:	(bad)  
  403cc1:	xchg   esp,eax
  403cc2:	xchg   ebp,eax
  403cc3:	push   es
  403cc4:	mov    esp,0x68fe8117
  403cc9:	outs   dx,BYTE PTR ds:[esi]
  403cca:	sub    ch,BYTE PTR [edx+0x7de25051]
  403cd0:	sub    al,0xb8
  403cd2:	inc    esp
  403cd3:	into   
  403cd4:	gs push edi
  403cd6:	jb     0x403cd3
  403cd8:	jmp    0xc445b088
  403cdd:	sbb    DWORD PTR [ebp-0x4],edx
  403ce0:	xchg   ecx,esi
  403ce2:	test   al,0x30
  403ce4:	sub    al,0xb3
  403ce6:	daa    
  403ce7:	xchg   ebx,eax
  403ce8:	ffreep st(2)
  403cea:	outs   dx,BYTE PTR ds:[esi]
  403ceb:	retf   
  403cec:	ror    ebp,cl
  403cee:	sar    cl,cl
  403cf0:	or     al,0xe6
  403cf2:	and    BYTE PTR [ecx+0x63ddce58],0xe1
  403cf9:	scas   eax,DWORD PTR es:[edi]
  403cfa:	sar    DWORD PTR [ebp+0x5db13f4f],1
  403d00:	sbb    eax,0x72542407
  403d05:	mov    ds:0x1cf075c7,eax
  403d0a:	mov    ah,0xc0
  403d0c:	inc    ebp
  403d0d:	ficomp DWORD PTR [ebp-0x31]
  403d10:	mov    al,0xf6
  403d12:	inc    esi
  403d13:	add    ebx,edx
  403d15:	ds retf 0xbfbf
  403d19:	rcr    DWORD PTR [edx],0x77
  403d1c:	pop    ebx
  403d1d:	mov    DWORD PTR [ebx-0x4a],esi
  403d20:	minps  xmm5,xmm0
  403d23:	fmul   DWORD PTR [esp+ecx*1-0x430fd6e0]
  403d2a:	in     al,0xb7
  403d2c:	retf   0xbb83
  403d2f:	pop    esi
  403d30:	outs   dx,DWORD PTR ds:[esi]
  403d31:	push   0xbbbdae68
  403d36:	ds clc 
  403d38:	push   ds
  403d39:	cmp    eax,0xb1240d4c
  403d3e:	push   esp
  403d3f:	adc    bl,0xd0
  403d42:	dec    eax
  403d43:	mov    bl,0x55
  403d45:	mov    DWORD PTR [ebx*1+0x599db20b],0xfac5d526
  403d50:	add    eax,DWORD PTR [esi-0x2bb3d50f]
  403d56:	sbb    BYTE PTR [edx+eax*8],dl
  403d59:	or     BYTE PTR [edx+0x79],cl
  403d5c:	dec    ebx
  403d5d:	jmp    0x24073f39
  403d62:	ja     0x403d47
  403d64:	gs int3 
  403d66:	cmp    al,0x6
  403d68:	ret    
  403d69:	stc    
  403d6a:	push   ebx
  403d6b:	fild   DWORD PTR es:[esi]
  403d6e:	add    WORD PTR [esi+ecx*2],si
  403d72:	and    BYTE PTR [ecx],ah
  403d74:	dec    edx
  403d75:	bound  esi,QWORD PTR [esi-0x12]
  403d78:	sbb    ebp,DWORD PTR [ebp+0x23]
  403d7b:	cmc    
  403d7c:	add    al,0x8b
  403d7e:	loopne 0x403db2
  403d80:	test   al,0x12
  403d82:	pop    esp
  403d83:	daa    
  403d84:	xor    eax,0xe429fc45
  403d89:	sbb    cl,0x25
  403d8c:	cmp    BYTE PTR ds:0x1a4f9fa2,ch
  403d92:	retf   
  403d93:	mov    edi,0xb717958f
  403d98:	out    dx,al
  403d99:	cld    
  403d9a:	pop    eax
  403d9b:	mov    eax,0xff8bfaa3
  403da0:	sbb    eax,0x4aa072df
  403da5:	mov    ch,0xea
  403da7:	dec    eax
  403da8:	mov    eax,ds:0x54b9cdd8
  403dad:	add    bh,BYTE PTR [ebx-0x5b]
  403db0:	mov    dl,0xb0
  403db2:	push   ebp
  403db3:	adc    DWORD PTR ds:0xee838096,ebx
  403db9:	bound  edi,QWORD PTR [ebp-0x79]
  403dbc:	shl    DWORD PTR [ebp+0x2f],cl
  403dbf:	shl    BYTE PTR [eax+0x5c],1
  403dc2:	cmp    esi,DWORD PTR [edx+ebx*2-0x2e102fab]
  403dc9:	ret    0xe1f8
  403dcc:	mov    DWORD PTR [eax-0x7f4a8ef],0x6a13ec10
  403dd6:	add    ebp,DWORD PTR [edx]
  403dd8:	sbb    DWORD PTR [ebx],eax
  403dda:	sub    DWORD PTR [ebp+0x20adc4ca],ebx
  403de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de1:	or     DWORD PTR ds:0x9eb74cb9,esp
  403de7:	jge    0x403d86
  403de9:	jl     0x403dd7
  403deb:	popa   
  403dec:	sbb    BYTE PTR [ecx+0xe],bl
  403def:	mov    bl,0xd4
  403df1:	mov    DWORD PTR [edx],0x1390aa99
  403df7:	dec    esp
  403df8:	inc    ecx
  403df9:	add    al,0x8b
  403dfb:	test   eax,edx
  403dfd:	sti    
  403dfe:	scas   al,BYTE PTR es:[edi]
  403dff:	std    
  403e00:	test   eax,0x28ccee4d
  403e05:	pusha  
  403e06:	add    esp,DWORD PTR [ebx+0x3d]
  403e09:	scas   eax,DWORD PTR es:[edi]
  403e0a:	pop    esi
  403e0b:	xchg   esp,eax
  403e0c:	sbb    al,0x8f
  403e0e:	dec    BYTE PTR [edi-0x15a5efa3]
  403e14:	fnsave [ebx-0x172e8ca7]
  403e1a:	push   ss
  403e1b:	aas    
  403e1c:	int3   
  403e1d:	mov    ebp,DWORD PTR [esi-0x72e0f379]
  403e23:	sub    ebx,ecx
  403e25:	mov    ch,0x99
  403e27:	imul   edi,DWORD PTR [eax+0x5d],0xe47c5396
  403e2e:	mov    cl,0x85
  403e30:	inc    edi
  403e31:	xchg   esi,ecx
  403e33:	sbb    esp,DWORD PTR [ebx]
  403e35:	mov    cl,0x26
  403e37:	pusha  
  403e38:	mov    eax,ds:0xaed84b21
  403e3d:	sahf   
  403e3e:	inc    ebp
  403e3f:	lods   al,BYTE PTR ds:[esi]
  403e40:	ins    DWORD PTR es:[edi],dx
  403e41:	cld    
  403e42:	cmp    bh,BYTE PTR [edi+0x63]
  403e45:	jmp    0x403e92
  403e47:	leave  
  403e48:	in     al,dx
  403e49:	clc    
  403e4a:	les    ebp,FWORD PTR [edx]
  403e4c:	and    BYTE PTR [edx+0x5],al
  403e4f:	in     al,dx
  403e50:	test   eax,0xc9e52afe
  403e55:	cmp    ebp,eax
  403e57:	jg     0x403ea3
  403e59:	stc    
  403e5a:	sbb    al,0xc0
  403e5c:	adc    ecx,esp
  403e5e:	ins    BYTE PTR es:[edi],dx
  403e5f:	sar    edi,0x6b
  403e62:	jno    0x403ec4
  403e64:	jne    0x403eb9
  403e66:	xor    esp,DWORD PTR [ecx]
  403e68:	dec    ebx
  403e69:	cld    
  403e6a:	mov    cl,0xeb
  403e6c:	pop    ds
  403e6d:	jge    0x403e97
  403e6f:	pop    ss
  403e70:	xor    DWORD PTR ds:0x275ff680,edx
  403e76:	jmp    0x403eef
  403e78:	xchg   esp,eax
  403e79:	rcl    DWORD PTR [edi-0x33015731],cl
  403e7f:	mov    al,BYTE PTR [ebx]
  403e81:	repnz repnz mov ds:0xd897094,al
  403e88:	inc    edi
  403e89:	shl    ah,0x3c
  403e8c:	inc    esp
  403e8d:	lods   eax,DWORD PTR ds:[esi]
  403e8e:	fwait
  403e8f:	and    bl,dl
  403e91:	cdq    
  403e92:	adc    al,0x29
  403e94:	arpl   WORD PTR [edi+0x0],di
  403e97:	fcmovnu st,st(5)
  403e99:	sub    BYTE PTR [ebp-0x8],dh
  403e9c:	test   BYTE PTR [esi],dl
  403e9e:	mov    ch,0x99
  403ea0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403ea2:	sbb    edx,DWORD PTR [ecx+0x47059d9d]
  403ea8:	cs loop 0x403e3f
  403eab:	nop
  403eac:	xlat   BYTE PTR ds:[ebx]
  403ead:	and    ah,BYTE PTR [ecx]
  403eaf:	xor    DWORD PTR ds:[ecx],ebp
  403eb2:	popf   
  403eb3:	mov    cl,0xa4
  403eb5:	pop    esi
  403eb6:	loope  0x403e87
  403eb8:	icebp  
  403eb9:	sub    ebp,DWORD PTR [ebp+0x50c73753]
  403ebf:	and    dl,BYTE PTR [esi+0x2]
  403ec2:	mov    BYTE PTR [esi-0x74],cl
  403ec5:	std    
  403ec6:	cli    
  403ec7:	jecxz  0x403ea2
  403ec9:	push   cs
  403eca:	pop    ebp
  403ecb:	pop    edx
  403ecc:	jmp    0xdc2f0e31
  403ed1:	jle    0x403eda
  403ed3:	popa   
  403ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed5:	add    BYTE PTR [eax],ch
  403ed7:	sar    edx,1
  403ed9:	shl    DWORD PTR [eax],cl
  403edb:	(bad)  
  403edd:	dec    ecx
  403ede:	mov    al,al
  403ee0:	mov    al,ds:0x815c4bbb
  403ee5:	hlt    
  403ee6:	push   ebp
  403ee7:	sub    DWORD PTR [edi],0xffffffec
  403eea:	adc    DWORD PTR [edx+0x4bd2737a],ebx
  403ef0:	call   0xaf02:0x5261be59
  403ef7:	cdq    
  403ef8:	into   
  403ef9:	lods   eax,DWORD PTR ds:[esi]
  403efa:	loopne 0x403efd
  403efc:	(bad)  
  403efe:	call   0xf908:0xacb0ee62
  403f05:	ror    edi,0xc5
  403f08:	xchg   edx,eax
  403f09:	push   ebx
  403f0a:	mov    ebp,DWORD PTR [esi+0x740db15f]
  403f10:	popf   
  403f11:	cmp    eax,0x4077c620
  403f16:	fsubr  DWORD PTR [edx]
  403f18:	(bad)  
  403f19:	into   
  403f1a:	lahf   
  403f1b:	push   0xa938efbe
  403f20:	xor    al,0x59
  403f22:	setl   BYTE PTR [edx*4+0x372010e5]
  403f2a:	fmul   QWORD PTR [ebx-0x50]
  403f2d:	retf   
  403f2e:	sub    eax,0xc4f64a73
  403f33:	pop    ebx
  403f34:	cli    
  403f35:	xchg   ebp,eax
  403f36:	shl    DWORD PTR [ecx-0x7de54dc],0x70
  403f3d:	pop    ds
  403f3e:	(bad)  
  403f3f:	cmp    BYTE PTR [edi],bl
  403f41:	imul   ah
  403f43:	daa    
  403f44:	stos   DWORD PTR es:[edi],eax
  403f45:	jb     0x403f12
  403f47:	sub    ecx,eax
  403f49:	or     BYTE PTR [eax+0x57],al
  403f4c:	rcr    BYTE PTR [ecx+0x43539ac8],1
  403f52:	xor    BYTE PTR [ebp-0x25],ch
  403f55:	inc    edx
  403f56:	mov    ah,0x7b
  403f58:	dec    ebx
  403f59:	mov    cl,0x53
  403f5b:	and    al,0x7e
  403f5d:	cdq    
  403f5e:	mov    edx,DWORD PTR [esi]
  403f60:	xor    BYTE PTR [ebp+0x717428b2],dh
  403f66:	pop    eax
  403f67:	adc    eax,0xd6567ee7
  403f6c:	lds    esi,FWORD PTR [edx+0x3e]
  403f6f:	test   DWORD PTR [eax-0x32],ebp
  403f72:	(bad)  
  403f73:	xlat   BYTE PTR ds:[ebx]
  403f74:	test   DWORD PTR [edi],0xa4bcf5a4
  403f7a:	lods   eax,DWORD PTR ds:[esi]
  403f7b:	(bad)  
  403f7c:	or     eax,0xdbd2e702
  403f81:	lds    edi,FWORD PTR [edi]
  403f83:	push   edx
  403f84:	ds loopne 0x403f7e
  403f87:	call   0x6b8:0x6d18fd3b
  403f8e:	jo     0x403fb7
  403f90:	cmp    bl,BYTE PTR [edx]
  403f92:	fimul  DWORD PTR [ebx-0x3]
  403f95:	jecxz  0x403fc8
  403f97:	ja     0x403f61
  403f99:	inc    edi
  403f9a:	add    BYTE PTR [eax+eax*1-0x4ebcff43],ah
  403fa1:	pushf  
  403fa2:	xor    DWORD PTR ds:0xe9e012e,edx
  403fa8:	mov    al,ds:0xbbd62c37
  403fad:	imul   edi,DWORD PTR [ecx+0x60],0x2e77aced
  403fb4:	xchg   DWORD PTR [eax],edi
  403fb6:	ja     0x403ff2
  403fb8:	push   edx
  403fb9:	ja     0x403ff2
  403fbb:	jle    0x404030
  403fbd:	inc    ecx
  403fbe:	mov    edi,DWORD PTR [esi+0x32]
  403fc1:	and    eax,0x8b780f8
  403fc6:	or     dh,BYTE PTR [edi+0xf]
  403fc9:	add    bh,BYTE PTR [edx+0x69]
  403fcc:	add    ebp,eax
  403fce:	add    ebx,ebp
  403fd0:	loop   0x403ffe
  403fd2:	and    dl,dl
  403fd4:	cli    
  403fd5:	add    eax,0x1b30b4d4
  403fda:	daa    
  403fdb:	mov    esi,0x5b8d6dbd
  403fe0:	mov    dh,0xbf
  403fe2:	jae    0x404017
  403fe4:	or     esi,DWORD PTR [edi+0x37]
  403fe7:	(bad)  
  403fe8:	call   0x5edb234c
  403fed:	into   
  403fee:	shl    DWORD PTR [ebx],1
  403ff0:	fsubr  DWORD PTR fs:[ebp+0xd9f3324]
  403ff7:	pop    ebx
  403ff8:	les    edi,FWORD PTR [esi+0x2c]
  403ffb:	sub    ecx,DWORD PTR [ecx]
  403ffd:	mov    cl,0xa5
  403fff:	(bad)  
  404000:	arpl   WORD PTR [ebx+0x5f],ax
  404003:	lock hlt 
  404005:	out    0xd8,eax
  404007:	xchg   bh,al
  404009:	pusha  
  40400a:	jmp    0x7829a166
  40400f:	push   ebp
  404010:	cmp    DWORD PTR [edi+0x71],0x15
  404014:	adc    BYTE PTR [ebp+0xbc5bd3e],cl
  40401a:	repnz mov ebp,0xd97b5e8d
  404020:	cs jge 0x404010
  404023:	or     DWORD PTR [edi-0x4c6c816b],edx
  404029:	rcl    DWORD PTR [edi+0x24ae7406],0xf0
  404030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404031:	stos   BYTE PTR es:[edi],al
  404032:	lods   eax,DWORD PTR ds:[esi]
  404033:	out    0x52,al
  404035:	push   ds
  404036:	ret    0x610e
  404039:	mov    bl,0xea
  40403b:	push   cs
  40403c:	push   edi
  40403d:	or     al,0x58
  40403f:	push   es
  404040:	add    bl,dl
  404042:	sbb    eax,0xb3124231
  404047:	mov    ebx,0xc49375bf
  40404c:	out    0x47,al
  40404e:	and    DWORD PTR [edi*4-0x1888cd],eax
  404055:	daa    
  404056:	dec    eax
  404057:	loope  0x4040be
  404059:	cwde   
  40405a:	lods   al,BYTE PTR ds:[esi]
  40405b:	add    al,0x2a
  40405d:	out    0x99,eax
  40405f:	gs inc esi
  404061:	les    edx,FWORD PTR [edi+0x247ff6b7]
  404067:	mov    dh,0xa2
  404069:	fiadd  WORD PTR [ebx-0x95834b9]
  40406f:	pop    ss
  404070:	es jae 0x404053
  404073:	mov    edi,0x42ebea81
  404078:	or     BYTE PTR [ecx+eax*8],cl
  40407b:	dec    esp
  40407c:	(bad)  
  40407d:	push   ss
  40407e:	jo     0x404082
  404080:	adc    ecx,esp
  404082:	ret    
  404083:	xchg   ecx,eax
  404084:	fmul   st(3),st
  404086:	es (bad) 
  404088:	xchg   esi,eax
  404089:	lods   eax,DWORD PTR ds:[esi]
  40408a:	imul   edi,DWORD PTR gs:[edx+0x102a8d5],0x4ebd57a0
  404095:	xchg   edx,eax
  404096:	dec    DWORD PTR [ebx+0x12e9b733]
  40409c:	out    0xaa,al
  40409e:	imul   esi,DWORD PTR [ecx],0xfffffff7
  4040a1:	repz shr BYTE PTR [esi-0x2bcdaff3],1
  4040a8:	ret    
  4040a9:	js     0x4040ff
  4040ab:	sahf   
  4040ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ad:	push   ebp
  4040ae:	std    
  4040af:	xor    ecx,DWORD PTR [esi-0x5]
  4040b2:	cmp    eax,0xa341b3ef
  4040b7:	sti    
  4040b8:	scas   al,BYTE PTR es:[edi]
  4040b9:	pop    esi
  4040ba:	(bad)  
  4040bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040bd:	jae    0x40411e
  4040bf:	adc    BYTE PTR [esi],dh
  4040c1:	cwde   
  4040c2:	aas    
  4040c3:	imul   ebp,DWORD PTR [eax+0xb6e8e6a],0x7c
  4040ca:	in     eax,0xca
  4040cc:	mov    esp,0x986d87a6
  4040d1:	and    eax,esp
  4040d3:	push   ds
  4040d4:	imul   DWORD PTR [edx-0x26]
  4040d7:	pop    ds
  4040d8:	dec    eax
  4040d9:	jns    0x4040a8
  4040db:	add    BYTE PTR [ecx],ah
  4040dd:	pop    edi
  4040de:	lock cs sub esi,ecx
  4040e2:	xchg   ecx,eax
  4040e3:	mov    edx,DWORD PTR [edx-0x5b7c1fb2]
  4040e9:	mov    eax,ds:0xcfda2edc
  4040ee:	push   0x8a348a83
  4040f3:	jge    0x4040cc
  4040f5:	dec    ebp
  4040f6:	adc    al,0x5c
  4040f8:	popf   
  4040f9:	xchg   esp,eax
  4040fa:	adc    ebx,ebx
  4040fc:	add    al,0xbe
  4040fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ff:	push   ss
  404100:	loope  0x4040d8
  404102:	jbe    0x404158
  404104:	mov    ch,0xce
  404106:	cwde   
  404107:	aam    0x70
  404109:	and    al,0xed
  40410b:	sbb    cl,BYTE PTR ds:0xe54e81af
  404111:	jle    0x4040a7
  404113:	sub    DWORD PTR [edx+eiz*4+0x3dcf2a7f],esi
  40411a:	mov    ch,0x81
  40411c:	out    dx,al
  40411d:	push   ebp
  40411e:	mov    esp,0x7b4876ff
  404123:	mov    bl,0x65
  404125:	shl    BYTE PTR [edx-0x5e],0x8e
  404129:	mov    ebp,0x94980fa9
  40412e:	mov    dl,BYTE PTR [ecx+0x75]
  404131:	mov    dh,0xf5
  404133:	int    0xe3
  404135:	fadd   QWORD PTR [edx]
  404137:	call   0xe5d016e1
  40413c:	sbb    al,0xac
  40413e:	sbb    eax,0xeaccf6bb
  404143:	jecxz  0x404168
  404145:	(bad)  
  404146:	pusha  
  404147:	mov    dl,0x64
  404149:	mov    dh,0xa3
  40414b:	xor    esp,DWORD PTR [ecx+0x2b]
  40414e:	daa    
  40414f:	mov    esi,0x7895f58d
  404154:	popf   
  404155:	inc    edi
  404156:	out    0x7b,eax
  404158:	adc    al,0x8c
  40415a:	popa   
  40415b:	out    0x80,eax
  40415d:	inc    ebx
  40415e:	lahf   
  40415f:	push   ds
  404160:	cmp    esi,eax
  404162:	cmp    eax,0x3c2205a
  404167:	jecxz  0x404128
  404169:	outs   dx,BYTE PTR ds:[esi]
  40416a:	fwait
  40416b:	data16 sub BYTE PTR [ebp-0x47836ce4],ah
  404172:	push   0xb0ad7565
  404177:	dec    ebx
  404178:	jnp    0x4041f6
  40417a:	mov    ebp,0x2579a9a6
  40417f:	xor    al,bh
  404181:	dec    esp
  404182:	and    cl,BYTE PTR [edi+ebx*8]
  404185:	mov    esp,0x7b65f6a9
  40418a:	add    BYTE PTR [ebp+0x5d7ca16c],bh
  404190:	jno    0x4041c1
  404192:	sub    eax,0xbe53ca74
  404197:	inc    ecx
  404198:	inc    ebx
  404199:	xlat   BYTE PTR ds:[ebx]
  40419a:	mov    fs:0x87834168,al
  4041a0:	cmp    bl,bh
  4041a2:	ret    0xc8f7
  4041a5:	mov    ah,0x43
  4041a7:	dec    eax
  4041a8:	int3   
  4041a9:	cs pop edi
  4041ab:	repnz popf 
  4041ad:	fdivr  QWORD PTR [eax+0x71db6e44]
  4041b3:	jg     0x404148
  4041b5:	popa   
  4041b6:	hlt    
  4041b7:	pop    esi
  4041b8:	das    
  4041b9:	dec    edi
  4041ba:	mov    ah,0x7a
  4041bc:	and    edx,DWORD PTR [esp+ecx*8-0x356f4d8f]
  4041c3:	push   ecx
  4041c4:	fistp  DWORD PTR [ebx+esi*2]
  4041c7:	enter  0xc0bb,0xfa
  4041cb:	aaa    
  4041cc:	aaa    
  4041cd:	int3   
  4041ce:	clc    
  4041cf:	clc    
  4041d0:	iret   
  4041d1:	jmp    0x404240
  4041d3:	mov    DWORD PTR [ecx-0x69],edx
  4041d6:	mov    ecx,0xf1e1eae9
  4041db:	enter  0xe770,0x8a
  4041df:	out    dx,eax
  4041e0:	ins    BYTE PTR es:[edi],dx
  4041e1:	(bad)  
  4041e2:	xchg   esp,eax
  4041e3:	icebp  
  4041e4:	push   esp
  4041e5:	xchg   esi,eax
  4041e6:	push   ebp
  4041e7:	and    al,0xd4
  4041e9:	pop    eax
  4041ea:	arpl   WORD PTR [eax+0x1e],si
  4041ed:	imul   ebp,DWORD PTR [edi-0x23d93090],0xabe7ceac
  4041f7:	sub    DWORD PTR [ebp+0x7224b7b1],ebp
  4041fd:	and    DWORD PTR [bx+0x41],0x47
  404202:	ins    DWORD PTR es:[edi],dx
  404203:	test   BYTE PTR [ebx+0x6b785d9c],0x3d
  40420a:	call   0x6ec4dd37
  40420f:	adc    al,0x1b
  404211:	push   0xc5a3b38c
  404216:	xor    edi,edx
  404218:	or     eax,0xe6077b4a
  40421d:	sub    DWORD PTR [esi],ebp
  40421f:	inc    edi
  404220:	pusha  
  404221:	mov    esi,0x8e804f79
  404226:	fdivr  st,st(5)
  404228:	or     BYTE PTR [edx+0x2d3c0a0f],0x52
  40422f:	push   eax
  404230:	pop    ds
  404231:	mov    ds:0x7f9f499a,eax
  404236:	add    dl,BYTE PTR [esi]
  404238:	(bad)  
  404239:	dec    esp
  40423a:	jle    0x4042b2
  40423c:	inc    edx
  40423d:	dec    eax
  40423e:	add    esp,DWORD PTR [ebx]
  404240:	sbb    ebp,DWORD PTR [edx+ebx*2-0x5fc84f4a]
  404247:	pop    eax
  404248:	sbb    al,0xb5
  40424a:	or     eax,0x696c9672
  40424f:	xchg   DWORD PTR [esi-0x446e8b86],eax
  404255:	mov    ds:0x3f665ee4,al
  40425a:	int    0x14
  40425c:	(bad)  
  40425d:	mov    esp,0x660ec352
  404262:	test   BYTE PTR [ebx+0x19],al
  404265:	and    ah,BYTE PTR [ecx]
  404267:	mov    dl,BYTE PTR [edi+0x4318c3fe]
  40426d:	ficom  WORD PTR [ecx+0x47]
  404270:	inc    ecx
  404271:	dec    edi
  404272:	std    
  404273:	or     al,0x72
  404275:	and    esi,DWORD PTR [ecx-0x6d51cdf1]
  40427b:	lods   al,BYTE PTR ds:[esi]
  40427c:	in     al,0x7e
  40427e:	lods   eax,DWORD PTR ds:[esi]
  40427f:	add    DWORD PTR [esi],esp
  404281:	xor    BYTE PTR [ebp-0x668c405c],ah
  404287:	adc    al,0x66
  404289:	int3   
  40428a:	push   ebx
  40428b:	retf   
  40428c:	mov    bh,0x45
  40428e:	dec    ebx
  40428f:	ffreep st(3)
  404291:	test   ebp,esp
  404293:	outs   dx,DWORD PTR ds:[esi]
  404294:	pop    es
  404295:	sbb    al,cl
  404297:	cs stos BYTE PTR es:[edi],al
  404299:	call   0x600c6acc
  40429e:	jo     0x404260
  4042a0:	cmp    al,0x43
  4042a2:	sub    DWORD PTR [ecx+0x7],ebp
  4042a5:	in     eax,dx
  4042a6:	or     dl,BYTE PTR [eax-0xd5046ae]
  4042ac:	and    al,0x1c
  4042ae:	push   esi
  4042af:	mov    esi,0x9b2fd479
  4042b4:	inc    ebp
  4042b5:	xor    BYTE PTR [esi+0x33],cl
  4042b8:	mov    ecx,0x86f8ea7f
  4042bd:	dec    edi
  4042be:	maxps  xmm4,XMMWORD PTR [eax-0x393aaec3]
  4042c5:	add    dh,BYTE PTR [edx-0x281a22b5]
  4042cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cc:	call   0x8595:0xa82e6a2a
  4042d3:	(bad)  
  4042d4:	jg     0x404304
  4042d6:	rcl    DWORD PTR [esi+0x22],1
  4042d9:	iret   
  4042da:	loopne 0x404263
  4042dc:	jp     0x40429a
  4042de:	cmp    DWORD PTR cs:[edx],ebp
  4042e1:	arpl   dx,ax
  4042e3:	imul   edi,DWORD PTR [ecx],0x5a
  4042e6:	hlt    
  4042e7:	inc    ebx
  4042e8:	(bad)  
  4042ea:	data16 sahf 
  4042ec:	pop    ecx
  4042ed:	scas   eax,DWORD PTR es:[edi]
  4042ee:	or     al,0x93
  4042f0:	aam    0xd4
  4042f2:	stos   DWORD PTR es:[edi],eax
  4042f3:	loop   0x4042a9
  4042f5:	and    esi,edx
  4042f7:	mov    ebp,0x94956bee
  4042fc:	jmp    0x2266:0x2283da52
  404303:	push   edx
  404304:	jge    0x4042f1
  404306:	add    BYTE PTR [eax-0x36b68502],dh
  40430c:	rcr    BYTE PTR [ebp-0x2a],0x75
  404310:	inc    BYTE PTR [edx]
  404312:	mov    al,0xd1
  404314:	out    dx,eax
  404315:	push   ebp
  404316:	ds mov edx,0x601729c0
  40431c:	mov    dl,0x18
  40431e:	xchg   DWORD PTR [ebx+ebp*8],esp
  404321:	data16 idiv BYTE PTR ds:0xccf4da14
  404328:	pusha  
  404329:	dec    edx
  40432a:	push   0x41
  40432c:	pop    eax
  40432d:	push   ecx
  40432e:	sub    BYTE PTR [esi],al
  404330:	push   edx
  404331:	daa    
  404332:	repz pop ds
  404334:	mov    edx,0xe77b605b
  404339:	add    bl,BYTE PTR [ecx+0x35]
  40433c:	jl     0x404318
  40433e:	sahf   
  40433f:	leave  
  404340:	sub    DWORD PTR [edx+ecx*8+0x75b8a37f],ecx
  404347:	pop    es
  404348:	pop    ecx
  404349:	imul   eax,DWORD PTR ds:0x5261e4b1,0x4f
  404350:	or     ecx,DWORD PTR [ecx+0x71040a62]
  404356:	inc    eax
  404357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404358:	daa    
  404359:	pop    esi
  40435a:	nop
  40435b:	push   edx
  40435c:	or     eax,0x3cf22c6e
  404361:	mov    dl,0x96
  404363:	and    al,0x6a
  404365:	mov    al,0xa4
  404367:	mul    BYTE PTR [esi]
  404369:	xor    eax,esp
  40436b:	stc    
  40436c:	fwait
  40436d:	mov    bl,0x45
  40436f:	sahf   
  404370:	pop    ebp
  404371:	inc    esi
  404372:	out    dx,eax
  404373:	push   ebx
  404374:	sub    BYTE PTR [ebx-0x7],bl
  404377:	stos   DWORD PTR es:[edi],eax
  404378:	popf   
  404379:	int    0x5a
  40437b:	fisub  DWORD PTR [edx]
  40437d:	js     0x40439a
  40437f:	(bad)  [eiz*8+0x61d60a0a]
  404386:	out    0x5,eax
  404388:	cmp    BYTE PTR ss:[edi+eax*4],0x3
  40438d:	clc    
  40438e:	inc    ebx
  40438f:	inc    edi
  404390:	jmp    0x4043cb
  404392:	mul    al
  404394:	mov    al,ch
  404396:	arpl   WORD PTR [eax+ecx*2-0x58707075],ax
  40439d:	ins    BYTE PTR es:[edi],dx
  40439e:	stos   DWORD PTR es:[edi],eax
  40439f:	push   ecx
  4043a0:	mov    eax,0x20f5084c
  4043a5:	and    cl,BYTE PTR [esi-0x6c8ea1fd]
  4043ab:	lahf   
  4043ac:	add    esi,DWORD PTR [esi]
  4043ae:	add    BYTE PTR [ecx],ch
  4043b0:	test   BYTE PTR [edx-0x55830f74],0x6e
  4043b7:	aas    
  4043b8:	and    dl,BYTE PTR [ebx+0x3]
  4043bb:	sbb    al,0x37
  4043bd:	cmc    
  4043be:	inc    DWORD PTR [ebp+esi*8-0x13]
  4043c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c3:	test   BYTE PTR [edi],al
  4043c5:	mov    eax,0xf24ebb06
  4043ca:	vpmaxsw ymm1,ymm4,YMMWORD PTR [eax-0x4fadace4]
  4043d2:	jbe    0x4043a2
  4043d4:	ficom  DWORD PTR [edi+esi*2]
  4043d7:	aas    
  4043d8:	in     eax,dx
  4043d9:	mov    esi,0x9e13a7fc
  4043de:	dec    ebx
  4043df:	mov    ds:0xaf790f65,al
  4043e4:	xchg   esi,eax
  4043e5:	mov    esp,0x1970d8a1
  4043ea:	sbb    BYTE PTR [esi+0x7f2cc792],0x6c
  4043f1:	mov    dl,dl
  4043f3:	pop    edx
  4043f4:	and    al,0xf
  4043f6:	clc    
  4043f7:	jno    0x40446d
  4043f9:	jnp    0x4043d3
  4043fb:	or     cl,BYTE PTR [ebx]
  4043fd:	inc    esp
  4043fe:	call   0x5415abf8
  404403:	sub    DWORD PTR [eax+edi*1-0x49e8ca],eax
  40440a:	push   ds
  40440b:	mov    edx,0xb9c1db03
  404410:	jle    0x4043c2
  404412:	call   0xe843:0xa7fa0fd9
  404419:	in     al,dx
  40441a:	pushf  
  40441b:	stos   DWORD PTR es:[edi],eax
  40441c:	cld    
  40441d:	add    ecx,DWORD PTR [edx+0xb0a8b02]
  404423:	mov    ds:0xcc2be84,al
  404428:	pcmpgtd mm1,mm0
  40442b:	mov    edi,0x6e60d837
  404430:	pop    edx
  404431:	cmp    al,0xfc
  404433:	xchg   ecx,eax
  404434:	xor    DWORD PTR [esi-0x59003173],ebp
  40443a:	mov    ds:0xa8315d57,al
  40443f:	push   0xffffff86
  404441:	cmp    edi,DWORD PTR [edx]
  404443:	adc    al,0x44
  404445:	scas   eax,DWORD PTR es:[edi]
  404446:	clc    
  404447:	inc    esi
  404448:	sbb    DWORD PTR [eax-0x4f],ebp
  40444b:	xor    DWORD PTR [esi+0x35],0x1ed9af86
  404452:	mov    ebx,0xcc6b47
  404457:	ds das 
  404459:	adc    ebp,DWORD PTR [eax+0x23eb6129]
  40445f:	iret   
  404460:	nop
  404461:	xor    eax,0x599a4c3f
  404466:	pushf  
  404467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404468:	sub    al,0x4b
  40446a:	cmp    ah,BYTE PTR [ebp-0x5]
  40446d:	jne    0x4044d2
  40446f:	pop    ds
  404470:	or     bh,BYTE PTR [ebp+0x58]
  404473:	mov    al,0x55
  404475:	rcr    DWORD PTR [edi-0x523a5711],cl
  40447b:	sar    DWORD PTR [edi-0x59],cl
  40447e:	pop    ebp
  40447f:	(bad)  
  404480:	xchg   edx,eax
  404481:	add    edx,ebx
  404483:	xor    DWORD PTR [edx],edx
  404485:	xchg   bh,al
  404487:	push   es
  404488:	les    esi,FWORD PTR ds:0xcb5a6b38
  40448e:	out    0x9e,al
  404490:	icebp  
  404491:	mov    esi,0x6b48d43d
  404496:	sbb    edi,eax
  404498:	ror    DWORD PTR [esp+esi*8+0x2],1
  40449c:	mov    ebx,0xa7db7ebc
  4044a1:	dec    ebp
  4044a2:	bnd fs jns 0x4044a8
  4044a6:	repz and BYTE PTR [edx-0x34],ch
  4044aa:	lods   al,BYTE PTR ds:[esi]
  4044ab:	fldenv [edx]
  4044ad:	aaa    
  4044ae:	jmp    0x7d5224d6
  4044b3:	pop    ebx
  4044b4:	clc    
  4044b5:	hlt    
  4044b6:	out    0x8c,eax
  4044b8:	ret    0xaa7a
  4044bb:	cmp    esi,eax
  4044bd:	mov    edx,0x7f340cea
  4044c2:	pop    ds
  4044c3:	xor    BYTE PTR [edi-0x42c895f],0xfb
  4044ca:	mov    esp,0x1bbaaa52
  4044cf:	and    eax,0xcf6bf5f5
  4044d4:	loop   0x40446b
  4044d6:	popf   
  4044d7:	retf   0x1477
  4044da:	or     DWORD PTR [eax-0x5b95b3c3],ecx
  4044e0:	cmp    edi,DWORD PTR [esi+eax*1-0x2b]
  4044e4:	sbb    eax,0x1ff6db18
  4044e9:	pop    ebx
  4044ea:	pop    ecx
  4044eb:	dec    ecx
  4044ec:	aam    0x6a
  4044ee:	aaa    
  4044ef:	enter  0x17a5,0xc3
  4044f3:	xchg   ebp,eax
  4044f4:	test   al,al
  4044f6:	ins    DWORD PTR es:[edi],dx
  4044f7:	leave  
  4044f8:	xor    al,0xe4
  4044fa:	mov    dh,0x85
  4044fc:	inc    edi
  4044fd:	add    eax,DWORD PTR [eax-0x5169258e]
  404503:	pop    es
  404504:	adc    eax,0x8bde7df8
  404509:	pop    ss
  40450a:	sub    DWORD PTR [edi+0x2e],edi
  40450d:	das    
  40450e:	jno    0x4044db
  404510:	lahf   
  404511:	adc    eax,edi
  404513:	jnp    0x40451a
  404515:	sahf   
  404516:	or     BYTE PTR [edx],al
  404518:	xchg   esi,eax
  404519:	jno    0x404543
  40451b:	push   ebx
  40451c:	sub    bl,BYTE PTR [esi+ebx*4-0x2c]
  404520:	dec    esi
  404521:	(bad)
  404524:	and    eax,0x57307064
  404529:	and    al,BYTE PTR [edx+0x42133e4a]
  40452f:	mov    ebx,ebx
  404531:	pop    ds
  404532:	and    ebp,DWORD PTR [eax+0x30b74a42]
  404538:	retf   0xf35e
  40453b:	test   DWORD PTR ds:0x3dffd4ed,0x94fd0cb1
  404545:	cmp    DWORD PTR [ebx-0x74309cc5],edx
  40454b:	inc    eax
  40454c:	jg     0x404531
  40454e:	cli    
  40454f:	retf   
  404550:	push   ebx
  404551:	add    BYTE PTR ds:0xc4ee9908,al
  404557:	(bad)  
  404558:	sbb    ah,BYTE PTR [esp+eax*4]
  40455b:	test   al,0xe
  40455d:	jecxz  0x4044e6
  40455f:	scas   al,BYTE PTR es:[edi]
  404560:	sbb    cl,ah
  404562:	cli    
  404563:	add    esi,edx
  404565:	pop    ecx
  404566:	pop    ecx
  404567:	loope  0x404549
  404569:	and    eax,0x408cbd8
  40456e:	out    dx,al
  40456f:	mov    ds:0xe5a3141d,eax
  404574:	lods   al,BYTE PTR ds:[esi]
  404575:	lea    eax,[ebx+0xb]
  404578:	mov    ebp,0xf77bf9d0
  40457d:	xchg   edi,eax
  40457e:	xchg   edx,eax
  40457f:	call   0x688c:0x24e65a8b
  404586:	or     ah,BYTE PTR [esi+0x260eef2b]
  40458c:	or     bl,dh
  40458e:	hlt    
  40458f:	jae    0x404539
  404591:	push   es
  404592:	sbb    eax,0xc710c8a5
  404597:	mov    bl,0x73
  404599:	cli    
  40459a:	xor    bl,BYTE PTR [edi-0x23]
  40459d:	sti    
  40459e:	jnp    0x4045a7
  4045a0:	into   
  4045a1:	int3   
  4045a2:	mov    al,0x1d
  4045a4:	jmp    0x809f611f
  4045a9:	sub    BYTE PTR [eax],bh
  4045ab:	hlt    
  4045ac:	adc    bh,BYTE PTR [edx-0x3b]
  4045af:	aas    
  4045b0:	test   ecx,ebx
  4045b2:	inc    esp
  4045b3:	adc    esi,DWORD PTR [eax]
  4045b5:	lds    esi,FWORD PTR [ebp+0x638cf317]
  4045bb:	rol    BYTE PTR [ebx],0xe8
  4045be:	aas    
  4045bf:	xor    eax,0x364dff4e
  4045c4:	popf   
  4045c5:	sbb    bh,bh
  4045c7:	rol    DWORD PTR cs:[edx-0x7999c315],cl
  4045ce:	dec    ebx
  4045cf:	jmp    0x4045c0
  4045d1:	xchg   edi,eax
  4045d2:	test   DWORD PTR [esi+0x12],ebp
  4045d5:	lods   al,BYTE PTR ds:[esi]
  4045d6:	cmp    bl,BYTE PTR [ebp-0xb]
  4045d9:	cld    
  4045da:	rcl    BYTE PTR [edi+0x1b],cl
  4045dd:	icebp  
  4045de:	nop
  4045df:	aam    0x5c
  4045e1:	pop    edi
  4045e2:	imul   eax,esi,0x3e
  4045e5:	dec    ecx
  4045e6:	test   DWORD PTR ds:0x751cc54a,edx
  4045ec:	push   edi
  4045ed:	jmp    0x4286acaf
  4045f2:	push   cs
  4045f3:	jmp    0xe7b:0x58723644
  4045fa:	scas   eax,DWORD PTR es:[edi]
  4045fb:	popf   
  4045fc:	repz lock jae 0x4045a2
  404600:	adc    esi,0x19
  404603:	mov    bh,0xb0
  404605:	xchg   ecx,eax
  404606:	jnp    0x40464e
  404608:	xchg   ebp,eax
  404609:	cmp    cl,BYTE PTR [edx+0x464e70fc]
  40460f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404610:	out    dx,al
  404611:	sub    ebx,0xf5d8c78a
  404617:	add    al,0x44
  404619:	imul   edi,DWORD PTR [ecx-0x3f6043b9],0x4b
  404620:	ds and eax,0x84fa9959
  404626:	push   edx
  404627:	mov    ah,0xa7
  404629:	js     0x404668
  40462b:	pop    edx
  40462c:	imul   esi,eax,0x41
  40462f:	scas   eax,DWORD PTR es:[edi]
  404630:	cmp    al,0x81
  404632:	or     edx,ebx
  404634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404635:	retf   0x3b67
  404638:	pop    edi
  404639:	push   ecx
  40463a:	mov    edx,0x7139be4c
  40463f:	ja     0x4046a7
  404641:	dec    esp
  404642:	pop    esi
  404643:	pushf  
  404644:	repnz mov bl,BYTE PTR [ebp+0x3e]
  404648:	pop    ebp
  404649:	bound  ebx,QWORD PTR [esi+eiz*1+0x36]
  40464d:	repz add BYTE PTR [esi-0x23],ch
  404651:	in     al,0xd7
  404653:	test   eax,0xac27e545
  404658:	push   esi
  404659:	xor    ebx,DWORD PTR [eax]
  40465b:	scas   al,BYTE PTR es:[edi]
  40465c:	pop    ebx
  40465d:	cdq    
  40465e:	dec    ebx
  40465f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404660:	jns    0x4046da
  404662:	test   eax,0x55f181f4
  404667:	or     DWORD PTR [ecx+edi*8+0x4617e430],eax
  40466e:	push   0xffffffb5
  404670:	xchg   dl,bl
  404672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404673:	call   0x2541:0x854a4ca5
  40467a:	nop
  40467b:	xchg   edx,eax
  40467c:	cmp    ebx,ebp
  40467e:	fcomp  DWORD PTR [edx+edi*1-0x27cf03ec]
  404685:	stc    
  404686:	test   BYTE PTR [eax-0xb22c149],bl
  40468c:	and    al,0xf6
  40468e:	sub    al,0xae
  404690:	stos   BYTE PTR es:[edi],al
  404691:	les    ebp,FWORD PTR [ecx-0x10]
  404694:	inc    ecx
  404695:	sbb    dh,ah
  404697:	loope  0x40468a
  404699:	xor    eax,0x91382f88
  40469e:	pushf  
  40469f:	jl     0x40464f
  4046a1:	(bad)  
  4046a2:	aaa    
  4046a3:	inc    ecx
  4046a4:	mov    ecx,0x157121ac
  4046a9:	cmp    dh,BYTE PTR [ebx+0x6b]
  4046ac:	add    al,BYTE PTR [esi-0x9]
  4046af:	cmp    edx,edi
  4046b1:	inc    eax
  4046b2:	ds push ecx
  4046b4:	fsubr  DWORD PTR [ecx+0x79]
  4046b7:	repnz mov ebx,0xe5977672
  4046bd:	inc    esp
  4046be:	shr    DWORD PTR [edi+esi*1-0x55a1c3af],1
  4046c5:	shr    BYTE PTR [ebp-0x50],1
  4046c8:	xchg   edi,eax
  4046c9:	out    0x67,eax
  4046cb:	popa   
  4046cc:	into   
  4046cd:	lea    ebx,[edx-0x21b676d2]
  4046d3:	div    BYTE PTR [ebp+0x37a48dfc]
  4046d9:	mov    edx,0xb17008ef
  4046de:	add    cl,dl
  4046e0:	stc    
  4046e1:	dec    esi
  4046e2:	mov    gs,WORD PTR [ecx+0x63]
  4046e5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e7:	jmp    FWORD PTR [edx+ebx*1-0x4e5f78e1]
  4046ee:	dec    eax
  4046ef:	cmc    
  4046f0:	ret    0xd86d
  4046f3:	inc    edx
  4046f4:	fdivr  DWORD PTR [ebx+0x33]
  4046f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f8:	jnp    0x4046d5
  4046fa:	lea    edx,[esp+edx*4+0x7e0d15b4]
  404701:	adc    eax,0xd54c0f5f
  404706:	sub    ch,dl
  404708:	xchg   BYTE PTR [esi-0x5c7b3860],cl
  40470e:	cwde   
  40470f:	or     DWORD PTR [edi],edx
  404711:	jp     0x404744
  404713:	loopne 0x4046b6
  404715:	xor    DWORD PTR [ebx],0x4e
  404718:	loope  0x4046b3
  40471a:	mov    es,WORD PTR [edx+0x58b6482a]
  404720:	gs cdq 
  404722:	push   ebp
  404723:	outs   dx,BYTE PTR ds:[esi]
  404724:	into   
  404725:	add    ebx,0xffffffff
  404728:	test   DWORD PTR [eax-0x5a],0x6adef931
  40472f:	sbb    dl,dh
  404731:	gs clc 
  404733:	gs dec ebp
  404735:	fcom   QWORD PTR gs:[ebp-0x32]
  404739:	adc    BYTE PTR [ebp-0x4a2ced27],bl
  40473f:	imul   esi,DWORD PTR [edi],0x11
  404742:	out    dx,eax
  404743:	or     ah,BYTE PTR [esi-0x1681c330]
  404749:	test   DWORD PTR [eax+0xe],ecx
  40474c:	rcl    DWORD PTR [edx],cl
  40474e:	sub    BYTE PTR [edi-0x76],dl
  404751:	imul   edi,DWORD PTR [eax+0x50781bb2],0x3af384d4
  40475b:	loop   0x404779
  40475d:	sti    
  40475e:	jns    0x4046e4
  404760:	div    ebx
  404762:	out    0x5d,al
  404764:	ret    
  404765:	pop    eax
  404766:	loop   0x40470b
  404768:	sahf   
  404769:	pop    ds
  40476a:	xlat   BYTE PTR ds:[ebx]
  40476b:	add    DWORD PTR [ebp-0x5e6d8dc9],esi
  404771:	mov    eax,0xef3c2657
  404776:	xor    al,0x83
  404778:	inc    ebp
  404779:	hlt    
  40477a:	xor    al,0x2d
  40477c:	mov    ebp,0x2f6f2828
  404781:	xchg   ecx,eax
  404782:	and    edi,edx
  404784:	push   edi
  404785:	dec    esi
  404786:	xor    al,0xa7
  404788:	jmp    0x5e747f09
  40478d:	pop    ebp
  40478e:	adc    BYTE PTR [ebx+0x3a],dl
  404791:	adc    ebp,edi
  404793:	jo     0x404775
  404795:	or     esi,DWORD PTR [esi+0x7d4e9d20]
  40479b:	push   cs
  40479c:	cmp    DWORD PTR [esi+0x3166add4],edi
  4047a2:	popf   
  4047a3:	xchg   BYTE PTR [ebp+eax*2+0x4cbddd89],cl
  4047aa:	sbb    al,0x33
  4047ac:	fadd   QWORD PTR [ebx+0xe]
  4047af:	call   0x2d15d7d7
  4047b4:	dec    ecx
  4047b5:	xchg   BYTE PTR [ebx+eax*2-0x28d81f3e],dl
  4047bc:	push   esp
  4047bd:	dec    esp
  4047be:	or     eax,0xc1e1f790
  4047c3:	scas   eax,DWORD PTR es:[edi]
  4047c4:	sbb    al,dh
  4047c6:	inc    edi
  4047c7:	sbb    al,0xbd
  4047c9:	dec    ebx
  4047ca:	and    BYTE PTR [esi+esi*1+0x39],dl
  4047ce:	add    eax,0x66008ef1
  4047d3:	scas   eax,DWORD PTR es:[edi]
  4047d4:	lock ins BYTE PTR es:[edi],dx
  4047d6:	aas    
  4047d7:	dec    esp
  4047d8:	das    
  4047d9:	std    
  4047da:	(bad)  
  4047db:	dec    ebx
  4047dc:	xchg   BYTE PTR [ecx],ah
  4047de:	js     0x404837
  4047e0:	shl    BYTE PTR [esi+0x36586211],1
  4047e6:	xchg   DWORD PTR [edi],edi
  4047e8:	jo     0x4047ca
  4047ea:	adc    BYTE PTR [edi+0x3538abaf],bh
  4047f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047f1:	mov    DWORD PTR [edi+ecx*1+0x447d4e3e],ecx
  4047f8:	push   ecx
  4047f9:	nop
  4047fa:	(bad)  
  4047fb:	adc    bl,BYTE PTR [ebx-0x428d9ec6]
  404801:	mov    BYTE PTR [ecx+0x46a7bbd2],0xda
  404808:	out    dx,eax
  404809:	mov    al,0x6a
  40480b:	stc    
  40480c:	xchg   DWORD PTR [eax-0x11d59731],edi
  404812:	mov    ecx,cs
  404814:	mov    ch,0xfb
  404816:	pop    ds
  404817:	retf   
  404818:	aam    0x3
  40481a:	add    al,0xa
  40481c:	jge    0x404820
  40481e:	fwait
  40481f:	push   ebx
  404820:	pop    ss
  404821:	xor    bl,ah
  404823:	jmp    0x4047f4
  404825:	mov    ds,WORD PTR [ebx]
  404827:	(bad)  
  404828:	repnz leave 
  40482a:	adc    ebx,DWORD PTR [ecx*8+0x5daf69fe]
  404831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404832:	shr    edi,1
  404834:	push   eax
  404835:	and    DWORD PTR [esi+0x4d],edx
  404838:	ins    BYTE PTR es:[edi],dx
  404839:	popf   
  40483a:	out    dx,eax
  40483b:	jge    0x4047dc
  40483d:	cwde   
  40483e:	daa    
  40483f:	fistp  QWORD PTR [ebp+eax*4+0x5f]
  404843:	pop    eax
  404844:	popa   
  404845:	mov    al,ds:0x53c50314
  40484a:	stc    
  40484b:	test   BYTE PTR [edi],bh
  40484d:	jbe    0x4047e9
  40484f:	pusha  
  404850:	addr16 xchg ebx,eax
  404852:	sbb    edi,DWORD PTR [ecx+0x6b]
  404855:	pusha  
  404856:	xor    eax,0xdc9d6c5b
  40485b:	cmp    al,0x88
  40485d:	jbe    0x4048a0
  40485f:	inc    edx
  404860:	add    esi,DWORD PTR [edi+eiz*1-0x28569091]
  404867:	inc    ecx
  404868:	stc    
  404869:	leave  
  40486a:	pop    esi
  40486b:	adc    DWORD PTR [edi+edi*1],0xfffffff2
  40486f:	sub    ebp,DWORD PTR [eax+0xe]
  404872:	rol    DWORD PTR [edx-0x25],cl
  404875:	pusha  
  404876:	mov    ebx,0xf49c4a73
  40487b:	xchg   ebx,eax
  40487c:	push   esi
  40487d:	repz jmp 0x404852
  404880:	or     DWORD PTR [esi],ecx
  404882:	in     eax,dx
  404883:	xchg   DWORD PTR [eax+ebx*8+0x5872c619],edi
  40488a:	mov    ds:0x8d9772ed,al
  40488f:	call   FWORD PTR [edi]
  404891:	(bad)  
  404893:	fistp  QWORD PTR [edx]
  404895:	add    eax,0x315ff52e
  40489a:	imul   ebp,eax,0x42
  40489d:	mul    BYTE PTR [edx]
  40489f:	xchg   esi,eax
  4048a0:	sbb    BYTE PTR [edi],0xe2
  4048a3:	xor    BYTE PTR [ebx-0x586e2f86],0xf5
  4048aa:	mov    ebp,esi
  4048ac:	jmp    0x4048e7
  4048ae:	xchg   DWORD PTR [ebx+0x2215910],ebp
  4048b4:	(bad)  
  4048b5:	scas   eax,DWORD PTR es:[edi]
  4048b6:	sub    ebp,edi
  4048b8:	in     al,dx
  4048b9:	aas    
  4048ba:	dec    edx
  4048bb:	xlat   BYTE PTR ds:[ebx]
  4048bc:	sti    
  4048bd:	inc    ebp
  4048be:	shl    ecx,cl
  4048c0:	inc    ebx
  4048c1:	das    
  4048c2:	jnp    0x404868
  4048c4:	push   eax
  4048c5:	js     0x4048f9
  4048c7:	push   ebp
  4048c8:	adc    eax,DWORD PTR [ecx+0x64cab2a0]
  4048ce:	lahf   
  4048cf:	popa   
  4048d0:	(bad)  
  4048d1:	push   ebx
  4048d2:	pusha  
  4048d3:	scas   eax,DWORD PTR es:[edi]
  4048d4:	inc    ecx
  4048d5:	push   ds
  4048d6:	test   al,0x49
  4048d8:	cdq    
  4048d9:	call   DWORD PTR cs:[ecx-0x9eff80d]
  4048e0:	xor    bh,dh
  4048e2:	arpl   si,bp
  4048e4:	xor    edx,DWORD PTR [ecx]
  4048e6:	add    al,0xc9
  4048e8:	ficom  WORD PTR [eax+0x53]
  4048eb:	rcr    BYTE PTR [esi],0x7
  4048ee:	cmp    al,0x7c
  4048f0:	aas    
  4048f1:	data16 clc 
  4048f3:	adc    BYTE PTR [eax],dl
  4048f5:	mov    bl,0xad
  4048f7:	(bad)  
  4048f8:	push   ecx
  4048f9:	inc    eax
  4048fa:	mov    eax,ds:0x21a81f11
  4048ff:	gs xchg ebp,eax
  404901:	push   es
  404902:	popf   
  404903:	pop    es
  404904:	and    al,0x35
  404906:	mov    ?,WORD PTR [ecx-0x44191b31]
  40490c:	jecxz  0x4048c7
  40490e:	push   ecx
  40490f:	into   
  404910:	jge    0x4048fe
  404912:	mov    ds:0x643860b5,eax
  404917:	push   eax
  404918:	ret    
  404919:	frstor [ecx]
  40491b:	bound  edx,QWORD PTR [ecx+0x18769dd5]
  404921:	popf   
  404922:	mov    ds:0x4b65d24e,eax
  404927:	dec    edi
  404928:	ficomp DWORD PTR [edx+ecx*1]
  40492b:	mov    al,0x66
  40492d:	adc    BYTE PTR [ebx+0x2f],ch
  404930:	pop    edx
  404931:	mov    dl,0x8
  404933:	push   ecx
  404934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404935:	shl    BYTE PTR [ebx-0x38],0x45
  404939:	stos   BYTE PTR es:[edi],al
  40493a:	aam    0xb3
  40493c:	imul   ecx,DWORD PTR [esi],0x28
  40493f:	pop    edi
  404940:	mov    ds:0x824509dd,al
  404945:	je     0x4049ab
  404947:	in     eax,dx
  404948:	jno    0x4048ed
  40494a:	xor    cl,BYTE PTR [eax]
  40494c:	dec    eax
  40494d:	jmp    0x2b7d00c6
  404952:	xor    al,0x99
  404954:	nop
  404955:	sub    DWORD PTR [ebp+0x59],edi
  404958:	xchg   ebx,ecx
  40495a:	ror    DWORD PTR [esi],0xb5
  40495d:	inc    ebx
  40495e:	xor    al,0x6c
  404960:	ja     0x40493e
  404962:	ins    DWORD PTR es:[edi],dx
  404963:	mov    dh,0xf2
  404965:	mov    dl,0xbf
  404967:	cmp    eax,0x1f0621a2
  40496c:	adc    eax,0xf26329b4
  404971:	jp     0x40493f
  404973:	imul   ebx,esp,0x3
  404976:	jb     0x4049ca
  404978:	sti    
  404979:	les    edx,FWORD PTR [edx-0x17d2a8fe]
  40497f:	inc    ecx
  404980:	sub    bh,dl
  404982:	scas   al,BYTE PTR es:[edi]
  404983:	(bad)  
  404984:	(bad)  
  404986:	add    BYTE PTR [edi+0x221dbbdf],al
  40498c:	(bad)  
  40498d:	jp     0x40491b
  40498f:	jnp    0x4049b2
  404991:	or     eax,0x5ca2ad1a
  404996:	jnp    0x4049af
  404998:	scas   eax,DWORD PTR es:[edi]
  404999:	and    esp,DWORD PTR [ecx-0x32]
  40499c:	sub    eax,0xd01375a0
  4049a1:	jo     0x40494e
  4049a3:	ins    DWORD PTR es:[edi],dx
  4049a4:	loop   0x40492c
  4049a6:	adc    dl,BYTE PTR [ebx]
  4049a8:	nop
  4049a9:	add    ebp,DWORD PTR [ebx-0x4f]
  4049ac:	cmp    dl,ch
  4049ae:	sub    al,0x33
  4049b0:	and    DWORD PTR [ecx],eax
  4049b2:	pop    esi
  4049b3:	iret   
  4049b4:	xchg   esp,eax
  4049b5:	pop    ecx
  4049b6:	xchg   esi,eax
  4049b7:	icebp  
  4049b8:	xchg   ebx,eax
  4049b9:	ins    BYTE PTR es:[edi],dx
  4049ba:	call   0xd65c47e0
  4049bf:	pusha  
  4049c0:	jge    0x404a34
  4049c2:	cmp    BYTE PTR [edi-0x6e],ch
  4049c5:	popf   
  4049c6:	sbb    eax,0xf01241e0
  4049cb:	xlat   BYTE PTR ds:[ebx]
  4049cc:	fs push 0x5e
  4049cf:	inc    ebp
  4049d0:	(bad)  
  4049d1:	int    0xd8
  4049d3:	add    BYTE PTR [eax-0x38dfecbe],0xad
  4049da:	sub    DWORD PTR [ebx],ebx
  4049dc:	sbb    ebp,DWORD PTR ds:0xdbd97bd5
  4049e2:	popa   
  4049e3:	outs   dx,BYTE PTR ds:[esi]
  4049e4:	dec    ebx
  4049e5:	dec    ebp
  4049e6:	sub    al,0xb7
  4049e8:	mov    al,0x9
  4049ea:	fnstcw WORD PTR [esi+0x14c2b25a]
  4049f0:	test   DWORD PTR [edx],ecx
  4049f2:	jno    0x404a5e
  4049f4:	pop    eax
  4049f5:	into   
  4049f6:	inc    ecx
  4049f7:	mov    cl,0x8d
  4049f9:	mov    bl,0x6d
  4049fb:	mov    esi,0x7d70b399
  404a00:	jg     0x40499f
  404a02:	push   edx
  404a03:	pop    ecx
  404a04:	push   cs
  404a05:	mov    esp,0x8ac6b496
  404a0a:	ficom  WORD PTR [ecx]
  404a0c:	push   ebp
  404a0d:	call   0x7820:0x3cb19967
  404a14:	cmp    edi,edx
  404a16:	xor    al,0x8d
  404a18:	sbb    cl,BYTE PTR [edi+0x5c]
  404a1b:	out    dx,al
  404a1c:	mov    edi,0x477305c1
  404a21:	int3   
  404a22:	sbb    al,0xcc
  404a24:	and    DWORD PTR ds:0xac0389dd,ebp
  404a2a:	je     0x404a0e
  404a2c:	call   DWORD PTR [eax]
  404a2f:	sbb    al,0xb6
  404a31:	mov    BYTE PTR [edx-0x57c053cd],ch
  404a37:	in     al,0xe9
  404a39:	cwde   
  404a3a:	icebp  
  404a3b:	sbb    dl,cl
  404a3d:	inc    edi
  404a3e:	sbb    eax,0xfd72d82
  404a43:	ss pusha 
  404a45:	mov    esp,0x9549010d
  404a4a:	fcmovu st,st(7)
  404a4c:	imul   edi,DWORD PTR [ecx],0x255a8965
  404a52:	sbb    DWORD PTR [ebx-0x19],edx
  404a55:	int    0x10
  404a57:	or     ecx,DWORD PTR ds:0x4eae21ce
  404a5d:	arpl   sp,di
  404a5f:	jno    0x404a43
  404a61:	les    edx,FWORD PTR [ebx]
  404a63:	sbb    cl,BYTE PTR [edx+edi*4-0x3e]
  404a67:	in     al,dx
  404a68:	loope  0x404a65
  404a6a:	(bad)  
  404a6b:	cmc    
  404a6c:	xor    eax,0xe1999a12
  404a71:	jnp    0x404ae7
  404a73:	pop    es
  404a74:	and    BYTE PTR [ebx+0x602b4ef3],0x9
  404a7b:	aad    0xbd
  404a7d:	cld    
  404a7e:	and    bh,ah
  404a80:	pop    edx
  404a81:	mov    edx,0x6edc4134
  404a86:	jle    0x404a13
  404a88:	fidivr DWORD PTR [ebp-0x44]
  404a8b:	jb     0x404aae
  404a8d:	adc    eax,0xd5e6a55a
  404a92:	popa   
  404a93:	xor    ah,ch
  404a95:	inc    ebx
  404a96:	dec    ebx
  404a97:	push   edx
  404a98:	cli    
  404a99:	inc    edi
  404a9a:	(bad)  
  404a9b:	sti    
  404a9c:	in     eax,0x33
  404a9e:	dec    edi
  404a9f:	cmp    DWORD PTR [edi+0xf],edi
  404aa2:	push   esp
  404aa3:	push   esi
  404aa4:	je     0x404a41
  404aa6:	nop
  404aa7:	pop    es
  404aa8:	cdq    
  404aa9:	xchg   ebp,eax
  404aaa:	retf   0xc930
  404aad:	js     0x404a7e
  404aaf:	daa    
  404ab0:	jmp    0x9a92:0x96bf8580
  404ab7:	xor    cl,0xfb
  404aba:	je     0x404a57
  404abc:	mov    WORD PTR [eax+0x2eedc82],ss
  404ac2:	sub    ah,dh
  404ac4:	push   es
  404ac5:	and    dh,BYTE PTR [esi+0x1a]
  404ac8:	sbb    eax,0xcc61699f
  404acd:	mov    BYTE PTR [ebp-0xb3454a3],dl
  404ad3:	aaa    
  404ad4:	and    bh,al
  404ad6:	mov    al,BYTE PTR [esp+ebx*4]
  404ad9:	sahf   
  404ada:	mov    esp,0x1fc503a8
  404adf:	clc    
  404ae0:	jp     0x404b0d
  404ae2:	push   es
  404ae3:	pop    ecx
  404ae4:	aaa    
  404ae5:	dec    ebx
  404ae6:	cli    
  404ae7:	inc    ebx
  404ae8:	jmp    0x404b36
  404aea:	pop    es
  404aeb:	jb     0x404b63
  404aed:	adc    al,0x40
  404aef:	(bad)  
  404af0:	add    esi,0x927fa770
  404af6:	pop    ebp
  404af7:	mov    BYTE PTR [ecx+0x14],dh
  404afa:	adc    al,0x99
  404afc:	push   eax
  404afd:	out    0x10,al
  404aff:	mov    esi,ecx
  404b01:	jmp    FWORD PTR [edx+0x7e]
  404b04:	jne    0x404af6
  404b06:	mov    al,0xb2
  404b08:	inc    esp
  404b09:	pop    edx
  404b0a:	pop    es
  404b0b:	jmp    0x254b:0x68381fba
  404b12:	nop
  404b13:	xchg   edi,eax
  404b14:	push   0x1afc6ce0
  404b19:	cmp    al,0x36
  404b1b:	scas   eax,DWORD PTR es:[edi]
  404b1c:	call   0xea7:0x4b4e930b
  404b23:	push   edx
  404b24:	je     0x404b7f
  404b26:	jo     0x404b18
  404b28:	addr16 mov ebx,0xdc7b32c6
  404b2e:	jge    0x404abb
  404b30:	xor    DWORD PTR [esi+esi*1-0x71],ecx
  404b34:	test   eax,0xf8cb25a7
  404b39:	or     DWORD PTR [ebx+0x24],edi
  404b3c:	adc    dh,BYTE PTR [esp+esi*1-0x339e65a0]
  404b43:	stos   BYTE PTR es:[edi],al
  404b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b46:	mov    ebx,0x55f724cc
  404b4b:	or     ebx,DWORD PTR [esi-0x7f]
  404b4e:	cmp    ebx,DWORD PTR [ebp+0x39]
  404b51:	in     eax,0xb2
  404b53:	ds add al,0x1e
  404b56:	outs   dx,DWORD PTR ds:[esi]
  404b57:	jo     0x404b6e
  404b59:	sbb    ecx,DWORD PTR ds:0xb6b29000
  404b5f:	hlt    
  404b60:	ins    DWORD PTR es:[edi],dx
  404b61:	mov    cl,0xe1
  404b63:	pop    es
  404b64:	je     0x404b29
  404b66:	mov    ecx,0xb631283a
  404b6b:	xor    ebx,DWORD PTR [edi+0x77]
  404b6e:	mov    edx,0x88508761
  404b73:	and    eax,ebp
  404b75:	sub    esi,DWORD PTR [edi]
  404b77:	daa    
  404b78:	shl    DWORD PTR [ebx-0x7f314c87],cl
  404b7e:	lods   eax,DWORD PTR ds:[esi]
  404b7f:	push   ecx
  404b80:	cwde   
  404b81:	push   ecx
  404b82:	out    dx,al
  404b83:	xor    BYTE PTR [esi+eax*8-0x71],bh
  404b87:	mov    edx,0x4f88dc92
  404b8c:	ja     0x404b19
  404b8e:	(bad)
  404b91:	sbb    edi,edi
  404b93:	sbb    eax,0x1eebbb68
  404b98:	pop    ecx
  404b99:	mov    ecx,0xde136e23
  404b9e:	fbld   TBYTE PTR [ebx-0x4c]
  404ba1:	and    BYTE PTR [ebx],ch
  404ba3:	jns    0x404bd0
  404ba5:	jle    0x404c18
  404ba7:	mov    ch,0xf8
  404ba9:	lahf   
  404baa:	xchg   edx,eax
  404bab:	outs   dx,BYTE PTR ds:[esi]
  404bac:	test   DWORD PTR [esi],0xde1ed94c
  404bb2:	push   es
  404bb3:	std    
  404bb4:	out    0x87,al
  404bb6:	inc    ecx
  404bb7:	pop    ds
  404bb8:	(bad)  
  404bb9:	psllq  mm1,QWORD PTR [ebx]
  404bbc:	pop    edx
  404bbd:	cmp    esp,DWORD PTR [ebx]
  404bbf:	in     al,0x13
  404bc1:	push   esi
  404bc2:	cmp    al,0x3d
  404bc4:	sahf   
  404bc5:	push   cs
  404bc6:	adc    eax,DWORD PTR [ebp+0x78194056]
  404bcc:	sub    eax,0xa7630f77
  404bd1:	repz pop edx
  404bd3:	clc    
  404bd4:	pusha  
  404bd5:	push   cs
  404bd6:	int3   
  404bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd8:	mov    cl,0x8f
  404bda:	into   
  404bdb:	pop    edx
  404bdc:	clc    
  404bdd:	xchg   BYTE PTR [eax],al
  404bdf:	daa    
  404be0:	popa   
  404be1:	rcr    DWORD PTR [esi-0x654ea03b],cl
  404be7:	bound  esp,QWORD PTR [esi+0x79]
  404bea:	cmp    al,cl
  404bec:	jnp    0x404b8e
  404bee:	mov    esi,0xb528ed19
  404bf3:	or     dh,BYTE PTR [ebp+0xb]
  404bf6:	dec    ecx
  404bf7:	sbb    ah,ch
  404bf9:	cmp    BYTE PTR [esi],0x83
  404bfc:	arpl   WORD PTR [esp+edi*8+0x114b88d4],cx
  404c03:	cmp    eax,0x9b95f988
  404c08:	div    BYTE PTR [esp+edi*4+0x2db5b837]
  404c0f:	push   ds
  404c10:	mov    dh,0x90
  404c12:	call   0xd2564db
  404c17:	aam    0xd8
  404c19:	mov    ecx,0x2f6c072d
  404c1e:	sbb    ecx,DWORD PTR [ebx]
  404c20:	(bad)  
  404c22:	push   ss
  404c23:	add    al,0x50
  404c25:	sbb    dh,dh
  404c27:	mov    al,ds:0xb300b937
  404c2c:	push   esi
  404c2d:	sbb    edx,esp
  404c2f:	cmc    
  404c30:	cmp    DWORD PTR [edx],edx
  404c32:	in     al,dx
  404c33:	add    DWORD PTR [edi+0x2435b536],edi
  404c39:	mov    ch,BYTE PTR [esi+esi*1-0x6f]
  404c3d:	sar    bh,cl
  404c3f:	sub    BYTE PTR [ebx-0x3391705e],ah
  404c45:	ss ja  0x404c62
  404c48:	pop    es
  404c49:	add    al,0xdb
  404c4b:	cld    
  404c4c:	add    BYTE PTR [edx],0xbf
  404c4f:	xchg   ebx,eax
  404c50:	xchg   edi,eax
  404c51:	fimul  WORD PTR [edx-0x7c]
  404c54:	hlt    
  404c55:	or     ecx,DWORD PTR [ecx+edi*2-0x6ca32eba]
  404c5c:	add    eax,0x210fd2f5
  404c61:	jnp    0x404c65
  404c63:	jp     0x404c3a
  404c65:	addr16 dec esi
  404c67:	je     0x404ca1
  404c69:	xchg   edi,edi
  404c6b:	aam    0x99
  404c6d:	inc    esi
  404c6e:	jl     0x404ca6
  404c70:	sub    BYTE PTR [ecx],0xc
  404c73:	icebp  
  404c74:	shr    BYTE PTR [edx-0x305d932a],0xd2
  404c7b:	retf   0x7812
  404c7e:	loop   0x404c87
  404c80:	dec    edx
  404c81:	lds    ebx,FWORD PTR [edi+0x4294f31e]
  404c87:	sub    eax,0xf2dd0f57
  404c8c:	fsub   QWORD PTR [edi+0x20aa1890]
  404c92:	xor    BYTE PTR [ecx],dl
  404c94:	test   BYTE PTR [ebx+0x74],dh
  404c97:	jge    0x404c78
  404c99:	retf   
  404c9a:	cmc    
  404c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c9c:	sub    eax,0xf1add0ba
  404ca1:	(bad)
  404ca5:	jp     0x404ce0
  404ca7:	ret    
  404ca8:	outs   dx,DWORD PTR ds:[esi]
  404ca9:	or     eax,0x700a2e
  404cae:	pop    esi
  404caf:	rcr    DWORD PTR [ebx],0x61
  404cb2:	xor    al,0xc8
  404cb4:	and    ecx,DWORD PTR [ecx+0x66]
  404cb7:	aad    0xa6
  404cb9:	and    bl,BYTE PTR [esi]
  404cbb:	mov    ch,0x40
  404cbd:	fisub  DWORD PTR [ebp-0x4d251cdf]
  404cc3:	stc    
  404cc4:	inc    edx
  404cc5:	mov    dl,0xdc
  404cc7:	repz xor ebx,DWORD PTR [ebx-0x5a]
  404ccb:	or     al,0xae
  404ccd:	mov    ds:0xaae3c27,al
  404cd2:	pop    esp
  404cd3:	pop    ebx
  404cd4:	xor    eax,0x13816b85
  404cd9:	pop    DWORD PTR [ecx+0x3b658d43]
  404cdf:	adc    DWORD PTR [eax+edi*2-0x5f2047c4],0xffffffc9
  404ce7:	loop   0x404c9f
  404ce9:	repnz or ch,cl
  404cec:	pop    edx
  404ced:	add    al,0xd0
  404cef:	gs pushw ss
  404cf2:	or     dh,BYTE PTR [esi]
  404cf4:	test   al,0x1e
  404cf6:	popa   
  404cf7:	add    eax,DWORD PTR [ebp+0x75]
  404cfa:	dec    ebp
  404cfb:	push   eax
  404cfc:	pop    esi
  404cfd:	mov    ch,0x7d
  404cff:	push   cs
  404d00:	enter  0x9173,0x9c
  404d04:	(bad)  [eax-0x22]
  404d07:	(bad)  
  404d08:	out    dx,al
  404d09:	inc    ebp
  404d0a:	mov    ah,0x89
  404d0c:	dec    esi
  404d0d:	into   
  404d0e:	pop    ds
  404d0f:	mov    edi,0x92f79e96
  404d14:	cli    
  404d15:	xchg   ebx,eax
  404d16:	xor    BYTE PTR [ebx-0x63],bl
  404d19:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404d1b:	cli    
  404d1c:	inc    esp
  404d1d:	(bad)  
  404d1e:	jmp    0x404cf4
  404d20:	in     al,0x8d
  404d22:	or     eax,0x66c69a7
  404d27:	loopne 0x404d46
  404d29:	loopne 0x404d8f
  404d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d2c:	aad    0x13
  404d2e:	std    
  404d2f:	(bad)  
  404d30:	xor    al,0x2c
  404d32:	popf   
  404d33:	lods   al,BYTE PTR ds:[esi]
  404d34:	in     al,dx
  404d35:	mov    al,0x53
  404d37:	ja     0x404cd6
  404d39:	(bad)  [ebp+0xc66f8b3]
  404d3f:	cli    
  404d40:	enter  0xc54c,0xa9
  404d44:	neg    BYTE PTR ss:[edi+esi*1+0x3c]
  404d49:	stos   BYTE PTR es:[edi],al
  404d4a:	cs inc esp
  404d4c:	xor    cl,BYTE PTR [esi]
  404d4e:	dec    eax
  404d4f:	push   cs
  404d50:	fbstp  TBYTE PTR [eax]
  404d52:	leave  
  404d53:	sub    al,0xd5
  404d55:	sub    DWORD PTR [edx-0x38a1706e],0xffffffed
  404d5c:	cs dec edx
  404d5e:	adc    eax,0x571f8033
  404d63:	(bad)  
  404d64:	add    DWORD PTR [ebp-0x53],ebp
  404d67:	(bad)  
  404d68:	repnz push ebp
  404d6a:	js     0x404dbf
  404d6c:	mov    edx,0xe1ebda77
  404d71:	loop   0x404d8a
  404d73:	nop
  404d74:	pop    esi
  404d75:	xchg   esp,eax
  404d76:	inc    esp
  404d77:	call   eax
  404d79:	in     eax,0xf9
  404d7b:	xchg   esp,eax
  404d7c:	in     eax,0x5c
  404d7e:	js     0x404d84
  404d80:	jg     0x404d89
  404d82:	add    bh,ch
  404d84:	iret   
  404d85:	sub    eax,0x357e0d30
  404d8a:	inc    edi
  404d8b:	call   eax
  404d8d:	sbb    dh,cl
  404d8f:	dec    edi
  404d90:	sahf   
  404d91:	rol    BYTE PTR [edx+0x2eed843b],0x62
  404d98:	(bad)  
  404d99:	in     eax,0x25
  404d9b:	inc    DWORD PTR [edx]
  404d9d:	dec    eax
  404d9e:	inc    ebx
  404d9f:	cwde   
  404da0:	fisub  DWORD PTR [esi]
  404da2:	std    
  404da3:	in     eax,0x6
  404da5:	mov    DWORD PTR [ecx],edx
  404da7:	jns    0x404d9e
  404da9:	xchg   ebp,eax
  404daa:	fs aam 0x95
  404dad:	add    DWORD PTR [ecx-0x9],esi
  404db0:	fxch   st(0)
  404db2:	movaps xmm4,XMMWORD PTR [eax-0x18fe87]
  404db9:	mov    BYTE PTR [edx],ah
  404dbb:	test   DWORD PTR fs:[eax],eax
  404dbe:	sbb    cl,al
  404dc0:	sub    eax,0xff2e9673
  404dc5:	xchg   ecx,eax
  404dc6:	test   eax,0x944f3b33
  404dcb:	imul   ecx,DWORD PTR [eax-0x56],0xd1ba5612
  404dd2:	sbb    eax,0x9d3b5252
  404dd7:	mov    esi,0xa668450f
  404ddc:	mov    ecx,DWORD PTR [esi+0x2c04bb83]
  404de2:	ret    0x2e7e
  404de5:	cmp    ebp,ebp
  404de7:	add    BYTE PTR [edi],ch
  404de9:	xchg   ebx,eax
  404dea:	sub    DWORD PTR [ebp+ebx*4-0x73],edx
  404dee:	loopne 0x404e5f
  404df0:	(bad)  
  404df1:	scas   eax,DWORD PTR es:[edi]
  404df2:	fnsave [edx+ecx*2+0x366de4c7]
  404df9:	mov    dh,0xb1
  404dfb:	and    cl,BYTE PTR [ecx+0x5d]
  404dfe:	daa    
  404dff:	push   ebp
  404e00:	scas   eax,DWORD PTR es:[edi]
  404e01:	das    
  404e02:	and    BYTE PTR [edi-0x2e],0x3a
  404e06:	arpl   WORD PTR [ecx+eiz*2+0x79084cf8],dx
  404e0d:	xchg   edx,eax
  404e0e:	or     eax,0x3f8d04e0
  404e13:	mov    ch,0xd1
  404e15:	inc    edi
  404e16:	sbb    al,bh
  404e18:	(bad)  
  404e19:	out    dx,eax
  404e1a:	pop    esp
  404e1b:	and    al,0xb5
  404e1d:	pop    ds
  404e1e:	sub    BYTE PTR [edx-0x7a],0xac
  404e22:	ja     0x404e28
  404e24:	clc    
  404e25:	pop    esp
  404e26:	mov    esp,0x26dd1d23
  404e2b:	pop    edi
  404e2c:	jge    0x404e57
  404e2e:	push   cs
  404e2f:	sbb    BYTE PTR [ebp+edx*2+0x60],bh
  404e33:	sub    ebp,ecx
  404e35:	add    al,0xef
  404e37:	add    eax,0xcab2e94b
  404e3c:	xchg   ecx,eax
  404e3d:	loopne 0x404ddd
  404e3f:	and    BYTE PTR [edi],dh
  404e41:	inc    ecx
  404e42:	and    ecx,esi
  404e44:	cs je  0x404ec0
  404e47:	xor    BYTE PTR ds:0xc841af6,cl
  404e4d:	call   0xb3078369
  404e52:	pushf  
  404e53:	push   ds
  404e54:	mov    ds:0x5320e7bf,al
  404e59:	(bad)  
  404e5a:	ss int3 
  404e5c:	mov    ch,0x8d
  404e5e:	pop    ebp
  404e5f:	add    DWORD PTR [edx-0x1010e54d],ecx
  404e65:	add    ah,dh
  404e67:	mov    edx,0xd136bf7c
  404e6c:	cmp    eax,0x12d3a2fe
  404e71:	les    esp,FWORD PTR [esi+0x39b20d16]
  404e77:	pop    ebx
  404e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e79:	fisub  DWORD PTR [ebx-0x36807559]
  404e7f:	ja     0x404e3e
  404e81:	fs push es
  404e83:	fwait
  404e84:	xor    ecx,DWORD PTR [ebx]
  404e86:	jecxz  0x404e96
  404e88:	fcmovnu st,st(2)
  404e8a:	xchg   esp,eax
  404e8b:	xor    BYTE PTR [esi+0x2d],0xc9
  404e8f:	lock loope 0x404e5f
  404e92:	retf   0x8e98
  404e95:	js     0x404e6c
  404e97:	add    edx,0xffffffc1
  404e9a:	or     eax,0x9bdfdf41
  404e9f:	push   edx
  404ea0:	mov    dh,ah
  404ea2:	cmp    eax,DWORD PTR [ecx-0x26]
  404ea5:	dec    eax
  404ea6:	cmp    ebp,ecx
  404ea8:	xchg   ecx,eax
  404ea9:	sub    dh,dh
  404eab:	mov    ch,BYTE PTR [ecx+0x19]
  404eae:	fiadd  DWORD PTR [ebx]
  404eb0:	sbb    eax,0xf64b25d6
  404eb5:	push   esi
  404eb6:	lods   al,BYTE PTR ds:[esi]
  404eb7:	shl    BYTE PTR [ebp+0x35],1
  404eba:	scas   eax,DWORD PTR es:[edi]
  404ebb:	mov    eax,ds:0xf256ec8
  404ec0:	addr16 pop es
  404ec2:	lods   eax,DWORD PTR ds:[esi]
  404ec3:	cmp    al,0xd5
  404ec5:	mov    ebp,0xdc691ebc
  404eca:	pop    ebp
  404ecb:	fmul   QWORD PTR [eax]
  404ecd:	adc    dl,cl
  404ecf:	jbe    0x404f06
  404ed1:	ficomp DWORD PTR [esi]
  404ed3:	xchg   DWORD PTR [ecx-0x62],ecx
  404ed6:	scas   al,BYTE PTR es:[edi]
  404ed7:	cmp    bl,0x28
  404eda:	leave  
  404edb:	dec    si
  404edd:	stc    
  404ede:	add    BYTE PTR [ebp-0x7],bh
  404ee1:	pop    esp
  404ee2:	popa   
  404ee3:	dec    ecx
  404ee4:	scas   eax,DWORD PTR es:[edi]
  404ee5:	and    BYTE PTR [ebx-0x154e3aac],ah
  404eeb:	or     edi,eax
  404eed:	and    ch,al
  404eef:	imul   esi,esp,0x1be93225
  404ef5:	mov    ch,0x9b
  404ef7:	pop    ebx
  404ef8:	pop    ebx
  404ef9:	and    bh,dh
  404efb:	jnp    0x404f51
  404efd:	jmp    0x6c9aa86e
  404f02:	mov    ch,0xe6
  404f04:	jp     0x404f62
  404f06:	sub    al,0x3e
  404f08:	sub    edx,esp
  404f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0b:	jne    0x404eca
  404f0d:	int    0x74
  404f0f:	fisub  WORD PTR [eax-0x57fec927]
  404f15:	jbe    0x404ec9
  404f17:	addr16 xchg esi,eax
  404f19:	mov    esp,esi
  404f1b:	jb     0x404f55
  404f1d:	bound  esi,QWORD PTR [edi]
  404f1f:	dec    esi
  404f20:	les    eax,FWORD PTR [edx-0x20e5ee65]
  404f26:	lahf   
  404f27:	xor    eax,0x6c9e0a40
  404f2c:	pop    ecx
  404f2d:	fs sbb al,0x8b
  404f30:	inc    ebp
  404f31:	cld    
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0x9041f58a
  405700:	mov    WORD PTR [edi+edx*8+0x377a7a5f],ds
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	xor    al,0x40
  40570c:	lds    ecx,FWORD PTR [edi]
  40570e:	stos   BYTE PTR es:[edi],al
  40570f:	sahf   
  405710:	daa    
  405711:	jmp    0x40571a
  405713:	mov    cl,0x79
  405715:	scas   al,BYTE PTR es:[edi]
  405716:	int3   
  405717:	les    edx,FWORD PTR ds:0xcb79f192
  40571d:	retf   0xdf6f
  405720:	sbb    edi,DWORD PTR [ebp-0x373595f8]
  405726:	push   ds
  405727:	xchg   esp,eax
  405728:	jge    0x4056c6
  40572a:	ror    BYTE PTR [edi],cl
  40572c:	fisub  DWORD PTR [esi+0x6d5a6935]
  405732:	test   DWORD PTR [edx+0x36],esi
  405735:	pop    ecx
  405736:	add    dh,BYTE PTR [ecx+0x27]
  405739:	(bad)  
  40573a:	(bad)  
  40573b:	jnp    0x405717
  40573d:	les    edx,FWORD PTR [eax-0x68f063ac]
  405743:	or     BYTE PTR [edx+0xb33c67b],ch
  405749:	dec    esp
  40574a:	add    eax,0x8d9774c2
  40574f:	xchg   edi,eax
  405750:	ja     0x40577e
  405752:	mov    eax,ds:0x99189641
  405757:	xor    al,0x9e
  405759:	mov    bh,0x69
  40575b:	fidivr DWORD PTR [ebx+0x2f]
  40575e:	push   esp
  40575f:	jne    0x405763
  405761:	mov    bl,ah
  405763:	les    ebp,FWORD PTR [ebx-0x15]
  405766:	xchg   ebx,eax
  405767:	jbe    0x40572c
  405769:	retf   
  40576a:	in     al,0xa0
  40576c:	xchg   ecx,eax
  40576d:	inc    ebp
  40576e:	or     BYTE PTR [ecx],dl
  405770:	cmp    eax,0x4614b1ad
  405775:	add    ebp,esp
  405777:	xor    eax,0xcfd65411
  40577c:	dec    edx
  40577d:	sbb    eax,0xda4f11c9
  405782:	bound  eax,QWORD PTR [edi-0x24]
  405785:	scas   al,BYTE PTR es:[edi]
  405786:	sbb    al,0x2a
  405788:	call   0x7997f041
  40578d:	data16 loope 0x4057e2
  405790:	and    eax,0x3fe3d7ea
  405795:	push   ss
  405796:	adc    dh,BYTE PTR [esi+0x36]
  405799:	icebp  
  40579a:	mov    esi,DWORD PTR [eax]
  40579c:	push   cs
  40579d:	bound  edx,QWORD PTR [eax]
  40579f:	pop    ebx
  4057a0:	jo     0x405816
  4057a2:	scas   al,BYTE PTR es:[edi]
  4057a3:	rcr    bl,1
  4057a5:	ins    DWORD PTR es:[edi],dx
  4057a6:	mov    al,0x49
  4057a8:	inc    esi
  4057a9:	and    BYTE PTR [edx-0x1a],ch
  4057ac:	dec    ebp
  4057ad:	stc    
  4057ae:	mov    WORD PTR [esi],ds
  4057b0:	sub    DWORD PTR [esi-0x37],esp
  4057b3:	add    eax,0xde543f16
  4057b8:	sti    
  4057b9:	call   0x290:0x70ce24d3
  4057c0:	mov    bl,0x7f
  4057c2:	push   es
  4057c3:	add    ecx,ebx
  4057c5:	pop    ebx
  4057c6:	push   ds
  4057c7:	pop    ecx
  4057c8:	cmp    BYTE PTR [ecx],ah
  4057ca:	mov    bh,0xb
  4057cc:	xor    BYTE PTR [eax],dh
  4057ce:	lock stos DWORD PTR es:[edi],eax
  4057d0:	out    dx,eax
  4057d1:	scas   eax,DWORD PTR es:[edi]
  4057d2:	ror    BYTE PTR [esi-0x384c256b],cl
  4057d8:	jbe    0x405802
  4057da:	fdivr  st,st(1)
  4057dc:	mov    ebp,0xe85f4a98
  4057e1:	adc    al,0x97
  4057e3:	ret    
  4057e4:	fmul   DWORD PTR [edx-0x25]
  4057e7:	pop    ds
  4057e8:	adc    eax,DWORD PTR [esp+esi*1+0x1813a7b1]
  4057ef:	mov    bl,ch
  4057f1:	sub    BYTE PTR [edx],al
  4057f3:	add    al,0xd0
  4057f5:	add    esp,DWORD PTR [ecx]
  4057f7:	and    BYTE PTR [ecx],dh
  4057f9:	xchg   edi,eax
  4057fa:	ror    ebp,1
  4057fc:	popa   
  4057fd:	int3   
  4057fe:	jnp    0x4057c8
  405800:	retf   0x10a4
  405803:	mov    esi,edx
  405805:	jae    0x405866
  405807:	xor    al,0x5a
  405809:	in     eax,0xe8
  40580b:	cli    
  40580c:	(bad)  
  40580d:	std    
  40580e:	xlat   BYTE PTR ds:[ebx]
  40580f:	mov    eax,0x6254c66e
  405814:	test   DWORD PTR [eax-0x68],edi
  405817:	push   ss
  405818:	out    0x30,eax
  40581a:	lods   al,BYTE PTR ds:[esi]
  40581b:	pop    ds
  40581c:	cs in  eax,0x41
  40581f:	pop    esp
  405820:	imul   ebp,esi,0xfffffffb
  405823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405824:	popa   
  405825:	out    0xd6,eax
  405827:	mov    ecx,0x783bb909
  40582c:	(bad)  
  40582d:	mov    ebx,0x64a9ca9d
  405832:	mov    ebx,0x5e533d75
  405837:	jmp    0x40584d
  405839:	iret   
  40583a:	rol    DWORD PTR [ebp-0x36ad1050],0xef
  405841:	push   0x5185b10f
  405846:	mov    ch,BYTE PTR [esi+0x52]
  405849:	retf   
  40584a:	sub    bh,dh
  40584c:	int    0x8a
  40584e:	jne    0x4057eb
  405850:	lahf   
  405851:	push   ecx
  405852:	mov    esi,fs
  405854:	pop    ebx
  405855:	mov    DWORD PTR [eax+0x79],0xd067f021
  40585c:	sbb    BYTE PTR [edi+edi*8],dl
  40585f:	cmp    eax,eax
  405861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405862:	jo     0x4058a5
  405864:	pop    es
  405865:	ror    edi,cl
  405867:	(bad)  
  405868:	adc    ah,ah
  40586a:	and    al,dh
  40586c:	iret   
  40586d:	or     al,bh
  40586f:	add    ecx,DWORD PTR [esi]
  405871:	fidiv  WORD PTR [eax-0x53daa575]
  405877:	cmp    al,0x22
  405879:	pushf  
  40587a:	push   edx
  40587b:	mov    esi,DWORD PTR gs:[ecx]
  40587e:	dec    eax
  40587f:	sar    edi,0x3a
  405882:	test   BYTE PTR [eax+0x2c],bl
  405885:	push   edi
  405886:	cs add eax,0xa660f9b4
  40588c:	daa    
  40588d:	ss int3 
  40588f:	loop   0x405833
  405891:	mov    ah,0x43
  405893:	adc    dl,BYTE PTR [edx+edi*2+0x1d64bb9d]
  40589a:	jecxz  0x40582f
  40589c:	mov    edx,0x114e2f62
  4058a1:	aam    0xc8
  4058a3:	cmp    edi,DWORD PTR [ebx+0x7c813c46]
  4058a9:	inc    ebp
  4058aa:	inc    ebp
  4058ab:	clc    
  4058ac:	call   0x185c:0x1a702748
  4058b3:	imul   ecx,DWORD PTR [eax],0xe57a0ee3
  4058b9:	jle    0x4058a4
  4058bb:	push   es
  4058bc:	jbe    0x405875
  4058be:	(bad)  
  4058bf:	scas   eax,DWORD PTR es:[edi]
  4058c0:	push   ss
  4058c1:	inc    edx
  4058c2:	or     DWORD PTR [edi*4+0xc37e072],edi
  4058c9:	mov    eax,ds:0x2ad58705
  4058ce:	adc    al,0x2
  4058d0:	push   es
  4058d1:	push   cs
  4058d2:	adc    al,0xba
  4058d4:	(bad)  
  4058d5:	xchg   edi,eax
  4058d6:	sar    BYTE PTR [ecx+0xe9f2019],1
  4058dc:	inc    ecx
  4058dd:	jbe    0x405893
  4058df:	sbb    BYTE PTR [ebx],cl
  4058e1:	(bad)  
  4058e2:	and    al,0x58
  4058e4:	add    DWORD PTR [ebx-0x25eb7a8a],0x5ec48e08
  4058ee:	cmc    
  4058ef:	icebp  
  4058f0:	ret    
  4058f1:	mov    dh,0x4a
  4058f3:	scas   al,BYTE PTR es:[edi]
  4058f4:	or     BYTE PTR [esp+edx*1-0x2],dl
  4058f8:	fmul   DWORD PTR [edi]
  4058fa:	mov    edx,DWORD PTR [eax-0x14a9925f]
  405900:	test   BYTE PTR [esi],ch
  405902:	jecxz  0x405978
  405904:	(bad)  
  405905:	(bad)  
  405906:	jl     0x405922
  405908:	and    al,0x45
  40590a:	mov    es,WORD PTR [edi+0x41927822]
  405910:	int3   
  405911:	scas   eax,DWORD PTR es:[edi]
  405912:	inc    esp
  405913:	fnstsw WORD PTR [ebx]
  405915:	xchg   edi,eax
  405916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405917:	push   0xffffffb3
  405919:	loop   0x4058db
  40591b:	fprem  
  40591d:	jp     0x4058ca
  40591f:	xor    eax,0xa3df3eba
  405924:	inc    edi
  405925:	add    eax,0x762c7aa9
  40592a:	ins    BYTE PTR es:[edi],dx
  40592b:	mov    edi,0xf34310c9
  405930:	jmp    0xedac:0xcfae8b5c
  405937:	das    
  405938:	mov    al,0x3
  40593a:	cwde   
  40593b:	jg     0x405985
  40593d:	aam    0x3c
  40593f:	mov    eax,0x62af3918
  405944:	test   BYTE PTR [eax-0x60],cl
  405947:	adc    eax,0xe3bc321e
  40594c:	lahf   
  40594d:	sbb    al,0xeb
  40594f:	repz aas 
  405951:	(bad)  
  405953:	push   cs
  405954:	out    0xfc,eax
  405956:	adc    DWORD PTR [eax+0x3a],esi
  405959:	call   0xbf208854
  40595e:	sub    DWORD PTR [ebp+0x9b123b1],ebp
  405964:	mov    ?,eax
  405966:	xchg   BYTE PTR [edx+ebp*1+0x63965c93],cl
  40596d:	inc    ebx
  40596e:	nop
  40596f:	iret   
  405970:	jmp    0xc99f:0x7d1d6b26
  405977:	add    edx,ebx
  405979:	inc    esp
  40597a:	jg     0x40593c
  40597c:	nop
  40597d:	push   ds
  40597e:	sbb    ebp,DWORD PTR [ebx-0x6d]
  405981:	outs   dx,BYTE PTR ds:[esi]
  405982:	sub    DWORD PTR [esi+0x6765ee9d],esp
  405988:	inc    edi
  405989:	mov    ebx,0x6b1571a7
  40598e:	sar    bh,cl
  405990:	cli    
  405991:	inc    ax
  405993:	in     eax,dx
  405994:	adc    eax,0xdac1212f
  405999:	mov    dl,0xaa
  40599b:	jbe    0x405965
  40599d:	leave  
  40599e:	leave  
  40599f:	sub    cl,dh
  4059a1:	(bad)  
  4059a2:	push   ds
  4059a3:	dec    edi
  4059a4:	mov    edi,0xe4947635
  4059a9:	cmp    ecx,eax
  4059ab:	stos   DWORD PTR es:[edi],eax
  4059ac:	fsub   DWORD PTR [edx]
  4059ae:	or     al,BYTE PTR [ebx-0x37a8efc8]
  4059b4:	pop    esp
  4059b5:	jb     0x4059e6
  4059b7:	or     al,0x92
  4059b9:	(bad)  
  4059ba:	les    ecx,FWORD PTR [eax]
  4059bc:	or     eax,0x998369be
  4059c1:	fdiv   st(4),st
  4059c3:	popf   
  4059c4:	repnz sti 
  4059c6:	mov    dh,0xd1
  4059c8:	sbb    BYTE PTR [edi],0x47
  4059cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059cc:	dec    BYTE PTR [ecx-0x6]
  4059cf:	(bad)  
  4059d0:	scas   al,BYTE PTR es:[edi]
  4059d1:	jb     0x405a23
  4059d3:	pop    ss
  4059d4:	ror    BYTE PTR [ecx+ebp*1],cl
  4059d7:	imul   BYTE PTR [ecx+ecx*1+0x710bd0fa]
  4059de:	push   eax
  4059df:	aas    
  4059e0:	dec    eax
  4059e1:	pop    esp
  4059e2:	dec    eax
  4059e3:	sub    DWORD PTR [edx],esi
  4059e5:	test   eax,0x6f92911
  4059ea:	push   esp
  4059eb:	stos   BYTE PTR es:[edi],al
  4059ec:	shl    DWORD PTR [ebp-0x6312b873],cl
  4059f2:	fs cld 
  4059f4:	jae    0x405a4e
  4059f6:	dec    esi
  4059f7:	clc    
  4059f8:	cmp    dl,dl
  4059fa:	cmp    BYTE PTR [edi+edx*2],bh
  4059fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059fe:	push   ebx
  4059ff:	cmp    esp,esp
  405a01:	ins    DWORD PTR es:[edi],dx
  405a02:	retf   0x70b2
  405a05:	adc    ecx,DWORD PTR [edi]
  405a07:	scas   eax,DWORD PTR es:[edi]
  405a08:	aas    
  405a09:	outs   dx,DWORD PTR ds:[esi]
  405a0a:	add    eax,0x1ff9899e
  405a0f:	aaa    
  405a10:	ficomp DWORD PTR [ecx+0x1270d701]
  405a16:	sahf   
  405a17:	jmp    0x405a00
  405a19:	test   al,0xa5
  405a1b:	cmp    BYTE PTR [edx+0x71b1ac32],0xd0
  405a22:	xchg   edi,eax
  405a23:	dec    esi
  405a24:	sbb    esi,DWORD PTR [eax-0xd]
  405a27:	lods   eax,DWORD PTR ds:[esi]
  405a28:	shl    DWORD PTR [esi-0x22],cl
  405a2b:	jl     0x405a7b
  405a2d:	sbb    DWORD PTR [ebx],eax
  405a2f:	popf   
  405a30:	inc    esi
  405a31:	outs   dx,BYTE PTR ds:[esi]
  405a32:	lods   eax,DWORD PTR ds:[esi]
  405a33:	ret    
  405a34:	fadd   QWORD PTR [edi]
  405a36:	outs   dx,BYTE PTR ds:[esi]
  405a37:	cmp    eax,esi
  405a39:	xchg   esp,eax
  405a3a:	dec    ecx
  405a3b:	dec    esi
  405a3c:	jns    0x405ab2
  405a3e:	mov    ds:0x4c883a36,eax
  405a43:	dec    edi
  405a44:	test   bl,bl
  405a46:	adc    DWORD PTR [eax+0x70398a22],esp
  405a4c:	cmp    cl,BYTE PTR [esp+eiz*4]
  405a4f:	pop    ebx
  405a50:	cld    
  405a51:	imul   ebp,DWORD PTR [ebp-0x14],0xa5fe88f7
  405a58:	cmc    
  405a59:	clc    
  405a5a:	xor    al,0xfe
  405a5c:	jb     0x405acd
  405a5e:	adc    ch,dh
  405a60:	jnp    0x405a9b
  405a62:	dec    esp
  405a63:	ret    0x5262
  405a66:	loopne 0x405a97
  405a68:	pop    edx
  405a69:	mov    ds:0xc263fe7f,eax
  405a6e:	dec    esp
  405a6f:	sti    
  405a70:	sti    
  405a71:	repnz pop edx
  405a73:	inc    eax
  405a74:	pop    esi
  405a75:	in     eax,dx
  405a76:	dec    ebp
  405a77:	cmp    DWORD PTR [edx+ecx*1],0x8891f2fe
  405a7e:	add    eax,0xa0c1a4b8
  405a84:	cs lods eax,DWORD PTR ss:[esi]
  405a87:	dec    esi
  405a88:	lods   al,BYTE PTR ds:[esi]
  405a89:	mov    esp,0x17300f36
  405a8e:	xchg   ebx,eax
  405a8f:	les    esi,FWORD PTR [esi-0x65]
  405a92:	jo     0x405aaa
  405a94:	outs   dx,BYTE PTR cs:[esi]
  405a96:	xor    eax,0x8840ed51
  405a9b:	repz pop eax
  405a9d:	mov    al,0xbf
  405a9f:	mov    cl,BYTE PTR [esi-0x7e]
  405aa2:	frstor [esi]
  405aa4:	int3   
  405aa5:	clc    
  405aa6:	lds    esi,FWORD PTR [ebp+ebx*1+0x31]
  405aaa:	cmp    BYTE PTR cs:[ebx],ch
  405aad:	call   0x1122e8e8
  405ab2:	jmp    0x46d9:0x64ac847c
  405ab9:	out    dx,eax
  405aba:	test   BYTE PTR [edx],0x3
  405abd:	(bad)  
  405abe:	mov    eax,0xa615e4fa
  405ac3:	push   ebp
  405ac4:	add    eax,0x2e2dae81
  405ac9:	mov    al,ds:0xdc6ee0cf
  405ace:	pop    ss
  405acf:	sub    dh,BYTE PTR [ecx+0x40]
  405ad2:	xor    esp,esi
  405ad4:	jmp    0x28d3:0x688c606c
  405adb:	int    0x92
  405add:	std    
  405ade:	sbb    BYTE PTR [edi+0x4],cl
  405ae1:	jp     0x405b40
  405ae3:	cmp    bl,BYTE PTR [ebp-0x496c37d5]
  405ae9:	iret   
  405aea:	stos   DWORD PTR es:[edi],eax
  405aeb:	add    al,0x33
  405aed:	jns    0x405b49
  405aef:	mov    ecx,esi
  405af1:	inc    edx
  405af2:	inc    ebp
  405af3:	mul    edi
  405af5:	stc    
  405af6:	pop    ebx
  405af7:	sbb    BYTE PTR [edx+0x30],bh
  405afa:	add    dh,BYTE PTR [ecx-0x450bc2e4]
  405b00:	push   ecx
  405b01:	inc    esi
  405b02:	pop    edi
  405b03:	pop    es
  405b04:	pop    eax
  405b05:	inc    eax
  405b06:	dec    edx
  405b07:	inc    ebx
  405b08:	or     DWORD PTR [ebx],0xfffffffd
  405b0b:	add    BYTE PTR [ecx-0x608f9b40],al
  405b11:	adc    DWORD PTR [ebp-0x341f52c8],ebx
  405b17:	stc    
  405b18:	ror    ah,cl
  405b1a:	imul   esi,DWORD PTR [ebx],0x54
  405b1d:	add    DWORD PTR [ebp-0x642886e5],0x8fb8d906
  405b27:	out    dx,al
  405b28:	icebp  
  405b29:	push   esp
  405b2a:	fwait
  405b2b:	out    dx,eax
  405b2c:	loop   0x405b13
  405b2e:	(bad)  
  405b2f:	and    al,BYTE PTR [eax-0x1f99f235]
  405b35:	pop    esi
  405b36:	call   0x5121:0xec4aec6
  405b3d:	mov    al,ds:0x79c7636
  405b42:	mov    al,0x57
  405b44:	sub    DWORD PTR [ecx-0x7],esi
  405b47:	sub    al,0x61
  405b49:	(bad)  
  405b4a:	(bad)  
  405b4b:	fwait
  405b4c:	push   ebp
  405b4d:	sub    bh,ch
  405b4f:	mov    edx,0x2008fbd6
  405b54:	loop   0x405b3c
  405b56:	out    dx,eax
  405b57:	(bad)  
  405b58:	jl     0x405b46
  405b5a:	jb     0x405ba3
  405b5c:	mov    ch,0x4f
  405b5e:	sbb    DWORD PTR [ecx],ebx
  405b60:	jnp    0x405b26
  405b62:	fmul   st,st(2)
  405b64:	fwait
  405b65:	lods   al,BYTE PTR cs:[esi]
  405b67:	sqrtps xmm2,XMMWORD PTR [eax-0xc68d545]
  405b6e:	popf   
  405b6f:	dec    ebx
  405b70:	retf   0x6d71
  405b73:	sbb    esi,DWORD PTR [eax]
  405b75:	pop    ss
  405b76:	cmp    BYTE PTR [ebx-0x2d],ch
  405b79:	ds popf 
  405b7b:	retf   
  405b7c:	leave  
  405b7d:	xchg   esi,eax
  405b7e:	jmp    0x9858:0x4d953c24
  405b85:	mov    ?,WORD PTR [eax-0x2f55196d]
  405b8b:	shr    BYTE PTR [ebp+ebp*1+0x21],0xa6
  405b90:	(bad)  
  405b91:	jmp    0x4658a44d
  405b96:	adc    bl,al
  405b98:	or     al,0xc
  405b9a:	in     al,0x55
  405b9c:	adc    BYTE PTR [eax-0x78],bh
  405b9f:	jmp    0x9361:0x2d2e
  405ba5:	popa   
  405ba6:	pop    esp
  405ba7:	push   ecx
  405ba8:	jg     0x405b73
  405baa:	shr    DWORD PTR [eax+ecx*1+0x4e],0x4e
  405baf:	cmc    
  405bb0:	popa   
  405bb1:	or     bl,BYTE PTR [edx-0x15594f38]
  405bb7:	push   ds
  405bb8:	mov    esp,0xcc783cbb
  405bbd:	stc    
  405bbe:	pop    DWORD PTR ss:[ecx-0x4b]
  405bc2:	push   0xffffffcb
  405bc4:	ret    
  405bc5:	loope  0x405bf8
  405bc7:	fwait
  405bc8:	iret   
  405bc9:	pop    ebp
  405bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bcb:	add    esi,eax
  405bcd:	iret   
  405bce:	mov    edi,0xd9ce2ca1
  405bd3:	cdq    
  405bd4:	sub    dl,BYTE PTR [edx+0x29ede78f]
  405bda:	mov    ecx,DWORD PTR [edx+0x1aa6d416]
  405be0:	das    
  405be1:	push   0xa6c79b9c
  405be6:	lock inc esp
  405be8:	(bad)  
  405be9:	aad    0x94
  405beb:	(bad)  
  405bec:	or     BYTE PTR [eax-0x41],0x66
  405bf0:	or     ch,bh
  405bf2:	nop
  405bf3:	cmc    
  405bf4:	fucomi st,st(1)
  405bf6:	mov    WORD PTR [ebp+eiz*8-0x45],?
  405bfa:	add    ecx,eax
  405bfc:	jno    0x405c68
  405bfe:	pop    ds
  405bff:	sub    bl,ch
  405c01:	es jle 0x405c7b
  405c04:	cmp    DWORD PTR [edx],0xffffffdc
  405c07:	xor    DWORD PTR [edx+0x4e],edi
  405c0a:	or     esi,DWORD PTR [eax]
  405c0c:	out    0xee,al
  405c0e:	add    al,0xea
  405c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c11:	cmp    al,0xbc
  405c13:	or     bh,cl
  405c15:	in     al,dx
  405c16:	mov    DWORD PTR [esp+eiz*4-0x55],ecx
  405c1a:	mov    eax,ds:0x523a1f45
  405c1f:	push   esi
  405c20:	jmp    0x1b682053
  405c25:	call   0x15fc9504
  405c2a:	jge    0x405c7f
  405c2c:	ja     0x405ca2
  405c2e:	popa   
  405c2f:	stos   DWORD PTR es:[edi],eax
  405c30:	and    DWORD PTR [esi],0xffffffad
  405c33:	xchg   ch,bh
  405c35:	mov    ebp,0x16bdf84
  405c3a:	jp     0x405c3f
  405c3c:	ins    DWORD PTR es:[edi],dx
  405c3d:	in     eax,0x29
  405c3f:	mov    dl,0x92
  405c41:	sbb    DWORD PTR [edx+ebp*4],esi
  405c44:	aam    0x4d
  405c46:	xchg   ebp,eax
  405c47:	or     al,0xa6
  405c49:	rcpps  xmm4,xmm3
  405c4c:	or     BYTE PTR [ecx+ebx*4-0x2b077e6a],al
  405c53:	and    ch,BYTE PTR [esi]
  405c55:	xor    esi,DWORD PTR [eax]
  405c57:	sbb    ebp,DWORD PTR [edx+0x7d]
  405c5a:	adc    ch,BYTE PTR [eax]
  405c5c:	mov    esi,ebx
  405c5e:	imul   ebx,edx,0xffffffbd
  405c61:	lahf   
  405c62:	into   
  405c63:	sbb    eax,0x2907728
  405c68:	inc    edx
  405c69:	cs push eax
  405c6b:	test   BYTE PTR [ebp+0x22],ah
  405c6e:	stc    
  405c6f:	pop    ebp
  405c70:	push   0xc755d020
  405c75:	sahf   
  405c76:	mov    DWORD PTR [ecx],0xfc9ee42f
  405c7c:	arpl   WORD PTR [ecx+0x6cfcbe03],bx
  405c82:	add    edx,ecx
  405c84:	retf   0x3794
  405c87:	fdivr  DWORD PTR [edi]
  405c89:	(bad)  
  405c8a:	pop    esp
  405c8b:	add    BYTE PTR ds:0xed09f5fd,bh
  405c91:	pusha  
  405c92:	in     eax,dx
  405c93:	pop    es
  405c94:	(bad)  
  405c95:	mov    ah,cl
  405c97:	or     BYTE PTR [ebp+edx*4-0x63114ea8],0x64
  405c9f:	sub    eax,0x7b265cb6
  405ca4:	call   0xb82d6061
  405ca9:	xor    ebp,0xffffffa3
  405cac:	loope  0x405c8b
  405cae:	push   ds
  405caf:	mov    ch,0x3e
  405cb1:	push   ds
  405cb2:	push   ss
  405cb3:	jg     0x405d2e
  405cb5:	cli    
  405cb6:	test   al,0xfd
  405cb8:	test   al,0x6
  405cba:	(bad)  
  405cbc:	stos   DWORD PTR es:[edi],eax
  405cbd:	xchg   esp,eax
  405cbe:	scas   al,BYTE PTR es:[edi]
  405cbf:	gs pop ss
  405cc1:	test   al,0x76
  405cc3:	xor    DWORD PTR [ecx-0x7b],edx
  405cc6:	out    0x19,eax
  405cc8:	cmp    eax,0x8fa1bceb
  405ccd:	xchg   BYTE PTR [ecx],dl
  405ccf:	dec    edi
  405cd0:	xlat   BYTE PTR ds:[ebx]
  405cd1:	mov    edi,0xbc861dbe
  405cd6:	cli    
  405cd7:	xlat   BYTE PTR ds:[ebx]
  405cd8:	mov    cl,0x71
  405cda:	cmp    ebp,DWORD PTR [ebx+0x203403b7]
  405ce0:	add    al,dh
  405ce2:	lds    edi,FWORD PTR [ecx-0x7f3f18cb]
  405ce8:	ret    
  405ce9:	push   esi
  405cea:	in     al,dx
  405ceb:	push   esp
  405cec:	cmp    dh,al
  405cee:	sbb    BYTE PTR [edx-0xa493a82],dh
  405cf4:	inc    edx
  405cf5:	cdq    
  405cf6:	xchg   ebp,eax
  405cf7:	test   al,ah
  405cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cfa:	mov    al,ds:0xb688bc76
  405cff:	jb     0x405d49
  405d01:	jmp    0x405c90
  405d03:	jbe    0x405d74
  405d05:	xor    dl,BYTE PTR [ecx-0xa1c597e]
  405d0b:	call   0xa390:0x92c97473
  405d12:	sbb    esp,DWORD PTR [ebp-0x7d]
  405d15:	repnz into 
  405d17:	xchg   ebp,eax
  405d18:	xchg   edx,eax
  405d19:	push   ecx
  405d1a:	sub    ah,cl
  405d1c:	mov    ecx,0x24eff1a4
  405d21:	cdq    
  405d22:	dec    edx
  405d23:	add    DWORD PTR [ecx+edi*1],ebx
  405d26:	pusha  
  405d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d29:	arpl   ax,di
  405d2b:	jns    0x405ccc
  405d2d:	mov    ebx,0xfb36e313
  405d32:	fs aad 0xa0
  405d35:	push   esi
  405d36:	cmp    edx,DWORD PTR [ecx+eiz*4+0x32c0cb84]
  405d3d:	call   0x7a1:0x4426f4ed
  405d44:	ret    0x7c13
  405d47:	jo     0x405dc1
  405d49:	cld    
  405d4a:	cli    
  405d4b:	sbb    ch,cl
  405d4d:	ret    
  405d4e:	or     dh,ch
  405d50:	xchg   esi,eax
  405d51:	fadd   st(2),st
  405d53:	fdivr  QWORD PTR [esi-0x72]
  405d56:	(bad)  
  405d57:	cmp    al,0xce
  405d59:	mov    esi,0x4360c3fa
  405d5e:	sub    edx,DWORD PTR [ecx+0xa88350e]
  405d64:	pop    esi
  405d65:	icebp  
  405d66:	pop    ecx
  405d67:	adc    ecx,esp
  405d69:	mov    BYTE PTR [ebp-0x56970e34],dl
  405d6f:	aaa    
  405d70:	das    
  405d71:	inc    ebp
  405d72:	call   0xb3503031
  405d77:	xchg   edi,eax
  405d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d79:	or     eax,0xa05c761a
  405d7e:	in     al,dx
  405d7f:	out    dx,al
  405d80:	inc    ecx
  405d81:	dec    ebx
  405d82:	xchg   BYTE PTR [ecx+eax*1],dl
  405d85:	in     eax,0xc6
  405d87:	call   0x5e54:0x973f9a0a
  405d8e:	fwait
  405d8f:	jge    0x405dbf
  405d91:	add    esp,0x1d
  405d94:	ret    
  405d95:	pop    edx
  405d96:	fisubr DWORD PTR [ebx]
  405d98:	cmp    BYTE PTR [eax],0x81
  405d9b:	or     BYTE PTR [ecx],0x2e
  405d9e:	inc    esi
  405d9f:	mov    ebp,DWORD PTR [eax-0x40d57db6]
  405da5:	fisubr DWORD PTR [eax]
  405da7:	mov    ch,0xdb
  405da9:	shl    DWORD PTR [ebp+0x2],1
  405dac:	xchg   ebx,eax
  405dad:	lea    eax,[ebp+edx*2+0x2a]
  405db1:	xchg   edi,eax
  405db2:	jno    0x405e09
  405db4:	mov    edx,DWORD PTR [edx+0x6d92fbc3]
  405dba:	loopne 0x405deb
  405dbc:	outs   dx,BYTE PTR ds:[esi]
  405dbd:	gs jo  0x405dee
  405dc0:	cld    
  405dc1:	loop   0x405db1
  405dc3:	das    
  405dc4:	fidiv  DWORD PTR [ebx]
  405dc6:	mov    eax,ds:0x82bd165
  405dcb:	stc    
  405dcc:	mov    al,0x20
  405dce:	dec    esi
  405dcf:	js     0x405dc9
  405dd1:	sub    DWORD PTR [edx-0x2768dbf4],ecx
  405dd7:	fcomp  QWORD PTR [esi+0xe7fc7cd]
  405ddd:	test   DWORD PTR [ecx-0x2b],ebp
  405de0:	dec    eax
  405de1:	cmp    al,0xf0
  405de3:	leave  
  405de4:	push   ds
  405de5:	loopne 0x405db8
  405de7:	into   
  405de8:	xchg   esp,eax
  405de9:	es ins DWORD PTR es:[edi],dx
  405deb:	mov    al,ds:0x3e264612
  405df0:	cmp    al,0xff
  405df2:	hlt    
  405df3:	in     al,0x89
  405df5:	ficomp WORD PTR [edx+0x7e]
  405df8:	adc    DWORD PTR [ebx-0x4e],ebx
  405dfb:	pushf  
  405dfc:	lods   al,BYTE PTR ds:[esi]
  405dfd:	mov    ?,WORD PTR [ecx+0x70]
  405e00:	xor    al,0x99
  405e02:	mov    DWORD PTR [edi-0x72f08f03],ecx
  405e08:	hlt    
  405e09:	shl    DWORD PTR [ecx+0x57],cl
  405e0c:	ds nop
  405e0e:	jo     0x405e2d
  405e10:	clc    
  405e11:	inc    ebp
  405e12:	or     BYTE PTR [ebp+0x53],bh
  405e15:	mov    eax,ecx
  405e17:	fmul   QWORD PTR [edi+eax*4]
  405e1a:	sbb    eax,0xdcc2513d
  405e1f:	cmp    esi,esi
  405e21:	mov    edx,0xd528d56f
  405e26:	push   ecx
  405e27:	fwait
  405e28:	and    eax,0xcabfdb50
  405e2d:	nop
  405e2e:	dec    edi
  405e2f:	iret   
  405e30:	cmp    BYTE PTR [edx-0x7e1303f4],bl
  405e36:	jmp    0x405e0b
  405e38:	cdq    
  405e39:	inc    ebx
  405e3a:	jmp    0x540d:0x9970173a
  405e41:	xchg   DWORD PTR [edi],esp
  405e43:	mov    edi,DWORD PTR [ebx-0x1a]
  405e46:	dec    ebp
  405e47:	int    0x32
  405e49:	sbb    esi,DWORD PTR [ebp-0x55]
  405e4c:	mov    esi,0x78d1359a
  405e51:	lds    esi,FWORD PTR [ecx]
  405e53:	in     eax,0x6a
  405e55:	xor    ebp,edx
  405e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e58:	sub    BYTE PTR [ebx+0x73],al
  405e5b:	add    BYTE PTR [eax-0xf1e4069],cl
  405e61:	jne    0x405dfa
  405e63:	jnp    0x405df1
  405e65:	repz in eax,dx
  405e67:	jnp    0x405eab
  405e69:	mov    eax,0x272cfcaa
  405e6e:	ja     0x405e26
  405e70:	cld    
  405e71:	lea    edi,[ecx]
  405e73:	push   ebp
  405e74:	test   al,0x5a
  405e76:	xchg   esi,eax
  405e77:	test   BYTE PTR [ecx],bl
  405e79:	fldcw  WORD PTR [ecx+eax*8+0x1d]
  405e7d:	and    al,0x4e
  405e7f:	outs   dx,BYTE PTR ds:[esi]
  405e80:	shl    BYTE PTR [eax+eiz*1+0x72c27411],1
  405e87:	enter  0xa79,0xa4
  405e8b:	pop    ecx
  405e8c:	push   cs
  405e8d:	add    BYTE PTR [edi],ah
  405e8f:	rcl    DWORD PTR [esi],1
  405e91:	push   0xe5382906
  405e96:	push   0xd350210c
  405e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9c:	jmp    0x5b021b7e
  405ea1:	mov    bl,0x41
  405ea3:	jb     0x405ea2
  405ea5:	hlt    
  405ea6:	retf   0x10d4
  405ea9:	or     ecx,edi
  405eab:	mov    dx,0xc772
  405eaf:	push   ecx
  405eb0:	lds    edx,FWORD PTR [ebp+0x48cef284]
  405eb6:	neg    DWORD PTR [ecx-0x49178072]
  405ebc:	pop    ecx
  405ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ebe:	pop    edi
  405ebf:	test   al,0xb0
  405ec1:	stos   DWORD PTR es:[edi],eax
  405ec2:	dec    esi
  405ec3:	imul   esi,DWORD PTR ds:0x13a1c6a4,0x1761407c
  405ecd:	lock jle 0x405e78
  405ed0:	push   esi
  405ed1:	sbb    cl,cl
  405ed3:	leave  
  405ed4:	add    al,0x26
  405ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed7:	xchg   esi,eax
  405ed8:	push   ss
  405ed9:	das    
  405eda:	add    BYTE PTR [ebp-0x45],bh
  405edd:	in     al,dx
  405ede:	ret    0xb2a2
  405ee1:	inc    eax
  405ee2:	and    edi,DWORD PTR [edx]
  405ee4:	jno    0x405f51
  405ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ee7:	pop    eax
  405ee8:	xor    DWORD PTR [eax-0x4],0xffffffa5
  405eec:	pop    ebp
  405eed:	in     al,0x33
  405eef:	sbb    BYTE PTR [esi-0x30],dl
  405ef2:	repz xor edx,0x61
  405ef6:	mov    WORD PTR [edi-0x4a],gs
  405ef9:	shr    DWORD PTR [eax+0x56],1
  405efc:	hlt    
  405efd:	jo     0x405f5f
  405eff:	push   edx
  405f00:	test   DWORD PTR [edi+0x66a44a7c],ecx
  405f06:	jecxz  0x405f08
  405f08:	ins    BYTE PTR es:[edi],dx
  405f09:	aad    0x49
  405f0b:	sbb    DWORD PTR [edx],esp
  405f0d:	(bad)  
  405f0e:	ja     0x405ef5
  405f10:	retf   0x2df9
  405f13:	sub    eax,0x86ee53d6
  405f18:	xor    DWORD PTR [esi-0x4c],0x65
  405f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f1d:	fadd   QWORD PTR [edi-0x3a56486e]
  405f23:	hlt    
  405f24:	push   esp
  405f25:	sbb    DWORD PTR [ebx+0x46222147],esp
  405f2b:	stos   BYTE PTR es:[edi],al
  405f2c:	in     al,dx
  405f2d:	ret    
  405f2e:	adc    edx,DWORD PTR [edx-0x5a6cab03]
  405f34:	out    dx,eax
  405f35:	mov    edi,0xcc9b09ab
  405f3a:	mov    eax,0xd983180
  405f3f:	fmul   st,st(6)
  405f41:	pop    ebx
  405f42:	test   al,0x9f
  405f44:	dec    ebx
  405f45:	xor    BYTE PTR [ecx-0x511a7f33],al
  405f4b:	sahf   
  405f4c:	scas   al,BYTE PTR es:[edi]
  405f4d:	mov    bl,0x67
  405f4f:	aas    
  405f50:	int    0x94
  405f52:	mov    ecx,0xff655b32
  405f57:	inc    edi
  405f58:	sbb    eax,0xf0906a7b
  405f5d:	inc    edi
  405f5e:	in     al,0x7b
  405f60:	sub    eax,0x14679e95
  405f65:	jne    0x405fb0
  405f67:	int    0xfe
  405f69:	jo     0x405f65
  405f6b:	arpl   WORD PTR [esi+0x74],di
  405f6e:	(bad)  
  405f6f:	aaa    
  405f70:	pusha  
  405f71:	adc    ecx,DWORD PTR [ebx-0x4b]
  405f74:	fs mov esi,0xf32d9dda
  405f7a:	mov    dh,0x9b
  405f7c:	jb     0x405fcb
  405f7e:	sbb    DWORD PTR [edx+0x4c5bfff1],0xeb2f24d9
  405f88:	sbb    eax,0xa46cfce1
  405f8d:	pop    eax
  405f8e:	and    al,0xb6
  405f90:	mov    ebx,0x6f167143
  405f95:	sbb    DWORD PTR ds:0x3597d8fc,0xd53e4483
  405f9f:	(bad)  
  405fa0:	mov    esp,0x7e6e1ade
  405fa5:	je     0x405fd4
  405fa7:	popf   
  405fa8:	jbe    0x405f65
  405faa:	ja     0x405f48
  405fac:	or     ecx,DWORD PTR [edx]
  405fae:	ds adc eax,0x33cf2f93
  405fb4:	push   0xffffffa3
  405fb6:	mov    esp,0xf0e339c5
  405fbb:	push   ss
  405fbc:	imul   esp,DWORD PTR [ebp+esi*8+0x16],0x4a
  405fc1:	loope  0x406031
  405fc3:	shl    BYTE PTR [ecx+0x7adb02e0],1
  405fc9:	(bad)  
  405fca:	ins    DWORD PTR es:[edi],dx
  405fcb:	test   al,0x10
  405fcd:	rcl    BYTE PTR [edx],0x72
  405fd0:	and    bl,al
  405fd2:	rol    ecx,1
  405fd4:	daa    
  405fd5:	add    esi,edi
  405fd7:	pop    ss
  405fd8:	xor    edi,DWORD PTR [ebx]
  405fda:	xchg   edi,eax
  405fdb:	pop    eax
  405fdc:	push   ss
  405fdd:	cmp    eax,0x8eaf5b50
  405fe2:	aaa    
  405fe3:	mov    bl,0x66
  405fe5:	sbb    ecx,DWORD PTR [ecx-0x5e]
  405fe8:	xor    BYTE PTR cs:0x7b1e683c,bl
  405fef:	cmc    
  405ff0:	pop    eax
  405ff1:	mov    al,0x60
  405ff3:	adc    BYTE PTR ds:0x1649634a,ah
  405ff9:	pop    ss
  405ffa:	inc    edx
  405ffb:	pop    ecx
  405ffc:	lahf   
  405ffd:	enter  0x4848,0xc3
  406001:	rcl    DWORD PTR [edx+0x57],0xd7
  406005:	addr16 aam 0x3d
  406008:	mov    gs,WORD PTR [ebx-0x19c85065]
  40600e:	jg     0x406011
  406010:	dec    esp
  406011:	xlat   BYTE PTR ds:[ebx]
  406012:	mov    cl,0xe9
  406014:	daa    
  406015:	mov    eax,0xda0b879d
  40601a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40601b:	cmp    BYTE PTR [edx-0x6099c97],al
  406021:	gs in  al,0xdf
  406024:	rcl    BYTE PTR ds:0x6dab03c6,cl
  40602a:	xchg   esi,eax
  40602b:	int3   
  40602c:	sub    cl,BYTE PTR [eax]
  40602e:	test   eax,0x87c4ff
  406033:	fsub   QWORD PTR [eax-0x1e]
  406036:	scas   eax,DWORD PTR es:[edi]
  406037:	scas   eax,DWORD PTR es:[edi]
  406038:	mov    ah,0x87
  40603a:	lods   al,BYTE PTR ds:[esi]
  40603b:	cmp    cl,BYTE PTR [eax+eax*1-0x29]
  40603f:	jno    0x405fde
  406041:	faddp  st(7),st
  406043:	js     0x40603c
  406045:	clc    
  406046:	ret    
  406047:	aam    0x8a
  406049:	hlt    
  40604a:	bound  esp,QWORD PTR [eax-0x13]
  40604d:	mov    esp,0x84dd1d1b
  406052:	jl     0x406086
  406054:	adc    BYTE PTR [eax-0x32a2ba8f],bl
  40605a:	fwait
  40605b:	dec    edi
  40605c:	pop    es
  40605d:	jno    0x406060
  40605f:	lock mov bl,0xc9
  406062:	inc    ebp
  406063:	pop    ds
  406064:	leave  
  406065:	inc    edx
  406066:	dec    eax
  406067:	mov    eax,ds:0xd92f8d0e
  40606c:	mov    edx,0xe4263b8e
  406071:	push   ss
  406072:	in     eax,0xc7
  406074:	mov    ebp,0xe8456be6
  406079:	xchg   esi,eax
  40607a:	int3   
  40607b:	adc    BYTE PTR [eax],bh
  40607d:	add    ch,BYTE PTR [edi+ebx*2]
  406080:	push   edi
  406081:	cdq    
  406082:	inc    edx
  406083:	inc    ecx
  406084:	sub    DWORD PTR [edi-0x33],0x43
  406088:	sub    ebp,edi
  40608a:	cmp    al,0xad
  40608c:	shl    DWORD PTR [edi],cl
  40608e:	adc    eax,0x186fb1b9
  406093:	jg     0x406112
  406095:	(bad)  
  406097:	mov    ch,0xad
  406099:	xchg   esi,eax
  40609a:	pop    edi
  40609b:	sub    eax,0x6bd3eb83
  4060a0:	inc    eax
  4060a1:	inc    esp
  4060a2:	(bad)  
  4060a4:	push   0x86333406
  4060a9:	push   ebp
  4060aa:	mov    cl,0xe
  4060ac:	adc    cl,BYTE PTR [esi+0x27]
  4060af:	scas   al,BYTE PTR es:[edi]
  4060b0:	push   ss
  4060b1:	loopne 0x406061
  4060b3:	sub    ebx,DWORD PTR [ebx]
  4060b5:	outs   dx,DWORD PTR ds:[esi]
  4060b6:	in     al,0xae
  4060b8:	mov    al,0xb3
  4060ba:	mov    ebx,0x96ec4374
  4060bf:	out    dx,al
  4060c0:	cmp    ebp,esp
  4060c2:	sub    al,0xf2
  4060c4:	add    eax,0x31db33db
  4060c9:	inc    edi
  4060ca:	or     ecx,DWORD PTR [eax+0x7d]
  4060cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ce:	repz (bad) 
  4060d0:	jle    0x406087
  4060d2:	jg     0x4060ef
  4060d4:	sbb    BYTE PTR [esi+0x16ee1f47],0x32
  4060db:	ins    DWORD PTR es:[edi],dx
  4060dc:	cwde   
  4060dd:	pop    ss
  4060de:	dec    edi
  4060df:	xor    cl,BYTE PTR [esi-0xfa00f2]
  4060e5:	mov    edi,0x4f3b3651
  4060ea:	out    0x6,eax
  4060ec:	outs   dx,BYTE PTR ds:[esi]
  4060ed:	sbb    ecx,DWORD PTR [edx+0x10]
  4060f0:	pop    ds
  4060f1:	jmp    0xbb14:0xd3f9271f
  4060f8:	jo     0x4060d4
  4060fa:	in     eax,dx
  4060fb:	push   edx
  4060fc:	stc    
  4060fd:	and    edx,DWORD PTR [ebp+0x20]
  406100:	outs   dx,DWORD PTR ds:[esi]
  406101:	push   cs
  406102:	sub    eax,0xea7c379d
  406107:	adc    ah,BYTE PTR [edi+ebp*8-0x5f]
  40610b:	mov    eax,ds:0x6706c41f
  406110:	adc    al,0xbe
  406112:	xchg   ebp,eax
  406113:	mov    edi,0xbc80134e
  406118:	out    0x7f,al
  40611a:	sbb    al,0x32
  40611c:	xor    eax,0x751be502
  406121:	aaa    
  406122:	sub    BYTE PTR [edi],al
  406124:	dec    edi
  406125:	dec    ebp
  406126:	je     0x406173
  406128:	jae    0x4060b0
  40612a:	xor    eax,0xc5229e50
  40612f:	aas    
  406130:	cmp    BYTE PTR [ebx+0x76],ch
  406133:	push   ds
  406134:	mov    esi,0x87070c42
  406139:	mov    esi,0x7c0b483
  40613e:	xor    al,0x66
  406140:	(bad)  
  406141:	out    0xd3,al
  406143:	push   0x17b86b57
  406148:	cwde   
  406149:	and    BYTE PTR [ebp+0x63],dl
  40614c:	cmp    BYTE PTR [edi+0x4d],dl
  40614f:	rol    BYTE PTR [ecx-0x5b7f4677],cl
  406155:	pop    esi
  406156:	in     al,dx
  406157:	(bad)  
  406158:	ror    DWORD PTR [eax+ecx*1-0x6ba6b66b],1
  40615f:	push   es
  406160:	pop    esi
  406161:	sub    eax,0x83be2840
  406166:	dec    eax
  406167:	adc    eax,0xc19f43b9
  40616c:	call   0xfd312454
  406171:	shr    DWORD PTR [edx+0x62e2de61],1
  406177:	pop    ecx
  406178:	jb     0x406185
  40617a:	dec    ecx
  40617b:	mov    dl,0xd2
  40617d:	lods   eax,DWORD PTR ds:[esi]
  40617e:	inc    ebp
  40617f:	inc    ecx
  406180:	test   eax,0x8b4aba1d
  406185:	sub    al,0x10
  406187:	mov    WORD PTR [edi-0x45],cs
  40618a:	cmp    esp,0xffffffaa
  40618d:	lahf   
  40618e:	cmp    al,0xe3
  406190:	jnp    0x4061cf
  406192:	xlat   BYTE PTR ds:[ebx]
  406193:	cmp    cl,BYTE PTR [eax]
  406195:	fucomi st,st(6)
  406197:	sbb    ah,BYTE PTR [ebx]
  406199:	lock enter 0xaadb,0x2d
  40619e:	icebp  
  40619f:	pop    edi
  4061a1:	iret   
  4061a2:	clc    
  4061a3:	jb     0x406138
  4061a5:	call   0xd2c7:0xd1c6747d
  4061ac:	mov    ebp,cs
  4061ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061af:	ret    
  4061b0:	shr    ecx,1
  4061b2:	and    edi,DWORD PTR [edx+ecx*1-0x30]
  4061b6:	jne    0x406178
  4061b8:	mov    DWORD PTR [ecx],esi
  4061ba:	push   ss
  4061bb:	and    DWORD PTR [ebx],eax
  4061bd:	stos   BYTE PTR es:[edi],al
  4061be:	scas   al,BYTE PTR es:[edi]
  4061bf:	into   
  4061c0:	ficomp WORD PTR [eax-0x15329036]
  4061c6:	lods   eax,DWORD PTR ds:[esi]
  4061c7:	ins    DWORD PTR es:[edi],dx
  4061c8:	in     eax,dx
  4061c9:	inc    esi
  4061ca:	test   al,0xfa
  4061cc:	cmp    al,dl
  4061ce:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4061d0:	shl    DWORD PTR es:[ecx],0x65
  4061d4:	adc    al,bl
  4061d6:	add    ebp,DWORD PTR [edx-0x17f40c47]
  4061dc:	les    ecx,FWORD PTR [ebp-0x3d]
  4061df:	test   BYTE PTR [esi-0x6e44b0fd],0x1f
  4061e6:	sub    bh,BYTE PTR [eax+0x6f]
  4061e9:	ret    
  4061ea:	push   ebp
  4061eb:	inc    edi
  4061ec:	ss inc esi
  4061ee:	and    dh,BYTE PTR ds:0xd9233353
  4061f4:	jns    0x4061c2
  4061f6:	inc    esp
  4061f7:	jo     0x4061f6
  4061f9:	inc    dx
  4061fb:	fiadd  DWORD PTR [ebx]
  4061fd:	arpl   WORD PTR [edi],bp
  4061ff:	jecxz  0x40620c
  406201:	pop    eax
  406202:	lahf   
  406203:	mov    bh,0x54
  406205:	mov    cl,0x86
  406207:	sub    ebx,eax
  406209:	push   edi
  40620a:	mov    ds:0xfa4adb03,eax
  40620f:	mov    BYTE PTR [ecx],dl
  406211:	xor    al,0x34
  406213:	aam    0xa3
  406215:	sti    
  406216:	xlat   BYTE PTR ds:[ebx]
  406217:	mov    esp,0x33b14dfe
  40621c:	jl     0x406241
  40621e:	xor    dh,dl
  406220:	loope  0x406274
  406222:	jbe    0x40627a
  406224:	mov    ds:0xb44fa58e,al
  406229:	mov    ebx,?
  40622b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622c:	or     edi,DWORD PTR [ebx+eiz*8+0x20021ae6]
  406233:	xor    al,0xf4
  406235:	imul   ebx,DWORD PTR [ebx+0x2d],0xd09973d6
  40623c:	or     BYTE PTR [edx-0x77dd66a0],ch
  406242:	(bad)  
  406243:	pushf  
  406244:	jle    0x4062a7
  406246:	sbb    al,0x88
  406249:	adc    eax,0xc3f731fb
  40624e:	adc    al,0xd0
  406250:	dec    esp
  406251:	clc    
  406252:	aam    0x13
  406254:	cmp    DWORD PTR [edx],ecx
  406256:	jmp    0x2c610360
  40625b:	jle    0x40629b
  40625d:	js     0x4062ae
  40625f:	sub    ebp,eax
  406261:	sbb    bl,0x1c
  406264:	pop    edx
  406265:	dec    esp
  406266:	out    dx,al
  406267:	sub    eax,0xcbafffbb
  40626c:	or     dh,dh
  40626e:	int    0x61
  406270:	xor    eax,0xd53b5b27
  406275:	xor    ch,ch
  406277:	mov    al,ds:0xaa9f6e18
  40627c:	pop    ebx
  40627d:	int    0xfb
  40627f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406280:	fidiv  WORD PTR [ebx-0x58a592f9]
  406286:	jnp    0x4062c2
  406288:	dec    ebx
  406289:	fwait
  40628a:	mov    ecx,0xaab49692
  40628f:	test   dh,al
  406291:	cmp    al,0x74
  406293:	mov    edx,0x4d5af329
  406298:	sbb    al,0x14
  40629a:	cld    
  40629b:	scas   al,BYTE PTR es:[edi]
  40629c:	xor    bh,BYTE PTR [edi+0x37059926]
  4062a2:	sbb    DWORD PTR [edi+0x535092fc],edi
  4062a8:	or     DWORD PTR [eax],esp
  4062aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062ab:	adc    al,0x97
  4062ad:	push   esp
  4062ae:	mov    ch,0xe8
  4062b0:	sar    al,0x77
  4062b3:	and    BYTE PTR [eax+ebp*1],0xee
  4062b7:	sub    DWORD PTR [ebp-0x133cb508],0x6b
  4062be:	mov    bh,dl
  4062c0:	outs   dx,DWORD PTR ds:[esi]
  4062c1:	sub    eax,0x2699abef
  4062c6:	push   esp
  4062c7:	in     eax,0x7d
  4062c9:	mov    bl,0xd6
  4062cb:	cmp    dl,ch
  4062cd:	mov    bh,0x31
  4062cf:	test   BYTE PTR ds:0xb9af1732,dl
  4062d5:	mov    ch,0xcb
  4062d7:	icebp  
  4062d8:	fucomi st,st(0)
  4062da:	inc    edi
  4062db:	dec    ebp
  4062dc:	mov    ch,0xcb
  4062de:	retf   
  4062df:	cmc    
  4062e0:	loop   0x406329
  4062e2:	mov    eax,0xd4e4c14b
  4062e7:	dec    edi
  4062e8:	mov    ch,0xe8
  4062ea:	arpl   ax,di
  4062ec:	push   esp
  4062ed:	(bad)  
  4062ee:	shr    DWORD PTR [ebx-0x33b7751],1
  4062f4:	push   eax
  4062f5:	fs mov bx,0x5687
  4062fa:	push   0x7a
  4062fc:	mov    esp,fs
  4062fe:	push   ss
  4062ff:	inc    ecx
  406300:	push   edi
  406301:	into   
  406302:	arpl   cx,dx
  406304:	ror    DWORD PTR [ebp-0x3abd63f5],1
  40630a:	test   BYTE PTR [edi+0x2a85dfd7],ah
  406310:	pop    esi
  406311:	jmp    DWORD PTR [edi-0x5d]
  406314:	adc    eax,DWORD PTR [ebx+ecx*8]
  406317:	pop    edi
  406318:	xlat   BYTE PTR ds:[ebx]
  406319:	stos   DWORD PTR es:[edi],eax
  40631a:	sti    
  40631b:	mov    dl,0x56
  40631d:	shl    DWORD PTR [esi-0x5407c4e2],1
  406323:	sbb    al,0x7d
  406325:	call   0x4937b73a
  40632a:	push   ebp
  40632b:	lods   eax,DWORD PTR ds:[esi]
  40632c:	jbe    0x4062d2
  40632e:	jnp    0x406311
  406330:	mov    eax,ds:0x20897034
  406335:	(bad)  
  406336:	lea    ebp,[eax+0xb]
  406339:	mov    eax,0x2f4a3945
  40633e:	cmp    DWORD PTR [ebp+0x5c],ebx
  406341:	inc    DWORD PTR [esi-0x42251e4]
  406347:	mov    bh,0xb1
  406349:	add    DWORD PTR [eax+0x4f5eed3c],esi
  40634f:	mov    eax,0xd9148352
  406354:	ds call 0x433f99ce
  40635a:	aas    
  40635b:	ret    
  40635c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635d:	out    dx,al
  40635e:	imul   ebx,DWORD PTR ds:0x75bc0a56,0xc49347cf
  406368:	ins    BYTE PTR es:[edi],dx
  406369:	mov    ch,0xf7
  40636b:	adc    eax,0x269ac7f4
  406370:	mov    edi,0xb4bda103
  406375:	and    dh,ah
  406377:	hlt    
  406378:	daa    
  406379:	adc    BYTE PTR [ebx-0x4b],dh
  40637c:	jg     0x4063d2
  40637e:	in     al,dx
  40637f:	cmovns ebx,DWORD PTR [ecx-0x56c2aa7]
  406386:	pop    ebx
  406387:	or     edx,edx
  406389:	xchg   DWORD PTR [edx-0x11],esp
  40638c:	shl    DWORD PTR [edx+0x7b],1
  40638f:	call   0xeca71dcb
  406394:	mov    ds:0xc20b3c17,eax
  406399:	pushf  
  40639a:	adc    al,0x92
  40639c:	loopne 0x406414
  40639e:	mov    ds:0x271f3c0f,eax
  4063a3:	add    eax,0x78ba3986
  4063a8:	add    eax,0xa887d823
  4063ad:	das    
  4063ae:	ins    BYTE PTR es:[edi],dx
  4063af:	int3   
  4063b0:	and    edx,DWORD PTR [ebx]
  4063b2:	mov    al,0x89
  4063b4:	mov    DWORD PTR [eax],esi
  4063b6:	mov    WORD PTR [ebx-0x3c],gs
  4063b9:	mov    eax,ds:0xd73bfff6
  4063be:	js     0x406404
  4063c0:	sbb    al,0x2e
  4063c2:	dec    esi
  4063c3:	pop    ebx
  4063c4:	in     eax,dx
  4063c5:	push   esp
  4063c6:	mov    ebp,0x3a199828
  4063cb:	mov    eax,0x3edc99b6
  4063d0:	mov    eax,ds:0x6e362a7d
  4063d5:	mov    bh,0x4
  4063d7:	inc    esi
  4063d8:	sub    DWORD PTR [ebx+ecx*4],edx
  4063db:	pop    ebx
  4063dc:	pop    edi
  4063dd:	je     0x4063af
  4063df:	rol    dh,0xc3
  4063e2:	adc    BYTE PTR [edi-0x163a9e30],dl
  4063e8:	mov    esp,eax
  4063ea:	inc    edi
  4063eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ec:	fmul   st,st(6)
  4063ee:	in     al,0x3a
  4063f0:	xor    al,0xe6
  4063f2:	clc    
  4063f3:	cwde   
  4063f4:	aad    0x40
  4063f6:	popf   
  4063f7:	sbb    BYTE PTR [ebp+0x57fc1288],ch
  4063fd:	jo     0x406452
  4063ff:	rol    DWORD PTR [ecx+0x74650c2a],0xf5
  406406:	inc    esi
  406407:	pop    esp
  406408:	push   edx
  406409:	gs push edi
  40640b:	int3   
  40640c:	imul   edi,DWORD PTR [ecx+ebp*4+0x2b],0xcab214e6
  406414:	push   ebp
  406415:	jg     0x40640a
  406417:	mov    edi,0x5ffdae6a
  40641c:	repnz imul ebx,DWORD PTR [ebx],0xb3128835
  406423:	aad    0x8e
  406425:	push   edi
  406426:	pop    esp
  406427:	inc    edi
  406428:	clc    
  406429:	inc    ebp
  40642a:	repz sbb DWORD PTR [ebp+0x75],esi
  40642e:	ror    bl,cl
  406430:	jne    0x4063b3
  406432:	int3   
  406433:	mov    edx,0x7d1011de
  406438:	push   ecx
  406439:	xor    esp,DWORD PTR [edi-0x18b5f9c9]
  40643f:	(bad)  
  406440:	pop    esp
  406441:	pusha  
  406442:	mov    ebp,0x848ba203
  406447:	mov    ecx,0x569fab6
  40644c:	loop   0x4063d5
  40644e:	in     al,dx
  40644f:	xor    dh,BYTE PTR [edi+eax*8+0x7e]
  406453:	es mov cl,0xf6
  406456:	jb     0x40641a
  406458:	add    edx,0xae4e5d55
  40645e:	ins    DWORD PTR es:[edi],dx
  40645f:	test   DWORD PTR [ecx+0x79],esp
  406462:	ret    
  406463:	jge    0x406422
  406465:	cmp    DWORD PTR [ebx+ebp*1-0x44be86bb],0x25
  40646d:	sub    al,BYTE PTR [ebp+0x66]
  406470:	mov    WORD PTR [edi],?
  406472:	retf   
  406473:	loop   0x40642b
  406475:	retf   0xcf86
  406478:	mov    ah,0xb0
  40647a:	and    al,0xf1
  40647c:	jnp    0x4064a3
  40647e:	out    dx,eax
  40647f:	stos   BYTE PTR es:[edi],al
  406480:	adc    DWORD PTR [edi+0x2ca2da78],ecx
  406486:	mov    gs,WORD PTR [eax-0xd]
  406489:	xchg   esp,eax
  40648a:	mov    eax,DWORD PTR [edi]
  40648c:	pop    ecx
  40648d:	jmp    0x1009:0x161a6b1f
  406494:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406496:	cmc    
  406497:	dec    edx
  406498:	mov    ds:0x96ecf2ab,al
  40649d:	je     0x406519
  40649f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a0:	xchg   esp,eax
  4064a1:	push   edx
  4064a2:	enter  0x98b3,0x60
  4064a6:	fmul   DWORD PTR [ebx+0x6b708061]
  4064ac:	jo     0x4064b2
  4064ae:	pop    eax
  4064af:	stos   DWORD PTR es:[edi],eax
  4064b0:	jg     0x4064ae
  4064b2:	ret    0xdd27
  4064b5:	push   cs
  4064b6:	mov    dl,0xbc
  4064b9:	icebp  
  4064ba:	repz xor eax,0x275cb5a
  4064c0:	adc    eax,0xa82c79f0
  4064c5:	sbb    eax,0xdb678661
  4064ca:	shr    BYTE PTR [ebx+0x2a3890cd],1
  4064d0:	and    DWORD PTR [eax+0x2d58cc0d],edx
  4064d6:	jne    0x40647c
  4064d8:	sbb    eax,0x429a796d
  4064dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064de:	adc    ecx,edx
  4064e0:	xor    cl,BYTE PTR [edx]
  4064e2:	and    cl,al
  4064e4:	mov    BYTE PTR [esi],cl
  4064e6:	add    al,0xd1
  4064e8:	test   al,0x98
  4064ea:	lds    edi,FWORD PTR [esi]
  4064ec:	sbb    ah,dl
  4064ee:	pushf  
  4064ef:	nop
  4064f0:	pop    eax
  4064f1:	outs   dx,DWORD PTR ds:[esi]
  4064f2:	xchg   edi,eax
  4064f3:	rcr    DWORD PTR [edi+0x7b582117],cl
  4064f9:	int    0xcc
  4064fb:	sub    al,0xd8
  4064fd:	pop    eax
  4064fe:	in     eax,dx
  4064ff:	adc    eax,0xa9ca9102
  406504:	adc    eax,0xf70d16c6
  406509:	rcr    BYTE PTR ds:0x58c52833,cl
  40650f:	or     DWORD PTR [eax+0x7],0xffffffc3
  406513:	imul   esp,DWORD PTR [ebx+0x4b],0x900aab4a
  40651a:	dec    ecx
  40651b:	ss loope 0x4064d9
  40651e:	jnp    0x4064ce
  406520:	loopne 0x4064ec
  406522:	clc    
  406523:	mov    bl,ah
  406525:	and    al,0x6e
  406527:	sbb    DWORD PTR [ebp+esi*1-0x39f6aeb6],esi
  40652e:	fs fcmove st,st(1)
  406531:	sub    ebx,ebp
  406533:	hlt    
  406534:	xchg   esp,eax
  406535:	jmp    0x2ed4cd0d
  40653a:	and    al,0x2a
  40653c:	in     eax,dx
  40653d:	sbb    DWORD PTR [edi-0x29e78a1b],0x18
  406544:	aaa    
  406545:	psrld  mm3,QWORD PTR ds:0xaef08b47
  40654c:	xor    DWORD PTR ds:0x36afac68,0xfffffff3
  406553:	sti    
  406554:	cli    
  406555:	cwde   
  406556:	xor    eax,0xc0d61734
  40655b:	shr    dh,1
  40655d:	xlat   BYTE PTR ds:[ebx]
  40655e:	sbb    DWORD PTR [edi],edx
  406560:	add    DWORD PTR [edx-0x60],0xf
  406564:	scas   eax,DWORD PTR es:[edi]
  406565:	retf   
  406566:	sub    esp,DWORD PTR [ecx]
  406568:	jmp    0x505a:0x132cf1ee
  40656f:	xchg   bh,ah
  406571:	bound  ebx,QWORD PTR [ebx]
  406573:	pop    ecx
  406574:	loope  0x4065f0
  406576:	mov    dl,0xbd
  406578:	mov    eax,ds:0xca6a72a4
  40657d:	(bad)  
  40657e:	retf   
  40657f:	stc    
  406580:	jb     0x406538
  406582:	inc    edi
  406583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406584:	shr    DWORD PTR [esi],cl
  406586:	addr16 adc eax,0xfe1128a6
  40658c:	and    DWORD PTR [ebx-0x31],esi
  40658f:	dec    esp
  406590:	bound  edx,QWORD PTR [eax+eiz*4-0x26440a53]
  406597:	xlat   BYTE PTR ds:[ebx]
  406598:	pop    ecx
  406599:	pop    ebp
  40659a:	stos   DWORD PTR es:[edi],eax
  40659b:	push   0x8008f342
  4065a0:	js     0x4065ee
  4065a2:	out    dx,eax
  4065a3:	lahf   
  4065a4:	pop    ebx
  4065a5:	cmp    bl,dl
  4065a7:	ja     0x4065af
  4065a9:	ffreep st(1)
  4065ab:	sbb    BYTE PTR ds:0x417d6261,0xab
  4065b2:	adc    DWORD PTR [ebx],edx
  4065b4:	ret    
  4065b5:	or     eax,0x395b341b
  4065ba:	or     BYTE PTR [ebp+0x45],bl
  4065bd:	aam    0x67
  4065bf:	mov    esp,0xbc2830b0
  4065c4:	pop    eax
  4065c5:	inc    ecx
  4065c6:	shl    DWORD PTR [edx+0x233d9db1],cl
  4065cc:	sub    dh,BYTE PTR [ecx]
  4065ce:	and    BYTE PTR [esi],bl
  4065d0:	pop    esi
  4065d1:	ror    DWORD PTR [eax],1
  4065d3:	(bad)
  4065d6:	xchg   edx,eax
  4065d7:	cdq    
  4065d8:	add    al,dl
  4065da:	rol    cl,cl
  4065dc:	loopne 0x406632
  4065de:	test   DWORD PTR [esi+0x763f0bff],ebp
  4065e4:	mov    bh,0x73
  4065e6:	std    
  4065e7:	cmc    
  4065e8:	mov    eax,ds:0x7f34df6f
  4065ed:	mov    cl,0x36
  4065ef:	fsub   QWORD PTR [eax]
  4065f1:	std    
  4065f2:	pop    es
  4065f3:	dec    ebx
  4065f4:	pop    ss
  4065f5:	das    
  4065f6:	or     edx,ebp
  4065f8:	pop    es
  4065f9:	pop    edi
  4065fa:	int    0xb3
  4065fc:	cmp    al,BYTE PTR [ebx+0x3b]
  4065ff:	push   ss
  406600:	in     eax,dx
  406601:	mov    esi,DWORD PTR [edx-0x6335d61c]
  406607:	ds ss stos DWORD PTR es:[edi],eax
  40660a:	xchg   ebx,eax
  40660b:	clc    
  40660c:	push   ds
  40660d:	(bad)  
  40660e:	jecxz  0x40668f
  406610:	fcomp  DWORD PTR [ebx+0x43]
  406613:	enter  0xce78,0xce
  406617:	adc    BYTE PTR [ecx],bl
  406619:	cmp    bh,bl
  40661b:	jo     0x406693
  40661d:	das    
  40661e:	jmp    0x95de:0x8de5ce3c
  406625:	pop    es
  406626:	and    eax,0x3d58ce42
  40662b:	fwait
  40662c:	mov    dl,BYTE PTR ds:0x34d1452
  406632:	jmp    0x6b19a1a5
  406637:	sbb    ebp,edx
  406639:	pop    edx
  40663a:	add    BYTE PTR [edx-0x2a],bh
  40663d:	add    al,0xb0
  40663f:	dec    edi
  406640:	iret   
  406641:	into   
  406642:	sbb    BYTE PTR [ebp+ebp*4+0x501d94bd],0x2e
  40664a:	xchg   esp,eax
  40664b:	jns    0x40667b
  40664d:	aas    
  40664e:	fs push cs
  406650:	test   DWORD PTR [ebp+esi*2+0x70a7b866],0x8dc0ab45
  40665b:	inc    ebp
  40665c:	jmp    0x18bc82a7
  406661:	jbe    0x406631
  406663:	popf   
  406664:	imul   ecx,DWORD PTR [ebx-0x4d],0xa8916345
  40666b:	mov    dh,0x5d
  40666d:	push   cs
  40666e:	jmp    0x86716a31
  406673:	cld    
  406674:	inc    ebp
  406675:	in     eax,0x8f
  406677:	sub    bl,BYTE PTR [ebp-0x2bce5930]
  40667d:	or     eax,0x2af6c5c2
  406682:	pop    ds
  406683:	ss gs cmp al,0x57
  406687:	cmp    edx,0xffffffe9
  40668a:	add    bl,BYTE PTR [edi+0x5389a23e]
  406690:	mov    edx,0x6689b740
  406695:	or     ecx,DWORD PTR [bp-0xa]
  406699:	ficomp DWORD PTR [edi+0x6a88defd]
  40669f:	mov    ch,0x3
  4066a1:	je     0x4066e8
  4066a3:	mov    ?,edx
  4066a5:	arpl   WORD PTR [edi],bx
  4066a7:	and    eax,0xd99a22b7
  4066ac:	call   0xda5a:0x24b38d61
  4066b3:	(bad)  
  4066b4:	pop    dx
  4066b6:	imul   eax,DWORD PTR [ebp+0x4],0x5b554efe
  4066bd:	popf   
  4066be:	in     al,dx
  4066bf:	sub    eax,0x285f9c91
  4066c4:	adc    cl,BYTE PTR [edx-0x22fcab8b]
  4066ca:	cmp    DWORD PTR [esp+ecx*8+0x2857113],edi
  4066d1:	xor    al,0x4d
  4066d3:	ins    BYTE PTR es:[edi],dx
  4066d4:	cmp    al,BYTE PTR [ebx-0x6ef2e341]
  4066da:	ret    
  4066db:	jb     0x4066f6
  4066dd:	(bad)  
  4066de:	inc    DWORD PTR [ebx-0x1a]
  4066e1:	mov    esp,0x874c24f4
  4066e6:	ds stos BYTE PTR es:[edi],al
  4066e8:	and    ebp,DWORD PTR [eax]
  4066ea:	push   esi
  4066eb:	sub    DWORD PTR [edi+0x39833d98],0xffffffc1
  4066f2:	cdq    
  4066f3:	mov    esp,0x13f7c18c
  4066f8:	fst    DWORD PTR [edi+ebp*8-0x105e4e0c]
  4066ff:	retf   
  406700:	sbb    DWORD PTR [ecx],esi
  406702:	sbb    al,0x82
  406704:	pusha  
  406705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406706:	push   esi
  406707:	jmp    FWORD PTR [ebx+0x389225d9]
  40670d:	push   ss
  40670e:	mov    DWORD PTR [ecx-0x7adfc863],eax
  406714:	mov    ah,0x92
  406716:	lods   eax,DWORD PTR ds:[esi]
  406717:	call   FWORD PTR [ebx]
  406719:	es popf 
  40671b:	inc    esp
  40671c:	mov    ecx,0xce334940
  406721:	push   0xffffffcf
  406723:	arpl   WORD PTR [eax+0x77997cfa],bx
  406729:	lods   al,BYTE PTR ds:[esi]
  40672a:	(bad)  
  40672b:	std    
  40672c:	push   cs
  40672d:	mov    DWORD PTR [esi+0x163d210c],esp
  406733:	imul   edx,DWORD PTR fs:[ebp+0x20694c59],0xffffff87
  40673b:	rol    BYTE PTR [ebx],cl
  40673d:	mov    ds:0xbdbace70,eax
  406742:	rcl    BYTE PTR cs:[ecx-0x7d],0xa3
  406747:	scas   al,BYTE PTR es:[edi]
  406748:	push   ebx
  406749:	mov    cr0,ebx
  40674c:	shr    BYTE PTR [ebx-0x3b],1
  40674f:	mov    bh,0xb3
  406751:	and    ebp,ebx
  406753:	cmp    ebp,DWORD PTR [ecx-0x5f]
  406756:	adc    BYTE PTR [ebx+esi*4-0x10],cl
  40675a:	cmp    DWORD PTR [ebx],ebp
  40675c:	jns    0x4067c9
  40675e:	hlt    
  40675f:	cmp    al,0xda
  406761:	inc    ebx
  406762:	jg     0x40679a
  406764:	jnp    0x406762
  406766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406767:	scas   eax,DWORD PTR es:[edi]
  406768:	lods   al,BYTE PTR ds:[esi]
  406769:	adc    eax,0xe884afcd
  40676e:	leave  
  40676f:	adc    ebx,DWORD PTR [ebx+0x1a8cf7f6]
  406775:	jmp    0x40671b
  406777:	repnz mov edi,0x7ab226f0
  40677d:	(bad)  
  40677e:	(bad)  
  406780:	pusha  
  406781:	or     BYTE PTR ss:[eax],al
  406784:	inc    ebx
  406785:	xchg   ebx,eax
  406786:	ja     0x406791
  406788:	push   ebp
  406789:	imul   ebx,DWORD PTR [ebx+ebx*2-0x5ed29618],0xaa114b59
  406794:	pop    ecx
  406795:	int    0x30
  406797:	out    dx,al
  406798:	mov    esi,0x13e5e55d
  40679d:	leave  
  40679e:	cdq    
  40679f:	shl    DWORD PTR [esi+0x37],cl
  4067a2:	dec    edi
  4067a3:	test   al,0xa6
  4067a5:	adc    bh,dh
  4067a7:	mov    ah,0xb3
  4067a9:	cmp    eax,0xabb79efb
  4067ae:	pop    edx
  4067af:	mov    eax,0xd5e10f8
  4067b4:	add    bh,bh
  4067b6:	push   ebx
  4067b7:	adc    ah,ch
  4067b9:	cmp    ecx,DWORD PTR [esi+0x43]
  4067bc:	in     al,dx
  4067bd:	push   ecx
  4067be:	sub    al,0x1a
  4067c0:	ret    0xdefb
  4067c3:	push   edi
  4067c4:	sbb    DWORD PTR [edx],ecx
  4067c6:	push   ebx
  4067c7:	inc    edx
  4067c8:	mov    eax,0x16a627a2
  4067cd:	out    dx,al
  4067ce:	cmp    esi,DWORD PTR ss:[edx-0x406d57a3]
  4067d5:	clc    
  4067d6:	in     eax,0x25
  4067d8:	jecxz  0x4067ad
  4067da:	shl    BYTE PTR [eax],cl
  4067dc:	loope  0x4067eb
  4067de:	and    DWORD PTR [edx-0x36],ebx
  4067e1:	imul   eax,DWORD PTR [esi-0xe],0x56
  4067e5:	jns    0x406810
  4067e7:	mov    bl,0xd2
  4067e9:	or     al,0xe4
  4067eb:	ret    
  4067ec:	sbb    al,0x54
  4067ee:	or     eax,0xefeb8e37
  4067f3:	clc    
  4067f4:	cmp    BYTE PTR [edx],bh
  4067f6:	ins    BYTE PTR es:[edi],dx
  4067f7:	push   ebx
  4067f8:	inc    esp
  4067f9:	and    esi,esp
  4067fb:	push   eax
  4067fc:	xor    BYTE PTR [eax],0x46
  4067ff:	or     al,0x90
  406801:	cmp    BYTE PTR [ebp-0x35],bl
  406804:	dec    DWORD PTR [ebp+0x3c]
  406807:	or     al,0x98
  406809:	or     al,0x7f
  40680b:	sub    cl,BYTE PTR [ebx-0x1c578068]
  406811:	imul   ecx,DWORD PTR [esi+0x6a],0xac53a52a
  406818:	jle    0x4067f4
  40681a:	outs   dx,DWORD PTR ds:[esi]
  40681b:	mov    dl,bh
  40681d:	pusha  
  40681e:	lock mov esi,0x767d72d1
  406824:	and    al,0x31
  406826:	jns    0x40688a
  406828:	mov    ah,0xa2
  40682a:	popa   
  40682b:	fs pop esp
  40682d:	gs mov gs:0x4b7c4cf0,al
  406834:	jmp    0x4067d5
  406836:	and    DWORD PTR [eax],edi
  406838:	xchg   edx,eax
  406839:	into   
  40683a:	das    
  40683b:	(bad)  
  40683d:	cld    
  40683e:	scas   eax,DWORD PTR es:[edi]
  40683f:	scas   eax,DWORD PTR es:[edi]
  406840:	xor    ebp,0x67
  406843:	pop    ebp
  406844:	xchg   esi,eax
  406845:	inc    edx
  406846:	jl     0x406838
  406848:	repz cmp BYTE PTR [ebp-0xa3277ae],0xbc
  406850:	adc    eax,DWORD PTR [ecx]
  406852:	icebp  
  406853:	bound  edi,QWORD PTR [edx+0x7]
  406856:	fsubr  QWORD PTR [edx-0x307d1258]
  40685c:	stos   BYTE PTR es:[edi],al
  40685d:	loopne 0x406891
  40685f:	fnsave [ebx-0x24180595]
  406865:	ja     0x406816
  406867:	imul   ebx,eax,0xb
  40686a:	test   eax,0xd16c4049
  40686f:	lahf   
  406870:	scas   al,BYTE PTR es:[edi]
  406871:	jle    0x406803
  406873:	jl     0x40689f
  406875:	stc    
  406876:	push   ecx
  406877:	ins    BYTE PTR es:[edi],dx
  406878:	(bad)  
  406879:	into   
  40687a:	sub    ecx,esp
  40687c:	sbb    bh,BYTE PTR [ecx+0x2]
  40687f:	and    al,0x3e
  406881:	aaa    
  406882:	arpl   WORD PTR [edi+0x36],si
  406885:	jnp    0x406878
  406887:	xchg   edi,eax
  406888:	imul   edx,esp,0xffffffc1
  40688b:	xor    al,0x58
  40688d:	mov    fs,ecx
  40688f:	imul   eax,DWORD PTR [edi-0x6c],0x9
  406893:	push   edi
  406894:	push   edx
  406895:	nop
  406896:	dec    ebp
  406897:	je     0x406865
  406899:	test   edx,ebp
  40689b:	(bad)  
  40689c:	pushf  
  40689d:	out    dx,eax
  40689e:	(bad)  
  40689f:	loopne 0x4068de
  4068a1:	mov    esi,0xaefd8817
  4068a6:	(bad)  
  4068a8:	adc    DWORD PTR [ebp+0x6b0b8ecc],ecx
  4068ae:	cmp    BYTE PTR [ebx+eax*4],ah
  4068b1:	out    0xb8,al
  4068b3:	add    eax,0xf59321b1
  4068b8:	out    0x1b,eax
  4068ba:	arpl   sp,bp
  4068bc:	adc    DWORD PTR [eax+0x5d],0x4dac8e71
  4068c3:	cmc    
  4068c4:	xchg   ebp,eax
  4068c5:	test   al,0xaf
  4068c7:	dec    edx
  4068c8:	cmp    ebx,DWORD PTR [eax+ecx*4+0x5ada1428]
  4068cf:	dec    edi
  4068d0:	in     eax,dx
  4068d1:	dec    DWORD PTR [edi+0x68489c87]
  4068d7:	popf   
  4068d8:	pop    ds
  4068d9:	loop   0x4068c2
  4068db:	mov    ds:0x3ad49028,eax
  4068e0:	cld    
  4068e1:	adc    eax,0x5b5cdec5
  4068e6:	dec    edi
  4068e7:	pop    ss
  4068e8:	into   
  4068e9:	outs   dx,DWORD PTR ds:[esi]
  4068ea:	ds jo  0x40687d
  4068ed:	dec    ecx
  4068ee:	push   ebp
  4068ef:	test   dh,0x51
  4068f2:	into   
  4068f3:	sar    BYTE PTR [ebp-0x53bc3304],cl
  4068f9:	jno    0x4068b7
  4068fb:	and    BYTE PTR [eax-0x2b80c927],bh
  406901:	aaa    
  406902:	and    BYTE PTR [esi-0x4d],dl
  406905:	mov    eax,0x3a39a948
  40690a:	mov    dl,0x7b
  40690c:	dec    esp
  40690d:	push   edi
  40690e:	retf   
  40690f:	push   ecx
  406910:	xor    ch,BYTE PTR [ebx+0x51003784]
  406916:	ret    
  406917:	mov    esp,esi
  406919:	rcl    bl,cl
  40691b:	jo     0x406911
  40691d:	pop    ebp
  40691e:	jno    0x406915
  406920:	rol    DWORD PTR [ecx+ebp*4-0x69eff07f],0xe
  406928:	ins    DWORD PTR es:[edi],dx
  406929:	test   DWORD PTR [edi+0x21],0x5e0d75d4
  406930:	popf   
  406931:	mov    esp,edi
  406933:	jmp    0x3742baf0
  406938:	loope  0x4069a8
  40693a:	fwait
  40693b:	scas   al,BYTE PTR es:[edi]
  40693c:	push   edi
  40693d:	jne    0x4069b2
  40693f:	add    DWORD PTR [edi],esi
  406941:	push   cs
  406942:	adc    edx,DWORD PTR [edx-0x61]
  406945:	popf   
  406946:	sar    ch,1
  406948:	dec    esi
  406949:	nop
  40694a:	or     BYTE PTR [eax-0x30],ah
  40694d:	in     al,dx
  40694e:	jns    0x406959
  406950:	sar    edi,1
  406952:	arpl   si,di
  406954:	mov    ds:0x7faaa580,eax
  406959:	sub    DWORD PTR [esi+ebp*2+0x51],esi
  40695d:	sub    bh,bh
  40695f:	lea    ebx,[ebp-0x78]
  406962:	ds jl  0x4069a7
  406965:	xchg   ecx,eax
  406966:	mov    ebx,0x900f3262
  40696b:	rcr    DWORD PTR [ebx+0x22866695],0xee
  406972:	mov    BYTE PTR cs:[ecx],bh
  406975:	fldl2e 
  406977:	pop    es
  406978:	push   esp
  406979:	mov    edx,0x5e7cf077
  40697e:	xor    BYTE PTR [edx-0xb],ah
  406981:	lock xor dl,BYTE PTR [edi+0x0]
  406985:	in     eax,0x80
  406987:	cmp    eax,0x7156b520
  40698c:	in     eax,0xc4
  40698e:	pop    eax
  40698f:	adc    eax,0x28dceccc
  406994:	in     eax,0x14
  406996:	push   0x5c
  406998:	jbe    0x40692a
  40699a:	dec    esp
  40699b:	cmp    eax,0xd09e8260
  4069a0:	cmp    dh,BYTE PTR [esi+0x11b479ae]
  4069a6:	int    0x8c
  4069a8:	and    dl,BYTE PTR [edx]
  4069aa:	xchg   edi,eax
  4069ab:	jnp    0x4069de
  4069ad:	sbb    dl,BYTE PTR [edi]
  4069af:	pushf  
  4069b0:	out    0xbf,al
  4069b2:	js     0x4069e9
  4069b4:	adc    bl,ch
  4069b6:	push   esp
  4069b7:	mov    BYTE PTR [edx+0x1ce0b4c3],dl
  4069bd:	test   DWORD PTR [ecx-0x572779bd],0xcba3810b
  4069c7:	push   esp
  4069c8:	jmp    0x9b42:0x61ea0387
  4069cf:	xchg   ebx,eax
  4069d0:	xor    al,0x3b
  4069d2:	adc    bl,bl
  4069d4:	xor    al,0x86
  4069d6:	into   
  4069d7:	sbb    eax,0x3d10f45d
  4069dc:	nop
  4069dd:	pop    edi
  4069de:	mov    ecx,0xf414175a
  4069e3:	xchg   esi,eax
  4069e4:	xchg   ebp,eax
  4069e5:	dec    esi
  4069e6:	dec    edi
  4069e7:	hlt    
  4069e8:	cmp    edx,ebp
  4069ea:	shl    DWORD PTR ds:[esi-0x16],cl
  4069ee:	stos   DWORD PTR es:[edi],eax
  4069ef:	sub    ebx,DWORD PTR [ecx-0x4c]
  4069f2:	(bad)  
  4069f3:	rol    BYTE PTR ds:0xb09af934,0xfd
  4069fa:	xchg   esp,eax
  4069fb:	adc    DWORD PTR [edx+0x6],esi
  4069fe:	not    DWORD PTR [esi-0x690e255c]
  406a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a05:	jle    0x406a3b
  406a07:	push   esp
  406a08:	sbb    BYTE PTR ds:0x2f205ed2,0x5b
  406a0f:	rcl    BYTE PTR [ecx+0x18],1
  406a12:	xor    bl,BYTE PTR [edi-0x1be94fd9]
  406a18:	sbb    ecx,DWORD PTR [esp+eax*4+0x21]
  406a1c:	fs and ah,dh
  406a1f:	in     al,0xd4
  406a21:	add    DWORD PTR [eax+0x161f6de],esp
  406a27:	sub    edx,ebx
  406a29:	pop    esi
  406a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2b:	popa   
  406a2c:	aaa    
  406a2d:	enter  0xa44b,0x5f
  406a31:	jns    0x4069f9
  406a33:	outs   dx,DWORD PTR cs:[esi]
  406a35:	in     eax,dx
  406a36:	in     eax,0x27
  406a38:	out    0x9c,al
  406a3a:	int    0x83
  406a3c:	fsubr  QWORD PTR [esi+0x25]
  406a3f:	sbb    ebp,ebx
  406a41:	sbb    eax,0x7a2dbac1
  406a46:	popf   
  406a47:	mov    esi,0x8a41b26c
  406a4c:	rol    DWORD PTR [ecx-0x4a2ca61a],cl
  406a52:	push   eax
  406a53:	jg     0x406a87
  406a55:	mov    al,0x4b
  406a57:	mov    edx,ds
  406a59:	add    esp,DWORD PTR [esi]
  406a5b:	cmp    eax,0xfd831e04
  406a60:	lds    ebx,FWORD PTR [eax+0x1a]
  406a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a64:	je     0x406ac4
  406a66:	loop   0x406a49
  406a68:	(bad)  
  406a69:	push   ebx
  406a6a:	cmp    esp,edi
  406a6c:	sbb    ecx,DWORD PTR fs:[ecx+0x260b0045]
  406a73:	bound  esi,QWORD PTR [eax+0x7fda09a3]
  406a79:	mov    ch,0x5f
  406a7b:	sbb    eax,0x8fe1814e
  406a80:	sahf   
  406a81:	jmp    0x2290:0xf8405d9b
  406a88:	jne    0x406ae2
  406a8a:	mov    al,ds:0xb3a86556
  406a8f:	bound  edi,QWORD PTR [eax-0x3dafb145]
  406a95:	mov    ebx,0xdc94fd7d
  406a9a:	enter  0x77fd,0xfc
  406a9e:	pop    ds
  406a9f:	xchg   ecx,eax
  406aa0:	sub    eax,0x449c9e54
  406aa5:	mov    bl,0x6c
  406aa7:	int    0xfb
  406aa9:	push   esp
  406aaa:	outs   dx,BYTE PTR ds:[esi]
  406aab:	shl    DWORD PTR [ebp+0x3f9f1386],cl
  406ab1:	cli    
  406ab2:	in     al,0x5f
  406ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab5:	and    al,0x44
  406ab7:	inc    ebx
  406ab8:	rol    BYTE PTR [edx+0x242e3dd8],1
  406abe:	outs   dx,DWORD PTR ds:[esi]
  406abf:	icebp  
  406ac0:	hlt    
  406ac1:	sar    BYTE PTR [ebx-0xc899891],1
  406ac7:	push   0xc87f3ae2
  406acc:	mov    bl,0x19
  406ace:	mov    eax,0x5861cf3d
  406ad3:	(bad)  [esi+0x50d479df]
  406ad9:	clc    
  406ada:	sbb    ah,dh
  406adc:	imul   ebx,DWORD PTR [esi+ebp*2-0x24],0xf20c65f1
  406ae4:	clc    
  406ae5:	push   ebx
  406ae6:	sbb    dl,BYTE PTR [esi-0x12d29560]
  406aec:	das    
  406aed:	(bad)  
  406aee:	and    al,0x3f
  406af0:	stc    
  406af1:	pop    ss
  406af2:	mov    ebx,DWORD PTR [eax+0x197e2982]
  406af8:	jge    0x406b54
  406afa:	inc    edx
  406afb:	es push esi
  406afd:	shl    BYTE PTR [ebp-0xe],0x3f
  406b01:	inc    edx
  406b02:	call   0x9764:0xc12e1332
  406b09:	scas   eax,DWORD PTR es:[edi]
  406b0a:	and    DWORD PTR [ebx-0x575764a2],ecx
  406b10:	loop   0x406aa0
  406b12:	pusha  
  406b13:	push   0x9abfee80
  406b18:	cdq    
  406b19:	inc    eax
  406b1a:	mov    esp,0xc142d66f
  406b1f:	lds    ebp,FWORD PTR [edi+0x35]
  406b22:	xchg   esi,eax
  406b23:	test   al,ch
  406b25:	call   0xbf9a08cf
  406b2a:	dec    ecx
  406b2b:	sub    dl,bl
  406b2d:	ds push eax
  406b2f:	push   cs
  406b30:	pop    ebx
  406b31:	cwde   
  406b32:	sar    DWORD PTR [edi+ebp*2+0x32b1fd14],cl
  406b39:	jp     0x406b8a
  406b3b:	jo     0x406b1e
  406b3d:	cld    
  406b3e:	ja     0x406b6e
  406b40:	and    ebp,eax
  406b42:	in     eax,0x8b
  406b44:	add    al,BYTE PTR [ebx+0x2b]
  406b47:	jo     0x406b5b
  406b49:	mov    bl,0xf2
  406b4b:	jg     0x406b8c
  406b4d:	inc    esp
  406b4e:	xor    bh,ah
  406b50:	pop    esp
  406b51:	test   al,0xc4
  406b53:	imul   ebp,DWORD PTR [esi-0x3],0x609bcb58
  406b5a:	int3   
  406b5b:	pop    ds
  406b5c:	dec    ebx
  406b5d:	pop    ebx
  406b5e:	lock int3 
  406b60:	ret    
  406b61:	xchg   esp,eax
  406b62:	mov    ss,WORD PTR [ecx*8+0x10fa72a0]
  406b69:	sbb    eax,0xc33c6adf
  406b6e:	test   eax,0xa197350b
  406b73:	je     0x406bc6
  406b75:	add    eax,0x86601363
  406b7a:	bound  edi,QWORD PTR [edx-0x60]
  406b7d:	push   0xf
  406b7f:	mov    ch,0xc9
  406b81:	xchg   edx,eax
  406b82:	or     BYTE PTR [esi],dl
  406b84:	jo     0x406bf0
  406b86:	push   ebp
  406b87:	or     eax,0x17c8246b
  406b8c:	jmp    0x406be6
  406b8e:	cmp    dl,BYTE PTR [ecx+0x5bb18ce0]
  406b94:	repz shl dh,cl
  406b97:	inc    esi
  406b98:	and    DWORD PTR [esi],0xb3ab032b
  406b9e:	call   0x6b27:0xd7b4f03a
  406ba5:	je     0x406b36
  406ba7:	adc    al,0x30
  406ba9:	push   edi
  406baa:	xchg   BYTE PTR [ebx+0x6],dl
  406bad:	sub    al,0x59
  406baf:	int3   
  406bb0:	(bad)  
  406bb1:	mov    bl,0x90
  406bb3:	jns    0x406c2f
  406bb5:	jecxz  0x406c36
  406bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bb8:	sbb    BYTE PTR [edi],cl
  406bba:	enter  0xdbb7,0x2c
  406bbe:	cli    
  406bbf:	js     0x406be2
  406bc1:	pop    edx
  406bc2:	bnd jo 0x406b8d
  406bc5:	ret    0x7a8d
  406bc8:	and    eax,0xb0ccb0be
  406bcd:	data16 daa 
  406bcf:	stc    
  406bd0:	push   es
  406bd1:	pusha  
  406bd2:	pop    esp
  406bd3:	inc    ecx
  406bd4:	push   0xd0bf84c1
  406bd9:	sub    BYTE PTR [ecx+0x1ada2d7b],dh
  406bdf:	adc    DWORD PTR [eax-0xf098c83],edx
  406be5:	lock xchg edx,eax
  406be7:	cwde   
  406be8:	pushf  
  406be9:	retf   0x8463
  406bec:	mov    ds:0x936d6f9,eax
  406bf1:	ret    
  406bf2:	adc    eax,0x7db5523f
  406bf7:	fisubr DWORD PTR [edi]
  406bf9:	pop    ebx
  406bfa:	fldenv [ebx+0x42]
  406bfd:	jne    0x406c67
  406bff:	(bad)  
  406c00:	jle    0x406bd9
  406c02:	xor    al,0x40
  406c04:	retf   
  406c05:	xchg   ecx,eax
  406c06:	out    0xd4,eax
  406c08:	lahf   
  406c09:	std    
  406c0a:	and    al,0x67
  406c0c:	lds    ebx,FWORD PTR ds:0x4de4e584
  406c12:	adc    BYTE PTR [eax-0x5],bh
  406c15:	mov    ebx,0x5c59b4a1
  406c1a:	fimul  DWORD PTR ds:[ebx]
  406c1d:	inc    esi
  406c1e:	fcomp  st(3)
  406c20:	sahf   
  406c21:	xlat   BYTE PTR ds:[ebx]
  406c22:	push   cs
  406c23:	pushf  
  406c24:	ja     0x406be9
  406c26:	xor    ah,BYTE PTR [ebx-0x30fa3dda]
  406c2c:	fldcw  WORD PTR [esi]
  406c2e:	adc    esi,eax
  406c30:	mov    dl,0xe1
  406c32:	cmc    
  406c33:	arpl   ax,di
  406c35:	les    esi,FWORD PTR [ecx+0x157cda47]
  406c3b:	pop    ss
  406c3c:	inc    edx
  406c3d:	(bad)  
  406c3e:	in     al,dx
  406c3f:	fucomip st,st(4)
  406c41:	test   al,0x5f
  406c43:	pop    ecx
  406c44:	or     esp,ebp
  406c46:	mov    esp,0x3a8b3627
  406c4b:	pop    ecx
  406c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4d:	push   cs
  406c4e:	enter  0xb927,0x16
  406c52:	adc    DWORD PTR [eax-0x57adc7a9],edi
  406c58:	push   ss
  406c59:	or     eax,0x16fdd1f7
  406c5e:	dec    ebx
  406c5f:	adc    BYTE PTR [edx+0x4a],al
  406c62:	icebp  
  406c63:	mov    dh,0xec
  406c65:	ins    BYTE PTR es:[edi],dx
  406c66:	add    DWORD PTR [ecx+0x4b9b7edf],esi
  406c6c:	icebp  
  406c6d:	pop    edx
  406c6e:	push   ss
  406c6f:	test   DWORD PTR [ebp+edx*8+0x11dc9891],ecx
  406c76:	and    edi,ecx
  406c78:	call   0xda26:0xc0ea4170
  406c7f:	loopne 0x406cc8
  406c81:	cs inc esp
  406c83:	and    al,0x27
  406c85:	sbb    bh,BYTE PTR [ebp+ebp*2-0x7b]
  406c89:	mov    ecx,0x362823c2
  406c8e:	jne    0x406c96
  406c90:	jg     0x406c9f
  406c92:	sahf   
  406c93:	scas   eax,DWORD PTR es:[edi]
  406c94:	or     eax,0x2844a59
  406c99:	push   es
  406c9a:	fiadd  DWORD PTR [edx-0x26]
  406c9d:	les    ebp,FWORD PTR [ebx+0x2a]
  406ca0:	je     0x406d09
  406ca2:	push   edi
  406ca3:	(bad)  
  406ca4:	out    0x82,al
  406ca6:	fcmovb st,st(1)
  406ca8:	sub    DWORD PTR [esi-0x45],esp
  406cab:	fdivr  QWORD PTR [edi+0x2ee9f3ad]
  406cb1:	fnstenv [edi+0x6a34a5e6]
  406cb7:	cs ss js 0x406cc4
  406cbb:	(bad)  
  406cbc:	mov    eax,0x281da499
  406cc1:	call   0x2fa73642
  406cc6:	mov    bh,0x62
  406cc8:	call   0xb363:0xd018f8e1
  406ccf:	sbb    al,0xbe
  406cd1:	xchg   edx,eax
  406cd2:	push   0x19
  406cd4:	movlps QWORD PTR [ebx-0x2a2680b],xmm4
  406cdb:	inc    ebp
  406cdc:	jns    0x406cbf
  406cde:	out    0x66,eax
  406ce0:	push   ebp
  406ce1:	jb     0x406c7d
  406ce3:	mov    edi,0xa34a0e8e
  406ce8:	or     al,0x31
  406ceb:	sbb    bh,BYTE PTR [ebx-0x6d]
  406cee:	adc    al,0xb1
  406cf0:	das    
  406cf1:	sahf   
  406cf2:	inc    edi
  406cf3:	xchg   edi,edx
  406cf5:	ret    0x3f18
  406cf8:	sub    ah,dh
  406cfa:	lds    esp,FWORD PTR [eax+0x18e88e35]
  406d00:	in     al,0x1d
  406d02:	jge    0x406cbd
  406d04:	arpl   WORD PTR [ebp+edi*1+0x175d2df3],bp
  406d0b:	pop    es
  406d0c:	push   ebx
  406d0d:	gs retf 
  406d0f:	dec    edx
  406d10:	inc    esi
  406d11:	mov    bl,0xe8
  406d13:	mov    dl,0xb6
  406d15:	and    esp,DWORD PTR [ecx+0x2c]
  406d18:	sbb    DWORD PTR [ecx],edx
  406d1a:	mov    edi,0x9e51d9e8
  406d1f:	imul   esi,DWORD PTR [edi+ebx*2-0x6ad4cd0f],0xa16bf06b
  406d2a:	push   ecx
  406d2b:	rol    ebx,cl
  406d2d:	xchg   BYTE PTR [edx],cl
  406d2f:	repnz lods eax,DWORD PTR ds:[esi]
  406d31:	sub    al,0x4a
  406d33:	ret    
  406d34:	shr    BYTE PTR [edi],1
  406d36:	adc    ebp,edi
  406d38:	push   ss
  406d39:	sub    edi,edx
  406d3b:	sbb    eax,DWORD PTR [ecx]
  406d3d:	es adc dh,ch
  406d40:	pop    ds
  406d41:	in     eax,dx
  406d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d43:	jb     0x406cd8
  406d45:	sbb    eax,0xab27cf7f
  406d4a:	or     esi,eax
  406d4c:	push   esp
  406d4d:	daa    
  406d4e:	test   BYTE PTR [ecx-0x73],cl
  406d51:	cwde   
  406d52:	pop    ds
  406d53:	mov    esp,0x5ddd72c4
  406d58:	push   esp
  406d59:	push   ecx
  406d5a:	popf   
  406d5b:	sub    al,0x0
  406d5d:	push   edi
  406d5e:	mov    ds:0xab0dc269,eax
  406d63:	ror    al,cl
  406d65:	shr    DWORD PTR ds:[ebp+eiz*2-0x41e4e9a4],cl
  406d6d:	bound  esi,QWORD PTR [ebp-0x69aca268]
  406d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d74:	out    dx,al
  406d75:	test   eax,0xcc9e47fe
  406d7a:	push   ecx
  406d7b:	shr    BYTE PTR [ebp-0x75],cl
  406d7e:	lahf   
  406d7f:	xor    eax,0x52ee737a
  406d84:	sar    ecx,1
  406d86:	push   eax
  406d87:	jne    0x406d9f
  406d89:	dec    ecx
  406d8a:	jge    0x406d1a
  406d8c:	(bad)  
  406d8d:	es (bad) 
  406d8f:	xchg   esi,eax
  406d90:	xlat   BYTE PTR ds:[ebx]
  406d91:	inc    ebp
  406d92:	dec    ecx
  406d93:	lds    ebp,FWORD PTR [edi]
  406d95:	cwde   
  406d96:	into   
  406d97:	loop   0x406e0c
  406d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d9a:	sbb    edx,DWORD PTR [edx-0x2092a2f3]
  406da0:	xor    BYTE PTR [eax-0x56],dl
  406da3:	cmp    DWORD PTR [ecx],0x4d463d8a
  406da9:	fidiv  DWORD PTR [ecx-0x38]
  406dac:	scas   al,BYTE PTR es:[edi]
  406dad:	call   0x7f49:0xf02cd241
  406db4:	pop    edi
  406db5:	sbb    edx,DWORD PTR [edi]
  406db7:	add    bh,bh
  406db9:	shr    DWORD PTR es:[eax+0xa],0xcc
  406dbe:	or     DWORD PTR [edx-0x71],esi
  406dc1:	lea    ebp,[eax]
  406dc3:	pop    esi
  406dc4:	xor    bh,al
  406dc6:	call   FWORD PTR [edx+0x29f6a39a]
  406dcc:	pop    edx
  406dcd:	div    ebp
  406dcf:	dec    ebx
  406dd0:	mov    dh,0xa9
  406dd2:	(bad)  
  406dd4:	ins    DWORD PTR es:[edi],dx
  406dd5:	xchg   ebp,eax
  406dd6:	scas   eax,DWORD PTR es:[edi]
  406dd7:	and    dl,BYTE PTR [edi+0x16ab78ce]
  406ddd:	out    dx,al
  406dde:	es pushf 
  406de0:	rcr    DWORD PTR [edi+0x58],1
  406de3:	push   ds
  406de4:	rol    BYTE PTR ds:0x3bbb3ab4,0xad
  406deb:	mov    ebp,0x8516f28f
  406df0:	mov    bl,0x2
  406df2:	and    cl,ch
  406df4:	mov    DWORD PTR [edx-0x5fe6eee3],ebx
  406dfa:	xchg   ebx,ebx
  406dfc:	dec    edi
  406dfd:	dec    eax
  406dfe:	adc    dl,BYTE PTR [ebx-0x31]
  406e01:	js     0x406d85
  406e03:	icebp  
  406e04:	bound  edx,QWORD PTR ds:0xf4272b97
  406e0a:	adc    al,0xb1
  406e0c:	dec    ecx
  406e0d:	inc    ecx
  406e0e:	or     edi,DWORD PTR [ebx+0x343ec973]
  406e14:	or     BYTE PTR ds:0x42c307ea,ch
  406e1a:	dec    esi
  406e1b:	retf   
  406e1c:	(bad)  
  406e1d:	cmp    ch,BYTE PTR ds:0x1211ed8
  406e23:	xchg   ecx,eax
  406e24:	mov    cl,0x52
  406e26:	push   0xd0cc5f82
  406e2b:	mov    eax,ds:0x9951e979
  406e30:	jbe    0x406ded
  406e32:	jnp    0x406e33
  406e34:	imul   edx,DWORD PTR [esi+0x5a4ca995],0x59aefa0f
  406e3e:	clc    
  406e3f:	dec    esi
  406e40:	inc    ecx
  406e41:	add    eax,0xec81db49
  406e46:	xchg   BYTE PTR [esi-0x28],cl
  406e49:	sub    ebp,DWORD PTR [ecx]
  406e4b:	adc    BYTE PTR [esi-0x13f5ccf9],0x98
  406e52:	sbb    eax,0x9292654b
  406e57:	add    al,0x9c
  406e59:	and    eax,edx
  406e5b:	add    BYTE PTR [edi-0x24188d53],dl
  406e61:	pushf  
  406e62:	jle    0x406e7e
  406e64:	(bad)  
  406e65:	loope  0x406e62
  406e67:	bound  ebx,QWORD PTR [esi-0x6a]
  406e6a:	or     al,0xb1
  406e6c:	nop
  406e6d:	int    0x5b
  406e6f:	or     ebp,DWORD PTR ds:0x4d21f70c
  406e75:	mov    ecx,0x917fb6cb
  406e7a:	mov    bl,al
  406e7c:	test   al,0xea
  406e7e:	mov    cl,BYTE PTR [esi+edi*1]
  406e81:	sbb    al,0x4e
  406e83:	cs pop ebp
  406e85:	inc    esi
  406e86:	nop
  406e87:	mov    ah,0xdd
  406e89:	xchg   ecx,eax
  406e8a:	cmp    bx,WORD PTR [eax-0x58477524]
  406e91:	push   0x6b070a8c
  406e96:	mov    edi,0xe8623756
  406e9b:	je     0x406e30
  406e9d:	sbb    DWORD PTR [esi-0x7fec9081],esi
  406ea3:	sub    eax,0x7e0400c4
  406ea8:	out    dx,al
  406ea9:	out    dx,al
  406eaa:	mov    bh,al
  406eac:	shr    dh,1
  406eae:	hlt    
  406eaf:	push   0x73802a9f
  406eb4:	mov    esp,0x784c1243
  406eb9:	ss loope 0x406eb9
  406ebc:	aaa    
  406ebd:	adc    eax,0x44431382
  406ec2:	fidivr WORD PTR [eax-0x2a]
  406ec5:	(bad)  
  406ec6:	push   ebx
  406ec7:	rcr    al,cl
  406ec9:	inc    esp
  406eca:	pop    esp
  406ecb:	pop    ecx
  406ecc:	inc    esp
  406ecd:	pushf  
  406ece:	push   0xa91052b6
  406ed3:	mov    edx,0xfbd0299e
  406ed8:	clc    
  406ed9:	in     al,0xaf
  406edb:	or     DWORD PTR [edi+0x56a6131b],edx
  406ee1:	sub    eax,DWORD PTR [edx]
  406ee3:	loopne 0x406e6b
  406ee5:	xlat   BYTE PTR ds:[ebx]
  406ee6:	xchg   esp,eax
  406ee7:	(bad)  
  406ee8:	and    eax,0x69034be9
  406eed:	dec    eax
  406eee:	data16 add ch,dh
  406ef1:	add    eax,DWORD PTR [esi]
  406ef3:	or     esi,DWORD PTR [eax]
  406ef5:	mov    esi,0x4bb1d0ee
  406efa:	pop    ebx
  406efb:	(bad)  
  406efc:	arpl   WORD PTR [edi-0x6],ax
  406eff:	jecxz  0x406f7b
  406f01:	jmp    0x406f6f
  406f03:	ds shr edi,0x3c
  406f07:	push   esi
  406f08:	retf   0x620b
  406f0b:	ficom  WORD PTR [esi+0x6f1d9e55]
  406f11:	mov    ecx,0x91f9b29f
  406f16:	out    dx,al
  406f17:	stos   DWORD PTR es:[edi],eax
  406f18:	jb     0x406f98
  406f1a:	jbe    0x406f31
  406f1c:	dec    ecx
  406f1d:	or     ch,dh
  406f1f:	cmp    DWORD PTR [eax+0x3c],ecx
  406f22:	cmp    DWORD PTR [edi],0xfffffffc
  406f25:	xchg   ebp,eax
  406f26:	sar    ecx,0xa6
  406f29:	add    DWORD PTR [esi-0xc],esi
  406f2c:	call   0xe046:0xc795d57f
  406f33:	dec    eax
  406f34:	popf   
  406f35:	sub    DWORD PTR [ebp-0x40],edi
  406f38:	jno    0x406ee8
  406f3a:	pop    esp
  406f3b:	mov    esi,0x7da3a5c8
  406f40:	outs   dx,DWORD PTR ds:[esi]
  406f41:	mov    esi,0xbc1597ca
  406f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f47:	dec    DWORD PTR [ecx]
  406f49:	mov    WORD PTR [ecx+eiz*2],cs
  406f4c:	add    al,0xbf
  406f4e:	dec    ecx
  406f4f:	shr    DWORD PTR [edi],cl
  406f51:	jae    0x406edf
  406f53:	xor    al,dl
  406f55:	not    DWORD PTR gs:0xaa61743b
  406f5c:	inc    ecx
  406f5d:	stos   BYTE PTR es:[edi],al
  406f5e:	shl    DWORD PTR [ebx+0x60],1
  406f61:	inc    ebx
  406f62:	mov    ds:0x1740265c,al
  406f67:	into   
  406f68:	out    dx,al
  406f69:	sub    bl,BYTE PTR [ecx+ebx*4]
  406f6c:	pop    edx
  406f6d:	outs   dx,BYTE PTR ds:[esi]
  406f6e:	mov    eax,ds:0x532bcd39
  406f73:	pop    ds
  406f74:	pop    edx
  406f75:	(bad)  
  406f77:	cwde   
  406f78:	push   edi
  406f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f7a:	ins    DWORD PTR es:[edi],dx
  406f7b:	sub    ebx,DWORD PTR [edi-0x2ca273a5]
  406f81:	sahf   
  406f82:	repnz outs dx,DWORD PTR ds:[esi]
  406f84:	aad    0x6f
  406f86:	outs   dx,DWORD PTR ds:[esi]
  406f87:	enter  0x128a,0xbf
  406f8b:	push   0x4ba427c6
  406f90:	sbb    ch,BYTE PTR [esp+edx*1+0x21]
  406f94:	cmp    DWORD PTR [edx],esi
  406f96:	es adc eax,0x4a405273
  406f9c:	in     eax,dx
  406f9d:	popa   
  406f9e:	mov    cl,0x72
  406fa0:	pop    ebp
  406fa1:	cs push sp
  406fa4:	leave  
  406fa5:	or     bl,bl
  406fa7:	push   0x25
  406fa9:	jmp    0xc115:0x5616dc9f
  406fb0:	or     BYTE PTR [edi],bl
  406fb2:	fbstp  TBYTE PTR [ecx+0x7c]
  406fb5:	push   edi
  406fb6:	and    DWORD PTR [esi],edi
  406fb8:	repnz mov edi,0xba4f08e0
  406fbe:	test   eax,0x1443fd9e
  406fc3:	fidivr WORD PTR [ebx]
  406fc5:	and    cl,BYTE PTR [ebp+0x43015413]
  406fcb:	and    eax,0x21c87464
  406fd0:	add    dl,ch
  406fd2:	mov    ds:0x501c381c,eax
  406fd7:	xchg   edi,eax
  406fd8:	repnz cs mov cl,dl
  406fdc:	in     eax,0x11
  406fde:	fwait
  406fdf:	aad    0x26
  406fe1:	fwait
  406fe2:	or     BYTE PTR [ebp+0x3af9472b],bl
  406fe8:	jbe    0x40705a
  406fea:	sbb    al,0x38
  406fec:	cmp    ah,BYTE PTR [edx-0x3c4e91f4]
  406ff2:	jg     0x407068
  406ff4:	push   ecx
  406ff5:	int    0x0
  406ff7:	mov    eax,ds:0x7cba68c2
  406ffc:	xchg   ebp,eax
  406ffd:	outs   dx,DWORD PTR ds:[esi]
  406ffe:	inc    edx
  406fff:	mov    esi,0x5778d0da
  407004:	jge    0x406fa3
  407006:	mov    esi,DWORD PTR [eax-0xc532972]
  40700c:	push   0x7c
  40700e:	sbb    eax,0x484e8c3d
  407013:	int3   
  407014:	jle    0x406f9f
  407016:	in     eax,0x42
  407018:	or     edx,esi
  40701a:	int3   
  40701b:	dec    DWORD PTR [ecx-0x38]
  40701e:	push   ebx
  40701f:	call   0x540e:0xb4bbed41
  407026:	or     BYTE PTR [ecx+edx*4-0x24a68cf8],bl
  40702d:	xor    BYTE PTR [esi-0x30],dh
  407030:	jg     0x406fc9
  407032:	lods   al,BYTE PTR ds:[esi]
  407033:	xchg   DWORD PTR [esi-0x68615b7d],ebx
  407039:	dec    edx
  40703a:	repz push ss
  40703c:	mov    esp,0x1e75df88
  407041:	outs   dx,DWORD PTR ds:[esi]
  407042:	mov    ch,0x80
  407044:	push   ds
  407045:	adc    DWORD PTR [esp+ebp*1+0x23],esp
  407049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40704a:	mov    ds:0x6aefb200,al
  40704f:	(bad)  
  407051:	std    
  407052:	mov    bh,0x7e
  407054:	xchg   edx,eax
  407055:	icebp  
  407056:	ins    BYTE PTR es:[edi],dx
  407057:	into   
  407058:	sub    ebp,esp
  40705a:	xor    BYTE PTR [edi+ebx*1-0x6923b255],cl
  407061:	mov    ch,0xbf
  407063:	cld    
  407064:	in     eax,0xe4
  407066:	fbstp  TBYTE PTR cs:[eax+eiz*1+0x5a]
  40706b:	xor    al,0x31
  40706d:	push   edi
  40706e:	test   eax,0xc2ccfe8c
  407073:	mov    bl,0x33
  407075:	std    
  407076:	sar    dl,cl
  407078:	mov    ebp,0xfd4b8067
  40707d:	sub    BYTE PTR [ebp-0x74],bl
  407080:	je     0x4070f4
  407082:	or     DWORD PTR [edx-0x4b],0xa86bd0ea
  407089:	xchg   esp,eax
  40708a:	xor    bl,BYTE PTR [edx]
  40708c:	jge    0x407056
  40708e:	shl    DWORD PTR [edx+0x3a6af9a5],1
  407094:	test   edi,ebx
  407096:	jo     0x4070a3
  407098:	ja     0x407025
  40709a:	and    eax,0x10ca9ae3
  40709f:	repz sbb BYTE PTR [ebp+0x5665bf17],ah
  4070a6:	pop    ds
  4070a7:	mov    al,0xd7
  4070a9:	loopne 0x4070b6
  4070ab:	xchg   ebx,eax
  4070ac:	or     bl,BYTE PTR [edx-0x43]
  4070af:	aas    
  4070b0:	call   0xfef4:0x1d939647
  4070b7:	push   ebx
  4070b8:	(bad)  
  4070b9:	stc    
  4070ba:	and    eax,0xed90af57
  4070bf:	ins    DWORD PTR es:[edi],dx
  4070c0:	sbb    al,BYTE PTR [ebp-0x3dc8ec1b]
  4070c6:	push   edx
  4070c7:	ffreep st(1)
  4070c9:	into   
  4070ca:	dec    edx
  4070cb:	outs   dx,DWORD PTR ds:[esi]
  4070cc:	or     al,BYTE PTR [eax-0x326a1253]
  4070d2:	sbb    BYTE PTR [edi+edi*8+0x2e596e3e],al
  4070d9:	dec    ebx
  4070da:	push   cs
  4070db:	jg     0x4070dc
  4070dd:	sub    eax,0x6d029604
  4070e2:	loopne 0x4070f8
  4070e4:	mov    eax,0xafde590c
  4070e9:	xor    DWORD PTR [eax+edi*2+0x1e6cdbd3],esp
  4070f0:	and    esp,DWORD PTR [ecx+0x650d328d]
  4070f6:	push   cs
  4070f7:	scas   eax,DWORD PTR es:[edi]
  4070f8:	sbb    al,0x21
  4070fa:	jo     0x407160
  4070fc:	or     bl,al
  4070fe:	fs xor al,0x4c
  407101:	cmp    BYTE PTR [esi-0x2d6e91bd],al
  407107:	mov    ah,0xd
  407109:	or     BYTE PTR [edx],dl
  40710b:	and    eax,0xa4ad5f24
  407110:	into   
  407111:	in     al,dx
  407112:	inc    esi
  407113:	and    bh,cl
  407115:	pop    ebx
  407116:	pushf  
  407117:	sub    BYTE PTR [ebp+edi*4+0x2fb475b7],0x11
  40711f:	loopne 0x4070d7
  407121:	sub    al,0x9e
  407123:	add    ah,0xa9
  407126:	mov    dh,0xa3
  407128:	or     eax,0x56cf29c9
  40712d:	(bad)  
  40712e:	mov    ah,0x12
  407130:	dec    ebx
  407131:	mov    bh,BYTE PTR [edi]
  407133:	mov    edi,0x3e8eca6e
  407138:	xor    bh,BYTE PTR [ebp+0x11eb432e]
  40713e:	fs jno 0x407190
  407141:	es gs jecxz 0x40715d
  407145:	jne    0x40713f
  407147:	or     al,0x38
  407149:	dec    ebx
  40714a:	leave  
  40714b:	out    0xc7,al
  40714d:	pop    ds
  40714e:	add    ebx,DWORD PTR [edi]
  407150:	imul   eax,DWORD PTR [edi+0x10],0xffffffb1
  407154:	shl    dh,cl
  407156:	or     BYTE PTR [edx-0x148b2c60],0x3d
  40715d:	add    edi,0xffffff9f
  407160:	cs pushf 
  407162:	call   0x3862:0x3e48dbdf
  407169:	test   ah,cl
  40716b:	sti    
  40716c:	imul   ecx,DWORD PTR [edx],0x19
  40716f:	mov    edx,DWORD PTR [edi+edi*8-0xf618561]
  407176:	mov    edi,0xd240f058
  40717b:	out    dx,eax
  40717c:	popf   
  40717d:	imul   esi,DWORD PTR [eax+0x3c],0xffffff82
  407181:	cdq    
  407182:	adc    esi,DWORD PTR [edi+0x28]
  407185:	sbb    ebx,DWORD PTR [eax]
  407187:	sub    BYTE PTR [eax+0x252adc3a],bl
  40718d:	sub    DWORD PTR [edx+esi*1-0x65],esp
  407191:	inc    edi
  407192:	out    dx,al
  407193:	dec    eax
  407194:	xor    eax,0x3b35c799
  407199:	mov    cl,0xba
  40719b:	sbb    eax,DWORD PTR [ecx-0x241b4822]
  4071a1:	cmc    
  4071a2:	push   0xffffffee
  4071a4:	sbb    ebx,ebx
  4071a6:	adc    al,BYTE PTR [edi-0x57eb2683]
  4071ac:	inc    ebp
  4071ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ae:	push   0x91d0cdf8
  4071b3:	adc    al,0x24
  4071b5:	mov    ecx,0x86dc37e3
  4071ba:	mov    ch,0xf1
  4071bc:	pop    eax
  4071bd:	retf   0x6a10
  4071c0:	sub    bl,BYTE PTR [edi]
  4071c2:	in     eax,0xb8
  4071c4:	stos   DWORD PTR es:[edi],eax
  4071c5:	icebp  
  4071c6:	ror    BYTE PTR [edx],0x89
  4071c9:	rol    DWORD PTR [edi],cl
  4071cb:	mov    ah,0x3d
  4071cd:	dec    eax
  4071ce:	mov    ebp,0x346db1b7
  4071d3:	repnz aaa 
  4071d5:	int3   
  4071d6:	stc    
  4071d7:	int    0x18
  4071d9:	cs push edx
  4071db:	mov    dh,0x24
  4071dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071de:	out    0xe7,al
  4071e0:	xor    BYTE PTR [esi],ch
  4071e2:	xor    eax,0xfcb079fe
  4071e7:	xchg   esi,eax
  4071e8:	mov    ch,0x63
  4071ea:	inc    ecx
  4071eb:	pop    esi
  4071ec:	dec    esi
  4071ed:	out    dx,eax
  4071ee:	sub    ecx,esp
  4071f0:	mov    esi,cr0
  4071f3:	or     eax,0x50b22bc
  4071f8:	push   ss
  4071f9:	add    BYTE PTR [edi+0x315361ba],0x62
  407200:	icebp  
  407201:	xor    DWORD PTR [edi+0x555069a],esi
  407207:	cli    
  407208:	(bad)  [edi-0x26]
  40720b:	(bad)  
  40720d:	repz call FWORD PTR [edi-0x7d]
  407211:	test   DWORD PTR [ebp+0x6c],0x93766978
  407218:	dec    esp
  407219:	jg     0x407261
  40721b:	mov    ds:0xd5d09c14,al
  407220:	add    dl,0xaf
  407223:	lds    ecx,FWORD PTR [edx+0x742259ac]
  407229:	add    al,BYTE PTR [esp+edx*1-0x4e056d26]
  407230:	cmp    dh,al
  407232:	retf   
  407233:	pop    ds
  407234:	sbb    eax,0x170e6d21
  407239:	mov    WORD PTR cs:[eax],ss
  40723c:	neg    bl
  40723e:	(bad)  
  40723f:	test   BYTE PTR ds:0xaf44ec72,0x39
  407246:	lahf   
  407247:	jne    0x40720d
  407249:	adc    ecx,ebx
  40724b:	mov    dh,0x8f
  40724d:	sbb    al,0x24
  40724f:	dec    esi
  407250:	mov    dh,0xbb
  407252:	cld    
  407253:	dec    edx
  407254:	add    bl,BYTE PTR [ebx]
  407256:	mov    ebp,0xacb5bde3
  40725b:	push   ss
  40725c:	push   eax
  40725d:	popf   
  40725e:	rcr    DWORD PTR [edx-0xe],0x11
  407262:	outs   dx,BYTE PTR ds:[esi]
  407263:	add    BYTE PTR [edi-0x54],0x7c
  407267:	inc    esp
  407268:	sub    BYTE PTR [ecx-0x67],dh
  40726b:	or     BYTE PTR [edi-0x60],bl
  40726e:	ja     0x4072d6
  407270:	jbe    0x407218
  407272:	mov    eax,0x4639e798
  407277:	push   es
  407278:	and    dh,BYTE PTR [esp+esi*4+0x41]
  40727c:	mov    esp,0x4fff30fb
  407281:	push   ecx
  407282:	into   
  407283:	cmp    BYTE PTR [edi-0x69bb016d],ch
  407289:	ret    
  40728a:	xchg   ecx,eax
  40728b:	ins    DWORD PTR es:[edi],dx
  40728c:	jnp    0x407215
  40728e:	inc    ebp
  40728f:	push   ss
  407290:	clc    
  407291:	iret   
  407292:	mov    ebx,0x15275bce
  407297:	pop    edx
  407298:	mov    eax,0xe87654aa
  40729d:	adc    bl,BYTE PTR [edx]
  40729f:	dec    ecx
  4072a0:	arpl   WORD PTR [ecx],dx
  4072a2:	cmp    cl,dl
  4072a4:	imul   ebx,DWORD PTR [esi+esi*8+0x140c821a],0x5c7f7aa9
  4072af:	lods   al,BYTE PTR ds:[esi]
  4072b0:	mov    ecx,0xcfcc00f
  4072b5:	inc    edx
  4072b6:	leave  
  4072b7:	and    dh,BYTE PTR [ebx-0x7f3413b]
  4072bd:	cld    
  4072be:	xor    bh,BYTE PTR [eax-0x6c]
  4072c1:	test   BYTE PTR [edi],ch
  4072c3:	lea    eax,[edx-0x2bee603b]
  4072c9:	imul   DWORD PTR [esi+0x26919e32]
  4072cf:	xor    esp,DWORD PTR [ebx]
  4072d1:	fbstp  TBYTE PTR [ecx-0x2d4090a0]
  4072d7:	jae    0x4072df
  4072d9:	into   
  4072da:	inc    ebp
  4072db:	call   0x4125bfcc
  4072e0:	pop    eax
  4072e1:	out    dx,al
  4072e2:	mov    dl,0xe5
  4072e4:	jo     0x407269
  4072e6:	data16 (bad) 
  4072e9:	in     eax,0x3d
  4072eb:	lahf   
  4072ec:	int    0x34
  4072ee:	dec    edx
  4072ef:	dec    eax
  4072f0:	loopne 0x40736c
  4072f2:	icebp  
  4072f3:	cmova  esi,DWORD PTR [ebx]
  4072f6:	pop    edi
  4072f7:	pusha  
  4072f8:	dec    ecx
  4072f9:	xor    al,0xe0
  4072fb:	xor    eax,esp
  4072fd:	(bad)  
  4072fe:	ror    BYTE PTR [ebx],1
  407300:	add    DWORD PTR [eax+0x22],esp
  407303:	cmp    DWORD PTR [ebp-0x1f6919fa],ebp
  407309:	lods   eax,DWORD PTR ds:[esi]
  40730a:	test   bh,ch
  40730c:	sub    DWORD PTR [esi+0x48877f9f],ebp
  407312:	faddp  st(4),st
  407314:	lods   eax,DWORD PTR ds:[esi]
  407315:	(bad)  
  407316:	jmp    0xd14d:0x921e0a23
  40731d:	les    esp,FWORD PTR [esi-0x6ce9397a]
  407323:	inc    esi
  407324:	(bad)  
  407325:	xchg   esp,eax
  407326:	lock sub eax,DWORD PTR [ebx]
  407329:	mov    ch,0x7f
  40732b:	xor    edx,ecx
  40732d:	popf   
  40732e:	dec    edx
  40732f:	test   ebx,esi
  407331:	jge    0x407372
  407333:	test   BYTE PTR [ecx],bh
  407335:	call   0x692cd550
  40733a:	mov    ah,0x97
  40733c:	push   cs
  40733d:	leave  
  40733e:	cs loop 0x407339
  407341:	add    DWORD PTR [edx+0x39502bc8],eax
  407347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407348:	into   
  407349:	mov    ch,0x13
  40734b:	int    0xf4
  40734d:	add    bh,BYTE PTR [esi+0x1b]
  407350:	add    DWORD PTR [eax-0x31],ecx
  407353:	je     0x407358
  407355:	addr16 ror bh,cl
  407358:	loope  0x4072f7
  40735a:	inc    ebp
  40735b:	cdq    
  40735c:	inc    eax
  40735d:	push   edx
  40735e:	gs jl  0x407386
  407361:	mov    ch,0xb3
  407363:	loope  0x407360
  407365:	xchg   ch,ah
  407367:	cmp    BYTE PTR ds:0xabf2d0eb,cl
  40736d:	fisttp DWORD PTR [ebp-0x73]
  407370:	daa    
  407371:	(bad)  
  407372:	xor    edi,DWORD PTR [edi-0x6f6525d8]
  407378:	pushf  
  407379:	sub    eax,0x8f367a4
  40737e:	adc    eax,0x4f
  407381:	mov    esp,0xb9187eff
  407386:	mov    ds:0x5f3c3750,eax
  40738b:	and    BYTE PTR [ebp+0x5],ah
  40738e:	and    edi,DWORD PTR [esi]
  407390:	pop    ebp
  407391:	xor    dl,ah
  407393:	or     BYTE PTR [esi],ch
  407395:	aad    0xfe
  407397:	ins    DWORD PTR es:[edi],dx
  407398:	jle    0x407356
  40739a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40739b:	add    cl,dh
  40739d:	je     0x407322
  40739f:	jns    0x4073b5
  4073a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073a2:	fsub   st,st(1)
  4073a4:	sbb    DWORD PTR ds:0xdb3d509,0x56
  4073ab:	xchg   ebp,eax
  4073ac:	mov    ds,edx
  4073ae:	cdq    
  4073af:	sub    bl,bl
  4073b1:	xor    DWORD PTR [eax-0x4b],0x37a78589
  4073b8:	out    0x1d,al
  4073ba:	inc    eax
  4073bb:	mov    ebx,0x378f94f8
  4073c0:	inc    esi
  4073c1:	cmp    eax,0x49bbe32f
  4073c6:	dec    edx
  4073c7:	das    
  4073c8:	ins    DWORD PTR es:[edi],dx
  4073c9:	mov    edx,0xbfad2257
  4073ce:	int3   
  4073cf:	inc    esi
  4073d0:	mov    al,0x5b
  4073d2:	mov    eax,DWORD PTR [edx+0x5b]
  4073d5:	clc    
  4073d6:	mov    eax,0x583423fb
  4073db:	pop    es
  4073dc:	outs   dx,DWORD PTR ds:[esi]
  4073dd:	ins    BYTE PTR es:[edi],dx
  4073de:	jns    0x40737b
  4073e0:	inc    edi
  4073e1:	cld    
  4073e2:	mov    esi,0xbf980d2
  4073e7:	adc    DWORD PTR [ecx+0x34],esi
  4073ea:	xor    al,0x76
  4073ec:	lock ins BYTE PTR es:[edi],dx
  4073ee:	mov    bh,0x57
  4073f0:	xchg   ebx,eax
  4073f1:	inc    eax
  4073f2:	scas   al,BYTE PTR es:[edi]
  4073f3:	mov    bl,0xc4
  4073f5:	scas   eax,DWORD PTR es:[edi]
  4073f6:	aam    0x17
  4073f8:	iret   
  4073f9:	mov    edx,0x54bbd56b
  4073fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ff:	inc    esp
  407400:	dec    ebp
  407401:	adc    ch,BYTE PTR [eax+0x72]
  407404:	fwait
  407405:	add    esp,eax
  407407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407408:	push   ebp
  407409:	nop
  40740a:	stc    
  40740b:	lea    edx,[edi+0x4]
  40740e:	getsec 
  407410:	push   0xb494138
  407415:	mov    dl,0x8
  407417:	dec    ebp
  407418:	mov    edx,?
  40741a:	sbb    BYTE PTR [ecx-0x41334eb4],ch
  407420:	nop
  407421:	mov    dl,0x58
  407423:	add    DWORD PTR [ecx],esp
  407425:	lds    ebp,FWORD PTR [ebp-0x18]
  407428:	sbb    eax,0x5a404698
  40742d:	imul   ecx,DWORD PTR [edx],0x2f38cc01
  407433:	lods   eax,DWORD PTR ds:[esi]
  407434:	xor    eax,0xd4e2f8be
  407439:	in     al,dx
  40743a:	out    0x12,eax
  40743c:	(bad)  
  40743d:	cmp    ecx,DWORD PTR [edi]
  40743f:	or     al,0x1b
  407441:	dec    ecx
  407442:	mov    ?,edi
  407444:	sbb    BYTE PTR [edi+0x19011e85],0xb2
  40744b:	cld    
  40744c:	icebp  
  40744d:	add    BYTE PTR [edi+ebp*8-0xf807f3d],dl
  407454:	idiv   esi
  407456:	mov    dh,0x36
  407458:	mov    bh,0x3
  40745a:	out    dx,eax
  40745b:	xor    al,bh
  40745d:	retf   
  40745e:	les    eax,FWORD PTR [edi+ecx*2]
  407461:	jns    0x407414
  407463:	push   ebp
  407464:	arpl   WORD PTR [ecx-0x78],sp
  407467:	(bad)  
  407468:	retf   
  407469:	cmp    BYTE PTR [ebx],0x78
  40746c:	ret    0x3424
  40746f:	not    DWORD PTR [ecx]
  407471:	xor    DWORD PTR [ecx+esi*1-0x19],edx
  407475:	pop    ds
  407476:	cmp    eax,0x15ab2382
  40747b:	cwde   
  40747c:	and    BYTE PTR [edx+0x26da7fe3],ch
  407482:	pop    esp
  407483:	push   cs
  407484:	ja     0x4074e5
  407486:	aas    
  407487:	lods   al,BYTE PTR ds:[esi]
  407488:	cmp    DWORD PTR [esi+0x333e6f7e],ecx
  40748e:	das    
  40748f:	mov    dh,0xc
  407491:	imul   ecx,DWORD PTR [ebp+edi*1-0x5b14f015],0x3492c5cc
  40749c:	dec    eax
  40749d:	in     al,dx
  40749e:	addr16 stc 
  4074a0:	in     al,0x72
  4074a2:	lods   eax,DWORD PTR ds:[esi]
  4074a3:	ret    0xd880
  4074a6:	bswap  eax
  4074a8:	push   eax
  4074a9:	stos   DWORD PTR es:[edi],eax
  4074aa:	and    al,0x54
  4074ac:	dec    ecx
  4074ad:	dec    ebx
  4074ae:	hlt    
  4074af:	(bad)  [eax]
  4074b1:	jae    0x9ce66e3d
  4074b7:	loopne 0x4074a3
  4074b9:	rol    ecx,cl
  4074bb:	shl    BYTE PTR [ebp+0x41],0x6e
  4074bf:	aam    0x11
  4074c1:	pop    eax
  4074c2:	in     eax,dx
  4074c3:	xor    al,0x50
  4074c5:	in     eax,0x75
  4074c7:	nop
  4074c8:	cmp    BYTE PTR [ecx-0x2c7a66df],0xd
  4074cf:	inc    edx
  4074d0:	pop    ds
  4074d1:	mov    al,0xca
  4074d3:	loop   0x40750a
  4074d5:	adc    edi,ebp
  4074d7:	clc    
  4074d8:	xor    dh,cl
  4074da:	xchg   esp,eax
  4074db:	clc    
  4074dc:	(bad)  
  4074dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074de:	xchg   edx,eax
  4074df:	repnz in al,dx
  4074e1:	xchg   ecx,eax
  4074e2:	outs   dx,BYTE PTR ds:[esi]
  4074e3:	xor    al,0x38
  4074e5:	sub    al,0xc7
  4074e7:	sbb    edi,0x78
  4074ea:	pop    esi
  4074eb:	add    BYTE PTR [ebp-0x78fc72aa],0xef
  4074f2:	pushw  ds
  4074f4:	repz test BYTE PTR [ebx],ch
  4074f7:	test   bh,ah
  4074f9:	sub    dh,0x80
  4074fc:	add    ch,BYTE PTR ds:0xc5b4b8ee
  407502:	xchg   esi,eax
  407503:	jmp    0xfdda:0xe0132a0c
  40750a:	outs   dx,BYTE PTR ds:[si]
  40750c:	aas    
  40750d:	lds    eax,FWORD PTR ds:0x922011bc
  407513:	sub    dl,BYTE PTR [edx-0x261be298]
  407519:	(bad)  
  40751a:	inc    ecx
  40751b:	push   0xffffffc5
  40751d:	ins    DWORD PTR es:[edi],dx
  40751e:	xchg   esi,eax
  40751f:	or     BYTE PTR ds:0xabcc1ce4,ch
  407525:	pop    ss
  407526:	jg     0x407578
  407528:	cwde   
  407529:	mov    WORD PTR [edx],ds
  40752b:	inc    esp
  40752c:	enter  0x758d,0xcf
  407530:	dec    eax
  407531:	and    edx,0xffffff82
  407534:	sub    al,BYTE PTR ss:[ebx+ecx*8]
  407538:	(bad)  
  407539:	stc    
  40753a:	sti    
  40753b:	aam    0xf
  40753d:	xchg   edi,eax
  40753e:	addr16 jns 0x407558
  407541:	pop    es
  407542:	xchg   esi,eax
  407543:	jne    0x407505
  407545:	inc    BYTE PTR ds:0x54eba277
  40754b:	sbb    bh,BYTE PTR [edi-0x63]
  40754e:	push   ebx
  40754f:	cwde   
  407550:	cwde   
  407551:	jae    0x407539
  407553:	sbb    al,0xd9
  407555:	push   ds
  407556:	data16 mov bl,BYTE PTR gs:[ecx-0x2168ca76]
  40755e:	pop    edi
  40755f:	xor    DWORD PTR [ebp-0x44],0xffffffbc
  407563:	xor    ebx,edx
  407565:	mov    dl,0x4f
  407567:	and    cl,al
  407569:	sub    esp,DWORD PTR [ecx+0x4b]
  40756c:	shr    DWORD PTR [ecx-0x22],cl
  40756f:	jmp    edi
  407571:	jmp    0xbb359b8c
  407576:	fistp  WORD PTR [esi+0x13]
  407579:	in     eax,dx
  40757a:	ss mov esi,0xe2f3b32b
  407580:	out    dx,al
  407581:	stos   DWORD PTR es:[edi],eax
  407582:	adc    ah,BYTE PTR [edi-0x40]
  407585:	dec    eax
  407586:	dec    eax
  407587:	mov    ah,0xd0
  407589:	cmp    cl,BYTE PTR [ebp-0x467118d9]
  40758f:	sbb    cl,BYTE PTR [ebx+0x4]
  407592:	xchg   esi,eax
  407593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407594:	cmp    eax,0x96437e1b
  407599:	hlt    
  40759a:	inc    ecx
  40759b:	push   ss
  40759c:	mov    es,edx
  40759e:	enter  0x2db5,0x52
  4075a2:	push   ss
  4075a3:	repnz repz inc ebp
  4075a6:	retf   
  4075a7:	jl     0x40754b
  4075a9:	stos   BYTE PTR es:[edi],al
  4075aa:	mov    bh,0x11
  4075ac:	or     eax,0xa837409e
  4075b1:	xor    al,dl
  4075b3:	pop    ds
  4075b4:	xchg   BYTE PTR [ecx+edx*4+0x30],dl
  4075b8:	add    eax,DWORD PTR [esi-0x25]
  4075bb:	sbb    dh,dh
  4075bd:	shl    BYTE PTR [edi-0x52ed7a43],1
  4075c3:	adc    ecx,ebp
  4075c5:	and    eax,0x7a38ab3b
  4075ca:	jmp    0x40759f
  4075cc:	and    eax,0x82daeb8c
  4075d1:	aam    0x8
  4075d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d4:	sbb    eax,0x217de310
  4075d9:	fdiv   DWORD PTR [ecx-0x3a]
  4075dc:	sbb    DWORD PTR [edx+0xb],ecx
  4075df:	aad    0x42
  4075e1:	fstp   st(2)
  4075e3:	add    BYTE PTR [ecx],0xbb
  4075e6:	push   es
  4075e7:	lods   eax,DWORD PTR ds:[esi]
  4075e8:	lds    edx,FWORD PTR [esi]
  4075ea:	xor    al,0x56
  4075ec:	pop    edx
  4075ed:	pop    ss
  4075ee:	jne    0x407621
  4075f0:	add    edx,DWORD PTR fs:[edx+esi*2+0x56c701ba]
  4075f8:	out    dx,eax
  4075f9:	inc    esp
  4075fa:	sti    
  4075fb:	test   DWORD PTR [edi+0x5f],ecx
  4075fe:	or     DWORD PTR [edi-0x64],eax
  407601:	add    DWORD PTR [edx],ecx
  407603:	fadd   DWORD PTR [esi+0x6]
  407606:	test   DWORD PTR [esi],esp
  407608:	push   ebp
  407609:	inc    edx
  40760a:	cld    
  40760b:	dec    edi
  40760c:	xchg   ebx,eax
  40760d:	sti    
  40760e:	out    dx,al
  40760f:	jb     0x4075f5
  407611:	pop    edi
  407612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407613:	loop   0x4075e9
  407615:	ja     0x4075b6
  407617:	xor    al,0xb7
  407619:	push   es
  40761a:	call   0xe661:0x9832173d
  407621:	(bad)  
  407622:	dec    edx
  407623:	ins    BYTE PTR es:[edi],dx
  407624:	popf   
  407625:	mov    ?,edx
  407627:	pushf  
  407628:	(bad)  
  407629:	lock cmp eax,0x4a1404b3
  40762f:	add    DWORD PTR [ebp-0x41c391cf],edi
  407635:	ins    BYTE PTR es:[edi],dx
  407636:	fist   WORD PTR [esi+0x2c]
  407639:	popa   
  40763a:	stos   DWORD PTR es:[edi],eax
  40763b:	lods   al,BYTE PTR ds:[esi]
  40763c:	aam    0xfd
  40763e:	sub    DWORD PTR [edi+0x13a0226c],ebx
  407644:	dec    ecx
  407645:	lods   al,BYTE PTR ds:[esi]
  407646:	cmp    ebx,DWORD PTR [ecx]
  407648:	imul   edx,DWORD PTR [ebp+0x6bfe85ab],0x8caf2846
  407652:	mov    al,0x5d
  407654:	xchg   BYTE PTR [eax+0x7ee268ef],dh
  40765a:	mov    edi,0x1c48c45
  40765f:	jl     0x4076d1
  407661:	sar    DWORD PTR [edi-0xe],1
  407664:	sub    eax,0x531c1801
  407669:	adc    esp,edx
  40766b:	mov    esi,0x45f2bb8c
  407670:	inc    ecx
  407671:	push   eax
  407672:	cmp    DWORD PTR [ecx-0x16],edi
  407675:	pop    eax
  407676:	pop    ds
  407677:	xor    BYTE PTR [eax],0x6f
  40767a:	push   eax
  40767b:	and    BYTE PTR [edx+0x20],ah
  40767e:	hlt    
  40767f:	loope  0x4076b9
  407681:	push   esi
  407682:	xor    eax,0x767a8a0d
  407687:	adc    ecx,DWORD PTR [esi-0x55842efc]
  40768d:	xchg   BYTE PTR [ecx],bl
  40768f:	into   
  407690:	and    BYTE PTR [eax-0x7b213943],cl
  407696:	rol    BYTE PTR [ecx-0x4a],1
  407699:	xchg   edi,eax
  40769a:	cmp    ebp,ebp
  40769c:	sti    
  40769d:	shl    DWORD PTR [edx+0xf],cl
  4076a0:	hlt    
  4076a1:	aad    0x22
  4076a3:	jmp    0xbe37d616
  4076a8:	sub    DWORD PTR [eax-0x588fb4e],ebp
  4076ae:	lods   eax,DWORD PTR ds:[esi]
  4076af:	add    al,0x3e
  4076b1:	popf   
  4076b2:	adc    DWORD PTR [eax-0xd],edi
  4076b5:	xor    eax,0x5128ca7d
  4076ba:	adc    dh,bl
  4076bc:	out    dx,al
  4076bd:	dec    esp
  4076be:	test   eax,0xc42944f9
  4076c3:	dec    esp
  4076c4:	loopne 0x4076a1
  4076c6:	sub    cl,BYTE PTR ds:0xdbedd059
  4076cc:	pop    ss
  4076cd:	idiv   BYTE PTR [edx-0x2c]
  4076d0:	jle    0x40770f
  4076d2:	mov    ds:0x895a43ae,al
  4076d7:	jo     0x407704
  4076d9:	pop    ebp
  4076da:	ror    ch,0x1b
  4076dd:	fdiv   DWORD PTR [ebx+0xa]
  4076e0:	sets   BYTE PTR [esi+eax*8]
  4076e4:	mov    edi,DWORD PTR [esi-0xd12dc9e]
  4076ea:	in     al,dx
  4076eb:	jb     0x4076f8
  4076ed:	inc    ebp
  4076ee:	out    0x88,eax
  4076f0:	add    DWORD PTR [eax+edi*2+0x4],ebx
  4076f4:	or     BYTE PTR [edi+edx*2-0x45040dca],dl
  4076fb:	xor    bh,dl
  4076fd:	stos   DWORD PTR es:[edi],eax
  4076fe:	ret    0xb2cf
  407701:	push   eax
  407702:	iret   
  407703:	mov    ch,0x67
  407705:	gs adc al,0x14
  407708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407709:	(bad)  
  40770a:	and    dh,BYTE PTR [esi+0x12]
  40770d:	jno    0x407744
  40770f:	inc    eax
  407710:	mov    ds:0x4510839a,eax
  407715:	xor    eax,DWORD PTR [edi-0x2d]
  407718:	fmul   QWORD PTR [esi]
  40771a:	xchg   edi,eax
  40771b:	stos   DWORD PTR es:[edi],eax
  40771c:	mov    ds:0x7166fa30,eax
  407721:	hlt    
  407722:	ficomp WORD PTR [esi-0x17]
  407725:	mov    ch,0xa1
  407727:	jmp    0x2725:0xa3c1098e
  40772e:	xor    BYTE PTR [eax-0x4e],bh
  407731:	adc    esi,esi
  407733:	arpl   si,ax
  407735:	and    cl,ch
  407737:	inc    ebp
  407738:	pop    eax
  407739:	mov    ds:0x6877a7c3,eax
  40773e:	cmp    al,0xb2
  407740:	dec    edx
  407741:	mov    ds:0x233e8c95,al
  407746:	dec    esp
  407747:	cmp    eax,0xcaf0be95
  40774c:	retf   
  40774d:	popa   
  40774e:	mov    esi,0x3d2c4598
  407753:	or     dh,BYTE PTR [edx+0x5dc347c6]
  407759:	outs   dx,BYTE PTR ds:[esi]
  40775a:	sub    al,0xe5
  40775c:	mov    eax,0xd70f329
  407761:	pop    esi
  407762:	sub    eax,0x84ffa3d3
  407767:	out    0xf6,al
  407769:	sbb    ah,al
  40776b:	adc    ebx,edi
  40776d:	sbb    eax,0xb340f880
  407772:	dec    eax
  407773:	pop    es
  407774:	inc    eax
  407775:	mov    ?,WORD PTR [edi-0x4bbe0776]
  40777b:	push   eax
  40777c:	inc    edx
  40777d:	sti    
  40777e:	out    dx,al
  40777f:	call   0x3c78:0xeca37987
  407786:	sub    al,0x9c
  407788:	ins    BYTE PTR es:[edi],dx
  407789:	mov    ds:0xb45cb39b,eax
  40778e:	ins    DWORD PTR es:[edi],dx
  40778f:	cld    
  407790:	inc    ecx
  407791:	imul   BYTE PTR [ebx]
  407793:	fbld   TBYTE PTR [edx-0x7a]
  407796:	fwait
  407797:	leave  
  407798:	ja     0x4077b1
  40779a:	daa    
  40779b:	cmp    eax,0xd7c5d2c2
  4077a0:	mov    BYTE PTR [ebp+ecx*8-0x51ffb87c],ch
  4077a7:	mov    cl,0x4c
  4077a9:	adc    al,0x44
  4077ab:	jbe    0x4077c8
  4077ad:	mov    ah,0x5c
  4077af:	retf   
  4077b0:	xlat   BYTE PTR ds:[ebx]
  4077b1:	add    ecx,DWORD PTR [ecx+0x2c38c7c5]
  4077b7:	and    cl,BYTE PTR [ecx-0x67]
  4077ba:	dec    ecx
  4077bb:	lea    eax,[ebx+0x48a3815]
  4077c1:	popf   
  4077c2:	scas   eax,DWORD PTR es:[edi]
  4077c3:	sub    eax,0x9970cb4b
  4077c8:	sub    al,0xf8
  4077ca:	cmp    BYTE PTR [edx],cl
  4077cc:	pop    edi
  4077cd:	es retf 
  4077cf:	push   ebx
  4077d0:	push   ebp
  4077d1:	cdq    
  4077d2:	add    al,0x12
  4077d4:	aam    0x19
  4077d6:	sbb    al,0x28
  4077d8:	aam    0x94
  4077da:	cdq    
  4077db:	mov    dh,dl
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	cmp    al,0x9f
  4077e0:	inc    esi
  4077e1:	lods   eax,DWORD PTR ds:[esi]
  4077e2:	shr    DWORD PTR gs:[edx-0x23],cl
  4077e6:	arpl   WORD PTR ds:0x99c11e13,cx
  4077ec:	push   es
  4077ed:	or     bl,ah
  4077ef:	rcr    ebx,cl
  4077f1:	leave  
  4077f2:	es xchg esi,eax
  4077f4:	sub    esp,edi
  4077f6:	add    BYTE PTR [si+0x551],0xa7
  4077fc:	in     al,dx
  4077fd:	xlat   BYTE PTR ds:[ebx]
  4077fe:	out    dx,eax
  4077ff:	icebp  
  407800:	push   cs
  407801:	(bad)  
  407802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407803:	stc    
  407804:	lock mov ch,0xe4
  407807:	fst    QWORD PTR [ebp+ebp*8-0x5]
  40780b:	push   0xde86fb38
  407810:	mov    esi,0x1ce1af75
  407815:	mov    ds:0x28a2ba05,eax
  40781a:	cmp    esp,DWORD PTR [ecx-0xb85605]
  407820:	rcl    DWORD PTR [edi],1
  407822:	int3   
  407823:	aas    
  407824:	jmp    0x4077e0
  407826:	sub    bh,bl
  407828:	pop    eax
  407829:	in     eax,0x38
  40782b:	shl    BYTE PTR ss:[edx-0x2d],0xaf
  407830:	pop    eax
  407831:	fwait
  407832:	das    
  407833:	dec    esi
  407834:	pop    edx
  407835:	cs (bad) 
  407837:	cmp    eax,0x4835ad11
  40783c:	mov    ecx,0xdbbfa6f8
  407841:	mov    bh,0xf2
  407843:	call   0x82f34eee
  407848:	sub    eax,0xf5eb21d2
  40784d:	lahf   
  40784e:	mov    al,0x70
  407850:	aam    0xaf
  407852:	bound  esp,QWORD PTR [eax-0x52]
  407855:	mov    eax,0xe116bbd6
  40785a:	lahf   
  40785b:	adc    dh,bl
  40785d:	out    dx,al
  40785e:	dec    edx
  40785f:	fmul   st,st(4)
  407861:	popf   
  407862:	and    al,BYTE PTR [ebp-0x7d]
  407865:	sbb    bl,BYTE PTR [ebx-0x1b]
  407868:	int3   
  407869:	mov    ebp,0x3317b1c1
  40786e:	add    esi,ebx
  407870:	or     bh,BYTE PTR [ebp-0x8]
  407873:	jns    0x4078d2
  407875:	fwait
  407876:	mov    esi,0xedc5ae76
  40787b:	or     DWORD PTR [ecx-0x49],0x81d6686f
  407882:	nop
  407883:	and    al,0xed
  407885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407886:	jae    0x40784d
  407888:	push   ebp
  407889:	stc    
  40788a:	pop    edx
  40788b:	pop    ss
  40788c:	cdq    
  40788d:	lds    ecx,FWORD PTR [edi+0x59]
  407890:	mov    al,ds:0x39218386
  407895:	and    al,cl
  407897:	sahf   
  407898:	jle    0x40787b
  40789a:	cld    
  40789b:	inc    esi
  40789c:	rcr    BYTE PTR gs:[ebx-0x36],1
  4078a0:	mov    BYTE PTR [ebp+eiz*2-0x5f],al
  4078a4:	aaa    
  4078a5:	outs   dx,BYTE PTR ds:[esi]
  4078a6:	adc    ah,BYTE PTR [ebx]
  4078a8:	pusha  
  4078a9:	xchg   edi,eax
  4078aa:	dec    ebp
  4078ab:	popa   
  4078ac:	arpl   WORD PTR [ebp-0x404a9de4],bp
  4078b2:	iret   
  4078b3:	mov    ecx,DWORD PTR [ebp+0x1eb605ec]
  4078b9:	jl     0x407877
  4078bb:	loop   0x407841
  4078bd:	ds (bad) 
  4078bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c0:	sub    DWORD PTR ds:0x66cbecb6,esi
  4078c6:	lahf   
  4078c7:	sub    dh,ah
  4078c9:	aam    0xf1
  4078cb:	in     al,dx
  4078cc:	out    dx,al
  4078cd:	ss push esi
  4078cf:	jbe    0x4078c7
  4078d1:	imul   ebp,DWORD PTR [edi+eax*1+0x71],0x2a
  4078d6:	mov    ebp,0x7bae2f1d
  4078db:	mov    dh,0xb7
  4078dd:	sahf   
  4078de:	les    esi,FWORD PTR [esi+edx*8]
  4078e1:	loope  0x407890
  4078e3:	push   es
  4078e4:	fdivr  st,st(5)
  4078e6:	sahf   
  4078e7:	pop    es
  4078e8:	sbb    bh,0x48
  4078eb:	mov    edx,0xafba65bc
  4078f0:	push   es
  4078f1:	(bad)  
  4078f5:	leave  
  4078f6:	maskmovq mm6,(bad)
  4078f7:	div    DWORD PTR [eax]
  4078f9:	hlt    
  4078fa:	inc    eax
  4078fb:	int    0x7b
  4078fd:	mov    eax,0x7d369e87
  407902:	mov    edx,0xb29e12f9
  407907:	or     eax,0xe324edcf
  40790c:	test   eax,0x30f571d4
  407911:	ret    
  407912:	dec    edx
  407913:	xchg   ecx,eax
  407914:	xor    al,0x9d
  407916:	and    ebp,edi
  407918:	cmp    dh,BYTE PTR [ebp+0x24dc0401]
  40791e:	adc    BYTE PTR [edx+0x4f],dh
  407921:	sbb    al,0x52
  407923:	and    eax,DWORD PTR [ebp-0x59cdfcea]
  407929:	adc    eax,0xd46d2713
  40792e:	in     al,0xb5
  407930:	out    0xa7,al
  407932:	push   esi
  407933:	add    al,0xdc
  407935:	push   esp
  407936:	ins    DWORD PTR es:[edi],dx
  407937:	clc    
  407938:	add    eax,DWORD PTR [edi+0xf]
  40793b:	jecxz  0x407954
  40793d:	(bad)  
  40793e:	test   al,0x86
  407940:	or     eax,esi
  407942:	aas    
  407943:	adc    eax,DWORD PTR [edx+0x327d5e5a]
  407949:	sbb    bh,BYTE PTR [eax+esi*2+0x6c]
  40794d:	stos   DWORD PTR es:[edi],eax
  40794e:	(bad)  
  40794f:	dec    eax
  407950:	cmp    BYTE PTR [edx],bl
  407952:	cmp    DWORD PTR [ebp-0x54],0x147d89b9
  407959:	push   ebx
  40795a:	nop
  40795b:	sbb    DWORD PTR [esi+0x2576fa5f],ebp
  407961:	icebp  
  407962:	mov    al,0x50
  407964:	jge    0x407937
  407966:	push   0x37fb9578
  40796b:	scas   al,BYTE PTR es:[edi]
  40796c:	push   esp
  40796d:	arpl   WORD PTR [ecx],di
  40796f:	lahf   
  407970:	ret    0xffd
  407973:	repz ret 
  407975:	sahf   
  407976:	lock inc eax
  407978:	cwde   
  407979:	add    dh,BYTE PTR [edx]
  40797b:	push   ds
  40797c:	cmp    eax,0x3896efe0
  407981:	not    BYTE PTR [ebp+0x6c7a4234]
  407987:	cmp    BYTE PTR [esi+eiz*1-0x6c4e92bb],0xcf
  40798f:	inc    esp
  407990:	ins    DWORD PTR es:[edi],dx
  407991:	pop    edx
  407992:	and    al,0xd6
  407994:	and    DWORD PTR [ecx+0x58e4cfed],0x50
  40799b:	mov    ch,0xfb
  40799d:	fld    QWORD PTR [edi]
  40799f:	or     al,0x69
  4079a1:	sbb    ebx,DWORD PTR [ebp+0x6d]
  4079a4:	or     ah,ch
  4079a6:	in     al,0x95
  4079a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a9:	js     0x40798a
  4079ab:	ret    0x7550
  4079ae:	dec    esi
  4079af:	mov    WORD PTR [eax+0x7203ab97],ss
  4079b5:	cli    
  4079b6:	aaa    
  4079b7:	test   BYTE PTR [ecx],dl
  4079b9:	mov    al,0x34
  4079bb:	cld    
  4079bc:	xchg   BYTE PTR [ebp+edi*2+0x1f3d5437],ah
  4079c3:	jnp    0x4079d3
  4079c5:	add    eax,0x7145bae3
  4079ca:	mov    ah,0xbc
  4079cc:	mov    DWORD PTR [ebx-0x54],edi
  4079cf:	jl     0x407997
  4079d1:	fisub  WORD PTR [ecx-0x3ae46a41]
  4079d7:	clc    
  4079d8:	and    bl,BYTE PTR [edi]
  4079da:	xlat   BYTE PTR ds:[ebx]
  4079db:	(bad)  
  4079dc:	jecxz  0x40796b
  4079de:	out    0xd,eax
  4079e0:	call   0x22b10bd2
  4079e5:	jbe    0x4079ab
  4079e7:	adc    DWORD PTR [edi-0x6d53d541],ebx
  4079ed:	mov    ch,0x22
  4079ef:	cmp    eax,0x757e8cd2
  4079f4:	in     eax,dx
  4079f5:	sub    BYTE PTR ds:0xe17918ba,dl
  4079fb:	daa    
  4079fc:	and    al,BYTE PTR [eax]
  4079fe:	loopne 0x4079e1
  407a00:	jmp    0x4079a5
  407a02:	or     DWORD PTR [ecx+ebp*1-0x2a133c06],ebp
  407a09:	(bad)  
  407a0a:	jb     0x407a6d
  407a0c:	dec    edx
  407a0d:	mov    dl,0xc3
  407a0f:	data16 addr16 aas 
  407a12:	jl     0x4079ca
  407a14:	dec    eax
  407a15:	test   eax,0x19ad21ce
  407a1a:	dec    ebp
  407a1b:	add    eax,0x4932a16e
  407a20:	sbb    al,0x65
  407a22:	aaa    
  407a23:	pop    ebx
  407a24:	test   BYTE PTR [ebx+0xed6fd21],0x84
  407a2b:	dec    edi
  407a2c:	sub    BYTE PTR [edx-0x3d890eee],al
  407a32:	popa   
  407a33:	out    dx,al
  407a34:	xchg   ebp,eax
  407a35:	imul   ebp,DWORD PTR [edx+0x4bf0b1ed],0x6
  407a3c:	std    
  407a3d:	or     eax,0xe6a2895c
  407a42:	mov    dl,0x9c
  407a44:	add    ecx,DWORD PTR [ebx+0x558bfc4d]
  407a4a:	shl    BYTE PTR [ebx],1
  407a4c:	retf   
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xee049c71
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	add    DWORD PTR [eax+0x9],eax
  407b38:	dec    edi
  407b39:	aad    0x23
  407b3b:	rcl    ebx,1
  407b3d:	loop   0x407b14
  407b3f:	popa   
  407b40:	ret    
  407b41:	adc    ebp,DWORD PTR [ecx-0x71]
  407b44:	jno    0x407baf
  407b46:	bound  edx,QWORD PTR [edx]
  407b48:	cwde   
  407b49:	mov    ds:0xf907e05e,eax
  407b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4f:	and    al,0x6e
  407b51:	cmp    ah,ch
  407b53:	bound  edi,QWORD PTR [esi-0x7f]
  407b56:	jbe    0x407b66
  407b58:	mov    cl,dh
  407b5a:	push   esi
  407b5b:	push   ebx
  407b5c:	and    al,0x40
  407b5e:	jbe    0x407b46
  407b60:	lods   eax,DWORD PTR ds:[esi]
  407b61:	mov    ebx,0x64190eb6
  407b66:	or     eax,0xe257ee89
  407b6b:	aad    0x72
  407b6d:	xor    BYTE PTR [edx-0x21],0xf1
  407b71:	pop    edi
  407b72:	hlt    
  407b73:	adc    al,0x9e
  407b75:	das    
  407b76:	call   0xc15ef5cd
  407b7b:	test   DWORD PTR [ebp+0x22],ebp
  407b7e:	mov    ch,BYTE PTR [eax]
  407b80:	cmp    BYTE PTR [eax],dl
  407b82:	push   ebx
  407b83:	xor    cl,BYTE PTR [ebx-0x5d64993c]
  407b89:	xlat   BYTE PTR ds:[ebx]
  407b8a:	cs inc ebx
  407b8c:	sar    BYTE PTR [esp+ebx*1+0x4526c98c],cl
  407b93:	(bad)  
  407b94:	adc    esi,DWORD PTR [eax]
  407b96:	lods   eax,DWORD PTR ds:[esi]
  407b97:	(bad)  
  407b98:	pop    edx
  407b99:	popa   
  407b9a:	shl    DWORD PTR ds:0xecdfe25,cl
  407ba0:	repz dec ebp
  407ba2:	dec    ebx
  407ba3:	push   ecx
  407ba4:	jb     0x407c23
  407ba6:	stc    
  407ba7:	sbb    ah,al
  407ba9:	inc    esp
  407baa:	mov    ecx,0x59797748
  407baf:	jo     0x407c13
  407bb1:	outs   dx,BYTE PTR ds:[esi]
  407bb2:	or     BYTE PTR [ecx-0x43],cl
  407bb5:	jp     0x407b43
  407bb7:	in     al,0xfc
  407bb9:	jno    0x407bec
  407bbb:	jmp    FWORD PTR [edx-0x3c43b689]
  407bc1:	js     0x407c36
  407bc3:	or     al,0x3a
  407bc5:	jl     0x407b88
  407bc7:	aas    
  407bc8:	fs test ebx,ebp
  407bcb:	data16 jp 0x407b87
  407bce:	loope  0x407b6c
  407bd0:	add    al,0xa
  407bd2:	mov    dh,0x29
  407bd4:	sub    edx,DWORD PTR [esi+0x20e1c7a]
  407bda:	adc    BYTE PTR [eax+0x32],dl
  407bdd:	xor    bl,BYTE PTR [ecx]
  407bdf:	ret    0xe4cc
  407be2:	addr16 loopne 0x407c40
  407be5:	cwde   
  407be6:	dec    edi
  407be7:	sbb    DWORD PTR [ecx],ecx
  407be9:	push   ds
  407bea:	xlat   BYTE PTR ds:[ebx]
  407beb:	push   ecx
  407bec:	fadd   DWORD PTR [esi-0x7f]
  407bef:	test   DWORD PTR ds:0x82985f74,edi
  407bf5:	pusha  
  407bf6:	mov    ?,WORD PTR [ebx-0x553a75d0]
  407bfc:	mov    esp,0x7d5cd58d
  407c01:	(bad)  
  407c03:	and    eax,0x6e9ed17c
  407c08:	or     ebx,DWORD PTR [eax]
  407c0a:	dec    eax
  407c0b:	stos   BYTE PTR es:[edi],al
  407c0c:	call   0x4d27:0x1c8ed8c7
  407c13:	scas   eax,DWORD PTR es:[edi]
  407c14:	enter  0xb01e,0xf5
  407c18:	out    dx,eax
  407c19:	in     eax,dx
  407c1a:	adc    ah,dl
  407c1c:	and    al,0xa4
  407c1e:	mov    ds:0xa85a1dab,eax
  407c23:	inc    esp
  407c24:	in     al,dx
  407c25:	add    ecx,edi
  407c27:	xchg   DWORD PTR [eax],edx
  407c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c2a:	jbe    0x407c4f
  407c2c:	xchg   esp,eax
  407c2d:	or     ah,0x76
  407c30:	cmp    al,dl
  407c32:	(bad)  
  407c33:	mov    ds:0x39e74be9,al
  407c38:	or     al,0x3d
  407c3a:	repz xchg ecx,eax
  407c3c:	adc    al,BYTE PTR [esi+0x53e5de55]
  407c42:	rcl    BYTE PTR [ebp-0x2125121f],0x42
  407c49:	push   eax
  407c4a:	add    dl,ah
  407c4c:	imul   edx,DWORD PTR [ecx+0x12],0x75
  407c50:	pop    esp
  407c51:	shl    ch,cl
  407c53:	(bad)  [edx+0x13d15e23]
  407c59:	xchg   edi,eax
  407c5a:	sahf   
  407c5b:	fsubrp st(0),st
  407c5d:	jne    0x407c39
  407c5f:	enter  0xd127,0x50
  407c63:	dec    eax
  407c64:	ret    
  407c65:	xor    DWORD PTR [edi+0x2cb22254],esp
  407c6b:	int    0xcd
  407c6d:	fistp  WORD PTR cs:[esi]
  407c70:	sub    DWORD PTR [ecx-0x56902939],ecx
  407c76:	cmp    al,0x19
  407c78:	cmc    
  407c79:	jmp    0x407c09
  407c7b:	stos   BYTE PTR es:[edi],al
  407c7c:	pop    esp
  407c7d:	mov    ds,WORD PTR [ebx-0xdfc5005]
  407c83:	jecxz  0x407c0f
  407c85:	xchg   ebx,eax
  407c86:	inc    esp
  407c87:	adc    al,0xbe
  407c89:	cld    
  407c8a:	lds    eax,FWORD PTR ds:[edi-0x1ec2580f]
  407c91:	das    
  407c92:	mov    bp,0xb2d8
  407c96:	sbb    edi,ebx
  407c98:	out    0xc9,al
  407c9a:	push   ecx
  407c9b:	scas   eax,DWORD PTR es:[edi]
  407c9c:	inc    BYTE PTR [ebp+esi*2+0x14]
  407ca0:	push   ecx
  407ca1:	and    al,0x55
  407ca3:	std    
  407ca4:	cmp    al,0xed
  407ca6:	pop    eax
  407ca7:	and    esi,DWORD PTR [edi-0x3a]
  407caa:	xchg   ebp,eax
  407cab:	dec    ebp
  407cac:	jge    0x407c70
  407cae:	leave  
  407caf:	xchg   edx,eax
  407cb0:	jbe    0x407cdb
  407cb2:	sub    BYTE PTR [edi-0x9fef1b6],0x4a
  407cb9:	inc    DWORD PTR [edx-0x7c2681b9]
  407cbf:	mov    ?,ecx
  407cc1:	xchg   ecx,eax
  407cc2:	jnp    0x407cc1
  407cc4:	or     BYTE PTR [ebx],bh
  407cc6:	jp     0x407cc5
  407cc8:	stos   DWORD PTR es:[edi],eax
  407cc9:	scas   eax,DWORD PTR es:[edi]
  407cca:	test   eax,0xcf0f2dcd
  407ccf:	test   ch,ah
  407cd1:	mov    eax,ds:0x8e9b9975
  407cd6:	sub    ah,BYTE PTR [esi+0x5a56603d]
  407cdc:	inc    edx
  407cdd:	xor    edx,DWORD PTR [esi-0x3df31edb]
  407ce3:	sbb    DWORD PTR [ecx],edi
  407ce5:	loope  0x407cb6
  407ce7:	aam    0x62
  407ce9:	clc    
  407cea:	imul   eax,DWORD PTR [ecx],0xf2017a09
  407cf0:	jbe    0x407d51
  407cf2:	ins    BYTE PTR es:[edi],dx
  407cf3:	cmp    edx,edx
  407cf5:	push   ebp
  407cf6:	jns    0x407c79
  407cf8:	nop
  407cf9:	das    
  407cfa:	jno    0x407cdc
  407cfc:	lods   eax,DWORD PTR ds:[esi]
  407cfd:	xor    al,0xc6
  407cff:	outs   dx,BYTE PTR ds:[esi]
  407d00:	stos   DWORD PTR es:[edi],eax
  407d01:	sbb    bl,BYTE PTR [esi+0x2d]
  407d04:	data16 mov al,0x10
  407d07:	xchg   ecx,eax
  407d08:	pop    ds
  407d09:	fisub  WORD PTR [edi+0x254a953c]
  407d0f:	outs   dx,DWORD PTR ds:[esi]
  407d10:	xor    edx,DWORD PTR [esi-0x2aa148d6]
  407d16:	out    dx,al
  407d17:	call   0x5373:0x72330982
  407d1e:	call   0xa562cdd3
  407d23:	xlat   BYTE PTR ds:[bx]
  407d25:	pop    esi
  407d26:	pop    es
  407d27:	jae    0x407d5e
  407d29:	mov    bh,0x66
  407d2b:	arpl   WORD PTR [edx-0x33d805f4],si
  407d31:	push   edi
  407d32:	inc    esp
  407d33:	pusha  
  407d34:	data16 (bad) 
  407d36:	ds das 
  407d38:	cdq    
  407d39:	scas   eax,DWORD PTR es:[edi]
  407d3a:	jnp    0x407ccc
  407d3c:	inc    esp
  407d3d:	jno    0x407d6a
  407d3f:	adc    edx,DWORD PTR [ebx]
  407d41:	lds    ebx,FWORD PTR ds:0xaf099926
  407d47:	sub    DWORD PTR [ebp+0x2e],0xe82c26b7
  407d4e:	ror    DWORD PTR [edx-0x6ae18e7d],0x98
  407d55:	test   eax,0xc494d08a
  407d5a:	pop    es
  407d5b:	or     DWORD PTR [edx+0x560d323a],edi
  407d61:	cs xchg esi,eax
  407d63:	fsubr  QWORD PTR [esi-0x49]
  407d66:	pop    edi
  407d67:	aaa    
  407d68:	or     esi,DWORD PTR [esi+0x52]
  407d6b:	fstp   DWORD PTR [eax+0x2d]
  407d6e:	jnp    0x407d4e
  407d70:	pavgw  mm6,mm1
  407d73:	popf   
  407d74:	mov    ch,0x1d
  407d76:	xchg   edi,eax
  407d77:	cmp    DWORD PTR ds:0x887935c3,eax
  407d7d:	add    eax,0x3aa3fce5
  407d82:	xchg   esi,eax
  407d83:	lods   al,BYTE PTR ds:[esi]
  407d84:	loopne 0x407d68
  407d86:	mov    dl,0x8
  407d88:	inc    ecx
  407d89:	fucomip st,st(2)
  407d8b:	lods   eax,DWORD PTR ds:[esi]
  407d8c:	les    esi,FWORD PTR ds:0x3e0b2310
  407d92:	in     al,0x31
  407d94:	push   0x50
  407d96:	call   0x8ad11731
  407d9b:	inc    ecx
  407d9c:	jge    0x407d5a
  407d9e:	mov    ebx,0xff517fdf
  407da3:	mov    al,ds:0xee25ebca
  407da8:	mov    ds:0x66ef7331,eax
  407dad:	inc    esp
  407dae:	and    al,0x44
  407db0:	or     DWORD PTR ds:0xc4c535f9,ebx
  407db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db7:	adc    DWORD PTR [eax+0x72d72a2c],edx
  407dbd:	jmp    0x13725132
  407dc2:	(bad)  [edx+edx*1-0x47]
  407dc6:	cmp    al,BYTE PTR [eax+0x62d2e754]
  407dcc:	mov    ch,0x5b
  407dce:	repz xor bl,dl
  407dd1:	push   cs
  407dd2:	jnp    0x407dba
  407dd4:	jno    0x407d61
  407dd6:	mov    ch,0xfd
  407dd8:	fsub   DWORD PTR [edi+0x1a]
  407ddb:	mov    esp,0x7d869fbb
  407de0:	jecxz  0x407d7a
  407de2:	das    
  407de3:	cmp    eax,0xe1095ac8
  407de8:	jge    0x407e45
  407dea:	mov    bl,0xa2
  407dec:	sbb    eax,DWORD PTR [edx+ebx*2-0x2f]
  407df0:	hlt    
  407df1:	sbb    eax,0x1555c261
  407df6:	nop    DWORD PTR [edi]
  407df9:	and    eax,0x781a65d5
  407dfe:	in     eax,0xce
  407e00:	xchg   BYTE PTR [ecx],dh
  407e02:	dec    edi
  407e03:	mov    ds:0x400d4441,al
  407e08:	mov    ds:0xc1f391b6,al
  407e0d:	and    edx,DWORD PTR [ebp+eax*4-0x7e]
  407e11:	fldcw  WORD PTR [esi-0x3bf94356]
  407e17:	mov    ebx,cs
  407e19:	push   ds
  407e1a:	call   0x429e1386
  407e1f:	cdq    
  407e20:	jns    0x407df3
  407e22:	outs   dx,BYTE PTR es:[esi]
  407e24:	stc    
  407e25:	jecxz  0x407e1b
  407e27:	out    0x98,al
  407e29:	or     dl,BYTE PTR [ecx+0x53]
  407e2c:	adc    al,0x1d
  407e2e:	sbb    cl,BYTE PTR [esp+ebp*2]
  407e31:	cmp    DWORD PTR [edi],ebp
  407e33:	sbb    esi,DWORD PTR [esi+0xb]
  407e36:	add    al,0x6e
  407e38:	xor    ecx,DWORD PTR [eax]
  407e3a:	cmp    eax,0xfe8f75a0
  407e3f:	sub    eax,0xb91a5f03
  407e44:	ins    BYTE PTR es:[edi],dx
  407e45:	loope  0x407eb3
  407e47:	stc    
  407e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e49:	cmp    bh,BYTE PTR [esi-0x460e0edb]
  407e4f:	pop    ecx
  407e50:	repz xchg edi,eax
  407e52:	or     DWORD PTR [eax+eiz*4+0x3c],eax
  407e56:	scas   al,BYTE PTR es:[edi]
  407e57:	inc    edx
  407e58:	xor    DWORD PTR [ebx+0x34fcc590],edx
  407e5e:	rol    DWORD PTR [eax+0x40],1
  407e61:	and    DWORD PTR [esp+ebp*1+0x43],0x602ce71e
  407e69:	call   0xd904a1c5
  407e6e:	jl     0x407e22
  407e70:	fild   WORD PTR [eax-0x3c209bb8]
  407e76:	test   BYTE PTR [edi-0x70],al
  407e79:	not    DWORD PTR [ebx]
  407e7b:	sub    dl,BYTE PTR [edi]
  407e7d:	out    dx,al
  407e7e:	test   BYTE PTR [esi],dh
  407e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e81:	add    DWORD PTR [edi-0x21ca21cf],ebx
  407e87:	pop    ds
  407e88:	push   es
  407e89:	or     BYTE PTR [ecx],ah
  407e8b:	imul   esp,DWORD PTR [ebp+0x75],0x97fc109e
  407e92:	in     eax,0xc3
  407e94:	call   0x27daae35
  407e99:	pop    ebx
  407e9a:	(bad)  
  407e9b:	mov    ?,ebx
  407e9d:	rcl    DWORD PTR [edx],cl
  407e9f:	lea    ebx,[edi-0x27de909e]
  407ea5:	xchg   ecx,eax
  407ea6:	enter  0x6c58,0xc7
  407eaa:	fdiv   DWORD PTR [ebp+0x2c]
  407ead:	xchg   ebx,eax
  407eae:	mov    bh,BYTE PTR [ecx+ebp*1-0x7c]
  407eb2:	xor    al,0xa3
  407eb4:	jae    0x407ec0
  407eb6:	(bad)  
  407eb7:	sub    BYTE PTR cs:[eax+ebp*8-0x7],bh
  407ebc:	cmp    bl,dh
  407ebe:	cmc    
  407ebf:	cli    
  407ec0:	mov    ?,WORD PTR [edx]
  407ec2:	retf   0x2a57
  407ec5:	outs   dx,DWORD PTR ds:[esi]
  407ec7:	xor    eax,0x632b8c2d
  407ecc:	jl     0x407f39
  407ece:	inc    edi
  407ecf:	bound  cx,DWORD PTR ds:0xb50adc86
  407ed6:	cdq    
  407ed7:	inc    ebp
  407ed8:	cmp    BYTE PTR [eax],ch
  407eda:	mov    cl,0x45
  407edc:	(bad)
  407edf:	cld    
  407ee0:	xchg   esp,eax
  407ee1:	or     al,0x5a
  407ee3:	std    
  407ee4:	jp     0x407f12
  407ee6:	xchg   esp,eax
  407ee7:	push   eax
  407ee8:	xor    edx,DWORD PTR [edx+edi*4+0x1f]
  407eec:	into   
  407eed:	sbb    eax,0x8c45ebd1
  407ef2:	push   eax
  407ef3:	pop    ebp
  407ef4:	imul   esp,DWORD PTR [eax],0xffffffd3
  407ef7:	pop    ss
  407ef8:	aad    0xd1
  407efa:	xchg   BYTE PTR [ebp+0x7a],ah
  407efd:	in     eax,0xec
  407eff:	nop
  407f00:	mov    edi,0x1b892b05
  407f05:	sbb    ebp,DWORD PTR [ecx+0x29]
  407f08:	push   ss
  407f09:	popf   
  407f0a:	mov    WORD PTR [eax],?
  407f0c:	mov    dh,ch
  407f0e:	inc    edi
  407f0f:	int    0x1
  407f11:	mov    ecx,0x80b5b763
  407f16:	cmp    ah,BYTE PTR [ecx]
  407f18:	xor    dh,0x88
  407f1b:	cmp    al,0x33
  407f1d:	jl     0x407f07
  407f1f:	imul   esi,DWORD PTR [ecx],0x25e071a2
  407f25:	xchg   BYTE PTR [eax+0x17f4190],cl
  407f2b:	cmc    
  407f2c:	xchg   edx,edi
  407f2e:	ins    BYTE PTR es:[edi],dx
  407f2f:	push   ds
  407f30:	loopne 0x407fa7
  407f32:	out    0x4b,al
  407f34:	push   ebx
  407f35:	cmp    al,0xb0
  407f37:	mov    ecx,0xc9a57ad9
  407f3c:	leave  
  407f3d:	pop    es
  407f3e:	pusha  
  407f3f:	mov    dl,0x1d
  407f41:	imul   esi,esi,0x0
  407f44:	rol    DWORD PTR [edi],0x86
  407f47:	jmp    0x407f06
  407f49:	push   0x7f
  407f4b:	outs   dx,DWORD PTR ds:[esi]
  407f4c:	jno    0x407fb1
  407f4e:	pop    ebp
  407f4f:	cdq    
  407f50:	jmp    0x8552:0x82a3c85c
  407f57:	pop    esp
  407f58:	(bad)  
  407f59:	cmp    DWORD PTR [eax+0x61],esp
  407f5c:	dec    eax
  407f5d:	mov    ds:0x477af5c1,eax
  407f62:	sti    
  407f63:	sub    al,BYTE PTR [edx-0x51]
  407f66:	mov    bl,0x17
  407f68:	shl    ch,0xb9
  407f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f6c:	test   BYTE PTR [ecx],dh
  407f6e:	or     al,0x7a
  407f70:	mov    bl,0x54
  407f72:	neg    DWORD PTR [eax]
  407f74:	lods   al,BYTE PTR ds:[esi]
  407f75:	xchg   edi,eax
  407f76:	imul   edi,DWORD PTR [esi],0x649d0af
  407f7c:	push   0x33ec77cc
  407f81:	fsubr  DWORD PTR [eax+eax*4]
  407f84:	(bad)  
  407f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f86:	les    ebp,FWORD PTR [ebp-0x7c0944b3]
  407f8c:	jne    0x407fa8
  407f8e:	xor    al,0x3c
  407f90:	call   0x2f03:0x1c451775
  407f97:	iret   
  407f98:	and    al,0x32
  407f9a:	jnp    0x407f60
  407f9c:	in     eax,0xdd
  407f9e:	inc    esi
  407f9f:	outs   dx,DWORD PTR ds:[esi]
  407fa0:	dec    ebx
  407fa1:	inc    ecx
  407fa2:	jo     0x407f37
  407fa4:	add    eax,0x7a22c236
  407fa9:	fild   QWORD PTR [ebx+0x2f]
  407fac:	clc    
  407fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fae:	fwait
  407faf:	ret    
  407fb0:	fld    DWORD PTR [ebx+0x6f]
  407fb3:	pop    ebx
  407fb4:	mov    ebp,0x5de92fc2
  407fb9:	out    dx,al
  407fba:	pop    ss
  407fbb:	mov    BYTE PTR [ebx+0x21eca64],ch
  407fc1:	clc    
  407fc2:	(bad)  
  407fc4:	sbb    esp,DWORD PTR [eax-0x3238a66f]
  407fca:	add    ebp,DWORD PTR [ecx-0x5f]
  407fcd:	push   es
  407fce:	add    DWORD PTR ds:0x7ef94516,edi
  407fd4:	fcomp  DWORD PTR [edx]
  407fd6:	imul   edi,DWORD PTR [edi+0x66bc73e2],0xffffff8a
  407fdd:	cmp    eax,0xba4f27cf
  407fe2:	jg     0x407f93
  407fe4:	inc    ebp
  407fe5:	sub    BYTE PTR [ebp+edx*2+0x21dea197],0x74
  407fed:	fld    QWORD PTR ds:0xbf595120
  407ff3:	fidivr DWORD PTR [eax-0x266e121d]
  407ff9:	cld    
  407ffa:	adc    DWORD PTR [eax-0x6d2cea3e],eax
  408000:	and    dh,BYTE PTR fs:[ecx+0x63]
  408004:	jecxz  0x407f91
  408006:	(bad)  
  408007:	hlt    
  408008:	jp     0x407f90
  40800a:	jb     0x408069
  40800c:	imul   edx,DWORD PTR [edx+0x4f9a75f5],0xffffffb2
  408013:	test   al,0xb8
  408015:	jns    0x407fdc
  408017:	or     eax,esi
  408019:	and    BYTE PTR [edx-0x48],al
  40801c:	pop    ds
  40801d:	jne    0x408034
  40801f:	sbb    DWORD PTR [ecx+0x35],edi
  408022:	or     ebp,DWORD PTR [esi+0x33]
  408025:	test   DWORD PTR [edi],edi
  408027:	jp     0x407fff
  408029:	pushf  
  40802a:	push   esp
  40802b:	pop    esp
  40802c:	lods   eax,DWORD PTR ds:[esi]
  40802d:	call   0xec32:0x7f3fc423
  408034:	add    eax,0x1fe4f5bb
  408039:	mov    dh,0x5c
  40803b:	fwait
  40803c:	shl    DWORD PTR ds:0x7082782,cl
  408042:	xchg   ecx,eax
  408043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408044:	jmp    0xfdb17ae4
  408049:	xchg   esi,eax
  40804a:	arpl   WORD PTR [ecx+0x7e6a7d67],cx
  408050:	inc    esp
  408051:	lods   al,BYTE PTR ds:[esi]
  408052:	push   ds
  408053:	rol    ah,cl
  408055:	not    BYTE PTR [edi]
  408057:	sub    eax,0xe0fb84d0
  40805c:	xchg   edx,eax
  40805d:	loopne 0x4080a5
  40805f:	or     BYTE PTR [eax],cl
  408061:	pop    ebx
  408062:	xor    dl,BYTE PTR [ecx]
  408064:	xrelease mov DWORD PTR [esi-0x3150455b],ebp
  40806b:	test   BYTE PTR [ebp+0x4f],cl
  40806e:	dec    ebp
  40806f:	in     eax,0x2d
  408071:	adc    ebp,eax
  408073:	xchg   ecx,eax
  408074:	sub    dh,BYTE PTR [ecx+0x271e73e3]
  40807a:	add    dl,ah
  40807c:	mov    BYTE PTR [esi+0x15],cl
  40807f:	ja     0x40806b
  408081:	inc    ecx
  408082:	ss sub eax,0x3c014bb5
  408088:	push   0xa3d88fc3
  40808d:	lahf   
  40808e:	popf   
  40808f:	mov    dh,0xdf
  408091:	adc    ch,BYTE PTR [esi+0x6e0e183f]
  408097:	sbb    al,0xf3
  408099:	adc    eax,0x32ebef0f
  40809e:	push   esp
  40809f:	test   al,0x68
  4080a1:	je     0x4080f6
  4080a3:	push   ecx
  4080a4:	pop    esp
  4080a5:	ror    bl,0x98
  4080a8:	fsubr  QWORD PTR [eax+0xd]
  4080ab:	sub    ah,BYTE PTR [ecx-0x532db772]
  4080b1:	scas   eax,DWORD PTR es:[edi]
  4080b2:	out    0x14,al
  4080b4:	js     0x408104
  4080b6:	xchg   ecx,eax
  4080b7:	push   ebp
  4080b8:	mov    cl,0xa4
  4080ba:	mov    al,ds:0x7f7f3dd5
  4080bf:	pushf  
  4080c0:	shl    DWORD PTR [esp+esi*1-0x6c],0xd4
  4080c5:	pusha  
  4080c6:	pop    ecx
  4080c7:	(bad)  
  4080c8:	(bad)  
  4080ca:	gs daa 
  4080cc:	mov    ?,ecx
  4080ce:	jns    0x408057
  4080d0:	push   ds
  4080d1:	mov    esi,0xc8cc67f0
  4080d6:	mov    ds:0xa5278993,eax
  4080db:	sub    al,0x2b
  4080dd:	and    BYTE PTR [ebx+0x246eea76],dh
  4080e3:	int    0x8b
  4080e5:	ror    DWORD PTR [eax+0x55664cd2],cl
  4080eb:	cs ret 
  4080ed:	and    edx,DWORD PTR [ebp-0x55]
  4080f0:	ja     0x408110
  4080f2:	ret    
  4080f3:	aam    0x56
  4080f5:	lahf   
  4080f6:	in     eax,0xfb
  4080f8:	ins    BYTE PTR es:[edi],dx
  4080f9:	xchg   esi,eax
  4080fa:	popf   
  4080fb:	mov    ebp,0x888684f6
  408100:	dec    ebx
  408101:	mov    ebx,0x2cb74ce1
  408106:	shl    BYTE PTR [ecx+0x2253dbd8],0x69
  40810d:	js     0x4080a6
  40810f:	mov    al,0xc3
  408111:	sub    dh,BYTE PTR ds:0x5a102897
  408117:	cmp    al,0xfe
  408119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40811a:	inc    esp
  40811b:	adc    BYTE PTR fs:[ebx-0x33],ch
  40811f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408120:	fstp   DWORD PTR [edi-0x26b0b821]
  408126:	stos   DWORD PTR es:[edi],eax
  408127:	mov    fs,WORD PTR [eax+0x5f]
  40812a:	and    cl,BYTE PTR [ebx-0x47]
  40812d:	repz add bh,cl
  408130:	mov    eax,ds:0x7c357765
  408135:	in     eax,dx
  408136:	loop   0x40815c
  408138:	mul    DWORD PTR [ebx-0x13c0d27c]
  40813e:	and    al,0x72
  408140:	js     0x4081a3
  408142:	lods   al,BYTE PTR ds:[esi]
  408143:	fbstp  TBYTE PTR [esi+0x2fdc416b]
  408149:	pop    ebp
  40814a:	sub    edi,DWORD PTR [ebx-0x54]
  40814d:	std    
  40814e:	shl    dl,cl
  408150:	xor    al,0xa6
  408152:	pop    eax
  408153:	add    ah,BYTE PTR [ebx-0x9]
  408156:	sub    eax,0x18c90477
  40815b:	xor    eax,DWORD PTR [edx-0x7e]
  40815e:	lock aad 0x3
  408161:	pushf  
  408162:	(bad)  
  408163:	cmp    eax,0xaa1d0dbd
  408168:	shl    DWORD PTR [ebx+eiz*4-0x1e0f382a],1
  40816f:	inc    BYTE PTR [edx]
  408171:	in     eax,0x4a
  408173:	hlt    
  408174:	push   eax
  408175:	sub    DWORD PTR [esi],esp
  408177:	sar    DWORD PTR [ebx+esi*1-0x67],cl
  40817b:	pushf  
  40817c:	pushf  
  40817d:	scas   eax,DWORD PTR es:[edi]
  40817e:	pop    ecx
  40817f:	popf   
  408180:	pop    esp
  408181:	mov    eax,ds:0x59342001
  408186:	cmp    ebx,edi
  408188:	jbe    0x408198
  40818a:	xor    al,BYTE PTR [edx+edi*8]
  40818d:	inc    ebp
  40818e:	cmp    bh,cl
  408190:	mov    eax,0x550bb2cb
  408195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408196:	xchg   esi,eax
  408197:	inc    esp
  408198:	sbb    BYTE PTR [edi+0x4ca7e5f1],0x87
  40819f:	sbb    eax,0xd02cccf
  4081a4:	dec    esi
  4081a5:	(bad)  
  4081a7:	jp     0x40821a
  4081a9:	out    0x8f,al
  4081ab:	rcl    ch,cl
  4081ad:	xlat   BYTE PTR ds:[ebx]
  4081ae:	jmp    0x894ddf95
  4081b3:	inc    ebp
  4081b4:	sbb    esp,DWORD PTR [eax-0x9]
  4081b7:	and    ch,BYTE PTR [eax]
  4081b9:	daa    
  4081ba:	mov    dh,0x7
  4081bc:	pop    eax
  4081bd:	lds    edi,FWORD PTR [ecx+0x6697f911]
  4081c3:	(bad)  
  4081c5:	js     0x408194
  4081c7:	jl     0x408188
  4081c9:	fisub  DWORD PTR [ecx+0x1b]
  4081cc:	clc    
  4081cd:	mov    al,ds:0xba37854a
  4081d2:	add    ch,BYTE PTR ds:0xa5a5320b
  4081d8:	outs   dx,BYTE PTR ds:[esi]
  4081d9:	jmp    0xc6b8f749
  4081de:	(bad)  
  4081df:	pop    eax
  4081e0:	aam    0xe9
  4081e2:	fcmovnbe st,st(6)
  4081e4:	adc    DWORD PTR [ecx+0x5b99ffd],0xffffffd3
  4081eb:	in     eax,dx
  4081ec:	mov    ecx,0x7e7b4a24
  4081f1:	add    cl,bl
  4081f3:	jmp    0x408235
  4081f5:	and    ch,BYTE PTR [esi]
  4081f7:	xor    al,0xe7
  4081f9:	jb     0x40823b
  4081fb:	xchg   DWORD PTR [edi],esp
  4081fd:	gs fwait
  4081ff:	add    esp,ecx
  408201:	sub    cl,0x5c
  408204:	cmp    esi,edi
  408206:	push   ecx
  408207:	fstp   TBYTE PTR [esi+edi*8-0x53381759]
  40820e:	data16 jl 0x4081b9
  408211:	mov    WORD PTR [ecx],gs
  408213:	loopne 0x4081d4
  408215:	sbb    al,0x73
  408217:	mov    al,ds:0xb1576d64
  40821c:	aad    0xc5
  40821e:	lods   al,BYTE PTR ds:[esi]
  40821f:	adc    bh,0x79
  408222:	clc    
  408223:	mov    ds:0x482278c6,al
  408228:	cli    
  408229:	ds pand mm7,mm7
  40822d:	pop    es
  40822e:	clc    
  40822f:	mov    ebp,0xb9852e55
  408234:	xchg   ebp,eax
  408235:	(bad)  
  408237:	in     al,dx
  408238:	mov    al,0x7a
  40823a:	xlat   BYTE PTR ds:[ebx]
  40823b:	jbe    0x4081db
  40823d:	cs test bh,0xb4
  408241:	mov    ds:0xe37e9789,eax
  408246:	xchg   ecx,eax
  408247:	test   BYTE PTR [ebx-0x69],bl
  40824a:	jnp    0x4081dd
  40824c:	xchg   ebx,eax
  40824d:	out    0x20,eax
  40824f:	repz sar BYTE PTR [ecx+0x5],1
  408253:	bound  edi,QWORD PTR [ebx-0x8282a0b]
  408259:	mov    ebp,0x815abe7e
  40825e:	mov    eax,ds:0xb91d5a58
  408263:	retf   0x159f
  408266:	dec    ebx
  408267:	fld    DWORD PTR [edi+0x3da920b8]
  40826d:	retf   
  40826e:	sahf   
  40826f:	aaa    
  408270:	loopne 0x408293
  408272:	stos   BYTE PTR es:[edi],al
  408273:	fsub   QWORD PTR [edx-0x15]
  408276:	retf   0x99a3
  408279:	shl    BYTE PTR [esp+edx*8-0x43],1
  40827d:	and    cl,BYTE PTR [ebx+0x4]
  408280:	adc    eax,0x7ce3b4e6
  408285:	xchg   esp,eax
  408286:	xchg   edi,eax
  408287:	cld    
  408288:	aaa    
  408289:	xchg   esp,ebp
  40828b:	add    DWORD PTR [ebx+0x2726e5f0],edx
  408291:	cmp    eax,0x14111023
  408296:	test   al,0x3e
  408298:	enter  0x786c,0x17
  40829c:	fst    DWORD PTR [ecx+0x5b]
  40829f:	xchg   BYTE PTR [edx],dl
  4082a1:	aaa    
  4082a2:	imul   edx,esp,0x5beaeb52
  4082a8:	sub    bl,al
  4082aa:	mov    bl,0x64
  4082ac:	(bad)  
  4082ad:	js     0x408255
  4082af:	cmp    ecx,DWORD PTR [edi+esi*8+0x2d]
  4082b3:	adc    al,BYTE PTR [ebp-0x79]
  4082b6:	fst    st(3)
  4082b8:	sub    bl,BYTE PTR [ebx-0x67303a42]
  4082be:	sub    BYTE PTR [edi+0x6b4b4226],ah
  4082c4:	push   edx
  4082c5:	in     eax,0xb3
  4082c7:	push   esi
  4082c8:	push   ebp
  4082c9:	push   0x3d
  4082cb:	jmp    0xfbc8a347
  4082d0:	bound  ebx,QWORD PTR ds:0xe7204147
  4082d6:	test   ebx,ebp
  4082d8:	out    0x38,eax
  4082da:	les    edi,FWORD PTR [ebx-0x64]
  4082dd:	sub    ebp,DWORD PTR [ecx-0x7dd719b9]
  4082e3:	cld    
  4082e4:	and    DWORD PTR [ebx+0x18],esp
  4082e7:	or     al,0x81
  4082e9:	gs iret 
  4082eb:	stos   BYTE PTR es:[edi],al
  4082ec:	retf   
  4082ed:	inc    edx
  4082ee:	sbb    bh,bl
  4082f0:	frstpm(287 only) 
  4082f2:	cmc    
  4082f3:	add    eax,0x5b3649c6
  4082f8:	outs   dx,BYTE PTR ds:[esi]
  4082f9:	mov    edi,0xfc291a9d
  4082fe:	hlt    
  4082ff:	or     DWORD PTR [ebx+0x76203667],0x8171947f
  408309:	and    eax,DWORD PTR [edx+0x1b]
  40830c:	popa   
  40830d:	loope  0x4082a1
  40830f:	js     0x408340
  408311:	and    edi,DWORD PTR [eax]
  408313:	add    BYTE PTR [edx],0x9d
  408316:	cmp    eax,0x5e595058
  40831b:	or     al,0x69
  40831d:	jmp    0x4006c264
  408322:	mov    edi,0xbce3a975
  408327:	bound  esp,QWORD PTR [edi-0x4f88b205]
  40832d:	imul   ebp,DWORD PTR [esi+0x9],0xffffffa7
  408331:	stos   BYTE PTR es:[edi],al
  408332:	popa   
  408333:	shr    ah,0x53
  408336:	xchg   ebx,eax
  408337:	out    dx,al
  408338:	inc    esi
  408339:	in     al,0xf8
  40833b:	mov    ebp,0xf648d915
  408340:	fdiv   st,st(4)
  408342:	adc    dh,ch
  408344:	xchg   esi,eax
  408345:	push   esp
  408346:	add    BYTE PTR [esi-0x3a],bh
  408349:	mov    eax,ds:0xcef522ff
  40834e:	loopne 0x40835d
  408350:	rcr    DWORD PTR [ecx+0x25],0xc9
  408354:	push   es
  408355:	(bad)  
  408357:	mov    eax,ds:0xd118f93f
  40835c:	or     al,0xe4
  40835e:	cmc    
  40835f:	sahf   
  408360:	sub    BYTE PTR [edi+0x1c],dl
  408363:	call   0x2d32:0x120cd641
  40836a:	dec    edx
  40836b:	jae    0x4083cd
  40836d:	push   es
  40836e:	sbb    eax,0x61b35999
  408373:	mov    bh,al
  408375:	sahf   
  408376:	jmp    0xf1ec:0xa109bb09
  40837d:	cli    
  40837e:	aam    0x13
  408380:	mov    ah,0x5e
  408382:	rcr    BYTE PTR [edx+0x1a],cl
  408385:	jo     0x4083ae
  408387:	mov    DWORD PTR [ecx-0x63],ebp
  40838a:	ret    
  40838b:	add    ebp,DWORD PTR [esi+0x57]
  40838e:	or     al,0x61
  408390:	in     eax,dx
  408391:	(bad)  
  408392:	mov    ecx,0x8c7b68e5
  408397:	inc    esi
  408398:	hlt    
  408399:	xchg   DWORD PTR [ecx-0x27],edi
  40839c:	sahf   
  40839d:	xor    eax,0xc0398d7a
  4083a2:	jnp    0x4083f4
  4083a4:	sub    al,0xca
  4083a6:	test   al,0xaa
  4083a8:	mov    ebx,ss
  4083aa:	sbb    eax,0x4d3867c9
  4083af:	xor    BYTE PTR [esi+0x6a],ch
  4083b2:	xlat   BYTE PTR ds:[ebx]
  4083b3:	(bad)  
  4083b4:	fwait
  4083b5:	loope  0x40841e
  4083b7:	pop    esi
  4083b8:	pop    ss
  4083b9:	push   0xffffff92
  4083bb:	div    DWORD PTR [edi+0x154e58a]
  4083c1:	lods   al,BYTE PTR ds:[esi]
  4083c2:	jae    0x408385
  4083c4:	(bad)  
  4083c5:	mov    ah,0x85
  4083c7:	test   eax,0xd4de51b4
  4083cc:	cmp    BYTE PTR [edx+0x536c0053],dh
  4083d2:	jmp    0x329d:0x71724ab8
  4083d9:	push   ecx
  4083da:	and    ecx,ebx
  4083dc:	xor    BYTE PTR ds:0x3f61be2c,bl
  4083e2:	imul   eax,ebx,0x84c9ef0e
  4083e8:	mov    ah,0xd1
  4083ea:	xchg   edi,eax
  4083eb:	sbb    al,0x39
  4083ed:	(bad)  
  4083ee:	clc    
  4083ef:	or     ecx,ebp
  4083f1:	(bad)  
  4083f2:	mov    ebx,0x40e52e4c
  4083f7:	and    edi,DWORD PTR [ecx]
  4083f9:	sub    eax,0x71fc93ba
  4083fe:	or     BYTE PTR [edi-0x58],cl
  408401:	popa   
  408402:	xor    BYTE PTR [ebx],bh
  408404:	fcom   QWORD PTR [edx]
  408406:	push   esp
  408407:	lds    ecx,FWORD PTR [esi]
  408409:	mov    ecx,0x772a03b3
  40840e:	or     edx,DWORD PTR [ebp-0x66]
  408411:	xor    esi,DWORD PTR [edx+0x42fd323f]
  408417:	(bad)  
  408419:	aad    0xba
  40841b:	sub    ebp,DWORD PTR [ebp+eax*2-0x55]
  40841f:	or     eax,0x7355ce07
  408424:	push   0xfdce91fe
  408429:	fwait
  40842a:	loopne 0x40849e
  40842c:	shl    BYTE PTR [edi],1
  40842e:	cmp    bh,BYTE PTR [ecx]
  408430:	push   ds
  408431:	jmp    0xcb11:0xc5b0d51
  408438:	dec    BYTE PTR [ebp+edx*4+0x7ef843]
  40843f:	(bad)  
  408440:	mov    ebp,?
  408442:	sbb    BYTE PTR [ebx],al
  408444:	cmp    DWORD PTR [edx+0x628ba480],0xffffff9c
  40844b:	daa    
  40844c:	icebp  
  40844d:	cs ja  0x408447
  408450:	lock hlt 
  408452:	in     eax,dx
  408453:	mov    esi,0x5f5d5366
  408458:	lea    esp,[ecx-0x744bb21a]
  40845e:	xchg   esp,eax
  40845f:	add    BYTE PTR [eax],0xcb
  408462:	bound  ecx,QWORD PTR [esi+0x308683ed]
  408468:	add    DWORD PTR [esi-0x39ba6885],0x7f
  40846f:	jmp    0x3f912630
  408474:	and    bl,dh
  408476:	test   eax,0xa6149f57
  40847b:	or     DWORD PTR [esi],0x84320092
  408481:	aam    0xd2
  408483:	(bad)
  408487:	lods   eax,DWORD PTR ds:[esi]
  408488:	iret   
  408489:	mov    dh,ah
  40848b:	fisttp WORD PTR [edx+0x72]
  40848e:	repz adc cl,BYTE PTR [eax]
  408491:	loop   0x40843b
  408493:	mov    eax,ds:0xc9edf865
  408498:	jle    0x40843f
  40849a:	xchg   ebx,eax
  40849b:	add    eax,0x18baff78
  4084a0:	adc    eax,0x862d6ea2
  4084a5:	repz mov ebp,cs
  4084a8:	lahf   
  4084a9:	daa    
  4084aa:	pushf  
  4084ab:	or     ecx,eax
  4084ad:	lahf   
  4084ae:	cmp    al,0xab
  4084b0:	das    
  4084b1:	cmp    dh,al
  4084b3:	push   esi
  4084b4:	daa    
  4084b5:	pop    es
  4084b6:	test   DWORD PTR [edi-0x65656960],edx
  4084bc:	ja     0x408521
  4084be:	cld    
  4084bf:	mov    dh,0xa3
  4084c1:	in     al,dx
  4084c2:	jnp    0x40852a
  4084c4:	inc    DWORD PTR [ecx]
  4084c6:	mov    eax,ds:0x22272c38
  4084cb:	nop
  4084cc:	out    dx,al
  4084cd:	repz jmp 0x4084f7
  4084d0:	pop    ds
  4084d1:	into   
  4084d2:	ror    BYTE PTR [ebx],1
  4084d4:	pinsrw mm4,ebx,0x58
  4084d8:	gs xor edx,edi
  4084db:	pop    eax
  4084dc:	push   edx
  4084dd:	fsubr  QWORD PTR [ebx]
  4084df:	arpl   bp,ax
  4084e1:	xchg   DWORD PTR [ebp-0x6cdf3d01],esp
  4084e7:	shl    DWORD PTR [ecx],cl
  4084e9:	add    eax,0xa7533d2a
  4084ee:	push   edx
  4084ef:	fsubrp st(3),st
  4084f1:	aaa    
  4084f2:	aad    0x84
  4084f4:	dec    ebx
  4084f5:	call   0x79304ffa
  4084fa:	ss mov esp,0xc120bd64
  408500:	pop    ebx
  408501:	cmp    cl,BYTE PTR [edx]
  408503:	test   eax,0x4f79aa76
  408508:	push   ebp
  408509:	cwde   
  40850a:	pop    esi
  40850b:	enter  0x8116,0x4
  40850f:	mov    edi,0x240a096f
  408514:	das    
  408515:	or     cl,0x5c
  408518:	dec    edi
  408519:	outs   dx,BYTE PTR ds:[esi]
  40851a:	imul   esp,DWORD PTR [edi+0x73],0x41e36a43
  408521:	ins    DWORD PTR es:[edi],dx
  408522:	inc    eax
  408523:	rcr    BYTE PTR [ecx+0x143caa37],1
  408529:	retf   
  40852a:	imul   eax,DWORD PTR [eax-0xa67b566],0xffffffbe
  408531:	ins    DWORD PTR es:[edi],dx
  408532:	or     BYTE PTR [edi+0x6c6c741d],dl
  408538:	dec    eax
  408539:	adc    edx,DWORD PTR [eax]
  40853b:	rcr    BYTE PTR [ebx+eax*1-0x3e9db13],cl
  408542:	mov    ds:0xf2f74f1f,eax
  408547:	loope  0x4085c6
  408549:	cwde   
  40854a:	scas   eax,DWORD PTR es:[edi]
  40854b:	pushw  0x31
  40854e:	inc    edi
  40854f:	pop    edx
  408550:	jmp    0x4084e6
  408552:	xor    al,BYTE PTR [edx-0x2b57381d]
  408558:	cmp    esp,DWORD PTR [edx+0x63]
  40855b:	jbe    0x4084ec
  40855d:	popf   
  40855e:	adc    al,0x20
  408560:	jp     0x408562
  408562:	je     0x4085d6
  408564:	jp     0x4085c1
  408566:	ja     0x4085e2
  408568:	pusha  
  408569:	dec    ebx
  40856a:	cmp    eax,0xaf3caf78
  408570:	arpl   dx,dx
  408572:	mov    edx,0xf5f8d36b
  408577:	sub    al,0xfc
  408579:	scas   eax,DWORD PTR es:[edi]
  40857a:	sub    ebx,DWORD PTR [ecx+0x24875d70]
  408580:	ror    BYTE PTR [eax],0x7a
  408583:	add    al,0x58
  408585:	ret    
  408586:	mov    ebp,DWORD PTR [edx+0x166f7ac0]
  40858c:	rcr    BYTE PTR gs:[ebp+ecx*2+0x3237e014],0xef
  408595:	dec    edi
  408596:	push   eax
  408597:	in     al,0x27
  408599:	jno    0x40859b
  40859b:	ins    BYTE PTR es:[edi],dx
  40859c:	jp     0x408582
  40859e:	mov    esp,DWORD PTR [ebx+ecx*2]
  4085a1:	sub    esp,DWORD PTR [ebx+0x78]
  4085a4:	cmp    DWORD PTR [edx],ecx
  4085a6:	scas   eax,DWORD PTR es:[edi]
  4085a7:	or     esi,DWORD PTR [edx]
  4085a9:	adc    bl,BYTE PTR [eax-0x41c64468]
  4085af:	mov    WORD PTR [edx-0x56bc4a70],fs
  4085b5:	mov    ds:0x92f5e56f,al
  4085ba:	cmp    al,0xa9
  4085bc:	loop   0x408612
  4085be:	mov    al,ds:0xf4fee1c4
  4085c3:	jge    0x4085ee
  4085c5:	cmc    
  4085c6:	loopne 0x4085a6
  4085c8:	push   ebx
  4085c9:	in     al,0x2a
  4085cb:	jno    0x4085fd
  4085cd:	or     al,0xdd
  4085cf:	sub    ecx,DWORD PTR [ecx]
  4085d1:	mov    dh,0x22
  4085d3:	je     0x408591
  4085d5:	inc    ecx
  4085d6:	cmp    cl,BYTE PTR [edx+ebp*2+0x2aba853a]
  4085dd:	cs jl  0x40865d
  4085e0:	or     cl,BYTE PTR [edx-0x496cf1dc]
  4085e6:	call   0x61dc:0xf16ec29
  4085ed:	imul   edx,esi,0x17
  4085f0:	scas   al,BYTE PTR es:[edi]
  4085f1:	push   ss
  4085f2:	sbb    BYTE PTR [esi+edi*4],0x15
  4085f6:	jae    0x408623
  4085f8:	hlt    
  4085f9:	jecxz  0x4085fb
  4085fb:	add    eax,0xa3d649d
  408600:	fisubr WORD PTR [ecx]
  408602:	jg     0x4085b0
  408604:	or     BYTE PTR [ecx],0x2c
  408607:	dec    eax
  408608:	js     0x4085a1
  40860a:	scas   al,BYTE PTR es:[edi]
  40860b:	pop    ebx
  40860c:	lods   eax,DWORD PTR ds:[esi]
  40860d:	fs jmp 0x8e43a3a
  408613:	iret   
  408614:	in     eax,0xd4
  408616:	sbb    al,0xcc
  408618:	out    0x67,al
  40861a:	test   al,0x4
  40861c:	(bad)  
  40861d:	cmc    
  40861e:	pop    ebp
  40861f:	xchg   esp,eax
  408620:	int    0x35
  408622:	xchg   esi,eax
  408623:	test   BYTE PTR [ecx-0xc],al
  408626:	sub    BYTE PTR [edx+edx*1-0x4b32d516],0x89
  40862e:	inc    eax
  40862f:	leave  
  408630:	pop    eax
  408631:	push   edi
  408632:	jmp    0x408658
  408634:	or     eax,0x54777d7c
  408639:	mov    DWORD PTR [edi+0x42],edx
  40863c:	test   eax,0x36a72410
  408641:	fistp  WORD PTR [ecx]
  408643:	dec    edi
  408644:	adc    al,0xc3
  408646:	push   cs
  408647:	jb     0x4086bc
  408649:	fstp   DWORD PTR [ecx-0x67]
  40864c:	fistp  DWORD PTR [esi-0x6e]
  40864f:	daa    
  408650:	loopne 0x40863c
  408652:	vorpd  ymm3,ymm2,ymm0
  408656:	(bad)  [ecx]
  408658:	lea    esi,[esi+0x3d]
  40865b:	and    al,0x81
  40865e:	sub    al,0x1f
  408660:	mov    edx,0xbfcd4d55
  408665:	je     0x40865b
  408667:	mov    esp,0x4b957627
  40866c:	mov    ch,0xb5
  40866e:	and    esp,DWORD PTR [ebp-0xf]
  408671:	pop    ebp
  408672:	fidivr DWORD PTR [esi-0x16]
  408675:	mov    bl,0xe5
  408677:	pop    edx
  408678:	inc    esp
  408679:	and    ebp,DWORD PTR [esi+0x61]
  40867c:	and    dh,BYTE PTR [edx]
  40867e:	imul   esp,DWORD PTR ds:0x8b27b954,0xdcdc7165
  408688:	sbb    BYTE PTR [esi-0x1070e454],0x1e
  40868f:	sbb    BYTE PTR [eax+0x3967a327],0xa3
  408696:	push   esp
  408697:	int3   
  408698:	bnd jg 0x23ce3c35
  40869f:	lods   eax,DWORD PTR ds:[esi]
  4086a0:	push   ds
  4086a1:	and    DWORD PTR [eax+edi*2-0x1b],0x4f481531
  4086a9:	shr    DWORD PTR [esi+0x4b],cl
  4086ac:	lds    ebx,FWORD PTR es:[edx-0x8]
  4086b0:	mov    eax,ds:0x4acb3d53
  4086b5:	add    al,0x2c
  4086b7:	lods   al,BYTE PTR ds:[esi]
  4086b8:	fcmove st,st(7)
  4086ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086bb:	sbb    DWORD PTR [ebx-0x62dbc972],eax
  4086c1:	sub    ebp,eax
  4086c3:	stos   BYTE PTR es:[edi],al
  4086c4:	or     cl,BYTE PTR [ebx+edi*4+0x3d3d87e5]
  4086cb:	add    bh,ah
  4086cd:	mov    esi,0x14d77c16
  4086d2:	xlat   BYTE PTR ds:[ebx]
  4086d3:	in     al,0x62
  4086d5:	aam    0x74
  4086d7:	push   ebp
  4086d8:	cs push eax
  4086da:	push   edx
  4086db:	mov    dh,0x7
  4086dd:	es xchg esp,eax
  4086df:	cmp    al,0x77
  4086e1:	jne    0x4086dd
  4086e3:	sub    al,0xaa
  4086e5:	pop    ss
  4086e6:	loopne 0x408717
  4086e8:	pop    ds
  4086e9:	jge    0x4086f9
  4086eb:	imul   edi,DWORD PTR [ecx+ebx*8],0xed47ee51
  4086f2:	push   ss
  4086f3:	jb     0x4086b9
  4086f5:	fild   DWORD PTR [edi+0x33]
  4086f8:	div    ebx
  4086fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086fb:	mov    edi,DWORD PTR [ecx-0x61]
  4086fe:	rol    BYTE PTR [edx+ebp*4+0x5394450a],1
  408705:	into   
  408706:	out    0xe1,eax
  408708:	and    al,0x89
  40870a:	and    al,0x38
  40870c:	push   edi
  40870d:	dec    edx
  40870e:	push   DWORD PTR [esp+ebx*8]
  408711:	add    DWORD PTR [edi-0x580b2699],eax
  408717:	or     al,0x2a
  408719:	sbb    BYTE PTR [ebx],bl
  40871b:	aad    0x22
  40871d:	scas   al,BYTE PTR es:[edi]
  40871e:	out    0xb4,eax
  408720:	add    BYTE PTR [edi],0x89
  408723:	mov    BYTE PTR [eax],0x74
  408726:	retf   0xc87d
  408729:	rcl    BYTE PTR [ebx],0xb
  40872c:	in     eax,0x3c
  40872e:	es pop eax
  408730:	add    BYTE PTR [eax+ebp*8+0x2a63167b],bl
  408737:	mov    esp,0xd5a6ab86
  40873c:	jecxz  0x408715
  40873e:	inc    ebp
  40873f:	lock fidiv DWORD PTR ds:0x1004e264
  408746:	in     eax,dx
  408747:	sbb    eax,ebx
  408749:	jae    0x40870d
  40874b:	(bad)  
  40874d:	cli    
  40874e:	inc    esi
  40874f:	xchg   ebx,eax
  408750:	xchg   esp,eax
  408751:	mov    dh,0x25
  408753:	mov    al,0x88
  408755:	dec    esp
  408756:	cs int3 
  408758:	loope  0x4087c0
  40875a:	adc    eax,0x91b9ca24
  40875f:	pop    ecx
  408760:	out    dx,al
  408761:	std    
  408762:	mov    DWORD PTR [edx-0x6718e4d4],esp
  408768:	pop    ds
  408769:	popf   
  40876a:	xchg   edx,eax
  40876b:	xlat   BYTE PTR ds:[ebx]
  40876c:	aad    0x81
  40876e:	mov    ebp,0x879fa83c
  408773:	mov    WORD PTR [ebx+0x9],ss
  408776:	mov    dh,0x72
  408778:	sbb    DWORD PTR [edi],ecx
  40877a:	pop    ss
  40877b:	add    DWORD PTR [ecx],ecx
  40877d:	aaa    
  40877e:	mov    bh,0x37
  408780:	outs   dx,DWORD PTR ds:[esi]
  408781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408782:	leave  
  408783:	xchg   DWORD PTR [eax],ebp
  408785:	shr    DWORD PTR [edx],0x2c
  408788:	fstp   QWORD PTR [edx+0x7a080d39]
  40878e:	push   ebx
  40878f:	(bad)  
  408790:	mov    dl,cl
  408792:	clc    
  408793:	and    BYTE PTR [ecx-0x29bf9c81],bh
  408799:	xor    al,0x10
  40879b:	push   ds
  40879c:	xor    BYTE PTR [edi-0x717f65db],ch
  4087a2:	xchg   esi,eax
  4087a3:	out    dx,eax
  4087a4:	sbb    eax,0x3f62981e
  4087a9:	sti    
  4087aa:	hlt    
  4087ab:	adc    ch,bl
  4087ad:	stos   BYTE PTR es:[edi],al
  4087ae:	pop    es
  4087af:	mov    dl,BYTE PTR [eax]
  4087b1:	lods   eax,DWORD PTR ds:[esi]
  4087b2:	inc    edx
  4087b3:	jns    0x40878d
  4087b5:	cwde   
  4087b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087b8:	push   ds
  4087b9:	rol    DWORD PTR [esp+ebp*1+0x834e13e],0xd
  4087c1:	sahf   
  4087c2:	jg     0x4087f8
  4087c4:	inc    ebx
  4087c5:	imul   esi,esp,0xffffffab
  4087c8:	imul   ebx,DWORD PTR [edx+0x19d40ef2],0xed112a20
  4087d2:	fcomp  DWORD PTR [ecx]
  4087d4:	push   edi
  4087d5:	jbe    0x408782
  4087d7:	(bad)  
  4087d8:	jp     0x40882c
  4087da:	cs xor al,0x9e
  4087dd:	dec    ecx
  4087de:	daa    
  4087df:	or     esp,eax
  4087e1:	or     BYTE PTR [edx],dh
  4087e3:	cmp    BYTE PTR [esi],dl
  4087e5:	loope  0x408826
  4087e7:	jecxz  0x40883a
  4087e9:	aad    0xae
  4087eb:	(bad)  
  4087ec:	out    0x2f,al
  4087ee:	xchg   edi,eax
  4087ef:	ss sub al,0x21
  4087f2:	je     0x408838
  4087f4:	iret   
  4087f5:	fs xchg ecx,eax
  4087f7:	cld    
  4087f8:	cmp    esi,DWORD PTR [ebx+0x704e38a]
  4087fe:	add    eax,0x8f0b5ef3
  408803:	cmc    
  408804:	mov    al,0xa4
  408806:	retf   
  408807:	in     eax,dx
  408808:	int    0xbc
  40880a:	clc    
  40880b:	lods   eax,DWORD PTR ds:[esi]
  40880c:	pop    eax
  40880d:	or     eax,0x402a58a9
  408812:	inc    ebx
  408813:	adc    DWORD PTR [ecx+eax*1+0x6f],edx
  408817:	jl     0x408863
  408819:	xchg   DWORD PTR [ebp-0x3f],eax
  40881c:	xchg   ecx,eax
  40881d:	je     0x408803
  40881f:	pusha  
  408820:	nop
  408821:	xor    dl,BYTE PTR [esi+0x74]
  408824:	fisub  WORD PTR [ecx+0x45]
  408827:	push   esi
  408828:	pop    ds
  408829:	or     cl,bl
  40882b:	rcr    edx,0x2f
  40882e:	(bad)  
  40882f:	push   ds
  408830:	int    0x84
  408832:	adc    ax,0xb8a3
  408836:	loopne 0x408861
  408838:	jl     0x4087df
  40883a:	sub    al,0x87
  40883c:	xchg   edx,eax
  40883d:	push   ebp
  40883e:	sbb    bh,al
  408840:	inc    edi
  408841:	xor    BYTE PTR [edi-0x66],dh
  408844:	push   0xffffffef
  408846:	aam    0x22
  408848:	dec    esp
  408849:	xchg   DWORD PTR [esi+ecx*4-0x43],esi
  40884d:	mov    esi,0x87b466c5
  408852:	mov    bh,0x66
  408854:	pop    eax
  408855:	xor    esi,edx
  408857:	xor    eax,DWORD PTR [esi-0x28d0deb9]
  40885d:	jg     0x4087f5
  40885f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408860:	cmp    esp,0xbcfcde64
  408866:	jp     0x408883
  408868:	or     eax,0xf5abe701
  40886d:	fild   QWORD PTR [edx]
  40886f:	jae    0x40882c
  408871:	jl     0x408864
  408873:	mov    cl,0x89
  408875:	pop    ss
  408876:	(bad)  
  408878:	push   cs
  408879:	les    ebx,FWORD PTR [edx+eiz*4]
  40887c:	or     eax,0xd22327cc
  408881:	aas    
  408882:	jnp    0x408834
  408884:	bound  ecx,QWORD PTR [esp+edi*8-0x23]
  408888:	retf   
  408889:	out    dx,al
  40888a:	pop    esi
  40888b:	push   edi
  40888c:	dec    ebp
  40888d:	jmp    0x43afabac
  408892:	bound  esi,QWORD PTR [ebx]
  408894:	add    ecx,edx
  408896:	xchg   edi,eax
  408897:	inc    esi
  408898:	fst    st(1)
  40889a:	addr16 sti 
  40889c:	mov    BYTE PTR ds:0xb56cf540,dh
  4088a2:	leave  
  4088a3:	retf   0x1c83
  4088a6:	shl    DWORD PTR [esi],0x6c
  4088a9:	xor    al,0xc6
  4088ab:	ins    BYTE PTR es:[edi],dx
  4088ac:	in     eax,0x7d
  4088ae:	scas   al,BYTE PTR es:[edi]
  4088af:	or     dl,ah
  4088b1:	or     bl,ch
  4088b3:	popa   
  4088b4:	rcl    esp,1
  4088b6:	xchg   ebx,eax
  4088b7:	dec    edi
  4088b8:	pop    edi
  4088b9:	aam    0x4d
  4088bb:	test   ch,bh
  4088bd:	out    0xb,eax
  4088bf:	(bad)  
  4088c0:	enter  0x9e70,0x7c
  4088c4:	sti    
  4088c5:	fisttp DWORD PTR ds:[ebp+edx*2+0x41]
  4088ca:	inc    ebx
  4088cb:	(bad)  
  4088cd:	pop    esi
  4088ce:	mov    ds:0x316c4495,eax
  4088d3:	hlt    
  4088d4:	test   bl,bh
  4088d6:	add    DWORD PTR [esi+0x3],0xf233f7e6
  4088dd:	in     eax,dx
  4088de:	xor    BYTE PTR [edx+0x45],0x57
  4088e2:	dec    ebp
  4088e3:	stos   BYTE PTR es:[edi],al
  4088e4:	push   ebp
  4088e5:	jl     0x4088e6
  4088e7:	out    0x8f,al
  4088e9:	stos   BYTE PTR es:[edi],al
  4088ea:	in     al,dx
  4088eb:	pushf  
  4088ec:	add    BYTE PTR [ecx+0x572e7ed9],ah
  4088f2:	gs push edx
  4088f4:	stc    
  4088f5:	inc    ecx
  4088f6:	stos   DWORD PTR es:[edi],eax
  4088f7:	hlt    
  4088f8:	repnz and al,0x79
  4088fb:	add    eax,0xdc4d001
  408900:	dec    edi
  408901:	inc    ecx
  408902:	into   
  408903:	movups xmm7,xmm4
  408906:	test   BYTE PTR [eax+0x4],0xc9
  40890a:	enter  0x2d2e,0xd9
  40890e:	push   ecx
  40890f:	sub    DWORD PTR [edi-0x6d],ebx
  408912:	int3   
  408913:	xchg   DWORD PTR [eax-0x76],eax
  408916:	jle    0x408959
  408918:	inc    edx
  408919:	and    ch,BYTE PTR [ecx+0x71]
  40891c:	jmp    0x408909
  40891e:	into   
  40891f:	shr    BYTE PTR [edx],1
  408921:	in     al,dx
  408922:	out    0x34,al
  408924:	ds shl eax,0x81
  408928:	mov    esp,0x3dd76596
  40892d:	scas   eax,DWORD PTR es:[edi]
  40892e:	jnp    0x408973
  408930:	adc    BYTE PTR [ebp-0x38],cl
  408933:	sub    edi,DWORD PTR [edi-0x1c]
  408936:	mov    eax,0x66021244
  40893b:	mov    BYTE PTR [esi+0x79],ch
  40893e:	pop    esi
  40893f:	fdivr  DWORD PTR [ecx-0x3fdb0ab]
  408945:	out    0x34,eax
  408947:	xchg   esi,eax
  408948:	or     eax,0x576c6df2
  40894d:	(bad)  
  40894e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40894f:	add    al,0x7f
  408951:	lock or DWORD PTR ds:0xf5d5b232,ebp
  408958:	mov    ecx,0xbf629609
  40895d:	into   
  40895e:	push   eax
  40895f:	mov    edi,0x848cabb8
  408964:	bound  esi,QWORD PTR [edx+ebp*1-0x6]
  408968:	sub    DWORD PTR ds:0xa128be8d,esp
  40896e:	das    
  40896f:	or     ax,0xf9f7
  408973:	aas    
  408974:	ins    BYTE PTR es:[edi],dx
  408975:	jne    0x408900
  408977:	in     eax,dx
  408978:	leave  
  408979:	xor    BYTE PTR es:[esi],ah
  40897c:	cmp    al,0xbd
  40897e:	js     0x408956
  408980:	mov    eax,0x292f827f
  408985:	pusha  
  408986:	inc    ebp
  408987:	frstor [esi-0x443acf70]
  40898d:	std    
  40898e:	add    BYTE PTR [edi+0x66],bl
  408991:	mov    edx,0x4853860c
  408996:	jb     0x4089af
  408998:	rcl    BYTE PTR [ebp-0x6a],0x18
  40899c:	mov    bh,0x39
  40899e:	xchg   ebx,esp
  4089a0:	cs daa 
  4089a2:	mov    edi,0x69ea5ccb
  4089a7:	sbb    eax,ebp
  4089a9:	dec    esp
  4089aa:	add    BYTE PTR [eax],0x36
  4089ad:	movzx  esi,sp
  4089b0:	adc    edx,DWORD PTR [edx+0x1e]
  4089b3:	das    
  4089b4:	pop    esp
  4089b5:	xchg   edi,eax
  4089b6:	cmp    BYTE PTR [ebp-0x32],bh
  4089b9:	scas   eax,DWORD PTR es:[edi]
  4089ba:	daa    
  4089bb:	xor    dh,BYTE PTR [edx+edi*8+0x5e]
  4089bf:	push   eax
  4089c0:	ins    BYTE PTR es:[di],dx
  4089c2:	push   cs
  4089c3:	xor    BYTE PTR [ebx],cl
  4089c5:	lahf   
  4089c6:	and    ch,BYTE PTR [edi+0x68e15ac6]
  4089cc:	pop    edi
  4089cd:	das    
  4089ce:	mov    al,ds:0xe64f993
  4089d3:	mov    es,WORD PTR [ecx+0x568620f5]
  4089d9:	add    DWORD PTR [ebx],ebp
  4089db:	lods   eax,DWORD PTR ds:[esi]
  4089dc:	cmc    
  4089dd:	xor    BYTE PTR [ecx],dl
  4089df:	cmp    bl,BYTE PTR [eax-0x74c81a3f]
  4089e5:	int3   
  4089e6:	test   DWORD PTR [ecx+0x3d1aa39a],eax
  4089ec:	cld    
  4089ed:	retf   
  4089ee:	das    
  4089ef:	test   eax,0x5a58b456
  4089f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f5:	in     al,0x74
  4089f7:	scas   al,BYTE PTR es:[edi]
  4089f8:	in     eax,0xf2
  4089fa:	and    al,0x25
  4089fc:	sbb    eax,0x73527718
  408a01:	sbb    al,0xaf
  408a03:	inc    ebp
  408a04:	or     ebp,DWORD PTR [ebx+0x171b6f6]
  408a0a:	(bad)  
  408a0b:	aas    
  408a0c:	imul   ebp,DWORD PTR [edi-0x17282741],0x4b
  408a13:	mov    ch,0x93
  408a15:	jp     0x408a49
  408a17:	clc    
  408a18:	outs   dx,BYTE PTR ds:[esi]
  408a19:	sbb    esi,DWORD PTR [ecx-0x74]
  408a1c:	arpl   WORD PTR [esi+0x4b],bx
  408a1f:	xchg   esp,eax
  408a20:	cmp    ecx,ebx
  408a22:	clc    
  408a23:	or     DWORD PTR [esi+0x569f0857],edx
  408a29:	xchg   BYTE PTR [edx+0x3f],cl
  408a2c:	sti    
  408a2d:	mov    al,ds:0x1eed3288
  408a32:	push   ebx
  408a33:	out    dx,eax
  408a34:	scas   al,BYTE PTR es:[edi]
  408a35:	jle    0x408a5a
  408a37:	add    eax,edx
  408a39:	mov    ecx,0x5734faaf
  408a3e:	jge    0x408a1b
  408a40:	push   eax
  408a41:	test   eax,0x58e0fad0
  408a46:	(bad)  [esi+ebx*4]
  408a49:	dec    ebp
  408a4a:	mov    bl,0xde
  408a4c:	retf   0x49b
  408a4f:	cmp    eax,0xcb52a09
  408a54:	outs   dx,DWORD PTR ds:[esi]
  408a55:	jnp    0x408a13
  408a57:	adc    ebp,DWORD PTR [esp]
  408a5a:	jg     0x4089f8
  408a5c:	cmp    eax,edx
  408a5e:	out    0x30,al
  408a60:	mov    ebx,0x5fc7cbcf
  408a65:	xchg   ecx,eax
  408a66:	dec    ebp
  408a67:	retf   0xf218
  408a6a:	imul   ebx,DWORD PTR [edi-0x30c21973],0x3555caf
  408a74:	sar    cl,cl
  408a76:	int    0xda
  408a78:	sub    ebp,edi
  408a7a:	inc    ebp
  408a7b:	(bad)  
  408a7c:	xor    edx,ebx
  408a7e:	mov    edi,0x66e7c55f
  408a83:	sti    
  408a84:	fdiv   DWORD PTR [ebx-0x66]
  408a87:	mov    dl,0xce
  408a89:	xchg   ebp,eax
  408a8a:	mov    ebx,esi
  408a8c:	add    cl,cl
  408a8e:	ss aas 
  408a90:	mov    ch,0x5e
  408a92:	cmp    BYTE PTR [esi-0x68b003ac],ah
  408a98:	or     ah,dh
  408a9a:	sub    eax,0x5a24d330
  408a9f:	rcl    ch,0x2c
  408aa2:	sti    
  408aa3:	lea    ebx,[ecx+0x7a]
  408aa6:	pop    esp
  408aa7:	mov    cl,BYTE PTR [esp+edi*2-0x200f1460]
  408aae:	mov    ch,0x2c
  408ab0:	jo     0x408afc
  408ab2:	mov    edx,0x96bd8286
  408ab7:	je     0x408a8b
  408ab9:	mov    edi,0x647856b4
  408abe:	pop    ss
  408abf:	aad    0x9
  408ac1:	dec    ebp
  408ac2:	sub    al,0xaa
  408ac4:	popa   
  408ac5:	dec    esi
  408ac6:	and    edx,DWORD PTR [edi+0x245a059]
  408acc:	aaa    
  408acd:	pop    ebx
  408ace:	cmp    al,0x3e
  408ad0:	mov    esi,0x15b1463b
  408ad5:	cwde   
  408ad6:	imul   ebp,DWORD PTR [edx+ebx*2-0x51],0xffffff82
  408adb:	mov    ah,0xb9
  408add:	add    al,0x91
  408adf:	int3   
  408ae0:	mov    eax,ebp
  408ae2:	scas   eax,DWORD PTR es:[edi]
  408ae3:	clc    
  408ae4:	mov    edi,0xa9982693
  408ae9:	xor    ebx,esp
  408aeb:	fidiv  DWORD PTR [edi]
  408aed:	sbb    eax,0x34c14588
  408af2:	inc    ebp
  408af3:	jecxz  0x408a85
  408af5:	push   edx
  408af6:	pop    ss
  408af7:	and    DWORD PTR [edx],eax
  408af9:	leave  
  408afa:	mov    al,0x3b
  408afc:	mov    ebp,0x361b52fe
  408b01:	mov    bh,0x50
  408b03:	xchg   edi,eax
  408b04:	mov    ah,0x77
  408b06:	call   0x7b87a964
  408b0b:	nop
  408b0c:	rcl    BYTE PTR [ebp-0x20f2ca98],cl
  408b12:	mov    ds,WORD PTR [edx+0x6c903dd9]
  408b18:	fwait
  408b19:	fwait
  408b1a:	inc    esi
  408b1b:	mov    ?,WORD PTR [esi+0xe]
  408b1e:	sub    dl,BYTE PTR [ebp+ebx*2+0x5f9851b]
  408b25:	cmp    edx,ecx
  408b27:	sahf   
  408b28:	add    bl,dh
  408b2a:	mov    ah,0xb5
  408b2c:	(bad)  
  408b2d:	push   edi
  408b2e:	outs   dx,BYTE PTR ds:[esi]
  408b2f:	or     eax,DWORD PTR [eax]
  408b31:	lods   eax,DWORD PTR ds:[esi]
  408b32:	aaa    
  408b33:	bound  esi,QWORD PTR [ecx-0x47]
  408b36:	stos   BYTE PTR es:[edi],al
  408b37:	test   eax,0xdfd29b9e
  408b3c:	scas   eax,DWORD PTR es:[edi]
  408b3d:	sbb    BYTE PTR [esi-0x7af3e084],0xfe
  408b44:	fmul   DWORD PTR [edx-0x27]
  408b47:	or     eax,DWORD PTR [edx+ebp*1-0x41c9770a]
  408b4e:	add    al,0x70
  408b50:	nop
  408b51:	dec    ecx
  408b52:	shr    DWORD PTR [eax+0x18],0x9
  408b56:	push   0x4846940
  408b5b:	jb     0x408bb7
  408b5d:	ins    BYTE PTR es:[edi],dx
  408b5e:	fsubr  DWORD PTR [ecx]
  408b60:	pusha  
  408b61:	push   esi
  408b62:	mov    ch,0x91
  408b64:	and    DWORD PTR [edx+0x5b4a40c5],0x9e09a4f3
  408b6e:	mov    cl,0xdf
  408b70:	push   ss
  408b71:	adc    bh,ch
  408b73:	aas    
  408b74:	mul    DWORD PTR [ebx+0x46d7eae]
  408b7a:	ret    0x79bc
  408b7d:	mov    esi,0x7395da84
  408b82:	jmp    0x408b9b
  408b84:	add    bh,BYTE PTR [ebx+ebp*1+0x70]
  408b88:	xchg   ecx,eax
  408b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b8a:	sbb    cl,BYTE PTR [ebx-0x2b90a0f9]
  408b90:	xchg   edi,eax
  408b91:	inc    eax
  408b92:	mov    ebx,0x8a79f930
  408b97:	pop    eax
  408b98:	cs sbb dh,0x37
  408b9c:	xchg   esp,eax
  408b9d:	int    0xd9
  408b9f:	std    
  408ba0:	in     eax,dx
  408ba1:	dec    eax
  408ba2:	(bad)  
  408ba3:	inc    ebp
  408ba4:	mov    bl,0xf7
  408ba6:	rcl    DWORD PTR [esi-0x6e],1
  408ba9:	imul   edi,DWORD PTR [edi+0x30453de],0x557e5e9c
  408bb3:	icebp  
  408bb4:	cmp    eax,0x989fdf6b
  408bb9:	mov    ds:0xbde4d11b,eax
  408bbe:	cld    
  408bbf:	pop    ebp
  408bc0:	or     edi,DWORD PTR [esi-0x13]
  408bc3:	dec    ecx
  408bc4:	enter  0x66ef,0x52
  408bc8:	stc    
  408bc9:	lea    ebp,[ecx]
  408bcb:	sub    al,0x25
  408bcd:	xchg   DWORD PTR [eax+ebx*8+0x5e64f78d],esp
  408bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bd5:	add    ecx,DWORD PTR [edx+0x2d]
  408bd8:	dec    eax
  408bd9:	or     al,al
  408bdb:	pop    esi
  408bdc:	sahf   
  408bdd:	jecxz  0x408c01
  408bdf:	xchg   edx,eax
  408be0:	hlt    
  408be1:	es mov eax,0xe3187cca
  408be7:	xchg   edi,ecx
  408be9:	retf   0x2c31
  408bec:	loop   0x408c2e
  408bee:	fs sub eax,0xfbe1f1ed
  408bf4:	add    bl,BYTE PTR ds:0x46bba58d
  408bfa:	mov    ds:0xc2dee7d3,eax
  408bff:	inc    edi
  408c00:	repz jae 0x408c14
  408c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c04:	dec    eax
  408c05:	lds    edx,FWORD PTR [edi+0x58]
  408c08:	add    BYTE PTR [edi+0x52],0xd6
  408c0c:	cs cmp al,0x30
  408c0f:	push   edi
  408c10:	ins    BYTE PTR es:[edi],dx
  408c11:	mov    eax,ds:0x1b9b5a7
  408c16:	lahf   
  408c17:	xchg   edi,eax
  408c18:	push   ss
  408c19:	pushf  
  408c1a:	fist   WORD PTR [edx]
  408c1c:	sub    ecx,esp
  408c1e:	mov    ebx,0x75446e47
  408c23:	cdq    
  408c24:	jp     0x408c4c
  408c26:	mov    ebp,0xfdff8642
  408c2b:	int3   
  408c2c:	and    BYTE PTR [ebp+ecx*1-0x47],0x5d
  408c31:	int3   
  408c32:	mov    bh,0x88
  408c34:	(bad)  
  408c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c36:	nop
  408c37:	leave  
  408c38:	mov    ds,WORD PTR [edi]
  408c3a:	sub    ah,al
  408c3c:	dec    ebx
  408c3d:	mov    esp,DWORD PTR [esi]
  408c3f:	push   es
  408c40:	or     dl,BYTE PTR [edi+eax*4+0x64]
  408c44:	mov    ebp,0xbd3ba535
  408c49:	dec    edx
  408c4a:	or     esi,DWORD PTR [ebp-0x16]
  408c4d:	push   ss
  408c4e:	sbb    BYTE PTR [edx-0x47],bh
  408c51:	add    ebx,esi
  408c53:	jmp    DWORD PTR ds:0x1580b2b1
  408c59:	loopne 0x408c65
  408c5b:	pushf  
  408c5c:	xchg   edx,eax
  408c5d:	fstp   QWORD PTR [ecx-0x38]
  408c60:	sub    al,0xb7
  408c62:	push   ebp
  408c63:	dec    edi
  408c64:	inc    ebx
  408c65:	(bad)  
  408c66:	mov    edi,0x557b62a4
  408c6b:	daa    
  408c6c:	pop    edx
  408c6d:	adc    esi,DWORD PTR [ebx]
  408c6f:	sub    dl,BYTE PTR [edx+0x5c585be1]
  408c75:	in     al,0x15
  408c77:	int    0x85
  408c79:	int    0xd9
  408c7b:	xchg   ebp,eax
  408c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c7d:	inc    ebp
  408c7f:	push   eax
  408c80:	bound  edx,QWORD PTR [esi+0x62c9f0ed]
  408c86:	rol    BYTE PTR [edi+0x64],1
  408c89:	sbb    BYTE PTR [edi+0x1b1f2c14],ch
  408c8f:	repz inc ecx
  408c91:	ret    
  408c92:	stos   DWORD PTR es:[edi],eax
  408c93:	pop    ecx
  408c94:	and    DWORD PTR [ecx-0x7f879957],edx
  408c9a:	mov    ecx,0x4c9be65e
  408c9f:	out    dx,al
  408ca0:	adc    DWORD PTR [edx+0x51],edi
  408ca3:	or     eax,0x2dc11d34
  408ca8:	push   eax
  408ca9:	imul   eax,DWORD PTR [edi+0x17],0x2d
  408cad:	sti    
  408cae:	inc    eax
  408caf:	jno    0x408cf7
  408cb1:	sbb    BYTE PTR [eax],bl
  408cb3:	adc    dh,dl
  408cb5:	xor    DWORD PTR [esi+0x19],eax
  408cb8:	pusha  
  408cb9:	push   esi
  408cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cbb:	pop    ebx
  408cbc:	js     0x408c41
  408cbe:	enter  0x9c9,0x22
  408cc2:	pop    ebx
  408cc3:	push   esi
  408cc4:	jns    0x408d39
  408cc6:	mov    ds:0x6a9e9bce,eax
  408ccb:	xchg   edx,eax
  408ccc:	mov    ebp,0xaeccc53d
  408cd1:	mov    bh,0xdb
  408cd3:	xlat   BYTE PTR ds:[ebx]
  408cd4:	mov    ebp,0xb67ac0fc
  408cd9:	ficomp DWORD PTR [ecx-0x31]
  408cdc:	in     eax,dx
  408cdd:	aaa    
  408cde:	push   ecx
  408cdf:	shr    BYTE PTR cs:[esi+0x29],0x25
  408ce4:	int3   
  408ce5:	pop    ecx
  408ce6:	or     al,0x7f
  408ce8:	psubb  mm4,mm1
  408ceb:	jecxz  0x408c92
  408ced:	xchg   ah,ah
  408cef:	icebp  
  408cf0:	mov    ds:0x222dd63d,eax
  408cf5:	jmp    0x2da96642
  408cfa:	mov    ebp,0xb268868
  408cff:	jb     0x408cd6
  408d01:	bound  ecx,QWORD PTR [edi]
  408d03:	aas    
  408d04:	inc    esi
  408d05:	pop    edi
  408d06:	cli    
  408d07:	mov    ds:0x2d58e964,al
  408d0c:	in     eax,0x56
  408d0e:	in     al,dx
  408d0f:	inc    ebx
  408d10:	cld    
  408d11:	push   eax
  408d12:	xor    cl,BYTE PTR [edi+0x5f]
  408d15:	out    0x6f,eax
  408d17:	dec    esi
  408d18:	dec    ah
  408d1a:	jmp    0x408cab
  408d1c:	cdq    
  408d1d:	pop    edi
  408d1e:	jmp    0x408ca8
  408d20:	arpl   WORD PTR [edx+eiz*8+0xa3152a7],si
  408d27:	pop    ds
  408d28:	mov    ah,0x54
  408d2a:	call   0x56db:0x6a253ab
  408d31:	test   bl,dh
  408d33:	inc    ebp
  408d34:	sbb    ch,ch
  408d36:	lods   eax,DWORD PTR ds:[esi]
  408d37:	fwait
  408d38:	sbb    DWORD PTR ss:[eax],esp
  408d3b:	lods   al,BYTE PTR ds:[esi]
  408d3c:	call   0x88d4:0xa732c3fc
  408d43:	xchg   edi,eax
  408d44:	stmxcsr DWORD PTR [edi]
  408d47:	or     eax,0xed5fe98b
  408d4c:	enter  0xbb5e,0x47
  408d50:	jmp    0xb128:0xa8343b03
  408d57:	cmp    ebp,DWORD PTR [ecx-0xe]
  408d5a:	and    ch,BYTE PTR [ecx+0x5359686c]
  408d60:	xchg   ecx,eax
  408d61:	sub    BYTE PTR [esi+0x11],0x3d
  408d65:	jnp    0x408d67
  408d67:	int3   
  408d68:	into   
  408d69:	mov    cl,BYTE PTR [eax+0x4a]
  408d6c:	popa   
  408d6d:	sbb    eax,0xaf8951b4
  408d72:	out    dx,eax
  408d73:	push   ecx
  408d74:	jnp    0x408d41
  408d76:	das    
  408d77:	cmc    
  408d78:	adc    al,0x3f
  408d7a:	mov    DWORD PTR [edi+0x4c94aada],esi
  408d80:	test   al,0xe5
  408d82:	mov    eax,0xb3fc88d9
  408d87:	mov    ds:0xe0cb3527,eax
  408d8c:	jae    0x408da4
  408d8e:	(bad)  
  408d8f:	or     al,0x9f
  408d91:	daa    
  408d92:	popw   ds
  408d94:	jnp    0x408e03
  408d96:	xchg   dl,ah
  408d98:	or     ecx,edi
  408d9a:	into   
  408d9b:	adc    BYTE PTR [ebx+0x1],al
  408d9e:	and    eax,0x415a9d07
  408da3:	lods   eax,DWORD PTR ds:[esi]
  408da4:	inc    ecx
  408da5:	pop    ecx
  408da6:	test   ebx,esi
  408da8:	inc    eax
  408da9:	jecxz  0x408d8f
  408dab:	call   0x404:0xa733c
  408db2:	cmp    edi,edi
  408db4:	mov    bh,0xe2
  408db6:	xor    ebp,DWORD PTR [edi+0x33e3cc7d]
  408dbc:	xor    eax,0xd8d108b4
  408dc1:	jl     0x408e0f
  408dc3:	adc    al,dl
  408dc5:	sbb    eax,0x291861de
  408dca:	ror    ch,0x13
  408dcd:	sbb    al,0xcd
  408dcf:	xchg   esp,eax
  408dd0:	push   0xb3be1725
  408dd5:	xchg   ecx,eax
  408dd6:	scas   eax,DWORD PTR es:[edi]
  408dd7:	(bad)  
  408dd8:	dec    eax
  408dd9:	mov    esi,0xf5c82247
  408dde:	jecxz  0x408df5
  408de0:	das    
  408de1:	enter  0x860d,0x64
  408de5:	mov    ch,0xdf
  408de7:	inc    ebx
  408de8:	sbb    BYTE PTR [ebx-0x48282574],bl
  408dee:	mov    esp,ds
  408df0:	test   al,0x52
  408df2:	or     edx,esi
  408df4:	in     al,dx
  408df5:	mov    ecx,0x7feff2ab
  408dfa:	sub    eax,0xc7443ccb
  408dff:	repz mov ds:0xfedf80b3,al
  408e05:	aad    0x90
  408e07:	sub    DWORD PTR [ecx],edx
  408e09:	push   edx
  408e0a:	(bad)  
  408e0b:	cli    
  408e0c:	scas   al,BYTE PTR es:[edi]
  408e0d:	push   ss
  408e0e:	iret   
  408e0f:	out    0x7,al
  408e11:	add    eax,0x69f58faa
  408e16:	adc    ch,dl
  408e18:	sti    
  408e19:	imul   edi,DWORD PTR ds:0x844b4f66,0xff16bca2
  408e23:	shl    BYTE PTR [edi+0x130aeb81],0xa8
  408e2a:	add    DWORD PTR [edx+0x9],edi
  408e2d:	mov    ecx,0x4ddefaf2
  408e32:	mov    ?,WORD PTR [ebp+0x40]
  408e35:	push   0x5
  408e37:	adc    DWORD PTR [ebp-0x49eb9afe],ecx
  408e3d:	dec    edx
  408e3e:	jns    0x408e69
  408e40:	mov    bh,0xb7
  408e42:	fistp  WORD PTR [esi+ecx*4]
  408e45:	aad    0x26
  408e47:	xor    BYTE PTR [ebx-0x26c41a0a],0x7
  408e4e:	scas   eax,DWORD PTR es:[edi]
  408e4f:	nop
  408e50:	jge    0x408e02
  408e52:	or     bh,BYTE PTR [ecx-0x39]
  408e55:	jl     0x408e85
  408e57:	jmp    0x408e8f
  408e59:	out    0x5b,eax
  408e5b:	push   ds
  408e5c:	inc    esi
  408e5d:	dec    esi
  408e5e:	and    BYTE PTR [edx],0x16
  408e61:	sub    ebp,DWORD PTR [edx+edi*2+0x5205b72d]
  408e68:	dec    ecx
  408e69:	mov    ah,0x9d
  408e6b:	(bad)  
  408e6c:	std    
  408e6d:	gs push ds
  408e6f:	push   cs
  408e70:	fcomp  QWORD PTR [eax+0x222c23ed]
  408e76:	dec    ah
  408e78:	fisubr DWORD PTR [edx]
  408e7a:	cmp    ebx,DWORD PTR [esi]
  408e7c:	mov    al,BYTE PTR gs:[ebx+eiz*1]
  408e80:	dec    ecx
  408e81:	mov    edx,DWORD PTR [edi-0x3d436be6]
  408e87:	lea    esp,[di]
  408e8a:	cmp    al,0x57
  408e8c:	add    eax,0xf58a3be5
  408e91:	lahf   
  408e92:	sub    eax,0xc3c12b17
  408e97:	addr16 out 0x73,eax
  408e9a:	dec    ebx
  408e9b:	adc    BYTE PTR [eax+0x5e],bh
  408e9e:	fstp   QWORD PTR [ebp-0xcdac4b9]
  408ea4:	jno    0x408e8a
  408ea6:	ins    BYTE PTR es:[edi],dx
  408ea7:	loop   0x408f01
  408ea9:	pop    ss
  408eaa:	xchg   ebx,eax
  408eab:	cmp    al,0x2
  408ead:	fsubr  st(1),st
  408eaf:	ret    0x8b26
  408eb2:	addr16 jb 0x408ebb
  408eb5:	je     0x408e8c
  408eb7:	data16 cmp bl,BYTE PTR [ebx+0x7c]
  408ebb:	call   0x518e:0x9b48e632
  408ec2:	imul   esi,edi,0x2b88f8ac
  408ec8:	cli    
  408ec9:	push   es
  408eca:	jl     0x408ef3
  408ecc:	(bad)  
  408ecd:	xchg   ebx,eax
  408ece:	add    ebx,0xf2f6d6aa
  408ed4:	add    BYTE PTR [eax-0x28bade61],cl
  408eda:	fisub  DWORD PTR [esi]
  408edc:	rcl    ah,cl
  408ede:	xchg   edi,eax
  408edf:	sbb    BYTE PTR [esi-0x41],ch
  408ee2:	mov    edx,DWORD PTR [esi]
  408ee4:	(bad)  
  408ee5:	lods   al,BYTE PTR ds:[esi]
  408ee6:	jae    0x408edb
  408ee8:	push   0xc23e79a8
  408eed:	mov    ebp,0x3a7886f1
  408ef2:	pop    esi
  408ef3:	clc    
  408ef4:	(bad)  [ebp+0x3e]
  408ef7:	cmp    eax,0xd842220a
  408efc:	pop    ebx
  408efd:	mov    dh,0x3f
  408eff:	jge    0x408ea0
  408f01:	push   0xf73147d5
  408f06:	and    bl,ah
  408f08:	sar    ah,1
  408f0a:	je     0x408eb7
  408f0c:	stos   BYTE PTR es:[edi],al
  408f0d:	xchg   ecx,eax
  408f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f0f:	mov    eax,ds:0xdb6f37d4
  408f14:	add    edi,DWORD PTR [eax]
  408f16:	sbb    eax,esi
  408f18:	out    0x23,eax
  408f1a:	add    ebx,ecx
  408f1c:	idiv   DWORD PTR [edx]
  408f1e:	cwde   
  408f1f:	ret    
  408f20:	cmp    bh,dh
  408f22:	scas   eax,DWORD PTR es:[edi]
  408f23:	sub    al,0xe4
  408f25:	pop    es
  408f26:	stc    
  408f27:	daa    
  408f28:	xchg   edx,eax
  408f29:	jl     0x408f66
  408f2b:	pusha  
  408f2c:	xchg   esi,eax
  408f2d:	push   es
  408f2e:	test   eax,0xf4ccee51
  408f33:	dec    esp
  408f34:	mov    al,ds:0xdbef7aea
  408f39:	or     DWORD PTR [ecx+0x6cb0083],eax
  408f3f:	inc    edx
  408f40:	dec    ebp
  408f41:	outs   dx,DWORD PTR ds:[esi]
  408f42:	mov    bh,dh
  408f44:	inc    edi
  408f45:	scas   eax,DWORD PTR es:[edi]
  408f46:	fwait
  408f47:	push   esp
  408f48:	and    eax,0x2351b69a
  408f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f4e:	push   cs
  408f4f:	sbb    al,0x6c
  408f52:	mov    ecx,0xd5301
  408f57:	std    
  408f58:	fxch   st(0)
  408f5a:	pop    ds
  408f5b:	lahf   
  408f5c:	mov    al,ds:0x14d891fa
  408f61:	dec    eax
  408f62:	test   al,0x60
  408f64:	sbb    al,0xa0
  408f66:	rcr    cl,0xd6
  408f69:	mov    eax,0xa2c39cd2
  408f6e:	mov    ah,0x8
  408f70:	mov    cl,0xa2
  408f72:	in     al,dx
  408f73:	pop    eax
  408f74:	retf   0x3686
  408f77:	mov    ch,0x2c
  408f79:	ss inc ebp
  408f7b:	mov    edx,0xa55e81c3
  408f80:	xchg   ebx,eax
  408f81:	add    al,0x7d
  408f83:	call   0x7ffa:0x56870a4a
  408f8a:	sbb    DWORD PTR [eax],edx
  408f8c:	add    ch,BYTE PTR [eax+0x12]
  408f8f:	(bad)  
  408f90:	retf   
  408f91:	(bad)  
  408f92:	shl    bh,1
  408f94:	cmp    dh,BYTE PTR [eax+0x7651baf5]
  408f9a:	sahf   
  408f9b:	and    BYTE PTR [ebp+0x2f6e3758],ah
  408fa1:	out    dx,al
  408fa2:	mov    ds:0x10be7528,al
  408fa7:	addr16 hlt 
  408fa9:	sub    DWORD PTR [edx-0x26],0x78fecbf9
  408fb0:	cmc    
  408fb1:	fidivr WORD PTR [ebx+0x45c168a2]
  408fb7:	sbb    bl,BYTE PTR [ecx-0x761ccb55]
  408fbd:	dec    si
  408fbf:	pop    DWORD PTR [ebp-0x38]
  408fc2:	pop    edi
  408fc3:	cmp    BYTE PTR [edi],al
  408fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fc6:	in     eax,0x5d
  408fc8:	aad    0xa7
  408fca:	gs xchg esp,eax
  408fcc:	cmp    esi,DWORD PTR [ebp-0x3a0ebf70]
  408fd2:	push   ebx
  408fd3:	push   ecx
  408fd4:	or     edi,ebp
  408fd6:	rcr    BYTE PTR [ebp+0xd],0x2
  408fda:	outs   dx,DWORD PTR ds:[esi]
  408fdb:	add    al,0x92
  408fdd:	pop    ebx
  408fde:	jne    0x408fcf
  408fe0:	mov    WORD PTR [ebx],cs
  408fe2:	call   0x2e67:0x5c7b879b
  408fe9:	(bad)  
  408fea:	lea    ebx,[esi-0x7434ed23]
  408ff0:	mov    eax,ds:0x21c6a0ed
  408ff5:	out    0x73,al
  408ff7:	(bad)  
  408ff8:	mov    BYTE PTR [edi+0x25],cl
  408ffb:	int    0xd6
  408ffd:	(bad)  
  408fff:	js     0x40904e
  409001:	je     0x409017
  409003:	xor    eax,0x9f83eeba
  409008:	mov    ds:0x397b9e89,eax
  40900d:	scas   eax,DWORD PTR es:[edi]
  40900e:	add    ah,BYTE PTR [ecx+0x254fbe2d]
  409014:	sbb    esp,DWORD PTR [esi+edx*1+0x32382ddc]
  40901b:	mov    bl,bl
  40901d:	ficom  WORD PTR [edi+esi*8-0x3fd661ba]
  409024:	mov    ebp,0x2ca20174
  409029:	lahf   
  40902a:	mov    eax,ds:0xe6f2349a
  40902f:	sbb    DWORD PTR [edi-0x118b2ea5],esi
  409035:	mov    edi,0x8d32e48e
  40903a:	imul   BYTE PTR [edx-0x51]
  40903d:	pop    ebp
  40903e:	push   es
  40903f:	mov    eax,0x35528a22
  409044:	retf   0x6b82
  409047:	xchg   esp,eax
  409048:	inc    esp
  409049:	pushf  
  40904a:	call   0xdba7:0xddf73dc3
  409051:	and    ecx,DWORD PTR ds:0x7aff9655
  409057:	pop    ebp
  409058:	push   ds
  409059:	pop    ds
  40905a:	jg     0x409032
  40905c:	pushf  
  40905d:	push   ebx
  40905e:	push   ebp
  40905f:	les    ebx,FWORD PTR [edi]
  409061:	jbe    0x40904a
  409063:	pushf  
  409064:	retf   0xe521
  409067:	cmc    
  409068:	push   ebx
  409069:	(bad)  
  40906a:	jp     0x40900c
  40906c:	outs   dx,BYTE PTR ds:[esi]
  40906d:	push   0xffffff8e
  40906f:	(bad)  
  409070:	jmp    0xdaa5:0x3e86b0a2
  409077:	(bad)  
  409078:	mov    ah,0xcb
  40907a:	arpl   bx,sp
  40907c:	lods   eax,DWORD PTR ds:[esi]
  40907d:	and    DWORD PTR [esi-0x49],esi
  409080:	icebp  
  409081:	ja     0x409102
  409083:	leave  
  409084:	jle    0x40906c
  409086:	mov    eax,cs
  409088:	in     eax,dx
  409089:	push   ebx
  40908a:	jle    0x4090d2
  40908c:	cmp    esp,0x1a108d51
  409092:	xchg   esp,eax
  409093:	sub    DWORD PTR [edi-0xe],esp
  409096:	imul   ecx,DWORD PTR ds:0x1436c732,0x7bb61b35
  4090a0:	daa    
  4090a1:	push   eax
  4090a2:	in     al,dx
  4090a3:	addr16 push edx
  4090a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090a6:	mov    ?,WORD PTR [eax+0x49]
  4090a9:	sub    ecx,DWORD PTR [eax-0x5c]
  4090ac:	repz dec ebx
  4090ae:	inc    ebx
  4090af:	jo     0x4090f1
  4090b1:	xlat   BYTE PTR ds:[ebx]
  4090b2:	(bad)  
  4090b3:	xor    BYTE PTR [eax],al
  4090b5:	mov    al,0xa5
  4090b7:	add    BYTE PTR [eax],0xf2
  4090ba:	pop    es
  4090bb:	stc    
  4090bc:	adc    BYTE PTR [ebx-0x7b],al
  4090bf:	aam    0x24
  4090c1:	inc    ebp
  4090c2:	mov    edx,0x578ef229
  4090c7:	popa   
  4090c8:	es push edi
  4090ca:	aam    0x92
  4090cc:	xchg   edx,eax
  4090cd:	fucom  st(3)
  4090cf:	stc    
  4090d0:	stos   DWORD PTR es:[edi],eax
  4090d1:	call   0x67b1:0x367bb797
  4090d8:	call   0xa12c:0x700745df
  4090df:	pop    ebp
  4090e0:	call   0x82479412
  4090e5:	mov    edx,0xfa1dda4c
  4090ea:	jns    0x409080
  4090ec:	dec    eax
  4090ed:	mov    ch,0xcb
  4090ef:	adc    BYTE PTR [ebx+ebp*8+0x24381e8f],cl
  4090f6:	out    dx,eax
  4090f7:	mov    dh,0xbf
  4090f9:	pop    ss
  4090fa:	jecxz  0x409135
  4090fc:	mov    ?,WORD PTR [ecx]
  4090fe:	cdq    
  4090ff:	stos   DWORD PTR es:[edi],eax
  409100:	pop    esi
  409101:	int    0x5c
  409103:	out    dx,eax
  409104:	push   ecx
  409105:	sub    BYTE PTR [eax],0x28
  409108:	dec    ecx
  409109:	sti    
  40910a:	cwde   
  40910b:	in     al,0xd5
  40910d:	push   edi
  40910e:	add    al,BYTE PTR [edx+eax*8-0xe718b84]
  409115:	jle    0x409160
  409117:	mov    es,WORD PTR [ebp+0xb953389]
  40911d:	sub    edx,esp
  40911f:	sahf   
  409120:	test   al,0x25
  409122:	xchg   ebp,eax
  409123:	or     BYTE PTR [ebx],cl
  409125:	out    0x54,al
  409127:	in     al,0x87
  409129:	test   al,0x8
  40912b:	ror    DWORD PTR [esi],1
  40912d:	xchg   ecx,eax
  40912e:	xchg   ebp,eax
  40912f:	push   ss
  409130:	mov    ecx,0xafb78de0
  409135:	dec    esi
  409136:	outs   dx,BYTE PTR ds:[esi]
  409137:	xor    dl,BYTE PTR [ebp-0x78]
  40913a:	icebp  
  40913b:	ds jecxz 0x409120
  40913e:	cdq    
  40913f:	jp     0x4090d8
  409141:	jp     0x409136
  409143:	popa   
  409144:	leave  
  409145:	inc    ebp
  409146:	dec    eax
  409147:	xchg   edx,eax
  409148:	or     BYTE PTR [ebp-0x5bd4480],0x1d
  40914f:	dec    ecx
  409150:	lahf   
  409151:	clc    
  409152:	fdiv   QWORD PTR [esi+0x214f0248]
  409158:	rcr    cl,cl
  40915a:	sbb    esp,eax
  40915c:	sti    
  40915d:	shl    DWORD PTR [eax+0x54],0xe1
  409161:	rol    edx,1
  409163:	test   BYTE PTR [eax],0xae
  409166:	push   0xa367f84c
  40916b:	push   ds
  40916c:	(bad)
  40916f:	cs jecxz 0x4091be
  409172:	xor    DWORD PTR [esi],ecx
  409174:	lds    ecx,FWORD PTR [ecx+0x65]
  409177:	stc    
  409178:	sbb    BYTE PTR [ecx-0x2c],0x7a
  40917c:	fst    DWORD PTR [ebp+0x2f64296a]
  409182:	mov    ds:0x7bcc43d8,al
  409187:	jmp    0xd906f4be
  40918c:	icebp  
  40918d:	popa   
  40918e:	test   eax,0x36c2c77d
  409193:	jecxz  0x409116
  409195:	out    0x16,eax
  409197:	xor    eax,0xe390d214
  40919c:	js     0x4091c2
  40919e:	addr16 (bad) 
  4091a0:	fxch   st(5)
  4091a2:	pusha  
  4091a3:	mov    WORD PTR [eax-0x4df96360],es
  4091a9:	jmp    0x409196
  4091ab:	arpl   WORD PTR [ebp-0x57687a2d],di
  4091b1:	xchg   ebp,eax
  4091b2:	dec    ebx
  4091b3:	sbb    BYTE PTR [eax],al
  4091b5:	jge    0x40915a
  4091b7:	xchg   ebx,eax
  4091b8:	dec    esp
  4091b9:	xchg   DWORD PTR [ebx+0x1d],ebp
  4091bc:	adc    al,0xa1
  4091be:	(bad)  
  4091bf:	sbb    al,0x79
  4091c1:	(bad)  
  4091c2:	sbb    edi,esp
  4091c4:	sbb    eax,0xbeac5f64
  4091c9:	pop    es
  4091ca:	repnz loop 0x40923d
  4091cd:	sub    BYTE PTR [edi],dl
  4091cf:	jecxz  0x409240
  4091d1:	ret    
  4091d2:	(bad)  
  4091d3:	xchg   esp,eax
  4091d4:	mov    al,0x3d
  4091d6:	xchg   esi,eax
  4091d7:	ja     0x40917d
  4091d9:	push   edx
  4091da:	mov    WORD PTR [edi+eax*8],ss
  4091dd:	cdq    
  4091de:	out    dx,eax
  4091df:	jecxz  0x4091c7
  4091e1:	les    ebx,FWORD PTR [edi]
  4091e3:	rcr    edx,0x92
  4091e6:	pusha  
  4091e7:	adc    ebx,DWORD PTR [esi]
  4091e9:	scas   eax,DWORD PTR es:[edi]
  4091ea:	xor    bh,BYTE PTR [edi+0x6b]
  4091ed:	mov    cl,0xdc
  4091ef:	loopne 0x409227
  4091f1:	and    al,0xbc
  4091f3:	sbb    DWORD PTR [esi],ecx
  4091f5:	sub    al,0xdf
  4091f7:	outs   dx,BYTE PTR ds:[esi]
  4091f8:	xor    eax,DWORD PTR [edi-0x20287f54]
  4091fe:	out    0xec,eax
  409200:	pop    edi
  409201:	add    ch,bh
  409203:	or     ah,ch
  409205:	pop    es
  409206:	sahf   
  409207:	sbb    eax,0x6353b1d8
  40920c:	(bad)  
  40920d:	mov    ch,0x1e
  40920f:	pop    eax
  409210:	rcr    DWORD PTR [ecx],cl
  409212:	xchg   ebx,eax
  409213:	lahf   
  409214:	fist   WORD PTR ds:0x4e3b9a79
  40921a:	out    dx,al
  40921b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921c:	scas   eax,DWORD PTR es:[edi]
  40921d:	and    al,0x98
  40921f:	int3   
  409220:	cs xor eax,0x2bf15201
  409226:	ja     0x4091f9
  409228:	aad    0x94
  40922a:	push   cs
  40922b:	sti    
  40922c:	ins    BYTE PTR es:[edi],dx
  40922d:	icebp  
  40922e:	imul   esi,esi,0xffffffb2
  409231:	push   esp
  409232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409233:	shl    BYTE PTR [edi],cl
  409235:	add    al,0x15
  409237:	pop    ebx
  409238:	xchg   bh,bh
  40923a:	call   0x7b1f0310
  40923f:	mov    esi,0xafa2650
  409244:	aaa    
  409245:	dec    esi
  409246:	aad    0xe0
  409248:	add    BYTE PTR [ecx+0x749f3de4],ch
  40924e:	and    DWORD PTR [ecx],ebp
  409250:	mov    ebx,0xe738099
  409255:	leave  
  409256:	inc    esi
  409257:	int3   
  409258:	mov    cl,BYTE PTR [ebx]
  40925a:	xor    BYTE PTR [ebx],ah
  40925c:	js     0x409259
  40925e:	ss ins BYTE PTR es:[edi],dx
  409260:	popf   
  409261:	inc    eax
  409262:	popf   
  409263:	push   es
  409264:	pop    edi
  409265:	outs   dx,DWORD PTR ds:[esi]
  409266:	or     edi,edi
  409268:	ss clc 
  40926a:	nop
  40926b:	popa   
  40926c:	outs   dx,BYTE PTR ds:[esi]
  40926d:	or     eax,0x161cc4a2
  409272:	hlt    
  409273:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409275:	inc    esp
  409276:	mov    eax,0x1c747836
  40927b:	and    ch,BYTE PTR [ebx+0x9]
  40927e:	add    edx,DWORD PTR [ecx-0x6d7f27fb]
  409284:	dec    ecx
  409285:	add    al,0xb
  409287:	into   
  409288:	pop    edx
  409289:	pop    ebx
  40928a:	adc    dh,BYTE PTR es:[eax]
  40928d:	or     BYTE PTR [edx-0x43],al
  409290:	retf   0x1964
  409293:	push   0x2f
  409295:	pop    edx
  409296:	mov    ah,BYTE PTR [edi+0x5e]
  409299:	dec    edi
  40929a:	fmul   DWORD PTR [esi-0x61]
  40929d:	adc    al,BYTE PTR [ecx-0x5d]
  4092a0:	cs push esi
  4092a2:	retf   
  4092a3:	bswap  ecx
  4092a5:	mul    BYTE PTR [ebx+0x22]
  4092a8:	xchg   bl,ah
  4092aa:	pop    es
  4092ab:	aad    0x68
  4092ad:	mul    BYTE PTR [esi+0x23]
  4092b0:	jge    0x40925e
  4092b2:	jmp    0xe09d:0xc4ac2025
  4092b9:	mov    BYTE PTR [esi-0x51e40af3],bl
  4092bf:	jge    0x4092e6
  4092c1:	mov    WORD PTR [eax-0x4c],es
  4092c4:	test   ebp,ebp
  4092c6:	sbb    ebp,DWORD PTR [ecx-0x286505dc]
  4092cc:	or     DWORD PTR [ecx+0x36],ecx
  4092cf:	(bad)  
  4092d0:	(bad)  
  4092d1:	aam    0xae
  4092d3:	loopne 0x40932b
  4092d5:	outs   dx,BYTE PTR ds:[esi]
  4092d6:	popf   
  4092d7:	sbb    DWORD PTR [ecx],edx
  4092d9:	push   esi
  4092da:	xor    eax,DWORD PTR [edi-0x6e39bc09]
  4092e0:	inc    edi
  4092e1:	fld    TBYTE PTR [edi]
  4092e3:	pop    ecx
  4092e4:	sar    BYTE PTR [ecx+0x40],cl
  4092e7:	mov    ebx,0x2c828de7
  4092ec:	ds or  al,0xac
  4092ef:	adc    bl,BYTE PTR [ecx+0x47]
  4092f2:	call   ebp
  4092f4:	xor    ch,BYTE PTR [eax-0x7f30e09a]
  4092fa:	cmp    esi,DWORD PTR [ecx]
  4092fc:	pop    ss
  4092fd:	lahf   
  4092fe:	jno    0x4092a9
  409300:	sbb    eax,DWORD PTR [ebx+0x7a]
  409303:	xchg   DWORD PTR [ecx],eax
  409305:	test   DWORD PTR [esi],ebx
  409307:	push   es
  409308:	push   0xd9cf7b64
  40930d:	outs   dx,DWORD PTR ds:[esi]
  40930e:	mov    ebp,DWORD PTR [ecx+edx*1-0x4aa8963c]
  409315:	jge    0x4092d8
  409317:	xor    BYTE PTR [edx],bh
  409319:	or     BYTE PTR [ecx-0x17],bh
  40931c:	cmp    al,0x6d
  40931e:	mov    ch,0x44
  409320:	and    eax,0x73196a0f
  409325:	mov    edi,0x706f907a
  40932a:	xor    ch,BYTE PTR [edi]
  40932c:	add    esi,0x7d26ca25
  409332:	cmp    bh,BYTE PTR [ebp-0x4c]
  409335:	inc    ebp
  409336:	mov    ah,0x9d
  409338:	mov    ecx,0x55e4d1dc
  40933d:	enter  0x411d,0xee
  409341:	add    eax,0xd4d2148f
  409346:	sub    DWORD PTR ds:0x58a0e358,esi
  40934c:	jno    0x4093a2
  40934e:	repnz inc ebx
  409350:	dec    edx
  409351:	cmc    
  409352:	push   esi
  409353:	dec    ecx
  409354:	retf   0xe4a
  409357:	sbb    al,0xf9
  409359:	adc    ecx,DWORD PTR [ebp+0x2f]
  40935c:	xchg   edi,eax
  40935d:	push   0x14a3bb92
  409362:	cld    
  409363:	popf   
  409364:	popf   
  409365:	pop    esi
  409366:	dec    esp
  409367:	ret    0xf294
  40936a:	out    0xfe,eax
  40936c:	jp     0x409344
  40936e:	xor    ebp,DWORD PTR [edx+0x21aac1bf]
  409374:	or     BYTE PTR [ecx],ch
  409376:	xchg   ebx,eax
  409377:	pop    ds
  409378:	test   al,0x33
  40937a:	jg     0x409342
  40937c:	push   eax
  40937d:	mov    ch,0xfc
  40937f:	cwde   
  409380:	test   eax,0x8d10d105
  409385:	push   0xa05eaa45
  40938a:	cmp    eax,0x816ec5bd
  40938f:	jns    0x40933f
  409391:	cmp    eax,0xded9bd74
  409396:	je     0x409327
  409398:	xchg   BYTE PTR [eax],dh
  40939a:	push   esi
  40939b:	out    dx,eax
  40939c:	sbb    ecx,ebp
  40939e:	dec    eax
  40939f:	mov    bh,0x2b
  4093a1:	test   al,0x49
  4093a3:	call   0x7493:0x758fdfb1
  4093aa:	test   al,0x7c
  4093ac:	lock fwait
  4093ae:	sub    ebp,DWORD PTR [esi-0x22e49413]
  4093b4:	popa   
  4093b5:	hlt    
  4093b6:	rol    BYTE PTR [ecx-0x51c74a09],cl
  4093bc:	(bad)  
  4093be:	dec    esp
  4093bf:	paddq  mm3,mm5
  4093c2:	or     ebx,0xffffffd7
  4093c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c6:	push   eax
  4093c7:	and    DWORD PTR [ecx+0x6f79ff74],edx
  4093cd:	sbb    DWORD PTR [eax-0x47],esp
  4093d0:	sbb    BYTE PTR [edi-0x45c69af7],cl
  4093d6:	or     BYTE PTR [ebx-0x7ad8a75f],ch
  4093dc:	and    DWORD PTR [ebp+0x7f],ebx
  4093df:	(bad)  
  4093e0:	test   DWORD PTR [esi],0x2744ace9
  4093e6:	mov    esp,0x6f837036
  4093eb:	addr16 retf 0x2d37
  4093ef:	jmp    0x8f998cc0
  4093f4:	ja     0x409418
  4093f6:	mov    ebx,0x80ec5d6f
  4093fb:	and    edi,eax
  4093fd:	nop
  4093fe:	mov    ch,0x65
  409400:	int    0x63
  409402:	xchg   edx,eax
  409403:	bound  edi,QWORD PTR [ebx-0x47284579]
  409409:	ror    BYTE PTR [edi-0x5e6aea4b],1
  40940f:	lods   al,BYTE PTR ds:[esi]
  409410:	push   ebp
  409411:	xchg   ebx,eax
  409412:	adc    ebp,edi
  409414:	imul   ebp,DWORD PTR [ebp+0x6c20798a],0xffffffb1
  40941b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40941c:	out    dx,al
  40941d:	(bad)  
  40941e:	leave  
  40941f:	add    edx,ebx
  409421:	xchg   esp,eax
  409422:	adc    bl,bl
  409424:	pop    ss
  409425:	(bad)  
  409426:	push   esi
  409427:	mov    ds:0x69d83758,al
  40942c:	adc    cl,BYTE PTR [eax+ebp*1-0x5a]
  409430:	push   edx
  409431:	push   0xf9e423b4
  409436:	ins    BYTE PTR es:[edi],dx
  409437:	cwde   
  409438:	into   
  409439:	inc    edi
  40943a:	adc    eax,0x33719e53
  40943f:	mov    BYTE PTR [eax+0x66802e06],dl
  409445:	xchg   DWORD PTR [ebx+eax*1],esi
  409448:	push   0xa
  40944a:	sub    dh,al
  40944c:	jge    0x4093da
  40944e:	imul   ebx,DWORD PTR [eax],0x3e3a9b4d
  409454:	out    dx,eax
  409455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409456:	pop    esi
  409457:	xchg   esp,eax
  409458:	jecxz  0x4094c3
  40945a:	xlat   BYTE PTR ds:[ebx]
  40945b:	sbb    DWORD PTR [ecx-0x33],ebp
  40945e:	xchg   edi,eax
  40945f:	sub    ebp,DWORD PTR [esi]
  409461:	repnz pop ecx
  409463:	repz loopne 0x40947e
  409466:	lock aas 
  409468:	xchg   esp,eax
  409469:	loope  0x4094c0
  40946b:	jmp    0x23631904
  409470:	add    eax,0xec427cf4
  409475:	pop    ebx
  409476:	jp     0x409488
  409478:	daa    
  409479:	imul   edx,eax,0xfffffff4
  40947c:	xor    al,0x79
  40947e:	adc    al,0xb6
  409480:	mov    esp,ebx
  409482:	xor    ax,0xc0e0
  409486:	mov    esp,0xbd9e8d1b
  40948b:	or     eax,0xe5dfe0b9
  409490:	ss jnp 0x4094b8
  409493:	out    0x7b,eax
  409495:	outs   dx,BYTE PTR ds:[esi]
  409496:	shl    DWORD PTR [esi-0x187cc777],1
  40949c:	push   ebx
  40949d:	inc    ebp
  40949e:	xor    cl,bh
  4094a0:	sub    ebp,DWORD PTR [edi+0x53567fe8]
  4094a6:	repz mov ebp,0x3ab69da7
  4094ac:	jae    0x4094c7
  4094ae:	mov    ebx,0xd228b4a2
  4094b3:	icebp  
  4094b4:	inc    ebx
  4094b5:	cmc    
  4094b6:	(bad)  
  4094b7:	int3   
  4094b8:	jo     0x409465
  4094ba:	adc    DWORD PTR [ecx],ebp
  4094bc:	pop    ds
  4094bd:	cmp    eax,0x28bd64d8
  4094c2:	fisttp QWORD PTR ds:0x839ff673
  4094c8:	call   DWORD PTR [eax+0x77]
  4094cb:	jmp    0x409510
  4094cd:	pop    ss
  4094ce:	or     al,0x1d
  4094d0:	inc    ebx
  4094d1:	jmp    0x4094bc
  4094d3:	(bad)  
  4094d4:	hlt    
  4094d5:	dec    ecx
  4094d6:	mov    gs,WORD PTR [ebx+0x22]
  4094d9:	mov    bh,0xdf
  4094db:	xchg   edx,eax
  4094dc:	ins    BYTE PTR es:[edi],dx
  4094dd:	arpl   WORD PTR [esi+0xbdd7bfc],si
  4094e3:	fsub   DWORD PTR [ebx-0x38d141f7]
  4094e9:	mov    bl,0x11
  4094eb:	pop    ds
  4094ec:	mov    bh,0xb5
  4094ee:	push   edx
  4094ef:	repnz pushfw 
  4094f2:	mov    edx,DWORD PTR [esi+0xbb9fac0]
  4094f8:	pop    ebx
  4094f9:	cs in  al,dx
  4094fb:	pushf  
  4094fc:	and    cl,BYTE PTR [ebx+0x68]
  4094ff:	xchg   ebx,eax
  409500:	xor    eax,0x1cb92a5e
  409505:	pop    ds
  409506:	mov    dl,0x56
  409508:	retf   
  409509:	xor    edx,DWORD PTR [edi]
  40950b:	popa   
  40950c:	push   ebx
  40950d:	cmp    al,0x89
  40950f:	mov    ss,WORD PTR [edx]
  409511:	dec    esp
  409512:	mov    ecx,0x6d26c1f9
  409517:	inc    ebx
  409518:	xor    eax,0x327057d5
  40951d:	xor    al,0xed
  40951f:	icebp  
  409520:	xor    al,BYTE PTR ds:[eax]
  409523:	mov    ecx,0x76ad39fc
  409528:	mov    esp,0x909a1020
  40952d:	adc    al,0xb4
  40952f:	adc    eax,0x2ac35790
  409534:	pop    ss
  409535:	mov    ds:0x1ef35f6c,eax
  40953a:	jecxz  0x409535
  40953c:	jecxz  0x409517
  40953e:	and    eax,DWORD PTR [edi+0x18]
  409541:	lea    esi,[edi]
  409543:	adc    esi,DWORD PTR [eax-0x6c159eee]
  409549:	push   0xf72e12b3
  40954e:	addps  xmm6,XMMWORD PTR [ecx+0x59d54ef5]
  409555:	out    dx,eax
  409556:	cld    
  409557:	push   ds
  409558:	cmp    DWORD PTR [esi+0x2fbc09d9],edi
  40955e:	or     eax,0xa96b2c5f
  409563:	or     edi,DWORD PTR [edi+ebp*1]
  409566:	sub    esi,DWORD PTR ds:0x2a14005d
  40956c:	push   0x4f
  40956e:	or     DWORD PTR [ebx-0x36],0x4c812c9d
  409575:	jmp    0x450c2f35
  40957a:	cli    
  40957b:	mov    edi,0xa313b23c
  409580:	ds inc eax
  409582:	jmp    0x91f:0xc7beafa9
  409589:	mov    DWORD PTR [edx-0x72924088],esp
  40958f:	xchg   ebx,eax
  409590:	push   ebx
  409591:	xchg   esi,eax
  409592:	mov    edi,edx
  409594:	jae    0x4095c5
  409596:	push   ecx
  409597:	sahf   
  409598:	xor    DWORD PTR [ecx+0xcc4ac46],edx
  40959e:	mov    esi,0x2e85ddf6
  4095a3:	retf   0x2abc
  4095a6:	retf   0xf868
  4095a9:	mov    al,0x7c
  4095ab:	or     al,0xe8
  4095ad:	jb     0x409578
  4095af:	sbb    al,0x3c
  4095b1:	sbb    eax,DWORD PTR [edi+0x48aecf8f]
  4095b7:	rcl    DWORD PTR [edi-0x4d48fb18],1
  4095bd:	sub    eax,0xb220fc7a
  4095c2:	add    al,0x8d
  4095c4:	test   al,0x57
  4095c6:	mov    ah,0x8
  4095c8:	outs   dx,BYTE PTR ds:[esi]
  4095c9:	outs   dx,DWORD PTR ds:[esi]
  4095ca:	mov    esp,0x4a0ece21
  4095cf:	mov    al,ds:0xf2125bfe
  4095d4:	fwait
  4095d5:	jo     0x409594
  4095d7:	sti    
  4095d8:	(bad)  
  4095d9:	push   esi
  4095da:	ds pop ss
  4095dc:	pop    ds
  4095dd:	out    dx,al
  4095de:	aad    0x8e
  4095e0:	mov    BYTE PTR [edi-0x13],bl
  4095e3:	adc    eax,0xd4b294f4
  4095e8:	mov    ds:0xcd81c8b7,al
  4095ed:	leave  
  4095ee:	mov    esi,0x9228c0b5
  4095f3:	rcl    DWORD PTR [ebp-0x3827e7ea],0xc1
  4095fa:	popa   
  4095fb:	fcom   DWORD PTR [esi-0x22]
  4095fe:	dec    ebp
  4095ff:	jecxz  0x4095f8
  409601:	pop    ss
  409602:	adc    DWORD PTR [esi],0xffffff92
  409605:	jne    0x40960c
  409607:	push   esp
  409608:	inc    esp
  409609:	(bad)  
  40960a:	and    ah,ah
  40960c:	xor    al,0x8
  40960e:	push   esi
  40960f:	pop    ds
  409610:	xchg   esp,eax
  409611:	mov    ah,0xf5
  409613:	sub    BYTE PTR [ecx+0x1aecd2c7],ch
  409619:	loope  0x4095e6
  40961b:	in     al,0xd0
  40961d:	lods   eax,DWORD PTR ds:[esi]
  40961e:	ficom  WORD PTR [edi-0x68c108a6]
  409625:	or     eax,0x7291daf1
  40962a:	rcr    DWORD PTR [esi+0x4f],cl
  40962d:	cmc    
  40962e:	xchg   esp,eax
  40962f:	stc    
  409630:	nop
  409631:	jnp    0x4095f6
  409633:	stc    
  409634:	inc    eax
  409635:	(bad)  
  409636:	pop    ds
  409637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409638:	mov    al,0x7e
  40963a:	jl     0x4095d8
  40963c:	inc    esp
  40963d:	mov    ecx,0x6caa214a
  409642:	adc    bl,BYTE PTR [edx+0x56]
  409645:	mov    ah,0x62
  409647:	inc    ebx
  409648:	inc    esi
  409649:	add    dl,ah
  40964b:	fwait
  40964c:	sub    DWORD PTR [edx+0x26],ecx
  40964f:	jge    0x40967c
  409651:	sub    al,BYTE PTR [edx+0x1f]
  409654:	popa   
  409655:	and    ch,bl
  409657:	mov    esi,0x23d3a1b5
  40965c:	cmp    al,0xd7
  40965e:	enter  0x377c,0x84
  409662:	mov    ah,0xf5
  409664:	add    ah,BYTE PTR [ecx]
  409666:	mov    DWORD PTR [ecx+0x4443a5f5],ecx
  40966c:	leave  
  40966d:	mov    BYTE PTR [edx+edi*2],ah
  409670:	xchg   ebx,eax
  409671:	lds    edi,FWORD PTR [esi+0xa]
  409674:	push   esi
  409675:	sahf   
  409676:	mov    WORD PTR [ebx],ss
  409678:	scas   eax,DWORD PTR es:[edi]
  409679:	jmp    0x9167:0xfc7e6bc4
  409680:	push   0xd82ffe7b
  409685:	pop    ebx
  409686:	popa   
  409687:	pinsrw mm6,esi,0xb9
  40968b:	push   ecx
  40968c:	aam    0xe
  40968e:	mov    bl,0xec
  409690:	lea    ebx,[edi]
  409692:	test   bh,dh
  409694:	xlat   BYTE PTR ds:[ebx]
  409695:	cmc    
  409696:	jp     0x4096cd
  409698:	pop    ecx
  409699:	cmp    esi,ebp
  40969b:	pop    es
  40969c:	inc    ebp
  40969d:	scas   eax,DWORD PTR es:[edi]
  40969e:	fs jnp 0x40968c
  4096a1:	mov    ds:0xdd3f9daf,al
  4096a6:	xchg   edi,eax
  4096a7:	in     al,0x9f
  4096a9:	fnsave [ebx-0x523e9198]
  4096af:	in     eax,0xad
  4096b1:	sti    
  4096b2:	push   ss
  4096b3:	xchg   DWORD PTR [esi],ebx
  4096b5:	adc    bh,BYTE PTR [esi+0x7]
  4096b8:	ret    
  4096b9:	stos   BYTE PTR es:[edi],al
  4096ba:	jne    0x409706
  4096bc:	xchg   esi,eax
  4096bd:	jp     0x409667
  4096bf:	cdq    
  4096c0:	jnp    0x4096aa
  4096c2:	call   FWORD PTR [ebx+0x75]
  4096c5:	and    ecx,DWORD PTR [esp+ebx*8+0x72]
  4096c9:	loope  0x40964d
  4096cb:	rcr    BYTE PTR [edx+0x2b10b095],1
  4096d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096d2:	(bad)  
  4096d3:	dec    esi
  4096d4:	aaa    
  4096d5:	inc    esi
  4096d6:	or     ebx,DWORD PTR [esi-0x32a4cf02]
  4096dc:	adc    eax,0x744dd1df
  4096e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096e2:	sub    al,0xf1
  4096e4:	inc    BYTE PTR [eax+0x34237e73]
  4096ea:	test   DWORD PTR [esi],0xf1a1e403
  4096f0:	cwde   
  4096f1:	push   edi
  4096f2:	popa   
  4096f3:	aas    
  4096f4:	out    0xc8,eax
  4096f6:	jnp    0x4096d6
  4096f8:	scas   al,BYTE PTR es:[edi]
  4096f9:	clc    
  4096fa:	aaa    
  4096fb:	imul   eax,DWORD PTR [ecx+0x33],0xffffffb4
  4096ff:	repnz hlt 
  409701:	mov    BYTE PTR [eax+0x4e],bh
  409704:	inc    ebx
  409705:	std    
  409706:	jecxz  0x409749
  409708:	sub    BYTE PTR [edi],bh
  40970a:	shl    bl,0xfe
  40970d:	dec    esi
  40970e:	jge    0x4096c2
  409710:	call   0xfc5ee996
  409715:	mov    ebp,0x4d742f0b
  40971a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40971b:	push   cs
  40971c:	xchg   edi,eax
  40971d:	addr16 in eax,0x58
  409720:	pop    eax
  409721:	sbb    al,0x7b
  409723:	not    ah
  409725:	mov    ebx,0x5d62b6a3
  40972a:	sub    ecx,DWORD PTR [edx+0x2517df2]
  409730:	jp     0x409716
  409732:	aad    0x4d
  409734:	and    esi,eax
  409736:	jl     0x409713
  409738:	fld    TBYTE PTR [esp+eax*2]
  40973b:	sbb    al,0xc0
  40973d:	(bad)
  409740:	mov    DWORD PTR [edx],esp
  409742:	int    0x2b
  409744:	(bad)
  409747:	jo     0x4096d4
  409749:	test   DWORD PTR [eax+0x3e8a11e8],ebp
  40974f:	sub    BYTE PTR [esi+0x4c0f8c27],bh
  409755:	jo     0x4097a5
  409757:	repz inc edx
  409759:	or     DWORD PTR [eax],0x73097516
  40975f:	clc    
  409760:	ss lahf 
  409762:	xchg   ebx,eax
  409763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409764:	iret   
  409765:	mov    al,ds:0xfd559fba
  40976a:	inc    edi
  40976b:	push   0x12
  40976d:	push   ebp
  40976e:	adc    ch,BYTE PTR [ecx+0x19]
  409771:	ss pop ss
  409773:	pop    ebp
  409774:	cmp    esi,DWORD PTR [ecx+0x4c]
  409777:	or     BYTE PTR fs:[ecx-0x38],al
  40977b:	add    dl,dl
  40977d:	mov    edi,0x11cc4f59
  409782:	bndldx (bad),[edi-0x25]
  409786:	xchg   esi,eax
  409787:	lahf   
  409788:	sub    BYTE PTR [ebp-0x67],cl
  40978b:	jae    0x409719
  40978d:	jo     0x409751
  40978f:	or     bh,BYTE PTR [ebp-0x4f8bfe03]
  409795:	fwait
  409796:	into   
  409797:	nop
  409798:	push   eax
  409799:	pop    ebx
  40979a:	pop    edi
  40979b:	mov    edi,0xaee34349
  4097a0:	dec    edi
  4097a1:	int3   
  4097a2:	xor    al,0x9c
  4097a4:	pop    ebp
  4097a5:	pop    edx
  4097a6:	inc    ecx
  4097a7:	cwde   
  4097a8:	(bad)  
  4097aa:	fsub   st,st(6)
  4097ac:	loope  0x409771
  4097ae:	dec    ebp
  4097af:	jnp    0x4097a2
  4097b1:	adc    dl,BYTE PTR [esi]
  4097b3:	rol    BYTE PTR [esi],0xf1
  4097b6:	mov    ebx,0x927a22c6
  4097bb:	and    esp,esp
  4097bd:	mov    ebp,0x301a58bc
  4097c2:	mov    edx,0x957b329
  4097c7:	xchg   BYTE PTR [ebp-0x7],bh
  4097ca:	sub    BYTE PTR [esi+ecx*2],0x1f
  4097ce:	pop    ebp
  4097cf:	loope  0x4097a7
  4097d1:	enter  0x88f9,0x52
  4097d5:	push   0x6b
  4097d7:	fld    DWORD PTR [eax+0x472945c1]
  4097dd:	pushf  
  4097de:	jb     0x409824
  4097e0:	arpl   WORD PTR [ebp-0xb],sp
  4097e3:	sub    dh,BYTE PTR [esi-0x1]
  4097e6:	xor    ch,al
  4097e8:	(bad)  
  4097e9:	std    
  4097ea:	inc    ebx
  4097eb:	add    dh,ch
  4097ed:	leave  
  4097ee:	cmp    al,0xc
  4097f0:	outs   dx,DWORD PTR ds:[esi]
  4097f1:	in     al,dx
  4097f2:	dec    esi
  4097f3:	cmc    
  4097f4:	dec    esp
  4097f5:	push   ds
  4097f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f7:	neg    BYTE PTR es:[ebx+0x3367a3f8]
  4097fe:	jnp    0x40983f
  409800:	push   ss
  409801:	push   esp
  409802:	ret    0xbd2e
  409805:	jo     0x409811
  409807:	mov    bh,0x89
  409809:	enter  0xcb9,0x6d
  40980d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40980e:	(bad)  
  40980f:	jb     0x4097bb
  409811:	cmp    al,0x6d
  409813:	push   esi
  409814:	lea    edx,[ebx-0x3c6e0846]
  40981a:	and    ch,bh
  40981c:	mov    dh,0x32
  40981e:	ficomp WORD PTR [ecx]
  409820:	mov    edi,0x77a37853
  409825:	ds gs (bad) 
  409828:	stc    
  409829:	jno    0x409832
  40982b:	push   ecx
  40982c:	mov    BYTE PTR [ecx+ebp*8-0x33],ch
  409830:	jp     0x409801
  409832:	das    
  409833:	(bad)  
  409834:	jmp    0x4097cc
  409836:	(bad)  
  409837:	mov    dx,0x5321
  40983b:	or     ebp,ecx
  40983d:	hlt    
  40983e:	fstp   TBYTE PTR [edi-0x4]
  409841:	xchg   DWORD PTR [ebp-0x45],esp
  409844:	fistp  DWORD PTR [eax-0x3f8295b7]
  40984a:	or     ecx,edx
  40984c:	mov    dl,0x66
  40984e:	mov    ecx,0x3c41869e
  409853:	xor    eax,0xd78369e0
  409858:	pop    esp
  409859:	push   edi
  40985a:	mov    ecx,0xe0c7b914
  40985f:	dec    eax
  409860:	mov    ebx,0x14c65c9e
  409865:	in     al,dx
  409866:	pop    esp
  409867:	mul    edx
  409869:	in     al,0x7
  40986b:	and    DWORD PTR [ecx],esp
  40986d:	add    eax,0xfbec0b52
  409872:	fist   WORD PTR [esi-0x2a]
  409875:	mov    ds:0xa00b05ec,al
  40987a:	pop    ss
  40987b:	cmp    ecx,DWORD PTR [ebx-0x3]
  40987e:	shr    dh,cl
  409880:	or     DWORD PTR [edi+0x3a],0xb32c8f0d
  409887:	into   
  409888:	dec    ecx
  409889:	jle    0x409823
  40988b:	add    al,0x6
  40988d:	out    dx,al
  40988e:	aad    0xa0
  409890:	sbb    eax,0xc6f75d10
  409895:	or     ah,ch
  409897:	cli    
  409898:	das    
  409899:	dec    ebx
  40989a:	push   0x668505f2
  40989f:	mov    dl,0xbe
  4098a1:	add    eax,0x4ee33236
  4098a6:	lds    esp,FWORD PTR [ecx-0x51]
  4098a9:	or     BYTE PTR [edx+ecx*1-0x80],ch
  4098ad:	sub    edi,DWORD PTR [esi+0x72]
  4098b0:	sub    BYTE PTR [esi+0x37],dl
  4098b3:	scas   al,BYTE PTR es:[edi]
  4098b4:	retf   0xbd04
  4098b7:	xor    al,0x55
  4098b9:	fistp  WORD PTR [edi]
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	add    eax,0x9d96e03
  4098c1:	jno    0x409892
  4098c3:	or     al,0xdb
  4098c5:	pop    esi
  4098c6:	inc    edi
  4098c7:	cwde   
  4098c8:	aaa    
  4098c9:	fcom   st(5)
  4098cb:	mov    WORD PTR [edx],ss
  4098cd:	pop    ecx
  4098ce:	inc    ebx
  4098cf:	dec    edx
  4098d0:	sub    eax,0x9d42102b
  4098d5:	or     edi,eax
  4098d7:	push   esp
  4098d8:	hlt    
  4098d9:	push   edi
  4098da:	dec    edi
  4098db:	or     DWORD PTR [ebp+0xad5ca87],0xffffffa6
  4098e2:	int3   
  4098e3:	ret    0x8ff3
  4098e6:	daa    
  4098e7:	or     eax,0x9f4cd48a
  4098ec:	mov    BYTE PTR [edi],cl
  4098ee:	dec    ecx
  4098ef:	pop    esp
  4098f0:	jmp    0x409943
  4098f2:	jecxz  0x409967
  4098f4:	fldcw  WORD PTR [ebp+ecx*1+0xe4460f1]
  4098fb:	rcl    DWORD PTR [ebx],1
  4098fd:	in     eax,dx
  4098fe:	dec    ebx
  4098ff:	cmp    BYTE PTR [eax-0x62],dh
  409902:	dec    edi
  409903:	jno    0x409907
  409905:	test   ah,dl
  409907:	mov    eax,ds:0xd6efaf77
  40990c:	xchg   ecx,eax
  40990d:	retf   
  40990e:	inc    edx
  40990f:	mov    esi,0xaf4eee6
  409914:	cmp    DWORD PTR [edx+0x7000990c],esp
  40991a:	sub    eax,0x3a8140ed
  40991f:	adc    al,0xaf
  409921:	mov    dh,0xbf
  409923:	enter  0x4cfe,0xb7
  409927:	pop    edi
  409928:	pop    ebp
  409929:	xchg   esi,eax
  40992a:	ret    
  40992b:	xor    al,0xa4
  40992d:	clc    
  40992e:	das    
  40992f:	fsubr  QWORD PTR [esi-0x4d0c6254]
  409935:	dec    ecx
  409936:	adc    eax,0x550d7e92
  40993b:	ja     0x409977
  40993d:	popf   
  40993e:	push   0x67
  409940:	push   ss
  409941:	dec    edx
  409942:	pop    edx
  409943:	adc    ebp,DWORD PTR [edx-0x7d]
  409946:	adc    al,0x63
  409948:	fmul   DWORD PTR [esp+ebx*4-0x41c2a85d]
  40994f:	add    DWORD PTR [edx+0x79971f75],0xffffffc0
  409956:	sub    DWORD PTR [edi+0x6a],edx
  409959:	mov    dl,0xb2
  40995b:	push   ds
  40995c:	xchg   ebx,ecx
  40995e:	pop    edi
  40995f:	test   al,0x29
  409961:	mov    al,0x12
  409963:	sbb    BYTE PTR [edi+ecx*1],bl
  409966:	shl    bl,0x51
  409969:	cdq    
  40996a:	neg    ah
  40996c:	pop    ss
  40996d:	leave  
  40996e:	jbe    0x409926
  409970:	sahf   
  409971:	xchg   esi,eax
  409972:	dec    esi
  409974:	xor    DWORD PTR [ecx],0xfffffffc
  409977:	popa   
  409978:	xchg   ebp,eax
  409979:	lock fbstp TBYTE PTR [edx]
  40997c:	imul   esp,ebp,0x6a
  40997f:	mov    WORD PTR [edi],es
  409981:	inc    ecx
  409982:	push   ss
  409983:	sbb    BYTE PTR [edi-0x47],bl
  409986:	and    ebp,esp
  409988:	call   0x3ef1588e
  40998d:	rol    BYTE PTR [ebp-0x4],cl
  409990:	imul   DWORD PTR [edx+0x7a32f214]
  409996:	or     al,0x12
  409998:	adc    dh,cl
  40999a:	in     eax,0x68
  40999c:	pop    eax
  40999d:	(bad)  
  40999e:	pushf  
  40999f:	in     al,dx
  4099a0:	adc    BYTE PTR [ebx],dh
  4099a2:	or     ch,dh
  4099a4:	cmp    BYTE PTR cs:[eax-0x7c],bh
  4099a8:	or     al,0x50
  4099aa:	popa   
  4099ab:	ja     0x409a1d
  4099ad:	xchg   ebx,eax
  4099ae:	fistp  DWORD PTR [eax-0x6f]
  4099b1:	into   
  4099b2:	pop    esp
  4099b3:	std    
  4099b4:	or     cl,BYTE PTR [ebp+0x334a6ca]
  4099ba:	sub    edi,eax
  4099bc:	mov    WORD PTR [ebp+0x33],?
  4099bf:	popf   
  4099c0:	jg     0x4099ac
  4099c2:	xlat   BYTE PTR ds:[ebx]
  4099c3:	mov    dl,0xb2
  4099c5:	lods   al,BYTE PTR fs:[esi]
  4099c7:	fnstenv [edi]
  4099c9:	rcr    BYTE PTR [ebx-0x6c],0xbd
  4099cd:	and    BYTE PTR [ebx-0x746d0eae],ch
  4099d3:	(bad)  
  4099d4:	sahf   
  4099d5:	loop   0x409963
  4099d7:	je     0x409a39
  4099d9:	xor    eax,0x6869b461
  4099de:	(bad)  
  4099df:	fsubr  QWORD PTR [ebp+0xa32b1d]
  4099e5:	adc    DWORD PTR [eax+esi*1],esi
  4099e8:	bound  edx,QWORD PTR [eax]
  4099ea:	pusha  
  4099eb:	mov    edx,DWORD PTR [esi+0x17dfa072]
  4099f1:	mov    ecx,0x143918eb
  4099f6:	cs sub eax,0x3c6ed171
  4099fc:	ins    DWORD PTR es:[edi],dx
  4099fd:	or     edi,DWORD PTR [edx-0x5b]
  409a00:	push   esi
  409a01:	or     ebp,DWORD PTR [edx]
  409a03:	popf   
  409a04:	in     al,0x72
  409a06:	mov    DWORD PTR ds:0x3dbdabf4,0x23013770
  409a10:	xchg   esi,eax
  409a11:	xor    BYTE PTR [edx+0x6bd7e697],ah
  409a17:	aam    0xb2
  409a19:	aas    
  409a1a:	gs popa 
  409a1c:	rol    DWORD PTR ds:0xd64a6ec8,cl
  409a22:	scas   al,BYTE PTR es:[edi]
  409a23:	imul   eax,DWORD PTR [eax+0x26],0xffffff99
  409a27:	jae    0x409a44
  409a29:	fisub  DWORD PTR [eax+esi*2-0x6e2058fc]
  409a30:	mov    cs,WORD PTR [esi+0x58c2d9f1]
  409a36:	push   esi
  409a37:	loope  0x409ab8
  409a39:	popa   
  409a3a:	pop    eax
  409a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3c:	dec    ebp
  409a3d:	loop   0x409a5e
  409a3f:	outs   dx,DWORD PTR ds:[esi]
  409a40:	out    dx,al
  409a41:	xor    ch,BYTE PTR [esi+0x36b62728]
  409a47:	sbb    bh,BYTE PTR [esi]
  409a49:	jns    0x409aa3
  409a4b:	cli    
  409a4c:	push   esi
  409a4d:	jb     0x409abf
  409a4f:	lods   eax,DWORD PTR ds:[esi]
  409a50:	bound  esi,QWORD PTR [edx-0x6cda4f4c]
  409a56:	jae    0x409a46
  409a58:	pop    es
  409a59:	(bad)  
  409a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5b:	in     al,dx
  409a5c:	sbb    ebx,DWORD PTR [ebx]
  409a5e:	pop    ss
  409a5f:	dec    eax
  409a60:	cld    
  409a61:	cmp    bl,BYTE PTR [esi+edx*4+0x618939b3]
  409a68:	arpl   WORD PTR [eax-0x34],dx
  409a6b:	push   esi
  409a6c:	clc    
  409a6d:	ror    bl,0x30
  409a70:	fadd   QWORD PTR [edi+0x2]
  409a73:	xor    BYTE PTR [eax],al
  409a75:	pop    esp
  409a76:	push   eax
  409a77:	xor    ch,BYTE PTR [esi]
  409a79:	retf   0x8df8
  409a7c:	pop    ds
  409a7d:	arpl   WORD PTR [esi+0x6668295c],dx
  409a83:	dec    ebp
  409a84:	cmc    
  409a85:	lock push ss
  409a87:	call   0x17a4:0xd6591c81
  409a8e:	enter  0xce82,0xd
  409a92:	hlt    
  409a93:	jnp    0x409a47
  409a95:	shl    dl,cl
  409a97:	adc    eax,0xaeb64122
  409a9c:	stc    
  409a9d:	push   esi
  409a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a9f:	lahf   
  409aa0:	mov    cl,0xef
  409aa2:	es sti 
  409aa4:	shl    DWORD PTR [edx+0x5d],cl
  409aa7:	fidivr WORD PTR [ebx-0x63bf70af]
  409aad:	ins    BYTE PTR es:[edi],dx
  409aae:	in     eax,0xc5
  409ab0:	imul   edx,DWORD PTR [eax],0x812b30ba
  409ab6:	dec    edi
  409ab7:	jecxz  0x409b19
  409ab9:	inc    ecx
  409aba:	(bad)  
  409abb:	retf   0x8ab6
  409abe:	pop    esp
  409abf:	nop
  409ac0:	stc    
  409ac1:	pop    ebp
  409ac2:	stos   BYTE PTR es:[edi],al
  409ac3:	dec    esp
  409ac4:	loope  0x409afe
  409ac6:	dec    edx
  409ac7:	xor    al,0x17
  409ac9:	aam    0x99
  409acb:	shr    DWORD PTR [ebx],0x2d
  409ace:	sbb    al,0x14
  409ad0:	push   ebx
  409ad1:	mov    esp,0x6e9bff26
  409ad6:	jge    0x409a87
  409ad8:	call   0xdded:0x13eba279
  409adf:	scas   al,BYTE PTR es:[edi]
  409ae0:	cli    
  409ae1:	retf   0x237
  409ae4:	scas   eax,DWORD PTR es:[edi]
  409ae5:	in     al,0x5f
  409ae7:	ficom  DWORD PTR [esi-0x1bdbb9d5]
  409aed:	std    
  409aee:	pop    ds
  409aef:	push   esp
  409af0:	jle    0x409ac6
  409af2:	push   0x92d4e644
  409af7:	xor    al,0xab
  409af9:	pop    ecx
  409afa:	push   0x84cb2c01
  409aff:	imul   esp,DWORD PTR [edi-0x7a],0xe4433c6f
  409b06:	push   edi
  409b07:	xchg   al,bl
  409b09:	mov    ecx,0x1fc0ca0d
  409b0e:	cs inc edi
  409b10:	mov    ah,BYTE PTR [ebp+0x13]
  409b13:	jmp    0x409b5a
  409b15:	or     al,0x57
  409b17:	pop    eax
  409b18:	push   eax
  409b19:	jmp    0x409b46
  409b1b:	xor    al,0x40
  409b1d:	mov    ecx,0xde12b53f
  409b22:	push   eax
  409b23:	pop    ebp
  409b24:	push   esi
  409b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b26:	ret    0x48e6
  409b29:	jecxz  0x409b18
  409b2b:	out    dx,al
  409b2c:	cmp    dl,bh
  409b2e:	mov    ss,edx
  409b30:	push   ebx
  409b31:	mov    dl,0xe7
  409b33:	loopne 0x409af8
  409b35:	icebp  
  409b36:	mov    es,WORD PTR [esi]
  409b38:	in     al,0x60
  409b3a:	pop    ss
  409b3b:	xor    ecx,esi
  409b3d:	xor    ch,ah
  409b3f:	fwait
  409b40:	lea    ebp,[ebp-0x7b]
  409b43:	or     ch,BYTE PTR [ecx-0x5b74ee22]
  409b49:	fs inc esp
  409b4b:	adc    cl,BYTE PTR [edi+esi*2+0x4e84a0a0]
  409b52:	(bad)  
  409b53:	mov    ecx,0xd78d7ba
  409b58:	pop    es
  409b59:	retfw  
  409b5b:	push   esi
  409b5c:	int3   
  409b5d:	mov    edx,eax
  409b5f:	retf   
  409b60:	or     al,0x60
  409b62:	mov    DWORD PTR [esi-0x71f4fc5b],ecx
  409b68:	jge    0x409b5a
  409b6a:	dec    ebx
  409b6b:	nop
  409b6c:	imul   DWORD PTR [ecx-0xf4e83bf]
  409b72:	(bad)  
  409b73:	pop    ds
  409b74:	inc    edi
  409b75:	jbe    0x409b11
  409b77:	cwde   
  409b78:	jno    0x409b51
  409b7a:	ret    
  409b7b:	test   al,0xd0
  409b7d:	xor    ch,BYTE PTR [edx+edx*1-0x404974d6]
  409b84:	sub    al,0xd1
  409b86:	xor    DWORD PTR [esi+0x713f05c4],ebp
  409b8c:	mov    al,ds:0xa4fe97a6
  409b91:	out    0x20,al
  409b93:	and    ebx,DWORD PTR [eax]
  409b95:	sub    bh,0x50
  409b98:	sub    al,0xf4
  409b9a:	rcl    cl,0x0
  409b9d:	inc    ecx
  409b9e:	xchg   ecx,eax
  409b9f:	(bad)  
  409ba1:	out    0xae,eax
  409ba3:	mov    ah,0xef
  409ba5:	popf   
  409ba6:	jae    0x409c10
  409ba8:	and    ecx,ebp
  409baa:	jg     0x409bfd
  409bac:	fdivr  QWORD PTR [ecx+0x5f]
  409baf:	pop    eax
  409bb0:	rcl    ch,1
  409bb2:	dec    esi
  409bb3:	aaa    
  409bb4:	mov    al,0x6d
  409bb6:	pop    eax
  409bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb8:	popa   
  409bb9:	jae    0x409c04
  409bbb:	fs jmp 0x409bb2
  409bbe:	test   eax,0x77be5760
  409bc3:	loop   0x409b4d
  409bc5:	adc    esp,DWORD PTR [eax+0x33]
  409bc8:	outs   dx,BYTE PTR ds:[esi]
  409bc9:	push   esi
  409bca:	pop    es
  409bcb:	clc    
  409bcc:	aaa    
  409bcd:	jle    0x409bc7
  409bcf:	daa    
  409bd0:	xchg   esi,esp
  409bd2:	sbb    eax,0x37b54029
  409bd7:	in     eax,0xac
  409bd9:	call   0x81e08656
  409bde:	ss pop ss
  409be0:	out    0x6c,al
  409be2:	std    
  409be3:	(bad)  
  409be5:	xchg   ecx,eax
  409be6:	and    esi,DWORD PTR [eax]
  409be8:	shl    ebp,0x33
  409beb:	adc    bl,BYTE PTR [esi+0x4f]
  409bee:	or     bh,BYTE PTR [ebx*1-0x592fad87]
  409bf5:	fstp   st(1)
  409bf7:	mov    ds:0x2264ba2c,eax
  409bfc:	xchg   esi,eax
  409bfd:	aad    0xe0
  409bff:	test   eax,0xc793fded
  409c04:	out    0x41,eax
  409c06:	mov    BYTE PTR [ebp+0x43],al
  409c09:	int3   
  409c0a:	xor    dl,al
  409c0c:	pop    esi
  409c0d:	adc    dh,ch
  409c0f:	mov    ebx,0xa9e36015
  409c14:	xchg   edx,eax
  409c15:	xchg   DWORD PTR [esi+0x7d550a5c],esi
  409c1b:	imul   ebx,DWORD PTR [esi+0x554eb42d],0xc8bf4929
  409c25:	lods   eax,DWORD PTR ds:[esi]
  409c26:	or     eax,0x4031639a
  409c2b:	push   eax
  409c2c:	mov    esp,0x7738bb28
  409c31:	pop    edi
  409c32:	mov    cl,0xfb
  409c34:	call   0x2db8:0xc619ed63
  409c3b:	inc    edx
  409c3c:	js     0x409bcb
  409c3e:	sbb    DWORD PTR [ecx-0x48f37725],ebx
  409c44:	mov    bh,0x3f
  409c46:	sub    eax,0xa520b689
  409c4b:	loope  0x409cb0
  409c4d:	fldcw  WORD PTR [ecx+ebx*8+0x1f03cf24]
  409c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c55:	inc    edi
  409c56:	aad    0x4c
  409c58:	stc    
  409c59:	int3   
  409c5a:	std    
  409c5b:	(bad)  
  409c5c:	jnp    0x409c70
  409c5e:	pusha  
  409c5f:	add    BYTE PTR [ebp-0x20ed4f52],0x26
  409c66:	cs (bad) 
  409c68:	mov    esi,0xf636387d
  409c6d:	daa    
  409c6e:	ja     0x409c2c
  409c70:	fldcw  WORD PTR [ecx]
  409c72:	mov    eax,0x7cd4041
  409c77:	enter  0x6e90,0x5d
  409c7b:	aam    0xf8
  409c7d:	mov    ebx,0x7c3a3f9e
  409c82:	loopne 0x409cbf
  409c84:	inc    esp
  409c85:	fiadd  WORD PTR [esi+0x28b1e614]
  409c8b:	fsubr  QWORD PTR [ecx-0x3e35eea5]
  409c91:	add    bh,al
  409c93:	gs scas al,BYTE PTR es:[edi]
  409c95:	lods   al,BYTE PTR ds:[esi]
  409c96:	ror    DWORD PTR [ebx-0x36],1
  409c99:	fs gs sahf 
  409c9c:	cmp    eax,0x7aa38014
  409ca1:	test   al,0x4a
  409ca3:	ret    
  409ca4:	sub    DWORD PTR [eax-0x14a91f73],ebp
  409caa:	xchg   esp,eax
  409cab:	push   ecx
  409cac:	xor    eax,0xd878fe13
  409cb1:	repz inc esi
  409cb3:	stos   DWORD PTR es:[edi],eax
  409cb4:	xor    edx,DWORD PTR [ebx+0x70856a4e]
  409cba:	gs xchg esi,eax
  409cbc:	jecxz  0x409cf0
  409cbe:	adc    ebx,esp
  409cc0:	xchg   ebx,eax
  409cc1:	in     al,0xed
  409cc3:	mov    ecx,0xb2e3bbaa
  409cc8:	out    dx,eax
  409cc9:	mov    edx,0xca557b45
  409cce:	pop    ds
  409ccf:	dec    edx
  409cd0:	adc    eax,0x24990c7f
  409cd5:	push   cs
  409cd6:	and    ah,ah
  409cd8:	mov    al,0x6e
  409cda:	sbb    edx,eax
  409cdc:	clc    
  409cdd:	pusha  
  409cde:	ret    
  409cdf:	fwait
  409ce0:	into   
  409ce1:	jnp    0x409c8d
  409ce3:	inc    edi
  409ce4:	(bad)  
  409ce5:	jge    0x409cff
  409ce7:	aaa    
  409ce8:	cmp    eax,0x2a6f012
  409ced:	call   0x6b359d95
  409cf2:	shl    DWORD PTR ss:[bx+si+0x51],cl
  409cf7:	or     ebp,DWORD PTR ds:0xce491f3b
  409cfd:	arpl   ax,cx
  409cff:	sub    esi,DWORD PTR [ebx]
  409d01:	adc    ah,BYTE PTR [eax]
  409d03:	not    cl
  409d05:	mov    ds:0x3ff03d7a,al
  409d0a:	dec    edx
  409d0b:	inc    ecx
  409d0c:	xor    cl,BYTE PTR [edx-0x75]
  409d0f:	cmp    bl,BYTE PTR ds:[ebx+0x52]
  409d13:	adc    ch,BYTE PTR [ebp+0x1f9e365e]
  409d19:	(bad)  
  409d1a:	or     eax,0x4123e129
  409d1f:	repnz pop ds
  409d21:	sbb    ch,BYTE PTR [ebp+ecx*2-0x49]
  409d25:	enter  0xf993,0xde
  409d29:	jp     0x409d7b
  409d2b:	mov    ds:0x11a4a449,eax
  409d30:	mov    edi,0xe736176
  409d35:	push   esi
  409d36:	mov    esp,0x76ff665a
  409d3b:	inc    eax
  409d3c:	mov    edx,0x6a9a2b67
  409d41:	dec    ebx
  409d42:	sub    si,WORD PTR [esi-0x12e10d9a]
  409d49:	addr16 (bad) 
  409d4b:	lods   eax,DWORD PTR ds:[esi]
  409d4c:	and    edi,DWORD PTR [ebp-0x1403f673]
  409d52:	sub    bh,BYTE PTR [edi+0x1f]
  409d55:	push   cs
  409d56:	push   0xffffffbf
  409d58:	push   ds
  409d59:	add    BYTE PTR [ebx+0x47],ah
  409d5c:	or     bl,BYTE PTR [ebx+0x29]
  409d5f:	in     al,dx
  409d60:	sar    ch,cl
  409d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d63:	dec    edi
  409d64:	inc    ebx
  409d65:	jl     0x409d8e
  409d67:	popa   
  409d68:	push   edx
  409d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6a:	shl    esi,1
  409d6c:	jbe    0x409dd3
  409d6e:	stc    
  409d6f:	outs   dx,BYTE PTR ds:[esi]
  409d70:	push   esi
  409d71:	dec    eax
  409d72:	sbb    ebx,ebx
  409d74:	adc    eax,0x706532b2
  409d79:	cmc    
  409d7a:	pop    eax
  409d7b:	(bad)  
  409d7c:	pop    ss
  409d7d:	mov    ebp,DWORD PTR [eax]
  409d7f:	popf   
  409d80:	or     al,0x32
  409d82:	mov    dl,0xaf
  409d84:	xor    DWORD PTR [edx+edi*8],edx
  409d87:	clc    
  409d88:	retf   0x71c
  409d8b:	or     eax,0x6825a1b9
  409d90:	pop    edx
  409d91:	out    0x38,al
  409d93:	jl     0x409dde
  409d95:	mov    ds:0x493f4134,al
  409d9a:	xor    al,0xd1
  409d9c:	out    0xaf,eax
  409d9e:	cdq    
  409d9f:	cs inc ebp
  409da1:	pop    ecx
  409da2:	retf   0x572e
  409da5:	sub    eax,0x6c07b273
  409daa:	xchg   DWORD PTR [ebx],ebx
  409dac:	push   esp
  409dad:	cs loopne 0x409dcf
  409db0:	leave  
  409db1:	div    DWORD PTR [ecx-0x33]
  409db4:	daa    
  409db5:	mov    esi,DWORD PTR [edx-0x2e360ed5]
  409dbb:	jp     0x409db7
  409dbd:	sub    ah,bh
  409dbf:	iret   
  409dc0:	cdq    
  409dc1:	jnp    0x409dfe
  409dc3:	in     eax,0xb7
  409dc5:	adc    al,0x2a
  409dc7:	pop    esp
  409dc8:	cwde   
  409dc9:	inc    edi
  409dca:	test   dh,dh
  409dcc:	(bad)  
  409dcd:	out    0x6d,eax
  409dcf:	repz mov al,ds:0x368e1173
  409dd5:	call   0x4124e3dd
  409dda:	icebp  
  409ddb:	mov    edx,0xfd4754c
  409de0:	cmp    ebp,DWORD PTR ds:0xceca7f4b
  409de6:	pop    esp
  409de7:	fdiv   st,st(7)
  409de9:	jmp    0x2fcac13a
  409dee:	int    0xff
  409df0:	dec    esi
  409df1:	cdq    
  409df2:	mov    ecx,0xd7181268
  409df7:	sbb    edx,DWORD PTR [ebx-0x7a82508]
  409dfd:	repnz imul eax,edi,0x43695b65
  409e04:	inc    ebx
  409e06:	xchg   BYTE PTR [ecx-0x6af0323c],bl
  409e0c:	mov    edi,0x5f140c8
  409e11:	repnz sbb eax,0x36b97d7b
  409e17:	inc    ebx
  409e18:	jbe    0x409daf
  409e1a:	pop    es
  409e1b:	pop    esi
  409e1c:	mov    BYTE PTR [eax],dl
  409e1e:	xchg   ebx,eax
  409e1f:	push   esp
  409e20:	or     ebp,0x7904480d
  409e26:	test   ah,al
  409e28:	or     BYTE PTR [ecx+0x46],al
  409e2b:	add    DWORD PTR [ebx],0x4e73f973
  409e31:	sbb    ah,BYTE PTR [edi+0x5e]
  409e34:	push   edx
  409e35:	dec    ebx
  409e36:	and    al,0x6
  409e38:	stos   BYTE PTR es:[edi],al
  409e39:	ss (bad) 
  409e3b:	(bad)  
  409e3d:	adc    BYTE PTR [esi+0x406f9f5c],al
  409e43:	mov    ebp,0xeedaffbd
  409e48:	xor    eax,0x829e7ffa
  409e4d:	call   0xeb68:0xf01ef0ca
  409e54:	repz je 0x409e89
  409e57:	pop    esp
  409e58:	and    dl,ah
  409e5a:	push   ds
  409e5b:	jge    0x409e01
  409e5d:	cld    
  409e5e:	jnp    0x409e3b
  409e60:	mov    eax,ds:0x1d98d27b
  409e65:	mov    eax,0x5a5c5043
  409e6a:	xchg   ebx,eax
  409e6b:	mov    edx,0x149158f
  409e70:	imul   eax,DWORD PTR [edx]
  409e73:	mov    edx,DWORD PTR [ebp-0x4]
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x1ca83f7d],bl
  40a717:	call   0x7a7a:0x46de7f4
  40a71e:	out    0x5f,al
  40a720:	jp     0x40a79c
  40a722:	in     al,0x17
  40a724:	pop    ebp
  40a725:	retf   
  40a726:	stc    
  40a727:	mov    ch,0x5f
  40a729:	ss pop eax
  40a72b:	scas   al,BYTE PTR es:[edi]
  40a72c:	sahf   
  40a72d:	adc    al,ch
  40a72f:	mov    edi,0x8ae168e5
  40a734:	aad    0xb9
  40a736:	mov    al,BYTE PTR [ebx-0x51]
  40a739:	xor    al,0x3a
  40a73b:	mov    al,0x27
  40a73d:	imul   ecx,DWORD PTR [edx+0x4],0xffffff8b
  40a741:	adc    BYTE PTR [ebx+0x49],al
  40a744:	inc    eax
  40a745:	fnstsw WORD PTR [eax+0x1a3e789d]
  40a74b:	push   ds
  40a74c:	xchg   edx,eax
  40a74d:	cmp    al,0x18
  40a74f:	sti    
  40a750:	adc    ch,bh
  40a752:	pop    esi
  40a753:	mov    ds:0x66b177ba,eax
  40a758:	cmp    ah,dl
  40a75a:	test   al,0x36
  40a75c:	mov    ch,0x4b
  40a75e:	or     ch,bl
  40a760:	gs aaa 
  40a762:	jbe    0x40a6e6
  40a764:	inc    eax
  40a765:	inc    ebx
  40a766:	jo     0x40a7d0
  40a768:	sub    DWORD PTR [ebx],edi
  40a76a:	cmp    ch,al
  40a76c:	out    dx,eax
  40a76d:	inc    ebx
  40a76e:	xorps  xmm2,XMMWORD PTR [ebp+0x3935f3ac]
  40a775:	jg     0x40a739
  40a777:	scas   eax,DWORD PTR es:[edi]
  40a778:	stos   DWORD PTR es:[edi],eax
  40a779:	add    al,0x8
  40a77b:	add    BYTE PTR [ebx],cl
  40a77d:	and    eax,0xcdc3bb4b
  40a782:	ja     0x40a7e7
  40a784:	pop    ss
  40a785:	fidivr WORD PTR [eax]
  40a787:	ds mov bl,ch
  40a78a:	lea    ebp,[edx]
  40a78c:	and    BYTE PTR ds:0x8b685245,0x58
  40a793:	neg    BYTE PTR [ecx]
  40a795:	shl    BYTE PTR [esi+0x32ee1302],1
  40a79b:	ret    
  40a79c:	in     al,dx
  40a79d:	adc    DWORD PTR [ecx-0xadc88cc],eax
  40a7a3:	fisub  WORD PTR [ebx+0x5f]
  40a7a6:	mov    fs,eax
  40a7a8:	mov    WORD PTR [ecx],ds
  40a7aa:	fcomp  DWORD PTR [eax+0x24]
  40a7ad:	cs or  esp,0xfffffff0
  40a7b1:	jnp    0x40a776
  40a7b3:	adc    bl,BYTE PTR [ebx-0x46dd2db4]
  40a7b9:	out    dx,eax
  40a7ba:	jp     0x40a760
  40a7bc:	cmc    
  40a7bd:	inc    ecx
  40a7be:	sahf   
  40a7bf:	push   ebx
  40a7c0:	push   0xc2e29255
  40a7c5:	(bad)  
  40a7c6:	in     eax,0xef
  40a7c8:	dec    ebx
  40a7c9:	(bad)  
  40a7ca:	out    dx,al
  40a7cb:	mov    ecx,DWORD PTR [edx+esi*1]
  40a7ce:	pop    ds
  40a7cf:	push   edx
  40a7d0:	(bad)  
  40a7d2:	mov    dl,0xea
  40a7d4:	cmc    
  40a7d5:	xchg   DWORD PTR [ebp+0x7a6cec75],esi
  40a7db:	or     edx,edx
  40a7dd:	lods   al,BYTE PTR ds:[esi]
  40a7de:	jg     0x40a7f1
  40a7e0:	dec    edx
  40a7e1:	stos   BYTE PTR es:[edi],al
  40a7e2:	pop    es
  40a7e3:	mov    esi,0xbdbdf11d
  40a7e8:	sub    esp,esp
  40a7ea:	fstp   DWORD PTR [ebp+0x75]
  40a7ed:	imul   edx,DWORD PTR [ecx+0x4d],0x7a
  40a7f1:	loop   0x40a7ba
  40a7f3:	mov    ds:0x9233e4cf,eax
  40a7f8:	and    BYTE PTR [esi+0x60f26e45],cl
  40a7fe:	xor    eax,0x44c9243e
  40a803:	xor    BYTE PTR [ebp+0x519c9096],0xac
  40a80a:	mov    BYTE PTR cs:[esi-0x63c8d8e2],cl
  40a811:	sbb    BYTE PTR [eax+ecx*1],dh
  40a814:	jns    0x40a7c6
  40a816:	(bad)  
  40a817:	sbb    DWORD PTR [esi-0x18],esi
  40a81a:	(bad)  
  40a81b:	imul   ecx,DWORD PTR [ebx-0x34],0x20
  40a81f:	rol    ecx,0x1
  40a822:	popa   
  40a823:	pop    ebp
  40a824:	cmp    BYTE PTR [eax],ch
  40a826:	shl    BYTE PTR [eax+0x35],0x9e
  40a82a:	(bad)  
  40a82b:	sti    
  40a82c:	lahf   
  40a82d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a82f:	jge    0x40a8a4
  40a831:	test   BYTE PTR ds:0xf2c81bce,bh
  40a837:	mov    edi,0x4f61de62
  40a83c:	fild   QWORD PTR [ebx]
  40a83e:	loopne 0x40a7f4
  40a840:	popf   
  40a841:	imul   esp,ecx,0x89bfd734
  40a847:	ret    
  40a848:	js     0x40a7f7
  40a84a:	cld    
  40a84b:	ja     0x40a805
  40a84d:	stc    
  40a84e:	xchg   esp,eax
  40a84f:	pop    ecx
  40a850:	fadd   st(1),st
  40a852:	popa   
  40a853:	(bad)  
  40a854:	call   0xc5b7023c
  40a859:	adc    dh,BYTE PTR [eax]
  40a85b:	ins    DWORD PTR es:[edi],dx
  40a85c:	rol    BYTE PTR [edx-0x50],0xf4
  40a860:	mov    BYTE PTR fs:0x7079656,ch
  40a867:	loope  0x40a8bf
  40a869:	leave  
  40a86a:	inc    ebx
  40a86b:	loopne 0x40a8b8
  40a86d:	and    eax,0x7bb59c2
  40a872:	push   ebp
  40a873:	repnz cli 
  40a875:	lds    edx,FWORD PTR [eax]
  40a877:	das    
  40a878:	pop    ebx
  40a879:	repz leave 
  40a87b:	adc    BYTE PTR [esi-0x6a1163c4],ah
  40a881:	adc    al,0x22
  40a883:	pop    ecx
  40a884:	adc    BYTE PTR [eax+0x41],al
  40a887:	sub    al,0x36
  40a889:	(bad)  
  40a88a:	sbb    al,0x57
  40a88c:	lds    esp,FWORD PTR ds:0xb0779764
  40a892:	xchg   ecx,eax
  40a893:	xchg   esp,eax
  40a894:	sub    ecx,0x2bd74a63
  40a89a:	sub    al,0xb6
  40a89c:	mov    al,ds:0xc178cbd6
  40a8a1:	sub    DWORD PTR [eax],esi
  40a8a3:	cmp    bl,BYTE PTR [ebx+0xb8a17a1]
  40a8a9:	cdq    
  40a8aa:	pop    esp
  40a8ab:	inc    edx
  40a8ac:	and    ebx,edi
  40a8ae:	ja     0x40a916
  40a8b0:	lea    edi,[esi-0x4e]
  40a8b3:	dec    ecx
  40a8b4:	mov    ebx,0x1ec19f71
  40a8b9:	pushw  es
  40a8bb:	aam    0x56
  40a8bd:	dec    edi
  40a8be:	sub    DWORD PTR [esi],esi
  40a8c0:	mov    eax,ds:0x7fc0c8ae
  40a8c5:	jg     0x40a915
  40a8c7:	or     BYTE PTR [edi+0x3f4bda88],al
  40a8cd:	into   
  40a8ce:	leave  
  40a8cf:	inc    edx
  40a8d0:	or     eax,DWORD PTR [esi+0x41df609a]
  40a8d6:	loope  0x40a875
  40a8d8:	or     DWORD PTR [eax+esi*1],edx
  40a8db:	js     0x40a8dc
  40a8dd:	out    dx,eax
  40a8de:	mov    ch,0x69
  40a8e0:	push   ecx
  40a8e1:	add    ah,BYTE PTR [ecx]
  40a8e3:	xor    bh,ah
  40a8e5:	inc    esp
  40a8e6:	call   0x4551:0xac6758d
  40a8ed:	adc    eax,0xe6755bc
  40a8f2:	jmp    0x40a888
  40a8f4:	jmp    0x40a8c4
  40a8f6:	repz dec eax
  40a8f8:	ja     0x40a8f6
  40a8fa:	xchg   DWORD PTR [ecx+0x5cd3e241],ecx
  40a900:	push   ds
  40a901:	or     BYTE PTR [ecx+0x481202bf],0xf4
  40a908:	pusha  
  40a909:	mov    al,cs:0x9a03be1d
  40a90f:	mov    cl,0xff
  40a911:	rcl    DWORD PTR [edi],1
  40a913:	and    al,0x20
  40a915:	(bad)  
  40a916:	shl    ecx,cl
  40a918:	lea    edi,[eax+esi*8+0xbb5455f]
  40a91f:	xchg   DWORD PTR [edi+eiz*8],esi
  40a922:	or     ch,BYTE PTR [edx+0xd]
  40a925:	xchg   ebx,eax
  40a926:	ins    DWORD PTR es:[edi],dx
  40a927:	sub    eax,0x1a2d43d0
  40a92c:	dec    esi
  40a92d:	int    0x8e
  40a92f:	and    al,0x5d
  40a931:	sub    BYTE PTR [eax+0x55835f57],ch
  40a937:	test   al,0x7d
  40a939:	mov    ebx,ebx
  40a93b:	std    
  40a93c:	push   0x2a
  40a93e:	out    dx,eax
  40a93f:	or     ecx,eax
  40a941:	sbb    eax,0x1dad3f64
  40a946:	shr    BYTE PTR [esi-0x2b],cl
  40a949:	adc    ebp,DWORD PTR [ebx]
  40a94b:	data16 test al,0x40
  40a94e:	enter  0x88a1,0x3f
  40a952:	sar    cl,1
  40a954:	cdq    
  40a955:	mov    edi,0x7809a38f
  40a95a:	sub    BYTE PTR [ecx-0x38],al
  40a95d:	push   eax
  40a95e:	xchg   edi,eax
  40a95f:	ret    
  40a960:	test   al,0x59
  40a962:	das    
  40a963:	or     al,0xed
  40a965:	leave  
  40a966:	ficomp WORD PTR [eax]
  40a968:	shl    DWORD PTR [ebx-0x33],0x3f
  40a96c:	push   edi
  40a96d:	nop
  40a96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96f:	mov    ecx,0x8e5a27ce
  40a974:	push   esp
  40a975:	js     0x40a97d
  40a977:	sub    esp,DWORD PTR [edx]
  40a979:	shl    BYTE PTR [edx+0x29c7be6d],0x9
  40a980:	sbb    eax,0xe2f43b58
  40a985:	cmp    DWORD PTR [esi],edx
  40a987:	lahf   
  40a988:	in     eax,0x6
  40a98a:	or     BYTE PTR [ecx+esi*4+0x785b2e61],dl
  40a991:	out    dx,eax
  40a992:	cmp    DWORD PTR [edi+0x7ddaa4e6],0xffffffa3
  40a999:	add    BYTE PTR [edx+eiz*1-0x7f],dh
  40a99d:	cs pop ecx
  40a99f:	cli    
  40a9a0:	push   ds
  40a9a1:	lds    edx,FWORD PTR ds:0x65f54bbf
  40a9a7:	sbb    eax,0x552ec1fb
  40a9ac:	call   0xcdc1:0x9c9af34b
  40a9b3:	scas   eax,DWORD PTR es:[edi]
  40a9b4:	dec    ebp
  40a9b5:	loop   0x40aa00
  40a9b7:	loopne 0x40aa31
  40a9b9:	adc    al,0xc9
  40a9bb:	mov    ecx,0x7a4a20a4
  40a9c0:	xor    DWORD PTR [ecx+edi*2],eax
  40a9c3:	inc    ebx
  40a9c4:	aad    0xd
  40a9c6:	push   ebx
  40a9c7:	push   ecx
  40a9c8:	xchg   edi,eax
  40a9c9:	sar    BYTE PTR [eax-0x7],1
  40a9cc:	shr    ch,1
  40a9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9cf:	ss pusha 
  40a9d1:	jb     0x40aa28
  40a9d3:	jns    0x40a9e2
  40a9d5:	cld    
  40a9d6:	adc    BYTE PTR [edx-0x7c],bh
  40a9d9:	outs   dx,BYTE PTR ds:[esi]
  40a9da:	ins    DWORD PTR es:[edi],dx
  40a9db:	cmp    DWORD PTR [edx+0x6ac8671e],0xc53f028d
  40a9e5:	int    0x71
  40a9e7:	mov    cl,0x91
  40a9e9:	das    
  40a9ea:	jmp    0x40a9d3
  40a9ec:	or     eax,0xb611f603
  40a9f1:	fild   QWORD PTR [eax+esi*1]
  40a9f4:	pop    edi
  40a9f5:	mov    edi,0x848128b4
  40a9fa:	jnp    0x40aa31
  40a9fc:	push   0xf681bdd4
  40aa01:	ror    DWORD PTR [eax+0x4a],cl
  40aa04:	fild   QWORD PTR [ebp-0x11]
  40aa07:	cmc    
  40aa08:	xor    al,BYTE PTR [ecx-0x34]
  40aa0b:	pop    ds
  40aa0c:	cmp    ch,bl
  40aa0e:	dec    esi
  40aa0f:	inc    edx
  40aa10:	loopne 0x40a9af
  40aa12:	loope  0x40a9f7
  40aa14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa15:	dec    esp
  40aa16:	data16 sub al,dl
  40aa19:	mov    ebx,0x91e93ee0
  40aa1e:	dec    esp
  40aa1f:	jecxz  0x40a9c1
  40aa21:	psllw  mm2,QWORD PTR [esi]
  40aa24:	imul   ebp,DWORD PTR ds:0x76788744,0xf05d6969
  40aa2e:	xchg   esi,eax
  40aa2f:	mov    ch,BYTE PTR [edi+0x3d17d095]
  40aa35:	icebp  
  40aa36:	clc    
  40aa37:	pop    es
  40aa38:	dec    ebp
  40aa39:	xchg   BYTE PTR [esi-0x588bd31a],cl
  40aa3f:	jae    0x40aa0d
  40aa41:	pop    es
  40aa42:	mov    dl,0x54
  40aa44:	cs popf 
  40aa46:	ja     0x40a9d4
  40aa48:	xor    edx,ebp
  40aa4a:	repnz daa 
  40aa4c:	or     esp,eax
  40aa4e:	or     BYTE PTR [ebp+edx*4+0x7c4bcd32],0x97
  40aa56:	sti    
  40aa57:	into   
  40aa58:	add    BYTE PTR ds:0xb36f9f7b,ch
  40aa5e:	pop    esi
  40aa5f:	sbb    al,0xe
  40aa61:	dec    ebx
  40aa62:	jecxz  0x40aa6b
  40aa64:	cmp    edx,edx
  40aa66:	cvtps2pi mm3,QWORD PTR [ecx-0x69abb3fc]
  40aa6d:	dec    edx
  40aa6e:	xor    dl,BYTE PTR [edi+0x6f]
  40aa71:	mov    esp,ebp
  40aa73:	or     ecx,DWORD PTR ds:0xda0170af
  40aa79:	fldln2 
  40aa7b:	and    ecx,ecx
  40aa7d:	dec    edx
  40aa7e:	icebp  
  40aa7f:	int3   
  40aa80:	outs   dx,BYTE PTR ds:[esi]
  40aa81:	and    esi,DWORD PTR [esi]
  40aa83:	xchg   ecx,eax
  40aa84:	vpslld ymm0,ymm4,XMMWORD PTR [edx]
  40aa88:	sbb    ah,bh
  40aa8a:	imul   eax,DWORD PTR [edx+0x6c],0x2bd85ad2
  40aa91:	test   DWORD PTR [esi-0x75],ebp
  40aa94:	mov    ah,0xd0
  40aa96:	or     al,0x6d
  40aa98:	dec    ebx
  40aa99:	xor    dl,BYTE PTR [ebx]
  40aa9b:	shr    BYTE PTR [edx-0x38],cl
  40aa9e:	cmp    eax,0x1c9ba449
  40aaa3:	popf   
  40aaa4:	jl     0x40aadc
  40aaa6:	jmp    0x4d34b1c4
  40aaab:	shl    DWORD PTR [ecx+0x504052de],0x5c
  40aab2:	inc    ebp
  40aab3:	pop    edx
  40aab4:	push   DWORD PTR [ebp+0x3a]
  40aab7:	mov    eax,0xf9660c86
  40aabc:	xchg   ebx,eax
  40aabd:	or     al,BYTE PTR [edx+0x6c714c16]
  40aac3:	or     al,ah
  40aac5:	outs   dx,DWORD PTR ds:[esi]
  40aac6:	popf   
  40aac7:	out    0x8b,eax
  40aac9:	cmp    al,0x4
  40aacb:	cmp    BYTE PTR [eax-0x6843da3a],ah
  40aad1:	jno    0x40ab0d
  40aad3:	(bad)  
  40aad4:	fimul  WORD PTR [esi+eiz*1-0xc75ccf2]
  40aadb:	out    0x8d,eax
  40aadd:	pushf  
  40aade:	in     al,0xc4
  40aae0:	push   es
  40aae1:	and    bh,cl
  40aae3:	dec    edx
  40aae4:	xchg   ebx,edi
  40aae6:	inc    al
  40aae8:	mov    ds,WORD PTR [ecx]
  40aaea:	std    
  40aaeb:	sub    eax,0x7f20bad4
  40aaf0:	in     al,dx
  40aaf1:	lea    ebx,[ebx+0x2a6fa363]
  40aaf7:	push   eax
  40aaf8:	cmp    eax,0x1a1ba504
  40aafd:	sub    al,0xcc
  40aaff:	fisub  DWORD PTR [bx+di-0x25cb]
  40ab04:	shl    DWORD PTR [eax-0x1870f81f],cl
  40ab0a:	(bad)  
  40ab0d:	push   edx
  40ab0e:	pushf  
  40ab0f:	in     eax,0x25
  40ab11:	ret    
  40ab12:	pop    eax
  40ab13:	add    al,0xe6
  40ab15:	idiv   ah
  40ab17:	(bad)  
  40ab18:	mov    eax,0x9a276758
  40ab1d:	mov    ebx,eax
  40ab1f:	dec    ebx
  40ab20:	add    BYTE PTR [esi-0x68b52fa5],0x2d
  40ab27:	scas   eax,DWORD PTR es:[edi]
  40ab28:	jl     0x40ab64
  40ab2a:	ror    BYTE PTR [edi+ecx*8-0x7860118a],1
  40ab31:	inc    ebx
  40ab32:	sub    edi,DWORD PTR [esi]
  40ab34:	(bad)  
  40ab35:	mov    eax,0x85eb4cb1
  40ab3a:	pop    eax
  40ab3b:	adc    BYTE PTR [ebp+0x43],dh
  40ab3e:	imul   eax,DWORD PTR [ebx],0x29
  40ab41:	pop    ebp
  40ab42:	call   FWORD PTR [edi+eax*2-0x7de4aba2]
  40ab49:	mov    WORD PTR [edx-0x4],ds
  40ab4c:	rcl    BYTE PTR [edx+edi*4],0x4b
  40ab50:	cli    
  40ab51:	repnz add ch,BYTE PTR [esi]
  40ab54:	shl    BYTE PTR [ebp-0x3c],cl
  40ab57:	jl     0x40abc6
  40ab59:	adc    BYTE PTR [ecx+0x6],bh
  40ab5c:	xor    eax,0x3291c121
  40ab61:	pop    esp
  40ab62:	or     ecx,eax
  40ab64:	sbb    BYTE PTR [edx+0x40743f20],dh
  40ab6a:	and    ah,dl
  40ab6c:	enter  0x2315,0xab
  40ab70:	and    cl,al
  40ab72:	pop    ebx
  40ab73:	out    0xac,al
  40ab75:	pop    ecx
  40ab76:	lds    ecx,FWORD PTR [esi+0x65]
  40ab79:	mov    ch,0x9c
  40ab7b:	or     eax,ebx
  40ab7d:	cwde   
  40ab7e:	cli    
  40ab7f:	cmp    al,0xda
  40ab81:	mov    BYTE PTR [edx],dl
  40ab83:	pop    ebx
  40ab84:	data16 sub al,0xe2
  40ab87:	ret    0x5b88
  40ab8a:	xchg   edi,eax
  40ab8b:	iret   
  40ab8c:	cmp    BYTE PTR [ebp+0x39ef66e9],al
  40ab92:	je     0x40ab34
  40ab94:	ins    BYTE PTR es:[edi],dx
  40ab95:	xchg   edi,eax
  40ab96:	push   esp
  40ab97:	jmp    0xe8ab:0x3c55a160
  40ab9e:	and    edx,ecx
  40aba0:	xchg   ebx,eax
  40aba1:	dec    esp
  40aba2:	sbb    BYTE PTR [eax],dl
  40aba4:	xor    al,0x2
  40aba6:	in     al,dx
  40aba7:	jae    0x40abbf
  40aba9:	ret    0x2e3c
  40abac:	pop    ebp
  40abad:	ss push cs
  40abaf:	push   es
  40abb0:	push   esi
  40abb1:	or     al,0xda
  40abb3:	jle    0x40abb3
  40abb5:	pushf  
  40abb6:	sahf   
  40abb7:	sti    
  40abb8:	imul   esp,DWORD PTR [edx+0x14095a1a],0x34
  40abbf:	mov    ?,WORD PTR [esp+eiz*8+0x5ad357aa]
  40abc6:	(bad)  
  40abc7:	mov    ecx,0xd4c99942
  40abcc:	imul   ebx,eax,0xffffff86
  40abcf:	out    0x65,al
  40abd1:	xchg   ebx,eax
  40abd2:	mov    edx,0x8ed21907
  40abd7:	jg     0x40abec
  40abd9:	dec    eax
  40abda:	mov    ebp,0x5ce5be61
  40abdf:	out    0xe4,eax
  40abe1:	xchg   esp,eax
  40abe2:	mov    DWORD PTR [ebx-0x9e56376],edx
  40abe8:	repz push ecx
  40abea:	aaa    
  40abeb:	jnp    0x40ac20
  40abed:	leave  
  40abee:	test   al,0xd
  40abf1:	clc    
  40abf2:	frstor [esi]
  40abf4:	jmp    0x7b85b728
  40abf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abfa:	outs   dx,BYTE PTR ds:[esi]
  40abfb:	jno    0x40ac76
  40abfd:	pop    ss
  40abfe:	adc    eax,0x907ef18
  40ac03:	dec    esp
  40ac04:	arpl   si,sp
  40ac06:	inc    edi
  40ac07:	jbe    0x40ac05
  40ac09:	imul   esp,DWORD PTR [edx+0x24056d52],0x19
  40ac10:	mov    WORD PTR [edi],ds
  40ac12:	xor    al,0xe1
  40ac14:	pop    esi
  40ac15:	ins    BYTE PTR es:[edi],dx
  40ac16:	jbe    0x40ac82
  40ac18:	and    BYTE PTR [esi-0x4e],dl
  40ac1b:	and    eax,0x6689a3b8
  40ac20:	sbb    eax,DWORD PTR [edi+0x36]
  40ac23:	mov    dh,0x9b
  40ac25:	and    dl,BYTE PTR [edi+0x39b14522]
  40ac2b:	test   al,0x8b
  40ac2d:	pusha  
  40ac2e:	add    al,bl
  40ac30:	outs   dx,DWORD PTR ds:[esi]
  40ac31:	mov    WORD PTR [esi],cs
  40ac33:	adc    dl,0x9e
  40ac36:	push   ss
  40ac37:	fwait
  40ac38:	jle    0x40abec
  40ac3a:	sub    esi,edi
  40ac3c:	ins    DWORD PTR es:[edi],dx
  40ac3d:	call   0x896fd03d
  40ac42:	inc    ecx
  40ac43:	xchg   esp,eax
  40ac44:	inc    ecx
  40ac45:	adc    eax,0x2146f0da
  40ac4a:	add    al,0x9b
  40ac4c:	push   ds
  40ac4d:	jmp    0x40aca7
  40ac4f:	sub    edx,DWORD PTR [ecx]
  40ac51:	adc    eax,DWORD PTR [ebp+0x5a]
  40ac54:	vpsraw ymm5,ymm4,XMMWORD PTR [esi]
  40ac58:	int    0x79
  40ac5a:	or     eax,0xf0ac456
  40ac5f:	fs pushf 
  40ac61:	pop    ebp
  40ac62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac63:	repz std 
  40ac65:	pop    ss
  40ac66:	jns    0x40ac80
  40ac68:	lods   al,BYTE PTR ds:[esi]
  40ac69:	jle    0x40ac8a
  40ac6b:	fwait
  40ac6c:	ds pop edi
  40ac6e:	sti    
  40ac6f:	jno    0x40acab
  40ac71:	sub    ebx,DWORD PTR [ebx+0x5ab8dd64]
  40ac77:	sbb    eax,0xb5206d2c
  40ac7c:	add    edx,ebx
  40ac7e:	cmp    al,0x4e
  40ac80:	aam    0xef
  40ac82:	mov    ds:0x893b05c7,al
  40ac87:	pop    edx
  40ac88:	pusha  
  40ac89:	sbb    bh,dl
  40ac8b:	push   esi
  40ac8c:	pop    ebp
  40ac8d:	dec    DWORD PTR [edx-0x5ffcfeaa]
  40ac93:	shr    ah,1
  40ac95:	sub    al,0x67
  40ac97:	xchg   edx,eax
  40ac98:	mov    ds:0xb507f1da,al
  40ac9d:	sbb    BYTE PTR [ecx-0x1c3f880e],0x44
  40aca4:	sbb    eax,0x3d44b451
  40aca9:	(bad)  
  40acaa:	cmp    al,0x25
  40acac:	pop    ebp
  40acad:	js     0x40acc9
  40acaf:	xchg   BYTE PTR [ebp+0x50595b02],dh
  40acb5:	call   ebx
  40acb7:	fs jle 0x40ad28
  40acba:	lods   eax,DWORD PTR ds:[esi]
  40acbb:	hlt    
  40acbc:	xor    DWORD PTR [ebx],ebp
  40acbe:	stos   BYTE PTR es:[edi],al
  40acbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc0:	mov    DWORD PTR [ebp-0x79],edi
  40acc3:	lods   eax,DWORD PTR ds:[esi]
  40acc4:	xlat   BYTE PTR ds:[ebx]
  40acc5:	pop    edi
  40acc6:	sbb    ah,dh
  40acc8:	xchg   ebp,eax
  40acc9:	daa    
  40acca:	push   edx
  40accb:	cld    
  40accc:	in     eax,dx
  40accd:	push   cs
  40acce:	lea    ecx,[ecx+0x36]
  40acd1:	lods   eax,DWORD PTR ds:[esi]
  40acd2:	lea    ecx,[eax+0x40]
  40acd5:	mov    ax,0xb45
  40acd9:	jnp    0x40ac99
  40acdb:	sbb    eax,0x791ff054
  40ace0:	test   DWORD PTR [edx],ecx
  40ace2:	and    DWORD PTR [ebp+0x56],ebx
  40ace5:	push   eax
  40ace6:	std    
  40ace7:	and    DWORD PTR [edi-0x7a],esi
  40acea:	mov    edx,0xac67e6e9
  40acef:	add    esi,DWORD PTR [eax-0x5f]
  40acf2:	inc    eax
  40acf3:	setge  BYTE PTR [edx-0x4a7251b5]
  40acfa:	sub    ebx,DWORD PTR [edi+0x39]
  40acfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acfe:	pop    edx
  40acff:	jecxz  0x40aca0
  40ad01:	and    DWORD PTR [edi+ecx*4-0x2dcb93e],esi
  40ad08:	push   ebp
  40ad09:	fbstp  TBYTE PTR [eax+0x538e36b5]
  40ad0f:	iret   
  40ad10:	mov    edx,0x5b845480
  40ad15:	pusha  
  40ad16:	les    ecx,FWORD PTR [ecx+0x1e084bd]
  40ad1c:	scas   eax,DWORD PTR es:[edi]
  40ad1d:	push   edi
  40ad1e:	or     DWORD PTR ds:0x9910a5a9,esi
  40ad24:	(bad)  
  40ad26:	mov    bl,0xd9
  40ad28:	adc    al,0x3c
  40ad2a:	jae    0x40aceb
  40ad2c:	ss jns 0x40ad36
  40ad2f:	inc    edi
  40ad30:	frstor [ecx]
  40ad32:	dec    ebp
  40ad33:	or     BYTE PTR [ebx-0x6a5ad12a],dl
  40ad39:	mov    eax,ds:0xdab3cb69
  40ad3e:	mov    ss,WORD PTR [eax+eiz*2+0x3d]
  40ad42:	pop    ebx
  40ad43:	fstp   TBYTE PTR [esi+0x6304b69e]
  40ad49:	mov    ebx,0xa26da89
  40ad4e:	imul   edx,DWORD PTR [eax+ecx*2],0xffffffdc
  40ad52:	mov    esp,0x4ce8d013
  40ad57:	stos   BYTE PTR es:[edi],al
  40ad58:	jle    0x40adcc
  40ad5a:	cmc    
  40ad5b:	imul   ebx,ebp,0x489bac3e
  40ad61:	mov    ds:0x8d119b2e,al
  40ad66:	xor    ecx,DWORD PTR [edi-0x77]
  40ad69:	jbe    0x40ad6d
  40ad6b:	push   edx
  40ad6c:	cmp    ebx,eax
  40ad6e:	fisttp QWORD PTR [eax+0x67]
  40ad71:	jl     0x40ade1
  40ad73:	gs call 0xe9c396ad
  40ad79:	call   0xfa52:0x121f0f1b
  40ad80:	and    BYTE PTR [ebp+0xf],al
  40ad83:	in     al,dx
  40ad84:	adc    eax,0x8915178
  40ad89:	pop    ds
  40ad8a:	loope  0x40ada9
  40ad8c:	loop   0x40ad49
  40ad8e:	pop    es
  40ad8f:	into   
  40ad90:	sbb    DWORD PTR [ebx-0x51c14d63],ebp
  40ad96:	pop    esi
  40ad97:	jno    0x40ae10
  40ad99:	push   ecx
  40ad9a:	adc    eax,esp
  40ad9c:	popa   
  40ad9d:	jno    0x40ad67
  40ad9f:	sbb    DWORD PTR [ebp-0x5fd2e8e9],0x29
  40ada6:	adc    esp,DWORD PTR [ecx-0x73]
  40ada9:	push   esp
  40adaa:	pop    esi
  40adab:	cmp    eax,0xfeb5abf3
  40adb0:	dec    ebx
  40adb1:	ds daa 
  40adb3:	pop    es
  40adb4:	jmp    0xc443:0xed31529f
  40adbb:	push   0xffffffe4
  40adbd:	mov    ebx,DWORD PTR [eax-0x47]
  40adc0:	adc    DWORD PTR [ebx-0x10],edi
  40adc3:	inc    ebx
  40adc4:	cli    
  40adc5:	xchg   ecx,eax
  40adc6:	inc    ecx
  40adc7:	adc    al,0xd8
  40adc9:	repz test eax,0xb12ada69
  40adcf:	inc    ecx
  40add0:	pop    ecx
  40add1:	repnz repz (bad) 
  40add4:	repnz pop ecx
  40add6:	cmp    bh,BYTE PTR [esi-0x72962bb1]
  40addc:	cmp    al,0x8e
  40adde:	addr16 mov ah,dl
  40ade1:	repnz das 
  40ade3:	lds    edi,FWORD PTR [edi+0x72]
  40ade6:	xchg   ecx,eax
  40ade7:	aam    0x37
  40ade9:	pop    esp
  40adea:	add    eax,0x71546ed6
  40adef:	out    0xd2,eax
  40adf1:	repz test BYTE PTR [ecx+0x44],dh
  40adf5:	dec    edx
  40adf6:	mov    ebp,0xf7e496ef
  40adfb:	pop    ss
  40adfc:	ud1    esi,DWORD PTR [edi]
  40adff:	jbe    0x40ae5b
  40ae01:	or     DWORD PTR [eax],esi
  40ae03:	scas   al,BYTE PTR es:[edi]
  40ae04:	rcr    BYTE PTR [edx+0x850fcd],cl
  40ae0a:	mov    ds:0x1a6c6aab,al
  40ae0f:	fild   WORD PTR [ebp+0x75]
  40ae12:	inc    edx
  40ae13:	cwde   
  40ae14:	sub    BYTE PTR [edx-0x30],0xb9
  40ae18:	pop    ebp
  40ae19:	adc    BYTE PTR [ebp+0xaddc813],ch
  40ae1f:	cli    
  40ae20:	scas   eax,DWORD PTR es:[edi]
  40ae21:	imul   edi,DWORD PTR [edx-0x57],0xffffff8b
  40ae25:	mov    edi,0x443975b8
  40ae2a:	pop    esp
  40ae2b:	cs int3 
  40ae2d:	xchg   esi,eax
  40ae2e:	mov    ebx,0xbd280ea5
  40ae33:	aaa    
  40ae34:	adc    al,bl
  40ae36:	jae    0x40ae91
  40ae38:	ds mov bl,0xd7
  40ae3b:	test   al,0x47
  40ae3d:	and    DWORD PTR [eax],0xffffffc3
  40ae40:	add    al,0x4e
  40ae42:	xchg   esi,eax
  40ae43:	call   0xc06dbe5e
  40ae48:	ror    BYTE PTR [ebp+ebp*2+0x1fecab51],0x5c
  40ae50:	mov    ebx,0x59d2b55d
  40ae55:	outs   dx,DWORD PTR ds:[esi]
  40ae56:	popa   
  40ae57:	mov    bl,0x20
  40ae59:	pop    eax
  40ae5a:	ds loope 0x40aeb0
  40ae5d:	ins    BYTE PTR es:[edi],dx
  40ae5e:	arpl   sp,sp
  40ae60:	ret    
  40ae61:	xor    cl,BYTE PTR [ebx-0x13ee61a3]
  40ae67:	dec    ebx
  40ae68:	inc    ebx
  40ae69:	push   es
  40ae6a:	daa    
  40ae6b:	xor    BYTE PTR [ebx-0x5fb6f26d],0x44
  40ae72:	cmc    
  40ae73:	mov    ebx,0x495b4722
  40ae78:	icebp  
  40ae79:	(bad)  
  40ae7b:	int3   
  40ae7c:	inc    esi
  40ae7d:	loopne 0x40aeec
  40ae7f:	cmp    al,0x16
  40ae81:	pop    edi
  40ae82:	push   edx
  40ae83:	pop    edi
  40ae84:	sbb    ecx,DWORD PTR [esi-0x6e]
  40ae87:	or     DWORD PTR [ebx-0x7f],esi
  40ae8a:	mov    ecx,0xc12f1678
  40ae8f:	and    eax,0xdf68fb05
  40ae94:	or     ebp,DWORD PTR [ecx+ebx*1]
  40ae97:	idiv   BYTE PTR [ecx+0x58275639]
  40ae9d:	addr16 cld 
  40ae9f:	stos   DWORD PTR es:[edi],eax
  40aea0:	fsubp  st(1),st
  40aea2:	xchg   edi,ebp
  40aea4:	and    BYTE PTR [ebx-0x47],ah
  40aea7:	xor    al,0xf9
  40aea9:	add    al,0x8a
  40aeab:	(bad)  
  40aeac:	retf   0x3f01
  40aeaf:	jge    0x40aee6
  40aeb1:	(bad)  
  40aeb3:	xor    al,0x76
  40aeb5:	adc    BYTE PTR [esi+edi*4],0xef
  40aeb9:	enter  0xf4d4,0x45
  40aebd:	or     edx,DWORD PTR [edx-0x3f1f443]
  40aec3:	mov    esp,0x4cb26ca3
  40aec8:	fst    DWORD PTR [eiz*8-0x61076708]
  40aecf:	pop    ebx
  40aed0:	mov    dh,BYTE PTR [eax+0x5a12b388]
  40aed6:	sbb    DWORD PTR [esi],ecx
  40aed8:	mov    edx,0x45210d35
  40aedd:	adc    edi,esp
  40aedf:	mov    esi,0xe269dfa5
  40aee4:	cmp    cx,WORD PTR [ebp-0x7f]
  40aee8:	mov    ds:0x67bbf8bb,al
  40aeed:	cdq    
  40aeee:	dec    edi
  40aeef:	mov    eax,ds:0x95a5eae5
  40aef4:	mov    eax,0xefdc5209
  40aef9:	xor    esp,edi
  40aefb:	loop   0x40ae85
  40aefd:	cdq    
  40aefe:	add    eax,0xc21c9a9
  40af03:	scas   al,BYTE PTR es:[edi]
  40af04:	mov    bl,0x27
  40af06:	dec    edx
  40af07:	or     edx,DWORD PTR [ecx+0x29ef17ef]
  40af0d:	jle    0x40aee6
  40af0f:	or     ebp,DWORD PTR [ebx-0x60247205]
  40af15:	jp     0x40aee5
  40af17:	or     DWORD PTR [esi+0x38],edi
  40af1a:	cmp    eax,0x10b80f52
  40af1f:	ficom  WORD PTR [esi-0x4a]
  40af22:	mov    dh,0x2a
  40af24:	sbb    BYTE PTR [eax+0xb],cl
  40af27:	test   al,0x82
  40af29:	jecxz  0x40aed3
  40af2b:	jne    0x40af28
  40af2d:	jp     0x40aebe
  40af2f:	fadd   DWORD PTR ds:0xdbe5d1d0
  40af35:	pop    ds
  40af36:	sub    al,0xc0
  40af38:	inc    ebp
  40af39:	xlat   BYTE PTR ds:[ebx]
  40af3a:	sar    DWORD PTR [ebp+0x6b7a8fe6],1
  40af40:	repnz ins BYTE PTR es:[edi],dx
  40af42:	imul   ebx,DWORD PTR [ebx+0x4b07b40b],0x67
  40af49:	dec    eax
  40af4a:	inc    esi
  40af4b:	call   0x15e3:0xa80de52e
  40af52:	imul   ebp,DWORD PTR [edx+esi*1-0x75],0xef02d0bf
  40af5a:	xchg   edx,eax
  40af5b:	int    0x8e
  40af5d:	jne    0x40af66
  40af5f:	mov    esp,0xbd06da6e
  40af64:	or     bh,BYTE PTR [ecx]
  40af66:	sub    al,0xc1
  40af68:	repnz and DWORD PTR ds:0x876b9b4f,eax
  40af6f:	(bad)  
  40af70:	adc    al,0xc0
  40af72:	inc    esi
  40af73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af74:	and    dh,BYTE PTR [eax+0x5a]
  40af77:	pop    esp
  40af78:	popf   
  40af79:	into   
  40af7a:	mov    eax,ds:0x14dfec09
  40af7f:	push   es
  40af80:	jge    0x40afd7
  40af82:	pop    ss
  40af83:	and    ebp,ecx
  40af85:	fld    TBYTE PTR [ecx+0x40]
  40af88:	jmp    0x40afd7
  40af8a:	lahf   
  40af8b:	stc    
  40af8c:	(bad)  [ecx]
  40af8f:	fld    DWORD PTR [eax-0x49]
  40af92:	pusha  
  40af93:	sub    BYTE PTR [ebx],ch
  40af95:	inc    esp
  40af96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af97:	push   esi
  40af98:	fldenv [esi-0x4db7ee9a]
  40af9e:	in     al,dx
  40af9f:	cdq    
  40afa0:	lahf   
  40afa1:	sub    eax,0x11af0427
  40afa6:	push   DWORD PTR [ebp+esi*1+0x24f52dae]
  40afad:	push   edx
  40afae:	xor    eax,0x240e7f1b
  40afb3:	cmc    
  40afb4:	pop    ebx
  40afb5:	mov    BYTE PTR [edx+0x16fa596],bh
  40afbb:	add    eax,0x708635e9
  40afc0:	xchg   BYTE PTR [ebx],al
  40afc2:	out    dx,al
  40afc3:	enter  0xddd1,0xdd
  40afc7:	sahf   
  40afc8:	sbb    BYTE PTR [esi-0x3d932c7c],0xd5
  40afcf:	sbb    edi,DWORD PTR [esi-0xe]
  40afd2:	enter  0x2042,0x9d
  40afd6:	sqrtps xmm3,XMMWORD PTR [esi]
  40afd9:	mov    ebp,0x6541c49d
  40afde:	repz gs jo 0x40af82
  40afe2:	mov    ebp,DWORD PTR [esi+0x2b]
  40afe5:	add    edx,DWORD PTR [edi-0x11]
  40afe8:	pop    ss
  40afe9:	in     eax,0x1b
  40afeb:	xor    DWORD PTR ss:[ebx],ecx
  40afee:	ins    DWORD PTR es:[edi],dx
  40afef:	jae    0x40afb1
  40aff1:	ret    
  40aff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff3:	cld    
  40aff4:	push   0x50
  40aff6:	mov    esi,ebp
  40aff8:	call   0xdad45ea7
  40affd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40affe:	mov    ch,0xe3
  40b000:	cmp    al,0x81
  40b002:	repz ds ds xchg edi,eax
  40b006:	fcmovnbe st,st(4)
  40b008:	adc    DWORD PTR [ebp-0x79],ebx
  40b00b:	sbb    eax,0x9767ce97
  40b010:	push   esp
  40b011:	jecxz  0x40b00b
  40b013:	pop    ebp
  40b014:	not    DWORD PTR [edx-0xb]
  40b017:	or     bl,BYTE PTR [ecx+edi*8-0x54]
  40b01b:	loope  0x40b08b
  40b01d:	xchg   bp,ax
  40b01f:	xchg   esp,eax
  40b020:	ja     0x40b014
  40b022:	test   DWORD PTR [edx-0x1a8fe71c],ebx
  40b028:	cmp    cl,BYTE PTR [edx]
  40b02a:	and    al,BYTE PTR [ebx]
  40b02c:	test   DWORD PTR [eax],0x291807b6
  40b032:	clc    
  40b033:	in     eax,0xe5
  40b035:	ficom  WORD PTR [ebx-0x4d]
  40b038:	xor    dl,0x92
  40b03b:	in     al,dx
  40b03c:	pusha  
  40b03d:	lock ror dh,cl
  40b040:	ins    DWORD PTR es:[edi],dx
  40b041:	sbb    esi,esp
  40b043:	push   es
  40b044:	stos   DWORD PTR es:[edi],eax
  40b045:	das    
  40b046:	push   eax
  40b047:	cmp    esi,DWORD PTR [esi-0x4d]
  40b04a:	dec    ecx
  40b04b:	xchg   esp,eax
  40b04c:	jbe    0x40b039
  40b04e:	stc    
  40b04f:	lods   al,BYTE PTR ds:[esi]
  40b050:	cmp    eax,0x2d2d42a1
  40b055:	xor    eax,DWORD PTR [ecx+edx*8+0x32]
  40b059:	fwait
  40b05a:	repnz pop esp
  40b05c:	rcr    edi,1
  40b05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b05f:	add    DWORD PTR [eax-0x483adf86],edi
  40b065:	or     BYTE PTR [eax],ch
  40b067:	bound  ebp,QWORD PTR [ecx-0x84fea4d]
  40b06d:	inc    edx
  40b06e:	cmp    al,0x1f
  40b070:	pop    esp
  40b071:	out    0xf0,al
  40b073:	loope  0x40b026
  40b075:	imul   edi,DWORD PTR [ebx+eax*4-0x6a3e50bf],0x454e55f9
  40b080:	out    dx,eax
  40b081:	das    
  40b082:	jbe    0x40b0d9
  40b084:	cli    
  40b085:	pop    ecx
  40b086:	xchg   edx,eax
  40b087:	lahf   
  40b088:	push   eax
  40b089:	lahf   
  40b08a:	mov    DWORD PTR [esi],ebx
  40b08c:	mov    al,0x66
  40b08e:	ds loope 0x40b0a0
  40b091:	xchg   edx,eax
  40b092:	mov    eax,ds:0x631143ed
  40b097:	shl    BYTE PTR [esi],cl
  40b099:	cmp    BYTE PTR [edi+0x2f],0x21
  40b09d:	push   esp
  40b09e:	int3   
  40b09f:	sbb    ah,BYTE PTR [si]
  40b0a2:	stos   DWORD PTR es:[edi],eax
  40b0a3:	pop    edx
  40b0a4:	test   al,0x1a
  40b0a6:	or     dh,cl
  40b0a8:	ss cdq 
  40b0aa:	pop    edx
  40b0ab:	mov    edx,0xd6d9633f
  40b0b0:	nop
  40b0b1:	pushf  
  40b0b2:	pop    ds
  40b0b3:	push   edi
  40b0b4:	int    0xb4
  40b0b6:	cmc    
  40b0b7:	sub    BYTE PTR [edi],0x99
  40b0ba:	add    edx,DWORD PTR [edi]
  40b0bc:	fist   DWORD PTR [ecx]
  40b0be:	(bad)  
  40b0bf:	clc    
  40b0c0:	xor    bh,BYTE PTR [ebx-0x22]
  40b0c3:	jae    0x40b115
  40b0c5:	dec    ecx
  40b0c6:	ret    
  40b0c7:	mov    ebx,0x949e7bca
  40b0cc:	jae    0x40b0a0
  40b0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0cf:	sbb    bp,sp
  40b0d2:	mov    cl,0x21
  40b0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d5:	fisubr DWORD PTR [edi+0x20]
  40b0d8:	fidivr DWORD PTR [edi+0x34606a2]
  40b0de:	xchg   edx,eax
  40b0df:	repz data16 mov ds:0xe620f913,al
  40b0e6:	fild   WORD PTR [edx+0x78c5c44f]
  40b0ec:	xchg   BYTE PTR [esi+0x26],al
  40b0ef:	inc    esp
  40b0f0:	mov    ax,di
  40b0f3:	xchg   ebx,eax
  40b0f4:	scas   al,BYTE PTR es:[edi]
  40b0f5:	inc    ecx
  40b0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f7:	test   al,0xbd
  40b0f9:	ror    BYTE PTR [ecx],cl
  40b0fb:	fisttp DWORD PTR [ebp+0x49]
  40b0fe:	fldenv [esi]
  40b100:	clc    
  40b101:	daa    
  40b102:	pop    edx
  40b103:	stc    
  40b104:	xor    DWORD PTR [esi-0x7bd45157],ebp
  40b10a:	loop   0x40b12e
  40b10c:	dec    edi
  40b10d:	hlt    
  40b10e:	pop    ebp
  40b10f:	mov    eax,0x10c4fad5
  40b114:	aaa    
  40b115:	ss jg  0x40b11e
  40b118:	stos   DWORD PTR es:[edi],eax
  40b119:	lods   al,BYTE PTR ds:[esi]
  40b11a:	jb     0x40b0b6
  40b11c:	cmp    BYTE PTR [eax-0x50],0x36
  40b120:	push   ecx
  40b121:	scas   eax,DWORD PTR es:[edi]
  40b122:	sbb    DWORD PTR [eax+edx*2],0xffffffd0
  40b126:	arpl   cx,di
  40b128:	sbb    eax,0x5844c654
  40b12d:	fwait
  40b12e:	and    eax,0x938b3ff9
  40b133:	(bad)  
  40b134:	iret   
  40b135:	pop    ds
  40b136:	ins    BYTE PTR es:[edi],dx
  40b137:	mov    bl,0xda
  40b139:	add    dh,ch
  40b13b:	cmp    al,0xd7
  40b13d:	dec    ecx
  40b13e:	push   0xffffffe2
  40b140:	loop   0x40b122
  40b142:	sbb    BYTE PTR [ecx],dh
  40b144:	push   edi
  40b145:	pop    edx
  40b146:	dec    eax
  40b147:	dec    ah
  40b149:	xor    al,0xa2
  40b14b:	mov    bh,BYTE PTR [ebx-0x2a]
  40b14e:	and    dl,dh
  40b150:	je     0x40b105
  40b152:	or     eax,0xe7292e26
  40b157:	mov    esi,0x1228db85
  40b15c:	pmullw mm6,QWORD PTR [edx+0x4732adbc]
  40b163:	cs outs dx,BYTE PTR es:[esi]
  40b166:	mov    esi,0x27d98b67
  40b16b:	jp     0x40b198
  40b16d:	add    eax,0x4bd23c2a
  40b172:	stos   BYTE PTR es:[edi],al
  40b173:	add    al,BYTE PTR [edx]
  40b175:	and    al,0x8
  40b177:	pop    ebp
  40b178:	ja     0x40b131
  40b17a:	xor    eax,DWORD PTR [edi]
  40b17c:	lock (bad) 
  40b17e:	fucom  st(4)
  40b180:	aas    
  40b181:	mov    ch,0xc3
  40b183:	push   ecx
  40b184:	dec    edx
  40b185:	test   eax,0x7675bbb8
  40b18a:	in     eax,0x39
  40b18c:	fimul  WORD PTR [ecx-0x5d74c709]
  40b192:	shr    BYTE PTR [edx+esi*4-0x3ba34329],1
  40b199:	(bad)  
  40b19a:	ror    DWORD PTR [edi+edi*4+0x35e18acb],1
  40b1a1:	je     0x40b1d2
  40b1a3:	jmp    0x40b17d
  40b1a5:	jecxz  0x40b18e
  40b1a7:	in     al,dx
  40b1a8:	push   ss
  40b1a9:	or     cl,BYTE PTR [eax+0x6c]
  40b1ac:	out    dx,al
  40b1ad:	cli    
  40b1ae:	iret   
  40b1af:	push   0x1c
  40b1b1:	pxor   mm7,QWORD PTR [eax]
  40b1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b5:	mov    ah,0xf
  40b1b7:	xchg   edi,eax
  40b1b8:	add    al,0x34
  40b1ba:	test   al,0x67
  40b1bc:	cwde   
  40b1bd:	add    esi,DWORD PTR [eax+0x19bf6ec]
  40b1c3:	imul   edx,DWORD PTR [ebp+0x67dd64b3],0xe7b143ac
  40b1cd:	mov    ecx,0xe39581f2
  40b1d2:	(bad)  
  40b1d3:	push   edx
  40b1d4:	xchg   esi,eax
  40b1d5:	cmp    al,0xc8
  40b1d7:	pusha  
  40b1d8:	mov    bl,0x4f
  40b1da:	test   al,0x22
  40b1dc:	push   cs
  40b1dd:	xchg   ecx,eax
  40b1de:	jnp    0x40b20f
  40b1e0:	push   es
  40b1e1:	xor    bl,al
  40b1e3:	jns    0x40b1ee
  40b1e5:	repz inc eax
  40b1e7:	popa   
  40b1e8:	xor    dh,BYTE PTR [ebx+eax*8-0x1a]
  40b1ec:	ins    BYTE PTR es:[edi],dx
  40b1ed:	icebp  
  40b1ee:	in     al,0xaa
  40b1f0:	push   ebx
  40b1f1:	xor    bh,BYTE PTR [esi-0x6031e012]
  40b1f7:	int    0x5
  40b1f9:	or     eax,ebx
  40b1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1fc:	add    eax,0x3db12315
  40b201:	mov    eax,0xcc4444ff
  40b206:	addr16 xchg esp,eax
  40b208:	dec    eax
  40b209:	arpl   WORD PTR [ecx-0x49],di
  40b20c:	(bad)  
  40b20e:	inc    eax
  40b20f:	lods   eax,DWORD PTR ds:[esi]
  40b210:	in     al,0x3a
  40b212:	xor    DWORD PTR [ebp+0x16],eax
  40b215:	add    BYTE PTR [eax+ebx*8+0x5f],dh
  40b219:	call   DWORD PTR [edx-0x38e5d296]
  40b21f:	mov    ebp,0xf66ec328
  40b224:	fwait
  40b225:	inc    esp
  40b226:	mov    eax,0x8923029b
  40b22b:	mov    bh,BYTE PTR [ecx-0x65]
  40b22e:	inc    ebx
  40b22f:	hlt    
  40b230:	out    0x5,al
  40b232:	ret    
  40b233:	cwde   
  40b234:	hlt    
  40b235:	pop    ds
  40b236:	stos   DWORD PTR es:[edi],eax
  40b237:	sbb    BYTE PTR [edx],al
  40b239:	enter  0x528e,0x43
  40b23d:	push   edx
  40b23e:	std    
  40b23f:	push   0x18bc42d1
  40b244:	sub    DWORD PTR [edx],ebx
  40b246:	mov    esp,esp
  40b248:	xor    DWORD PTR [ebp-0x2d74fcba],ebp
  40b24e:	test   ch,al
  40b250:	outs   dx,BYTE PTR ds:[esi]
  40b251:	add    BYTE PTR [edx-0x7cf027ae],dl
  40b257:	dec    edi
  40b258:	mov    fs,WORD PTR [esi+0x7f40d389]
  40b25e:	or     bh,BYTE PTR [ecx-0x18]
  40b261:	or     eax,0x6341729f
  40b266:	sbb    DWORD PTR [edx-0xa4ee26b],ebp
  40b26c:	cmp    al,0xa2
  40b26e:	pop    edi
  40b26f:	retf   0x760e
  40b272:	mov    ebx,0xbad6e2fb
  40b277:	dec    edx
  40b278:	pop    ebx
  40b279:	add    BYTE PTR [edx],cl
  40b27b:	jae    0x40b2cb
  40b27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b27e:	repnz push ebx
  40b280:	jbe    0x40b2ef
  40b282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b283:	enter  0xbdb5,0x7b
  40b287:	mov    bh,0x70
  40b289:	jp     0x40b27c
  40b28b:	adc    BYTE PTR [edx],bh
  40b28d:	mov    al,0xdc
  40b28f:	ret    
  40b290:	mov    dh,0x21
  40b292:	retf   
  40b293:	jne    0x40b2bb
  40b295:	mov    ?,esp
  40b297:	inc    ebx
  40b298:	xlat   BYTE PTR ds:[ebx]
  40b299:	ror    BYTE PTR [ecx-0x11],0xd3
  40b29d:	and    ecx,DWORD PTR [edx-0xe218186]
  40b2a3:	mov    ebx,0x2eecab67
  40b2a8:	mov    ds:0x7ff5a660,eax
  40b2ad:	lods   eax,DWORD PTR ds:[esi]
  40b2ae:	mov    ebp,0x3d91e052
  40b2b3:	(bad)  
  40b2b4:	jle    0x40b29c
  40b2b6:	push   ebx
  40b2b7:	dec    ebp
  40b2b8:	mov    ds:0x58f06b5c,al
  40b2bd:	sub    BYTE PTR [ecx+edi*4],0x53
  40b2c1:	mov    eax,cs:0x1c90485a
  40b2c7:	dec    ebx
  40b2c8:	ins    DWORD PTR es:[edi],dx
  40b2c9:	retf   0x21be
  40b2cc:	(bad)  
  40b2cd:	rcr    BYTE PTR [eax],cl
  40b2cf:	stc    
  40b2d0:	sti    
  40b2d1:	in     eax,0xb8
  40b2d3:	jp     0x40b2ab
  40b2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d6:	mov    bh,0x3c
  40b2d8:	sub    ch,BYTE PTR [ebx]
  40b2da:	jb     0x40b33a
  40b2dc:	mov    al,0x5b
  40b2de:	push   es
  40b2df:	rcr    DWORD PTR [ecx-0x2510c11a],0xe
  40b2e6:	call   0x43d0c782
  40b2eb:	adc    BYTE PTR [ecx],cl
  40b2ed:	addr16 sbb ecx,ecx
  40b2f0:	pop    edi
  40b2f1:	and    ecx,edi
  40b2f3:	fidivr WORD PTR [ebp-0x5d]
  40b2f6:	cs adc al,0xb8
  40b2f9:	mov    ebx,0xcc09bf29
  40b2fe:	push   ebx
  40b2ff:	xchg   edi,eax
  40b300:	dec    ecx
  40b301:	jmp    0x40b2f6
  40b303:	ds or  BYTE PTR cs:[ecx-0x687ed632],bh
  40b30b:	and    eax,0x74f5c864
  40b310:	in     eax,0x8a
  40b312:	jb     0x40b29b
  40b314:	xor    al,0x4e
  40b316:	inc    eax
  40b317:	mov    ah,0x89
  40b319:	mov    ah,0x3
  40b31b:	mov    ah,0x65
  40b31d:	and    BYTE PTR [ebx*8-0x53aa808a],0x91
  40b325:	jns    0x40b35f
  40b327:	jo     0x40b2bc
  40b329:	in     eax,0x5a
  40b32b:	in     al,dx
  40b32c:	out    0x31,al
  40b32e:	in     al,dx
  40b32f:	ja     0x40b31f
  40b331:	pop    eax
  40b332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b333:	loopne 0x40b39a
  40b335:	out    dx,eax
  40b336:	adc    BYTE PTR [esi-0x5f19098b],bh
  40b33c:	iret   
  40b33d:	mov    ebp,0x437c2469
  40b342:	adc    DWORD PTR [esi],esp
  40b344:	out    0x54,al
  40b346:	cmp    al,0xe4
  40b348:	jae    0x40b32e
  40b34a:	jb     0x40b333
  40b34c:	ds cdq 
  40b34e:	daa    
  40b34f:	ds int 0xf
  40b352:	hlt    
  40b353:	fisttp DWORD PTR [esi+0x7a]
  40b356:	sbb    ebp,DWORD PTR [edi]
  40b358:	inc    eax
  40b359:	fldcw  WORD PTR [edi+0x52008172]
  40b35f:	ror    BYTE PTR [ebx+0x472112dd],0x1a
  40b366:	cmp    BYTE PTR [edx-0x241a21ac],ch
  40b36c:	cmp    BYTE PTR [edi-0xf],cl
  40b36f:	loopne 0x40b2f2
  40b371:	adc    ebp,ebp
  40b373:	inc    esi
  40b374:	aas    
  40b375:	outs   dx,BYTE PTR ds:[esi]
  40b376:	sti    
  40b377:	pop    ds
  40b378:	lea    esp,[esi-0x37]
  40b37b:	jp     0x40b3d4
  40b37d:	pop    es
  40b37e:	push   esi
  40b37f:	sub    edx,eax
  40b381:	lock and eax,0xf0ddb7d4
  40b387:	push   eax
  40b388:	or     al,0x43
  40b38a:	push   ebp
  40b38b:	retf   
  40b38c:	stc    
  40b38d:	hlt    
  40b38e:	push   ss
  40b38f:	repz cwde 
  40b391:	clc    
  40b392:	cs xchg ebp,eax
  40b394:	stc    
  40b395:	push   eax
  40b396:	sar    DWORD PTR [ebx+eax*2+0x57f9dc4f],0xc5
  40b39e:	dec    esi
  40b39f:	fcmovnbe st,st(7)
  40b3a1:	dec    ebp
  40b3a2:	push   ss
  40b3a3:	ss fsubr st,st(0)
  40b3a6:	aad    0xd9
  40b3a8:	mov    edx,0x26d9f69e
  40b3ad:	jne    0x40b392
  40b3af:	ins    BYTE PTR es:[edi],dx
  40b3b0:	jno    0x40b33d
  40b3b2:	addr16 pop edx
  40b3b4:	stos   DWORD PTR es:[edi],eax
  40b3b5:	add    ah,0xb1
  40b3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ba:	rol    bh,cl
  40b3bc:	xor    eax,0x2858dfda
  40b3c1:	stos   DWORD PTR es:[edi],eax
  40b3c2:	xor    BYTE PTR [ecx],bh
  40b3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c5:	cdq    
  40b3c6:	cmc    
  40b3c7:	shl    BYTE PTR [edi-0xd0183cc],0x7e
  40b3ce:	push   esi
  40b3cf:	es add eax,0x6b088401
  40b3d5:	jmp    0x40b379
  40b3d7:	das    
  40b3d8:	test   al,0x5a
  40b3da:	stos   DWORD PTR es:[edi],eax
  40b3db:	cs inc ebp
  40b3dd:	add    edi,DWORD PTR [edi]
  40b3df:	lock test BYTE PTR [ebp+0x1d234afd],bh
  40b3e6:	ret    0x62a2
  40b3e9:	dec    edi
  40b3ea:	sub    DWORD PTR [ecx],esp
  40b3ec:	outs   dx,BYTE PTR ds:[esi]
  40b3ed:	(bad)  
  40b3ee:	jmp    0x3b7e3f21
  40b3f3:	pop    ss
  40b3f4:	lods   al,BYTE PTR ds:[esi]
  40b3f5:	add    eax,0xc58cf54
  40b3fa:	into   
  40b3fb:	dec    ecx
  40b3fc:	add    edi,DWORD PTR [ecx+0x25]
  40b3ff:	mov    WORD PTR [edx+0x4603a69e],es
  40b405:	ss es das 
  40b408:	adc    BYTE PTR [ebx],0x63
  40b40b:	iret   
  40b40c:	daa    
  40b40d:	xchg   ecx,eax
  40b40e:	pop    esp
  40b40f:	push   ebp
  40b410:	mov    eax,0xf6c8177f
  40b415:	or     DWORD PTR [ebx+0x12],esp
  40b418:	cmp    BYTE PTR [ebx+0x2931fee7],dl
  40b41e:	pop    esi
  40b41f:	xlat   BYTE PTR ds:[ebx]
  40b420:	mov    esi,0x608862e5
  40b425:	jo     0x40b461
  40b427:	push   cs
  40b428:	mov    ch,0x31
  40b42a:	sub    DWORD PTR [edx+ebx*2+0x2b],esp
  40b42e:	mov    esp,0x888d9c02
  40b433:	xor    al,BYTE PTR [esi+0x5d59a9f4]
  40b439:	pop    eax
  40b43a:	stc    
  40b43b:	stos   DWORD PTR es:[edi],eax
  40b43c:	dec    esp
  40b43d:	jmp    ebx
  40b43f:	(bad)  
  40b440:	lods   eax,DWORD PTR ds:[esi]
  40b441:	sbb    ch,dh
  40b443:	pushf  
  40b444:	mov    ch,0x2f
  40b446:	cmp    bl,BYTE PTR [edi+0x1f34edd3]
  40b44c:	(bad)  
  40b44d:	lea    edi,[edx]
  40b44f:	add    dl,bh
  40b451:	add    ebp,eax
  40b453:	out    dx,al
  40b454:	mov    edi,ecx
  40b456:	xor    eax,0xb18969c2
  40b45b:	hlt    
  40b45c:	mov    esi,0xfee7f421
  40b461:	in     al,0xd2
  40b463:	and    ch,ch
  40b465:	repz xlat BYTE PTR ds:[ebx]
  40b467:	adc    BYTE PTR [ecx],al
  40b469:	sbb    edi,edx
  40b46b:	lods   al,BYTE PTR ds:[esi]
  40b46c:	sub    BYTE PTR [ecx-0x38],al
  40b46f:	xor    dh,BYTE PTR [ebx+0x1bbea018]
  40b475:	in     eax,dx
  40b476:	dec    edi
  40b477:	call   0xc2e1f988
  40b47c:	imul   eax,DWORD PTR [eax],0x35b2c331
  40b482:	dec    DWORD PTR [ebx+ebp*8-0xb1d706f]
  40b489:	pushf  
  40b48a:	test   al,0x73
  40b48c:	mov    edx,0x91834cbb
  40b491:	xchg   ebp,eax
  40b492:	aas    
  40b493:	jle    0x40b449
  40b495:	das    
  40b496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b497:	pop    esi
  40b498:	pop    es
  40b499:	or     DWORD PTR [ecx-0x588a941a],ebx
  40b49f:	xchg   esp,ecx
  40b4a1:	add    al,0xfd
  40b4a3:	ins    BYTE PTR es:[edi],dx
  40b4a4:	cmc    
  40b4a5:	jle    0x40b4ac
  40b4a7:	mov    ch,0x7a
  40b4a9:	push   esi
  40b4aa:	retf   0xedf4
  40b4ad:	(bad)  
  40b4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4af:	ret    0x3e52
  40b4b2:	(bad)  
  40b4b3:	cmp    DWORD PTR [edi+0x3e],eax
  40b4b6:	jne    0x40b4ac
  40b4b8:	cmc    
  40b4b9:	xor    DWORD PTR [esi+esi*8],esi
  40b4bc:	lods   al,BYTE PTR ds:[esi]
  40b4bd:	pusha  
  40b4be:	bound  ebp,QWORD PTR [edx+0x1a96c460]
  40b4c4:	jbe    0x40b53a
  40b4c6:	xor    eax,0xea7de6a4
  40b4cb:	mov    eax,0xc18e708
  40b4d0:	jecxz  0x40b46b
  40b4d2:	xchg   DWORD PTR [edx-0x3],esi
  40b4d5:	mov    edx,0x705b89de
  40b4da:	jb     0x40b524
  40b4dc:	sbb    DWORD PTR [edx],0xb
  40b4df:	xchg   esp,eax
  40b4e0:	movhps xmm7,QWORD PTR [ebp-0x5ecfec4f]
  40b4e7:	jno    0x40b4bf
  40b4e9:	mov    dl,0x89
  40b4eb:	mov    eax,0xebd2eaae
  40b4f0:	aaa    
  40b4f1:	pop    ebp
  40b4f2:	mov    al,BYTE PTR [ebx-0x4a]
  40b4f5:	hlt    
  40b4f6:	add    al,0x8
  40b4f8:	call   0x382105fb
  40b4fd:	into   
  40b4fe:	inc    esp
  40b4ff:	test   DWORD PTR [ebx],ebp
  40b501:	test   al,0x31
  40b503:	jmp    0x4011:0x8d028c70
  40b50a:	sti    
  40b50b:	aas    
  40b50c:	xchg   esp,eax
  40b50d:	lahf   
  40b50e:	retf   
  40b50f:	pusha  
  40b510:	jmp    0xaea5:0x9b667557
  40b517:	imul   esi,esp,0xe70057d7
  40b51d:	xor    DWORD PTR [edi+eiz*2+0x4c],esi
  40b521:	or     al,0x41
  40b523:	sbb    al,0x6e
  40b525:	jg     0x40b4af
  40b527:	call   0x88b0:0x89a8f15f
  40b52e:	jo     0x40b511
  40b530:	int3   
  40b531:	and    al,0x51
  40b533:	je     0x40b53f
  40b535:	retf   0xd137
  40b538:	dec    DWORD PTR [ebp+0x27]
  40b53b:	jge    0x40b502
  40b53d:	in     eax,0xab
  40b53f:	mov    ecx,0x1b9fd0d6
  40b544:	sbb    DWORD PTR [eax+0x47],edi
  40b547:	push   es
  40b548:	pop    ds
  40b549:	add    ah,BYTE PTR [ebp-0x6dec8f62]
  40b54f:	mov    bh,0x8c
  40b551:	jecxz  0x40b516
  40b553:	scas   eax,DWORD PTR es:[edi]
  40b554:	jo     0x40b569
  40b556:	jae    0x40b54c
  40b558:	adc    esi,edi
  40b55a:	dec    ecx
  40b55b:	cmp    edi,esi
  40b55d:	pop    eax
  40b55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b55f:	sbb    al,0xd2
  40b561:	xchg   esi,eax
  40b562:	cmp    al,0x74
  40b564:	or     bh,BYTE PTR [ecx]
  40b566:	scas   eax,DWORD PTR es:[edi]
  40b567:	pop    esp
  40b568:	je     0x40b4fc
  40b56a:	test   DWORD PTR [ebx],ecx
  40b56c:	push   cs
  40b56d:	out    dx,eax
  40b56e:	add    esi,DWORD PTR [ecx-0x44d7940d]
  40b574:	(bad)  
  40b575:	cmp    ch,BYTE PTR [ecx-0x6f0667d0]
  40b57b:	popa   
  40b57c:	mov    BYTE PTR [ebp+0x78],ah
  40b57f:	jns    0x40b54e
  40b581:	mov    ds,WORD PTR [ebx+edi*2+0x76c8399c]
  40b588:	outs   dx,DWORD PTR ds:[esi]
  40b589:	add    al,al
  40b58b:	xor    edi,edx
  40b58d:	mov    eax,ds:0xe3ceba9d
  40b592:	lds    edx,FWORD PTR [ebp-0x28]
  40b595:	rcr    DWORD PTR [ecx],0x3e
  40b598:	idiv   DWORD PTR [edi-0x18]
  40b59b:	sub    BYTE PTR [esp+ebp*2+0x665d3e98],0xda
  40b5a3:	std    
  40b5a4:	icebp  
  40b5a5:	pop    esp
  40b5a6:	mov    ch,0xe7
  40b5a8:	in     eax,dx
  40b5a9:	mov    bh,0x82
  40b5ab:	xchg   edx,eax
  40b5ac:	retf   0x2e2
  40b5af:	lods   al,BYTE PTR ds:[esi]
  40b5b0:	adc    ah,0xa7
  40b5b3:	sub    ch,ch
  40b5b5:	shl    BYTE PTR [edi-0x1b796a0b],cl
  40b5bb:	jge    0x40b5f5
  40b5bd:	imul   ecx,DWORD PTR [edx-0x3d],0xa3f93a0b
  40b5c4:	pop    ss
  40b5c5:	xchg   ebp,eax
  40b5c6:	and    eax,0xde849287
  40b5cb:	and    bh,BYTE PTR [edi-0x1b84f3fb]
  40b5d1:	xchg   ebp,eax
  40b5d2:	test   al,0xb3
  40b5d4:	mov    al,ds:0xd65cd436
  40b5d9:	xchg   edi,eax
  40b5da:	sahf   
  40b5db:	pusha  
  40b5dc:	pop    esi
  40b5dd:	sbb    al,BYTE PTR [eax-0x21]
  40b5e0:	sbb    eax,esi
  40b5e2:	pop    edi
  40b5e3:	pop    DWORD PTR [ebx]
  40b5e5:	(bad)  
  40b5e6:	leave  
  40b5e7:	popa   
  40b5e8:	pop    es
  40b5e9:	(bad)  [edi+0x517cd87e]
  40b5ef:	adc    eax,0x4d67e147
  40b5f4:	imul   ebp,DWORD PTR [ebp+0x39a39f62],0x7846e24e
  40b5fe:	lds    edx,FWORD PTR [edx-0x44]
  40b601:	les    esi,FWORD PTR [esi-0x14]
  40b604:	imul   esp,edx,0x0
  40b607:	(bad)  
  40b608:	mov    cl,0x9e
  40b60a:	pop    ecx
  40b60b:	sbb    BYTE PTR [esi+0x27a5e725],0xac
  40b612:	(bad)  
  40b613:	outs   dx,BYTE PTR ds:[esi]
  40b614:	pusha  
  40b615:	inc    ecx
  40b616:	pop    ds
  40b617:	jno    0x40b698
  40b619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b61a:	loop   0x40b5d9
  40b61c:	fnstsw WORD PTR [ebp+eiz*8+0x7e53d280]
  40b623:	jmp    0x441a:0xe758fd80
  40b62a:	xchg   ebp,eax
  40b62b:	push   esp
  40b62c:	mov    cl,0x1c
  40b62e:	fdivrp st(3),st
  40b630:	cli    
  40b631:	jp     0x40b5d8
  40b633:	mov    al,0x18
  40b635:	adc    BYTE PTR [edi],0x0
  40b638:	int3   
  40b639:	jecxz  0x40b5d1
  40b63b:	(bad)
  40b63e:	jns    0x40b684
  40b640:	lock sub eax,0x445ccdd
  40b646:	mov    eax,ds:0x10cabee2
  40b64b:	div    BYTE PTR [edx+eax*4]
  40b64e:	mov    esp,0xa9b297a
  40b653:	sbb    esi,edi
  40b655:	int    0x84
  40b657:	xlat   BYTE PTR ds:[ebx]
  40b658:	push   cs
  40b659:	and    al,0x18
  40b65b:	mov    dh,0xcc
  40b65d:	jecxz  0x40b5f0
  40b65f:	pop    esp
  40b660:	jo     0x40b6b1
  40b662:	neg    BYTE PTR [ecx+0x2a]
  40b665:	mov    edx,0x4708e117
  40b66a:	inc    ebx
  40b66b:	aam    0x98
  40b66d:	cld    
  40b66e:	(bad)  
  40b66f:	push   eax
  40b670:	test   eax,0xc64d15a6
  40b675:	or     BYTE PTR [ecx],dl
  40b677:	and    eax,0x350e33d0
  40b67c:	aad    0xd0
  40b67e:	out    dx,al
  40b67f:	mov    eax,0xcd5b5a59
  40b684:	mov    dh,0x66
  40b686:	pop    ss
  40b687:	mov    edi,0xd1d5d52d
  40b68c:	test   DWORD PTR [eax+0x60843f00],ebx
  40b692:	je     0x40b6bd
  40b694:	fdivp  st(2),st
  40b696:	nop
  40b697:	xlat   BYTE PTR ds:[ebx]
  40b698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b699:	leave  
  40b69a:	pop    es
  40b69b:	and    DWORD PTR [edi-0x71],ebp
  40b69e:	and    BYTE PTR [esi],al
  40b6a0:	mov    BYTE PTR ds:0xd15cebba,ah
  40b6a6:	jae    0x40b6b2
  40b6a8:	mov    dh,0x50
  40b6aa:	sub    al,0xcc
  40b6ac:	out    0x26,al
  40b6ae:	mov    ebp,0x3c8401ca
  40b6b3:	(bad)  
  40b6b4:	dec    esp
  40b6b5:	mov    ds:0x167695f4,eax
  40b6ba:	and    edx,edx
  40b6bc:	std    
  40b6bd:	jnp    0x40b716
  40b6bf:	push   0x79
  40b6c1:	scas   al,BYTE PTR es:[edi]
  40b6c2:	add    eax,0x78d82f31
  40b6c7:	loope  0x40b6e4
  40b6c9:	or     BYTE PTR [ebx+0x5a],bl
  40b6cc:	cmp    DWORD PTR [esi-0x4961c025],esi
  40b6d2:	sub    BYTE PTR [ebx+0x24],bh
  40b6d5:	add    ebp,DWORD PTR ds:0x4c0005b0
  40b6db:	dec    edi
  40b6dc:	mov    dl,0xec
  40b6de:	inc    edi
  40b6df:	jne    0x40b6f9
  40b6e1:	aam    0x80
  40b6e3:	push   ebp
  40b6e4:	seto   BYTE PTR [ebp+0xb]
  40b6e8:	rol    bl,0xe5
  40b6eb:	jle    0x40b766
  40b6ed:	data16 mov ch,0x77
  40b6f0:	push   0xcf9fec0e
  40b6f5:	fstp   DWORD PTR [ebx-0x5f021b9d]
  40b6fb:	icebp  
  40b6fc:	sbb    BYTE PTR [edx],bh
  40b6fe:	jp     0x40b77c
  40b700:	out    0xc3,eax
  40b702:	stc    
  40b703:	pop    esp
  40b704:	jb     0x40b712
  40b706:	push   ss
  40b707:	dec    ebx
  40b708:	loop   0x40b703
  40b70a:	and    eax,0x92774923
  40b70f:	ja     0x40b6d6
  40b711:	pop    ecx
  40b712:	mov    al,ds:0x151d8cb6
  40b717:	mov    ecx,0xdc9366a5
  40b71c:	sub    BYTE PTR [eax+edx*4+0x6367c78],0x21
  40b724:	push   ebp
  40b725:	imul   BYTE PTR [eax-0x22]
  40b728:	xchg   ebp,eax
  40b729:	outs   dx,BYTE PTR ds:[esi]
  40b72a:	sbb    DWORD PTR [esi+0x492c4f3e],ebx
  40b730:	aad    0xda
  40b732:	mov    cl,0xeb
  40b734:	inc    ebp
  40b735:	scas   al,BYTE PTR es:[edi]
  40b736:	xchg   DWORD PTR ds:0x5ecf2d7e,edi
  40b73c:	les    edi,FWORD PTR [esi-0x2b]
  40b73f:	inc    ebp
  40b740:	mov    ecx,DWORD PTR [edi-0x31d410e1]
  40b746:	push   esi
  40b747:	lahf   
  40b748:	pop    edx
  40b749:	(bad)  
  40b74a:	daa    
  40b74b:	clc    
  40b74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b74d:	rol    BYTE PTR [edi-0x4b],cl
  40b750:	je     0x40b74e
  40b752:	jnp    0x40b747
  40b754:	dec    esp
  40b755:	xor    eax,0xa08af6f5
  40b75a:	bound  eax,QWORD PTR [esi+edi*1-0x61]
  40b75e:	push   ds
  40b75f:	xor    dh,bh
  40b761:	xchg   ebx,eax
  40b762:	arpl   WORD PTR [ebp+0x6c],sp
  40b765:	cmp    BYTE PTR [ebp+0x66133e06],ah
  40b76b:	or     esp,DWORD PTR [esi+eax*1-0x41]
  40b76f:	pop    esp
  40b770:	(bad)  
  40b771:	(bad)  
  40b772:	fidivr WORD PTR [edx-0x7b76c3dd]
  40b778:	inc    edx
  40b779:	repz xchg ecx,eax
  40b77b:	push   esp
  40b77c:	ins    DWORD PTR es:[edi],dx
  40b77d:	jecxz  0x40b7ac
  40b77f:	outs   dx,BYTE PTR ds:[esi]
  40b780:	sub    bh,ah
  40b782:	retf   0xa55c
  40b785:	js     0x40b7b3
  40b787:	push   ss
  40b788:	adc    al,al
  40b78a:	in     al,dx
  40b78b:	pop    ecx
  40b78c:	nop
  40b78d:	or     DWORD PTR [esi+0x2ac5c6de],ebx
  40b793:	or     DWORD PTR [edi],ebx
  40b795:	hlt    
  40b796:	stos   BYTE PTR es:[edi],al
  40b797:	inc    eax
  40b798:	retf   
  40b799:	in     eax,dx
  40b79a:	and    dh,BYTE PTR [ecx]
  40b79c:	or     eax,0x912d8450
  40b7a1:	add    DWORD PTR [edx-0x43],0x112db3f
  40b7a8:	xchg   edx,eax
  40b7a9:	not    DWORD PTR [esi]
  40b7ab:	mov    ecx,0x93d7f131
  40b7b0:	adc    BYTE PTR [ecx+0x23],ch
  40b7b3:	lahf   
  40b7b4:	cmp    ebp,DWORD PTR [ecx]
  40b7b6:	jg     0x40b7e0
  40b7b8:	add    DWORD PTR [edi+0x76],edi
  40b7bb:	icebp  
  40b7bc:	fwait
  40b7bd:	or     esi,ecx
  40b7bf:	ret    0xc5f9
  40b7c2:	xor    DWORD PTR [edx+0x15b2a543],ebp
  40b7c8:	pop    edx
  40b7c9:	(bad)  
  40b7ca:	or     DWORD PTR [ebx-0x4fd7ae49],ebp
  40b7d0:	nop
  40b7d1:	outs   dx,BYTE PTR ds:[esi]
  40b7d2:	out    dx,al
  40b7d3:	iret   
  40b7d4:	dec    esp
  40b7d5:	mov    fs,WORD PTR [edx+0x75]
  40b7d8:	dec    esp
  40b7d9:	inc    esp
  40b7da:	mov    ebx,0x2b8623ba
  40b7df:	xchg   ebp,eax
  40b7e0:	mov    gs,WORD PTR [ebx]
  40b7e2:	shl    BYTE PTR [ecx-0x79],cl
  40b7e5:	cmp    DWORD PTR [edi+0x73387157],0x4b
  40b7ec:	bound  ebp,QWORD PTR ss:0x6046c046
  40b7f3:	push   ebx
  40b7f4:	mov    edx,0x237e015a
  40b7f9:	pop    edi
  40b7fa:	xor    ah,ah
  40b7fc:	and    al,0x64
  40b7fe:	test   al,0x26
  40b801:	push   edx
  40b802:	pop    ecx
  40b803:	sbb    DWORD PTR [edx-0xa9f958f],eax
  40b809:	jecxz  0x40b86f
  40b80b:	cs and al,0x5e
  40b80e:	in     eax,0x5a
  40b810:	dec    edi
  40b811:	leave  
  40b812:	test   al,0x2c
  40b814:	loopne 0x40b878
  40b816:	mov    ecx,0x84138563
  40b81b:	enter  0x7271,0xce
  40b81f:	icebp  
  40b820:	pop    ds
  40b821:	bound  ebx,QWORD PTR [ecx+ebx*4]
  40b824:	scas   al,BYTE PTR es:[edi]
  40b825:	cmp    ah,dh
  40b827:	fsubr  QWORD PTR [eax+esi*2+0x73]
  40b82b:	sar    DWORD PTR ds:0xf23a13f6,0x9e
  40b832:	fnsetpm(287 only) 
  40b834:	pop    DWORD PTR [esi-0x7c6a4d03]
  40b83a:	xchg   ebx,eax
  40b83b:	stos   DWORD PTR es:[edi],eax
  40b83c:	pop    ebx
  40b83d:	aam    0xe3
  40b83f:	jecxz  0x40b82f
  40b841:	enter  0x177b,0x1f
  40b845:	jbe    0x40b8ae
  40b847:	mov    ebp,0x9f5856ec
  40b84c:	pusha  
  40b84d:	cwde   
  40b84e:	sti    
  40b84f:	pop    ebx
  40b850:	pop    ss
  40b851:	shr    BYTE PTR [eax-0x730512a5],cl
  40b857:	imul   ecx,DWORD PTR [eax+0x65],0x30ceb8f9
  40b85e:	adc    BYTE PTR [edx-0x1],ch
  40b861:	arpl   cx,ax
  40b863:	in     eax,dx
  40b864:	or     esp,0x6bbe7dd6
  40b86a:	inc    eax
  40b86b:	push   ebx
  40b86c:	sbb    ah,BYTE PTR [esp+edi*8]
  40b86f:	jg     0x40b885
  40b871:	aam    0x62
  40b873:	or     BYTE PTR [ebx-0x20ba45d1],bh
  40b879:	fimul  DWORD PTR [eax+0x70d8af63]
  40b87f:	mov    ds:0xd63664dc,eax
  40b884:	(bad)  
  40b885:	mov    eax,0x5c07930e
  40b88a:	stos   BYTE PTR es:[edi],al
  40b88b:	lea    eax,[edx+0x48c46f3b]
  40b891:	neg    DWORD PTR [ebx]
  40b893:	inc    edx
  40b894:	pop    edx
  40b895:	mov    ebp,0xe33ed7d1
  40b89a:	rol    BYTE PTR [eax],cl
  40b89c:	xlat   BYTE PTR ds:[ebx]
  40b89d:	pusha  
  40b89e:	cmp    al,0x1e
  40b8a0:	or     eax,0xca202010
  40b8a5:	bound  ebp,QWORD PTR [edx+0x3454b69]
  40b8ab:	pop    esp
  40b8ac:	and    edx,DWORD PTR [ebx+edi*1]
  40b8af:	les    edi,FWORD PTR [edx-0xa]
  40b8b2:	inc    esp
  40b8b3:	add    DWORD PTR [eax+0x33],0xf69302fe
  40b8ba:	sar    BYTE PTR [eax+0x36],0xec
  40b8be:	mov    edi,0x1a88026
  40b8c3:	cmc    
  40b8c4:	inc    esi
  40b8c5:	xor    al,0x9
  40b8c7:	or     bl,ah
  40b8c9:	jno    0x40b88d
  40b8cb:	xor    DWORD PTR [esi],eax
  40b8cd:	mov    esp,DWORD PTR [edx]
  40b8cf:	mov    esi,0x7aae2aa6
  40b8d4:	mov    ebp,0x7e103d33
  40b8d9:	fsub   st,st(6)
  40b8db:	mov    BYTE PTR [edx+eax*2-0x73],0x2d
  40b8e0:	fwait
  40b8e1:	shl    al,0x63
  40b8e4:	test   al,0xbb
  40b8e6:	fld    QWORD PTR [edi-0xc758b97]
  40b8ec:	push   ss
  40b8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ee:	mov    es,edx
  40b8f0:	mul    DWORD PTR [edx+0x19805e9a]
  40b8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f7:	test   al,0xd7
  40b8f9:	leave  
  40b8fa:	inc    edi
  40b8fb:	sub    eax,0xb836173
  40b900:	inc    edi
  40b901:	inc    ebp
  40b902:	dec    ecx
  40b903:	out    0x75,eax
  40b905:	dec    ebx
  40b906:	push   ss
  40b907:	into   
  40b908:	dec    edx
  40b909:	div    DWORD PTR [ebp-0x45774374]
  40b90f:	inc    edx
  40b910:	or     eax,0x8846b982
  40b915:	sub    BYTE PTR [ecx-0x3efa93d7],0x80
  40b91c:	or     bl,BYTE PTR [edx+0x6e9c389d]
  40b922:	aas    
  40b923:	add    dl,cl
  40b925:	and    edi,DWORD PTR [ebx-0x6a71459]
  40b92b:	sub    DWORD PTR [eax+eax*8],0xc7a49996
  40b932:	outs   dx,BYTE PTR ds:[esi]
  40b933:	xchg   ebx,eax
  40b934:	loop   0x40b8bc
  40b936:	arpl   WORD PTR [eax-0x2],si
  40b939:	scas   eax,DWORD PTR es:[edi]
  40b93a:	jae    0x40b95a
  40b93c:	retf   0xe7c9
  40b93f:	int3   
  40b940:	add    ecx,DWORD PTR [eax-0x30d79ea8]
  40b946:	mov    ds:0xab0a1475,eax
  40b94b:	sub    al,BYTE PTR [ebx+0x2502bbca]
  40b951:	or     eax,0xc1ebc75b
  40b956:	dec    eax
  40b957:	sub    BYTE PTR [ebx],cl
  40b959:	(bad)  
  40b95a:	dec    ebp
  40b95b:	rcl    BYTE PTR [eax-0x6daa28a5],0xcc
  40b962:	pop    es
  40b963:	fbld   TBYTE PTR [edi-0x19]
  40b966:	sbb    eax,0xe4749ba2
  40b96b:	aas    
  40b96c:	popf   
  40b96d:	or     eax,0x3b84f9e9
  40b972:	sbb    DWORD PTR ds:0x934c3bc5,esp
  40b978:	stos   DWORD PTR es:[edi],eax
  40b979:	mov    ecx,0x45cddb59
  40b97e:	cmp    ecx,edx
  40b980:	sar    BYTE PTR [ebp+eax*2-0x11],1
  40b984:	es fsub st,st(6)
  40b987:	retf   0xda66
  40b98a:	push   es
  40b98b:	xor    BYTE PTR [edi-0x6ea4992],bl
  40b991:	outs   dx,BYTE PTR ds:[esi]
  40b992:	xchg   edi,eax
  40b993:	adc    BYTE PTR [edi],0x2a
  40b996:	sar    DWORD PTR [edi-0x4c],0xc6
  40b99a:	in     al,0x8
  40b99c:	mov    ecx,0xf0050500
  40b9a1:	sub    BYTE PTR [esi+ebp*1],cl
  40b9a4:	inc    ecx
  40b9a5:	fs sahf 
  40b9a7:	call   0x29241238
  40b9ac:	lock adc bl,0x8f
  40b9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b1:	pop    esi
  40b9b2:	daa    
  40b9b3:	cld    
  40b9b4:	bnd call 0xd53da4c
  40b9ba:	dec    edi
  40b9bb:	sub    al,0x72
  40b9bd:	loope  0x40ba2e
  40b9bf:	jns    0x40b9db
  40b9c1:	inc    esi
  40b9c2:	shr    BYTE PTR [ebx+0x5320cfd9],cl
  40b9c8:	bound  esi,QWORD PTR [edi-0x23]
  40b9cb:	retf   0xa933
  40b9ce:	fcom   DWORD PTR [edx-0x19]
  40b9d1:	mov    eax,0x975c37f7
  40b9d6:	les    ebx,FWORD PTR [edi-0x4b7d28bd]
  40b9dc:	and    al,BYTE PTR [eax-0x68]
  40b9df:	aaa    
  40b9e0:	adc    al,0xea
  40b9e2:	jg     0x40ba32
  40b9e4:	clc    
  40b9e5:	sub    al,0xcf
  40b9e7:	ds pop ss
  40b9e9:	(bad)  
  40b9ea:	and    BYTE PTR [edx],al
  40b9ec:	aaa    
  40b9ed:	cld    
  40b9ee:	xor    DWORD PTR [edx+0x396b3630],ecx
  40b9f4:	xchg   edx,eax
  40b9f5:	push   ecx
  40b9f6:	mov    dh,0x68
  40b9f8:	push   ds
  40b9f9:	fwait
  40b9fa:	or     DWORD PTR [esi+ebx*8+0x72],ebx
  40b9fe:	dec    edi
  40b9ff:	fcmovnb st,st(4)
  40ba01:	push   cs
  40ba02:	lahf   
  40ba03:	and    ch,dl
  40ba05:	xor    DWORD PTR [eax+0x1f],ecx
  40ba08:	sahf   
  40ba09:	add    DWORD PTR [ebx+ebx*1+0xf],edx
  40ba0d:	loopne 0x40ba89
  40ba0f:	push   ebx
  40ba10:	outs   dx,DWORD PTR ds:[esi]
  40ba11:	in     eax,0xda
  40ba13:	dec    ebx
  40ba14:	bound  eax,QWORD PTR [eax+ebp*4]
  40ba17:	inc    esp
  40ba18:	jmp    0x40b9d2
  40ba1a:	int    0x59
  40ba1c:	aaa    
  40ba1d:	sub    al,0x42
  40ba1f:	lds    edi,FWORD PTR [eax+0x6952b56b]
  40ba25:	imul   ebx,DWORD PTR [edx+0x7a],0xcb630a18
  40ba2c:	xor    DWORD PTR [ebp+0x55],0x830a7245
  40ba33:	or     al,BYTE PTR [edi]
  40ba35:	mov    edi,DWORD PTR [edi+0x1e]
  40ba38:	mov    edx,0xfb8596c1
  40ba3d:	and    dl,bl
  40ba3f:	or     al,0x69
  40ba41:	mov    eax,ds:0xb1424c43
  40ba46:	imul   esi,DWORD PTR fs:[eax+0x6d0d3714],0xc2f31d92
  40ba51:	hlt    
  40ba52:	hlt    
  40ba53:	cmp    al,0x4d
  40ba55:	ss ss jne 0x40b9f6
  40ba59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba5a:	push   es
  40ba5b:	scas   al,BYTE PTR es:[edi]
  40ba5c:	inc    esi
  40ba5d:	stos   DWORD PTR es:[edi],eax
  40ba5e:	dec    ebp
  40ba5f:	xchg   DWORD PTR [ebx+0x5732ec94],edx
  40ba65:	outs   dx,BYTE PTR ds:[esi]
  40ba66:	jb     0x40bab8
  40ba68:	adc    DWORD PTR [ebx+0x6b],esp
  40ba6b:	dec    edx
  40ba6c:	js     0x40baa0
  40ba6e:	xor    al,0x1a
  40ba70:	sub    esi,DWORD PTR [eax]
  40ba72:	les    ebx,FWORD PTR ds:0x6de9
  40ba77:	mov    bh,BYTE PTR [edi-0x252c245b]
  40ba7d:	idiv   bh
  40ba7f:	cwde   
  40ba80:	shr    ecx,0xa3
  40ba83:	push   es
  40ba84:	cli    
  40ba85:	sbb    al,0x77
  40ba87:	imul   edi,DWORD PTR [eax+eax*4],0xfffffff3
  40ba8b:	inc    esp
  40ba8c:	lods   al,BYTE PTR ds:[esi]
  40ba8d:	dec    ecx
  40ba8e:	push   ebp
  40ba8f:	sub    ecx,DWORD PTR [esi+0x6d]
  40ba92:	imul   edi,DWORD PTR [ecx-0x415652a7],0x43
  40ba99:	test   ah,dl
  40ba9b:	es pop edi
  40ba9d:	(bad)  
  40ba9e:	mov    esp,0x4e070c93
  40baa3:	icebp  
  40baa4:	jecxz  0x40ba60
  40baa6:	mov    al,0x8d
  40baa8:	xor    dl,BYTE PTR [edx-0x4aeb624f]
  40baae:	sahf   
  40baaf:	add    ebp,edx
  40bab1:	jnp    0x40bb29
  40bab3:	out    0xea,al
  40bab5:	cs jmp 0x2cf26de7
  40babb:	inc    eax
  40babc:	push   ebp
  40babd:	lahf   
  40babe:	adc    eax,0x12e4de13
  40bac3:	or     BYTE PTR [esi+edi*4-0x46],dh
  40bac7:	addr16 push edx
  40bac9:	sti    
  40baca:	sub    eax,0xaa495c87
  40bacf:	(bad)  
  40bad2:	lea    ecx,[edx+0xd340c6e]
  40bad8:	mov    cl,0xa0
  40bada:	outs   dx,BYTE PTR ds:[esi]
  40badb:	jnp    0x40bb41
  40badd:	pop    ebp
  40bade:	adc    edx,DWORD PTR [ebx]
  40bae0:	mov    al,0xb7
  40bae2:	adc    DWORD PTR [edx+eax*1-0x3b],0x36
  40bae7:	jno    0x40baec
  40bae9:	jne    0x40baed
  40baeb:	imul   edi,edx,0x39
  40baee:	sub    ch,dh
  40baf0:	xor    edx,DWORD PTR [edx]
  40baf2:	cmp    edi,ebp
  40baf4:	pop    ecx
  40baf5:	sub    bh,BYTE PTR ds:[eax-0x2df29c0f]
  40bafc:	push   cs
  40bafd:	fist   WORD PTR [ecx-0x2a]
  40bb00:	pop    edx
  40bb01:	add    DWORD PTR [eax],eax
  40bb03:	mov    bl,dl
  40bb05:	pop    ecx
  40bb06:	cmc    
  40bb07:	das    
  40bb08:	pop    esp
  40bb09:	sub    al,0x7
  40bb0b:	aaa    
  40bb0c:	cmp    ecx,DWORD PTR [edi-0x54bdb74]
  40bb12:	cli    
  40bb13:	outs   dx,BYTE PTR ds:[esi]
  40bb14:	sub    edx,DWORD PTR [ecx-0x3784b696]
  40bb1a:	sbb    BYTE PTR [edi-0x2ce7ca2b],ch
  40bb20:	gs push esp
  40bb22:	mov    gs,WORD PTR [edi]
  40bb24:	push   ecx
  40bb25:	push   esp
  40bb26:	dec    esp
  40bb27:	out    0xa7,al
  40bb29:	(bad)  
  40bb2a:	jnp    0x40baf8
  40bb2c:	xchg   ebx,eax
  40bb2d:	push   ecx
  40bb2e:	or     al,0xc5
  40bb30:	test   DWORD PTR [ebx-0x7043e0e7],0xf7a39cd0
  40bb3a:	jl     0x40bafe
  40bb3c:	add    ebp,esi
  40bb3e:	ret    0x249c
  40bb41:	xchg   BYTE PTR [edx+0x56],dh
  40bb44:	ins    BYTE PTR es:[edi],dx
  40bb45:	xor    ebx,DWORD PTR [ecx]
  40bb47:	pop    es
  40bb48:	jp     0x40bafb
  40bb4a:	mov    dl,0x69
  40bb4c:	je     0x40bb52
  40bb4e:	mov    bl,0x64
  40bb50:	push   0xffffffaf
  40bb52:	inc    ebp
  40bb53:	xor    BYTE PTR [ebx],al
  40bb55:	inc    ecx
  40bb56:	xchg   esi,eax
  40bb57:	mov    ebx,DWORD PTR [ebx-0x15]
  40bb5a:	adc    DWORD PTR [esi-0x749f269],esi
  40bb60:	test   DWORD PTR [ebx-0x40],0xe82277db
  40bb67:	push   esi
  40bb68:	push   es
  40bb69:	bnd jl 0x40bb3c
  40bb6c:	pusha  
  40bb6d:	and    al,0x91
  40bb6f:	jg     0x40bb10
  40bb71:	sar    bh,cl
  40bb73:	sub    eax,0x6310f026
  40bb78:	mov    ebp,0xd54f83f6
  40bb7d:	shl    BYTE PTR [edi],1
  40bb7f:	dec    ecx
  40bb80:	push   ebp
  40bb81:	call   0x80ff:0x89cd6338
  40bb88:	mov    bh,BYTE PTR [ecx+0x5b2d65d8]
  40bb8e:	xor    BYTE PTR [ebx-0x4e5ad2cf],ch
  40bb94:	push   cs
  40bb95:	mov    dh,0xf2
  40bb97:	pop    edi
  40bb98:	add    edi,DWORD PTR [eax+0x67]
  40bb9b:	pusha  
  40bb9c:	js     0x40bbe1
  40bb9e:	jnp    0x40bb28
  40bba0:	cmp    edi,DWORD PTR [edi+edx*1]
  40bba3:	gs mov esp,0x739fd02d
  40bba9:	xchg   edx,eax
  40bbaa:	call   0x79705b31
  40bbaf:	dec    ecx
  40bbb0:	retf   
  40bbb1:	jbe    0x40bbbc
  40bbb3:	mov    bh,0x8f
  40bbb5:	push   ebx
  40bbb6:	in     al,dx
  40bbb7:	test   al,0xf9
  40bbb9:	in     eax,0x66
  40bbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbbc:	sbb    al,ah
  40bbbe:	push   edi
  40bbbf:	out    dx,al
  40bbc0:	ret    
  40bbc1:	inc    edx
  40bbc2:	pop    ebx
  40bbc3:	sbb    al,0xea
  40bbc5:	imul   edx,DWORD PTR [edx+0x31d179d4],0xf71e334
  40bbcf:	popa   
  40bbd0:	rol    ebp,1
  40bbd2:	hlt    
  40bbd3:	daa    
  40bbd4:	adc    BYTE PTR [edx-0x602d30bb],cl
  40bbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbdb:	jp     0x40bbe3
  40bbdd:	fdiv   st,st(5)
  40bbdf:	cmp    dl,BYTE PTR [eax]
  40bbe1:	rcr    edi,cl
  40bbe3:	fild   WORD PTR [ecx-0x7b]
  40bbe7:	inc    ebp
  40bbe8:	mov    bl,0x83
  40bbea:	mov    ah,0xb0
  40bbec:	cmc    
  40bbed:	pop    eax
  40bbee:	mov    eax,0x3e02f4e6
  40bbf3:	jl     0x40bc17
  40bbf5:	arpl   WORD PTR [eax+ebx*8+0xace100c],cx
  40bbfc:	scas   eax,DWORD PTR es:[edi]
  40bbfd:	mov    eax,0xc3c0f330
  40bc02:	or     cl,dh
  40bc04:	and    eax,0x714b9cef
  40bc09:	dec    esi
  40bc0a:	adc    ch,ch
  40bc0c:	jns    0x40bbff
  40bc0e:	inc    esp
  40bc0f:	xchg   ebp,eax
  40bc10:	pop    esi
  40bc11:	test   DWORD PTR [eax-0x30],edx
  40bc14:	gs retf 0xb4ae
  40bc18:	xor    al,0x4c
  40bc1a:	mov    ch,0xf9
  40bc1c:	cdq    
  40bc1d:	sub    al,0x22
  40bc1f:	pop    edi
  40bc20:	into   
  40bc21:	nop
  40bc22:	mov    BYTE PTR [ebx-0x26],bl
  40bc25:	adc    edx,DWORD PTR [edx+0x5e285a07]
  40bc2b:	jmp    0xdf8d:0xab66ed1f
  40bc32:	call   DWORD PTR ds:0xd96d6ab9
  40bc38:	stc    
  40bc39:	repz shl esi,1
  40bc3c:	rcl    BYTE PTR [ecx+eax*1+0x5a],1
  40bc40:	or     ebx,DWORD PTR [ecx]
  40bc42:	mov    bl,0xc
  40bc44:	and    eax,0x406cf8f9
  40bc49:	pushf  
  40bc4a:	sbb    dl,BYTE PTR [si+0x29]
  40bc4e:	sbb    BYTE PTR [eax+0x42],0x96
  40bc52:	dec    BYTE PTR [si-0x34e4]
  40bc57:	inc    edx
  40bc58:	adc    bh,0x4b
  40bc5b:	out    dx,al
  40bc5c:	jl     0x40bc0a
  40bc5e:	call   0x6aab7e80
  40bc63:	push   ds
  40bc64:	lods   al,BYTE PTR ds:[esi]
  40bc65:	fidivr DWORD PTR [esi]
  40bc67:	in     al,0xe7
  40bc69:	inc    esi
  40bc6a:	lea    esp,[edi-0xa8b6005]
  40bc70:	push   0x9897246e
  40bc75:	push   ebx
  40bc76:	(bad)  
  40bc77:	adc    bl,BYTE PTR [edx+esi*2-0x608bb715]
  40bc7e:	mov    ecx,DWORD PTR [ebx+0x434d4873]
  40bc84:	push   edi
  40bc85:	fisub  DWORD PTR [edi-0x4b]
  40bc88:	pop    esi
  40bc89:	(bad)  
  40bc8a:	lods   al,BYTE PTR ds:[esi]
  40bc8b:	jnp    0x40bcd8
  40bc8d:	repnz mov BYTE PTR [edi],ch
  40bc90:	outs   dx,DWORD PTR ds:[esi]
  40bc91:	and    ebx,edx
  40bc93:	pop    edi
  40bc94:	mov    ah,0x13
  40bc96:	ret    
  40bc97:	and    edx,eax
  40bc99:	add    ah,BYTE PTR [edi-0x48]
  40bc9c:	fsubr  QWORD PTR [edi+0xa8a949]
  40bca2:	loopne 0x40bcc9
  40bca4:	jmp    0x40bc53
  40bca6:	in     eax,dx
  40bca7:	scas   eax,DWORD PTR es:[edi]
  40bca8:	fild   DWORD PTR [esp+eax*1-0x7e3d5540]
  40bcaf:	xor    DWORD PTR ds:0x30f4e684,edx
  40bcb5:	retf   
  40bcb6:	ja     0x40bcb2
  40bcb8:	mov    ebx,0xf622e9df
  40bcbd:	loopne 0x40bcdf
  40bcbf:	pop    ecx
  40bcc0:	and    ebx,esi
  40bcc2:	mov    ds:0x9a7f6b57,al
  40bcc7:	jnp    0x40bcec
  40bcc9:	test   eax,0x35857f9f
  40bcce:	mov    cl,0xb2
  40bcd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd1:	pop    ebx
  40bcd2:	pop    ss
  40bcd3:	out    dx,al
  40bcd4:	push   eax
  40bcd5:	pusha  
  40bcd6:	fbld   TBYTE PTR [esi-0x7907932d]
  40bcdc:	shl    BYTE PTR [esi+0x71],1
  40bcdf:	sbb    edi,DWORD PTR [ecx+0x54]
  40bce2:	mov    eax,ds:0xd0cd9f4f
  40bce7:	xor    bl,BYTE PTR [eax]
  40bce9:	pop    edx
  40bcea:	sbb    eax,0x265f58df
  40bcef:	mov    ds:0xf2d591d1,al
  40bcf4:	add    eax,0x607cfb20
  40bcf9:	pop    ds
  40bcfa:	fs call 0x65c33c5b
  40bd00:	rcl    DWORD PTR [esi-0x7968a5bc],1
  40bd06:	ret    0xf3f5
  40bd09:	push   0xffffffcb
  40bd0b:	cdq    
  40bd0c:	push   eax
  40bd0d:	xor    DWORD PTR [edx-0xc],0xaae2f4af
  40bd14:	jbe    0x40bd87
  40bd16:	inc    eax
  40bd17:	pop    es
  40bd18:	inc    edx
  40bd19:	test   dl,dl
  40bd1b:	xor    DWORD PTR [eax+edi*1-0x5951c2ae],edx
  40bd22:	sbb    eax,0x77169914
  40bd27:	imul   edi,DWORD PTR [edi-0x7f],0xe6a96df
  40bd2e:	adc    al,0x79
  40bd30:	hlt    
  40bd31:	push   es
  40bd32:	adc    al,al
  40bd34:	xchg   esp,eax
  40bd35:	jge    0x40bcbc
  40bd37:	sahf   
  40bd38:	test   DWORD PTR [eax+0x18],0xe6aa48b0
  40bd3f:	push   es
  40bd40:	ret    
  40bd41:	sar    BYTE PTR [edx],1
  40bd43:	jns    0x40bcc6
  40bd45:	cdq    
  40bd46:	inc    esp
  40bd47:	ja     0x40bcd0
  40bd49:	cwde   
  40bd4a:	dec    esp
  40bd4b:	pusha  
  40bd4c:	push   esi
  40bd4d:	cmp    edi,DWORD PTR ds:0x83ccf84e
  40bd53:	sbb    ch,dl
  40bd55:	and    ah,BYTE PTR [ecx+0x106fea89]
  40bd5b:	or     eax,DWORD PTR [ebp-0x40]
  40bd5e:	fs icebp 
  40bd60:	cmc    
  40bd61:	add    eax,0xe3fe65db
  40bd66:	inc    ecx
  40bd67:	out    0xd9,eax
  40bd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6a:	add    BYTE PTR [edi+eiz*2+0x6730b365],bh
  40bd71:	cmp    DWORD PTR [edx-0x5805b991],ebx
  40bd77:	cmp    dh,bh
  40bd79:	mov    bl,0xeb
  40bd7b:	xchg   BYTE PTR [ebp+ebx*1+0x42db14aa],al
  40bd82:	jne    0x40bdaa
  40bd84:	fwait
  40bd85:	jnp    0x40bd30
  40bd87:	xchg   ebp,eax
  40bd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd89:	sbb    DWORD PTR [ebx],edx
  40bd8b:	pop    es
  40bd8c:	stos   BYTE PTR es:[edi],al
  40bd8d:	push   ebp
  40bd8e:	in     eax,0xff
  40bd90:	mov    bh,0xe0
  40bd92:	pop    ecx
  40bd93:	dec    edi
  40bd94:	push   0x3fc84101
  40bd99:	or     DWORD PTR [ecx+edx*1],eax
  40bd9c:	imul   esi,DWORD PTR [edi],0x1dc908df
  40bda2:	inc    esp
  40bda4:	xchg   ebp,eax
  40bda5:	jb     0x40bdc2
  40bda7:	scas   al,BYTE PTR es:[edi]
  40bda8:	(bad)  
  40bdaa:	adc    eax,0xcb7c10a
  40bdaf:	int3   
  40bdb0:	cdq    
  40bdb1:	fs cmp al,0x54
  40bdb4:	lods   eax,DWORD PTR ds:[esi]
  40bdb5:	fild   QWORD PTR [ebx+0x52c9f4c5]
  40bdbb:	shl    edi,cl
  40bdbd:	xor    ch,bl
  40bdbf:	sti    
  40bdc0:	sti    
  40bdc1:	jbe    0x40be19
  40bdc3:	ss sub eax,0xd60363c1
  40bdc9:	xor    eax,0x83e7db4
  40bdce:	xlat   BYTE PTR ds:[ebx]
  40bdcf:	inc    ebp
  40bdd0:	fisubr WORD PTR [eax+eax*2+0x42]
  40bdd4:	or     BYTE PTR [edi+0x7df3654d],ch
  40bdda:	or     eax,0xd49ab417
  40bddf:	cdq    
  40bde0:	pop    esi
  40bde1:	jecxz  0x40be28
  40bde3:	outs   dx,DWORD PTR ds:[esi]
  40bde4:	adc    eax,edi
  40bde6:	sub    eax,0x3f8dbcd0
  40bdeb:	push   ecx
  40bdec:	div    BYTE PTR [eax+0x152f8da2]
  40bdf2:	push   ecx
  40bdf3:	mov    esp,0x4d63c9f6
  40bdf8:	xchg   esp,eax
  40bdf9:	out    dx,al
  40bdfa:	mov    edi,0x3c34b83f
  40bdff:	pop    esi
  40be00:	xor    al,0x63
  40be02:	imul   BYTE PTR [ebp-0x3a]
  40be05:	shl    DWORD PTR [esi+esi*1+0x47d25114],1
  40be0c:	fldlg2 
  40be0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be0f:	lock xor DWORD PTR [esi+0xf88cfb],edx
  40be16:	lahf   
  40be17:	mov    WORD PTR [ebx],ss
  40be19:	in     al,dx
  40be1a:	nop
  40be1b:	jle    0x40be4d
  40be1d:	mov    al,ds:0x40dd30be
  40be22:	ins    BYTE PTR es:[edi],dx
  40be23:	call   0xb73e:0xac7ab4c5
  40be2a:	call   FWORD PTR [ebp+0x13]
  40be2d:	sysenter 
  40be2f:	jg     0x40bddd
  40be31:	push   ebp
  40be32:	fidiv  DWORD PTR [ebx+0x67]
  40be35:	ja     0x40bdbf
  40be37:	rol    BYTE PTR [edi],0xad
  40be3a:	and    edx,DWORD PTR [edx-0x17]
  40be3d:	ja     0x40be22
  40be3f:	aam    0x24
  40be41:	sub    BYTE PTR [esi+0x78c4e9e1],dh
  40be47:	ror    BYTE PTR [edx+0x3c],1
  40be4a:	jle    0x40be5e
  40be4c:	jmp    0xdf01d10d
  40be51:	aam    0x40
  40be53:	jp     0x40be9d
  40be55:	ffreep st(1)
  40be57:	add    al,dl
  40be59:	imul   ebx,DWORD PTR [ebx-0x5a],0xc7f85e56
  40be60:	test   esp,esp
  40be62:	add    edi,DWORD PTR [ebx+eiz*4+0x1e2b8347]
  40be69:	popa   
  40be6a:	jg     0x40be72
  40be6c:	sbb    BYTE PTR [edi+eiz*1],0xd7
  40be70:	inc    eax
  40be71:	aad    0x22
  40be73:	aad    0x17
  40be75:	add    BYTE PTR [eax+0x26],bl
  40be78:	mov    gs,WORD PTR [edi+0x27]
  40be7b:	push   ebx
  40be7c:	sbb    al,0x1d
  40be7e:	fld    TBYTE PTR [ebx+0x4525b050]
  40be84:	mov    esi,0xfe3854cc
  40be89:	es in  al,dx
  40be8b:	sub    ah,BYTE PTR [eax-0x59b457d3]
  40be91:	pushf  
  40be92:	push   ecx
  40be93:	int    0x29
  40be95:	jge    0x40be71
  40be97:	iret   
  40be98:	data16 daa 
  40be9a:	dec    ebx
  40be9b:	(bad)
  40be9e:	and    al,0x51
  40bea0:	test   DWORD PTR [ebx+0x3e9bb2e],ebx
  40bea6:	sub    ah,ch
  40bea8:	fld    QWORD PTR ds:0x5e8eda11
  40beae:	outs   dx,DWORD PTR ds:[esi]
  40beaf:	loope  0x40bebe
  40beb1:	lods   eax,DWORD PTR ds:[esi]
  40beb2:	nop
  40beb3:	push   esp
  40beb4:	add    cl,dh
  40beb6:	loop   0x40befa
  40beb8:	daa    
  40beb9:	and    eax,0xc043328d
  40bebe:	add    ecx,ecx
  40bec0:	fst    QWORD PTR [edx-0x30f795d5]
  40bec6:	cwde   
  40bec7:	push   0x5
  40bec9:	push   ebx
  40beca:	jg     0x40bf20
  40becc:	pop    ebx
  40becd:	rcr    BYTE PTR [esi],cl
  40becf:	inc    edx
  40bed0:	cmp    esp,DWORD PTR [ebx+edi*1+0x1a]
  40bed4:	bound  eax,QWORD PTR [edx+0x55]
  40bed7:	pop    ds
  40bed8:	push   es
  40bed9:	mov    BYTE PTR [edx+0x5b149fa4],dl
  40bedf:	pop    ebx
  40bee0:	(bad)  
  40bee1:	mov    bh,0x58
  40bee3:	xchg   ecx,eax
  40bee4:	mov    di,0xc6ab
  40bee8:	xchg   BYTE PTR [edi],ah
  40beea:	and    esp,DWORD PTR [esi]
  40beec:	or     eax,0x2c934708
  40bef1:	and    BYTE PTR [ecx],0x3d
  40bef4:	ja     0x40bf66
  40bef6:	jge    0x40bf15
  40bef8:	mov    BYTE PTR [esi-0x526cf8b8],bl
  40befe:	inc    edx
  40beff:	dec    ebp
  40bf00:	les    ecx,FWORD PTR [edx+ecx*8]
  40bf03:	fwait
  40bf04:	cmp    eax,0xfe63a80f
  40bf09:	mov    edx,0x50f94a3
  40bf0e:	dec    ebp
  40bf0f:	or     al,0x19
  40bf11:	mov    dh,0x34
  40bf13:	loopne 0x40bf88
  40bf15:	dec    ebx
  40bf16:	scas   al,BYTE PTR es:[edi]
  40bf17:	out    0x87,eax
  40bf19:	bnd jmp 0x40bf06
  40bf1c:	icebp  
  40bf1d:	jns    0x40bf5a
  40bf1f:	into   
  40bf20:	lods   eax,DWORD PTR ds:[esi]
  40bf21:	and    al,bh
  40bf23:	adc    al,0x15
  40bf25:	popa   
  40bf26:	sahf   
  40bf27:	or     al,0x87
  40bf29:	xchg   ebp,eax
  40bf2a:	call   0x7dff8b8f
  40bf2f:	pop    ecx
  40bf30:	sbb    BYTE PTR [esi-0x72800844],al
  40bf36:	adc    bh,BYTE PTR [ebp+0x2e]
  40bf39:	sbb    BYTE PTR [edi+0x43],dl
  40bf3c:	lods   eax,DWORD PTR ds:[esi]
  40bf3d:	and    DWORD PTR [edx+0x5ba4e332],edi
  40bf43:	xor    DWORD PTR [ebx],esi
  40bf45:	sbb    BYTE PTR [ecx],bl
  40bf47:	loope  0x40bf11
  40bf49:	hlt    
  40bf4a:	sbb    cl,BYTE PTR [esi]
  40bf4c:	add    cl,0x62
  40bf4f:	sbb    dh,BYTE PTR [ecx+0x4a]
  40bf52:	xor    al,0xc
  40bf54:	aaa    
  40bf55:	inc    edi
  40bf56:	ror    ebx,0x9
  40bf59:	shr    BYTE PTR [ecx+0x4014f216],cl
  40bf5f:	or     DWORD PTR [edi],edi
  40bf61:	jo     0x40bfa0
  40bf63:	shl    DWORD PTR [edx-0x1d],1
  40bf66:	fwait
  40bf67:	xchg   edx,eax
  40bf68:	jo     0x40bf08
  40bf6a:	mov    es,WORD PTR [esi+ecx*4]
  40bf6d:	push   0xffffffc1
  40bf6f:	push   0xffffffa6
  40bf71:	push   es
  40bf72:	dec    edi
  40bf73:	mov    BYTE PTR ss:[ebx+0x5e],ah
  40bf77:	test   eax,0x240b4d9e
  40bf7c:	inc    BYTE PTR [edx]
  40bf7e:	fwait
  40bf7f:	retf   0x297f
  40bf82:	cli    
  40bf83:	xchg   esp,eax
  40bf84:	pop    esp
  40bf85:	xor    eax,0x2e93097e
  40bf8a:	gs adc ah,bh
  40bf8d:	push   ss
  40bf8e:	fild   DWORD PTR [ecx]
  40bf90:	mov    dh,0xd8
  40bf92:	jne    0x40bffc
  40bf94:	cmp    al,0xbf
  40bf96:	dec    ecx
  40bf97:	or     ah,BYTE PTR [ebp+0x32]
  40bf9a:	rcl    BYTE PTR [edi-0x1f38256b],1
  40bfa0:	or     dl,BYTE PTR [eax]
  40bfa2:	scas   eax,DWORD PTR es:[edi]
  40bfa3:	dec    eax
  40bfa4:	mov    ecx,0xc1cb73cb
  40bfa9:	fisubr WORD PTR [ebx]
  40bfab:	xchg   edi,eax
  40bfac:	sahf   
  40bfad:	push   ss
  40bfae:	xchg   esp,eax
  40bfaf:	dec    ebp
  40bfb0:	or     al,0x43
  40bfb2:	pop    edx
  40bfb3:	mov    edi,0xf83cde81
  40bfb8:	jno    0x40bf72
  40bfba:	xor    ecx,DWORD PTR [ecx+0x79]
  40bfbd:	and    DWORD PTR [edi-0x2366d4b],0x35346b82
  40bfc7:	stos   DWORD PTR es:[edi],eax
  40bfc8:	jle    0x40bfa3
  40bfca:	lds    ecx,FWORD PTR [edi-0x80]
  40bfcd:	pop    esi
  40bfce:	std    
  40bfcf:	mov    al,ds:0xd3a3fc3
  40bfd4:	or     BYTE PTR [ecx-0x5d],al
  40bfd7:	leave  
  40bfd8:	dec    ecx
  40bfd9:	add    eax,0x6c6bf5cf
  40bfde:	cmp    al,0xe0
  40bfe0:	push   edx
  40bfe1:	sti    
  40bfe2:	iret   
  40bfe3:	adc    eax,0x4a593c84
  40bfe8:	out    dx,al
  40bfe9:	fwait
  40bfea:	outs   dx,BYTE PTR ds:[esi]
  40bfeb:	mov    dl,0xd2
  40bfed:	mov    ebx,0x8ac2c344
  40bff2:	pop    edi
  40bff3:	push   ds
  40bff4:	lods   eax,DWORD PTR ds:[esi]
  40bff5:	lock or eax,0x30cf862a
  40bffb:	shr    DWORD PTR [edx+ebx*4],1
  40bffe:	inc    ebx
  40bfff:	cmp    ch,bh
  40c001:	push   es
  40c002:	add    esp,ebx
  40c004:	mov    dh,0x5d
  40c006:	mov    eax,ds:0xd487a133
  40c00b:	push   esp
  40c00c:	push   ds
  40c00d:	dec    ecx
  40c00e:	fistp  WORD PTR [ebp+edi*1-0x369bd86]
  40c015:	lahf   
  40c016:	sub    BYTE PTR [edx+0x46],dh
  40c019:	sahf   
  40c01a:	xchg   edi,eax
  40c01b:	mov    ds:0x4fcbb208,al
  40c020:	push   0xffffff8a
  40c022:	dec    ebx
  40c023:	inc    ebx
  40c024:	push   ebp
  40c025:	or     ah,BYTE PTR [eax+0xa]
  40c028:	adc    al,BYTE PTR [eax+0x5f]
  40c02b:	in     eax,dx
  40c02c:	sahf   
  40c02d:	and    BYTE PTR [ebx+0x10],ch
  40c030:	ins    BYTE PTR es:[edi],dx
  40c031:	xor    edi,DWORD PTR [eax+eiz*1]
  40c034:	in     eax,0xb3
  40c036:	pushf  
  40c037:	div    esi
  40c039:	scas   al,BYTE PTR es:[edi]
  40c03a:	popf   
  40c03b:	into   
  40c03c:	xchg   esi,eax
  40c03d:	push   edi
  40c03e:	in     eax,dx
  40c03f:	xor    al,BYTE PTR [eax]
  40c041:	mov    al,0xf
  40c043:	push   edi
  40c044:	xchg   ebp,eax
  40c045:	mov    bh,0x7c
  40c047:	ror    cl,1
  40c049:	dec    esp
  40c04a:	ds loope 0x40c055
  40c04d:	cmp    DWORD PTR [esi+0x43],ebp
  40c050:	jo     0x40bffd
  40c052:	or     dh,BYTE PTR [ecx]
  40c054:	pop    esi
  40c055:	inc    ecx
  40c056:	sbb    DWORD PTR [edx+ebp*2],ebp
  40c059:	nop
  40c05a:	scas   eax,DWORD PTR es:[edi]
  40c05b:	fistp  DWORD PTR [esp+edi*8-0xe7c5627]
  40c062:	(bad)
  40c065:	ret    0x3590
  40c068:	scas   al,BYTE PTR es:[edi]
  40c069:	inc    edx
  40c06a:	(bad)  
  40c06c:	push   0x41
  40c06e:	mov    bh,0x6b
  40c070:	inc    ebp
  40c071:	stos   BYTE PTR es:[edi],al
  40c072:	jg     0x40c054
  40c074:	scas   al,BYTE PTR es:[edi]
  40c075:	cli    
  40c076:	inc    ecx
  40c077:	lods   eax,DWORD PTR gs:[esi]
  40c079:	test   eax,0xf468a416
  40c07e:	jns    0x40c07c
  40c080:	xor    ecx,ebx
  40c082:	(bad)  
  40c083:	ror    BYTE PTR [ebx-0x69],1
  40c086:	(bad)  
  40c087:	push   ds
  40c088:	mov    BYTE PTR [ebx],0xf4
  40c08b:	fs dec cl
  40c08e:	sar    BYTE PTR [edx],0x2c
  40c091:	add    DWORD PTR [ebp+0x56589be3],ebp
  40c097:	sub    DWORD PTR [ebx+eax*4+0x60],esp
  40c09b:	aas    
  40c09c:	outs   dx,BYTE PTR ds:[esi]
  40c09d:	cld    
  40c09e:	xchg   esi,eax
  40c09f:	daa    
  40c0a0:	in     al,0x62
  40c0a2:	cs stos DWORD PTR es:[edi],eax
  40c0a4:	cmp    al,0xf3
  40c0a6:	dec    ecx
  40c0a7:	sub    DWORD PTR [esi+esi*1-0x23],edx
  40c0ab:	mov    DWORD PTR [ebp+0x683b356c],ebx
  40c0b1:	jmp    0x40c126
  40c0b3:	push   eax
  40c0b4:	cmp    dl,dl
  40c0b6:	je     0x40c0d6
  40c0b8:	xor    al,0xa2
  40c0ba:	mov    ah,0x3f
  40c0bc:	pusha  
  40c0bd:	inc    ebp
  40c0be:	push   ds
  40c0bf:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c0c1:	pop    ebp
  40c0c2:	sti    
  40c0c3:	imul   edi,DWORD PTR [edx-0xed41c0b],0xd
  40c0ca:	in     al,0x59
  40c0cc:	mov    ebx,0xc7e3fa65
  40c0d1:	stos   BYTE PTR es:[edi],al
  40c0d2:	repnz sbb al,0xe3
  40c0d5:	mov    ah,0x37
  40c0d7:	mov    bh,bh
  40c0d9:	jmp    0x40c07a
  40c0db:	pop    edi
  40c0dc:	pop    edi
  40c0dd:	or     eax,0x9eec0b61
  40c0e2:	into   
  40c0e3:	and    BYTE PTR [eax-0x15],dh
  40c0e6:	dec    edi
  40c0e7:	xchg   esi,eax
  40c0e8:	dec    eax
  40c0e9:	push   ebx
  40c0ea:	das    
  40c0eb:	mov    esp,0x9874224e
  40c0f0:	and    al,0x7c
  40c0f2:	mov    ?,WORD PTR [esi]
  40c0f4:	xchg   ebp,eax
  40c0f5:	inc    esp
  40c0f6:	push   0xa20b8134
  40c0fb:	(bad)  
  40c0fc:	sahf   
  40c0fd:	lods   eax,DWORD PTR ds:[esi]
  40c0fe:	cdq    
  40c0ff:	mov    edx,0x2022588b
  40c104:	xchg   esp,eax
  40c105:	shl    edx,0x2e
  40c108:	or     eax,DWORD PTR [eax+0x53375f97]
  40c10e:	test   al,0xfa
  40c110:	inc    ebp
  40c111:	les    edi,FWORD PTR [edi]
  40c113:	add    DWORD PTR [edi+ebx*1],ebx
  40c116:	sub    al,0x93
  40c118:	aad    0x70
  40c11a:	cmp    bh,al
  40c11c:	dec    edx
  40c11d:	es pop edi
  40c11f:	dec    ecx
  40c120:	or     edi,ecx
  40c122:	and    eax,0xa90a5365
  40c127:	inc    ebp
  40c128:	lods   al,BYTE PTR ds:[esi]
  40c129:	dec    ebp
  40c12a:	push   edi
  40c12b:	and    BYTE PTR [eax],ch
  40c12d:	sbb    al,0xf5
  40c12f:	aam    0xe1
  40c131:	xor    al,0xf4
  40c133:	ss (bad) 
  40c136:	ss xor dh,cl
  40c139:	jge    0x40c1a4
  40c13b:	xchg   ecx,eax
  40c13c:	aam    0xc7
  40c13e:	xor    eax,0x29b88a7c
  40c143:	ret    0x61
  40c146:	lock aaa 
  40c148:	fistp  DWORD PTR [edx-0x31]
  40c14b:	pop    ecx
  40c14c:	outs   dx,BYTE PTR ds:[esi]
  40c14d:	mov    ds:0x52b448a9,eax
  40c152:	mov    edx,edi
  40c154:	xor    ebx,DWORD PTR [ecx-0x2a]
  40c157:	push   cs
  40c158:	cmp    DWORD PTR [edx],esp
  40c15a:	imul   esi,DWORD PTR [ecx+0x2e],0xbcd2e247
  40c161:	and    eax,0x2ecbbe3
  40c166:	outs   dx,DWORD PTR ds:[esi]
  40c167:	xlat   BYTE PTR ds:[ebx]
  40c168:	jne    0x40c0f7
  40c16a:	mov    esp,0xd9e08d0d
  40c16f:	fs pop ss
  40c171:	xor    ebx,DWORD PTR [eax+eiz*2+0x3f]
  40c175:	lahf   
  40c176:	mov    dl,0x2c
  40c178:	or     eax,0x83da462f
  40c17d:	aaa    
  40c17e:	inc    edx
  40c17f:	cmp    al,BYTE PTR [edx-0x71348807]
  40c185:	xor    al,0x34
  40c187:	pusha  
  40c188:	sub    BYTE PTR [edi-0x7fa383c7],0xbe
  40c18f:	les    ebx,FWORD PTR [ebx]
  40c191:	fstp   QWORD PTR [ebx+0x74]
  40c194:	pop    ebx
  40c195:	adc    edx,ebx
  40c197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c198:	cmp    eax,DWORD PTR ss:[edi+0xd]
  40c19c:	out    0xf0,eax
  40c19e:	xchg   edi,eax
  40c19f:	repnz mov cl,BYTE PTR ds:0x81b2486b
  40c1a6:	(bad)  [esi+0x7572d9a8]
  40c1ac:	xor    BYTE PTR [eax-0x36],cl
  40c1af:	adc    al,0x70
  40c1b1:	mov    bh,0x24
  40c1b3:	cli    
  40c1b4:	cmp    BYTE PTR [ebx+0x76289c4f],0x22
  40c1bb:	iret   
  40c1bc:	test   cl,cl
  40c1be:	jo     0x40c23a
  40c1c0:	je     0x40c148
  40c1c2:	popa   
  40c1c3:	lock pop edx
  40c1c5:	push   ebp
  40c1c6:	pop    ss
  40c1c7:	cmp    eax,DWORD PTR [ebp-0x79ee8274]
  40c1cd:	or     cl,BYTE PTR [ebx+ecx*4-0x26edb9e9]
  40c1d4:	retf   0xca15
  40c1d7:	fisub  WORD PTR [edx-0x37]
  40c1da:	lds    edi,FWORD PTR [ecx+0x69f816cd]
  40c1e0:	jnp    0x40c200
  40c1e2:	adc    DWORD PTR [edx+edi*4],0xf2841d9d
  40c1e9:	shr    DWORD PTR [edx+0x4e5147a5],0x90
  40c1f0:	push   ebp
  40c1f1:	inc    ebx
  40c1f2:	xchg   ebx,eax
  40c1f3:	add    al,0xe6
  40c1f5:	rcr    DWORD PTR [edx-0x26],cl
  40c1f8:	jns    0x40c217
  40c1fa:	cmp    BYTE PTR [eax+0x5c],0xb7
  40c1fe:	pusha  
  40c1ff:	jns    0x40c26a
  40c201:	fwait
  40c202:	bound  esi,QWORD PTR [eax+0x4b99c27c]
  40c208:	ja     0x40c1bc
  40c20a:	adc    al,al
  40c20c:	inc    edi
  40c20d:	xor    eax,0x266da5d1
  40c212:	das    
  40c213:	xor    BYTE PTR [edi],dh
  40c215:	in     eax,dx
  40c216:	mov    dh,0xfa
  40c218:	std    
  40c219:	mov    ds:0x6615a75e,eax
  40c21e:	jmp    0x40c1c0
  40c220:	inc    eax
  40c221:	and    al,0xb2
  40c223:	mov    eax,ds:0xdebbbdfb
  40c228:	out    0x80,eax
  40c22a:	pop    es
  40c22b:	jns    0x40c24a
  40c22d:	xor    edx,DWORD PTR [edx+esi*4+0xb2ca02f]
  40c234:	xor    DWORD PTR [edx],edx
  40c236:	scas   al,BYTE PTR es:[edi]
  40c237:	push   0xffffffa8
  40c239:	stos   DWORD PTR es:[edi],eax
  40c23a:	int    0xc8
  40c23c:	xchg   ch,bh
  40c23e:	scas   al,BYTE PTR es:[edi]
  40c23f:	cmp    eax,0xa177c72d
  40c244:	pop    eax
  40c245:	push   esi
  40c246:	jae    0x40c26b
  40c248:	jl     0x40c282
  40c24a:	push   0xfffffff6
  40c24c:	into   
  40c24d:	dec    ebx
  40c24e:	inc    ebp
  40c24f:	adc    DWORD PTR [ebx-0x46],eax
  40c252:	fdivr  QWORD PTR [edi]
  40c254:	cli    
  40c255:	pxor   mm4,QWORD PTR [edi]
  40c258:	add    eax,0xa84d0af1
  40c25d:	adc    DWORD PTR [edx],ebp
  40c25f:	dec    ebp
  40c260:	sti    
  40c261:	push   esp
  40c262:	out    0xc5,al
  40c264:	or     DWORD PTR [ebx-0x48de0aa1],ebp
  40c26a:	cld    
  40c26b:	cmp    DWORD PTR [ebx],0x2e2b45a
  40c271:	push   es
  40c272:	dec    edi
  40c273:	arpl   WORD PTR [esi-0x21],bx
  40c276:	add    DWORD PTR [ebx-0x1fdcb2e9],ebp
  40c27c:	inc    esp
  40c27d:	daa    
  40c27e:	cwde   
  40c27f:	fwait
  40c280:	inc    ebx
  40c281:	fisttp QWORD PTR [ebp+0x278a488]
  40c287:	popa   
  40c288:	sar    esi,cl
  40c28a:	lods   eax,DWORD PTR ds:[esi]
  40c28b:	stos   BYTE PTR es:[edi],al
  40c28c:	push   0xd
  40c28e:	sbb    dh,BYTE PTR [esi+0x76]
  40c291:	jnp    0x40c26a
  40c293:	jae    0x40c2a3
  40c295:	cmp    bh,0x7e
  40c298:	xchg   ebx,eax
  40c299:	ret    
  40c29a:	or     eax,0x3fdd139c
  40c29f:	mov    edi,0x4a0d34a
  40c2a4:	ja     0x40c2c3
  40c2a6:	aam    0xc2
  40c2a8:	test   DWORD PTR [ebp-0x2f849665],eax
  40c2ae:	xchg   esp,eax
  40c2af:	pop    ebp
  40c2b0:	aad    0x1a
  40c2b2:	sbb    edx,DWORD PTR [edi-0x65]
  40c2b5:	sbb    ecx,ebp
  40c2b7:	sub    eax,0xb441cb2b
  40c2bc:	lds    ebx,FWORD PTR [edi+0xb]
  40c2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c0:	ds retf 
  40c2c2:	lahf   
  40c2c3:	cmc    
  40c2c4:	sbb    edx,esi
  40c2c6:	nop
  40c2c7:	test   eax,0xb58ab113
  40c2cc:	dec    ecx
  40c2cd:	cdq    
  40c2ce:	dec    edi
  40c2cf:	retf   0xeae7
  40c2d2:	sub    BYTE PTR [ecx+ebp*8-0x5a862244],ch
  40c2d9:	dec    ebx
  40c2da:	xchg   esi,eax
  40c2db:	cmc    
  40c2dc:	rcr    BYTE PTR [esi],cl
  40c2de:	sbb    BYTE PTR [ecx+0xd],ch
  40c2e1:	mov    WORD PTR [ebp+0x9],?
  40c2e4:	test   al,0x32
  40c2e6:	inc    ebx
  40c2e7:	sub    BYTE PTR [edi-0x1e12985d],bh
  40c2ed:	cmp    eax,0x81d126a0
  40c2f2:	dec    eax
  40c2f3:	ret    
  40c2f4:	fidivr DWORD PTR [esi+0x7b]
  40c2f7:	inc    eax
  40c2f8:	enterw 0x1c55,0x68
  40c2fd:	push   cs
  40c2fe:	repnz xor DWORD PTR [edx],edi
  40c301:	cdq    
  40c302:	xchg   edx,eax
  40c303:	push   ds
  40c304:	test   eax,0xce771cbc
  40c309:	out    0x0,al
  40c30b:	test   bh,dl
  40c30d:	pushf  
  40c30e:	icebp  
  40c30f:	mov    al,BYTE PTR [edi]
  40c311:	icebp  
  40c312:	adc    esi,DWORD PTR [edi+0x75]
  40c315:	not    edi
  40c317:	adc    eax,0x8fa37cb
  40c31c:	jp     0x40c341
  40c31e:	jno    0x40c2c1
  40c320:	dec    ebp
  40c321:	(bad)  
  40c322:	iret   
  40c323:	lea    eax,[eax-0x5f]
  40c326:	cmp    eax,0xe5d8721f
  40c32b:	gs inc edi
  40c32d:	clc    
  40c32e:	sahf   
  40c32f:	sbb    esi,esi
  40c331:	loopne 0x40c2c4
  40c333:	jl     0x40c3b0
  40c335:	aaa    
  40c336:	push   esp
  40c337:	rcr    DWORD PTR [esp+edi*1+0x5c],cl
  40c33b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c33c:	xchg   ebx,eax
  40c33d:	lea    ebp,[eax*4-0x54178fc]
  40c344:	int3   
  40c345:	xchg   edi,eax
  40c346:	std    
  40c347:	ror    DWORD PTR [ebp+0x69],1
  40c34a:	(bad)  
  40c34b:	in     eax,dx
  40c34c:	clc    
  40c34d:	jnp    0x40c39a
  40c34f:	mov    bl,0xf
  40c351:	push   ss
  40c352:	jbe    0x40c2e7
  40c354:	cld    
  40c355:	cmp    al,0x5b
  40c357:	lock nop
  40c359:	push   cs
  40c35a:	ss xor al,0x34
  40c35d:	lods   eax,DWORD PTR ds:[esi]
  40c35e:	mov    ds:0x25258a93,eax
  40c363:	push   edx
  40c364:	xchg   ecx,eax
  40c365:	xchg   edx,eax
  40c366:	or     BYTE PTR [edx-0x7c],cl
  40c369:	push   ds
  40c36a:	jp     0x40c3b0
  40c36c:	xchg   ebp,eax
  40c36d:	mov    ds:0x9c7c075,al
  40c372:	or     BYTE PTR [esi+0x3675c1fa],0xcb
  40c379:	in     eax,dx
  40c37a:	out    0xd,eax
  40c37c:	sar    bl,0x4f
  40c37f:	lahf   
  40c380:	ins    DWORD PTR es:[edi],dx
  40c381:	fmul   QWORD PTR [ecx+0x1343c3dc]
  40c387:	cmp    BYTE PTR [esp+edx*4+0x5c],0x61
  40c38c:	mov    ds:0x9bd8e048,eax
  40c391:	xor    al,0x87
  40c393:	jae    0x40c3d3
  40c395:	mov    bh,BYTE PTR [edi+0x4d97eebf]
  40c39b:	lea    esi,[esp+eax*2-0xa]
  40c39f:	ror    cl,0x47
  40c3a2:	fisttp WORD PTR [bx+di+0x12]
  40c3a6:	std    
  40c3a7:	loope  0x40c33f
  40c3a9:	fmul   QWORD PTR [edx-0x49]
  40c3ac:	lahf   
  40c3ad:	rcr    BYTE PTR [edi+edi*8+0x2dadbc8],cl
  40c3b4:	loopne 0x40c36d
  40c3b6:	out    dx,eax
  40c3b7:	and    dl,ch
  40c3b9:	out    0x8f,eax
  40c3bb:	fisub  WORD PTR [ecx-0x18362b8d]
  40c3c1:	xor    DWORD PTR ss:[esi],ebx
  40c3c4:	push   0x7837c940
  40c3c9:	test   BYTE PTR [eax-0x26923242],dh
  40c3cf:	adc    DWORD PTR [eax-0x3b0095cc],ebp
  40c3d5:	out    0xe5,al
  40c3d7:	test   al,0x14
  40c3d9:	in     eax,dx
  40c3da:	sbb    DWORD PTR [ebx+0x1e],ecx
  40c3dd:	out    0xd3,eax
  40c3df:	leave  
  40c3e0:	xchg   ebp,eax
  40c3e1:	ror    cl,0x16
  40c3e4:	(bad)  
  40c3e5:	and    dh,BYTE PTR [edx+ebx*2]
  40c3e8:	add    bl,bh
  40c3ea:	fadd   QWORD PTR [edx-0x1c71a5cb]
  40c3f0:	clc    
  40c3f1:	mov    bl,0x75
  40c3f3:	or     al,0xb7
  40c3f5:	jle    0x40c396
  40c3f7:	cwde   
  40c3f8:	mov    bl,0x68
  40c3fa:	pop    esi
  40c3fb:	shl    BYTE PTR [edi+0x140d0c90],1
  40c401:	scas   al,BYTE PTR es:[edi]
  40c402:	retf   0xd514
  40c405:	inc    esi
  40c406:	push   edi
  40c407:	cmc    
  40c408:	pop    ss
  40c409:	lock dec esp
  40c40b:	jb     0x40c406
  40c40d:	or     eax,0xd3760360
  40c412:	hlt    
  40c413:	imul   esi,esp,0xdbf3ca9d
  40c419:	in     al,0x5c
  40c41b:	mov    edx,0x2126c55f
  40c420:	cwde   
  40c421:	inc    ebp
  40c422:	out    0x40,eax
  40c424:	dec    ebx
  40c425:	sbb    esi,DWORD PTR [esi-0x32fe5203]
  40c42b:	push   eax
  40c42c:	sub    al,0x26
  40c42e:	adc    ebx,DWORD PTR [ebx+ebx*1]
  40c431:	mov    esp,DWORD PTR [ebx-0x18c5dbb5]
  40c437:	clc    
  40c438:	mov    edi,0xe5caa922
  40c43d:	mov    cs,WORD PTR [ebp-0x67e39d68]
  40c443:	xor    BYTE PTR [ecx],bh
  40c445:	inc    ecx
  40c446:	mov    dl,0xb0
  40c448:	jnp    0x40c46d
  40c44a:	sbb    eax,0xadc7a776
  40c44f:	mov    DWORD PTR [ecx-0x65],ebx
  40c452:	lods   al,BYTE PTR ds:[esi]
  40c453:	mov    al,0x57
  40c455:	push   ss
  40c456:	lods   al,BYTE PTR ds:[esi]
  40c457:	imul   ecx,DWORD PTR [esi+0x6c],0x9672cbfd
  40c45e:	pop    edi
  40c45f:	jge    0x40c408
  40c461:	nop
  40c462:	dec    eax
  40c463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c464:	push   cs
  40c465:	xchg   ecx,eax
  40c466:	popa   
  40c467:	inc    ebx
  40c468:	test   bl,dl
  40c46a:	(bad)  
  40c46c:	rol    edx,0x92
  40c46f:	fld    DWORD PTR [eax+0x5310e073]
  40c475:	outs   dx,BYTE PTR ds:[esi]
  40c476:	clc    
  40c477:	push   ss
  40c478:	xor    DWORD PTR [eax+eax*1],0x6a5ed00d
  40c47f:	push   esp
  40c480:	stos   BYTE PTR es:[edi],al
  40c481:	mov    al,ch
  40c483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c484:	retf   0x66b5
  40c487:	cmp    DWORD PTR [ebx+eax*2],edi
  40c48a:	inc    ecx
  40c48b:	bound  eax,QWORD PTR [edx]
  40c48d:	cdq    
  40c48e:	cli    
  40c48f:	(bad)  
  40c490:	sbb    DWORD PTR [ebx],esp
  40c492:	fldcw  WORD PTR [esi+0x2ff3f2f6]
  40c498:	fldenv [ecx-0x7fa43cb8]
  40c49e:	test   al,0x14
  40c4a0:	and    ah,BYTE PTR [ebx]
  40c4a2:	cmp    BYTE PTR [edi],0xb1
  40c4a5:	(bad)  
  40c4a6:	push   ds
  40c4a7:	sbb    eax,DWORD PTR [ebp-0x25]
  40c4aa:	out    dx,eax
  40c4ab:	retf   
  40c4ac:	test   dl,0xa6
  40c4af:	mov    ds:0x461b0654,al
  40c4b4:	adc    dh,BYTE PTR [ebp-0x2aecd958]
  40c4ba:	xor    cl,BYTE PTR [ebx-0x5383d9f7]
  40c4c0:	adc    al,0x3d
  40c4c2:	leave  
  40c4c3:	std    
  40c4c4:	(bad)  
  40c4c5:	xor    edx,DWORD PTR [ecx-0x1daaa627]
  40c4cb:	ins    DWORD PTR es:[edi],dx
  40c4cc:	cwde   
  40c4cd:	mov    ebx,0x13382430
  40c4d2:	mov    edx,0xa481e730
  40c4d7:	sbb    eax,0xf9a4bcdc
  40c4dc:	push   eax
  40c4dd:	lea    esi,[ecx+0x22]
  40c4e0:	clc    
  40c4e1:	mov    esp,0x23ddef87
  40c4e6:	pop    esi
  40c4e7:	xor    DWORD PTR [ecx+0x3],0x34f55202
  40c4ee:	adc    al,0x97
  40c4f0:	mov    DWORD PTR [edx],ecx
  40c4f2:	sub    esi,DWORD PTR [ebx]
  40c4f4:	fadd   QWORD PTR [ebx-0x38]
  40c4f7:	inc    edi
  40c4f8:	nop
  40c4f9:	in     eax,0x9c
  40c4fb:	dec    ebx
  40c4fc:	cmp    ch,BYTE PTR [ecx]
  40c4fe:	test   DWORD PTR [edx+eax*2],ebp
  40c501:	sub    BYTE PTR [ecx+eiz*4],0xe6
  40c505:	mov    ah,0x3f
  40c507:	sbb    ebp,0x62
  40c50a:	test   ebx,ecx
  40c50c:	xchg   DWORD PTR [edi],edi
  40c50e:	bound  ebp,QWORD PTR [ecx]
  40c510:	leave  
  40c511:	sbb    ah,BYTE PTR [ecx+edi*1-0x3e]
  40c515:	inc    ebp
  40c516:	(bad)  
  40c517:	and    al,0x57
  40c519:	leave  
  40c51a:	sar    DWORD PTR [edx-0x589dd41a],0xbf
  40c521:	es lahf 
  40c523:	in     al,dx
  40c524:	addr16 cmp ch,bh
  40c527:	xchg   ebx,eax
  40c528:	rcl    ecx,1
  40c52a:	and    eax,0x10f77d84
  40c52f:	imul   ebp,DWORD PTR [esi+ebp*4-0x65cd84ad],0xffffffa7
  40c537:	int    0x2e
  40c539:	xchg   edi,eax
  40c53a:	xchg   edi,eax
  40c53b:	fsub   QWORD PTR [ecx+esi*8-0x48a74687]
  40c542:	icebp  
  40c543:	inc    ebp
  40c544:	mov    eax,0x81c500fd
  40c549:	call   0xe912:0x2c5b8f0b
  40c550:	push   eax
  40c551:	mov    fs,WORD PTR [edi+0x76b6a9de]
  40c557:	cdq    
  40c558:	sub    DWORD PTR [ebp-0x1c882e03],eax
  40c55e:	je     0x40c528
  40c560:	jmp    0x40c529
  40c562:	daa    
  40c563:	sub    al,BYTE PTR [edx]
  40c565:	lds    esp,FWORD PTR [edi]
  40c567:	test   DWORD PTR [ebx+0x38926800],esp
  40c56d:	in     eax,dx
  40c56e:	daa    
  40c56f:	and    DWORD PTR [ebp-0x750309bf],0x26
  40c576:	mov    ebp,0x3aac6896
  40c57b:	es std 
  40c57d:	imul   eax,DWORD PTR es:[ecx+ebp*4+0x56],0x1b
  40c583:	fs jg  0x40c55b
  40c586:	addr16 jbe 0x40c5d2
  40c589:	test   eax,0xf37bffc3
  40c58e:	ins    DWORD PTR es:[edi],dx
  40c58f:	push   es
  40c590:	jmp    0xc790:0xf958b5e1
  40c597:	loop   0x40c596
  40c599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c59a:	mov    cl,0xce
  40c59c:	jge    0x40c534
  40c59e:	leave  
  40c59f:	push   ebx
  40c5a0:	imul   ebp,DWORD PTR [edx+0x12bbb932],0x98f46a17
  40c5aa:	and    al,0x32
  40c5ac:	mov    dh,0x8a
  40c5ae:	(bad)  
  40c5af:	xchg   cl,dh
  40c5b1:	xchg   esp,eax
  40c5b2:	xchg   edi,eax
  40c5b3:	into   
  40c5b4:	dec    edi
  40c5b5:	into   
  40c5b6:	scas   al,BYTE PTR es:[edi]
  40c5b7:	les    ebp,FWORD PTR [ebp-0x420cefd6]
  40c5bd:	sahf   
  40c5be:	inc    ebp
  40c5bf:	clc    
  40c5c0:	xchg   ebx,eax
  40c5c1:	inc    ebp
  40c5c2:	aaa    
  40c5c3:	es mov eax,0x9c6eda51
  40c5c9:	add    al,0xdc
  40c5cb:	outs   dx,DWORD PTR ds:[esi]
  40c5cc:	popa   
  40c5cd:	ret    
  40c5ce:	jg     0x40c633
  40c5d0:	js     0x40c61f
  40c5d2:	mov    es,WORD PTR [edx+ebx*2-0xb]
  40c5d6:	sahf   
  40c5d7:	dec    ecx
  40c5d8:	add    dl,BYTE PTR [eax+ebx*1-0x5b]
  40c5dc:	adc    eax,0xb523dc35
  40c5e1:	outs   dx,DWORD PTR ds:[esi]
  40c5e2:	pop    ebx
  40c5e3:	xor    eax,0xc0d57c4d
  40c5e8:	sahf   
  40c5e9:	sbb    DWORD PTR [ecx+0x74b830f8],esp
  40c5ef:	clc    
  40c5f0:	into   
  40c5f1:	jnp    0x40c668
  40c5f3:	(bad)  
  40c5f4:	cmp    DWORD PTR ss:[esi-0x5949bca7],ebx
  40c5fb:	int    0x6d
  40c5fd:	stc    
  40c5fe:	in     eax,dx
  40c5ff:	push   0x66ba9cd
  40c604:	arpl   WORD PTR [ebp-0x437b7861],bx
  40c60a:	in     eax,0xa6
  40c60c:	mov    BYTE PTR ds:0x6ef7f76d,cl
  40c612:	sbb    ah,ch
  40c614:	in     al,dx
  40c615:	adc    DWORD PTR [edx+0x70],ebx
  40c618:	(bad)  
  40c619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c61a:	and    DWORD PTR cs:[esi-0x4a],ecx
  40c61e:	push   ds
  40c61f:	mov    eax,ds:0xdbfcb1b1
  40c624:	pop    esi
  40c625:	mov    dl,0xa5
  40c627:	popf   
  40c628:	add    cl,BYTE PTR [esi]
  40c62a:	out    dx,eax
  40c62b:	jmp    0x40c6a2
  40c62d:	jmp    0x2792248
  40c632:	sub    BYTE PTR ds:0x6aecfccb,dl
  40c638:	loopne 0x40c5c2
  40c63a:	in     al,0x3
  40c63c:	xor    cl,dh
  40c63e:	loopne 0x40c670
  40c640:	and    ebp,edi
  40c642:	and    esp,DWORD PTR [eax-0xd]
  40c645:	or     eax,0x86b161b8
  40c64a:	push   edx
  40c64b:	jns    0x40c623
  40c64d:	mov    BYTE PTR [edx+0x64],bl
  40c650:	test   BYTE PTR [eax-0x1a930143],dh
  40c656:	not    BYTE PTR [esi+0x26a78a1f]
  40c65c:	ins    BYTE PTR es:[di],dx
  40c65e:	push   edx
  40c65f:	aam    0x9c
  40c661:	push   cs
  40c662:	xchg   DWORD PTR [edx-0xda16888],ebp
  40c668:	mov    eax,0xc73fb41c
  40c66d:	mov    es:0x1e001c5e,al
  40c673:	retf   0xeb86
  40c676:	push   edi
  40c677:	xchg   ebx,eax
  40c678:	push   eax
  40c679:	push   edx
  40c67a:	xchg   BYTE PTR [esi+esi*4],al
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	cs dec ebx
  40c680:	cli    
  40c681:	pop    ss
  40c682:	bound  esp,QWORD PTR [ecx-0xc9b8147]
  40c688:	and    BYTE PTR [ebp*2+0x37f7ff41],dh
  40c68f:	sbb    al,0xf9
  40c691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c692:	xchg   ecx,eax
  40c693:	div    DWORD PTR [ebp-0x1439e13d]
  40c699:	repnz test DWORD PTR [eax-0x57cd2003],eax
  40c6a0:	lahf   
  40c6a1:	jmp    0x6780:0x5baaca7e
  40c6a8:	jmp    0x40c683
  40c6aa:	pop    es
  40c6ab:	xchg   DWORD PTR [eax-0x6436d5d3],esi
  40c6b1:	cwde   
  40c6b2:	inc    ecx
  40c6b3:	int    0xe8
  40c6b5:	mov    dl,0xd2
  40c6b7:	inc    ecx
  40c6b8:	and    DWORD PTR [eax],ebp
  40c6ba:	test   eax,0x2deb5cba
  40c6bf:	test   eax,0x2b524237
  40c6c4:	cmp    BYTE PTR [si-0x4a],dl
  40c6c8:	lahf   
  40c6c9:	imul   dh
  40c6cb:	test   BYTE PTR [ebx],bh
  40c6cd:	sub    edx,DWORD PTR [ebp+0x52fae487]
  40c6d3:	mov    dh,0x30
  40c6d5:	pop    es
  40c6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d7:	and    edi,DWORD PTR [esi]
  40c6d9:	add    al,0x4d
  40c6db:	mov    ch,BYTE PTR [edi]
  40c6dd:	cmp    eax,0x8c77c16d
  40c6e2:	xor    ah,bh
  40c6e4:	push   0x2f36e499
  40c6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ea:	repnz sahf 
  40c6ec:	into   
  40c6ed:	sbb    bh,BYTE PTR [edi+0x66]
  40c6f0:	add    eax,0xf9eb7fe1
  40c6f5:	cli    
  40c6f6:	mov    cl,0x17
  40c6f8:	out    0xa5,al
  40c6fa:	fcmovnbe st,st(1)
  40c6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6fd:	(bad)  
  40c6ff:	and    al,BYTE PTR [edi]
  40c701:	pmaxub mm0,QWORD PTR [edi]
  40c704:	rep outs dx,BYTE PTR ds:[esi]
  40c706:	jle    0x40c6da
  40c708:	mov    dl,0xc8
  40c70a:	mov    ah,0x89
  40c70c:	aaa    
  40c70d:	jbe    0x40c729
  40c70f:	push   cs
  40c710:	xor    eax,0xd03c8c80
  40c715:	xor    eax,0xfc12bfb5
  40c71a:	push   cs
  40c71b:	js     0x40c6f6
  40c71d:	mov    bl,0xaa
  40c71f:	push   eax
  40c720:	retf   
  40c721:	loop   0x40c6d8
  40c723:	mov    esi,0x28cb6c31
  40c728:	(bad)  
  40c72a:	xchg   esp,eax
  40c72b:	ds jae 0x40c754
  40c72e:	std    
  40c72f:	mov    BYTE PTR [ecx],0xb0
  40c732:	pop    ss
  40c733:	mov    edx,0xa1a7fcbc
  40c738:	pusha  
  40c739:	mov    edi,0xd290c8ae
  40c73e:	test   al,0x15
  40c740:	fiadd  DWORD PTR [esi]
  40c742:	xor    DWORD PTR [esi-0x59],edi
  40c745:	aas    
  40c746:	push   ecx
  40c747:	dec    edx
  40c748:	(bad)  
  40c749:	or     DWORD PTR ss:[edx+eiz*2-0x1fd8a48c],ebx
  40c751:	xlat   BYTE PTR ds:[ebx]
  40c752:	sar    esp,1
  40c754:	ss jmp 0x53440b94
  40c75a:	nop    DWORD PTR [edi+0x3387a36c]
  40c761:	adc    BYTE PTR [esi+0x7f],ch
  40c764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c765:	jp     0x40c757
  40c767:	icebp  
  40c768:	scas   eax,DWORD PTR es:[edi]
  40c769:	pop    edi
  40c76a:	sub    al,0xc2
  40c76c:	lods   al,BYTE PTR ds:[esi]
  40c76d:	shr    DWORD PTR [ebx],0x9
  40c770:	cmp    DWORD PTR [ebx+edx*2+0x63],esi
  40c774:	shr    DWORD PTR [esi-0x2bcf52fd],1
  40c77a:	popa   
  40c77b:	rcr    ch,cl
  40c77d:	out    dx,eax
  40c77e:	jg     0x40c7f2
  40c780:	and    cl,BYTE PTR [edx-0x2]
  40c783:	mov    ?,edx
  40c785:	xor    BYTE PTR [edx+0x15185dc3],bh
  40c78b:	sar    BYTE PTR [edx+0x480c2a77],0xfd
  40c792:	imul   edi,ecx,0xe79dd744
  40c798:	test   DWORD PTR [esi-0x1e36b1c9],ecx
  40c79e:	mov    BYTE PTR [ebx*4+0x2eb57f18],bh
  40c7a5:	push   es
  40c7a6:	xlat   BYTE PTR ds:[ebx]
  40c7a7:	std    
  40c7a8:	lock mov bh,0x87
  40c7ab:	cmp    eax,0xe6dcd6b6
  40c7b0:	mov    ah,0x59
  40c7b2:	sub    ebp,DWORD PTR [ebx+0x4]
  40c7b5:	xchg   edi,eax
  40c7b6:	inc    esi
  40c7b7:	jp     0x40c7e0
  40c7b9:	sbb    eax,DWORD PTR [edi]
  40c7bb:	push   edi
  40c7bc:	ins    BYTE PTR es:[edi],dx
  40c7bd:	out    0x83,al
  40c7bf:	leave  
  40c7c0:	push   cs
  40c7c1:	(bad)  
  40c7c3:	shl    BYTE PTR ds:0x7763f45a,0xb0
  40c7ca:	sti    
  40c7cb:	jno    0x40c785
  40c7cd:	repnz dec esp
  40c7cf:	nop
  40c7d0:	fst    QWORD PTR [esi+0x3092fbfb]
  40c7d6:	jp     0x40c834
  40c7d8:	aas    
  40c7d9:	ret    
  40c7da:	outs   dx,BYTE PTR ds:[esi]
  40c7db:	adc    ch,BYTE PTR [edx-0x2adfe41e]
  40c7e1:	aas    
  40c7e2:	aad    0x7c
  40c7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e5:	fcom   QWORD PTR [ebx+0x17dbad2a]
  40c7eb:	popf   
  40c7ec:	(bad)  
  40c7ee:	jns    0x40c7ee
  40c7f0:	fdivr  QWORD PTR [edx+ecx*4-0x747379d9]
  40c7f7:	xor    dh,bh
  40c7f9:	fcom   DWORD PTR [edx-0x3d36129b]
  40c7ff:	repz pop es
  40c801:	(bad)  
  40c802:	jmp    0x7425db86
  40c807:	push   ecx
  40c808:	bound  esi,QWORD PTR [edi]
  40c80a:	iret   
  40c80b:	pop    es
  40c80c:	jb     0x40c7e2
  40c80e:	out    dx,eax
  40c80f:	dec    ecx
  40c810:	add    DWORD PTR [esi-0x6a],ecx
  40c813:	pop    ebp
  40c814:	aas    
  40c815:	xchg   esp,eax
  40c816:	jnp    0x40c87d
  40c818:	sub    eax,0x2139e496
  40c81d:	dec    ebp
  40c81e:	dec    DWORD PTR [esi+0x10]
  40c821:	mov    al,0xe1
  40c823:	xchg   ecx,eax
  40c824:	or     al,al
  40c826:	pop    edi
  40c827:	dec    ebx
  40c828:	gs scas eax,DWORD PTR es:[edi]
  40c82a:	mov    esp,DWORD PTR [ebp-0xfface88]
  40c830:	ficom  WORD PTR [eax-0x75]
  40c833:	enter  0x7985,0x34
  40c837:	ins    BYTE PTR es:[edi],dx
  40c838:	ret    0xff16
  40c83b:	je     0x40c82b
  40c83d:	jp     0x40c874
  40c83f:	fadd   st,st(3)
  40c841:	in     eax,dx
  40c842:	sub    cl,BYTE PTR [edi-0x1c]
  40c845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c846:	loop   0x40c85a
  40c848:	mov    eax,0xc8b2e580
  40c84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c84e:	push   ds
  40c84f:	mov    ah,0x49
  40c851:	mov    ah,0x9f
  40c853:	call   0xdf9c:0x479b7643
  40c85a:	adc    DWORD PTR [esi+0x3efe9770],0xffffffd5
  40c861:	shr    BYTE PTR [edx],cl
  40c863:	lea    edi,[ebx-0x5a5373c1]
  40c869:	mov    ss,WORD PTR [ebx+0x478bc842]
  40c86f:	inc    ebp
  40c870:	ja     0x40c84f
  40c872:	jp     0x40c8c6
  40c874:	push   edx
  40c875:	xor    DWORD PTR [ebx-0x2d21e20b],eax
  40c87b:	sub    eax,0x1a8dfa2e
  40c880:	pop    ebp
  40c881:	and    dh,BYTE PTR [ebx]
  40c883:	mov    al,ds:0x214517cd
  40c888:	dec    ecx
  40c889:	repnz or esi,DWORD PTR [ebx+edi*8-0x8]
  40c88e:	sbb    edx,DWORD PTR [ebx+0x393b969d]
  40c894:	(bad)  
  40c895:	mov    esp,0xac2e189e
  40c89a:	push   esp
  40c89b:	xor    eax,0x16f4239a
  40c8a0:	sub    cl,BYTE PTR [esi+0x5c]
  40c8a3:	xor    BYTE PTR [ebp+0x78],ch
  40c8a6:	aam    0x12
  40c8a8:	adc    edx,DWORD PTR [ecx-0x79012217]
  40c8ae:	sub    al,0xc4
  40c8b0:	and    DWORD PTR [ebp+0xe],ebx
  40c8b3:	inc    esp
  40c8b4:	or     BYTE PTR [ebx-0x69296cc1],ah
  40c8ba:	bound  esp,QWORD PTR [eax+eiz*4+0x28]
  40c8be:	pop    ds
  40c8bf:	imul   ebx,DWORD PTR ds:0x51f3446d,0x7a
  40c8c6:	or     bh,BYTE PTR [edi-0x74]
  40c8c9:	loopne 0x40c84c
  40c8cb:	shl    DWORD PTR [ebx-0x76a2936e],0x8c
  40c8d2:	pop    esp
  40c8d3:	push   es
  40c8d4:	ins    DWORD PTR es:[edi],dx
  40c8d5:	adc    BYTE PTR [ecx-0x1c27a8e2],bl
  40c8db:	inc    ebp
  40c8dc:	(bad)  
  40c8dd:	(bad)  
  40c8df:	mov    DWORD PTR [edx],ebx
  40c8e1:	pop    eax
  40c8e2:	js     0x40c939
  40c8e4:	leave  
  40c8e5:	jg     0x40c89a
  40c8e7:	popf   
  40c8e8:	shl    BYTE PTR [edx+0x45],1
  40c8eb:	fldcw  WORD PTR [esi+0x8]
  40c8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ef:	mov    ch,0xfe
  40c8f1:	imul   esi,eax,0x31
  40c8f4:	mov    cl,0x73
  40c8f6:	inc    ecx
  40c8f7:	psubusb mm4,mm7
  40c8fa:	sbb    DWORD PTR [esi-0x15],ebx
  40c8fd:	mov    ch,bh
  40c8ff:	fs sahf 
  40c901:	ss pop es
  40c903:	leave  
  40c904:	pop    edi
  40c905:	js     0x40c95c
  40c907:	jmp    0x6b255ddd
  40c90c:	pop    esp
  40c90d:	hlt    
  40c90e:	outs   dx,DWORD PTR ds:[esi]
  40c90f:	mov    bl,0xda
  40c911:	mov    edx,0x32c4caef
  40c916:	out    0x55,al
  40c918:	pushf  
  40c919:	adc    esp,ebx
  40c91b:	fcomip st,st(2)
  40c91d:	call   0xcd4f:0xbf6418a3
  40c924:	gs test eax,0x5b74b9a8
  40c92a:	inc    ebp
  40c92b:	mov    eax,ds:0x275be9f1
  40c930:	test   BYTE PTR [esi],ah
  40c932:	push   ss
  40c933:	into   
  40c934:	xchg   esi,eax
  40c935:	cmp    dl,BYTE PTR [edi-0x6d]
  40c938:	(bad)  
  40c939:	out    dx,al
  40c93a:	leave  
  40c93b:	sbb    DWORD PTR es:[edi+0x7d01052a],esi
  40c942:	dec    eax
  40c943:	inc    ebp
  40c944:	inc    esp
  40c945:	das    
  40c946:	push   ss
  40c947:	ss push ebx
  40c949:	sbb    DWORD PTR [edi],0xeaa1e5c5
  40c94f:	sub    ah,dh
  40c951:	fs out 0xde,al
  40c954:	or     DWORD PTR [ebx+0x1f611a32],edx
  40c95a:	(bad)  
  40c95b:	ror    BYTE PTR [edx-0x18f4dc40],cl
  40c961:	and    dh,BYTE PTR [ecx+edx*8]
  40c964:	leave  
  40c965:	or     ebp,DWORD PTR [eax+0x340d3151]
  40c96b:	and    eax,0x8f59171f
  40c970:	jno    0x40c9c1
  40c972:	(bad)  
  40c973:	sti    
  40c974:	fist   DWORD PTR [ebp+0x7c3657d8]
  40c97a:	mov    BYTE PTR [ecx+0x2a2b4006],al
  40c980:	or     al,0xd7
  40c982:	push   esi
  40c983:	jbe    0x40c966
  40c985:	(bad)  
  40c986:	aam    0xcd
  40c988:	mov    bh,0xa9
  40c98a:	retf   
  40c98b:	shl    DWORD PTR [esi+0x5cc2a1e2],0x20
  40c992:	pusha  
  40c993:	cmp    DWORD PTR [esp+ebp*1+0x1],esp
  40c997:	and    dh,ah
  40c999:	mov    bl,0x42
  40c99b:	or     ebx,ecx
  40c99d:	xor    ah,cl
  40c99f:	enter  0x195f,0x6a
  40c9a3:	push   es
  40c9a4:	icebp  
  40c9a5:	fwait
  40c9a6:	in     al,0x3c
  40c9a8:	push   eax
  40c9a9:	mov    cl,0xb6
  40c9ab:	out    dx,eax
  40c9ac:	push   0xffffff92
  40c9ae:	xor    edi,DWORD PTR [ebx-0x2a]
  40c9b1:	mov    ah,0x88
  40c9b3:	mov    ah,0x84
  40c9b5:	retf   
  40c9b6:	jl     0x40c990
  40c9b8:	pop    esi
  40c9b9:	daa    
  40c9ba:	call   0xfca8:0x453d1130
  40c9c1:	fs cmp al,0xfd
  40c9c4:	dec    esp
  40c9c5:	outs   dx,DWORD PTR ds:[esi]
  40c9c6:	retf   
  40c9c7:	mov    esp,0xfb45eece
  40c9cc:	mov    eax,ds:0xdcda26dd
  40c9d1:	sbb    BYTE PTR [ecx],ch
  40c9d3:	xor    eax,edi
  40c9d5:	ss jmp 0xcde4eaab
  40c9db:	dec    ebp
  40c9dc:	lock add BYTE PTR [esi],0x5c
  40c9e0:	jb     0x40c9ba
  40c9e2:	mov    ah,0x2f
  40c9e4:	sbb    al,0xea
  40c9e6:	aas    
  40c9e7:	fcomip st,st(7)
  40c9e9:	push   esi
  40c9ea:	add    al,0x77
  40c9ec:	adc    edi,ecx
  40c9ee:	test   BYTE PTR [ecx+0x26],ah
  40c9f1:	enter  0x74df,0x35
  40c9f5:	psubd  mm4,QWORD PTR [edi-0x66]
  40c9f9:	and    al,0x0
  40c9fb:	rcr    DWORD PTR ds:[ebp-0x708dc74c],1
  40ca02:	push   ecx
  40ca03:	test   eax,0x69c5a824
  40ca08:	inc    ebx
  40ca09:	pop    ebx
  40ca0a:	push   esi
  40ca0b:	xchg   edi,eax
  40ca0c:	sti    
  40ca0d:	sar    ecx,1
  40ca0f:	(bad)  
  40ca10:	in     al,0x48
  40ca12:	push   ebp
  40ca13:	add    BYTE PTR [ebx+0x5cc86907],bl
  40ca19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1a:	cs cld 
  40ca1c:	les    ecx,FWORD PTR [esi+0x53779b2a]
  40ca22:	loope  0x40ca48
  40ca24:	push   esi
  40ca25:	xchg   ah,bh
  40ca27:	pushf  
  40ca28:	xchg   BYTE PTR [edx+0x3b805bd8],cl
  40ca2e:	dec    ebx
  40ca2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca30:	mov    gs,WORD PTR [ecx+0x20]
  40ca33:	daa    
  40ca34:	mov    edx,0xb0d4596f
  40ca39:	pop    edx
  40ca3a:	push   es
  40ca3b:	test   al,0xfd
  40ca3d:	push   ecx
  40ca3e:	(bad)
  40ca41:	cmp    ecx,edi
  40ca43:	xor    al,0x4c
  40ca45:	cmp    eax,0x4ad7e3fa
  40ca4a:	sub    bh,0x63
  40ca4d:	xor    DWORD PTR [edx+esi*8-0xa439311],eax
  40ca54:	aaa    
  40ca55:	add    al,0x6b
  40ca57:	ins    DWORD PTR es:[edi],dx
  40ca58:	pop    edi
  40ca59:	pop    esi
  40ca5a:	and    edi,DWORD PTR [esi]
  40ca5c:	jmp    0x77f824b2
  40ca61:	mov    dl,0xb3
  40ca63:	fisub  WORD PTR [eax-0x1e]
  40ca66:	(bad)  
  40ca67:	in     al,dx
  40ca68:	jo     0x40cac0
  40ca6a:	jmp    0x66773363
  40ca6f:	or     DWORD PTR [esi-0x76],edx
  40ca72:	add    eax,0x3db08bb1
  40ca77:	aaa    
  40ca78:	(bad)  
  40ca7a:	aas    
  40ca7b:	mov    ebp,edi
  40ca7d:	loop   0x40ca7e
  40ca7f:	outs   dx,DWORD PTR ds:[esi]
  40ca80:	add    bh,BYTE PTR [edx]
  40ca82:	mov    WORD PTR [ecx+0x10],ss
  40ca85:	mov    DWORD PTR [edi],ebx
  40ca87:	pop    ebp
  40ca88:	ss push eax
  40ca8a:	das    
  40ca8b:	add    ebp,DWORD PTR [edx+0x1899164c]
  40ca91:	imul   ebx,DWORD PTR [edx-0x52d416e8],0x3ea9411f
  40ca9b:	push   edx
  40ca9c:	std    
  40ca9d:	(bad)  
  40ca9e:	inc    esp
  40ca9f:	test   bh,0xe4
  40caa2:	add    ecx,DWORD PTR ss:[ecx-0x52e1288]
  40caa9:	mov    ah,0x32
  40caab:	xor    eax,DWORD PTR [ecx+0x41]
  40caae:	add    DWORD PTR [eax],ebx
  40cab0:	mov    eax,DWORD PTR [ebp-0x4]
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x4c2b26c0,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cdec
  40cde1:	fild   QWORD PTR [ebx-0x76]
  40cde4:	retf   
  40cde5:	les    eax,FWORD PTR [edi+0x9bf5d24]
  40cdeb:	jecxz  0x40cdcd
  40cded:	outs   dx,DWORD PTR ds:[esi]
  40cdee:	lock push ecx
  40cdf0:	add    eax,0x36da2c67
  40cdf5:	sub    eax,0x15f5d7fa
  40cdfa:	daa    
  40cdfb:	pop    ss
  40cdfc:	mov    esi,0xb53075a4
  40ce01:	xor    al,0x45
  40ce03:	imul   ebx,DWORD PTR [edx],0x1299da8d
  40ce09:	mov    ds:0x458f1f77,al
  40ce0e:	jnp    0x40cdc3
  40ce10:	jbe    0x40cdad
  40ce12:	fldenv [edx-0xa]
  40ce15:	mov    ds:0x6ef1e265,eax
  40ce1a:	pop    ebp
  40ce1b:	or     eax,0x329ec5d3
  40ce20:	mov    cl,0x64
  40ce22:	mov    ebp,DWORD PTR [edx+0x0]
  40ce25:	inc    ebp
  40ce26:	sti    
  40ce27:	jecxz  0x40cdd0
  40ce29:	cmp    eax,0xf92f0ba0
  40ce2e:	sub    DWORD PTR [ecx+0x2c],0x6c105d08
  40ce35:	jne    0x40cddf
  40ce37:	mov    ecx,0x96b6cba3
  40ce3c:	es inc esp
  40ce3e:	test   DWORD PTR [ebx],esi
  40ce40:	mov    edx,0x2738ca8e
  40ce45:	pop    esi
  40ce46:	jae    0x40ce94
  40ce48:	push   es
  40ce49:	aaa    
  40ce4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4b:	or     BYTE PTR [esi],dh
  40ce4d:	and    eax,0xa0f24b3d
  40ce52:	and    al,0xc
  40ce54:	daa    
  40ce55:	push   ecx
  40ce56:	jne    0x40ce3c
  40ce58:	pusha  
  40ce59:	icebp  
  40ce5a:	jge    0x40ce16
  40ce5c:	out    0x98,eax
  40ce5e:	lods   al,BYTE PTR ds:[esi]
  40ce5f:	sub    al,0xc
  40ce61:	aam    0xc0
  40ce63:	sub    dl,BYTE PTR [esi]
  40ce65:	mov    bh,0xb3
  40ce67:	mov    ch,0x62
  40ce69:	mov    eax,ds:0x1108ae6f
  40ce6e:	xchg   DWORD PTR ds:0x2b5b48f5,edi
  40ce74:	aas    
  40ce75:	dec    ebx
  40ce76:	and    BYTE PTR [eax],dl
  40ce78:	stos   DWORD PTR es:[edi],eax
  40ce79:	neg    DWORD PTR [esi]
  40ce7b:	(bad)  
  40ce7c:	outs   dx,DWORD PTR ds:[esi]
  40ce7d:	inc    esi
  40ce7e:	and    BYTE PTR [eax],ch
  40ce80:	and    cl,bl
  40ce82:	jmp    0x40ce50
  40ce84:	fwait
  40ce85:	or     edx,edi
  40ce87:	pop    esi
  40ce88:	mov    ch,0x10
  40ce8a:	mov    bh,0x7c
  40ce8c:	adc    al,BYTE PTR [bx+si+0x6279]
  40ce91:	jmp    0x40ce8e
  40ce93:	push   ebp
  40ce94:	mov    ebx,0x98136451
  40ce99:	push   cs
  40ce9a:	xchg   esi,eax
  40ce9b:	sbb    eax,0xd822d2aa
  40cea0:	sbb    bh,BYTE PTR [ecx+0x159de425]
  40cea6:	int    0xd6
  40cea8:	(bad)  
  40cea9:	cmc    
  40ceaa:	iret   
  40ceab:	loop   0x40cf0d
  40cead:	mov    edx,DWORD PTR [ecx+eiz*2]
  40ceb0:	and    DWORD PTR [ebx-0x28a8cd17],0xaccb40a5
  40ceba:	sub    DWORD PTR [ecx-0xf55e517],ecx
  40cec0:	scas   eax,DWORD PTR es:[edi]
  40cec1:	ret    
  40cec2:	sbb    BYTE PTR [ecx],ah
  40cec4:	add    ebx,eax
  40cec6:	and    DWORD PTR [eax+0x29],edi
  40cec9:	sbb    ah,cl
  40cecb:	out    0x4d,eax
  40cecd:	clc    
  40cece:	pop    ds
  40cecf:	sub    eax,DWORD PTR [edx+0x5d]
  40ced2:	add    al,0x21
  40ced4:	bound  ecx,QWORD PTR [esi+0x1890992a]
  40ceda:	push   eax
  40cedb:	cdq    
  40cedc:	(bad)  
  40cedd:	or     BYTE PTR [eax],al
  40cedf:	adc    esi,ebp
  40cee1:	mov    esi,0xcb4646ac
  40cee6:	cwde   
  40cee7:	repnz push esi
  40cee9:	(bad)  [esi+0x76]
  40ceec:	sbb    eax,0x51ea8272
  40cef1:	pushf  
  40cef2:	sbb    bl,BYTE PTR [ebp-0x29]
  40cef5:	icebp  
  40cef6:	stos   BYTE PTR es:[edi],al
  40cef7:	dec    eax
  40cef8:	sahf   
  40cef9:	xchg   DWORD PTR [esi-0x51c1ea8b],eax
  40ceff:	or     edi,eax
  40cf01:	xchg   DWORD PTR [esp+ecx*4],esp
  40cf04:	sbb    dl,BYTE PTR [ebx]
  40cf06:	retf   0xc9a2
  40cf09:	and    DWORD PTR [ecx+0x33],0x8a585dee
  40cf10:	call   0xb460:0x70c68641
  40cf17:	mov    eax,0x8fec1d7e
  40cf1c:	outs   dx,BYTE PTR ds:[esi]
  40cf1d:	test   DWORD PTR [eax+0x5a],esi
  40cf20:	shr    BYTE PTR [esi+0x772f2f81],1
  40cf26:	pop    ebp
  40cf27:	fucom  st(5)
  40cf29:	or     al,0x6f
  40cf2b:	add    DWORD PTR [eax],eax
  40cf2d:	fild   DWORD PTR [ecx-0x6f3f0991]
  40cf33:	sub    esi,DWORD PTR cs:0x4a82ebec
  40cf3a:	jno    0x40cf51
  40cf3c:	stos   DWORD PTR es:[edi],eax
  40cf3d:	cmp    BYTE PTR [edi+0x1dfbf52a],ah
  40cf43:	repnz mov ecx,0x71913053
  40cf49:	aas    
  40cf4a:	or     ebx,DWORD PTR [eax]
  40cf4c:	das    
  40cf4d:	adc    DWORD PTR [ebp-0x641218d6],ebp
  40cf53:	xor    ch,dh
  40cf55:	dec    ebx
  40cf56:	jnp    0x40cf03
  40cf58:	lock xchg BYTE PTR [ebx+0x34],al
  40cf5c:	sbb    esp,DWORD PTR [ebx+0x55]
  40cf5f:	je     0x40cfb5
  40cf61:	jmp    0x78be7e2
  40cf66:	shr    BYTE PTR [ebx],1
  40cf68:	in     al,0xd2
  40cf6a:	mov    ebp,0x205978f6
  40cf6f:	loope  0x40cf22
  40cf71:	sub    dh,dh
  40cf73:	lock dec edx
  40cf75:	(bad)  
  40cf76:	mov    bh,bh
  40cf78:	pop    ds
  40cf79:	jne    0x40cf0d
  40cf7b:	ret    
  40cf7c:	cmp    eax,0x1af3e50d
  40cf81:	cmp    edx,DWORD PTR [edx+0x22]
  40cf84:	out    0xd9,eax
  40cf86:	push   es
  40cf87:	mov    edx,ebp
  40cf89:	jns    0x40cf57
  40cf8b:	cwde   
  40cf8c:	inc    esp
  40cf8d:	stos   DWORD PTR es:[edi],eax
  40cf8e:	inc    edx
  40cf8f:	scas   eax,DWORD PTR es:[edi]
  40cf90:	repnz xchg dh,al
  40cf93:	lahf   
  40cf94:	mov    cl,0xc4
  40cf96:	mov    DWORD PTR cs:[edi],ebp
  40cf99:	aam    0x3e
  40cf9b:	mov    BYTE PTR [eax],ch
  40cf9d:	out    0xa4,al
  40cf9f:	pop    ss
  40cfa0:	adc    ecx,DWORD PTR ds:0xd818dd3b
  40cfa6:	inc    edi
  40cfa7:	cmp    eax,0x8a22e4d6
  40cfac:	add    al,BYTE PTR [edi]
  40cfae:	jp     0x40cf42
  40cfb0:	jns    0x40cf91
  40cfb2:	data16 adc cl,dl
  40cfb5:	jge    0x40cf9c
  40cfb7:	jae    0x40cf95
  40cfb9:	dec    esp
  40cfba:	and    ebx,DWORD PTR [ebx+0x29d4016e]
  40cfc0:	test   DWORD PTR [ecx+0x50],0x2f607012
  40cfc7:	fist   DWORD PTR ds:0x4db53b05
  40cfcd:	in     eax,0xc9
  40cfcf:	test   BYTE PTR [ecx+0x1febf84b],dl
  40cfd5:	adc    edx,esp
  40cfd7:	stos   DWORD PTR es:[edi],eax
  40cfd8:	ins    BYTE PTR es:[edi],dx
  40cfd9:	xlat   BYTE PTR ds:[ebx]
  40cfda:	mov    al,0xec
  40cfdc:	mov    cs,ecx
  40cfde:	cld    
  40cfdf:	ins    DWORD PTR es:[edi],dx
  40cfe0:	pop    ebx
  40cfe1:	push   0xf6596a86
  40cfe6:	rcr    DWORD PTR [edi+0x45],cl
  40cfe9:	sbb    bh,BYTE PTR [ebx+0x1b]
  40cfec:	fs scas al,BYTE PTR es:[edi]
  40cfee:	test   eax,0x9b4d2311
  40cff3:	fstp   DWORD PTR ds:0xc9ed820a
  40cff9:	addr16 xchg ecx,eax
  40cffb:	xor    BYTE PTR [edi+0x19],dh
  40cffe:	push   esp
  40cfff:	test   BYTE PTR [ebp-0x12],dl
  40d002:	mov    ebx,0xf8115a0
  40d007:	cwde   
  40d008:	dec    edx
  40d009:	and    bh,bh
  40d00b:	xchg   edi,eax
  40d00c:	sbb    ah,dh
  40d00e:	pop    edi
  40d00f:	in     eax,0x4f
  40d011:	jne    0x40d028
  40d013:	ins    DWORD PTR es:[edi],dx
  40d014:	jbe    0x40d075
  40d016:	xlat   BYTE PTR ds:[ebx]
  40d017:	in     eax,0xac
  40d019:	xchg   ebp,eax
  40d01a:	sub    cl,BYTE PTR [ecx]
  40d01c:	mov    edi,0x140b74b6
  40d021:	mov    DWORD PTR [edx-0x3c3dc66b],0x2a9d7599
  40d02b:	sbb    DWORD PTR [esi],edx
  40d02d:	push   edx
  40d02e:	push   ebp
  40d02f:	jo     0x40d067
  40d031:	mov    ch,0x72
  40d033:	loopne 0x40d048
  40d035:	mov    bh,0x2d
  40d037:	sbb    dh,bh
  40d039:	mov    al,0xdf
  40d03b:	sub    eax,0x46b4e4e7
  40d040:	int3   
  40d041:	test   al,0xba
  40d043:	dec    ecx
  40d044:	mov    bl,ah
  40d046:	and    esi,DWORD PTR [ebx+0x72c7c23d]
  40d04c:	je     0x40d095
  40d04e:	shl    al,cl
  40d050:	int3   
  40d051:	xor    BYTE PTR [esi],dh
  40d053:	fild   QWORD PTR [edi+0x21]
  40d056:	cmp    BYTE PTR [esi-0x3e],dh
  40d059:	inc    eax
  40d05a:	div    DWORD PTR [edx+ecx*4-0x54]
  40d05e:	(bad)  
  40d05f:	scas   eax,DWORD PTR es:[edi]
  40d060:	loopne 0x40d08f
  40d062:	unpcklps xmm6,XMMWORD PTR [edi+0x6d18a791]
  40d069:	imul   ebx,esi,0x177c919b
  40d06f:	test   DWORD PTR [edx-0x28],edi
  40d072:	out    dx,al
  40d073:	adc    ebx,DWORD PTR [ebx-0x7e00a156]
  40d079:	(bad)  
  40d07a:	adc    edi,esp
  40d07c:	(bad)  
  40d07d:	jnp    0x40d0e6
  40d07f:	or     cl,ah
  40d081:	ja     0x40d03a
  40d083:	out    dx,al
  40d084:	rcl    BYTE PTR [esi-0x4ae889f5],1
  40d08a:	es dec ebp
  40d08c:	imul   eax,DWORD PTR [edi-0x46],0xa320b325
  40d093:	(bad)  
  40d094:	in     al,0x4b
  40d096:	mov    dl,0xb9
  40d098:	in     al,0x7d
  40d09a:	cmp    dh,BYTE PTR [edx]
  40d09c:	or     edx,edx
  40d09e:	jl     0x40d0bc
  40d0a0:	mov    bl,0x68
  40d0a2:	xor    BYTE PTR [ebx],0x78
  40d0a5:	ins    BYTE PTR es:[edi],dx
  40d0a6:	jp     0x40d0db
  40d0a8:	jns    0x40d057
  40d0aa:	sub    bh,BYTE PTR [edx+0x35]
  40d0ad:	mov    ecx,eax
  40d0af:	jmp    0x45ee5107
  40d0b4:	stos   DWORD PTR es:[edi],eax
  40d0b5:	push   cs
  40d0b6:	and    ah,BYTE PTR [edx]
  40d0b8:	(bad)  
  40d0b9:	push   cs
  40d0ba:	inc    ebp
  40d0bb:	push   esi
  40d0bc:	adc    BYTE PTR [ebp-0x3b],ch
  40d0bf:	aam    0x9e
  40d0c1:	or     DWORD PTR [ecx+0x31e38b8f],0xd18979c9
  40d0cb:	push   DWORD PTR [ebp+0x4bcc64df]
  40d0d1:	dec    edi
  40d0d2:	mov    al,0x86
  40d0d4:	imul   esi,DWORD PTR [ebx+0x6d],0xcbc2b2a3
  40d0db:	leave  
  40d0dc:	pop    edx
  40d0dd:	cli    
  40d0de:	popf   
  40d0df:	(bad)  
  40d0e0:	addr16 jo 0x40d159
  40d0e3:	adc    bl,0xec
  40d0e6:	gs jg  0x40d06e
  40d0e9:	dec    ebx
  40d0ea:	out    dx,al
  40d0eb:	gs mov esp,0xaa1517a
  40d0f1:	mov    BYTE PTR [ecx+0x49],ah
  40d0f4:	or     al,0x10
  40d0f6:	adc    eax,0x23745de7
  40d0fb:	das    
  40d0fc:	out    0xb1,al
  40d0fe:	pop    ebx
  40d0ff:	fild   DWORD PTR [ebp-0x5cde1c93]
  40d105:	push   ebp
  40d106:	icebp  
  40d107:	xchg   bh,bl
  40d109:	push   0x8c215671
  40d10e:	iret   
  40d10f:	mov    fs,ecx
  40d111:	fcmovbe st,st(3)
  40d113:	adc    eax,0xf7f746a4
  40d118:	iret   
  40d119:	loop   0x40d0b9
  40d11b:	dec    edi
  40d11c:	lahf   
  40d11d:	(bad)  
  40d11f:	nop
  40d120:	adc    DWORD PTR [ecx],ebp
  40d122:	pop    ss
  40d123:	sar    BYTE PTR [esi-0x6fd67c0d],cl
  40d129:	cmp    al,0xd0
  40d12b:	daa    
  40d12c:	jle    0x40d0e4
  40d12e:	mov    al,0x9f
  40d130:	hlt    
  40d131:	out    0xb5,al
  40d133:	inc    eax
  40d134:	test   eax,0x41ddafca
  40d139:	dec    edi
  40d13a:	ja     0x40d0c4
  40d13c:	cdq    
  40d13d:	call   0x408ec064
  40d142:	lods   eax,DWORD PTR ds:[esi]
  40d143:	jo     0x40d121
  40d145:	push   esp
  40d146:	jge    0x40d0cf
  40d148:	fwait
  40d149:	rcr    DWORD PTR [eax+ebp*2-0x73],1
  40d14d:	mov    dh,BYTE PTR ds:0xd3dcd1ea
  40d153:	test   BYTE PTR [edi-0x2e],0x70
  40d157:	(bad)  
  40d158:	sbb    al,0x61
  40d15a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d15c:	ja     0x40d101
  40d15e:	sar    DWORD PTR [ebp+0x2f0746fd],0x48
  40d165:	nop
  40d166:	cmc    
  40d167:	stc    
  40d168:	mov    ebx,0x801c617
  40d16d:	shl    BYTE PTR [esi+0x10],1
  40d170:	push   es
  40d171:	and    al,0xfd
  40d173:	xchg   ecx,eax
  40d174:	sahf   
  40d175:	mov    esp,0x612dc9d9
  40d17a:	out    dx,eax
  40d17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d17c:	xchg   BYTE PTR [eax+ebp*1],dh
  40d17f:	xor    DWORD PTR [eax+0x2eef7ff9],eax
  40d185:	sbb    ch,al
  40d187:	retf   0xdac9
  40d18a:	rol    DWORD PTR [ecx-0x57],0xf6
  40d18e:	popa   
  40d18f:	lds    ebp,FWORD PTR [ecx]
  40d191:	clc    
  40d192:	cmp    cl,BYTE PTR [esi-0x7d]
  40d195:	sub    edi,DWORD PTR [edi+0x45e588eb]
  40d19b:	mov    bh,0xd3
  40d19d:	rcr    DWORD PTR [edx],0xb0
  40d1a0:	rol    bh,0x6f
  40d1a3:	xchg   ebx,eax
  40d1a4:	lock sub esi,0xd47c6e07
  40d1ab:	(bad)  
  40d1ac:	into   
  40d1ad:	cwde   
  40d1ae:	fild   DWORD PTR [edx+0x1]
  40d1b1:	data16 (bad) 
  40d1b3:	xor    ah,BYTE PTR [edi+0x9]
  40d1b6:	mov    WORD PTR [ebp+edx*2+0x4e38aa49],ss
  40d1bd:	fild   DWORD PTR [esp+ebx*2]
  40d1c0:	int3   
  40d1c1:	or     esi,edi
  40d1c3:	or     eax,0xb6165812
  40d1c8:	push   esp
  40d1c9:	bnd jl 0x40d21d
  40d1cc:	mov    edi,0x1bb6f1b4
  40d1d1:	test   al,0xba
  40d1d3:	xchg   edx,eax
  40d1d4:	mov    edi,0x3a0f4122
  40d1d9:	adc    BYTE PTR [esi],al
  40d1db:	mov    esp,0x413fe095
  40d1e1:	data16 (bad) 
  40d1e3:	sub    DWORD PTR [esi+0x5c],edx
  40d1e6:	shl    eax,0xbd
  40d1e9:	(bad)  
  40d1ea:	cld    
  40d1eb:	aas    
  40d1ec:	inc    edx
  40d1ed:	push   esp
  40d1ee:	xchg   ebx,eax
  40d1ef:	push   es
  40d1f0:	fiadd  DWORD PTR [esi+0x23]
  40d1f3:	and    eax,0x3015224e
  40d1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f9:	sbb    bl,ch
  40d1fb:	dec    esi
  40d1fc:	test   al,0xd5
  40d1fe:	dec    esi
  40d1ff:	clc    
  40d200:	push   ecx
  40d201:	adc    DWORD PTR [edx],edx
  40d203:	lods   al,BYTE PTR ds:[esi]
  40d204:	push   edi
  40d205:	cmp    eax,0xf3476257
  40d20a:	(bad)  [ecx]
  40d20c:	mov    cl,0x12
  40d20e:	inc    edi
  40d20f:	mov    cl,0x6a
  40d211:	rcr    ebp,1
  40d213:	jae    0x40d203
  40d215:	add    dl,bh
  40d217:	cs xchg esi,eax
  40d219:	adc    BYTE PTR [ecx+0x27f4403c],dl
  40d21f:	sbb    al,0x58
  40d221:	pop    ebp
  40d222:	pusha  
  40d223:	add    al,0xd2
  40d225:	mov    ds:0x7813628e,al
  40d22a:	xchg   edi,eax
  40d22b:	ja     0x40d29d
  40d22d:	push   edi
  40d22e:	repnz aaa 
  40d230:	xor    cl,BYTE PTR [esi+eax*4]
  40d233:	arpl   WORD PTR [edx+0x24cadd0a],dx
  40d239:	shl    DWORD PTR [edi+0x48],1
  40d23c:	inc    ecx
  40d23d:	test   eax,0x6c95b52c
  40d242:	lods   al,BYTE PTR ds:[esi]
  40d243:	sbb    dh,BYTE PTR ds:0x676a10c0
  40d249:	xchg   edx,eax
  40d24a:	and    BYTE PTR [edx],dl
  40d24c:	xor    edx,DWORD PTR [ebx*2-0x5008a478]
  40d253:	or     eax,0x2d901d35
  40d258:	push   ds
  40d259:	aad    0x99
  40d25b:	pop    eax
  40d25c:	pop    edi
  40d25d:	das    
  40d25e:	mov    bh,0x13
  40d260:	add    BYTE PTR [edi],al
  40d262:	aam    0xf3
  40d264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d265:	mov    bl,0x8a
  40d267:	jge    0x40d255
  40d269:	sbb    eax,DWORD PTR [ebp-0x7612585a]
  40d26f:	mov    cl,0x1a
  40d271:	adc    ecx,DWORD PTR [ecx+eiz*2+0x10cbc005]
  40d278:	mov    ds:0x4f4dca74,al
  40d27d:	and    bh,al
  40d27f:	jmp    0x40d2cb
  40d281:	pop    edi
  40d282:	fdiv   QWORD PTR [edx+0x2b4886ba]
  40d288:	shl    DWORD PTR [ebx],0x2f
  40d28b:	icebp  
  40d28c:	lods   al,BYTE PTR ds:[esi]
  40d28d:	scas   eax,DWORD PTR es:[edi]
  40d28e:	push   edx
  40d28f:	cdq    
  40d290:	xchg   ebp,eax
  40d291:	push   esi
  40d292:	ins    BYTE PTR es:[edi],dx
  40d293:	xchg   ebp,eax
  40d294:	fsubr  DWORD PTR [ebx+0x3c]
  40d297:	pop    ecx
  40d298:	mov    DWORD PTR [ecx],edx
  40d29a:	idiv   dh
  40d29c:	jg     0x40d27a
  40d29e:	inc    ebp
  40d29f:	sub    eax,0x8e2ed495
  40d2a4:	sbb    DWORD PTR [edi+eax*2],ebp
  40d2a7:	push   esi
  40d2a8:	push   cs
  40d2a9:	outs   dx,BYTE PTR ds:[esi]
  40d2aa:	inc    eax
  40d2ab:	fidivr DWORD PTR [esi]
  40d2ad:	mov    dl,0xf2
  40d2af:	jne    0x40d2cb
  40d2b1:	sbb    bh,bl
  40d2b3:	in     eax,0x4c
  40d2b5:	in     al,0x54
  40d2b7:	adc    eax,0xe161fab4
  40d2bc:	retf   
  40d2bd:	aaa    
  40d2be:	ja     0x40d252
  40d2c0:	jp     0x40d280
  40d2c2:	xor    DWORD PTR [ebx],eax
  40d2c4:	lea    eax,[esi+0x383bfa91]
  40d2ca:	fldcw  WORD PTR [esi+0x7727fed9]
  40d2d0:	mov    WORD PTR [ebx],cs
  40d2d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d3:	es push edi
  40d2d5:	inc    esp
  40d2d6:	call   0x738376c7
  40d2db:	mov    eax,ds:0x2d968959
  40d2e0:	xor    ah,BYTE PTR [ebx-0x30]
  40d2e3:	dec    eax
  40d2e4:	or     al,0xd2
  40d2e6:	mov    edx,0xe1cf1539
  40d2eb:	ds xor al,0xc1
  40d2ee:	add    dh,BYTE PTR [esi+eiz*2-0x35632f3e]
  40d2f5:	adc    DWORD PTR [edi+0x3e],esp
  40d2f8:	cmp    dl,BYTE PTR [esi-0x1fecfef3]
  40d2fe:	jns    0x40d312
  40d300:	jo     0x40d343
  40d302:	push   ds
  40d303:	or     BYTE PTR [ebx],ah
  40d305:	adc    esp,eax
  40d307:	sbb    cl,BYTE PTR [ecx-0x36e454ff]
  40d30d:	stos   BYTE PTR es:[edi],al
  40d30e:	push   ds
  40d30f:	xor    al,0x54
  40d311:	cmp    esi,DWORD PTR [ebp+ebx*4-0x4a2dd0e4]
  40d318:	jae    0x40d360
  40d31a:	jl     0x40d2ce
  40d31c:	ret    0x376d
  40d31f:	or     DWORD PTR [ecx+0x3ba7229c],esi
  40d325:	cmp    eax,0x44719c4b
  40d32a:	fidiv  WORD PTR [ebx-0x2]
  40d32d:	pop    ecx
  40d32e:	std    
  40d32f:	(bad)  
  40d330:	mov    ebp,0xebabe1a7
  40d335:	(bad)  
  40d336:	mov    ds:0xfb10f549,al
  40d33b:	sahf   
  40d33c:	dec    ebx
  40d33d:	aad    0xfb
  40d33f:	inc    esi
  40d340:	inc    eax
  40d341:	(bad)  
  40d342:	in     al,dx
  40d343:	mov    edi,0x3b6693e6
  40d348:	jecxz  0x40d329
  40d34a:	imul   edi,DWORD PTR [esi],0x93a482b7
  40d350:	jo     0x40d2d4
  40d352:	scas   al,BYTE PTR es:[edi]
  40d353:	jne    0x40d34d
  40d355:	jb     0x40d374
  40d357:	sbb    cl,BYTE PTR [ecx+0x7d8802a2]
  40d35d:	cmp    eax,0x57010f6b
  40d362:	adc    al,0x96
  40d364:	xlat   BYTE PTR ds:[ebx]
  40d365:	(bad)  [eax+eiz*1+0x4a]
  40d369:	retf   
  40d36a:	xchg   edi,eax
  40d36b:	fwait
  40d36c:	mov    DWORD PTR [ebx-0x2d],eax
  40d36f:	outs   dx,BYTE PTR ds:[esi]
  40d370:	test   al,0x48
  40d372:	pop    edx
  40d373:	add    cl,0x8b
  40d376:	popa   
  40d377:	jp     0x40d3d4
  40d379:	fmul   DWORD PTR [eax-0x4dc1c0fc]
  40d37f:	cwde   
  40d380:	mov    cl,0xab
  40d382:	pop    esp
  40d383:	pushf  
  40d384:	sbb    DWORD PTR [ebx],esp
  40d386:	test   eax,0x4bb105e9
  40d38b:	ss or  al,0x1b
  40d38e:	pop    ss
  40d38f:	ja     0x40d38b
  40d391:	cmp    dl,BYTE PTR [edx+0x7d0712f7]
  40d397:	or     eax,0x34114a99
  40d39c:	sub    al,0x9e
  40d39e:	fwait
  40d39f:	jne    0x40d381
  40d3a1:	mov    DWORD PTR [eax],esi
  40d3a3:	or     DWORD PTR [ebx+edx*8+0x22],ecx
  40d3a7:	jae    0x40d413
  40d3a9:	mov    ds:0xce9f64f6,al
  40d3ae:	repz mov eax,DWORD PTR [ebx+0x57e4c267]
  40d3b5:	jbe    0x40d410
  40d3b7:	nop
  40d3b8:	retf   
  40d3b9:	clc    
  40d3ba:	retf   0xf569
  40d3bd:	push   cs
  40d3be:	mov    ah,0x43
  40d3c0:	(bad)  
  40d3c2:	dec    esi
  40d3c3:	mov    dh,0x2
  40d3c5:	sbb    al,0xb1
  40d3c7:	mov    BYTE PTR [ecx],dl
  40d3c9:	scas   al,BYTE PTR es:[di]
  40d3cb:	inc    ebp
  40d3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3cd:	cmp    ecx,DWORD PTR [edx+0x372350ca]
  40d3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d4:	push   ecx
  40d3d5:	sbb    DWORD PTR [edi],0xffffffed
  40d3d8:	mov    ds,WORD PTR [edi-0x2bfc0ac6]
  40d3de:	vmread DWORD PTR [ebx],eax
  40d3e1:	xchg   ebp,eax
  40d3e2:	sub    ebp,DWORD PTR gs:[edi]
  40d3e5:	mov    ebx,0x2cb88b0e
  40d3ea:	pop    ds
  40d3eb:	ds jne 0x40d445
  40d3ee:	(bad)  
  40d3ef:	lock or ch,ch
  40d3f2:	inc    edx
  40d3f3:	mov    esp,?
  40d3f5:	fwait
  40d3f6:	lahf   
  40d3f7:	mov    cl,bh
  40d3f9:	mov    cl,0x11
  40d3fb:	push   edi
  40d3fc:	or     edx,edi
  40d3fe:	mov    ds:0x825dcc8b,eax
  40d403:	inc    ecx
  40d404:	and    al,0x1e
  40d406:	(bad)  
  40d407:	xor    DWORD PTR [edx-0x6b3ce98d],ebp
  40d40d:	addr16 and al,cl
  40d410:	or     edx,DWORD PTR [ebx]
  40d412:	imul   eax,DWORD PTR [ebx],0x13
  40d415:	test   DWORD PTR [ebx+edx*1+0x4b],ebp
  40d419:	pop    esp
  40d41a:	cmc    
  40d41b:	adc    al,BYTE PTR [edi-0x259c6a49]
  40d421:	dec    esi
  40d422:	or     esp,DWORD PTR [eax-0x6a]
  40d425:	and    dh,BYTE PTR [esi]
  40d427:	pushf  
  40d428:	jbe    0x40d3ed
  40d42a:	ficomp WORD PTR [eax]
  40d42c:	cmp    ch,BYTE PTR [ebx]
  40d42e:	sbb    al,0x5
  40d430:	int    0x37
  40d432:	mov    al,0x73
  40d434:	sbb    BYTE PTR [esi+eax*1],cl
  40d437:	push   edx
  40d438:	fs gs dec edi
  40d43b:	mul    DWORD PTR [ebx+ebp*8+0x68065825]
  40d442:	mov    dh,0xf7
  40d444:	adc    BYTE PTR [esi+ebx*8+0x1c],bh
  40d448:	or     esi,DWORD PTR [eax-0x68c7618d]
  40d44e:	adc    ah,BYTE PTR [ecx]
  40d450:	fucomi st,st(2)
  40d452:	jae    0x40d451
  40d454:	xlat   BYTE PTR ds:[ebx]
  40d455:	in     eax,0x21
  40d457:	and    dl,ch
  40d459:	int3   
  40d45a:	(bad)  
  40d45b:	in     al,0xda
  40d45d:	mov    dh,BYTE PTR [edx+0x403aa7df]
  40d463:	adc    bh,BYTE PTR [ebp-0x59]
  40d466:	mov    ds:0x6b210a28,eax
  40d46b:	imul   edi,esi,0xfffffffe
  40d46e:	jge    0x40d452
  40d470:	push   edx
  40d471:	adc    al,0xca
  40d473:	xchg   BYTE PTR [ecx],ah
  40d475:	cmp    BYTE PTR [ecx],dh
  40d477:	and    esi,DWORD PTR [edi+0x6a0552be]
  40d47d:	shl    eax,0xd3
  40d480:	jb     0x40d404
  40d482:	adc    DWORD PTR [ebp+0x7],edi
  40d485:	aaa    
  40d486:	mov    ah,ch
  40d488:	ret    
  40d489:	scas   al,BYTE PTR es:[edi]
  40d48a:	loopne 0x40d418
  40d48c:	inc    ebx
  40d48d:	out    0x2c,al
  40d48f:	cmp    al,0xba
  40d491:	ins    BYTE PTR es:[edi],dx
  40d492:	clc    
  40d493:	fisttp QWORD PTR [eax-0x41]
  40d496:	sub    ah,BYTE PTR ds:0x59053f14
  40d49c:	xchg   ebp,eax
  40d49d:	sbb    cl,cl
  40d49f:	push   edi
  40d4a0:	aad    0x71
  40d4a2:	adc    eax,0xe788f511
  40d4a7:	sub    eax,0x895fd8bc
  40d4ac:	lea    esi,[ebp+eax*2-0x64]
  40d4b0:	sahf   
  40d4b1:	jb     0x40d480
  40d4b3:	fsubr  DWORD PTR [esi-0x43eff7dc]
  40d4b9:	int    0x3f
  40d4bb:	mov    ebp,0xb4640fe
  40d4c0:	add    DWORD PTR [esi-0x47],esi
  40d4c3:	xchg   dh,al
  40d4c5:	mov    ecx,0xd2e12c41
  40d4ca:	xchg   BYTE PTR [esi-0x72],cl
  40d4cd:	jge    0x40d53a
  40d4cf:	lods   al,BYTE PTR ds:[esi]
  40d4d0:	daa    
  40d4d1:	aam    0x7f
  40d4d3:	adc    eax,0xe4168706
  40d4d8:	loopne 0x40d478
  40d4da:	dec    edi
  40d4db:	shl    BYTE PTR [esi+0x5c912dd2],0x99
  40d4e2:	inc    BYTE PTR [ebx]
  40d4e4:	int3   
  40d4e5:	push   0x76
  40d4e7:	arpl   bp,si
  40d4e9:	mov    bl,0xdb
  40d4eb:	mov    esp,0x8395f608
  40d4f0:	(bad)  
  40d4f1:	mov    esp,0x34a0ba6d
  40d4f6:	jmp    0x40d50a
  40d4f8:	pop    esp
  40d4f9:	outs   dx,BYTE PTR ds:[esi]
  40d4fa:	jle    0x40d4a3
  40d4fc:	sbb    al,0x98
  40d4fe:	or     al,al
  40d500:	ins    DWORD PTR es:[edi],dx
  40d501:	inc    ecx
  40d502:	arpl   WORD PTR [eax-0x10],sp
  40d505:	xor    edx,DWORD PTR [ebp-0x3]
  40d508:	mov    ebx,0xb3f480ad
  40d50d:	(bad)  
  40d50f:	sub    al,0x7e
  40d511:	mov    esp,0x7da7033c
  40d516:	jnp    0x40d4fe
  40d518:	mov    ebx,gs
  40d51a:	sbb    ch,BYTE PTR [eax+0x609d9632]
  40d520:	mov    cl,0x11
  40d522:	cs pop esp
  40d524:	out    dx,eax
  40d525:	ds out 0x46,al
  40d528:	(bad)  
  40d529:	cld    
  40d52a:	retf   
  40d52b:	dec    ebp
  40d52d:	mov    ah,0x33
  40d52f:	enter  0xd749,0xe9
  40d533:	(bad)  
  40d534:	jmp    0xbef5c1d2
  40d539:	jecxz  0x40d51c
  40d53b:	imul   ecx,DWORD PTR ds:0x17066677,0x64567ce
  40d545:	mov    dh,0x7c
  40d547:	cmp    BYTE PTR [ebx-0x32],dh
  40d54a:	mov    esp,0xa1ca7505
  40d54f:	mov    ds:0x70e482ae,eax
  40d554:	xlat   BYTE PTR ds:[ebx]
  40d555:	sub    DWORD PTR [eax],edx
  40d557:	and    BYTE PTR [edi+0x70],ah
  40d55a:	add    eax,edi
  40d55c:	es das 
  40d55e:	and    al,ch
  40d560:	and    bh,BYTE PTR [ebx-0x4273b203]
  40d566:	fsub   st,st(5)
  40d568:	and    al,0xd4
  40d56a:	int3   
  40d56b:	inc    ebx
  40d56c:	and    eax,DWORD PTR [ecx+0x15]
  40d56f:	(bad)  
  40d570:	mov    al,ds:0x60c7f1b2
  40d575:	ins    DWORD PTR es:[edi],dx
  40d576:	inc    ebp
  40d577:	je     0x40d534
  40d579:	dec    BYTE PTR [eax]
  40d57b:	jb     0x40d5e0
  40d57d:	data16 repz ss cmc 
  40d581:	out    0xd8,eax
  40d583:	out    dx,al
  40d584:	cmp    BYTE PTR [eax-0x4b9d1834],ah
  40d58a:	push   ss
  40d58b:	jns    0x59f3aa23
  40d591:	xor    ecx,DWORD PTR [edx]
  40d593:	dec    eax
  40d594:	daa    
  40d595:	xor    eax,0xbc1a0cc2
  40d59a:	adc    DWORD PTR fs:[esi-0x5f],eax
  40d59e:	push   ecx
  40d59f:	mov    ecx,0xb660e680
  40d5a4:	dec    eax
  40d5a5:	loopne 0x40d61a
  40d5a7:	cld    
  40d5a8:	cli    
  40d5a9:	cdq    
  40d5aa:	push   0x48
  40d5ac:	push   esp
  40d5ad:	mov    esi,0x79d0436e
  40d5b2:	mov    ebx,0xa88e30b4
  40d5b7:	imul   edi,DWORD PTR [ebx],0x9eb28b64
  40d5bd:	jnp    0x40d5a8
  40d5bf:	stos   BYTE PTR es:[edi],al
  40d5c0:	out    dx,eax
  40d5c1:	or     ch,BYTE PTR [ebx]
  40d5c3:	push   esp
  40d5c4:	fisub  WORD PTR [ecx-0x9]
  40d5c7:	jge    0x40d625
  40d5c9:	imul   ecx,eax,0x760bb8ae
  40d5cf:	sbb    al,0x38
  40d5d1:	xchg   edi,eax
  40d5d2:	addr16 mov esp,0xe80967aa
  40d5d8:	dec    ecx
  40d5d9:	sbb    BYTE PTR [esi+0x76],dh
  40d5dc:	xchg   esp,eax
  40d5dd:	push   cs
  40d5de:	int    0x78
  40d5e0:	into   
  40d5e1:	jbe    0x40d572
  40d5e3:	xlat   BYTE PTR ds:[ebx]
  40d5e4:	ins    BYTE PTR es:[edi],dx
  40d5e5:	or     DWORD PTR [esi],edi
  40d5e7:	inc    ebx
  40d5e8:	fidivr WORD PTR [esi+0x28df74c6]
  40d5ee:	popf   
  40d5ef:	or     ebp,DWORD PTR [esi+0x5d]
  40d5f2:	aam    0xeb
  40d5f4:	inc    eax
  40d5f5:	jecxz  0x40d66a
  40d5f7:	mov    bh,0x30
  40d5f9:	push   esi
  40d5fa:	lahf   
  40d5fb:	xchg   BYTE PTR gs:[edx-0x39a6f966],bl
  40d602:	sar    DWORD PTR [esi+0x3],1
  40d605:	(bad)  
  40d606:	(bad)  
  40d607:	cmp    dl,BYTE PTR [edx]
  40d609:	(bad)  
  40d60a:	xor    eax,0x241878cb
  40d60f:	daa    
  40d610:	test   eax,0x4f5e9004
  40d615:	cwde   
  40d616:	inc    esp
  40d617:	jmp    0xae3c239
  40d61c:	mov    ds:0xc94150fb,eax
  40d621:	lahf   
  40d622:	inc    esp
  40d623:	je     0x40d619
  40d625:	dec    ebp
  40d626:	pop    ebx
  40d627:	xlat   BYTE PTR ds:[ebx]
  40d628:	out    0x89,al
  40d62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d62b:	shr    edx,0x86
  40d62e:	lock sub DWORD PTR [esi-0x43],0x26
  40d633:	call   0x13a1a415
  40d638:	inc    ecx
  40d639:	lahf   
  40d63a:	push   edx
  40d63b:	test   eax,0x11136821
  40d640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d641:	pop    esi
  40d642:	jge    0x40d5fc
  40d644:	push   DWORD PTR [edx]
  40d646:	loop   0x40d5d1
  40d648:	stc    
  40d649:	mov    ds:0xe88c558d,al
  40d64e:	sti    
  40d64f:	cdq    
  40d650:	sbb    DWORD PTR [ecx],edx
  40d652:	fwait
  40d653:	jno    0x40d5f2
  40d655:	fmul   DWORD PTR [edi]
  40d657:	test   dl,0x3c
  40d65a:	inc    edx
  40d65b:	adc    ebx,DWORD PTR [esi]
  40d65d:	out    0xd6,al
  40d65f:	or     DWORD PTR [eax+eax*1],edx
  40d662:	xchg   ebx,eax
  40d663:	jmp    0x40d66c
  40d665:	pop    edi
  40d666:	add    DWORD PTR [ebx+eiz*8+0x6e93a62f],0x10208ddb
  40d671:	inc    esi
  40d672:	jmp    0x911f233
  40d677:	sbb    DWORD PTR [ebx],ebx
  40d679:	or     dh,BYTE PTR [esi]
  40d67b:	inc    ecx
  40d67c:	jnp    0x40d614
  40d67e:	pop    es
  40d67f:	inc    esi
  40d680:	sbb    DWORD PTR [esi-0x314222bd],ebx
  40d686:	xchg   edx,eax
  40d687:	mov    DWORD PTR [edi-0x3a],esp
  40d68a:	sahf   
  40d68b:	add    eax,0x6c91e130
  40d690:	and    eax,0x58ff9f45
  40d695:	test   DWORD PTR [ecx-0x22],edi
  40d698:	das    
  40d699:	mov    al,0xd7
  40d69b:	out    dx,al
  40d69c:	(bad)  
  40d69d:	mov    BYTE PTR [esi+eiz*8],ch
  40d6a0:	pop    ebp
  40d6a1:	retf   
  40d6a2:	(bad)  
  40d6a3:	je     0x40d6df
  40d6a5:	int    0x5d
  40d6a7:	dec    edi
  40d6a8:	xor    dl,dl
  40d6aa:	jmp    0xa561:0x1c0e4c27
  40d6b1:	repnz fs (bad) 
  40d6b4:	into   
  40d6b5:	mov    ecx,0x5c6f715a
  40d6ba:	jecxz  0x40d735
  40d6bc:	stc    
  40d6bd:	xchg   esi,eax
  40d6be:	nop
  40d6bf:	mov    esp,0x960ffccc
  40d6c4:	(bad)  
  40d6c6:	add    al,0xe1
  40d6c8:	push   edi
  40d6c9:	cmc    
  40d6ca:	div    BYTE PTR cs:[ebx]
  40d6cd:	call   0xab4d:0x8a0e3bbe
  40d6d4:	loopne 0x40d6f7
  40d6d6:	adc    al,0xf6
  40d6d8:	(bad)  
  40d6d9:	push   ds
  40d6da:	out    dx,eax
  40d6db:	mov    dl,0xd9
  40d6dd:	(bad)  
  40d6de:	loopne 0x40d6db
  40d6e0:	jmp    0xd056c8e1
  40d6e5:	and    dl,BYTE PTR [ebx-0x1df8ff82]
  40d6eb:	xchg   DWORD PTR [eax+0x35],ebx
  40d6ee:	call   0xc8fa:0xe922878b
  40d6f5:	xchg   DWORD PTR [eax-0x5eb2871e],ebp
  40d6fb:	mov    fs,WORD PTR [esi+0x6113160c]
  40d701:	nop
  40d702:	lds    edi,FWORD PTR [ebx]
  40d704:	icebp  
  40d705:	sub    cl,BYTE PTR [esi]
  40d707:	push   ecx
  40d708:	shl    BYTE PTR [ecx-0x53353e1f],cl
  40d70e:	jno    0x40d729
  40d710:	mov    esi,0x541e3597
  40d715:	pusha  
  40d716:	out    dx,al
  40d717:	into   
  40d718:	push   ebx
  40d719:	imul   BYTE PTR [ecx-0x558cea7e]
  40d71f:	dec    eax
  40d720:	pushf  
  40d721:	xchg   ebp,eax
  40d722:	enter  0xe6b7,0x34
  40d726:	sub    al,0x42
  40d728:	(bad)  
  40d729:	sti    
  40d72a:	push   ss
  40d72b:	add    BYTE PTR [ecx+0x19d59b77],al
  40d731:	mov    bl,0x6d
  40d733:	ret    
  40d734:	fcmovbe st,st(1)
  40d736:	ins    BYTE PTR es:[edi],dx
  40d737:	fsub   st(6),st
  40d739:	xchg   ebx,eax
  40d73a:	(bad)  
  40d73b:	in     al,dx
  40d73c:	ja     0x40d6f8
  40d73e:	pop    ds
  40d73f:	cmp    al,0x12
  40d741:	push   ebx
  40d742:	jmp    0x40d723
  40d744:	outs   dx,BYTE PTR ds:[esi]
  40d745:	adc    BYTE PTR ds:0x4aac26a1,0x5a
  40d74c:	in     al,dx
  40d74d:	mov    eax,ds:0xa5448e32
  40d752:	mov    esp,DWORD PTR ds:0x554655a0
  40d758:	test   esi,ebx
  40d75a:	sahf   
  40d75b:	sbb    BYTE PTR [esi-0x126db5b8],ah
  40d761:	std    
  40d762:	xor    ch,al
  40d764:	call   0x263e:0x67da423d
  40d76b:	fwait
  40d76c:	std    
  40d76d:	xchg   ebx,eax
  40d76e:	cmp    ch,BYTE PTR [eax-0x5c]
  40d771:	clc    
  40d772:	fcomp  QWORD PTR [esi+0x71]
  40d775:	jno    0x40d70f
  40d777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d778:	push   0x9f41274b
  40d77d:	adc    BYTE PTR [ebp-0x7f],dh
  40d780:	ds mov edx,0x3330f50c
  40d786:	xor    esi,DWORD PTR [esi]
  40d788:	scas   eax,DWORD PTR es:[edi]
  40d789:	jo     0x40d7a5
  40d78b:	sahf   
  40d78c:	xchg   esp,eax
  40d78d:	jl     0x40d777
  40d78f:	ins    BYTE PTR es:[edi],dx
  40d790:	pop    esi
  40d791:	outs   dx,DWORD PTR ds:[esi]
  40d792:	iret   
  40d793:	neg    DWORD PTR [edi+ebp*2]
  40d796:	xchg   esi,eax
  40d797:	inc    eax
  40d798:	cmc    
  40d799:	inc    edi
  40d79a:	mov    ebp,0xb1bcaaea
  40d79f:	dec    eax
  40d7a0:	bound  esp,QWORD PTR [ecx-0x21a983d3]
  40d7a6:	mov    edx,0x9e6ac39c
  40d7ab:	push   0xbc21d8da
  40d7b0:	mov    ?,WORD PTR [edx+esi*2]
  40d7b3:	xor    BYTE PTR [edi-0x5a],bh
  40d7b6:	scas   al,BYTE PTR es:[edi]
  40d7b7:	xchg   ecx,eax
  40d7b8:	test   al,0x68
  40d7ba:	loopne 0x40d7b4
  40d7bc:	leave  
  40d7bd:	aam    0x50
  40d7bf:	imul   dh
  40d7c1:	test   eax,0x6449162b
  40d7c6:	addr16 inc ebx
  40d7c8:	or     BYTE PTR [ecx+eiz*2+0x1d],dh
  40d7cc:	scas   al,BYTE PTR es:[edi]
  40d7cd:	push   eax
  40d7ce:	fwait
  40d7cf:	inc    esi
  40d7d0:	loope  0x40d81a
  40d7d2:	mov    ah,0x4e
  40d7d4:	shl    BYTE PTR [ebp+0x8a32f2a],1
  40d7da:	add    DWORD PTR [ebp-0x41],0xffffffc6
  40d7de:	ret    
  40d7df:	mov    eax,ds:0x6f50776d
  40d7e4:	push   ss
  40d7e5:	arpl   bp,di
  40d7e7:	cli    
  40d7e8:	mov    esp,DWORD PTR [ebx+ebx*8]
  40d7eb:	pop    esp
  40d7ec:	mov    ah,0x9b
  40d7ee:	pop    edi
  40d7ef:	nop
  40d7f0:	cmp    BYTE PTR [esi-0x33],al
  40d7f3:	out    dx,eax
  40d7f4:	mov    ecx,0x5dcee11f
  40d7f9:	inc    ebx
  40d7fa:	pop    ss
  40d7fb:	imul   ebx,DWORD PTR [ecx+0x48],0xffffffc0
  40d7ff:	adc    ch,BYTE PTR [ecx+0x7ed39f6a]
  40d805:	add    al,0x93
  40d807:	test   eax,0x7885464e
  40d80c:	es into 
  40d80e:	mov    DWORD PTR [ebx],ebp
  40d810:	mov    ebx,0xf50a922a
  40d815:	jle    0x40d7d6
  40d817:	hlt    
  40d818:	add    bl,BYTE PTR [ecx+0x51]
  40d81b:	cmp    BYTE PTR [ecx+edi*2],0xe3
  40d81f:	mov    esp,0xabec5e07
  40d824:	jecxz  0x40d875
  40d826:	call   0x658c:0x9c2e97bb
  40d82d:	pop    ebx
  40d82e:	cmp    BYTE PTR [eax+0x4451404b],dh
  40d834:	outs   dx,BYTE PTR ds:[esi]
  40d835:	add    BYTE PTR [ebx+0x68906c70],ah
  40d83b:	jp     0x40d7c0
  40d83d:	mov    ds:0xcca3f113,eax
  40d842:	fst    QWORD PTR [eax+0x2e7cbba1]
  40d848:	mov    gs,edi
  40d84a:	test   BYTE PTR [esi-0x75b9d2f3],dh
  40d850:	das    
  40d851:	dec    ecx
  40d852:	(bad)  
  40d854:	idiv   DWORD PTR [eax+0xc01731c]
  40d85a:	and    al,dl
  40d85c:	inc    edi
  40d85d:	xchg   edi,eax
  40d85e:	(bad)  
  40d85f:	pop    ebp
  40d860:	mov    ss,WORD PTR [edi+0x3b]
  40d863:	xor    bh,bh
  40d865:	and    DWORD PTR [ebp+esi*8-0x18],edi
  40d869:	add    ebp,eax
  40d86b:	mov    eax,0xee8bd406
  40d870:	xor    al,0xc9
  40d872:	retf   
  40d873:	and    cl,al
  40d875:	ins    BYTE PTR es:[edi],dx
  40d876:	test   al,0x7c
  40d878:	jo     0x40d81d
  40d87a:	xlat   BYTE PTR ds:[ebx]
  40d87b:	in     eax,0x46
  40d87d:	add    BYTE PTR ds:0xf025e50e,0x37
  40d884:	add    edi,DWORD PTR [edi-0x2c66b5d]
  40d88a:	aaa    
  40d88b:	outs   dx,DWORD PTR ds:[esi]
  40d88c:	test   al,0xce
  40d88e:	jge    0x40d83b
  40d890:	mov    dl,0xf4
  40d892:	(bad)  
  40d893:	jle    0x40d862
  40d895:	cld    
  40d896:	push   ebp
  40d897:	(bad)  
  40d898:	lods   al,BYTE PTR ds:[esi]
  40d899:	and    DWORD PTR [edi-0x1f822687],0x1dd849be
  40d8a3:	mov    ds:0xe0cddd16,eax
  40d8a8:	popf   
  40d8a9:	xchg   edi,eax
  40d8aa:	push   esi
  40d8ab:	and    ah,BYTE PTR ds:0x81b6a303
  40d8b1:	sbb    dh,BYTE PTR [ecx]
  40d8b3:	mov    esi,DWORD PTR [eax+0x1e2448b3]
  40d8b9:	mov    ds:0xa0b10dc8,eax
  40d8be:	fsubr  QWORD PTR [ebx+0x32]
  40d8c1:	and    al,0xa5
  40d8c3:	adc    BYTE PTR [edx+0x3c71ebad],cl
  40d8c9:	dec    eax
  40d8ca:	inc    ebx
  40d8cb:	sbb    DWORD PTR [edx+0x631c8ca2],esp
  40d8d1:	inc    esi
  40d8d2:	aam    0x12
  40d8d4:	mov    esp,0x93dc893a
  40d8d9:	mov    cl,0xf9
  40d8db:	outs   dx,DWORD PTR ds:[esi]
  40d8dc:	add    BYTE PTR [ecx-0x4908008d],0x3a
  40d8e3:	dec    ecx
  40d8e4:	and    DWORD PTR es:[esi+0x1376843e],eax
  40d8eb:	mov    bh,0xf8
  40d8ed:	push   es
  40d8ee:	dec    eax
  40d8ef:	push   edi
  40d8f0:	xchg   esi,eax
  40d8f1:	cs fwait
  40d8f3:	sub    eax,0x88cc8242
  40d8f8:	popa   
  40d8f9:	xchg   ebp,esi
  40d8fb:	push   cs
  40d8fc:	push   ebx
  40d8fd:	jno    0x40d93b
  40d8ff:	lods   al,BYTE PTR ds:[esi]
  40d900:	ins    DWORD PTR es:[edi],dx
  40d901:	jge    0x40d8e8
  40d903:	add    al,0xfb
  40d905:	in     eax,0x7b
  40d907:	dec    esp
  40d908:	mov    ds:0x36eff5ca,al
  40d90d:	dec    ebx
  40d90e:	fcom   QWORD PTR [eax+0x19]
  40d911:	(bad)  
  40d912:	in     al,0x20
  40d914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d915:	lods   eax,DWORD PTR ds:[esi]
  40d916:	xchg   ecx,eax
  40d917:	mov    al,0x52
  40d919:	mov    WORD PTR [ebp+0x2080a9f0],fs
  40d91f:	add    esp,DWORD PTR [ecx-0x4c062aa]
  40d925:	pop    esp
  40d926:	xor    al,0xea
  40d928:	test   al,0x80
  40d92a:	cdq    
  40d92b:	pop    edi
  40d92c:	and    dh,al
  40d92e:	out    0x3b,eax
  40d930:	jmp    0xe1b1696b
  40d935:	push   ds
  40d936:	mov    ss,WORD PTR [ecx+0x77]
  40d939:	ins    BYTE PTR es:[edi],dx
  40d93a:	div    ah
  40d93c:	addr16 sbb eax,0x810a6a4b
  40d942:	push   0x5121cb9a
  40d947:	cmp    eax,0x37968093
  40d94c:	cmp    eax,0xe561d2a8
  40d951:	adc    ch,dh
  40d953:	adc    eax,0xff7555f0
  40d958:	std    
  40d959:	outs   dx,BYTE PTR ds:[esi]
  40d95a:	inc    BYTE PTR cs:[esi]
  40d95d:	int3   
  40d95e:	adc    al,0xb7
  40d960:	xchg   edi,eax
  40d961:	pop    DWORD PTR [ecx+0x36be12ff]
  40d967:	push   0xffffff94
  40d969:	push   cs
  40d96a:	(bad)  
  40d96b:	mov    cl,0x87
  40d96d:	dec    esp
  40d96e:	add    bh,BYTE PTR [ecx+edi*2+0x4730cece]
  40d975:	adc    ebp,DWORD PTR [edi-0x20cf1c3a]
  40d97b:	jo     0x40d9f4
  40d97d:	push   edx
  40d97e:	mov    dl,0xea
  40d980:	jl     0x40d906
  40d982:	cmc    
  40d983:	cli    
  40d984:	ret    
  40d985:	das    
  40d986:	(bad)  
  40d987:	not    BYTE PTR [ecx]
  40d989:	fcom   QWORD PTR [edi]
  40d98b:	pop    edi
  40d98c:	pop    ds
  40d98d:	popf   
  40d98e:	inc    edi
  40d98f:	sbb    cl,dl
  40d991:	test   eax,0x67e4de8e
  40d996:	inc    ebx
  40d997:	repz inc ecx
  40d999:	jae    0x40d99c
  40d99b:	sbb    al,0x2b
  40d99d:	pop    esp
  40d99e:	cmp    bh,BYTE PTR [eax-0x63]
  40d9a1:	mov    esi,0x66d676cb
  40d9a6:	leave  
  40d9a7:	mov    ss,WORD PTR [ecx+0x2f]
  40d9aa:	mov    bl,0x52
  40d9ac:	iret   
  40d9ad:	dec    ecx
  40d9ae:	cmp    ebp,ebx
  40d9b0:	pop    ebp
  40d9b1:	dec    esi
  40d9b2:	xor    eax,0xfcaae41c
  40d9b7:	stos   DWORD PTR es:[edi],eax
  40d9b8:	rol    DWORD PTR [eax+esi*8],0xf8
  40d9bc:	push   es
  40d9bd:	jns    0x40d9e9
  40d9bf:	add    eax,0xc9368235
  40d9c4:	icebp  
  40d9c5:	test   eax,0x6d5decff
  40d9ca:	aas    
  40d9cb:	jbe    0x40d95f
  40d9cd:	adc    DWORD PTR [edi],eax
  40d9cf:	pop    ss
  40d9d0:	pop    edx
  40d9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d2:	std    
  40d9d3:	ret    
  40d9d4:	ds loop 0x40d9e4
  40d9d7:	jg     0x40da56
  40d9d9:	ins    DWORD PTR es:[edi],dx
  40d9da:	xchg   ebx,eax
  40d9db:	rcl    DWORD PTR [ebp+0x59],cl
  40d9de:	lock test dl,0x84
  40d9e2:	pop    eax
  40d9e3:	mov    DWORD PTR [eax-0x7e289c1c],edx
  40d9e9:	cld    
  40d9ea:	dec    esp
  40d9eb:	or     esi,ecx
  40d9ed:	stos   BYTE PTR es:[edi],al
  40d9ee:	adc    eax,0x64453bf6
  40d9f3:	adc    BYTE PTR [edx+0x5e41f1de],dl
  40d9f9:	mov    BYTE PTR [edi+0x3d71b2c1],cl
  40d9ff:	push   cs
  40da00:	leave  
  40da01:	mov    edi,0x254657bb
  40da06:	dec    esp
  40da07:	ja     0x40d9ee
  40da09:	cmp    eax,0x88d6727
  40da0e:	mov    ebx,DWORD PTR [ebx]
  40da10:	mov    edi,0x59cbfd9a
  40da15:	sub    al,0xb6
  40da17:	pop    esi
  40da18:	fldcw  WORD PTR [ebp+0x76]
  40da1b:	in     eax,0x25
  40da1d:	adc    eax,0x62130c92
  40da22:	mov    ds:0x7ca1db52,al
  40da27:	sahf   
  40da28:	jecxz  0x40d9be
  40da2a:	xchg   eax,esp
  40da2c:	out    0x7a,al
  40da2e:	popf   
  40da2f:	gs sbb eax,0xf297655f
  40da35:	sbb    al,0xb4
  40da37:	call   FWORD PTR [esi+0xe]
  40da3a:	push   ss
  40da3b:	mov    ebp,0x7f990f0c
  40da40:	ret    0xf035
  40da43:	les    edx,FWORD PTR [eax]
  40da45:	pop    esi
  40da46:	or     eax,0xdcd110b9
  40da4b:	sbb    DWORD PTR ds:0x6df7092a,edi
  40da51:	inc    edi
  40da52:	mov    esi,0x7db34071
  40da57:	mov    ds:0xd57475d1,eax
  40da5c:	fwait
  40da5d:	mov    dh,0x4
  40da5f:	lods   eax,DWORD PTR ds:[esi]
  40da60:	repnz cmp ecx,esp
  40da63:	cmp    al,0xe4
  40da65:	retf   0xb5ad
  40da68:	adc    al,0xfb
  40da6a:	pop    eax
  40da6b:	int    0x77
  40da6d:	mov    esp,0x72f93d51
  40da72:	and    bl,BYTE PTR [eax+0x3b]
  40da75:	jecxz  0x40da49
  40da77:	jge    0x40da2d
  40da79:	das    
  40da7a:	std    
  40da7b:	hlt    
  40da7c:	fldenv [esp+esi*8+0x67]
  40da80:	push   esi
  40da81:	loop   0x40da29
  40da83:	popa   
  40da84:	shr    bl,cl
  40da86:	iret   
  40da87:	js     0x40da49
  40da89:	mov    ebp,0x2529f153
  40da8e:	stc    
  40da8f:	in     eax,dx
  40da90:	jae    0x40daf1
  40da92:	push   0x4b
  40da94:	clc    
  40da95:	sbb    edi,DWORD PTR [ecx+0x4a793d46]
  40da9b:	xlat   BYTE PTR ds:[ebx]
  40da9c:	scas   al,BYTE PTR es:[edi]
  40da9d:	jae    0x40dad0
  40da9f:	jmp    0xd38fb198
  40daa4:	pop    es
  40daa5:	push   edx
  40daa6:	inc    ebp
  40daa7:	addr16 popa 
  40daa9:	cwde   
  40daaa:	in     al,0x3e
  40daac:	sbb    cl,dl
  40daae:	pop    es
  40daaf:	mov    ?,WORD PTR [ebx+0x33]
  40dab2:	push   ss
  40dab3:	push   ds
  40dab4:	xor    ebx,DWORD PTR [ebx]
  40dab6:	in     al,dx
  40dab7:	and    edi,DWORD PTR [esi]
  40dab9:	inc    esp
  40daba:	jp     0x40da4f
  40dabc:	pop    esi
  40dabd:	icebp  
  40dabe:	pop    esi
  40dabf:	xchg   ecx,eax
  40dac0:	mov    cl,0x25
  40dac2:	ror    DWORD PTR [edx-0x41],cl
  40dac5:	add    eax,0xfe6f4e21
  40daca:	push   edi
  40dacb:	mov    BYTE PTR [ebx+ebx*4+0x727b27c5],0x20
  40dad3:	or     BYTE PTR [edx+0x6f36a9d7],al
  40dad9:	add    al,0xc3
  40dadb:	rcl    bh,0xb6
  40dade:	mov    DWORD PTR [edi+0x3],esi
  40dae1:	xor    al,0xa1
  40dae3:	cmc    
  40dae4:	mov    eax,ds:0x3be06071
  40dae9:	adc    eax,0xbf66c1ee
  40daee:	out    dx,al
  40daef:	enter  0x61f8,0x6e
  40daf3:	sub    eax,DWORD PTR [ebx]
  40daf5:	scas   eax,DWORD PTR es:[edi]
  40daf6:	mov    edx,0x59b5ff0e
  40dafb:	fcmovnbe st,st(3)
  40dafd:	iret   
  40dafe:	arpl   WORD PTR [edx],bx
  40db00:	dec    edi
  40db01:	jmp    0x40daf4
  40db03:	sub    ebx,DWORD PTR [esi-0x4cb20054]
  40db09:	pop    edi
  40db0a:	pop    ebp
  40db0b:	xchg   ebp,eax
  40db0c:	es aaa 
  40db0e:	push   ds
  40db0f:	mov    cl,0x98
  40db11:	les    edx,FWORD PTR [eax]
  40db13:	xor    DWORD PTR [eax],eax
  40db15:	(bad)  
  40db16:	mov    edx,0xf8b80fae
  40db1b:	arpl   WORD PTR [ecx],dx
  40db1d:	adc    al,0x3b
  40db1f:	fs pop edx
  40db21:	(bad)  
  40db22:	sub    DWORD PTR [edi-0x7],esi
  40db25:	add    BYTE PTR ss:[esi+ebx*1+0x3f],dh
  40db2a:	mov    cl,0xbf
  40db2c:	shl    BYTE PTR [eax-0x6b02c38c],0x30
  40db33:	mov    ecx,0xddbd4471
  40db38:	das    
  40db39:	cmp    ch,BYTE PTR [edi+ebp*1-0x2a]
  40db3d:	dec    ecx
  40db3e:	out    0x9b,eax
  40db40:	out    dx,al
  40db41:	popf   
  40db42:	outs   dx,BYTE PTR ds:[esi]
  40db43:	lods   al,BYTE PTR ds:[esi]
  40db44:	daa    
  40db45:	call   0xef3a:0x8575daa8
  40db4c:	lods   al,BYTE PTR ds:[esi]
  40db4d:	mov    eax,0x64687e84
  40db52:	cwde   
  40db53:	lahf   
  40db54:	pop    ebx
  40db55:	scas   al,BYTE PTR es:[edi]
  40db56:	inc    ebx
  40db57:	push   edi
  40db58:	jo     0x40db33
  40db5a:	xchg   ebx,eax
  40db5b:	adc    ch,cl
  40db5d:	xchg   esp,eax
  40db5e:	sub    bl,BYTE PTR [ecx-0x6a]
  40db61:	mov    ebp,0xbd85187f
  40db66:	add    al,0x3a
  40db68:	imul   ch
  40db6a:	sbb    cl,BYTE PTR [ecx+0x39257925]
  40db70:	imul   BYTE PTR [esi-0x53]
  40db73:	pop    ecx
  40db74:	pop    ds
  40db75:	div    DWORD PTR [ecx+ecx*2-0x961bfa9]
  40db7c:	cmp    DWORD PTR [ebx],0x2b40bf97
  40db82:	jo     0x40dbb4
  40db84:	mov    al,BYTE PTR [ecx+0x17a9d8f6]
  40db8a:	sbb    ebx,edx
  40db8c:	shr    BYTE PTR [eax+0x76cd8e0a],1
  40db92:	neg    BYTE PTR [eax]
  40db94:	mov    ebp,0xcc9d792
  40db99:	shl    BYTE PTR [ecx],0x84
  40db9c:	lock test ebp,0xd989a710
  40dba3:	inc    esp
  40dba4:	and    al,0x7d
  40dba6:	out    0xfe,eax
  40dba8:	jecxz  0x40dbc2
  40dbaa:	jge    0x40db43
  40dbac:	cmp    ah,BYTE PTR [edx]
  40dbae:	call   0xaeae:0x71c30201
  40dbb5:	lods   eax,DWORD PTR ss:[esi]
  40dbb7:	int    0x34
  40dbb9:	jae    0x40db78
  40dbbb:	pushf  
  40dbbc:	mov    al,ds:0x799bbb4
  40dbc1:	andps  xmm6,XMMWORD PTR [eax+0x7e0f47c1]
  40dbc8:	fsub   st(2),st
  40dbca:	in     al,0xc9
  40dbcc:	into   
  40dbcd:	and    eax,0x15f5a9e1
  40dbd2:	xchg   edx,eax
  40dbd3:	inc    ecx
  40dbd4:	test   BYTE PTR [edi+edx*4+0x42369f43],dh
  40dbdb:	imul   esi,DWORD PTR [esp+edx*4-0x61250d5d],0xfffffff2
  40dbe3:	jmp    0x46d:0x6bc0bdf3
  40dbea:	cli    
  40dbeb:	jp     0x40db8b
  40dbed:	inc    edx
  40dbee:	mov    ch,0x35
  40dbf0:	dec    edi
  40dbf1:	inc    ebx
  40dbf2:	div    DWORD PTR [ebx+0x4b]
  40dbf5:	pop    es
  40dbf6:	xor    esi,edi
  40dbf8:	mov    ch,0x85
  40dbfa:	call   FWORD PTR [esi+0x21]
  40dbfd:	push   es
  40dbfe:	imul   edx,DWORD PTR [ecx-0x5a068c45],0xffffffed
  40dc05:	push   esp
  40dc06:	es test al,0xd4
  40dc09:	fcomp  QWORD PTR [ebp+0x3e699794]
  40dc0f:	dec    ecx
  40dc10:	mov    dl,0xb7
  40dc12:	lods   eax,DWORD PTR ds:[esi]
  40dc13:	sub    DWORD PTR [eax-0x4e],edi
  40dc16:	loope  0x40dc67
  40dc18:	out    0x74,eax
  40dc1a:	pushf  
  40dc1b:	inc    edi
  40dc1c:	cld    
  40dc1d:	dec    eax
  40dc1e:	sbb    DWORD PTR [ebp+eiz*8-0x1a756fdf],ebx
  40dc25:	mov    ecx,0xb8dfef3a
  40dc2a:	mov    WORD PTR [ebp+edi*2+0xf6c08dd],es
  40dc31:	mul    DWORD PTR ds:0x31ce2b65
  40dc37:	xor    DWORD PTR [eax],0xbafe61e8
  40dc3d:	jns    0x40dcbd
  40dc3f:	pusha  
  40dc40:	inc    eax
  40dc41:	test   ah,dh
  40dc43:	inc    edx
  40dc44:	pop    esi
  40dc45:	sbb    eax,0x74eb6dab
  40dc4a:	mov    DWORD PTR [ebx-0x13],edi
  40dc4d:	sub    eax,0x6b35e2d2
  40dc52:	xchg   BYTE PTR [esi-0x37fc49f0],dh
  40dc58:	jge    0x40dbeb
  40dc5a:	(bad)  
  40dc5b:	and    eax,0x1979a8
  40dc60:	add    eax,0x88180a45
  40dc65:	cmp    BYTE PTR [eax+0x2],ch
  40dc68:	out    dx,al
  40dc69:	sbb    eax,0xc94ab11
  40dc6e:	pop    ecx
  40dc6f:	outs   dx,DWORD PTR ds:[esi]
  40dc70:	xor    BYTE PTR ds:0xe2ea772f,0xfb
  40dc77:	aaa    
  40dc78:	shl    DWORD PTR [ecx+0xd7a21fc],0xe2
  40dc7f:	push   esp
  40dc80:	ret    0x1acb
  40dc83:	daa    
  40dc84:	leave  
  40dc85:	(bad)  
  40dc86:	adc    DWORD PTR [eax],esi
  40dc88:	mov    eax,0x44a0b6b
  40dc8d:	cli    
  40dc8e:	retf   0xe8cd
  40dc91:	and    eax,0xa14145ca
  40dc96:	iret   
  40dc97:	imul   ebp,DWORD PTR [esi],0x1b89c46a
  40dc9d:	dec    ebp
  40dc9e:	or     DWORD PTR [ecx+0x1d],0xd74eec7b
  40dca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca6:	push   ebp
  40dca7:	push   eax
  40dca8:	clc    
  40dca9:	mov    esp,0x32131def
  40dcae:	popa   
  40dcaf:	jo     0x40dcb2
  40dcb1:	test   al,0xe
  40dcb3:	push   edx
  40dcb4:	scas   al,BYTE PTR es:[edi]
  40dcb5:	out    dx,al
  40dcb6:	dec    edi
  40dcb7:	cdq    
  40dcb8:	fsub   st,st(0)
  40dcba:	scas   al,BYTE PTR es:[edi]
  40dcbb:	mov    esi,0x6911f5f2
  40dcc0:	mov    esp,0x2a68b6
  40dcc5:	(bad)  
  40dcc7:	mov    ah,0x7e
  40dcc9:	loop   0x40dd02
  40dccb:	out    dx,eax
  40dccc:	not    DWORD PTR [eax+esi*4-0x366d01d2]
  40dcd3:	adc    al,0xa5
  40dcd5:	loopne 0x40dc70
  40dcd7:	mov    ecx,0x999ce530
  40dcdc:	mov    dh,BYTE PTR [eax+0x60ff155d]
  40dce2:	cli    
  40dce3:	fist   DWORD PTR [ecx-0x604ba1c9]
  40dce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcea:	pop    DWORD PTR [eax+0x35]
  40dced:	or     eax,0xdd6367b1
  40dcf2:	popf   
  40dcf3:	push   ecx
  40dcf4:	mul    BYTE PTR [ecx]
  40dcf6:	dec    ebp
  40dcf7:	dec    ebx
  40dcf8:	dec    edx
  40dcf9:	inc    ecx
  40dcfa:	adc    al,0x4b
  40dcfc:	cld    
  40dcfd:	imul   edi,DWORD PTR [ebp+0x35187d98],0x523836d6
  40dd07:	mov    esp,DWORD PTR [edi]
  40dd09:	xlat   BYTE PTR ds:[ebx]
  40dd0a:	shr    ebp,1
  40dd0c:	inc    esp
  40dd0d:	and    dh,BYTE PTR [eax-0x50]
  40dd10:	nop
  40dd11:	push   ds
  40dd12:	push   es
  40dd13:	daa    
  40dd14:	or     al,ah
  40dd16:	inc    esp
  40dd17:	ror    DWORD PTR ds:0x6693d161,0xb3
  40dd1e:	sahf   
  40dd1f:	dec    ebx
  40dd20:	xchg   edx,eax
  40dd21:	out    0x97,eax
  40dd23:	push   eax
  40dd24:	inc    esi
  40dd25:	xor    eax,DWORD PTR [ebx+0x18]
  40dd28:	adc    bl,BYTE PTR [esi+0x2a]
  40dd2b:	add    ah,BYTE PTR [ecx]
  40dd2d:	fsub   QWORD PTR [ebp+ecx*4-0x48a5d2b4]
  40dd34:	(bad)
  40dd37:	stos   DWORD PTR es:[edi],eax
  40dd38:	jno    0x40dd39
  40dd3a:	mov    ah,0x56
  40dd3c:	push   ebp
  40dd3d:	sub    eax,0x7c9f3b38
  40dd42:	mov    ds:0xf2ab3884,eax
  40dd47:	enter  0x2b24,0xfb
  40dd4b:	xchg   edx,eax
  40dd4c:	mov    BYTE PTR [edi],ch
  40dd4e:	push   cs
  40dd4f:	mov    dl,0x20
  40dd51:	push   esi
  40dd52:	add    ebx,DWORD PTR [esi-0x473ebe47]
  40dd58:	pop    es
  40dd59:	(bad)  
  40dd5a:	clc    
  40dd5b:	outs   dx,BYTE PTR ds:[esi]
  40dd5c:	inc    ecx
  40dd5d:	add    BYTE PTR [edi-0x4da14c68],dh
  40dd63:	jmp    0x8d4e:0xbd626681
  40dd6a:	push   edx
  40dd6b:	lea    ebx,[ebx+0x5]
  40dd6e:	(bad)  
  40dd6f:	jmp    0x40dd1c
  40dd71:	aad    0xe3
  40dd73:	mov    edi,0x97bb43d4
  40dd78:	adc    al,BYTE PTR [eax-0x1b0a4b3b]
  40dd7e:	rcr    DWORD PTR [ebx+0x3db1e45b],cl
  40dd84:	cmc    
  40dd85:	daa    
  40dd86:	lea    ebp,[edx-0x17]
  40dd89:	dec    esp
  40dd8a:	xor    dh,BYTE PTR [ebx+0x3d]
  40dd8d:	push   ds
  40dd8e:	jb     0x40dd7c
  40dd90:	in     eax,0xf6
  40dd92:	outs   dx,BYTE PTR ds:[esi]
  40dd93:	out    0x25,al
  40dd95:	jmp    0x4758:0xd9e2c1e3
  40dd9c:	aad    0x9
  40dd9e:	sar    BYTE PTR [ecx+0x6f],0x64
  40dda2:	and    esp,0xb448e58f
  40dda8:	mov    ds:0xac45d582,eax
  40ddad:	xlat   BYTE PTR ds:[ebx]
  40ddae:	nop
  40ddaf:	inc    edi
  40ddb0:	dec    ecx
  40ddb1:	push   0x881ad732
  40ddb6:	push   ds
  40ddb7:	iret   
  40ddb8:	fnsave [edx]
  40ddba:	and    ah,BYTE PTR [ebx-0x51]
  40ddbd:	fs mov ch,0x1f
  40ddc0:	add    al,0xe7
  40ddc2:	jns    0x40de39
  40ddc4:	ret    0x6d35
  40ddc7:	(bad)  
  40ddc8:	mov    ebp,ebp
  40ddca:	outs   dx,DWORD PTR ds:[esi]
  40ddcb:	xor    DWORD PTR [ecx+0x1b],ebp
  40ddce:	mov    ds:0x24b56188,al
  40ddd3:	scas   eax,DWORD PTR es:[edi]
  40ddd4:	jecxz  0x40de55
  40ddd6:	mov    bh,0xa
  40ddd8:	ss into 
  40ddda:	mov    bh,0x24
  40dddc:	xchg   ebp,eax
  40dddd:	ins    DWORD PTR es:[edi],dx
  40ddde:	pusha  
  40dddf:	push   ds
  40dde0:	push   ecx
  40dde1:	sub    BYTE PTR [edx],dl
  40dde3:	sbb    DWORD PTR [esi],edx
  40dde5:	jno    0x40ddc1
  40dde7:	and    edx,ecx
  40dde9:	mov    bl,0x7d
  40ddeb:	scas   al,BYTE PTR es:[edi]
  40ddec:	cmp    BYTE PTR [esi],bl
  40ddee:	int    0xf6
  40ddf0:	clc    
  40ddf1:	enter  0xf2cf,0x43
  40ddf5:	ins    DWORD PTR es:[edi],dx
  40ddf6:	xchg   ebp,eax
  40ddf7:	lds    esi,FWORD PTR [edx+0x43]
  40ddfa:	in     al,dx
  40ddfb:	arpl   WORD PTR [ebp+0x20],bp
  40ddfe:	jne    0x40de7a
  40de00:	sub    BYTE PTR [esi+0x5a833d61],0xea
  40de07:	mov    ds:0xb5623c46,eax
  40de0c:	fbstp  TBYTE PTR [ebp+0x35054f4]
  40de12:	inc    edx
  40de13:	jle    0x40ddcc
  40de15:	adc    dh,0xab
  40de18:	js     0x40de95
  40de1a:	sub    ebp,DWORD PTR [eax-0x2]
  40de1d:	sbb    ch,BYTE PTR [ecx+eiz*1]
  40de20:	out    dx,al
  40de21:	fnsave [ecx-0x3737d6a3]
  40de27:	mov    ch,0x1c
  40de29:	std    
  40de2a:	push   ebx
  40de2b:	in     al,0xcf
  40de2d:	cs or  eax,0x3e2439d7
  40de33:	jmp    0xfc21:0x294b7526
  40de3a:	inc    ecx
  40de3b:	xor    edi,DWORD PTR [esi-0x587aeb60]
  40de41:	cs pushw es
  40de44:	outs   dx,DWORD PTR ds:[esi]
  40de45:	or     al,0xde
  40de47:	bound  eax,QWORD PTR [eax-0x76a49f81]
  40de4d:	fisub  WORD PTR [edi+0x32]
  40de50:	test   DWORD PTR cs:[esi-0x77df3246],edi
  40de57:	retf   0xeaa3
  40de5a:	(bad)  
  40de5b:	dec    ecx
  40de5c:	inc    esi
  40de5d:	out    dx,eax
  40de5e:	pop    si
  40de60:	add    BYTE PTR [ebp+0x3c23f14f],dh
  40de66:	les    ebx,FWORD PTR [esi]
  40de68:	xchg   ebx,eax
  40de69:	ss xchg ecx,eax
  40de6b:	adc    ebx,edi
  40de6d:	mov    bh,0x5d
  40de6f:	out    dx,eax
  40de70:	imul   ebx,DWORD PTR ds:0xe6280670,0x80218f08
  40de7a:	ds mov ch,0xcb
  40de7d:	xchg   ebx,eax
  40de7e:	or     DWORD PTR [ebx-0x12],edx
  40de81:	fmulp  st(3),st
  40de83:	jle    0x40de4a
  40de85:	xor    BYTE PTR [esi+0x61],dh
  40de88:	mov    WORD PTR [esi],fs
  40de8a:	push   0xffffffd2
  40de8c:	fmul   st(1),st
  40de8e:	scas   eax,DWORD PTR es:[edi]
  40de8f:	pop    edi
  40de90:	mov    edx,0xce324b8b
  40de95:	sub    BYTE PTR [ecx+edi*4-0xfbc9682],0x34
  40de9d:	fisub  DWORD PTR [esi]
  40de9f:	test   DWORD PTR ds:0xa21aad5b,eax
  40dea5:	push   esi
  40dea6:	xchg   edx,eax
  40dea7:	jge    0x40df12
  40dea9:	mov    eax,ds:0xc8028de5
  40deae:	push   0xe3056de2
  40deb3:	out    dx,eax
  40deb4:	aad    0xaf
  40deb6:	adc    ebp,DWORD PTR [esi]
  40deb8:	frstor [edx]
  40deba:	shl    BYTE PTR [edi-0x1a],0xc4
  40debe:	outs   dx,BYTE PTR ds:[esi]
  40debf:	punpckldq mm2,DWORD PTR [ebx+0x50]
  40dec3:	xchg   edi,eax
  40dec4:	push   eax
  40dec5:	dec    ebp
  40dec6:	iret   
  40dec7:	repnz add al,BYTE PTR [ebx]
  40deca:	mov    WORD PTR [ebp+0x1bcae2c1],ds
  40ded0:	mov    ebp,DWORD PTR [ebx+0x66320555]
  40ded6:	mov    ch,0x61
  40ded8:	neg    BYTE PTR [esi]
  40deda:	outs   dx,DWORD PTR ds:[esi]
  40dedb:	cmp    eax,ebx
  40dedd:	dec    ebx
  40dede:	mov    al,0xeb
  40dee0:	adc    ebp,eax
  40dee2:	mov    ch,0xc0
  40dee4:	pop    ss
  40dee5:	sub    BYTE PTR ds:0x6f53c9dd,dl
  40deeb:	push   ds
  40deec:	push   ds
  40deed:	aas    
  40deee:	sub    DWORD PTR [edx+ecx*2],0x5b1a995e
  40def5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def6:	jbe    0x40de7b
  40def8:	pop    eax
  40def9:	pop    ecx
  40defa:	dec    esp
  40defb:	xchg   DWORD PTR [esi-0x6f741dc6],eax
  40df01:	int    0x85
  40df03:	or     DWORD PTR [esi+0x60],edi
  40df06:	jbe    0x40df23
  40df08:	push   ebp
  40df09:	adc    al,0x7
  40df0b:	mov    ds:0x7cef78,al
  40df10:	mov    ds:0xc3996c1a,eax
  40df15:	repz ret 
  40df17:	dec    DWORD PTR [edi-0x69]
  40df1a:	adc    eax,ebx
  40df1c:	or     al,0x39
  40df1e:	mov    eax,esi
  40df20:	xchg   esi,eax
  40df21:	adc    eax,0xd62d49f1
  40df26:	cmp    BYTE PTR [ebx-0x3f],0x42
  40df2a:	push   esi
  40df2b:	sub    edx,ebp
  40df2d:	inc    edi
  40df2e:	aam    0x25
  40df30:	outs   dx,DWORD PTR ds:[esi]
  40df31:	cmp    DWORD PTR [ebx-0x4a],ebp
  40df34:	bound  esp,QWORD PTR [ebx+0x67]
  40df37:	ins    BYTE PTR es:[edi],dx
  40df38:	pop    ebx
  40df39:	ret    0x6fe6
  40df3c:	pusha  
  40df3d:	enter  0x4ea3,0xe
  40df41:	xchg   BYTE PTR [ebx+edi*1],cl
  40df44:	repnz mov dl,0xb3
  40df47:	(bad)  
  40df48:	xchg   edi,eax
  40df49:	popf   
  40df4a:	(bad)  [edi-0x39]
  40df4d:	neg    BYTE PTR [ebp+eax*2+0x12]
  40df51:	rcr    BYTE PTR [ebp-0x5c6cbc75],0x12
  40df58:	mov    dl,0xab
  40df5a:	jp     0x40df2d
  40df5c:	or     eax,0x8949f3c3
  40df61:	stos   DWORD PTR es:[edi],eax
  40df62:	and    eax,0x3ab8c3b4
  40df67:	add    ah,BYTE PTR [esp+ebp*8]
  40df6a:	mov    ds:0x2ab74e4e,eax
  40df6f:	add    al,0x68
  40df71:	mov    ?,eax
  40df73:	out    0x2c,al
  40df75:	sbb    eax,0x644de1de
  40df7a:	jbe    0x40df70
  40df7c:	adc    BYTE PTR [edi+0x681e3669],ch
  40df82:	jp     0x40df9e
  40df84:	lock add DWORD PTR [edi+0x39f9610f],esp
  40df8b:	jge    0x40dffb
  40df8d:	add    al,0x92
  40df8f:	xchg   ecx,eax
  40df90:	cmp    ecx,esp
  40df92:	test   edi,0x4d09b752
  40df98:	adc    ah,bl
  40df9a:	lea    edi,[ecx-0x430afe25]
  40dfa0:	inc    ebp
  40dfa1:	or     eax,0xbacd7af2
  40dfa6:	fnsave [ecx+ebp*2+0x37]
  40dfaa:	push   0xffffffb2
  40dfac:	daa    
  40dfad:	mov    DWORD PTR [edi],ebp
  40dfaf:	xor    DWORD PTR [edx+0x5e],esp
  40dfb2:	in     eax,dx
  40dfb3:	lea    esp,[eax+esi*1]
  40dfb6:	cmp    edi,esi
  40dfb8:	aam    0x8a
  40dfba:	inc    edi
  40dfbb:	daa    
  40dfbc:	aaa    
  40dfbd:	jmp    0xd383:0xe917d936
  40dfc4:	js     0x40dfce
  40dfc6:	ror    dh,cl
  40dfc8:	loopne 0x40e048
  40dfca:	int3   
  40dfcb:	sub    al,0x6e
  40dfcd:	lea    edx,[edx-0x65cf314b]
  40dfd3:	cmc    
  40dfd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd5:	jle    0x40e010
  40dfd7:	out    dx,eax
  40dfd8:	cmp    BYTE PTR [esi-0x7a],al
  40dfdb:	inc    ebp
  40dfdc:	lods   eax,DWORD PTR ds:[esi]
  40dfdd:	add    al,0x2d
  40dfdf:	sub    eax,0x1ac3539c
  40dfe4:	popf   
  40dfe5:	outs   dx,DWORD PTR ds:[esi]
  40dfe6:	jno    0x40dfd7
  40dfe8:	xlat   BYTE PTR ds:[ebx]
  40dfe9:	jecxz  0x40e011
  40dfeb:	lea    edi,[eax-0x1a8219db]
  40dff1:	pop    edi
  40dff2:	cmp    al,0x18
  40dff4:	(bad)  
  40dff5:	push   ebx
  40dff6:	(bad)  
  40dff8:	call   0x58ce:0x1e049c86
  40dfff:	sub    eax,esi
  40e001:	jp     0x40dfb0
  40e003:	adc    eax,DWORD PTR [esi+ebp*1+0x64]
  40e007:	sahf   
  40e008:	cmp    DWORD PTR [esi+0x71],ebx
  40e00b:	shl    BYTE PTR [ebx-0x5ddc4f96],1
  40e011:	jle    0x40e06d
  40e013:	call   0x7bdc3056
  40e018:	sub    BYTE PTR [eax+0x3005e16c],ch
  40e01e:	into   
  40e01f:	pop    ebx
  40e020:	rcl    esp,0x93
  40e023:	inc    esi
  40e024:	pop    ebx
  40e025:	div    DWORD PTR [eax+0x27]
  40e028:	dec    esi
  40e029:	leave  
  40e02a:	rcl    DWORD PTR [ebp-0x6d],1
  40e02d:	sub    DWORD PTR [ebx+ebx*2-0x4006a50b],0xffffffa6
  40e035:	scas   eax,DWORD PTR es:[edi]
  40e036:	pop    ebp
  40e037:	push   ebx
  40e038:	sub    eax,0x7f0ec231
  40e03d:	imul   eax,edi,0xffffffbf
  40e040:	retf   
  40e041:	ds dec esp
  40e043:	rcl    DWORD PTR [ebx+0x14],0x6a
  40e047:	aam    0xc1
  40e049:	sbb    al,0xa0
  40e04b:	jle    0x40e08c
  40e04d:	jge    0x40e016
  40e04f:	inc    ebx
  40e050:	icebp  
  40e051:	clc    
  40e052:	retf   0x44d0
  40e055:	mov    dl,0x91
  40e057:	(bad)  
  40e058:	pop    ss
  40e059:	fsub   DWORD PTR [ecx+0x142ce2b4]
  40e05f:	xor    al,0x1f
  40e061:	pop    eax
  40e062:	jne    0x40e099
  40e064:	push   ecx
  40e065:	dec    eax
  40e066:	cwde   
  40e067:	mov    ebx,0x7d00f620
  40e06c:	mov    bl,BYTE PTR [ebx-0x74]
  40e06f:	in     eax,0xc
  40e071:	cmp    al,0x2d
  40e073:	add    DWORD PTR [ebx+0x371e9baa],0x5c330749
  40e07d:	and    DWORD PTR [edx-0x2c],0xfffffff9
  40e081:	jmp    0xf10ac44a
  40e086:	test   eax,0xe0bb68e8
  40e08b:	inc    esi
  40e08c:	shl    DWORD PTR ss:[ecx+eiz*1-0x395e870c],0xb5
  40e095:	add    ch,dh
  40e097:	ins    DWORD PTR es:[edi],dx
  40e098:	pop    es
  40e099:	mov    cl,0xc5
  40e09b:	out    0xd9,eax
  40e09d:	fiadd  DWORD PTR [edi+0x2a5a68b8]
  40e0a3:	sbb    edx,DWORD PTR [eax-0x3e]
  40e0a6:	inc    esi
  40e0a7:	pusha  
  40e0a8:	loopne 0x40e0c3
  40e0aa:	xor    DWORD PTR [edi+0x27911ba2],0xfffffffe
  40e0b1:	sub    eax,0xd1090a3d
  40e0b6:	sbb    DWORD PTR [ebp+0x128da1ff],esp
  40e0bc:	and    al,0xaf
  40e0be:	mov    eax,ds:0xcdb3fd12
  40e0c3:	aas    
  40e0c4:	icebp  
  40e0c5:	das    
  40e0c6:	xchg   esp,eax
  40e0c7:	enter  0xb617,0x6f
  40e0cb:	adc    eax,0x960d928c
  40e0d0:	fcomp  DWORD PTR [edx-0x79738b6a]
  40e0d6:	jne    0x40e11a
  40e0d8:	and    al,0xd2
  40e0da:	push   edx
  40e0db:	fisubr DWORD PTR [edi-0x67ee0a60]
  40e0e1:	mov    ah,BYTE PTR [edi+0x4ecf94f7]
  40e0e7:	stos   DWORD PTR es:[edi],eax
  40e0e8:	add    al,0x23
  40e0ea:	mul    DWORD PTR [edx+eax*1+0xd]
  40e0ee:	aas    
  40e0ef:	aad    0x52
  40e0f1:	ss mov dh,0x7f
  40e0f4:	test   DWORD PTR [esi-0x22a2957f],ebx
  40e0fa:	int    0xc8
  40e0fc:	pop    ecx
  40e0fd:	sbb    ah,ah
  40e0ff:	popa   
  40e100:	pop    ds
  40e101:	xor    al,0xf8
  40e103:	gs jo  0x40e0f9
  40e106:	addr16 mov ds:0xe6fc,eax
  40e10a:	std    
  40e10b:	adc    cl,BYTE PTR ds:[ecx*1-0x348a0772]
  40e113:	sti    
  40e114:	rcl    bl,0xac
  40e117:	sbb    eax,0xa78a705f
  40e11c:	arpl   di,bx
  40e11e:	hlt    
  40e11f:	pop    ebx
  40e120:	push   esp
  40e121:	push   edi
  40e122:	pop    edi
  40e123:	push   ebx
  40e124:	and    ah,0x82
  40e127:	pop    edx
  40e128:	or     eax,0xd4cb315e
  40e12d:	adc    al,0xe4
  40e12f:	pop    es
  40e130:	or     BYTE PTR [eax],al
  40e132:	or     eax,0xe2bab550
  40e137:	cdq    
  40e138:	dec    ebp
  40e139:	lds    edx,FWORD PTR [ebx]
  40e13b:	bound  eax,QWORD PTR [ecx+esi*2+0x4d]
  40e13f:	bnd jg 0x40e1a3
  40e142:	daa    
  40e143:	aaa    
  40e144:	jne    0x40e14f
  40e146:	imul   edx,DWORD PTR [esi-0x75c29c9b],0x701a506
  40e150:	fst    DWORD PTR [ebp+0x3d]
  40e153:	ins    BYTE PTR es:[edi],dx
  40e154:	outs   dx,BYTE PTR ds:[esi]
  40e155:	sbb    ch,al
  40e157:	or     esi,eax
  40e159:	jecxz  0x40e1da
  40e15b:	mov    bl,BYTE PTR [esi]
  40e15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e15e:	fwait
  40e15f:	loope  0x40e1b9
  40e161:	xor    edi,eax
  40e163:	mov    ch,0x6f
  40e165:	sbb    ah,BYTE PTR [edx]
  40e167:	int3   
  40e168:	lods   al,BYTE PTR ds:[esi]
  40e169:	pop    ebp
  40e16a:	rcl    dh,cl
  40e16c:	pop    ebx
  40e16d:	fldcw  WORD PTR [edx-0x4b]
  40e170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e171:	popf   
  40e172:	loopne 0x40e17c
  40e174:	cdq    
  40e175:	shl    BYTE PTR [eax],cl
  40e177:	adc    DWORD PTR [ebp-0x6013e0cf],ebx
  40e17d:	(bad)  
  40e17e:	inc    eax
  40e17f:	mov    bh,0x97
  40e181:	in     al,0x1b
  40e183:	jo     0x40e1d4
  40e185:	fndisi(8087 only) 
  40e187:	inc    eax
  40e188:	and    eax,0x2f17efc1
  40e18d:	addr16 int3 
  40e18f:	jmp    0x40e11b
  40e191:	xchg   ebp,eax
  40e192:	mov    bh,0x1a
  40e194:	push   0xba8b94fc
  40e199:	mov    al,0x29
  40e19b:	loope  0x40e192
  40e19d:	test   eax,0x74f3c3a
  40e1a2:	pop    eax
  40e1a3:	out    dx,eax
  40e1a4:	lock jle 0x40e18f
  40e1a7:	adc    DWORD PTR [edx],ebp
  40e1a9:	call   0x381a3e67
  40e1ae:	fwait
  40e1af:	les    ebx,FWORD PTR [esi+0xc]
  40e1b2:	aas    
  40e1b3:	xchg   edi,eax
  40e1b4:	in     eax,dx
  40e1b5:	pop    edi
  40e1b6:	leave  
  40e1b7:	sbb    BYTE PTR [eax+0x1f],dl
  40e1ba:	arpl   WORD PTR es:[edi+0x6e],bp
  40e1be:	xlat   BYTE PTR ds:[ebx]
  40e1bf:	pop    esi
  40e1c0:	loope  0x40e223
  40e1c2:	(bad)  
  40e1c3:	xor    al,0x18
  40e1c5:	mov    dh,0xd8
  40e1c7:	sub    ah,BYTE PTR [esi+eiz*4-0x6c]
  40e1cb:	and    eax,DWORD PTR [edi]
  40e1cd:	jl     0x40e1f7
  40e1cf:	sbb    eax,0x23d1d908
  40e1d4:	mov    fs,WORD PTR [edi]
  40e1d6:	js     0x40e1b0
  40e1d8:	jnp    0x40e24e
  40e1da:	pop    es
  40e1db:	ret    
  40e1dc:	mov    dl,0xf
  40e1de:	ja     0x40e23f
  40e1e0:	dec    esp
  40e1e1:	lahf   
  40e1e2:	sub    eax,0xfe58ca15
  40e1e7:	jmp    0x56e3:0xfff9a372
  40e1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ef:	in     al,dx
  40e1f0:	or     ah,BYTE PTR [ebp-0x5f]
  40e1f3:	scas   eax,DWORD PTR es:[edi]
  40e1f4:	in     eax,0x68
  40e1f6:	mul    ebp
  40e1f8:	sysexit 
  40e1fa:	mov    cl,0x3c
  40e1fc:	stos   DWORD PTR es:[edi],eax
  40e1fd:	test   al,bl
  40e1ff:	test   al,0xc9
  40e201:	fstp   QWORD PTR [ebx-0xb]
  40e204:	inc    edx
  40e205:	(bad)  
  40e207:	xor    BYTE PTR [ecx+0x6a87d052],0xfb
  40e20e:	sbb    edx,ebx
  40e210:	mov    ds:0x23b5ae4c,eax
  40e215:	fisub  WORD PTR [ebx]
  40e217:	jns    0x40e1e9
  40e219:	(bad)
  40e21d:	je     0x40e24c
  40e21f:	addr16 push esp
  40e221:	(bad)  
  40e222:	cmc    
  40e223:	push   ss
  40e224:	pop    ebx
  40e225:	mov    ah,0x62
  40e227:	int    0xd0
  40e229:	xchg   BYTE PTR [esi-0x2f],bl
  40e22c:	nop
  40e22d:	pop    ss
  40e22e:	xor    ebp,DWORD PTR [ecx+0x56]
  40e231:	int    0x58
  40e233:	inc    ecx
  40e234:	xchg   DWORD PTR [esi+0x34],ecx
  40e237:	je     0x40e24f
  40e239:	push   ds
  40e23a:	(bad)  
  40e23b:	mov    bl,dh
  40e23d:	stos   DWORD PTR es:[edi],eax
  40e23e:	mov    dh,0xdc
  40e240:	fnstsw WORD PTR [ecx-0x63]
  40e243:	xor    DWORD PTR [esi+edx*8+0x4f],esi
  40e247:	rol    DWORD PTR [ebx],1
  40e249:	retf   
  40e24a:	fs xchg esi,eax
  40e24c:	call   0xfb17:0x2000a3ee
  40e253:	aaa    
  40e254:	test   al,0xcc
  40e256:	(bad)  
  40e257:	push   ebp
  40e258:	xchg   ebp,eax
  40e259:	sub    esi,ecx
  40e25b:	push   cs
  40e25c:	out    0xe0,eax
  40e25e:	mov    edx,0xf3f51a61
  40e263:	sbb    al,0xc8
  40e265:	das    
  40e266:	cwde   
  40e267:	sub    al,0xe8
  40e269:	dec    ecx
  40e26a:	jle    0x40e1f0
  40e26c:	adc    BYTE PTR [edi],dh
  40e26e:	imul   ebp,DWORD PTR [ebp-0xfdfd21e],0x15
  40e275:	inc    esp
  40e276:	scas   al,BYTE PTR es:[edi]
  40e277:	jbe    0x40e20b
  40e279:	je     0x40e2b4
  40e27b:	mov    al,0xba
  40e27d:	xchg   edx,eax
  40e27e:	dec    ebp
  40e27f:	xchg   ecx,eax
  40e280:	push   esi
  40e281:	in     eax,dx
  40e282:	jno    0x40e233
  40e284:	dec    eax
  40e285:	dec    edx
  40e286:	inc    esi
  40e287:	mov    cl,0x30
  40e289:	jp     0x40e252
  40e28b:	cmp    BYTE PTR [ecx-0xcfe762d],0x3d
  40e292:	int3   
  40e293:	mov    ds:0x726256b5,al
  40e298:	sub    BYTE PTR [eax+0x6695b1a],dl
  40e29e:	retf   
  40e29f:	aam    0x20
  40e2a1:	dec    edx
  40e2a2:	cmp    eax,ecx
  40e2a4:	mov    ebp,0xd5f28c5d
  40e2a9:	popa   
  40e2aa:	dec    edx
  40e2ab:	mov    cl,0xb6
  40e2ad:	xchg   esp,eax
  40e2ae:	sub    eax,0x4df1ed45
  40e2b3:	outs   dx,DWORD PTR ds:[esi]
  40e2b4:	inc    ecx
  40e2b5:	dec    ebx
  40e2b6:	dec    BYTE PTR [bp+si-0xc6c]
  40e2bb:	rcl    DWORD PTR [edi],1
  40e2bd:	xchg   ebx,eax
  40e2be:	sbb    al,BYTE PTR [edx+eax*1+0x490ef82]
  40e2c5:	xchg   ebp,eax
  40e2c6:	fwait
  40e2c7:	sbb    ax,0xb74c
  40e2cb:	das    
  40e2cc:	or     al,0xe2
  40e2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2cf:	push   esp
  40e2d0:	xchg   ebp,eax
  40e2d1:	dec    ebx
  40e2d2:	in     al,0x27
  40e2d4:	inc    eax
  40e2d5:	leave  
  40e2d6:	push   0xfffffff8
  40e2d8:	(bad)  
  40e2d9:	lods   al,BYTE PTR cs:[esi]
  40e2db:	lahf   
  40e2dc:	and    eax,0x556f067f
  40e2e1:	xchg   edi,eax
  40e2e2:	add    cl,BYTE PTR [edi-0x66b8e02d]
  40e2e8:	stos   BYTE PTR es:[edi],al
  40e2e9:	out    dx,eax
  40e2ea:	enter  0x722d,0xc0
  40e2ee:	mov    dl,0x14
  40e2f0:	xor    ecx,ebp
  40e2f2:	ins    DWORD PTR es:[edi],dx
  40e2f3:	adc    DWORD PTR [ebx+0x24],ebp
  40e2f6:	and    DWORD PTR [ebx+0x20],0x3f
  40e2fa:	sub    al,0x3b
  40e2fc:	push   0xdc7a27d6
  40e301:	mov    eax,ds:0x4f8aa369
  40e306:	cdq    
  40e307:	ror    BYTE PTR [ecx-0xdcee4b3],0xb2
  40e30e:	ror    BYTE PTR [edi],0x1a
  40e311:	cld    
  40e312:	xor    BYTE PTR [edi-0x23],dl
  40e315:	mov    bh,0x19
  40e317:	mov    BYTE PTR [eax+0x42ee9b66],al
  40e31d:	jecxz  0x40e2dd
  40e31f:	and    ebx,DWORD PTR [ecx+0x53]
  40e322:	or     ecx,DWORD PTR [edi+0x74]
  40e325:	repnz sbb edx,DWORD PTR [ebx-0xd2fdd28]
  40e32c:	inc    esp
  40e32d:	and    edx,DWORD PTR [edi+0x9]
  40e330:	push   eax
  40e331:	arpl   WORD PTR [esi+eiz*1-0x80],sp
  40e335:	sub    cl,0x43
  40e338:	jo     0x40e33c
  40e33a:	xchg   edx,eax
  40e33b:	jecxz  0x40e385
  40e33d:	inc    ecx
  40e33e:	(bad)  
  40e33f:	cli    
  40e340:	in     eax,dx
  40e341:	and    ebx,DWORD PTR [esi+0x56501c9f]
  40e347:	jbe    0x40e389
  40e349:	xchg   DWORD PTR [esi+0x6653be3a],esp
  40e34f:	inc    ebx
  40e350:	dec    edi
  40e351:	and    al,0x72
  40e353:	mov    eax,ds:0x621ce4ec
  40e358:	mov    ebx,0x5df74fc0
  40e35d:	call   0xa80a:0x66d143
  40e364:	ja     0x40e340
  40e366:	loopne 0x40e390
  40e368:	add    DWORD PTR gs:[ebp+0x2e3d95c8],eax
  40e36f:	int    0xe6
  40e371:	and    al,0x8d
  40e373:	mov    eax,0x11244c51
  40e378:	and    al,0xc8
  40e37a:	mov    edi,0xf6537e80
  40e37f:	cmp    DWORD PTR [eax],eax
  40e381:	imul   DWORD PTR [eax+0x19131f5f]
  40e387:	cli    
  40e388:	push   edi
  40e389:	and    dl,BYTE PTR [esi+0x25d68290]
  40e38f:	js     0x40e347
  40e391:	inc    esp
  40e392:	or     al,0x65
  40e394:	push   ebx
  40e395:	shl    DWORD PTR [ecx],1
  40e397:	add    edx,DWORD PTR [ecx+0x26]
  40e39a:	fstp   st(2)
  40e39c:	adc    al,0x7c
  40e39e:	pop    ebp
  40e39f:	adc    BYTE PTR [esi],0xf6
  40e3a2:	and    edi,DWORD PTR ds:[ecx-0x67]
  40e3a6:	adc    al,0xec
  40e3a8:	dec    ebp
  40e3a9:	call   0x89ea:0xcf33b4c9
  40e3b0:	dec    BYTE PTR [edx-0x3fca61ed]
  40e3b6:	and    DWORD PTR [eax+0x1121348f],ebx
  40e3bc:	loop   0x40e433
  40e3be:	test   BYTE PTR ds:0x814e433e,al
  40e3c4:	loopne 0x40e421
  40e3c6:	pop    edi
  40e3c7:	add    al,0x61
  40e3c9:	hlt    
  40e3ca:	xor    BYTE PTR [esi+ebx*8],ah
  40e3cd:	sub    eax,DWORD PTR [esi+0x7208db6b]
  40e3d3:	mov    ah,0x6f
  40e3d5:	mov    edi,0xaa239c74
  40e3da:	adc    bl,ch
  40e3dc:	loopne 0x40e444
  40e3de:	sub    esi,DWORD PTR [ebx]
  40e3e0:	xchg   ecx,eax
  40e3e1:	push   es
  40e3e2:	cmp    eax,0xc33626f8
  40e3e7:	call   0xa50a:0xb609fc53
  40e3ee:	fcomp  QWORD PTR [eax]
  40e3f0:	loope  0x40e3e9
  40e3f2:	mov    gs,WORD PTR [eax+0x56]
  40e3f5:	sbb    bh,BYTE PTR [ebx]
  40e3f7:	(bad)  
  40e3f8:	aas    
  40e3f9:	movnti DWORD PTR [edx],ecx
  40e3fc:	arpl   WORD PTR [eax+ebp*1+0x19],bx
  40e400:	sti    
  40e401:	pop    ecx
  40e402:	push   ebx
  40e403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e404:	loope  0x40e480
  40e406:	sbb    al,0x58
  40e408:	mov    eax,ds:0xcaf62771
  40e40d:	call   0x197c71cb
  40e412:	jge    0x40e428
  40e414:	pop    edx
  40e415:	pop    ecx
  40e416:	jbe    0x40e432
  40e418:	scas   al,BYTE PTR es:[edi]
  40e419:	shr    BYTE PTR [edi],0xd
  40e41c:	inc    esp
  40e41d:	std    
  40e41e:	scas   al,BYTE PTR es:[edi]
  40e41f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e420:	add    eax,0xb70295e6
  40e425:	test   al,0x4d
  40e427:	bound  esp,QWORD PTR [ecx+edi*8+0x26]
  40e42b:	xchg   esp,eax
  40e42c:	jge    0x40e40c
  40e42e:	mov    dh,0xd1
  40e430:	shr    DWORD PTR [eax+ecx*4+0x13],1
  40e434:	sbb    DWORD PTR [ecx],0xf3b41f32
  40e43a:	cld    
  40e43b:	mov    ch,0x59
  40e43d:	sbb    edx,DWORD PTR [edx]
  40e43f:	nop
  40e440:	jb     0x40e401
  40e442:	mov    esp,0xfae8ee9e
  40e447:	push   ebp
  40e448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e449:	pusha  
  40e44a:	cmp    DWORD PTR [edx],ecx
  40e44c:	lea    ecx,[esp+ecx*1]
  40e44f:	idiv   DWORD PTR [ecx+0x1fb64991]
  40e455:	or     DWORD PTR [ebp-0x6ab27a1c],edi
  40e45b:	push   0x6b341e51
  40e460:	outs   dx,BYTE PTR ds:[esi]
  40e461:	pop    es
  40e462:	call   0x8411:0x14968a4f
  40e469:	div    ch
  40e46b:	arpl   WORD PTR [ebx-0x1bcc89a5],bp
  40e471:	leave  
  40e472:	out    dx,eax
  40e473:	jecxz  0x40e4de
  40e475:	iret   
  40e476:	mov    dh,0x60
  40e478:	inc    edx
  40e479:	inc    esp
  40e47a:	xor    ebx,DWORD PTR [eax]
  40e47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e47d:	pusha  
  40e47e:	inc    esi
  40e47f:	shr    BYTE PTR [edi],1
  40e481:	mov    esi,0x2c868a1b
  40e486:	ins    DWORD PTR es:[edi],dx
  40e487:	xchg   edx,eax
  40e488:	scas   al,BYTE PTR es:[edi]
  40e489:	dec    edx
  40e48a:	stos   BYTE PTR es:[edi],al
  40e48b:	(bad)  
  40e48c:	cmc    
  40e48d:	popa   
  40e48e:	mov    ecx,0xc889ef29
  40e493:	jp     0x40e41d
  40e495:	shl    ebx,0xc0
  40e498:	sbb    al,0x27
  40e49a:	jae    0x40e4e4
  40e49c:	xchg   ebp,eax
  40e49d:	mov    ch,0xbe
  40e49f:	sbb    eax,0x16afd542
  40e4a4:	jle    0x40e450
  40e4a6:	push   esp
  40e4a7:	push   esp
  40e4a8:	ins    DWORD PTR es:[edi],dx
  40e4a9:	scas   eax,DWORD PTR es:[edi]
  40e4aa:	cwde   
  40e4ab:	outs   dx,DWORD PTR ds:[esi]
  40e4ac:	data16 mov al,ds:0x70b051ca
  40e4b2:	sbb    dh,ch
  40e4b4:	loopne 0x40e4a9
  40e4b6:	imul   edx,esi,0xf37912ba
  40e4bc:	push   0x30fabcf
  40e4c1:	jns    0x40e453
  40e4c3:	jns    0x40e528
  40e4c5:	xor    DWORD PTR [eax],ebx
  40e4c7:	hlt    
  40e4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c9:	jge    0x40e4ce
  40e4cb:	out    dx,al
  40e4cc:	sbb    ch,BYTE PTR [esi-0x6a]
  40e4cf:	pop    edx
  40e4d0:	div    BYTE PTR [ecx-0x56]
  40e4d3:	push   edx
  40e4d4:	js     0x40e53f
  40e4d6:	push   es
  40e4d7:	mov    al,ds:0xbb01e078
  40e4dc:	aam    0x20
  40e4de:	sbb    dh,BYTE PTR [eax-0x12db9c7b]
  40e4e4:	pop    edx
  40e4e5:	sbb    al,0x57
  40e4e7:	gs cmc 
  40e4e9:	cs (bad) 
  40e4ec:	jmp    0x819e0727
  40e4f1:	fdivp  st(5),st
  40e4f3:	adc    eax,0xfde5f0ae
  40e4f8:	gs mov al,0x2a
  40e4fb:	test   eax,0x78844276
  40e500:	mov    al,ds:0xc238b3fa
  40e505:	jo     0x40e580
  40e507:	jnp    0x40e4af
  40e509:	jnp    0x40e49b
  40e50b:	and    dl,0x59
  40e50e:	mov    dl,0xde
  40e510:	(bad)  
  40e511:	aad    0xf7
  40e513:	mov    dl,0x85
  40e515:	(bad)  
  40e516:	stc    
  40e517:	mov    ah,0x69
  40e519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e51b:	mov    cl,BYTE PTR ds:0x387e36b6
  40e521:	jne    0x40e4c2
  40e523:	xchg   esp,eax
  40e524:	outs   dx,DWORD PTR ds:[esi]
  40e525:	gs and al,0x90
  40e528:	les    esp,FWORD PTR [edx+0x16]
  40e52b:	mov    eax,ds:0x841c93e
  40e530:	dec    ebp
  40e531:	leave  
  40e532:	(bad)  ds:0xacb9ec49
  40e538:	fwait
  40e539:	push   cs
  40e53a:	add    BYTE PTR [edi-0x77ffff65],dl
  40e540:	inc    ebp
  40e541:	mov    esi,DWORD PTR [eax]
  40e543:	cs jg  0x40e5b2
  40e546:	out    dx,eax
  40e547:	mov    esi,0x2047cdba
  40e54c:	mov    ch,0xe3
  40e54e:	fldcw  WORD PTR [ebx+esi*4]
  40e551:	jle    0x40e4d7
  40e553:	inc    ebx
  40e554:	inc    ebx
  40e555:	jns    0x40e51f
  40e557:	mov    ah,0x22
  40e559:	sar    BYTE PTR [eax+0x46f7e6cc],1
  40e55f:	cs icebp 
  40e561:	(bad)  
  40e562:	ins    DWORD PTR es:[edi],dx
  40e563:	xchg   DWORD PTR [edx+ebp*1+0x26d3cf28],esp
  40e56a:	in     eax,dx
  40e56b:	sbb    al,0x88
  40e56d:	mov    ebp,0xaa3bd544
  40e572:	xchg   edi,eax
  40e573:	ins    DWORD PTR es:[edi],dx
  40e574:	aad    0x9a
  40e576:	out    dx,al
  40e577:	aaa    
  40e578:	lock popf 
  40e57a:	shl    DWORD PTR [ecx-0x5f],0xcc
  40e57e:	int3   
  40e57f:	scas   al,BYTE PTR es:[edi]
  40e580:	dec    ebx
  40e581:	jns    0x40e597
  40e583:	xlat   BYTE PTR ds:[ebx]
  40e584:	lods   eax,DWORD PTR ds:[esi]
  40e585:	scas   al,BYTE PTR es:[edi]
  40e586:	fnsave [eax+0x33]
  40e589:	and    eax,0x7e96b6f1
  40e58e:	push   ebp
  40e58f:	icebp  
  40e590:	lock adc al,0xdf
  40e593:	sub    al,0x5e
  40e595:	popf   
  40e596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e597:	fdiv   st(2),st
  40e599:	aaa    
  40e59a:	fdivr  st,st(5)
  40e59c:	scas   eax,DWORD PTR es:[edi]
  40e59d:	xor    eax,0xa280e975
  40e5a2:	retf   
  40e5a3:	add    eax,DWORD PTR [esi+0x4]
  40e5a6:	popa   
  40e5a7:	sbb    BYTE PTR [eax+edi*1-0x52],al
  40e5ab:	jmp    0x7fa9bb8a
  40e5b0:	push   ecx
  40e5b1:	jne    0x40e548
  40e5b3:	cmp    DWORD PTR [ecx+eiz*4+0xc],ebx
  40e5b7:	and    eax,0xe3b05cd9
  40e5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5be:	jae    0x40e62d
  40e5c0:	sbb    DWORD PTR [edx+0x4e],esi
  40e5c3:	sti    
  40e5c4:	jmp    0x40e55e
  40e5c6:	cmc    
  40e5c7:	inc    ecx
  40e5c8:	mov    edx,0xf16efe60
  40e5cd:	xor    al,BYTE PTR ds:[edx]
  40e5d0:	jle    0x72bb757e
  40e5d6:	xchg   esp,eax
  40e5d7:	xchg   ebp,eax
  40e5d8:	add    BYTE PTR [ebp-0x69],bh
  40e5db:	xor    eax,0x7184987a
  40e5e0:	jnp    0x40e59c
  40e5e2:	mov    ch,0x46
  40e5e4:	ficom  WORD PTR [ebx+ecx*8]
  40e5e7:	add    bh,BYTE PTR [ebx+0x17]
  40e5ea:	jo     0x40e58b
  40e5ec:	neg    DWORD PTR [edx-0x32]
  40e5ef:	and    eax,0xf4b68e56
  40e5f4:	sbb    BYTE PTR [ebx+0x288f2468],0x1f
  40e5fb:	inc    eax
  40e5fc:	push   0x48ef327f
  40e601:	and    BYTE PTR fs:[edx],bh
  40e604:	adc    al,BYTE PTR [edi+esi*1]
  40e607:	clc    
  40e608:	mov    bh,0xcd
  40e60a:	jmp    0x40e5c6
  40e60c:	xor    dh,BYTE PTR [eax-0x4]
  40e60f:	xchg   ebx,eax
  40e610:	inc    ecx
  40e611:	sbb    al,BYTE PTR [ecx-0x32]
  40e614:	jp     0x40e692
  40e616:	add    ebx,ecx
  40e618:	cld    
  40e619:	in     eax,0x2d
  40e61b:	ss (bad) 
  40e61e:	pop    ds
  40e61f:	xchg   edx,eax
  40e620:	cmc    
  40e621:	cdq    
  40e622:	or     ecx,esp
  40e624:	or     ah,bl
  40e626:	test   eax,0x4585d053
  40e62b:	es push ecx
  40e62d:	loop   0x40e69b
  40e62f:	int    0xc6
  40e631:	lea    edi,[ebx+0x35b8bf00]
  40e637:	or     DWORD PTR [ecx+0x3d56151],esp
  40e63d:	jl     0x40e699
  40e63f:	cli    
  40e640:	cwde   
  40e641:	ins    BYTE PTR es:[edi],dx
  40e642:	ror    DWORD PTR [edx],cl
  40e644:	jne    0x40e64d
  40e646:	popf   
  40e647:	pop    esi
  40e648:	sub    eax,0x6959dfeb
  40e64d:	enter  0xa336,0xe7
  40e651:	and    BYTE PTR [eax-0x9],al
  40e654:	or     al,0x66
  40e657:	popa   
  40e658:	call   FWORD PTR [ecx]
  40e65a:	mov    al,ds:0x3f95259d
  40e65f:	or     eax,0x983f9fae
  40e664:	(bad)  
  40e665:	mov    al,0xbe
  40e667:	call   FWORD PTR [edi]
  40e669:	out    dx,al
  40e66a:	out    0xff,al
  40e66c:	inc    esp
  40e66d:	add    dl,BYTE PTR [eax+0x506ebcaf]
  40e673:	inc    eax
  40e674:	rcl    BYTE PTR [edx-0x47],1
  40e677:	mov    ds:0x68e7de41,al
  40e67c:	(bad)  
  40e67d:	cld    
  40e67e:	mov    DWORD PTR [ebx-0x3ed61f11],esi
  40e684:	xlat   BYTE PTR ds:[ebx]
  40e685:	inc    esi
  40e686:	cmp    al,0x20
  40e688:	xchg   BYTE PTR [ecx+0x17059035],bl
  40e68e:	add    BYTE PTR [ebp-0x3a],bl
  40e691:	scas   eax,DWORD PTR es:[edi]
  40e692:	push   edx
  40e693:	and    DWORD PTR [edi+0x4e3a4c0d],0x38
  40e69a:	mov    ds:0x5d43eb5d,al
  40e69f:	xchg   ah,dl
  40e6a1:	mov    edi,?
  40e6a3:	cmc    
  40e6a4:	mov    bh,0xf0
  40e6a6:	push   edx
  40e6a7:	and    ah,BYTE PTR [ebp+0x73]
  40e6aa:	xor    DWORD PTR [ebp-0x63],esp
  40e6ad:	push   ss
  40e6ae:	and    bh,BYTE PTR [esi]
  40e6b0:	lods   al,BYTE PTR ds:[esi]
  40e6b1:	adc    al,bh
  40e6b3:	add    DWORD PTR [esi-0x5a],0x4c
  40e6b7:	dec    edx
  40e6b8:	add    DWORD PTR [ebp+0x50],edi
  40e6bb:	and    eax,0x58a2433b
  40e6c0:	jbe    0x40e67b
  40e6c2:	cmp    DWORD PTR [eax+0x376acd22],ebx
  40e6c8:	pop    ecx
  40e6c9:	mov    bh,0xdc
  40e6cb:	inc    esp
  40e6cc:	mov    esp,0x651a3a7a
  40e6d1:	jnp    0x40e746
  40e6d3:	imul   eax,DWORD PTR [edi-0x4d],0x28
  40e6d7:	lods   eax,DWORD PTR ds:[esi]
  40e6d8:	xor    BYTE PTR [ecx-0x18ae4b7],ah
  40e6de:	mov    cs,eax
  40e6e0:	adc    ch,bl
  40e6e2:	jnp    0x40e679
  40e6e4:	fs clc 
  40e6e6:	add    eax,edi
  40e6e8:	mov    ds:0x262d0a5b,eax
  40e6ed:	and    dh,BYTE PTR [ecx+0x25]
  40e6f0:	xchg   edi,eax
  40e6f1:	pop    es
  40e6f2:	cmp    dh,dh
  40e6f4:	xchg   esp,eax
  40e6f5:	sbb    DWORD PTR [edx+0x63],ecx
  40e6f8:	mov    ecx,0xc239513e
  40e6fd:	inc    edx
  40e6fe:	cwde   
  40e6ff:	xor    al,0x4
  40e701:	retf   0xf05d
  40e704:	mov    edi,0x7ebaebbd
  40e709:	popf   
  40e70a:	jne    0x40e6de
  40e70c:	sbb    bh,BYTE PTR [ecx]
  40e70e:	nop
  40e70f:	xor    al,0x3c
  40e711:	fiadd  WORD PTR [ebx+eiz*1+0x3693f353]
  40e718:	and    eax,DWORD PTR [ecx]
  40e71a:	fcomp  st(0)
  40e71c:	mov    edx,0x5cd4abf6
  40e721:	(bad)  
  40e722:	fwait
  40e723:	mov    edx,0x11dd7a48
  40e728:	pushw  es
  40e72a:	sti    
  40e72b:	dec    esi
  40e72c:	sub    DWORD PTR [edx],ecx
  40e72e:	repnz jmp 0x337d:0x45eafe05
  40e736:	pop    es
  40e737:	mov    ds:0xdcf15c16,eax
  40e73c:	mov    bh,0x25
  40e73e:	pusha  
  40e73f:	mov    ds:0xb626341a,al
  40e744:	daa    
  40e745:	call   0xdf64b7fc
  40e74a:	in     al,dx
  40e74b:	cmp    cl,dh
  40e74d:	shr    BYTE PTR [eax],1
  40e74f:	cs retf 0xd408
  40e753:	stos   DWORD PTR es:[edi],eax
  40e754:	mov    esp,0xc022d95c
  40e759:	(bad)  
  40e75a:	inc    esp
  40e75b:	xor    al,0x61
  40e75d:	imul   esp,esi,0x27
  40e760:	gs and eax,0x25f33a39
  40e766:	out    dx,al
  40e767:	mov    ebp,0xc0ff7758
  40e76c:	in     eax,dx
  40e76d:	xchg   esi,eax
  40e76e:	or     BYTE PTR [edx],ah
  40e770:	retf   0xf70b
  40e773:	dec    eax
  40e774:	cmp    cl,BYTE PTR [edi-0x8]
  40e777:	arpl   WORD PTR [ebx-0x56],dx
  40e77a:	push   esp
  40e77b:	or     eax,0x109f5d2d
  40e780:	sbb    al,0x48
  40e782:	or     eax,ebx
  40e784:	aam    0xdd
  40e786:	cmp    BYTE PTR [ebp-0x11],bl
  40e789:	pop    ss
  40e78a:	push   ds
  40e78b:	lods   eax,DWORD PTR ds:[esi]
  40e78c:	pop    edi
  40e78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e78e:	das    
  40e78f:	jle    0x40e7f4
  40e791:	pop    edx
  40e792:	adc    DWORD PTR [ebx+0x5f],edx
  40e795:	mov    dh,0x8d
  40e797:	mov    edi,0xbd416273
  40e79c:	aam    0x45
  40e79e:	inc    ebp
  40e79f:	ja     0x40e774
  40e7a1:	adc    edx,DWORD PTR [esi]
  40e7a3:	bound  ebx,QWORD PTR [eax-0x43]
  40e7a6:	imul   ebp,eax,0x49
  40e7a9:	ja     0x40e73a
  40e7ab:	fstp   QWORD PTR [edx-0x7c1120b6]
  40e7b1:	add    DWORD PTR [edi-0x38],ecx
  40e7b4:	(bad)
  40e7b7:	ror    DWORD PTR [esi+eiz*8-0x72775970],0xf
  40e7bf:	mov    cl,dh
  40e7c1:	hlt    
  40e7c2:	pop    es
  40e7c3:	inc    esi
  40e7c4:	adc    edx,DWORD PTR [ecx]
  40e7c6:	or     eax,0x282cf15d
  40e7cb:	rol    esi,0x72
  40e7ce:	push   esi
  40e7cf:	out    dx,eax
  40e7d0:	add    eax,0xda11065e
  40e7d5:	mov    edi,0xade3fb1b
  40e7da:	rcr    DWORD PTR [ecx],cl
  40e7dc:	xor    eax,edx
  40e7de:	mov    BYTE PTR [ebx+edx*8],bl
  40e7e1:	ret    
  40e7e2:	jmp    0x6f94:0x27e26797
  40e7e9:	mov    cl,0x1e
  40e7eb:	add    edx,DWORD PTR [edi-0x79]
  40e7ee:	jns    0x40e844
  40e7f0:	popf   
  40e7f1:	ins    BYTE PTR es:[edi],dx
  40e7f2:	mov    ch,BYTE PTR [eax-0x1e892f89]
  40e7f8:	or     dl,BYTE PTR [eax+0x18af2d12]
  40e7fe:	nop
  40e7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e800:	cmp    BYTE PTR [edi-0x61],ch
  40e803:	cmove  esp,DWORD PTR [ecx+0x48fefa93]
  40e80a:	ins    BYTE PTR es:[edi],dx
  40e80b:	dec    esp
  40e80c:	mov    BYTE PTR ds:0xcba30f07,bl
  40e812:	inc    edx
  40e813:	fmul   st,st(6)
  40e815:	push   0x1abc9bff
  40e81a:	push   ebx
  40e81b:	je     0x40e868
  40e81d:	jnp    0x40e868
  40e81f:	jmp    0xc18b92e8
  40e824:	das    
  40e825:	mov    al,0x96
  40e828:	test   eax,0x8d1b188c
  40e82d:	fwait
  40e82e:	inc    esp
  40e82f:	add    BYTE PTR [edi+0xbdbe754],ah
  40e835:	adc    al,al
  40e837:	jle    0x40e801
  40e839:	dec    esp
  40e83a:	xchg   esp,eax
  40e83b:	add    BYTE PTR [ebp+ebp*4-0x656e563a],bl
  40e842:	adc    al,BYTE PTR [ecx]
  40e844:	scas   eax,DWORD PTR es:[edi]
  40e845:	cmp    BYTE PTR [ecx+esi*1-0x47],0xb8
  40e84a:	mov    al,0xbd
  40e84c:	into   
  40e84d:	dec    edi
  40e84e:	push   ebx
  40e84f:	inc    esi
  40e850:	jge    0x40e851
  40e852:	sbb    bl,BYTE PTR [edx-0x260f2927]
  40e858:	xchg   ebp,eax
  40e859:	cld    
  40e85a:	sub    DWORD PTR [ebx+ecx*8-0xb],esp
  40e85e:	xor    ecx,ebp
  40e860:	or     eax,0x5df80f71
  40e865:	cmp    ah,bh
  40e867:	fiadd  DWORD PTR [edx-0x360f95cb]
  40e86d:	sub    bh,BYTE PTR [edx+0xc3e9eee]
  40e873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e874:	push   0x46
  40e876:	aaa    
  40e877:	out    0x14,al
  40e879:	pop    ebp
  40e87a:	jmp    0xadeaa334
  40e87f:	jmp    0x40e8b2
  40e881:	ret    
  40e882:	fistp  WORD PTR [ebp*4-0x613e9abc]
  40e889:	cmp    eax,0xae0002b1
  40e88e:	dec    ebp
  40e88f:	mov    ah,0x58
  40e891:	sbb    eax,0xd31189c2
  40e896:	add    BYTE PTR [ebx],al
  40e898:	retf   0x2cb6
  40e89b:	or     BYTE PTR [edi],0x32
  40e89e:	inc    eax
  40e89f:	jp     0x40e836
  40e8a1:	or     BYTE PTR [ebx+0x649916af],cl
  40e8a7:	cmp    BYTE PTR [edx],cl
  40e8a9:	imul   edx,DWORD PTR [ebx],0xffffff9e
  40e8ac:	jbe    0x40e927
  40e8ae:	sbb    dh,BYTE PTR [edi+0x7054252f]
  40e8b4:	mov    eax,esi
  40e8b6:	and    eax,DWORD PTR [eax+0x40872687]
  40e8bc:	dec    esp
  40e8bd:	push   ds
  40e8be:	ja     0x40e8eb
  40e8c0:	push   0x8a89a31d
  40e8c5:	mov    BYTE PTR [edx+0x60],bh
  40e8c8:	inc    ecx
  40e8c9:	and    al,0xa1
  40e8cb:	inc    edi
  40e8cc:	arpl   WORD PTR [edi+0x20],sp
  40e8cf:	lods   al,BYTE PTR ds:[esi]
  40e8d0:	cld    
  40e8d1:	je     0x40e8f3
  40e8d3:	bound  esp,QWORD PTR [esi]
  40e8d5:	jo     0x40e86a
  40e8d7:	mov    ah,BYTE PTR [esi-0x418b593e]
  40e8dd:	push   0xffffffc0
  40e8df:	push   ss
  40e8e0:	mov    eax,0x63a7329e
  40e8e5:	fstp   TBYTE PTR [ebp+0x4f]
  40e8e8:	xchg   edx,eax
  40e8e9:	lahf   
  40e8ea:	xchg   esp,eax
  40e8eb:	out    0x15,eax
  40e8ed:	stc    
  40e8ee:	pusha  
  40e8ef:	jae    0x40e8e1
  40e8f1:	push   edx
  40e8f2:	imul   esp,DWORD PTR [eax],0x3b
  40e8f5:	xlat   BYTE PTR ds:[ebx]
  40e8f6:	xchg   edx,eax
  40e8f7:	gs fwait
  40e8f9:	mov    al,ds:0xb8278f02
  40e8fe:	aam    0xc4
  40e900:	jbe    0x40e8bb
  40e902:	mov    ch,0xdd
  40e904:	nop
  40e905:	mov    BYTE PTR [ebx-0x1],dh
  40e908:	clc    
  40e909:	test   DWORD PTR [esi],0x8f11040b
  40e90f:	sbb    DWORD PTR [eax-0x4585f77f],edi
  40e915:	jmp    0xcbac22d4
  40e91a:	xchg   BYTE PTR [edx],bl
  40e91c:	sub    DWORD PTR [ebp+0x3f4b8a2a],ebp
  40e922:	test   BYTE PTR [edx+eiz*1-0x38],dh
  40e926:	xchg   esp,eax
  40e927:	call   0xdb09c45
  40e92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92d:	imul   BYTE PTR [eax+0x69]
  40e930:	repz aaa 
  40e932:	retf   0xc5da
  40e935:	sbb    esp,edi
  40e937:	retf   
  40e938:	andps  xmm5,XMMWORD PTR [ecx-0x7f73de12]
  40e93f:	sub    bl,BYTE PTR [ecx-0x55]
  40e942:	(bad)  
  40e943:	jmp    0x3b00:0x448e7633
  40e94a:	pop    edi
  40e94b:	in     al,0xe2
  40e94d:	push   0x671115b6
  40e952:	call   0x2767e5aa
  40e957:	add    BYTE PTR [ecx],ch
  40e959:	add    al,0xe5
  40e95b:	outs   dx,BYTE PTR ds:[esi]
  40e95c:	mov    ebx,0x3f461286
  40e961:	jl     0x40e96a
  40e963:	xlat   BYTE PTR ds:[ebx]
  40e964:	lds    esp,FWORD PTR [ebx]
  40e966:	hlt    
  40e967:	sub    BYTE PTR [ecx-0xa00295e],bl
  40e96d:	cs loopne 0x40e9cc
  40e970:	fistp  WORD PTR [edx-0x55]
  40e973:	dec    esp
  40e974:	fcom   DWORD PTR [ebx]
  40e976:	inc    BYTE PTR [ecx+0x25]
  40e979:	fcomp  DWORD PTR fs:[ecx-0x29]
  40e97d:	mov    ah,0x58
  40e97f:	call   0x36be:0x4a8fd578
  40e986:	mov    ds:0x189dcd38,al
  40e98b:	jmp    0xe92fff3d
  40e990:	lahf   
  40e991:	mov    ecx,0xfbfd262f
  40e996:	dec    ebx
  40e997:	imul   ebp,DWORD PTR [edi+0x520d8650],0x25
  40e99e:	pushf  
  40e99f:	push   esi
  40e9a0:	test   eax,0x24eb477
  40e9a5:	mov    edi,0x85f52d36
  40e9aa:	in     al,dx
  40e9ab:	mov    bl,0x9
  40e9ad:	fisub  WORD PTR [esi+0x65c9703c]
  40e9b3:	push   ecx
  40e9b4:	cmp    al,bl
  40e9b6:	cs fiadd WORD PTR ss:[ebp-0x1e]
  40e9bb:	jnp    0x40ea35
  40e9bd:	pop    ebx
  40e9be:	xor    eax,0xc79990ea
  40e9c3:	jno    0x40e947
  40e9c5:	mov    dh,BYTE PTR [ecx+eiz*8+0x14]
  40e9c9:	xchg   ebx,eax
  40e9ca:	(bad)  
  40e9cc:	(bad)  
  40e9ce:	mov    WORD PTR [edi],ds
  40e9d0:	sub    eax,0x360b7122
  40e9d5:	imul   edi,DWORD PTR [edi+ecx*4],0x725c2f90
  40e9dc:	les    ecx,FWORD PTR [edi-0x4334750]
  40e9e2:	inc    edx
  40e9e3:	jns    0x40ea4c
  40e9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9e6:	outs   dx,DWORD PTR ds:[esi]
  40e9e7:	xchg   edi,esp
  40e9e9:	dec    ecx
  40e9ea:	xchg   esp,eax
  40e9eb:	jae    0x40ea56
  40e9ed:	cs dec edx
  40e9ef:	ins    DWORD PTR es:[edi],dx
  40e9f0:	aad    0x20
  40e9f2:	jecxz  0x40ea40
  40e9f4:	and    al,0x1d
  40e9f6:	js     0x40e9b2
  40e9f8:	add    al,0x3a
  40e9fa:	sub    al,0x58
  40e9fc:	retf   0x219e
  40e9ff:	push   ebp
  40ea00:	repnz mov ?,ebp
  40ea03:	xor    eax,0x504ddf72
  40ea08:	aam    0xdb
  40ea0a:	mov    eax,ds:0x57fcff8c
  40ea0f:	mov    eax,0xf4e11cd
  40ea14:	leave  
  40ea15:	pop    ecx
  40ea16:	push   DWORD PTR [eax-0x2ca084f]
  40ea1c:	inc    edi
  40ea1d:	push   ss
  40ea1e:	call   DWORD PTR [edi]
  40ea20:	aam    0x42
  40ea22:	outs   dx,BYTE PTR ds:[esi]
  40ea23:	inc    esp
  40ea24:	lock xor DWORD PTR [esi+0x25],ebp
  40ea28:	jmp    0xb1ef:0xce086b2e
  40ea2f:	dec    esp
  40ea30:	arpl   WORD PTR [ebp+0x62],di
  40ea33:	lock stos DWORD PTR es:[edi],eax
  40ea35:	mov    ds:0xb0ffc587,eax
  40ea3a:	pop    edi
  40ea3b:	pusha  
  40ea3c:	loope  0x40ea24
  40ea3e:	mov    ebp,0x3c667756
  40ea43:	(bad)  
  40ea44:	cmp    eax,0x630b0b41
  40ea49:	adc    al,cl
  40ea4b:	jae    0x40ea17
  40ea4d:	enter  0x4607,0xf2
  40ea51:	fistp  WORD PTR [ebp+ebp*2-0x51]
  40ea55:	xor    eax,DWORD PTR [ebx+0x70]
  40ea58:	(bad)  
  40ea59:	mov    bh,0x40
  40ea5b:	in     al,dx
  40ea5c:	ror    BYTE PTR [ecx+0x54d43d63],0x97
  40ea63:	or     ah,BYTE PTR [ecx+ecx*8+0x194ca688]
  40ea6a:	lods   al,BYTE PTR ds:[esi]
  40ea6b:	inc    edx
  40ea6c:	push   0x2a
  40ea6e:	data16 jno 0x40ea6b
  40ea71:	outs   dx,DWORD PTR ds:[esi]
  40ea72:	cwde   
  40ea73:	or     eax,0xb306049f
  40ea78:	cs in  eax,dx
  40ea7a:	pop    ecx
  40ea7b:	je     0x40eaf6
  40ea7d:	mov    esi,0xa1d94258
  40ea82:	(bad)  
  40ea83:	jnp    0x40ea91
  40ea85:	js     0x40eaf7
  40ea87:	mov    ecx,0xf714e550
  40ea8c:	adc    dh,BYTE PTR [esi]
  40ea8e:	repnz xor DWORD PTR [eax-0x7584faec],edx
  40ea95:	mov    eax,ds:0x899f365d
  40ea9a:	ret    0xb968
  40ea9d:	fist   DWORD PTR [ebx]
  40ea9f:	or     al,BYTE PTR [ebp-0x44]
  40eaa2:	jae    0x40ea6d
  40eaa4:	jmp    0x4b68a1af
  40eaa9:	inc    esp
  40eaaa:	ret    0x881
  40eaad:	call   0x7a0954d0
  40eab2:	pop    ss
  40eab3:	jge    0x40ea71
  40eab5:	lea    esp,[ebx+0x101095dd]
  40eabb:	clc    
  40eabc:	popf   
  40eabd:	jb     0x40ea4a
  40eabf:	fucomip st,st(5)
  40eac1:	ret    0xae2f
  40eac4:	fmul   DWORD PTR [edx-0x47f617cd]
  40eaca:	sbb    cl,BYTE PTR [ecx+0x19]
  40eacd:	mov    DWORD PTR [ebp+0x6d],esi
  40ead0:	inc    ebx
  40ead1:	mov    al,ch
  40ead3:	add    al,0x51
  40ead5:	push   esp
  40ead6:	out    dx,eax
  40ead7:	aam    0x5d
  40ead9:	inc    esi
  40eada:	pop    ds
  40eadb:	(bad)  
  40eadd:	jno    0x40ead9
  40eadf:	imul   edi,DWORD PTR [ebp-0x1f],0x73455503
  40eae6:	push   edx
  40eae7:	pushf  
  40eae8:	mov    WORD PTR [ebx],ds
  40eaea:	mov    ebp,0xc78e6446
  40eaef:	pop    ss
  40eaf0:	adc    BYTE PTR [esi],ah
  40eaf2:	and    eax,0xf6823187
  40eaf7:	out    dx,al
  40eaf8:	ins    DWORD PTR es:[edi],dx
  40eaf9:	outs   dx,DWORD PTR ds:[esi]
  40eafa:	xchg   ebp,eax
  40eafb:	push   0x203130ce
  40eb00:	les    eax,FWORD PTR ds:0x86a6efbd
  40eb06:	pop    ss
  40eb07:	and    bl,BYTE PTR [eax-0x1a]
  40eb0a:	jnp    0x40eb30
  40eb0c:	or     eax,0x1acf834a
  40eb11:	adc    eax,0x9a49eef1
  40eb16:	ret    0x7019
  40eb19:	xor    eax,0x8009120d
  40eb1e:	add    DWORD PTR gs:[edi+0x5f],esp
  40eb22:	cmp    DWORD PTR [esi],edi
  40eb24:	lea    ecx,[edi+0x113bcaf3]
  40eb2a:	xchg   edi,eax
  40eb2b:	test   edi,eax
  40eb2d:	ja     0x40eb16
  40eb2f:	or     eax,0xc9ebf27f
  40eb34:	je     0x40eb79
  40eb36:	sti    
  40eb37:	outs   dx,BYTE PTR ds:[esi]
  40eb38:	shl    BYTE PTR [ecx],0xfc
  40eb3b:	aam    0x46
  40eb3d:	scas   al,BYTE PTR es:[edi]
  40eb3e:	mov    ebx,0x9427be95
  40eb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb44:	jb     0x40eaff
  40eb46:	out    dx,eax
  40eb47:	gs ret 
  40eb49:	mov    cl,0x6a
  40eb4b:	fist   DWORD PTR ds:0x8bc1e82a
  40eb51:	call   0xa5e1:0x8317c70e
  40eb58:	inc    eax
  40eb59:	and    dh,dl
  40eb5b:	mov    esp,0xd9afc984
  40eb60:	mov    eax,ds:0xc6915a51
  40eb65:	push   esp
  40eb66:	sub    al,0xeb
  40eb68:	outs   dx,BYTE PTR ds:[esi]
  40eb69:	add    al,0x3f
  40eb6b:	leave  
  40eb6c:	cld    
  40eb6d:	sbb    DWORD PTR [ecx+0x1b03724f],0xbc247622
  40eb77:	out    dx,al
  40eb78:	jp     0x40ebdb
  40eb7a:	in     al,0xcc
  40eb7c:	fsubp  st(1),st
  40eb7e:	int    0x8d
  40eb80:	sbb    BYTE PTR ds:0xf1c051b0,dh
  40eb86:	imul   eax,ebx,0x42b6267a
  40eb8c:	jb     0x40ebff
  40eb8e:	push   esp
  40eb8f:	push   es
  40eb90:	add    BYTE PTR [eax],cl
  40eb92:	cmp    al,0xd6
  40eb94:	dec    esi
  40eb95:	test   al,0x8a
  40eb97:	sub    BYTE PTR [eax+0x6e],bh
  40eb9a:	inc    edx
  40eb9b:	test   BYTE PTR [ebp+esi*4+0x52],0x25
  40eba0:	jmp    0x40eb6d
  40eba2:	push   cs
  40eba3:	push   cs
  40eba4:	cs xchg bx,ax
  40eba7:	xchg   edi,eax
  40eba8:	cli    
  40eba9:	stc    
  40ebaa:	add    edx,DWORD PTR [esi-0x39b591a3]
  40ebb0:	pop    ebp
  40ebb1:	adc    bl,bl
  40ebb3:	pop    es
  40ebb4:	xchg   esp,eax
  40ebb5:	adc    eax,0x9cbe0578
  40ebba:	js     0x40ec28
  40ebbc:	sbb    DWORD PTR [esi],ebp
  40ebbe:	jno    0x40eb7e
  40ebc0:	repnz cmc 
  40ebc2:	push   es
  40ebc3:	mov    cl,0xbe
  40ebc5:	add    al,0x6e
  40ebc7:	je     0x40eb70
  40ebc9:	ins    DWORD PTR es:[edi],dx
  40ebca:	pop    ebx
  40ebcb:	xor    al,bl
  40ebcd:	pop    ss
  40ebce:	out    dx,eax
  40ebcf:	fisubr DWORD PTR ds:0xf80ff298
  40ebd5:	dec    eax
  40ebd6:	jb     0x40eb8d
  40ebd8:	sahf   
  40ebd9:	and    eax,ebx
  40ebdb:	arpl   cx,sp
  40ebdd:	test   DWORD PTR [ecx-0x663c8c4c],edx
  40ebe3:	mov    cs,esp
  40ebe5:	pop    esi
  40ebe6:	dec    ebx
  40ebe7:	clc    
  40ebe8:	ja     0x40ec14
  40ebea:	xor    DWORD PTR [ebp+0x3aa42826],esp
  40ebf0:	adc    esi,DWORD PTR es:[esi+0x2f]
  40ebf4:	xchg   edi,eax
  40ebf5:	mov    edx,esi
  40ebf7:	jns    0x40eba3
  40ebf9:	pop    es
  40ebfa:	leave  
  40ebfb:	ror    cl,cl
  40ebfd:	shl    BYTE PTR [ecx+0x6cbf4100],1
  40ec03:	repnz sub cl,al
  40ec06:	xlat   BYTE PTR ds:[ebx]
  40ec07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec08:	retf   
  40ec09:	mov    edi,0x9869183a
  40ec0e:	sahf   
  40ec0f:	std    
  40ec10:	inc    esi
  40ec11:	into   
  40ec12:	std    
  40ec13:	xchg   edi,eax
  40ec14:	lods   al,BYTE PTR ds:[esi]
  40ec15:	scas   al,BYTE PTR es:[edi]
  40ec16:	xchg   ebp,eax
  40ec17:	mov    edi,0x37293494
  40ec1c:	or     BYTE PTR [ebx],0x90
  40ec1f:	fstp   TBYTE PTR [edx]
  40ec21:	sbb    cl,BYTE PTR [ebp+0x64]
  40ec24:	outs   dx,BYTE PTR ds:[esi]
  40ec25:	mov    ebx,0x812fab64
  40ec2a:	pop    ds
  40ec2b:	ja     0x40ec5f
  40ec2d:	adc    BYTE PTR [esi],dh
  40ec2f:	outs   dx,DWORD PTR ds:[esi]
  40ec30:	add    edi,edx
  40ec32:	adc    eax,0x8fc409f9
  40ec37:	and    bl,BYTE PTR ds:0x7f59d20a
  40ec3d:	popa   
  40ec3e:	mov    ch,0xdc
  40ec40:	leave  
  40ec41:	sbb    eax,0xcd582508
  40ec46:	push   ecx
  40ec47:	add    esp,ebp
  40ec49:	mov    BYTE PTR fs:[ebx-0x1ceeb44d],bh
  40ec50:	idiv   BYTE PTR [eax-0x35]
  40ec53:	mov    bl,0x2
  40ec55:	ins    BYTE PTR es:[edi],dx
  40ec56:	(bad)  
  40ec57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec58:	repnz ins BYTE PTR es:[edi],dx
  40ec5a:	in     eax,dx
  40ec5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec5c:	clc    
  40ec5d:	inc    edx
  40ec5e:	imul   eax,DWORD PTR ds:0x4be70a82,0xffffffe5
  40ec65:	jl     0x40ec02
  40ec67:	retf   0x4525
  40ec6a:	(bad)  
  40ec6b:	jae    0x40ec49
  40ec6d:	xor    eax,esi
  40ec6f:	int3   
  40ec70:	das    
  40ec71:	inc    ebx
  40ec72:	inc    eax
  40ec73:	sahf   
  40ec74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec75:	into   
  40ec76:	push   cs
  40ec77:	adc    eax,0xa69ce7e3
  40ec7c:	mov    gs,WORD PTR [esi+eax*1-0x55c0295f]
  40ec83:	aam    0xec
  40ec85:	push   ds
  40ec86:	adc    DWORD PTR [eax+esi*8+0x51],0xffffffd6
  40ec8b:	sub    BYTE PTR [eax-0x247b3ba9],dh
  40ec91:	sub    al,0xd6
  40ec93:	jae    0x40ec6d
  40ec95:	out    0x60,al
  40ec97:	daa    
  40ec98:	loopne 0x40eca0
  40ec9a:	mov    al,ds:0x17b9e7ae
  40ec9f:	aaa    
  40eca0:	mov    es,esi
  40eca2:	pop    esp
  40eca3:	jb     0x40ec81
  40eca5:	pop    ebx
  40eca6:	enter  0xc3e,0x61
  40ecaa:	add    al,0xef
  40ecac:	cmp    BYTE PTR [ecx],ch
  40ecae:	gs xor al,0xfd
  40ecb1:	cmp    esi,ebp
  40ecb3:	lahf   
  40ecb4:	(bad)  
  40ecb5:	(bad)  
  40ecb6:	fwait
  40ecb7:	int3   
  40ecb8:	jmp    esp
  40ecba:	fiadd  WORD PTR [edi-0x4d36771c]
  40ecc0:	push   0x7f
  40ecc2:	(bad)  
  40ecc3:	xor    esi,eax
  40ecc5:	cmp    DWORD PTR ds:0xb81ee5c8,ecx
  40eccb:	loope  0x40ed37
  40eccd:	mov    cl,0x54
  40eccf:	pop    ds
  40ecd0:	cmp    al,0xc
  40ecd2:	push   0xffffff80
  40ecd4:	cdq    
  40ecd5:	out    0xdc,al
  40ecd7:	xor    dl,BYTE PTR [esi+0x25d027b4]
  40ecdd:	add    al,0x9c
  40ecdf:	or     edx,ecx
  40ece1:	jo     0x40ecb3
  40ece3:	fild   QWORD PTR [ebp+0x35b990a2]
  40ece9:	mov    dl,0xfa
  40eceb:	adc    DWORD PTR [esp+ebp*2+0x460d8e15],0xffffffbf
  40ecf3:	test   esi,eax
  40ecf5:	sub    eax,0xa933c2b5
  40ecfa:	sub    edx,DWORD PTR [esi+0x63]
  40ecfd:	jno    0x40ec93
  40ecff:	addr16 inc esp
  40ed01:	or     esi,DWORD PTR [ebx+ecx*8]
  40ed04:	mov    ds:0xf82cfa73,al
  40ed09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed0a:	js     0x40eca5
  40ed0c:	call   0xcbcd87ca
  40ed11:	aas    
  40ed12:	pushf  
  40ed13:	test   DWORD PTR [edx],ecx
  40ed15:	push   ss
  40ed16:	xor    esi,DWORD PTR [ecx+0x32]
  40ed19:	xchg   ebp,eax
  40ed1a:	call   0x9001:0xabcab8e2
  40ed21:	inc    ebp
  40ed22:	dec    esp
  40ed23:	not    DWORD PTR [esi-0x53]
  40ed26:	mov    BYTE PTR [esi+0x7c],ch
  40ed29:	sbb    ebx,DWORD PTR [ebx+0x40]
  40ed2c:	lahf   
  40ed2d:	mov    dh,0x23
  40ed2f:	push   ecx
  40ed30:	frstor ds:0x82c77369
  40ed36:	push   edi
  40ed37:	(bad)  
  40ed38:	mov    ebx,0x54214b46
  40ed3d:	cmp    al,0xc6
  40ed3f:	mov    ch,0xa6
  40ed41:	dec    DWORD PTR [ebx-0x47]
  40ed44:	mov    edi,esi
  40ed46:	lds    edi,FWORD PTR [ebx+0x8]
  40ed49:	pop    ecx
  40ed4a:	xor    eax,esp
  40ed4c:	xchg   ebp,eax
  40ed4d:	push   ebp
  40ed4e:	push   0xffffff80
  40ed50:	cld    
  40ed51:	stos   DWORD PTR es:[edi],eax
  40ed52:	sub    eax,0x6e93de3d
  40ed57:	aad    0x5
  40ed59:	loope  0x40ed99
  40ed5b:	(bad)  
  40ed5d:	out    dx,al
  40ed5e:	(bad)  
  40ed5f:	jl     0x40ece7
  40ed61:	mov    ?,eax
  40ed63:	retf   
  40ed64:	mov    dh,0xaf
  40ed66:	pop    ebp
  40ed67:	mov    ebp,0xa7d83173
  40ed6c:	dec    esp
  40ed6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed6e:	jp     0x40ed17
  40ed70:	call   0xd1f483b3
  40ed75:	mov    edi,0x80669e61
  40ed7a:	and    ah,BYTE PTR [edi+0x359db22d]
  40ed80:	retf   0x834f
  40ed83:	sub    eax,0x2b413c63
  40ed88:	mov    ds:0xa1b46095,eax
  40ed8d:	sbb    DWORD PTR [esi+edx*2-0x5d4b8844],edx
  40ed94:	jecxz  0x40ed9c
  40ed96:	shr    eax,0xf8
  40ed99:	in     eax,0xfa
  40ed9b:	retf   0x7c3c
  40ed9e:	adc    DWORD PTR [esi],eax
  40eda0:	and    al,0x5
  40eda2:	mov    eax,0x2a055149
  40eda7:	popa   
  40eda8:	and    DWORD PTR [ecx-0x3d100ee2],0x8680a3e
  40edb2:	pushf  
  40edb3:	(bad)  
  40edb4:	mov    ds:0xa701a331,al
  40edb9:	shr    esp,1
  40edbb:	inc    eax
  40edbc:	retf   0xe35f
  40edbf:	cs in  eax,dx
  40edc1:	pop    es
  40edc2:	stos   BYTE PTR es:[edi],al
  40edc3:	out    dx,eax
  40edc4:	xchg   ebx,eax
  40edc5:	inc    eax
  40edc6:	mov    dh,0xa7
  40edc8:	xchg   ebx,eax
  40edc9:	in     eax,0x6e
  40edcb:	fcmovbe st,st(5)
  40edcd:	aas    
  40edce:	sbb    BYTE PTR [ebx+0xd1cb454],ah
  40edd4:	(bad)  
  40edd5:	iret   
  40edd6:	ss xor ax,0xf9fb
  40eddc:	adc    al,0xb0
  40edde:	cmp    dl,BYTE PTR [edx+0x23]
  40ede1:	jmp    0x40ee49
  40ede3:	iret   
  40ede4:	jb     0x40edc3
  40ede6:	ins    DWORD PTR es:[edi],dx
  40ede7:	dec    esp
  40ede8:	ret    
  40ede9:	xor    bl,dh
  40edeb:	dec    ebp
  40edec:	sub    DWORD PTR [ebx+edi*2+0x2],ebp
  40edf0:	les    ebp,FWORD PTR [edi-0x6e7186fe]
  40edf6:	in     al,0x69
  40edf8:	add    eax,0x9194d696
  40edfd:	(bad)  
  40edfe:	loopne 0x40ee6c
  40ee00:	(bad)
  40ee05:	into   
  40ee06:	cmp    al,0x49
  40ee08:	loope  0x40edf9
  40ee0a:	repnz xchg esp,eax
  40ee0c:	aam    0xcd
  40ee0e:	mov    ds,ebp
  40ee10:	test   al,0x58
  40ee12:	dec    edx
  40ee13:	xchg   edi,eax
  40ee14:	push   es
  40ee15:	es adc eax,0xb3e52d56
  40ee1b:	or     BYTE PTR [eax+0x15],bl
  40ee1e:	fstp   QWORD PTR [esi]
  40ee20:	ins    DWORD PTR es:[edi],dx
  40ee21:	mov    dl,0xb0
  40ee23:	icebp  
  40ee24:	fstp   QWORD PTR [ebx]
  40ee26:	and    eax,0xb426466e
  40ee2b:	xchg   ebp,eax
  40ee2c:	sub    DWORD PTR [eax-0x68],esi
  40ee2f:	push   ds
  40ee30:	pop    ebx
  40ee31:	ret    0x9f82
  40ee34:	(bad)  
  40ee35:	push   edi
  40ee36:	push   ebp
  40ee37:	hlt    
  40ee38:	dec    ebp
  40ee39:	ret    0x5683
  40ee3c:	inc    ecx
  40ee3d:	vorps  xmm3,xmm0,XMMWORD PTR ds:0x57024dac
  40ee45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee46:	inc    ebp
  40ee47:	cmp    BYTE PTR [eax-0x12],0xff
  40ee4b:	mov    cl,0x50
  40ee4d:	sbb    esi,eax
  40ee4f:	inc    ebx
  40ee50:	dec    ebx
  40ee51:	jne    0x40ee77
  40ee53:	fdivp  st(2),st
  40ee55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee56:	bound  edx,QWORD PTR [esi]
  40ee58:	rdtsc  
  40ee5a:	pop    eax
  40ee5b:	in     al,0x6
  40ee5d:	or     al,0x81
  40ee5f:	push   es
  40ee60:	cmp    dl,BYTE PTR [edi]
  40ee62:	cmp    DWORD PTR [ecx-0x7],eax
  40ee65:	and    ah,BYTE PTR [edx+0x71]
  40ee68:	pop    edx
  40ee69:	(bad)  
  40ee6a:	stc    
  40ee6b:	lea    esp,[ebx]
  40ee6d:	test   al,0xaf
  40ee6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee70:	mov    al,ds:0xaa61b71f
  40ee75:	jp     0x40ee92
  40ee77:	mov    esp,edx
  40ee79:	or     dl,BYTE PTR [esi+0x15]
  40ee7c:	outs   dx,DWORD PTR ds:[esi]
  40ee7d:	cli    
  40ee7e:	int    0x80
  40ee80:	ins    BYTE PTR es:[edi],dx
  40ee81:	dec    esi
  40ee82:	push   eax
  40ee83:	(bad)  
  40ee84:	mov    DWORD PTR [edi],edx
  40ee86:	dec    bx
  40ee88:	inc    edx
  40ee89:	sar    BYTE PTR [eax],1
  40ee8b:	cmp    eax,0xa9f3e0b7
  40ee90:	dec    edx
  40ee91:	lods   eax,DWORD PTR ds:[esi]
  40ee92:	jnp    0x40ee6e
  40ee94:	jb     0x40ee3b
  40ee96:	ins    DWORD PTR es:[edi],dx
  40ee97:	lods   eax,DWORD PTR ds:[esi]
  40ee99:	xor    al,0x31
  40ee9b:	mov    edi,0x15ca2c04
  40eea0:	lock mov eax,ds:0x49529393
  40eea6:	call   FWORD PTR [edx+esi*4+0x7106d403]
  40eead:	popa   
  40eeae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeaf:	fimul  WORD PTR [ebp-0x1c146bc0]
  40eeb5:	add    eax,0x25d83084
  40eeba:	push   esi
  40eebb:	mov    al,0xa2
  40eebd:	cwde   
  40eebe:	dec    ebx
  40eebf:	pop    eax
  40eec0:	inc    ebx
  40eec1:	mov    bl,0x19
  40eec3:	inc    eax
  40eec4:	xor    BYTE PTR [edi+0x4369b47],0xf2
  40eecb:	sar    BYTE PTR [esi-0x7f],1
  40eece:	adc    al,0xe7
  40eed0:	outs   dx,DWORD PTR ds:[esi]
  40eed1:	xchg   ebx,eax
  40eed2:	mov    bl,0xf
  40eed4:	dec    ecx
  40eed5:	cmp    dl,BYTE PTR [eax+ebx*4]
  40eed8:	inc    esi
  40eed9:	int    0x58
  40eedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedc:	out    0x64,eax
  40eede:	jl     0x40ee7c
  40eee0:	push   ds
  40eee1:	scas   al,BYTE PTR es:[edi]
  40eee2:	repz sub ebx,edx
  40eee5:	xchg   DWORD PTR [eax+0x5],edi
  40eee8:	aaa    
  40eee9:	test   al,0x68
  40eeeb:	sbb    eax,0x736dc8e1
  40eef0:	cli    
  40eef1:	(bad)  
  40eef2:	out    dx,al
  40eef3:	push   ds
  40eef4:	addr16 (bad) 
  40eef6:	enter  0x1fa6,0xe0
  40eefa:	push   es
  40eefb:	(bad)  
  40eefd:	fstp   TBYTE PTR [ebx+edx*2]
  40ef00:	jg     0x40eec4
  40ef02:	lahf   
  40ef03:	out    dx,eax
  40ef04:	scas   eax,DWORD PTR es:[edi]
  40ef05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef06:	add    eax,edi
  40ef08:	fsub   QWORD PTR [esi+0x25]
  40ef0b:	rcr    esp,cl
  40ef0d:	mov    ds:0x7f3c1831,al
  40ef12:	call   0x9ff48002
  40ef17:	outs   dx,BYTE PTR ds:[esi]
  40ef18:	fimul  DWORD PTR [edx+0x51]
  40ef1b:	mov    eax,?
  40ef1d:	pop    ebx
  40ef1e:	aam    0xb3
  40ef20:	adc    esp,edx
  40ef22:	cld    
  40ef23:	retf   0xba0c
  40ef26:	pusha  
  40ef27:	sti    
  40ef28:	and    BYTE PTR [edi],cl
  40ef2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef2b:	imul   edx,DWORD PTR [ebx-0x48],0x57ed0982
  40ef32:	pusha  
  40ef33:	sahf   
  40ef34:	xor    al,0x98
  40ef36:	dec    ebp
  40ef37:	ds xchg ebp,eax
  40ef39:	pop    ebx
  40ef3a:	jns    0x40eed7
  40ef3c:	loopne 0x40ef93
  40ef3e:	mov    ah,0xfc
  40ef40:	push   es
  40ef41:	push   es
  40ef42:	pop    edi
  40ef43:	arpl   WORD PTR [ebx-0x39],bx
  40ef46:	imul   eax,DWORD PTR [ebp-0x1034de43],0xee4260f4
  40ef50:	push   0xc20e1560
  40ef55:	fldcw  WORD PTR [edi+ebx*4-0x223c083e]
  40ef5c:	pushf  
  40ef5d:	sbb    DWORD PTR [edx+0x5d],ecx
  40ef60:	adc    al,0xf2
  40ef62:	push   edi
  40ef63:	dec    ebp
  40ef64:	pop    ds
  40ef65:	mov    bh,0x98
  40ef67:	pop    ebp
  40ef68:	or     al,0x85
  40ef6a:	mov    edx,ecx
  40ef6c:	sub    BYTE PTR [ebp+0x780f7a7c],0x22
  40ef73:	das    
  40ef74:	and    DWORD PTR [edi+0x79],ebp
  40ef77:	cmp    eax,0xc46015f3
  40ef7c:	sbb    DWORD PTR [ebx],0x91b882ed
  40ef82:	push   edx
  40ef83:	xchg   ebx,eax
  40ef84:	mov    ah,bh
  40ef86:	lods   eax,DWORD PTR ds:[esi]
  40ef87:	push   es
  40ef88:	or     bl,bl
  40ef8a:	fprem  
  40ef8c:	sub    edx,0xffffffee
  40ef8f:	imul   edi,DWORD PTR [edi-0x66],0xe41fa6b
  40ef96:	dec    esi
  40ef97:	(bad)  
  40ef98:	stc    
  40ef99:	mov    esp,0x10f6859f
  40ef9e:	mov    ebx,0xd80eb37e
  40efa3:	sbb    al,0xb7
  40efa5:	ins    DWORD PTR es:[di],dx
  40efa7:	clc    
  40efa8:	mov    al,ds:0x4720f18a
  40efad:	jmp    0x7fe61fe6
  40efb2:	ins    BYTE PTR es:[edi],dx
  40efb3:	mov    dl,0x54
  40efb5:	or     al,dh
  40efb7:	cdq    
  40efb8:	ss ins DWORD PTR es:[edi],dx
  40efba:	aas    
  40efbb:	ins    DWORD PTR es:[edi],dx
  40efbc:	jnp    0x40ef73
  40efbe:	and    eax,ecx
  40efc0:	jb     0x40ef50
  40efc2:	inc    esp
  40efc3:	(bad)  
  40efc4:	pop    ebp
  40efc5:	or     eax,0x1d963d97
  40efca:	push   ss
  40efcb:	mov    ecx,0x7a2ae6c3
  40efd0:	retf   
  40efd1:	clc    
  40efd2:	ret    0xb8fc
  40efd5:	outs   dx,DWORD PTR ds:[esi]
  40efd6:	xchg   edi,eax
  40efd7:	add    al,0xc
  40efd9:	ins    DWORD PTR es:[edi],dx
  40efda:	jmp    0x6ce7c24d
  40efdf:	sbb    esp,eax
  40efe1:	imul   edi,DWORD PTR [esi-0x77433f42],0xf6ca84ba
  40efeb:	addr16 ss xchg esi,eax
  40efee:	push   ebp
  40efef:	ss pusha 
  40eff1:	mov    al,0xa3
  40eff3:	inc    ecx
  40eff4:	mov    eax,ds:0x1e056b9e
  40eff9:	(bad)  
  40effa:	push   edi
  40effb:	enter  0xe260,0x5b
  40efff:	fild   WORD PTR [ecx-0x12]
  40f002:	das    
  40f003:	leave  
  40f004:	jle    0x40ef95
  40f006:	loop   0x40eff6
  40f008:	(bad)  
  40f009:	sbb    dh,bh
  40f00b:	jl     0x40f077
  40f00d:	pop    edi
  40f00e:	inc    eax
  40f00f:	cmp    al,0x10
  40f011:	mov    al,0xe7
  40f013:	and    eax,0x149c6362
  40f018:	inc    edx
  40f019:	(bad)  
  40f01a:	pop    ecx
  40f01b:	and    DWORD PTR [ecx-0x2f9fca9a],edx
  40f021:	pop    edi
  40f022:	inc    ebx
  40f023:	pop    ebx
  40f024:	mov    edx,0x8493da85
  40f029:	cmp    eax,0x5fcfc25d
  40f02e:	mov    esp,0xc68e1694
  40f033:	lea    esi,[edx-0x41b8950c]
  40f039:	mov    ecx,0xb611fc30
  40f03e:	sahf   
  40f03f:	xchg   edi,eax
  40f040:	ret    
  40f041:	add    bh,BYTE PTR [esi+ebp*8+0xf]
  40f045:	int    0xae
  40f047:	mov    esp,DWORD PTR [ebp-0x20083a16]
  40f04d:	adc    dl,dl
  40f04f:	ja     0x40f0cd
  40f051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f052:	(bad)  
  40f053:	xor    bh,bl
  40f055:	pop    ebp
  40f056:	cmp    al,0x33
  40f058:	popa   
  40f059:	mov    eax,ds:0x26a34dbb
  40f05e:	lea    esi,[eax-0xd85e325]
  40f064:	and    BYTE PTR [ebp-0x2d4dd6bc],ch
  40f06a:	push   ebx
  40f06b:	xchg   ecx,eax
  40f06c:	mov    dh,0xfa
  40f06e:	ja     0x40f07e
  40f070:	jbe    0x40effe
  40f072:	mov    ds:0x89ef39d7,eax
  40f077:	mov    esp,0xff829dda
  40f07c:	je     0x40f0b3
  40f07e:	imul   ebp,DWORD PTR [eax],0x13
  40f081:	xor    eax,0x4e8d39b6
  40f086:	js     0x40f103
  40f088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f089:	dec    ecx
  40f08a:	xor    al,0xec
  40f08c:	je     0x40f03d
  40f08e:	mov    edi,0xa6936b29
  40f093:	xor    DWORD PTR [esi+0x4e],edx
  40f096:	aam    0x9a
  40f098:	pop    edx
  40f099:	dec    esp
  40f09a:	scas   al,BYTE PTR es:[edi]
  40f09b:	inc    eax
  40f09c:	not    BYTE PTR [edi]
  40f09e:	adc    al,0x2
  40f0a0:	ds jl  0x40f0fc
  40f0a3:	fbld   TBYTE PTR [edx]
  40f0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a6:	inc    eax
  40f0a7:	test   al,0x12
  40f0a9:	fdivr  QWORD PTR [edi-0x5c]
  40f0ac:	(bad)
  40f0af:	cmp    al,0xfd
  40f0b1:	xor    eax,0xba22cd34
  40f0b6:	xchg   edx,eax
  40f0b7:	cmp    al,0x23
  40f0b9:	in     al,0xc1
  40f0bb:	pop    es
  40f0bc:	or     DWORD PTR [esi],eax
  40f0be:	xor    cl,BYTE PTR [eax-0x619a4fea]
  40f0c4:	js     0x40f068
  40f0c6:	inc    ecx
  40f0c7:	mov    esi,0x666741e8
  40f0cc:	repz mov ds:0x7d36a74a,al
  40f0d2:	scas   eax,DWORD PTR es:[edi]
  40f0d3:	xchg   ecx,eax
  40f0d4:	int    0x98
  40f0d6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f0d8:	int    0xea
  40f0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0db:	mov    edx,0xc05b0d49
  40f0e0:	and    eax,ebp
  40f0e2:	rcr    cl,1
  40f0e4:	int    0xfc
  40f0e6:	cmp    bl,BYTE PTR [ecx-0x37446eb3]
  40f0ec:	and    ch,BYTE PTR [ecx-0x26]
  40f0ef:	in     eax,dx
  40f0f0:	outs   dx,DWORD PTR ds:[esi]
  40f0f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f2:	xlat   BYTE PTR ds:[ebx]
  40f0f3:	xor    ah,BYTE PTR ds:0xda40db95
  40f0f9:	in     al,dx
  40f0fa:	out    0xca,eax
  40f0fc:	retf   0x207f
  40f0ff:	adc    BYTE PTR [ebx],dh
  40f101:	dec    ecx
  40f102:	aam    0xee
  40f104:	add    ecx,DWORD PTR [ecx-0x17a96229]
  40f10a:	aam    0x3c
  40f10c:	mov    ds:0x915fa701,eax
  40f111:	jne    0x40f0c1
  40f113:	aad    0x9a
  40f115:	or     esi,DWORD PTR [esi+0x204326d2]
  40f11b:	jle    0x40f13f
  40f11d:	imul   edi,DWORD PTR [edx+0x7b],0x56
  40f121:	ins    DWORD PTR es:[edi],dx
  40f122:	(bad)  
  40f123:	pop    ecx
  40f124:	pop    esp
  40f125:	fidivr DWORD PTR [eax-0x79]
  40f128:	fld    TBYTE PTR [ecx-0x2]
  40f12b:	and    BYTE PTR ss:[ebx+0xe6b70e7],cl
  40f132:	adc    cl,BYTE PTR [ecx-0x4e41bf39]
  40f138:	jb     0x40f0ee
  40f13a:	(bad)
  40f13e:	jne    0x40f14c
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	es mov ecx,0xca748b33
  40fa1c:	jp     0x40fa98
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	out    dx,eax
  40fa23:	pop    ecx
  40fa24:	in     eax,0xf6
  40fa26:	lock mov esp,0x7d6ee450
  40fa2c:	das    
  40fa2d:	jge    0x40fa2a
  40fa2f:	dec    edx
  40fa30:	jnp    0x40fa59
  40fa32:	cdq    
  40fa33:	inc    ecx
  40fa34:	adc    dh,bh
  40fa36:	rcr    DWORD PTR [ebx+0x14],cl
  40fa39:	repnz fcom QWORD PTR [ebx+0x52]
  40fa3d:	jae    0x40fa5b
  40fa3f:	aaa    
  40fa40:	inc    edi
  40fa41:	outs   dx,DWORD PTR ds:[esi]
  40fa42:	jne    0x40fa96
  40fa44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa45:	fidivr WORD PTR [ecx]
  40fa47:	push   esi
  40fa48:	add    ch,BYTE PTR [bx+si]
  40fa4b:	sbb    DWORD PTR [edi-0x60],ecx
  40fa4e:	push   esi
  40fa4f:	das    
  40fa50:	hlt    
  40fa51:	test   BYTE PTR [eax+0x5d161ae0],cl
  40fa57:	and    eax,0x315ce0a1
  40fa5c:	dec    ebp
  40fa5d:	cmp    bl,BYTE PTR [ebp-0x24677456]
  40fa63:	test   BYTE PTR [ebp-0x4fba2f06],cl
  40fa69:	nop
  40fa6a:	or     BYTE PTR [esi],0x7a
  40fa6d:	out    0x24,al
  40fa6f:	jl     0x40fa7d
  40fa71:	arpl   WORD PTR ds:0x10fd3823,bx
  40fa77:	mov    esi,0xfc267355
  40fa7c:	xor    DWORD PTR [ebx],ebx
  40fa7e:	mov    DWORD PTR [ebp+0x413cad0],ecx
  40fa84:	mov    al,ds:0x94d55e3c
  40fa89:	outs   dx,DWORD PTR cs:[esi]
  40fa8b:	and    BYTE PTR [esi],ah
  40fa8d:	push   ecx
  40fa8e:	inc    edx
  40fa8f:	rcl    DWORD PTR [edi-0x152730c3],1
  40fa95:	or     ah,BYTE PTR [edx]
  40fa97:	fisubr DWORD PTR [edi]
  40fa99:	js     0x40fa43
  40fa9b:	xor    ax,0xf972
  40fa9f:	dec    BYTE PTR [eax-0x4a]
  40faa2:	cmp    al,0x4f
  40faa4:	popf   
  40faa5:	sbb    DWORD PTR [ebp+0x78],edi
  40faa8:	jbe    0x40fa3b
  40faaa:	aaa    
  40faab:	sub    bl,BYTE PTR [eax]
  40faad:	mov    dl,0x85
  40faaf:	adc    DWORD PTR [eax-0x60],0x78
  40fab3:	mov    eax,0xa5395881
  40fab8:	or     eax,0x1d324874
  40fabd:	ins    BYTE PTR es:[edi],dx
  40fabe:	or     BYTE PTR [ebp+0x29],cl
  40fac1:	add    BYTE PTR [edi+eax*8+0x17b5b086],bl
  40fac8:	and    eax,0x607eefe2
  40facd:	xor    eax,0x52e4446b
  40fad2:	mov    al,ds:0x2b2fec91
  40fad7:	lea    ebp,[ecx-0x2d445e3f]
  40fadd:	cli    
  40fade:	mov    ebx,0x115e5159
  40fae3:	mov    dl,0xbc
  40fae5:	mov    edx,0x7dd0862
  40faea:	pop    ss
  40faeb:	dec    eax
  40faec:	push   0x80c9a882
  40faf1:	adc    dh,dl
  40faf3:	ficomp WORD PTR [ecx+0x57038347]
  40faf9:	pop    ebx
  40fafa:	imul   esp,DWORD PTR fs:[edi],0xf6da8d01
  40fb01:	inc    eax
  40fb02:	or     edx,DWORD PTR [ebx+0x73]
  40fb05:	popf   
  40fb06:	xchg   esi,eax
  40fb07:	arpl   WORD PTR [ecx+eax*4-0x5ee4eee6],bp
  40fb0e:	cmc    
  40fb0f:	sbb    eax,0x6928f16f
  40fb14:	loopne 0x40fac5
  40fb16:	pop    ecx
  40fb17:	icebp  
  40fb18:	movq   mm0,QWORD PTR [esi+0x5e811d29]
  40fb1f:	in     eax,0x1e
  40fb21:	dec    eax
  40fb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb23:	push   ds
  40fb24:	dec    eax
  40fb25:	inc    edi
  40fb26:	xor    esi,DWORD PTR [ebx]
  40fb28:	or     BYTE PTR [ecx+0x3],ah
  40fb2b:	adc    DWORD PTR [ebp+0x30],ebp
  40fb2e:	dec    edx
  40fb2f:	test   ebp,ecx
  40fb31:	in     al,dx
  40fb32:	ret    
  40fb33:	cwde   
  40fb34:	sbb    eax,0x53591dfa
  40fb39:	push   ss
  40fb3a:	cmp    esi,DWORD PTR [esp+edi*1]
  40fb3d:	cwde   
  40fb3e:	repnz fnstcw WORD PTR [eax-0x78]
  40fb42:	mov    esp,DWORD PTR [edi-0x686ca1d5]
  40fb48:	push   edx
  40fb49:	xor    eax,DWORD PTR [esi+eiz*4-0x4dbef303]
  40fb50:	pusha  
  40fb51:	cmp    DWORD PTR cs:[edx-0xd],0xab15c269
  40fb59:	cwde   
  40fb5a:	iret   
  40fb5b:	push   ss
  40fb5c:	popf   
  40fb5d:	mov    ch,al
  40fb5f:	xor    bl,al
  40fb61:	or     al,0xb8
  40fb63:	or     bl,BYTE PTR [edi-0x73eb5633]
  40fb69:	xchg   edi,eax
  40fb6a:	(bad)  
  40fb6b:	and    edi,ebx
  40fb6d:	mov    esi,0xfef5623c
  40fb72:	fmul   st,st(3)
  40fb74:	dec    esi
  40fb75:	xor    DWORD PTR [ecx-0x20],esi
  40fb78:	mov    ah,0x63
  40fb7a:	pop    eax
  40fb7b:	and    eax,0x97740141
  40fb80:	inc    esp
  40fb81:	inc    ebx
  40fb82:	mov    esi,0x4b754b9
  40fb87:	aas    
  40fb88:	mov    fs,eax
  40fb8a:	pavgb  mm0,QWORD PTR [ecx-0x26187712]
  40fb91:	cmp    eax,DWORD PTR [edi+0x37]
  40fb94:	pop    eax
  40fb95:	jns    0x40fc07
  40fb97:	cld    
  40fb98:	dec    eax
  40fb99:	nop
  40fb9a:	mov    ebx,0x24250db9
  40fb9f:	add    esi,eax
  40fba1:	(bad)
  40fba4:	or     BYTE PTR [edx+0x59a4e16f],ch
  40fbaa:	in     eax,0x40
  40fbac:	pop    es
  40fbad:	bound  esp,QWORD PTR [ebx+0x27]
  40fbb0:	dec    esi
  40fbb1:	les    edx,FWORD PTR [eax+edi*4]
  40fbb4:	rcl    DWORD PTR [ebx-0x2530b12f],cl
  40fbba:	jbe    0x40fb7e
  40fbbc:	push   esi
  40fbbd:	xor    ebp,DWORD PTR [ecx+esi*8+0x4b]
  40fbc1:	xchg   ecx,eax
  40fbc2:	int3   
  40fbc3:	mov    eax,ds:0x45efbc47
  40fbc8:	fisttp DWORD PTR [eax+0x33]
  40fbcb:	aas    
  40fbcc:	and    esi,esi
  40fbce:	mov    dh,0xd4
  40fbd0:	ret    0xbe4
  40fbd3:	call   0x45a820ac
  40fbd8:	aad    0xc7
  40fbda:	and    al,0x4d
  40fbdc:	adc    eax,0x4e13e9ca
  40fbe1:	ja     0x40fc35
  40fbe3:	lods   al,BYTE PTR ds:[esi]
  40fbe4:	xchg   edx,eax
  40fbe5:	jno    0x40fc0a
  40fbe7:	xor    BYTE PTR [esi-0x4f7d9aee],ah
  40fbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbee:	and    bl,bh
  40fbf0:	push   eax
  40fbf1:	enter  0x6103,0x8c
  40fbf5:	ret    
  40fbf6:	popa   
  40fbf7:	xor    al,0xd7
  40fbf9:	jp     0x40fbe5
  40fbfb:	sbb    al,BYTE PTR [edi]
  40fbfd:	sub    esi,DWORD PTR gs:[ebp-0x11001ae2]
  40fc04:	sub    ch,dl
  40fc06:	je     0x40fc44
  40fc08:	sub    dl,BYTE PTR [esi+0x7]
  40fc0b:	outs   dx,DWORD PTR ds:[esi]
  40fc0c:	call   0x2fc8bd0f
  40fc11:	test   DWORD PTR [ecx-0x7],ebx
  40fc14:	icebp  
  40fc15:	not    BYTE PTR [ebx+ecx*4]
  40fc18:	fild   DWORD PTR [ecx-0x241a3a55]
  40fc1e:	dec    edi
  40fc1f:	pushf  
  40fc20:	jns    0x40fc77
  40fc22:	jmp    0x40fc2b
  40fc24:	test   al,0x9b
  40fc26:	lea    edi,[ecx-0x46]
  40fc29:	ja     0x40fbe4
  40fc2b:	mov    eax,0x9a55df88
  40fc30:	scas   eax,DWORD PTR es:[edi]
  40fc31:	xchg   esi,eax
  40fc32:	in     al,dx
  40fc33:	arpl   WORD PTR [esi],cx
  40fc35:	push   edx
  40fc36:	xchg   ebp,eax
  40fc37:	or     DWORD PTR [eax+0x450cdf97],0x3b
  40fc3e:	loop   0x40fc1c
  40fc40:	sbb    eax,DWORD PTR [edi-0x50d03009]
  40fc46:	push   ds
  40fc47:	push   edi
  40fc48:	cmp    dl,BYTE PTR [ebp-0x3e4f5cbf]
  40fc4e:	(bad)  
  40fc4f:	out    dx,al
  40fc50:	xchg   BYTE PTR [ebx],bh
  40fc52:	gs ins DWORD PTR es:[edi],dx
  40fc54:	ret    0x8eb
  40fc57:	adc    BYTE PTR [eax-0x27d4a4b6],dl
  40fc5d:	jl     0x40fc77
  40fc5f:	(bad)
  40fc62:	imul   ecx,DWORD PTR [edi-0x31],0x35
  40fc66:	call   0x330b:0xee1d91ca
  40fc6d:	pop    ebx
  40fc6e:	adc    dh,BYTE PTR [ebx]
  40fc70:	aas    
  40fc71:	call   FWORD PTR [ebx]
  40fc73:	adc    al,ah
  40fc75:	mov    eax,0xa01a27f9
  40fc7a:	add    eax,0x4fbbb69c
  40fc7f:	cmp    al,0x62
  40fc81:	icebp  
  40fc82:	fdiv   QWORD PTR [esp+ebx*4-0x3a]
  40fc86:	push   es
  40fc87:	enter  0xa8b1,0xe5
  40fc8b:	pop    edi
  40fc8c:	push   edx
  40fc8d:	mov    eax,ds:0x37ea26b6
  40fc92:	jmp    0xc545:0x5cc6c4c2
  40fc99:	sub    BYTE PTR [edi-0x2f],ch
  40fc9c:	lods   al,BYTE PTR ds:[esi]
  40fc9d:	ins    DWORD PTR es:[edi],dx
  40fc9e:	loopne 0x40fc82
  40fca0:	inc    eax
  40fca1:	pop    ebp
  40fca2:	or     BYTE PTR ds:0x22e921a2,dl
  40fca8:	ret    0x16a8
  40fcab:	out    0xc2,eax
  40fcad:	and    eax,0xcb912e0c
  40fcb2:	aad    0x9a
  40fcb4:	or     eax,DWORD PTR [eax-0x4e90aa15]
  40fcba:	fnstcw WORD PTR [esi]
  40fcbc:	sub    ch,dl
  40fcbe:	jp     0x40fc76
  40fcc0:	cmp    al,0x4f
  40fcc2:	leave  
  40fcc3:	mov    bh,0xf8
  40fcc5:	loop   0x40fd3f
  40fcc7:	xor    cl,bh
  40fcc9:	xor    eax,0xf69a5572
  40fcce:	mov    eax,0xf30205de
  40fcd3:	mov    ebx,0x848ea07f
  40fcd8:	inc    ecx
  40fcd9:	inc    esi
  40fcda:	sbb    ebx,ebp
  40fcdc:	adc    eax,0x206456dc
  40fce1:	fst    DWORD PTR [ebp+0x4681f94a]
  40fce7:	bound  ebx,QWORD PTR [ecx+0x4f]
  40fcea:	inc    ebp
  40fceb:	sar    DWORD PTR [ebp-0x57],cl
  40fcee:	fsubr  DWORD PTR [ecx-0x6b]
  40fcf1:	xor    al,0x2
  40fcf3:	gs out 0x2c,al
  40fcf6:	adc    ebp,DWORD PTR [esi+0x1c754d04]
  40fcfc:	dec    ebp
  40fcfd:	lea    eax,[ebx-0x12]
  40fd00:	push   esi
  40fd01:	aas    
  40fd02:	pop    esp
  40fd03:	pop    ds
  40fd04:	add    BYTE PTR [eax+0xe],0xbd
  40fd08:	leave  
  40fd09:	push   edx
  40fd0a:	xchg   ecx,eax
  40fd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd0c:	(bad)  
  40fd0d:	bound  edi,QWORD PTR [ebx+esi*4-0x32]
  40fd11:	test   eax,0x1270725d
  40fd16:	mov    ebp,0xffc2bf1a
  40fd1b:	fdivr  QWORD PTR [esi+ebx*4+0x21]
  40fd1f:	out    dx,eax
  40fd20:	pop    ss
  40fd21:	pop    ss
  40fd22:	call   0xcc86bdb6
  40fd27:	push   edx
  40fd28:	push   esp
  40fd29:	pop    ecx
  40fd2a:	idiv   ebp
  40fd2c:	xor    al,BYTE PTR [esi]
  40fd2e:	mov    DWORD PTR [edx-0x154e6bad],0xf6b61d2d
  40fd38:	or     ebp,edx
  40fd3a:	lahf   
  40fd3b:	jns    0x40fda5
  40fd3d:	or     al,0x4c
  40fd3f:	ds inc ebp
  40fd41:	in     eax,0xe4
  40fd43:	mov    ds,WORD PTR ds:0x49bd7070
  40fd49:	or     al,0x11
  40fd4b:	mov    WORD PTR [edx-0x50],fs
  40fd4e:	dec    edx
  40fd4f:	sbb    eax,0xa09efe1e
  40fd54:	addr16 (bad) 
  40fd56:	pop    ecx
  40fd57:	out    dx,eax
  40fd58:	(bad)  
  40fd59:	test   DWORD PTR [ebx+0x2854d7b5],ebx
  40fd5f:	popf   
  40fd60:	pop    ecx
  40fd61:	cmp    cl,BYTE PTR [eax-0x2f]
  40fd64:	mov    ds:0xc5616b4d,al
  40fd69:	mov    ebp,0x6faf8459
  40fd6e:	dec    eax
  40fd6f:	icebp  
  40fd70:	scas   eax,DWORD PTR es:[edi]
  40fd71:	pop    edi
  40fd72:	inc    ecx
  40fd73:	cld    
  40fd74:	cdq    
  40fd75:	xchg   esi,eax
  40fd76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd77:	mov    ch,0x1d
  40fd79:	mov    edx,0x24820a9
  40fd7e:	xchg   esp,eax
  40fd7f:	arpl   WORD PTR [esi-0x6f67715d],bp
  40fd85:	add    DWORD PTR [edi],ebx
  40fd87:	sahf   
  40fd88:	popa   
  40fd89:	add    DWORD PTR [edi+0x6f],esi
  40fd8c:	inc    esi
  40fd8d:	push   cs
  40fd8e:	pop    edi
  40fd8f:	retf   0x108a
  40fd92:	inc    edi
  40fd93:	add    al,0x8a
  40fd95:	jmp    0x2851392a
  40fd9a:	enter  0x6058,0x42
  40fd9e:	sbb    al,0x7c
  40fda0:	mov    dl,0x45
  40fda2:	hlt    
  40fda3:	stc    
  40fda4:	push   ebx
  40fda5:	rol    dl,cl
  40fda7:	mov    bh,BYTE PTR ds:0xd95ad024
  40fdad:	popf   
  40fdae:	clc    
  40fdaf:	mov    edx,0xfeeaee1c
  40fdb4:	add    BYTE PTR [edi],dl
  40fdb6:	pushf  
  40fdb7:	retf   0xb015
  40fdba:	jmp    0x40fe2b
  40fdbc:	pop    esp
  40fdbd:	xor    BYTE PTR [ecx-0x469edfdf],cl
  40fdc3:	clc    
  40fdc4:	mov    bh,bh
  40fdc6:	rcr    BYTE PTR [edi+0x68a56399],1
  40fdcc:	inc    ecx
  40fdcd:	and    BYTE PTR [esi-0x2a],ah
  40fdd0:	sub    eax,0xc51cb551
  40fdd5:	jle    0x40fdce
  40fdd7:	cmp    ebp,edx
  40fdd9:	test   DWORD PTR [esi+0x686387fa],edi
  40fddf:	sbb    BYTE PTR [esi+eiz*4+0x6b427823],bh
  40fde6:	into   
  40fde7:	or     BYTE PTR [esi],al
  40fde9:	sub    eax,DWORD PTR [esi-0x32c67782]
  40fdef:	sbb    ecx,edx
  40fdf1:	sub    eax,0x2cc04b67
  40fdf6:	add    eax,0x99bdffcf
  40fdfb:	jge    0x40fe0e
  40fdfd:	xchg   ebp,eax
  40fdfe:	add    esp,DWORD PTR [edx-0x44ac7912]
  40fe04:	sbb    al,0x58
  40fe06:	push   esp
  40fe07:	xor    DWORD PTR [edi+0x71],0xcf067ee1
  40fe0e:	out    0x4,al
  40fe10:	retf   
  40fe11:	scas   al,BYTE PTR es:[edi]
  40fe12:	and    ah,BYTE PTR [esi+0x4ac017a8]
  40fe18:	imul   DWORD PTR [edx]
  40fe1a:	jecxz  0x40fe72
  40fe1c:	mov    ch,0xa
  40fe1e:	mov    cl,0x58
  40fe20:	ss sbb al,0x2e
  40fe23:	sti    
  40fe24:	jne    0x40fe2f
  40fe26:	jb     0x40fe08
  40fe28:	mov    ebx,0xba1dcba0
  40fe2d:	adc    ecx,edx
  40fe2f:	or     BYTE PTR [ebx-0x2bb566e4],ah
  40fe35:	pusha  
  40fe36:	push   ss
  40fe37:	adc    esi,ebp
  40fe39:	mov    ebx,0x9c2997ec
  40fe3e:	inc    DWORD PTR [edx+0x32]
  40fe41:	gs xchg esi,eax
  40fe43:	sar    ch,cl
  40fe45:	in     eax,dx
  40fe46:	push   eax
  40fe47:	xor    DWORD PTR [edi-0x1d0afc56],eax
  40fe4d:	pop    ebx
  40fe4e:	push   ds
  40fe4f:	mov    eax,ds:0x8c78805
  40fe54:	int3   
  40fe55:	scas   eax,DWORD PTR es:[edi]
  40fe56:	sbb    eax,0xd0efce83
  40fe5b:	adc    al,0x64
  40fe5d:	adc    dl,bh
  40fe5f:	jno    0x40feb1
  40fe61:	sbb    BYTE PTR [edx-0x78],dl
  40fe64:	lods   eax,DWORD PTR ds:[esi]
  40fe65:	push   0x4eefa4e8
  40fe6a:	fwait
  40fe6b:	repz jmp 0x40fe85
  40fe6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe6f:	(bad)
  40fe72:	xchg   ecx,eax
  40fe73:	push   eax
  40fe74:	inc    ecx
  40fe75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe76:	push   es
  40fe77:	pop    esi
  40fe78:	repz push DWORD PTR [esi+0x596554ec]
  40fe7f:	in     al,dx
  40fe80:	push   edi
  40fe81:	lea    ebx,[ebx]
  40fe83:	fs (bad) 
  40fe85:	aad    0x73
  40fe87:	mov    ebp,ebx
  40fe89:	sub    al,BYTE PTR [ebx-0x40186d5b]
  40fe8f:	mov    cs,WORD PTR [edi+0x31]
  40fe92:	in     al,dx
  40fe93:	cmp    al,0xe7
  40fe95:	test   eax,0xbd5402e2
  40fe9a:	test   al,0xc3
  40fe9c:	cmp    edi,DWORD PTR [esp+ecx*8]
  40fe9f:	jo     0x40fe69
  40fea1:	or     ebp,DWORD PTR [eax+0xc]
  40fea4:	stos   DWORD PTR es:[edi],eax
  40fea5:	cmp    cl,dh
  40fea7:	loopne 0x40ff02
  40fea9:	into   
  40feaa:	hlt    
  40feab:	in     al,0x42
  40fead:	shr    BYTE PTR [edx+0x71],0x85
  40feb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb2:	mov    ds,WORD PTR [edi+0x7b]
  40feb5:	inc    esi
  40feb6:	stc    
  40feb7:	push   esp
  40feb8:	pop    edx
  40feb9:	pop    ss
  40feba:	in     eax,0x1b
  40febc:	lahf   
  40febd:	push   ds
  40febe:	sbb    edi,DWORD PTR [edx]
  40fec0:	iret   
  40fec1:	cmp    al,0xaf
  40fec3:	hlt    
  40fec4:	and    DWORD PTR [eax],eax
  40fec6:	popa   
  40fec7:	test   BYTE PTR [ebp+0x5932b9d4],0x4c
  40fece:	rcl    BYTE PTR [ebx-0x6de4158a],0x7c
  40fed5:	xchg   edx,eax
  40fed6:	jns    0x40fef0
  40fed8:	fist   WORD PTR [eax-0x5a]
  40fedb:	in     al,dx
  40fedc:	fbstp  TBYTE PTR [ebx]
  40fede:	pop    edx
  40fedf:	nop
  40fee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee1:	mov    al,0xb3
  40fee3:	ret    0x11d8
  40fee6:	sbb    DWORD PTR [edx-0x56],edx
  40fee9:	push   es
  40feea:	iret   
  40feeb:	nop
  40feec:	jle    0x40fe71
  40feee:	push   cs
  40feef:	aam    0x23
  40fef1:	(bad)  
  40fef2:	mov    bh,BYTE PTR [edi]
  40fef4:	dec    edx
  40fef5:	into   
  40fef6:	hlt    
  40fef7:	add    al,0xd
  40fef9:	out    0xe4,eax
  40fefb:	mov    ebx,0xee251ab8
  40ff00:	pop    es
  40ff01:	repz mov ebp,0xe9c82e37
  40ff07:	xchg   esi,eax
  40ff08:	gs ja  0x40fec1
  40ff0b:	inc    esi
  40ff0c:	scas   al,BYTE PTR es:[edi]
  40ff0d:	rol    BYTE PTR [ebx],0xc5
  40ff10:	fucomi st,st(4)
  40ff12:	dec    esp
  40ff13:	mov    dl,0xf3
  40ff15:	dec    edi
  40ff16:	mov    dh,0xc7
  40ff18:	jns    0x40ff38
  40ff1a:	jb     0x40ff33
  40ff1c:	inc    edx
  40ff1d:	sub    dl,0x72
  40ff20:	arpl   WORD PTR [ecx-0x4d08e9dc],bp
  40ff26:	mov    edx,0x76b93b1a
  40ff2b:	push   ss
  40ff2c:	bound  eax,QWORD PTR [esp+ebx*1]
  40ff2f:	out    dx,al
  40ff30:	adc    BYTE PTR [ebx+0x5b66b759],bh
  40ff36:	int    0x6
  40ff38:	ds jae 0x40ff26
  40ff3b:	mov    eax,ds:0x80cdbf47
  40ff40:	push   ebx
  40ff41:	cld    
  40ff42:	add    al,0xba
  40ff44:	loope  0x40ff72
  40ff46:	aaa    
  40ff47:	sub    ah,BYTE PTR [eax-0x127290e7]
  40ff4d:	jns    0x40ff4e
  40ff4f:	sub    al,0xda
  40ff51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff52:	jb     0x40ff6e
  40ff54:	xchg   edi,eax
  40ff55:	out    dx,eax
  40ff56:	lea    edi,ds:0xff93491e
  40ff5c:	test   BYTE PTR cs:[edi],ch
  40ff5f:	xor    dh,ah
  40ff61:	neg    BYTE PTR [eax+edi*1-0x15575081]
  40ff68:	mov    ds:0x298a656e,eax
  40ff6d:	and    BYTE PTR [ecx-0x72],cl
  40ff70:	(bad)  
  40ff71:	xlat   BYTE PTR ds:[ebx]
  40ff72:	fsub   QWORD PTR [edi+0x3dc88145]
  40ff78:	adc    ecx,DWORD PTR [ecx]
  40ff7a:	sti    
  40ff7b:	addr16 push 0x3d20697d
  40ff81:	xor    bl,al
  40ff83:	repnz call 0x29d3:0xe7ba47a0
  40ff8b:	push   ds
  40ff8c:	mov    eax,ds:0x795dbf2f
  40ff91:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40ff93:	pop    eax
  40ff94:	mov    eax,ds:0xe016b4c4
  40ff99:	sub    eax,0xeb4efd04
  40ff9e:	in     eax,0x4e
  40ffa0:	inc    ebp
  40ffa1:	add    dl,0x60
  40ffa4:	pop    esi
  40ffa5:	push   edi
  40ffa6:	xchg   esp,eax
  40ffa7:	cli    
  40ffa8:	in     eax,0xf5
  40ffaa:	test   al,0xba
  40ffac:	out    0x81,al
  40ffae:	add    dl,BYTE PTR [edi+0x2f]
  40ffb1:	fist   WORD PTR ds:0x456e982e
  40ffb7:	(bad)  
  40ffb9:	les    ebp,FWORD PTR [edx+0x385ce481]
  40ffbf:	and    al,0x95
  40ffc1:	mov    eax,0xb42c15bc
  40ffc6:	and    eax,0xbd994a19
  40ffcb:	retf   0xa6f8
  40ffce:	mov    ah,0x10
  40ffd0:	adc    eax,0xbd8c5690
  40ffd5:	mul    DWORD PTR [edi+edi*1-0x39fe0ba3]
  40ffdc:	out    dx,eax
  40ffdd:	mov    ds,WORD PTR [eax]
  40ffdf:	in     eax,dx
  40ffe0:	dec    esi
  40ffe1:	push   0xffffffb3
  40ffe3:	push   edx
  40ffe4:	inc    esp
  40ffe5:	aas    
  40ffe6:	pop    ss
  40ffe7:	fxch   st(5)
  40ffe9:	xchg   esi,eax
  40ffea:	(bad)  
  40ffeb:	sub    al,0x9
  40ffed:	or     al,0x7e
  40ffef:	outs   dx,BYTE PTR ds:[esi]
  40fff0:	mov    ebp,0xabd7a690
  40fff5:	mov    ecx,DWORD PTR [ebx-0x319d717d]
  40fffb:	ins    BYTE PTR es:[edi],dx
  40fffc:	fidiv  WORD PTR [esi+esi*4-0x30]
  410000:	pop    ebp
  410001:	jbe    0x40ffb2
  410003:	les    ebp,FWORD PTR [ebp-0x1a8fb9c]
  410009:	in     al,0x83
  41000b:	xchg   esi,eax
  41000c:	stc    
  41000d:	shl    BYTE PTR [edx-0x35],cl
  410010:	(bad)  
  410011:	push   eax
  410013:	outs   dx,DWORD PTR ds:[esi]
  410014:	dec    edx
  410015:	fist   DWORD PTR [edx]
  410017:	test   eax,0x9d0713f7
  41001c:	adc    BYTE PTR [ebx+0x158ff0f6],dl
  410022:	mov    DWORD PTR [ebx+0x1c],edi
  410025:	es pop ds
  410027:	mov    ds:0xa2a99321,eax
  41002c:	mov    dl,0x57
  41002e:	add    DWORD PTR [esi-0x23],0x255e4d01
  410035:	call   0xb603:0xdd91c1ec
  41003c:	xchg   edi,eax
  41003d:	xor    ebp,DWORD PTR [eax+0x303b556f]
  410043:	mov    al,0x94
  410045:	and    BYTE PTR [ebx+edx*8+0x57],0xd4
  41004a:	dec    eax
  41004b:	mov    bl,0x52
  41004d:	push   es
  41004e:	pop    ebp
  41004f:	push   es
  410050:	test   dl,ch
  410052:	xchg   ebx,eax
  410053:	jbe    0x4100a4
  410055:	lods   eax,DWORD PTR ds:[esi]
  410056:	pop    edi
  410057:	pop    ss
  410058:	cwde   
  410059:	mov    WORD PTR [ebx],cs
  41005b:	cmp    al,0xf7
  41005d:	ret    0x9963
  410060:	sub    BYTE PTR [esi],0xe1
  410063:	and    al,bl
  410065:	inc    esi
  410066:	cli    
  410067:	inc    ebp
  410068:	jns    0x40fff4
  41006a:	ret    
  41006b:	or     esp,DWORD PTR ds:0x47778fac
  410071:	push   ds
  410072:	add    ecx,DWORD PTR [ebx-0x48]
  410075:	dec    eax
  410076:	cld    
  410077:	sar    edx,1
  410079:	cli    
  41007a:	rol    bl,1
  41007c:	lods   al,BYTE PTR ds:[esi]
  41007d:	mov    esi,0x2b5258bf
  410082:	out    dx,al
  410083:	repz sti 
  410085:	dec    ecx
  410086:	pop    esi
  410087:	inc    ebx
  410088:	jmp    0x833b:0xe5519163
  41008f:	das    
  410090:	aaa    
  410091:	cmp    BYTE PTR [edx-0x79174d9c],cl
  410097:	cs in  al,0xbe
  41009a:	fisub  WORD PTR [ecx-0x4]
  41009d:	fstp   DWORD PTR [edi+eiz*1+0x9]
  4100a1:	clc    
  4100a2:	sub    ah,al
  4100a4:	push   0x74a4e24
  4100a9:	mov    ch,0xa6
  4100ab:	(bad)  
  4100ac:	hlt    
  4100ad:	fisub  DWORD PTR [edi-0x5c948a7]
  4100b3:	clc    
  4100b4:	cmp    al,0x67
  4100b6:	xchg   edx,eax
  4100b7:	mov    BYTE PTR [eax],al
  4100b9:	arpl   WORD PTR [ecx],cx
  4100bb:	push   ds
  4100bc:	movups XMMWORD PTR [ebx+ebx*1-0x6d30a24d],xmm7
  4100c4:	inc    esp
  4100c5:	loop   0x410069
  4100c7:	push   edi
  4100c8:	jmp    0x2eaf:0x8c34a76
  4100cf:	push   ds
  4100d0:	xlat   BYTE PTR ds:[ebx]
  4100d1:	out    0x3d,al
  4100d3:	jg     0x41009f
  4100d5:	pop    ebx
  4100d6:	push   ebx
  4100d7:	ficom  DWORD PTR [esi]
  4100d9:	pop    edx
  4100da:	mov    cs,WORD PTR [edi]
  4100dc:	gs xchg esi,eax
  4100de:	inc    ecx
  4100df:	adc    BYTE PTR [ebp+0x6314631f],0x78
  4100e6:	inc    edx
  4100e7:	nop
  4100e8:	adc    BYTE PTR ds:0x37fbea02,0xb
  4100ef:	push   esi
  4100f0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4100f2:	stos   DWORD PTR es:[edi],eax
  4100f3:	push   ecx
  4100f4:	into   
  4100f5:	scas   eax,DWORD PTR es:[edi]
  4100f6:	push   ebp
  4100f7:	ja     0x410104
  4100f9:	stos   BYTE PTR es:[edi],al
  4100fa:	out    0xb2,al
  4100fc:	popf   
  4100fd:	popf   
  4100fe:	sahf   
  4100ff:	daa    
  410100:	push   ebp
  410101:	sub    al,0x1b
  410103:	inc    esp
  410104:	inc    dl
  410106:	aad    0x57
  410108:	jo     0x41012a
  41010a:	ins    BYTE PTR es:[edi],dx
  41010b:	mov    es,WORD PTR [edi-0x7e]
  41010e:	or     edx,ecx
  410110:	hlt    
  410111:	dec    ebx
  410112:	cmp    eax,0x833445a2
  410117:	aad    0x9d
  410119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41011a:	loop   0x4100fe
  41011c:	xor    DWORD PTR [esi],0x6f07812
  410122:	das    
  410123:	jle    0x410147
  410125:	ror    BYTE PTR [ecx],1
  410127:	mov    dl,0x3d
  410129:	add    DWORD PTR fs:[ebx+0x4f7f572b],edi
  410130:	stos   DWORD PTR es:[edi],eax
  410131:	sub    DWORD PTR ds:0x929bef5b,ebp
  410137:	nop
  410138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410139:	or     DWORD PTR [edx],ebp
  41013b:	and    DWORD PTR [esp+ecx*1-0xe],ebx
  41013f:	int    0x9a
  410141:	retf   
  410142:	cdq    
  410143:	sub    eax,0x7d7540d7
  410148:	xchg   esp,eax
  410149:	sbb    dh,dl
  41014b:	sub    eax,0xc0d8acfa
  410150:	mov    dh,0xde
  410152:	ret    0xc5bd
  410155:	fsub   st,st(4)
  410157:	in     al,dx
  410158:	push   cs
  410159:	sar    DWORD PTR [eax+edx*1],cl
  41015c:	mov    ebx,0x3ef3ea9a
  410161:	jns    0x4101a6
  410163:	sbb    DWORD PTR [ecx-0x3a9db411],0xffffff83
  41016a:	fs cdq 
  41016c:	xchg   edx,eax
  41016d:	adc    eax,0xcd86f13
  410172:	jp     0x4101df
  410174:	pop    ss
  410175:	int    0xfc
  410177:	mov    esi,0x834c4fc1
  41017c:	xchg   edx,eax
  41017d:	inc    esi
  41017e:	xchg   edi,eax
  41017f:	xor    al,0x9c
  410181:	imul   esp,DWORD PTR [ecx+0x61],0xffffffd8
  410185:	xchg   ecx,eax
  410186:	cld    
  410187:	lahf   
  410188:	add    al,0x33
  41018a:	mov    al,0x27
  41018c:	mov    dl,0xbf
  41018e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018f:	aam    0x1c
  410191:	add    eax,0xc6740989
  410196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410197:	mov    ah,0x20
  410199:	fsubr  DWORD PTR [edi-0x6d657db8]
  41019f:	fild   WORD PTR [eax+0x6e]
  4101a2:	or     al,0x2b
  4101a4:	and    eax,0x515ce184
  4101a9:	mov    BYTE PTR [edi-0x52],ch
  4101ac:	xchg   BYTE PTR [ebx+0x2d88fcc4],ah
  4101b2:	fild   WORD PTR [ebx]
  4101b4:	add    eax,0x18a78ec5
  4101b9:	fimul  WORD PTR [ebp-0xe]
  4101bc:	clc    
  4101bd:	and    cl,bh
  4101bf:	mov    ch,0x9a
  4101c1:	cld    
  4101c2:	xor    BYTE PTR [esi],ah
  4101c4:	sbb    eax,0xcc160081
  4101c9:	lds    esp,FWORD PTR [ebp-0x4ad9913c]
  4101cf:	int    0xc9
  4101d1:	out    0x8c,eax
  4101d3:	and    eax,0xcd10196a
  4101d8:	or     bh,dh
  4101da:	(bad)  
  4101db:	or     DWORD PTR [edi-0x38e16167],ebx
  4101e1:	mov    esp,DWORD PTR ds:0xacbf95df
  4101e7:	inc    edx
  4101e8:	inc    edx
  4101e9:	ret    
  4101ea:	sar    BYTE PTR [ebp-0x19ea1fc1],cl
  4101f0:	fimul  DWORD PTR [edi+0x41]
  4101f3:	mov    eax,ds:0xcf375d62
  4101f8:	aaa    
  4101f9:	push   cs
  4101fa:	and    eax,0x6b25f141
  4101ff:	cdq    
  410200:	pop    esp
  410201:	aas    
  410202:	imul   edx,DWORD PTR ds:0x2e43d1a,0x46a1e759
  41020c:	cmp    al,0xb3
  41020e:	dec    esp
  41020f:	loope  0x4101b7
  410211:	dec    esp
  410212:	outs   dx,DWORD PTR ds:[esi]
  410213:	ins    DWORD PTR es:[edi],dx
  410214:	and    edx,DWORD PTR [edi-0x1d7ab133]
  41021a:	fisubr WORD PTR [ecx+0x5b1f64d6]
  410220:	xor    eax,0xa9107535
  410225:	pop    ss
  410226:	mov    ch,0x4b
  410228:	xchg   DWORD PTR [edx+0x5feb1e49],esi
  41022e:	rcr    DWORD PTR es:[eax],1
  410231:	mov    bl,0x36
  410233:	stos   BYTE PTR es:[edi],al
  410234:	call   0x1588:0x42bcc5ea
  41023b:	loope  0x41020a
  41023d:	aaa    
  41023e:	dec    esi
  41023f:	fnstenv [eax+0x26c7b3fd]
  410245:	leave  
  410246:	nop
  410247:	cmp    ah,BYTE PTR [ebx]
  410249:	mov    ch,0x72
  41024b:	lods   eax,DWORD PTR ds:[esi]
  41024c:	push   edx
  41024d:	mov    al,ds:0x4f697cb0
  410252:	(bad)  
  410253:	imul   edi,DWORD PTR [ebx-0x2afe6b16],0x6c
  41025a:	push   ss
  41025b:	repz repz fdivr DWORD PTR ds:0xadb26bb5
  410263:	pop    es
  410264:	mov    eax,ds:0xdc912164
  410269:	add    BYTE PTR [ecx-0x75c7d089],0xa
  410270:	scas   al,BYTE PTR es:[edi]
  410271:	and    BYTE PTR [esi+0x23b760ad],dh
  410277:	dec    edi
  410278:	mov    ebx,0xa596ca3b
  41027d:	int3   
  41027e:	mov    BYTE PTR [ebx+eiz*1],bl
  410281:	retf   0x103
  410284:	shr    DWORD PTR [eax+0x41],0xd9
  410288:	leave  
  410289:	xor    eax,0x6f427a7e
  41028e:	icebp  
  41028f:	mov    DWORD PTR [ecx+0x44cc02ff],eax
  410295:	mov    ds:0xd468c4b5,al
  41029a:	push   eax
  41029b:	ins    DWORD PTR es:[edi],dx
  41029c:	sti    
  41029d:	popa   
  41029e:	sbb    dl,ch
  4102a0:	out    0xe2,al
  4102a2:	sub    ch,BYTE PTR [esi+0xc733d8c]
  4102a8:	fcom   st(7)
  4102aa:	mov    dl,dh
  4102ac:	lods   al,BYTE PTR ds:[esi]
  4102ad:	mov    cl,0x4b
  4102af:	and    ah,al
  4102b1:	ret    0x400d
  4102b4:	fwait
  4102b5:	popa   
  4102b6:	sub    ebp,DWORD PTR [ebx]
  4102b8:	into   
  4102b9:	dec    ebx
  4102ba:	cmc    
  4102bb:	push   es
  4102bc:	or     eax,0xaa309282
  4102c1:	or     al,bl
  4102c3:	cli    
  4102c4:	or     BYTE PTR [ecx-0x3c0852a],al
  4102ca:	outs   dx,BYTE PTR ds:[esi]
  4102cb:	mov    ch,0x37
  4102cd:	add    edi,DWORD PTR [ebp-0x17]
  4102d0:	rcr    BYTE PTR [esi],0xe1
  4102d3:	ret    
  4102d4:	mov    edi,eax
  4102d6:	push   edx
  4102d7:	pusha  
  4102d8:	push   ebx
  4102d9:	stc    
  4102da:	jbe    0x410320
  4102dc:	mov    esp,0xc9644db7
  4102e1:	inc    eax
  4102e2:	lods   eax,DWORD PTR ds:[esi]
  4102e3:	shr    BYTE PTR [edi-0x8],cl
  4102e6:	xchg   BYTE PTR [edi],bh
  4102e8:	adc    DWORD PTR [esi-0x1d57a647],esi
  4102ee:	add    eax,0x6fae75a9
  4102f3:	jg     0x4102df
  4102f5:	xor    ebx,edi
  4102f7:	stos   DWORD PTR es:[edi],eax
  4102f8:	mov    cl,0xed
  4102fa:	mov    WORD PTR [ebp+0x4f25e912],ss
  410300:	ss push edi
  410302:	div    DWORD PTR [edx-0x73e61366]
  410308:	int3   
  410309:	loope  0x41031e
  41030b:	int3   
  41030c:	pop    esp
  41030d:	fisubr WORD PTR [ecx+ebp*8]
  410310:	cmp    eax,0x5a39223
  410315:	dec    BYTE PTR [edx-0x17]
  410318:	mov    bl,0x74
  41031a:	add    bh,al
  41031c:	adc    al,0xed
  41031e:	fsubr  st(5),st
  410320:	leave  
  410321:	cmp    bh,0x25
  410324:	mov    eax,0x8510188c
  410329:	mov    ebp,0x2a432f0f
  41032e:	or     BYTE PTR [ecx+edx*1+0x2e],ah
  410332:	popa   
  410333:	push   edx
  410334:	sbb    DWORD PTR [ebx+0x4c],edi
  410337:	pop    edi
  410338:	xchg   BYTE PTR ds:0xb8a834a5,al
  41033e:	and    al,0xb1
  410340:	mov    eax,ds:0xb568ef1c
  410345:	mov    cl,0x6b
  410347:	push   0x26
  410349:	jmp    0x2e03c62c
  41034e:	sbb    esp,DWORD PTR [eax+0x51]
  410351:	or     BYTE PTR [edi+0x10fbcc42],dh
  410357:	popa   
  410358:	xor    esi,DWORD PTR [edx]
  41035a:	xor    BYTE PTR [ecx],ch
  41035c:	add    BYTE PTR [ebx-0x3534b146],ah
  410362:	rcr    DWORD PTR [edx+0x9c76d6],0x57
  410369:	fwait
  41036a:	adc    eax,0x3056c7c0
  41036f:	dec    esp
  410370:	pop    esi
  410371:	test   al,0x5c
  410373:	sub    edx,DWORD PTR [ebx+0x564eeaea]
  410379:	mov    eax,0x2f1aeb79
  41037e:	push   ss
  41037f:	push   ebp
  410380:	cmp    al,0x9d
  410382:	cmp    bl,BYTE PTR [ecx]
  410384:	daa    
  410385:	call   0xe1b28d1c
  41038a:	pop    ebp
  41038b:	fucomi st,st(3)
  41038d:	dec    ebx
  41038e:	or     dl,BYTE PTR [ecx]
  410390:	pop    ecx
  410391:	nop
  410392:	loopne 0x410394
  410394:	xchg   cl,bh
  410396:	out    0xab,al
  410398:	int    0xde
  41039a:	int3   
  41039b:	aam    0x48
  41039d:	mov    al,ds:0xb3b8675f
  4103a2:	stos   DWORD PTR es:[edi],eax
  4103a3:	cmp    DWORD PTR [esi],ebx
  4103a5:	mov    ecx,esi
  4103a7:	clc    
  4103a8:	dec    eax
  4103a9:	fsubr  QWORD PTR [esi]
  4103ab:	in     eax,dx
  4103ac:	mov    eax,0x8a263b3c
  4103b1:	xchg   esp,eax
  4103b2:	lock and BYTE PTR [edi+ebx*2+0x184cecac],0xdf
  4103bb:	xchg   esp,eax
  4103bc:	xor    esp,DWORD PTR [ecx-0x34df7304]
  4103c2:	popf   
  4103c3:	outs   dx,DWORD PTR ds:[esi]
  4103c4:	inc    ebp
  4103c5:	cmp    al,BYTE PTR [esi]
  4103c7:	outs   dx,BYTE PTR ds:[esi]
  4103c8:	xchg   ecx,eax
  4103c9:	mov    ebp,0x86bf3096
  4103ce:	test   BYTE PTR [eax+ebx*8-0x5e],ah
  4103d2:	shl    DWORD PTR [edi],0xfa
  4103d5:	not    DWORD PTR [edx+edi*4+0x1636a9c3]
  4103dc:	sbb    eax,0xb4f5a593
  4103e1:	call   0xa9b6:0x6c138c04
  4103e8:	(bad)  
  4103e9:	adc    eax,esp
  4103eb:	push   edx
  4103ec:	add    DWORD PTR [edx+0x1f],ebp
  4103ef:	les    ebp,FWORD PTR [ebx]
  4103f1:	jp     0x410453
  4103f3:	test   eax,0xec91b784
  4103f8:	jmp    0x3c0a:0x5369458b
  4103ff:	push   ss
  410400:	mov    BYTE PTR [esi+eax*4+0x45],ch
  410404:	pop    ecx
  410405:	push   esi
  410406:	fiadd  WORD PTR [ebx+0x428ed101]
  41040c:	mov    al,0x81
  41040e:	jecxz  0x4103db
  410410:	and    BYTE PTR [ebx],ch
  410412:	stos   DWORD PTR es:[edi],eax
  410413:	inc    edi
  410414:	loope  0x4103f5
  410416:	jle    0x41043a
  410418:	cli    
  410419:	xor    edx,esp
  41041b:	push   ebp
  41041c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41041d:	cdq    
  41041e:	iret   
  41041f:	pushf  
  410420:	loopne 0x410491
  410422:	mov    ebp,0x675e0407
  410427:	jno    0x410445
  410429:	xchg   ebx,eax
  41042a:	mov    esp,0x30116b18
  41042f:	pop    ss
  410430:	xchg   ebp,eax
  410431:	push   0x7b
  410433:	js     0x410414
  410435:	fsub   DWORD PTR ds:0x9c9cffaf
  41043b:	mov    al,ds:0x984bbf0c
  410440:	inc    ebp
  410441:	pop    esp
  410442:	cmp    edx,esp
  410444:	sub    DWORD PTR [edi+0x6586fc8],0xf79eb1f4
  41044e:	jge    0x41040c
  410450:	test   DWORD PTR [esi-0x64f565],edx
  410456:	lock or BYTE PTR [ebp-0x62088a08],cl
  41045d:	or     bh,BYTE PTR [ebp+0x61]
  410460:	sub    ebp,eax
  410462:	jne    0x41043c
  410464:	mov    edi,0xf5977a83
  410469:	sahf   
  41046a:	sub    al,0xd8
  41046c:	enter  0x5386,0x5f
  410470:	stos   DWORD PTR es:[edi],eax
  410471:	outs   dx,DWORD PTR ds:[esi]
  410472:	and    dh,BYTE PTR [ebp+0x1d]
  410475:	out    dx,eax
  410476:	(bad)
  41047a:	xchg   edx,eax
  41047b:	dec    ebx
  41047c:	mov    ah,0x89
  41047e:	scas   al,BYTE PTR es:[edi]
  41047f:	stos   BYTE PTR es:[edi],al
  410480:	mov    cl,0x9d
  410482:	imul   ebp,DWORD PTR [ecx+0x2a6b5476],0x242f7a7
  41048c:	mov    bh,BYTE PTR [edi+0x68]
  41048f:	sub    DWORD PTR [ecx-0x24],edi
  410492:	pop    eax
  410493:	or     al,0x5f
  410495:	inc    ebx
  410496:	jb     0x4104b3
  410498:	jecxz  0x4104d6
  41049a:	sbb    DWORD PTR [esi-0x5a4e391b],eax
  4104a0:	inc    esp
  4104a1:	arpl   bx,dx
  4104a3:	fdiv   DWORD PTR [edi-0x6c]
  4104a6:	mov    dh,0x2a
  4104a8:	in     al,0xf7
  4104aa:	int3   
  4104ab:	pop    ebp
  4104ac:	lods   eax,DWORD PTR ds:[esi]
  4104ad:	ins    DWORD PTR es:[edi],dx
  4104ae:	jmp    0x410457
  4104b0:	ret    
  4104b1:	(bad)  
  4104b2:	ror    esp,cl
  4104b4:	aam    0x54
  4104b6:	test   al,0x9c
  4104b8:	and    ecx,esi
  4104ba:	dec    DWORD PTR [ecx]
  4104bc:	xchg   ebp,eax
  4104bd:	xor    DWORD PTR [edi+ebx*4],ebp
  4104c0:	(bad)  [ebp-0x53dcade9]
  4104c6:	or     edi,ebp
  4104c8:	ret    0xbdb0
  4104cb:	mov    dh,0x5c
  4104cd:	(bad)  
  4104cf:	ret    0x989
  4104d2:	test   DWORD PTR [eax],esp
  4104d4:	sub    dl,BYTE PTR [edi+edx*2]
  4104d7:	mov    ecx,0xd114a654
  4104dc:	popf   
  4104dd:	or     al,0x72
  4104df:	mov    bh,ch
  4104e1:	test   eax,0xebb605ac
  4104e6:	jl     0x4104ca
  4104e8:	sbb    BYTE PTR ds:0xdb884b21,dh
  4104ee:	imul   esi,DWORD PTR gs:[edi-0x6],0xe84c4384
  4104f6:	push   0xffffffa7
  4104f8:	and    al,0x2a
  4104fa:	push   edx
  4104fb:	adc    eax,0x5f4768e4
  410500:	pop    edi
  410501:	jle    0x4104c0
  410503:	xchg   BYTE PTR [ebp+0x35ddd3e7],bh
  410509:	mov    esp,DWORD PTR [edx+0x4e]
  41050c:	pop    edi
  41050d:	xor    ebp,ecx
  41050f:	cmp    BYTE PTR [edx+edx*1+0x16],ch
  410513:	sbb    al,0x82
  410515:	mov    ch,0x1e
  410517:	popa   
  410518:	push   eax
  410519:	icebp  
  41051a:	add    BYTE PTR ds:0xb21a87e1,dh
  410520:	aam    0x26
  410522:	xchg   DWORD PTR [ecx+0x81f4365],esi
  410528:	jge    0x410599
  41052a:	cmp    al,0x74
  41052c:	lahf   
  41052d:	jmp    0xe65d4bca
  410532:	mov    BYTE PTR [ebx-0x7e782cb2],0xa
  410539:	es jb  0x4104f4
  41053c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41053d:	rol    eax,cl
  41053f:	(bad)  
  410540:	clc    
  410541:	inc    ecx
  410542:	retf   0xb51d
  410545:	outs   dx,BYTE PTR ds:[esi]
  410546:	(bad)  
  410547:	iret   
  410548:	adc    BYTE PTR [ebx+0x507699d8],0x80
  41054f:	popa   
  410550:	xor    ebx,DWORD PTR [edx]
  410552:	mov    esi,0xbb7cc067
  410557:	jb     0x410522
  410559:	out    dx,al
  41055a:	cmp    DWORD PTR [edi+0x17396f32],ebp
  410560:	(bad)  
  410561:	xchg   DWORD PTR [esi-0xb],ebx
  410564:	push   ds
  410565:	clc    
  410566:	jb     0x410546
  410568:	je     0x4104ee
  41056a:	mov    ebp,0xf001060e
  41056f:	ins    DWORD PTR es:[edi],dx
  410570:	cdq    
  410571:	ins    BYTE PTR es:[edi],dx
  410572:	mov    ch,0x54
  410574:	inc    ecx
  410575:	adc    bl,BYTE PTR [edx+esi*2-0x49]
  410579:	jmp    FWORD PTR [edx-0x397c28ca]
  41057f:	fsub   DWORD PTR [edi-0x5e]
  410582:	sbb    ah,BYTE PTR [eax-0x64c2c17f]
  410588:	mov    dl,0x23
  41058a:	stos   BYTE PTR es:[edi],al
  41058b:	adc    dh,BYTE PTR [eax-0x58]
  41058e:	lea    edi,[ebp-0x379fb337]
  410594:	dec    ebp
  410595:	lods   eax,DWORD PTR ds:[esi]
  410596:	xchg   eax,eax
  410598:	xchg   edx,eax
  410599:	test   eax,0xb4c034d8
  41059e:	jae    0x4105b1
  4105a0:	loopne 0x410568
  4105a2:	aad    0x58
  4105a4:	mov    BYTE PTR [ebx-0x63],ch
  4105a7:	cmp    al,0x33
  4105a9:	(bad)  
  4105aa:	leave  
  4105ab:	shr    ah,cl
  4105ad:	jecxz  0x4105cd
  4105af:	jns    0x41054f
  4105b1:	mov    ecx,0x77283da
  4105b6:	je     0x410590
  4105b8:	sub    al,bh
  4105ba:	mov    WORD PTR [ebx],fs
  4105bc:	xor    ecx,0x8ff0e47d
  4105c2:	ins    BYTE PTR es:[edi],dx
  4105c3:	mov    ecx,0x14170deb
  4105c8:	cmp    eax,0xe1f517a7
  4105cd:	rol    ebx,1
  4105cf:	mov    DWORD PTR [edx+0x31],0xbec0239c
  4105d6:	push   0x22
  4105d8:	enter  0x7c89,0x85
  4105dc:	(bad)  
  4105dd:	aas    
  4105de:	sub    BYTE PTR [ebp+0x6c5dec38],cl
  4105e4:	dec    ecx
  4105e5:	mov    ecx,0x6e82b0ee
  4105ea:	cwde   
  4105eb:	mov    ecx,0xaa1e57
  4105f0:	aad    0x2b
  4105f2:	inc    edi
  4105f3:	ret    0x993f
  4105f6:	or     ah,0x7
  4105f9:	test   bl,al
  4105fb:	jmp    0x635:0x4b33fdf
  410602:	mov    bh,0x53
  410604:	mov    edx,0x77efdd2e
  410609:	(bad)  
  41060a:	jns    0x4105ef
  41060c:	mov    esi,0xfe41cbbf
  410611:	bound  esi,QWORD PTR [ecx+0x30]
  410614:	popa   
  410615:	ins    BYTE PTR es:[edi],dx
  410616:	push   0xffffff87
  410618:	call   FWORD PTR [eax]
  41061a:	iret   
  41061b:	jmp    0x410697
  41061d:	sbb    al,0xc2
  41061f:	adc    edi,DWORD PTR [eax-0x59122a6d]
  410625:	pop    ds
  410626:	jbe    0x4105cb
  410628:	adc    esi,edi
  41062a:	pop    esi
  41062b:	mov    esi,0x9bfab353
  410630:	leave  
  410631:	arpl   WORD PTR [eax-0x61],bx
  410634:	and    DWORD PTR [esi],ebx
  410636:	cs inc edx
  410638:	fnstsw WORD PTR [ecx-0x73]
  41063b:	js     0x4106a0
  41063d:	push   cs
  41063e:	xor    DWORD PTR [ecx+0x9],esi
  410641:	xlat   BYTE PTR ds:[ebx]
  410642:	aaa    
  410643:	dec    esp
  410644:	daa    
  410645:	pop    edx
  410646:	rol    ebx,1
  410648:	aaa    
  410649:	(bad)  
  41064a:	loop   0x4105f7
  41064c:	scas   al,BYTE PTR es:[edi]
  41064d:	nop
  41064e:	xchg   edi,eax
  41064f:	inc    edi
  410650:	leave  
  410651:	out    0x3c,al
  410653:	daa    
  410654:	dec    eax
  410655:	xchg   esi,eax
  410656:	fldcw  WORD PTR [esi-0xc]
  410659:	mov    ds:0xcacc65bb,al
  41065e:	or     al,0xaa
  410660:	sbb    ecx,ebx
  410662:	and    dh,ch
  410664:	cmp    dh,bh
  410666:	xor    DWORD PTR [esi],ebp
  410668:	ret    0x996
  41066b:	gs push edx
  41066d:	jns    0x410666
  41066f:	les    edi,FWORD PTR [edx+0x4ef97853]
  410675:	adc    BYTE PTR [edx+0x6a799e13],0x30
  41067c:	out    0x27,eax
  41067e:	jb     0x4106e4
  410680:	aad    0xc1
  410682:	outs   dx,DWORD PTR ds:[esi]
  410683:	push   ebp
  410684:	stos   DWORD PTR es:[edi],eax
  410685:	mov    cl,BYTE PTR [ecx]
  410687:	out    0x48,al
  410689:	fidivr WORD PTR [ebp-0x51]
  41068c:	mov    edi,0x78f8ba29
  410691:	aaa    
  410692:	push   0x8a815a51
  410697:	mov    esp,ss
  410699:	inc    ebp
  41069a:	rcr    edx,0x78
  41069d:	jle    0x410715
  41069f:	cmp    DWORD PTR [ebp+0x7f],eax
  4106a2:	dec    ebx
  4106a3:	enter  0x28a5,0xb
  4106a7:	inc    edx
  4106a8:	pop    ds
  4106a9:	popf   
  4106aa:	call   0xde45:0x545bdcf6
  4106b1:	(bad)  
  4106b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b3:	hlt    
  4106b4:	jmp    0x22ac46cc
  4106b9:	xchg   esi,eax
  4106ba:	xor    edi,eax
  4106bc:	push   eax
  4106bd:	jg     0x41066a
  4106bf:	popa   
  4106c0:	aaa    
  4106c1:	push   esi
  4106c2:	outs   dx,DWORD PTR ds:[esi]
  4106c3:	jbe    0x4106b9
  4106c5:	cmp    esp,ecx
  4106c7:	out    0x5a,eax
  4106c9:	mov    eax,0xec47bcf4
  4106ce:	or     DWORD PTR [edi],esp
  4106d0:	fnstcw WORD PTR [ebp-0x7]
  4106d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d4:	(bad)  
  4106d5:	sti    
  4106d6:	mov    edi,0xc7fd06e3
  4106db:	adc    edi,DWORD PTR [edi+0x197f8381]
  4106e1:	aam    0xb1
  4106e3:	jne    0x41072c
  4106e5:	mov    eax,ds:0x5756c85b
  4106ea:	mov    eax,ds:0xeb1346c
  4106ef:	and    BYTE PTR [eax-0x4c],bh
  4106f2:	pop    esp
  4106f3:	mov    bl,0xc
  4106f5:	bound  ebp,QWORD PTR [ebx+0x4db7be85]
  4106fb:	cmp    BYTE PTR [edx+0x78],0x34
  4106ff:	xor    al,0xeb
  410701:	jle    0x410743
  410703:	aas    
  410704:	fcmovnu st,st(7)
  410706:	retf   
  410707:	xor    al,0x82
  410709:	inc    esi
  41070a:	push   es
  41070b:	call   0xe6200423
  410710:	and    bl,BYTE PTR [eax+0x4a476ad8]
  410716:	daa    
  410717:	xchg   BYTE PTR [esi+0x60],bh
  41071a:	and    BYTE PTR [edi],dl
  41071c:	mov    ss,WORD PTR [esi]
  41071e:	jne    0x410720
  410720:	dec    eax
  410721:	pop    ds
  410722:	push   edi
  410723:	xchg   esi,edi
  410725:	aas    
  410726:	xor    ch,ch
  410728:	or     BYTE PTR [ebp-0x7de01ba4],bh
  41072e:	push   ds
  41072f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410730:	mov    al,0x54
  410732:	adc    ah,dh
  410734:	jmp    0x410756
  410736:	xor    edi,ecx
  410738:	(bad)  
  41073a:	es pop ebp
  41073c:	sbb    ch,BYTE PTR [esi]
  41073e:	cdq    
  41073f:	out    dx,eax
  410740:	dec    ebx
  410741:	mov    ds:0xe11ec260,eax
  410746:	enter  0x7b5b,0x3
  41074a:	cdq    
  41074b:	test   eax,0xa19038fb
  410750:	inc    edi
  410751:	mov    cl,0xc7
  410753:	inc    ebp
  410754:	leave  
  410755:	loopne 0x41072c
  410757:	push   edx
  410758:	jmp    0x3936:0xf416baa3
  41075f:	sti    
  410760:	sbb    bh,BYTE PTR [eax]
  410762:	mov    esp,0x429ed220
  410767:	rcl    BYTE PTR [edx+0x1b013e21],cl
  41076d:	adc    bl,dl
  41076f:	lods   eax,DWORD PTR ds:[esi]
  410770:	(bad)
  410775:	xchg   esp,eax
  410776:	adc    eax,0x9168f895
  41077b:	ss (bad) 
  41077e:	xchg   ecx,eax
  41077f:	(bad)  
  410780:	sbb    ebx,edi
  410782:	mov    dl,0x83
  410784:	xchg   edx,eax
  410785:	cmc    
  410786:	repz pop ebp
  410788:	(bad)  
  410789:	xor    eax,0xb0e83716
  41078e:	daa    
  41078f:	xchg   BYTE PTR [ebx+0x61],cl
  410792:	sbb    ch,dl
  410794:	cmp    ch,BYTE PTR [ecx+0x69]
  410797:	xlat   BYTE PTR ds:[ebx]
  410798:	imul   ebp,DWORD PTR [esi],0xea5f8495
  41079e:	(bad)  
  41079f:	aam    0x98
  4107a1:	mov    bh,0x3e
  4107a3:	cmp    al,0xf1
  4107a5:	addr16 inc eax
  4107a7:	out    0xe,al
  4107a9:	int3   
  4107aa:	cmp    bh,BYTE PTR [ecx]
  4107ac:	int3   
  4107ad:	push   edx
  4107ae:	pushf  
  4107af:	pop    ss
  4107b0:	or     ch,dh
  4107b2:	mov    bl,0x98
  4107b4:	mov    ebx,0x256b6dc3
  4107b9:	clc    
  4107ba:	jg     0x4107d9
  4107bc:	pop    eax
  4107bd:	out    0x9c,al
  4107bf:	loopne 0x410790
  4107c1:	(bad)  
  4107c3:	icebp  
  4107c4:	enter  0x745a,0x8e
  4107c8:	fstp   st(1)
  4107ca:	mov    esi,0xe43c6cc2
  4107cf:	inc    esp
  4107d0:	cmp    eax,0xc65f2e5c
  4107d5:	leave  
  4107d6:	sahf   
  4107d7:	jecxz  0x410844
  4107d9:	inc    esp
  4107da:	shl    DWORD PTR [eax-0x3348847c],0x20
  4107e1:	or     DWORD PTR [ecx+0x3e0a9851],eax
  4107e7:	fnstcw WORD PTR [edx]
  4107e9:	inc    eax
  4107ea:	or     BYTE PTR [eax+0x75],0x4e
  4107ee:	xor    bh,BYTE PTR [esi-0x40584fc6]
  4107f4:	div    DWORD PTR [edi+0x7d]
  4107f7:	sbb    ebp,esi
  4107f9:	adc    ebx,DWORD PTR [ebx]
  4107fb:	jbe    0x41082d
  4107fd:	mov    dl,0x39
  4107ff:	fwait
  410800:	fwait
  410801:	aad    0x98
  410803:	repnz repnz imul esi,DWORD PTR gs:[ecx],0x5d
  410809:	data16 adc cl,ch
  41080c:	lods   al,BYTE PTR ds:[esi]
  41080d:	stc    
  41080e:	jne    0x410853
  410810:	dec    eax
  410811:	xchg   ecx,eax
  410812:	jmp    0xf5c594bc
  410817:	push   edi
  410818:	dec    eax
  410819:	shr    DWORD PTR [ebp+0x4133a301],1
  41081f:	mov    dh,0xe
  410821:	pop    ecx
  410822:	add    esp,DWORD PTR [esi]
  410824:	iret   
  410825:	pop    es
  410826:	sbb    eax,DWORD PTR ds:0x40e6134e
  41082c:	mov    eax,ebp
  41082e:	push   ds
  41082f:	adc    eax,0xaedc2238
  410834:	adc    bl,BYTE PTR [ecx]
  410836:	(bad)  
  410838:	and    al,0x1f
  41083a:	xchg   ebp,eax
  41083b:	stos   BYTE PTR es:[edi],al
  41083c:	daa    
  41083d:	xchg   esp,eax
  41083e:	scas   al,BYTE PTR es:[edi]
  41083f:	inc    edi
  410840:	fistp  WORD PTR [ebx+0x17]
  410843:	daa    
  410844:	add    DWORD PTR [eax+0x15],esp
  410847:	sbb    cl,bh
  410849:	out    0xb8,eax
  41084b:	dec    edx
  41084c:	dec    ebp
  41084d:	loopne 0x4107ec
  41084f:	fbld   TBYTE PTR [ebp+edi*2+0x3a006cab]
  410856:	aas    
  410857:	inc    ebp
  410858:	addr16 leave 
  41085a:	aaa    
  41085b:	jecxz  0x4108b1
  41085d:	mov    ebx,0x9b33e3e2
  410862:	pusha  
  410863:	xchg   DWORD PTR [edi+edi*1-0x5e],edi
  410867:	jnp    0x41082e
  410869:	cmp    edi,DWORD PTR ds:0x9975e7c2
  41086f:	scas   al,BYTE PTR es:[edi]
  410870:	dec    esi
  410871:	xchg   DWORD PTR [ebx],esp
  410873:	imul   ecx,esi,0xffffffa7
  410876:	mov    cl,0x4a
  410878:	fld    QWORD PTR [eax+edx*4-0x73]
  41087c:	aam    0x5b
  41087e:	mov    eax,0xd92f543f
  410883:	rol    DWORD PTR [ecx+0x56b23703],1
  410889:	or     al,0x4e
  41088b:	mov    WORD PTR [eax-0x2c],fs
  41088e:	dec    eax
  41088f:	pusha  
  410890:	ret    
  410891:	fnstsw WORD PTR [edi-0x6]
  410894:	dec    esi
  410895:	or     DWORD PTR [esi+0x7f],0x9ceec8c3
  41089c:	stos   BYTE PTR es:[edi],al
  41089d:	rol    BYTE PTR [edx+0x31],cl
  4108a0:	sbb    al,0x23
  4108a2:	inc    edi
  4108a3:	dec    ecx
  4108a4:	(bad)  [edi+0x69]
  4108a7:	cwde   
  4108a8:	cwde   
  4108a9:	mov    eax,ds:0xa3b04c92
  4108ae:	loope  0x410894
  4108b0:	je     0x410906
  4108b2:	cmp    ah,al
  4108b4:	cwde   
  4108b5:	lods   eax,DWORD PTR ds:[esi]
  4108b6:	pusha  
  4108b7:	cmp    bl,BYTE PTR [ebx+0x19f82b57]
  4108bd:	dec    esp
  4108be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108bf:	mov    cl,BYTE PTR [edi]
  4108c1:	std    
  4108c2:	mov    al,ds:0x20aba612
  4108c7:	cwde   
  4108c8:	lds    eax,FWORD PTR [edx+0x18737d20]
  4108ce:	or     DWORD PTR gs:[ecx-0x1d99a622],edi
  4108d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d6:	pusha  
  4108d7:	sub    esi,ecx
  4108d9:	fdivr  st,st(4)
  4108db:	and    DWORD PTR [edi+ebp*4],0x42ef97f8
  4108e2:	push   esi
  4108e3:	outs   dx,BYTE PTR ds:[esi]
  4108e4:	xchg   BYTE PTR [edi+0x18112503],cl
  4108ea:	je     0x41088a
  4108ec:	xor    ah,bh
  4108ee:	lea    eax,[ecx]
  4108f0:	(bad)  
  4108f1:	fs xor eax,esp
  4108f4:	(bad)  
  4108f5:	jecxz  0x410972
  4108f7:	shl    DWORD PTR [esp+edx*8-0x7a215fca],1
  4108fe:	repnz test al,0x89
  410901:	pop    ecx
  410902:	les    esi,FWORD PTR [ebx+0x7e]
  410905:	pop    eax
  410906:	int    0xbb
  410908:	ins    BYTE PTR es:[di],dx
  41090a:	lahf   
  41090b:	hlt    
  41090c:	in     al,0x76
  41090e:	sub    eax,ebx
  410910:	push   0x13
  410912:	sbb    eax,0xb7afe41c
  410917:	add    ebx,DWORD PTR [edx-0x2d]
  41091a:	jmp    0x410926
  41091c:	cmp    BYTE PTR [eax-0x59],al
  41091f:	ja     0x410916
  410921:	jmp    0x410975
  410923:	sbb    ch,BYTE PTR [ecx+0x72]
  410926:	test   DWORD PTR [ecx+0xb0b39d2],edx
  41092c:	hlt    
  41092d:	mov    ecx,0xa60cad47
  410932:	xor    esi,ebx
  410934:	test   DWORD PTR [edx+0x1f],ebx
  410937:	pusha  
  410938:	rep stos DWORD PTR es:[edi],eax
  41093a:	ficomp WORD PTR [ecx-0x24]
  41093d:	scas   eax,DWORD PTR es:[edi]
  41093e:	aaa    
  41093f:	add    ch,bh
  410941:	jnp    0x410906
  410943:	ja     0x410990
  410945:	xchg   DWORD PTR [ebp+0x60],esp
  410948:	cmp    eax,0x8434512f
  41094d:	mov    esi,0xad919162
  410952:	mov    dh,0xc3
  410954:	xchg   esi,eax
  410955:	or     ah,BYTE PTR [ecx+ebx*1-0x79]
  410959:	(bad)  
  41095a:	icebp  
  41095b:	xchg   edx,eax
  41095c:	ss inc ebx
  41095e:	rcl    BYTE PTR ds:0xf63fe4d3,1
  410964:	sub    esp,DWORD PTR [edx]
  410966:	and    esi,esp
  410968:	fwait
  410969:	push   ss
  41096a:	div    cl
  41096c:	outs   dx,DWORD PTR ds:[esi]
  41096d:	jge    0x41098d
  41096f:	sbb    al,0x1
  410971:	inc    edi
  410972:	sar    ecx,cl
  410974:	and    DWORD PTR [eax],ebx
  410976:	imul   eax,DWORD PTR [ecx],0x8b6c2563
  41097c:	fnstenv [eax-0x65]
  41097f:	push   0xedd3fb88
  410984:	add    dl,BYTE PTR [edx]
  410986:	sar    DWORD PTR [ebp+0x40633b29],0xcd
  41098d:	lods   al,BYTE PTR ds:[esi]
  41098e:	mov    dh,0x44
  410990:	and    DWORD PTR [ebp-0x586e5cd],esp
  410996:	and    eax,0x7ee22749
  41099b:	(bad)  
  41099c:	call   0x96db:0xfd9e33f3
  4109a3:	out    dx,eax
  4109a4:	les    edi,FWORD PTR [ecx]
  4109a6:	lahf   
  4109a7:	cmp    al,0x2a
  4109a9:	sub    ch,ah
  4109ab:	ins    BYTE PTR es:[edi],dx
  4109ac:	pop    ebp
  4109ad:	in     eax,dx
  4109ae:	push   ecx
  4109af:	cmp    al,0x1
  4109b1:	sbb    ebx,eax
  4109b3:	stos   DWORD PTR es:[edi],eax
  4109b4:	es inc ebp
  4109b6:	out    0x18,al
  4109b8:	pop    ebx
  4109b9:	stc    
  4109ba:	scas   eax,DWORD PTR es:[edi]
  4109bb:	call   0xdfae:0x12a4b61b
  4109c2:	ins    DWORD PTR es:[edi],dx
  4109c3:	push   0xffffffe7
  4109c5:	cmp    eax,0xfd3ba743
  4109ca:	push   es
  4109cb:	pop    edi
  4109cc:	pop    esp
  4109cd:	aam    0xb3
  4109cf:	push   ecx
  4109d0:	aam    0x98
  4109d2:	fldenv ds:0x762cbaa5
  4109d8:	mov    BYTE PTR [esi+0x58ee0232],al
  4109de:	jecxz  0x4109b6
  4109e0:	jne    0x410968
  4109e2:	fidiv  WORD PTR [esi]
  4109e4:	push   esi
  4109e5:	in     eax,dx
  4109e6:	xchg   ebx,eax
  4109e7:	pop    dx
  4109e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ea:	push   DWORD PTR [ecx]
  4109ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ed:	push   edi
  4109ee:	sub    al,0xbb
  4109f0:	pop    esp
  4109f1:	out    dx,al
  4109f2:	mov    eax,fs
  4109f4:	outs   dx,DWORD PTR ds:[esi]
  4109f5:	or     ecx,eax
  4109f7:	dec    ebp
  4109f8:	or     eax,0x6f7c26a2
  4109fd:	cmp    edi,esi
  4109ff:	and    BYTE PTR [edx],bh
  410a01:	ficomp DWORD PTR [eax+0x3c81b8d5]
  410a07:	dec    ebp
  410a08:	scas   eax,DWORD PTR es:[edi]
  410a09:	clc    
  410a0a:	mov    ebx,0xde8004f8
  410a0f:	ins    DWORD PTR es:[edi],dx
  410a10:	pop    edx
  410a11:	rol    bl,cl
  410a13:	push   ebp
  410a14:	in     al,0xcc
  410a16:	dec    ecx
  410a17:	dec    ebx
  410a18:	(bad)
  410a1b:	push   0xfffffff5
  410a1d:	mov    ds:0xe1842cd1,eax
  410a22:	data16 daa 
  410a24:	mov    dh,dh
  410a26:	cwde   
  410a27:	ins    DWORD PTR es:[edi],dx
  410a28:	mov    ch,0xe4
  410a2a:	gs xchg edi,eax
  410a2c:	sub    dl,BYTE PTR [eax+0x1b3c98e8]
  410a32:	ins    BYTE PTR es:[edi],dx
  410a33:	jo     0x410a96
  410a35:	push   edi
  410a36:	sub    DWORD PTR [edi-0x6cebf18c],ebx
  410a3c:	xchg   edx,eax
  410a3d:	fs jmp 0x96867c16
  410a43:	mov    esp,0xda2ec8a5
  410a48:	inc    esi
  410a49:	hlt    
  410a4a:	pusha  
  410a4b:	dec    ecx
  410a4c:	xchg   DWORD PTR [ecx],esp
  410a4e:	call   0xf3bdb945
  410a53:	jae    0x4109d5
  410a55:	xor    ah,bh
  410a57:	adc    eax,0xfb935726
  410a5c:	mov    cl,0x32
  410a5e:	pop    ds
  410a5f:	pusha  
  410a60:	test   DWORD PTR ds:0xf36a6ac3,eax
  410a66:	xchg   ebp,eax
  410a67:	not    DWORD PTR [ecx+0x19]
  410a6a:	pop    eax
  410a6b:	or     DWORD PTR [esi],ebx
  410a6d:	fs jle 0x410a37
  410a70:	push   edi
  410a71:	mov    dh,0x73
  410a73:	(bad)  
  410a74:	mov    BYTE PTR [ecx],al
  410a76:	mov    edi,0x6b09e15c
  410a7b:	in     eax,dx
  410a7c:	mov    WORD PTR ds:0x5de88e6e,gs
  410a82:	mov    dl,0xe8
  410a84:	pop    esi
  410a85:	js     0x410a57
  410a87:	and    DWORD PTR [esp+ebx*4+0x5df03de8],0x20d96153
  410a92:	ror    DWORD PTR [ebp-0x60],0x76
  410a96:	in     al,dx
  410a97:	and    dh,BYTE PTR [ebp+0xa]
  410a9a:	fwait
  410a9b:	add    al,al
  410a9d:	js     0x410aae
  410a9f:	into   
  410aa0:	out    0xef,eax
  410aa2:	adc    ecx,DWORD PTR [eax-0x1e2819d7]
  410aa8:	add    BYTE PTR [edx],0xe
  410aab:	jge    0x410ad1
  410aad:	test   DWORD PTR ds:0xeab3fd80,0x45faf9c5
  410ab7:	(bad)  
  410ab8:	sub    eax,0xcf01114d
  410abd:	mov    eax,0xa14f6479
  410ac2:	ds push es
  410ac4:	add    ebx,DWORD PTR [ebx-0x599f19f6]
  410aca:	fld    QWORD PTR [ebx+esi*1]
  410acd:	inc    eax
  410ace:	ret    0x39ca
  410ad1:	xlat   BYTE PTR ds:[ebx]
  410ad2:	cmp    ebx,DWORD PTR [ebx-0x6f3b6ceb]
  410ad8:	call   0xff20:0x950c1b15
  410adf:	mov    bl,0xae
  410ae1:	(bad)
  410ae4:	das    
  410ae5:	pop    ecx
  410ae6:	mov    BYTE PTR fs:[edx+0x71dd6bd8],al
  410aed:	inc    esi
  410aee:	add    al,0x24
  410af0:	adc    al,dl
  410af2:	jecxz  0x410ae4
  410af4:	call   FWORD PTR [edx+0x2a]
  410af7:	inc    esi
  410af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af9:	ins    DWORD PTR es:[edi],dx
  410afa:	push   esp
  410afb:	rcl    BYTE PTR [edi+esi*1+0x7657baed],cl
  410b02:	sbb    al,0xf8
  410b04:	repz into 
  410b06:	cdq    
  410b07:	jbe    0x410ac4
  410b09:	aad    0xbd
  410b0b:	lahf   
  410b0c:	sub    DWORD PTR [eax-0x3b31c89b],ebp
  410b12:	cmp    bl,0x48
  410b15:	daa    
  410b16:	pusha  
  410b17:	cmp    al,0xde
  410b19:	dec    ecx
  410b1a:	loope  0x410b76
  410b1c:	daa    
  410b1d:	loopne 0x410b1f
  410b1f:	popf   
  410b20:	out    dx,eax
  410b21:	add    ebx,eax
  410b23:	sahf   
  410b24:	xchg   edi,eax
  410b25:	sub    BYTE PTR [ecx],0xe1
  410b28:	stos   BYTE PTR es:[edi],al
  410b29:	pushf  
  410b2a:	arpl   cx,bx
  410b2c:	xchg   edx,eax
  410b2d:	or     dh,BYTE PTR [edx+0x14ff3b7d]
  410b33:	retf   0x680e
  410b36:	aas    
  410b37:	fucomi st,st(6)
  410b39:	pop    edi
  410b3a:	push   es
  410b3b:	adc    al,0x6
  410b3d:	or     al,dl
  410b3f:	add    al,0x92
  410b41:	dec    esp
  410b42:	dec    edx
  410b43:	or     al,0x61
  410b45:	pop    ss
  410b46:	xchg   esi,eax
  410b47:	jae    0x410b20
  410b49:	retf   0xdf3a
  410b4c:	push   0x34
  410b4e:	pop    ss
  410b4f:	loop   0x410bce
  410b51:	mov    cl,0x5e
  410b53:	sbb    cl,BYTE PTR [edi+eiz*8]
  410b56:	ret    0xa85a
  410b59:	xchg   edx,eax
  410b5a:	dec    ecx
  410b5b:	push   eax
  410b5c:	rol    DWORD PTR [ebp-0x38c0749],1
  410b62:	mov    gs,WORD PTR [eax]
  410b64:	sub    ebx,eax
  410b66:	push   0x8cc08a80
  410b6b:	shr    BYTE PTR [edi+edx*8+0x4d],cl
  410b6f:	sub    BYTE PTR [ecx+0xa],ah
  410b72:	fmul   DWORD PTR [ecx+0x4f9157f1]
  410b78:	aas    
  410b79:	cld    
  410b7a:	jecxz  0x410b68
  410b7c:	aas    
  410b7d:	inc    ecx
  410b7e:	pop    ss
  410b7f:	aas    
  410b80:	inc    ecx
  410b81:	nop
  410b82:	sub    BYTE PTR [ecx],al
  410b84:	xchg   DWORD PTR [ecx-0x16eebabf],edi
  410b8a:	push   ebp
  410b8b:	dec    edx
  410b8c:	lods   eax,DWORD PTR ds:[esi]
  410b8d:	sbb    al,BYTE PTR [eax]
  410b8f:	mov    di,0xe1c9
  410b93:	pop    esi
  410b94:	leave  
  410b95:	push   esp
  410b96:	xchg   ebp,eax
  410b97:	(bad)  
  410b98:	sahf   
  410b99:	test   DWORD PTR [ecx-0x167afd5],esp
  410b9f:	mov    ecx,DWORD PTR [edx]
  410ba1:	xor    cl,BYTE PTR [esi]
  410ba3:	aas    
  410ba4:	lea    ecx,[eax+0x7a]
  410ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba8:	fidiv  DWORD PTR ds:0x331495de
  410bae:	cmp    al,al
  410bb0:	xchg   edx,eax
  410bb1:	jp     0x410c2d
  410bb3:	add    BYTE PTR [edi+0xf8c4e95],cl
  410bb9:	push   eax
  410bba:	test   ah,al
  410bbc:	push   edi
  410bbd:	pop    ebp
  410bbe:	add    DWORD PTR [esi-0x52],esi
  410bc1:	xchg   esp,eax
  410bc2:	mov    dh,0x91
  410bc4:	cdq    
  410bc5:	fwait
  410bc6:	lahf   
  410bc7:	or     BYTE PTR [eax+0x31],ah
  410bca:	push   ebx
  410bcb:	out    dx,eax
  410bcc:	inc    esp
  410bcd:	int3   
  410bce:	ins    BYTE PTR es:[edi],dx
  410bcf:	jnp    0x410b79
  410bd1:	fnstsw WORD PTR [edi+0x1cb03dc8]
  410bd7:	dec    ebx
  410bd8:	cmc    
  410bd9:	cmp    eax,0x44ad0b69
  410bde:	arpl   WORD PTR [esi+0x6a1ce1c0],dx
  410be4:	stos   DWORD PTR es:[edi],eax
  410be5:	sub    al,0x16
  410be7:	out    0xba,eax
  410be9:	lock aad 0xf2
  410bec:	add    eax,0xf1b63242
  410bf1:	pop    ebp
  410bf2:	mov    ?,eax
  410bf4:	push   cs
  410bf5:	ds pop es
  410bf7:	cmp    ebp,DWORD PTR [edx-0x6f]
  410bfa:	out    0xc0,eax
  410bfc:	push   ds
  410bfd:	(bad)
  410c00:	nop
  410c01:	xchg   ebx,eax
  410c02:	test   ch,cl
  410c04:	mov    esp,0xe3443ccd
  410c09:	fimul  WORD PTR [eax+0x11b6d9ea]
  410c0f:	jb     0x410ba9
  410c11:	push   ss
  410c12:	(bad)  
  410c13:	or     ebx,DWORD PTR [ebx-0x3bdccb4c]
  410c19:	bswap  esp
  410c1b:	xor    edi,edx
  410c1d:	sbb    DWORD PTR [eax-0x63],edi
  410c20:	push   esi
  410c21:	mov    edi,0xde3c6c8
  410c26:	(bad)  
  410c27:	jg     0x410bdb
  410c29:	jne    0x410bfd
  410c2b:	(bad)  
  410c2c:	or     eax,0x681536d0
  410c31:	(bad)  
  410c33:	lods   al,BYTE PTR ds:[esi]
  410c34:	jb     0x410c69
  410c36:	imul   esp,DWORD PTR ss:[eax+0x20659962],0xe7c68b29
  410c41:	cli    
  410c42:	inc    ebx
  410c43:	(bad)  ds:0x64b9dbe9
  410c49:	mov    ds,WORD PTR [edi+edx*1+0x53]
  410c4d:	push   ebp
  410c4e:	adc    esp,0x317dc236
  410c54:	shl    BYTE PTR [edi],1
  410c56:	xlat   BYTE PTR ds:[ebx]
  410c57:	cmp    BYTE PTR [edx+esi*2],dl
  410c5a:	daa    
  410c5b:	outs   dx,BYTE PTR ds:[esi]
  410c5c:	lods   al,BYTE PTR ds:[esi]
  410c5d:	inc    edi
  410c5e:	test   eax,0xb3cbd421
  410c63:	mov    al,ds:0x535e584e
  410c68:	cmp    ebp,esp
  410c6a:	sahf   
  410c6b:	push   0x5514c8c1
  410c70:	cs jmp 0xed4a:0x1a2cba54
  410c78:	call   0x24e7b0d0
  410c7d:	mov    BYTE PTR [edi+edx*1-0x42],bh
  410c81:	cmp    BYTE PTR [esi],bl
  410c83:	xlat   BYTE PTR ds:[ebx]
  410c84:	fs jmp 0xfb71ffa9
  410c8a:	xchg   dh,ah
  410c8c:	cmp    bh,BYTE PTR [ebx-0x29a138a0]
  410c92:	out    dx,eax
  410c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c94:	cmp    dl,dh
  410c96:	adc    eax,0x5e244a1
  410c9b:	jne    0x410c80
  410c9d:	xor    al,0xb4
  410c9f:	cmc    
  410ca0:	ins    DWORD PTR es:[edi],dx
  410ca1:	push   0xffffff86
  410ca3:	sbb    al,0xe4
  410ca5:	adc    al,0x1d
  410ca7:	pop    esi
  410ca8:	shl    ebx,cl
  410caa:	stos   BYTE PTR es:[edi],al
  410cab:	cs loop 0x410cfc
  410cae:	adc    eax,0xccad9ee0
  410cb3:	cmp    bl,bh
  410cb5:	lods   eax,DWORD PTR ds:[esi]
  410cb6:	std    
  410cb7:	xchg   esi,eax
  410cb8:	xchg   BYTE PTR [eax+esi*2-0x32],bl
  410cbc:	mov    edx,0xbf0edd15
  410cc1:	inc    esi
  410cc2:	mov    al,ds:0x63c09e60
  410cc7:	lahf   
  410cc8:	sar    BYTE PTR [eax+0x7],0xfd
  410ccc:	imul   edi,DWORD PTR [eax+0x44],0xffffffb1
  410cd0:	xor    BYTE PTR [edi],bl
  410cd2:	pushf  
  410cd3:	xchg   BYTE PTR [edx],ch
  410cd5:	sbb    bl,ah
  410cd7:	sub    BYTE PTR [eax+eiz*8],ah
  410cda:	cld    
  410cdb:	fsubr  st(1),st
  410cdd:	adc    eax,0x63cf6e89
  410ce2:	iret   
  410ce3:	or     esi,esi
  410ce5:	mov    edx,0x7a12a1a1
  410cea:	ds jo  0x410cc9
  410ced:	xchg   edi,eax
  410cee:	mov    esp,0xce2ebff8
  410cf3:	outs   dx,DWORD PTR ds:[esi]
  410cf4:	outs   dx,DWORD PTR ds:[esi]
  410cf5:	mov    WORD PTR [ecx-0x6d6bf7b3],ss
  410cfb:	popf   
  410cfc:	push   ds
  410cfd:	ret    0xc759
  410d00:	cmp    al,0xde
  410d02:	jns    0x410d11
  410d04:	dec    eax
  410d05:	call   0xd536ca17
  410d0a:	ret    0xff55
  410d0d:	inc    ebx
  410d0e:	ret    0xce0c
  410d11:	dec    edi
  410d12:	and    al,al
  410d14:	jge    0x410cdf
  410d16:	test   DWORD PTR [ebx],edx
  410d18:	pop    ebp
  410d19:	(bad)  
  410d1a:	fst    DWORD PTR [ebp-0x535d44fa]
  410d20:	cmp    eax,0xf19c7e5b
  410d25:	jmp    0xc578:0xfa76c71d
  410d2c:	xchg   ebx,ebp
  410d2e:	arpl   sp,si
  410d30:	add    ch,BYTE PTR [esp+eax*1+0x56]
  410d34:	or     DWORD PTR [ecx+0x57989706],esp
  410d3a:	(bad)  
  410d3b:	in     al,0x79
  410d3d:	dec    ecx
  410d3e:	loop   0x410cc6
  410d40:	dec    ebx
  410d41:	lods   al,BYTE PTR ds:[esi]
  410d42:	js     0x410d5c
  410d44:	adc    eax,DWORD PTR [eax]
  410d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d47:	inc    edx
  410d48:	jg     0x410d5e
  410d4a:	or     dl,0xde
  410d4d:	xor    eax,0x22916db9
  410d52:	in     eax,dx
  410d53:	retf   
  410d54:	sub    DWORD PTR [edi+eax*1],edi
  410d57:	jp     0x410d7e
  410d59:	pop    eax
  410d5a:	imul   edx,DWORD PTR [ebp-0x3dba6297],0xffffffc6
  410d61:	mov    ah,BYTE PTR [eax+0x4c]
  410d64:	push   edx
  410d65:	adc    BYTE PTR [esi-0x3],ah
  410d68:	aas    
  410d69:	mov    dh,0xf1
  410d6b:	sub    DWORD PTR [edx+edi*2],ecx
  410d6e:	sahf   
  410d6f:	dec    edx
  410d70:	or     DWORD PTR [ebp+eiz*8+0x238d4140],0x9937be7
  410d7b:	mov    edi,0x590b9743
  410d80:	cwde   
  410d81:	dec    eax
  410d82:	mov    ah,0x76
  410d84:	push   ebx
  410d85:	or     BYTE PTR [ebx+eiz*2],ch
  410d88:	(bad)  
  410d89:	adc    al,0x4f
  410d8b:	jo     0x410dd2
  410d8d:	sub    esi,DWORD PTR [edx-0x2e]
  410d90:	mov    ds,WORD PTR [ebx]
  410d92:	cs pusha 
  410d94:	push   esp
  410d95:	sbb    eax,0xb2213e4a
  410d9a:	scas   eax,DWORD PTR es:[edi]
  410d9b:	jne    0x410dda
  410d9d:	ins    BYTE PTR es:[edi],dx
  410d9e:	ds into 
  410da0:	jg     0x410d3c
  410da2:	lds    eax,FWORD PTR ds:0xb5d360bd
  410da8:	lods   al,BYTE PTR ds:[esi]
  410da9:	shr    DWORD PTR [eax],0x6d
  410dac:	enter  0x7561,0xac
  410db0:	fs in  al,0x6e
  410db3:	pop    ebx
  410db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db5:	ja     0x410d8f
  410db7:	add    BYTE PTR [esp-0x518b9190],ah
  410dbe:	ins    DWORD PTR es:[edi],dx
  410dbf:	xor    ebx,edx
  410dc1:	add    DWORD PTR [esi],ebx
  410dc3:	(bad)  
  410dc4:	jp     0x410d70
  410dc6:	xor    al,0xe4
  410dc8:	or     DWORD PTR [eax+0x45],ebp
  410dcb:	add    ecx,DWORD PTR [ebp+0x2980a8]
  410dd1:	xchg   edx,eax
  410dd2:	out    dx,al
  410dd3:	loopne 0x410dcb
  410dd5:	mov    ebp,0xa39836ff
  410dda:	jge    0x410dfe
  410ddc:	push   DWORD PTR [esi-0x5fec3396]
  410de2:	xchg   ebx,eax
  410de3:	dec    edx
  410de4:	call   0x1238:0x41d1092b
  410deb:	xor    eax,0xeed7e145
  410df0:	sub    DWORD PTR [edx-0x21242186],edx
  410df6:	imul   esp,DWORD PTR [ebp+eiz*1-0xb],0x43
  410dfb:	imul   esp,DWORD PTR [ecx-0x51285f7a],0xbe9ab564
  410e05:	xchg   ebx,ecx
  410e07:	cmp    ecx,edx
  410e09:	pop    edx
  410e0a:	lods   al,BYTE PTR ds:[esi]
  410e0b:	mov    ds:0xc47c1616,al
  410e10:	push   esp
  410e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e12:	mov    dh,0x5d
  410e14:	out    dx,eax
  410e15:	adc    eax,0xbbddb57
  410e1a:	retf   
  410e1b:	adc    esi,DWORD PTR [edx]
  410e1d:	sahf   
  410e1e:	inc    esp
  410e1f:	cmova  esi,eax
  410e22:	pop    ebx
  410e23:	jne    0x410dfe
  410e25:	jg     0x410da7
  410e27:	shl    BYTE PTR [ebp+0x2afb0389],0xba
  410e2e:	or     BYTE PTR ds:0xb2940202,al
  410e34:	inc    ebx
  410e35:	jmp    0xe3f487f3
  410e3a:	test   al,0xd
  410e3c:	xchg   bl,bl
  410e3e:	fs ds popf 
  410e41:	dec    ebx
  410e42:	shr    DWORD PTR [eax-0x5f00c6e2],1
  410e48:	sbb    al,0xb3
  410e4b:	shl    BYTE PTR [esi+0x65],cl
  410e4e:	pop    ebx
  410e4f:	mov    ebp,0xe4c537e5
  410e54:	mov    ebx,0x63f76202
  410e59:	or     BYTE PTR [esi-0x7a7e3091],dl
  410e5f:	fwait
  410e60:	cmp    al,0xb5
  410e62:	(bad)  
  410e63:	sar    BYTE PTR [ebp-0x4f75ddb1],0xb9
  410e6a:	dec    esi
  410e6b:	pop    eax
  410e6c:	ror    BYTE PTR [edi],0x9c
  410e6f:	cdq    
  410e70:	push   ebp
  410e71:	and    ebx,DWORD PTR [eax+0x4b]
  410e74:	mov    esp,0x85c009f9
  410e79:	mov    WORD PTR [edi],?
  410e7b:	(bad)  
  410e7c:	cmc    
  410e7d:	push   ecx
  410e7e:	repnz adc eax,0xabb2a292
  410e84:	std    
  410e85:	jbe    0x410e19
  410e87:	clc    
  410e88:	(bad)  
  410e89:	jmp    FWORD PTR [edx+0x33c72091]
  410e8f:	adc    dl,BYTE PTR ds:0xc0b2f2c7
  410e95:	xor    esi,DWORD PTR [ebp+ebp*1-0x4af5324]
  410e9c:	and    dh,bh
  410e9e:	xor    ebp,DWORD PTR [edx+0x32192664]
  410ea4:	fiadd  DWORD PTR [esi-0x25]
  410ea7:	rcl    DWORD PTR [edi],0x38
  410eaa:	and    al,0x87
  410eac:	mov    ds:0xf344e489,al
  410eb1:	mov    edi,0xd6ad526c
  410eb6:	push   ebp
  410eb7:	es dec esi
  410eb9:	imul   esi,DWORD PTR [eax-0x7c],0xffffffb0
  410ebd:	and    al,0x84
  410ebf:	aas    
  410ec0:	cli    
  410ec1:	fwait
  410ec2:	mov    edx,0xed9cf2
  410ec7:	dec    esp
  410ec8:	and    BYTE PTR ds:0x14cb,bh
  410ecd:	in     al,0x9c
  410ecf:	inc    ecx
  410ed0:	imul   esi,DWORD PTR [esi+0x10],0x75c47c3d
  410ed7:	shr    BYTE PTR [ebp-0x3b],0x46
  410edb:	fwait
  410edc:	xor    DWORD PTR [eax+0x39],ecx
  410edf:	aad    0xcd
  410ee1:	sbb    ebx,DWORD PTR [edi-0x61]
  410ee4:	retf   
  410ee5:	jnp    0x410f0a
  410ee7:	push   ebp
  410ee8:	xor    BYTE PTR ds:0x5edd7f18,dl
  410eee:	sbb    BYTE PTR [esi],0x5a
  410ef1:	inc    BYTE PTR [esi+edi*4-0x7afd5fc7]
  410ef8:	fsubr  QWORD PTR [ecx-0x2c]
  410efb:	cmc    
  410efc:	push   ebp
  410efd:	pop    es
  410efe:	cdq    
  410eff:	lahf   
  410f00:	mov    WORD PTR [ecx+0x38],?
  410f03:	or     DWORD PTR [eax-0x64f19958],0xffffff92
  410f0a:	sub    dl,BYTE PTR [ebx-0x29]
  410f0d:	outs   dx,BYTE PTR ds:[esi]
  410f0e:	mov    eax,0x3dac53db
  410f13:	int    0x39
  410f15:	out    0x89,al
  410f17:	xchg   ebp,eax
  410f18:	push   eax
  410f19:	out    0xde,eax
  410f1b:	push   ebx
  410f1c:	push   ds
  410f1d:	jno    0x410ec4
  410f1f:	ror    esi,1
  410f21:	xchg   BYTE PTR [edx+0x7ca8077e],al
  410f27:	push   eax
  410f28:	cmp    BYTE PTR [eax-0x7b444e23],cl
  410f2e:	adc    BYTE PTR [ebp+0x73],bl
  410f31:	xchg   esp,eax
  410f32:	rcl    BYTE PTR [edx],cl
  410f34:	inc    ecx
  410f35:	cmp    BYTE PTR [eax+0x56993ee3],ah
  410f3b:	int3   
  410f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f3d:	jb     0x410ebf
  410f3f:	mov    ds:0x6f1658b3,al
  410f44:	fcmovnb st,st(5)
  410f46:	imul   esp,edx,0x5f585733
  410f4c:	dec    eax
  410f4d:	adc    BYTE PTR [ebp+0x1e],0xc3
  410f51:	inc    ecx
  410f52:	push   esi
  410f53:	add    al,0xfa
  410f55:	push   edi
  410f56:	outs   dx,DWORD PTR ds:[esi]
  410f57:	mov    al,0xfd
  410f59:	jne    0x410ef9
  410f5b:	sub    BYTE PTR [ebx+0x45],0xd8
  410f5f:	dec    ebp
  410f60:	and    BYTE PTR [ebx-0x48],cl
  410f63:	fisttp QWORD PTR [esi-0x14]
  410f66:	xchg   BYTE PTR [bp+di],bh
  410f69:	daa    
  410f6a:	leave  
  410f6b:	adc    al,0xed
  410f6d:	into   
  410f6e:	mov    ch,0xaf
  410f70:	(bad)  
  410f71:	imul   edi,DWORD PTR [ebx],0x76d2acff
  410f77:	loopne 0x410f08
  410f79:	cmp    DWORD PTR [esi-0x406d5c5b],0xffffff97
  410f80:	inc    edx
  410f81:	cmp    al,0x69
  410f83:	push   0x25
  410f85:	fst    QWORD PTR [edx-0x6b]
  410f88:	pop    ebx
  410f89:	cmp    al,0x91
  410f8b:	outs   dx,BYTE PTR ds:[esi]
  410f8c:	xchg   DWORD PTR [edi+0x18],esi
  410f8f:	cmp    bh,bh
  410f91:	jb     0x410f6e
  410f93:	pushf  
  410f94:	out    0x40,al
  410f96:	ret    0x1deb
  410f99:	out    0xf2,eax
  410f9b:	mov    ecx,0x5ae5adff
  410fa0:	inc    ecx
  410fa1:	dec    eax
  410fa2:	mov    ebx,0x90db22b2
  410fa7:	jge    0x410fcc
  410fa9:	mov    dl,0xe
  410fab:	jmp    0x410fe2
  410fad:	leave  
  410fae:	ret    0x5dfe
  410fb1:	scas   al,BYTE PTR es:[edi]
  410fb2:	dec    esi
  410fb3:	mov    ecx,es
  410fb5:	rcr    DWORD PTR [esi+0x24],0xa3
  410fb9:	or     bh,BYTE PTR [esi]
  410fbb:	retf   
  410fbc:	sub    DWORD PTR [eax],ebx
  410fbe:	cmp    bl,BYTE PTR [edx+0x29361ece]
  410fc4:	fs out dx,eax
  410fc6:	sub    bl,dh
  410fc8:	aad    0xff
  410fca:	push   0x5c
  410fcc:	mov    ah,0x37
  410fce:	add    al,0x13
  410fd0:	push   esi
  410fd1:	push   ds
  410fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd3:	iret   
  410fd4:	shr    BYTE PTR [edx],0x6
  410fd7:	fsubrp st(7),st
  410fd9:	inc    esp
  410fda:	fistp  WORD PTR [ebp-0xc]
  410fdd:	jmp    0x410f82
  410fdf:	rcr    DWORD PTR [eax+0x34d73650],0x40
  410fe6:	jnp    0x410fa7
  410fe8:	outs   dx,BYTE PTR ds:[esi]
  410fe9:	mov    al,0xb1
  410feb:	xlat   BYTE PTR ds:[ebx]
  410fec:	lahf   
  410fed:	fmul   QWORD PTR [ecx]
  410fef:	inc    ebp
  410ff0:	jmpw   0xa897
  410ff4:	adc    BYTE PTR [edx+0x2d],dh
  410ff7:	inc    ecx
  410ff8:	inc    eax
  410ff9:	cdq    
  410ffa:	pop    ss
  410ffb:	cmc    
  410ffc:	cwde   
  410ffd:	sub    cl,BYTE PTR [ecx]
  410fff:	jge    0x41104e
  411001:	ret    0x3e68
  411004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411005:	and    eax,DWORD PTR [ecx]
  411007:	out    0x3f,al
  411009:	(bad)  
  41100a:	into   
  41100b:	leave  
  41100c:	push   edi
  41100d:	jb     0x411074
  41100f:	popf   
  411010:	shl    BYTE PTR [ebx+0x2a03099],1
  411016:	nop
  411017:	outs   dx,BYTE PTR ds:[esi]
  411018:	sub    cl,BYTE PTR [edi+0xa3ffaac]
  41101e:	ins    BYTE PTR es:[edi],dx
  41101f:	test   BYTE PTR [ecx-0x51],bh
  411022:	jb     0x410fdf
  411024:	dec    ebp
  411025:	jmp    0x411020
  411027:	sub    DWORD PTR [eax-0x51e87843],esp
  41102d:	test   DWORD PTR [ebx],0x535addc3
  411033:	sbb    edx,DWORD PTR [eax+0x5f]
  411036:	fs mov bl,0x8b
  411039:	test   eax,0x6af35378
  41103e:	mov    ?,WORD PTR [edx+0x65]
  411041:	test   al,0x2e
  411043:	lahf   
  411044:	xchg   esp,eax
  411045:	ds pop edx
  411047:	or     al,0x31
  411049:	jl     0x411074
  41104b:	clc    
  41104c:	inc    esi
  41104d:	mov    dh,0xab
  41104f:	(bad)  
  411050:	loope  0x41103a
  411052:	add    esi,DWORD PTR [eax+0xff71e57]
  411058:	popf   
  411059:	jnp    0x411064
  41105b:	jmp    0x4110c2
  41105d:	or     DWORD PTR [ebx+edi*8+0x67],esi
  411061:	scas   eax,DWORD PTR es:[edi]
  411062:	lea    esp,[ebx-0x3]
  411065:	std    
  411066:	cmp    esp,DWORD PTR fs:[ebx+0x2c]
  41106a:	mov    BYTE PTR [ecx],bl
  41106c:	jmp    0x882f:0x30205886
  411073:	fwait
  411074:	jmp    0x9a59ecc0
  411079:	push   0xffffffdf
  41107b:	mov    al,0x23
  41107d:	sub    bh,dh
  41107f:	xor    eax,0xb832c97b
  411084:	shl    BYTE PTR [edi+0xf],0xad
  411088:	fstp   TBYTE PTR [edx+eiz*1+0x198fd4ae]
  41108f:	and    BYTE PTR [ecx+edi*4+0x5a],cl
  411093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411094:	xchg   esi,eax
  411095:	mov    al,0xe5
  411097:	mov    ch,0x20
  411099:	jle    0x4110a6
  41109b:	xor    DWORD PTR ds:0x3ac1c763,edi
  4110a1:	push   edx
  4110a2:	mov    dl,BYTE PTR [ecx]
  4110a4:	push   esp
  4110a5:	mov    bl,0x67
  4110a7:	sar    bl,0x4e
  4110aa:	stos   BYTE PTR es:[edi],al
  4110ab:	cld    
  4110ac:	adc    al,0xa7
  4110ae:	adc    DWORD PTR [edi+ebp*4+0x2b4e9c19],edx
  4110b5:	lock addr16 in eax,0xe7
  4110b9:	push   ebx
  4110ba:	mov    esp,0x91c77dd5
  4110bf:	mov    al,0xf9
  4110c1:	cs dec ebx
  4110c3:	fidiv  WORD PTR [ecx]
  4110c5:	push   edx
  4110c6:	(bad)  [edx]
  4110c8:	inc    edi
  4110c9:	test   BYTE PTR [ebx+0x7fb69815],dh
  4110cf:	and    esp,edi
  4110d1:	and    dh,cl
  4110d3:	fsubr  st(0),st
  4110d5:	pop    esi
  4110d6:	adc    DWORD PTR [esi+0x31],eax
  4110d9:	fidivr DWORD PTR [ebp+0x1f]
  4110dc:	popf   
  4110dd:	and    dh,BYTE PTR fs:[eax+0x23]
  4110e1:	sbb    cl,0x82
  4110e4:	arpl   WORD PTR [edx-0x6f227c6a],si
  4110ea:	arpl   WORD PTR [edi],di
  4110ec:	push   esp
  4110ed:	leave  
  4110ee:	xlat   BYTE PTR ds:[ebx]
  4110ef:	jmp    0x41115f
  4110f1:	dec    edx
  4110f2:	mov    eax,ds:0xd6e0e59e
  4110f7:	inc    esi
  4110f8:	std    
  4110f9:	lea    ecx,[edi-0x4a]
  4110fc:	push   es
  4110fd:	push   ebp
  4110fe:	pop    esp
  4110ff:	sub    ebp,DWORD PTR [ecx-0x2]
  411102:	pop    ecx
  411103:	jo     0x41109a
  411105:	and    al,0xf
  411107:	gs call 0xee9d:0x71aa2c28
  41110f:	es test eax,0x7c61631d
  411115:	das    
  411116:	sbb    al,0xb9
  411118:	cmc    
  411119:	fimul  WORD PTR [ebx+0x1b9b1bbe]
  41111f:	jmp    0xf374:0xd25e5829
  411126:	js     0x41115e
  411128:	mov    ds:0x77c28b15,al
  41112d:	sahf   
  41112e:	xor    ecx,edx
  411130:	test   ch,0xb7
  411133:	cmp    eax,0x8a59c118
  411138:	adc    eax,0x3cb66e44
  41113d:	xchg   DWORD PTR [ebx+eiz*4],ebp
  411140:	icebp  
  411141:	stos   DWORD PTR es:[edi],eax
  411142:	ins    DWORD PTR es:[edi],dx
  411143:	mov    dh,0x3e
  411145:	aas    
  411146:	enter  0x6a26,0x5a
  41114a:	add    al,0x54
  41114c:	(bad)  
  41114d:	mov    dh,0xb0
  41114f:	rol    ecx,1
  411151:	push   eax
  411152:	xor    ebx,DWORD PTR [ecx]
  411154:	test   BYTE PTR [ebx],al
  411156:	push   ebp
  411157:	add    DWORD PTR [ebx+0x6204d63e],0x5a17ac2a
  411161:	fdiv   QWORD PTR [eax-0x22]
  411164:	jne    0x41118b
  411166:	or     DWORD PTR [esi-0x7e906445],0x7d848eca
  411170:	xchg   edi,eax
  411171:	jno    0x41110f
  411173:	rcr    DWORD PTR [edx],0xc8
  411176:	pop    ss
  411177:	ret    
  411178:	sbb    DWORD PTR [esi+0x7756bafb],ecx
  41117e:	jge    0x4111d7
  411180:	xor    DWORD PTR [edi-0xa864a47],0xffffffd1
  411187:	mov    ds:0x4b151e19,al
  41118c:	pop    eax
  41118d:	add    edx,DWORD PTR [edi-0x14]
  411190:	adc    DWORD PTR [esi-0x28],ecx
  411193:	test   BYTE PTR [eax],dl
  411195:	mov    WORD PTR [ebp-0x160368ef],ds
  41119b:	jl     0x41118e
  41119d:	add    eax,0x70bad511
  4111a2:	mov    ebx,0x898ac1a0
  4111a7:	or     ah,BYTE PTR [esi-0x67]
  4111aa:	loope  0x41121e
  4111ac:	mov    esp,0x3304ebce
  4111b1:	aas    
  4111b2:	adc    ebx,DWORD PTR [ebp+eax*2+0x4c8f0363]
  4111b9:	jns    0x411192
  4111bb:	stos   BYTE PTR es:[edi],al
  4111bc:	pop    ss
  4111bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111be:	in     eax,dx
  4111bf:	leave  
  4111c0:	ins    BYTE PTR es:[edi],dx
  4111c1:	daa    
  4111c2:	push   edx
  4111c3:	mov    edi,0x863630ce
  4111c8:	hlt    
  4111c9:	test   DWORD PTR [ebx],0xaead23d2
  4111cf:	stos   BYTE PTR es:[edi],al
  4111d0:	mov    ch,0x50
  4111d2:	xchg   ebx,eax
  4111d3:	cmp    ah,ch
  4111d5:	xor    DWORD PTR [ecx],esp
  4111d7:	fisttp WORD PTR [edi]
  4111d9:	(bad)  
  4111da:	leave  
  4111db:	out    0xb9,eax
  4111dd:	test   DWORD PTR [edx-0x2c137dd5],eax
  4111e3:	std    
  4111e4:	inc    edx
  4111e5:	inc    ebp
  4111e6:	cmp    ecx,ebx
  4111e8:	pushf  
  4111e9:	or     BYTE PTR [esi+0xb3ee2f4],bh
  4111ef:	out    0xe4,al
  4111f1:	imul   ecx,DWORD PTR [ebx],0x71
  4111f4:	or     DWORD PTR [edx],edi
  4111f6:	xchg   esi,eax
  4111f7:	pop    ebp
  4111f8:	fidivr WORD PTR [edi+0x449d5c12]
  4111fe:	retf   
  4111ff:	sbb    DWORD PTR [edi-0x24],edi
  411202:	mov    dl,0x24
  411204:	jne    0x41127e
  411206:	inc    esp
  411207:	xchg   BYTE PTR [ebx+0x4c],bh
  41120a:	adc    DWORD PTR [edi],ebp
  41120c:	push   cs
  41120d:	dec    edx
  41120e:	jno    0x4111b1
  411210:	fs inc ecx
  411212:	inc    ecx
  411213:	pop    ebx
  411214:	setne  bh
  411217:	ficomp DWORD PTR [ebx+0x12]
  41121a:	push   edx
  41121b:	cwde   
  41121c:	les    ebp,FWORD PTR [ebx]
  41121e:	loope  0x4111b1
  411220:	fdiv   QWORD PTR [ebp-0x37]
  411223:	iret   
  411224:	stos   DWORD PTR es:[edi],eax
  411225:	ficom  DWORD PTR [edx+0x61]
  411228:	push   esi
  411229:	dec    ebx
  41122a:	rol    edx,1
  41122c:	cmp    al,BYTE PTR [ebx-0x16b98593]
  411232:	fisub  WORD PTR ds:0x92d9e5e0
  411238:	les    esp,FWORD PTR [esi]
  41123a:	mov    ds:0xda635562,eax
  41123f:	addr16 jge 0x411275
  411242:	mov    al,0x11
  411244:	mov    al,ds:0x7a76b725
  411249:	xchg   ecx,eax
  41124a:	jge    0x411299
  41124c:	pop    ds
  41124d:	call   0xfd01:0xbb5d18a4
  411254:	sbb    DWORD PTR [ebp+0xe],ecx
  411257:	pop    ss
  411258:	add    ah,ah
  41125a:	sub    ch,ah
  41125c:	sbb    edx,DWORD PTR [ecx-0x6496255b]
  411262:	loop   0x411228
  411264:	mov    cl,0x4f
  411266:	fwait
  411267:	ins    BYTE PTR es:[edi],dx
  411268:	xchg   edi,eax
  411269:	pop    es
  41126a:	mov    ah,0xa3
  41126c:	adc    al,0xa1
  41126e:	inc    eax
  41126f:	mov    eax,ds:0x7ad3a5a8
  411274:	and    BYTE PTR [ebp-0x5549a473],ch
  41127a:	scas   al,BYTE PTR es:[edi]
  41127b:	sbb    al,0xcd
  41127d:	xor    eax,0x1afc58f1
  411282:	sbb    DWORD PTR [eax+0x47093bc5],edi
  411288:	stc    
  411289:	ret    0x6f4
  41128c:	(bad)  
  41128d:	repz (bad) 
  41128f:	int3   
  411290:	xchg   ebp,eax
  411291:	jmp    0x9cdf223d
  411296:	and    DWORD PTR [esi-0x2f],0x4d42bfa1
  41129d:	pop    edx
  41129e:	sahf   
  41129f:	cmp    DWORD PTR [eax-0x17],eax
  4112a2:	mov    ecx,0x44959ec6
  4112a7:	mov    dh,0xa
  4112a9:	jbe    0x4112fa
  4112ab:	push   cs
  4112ac:	add    BYTE PTR [ebx+edi*4-0xc],ch
  4112b0:	dec    edx
  4112b1:	mov    ebx,0xe6eda14c
  4112b6:	and    ebp,ecx
  4112b8:	mov    DWORD PTR [edi-0x41],esi
  4112bb:	xchg   BYTE PTR fs:0x2be7e9ea,bh
  4112c2:	sub    esp,DWORD PTR [esi]
  4112c4:	push   ebx
  4112c5:	mov    esp,0x9214e055
  4112ca:	(bad)
  4112cd:	call   0xd7d:0xa92cb5b5
  4112d4:	jno    0x4112ef
  4112d6:	fstp   DWORD PTR [ecx-0x30949198]
  4112dc:	adc    bh,0xe
  4112df:	xlat   BYTE PTR ds:[ebx]
  4112e0:	xor    BYTE PTR [edi+0x51578331],al
  4112e6:	add    ebx,DWORD PTR [edx-0x77]
  4112e9:	call   0x70e0:0xf1a62d7a
  4112f0:	xor    al,0xd3
  4112f2:	push   0xffffffae
  4112f4:	dec    ecx
  4112f5:	cld    
  4112f6:	cwde   
  4112f7:	xchg   esp,eax
  4112f8:	fsub   st,st(3)
  4112fa:	and    eax,DWORD PTR [edi-0x539f1f60]
  411300:	test   BYTE PTR [esi+0x157b718c],ch
  411306:	sbb    ebx,DWORD PTR [edx+0x3b]
  411309:	out    0x43,al
  41130b:	push   0xdaf12c4e
  411310:	mov    ebx,0x2216c528
  411315:	pushf  
  411316:	loop   0x4112be
  411318:	ins    BYTE PTR es:[edi],dx
  411319:	sbb    DWORD PTR [ebx],0xffffffd5
  41131c:	or     DWORD PTR [eax+0x7eb9b23f],edi
  411322:	adc    eax,0x1a49f004
  411327:	jmp    0x44f8:0x9c53f0ce
  41132e:	imul   edi,ecx,0xffffff8b
  411331:	cli    
  411332:	idiv   DWORD PTR [edx]
  411334:	xor    esp,edx
  411336:	sub    DWORD PTR ds:0xb80e2722,eax
  41133c:	ins    BYTE PTR es:[edi],dx
  41133d:	fmul   DWORD PTR [edi-0x36]
  411340:	xor    al,0xfe
  411342:	lock push ebx
  411344:	inc    BYTE PTR [ecx+ebx*8+0x1c52b672]
  41134b:	int    0x46
  41134d:	cmp    dl,al
  41134f:	pop    ebx
  411350:	into   
  411351:	xchg   bl,bl
  411353:	popf   
  411354:	leave  
  411355:	xchg   esp,eax
  411356:	jb     0x4113d4
  411358:	adc    esi,edi
  41135a:	inc    eax
  41135b:	cs popa 
  41135d:	(bad)  
  41135e:	push   0xffffff98
  411360:	je     0x4113db
  411362:	clc    
  411363:	pop    ebp
  411364:	pop    esp
  411365:	jne    0x411317
  411367:	dec    ebp
  411368:	mov    esp,0x3df452f8
  41136d:	and    DWORD PTR [ecx-0x28],ecx
  411370:	stos   BYTE PTR es:[edi],al
  411371:	out    dx,eax
  411372:	iret   
  411373:	and    esp,esp
  411375:	jp     0x4113d4
  411377:	mov    ch,0xa1
  411379:	pop    esi
  41137a:	mov    dh,0x75
  41137c:	jmp    FWORD PTR [eax+esi*1+0x4349be29]
  411383:	dec    eax
  411384:	xor    edx,DWORD PTR [esi-0x581fb1c6]
  41138a:	int3   
  41138b:	sbb    al,0xae
  41138d:	push   ss
  41138e:	push   0xffffffb3
  411390:	xor    al,0x19
  411392:	fisub  DWORD PTR [esi]
  411394:	xor    ebp,DWORD PTR [edx-0x61b6f70b]
  41139a:	cmp    eax,DWORD PTR [ecx+0x60]
  41139d:	lods   al,BYTE PTR ds:[esi]
  41139e:	dec    esi
  41139f:	cmp    DWORD PTR [edx-0xdf3191a],edi
  4113a5:	jp     0x4113e3
  4113a7:	mov    WORD PTR [ebp-0x7c],ss
  4113aa:	xchg   ebp,eax
  4113ab:	retf   
  4113ac:	jp     0x4113b4
  4113ae:	inc    ebp
  4113af:	pop    ebx
  4113b0:	xor    esp,DWORD PTR [eax+0x15ae3fc6]
  4113b6:	pop    ss
  4113b7:	inc    esi
  4113b8:	scas   eax,DWORD PTR es:[edi]
  4113b9:	inc    esp
  4113ba:	into   
  4113bb:	mov    esp,DWORD PTR [eax-0x72]
  4113be:	xor    edi,DWORD PTR [ebp-0x3b]
  4113c1:	and    dl,BYTE PTR [edx]
  4113c3:	shl    BYTE PTR [edx+edi*2-0x40],0xd6
  4113c8:	fistp  WORD PTR [ecx]
  4113ca:	leave  
  4113cb:	leave  
  4113cc:	pop    esp
  4113cd:	out    dx,eax
  4113ce:	add    DWORD PTR [edx+0x4e],ecx
  4113d1:	add    DWORD PTR [edi-0x46],0x3
  4113d5:	fs xchg ecx,eax
  4113d7:	cld    
  4113d8:	push   0xffffffa3
  4113da:	xchg   ebp,eax
  4113db:	outs   dx,DWORD PTR ds:[esi]
  4113dc:	loop   0x4113a4
  4113de:	jo     0x4113b0
  4113e0:	xchg   esp,eax
  4113e1:	rol    dh,cl
  4113e3:	aad    0x94
  4113e5:	jmp    0xccdfda34
  4113ea:	pop    ecx
  4113eb:	not    DWORD PTR [edx+0x7]
  4113ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ef:	xchg   edx,eax
  4113f0:	fisttp WORD PTR [esi-0x47]
  4113f3:	inc    esi
  4113f4:	pop    ebp
  4113f5:	jne    0x41142b
  4113f7:	mov    WORD PTR [edx+0x11111115],?
  4113fd:	test   al,0xaf
  4113ff:	popa   
  411400:	jp     0x41140b
  411402:	xchg   esp,ebp
  411404:	push   ss
  411405:	js     0x4113a7
  411407:	mov    edx,ecx
  411409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41140a:	xor    eax,0x1e5f31f3
  41140f:	ja     0x41145a
  411411:	sbb    dh,BYTE PTR [edi+0x1c7083a7]
  411417:	fadd   st(0),st
  411419:	sbb    eax,0x43a0909b
  41141e:	neg    DWORD PTR [edi+ebp*8-0x5]
  411422:	stc    
  411423:	gs push ds
  411425:	add    eax,0x115260ac
  41142a:	hlt    
  41142b:	sti    
  41142c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41142d:	pusha  
  41142e:	es push edx
  411430:	cwde   
  411431:	test   DWORD PTR [ecx],esi
  411433:	fiadd  WORD PTR [edi]
  411435:	jmp    0x73a60ff3
  41143a:	dec    ecx
  41143b:	lods   eax,DWORD PTR ds:[esi]
  41143c:	pop    edi
  41143d:	cmp    BYTE PTR [ecx+eax*8+0x497ec0d9],0xb1
  411445:	pop    edi
  411446:	adc    eax,0xbe257757
  41144b:	or     dh,dh
  41144d:	inc    edx
  41144e:	aad    0xc5
  411450:	mov    ebx,0x22b581dc
  411455:	sub    BYTE PTR [esi+ebx*1+0x18],cl
  411459:	mov    edx,0x4aeca223
  41145e:	push   ebp
  41145f:	mov    DWORD PTR [ecx],esi
  411461:	inc    esp
  411462:	mov    bl,BYTE PTR [edi+0x50fe3dba]
  411468:	ss push esi
  41146a:	aaa    
  41146b:	or     eax,0x7e0ef07d
  411470:	sbb    DWORD PTR [esi-0x72],eax
  411473:	lds    edi,FWORD PTR [esi+0x6c]
  411476:	sbb    bl,BYTE PTR [edi+0x59157d7f]
  41147c:	jne    0x41149a
  41147e:	cmp    DWORD PTR [eax+edi*4],esp
  411481:	lock fld QWORD PTR [esp+esi*8-0x4c]
  411486:	fbstp  TBYTE PTR [ecx]
  411488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411489:	dec    esp
  41148a:	pop    edx
  41148b:	jns    0x4114ed
  41148d:	int    0xf0
  41148f:	inc    esi
  411490:	arpl   dx,dx
  411492:	push   ecx
  411493:	lock aaa 
  411495:	shr    BYTE PTR [ebx],cl
  411497:	lods   al,BYTE PTR ds:[esi]
  411498:	pop    esi
  411499:	adc    esi,DWORD PTR [ecx+0x74]
  41149c:	dec    eax
  41149d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149e:	lock adc DWORD PTR [edx+ebx*8+0x53],eax
  4114a3:	add    DWORD PTR [ecx+eax*8],eax
  4114a6:	add    BYTE PTR [edx+0x5974af54],bl
  4114ac:	mov    ecx,0xe7d5d026
  4114b1:	jbe    0x41149b
  4114b3:	loop   0x4114e2
  4114b5:	in     eax,dx
  4114b6:	mov    ds:0xe36a0166,eax
  4114bb:	jns    0x41144b
  4114bd:	je     0x4114f6
  4114bf:	or     esp,DWORD PTR [ebp+0x1ecfd72b]
  4114c5:	cmp    edx,0xa10afdcd
  4114cb:	sbb    BYTE PTR [edi],0xea
  4114ce:	ja     0x41147a
  4114d0:	mov    dl,0xef
  4114d2:	retf   
  4114d3:	repz jl 0x41148f
  4114d6:	pop    ss
  4114d7:	xor    ebx,DWORD PTR [ebp+0x7afbb5ab]
  4114dd:	inc    ebx
  4114de:	mov    eax,DWORD PTR [ebx+0x43895f64]
  4114e4:	mov    ds:0xf9a9689e,al
  4114e9:	mov    ds:0x7e5a2ea3,eax
  4114ee:	call   0x2de9:0x81a59075
  4114f5:	add    ebx,DWORD PTR [edi]
  4114f7:	mov    ch,0xb9
  4114f9:	and    al,0x10
  4114fb:	call   0x78fd8a3
  411500:	pusha  
  411501:	ins    DWORD PTR es:[edi],dx
  411502:	mov    edi,0x8f1d05f7
  411507:	mov    cl,0xd8
  411509:	lock push 0x9e4b6cb0
  41150f:	sbb    DWORD PTR [ebx-0x4],esp
  411512:	mov    ah,0xab
  411514:	sub    bh,cl
  411516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411517:	sti    
  411518:	add    DWORD PTR [ebp-0x4c99ec13],ebp
  41151e:	sbb    bl,cl
  411520:	or     eax,0x1092ffb1
  411525:	aas    
  411526:	and    ecx,esi
  411528:	mov    ch,BYTE PTR ds:0xb8a08057
  41152e:	mov    eax,0x2cc5626
  411533:	lds    ecx,FWORD PTR [esi+0x6524db9e]
  411539:	std    
  41153a:	add    edi,edx
  41153c:	xchg   esi,eax
  41153d:	xor    eax,0xaf0baa3b
  411542:	jecxz  0x4115aa
  411544:	sub    al,0x3f
  411546:	inc    edi
  411547:	js     0x4114f9
  411549:	pop    ebp
  41154a:	sub    ah,bh
  41154c:	lods   al,BYTE PTR ss:[esi]
  41154e:	xor    esi,ebp
  411550:	push   0xffffffd7
  411552:	xchg   BYTE PTR [edi+edi*4+0x41],ch
  411556:	pop    ds
  411557:	cmp    DWORD PTR [edx],edx
  411559:	(bad)  
  41155a:	aaa    
  41155b:	push   ds
  41155c:	xor    al,0x22
  41155e:	test   DWORD PTR ds:0x8945fc25,ecx
  411564:	cmp    BYTE PTR [ecx+edi*2],0x73
  411568:	jl     0x411527
  41156a:	jl     0x411561
  41156c:	jb     0x411594
  41156e:	adc    eax,0x482e6572
  411573:	sbb    BYTE PTR [ebx-0x6e551356],al
  411579:	fdiv   st(6),st
  41157b:	inc    DWORD PTR ds:0x50abee62
  411581:	cdq    
  411582:	dec    ecx
  411583:	mov    ds:0xe207f6ee,al
  411588:	adc    DWORD PTR [esi+0x0],edi
  41158b:	sbb    dl,BYTE PTR [ebx+edi*8+0x9]
  41158f:	daa    
  411590:	push   0x7b
  411592:	or     BYTE PTR [ebx-0x4b025cdd],ah
  411598:	daa    
  411599:	mov    fs,WORD PTR [ebx]
  41159b:	pop    es
  41159c:	mov    eax,0x59ea4454
  4115a1:	sbb    ch,BYTE PTR [ecx+0x1626bd88]
  4115a7:	mov    BYTE PTR ds:0x4a12f455,dl
  4115ad:	mov    ebp,0x7fe2cd83
  4115b2:	jb     0x4115e0
  4115b4:	cli    
  4115b5:	retf   
  4115b6:	inc    edx
  4115b7:	mov    bh,0xc9
  4115b9:	mov    al,0xe4
  4115bb:	sti    
  4115bc:	retf   
  4115bd:	jb     0x41161d
  4115bf:	js     0x4115f6
  4115c1:	mov    esp,0x354e399c
  4115c6:	add    eax,0x9f85429e
  4115cb:	(bad)  
  4115cc:	pusha  
  4115cd:	cmp    cl,bh
  4115cf:	push   ebx
  4115d0:	xchg   edx,eax
  4115d1:	test   bl,bl
  4115d3:	jnp    0x411611
  4115d5:	xchg   ebx,eax
  4115d6:	mov    ebx,0x4cfc0736
  4115db:	mul    DWORD PTR [ebp+0x6b97c585]
  4115e1:	mov    eax,ds:0x2a884479
  4115e6:	dec    ebp
  4115e7:	cmp    esp,DWORD PTR [eax+0x1d]
  4115ea:	dec    eax
  4115eb:	mov    gs,WORD PTR [edi-0x28bc9f8c]
  4115f1:	cli    
  4115f2:	fs out dx,al
  4115f4:	outs   dx,BYTE PTR ds:[esi]
  4115f5:	shl    DWORD PTR [edi],cl
  4115f7:	ins    DWORD PTR es:[edi],dx
  4115f8:	jl     0x4115f1
  4115fa:	stc    
  4115fb:	push   edi
  4115fc:	fcom   DWORD PTR [edx-0x4385ceac]
  411602:	lahf   
  411603:	adc    cl,BYTE PTR [esi+0x7d8d6a1c]
  411609:	mov    dh,0x7c
  41160b:	mov    dl,0xb
  41160d:	mov    cl,0x2a
  41160f:	(bad)  
  411610:	lea    edi,[ebp-0x13]
  411613:	lock cmp al,0x85
  411616:	jle    0x4115ee
  411618:	mov    BYTE PTR [edx],dl
  41161a:	mov    ebp,0x727fa4d4
  41161f:	push   ecx
  411620:	mov    al,0xf2
  411622:	add    al,BYTE PTR [edx]
  411624:	jae    0x4115d9
  411626:	imul   ebp,DWORD PTR [ebx-0x18],0xffffffe7
  41162a:	loope  0x4115fc
  41162c:	pop    esi
  41162d:	lods   eax,DWORD PTR ds:[esi]
  41162e:	in     al,dx
  41162f:	(bad)  
  411630:	out    dx,al
  411631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411632:	fisub  WORD PTR [esi]
  411634:	sub    DWORD PTR [eax-0x4da2d76b],0xd9d91da9
  41163e:	cmp    al,0xd2
  411640:	cmp    BYTE PTR [edx],dl
  411642:	dec    ebx
  411643:	std    
  411644:	xchg   esi,eax
  411645:	out    0xea,al
  411647:	inc    eax
  411648:	test   esi,edi
  41164a:	ficomp DWORD PTR [ecx]
  41164c:	adc    eax,0xb24538b9
  411651:	xchg   ebp,eax
  411652:	aam    0xad
  411654:	repnz (bad) 
  411656:	sbb    esi,esp
  411658:	jl     0x411687
  41165a:	(bad)  
  41165b:	mov    ch,0x34
  41165d:	test   eax,0x9c493ae2
  411662:	fwait
  411663:	inc    edx
  411664:	or     DWORD PTR ds:0xf15b2b47,edx
  41166a:	and    edx,edx
  41166c:	je     0x4116de
  41166e:	test   ch,bh
  411670:	cld    
  411671:	push   esp
  411672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411673:	enter  0x47ce,0xa6
  411677:	pop    ss
  411678:	jg     0x41161c
  41167a:	sbb    ch,BYTE PTR [ecx-0xf]
  41167d:	dec    esi
  41167e:	test   DWORD PTR [esi-0x460c159a],ebx
  411684:	adc    eax,0xe43c314
  411689:	mov    edx,0x9e21bf40
  41168e:	nop
  41168f:	sub    al,0x25
  411691:	ins    DWORD PTR es:[edi],dx
  411692:	cmp    ecx,DWORD PTR [edi-0x24]
  411695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411696:	fmul   QWORD PTR [esi]
  411698:	dec    esp
  411699:	mov    al,ds:0xfa20419d
  41169e:	(bad)  
  41169f:	jbe    0x411634
  4116a1:	cmp    al,0x10
  4116a3:	outs   dx,DWORD PTR ds:[esi]
  4116a4:	es dec ebp
  4116a6:	sbb    ebx,esi
  4116a8:	push   0x303ad68
  4116ad:	jecxz  0x4116c0
  4116af:	lea    eax,[ebp+0x7f]
  4116b2:	rcl    DWORD PTR ds:0xed40e444,1
  4116b8:	adc    esi,DWORD PTR gs:[eax+ecx*4+0x4c93887e]
  4116c0:	xor    DWORD PTR [ebp+0x379476e6],0x730cc2e2
  4116ca:	jp     0x41165e
  4116cc:	cmp    bl,dl
  4116ce:	add    cl,dl
  4116d0:	in     al,dx
  4116d1:	jbe    0x4116a9
  4116d3:	xor    BYTE PTR [eax+ecx*2+0x24],bh
  4116d7:	jg     0x41174d
  4116d9:	add    DWORD PTR [edi],esi
  4116db:	(bad)  
  4116dc:	into   
  4116dd:	int3   
  4116de:	mov    esp,DWORD PTR [esi+eiz*4-0x1e6af2dc]
  4116e5:	loopne 0x411756
  4116e7:	out    0xcd,eax
  4116e9:	sbb    BYTE PTR [eax+0x494d9229],dh
  4116ef:	popa   
  4116f0:	cmp    eax,0xbdad1bb0
  4116f5:	or     eax,0xe19f44d
  4116fa:	test   DWORD PTR [esi+0x7b15bb06],0x291108e6
  411704:	int    0x20
  411706:	cdq    
  411707:	into   
  411708:	lahf   
  411709:	pop    ss
  41170a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170b:	jb     0x4116b2
  41170d:	push   es
  41170e:	daa    
  41170f:	pop    eax
  411710:	inc    edi
  411711:	xchg   BYTE PTR [edx+0x77ad7ef9],cl
  411717:	out    dx,al
  411718:	push   ebp
  411719:	test   esp,esi
  41171b:	sub    BYTE PTR [esi+0x6921bf67],ah
  411721:	jns    0x4116a7
  411723:	dec    eax
  411724:	aad    0xd5
  411726:	sti    
  411727:	jp     0x411767
  411729:	cmp    ch,al
  41172b:	scas   eax,DWORD PTR es:[edi]
  41172c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172d:	gs jno 0x41170f
  411730:	xor    eax,DWORD PTR [edx]
  411732:	jge    0x411707
  411734:	fist   DWORD PTR [edx+0x5d]
  411737:	adc    dh,0x7
  41173a:	test   al,0xff
  41173c:	shr    DWORD PTR [esi-0x78],0x13
  411740:	scas   al,BYTE PTR es:[edi]
  411741:	loope  0x411724
  411743:	jg     0x4116ca
  411745:	outs   dx,BYTE PTR ds:[esi]
  411747:	dec    ecx
  411748:	call   0x4ea5:0x31c98e26
  41174f:	std    
  411750:	js     0x4116e9
  411752:	loop   0x4116d6
  411754:	mov    ebp,0xdd720652
  411759:	test   DWORD PTR [edi-0x52],0x33b3981f
  411760:	sub    ah,dh
  411762:	sbb    eax,0x4a4d66d4
  411767:	or     bh,BYTE PTR [ecx]
  411769:	pushf  
  41176a:	add    DWORD PTR [edi+0x54],0xf9ee1018
  411771:	mov    DWORD PTR [edx],esi
  411773:	(bad)  [ebx+0x5e92ffb2]
  411779:	pushf  
  41177a:	mov    edx,0x12743a55
  41177f:	jno    0x41170e
  411781:	data16 jns 0x41178e
  411784:	arpl   WORD PTR [ebx-0x6d],ax
  411787:	mov    ah,0x60
  411789:	jge    0x41180a
  41178b:	and    edi,esp
  41178d:	mov    al,ds:0x391b1a03
  411792:	je     0x411755
  411794:	sub    dh,BYTE PTR [ecx]
  411796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411797:	pop    es
  411798:	lods   eax,DWORD PTR ds:[esi]
  411799:	adc    ebp,edi
  41179b:	push   ebp
  41179c:	loop   0x4117d5
  41179e:	dec    edx
  41179f:	lds    esp,FWORD PTR [ecx+0x49f0e4b6]
  4117a5:	cwde   
  4117a6:	inc    ebx
  4117a7:	inc    edi
  4117a8:	fisub  DWORD PTR [edx+esi*1+0x28f69d56]
  4117af:	aas    
  4117b0:	jbe    0x4117d8
  4117b2:	jo     0x411825
  4117b4:	fild   WORD PTR [esi*8+0x7ed14d53]
  4117bb:	mov    BYTE PTR [esi],dh
  4117bd:	mov    ds,WORD PTR [ebx]
  4117bf:	dec    esp
  4117c0:	mov    al,ds:0xee8e1e7d
  4117c5:	mov    ebp,0x2b91e0c7
  4117ca:	and    al,0xc1
  4117cc:	cmp    eax,0x6529c14e
  4117d1:	sub    bl,BYTE PTR [edi-0x25]
  4117d4:	pop    ebx
  4117d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d6:	sub    bl,bl
  4117d8:	les    ecx,FWORD PTR [ebp-0x45]
  4117db:	push   cs
  4117dc:	lea    edi,[ecx]
  4117de:	xchg   esp,eax
  4117df:	fiadd  WORD PTR [ebx]
  4117e1:	mov    ebp,0x3d009fed
  4117e6:	cdq    
  4117e7:	sbb    BYTE PTR [ecx],ch
  4117e9:	mov    ds:0x94f0679e,al
  4117ee:	mov    esi,0xdeb05d3
  4117f3:	fs scas eax,DWORD PTR es:[edi]
  4117f5:	add    ah,al
  4117f7:	or     DWORD PTR [edi-0x245e0d2c],0xda504bd4
  411801:	jmp    0x411802
  411803:	js     0x411857
  411805:	test   ebx,eax
  411807:	loope  0x4117ad
  411809:	dec    edx
  41180a:	nop
  41180b:	push   esp
  41180c:	fisubr DWORD PTR es:[ecx+ebx*8+0x1fddb1a3]
  411814:	or     DWORD PTR ds:0xfdd0561c,esi
  41181a:	or     DWORD PTR [eax],edi
  41181c:	fsubp  st(2),st
  41181e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41181f:	inc    ecx
  411820:	push   esi
  411821:	ret    
  411822:	lods   eax,DWORD PTR ds:[esi]
  411823:	add    ah,dl
  411825:	retf   0xcb6f
  411828:	rcr    BYTE PTR [esi+0x44],0xb3
  41182c:	push   0x32
  41182e:	jle    0x411807
  411830:	pusha  
  411831:	sub    BYTE PTR [edx+0x40],cl
  411834:	sbb    al,0x25
  411836:	ss arpl si,cx
  411839:	pop    edx
  41183a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41183c:	fwait
  41183d:	lods   eax,DWORD PTR ds:[esi]
  41183e:	xor    edx,edx
  411840:	pop    ss
  411841:	sub    BYTE PTR [ecx+0x5d2f6b4d],bh
  411847:	jno    0x4118ab
  411849:	shl    BYTE PTR [ebp+0x4b],0x32
  41184d:	sub    DWORD PTR [edi-0x7e],ecx
  411850:	repz mov edx,0x637ce517
  411856:	jmp    DWORD PTR [ebx+0x2d]
  411859:	push   0xffffff86
  41185b:	mov    BYTE PTR [eax+0x595443f5],dl
  411861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411862:	ja     0x411830
  411864:	scas   eax,DWORD PTR es:[edi]
  411865:	xor    esp,eax
  411867:	sbb    DWORD PTR [ecx+eax*4],edx
  41186a:	adc    eax,0x7df3cdab
  41186f:	out    dx,eax
  411870:	mov    esi,0x4eefc862
  411875:	xchg   edi,eax
  411876:	jae    0x411877
  411878:	adc    BYTE PTR [ecx+0x4e4e1674],0x28
  41187f:	nop
  411880:	add    al,0xff
  411882:	and    eax,0xce8cfe6
  411887:	mov    eax,0x703a13af
  41188c:	(bad)  
  41188e:	cmp    bl,bh
  411890:	clc    
  411891:	into   
  411892:	mov    cl,0x7d
  411894:	fwait
  411895:	sbb    edi,edi
  411897:	lea    ebp,[edx+0x44af4b43]
  41189d:	(bad)  
  41189e:	push   ecx
  41189f:	sbb    esp,DWORD PTR [ebp+0x17e8a47f]
  4118a5:	cmp    al,bh
  4118a7:	xchg   esi,eax
  4118a8:	das    
  4118a9:	pop    ecx
  4118aa:	mov    ecx,0x357410ea
  4118af:	push   edx
  4118b0:	ins    DWORD PTR es:[edi],dx
  4118b1:	dec    ebx
  4118b2:	test   al,0x1e
  4118b4:	sar    BYTE PTR [edx-0x4a72e2e],0xc1
  4118bb:	dec    eax
  4118bc:	sub    al,BYTE PTR [ebp-0x3aeced2a]
  4118c2:	test   DWORD PTR [ebx+0x46],0x81e3a3b9
  4118c9:	popa   
  4118ca:	inc    eax
  4118cb:	mov    bh,0x3
  4118cd:	cmc    
  4118ce:	(bad)  
  4118cf:	aad    0x68
  4118d1:	lods   al,BYTE PTR ds:[esi]
  4118d2:	xlat   BYTE PTR ds:[ebx]
  4118d3:	xor    DWORD PTR [ebp-0x50183e4a],0x73
  4118da:	jne    0x4118bf
  4118dc:	enter  0xd896,0xb0
  4118e0:	into   
  4118e1:	mov    eax,ds:0x366526a7
  4118e6:	cli    
  4118e7:	push   esp
  4118e8:	push   esp
  4118e9:	and    eax,0xf900a35c
  4118ee:	add    DWORD PTR [ecx-0x7e],ebp
  4118f1:	(bad)  
  4118f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f3:	mov    ?,WORD PTR [eax]
  4118f5:	add    DWORD PTR [esi-0x5e],ebp
  4118f8:	add    ecx,DWORD PTR [esi-0x1a]
  4118fb:	out    0x61,al
  4118fd:	or     bh,al
  4118ff:	pushf  
  411900:	mov    edi,0x951c499f
  411905:	stc    
  411906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411907:	mov    ebx,0x16ab4ef3
  41190c:	push   ds
  41190d:	push   edi
  41190e:	dec    edx
  41190f:	push   ds
  411910:	shl    DWORD PTR [eax+esi*2-0x3c77c14f],1
  411917:	mov    edx,0xb9d9f6f6
  41191c:	int3   
  41191d:	pusha  
  41191e:	popf   
  41191f:	jb     0x41191a
  411921:	adc    ch,BYTE PTR ds:0x7ddc5507
  411927:	sbb    al,al
  411929:	lock adc eax,0x9f3458fa
  41192f:	hlt    
  411930:	jl     0x41196b
  411932:	push   ebp
  411933:	f2xm1  
  411935:	mov    WORD PTR ds:0x3bdc55e,ds
  41193b:	mov    eax,ds:0x43626b7e
  411940:	push   cs
  411941:	add    esp,eax
  411943:	ror    BYTE PTR gs:[edx],0xf5
  411947:	ja     0x41194f
  411949:	inc    edi
  41194a:	out    dx,eax
  41194b:	sahf   
  41194c:	cmp    DWORD PTR [ebx],0x1033186a
  411952:	pusha  
  411953:	fisub  WORD PTR [ecx-0x3d]
  411956:	cdq    
  411957:	and    eax,0x394e9de7
  41195c:	pusha  
  41195d:	pop    es
  41195e:	retf   0x43d4
  411961:	dec    esp
  411962:	mov    esi,0x52a491a3
  411967:	das    
  411968:	ds (bad) 
  41196a:	push   ebp
  41196b:	enter  0x8dd0,0x31
  41196f:	push   edi
  411970:	mov    dl,ah
  411972:	ins    DWORD PTR es:[edi],dx
  411973:	(bad)
  411976:	cmp    eax,0x828330d8
  41197b:	push   ebp
  41197c:	mov    al,ds:0x3d69925
  411981:	push   esp
  411982:	xchg   esi,esi
  411984:	jmp    0xfc247752
  411989:	mov    ecx,0x1a9b66f3
  41198e:	nop
  41198f:	out    0x43,al
  411991:	pop    ebp
  411992:	rcl    BYTE PTR [esi-0x7ec7e829],cl
  411998:	sahf   
  411999:	push   ds
  41199a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199b:	adc    al,0x0
  41199d:	mov    dl,0xbf
  41199f:	fisttp QWORD PTR [ebx+0x544b989b]
  4119a5:	add    eax,0x1a925278
  4119aa:	mov    esp,0x99765e89
  4119af:	sbb    al,0xcf
  4119b1:	push   eax
  4119b2:	in     eax,dx
  4119b3:	add    edi,edi
  4119b5:	mov    esi,0xa52a75d7
  4119ba:	sahf   
  4119bb:	push   ds
  4119bc:	push   edi
  4119bd:	scas   al,BYTE PTR es:[edi]
  4119be:	inc    ebp
  4119bf:	fs dec esp
  4119c1:	inc    esi
  4119c2:	stos   BYTE PTR es:[edi],al
  4119c3:	retf   
  4119c4:	ror    BYTE PTR ds:[ebx+0x2],0x8c
  4119c9:	dec    ebp
  4119ca:	inc    ebp
  4119cb:	mov    dh,0x4e
  4119cd:	mov    ebp,0x151e70e
  4119d2:	mov    bl,0xed
  4119d4:	pop    ss
  4119d5:	adc    BYTE PTR gs:[edx],bl
  4119d8:	sbb    DWORD PTR [edx],ecx
  4119da:	loop   0x4119ea
  4119dc:	adc    DWORD PTR [ebx-0x6b],ebp
  4119df:	pop    esi
  4119e0:	or     dh,al
  4119e2:	push   ecx
  4119e3:	mov    eax,0x6d1c849f
  4119e8:	aaa    
  4119e9:	dec    edi
  4119ea:	mov    ch,bl
  4119ec:	sahf   
  4119ed:	gs out dx,eax
  4119ef:	call   0x227c:0x71aee988
  4119f6:	je     0x411a4b
  4119f8:	test   BYTE PTR [ebp+esi*2+0x7b2fa25f],dh
  4119ff:	(bad)
  411a04:	or     esp,DWORD PTR [edx-0xe]
  411a07:	clc    
  411a08:	dec    eax
  411a09:	popa   
  411a0a:	push   esp
  411a0b:	retf   
  411a0c:	shl    DWORD PTR [ecx],cl
  411a0e:	dec    esi
  411a0f:	xor    BYTE PTR [eax],bh
  411a11:	xchg   ecx,eax
  411a12:	lods   eax,DWORD PTR ds:[esi]
  411a13:	xchg   esi,eax
  411a14:	pushf  
  411a15:	outs   dx,BYTE PTR ds:[esi]
  411a16:	dec    eax
  411a17:	add    esp,DWORD PTR [edi]
  411a19:	xor    eax,0x3743f263
  411a1e:	dec    ecx
  411a1f:	lahf   
  411a20:	mov    ah,0x8e
  411a22:	sbb    BYTE PTR [ebx+ebp*2+0x78],0x80
  411a27:	sbb    ch,bl
  411a29:	shl    ecx,1
  411a2b:	mov    bl,0x6d
  411a2d:	sahf   
  411a2e:	xlat   BYTE PTR ds:[ebx]
  411a2f:	or     eax,0x24581f28
  411a34:	mov    edx,0x9ac32d7
  411a39:	imul   eax,esi,0x57e10a7c
  411a3f:	fisttp QWORD PTR [ebp-0x41ebd51a]
  411a45:	add    al,0x5e
  411a47:	test   edx,esi
  411a49:	(bad)  
  411a4b:	cmp    DWORD PTR [ebp+0x26f71340],ecx
  411a51:	test   al,0x3a
  411a53:	pop    ss
  411a54:	sti    
  411a55:	iret   
  411a56:	mov    ecx,0xbf15ac29
  411a5b:	ja     0x411a76
  411a5d:	jbe    0x411ad2
  411a5f:	leave  
  411a60:	pop    ss
  411a61:	jbe    0x411a88
  411a63:	lahf   
  411a64:	mov    eax,ds:0xc0257926
  411a69:	jmp    0xb67e:0x66aa1f17
  411a70:	aas    
  411a71:	mov    bl,BYTE PTR [edx-0x25422b83]
  411a77:	cmp    eax,0x4b133884
  411a7c:	stc    
  411a7d:	iret   
  411a7e:	icebp  
  411a7f:	mov    bh,0x66
  411a81:	lahf   
  411a82:	inc    eax
  411a83:	dec    edx
  411a84:	cld    
  411a85:	push   edx
  411a86:	outs   dx,DWORD PTR ds:[esi]
  411a87:	adc    edx,DWORD PTR [ecx+0xbde9436]
  411a8d:	pop    edx
  411a8e:	xchg   edi,eax
  411a8f:	push   ecx
  411a90:	rcl    DWORD PTR [esi-0x63],1
  411a93:	mov    esi,0xd9e7ec77
  411a98:	jg     0x411a6b
  411a9a:	sahf   
  411a9b:	xlat   BYTE PTR ds:[ebx]
  411a9c:	(bad)  
  411a9d:	dec    ecx
  411a9e:	pop    ebx
  411a9f:	cmp    DWORD PTR [ecx+ecx*1],esp
  411aa2:	addr16 in al,0xfb
  411aa5:	xor    al,0x30
  411aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa8:	in     al,0xb9
  411aaa:	shr    DWORD PTR [ecx+0x6e1ad57],0x3b
  411ab1:	or     DWORD PTR [esi],ebp
  411ab3:	pusha  
  411ab4:	pusha  
  411ab5:	pop    ecx
  411ab6:	cmp    dl,0x81
  411ab9:	cwde   
  411aba:	fs (bad) 
  411abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411abd:	xchg   bh,ch
  411abf:	retf   0x6e95
  411ac2:	stos   BYTE PTR es:[edi],al
  411ac3:	aas    
  411ac4:	stos   BYTE PTR es:[edi],al
  411ac5:	into   
  411ac6:	xchg   ecx,eax
  411ac7:	sbb    al,0xf0
  411ac9:	xor    al,0x4b
  411acb:	js     0x411a9d
  411acd:	out    0x8,al
  411acf:	fsub   QWORD PTR [esi-0x5733f6be]
  411ad5:	inc    eax
  411ad6:	in     al,dx
  411ad7:	push   eax
  411ad8:	dec    ecx
  411ad9:	mov    esp,0xa397670b
  411ade:	mov    ds:0x14c02fb4,eax
  411ae3:	or     al,0xbb
  411ae5:	mov    BYTE PTR [ebx+0x40],cl
  411ae8:	(bad)  
  411ae9:	outs   dx,BYTE PTR ds:[esi]
  411aea:	sub    al,0xb5
  411aec:	cs (bad) 
  411aee:	fistp  WORD PTR ds:0x620db027
  411af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af5:	retf   0x4b70
  411af8:	jb     0x411b1b
  411afa:	xor    eax,DWORD PTR [ecx-0x483507b]
  411b00:	mov    dh,0x7
  411b02:	push   es
  411b03:	iret   
  411b04:	xchg   ebx,eax
  411b05:	mov    eax,0xe788692c
  411b0a:	cwde   
  411b0b:	fdivp  st(3),st
  411b0d:	scas   eax,DWORD PTR es:[edi]
  411b0e:	mov    dl,0x19
  411b10:	push   ss
  411b11:	or     cl,BYTE PTR ds:0x8029fe08
  411b17:	adc    DWORD PTR [edi-0x399e011e],esi
  411b1d:	sub    ebx,DWORD PTR [ecx]
  411b1f:	mov    ah,0xd
  411b21:	loopne 0x411ac8
  411b23:	jnp    0x411abf
  411b25:	pop    esi
  411b26:	cmc    
  411b27:	cld    
  411b28:	scas   al,BYTE PTR es:[edi]
  411b29:	mov    ebp,0xa2ede7c8
  411b2e:	lea    ecx,[ecx]
  411b30:	enter  0x3a3c,0x9b
  411b34:	dec    eax
  411b35:	test   esi,esi
  411b37:	adc    al,al
  411b39:	mov    cl,0x58
  411b3b:	dec    ebx
  411b3c:	(bad)  
  411b3d:	fistp  DWORD PTR [edx-0x6cf9f766]
  411b43:	iret   
  411b44:	push   eax
  411b45:	adc    al,0x9d
  411b47:	jecxz  0x411ae1
  411b49:	cmp    ah,dl
  411b4b:	xlat   BYTE PTR ds:[ebx]
  411b4c:	test   eax,0xdcc0924a
  411b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b52:	jo     0x8b4a1e65
  411b58:	shl    DWORD PTR [edi+0x51c83007],0xe4
  411b5f:	cmp    DWORD PTR [ecx+0xd256a7e],edi
  411b65:	(bad)  
  411b66:	nop
  411b67:	or     ch,BYTE PTR [ebx+0x154ec852]
  411b6d:	int    0xb4
  411b6f:	dec    ebx
  411b70:	or     ecx,DWORD PTR [esi+0x59]
  411b73:	shl    DWORD PTR [eax+0x7bd77f7c],0xa6
  411b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b7b:	arpl   WORD PTR [esi+0x39],cx
  411b7e:	and    edi,edi
  411b80:	(bad)  [eax-0x40448832]
  411b86:	nop
  411b87:	lea    eax,[ebx+ecx*8]
  411b8a:	jbe    0x411bcb
  411b8c:	sahf   
  411b8d:	int3   
  411b8e:	je     0x411b60
  411b90:	sub    BYTE PTR ds:0x5ce795b,al
  411b96:	stc    
  411b97:	dec    edx
  411b98:	mov    ds:0x5b5491c8,eax
  411b9d:	pop    ebx
  411b9e:	jl     0x411b63
  411ba0:	sbb    eax,DWORD PTR [edi+esi*2+0x2a0ffdd4]
  411ba7:	fwait
  411ba8:	arpl   WORD PTR [edi+0x77],cx
  411bab:	or     ecx,DWORD PTR [esi-0x22]
  411bae:	or     eax,0x4b85d45b
  411bb3:	scas   eax,DWORD PTR es:[edi]
  411bb4:	mov    bh,0xb4
  411bb6:	push   ecx
  411bb7:	adc    DWORD PTR [edx],ecx
  411bb9:	in     eax,0xc0
  411bbb:	jbe    0x411b74
  411bbd:	dec    edx
  411bbe:	lock sub ch,BYTE PTR [esi-0x18cda712]
  411bc5:	jge    0x411b8e
  411bc7:	push   es
  411bc8:	mov    al,ds:0x3f01b18c
  411bcd:	sub    DWORD PTR [ecx-0x1775bff0],eax
  411bd3:	cmp    BYTE PTR [edx-0x2f],dl
  411bd6:	push   ebx
  411bd7:	sub    ah,cl
  411bd9:	push   esp
  411bda:	sbb    esi,DWORD PTR [ecx-0x4b]
  411bdd:	adc    BYTE PTR [edx+0x146e0e87],bh
  411be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411be4:	das    
  411be5:	jmp    0x411b7d
  411be7:	mov    al,ds:0xb63ff6ac
  411bec:	out    dx,al
  411bed:	and    al,0x11
  411bef:	es mov dl,0x35
  411bf2:	mov    ds:0xc40ec9ae,eax
  411bf7:	fwait
  411bf8:	(bad)  
  411bf9:	lds    edx,FWORD PTR [esp+eax*4-0x44bcb3c6]
  411c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c01:	xchg   ebp,eax
  411c02:	adc    cl,dh
  411c04:	imul   eax,DWORD PTR [edi+0x5a],0x31
  411c08:	(bad)  
  411c09:	mov    ecx,0x5d60ee9
  411c0e:	mov    BYTE PTR [ebp-0x59],dl
  411c11:	sbb    BYTE PTR [edi-0x69368880],bl
  411c17:	xchg   edi,eax
  411c18:	dec    ebx
  411c19:	pop    ds
  411c1a:	inc    eax
  411c1b:	gs repz mov dl,0x80
  411c1f:	mov    BYTE PTR [edx+0x4b338b7b],al
  411c25:	(bad)  
  411c26:	cmc    
  411c27:	lahf   
  411c28:	fidivr WORD PTR [eax-0x7b]
  411c2b:	inc    ebp
  411c2c:	mov    ?,WORD PTR [edx-0x34]
  411c2f:	push   es
  411c30:	dec    DWORD PTR [edx]
  411c32:	and    dh,BYTE PTR [edx+0x7bf0fb80]
  411c38:	add    dl,0xea
  411c3b:	mov    al,ds:0x3599b3f
  411c40:	rcr    dh,1
  411c42:	shl    DWORD PTR [eax-0x76cda059],cl
  411c48:	cdq    
  411c49:	jecxz  0x411c03
  411c4b:	inc    ebx
  411c4c:	inc    esi
  411c4d:	push   0xd5aa8442
  411c52:	hlt    
  411c53:	mov    ecx,ecx
  411c55:	fldcw  WORD PTR [eax]
  411c57:	and    esp,DWORD PTR [edi+0x60]
  411c5a:	loopne 0x411c77
  411c5c:	pop    ds
  411c5d:	pusha  
  411c5e:	inc    edx
  411c5f:	adc    al,0xba
  411c61:	jmp    0xb451197
  411c66:	and    DWORD PTR [edi+esi*2-0x506edafc],edi
  411c6d:	leave  
  411c6e:	mov    eax,ds:0x6e4c7f09
  411c73:	xor    DWORD PTR [edx+edi*2],ecx
  411c76:	data16 xor cl,BYTE PTR [esi]
  411c79:	data16 jecxz 0x411c23
  411c7c:	fistp  WORD PTR [ecx+0x66]
  411c7f:	aas    
  411c80:	add    eax,0xbcab979b
  411c85:	leave  
  411c86:	(bad)  
  411c87:	pop    eax
  411c88:	sub    esi,ecx
  411c8a:	mov    dh,0x7c
  411c8c:	mov    esi,0x9ab3beb7
  411c91:	scas   eax,DWORD PTR es:[edi]
  411c92:	pop    esp
  411c93:	or     dl,bh
  411c95:	mov    dh,0x4d
  411c97:	pop    ecx
  411c98:	dec    ebx
  411c99:	adc    eax,0xc599d20f
  411c9e:	adc    al,0xb6
  411ca0:	sbb    DWORD PTR [eax-0xf],ebp
  411ca3:	xchg   ecx,eax
  411ca4:	addr16 (bad) 
  411ca6:	ficom  DWORD PTR [edx-0x7c]
  411ca9:	outs   dx,DWORD PTR ds:[esi]
  411caa:	dec    edx
  411cab:	sbb    al,0x11
  411cad:	rcr    DWORD PTR [ecx-0x7458fcaa],1
  411cb3:	mov    edx,0x7e45bca0
  411cb8:	scas   al,BYTE PTR es:[edi]
  411cb9:	push   esi
  411cba:	and    ebp,DWORD PTR [ebx+0xf]
  411cbd:	jecxz  0x411ca6
  411cbf:	enter  0xbadf,0x3b
  411cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cc4:	or     BYTE PTR [edx],ah
  411cc6:	sub    al,0x2e
  411cc8:	jle    0x411cc2
  411cca:	pop    eax
  411ccb:	ficom  DWORD PTR [ebx+0x439b716c]
  411cd1:	neg    DWORD PTR [ecx]
  411cd3:	push   esi
  411cd4:	sub    al,0xc0
  411cd6:	dec    esi
  411cd7:	pop    ebp
  411cd8:	scas   eax,DWORD PTR es:[edi]
  411cd9:	jp     0x411c5b
  411cdb:	push   ss
  411cdc:	call   0x3ed5:0xe572323a
  411ce3:	jle    0x411cc0
  411ce5:	push   0x6c26861c
  411cea:	or     dl,BYTE PTR [eax+0x7b11e9ae]
  411cf0:	push   eax
  411cf1:	test   BYTE PTR [edi+0x8fc30ed],cl
  411cf7:	je     0x411d06
  411cf9:	shr    DWORD PTR [ebp+0x78],cl
  411cfc:	inc    esp
  411cfd:	mov    bl,0x3
  411cff:	aam    0x3b
  411d01:	arpl   WORD PTR [edx-0x2aa9fbfb],bp
  411d07:	fdivr  QWORD PTR [eax]
  411d09:	(bad)  
  411d0b:	arpl   WORD PTR [eax+0x7ce770fd],cx
  411d11:	out    dx,al
  411d12:	rcl    DWORD PTR [ecx-0x13609256],1
  411d18:	mov    eax,0xad70afc7
  411d1d:	cmp    BYTE PTR [edx],bh
  411d1f:	fild   QWORD PTR [edi+0x7b]
  411d22:	mov    WORD PTR [edx+0x1264ca81],fs
  411d28:	mov    edx,0xb20940d2
  411d2d:	push   esi
  411d2e:	pop    eax
  411d2f:	and    DWORD PTR [ecx-0x7a],esi
  411d32:	sar    BYTE PTR [edx+0x37],cl
  411d35:	mov    al,0xf0
  411d37:	lahf   
  411d38:	test   BYTE PTR [edi+eiz*2+0x27],al
  411d3c:	jp     0x411dbd
  411d3e:	dec    esp
  411d3f:	sbb    eax,0x53ecb09d
  411d44:	cmc    
  411d45:	popf   
  411d46:	pop    ebx
  411d47:	sub    BYTE PTR ds:0xf6a12630,dl
  411d4d:	ret    0x562
  411d50:	adc    al,0x87
  411d52:	mov    esi,0x6c8be995
  411d57:	fcomi  st,st(6)
  411d59:	jmp    0x411d87
  411d5b:	fnstsw WORD PTR [eax]
  411d5d:	push   ecx
  411d5e:	xor    DWORD PTR ds:0xab7a3857,ebp
  411d64:	int    0xe8
  411d66:	add    eax,0x26b4d25c
  411d6b:	stos   DWORD PTR es:[edi],eax
  411d6c:	imul   ebx,esp,0x14
  411d6f:	pop    ebp
  411d70:	pop    esp
  411d71:	iret   
  411d72:	mov    ecx,esi
  411d74:	sub    ecx,0xbb11e45e
  411d7a:	push   ebp
  411d7b:	dec    ecx
  411d7c:	retf   
  411d7d:	cwde   
  411d7e:	mov    ecx,0x8e90ba85
  411d83:	inc    ebp
  411d84:	mov    ebp,0x9e9635b6
  411d89:	sbb    al,0x67
  411d8b:	jnp    0x411d79
  411d8d:	or     eax,0xe3095c8a
  411d92:	xchg   DWORD PTR ss:[edx+0x33],esp
  411d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d97:	cmp    DWORD PTR [ebx-0x67847137],0xa28518e4
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	cmc    
  412035:	xor    BYTE PTR [edi-0x1b],ah
  412038:	cmp    dh,0x86
  41203b:	inc    esp
  41203c:	xchg   esi,eax
  41203d:	int    0x57
  41203f:	in     eax,0x34
  412041:	je     0x4121a4
  412047:	add    BYTE PTR [ebx+0x3a],al
  41204a:	pop    esp
  41204b:	inc    ebx
  41204c:	jne    0x4120c0
  41204e:	jb     0x4120b5
  412050:	outs   dx,BYTE PTR ds:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	in     al,dx
  41563f:	jge    0x415609
  415641:	add    BYTE PTR [ecx-0x2c],bh
  415644:	add    BYTE PTR [eax],al
  415646:	hlt    
  415647:	add    al,0x0
  415649:	add    BYTE PTR [ebx-0xd],al
  41564c:	aam    0x55
  41564e:	jmp    0x415659
  415650:	pop    edx
  415651:	call   0xb82f:0x4d1a3664
  415658:	(bad)  
  415659:	retf   0xfda8
  41565c:	fmul   DWORD PTR [esp+ecx*8-0x4907afef]
  415663:	int    0x6e
  415665:	pop    ebp
  415666:	inc    ebp
  415667:	fdivp  st(1),st
  415669:	cmp    esi,DWORD PTR [eax-0x3c]
  41566c:	sbb    al,0xbc
  41566e:	fmul   DWORD PTR [ebx+0x22]
  415671:	dec    DWORD PTR [ecx+0x2439b040]
  415677:	dec    ebp
  415678:	and    DWORD PTR [esi],esp
  41567a:	inc    ebp
  41567b:	dec    ecx
  41567c:	sbb    ebp,ebx
  41567e:	mov    dh,0x16
  415680:	lock or eax,0x2dcdc9f2
  415686:	mov    al,bl
  415688:	add    eax,0xa30acdbd
  41568d:	shr    DWORD PTR [ebp-0x6f],0x2f
  415691:	in     al,dx
  415692:	mov    al,ds:0x65e8aae7
  415697:	jae    0x415713
  415699:	pop    edx
  41569a:	enter  0x557,0xab
  41569e:	xor    edx,DWORD PTR [edx-0x2e6414db]
  4156a4:	enter  0xe8e6,0x54
  4156a8:	cmp    eax,edi
  4156aa:	jo     0x4156db
  4156ac:	clc    
  4156ad:	mov    ebx,0xbd2c220b
  4156b2:	ds or  edx,edi
  4156b5:	cmp    BYTE PTR [ebx+0x23a56ae4],cl
  4156bb:	aaa    
  4156bc:	iret   
  4156bd:	push   ebx
  4156be:	sbb    edx,0xafbf8f6f
  4156c4:	push   0x223fe711
  4156c9:	sbb    bl,al
  4156cb:	xchg   dh,al
  4156cd:	imul   esi,DWORD PTR ds:0xe22d1db3,0xd5ed172b
  4156d7:	mov    DWORD PTR [ebx],ebx
  4156d9:	mov    DWORD PTR [ebp-0x56844877],edi
  4156df:	cwde   
  4156e0:	(bad)  
  4156e1:	out    dx,eax
  4156e2:	cmp    cl,BYTE PTR [esi-0x4d]
  4156e5:	jo     0x415691
  4156e7:	push   edx
  4156e8:	aam    0x2f
  4156ea:	fistp  QWORD PTR [esi]
  4156ec:	scas   al,BYTE PTR es:[edi]
  4156ed:	xlat   BYTE PTR ds:[ebx]
  4156ee:	dec    ecx
  4156ef:	push   es
  4156f0:	scas   eax,DWORD PTR es:[edi]
  4156f1:	mov    bl,0x45
  4156f3:	ins    BYTE PTR es:[edi],dx
  4156f4:	dec    esi
  4156f5:	lock xor DWORD PTR [ebp-0x9],ebp
  4156f9:	xchg   BYTE PTR [esi],dl
  4156fb:	xor    BYTE PTR [edi-0x28],ah
  4156fe:	daa    
  4156ff:	repz push es
  415701:	sbb    al,0x9e
  415703:	int    0x80
  415705:	cmp    ch,bl
  415707:	fidiv  WORD PTR ds:0x71a87ed0
  41570d:	leave  
  41570e:	sti    
  41570f:	hlt    
  415710:	sbb    BYTE PTR [eax-0x4e7b8e4e],ah
  415716:	mov    ebx,0xbb9b4864
  41571b:	jo     0x4156ce
  41571d:	clc    
  41571e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41571f:	adc    al,BYTE PTR [ecx-0x60]
  415722:	out    0xc9,al
  415724:	loope  0x4156f3
  415726:	adc    al,0xd2
  415728:	repz cmp BYTE PTR [ebx-0x7c18252c],bh
  41572f:	retf   
  415730:	aaa    
  415731:	add    eax,0x30363679
  415736:	popf   
  415737:	shl    DWORD PTR [ecx],1
  415739:	div    ebx
  41573b:	sub    cl,bh
  41573d:	aad    0x1a
  41573f:	jle    0x4156d1
  415741:	lock loope 0x415759
  415744:	dec    esi
  415745:	pop    edi
  415746:	(bad)  
  415747:	ja     0x415706
  415749:	imul   ebx,DWORD PTR [esi-0x7fcb5e20],0x3da26050
  415753:	mov    WORD PTR [ebp-0x24],?
  415756:	sahf   
  415757:	adc    DWORD PTR [ebx+0x53616273],eax
  41575d:	and    ebx,DWORD PTR [ecx-0x60]
  415760:	mov    bh,0x30
  415762:	mov    dl,0xac
  415764:	lea    ebp,[edi+0x6971a10d]
  41576a:	(bad)  
  41576c:	test   eax,0xb81d6ea8
  415771:	push   ebx
  415772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415773:	test   BYTE PTR [edx+0x52b226c6],ch
  415779:	jge    0x415739
  41577b:	cmp    bh,0xa1
  41577e:	scas   al,BYTE PTR es:[edi]
  41577f:	sbb    edx,ecx
  415781:	mov    ch,dh
  415783:	daa    
  415784:	xor    DWORD PTR [edx-0x1e],esp
  415787:	push   ss
  415788:	push   edi
  415789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41578a:	xor    BYTE PTR [edi],bl
  41578c:	(bad)  
  41578d:	fwait
  41578e:	inc    esi
  41578f:	dec    esp
  415790:	addr16 jmp 0x7da1:0x6118688a
  415798:	retf   0x9707
  41579b:	mov    ebp,0xe8f4b6ca
  4157a0:	adc    al,BYTE PTR [ebx]
  4157a2:	stc    
  4157a3:	popa   
  4157a4:	mov    eax,DWORD PTR [ebx-0x3]
  4157a7:	mov    dl,0xc2
  4157a9:	jl     0x41576d
  4157ab:	cli    
  4157ac:	arpl   WORD PTR [edx+edi*1-0x35],si
  4157b0:	sbb    cl,bh
  4157b2:	add    eax,0xddd148f7
  4157b7:	mov    dl,0xb4
  4157b9:	sbb    al,0xfa
  4157bb:	jmp    0xea567b12
  4157c0:	mov    ecx,0xce372578
  4157c5:	jb     0x415805
  4157c7:	cmp    cl,ah
  4157c9:	fs xchg ecx,eax
  4157cb:	scas   eax,DWORD PTR es:[edi]
  4157cc:	mov    ah,0xc9
  4157ce:	fs mov ch,0xe2
  4157d1:	int3   
  4157d2:	mov    al,0x95
  4157d4:	leave  
  4157d5:	cmc    
  4157d6:	mov    esp,0xe804cd72
  4157db:	cmp    edx,DWORD PTR [edi-0x4a8a5d4c]
  4157e1:	xchg   ebx,eax
  4157e2:	sub    esi,edx
  4157e4:	stc    
  4157e5:	adc    al,0x4c
  4157e7:	xor    eax,0x960a46ff
  4157ec:	inc    ecx
  4157ed:	int3   
  4157ee:	dec    edi
  4157ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157f0:	ret    0x2e44
  4157f3:	or     DWORD PTR [edi-0x64],edx
  4157f6:	(bad)  
  4157f7:	fild   QWORD PTR [ecx]
  4157f9:	jp     0x415802
  4157fb:	(bad)  
  4157fc:	jecxz  0x4157f8
  4157fe:	test   al,0x13
  415800:	xor    dl,BYTE PTR [edi+ebx*8-0x40]
  415804:	inc    ebp
  415805:	sbb    eax,0xfd31901
  41580a:	pusha  
  41580b:	or     al,0xf8
  41580d:	sub    ch,BYTE PTR [esi+ebx*2]
  415810:	mov    ?,WORD PTR [esi-0x48]
  415813:	cmp    BYTE PTR [eax],cl
  415815:	jecxz  0x4157c3
  415817:	push   es
  415818:	inc    edi
  415819:	or     edi,eax
  41581b:	mov    cl,BYTE PTR [ebx]
  41581d:	call   0x1d0d6569
  415822:	ficomp WORD PTR [edi+eiz*1+0x3f]
  415826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415827:	into   
  415828:	pop    edi
  415829:	out    0xd5,eax
  41582b:	and    eax,0xf7400ebf
  415830:	lds    esi,FWORD PTR [ebx+ebx*8-0x76]
  415834:	or     BYTE PTR [eax+eiz*2],bh
  415837:	pusha  
  415838:	sti    
  415839:	retf   0x310e
  41583c:	addr16 addr16 inc ebx
  41583f:	and    edx,ecx
  415841:	dec    esi
  415842:	rcr    BYTE PTR ds:0xcde748f9,cl
  415849:	imul   esp,DWORD PTR [edi+0x60],0xffffff8d
  41584d:	xchg   esp,eax
  41584e:	mov    ds:0xaeefc88e,al
  415853:	int    0xac
  415855:	jmp    0xe3bd:0x72c9023b
  41585c:	les    ebp,FWORD PTR [esi-0x1011df73]
  415862:	cmp    BYTE PTR ds:0x1ceed4d3,dl
  415868:	dec    ecx
  415869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586a:	std    
  41586b:	adc    dl,BYTE PTR [ebx-0x14]
  41586e:	adc    DWORD PTR [edx+ebx*1],0xffffffbb
  415872:	mov    bl,0x51
  415874:	test   al,0xb5
  415876:	pop    esi
  415877:	addr16 out 0xcb,al
  41587a:	push   cs
  41587b:	dec    ecx
  41587c:	inc    BYTE PTR [ecx+0x3b]
  41587f:	sub    eax,0x5c757ce
  415884:	imul   DWORD PTR ds:0xfc9a69ba
  41588a:	pop    ecx
  41588b:	mov    eax,ds:0x137bd276
  415890:	aam    0xcb
  415892:	pop    esi
  415893:	jns    0x4158e2
  415895:	xchg   DWORD PTR [edi],ebx
  415897:	(bad)  
  415898:	mov    ch,0x47
  41589a:	sbb    eax,0xd3a59de2
  41589f:	push   esi
  4158a0:	xor    DWORD PTR [eax+ecx*4+0x29],esi
  4158a4:	cmc    
  4158a5:	sub    dl,0x88
  4158a8:	mov    dl,0xb2
  4158aa:	add    al,0xd5
  4158ac:	mov    bh,0x2f
  4158ae:	call   0xfe4e:0x8782b406
  4158b5:	and    eax,0x453002d
  4158ba:	les    eax,FWORD PTR [ecx-0x179da356]
  4158c0:	xchg   esi,eax
  4158c1:	test   eax,0x549c5e22
  4158c6:	clc    
  4158c7:	dec    edi
  4158c8:	int3   
  4158c9:	mov    bl,0x3a
  4158cb:	xlat   BYTE PTR ds:[ebx]
  4158cc:	sub    BYTE PTR [esi+0x40],dl
  4158cf:	lods   al,BYTE PTR ds:[esi]
  4158d0:	or     eax,DWORD PTR [edx]
  4158d2:	push   esi
  4158d3:	test   edx,0xc996b629
  4158d9:	call   0xe025:0x3b2431bc
  4158e0:	xchg   ecx,eax
  4158e1:	pop    ebp
  4158e2:	loopne 0x415880
  4158e4:	(bad)  
  4158e5:	test   BYTE PTR [esi-0x52d15c94],0x81
  4158ec:	test   eax,0x34abc90f
  4158f1:	dec    edi
  4158f2:	add    DWORD PTR [edx],0x2fa13c0d
  4158f8:	push   ss
  4158f9:	js     0x4158f3
  4158fb:	(bad)  
  4158fc:	and    eax,0x3101ec52
  415901:	or     ebp,DWORD PTR [edx-0x37]
  415904:	int    0x8a
  415906:	iret   
  415907:	iret   
  415908:	imul   esp,DWORD PTR [edx],0xec07cc60
  41590e:	mov    ds:0x7409d35f,al
  415913:	ins    DWORD PTR es:[edi],dx
  415914:	mov    eax,0x57cda4a2
  415919:	out    dx,al
  41591a:	push   edi
  41591b:	add    BYTE PTR [ebp-0x11c37d3f],dl
  415921:	mov    edx,0x1c4c6232
  415926:	repz mov ch,0x9c
  415929:	repz pop ecx
  41592b:	xchg   esp,eax
  41592c:	in     al,dx
  41592d:	inc    ebx
  41592e:	ja     0x415948
  415930:	cdq    
  415931:	fadd   DWORD PTR [edx+0x6ac6feed]
  415937:	(bad)  
  415938:	dec    esi
  415939:	adc    dh,BYTE PTR [edx]
  41593b:	cld    
  41593c:	popf   
  41593d:	inc    ebx
  41593e:	shl    DWORD PTR [edx+0x37bdb08],cl
  415944:	out    0xd,al
  415946:	retf   
  415947:	sub    ecx,esi
  415949:	pusha  
  41594a:	(bad)  
  41594b:	sbb    bl,dl
  41594d:	sub    bh,BYTE PTR [ecx-0x75]
  415950:	cmp    eax,0x59172feb
  415955:	loope  0x41598a
  415957:	gs xchg esi,eax
  415959:	ins    BYTE PTR es:[edi],dx
  41595a:	sub    cl,bh
  41595c:	fisttp DWORD PTR [ebx-0x61]
  41595f:	int3   
  415960:	adc    al,0xb3
  415962:	and    al,0xf2
  415964:	jg     0x4158ea
  415966:	cmc    
  415967:	adc    DWORD PTR [edi+0x1d],ebx
  41596a:	sbb    eax,0x372a12a
  41596f:	mov    al,0xc9
  415971:	pop    ecx
  415972:	xchg   ebp,eax
  415973:	jmp    0x22000177
  415978:	lods   eax,DWORD PTR ds:[esi]
  415979:	sbb    DWORD PTR [ebx+edi*4-0x70],ebp
  41597d:	jbe    0x415961
  41597f:	adc    dh,BYTE PTR [ebx-0x4a]
  415982:	sub    bh,bl
  415984:	and    cl,bl
  415986:	or     eax,0x1c47c508
  41598b:	pop    ebx
  41598c:	mov    al,0x3d
  41598e:	mov    dh,0x44
  415990:	push   ebx
  415991:	loop   0x415969
  415993:	sub    dl,BYTE PTR [esi-0x638ea63c]
  415999:	scas   eax,DWORD PTR es:[edi]
  41599a:	cmp    al,0xf5
  41599c:	test   BYTE PTR [ecx+esi*1],ch
  41599f:	(bad)  
  4159a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a1:	inc    edx
  4159a2:	cdq    
  4159a3:	test   BYTE PTR ds:0xbbda48e9,bl
  4159a9:	enter  0x5b8c,0xfc
  4159ad:	mov    cs,WORD PTR [edi-0x2233a391]
  4159b3:	ret    0xa418
  4159b6:	inc    ecx
  4159b7:	or     eax,0x8fc51265
  4159bc:	aad    0x44
  4159be:	cmp    al,0x75
  4159c0:	enter  0x9c23,0xde
  4159c4:	mov    ds:0x13d506de,eax
  4159c9:	inc    ecx
  4159ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159cb:	fst    st(5)
  4159cd:	or     ch,0x27
  4159d0:	mov    edi,0xf8087878
  4159d5:	mov    ebp,0x4f3a4b11
  4159da:	ret    
  4159db:	add    ebx,DWORD PTR [eax+0x1fb81068]
  4159e1:	mov    DWORD PTR [ecx-0xd],0xccdc1cfb
  4159e8:	js     0x415a2f
  4159ea:	in     al,0x6
  4159ec:	mov    ds:0x567a1302,al
  4159f1:	ja     0x415a04
  4159f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f4:	in     eax,0x6e
  4159f6:	enter  0x7efd,0x2f
  4159fa:	mov    ecx,ds
  4159fc:	mul    DWORD PTR [ecx+0x507213c8]
  415a02:	scas   eax,DWORD PTR es:[edi]
  415a03:	jp     0x4159da
  415a05:	shl    DWORD PTR [ebx-0x4a],1
  415a08:	push   0x15
  415a0a:	lods   eax,DWORD PTR ds:[esi]
  415a0b:	es push esi
  415a0d:	call   0x2f82:0x8d0ab5cb
  415a14:	bound  eax,QWORD PTR [ecx]
  415a16:	in     eax,dx
  415a17:	(bad)  
  415a18:	(bad)  
  415a19:	mov    bl,0xcf
  415a1b:	mov    edx,0x54646ffe
  415a20:	gs faddp st(7),st
  415a23:	mul    BYTE PTR ds:0x9b51fd49
  415a29:	pop    edi
  415a2a:	mov    eax,ds:0x678852ad
  415a2f:	mov    cl,0x96
  415a31:	les    esi,FWORD PTR ds:0x227fd6d2
  415a37:	pop    ebp
  415a38:	mov    al,ds:0x4bbc865f
  415a3d:	dec    bl
  415a3f:	adc    DWORD PTR [ecx+0xf],0xffffffc3
  415a43:	sub    al,BYTE PTR [ebx+eiz*4]
  415a46:	ret    0x1390
  415a49:	cmc    
  415a4a:	and    ch,BYTE PTR [eax]
  415a4c:	imul   edx,DWORD PTR [edx+0x642fd1ce],0xdd260409
  415a56:	les    ebp,FWORD PTR [esi+esi*4-0x7d]
  415a5a:	sbb    BYTE PTR [edi-0x53d20e3d],bh
  415a60:	test   al,dh
  415a62:	adc    bl,ah
  415a64:	lahf   
  415a65:	dec    esp
  415a66:	fcmovu st,st(4)
  415a68:	jecxz  0x415a35
  415a6a:	sub    ebp,DWORD PTR [eax]
  415a6c:	fild   QWORD PTR [ecx+0x3d0e0959]
  415a72:	fpatan 
  415a75:	xchg   edi,eax
  415a76:	retf   
  415a77:	retf   0x1f80
  415a7a:	mov    BYTE PTR [eax],dh
  415a7c:	fsubr  DWORD PTR [ecx-0x54]
  415a7f:	pop    ebx
  415a80:	push   esi
  415a81:	mov    DWORD PTR [eax+ebp*4-0xb36ac2e],eax
  415a88:	push   edx
  415a89:	dec    ebp
  415a8a:	xchg   DWORD PTR [ebx+0x5e28b702],ecx
  415a90:	test   DWORD PTR [ecx],edi
  415a92:	xor    ecx,eax
  415a94:	out    dx,eax
  415a95:	jbe    0x415a70
  415a97:	xchg   ebx,eax
  415a98:	ror    ebx,1
  415a9a:	sbb    BYTE PTR [ebp+0x17],dh
  415a9d:	and    BYTE PTR [esi],al
  415a9f:	jbe    0x415af5
  415aa1:	popa   
  415aa2:	jnp    0x415a89
  415aa4:	push   eax
  415aa5:	adc    ebx,ebx
  415aa7:	xor    eax,0xa75644f3
  415aac:	fcmove st,st(5)
  415aae:	sbb    al,0x90
  415ab0:	sub    DWORD PTR [ebx-0x21],esi
  415ab3:	lahf   
  415ab4:	inc    edx
  415ab5:	mov    ds:0x55b43082,al
  415aba:	mov    edi,0x965a2e31
  415abf:	inc    DWORD PTR [edx+ebx*8-0x14d49132]
  415ac6:	push   0x5c98f38b
  415acb:	outs   dx,BYTE PTR ds:[esi]
  415acc:	leave  
  415acd:	les    edi,FWORD PTR [edx+ebp*1+0x413fa597]
  415ad4:	scas   eax,DWORD PTR es:[edi]
  415ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad6:	outs   dx,DWORD PTR ds:[esi]
  415ad7:	cmp    DWORD PTR [eax+0x71],ebp
  415ada:	push   cs
  415adb:	mov    al,dh
  415add:	dec    esi
  415ade:	shr    DWORD PTR [eax+0x7d],0x59
  415ae2:	fisttp QWORD PTR [eax+0x19]
  415ae5:	(bad)  
  415ae6:	mov    cl,0xf5
  415ae8:	push   es
  415ae9:	fsubr  QWORD PTR [esp+ecx*1]
  415aec:	jne    0x415b6d
  415aee:	in     al,0x81
  415af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af1:	add    cl,BYTE PTR [eax-0x22]
  415af4:	jns    0x415b73
  415af6:	push   ecx
  415af7:	ins    DWORD PTR es:[edi],dx
  415af8:	push   ecx
  415af9:	mov    edi,0x874c34c
  415afe:	addr16 data16 jle 0x415aec
  415b02:	mov    ch,BYTE PTR [ebx-0x4c]
  415b05:	push   esi
  415b07:	imul   edx,ebx,0xffffffbb
  415b0a:	lods   al,BYTE PTR ds:[esi]
  415b0b:	mov    dl,0x87
  415b0d:	gs push ds
  415b0f:	sahf   
  415b10:	jle    0x415b68
  415b12:	js     0x415b24
  415b14:	or     dl,0xda
  415b17:	mov    al,0x91
  415b19:	sbb    edx,ebx
  415b1b:	in     al,dx
  415b1c:	or     edx,edx
  415b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b1f:	fst    DWORD PTR ds:0xb8b16fd6
  415b25:	adc    eax,esi
  415b27:	outs   dx,DWORD PTR ds:[esi]
  415b28:	adc    ch,ah
  415b2a:	lahf   
  415b2b:	data16 jbe 0x415b5f
  415b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b2f:	das    
  415b30:	imul   esp,DWORD PTR [edi-0x4c],0xffffffd7
  415b34:	(bad)  [eax-0x27]
  415b37:	pop    ds
  415b38:	pop    es
  415b39:	and    eax,0x3dc298a3
  415b3e:	add    BYTE PTR [eax],al
  415b40:	add    BYTE PTR [eax],al
  415b42:	rcl    BYTE PTR [esi],0x80
  415b45:	pop    ebx
  415b46:	(bad)  
  415b47:	(bad)  
  415b49:	lahf   
  415b4a:	jg     0x415ae1
  415b4c:	gs (bad) 
  415b4f:	loopne 0x415b5f
  415b51:	dec    edi
  415b52:	ins    DWORD PTR es:[edi],dx
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    ah,dh
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [edi+0x455de87c],bh
  415b5f:	dec    eax
  415b60:	(bad)  
  415b61:	fwait
  415b62:	ror    BYTE PTR [ebx],cl
  415b64:	xor    al,0xd0
  415b66:	les    ebp,FWORD PTR ds:0xf0d3d08a
  415b6c:	in     al,0xb3
  415b6e:	add    DWORD PTR [ebx+edi*1+0x6],eax
  415b72:	aaa    
  415b73:	inc    edi
  415b74:	cwde   
  415b75:	xchg   edx,eax
  415b76:	push   edi
  415b77:	jbe    0x415ba6
  415b79:	das    
  415b7a:	bound  ebx,QWORD PTR [ecx+0x38616e47]
  415b80:	sub    eax,0x739f01d9
  415b85:	mov    esp,0x45ee19f
  415b8a:	sbb    al,0xe3
  415b8c:	sub    edx,ebx
  415b8e:	xor    al,0x8c
  415b90:	stc    
  415b91:	jl     0x415c10
  415b93:	mov    esp,0xe2946492
  415b98:	mov    ch,0x37
  415b9a:	adc    esi,esp
  415b9c:	pop    ecx
  415b9d:	pop    ss
  415b9e:	into   
  415b9f:	dec    eax
  415ba0:	lods   eax,DWORD PTR ds:[esi]
  415ba1:	sar    BYTE PTR [esi+edi*4+0x7bb4fcba],cl
  415ba8:	loope  0x415bc2
  415baa:	loopne 0x415b91
  415bac:	ret    0x7911
  415baf:	pop    edx
  415bb0:	mov    al,ds:0x798867ac
  415bb5:	xor    DWORD PTR [eax-0x6d],esp
  415bb8:	mov    edi,ecx
  415bba:	jle    0x415b58
  415bbc:	aaa    
  415bbd:	dec    ecx
  415bbe:	test   al,0xb4
  415bc0:	pop    ds
  415bc1:	and    eax,DWORD PTR [eax]
  415bc3:	jge    0x415c2d
  415bc5:	cmp    ebp,esi
  415bc7:	mov    al,0xe7
  415bc9:	or     BYTE PTR [edi],0xf5
  415bcc:	pop    ecx
  415bcd:	sahf   
  415bce:	shr    DWORD PTR [esi+0xb],1
  415bd1:	ret    
  415bd2:	fwait
  415bd3:	aam    0xd9
  415bd5:	(bad)
  415bd9:	dec    esp
  415bda:	or     dl,BYTE PTR [ecx+0x28191c0b]
  415be0:	xchg   ebx,eax
  415be1:	cmp    eax,0xd19ec9f5
  415be6:	(bad)  
  415be7:	iret   
  415be8:	push   0x5c
  415bea:	div    DWORD PTR [ecx-0x35]
  415bed:	repnz das 
  415bef:	lods   al,BYTE PTR ds:[esi]
  415bf0:	scas   eax,DWORD PTR es:[edi]
  415bf1:	push   0x72
  415bf3:	xchg   ebx,eax
  415bf4:	setbe  ah
  415bf7:	dec    ebp
  415bf8:	aam    0xea
  415bfa:	ret    0x9aa1
  415bfd:	xor    eax,0x73918772
  415c02:	mov    WORD PTR es:[eax],fs
  415c05:	mov    ebx,0x845ef63e
  415c0a:	inc    edx
  415c0b:	scas   al,BYTE PTR es:[edi]
  415c0c:	lods   eax,DWORD PTR ds:[esi]
  415c0d:	call   0xb892:0x49b8981
  415c14:	xchg   esi,eax
  415c15:	ret    0x9645
  415c18:	sub    edi,0x6d
  415c1b:	sbb    esi,DWORD PTR [ecx+0x42]
  415c1e:	xchg   ebx,eax
  415c1f:	mov    bh,0x7c
  415c21:	cmp    al,0xea
  415c23:	jnp    0x415be6
  415c25:	ds mov esi,0xf06649c0
  415c2b:	arpl   WORD PTR [eax-0x5c],ax
  415c2e:	push   0xffffffba
  415c30:	dec    eax
  415c31:	rcl    DWORD PTR [esi],cl
  415c33:	jno    0x415bff
  415c35:	jnp    0x415ca1
  415c37:	pusha  
  415c38:	push   eax
  415c39:	jb     0x415c0b
  415c3b:	and    BYTE PTR ds:0x3e1e8cbb,ah
  415c41:	mov    ebx,DWORD PTR [eax]
  415c43:	clc    
  415c44:	pop    DWORD PTR [esi-0x2c]
  415c47:	mov    ch,0xca
  415c49:	pop    edx
  415c4a:	into   
  415c4b:	fwait
  415c4c:	and    DWORD PTR [eax-0xa],0x3
  415c50:	cs stc 
  415c52:	or     BYTE PTR [ebx+0x554c59db],cl
  415c58:	xchg   ebp,eax
  415c59:	sahf   
  415c5a:	jmp    0x415cb7
  415c5c:	adc    al,0xb1
  415c5e:	cli    
  415c5f:	aad    0x28
  415c61:	xchg   ebp,eax
  415c62:	xchg   ecx,eax
  415c63:	jne    0x415c41
  415c65:	cli    
  415c66:	popa   
  415c67:	xor    bh,BYTE PTR [edi+ebp*4]
  415c6a:	push   es
  415c6b:	xor    edi,ebp
  415c6d:	iret   
  415c6e:	in     al,0xa1
  415c70:	ret    
  415c71:	cld    
  415c72:	push   edi
  415c73:	pop    ss
  415c74:	adc    dl,BYTE PTR [ebx]
  415c76:	jne    0x415c77
  415c78:	pop    ebx
  415c79:	xchg   esp,eax
  415c7a:	jmp    0x415cb2
  415c7c:	nop
  415c7d:	sbb    al,0x7
  415c7f:	sbb    DWORD PTR [ebx+eax*1-0x4b],esp
  415c83:	xchg   ebp,eax
  415c84:	addr16 cs mov ebx,0x93f54994
  415c8b:	out    0x3a,al
  415c8d:	fadd   QWORD PTR [edi+eax*2+0x17335ffd]
  415c94:	cmovp  ecx,DWORD PTR [ebp+0x5c52d586]
  415c9b:	sbb    al,0x7b
  415c9d:	mov    esi,0xb932ecea
  415ca2:	loope  0x415cd1
  415ca4:	mov    edi,0xf3cb161f
  415ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415caa:	adc    BYTE PTR [ecx],ch
  415cac:	pop    edx
  415cad:	inc    edx
  415cae:	in     eax,dx
  415caf:	jae    0x415c61
  415cb1:	mov    dl,0xdd
  415cb3:	out    0x1,al
  415cb5:	push   0xaa0cf52f
  415cba:	scas   al,BYTE PTR es:[edi]
  415cbb:	dec    eax
  415cbc:	ins    DWORD PTR es:[edi],dx
  415cbd:	pusha  
  415cbe:	add    eax,0x6cf45167
  415cc3:	test   DWORD PTR [edx+edx*8],0x7f814799
  415cca:	cwde   
  415ccb:	or     eax,DWORD PTR [edi-0x467078c]
  415cd1:	push   ebp
  415cd2:	fs mov ebp,0x7807bca3
  415cd8:	rcr    DWORD PTR [ebp-0x2c9a7b9b],cl
  415cde:	out    0x99,al
  415ce0:	(bad)  
  415ce1:	std    
  415ce2:	jo     0x415d4b
  415ce4:	das    
  415ce5:	stc    
  415ce6:	xchg   edx,eax
  415ce7:	jl     0x415d5b
  415ce9:	cwde   
  415cea:	dec    ebx
  415ceb:	mov    esp,0x8f7983b
  415cf0:	adc    eax,0xf3ea0f5b
  415cf5:	mov    ah,0x12
  415cf7:	jae    0x415d00
  415cf9:	jmp    0xbe801c91
  415cfe:	cpuid  
  415d00:	dec    ebp
  415d01:	jmp    0xc06158a3
  415d06:	out    dx,eax
  415d07:	mov    cl,0xb7
  415d09:	inc    eax
  415d0a:	mov    cl,0x3b
  415d0c:	mov    ebx,0xbbe5a91c
  415d11:	xor    bh,bh
  415d13:	(bad)  
  415d14:	mov    edx,0xc1a86262
  415d19:	mov    ebp,0xede9d564
  415d1e:	sub    ebx,DWORD PTR [ecx]
  415d20:	push   eax
  415d21:	lock rol cl,cl
  415d24:	mov    dh,0x5d
  415d26:	ror    esp,0x50
  415d29:	arpl   cx,sp
  415d2b:	lods   al,BYTE PTR ds:[esi]
  415d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d2d:	(bad)  
  415d2e:	push   esi
  415d2f:	call   FWORD PTR [esi]
  415d31:	test   DWORD PTR [edi],ecx
  415d33:	sar    BYTE PTR [edx+0x2be2edc1],0xa7
  415d3a:	or     DWORD PTR [ebp+0x278b6bac],ecx
  415d40:	jo     0x415d08
  415d42:	icebp  
  415d43:	sti    
  415d44:	mov    dh,0x49
  415d46:	push   ebp
  415d47:	popf   
  415d48:	push   esi
  415d49:	pinsrw mm3,ebp,0xfa
  415d4d:	fnstenv [ebx+ebp*1-0x2cc17e6b]
  415d54:	inc    ebx
  415d55:	hlt    
  415d56:	mov    edx,0x78522857
  415d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5c:	mov    al,ds:0x4e0fb204
  415d61:	mov    eax,0x9f68cde1
  415d66:	mov    ds:0xc2524af5,al
  415d6b:	(bad)  
  415d6c:	sbb    edi,ebx
  415d6e:	dec    edi
  415d6f:	sbb    eax,0x473d6b6c
  415d74:	pop    ebx
  415d75:	out    dx,al
  415d76:	pushf  
  415d77:	aam    0x16
  415d79:	xchg   dl,dh
  415d7b:	pop    edx
  415d7c:	hlt    
  415d7d:	adc    BYTE PTR [ebp-0x32],0x5
  415d81:	cmp    al,0xc9
  415d83:	sub    ah,BYTE PTR [ebp-0x6650bdcc]
  415d89:	jns    0x415d7d
  415d8b:	iret   
  415d8c:	xor    BYTE PTR [eax-0x3a],ah
  415d8f:	(bad)  
  415d90:	push   cs
  415d91:	mov    dh,0x40
  415d93:	jmp    0x415e14
  415d95:	pop    eax
  415d96:	mov    al,ds:0x3d7773f7
  415d9b:	pop    ss
  415d9c:	mov    edi,0x15d78d64
  415da1:	pop    esi
  415da2:	aaa    
  415da3:	inc    edx
  415da4:	or     eax,0x45f4f47b
  415da9:	add    ecx,esp
  415dab:	jle    0x415dd6
  415dad:	jbe    0x415d7a
  415daf:	mov    cl,cl
  415db1:	pop    edi
  415db2:	push   esp
  415db3:	push   ds
  415db4:	cmp    al,0x51
  415db6:	sbb    DWORD PTR [eax-0x62],ebp
  415db9:	data16 mov bh,0x46
  415dbc:	repnz aaa 
  415dbe:	pop    edi
  415dbf:	scas   eax,DWORD PTR es:[edi]
  415dc0:	fsubr  QWORD PTR [ebx]
  415dc2:	lahf   
  415dc3:	xchg   ebp,eax
  415dc4:	xchg   edx,eax
  415dc5:	cdq    
  415dc6:	sbb    BYTE PTR [esi],bl
  415dc8:	jb     0x415e44
  415dca:	cld    
  415dcb:	sbb    al,0xf0
  415dcd:	les    ecx,FWORD PTR [eax]
  415dcf:	mov    ds:0x4ae7aa82,eax
  415dd4:	dec    edi
  415dd5:	rcr    DWORD PTR [ebx-0x6a4843e0],cl
  415ddb:	leave  
  415ddc:	pop    esp
  415ddd:	mov    BYTE PTR [ecx],dh
  415ddf:	mov    bh,0x65
  415de1:	pushf  
  415de2:	jle    0x415e08
  415de4:	mov    eax,ds:0xdb757f7d
  415de9:	jo     0x415e10
  415deb:	or     ecx,DWORD PTR [edi+0x5d79b0ee]
  415df1:	cmp    dl,cl
  415df3:	sub    eax,0xf3297f61
  415df8:	repnz mov al,ds:0xd472a52b
  415dfe:	cmp    ah,dh
  415e00:	(bad)  
  415e02:	push   ss
  415e03:	jp     0x415dc1
  415e05:	popf   
  415e06:	cmp    ah,dl
  415e08:	stos   DWORD PTR es:[edi],eax
  415e09:	or     BYTE PTR [esi+ecx*4+0x77],dl
  415e0d:	mov    edi,0xadc0b5d8
  415e12:	mov    esi,0xe333ae80
  415e17:	mov    al,ds:0xd11b6193
  415e1c:	repz xor DWORD PTR [ebx-0x5c],edx
  415e20:	xchg   esi,eax
  415e21:	adc    BYTE PTR [edx],dl
  415e23:	dec    eax
  415e24:	jnp    0x415dde
  415e26:	mov    esp,0x510bbbf2
  415e2b:	dec    ecx
  415e2c:	push   ds
  415e2d:	data16 or al,0x97
  415e30:	test   eax,0xbd708435
  415e35:	inc    esp
  415e36:	arpl   WORD PTR [ebx+0x3978a5c8],bx
  415e3c:	or     esi,DWORD PTR [ebx]
  415e3e:	nop
  415e3f:	test   DWORD PTR [esi+0x50c0d023],0xa078f3c7
  415e49:	adc    dh,BYTE PTR [esi+0x635767d1]
  415e4f:	loope  0x415e79
  415e51:	sub    esp,DWORD PTR [ebx-0x70]
  415e54:	inc    edi
  415e55:	and    eax,0xfd5d9a9b
  415e5a:	push   cs
  415e5b:	rcl    DWORD PTR [eax],0xb4
  415e5e:	inc    esi
  415e5f:	loopne 0x415e96
  415e61:	adc    BYTE PTR [eax+0x1f],bh
  415e64:	inc    esp
  415e65:	jns    0x415ea7
  415e67:	in     eax,0xee
  415e69:	dec    eax
  415e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e6b:	xor    bl,bh
  415e6d:	cli    
  415e6e:	or     DWORD PTR [esi+0x79],edx
  415e71:	shrd   DWORD PTR [edi],edi,cl
  415e74:	or     bh,BYTE PTR es:[esi+0x48]
  415e78:	fbld   TBYTE PTR [esi]
  415e7a:	sbb    DWORD PTR [ecx],esi
  415e7c:	hlt    
  415e7d:	jbe    0x415ed8
  415e7f:	inc    eax
  415e80:	or     eax,0x6665b791
  415e85:	cmp    eax,0x86a99406
  415e8a:	sub    BYTE PTR [ebp-0x6eb07dd0],al
  415e90:	xrelease xchg BYTE PTR [ecx],ah
  415e93:	out    dx,eax
  415e94:	and    DWORD PTR [ecx],esi
  415e96:	repnz push ebx
  415e98:	push   ss
  415e99:	jbe    0x415e22
  415e9b:	cmc    
  415e9c:	push   es
  415e9d:	repnz add ah,ah
  415ea0:	inc    eax
  415ea1:	ja     0x415e67
  415ea3:	jo     0x415e5a
  415ea5:	call   0x762677d4
  415eaa:	pop    esi
  415eab:	mov    es,WORD PTR [ecx-0x2775d463]
  415eb1:	ins    BYTE PTR es:[edi],dx
  415eb2:	stos   DWORD PTR es:[edi],eax
  415eb3:	add    DWORD PTR [eax-0x32],ebp
  415eb6:	loopne 0x415e3f
  415eb8:	arpl   sp,cx
  415eba:	jb     0x415e3e
  415ebc:	push   0x6ab2bd1c
  415ec1:	inc    ebx
  415ec2:	and    al,0x53
  415ec4:	leave  
  415ec5:	and    al,0xaf
  415ec7:	clc    
  415ec8:	mov    cl,0x5b
  415eca:	cs xor eax,0xe76bd3fd
  415ed0:	(bad)  
  415ed1:	or     bh,BYTE PTR [ecx+0x1bccec76]
  415ed7:	rcr    bh,1
  415ed9:	xor    dl,dl
  415edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415edc:	push   ds
  415edd:	adc    eax,0x3c62263
  415ee2:	jno    0x415e6d
  415ee4:	arpl   WORD PTR [edi-0x26bfad53],sp
  415eea:	ret    0x9525
  415eed:	jl     0x415f17
  415eef:	in     eax,0x9
  415ef1:	fcomip st,st(2)
  415ef3:	push   cs
  415ef4:	repz cwde 
  415ef6:	or     edi,esi
  415ef8:	sub    al,0x6
  415efa:	out    dx,eax
  415efb:	dec    edi
  415efc:	ins    BYTE PTR es:[edi],dx
  415efd:	push   edi
  415efe:	xchg   ecx,eax
  415eff:	test   DWORD PTR [esi+0x4ab379e6],eax
  415f05:	and    DWORD PTR [esi-0x6a],ebx
  415f08:	rcl    eax,cl
  415f0a:	mov    dh,0x1d
  415f0c:	fistp  WORD PTR [ecx+0x77]
  415f0f:	mov    edi,eax
  415f11:	sbb    bl,dl
  415f13:	(bad)  
  415f14:	ja     0x415f8a
  415f16:	lods   al,BYTE PTR ds:[esi]
  415f17:	pop    esi
  415f18:	sbb    al,0x46
  415f1a:	call   0x929b2907
  415f1f:	xor    cl,BYTE PTR [ebx+0x17]
  415f22:	popa   
  415f23:	inc    esi
  415f24:	out    dx,al
  415f25:	js     0x415f4d
  415f27:	test   eax,0x91960063
  415f2c:	ret    
  415f2d:	shr    DWORD PTR [ebx],1
  415f2f:	add    eax,0x20744133
  415f34:	ss mov bh,0xb5
  415f37:	stos   DWORD PTR es:[edi],eax
  415f38:	lea    eax,[ebp+0x6a]
  415f3b:	test   DWORD PTR [esp+ebp*8-0x2b33f00],ebx
  415f42:	jne    0x415f8e
  415f44:	out    0xf9,eax
  415f46:	pop    esi
  415f47:	rcr    DWORD PTR [esi-0x49],0x0
  415f4b:	mov    ch,0xb8
  415f4d:	push   esi
  415f4e:	adc    edx,esp
  415f50:	je     0x415f58
  415f52:	dec    edx
  415f53:	push   eax
  415f54:	add    DWORD PTR [ebx],esp
  415f56:	xor    DWORD PTR fs:[edx+0x1e5ecdb],ebp
  415f5d:	dec    edi
  415f5e:	xor    bp,WORD PTR [ebp+0x7a]
  415f62:	sbb    DWORD PTR [ebp-0x77],0xffffffa8
  415f66:	jmp    0x415f29
  415f68:	push   esi
  415f69:	jg     0x415f49
  415f6b:	(bad)  
  415f6c:	repz add eax,0x74a871ed
  415f72:	cli    
  415f73:	mov    ah,0x7a
  415f75:	ret    
  415f76:	fmul   QWORD PTR [ebx+ecx*8+0x79cdc56b]
  415f7d:	mov    ah,0x45
  415f7f:	es nop
  415f81:	xchg   esp,eax
  415f82:	cdq    
  415f83:	xor    al,0x97
  415f85:	cmp    cl,cl
  415f87:	test   BYTE PTR [eax+0x7f],dl
  415f8a:	rcl    ch,1
  415f8c:	mov    ebp,0x59ef1879
  415f91:	int    0xdd
  415f93:	push   0xba569907
  415f98:	push   ecx
  415f99:	adc    eax,0xc23b622a
  415f9e:	outs   dx,BYTE PTR ds:[esi]
  415f9f:	retf   
  415fa0:	adc    eax,esp
  415fa2:	inc    esp
  415fa3:	xor    BYTE PTR [edx-0x780c2955],0x74
  415faa:	fisubr DWORD PTR [ebx]
  415fac:	inc    edx
  415fad:	cmc    
  415fae:	jg     0x415ff6
  415fb0:	pop    esp
  415fb1:	mov    ebp,0x1ad4f699
  415fb6:	dec    esp
  415fb7:	inc    esi
  415fb8:	pop    eax
  415fb9:	outs   dx,BYTE PTR ds:[esi]
  415fba:	adc    al,0x61
  415fbc:	push   esp
  415fbd:	in     eax,dx
  415fbe:	out    dx,eax
  415fbf:	push   ebp
  415fc0:	in     al,dx
  415fc1:	mov    esi,0xacf671c8
  415fc6:	add    DWORD PTR [ebx+0x76],edx
  415fc9:	and    edi,0x8a063b39
  415fcf:	daa    
  415fd0:	mov    ds:0x56709106,eax
  415fd5:	int3   
  415fd6:	jb     0x415f62
  415fd8:	sub    eax,0xc4263f20
  415fdd:	jb     0x415fa4
  415fdf:	xchg   edx,eax
  415fe0:	(bad)  
  415fe1:	cli    
  415fe2:	je     0x41602c
  415fe4:	xchg   ebp,eax
  415fe5:	inc    ebp
  415fe6:	lods   eax,DWORD PTR ds:[esi]
  415fe7:	lds    ecx,FWORD PTR [ebx+0xc]
  415fea:	pop    esi
  415feb:	sbb    eax,0x9fd2354d
  415ff0:	mov    ds:0x797689ab,al
  415ff5:	xor    ebx,eax
  415ff7:	sahf   
  415ff8:	pop    esi
  415ff9:	mov    BYTE PTR [esi-0x6e],cl
  415ffc:	mov    eax,ecx
  415ffe:	or     al,0xf7
  416000:	cmp    BYTE PTR [eax],ah
  416002:	lea    ecx,[eax-0x2ef52460]
  416008:	shr    BYTE PTR [edi],cl
  41600a:	shl    DWORD PTR [edx+0x35],0x74
  41600e:	xchg   esp,eax
  41600f:	mov    ds:0x7ceb09ed,al
  416014:	jg     0x415fd1
  416016:	mov    al,0xce
  416018:	imul   edx,ebx,0xdd229a8
  41601e:	iret   
  41601f:	hlt    
  416020:	jecxz  0x415fad
  416022:	mov    cl,0xc6
  416024:	mov    eax,ds:0x40e00024
  416029:	shl    BYTE PTR [edx+ebp*1],0x6f
  41602d:	(bad)  
  41602e:	pop    ds
  41602f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416030:	mov    BYTE PTR [eax-0x4c],0x9b
  416034:	jmpw   0x7d06
  416038:	in     eax,0x52
  41603a:	sbb    al,0xfd
  41603c:	xchg   ecx,eax
  41603d:	lock or al,0xa7
  416040:	mov    ds:0x1a5a20d9,eax
  416045:	pop    es
  416046:	mov    al,0x12
  416048:	in     al,0xd6
  41604a:	push   ecx
  41604b:	sub    eax,0xf737
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x416088
  41605f:	out    dx,eax
  416060:	in     al,dx
  416061:	push   edi
  416062:	popa   
  416063:	fiadd  WORD PTR [eax]
  416065:	add    ah,dh
  416067:	add    al,0x0
  416069:	add    BYTE PTR [ebp+esi*8-0x28427ef0],dl
  416070:	imul   eax,DWORD PTR [ecx+0x3b8ff532],0xd5bce576
  41607a:	or     DWORD PTR [ebx],edx
  41607c:	mov    ah,0xc3
  41607e:	mov    al,0x2c
  416080:	and    edx,DWORD PTR [ecx-0x32847ba6]
  416086:	iret   
  416087:	sub    DWORD PTR [esi-0x45],ebx
  41608a:	or     eax,0xfbb27d0b
  41608f:	adc    ebp,DWORD PTR [ebp-0x720c21e4]
  416095:	add    eax,0xc4776ed1
  41609a:	jo     0x41603b
  41609c:	mov    bl,0xa9
  41609e:	adc    eax,0xc793910d
  4160a3:	inc    eax
  4160a4:	nop
  4160a5:	mov    ch,0x8c
  4160a7:	push   esi
  4160a8:	adc    DWORD PTR ds:0x61a9a400,edx
  4160ae:	dec    ebx
  4160af:	mov    edi,0x5e87b5b4
  4160b4:	scas   al,BYTE PTR es:[edi]
  4160b5:	xchg   esp,eax
  4160b6:	rdpmc  
  4160b8:	xor    bh,ah
  4160ba:	lahf   
  4160bb:	mov    ds:0xd9a3414e,eax
  4160c0:	pop    ebx
  4160c1:	int    0x9f
  4160c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c4:	pop    ebp
  4160c5:	mov    bl,0xe6
  4160c7:	mov    DWORD PTR [ebx-0x2be09fdd],edx
  4160cd:	dec    ebp
  4160ce:	push   edx
  4160cf:	sub    bl,BYTE PTR [ebp+0x4936dd19]
  4160d5:	addr16 aaa 
  4160d7:	cld    
  4160d8:	pop    es
  4160d9:	jp     0x41611d
  4160db:	sub    BYTE PTR [esi-0x47],dh
  4160de:	cmp    edi,eax
  4160e0:	adc    DWORD PTR [esi],ebx
  4160e2:	cmp    eax,0xbcc1b3bb
  4160e7:	shl    DWORD PTR [edi+0x38ce0225],1
  4160ed:	xor    al,0x9b
  4160ef:	inc    edi
  4160f0:	mov    esi,0x867353b0
  4160f5:	mov    edx,0x16671099
  4160fa:	dec    esi
  4160fb:	daa    
  4160fc:	mov    ah,BYTE PTR [eax]
  4160fe:	fmul   QWORD PTR [eax-0x12]
  416101:	add    dl,cl
  416103:	xchg   DWORD PTR [eax-0x26],ebp
  416106:	call   0xc78960f2
  41610b:	mov    al,ds:0xf6f00b21
  416110:	pop    ss
  416111:	mov    ecx,0x60984157
  416116:	xchg   esp,eax
  416117:	sbb    BYTE PTR [ecx],dl
  416119:	jmp    0x4160d1
  41611b:	push   ebx
  41611c:	jp     0x416166
  41611e:	inc    ebx
  41611f:	sbb    dh,bh
  416121:	xchg   dh,al
  416123:	push   ecx
  416124:	call   0xbab4:0x29bd0dca
  41612b:	lods   eax,DWORD PTR ds:[esi]
  41612c:	push   esp
  41612d:	mov    ch,0xd
  41612f:	enter  0x22ea,0xfe
  416133:	jge    0x416122
  416135:	int    0xb8
  416137:	mov    ds:0x766f5c6a,eax
  41613c:	or     BYTE PTR [ebp-0x76],dl
  41613f:	pop    esp
  416140:	out    0xf1,eax
  416142:	and    dl,BYTE PTR [ebp+eiz*4+0x5b]
  416146:	leave  
  416147:	mov    ch,0x32
  416149:	mov    edi,0x2bacefa0
  41614e:	and    al,0x49
  416150:	sub    al,0x76
  416152:	mov    al,dh
  416154:	fst    QWORD PTR [eax+0x33]
  416157:	mov    dh,0xda
  416159:	out    dx,eax
  41615a:	sub    ebp,DWORD PTR [ecx-0x7fcdcba2]
  416160:	mov    bl,0xb4
  416162:	xor    bl,BYTE PTR [edi+0xe]
  416165:	adc    DWORD PTR [edx-0x1e],ebp
  416168:	fs jb  0x4161a8
  41616b:	test   ebx,ebx
  41616d:	ret    
  41616e:	mov    ah,0xd
  416170:	sti    
  416171:	add    al,0xbd
  416173:	into   
  416174:	aas    
  416175:	retf   0xd110
  416178:	test   DWORD PTR [ecx+ecx*2],ecx
  41617b:	cwde   
  41617c:	jo     0x416144
  41617e:	mov    BYTE PTR [eax*1+0x4acd879],ch
  416185:	fsubp  st(7),st
  416187:	add    cl,BYTE PTR [ebx+0x4af3b419]
  41618d:	jle    0x416132
  41618f:	cs push 0xfffffff4
  416192:	bound  eax,QWORD PTR ds:0x56631bc1
  416198:	mov    bh,0x93
  41619a:	lods   eax,DWORD PTR ds:[esi]
  41619b:	xchg   BYTE PTR es:[esi+0x5b95158b],ah
  4161a2:	mov    ebp,0x3ee3a117
  4161a7:	sub    DWORD PTR [edx+0x26a0f1f1],ebp
  4161ad:	push   edx
  4161ae:	dec    edi
  4161af:	dec    ecx
  4161b0:	mov    bh,0x55
  4161b2:	jmp    0xbd8f8bdd
  4161b7:	cs lahf 
  4161b9:	mov    ebx,0xa1c057c2
  4161be:	pop    ss
  4161bf:	loop   0x416153
  4161c1:	mov    ds:0x5a5bf652,eax
  4161c6:	inc    ebx
  4161c7:	loope  0x4161d8
  4161c9:	(bad)  
  4161ca:	sbb    BYTE PTR [edi+0x5d9fa847],ah
  4161d0:	out    0xf7,al
  4161d2:	mov    dl,0xe1
  4161d4:	dec    edi
  4161d5:	std    
  4161d6:	mov    esi,0xb50791dd
  4161db:	mov    eax,ds:0x840c9175
  4161e0:	in     eax,dx
  4161e1:	sbb    edi,DWORD PTR [ecx+0x75]
  4161e4:	jmp    0x4161ef
  4161e6:	xor    ecx,esi
  4161e8:	mov    esi,0xe35a23ac
  4161ed:	mov    bl,0xb5
  4161ef:	call   0xd604:0x4c04d06f
  4161f6:	sub    BYTE PTR [eax+0x19210374],bh
  4161fc:	sub    dl,ah
  4161fe:	pusha  
  4161ff:	cmc    
  416200:	in     eax,0xe6
  416202:	cmp    eax,0x36aee0f6
  416207:	clc    
  416208:	pushf  
  416209:	inc    eax
  41620a:	inc    eax
  41620b:	ret    0x4eee
  41620e:	and    edx,DWORD PTR [ebx-0x7a]
  416211:	(bad)  
  416212:	pushf  
  416213:	lods   al,BYTE PTR ds:[esi]
  416214:	xor    esi,ecx
  416216:	test   eax,0x480c3031
  41621b:	fst    QWORD PTR [edx-0x3c511bd5]
  416221:	je     0x4161f5
  416223:	mov    esi,0x6ca04110
  416228:	pop    edx
  416229:	lods   al,BYTE PTR ds:[esi]
  41622a:	in     al,0x53
  41622c:	cmc    
  41622d:	lock ins DWORD PTR es:[edi],dx
  41622f:	in     al,dx
  416230:	and    al,0xe5
  416232:	jmp    0x416285
  416234:	pop    ebp
  416235:	sahf   
  416236:	xchg   DWORD PTR [edi],edx
  416238:	jmp    0xfe2b0d3a
  41623d:	sahf   
  41623e:	shr    ch,1
  416240:	xor    al,0x84
  416242:	mov    al,ds:0xd1007df2
  416247:	mov    ebp,0xee70918
  41624c:	mov    ecx,0xbe4d359d
  416251:	add    al,0x4c
  416253:	inc    ecx
  416254:	fcomp  QWORD PTR [edx-0x7f]
  416257:	fadd   DWORD PTR [edi-0x5125954b]
  41625d:	std    
  41625e:	shr    BYTE PTR [edi+0x18],cl
  416261:	pushf  
  416262:	push   ebx
  416263:	bound  esi,QWORD PTR [eax-0x69e0787a]
  416269:	int3   
  41626a:	js     0x41626a
  41626c:	mov    ah,0x71
  41626e:	push   0x9387fe4a
  416273:	inc    edi
  416274:	repz pop eax
  416276:	mov    bl,0xa6
  416278:	(bad)  
  416279:	adc    edi,edi
  41627b:	mov    esp,0xfe30b8e0
  416280:	(bad)  
  416281:	jmp    0x4162dc
  416283:	loopne 0x416281
  416285:	lock or al,0x1a
  416289:	popf   
  41628a:	xchg   esi,eax
  41628b:	or     BYTE PTR [ecx+0x16],0x30
  41628f:	aas    
  416290:	ins    BYTE PTR es:[edi],dx
  416291:	adc    al,al
  416293:	in     al,dx
  416294:	mov    bh,0x1c
  416296:	mov    edi,0x14c48afd
  41629b:	cwde   
  41629c:	cmp    esi,0x96ee30be
  4162a2:	sbb    ch,BYTE PTR ds:0xfdd1c53b
  4162a8:	jno    0x416252
  4162aa:	cmc    
  4162ab:	fdiv   DWORD PTR [ebp-0x362ce0e3]
  4162b1:	jnp    0x4162b3
  4162b3:	xchg   ebp,eax
  4162b4:	or     eax,0xd79e2ef1
  4162b9:	mov    ebp,0xc70869a
  4162be:	sub    BYTE PTR [edx+0x6153f454],dh
  4162c4:	ins    DWORD PTR es:[edi],dx
  4162c5:	ins    BYTE PTR es:[edi],dx
  4162c6:	or     eax,0xce8e1d65
  4162cb:	mov    bh,0xf6
  4162cd:	iret   
  4162ce:	sub    al,0x59
  4162d0:	in     al,dx
  4162d1:	or     DWORD PTR [ecx],ecx
  4162d3:	cmp    eax,esp
  4162d5:	hlt    
  4162d6:	push   edi
  4162d7:	sbb    al,0x92
  4162d9:	test   BYTE PTR [esi],0xd7
  4162dc:	pop    DWORD PTR [eax+0x2e]
  4162df:	jge    0x416267
  4162e1:	test   eax,0x3cc2bc65
  4162e6:	stc    
  4162e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e8:	or     eax,0x14ae8747
  4162ed:	aam    0xf8
  4162ef:	inc    ebp
  4162f0:	stos   BYTE PTR es:[edi],al
  4162f1:	xor    eax,0x4dc336af
  4162f6:	sbb    ch,bh
  4162f8:	mov    ebp,0x7f25c8e8
  4162fd:	rcr    DWORD PTR [ecx+0x76d151b0],0xfb
  416304:	bound  ecx,QWORD PTR [eax+0x38e0cf95]
  41630a:	sub    DWORD PTR [edx-0x268bf6ee],ebp
  416310:	adc    DWORD PTR [esi],edi
  416312:	call   0x37617dee
  416317:	fst    QWORD PTR [ecx-0x48479bb]
  41631d:	or     bl,al
  41631f:	retf   
  416320:	or     BYTE PTR [esi+0x606cd4a9],ah
  416326:	stos   BYTE PTR es:[edi],al
  416327:	xlat   BYTE PTR ds:[ebx]
  416328:	mov    ds:0xe5aa8ae6,eax
  41632d:	out    dx,al
  41632e:	dec    ecx
  41632f:	inc    ebp
  416330:	lahf   
  416331:	fisubr WORD PTR [ebx+ebp*2-0x2aedc49]
  416338:	test   al,0xf4
  41633a:	jnp    0x416379
  41633c:	sub    eax,0x800f0008
  416341:	lods   al,BYTE PTR ds:[esi]
  416342:	out    0x3e,eax
  416344:	enter  0x58dd,0x65
  416348:	or     BYTE PTR [edx-0x566239c],al
  41634e:	loope  0x416334
  416350:	sub    al,0xd2
  416352:	mov    ah,0x1e
  416354:	xor    al,0x28
  416356:	cmp    eax,0x15c29818
  41635b:	rol    esp,cl
  41635d:	mov    BYTE PTR [edx-0x70],dh
  416360:	mov    ds:0x40a9d10b,eax
  416365:	sub    cl,BYTE PTR [eax]
  416367:	mov    dh,0x6a
  416369:	into   
  41636a:	sbb    BYTE PTR [ebx-0x17649b5c],cl
  416370:	dec    ebx
  416371:	pop    edi
  416372:	sub    al,0x12
  416374:	aad    0xfa
  416376:	cmp    BYTE PTR [ebp-0x33],dh
  416379:	(bad)  
  41637a:	mov    esp,0x3327273c
  41637f:	inc    esi
  416380:	sti    
  416381:	push   ss
  416382:	fsubr  QWORD PTR [ebp+0x5f1aded2]
  416388:	cmp    eax,DWORD PTR [eax+eax*8]
  41638b:	mov    ebp,0x34fabf22
  416390:	scas   eax,DWORD PTR es:[edi]
  416391:	mov    ch,0x1f
  416393:	jo     0x416381
  416395:	dec    edx
  416396:	sub    DWORD PTR [esi+0xd],0xb8b57ed
  41639d:	bound  eax,QWORD PTR [edi+0x5f]
  4163a0:	aas    
  4163a1:	dec    esp
  4163a2:	inc    ebx
  4163a3:	add    edi,esi
  4163a5:	mov    eax,0xd0877c11
  4163aa:	(bad)  
  4163ac:	int3   
  4163ad:	push   0xdc803901
  4163b2:	adc    al,0x17
  4163b4:	into   
  4163b5:	jns    0x416360
  4163b7:	and    esp,ecx
  4163b9:	cwde   
  4163ba:	in     al,dx
  4163bb:	les    edx,FWORD PTR [edi]
  4163bd:	push   0x8e68f71d
  4163c2:	pop    esi
  4163c3:	push   esi
  4163c4:	mov    ebp,DWORD PTR [esi+0x19438423]
  4163ca:	mov    ch,0x8c
  4163cc:	int    0x85
  4163ce:	lock (bad) 
  4163d0:	cli    
  4163d1:	dec    esp
  4163d2:	fsub   QWORD PTR [ebx]
  4163d4:	imul   BYTE PTR [ebx+eiz*4]
  4163d7:	stos   BYTE PTR es:[edi],al
  4163d8:	sbb    cl,bh
  4163da:	shl    ch,cl
  4163dc:	mov    ebx,0x822f6b77
  4163e1:	imul   esi,eax,0x6f52ee6c
  4163e7:	add    al,0x3f
  4163e9:	add    DWORD PTR [edx],edx
  4163eb:	mov    dl,0xa1
  4163ed:	dec    ebp
  4163ee:	or     eax,0x9948fecd
  4163f3:	cmp    edx,DWORD PTR [esi]
  4163f5:	cli    
  4163f6:	mov    ecx,0x8dbc95a
  4163fb:	cmp    DWORD PTR [edi-0x3d],ebx
  4163fe:	cmp    esi,ebx
  416400:	lock adc bl,BYTE PTR [ebx+0x228019f8]
  416407:	test   eax,0x4613f7bc
  41640c:	retf   
  41640d:	or     eax,0xdc678c1b
  416412:	enter  0x5665,0x28
  416416:	out    0x16,al
  416418:	sar    BYTE PTR [ebx],1
  41641a:	out    dx,eax
  41641b:	push   ebx
  41641c:	pop    ss
  41641d:	lahf   
  41641e:	(bad)  
  416420:	mov    ebx,0x76907125
  416425:	test   DWORD PTR [edi],0xbad56bb2
  41642b:	loop   0x416488
  41642d:	inc    edx
  41642e:	xor    esi,DWORD PTR [eax-0x72]
  416431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416432:	xchg   ebp,eax
  416433:	shl    edx,0x1a
  416436:	jecxz  0x41640e
  416438:	pushf  
  416439:	ds loopne 0x41642a
  41643c:	out    0x1b,eax
  41643e:	ror    esp,1
  416440:	fisubr WORD PTR [ecx+edx*1]
  416443:	loop   0x416493
  416445:	jb     0x416443
  416447:	cmp    al,0x85
  416449:	fimul  DWORD PTR [ecx]
  41644b:	or     esi,DWORD PTR [eax+eiz*4]
  41644e:	fnstenv [eax+0x4093ccc3]
  416454:	or     eax,DWORD PTR [eax]
  416456:	inc    ebx
  416457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416458:	push   edx
  416459:	std    
  41645a:	push   eax
  41645b:	iret   
  41645c:	(bad)  
  41645d:	stos   BYTE PTR es:[edi],al
  41645e:	and    eax,0x9e079562
  416463:	sahf   
  416464:	pop    ebx
  416465:	gs sti 
  416467:	test   al,0x1e
  416469:	push   esp
  41646a:	js     0x4164b2
  41646c:	leave  
  41646d:	imul   ecx,esp,0xffffffbf
  416470:	jo     0x416477
  416472:	in     al,dx
  416473:	xlat   BYTE PTR ds:[ebx]
  416474:	rcl    eax,1
  416476:	adc    ah,BYTE PTR [edi+ebx*1+0x3bd0c675]
  41647d:	retf   
  41647e:	jae    0x416465
  416480:	xchg   edx,eax
  416481:	sub    eax,DWORD PTR ds:0x2eb1dd57
  416487:	pop    ecx
  416488:	sub    BYTE PTR [ecx+0x3a],0x78
  41648c:	xchg   BYTE PTR [ebp-0x6f],dl
  41648f:	cmp    ah,cl
  416491:	stos   BYTE PTR es:[edi],al
  416492:	(bad)  
  416493:	xchg   ebx,eax
  416494:	cwde   
  416495:	shr    BYTE PTR [eax+edi*2-0x78],1
  416499:	fcmovb st,st(4)
  41649b:	jo     0x41649b
  41649d:	xchg   DWORD PTR [ebx+ebp*8+0x6f843c5e],eax
  4164a4:	test   eax,0x1fb104d2
  4164a9:	in     al,dx
  4164aa:	pop    esi
  4164ab:	push   ebp
  4164ac:	dec    ebx
  4164ad:	sub    bh,BYTE PTR [edi]
  4164af:	and    DWORD PTR [edi],esi
  4164b1:	into   
  4164b2:	jmp    0xa6af0c99
  4164b7:	popa   
  4164b8:	dec    edi
  4164b9:	xor    eax,0xa57894b9
  4164be:	or     al,BYTE PTR [esi-0x37]
  4164c1:	jmp    0x9188:0x158f90af
  4164c8:	popf   
  4164c9:	mov    DWORD PTR [ecx],ebx
  4164cb:	cdq    
  4164cc:	cs in  eax,0x9
  4164cf:	push   DWORD PTR [eax]
  4164d1:	js     0x41645d
  4164d3:	into   
  4164d4:	mov    bh,0x26
  4164d6:	xor    ch,BYTE PTR [ebp+eiz*2+0x7f]
  4164da:	out    0xae,al
  4164dc:	mov    DWORD PTR [eax+0x47],esp
  4164df:	adc    ebx,ecx
  4164e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e2:	enter  0xd3e3,0xf2
  4164e6:	add    ecx,edi
  4164e8:	or     al,0x4f
  4164ea:	std    
  4164eb:	mov    al,0xc2
  4164ed:	fcmovnbe st,st(5)
  4164ef:	push   cs
  4164f0:	outs   dx,DWORD PTR ds:[esi]
  4164f1:	lods   al,BYTE PTR ds:[esi]
  4164f2:	(bad)  
  4164f3:	mov    ds:0xcfd7dcc4,al
  4164f8:	rcl    DWORD PTR [ebx-0x60109412],cl
  4164fe:	scas   al,BYTE PTR es:[edi]
  4164ff:	bound  ecx,QWORD PTR [eax-0x45]
  416502:	enter  0x588a,0x6c
  416506:	in     al,dx
  416507:	jl     0x416573
  416509:	imul   ebp,edi,0x53
  41650c:	fiadd  DWORD PTR [ebx+ebp*2]
  41650f:	mov    DWORD PTR [esp+edi*4+0x778052bf],edi
  416516:	push   edx
  416517:	es lock call 0xb7c0:0x514bbed7
  416520:	test   eax,0xb6545eb0
  416525:	sbb    eax,0x69b9304
  41652a:	adc    eax,0x873af03d
  41652f:	fdivr  st(2),st
  416531:	iret   
  416532:	cld    
  416533:	std    
  416534:	dec    ecx
  416535:	xor    ah,ah
  416537:	sbb    ecx,edi
  416539:	xchg   esp,eax
  41653a:	popa   
  41653b:	popa   
  41653c:	xor    dh,bl
  41653e:	fs int3 
  416540:	les    esi,FWORD PTR [esp+edi*2]
  416543:	rcl    dh,cl
  416545:	enter  0x602c,0x85
  416549:	ror    ah,cl
  41654b:	adc    ebp,DWORD PTR cs:0x1a8c2f1
  416552:	or     eax,0x25d3b6b4
  416557:	aad    0xca
  416559:	push   ecx
  41655a:	outs   dx,BYTE PTR ds:[esi]
  41655b:	and    BYTE PTR [esi],ch
  41655d:	inc    edx
  41655e:	add    BYTE PTR [eax],al
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xbef1
  41656f:	mov    edi,0xe3550a7d
  416574:	add    BYTE PTR [eax],al
  416576:	hlt    
  416577:	add    al,0x0
  416579:	add    BYTE PTR [edi],bl
  41657b:	inc    ebx
  41657c:	mov    esp,0xa2982017
  416581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416582:	adc    edi,ecx
  416584:	mov    edi,0xac5b70c4
  416589:	xchg   ebp,eax
  41658a:	outs   dx,DWORD PTR ds:[esi]
  41658b:	jbe    0x41653b
  41658d:	sub    DWORD PTR [ebx],edx
  41658f:	psubsw mm5,QWORD PTR [ecx]
  416592:	pusha  
  416593:	add    eax,0x2a54fe18
  416598:	(bad)  
  416599:	popa   
  41659a:	in     eax,0x3
  41659c:	jo     0x41652b
  41659e:	cmp    al,0xaf
  4165a0:	xor    al,0xb8
  4165a2:	stos   DWORD PTR es:[edi],eax
  4165a3:	ins    BYTE PTR es:[edi],dx
  4165a4:	and    BYTE PTR [edi],ch
  4165a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a7:	xor    dl,BYTE PTR [esp+edx*1]
  4165aa:	outs   dx,DWORD PTR ds:[esi]
  4165ab:	mov    edi,0x315159d3
  4165b0:	xor    eax,0xdd0fa9b8
  4165b5:	dec    ebx
  4165b6:	fisub  WORD PTR [ebp-0x2b]
  4165b9:	sub    DWORD PTR [ecx],edx
  4165bb:	(bad)  
  4165bc:	and    esp,edi
  4165be:	jae    0x416571
  4165c0:	ins    BYTE PTR es:[edi],dx
  4165c1:	push   ds
  4165c2:	sub    eax,0xac88cbe8
  4165c7:	ja     0x4165ff
  4165c9:	xchg   edx,eax
  4165ca:	sbb    DWORD PTR [ecx+0x2334a24d],ecx
  4165d0:	fdivrp st(0),st
  4165d2:	push   0x87407f19
  4165d7:	push   cs
  4165d8:	ins    DWORD PTR es:[edi],dx
  4165d9:	in     eax,0x1
  4165db:	stos   BYTE PTR es:[edi],al
  4165dc:	ja     0x4165dc
  4165de:	test   eax,0xac30ff20
  4165e3:	push   edx
  4165e4:	data16 shl bl,cl
  4165e7:	inc    esp
  4165e8:	imul   edx,DWORD PTR [edx-0x170022d6],0x71909aa
  4165f2:	loop   0x4165ab
  4165f4:	adc    bl,bl
  4165f6:	cld    
  4165f7:	mov    ecx,0x5df42236
  4165fc:	push   ebx
  4165fd:	jno    0x416615
  4165ff:	call   0x69b3:0x10d6ce5a
  416606:	add    DWORD PTR [ecx-0xa],0xffffffdc
  41660a:	mov    al,ds:0x366bd64c
  41660f:	mov    dh,0x69
  416611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416612:	mov    esi,DWORD PTR [edi]
  416614:	and    al,ah
  416616:	ins    BYTE PTR es:[edi],dx
  416617:	jle    0x4165d1
  416619:	aas    
  41661a:	test   al,0x5b
  41661c:	and    DWORD PTR [ebp-0x6c],esi
  41661f:	xlat   BYTE PTR ds:[ebx]
  416620:	adc    esp,edi
  416622:	and    dh,BYTE PTR [edx+0x5f]
  416625:	ret    0xbf4b
  416628:	jmp    0x41667b
  41662a:	pop    esi
  41662b:	int    0xe8
  41662d:	in     al,0xc0
  41662f:	xchg   ebx,eax
  416630:	push   0x10
  416632:	pop    edi
  416633:	jge    0x41663b
  416635:	jecxz  0x41667b
  416637:	stos   BYTE PTR es:[edi],al
  416638:	sub    cl,BYTE PTR ds:0xacd52912
  41663e:	mov    eax,ds:0x3d475fee
  416643:	xchg   ecx,eax
  416644:	sub    dl,dl
  416646:	addr16 pop es
  416648:	inc    ebp
  416649:	xor    BYTE PTR [ebp-0x7b3cb100],0x1c
  416650:	dec    ecx
  416651:	sub    al,0xc
  416653:	pop    ebp
  416654:	xchg   esi,eax
  416655:	xor    al,0x72
  416657:	pusha  
  416658:	test   al,ah
  41665a:	aas    
  41665b:	dec    ebx
  41665c:	push   esp
  41665d:	cmp    dh,dh
  41665f:	jbe    0x416682
  416661:	pop    edx
  416662:	pop    edx
  416663:	mov    BYTE PTR [ebx-0xc],0xe3
  416667:	xchg   ebx,eax
  416668:	or     bl,ch
  41666a:	lahf   
  41666b:	jl     0x41663e
  41666d:	(bad)  
  41666e:	sysexit 
  416670:	retf   0x535b
  416673:	(bad)  
  416674:	fdiv   st(7),st
  416676:	fist   WORD PTR [esi+esi*4]
  416679:	scas   eax,DWORD PTR es:[edi]
  41667a:	(bad)  
  41667b:	xchg   DWORD PTR [edi+0x3],edi
  41667e:	fdiv   QWORD PTR [ebp+eax*1-0x5e]
  416682:	inc    ebx
  416683:	sub    ebx,DWORD PTR [ebp-0x52]
  416686:	rcl    BYTE PTR [eax-0x39ecf673],cl
  41668c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668d:	data16 fcomi st,st(5)
  416690:	jg     0x41666e
  416692:	inc    edi
  416693:	or     bh,BYTE PTR [edx]
  416695:	mov    ebx,0x2303c211
  41669a:	in     al,0x52
  41669c:	sbb    edx,0xffffffdb
  41669f:	and    ch,BYTE PTR [eax]
  4166a1:	adc    BYTE PTR [edi],dh
  4166a3:	call   FWORD PTR [edx-0x36]
  4166a6:	pusha  
  4166a7:	out    0xf7,eax
  4166a9:	jnp    0x4166c2
  4166ab:	pop    eax
  4166ac:	push   eax
  4166ad:	in     eax,dx
  4166ae:	dec    ebp
  4166af:	pop    edi
  4166b0:	leave  
  4166b1:	and    ch,BYTE PTR [eax]
  4166b3:	(bad)  
  4166b4:	xchg   esi,eax
  4166b5:	push   eax
  4166b6:	(bad)  
  4166b7:	sahf   
  4166b8:	enter  0x9e65,0x5b
  4166bc:	shl    DWORD PTR [ebx+0x304a8b87],1
  4166c2:	addr16 (bad) 
  4166c4:	(bad)
  4166c7:	pop    eax
  4166c8:	les    eax,FWORD PTR [edi-0x72]
  4166cb:	or     BYTE PTR [ecx-0x29],dl
  4166ce:	(bad)  
  4166cf:	into   
  4166d0:	jmp    ebp
  4166d2:	cmp    BYTE PTR [edx+0x65],dl
  4166d5:	mov    ds,WORD PTR [esi-0x14]
  4166d8:	mov    ds:0x693b49ae,al
  4166dd:	mov    cl,0x27
  4166df:	pop    ds
  4166e0:	pop    esp
  4166e1:	cmc    
  4166e2:	dec    edx
  4166e3:	jne    0x416688
  4166e5:	push   cs
  4166e6:	push   es
  4166e7:	dec    edx
  4166e8:	in     eax,dx
  4166e9:	rcr    DWORD PTR [eax-0x54],cl
  4166ec:	test   eax,0xea0f11dd
  4166f1:	std    
  4166f2:	xlat   BYTE PTR ds:[ebx]
  4166f3:	call   0xe05e:0xdfa86fa8
  4166fa:	mov    eax,0xd2ee953a
  4166ff:	addr16 mov ds:0x1d64,eax
  416703:	push   ebp
  416704:	jmp    0xd28:0xca14ff72
  41670b:	lock cmp al,0x89
  41670e:	jle    0x416768
  416710:	(bad)  
  416711:	jle    0x416764
  416713:	jge    0x416728
  416715:	rol    DWORD PTR [ebp+0x71],0x50
  416719:	test   edx,ebx
  41671b:	jo     0x4166be
  41671d:	sub    al,0x6a
  41671f:	pop    esp
  416720:	and    al,0xdc
  416722:	pop    ecx
  416723:	es and al,0xe8
  416726:	adc    esi,DWORD PTR [edx]
  416728:	cld    
  416729:	push   ebx
  41672a:	ins    BYTE PTR es:[edi],dx
  41672b:	inc    esi
  41672c:	mov    edi,0xd9057412
  416731:	mov    bh,0x79
  416733:	mov    DWORD PTR [ecx-0x3e],eax
  416736:	cwde   
  416737:	cld    
  416738:	or     DWORD PTR [edx-0x21],eax
  41673b:	out    dx,al
  41673c:	add    eax,0x9b17da2
  416741:	push   ss
  416742:	xchg   ebx,eax
  416743:	jmp    0xa4dfff1e
  416748:	leave  
  416749:	sbb    cl,BYTE PTR [edx+0x7f037ede]
  41674f:	pop    edx
  416750:	outs   dx,BYTE PTR ds:[esi]
  416751:	call   0x59df:0x3bd91782
  416758:	std    
  416759:	loopne 0x416791
  41675b:	adc    al,BYTE PTR [edx]
  41675d:	popa   
  41675e:	pop    ebx
  41675f:	jbe    0x416749
  416761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416762:	test   ebp,eax
  416764:	je     0x416723
  416766:	mov    esi,0x11bb05d2
  41676b:	test   eax,0x199b3af7
  416770:	test   DWORD PTR [esi-0x196ea799],esi
  416776:	dec    edi
  416777:	inc    ebp
  416778:	push   es
  416779:	fadd   QWORD PTR [edi]
  41677b:	cmp    eax,DWORD PTR [eax+0x3c53356e]
  416781:	test   dl,cl
  416783:	retf   
  416784:	inc    ebx
  416785:	(bad)  
  416786:	xor    eax,0xfd66eca1
  41678b:	xchg   DWORD PTR [ebp-0x214cc5e9],edx
  416791:	imul   ecx,ebx,0x50
  416794:	lock leave 
  416796:	adc    al,0x57
  416798:	dec    ebx
  416799:	xchg   ch,al
  41679b:	ds and eax,0x99bcd6bd
  4167a1:	cmp    al,0x65
  4167a3:	xchg   ebx,eax
  4167a4:	cmp    BYTE PTR [eax-0x5],0xe2
  4167a8:	mov    ds:0x1ecdc508,eax
  4167ad:	pushf  
  4167ae:	add    eax,0xf44c2bbf
  4167b3:	sub    ah,0x5
  4167b6:	ins    DWORD PTR es:[edi],dx
  4167b7:	and    dl,0x98
  4167ba:	jmp    0x4167d8
  4167bc:	cwde   
  4167bd:	in     eax,0x94
  4167bf:	mov    ch,0xd5
  4167c1:	adc    ebp,DWORD PTR [ebp+esi*4+0x2d]
  4167c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c6:	inc    ecx
  4167c7:	test   BYTE PTR [ebp+0x33],dl
  4167ca:	dec    ecx
  4167cb:	(bad)  
  4167cc:	jmp    0x77b72197
  4167d1:	and    ebp,DWORD PTR [edx]
  4167d3:	mov    cl,0x60
  4167d5:	mov    al,ds:0xe144b163
  4167da:	jmp    0x4167dd
  4167dc:	mov    cl,0x93
  4167de:	jecxz  0x416828
  4167e0:	dec    bp
  4167e2:	pop    eax
  4167e3:	jmp    0x8895e1b5
  4167e8:	ds mov dh,0x16
  4167eb:	enter  0x8f03,0x5e
  4167ef:	xchg   esi,eax
  4167f0:	adc    dl,BYTE PTR [eax-0x38fed2f]
  4167f6:	inc    ebx
  4167f7:	cmp    eax,0x21abb397
  4167fc:	sbb    ah,ah
  4167fe:	cmp    eax,0x6087176
  416803:	iret   
  416804:	loop   0x416865
  416806:	aad    0xa0
  416808:	ins    BYTE PTR es:[edi],dx
  416809:	and    DWORD PTR [eax+0x32],esp
  41680c:	in     eax,dx
  41680d:	sbb    BYTE PTR [edx-0x79],cl
  416810:	popf   
  416811:	adc    al,0x53
  416813:	mov    esi,ebx
  416815:	sub    eax,0xe2b5eb37
  41681a:	or     eax,0x876cdf22
  41681f:	dec    edx
  416820:	fisub  WORD PTR [ebp+0x15]
  416823:	in     eax,dx
  416824:	fs out dx,eax
  416826:	add    BYTE PTR [esi+ecx*2+0x12ddc5ce],cl
  41682d:	jae    0x4167fb
  41682f:	xor    esp,DWORD PTR [ecx+edi*2+0x70]
  416833:	push   edi
  416834:	mov    bh,0x91
  416836:	mov    ds:0x9c12d24c,al
  41683b:	mov    ah,0xb8
  41683d:	repz (bad) 
  416840:	mov    edi,DWORD PTR [edx]
  416842:	add    eax,0xa3e6d650
  416847:	ficomp DWORD PTR [ebp-0x47c36caa]
  41684d:	add    esp,ecx
  41684f:	jmp    0xede79058
  416854:	test   eax,0x9e76a4b6
  416859:	(bad)  
  41685a:	mov    dl,0x25
  41685c:	fnsave [edi]
  41685e:	lahf   
  41685f:	sbb    eax,0x513e6ed4
  416864:	aaa    
  416865:	push   ss
  416866:	loop   0x4167e8
  416868:	mov    esp,0x967704e8
  41686d:	scas   eax,DWORD PTR es:[edi]
  41686e:	sti    
  41686f:	dec    BYTE PTR [edx]
  416871:	test   al,0x46
  416873:	or     eax,0xc1c9ae2b
  416878:	cmp    al,0x49
  41687a:	pop    ebp
  41687b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41687c:	dec    edi
  41687d:	fild   WORD PTR [edx-0x55]
  416880:	sahf   
  416881:	enter  0xc823,0xd6
  416885:	out    dx,al
  416886:	push   ss
  416887:	inc    eax
  416888:	cmp    ah,BYTE PTR [ebx-0x256d79f5]
  41688e:	mov    edx,0xad51a5dc
  416893:	mov    edi,0xa6afe626
  416898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416899:	add    bh,BYTE PTR [edi]
  41689b:	cs dec ebx
  41689d:	jg     0x4168b6
  41689f:	lea    esp,[eax+0x3ac7c780]
  4168a5:	or     al,0xc7
  4168a7:	sbb    BYTE PTR [esi+edi*1+0x10180894],0x31
  4168af:	scas   eax,DWORD PTR es:[edi]
  4168b0:	rcr    BYTE PTR [ecx],0xb0
  4168b3:	pop    edx
  4168b4:	or     eax,0x936e4ed9
  4168b9:	cmc    
  4168ba:	cmp    BYTE PTR [edx-0x4f],cl
  4168bd:	xlat   BYTE PTR ds:[ebx]
  4168be:	call   0x65a857c4
  4168c3:	into   
  4168c4:	dec    edi
  4168c5:	xchg   edi,eax
  4168c6:	lock mov WORD PTR ds:0x4234b8b7,gs
  4168cd:	mov    al,0x12
  4168cf:	adc    eax,0x49e3a291
  4168d4:	inc    esi
  4168d5:	imul   esp,ebp,0xffffffc8
  4168d8:	add    edi,DWORD PTR [esi]
  4168da:	dec    esp
  4168db:	out    0x25,al
  4168dd:	pop    edx
  4168de:	addr16 jg 0x41693a
  4168e1:	bound  ebp,QWORD PTR [ebp-0x42]
  4168e4:	pop    edx
  4168e5:	cld    
  4168e6:	out    0xc4,al
  4168e8:	out    0x40,eax
  4168ea:	scas   eax,DWORD PTR es:[edi]
  4168eb:	push   es
  4168ec:	jnp    0x416935
  4168ee:	jb     0x4168b0
  4168f0:	js     0x4168d7
  4168f2:	jg     0x4168f0
  4168f4:	or     BYTE PTR [ebp-0x58],ah
  4168f7:	pop    ecx
  4168f8:	retf   0xa0ab
  4168fb:	cdq    
  4168fc:	in     al,dx
  4168fd:	push   edx
  4168fe:	sub    edi,edx
  416900:	mov    al,0x61
  416902:	inc    edi
  416903:	xor    DWORD PTR [ebp+0x2d],0x14
  416907:	ss nop
  416909:	scas   al,BYTE PTR es:[edi]
  41690a:	jle    0x4168a4
  41690c:	mov    WORD PTR [eax],gs
  41690e:	xchg   esi,eax
  41690f:	in     eax,0xd9
  416911:	lods   eax,DWORD PTR ds:[esi]
  416912:	inc    esi
  416913:	inc    edx
  416914:	mov    ch,0x73
  416916:	pop    eax
  416917:	cwde   
  416918:	dec    esp
  416919:	xchg   ebx,eax
  41691a:	rcl    DWORD PTR [edx+0x4f],1
  41691d:	jae    0x4168d3
  41691f:	jecxz  0x4168c5
  416921:	stos   BYTE PTR es:[edi],al
  416922:	adc    DWORD PTR [ebp-0x6283f405],ebp
  416928:	mov    al,0x0
  41692a:	bound  esp,QWORD PTR [edi-0x4a]
  41692d:	dec    edx
  41692e:	scas   eax,DWORD PTR es:[edi]
  41692f:	sub    bh,BYTE PTR [esi+0xf4b5b44]
  416935:	mov    ?,WORD PTR [esi]
  416937:	xchg   al,ah
  416939:	push   cs
  41693a:	mov    WORD PTR [edi],?
  41693c:	test   eax,0x72da93f0
  416941:	mov    ?,WORD PTR [esi+ebx*2]
  416944:	jl     0x4168cb
  416946:	pop    ds
  416947:	xor    edi,DWORD PTR [ecx]
  416949:	fimul  WORD PTR [esi]
  41694b:	mov    cl,0x32
  41694d:	jno    0x416905
  41694f:	imul   esp,DWORD PTR ds:[edi+0xc87a83f],0xcc6d690a
  41695a:	aad    0x76
  41695c:	jge    0x4169c1
  41695e:	aaa    
  41695f:	js     0x416931
  416961:	sbb    ecx,DWORD PTR [ecx-0x10]
  416964:	shr    DWORD PTR [esi+0x2d],0x8b
  416968:	shr    esi,0x59
  41696b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41696c:	pop    ss
  41696d:	leave  
  41696e:	cmp    DWORD PTR [esi-0x59],eax
  416971:	jle    0x416981
  416973:	dec    edi
  416974:	cmp    BYTE PTR [edx-0x559895d2],dh
  41697a:	sti    
  41697b:	dec    esp
  41697c:	dec    esi
  41697d:	ror    BYTE PTR ds:0x9a3d03c8,cl
  416983:	push   esp
  416984:	cld    
  416985:	cmc    
  416986:	pop    ecx
  416987:	call   0x8d40:0x40a13fa1
  41698e:	adc    eax,0x6178deb5
  416993:	adc    DWORD PTR [esi],ebx
  416995:	xor    ch,BYTE PTR [edx]
  416997:	push   esp
  416998:	and    bl,BYTE PTR [esi]
  41699a:	push   ebp
  41699b:	mov    dl,bl
  41699d:	xor    DWORD PTR [esi+0x39],edx
  4169a0:	push   ebp
  4169a1:	jg     0x4169be
  4169a3:	in     eax,0xdf
  4169a5:	add    eax,0xb09aa3b0
  4169aa:	das    
  4169ab:	dec    edi
  4169ac:	cwde   
  4169ad:	xchg   edx,eax
  4169ae:	jl     0x416a13
  4169b0:	imul   ebp,DWORD PTR [ebx+0x9469e3a],0xffffffc5
  4169b7:	cmp    dh,BYTE PTR [eax]
  4169b9:	sbb    cl,BYTE PTR [esi+0x76]
  4169bc:	fisubr DWORD PTR [ecx+0x72]
  4169bf:	imul   edx,DWORD PTR [ebx],0xffffffb5
  4169c2:	pop    ebp
  4169c3:	bound  edx,QWORD PTR [esi-0x5a87f4db]
  4169c9:	jmp    0x1cd5:0x16fd26f4
  4169d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d1:	or     edi,ebx
  4169d3:	pushaw 
  4169d5:	popa   
  4169d6:	imul   edi,ebx,0xc970d4d1
  4169dc:	fdiv   QWORD PTR [ebp-0x199d6288]
  4169e2:	xchg   edi,eax
  4169e3:	pop    eax
  4169e4:	or     DWORD PTR [ecx+0x70a2bf06],esp
  4169ea:	mov    ah,0x2d
  4169ec:	cmp    BYTE PTR [ebp+ebp*1+0x7c],dh
  4169f0:	xlat   BYTE PTR ds:[ebx]
  4169f1:	pop    ebx
  4169f2:	mov    ds:0x3439d676,eax
  4169f7:	(bad)  [eax]
  4169f9:	mov    BYTE PTR [esi+ecx*8-0x4d33f838],bh
  416a00:	sbb    eax,0x43d62fec
  416a05:	call   0x63e98347
  416a0a:	ins    BYTE PTR es:[edi],dx
  416a0b:	mov    ds:0x1cb93682,eax
  416a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a11:	push   es
  416a12:	imul   edx,DWORD PTR [esi-0x20],0xffffff8e
  416a16:	jns    0x4169e5
  416a18:	es push eax
  416a1a:	add    DWORD PTR [edx+0xd],ebx
  416a1d:	pushf  
  416a1e:	jb     0x4169b2
  416a20:	loopne 0x416a26
  416a22:	or     ecx,DWORD PTR [esi-0x3e]
  416a25:	cwde   
  416a26:	or     ecx,DWORD PTR [eax+0x49c12cca]
  416a2c:	int3   
  416a2d:	dec    edx
  416a2e:	mov    ah,0x5c
  416a30:	shl    DWORD PTR [eax],cl
  416a32:	push   ebx
  416a33:	push   ss
  416a34:	call   0xe2bd78fb
  416a39:	push   esp
  416a3a:	inc    ebp
  416a3b:	test   eax,0x63297391
  416a40:	fstp   DWORD PTR [edi+eax*1+0x40]
  416a44:	jnp    0x416a29
  416a46:	out    dx,eax
  416a47:	pop    es
  416a48:	pop    es
  416a49:	pop    ebp
  416a4a:	xor    eax,0x4f718736
  416a4f:	ror    DWORD PTR [eax+0x5e96c1b3],cl
  416a55:	adc    edx,DWORD PTR [edi+0x2641fdf3]
  416a5b:	fwait
  416a5c:	ss pop es
  416a5e:	retf   
  416a5f:	ret    0xd22c
  416a62:	push   ss
  416a63:	and    BYTE PTR [edi+esi*8],dl
  416a66:	int    0xab
  416a68:	xchg   esp,eax
  416a69:	sbb    dl,BYTE PTR [ebx]
  416a6b:	push   esi
  416a6c:	(bad)  
  416a6d:	mov    eax,ds:0x0
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x90c478b],cl
  416a7f:	ror    DWORD PTR [eax+0x4],cl
  416a82:	dec    ecx
  416a83:	call   0x5356a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	cmp    eax,0x89eba7a4
  416a8f:	subps  xmm2,XMMWORD PTR [edi+eiz*1]
  416a93:	stc    
  416a94:	in     ax,dx
  416a96:	(bad)  
  416a97:	in     eax,dx
  416a98:	mov    WORD PTR [edx+0x1e032ac2],?
  416a9e:	icebp  
  416a9f:	cmp    ebx,esi
  416aa1:	ds jecxz 0x416acf
  416aa4:	pop    es
  416aa5:	xor    eax,0xe4b13335
  416aaa:	call   0xc6c1f95b
  416aaf:	data16 fsubrp st(6),st
  416ab2:	icebp  
  416ab3:	test   eax,0x70c1df07
  416ab8:	mov    dl,0x27
  416aba:	ins    DWORD PTR es:[edi],dx
  416abb:	xchg   cl,dl
  416abd:	shr    BYTE PTR [edi+0x4b],0x7
  416ac1:	test   eax,0x66b7a61e
  416ac6:	jno    0x416b34
  416ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ac9:	sahf   
  416aca:	jbe    0x416aff
  416acc:	test   BYTE PTR [ebp-0x6b],bh
  416acf:	je     0x416aa0
  416ad1:	and    eax,0x6aa419c3
  416ad6:	ror    BYTE PTR [ecx+esi*4-0x2a],cl
  416ada:	mov    dl,0xed
  416adc:	jg     0x416aea
  416ade:	pushf  
  416adf:	nop
  416ae0:	pusha  
  416ae1:	aaa    
  416ae2:	rcr    BYTE PTR [esi+0x2e2de5f6],1
  416ae8:	cmp    al,0xec
  416aea:	data16 sbb al,0x21
  416aed:	scas   eax,DWORD PTR es:[edi]
  416aee:	arpl   di,di
  416af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af1:	jae    0x416b17
  416af3:	jae    0x416b72
  416af5:	fsubr  QWORD PTR [ecx+0x2fa1537a]
  416afb:	pop    edi
  416afc:	cmp    DWORD PTR [edx+0x4d],edx
  416aff:	sub    ah,BYTE PTR [ecx-0x68]
  416b02:	pop    ecx
  416b03:	(bad)  
  416b04:	mov    edi,0x2eebd572
  416b09:	repz add dh,BYTE PTR [ecx-0x75]
  416b0d:	fisttp WORD PTR [edi]
  416b0f:	in     eax,0xcd
  416b11:	das    
  416b12:	(bad)  
  416b13:	xor    al,0x2b
  416b15:	mov    WORD PTR [esi-0x1aba5632],fs
  416b1b:	dec    ecx
  416b1c:	add    eax,0x81767978
  416b21:	test   DWORD PTR [edi],ecx
  416b23:	fcmovnb st,st(4)
  416b25:	and    ebp,DWORD PTR [ecx+0x1d]
  416b28:	fcmove st,st(2)
  416b2a:	mov    dl,0x4e
  416b2c:	sbb    eax,0xda550478
  416b31:	mov    bl,0x5e
  416b33:	and    ah,BYTE PTR [eax+0x27afa64e]
  416b39:	mov    edi,0xcfa4710
  416b3e:	clc    
  416b3f:	jmp    0x73da:0x5659e5f8
  416b46:	xor    BYTE PTR [ebp+eax*1-0x76b41dee],0x24
  416b4e:	dec    ebp
  416b4f:	mov    cl,0x44
  416b51:	sbb    al,0x9a
  416b53:	pusha  
  416b54:	call   0x37597319
  416b59:	jl     0x416b34
  416b5b:	lods   eax,DWORD PTR ds:[esi]
  416b5c:	mov    dh,0x4b
  416b5e:	cs push edi
  416b60:	inc    ebx
  416b61:	fwait
  416b62:	sahf   
  416b63:	retf   
  416b64:	adc    cl,BYTE PTR [ecx]
  416b66:	or     dl,bh
  416b68:	pop    ss
  416b69:	xor    cl,BYTE PTR [ecx-0x4a]
  416b6c:	jns    0x416b65
  416b6e:	ds push edx
  416b70:	xchg   ebp,eax
  416b71:	add    DWORD PTR [edx-0x50],0x43
  416b75:	fidivr WORD PTR [eax+0x15cafa70]
  416b7b:	scas   al,BYTE PTR es:[edi]
  416b7c:	dec    ecx
  416b7d:	push   edx
  416b7e:	imul   ebp,DWORD PTR [ebx-0x7f5a56df],0xffffffbe
  416b85:	pop    eax
  416b86:	call   0x863d4b8f
  416b8b:	jae    0x416bee
  416b8d:	push   ss
  416b8e:	loopne 0x416bb0
  416b90:	in     eax,dx
  416b91:	int    0x5b
  416b93:	pop    edi
  416b94:	push   0x5c
  416b96:	pop    edx
  416b97:	icebp  
  416b98:	inc    eax
  416b99:	sbb    eax,0xc745f4d0
  416b9e:	mov    WORD PTR [edx-0x39],?
  416ba1:	mov    ah,0xb0
  416ba3:	mov    ah,0xb7
  416ba5:	xor    BYTE PTR [ecx],dl
  416ba7:	dec    ebp
  416ba8:	sbb    eax,0x473094a2
  416bad:	sbb    dh,BYTE PTR [esi]
  416baf:	sub    DWORD PTR gs:[ebx+0x75bd2c00],ebx
  416bb6:	lods   al,BYTE PTR ds:[esi]
  416bb7:	push   eax
  416bb8:	adc    BYTE PTR [edi+0x67],dl
  416bbb:	cmc    
  416bbc:	leave  
  416bbd:	fs jmp 0xe2b8:0xd04e6be5
  416bc5:	push   edx
  416bc6:	loope  0x416bcd
  416bc8:	imul   ebp,DWORD PTR [eax],0xa754acdb
  416bce:	lea    ebx,[edx]
  416bd0:	fidivr WORD PTR [ebp+0x55b5aac2]
  416bd6:	or     BYTE PTR [edi-0x21],bh
  416bd9:	fwait
  416bda:	outs   dx,DWORD PTR ds:[esi]
  416bdb:	retf   
  416bdc:	xor    eax,0xde39976
  416be1:	test   ebx,ebx
  416be3:	xor    BYTE PTR [ebp-0x21b0beaf],cl
  416be9:	data16 sbb ah,0x3
  416bed:	int    0xc7
  416bef:	sahf   
  416bf0:	stc    
  416bf1:	push   edi
  416bf2:	xor    ecx,DWORD PTR [edx]
  416bf4:	mov    es,WORD PTR [edx+0x35]
  416bf7:	ret    
  416bf8:	sbb    dl,BYTE PTR [ebx]
  416bfa:	into   
  416bfb:	xor    al,0xb4
  416bfd:	enter  0x59fa,0x2e
  416c01:	jle    0x416b9b
  416c03:	mov    edx,0xcadac1a5
  416c08:	jp     0x416b9b
  416c0a:	call   0x667b6158
  416c0f:	repz test DWORD PTR [eax-0x17],eax
  416c13:	lods   eax,DWORD PTR ds:[esi]
  416c14:	push   0x9
  416c16:	(bad)  
  416c17:	inc    esp
  416c18:	in     al,dx
  416c19:	cmc    
  416c1a:	lahf   
  416c1b:	inc    eax
  416c1c:	sub    esp,esp
  416c1e:	cmc    
  416c1f:	jge    0x416c31
  416c21:	pop    esi
  416c22:	gs adc esi,esi
  416c25:	and    DWORD PTR [edi+0x30b76b49],edi
  416c2b:	pop    edi
  416c2c:	aam    0xd8
  416c2e:	sub    BYTE PTR [ecx],dh
  416c30:	les    ebp,FWORD PTR [esi+0x1b]
  416c33:	lahf   
  416c34:	in     al,0x72
  416c36:	es pop ebp
  416c38:	leave  
  416c39:	pop    esi
  416c3a:	push   es
  416c3b:	hlt    
  416c3c:	test   al,0xa0
  416c3e:	cdq    
  416c3f:	in     eax,dx
  416c40:	push   edx
  416c41:	mov    esi,0x8761a084
  416c46:	sub    al,0x79
  416c48:	pop    ecx
  416c49:	ror    esp,0x7a
  416c4c:	mov    dh,dh
  416c4e:	sub    BYTE PTR [ebp-0x80],0xa7
  416c52:	or     ah,BYTE PTR [ebp+0xf]
  416c55:	mov    ebx,0x6366ccf8
  416c5a:	sahf   
  416c5b:	xchg   ebp,eax
  416c5c:	push   ebx
  416c5d:	mov    al,bh
  416c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c60:	test   al,0x66
  416c62:	inc    ecx
  416c63:	mov    ecx,0x6f5043a2
  416c68:	cld    
  416c69:	mov    cl,0xab
  416c6b:	fs cwde 
  416c6d:	loop   0x416c69
  416c6f:	dec    edi
  416c70:	xchg   DWORD PTR [eax-0x75],edi
  416c73:	jno    0x416c0c
  416c75:	daa    
  416c76:	addr16 inc esp
  416c78:	ror    BYTE PTR [edx+0x4],1
  416c7b:	rcr    BYTE PTR [edi-0x4198a2b0],0xe9
  416c82:	cmp    eax,0x2784ec3d
  416c87:	inc    ecx
  416c88:	mov    cl,0x2f
  416c8a:	inc    ebx
  416c8b:	popa   
  416c8c:	int3   
  416c8d:	inc    edi
  416c8e:	push   cs
  416c8f:	sbb    eax,0x3633cbcc
  416c94:	jb     0x416c88
  416c96:	sub    dh,BYTE PTR [ecx+0x7846ffd]
  416c9c:	pop    ebp
  416c9d:	sub    al,0xa9
  416c9f:	mov    DWORD PTR [ecx+edi*2-0x28],ecx
  416ca3:	mov    ds:0xb2c15aea,al
  416ca8:	nop
  416ca9:	adc    al,0x4c
  416cab:	and    eax,ebp
  416cad:	and    BYTE PTR [edx],ch
  416caf:	outs   dx,BYTE PTR ds:[esi]
  416cb0:	rcl    esp,1
  416cb2:	adc    dh,ah
  416cb4:	(bad)  
  416cb5:	aad    0x11
  416cb7:	mov    ch,0x9f
  416cb9:	lods   al,BYTE PTR ds:[esi]
  416cba:	mov    ah,0x8b
  416cbc:	dec    eax
  416cbd:	lea    ecx,[edx+0x20]
  416cc0:	sub    BYTE PTR [esi-0x22],0xd5
  416cc4:	lods   al,BYTE PTR ds:[esi]
  416cc5:	jmpw   0x28e0
  416cc9:	xchg   ebp,eax
  416cca:	ret    0x6b51
  416ccd:	popf   
  416cce:	(bad)  
  416ccf:	xor    esi,DWORD PTR es:[edx]
  416cd2:	and    eax,0x5764680e
  416cd7:	ret    
  416cd8:	pop    ds
  416cd9:	sub    eax,0xd8fe9d99
  416cde:	adc    DWORD PTR [ebx-0x51],esp
  416ce1:	and    bh,dl
  416ce3:	cdq    
  416ce4:	sub    edx,DWORD PTR [ecx-0x4a1fb6f1]
  416cea:	int3   
  416ceb:	iret   
  416cec:	stos   BYTE PTR es:[edi],al
  416ced:	hlt    
  416cee:	add    DWORD PTR [ebx-0x6e3a573],0xc4b3f99d
  416cf8:	push   ds
  416cf9:	dec    esp
  416cfa:	lods   eax,DWORD PTR ds:[esi]
  416cfb:	call   DWORD PTR [edi+0x66]
  416cfe:	jmp    0xe1d3:0x484f5348
  416d05:	jbe    0x416d5c
  416d07:	scas   al,BYTE PTR es:[edi]
  416d08:	push   edi
  416d09:	mov    ds,edx
  416d0b:	(bad)  
  416d0c:	jne    0x416cfc
  416d0e:	sub    al,0x6d
  416d10:	add    al,0x3
  416d12:	push   edi
  416d13:	ret    0xa74a
  416d16:	in     al,0x71
  416d18:	les    esp,FWORD PTR [ebx]
  416d1a:	out    0x29,eax
  416d1c:	popa   
  416d1d:	or     BYTE PTR [ecx],bl
  416d1f:	push   ds
  416d20:	shl    BYTE PTR [ebx+0x50],0x1
  416d24:	outs   dx,DWORD PTR ds:[esi]
  416d25:	leave  
  416d26:	mov    ah,0x1f
  416d28:	add    DWORD PTR [esi+0x7c],0x16fc06b2
  416d2f:	mov    DWORD PTR [esi],esp
  416d31:	retf   0xe22
  416d34:	push   cs
  416d35:	pop    ss
  416d36:	leave  
  416d37:	push   edi
  416d38:	mov    ds:0xa67fb9d,eax
  416d3d:	jge    0x416d58
  416d3f:	loopne 0x416cd3
  416d41:	add    al,0x6a
  416d43:	(bad)  
  416d44:	(bad)  
  416d45:	aaa    
  416d46:	sub    eax,0xa00010a5
  416d4b:	inc    eax
  416d4c:	push   cs
  416d4d:	and    eax,0x7827da8b
  416d52:	jle    0x416d4d
  416d54:	or     bl,dl
  416d56:	fdivp  st(7),st
  416d58:	mov    cs,WORD PTR [edi]
  416d5a:	or     ebx,esi
  416d5c:	mov    ebp,DWORD PTR [ebx-0x638cde3]
  416d62:	jo     0x416d83
  416d64:	dec    DWORD PTR [edi-0x36]
  416d67:	xor    al,0x45
  416d69:	and    DWORD PTR [ecx-0x12],0x30
  416d6d:	stos   BYTE PTR es:[edi],al
  416d6e:	adc    al,0x8b
  416d70:	popa   
  416d71:	std    
  416d72:	jbe    0x416d4b
  416d74:	jmp    0x2bec:0xbf7c4bae
  416d7b:	xor    BYTE PTR [edi],dh
  416d7d:	xchg   edi,eax
  416d7e:	int3   
  416d7f:	out    0xe7,al
  416d81:	push   0x60
  416d83:	retf   
  416d84:	dec    ebx
  416d85:	icebp  
  416d86:	test   eax,0xac091920
  416d8b:	or     al,0x17
  416d8d:	jmp    0x740c:0xda698316
  416d94:	popf   
  416d95:	imul   esp,edi,0xfffffff7
  416d98:	push   ebp
  416d99:	int3   
  416d9a:	adc    eax,0x23b4a838
  416d9f:	mov    ah,0x30
  416da1:	add    BYTE PTR [edx+0x16],0xf0
  416da5:	dec    ecx
  416da6:	int3   
  416da7:	lods   al,BYTE PTR ds:[esi]
  416da8:	xchg   ebp,eax
  416da9:	add    bh,BYTE PTR ds:0x252acf08
  416daf:	mov    cl,0xdd
  416db1:	and    cl,BYTE PTR [esi-0x63b0db1c]
  416db7:	ja     0x416e25
  416db9:	retf   0xf77d
  416dbc:	add    al,0xf8
  416dbe:	mov    WORD PTR ds:0xacf105f5,fs
  416dc4:	sub    al,0x21
  416dc6:	mov    ebp,0xf96b0924
  416dcb:	mov    WORD PTR [edx-0x7b106202],?
  416dd1:	lods   eax,DWORD PTR ds:[esi]
  416dd2:	mov    ebp,0x9bf4e14d
  416dd7:	add    esp,ebx
  416dd9:	pop    eax
  416dda:	jg     0x416ddc
  416ddc:	cdq    
  416ddd:	cmp    eax,0x2d2b377a
  416de2:	(bad)  
  416de4:	cmp    esi,DWORD PTR [edx+0xa]
  416de7:	iret   
  416de8:	add    DWORD PTR [esi+0x3d],eax
  416deb:	pop    esp
  416dec:	and    al,0x64
  416dee:	xor    dl,BYTE PTR [esi-0x4c]
  416df1:	in     al,dx
  416df2:	dec    esp
  416df3:	stos   DWORD PTR es:[edi],eax
  416df4:	xor    al,0x4
  416df6:	sbb    DWORD PTR [ecx],ecx
  416df8:	mov    eax,0x1ba3c4cd
  416dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dfe:	imul   esi,esp,0xf991be1e
  416e04:	jge    0x416e03
  416e06:	popf   
  416e07:	rcl    BYTE PTR [eax-0x2a],1
  416e0a:	xor    al,0xd8
  416e0c:	dec    ebp
  416e0d:	cmp    al,0x61
  416e0f:	in     eax,0x18
  416e11:	es test al,0xa7
  416e14:	daa    
  416e15:	(bad)  
  416e16:	aam    0x42
  416e18:	out    0xf1,al
  416e1a:	push   es
  416e1b:	loop   0x416e28
  416e1d:	mov    WORD PTR [ebp+0x7],cs
  416e20:	loope  0x416e3c
  416e22:	mov    bl,0x24
  416e24:	out    0x4b,al
  416e26:	les    ecx,FWORD PTR [ebx+0x5f]
  416e29:	and    esi,esi
  416e2b:	js     0x416db9
  416e2d:	xchg   esi,eax
  416e2e:	jnp    0x416e1f
  416e30:	fcmovbe st,st(3)
  416e32:	adc    esi,edi
  416e34:	enter  0x82d,0x16
  416e38:	xor    al,0x48
  416e3a:	dec    ebx
  416e3b:	out    0xd0,al
  416e3d:	dec    edi
  416e3e:	cdq    
  416e3f:	and    esp,ecx
  416e41:	jo     0x416e6f
  416e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e44:	and    bl,BYTE PTR [ebp-0x15]
  416e47:	cmp    eax,0x8c52a543
  416e4c:	mov    cl,0x18
  416e4e:	in     al,dx
  416e4f:	fmul   st,st(5)
  416e51:	cmp    DWORD PTR [eax+0x615fffa6],0x7c
  416e58:	rcr    DWORD PTR [esi-0x6e],cl
  416e5b:	sbb    edi,DWORD PTR [ebx+0x17]
  416e5e:	lea    edx,[ebx]
  416e60:	and    al,0xf7
  416e62:	mov    dh,0x11
  416e64:	push   ss
  416e65:	addr16 out dx,al
  416e67:	popf   
  416e68:	rcl    al,1
  416e6a:	out    0x98,al
  416e6c:	cmp    eax,0xae68432c
  416e71:	mov    ch,0xa1
  416e73:	cmp    bl,bh
  416e75:	adc    al,BYTE PTR [esi+0x767a64f9]
  416e7b:	xchg   edx,eax
  416e7c:	popa   
  416e7d:	mov    ch,0x90
  416e7f:	cdq    
  416e80:	dec    edi
  416e81:	loopne 0x416e39
  416e83:	or     al,dl
  416e85:	ins    BYTE PTR es:[edi],dx
  416e86:	cmc    
  416e87:	sub    dh,BYTE PTR [ecx]
  416e89:	cdq    
  416e8a:	cmp    al,0x7d
  416e8c:	xchg   ecx,eax
  416e8d:	out    0xbd,eax
  416e8f:	sbb    BYTE PTR [ecx+0x6e6ac85e],al
  416e95:	xchg   ebx,eax
  416e97:	or     bl,BYTE PTR ds:0x7e4d23dd
  416e9d:	jmp    0xfa7db3ef
  416ea2:	mov    ch,0x29
  416ea4:	aam    0x44
  416ea6:	mov    al,0x42
  416ea8:	push   esp
  416ea9:	push   0xffffffa5
  416eab:	cli    
  416eac:	leave  
  416ead:	mov    bl,0xae
  416eaf:	call   0x9499db7
  416eb4:	sub    dl,BYTE PTR [edi-0x7c]
  416eb7:	int3   
  416eb8:	push   ecx
  416eb9:	pushf  
  416eba:	jne    0x416e7a
  416ebc:	in     al,dx
  416ebd:	dec    eax
  416ebe:	pop    ebx
  416ebf:	pop    edx
  416ec0:	arpl   WORD PTR [edi],bp
  416ec2:	jp     0x416e62
  416ec4:	(bad)  [edi]
  416ec6:	sbb    BYTE PTR [edi],dh
  416ec8:	xlat   BYTE PTR ds:[ebx]
  416ec9:	mov    DWORD PTR [edi-0x6e],edi
  416ecc:	icebp  
  416ecd:	mov    eax,0x56cfec95
  416ed2:	aaa    
  416ed3:	repz sbb eax,0xecad23e2
  416ed9:	or     BYTE PTR [esi+0x7c36afc3],cl
  416edf:	add    eax,0x76e8e7e7
  416ee4:	sti    
  416ee5:	(bad)
  416ee9:	mov    ds:0xa2fece34,al
  416eee:	mov    ds:0xca08b8,al
  416ef3:	and    cl,BYTE PTR [eax-0x7292d625]
  416ef9:	fwait
  416efa:	mov    edi,0xc36565d
  416eff:	mov    dl,0xf8
  416f01:	cmp    BYTE PTR ds:0xfc8e3ef8,ah
  416f07:	xchg   ebp,eax
  416f08:	adc    al,0xb7
  416f0a:	jmp    0x3ab81265
  416f0f:	and    eax,0x8950d806
  416f14:	mov    eax,0x6f7ea0a3
  416f19:	jns    0x416f14
  416f1b:	popf   
  416f1c:	pop    ebp
  416f1d:	push   0xce5811c1
  416f22:	shl    DWORD PTR [eax-0x2c],cl
  416f25:	pushf  
  416f26:	or     dh,cl
  416f28:	jae    0x416f34
  416f2a:	(bad)  
  416f2b:	test   al,0xf7
  416f2d:	das    
  416f2e:	ds (bad) 
  416f30:	and    esi,DWORD PTR [edx+0x19]
  416f33:	jmp    0xe112189
  416f38:	ss scas al,BYTE PTR es:[edi]
  416f3a:	or     ecx,esi
  416f3c:	ror    DWORD PTR [edi-0x5c323e4b],1
  416f42:	and    ch,0x8b
  416f45:	add    eax,0x6a4862f4
  416f4a:	aaa    
  416f4b:	aad    0xc7
  416f4d:	xchg   edi,eax
  416f4e:	xchg   ebp,eax
  416f4f:	pop    edx
  416f50:	das    
  416f51:	jo     0x416f08
  416f53:	(bad)  
  416f54:	daa    
  416f55:	lods   al,BYTE PTR ds:[esi]
  416f56:	push   ss
  416f57:	add    bh,ah
  416f59:	add    bl,ch
  416f5b:	shl    DWORD PTR [edx+0x4c],0x51
  416f5f:	inc    cl
  416f61:	xchg   BYTE PTR [edi],cl
  416f63:	push   esp
  416f64:	or     cl,dh
  416f66:	outs   dx,DWORD PTR ds:[esi]
  416f67:	dec    eax
  416f68:	xor    BYTE PTR [edx],bl
  416f6a:	ins    BYTE PTR es:[edi],dx
  416f6b:	xor    BYTE PTR [ecx+0x6903fe3d],dh
  416f71:	or     DWORD PTR [ebp+0x141c1cc2],esi
  416f77:	fcmovnb st,st(5)
  416f79:	pushf  
  416f7a:	fwait
  416f7b:	call   0x425a47
  416f80:	add    BYTE PTR [eax],al
  416f82:	push   ebp
  416f83:	sub    al,0x5f
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x701cf626]
  416f90:	adc    dh,dh
  416f92:	cmp    eax,0xf40000ed
  416f97:	add    al,0x0
  416f99:	add    BYTE PTR [edi],ch
  416f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9c:	dec    edx
  416f9d:	dec    esp
  416f9e:	daa    
  416f9f:	cmp    eax,0xb7ab6b3a
  416fa4:	pop    ss
  416fa5:	cmp    esi,esi
  416fa7:	dec    ebx
  416fa8:	ja     0x416ffb
  416faa:	mov    al,ds:0xc1991848
  416faf:	orps   xmm3,XMMWORD PTR [ebp+eax*8-0xc]
  416fb4:	retf   0x6d4a
  416fb7:	mov    dl,0xd6
  416fb9:	out    dx,al
  416fba:	test   eax,0x12c0f2c
  416fbf:	cmp    al,0xf0
  416fc1:	xor    ah,ch
  416fc3:	sahf   
  416fc4:	jge    0x416fd9
  416fc6:	std    
  416fc7:	cwde   
  416fc8:	mov    ch,0x16
  416fca:	adc    eax,DWORD PTR [esi+0x1c]
  416fcd:	jge    0x416fe6
  416fcf:	ja     0x416f8f
  416fd1:	add    eax,0xde77dc9e
  416fd6:	adc    esi,0x28
  416fd9:	retf   0x72de
  416fdc:	jno    0x416f8d
  416fde:	mov    ecx,0xbe474d8b
  416fe3:	push   esi
  416fe4:	fimul  WORD PTR [ecx+0xaaa5f12]
  416fea:	xchg   edx,esi
  416fec:	inc    BYTE PTR [ebx-0x2e0cf33b]
  416ff2:	stos   BYTE PTR es:[edi],al
  416ff3:	test   BYTE PTR [ebx-0xd],bl
  416ff6:	mov    eax,DWORD PTR [edx-0x48]
  416ff9:	imul   edx,DWORD PTR [esi-0x744c9abf],0x21
  417000:	sbb    eax,0xc23081d7
  417005:	and    BYTE PTR [ebx-0x14d36761],0x3a
  41700c:	adc    eax,esi
  41700e:	pop    es
  41700f:	daa    
  417010:	in     al,dx
  417011:	jns    0x416fa4
  417013:	adc    BYTE PTR [eax-0x10],0xf7
  417017:	(bad)  
  417019:	inc    ebx
  41701a:	xlat   BYTE PTR ds:[ebx]
  41701b:	and    dh,bl
  41701d:	add    bl,dh
  41701f:	mov    ah,0xa8
  417021:	add    edi,DWORD PTR es:[eax+0x36]
  417025:	hlt    
  417026:	cs and eax,0xcc394823
  41702c:	sahf   
  41702d:	push   ss
  41702e:	stos   DWORD PTR es:[edi],eax
  41702f:	ss jl  0x41709b
  417032:	mov    ds:0x2b27fcfb,eax
  417037:	dec    ebx
  417038:	push   edi
  417039:	lea    eax,[ebx-0x3b]
  41703c:	dec    ecx
  41703d:	inc    ebp
  41703e:	fild   WORD PTR [edx-0x56330123]
  417044:	inc    edi
  417045:	ret    0x69c7
  417048:	mov    edx,0x8047f20b
  41704d:	xchg   edi,eax
  41704e:	sahf   
  41704f:	mov    dh,0xbc
  417051:	mov    ds:0x9714117c,eax
  417056:	or     BYTE PTR [eax-0x37649241],cl
  41705c:	jno    0x416ffc
  41705e:	jb     0x41704c
  417060:	mov    dl,0xc
  417062:	pop    esp
  417063:	(bad)  
  417064:	cld    
  417065:	sbb    DWORD PTR [eax+edx*8+0x19960892],esi
  41706c:	inc    ebp
  41706d:	add    eax,0xdb02eefb
  417072:	out    0xe1,al
  417074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417075:	xchg   dh,ch
  417077:	push   edi
  417078:	ins    DWORD PTR es:[edi],dx
  417079:	retf   
  41707a:	mov    ebp,0xac7a2d11
  41707f:	pop    ss
  417080:	mov    ah,0xe3
  417082:	ja     0x41701a
  417084:	ret    
  417085:	xchg   edx,eax
  417086:	inc    ecx
  417087:	inc    ebx
  417088:	sahf   
  417089:	bound  esi,QWORD PTR [ebp+0x21ad8793]
  41708f:	sub    al,0x49
  417091:	push   ds
  417092:	aad    0xd7
  417094:	push   ebx
  417095:	ins    BYTE PTR es:[edi],dx
  417096:	cwde   
  417097:	pop    ebx
  417098:	jb     0x417062
  41709a:	xchg   esi,eax
  41709b:	repnz lea ebp,[edx-0x157ef0bc]
  4170a2:	xor    eax,0xaf99d8f7
  4170a7:	call   0x2507:0x5dca5da2
  4170ae:	adc    BYTE PTR [ebp+0x40],bl
  4170b1:	imul   ebx,edi,0x226dcb0b
  4170b7:	call   0x73ddfe86
  4170bc:	pop    es
  4170bd:	mov    dh,0x7b
  4170bf:	mov    al,ds:0x7bd4bc67
  4170c4:	or     BYTE PTR [eax+0x36c4ef08],cl
  4170ca:	mov    al,0x32
  4170cc:	jge    0x41705d
  4170ce:	mov    ch,BYTE PTR [ebp-0x186b9281]
  4170d4:	aaa    
  4170d5:	lahf   
  4170d6:	mov    bl,0x7f
  4170d8:	(bad)  
  4170d9:	mov    eax,0xe4bcb3ab
  4170de:	or     BYTE PTR [esi-0x33],bh
  4170e1:	cld    
  4170e2:	push   es
  4170e3:	fdivr  st,st(6)
  4170e5:	adc    al,0x31
  4170e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e8:	jno    0x4170c9
  4170ea:	xchg   edx,eax
  4170eb:	and    esi,eax
  4170ed:	fidiv  WORD PTR [edi+0x214c1b33]
  4170f3:	mov    cl,cl
  4170f5:	pop    esp
  4170f6:	arpl   WORD PTR [ecx-0x62],cx
  4170f9:	adc    DWORD PTR [edx+0x7e1b6319],0x4578b319
  417103:	fwait
  417104:	push   edx
  417105:	sbb    DWORD PTR [eax+0x44],esp
  417108:	ss cli 
  41710a:	ins    BYTE PTR es:[edi],dx
  41710b:	in     eax,dx
  41710c:	fbld   TBYTE PTR [ebp+0x453637f6]
  417112:	gs aaa 
  417114:	in     al,0xa8
  417116:	and    DWORD PTR [esi-0x37db8a5a],edx
  41711c:	cmp    BYTE PTR [eax],bh
  41711e:	(bad)  
  417120:	jns    0x417189
  417122:	sbb    DWORD PTR [eax],eax
  417124:	je     0x417121
  417126:	into   
  417127:	ds dec eax
  417129:	sub    ah,BYTE PTR [esi+0x52]
  41712c:	idiv   BYTE PTR [esi+0x76]
  41712f:	jo     0x417153
  417131:	mov    ecx,0x2b6435ad
  417136:	mov    cl,0xb9
  417138:	xchg   DWORD PTR [esi],esi
  41713a:	xchg   DWORD PTR [edi],eax
  41713c:	cmp    DWORD PTR [edx],ebx
  41713e:	and    bl,BYTE PTR [ebx-0x67]
  417141:	fs jmp 0x41715b
  417144:	mov    cl,0xf
  417146:	jmp    0x5e215495
  41714b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41714c:	sti    
  41714d:	push   ds
  41714e:	out    0xb6,eax
  417150:	jmp    0xafb3:0x2a2cd08f
  417157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417158:	jno    0x41714c
  41715a:	cmp    eax,0x82605301
  41715f:	stc    
  417160:	xchg   edi,eax
  417161:	imul   ebp,DWORD PTR [edi+0x79ad8226],0xffffffa7
  417168:	aad    0x3
  41716a:	cmp    bl,BYTE PTR [edx]
  41716c:	not    DWORD PTR [ebx-0x2a007f59]
  417172:	inc    esi
  417173:	cmp    DWORD PTR [ebx],0x8de6e7ba
  417179:	mul    BYTE PTR [ebp+0x6effcf05]
  41717f:	jle    0x4171e3
  417181:	pop    ebx
  417182:	cmp    cl,BYTE PTR [edi]
  417184:	inc    ebx
  417185:	mov    bh,0x30
  417187:	hlt    
  417188:	or     dh,BYTE PTR [ebx]
  41718a:	jp     0x417166
  41718c:	mov    bl,0x67
  41718e:	sbb    edi,edi
  417190:	mov    dl,0x1f
  417192:	mov    eax,ds:0x56f1e301
  417197:	adc    eax,0x246a06e5
  41719c:	repnz outs dx,BYTE PTR ds:[esi]
  41719e:	jbe    0x4171e1
  4171a0:	mov    ebp,0x20cf7238
  4171a5:	div    BYTE PTR [edx-0x17]
  4171a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171a9:	add    DWORD PTR [edi],0x273a90cf
  4171af:	ret    0x64d0
  4171b2:	sbb    BYTE PTR ds:0x2c3a4256,0x7f
  4171b9:	out    0xe0,eax
  4171bb:	rcr    BYTE PTR [ecx],1
  4171bd:	mov    al,0x1a
  4171bf:	dec    edi
  4171c0:	mov    ecx,0x21434c91
  4171c5:	loop   0x417180
  4171c7:	shl    BYTE PTR [edx],0xa7
  4171ca:	mov    eax,ds:0x90855e9f
  4171cf:	cmp    BYTE PTR [edi-0x4f],al
  4171d2:	pop    esi
  4171d3:	pop    edx
  4171d4:	aam    0xee
  4171d6:	fisttp WORD PTR [edx+0x7a]
  4171d9:	mov    BYTE PTR [edi+ebx*4],0xf5
  4171dd:	jno    0x4171bb
  4171df:	sub    bh,BYTE PTR [eax-0x575b1f8f]
  4171e5:	ja     0x4171ce
  4171e7:	sbb    DWORD PTR [edx],0x1
  4171ea:	inc    eax
  4171eb:	mov    dl,0xa3
  4171ed:	dec    ebp
  4171ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ef:	adc    cl,BYTE PTR [ebx+edi*1-0x325482ba]
  4171f6:	or     BYTE PTR [eax],dh
  4171f8:	jno    0x417268
  4171fa:	sbb    DWORD PTR [esi],ebp
  4171fc:	out    dx,al
  4171fd:	xlat   BYTE PTR ds:[ebx]
  4171fe:	add    al,0xac
  417200:	cwde   
  417201:	inc    esi
  417202:	dec    eax
  417203:	push   ds
  417204:	inc    ebp
  417205:	xchg   esp,eax
  417206:	(bad)  
  417207:	jbe    0x4171cb
  417209:	pop    edi
  41720a:	mov    ecx,0x18d56f6f
  41720f:	(bad)  
  417210:	int    0x1c
  417212:	outs   dx,DWORD PTR ds:[esi]
  417213:	das    
  417214:	mov    edi,0xcf9f834b
  417219:	jl     0x417277
  41721b:	and    ah,BYTE PTR [ebx]
  41721d:	or     bh,ah
  41721f:	out    0xc2,al
  417221:	sar    BYTE PTR [edx],1
  417223:	pop    ebp
  417224:	mov    al,0x1d
  417226:	or     DWORD PTR [edx-0x4dff175d],eax
  41722c:	jle    0x417252
  41722e:	test   esi,eax
  417230:	imul   esp,DWORD PTR [edx-0x6f],0x9c726544
  417237:	in     eax,0x18
  417239:	cmp    eax,DWORD PTR [ecx]
  41723b:	call   0x1e014ce4
  417240:	ficom  DWORD PTR [ebx-0x2e]
  417243:	push   ss
  417244:	mov    WORD PTR [ebp+0x180f9c07],?
  41724a:	mov    esi,0x1a81a47d
  41724f:	dec    esi
  417250:	fwait
  417251:	hlt    
  417252:	imul   ebx,DWORD PTR [esi+0x6b30b580],0x37
  417259:	adc    al,0xc7
  41725b:	fisub  WORD PTR [ebx+0x21]
  41725e:	sbb    BYTE PTR [edx],0x3d
  417261:	repz cmp al,0xb0
  417264:	in     eax,dx
  417265:	inc    edi
  417266:	in     al,dx
  417267:	test   edx,0x14463042
  41726d:	test   eax,0x534312d4
  417272:	shr    BYTE PTR [edx-0x62],0xf5
  417276:	js     0x417212
  417278:	ds icebp 
  41727a:	out    0x12,eax
  41727c:	push   edx
  41727d:	add    ebp,esp
  41727f:	daa    
  417280:	shr    DWORD PTR [esi-0x3],cl
  417283:	popa   
  417284:	adc    cl,cl
  417286:	jns    0x4172be
  417288:	rcr    esp,cl
  41728a:	push   eax
  41728b:	test   eax,0xe269f226
  417290:	push   ecx
  417291:	adc    al,0x5c
  417293:	push   edi
  417294:	dec    ebp
  417295:	pop    ebx
  417296:	(bad)  
  417297:	cli    
  417298:	add    ch,ch
  41729a:	leave  
  41729b:	adc    esi,esi
  41729d:	fcomi  st,st(2)
  41729f:	jbe    0x4172ef
  4172a1:	add    dh,dl
  4172a3:	adc    eax,0xbca80b62
  4172a8:	jg     0x417277
  4172aa:	(bad)
  4172ad:	mov    ecx,0xe4a993f
  4172b2:	repnz mov cl,0x90
  4172b5:	stc    
  4172b6:	inc    edx
  4172b7:	mov    dh,0xab
  4172b9:	cmc    
  4172ba:	mov    DWORD PTR ds:0xfafa5a12,0x1a81512c
  4172c4:	ja     0x417248
  4172c6:	imul   BYTE PTR [esi+0x213647a0]
  4172cc:	dec    edi
  4172cd:	ja     0x4172f1
  4172cf:	cdq    
  4172d0:	es cwde 
  4172d2:	or     BYTE PTR [edx],dh
  4172d4:	add    bh,BYTE PTR [eax-0x5cb0c968]
  4172da:	fmulp  st(6),st
  4172dc:	sbb    bh,BYTE PTR [ecx-0x5d9ccf31]
  4172e2:	and    eax,0x2c51d7e5
  4172e7:	sahf   
  4172e8:	add    al,0x47
  4172ea:	xchg   esi,eax
  4172eb:	jae    0x41731d
  4172ed:	or     DWORD PTR [edi-0x26],eax
  4172f0:	mov    edi,0xf980cfc8
  4172f5:	outs   dx,BYTE PTR ds:[esi]
  4172f6:	mov    eax,cs
  4172f8:	add    eax,DWORD PTR [edx]
  4172fa:	test   edx,edx
  4172fc:	sub    ah,BYTE PTR [eax+0x4]
  4172ff:	mov    edx,0x1e271ffb
  417304:	or     eax,0x5001e8b
  417309:	and    BYTE PTR [edx-0x7c478f21],dh
  41730f:	add    ecx,DWORD PTR [edi]
  417311:	les    edi,FWORD PTR [esi-0x5a]
  417314:	push   edi
  417315:	or     al,0x65
  417317:	inc    edi
  417318:	rol    BYTE PTR [ebx],cl
  41731a:	inc    ecx
  41731b:	push   edx
  41731c:	add    BYTE PTR [ebp-0x74d00ce5],ah
  417322:	fdiv   DWORD PTR [eax+0x1b4535ab]
  417328:	inc    ebx
  417329:	cdq    
  41732a:	pop    ds
  41732b:	stos   DWORD PTR es:[edi],eax
  41732c:	jecxz  0x417344
  41732e:	test   BYTE PTR [edi+0x187134b5],dl
  417334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417335:	imul   ecx,DWORD PTR [ebp+0x7e],0x4bd06f83
  41733c:	out    0xd5,eax
  41733e:	cmp    al,0xcf
  417340:	jecxz  0x41730b
  417342:	pop    es
  417343:	in     eax,dx
  417344:	mov    ecx,0xb209ac34
  417349:	retf   0x61cd
  41734c:	ret    0xfe85
  41734f:	popa   
  417350:	mov    ebp,0xe16060ee
  417355:	mov    dh,al
  417357:	addr16 sub DWORD PTR [bp+0x3ac5],0xffffffeb
  41735e:	mov    ecx,0x55ea597a
  417363:	and    eax,0x1dbfd2d2
  417368:	jp     0x417317
  41736a:	xor    al,0xfb
  41736c:	sub    ebx,DWORD PTR [edi-0x1e63da23]
  417372:	mov    eax,ds:0x20d04780
  417377:	pop    ds
  417378:	sbb    esp,ebp
  41737a:	cmp    eax,0xdba91a54
  41737f:	mov    esi,0xa5c5d96d
  417384:	sub    al,0x1b
  417386:	sub    eax,0x512a180
  41738b:	scas   eax,DWORD PTR es:[edi]
  41738c:	mov    cl,0x84
  41738e:	in     al,dx
  41738f:	sbb    ch,BYTE PTR [ebx+0x5d]
  417392:	out    0x30,al
  417394:	xor    esi,DWORD PTR [edi+0x432c64e0]
  41739a:	xchg   esi,eax
  41739b:	pop    ecx
  41739c:	loop   0x4173de
  41739e:	out    0xbd,eax
  4173a0:	xchg   DWORD PTR [esp+esi*4-0x6c],ebx
  4173a4:	mov    bl,0xcf
  4173a6:	sbb    esp,ebx
  4173a8:	icebp  
  4173a9:	jmp    0xbc24:0x10b265d3
  4173b0:	sahf   
  4173b1:	(bad)  
  4173b2:	pop    ecx
  4173b3:	shr    BYTE PTR [ebx],cl
  4173b5:	(bad)  
  4173b6:	shl    DWORD PTR [esp+ecx*1+0x8d0eb6a],1
  4173bd:	dec    edi
  4173be:	cs fwait
  4173c0:	int    0x68
  4173c2:	push   ebp
  4173c3:	jno    0x41741d
  4173c5:	retf   
  4173c6:	das    
  4173c7:	popa   
  4173c8:	lds    esp,FWORD PTR [edi-0x6a]
  4173cb:	repnz retf 0xcc84
  4173cf:	jmp    edx
  4173d1:	or     ecx,DWORD PTR [eax]
  4173d3:	or     BYTE PTR [eax],bh
  4173d5:	add    DWORD PTR [edi+0x0],ecx
  4173d8:	push   esi
  4173d9:	mov    dh,0x8c
  4173db:	xchg   ecx,eax
  4173dc:	ds pusha 
  4173de:	pop    esp
  4173df:	adc    DWORD PTR [edi-0x786de1ee],eax
  4173e5:	std    
  4173e6:	retf   
  4173e7:	lods   al,BYTE PTR ds:[esi]
  4173e8:	test   DWORD PTR [edx-0x50b3e0d1],ebx
  4173ee:	shr    BYTE PTR es:[ecx+0x5492087a],0x74
  4173f6:	inc    edi
  4173f7:	data16 xlat BYTE PTR ds:[ebx]
  4173f9:	retf   0x45e8
  4173fc:	jb     0x41738c
  4173fe:	mov    esp,0xf5cdd945
  417403:	js     0x41740b
  417405:	shr    DWORD PTR [edi-0x34],0x3e
  417409:	add    BYTE PTR [ebx],al
  41740b:	inc    esp
  41740c:	pop    esi
  41740d:	add    DWORD PTR [ecx+0x33b354d3],0xa99915c4
  417417:	mov    eax,0xa2dba477
  41741c:	adc    ebp,esi
  41741e:	repz or al,0xd5
  417421:	mov    ah,0x5d
  417423:	out    dx,eax
  417424:	mov    ebp,0x97087047
  417429:	sbb    al,0xa4
  41742b:	out    0x52,eax
  41742d:	mov    ecx,0xe3b19b9e
  417432:	mov    ds:0x19c096fd,eax
  417437:	stos   BYTE PTR es:[edi],al
  417438:	add    bh,bh
  41743a:	and    eax,DWORD PTR [esi-0x4]
  41743d:	test   BYTE PTR [ecx+0x5b],dh
  417440:	jl     0x4173f9
  417442:	sahf   
  417443:	and    al,0x9a
  417445:	and    al,BYTE PTR [edi+0x32]
  417448:	fist   WORD PTR [ecx+0x7f8439b0]
  41744e:	push   ds
  41744f:	jle    0x4174af
  417451:	push   esp
  417452:	or     eax,DWORD PTR ds:0x544ff6ff
  417458:	popa   
  417459:	inc    ebp
  41745a:	add    al,0xf8
  41745c:	sbb    DWORD PTR [ebx],edi
  41745e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745f:	fadd   st,st(2)
  417461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417462:	push   0xa1447319
  417467:	out    0x3b,eax
  417469:	pop    ecx
  41746a:	mov    esp,0x9f848b63
  41746f:	sbb    eax,0x78b51e56
  417474:	mov    eax,ds:0x8fbf7c92
  417479:	in     eax,0x27
  41747b:	xchg   esp,eax
  41747c:	xchg   edx,eax
  41747d:	test   DWORD PTR [eax+0x1e93306f],ebx
  417483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417484:	ins    DWORD PTR es:[edi],dx
  417485:	mov    eax,0x69f80248
  41748a:	jmp    0x41747a
  41748c:	loop   0x41741b
  41748e:	add    BYTE PTR [eax],al
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0xd237
  4174a0:	jne    0x41744b
  4174a2:	xor    edx,esi
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	hlt    
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR [esi-0x1105c912],dl
  4174af:	cmp    al,0x11
  4174b1:	cld    
  4174b2:	push   eax
  4174b3:	xchg   DWORD PTR [esi+edx*2-0x35],edx
  4174b7:	icebp  
  4174b8:	popa   
  4174b9:	repnz outs dx,DWORD PTR ds:[esi]
  4174bb:	xchg   esi,eax
  4174bc:	je     0x417487
  4174be:	popf   
  4174bf:	fadd   QWORD PTR [edx]
  4174c1:	cmp    al,0xe1
  4174c3:	xchg   esp,eax
  4174c4:	inc    ebp
  4174c5:	pop    esp
  4174c6:	pop    esp
  4174c7:	xchg   ebx,eax
  4174c8:	push   ebp
  4174c9:	cmp    BYTE PTR es:[ecx-0x770c1511],al
  4174d0:	and    ebx,0xfffffffb
  4174d3:	xchg   esp,eax
  4174d4:	adc    cl,BYTE PTR [edx]
  4174d6:	sub    eax,0xf10d581a
  4174db:	aam    0xd2
  4174dd:	mov    ch,al
  4174df:	in     al,0x73
  4174e1:	jnp    0x41754c
  4174e3:	or     DWORD PTR [ebp-0x3bb48857],ecx
  4174e9:	cs aas 
  4174eb:	into   
  4174ec:	stos   BYTE PTR es:[edi],al
  4174ed:	add    ecx,eax
  4174ef:	add    al,0x72
  4174f1:	adc    esi,esi
  4174f3:	dec    ebp
  4174f4:	rdmsr  
  4174f6:	stos   DWORD PTR es:[edi],eax
  4174f7:	add    dh,BYTE PTR [eax]
  4174f9:	out    0x8a,al
  4174fb:	addr16 xchg esp,eax
  4174fd:	mov    ?,WORD PTR [ecx-0x5dd3d22]
  417503:	out    0x2f,al
  417505:	jge    0x417518
  417507:	push   ebx
  417508:	and    dh,al
  41750a:	bswap  ebx
  41750c:	fcomp  QWORD PTR [ecx-0x18779dcc]
  417512:	xchg   edi,eax
  417513:	ror    BYTE PTR [ebx+0x191e361a],0xde
  41751a:	jmp    0xa7b3caa3
  41751f:	push   ebx
  417520:	cdq    
  417521:	mov    ch,0xe9
  417523:	retf   0x26c6
  417526:	sub    al,0x9d
  417528:	mov    cl,0x13
  41752a:	nop
  41752b:	(bad)  
  41752c:	jbe    0x417545
  41752e:	xlat   BYTE PTR ds:[ebx]
  41752f:	fistp  QWORD PTR [eax-0x56]
  417532:	loopne 0x417524
  417534:	(bad)  
  417535:	mov    edi,0x83fa571a
  41753a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41753b:	dec    esp
  41753c:	mov    al,ds:0x63004f91
  417541:	popa   
  417542:	pop    edi
  417543:	retf   0x5a2e
  417546:	sti    
  417547:	cmp    bh,BYTE PTR [edi+0xd0e507]
  41754d:	retf   
  41754e:	mul    dh
  417550:	push   0xb9a0a152
  417555:	mov    eax,ds:0xb3a542ec
  41755a:	stos   BYTE PTR es:[edi],al
  41755b:	addr16 and eax,0xf50c604b
  417561:	mov    fs,WORD PTR [eax-0x65]
  417564:	push   ebp
  417565:	jnp    0x4175c2
  417567:	add    DWORD PTR [edx-0x6a3c4990],ebx
  41756d:	cmp    bl,BYTE PTR [ebx]
  41756f:	aaa    
  417570:	jge    0x417508
  417572:	nop
  417573:	test   eax,0xf9814580
  417578:	and    dl,BYTE PTR [ebp-0x24]
  41757b:	cmc    
  41757c:	add    BYTE PTR cs:[edx-0x66f49212],cl
  417583:	dec    esp
  417584:	ds push esp
  417586:	fs (bad) 
  417588:	cli    
  417589:	aam    0xb8
  41758b:	enter  0xd832,0x7a
  41758f:	mov    eax,ds:0x65e7ecf5
  417594:	test   DWORD PTR [esi],0x567ab8c6
  41759a:	dec    ebp
  41759b:	dec    ebx
  41759c:	mov    edi,0x9eb74728
  4175a1:	dec    ebp
  4175a2:	xor    edx,eax
  4175a4:	(bad)  
  4175a6:	lock sbb ebx,DWORD PTR [ecx+edi*1-0x17]
  4175ab:	and    esp,DWORD PTR [eax]
  4175ad:	call   0x87b1455f
  4175b2:	cmp    al,0x94
  4175b4:	cmovae edi,esp
  4175b7:	jge    0x417566
  4175b9:	mov    ch,0x8d
  4175bb:	and    ch,BYTE PTR [esi+edi*8-0x47599565]
  4175c2:	inc    edx
  4175c3:	jae    0x4175ad
  4175c5:	inc    edx
  4175c6:	js     0x417647
  4175c8:	push   edx
  4175c9:	test   BYTE PTR [eax],bl
  4175cb:	jne    0x417582
  4175cd:	or     BYTE PTR ds:0xe1f3cc73,dh
  4175d3:	mov    ebp,DWORD PTR [eax+0x30809486]
  4175d9:	mov    ds:0xe901436d,eax
  4175de:	sahf   
  4175df:	enter  0x8880,0xa5
  4175e3:	and    eax,0x859b772
  4175e8:	adc    eax,ecx
  4175ea:	sbb    DWORD PTR [ebx],ebx
  4175ec:	iret   
  4175ed:	test   BYTE PTR [edx],0xc6
  4175f0:	std    
  4175f1:	fnstcw WORD PTR [edx+0x5b]
  4175f4:	or     BYTE PTR [ecx+eax*1+0x698aa10e],dl
  4175fb:	push   cs
  4175fc:	rcr    esi,cl
  4175fe:	lods   eax,DWORD PTR ds:[esi]
  4175ff:	jl     0x4175b4
  417601:	inc    ebx
  417602:	test   DWORD PTR cs:[edi+0x1c35de6c],eax
  417609:	fldcw  WORD PTR ds:0x26c0bd2f
  41760f:	aaa    
  417610:	fs mov eax,0xb1b44ffb
  417616:	push   esi
  417617:	ror    DWORD PTR [ebp-0x290f0d6c],1
  41761d:	sbb    al,0x2a
  41761f:	sub    dh,bh
  417621:	leave  
  417622:	fstp   TBYTE PTR [ebx]
  417624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417625:	out    dx,eax
  417626:	fist   WORD PTR [edi+0xa445dca]
  41762c:	das    
  41762d:	inc    edx
  41762e:	(bad)  
  41762f:	hlt    
  417630:	or     ebx,DWORD PTR [esi+0x4602fb82]
  417636:	daa    
  417637:	dec    ebp
  417638:	mov    dh,bl
  41763a:	adc    ch,0x6a
  41763d:	cmc    
  41763e:	fwait
  41763f:	inc    edi
  417640:	jnp    0x41766a
  417642:	neg    BYTE PTR [edx]
  417644:	inc    esp
  417645:	and    ah,BYTE PTR [edx]
  417647:	pop    esi
  417648:	iret   
  417649:	outs   dx,DWORD PTR ds:[esi]
  41764a:	ja     0x417613
  41764c:	loope  0x417608
  41764e:	jp     0x41764d
  417650:	dec    ebp
  417651:	sbb    eax,0x2f57a583
  417656:	pop    ebp
  417657:	mov    esp,DWORD PTR [ebx-0x3d4e0295]
  41765d:	call   0xec4fc3c9
  417662:	punpckldq mm7,DWORD PTR [ebp+eax*8+0x68]
  417667:	xchg   edx,eax
  417668:	mov    BYTE PTR [edi+0x30],al
  41766b:	dec    eax
  41766c:	mov    al,ds:0x44ccb64b
  417671:	xor    BYTE PTR es:[eax],bl
  417674:	jno    0x417643
  417676:	mov    eax,ds:0xe8f7a7a
  41767b:	pop    edx
  41767c:	(bad)  
  41767d:	enter  0xcba2,0x9e
  417681:	dec    esp
  417682:	mov    ss,WORD PTR [edx]
  417684:	fwait
  417685:	mov    edi,0xbd462d
  41768b:	xchg   esp,eax
  41768c:	mov    ebx,0xfc058f7b
  417691:	test   BYTE PTR [edi],cl
  417693:	adc    BYTE PTR [ebp-0x6b],0xd2
  417697:	fisttp DWORD PTR [eax-0x23628cfa]
  41769d:	fidiv  WORD PTR [ebp-0x26]
  4176a0:	jmp    ebp
  4176a2:	inc    edi
  4176a3:	or     BYTE PTR [edi],bl
  4176a5:	fisttp DWORD PTR ds:0x9605a8c7
  4176ab:	jg     0x417642
  4176ad:	jg     0x417656
  4176af:	jb     0x4176ca
  4176b1:	sbb    DWORD PTR [ebx],ecx
  4176b3:	cwde   
  4176b4:	pop    ebx
  4176b5:	jmp    FWORD PTR [ebx-0x5cfed292]
  4176bb:	mov    al,0x14
  4176bd:	sub    DWORD PTR [eax],ebx
  4176bf:	jae    0x417712
  4176c1:	pop    edx
  4176c2:	inc    esp
  4176c3:	mov    ecx,0x71e23abe
  4176c8:	dec    ecx
  4176c9:	jo     0x4176b5
  4176cb:	jae    0x417669
  4176cd:	xchg   edx,eax
  4176ce:	mov    ds:0xc1bf04d8,al
  4176d3:	add    DWORD PTR [eax+ebx*1+0x5120cb19],ebx
  4176da:	xchg   ecx,eax
  4176db:	aas    
  4176dc:	cmc    
  4176dd:	je     0x41766a
  4176df:	push   ebx
  4176e0:	aas    
  4176e1:	js     0x41768e
  4176e3:	or     esp,DWORD PTR [esi+0x40]
  4176e6:	sbb    esi,ecx
  4176e8:	je     0x417690
  4176ea:	add    esp,DWORD PTR [esi-0xe]
  4176ed:	jns    0x4176f0
  4176ef:	div    BYTE PTR [ebp+0x271bec68]
  4176f5:	out    0x3d,al
  4176f7:	adc    esp,ebx
  4176f9:	xchg   edi,edx
  4176fb:	xor    ebp,DWORD PTR [eax+0x71]
  4176fe:	jle    0x4176a5
  417700:	(bad)  
  417702:	inc    eax
  417703:	outs   dx,DWORD PTR ds:[esi]
  417704:	clc    
  417705:	rcr    DWORD PTR [ecx],0xaa
  417708:	(bad)  
  417709:	fwait
  41770a:	jle    0x41771e
  41770c:	inc    ebx
  41770d:	out    0xc,al
  41770f:	ret    0xc87
  417712:	mov    eax,0xb2bab697
  417717:	or     eax,0xeb8c55a1
  41771c:	(bad)  
  41771d:	neg    BYTE PTR [esi+esi*1-0x22b9fe6e]
  417724:	mov    bl,0x98
  417726:	add    DWORD PTR [eax-0x43],eax
  417729:	inc    ebp
  41772a:	enter  0xe55a,0x79
  41772e:	stos   DWORD PTR es:[edi],eax
  41772f:	sbb    ah,bh
  417731:	retf   0x67a0
  417734:	sahf   
  417735:	call   0xbe77:0x374c27b0
  41773c:	adc    bl,ah
  41773e:	mov    al,ds:0x18b391a3
  417743:	sbb    ebx,esp
  417745:	stos   BYTE PTR es:[edi],al
  417746:	cmp    DWORD PTR [edx],esp
  417748:	mov    ebx,0x278ca358
  41774d:	ss or  ch,bl
  417750:	push   esp
  417751:	push   es
  417752:	daa    
  417753:	(bad)  
  417754:	and    eax,0x7d055161
  417759:	int3   
  41775a:	ss inc esp
  41775c:	xlat   BYTE PTR ds:[ebx]
  41775d:	test   bh,0x48
  417760:	enter  0xd61c,0x31
  417764:	jle    0x417762
  417766:	cmp    esp,DWORD PTR [ebx+0x25]
  417769:	(bad)  
  41776a:	mov    esp,0xc999227b
  41776f:	pop    ecx
  417770:	xor    DWORD PTR [esi],0xffffff86
  417773:	xchg   DWORD PTR [esi+ebx*1-0x1464aa1],esp
  41777a:	lds    eax,FWORD PTR [eax-0x2a]
  41777d:	retf   
  41777e:	js     0x41775b
  417780:	jno    0x4177d3
  417782:	es or  al,0x90
  417785:	lds    edi,FWORD PTR [ebp+0x30128c03]
  41778b:	je     0x41772b
  41778d:	test   al,0xf
  41778f:	pop    ebx
  417790:	inc    ebx
  417791:	xor    ch,BYTE PTR [ebp-0x26]
  417794:	fstp   TBYTE PTR [esi]
  417797:	ret    0xb6af
  41779a:	ret    0xd2c1
  41779d:	jb     0x417782
  41779f:	repnz cmc 
  4177a1:	push   0xd492c567
  4177a6:	sub    eax,0x65219d2c
  4177ab:	sti    
  4177ac:	fldl2t 
  4177ae:	stos   BYTE PTR es:[edi],al
  4177af:	mov    ch,ch
  4177b1:	dec    edx
  4177b2:	(bad)  
  4177b3:	out    0x23,al
  4177b5:	jne    0x417790
  4177b7:	in     al,0xa7
  4177b9:	loopne 0x41773e
  4177bb:	js     0x417801
  4177bd:	mov    ds:0xd491a107,eax
  4177c2:	dec    ebx
  4177c3:	xor    BYTE PTR [ebp+ebp*4+0x777b37e7],ah
  4177ca:	xor    dl,BYTE PTR ds:[edx-0x1]
  4177ce:	and    al,0xdc
  4177d0:	mov    ch,0x71
  4177d2:	dec    ebx
  4177d3:	out    dx,eax
  4177d4:	mov    cl,0x16
  4177d6:	cmp    esp,DWORD PTR [ebx-0x14857ebc]
  4177dc:	pop    eax
  4177dd:	not    DWORD PTR [ebx-0x77]
  4177e0:	mov    cl,dl
  4177e2:	aam    0x60
  4177e4:	sbb    al,0x88
  4177e6:	addr16 mov esi,0xcbc30287
  4177ec:	outs   dx,BYTE PTR ds:[esi]
  4177ed:	and    eax,0x79cc094b
  4177f2:	outs   dx,BYTE PTR ds:[esi]
  4177f3:	scas   al,BYTE PTR es:[edi]
  4177f4:	xchg   esp,eax
  4177f5:	lods   al,BYTE PTR ds:[esi]
  4177f6:	fst    QWORD PTR [eax+esi*2]
  4177f9:	out    dx,al
  4177fa:	jge    0x4177d9
  4177fc:	jbe    0x41780e
  4177fe:	or     edi,DWORD PTR [edx]
  417800:	loopne 0x41784a
  417802:	inc    edi
  417803:	dec    edi
  417804:	pop    ebp
  417805:	add    bl,BYTE PTR [ebx]
  417807:	add    eax,0xd0f4d1fd
  41780c:	inc    edi
  41780d:	out    dx,eax
  41780e:	mov    bh,0x55
  417810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417811:	or     eax,0xd9127e61
  417816:	cmp    eax,0x89c87585
  41781b:	mov    eax,0xa5807e47
  417820:	mov    ebp,0x3830730f
  417825:	cwde   
  417826:	call   0x4306:0x881afbb8
  41782d:	jg     0x4178a9
  41782f:	pextrw edi,mm4,0xeb
  417833:	in     eax,0x72
  417835:	das    
  417836:	ins    BYTE PTR es:[edi],dx
  417837:	mov    dl,0x88
  417839:	cwde   
  41783a:	call   0x6e4d:0x76cc84fd
  417841:	in     al,0x22
  417843:	jmp    0xf55f:0x6c5b21c0
  41784a:	cmp    eax,0x9222c873
  41784f:	sbb    dl,BYTE PTR [ebp+0x67]
  417852:	test   edx,eax
  417854:	fisub  DWORD PTR ds:0xa2c93968
  41785a:	sbb    dh,dl
  41785c:	mov    al,0x10
  41785e:	push   ds
  41785f:	cdq    
  417860:	cmp    ebp,esi
  417862:	sub    ecx,DWORD PTR [edi]
  417864:	jo     0x41780a
  417866:	push   es
  417867:	pop    eax
  417868:	mov    ebp,0x64395d6f
  41786d:	(bad)  
  41786e:	data16 adc BYTE PTR [ecx+ebx*4],0xbc
  417873:	or     al,0xaf
  417875:	adc    al,0xb4
  417877:	sub    DWORD PTR [ecx],edi
  417879:	icebp  
  41787a:	aam    0x79
  41787c:	nop
  41787d:	pop    ebp
  41787e:	fsubrp st(3),st
  417880:	mov    dh,0x77
  417882:	pop    esp
  417883:	rcl    DWORD PTR [ecx+0x17b0c58e],cl
  417889:	fsub   DWORD PTR [ecx+0x3d]
  41788c:	add    DWORD PTR ds:0x976a478,ecx
  417892:	xor    al,0x57
  417894:	std    
  417895:	fist   DWORD PTR [edi-0x258550d5]
  41789b:	sti    
  41789c:	int3   
  41789d:	div    esp
  41789f:	shr    BYTE PTR [ecx+esi*1],0x7b
  4178a3:	cmp    DWORD PTR [ecx],0xaaa2634d
  4178a9:	sub    ch,BYTE PTR [esi+0xa]
  4178ac:	push   ebx
  4178ad:	xor    BYTE PTR [ebp-0x474f7149],cl
  4178b3:	mov    dh,0x78
  4178b5:	shl    BYTE PTR [edx+0x2e],cl
  4178b8:	add    eax,0xc56f0f5
  4178bd:	and    al,0x96
  4178bf:	je     0x417871
  4178c1:	jb     0x4178d9
  4178c3:	dec    ebx
  4178c4:	stc    
  4178c5:	or     BYTE PTR [esi],dl
  4178c7:	aaa    
  4178c8:	icebp  
  4178c9:	test   DWORD PTR [ebx-0x30],0xdc62044f
  4178d0:	out    dx,al
  4178d1:	adc    al,0xd1
  4178d3:	es inc edx
  4178d5:	scas   eax,DWORD PTR es:[edi]
  4178d6:	or     al,0xd
  4178d8:	std    
  4178d9:	addr16 push 0xb0e88271
  4178df:	mov    DWORD PTR [eax+eiz*1-0x6c4af96d],0x9c969c95
  4178ea:	mov    bl,0x2b
  4178ec:	jne    0x4178b0
  4178ee:	jle    0x417875
  4178f0:	cmp    eax,DWORD PTR [ebx-0x7f65f7af]
  4178f6:	and    eax,eax
  4178f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f9:	mov    edx,0xfcae79f2
  4178fe:	mul    DWORD PTR [esi+0x49]
  417901:	aaa    
  417902:	xchg   DWORD PTR [esi-0x1fe2fe83],esp
  417908:	jo     0x417985
  41790a:	xchg   esp,eax
  41790b:	call   0x78555918
  417910:	cmp    DWORD PTR [ecx-0x4a],ecx
  417913:	push   es
  417914:	push   edi
  417915:	fdiv   QWORD PTR [esi-0x41]
  417918:	and    BYTE PTR [edx+ebx*1],dh
  41791b:	(bad)  
  41791c:	jmp    0xa9026196
  417921:	adc    eax,0xe605b8d2
  417926:	test   eax,0x13d27b9
  41792b:	sbb    esp,DWORD PTR [ecx-0x20]
  41792e:	or     BYTE PTR [ebp-0x68],ah
  417931:	scas   al,BYTE PTR es:[edi]
  417932:	(bad)  
  417933:	adc    BYTE PTR [edi+0x57c836cf],bl
  417939:	ror    DWORD PTR [eax-0x3995472f],0x20
  417940:	ins    BYTE PTR es:[edi],dx
  417941:	es sbb al,0x33
  417944:	fs cmp bh,0xb4
  417948:	mov    bl,0x97
  41794a:	in     eax,dx
  41794b:	adc    dl,dh
  41794d:	jl     0x4179c3
  41794f:	and    edx,DWORD PTR ds:0x6adc560e
  417955:	pop    ecx
  417956:	dec    edi
  417957:	jne    0x417938
  417959:	ja     0x417962
  41795b:	cmp    BYTE PTR [edi+0x18],bl
  41795e:	add    ebp,DWORD PTR [eax]
  417960:	jbe    0x4179d9
  417962:	ss push ecx
  417964:	mov    BYTE PTR [ebp+0x2f81f370],cl
  41796a:	mov    ebx,0xb1ed617f
  41796f:	outs   dx,BYTE PTR ds:[esi]
  417970:	xor    DWORD PTR [ebp+0x58],esi
  417973:	adc    dh,BYTE PTR [esi+0x6]
  417976:	mov    ah,0x17
  417978:	sbb    al,0x4d
  41797a:	inc    ebx
  41797b:	push   esp
  41797c:	jl     0x4179a8
  41797e:	pop    eax
  41797f:	adc    bh,BYTE PTR [eax+ebp*1+0x51]
  417983:	and    eax,0xf9a1ebac
  417988:	jnp    0x41791d
  41798a:	test   DWORD PTR [edi+eiz*1-0x318db668],esi
  417991:	xor    esp,DWORD PTR [edx-0x15]
  417994:	adc    esi,ebx
  417996:	xlat   BYTE PTR ds:[ebx]
  417997:	and    BYTE PTR [edx-0x60f4aff3],0x2c
  41799e:	add    BYTE PTR [eax],al
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x2abd3175
  4179b1:	push   ecx
  4179b2:	and    eax,0xf40000f7
  4179b7:	add    al,0x0
  4179b9:	add    BYTE PTR [edi-0x3e1fe892],dh
  4179bf:	adc    bl,BYTE PTR [edx+ebx*1]
  4179c2:	cmp    ah,BYTE PTR ss:[esi]
  4179c5:	xor    ah,BYTE PTR [eax-0x600c2959]
  4179cb:	pop    ebp
  4179cc:	lahf   
  4179cd:	neg    ebp
  4179cf:	cmp    DWORD PTR [ebp+0x47],edi
  4179d2:	inc    esp
  4179d3:	and    edi,ecx
  4179d5:	jne    0x4179be
  4179d7:	int3   
  4179d8:	js     0x417985
  4179da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179db:	xor    DWORD PTR [eax+0x2c],0xce707ded
  4179e2:	and    eax,0xbff2fcbf
  4179e7:	mov    esp,0x7b0b79c9
  4179ec:	(bad)  
  4179ed:	icebp  
  4179ee:	int3   
  4179ef:	mov    edi,0x176b095b
  4179f4:	mov    ds:0xb295d68,al
  4179f9:	repz jmp 0x417a42
  4179fc:	xor    al,0x7
  4179fe:	jnp    0x417a4d
  417a00:	xor    al,BYTE PTR [ebp+0x48442e9d]
  417a06:	mov    ch,0x6d
  417a08:	(bad)  [ebx-0x34]
  417a0b:	adc    eax,0x771e4a0b
  417a10:	jecxz  0x4179d0
  417a12:	lock iret 
  417a14:	icebp  
  417a15:	jmp    0x65b940b1
  417a1a:	mov    dl,0xcb
  417a1c:	fstp   QWORD PTR [esi]
  417a1e:	imul   edx,DWORD PTR [eax+0x6c],0x1730d6ca
  417a25:	js     0x4179c1
  417a27:	push   0x24b8c551
  417a2c:	shl    DWORD PTR [ebp+0x5b],cl
  417a2f:	xchg   esp,eax
  417a30:	fild   WORD PTR [ebp+0x40]
  417a33:	jmp    0x4179dd
  417a35:	(bad)  
  417a37:	ret    0x9bb1
  417a3a:	pop    ecx
  417a3b:	fcmovb st,st(2)
  417a3d:	hlt    
  417a3e:	popa   
  417a3f:	or     al,0xb6
  417a41:	pop    ebx
  417a42:	aas    
  417a43:	push   es
  417a44:	jp     0x417a38
  417a46:	pop    ebp
  417a47:	cmovo  ecx,ecx
  417a4a:	adc    al,0xee
  417a4c:	(bad)  
  417a4d:	clc    
  417a4e:	push   es
  417a4f:	jge    0x417a2e
  417a51:	lea    ebp,[ecx-0x66240e0]
  417a57:	add    BYTE PTR [esi+0x1280da7c],0xc
  417a5e:	add    al,0x40
  417a60:	out    0x16,al
  417a62:	mov    bl,0x6f
  417a64:	mov    eax,0xeeedc2a0
  417a69:	in     eax,0x3
  417a6b:	cmp    eax,0xb5e7762f
  417a70:	repz data16 test BYTE PTR [edx+edi*8-0x6b5cf4d3],dh
  417a79:	push   eax
  417a7a:	sub    bl,BYTE PTR [esi]
  417a7c:	cmp    edi,DWORD PTR [edx]
  417a7e:	ds pop ebp
  417a80:	add    BYTE PTR [edx+0x59],bl
  417a83:	sub    bl,dl
  417a85:	sub    eax,0x4d0c6676
  417a8a:	mov    ebx,DWORD PTR [ebx]
  417a8c:	pop    ecx
  417a8d:	push   esi
  417a8e:	add    al,0xef
  417a90:	adc    DWORD PTR [edi-0x835628d],edx
  417a96:	sub    eax,0xc3befc6d
  417a9b:	fsub   QWORD PTR [eax]
  417a9d:	addr16 ret 0xa268
  417aa1:	inc    ecx
  417aa2:	xchg   ecx,eax
  417aa3:	inc    esp
  417aa4:	fadd   DWORD PTR [ebp+0x7b]
  417aa7:	popf   
  417aa8:	shl    ebx,0xae
  417aab:	sbb    BYTE PTR [ecx],0xce
  417aae:	xchg   DWORD PTR [esi],ebx
  417ab0:	cli    
  417ab1:	enter  0x4629,0x41
  417ab5:	push   es
  417ab6:	push   es
  417ab7:	cmp    dh,BYTE PTR [ebp+0xe]
  417aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417abb:	rcr    DWORD PTR [edx-0x49],cl
  417abe:	les    edi,FWORD PTR [ebx-0x3a]
  417ac1:	int3   
  417ac2:	mov    ds:0xc98d191e,eax
  417ac7:	in     al,dx
  417ac8:	repz out dx,eax
  417aca:	lea    ebp,ds:0x3d886bcc
  417ad0:	dec    edx
  417ad1:	jmp    0x5e9e8502
  417ad6:	test   BYTE PTR [edi+0x5f],al
  417ad9:	jl     0x417b21
  417adb:	jne    0x417b30
  417add:	or     BYTE PTR ds:0x539e132a,al
  417ae3:	dec    esi
  417ae4:	jne    0x417a7a
  417ae6:	jo     0x417aa2
  417ae8:	cmp    al,0x83
  417aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aeb:	cdq    
  417aec:	out    dx,al
  417aed:	stos   BYTE PTR es:[edi],al
  417aee:	and    ebx,DWORD PTR [esi+0x7e]
  417af1:	cmp    al,0xd9
  417af3:	gs xchg ecx,eax
  417af5:	out    0x83,eax
  417af7:	dec    eax
  417af8:	and    eax,0x353c78ce
  417afd:	or     bh,BYTE PTR [ebx+0x3]
  417b00:	sti    
  417b01:	bnd jno 0x417ab9
  417b04:	pop    ecx
  417b05:	xor    ebp,esp
  417b07:	mov    ah,0x9b
  417b09:	mov    eax,ds:0x1f52424c
  417b0e:	xor    esi,DWORD PTR [esi+0xdf5e1dc]
  417b14:	cmp    eax,0x5cdf0444
  417b19:	cli    
  417b1a:	and    DWORD PTR [ebp+0x31],ecx
  417b1d:	xlat   BYTE PTR ds:[ebx]
  417b1e:	jl     0x417ac6
  417b20:	push   cs
  417b21:	xor    edx,DWORD PTR [ebx+0x281c6594]
  417b27:	fisub  WORD PTR [ebx-0x6781920c]
  417b2d:	loopne 0x417ae6
  417b2f:	pusha  
  417b30:	pop    edx
  417b31:	repnz repnz cld 
  417b34:	fld    TBYTE PTR [edx]
  417b36:	hlt    
  417b37:	hlt    
  417b38:	jne    0x417adb
  417b3a:	loopne 0x417b63
  417b3c:	mov    esi,0x4786272e
  417b41:	stos   DWORD PTR es:[edi],eax
  417b42:	idiv   BYTE PTR [ebp-0x6d]
  417b45:	mov    dl,0xff
  417b47:	aas    
  417b48:	push   ecx
  417b49:	addr16 sbb edx,esi
  417b4c:	cmc    
  417b4d:	(bad)  
  417b4e:	in     al,0x89
  417b50:	lock mov eax,eax
  417b53:	ins    BYTE PTR es:[edi],dx
  417b54:	sub    DWORD PTR [esi+0x6e99897],esi
  417b5a:	fadd   QWORD PTR [edi-0x40]
  417b5d:	push   edi
  417b5e:	cmp    DWORD PTR [ebx],esi
  417b60:	dec    ebx
  417b61:	aam    0x64
  417b63:	ds stos BYTE PTR es:[edi],al
  417b65:	ins    BYTE PTR es:[edi],dx
  417b66:	xchg   edx,eax
  417b67:	ins    BYTE PTR es:[edi],dx
  417b68:	stos   DWORD PTR es:[edi],eax
  417b69:	in     eax,0xd9
  417b6b:	adc    ecx,DWORD PTR ds:0xc70d29f8
  417b71:	lahf   
  417b72:	dec    DWORD PTR [ecx+0x2]
  417b75:	fwait
  417b76:	icebp  
  417b77:	and    al,0x5b
  417b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b7a:	das    
  417b7b:	pop    eax
  417b7c:	xor    dl,0xca
  417b7f:	add    BYTE PTR [ebx-0x33a0ae97],0xa5
  417b86:	sub    eax,0x452f239a
  417b8b:	lahf   
  417b8c:	out    dx,eax
  417b8d:	ins    BYTE PTR es:[edi],dx
  417b8e:	ins    BYTE PTR es:[edi],dx
  417b8f:	cmp    bh,al
  417b91:	jo     0x417b19
  417b93:	dec    ebp
  417b94:	pushf  
  417b95:	or     bh,BYTE PTR [edx]
  417b97:	cmp    al,0x43
  417b99:	(bad)  
  417b9a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417b9c:	sub    DWORD PTR [edx-0x60b277fc],esp
  417ba2:	xor    DWORD PTR [esi+0xa5cf844],edx
  417ba8:	adc    dh,BYTE PTR [eax]
  417baa:	mov    dl,0x3f
  417bac:	int3   
  417bad:	jb     0x417c23
  417baf:	or     eax,0x2f49e831
  417bb4:	imul   esi,DWORD PTR [esi-0x561708ef],0x40adf705
  417bbe:	sub    ecx,esp
  417bc0:	or     eax,0xc0fde8ca
  417bc5:	popf   
  417bc6:	add    dh,cl
  417bc8:	jnp    0x417b5b
  417bca:	inc    ebp
  417bcb:	cmp    edi,esp
  417bcd:	std    
  417bce:	inc    ebx
  417bcf:	ins    DWORD PTR es:[edi],dx
  417bd0:	sbb    ebx,ebx
  417bd2:	mov    al,dh
  417bd4:	cmp    al,0x1f
  417bd6:	bound  ebp,QWORD PTR [ecx]
  417bd8:	push   edx
  417bd9:	popa   
  417bda:	pop    eax
  417bdb:	and    ebx,DWORD PTR [ecx-0x57]
  417bde:	mov    esp,0x4861d25
  417be3:	inc    esp
  417be4:	js     0x417baf
  417be6:	in     al,0x92
  417be8:	inc    edi
  417be9:	pop    esi
  417bea:	pop    ebp
  417beb:	je     0x417bc1
  417bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bee:	mov    esp,0xf428bfd1
  417bf3:	or     dl,BYTE PTR [ebx-0x35]
  417bf6:	xor    al,0xe8
  417bf8:	outs   dx,DWORD PTR ds:[esi]
  417bf9:	rcl    DWORD PTR [ebx],0x96
  417bfc:	outs   dx,BYTE PTR ds:[esi]
  417bfd:	fsub   QWORD PTR [ebx-0x6c5af754]
  417c03:	mov    bl,0xe
  417c05:	stos   DWORD PTR es:[edi],eax
  417c06:	enter  0x4e78,0x88
  417c0a:	popa   
  417c0b:	or     edi,DWORD PTR [ebx]
  417c0d:	(bad)  
  417c0f:	ret    0xebf
  417c12:	and    bh,0x40
  417c15:	xor    esi,DWORD PTR [eax+eiz*2-0x237247e8]
  417c1c:	xor    BYTE PTR [edi+0x3],0xb5
  417c20:	not    BYTE PTR [edx+0x35]
  417c23:	sti    
  417c24:	push   edi
  417c25:	cmp    eax,0x9b7153e2
  417c2a:	cwde   
  417c2b:	shr    BYTE PTR [eax-0x26],0x0
  417c2f:	xchg   ebp,eax
  417c30:	dec    eax
  417c31:	pushf  
  417c32:	mov    esi,ebp
  417c34:	sub    eax,0x23b0b726
  417c39:	push   0xffffff82
  417c3b:	jle    0x417c80
  417c3d:	cli    
  417c3e:	cmp    edi,DWORD PTR [edi]
  417c40:	inc    eax
  417c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c42:	or     esi,0xb750ebee
  417c48:	mov    ah,0x84
  417c4a:	cmp    ch,bh
  417c4c:	aaa    
  417c4d:	aaa    
  417c4e:	sub    ecx,DWORD PTR [eax]
  417c50:	ret    
  417c51:	pop    ebp
  417c52:	xchg   edi,eax
  417c53:	outs   dx,BYTE PTR ds:[esi]
  417c54:	addr16 jl 0x417bfa
  417c57:	(bad)  
  417c58:	(bad)  
  417c59:	push   0xdd67e7ca
  417c5e:	shl    DWORD PTR [eax-0x217094a6],0x4
  417c65:	in     eax,dx
  417c66:	cmp    DWORD PTR [ebp+0x594271a9],eax
  417c6c:	outs   dx,BYTE PTR ds:[esi]
  417c6d:	repnz inc esi
  417c6f:	pushf  
  417c70:	in     al,0xc9
  417c72:	call   0x6d65:0xb013e121
  417c79:	sbb    DWORD PTR [ebx+ebx*8+0xf],edx
  417c7d:	add    ebx,ebp
  417c7f:	dec    edx
  417c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c81:	mov    ch,0x65
  417c83:	call   0x9c32:0x64afffa6
  417c8a:	xchg   ecx,eax
  417c8b:	int    0xa6
  417c8d:	loope  0x417c39
  417c8f:	cmc    
  417c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c91:	cmp    DWORD PTR [edx+eax*1-0x1fdd1dcd],edx
  417c98:	push   ss
  417c99:	and    bh,BYTE PTR [edx]
  417c9b:	add    edi,DWORD PTR [eax+ebp*4+0x61]
  417c9f:	mov    ch,0xe7
  417ca1:	test   eax,0x69575a4c
  417ca6:	mov    esi,DWORD PTR ds:0xd55c9cb6
  417cac:	dec    ebp
  417cad:	(bad)  
  417cae:	(bad)  
  417caf:	jmp    0x417cb3
  417cb1:	adc    al,0xf6
  417cb3:	xor    BYTE PTR [eax],cl
  417cb5:	into   
  417cb6:	repz arpl WORD PTR [edx-0x194d8a2a],bx
  417cbd:	mov    bl,0x64
  417cbf:	xor    eax,0xe7722ea2
  417cc4:	inc    ecx
  417cc5:	(bad)  
  417cc6:	or     dh,0x10
  417cc9:	in     al,0x34
  417ccb:	pop    ss
  417ccc:	add    DWORD PTR [ebx+0x3c],ebx
  417ccf:	repz mov esi,0x654061e2
  417cd5:	mov    al,ds:0xd4e370ca
  417cda:	hlt    
  417cdb:	xor    BYTE PTR [esi],dl
  417cdd:	push   0x69
  417cdf:	add    ch,dl
  417ce1:	push   ss
  417ce2:	dec    ecx
  417ce3:	cdq    
  417ce4:	add    BYTE PTR [edi+0x68],al
  417ce7:	fsub   QWORD PTR [edi-0xa]
  417cea:	jne    0x417cf2
  417cec:	out    0xd5,eax
  417cee:	xchg   ebx,eax
  417cef:	jecxz  0x417d26
  417cf1:	dec    esp
  417cf2:	pushf  
  417cf3:	pop    ebx
  417cf5:	cmp    eax,0xca4fe84e
  417cfa:	gs xchg esp,eax
  417cfc:	add    dh,ch
  417cfe:	mov    esp,0xf9c27510
  417d03:	cmp    BYTE PTR [edi+0x45],cl
  417d06:	faddp  st(6),st
  417d08:	push   edi
  417d09:	adc    BYTE PTR cs:[edx+eiz*4-0x2a],ah
  417d0e:	push   0xfc149b8c
  417d13:	scas   eax,DWORD PTR es:[edi]
  417d14:	in     al,dx
  417d15:	xchg   ebp,eax
  417d16:	xchg   esp,eax
  417d17:	addr16 sti 
  417d19:	xor    al,0xe3
  417d1b:	mov    ebp,0x39167e13
  417d20:	lahf   
  417d21:	xor    al,0xe
  417d23:	es add eax,0xbc33dfcd
  417d29:	jbe    0x417d9f
  417d2b:	outs   dx,BYTE PTR ds:[esi]
  417d2c:	jbe    0x417cba
  417d2e:	mov    ebx,0xe71abc25
  417d33:	and    DWORD PTR [esi+0x5e],edx
  417d36:	enter  0xac5c,0x37
  417d3a:	pop    es
  417d3b:	xchg   esi,eax
  417d3c:	mov    ?,WORD PTR [ebx+0x49]
  417d3f:	cdq    
  417d40:	aaa    
  417d41:	sub    DWORD PTR [ecx],esp
  417d43:	in     al,0x52
  417d45:	xor    ah,BYTE PTR [ebx+0x33dec921]
  417d4b:	jge    0x417d7b
  417d4d:	test   eax,0xfab9ef42
  417d52:	mov    ch,BYTE PTR ds:0x1363568
  417d58:	jb     0x417dbe
  417d5a:	cmp    BYTE PTR [ebx+0x15],cl
  417d5d:	(bad)  
  417d5e:	jmp    FWORD PTR [edi-0x25]
  417d61:	push   ebx
  417d62:	dec    esp
  417d63:	out    0x1d,eax
  417d65:	loopne 0x417cf9
  417d67:	mov    bl,0xc7
  417d69:	adc    DWORD PTR [edx+0x721fb384],0x13c72fd6
  417d73:	ds mov esp,0x41d6455
  417d79:	push   esp
  417d7a:	or     esi,DWORD PTR [ecx+0x7e029c23]
  417d80:	mov    ds:0x6443be36,al
  417d85:	iret   
  417d86:	int    0x2e
  417d88:	lds    esp,FWORD PTR [eax+0x6821aed]
  417d8e:	push   es
  417d8f:	jns    0x417d5e
  417d91:	sub    edi,0x7d
  417d94:	loope  0x417dc8
  417d96:	mov    ds:0xdd1e33b4,al
  417d9b:	cmp    BYTE PTR [ebx+esi*4+0x6c6512aa],ch
  417da2:	in     al,dx
  417da3:	loop   0x417d3e
  417da5:	ins    BYTE PTR es:[edi],dx
  417da6:	repz lds esi,FWORD PTR ds:0xfaf7ebd2
  417dad:	mov    ebp,0x29f8c460
  417db2:	sub    eax,DWORD PTR ds:0x82da1d4f
  417db8:	shl    BYTE PTR [ecx-0x4d4b761a],0xfe
  417dbf:	shr    DWORD PTR [ebx+0x792650c1],0x26
  417dc6:	lea    ecx,[ebp-0x5c]
  417dc9:	(bad)  
  417dca:	retf   
  417dcb:	mov    ah,al
  417dcd:	and    ebp,DWORD PTR [edx-0x17f344df]
  417dd3:	jp     0x417d79
  417dd5:	loop   0x417dbe
  417dd7:	call   0x3d3c57a8
  417ddc:	lahf   
  417ddd:	xchg   ecx,eax
  417dde:	test   BYTE PTR [ebp-0x1f],0x21
  417de2:	stos   DWORD PTR es:[edi],eax
  417de3:	in     al,dx
  417de4:	cmp    esp,esi
  417de6:	mov    ebx,0xb2abb632
  417deb:	inc    DWORD PTR [edi+0x19]
  417dee:	daa    
  417def:	push   0x3c
  417df1:	jnp    0x417e71
  417df3:	dec    ecx
  417df4:	in     al,0x1b
  417df6:	jne    0x417e05
  417df8:	stos   BYTE PTR es:[edi],al
  417df9:	mov    ds:0x537050f,eax
  417dfe:	pop    eax
  417dff:	xchg   ebx,eax
  417e00:	fstp   st(7)
  417e02:	(bad)  [esi-0x1c]
  417e05:	fldenv [eax]
  417e07:	push   ss
  417e08:	ficom  DWORD PTR [edx+0x363d4ac7]
  417e0e:	pop    ebx
  417e0f:	sub    edi,DWORD PTR [ecx-0x47fcb0e2]
  417e15:	jmp    0xe8a7621b
  417e1a:	pop    esp
  417e1b:	dec    eax
  417e1c:	jge    0x417e1c
  417e1e:	xor    ah,BYTE PTR [ebp-0xd]
  417e21:	daa    
  417e22:	ja     0x417e51
  417e24:	fild   QWORD PTR [ebx-0x4aad9f8e]
  417e2a:	cmp    esp,DWORD PTR [edx]
  417e2c:	pop    esp
  417e2d:	sub    BYTE PTR [eax],0xf1
  417e30:	cwde   
  417e31:	fs jl  0x417e8c
  417e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e35:	clc    
  417e36:	push   edi
  417e37:	retf   0xf18f
  417e3a:	adc    edi,DWORD PTR [edi+0x19]
  417e3d:	and    DWORD PTR [ecx],eax
  417e3f:	test   BYTE PTR [eax+0x7f00ec1f],cl
  417e45:	sub    ebx,DWORD PTR [esi+eiz*2+0x46b71c09]
  417e4c:	or     al,BYTE PTR [ecx-0x6d7e6613]
  417e52:	ja     0x417eaa
  417e54:	fucomp st(6)
  417e56:	jle    0x417e68
  417e58:	xor    eax,ecx
  417e5a:	dec    ebx
  417e5b:	pusha  
  417e5c:	pusha  
  417e5d:	mov    cl,0xe4
  417e5f:	push   ecx
  417e60:	ins    BYTE PTR es:[edi],dx
  417e61:	inc    ebp
  417e62:	add    DWORD PTR [eax],edi
  417e64:	and    eax,0x96dd2a29
  417e69:	pmulhuw mm7,mm4
  417e6c:	pop    ds
  417e6d:	push   esp
  417e6e:	xchg   DWORD PTR [ebx],ebp
  417e70:	mov    WORD PTR [ebx+0x14],gs
  417e73:	rol    bh,0x77
  417e76:	sbb    bl,BYTE PTR [edi+0x6a]
  417e79:	or     dh,BYTE PTR [eax-0x3b6d03d4]
  417e7f:	clc    
  417e80:	push   esi
  417e81:	addr16 pop edx
  417e83:	xchg   BYTE PTR [eax+0x4139ffd2],ch
  417e89:	mov    ds:0x88c6128c,eax
  417e8e:	mov    esp,0x87f04e38
  417e93:	dec    ecx
  417e94:	sub    ebx,DWORD PTR [esi]
  417e96:	rol    BYTE PTR [ecx-0x6dc87d62],1
  417e9c:	jbe    0x417f0d
  417e9e:	je     0x417e43
  417ea0:	pusha  
  417ea1:	push   es
  417ea2:	push   ebp
  417ea3:	int3   
  417ea4:	sar    BYTE PTR [eax+ebx*2],0xb4
  417ea8:	(bad)  
  417ea9:	stos   DWORD PTR es:[edi],eax
  417eaa:	mov    eax,0xec66ba
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    dl,al
  417eb3:	sahf   
  417eb4:	xchg   ebx,eax
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	pcmpeqb mm3,QWORD PTR [eax]
  417ec0:	or     edx,DWORD PTR [edx+0xfc19]
  417ec6:	hlt    
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR [edi],al
  417ecb:	jg     0x417edd
  417ecd:	dec    ebp
  417ece:	out    0x35,al
  417ed0:	or     edi,DWORD PTR [edx+0x62fe9df0]
  417ed6:	pop    edx
  417ed7:	pop    ds
  417ed8:	sub    DWORD PTR [ebp+0x31],edi
  417edb:	mov    eax,0x8bd74faa
  417ee0:	sub    ebx,edi
  417ee2:	xor    DWORD PTR [ebx+0x36],edi
  417ee5:	sub    cl,BYTE PTR [edx+0x5c45150]
  417eeb:	lods   al,BYTE PTR ds:[esi]
  417eec:	shl    BYTE PTR [edx+0x9189262],0xaa
  417ef3:	or     al,0xa5
  417ef5:	cwde   
  417ef6:	dec    esp
  417ef7:	sub    ebx,DWORD PTR [esi+0x39b96af]
  417efd:	ret    0x38b0
  417f00:	fisub  DWORD PTR [edi-0x53]
  417f03:	mov    esi,0xdcdfcf97
  417f08:	mov    esi,0xd4c66304
  417f0d:	dec    ebp
  417f0e:	out    0x99,al
  417f10:	or     esi,esp
  417f12:	mov    ebp,ebp
  417f14:	stc    
  417f15:	imul   BYTE PTR [esi+0x372f69f4]
  417f1b:	in     al,0xcb
  417f1d:	push   0xffffffc0
  417f1f:	in     eax,dx
  417f20:	mov    al,0x9e
  417f22:	push   eax
  417f23:	add    eax,0x8bf45761
  417f28:	add    bh,BYTE PTR [edx-0x62]
  417f2b:	fild   QWORD PTR ds:0x793c09b
  417f31:	mov    al,ds:0x93d4aca6
  417f36:	into   
  417f37:	jns    0x417f9d
  417f39:	hlt    
  417f3a:	and    eax,0x6300df23
  417f3f:	ficom  WORD PTR [edx-0x7b]
  417f42:	xor    BYTE PTR [edx+edi*4-0x2ac2f59b],al
  417f49:	add    DWORD PTR [eax-0x51],0x6ec7796f
  417f50:	sahf   
  417f51:	cmp    DWORD PTR [eax+0x44a6c2fe],esp
  417f57:	dec    ebp
  417f58:	dec    eax
  417f59:	adc    BYTE PTR [eax-0x75f88086],dl
  417f5f:	rol    bl,cl
  417f61:	arpl   WORD PTR [ebx+0x57],bx
  417f64:	cmp    ebp,DWORD PTR [esi-0x53]
  417f67:	fdiv   QWORD PTR [ebx]
  417f69:	adc    eax,esp
  417f6b:	push   esi
  417f6c:	dec    edx
  417f6d:	test   al,0x1f
  417f6f:	push   ecx
  417f70:	jae    0x417f6f
  417f72:	inc    esp
  417f73:	(bad)  
  417f74:	test   eax,0x8d81b55d
  417f79:	jne    0x417fe6
  417f7b:	sbb    BYTE PTR [esi],dl
  417f7d:	call   0x734:0x19f78ffa
  417f84:	sbb    al,0xd8
  417f86:	jmp    0x417fb2
  417f88:	dec    edx
  417f89:	loope  0x417fc4
  417f8b:	outs   dx,BYTE PTR ds:[esi]
  417f8c:	fild   WORD PTR [ebx+0x41b3a559]
  417f92:	xchg   edx,eax
  417f93:	cs push ds
  417f95:	dec    esp
  417f96:	adc    bl,BYTE PTR [ebx]
  417f98:	mov    cl,0xd6
  417f9a:	pop    ecx
  417f9b:	xchg   edi,eax
  417f9c:	outs   dx,BYTE PTR ds:[esi]
  417f9d:	sbb    eax,0x55862187
  417fa2:	test   eax,0x88a00ed2
  417fa7:	inc    esp
  417fa8:	addr16 jo 0x417fd3
  417fab:	fsubr  st(4),st
  417fad:	(bad)
  417fb1:	ds push ebx
  417fb3:	lods   al,BYTE PTR ds:[esi]
  417fb4:	push   ds
  417fb5:	ret    
  417fb6:	and    DWORD PTR ss:[ebp+0x1f10f9dc],ebx
  417fbd:	and    al,0x4d
  417fbf:	loopne 0x417ff7
  417fc1:	in     eax,0x14
  417fc3:	inc    esp
  417fc4:	mov    edi,0x898a0088
  417fc9:	pop    edi
  417fca:	bound  ebp,QWORD PTR [edx]
  417fcc:	fcmove st,st(7)
  417fce:	xlat   BYTE PTR ds:[ebx]
  417fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd0:	test   BYTE PTR [ebx-0x12],dl
  417fd3:	retf   0x3013
  417fd6:	or     cl,BYTE PTR [ebx-0x7673df59]
  417fdc:	jb     0x417f86
  417fde:	test   al,0x74
  417fe0:	(bad)  
  417fe1:	sbb    ecx,DWORD PTR [ecx-0x6563e3e8]
  417fe7:	mov    ch,0xc2
  417fe9:	mov    dh,0x6
  417feb:	sbb    DWORD PTR [esi+0x5e],esp
  417fee:	retf   0x60c3
  417ff1:	add    BYTE PTR [ebp+edi*8-0x30a723c5],dl
  417ff8:	jmp    FWORD PTR [edi-0x40f0c1cd]
  417ffe:	sbb    DWORD PTR ds:0xeb9665b,ecx
  418004:	hlt    
  418005:	test   eax,0xa9d8db3e
  41800a:	dec    ebx
  41800b:	push   0x67
  41800d:	and    DWORD PTR [ebp+esi*1-0x6f19c492],edx
  418014:	iret   
  418015:	(bad)  
  418016:	stc    
  418017:	or     eax,ecx
  418019:	xchg   ebp,eax
  41801a:	jo     0x417fc1
  41801c:	mov    dl,0x4b
  41801e:	xchg   ecx,eax
  41801f:	pusha  
  418020:	inc    ebp
  418021:	xchg   ecx,eax
  418022:	push   edx
  418023:	adc    DWORD PTR [esi],ebp
  418025:	fsub   QWORD PTR [esi+0x6]
  418028:	es ffree st(2)
  41802b:	mov    edx,0xbdcfb401
  418030:	cmp    esi,DWORD PTR [esi+0x22]
  418033:	jae    0x418042
  418035:	add    ch,dl
  418037:	xor    DWORD PTR [edi+0xc192ac2],0x49
  41803e:	dec    edi
  41803f:	scas   al,BYTE PTR es:[edi]
  418040:	retf   0xdeca
  418043:	retf   
  418044:	push   edi
  418045:	mov    ebx,0x74635cb2
  41804a:	ss hlt 
  41804c:	pop    edx
  41804d:	lahf   
  41804e:	jmp    0xc03094a
  418053:	and    BYTE PTR [ecx],bh
  418055:	hlt    
  418056:	ss inc esi
  418058:	jbe    0x4180a5
  41805a:	xor    ebx,esp
  41805c:	cmp    edx,DWORD PTR [eax-0xb51c78d]
  418062:	mov    dh,0xc2
  418064:	and    ebp,DWORD PTR [ebx+0x13b15498]
  41806a:	sbb    eax,esi
  41806c:	adc    eax,0x68c3f3c7
  418071:	inc    edi
  418072:	mov    ds:0x8f5abde5,eax
  418077:	jmp    0xa3d6a640
  41807c:	test   DWORD PTR [ecx],ebp
  41807e:	pop    edi
  41807f:	and    al,0x2b
  418081:	xchg   esi,eax
  418082:	mov    cl,0xf3
  418084:	fadd   st(5),st
  418086:	sbb    BYTE PTR [ebp-0x8e3483b],bh
  41808c:	cmp    eax,0xa88bd72a
  418091:	dec    ecx
  418092:	imul   edx,DWORD PTR [esi-0xd621cd7],0x39345fdc
  41809c:	repz or eax,0xc6b583a2
  4180a2:	js     0x4180a5
  4180a4:	scas   al,BYTE PTR es:[edi]
  4180a5:	iret   
  4180a6:	imul   ebx,DWORD PTR [ebx-0x48],0x34
  4180aa:	sub    edi,DWORD PTR [edx+0x3238b40f]
  4180b0:	stos   DWORD PTR es:[edi],eax
  4180b1:	out    0xe3,al
  4180b3:	pop    ss
  4180b4:	inc    eax
  4180b5:	lods   al,BYTE PTR ds:[esi]
  4180b6:	sbb    al,0x88
  4180b8:	sbb    BYTE PTR [ebp-0x648c4291],0xec
  4180bf:	je     0x4180ee
  4180c1:	sub    BYTE PTR [ebx],bh
  4180c3:	cmp    BYTE PTR [ecx+0x79],ch
  4180c6:	fsub   QWORD PTR [ecx]
  4180c8:	jb     0x418060
  4180ca:	cwde   
  4180cb:	xor    eax,0xdfcd8d7e
  4180d0:	jno    0x418116
  4180d2:	mov    ebp,0xd2e8c910
  4180d7:	retf   0xa932
  4180da:	ss dec esi
  4180dc:	aam    0xfb
  4180de:	and    dl,BYTE PTR [ebp-0x59cb3aac]
  4180e4:	or     BYTE PTR [edx-0x73],cl
  4180e7:	int3   
  4180e8:	dec    ebp
  4180e9:	scas   al,BYTE PTR es:[edi]
  4180ea:	rcl    DWORD PTR [edx+eiz*8-0x70],0x6c
  4180ef:	sti    
  4180f0:	inc    eax
  4180f1:	cmp    dh,BYTE PTR [edx+0x3]
  4180f4:	cld    
  4180f5:	fimul  WORD PTR [ecx-0x36e4b754]
  4180fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fd:	scas   al,BYTE PTR es:[edi]
  4180fe:	mov    eax,0xb47d4103
  418103:	cdq    
  418104:	jecxz  0x418108
  418106:	adc    DWORD PTR [edi+0x38],esp
  418109:	inc    esp
  41810a:	lahf   
  41810b:	sub    BYTE PTR [ecx+0x33],dh
  41810e:	imul   ebx,edi,0x8
  418111:	lods   eax,DWORD PTR ds:[esi]
  418112:	bound  eax,QWORD PTR ds:0xb079a48f
  418118:	and    dh,al
  41811a:	pop    ss
  41811b:	mov    edi,DWORD PTR [ebp-0x61]
  41811e:	popf   
  41811f:	pop    ebx
  418120:	jns    0x418119
  418122:	mov    ecx,0x88112222
  418127:	mov    bl,0x19
  418129:	cdq    
  41812a:	js     0x4180d1
  41812c:	push   esi
  41812d:	lods   al,BYTE PTR ds:[esi]
  41812e:	ss push ebp
  418130:	outs   dx,DWORD PTR ds:[esi]
  418132:	and    edi,DWORD PTR [edi+0x34b87536]
  418138:	jbe    0x418100
  41813a:	xor    ebx,DWORD PTR [edx-0x17c487f5]
  418140:	int3   
  418141:	sbb    BYTE PTR ds:[eax-0x1c],ah
  418145:	shr    BYTE PTR [ebx],cl
  418147:	push   ebp
  418148:	lods   ax,WORD PTR ds:[esi]
  41814a:	ror    BYTE PTR [edi],0xb4
  41814d:	mov    ds:0x2b7aa52a,al
  418152:	mov    bl,0xfa
  418154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418155:	lds    ecx,FWORD PTR [eax+0x54]
  418158:	loopne 0x4181a2
  41815a:	inc    ebp
  41815b:	out    dx,eax
  41815c:	jmp    0x4e71:0x8617f59
  418163:	mov    ecx,DWORD PTR [ecx]
  418165:	data16 ficomp DWORD PTR [esi-0x4af13758]
  41816c:	push   cs
  41816d:	std    
  41816e:	push   es
  41816f:	int    0x7c
  418171:	xor    esi,ebp
  418173:	add    al,0xf1
  418175:	scas   al,BYTE PTR es:[edi]
  418176:	mov    ?,WORD PTR [esi+eax*1]
  418179:	test   BYTE PTR [eax+ecx*4+0x2791b70f],cl
  418180:	bound  esp,QWORD PTR [ebx-0x64437947]
  418186:	ret    
  418187:	dec    esi
  418188:	dec    edi
  41818a:	jle    0x418183
  41818c:	or     ebp,DWORD PTR [edx+0x6aedcb6e]
  418192:	inc    edx
  418193:	or     al,cl
  418195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418196:	push   esi
  418197:	sbb    ch,BYTE PTR [ebx+eax*8-0x6156a86d]
  41819e:	sbb    al,0xc5
  4181a0:	pop    ecx
  4181a1:	js     0x4181b9
  4181a3:	sub    al,0x25
  4181a5:	jb     0x41819b
  4181a7:	stos   BYTE PTR es:[edi],al
  4181a8:	lods   al,BYTE PTR ds:[esi]
  4181a9:	mov    edx,0x7adb7af9
  4181ae:	in     al,dx
  4181af:	in     eax,dx
  4181b0:	cdq    
  4181b1:	dec    ebx
  4181b2:	repz mov edx,0x52172248
  4181b8:	mov    al,0x3a
  4181ba:	sub    ch,cl
  4181bc:	mov    BYTE PTR [eax],dl
  4181be:	mul    DWORD PTR [ebx+0x607e92a0]
  4181c4:	cmp    dh,bl
  4181c6:	aas    
  4181c7:	test   eax,0x7aa80be2
  4181cc:	scas   al,BYTE PTR es:[edi]
  4181cd:	data16 out dx,al
  4181cf:	sbb    BYTE PTR [ebx-0x5e],cl
  4181d2:	push   ss
  4181d3:	jmp    DWORD PTR [ecx-0x2]
  4181d6:	mov    edx,0x3c6ecad2
  4181db:	mov    ch,0xbe
  4181dd:	jl     0x418185
  4181df:	test   al,0x37
  4181e1:	add    BYTE PTR [edx+0x77],ch
  4181e4:	leave  
  4181e5:	outs   dx,DWORD PTR ds:[esi]
  4181e6:	out    dx,al
  4181e7:	mov    WORD PTR [esi+0x6be285ab],ds
  4181ed:	pop    esp
  4181ee:	pop    eax
  4181ef:	sub    BYTE PTR [edx+0x5d],bl
  4181f2:	pslld  mm0,QWORD PTR [edi-0x251b6e8b]
  4181f9:	inc    eax
  4181fa:	imul   ecx,DWORD PTR [ebx-0x6e],0x4e4c39b4
  418201:	jae    0x4181af
  418203:	sbb    al,0x7f
  418205:	gs jle 0x418188
  418208:	and    eax,0xaa9177bc
  41820d:	shr    DWORD PTR [esi],0xea
  418210:	dec    ebx
  418211:	xor    esp,eax
  418213:	imul   esi,edi,0xffffff89
  418216:	sbb    eax,0x7c52f618
  41821b:	mov    bh,0x42
  41821d:	xor    dl,BYTE PTR [esi-0x58]
  418220:	ins    DWORD PTR es:[edi],dx
  418221:	ja     0x41823d
  418223:	xchg   ebp,eax
  418224:	push   ebx
  418225:	mov    ds:0xe1c18624,al
  41822a:	jns    0x7369e87a
  418230:	in     eax,0x8e
  418232:	imul   BYTE PTR [eax+0x2e439164]
  418238:	mov    cl,0x6f
  41823a:	sub    edx,DWORD PTR [edi-0x88caf4a]
  418240:	pop    edx
  418241:	leave  
  418242:	idiv   edx
  418244:	mov    ebp,0x65658021
  418249:	mov    ds:0xfda25a3b,al
  41824e:	or     BYTE PTR [esi-0x2bffd527],ah
  418254:	push   esi
  418255:	fwait
  418256:	push   cs
  418257:	shr    BYTE PTR [edi-0x76949977],0x43
  41825e:	aas    
  41825f:	ja     0x4182bb
  418261:	sahf   
  418262:	pop    esp
  418263:	mov    ecx,0x884474a1
  418268:	dec    edx
  418269:	ins    BYTE PTR es:[edi],dx
  41826a:	or     al,0x5d
  41826c:	jge    0x418299
  41826e:	sti    
  41826f:	(bad)  [ecx]
  418271:	gs inc esi
  418273:	mov    dl,0x6e
  418275:	adc    edx,DWORD PTR [eax+0x15]
  418278:	cdq    
  418279:	(bad)  
  41827a:	mov    ds:0x2f60273a,al
  41827f:	rcl    edi,0xe5
  418282:	and    al,0xcd
  418284:	fwait
  418285:	add    BYTE PTR [bx+0x6704],ah
  41828a:	loopne 0x418216
  41828c:	or     DWORD PTR [edi-0x37393a31],edi
  418292:	mov    DWORD PTR [ebx-0x51d34218],ebp
  418298:	xchg   edx,eax
  418299:	mov    eax,ds:0x547b763e
  41829e:	pop    ecx
  41829f:	and    eax,0x3a1da011
  4182a4:	sbb    BYTE PTR [eax],ch
  4182a6:	lods   al,BYTE PTR ds:[esi]
  4182a7:	push   ss
  4182a8:	dec    eax
  4182a9:	fld    QWORD PTR [ebp-0x10]
  4182ac:	mov    dl,0x32
  4182ae:	popf   
  4182af:	fdiv   QWORD PTR [ebx+0x3e79df1b]
  4182b5:	xchg   DWORD PTR [ebx],ecx
  4182b7:	inc    edi
  4182b8:	mov    WORD PTR [edi-0x24a0e4fe],?
  4182be:	sbb    BYTE PTR [eiz*1-0x3ebf9fee],bl
  4182c5:	rol    BYTE PTR [edx+0x60],0xbf
  4182c9:	pop    ss
  4182ca:	mov    al,0xe8
  4182cc:	add    ch,BYTE PTR [ebx]
  4182ce:	aam    0xc2
  4182d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182d1:	popf   
  4182d2:	ds shr bh,cl
  4182d5:	push   es
  4182d6:	(bad)  
  4182d7:	mov    eax,ds:0x2a154da1
  4182dc:	sub    DWORD PTR [ecx+0x69b6098b],0x27
  4182e3:	mov    ch,0xbb
  4182e5:	mov    cl,0x52
  4182e7:	adc    BYTE PTR [ecx-0x1f],bh
  4182ea:	push   ds
  4182eb:	cmp    eax,0x9265eec7
  4182f0:	in     al,dx
  4182f1:	pop    ebp
  4182f2:	out    dx,eax
  4182f3:	mov    dh,0x33
  4182f5:	xchg   ebp,eax
  4182f6:	imul   esp,DWORD PTR [eax],0x7
  4182f9:	mov    ecx,0x723a0dd8
  4182fe:	add    eax,0xaeaa403d
  418303:	pop    ds
  418304:	cmc    
  418305:	cdq    
  418306:	add    esp,DWORD PTR [edx+ebx*2-0x1a]
  41830a:	or     ah,al
  41830c:	xchg   esp,eax
  41830d:	outs   dx,DWORD PTR ds:[esi]
  41830e:	push   es
  41830f:	jne    0x41829b
  418311:	push   ss
  418312:	push   esp
  418313:	ins    DWORD PTR es:[edi],dx
  418314:	push   edi
  418315:	dec    ecx
  418316:	push   0x58
  418318:	arpl   WORD PTR [edi+0x5b],cx
  41831b:	iret   
  41831c:	aam    0x67
  41831e:	cmp    dh,BYTE PTR [ebx+edx*4-0x7a662ef]
  418325:	out    0x5a,eax
  418327:	test   bh,cl
  418329:	in     eax,0x46
  41832b:	push   cs
  41832c:	push   es
  41832d:	jge    0x41835b
  41832f:	cmp    eax,0x3870e1e8
  418334:	jb     0x418361
  418336:	lahf   
  418337:	retf   
  418338:	or     DWORD PTR [ebx-0x749c2a24],ecx
  41833e:	mov    al,0x2e
  418340:	mov    edi,0x9015aff
  418345:	test   ch,dl
  418347:	test   eax,0xe8b587a0
  41834c:	mov    ah,0xfb
  41834e:	rol    BYTE PTR [ebx+ebx*4+0x4],0x6d
  418353:	mov    al,ds:0xa4343e70
  418358:	std    
  418359:	shl    edx,cl
  41835b:	mov    ch,bh
  41835d:	mov    ds:0xdc14a864,al
  418362:	xchg   BYTE PTR [esi-0x128cb02],bh
  418368:	jl     0x41836b
  41836a:	mov    ebx,DWORD PTR [edx]
  41836c:	push   ebp
  41836d:	add    cl,al
  41836f:	je     0x418393
  418371:	cmp    BYTE PTR [edi],dl
  418373:	push   0x99d117a0
  418378:	mov    WORD PTR [eax-0x6cbb8fc8],cs
  41837e:	sbb    edi,ebx
  418380:	fs cdq 
  418382:	clc    
  418383:	cmp    ecx,DWORD PTR [ebp-0x1]
  418386:	xchg   esi,eax
  418387:	call   0xf7c4:0xf7f18c9b
  41838e:	jbe    0x41834b
  418390:	lea    ebp,[ebx+0x7932c11c]
  418396:	xor    bh,BYTE PTR [edi+0x23]
  418399:	xor    BYTE PTR es:[ebp+eax*4-0x5c28926b],bl
  4183a1:	sub    al,0xd
  4183a3:	aaa    
  4183a4:	add    al,0x2a
  4183a6:	pop    edi
  4183a7:	inc    ebp
  4183a8:	jp     0x418408
  4183aa:	sahf   
  4183ab:	jbe    0x4183f3
  4183ad:	stos   DWORD PTR es:[edi],eax
  4183ae:	inc    edx
  4183af:	mov    cl,0xac
  4183b1:	and    al,0xe4
  4183b3:	add    al,0x6c
  4183b5:	sar    DWORD PTR [esi-0x2534b976],0x24
  4183bc:	pop    ecx
  4183bd:	and    al,BYTE PTR [eax]
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	cmp    DWORD PTR [ebx],0x22
  4183d0:	(bad)  
  4183d2:	or     eax,0xf4000101
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [edi-0x3c],al
  4183dc:	jmp    0x57c:0xb30c8086
  4183e3:	or     edx,DWORD PTR [eax+0x35]
  4183e6:	std    
  4183e7:	dec    bx
  4183e9:	mov    eax,0xaae4275a
  4183ee:	jno    0x4183bd
  4183f0:	stc    
  4183f1:	mov    ebp,0x3d23c443
  4183f6:	stos   DWORD PTR es:[edi],eax
  4183f7:	xchg   ecx,eax
  4183f8:	popf   
  4183f9:	test   BYTE PTR [ebx+0x12],ah
  4183fc:	xor    DWORD PTR [eax],0xd
  4183ff:	adc    al,0x8f
  418401:	stos   DWORD PTR es:[edi],eax
  418402:	clc    
  418403:	mov    edi,0x565bdd72
  418408:	add    BYTE PTR [esi],dh
  41840a:	fwait
  41840b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41840d:	les    esi,FWORD PTR [ebx+0x1b]
  418410:	push   ecx
  418411:	inc    edi
  418412:	add    eax,0xc9ca73b0
  418417:	mov    dl,BYTE PTR ss:[edx+edi*2+0x70bd3d92]
  41841f:	cld    
  418420:	mov    ebx,0x163bf0f
  418425:	pop    esp
  418426:	xor    DWORD PTR [esi],edi
  418428:	jmp    0x95719dfe
  41842d:	xchg   DWORD PTR [edi-0xc],esp
  418430:	cwde   
  418431:	pop    esp
  418432:	or     ch,BYTE PTR [edi+0x69ca520c]
  418438:	mov    ds:0x8c05e01a,eax
  41843d:	jg     0x418466
  41843f:	xlat   BYTE PTR ds:[ebx]
  418440:	xor    DWORD PTR [eax],ecx
  418442:	daa    
  418443:	das    
  418444:	push   ebx
  418445:	push   cs
  418446:	not    DWORD PTR [esi-0x7e]
  418449:	test   DWORD PTR [edi-0x23],edi
  41844c:	mov    al,ds:0x6679a4d2
  418451:	enter  0x45cd,0xa5
  418455:	pop    ecx
  418456:	sbb    DWORD PTR [edi-0x12],ebx
  418459:	dec    ecx
  41845a:	int    0x87
  41845c:	push   ebx
  41845d:	sub    BYTE PTR [esi+0xeab8e79],bl
  418463:	push   esp
  418464:	push   edx
  418465:	mov    ebx,0x1b59fe27
  41846a:	cmp    al,0x82
  41846c:	xchg   ecx,eax
  41846d:	mov    al,0xf7
  41846f:	dec    eax
  418470:	dec    ecx
  418471:	int3   
  418472:	loope  0x4184b3
  418474:	std    
  418475:	jmp    0x1f839660
  41847a:	jmp    0x6562a6cc
  41847f:	jge    0x41848d
  418481:	and    al,0x2e
  418483:	repz pop esi
  418485:	mov    eax,0x92c6d08e
  41848a:	push   edi
  41848b:	outs   dx,DWORD PTR ds:[esi]
  41848c:	cdq    
  41848d:	xchg   esp,eax
  41848e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41848f:	or     cl,BYTE PTR [edi-0x6a]
  418492:	outs   dx,DWORD PTR ds:[esi]
  418493:	ret    
  418494:	jae    0x41841b
  418496:	sbb    ecx,DWORD PTR [ebx]
  418498:	shl    DWORD PTR [ebp-0x6fe21ec],cl
  41849e:	xor    eax,0xe145983d
  4184a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a4:	cmp    edi,DWORD PTR [ecx+ebp*8-0x41d4ce59]
  4184ab:	or     dh,ah
  4184ad:	into   
  4184ae:	fld    QWORD PTR [ebx-0x13351feb]
  4184b4:	dec    edx
  4184b5:	cmc    
  4184b6:	cmp    ebp,ebp
  4184b8:	inc    esp
  4184b9:	inc    eax
  4184ba:	xor    cl,0x7a
  4184bd:	dec    eax
  4184be:	aad    0xa5
  4184c0:	mov    esp,0x3d3937fa
  4184c5:	mov    cs,WORD PTR [ecx+0x5184fcbd]
  4184cb:	icebp  
  4184cc:	dec    ebp
  4184cd:	(bad)  
  4184ce:	hlt    
  4184cf:	fild   WORD PTR [eiz*4-0x72351aaf]
  4184d6:	add    ebx,0xb8919d69
  4184dc:	push   es
  4184dd:	adc    BYTE PTR [eax+0x26],ah
  4184e0:	scas   eax,DWORD PTR es:[edi]
  4184e1:	xchg   ebp,eax
  4184e2:	das    
  4184e3:	call   0xd4c1f16e
  4184e8:	cmp    ah,ah
  4184ea:	and    BYTE PTR [ebx+esi*8],bl
  4184ed:	add    cl,BYTE PTR [ebx]
  4184ef:	inc    edi
  4184f0:	imul   edi,DWORD PTR [edi+ebp*4+0x4559459e],0x7f
  4184f8:	icebp  
  4184f9:	or     ebx,DWORD PTR [ecx]
  4184fb:	out    dx,eax
  4184fc:	push   eax
  4184fd:	push   ebx
  4184fe:	int3   
  4184ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418500:	lods   al,BYTE PTR ds:[si]
  418502:	dec    ebp
  418503:	push   ds
  418504:	adc    cl,BYTE PTR [edi]
  418506:	sar    BYTE PTR [edx],cl
  418508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418509:	push   ss
  41850a:	imul   ebp,DWORD PTR [edi+0x24c331cd],0xffffffed
  418511:	cmc    
  418512:	jbe    0x41854f
  418514:	iret   
  418515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418516:	rcr    ecx,0x51
  418519:	xchg   BYTE PTR [esi-0x45],bl
  41851c:	inc    edx
  41851d:	repz mov dh,0xa7
  418520:	jnp    0x4184c6
  418522:	fsubr  DWORD PTR [ebx-0x14]
  418525:	dec    DWORD PTR [esi+0x412f74fb]
  41852b:	mov    esp,0x67fc6994
  418530:	add    DWORD PTR [eax+0x4e],eax
  418533:	test   DWORD PTR [edi-0xa985a62],eax
  418539:	inc    ebp
  41853a:	nop
  41853b:	jno    0x4184cc
  41853d:	or     ecx,DWORD PTR [esi]
  41853f:	push   edi
  418540:	mov    al,ds:0x6a4e790e
  418545:	cmc    
  418546:	adc    DWORD PTR [ebp+0x37da1afd],ebx
  41854c:	xor    eax,0x65224f97
  418551:	(bad)  
  418552:	loopne 0x4184f3
  418554:	mov    cl,0x1d
  418556:	or     eax,0x212655d
  41855b:	pushf  
  41855c:	enter  0x8582,0x94
  418560:	jo     0x4185a2
  418562:	lods   al,BYTE PTR ds:[esi]
  418563:	in     eax,dx
  418564:	adc    bh,BYTE PTR [edi]
  418566:	add    edi,DWORD PTR [edx+0x45]
  418569:	fwait
  41856a:	loope  0x4184f7
  41856c:	adc    bl,dl
  41856e:	jle    0x418535
  418570:	sbb    al,0x20
  418572:	sbb    al,0xf9
  418574:	fnstcw WORD PTR [ecx+ecx*2+0x1e678585]
  41857b:	xor    BYTE PTR [eax+eax*4-0x66],dh
  41857f:	mov    eax,0x56ef7d0f
  418584:	xchg   DWORD PTR [edx+0xf],edx
  418587:	scas   al,BYTE PTR es:[edi]
  418588:	sbb    eax,0xc070735d
  41858d:	fxch   st(5)
  41858f:	or     DWORD PTR [ecx],edi
  418591:	or     BYTE PTR [edi+0x3],dh
  418594:	shl    ecx,cl
  418596:	sbb    DWORD PTR [ebp+0x33],edi
  418599:	xor    DWORD PTR [ecx-0x40],0xd818f06
  4185a0:	dec    ebx
  4185a1:	cmp    ebx,DWORD PTR [eax-0x56]
  4185a4:	pop    es
  4185a5:	sahf   
  4185a6:	mov    ebx,0x3e11345b
  4185ab:	jg     0x418587
  4185ad:	inc    eax
  4185ae:	mov    cs,ecx
  4185b0:	pop    ss
  4185b1:	mov    eax,0x9e19938a
  4185b6:	in     eax,dx
  4185b7:	sub    bl,BYTE PTR [ebx+0x1f1d697e]
  4185bd:	int    0x26
  4185bf:	imul   eax,esi,0xb115fd3
  4185c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c6:	shl    DWORD PTR [ebx-0x7cc51bf5],cl
  4185cc:	stc    
  4185cd:	ficomp DWORD PTR [ebx-0x71]
  4185d0:	bound  ecx,QWORD PTR [ebx+0x28826cc3]
  4185d6:	out    dx,al
  4185d7:	lods   al,BYTE PTR ds:[esi]
  4185d8:	add    BYTE PTR [esi-0x6f],ch
  4185db:	enter  0x9192,0x8d
  4185df:	ins    BYTE PTR es:[edi],dx
  4185e0:	dec    ebp
  4185e1:	mov    esi,0x3d056d
  4185e6:	adc    DWORD PTR [edx+eiz*1],esp
  4185e9:	jmp    0x418579
  4185eb:	mov    edi,0xfb2b38b2
  4185f0:	push   edx
  4185f1:	lds    eax,FWORD PTR [esi-0x43db7a94]
  4185f7:	iret   
  4185f8:	xchg   ebp,eax
  4185f9:	icebp  
  4185fa:	add    ah,BYTE PTR [esi]
  4185fc:	xor    bh,dl
  4185fe:	adc    DWORD PTR [esi+0x1f6fa526],edx
  418604:	loop   0x41862d
  418606:	inc    BYTE PTR [ecx]
  418608:	repnz inc eax
  41860a:	push   ebp
  41860b:	idiv   DWORD PTR [ebp-0x2d]
  41860e:	inc    eax
  41860f:	(bad)  
  418610:	shl    DWORD PTR [ebx-0x2a],cl
  418613:	fwait
  418614:	pop    DWORD PTR [ebp+0x13]
  418617:	clc    
  418618:	push   ds
  418619:	daa    
  41861a:	std    
  41861b:	das    
  41861c:	sbb    edi,eax
  41861e:	push   es
  41861f:	pop    es
  418620:	mov    ebp,?
  418622:	pop    eax
  418623:	inc    esp
  418624:	iret   
  418625:	push   edx
  418626:	mov    edx,eax
  418628:	int3   
  418629:	aam    0xf
  41862b:	popf   
  41862c:	mov    esp,0x5f910212
  418631:	or     ebp,DWORD PTR [edx]
  418633:	inc    esi
  418634:	ds push es
  418636:	and    dl,cl
  418638:	mov    al,ds:0xf2d37d37
  41863d:	mov    eax,ds:0xa4a90880
  418642:	mov    eax,ds:0x4758c4c5
  418647:	jns    0x4185d8
  418649:	cmp    DWORD PTR [ebx+ecx*8-0x6cb705a1],eax
  418650:	pop    edi
  418651:	adc    BYTE PTR [esi],al
  418653:	push   esp
  418654:	fwait
  418655:	xor    DWORD PTR [edx+0x412b325a],0xfffffffc
  41865c:	mov    DWORD PTR [eax-0x1],eax
  41865f:	das    
  418660:	les    eax,FWORD PTR [ebp-0x6d]
  418663:	in     al,dx
  418664:	mov    esp,0xc567cd38
  418669:	fdiv   st,st(4)
  41866b:	rcr    ecx,1
  41866d:	aas    
  41866e:	cwde   
  41866f:	sti    
  418670:	adc    eax,0x15c5050c
  418675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418676:	or     eax,0xd23cebb3
  41867b:	xchg   edi,eax
  41867c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41867d:	rcl    DWORD PTR [edx],cl
  41867f:	inc    eax
  418680:	rcr    BYTE PTR [eax-0x5659630d],1
  418686:	inc    edx
  418687:	cli    
  418688:	call   edx
  41868a:	push   0x79
  41868c:	ins    DWORD PTR es:[edi],dx
  41868d:	push   ebp
  41868e:	or     BYTE PTR [eax+0x3a8bac89],dh
  418694:	arpl   dx,si
  418696:	lods   al,BYTE PTR ds:[esi]
  418697:	sub    ah,BYTE PTR [ebp+edi*4+0x30]
  41869b:	ja     0x4186fd
  41869d:	xor    ah,BYTE PTR [ebp-0x1fe1d25e]
  4186a3:	xor    al,0x5b
  4186a5:	ret    
  4186a6:	push   ds
  4186a7:	addr16 in al,dx
  4186a9:	mov    ah,0xce
  4186ab:	cmp    al,0x8b
  4186ad:	adc    eax,0x5129151b
  4186b2:	mov    BYTE PTR [ebx+0x4ff5deb6],dh
  4186b8:	cmp    ah,BYTE PTR [ebx-0x384308aa]
  4186be:	cmp    ebx,DWORD PTR [ecx-0x1762155a]
  4186c4:	pop    ss
  4186c5:	xor    eax,0x92895cf
  4186ca:	pop    edx
  4186cb:	push   ebx
  4186cc:	sbb    DWORD PTR [ebx+0x3d034282],eax
  4186d2:	(bad)  
  4186d3:	loope  0x41869b
  4186d5:	mov    ebp,0x12317629
  4186da:	dec    ebp
  4186db:	mov    BYTE PTR [ebx],ch
  4186dd:	sub    eax,0x2a9e4f76
  4186e2:	fdecstp 
  4186e4:	in     eax,0x2a
  4186e6:	iret   
  4186e7:	cld    
  4186e8:	test   eax,0x2614e187
  4186ed:	stos   BYTE PTR es:[edi],al
  4186ee:	fwait
  4186ef:	or     esp,edx
  4186f1:	xor    BYTE PTR [ebx+esi*8],ah
  4186f4:	adc    esp,DWORD PTR [edx+0x623d725e]
  4186fa:	dec    eax
  4186fb:	das    
  4186fc:	clc    
  4186fd:	push   esp
  4186fe:	retf   
  4186ff:	and    BYTE PTR [edx+ebx*4-0x1a],al
  418703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418704:	add    al,BYTE PTR [edi]
  418706:	mov    esi,0x27bb247e
  41870b:	jl     0x418714
  41870d:	cs sub edi,ebp
  418710:	stc    
  418711:	test   DWORD PTR [ebp+0x78],0x7da9cb7e
  418718:	inc    ecx
  418719:	adc    cl,BYTE PTR [ebx+0x1b]
  41871c:	mov    cl,0xf3
  41871e:	mov    ds:0x64b041f8,eax
  418723:	push   0x6dc5c77d
  418728:	or     al,0xbf
  41872a:	(bad)  
  41872b:	dec    esp
  41872c:	aad    0xbc
  41872e:	mov    DWORD PTR [edi+eiz*8-0x3b],esi
  418732:	mov    ch,0xf0
  418734:	add    DWORD PTR [ebp-0x10],esp
  418737:	repnz sbb eax,0xc80be416
  41873d:	(bad)  
  41873e:	sub    eax,0x7b16c703
  418743:	(bad)  
  418744:	in     eax,dx
  418745:	rcr    DWORD PTR [esi],1
  418747:	mov    edi,0xc530b4e1
  41874c:	adc    DWORD PTR [esi-0x64],edi
  41874f:	xchg   edi,eax
  418750:	call   0x49c:0x13c8ce38
  418757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418758:	ret    
  418759:	mov    ecx,0x2bfafdc8
  41875e:	ret    
  41875f:	je     0x418707
  418761:	ficom  WORD PTR [ebx]
  418763:	out    0x74,eax
  418765:	jp     0x418753
  418767:	or     BYTE PTR [ecx],0x44
  41876a:	push   0xb380c4f4
  41876f:	cs ja  0x41873f
  418772:	sub    BYTE PTR [edi],bl
  418774:	sbb    al,al
  418776:	inc    ebp
  418777:	xchg   ecx,eax
  418778:	fild   QWORD PTR [esi]
  41877a:	cmp    esi,DWORD PTR [edx-0x63]
  41877d:	sbb    eax,0x5c54dd0a
  418782:	out    dx,eax
  418783:	arpl   WORD PTR [ebx],cx
  418785:	mov    bl,0x53
  418787:	(bad)  
  418789:	mov    bl,0x70
  41878b:	scas   eax,DWORD PTR es:[edi]
  41878c:	aam    0x9
  41878e:	lods   al,BYTE PTR ds:[esi]
  41878f:	repz jns 0x418742
  418792:	sub    DWORD PTR [ebx+0x5f5b29a4],ebp
  418798:	add    ah,BYTE PTR [edx]
  41879a:	aad    0x1a
  41879c:	lds    edx,FWORD PTR [eax-0x22c708b0]
  4187a2:	nop
  4187a3:	dec    esi
  4187a4:	mov    esp,DWORD PTR [esi+0x50]
  4187a7:	(bad)  
  4187a9:	pop    eax
  4187aa:	dec    ebx
  4187ab:	cld    
  4187ac:	adc    eax,0xcf3115b7
  4187b1:	cmp    bl,BYTE PTR [edi+0x1aefd721]
  4187b7:	push   esp
  4187b8:	je     0x418830
  4187ba:	stc    
  4187bb:	xlat   BYTE PTR ds:[ebx]
  4187bc:	pusha  
  4187bd:	pop    ebx
  4187be:	dec    esp
  4187bf:	push   ds
  4187c0:	ret    
  4187c1:	fisub  DWORD PTR [esi]
  4187c3:	hlt    
  4187c4:	pusha  
  4187c5:	jge    0x4187ee
  4187c7:	or     edx,DWORD PTR [edx]
  4187c9:	mov    esi,ss
  4187cb:	outs   dx,DWORD PTR ds:[esi]
  4187cc:	sbb    edi,edx
  4187ce:	inc    edx
  4187cf:	pop    eax
  4187d0:	js     0x4187af
  4187d2:	mov    BYTE PTR [edx+edi*2],ah
  4187d5:	scas   al,BYTE PTR es:[edi]
  4187d6:	loop   0x41879d
  4187d8:	add    al,0x5d
  4187da:	sbb    bh,BYTE PTR [ecx+0x1ad7254e]
  4187e0:	das    
  4187e1:	mov    edi,0xd5f98add
  4187e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e7:	pop    eax
  4187e8:	pop    ebp
  4187e9:	stc    
  4187ea:	mov    ds:0x8371857e,eax
  4187ef:	add    DWORD PTR [esi+0x4],ecx
  4187f2:	aaa    
  4187f3:	out    dx,eax
  4187f4:	sahf   
  4187f5:	(bad)  
  4187f6:	inc    edi
  4187f7:	nop
  4187f8:	leave  
  4187f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187fa:	push   edx
  4187fb:	(bad)  
  4187fd:	das    
  4187fe:	jnp    0x4187a3
  418800:	loop   0x41882b
  418802:	xchg   cl,ch
  418804:	out    0xac,eax
  418806:	pop    esi
  418807:	add    al,0x10
  418809:	ja     0x418795
  41880b:	test   al,0x48
  41880d:	mov    eax,0xfdef15e4
  418812:	jmp    0x4187cf
  418814:	adc    esi,ebp
  418816:	gs in  al,0xef
  418819:	adc    esi,DWORD PTR [ebx]
  41881b:	loope  0x418870
  41881d:	clc    
  41881e:	sahf   
  41881f:	stos   DWORD PTR es:[edi],eax
  418820:	xchg   esi,eax
  418821:	sbb    BYTE PTR [ebp+0x11],bl
  418824:	stc    
  418825:	mov    ?,WORD PTR [ebp+0x7e]
  418828:	mov    bl,0xa9
  41882a:	jge    0x41889a
  41882c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41882d:	ja     0x4187e1
  41882f:	dec    esp
  418830:	xor    bh,BYTE PTR [eax-0x1129ca76]
  418836:	jae    0x4187e2
  418838:	pop    es
  418839:	sbb    al,0xd3
  41883b:	outs   dx,DWORD PTR ds:[si]
  41883d:	push   ss
  41883e:	iret   
  41883f:	int3   
  418840:	popa   
  418841:	inc    ebp
  418842:	and    bh,BYTE PTR [edx-0x1e]
  418845:	dec    ecx
  418846:	sbb    edx,ebp
  418848:	sbb    bh,BYTE PTR cs:[edi+0x16fb2e0e]
  41884f:	push   ebp
  418850:	mov    ebx,0xe02964e3
  418855:	xchg   ecx,eax
  418856:	mov    dh,0x3
  418858:	and    ebp,esp
  41885a:	loope  0x41881a
  41885c:	aad    0x9a
  41885e:	rcr    esp,1
  418860:	ret    
  418861:	adc    eax,0xa6ca2c74
  418866:	shl    ch,1
  418868:	mul    ah
  41886a:	mov    fs,WORD PTR [eax+ecx*8]
  41886d:	aas    
  41886e:	and    BYTE PTR cs:[ebx+edi*4],0x9b
  418873:	loop   0x418899
  418875:	xor    ch,cl
  418877:	inc    edx
  418878:	out    0xc5,eax
  41887a:	pusha  
  41887b:	add    DWORD PTR [esp+ebp*1+0x8],ebp
  41887f:	add    dl,BYTE PTR [esp+ecx*8+0x1]
  418883:	bound  eax,QWORD PTR [ecx-0x62]
  418886:	fsub   st(4),st
  418888:	jne    0x4188c8
  41888a:	sbb    al,0xd0
  41888c:	and    BYTE PTR [ebx+eax*8+0x63],cl
  418890:	push   edi
  418891:	ds out 0x3e,al
  418894:	popa   
  418895:	shr    BYTE PTR [edi-0x77c8de95],0xb5
  41889c:	icebp  
  41889d:	call   0x4cc3:0xfe1de74c
  4188a4:	loope  0x4188a0
  4188a6:	push   edi
  4188a7:	or     al,0xa0
  4188a9:	inc    edi
  4188aa:	inc    esp
  4188ab:	inc    edi
  4188ac:	mov    BYTE PTR [ebx-0x28269d48],al
  4188b2:	and    esp,edx
  4188b4:	stos   BYTE PTR es:[edi],al
  4188b5:	mov    ebp,edi
  4188b7:	mov    DWORD PTR [ebx],edi
  4188b9:	imul   esp,esi,0x7721f7ec
  4188bf:	pop    eax
  4188c0:	out    dx,al
  4188c1:	xor    esi,ecx
  4188c3:	lahf   
  4188c4:	(bad)  
  4188c5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4188c7:	ret    
  4188c8:	inc    eax
  4188c9:	add    BYTE PTR [esi+0x58],bl
  4188cc:	int3   
  4188cd:	dec    ebx
  4188ce:	add    BYTE PTR [eax],al
  4188d0:	add    BYTE PTR [eax],al
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0xd5
  4188df:	jl     0x418900
  4188e1:	sgdtd  [esi]
  4188e4:	add    DWORD PTR [eax],eax
  4188e6:	hlt    
  4188e7:	add    al,0x0
  4188e9:	add    BYTE PTR [esi+0x2d],dh
  4188ec:	addr16 (bad) 
  4188ef:	mov    eax,ds:0x134ae7bc
  4188f4:	cmp    al,0xb2
  4188f6:	jb     0x41887d
  4188f8:	sub    bl,ah
  4188fa:	cs sti 
  4188fc:	sub    BYTE PTR [ebp-0x32360f95],0x58
  418903:	cmp    DWORD PTR [eax+0x78d2d3c1],edx
  418909:	loopne 0x41888e
  41890b:	(bad)  
  41890c:	fldenv [edx]
  41890e:	setge  BYTE PTR [ebx+ecx*4]
  418912:	test   DWORD PTR [eax-0x2a66ba4d],eax
  418918:	das    
  418919:	sbb    al,0xfa
  41891b:	repz addr16 dec edx
  41891e:	repnz mov es,WORD PTR [edi]
  418921:	mov    ecx,0xb66b9644
  418926:	add    al,0x55
  418928:	mov    ah,0x1e
  41892a:	out    0xde,al
  41892c:	stos   BYTE PTR es:[edi],al
  41892d:	mov    dh,0x15
  41892f:	out    0x5,al
  418931:	push   es
  418932:	(bad)  
  418933:	mov    ch,0xb1
  418935:	hlt    
  418936:	inc    ebx
  418937:	push   edi
  418938:	pop    ebp
  418939:	mov    ds,ecx
  41893b:	jno    0x4188c0
  41893d:	lock xlat BYTE PTR ds:[ebx]
  41893f:	popa   
  418940:	adc    dl,0x78
  418943:	int3   
  418944:	mov    eax,ds:0x3d88b84
  418949:	pop    ebx
  41894a:	aas    
  41894b:	imul   al
  41894d:	addr16 mov ds:0xef42,al
  418951:	dec    eax
  418952:	inc    ebp
  418953:	mov    DWORD PTR [edx],0x72745fb
  418959:	leave  
  41895a:	bound  ecx,QWORD PTR [edi]
  41895c:	mov    es,WORD PTR [ebx]
  41895e:	push   edi
  41895f:	sahf   
  418960:	add    al,0x5
  418962:	xchg   DWORD PTR [ecx],eax
  418964:	shl    BYTE PTR [esi-0x52],cl
  418967:	add    esi,ecx
  418969:	xor    cl,BYTE PTR [esi]
  41896b:	jnp    0x41896d
  41896d:	int    0xe1
  41896f:	xchg   edx,eax
  418970:	sti    
  418971:	dec    esi
  418972:	dec    esp
  418973:	add    esi,edi
  418975:	adc    bh,BYTE PTR [eax]
  418977:	sbb    edx,DWORD PTR [eax-0x4fe0e3f7]
  41897d:	and    ebp,eax
  41897f:	stos   BYTE PTR es:[edi],al
  418980:	push   ebp
  418981:	push   0xffffffd8
  418983:	dec    esp
  418984:	mov    bh,0x83
  418986:	loopne 0x4189d0
  418988:	pop    esi
  418989:	bound  edx,QWORD PTR [edx+0x3b]
  41898c:	les    eax,FWORD PTR [eax+0x6a]
  41898f:	in     al,dx
  418990:	sub    dl,BYTE PTR [edi+eiz*1+0x7fb5a809]
  418997:	dec    edi
  418998:	iret   
  418999:	pop    esi
  41899a:	sub    dh,BYTE PTR [ebx+eiz*1-0x3b52b147]
  4189a1:	aad    0xa8
  4189a3:	daa    
  4189a4:	jl     0x41895d
  4189a6:	xor    al,0x69
  4189a8:	loopne 0x418a05
  4189aa:	push   ss
  4189ab:	es jno 0x41899c
  4189ae:	mov    ah,0x8f
  4189b0:	and    cl,ch
  4189b2:	add    DWORD PTR [edi-0x3a84d09e],0x78
  4189b9:	sub    al,0xd7
  4189bb:	popa   
  4189bc:	xchg   ecx,eax
  4189bd:	enter  0x182e,0x1d
  4189c1:	sbb    DWORD PTR [ebx+0x1148c180],edi
  4189c7:	ja     0x418a21
  4189c9:	adc    BYTE PTR [esi],cl
  4189cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189cc:	push   0xae851614
  4189d1:	inc    ebp
  4189d2:	test   DWORD PTR [eax-0x5c6b0d39],0x4260a53f
  4189dc:	imul   ebx,DWORD PTR [ecx],0x6e67033c
  4189e2:	xchg   ecx,eax
  4189e3:	bnd jl 0x418a62
  4189e6:	sbb    ah,al
  4189e8:	dec    ecx
  4189e9:	in     al,dx
  4189ea:	sbb    BYTE PTR [ebx+0x9],dh
  4189ed:	std    
  4189ee:	add    ah,ah
  4189f0:	inc    esi
  4189f1:	add    al,0x9a
  4189f3:	je     0x418986
  4189f5:	imul   ebp,DWORD PTR [ebx-0x42f067f7],0x69
  4189fc:	lea    ebx,[esi]
  4189fe:	add    eax,esi
  418a00:	outs   dx,DWORD PTR ds:[esi]
  418a01:	inc    eax
  418a02:	adc    bl,BYTE PTR [edx+0x51]
  418a05:	add    eax,0x39e69e53
  418a0a:	in     eax,0x1c
  418a0c:	xchg   ebp,eax
  418a0d:	mov    bh,0xc4
  418a0f:	in     al,dx
  418a10:	cmp    BYTE PTR [ecx],dl
  418a12:	fdivr  DWORD PTR [edi-0x45c315be]
  418a18:	and    al,0x86
  418a1a:	scas   eax,DWORD PTR es:[edi]
  418a1b:	fidivr DWORD PTR [ebx+esi*8]
  418a1e:	stos   DWORD PTR es:[edi],eax
  418a1f:	xchg   edx,eax
  418a20:	outs   dx,DWORD PTR ds:[esi]
  418a21:	mov    eax,ds:0x4300a29f
  418a26:	pop    ss
  418a27:	not    DWORD PTR [edx+0x5]
  418a2a:	fs xor ecx,edi
  418a2d:	lahf   
  418a2e:	xor    esp,DWORD PTR [ecx-0x14]
  418a31:	out    0xbd,eax
  418a33:	in     al,0x61
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	add    DWORD PTR [ecx+0xa],0x9c411735
  418a3d:	xchg   edi,eax
  418a3e:	fmul   DWORD PTR [ebx+0x10]
  418a41:	popa   
  418a42:	jns    0x418ac0
  418a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a45:	adc    ah,0xb5
  418a48:	(bad)  
  418a49:	pop    ss
  418a4a:	inc    eax
  418a4b:	fbld   TBYTE PTR [ebx+0x43eb3e9f]
  418a51:	adc    BYTE PTR [esi-0x62],ch
  418a54:	jg     0x418a93
  418a56:	push   esi
  418a57:	inc    ebx
  418a58:	xor    esi,edi
  418a5a:	arpl   WORD PTR ds:0x1a42f6ad,dx
  418a60:	dec    edi
  418a61:	jnp    0x418a76
  418a63:	lea    eax,[ebx]
  418a65:	jmp    0xb5011cc2
  418a6a:	into   
  418a6b:	aas    
  418a6c:	sbb    DWORD PTR [eax],esp
  418a6e:	mov    cl,0x4a
  418a70:	rcr    DWORD PTR [esi+ebx*8],0x44
  418a74:	outs   dx,DWORD PTR ds:[esi]
  418a75:	rol    DWORD PTR [esp+ebp*8],0x70
  418a79:	scas   eax,DWORD PTR es:[edi]
  418a7a:	fistp  DWORD PTR [eax+0x15]
  418a7d:	pop    esp
  418a7e:	mov    bh,0xb3
  418a80:	jecxz  0x418ac9
  418a82:	sar    BYTE PTR [esi+ecx*2-0x3692582b],0xca
  418a8a:	or     al,0xe1
  418a8c:	xchg   esi,eax
  418a8d:	dec    ebp
  418a8e:	imul   esp,esi,0x40317419
  418a94:	jno    0x418acb
  418a96:	stos   BYTE PTR es:[edi],al
  418a97:	stc    
  418a98:	stc    
  418a99:	outs   dx,BYTE PTR ds:[esi]
  418a9a:	pop    ebp
  418a9b:	stos   DWORD PTR es:[edi],eax
  418a9c:	ret    0x8ede
  418a9f:	outs   dx,DWORD PTR ds:[esi]
  418aa0:	mov    dh,0x7e
  418aa2:	or     eax,0x3b5d5d8c
  418aa7:	repnz sbb eax,0x76e2c73f
  418aad:	daa    
  418aae:	scas   eax,DWORD PTR es:[edi]
  418aaf:	jmp    0x418ad6
  418ab1:	(bad)  [esi]
  418ab3:	dec    ecx
  418ab4:	gs repnz (bad) 
  418ab7:	xor    BYTE PTR [edi-0x7d],cl
  418aba:	rcr    edx,1
  418abc:	push   cs
  418abd:	push   edx
  418abe:	addr16 adc al,0x22
  418ac1:	dec    eax
  418ac2:	mov    WORD PTR ds:0x78dff741,gs
  418ac8:	in     eax,0x36
  418aca:	out    0x7,eax
  418acc:	inc    ecx
  418acd:	add    ecx,DWORD PTR [eax-0x46c9a902]
  418ad3:	cmp    ebx,esi
  418ad5:	add    eax,0x1a2739fd
  418ada:	mov    ah,0x16
  418adc:	(bad)  [ecx-0x206fa1c7]
  418ae2:	sub    BYTE PTR [eax-0x3b365754],cl
  418ae8:	je     0x418a93
  418aea:	cdq    
  418aeb:	inc    eax
  418aec:	test   eax,0xbf9a8678
  418af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af2:	fcom   DWORD PTR [eax-0x1f]
  418af5:	push   ecx
  418af6:	data16 sti 
  418af8:	add    eax,0x3e343adc
  418afd:	xchg   bh,ah
  418aff:	sti    
  418b00:	test   BYTE PTR [ecx-0xc],ch
  418b03:	xchg   ecx,edx
  418b05:	jne    0x418b47
  418b07:	dec    eax
  418b08:	fwait
  418b09:	sbb    al,0x26
  418b0b:	mov    edi,0x923845d4
  418b10:	mov    ds:0x68bfa789,al
  418b15:	into   
  418b16:	push   es
  418b17:	mov    eax,0xc2d3dbdc
  418b1c:	inc    ebp
  418b1d:	in     eax,dx
  418b1e:	scas   eax,DWORD PTR es:[edi]
  418b1f:	xlat   BYTE PTR ds:[ebx]
  418b20:	aam    0x6e
  418b22:	stc    
  418b23:	loop   0x418b23
  418b25:	fwait
  418b26:	cdq    
  418b27:	ret    0x6bed
  418b2a:	jbe    0x418b36
  418b2c:	fisubr DWORD PTR [eax+0x6f]
  418b2f:	repnz pop edx
  418b31:	jbe    0x418b53
  418b33:	scas   eax,DWORD PTR es:[edi]
  418b34:	mov    dh,0x5f
  418b36:	xor    DWORD PTR [edx-0x184fbdc5],ebx
  418b3c:	lds    eax,FWORD PTR [edx-0xf95657a]
  418b42:	and    eax,0xefc54c05
  418b47:	in     al,dx
  418b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b49:	clc    
  418b4a:	test   al,0xa8
  418b4c:	hlt    
  418b4d:	cmp    BYTE PTR [eiz*8+0x536de945],bl
  418b54:	cld    
  418b55:	pop    edi
  418b56:	(bad)  
  418b57:	test   al,0x8d
  418b59:	retf   
  418b5a:	mov    ebp,0x14aeb5b3
  418b5f:	out    0x31,eax
  418b61:	adc    BYTE PTR [edx-0x3a912bf7],bh
  418b67:	cld    
  418b68:	les    esi,FWORD PTR [edi+0x45da7eac]
  418b6e:	inc    esi
  418b6f:	xchg   esi,eax
  418b70:	xchg   ebx,eax
  418b71:	xchg   ebp,eax
  418b72:	cs xchg esp,eax
  418b74:	fist   WORD PTR [ecx-0x458d2c5b]
  418b7a:	hlt    
  418b7b:	cld    
  418b7c:	xlat   BYTE PTR ds:[ebx]
  418b7d:	xchg   BYTE PTR [eax+0x70],ah
  418b80:	test   al,0xfc
  418b82:	out    0x7d,al
  418b84:	xor    BYTE PTR [ebx-0x4f],cl
  418b87:	sub    BYTE PTR [ebp-0x5fb3b495],ah
  418b8d:	inc    esi
  418b8e:	inc    ebp
  418b8f:	jecxz  0x418baf
  418b91:	xchg   ebx,eax
  418b92:	inc    ebx
  418b93:	clc    
  418b94:	adc    edi,DWORD PTR [ecx+eax*1-0x7d]
  418b98:	cli    
  418b99:	jecxz  0x418bb7
  418b9b:	xchg   edi,eax
  418b9c:	sahf   
  418b9d:	addr16 adc si,cx
  418ba1:	or     DWORD PTR cs:[eax],ebx
  418ba4:	(bad)  
  418ba5:	push   esi
  418ba6:	xor    eax,0xc6bee190
  418bab:	jmp    0xf156:0x590f88df
  418bb2:	cmp    bh,BYTE PTR [edi]
  418bb4:	add    cl,BYTE PTR [eax]
  418bb6:	call   0xe007:0xeb0afade
  418bbd:	call   0x165b:0xa27341c8
  418bc4:	out    dx,eax
  418bc5:	push   DWORD PTR [edi+edi*1-0x61a1082a]
  418bcc:	mov    edi,0x4bb065ce
  418bd1:	inc    eax
  418bd2:	jl     0x418b87
  418bd4:	call   0x4cae:0xaf71acfd
  418bdb:	xchg   esi,eax
  418bdc:	dec    esi
  418bdd:	sbb    bh,bl
  418bdf:	sbb    eax,0xd334bce5
  418be4:	stos   DWORD PTR es:[edi],eax
  418be5:	and    eax,0x52464a34
  418bea:	and    BYTE PTR ds:0xb339425,ah
  418bf0:	mov    edi,0x49c155d0
  418bf5:	jmp    0xd5e:0xa30c0c2a
  418bfc:	fimul  WORD PTR [edi]
  418bfe:	push   ss
  418bff:	jle    0x418b8c
  418c01:	push   ecx
  418c02:	inc    ecx
  418c03:	cld    
  418c04:	shl    DWORD PTR [esi-0x3ffc5bed],0x72
  418c0b:	cmp    eax,DWORD PTR [ebp+0x63]
  418c0e:	xchg   edi,eax
  418c0f:	jl     0x418c10
  418c11:	cdq    
  418c12:	mov    esi,0x25f50f31
  418c17:	cmp    ah,dl
  418c19:	repz mov edi,ebx
  418c1c:	pop    ss
  418c1d:	sub    DWORD PTR [edx-0x4],0x7a3b4faa
  418c24:	and    eax,0xbf1dd31a
  418c29:	mov    ebp,?
  418c2b:	jecxz  0x418bd6
  418c2d:	adc    BYTE PTR [ecx+esi*1],dl
  418c30:	xor    cl,BYTE PTR [ebp+esi*4+0x51902aca]
  418c37:	sub    ch,BYTE PTR [edx+0x1b]
  418c3a:	and    eax,0xd042eb33
  418c3f:	into   
  418c40:	daa    
  418c41:	aas    
  418c42:	ins    DWORD PTR es:[edi],dx
  418c43:	fiadd  WORD PTR [edx-0x3d]
  418c46:	movlps xmm6,QWORD PTR [ecx]
  418c49:	jecxz  0x418be2
  418c4b:	adc    BYTE PTR [edx+0x44e7f194],0xd6
  418c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c53:	ds ins BYTE PTR es:[edi],dx
  418c55:	add    bl,BYTE PTR [esi]
  418c57:	sub    bh,cl
  418c59:	std    
  418c5a:	add    eax,0x518e93f6
  418c5f:	addr16 jae 0x418c82
  418c62:	sub    eax,0x5a9e6148
  418c67:	sub    eax,ecx
  418c69:	dec    esp
  418c6a:	inc    edx
  418c6b:	sub    cl,cl
  418c6d:	cmp    cl,bl
  418c6f:	xor    dh,BYTE PTR [edx+0x32]
  418c72:	psrlw  mm6,QWORD PTR [ebx-0x6ee8c0f8]
  418c79:	inc    ebx
  418c7a:	not    ebx
  418c7c:	ret    0xbf16
  418c7f:	fimul  WORD PTR [esi]
  418c81:	imul   edi,DWORD PTR [ebx+0x5c0d81b3],0x52
  418c88:	xchg   ebx,eax
  418c89:	adc    eax,0x88b9f319
  418c8e:	dec    ecx
  418c8f:	sar    ebx,cl
  418c91:	jg     0x418c76
  418c93:	addr16 push 0xffffffee
  418c96:	into   
  418c97:	stos   BYTE PTR es:[edi],al
  418c98:	jl     0x418c86
  418c9a:	call   0xb614:0xea6c5645
  418ca1:	or     ebx,DWORD PTR [esi+eiz*8+0x9d741c4]
  418ca8:	fmul   st(2),st
  418caa:	xor    eax,0x142a8427
  418caf:	mov    esi,ecx
  418cb1:	mov    ds:0x113f596b,al
  418cb6:	dec    eax
  418cb7:	mov    al,ds:0xa830dbbd
  418cbc:	or     eax,0xcfd90ae5
  418cc1:	dec    esi
  418cc2:	leave  
  418cc3:	mov    bl,0x7
  418cc5:	xor    al,0x29
  418cc7:	jae    0x418d2b
  418cc9:	repz cmp cl,dl
  418ccc:	sub    dh,dl
  418cce:	push   edi
  418ccf:	push   0xffffff9d
  418cd1:	xchg   ebx,eax
  418cd2:	iret   
  418cd3:	adc    edx,DWORD PTR cs:[eax+0x2b]
  418cd7:	push   ss
  418cd8:	sti    
  418cd9:	fnstcw WORD PTR [edi]
  418cdb:	xchg   esp,eax
  418cdc:	retf   0xaaff
  418cdf:	ins    DWORD PTR es:[edi],dx
  418ce0:	stos   BYTE PTR es:[edi],al
  418ce1:	enter  0xab21,0xa2
  418ce5:	add    DWORD PTR [esp+eiz*8],0x2b3c5152
  418cec:	dec    edx
  418ced:	ret    
  418cee:	div    BYTE PTR [eax-0x6054bb1d]
  418cf4:	and    eax,0x9e86830d
  418cf9:	dec    eax
  418cfa:	mov    bh,0x6
  418cfc:	jae    0x418d48
  418cfe:	cmp    DWORD PTR [ebx+0x16b80988],0xffffffc1
  418d05:	mov    eax,0xd9328ab2
  418d0a:	dec    ebp
  418d0b:	outs   dx,BYTE PTR ds:[esi]
  418d0c:	rcl    BYTE PTR [eax-0x79a7fb10],0x71
  418d13:	or     eax,0x1ac72d23
  418d18:	jg     0x418ca4
  418d1a:	lds    edx,FWORD PTR [eax-0x7e]
  418d1d:	dec    eax
  418d1e:	(bad)
  418d22:	inc    ecx
  418d23:	push   eax
  418d24:	jp     0x418cc7
  418d26:	scas   al,BYTE PTR es:[edi]
  418d27:	mul    DWORD PTR [ebx]
  418d29:	out    0x27,al
  418d2b:	cmp    eax,0xfb6b452f
  418d30:	add    DWORD PTR [eax],edx
  418d32:	xor    eax,0x3ffae39f
  418d37:	mov    eax,0x802989fd
  418d3c:	shr    BYTE PTR [ecx+0x1d5d8476],cl
  418d42:	popf   
  418d43:	cld    
  418d44:	jmp    0x62ed:0x1a8978c3
  418d4b:	je     0x418cea
  418d4d:	out    dx,eax
  418d4e:	cwde   
  418d4f:	cdq    
  418d50:	aas    
  418d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d52:	pop    eax
  418d53:	(bad)  
  418d55:	out    dx,al
  418d56:	addr16 out 0x62,al
  418d59:	mov    edx,0xb4ba1191
  418d5e:	dec    eax
  418d5f:	mov    bl,0xad
  418d61:	inc    esi
  418d62:	mov    edx,0x58ae8483
  418d67:	cdq    
  418d68:	cmp    ecx,DWORD PTR [ebx]
  418d6a:	sbb    dh,al
  418d6c:	mov    ch,0x62
  418d6e:	fisubr DWORD PTR [esi-0x24]
  418d71:	sub    ebp,DWORD PTR [eax-0x7aaf93ad]
  418d77:	cwde   
  418d78:	xor    al,0xb6
  418d7a:	bound  esp,QWORD PTR [edx+0x24]
  418d7d:	inc    esp
  418d7e:	pop    edx
  418d7f:	mov    DWORD PTR cs:[esi],ebp
  418d82:	out    0xa9,eax
  418d84:	not    BYTE PTR ds:[esi+0x1df239cb]
  418d8b:	pusha  
  418d8c:	or     eax,0x14fb815b
  418d91:	add    edx,DWORD PTR [esi]
  418d93:	leave  
  418d94:	or     eax,0xa62f260
  418d9a:	adc    eax,0xf960d9d6
  418d9f:	in     eax,dx
  418da0:	addr16 push eax
  418da2:	stc    
  418da3:	jg     0x418d95
  418da5:	test   al,0xfd
  418da7:	ret    0x577b
  418daa:	push   ds
  418dab:	sahf   
  418dac:	mov    ecx,DWORD PTR [ebp+0xd86b0db]
  418db2:	inc    ecx
  418db3:	es ins BYTE PTR es:[edi],dx
  418db5:	(bad)
  418db8:	pop    es
  418db9:	jecxz  0x418d5b
  418dbb:	out    0x41,al
  418dbd:	out    dx,al
  418dbe:	sub    cl,BYTE PTR [ebx]
  418dc0:	mov    ds:0xc12d48dd,eax
  418dc5:	loop   0x418d68
  418dc7:	push   0x47e74c74
  418dcc:	inc    eax
  418dcd:	ror    DWORD PTR [eax+edx*1-0x33],cl
  418dd1:	sbb    BYTE PTR [ebp+0x67],bh
  418dd4:	adc    ecx,esp
  418dd6:	ficomp WORD PTR [ebp-0x425d36e6]
  418ddc:	push   0x37
  418dde:	add    BYTE PTR [eax],al
  418de0:	add    BYTE PTR [eax],al
  418de2:	mov    dl,0x57
  418de4:	push   0xffffffc9
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x925b40f2
  418df2:	cmc    
  418df3:	or     al,BYTE PTR [ecx]
  418df5:	add    ah,dh
  418df7:	add    al,0x0
  418df9:	add    ch,bl
  418dfb:	pusha  
  418dfc:	clc    
  418dfd:	and    eax,0x41876936
  418e02:	push   dx
  418e04:	arpl   WORD PTR [ebp+0x7a8a0c65],cx
  418e0a:	push   esi
  418e0b:	mov    bh,0xcc
  418e0d:	pop    eax
  418e0e:	xchg   esp,eax
  418e0f:	push   es
  418e10:	stc    
  418e11:	lock sbb cl,BYTE PTR [edi-0x18642fd1]
  418e18:	dec    edi
  418e19:	mov    ds:0xd6339075,al
  418e1e:	mov    edi,0x3f5ca555
  418e23:	jnp    0x418e85
  418e25:	jmp    FWORD PTR [ecx-0x20d4af2f]
  418e2b:	ror    DWORD PTR ds:0x63c6012e,1
  418e31:	adc    al,0x8e
  418e33:	cmp    esp,esp
  418e35:	jbe    0x418e85
  418e37:	retf   0x60d3
  418e3a:	rcl    DWORD PTR [eax-0x42ebbfd4],cl
  418e40:	dec    ebx
  418e41:	pusha  
  418e42:	jmp    0x2226:0x6b8b45bd
  418e49:	cmp    eax,0x4c44bda9
  418e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e4f:	inc    edx
  418e50:	sbb    eax,DWORD PTR [edx]
  418e52:	push   edi
  418e53:	sub    dl,BYTE PTR [eax-0x44c3c42e]
  418e59:	pop    eax
  418e5a:	fisubr WORD PTR [eax-0x7c]
  418e5d:	mov    esp,0x4284f72b
  418e62:	push   esp
  418e63:	xchg   esi,eax
  418e64:	mov    bl,0xfd
  418e66:	mov    edi,0x4e63de26
  418e6b:	push   0xffffffa4
  418e6d:	mov    cl,0xff
  418e6f:	nop
  418e70:	mov    eax,ds:0xa8382acb
  418e75:	jb     0x802010c3
  418e7b:	scas   eax,DWORD PTR es:[edi]
  418e7c:	sub    edx,ecx
  418e7e:	dec    ebx
  418e7f:	pop    eax
  418e80:	ins    BYTE PTR es:[edi],dx
  418e81:	mov    dl,0x2e
  418e83:	in     al,0xb8
  418e85:	adc    eax,0x64145c11
  418e8a:	jbe    0x418e27
  418e8c:	sbb    BYTE PTR [edx+0x2e8a7d91],bh
  418e92:	imul   ebx,DWORD PTR [ecx],0x64
  418e95:	or     al,0x6c
  418e97:	pop    edi
  418e98:	add    cl,BYTE PTR [edi+0x43]
  418e9b:	shl    BYTE PTR [edx],cl
  418e9d:	cmp    DWORD PTR [ebp-0x74],eax
  418ea0:	lock jno 0x418ea6
  418ea3:	aas    
  418ea4:	jge    0x418f09
  418ea6:	and    eax,DWORD PTR [ebp+0x71]
  418ea9:	jp     0x418e92
  418eab:	add    bh,BYTE PTR [edx-0x42]
  418eae:	jmp    0x6c51c543
  418eb3:	mov    BYTE PTR ds:0xc9e8fe4b,ch
  418eb9:	jle    0x418e56
  418ebb:	popa   
  418ebc:	jb     0x418eae
  418ebe:	mov    esi,edi
  418ec0:	ins    DWORD PTR es:[edi],dx
  418ec1:	and    dh,bh
  418ec3:	sub    bh,al
  418ec5:	mov    ds:0xe2c1e842,eax
  418eca:	rcr    BYTE PTR [ecx-0x1e],0xcc
  418ece:	enter  0x9114,0x2b
  418ed2:	test   al,0xe9
  418ed4:	ss cmp al,dl
  418ed7:	jae    0x418ee9
  418ed9:	mov    ebp,0x1c8d7509
  418ede:	and    ch,dh
  418ee0:	ins    BYTE PTR es:[edi],dx
  418ee1:	and    BYTE PTR [edx-0x500cd3ef],al
  418ee7:	icebp  
  418ee8:	vpandn xmm6,xmm0,XMMWORD PTR [ecx+0x720661f2]
  418ef0:	aas    
  418ef1:	out    dx,al
  418ef2:	int3   
  418ef3:	xchg   esp,eax
  418ef4:	aad    0xc0
  418ef6:	push   eax
  418ef7:	ret    0xabdc
  418efa:	fs mov al,0x7d
  418efd:	gs inc ecx
  418eff:	cmc    
  418f00:	adc    DWORD PTR [ebp+0x2f],edx
  418f03:	xchg   ecx,eax
  418f04:	(bad)  
  418f06:	test   al,0xf6
  418f08:	fnsave [ebx+0x3e]
  418f0b:	push   eax
  418f0c:	dec    ebp
  418f0d:	sub    bl,BYTE PTR [edi]
  418f0f:	cld    
  418f10:	mov    bl,0xd6
  418f12:	shl    esp,1
  418f14:	(bad)  
  418f15:	xor    BYTE PTR [esi],ch
  418f17:	jg     0x418f8c
  418f19:	and    BYTE PTR [edi+0x39],bl
  418f1c:	out    0x84,eax
  418f1e:	jmp    0xa84d:0x23e908db
  418f25:	dec    bh
  418f27:	std    
  418f28:	inc    DWORD PTR [ebp+0x4f]
  418f2b:	(bad)  
  418f2d:	mov    ds:0xd6d5ca13,eax
  418f32:	jp     0x418eea
  418f34:	dec    BYTE PTR ds:0x82520aa1
  418f3a:	dec    ebp
  418f3b:	das    
  418f3c:	cmp    al,0x54
  418f3e:	mov    ch,0xec
  418f40:	neg    BYTE PTR [ebx+edx*2-0x462d10a6]
  418f47:	mov    cl,BYTE PTR [ebx-0x4b]
  418f4a:	fdivp  st(1),st
  418f4c:	mov    cl,0xa5
  418f4e:	adc    eax,0xd0deea7e
  418f53:	push   esp
  418f54:	mov    edx,0xece24057
  418f59:	xchg   esi,eax
  418f5a:	ja     0x418ede
  418f5c:	inc    esp
  418f5d:	sbb    BYTE PTR ds:0x959b6d79,ch
  418f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f64:	shr    BYTE PTR [esi+edi*4],cl
  418f67:	push   eax
  418f68:	pop    ebx
  418f69:	cmp    DWORD PTR [edi],esi
  418f6b:	scas   eax,DWORD PTR es:[edi]
  418f6c:	sub    BYTE PTR [esi+0x35],ah
  418f6f:	and    BYTE PTR [esp+esi*1],ch
  418f72:	scas   eax,DWORD PTR es:[edi]
  418f73:	jmp    0x418fe2
  418f75:	inc    ecx
  418f76:	test   BYTE PTR [ebx*4+0x79346bf9],ah
  418f7d:	push   esp
  418f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f81:	addr16 inc esp
  418f83:	push   cs
  418f84:	aam    0x1a
  418f86:	out    0x65,eax
  418f88:	cmc    
  418f89:	bound  ecx,QWORD PTR [ecx]
  418f8b:	push   eax
  418f8c:	push   ss
  418f8d:	test   DWORD PTR [eax],edi
  418f8f:	or     al,0xc8
  418f91:	adc    eax,0x7cd89f4c
  418f96:	fld    QWORD PTR [edi+0x1d]
  418f99:	ret    
  418f9a:	add    esi,DWORD PTR [eax+0x38f1e765]
  418fa0:	xchg   ebx,eax
  418fa1:	adc    al,0xa7
  418fa3:	data16 and al,0xa8
  418fa6:	pop    ebp
  418fa7:	adc    edi,DWORD PTR [eax+ecx*2+0x10]
  418fab:	xchg   edi,eax
  418fac:	ds scas al,BYTE PTR es:[edi]
  418fae:	dec    ebx
  418faf:	dec    ebp
  418fb0:	xor    ch,al
  418fb2:	outs   dx,BYTE PTR ds:[esi]
  418fb3:	mov    al,ds:0x520b5b14
  418fb8:	cwde   
  418fb9:	stos   BYTE PTR es:[edi],al
  418fba:	xor    esi,ebx
  418fbc:	jmp    0x418fa0
  418fbe:	sub    BYTE PTR [ebx],0x48
  418fc1:	dec    edx
  418fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc3:	xchg   esi,eax
  418fc4:	xchg   esi,eax
  418fc5:	loop   0x419043
  418fc7:	mov    cs,WORD PTR [ebx]
  418fc9:	clc    
  418fca:	iret   
  418fcb:	jg     0x418f55
  418fcd:	mov    edi,0x6b93d227
  418fd2:	jnp    0x419042
  418fd4:	and    al,BYTE PTR [ebp+0x567e38d3]
  418fda:	or     eax,0xd14fb608
  418fdf:	jle    0x418fb8
  418fe1:	jae    0x419054
  418fe3:	test   eax,0xdd12104f
  418fe8:	push   esi
  418fe9:	cld    
  418fea:	adc    al,0x2e
  418fec:	push   ebx
  418fed:	sbb    eax,DWORD PTR [ebx+0x1903f6a6]
  418ff3:	push   esi
  418ff4:	sub    eax,esi
  418ff6:	push   ds
  418ff7:	jno    0x419064
  418ff9:	xor    eax,0xbf06b712
  418ffe:	sub    ch,al
  419000:	jmp    0x8ce4:0x961ec58d
  419007:	shr    DWORD PTR [ebp+0x57618924],1
  41900d:	push   edx
  41900e:	inc    esi
  41900f:	jne    0x41902c
  419011:	xlat   BYTE PTR ds:[ebx]
  419012:	adc    al,0xd5
  419014:	sbb    esi,ecx
  419016:	cmp    cl,dl
  419018:	mov    ebx,0x269ae2c0
  41901d:	jnp    0x418f9f
  41901f:	sub    esi,edx
  419021:	cmp    eax,0x8f40d020
  419026:	popa   
  419027:	aaa    
  419028:	mov    edi,0x2282d047
  41902d:	cmp    cl,BYTE PTR ds:0x373d08a1
  419033:	es sbb edi,edx
  419036:	adc    al,0x1f
  419038:	dec    edi
  419039:	cmp    BYTE PTR [ecx],ah
  41903b:	jmp    0xb1d6:0xf0826579
  419042:	sar    DWORD PTR [eax],1
  419044:	sbb    esp,DWORD PTR [edx]
  419046:	cmp    al,0xe8
  419048:	hlt    
  419049:	in     al,dx
  41904a:	mov    ebp,0xafaf2e56
  419050:	into   
  419051:	inc    esp
  419052:	loopne 0x418ff8
  419054:	fistp  QWORD PTR [eax+eiz*4-0x29]
  419058:	call   0x16bbf66a
  41905d:	or     BYTE PTR [ebx+0x62f0bb81],dl
  419063:	cmp    eax,0xc65d3c57
  419068:	lock clc 
  41906a:	fdiv   QWORD PTR [eax+0x6a]
  41906d:	or     BYTE PTR ds:0x7a9224dd,al
  419073:	sbb    esi,DWORD PTR [ecx+edi*1-0x3db0de19]
  41907a:	xchg   ecx,eax
  41907b:	fld    QWORD PTR [esi]
  41907d:	push   esi
  41907e:	and    eax,0x5bafc7d3
  419083:	mul    DWORD PTR [edi-0x76]
  419086:	loop   0x4190c7
  419088:	or     eax,esp
  41908a:	cmp    edx,esp
  41908c:	retf   0x31ee
  41908f:	xlat   BYTE PTR ds:[ebx]
  419090:	outs   dx,DWORD PTR ds:[esi]
  419091:	jne    0x419090
  419093:	cmc    
  419094:	jne    0x41908a
  419096:	gs shl al,1
  419099:	test   eax,0x2dea6bff
  41909e:	inc    ecx
  41909f:	or     eax,edi
  4190a1:	out    dx,al
  4190a2:	inc    ecx
  4190a3:	(bad)  
  4190a4:	dec    ecx
  4190a5:	stos   BYTE PTR es:[edi],al
  4190a6:	push   0xf2872b1b
  4190ab:	adc    DWORD PTR [esi-0x26],ebp
  4190ae:	jge    0x41905e
  4190b0:	and    BYTE PTR [esi-0x8cd8d7c],0x50
  4190b7:	xor    BYTE PTR [ebx+0x46],0xf5
  4190bb:	or     al,0xaf
  4190bd:	lea    edx,[edx+0x45c6c091]
  4190c3:	ret    0xaf0b
  4190c6:	mov    DWORD PTR [esi],ebx
  4190c8:	dec    ebp
  4190c9:	ret    0x1be
  4190cc:	inc    ebp
  4190cd:	mov    al,0x6a
  4190cf:	pop    ebp
  4190d0:	loopne 0x4190bb
  4190d2:	fst    DWORD PTR [ecx+0xb]
  4190d5:	mov    ebp,0x130c3bb
  4190da:	push   ebp
  4190db:	retf   
  4190dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190dd:	test   ah,bl
  4190df:	xchg   esi,eax
  4190e0:	push   0x41
  4190e2:	sub    DWORD PTR [edx+0x48],0x1ca9f330
  4190e9:	jp     0x4190cb
  4190eb:	int    0xb9
  4190ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ee:	repnz ss mov bl,0xea
  4190f2:	enter  0xd221,0x52
  4190f6:	inc    esp
  4190f7:	stos   DWORD PTR es:[edi],eax
  4190f8:	ret    0x7abd
  4190fb:	out    dx,eax
  4190fc:	jb     0x4190c1
  4190fe:	push   ds
  4190ff:	mov    eax,ds:0xae49cc97
  419104:	fdiv   DWORD PTR [edi+0x14]
  419107:	inc    bp
  419109:	cmp    edx,0x11
  41910c:	cmc    
  41910d:	enter  0x48e4,0xc7
  419111:	sub    ecx,DWORD PTR cs:[ecx+0x16]
  419115:	aas    
  419116:	push   ebx
  419117:	xor    BYTE PTR [ebx-0x7b],bl
  41911a:	sahf   
  41911b:	inc    esp
  41911c:	fsub   QWORD PTR [ebp+0x63cff5e0]
  419122:	jl     0x4190ea
  419124:	(bad)  
  419125:	mov    ebp,0xd0df1f97
  41912a:	jmp    0x5d6c:0x65d702fd
  419131:	or     DWORD PTR [ecx],ebx
  419133:	nop
  419134:	push   ecx
  419135:	xchg   ebx,eax
  419136:	and    al,0x22
  419138:	xchg   ecx,eax
  419139:	push   edi
  41913a:	dec    edi
  41913b:	in     al,0x1f
  41913d:	adc    eax,0xf94f6b39
  419142:	sbb    DWORD PTR [edx-0x24],ecx
  419145:	add    eax,0xc2eb00fc
  41914a:	xchg   esp,eax
  41914b:	in     al,0x6a
  41914d:	sub    al,0x4
  41914f:	adc    bl,al
  419151:	and    bh,0xa8
  419154:	dec    eax
  419155:	xchg   BYTE PTR [eax-0x2e701cd6],cl
  41915b:	lds    esi,FWORD PTR [edx]
  41915d:	jae    0x4191ca
  41915f:	sbb    DWORD PTR [edi+0x3b],esp
  419162:	pop    esi
  419163:	or     eax,0xab012db6
  419168:	or     al,0x61
  41916a:	scas   al,BYTE PTR es:[edi]
  41916b:	push   eax
  41916c:	mov    dl,0x36
  41916e:	addr16 (bad) 
  419170:	mov    dh,0x63
  419172:	xchg   ebp,eax
  419173:	scas   eax,DWORD PTR es:[edi]
  419174:	int    0xd
  419176:	mov    DWORD PTR [eax+0x26e27cbb],esp
  41917c:	jmp    0x4191e6
  41917e:	icebp  
  41917f:	call   0xa5c5ff4e
  419184:	lahf   
  419185:	fld    QWORD PTR [edi-0x47ffe4db]
  41918b:	ficom  DWORD PTR [edi-0x7c62cd8a]
  419192:	fld    TBYTE PTR [ebx]
  419194:	sbb    cl,BYTE PTR [ebx+0x7]
  419197:	push   ss
  419198:	push   eax
  419199:	test   al,0xb2
  41919b:	mov    ebp,0x31cc7ec9
  4191a0:	je     0x419137
  4191a2:	add    DWORD PTR [edx],edx
  4191a4:	sbb    eax,0x7faa32cc
  4191a9:	mov    ebx,0x8303bba7
  4191ae:	mov    ebp,0xbc44eaff
  4191b3:	jns    0x41913d
  4191b5:	repz mov bh,0x5c
  4191b8:	imul   eax,ecx,0x909c912
  4191be:	div    ebp
  4191c0:	xchg   dl,bl
  4191c2:	shl    DWORD PTR [edi-0x57],0x39
  4191c6:	pop    esi
  4191c7:	(bad)  
  4191c8:	sub    al,0xb1
  4191ca:	mov    eax,DWORD PTR [eax]
  4191cc:	addr16 into 
  4191ce:	jmp    0x7092:0xeb063fbd
  4191d5:	and    al,0xbd
  4191d7:	mov    ecx,0xf6a4a148
  4191dc:	pminub mm7,QWORD PTR [edx]
  4191df:	loop   0x419198
  4191e1:	pop    esp
  4191e2:	jno    0x41922d
  4191e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e5:	addr16 pop edi
  4191e7:	xor    DWORD PTR [ebx],esi
  4191e9:	imul   ebx,DWORD PTR [ebx],0xffffffe8
  4191ec:	int    0xb2
  4191ee:	mov    al,0x7c
  4191f0:	(bad)  
  4191f1:	mov    esi,0xa38f8b82
  4191f6:	ret    
  4191f7:	sahf   
  4191f8:	xchg   edx,eax
  4191f9:	mov    cl,0xc
  4191fb:	adc    al,0x7c
  4191fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191fe:	jnp    0x4191ee
  419200:	jnp    0x41927e
  419202:	jo     0x419217
  419204:	cmp    dl,BYTE PTR [ecx-0x145fb7d7]
  41920a:	jns    0x419280
  41920c:	lods   al,BYTE PTR ds:[esi]
  41920d:	(bad)  
  41920e:	mov    al,0xc9
  419210:	in     eax,dx
  419211:	(bad)  
  419212:	push   ds
  419213:	out    dx,eax
  419214:	adc    eax,0xe6f66ea0
  419219:	pop    ebp
  41921a:	into   
  41921b:	adc    al,0xb8
  41921d:	(bad)  ds:0x7877cbf6
  419223:	mov    dh,0x80
  419225:	in     al,0xe9
  419227:	push   ebp
  419228:	jbe    0x419236
  41922a:	sbb    ch,cl
  41922c:	rcl    DWORD PTR [esi],1
  41922e:	stc    
  41922f:	dec    esi
  419230:	adc    eax,0x45384127
  419235:	and    dl,BYTE PTR es:[eax-0x6b483339]
  41923c:	add    dh,BYTE PTR ds:0xdef5b0db
  419242:	pop    ds
  419243:	jns    0x41927d
  419245:	and    ah,0x7e
  419248:	into   
  419249:	or     ecx,ecx
  41924b:	fadd   QWORD PTR [ebx+ecx*8-0x61f38301]
  419252:	inc    ebx
  419253:	push   eax
  419254:	les    ebp,FWORD PTR [edi-0x2305918b]
  41925a:	imul   ebx,DWORD PTR [eax+0x2f],0x70
  41925e:	pop    ds
  41925f:	addr16 jle 0x4192ad
  419262:	push   edx
  419263:	xor    al,0x25
  419265:	lods   eax,DWORD PTR ds:[esi]
  419266:	inc    ebp
  419267:	dec    ecx
  419268:	icebp  
  419269:	in     eax,0x15
  41926b:	dec    ebp
  41926c:	cmc    
  41926d:	sti    
  41926e:	sbb    eax,0x4a032b9
  419273:	test   BYTE PTR [ebx+0x611ac49],bh
  419279:	xor    eax,0xe2a0996d
  41927e:	and    DWORD PTR [ecx+0x401ae0c2],0x81963a61
  419288:	cmp    ebx,eax
  41928a:	or     bl,bl
  41928c:	sub    eax,0x82ce03fa
  419291:	cwde   
  419292:	cmc    
  419293:	add    al,0xfb
  419295:	dec    esp
  419296:	lods   al,BYTE PTR ds:[esi]
  419297:	xchg   ecx,eax
  419298:	repnz inc edi
  41929a:	outs   dx,DWORD PTR ds:[esi]
  41929b:	lock jmp 0xa96bc833
  4192a1:	jp     0x419267
  4192a3:	call   0xc200ef80
  4192a8:	jo     0x4192e3
  4192aa:	es retf 0xfe00
  4192ae:	cmp    al,ah
  4192b0:	cmc    
  4192b1:	jmp    0xbd4b:0xcc5e3e2
  4192b8:	push   ecx
  4192b9:	ds mov esp,0xa5cf3fdb
  4192bf:	mov    ds:0xd0c84aa7,eax
  4192c4:	out    dx,al
  4192c5:	(bad)  
  4192c6:	icebp  
  4192c7:	jo     0x419287
  4192c9:	fistp  QWORD PTR [ebx-0x38685d08]
  4192cf:	retf   0x2a7e
  4192d2:	jge    0x4192e3
  4192d4:	sar    BYTE PTR [esi],cl
  4192d6:	xlat   BYTE PTR ds:[ebx]
  4192d7:	xchg   ecx,ecx
  4192d9:	and    DWORD PTR [eax],esp
  4192db:	mov    ebx,0xec4f05d4
  4192e0:	jne    0x419301
  4192e2:	pop    ds
  4192e3:	hlt    
  4192e4:	sbb    BYTE PTR [ebx-0x50],cl
  4192e7:	les    edx,FWORD PTR [eax-0x56b9522b]
  4192ed:	cmp    eax,DWORD PTR [eax]
  4192ef:	add    BYTE PTR [eax],al
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0xc3b75d81
  419300:	or     DWORD PTR [ebx-0x17],ebx
  419303:	sgdtd  [eax]
  419306:	hlt    
  419307:	add    al,0x0
  419309:	add    BYTE PTR [eax],dl
  41930b:	xor    al,BYTE PTR [esi+0xf]
  41930e:	dec    esi
  41930f:	sbb    esi,edi
  419311:	stc    
  419312:	ror    BYTE PTR [ebx+esi*2+0x7217e0d3],0x63
  41931a:	imul   ecx,edi,0x164e9692
  419320:	sbb    DWORD PTR [edi+0x46],edx
  419323:	out    0xfd,eax
  419325:	imul   esp,DWORD PTR [esi+0x514f3666],0xffffffa1
  41932c:	dec    edi
  41932d:	sti    
  41932e:	xchg   ecx,eax
  41932f:	mov    DWORD PTR [eax-0x71c31fe4],eax
  419335:	and    ecx,DWORD PTR [ebx]
  419337:	push   esi
  419338:	lods   eax,DWORD PTR ds:[esi]
  419339:	dec    esp
  41933a:	adc    BYTE PTR [ebx],dh
  41933c:	dec    ebx
  41933d:	xor    BYTE PTR [ebx-0x2b],dl
  419340:	mov    ecx,eax
  419342:	sbb    al,0xca
  419344:	not    ebp
  419346:	jl     0x4192e4
  419348:	daa    
  419349:	sub    BYTE PTR [ecx-0x47],0x99
  41934d:	icebp  
  41934e:	repnz or eax,0xf69ca2a1
  419354:	or     bl,BYTE PTR [edi-0x594dea8d]
  41935a:	xchg   ecx,eax
  41935b:	jb     0x419398
  41935d:	fmul   DWORD PTR [esi+0x23e026cf]
  419363:	ins    BYTE PTR es:[edi],dx
  419364:	das    
  419365:	test   al,0x66
  419367:	and    eax,DWORD PTR [esi-0x5024b672]
  41936d:	pop    esi
  41936e:	retf   
  41936f:	call   DWORD PTR [eax]
  419371:	cmp    esi,esi
  419373:	jb     0x4193c8
  419375:	nop    DWORD PTR [esp+edi*4-0x74c44d86]
  41937d:	sub    al,0x1e
  41937f:	mov    al,0x7b
  419381:	mov    ch,0x59
  419383:	ret    
  419384:	push   ebp
  419385:	dec    edx
  419386:	fadd   st(7),st
  419388:	mov    ebx,0x718abd9d
  41938d:	lods   al,BYTE PTR ds:[esi]
  41938e:	push   ss
  41938f:	xlat   BYTE PTR ds:[ebx]
  419390:	js     0x419321
  419392:	sbb    eax,ecx
  419394:	mov    ebp,DWORD PTR [ebp+0x7fb56203]
  41939a:	fnstenv [eax+0x74e8c6e9]
  4193a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a1:	xchg   edi,esi
  4193a3:	in     al,dx
  4193a4:	cmp    BYTE PTR [ebx+0x5f],dh
  4193a7:	call   FWORD PTR [edi+eiz*1]
  4193aa:	push   cs
  4193ab:	push   eax
  4193ac:	or     BYTE PTR [ebx-0x7d],al
  4193af:	sahf   
  4193b0:	push   esi
  4193b1:	out    dx,al
  4193b2:	cdq    
  4193b3:	push   ds
  4193b4:	sub    eax,0x3990f3e4
  4193b9:	push   edi
  4193ba:	call   0x49298dd9
  4193bf:	sar    bl,cl
  4193c1:	pop    ss
  4193c2:	addr16 retf 0x8b47
  4193c6:	inc    ecx
  4193c7:	mov    WORD PTR [edi-0x5f],?
  4193ca:	and    bh,BYTE PTR [edx+0x736e59ca]
  4193d0:	xchg   ebx,eax
  4193d1:	cld    
  4193d2:	scas   eax,DWORD PTR es:[edi]
  4193d3:	call   0x7389b0bb
  4193d8:	mov    ch,0x4f
  4193da:	shl    edx,1
  4193dc:	mov    cl,0xaa
  4193de:	dec    edx
  4193df:	add    eax,0x6c89278b
  4193e4:	mov    eax,0xd3d8df3a
  4193e9:	jge    0x4193e4
  4193eb:	sbb    al,0x4c
  4193ed:	in     eax,dx
  4193ee:	js     0x41939f
  4193f0:	test   dl,0xb7
  4193f3:	ss leave 
  4193f5:	sub    BYTE PTR [esi+edi*1+0x30],0x3b
  4193fa:	ja     0x419409
  4193fc:	test   DWORD PTR [esi-0x2f],edx
  4193ff:	ret    
  419400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419401:	enter  0xeaa7,0x8b
  419405:	js     0x419409
  419407:	test   BYTE PTR [ebx*8-0x6eacb98e],ch
  41940e:	iret   
  41940f:	dec    edi
  419410:	xchg   esi,eax
  419411:	fld    TBYTE PTR [ebx-0x30]
  419414:	add    BYTE PTR [ebp-0x6bf8128d],dh
  41941a:	fs dec ebx
  41941c:	cmp    al,0x82
  41941e:	push   ebp
  41941f:	dec    ebx
  419420:	cmp    al,0x89
  419422:	sub    ebp,DWORD PTR [ecx+0x1b7497c]
  419428:	xchg   edi,eax
  419429:	add    eax,0x5fe0f6a7
  41942e:	push   0x56
  419430:	inc    ecx
  419431:	or     ecx,DWORD PTR [eax-0x396c48ac]
  419437:	mov    ecx,0xa26eb346
  41943c:	imul   edi,ebp,0x64
  41943f:	pop    esp
  419440:	mov    ch,0x99
  419442:	push   esi
  419443:	imul   ecx,DWORD PTR [edi],0xffffffdd
  419446:	cmp    DWORD PTR ss:[edx-0xdbd6cac],0x155187e1
  419451:	fiadd  WORD PTR [ebp+0x2f]
  419454:	int    0xa3
  419456:	fucomip st,st(6)
  419458:	push   esp
  419459:	xchg   esi,eax
  41945a:	lods   eax,DWORD PTR ds:[esi]
  41945b:	inc    edi
  41945c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41945d:	adc    dl,BYTE PTR ds:0x3028fefc
  419463:	out    0x22,eax
  419465:	cmp    edx,DWORD PTR [ecx]
  419467:	or     al,0x3
  419469:	cmp    DWORD PTR [ebp+0x2f9b0837],0x891fbb90
  419473:	call   0xfbae:0xc35f0086
  41947a:	lds    edi,FWORD PTR [ecx+edi*2+0x23a7df2b]
  419481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419482:	push   edx
  419483:	jle    0x4194ca
  419485:	xchg   DWORD PTR [eax+0x6a9a7e12],esp
  41948b:	jne    0x419470
  41948d:	jmp    DWORD PTR [ebx]
  41948f:	xor    BYTE PTR [edx-0x41],bl
  419492:	mov    dl,0x3e
  419494:	sub    eax,0xe45c605a
  419499:	shl    ebx,0x4
  41949c:	fdivr  QWORD PTR ds:0x7ae0202d
  4194a2:	pop    ss
  4194a3:	call   0x8a1c:0x2474f354
  4194aa:	lock retf 
  4194ac:	push   ecx
  4194ad:	loopne 0x419446
  4194af:	loop   0x41952c
  4194b1:	cwde   
  4194b2:	push   cs
  4194b3:	cmp    al,0xdd
  4194b5:	ja     0x4194a7
  4194b7:	dec    edi
  4194b8:	retf   0x6456
  4194bb:	cmp    al,0xbc
  4194bd:	and    ebp,esi
  4194bf:	xchg   dh,ch
  4194c1:	lds    esp,FWORD PTR [ebp+0x34]
  4194c4:	adc    DWORD PTR [ecx+edx*4+0x15],eax
  4194c8:	and    BYTE PTR [esp+ecx*4],0x89
  4194cc:	dec    ebx
  4194cd:	ret    0xc63f
  4194d0:	lds    esp,FWORD PTR [esi+0x494af042]
  4194d6:	add    BYTE PTR [ebp-0x22836531],0xe5
  4194dd:	and    edi,0xa711740c
  4194e3:	jbe    0x4194b9
  4194e5:	mov    eax,ds:0x33df9941
  4194ea:	adc    BYTE PTR [edi+0x5af88fee],dl
  4194f0:	stos   DWORD PTR es:[edi],eax
  4194f1:	mov    DWORD PTR ds:0x4f743921,edx
  4194f7:	clc    
  4194f8:	xor    eax,0xe00eb10a
  4194fd:	mov    edi,0xa73c625f
  419502:	pop    es
  419503:	jo     0x41956f
  419505:	xchg   esi,eax
  419506:	enter  0xe537,0xba
  41950a:	lds    esp,FWORD PTR [ebx+0x71]
  41950d:	shr    DWORD PTR [eax-0x26fd856],1
  419513:	mov    al,ds:0xdedc223e
  419518:	pop    eax
  419519:	inc    ebx
  41951a:	je     0x419595
  41951c:	ficomp WORD PTR [edi]
  41951e:	lahf   
  41951f:	std    
  419520:	(bad)  
  419522:	inc    esp
  419523:	ins    DWORD PTR es:[edi],dx
  419524:	mov    dh,0x57
  419526:	les    eax,FWORD PTR [edi]
  419528:	es enter 0xf721,0x5
  41952d:	inc    esi
  41952e:	or     al,0xf4
  419530:	xchg   ebp,eax
  419531:	pop    ds
  419532:	jmp    DWORD PTR [ebx]
  419534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419535:	inc    edi
  419536:	add    eax,0x25a616df
  41953b:	sub    DWORD PTR [edi],ebx
  41953d:	mov    ds:0xdc644b7,al
  419542:	rep stos BYTE PTR es:[edi],al
  419544:	push   dx
  419546:	stc    
  419547:	and    al,BYTE PTR [edi+0xa]
  41954a:	adc    al,BYTE PTR [eax]
  41954c:	outs   dx,DWORD PTR ds:[esi]
  41954d:	pop    ebx
  41954e:	xor    ah,dl
  419550:	pop    esp
  419551:	nop
  419552:	sti    
  419553:	push   ss
  419554:	mov    ebx,0x56f7d392
  419559:	inc    ecx
  41955a:	mov    edi,0x9bd69ad1
  41955f:	imul   edx,edx,0x34
  419562:	outs   dx,DWORD PTR ds:[esi]
  419563:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419565:	out    0x93,eax
  419567:	inc    edi
  419568:	push   es
  419569:	jno    0x4195dc
  41956b:	pusha  
  41956c:	push   ss
  41956d:	xchg   ecx,eax
  41956e:	int3   
  41956f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419570:	xchg   ebx,eax
  419571:	jge    0x4195c7
  419573:	cmc    
  419574:	sub    BYTE PTR [esi+0x4572cb9e],ah
  41957a:	push   edi
  41957b:	in     al,dx
  41957c:	or     DWORD PTR [edi],ebp
  41957e:	popa   
  41957f:	fwait
  419580:	pop    ebx
  419581:	and    eax,0x645fa443
  419586:	pusha  
  419587:	pop    eax
  419588:	(bad)  
  419589:	sbb    esi,DWORD PTR [esi-0x38]
  41958c:	inc    edx
  41958d:	stc    
  41958e:	cmp    dh,BYTE PTR [esi-0x2e03c15f]
  419594:	mov    al,BYTE PTR [edi]
  419596:	arpl   WORD PTR [edi+0x20d9632d],sp
  41959c:	shr    BYTE PTR [eax+0x57204e31],0x13
  4195a3:	shl    esi,0xa5
  4195a6:	fldenv [eax-0x755dd937]
  4195ac:	(bad)  
  4195ad:	mov    ds:0x5fb5750e,eax
  4195b2:	aaa    
  4195b3:	scas   eax,DWORD PTR es:[edi]
  4195b4:	mov    fs,WORD PTR [edx-0x337f08b0]
  4195ba:	sbb    dl,0x50
  4195bd:	push   esp
  4195be:	shl    DWORD PTR [ecx+0x43a778e7],cl
  4195c4:	jnp    0x4195a0
  4195c6:	xlat   BYTE PTR ds:[ebx]
  4195c7:	push   edi
  4195c8:	pop    ebp
  4195c9:	pop    esi
  4195ca:	adc    BYTE PTR [ebp+0x2bc3f202],bl
  4195d0:	sbb    al,0x9
  4195d2:	xchg   ebx,eax
  4195d3:	lods   eax,DWORD PTR ds:[esi]
  4195d4:	and    DWORD PTR [ebx],edi
  4195d6:	pop    es
  4195d7:	lods   al,BYTE PTR ds:[esi]
  4195d8:	and    DWORD PTR [edx+0x22db0f56],0x4c
  4195df:	xor    BYTE PTR [ecx-0x4e],bh
  4195e2:	lock gs xor eax,0xd8537550
  4195e9:	std    
  4195ea:	arpl   WORD PTR [ecx],dx
  4195ec:	in     eax,dx
  4195ed:	xchg   edx,eax
  4195ee:	cmp    DWORD PTR [ebx+ecx*2],ebx
  4195f1:	les    ebx,FWORD PTR [edx-0x3e9d14d]
  4195f7:	dec    edx
  4195f8:	mov    esi,0x67dbc13b
  4195fd:	xchg   edi,eax
  4195fe:	cmp    BYTE PTR [ebx+0x7],dl
  419601:	scas   al,BYTE PTR es:[edi]
  419602:	inc    eax
  419603:	inc    edi
  419604:	sbb    DWORD PTR [edx*4+0x59490910],0xffffffbd
  41960c:	jg     0x419625
  41960e:	retf   
  41960f:	pop    eax
  419610:	xor    BYTE PTR [ebx],dl
  419612:	mov    ch,0x79
  419614:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419616:	shl    BYTE PTR [ebp-0x3d1c4075],0xb9
  41961d:	clc    
  41961e:	sub    eax,0xdbb1c16c
  419623:	mov    esp,0xf91bb8f5
  419628:	add    al,0x49
  41962a:	push   ds
  41962b:	rcr    DWORD PTR [ebp-0x64777a18],0x4
  419632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419633:	jmp    0x4195e9
  419635:	push   eax
  419636:	inc    ebx
  419637:	popf   
  419638:	push   edi
  419639:	mov    ds,WORD PTR [ebx-0x2f]
  41963c:	push   ds
  41963d:	cmp    ebx,DWORD PTR [ebx+0x443be752]
  419643:	jo     0x419611
  419645:	hlt    
  419646:	mov    ebx,0x9b50ab09
  41964b:	push   ebx
  41964c:	jg     0x41967e
  41964e:	aas    
  41964f:	mov    eax,0xf61cd419
  419654:	aad    0x6
  419656:	arpl   WORD PTR [eax],ax
  419658:	mov    esp,0xad9e70d7
  41965d:	jae    0x419669
  41965f:	cwde   
  419660:	imul   edi,ebx,0x91d0d2d7
  419666:	dec    eax
  419667:	lea    edi,[edi+0x78]
  41966a:	mov    cl,0x1f
  41966c:	mov    ah,0x1f
  41966e:	adc    dh,al
  419670:	pop    esp
  419671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419672:	and    edx,esi
  419674:	push   0x9b8395d
  419679:	mov    WORD PTR [esp+ecx*1],ss
  41967c:	jbe    0x4196b3
  41967e:	gs mov edx,ebp
  419681:	sbb    edi,ecx
  419683:	xchg   esi,eax
  419684:	inc    eax
  419686:	shr    BYTE PTR gs:[esi-0x19],cl
  41968a:	dec    eax
  41968b:	test   al,0xae
  41968d:	shr    bh,0x86
  419690:	mov    ah,BYTE PTR [ebp-0x47]
  419693:	div    DWORD PTR [esp+edx*4-0x533356c0]
  41969a:	jae    0x4196d3
  41969c:	cmp    eax,0xfc56f067
  4196a1:	push   edi
  4196a2:	sbb    al,0xa1
  4196a4:	(bad)  
  4196a5:	adc    DWORD PTR [edi+eax*1-0x21],edx
  4196a9:	push   0xeac2d041
  4196ae:	xor    eax,0xfcbd9a26
  4196b3:	push   ebx
  4196b4:	mov    edi,0x78af87e1
  4196b9:	jp     0x41963c
  4196bb:	jmp    0x419724
  4196bd:	and    ah,BYTE PTR [edx+eax*8-0x6b0d0422]
  4196c4:	aad    0xf8
  4196c6:	xor    al,0xb7
  4196c8:	push   edi
  4196c9:	mov    dh,0x66
  4196cb:	rcl    DWORD PTR [eax+ebp*2],cl
  4196ce:	pop    ds
  4196cf:	or     ecx,DWORD PTR [ebp-0x4f]
  4196d2:	jmp    0x4479e9a8
  4196d7:	fwait
  4196d8:	jbe    0x419747
  4196da:	add    cl,BYTE PTR [eax-0x7dce2f00]
  4196e0:	cwde   
  4196e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e2:	xlat   BYTE PTR ds:[ebx]
  4196e3:	in     al,0x52
  4196e5:	push   eax
  4196e6:	out    0xf1,al
  4196e8:	nop
  4196e9:	sub    eax,0x34151623
  4196ee:	rcl    DWORD PTR [edx+0x44a3aef6],cl
  4196f4:	es retf 0x8720
  4196f8:	lods   al,BYTE PTR ds:[esi]
  4196f9:	xchg   edx,eax
  4196fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196fb:	hlt    
  4196fc:	bsr    esi,edx
  4196ff:	rol    BYTE PTR [edx],cl
  419701:	scas   al,BYTE PTR es:[edi]
  419702:	pop    es
  419703:	shl    BYTE PTR [edi-0x167da79d],1
  419709:	xchg   esp,eax
  41970a:	outs   dx,DWORD PTR ds:[esi]
  41970b:	push   cs
  41970c:	jns    0x419700
  41970e:	inc    eax
  41970f:	pop    edi
  419710:	sbb    ebp,DWORD PTR [esi-0x5e]
  419713:	push   0x97299752
  419718:	adc    al,BYTE PTR [edi]
  41971a:	mov    edx,0x5d775a
  41971f:	xor    bl,bl
  419721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419722:	push   0xffffffb1
  419724:	btr    ebx,edx
  419727:	inc    ecx
  419728:	call   0x7ec5:0x5e79e61e
  41972f:	fild   WORD PTR [ebp-0x51]
  419732:	dec    eax
  419733:	sbb    DWORD PTR [esi+0x19b1e6b1],eax
  419739:	or     BYTE PTR [edx-0x3f],bl
  41973c:	jl     0x4197a4
  41973e:	push   ebx
  41973f:	mov    ebp,0x92d6b5a9
  419744:	push   0xffffffd6
  419746:	mov    ecx,0xa3dbce01
  41974b:	ss aaa 
  41974d:	xor    ch,ch
  41974f:	and    dl,BYTE PTR ds:0x46bc5907
  419755:	(bad)  
  419757:	int    0xd1
  419759:	iret   
  41975a:	inc    ebx
  41975b:	data16 aaa 
  41975d:	push   ebx
  41975e:	xor    ebp,DWORD PTR [edx]
  419760:	sub    al,0x92
  419762:	xlat   BYTE PTR ds:[ebx]
  419763:	mov    ds:0x62f29e76,eax
  419768:	loope  0x419745
  41976a:	mov    edx,0xc2b5e286
  41976f:	stos   BYTE PTR es:[edi],al
  419770:	jl     0x419767
  419772:	xchg   edx,eax
  419773:	bound  eax,QWORD PTR [eax]
  419775:	push   ecx
  419776:	out    0x41,al
  419778:	ret    
  419779:	js     0x41973d
  41977b:	sbb    BYTE PTR [esi],ah
  41977d:	jns    0x419744
  41977f:	scas   eax,DWORD PTR es:[edi]
  419780:	jl     0x41976f
  419782:	into   
  419783:	int    0x6b
  419785:	test   al,0x7d
  419787:	das    
  419788:	dec    edx
  419789:	test   eax,0x657e8c6a
  41978e:	not    DWORD PTR [ecx]
  419790:	push   ebp
  419791:	add    BYTE PTR [eax+0x1e67834c],cl
  419797:	nop
  419798:	jge    0x419757
  41979a:	mov    eax,0x73d01d5e
  41979f:	or     ebx,ebx
  4197a1:	inc    eax
  4197a2:	scas   eax,DWORD PTR es:[edi]
  4197a3:	pushf  
  4197a4:	jl     0x41975f
  4197a6:	and    cl,BYTE PTR [edi-0x19]
  4197a9:	push   0xfffffff8
  4197ab:	inc    eax
  4197ac:	ins    BYTE PTR es:[edi],dx
  4197ad:	xchg   ebx,eax
  4197ae:	xchg   ebx,eax
  4197af:	sbb    al,0x81
  4197b1:	daa    
  4197b2:	cld    
  4197b3:	and    BYTE PTR fs:[edi],0x7b
  4197b7:	clc    
  4197b8:	lahf   
  4197b9:	jmp    FWORD PTR [esi+0x424356a]
  4197bf:	lds    edx,FWORD PTR [edx+0x2c88fd36]
  4197c5:	jecxz  0x41974e
  4197c7:	jns    0x419834
  4197c9:	mov    eax,DWORD PTR [esi+0x6b]
  4197cc:	rcl    DWORD PTR [ecx+0x5c],cl
  4197cf:	pop    eax
  4197d0:	sub    ebx,edx
  4197d2:	push   0x8b432ec7
  4197d7:	add    DWORD PTR [esi+eax*8+0x49d88e98],edi
  4197de:	mov    DWORD PTR [ebx-0x14],esi
  4197e1:	pushf  
  4197e2:	neg    esp
  4197e4:	mov    ds:0x92012bec,al
  4197e9:	adc    ch,BYTE PTR [edx-0x3c177966]
  4197ef:	mov    edx,DWORD PTR [esi]
  4197f1:	mov    WORD PTR [ebp+0x21],?
  4197f4:	retf   0x1ab9
  4197f7:	fdivrp st(7),st
  4197f9:	mov    cl,0xb7
  4197fb:	mov    gs,WORD PTR gs:[eax]
  4197fe:	add    BYTE PTR [eax],al
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	sar    BYTE PTR [eax],1
  41980f:	cmp    DWORD PTR [edx+esi*8-0x23],ebx
  419813:	adc    al,0x1
  419815:	add    ah,dh
  419817:	add    al,0x0
  419819:	add    ch,ch
  41981b:	cld    
  41981c:	dec    eax
  41981d:	jno    0x419898
  41981f:	xchg   ebp,eax
  419820:	xor    BYTE PTR [esi+0x673fdd79],ch
  419826:	(bad)  
  419828:	jecxz  0x4197af
  41982a:	or     bh,dh
  41982c:	(bad)  
  41982d:	or     bh,BYTE PTR [edx+0x15]
  419830:	mov    eax,ds:0x7709d80a
  419835:	fisub  WORD PTR [esi+0x5]
  419838:	je     0x419877
  41983a:	mov    WORD PTR [edi],gs
  41983c:	out    dx,al
  41983d:	jge    0x419866
  41983f:	and    ebp,DWORD PTR [ebp+0x33]
  419842:	cmc    
  419843:	xchg   edx,eax
  419844:	sub    BYTE PTR [esi+0x12],ch
  419847:	sub    BYTE PTR [edx-0x198469d0],bh
  41984d:	pop    ebx
  41984e:	popa   
  41984f:	jno    0x419892
  419851:	inc    esi
  419852:	pop    edi
  419853:	pop    ds
  419854:	out    dx,eax
  419855:	jp     0x419870
  419857:	fst    DWORD PTR [edi-0x4f]
  41985a:	hlt    
  41985b:	test   BYTE PTR [ecx],al
  41985d:	popf   
  41985e:	sub    al,0xb4
  419860:	sar    edi,cl
  419862:	arpl   WORD PTR [ebp+ecx*8-0x73],bp
  419866:	jno    0x419817
  419868:	or     al,0x7a
  41986a:	mov    ah,0x6a
  41986c:	or     eax,0x5e25005
  419871:	jbe    0x419841
  419873:	test   al,0x61
  419875:	push   cs
  419876:	mov    edi,0x46412049
  41987b:	push   esp
  41987c:	mov    cs,WORD PTR [esi-0x27]
  41987f:	xchg   esp,eax
  419880:	jmp    0x82b6c911
  419885:	test   al,0x48
  419887:	loopne 0x4198c2
  419889:	xchg   ebp,eax
  41988a:	or     dh,BYTE PTR [ebx+edx*4+0x25]
  41988e:	mov    BYTE PTR [eax-0x3e144e3c],dl
  419894:	lods   eax,DWORD PTR ds:[esi]
  419895:	clc    
  419896:	(bad)  
  419897:	call   0xab8e61b9
  41989c:	pop    esi
  41989d:	dec    eax
  41989e:	bound  ebx,QWORD PTR [esi]
  4198a0:	dec    ebp
  4198a1:	scas   al,BYTE PTR es:[edi]
  4198a2:	ins    BYTE PTR es:[edi],dx
  4198a3:	mov    bl,0xd1
  4198a5:	add    DWORD PTR [edi+0x38ce6fc5],ecx
  4198ab:	mov    ds,WORD PTR [esi-0x1f72dab2]
  4198b1:	test   DWORD PTR [edi+0x45e59d61],esi
  4198b7:	clc    
  4198b8:	mov    ebx,0x3da6c72c
  4198bd:	lods   al,BYTE PTR ds:[esi]
  4198be:	aas    
  4198bf:	fst    DWORD PTR [eax]
  4198c1:	lock xchg edx,eax
  4198c3:	sbb    dh,dh
  4198c5:	icebp  
  4198c6:	mov    ecx,0xb628abaa
  4198cb:	cmp    ecx,edx
  4198cd:	mov    dh,0xd9
  4198cf:	mov    edx,0x6790080a
  4198d4:	adc    al,0x21
  4198d6:	sub    ch,BYTE PTR [eax-0x29]
  4198d9:	sbb    edx,DWORD PTR [ebx+ebp*2]
  4198dc:	and    DWORD PTR [ebp+0x2c],eax
  4198df:	mov    al,ch
  4198e1:	mov    ds:0x46f44edc,al
  4198e6:	out    dx,eax
  4198e7:	fisubr DWORD PTR [esi-0x44]
  4198ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198eb:	call   0xafec0718
  4198f0:	gs and dl,bl
  4198f3:	push   ebx
  4198f4:	adc    eax,DWORD PTR [ecx]
  4198f6:	pop    ds
  4198f7:	adc    al,0x13
  4198f9:	and    BYTE PTR [ecx],0x8
  4198fc:	mov    esp,0x60e60693
  419901:	cmp    dl,cl
  419903:	xor    bl,BYTE PTR [eax-0x68]
  419906:	stc    
  419907:	scas   eax,DWORD PTR es:[edi]
  419908:	outs   dx,DWORD PTR ds:[esi]
  419909:	pop    edi
  41990a:	or     eax,0xaebc9dc6
  41990f:	jecxz  0x419965
  419911:	(bad)  
  419912:	jecxz  0x419911
  419914:	sbb    BYTE PTR [ecx-0x734a8c7c],al
  41991a:	call   DWORD PTR [ecx-0x2670adfd]
  419920:	popa   
  419921:	es dec eax
  419923:	out    dx,al
  419924:	(bad)  
  419925:	jecxz  0x419913
  419927:	std    
  419928:	inc    esi
  419929:	test   al,0x8c
  41992b:	pop    edi
  41992c:	in     eax,0x45
  41992e:	xchg   ebx,eax
  41992f:	out    dx,eax
  419930:	stos   BYTE PTR es:[edi],al
  419931:	xchg   ah,al
  419933:	int    0x51
  419935:	and    DWORD PTR [esi-0x59abc02b],esp
  41993b:	pushf  
  41993c:	jp     0x4198ce
  41993e:	iret   
  41993f:	aaa    
  419940:	adc    bh,al
  419942:	in     eax,0x33
  419944:	and    bl,BYTE PTR [ebx+0x34ca4df4]
  41994a:	cwde   
  41994b:	jae    0x419971
  41994d:	xchg   esp,eax
  41994e:	inc    ebp
  41994f:	ss cli 
  419951:	cld    
  419952:	je     0x4198e9
  419954:	fiadd  DWORD PTR [eax+0x4d3f64a2]
  41995a:	mov    edi,DWORD PTR [edi+0x2a]
  41995d:	add    ebp,DWORD PTR [eax+0x790c4f3]
  419963:	or     al,0xb4
  419965:	mov    BYTE PTR [ecx],dl
  419967:	loopne 0x41996b
  419969:	or     al,0x28
  41996b:	mov    al,0x9e
  41996d:	mov    WORD PTR [edx],?
  41996f:	addr16 es or ah,al
  419973:	inc    edi
  419974:	cmp    dh,BYTE PTR [esi]
  419976:	push   ss
  419977:	push   0x70
  419979:	addr16 xchg ah,al
  41997c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41997d:	mov    al,0xa1
  41997f:	jno    0x419931
  419981:	(bad)  
  419982:	jmp    0x50d0:0x8eebb032
  419989:	retf   
  41998a:	aad    0xce
  41998c:	adc    ebp,DWORD PTR [eax+esi*4-0x7c]
  419990:	or     al,BYTE PTR [edx]
  419992:	cmp    edx,DWORD PTR [eax]
  419994:	neg    DWORD PTR [edi-0x32fb780d]
  41999a:	mov    edx,0x75b793ad
  41999f:	stos   DWORD PTR es:[edi],eax
  4199a0:	inc    eax
  4199a1:	rol    ebx,1
  4199a3:	mov    esi,DWORD PTR [ebx-0x2e5a06c7]
  4199a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199aa:	out    0x2d,al
  4199ac:	push   cs
  4199ad:	cwde   
  4199ae:	enter  0x6684,0xbd
  4199b2:	loope  0x4199af
  4199b4:	mov    cl,bl
  4199b6:	adc    eax,0xa269576d
  4199bb:	(bad)  
  4199bc:	fild   DWORD PTR [edx+0x95c0a88]
  4199c2:	dec    eax
  4199c3:	mov    bh,BYTE PTR [ecx+0x79]
  4199c6:	jmp    0xa290:0x94a1310f
  4199cd:	leave  
  4199ce:	push   esp
  4199cf:	inc    ebx
  4199d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d1:	and    al,0x2a
  4199d3:	mov    ch,0xb5
  4199d5:	ss in  eax,dx
  4199d7:	das    
  4199d8:	xor    BYTE PTR [esi],bh
  4199da:	xchg   ebp,eax
  4199db:	dec    ecx
  4199dc:	pop    eax
  4199dd:	xchg   edx,eax
  4199de:	mov    bh,BYTE PTR [edi]
  4199e0:	(bad)  
  4199e1:	cli    
  4199e2:	test   eax,0x8dc016d0
  4199e7:	push   esi
  4199e8:	call   0x1b73:0x7e5d2ad3
  4199ef:	mov    edi,0xe80f9f5c
  4199f4:	mov    al,ch
  4199f6:	push   cs
  4199f7:	neg    DWORD PTR [ebp-0x62d3db67]
  4199fd:	arpl   cx,cx
  4199ff:	adc    esp,esp
  419a01:	(bad)  
  419a02:	icebp  
  419a03:	jbe    0x419a6e
  419a05:	mov    al,ds:0x5c4b1d02
  419a0a:	pop    ss
  419a0b:	jl     0x4199ef
  419a0d:	clc    
  419a0e:	repz imul BYTE PTR [edx-0x3e]
  419a12:	push   esi
  419a13:	sbb    bl,al
  419a15:	(bad)  
  419a17:	jns    0x4199a8
  419a19:	jo     0x419a99
  419a1b:	test   DWORD PTR [ebp-0xc],0x3be8e38f
  419a22:	lahf   
  419a23:	out    dx,al
  419a24:	es xchg ebp,eax
  419a26:	pop    edi
  419a27:	push   edi
  419a28:	mov    ebx,0xa5e12ef0
  419a2d:	outs   dx,BYTE PTR ds:[esi]
  419a2e:	dec    esi
  419a2f:	pop    es
  419a30:	test   al,0x16
  419a32:	pop    es
  419a33:	pop    edx
  419a34:	inc    ecx
  419a35:	mov    al,0xd6
  419a37:	adc    eax,0xb9e0216
  419a3c:	(bad)  
  419a3e:	loope  0x4199f4
  419a40:	fldenv [esi]
  419a42:	pop    esp
  419a43:	lock dec ebp
  419a45:	xor    BYTE PTR [eax+0x3b757b6d],ah
  419a4b:	jae    0x419a7a
  419a4d:	mov    DWORD PTR [edi-0x67],esi
  419a50:	dec    esp
  419a51:	jge    0x419a83
  419a53:	push   ecx
  419a54:	cmp    dl,ah
  419a56:	sbb    DWORD PTR [edi+0x283b3524],ebx
  419a5c:	pushf  
  419a5d:	cmp    eax,DWORD PTR [ecx-0x1a3847ec]
  419a63:	mov    dh,0xd2
  419a65:	ret    0xffd9
  419a68:	cmp    edi,ebp
  419a6a:	or     bl,BYTE PTR [ebx-0x51d8aa80]
  419a70:	ins    DWORD PTR es:[edi],dx
  419a71:	xchg   esi,eax
  419a72:	std    
  419a73:	popf   
  419a74:	hlt    
  419a75:	imul   ebx,DWORD PTR [edi+0x6c],0x279b32fe
  419a7c:	sbb    al,0xa0
  419a7e:	dec    ecx
  419a7f:	ss pop esi
  419a81:	lock in al,dx
  419a83:	cmp    DWORD PTR ds:0xe97fd8b2,edx
  419a89:	js     0x419b02
  419a8b:	(bad)  
  419a8c:	jmp    0xd73f6a80
  419a91:	cmp    DWORD PTR [esi+ebp*8],esp
  419a94:	push   0xffffffec
  419a96:	mov    ecx,0x44efec87
  419a9b:	add    eax,0x923a5099
  419aa0:	adc    DWORD PTR [edi],ebp
  419aa2:	mov    bl,BYTE PTR [ecx-0x37]
  419aa5:	sbb    ebp,DWORD PTR [eax-0x79]
  419aa8:	sbb    cl,BYTE PTR ds:0x1736385f
  419aae:	test   BYTE PTR [eax+0x3],ah
  419ab1:	or     ebx,DWORD PTR [esi]
  419ab3:	sahf   
  419ab4:	in     al,dx
  419ab5:	call   0x1b4b:0x2b783dc5
  419abc:	fisttp WORD PTR [ebp-0x79cbc6d9]
  419ac2:	pop    ebp
  419ac3:	(bad)  
  419ac4:	aad    0x68
  419ac6:	jae    0x419aa8
  419ac8:	fiadd  DWORD PTR [eax]
  419aca:	push   ecx
  419acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419acc:	mov    ebx,0xaabdc0ba
  419ad1:	mov    ds:0xc8db0209,eax
  419ad6:	inc    ecx
  419ad7:	xor    DWORD PTR [ebp-0x792310eb],0x5b
  419ade:	push   edi
  419adf:	sbb    DWORD PTR [edi-0x2dac4d33],ecx
  419ae5:	sub    BYTE PTR [ebx+0x4ad8044b],cl
  419aeb:	sbb    esp,DWORD PTR [edi-0x80cb717]
  419af1:	pop    edi
  419af2:	push   0xb5957af6
  419af7:	jge    0x419a9d
  419af9:	ss mov al,0xef
  419afc:	adc    esp,edx
  419afe:	and    esp,DWORD PTR [ebx+ebx*1+0x5b11354f]
  419b05:	xchg   ebp,eax
  419b07:	sub    ebx,esi
  419b09:	adc    bl,BYTE PTR es:[esi-0x21]
  419b0d:	xlat   BYTE PTR ds:[ebx]
  419b0e:	or     eax,0x11ebf8fc
  419b13:	pop    ebx
  419b14:	daa    
  419b15:	pushf  
  419b16:	cs mov al,0x6b
  419b19:	loope  0x419b00
  419b1b:	xchg   esi,eax
  419b1c:	add    ch,BYTE PTR [esi+0x7c]
  419b1f:	in     al,0x0
  419b21:	sub    BYTE PTR [eax+0x13],0x6f
  419b25:	call   0xbc94:0xe1ee5c15
  419b2c:	or     BYTE PTR [edi-0x21],ah
  419b2f:	mov    ebx,0xd3433042
  419b34:	test   BYTE PTR [eax-0x6c387cc0],ah
  419b3a:	add    al,0x17
  419b3c:	xor    al,0xdf
  419b3e:	cwde   
  419b3f:	pushf  
  419b40:	dec    edi
  419b41:	add    al,BYTE PTR [eax-0x13]
  419b44:	das    
  419b45:	aad    0x0
  419b47:	ds shr esp,0xbc
  419b4b:	push   0x46
  419b4d:	test   eax,0x67c8fbc8
  419b52:	cli    
  419b53:	inc    edi
  419b54:	hlt    
  419b55:	pop    esi
  419b56:	push   edx
  419b57:	cs lahf 
  419b59:	mov    cl,0x31
  419b5b:	pop    edi
  419b5c:	dec    ecx
  419b5d:	sub    ch,dh
  419b5f:	mov    esi,0xb6abc65d
  419b64:	pop    ebp
  419b65:	dec    esp
  419b66:	pop    ebp
  419b67:	add    eax,0xe8cf2bef
  419b6c:	cli    
  419b6d:	psubq  mm3,QWORD PTR [eax-0x2a]
  419b71:	sbb    esi,DWORD PTR [ebx]
  419b73:	(bad)  
  419b74:	(bad)  
  419b76:	lahf   
  419b77:	mov    ah,0x59
  419b79:	or     BYTE PTR ds:0x78997e61,cl
  419b7f:	jl     0x419b4b
  419b81:	add    BYTE PTR [esi+ebp*1],ah
  419b84:	and    esi,DWORD PTR [ecx+0x46]
  419b87:	jp     0x419beb
  419b89:	cmp    al,0x82
  419b8b:	aas    
  419b8c:	stos   DWORD PTR es:[edi],eax
  419b8d:	loop   0x419b79
  419b8f:	xchg   ebx,eax
  419b90:	cdq    
  419b91:	xor    al,0x9d
  419b93:	xor    eax,DWORD PTR [esi]
  419b95:	mov    ecx,0xd2bb15ca
  419b9a:	or     DWORD PTR [ebx-0x53],edx
  419b9d:	pop    ebx
  419b9e:	loope  0x419bdf
  419ba0:	push   0xffffffee
  419ba2:	aas    
  419ba3:	xchg   BYTE PTR [eax+0x38],al
  419ba6:	sub    edi,DWORD PTR [ecx-0x6d585b69]
  419bac:	stos   BYTE PTR es:[edi],al
  419bad:	jmp    0x419b7c
  419baf:	lods   al,BYTE PTR ds:[esi]
  419bb0:	lea    eax,[ebx]
  419bb2:	xchg   esp,eax
  419bb3:	loop   0x419c29
  419bb5:	imul   eax,DWORD PTR [esi-0x105c7b6d],0xffffffe7
  419bbc:	pushf  
  419bbd:	repnz cmp edx,ebx
  419bc0:	ror    DWORD PTR ds:0xea7ef3d9,0xed
  419bc7:	inc    eax
  419bc8:	jl     0x419bd6
  419bca:	jmp    0xc24479fd
  419bcf:	daa    
  419bd0:	sub    eax,DWORD PTR [esi-0x77]
  419bd3:	mov    esp,0x216fdfab
  419bd8:	test   BYTE PTR [edi+edx*8+0x22c1d23e],ah
  419bdf:	je     0x419bb8
  419be1:	jle    0x419c01
  419be3:	sub    eax,0xcb6e00ac
  419be8:	cli    
  419be9:	mov    bh,0x59
  419beb:	scas   eax,DWORD PTR es:[edi]
  419bec:	mov    ebp,0x3f62d13f
  419bf1:	add    al,0xb
  419bf3:	psubq  mm6,QWORD PTR [eax+eax*2]
  419bf7:	sub    eax,0x40b1df8f
  419bfc:	xor    al,0xa1
  419bfe:	pop    ecx
  419bff:	fiadd  DWORD PTR [ebp-0x307045c9]
  419c05:	int    0xa6
  419c07:	test   al,0x11
  419c09:	sub    edi,ebp
  419c0b:	retf   
  419c0c:	sar    DWORD PTR [edx-0x37],1
  419c0f:	jae    0x419bc3
  419c11:	repz jecxz 0x419c38
  419c14:	add    eax,0x7cb70cf4
  419c19:	popf   
  419c1a:	xor    bl,BYTE PTR [esi+0x14968c28]
  419c20:	pop    ds
  419c21:	scas   eax,DWORD PTR es:[edi]
  419c22:	arpl   WORD PTR [edi+0x6b],di
  419c25:	imul   ebx,DWORD PTR [esi],0x4b
  419c28:	adc    al,0x5c
  419c2a:	ss int 0xfe
  419c2d:	aam    0x11
  419c2f:	in     al,0x10
  419c31:	add    BYTE PTR [edx-0x2a],0xdb
  419c35:	(bad)  
  419c36:	out    0xa6,al
  419c38:	pop    ds
  419c39:	data16 rol bl,cl
  419c3c:	lea    ecx,[ebp+0x661e03c9]
  419c42:	pop    esp
  419c43:	out    dx,al
  419c44:	out    0xe,eax
  419c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c47:	jne    0x419c6a
  419c49:	inc    esi
  419c4a:	mov    ah,0x72
  419c4c:	enter  0x9cc7,0x3a
  419c50:	nop
  419c51:	and    ebp,DWORD PTR fs:[ecx]
  419c54:	add    ecx,DWORD PTR [ecx-0x21]
  419c57:	ror    DWORD PTR [eax-0xb247c59],1
  419c5d:	mov    dh,0x22
  419c5f:	add    BYTE PTR [eax],ch
  419c61:	xor    esp,0x28
  419c64:	xor    al,0x6
  419c66:	jp     0x419cd9
  419c68:	je     0x419c8d
  419c6a:	bound  ecx,QWORD PTR [edx-0x27]
  419c6d:	(bad)  
  419c6e:	push   0x772d0496
  419c73:	or     esi,DWORD PTR [edi]
  419c75:	jge    0x419c43
  419c77:	jecxz  0x419c1a
  419c79:	mov    fs,WORD PTR [eax]
  419c7b:	repnz jecxz 0x419cab
  419c7e:	(bad)  
  419c7f:	xchg   ebp,eax
  419c80:	ror    eax,cl
  419c82:	in     eax,dx
  419c83:	jmp    0x419cec
  419c85:	rcr    esp,cl
  419c87:	leave  
  419c88:	stc    
  419c89:	mov    edi,0xa4a515f9
  419c8e:	push   edi
  419c8f:	pop    ds
  419c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c91:	popa   
  419c92:	mov    ebp,esi
  419c94:	mov    esp,0xe1ce65f4
  419c99:	into   
  419c9a:	mov    edx,0xe718412
  419c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ca0:	ret    
  419ca1:	xchg   edi,eax
  419ca2:	rcr    BYTE PTR [edx],cl
  419ca4:	stc    
  419ca5:	and    DWORD PTR [eax],0xdccb9872
  419cab:	hlt    
  419cac:	inc    esi
  419cad:	call   esi
  419caf:	inc    esp
  419cb0:	das    
  419cb1:	push   0x2e51e3d5
  419cb6:	jnp    0x419ca8
  419cb8:	and    al,0x4
  419cba:	pop    edi
  419cbb:	outs   dx,BYTE PTR ds:[esi]
  419cbc:	ins    BYTE PTR es:[edi],dx
  419cbd:	addr16 mov cl,0xa7
  419cc0:	stc    
  419cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cc2:	dec    edi
  419cc3:	fnstenv [ebp-0x79]
  419cc6:	ins    BYTE PTR es:[edi],dx
  419cc7:	clc    
  419cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc9:	std    
  419cca:	mov    al,0x70
  419ccc:	jno    0x419cc2
  419cce:	les    ecx,FWORD PTR [edi-0xe]
  419cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd2:	xchg   ecx,eax
  419cd3:	stos   BYTE PTR es:[edi],al
  419cd4:	xor    al,0xe3
  419cd6:	fisub  WORD PTR [edx+edi*1+0x3a]
  419cda:	or     al,0x49
  419cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cdd:	pop    ss
  419cde:	icebp  
  419cdf:	jae    0x419c83
  419ce1:	in     eax,dx
  419ce2:	and    esi,ebp
  419ce4:	adc    al,BYTE PTR [esi+ecx*8]
  419ce7:	cmp    cl,BYTE PTR [eax+0xed4d50f]
  419ced:	jp     0x419cd3
  419cef:	sar    BYTE PTR [eax],1
  419cf1:	pop    ebp
  419cf2:	fnstcw WORD PTR [edx-0x4b209a7b]
  419cf8:	dec    esi
  419cf9:	rcl    DWORD PTR [edx],1
  419cfb:	cmp    bh,BYTE PTR [edx-0x2dddc8ae]
  419d01:	push   eax
  419d02:	sub    ecx,eax
  419d04:	aad    0x15
  419d06:	xchg   esi,eax
  419d07:	aaa    
  419d08:	cs pop eax
  419d0a:	xor    DWORD PTR [ebx+0x6a21],eax
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x4b49077c]
  419d20:	xchg   esi,eax
  419d21:	dec    ecx
  419d22:	rcr    DWORD PTR [ecx],1
  419d24:	add    DWORD PTR [eax],eax
  419d26:	hlt    
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [edi+0x64],al
  419d2c:	aam    0x6f
  419d2e:	sub    ebp,DWORD PTR [edi+edi*1-0x1e6ad8a0]
  419d35:	repz loopne 0x419cde
  419d38:	pop    es
  419d39:	int3   
  419d3a:	jmp    0x419d59
  419d3c:	push   0xffffffd1
  419d3e:	stos   BYTE PTR es:[edi],al
  419d3f:	pushf  
  419d40:	aad    0x75
  419d42:	cmp    esi,edi
  419d44:	mov    al,0xe5
  419d46:	ja     0x419d3a
  419d48:	(bad)  
  419d49:	les    ecx,FWORD PTR [esi-0x5c]
  419d4c:	push   ss
  419d4d:	adc    ah,cl
  419d4f:	adc    BYTE PTR [edx-0x3a],0x32
  419d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d54:	mov    al,0x92
  419d56:	jmp    0x9dd02fb8
  419d5b:	push   ss
  419d5c:	fcom   DWORD PTR [edx-0x4d]
  419d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d60:	add    DWORD PTR [esi+0x3],edi
  419d63:	retf   0x7d6e
  419d66:	ins    DWORD PTR es:[edi],dx
  419d67:	mov    esp,0xa423ef82
  419d6c:	mov    esi,0xd9a5b796
  419d71:	push   esp
  419d72:	sbb    al,0x50
  419d74:	stos   DWORD PTR es:[edi],eax
  419d75:	adc    eax,0xd06392d4
  419d7a:	mov    ds:0xf255cf69,al
  419d7f:	or     esp,esp
  419d81:	or     BYTE PTR [edx+0x7209f],bh
  419d87:	pop    ebp
  419d88:	push   esi
  419d89:	xor    al,0xf6
  419d8b:	inc    ecx
  419d8c:	add    dl,BYTE PTR [edi+0x5e7b964a]
  419d92:	mov    ebp,esi
  419d94:	pop    esi
  419d95:	ret    
  419d96:	test   edi,0x849f8069
  419d9c:	(bad)  
  419d9d:	cmp    esp,DWORD PTR [ebp-0x12]
  419da0:	pop    ebx
  419da1:	aad    0xa
  419da3:	or     eax,0xd3a02bf2
  419da8:	rcl    BYTE PTR [ecx+eiz*2],cl
  419dab:	out    0xf1,eax
  419dad:	dec    ebx
  419dae:	lahf   
  419daf:	mov    edi,0xa4efbe0a
  419db4:	inc    ecx
  419db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db6:	mov    eax,0x119ac925
  419dbb:	pushf  
  419dbc:	out    dx,eax
  419dbd:	iret   
  419dbe:	pop    edx
  419dbf:	sbb    dh,BYTE PTR [ecx]
  419dc1:	(bad)  
  419dc2:	push   esi
  419dc3:	add    al,0x54
  419dc5:	sub    bl,BYTE PTR [ebp+0x7a]
  419dc8:	shl    BYTE PTR [eax-0x2b84d08c],1
  419dce:	add    edi,DWORD PTR [ecx+0x4f]
  419dd1:	ror    DWORD PTR ds:0xabeecb70,1
  419dd7:	sbb    DWORD PTR [ecx],eax
  419dd9:	(bad)  
  419dda:	mov    edx,DWORD PTR [esi]
  419ddc:	mov    esi,?
  419dde:	sub    eax,DWORD PTR [eax+0x44]
  419de1:	sbb    ah,BYTE PTR [esi+ecx*4]
  419de4:	enter  0xa85b,0xbb
  419de8:	int3   
  419de9:	cvttps2pi mm7,xmm3
  419dec:	mov    esp,0xb7c2d865
  419df1:	out    dx,al
  419df2:	mov    esi,0x432c6c4d
  419df7:	or     BYTE PTR [esp+eiz*2+0x33],0x7d
  419dfc:	fisttp QWORD PTR [edi+0x1c]
  419dff:	xor    al,0xc7
  419e01:	sbb    BYTE PTR [edi-0x20],ah
  419e04:	and    eax,0xca011564
  419e09:	dec    ecx
  419e0a:	call   0x9697:0xc71ae7fa
  419e11:	mov    dl,0xda
  419e13:	jno    0x419d98
  419e15:	jae    0x419db2
  419e17:	mov    bl,0x2d
  419e19:	add    BYTE PTR [eax],0x24
  419e1c:	mov    al,0xc9
  419e1e:	xor    eax,0x80f7f0db
  419e23:	jae    0x419e63
  419e25:	fwait
  419e26:	ja     0x419e86
  419e28:	neg    BYTE PTR [ecx-0x556d793d]
  419e2e:	jns    0x419de2
  419e30:	mov    BYTE PTR [edi],ch
  419e32:	mov    dl,0xf8
  419e34:	push   0xffffff95
  419e36:	std    
  419e37:	mov    dl,0x31
  419e39:	lods   eax,DWORD PTR ds:[esi]
  419e3a:	stos   DWORD PTR es:[edi],eax
  419e3b:	mov    ebx,0xf28209b9
  419e40:	imul   esp,DWORD PTR [ebp+0x7c5ff5f7],0xa9edcc17
  419e4a:	gs jne 0x419e35
  419e4d:	xor    eax,DWORD PTR [ecx+esi*4]
  419e50:	jge    0x419e06
  419e52:	mov    dh,0xe5
  419e54:	mov    edx,DWORD PTR [edx]
  419e56:	daa    
  419e57:	xchg   esp,eax
  419e58:	mul    BYTE PTR [ecx-0x4e9747f3]
  419e5e:	push   esi
  419e5f:	test   al,0xa6
  419e61:	xchg   esp,eax
  419e62:	jnp    0x419de6
  419e64:	rol    BYTE PTR [ebp+ebp*8-0xa],cl
  419e68:	stc    
  419e69:	lock xchg ebx,eax
  419e6b:	mov    eax,ds:0x4745e921
  419e70:	mov    BYTE PTR [edi],0xa7
  419e73:	daa    
  419e74:	xor    al,0x5
  419e76:	add    eax,0xab987118
  419e7b:	rol    BYTE PTR [eax-0x394de975],0x65
  419e82:	adc    al,0x34
  419e84:	mov    dh,0x90
  419e86:	push   esp
  419e87:	sbb    eax,ebx
  419e89:	aaa    
  419e8a:	adc    esp,esi
  419e8c:	lock seto cl
  419e90:	das    
  419e91:	mov    ah,0x8a
  419e93:	shr    DWORD PTR [ebx],1
  419e95:	dec    esi
  419e96:	dec    ebp
  419e97:	pusha  
  419e98:	mov    ds:0x769f1c99,al
  419e9d:	nop
  419e9e:	add    al,0x2b
  419ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea1:	imul   ebp,DWORD PTR [edi-0x60],0xffffffc5
  419ea5:	xchg   edi,eax
  419ea6:	and    dl,dh
  419ea8:	jbe    0x419e30
  419eaa:	arpl   WORD PTR [ebx-0x656917f8],bp
  419eb0:	push   0xffffffde
  419eb2:	ss pop ebp
  419eb4:	mov    bl,BYTE PTR [edi]
  419eb6:	sub    al,0x94
  419eb8:	sub    al,0x84
  419eba:	xchg   ebx,eax
  419ebb:	pop    esi
  419ebc:	push   ebx
  419ebd:	fld    TBYTE PTR [esi-0x36]
  419ec0:	les    eax,FWORD PTR [edi]
  419ec2:	push   esp
  419ec3:	jg     0x419f3c
  419ec5:	popf   
  419ec6:	sbb    ebx,ebx
  419ec8:	hlt    
  419ec9:	sbb    ch,BYTE PTR [ebx]
  419ecb:	loopne 0x419e50
  419ecd:	scas   eax,DWORD PTR es:[edi]
  419ece:	es fwait
  419ed0:	iret   
  419ed1:	mov    ah,bl
  419ed3:	cmp    eax,0xd0d46159
  419ed8:	dec    edx
  419ed9:	aas    
  419eda:	lock xchg ebx,eax
  419edc:	inc    edi
  419edd:	and    dh,ah
  419edf:	retf   
  419ee0:	mov    edi,0xef23b5e8
  419ee5:	xchg   DWORD PTR [esi],edx
  419ee7:	xor    BYTE PTR [esi],bl
  419ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eea:	aas    
  419eeb:	jno    0x419f42
  419eed:	mov    eax,0x8badc0fd
  419ef2:	popa   
  419ef3:	out    0x2,al
  419ef5:	in     eax,0x37
  419ef7:	jmp    0x419e99
  419ef9:	jecxz  0x419e93
  419efb:	inc    ebx
  419efc:	fld    TBYTE PTR [eax+esi*4+0x69839beb]
  419f03:	int    0x80
  419f05:	xchg   esi,eax
  419f06:	xchg   ebp,edx
  419f08:	out    0x55,eax
  419f0a:	add    BYTE PTR [ecx-0x78],bh
  419f0d:	mov    dl,BYTE PTR [esi]
  419f0f:	adc    dl,BYTE PTR [eax-0x1f]
  419f12:	dec    esi
  419f13:	jne    0x419eae
  419f15:	ins    BYTE PTR es:[edi],dx
  419f16:	(bad)  
  419f17:	ins    BYTE PTR es:[edi],dx
  419f18:	enter  0xedde,0x1e
  419f1c:	and    al,0x66
  419f1e:	fcom   QWORD PTR [ebp-0x49]
  419f21:	pop    edx
  419f22:	iret   
  419f23:	fcomp  DWORD PTR [edx+edi*4]
  419f26:	push   edi
  419f27:	jl     0x419ed7
  419f29:	mov    dl,0x5e
  419f2b:	in     eax,0xc3
  419f2d:	pop    ebx
  419f2e:	push   ebp
  419f2f:	int    0xbb
  419f31:	retf   
  419f32:	js     0x419f95
  419f34:	jne    0x419f72
  419f36:	nop
  419f37:	push   esi
  419f38:	and    bl,BYTE PTR ds:0x4e3910ef
  419f3e:	jp     0x419f6c
  419f40:	xchg   edi,eax
  419f41:	les    edx,FWORD PTR [ecx+0x70a3ab09]
  419f47:	jae    0x419f42
  419f49:	jns    0x419f02
  419f4b:	jb     0x419ed4
  419f4d:	inc    edi
  419f4e:	mov    dh,0x36
  419f50:	popa   
  419f51:	lock jae 0x419fd1
  419f54:	pop    edx
  419f55:	cwde   
  419f56:	shr    DWORD PTR [edx+0x3f],0xe9
  419f5a:	paddusb mm1,mm3
  419f5d:	sahf   
  419f5e:	cmp    DWORD PTR [ebx],ebp
  419f60:	cwde   
  419f61:	or     BYTE PTR [ecx+edx*1-0x5],ch
  419f65:	cmp    eax,0x411d8750
  419f6a:	cmp    BYTE PTR [edi-0x53],bh
  419f6d:	setb   BYTE PTR [ecx+0x25ac974f]
  419f74:	das    
  419f75:	std    
  419f76:	out    dx,eax
  419f77:	cli    
  419f78:	mov    ss,WORD PTR [eax+eiz*4-0x4fabb8c3]
  419f7f:	cmp    BYTE PTR [eax],bh
  419f81:	pop    eax
  419f82:	loope  0x419f17
  419f84:	ror    BYTE PTR [ebx+edi*2-0x2c3f607a],cl
  419f8b:	pop    edx
  419f8c:	dec    eax
  419f8d:	arpl   dx,bx
  419f8f:	sub    DWORD PTR [esi],edx
  419f91:	mov    ch,0x48
  419f93:	pop    ecx
  419f94:	(bad)  
  419f95:	es popf 
  419f97:	(bad)  
  419f98:	xchg   BYTE PTR [esi+0x64],dh
  419f9b:	xchg   DWORD PTR [eax-0x10],esi
  419f9e:	add    edi,DWORD PTR [edi]
  419fa0:	mov    ah,0xc3
  419fa2:	call   0xbc8d:0xcdd8e470
  419fa9:	je     0x419f7a
  419fab:	inc    ebx
  419fac:	fsub   DWORD PTR [eax+eiz*4-0x27efb8ad]
  419fb3:	dec    edx
  419fb4:	push   esi
  419fb5:	out    dx,al
  419fb6:	sti    
  419fb7:	dec    eax
  419fb8:	std    
  419fb9:	loope  0x419fe0
  419fbb:	inc    edx
  419fbc:	inc    edx
  419fbd:	mov    ebx,edx
  419fbf:	cmp    edx,ebp
  419fc1:	xchg   DWORD PTR [edi+0x531961a8],ebx
  419fc7:	rol    BYTE PTR [ebx-0x194f5ae1],1
  419fcd:	jo     0x419fe9
  419fcf:	int    0x60
  419fd1:	xchg   esi,eax
  419fd2:	outs   dx,DWORD PTR ds:[esi]
  419fd3:	jno    0x419fda
  419fd5:	imul   ebp,DWORD PTR [esi+edx*2],0xffffff9b
  419fd9:	xor    BYTE PTR [edx],cl
  419fdb:	cmc    
  419fdc:	(bad)  
  419fde:	and    al,0xd7
  419fe0:	pop    esp
  419fe1:	outs   dx,DWORD PTR ds:[esi]
  419fe2:	or     al,0xed
  419fe4:	jmp    0x4a9e340f
  419fe9:	push   0x88223dc7
  419fee:	add    eax,0xc3703d58
  419ff3:	loope  0x41a004
  419ff5:	int    0x43
  419ff7:	aam    0xf8
  419ff9:	mov    ds:0x8ed4a85f,eax
  419ffe:	pop    ds
  419fff:	push   cs
  41a000:	(bad)  
  41a001:	mov    BYTE PTR [eax],ah
  41a003:	push   eax
  41a004:	adc    eax,0x510fc94a
  41a009:	xlat   BYTE PTR ds:[ebx]
  41a00a:	jle    0x41a00c
  41a00c:	cmp    al,0xbd
  41a00e:	or     eax,0xab404571
  41a013:	cs int3 
  41a015:	in     al,dx
  41a016:	push   edi
  41a017:	outs   dx,BYTE PTR ds:[esi]
  41a018:	in     eax,0x68
  41a01a:	fimul  WORD PTR [edx-0x76121498]
  41a020:	cld    
  41a021:	or     edx,0x19
  41a024:	pop    ss
  41a025:	test   al,0x1a
  41a027:	push   esp
  41a028:	jecxz  0x41a080
  41a02a:	jo     0x41a08b
  41a02c:	push   ebx
  41a02d:	sub    edi,DWORD PTR [edx+0x63a94b8b]
  41a033:	mov    DWORD PTR [ebp-0x4d],esi
  41a036:	push   ecx
  41a037:	and    BYTE PTR gs:[edi+0x54],bl
  41a03b:	dec    edi
  41a03c:	add    ebp,DWORD PTR [edi+edi*4-0x2c]
  41a040:	lahf   
  41a041:	or     DWORD PTR [eax+0x617f7b7],ecx
  41a047:	jle    0x41a0b6
  41a049:	sub    DWORD PTR [ebx-0x4f],0x9afc911d
  41a050:	aas    
  41a051:	in     eax,dx
  41a052:	hlt    
  41a053:	dec    esp
  41a054:	int3   
  41a055:	mov    eax,0x808eddc6
  41a05a:	stc    
  41a05b:	xchg   ecx,eax
  41a05c:	inc    ecx
  41a05d:	push   0x6a
  41a05f:	sub    edx,DWORD PTR [ecx-0x7e1c3ed4]
  41a065:	inc    edi
  41a066:	cmp    BYTE PTR [esi-0xf],dh
  41a069:	pop    ss
  41a06a:	addr16 mov eax,ecx
  41a06d:	fist   WORD PTR [edi-0x4538daa4]
  41a073:	in     al,dx
  41a074:	aaa    
  41a075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a076:	retf   
  41a077:	ss or  ch,al
  41a07a:	mov    ch,0xa2
  41a07c:	bnd jns 0x41a0f9
  41a07f:	pop    ecx
  41a080:	dec    esi
  41a081:	or     ebp,ecx
  41a083:	add    DWORD PTR [eax-0xe5354d9],ecx
  41a089:	jbe    0x41a02c
  41a08b:	into   
  41a08c:	xchg   esp,eax
  41a08d:	jp     0x41a091
  41a08f:	or     al,BYTE PTR [ecx]
  41a091:	cli    
  41a092:	loope  0x41a0b9
  41a094:	push   ss
  41a095:	jecxz  0x41a060
  41a097:	and    bl,BYTE PTR [ecx-0x56]
  41a09a:	dec    edx
  41a09b:	shrd   ebp,ebp,cl
  41a09e:	cmp    al,0xfe
  41a0a0:	push   cs
  41a0a1:	push   eax
  41a0a2:	mov    ds:0x3f40889b,al
  41a0a7:	je     0x41a08a
  41a0a9:	call   0xe49c:0xc8f970e8
  41a0b0:	mov    ecx,0x78768e0a
  41a0b5:	sub    cl,BYTE PTR [esi+edx*8]
  41a0b8:	pop    ecx
  41a0b9:	dec    ebx
  41a0ba:	test   BYTE PTR [ebp+ebx*1+0x63b768b],ah
  41a0c1:	pop    ds
  41a0c2:	jb     0x41a058
  41a0c4:	or     eax,0x344602d5
  41a0c9:	iret   
  41a0ca:	mov    ecx,0x5b591bf6
  41a0cf:	arpl   WORD PTR [ebx-0x38],cx
  41a0d2:	mov    eax,0x8cb342e9
  41a0d7:	cmp    ecx,DWORD PTR [ebx]
  41a0d9:	sub    bl,0x2f
  41a0dc:	lods   al,BYTE PTR ds:[esi]
  41a0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0de:	shl    DWORD PTR [eax],0xf2
  41a0e1:	imul   ebp,ebp,0x30be1ce2
  41a0e7:	xchg   eax,ebp
  41a0e9:	daa    
  41a0ea:	xor    eax,0xb3b8e102
  41a0ef:	push   ds
  41a0f0:	rcr    BYTE PTR [edi+0x5e08aac6],0x95
  41a0f7:	and    eax,0xe0f321be
  41a0fc:	fidiv  WORD PTR ds:0x9d43f535
  41a102:	and    al,al
  41a104:	jl     0x41a161
  41a106:	jmp    FWORD PTR [ebx]
  41a108:	xchg   ebx,eax
  41a109:	dec    edi
  41a10a:	out    dx,al
  41a10b:	ss dec eax
  41a10d:	adc    DWORD PTR [esi-0x3c],0x8
  41a111:	fs add al,0xc4
  41a114:	or     ebx,DWORD PTR [edx+0x5e]
  41a117:	pop    esi
  41a118:	loop   0x41a199
  41a11a:	xor    al,0x2c
  41a11c:	mov    eax,ds:0xb2f72d75
  41a121:	adc    dl,BYTE PTR [ecx+ebp*4+0x3c]
  41a125:	repz or DWORD PTR ss:[edx+0x4c86014d],ecx
  41a12d:	(bad)  
  41a12e:	call   0x141d:0x2c7722f9
  41a135:	jne    0x41a0eb
  41a137:	adc    ah,bl
  41a139:	data16 mov dl,0xdd
  41a13c:	mov    ch,BYTE PTR [ecx]
  41a13e:	bound  ecx,QWORD PTR [ebp-0x6d]
  41a141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a142:	popa   
  41a143:	mov    al,ds:0x23d91442
  41a148:	adc    eax,0xd78f4a0
  41a14d:	inc    ebp
  41a14e:	mov    edi,0x34926d00
  41a153:	sahf   
  41a154:	nop
  41a155:	adc    edx,DWORD PTR [edx]
  41a157:	rcl    DWORD PTR [ecx+0x10],cl
  41a15a:	cmp    eax,0x38d0b17d
  41a15f:	xchg   BYTE PTR [esi-0x6e],bh
  41a162:	sar    DWORD PTR [edx+0x2d902f96],1
  41a168:	test   eax,0x5f4f0e5a
  41a16d:	pop    eax
  41a16e:	(bad)  
  41a170:	add    eax,0x9e5b5464
  41a175:	fcom   DWORD PTR [esi+eax*1-0x44c6dc86]
  41a17c:	ficom  DWORD PTR [ebp-0x3b35de87]
  41a182:	repz fsubr DWORD PTR [ebp+eax*4-0x22]
  41a187:	push   ds
  41a188:	mov    dl,BYTE PTR [eax-0x18]
  41a18b:	mov    esi,0x6b117938
  41a190:	fcmovnu st,st(0)
  41a192:	pop    edx
  41a193:	or     dl,BYTE PTR [eax-0x16]
  41a196:	(bad)  
  41a197:	cmp    edx,DWORD PTR [edi]
  41a199:	or     DWORD PTR [edx+edx*2-0x83f2dce],esp
  41a1a0:	or     al,0xd0
  41a1a2:	repnz idiv DWORD PTR [ebx+edi*4+0x73]
  41a1a7:	mov    ss,WORD PTR [esi]
  41a1a9:	inc    ebp
  41a1aa:	lods   eax,DWORD PTR ds:[esi]
  41a1ab:	(bad)  
  41a1ad:	fadd   DWORD PTR [ebp-0x39]
  41a1b0:	pop    edi
  41a1b1:	sbb    eax,0x4bffb4b4
  41a1b6:	outs   dx,DWORD PTR ds:[esi]
  41a1b7:	dec    ecx
  41a1b8:	ret    0xc266
  41a1bb:	daa    
  41a1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1be:	iret   
  41a1bf:	ds xor ch,0x22
  41a1c3:	inc    ecx
  41a1c4:	sbb    edi,DWORD PTR [eax-0x1b]
  41a1c7:	jbe    0x41a1b6
  41a1c9:	or     al,0x50
  41a1cb:	dec    esi
  41a1cc:	lock outs dx,DWORD PTR ds:[esi]
  41a1ce:	xchg   esp,eax
  41a1cf:	mov    ebp,0xd82a8e9c
  41a1d4:	and    ch,0xbe
  41a1d7:	test   WORD PTR [ebx-0x22e2af8e],cx
  41a1de:	ret    
  41a1df:	das    
  41a1e0:	popf   
  41a1e1:	pop    ebx
  41a1e2:	cmp    DWORD PTR [edi+0x1b56707f],ecx
  41a1e8:	xor    al,bh
  41a1ea:	jae    0x41a224
  41a1ec:	stos   DWORD PTR es:[edi],eax
  41a1ed:	inc    ebp
  41a1ee:	jge    0x41a19a
  41a1f0:	mov    ss,ebp
  41a1f2:	imul   ebx,ebx,0x7fc43ac8
  41a1f8:	xor    dh,bh
  41a1fa:	into   
  41a1fb:	repz sbb cl,al
  41a1fe:	jecxz  0x41a19c
  41a200:	(bad)  
  41a201:	repz sub ah,BYTE PTR [ecx+0x43]
  41a205:	test   al,0x3d
  41a207:	das    
  41a208:	push   es
  41a209:	and    BYTE PTR [edx-0x464e3079],0x41
  41a210:	pusha  
  41a211:	push   ecx
  41a212:	ja     0x41a1a3
  41a214:	fcmovb st,st(7)
  41a216:	inc    esi
  41a217:	cwde   
  41a218:	outs   dx,DWORD PTR ds:[esi]
  41a219:	sub    DWORD PTR [esi+0x401f81],eax
  41a21f:	add    BYTE PTR [eax],al
  41a221:	add    BYTE PTR [eax],bl
  41a223:	push   ebp
  41a224:	push   cs
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs or  dh,al
  41a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a231:	jg     0x41a1f8
  41a233:	push   ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	hlt    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [edx-0x20c6c4b8],cl
  41a23f:	inc    edi
  41a240:	data16 jnp 0x41a208
  41a243:	and    al,0xfc
  41a245:	aas    
  41a246:	sub    ah,BYTE PTR [edx]
  41a248:	jo     0x41a2c2
  41a24a:	push   eax
  41a24b:	jns    0x41a1f9
  41a24d:	xchg   ecx,eax
  41a24e:	xchg   esp,eax
  41a24f:	fisubr WORD PTR [ecx]
  41a251:	adc    BYTE PTR [ebx],al
  41a253:	adc    DWORD PTR [eax-0x6ada421b],esp
  41a259:	adc    DWORD PTR [edx-0x5a],eax
  41a25c:	add    ecx,DWORD PTR [bp+di-0xdfb]
  41a261:	cmp    BYTE PTR [esi],bh
  41a263:	std    
  41a264:	mov    ch,0xbe
  41a266:	or     eax,0x530cf752
  41a26b:	add    BYTE PTR [eax+ecx*4],0x3c
  41a26f:	ins    DWORD PTR es:[edi],dx
  41a270:	xlat   BYTE PTR ds:[ebx]
  41a271:	pop    ebp
  41a272:	addr16 mov ah,0xb8
  41a275:	por    mm7,QWORD PTR [edx-0x2c]
  41a279:	out    0x36,al
  41a27b:	pop    ebp
  41a27c:	mov    ecx,ecx
  41a27e:	add    eax,0x21de1f29
  41a283:	retf   0x93a6
  41a286:	cmp    ebx,DWORD PTR [edx]
  41a288:	jno    0x41a283
  41a28a:	ret    0x884
  41a28d:	jae    0x41a2ca
  41a28f:	add    eax,0xf07f7860
  41a294:	cld    
  41a295:	mov    ds:0xda821c9c,al
  41a29a:	xor    BYTE PTR [edi],bh
  41a29c:	jecxz  0x41a23d
  41a29e:	sbb    al,BYTE PTR ds:0xcf9a9e8f
  41a2a4:	xor    DWORD PTR [esi],ebp
  41a2a6:	dec    ebp
  41a2a7:	mov    edi,edx
  41a2a9:	pusha  
  41a2aa:	fnstcw WORD PTR [ebx-0x7f]
  41a2ad:	in     eax,0x3d
  41a2af:	dec    eax
  41a2b0:	jne    0x41a256
  41a2b2:	bound  edi,QWORD PTR [ebx+ebp*1+0x47]
  41a2b6:	mov    esi,0x554184ab
  41a2bb:	jmp    0x41a25a
  41a2bd:	add    bh,BYTE PTR [ecx]
  41a2bf:	sub    BYTE PTR [edx],bl
  41a2c1:	push   ss
  41a2c2:	rcl    DWORD PTR [ecx+eax*8-0x3f2a274e],1
  41a2c9:	jmp    0x5d80:0x4179100c
  41a2d0:	test   DWORD PTR [esi+edx*2+0xb],eax
  41a2d4:	test   BYTE PTR [ecx+esi*1+0x8],ch
  41a2d8:	data16 rol BYTE PTR [edx-0x1d],0x7d
  41a2dd:	mov    ds:0xe6017769,eax
  41a2e2:	arpl   bx,bx
  41a2e4:	das    
  41a2e5:	daa    
  41a2e6:	jmp    0x41a273
  41a2e8:	sti    
  41a2e9:	aaa    
  41a2ea:	inc    DWORD PTR [ebx-0x55]
  41a2ed:	iret   
  41a2ee:	das    
  41a2ef:	je     0x41a287
  41a2f1:	stc    
  41a2f2:	push   0x7a
  41a2f4:	ss inc esi
  41a2f6:	in     eax,dx
  41a2f7:	cdq    
  41a2f8:	scas   al,BYTE PTR es:[edi]
  41a2f9:	pushf  
  41a2fa:	out    0xed,eax
  41a2fc:	fstp   DWORD PTR [ebp+0x5e]
  41a2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a300:	sbb    al,0x15
  41a302:	and    ah,dh
  41a304:	push   es
  41a305:	xchg   ecx,eax
  41a306:	(bad)  
  41a307:	push   ebx
  41a308:	pop    edx
  41a309:	popa   
  41a30a:	dec    edi
  41a30b:	hlt    
  41a30c:	or     eax,0x8f1a8bca
  41a311:	mov    edi,0xc591e31b
  41a316:	pop    esp
  41a317:	rol    BYTE PTR [ebx],1
  41a319:	jle    0x41a2f7
  41a31b:	sub    dl,BYTE PTR [edi]
  41a31d:	fcomp  DWORD PTR [edx+0x11]
  41a320:	fidiv  DWORD PTR [eax-0xb]
  41a323:	mov    cl,0x48
  41a325:	in     al,0x64
  41a327:	mov    cl,0xdb
  41a329:	sub    dh,0x30
  41a32c:	fwait
  41a32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a32e:	jge    0x41a2fb
  41a330:	jb     0x41a326
  41a332:	jns    0x41a31a
  41a334:	pop    ds
  41a335:	in     al,0xe3
  41a337:	push   esi
  41a338:	mov    bh,0xf7
  41a33a:	pop    ss
  41a33b:	daa    
  41a33c:	jge    0x41a316
  41a33e:	mov    ecx,0x39296400
  41a343:	add    edx,DWORD PTR [ecx-0x50]
  41a346:	jno    0x41a34e
  41a348:	add    ah,BYTE PTR [edx+0x19d0450c]
  41a34e:	sbb    ebp,DWORD PTR [eax-0x37]
  41a351:	jbe    0x41a349
  41a353:	inc    edx
  41a354:	jns    0x41a367
  41a356:	add    ebx,eax
  41a358:	cmc    
  41a359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a35a:	add    ebx,esi
  41a35c:	mov    dl,0xbd
  41a35e:	pop    edx
  41a35f:	and    DWORD PTR [edi],ebp
  41a361:	jnp    0x41a2ea
  41a363:	pop    edi
  41a364:	and    al,0x8a
  41a366:	adc    al,0x8b
  41a368:	xor    al,0x1c
  41a36a:	mov    edi,0xd6183904
  41a36f:	inc    ebx
  41a370:	pop    eax
  41a371:	inc    ecx
  41a372:	out    0x76,al
  41a374:	sub    BYTE PTR [ecx+0x5009fdc7],ch
  41a37a:	and    DWORD PTR [edi+0x2f],ebx
  41a37d:	imul   ebx,DWORD PTR [edi+0x6e1db5b6],0xe10eb43f
  41a387:	fs dec esi
  41a389:	cmp    eax,0x500070a6
  41a38e:	dec    eax
  41a38f:	inc    ebp
  41a390:	sbb    al,ch
  41a392:	jmp    0xfff5:0xffb25cbd
  41a399:	push   es
  41a39a:	dec    ebx
  41a39b:	or     cl,BYTE PTR [edi-0x2e1ecb89]
  41a3a1:	inc    edi
  41a3a2:	cli    
  41a3a3:	out    0x25,al
  41a3a5:	push   cs
  41a3a6:	pop    es
  41a3a7:	cld    
  41a3a8:	ds repnz icebp 
  41a3ab:	sahf   
  41a3ac:	sti    
  41a3ad:	out    0xfc,al
  41a3af:	or     ebp,DWORD PTR [ecx+0x3e3be57a]
  41a3b5:	mov    cl,0xe4
  41a3b7:	addr16 std 
  41a3b9:	sub    bh,BYTE PTR [edi]
  41a3bb:	stos   BYTE PTR es:[edi],al
  41a3bc:	mov    DWORD PTR [edi-0x22],esi
  41a3bf:	cmp    eax,0xec7cabb5
  41a3c4:	(bad)  
  41a3c6:	or     edx,ecx
  41a3c8:	adc    BYTE PTR [ebx],dl
  41a3ca:	and    dl,BYTE PTR [ebp+ecx*2-0x2d]
  41a3ce:	cli    
  41a3cf:	aaa    
  41a3d0:	sub    DWORD PTR [edi],esp
  41a3d2:	arpl   bp,cx
  41a3d4:	inc    ecx
  41a3d5:	inc    esp
  41a3d6:	shr    BYTE PTR [eax-0x26],0x3d
  41a3da:	lock inc edi
  41a3dc:	int3   
  41a3dd:	lock repnz (bad) 
  41a3e0:	out    0x92,al
  41a3e2:	out    0xa7,al
  41a3e4:	add    BYTE PTR [esi],dl
  41a3e6:	inc    eax
  41a3e7:	add    al,0x62
  41a3e9:	(bad)  
  41a3ea:	cmp    ecx,DWORD PTR [eax+0x4c992f9]
  41a3f0:	push   ecx
  41a3f1:	retf   0x59ac
  41a3f4:	mov    ch,0x21
  41a3f6:	loope  0x41a3c2
  41a3f8:	or     BYTE PTR [ebx],cl
  41a3fa:	test   BYTE PTR [ebp+0x43],ah
  41a3fd:	push   ebx
  41a3fe:	and    ebx,DWORD PTR [edi+0x4fd9e79b]
  41a404:	je     0x41a44c
  41a406:	adc    BYTE PTR [esi+0x34],bl
  41a409:	push   0xc7e6fe03
  41a40e:	mov    ds:0xe9153042,al
  41a413:	repnz into 
  41a415:	xor    eax,0x2647cfb0
  41a41a:	rcr    ah,cl
  41a41c:	lea    edi,[ebx+eiz*2]
  41a41f:	neg    DWORD PTR [ebp+edx*1-0x79a6ab60]
  41a426:	sbb    eax,0x32e16e92
  41a42b:	mov    dl,0xe4
  41a42d:	pop    edx
  41a42e:	sbb    eax,0xa08c4da9
  41a433:	mov    bl,cl
  41a435:	sar    BYTE PTR [esp+esi*2-0x64],0x7b
  41a43a:	enter  0xf7c5,0x5f
  41a43e:	xor    al,0x14
  41a440:	pushf  
  41a441:	imul   ebx,DWORD PTR [ecx+0x4e9d0647],0x6bfe21bc
  41a44b:	(bad)  
  41a44c:	arpl   WORD PTR [ecx+0x540f9bbf],si
  41a452:	jb     0x41a473
  41a454:	scas   eax,DWORD PTR es:[edi]
  41a455:	sbb    al,0xea
  41a457:	xor    BYTE PTR [esi-0x2b],bl
  41a45a:	dec    edx
  41a45b:	mov    dh,0xdf
  41a45d:	dec    edx
  41a45e:	iret   
  41a45f:	jl     0x41a3f7
  41a461:	test   ah,ah
  41a463:	aas    
  41a464:	sub    al,0xd7
  41a466:	aaa    
  41a467:	outs   dx,DWORD PTR ds:[esi]
  41a468:	lods   ax,WORD PTR ds:[esi]
  41a46a:	fbstp  TBYTE PTR [edi+0x7a]
  41a46d:	xchg   esi,eax
  41a46e:	dec    edx
  41a46f:	gs retf 
  41a471:	xchg   esp,eax
  41a472:	ret    
  41a473:	xchg   edi,eax
  41a475:	add    al,0xc3
  41a477:	aas    
  41a478:	pop    eax
  41a479:	jnp    0x41a428
  41a47b:	daa    
  41a47c:	enter  0x2abe,0xc
  41a480:	cld    
  41a481:	aam    0x57
  41a483:	mov    al,ds:0x6dd2e2f3
  41a488:	and    ecx,DWORD PTR [ebp+0x4c]
  41a48b:	push   0x67
  41a48d:	test   DWORD PTR [esi+0x41],edx
  41a490:	jae    0x41a4b8
  41a492:	xchg   esp,eax
  41a493:	aas    
  41a494:	popa   
  41a495:	out    dx,al
  41a496:	inc    eax
  41a497:	nop
  41a498:	adc    ah,BYTE PTR [ebp+0x738adf7b]
  41a49e:	bound  eax,QWORD PTR [esi+0x7c]
  41a4a1:	mov    edi,0xc0e3dac7
  41a4a6:	mov    esi,0xb8e334ca
  41a4ab:	jg     0x41a488
  41a4ad:	addr16 mov bh,0x1d
  41a4b0:	push   ebx
  41a4b1:	int    0xd3
  41a4b3:	pop    ecx
  41a4b4:	xlat   BYTE PTR ds:[ebx]
  41a4b5:	xor    ecx,DWORD PTR [edi]
  41a4b7:	and    ah,dh
  41a4b9:	not    DWORD PTR [edi+ecx*1]
  41a4bc:	inc    edx
  41a4bd:	lods   eax,DWORD PTR ds:[esi]
  41a4be:	(bad)  
  41a4bf:	in     eax,dx
  41a4c0:	lahf   
  41a4c1:	jecxz  0x41a495
  41a4c3:	mov    bh,0xa6
  41a4c5:	mov    esi,0x8f582611
  41a4ca:	addr16 lahf 
  41a4cc:	sub    bl,BYTE PTR [edx-0x3e]
  41a4cf:	xchg   edi,eax
  41a4d0:	mov    ah,0xce
  41a4d2:	and    edi,DWORD PTR [ebx+0x27906e62]
  41a4d8:	and    bh,ch
  41a4da:	les    edx,FWORD PTR ds:[eax]
  41a4dd:	scas   al,BYTE PTR es:[edi]
  41a4de:	jnp    0x41a4e8
  41a4e0:	mov    al,ds:0x3b8471b2
  41a4e5:	add    cl,dh
  41a4e7:	sbb    bl,BYTE PTR [edx]
  41a4e9:	ins    BYTE PTR es:[edi],dx
  41a4ea:	adc    DWORD PTR [edx],0x5de3ff25
  41a4f0:	gs loopne 0x41a4ed
  41a4f3:	inc    ebp
  41a4f4:	call   0x9485:0xeb9c585f
  41a4fb:	(bad)  
  41a4fc:	fnstsw WORD PTR [edx+edx*1+0x347514a8]
  41a503:	ins    DWORD PTR es:[edi],dx
  41a504:	mov    al,ds:0x3c49e72f
  41a509:	dec    ebp
  41a50a:	xchg   ecx,eax
  41a50b:	pop    es
  41a50c:	sub    bl,BYTE PTR [ebx-0x35]
  41a50f:	xchg   ecx,eax
  41a510:	pop    eax
  41a511:	mov    cl,0x3a
  41a513:	push   eax
  41a514:	and    DWORD PTR [edx-0x5b],edi
  41a517:	mul    DWORD PTR [ebp-0x1a]
  41a51a:	scas   al,BYTE PTR es:[edi]
  41a51b:	ja     0x41a4bc
  41a51d:	loopne 0x41a579
  41a51f:	adc    eax,0xc3277809
  41a524:	jmp    0xb149eda3
  41a529:	pop    eax
  41a52a:	test   al,0x1
  41a52c:	gs jmp FWORD PTR ds:[edi+eax*1+0x619b06c3]
  41a535:	jmp    0xd014:0xe914030a
  41a53c:	ins    DWORD PTR es:[edi],dx
  41a53d:	(bad)  
  41a53e:	test   eax,0xfd687601
  41a543:	mov    ecx,0xbcd720c3
  41a548:	pop    ds
  41a549:	ror    BYTE PTR [esi+0x51cbd9c6],1
  41a54f:	xor    ebx,DWORD PTR [edx+0xa257bb6]
  41a555:	mov    cl,0x61
  41a557:	jp     0x41a548
  41a559:	jnp    0x41a4e2
  41a55b:	mov    esp,0x97f6b16e
  41a560:	or     ah,BYTE PTR [ebp-0x46249ba7]
  41a566:	jmp    0x41a51b
  41a568:	inc    ebx
  41a569:	jne    0x41a5a5
  41a56b:	xchg   ecx,eax
  41a56c:	lahf   
  41a56d:	pop    ss
  41a56e:	and    cl,bh
  41a570:	xor    dl,BYTE PTR [edx]
  41a572:	fcom   QWORD PTR [eax+ebp*4-0x74]
  41a576:	imul   edi,DWORD PTR [ebx],0xb07b3712
  41a57c:	call   0xbbdac3a7
  41a581:	mov    ch,0x2b
  41a583:	jnp    0x41a5db
  41a585:	ins    DWORD PTR es:[edi],dx
  41a586:	or     eax,0x2f745033
  41a58b:	test   al,0x47
  41a58d:	mov    esi,0x1bab04b2
  41a592:	mov    ah,0x6e
  41a594:	mov    ds:0xb8a064aa,al
  41a599:	dec    edi
  41a59a:	ret    
  41a59b:	inc    ecx
  41a59c:	sar    DWORD PTR [edi-0x2998d2c3],0xce
  41a5a3:	cmp    edi,DWORD PTR [ebp+0x2223786c]
  41a5a9:	retf   0x6f91
  41a5ac:	sbb    eax,0x9c4c4f6
  41a5b1:	ja     0x41a54e
  41a5b3:	xchg   esi,eax
  41a5b4:	into   
  41a5b5:	loop   0x41a5aa
  41a5b7:	cwde   
  41a5b8:	icebp  
  41a5b9:	and    esi,DWORD PTR [ecx]
  41a5bb:	out    0x3f,al
  41a5bd:	jns    0x41a634
  41a5bf:	nop
  41a5c0:	and    DWORD PTR [eax-0x3d],ecx
  41a5c3:	adc    DWORD PTR [ebx-0x5d],esi
  41a5c6:	ror    BYTE PTR [edx+0x26],cl
  41a5c9:	sti    
  41a5ca:	inc    eax
  41a5cb:	xchg   ebp,eax
  41a5cc:	or     eax,0x4d1ec638
  41a5d1:	fadd   DWORD PTR [esi+0x3d]
  41a5d4:	(bad)  
  41a5d5:	jle    0x41a5c5
  41a5d7:	fisub  WORD PTR [ebp+0x6febba7e]
  41a5dd:	sti    
  41a5de:	jne    0x41a654
  41a5e0:	leave  
  41a5e1:	into   
  41a5e2:	mov    fs,WORD PTR [eax+edx*4+0x19]
  41a5e6:	mov    dl,0x74
  41a5e8:	mov    eax,ds:0x30f4d423
  41a5ed:	popa   
  41a5ee:	mov    ebp,0xd2c81b31
  41a5f3:	loop   0x41a5f0
  41a5f5:	inc    esi
  41a5f6:	aad    0x99
  41a5f8:	sar    BYTE PTR [ebp-0x6c],cl
  41a5fb:	fnstcw WORD PTR [bp+di]
  41a5fe:	xor    eax,0x5282fb63
  41a603:	inc    edi
  41a604:	clc    
  41a605:	xor    al,0x81
  41a607:	mov    esi,0x16451db4
  41a60c:	mov    bh,BYTE PTR [ecx+0x20]
  41a60f:	(bad)  
  41a610:	aad    0xdd
  41a612:	jno    0x41a642
  41a614:	(bad)  
  41a616:	pop    ebx
  41a617:	mov    ds:0xc49f4b48,al
  41a61c:	shl    BYTE PTR [ecx+0xf],0xaf
  41a620:	xor    bh,BYTE PTR [edx+0x7ff7d8b1]
  41a626:	mov    esi,0x79d9cca0
  41a62b:	call   0x3180:0x24e92ae2
  41a632:	add    eax,0x5d6334a9
  41a637:	cmp    BYTE PTR [ecx+eiz*2-0x1e],cl
  41a63b:	mov    edi,0xa06c7e86
  41a640:	call   0x6ce395ae
  41a645:	push   esi
  41a646:	jge    0x41a612
  41a648:	fwait
  41a649:	sti    
  41a64a:	inc    edx
  41a64b:	mov    BYTE PTR [eax+0x2f],ah
  41a64e:	mov    ebx,0xc4087f57
  41a653:	mov    esi,0x360b8fd6
  41a658:	mov    edx,0xa2433b6b
  41a65d:	push   esp
  41a65e:	repnz sbb BYTE PTR [eax],cl
  41a661:	fdiv   QWORD PTR [ebx-0x2a]
  41a664:	je     0x41a63e
  41a666:	push   esi
  41a667:	or     BYTE PTR [edi+0xb],al
  41a66a:	pop    es
  41a66b:	push   edi
  41a66c:	arpl   cx,di
  41a66e:	in     al,dx
  41a66f:	out    0x2,al
  41a671:	push   eax
  41a672:	test   al,0x96
  41a674:	in     al,0x2c
  41a676:	or     al,0x9a
  41a678:	inc    edi
  41a679:	cmp    BYTE PTR [eax],al
  41a67b:	aam    0xd2
  41a67d:	adc    DWORD PTR [edx+0x4c382374],esi
  41a683:	les    edx,FWORD PTR [edx]
  41a685:	daa    
  41a686:	call   0xec79:0x798dfd24
  41a68d:	jmp    0x7c184a42
  41a692:	push   ebx
  41a693:	rcl    BYTE PTR [esi-0x2a471048],0x7
  41a69a:	repnz pop esp
  41a69c:	dec    esp
  41a69d:	sub    ch,BYTE PTR [edx+0x39]
  41a6a0:	mov    ecx,DWORD PTR [edx]
  41a6a2:	iret   
  41a6a3:	mov    al,ds:0x222bfdbf
  41a6a8:	lock jbe 0x41a6b0
  41a6ab:	mov    esp,0x9e235cb1
  41a6b0:	mov    edx,0x17eade42
  41a6b5:	or     ecx,DWORD PTR [eax-0x6d]
  41a6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6b9:	popa   
  41a6ba:	mov    DWORD PTR [ebx+ebx*2],ebp
  41a6bd:	popa   
  41a6be:	xor    al,0x90
  41a6c0:	jmp    0x4c2c4031
  41a6c5:	je     0x41a72b
  41a6c7:	mov    dl,0xee
  41a6c9:	push   0x3c
  41a6cb:	push   es
  41a6cc:	or     BYTE PTR [ebx+0x3b401fa5],dl
  41a6d2:	pop    ebp
  41a6d3:	(bad)  
  41a6d4:	in     al,0xda
  41a6d6:	loope  0x41a709
  41a6d8:	push   edi
  41a6d9:	push   es
  41a6da:	adc    bl,BYTE PTR [edi+0x475e24f8]
  41a6e0:	and    bl,0xf6
  41a6e3:	mov    bh,0x38
  41a6e5:	repz jp 0x41a6e0
  41a6e8:	push   edi
  41a6e9:	push   ss
  41a6ea:	jmp    0x1405:0x44d10314
  41a6f1:	adc    al,BYTE PTR [ecx+edi*4]
  41a6f4:	pop    ecx
  41a6f5:	fstp   QWORD PTR [edx]
  41a6f7:	sahf   
  41a6f8:	mov    cl,0xf4
  41a6fa:	nop
  41a6fb:	jbe    0x41a722
  41a6fd:	mov    ds:0x4a6c6bc4,al
  41a702:	sub    bh,BYTE PTR [ebx]
  41a704:	mov    dh,0x56
  41a706:	pop    esi
  41a707:	lods   al,BYTE PTR ds:[esi]
  41a708:	sub    dh,dl
  41a70a:	jecxz  0x41a76e
  41a70c:	jge    0x41a759
  41a70e:	or     BYTE PTR [eax-0x2fe54952],ch
  41a714:	jg     0x41a746
  41a716:	mov    ecx,0xeffb2e19
  41a71b:	jb     0x41a76c
  41a71d:	fwait
  41a71e:	xchg   edx,eax
  41a71f:	icebp  
  41a720:	xchg   DWORD PTR [ecx],esp
  41a722:	jbe    0x41a6fb
  41a724:	call   0x4f80262e
  41a729:	dec    ebp
  41a72a:	xor    esi,ecx
  41a72c:	outs   dx,DWORD PTR ds:[esi]
  41a72d:	push   ss
  41a72e:	add    BYTE PTR [eax],al
  41a730:	add    BYTE PTR [eax],al
  41a732:	dec    esi
  41a733:	outs   dx,DWORD PTR ds:[esi]
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	inc    ebx
  41a73f:	xchg   esp,eax
  41a740:	and    DWORD PTR [ebx+0x123b9],0xfffffff4
  41a747:	add    al,0x0
  41a749:	add    dl,cl
  41a74b:	fdiv   QWORD PTR [eax]
  41a74d:	pop    edi
  41a74f:	cmp    DWORD PTR [esp+edi*1-0x19b82d33],0x75b55c63
  41a75a:	icebp  
  41a75b:	inc    ebp
  41a75c:	into   
  41a75d:	xchg   esi,eax
  41a75e:	and    bl,cl
  41a760:	mov    esp,0x7206603
  41a765:	adc    al,0x81
  41a767:	(bad)  
  41a768:	(bad)  
  41a769:	jmp    0xb1a4:0x3ea7598e
  41a770:	dec    BYTE PTR [esi]
  41a772:	cld    
  41a773:	add    esp,DWORD PTR [ecx+0xf179256]
  41a779:	stos   BYTE PTR es:[edi],al
  41a77a:	push   0x35e4d04b
  41a77f:	or     al,0x63
  41a781:	mov    fs,WORD PTR [esi+0x37]
  41a784:	xchg   DWORD PTR [ebx-0x3cb02518],edx
  41a78a:	fcomip st,st(2)
  41a78c:	rcr    BYTE PTR [ecx+0x7e15105],0x11
  41a793:	jmp    FWORD PTR [eax+edx*8-0x77]
  41a797:	hlt    
  41a798:	jecxz  0x41a78c
  41a79a:	iret   
  41a79b:	adc    ecx,DWORD PTR [edi]
  41a79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a79e:	cmp    al,0x2c
  41a7a0:	popa   
  41a7a1:	mov    BYTE PTR [ebx-0x7c1faab2],0x4c
  41a7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7a9:	test   BYTE PTR [ebp+0x69a1498d],ah
  41a7af:	lahf   
  41a7b0:	jbe    0x41a7c3
  41a7b2:	push   cs
  41a7b3:	xor    ecx,ebx
  41a7b5:	jno    0x41a7b5
  41a7b7:	and    al,0xc3
  41a7b9:	xor    ebx,DWORD PTR [edx+edi*8+0x5a]
  41a7bd:	sbb    al,0x3f
  41a7bf:	inc    esp
  41a7c0:	test   al,0x7d
  41a7c2:	out    0x4f,al
  41a7c4:	outs   dx,DWORD PTR ds:[esi]
  41a7c5:	std    
  41a7c6:	add    eax,0x7a30e783
  41a7cb:	shl    BYTE PTR [edi+ebp*1+0x52806a81],cl
  41a7d2:	in     al,dx
  41a7d3:	loop   0x41a7ef
  41a7d5:	imul   ebp,DWORD PTR [esi-0x65],0x896d6906
  41a7dc:	push   cs
  41a7dd:	rcl    cl,cl
  41a7df:	sub    DWORD PTR es:[ecx+0x2bb2d1d5],eax
  41a7e6:	sub    DWORD PTR [ebp+0x785e90c5],0xffffffe9
  41a7ed:	ror    dh,cl
  41a7ef:	lahf   
  41a7f0:	xchg   edx,eax
  41a7f1:	call   0x86a63283
  41a7f6:	jnp    0x41a79f
  41a7f8:	mov    ecx,0x9144fc6f
  41a7fd:	pusha  
  41a7fe:	les    edx,FWORD PTR [ecx-0x2e35e56e]
  41a804:	inc    ebp
  41a805:	mov    bh,0x63
  41a807:	mov    ebx,0xbe315a48
  41a80c:	add    BYTE PTR [eax-0x19],cl
  41a80f:	daa    
  41a810:	out    dx,eax
  41a811:	xor    edx,DWORD PTR [ecx-0x454c6a7d]
  41a817:	clc    
  41a818:	cld    
  41a819:	push   edi
  41a81a:	add    al,BYTE PTR ds:0x3f73c36c
  41a820:	call   0xc5cf:0xaffff1de
  41a827:	fnsave [ecx-0x1a]
  41a82a:	inc    edi
  41a82b:	stos   DWORD PTR es:[edi],eax
  41a82c:	les    ebx,FWORD PTR [eax]
  41a82e:	adc    ecx,DWORD PTR [esi]
  41a830:	mov    dh,0xc
  41a832:	fcomp  QWORD PTR [eax+0x378bde26]
  41a838:	fmul   QWORD PTR [eax+edi*8+0x76]
  41a83c:	scas   eax,DWORD PTR es:[edi]
  41a83d:	sub    al,BYTE PTR [edx-0x17dcff5]
  41a843:	gs jecxz 0x41a839
  41a846:	adc    eax,0x9bd06cc8
  41a84b:	mov    ecx,0x9e34c50a
  41a850:	pop    ebx
  41a851:	jecxz  0x41a8a9
  41a853:	test   DWORD PTR [ecx-0x6e],esi
  41a856:	mov    BYTE PTR [ebp+0x4abc3c3c],dh
  41a85c:	retf   0x17c6
  41a85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a860:	pushf  
  41a861:	and    ecx,eax
  41a863:	fwait
  41a864:	xchg   DWORD PTR [ecx-0x57a7bca0],ebp
  41a86a:	cmp    edi,DWORD PTR [eax+0x1529178b]
  41a870:	or     DWORD PTR [ecx],esi
  41a872:	pusha  
  41a873:	xor    ebp,esi
  41a875:	popf   
  41a876:	mov    bl,0x37
  41a878:	test   DWORD PTR [edi+0x5],eax
  41a87b:	pop    eax
  41a87c:	push   0xffffffe8
  41a87e:	aas    
  41a87f:	mov    DWORD PTR [eax-0x24d6ccca],ecx
  41a885:	or     al,0x9c
  41a887:	leave  
  41a888:	cmp    al,ch
  41a88a:	xchg   ebp,eax
  41a88b:	or     cl,ah
  41a88d:	popf   
  41a88e:	js     0x41a86d
  41a890:	(bad)  
  41a891:	cmp    DWORD PTR [ecx],edx
  41a893:	mov    esp,0xb76e458d
  41a898:	jno    0x41a8af
  41a89a:	(bad)  
  41a89c:	xchg   ebx,eax
  41a89d:	xor    BYTE PTR [edx],dl
  41a89f:	push   esp
  41a8a0:	jge    0x41a8ea
  41a8a2:	fimul  DWORD PTR [edx-0x2bdcf2e]
  41a8a8:	xabort 0x30
  41a8ab:	xor    eax,0x8c743300
  41a8b0:	mov    bh,0x3f
  41a8b2:	lock test al,0xa
  41a8b5:	out    dx,al
  41a8b6:	sbb    al,BYTE PTR [esi-0x4fc4a6cb]
  41a8bc:	adc    DWORD PTR [ebp+0x2b77dcb9],eax
  41a8c2:	shl    BYTE PTR [ebp-0x6d0eaa45],cl
  41a8c8:	int    0xe1
  41a8ca:	imul   ebx,DWORD PTR [eax],0x6287a2b0
  41a8d0:	sub    BYTE PTR [edi+0x7b],dl
  41a8d3:	push   ebx
  41a8d4:	mov    bl,0x4d
  41a8d6:	mov    bl,0x45
  41a8d8:	test   BYTE PTR [edi],bl
  41a8da:	pop    ss
  41a8db:	cli    
  41a8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8dd:	xor    ebp,DWORD PTR [esi]
  41a8df:	fld    QWORD PTR [edx]
  41a8e1:	pop    edi
  41a8e2:	in     al,0x42
  41a8e4:	pop    ds
  41a8e5:	mov    ds:0xa1302f59,eax
  41a8ea:	pop    edi
  41a8eb:	add    eax,0x4fbeebdc
  41a8f0:	push   edi
  41a8f1:	xchg   ebx,eax
  41a8f2:	(bad)  
  41a8f3:	aam    0xeb
  41a8f5:	and    BYTE PTR [ecx+0x28fb7f29],ah
  41a8fb:	sub    BYTE PTR [eax-0x26],0xd3
  41a8ff:	(bad)
  41a903:	scas   al,BYTE PTR es:[edi]
  41a904:	outs   dx,DWORD PTR ds:[esi]
  41a905:	cs das 
  41a907:	int3   
  41a908:	xchg   edx,eax
  41a909:	push   ebx
  41a90a:	xor    eax,0xc43ea730
  41a90f:	mov    al,0xbf
  41a911:	stc    
  41a912:	fnstcw WORD PTR [ebx+0x55c8d0b]
  41a918:	or     esp,esp
  41a91a:	sbb    ebp,esi
  41a91c:	mov    ebx,DWORD PTR [ebx+0x45c87b4b]
  41a922:	jl     0x41a98a
  41a924:	mov    esp,0x4da885c4
  41a929:	(bad)  
  41a92a:	jmp    0xc3cc73f5
  41a92f:	fnstsw WORD PTR [edx-0x37]
  41a932:	and    bl,BYTE PTR [ecx-0x5c]
  41a935:	aam    0xa2
  41a937:	mov    esp,0x2b097c96
  41a93c:	cli    
  41a93d:	or     eax,0x4de65557
  41a942:	inc    edi
  41a943:	outs   dx,DWORD PTR ds:[esi]
  41a944:	push   ebp
  41a945:	pop    esp
  41a946:	push   ebx
  41a947:	and    BYTE PTR [eax-0x2],bl
  41a94a:	ds push es
  41a94c:	enter  0x12c1,0xb9
  41a950:	iret   
  41a951:	fdiv   DWORD PTR [ebp-0x7d]
  41a954:	xor    edi,DWORD PTR [edi+ecx*2-0x77133de1]
  41a95b:	mov    dh,0x11
  41a95d:	sbb    BYTE PTR [edx],bl
  41a95f:	mov    ecx,0x68f3896e
  41a964:	jg     0x41a8ee
  41a966:	mov    eax,ds:0xd1543277
  41a96b:	and    esi,DWORD PTR [eax+eax*8+0x2b]
  41a96f:	jbe    0x41a978
  41a971:	adc    al,0x40
  41a973:	sbb    DWORD PTR [ecx-0x29],ebx
  41a976:	(bad)  
  41a977:	repnz xor ebx,DWORD PTR [esi+0x2e]
  41a97b:	mov    edi,eax
  41a97d:	xchg   edx,eax
  41a97e:	mov    esi,ecx
  41a980:	inc    ebx
  41a981:	das    
  41a982:	jno    0x41a997
  41a984:	xchg   esi,edi
  41a986:	sbb    esi,DWORD PTR [ebp+ecx*2+0xb]
  41a98a:	jns    0x41a980
  41a98c:	out    0x2b,eax
  41a98e:	mov    eax,0xf148ebca
  41a993:	mov    ds:0x7eb2f975,al
  41a998:	mov    edi,?
  41a99a:	cmp    BYTE PTR [esi+0xd],dh
  41a99d:	ret    
  41a99e:	mov    cl,BYTE PTR [edx]
  41a9a0:	cmp    DWORD PTR [eax-0x76a10765],edi
  41a9a6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a9a8:	jge    0x41a9c8
  41a9aa:	std    
  41a9ab:	dec    esi
  41a9ac:	pop    ds
  41a9ad:	xor    bh,al
  41a9af:	mov    esp,0xebb56b70
  41a9b4:	mov    edi,0xd4618118
  41a9b9:	into   
  41a9ba:	ror    BYTE PTR [ecx],0xa1
  41a9bd:	pop    esp
  41a9be:	pop    eax
  41a9bf:	and    eax,0x6f505c02
  41a9c4:	(bad)  
  41a9c5:	sbb    BYTE PTR [eax],cl
  41a9c7:	mov    ch,0xe
  41a9c9:	mov    edx,0x1d426011
  41a9ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9cf:	popf   
  41a9d0:	mov    ah,0xdb
  41a9d2:	fiadd  DWORD PTR [ebp-0x25]
  41a9d5:	shr    DWORD PTR [esi],1
  41a9d7:	cmp    eax,0x1de24429
  41a9dc:	cdq    
  41a9dd:	imul   ebx,DWORD PTR [ebp-0x7f9bff0e],0xffffff88
  41a9e4:	xchg   ecx,eax
  41a9e5:	loopne 0x41a9d6
  41a9e7:	sub    al,0xf3
  41a9e9:	xor    al,ah
  41a9eb:	jmp    0x4a2b:0x7a290df
  41a9f2:	cli    
  41a9f3:	ficom  DWORD PTR [ebx-0x1c6ce6ac]
  41a9f9:	inc    esp
  41a9fa:	es lahf 
  41a9fc:	and    al,0x32
  41a9fe:	test   DWORD PTR [edi-0x1ecb4230],ebp
  41aa04:	mov    esp,0x1a4874d1
  41aa09:	seta   BYTE PTR [edx]
  41aa0c:	mov    esi,0x2f3c418
  41aa11:	call   0xaf35:0x5ac1b7a6
  41aa18:	lods   eax,DWORD PTR ds:[esi]
  41aa19:	push   edi
  41aa1a:	loopne 0x41a9ba
  41aa1c:	xor    dh,bl
  41aa1e:	inc    edx
  41aa1f:	retf   
  41aa20:	mov    ds:0x8d2aeca,eax
  41aa25:	mov    al,ds:0x1c1e45ce
  41aa2a:	out    dx,al
  41aa2b:	sti    
  41aa2c:	dec    ebp
  41aa2d:	arpl   WORD PTR [edi+0x5d],ax
  41aa30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa31:	push   ss
  41aa32:	je     0x41aa8b
  41aa34:	jle    0x41a9e6
  41aa36:	mov    ds:0x31a136fb,eax
  41aa3b:	shl    BYTE PTR [esi-0x255bd5c1],0xa3
  41aa42:	ins    BYTE PTR es:[edi],dx
  41aa43:	out    dx,eax
  41aa44:	push   ds
  41aa45:	mov    bh,bh
  41aa47:	jno    0x41aa0f
  41aa49:	retf   
  41aa4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa4b:	dec    edx
  41aa4c:	jecxz  0x41a9e2
  41aa4e:	sbb    ch,BYTE PTR [edx-0x2c]
  41aa51:	pop    ds
  41aa52:	outs   dx,DWORD PTR ds:[esi]
  41aa53:	pop    edx
  41aa54:	pop    ds
  41aa55:	add    eax,0xbc6ecd1b
  41aa5a:	xchg   ebx,eax
  41aa5b:	in     al,0xc8
  41aa5d:	rcl    DWORD PTR [edi],0xa8
  41aa60:	aam    0x34
  41aa62:	mov    bh,0xd5
  41aa64:	dec    eax
  41aa65:	jo     0x41aa6b
  41aa67:	jp     0x41aad6
  41aa69:	sub    al,BYTE PTR [esi-0x25b4c9fa]
  41aa6f:	bound  edi,QWORD PTR [edx-0x4eab862]
  41aa75:	jmp    0x41aa1a
  41aa77:	adc    esi,DWORD PTR [edx+0x3b]
  41aa7a:	adc    BYTE PTR [eax-0x47],dl
  41aa7d:	jbe    0x41aa12
  41aa7f:	out    dx,eax
  41aa80:	xchg   esp,eax
  41aa81:	jnp    0x41aaf4
  41aa83:	jo     0x41aa41
  41aa85:	fs ins DWORD PTR es:[edi],dx
  41aa87:	jnp    0x41aa98
  41aa89:	mov    esi,0xe3dc8ab8
  41aa8e:	mov    gs,WORD PTR [esi]
  41aa90:	cmp    eax,0x239beb7
  41aa95:	mov    ecx,0xc1a2bf2c
  41aa9a:	xchg   esp,ebp
  41aa9c:	or     al,0x99
  41aa9e:	inc    ebp
  41aa9f:	push   cs
  41aaa0:	and    al,BYTE PTR [edi+0x7a]
  41aaa3:	ds out dx,al
  41aaa5:	dec    ecx
  41aaa6:	xchg   esp,eax
  41aaa7:	cs inc eax
  41aaa9:	xchg   ebp,eax
  41aaaa:	sar    BYTE PTR [eax-0x1bdf5411],cl
  41aab0:	jmp    0x1f8f03af
  41aab5:	sbb    bl,BYTE PTR [eax]
  41aab7:	jmp    0x41aaae
  41aab9:	call   0xe2ea660c
  41aabe:	cmp    BYTE PTR cs:[ebx-0x38],0x75
  41aac3:	or     edx,DWORD PTR [ecx]
  41aac5:	aad    0x2d
  41aac7:	mov    ebp,0x8c0aa28b
  41aacc:	sbb    al,0xc3
  41aace:	xchg   edx,eax
  41aacf:	fst    st(3)
  41aad1:	mov    al,BYTE PTR [ecx+0xc32647c]
  41aad7:	clc    
  41aad8:	pop    edi
  41aad9:	ret    
  41aada:	jmp    0x2c30ac0c
  41aadf:	mov    al,0x5a
  41aae1:	mov    ah,0x2b
  41aae3:	jno    0x41aa9f
  41aae5:	std    
  41aae6:	add    esp,ebp
  41aae8:	enter  0xc70e,0x52
  41aaec:	repz (bad) 
  41aaee:	or     edx,DWORD PTR [esi+eiz*1]
  41aaf1:	sbb    ecx,DWORD PTR [ecx-0x761d0119]
  41aaf7:	hlt    
  41aaf8:	adc    al,0x5d
  41aafa:	es mov bh,0x52
  41aafd:	xlat   BYTE PTR ds:[ebx]
  41aafe:	mov    ebp,0x60bd5a88
  41ab03:	jmp    0x41ab58
  41ab05:	add    dl,bl
  41ab07:	sar    BYTE PTR [ecx],1
  41ab09:	adc    BYTE PTR [ebx-0x2f0fd136],dl
  41ab0f:	popf   
  41ab10:	xchg   edi,eax
  41ab11:	int3   
  41ab12:	gs cmp esp,esi
  41ab15:	add    ah,ch
  41ab17:	xor    esi,ecx
  41ab19:	test   DWORD PTR [ebp+0x6f],eax
  41ab1c:	js     0x41ab11
  41ab1e:	jl     0x41ab07
  41ab20:	xor    al,0x9c
  41ab22:	xor    BYTE PTR [edi],0x2c
  41ab25:	hlt    
  41ab26:	jns    0x41ab43
  41ab28:	or     DWORD PTR [eax],ebx
  41ab2a:	jge    0x41ab45
  41ab2c:	pushf  
  41ab2d:	aam    0xf4
  41ab2f:	lar    ebp,cx
  41ab32:	jle    0x41ab13
  41ab34:	into   
  41ab35:	imul   eax,edi,0x7f
  41ab38:	mov    ds:0xaebbc084,eax
  41ab3d:	pop    eax
  41ab3e:	retf   0x87dc
  41ab41:	adc    ch,BYTE PTR [esi-0x25]
  41ab44:	push   ss
  41ab45:	arpl   WORD PTR [esi+0x6f],dx
  41ab48:	add    eax,0x1fec9c69
  41ab4d:	pop    edx
  41ab4e:	pop    eax
  41ab4f:	pop    eax
  41ab50:	xor    eax,0x5b6eaba8
  41ab55:	mov    edi,0xbf620dea
  41ab5a:	outs   dx,BYTE PTR ds:[esi]
  41ab5b:	cmp    ah,BYTE PTR [esi-0x5]
  41ab5e:	xchg   esi,eax
  41ab5f:	or     eax,0xd72b2b1b
  41ab64:	(bad)  
  41ab65:	adc    eax,0x717fefd2
  41ab6a:	outs   dx,BYTE PTR ds:[esi]
  41ab6b:	jecxz  0x41ab2e
  41ab6d:	mov    bh,BYTE PTR [eax+0x3ebc00d4]
  41ab73:	sbb    ebx,0xa0ba1944
  41ab79:	dec    esi
  41ab7a:	xchg   edx,eax
  41ab7b:	add    ebp,DWORD PTR [ecx-0x47fa93f]
  41ab81:	pusha  
  41ab82:	cmp    BYTE PTR [eax],0x34
  41ab85:	xor    ah,BYTE PTR [ecx]
  41ab87:	jge    0x41aba6
  41ab89:	mov    ds:0xcfd14bf8,eax
  41ab8e:	dec    ecx
  41ab8f:	inc    ebp
  41ab90:	xor    eax,0x91363f37
  41ab95:	sub    al,0xc0
  41ab97:	sub    al,0xe7
  41ab99:	sbb    DWORD PTR [ecx],edx
  41ab9b:	xchg   ebp,eax
  41ab9c:	cmp    eax,DWORD PTR [ecx-0x7a3a34c2]
  41aba2:	mov    ecx,0x1da70fd9
  41aba7:	or     BYTE PTR [edx],dh
  41aba9:	inc    edx
  41abaa:	cmp    al,0xa8
  41abac:	mov    BYTE PTR [eax-0x30],al
  41abaf:	test   BYTE PTR [esi],0xf2
  41abb2:	xchg   ebp,eax
  41abb3:	jg     0x41ac25
  41abb5:	into   
  41abb6:	jb     0x41ab46
  41abb8:	pop    ebp
  41abb9:	mov    es,WORD PTR [esi-0x34]
  41abbc:	outs   dx,BYTE PTR ds:[esi]
  41abbd:	push   ss
  41abbe:	imul   ebp,eax,0x76
  41abc1:	cs jnp 0x41ac25
  41abc4:	cli    
  41abc5:	xchg   edi,eax
  41abc6:	outs   dx,DWORD PTR ds:[esi]
  41abc7:	iret   
  41abc8:	push   esi
  41abc9:	jae    0x41abf9
  41abcb:	mov    DWORD PTR [ebp-0x54da07e9],esp
  41abd1:	cmp    bl,BYTE PTR [edi]
  41abd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd4:	push   es
  41abd5:	xor    al,0xca
  41abd7:	push   ds
  41abd8:	jmp    0x41abf2
  41abda:	xchg   esp,eax
  41abdb:	repnz das 
  41abdd:	jge    0x41ac3e
  41abdf:	std    
  41abe0:	and    al,0x2c
  41abe2:	hlt    
  41abe3:	shl    DWORD PTR ds:[eax],0x2c
  41abe7:	sbb    ah,cl
  41abe9:	ja     0x41ab9a
  41abeb:	mov    eax,ds:0x9d11af4f
  41abf0:	loop   0x41ac25
  41abf2:	outs   dx,BYTE PTR ds:[esi]
  41abf3:	clc    
  41abf4:	and    ebp,edx
  41abf6:	add    eax,0xb2a1540b
  41abfb:	add    dh,dh
  41abfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abfe:	(bad)  
  41abff:	into   
  41ac00:	repz test eax,0x1e45b47a
  41ac06:	iret   
  41ac07:	shl    BYTE PTR [edx],1
  41ac09:	adc    ah,BYTE PTR [esi]
  41ac0b:	leave  
  41ac0c:	ss dec ebp
  41ac0e:	inc    ebp
  41ac0f:	xchg   edx,eax
  41ac10:	push   esi
  41ac11:	inc    ebx
  41ac12:	inc    esp
  41ac13:	repnz sub cl,BYTE PTR [eax]
  41ac16:	mov    bl,0x3b
  41ac18:	stc    
  41ac19:	lods   al,BYTE PTR ds:[esi]
  41ac1a:	sbb    eax,0xe49017da
  41ac1f:	fisttp DWORD PTR [edx+0x42]
  41ac22:	fild   WORD PTR [ecx-0x8]
  41ac25:	idiv   BYTE PTR [ebp+0x7fe2e538]
  41ac2b:	lahf   
  41ac2c:	or     DWORD PTR [ecx+0xa],edx
  41ac2f:	pop    ebx
  41ac30:	add    ebx,DWORD PTR [edx+0x9cd84ed]
  41ac36:	repz sub cl,ah
  41ac39:	shl    BYTE PTR [ecx-0x4e],cl
  41ac3c:	imul   edi,edi,0x0
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	cmp    edi,DWORD PTR ds:0x28ad3bb7
  41ac54:	add    DWORD PTR [eax],eax
  41ac56:	hlt    
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [esi-0x6f4d0815],bl
  41ac5f:	imul   ebp,DWORD PTR [edx-0x148010ed],0xffffffa8
  41ac66:	and    BYTE PTR [ecx],ah
  41ac68:	jge    0x41ac18
  41ac6a:	push   ebp
  41ac6b:	xchg   edi,eax
  41ac6d:	sub    BYTE PTR [edx+0x3d65b9dd],0xdf
  41ac74:	pop    DWORD PTR [ebx+0x42aca33]
  41ac7a:	sub    al,0xeb
  41ac7c:	stc    
  41ac7d:	mov    ds:0xe1574adb,eax
  41ac82:	lods   eax,DWORD PTR ds:[esi]
  41ac83:	outs   dx,BYTE PTR ss:[esi]
  41ac85:	mov    bh,0xed
  41ac87:	push   cs
  41ac88:	jg     0x41ac4a
  41ac8a:	push   ss
  41ac8b:	lods   eax,DWORD PTR ds:[esi]
  41ac8c:	mov    ds:0x2069513a,eax
  41ac91:	outs   dx,DWORD PTR ds:[esi]
  41ac92:	dec    esp
  41ac93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac94:	ins    BYTE PTR es:[edi],dx
  41ac95:	sbb    al,dh
  41ac97:	fsub   QWORD PTR es:[eax]
  41ac9a:	mov    edi,0x38e52aa7
  41ac9f:	or     dl,BYTE PTR [edx+esi*1+0x0]
  41aca3:	mov    edx,0x1c3fc274
  41aca8:	xchg   esi,eax
  41aca9:	ficom  DWORD PTR [ebp+0x52]
  41acac:	pop    ecx
  41acad:	mov    bl,0xb3
  41acaf:	mov    eax,DWORD PTR [ebx-0x17]
  41acb2:	imul   edx,DWORD PTR [eax],0x5c144f71
  41acb8:	mov    ds:0xccbe8e1d,eax
  41acbd:	aad    0xec
  41acbf:	jl     0x41ad11
  41acc1:	lods   al,BYTE PTR ds:[esi]
  41acc2:	sbb    eax,0xf719bf5a
  41acc7:	xor    al,0xde
  41acc9:	retf   0xb306
  41accc:	je     0x41ad2e
  41acce:	ins    DWORD PTR es:[edi],dx
  41accf:	lods   al,BYTE PTR ds:[esi]
  41acd0:	or     al,0x85
  41acd2:	jno    0x41acce
  41acd4:	outs   dx,BYTE PTR ds:[esi]
  41acd5:	aaa    
  41acd6:	stc    
  41acd7:	daa    
  41acd8:	mov    dh,0xb7
  41acda:	std    
  41acdb:	shr    DWORD PTR [esi+0x30c16ac],1
  41ace1:	pop    es
  41ace2:	and    BYTE PTR [ebx+edi*8+0x26],al
  41ace6:	out    0xee,al
  41ace8:	in     eax,dx
  41ace9:	fs dec esp
  41aceb:	bnd jb 0x41acd2
  41acee:	rcr    BYTE PTR [ebx+0x2af7cd9d],0x81
  41acf5:	inc    ecx
  41acf6:	(bad)  
  41acf7:	jnp    0x41ad52
  41acf9:	es jae 0x41ad66
  41acfc:	push   ds
  41acfd:	(bad)  
  41acfe:	out    0xbe,eax
  41ad00:	call   FWORD PTR [edi-0x74]
  41ad03:	xor    DWORD PTR [ebp-0x7f],edx
  41ad06:	mov    bh,0xb1
  41ad08:	mov    al,0x32
  41ad0a:	ins    DWORD PTR es:[edi],dx
  41ad0b:	loopne 0x41acce
  41ad0d:	addr16 (bad) 
  41ad0f:	out    0x30,eax
  41ad11:	dec    edx
  41ad12:	lahf   
  41ad13:	outs   dx,DWORD PTR ds:[esi]
  41ad14:	neg    DWORD PTR [ecx]
  41ad16:	xlat   BYTE PTR ds:[ebx]
  41ad17:	test   al,0x55
  41ad19:	cmp    al,0xcd
  41ad1b:	inc    ecx
  41ad1c:	inc    ebp
  41ad1d:	sub    bh,BYTE PTR [ecx-0x497dcd6b]
  41ad23:	test   DWORD PTR [ebx-0x46],ecx
  41ad26:	in     eax,dx
  41ad27:	jle    0x41ad84
  41ad29:	jle    0x41ada0
  41ad2b:	clc    
  41ad2c:	imul   edx,DWORD PTR [ecx],0xc2a81d9e
  41ad32:	hlt    
  41ad33:	cmp    al,bh
  41ad35:	repz test DWORD PTR [ebp-0x30bd7bc],eax
  41ad3c:	dec    edi
  41ad3d:	xlat   BYTE PTR ds:[ebx]
  41ad3e:	or     ah,BYTE PTR [edx+esi*4-0xf]
  41ad42:	xor    BYTE PTR [edi],dh
  41ad44:	dec    ecx
  41ad45:	mov    edi,0xa5f0a838
  41ad4a:	jmp    0xcfde88af
  41ad4f:	xor    DWORD PTR [edx],ecx
  41ad51:	jle    0x41ad0f
  41ad53:	mov    cl,0x92
  41ad55:	lods   eax,DWORD PTR ds:[esi]
  41ad56:	add    esi,DWORD PTR [ecx-0x79]
  41ad59:	outs   dx,DWORD PTR ds:[esi]
  41ad5a:	xor    dh,bh
  41ad5c:	mov    esp,0xd3b23811
  41ad61:	xchg   esi,eax
  41ad62:	mov    ds:0xb635e1f1,eax
  41ad67:	jl     0x41ad7f
  41ad69:	xchg   esp,eax
  41ad6a:	dec    ecx
  41ad6b:	inc    eax
  41ad6c:	push   esi
  41ad6d:	daa    
  41ad6e:	nop
  41ad6f:	outs   dx,DWORD PTR ds:[esi]
  41ad70:	push   ecx
  41ad71:	push   ds
  41ad72:	mov    ds:0x7c543f6a,eax
  41ad77:	loopne 0x41ad84
  41ad79:	pop    ebp
  41ad7a:	(bad)  
  41ad7c:	pop    ebx
  41ad7d:	xchg   ebp,eax
  41ad7e:	div    al
  41ad80:	pop    eax
  41ad81:	test   DWORD PTR [esi-0x75a9b72e],edx
  41ad87:	sub    BYTE PTR [edi+0x64],ah
  41ad8a:	pop    edx
  41ad8b:	data16 scas al,BYTE PTR es:[edi]
  41ad8d:	loope  0x41ad38
  41ad8f:	fisubr DWORD PTR [ebx]
  41ad91:	mov    ds:0xb0fd543f,al
  41ad96:	ffreep st(4)
  41ad98:	and    bh,BYTE PTR [edi-0x7ca69dac]
  41ad9e:	or     dh,BYTE PTR [eax]
  41ada0:	clc    
  41ada1:	fs xchg esi,eax
  41ada3:	lock inc esp
  41ada5:	mov    al,0x32
  41ada7:	in     al,0x3a
  41ada9:	xor    ah,cl
  41adab:	pop    ds
  41adac:	int3   
  41adad:	outs   dx,DWORD PTR ds:[esi]
  41adae:	scas   al,BYTE PTR es:[edi]
  41adaf:	push   0xffffffb1
  41adb1:	retf   
  41adb2:	in     al,0xef
  41adb4:	pop    ds
  41adb5:	pushf  
  41adb6:	push   edx
  41adb7:	dec    edx
  41adb8:	sub    eax,0xa9aeaae4
  41adbd:	std    
  41adbe:	mov    bl,0xae
  41adc0:	mov    ecx,0x3b36ce74
  41adc5:	mov    bl,0x79
  41adc7:	lods   eax,DWORD PTR ds:[esi]
  41adc8:	add    DWORD PTR [ebp+0x3454d0d3],ebx
  41adce:	add    edx,edx
  41add0:	sbb    al,0x36
  41add2:	inc    ebx
  41add3:	stos   BYTE PTR es:[edi],al
  41add4:	sbb    DWORD PTR [esi+0x40],esi
  41add7:	mov    DWORD PTR [ebp-0x1b],edi
  41adda:	push   ebx
  41addb:	fistp  WORD PTR [esi-0x1b4b9d85]
  41ade1:	mov    eax,ds:0x8cda8d1c
  41ade6:	sub    al,0x5e
  41ade8:	std    
  41ade9:	mov    esp,0xea4ed9f2
  41adee:	or     esi,DWORD PTR [esi+eiz*8]
  41adf1:	and    BYTE PTR [edi+ebp*8+0x5d],dh
  41adf5:	push   edi
  41adf6:	mov    ?,ebx
  41adf8:	pop    eax
  41adf9:	(bad)  
  41adfa:	push   esp
  41adfb:	jp     0x41adea
  41adfd:	or     BYTE PTR [eax+eax*2-0x32802d46],0xa6
  41ae05:	out    dx,eax
  41ae06:	and    al,0xb3
  41ae08:	loop   0x41adc6
  41ae0a:	add    BYTE PTR [esi],ch
  41ae0c:	sub    bl,bl
  41ae0e:	pop    ds
  41ae0f:	test   BYTE PTR [ebp-0x568f2f43],ah
  41ae15:	enter  0xbc30,0xab
  41ae19:	arpl   WORD PTR [ebx+0x68e6d2bd],bx
  41ae1f:	inc    ebx
  41ae20:	shl    BYTE PTR [esp+ecx*8],cl
  41ae23:	adc    DWORD PTR [ecx-0x74],0x3e
  41ae27:	xchg   edi,eax
  41ae28:	inc    edx
  41ae29:	sbb    eax,0x1f6e850f
  41ae2e:	and    al,0x69
  41ae30:	fistp  QWORD PTR [ecx+0x44701e5e]
  41ae36:	mov    al,0x97
  41ae38:	popf   
  41ae39:	es push edi
  41ae3b:	ja     0x41adfa
  41ae3d:	xchg   DWORD PTR [ebp+0x58],edx
  41ae40:	and    DWORD PTR [ebp-0x4e],esi
  41ae43:	inc    esi
  41ae44:	and    bh,dh
  41ae46:	add    ebx,DWORD PTR ds:0xbbfeb0be
  41ae4c:	push   cs
  41ae4d:	(bad)  [ebx]
  41ae4f:	jbe    0x41ae19
  41ae51:	scas   eax,DWORD PTR es:[edi]
  41ae52:	push   esi
  41ae53:	int    0x65
  41ae55:	cmp    eax,0x68181c07
  41ae5a:	mov    eax,0x76d1a125
  41ae5f:	inc    edx
  41ae60:	cs and al,0x7e
  41ae63:	dec    edi
  41ae64:	xlat   BYTE PTR ds:[ebx]
  41ae65:	mov    bh,0x95
  41ae67:	xchg   BYTE PTR [ebx],bl
  41ae69:	in     eax,dx
  41ae6a:	cmc    
  41ae6b:	mov    ah,0x7
  41ae6d:	(bad)  [edi+0x3d]
  41ae70:	and    eax,0x63ef69f
  41ae75:	mov    cl,0x40
  41ae77:	sbb    al,0x3d
  41ae79:	mov    cs,esp
  41ae7b:	cmp    BYTE PTR [ebx],dh
  41ae7d:	ret    0x3d0c
  41ae80:	in     eax,dx
  41ae81:	cmp    DWORD PTR [eax+0x56],edi
  41ae84:	push   ebp
  41ae85:	jp     0x41ae65
  41ae87:	icebp  
  41ae88:	or     al,0x82
  41ae8a:	push   0x1bee42d6
  41ae8f:	jge    0x41ae3c
  41ae91:	push   edx
  41ae92:	adc    ebx,ebx
  41ae94:	jge    0x41aecd
  41ae96:	pop    esi
  41ae97:	(bad)  [ebx]
  41ae99:	popa   
  41ae9a:	sbb    eax,0x7a7f62e4
  41ae9f:	mov    ebp,0xc96525f5
  41aea4:	adc    ah,ch
  41aea6:	std    
  41aea7:	cmp    ch,bh
  41aea9:	adc    eax,0x9a0ec8b0
  41aeae:	inc    ebp
  41aeaf:	js     0x41af0e
  41aeb1:	mov    al,0x68
  41aeb3:	test   DWORD PTR ds:0xe2d07e96,esi
  41aeb9:	cmp    eax,0x1e7a767e
  41aebe:	inc    edx
  41aebf:	sub    bh,BYTE PTR [ebp+0x44]
  41aec2:	pop    ebp
  41aec3:	leave  
  41aec4:	mov    ch,0x5d
  41aec6:	out    0x1a,eax
  41aec8:	mov    al,ds:0x4206ab15
  41aecd:	or     ch,BYTE PTR [eax+eiz*4]
  41aed0:	imul   esp,DWORD PTR [edi],0xf062432b
  41aed6:	dec    ebp
  41aed7:	sbb    ah,dl
  41aed9:	or     al,cl
  41aedb:	das    
  41aedc:	xchg   edi,eax
  41aedd:	mul    BYTE PTR ds:0x27e93490
  41aee3:	jmp    0x41aefa
  41aee5:	stos   DWORD PTR es:[edi],eax
  41aee6:	shl    DWORD PTR [eax-0x51],1
  41aee9:	inc    esp
  41aeea:	push   esi
  41aeeb:	fs push es
  41aeed:	outs   dx,DWORD PTR ds:[esi]
  41aeee:	xchg   esi,eax
  41aeef:	test   eax,0x820ca8d3
  41aef4:	mov    ah,0xb7
  41aef6:	xor    dh,dl
  41aef8:	mov    eax,ds:0xb5bdc6c6
  41aefd:	mov    ds:0xd90acc0b,eax
  41af02:	inc    edx
  41af03:	sbb    BYTE PTR [esp+ebx*8+0x56],bl
  41af07:	xor    DWORD PTR [esi],ebp
  41af09:	xchg   esp,eax
  41af0a:	mov    esp,0xa25f79b8
  41af0f:	rcr    bh,cl
  41af11:	sar    ah,1
  41af13:	mov    cl,0xb5
  41af15:	pop    ecx
  41af16:	popf   
  41af17:	rol    BYTE PTR [esi],cl
  41af19:	pop    ebp
  41af1a:	test   DWORD PTR [ebx-0x772cf206],edx
  41af20:	sub    DWORD PTR [ebx+0x59ee9af2],edi
  41af26:	add    bh,BYTE PTR [ecx]
  41af28:	add    DWORD PTR [edi+0x25d8db1b],ecx
  41af2e:	loopne 0x41af54
  41af30:	fnstcw WORD PTR [esp+edi*8]
  41af33:	push   edx
  41af34:	mov    cl,0x3f
  41af36:	push   esi
  41af37:	jne    0x41af8c
  41af39:	test   DWORD PTR [edx-0x2338515b],eax
  41af3f:	jmp    0xd04ea8e4
  41af44:	add    DWORD PTR [eax-0x276a83d8],0x8ec55f25
  41af4e:	or     edi,DWORD PTR [edx+0x67]
  41af51:	das    
  41af52:	jle    0x41af56
  41af54:	fisttp QWORD PTR [ebp+edx*2+0x76]
  41af58:	jle    0x41af68
  41af5a:	(bad)  
  41af5b:	push   eax
  41af5c:	stos   BYTE PTR es:[edi],al
  41af5d:	ins    DWORD PTR es:[edi],dx
  41af5e:	shl    ah,cl
  41af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af61:	mov    edi,0x18026631
  41af66:	xchg   BYTE PTR [ecx-0x13a3ced5],dl
  41af6c:	inc    eax
  41af6d:	loope  0x41af43
  41af6f:	pop    ebx
  41af70:	and    eax,0xe97bc83
  41af75:	ret    
  41af76:	or     dl,cl
  41af78:	ds mov ecx,0x66afcc4b
  41af7e:	cmp    eax,0xf7dc491a
  41af83:	push   ss
  41af84:	nop
  41af85:	sub    al,0x40
  41af87:	addr16 inc eax
  41af89:	push   ss
  41af8a:	push   ebx
  41af8b:	out    0x47,al
  41af8d:	popf   
  41af8e:	sub    ebp,0x58ec5443
  41af94:	cdq    
  41af95:	rol    BYTE PTR [edx+0x508a8c1c],1
  41af9b:	clc    
  41af9c:	mov    ebp,0xfc612293
  41afa1:	lods   al,BYTE PTR ds:[esi]
  41afa2:	ret    
  41afa3:	adc    BYTE PTR [ebx+0x786fd4c8],al
  41afa9:	dec    edi
  41afaa:	je     0x41afc7
  41afac:	xor    ch,0x74
  41afaf:	lahf   
  41afb0:	mov    ds:0xb3afc243,eax
  41afb5:	fidivr WORD PTR [esi-0x7a4e79a5]
  41afbb:	rcr    BYTE PTR [ecx+ecx*2+0x540896b6],1
  41afc2:	push   es
  41afc3:	inc    esp
  41afc4:	sub    ah,BYTE PTR ds:0xb7435cda
  41afca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afcb:	jb     0x41af7e
  41afcd:	imul   ebx,DWORD PTR [ecx+0x561a804f],0x239ba623
  41afd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd8:	lock clc 
  41afda:	push   ecx
  41afdb:	mov    cl,0x78
  41afdd:	mov    WORD PTR [ebp+0x52],fs
  41afe0:	outs   dx,DWORD PTR ds:[esi]
  41afe1:	adc    ebx,DWORD PTR [edi+0xf2ad415]
  41afe7:	sbb    edx,DWORD PTR ds:0xa05ed205
  41afed:	imul   ecx,ebx,0xc5853880
  41aff3:	mov    edi,0x94b4a444
  41aff8:	cdq    
  41aff9:	xchg   esi,eax
  41affa:	sub    esp,DWORD PTR [ebx-0x4132f460]
  41b000:	lods   eax,DWORD PTR ds:[esi]
  41b001:	ret    0xb004
  41b004:	push   ss
  41b005:	gs loope 0x41afd2
  41b008:	add    edx,DWORD PTR [ebx+0x162db51f]
  41b00e:	xor    eax,0xb7303f96
  41b013:	cld    
  41b014:	out    dx,al
  41b015:	int3   
  41b016:	loopne 0x41aff9
  41b018:	xor    eax,edi
  41b01a:	and    esi,edi
  41b01c:	mov    BYTE PTR [edx],bh
  41b01e:	les    ecx,FWORD PTR [esi+eax*8]
  41b021:	dec    edi
  41b022:	xchg   ebp,eax
  41b023:	(bad)  
  41b024:	push   ebx
  41b025:	test   eax,0x30c10cc4
  41b02b:	out    dx,eax
  41b02c:	mov    gs,ecx
  41b02e:	xor    eax,0xa5faa0eb
  41b033:	and    DWORD PTR [ebp+0x17db342c],ebp
  41b039:	hlt    
  41b03a:	mov    ds:0xd57ef313,al
  41b03f:	mov    ebx,0x20666cd9
  41b044:	inc    ebp
  41b045:	ins    BYTE PTR es:[edi],dx
  41b046:	fcom   DWORD PTR [ebp-0x6d1088c3]
  41b04c:	mov    ch,0xa5
  41b04e:	hlt    
  41b04f:	lds    eax,FWORD PTR ds:0x69acdec5
  41b055:	fs push ss
  41b057:	inc    esp
  41b058:	xchg   edx,eax
  41b059:	xor    al,BYTE PTR [esi-0x33]
  41b05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b05d:	jnp    0x41b0c9
  41b05f:	push   ss
  41b060:	cwde   
  41b061:	pop    ds
  41b062:	jno    0x41b036
  41b064:	in     al,0x71
  41b066:	nop
  41b067:	pop    ds
  41b068:	fiadd  DWORD PTR [eax+0x52]
  41b06b:	iret   
  41b06c:	and    eax,0x82f3764d
  41b071:	and    eax,0xdbc053ea
  41b076:	adc    BYTE PTR [eax],ah
  41b078:	test   eax,0x23537b3
  41b07d:	cmp    esp,DWORD PTR [edx+0x34]
  41b080:	lods   eax,DWORD PTR ds:[esi]
  41b081:	lea    edx,ds:[edi+ebx*8]
  41b085:	ins    BYTE PTR es:[edi],dx
  41b086:	cmp    esp,0x64aabe1f
  41b08c:	lods   al,BYTE PTR ds:[esi]
  41b08d:	xchg   edi,eax
  41b08e:	add    al,BYTE PTR [ecx]
  41b090:	dec    edi
  41b091:	neg    BYTE PTR [ecx-0x6d84bc7d]
  41b097:	push   cs
  41b098:	imul   ebx,DWORD PTR [ebx],0xf
  41b09b:	push   ecx
  41b09c:	(bad)  
  41b09d:	sub    eax,esp
  41b09f:	sbb    ah,BYTE PTR es:[edi]
  41b0a2:	in     eax,dx
  41b0a3:	adc    DWORD PTR [eax+0x13c0c825],ebp
  41b0a9:	out    dx,al
  41b0aa:	push   esp
  41b0ab:	pop    ebp
  41b0ac:	sahf   
  41b0ad:	cs push cs
  41b0af:	mov    esp,0x9e5481ac
  41b0b4:	xchg   esp,eax
  41b0b5:	imul   edx,DWORD PTR [ecx],0xa2400f3
  41b0bb:	imul   esi,DWORD PTR [ecx-0x3c],0x474b8ad3
  41b0c2:	or     ebp,DWORD PTR [ebx+0x5545edb]
  41b0c8:	jne    0x41b0d4
  41b0ca:	and    ebp,esp
  41b0cc:	or     al,al
  41b0ce:	mov    gs,WORD PTR [edx]
  41b0d0:	add    eax,ecx
  41b0d2:	int    0x9
  41b0d4:	jge    0x41b0c0
  41b0d6:	add    al,0x16
  41b0d8:	xchg   BYTE PTR [esi],dh
  41b0da:	xor    al,0xd7
  41b0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0dd:	and    eax,0xebf87c4d
  41b0e2:	data16 fmul DWORD PTR ds:0x8f608a79
  41b0e9:	int    0xda
  41b0eb:	fcomp  QWORD PTR [esi+0x2567a17]
  41b0f1:	mov    ecx,0xff733353
  41b0f6:	pop    esi
  41b0f7:	outs   dx,BYTE PTR ds:[esi]
  41b0f8:	xchg   DWORD PTR [esp+ebp*4+0x6f5678e8],ebx
  41b0ff:	mov    bl,0xee
  41b101:	adc    al,0xc7
  41b103:	xchg   BYTE PTR [ebx+0x410e940d],dl
  41b109:	fs fst st(7)
  41b10c:	not    BYTE PTR [esi-0x36ce78b0]
  41b112:	mov    BYTE PTR [ebp+0x6e],bl
  41b115:	leave  
  41b116:	out    0x89,eax
  41b118:	jo     0x41b137
  41b11a:	mov    edx,0xa154bfed
  41b11f:	(bad)  [eax-0x2]
  41b122:	stos   DWORD PTR es:[edi],eax
  41b123:	cdq    
  41b124:	rol    ebx,1
  41b126:	jg     0x41b162
  41b128:	mov    dh,0x65
  41b12a:	xlat   BYTE PTR ds:[ebx]
  41b12b:	cmp    edx,DWORD PTR [ebp+0x533edebf]
  41b131:	inc    edi
  41b132:	or     DWORD PTR [esi+0x2bf13f0a],0x3c
  41b139:	(bad)  
  41b13a:	mov    al,ds:0x3264bca3
  41b13f:	fist   WORD PTR [eax+0x2d0ce60e]
  41b145:	push   edi
  41b146:	jmp    0xd5:0xf286db98
  41b14d:	push   edi
  41b14e:	add    BYTE PTR [eax],al
  41b150:	add    BYTE PTR [eax],al
  41b152:	cld    
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	mov    DWORD PTR [edx],esp
  41b160:	xor    eax,0x12da1cd
  41b165:	add    ah,dh
  41b167:	add    al,0x0
  41b169:	add    bl,dh
  41b16b:	pusha  
  41b16c:	mov    esp,0x541ff854
  41b171:	ds mov ch,0x4c
  41b174:	jg     0x41b1d3
  41b176:	call   0x99a8:0x6d561ed9
  41b17d:	jbe    0x41b13e
  41b17f:	mov    fs,WORD PTR ds:0x8aeda07e
  41b185:	cmc    
  41b186:	sub    BYTE PTR [edx+0x13],ch
  41b189:	mov    bh,0x3
  41b18b:	dec    esp
  41b18c:	push   ds
  41b18d:	sbb    eax,0xf61b574a
  41b192:	pop    ecx
  41b193:	pop    ebx
  41b194:	xor    esp,ecx
  41b196:	mov    ds:0xaca12290,eax
  41b19b:	inc    ebx
  41b19c:	cld    
  41b19d:	mov    edi,0xd575951
  41b1a2:	outs   dx,DWORD PTR ds:[esi]
  41b1a3:	mov    eax,ds:0xe35fe256
  41b1a8:	or     DWORD PTR [eax+0x75a5dbdd],ebx
  41b1ae:	xchg   edx,eax
  41b1af:	rcl    BYTE PTR [eax+0x41],0xac
  41b1b3:	push   ebx
  41b1b4:	pushf  
  41b1b5:	dec    edi
  41b1b6:	and    bl,BYTE PTR ds:0x6d1992b3
  41b1bc:	or     eax,0xd4a07836
  41b1c1:	mov    esi,0x6d66d705
  41b1c6:	sub    al,0x74
  41b1c8:	das    
  41b1c9:	cli    
  41b1ca:	cmp    al,0xec
  41b1cc:	les    edx,FWORD PTR [ecx]
  41b1ce:	or     bh,BYTE PTR [ecx]
  41b1d0:	(bad)  
  41b1d1:	inc    BYTE PTR [edx+ecx*8+0x271767ae]
  41b1d8:	dec    ebx
  41b1d9:	sub    esp,edx
  41b1db:	push   esp
  41b1dc:	fxtract 
  41b1de:	mov    cs,WORD PTR [ebx]
  41b1e0:	jo     0x41b20d
  41b1e2:	push   esi
  41b1e3:	pop    ebx
  41b1e4:	mov    WORD PTR [esp+esi*2],ss
  41b1e7:	push   ebp
  41b1e8:	outs   dx,BYTE PTR ds:[esi]
  41b1e9:	adc    ecx,esp
  41b1eb:	arpl   WORD PTR [edi+0x3d],sp
  41b1ee:	test   DWORD PTR [edx+eax*8-0x32],0x165e5e
  41b1f6:	and    BYTE PTR [ebp-0x79],bl
  41b1f9:	lods   eax,DWORD PTR ds:[esi]
  41b1fa:	mov    bh,0xdd
  41b1fc:	test   BYTE PTR [ecx],bh
  41b1fe:	stc    
  41b1ff:	add    ah,bl
  41b201:	(bad)  
  41b202:	jb     0x41b220
  41b204:	pop    ecx
  41b205:	push   eax
  41b206:	sbb    ebx,DWORD PTR [edx]
  41b208:	lds    eax,FWORD PTR [edx-0x36042f1a]
  41b20e:	ins    DWORD PTR es:[edi],dx
  41b20f:	cmp    al,0x6e
  41b211:	sar    BYTE PTR [ecx],1
  41b213:	mov    al,0x97
  41b215:	sahf   
  41b216:	aam    0x9
  41b218:	sbb    DWORD PTR [ecx],edx
  41b21a:	mov    WORD PTR [ecx-0x23a3a587],es
  41b220:	into   
  41b221:	aaa    
  41b222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b223:	out    dx,al
  41b224:	cs jecxz 0x41b1d2
  41b227:	xor    cl,dh
  41b229:	cmp    eax,0x4592cf2
  41b22e:	retf   0x5387
  41b231:	clc    
  41b232:	xor    eax,0xec407990
  41b237:	inc    ebx
  41b238:	mov    dh,0x2b
  41b23a:	mov    al,ds:0x82b55534
  41b23f:	test   cl,0xd7
  41b242:	imul   esi,DWORD PTR [ecx],0x34753d7
  41b248:	aas    
  41b249:	out    0xdc,al
  41b24b:	ret    
  41b24c:	or     edi,esi
  41b24e:	xor    eax,DWORD PTR [edx+0x668ff7c2]
  41b254:	pushf  
  41b255:	push   ss
  41b256:	pop    esp
  41b257:	add    eax,0x28e0b3a6
  41b25c:	or     al,0x1
  41b25e:	or     edx,eax
  41b260:	or     BYTE PTR [edx+0x5c],al
  41b263:	not    DWORD PTR [ecx-0x306a63d3]
  41b269:	inc    ebp
  41b26a:	shr    BYTE PTR [ecx-0x1b6e5163],cl
  41b270:	xchg   ebp,eax
  41b271:	lahf   
  41b272:	inc    esi
  41b273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b274:	in     al,0xbb
  41b276:	sbb    edi,esp
  41b278:	int3   
  41b279:	inc    edx
  41b27a:	idiv   BYTE PTR [esi+ecx*1+0x76fbf5d5]
  41b281:	jno    0x41b26a
  41b283:	jae    0x41b2c3
  41b285:	sub    ebp,DWORD PTR [esi+ecx*8+0x5]
  41b289:	popa   
  41b28a:	pop    edx
  41b28b:	retf   0xa2fd
  41b28e:	xchg   edi,eax
  41b28f:	adc    ecx,DWORD PTR [ebp-0x33006699]
  41b295:	sbb    eax,0x255f4ca6
  41b29a:	js     0x41b230
  41b29c:	cmp    bh,0xe2
  41b29f:	adc    ecx,DWORD PTR [ebx+0x28e29b6a]
  41b2a5:	leave  
  41b2a6:	les    eax,FWORD PTR [eax]
  41b2a8:	imul   edx,DWORD PTR [eax],0x6e3d8a56
  41b2ae:	mov    esp,DWORD PTR [ebx+0x611e4ddd]
  41b2b4:	jmp    0x6ae1a456
  41b2b9:	test   DWORD PTR [ebx],0x5ac25a49
  41b2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c0:	fwait
  41b2c1:	loopne 0x41b341
  41b2c3:	adc    eax,0xdab79a96
  41b2c8:	paddusw mm1,QWORD PTR [edx+0x1e2dfcf5]
  41b2cf:	fxch   st(0)
  41b2d1:	rcr    al,1
  41b2d3:	std    
  41b2d4:	pop    es
  41b2d5:	shl    BYTE PTR [esi-0xdb4371a],0x57
  41b2dc:	sub    cl,BYTE PTR [edx]
  41b2de:	push   0x93c493cb
  41b2e3:	add    dl,0x56
  41b2e6:	pop    ebp
  41b2e7:	lods   eax,DWORD PTR ds:[esi]
  41b2e8:	xchg   edx,eax
  41b2e9:	pop    ebp
  41b2ea:	mov    ?,WORD PTR [esi+0x6b]
  41b2ed:	push   edi
  41b2ee:	xchg   edx,eax
  41b2ef:	int3   
  41b2f0:	xchg   esi,eax
  41b2f1:	add    al,0xb2
  41b2f3:	fcom   DWORD PTR [ebx+0x6ba15793]
  41b2f9:	sub    esi,ebx
  41b2fb:	xor    edx,DWORD PTR [ecx+0x7b]
  41b2fe:	jge    0x41b295
  41b300:	xchg   esi,eax
  41b301:	imul   ebp,DWORD PTR [esi-0x71],0xbc9b503f
  41b308:	outs   dx,DWORD PTR ds:[esi]
  41b309:	data16 int3 
  41b30b:	push   0x60
  41b30d:	and    al,BYTE PTR [ebp-0xa]
  41b310:	pop    ds
  41b311:	fdivrp st(7),st
  41b313:	mov    ecx,0x19b9300f
  41b318:	mov    ebx,0xc362f7f9
  41b31d:	push   eax
  41b31e:	mov    dl,0x7a
  41b320:	adc    DWORD PTR [ebx+0x5fc2ce46],esp
  41b326:	into   
  41b327:	mov    ah,0xf9
  41b329:	sbb    eax,0x5552058b
  41b32e:	stc    
  41b32f:	and    ebx,0x3812740f
  41b335:	push   edi
  41b336:	cmp    DWORD PTR [esi-0x19],edx
  41b339:	fldcw  WORD PTR [edx]
  41b33b:	and    al,0x2a
  41b33d:	shl    DWORD PTR [edx-0x50],0x85
  41b341:	mov    edi,0x569355a7
  41b346:	xchg   BYTE PTR [ebp+esi*2-0x40029206],ch
  41b34d:	add    eax,0x3f6bdeb2
  41b352:	ins    BYTE PTR es:[edi],dx
  41b353:	adc    eax,0x7be4eef9
  41b358:	pop    edi
  41b359:	test   al,0x5c
  41b35b:	daa    
  41b35c:	adc    DWORD PTR [ecx+0x37f689b6],edx
  41b362:	mov    dh,0x24
  41b364:	mov    esp,fs
  41b366:	sar    ecx,1
  41b368:	mov    ds:0x34629b1d,eax
  41b36d:	jne    0x41b3e8
  41b36f:	add    eax,0xa0bcde0a
  41b374:	jle    0x41b344
  41b376:	jne    0x41b37b
  41b378:	push   0x3d2297c9
  41b37d:	data16 or bl,BYTE PTR ds:0x83a6199d
  41b384:	test   DWORD PTR [eax+0x77],ebp
  41b387:	sahf   
  41b388:	data16 stos BYTE PTR es:[edi],al
  41b38a:	pop    esi
  41b38b:	mul    ch
  41b38d:	arpl   WORD PTR [edi+0x47503932],bx
  41b393:	imul   edi,DWORD PTR [ebp-0x5913e429],0xffffffd3
  41b39a:	iret   
  41b39b:	popf   
  41b39c:	jb     0x41b327
  41b39e:	call   0xc4a276ba
  41b3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a4:	mov    dl,BYTE PTR [ebx+0x70]
  41b3a7:	sti    
  41b3a8:	mov    dl,BYTE PTR [edx]
  41b3aa:	je     0x41b364
  41b3ac:	adc    ebx,DWORD PTR [eax+0x71]
  41b3af:	add    edi,edi
  41b3b1:	lea    edi,[eax-0x7a]
  41b3b4:	dec    edx
  41b3b5:	and    cl,BYTE PTR ds:0x2dbbdfee
  41b3bb:	mov    ebx,0xda6e43bd
  41b3c0:	daa    
  41b3c1:	(bad)  
  41b3c2:	mov    esi,0x76014da9
  41b3c7:	pop    edi
  41b3c8:	push   esp
  41b3c9:	fldlg2 
  41b3cb:	out    0xdb,eax
  41b3cd:	dec    edx
  41b3ce:	mov    edx,DWORD PTR [eax+eiz*8+0x21c6c7da]
  41b3d5:	mov    ?,WORD PTR [ebx+eiz*1+0x15]
  41b3d9:	dec    BYTE PTR [edi+ebp*8+0x544f1729]
  41b3e0:	repz sbb ch,BYTE PTR [eax+0x73fdbea4]
  41b3e7:	rol    DWORD PTR [eax],0xd9
  41b3ea:	mov    ch,0xaf
  41b3ec:	pop    ebx
  41b3ed:	(bad)
  41b3f0:	mov    edi,esi
  41b3f2:	(bad)  
  41b3f3:	mov    WORD PTR [esi-0x4b01a178],?
  41b3f9:	lahf   
  41b3fa:	int3   
  41b3fb:	fcomp  DWORD PTR [eax+0x44bec001]
  41b401:	add    BYTE PTR [ebx+ebx*4+0x54],dh
  41b405:	fbld   TBYTE PTR [ebp+0x55]
  41b408:	out    dx,al
  41b409:	inc    ecx
  41b40a:	enter  0xb053,0xfb
  41b40e:	jmp    0xcfbe:0x5677a3ba
  41b415:	mov    edx,0xd891d4ac
  41b41a:	xchg   ebx,eax
  41b41b:	into   
  41b41c:	test   bh,0x18
  41b41f:	inc    esi
  41b420:	cld    
  41b421:	sbb    al,0x6d
  41b423:	shr    BYTE PTR [esi+0x12],0xf9
  41b427:	aad    0x55
  41b429:	js     0x41b3d0
  41b42b:	(bad)  
  41b42c:	push   ebp
  41b42d:	or     al,0x7c
  41b42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b430:	inc    esp
  41b431:	push   ebp
  41b432:	int3   
  41b433:	retf   
  41b434:	add    dh,0xc9
  41b437:	in     al,0xd6
  41b439:	pop    esp
  41b43a:	data16 clc 
  41b43c:	enter  0xbd2c,0x4b
  41b440:	lods   eax,DWORD PTR ds:[esi]
  41b441:	data16 jne 0x41b4bc
  41b444:	jb     0x41b4a9
  41b446:	jae    0x41b433
  41b448:	les    esp,FWORD PTR [eax+0x40]
  41b44b:	stos   DWORD PTR es:[edi],eax
  41b44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b44d:	jmp    0x791a:0xa1a52a27
  41b454:	pop    edi
  41b455:	fisttp WORD PTR [edx+0x28]
  41b458:	out    dx,eax
  41b459:	jne    0x41b494
  41b45b:	adc    eax,0xe4e5b898
  41b460:	out    dx,al
  41b461:	push   esi
  41b462:	xchg   edi,ebx
  41b464:	sub    eax,0x673884ef
  41b469:	ret    0xdf8e
  41b46c:	shl    DWORD PTR [ebx+0x2b],1
  41b46f:	xor    BYTE PTR [edx-0x1d4319be],al
  41b475:	xor    esp,DWORD PTR [edx]
  41b477:	mov    dl,ch
  41b479:	pop    edi
  41b47a:	push   ecx
  41b47b:	adc    DWORD PTR [esi-0x421cf4cf],ebx
  41b481:	jg     0x41b465
  41b483:	jne    0x41b460
  41b485:	pop    ss
  41b486:	out    0x31,al
  41b488:	inc    edx
  41b489:	cli    
  41b48a:	sub    eax,DWORD PTR ds:0xce6b3935
  41b490:	pop    edx
  41b491:	push   ss
  41b492:	mov    bh,bl
  41b494:	mov    al,ds:0x1f42505b
  41b499:	sbb    al,BYTE PTR [ebp+0xc17088]
  41b49f:	mov    ecx,0xa5c7a481
  41b4a4:	lock push ecx
  41b4a6:	xchg   ebx,eax
  41b4a7:	add    ch,BYTE PTR ds:0xcfb70bd1
  41b4ad:	cmp    al,0x63
  41b4af:	addr16 xchg ebp,eax
  41b4b1:	xor    eax,0x7c0b4d12
  41b4b6:	sub    al,0xad
  41b4b8:	dec    ebx
  41b4b9:	addr16 (bad) 
  41b4bb:	addr16 adc eax,0x727d801
  41b4c1:	sub    ecx,DWORD PTR [edi+0x229e73dd]
  41b4c7:	xchg   ebp,eax
  41b4c8:	jno    0x41b480
  41b4ca:	cmp    eax,0x207f499f
  41b4cf:	fdivr  QWORD PTR [edx+ebx*1+0x1d]
  41b4d3:	xor    ecx,ecx
  41b4d5:	mov    DWORD PTR [eax+0x8807874],ebx
  41b4db:	scas   eax,DWORD PTR es:[edi]
  41b4dc:	sbb    BYTE PTR [edi],bh
  41b4de:	stos   BYTE PTR es:[edi],al
  41b4df:	cmc    
  41b4e0:	mov    cl,0x7d
  41b4e2:	xor    BYTE PTR [ecx],dh
  41b4e4:	inc    esi
  41b4e5:	ins    BYTE PTR es:[edi],dx
  41b4e6:	int    0x43
  41b4e8:	xchg   BYTE PTR [ebx+edx*8],bl
  41b4eb:	pop    esp
  41b4ec:	push   DWORD PTR [eax+0x37]
  41b4ef:	inc    ebx
  41b4f0:	dec    ebx
  41b4f1:	(bad)
  41b4f4:	imul   edi,DWORD PTR [ecx],0xa71d417c
  41b4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4fb:	mov    ah,0x1
  41b4fd:	inc    esi
  41b4fe:	inc    eax
  41b4ff:	inc    esi
  41b500:	fiadd  DWORD PTR [edx-0x30]
  41b503:	sub    BYTE PTR [ebp-0x47af5f81],al
  41b509:	adc    al,0x55
  41b50b:	adc    ebx,edx
  41b50d:	xchg   esi,eax
  41b50e:	add    BYTE PTR [edi+0x6826e247],0x79
  41b515:	cmc    
  41b516:	stos   DWORD PTR es:[edi],eax
  41b517:	out    dx,al
  41b518:	cmp    DWORD PTR [ecx+0x2e38e103],edi
  41b51e:	iret   
  41b51f:	rcl    BYTE PTR [edi],0xb3
  41b522:	jne    0x41b533
  41b524:	mov    ah,0x93
  41b526:	test   al,0x45
  41b528:	inc    edi
  41b529:	mov    ds:0x8d198503,eax
  41b52e:	loop   0x41b4d3
  41b530:	fadd   st(4),st
  41b532:	ficom  DWORD PTR [edi+0x14]
  41b535:	frstor [edx-0x14919004]
  41b53b:	pop    esi
  41b53c:	pop    ecx
  41b53d:	iret   
  41b53e:	cwde   
  41b53f:	unpckhps xmm7,XMMWORD PTR [esi-0x47da270a]
  41b546:	and    DWORD PTR ss:[esi+0x1a],ebx
  41b54a:	ds jp  0x41b5c9
  41b54d:	imul   ebx,DWORD PTR [ebx],0x18
  41b550:	pop    ebx
  41b551:	mov    esp,0x4b82c9a4
  41b556:	rcl    esi,cl
  41b558:	inc    ebx
  41b559:	mov    bl,0x2b
  41b55b:	cmovb  edx,DWORD PTR [ecx+eiz*1-0x2f66cf11]
  41b563:	jecxz  0x41b596
  41b565:	ret    
  41b566:	push   esi
  41b567:	in     al,dx
  41b568:	sub    BYTE PTR [ecx-0x250df2c3],bh
  41b56e:	jmp    0xdf5b:0x920a6c8d
  41b575:	in     eax,0x39
  41b577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b578:	or     BYTE PTR [ebx+esi*1-0x12],bh
  41b57c:	mov    eax,0x4ed18fb5
  41b581:	and    eax,0xa037edfb
  41b586:	xchg   edx,eax
  41b587:	adc    eax,0xd8bd6fd6
  41b58c:	in     al,dx
  41b58d:	add    BYTE PTR [ecx-0x9],ch
  41b590:	mov    eax,ds:0x7463f0b9
  41b595:	add    al,0xa4
  41b597:	call   0xcd:0xbf5a4b88
  41b59e:	xor    dl,bh
  41b5a0:	out    dx,eax
  41b5a1:	or     al,0x64
  41b5a3:	jno    0x41b588
  41b5a5:	push   ds
  41b5a6:	cs stos BYTE PTR es:[edi],al
  41b5a8:	sahf   
  41b5a9:	jle    0x41b56e
  41b5ab:	pushw  0xb875
  41b5af:	lock popf 
  41b5b1:	inc    ebx
  41b5b2:	out    dx,al
  41b5b3:	mov    ebp,DWORD PTR [ebp-0x6f5d6895]
  41b5b9:	das    
  41b5ba:	lods   eax,DWORD PTR ds:[esi]
  41b5bb:	(bad)  
  41b5bc:	pop    esi
  41b5bd:	xchg   BYTE PTR [esi],ah
  41b5bf:	cmp    eax,0x902f25da
  41b5c4:	pop    edi
  41b5c5:	mov    edx,0x5dbedc5a
  41b5ca:	or     al,0x28
  41b5cc:	cmp    eax,0xcafb1af9
  41b5d1:	ret    
  41b5d2:	push   ebp
  41b5d3:	lods   eax,DWORD PTR ds:[esi]
  41b5d4:	inc    ecx
  41b5d5:	push   0x16
  41b5d7:	jns    0x41b596
  41b5d9:	sbb    eax,DWORD PTR [ebx+0x27]
  41b5dc:	aas    
  41b5dd:	sbb    al,BYTE PTR [esi-0x73bea7cd]
  41b5e3:	outs   dx,BYTE PTR cs:[esi]
  41b5e5:	lods   al,BYTE PTR ds:[esi]
  41b5e6:	(bad)  
  41b5e7:	dec    esp
  41b5e8:	mov    edx,?
  41b5ea:	or     BYTE PTR [edi-0x31],dh
  41b5ed:	mov    bl,0xaa
  41b5ef:	push   ss
  41b5f0:	inc    ebp
  41b5f1:	pop    es
  41b5f2:	add    esi,ebp
  41b5f4:	xchg   edi,eax
  41b5f5:	and    eax,DWORD PTR [eax]
  41b5f7:	ins    DWORD PTR es:[edi],dx
  41b5f8:	inc    eax
  41b5f9:	lds    ebp,FWORD PTR [edi+0x19]
  41b5fc:	dec    eax
  41b5fd:	fdivr  st,st(4)
  41b5ff:	repnz icebp 
  41b601:	sbb    ebx,DWORD PTR [esi-0x75ba983b]
  41b607:	cmp    DWORD PTR [ebx+0x5cb0bb2a],0xa3c34b5e
  41b611:	adc    al,0xae
  41b613:	jno    0x41b5cd
  41b615:	adc    DWORD PTR [esi],esp
  41b617:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b619:	pop    ebp
  41b61a:	ds cmc 
  41b61c:	lods   al,BYTE PTR ds:[esi]
  41b61d:	xor    al,BYTE PTR [ecx-0x5fd8754b]
  41b623:	(bad)  
  41b624:	mov    dl,0xdf
  41b626:	jae    0x41b619
  41b628:	sub    al,0x2c
  41b62a:	adc    al,0x17
  41b62c:	mov    esp,0x6e73eb88
  41b631:	push   edx
  41b632:	pop    ds
  41b633:	xchg   edx,eax
  41b634:	sbb    eax,0x62caf5b7
  41b639:	adc    BYTE PTR [esi-0x10],0xc5
  41b63d:	push   esp
  41b63e:	mov    al,0x7c
  41b640:	mov    ecx,0x199f967
  41b645:	pop    esp
  41b646:	mov    edi,DWORD PTR [ecx]
  41b648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b649:	arpl   WORD PTR [ebx+0x2fbc3c4],ax
  41b64f:	shl    BYTE PTR [eax],0x28
  41b652:	jne    0x41b6bf
  41b654:	jp     0x41b63f
  41b656:	fdivp  st(5),st
  41b658:	mov    edi,0x3b5e7a12
  41b65d:	je     0x41b65f
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	xchg   edi,eax
  41b66f:	sahf   
  41b670:	inc    esi
  41b671:	sub    edx,DWORD PTR [ebp-0xbfffece]
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [ecx-0x10],bh
  41b67c:	outs   dx,DWORD PTR ds:[esi]
  41b67d:	out    dx,al
  41b67e:	xchg   ebp,eax
  41b67f:	data16 out dx,al
  41b681:	jo     0x41b656
  41b683:	xor    ebx,DWORD PTR [edi-0x67]
  41b686:	push   es
  41b687:	jns    0x41b65e
  41b689:	ins    DWORD PTR es:[edi],dx
  41b68a:	repz cmp esp,DWORD PTR [esi-0x4eaac48c]
  41b691:	repnz push esi
  41b693:	add    BYTE PTR [edx],bh
  41b695:	arpl   WORD PTR [eax+edi*8],sp
  41b698:	pop    edi
  41b699:	mov    dl,0x36
  41b69b:	push   ds
  41b69c:	fimul  DWORD PTR [eax-0x4b]
  41b69f:	xor    esi,edx
  41b6a1:	(bad)  
  41b6a2:	jl     0x41b6cb
  41b6a4:	dec    ecx
  41b6a5:	cdq    
  41b6a6:	mov    bl,0xa1
  41b6a8:	xchg   DWORD PTR [ecx],eax
  41b6aa:	rol    BYTE PTR [ecx],0x44
  41b6ad:	lock push eax
  41b6af:	xor    eax,0x2e0daa72
  41b6b4:	mov    ebx,0xa3d155d9
  41b6b9:	or     al,ch
  41b6bb:	jno    0x41b6ab
  41b6bd:	rcl    BYTE PTR ds:0xd16140a8,cl
  41b6c3:	leave  
  41b6c4:	jbe    0x41b717
  41b6c6:	jmp    0x1739909c
  41b6cb:	dec    eax
  41b6cc:	pop    edx
  41b6cd:	or     eax,0x9e5f9177
  41b6d2:	popf   
  41b6d3:	mov    edx,0x4b715065
  41b6d8:	jb     0x41b6e4
  41b6da:	call   0xc73d:0xfebca826
  41b6e1:	inc    esp
  41b6e2:	cmp    esp,esp
  41b6e4:	xor    BYTE PTR [ecx-0x44],dh
  41b6e7:	add    al,0xff
  41b6e9:	call   0xd933fdd
  41b6ee:	or     al,0x20
  41b6f0:	call   0xd97f:0xd99dcf39
  41b6f7:	mov    ebp,cs
  41b6f9:	aaa    
  41b6fa:	mov    esp,ebx
  41b6fc:	int    0xd3
  41b6fe:	es dec eax
  41b700:	rol    edi,cl
  41b702:	mov    WORD PTR [esi-0x75],gs
  41b705:	cwde   
  41b706:	loop   0x41b6b9
  41b708:	add    eax,ecx
  41b70a:	outs   dx,BYTE PTR ds:[esi]
  41b70b:	inc    ebp
  41b70c:	leave  
  41b70d:	lods   al,BYTE PTR ds:[esi]
  41b70e:	dec    esp
  41b70f:	pop    esi
  41b710:	pop    esp
  41b711:	jge    0x41b6a4
  41b713:	mov    dl,0xea
  41b715:	shl    DWORD PTR [ecx+0x22],0xe3
  41b719:	fs mov ebx,?
  41b71c:	int    0xc7
  41b71e:	jmp    0x9426:0x3c6932a5
  41b725:	call   0x7bff:0x492aae64
  41b72c:	nop
  41b72d:	xchg   DWORD PTR [eax+eax*2+0x19],esp
  41b731:	push   esp
  41b732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b733:	in     eax,dx
  41b734:	ret    
  41b735:	imul   ebx,esi,0xffffff9d
  41b738:	cdq    
  41b739:	shr    DWORD PTR ds:0x33773f34,0x9b
  41b740:	mov    dh,0xfa
  41b742:	ins    BYTE PTR es:[edi],dx
  41b743:	push   edx
  41b744:	sahf   
  41b745:	fdivr  DWORD PTR [ecx]
  41b747:	pop    ds
  41b748:	cmp    ch,bh
  41b74a:	adc    al,0x8c
  41b74d:	div    edx
  41b74f:	hlt    
  41b750:	jge    0x41b707
  41b752:	lods   eax,DWORD PTR ds:[esi]
  41b753:	stos   DWORD PTR es:[edi],eax
  41b754:	mov    ds:0xf40e938a,al
  41b759:	in     al,0x68
  41b75b:	or     ebx,esp
  41b75d:	jge    0x41b7bf
  41b75f:	xor    dh,dl
  41b761:	xchg   DWORD PTR [edi+edx*1+0x11079c07],ebp
  41b768:	or     al,0xc2
  41b76a:	clc    
  41b76b:	mov    ch,0x33
  41b76d:	sbb    eax,DWORD PTR [edx]
  41b76f:	imul   esp,DWORD PTR [eax-0x6a52122f],0x66
  41b776:	and    DWORD PTR [ebx+eiz*8+0x3cd21a7f],ebx
  41b77d:	mov    dh,0xc3
  41b77f:	pop    esi
  41b780:	sub    BYTE PTR [ebp+edi*2+0x1914824d],0x6a
  41b788:	arpl   si,di
  41b78a:	inc    edi
  41b78b:	test   DWORD PTR [edi+0x41df6159],ebp
  41b791:	fdiv   QWORD PTR [edi+0x1efdbdc4]
  41b797:	sub    eax,0x7fe49087
  41b79c:	lods   al,BYTE PTR ds:[esi]
  41b79d:	fs stc 
  41b79f:	cld    
  41b7a0:	cmp    DWORD PTR [ebp-0x3f],ebx
  41b7a3:	pop    es
  41b7a4:	enter  0xb74a,0xb9
  41b7a8:	mov    esp,esi
  41b7aa:	dec    edi
  41b7ab:	cmp    eax,ebp
  41b7ad:	xchg   ecx,eax
  41b7ae:	fwait
  41b7af:	adc    ecx,DWORD PTR [ebx+0x11]
  41b7b2:	aad    0x8e
  41b7b4:	clc    
  41b7b5:	jmp    0x6f50:0xc45e26f0
  41b7bc:	add    esp,DWORD PTR [eax]
  41b7be:	fcom   QWORD PTR [edx-0x56893a68]
  41b7c4:	mov    edi,0x7b9147d1
  41b7c9:	(bad)  [ebp+0x70]
  41b7cc:	(bad)  
  41b7cd:	gs aad 0x8
  41b7d0:	adc    cl,BYTE PTR [di]
  41b7d3:	sub    BYTE PTR [edx],cl
  41b7d5:	adc    si,dx
  41b7d8:	inc    eax
  41b7d9:	mov    bl,0xad
  41b7db:	(bad)  
  41b7dc:	cwde   
  41b7dd:	jae    0x41b852
  41b7df:	sahf   
  41b7e0:	rcr    BYTE PTR [edi+0x5d],0xcd
  41b7e4:	push   ecx
  41b7e5:	scas   al,BYTE PTR es:[edi]
  41b7e6:	xadd   DWORD PTR [ebx-0x1352b65a],esp
  41b7ed:	or     dl,bh
  41b7ef:	adc    DWORD PTR [ebx-0x57],eax
  41b7f2:	xor    BYTE PTR [ebp+esi*2-0x21b61505],ch
  41b7f9:	sub    DWORD PTR [ecx-0x7ed8e47c],edx
  41b7ff:	pop    ds
  41b800:	mov    esp,DWORD PTR [ebp+0x28]
  41b803:	jae    0x41b7f5
  41b805:	fcmovbe st,st(5)
  41b807:	push   esi
  41b808:	bound  edi,QWORD PTR [eax-0x63]
  41b80b:	daa    
  41b80c:	outs   dx,DWORD PTR ds:[esi]
  41b80d:	ucomiss xmm2,DWORD PTR [ebp-0x560eb9c2]
  41b814:	mov    esp,0xce05a18a
  41b819:	mov    dh,0xb
  41b81b:	(bad)  
  41b81c:	mov    al,0xe2
  41b81e:	add    ebx,DWORD PTR [eax+0x35]
  41b821:	cmp    dl,ah
  41b823:	cmc    
  41b824:	jge    0x41b827
  41b826:	pop    edi
  41b827:	cs push ds
  41b829:	mov    ebx,0x5d057d94
  41b82e:	lods   al,BYTE PTR ds:[esi]
  41b82f:	pushf  
  41b830:	(bad)  
  41b831:	mov    ds:0xc8b60fcb,al
  41b836:	cmc    
  41b837:	mov    al,ds:0xc50ed8e
  41b83c:	lods   eax,DWORD PTR ds:[esi]
  41b83d:	daa    
  41b83e:	push   cs
  41b83f:	inc    ebx
  41b840:	mov    ds:0x4851b03e,eax
  41b845:	xchg   dl,bl
  41b847:	sub    eax,0xc5c854ec
  41b84c:	out    0x26,al
  41b84e:	lahf   
  41b84f:	mov    ebx,ebx
  41b851:	pop    esi
  41b852:	bound  edx,QWORD PTR [eax-0x29]
  41b855:	pop    esp
  41b856:	addr16 push esp
  41b858:	dec    esi
  41b859:	(bad)  
  41b85b:	int    0x26
  41b85d:	xor    DWORD PTR ds:0x337e9a86,esp
  41b863:	xchg   DWORD PTR [eax+0x63],ecx
  41b866:	out    0x80,al
  41b868:	in     eax,0x68
  41b86a:	fbld   TBYTE PTR [esi+ecx*1+0x38]
  41b86e:	iret   
  41b86f:	mul    eax
  41b871:	inc    eax
  41b872:	mov    al,0x62
  41b874:	inc    edx
  41b875:	pop    ss
  41b876:	dec    ebp
  41b877:	inc    esi
  41b878:	sub    DWORD PTR [eax+0xa288af],esi
  41b87e:	sbb    DWORD PTR [edi+0x69],0x9da9201a
  41b885:	pop    es
  41b886:	je     0x41b8ca
  41b888:	outs   dx,BYTE PTR ds:[esi]
  41b889:	dec    esi
  41b88a:	adc    BYTE PTR [edx+0x6c],dl
  41b88d:	enter  0x5d77,0x8c
  41b891:	sbb    ecx,DWORD PTR [eax]
  41b893:	inc    eax
  41b894:	push   ecx
  41b895:	popa   
  41b896:	cli    
  41b897:	xchg   esi,eax
  41b898:	outs   dx,BYTE PTR ds:[esi]
  41b899:	cmp    bl,BYTE PTR [eax]
  41b89b:	inc    ebp
  41b89c:	push   ebp
  41b89d:	xlat   BYTE PTR ds:[ebx]
  41b89e:	daa    
  41b89f:	cmp    edx,DWORD PTR [eax]
  41b8a1:	inc    edx
  41b8a2:	push   cs
  41b8a3:	outs   dx,DWORD PTR ds:[esi]
  41b8a4:	mov    cs:0x6e4f5202,eax
  41b8aa:	and    eax,DWORD PTR [ecx+0x26df7265]
  41b8b0:	xlat   BYTE PTR ds:[ebx]
  41b8b1:	add    DWORD PTR [ecx],eax
  41b8b3:	mov    al,0x2
  41b8b5:	push   edx
  41b8b6:	test   DWORD PTR [edx-0x3416568f],ecx
  41b8bc:	sahf   
  41b8bd:	nop
  41b8be:	hlt    
  41b8bf:	mov    ds:0xdb1a14ae,al
  41b8c4:	lahf   
  41b8c5:	xchg   edx,eax
  41b8c6:	sahf   
  41b8c7:	mov    ?,WORD PTR [edx+0x5478b01b]
  41b8cd:	ret    0x9be9
  41b8d0:	jge    0x41b860
  41b8d2:	cmp    dl,BYTE PTR [edx+0x5c]
  41b8d5:	add    al,0x7a
  41b8d7:	pushf  
  41b8d8:	inc    esi
  41b8d9:	jle    0x41b89e
  41b8db:	sar    cl,1
  41b8dd:	(bad)  
  41b8de:	bound  ecx,QWORD PTR [esi-0x2]
  41b8e1:	xchg   ecx,eax
  41b8e2:	pop    es
  41b8e3:	or     eax,0xfe6249f7
  41b8e8:	mov    ds:0xbb958a71,eax
  41b8ed:	rol    DWORD PTR [esi+0x3f0acac1],1
  41b8f3:	add    edi,esp
  41b8f5:	or     esp,DWORD PTR [ecx+eax*4]
  41b8f8:	inc    ebp
  41b8f9:	mov    ds:0x30aa565a,al
  41b8fe:	fidiv  DWORD PTR [edi-0x34530319]
  41b904:	adc    al,0xaa
  41b906:	dec    ebp
  41b907:	xchg   esp,eax
  41b908:	dec    ecx
  41b909:	fiadd  WORD PTR [esi-0x4e71e644]
  41b90f:	mov    ebx,0x91834dfb
  41b914:	pop    ecx
  41b915:	aas    
  41b916:	push   edx
  41b917:	(bad)  
  41b919:	leave  
  41b91a:	imul   eax,DWORD PTR [ecx],0x73fa3f25
  41b920:	popf   
  41b921:	rcr    DWORD PTR [edx],1
  41b923:	inc    ecx
  41b924:	push   ds
  41b925:	dec    ebp
  41b926:	(bad)  
  41b927:	dec    ecx
  41b928:	loopne 0x41b922
  41b92a:	cld    
  41b92b:	aaa    
  41b92c:	adc    DWORD PTR [esi],0xffffffde
  41b92f:	mov    DWORD PTR [ecx-0x7b1e719a],edx
  41b935:	adc    al,0xa1
  41b937:	jns    0x41b986
  41b939:	clc    
  41b93a:	jg     0x41b965
  41b93c:	dec    edi
  41b93d:	push   es
  41b93e:	xor    bl,ch
  41b940:	sti    
  41b941:	mov    bl,BYTE PTR [ebp-0x21]
  41b944:	ins    DWORD PTR es:[edi],dx
  41b945:	sub    ebp,ecx
  41b947:	loopne 0x41b97f
  41b949:	(bad)  
  41b94a:	out    0x6b,eax
  41b94c:	mov    eax,ds:0xc142a897
  41b951:	stos   DWORD PTR es:[edi],eax
  41b952:	push   es
  41b953:	or     al,0x59
  41b955:	and    al,0x8c
  41b957:	jnp    0x41b8db
  41b959:	fs pusha 
  41b95b:	in     al,0x7e
  41b95d:	sbb    eax,0xd9bea926
  41b962:	stc    
  41b963:	push   esi
  41b964:	or     esp,DWORD PTR [esp+ebx*8]
  41b967:	cmp    esp,DWORD PTR [eax+edi*2-0x30]
  41b96b:	xor    eax,0xe8572661
  41b970:	sbb    al,0x30
  41b972:	std    
  41b973:	sbb    esi,DWORD PTR [edx]
  41b975:	cmp    bh,BYTE PTR [eax]
  41b977:	adc    edx,DWORD PTR [eax]
  41b979:	repz aas 
  41b97b:	add    DWORD PTR gs:[ecx-0x490105f2],edi
  41b982:	scas   eax,DWORD PTR es:[edi]
  41b983:	ret    0x191d
  41b986:	dec    ebx
  41b987:	imul   edi,DWORD PTR [ecx+0x67],0xd30c4e21
  41b98e:	xchg   ebx,eax
  41b98f:	outs   dx,BYTE PTR ds:[esi]
  41b990:	xor    eax,DWORD PTR [esi+0x7da1502f]
  41b996:	jg     0x41b94c
  41b998:	add    ebx,esi
  41b99a:	mov    ds:0x67c478bc,eax
  41b99f:	(bad)  
  41b9a0:	mov    esi,0x30571ea5
  41b9a5:	rcr    BYTE PTR [edi+0x33],cl
  41b9a8:	inc    esp
  41b9a9:	xor    DWORD PTR [eax-0x6d],esi
  41b9ac:	xchg   edx,eax
  41b9ad:	fbstp  TBYTE PTR [ecx-0x6d6056a9]
  41b9b3:	pop    ds
  41b9b4:	jl     0x41b979
  41b9b6:	sbb    eax,0xb8986bdd
  41b9bb:	dec    ebp
  41b9bc:	jmp    0xd86b73e7
  41b9c1:	inc    ebp
  41b9c2:	jnp    0x41b994
  41b9c4:	push   edx
  41b9c5:	in     eax,0x4e
  41b9c7:	xchg   edx,eax
  41b9c8:	push   es
  41b9c9:	ja     0x41ba39
  41b9cb:	inc    DWORD PTR [ebx+edx*2]
  41b9ce:	jnp    0x41b9f2
  41b9d0:	pop    ecx
  41b9d1:	xchg   ebx,eax
  41b9d2:	lds    edx,FWORD PTR [esi+0x3a2204c0]
  41b9d8:	or     DWORD PTR [ecx],esi
  41b9da:	mov    DWORD PTR [esi],ebp
  41b9dc:	imul   eax,DWORD PTR [esi+0x1e],0x3d
  41b9e0:	lds    edx,FWORD PTR [esi-0x15]
  41b9e3:	dec    edi
  41b9e4:	jle    0x41b9b7
  41b9e6:	push   ebx
  41b9e7:	push   eax
  41b9e8:	int    0x44
  41b9ea:	jb     0x7d067eb5
  41b9f0:	dec    ebx
  41b9f1:	jns    0x41ba36
  41b9f3:	mov    eax,ds:0x9dc67cfb
  41b9f8:	pushf  
  41b9f9:	sbb    DWORD PTR [esi+0x33],esp
  41b9fc:	call   0x44fc4cfa
  41ba01:	in     eax,dx
  41ba02:	in     eax,dx
  41ba03:	aam    0xe4
  41ba05:	cmp    eax,0x4282a999
  41ba0a:	dec    edi
  41ba0b:	or     ebp,ebp
  41ba0d:	ret    0x19d7
  41ba10:	popf   
  41ba11:	mov    ebx,0x1edf25e1
  41ba16:	dec    ecx
  41ba17:	dec    edi
  41ba18:	cwde   
  41ba19:	retf   
  41ba1a:	dec    edi
  41ba1b:	outs   dx,DWORD PTR ds:[esi]
  41ba1c:	xlat   BYTE PTR ds:[ebx]
  41ba1d:	fdivr  QWORD PTR [esi+0x566458e]
  41ba23:	(bad)  
  41ba24:	sub    bl,bl
  41ba26:	popa   
  41ba27:	jmp    0x920:0xb12ac453
  41ba2e:	out    dx,eax
  41ba2f:	add    esp,ecx
  41ba31:	popa   
  41ba32:	jle    0x41b9d7
  41ba34:	xor    DWORD PTR [esi+ebx*8],0xc9280441
  41ba3b:	fldenv ds:0x45879aac
  41ba41:	mov    ah,0x63
  41ba43:	add    al,0x4e
  41ba45:	push   ecx
  41ba46:	inc    ebx
  41ba47:	push   0x680c2059
  41ba4c:	xchg   ebx,eax
  41ba4d:	mov    DWORD PTR [ebx-0x28885899],ebx
  41ba53:	pop    esi
  41ba54:	shl    BYTE PTR [ebx],1
  41ba56:	outs   dx,BYTE PTR ds:[esi]
  41ba57:	fldenv [edx]
  41ba59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba5a:	mov    WORD PTR [eax],fs
  41ba5c:	push   ebx
  41ba5d:	ret    
  41ba5e:	addr16 pop eax
  41ba60:	mov    ecx,0x9ab8e8a9
  41ba65:	sub    esp,eax
  41ba67:	add    BYTE PTR [edx+0x2c],bh
  41ba6a:	cwde   
  41ba6b:	add    BYTE PTR [ecx],0x2f
  41ba6e:	and    ch,BYTE PTR [esi]
  41ba70:	(bad)  
  41ba71:	jae    0x41ba48
  41ba73:	jecxz  0x41ba9f
  41ba75:	daa    
  41ba76:	out    0x63,eax
  41ba78:	mov    bh,0x1f
  41ba7a:	or     BYTE PTR [ecx],bl
  41ba7c:	mov    DWORD PTR [esi+0x7abb7f60],0xca2f79fe
  41ba86:	ds adc al,0xcc
  41ba89:	xlat   BYTE PTR ds:[ebx]
  41ba8b:	ror    DWORD PTR [ecx+eiz*8-0x4cc11a69],1
  41ba92:	out    0x8,eax
  41ba94:	jmp    FWORD PTR [ebx]
  41ba96:	or     cl,BYTE PTR [edi]
  41ba98:	and    dl,BYTE PTR [ecx]
  41ba9a:	or     BYTE PTR [ebx+ecx*4],bh
  41ba9d:	or     eax,0xb3751ac9
  41baa2:	xchg   ebp,eax
  41baa3:	jns    0x41ba98
  41baa5:	jg     0x41ba99
  41baa7:	xchg   edi,eax
  41baa8:	stos   BYTE PTR es:[edi],al
  41baa9:	mov    al,0xb8
  41baab:	outs   dx,DWORD PTR ds:[esi]
  41baac:	pop    ds
  41baad:	outs   dx,DWORD PTR ds:[esi]
  41baae:	xchg   DWORD PTR [edi],edi
  41bab0:	pop    ds
  41bab1:	mov    al,ds:0x38289b27
  41bab6:	pop    ebx
  41bab7:	xchg   edi,eax
  41bab8:	fild   QWORD PTR [edi]
  41baba:	test   eax,0xf849873e
  41babf:	ins    DWORD PTR es:[edi],dx
  41bac0:	sub    bh,BYTE PTR [ebp-0x612e5f19]
  41bac6:	ss enter 0x9bef,0xc4
  41bacb:	cdq    
  41bacc:	cmp    al,0xf
  41bace:	jmp    0x7924:0x38708cbf
  41bad5:	mov    DWORD PTR [ecx],ecx
  41bad7:	cmp    DWORD PTR [ebx+eax*4-0x43],esp
  41badb:	ins    DWORD PTR es:[edi],dx
  41badc:	scas   eax,DWORD PTR es:[edi]
  41badd:	push   cs
  41bade:	shr    DWORD PTR [esi],cl
  41bae0:	dec    edx
  41bae1:	cmp    ebp,ebp
  41bae3:	push   es
  41bae4:	or     esi,edx
  41bae6:	mov    al,0xa7
  41bae8:	cmp    dh,ah
  41baea:	sbb    eax,DWORD PTR [edi+esi*2-0x79539573]
  41baf1:	jbe    0x41baad
  41baf3:	(bad)  
  41baf4:	outs   dx,DWORD PTR ds:[esi]
  41baf5:	fistp  WORD PTR [ebp+0xe8a7d8e]
  41bafb:	jns    0x41bab1
  41bafd:	xchg   BYTE PTR [ecx+0x135465b3],dl
  41bb03:	pop    esi
  41bb04:	ss aam 0x5b
  41bb07:	adc    al,0x85
  41bb09:	dec    esi
  41bb0a:	push   ecx
  41bb0b:	aaa    
  41bb0c:	or     eax,0x7653317d
  41bb11:	sbb    al,0xe3
  41bb13:	shl    BYTE PTR [ebx+0x3],0x93
  41bb17:	sbb    BYTE PTR [eax],ch
  41bb19:	xchg   esp,eax
  41bb1a:	loop   0x41bb14
  41bb1c:	fidiv  WORD PTR [esi]
  41bb1e:	mov    ecx,0x4c697a2b
  41bb23:	pop    es
  41bb24:	push   esp
  41bb25:	ret    
  41bb26:	jns    0x41bafc
  41bb28:	(bad)  
  41bb2a:	loop   0x41bb11
  41bb2c:	dec    eax
  41bb2d:	push   eax
  41bb2e:	sti    
  41bb2f:	dec    ecx
  41bb30:	in     eax,0xb6
  41bb32:	ret    
  41bb33:	inc    ecx
  41bb34:	aad    0x59
  41bb36:	lds    esi,FWORD PTR ds:0x5946bd28
  41bb3c:	leave  
  41bb3d:	stos   BYTE PTR es:[edi],al
  41bb3e:	clc    
  41bb3f:	outs   dx,BYTE PTR ds:[esi]
  41bb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb41:	sbb    al,0x4d
  41bb43:	popa   
  41bb44:	jns    0x41bba4
  41bb46:	imul   ebp,DWORD PTR [ebx+0x67],0x6a
  41bb4a:	out    dx,al
  41bb4b:	lds    ebx,FWORD PTR [edi+0x59c65eff]
  41bb51:	jg     0x41bbc0
  41bb53:	les    edi,FWORD PTR [eax+0x7e]
  41bb56:	(bad)  [ecx]
  41bb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb59:	mov    al,ds:0x7750e4af
  41bb5e:	pop    esi
  41bb5f:	(bad)  
  41bb60:	bound  ecx,QWORD PTR fs:[ebx+0x93cfdc8]
  41bb67:	out    dx,eax
  41bb68:	mov    esi,0x24bba267
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xaa442583
  41bb7f:	and    al,0x5d
  41bb81:	cld    
  41bb82:	mov    DWORD PTR [edi],esi
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	hlt    
  41bb87:	add    al,0x0
  41bb89:	add    ah,ah
  41bb8b:	or     bh,al
  41bb8d:	das    
  41bb8e:	jle    0x41bb48
  41bb90:	dec    ecx
  41bb91:	jbe    0x41bb6b
  41bb93:	jns    0x41bb89
  41bb95:	popa   
  41bb96:	mov    ecx,0x8dab86d9
  41bb9b:	inc    esi
  41bb9c:	pop    ebp
  41bb9d:	das    
  41bb9e:	aad    0xed
  41bba0:	add    edi,ecx
  41bba2:	scas   al,BYTE PTR es:[edi]
  41bba3:	inc    eax
  41bba4:	or     eax,0xd5568019
  41bba9:	pop    eax
  41bbaa:	(bad)  
  41bbab:	out    dx,al
  41bbac:	cmp    al,0xfd
  41bbae:	mov    eax,ds:0x244f3fac
  41bbb3:	les    ebx,FWORD PTR [ebx-0x2d]
  41bbb6:	pop    ds
  41bbb7:	mov    dh,0xf3
  41bbb9:	pushf  
  41bbba:	daa    
  41bbbb:	mov    bl,0xec
  41bbbd:	stc    
  41bbbe:	fist   DWORD PTR [edi]
  41bbc0:	mov    ah,BYTE PTR [edi-0x5d74eaef]
  41bbc6:	and    edx,DWORD PTR [edi+0x1f]
  41bbc9:	ins    BYTE PTR es:[edi],dx
  41bbca:	leave  
  41bbcb:	in     al,0x9d
  41bbcd:	jg     0x41bc08
  41bbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd0:	or     al,0xe0
  41bbd2:	ins    BYTE PTR es:[edi],dx
  41bbd3:	cmp    al,0x30
  41bbd5:	and    BYTE PTR [edi+0x67],bl
  41bbd8:	xchg   edx,eax
  41bbd9:	sbb    eax,0xc1005ee6
  41bbde:	mov    ecx,0x37c6cea7
  41bbe3:	xchg   ebx,eax
  41bbe4:	imul   esi,ebx,0x13f25fbb
  41bbea:	mov    ah,0xc3
  41bbec:	xchg   ebx,eax
  41bbed:	xchg   esp,eax
  41bbee:	mov    fs,WORD PTR [ecx-0x646ee1d0]
  41bbf4:	lea    esp,[esi-0x60f305de]
  41bbfa:	in     eax,dx
  41bbfb:	dec    ebx
  41bbfc:	or     BYTE PTR [ebx],dl
  41bbfe:	lods   eax,DWORD PTR ds:[esi]
  41bbff:	mov    bl,0xbc
  41bc01:	sub    esp,DWORD PTR [ebx]
  41bc03:	cmp    ecx,ebx
  41bc05:	leave  
  41bc06:	(bad)  
  41bc07:	and    al,0x72
  41bc09:	or     BYTE PTR [ebx-0x4b],bl
  41bc0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc0d:	mov    al,ds:0xbd8f00c9
  41bc12:	sbb    eax,0xd3cb1c46
  41bc17:	adc    cl,dl
  41bc19:	xor    DWORD PTR [eax+0x1dd7689c],esp
  41bc1f:	xchg   dh,bl
  41bc21:	xor    esi,DWORD PTR [ecx-0xf]
  41bc24:	lock jmp 0x6957:0xe0548f41
  41bc2c:	retf   
  41bc2d:	js     0x41bca5
  41bc2f:	enter  0x804e,0xfb
  41bc33:	ss mov edx,0xfc98d40d
  41bc39:	js     0x41bbe6
  41bc3b:	loop   0x41bc4d
  41bc3d:	dec    edx
  41bc3e:	adc    al,0x15
  41bc40:	xchg   DWORD PTR [ebp+0x39],ebp
  41bc43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc44:	mov    al,ds:0x4e1c2ed7
  41bc49:	ins    BYTE PTR es:[edi],dx
  41bc4a:	pop    esp
  41bc4b:	dec    DWORD PTR [ebx]
  41bc4d:	imul   esp,DWORD PTR [ecx+0x33],0x56
  41bc51:	(bad)  
  41bc52:	and    DWORD PTR [ebp-0x73],esi
  41bc55:	pop    ecx
  41bc56:	aad    0x25
  41bc58:	dec    eax
  41bc59:	cli    
  41bc5a:	jge    0x41bc6b
  41bc5c:	adc    dh,ah
  41bc5e:	pop    eax
  41bc5f:	push   eax
  41bc60:	outs   dx,BYTE PTR ds:[esi]
  41bc61:	lds    esp,FWORD PTR [edx]
  41bc63:	cmc    
  41bc64:	pushf  
  41bc65:	cmp    ah,bh
  41bc67:	lds    esi,FWORD PTR [esp+ecx*1-0x251f9595]
  41bc6e:	jne    0x41bc9f
  41bc70:	cmp    BYTE PTR [edi-0xea6ceb1],dh
  41bc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc77:	aas    
  41bc78:	call   0xf22ce9e9
  41bc7d:	test   al,dl
  41bc7f:	loope  0x41bca9
  41bc81:	pop    es
  41bc82:	jne    0x41bc26
  41bc84:	or     DWORD PTR [edx+0x7538fb4b],0x37
  41bc8b:	push   ss
  41bc8c:	mov    dl,0x19
  41bc8e:	jecxz  0x41bc20
  41bc90:	pop    esp
  41bc91:	std    
  41bc92:	test   DWORD PTR [ecx-0x59],esp
  41bc95:	pop    edx
  41bc96:	mov    ebx,0x9fcdef11
  41bc9b:	(bad)  
  41bc9c:	sbb    DWORD PTR [edi+eax*2],eax
  41bc9f:	out    dx,al
  41bca0:	out    0x1e,eax
  41bca2:	test   eax,0x7b039aa
  41bca7:	and    ax,0x5e37
  41bcab:	mov    ah,0x2f
  41bcad:	inc    esp
  41bcae:	sub    al,0x4a
  41bcb0:	add    DWORD PTR [ebx-0x4e],esi
  41bcb3:	and    al,0xcc
  41bcb5:	les    ebp,FWORD PTR [edx+0x4d]
  41bcb8:	es mov esi,0xfce668c7
  41bcbe:	and    al,0x66
  41bcc0:	stos   DWORD PTR es:[edi],eax
  41bcc1:	mov    esi,0xd1966b45
  41bcc6:	xchg   DWORD PTR [edi+0x4d],ecx
  41bcc9:	lahf   
  41bcca:	(bad)  
  41bccb:	push   cs
  41bccc:	arpl   WORD PTR [ebx-0x10bb6fd8],di
  41bcd2:	mov    ds:0xb3acd222,eax
  41bcd7:	or     DWORD PTR [ebx],ebx
  41bcd9:	pushf  
  41bcda:	xchg   dl,al
  41bcdc:	mov    ds:0xbcbbd31e,eax
  41bce1:	mov    eax,ds:0x2ecc8ed7
  41bce6:	sub    BYTE PTR [esi-0x8],0x1e
  41bcea:	in     al,0x22
  41bcec:	and    DWORD PTR [edi+0x533a97be],esi
  41bcf2:	mov    ecx,0x4387524f
  41bcf7:	or     bl,BYTE PTR [edx+0x4ad89d11]
  41bcfd:	fwait
  41bcfe:	dec    esi
  41bcff:	add    BYTE PTR [edi],0xc4
  41bd02:	mov    ebp,0xdc150358
  41bd07:	bnd call 0x7aab69ff
  41bd0d:	sbb    eax,0xa03fc0a6
  41bd12:	xchg   DWORD PTR ds:0x8bdfe02f,ebx
  41bd18:	jp     0x41bccf
  41bd1a:	xor    BYTE PTR [edi-0x6a],bl
  41bd1d:	int    0x85
  41bd1f:	sbb    BYTE PTR [edx],ch
  41bd21:	fistp  QWORD PTR [ebx+ebx*2-0x74]
  41bd25:	int3   
  41bd26:	xchg   BYTE PTR ds:0x1f4759e5,bl
  41bd2c:	push   esp
  41bd2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd2e:	stos   DWORD PTR es:[edi],eax
  41bd2f:	jno    0x41bd84
  41bd31:	jno    0x41bcbc
  41bd33:	outs   dx,BYTE PTR ds:[esi]
  41bd34:	mov    es,WORD PTR [eax-0x10a0af91]
  41bd3a:	mov    ecx,0x4bdff94e
  41bd3f:	pop    edx
  41bd40:	cli    
  41bd41:	int    0xb
  41bd43:	cmp    al,0x11
  41bd45:	xchg   ecx,eax
  41bd46:	nop
  41bd47:	scas   eax,DWORD PTR es:[edi]
  41bd48:	sbb    BYTE PTR [esi-0x38],dh
  41bd4b:	repz cmp eax,0x5965c3d4
  41bd51:	xchg   BYTE PTR [eax-0x9a5031f],dl
  41bd57:	lahf   
  41bd58:	add    eax,0xc3ad0bcc
  41bd5d:	aas    
  41bd5e:	cmc    
  41bd5f:	jne    0x41bd01
  41bd61:	xchg   DWORD PTR [esi],ebp
  41bd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd64:	or     BYTE PTR [ecx],cl
  41bd66:	ret    0x41ef
  41bd69:	cmp    bh,BYTE PTR [esi-0x1e]
  41bd6c:	adc    BYTE PTR ds:0x42e6a519,0x57
  41bd73:	cvtdq2ps xmm5,xmm5
  41bd76:	test   al,0x23
  41bd78:	inc    ecx
  41bd79:	jnp    0x41bd90
  41bd7b:	jb     0x41bd7b
  41bd7d:	gs jbe 0x41bda6
  41bd80:	mov    BYTE PTR [edi+ebp*4-0x49],bl
  41bd84:	xor    ecx,0x2d
  41bd87:	fcomp  QWORD PTR [ebp+0x68]
  41bd8a:	adc    al,0x91
  41bd8c:	cmp    esi,eax
  41bd8e:	mov    eax,ds:0x59759da2
  41bd93:	or     esp,edx
  41bd95:	daa    
  41bd96:	(bad)  
  41bd97:	loope  0x41bd5a
  41bd99:	xchg   DWORD PTR [ebx],ecx
  41bd9b:	clc    
  41bd9c:	es clc 
  41bd9e:	pushf  
  41bd9f:	(bad)  
  41bda0:	cmp    BYTE PTR [edi+0x15],dh
  41bda3:	and    edx,DWORD PTR [edi]
  41bda5:	xor    bh,BYTE PTR [ebp-0x4e80d33c]
  41bdab:	test   BYTE PTR [esp+eiz*2+0x23],cl
  41bdaf:	mov    WORD PTR ds:0xccbbaa53,fs
  41bdb5:	inc    esp
  41bdb6:	jmp    0x4389:0x4d11
  41bdbc:	outs   dx,BYTE PTR ds:[esi]
  41bdbd:	xchg   edx,eax
  41bdbe:	mov    ah,0x26
  41bdc0:	mov    ecx,0xcfd66787
  41bdc5:	iret   
  41bdc6:	mov    eax,0x33ff25ce
  41bdcb:	adc    BYTE PTR [ebp+0x5f],cl
  41bdce:	lahf   
  41bdcf:	inc    esi
  41bdd0:	ins    DWORD PTR es:[edi],dx
  41bdd1:	sbb    al,0x4a
  41bdd3:	sbb    al,0x3f
  41bdd5:	inc    esi
  41bdd6:	loop   0x41be27
  41bdd8:	push   ebx
  41bdd9:	sar    DWORD PTR ds:0x5fd2c366,1
  41bddf:	add    BYTE PTR [eax-0x635ecdea],0x6f
  41bde6:	xchg   edi,eax
  41bde7:	xor    bl,BYTE PTR [ebp-0x3]
  41bdea:	outs   dx,BYTE PTR ds:[esi]
  41bdeb:	imul   edi,DWORD PTR [ebx-0x13],0x69
  41bdef:	sbb    al,0x51
  41bdf1:	jl     0x41be0a
  41bdf3:	add    DWORD PTR [eax+0x59],ebp
  41bdf6:	clc    
  41bdf7:	sub    bl,BYTE PTR [eax+0x1f]
  41bdfa:	jne    0x41bdf6
  41bdfc:	sbb    BYTE PTR [ebx+ecx*4+0x571e3b3],dh
  41be03:	and    al,0x8f
  41be05:	and    DWORD PTR [esp+edi*2],edx
  41be08:	ret    0x9cb0
  41be0b:	push   ecx
  41be0c:	push   ds
  41be0d:	jge    0x41be01
  41be0f:	add    edi,esi
  41be11:	retf   0x2387
  41be14:	sub    al,0x81
  41be16:	adc    BYTE PTR [ebx],al
  41be18:	add    DWORD PTR [eax],esi
  41be1a:	jbe    0x41be79
  41be1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1d:	and    al,ch
  41be1f:	sar    cl,0x2b
  41be22:	mov    eax,ds:0xcfb901ea
  41be27:	(bad)  
  41be28:	sbb    eax,0x3e2dc884
  41be2d:	ret    
  41be2e:	mov    eax,0xe8c22daf
  41be33:	inc    ebp
  41be34:	lock scas eax,DWORD PTR es:[di]
  41be37:	cmp    ecx,DWORD PTR [esi-0x46]
  41be3a:	fiadd  DWORD PTR [edi-0x46191410]
  41be40:	sbb    BYTE PTR [esi-0x5dea35ec],ch
  41be46:	js     0x41be0b
  41be48:	jo     0x41bea4
  41be4a:	cmp    al,0xa1
  41be4c:	test   al,0xf0
  41be4e:	daa    
  41be4f:	pop    ds
  41be50:	sbb    eax,0xb7d55a63
  41be55:	nop
  41be56:	(bad)  
  41be57:	cli    
  41be58:	add    BYTE PTR [ecx],ch
  41be5a:	pop    esp
  41be5b:	jne    0x41be60
  41be5d:	daa    
  41be5e:	add    ah,BYTE PTR [ebp+0x2c]
  41be61:	outs   dx,BYTE PTR ds:[esi]
  41be62:	jnp    0x41be3b
  41be64:	sbb    al,0x6f
  41be66:	mov    dh,0x5e
  41be68:	adc    esp,0x3b1df0e7
  41be6e:	add    ebx,DWORD PTR [ebx-0x3fe65bb7]
  41be74:	std    
  41be75:	(bad)  
  41be76:	sub    ecx,ecx
  41be78:	cmp    ebx,DWORD PTR [edx-0x4006fb92]
  41be7e:	sub    eax,0x14428206
  41be83:	dec    eax
  41be84:	mul    BYTE PTR [edi-0x58e5264b]
  41be8a:	mov    cs:0xb429b1b5,al
  41be90:	pop    ecx
  41be91:	loop   0x41be4f
  41be93:	push   fs
  41be95:	cli    
  41be96:	push   ebx
  41be97:	idiv   BYTE PTR [ecx-0x5b]
  41be9a:	dec    ebp
  41be9b:	xor    al,BYTE PTR [edx-0x19]
  41be9e:	inc    ebp
  41be9f:	in     al,dx
  41bea0:	mov    esp,0xa9c7a2b4
  41bea5:	(bad)  
  41bea6:	fst    st(2)
  41bea8:	call   0x6aa10515
  41bead:	sbb    BYTE PTR [esi+0x74058d95],bh
  41beb3:	inc    ecx
  41beb4:	loop   0x41bed3
  41beb6:	int    0x66
  41beb8:	xor    DWORD PTR [ecx],ebx
  41beba:	push   eax
  41bebb:	dec    esi
  41bebc:	mov    DWORD PTR [edx+0x4b],0xfc36c8e4
  41bec3:	push   edi
  41bec4:	inc    eax
  41bec5:	cli    
  41bec6:	cwde   
  41bec7:	jmp    0x36e3604a
  41becc:	jns    0x41beba
  41bece:	and    al,0x6e
  41bed0:	sbb    DWORD PTR [ecx-0x15],edi
  41bed3:	jnp    0x41bec1
  41bed5:	adc    DWORD PTR [esi+0x43],ecx
  41bed8:	dec    edi
  41bed9:	pop    DWORD PTR [ecx+edi*8]
  41bedc:	mov    ds:0xd39d457f,al
  41bee1:	sbb    BYTE PTR [esi-0x5394aae7],ah
  41bee7:	xchg   DWORD PTR [esi+0x1e],edx
  41beea:	leave  
  41beeb:	lea    ebx,[eax]
  41beed:	adc    esp,DWORD PTR [ebp+0x6471f34d]
  41bef3:	cld    
  41bef4:	add    al,0x96
  41bef6:	popa   
  41bef7:	daa    
  41bef8:	daa    
  41bef9:	xchg   ebx,eax
  41befa:	sub    eax,esi
  41befc:	lods   eax,DWORD PTR ds:[esi]
  41befd:	nop
  41befe:	pop    ecx
  41beff:	add    al,0x87
  41bf01:	pop    es
  41bf02:	mov    ebp,0xefbff12b
  41bf07:	aad    0x17
  41bf09:	dec    eax
  41bf0a:	pop    edi
  41bf0b:	xchg   eax,edi
  41bf0d:	jmp    FWORD PTR [edi]
  41bf0f:	mov    edx,0x9c572aae
  41bf14:	adc    DWORD PTR [ecx],edi
  41bf16:	jns    0x41beb9
  41bf18:	mov    dh,0xcc
  41bf1a:	icebp  
  41bf1b:	add    DWORD PTR [edi+0x26503bdb],esp
  41bf21:	push   0x1ee87d71
  41bf26:	add    DWORD PTR [edi],ebx
  41bf28:	lahf   
  41bf29:	lds    esp,FWORD PTR [eax+0x5db10492]
  41bf2f:	fnstcw WORD PTR [ebx-0xe21f6d7]
  41bf35:	shr    BYTE PTR [ecx],1
  41bf37:	jnp    0x41bef3
  41bf39:	div    DWORD PTR [eax]
  41bf3b:	pop    es
  41bf3c:	xchg   ebx,eax
  41bf3d:	xchg   edx,eax
  41bf3e:	and    eax,0x773c97cc
  41bf43:	mov    ah,0x66
  41bf45:	xchg   DWORD PTR ds:0x6c61386a,edx
  41bf4b:	xchg   esi,eax
  41bf4c:	dec    edi
  41bf4d:	add    al,0xf5
  41bf4f:	js     0x41bf4a
  41bf51:	lock inc ebp
  41bf53:	out    0x8,al
  41bf55:	sbb    DWORD PTR [ebx+edx*2-0x3f6a80d9],0x63fba9b6
  41bf60:	mov    ah,0x3f
  41bf62:	xlat   BYTE PTR ds:[ebx]
  41bf63:	test   BYTE PTR [ebx+0xb],cl
  41bf66:	adc    DWORD PTR [eax-0x4b9e888f],ecx
  41bf6c:	(bad)  
  41bf6d:	aad    0xd9
  41bf6f:	push   cs
  41bf70:	popf   
  41bf71:	jp     0x41bfdd
  41bf73:	stos   BYTE PTR es:[edi],al
  41bf74:	xor    ah,BYTE PTR [edx+ebp*2+0x5d8ad334]
  41bf7b:	aas    
  41bf7c:	mov    dl,0xe2
  41bf7e:	dec    esi
  41bf7f:	aad    0xdd
  41bf81:	push   ds
  41bf82:	jns    0x41bf06
  41bf84:	pop    ss
  41bf85:	sub    BYTE PTR [ebx+eax*4],al
  41bf88:	addr16 sbb edi,eax
  41bf8b:	add    eax,0x5bff1e2e
  41bf90:	les    esi,FWORD PTR [edi-0x6f3ec95b]
  41bf96:	jp     0x41bfab
  41bf98:	hlt    
  41bf99:	xor    DWORD PTR [ebx+0x2e3c81a8],0x1e510a87
  41bfa3:	fstp   QWORD PTR [ecx+0x77]
  41bfa6:	nop
  41bfa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa8:	mov    cl,0xd7
  41bfaa:	sub    eax,0x4563f49e
  41bfaf:	jg     0x41bf37
  41bfb1:	out    dx,eax
  41bfb2:	test   BYTE PTR ds:[ebx],bh
  41bfb5:	mov    ds:0xc7c8dbca,al
  41bfba:	add    bh,BYTE PTR [edx-0x59]
  41bfbd:	inc    esi
  41bfbe:	mov    BYTE PTR [ecx-0x4d],ch
  41bfc1:	stos   BYTE PTR es:[edi],al
  41bfc2:	jmp    0x43fb88e5
  41bfc7:	add    dl,bl
  41bfc9:	call   0x18a0:0xd2101c22
  41bfd0:	cld    
  41bfd1:	fs das 
  41bfd3:	sbb    eax,DWORD PTR [ecx+eax*4-0x500641]
  41bfda:	xor    al,0x19
  41bfdc:	xchg   ebp,eax
  41bfdd:	inc    eax
  41bfde:	mov    ah,bh
  41bfe0:	push   0xa4e2364b
  41bfe5:	call   0xe538:0x6fc22a68
  41bfec:	(bad)  
  41bfed:	ror    DWORD PTR [eax+edx*2],cl
  41bff0:	loope  0x41bfec
  41bff2:	dec    eax
  41bff3:	pop    edx
  41bff4:	lahf   
  41bff5:	cli    
  41bff6:	cmp    esp,DWORD PTR [ebx+esi*2]
  41bff9:	jae    0x41c040
  41bffb:	lock add al,0x60
  41bffe:	repnz cdq 
  41c000:	mov    al,ds:0x6aa145b9
  41c005:	je     0x41bfad
  41c007:	(bad)  
  41c008:	xchg   ebx,eax
  41c009:	dec    ebx
  41c00a:	les    ebp,FWORD PTR [esi+0x2a]
  41c00d:	mov    ebp,0xe59d5a0
  41c012:	cmp    esi,edx
  41c014:	int3   
  41c015:	das    
  41c016:	loopne 0x41c03d
  41c018:	lds    esp,FWORD PTR [esi-0x34]
  41c01b:	call   0x78ac9df9
  41c020:	and    dl,BYTE PTR [esi]
  41c022:	scas   eax,DWORD PTR es:[edi]
  41c023:	scas   eax,DWORD PTR es:[edi]
  41c024:	fldcw  WORD PTR [eax]
  41c026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c027:	loopne 0x41c06d
  41c029:	popf   
  41c02a:	sbb    al,0xee
  41c02c:	loop   0x41bfbe
  41c02e:	cmc    
  41c02f:	shl    BYTE PTR [edi+0x5d],cl
  41c032:	inc    esi
  41c033:	std    
  41c034:	add    eax,0xb8d5eceb
  41c039:	sbb    al,0x60
  41c03b:	pop    ebx
  41c03c:	stos   BYTE PTR es:[edi],al
  41c03d:	lock mov edi,0xbd0fd70e
  41c043:	mov    al,ah
  41c045:	mov    esi,0xba1b2227
  41c04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c04b:	inc    ecx
  41c04c:	sbb    BYTE PTR [edi-0x982a5ed],ah
  41c052:	fdiv   DWORD PTR [ebp+0x17ffbb41]
  41c058:	xor    ch,ah
  41c05a:	mov    esp,0xf8d3d2b7
  41c05f:	mov    ebp,0x23ec4d40
  41c064:	adc    eax,0xe131a9bd
  41c069:	add    al,0x2b
  41c06b:	in     eax,dx
  41c06c:	sbb    BYTE PTR [edi+0x6c61df57],dh
  41c072:	call   0xcea2bdd2
  41c077:	mov    ah,0x5f
  41c079:	jl     0x41c003
  41c07b:	cld    
  41c07c:	mov    bh,0x9c
  41c07e:	add    BYTE PTR [eax],al
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	jns    0x41c090
  41c090:	jmp    0x41c0b9
  41c092:	jge    0x41c0d0
  41c094:	add    DWORD PTR [eax],eax
  41c096:	hlt    
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [esi],ah
  41c09b:	pusha  
  41c09c:	dec    esi
  41c09d:	push   ds
  41c09e:	ffreep st(4)
  41c0a0:	push   ds
  41c0a1:	jp     0x41c074
  41c0a3:	in     eax,0x7f
  41c0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0a6:	xor    eax,0xc22f8a8d
  41c0ab:	pop    es
  41c0ac:	stos   BYTE PTR es:[edi],al
  41c0ad:	mov    ds:0xbc49f4a3,al
  41c0b2:	push   edi
  41c0b3:	enter  0x59f4,0x58
  41c0b7:	test   esi,ebx
  41c0b9:	push   es
  41c0ba:	test   BYTE PTR [ecx+0x4237104b],0xe2
  41c0c1:	adc    ch,BYTE PTR [ebp+0x1f]
  41c0c4:	mov    al,ds:0x520e1bf2
  41c0c9:	imul   edi,DWORD PTR [ebx-0x4a5dca21],0xffffffb0
  41c0d0:	jp     0x41c0c4
  41c0d2:	jmp    0xa8810b04
  41c0d7:	jle    0x41c0bb
  41c0d9:	(bad)  
  41c0da:	lds    ebx,FWORD PTR [eax+0x1]
  41c0dd:	pop    ebx
  41c0de:	rol    DWORD PTR [eax],0xb0
  41c0e1:	cmp    eax,0xb1a15096
  41c0e6:	or     eax,edx
  41c0e8:	test   dl,cl
  41c0ea:	and    bl,BYTE PTR [ebx]
  41c0ec:	inc    edi
  41c0ed:	jge    0x41c0f3
  41c0ef:	mov    bh,0xc3
  41c0f1:	jmp    0x1ab1:0x6b3ccdcc
  41c0f8:	call   0x6d299bd0
  41c0fd:	add    BYTE PTR [esp+ebx*8-0x39],bl
  41c101:	leave  
  41c102:	ret    0xd3ef
  41c105:	lds    esi,FWORD PTR [ebp-0x5ee46c4]
  41c10b:	iret   
  41c10c:	and    BYTE PTR [ebx],0x93
  41c10f:	push   ebp
  41c110:	stc    
  41c111:	pop    edx
  41c112:	jp     0x41c0c9
  41c114:	in     eax,0xb2
  41c116:	gs popa 
  41c118:	out    0x8d,al
  41c11a:	inc    ebx
  41c11b:	out    0x28,eax
  41c11d:	add    BYTE PTR [ebx-0x27],al
  41c120:	and    al,0xcf
  41c122:	jno    0x41c154
  41c124:	stos   DWORD PTR es:[edi],eax
  41c125:	xchg   esp,eax
  41c126:	add    edi,esp
  41c128:	or     al,0x57
  41c12a:	dec    esp
  41c12b:	adc    ebp,eax
  41c12d:	or     bl,al
  41c12f:	mov    ds:0xac03c2bd,eax
  41c134:	sub    al,0x63
  41c136:	lea    esp,[ecx+0xfe74d1d]
  41c13c:	add    DWORD PTR [ebx],ecx
  41c13e:	mov    bl,0xda
  41c140:	in     eax,0x5e
  41c142:	jge    0x41c129
  41c144:	cmp    cl,bh
  41c146:	mov    ds:0x5ce298a1,eax
  41c14b:	mov    edx,0x1ea3b355
  41c150:	nop
  41c151:	mov    ds:0x62c8ff1a,al
  41c157:	mov    eax,0xcc98f443
  41c15c:	dec    esi
  41c15d:	repz add eax,edx
  41c160:	xor    ebp,esp
  41c162:	inc    esi
  41c163:	dec    ecx
  41c164:	hlt    
  41c165:	mov    eax,0x8e269108
  41c16a:	adc    eax,0xab4df7c
  41c16f:	fsubr  DWORD PTR [eax]
  41c171:	cmp    BYTE PTR [eax+0x3313f9bc],ch
  41c177:	jecxz  0x41c1d8
  41c179:	or     eax,0xee053edc
  41c17e:	push   eax
  41c17f:	xchg   DWORD PTR [eax-0x5078e1d8],ebp
  41c185:	dec    eax
  41c186:	inc    ebp
  41c187:	mov    dl,0xf0
  41c189:	into   
  41c18a:	cmp    dl,BYTE PTR [esi+edx*1-0x745ee28e]
  41c191:	scas   eax,DWORD PTR es:[edi]
  41c192:	cwde   
  41c193:	addr16 inc ecx
  41c195:	mov    dh,0xd6
  41c197:	ja     0x41c167
  41c199:	and    eax,0x9e9d3860
  41c19e:	fdivr  st(0),st
  41c1a0:	and    al,0xe0
  41c1a2:	mov    cl,0x3f
  41c1a4:	cld    
  41c1a5:	mov    edx,0x1359894c
  41c1aa:	fstp   DWORD PTR [edi+edi*2]
  41c1ad:	dec    ecx
  41c1ae:	mov    ds:0xec45f680,al
  41c1b3:	jbe    0x41c13b
  41c1b5:	push   es
  41c1b6:	push   esi
  41c1b7:	push   ebx
  41c1b8:	arpl   di,si
  41c1ba:	adc    al,0xf4
  41c1bc:	scas   eax,DWORD PTR es:[edi]
  41c1bd:	rcl    DWORD PTR [edx+eiz*1],cl
  41c1c0:	(bad)  
  41c1c1:	xlat   BYTE PTR ds:[ebx]
  41c1c2:	(bad)  
  41c1c3:	call   0xc910ab47
  41c1c8:	sub    dh,bl
  41c1ca:	jmp    0xab7c:0x644736f5
  41c1d1:	(bad)  
  41c1d2:	out    dx,eax
  41c1d3:	xor    eax,0xc0c1b82d
  41c1d8:	nop
  41c1d9:	pop    ecx
  41c1da:	xor    dl,al
  41c1dc:	das    
  41c1dd:	data16 lahf 
  41c1df:	sahf   
  41c1e0:	call   0xd493:0xf5d01e4d
  41c1e7:	adc    DWORD PTR [ebx-0x177331a9],ebx
  41c1ed:	popf   
  41c1ee:	pop    ebp
  41c1ef:	jae    0x41c19f
  41c1f1:	dec    ebp
  41c1f2:	fstp   QWORD PTR [edi-0x72]
  41c1f5:	ja     0x41c246
  41c1f7:	xor    eax,0xde3223e
  41c1fc:	push   cs
  41c1fd:	loope  0x41c191
  41c1ff:	ins    DWORD PTR es:[edi],dx
  41c200:	fcmovne st,st(6)
  41c202:	pop    ss
  41c203:	xor    BYTE PTR [edi+edx*1+0x28],cl
  41c207:	cdq    
  41c208:	mov    ecx,0x41757ef1
  41c20d:	test   al,0xa7
  41c20f:	jae    0x41c1d2
  41c211:	rep ins BYTE PTR es:[edi],dx
  41c213:	or     esi,DWORD PTR [edx+0x3ce319dd]
  41c219:	imul   edi,DWORD PTR [esi-0x40],0xffffff83
  41c21d:	jb     0x41c1c0
  41c21f:	pop    eax
  41c220:	mov    WORD PTR [esi],?
  41c222:	test   DWORD PTR [eax+0x510a0796],edi
  41c228:	scas   eax,DWORD PTR es:[edi]
  41c229:	retf   0x1742
  41c22c:	out    dx,eax
  41c22d:	popa   
  41c22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c22f:	jb     0x41c21c
  41c231:	cmp    BYTE PTR [ecx+eiz*8],bl
  41c234:	popa   
  41c235:	and    al,0x6c
  41c237:	add    bl,BYTE PTR [ebx-0x60]
  41c23a:	iret   
  41c23b:	mov    esi,0xfec3f2d
  41c240:	leave  
  41c241:	inc    eax
  41c242:	xchg   ecx,eax
  41c243:	jl     0x41c1fe
  41c245:	leave  
  41c246:	mov    bh,0xf7
  41c248:	jae    0x41c24d
  41c24a:	sub    ah,cl
  41c24c:	push   ss
  41c24d:	popa   
  41c24e:	es ret 
  41c250:	mov    eax,0xee23d0ab
  41c255:	mov    WORD PTR [edx-0x38dd7f26],?
  41c25b:	loope  0x41c2b8
  41c25d:	fsub   st,st(0)
  41c25f:	das    
  41c260:	sub    edi,DWORD PTR ds:0x90096cf1
  41c266:	fcom   DWORD PTR [ebp+0x1cb10483]
  41c26c:	xor    eax,0xecc4c9fd
  41c271:	rep lods eax,DWORD PTR ds:[esi]
  41c273:	scas   al,BYTE PTR es:[edi]
  41c274:	and    dl,BYTE PTR [eax-0x1a]
  41c277:	test   DWORD PTR [edx],esi
  41c279:	iret   
  41c27a:	push   ebx
  41c27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c27c:	je     0x41c2e6
  41c27e:	je     0x41c213
  41c280:	pop    edi
  41c281:	ret    
  41c282:	inc    ebx
  41c283:	push   ss
  41c284:	rcr    eax,1
  41c286:	adc    DWORD PTR [eax-0x5c],ebx
  41c289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c28a:	popa   
  41c28b:	(bad)  [edi-0x65]
  41c28e:	mov    ah,0x84
  41c290:	inc    eax
  41c291:	gs mov ebp,0x18a5a9fe
  41c297:	(bad)  
  41c298:	in     eax,dx
  41c299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c29a:	test   al,0x42
  41c29c:	(bad)  
  41c29d:	mov    esi,0x6718ef9
  41c2a2:	and    DWORD PTR [eax+0x65],ebx
  41c2a5:	bound  edi,QWORD PTR [edi]
  41c2a7:	add    esi,DWORD PTR [edi-0xc]
  41c2aa:	xchg   ecx,eax
  41c2ab:	test   eax,0xb29a21cd
  41c2b0:	push   esp
  41c2b1:	(bad)  
  41c2b2:	fsub   QWORD PTR [edx]
  41c2b4:	push   esi
  41c2b5:	(bad)  
  41c2b7:	adc    edi,DWORD PTR [eax-0x7b455d24]
  41c2bd:	sbb    al,0xc9
  41c2bf:	inc    esp
  41c2c0:	fdivr  QWORD PTR [esi+eax*4]
  41c2c3:	bound  esp,QWORD PTR [ecx-0x69a838b4]
  41c2c9:	push   es
  41c2ca:	jno    0x41c2c0
  41c2cc:	xchg   ecx,eax
  41c2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ce:	rcr    DWORD PTR [ebp+0x31],0xdb
  41c2d2:	out    dx,al
  41c2d3:	xor    eax,0xa75bba89
  41c2d8:	jae    0x41c272
  41c2da:	in     al,dx
  41c2db:	in     al,0x7d
  41c2dd:	mov    eax,0x5c44b4bf
  41c2e2:	add    esp,esi
  41c2e4:	lock cs popf 
  41c2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e8:	ret    0x64c2
  41c2eb:	aam    0x0
  41c2ed:	jno    0x41c2cc
  41c2ef:	xchg   edx,eax
  41c2f0:	xchg   ecx,eax
  41c2f1:	int3   
  41c2f2:	cli    
  41c2f3:	inc    ebp
  41c2f4:	cdq    
  41c2f5:	sbb    bh,al
  41c2f7:	jns    0x41c27f
  41c2f9:	gs call 0xc97e79d0
  41c2ff:	retf   0xcd32
  41c302:	and    DWORD PTR [ebp+0x42],esp
  41c305:	ins    BYTE PTR es:[edi],dx
  41c306:	aaa    
  41c307:	je     0x41c2ff
  41c309:	sar    dh,1
  41c30b:	cwde   
  41c30c:	or     BYTE PTR [esi],dl
  41c30e:	fsubr  DWORD PTR [ecx+0x5c]
  41c311:	push   cs
  41c312:	xor    al,0x14
  41c314:	ret    
  41c315:	dec    ecx
  41c316:	icebp  
  41c317:	scas   al,BYTE PTR es:[edi]
  41c318:	push   eax
  41c319:	sahf   
  41c31a:	mov    dl,0x3
  41c31c:	sub    eax,0x57aa31bc
  41c321:	retf   0xa6d8
  41c324:	add    DWORD PTR [ebx+0x3296a210],edx
  41c32a:	repz add esp,DWORD PTR [ebp-0x7e27f0a3]
  41c331:	std    
  41c332:	and    al,0xcb
  41c334:	pop    esp
  41c335:	sub    DWORD PTR [eax+0x16],edi
  41c338:	push   ds
  41c339:	loopne 0x41c385
  41c33b:	aas    
  41c33c:	js     0x41c3b5
  41c33e:	jmp    0xaa691ec5
  41c343:	(bad)  [esi]
  41c345:	sub    ah,dl
  41c347:	sub    DWORD PTR [edx+ecx*1],edx
  41c34a:	pop    ecx
  41c34b:	sub    dh,BYTE PTR [edx+0x75]
  41c34e:	mov    ds:0x370f1bdf,eax
  41c353:	mov    ds:0xe7ac9ded,al
  41c358:	mov    ebx,0xa5097440
  41c35d:	ja     0x41c383
  41c35f:	jge    0x41c2e2
  41c361:	js     0x41c385
  41c363:	pop    ss
  41c364:	fwait
  41c365:	int3   
  41c366:	jno    0x41c387
  41c368:	lods   al,BYTE PTR ds:[esi]
  41c369:	adc    eax,0x62d8dcf9
  41c36e:	mov    dl,0xf8
  41c370:	and    BYTE PTR [ecx+0x3a36708d],dh
  41c376:	ins    BYTE PTR es:[edi],dx
  41c377:	cmp    edi,0x56
  41c37a:	jecxz  0x41c31f
  41c37c:	popf   
  41c37d:	sti    
  41c37e:	or     al,0x80
  41c380:	(bad)  
  41c381:	xchg   ebp,eax
  41c382:	push   eax
  41c383:	and    ecx,eax
  41c385:	sbb    esp,eax
  41c387:	mov    ecx,0x45645d3b
  41c38c:	fdiv   DWORD PTR [ebp+edx*4+0x63]
  41c390:	or     BYTE PTR [ecx-0x871b09d],cl
  41c396:	in     eax,0x1b
  41c398:	cmp    cl,BYTE PTR [ecx+0x25]
  41c39b:	(bad)  
  41c39c:	fidiv  DWORD PTR [esi+0x2b12b922]
  41c3a2:	inc    esp
  41c3a3:	loop   0x41c3f8
  41c3a5:	and    ah,dl
  41c3a7:	and    DWORD PTR [edi],ebp
  41c3a9:	test   al,bh
  41c3ab:	inc    edi
  41c3ac:	or     DWORD PTR [esi],ebx
  41c3ae:	sbb    ch,0x7d
  41c3b1:	in     eax,dx
  41c3b2:	inc    ecx
  41c3b3:	in     al,dx
  41c3b4:	retf   0x5560
  41c3b7:	jmp    0xcd12:0x969d0fb6
  41c3be:	fsubr  st(7),st
  41c3c0:	mov    ah,BYTE PTR [esi-0x5e]
  41c3c3:	or     DWORD PTR [ecx-0xc29b8c2],ebx
  41c3c9:	(bad)  
  41c3ca:	adc    al,0xd5
  41c3cc:	xchg   ebx,eax
  41c3cd:	fidiv  DWORD PTR [edx-0x6a]
  41c3d0:	adc    al,0x52
  41c3d2:	fisubr DWORD PTR [edi+eax*4]
  41c3d5:	jbe    0x41c418
  41c3d7:	sub    BYTE PTR [eax+0x2978e459],ah
  41c3dd:	adc    BYTE PTR [ecx-0x7f],bh
  41c3e0:	cmc    
  41c3e1:	sti    
  41c3e2:	leave  
  41c3e3:	repnz sbb ch,BYTE PTR [ecx+0x40605156]
  41c3ea:	test   al,0xc6
  41c3ec:	add    ebx,DWORD PTR [ebx-0x5e]
  41c3ef:	sti    
  41c3f0:	and    DWORD PTR [ecx],ecx
  41c3f2:	add    al,0x50
  41c3f4:	and    BYTE PTR [esi+0x37],al
  41c3f7:	pop    edx
  41c3f8:	xor    eax,0x917ce5ee
  41c3fd:	cmp    DWORD PTR [ebp+eax*1-0x42],esp
  41c401:	add    bl,BYTE PTR [edi+0x30]
  41c404:	mov    edi,DWORD PTR [ecx]
  41c406:	bound  esi,QWORD PTR [ecx+0x16]
  41c409:	scas   al,BYTE PTR es:[edi]
  41c40a:	or     esp,DWORD PTR [esp+ebp*1+0x158eeabe]
  41c411:	xchg   BYTE PTR [ebx],bh
  41c413:	cmc    
  41c414:	aas    
  41c415:	dec    ebx
  41c416:	cmp    eax,0x82911c19
  41c41b:	inc    esi
  41c41c:	xchg   esp,eax
  41c41d:	aas    
  41c41e:	aam    0xd8
  41c420:	xchg   ebx,eax
  41c421:	push   ecx
  41c422:	aam    0x41
  41c424:	retf   
  41c425:	dec    eax
  41c426:	push   0x58
  41c428:	push   0xeb49a081
  41c42d:	mov    DWORD PTR [edi+0x2c],ebp
  41c430:	xlat   BYTE PTR ds:[ebx]
  41c431:	inc    esi
  41c432:	mov    edi,0x91c8b130
  41c437:	dec    esi
  41c438:	shl    BYTE PTR [edx-0x66a539a5],cl
  41c43e:	cwde   
  41c43f:	lods   eax,DWORD PTR ds:[esi]
  41c440:	xchg   esi,eax
  41c441:	jbe    0x41c410
  41c443:	cmp    BYTE PTR [eax-0x41],ch
  41c446:	leave  
  41c447:	push   ebx
  41c448:	jmp    0x41c489
  41c44a:	rcr    BYTE PTR [edx],0xda
  41c44d:	out    dx,eax
  41c44e:	mov    fs,WORD PTR [esi+0x7206df14]
  41c454:	sahf   
  41c455:	outs   dx,DWORD PTR ds:[esi]
  41c456:	ret    
  41c457:	cdq    
  41c458:	jo     0x41c4c9
  41c45a:	fucomi st,st(5)
  41c45c:	xchg   DWORD PTR [eax-0x37c06c34],ebp
  41c462:	add    eax,0x17148c3
  41c467:	adc    DWORD PTR [ebp-0x160a6a63],ebx
  41c46d:	(bad)  
  41c46e:	jo     0x41c4b1
  41c470:	push   edx
  41c471:	jmp    0x41c441
  41c473:	or     al,0x46
  41c475:	fcomp  QWORD PTR [edx+0x39]
  41c478:	fidivr DWORD PTR [eax+ecx*1-0x4fb2bfe6]
  41c47f:	aaa    
  41c480:	test   al,0x7a
  41c482:	imul   BYTE PTR [ebx-0x4]
  41c485:	(bad)  
  41c486:	adc    BYTE PTR [edi],dl
  41c488:	sbb    eax,0x990256b9
  41c48d:	inc    eax
  41c48e:	daa    
  41c48f:	fisubr WORD PTR [edx+0x3d]
  41c492:	sar    ecx,cl
  41c494:	out    0xf1,al
  41c496:	jns    0x41c4a4
  41c498:	add    eax,0xc62a8804
  41c49d:	lahf   
  41c49e:	xchg   edx,eax
  41c49f:	add    eax,DWORD PTR [ebx+0x1cc0d65]
  41c4a5:	rcr    BYTE PTR [ecx],0xfb
  41c4a8:	jo     0x41c456
  41c4aa:	dec    edx
  41c4ab:	dec    esi
  41c4ac:	sti    
  41c4ad:	pop    edx
  41c4ae:	and    edx,edi
  41c4b0:	cmp    al,0x5f
  41c4b2:	mov    al,ds:0x238ddaf6
  41c4b7:	(bad)  
  41c4b8:	adc    DWORD PTR [esi],ebx
  41c4ba:	jmp    0x41c49d
  41c4bc:	sub    al,0x4f
  41c4be:	sbb    esp,DWORD PTR [esi-0x1d]
  41c4c1:	and    DWORD PTR [esi+0x3db695c5],eax
  41c4c7:	int    0x5e
  41c4c9:	dec    ebx
  41c4ca:	dec    esp
  41c4cb:	adc    eax,0x29cc1f35
  41c4d0:	shl    ch,0x9f
  41c4d3:	xor    DWORD PTR cs:0xc12cfd01,ebx
  41c4da:	ret    
  41c4db:	and    edi,DWORD PTR [edi+edx*4-0x4d]
  41c4df:	mov    edi,0xe89c0067
  41c4e4:	xchg   edx,eax
  41c4e5:	inc    eax
  41c4e6:	(bad)  
  41c4e7:	imul   ebx,edx,0xffffffdb
  41c4ea:	aam    0x43
  41c4ec:	xor    DWORD PTR [ebp-0x699d61b3],ebp
  41c4f2:	push   ss
  41c4f3:	mov    cs,WORD PTR [ecx]
  41c4f5:	lahf   
  41c4f6:	jge    0x41c522
  41c4f8:	mov    al,0x0
  41c4fa:	dec    ebx
  41c4fb:	jnp    0x41c546
  41c4fd:	mov    dh,0xb
  41c4ff:	adc    eax,0xa587c519
  41c504:	gs cwde 
  41c506:	push   ecx
  41c507:	imul   ebx,DWORD PTR es:[ebx-0x753bfb47],0xffffffc4
  41c50f:	mov    dl,0x1c
  41c511:	or     BYTE PTR [edi+0x2499cb62],al
  41c517:	in     al,0xd2
  41c519:	xchg   edi,eax
  41c51a:	mov    WORD PTR ss:[ebx+0x47],es
  41c51e:	inc    eax
  41c51f:	rcl    BYTE PTR [ecx+0x51],1
  41c522:	sub    al,0x1e
  41c524:	or     eax,0xe5bec3e0
  41c529:	mov    edi,0xf859bae6
  41c52e:	retf   0x24fa
  41c531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c532:	pusha  
  41c533:	hlt    
  41c534:	dec    esp
  41c535:	xchg   esp,eax
  41c536:	xor    DWORD PTR [eax],esi
  41c538:	fadd   QWORD PTR [edx]
  41c53a:	mov    dl,ch
  41c53c:	call   0xd224:0x40cb8c26
  41c543:	outs   dx,DWORD PTR ds:[esi]
  41c544:	mov    bl,0x7b
  41c546:	adc    eax,0xde0cd0b9
  41c54b:	jge    0x41c562
  41c54d:	adc    dl,BYTE PTR [ebx]
  41c54f:	inc    ebp
  41c550:	fild   WORD PTR [eax+0x5723a083]
  41c556:	mov    dh,0xe6
  41c558:	sub    al,0xde
  41c55a:	in     eax,dx
  41c55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c55c:	mov    bh,0x6a
  41c55e:	jnp    0x41c592
  41c560:	sbb    al,0x4e
  41c562:	cmp    cl,BYTE PTR ds:0x39524e5a
  41c568:	pop    ebp
  41c569:	js     0x41c506
  41c56b:	mov    eax,0xc1004eac
  41c570:	jl     0x41c529
  41c572:	dec    esp
  41c573:	mov    edi,0x131394fc
  41c578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c579:	pop    eax
  41c57a:	xchg   edi,eax
  41c57b:	xchg   bl,bh
  41c57d:	int    0x45
  41c57f:	adc    al,0x44
  41c581:	repnz push edx
  41c583:	imul   eax,DWORD PTR [esi],0x3c
  41c586:	pop    ebx
  41c587:	ins    BYTE PTR es:[edi],dx
  41c588:	cli    
  41c589:	jns    0x41c527
  41c58b:	js     0x41c595
  41c58d:	enter  0x0,0x0
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	push   ss
  41c59f:	es dec ebx
  41c5a1:	loop   0x41c614
  41c5a3:	inc    ecx
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	hlt    
  41c5a7:	add    al,0x0
  41c5a9:	add    BYTE PTR [edx+0x1],ch
  41c5ac:	xor    esp,edx
  41c5ae:	mov    ecx,0x70d9ebcc
  41c5b3:	iret   
  41c5b4:	shr    esp,1
  41c5b6:	xchg   eax,esp
  41c5b8:	add    ch,BYTE PTR [ecx-0x16d88656]
  41c5be:	int    0x5f
  41c5c0:	cli    
  41c5c1:	mov    al,0xc6
  41c5c3:	inc    esp
  41c5c4:	push   ebx
  41c5c5:	fnsave [edi-0x1a]
  41c5c8:	pop    ss
  41c5c9:	mov    edi,0xbc6265ad
  41c5ce:	leave  
  41c5cf:	outs   dx,BYTE PTR ds:[esi]
  41c5d0:	push   ecx
  41c5d1:	adc    esi,0x74
  41c5d4:	data16 jo 0x41c612
  41c5d7:	cmp    al,0xcc
  41c5d9:	sub    eax,0x33278e59
  41c5de:	jo     0x41c568
  41c5e0:	and    eax,edx
  41c5e2:	and    edx,DWORD PTR [ebx]
  41c5e4:	jg     0x41c5ef
  41c5e6:	retf   
  41c5e7:	fstp   TBYTE PTR [edi]
  41c5e9:	(bad)  
  41c5ea:	repz dec eax
  41c5ec:	clc    
  41c5ed:	iret   
  41c5ee:	ret    
  41c5ef:	repz (bad) 
  41c5f1:	cmp    al,0x6
  41c5f3:	iret   
  41c5f4:	inc    edx
  41c5f5:	sub    dl,bl
  41c5f7:	aaa    
  41c5f8:	sbb    DWORD PTR [edx+0x12],ecx
  41c5fb:	cmp    ch,BYTE PTR [eax+0x1]
  41c5fe:	retf   0x8dca
  41c601:	dec    ebx
  41c602:	test   DWORD PTR [eax],edx
  41c604:	test   DWORD PTR ds:0x14ed68f3,0xddbc77a3
  41c60e:	push   eax
  41c60f:	pop    es
  41c610:	inc    ebp
  41c611:	xchg   esi,eax
  41c612:	xchg   edx,eax
  41c613:	or     eax,0x33b8381d
  41c618:	(bad)  
  41c619:	scas   al,BYTE PTR es:[edi]
  41c61a:	mov    eax,0x7dad3324
  41c61f:	xchg   edx,eax
  41c620:	mov    ch,0xcf
  41c622:	and    al,0x99
  41c624:	int    0x8f
  41c626:	push   ebx
  41c627:	pop    eax
  41c628:	daa    
  41c629:	cmp    BYTE PTR [ebp-0x30c4f081],al
  41c62f:	push   cs
  41c630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c631:	mov    dl,ch
  41c633:	add    DWORD PTR [eax],eax
  41c635:	clc    
  41c636:	cmp    DWORD PTR [eax-0x33ebcae7],edx
  41c63c:	pop    edx
  41c63d:	push   ebp
  41c63e:	and    ebx,ebx
  41c640:	mov    esp,0x801ba29d
  41c645:	jmp    0x360a35cf
  41c64a:	int    0xa5
  41c64c:	popa   
  41c64d:	scas   eax,DWORD PTR es:[edi]
  41c64e:	xor    BYTE PTR [ebp-0x1f439ec7],0x9e
  41c655:	lock jp 0x41c5ef
  41c658:	mov    al,0x11
  41c65a:	sbb    eax,0xe957d384
  41c65f:	mov    BYTE PTR [edi+0x4e],ch
  41c662:	jl     0x41c6ba
  41c664:	xor    al,0x6a
  41c666:	xor    eax,esi
  41c668:	(bad)  
  41c669:	mov    cl,0xc4
  41c66b:	pop    edx
  41c66c:	xor    BYTE PTR [edi-0x6d],al
  41c66f:	xchg   ecx,eax
  41c670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c671:	xlat   BYTE PTR ds:[ebx]
  41c672:	pop    eax
  41c673:	xchg   esp,eax
  41c674:	dec    ebx
  41c675:	mov    bh,0x8e
  41c677:	sbb    bh,BYTE PTR [edi+0x2751924c]
  41c67d:	push   ecx
  41c67e:	rep lods al,BYTE PTR ds:[esi]
  41c680:	push   cs
  41c681:	shl    DWORD PTR gs:[edx],1
  41c684:	mov    eax,0xa8b1d86
  41c689:	in     al,dx
  41c68a:	adc    ebp,ebx
  41c68c:	or     ah,dh
  41c68e:	je     0x41c6d0
  41c690:	xchg   ch,al
  41c692:	push   ecx
  41c693:	les    ebp,FWORD PTR ds:0x8c91af94
  41c699:	add    DWORD PTR [ecx+0x5],ebp
  41c69c:	xor    DWORD PTR [ebp+0x38f8f05a],edi
  41c6a2:	sub    bl,BYTE PTR [edx+esi*8]
  41c6a5:	mov    es,WORD PTR [ebx+0x77]
  41c6a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a9:	mov    DWORD PTR [ebx+0x52],edx
  41c6ac:	pusha  
  41c6ad:	pop    ebp
  41c6ae:	fisub  WORD PTR [ebx+0x45]
  41c6b1:	call   FWORD PTR [eax+0x740a6249]
  41c6b7:	aam    0xfb
  41c6b9:	sub    eax,0xc78831a8
  41c6be:	fisttp QWORD PTR [ecx]
  41c6c0:	adc    esi,edi
  41c6c2:	and    cl,BYTE PTR [ebp+0x7]
  41c6c5:	push   ebx
  41c6c6:	cmp    al,0x3d
  41c6c8:	aas    
  41c6c9:	fmul   DWORD PTR [edx]
  41c6cb:	xor    eax,0x6140e2f
  41c6d0:	in     eax,0x17
  41c6d2:	xor    al,0xfa
  41c6d4:	idiv   DWORD PTR [ebp+0x78e6a127]
  41c6da:	rcr    BYTE PTR [edi+0x39],cl
  41c6dd:	fwait
  41c6de:	retf   0xb650
  41c6e1:	test   BYTE PTR [eax+0x26],ch
  41c6e4:	push   eax
  41c6e5:	arpl   WORD PTR [ecx+0x44],si
  41c6e8:	cs enter 0xacc7,0xec
  41c6ed:	ret    
  41c6ee:	js     0x41c761
  41c6f0:	jp     0x41c736
  41c6f2:	aaa    
  41c6f3:	pop    ebp
  41c6f4:	mulps  xmm7,XMMWORD PTR [ecx-0x43925598]
  41c6fb:	arpl   WORD PTR [edx-0x11],sp
  41c6fe:	pop    ss
  41c6ff:	pushf  
  41c700:	pushf  
  41c701:	jecxz  0x41c762
  41c703:	push   es
  41c704:	aad    0x6b
  41c706:	(bad)  
  41c708:	xlat   BYTE PTR ds:[ebx]
  41c709:	add    DWORD PTR [edx],edx
  41c70b:	inc    ebx
  41c70c:	dec    ebx
  41c70d:	jb     0x41c70c
  41c70f:	(bad)  
  41c710:	fs xor al,0xb2
  41c713:	mov    BYTE PTR [esi+0x10db6c40],bh
  41c719:	cmp    al,0x77
  41c71b:	mov    al,0x83
  41c71d:	fincstp 
  41c71f:	lds    esp,FWORD PTR [esi-0x1]
  41c722:	push   cs
  41c723:	mov    ds:0x469ecbc3,al
  41c728:	mov    BYTE PTR [eax-0xf],dh
  41c72b:	nop
  41c72c:	outs   dx,BYTE PTR ds:[esi]
  41c72d:	push   edi
  41c72e:	mov    bl,0x39
  41c730:	mov    esi,0x79f67e30
  41c735:	mov    bl,bh
  41c737:	adc    ecx,esp
  41c739:	pmulhw mm4,QWORD PTR [edi-0x7afbd7aa]
  41c740:	mov    ds:0x75142ab9,eax
  41c745:	push   0xc2a707e9
  41c74a:	fsub   QWORD PTR [edi+0x62]
  41c74d:	sbb    edx,DWORD PTR [esi-0x36]
  41c750:	push   edi
  41c751:	into   
  41c752:	(bad)  
  41c753:	mov    ds:0x38049152,eax
  41c758:	pop    ebx
  41c759:	push   ebx
  41c75a:	jle    0x41c7b6
  41c75c:	int3   
  41c75d:	jmp    0xc144caa
  41c762:	mov    WORD PTR ds:0xd05037b2,gs
  41c768:	adc    al,0x2
  41c76a:	out    0x22,al
  41c76c:	shl    DWORD PTR [edx-0x20],cl
  41c76f:	out    0xb6,al
  41c771:	lods   al,BYTE PTR ds:[esi]
  41c772:	xchg   BYTE PTR [edx+ebx*4],ah
  41c775:	jle    0x41c70d
  41c777:	fstp   TBYTE PTR [edi-0x59]
  41c77a:	xor    DWORD PTR [edi],edx
  41c77c:	test   eax,0x5c35b40
  41c781:	les    esi,FWORD PTR [ecx-0x39]
  41c784:	scas   al,BYTE PTR es:[edi]
  41c785:	out    0xfc,al
  41c787:	mov    esp,DWORD PTR [ecx-0x1b33160d]
  41c78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c78e:	dec    eax
  41c78f:	gs in  eax,0xff
  41c792:	daa    
  41c793:	add    ebx,edx
  41c795:	fcomp  DWORD PTR [eax+0x60]
  41c798:	jo     0x6343cea0
  41c79e:	adc    DWORD PTR ds:0xa69b6033,ecx
  41c7a4:	xor    eax,DWORD PTR [edx+ebp*1-0x89bab6c]
  41c7ab:	mov    ebp,esp
  41c7ad:	mov    ebp,0x25d63123
  41c7b2:	or     DWORD PTR [eax+0x61],0x460b6970
  41c7b9:	shl    ah,cl
  41c7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7bc:	(bad)  
  41c7bd:	ins    DWORD PTR es:[edi],dx
  41c7be:	push   ebx
  41c7bf:	std    
  41c7c0:	(bad)
  41c7c4:	xchg   dh,bh
  41c7c6:	scas   eax,DWORD PTR es:[edi]
  41c7c7:	in     eax,dx
  41c7c8:	xchg   edx,eax
  41c7c9:	sbb    BYTE PTR [ecx+eax*2],0xcf
  41c7cd:	dec    esi
  41c7ce:	daa    
  41c7cf:	int3   
  41c7d0:	nop
  41c7d1:	into   
  41c7d2:	test   BYTE PTR [edi-0x347774b7],al
  41c7d8:	xchg   edi,eax
  41c7d9:	dec    ecx
  41c7da:	sub    al,0x74
  41c7dc:	lods   al,BYTE PTR ds:[esi]
  41c7dd:	and    ebx,ecx
  41c7df:	mov    ds:0x554fb62e,eax
  41c7e4:	mov    ebp,0x57f3a403
  41c7e9:	cmp    DWORD PTR [ebx+0x522e66a0],0xffffff83
  41c7f0:	shl    BYTE PTR [edi+ebx*1],0x31
  41c7f4:	add    al,0x1f
  41c7f6:	mov    dh,0xac
  41c7f8:	in     eax,dx
  41c7f9:	mov    eax,DWORD PTR [eax+0x1e96f177]
  41c7ff:	fnstenv [esi]
  41c801:	adc    cl,dh
  41c803:	xchg   edi,eax
  41c804:	pop    esi
  41c805:	loope  0x41c7c5
  41c807:	test   al,0x4c
  41c809:	stos   DWORD PTR es:[edi],eax
  41c80a:	cdq    
  41c80b:	jae    0x41c7c9
  41c80d:	mov    edi,esp
  41c80f:	mov    dh,0x4d
  41c811:	or     eax,0x98c2f376
  41c816:	jle    0x41c7db
  41c818:	mov    esi,0xebf08f20
  41c81d:	scas   al,BYTE PTR es:[edi]
  41c81e:	jmp    0xf067bdbb
  41c823:	fs sbb eax,0xda1f976
  41c829:	fs and eax,0x360ae6d7
  41c82f:	mov    cl,0xc2
  41c831:	stc    
  41c832:	enter  0xe7e8,0xe5
  41c836:	out    dx,al
  41c837:	stc    
  41c838:	push   0xa3f8c9db
  41c83d:	mov    eax,0xa2c73a8d
  41c842:	jae    0x41c7ce
  41c844:	call   0xefea:0x37f2490f
  41c84b:	dec    esp
  41c84c:	test   DWORD PTR [edx-0x46],edi
  41c84f:	mov    ch,0x1f
  41c851:	(bad)  
  41c852:	mov    cl,0x77
  41c854:	into   
  41c855:	call   0xd40:0xb2e9cec2
  41c85c:	repz xchg ebx,eax
  41c85e:	aam    0xae
  41c860:	cld    
  41c861:	jns    0x41c828
  41c863:	pushf  
  41c864:	add    BYTE PTR [ebp-0x28],dh
  41c867:	ins    BYTE PTR es:[edi],dx
  41c868:	or     bh,al
  41c86a:	jle    0x41c89b
  41c86c:	(bad)  
  41c86d:	(bad)  
  41c86e:	xchg   ebp,eax
  41c86f:	jecxz  0x41c88f
  41c871:	fwait
  41c872:	retf   
  41c873:	in     eax,0xca
  41c875:	call   0x623b4c43
  41c87a:	ins    BYTE PTR es:[edi],dx
  41c87b:	int    0x96
  41c87d:	fistp  WORD PTR [ebp+0x74]
  41c880:	mov    ebx,0x2afef396
  41c885:	xlat   BYTE PTR ds:[ebx]
  41c886:	pop    edi
  41c887:	dec    ecx
  41c888:	add    DWORD PTR [eax+0x7abe9dd5],esp
  41c88e:	or     ch,BYTE PTR [edi+0x220aa34d]
  41c894:	sbb    cl,bh
  41c896:	pop    edi
  41c897:	jl     0x41c846
  41c899:	and    eax,0xe76eb3b6
  41c89e:	xchg   ecx,eax
  41c89f:	imul   edi,DWORD PTR [edx+0x745db3d5],0xffffffc5
  41c8a6:	mov    al,0x39
  41c8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a9:	or     al,0xc2
  41c8ab:	into   
  41c8ac:	test   edx,0x724fa848
  41c8b2:	fwait
  41c8b3:	outs   dx,DWORD PTR ds:[esi]
  41c8b4:	mov    ds:0x85cbed7e,al
  41c8b9:	add    bl,BYTE PTR [ebx]
  41c8bb:	inc    ebx
  41c8bc:	test   DWORD PTR [ebx-0x7373090d],eax
  41c8c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8c3:	sub    cl,BYTE PTR [esi+ecx*2+0x44]
  41c8c7:	or     ebx,ecx
  41c8c9:	jae    0x41c936
  41c8cb:	or     BYTE PTR [eax],bl
  41c8cd:	ja     0x41c90b
  41c8cf:	mov    DWORD PTR [esp+edx*2],esi
  41c8d2:	xchg   ecx,eax
  41c8d3:	add    ch,bl
  41c8d5:	ins    BYTE PTR es:[edi],dx
  41c8d6:	mov    edi,DWORD PTR [eax+0x7899f1a1]
  41c8dc:	rol    DWORD PTR [eax-0x5a],0x1a
  41c8e0:	sbb    ch,BYTE PTR [edx+0x49cd8396]
  41c8e6:	pusha  
  41c8e7:	mov    ds:0x4a98d504,eax
  41c8ec:	fld    DWORD PTR [esi]
  41c8ee:	daa    
  41c8ef:	out    dx,eax
  41c8f0:	scas   eax,DWORD PTR es:[edi]
  41c8f1:	xchg   ecx,eax
  41c8f2:	xchg   esi,eax
  41c8f3:	test   bl,0xd0
  41c8f6:	scas   eax,DWORD PTR es:[edi]
  41c8f7:	and    DWORD PTR ds:0xa922633a,edi
  41c8fd:	xchg   edi,eax
  41c8fe:	aaa    
  41c8ff:	jmp    0x441af247
  41c904:	or     ch,BYTE PTR [ecx]
  41c906:	ds call 0x45ab6678
  41c90c:	xor    DWORD PTR [edi],ecx
  41c90e:	fadd   DWORD PTR [ecx-0x348d5222]
  41c914:	sub    DWORD PTR [ecx-0x650dee91],esi
  41c91a:	cdq    
  41c91b:	jae    0x41c8b3
  41c91d:	xchg   DWORD PTR [ecx-0x74],esp
  41c920:	sbb    DWORD PTR [eax+0x3220a672],0x8dc47eb8
  41c92a:	repnz rol BYTE PTR [esi],cl
  41c92d:	adc    BYTE PTR [edx],bl
  41c92f:	xor    DWORD PTR [edi+0x4a],ebx
  41c932:	popf   
  41c933:	mov    ecx,DWORD PTR [esi-0x48]
  41c936:	inc    edx
  41c937:	or     BYTE PTR ds:0x3ff4e686,bl
  41c93d:	xor    eax,DWORD PTR [ebp-0x59]
  41c940:	or     DWORD PTR [edx+0x586ad809],esp
  41c946:	xchg   ebx,eax
  41c947:	cmp    eax,0x6101bdfc
  41c94c:	push   ebp
  41c94d:	push   ebp
  41c94e:	and    eax,ecx
  41c950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c951:	pop    esp
  41c952:	and    esi,esp
  41c954:	nop
  41c955:	cmp    DWORD PTR [ebx-0x17],ebp
  41c958:	jle    0x41c8df
  41c95a:	arpl   WORD PTR [esi+0x2c],bx
  41c95d:	mov    edi,0x51c48a5e
  41c962:	mov    eax,ds:0x31f95be1
  41c967:	jne    0x41c9e7
  41c969:	xlat   BYTE PTR ds:[ebx]
  41c96a:	xor    eax,0xb2d9a270
  41c96f:	inc    esi
  41c970:	push   ds
  41c971:	cs mov ebp,0xdd9ade4b
  41c977:	(bad)  
  41c978:	out    0xb,eax
  41c97a:	adc    edi,DWORD PTR [ecx]
  41c97c:	jbe    0x41c9b3
  41c97e:	aad    0x0
  41c980:	ficomp WORD PTR [eax+0x67c42f45]
  41c986:	inc    edi
  41c987:	mov    ds:0xf10af623,eax
  41c98c:	add    eax,0xa19eff52
  41c991:	sar    BYTE PTR fs:[edi],cl
  41c994:	inc    edx
  41c995:	cmc    
  41c996:	jmp    FWORD PTR [ecx-0x734ec198]
  41c99c:	sub    al,0x43
  41c99e:	(bad)  
  41c99f:	not    BYTE PTR [edi]
  41c9a1:	mov    al,0x1f
  41c9a3:	dec    BYTE PTR [edi-0x3799bd2]
  41c9a9:	test   ecx,ebx
  41c9ab:	fcomp  DWORD PTR [ebx+edi*1+0x52cbe3c1]
  41c9b2:	lahf   
  41c9b3:	das    
  41c9b4:	mov    ch,0x9b
  41c9b6:	sub    eax,0x8b9b5182
  41c9bb:	and    dl,bh
  41c9bd:	push   0xe3ce21b3
  41c9c2:	dec    ebp
  41c9c3:	mov    al,0x89
  41c9c5:	(bad)  
  41c9c6:	fsub   QWORD PTR [edx-0x1cab74c0]
  41c9cc:	psrlw  mm1,QWORD PTR [eax-0x1a]
  41c9d0:	sbb    ebp,eax
  41c9d2:	enter  0xbc85,0xb2
  41c9d6:	jl     0x41c993
  41c9d8:	inc    ecx
  41c9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9da:	sbb    DWORD PTR ds:0x4627a769,ebp
  41c9e0:	repnz or eax,0xb6178604
  41c9e6:	std    
  41c9e7:	and    DWORD PTR [edx+0x792f0892],0x149d5277
  41c9f1:	jmp    0x41ca2e
  41c9f3:	je     0x41c9bb
  41c9f5:	cmp    ecx,DWORD PTR [ebp-0x551148e9]
  41c9fb:	and    BYTE PTR [edi],dh
  41c9fd:	mov    esi,0xd6662ed4
  41ca02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca03:	jnp    0x41c9ab
  41ca05:	popf   
  41ca06:	mov    edx,0xc4cd6d59
  41ca0b:	pop    es
  41ca0c:	cmp    ebp,esi
  41ca0e:	ja     0x41c9b5
  41ca10:	cmp    al,0x11
  41ca12:	pop    edi
  41ca13:	mov    ecx,0xd232fd5c
  41ca18:	dec    eax
  41ca19:	sti    
  41ca1a:	mov    ds:0x70a25c9e,eax
  41ca1f:	daa    
  41ca20:	xchg   esi,eax
  41ca21:	pop    ebx
  41ca22:	cmc    
  41ca23:	fwait
  41ca24:	mov    cl,BYTE PTR [esi-0x7b8e36f]
  41ca2a:	lea    esi,[ebp-0x744c53c5]
  41ca30:	arpl   WORD PTR [edx-0xe],di
  41ca33:	push   0xc8aaa29e
  41ca38:	or     eax,ebx
  41ca3a:	les    esi,FWORD PTR [ecx+0x629a7409]
  41ca40:	sbb    al,0x3c
  41ca42:	test   BYTE PTR [ebp+0x7b],0x3b
  41ca46:	mov    BYTE PTR ss:[ecx],dh
  41ca49:	imul   esp,DWORD PTR [ecx],0x79998b1
  41ca4f:	test   BYTE PTR [eax-0x2359eb5b],bh
  41ca55:	rol    BYTE PTR [ecx+ebx*8],cl
  41ca58:	cmp    al,0x2
  41ca5a:	cmp    DWORD PTR [eax+0x5d],esi
  41ca5d:	xchg   ecx,eax
  41ca5e:	out    0xf9,al
  41ca60:	les    ecx,FWORD PTR [ecx-0x722f8c62]
  41ca66:	idiv   DWORD PTR [edi-0x17]
  41ca69:	mov    ebp,0x19c35731
  41ca6e:	sub    ebp,edx
  41ca70:	mov    al,0x13
  41ca72:	repz repz sub cl,BYTE PTR [edi]
  41ca76:	jmp    0xaec6:0xd5178bf7
  41ca7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca7e:	sub    BYTE PTR [edi-0x1f],bh
  41ca81:	stos   BYTE PTR es:[edi],al
  41ca82:	dec    ebp
  41ca83:	jecxz  0x41cafd
  41ca85:	es scas eax,DWORD PTR es:[edi]
  41ca87:	mov    ecx,0x2df8f094
  41ca8c:	mov    al,0x13
  41ca8e:	(bad)  
  41ca90:	jb     0x41caee
  41ca92:	sub    esi,DWORD PTR [edi+0x7]
  41ca95:	adc    DWORD PTR [edi],edx
  41ca97:	or     edx,DWORD PTR [edi+0x3d20dd90]
  41ca9d:	pop    DWORD PTR [eax]
  41ca9f:	add    BYTE PTR [eax],al
  41caa1:	add    ah,ah
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x55]
  41caaf:	inc    esi
  41cab0:	or     DWORD PTR [ebp+eiz*2-0xbfffeba],ecx
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [ecx],al
  41cabb:	push   ebx
  41cabc:	jecxz  0x41cb3b
  41cabe:	retf   
  41cabf:	or     edx,esp
  41cac1:	or     eax,0x4936d6f9
  41cac6:	mov    bh,0x98
  41cac8:	inc    esi
  41cac9:	add    dh,BYTE PTR [ebp-0x57a31c43]
  41cacf:	int3   
  41cad0:	pop    esi
  41cad1:	cmp    eax,DWORD PTR [esi]
  41cad3:	out    dx,al
  41cad4:	push   0x43
  41cad6:	and    DWORD PTR [esp+ebx*8-0x6310305d],ebp
  41cadd:	(bad)  
  41cade:	aaa    
  41cadf:	inc    eax
  41cae0:	pop    DWORD PTR [esi+0x64]
  41cae3:	jge    0x41caa1
  41cae5:	or     eax,0xcfb1a57b
  41caea:	mov    eax,0x5ee3465d
  41caef:	popa   
  41caf0:	add    al,BYTE PTR [ebp+0x3d2b3e40]
  41caf6:	loope  0x41cac5
  41caf8:	xchg   ebp,eax
  41caf9:	fsubrp st(1),st
  41cafb:	imul   eax,DWORD PTR [eax-0x17],0xffffff94
  41caff:	mov    dh,0x31
  41cb01:	icebp  
  41cb02:	cmp    dh,BYTE PTR [ebx+eiz*4+0x4a6fda01]
  41cb09:	add    eax,0xde9c919b
  41cb0e:	mov    BYTE PTR [esi],bh
  41cb10:	sub    ecx,DWORD PTR [ebx+0x7ca24840]
  41cb16:	lods   al,BYTE PTR ds:[esi]
  41cb17:	leave  
  41cb18:	popa   
  41cb19:	mov    ah,0x85
  41cb1b:	(bad)  
  41cb1c:	jp     0x41cad7
  41cb1e:	pop    ebx
  41cb1f:	inc    edx
  41cb20:	adc    BYTE PTR [edi+ebx*2],0x7d
  41cb24:	mov    edi,0x79fb0c75
  41cb29:	ss sbb cl,ch
  41cb2c:	aas    
  41cb2d:	sbb    al,0xbd
  41cb2f:	outs   dx,BYTE PTR ds:[esi]
  41cb30:	jne    0x41cb2b
  41cb32:	xchg   edi,eax
  41cb33:	jle    0x41cb67
  41cb35:	vpsubq xmm3,xmm2,XMMWORD PTR [edi+edi*4+0x1a]
  41cb3b:	mov    eax,0x42ed4819
  41cb40:	cmp    ebx,eax
  41cb42:	inc    esi
  41cb43:	or     WORD PTR [edx-0x1b],cx
  41cb47:	pmaddwd mm6,QWORD PTR [eax]
  41cb4a:	mov    bl,BYTE PTR [ebx+0x6c]
  41cb4d:	lods   al,BYTE PTR ds:[esi]
  41cb4e:	sbb    bl,cl
  41cb50:	call   0x2f9a:0xf86d0a60
  41cb57:	mov    ds:0x6746aafb,eax
  41cb5c:	xor    dx,WORD PTR [edx]
  41cb5f:	xchg   edx,eax
  41cb60:	sbb    bh,BYTE PTR [edx+ebx*4-0x5db177e1]
  41cb67:	add    eax,0x5ca7061c
  41cb6c:	mov    bl,0xb2
  41cb6e:	or     cl,0x75
  41cb71:	fnsave [ebx-0x32]
  41cb74:	(bad)  
  41cb75:	mov    dl,0xd7
  41cb77:	xor    DWORD PTR [esp+edx*8+0x27ae41ac],ecx
  41cb7e:	dec    edi
  41cb7f:	jge    0x41cb35
  41cb81:	mov    bh,0x44
  41cb83:	push   es
  41cb84:	(bad)  
  41cb85:	fsubr  QWORD PTR [edi-0x585ea46]
  41cb8b:	push   0xe9804d41
  41cb90:	mov    ebx,0x90939494
  41cb95:	cmp    BYTE PTR [ebx-0x15],cl
  41cb98:	sar    BYTE PTR [edi-0x34391c6b],0x7
  41cb9f:	std    
  41cba0:	sbb    al,0x72
  41cba2:	imul   esp,DWORD PTR fs:[ecx+0x6f],0xbd7be2a6
  41cbaa:	outs   dx,BYTE PTR ds:[esi]
  41cbab:	inc    ebx
  41cbac:	dec    esp
  41cbad:	add    dl,BYTE PTR [esi-0x28]
  41cbb0:	das    
  41cbb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb2:	call   0xa6bcddd8
  41cbb7:	inc    ecx
  41cbb8:	stos   BYTE PTR es:[edi],al
  41cbb9:	fild   WORD PTR [edi+0x545e5d9f]
  41cbbf:	pushf  
  41cbc0:	add    bl,0x8c
  41cbc3:	les    ecx,FWORD PTR [edx]
  41cbc5:	inc    ecx
  41cbc6:	jmp    0x235a4668
  41cbcb:	int3   
  41cbcc:	out    0x9e,al
  41cbce:	mov    edx,0x199da395
  41cbd3:	cli    
  41cbd4:	cmp    ch,BYTE PTR [ecx+0x76434309]
  41cbda:	mov    DWORD PTR [ebp+0x76b0e6df],ebp
  41cbe0:	bound  ecx,QWORD PTR [eax]
  41cbe2:	mov    BYTE PTR [eax-0x64],bh
  41cbe5:	sbb    eax,0xd536ccaa
  41cbea:	addr16 iret 
  41cbec:	cmp    al,0xa8
  41cbee:	(bad)  
  41cbef:	mov    ds:0x5988d614,al
  41cbf4:	sbb    eax,0x2198456
  41cbf9:	xor    eax,0x4b4de859
  41cbfe:	mov    ch,0x28
  41cc00:	mov    ah,0x77
  41cc02:	aam    0x19
  41cc04:	add    ebp,DWORD PTR [edi]
  41cc06:	sar    DWORD PTR [edx],0x7
  41cc09:	repz popf 
  41cc0b:	out    dx,al
  41cc0c:	cmp    edx,ecx
  41cc0e:	out    dx,al
  41cc0f:	inc    esp
  41cc10:	xchg   esp,eax
  41cc11:	loopne 0x41cc07
  41cc13:	shl    BYTE PTR gs:[ebx],1
  41cc16:	pop    edx
  41cc17:	sbb    DWORD PTR [ebp-0x58],ebx
  41cc1a:	fistp  WORD PTR es:[ebp+0x254e3f0f]
  41cc21:	mov    edx,DWORD PTR [edi-0x16]
  41cc24:	fdivr  QWORD PTR [ebx]
  41cc26:	and    al,0xaa
  41cc28:	inc    edi
  41cc29:	sub    dh,BYTE PTR [esi-0x6429a7a9]
  41cc2f:	jmp    0x1efc:0xcf6e3ea3
  41cc36:	mov    BYTE PTR [ebx+0x2f],ch
  41cc39:	es pop ss
  41cc3b:	xchg   ebx,eax
  41cc3c:	ds pop esp
  41cc3e:	out    dx,al
  41cc3f:	stc    
  41cc40:	pop    ebp
  41cc41:	cmp    al,0x5e
  41cc43:	bound  esp,QWORD PTR [eax]
  41cc45:	pushf  
  41cc46:	retf   
  41cc47:	popa   
  41cc48:	test   eax,0x975a9fba
  41cc4d:	push   ds
  41cc4e:	dec    esp
  41cc4f:	data16 jns 0x41ccb4
  41cc52:	add    al,0x78
  41cc54:	xchg   ebx,eax
  41cc55:	retf   0xded2
  41cc58:	pop    es
  41cc59:	pop    es
  41cc5a:	xor    DWORD PTR [edi+0x68b63acd],ecx
  41cc60:	xchg   esi,eax
  41cc62:	in     al,dx
  41cc63:	aas    
  41cc64:	pop    esi
  41cc65:	sbb    al,0xfb
  41cc67:	repnz sub BYTE PTR [ebx+0x3d],al
  41cc6b:	push   ss
  41cc6c:	inc    esp
  41cc6d:	pop    ebx
  41cc6e:	sbb    ecx,DWORD PTR ds:[edi+0x2a41adaa]
  41cc75:	xchg   bl,cl
  41cc77:	mov    edi,0x21822563
  41cc7c:	js     0x41ccdd
  41cc7e:	pop    ecx
  41cc7f:	adc    eax,0x591c21b8
  41cc84:	adc    al,0xe9
  41cc86:	adc    edx,eax
  41cc88:	mov    dh,0x46
  41cc8a:	lds    esi,FWORD PTR [ecx+0x19]
  41cc8d:	mov    edx,0x73de2afb
  41cc92:	pop    edx
  41cc93:	and    al,0xa9
  41cc95:	inc    edx
  41cc96:	(bad)  
  41cc97:	popf   
  41cc98:	rcl    dl,1
  41cc9a:	inc    esp
  41cc9b:	shl    DWORD PTR [ebp-0x4a85c72a],cl
  41cca1:	cwde   
  41cca2:	leave  
  41cca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca4:	xchg   ecx,eax
  41cca5:	sbb    esp,DWORD PTR [ecx+0x1c5a8ae]
  41ccab:	sbb    al,0x3b
  41ccad:	imul   esi,DWORD PTR [ebx+0x35],0xc2d3ba50
  41ccb4:	loop   0x41ccb3
  41ccb6:	sbb    esp,DWORD PTR [ebx+0x7]
  41ccb9:	test   al,0x6e
  41ccbb:	add    al,0x29
  41ccbd:	mov    ebp,0x6c11ce7
  41ccc2:	bound  esi,QWORD PTR [ecx]
  41ccc4:	jg     0x41cd13
  41ccc6:	pop    es
  41ccc7:	js     0x41ccfb
  41ccc9:	daa    
  41ccca:	inc    eax
  41cccb:	cld    
  41cccc:	shl    edi,0x14
  41cccf:	mul    bl
  41ccd1:	mov    cl,0x3b
  41ccd3:	jae    0x41cd1e
  41ccd5:	mov    esp,0x11ae535b
  41ccda:	call   0x19dd:0x525841c4
  41cce1:	(bad)  
  41cce2:	lds    ebx,FWORD PTR ds:0xf707a55c
  41cce8:	fimul  DWORD PTR [esi+0x4a90ab2]
  41ccee:	pushf  
  41ccef:	ins    BYTE PTR es:[edi],dx
  41ccf0:	add    eax,0x27d4de8a
  41ccf5:	ja     0x41cd57
  41ccf7:	fs pop es
  41ccf9:	and    cl,BYTE PTR [edi-0x368622aa]
  41ccff:	cli    
  41cd00:	mov    cl,0xc9
  41cd02:	or     BYTE PTR [eax+edx*4+0x4b41770b],dl
  41cd09:	jae    0x41cd19
  41cd0b:	fimul  DWORD PTR [ecx-0x80]
  41cd0e:	and    al,0x72
  41cd10:	inc    esp
  41cd11:	mov    bl,0x1
  41cd13:	cmp    DWORD PTR [ebx+0x77],ecx
  41cd16:	mov    dl,0x8f
  41cd18:	push   ss
  41cd19:	mov    cl,bl
  41cd1b:	test   DWORD PTR [ecx+edi*8+0x23],0x49bcd5fb
  41cd23:	mov    WORD PTR [ecx],ds
  41cd25:	pop    ss
  41cd26:	(bad)
  41cd29:	mov    edx,0x19ca7651
  41cd2e:	es popw es
  41cd31:	dec    esp
  41cd32:	pop    ebp
  41cd33:	mov    ebx,DWORD PTR [eax+0x74]
  41cd36:	fst    QWORD PTR [ebx+0x70dc2c96]
  41cd3c:	dec    ecx
  41cd3d:	fistp  WORD PTR [ebx+0x4cc9aa87]
  41cd43:	retf   
  41cd44:	iret   
  41cd45:	rcr    esi,1
  41cd47:	mov    esp,0x3102079d
  41cd4c:	adc    BYTE PTR [edi+0x2a04708d],bh
  41cd52:	rcl    dl,0x5f
  41cd55:	push   ebp
  41cd56:	sahf   
  41cd57:	ds or  al,0xab
  41cd5a:	mov    ebp,0x77bd0bc9
  41cd5f:	lods   eax,DWORD PTR ds:[esi]
  41cd60:	adc    al,0xd4
  41cd62:	int    0x5b
  41cd64:	xor    ebx,DWORD PTR [esi]
  41cd66:	pop    edx
  41cd67:	shr    BYTE PTR [esi],cl
  41cd69:	loopne 0x41cd53
  41cd6b:	repnz adc esp,ecx
  41cd6e:	fwait
  41cd6f:	mov    ebx,0xec346180
  41cd74:	xor    DWORD PTR [eax-0x65c9d1b3],edi
  41cd7a:	je     0x41cdea
  41cd7c:	cli    
  41cd7d:	xor    al,0xd3
  41cd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd80:	out    0xe3,al
  41cd82:	mov    gs,WORD PTR [ebp+0x3c]
  41cd85:	in     al,0x3d
  41cd87:	adc    eax,0x5616acb4
  41cd8c:	into   
  41cd8d:	inc    esi
  41cd8e:	xchg   DWORD PTR [ecx-0x7330723d],edi
  41cd94:	cmp    eax,0xda436c3c
  41cd99:	aas    
  41cd9a:	adc    eax,DWORD PTR fs:[edx-0x19eaf5ee]
  41cda1:	inc    eax
  41cda2:	sbb    esi,DWORD PTR [eax-0x77]
  41cda5:	mov    al,cl
  41cda7:	mov    edi,eax
  41cda9:	stos   BYTE PTR es:[edi],al
  41cdaa:	dec    ebx
  41cdab:	test   BYTE PTR [ebx],bl
  41cdad:	call   0x15de:0xee18f3da
  41cdb4:	xlat   BYTE PTR ds:[ebx]
  41cdb5:	(bad)  ds:0xbc4172bd
  41cdbb:	sbb    eax,0x2802eeb1
  41cdc0:	aam    0xaf
  41cdc2:	aam    0x4d
  41cdc4:	or     al,BYTE PTR [edx-0x16]
  41cdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc8:	aad    0x51
  41cdca:	repz xor al,0x14
  41cdcd:	jge    0x41ce27
  41cdcf:	inc    edx
  41cdd0:	xor    DWORD PTR [edx+0x6b8a173a],edx
  41cdd6:	pushf  
  41cdd7:	ja     0x41cd9e
  41cdd9:	clc    
  41cdda:	repnz jmp FWORD PTR [edi+0x5f]
  41cdde:	daa    
  41cddf:	pop    ebp
  41cde0:	pop    ebp
  41cde1:	cdq    
  41cde2:	cs aaa 
  41cde4:	cwde   
  41cde5:	stc    
  41cde6:	push   ds
  41cde7:	push   0xa402692e
  41cdec:	xchg   esp,eax
  41cded:	mov    cl,0x96
  41cdef:	inc    edi
  41cdf0:	and    BYTE PTR [ecx+eax*4],dh
  41cdf3:	sub    cl,ch
  41cdf5:	add    BYTE PTR [edx+edi*2-0x1c],bh
  41cdf9:	cmp    al,0x81
  41cdfb:	mov    bh,0x9b
  41cdfd:	or     DWORD PTR [esp+ebx*2],0xed289c69
  41ce04:	test   BYTE PTR [eax],bl
  41ce06:	std    
  41ce07:	(bad)
  41ce0c:	(bad)  
  41ce0d:	rol    BYTE PTR [edx],1
  41ce0f:	pop    ebp
  41ce10:	imul   DWORD PTR [esi-0x6b5bcc1]
  41ce16:	imul   ecx,DWORD PTR [ebx+0xe9880aa],0xffffff98
  41ce1d:	mov    al,0x38
  41ce1f:	shr    DWORD PTR [ecx+0x1688503],0xb5
  41ce26:	cmp    eax,0x8d8499f4
  41ce2b:	adc    eax,DWORD PTR [ebp-0x7c]
  41ce2e:	shl    BYTE PTR [ebx],0x2f
  41ce31:	jmp    0x41cdea
  41ce33:	xor    eax,0x6b9e41dc
  41ce38:	popa   
  41ce39:	mov    esp,0x7b4fe73b
  41ce3e:	sbb    al,0xc9
  41ce40:	and    al,0x3f
  41ce42:	push   esi
  41ce43:	das    
  41ce44:	inc    edx
  41ce45:	cmp    DWORD PTR [eax+0x72c674b5],edx
  41ce4b:	stos   DWORD PTR es:[edi],eax
  41ce4c:	or     al,0xb9
  41ce4e:	ret    0xcea2
  41ce51:	xor    BYTE PTR [eax+0x76],bh
  41ce54:	add    ebp,DWORD PTR [eax]
  41ce56:	pop    ebp
  41ce57:	and    bh,dh
  41ce59:	mov    esi,DWORD PTR ds:0x49f259c4
  41ce5f:	int    0x77
  41ce61:	fisubr WORD PTR [edi+0x56]
  41ce64:	push   cs
  41ce65:	data16 jb 0x41cdf7
  41ce68:	call   0x99ff6b2e
  41ce6d:	cwde   
  41ce6e:	adc    al,BYTE PTR [ecx+0x996ee31]
  41ce74:	cmc    
  41ce75:	push   edx
  41ce76:	xlat   BYTE PTR ds:[ebx]
  41ce77:	in     eax,dx
  41ce78:	jle    0x41cea6
  41ce7a:	jae    0x41ce04
  41ce7c:	lea    esp,[ebx-0x7ed0e301]
  41ce82:	adc    ah,BYTE PTR [edx-0x30]
  41ce85:	mov    ds:0xaf96eb3f,al
  41ce8a:	pusha  
  41ce8b:	fs stc 
  41ce8d:	or     eax,0x7d7e5185
  41ce92:	test   eax,edi
  41ce94:	(bad)  
  41ce95:	das    
  41ce96:	dec    ebx
  41ce97:	popa   
  41ce98:	fild   QWORD PTR [eax]
  41ce9a:	loop   0x41ceaa
  41ce9c:	fisubr WORD PTR [eax-0xd]
  41ce9f:	sub    DWORD PTR ds:0x6de89aa8,0xca1b22fd
  41cea9:	mov    esi,0x54ba6c82
  41ceae:	cld    
  41ceaf:	rol    ch,cl
  41ceb1:	retf   
  41ceb2:	aaa    
  41ceb3:	dec    eax
  41ceb4:	out    dx,al
  41ceb5:	sub    bl,BYTE PTR [edi-0x19]
  41ceb8:	lahf   
  41ceb9:	xor    ebp,DWORD PTR [eax+0x31]
  41cebc:	push   edx
  41cebd:	push   eax
  41cebe:	and    eax,0x8729e2d4
  41cec3:	jge    0x41cec1
  41cec5:	mov    dl,0x83
  41cec7:	xchg   dh,dh
  41cec9:	or     eax,0x198dd6d0
  41cece:	test   al,0x79
  41ced0:	enter  0xe4fa,0x7f
  41ced4:	mov    ds:0x125466ff,al
  41ced9:	cwde   
  41ceda:	mov    BYTE PTR [edx-0x175e61de],al
  41cee0:	and    al,0xe8
  41cee2:	pop    ebx
  41cee3:	mov    ah,0xd
  41cee5:	jl     0x41ceba
  41cee7:	sbb    eax,0xd15a15b0
  41ceec:	data16 loopne 0x41ceeb
  41ceef:	call   0xa920:0xd77abd6b
  41cef6:	xchg   ebx,eax
  41cef7:	rcr    edx,cl
  41cef9:	lock cmp DWORD PTR [edx-0x76c74a84],0xbdf59814
  41cf04:	adc    eax,0x91edbc4f
  41cf09:	fwait
  41cf0a:	or     dh,BYTE PTR [esi+0x5919783f]
  41cf10:	ins    BYTE PTR es:[edi],dx
  41cf11:	or     eax,0xa9999241
  41cf16:	pusha  
  41cf17:	and    eax,0x39f19f53
  41cf1c:	(bad)  
  41cf1d:	daa    
  41cf1e:	int3   
  41cf1f:	(bad)  
  41cf20:	fs ja  0x41cf23
  41cf23:	push   ss
  41cf24:	lds    edi,FWORD PTR es:[ebp-0x5a]
  41cf28:	pop    ebp
  41cf29:	bound  edi,QWORD PTR [eax-0x67140e8]
  41cf2f:	test   BYTE PTR [esi+ebx*8-0xfd7ded6],ah
  41cf36:	push   eax
  41cf37:	sub    eax,0x494b1bee
  41cf3c:	and    DWORD PTR [esi],edi
  41cf3e:	xor    DWORD PTR ds:0x4769cfe1,ebp
  41cf44:	xlat   BYTE PTR ds:[ebx]
  41cf45:	gs add eax,0x8c431e4b
  41cf4b:	or     eax,0x1c28fe42
  41cf50:	and    eax,0x68a60607
  41cf55:	or     DWORD PTR [eax+0xd2d8d28],edx
  41cf5b:	adc    ch,dh
  41cf5d:	jge    0x41cf12
  41cf5f:	outs   dx,BYTE PTR ds:[esi]
  41cf60:	push   ebp
  41cf61:	inc    edi
  41cf62:	jae    0x41cf2d
  41cf64:	loop   0x41cfb8
  41cf66:	add    al,0x72
  41cf68:	test   DWORD PTR [ebx-0x3d83278a],esp
  41cf6e:	mov    DWORD PTR [edx+0x2e9f7003],esi
  41cf74:	or     eax,0x432ad781
  41cf79:	ins    DWORD PTR es:[di],dx
  41cf7b:	(bad)
  41cf7e:	iret   
  41cf7f:	aad    0xcd
  41cf81:	adc    ch,BYTE PTR [ecx+ebp*4]
  41cf84:	adc    eax,0x7e3fa443
  41cf89:	mov    dh,al
  41cf8b:	repz push edi
  41cf8d:	nop
  41cf8e:	sub    al,0x42
  41cf90:	dec    edx
  41cf91:	ret    0xd2c7
  41cf94:	xchg   DWORD PTR [ecx-0x6e811b6e],ebx
  41cf9a:	pop    edi
  41cf9b:	push   cs
  41cf9c:	(bad)  
  41cf9e:	fist   WORD PTR [eax]
  41cfa0:	sbb    bl,0xf6
  41cfa3:	dec    edx
  41cfa4:	sub    bh,bh
  41cfa6:	sub    esp,ebp
  41cfa8:	(bad)  
  41cfa9:	daa    
  41cfaa:	aam    0xf
  41cfac:	pop    edx
  41cfad:	sub    eax,0x0
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x63425e6d
  41cfc2:	pop    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	hlt    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [edi],cl
  41cfcb:	cmp    eax,0x8d09df3
  41cfd0:	lods   eax,DWORD PTR ds:[esi]
  41cfd1:	rcl    DWORD PTR ss:[ecx+0x425c214a],1
  41cfd8:	dec    ecx
  41cfd9:	icebp  
  41cfda:	push   ebx
  41cfdb:	mov    bh,0x9b
  41cfdd:	cmp    ecx,DWORD PTR [ebx-0x67]
  41cfe0:	loope  0x41cfab
  41cfe2:	dec    eax
  41cfe3:	outs   dx,BYTE PTR ds:[esi]
  41cfe4:	stc    
  41cfe5:	retf   0x8724
  41cfe8:	mov    ebx,0xddbedfc4
  41cfed:	jge    0x41cfb7
  41cfef:	scas   al,BYTE PTR es:[edi]
  41cff0:	cmp    BYTE PTR [edx-0x133eea06],ch
  41cff6:	fnstcw WORD PTR [ebp+0x7d]
  41cff9:	loopne 0x41cfd5
  41cffb:	lds    esi,FWORD PTR [ebx+0x5d148a39]
  41d001:	loop   0x41cfe4
  41d003:	mov    ds,WORD PTR [edx-0x10f29d2d]
  41d009:	adc    eax,0x7800f13c
  41d00e:	sti    
  41d00f:	(bad)  
  41d010:	test   eax,0x608052a5
  41d015:	inc    eax
  41d016:	inc    esi
  41d017:	fst    DWORD PTR [ecx-0x22568cde]
  41d01d:	mov    esp,0xa6fc765a
  41d022:	adc    BYTE PTR [esi+0x42e817e3],bl
  41d028:	mov    cl,0x48
  41d02a:	jmp    0x41d03e
  41d02c:	test   bh,dl
  41d02e:	inc    edi
  41d02f:	sbb    ch,BYTE PTR [esi+eax*4]
  41d032:	ins    BYTE PTR es:[edi],dx
  41d033:	mov    al,BYTE PTR [esi+0x5d690b2a]
  41d039:	out    dx,al
  41d03a:	ret    
  41d03b:	retf   0xf85
  41d03e:	add    al,0xb5
  41d040:	std    
  41d041:	xor    ebp,ebp
  41d043:	aas    
  41d044:	sar    DWORD PTR [esi],1
  41d046:	cs xchg ebx,eax
  41d049:	ja     0x41d048
  41d04b:	or     DWORD PTR [ecx+0x5c],0xffffff8e
  41d04f:	daa    
  41d050:	cs pop ss
  41d052:	xchg   esi,eax
  41d053:	test   al,0xaa
  41d055:	mov    ds,WORD PTR [edx+0x445d3eb2]
  41d05b:	inc    esi
  41d05c:	xchg   edx,eax
  41d05d:	add    dh,BYTE PTR ds:0x6fb1bd6a
  41d063:	(bad)  
  41d064:	mov    ecx,0x1c970221
  41d069:	push   ds
  41d06a:	sbb    al,ch
  41d06c:	(bad)  
  41d06d:	jmp    0x41d0c7
  41d06f:	push   es
  41d070:	loopne 0x41d021
  41d072:	mov    dl,0xb1
  41d074:	jle    0x41d095
  41d076:	jnp    0x41d0c6
  41d078:	loop   0x41d036
  41d07a:	inc    DWORD PTR [ebp+0x2b]
  41d07d:	xchg   esp,eax
  41d07e:	cmp    ebx,DWORD PTR [esi+0x6ad02318]
  41d084:	add    al,0xa2
  41d086:	pop    ecx
  41d087:	mov    eax,ds:0x32d50b9d
  41d08c:	rol    BYTE PTR [edi-0x4b388671],0xd8
  41d093:	fdivr  DWORD PTR [ebx]
  41d095:	pop    ebx
  41d096:	pop    esi
  41d097:	inc    edi
  41d098:	pop    ss
  41d099:	pop    esi
  41d09a:	push   0x2519be20
  41d09f:	mov    gs,WORD PTR [eax-0x5e1ffce6]
  41d0a5:	shl    dl,0xbf
  41d0a8:	and    eax,DWORD PTR ds:0xf42b8e93
  41d0ae:	jge    0x41d0b6
  41d0b0:	inc    ebp
  41d0b1:	fldenv [edx-0x5]
  41d0b4:	inc    edi
  41d0b5:	dec    ebp
  41d0b6:	imul   ebp,DWORD PTR [eax]
  41d0b9:	je     0x41d0bd
  41d0bb:	inc    ebx
  41d0bc:	(bad)
  41d0bf:	idiv   BYTE PTR [ecx+0x76]
  41d0c2:	inc    edi
  41d0c3:	retf   0xe841
  41d0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0c7:	call   0x7b02609a
  41d0cc:	ss sahf 
  41d0ce:	fsubr  QWORD PTR [esi-0x331f8c18]
  41d0d4:	xor    ecx,ebp
  41d0d6:	pop    edi
  41d0d7:	ins    DWORD PTR es:[edi],dx
  41d0d8:	out    0x22,eax
  41d0da:	cmp    ah,BYTE PTR [esp+edi*2-0x52]
  41d0de:	cs push ecx
  41d0e0:	pop    ss
  41d0e1:	sar    DWORD PTR [edx+0x68],cl
  41d0e4:	push   es
  41d0e5:	fsub   QWORD PTR [ebp-0x70939671]
  41d0eb:	jp     0x41d0db
  41d0ed:	mov    cl,0x9d
  41d0ef:	sub    BYTE PTR [edx-0x581eea08],bh
  41d0f5:	in     eax,dx
  41d0f6:	and    ebp,edx
  41d0f8:	in     eax,0x92
  41d0fa:	scas   eax,DWORD PTR es:[edi]
  41d0fb:	scas   al,BYTE PTR es:[edi]
  41d0fc:	add    BYTE PTR [eax-0x27],bh
  41d0ff:	shl    BYTE PTR [edi+0x40],cl
  41d102:	xor    esi,eax
  41d104:	pop    ecx
  41d105:	and    ch,BYTE PTR [esi+0xb083fa8]
  41d10b:	push   esi
  41d10c:	adc    edx,edi
  41d10e:	dec    ebx
  41d10f:	leavew 
  41d111:	add    ch,bh
  41d113:	dec    edi
  41d114:	mov    ds:0x373456ab,al
  41d119:	add    edi,DWORD PTR ds:0x7434737c
  41d11f:	and    bl,BYTE PTR [ebx]
  41d121:	sbb    al,0x29
  41d123:	dec    edi
  41d124:	imul   esp,DWORD PTR [ebx],0x295a9c0
  41d12a:	mov    al,0x43
  41d12c:	inc    edx
  41d12d:	push   0xffffffcc
  41d12f:	cmp    eax,0xb45f37e5
  41d134:	imul   edx,ebp,0xffffff97
  41d137:	sbb    eax,0x35f34c60
  41d13c:	cli    
  41d13d:	iret   
  41d13e:	loop   0x41d0cb
  41d140:	lahf   
  41d141:	cld    
  41d142:	pusha  
  41d143:	inc    eax
  41d144:	daa    
  41d145:	daa    
  41d146:	cmp    eax,0x7250e032
  41d14b:	jb     0x41d1a3
  41d14d:	cmc    
  41d14e:	mov    al,ds:0xb32a0025
  41d153:	sub    DWORD PTR ds:0x1a8ab661,0x61dc5b7b
  41d15d:	jg     0x41d1cb
  41d15f:	pop    edi
  41d160:	or     al,0xe8
  41d162:	sub    edi,DWORD PTR [ecx+0x4bdc2839]
  41d168:	inc    ecx
  41d169:	loope  0x41d108
  41d16b:	inc    ebp
  41d16c:	and    BYTE PTR [esi-0x1e],bh
  41d16f:	shl    bh,1
  41d171:	lahf   
  41d172:	dec    ebx
  41d173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d174:	dec    bl
  41d176:	mov    esi,0xb5347eb9
  41d17b:	sar    DWORD PTR gs:[edx+ecx*1],cl
  41d17f:	xor    al,0x41
  41d181:	sbb    DWORD PTR [eax+0x17a39d67],esi
  41d187:	xchg   ebx,eax
  41d188:	mov    DWORD PTR [eax+0x29],ecx
  41d18b:	jb     0x41d146
  41d18d:	jg     0x41d19e
  41d18f:	mov    ebx,0x6d1d3b9c
  41d194:	push   ds
  41d195:	fsub   DWORD PTR [ebx+0x459dfd2e]
  41d19b:	imul   edx,DWORD PTR [ebx-0x6ef05094],0xffffffd4
  41d1a2:	aaa    
  41d1a3:	or     BYTE PTR [ebx],0x58
  41d1a6:	jle    0x41d19f
  41d1a8:	mov    bl,0x58
  41d1aa:	cmp    al,0x77
  41d1ac:	aaa    
  41d1ad:	call   0xa568:0xb7c831d8
  41d1b4:	out    dx,al
  41d1b5:	mov    ebp,ebx
  41d1b7:	mov    edx,edx
  41d1b9:	aaa    
  41d1ba:	push   0xffffffcb
  41d1bc:	aam    0x84
  41d1be:	add    dl,BYTE PTR [edx-0x3b]
  41d1c1:	icebp  
  41d1c2:	(bad)  
  41d1c3:	cmp    edi,DWORD PTR [eax-0x76]
  41d1c6:	shld   DWORD PTR [esi],edx,cl
  41d1c9:	cmp    bh,BYTE PTR [ebp+eiz*4-0x3c]
  41d1cd:	enter  0xd4ca,0x47
  41d1d1:	fstp   DWORD PTR [edi+0x21843f40]
  41d1d7:	jae    0x41d1fb
  41d1d9:	adc    BYTE PTR [ebx+0x4399c2f4],ah
  41d1df:	mov    ch,0x5a
  41d1e1:	int3   
  41d1e2:	iret   
  41d1e3:	clc    
  41d1e4:	repz mov ah,0xb4
  41d1e7:	test   DWORD PTR [ebx+ebp*2-0xa3e6cec],0x64dfb235
  41d1f2:	push   cs
  41d1f3:	loope  0x41d1d7
  41d1f5:	push   ax
  41d1f7:	mov    WORD PTR ds:0x84d3af72,ss
  41d1fd:	imul   eax,DWORD PTR [ebp+eiz*4-0x43],0x5c
  41d202:	push   0x9598856b
  41d207:	or     BYTE PTR [edi+0x3f59b59c],cl
  41d20d:	adc    BYTE PTR [ebx-0x36],cl
  41d210:	jp     0x41d26b
  41d212:	addr16 sahf 
  41d214:	pusha  
  41d215:	adc    BYTE PTR [ecx-0x14f9a571],dh
  41d21b:	cwde   
  41d21c:	xor    al,0xe6
  41d21e:	adc    eax,0x3e000059
  41d223:	pop    esi
  41d224:	xchg   ebx,eax
  41d225:	mov    esp,0xafbf04c0
  41d22a:	jae    0x41d242
  41d22c:	push   ss
  41d22d:	daa    
  41d22e:	sar    DWORD PTR [eax+0x21],0x3b
  41d232:	es and ch,BYTE PTR ss:[ecx]
  41d236:	sbb    BYTE PTR [esp+edi*4-0x6d],dl
  41d23a:	dec    edx
  41d23b:	xlat   BYTE PTR ds:[ebx]
  41d23c:	les    edx,FWORD PTR [esi+edx*4-0x25dcbf22]
  41d243:	loopne 0x41d1c9
  41d245:	pop    esi
  41d246:	inc    ebx
  41d247:	cmp    al,0xed
  41d249:	int3   
  41d24a:	inc    edi
  41d24b:	stos   DWORD PTR es:[edi],eax
  41d24c:	loop   0x41d1e4
  41d24e:	sbb    al,0xed
  41d250:	or     DWORD PTR [ebp-0xc],edx
  41d253:	ss inc edi
  41d255:	sbb    BYTE PTR [ebx-0x29ae0f89],bl
  41d25b:	stos   BYTE PTR es:[edi],al
  41d25c:	add    dl,0x7d
  41d25f:	adc    eax,0x2ca432d1
  41d264:	iret   
  41d265:	test   eax,0xb8351737
  41d26a:	mov    eax,0xc90727d8
  41d26f:	in     eax,0x92
  41d271:	cmp    eax,0x200f67d1
  41d276:	clc    
  41d277:	ins    BYTE PTR es:[edi],dx
  41d278:	push   ebp
  41d279:	jo     0x41d1fd
  41d27b:	add    DWORD PTR [edx-0x7b9965e],ebx
  41d281:	dec    ebp
  41d282:	inc    esp
  41d283:	pop    eax
  41d284:	leave  
  41d285:	add    bl,BYTE PTR [esi]
  41d287:	hlt    
  41d288:	or     ecx,edi
  41d28a:	popf   
  41d28b:	xchg   DWORD PTR [eax+ebx*4],ebp
  41d28e:	push   0x37ac4cf6
  41d293:	call   0x60ac2c57
  41d298:	std    
  41d299:	aas    
  41d29a:	pushf  
  41d29b:	popaw  
  41d29d:	sbb    ch,BYTE PTR [ecx+0xc]
  41d2a0:	mov    eax,ds:0xe0cccae8
  41d2a5:	sbb    dl,cl
  41d2a7:	fnsave [edi-0x1acb8379]
  41d2ad:	pop    es
  41d2ae:	sbb    DWORD PTR [esi],edx
  41d2b0:	(bad)  
  41d2b1:	(bad)
  41d2b5:	or     BYTE PTR [edi],dl
  41d2b7:	sbb    BYTE PTR [esi-0x7f],bh
  41d2ba:	dec    ecx
  41d2bb:	jo     0x41d2c7
  41d2bd:	jno    0x41d25a
  41d2bf:	arpl   WORD PTR [ecx],bx
  41d2c1:	inc    ebp
  41d2c2:	jbe    0x41d26b
  41d2c4:	mov    dh,0x48
  41d2c6:	sbb    al,0x95
  41d2c8:	xor    DWORD PTR [edi-0x4d],ebx
  41d2cb:	sbb    eax,DWORD PTR [ebx-0x2b]
  41d2ce:	dec    ebx
  41d2cf:	xchg   esp,eax
  41d2d0:	jl     0x41d2b5
  41d2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d3:	aam    0x6d
  41d2d5:	pop    edi
  41d2d6:	mov    bh,0x8a
  41d2d8:	sbb    BYTE PTR [edi-0x7f],dh
  41d2db:	dec    ecx
  41d2dc:	adc    al,0xc4
  41d2de:	je     0x41d30a
  41d2e0:	inc    ecx
  41d2e1:	jmp    0xedd71f64
  41d2e6:	(bad)  
  41d2e7:	mov    cl,0x1
  41d2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ea:	mov    cl,0xa6
  41d2ec:	cdq    
  41d2ed:	aaa    
  41d2ee:	xchg   DWORD PTR [edx+0x35],edi
  41d2f1:	jp     0x41d33b
  41d2f3:	pop    edx
  41d2f4:	push   edx
  41d2f5:	sbb    al,0xb6
  41d2f7:	xor    eax,0xba1276a
  41d2fc:	inc    eax
  41d2fd:	cmp    al,0x65
  41d2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d300:	pushf  
  41d301:	jle    0x41d2ef
  41d303:	xor    eax,0x96cb0463
  41d308:	daa    
  41d309:	das    
  41d30a:	imul   esp,DWORD PTR [eax+0x32],0x50
  41d30e:	jne    0x41d315
  41d310:	xor    edi,eax
  41d312:	arpl   WORD PTR [ebx+0x72],ax
  41d315:	pop    ds
  41d316:	push   0x7cfb6147
  41d31b:	or     DWORD PTR [esi+0x45],eax
  41d31e:	mov    edi,0x127fc1d0
  41d323:	mov    bh,0x53
  41d325:	arpl   si,bx
  41d327:	push   edx
  41d328:	sbb    eax,0x62a6a5e5
  41d32d:	adc    DWORD PTR [ebx+edi*1+0x58],esi
  41d331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d332:	aad    0x9a
  41d334:	and    DWORD PTR [ecx-0x34ff8c5b],esi
  41d33a:	dec    ecx
  41d33b:	rcl    DWORD PTR [edi],cl
  41d33d:	stc    
  41d33e:	fist   DWORD PTR [esi]
  41d340:	fmul   QWORD PTR [ecx-0xa]
  41d343:	sub    DWORD PTR [esi+0x39a856df],ebx
  41d349:	retf   0x22ce
  41d34c:	inc    ebx
  41d34d:	cmp    ebp,DWORD PTR [edi+0x6a8ed9d8]
  41d353:	mov    DWORD PTR [ecx+0x3db0d1af],esi
  41d359:	sti    
  41d35a:	ja     0x41d34c
  41d35c:	and    al,0x5f
  41d35e:	clc    
  41d35f:	jbe    0x41d3bb
  41d361:	hlt    
  41d362:	xor    al,0x76
  41d364:	jae    0x41d33f
  41d366:	popf   
  41d367:	das    
  41d368:	xchg   esp,eax
  41d369:	rcl    BYTE PTR [eax],cl
  41d36b:	in     al,0x74
  41d36d:	xor    DWORD PTR [ecx-0x6],ebx
  41d370:	or     eax,0xb89c638c
  41d375:	pop    esp
  41d376:	clc    
  41d377:	mov    al,ds:0x4b729acf
  41d37c:	sub    eax,DWORD PTR [esi]
  41d37e:	sahf   
  41d37f:	inc    esi
  41d380:	test   BYTE PTR [esi],ch
  41d382:	jl     0x41d319
  41d384:	dec    eax
  41d385:	dec    edx
  41d386:	xor    BYTE PTR [ebp-0x35244306],0xed
  41d38d:	mov    ebp,0xce6ba2d
  41d392:	add    BYTE PTR [esi],ch
  41d394:	les    edi,FWORD PTR [ecx+0x65]
  41d397:	in     eax,dx
  41d398:	enter  0x52b,0xa5
  41d39c:	(bad)  
  41d39d:	icebp  
  41d39e:	dec    ebx
  41d39f:	aaa    
  41d3a0:	fistp  DWORD PTR [ebp+0x331f3019]
  41d3a6:	push   ds
  41d3a7:	mov    cl,0xd4
  41d3a9:	sub    eax,esi
  41d3ab:	sub    DWORD PTR [ecx-0x67],0x3b136204
  41d3b2:	arpl   WORD PTR [ecx-0x37],cx
  41d3b5:	pop    ebx
  41d3b6:	call   0x196c1034
  41d3bb:	int3   
  41d3bc:	test   eax,0x9c45e7e2
  41d3c1:	jge    0x41d404
  41d3c3:	sahf   
  41d3c4:	lahf   
  41d3c5:	cs (bad) 
  41d3c7:	cmp    al,0xf7
  41d3c9:	(bad)  
  41d3ca:	into   
  41d3cb:	out    0xeb,eax
  41d3cd:	stos   BYTE PTR es:[edi],al
  41d3ce:	(bad)  
  41d3cf:	stc    
  41d3d0:	jecxz  0x41d396
  41d3d2:	mov    DWORD PTR [edx+0x2ac528df],0xcca865b3
  41d3dc:	std    
  41d3dd:	into   
  41d3de:	pop    ss
  41d3df:	fadd   QWORD PTR [ebp+0x15]
  41d3e2:	imul   edx,DWORD PTR [ebp-0x65a31165],0x7e
  41d3e9:	jecxz  0x41d36c
  41d3eb:	and    DWORD PTR [ebp+0x5ea432cd],ecx
  41d3f1:	mov    eax,0xccf0e31c
  41d3f6:	ins    DWORD PTR es:[edi],dx
  41d3f7:	call   DWORD PTR [edx]
  41d3f9:	xchg   esp,eax
  41d3fa:	sub    eax,0x929e605d
  41d3ff:	mov    WORD PTR ds:0xab1e0954,?
  41d405:	mov    ds:0x1d8b2baa,eax
  41d40a:	loope  0x41d460
  41d40c:	pop    edx
  41d40d:	and    al,0x20
  41d40f:	(bad)  
  41d410:	mov    ah,0x47
  41d412:	test   BYTE PTR [ebx-0x65],bh
  41d415:	imul   ecx,DWORD PTR [ecx-0x25],0x15ec92df
  41d41c:	add    al,al
  41d41e:	in     eax,dx
  41d41f:	shl    DWORD PTR [edi-0x4],cl
  41d422:	in     eax,dx
  41d423:	pusha  
  41d424:	retf   0x5f92
  41d427:	xchg   ebp,eax
  41d428:	sbb    ah,BYTE PTR [ecx-0x72]
  41d42b:	int    0xe1
  41d42d:	inc    edx
  41d42e:	aam    0x6b
  41d430:	mov    ?,WORD PTR [esi+0x41f76966]
  41d436:	fst    QWORD PTR [edx]
  41d438:	(bad)  
  41d439:	mov    esi,0x41849291
  41d43e:	out    dx,al
  41d43f:	(bad)  [ecx-0x32ea2241]
  41d445:	icebp  
  41d446:	int    0x0
  41d448:	mov    DWORD PTR [ebp+0x3be77a00],ebx
  41d44e:	xchg   ecx,eax
  41d44f:	pop    edi
  41d450:	out    0xb0,al
  41d452:	push   ds
  41d453:	mov    cl,0x1f
  41d455:	mov    ebp,0xc7f115a0
  41d45a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41d45c:	ret    0xec82
  41d45f:	jne    0x41d3ff
  41d461:	std    
  41d462:	(bad)  
  41d463:	pop    ds
  41d464:	ret    0xf380
  41d467:	(bad)  
  41d468:	jnp    0x41d427
  41d46a:	add    ebx,DWORD PTR [edi-0xc]
  41d46d:	xor    BYTE PTR [edx-0x3b507a32],0x43
  41d474:	sar    BYTE PTR [edx-0x4b3c58a],cl
  41d47a:	push   esp
  41d47b:	add    al,dl
  41d47d:	out    dx,eax
  41d47e:	shl    DWORD PTR [ebx],1
  41d480:	fdivrp st(1),st
  41d482:	mov    ebx,0xb74180d7
  41d487:	retf   0x6703
  41d48a:	ja     0x41d45b
  41d48c:	or     al,0x26
  41d48e:	sub    al,0x7
  41d490:	cmp    DWORD PTR [ebx-0x70],esp
  41d493:	sub    esp,DWORD PTR [ebp-0x6eb68c74]
  41d499:	and    eax,0xefe2801d
  41d49e:	or     eax,0xc48dbb67
  41d4a3:	pushf  
  41d4a4:	xchg   ebp,eax
  41d4a5:	mov    esi,0xaed21412
  41d4aa:	ret    
  41d4ab:	dec    ecx
  41d4ac:	aad    0x79
  41d4ae:	fadd   QWORD PTR [ecx-0x7b20b3ea]
  41d4b4:	pmuludq mm5,mm4
  41d4b7:	xchg   ebx,eax
  41d4b8:	shl    BYTE PTR [edx-0x2eb5d52d],cl
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0x355ff411
  41d4cf:	inc    edx
  41d4d0:	into   
  41d4d1:	xchg   edx,eax
  41d4d2:	dec    ebp
  41d4d3:	push   eax
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	hlt    
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [edx+esi*2+0x3c],dh
  41d4dd:	pop    ebp
  41d4de:	mov    bl,0xe9
  41d4e0:	xor    esp,DWORD PTR [eax]
  41d4e2:	mov    edi,DWORD PTR [esi]
  41d4e4:	clc    
  41d4e5:	jo     0x41d53f
  41d4e7:	sub    dl,BYTE PTR [ecx-0x78]
  41d4ea:	in     eax,dx
  41d4eb:	test   BYTE PTR [edi],al
  41d4ed:	in     al,0x1b
  41d4ef:	inc    ebp
  41d4f0:	test   DWORD PTR [ebx+0x3871d725],edi
  41d4f6:	mov    ebx,0xed14328e
  41d4fb:	lock push 0xffffffa8
  41d4fe:	cmp    al,0x93
  41d500:	dec    edi
  41d501:	rol    BYTE PTR [edx],cl
  41d503:	ret    
  41d504:	cmc    
  41d505:	in     al,dx
  41d506:	fst    QWORD PTR [eax+0x37]
  41d509:	leave  
  41d50a:	icebp  
  41d50b:	call   0xa39fa39e
  41d510:	xor    eax,0x470e537f
  41d515:	or     eax,0xacd7864e
  41d51a:	inc    edx
  41d51b:	aad    0x17
  41d51d:	push   ecx
  41d51e:	stos   BYTE PTR es:[edi],al
  41d51f:	inc    eax
  41d520:	pusha  
  41d521:	leave  
  41d522:	call   0xfca90d98
  41d527:	icebp  
  41d528:	push   ebp
  41d529:	cmp    esi,eax
  41d52b:	nop
  41d52c:	push   edx
  41d52d:	and    al,BYTE PTR [edx+0x236fc97f]
  41d533:	mov    ecx,0xf1eb6715
  41d538:	gs repz cwde 
  41d53b:	jg     0x41d510
  41d53d:	jmp    0x89b5:0x6060889a
  41d544:	das    
  41d545:	fwait
  41d546:	sbb    DWORD PTR ds:0xec627595,edx
  41d54c:	dec    esp
  41d54d:	push   es
  41d54e:	imul   esi,DWORD PTR ds:0xb6507723,0xfffffffe
  41d555:	aad    0x2e
  41d557:	(bad)  
  41d559:	push   0x74a850d1
  41d55e:	xchg   esi,eax
  41d55f:	jnp    0x41d52b
  41d561:	(bad)  [ebx+edx*8]
  41d564:	push   0x8a084b49
  41d569:	jmp    0x41d53c
  41d56b:	dec    ecx
  41d56c:	ret    0x76d1
  41d56f:	das    
  41d570:	or     DWORD PTR [ebx-0x6df66781],edi
  41d576:	pop    es
  41d577:	aaa    
  41d578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d579:	cpuid  
  41d57b:	cmp    ebx,ebx
  41d57d:	sbb    BYTE PTR [ecx+0x1edd99fe],0xf
  41d584:	sbb    DWORD PTR [edi+0x30],0x9d24edfc
  41d58b:	loop   0x41d555
  41d58d:	sub    DWORD PTR [ebp-0x30],edi
  41d590:	mov    edx,DWORD PTR [ebx]
  41d592:	arpl   bx,cx
  41d594:	mov    cl,0x80
  41d596:	(bad)
  41d59a:	scas   eax,DWORD PTR es:[edi]
  41d59b:	pop    ebp
  41d59c:	fadd   QWORD PTR [esp+esi*8+0x5c]
  41d5a0:	sti    
  41d5a1:	mov    bl,0x6f
  41d5a3:	mov    ecx,0x45ba6eee
  41d5a8:	sub    eax,0xb26843a3
  41d5ad:	push   0x3
  41d5af:	mov    ch,BYTE PTR [esi+0x29eec4fb]
  41d5b5:	ins    BYTE PTR es:[edi],dx
  41d5b6:	ret    0x7a5b
  41d5b9:	out    0x83,eax
  41d5bb:	rcr    DWORD PTR ds:0xa87acf46,cl
  41d5c1:	dec    edi
  41d5c2:	push   0xa33a9d29
  41d5c7:	pop    edi
  41d5c8:	rcl    DWORD PTR [esi+0x4f],0x23
  41d5cc:	js     0x41d58a
  41d5ce:	xchg   al,ch
  41d5d0:	jo     0x41d5f1
  41d5d2:	sub    ebx,edx
  41d5d4:	(bad)  ds:0x5875e00
  41d5da:	sbb    eax,0xb4f03cae
  41d5df:	jge    0x41d5b1
  41d5e1:	pop    eax
  41d5e2:	push   ss
  41d5e3:	shl    DWORD PTR ds:0x1db8db0b,1
  41d5e9:	adc    al,0x3
  41d5eb:	iret   
  41d5ec:	jmp    0x8bc863e7
  41d5f1:	lahf   
  41d5f2:	cmp    DWORD PTR [eax],esi
  41d5f4:	outs   dx,DWORD PTR ds:[esi]
  41d5f5:	sbb    edx,DWORD PTR [esi-0x3]
  41d5f8:	dec    ebp
  41d5f9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fb:	inc    esp
  41d5fc:	test   al,0xfb
  41d5fe:	adc    ch,BYTE PTR [esi+eax*4-0xc68a3e6]
  41d605:	enter  0xae09,0x1b
  41d609:	lahf   
  41d60a:	xchg   ecx,eax
  41d60b:	ror    DWORD PTR [esi-0x67],cl
  41d60e:	pushf  
  41d60f:	scas   eax,DWORD PTR es:[edi]
  41d610:	sbb    eax,DWORD PTR [esi]
  41d612:	mov    ?,edx
  41d614:	repnz rcl BYTE PTR [esi-0x64b1f7f5],0xc5
  41d61c:	outs   dx,BYTE PTR ds:[esi]
  41d61d:	xchg   ebx,eax
  41d61e:	js     0x41d686
  41d620:	push   edi
  41d621:	inc    ebx
  41d622:	adc    BYTE PTR [esp+ecx*8+0x2338ba1c],ah
  41d629:	inc    esi
  41d62a:	jbe    0x41d632
  41d62c:	cmc    
  41d62d:	outs   dx,DWORD PTR ds:[esi]
  41d62e:	fcom   QWORD PTR [ebp+0xf]
  41d631:	(bad)  
  41d632:	dec    esp
  41d633:	mov    eax,ds:0x757a8f0a
  41d638:	inc    esi
  41d639:	es inc ebp
  41d63b:	leave  
  41d63c:	mov    eax,0x38409d94
  41d641:	sbb    eax,0x4084cb92
  41d646:	loop   0x41d67b
  41d648:	cs sbb al,0x2d
  41d64b:	and    DWORD PTR [eax],0x12f47bf
  41d651:	enter  0x7532,0x9e
  41d655:	xchg   esi,eax
  41d656:	adc    ebp,DWORD PTR ds:[ebx-0x61]
  41d65a:	pop    edi
  41d65b:	and    al,0xe8
  41d65d:	add    al,0xdc
  41d65f:	cmp    BYTE PTR [esi],0x60
  41d662:	(bad)  
  41d663:	pop    esp
  41d664:	mov    ds:0xac209915,al
  41d669:	sub    edi,esi
  41d66b:	mov    edi,0x8efc238a
  41d670:	pop    esi
  41d671:	repz mov eax,0xaf440430
  41d677:	xlat   BYTE PTR ds:[ebx]
  41d678:	outs   dx,BYTE PTR ds:[esi]
  41d679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d67a:	jp     0x41d64e
  41d67c:	mov    gs,WORD PTR [ebx-0x8]
  41d67f:	pushf  
  41d680:	jecxz  0x41d6b6
  41d682:	dec    esp
  41d684:	or     eax,0xc7d31026
  41d689:	add    al,BYTE PTR [eax-0x6f]
  41d68c:	inc    ebx
  41d68d:	cmp    eax,0xb97322e7
  41d692:	pop    esi
  41d693:	cmp    dl,BYTE PTR [esi+ecx*4-0x7c7090db]
  41d69a:	sub    ch,dl
  41d69c:	mov    esp,0x2eafdbfa
  41d6a1:	push   0xb14ed914
  41d6a6:	add    al,BYTE PTR [eax+0x33]
  41d6a9:	lahf   
  41d6aa:	inc    esp
  41d6ab:	aam    0xce
  41d6ad:	lods   eax,DWORD PTR ds:[esi]
  41d6ae:	test   edx,ebx
  41d6b0:	out    dx,al
  41d6b1:	mov    ah,0xb0
  41d6b3:	pushf  
  41d6b4:	push   esi
  41d6b5:	inc    esi
  41d6b6:	add    eax,0xb90b1e81
  41d6bb:	adc    eax,0xf854ac0a
  41d6c0:	pop    ds
  41d6c1:	pop    ds
  41d6c2:	hlt    
  41d6c3:	mov    ebx,DWORD PTR [ecx]
  41d6c5:	ret    0x3f7
  41d6c8:	xor    BYTE PTR [ecx+0x5bdc7d2],0x9a
  41d6cf:	ins    BYTE PTR es:[edi],dx
  41d6d0:	int    0x53
  41d6d2:	into   
  41d6d3:	mov    esi,0x7012c3a7
  41d6d8:	hlt    
  41d6d9:	xlat   BYTE PTR ds:[ebx]
  41d6da:	push   ss
  41d6db:	cld    
  41d6dc:	ror    DWORD PTR [edx*4+0x6f03d5b7],1
  41d6e3:	inc    esp
  41d6e4:	pushf  
  41d6e5:	mov    bl,0x7a
  41d6e7:	mov    WORD PTR [eax+ecx*4-0x3],?
  41d6eb:	xchg   ebp,eax
  41d6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ed:	imul   edx,ebx,0x245b1de2
  41d6f3:	push   edx
  41d6f4:	push   cs
  41d6f5:	push   edx
  41d6f6:	hlt    
  41d6f7:	lahf   
  41d6f8:	mov    ds:0xbe2f3a5d,eax
  41d6fd:	or     DWORD PTR [eax-0x4294d248],edi
  41d703:	dec    esi
  41d704:	push   0xac8c591c
  41d709:	push   ss
  41d70a:	xor    bl,dh
  41d70c:	xchg   ebx,eax
  41d70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d70e:	mov    ds:0xb037ba6f,eax
  41d713:	or     eax,0x2462ad2f
  41d718:	pop    ds
  41d719:	std    
  41d71a:	call   0x96fb:0xfa584942
  41d721:	loopne 0x41d702
  41d723:	nop
  41d724:	into   
  41d725:	xlat   BYTE PTR ds:[ebx]
  41d726:	repz lock pop esp
  41d729:	mov    al,0xa8
  41d72b:	pop    esp
  41d72c:	pop    esi
  41d72d:	mov    bl,0x4
  41d72f:	jae    0x41d6c1
  41d731:	loopne 0x41d6df
  41d733:	mov    dh,0x15
  41d735:	mov    ds:0x3ece47f0,al
  41d73a:	mov    BYTE PTR [ebx+0xed4a8c2],ch
  41d740:	in     al,0xf6
  41d742:	aad    0x1c
  41d744:	push   edi
  41d745:	pop    ss
  41d746:	sahf   
  41d747:	out    dx,al
  41d748:	mov    ah,0x14
  41d74a:	int3   
  41d74b:	xchg   edi,eax
  41d74c:	rcr    BYTE PTR [ebp+ebp*1-0x4f24d80b],cl
  41d753:	std    
  41d754:	or     al,0x6c
  41d756:	cli    
  41d757:	jb     0x41d6e3
  41d759:	sbb    BYTE PTR [ebx+edi*1-0x5d119f8],0x29
  41d761:	xchg   edx,eax
  41d762:	xchg   edx,eax
  41d763:	mov    ebp,0x3cce238e
  41d768:	mov    es,WORD PTR ds:0x34e428b8
  41d76e:	jns    0x41d7b8
  41d770:	push   esp
  41d771:	pusha  
  41d772:	loop   0x41d79c
  41d774:	jne    0x41d7ce
  41d776:	pop    esi
  41d777:	cmp    eax,0x4bfe620f
  41d77c:	inc    esi
  41d77d:	pop    edi
  41d77e:	lods   al,BYTE PTR ds:[esi]
  41d77f:	push   ebx
  41d780:	xchg   edx,eax
  41d781:	mov    ebx,0x92734d4b
  41d786:	mov    esi,0xe1ccfea1
  41d78b:	ins    BYTE PTR es:[edi],dx
  41d78c:	sub    al,0xcc
  41d78e:	cld    
  41d78f:	popf   
  41d790:	aaa    
  41d791:	sbb    eax,0xd26f7472
  41d796:	jmp    0x260a:0xa07f0c92
  41d79d:	add    al,0x99
  41d79f:	mov    cl,0x50
  41d7a1:	inc    eax
  41d7a2:	xchg   edi,eax
  41d7a3:	jns    0x41d725
  41d7a5:	jne    0x41d7b0
  41d7a7:	cmp    ebp,ebp
  41d7a9:	pop    ds
  41d7aa:	shl    edi,0xcd
  41d7ad:	jo     0x41d823
  41d7af:	jns    0x41d809
  41d7b1:	mov    ecx,0x35c34fae
  41d7b6:	xor    cl,BYTE PTR [edx+0x1f96cabb]
  41d7bc:	mov    eax,ds:0x1e29b970
  41d7c1:	out    0xc0,eax
  41d7c3:	jge    0x41d806
  41d7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7c6:	sbb    BYTE PTR [eax],bl
  41d7c8:	outs   dx,BYTE PTR ds:[esi]
  41d7c9:	mov    ?,WORD PTR [eax+0x7b7fe2a3]
  41d7cf:	repz sub ch,BYTE PTR [ebx-0x340c5eac]
  41d7d6:	add    ebx,DWORD PTR [eax]
  41d7d8:	jmp    0x41d7ff
  41d7da:	cs pop ebx
  41d7dc:	jle    0x41d7be
  41d7de:	jae    0x41d7bd
  41d7e0:	pop    eax
  41d7e1:	adc    BYTE PTR [eax],0x19
  41d7e4:	pop    ebp
  41d7e5:	ficomp WORD PTR [ebx+0x1b0af055]
  41d7eb:	fld    QWORD PTR [edx+0x5c]
  41d7ee:	push   edi
  41d7ef:	stc    
  41d7f0:	push   ebx
  41d7f1:	cmp    ecx,DWORD PTR [ebp+0x65ce70eb]
  41d7f7:	pop    ebp
  41d7f8:	addr16 pop ebx
  41d7fa:	enter  0xe44c,0x70
  41d7fe:	sbb    dh,BYTE PTR [ebp-0x1ec1e8a1]
  41d804:	mov    ds:0xad2d2537,eax
  41d809:	call   0x6c83:0x76aa6a00
  41d810:	xchg   esi,eax
  41d811:	repz int3 
  41d813:	repnz adc al,0x2a
  41d816:	adc    DWORD PTR [edi+ebx*2],edx
  41d819:	lea    eax,[ecx+0x418e6e4f]
  41d81f:	out    0x5a,al
  41d821:	retf   0xc210
  41d824:	xchg   edi,eax
  41d825:	mov    ebp,0xa9866317
  41d82a:	jecxz  0x41d869
  41d82c:	dec    edx
  41d82d:	ret    
  41d82e:	push   edx
  41d82f:	sbb    dh,ch
  41d831:	jmp    0x41d8a7
  41d833:	call   0x223f:0x910b2958
  41d83a:	ins    DWORD PTR es:[edi],dx
  41d83b:	pushf  
  41d83c:	push   DWORD PTR [ecx-0x254e2bbc]
  41d842:	mov    DWORD PTR [edi+0x5d],ebp
  41d845:	push   0x4d951705
  41d84a:	mov    esp,ecx
  41d84c:	inc    ebx
  41d84d:	jb     0x41d857
  41d84f:	and    ch,BYTE PTR [esi]
  41d851:	inc    esi
  41d852:	jo     0x41d89d
  41d854:	add    al,0x17
  41d856:	lods   al,BYTE PTR ds:[esi]
  41d857:	pop    esp
  41d858:	pusha  
  41d859:	lods   eax,DWORD PTR ds:[esi]
  41d85a:	mov    dh,BYTE PTR [esi+0x7a65ae4]
  41d860:	inc    eax
  41d861:	pop    ds
  41d862:	lea    ebp,[ecx+0x460397e4]
  41d868:	or     cl,BYTE PTR [ecx-0x53873286]
  41d86e:	les    ecx,FWORD PTR ds:0x88c93fe2
  41d874:	ja     0x41d80f
  41d876:	addr16 dec ebp
  41d878:	jno    0x41d854
  41d87a:	inc    ebx
  41d87b:	stos   BYTE PTR es:[edi],al
  41d87c:	mov    ds:0xf267c8f2,al
  41d881:	or     ecx,DWORD PTR [eax]
  41d883:	inc    ebx
  41d884:	mov    dh,0x41
  41d886:	xor    BYTE PTR [esi+0x2b],al
  41d889:	dec    esp
  41d88a:	aam    0x7f
  41d88c:	scas   al,BYTE PTR es:[edi]
  41d88d:	leave  
  41d88e:	hlt    
  41d88f:	mov    esi,0xde9b9db9
  41d894:	in     eax,dx
  41d895:	popf   
  41d896:	into   
  41d897:	pop    esi
  41d898:	pushf  
  41d899:	sub    bh,BYTE PTR [ebx]
  41d89b:	ja     0x41d8f5
  41d89d:	bound  esi,QWORD PTR ds:0x9b9b1028
  41d8a3:	sbb    BYTE PTR [edx],0x8d
  41d8a6:	pop    ss
  41d8a7:	mov    bl,0x41
  41d8a9:	das    
  41d8aa:	pop    edi
  41d8ab:	fstp   st(7)
  41d8ad:	xor    esp,ebp
  41d8af:	jo     0x41d897
  41d8b1:	outs   dx,DWORD PTR ds:[esi]
  41d8b2:	dec    edi
  41d8b3:	and    BYTE PTR [ebx-0x2a61d751],0x0
  41d8ba:	push   edi
  41d8bb:	cwde   
  41d8bc:	pop    ebx
  41d8bd:	das    
  41d8be:	aas    
  41d8bf:	sbb    DWORD PTR ds:0x3a849fb6,0xae6bb767
  41d8c9:	sar    DWORD PTR [eax-0x79a8cba],1
  41d8cf:	iret   
  41d8d0:	jno    0x41d85c
  41d8d2:	jnp    0x41d952
  41d8d4:	mov    edx,0x2913ab7f
  41d8d9:	mov    cl,0xc1
  41d8db:	jecxz  0x41d88e
  41d8dd:	mov    ah,0x12
  41d8df:	push   es
  41d8e0:	jne    0x41d948
  41d8e2:	jp     0x41d8b4
  41d8e4:	cmp    DWORD PTR [edx],esp
  41d8e6:	shl    BYTE PTR [edi-0x1cfbbf2],0x3c
  41d8ed:	imul   DWORD PTR ds:0x844dece3
  41d8f3:	popf   
  41d8f4:	retf   
  41d8f5:	cwde   
  41d8f6:	ret    0xd59a
  41d8f9:	nop
  41d8fa:	adc    edi,edx
  41d8fc:	pusha  
  41d8fd:	adc    BYTE PTR [edx],bl
  41d8ff:	xor    edi,edx
  41d901:	into   
  41d902:	aad    0xaf
  41d904:	pop    eax
  41d905:	cmp    al,0xd0
  41d907:	push   es
  41d908:	sub    al,BYTE PTR [edx]
  41d90a:	in     eax,0x23
  41d90c:	or     eax,0x47bc021c
  41d911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d912:	xorps  xmm1,xmm1
  41d915:	je     0x41d97c
  41d917:	dec    ebp
  41d918:	in     eax,0x43
  41d91a:	int3   
  41d91b:	cmp    dl,BYTE PTR [esi]
  41d91d:	sub    cl,ch
  41d91f:	adc    esp,DWORD PTR [edx]
  41d921:	sbb    BYTE PTR [ebx+0x68],0xa8
  41d925:	imul   esi,DWORD PTR [ebx-0x7a3f48b7],0xb7f35886
  41d92f:	jne    0x41d945
  41d931:	inc    edi
  41d932:	xor    eax,0x7828b32
  41d937:	mov    DWORD PTR [esi+edx*8],edi
  41d93a:	test   eax,0x848fcd9c
  41d93f:	or     DWORD PTR [ebx+esi*1-0x54],esp
  41d943:	js     0x41d90b
  41d945:	sub    eax,0x3b03161f
  41d94a:	xor    al,0x9d
  41d94c:	popa   
  41d94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d94e:	sub    ah,al
  41d950:	jg     0x41d9b6
  41d952:	xchg   ecx,eax
  41d953:	mov    esp,ecx
  41d955:	mov    esp,0x70e1834a
  41d95a:	iret   
  41d95b:	push   ebx
  41d95c:	imul   ecx,DWORD PTR ds:0x319ace55,0x42445731
  41d966:	outs   dx,BYTE PTR ds:[esi]
  41d967:	hlt    
  41d968:	std    
  41d969:	xchg   ecx,eax
  41d96a:	jmp    0x37e458e5
  41d96f:	sar    BYTE PTR [edx-0x449322b9],1
  41d975:	pushf  
  41d976:	add    eax,0xb143a098
  41d97b:	dec    DWORD PTR ds:0x5e6f2b77
  41d981:	shl    DWORD PTR [eax],1
  41d983:	ror    bh,1
  41d985:	cwde   
  41d986:	dec    eax
  41d987:	jne    0x41d91e
  41d989:	cmp    dh,al
  41d98b:	and    al,cl
  41d98d:	rcr    BYTE PTR [edi+eiz*1+0x4b3edd49],cl
  41d994:	ror    DWORD PTR [esi+0x1f],cl
  41d997:	and    al,0x5b
  41d999:	cmp    DWORD PTR [esi-0x1a],esi
  41d99c:	sub    BYTE PTR [edi],bh
  41d99e:	or     al,0xf0
  41d9a0:	adc    ah,BYTE PTR [esi+ebx*8+0x5e]
  41d9a4:	push   esp
  41d9a5:	and    eax,0x8e14f4b4
  41d9aa:	mov    ch,0x3e
  41d9ac:	pop    ss
  41d9ad:	inc    esi
  41d9ae:	pushf  
  41d9af:	cmp    DWORD PTR [esi],esi
  41d9b1:	retf   0xd882
  41d9b4:	sar    DWORD PTR [esi+0x5b],0xe1
  41d9b8:	lea    esi,[eax-0x4e]
  41d9bb:	sbb    eax,0x497b418a
  41d9c0:	scas   eax,DWORD PTR es:[edi]
  41d9c1:	or     ch,BYTE PTR [ebp+0x1960ee2e]
  41d9c7:	push   esp
  41d9c8:	xchg   edx,eax
  41d9c9:	(bad)
  41d9cc:	adc    eax,0xc1
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	xor    ebp,DWORD PTR [esi+0x5541620c]
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	hlt    
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR [ecx],bl
  41d9eb:	pusha  
  41d9ec:	adc    DWORD PTR [eax-0x4b],0xffffffcf
  41d9f0:	(bad)  
  41d9f1:	fldenv [ebx+0x2e533d21]
  41d9f7:	hlt    
  41d9f8:	dec    esp
  41d9f9:	mov    bh,0xe9
  41d9fb:	js     0x41da29
  41d9fd:	fnstsw WORD PTR [ebx+0x63b0f551]
  41da03:	scas   al,BYTE PTR es:[edi]
  41da04:	add    edx,DWORD PTR [ecx]
  41da06:	sub    al,BYTE PTR [esi]
  41da08:	and    eax,0x9368c9c
  41da0d:	xlat   BYTE PTR ds:[ebx]
  41da0e:	mov    BYTE PTR [ebx-0x651660f5],ah
  41da14:	loope  0x41d9fd
  41da16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	and    cl,BYTE PTR [edi]
  41da1a:	cmp    eax,0x22e30c38
  41da1f:	and    DWORD PTR ds:0x53abd54e,ecx
  41da25:	aaa    
  41da26:	jno    0x41d9cc
  41da28:	cmc    
  41da29:	jle    0x41da14
  41da2b:	iret   
  41da2c:	shl    DWORD PTR [esi+0x68f2964d],0x28
  41da33:	add    al,BYTE PTR ds:[eax+0x6c]
  41da37:	stc    
  41da38:	sar    dh,1
  41da3a:	xor    dl,BYTE PTR [esp+ebx*1+0x2b912943]
  41da41:	pop    edx
  41da42:	xchg   edx,eax
  41da43:	jbe    0x41d9dc
  41da45:	dec    esi
  41da46:	inc    eax
  41da47:	sbb    eax,0x6c1baaa9
  41da4d:	or     eax,0x3ebff922
  41da52:	jl     0x41da7e
  41da54:	xlat   BYTE PTR ds:[ebx]
  41da55:	call   0xfa03ef00
  41da5a:	out    0x8a,al
  41da5c:	ins    DWORD PTR es:[edi],dx
  41da5d:	and    DWORD PTR [edx-0x35],edi
  41da60:	mov    al,ds:0xb24021f1
  41da65:	jns    0x41da11
  41da67:	or     al,0xb8
  41da69:	es push ebp
  41da6b:	jmp    0xa0f52169
  41da70:	xchg   edi,eax
  41da71:	sahf   
  41da72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da73:	into   
  41da74:	cmp    dl,al
  41da76:	outs   dx,DWORD PTR ds:[esi]
  41da77:	stos   BYTE PTR es:[edi],al
  41da78:	ds xor eax,esi
  41da7b:	dec    esi
  41da7c:	cmp    DWORD PTR [esi+eiz*4+0x3d],0xab687ba2
  41da84:	add    cl,dl
  41da86:	dec    esi
  41da87:	xlat   BYTE PTR ds:[ebx]
  41da88:	int    0xa6
  41da8a:	loopne 0x41da62
  41da8c:	xor    edi,DWORD PTR [edi+0x5dd649ee]
  41da92:	mov    bl,0xe
  41da94:	adc    BYTE PTR [esi+0x13],ah
  41da97:	or     al,0x2e
  41da99:	lods   eax,DWORD PTR ds:[esi]
  41da9a:	in     eax,0x1e
  41da9c:	jnp    0x41da61
  41da9e:	mulps  xmm0,XMMWORD PTR [ebp+0x68]
  41daa2:	out    dx,al
  41daa3:	sub    DWORD PTR [esi],edx
  41daa5:	dec    ch
  41daa7:	sti    
  41daa8:	or     BYTE PTR [ecx+0x6f],bl
  41daab:	cmp    edi,DWORD PTR [edx+0x358635ea]
  41dab1:	jl     0x41da55
  41dab3:	in     al,0x26
  41dab5:	pusha  
  41dab6:	add    esp,DWORD PTR [edi-0x80]
  41dab9:	adc    cl,BYTE PTR [ebx]
  41dabb:	js     0x41daaf
  41dabd:	adc    edi,edi
  41dabf:	push   ds
  41dac0:	aam    0xcf
  41dac2:	imul   ebp,DWORD PTR [edi],0x46a09716
  41dac8:	mov    edi,0x138da4f2
  41dacd:	jecxz  0x41da51
  41dacf:	mov    bl,0x2d
  41dad1:	xor    cl,ah
  41dad3:	mov    ah,cl
  41dad5:	add    bl,BYTE PTR [ebx]
  41dad7:	ret    0xc9ec
  41dada:	cmp    esi,DWORD PTR [edi+0x56]
  41dadd:	hlt    
  41dade:	mov    esp,0xfb4d8b44
  41dae3:	dec    edx
  41dae4:	cmp    eax,ebp
  41dae6:	shl    DWORD PTR [ebx],1
  41dae8:	push   edi
  41dae9:	and    dh,cl
  41daeb:	fs pop eax
  41daed:	mov    dh,0x5c
  41daef:	xchg   edi,eax
  41daf0:	push   edi
  41daf1:	idiv   BYTE PTR [ebx-0x2bee7b9]
  41daf7:	adc    BYTE PTR [edi+0x5a],bl
  41dafa:	jge    0x41db62
  41dafc:	(bad)  [eax-0x14a314e2]
  41db02:	mov    dl,0xde
  41db04:	std    
  41db05:	shl    bh,0xa5
  41db08:	jae    0x41da8d
  41db0a:	out    dx,eax
  41db0b:	pop    es
  41db0c:	fisub  WORD PTR ds:[ebx]
  41db0f:	lahf   
  41db10:	lock sub DWORD PTR [edx+0x5b0842d],eax
  41db17:	outs   dx,BYTE PTR ds:[esi]
  41db18:	xchg   edx,eax
  41db19:	mov    edx,0x556796b3
  41db1e:	or     DWORD PTR ds:0x4c61155b,ecx
  41db24:	mov    dl,0x64
  41db26:	jmp    0x41dacb
  41db28:	test   al,0x4d
  41db2a:	add    ch,BYTE PTR [edx-0x57f733bf]
  41db30:	pop    ecx
  41db31:	xor    edx,DWORD PTR [ecx]
  41db33:	dec    BYTE PTR [esi-0x66]
  41db36:	es out 0x6c,al
  41db39:	add    BYTE PTR [edx+0x33],bh
  41db3c:	fimul  WORD PTR [edx-0x66]
  41db3f:	jg     0x41db3c
  41db41:	sbb    BYTE PTR [edx],dl
  41db43:	sbb    ebp,DWORD PTR ds:0xb30c2c4f
  41db49:	inc    ecx
  41db4a:	out    dx,eax
  41db4b:	pop    DWORD PTR [edi]
  41db4d:	fsubr  DWORD PTR [eax]
  41db4f:	mov    dh,0x38
  41db51:	xor    eax,0x4d1e8247
  41db56:	div    BYTE PTR [ecx-0x2c]
  41db59:	jmp    0x41db2c
  41db5b:	repnz (bad) 
  41db5d:	mov    cl,0xc9
  41db5f:	dec    ebp
  41db60:	cmp    BYTE PTR [edi-0x34952368],bh
  41db66:	lods   eax,DWORD PTR ds:[esi]
  41db67:	adc    BYTE PTR [esi+eiz*4],ch
  41db6a:	sbb    DWORD PTR ds:[edx-0x3c],0x276921d7
  41db72:	pop    ebx
  41db73:	pop    ss
  41db74:	mov    cl,0xf2
  41db76:	popa   
  41db77:	add    edx,esp
  41db79:	pop    ebx
  41db7a:	(bad)  
  41db7b:	jne    0x41dbe4
  41db7d:	ret    
  41db7e:	xchg   edi,eax
  41db7f:	stos   DWORD PTR es:[edi],eax
  41db80:	jmp    0xf60e:0xbf0899c4
  41db87:	inc    edx
  41db88:	sub    al,0x1a
  41db8a:	adc    eax,0x2b250b9
  41db8f:	aam    0x1c
  41db91:	dec    esi
  41db92:	sub    DWORD PTR [edx],edi
  41db94:	retf   0x50f2
  41db97:	jb     0x41dbb5
  41db99:	dec    edi
  41db9a:	std    
  41db9b:	xchg   edi,eax
  41db9c:	mov    dl,0x74
  41db9e:	fld    DWORD PTR [ebx+0x7a186b9d]
  41dba4:	inc    edx
  41dba5:	sbb    al,0xf9
  41dba7:	je     0x41dbf2
  41dba9:	inc    esp
  41dbaa:	lahf   
  41dbab:	fst    DWORD PTR [ebx]
  41dbad:	rcr    BYTE PTR [ebp-0x19],cl
  41dbb0:	repz mov cl,0x22
  41dbb3:	fild   QWORD PTR [edi]
  41dbb5:	jmp    0xd344:0x3b8f50e2
  41dbbc:	cld    
  41dbbd:	cmp    al,bh
  41dbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc0:	dec    esp
  41dbc1:	add    DWORD PTR [esp+edx*4-0x1fcfd9b4],esi
  41dbc8:	xchg   edx,eax
  41dbc9:	push   0xfffffff8
  41dbcb:	arpl   sp,bp
  41dbcd:	jmp    0xc981:0x22ddbe63
  41dbd4:	xchg   BYTE PTR ds:0x3aa31af2,bl
  41dbda:	push   esi
  41dbdb:	mov    al,0x82
  41dbdd:	in     al,dx
  41dbde:	xor    eax,0xc3206763
  41dbe3:	sahf   
  41dbe4:	and    DWORD PTR [esp+edx*2],ecx
  41dbe7:	ret    
  41dbe8:	mov    eax,0x5852da04
  41dbed:	xor    al,0xf0
  41dbef:	js     0x41db75
  41dbf1:	(bad)  [esp+ebx*2]
  41dbf4:	mov    ebx,0xb777e62e
  41dbf9:	mov    dh,0x19
  41dbfb:	xchg   esp,eax
  41dbfc:	pop    ss
  41dbfd:	add    bl,al
  41dbff:	mov    dh,0x83
  41dc01:	jae    0x41dbf4
  41dc03:	inc    esp
  41dc04:	out    0x73,eax
  41dc06:	jle    0x41dc25
  41dc08:	sub    al,0x88
  41dc0a:	shl    BYTE PTR [eax+0x562255a4],1
  41dc10:	inc    eax
  41dc11:	add    esi,0x77da7701
  41dc17:	push   ebx
  41dc18:	hlt    
  41dc19:	lods   eax,DWORD PTR ds:[esi]
  41dc1a:	inc    ebp
  41dc1b:	pop    esi
  41dc1c:	(bad)  
  41dc1d:	into   
  41dc1e:	push   ebp
  41dc1f:	mov    ebx,ebp
  41dc21:	retf   0x3c4c
  41dc24:	xchg   dl,bl
  41dc26:	xchg   esi,eax
  41dc27:	jns    0x41dbd3
  41dc29:	sbb    DWORD PTR [ebp+esi*2+0x40bcf0ea],ebp
  41dc30:	add    esp,DWORD PTR [ebx-0x38]
  41dc33:	icebp  
  41dc34:	clc    
  41dc35:	sbb    edx,ecx
  41dc37:	pop    ds
  41dc38:	das    
  41dc39:	leave  
  41dc3a:	dec    ebp
  41dc3b:	and    esp,DWORD PTR [edi-0x625d5d27]
  41dc41:	lods   eax,DWORD PTR ds:[esi]
  41dc42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc43:	jo     0x41dcb2
  41dc45:	xor    eax,0x65de71af
  41dc4a:	nop
  41dc4b:	lods   al,BYTE PTR ds:[esi]
  41dc4c:	rol    al,0x83
  41dc4f:	jg     0x41dbf5
  41dc51:	mov    al,ds:0xc27f993a
  41dc56:	push   ss
  41dc57:	push   ebp
  41dc58:	and    ch,al
  41dc5a:	(bad)  
  41dc5b:	call   0x844e:0xd2bd921f
  41dc62:	xlat   BYTE PTR ds:[ebx]
  41dc63:	ins    DWORD PTR es:[edi],dx
  41dc64:	push   esp
  41dc65:	lea    edx,[edx-0x1c]
  41dc68:	jge    0x41dca3
  41dc6a:	jnp    0x41dc49
  41dc6c:	(bad)  
  41dc6d:	outs   dx,DWORD PTR ds:[esi]
  41dc6e:	mov    ebx,0x77331d6d
  41dc73:	push   eax
  41dc74:	adc    BYTE PTR [bx+di+0x15],al
  41dc78:	(bad)  
  41dc79:	in     al,dx
  41dc7a:	arpl   WORD PTR [ecx+0x2b],di
  41dc7d:	mov    ch,0x65
  41dc7f:	aaa    
  41dc80:	sahf   
  41dc81:	and    bl,BYTE PTR [esi+0x18]
  41dc84:	cmp    ebp,DWORD PTR [eax+0x60]
  41dc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc88:	sbb    dl,dl
  41dc8a:	xchg   edi,eax
  41dc8b:	pop    ebp
  41dc8c:	fimul  DWORD PTR [edi-0x37ffcdb9]
  41dc92:	in     al,0x63
  41dc94:	cmc    
  41dc95:	lds    dx,DWORD PTR [eax]
  41dc98:	(bad)
  41dc9c:	push   cs
  41dc9d:	cdq    
  41dc9e:	mov    ecx,0xb5369904
  41dca3:	imul   esi,DWORD PTR [esi-0x3c],0x632737d1
  41dcaa:	ds (bad) 
  41dcac:	nop
  41dcad:	mov    ebx,0x41c11f02
  41dcb2:	pop    esp
  41dcb3:	inc    ebp
  41dcb4:	inc    eax
  41dcb5:	sub    al,0x58
  41dcb7:	dec    esi
  41dcb8:	or     eax,DWORD PTR [eax-0x23]
  41dcbb:	ret    
  41dcbc:	call   0x839d:0x34ed2ff5
  41dcc3:	repnz push ds
  41dcc5:	jg     0x41dd2e
  41dcc7:	xchg   esi,eax
  41dcc8:	dec    ebx
  41dcc9:	out    dx,eax
  41dcca:	pushf  
  41dccb:	xchg   ebx,eax
  41dccc:	inc    edi
  41dccd:	jmp    0xca2:0x1d2ced4b
  41dcd4:	loope  0x41dce1
  41dcd6:	xchg   edi,eax
  41dcd7:	inc    esp
  41dcd8:	mov    esp,0x35555c18
  41dcdd:	or     bl,al
  41dcdf:	or     al,0x3b
  41dce1:	and    eax,0x61ab160b
  41dce6:	mov    dl,0xe5
  41dce8:	and    al,0xe8
  41dcea:	test   DWORD PTR [eax-0xcdccb8d],esp
  41dcf0:	in     eax,dx
  41dcf1:	inc    edi
  41dcf2:	test   BYTE PTR ds:0x3c027a3d,cl
  41dcf8:	in     al,0xea
  41dcfa:	in     eax,0x62
  41dcfc:	sti    
  41dcfd:	xor    edx,ecx
  41dcff:	(bad)  [edx+0x55586fc6]
  41dd05:	das    
  41dd06:	ja     0x41dcc5
  41dd08:	pop    esp
  41dd09:	fwait
  41dd0a:	and    al,0x52
  41dd0c:	mov    dh,0x43
  41dd0e:	jmp    0xe336a690
  41dd13:	add    DWORD PTR [ecx],ecx
  41dd15:	sbb    ch,BYTE PTR [edx+0x48]
  41dd18:	push   ecx
  41dd19:	inc    edi
  41dd1a:	adc    BYTE PTR [ebx],cl
  41dd1c:	push   esp
  41dd1d:	das    
  41dd1e:	fcom   DWORD PTR [ebx-0x3b325e47]
  41dd24:	sar    BYTE PTR [esi],cl
  41dd26:	inc    esp
  41dd27:	pop    es
  41dd28:	mov    al,0x10
  41dd2a:	xor    DWORD PTR [ebx+eiz*4+0x32],esp
  41dd2e:	hlt    
  41dd2f:	mov    edi,DWORD PTR [edi-0x6]
  41dd32:	dec    ebp
  41dd33:	cmp    al,0x3f
  41dd35:	stos   DWORD PTR es:[edi],eax
  41dd36:	pop    ebp
  41dd37:	xlat   BYTE PTR ds:[ebx]
  41dd38:	js     0x41dd8e
  41dd3a:	and    eax,0x616f7b5
  41dd3f:	rcr    BYTE PTR [edi-0x59eaba1],cl
  41dd45:	sahf   
  41dd46:	sbb    edx,DWORD PTR [esi]
  41dd48:	loope  0x41dd92
  41dd4a:	lods   al,BYTE PTR ds:[esi]
  41dd4b:	xchg   ecx,eax
  41dd4c:	sub    BYTE PTR [ecx-0x5d],cl
  41dd4f:	ror    ah,cl
  41dd51:	adc    bh,BYTE PTR [ecx+0x25]
  41dd54:	fidivr WORD PTR [eax-0x1a]
  41dd57:	aad    0xaf
  41dd59:	std    
  41dd5a:	fld    DWORD PTR [ecx+0x3a83e131]
  41dd60:	mov    ebp,0x5fddbc80
  41dd65:	(bad)  
  41dd66:	(bad)  
  41dd67:	sbb    al,0x8
  41dd69:	sbb    eax,0x6424b391
  41dd6e:	imul   DWORD PTR [ebx]
  41dd70:	add    eax,0xdd439435
  41dd75:	xchg   ebp,eax
  41dd76:	add    ebp,DWORD PTR [ebx+0x14]
  41dd79:	push   edi
  41dd7a:	ret    0x9ec3
  41dd7d:	out    dx,eax
  41dd7e:	stos   DWORD PTR es:[edi],eax
  41dd7f:	xchg   DWORD PTR [edx],ebp
  41dd81:	arpl   WORD PTR [edi],cx
  41dd83:	push   0x2d47c369
  41dd88:	pushf  
  41dd89:	stos   DWORD PTR es:[edi],eax
  41dd8a:	pop    es
  41dd8b:	popf   
  41dd8c:	outs   dx,DWORD PTR ds:[esi]
  41dd8d:	int3   
  41dd8e:	adc    al,cl
  41dd90:	mov    bl,0x6e
  41dd92:	inc    edi
  41dd93:	sbb    bh,BYTE PTR [esi-0x5e106947]
  41dd99:	fadd   DWORD PTR [eax]
  41dd9b:	pop    ebp
  41dd9c:	push   DWORD PTR ds:0x9f060548
  41dda2:	sub    al,0xf6
  41dda4:	lds    esi,FWORD PTR [edx-0x38deee94]
  41ddaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddab:	or     al,0x73
  41ddad:	pop    edi
  41ddae:	jge    0x41dd4d
  41ddb0:	push   edi
  41ddb1:	mov    eax,ds:0x54883af3
  41ddb6:	or     al,0x4
  41ddb8:	ja     0x41dd82
  41ddba:	xchg   edi,eax
  41ddbb:	cmc    
  41ddbc:	js     0x41dd69
  41ddbe:	mov    ebx,0x38bb8e35
  41ddc3:	dec    esi
  41ddc4:	xor    al,BYTE PTR [eax+ebp*8-0x4b2e9dd3]
  41ddcb:	scas   eax,DWORD PTR es:[edi]
  41ddcc:	test   cl,bl
  41ddce:	dec    esi
  41ddcf:	push   ebx
  41ddd0:	bound  esi,QWORD PTR ds:0x20e8eaa7
  41ddd6:	lods   al,BYTE PTR ds:[esi]
  41ddd7:	into   
  41ddd8:	mov    ebx,ds
  41ddda:	aas    
  41dddb:	cmp    eax,0xb737f714
  41dde0:	add    eax,0xa4696abe
  41dde5:	xor    BYTE PTR [esi],0xb9
  41dde8:	lods   eax,DWORD PTR ds:[esi]
  41dde9:	jae    0x6fb3e832
  41ddef:	pop    ds
  41ddf0:	cmp    dh,al
  41ddf2:	push   es
  41ddf3:	xchg   DWORD PTR [eax-0x2f],eax
  41ddf6:	in     eax,dx
  41ddf7:	push   esi
  41ddf8:	lock dec esp
  41ddfa:	in     al,0x69
  41ddfc:	mov    al,ds:0x3eff84f4
  41de01:	call   0xbde5ce0f
  41de06:	jl     0x41dd91
  41de08:	ret    0x4b06
  41de0b:	sub    ebp,DWORD PTR [ebp-0x14dac2df]
  41de11:	or     eax,0x61a08892
  41de16:	jno    0x41dddc
  41de18:	push   ebx
  41de19:	xchg   edi,eax
  41de1a:	call   0x8e6b:0x94ea4054
  41de21:	pop    ds
  41de22:	push   edx
  41de23:	sub    DWORD PTR [eax],ecx
  41de25:	mov    edi,0x791e7a5b
  41de2a:	xor    DWORD PTR [esi+0x22],ebx
  41de2d:	jae    0x41de47
  41de2f:	mov    edx,0x3e786c92
  41de34:	in     al,dx
  41de35:	(bad)  
  41de36:	out    0x86,eax
  41de38:	icebp  
  41de39:	mul    DWORD PTR [esi-0x42bc5343]
  41de3f:	push   es
  41de40:	xchg   ecx,eax
  41de41:	mov    al,ds:0x5da0ba29
  41de46:	(bad)  
  41de47:	int3   
  41de48:	adc    BYTE PTR [edx],bh
  41de4a:	inc    eax
  41de4b:	dec    ecx
  41de4c:	mov    WORD PTR [esi],gs
  41de4e:	sbb    al,0x1a
  41de50:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41de52:	xchg   bl,bh
  41de54:	clc    
  41de55:	mov    dh,0x10
  41de57:	push   cs
  41de58:	(bad)  
  41de59:	outs   dx,BYTE PTR ds:[esi]
  41de5a:	mov    ah,0x2f
  41de5c:	jl     0x41de26
  41de5e:	addr16 aas 
  41de60:	jae    0x41ddf2
  41de62:	pusha  
  41de63:	mov    dl,0x9d
  41de65:	or     ah,BYTE PTR [edx+0x4b]
  41de68:	cdq    
  41de69:	or     eax,0xf6ab8e4a
  41de6e:	mov    ah,dh
  41de70:	nop
  41de71:	jecxz  0x41de8b
  41de73:	sbb    BYTE PTR [eax],al
  41de75:	popa   
  41de76:	xlat   BYTE PTR ds:[ebx]
  41de77:	mov    ds:0x62444b98,eax
  41de7c:	ror    DWORD PTR [ebp+0x4f7ff636],cl
  41de82:	and    eax,0xe08f9904
  41de87:	adc    dl,cl
  41de89:	inc    ecx
  41de8a:	push   ds
  41de8b:	stos   DWORD PTR es:[edi],eax
  41de8c:	dec    esp
  41de8d:	retf   
  41de8e:	push   ss
  41de8f:	lock popf 
  41de91:	scas   eax,DWORD PTR es:[edi]
  41de92:	cwde   
  41de93:	iret   
  41de94:	xor    DWORD PTR [ebx],0x140c418c
  41de9a:	lea    ebp,[eax]
  41de9c:	cld    
  41de9d:	xchg   ebp,eax
  41de9e:	mov    al,ds:0xa81c412b
  41dea3:	mov    al,ah
  41dea5:	loope  0x41de5e
  41dea7:	pop    ecx
  41dea8:	sbb    ax,0xf46d
  41deac:	dec    eax
  41dead:	cwde   
  41deae:	(bad)
  41deb1:	mov    ah,0x10
  41deb3:	mov    dl,0xa
  41deb5:	push   esi
  41deb6:	cmp    ebx,DWORD PTR [eax-0x35]
  41deb9:	mov    esp,DWORD PTR [edi-0x78]
  41debc:	lea    ecx,[ebx-0x48ebba25]
  41dec2:	xor    al,0xa4
  41dec4:	stos   DWORD PTR es:[edi],eax
  41dec5:	inc    ebx
  41dec6:	mov    WORD PTR [esi+0x7d],fs
  41dec9:	push   es
  41deca:	lock mov bl,0x39
  41decd:	pop    esp
  41dece:	jmp    FWORD PTR [ebp-0x4]
  41ded1:	loop   0x41de7f
  41ded3:	jge    0x41de8a
  41ded5:	lods   eax,DWORD PTR ds:[esi]
  41ded6:	loope  0x41de5f
  41ded8:	cs xchg ebp,eax
  41deda:	or     dl,BYTE PTR [ecx+0x6c]
  41dedd:	jne    0x41dedf
  41dedf:	add    BYTE PTR [eax],al
  41dee1:	add    cl,ah
  41dee3:	test   BYTE PTR [esi-0x80d1810],al
  41dee9:	xchg   ebp,eax
  41deea:	and    DWORD PTR [eax],eax
  41deec:	cmp    ebx,edx
  41deee:	arpl   WORD PTR [edi],di
  41def0:	mov    dl,0x2b
  41def2:	xor    eax,0xf400015a
  41def7:	add    al,0x0
  41def9:	add    dl,dl
  41defb:	or     DWORD PTR [esi],ebp
  41defd:	or     al,0x4a
  41deff:	adc    eax,0x4eb3ef07
  41df04:	mov    ebp,DWORD PTR [esi]
  41df06:	fidiv  WORD PTR [edi]
  41df08:	jmp    0x26ae8fba
  41df0d:	dec    ebp
  41df0e:	push   ds
  41df0f:	cmp    eax,edx
  41df11:	(bad)  
  41df13:	leave  
  41df14:	push   cs
  41df15:	mov    ds:0x76f13fd6,al
  41df1a:	push   ebp
  41df1b:	or     BYTE PTR [eax+0x53596b93],cl
  41df21:	xor    BYTE PTR [ebx+0x11e7a7c6],bl
  41df27:	mov    al,ds:0x32bd4251
  41df2c:	fsubr  DWORD PTR [edx]
  41df2e:	imul   esi,edx,0x54
  41df31:	data16 sbb ch,BYTE PTR [ecx-0x105f1a84]
  41df38:	jmp    0x17efd9d4
  41df3d:	mov    eax,0x83812b2c
  41df42:	aas    
  41df43:	imul   cl
  41df45:	out    dx,al
  41df46:	mov    bl,0x5d
  41df48:	test   eax,0xc85ee628
  41df4d:	sti    
  41df4e:	or     dh,ch
  41df50:	inc    esp
  41df51:	jns    0x41df67
  41df53:	mov    al,0xf
  41df55:	pop    esp
  41df56:	mov    ah,BYTE PTR [esi-0x13]
  41df59:	jp     0x41df0f
  41df5b:	imul   ebx,edi,0xb6c05501
  41df61:	shl    DWORD PTR [ebp+ebp*8+0x3d2297f9],0x84
  41df69:	outs   dx,BYTE PTR ds:[esi]
  41df6a:	and    BYTE PTR [edi-0x80],bh
  41df6d:	dec    edi
  41df6e:	enter  0x5a23,0x2d
  41df72:	cdq    
  41df73:	xor    DWORD PTR [eax],esp
  41df75:	push   esi
  41df76:	pop    esp
  41df77:	loop   0x41dfca
  41df79:	loope  0x41df04
  41df7b:	addr16 sub al,0x41
  41df7e:	cmp    DWORD PTR [ecx],edx
  41df80:	inc    esp
  41df81:	stc    
  41df82:	xor    BYTE PTR [ebx],dh
  41df84:	daa    
  41df85:	outs   dx,BYTE PTR ds:[esi]
  41df86:	loop   0x41df88
  41df88:	mov    eax,DWORD PTR [ebp+0x57]
  41df8b:	sbb    ah,al
  41df8d:	xor    al,0xc9
  41df8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df90:	push   eax
  41df91:	jl     0x41dfe7
  41df93:	enter  0xdd81,0xd9
  41df97:	sbb    eax,0xe2f4b42
  41df9c:	sub    dh,BYTE PTR ds:0xb62c5767
  41dfa2:	jge    0x41df29
  41dfa4:	cmp    BYTE PTR [esp+ecx*2+0x2f7a2a10],bl
  41dfab:	mov    ah,0x99
  41dfad:	jp     0x41dfca
  41dfaf:	test   eax,0x5e7e1926
  41dfb4:	je     0x41dfd6
  41dfb6:	bound  esp,QWORD PTR [ebx]
  41dfb8:	jmp    0x41e01c
  41dfba:	or     eax,0xdfbffd0
  41dfbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc0:	sahf   
  41dfc1:	sti    
  41dfc2:	and    al,0x61
  41dfc4:	or     edx,0x70
  41dfc7:	rcr    DWORD PTR ds:0x8397efe3,cl
  41dfcd:	stos   BYTE PTR es:[edi],al
  41dfce:	fcmovu st,st(7)
  41dfd0:	and    edx,esp
  41dfd2:	jecxz  0x41dff9
  41dfd4:	pop    ecx
  41dfd5:	jg     0x41e04b
  41dfd7:	out    0xff,eax
  41dfd9:	cld    
  41dfda:	xor    eax,DWORD PTR [esi+ebp*8+0x6c]
  41dfde:	and    DWORD PTR [eax-0x32d6fa4b],edi
  41dfe4:	test   eax,0x474d9396
  41dfe9:	(bad)  
  41dfea:	jns    0x41dfc3
  41dfec:	stos   BYTE PTR es:[edi],al
  41dfed:	fs retf 0x335c
  41dff1:	lea    ebx,gs:[ebx]
  41dff4:	popaw  
  41dff6:	xor    ch,ch
  41dff8:	pushf  
  41dff9:	mov    bh,0x22
  41dffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dffc:	ret    
  41dffd:	pminub mm7,QWORD PTR [esi+ecx*4+0x25a6e9cd]
  41e005:	shl    BYTE PTR [edi-0x71],cl
  41e008:	sbb    esp,DWORD PTR [ecx]
  41e00a:	fimul  WORD PTR [eax]
  41e00c:	jb     0x41e08a
  41e00e:	aad    0x6c
  41e010:	das    
  41e011:	popf   
  41e012:	adc    ebx,ebx
  41e014:	mov    DWORD PTR [eax],ebx
  41e016:	add    ah,BYTE PTR ds:0x3739cb68
  41e01c:	adc    eax,0x2e955a57
  41e021:	imul   BYTE PTR [edx-0x5e6b4df4]
  41e027:	push   edx
  41e028:	popf   
  41e029:	add    dl,BYTE PTR [edi]
  41e02b:	cmp    al,al
  41e02d:	(bad)  
  41e02e:	sub    BYTE PTR [edx+0x5cce788e],dl
  41e034:	or     edx,DWORD PTR [eax+0x3781b134]
  41e03a:	mov    DWORD PTR [edi+0x23],ebx
  41e03d:	rcl    DWORD PTR [ebp-0x6fb535d5],0x45
  41e044:	sbb    ecx,DWORD PTR [edx+0x4a6b277f]
  41e04a:	push   0x220c5a2
  41e04f:	xchg   BYTE PTR [ebx-0x1d],cl
  41e052:	pop    es
  41e053:	icebp  
  41e054:	sbb    DWORD PTR [ebx+0x37341370],ecx
  41e05a:	cmp    esi,DWORD PTR [eax+0x67b3d08c]
  41e060:	jno    0x41e005
  41e062:	inc    ebx
  41e063:	lods   eax,DWORD PTR ds:[esi]
  41e064:	adc    esi,0xb4708e18
  41e06a:	gs aas 
  41e06c:	cli    
  41e06d:	cmp    ch,BYTE PTR [edi]
  41e06f:	(bad)  
  41e070:	mov    ebp,0xa744cd5e
  41e075:	pop    eax
  41e076:	and    ebx,DWORD PTR [ecx+0x2c]
  41e079:	dec    ebp
  41e07a:	jns    0x41e0a5
  41e07c:	pop    ss
  41e07d:	int    0xbd
  41e07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e080:	or     BYTE PTR [ebp-0x73],ah
  41e083:	pop    ecx
  41e084:	(bad)  
  41e085:	rcr    BYTE PTR [ebp+eiz*2-0x68],cl
  41e089:	dec    eax
  41e08a:	add    cl,BYTE PTR [esi]
  41e08c:	cmp    BYTE PTR [edx+0x2fe4f488],ah
  41e092:	imul   esi,ecx,0xf7f4b3a5
  41e098:	dec    ebp
  41e099:	int3   
  41e09a:	loop   0x41e0e1
  41e09c:	jns    0x41e080
  41e09e:	jmp    0xdba3433f
  41e0a3:	dec    ecx
  41e0a4:	popa   
  41e0a5:	jecxz  0x41e085
  41e0a7:	sbb    BYTE PTR [ebx+ebx*4-0xf4d6258],bl
  41e0ae:	scas   al,BYTE PTR es:[edi]
  41e0af:	je     0x41e065
  41e0b1:	cmp    DWORD PTR [esi+0x15],ebp
  41e0b4:	push   ds
  41e0b5:	(bad)  
  41e0b6:	lock or ch,dl
  41e0b9:	retf   0xbc53
  41e0bc:	outs   dx,BYTE PTR ds:[esi]
  41e0bd:	arpl   WORD PTR [ecx],bp
  41e0bf:	sbb    ch,ah
  41e0c1:	sub    ebx,0x37
  41e0c4:	adc    DWORD PTR [esi],eax
  41e0c6:	push   ebx
  41e0c7:	lods   eax,DWORD PTR ds:[esi]
  41e0c8:	cmp    esp,0x1f2b2132
  41e0ce:	sbb    BYTE PTR [ecx+edx*8+0x59d6697d],ah
  41e0d5:	mov    dh,0xb3
  41e0d7:	lds    eax,FWORD PTR [eax+0x2c0b89ab]
  41e0dd:	cmp    edx,DWORD PTR [eax-0x65eff9de]
  41e0e3:	pop    ebp
  41e0e4:	pop    esi
  41e0e5:	or     bh,BYTE PTR [ecx-0x2]
  41e0e8:	cmp    ebx,DWORD PTR ds:0x74e0e730
  41e0ee:	mov    eax,ds:0xc0b940d9
  41e0f3:	aaa    
  41e0f4:	ds out 0x98,eax
  41e0f7:	(bad)  
  41e0f8:	cmp    eax,0x6b7a7b3c
  41e0fd:	dec    eax
  41e0fe:	adc    eax,0xd2b514b
  41e103:	(bad)  
  41e104:	push   0x154bc0e8
  41e109:	jbe    0x41e138
  41e10b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e10c:	add    al,0x11
  41e10e:	mov    esp,0xd99a06bb
  41e113:	jns    0x41e0cf
  41e115:	mov    bh,0xc6
  41e117:	push   ds
  41e118:	mov    ch,0x61
  41e11a:	push   ebp
  41e11b:	add    BYTE PTR [esi+edi*8+0x29],0xfe
  41e120:	cmp    DWORD PTR [eax+ecx*2+0x15],ebp
  41e124:	cmp    BYTE PTR [ebp+0x5cc39308],al
  41e12a:	pop    edi
  41e12b:	xor    DWORD PTR [ebp+ebx*8+0x52c4351b],esp
  41e132:	out    dx,al
  41e133:	sub    DWORD PTR [ecx],0xffffffd7
  41e136:	mov    edx,0x315f1126
  41e13b:	scas   al,BYTE PTR es:[edi]
  41e13c:	scas   al,BYTE PTR es:[edi]
  41e13d:	call   0xae32f9e1
  41e142:	(bad)  
  41e144:	xchg   BYTE PTR [edi-0x759d9c6f],bh
  41e14a:	rcr    bl,cl
  41e14c:	int    0xc4
  41e14e:	jne    0x41e140
  41e150:	fs inc eax
  41e152:	adc    al,0x64
  41e155:	ret    0x729d
  41e158:	sahf   
  41e159:	pop    ecx
  41e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e15c:	xor    al,0x4c
  41e15e:	mov    al,ds:0xdc4b349d
  41e163:	mov    ah,BYTE PTR [edx+0x4b201da9]
  41e169:	inc    eax
  41e16a:	mov    WORD PTR [eax-0x3a],fs
  41e16d:	jecxz  0x41e0fa
  41e16f:	aaa    
  41e170:	dec    edi
  41e171:	mov    dl,0x13
  41e173:	icebp  
  41e174:	adc    eax,DWORD PTR [ecx]
  41e176:	mov    ds:0xb286558c,eax
  41e17b:	loope  0x41e14b
  41e17d:	jp     0x41e1ab
  41e17f:	outs   dx,DWORD PTR ds:[esi]
  41e180:	ins    DWORD PTR es:[edi],dx
  41e181:	pop    ds
  41e182:	mov    ch,BYTE PTR [ebx-0x1f]
  41e185:	ins    BYTE PTR es:[edi],dx
  41e186:	xchg   ebx,eax
  41e187:	test   eax,0x9c405fdb
  41e18c:	in     al,dx
  41e18d:	aad    0x3c
  41e18f:	int    0x1
  41e191:	dec    edi
  41e192:	pop    ebx
  41e193:	arpl   WORD PTR [esi+0x22246e1b],ax
  41e199:	jnp    0x41e138
  41e19b:	repnz push ecx
  41e19d:	and    BYTE PTR [ebx-0x6f],dl
  41e1a0:	call   0xd009:0x33c0326f
  41e1a7:	lock mov DWORD PTR [eax+0x14],ebx
  41e1ab:	call   0x7dd2:0x6b40dcc6
  41e1b2:	push   0xfffffffe
  41e1b4:	adc    eax,0xae8d2b75
  41e1b9:	data16 std 
  41e1bb:	and    dl,bl
  41e1bd:	aad    0x3e
  41e1bf:	call   0x9e10:0x3bffd90e
  41e1c6:	xchg   esp,eax
  41e1c7:	xchg   esp,eax
  41e1c8:	mov    edx,0x47ce724e
  41e1cd:	sti    
  41e1ce:	icebp  
  41e1cf:	lea    edi,[eax]
  41e1d1:	lods   eax,DWORD PTR ds:[esi]
  41e1d2:	add    edi,DWORD PTR [ecx]
  41e1d4:	sub    esi,DWORD PTR [ebp-0x275ef5e7]
  41e1da:	(bad)  
  41e1db:	call   ebp
  41e1dd:	push   edx
  41e1de:	sub    BYTE PTR [esp+ecx*8-0x41af9cad],bl
  41e1e5:	sub    al,0x2c
  41e1e7:	sbb    DWORD PTR [edi],0xf6ee8d38
  41e1ed:	jae    0x41e253
  41e1ef:	psllw  mm5,QWORD PTR [ecx]
  41e1f2:	cmp    al,0x9a
  41e1f4:	mov    bl,BYTE PTR [ebx+0x604b2ba3]
  41e1fa:	xor    esi,edx
  41e1fc:	imul   esi,DWORD PTR [ebx-0x60],0x931f15ff
  41e203:	loope  0x41e27f
  41e205:	lods   eax,DWORD PTR ds:[esi]
  41e206:	push   sp
  41e208:	jmp    0x599f:0x4e66737
  41e20f:	mov    ds,WORD PTR [ecx-0x7eff00f5]
  41e215:	test   DWORD PTR [ebx+0x1e],eax
  41e218:	es jmp 0x10764ecf
  41e21e:	mov    ebx,0x9e24be35
  41e223:	sub    cl,cl
  41e225:	dec    edi
  41e226:	test   al,0xcd
  41e228:	and    dl,BYTE PTR [ebp+0x32a82b02]
  41e22e:	xor    eax,0x3e50cf85
  41e233:	enter  0x3f71,0xd2
  41e237:	push   cs
  41e238:	shl    BYTE PTR [eax-0x9190a3b],cl
  41e23e:	xor    esp,DWORD PTR [esi]
  41e240:	sub    eax,0xa5a4ed91
  41e245:	mov    cl,0x8a
  41e247:	and    dl,BYTE PTR [esi-0x80]
  41e24a:	dec    esi
  41e24b:	or     al,0x60
  41e24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e24e:	out    0x62,eax
  41e250:	shl    BYTE PTR [ecx-0x5b],0x75
  41e254:	out    0xec,eax
  41e256:	jmp    0x336b4e0f
  41e25b:	(bad)  
  41e25c:	aaa    
  41e25d:	shl    DWORD PTR [esi],0x21
  41e260:	fstp   DWORD PTR [ebp+0x11]
  41e263:	lds    ecx,FWORD PTR [ecx-0x2bbb5d82]
  41e269:	push   0x7d
  41e26b:	pop    es
  41e26c:	lock ins BYTE PTR es:[edi],dx
  41e26e:	jge    0x41e22d
  41e270:	cmc    
  41e271:	push   0xa1863738
  41e276:	ins    DWORD PTR es:[edi],dx
  41e277:	ficomp DWORD PTR [edx]
  41e279:	fcompp 
  41e27b:	outs   dx,DWORD PTR ds:[esi]
  41e27c:	int    0x5c
  41e27e:	es jecxz 0x41e283
  41e281:	mov    DWORD PTR [eax-0x13],ebp
  41e284:	or     al,BYTE PTR [eax-0x3f]
  41e287:	ins    BYTE PTR es:[edi],dx
  41e288:	pop    edi
  41e289:	cmc    
  41e28a:	dec    ebx
  41e28c:	and    al,BYTE PTR [ebp+eax*1-0x2e]
  41e290:	push   edx
  41e291:	xor    ebx,ebp
  41e293:	push   edx
  41e294:	fdivr  QWORD PTR [edi]
  41e296:	xor    DWORD PTR [eax-0x1c4c8775],eax
  41e29c:	shl    BYTE PTR [edx-0x7afea44b],1
  41e2a2:	aas    
  41e2a3:	adc    edi,DWORD PTR [eax]
  41e2a5:	xchg   edx,eax
  41e2a6:	js     0x41e2a9
  41e2a8:	icebp  
  41e2a9:	fcom   DWORD PTR [eax*2+0x2bdc96a3]
  41e2b0:	ss inc ecx
  41e2b2:	inc    esp
  41e2b3:	sbb    al,0xd
  41e2b5:	test   eax,0x4bdc4a72
  41e2ba:	inc    ebp
  41e2bb:	ins    BYTE PTR es:[edi],dx
  41e2bc:	cmp    DWORD PTR [edi+0x45],0x6c
  41e2c0:	adc    ah,BYTE PTR [edi+0x35]
  41e2c3:	dec    edx
  41e2c4:	jmp    0x41e2a1
  41e2c6:	mov    dl,0xd1
  41e2c8:	(bad)  
  41e2c9:	push   ss
  41e2ca:	leave  
  41e2cb:	pop    ss
  41e2cc:	add    eax,0x6a84148f
  41e2d1:	or     BYTE PTR [ebp+eax*2+0x14],ch
  41e2d5:	ds ins DWORD PTR es:[edi],dx
  41e2d7:	xchg   edi,eax
  41e2d8:	mov    ebp,0x873aec43
  41e2dd:	or     bh,al
  41e2df:	dec    sp
  41e2e1:	jg     0x41e2d6
  41e2e3:	cmp    esi,edi
  41e2e5:	ffreep st(7)
  41e2e7:	xchg   BYTE PTR [eax-0x55],al
  41e2ea:	mov    dl,0x4f
  41e2ec:	inc    BYTE PTR [edx]
  41e2ee:	cli    
  41e2ef:	sbb    al,0x5c
  41e2f1:	cs iret 
  41e2f3:	adc    dh,BYTE PTR [ebx-0x69]
  41e2f6:	sbb    DWORD PTR [ebp-0x1],0xffffffc1
  41e2fa:	jns    0x41e312
  41e2fc:	(bad)  
  41e2fd:	(bad)  
  41e2ff:	adc    eax,DWORD PTR [esi+edi*4+0xb]
  41e303:	push   ds
  41e304:	add    cl,BYTE PTR [ebx+0x7f789df]
  41e30a:	lea    ebx,[ebp+0x77309050]
  41e310:	lock idiv esp
  41e313:	mov    al,0x1
  41e315:	inc    edi
  41e316:	shl    DWORD PTR [esi],0x53
  41e319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31a:	mov    al,0x32
  41e31c:	gs jbe 0x41e2d6
  41e31f:	aad    0x70
  41e321:	cs cmc 
  41e323:	loop   0x41e312
  41e325:	and    bh,ah
  41e327:	cmp    bh,BYTE PTR [eax]
  41e329:	sub    eax,0x2968b20b
  41e32e:	jmp    0x41e349
  41e330:	dec    ebx
  41e331:	mov    ds:0x77055209,al
  41e336:	mov    esi,0xbdcb75c2
  41e33b:	out    dx,eax
  41e33c:	inc    esi
  41e33d:	int    0x2f
  41e33f:	ficomp DWORD PTR [eax+0x51]
  41e342:	jl     0x41e34b
  41e344:	xchg   ebp,eax
  41e345:	ja     0x41e328
  41e347:	enter  0x4d49,0x7f
  41e34b:	push   es
  41e34c:	or     DWORD PTR [ebp+0x10],esi
  41e34f:	jle    0x41e3a2
  41e351:	das    
  41e352:	lahf   
  41e353:	mov    ch,0x40
  41e355:	inc    esp
  41e356:	repz or edi,ebp
  41e359:	aas    
  41e35a:	ja     0x41e2e7
  41e35c:	inc    edx
  41e35d:	lea    ebx,[esi]
  41e35f:	pop    esp
  41e360:	inc    edx
  41e361:	ins    DWORD PTR es:[edi],dx
  41e362:	in     eax,dx
  41e363:	adc    DWORD PTR [eax-0x47],ecx
  41e366:	cdq    
  41e367:	cmp    eax,0x75bf6f4d
  41e36c:	cld    
  41e36d:	mov    ecx,0x149f01d7
  41e372:	pop    es
  41e373:	ret    
  41e374:	es dec esp
  41e376:	repz add ecx,DWORD PTR [eax-0x4d]
  41e37a:	ror    BYTE PTR [eax+ebx*2],1
  41e37d:	xchg   edi,eax
  41e37e:	or     DWORD PTR [ecx-0x24a743be],ebp
  41e384:	mov    esp,ebx
  41e386:	shl    BYTE PTR [ebp+0x112be54a],0x6c
  41e38d:	je     0x41e35e
  41e38f:	in     eax,0x49
  41e391:	jno    0x41e3ea
  41e393:	jae    0x41e369
  41e395:	add    al,0xf1
  41e397:	(bad)  
  41e398:	cli    
  41e399:	fidivr DWORD PTR [edx+0x3d]
  41e39c:	call   esi
  41e39e:	mov    cs,ecx
  41e3a0:	push   ds
  41e3a1:	call   0x9af23207
  41e3a6:	xor    al,0x3a
  41e3a8:	mov    dl,0x63
  41e3aa:	mov    ds:0xa738850d,eax
  41e3af:	push   cs
  41e3b0:	pop    edx
  41e3b1:	sub    al,0xfe
  41e3b3:	and    al,0xda
  41e3b5:	out    dx,eax
  41e3b6:	aaa    
  41e3b7:	nop    ebx
  41e3ba:	leave  
  41e3bb:	inc    ebp
  41e3bc:	clc    
  41e3bd:	sti    
  41e3be:	mov    edi,es
  41e3c0:	int3   
  41e3c1:	or     DWORD PTR [edi-0x5],ecx
  41e3c4:	pusha  
  41e3c5:	push   ebx
  41e3c6:	adc    bl,BYTE PTR [esi]
  41e3c8:	xlat   BYTE PTR ds:[ebx]
  41e3c9:	fadd   QWORD PTR [esi]
  41e3cb:	aam    0xee
  41e3cd:	ja     0x41e44c
  41e3cf:	pop    edi
  41e3d0:	cmp    BYTE PTR [ecx+0x5abd1fe9],cl
  41e3d6:	test   DWORD PTR [ebp-0x72],edi
  41e3d9:	scas   al,BYTE PTR es:[edi]
  41e3da:	(bad)  
  41e3db:	out    0xb7,al
  41e3dd:	call   0xb1d2:0x1a99fe7b
  41e3e4:	xchg   BYTE PTR [edx],ah
  41e3e6:	xchg   esi,eax
  41e3e7:	ficomp WORD PTR [esi-0x47b4f8a7]
  41e3ed:	pop    es
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0xf3f0fc94
  41e400:	test   BYTE PTR ds:0x15f29,ch
  41e406:	hlt    
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [eax],dh
  41e40b:	clc    
  41e40c:	xchg   ebx,eax
  41e40d:	mov    BYTE PTR [edi-0x6ba2f6e7],bl
  41e413:	push   0xfffffff1
  41e415:	push   ebp
  41e416:	dec    eax
  41e417:	inc    eax
  41e418:	pcmpgtb mm2,QWORD PTR [edx-0x7f]
  41e41c:	xchg   esp,ebx
  41e41e:	aaa    
  41e41f:	std    
  41e420:	fwait
  41e421:	cmc    
  41e422:	cmp    bl,BYTE PTR [eax+0x45dd7c1e]
  41e428:	jns    0x41e491
  41e42a:	and    cl,bh
  41e42c:	pusha  
  41e42d:	jb     0x41e48b
  41e42f:	or     edi,DWORD PTR [edi-0x18]
  41e432:	je     0x41e449
  41e434:	push   esi
  41e435:	ss out dx,eax
  41e437:	xchg   edx,eax
  41e438:	sti    
  41e439:	inc    edi
  41e43a:	push   ss
  41e43b:	iret   
  41e43c:	add    BYTE PTR [edx-0x3e9425dd],al
  41e442:	cmp    BYTE PTR [ebp-0xd9aa52b],bl
  41e448:	loopne 0x41e459
  41e44a:	cli    
  41e44b:	xor    DWORD PTR [ebx-0x1bdfcb05],ebp
  41e451:	mov    ch,0xcc
  41e453:	cmp    DWORD PTR [ecx-0x4],eax
  41e456:	or     eax,0xb32b60f8
  41e45b:	sub    edi,esi
  41e45d:	push   cs
  41e45e:	rcl    BYTE PTR [ebp+ecx*4-0x58ba6dd4],cl
  41e465:	pop    ebp
  41e466:	test   al,0xca
  41e468:	xor    al,0x5e
  41e46a:	in     eax,dx
  41e46b:	lods   al,BYTE PTR ds:[esi]
  41e46c:	dec    edx
  41e46d:	mov    WORD PTR [edx-0x3],fs
  41e470:	les    esp,FWORD PTR [eax*2-0x1c8626ba]
  41e477:	mov    cl,BYTE PTR [esi]
  41e479:	mov    cl,0xad
  41e47b:	xor    dh,BYTE PTR [eax+0x1d]
  41e47e:	jae    0x41e41f
  41e480:	jne    0x41e4dd
  41e482:	add    dh,BYTE PTR [edx]
  41e484:	int3   
  41e485:	jmp    0xb80ba660
  41e48a:	push   ebp
  41e48b:	sub    bl,BYTE PTR gs:[eax]
  41e48e:	add    cl,BYTE PTR [edx+0x71]
  41e491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e492:	clc    
  41e493:	sub    al,0x51
  41e495:	jbe    0x41e4b9
  41e497:	fst    st(5)
  41e499:	push   es
  41e49a:	or     eax,0xc30938e1
  41e49f:	mov    WORD PTR ds:0x5db969f1,gs
  41e4a5:	and    al,0xdf
  41e4a7:	test   eax,0x48205537
  41e4ac:	mov    ecx,0xda7dabbc
  41e4b1:	popa   
  41e4b2:	cmc    
  41e4b3:	test   eax,0x3d69b8ba
  41e4b8:	xchg   esp,eax
  41e4b9:	mov    cl,0x3d
  41e4bb:	pop    ss
  41e4bc:	les    eax,FWORD PTR [esi]
  41e4be:	mov    eax,ds:0xae2d826d
  41e4c3:	xchg   esi,eax
  41e4c4:	(bad)  
  41e4c5:	cmp    edx,DWORD PTR ds:0xc2363182
  41e4cb:	and    DWORD PTR [ebx-0x52],ecx
  41e4ce:	xor    esi,DWORD PTR [ebx+0x683e3ad5]
  41e4d4:	push   0x74ddadf3
  41e4d9:	or     DWORD PTR [esi-0x1e],esp
  41e4dc:	ins    DWORD PTR es:[edi],dx
  41e4dd:	push   eax
  41e4de:	ret    
  41e4df:	add    edi,eax
  41e4e1:	push   0x3c413d7a
  41e4e6:	(bad)  
  41e4e8:	data16 in al,dx
  41e4ea:	dec    ecx
  41e4eb:	add    eax,edx
  41e4ed:	push   ds
  41e4ee:	stc    
  41e4ef:	mov    cl,0x2e
  41e4f1:	daa    
  41e4f2:	js     0x41e47a
  41e4f4:	ret    0xfe03
  41e4f7:	xor    bl,al
  41e4f9:	push   eax
  41e4fa:	pop    es
  41e4fb:	ins    BYTE PTR es:[edi],dx
  41e4fc:	inc    edx
  41e4fd:	or     al,0xc1
  41e4ff:	scas   al,BYTE PTR es:[edi]
  41e500:	dec    edx
  41e501:	(bad)  
  41e503:	xchg   BYTE PTR [eax],cl
  41e505:	dec    esp
  41e506:	sbb    DWORD PTR [ebx],edx
  41e508:	gs dec ecx
  41e50a:	fcmovnb st,st(0)
  41e50c:	arpl   WORD PTR [esi-0x3f69dbd0],dx
  41e512:	cmc    
  41e513:	aas    
  41e514:	lahf   
  41e515:	and    bh,BYTE PTR [eax]
  41e517:	jns    0x41e522
  41e519:	sub    edx,DWORD PTR [ecx+0x3f]
  41e51c:	adc    dl,BYTE PTR [edi-0x41217486]
  41e522:	retf   
  41e523:	sbb    edi,DWORD PTR [ebp+edi*2-0x42e67f97]
  41e52a:	sbb    al,0x3f
  41e52c:	shr    DWORD PTR ds:0x54356e7b,1
  41e532:	jmp    0xf2d9:0x69d74dcb
  41e539:	ficom  WORD PTR [ebx+0x5]
  41e53c:	aaa    
  41e53d:	gs retf 
  41e53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e540:	retf   
  41e541:	lds    ebp,FWORD PTR [ebp+0x31cf3bff]
  41e547:	and    dh,bh
  41e549:	outs   dx,BYTE PTR ds:[esi]
  41e54a:	push   eax
  41e54b:	jmp    0x41e4fd
  41e54d:	jge    0x41e55e
  41e54f:	dec    al
  41e551:	sub    BYTE PTR [edi+0x5343b3e8],0x5e
  41e558:	mov    bl,0x12
  41e55a:	push   edx
  41e55b:	daa    
  41e55c:	adc    al,0x1f
  41e55e:	cmc    
  41e55f:	adc    DWORD PTR [ecx+0x57216bed],edx
  41e565:	ror    DWORD PTR [esi],0x2d
  41e568:	xchg   esi,eax
  41e569:	xchg   esi,eax
  41e56a:	pop    esi
  41e56b:	jmp    0x41e5e1
  41e56d:	sub    DWORD PTR [eax+0xa],0x7492dae9
  41e574:	mov    dh,0x8a
  41e576:	add    eax,0xe4a35c4b
  41e57b:	in     eax,0x3
  41e57d:	cmp    DWORD PTR [ecx+ebp*2],edx
  41e580:	jle    0x41e5df
  41e582:	sbb    al,BYTE PTR [ecx]
  41e584:	jge    0x41e57f
  41e586:	shl    DWORD PTR [esi],cl
  41e588:	aad    0xa6
  41e58a:	mov    WORD PTR [edx],?
  41e58c:	inc    esp
  41e58d:	adc    eax,0x363dd101
  41e592:	ret    
  41e593:	js     0x41e5ef
  41e595:	mov    ebx,0x3eaeb443
  41e59a:	dec    eax
  41e59b:	pushf  
  41e59c:	pop    esp
  41e59d:	inc    eax
  41e59e:	aaa    
  41e59f:	and    BYTE PTR [ebx+edi*2+0x15],ch
  41e5a3:	sub    DWORD PTR [edx-0x4aeba8c1],ebp
  41e5a9:	inc    eax
  41e5aa:	stos   BYTE PTR es:[edi],al
  41e5ab:	jae    0x41e563
  41e5ad:	sbb    eax,0x28d31161
  41e5b2:	addr16 inc ebx
  41e5b4:	cmp    ah,0xe4
  41e5b7:	aaa    
  41e5b8:	or     DWORD PTR [eax+0x74975246],ecx
  41e5be:	add    DWORD PTR [esp+edx*4+0x622818d8],edx
  41e5c5:	retf   
  41e5c6:	out    0xe9,eax
  41e5c8:	adc    ecx,ecx
  41e5ca:	ins    BYTE PTR es:[edi],dx
  41e5cb:	cmp    DWORD PTR [eax+0x766d88a1],edx
  41e5d1:	cdq    
  41e5d2:	inc    BYTE PTR [ebx]
  41e5d4:	out    0x39,eax
  41e5d6:	data16 das 
  41e5d8:	push   edi
  41e5d9:	fmul   st,st(0)
  41e5db:	stos   BYTE PTR es:[edi],al
  41e5dc:	fdiv   DWORD PTR [edi]
  41e5de:	xchg   ecx,eax
  41e5df:	jl     0x41e63f
  41e5e1:	mov    edx,0xe7efb2c0
  41e5e6:	call   0xa288f2d3
  41e5eb:	push   edx
  41e5ec:	xlat   BYTE PTR ds:[ebx]
  41e5ed:	aam    0x99
  41e5ef:	mov    al,ds:0x2fe57366
  41e5f4:	enter  0x5eeb,0xd9
  41e5f8:	and    DWORD PTR [esi+0x2adea8a2],0xffffffe8
  41e5ff:	dec    edx
  41e600:	cmc    
  41e601:	out    dx,al
  41e602:	mov    eax,0x6f4a17c6
  41e607:	push   es
  41e608:	aam    0x2a
  41e60a:	or     eax,0x3d2915ef
  41e60f:	imul   ecx,DWORD PTR [ebx+ecx*8+0x5d31c413],0x7e
  41e617:	ret    
  41e618:	loop   0x41e616
  41e61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61b:	mov    eax,ds:0xe6d7f205
  41e620:	outs   dx,BYTE PTR ds:[esi]
  41e621:	mov    esi,0x9ba963c6
  41e626:	dec    esp
  41e627:	jmp    0xae74:0x42644256
  41e62e:	pushf  
  41e62f:	dec    edi
  41e630:	dec    esp
  41e631:	cmp    esp,DWORD PTR [edx-0x7abd302a]
  41e637:	gs push 0xb175709a
  41e63d:	push   0x1b
  41e63f:	cld    
  41e640:	stos   BYTE PTR es:[edi],al
  41e641:	cld    
  41e642:	outs   dx,DWORD PTR ds:[esi]
  41e643:	js     0x41e5cd
  41e645:	(bad)  
  41e646:	cmp    ecx,DWORD PTR [ebx]
  41e648:	shl    DWORD PTR [eax+0x13],1
  41e64b:	mov    dl,0xdc
  41e64d:	imul   ecx,DWORD PTR [esi+0x30cc43ea],0x62
  41e654:	ficomp DWORD PTR [esi+eax*2+0x17]
  41e658:	and    al,0xa
  41e65a:	lea    edx,[esi+0x5]
  41e65d:	jno    0x41e63e
  41e65f:	mov    edi,gs
  41e661:	ins    DWORD PTR es:[edi],dx
  41e662:	pop    ds
  41e663:	jecxz  0x41e68d
  41e665:	hlt    
  41e666:	inc    dx
  41e668:	xchg   BYTE PTR [ecx-0x494a1ab2],bl
  41e66e:	int    0x33
  41e670:	pop    esp
  41e671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e672:	jp     0x41e605
  41e674:	xor    BYTE PTR [edi-0x30],0x91
  41e678:	or     ecx,DWORD PTR [edx-0x4f]
  41e67b:	push   DWORD PTR [ecx+0x4456c8d5]
  41e681:	push   cs
  41e682:	ins    BYTE PTR es:[edi],dx
  41e683:	or     DWORD PTR [edi],edx
  41e685:	lods   eax,DWORD PTR ds:[esi]
  41e686:	in     al,dx
  41e687:	imul   ebp,esi,0x5de55680
  41e68d:	fcom   QWORD PTR [eax-0x2]
  41e690:	popf   
  41e691:	arpl   WORD PTR [eax],di
  41e693:	bound  esi,QWORD PTR [edx]
  41e695:	mov    dh,0x99
  41e697:	xor    dl,dl
  41e699:	fist   WORD PTR [eax-0x6f]
  41e69c:	mov    bl,0xf6
  41e69e:	xchg   ecx,ecx
  41e6a0:	push   esp
  41e6a1:	je     0x41e6e7
  41e6a3:	pop    ebx
  41e6a4:	daa    
  41e6a5:	add    al,0xa8
  41e6a7:	data16 fst DWORD PTR cs:[edi+0x22a64b68]
  41e6af:	xor    BYTE PTR [edi+0xc],bh
  41e6b2:	in     al,dx
  41e6b3:	push   ebp
  41e6b4:	pop    edi
  41e6b5:	xor    DWORD PTR [eax+0x11],ebx
  41e6b8:	and    DWORD PTR [ebp-0x2e739f71],edx
  41e6be:	int    0xac
  41e6c0:	fcmovnb st,st(1)
  41e6c2:	test   DWORD PTR [ecx+0x6661271],ecx
  41e6c8:	and    eax,0x543fff42
  41e6cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ce:	in     al,0xac
  41e6d0:	neg    BYTE PTR [esi-0x19e2a0a1]
  41e6d6:	or     dl,cl
  41e6d8:	mov    edi,0x1453059e
  41e6dd:	jmp    0xb53d:0x1057d30a
  41e6e4:	mov    ebp,DWORD PTR [ebp-0x7e4aa3f4]
  41e6ea:	scas   eax,DWORD PTR es:[edi]
  41e6eb:	mov    eax,0x3f847271
  41e6f0:	lock int 0x65
  41e6f3:	es (bad) 
  41e6f5:	jge    0x41e766
  41e6f7:	iret   
  41e6f8:	ret    
  41e6f9:	aad    0x75
  41e6fb:	mov    ebp,0x9f24c692
  41e700:	out    0x35,al
  41e702:	dec    ebx
  41e703:	or     edi,edx
  41e705:	sahf   
  41e706:	rcr    DWORD PTR [edi-0x47],1
  41e709:	fisub  WORD PTR [edi-0x1e72a59b]
  41e70f:	push   ebx
  41e710:	sbb    DWORD PTR [edx-0x6aa616a3],ebp
  41e716:	xlat   BYTE PTR ds:[ebx]
  41e717:	das    
  41e718:	pop    edx
  41e719:	mov    al,0x51
  41e71b:	inc    edi
  41e71c:	das    
  41e71d:	push   esi
  41e71e:	mov    esi,0xbf615f82
  41e723:	sahf   
  41e724:	lds    ebx,FWORD PTR [ebx+edx*2]
  41e727:	xchg   bl,bh
  41e729:	test   eax,0x2eff9553
  41e72e:	fidiv  DWORD PTR [esi+0xa]
  41e731:	lods   al,BYTE PTR ds:[esi]
  41e732:	push   esp
  41e733:	sbb    al,0x7a
  41e735:	punpckhwd mm5,mm5
  41e738:	add    DWORD PTR [eax+0x28d7e8ec],edi
  41e73e:	sub    al,0x41
  41e740:	xor    DWORD PTR [ecx],esp
  41e742:	jnp    0x41e6ef
  41e744:	jle    0x41e76e
  41e746:	aad    0x67
  41e748:	push   ebp
  41e749:	xchg   edi,eax
  41e74a:	call   0x9dbf:0x2fb83e86
  41e751:	sub    BYTE PTR [eax-0x1afcdad2],cl
  41e757:	sahf   
  41e758:	mov    BYTE PTR [edx],dh
  41e75a:	ja     0x41e780
  41e75c:	jb     0x41e7a4
  41e75e:	and    ecx,DWORD PTR [eax+0x3e923b90]
  41e764:	daa    
  41e765:	xlat   BYTE PTR ds:[ebx]
  41e766:	pusha  
  41e767:	pop    edx
  41e768:	(bad)  
  41e769:	jle    0x41e757
  41e76b:	add    DWORD PTR [ecx],ebp
  41e76d:	adc    al,0x34
  41e76f:	dec    edx
  41e770:	mov    eax,DWORD PTR ds:0xedb823a
  41e776:	adc    eax,0x4e1262f0
  41e77b:	jbe    0x41e7f1
  41e77d:	ret    0xc317
  41e780:	imul   esp,DWORD PTR [esi],0x87c8a6ce
  41e786:	clc    
  41e787:	cdq    
  41e788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e789:	test   DWORD PTR [ebx-0x5fb122a5],edi
  41e78f:	dec    edx
  41e790:	mov    eax,ds:0x79b0993d
  41e795:	jae    0x41e7be
  41e797:	mov    ah,0xbc
  41e799:	aas    
  41e79a:	sbb    BYTE PTR [ebp-0x1c273d2b],ah
  41e7a0:	or     edx,DWORD PTR [esi-0x55e01e60]
  41e7a6:	rcr    BYTE PTR [ecx],0x2c
  41e7a9:	shl    DWORD PTR [ebp+0x77],0x1f
  41e7ad:	push   0x2d
  41e7af:	xchg   ebp,eax
  41e7b0:	sub    esp,edi
  41e7b2:	out    0xb8,al
  41e7b4:	lds    edx,FWORD PTR [edx-0x6bf3db1a]
  41e7ba:	test   BYTE PTR [edi-0x3af2183b],ah
  41e7c0:	xor    al,0xc
  41e7c2:	mov    ah,0xaf
  41e7c4:	(bad)  
  41e7c5:	aad    0xf3
  41e7c7:	sbb    DWORD PTR [ebp-0x24854035],0x5e
  41e7ce:	and    BYTE PTR [ebx-0x22],0x5f
  41e7d2:	or     bl,dh
  41e7d4:	push   edi
  41e7d5:	js     0x41e7ed
  41e7d7:	sbb    DWORD PTR [esi+0x39463c53],0xc0216ef2
  41e7e1:	push   edi
  41e7e2:	push   0x56
  41e7e4:	xor    eax,0x70772cff
  41e7e9:	cs aad 0xb2
  41e7ec:	add    al,BYTE PTR [edx]
  41e7ee:	stos   BYTE PTR es:[edi],al
  41e7ef:	mov    dl,0x47
  41e7f1:	jbe    0x41e82d
  41e7f3:	mov    cl,0x6b
  41e7f5:	in     eax,0x33
  41e7f7:	in     eax,dx
  41e7f8:	mov    eax,0x49e9906
  41e7fd:	xchg   esi,eax
  41e7fe:	adc    BYTE PTR ss:[ecx-0x60d1c7fe],ch
  41e805:	add    bl,dl
  41e807:	shr    BYTE PTR [ecx],cl
  41e809:	xchg   esp,eax
  41e80a:	fidiv  WORD PTR [ebx-0x25]
  41e80d:	sub    al,0xeb
  41e80f:	into   
  41e810:	arpl   WORD PTR [ebx],bp
  41e812:	xor    dh,BYTE PTR [esi]
  41e814:	fcomp  DWORD PTR [ebx+0x2f]
  41e817:	cmp    eax,0xa34428c8
  41e81c:	ja     0x41e896
  41e81e:	call   0xbca26492
  41e823:	sbb    edi,ebp
  41e825:	sub    dh,ah
  41e827:	pop    es
  41e828:	mov    edi,edx
  41e82a:	dec    edx
  41e82b:	in     eax,dx
  41e82c:	stos   DWORD PTR es:[edi],eax
  41e82d:	dec    ebp
  41e82e:	lock xchg ch,dl
  41e831:	sbb    ecx,DWORD PTR [eax+0x44]
  41e834:	add    al,0x5b
  41e836:	sti    
  41e837:	cdq    
  41e838:	pop    esi
  41e839:	push   esp
  41e83a:	mov    bl,0x69
  41e83c:	lock sar dl,1
  41e83f:	dec    eax
  41e840:	sti    
  41e841:	sbb    eax,0xc7ee884a
  41e846:	inc    esp
  41e847:	and    dh,ch
  41e849:	xchg   edi,eax
  41e84a:	sub    DWORD PTR [edi+eax*4-0x25311577],edi
  41e851:	sub    esi,eax
  41e853:	sbb    DWORD PTR [esi-0x55],edx
  41e856:	sub    ah,bh
  41e858:	xchg   edi,eax
  41e859:	mov    ecx,0x454c27a0
  41e85e:	outs   dx,BYTE PTR ds:[esi]
  41e85f:	cmc    
  41e860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e861:	mov    ds:0x47a5efc,al
  41e866:	cmp    dh,ch
  41e868:	mov    cl,0x65
  41e86a:	xor    BYTE PTR [ebx+0x29],dl
  41e86d:	add    ebp,DWORD PTR [eax-0x4f6f588b]
  41e873:	pop    ebp
  41e874:	jg     0x41e8ce
  41e876:	sti    
  41e877:	jnp    0x41e84d
  41e879:	jb     0x41e8b6
  41e87b:	mov    dh,0x1e
  41e87d:	daa    
  41e87e:	mov    edi,0x42af5e6d
  41e883:	repz inc ecx
  41e885:	push   cs
  41e886:	cld    
  41e887:	mov    ah,0x8f
  41e889:	dec    ebx
  41e88a:	lock lds esi,FWORD PTR [edi+0x4d23c631]
  41e891:	stc    
  41e892:	add    al,0xac
  41e894:	fisttp WORD PTR [edi]
  41e896:	mov    al,ds:0x8c84410f
  41e89b:	int3   
  41e89c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e89d:	popf   
  41e89e:	sar    esp,cl
  41e8a0:	int    0x51
  41e8a2:	cmp    DWORD PTR [esp+edi*1],0xffffffc4
  41e8a6:	ins    BYTE PTR es:[edi],dx
  41e8a7:	add    BYTE PTR [ebx+0x27cacea0],0x80
  41e8ae:	pushf  
  41e8af:	div    BYTE PTR [edx+eax*2-0x6c86b706]
  41e8b6:	mov    cl,0xc0
  41e8b8:	mov    esp,0x6e4c4070
  41e8bd:	push   es
  41e8be:	mov    dh,0x1a
  41e8c0:	inc    esi
  41e8c1:	inc    ebx
  41e8c2:	stos   DWORD PTR es:[edi],eax
  41e8c3:	shr    esp,cl
  41e8c5:	scas   al,BYTE PTR es:[edi]
  41e8c6:	jb     0x41e885
  41e8c8:	lahf   
  41e8c9:	rcr    DWORD PTR [edx+0x62485745],1
  41e8cf:	sbb    esp,ecx
  41e8d1:	mov    dh,0x3f
  41e8d3:	pop    ss
  41e8d4:	jb     0x41e8fb
  41e8d6:	push   ecx
  41e8d7:	push   eax
  41e8d8:	push   0x243d25f3
  41e8dd:	jmp    0x41e928
  41e8df:	ret    
  41e8e0:	adc    edi,DWORD PTR ss:[esp+edi*1]
  41e8e4:	xor    al,0x6e
  41e8e6:	sub    ecx,DWORD PTR [ebx+0x2c]
  41e8e9:	jl     0x41e8c6
  41e8eb:	loopne 0x41e89b
  41e8ed:	or     ch,ch
  41e8ef:	mov    esi,0x2441d8ee
  41e8f4:	add    al,0x96
  41e8f6:	ss inc ebx
  41e8f8:	and    DWORD PTR [eax+0x4d44577f],0x0
  41e8ff:	add    BYTE PTR [eax],al
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	hlt    
  41e90f:	mov    edx,0x641d204c
  41e914:	add    DWORD PTR [eax],eax
  41e916:	hlt    
  41e917:	add    al,0x0
  41e919:	add    BYTE PTR [ebx+0x6042425f],cl
  41e91f:	pop    es
  41e920:	and    DWORD PTR [edi+0x8],edx
  41e923:	pop    es
  41e924:	loopne 0x41e96d
  41e926:	and    edx,ebx
  41e928:	push   eax
  41e929:	das    
  41e92a:	xor    eax,esp
  41e92c:	mov    esp,DWORD PTR ds:[edi+0x4b5211e2]
  41e933:	into   
  41e934:	jno    0x41e99d
  41e936:	shr    ch,1
  41e938:	pop    ds
  41e939:	jbe    0x41e994
  41e93b:	pop    esp
  41e93c:	push   esp
  41e93d:	in     al,dx
  41e93e:	push   esp
  41e93f:	test   DWORD PTR [esi+0x2],ecx
  41e942:	pop    ss
  41e943:	sub    bh,ah
  41e945:	sar    BYTE PTR [edi],cl
  41e947:	dec    ebp
  41e948:	cli    
  41e949:	mov    WORD PTR [edi+0x65],ss
  41e94c:	cmp    ebp,ecx
  41e94e:	mov    esi,0x7570de25
  41e953:	jl     0x41e8fb
  41e955:	adc    al,0xad
  41e957:	data16 fidivr WORD PTR [ebx+0x2f]
  41e95b:	mov    edi,0x96c9b2c1
  41e960:	in     eax,dx
  41e961:	xor    al,0xb8
  41e963:	mov    bl,0xf8
  41e965:	sub    eax,0x44b4be24
  41e96a:	pop    esp
  41e96b:	not    BYTE PTR [ecx-0x584aff27]
  41e971:	repnz clc 
  41e973:	mov    ds:0xaa3f9736,ax
  41e979:	sub    DWORD PTR [edx-0x26759e78],esp
  41e97f:	mov    ?,WORD PTR [edx-0x653be91b]
  41e985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e986:	int    0x9f
  41e988:	pop    edi
  41e989:	add    eax,0x5414f1c6
  41e98e:	inc    eax
  41e98f:	mov    eax,0xfb67be7c
  41e994:	repnz adc BYTE PTR [eax-0x6c12af54],bl
  41e99b:	mov    ch,0xad
  41e99d:	idiv   bl
  41e99f:	push   0x3607109d
  41e9a4:	imul   ebx,esi,0x1e54e224
  41e9aa:	fnstsw WORD PTR [eax-0x17e4dbfa]
  41e9b0:	xchg   edi,eax
  41e9b1:	arpl   WORD PTR [eax*2-0x559a9196],bp
  41e9b8:	sub    cl,BYTE PTR [edi+ecx*2]
  41e9bb:	ret    
  41e9bc:	add    BYTE PTR [ebx-0x4a288d04],0xda
  41e9c3:	sbb    DWORD PTR [ecx],ebx
  41e9c5:	fcmovu st,st(7)
  41e9c7:	in     al,0x56
  41e9c9:	sbb    dh,cl
  41e9cb:	into   
  41e9cc:	inc    ebx
  41e9cd:	dec    eax
  41e9ce:	loop   0x41ea3a
  41e9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d2:	std    
  41e9d3:	push   esp
  41e9d4:	xor    al,0x4d
  41e9d6:	adc    BYTE PTR [ebp+0x40],bh
  41e9d9:	mov    dl,0xa0
  41e9db:	mov    ds:0x4f9db64f,al
  41e9e0:	jmp    0x95d02aba
  41e9e5:	xchg   ebx,eax
  41e9e6:	push   esi
  41e9e7:	push   cs
  41e9e8:	shr    BYTE PTR [esi-0x1f1e9096],1
  41e9ee:	jns    0x41e9d8
  41e9f0:	xchg   edi,eax
  41e9f1:	cmp    eax,0xc2a3cf95
  41e9f6:	mov    eax,ds:0xa8076669
  41e9fb:	sub    al,0xe2
  41e9fd:	pop    eax
  41e9fe:	loope  0x41ea19
  41ea00:	xor    DWORD PTR [ebx+0x55],0x54eaa237
  41ea07:	test   dh,cl
  41ea09:	dec    ecx
  41ea0a:	ins    DWORD PTR es:[edi],dx
  41ea0b:	push   eax
  41ea0c:	aas    
  41ea0d:	cmp    DWORD PTR [edi+0x53],ebx
  41ea10:	sbb    eax,0xae41757c
  41ea15:	push   ss
  41ea16:	call   0xbfe8bac8
  41ea1b:	cdq    
  41ea1c:	mov    ecx,0x20b09f61
  41ea21:	sbb    eax,0x4aaf2adb
  41ea26:	cmp    eax,0xa371a4c1
  41ea2b:	into   
  41ea2c:	pop    ds
  41ea2d:	sti    
  41ea2e:	adc    eax,0x7a6ce5c4
  41ea33:	adc    DWORD PTR [edx],0x4fa6d2e2
  41ea39:	push   esi
  41ea3a:	add    eax,0x69cfbaf8
  41ea3f:	pusha  
  41ea40:	jmp    0x5b4:0x93abf2b6
  41ea47:	mov    ch,0xfc
  41ea49:	scas   al,BYTE PTR es:[edi]
  41ea4a:	retf   
  41ea4b:	in     eax,0x14
  41ea4d:	sti    
  41ea4e:	fdiv   DWORD PTR [edx+0x53]
  41ea51:	sar    BYTE PTR [ebp+0x32f54e18],1
  41ea57:	mov    bl,0xfc
  41ea59:	mov    edx,0xb2fad635
  41ea5e:	imul   ebx,DWORD PTR [ebx],0x47
  41ea61:	jmp    0x41f6:0x4393f7b2
  41ea68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea69:	pop    eax
  41ea6a:	xchg   esi,eax
  41ea6b:	in     eax,dx
  41ea6c:	adc    al,0x4f
  41ea6e:	sahf   
  41ea6f:	ins    BYTE PTR es:[edi],dx
  41ea70:	movntq (bad),mm3
  41ea71:	out    0xdd,eax
  41ea73:	mov    bh,0x90
  41ea75:	ret    0x8663
  41ea78:	lock retf 
  41ea7a:	(bad)  
  41ea7b:	daa    
  41ea7c:	inc    ecx
  41ea7d:	inc    edi
  41ea7e:	push   ds
  41ea7f:	call   0x3edd:0x13dbe9fd
  41ea86:	inc    edx
  41ea87:	push   ds
  41ea88:	mov    fs,WORD PTR [ebx+0x52]
  41ea8b:	fs in  al,0x96
  41ea8e:	ins    BYTE PTR es:[edi],dx
  41ea8f:	jno    0x41eaf3
  41ea91:	push   esp
  41ea92:	xchg   esp,eax
  41ea93:	mov    ch,0xab
  41ea95:	call   0xeca91b81
  41ea9a:	imul   ebp,DWORD PTR [ebp+0x5b],0xffffffc4
  41ea9e:	ins    DWORD PTR es:[edi],dx
  41ea9f:	shl    DWORD PTR [ebp+0x32],0x19
  41eaa3:	push   ecx
  41eaa4:	loopne 0x41eac4
  41eaa6:	jmp    0x41eaa4
  41eaa8:	push   0xbbd2d0b4
  41eaad:	push   ebp
  41eaae:	imul   edi,DWORD PTR [edx-0x12d932ff],0x74
  41eab5:	jle    0x41eac8
  41eab7:	sti    
  41eab8:	scas   eax,DWORD PTR es:[edi]
  41eab9:	dec    edi
  41eaba:	call   0xe0df:0xe4466c01
  41eac1:	in     al,dx
  41eac2:	and    esp,DWORD PTR [edi+0x57]
  41eac5:	push   eax
  41eac6:	mov    ah,0x8
  41eac8:	jge    0x41ea96
  41eaca:	rol    BYTE PTR [esi-0x13b410cb],cl
  41ead0:	js     0x41ea61
  41ead2:	test   al,0xc6
  41ead4:	in     al,dx
  41ead5:	cwde   
  41ead6:	inc    eax
  41ead7:	nop
  41ead8:	gs jg  0x41eafd
  41eadb:	jno    0x41eb15
  41eadd:	add    ah,bl
  41eadf:	in     al,dx
  41eae0:	(bad)  
  41eae1:	mov    dl,0xa0
  41eae3:	cmp    al,0x6c
  41eae5:	(bad)  
  41eae6:	jle    0x41ea6e
  41eae8:	push   ebx
  41eae9:	jbe    0x41eadf
  41eaeb:	adc    al,0x2f
  41eaed:	push   ds
  41eaee:	neg    BYTE PTR [edx-0x24]
  41eaf1:	inc    ebp
  41eaf2:	add    ah,BYTE PTR [esp+esi*2]
  41eaf5:	pop    ebx
  41eaf6:	shr    BYTE PTR [edx+0x574f82dd],0x7c
  41eafd:	jne    0x41eaf4
  41eaff:	dec    edx
  41eb00:	adc    eax,0x49ebe98a
  41eb05:	test   al,0xeb
  41eb07:	xchg   ebp,eax
  41eb08:	pop    edx
  41eb09:	xlat   BYTE PTR ds:[ebx]
  41eb0a:	loope  0x41eaf4
  41eb0c:	mov    esp,0x30bf5e7c
  41eb11:	and    al,bh
  41eb13:	push   es
  41eb14:	dec    esp
  41eb15:	retf   0xe0a3
  41eb18:	adc    BYTE PTR [edi],0xef
  41eb1b:	nop
  41eb1c:	stos   BYTE PTR es:[edi],al
  41eb1d:	or     eax,0x49d86816
  41eb22:	leave  
  41eb23:	xchg   edi,eax
  41eb24:	(bad)  
  41eb25:	jmp    0x9a19:0x3e6a3346
  41eb2c:	adc    DWORD PTR [esi+0x2c],ebx
  41eb2f:	jbe    0x41eb62
  41eb31:	mov    dl,0xfb
  41eb33:	adc    esp,eax
  41eb35:	jnp    0x41eac9
  41eb37:	mov    ecx,0x2bb75796
  41eb3c:	aad    0xe7
  41eb3e:	mov    ebp,0x95e36351
  41eb43:	leave  
  41eb44:	jg     0x41eb0e
  41eb46:	sbb    eax,0x92d0439f
  41eb4b:	in     eax,0xf5
  41eb4d:	jb     0x41eaea
  41eb4f:	clc    
  41eb50:	pop    ecx
  41eb51:	aas    
  41eb52:	mov    eax,ds:0xeab85058
  41eb57:	xchg   DWORD PTR [ebx+esi*1],edx
  41eb5a:	pusha  
  41eb5b:	pop    edi
  41eb5c:	xor    bh,BYTE PTR [edx+0x5e]
  41eb5f:	bound  edx,QWORD PTR [esi-0x75832b44]
  41eb65:	sub    eax,0x51cb3ced
  41eb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb6b:	outs   dx,DWORD PTR gs:[esi]
  41eb6d:	mov    eax,0xed5a9e6e
  41eb72:	es jae 0x41ebd7
  41eb75:	fwait
  41eb76:	leave  
  41eb77:	lods   al,BYTE PTR ds:[esi]
  41eb78:	cmc    
  41eb79:	stos   DWORD PTR es:[edi],eax
  41eb7a:	mov    ds:0x11992b03,al
  41eb7f:	mov    ch,0xb8
  41eb81:	fwait
  41eb82:	mov    ds:0xeab197e2,eax
  41eb87:	add    al,0xcc
  41eb89:	test   ch,bl
  41eb8b:	fdiv   st(5),st
  41eb8d:	adc    al,0x2
  41eb8f:	adc    DWORD PTR [eax+0x59],edi
  41eb92:	xchg   ebx,eax
  41eb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb94:	clc    
  41eb95:	adc    DWORD PTR [edx+0x35],ecx
  41eb98:	xchg   ebx,eax
  41eb99:	pusha  
  41eb9a:	inc    ebx
  41eb9b:	xchg   esi,eax
  41eb9c:	xor    al,0x9a
  41eb9e:	imul   esp,DWORD PTR [edx+0x656c53a1],0x83dc9845
  41eba8:	rcl    DWORD PTR [eax-0x2189b140],0xe
  41ebaf:	fld    DWORD PTR [esi-0x6e]
  41ebb2:	scas   eax,DWORD PTR es:[edi]
  41ebb3:	adc    al,0xa1
  41ebb5:	je     0x41ec0b
  41ebb7:	scas   eax,DWORD PTR es:[edi]
  41ebb8:	aad    0x8b
  41ebba:	add    eax,0x592341a8
  41ebbf:	(bad)  
  41ebc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc1:	cmc    
  41ebc2:	inc    edx
  41ebc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc4:	imul   ebx,DWORD PTR [ebp+0x3e6e8052],0x3e
  41ebcb:	jmp    DWORD PTR [ecx-0x434e54a7]
  41ebd1:	ins    BYTE PTR es:[edi],dx
  41ebd2:	icebp  
  41ebd3:	sti    
  41ebd4:	mov    ds,WORD PTR [edx+0x1d2c4d8a]
  41ebda:	int    0x1b
  41ebdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebdd:	mov    DWORD PTR [eax+0x339fdf9d],ebx
  41ebe3:	or     dl,BYTE PTR [ecx+0x304996c8]
  41ebe9:	imul   al
  41ebeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebec:	adc    BYTE PTR [eax+0x54],bl
  41ebef:	popa   
  41ebf0:	mov    DWORD PTR [eax+0x230c4a23],esi
  41ebf6:	ret    0xfbf7
  41ebf9:	mov    eax,0xd49f4ed2
  41ebfe:	jno    0x41ebd4
  41ec00:	dec    ebx
  41ec01:	push   0xffffffac
  41ec03:	xor    ch,al
  41ec05:	mov    ds:0x17e2f5ba,eax
  41ec0a:	dec    eax
  41ec0b:	push   esi
  41ec0c:	jp     0x41ec3b
  41ec0e:	xor    ah,BYTE PTR [ecx+0x49be6bc1]
  41ec14:	jns    0x41ec65
  41ec16:	rcl    DWORD PTR [eax],0xde
  41ec19:	push   ebx
  41ec1a:	popa   
  41ec1b:	inc    esp
  41ec1c:	int3   
  41ec1d:	mov    edx,0x5882f91b
  41ec22:	repz inc DWORD PTR [ebp+0x1c]
  41ec26:	aas    
  41ec27:	mov    eax,0xbe00aae3
  41ec2c:	test   al,0xef
  41ec2e:	dec    ecx
  41ec2f:	sar    DWORD PTR [eax-0x102d1220],0x39
  41ec36:	mov    BYTE PTR [ebx],dl
  41ec38:	and    al,0xa7
  41ec3a:	cdq    
  41ec3b:	inc    edi
  41ec3c:	mov    ebx,DWORD PTR [ecx+0x73db05f]
  41ec42:	push   ss
  41ec43:	shl    DWORD PTR [edx+0x23],1
  41ec46:	pop    eax
  41ec47:	rol    BYTE PTR [eax+0x3a],1
  41ec4a:	push   eax
  41ec4b:	out    dx,eax
  41ec4c:	(bad)  
  41ec4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec4e:	cmc    
  41ec4f:	loopne 0x41ebd3
  41ec51:	iret   
  41ec52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec53:	mov    ah,BYTE PTR [ebp+0x30]
  41ec56:	add    BYTE PTR [edi+esi*4],ch
  41ec59:	cld    
  41ec5a:	ds stc 
  41ec5c:	das    
  41ec5d:	inc    ebx
  41ec5e:	cmp    cl,dh
  41ec60:	or     ebp,0x15
  41ec63:	in     eax,0xc3
  41ec65:	mov    ecx,DWORD PTR [ebx+ebp*1-0x62]
  41ec69:	xor    DWORD PTR [esi+0x6f],0xe628b264
  41ec70:	fcmovnbe st,st(0)
  41ec72:	push   ds
  41ec73:	push   edi
  41ec74:	xor    bl,BYTE PTR [ebx+eiz*2-0x417b0f27]
  41ec7b:	xchg   esi,eax
  41ec7c:	div    BYTE PTR [ecx-0x270d048f]
  41ec82:	xlat   BYTE PTR ds:[ebx]
  41ec83:	push   edi
  41ec84:	mov    bh,0x7d
  41ec86:	dec    ebx
  41ec87:	and    BYTE PTR [eax+edi*8],0x31
  41ec8b:	fbstp  TBYTE PTR [ecx-0x6105353c]
  41ec91:	addr16 lahf 
  41ec93:	mov    bh,0xc
  41ec95:	sub    ecx,DWORD PTR [ebp-0x43]
  41ec98:	pop    ss
  41ec99:	mov    eax,ds:0x1a62d469
  41ec9e:	cmp    DWORD PTR [eax],ecx
  41eca0:	cmp    edx,DWORD PTR [edi-0x3]
  41eca3:	icebp  
  41eca4:	enter  0x9e6,0xb1
  41eca8:	sub    edi,esp
  41ecaa:	bound  edi,QWORD PTR [ecx+0x3b228c18]
  41ecb0:	gs dec edx
  41ecb2:	test   al,0x22
  41ecb4:	adc    edi,DWORD PTR ds:0xa8a5d49d
  41ecba:	mov    ds:0x7cf8d3f7,al
  41ecbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecc0:	add    ah,al
  41ecc2:	pop    ds
  41ecc3:	cmp    bl,0x14
  41ecc6:	pop    eax
  41ecc7:	push   cs
  41ecc8:	ja     0x41ec5f
  41ecca:	xchg   esi,eax
  41eccb:	mov    ebx,0x1ec5cf1b
  41ecd0:	shl    DWORD PTR [ecx-0x77090b03],cl
  41ecd6:	mov    ?,WORD PTR [esi]
  41ecd8:	outs   dx,DWORD PTR ds:[esi]
  41ecd9:	lds    edx,FWORD PTR [edx-0x5a]
  41ecdc:	sti    
  41ecdd:	cmp    al,0x98
  41ecdf:	mov    edx,0xf28a72f
  41ece4:	mov    edx,0xe8abfbd2
  41ece9:	or     eax,0xd67b1b05
  41ecee:	inc    BYTE PTR [esi+0x66]
  41ecf1:	stos   DWORD PTR es:[edi],eax
  41ecf2:	xchg   edi,eax
  41ecf3:	fnstsw WORD PTR [ebx+edi*1-0x7b]
  41ecf7:	sub    al,0xa5
  41ecf9:	jle    0x41ecc9
  41ecfb:	inc    edi
  41ecfc:	push   ebp
  41ecfd:	ud1    edi,DWORD PTR [ebx]
  41ed00:	jmp    0x41ed81
  41ed02:	aad    0x3f
  41ed04:	adc    edx,ebp
  41ed06:	pop    ecx
  41ed07:	and    BYTE PTR [ebp+0x2a],bh
  41ed0a:	loope  0x41ecaa
  41ed0c:	imul   ebp,DWORD PTR [ebp-0x7ca83d83],0x21cf833f
  41ed16:	icebp  
  41ed17:	loope  0x41ed1e
  41ed19:	add    eax,0xc24c37e9
  41ed1e:	(bad)  
  41ed1f:	and    esi,DWORD PTR [ebp+ebx*1-0x7b]
  41ed23:	mov    bh,0xb0
  41ed25:	pop    ebx
  41ed26:	jecxz  0x41ed61
  41ed28:	jo     0x41ed37
  41ed2a:	xor    ah,BYTE PTR gs:[edi+0x74564d33]
  41ed31:	ret    0xa81
  41ed34:	mov    WORD PTR [ecx-0x36a0d39e],ss
  41ed3a:	call   0x5a536083
  41ed3f:	ret    
  41ed40:	xlat   BYTE PTR ds:[ebx]
  41ed41:	jb     0x41ece1
  41ed43:	mov    edx,0xd94304a0
  41ed48:	push   0x7bc969ab
  41ed4d:	mov    ch,0xfb
  41ed4f:	or     al,0xcb
  41ed51:	test   esp,esi
  41ed53:	mov    ebp,0x48160218
  41ed58:	popf   
  41ed59:	in     al,0xe5
  41ed5b:	stos   BYTE PTR es:[edi],al
  41ed5c:	jecxz  0x41edc9
  41ed5e:	leave  
  41ed5f:	jg     0x41edd3
  41ed61:	lods   al,BYTE PTR ds:[esi]
  41ed62:	daa    
  41ed63:	adc    BYTE PTR [esi+0x21],bh
  41ed66:	dec    eax
  41ed67:	sbb    BYTE PTR [edi-0x42641cd5],dh
  41ed6d:	push   ebx
  41ed6e:	pop    edi
  41ed6f:	mul    DWORD PTR [ebp+eax*2-0x53]
  41ed73:	bound  edx,QWORD PTR [edx]
  41ed75:	push   edi
  41ed76:	xlat   BYTE PTR ds:[ebx]
  41ed77:	std    
  41ed78:	adc    ecx,DWORD PTR [edx+esi*8]
  41ed7b:	dec    edi
  41ed7c:	push   0x19b9f14f
  41ed81:	in     eax,dx
  41ed82:	neg    esp
  41ed84:	mov    bh,al
  41ed86:	pop    ebp
  41ed87:	mov    edi,0xcabc512f
  41ed8c:	or     eax,0x53cc8c0a
  41ed91:	imul   eax,DWORD PTR [ebx],0xffffffe2
  41ed94:	adc    BYTE PTR [ecx+ebp*2],bh
  41ed97:	mov    fs,WORD PTR [esi-0x24]
  41ed9a:	repz xchg ecx,eax
  41ed9c:	sbb    eax,DWORD PTR [ebx+0x5ac57360]
  41eda2:	jnp    0x41ed6a
  41eda4:	in     al,dx
  41eda5:	pop    eax
  41eda6:	nop
  41eda7:	and    eax,0xa88059b6
  41edac:	enter  0xb6fa,0x1
  41edb0:	out    dx,eax
  41edb1:	add    al,0x3c
  41edb3:	or     al,0xae
  41edb5:	(bad)  [edx-0x6a61f5aa]
  41edbb:	push   esp
  41edbc:	out    0x4c,al
  41edbe:	mov    dl,0xb2
  41edc0:	pop    ebp
  41edc1:	cmp    BYTE PTR [ebx+0x66cdbd43],bl
  41edc7:	add    eax,0xdd43001
  41edcc:	sti    
  41edcd:	push   ss
  41edce:	push   eax
  41edcf:	mov    eax,0xf230d0cf
  41edd4:	stos   DWORD PTR es:[edi],eax
  41edd5:	pop    ebx
  41edd6:	aam    0x66
  41edd8:	dec    edx
  41edd9:	adc    dh,BYTE PTR [ecx]
  41eddb:	push   edx
  41eddc:	xchg   ecx,eax
  41eddd:	out    dx,al
  41edde:	lahf   
  41eddf:	pop    DWORD PTR [ebx+0x7a]
  41ede2:	push   ebp
  41ede3:	dec    eax
  41ede4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede5:	and    eax,0xa7b805ac
  41edea:	sub    DWORD PTR [eax],edi
  41edec:	or     al,0x9a
  41edee:	loop   0x41ed8b
  41edf0:	or     BYTE PTR [esi],cl
  41edf2:	fisub  DWORD PTR [ecx+0x29]
  41edf5:	popa   
  41edf6:	fcomp  st(7)
  41edf8:	push   0x73f94937
  41edfd:	xor    dh,bl
  41edff:	xchg   edi,eax
  41ee00:	add    edi,DWORD PTR [edi+0x3e]
  41ee03:	and    al,0xfc
  41ee05:	scas   al,BYTE PTR es:[edi]
  41ee06:	icebp  
  41ee07:	pop    esi
  41ee08:	(bad)  
  41ee09:	in     al,0x87
  41ee0b:	fstp   TBYTE PTR [ebx-0xf]
  41ee0e:	add    BYTE PTR [eax],al
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	daa    
  41ee1f:	fistp  WORD PTR [esi+0x169112b]
  41ee25:	add    ah,dh
  41ee27:	add    al,0x0
  41ee29:	add    BYTE PTR [ecx+edi*2+0x662c912d],al
  41ee30:	cld    
  41ee31:	in     eax,dx
  41ee32:	inc    edx
  41ee33:	lds    esp,FWORD PTR [ecx]
  41ee35:	(bad)  
  41ee36:	lods   eax,DWORD PTR ds:[esi]
  41ee37:	repnz out 0xc1,eax
  41ee3a:	test   eax,0x9338c934
  41ee3f:	pop    ebp
  41ee40:	xchg   ebp,eax
  41ee41:	dec    esp
  41ee42:	xchg   esi,eax
  41ee43:	mov    ebp,0xa154d8d7
  41ee48:	hlt    
  41ee49:	cmc    
  41ee4a:	push   esp
  41ee4b:	dec    esi
  41ee4c:	cmp    edi,ebp
  41ee4e:	fist   WORD PTR [edx]
  41ee50:	test   DWORD PTR [eax+eiz*1-0x56d8607e],eax
  41ee57:	lahf   
  41ee58:	fidivr WORD PTR [esi+0x1a61528d]
  41ee5e:	(bad)  
  41ee5f:	nop
  41ee60:	lock stos DWORD PTR es:[edi],eax
  41ee62:	rcl    BYTE PTR [eax+0x7c],0xa0
  41ee66:	fbld   TBYTE PTR [edi-0x6de48321]
  41ee6c:	cli    
  41ee6d:	sub    BYTE PTR [esi],dl
  41ee6f:	push   ss
  41ee70:	sbb    al,0x2
  41ee72:	lahf   
  41ee73:	cmc    
  41ee74:	mov    ah,0xb7
  41ee76:	add    eax,ecx
  41ee78:	out    dx,al
  41ee79:	outs   dx,DWORD PTR ds:[esi]
  41ee7a:	test   DWORD PTR [edx],eax
  41ee7c:	clc    
  41ee7d:	jecxz  0x41ee30
  41ee7f:	leave  
  41ee80:	mov    bh,0xa9
  41ee82:	mov    DWORD PTR [ebp-0x55],eax
  41ee85:	cwde   
  41ee86:	dec    esp
  41ee87:	shl    BYTE PTR [eax-0x23],cl
  41ee8a:	scas   al,BYTE PTR es:[edi]
  41ee8b:	sbb    DWORD PTR ds:0x77c76294,0x138f5d85
  41ee95:	mov    ebp,0x7556820b
  41ee9a:	ins    BYTE PTR es:[edi],dx
  41ee9b:	xor    al,0x39
  41ee9d:	neg    DWORD PTR [edx+esi*4-0x5e]
  41eea1:	sbb    eax,0x84645b49
  41eea6:	xor    bh,BYTE PTR [esi+0x546ca517]
  41eeac:	shl    BYTE PTR [ebp+0x42],cl
  41eeaf:	lods   al,BYTE PTR ds:[esi]
  41eeb0:	lds    ecx,FWORD PTR [esi+ecx*4-0x4d]
  41eeb4:	sub    BYTE PTR [edi-0x74b7b4a4],dh
  41eeba:	retf   0xc46e
  41eebd:	xor    DWORD PTR [esi+0x31f09dfe],esi
  41eec3:	add    eax,0x2521e46e
  41eec8:	pop    ebp
  41eec9:	and    eax,eax
  41eecb:	loopne 0x41ee83
  41eecd:	dec    eax
  41eece:	mov    dl,0x5d
  41eed0:	or     edi,DWORD PTR [ebp+0x3b]
  41eed3:	test   al,0x1b
  41eed5:	xor    DWORD PTR [ecx-0x3e],ebp
  41eed8:	push   edx
  41eed9:	in     al,0x25
  41eedb:	fdiv   DWORD PTR [esi+0x30]
  41eede:	test   BYTE PTR [ecx],ah
  41eee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee1:	(bad)  
  41eee2:	push   esp
  41eee3:	in     eax,0xc0
  41eee5:	push   edx
  41eee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee7:	add    bh,BYTE PTR [eax-0x4ea770e6]
  41eeed:	shr    DWORD PTR [ebx-0xc],0x8e
  41eef1:	cmp    al,BYTE PTR [ebx]
  41eef3:	push   edx
  41eef4:	js     0x41ef00
  41eef6:	jo     0x41ef03
  41eef8:	arpl   ax,si
  41eefa:	cwde   
  41eefb:	mov    dh,0xb6
  41eefd:	cmp    al,0x57
  41eeff:	stos   DWORD PTR es:[edi],eax
  41ef00:	sub    bl,BYTE PTR [ebp-0x74d12a39]
  41ef06:	int3   
  41ef07:	shl    dh,cl
  41ef09:	cmp    cl,BYTE PTR [esi-0x4]
  41ef0c:	scas   al,BYTE PTR es:[edi]
  41ef0d:	loopne 0x41ef77
  41ef0f:	iret   
  41ef10:	pop    eax
  41ef11:	in     eax,dx
  41ef12:	(bad)  
  41ef13:	gs scas al,BYTE PTR es:[edi]
  41ef15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef16:	mov    bh,0x5d
  41ef18:	mov    eax,0xb7adbd00
  41ef1d:	bound  ebp,QWORD PTR [eax]
  41ef1f:	inc    ecx
  41ef20:	int3   
  41ef21:	jae    0x41ef72
  41ef23:	cmp    al,0x19
  41ef25:	outs   dx,BYTE PTR ds:[esi]
  41ef26:	jp     0x41ef69
  41ef28:	pop    es
  41ef29:	loope  0x41eef0
  41ef2b:	sub    eax,0xf5f1fe6c
  41ef30:	lea    ecx,[ebp+edi*8+0x498a270e]
  41ef37:	imul   ecx,DWORD PTR [ebx-0x13],0xebd4bb0f
  41ef3e:	adc    edi,DWORD PTR [ebp+0x19]
  41ef41:	sbb    bh,BYTE PTR [ecx+edi*1+0x6c]
  41ef45:	pop    ebp
  41ef46:	aam    0x1f
  41ef48:	leave  
  41ef49:	or     eax,0xa6f105cd
  41ef4e:	scas   eax,DWORD PTR es:[edi]
  41ef4f:	mov    ds:0xd6b410b0,eax
  41ef54:	add    eax,0x4a47c3a2
  41ef59:	pop    edx
  41ef5a:	bound  ebx,QWORD PTR [esi+0x2c7399f9]
  41ef60:	outs   dx,BYTE PTR ds:[esi]
  41ef61:	sub    BYTE PTR [eax],dl
  41ef63:	push   esi
  41ef64:	sahf   
  41ef65:	out    0x4b,al
  41ef67:	xchg   esi,eax
  41ef68:	aaa    
  41ef69:	call   0x9058aebc
  41ef6e:	arpl   WORD PTR [esi],sp
  41ef70:	mov    BYTE PTR [edi],al
  41ef72:	ins    BYTE PTR es:[edi],dx
  41ef73:	jnp    0x41efd2
  41ef75:	cmp    ecx,DWORD PTR [esp+ebp*2-0x5d]
  41ef79:	mov    BYTE PTR [esi-0x5],dh
  41ef7c:	sbb    ah,ch
  41ef7e:	test   eax,0x3d086591
  41ef83:	add    dh,cl
  41ef85:	stc    
  41ef86:	sahf   
  41ef87:	mov    esi,0x34ff56ae
  41ef8c:	loopne 0x41efb1
  41ef8e:	xor    eax,0x1c2088ee
  41ef93:	push   ecx
  41ef94:	shr    DWORD PTR [edi],1
  41ef96:	pop    esi
  41ef97:	ins    BYTE PTR es:[edi],dx
  41ef98:	cmp    eax,0xb05e5cff
  41ef9d:	les    eax,FWORD PTR [ebx+0x79]
  41efa0:	mov    edx,0x44d654b6
  41efa5:	dec    esp
  41efa6:	dec    ebx
  41efa7:	out    0x50,eax
  41efa9:	or     al,0x1f
  41efab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efac:	clc    
  41efad:	shl    DWORD PTR [esp+eax*2-0x42],0x90
  41efb2:	lods   al,BYTE PTR ds:[esi]
  41efb3:	pop    ebx
  41efb4:	push   0x7e
  41efb6:	mov    DWORD PTR [edi],esi
  41efb8:	call   0xea880d5b
  41efbd:	nop
  41efbe:	xchg   BYTE PTR [esi-0x37],al
  41efc1:	lds    eax,FWORD PTR [ecx]
  41efc3:	(bad)  
  41efc4:	loope  0x41efad
  41efc6:	xchg   edx,eax
  41efc7:	and    ah,BYTE PTR [edx]
  41efc9:	dec    ebp
  41efca:	sahf   
  41efcb:	and    DWORD PTR [eax-0x76],ebp
  41efce:	mov    bl,0x40
  41efd0:	(bad)  
  41efd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd2:	je     0x41ef63
  41efd4:	jbe    0x41efdc
  41efd6:	imul   esp,DWORD PTR [ecx-0xa],0xd9c73e10
  41efdd:	mov    ah,0xbf
  41efdf:	test   al,0x8e
  41efe1:	dec    edi
  41efe2:	dec    eax
  41efe3:	mov    esp,0x1efbf860
  41efe8:	mov    esi,0x759bb822
  41efed:	fiadd  WORD PTR [ebx+0x48]
  41eff0:	inc    BYTE PTR [edi-0x396b02f2]
  41eff6:	pop    eax
  41eff7:	lock xor DWORD PTR [ecx+0x7d],esp
  41effb:	dec    eax
  41effc:	dec    ebp
  41effd:	sti    
  41effe:	xlat   BYTE PTR ds:[ebx]
  41efff:	repz sub ecx,edx
  41f002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f003:	inc    edi
  41f004:	jg     0x41f05f
  41f006:	test   BYTE PTR [edi-0x2f4bb15a],ah
  41f00c:	shl    DWORD PTR [ebx+edi*2-0xe9b8433],0x54
  41f014:	mov    ch,0xa
  41f016:	dec    eax
  41f017:	jp     0x41f07a
  41f019:	fwait
  41f01a:	pusha  
  41f01b:	icebp  
  41f01c:	add    BYTE PTR [edi+0x12],bl
  41f01f:	mov    dh,0x63
  41f021:	push   ebp
  41f022:	pusha  
  41f023:	les    esp,FWORD PTR [eax]
  41f025:	das    
  41f026:	fnstsw WORD PTR [esi-0x2b56031f]
  41f02c:	jnp    0x41efb0
  41f02e:	js     0x41efe4
  41f030:	outs   dx,BYTE PTR ds:[esi]
  41f031:	mov    DWORD PTR [ebp+0x6f],ebx
  41f034:	jne    0x41efe8
  41f036:	test   eax,0x44fb359c
  41f03b:	(bad)  
  41f03d:	loopne 0x41f006
  41f03f:	pop    edx
  41f041:	push   esi
  41f042:	sbb    ebp,DWORD PTR [ebx]
  41f044:	lds    esi,FWORD PTR [edx+0x10]
  41f047:	js     0x41f08f
  41f049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f04a:	into   
  41f04b:	cmp    ch,BYTE PTR [ebx+eiz*1]
  41f04e:	xchg   ebp,eax
  41f04f:	retf   0xbdfb
  41f052:	ja     0x41f037
  41f054:	jg     0x41f072
  41f056:	mov    esp,0xd1263953
  41f05b:	scas   al,BYTE PTR es:[edi]
  41f05c:	pop    esp
  41f05d:	cwde   
  41f05e:	sbb    ah,BYTE PTR [ecx+edx*8]
  41f061:	mov    es,WORD PTR [esi-0x28]
  41f064:	sbb    al,0x6a
  41f066:	adc    esi,0x89f040ea
  41f06c:	imul   DWORD PTR [edx]
  41f06e:	add    bl,al
  41f070:	or     esp,ecx
  41f072:	sub    al,0xc
  41f074:	xor    al,0x65
  41f076:	jmp    0x8b397c2f
  41f07b:	xchg   edx,eax
  41f07c:	pop    esp
  41f07d:	int3   
  41f07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f07f:	arpl   WORD PTR [eax+0x5254872c],sp
  41f085:	stc    
  41f086:	sbb    eax,0x85f6780d
  41f08b:	pop    esp
  41f08c:	xlat   BYTE PTR ds:[ebx]
  41f08d:	pop    ss
  41f08e:	cmp    al,0x63
  41f090:	mov    dl,0x17
  41f092:	add    edx,edi
  41f094:	stc    
  41f095:	inc    esp
  41f096:	mov    bh,0xa0
  41f098:	arpl   WORD PTR [ebp+ebp*2+0x1],bp
  41f09c:	test   bl,ch
  41f09e:	lods   al,BYTE PTR ds:[esi]
  41f09f:	xor    DWORD PTR [esi-0x5ebbc6bd],ebp
  41f0a5:	sub    DWORD PTR [esi],ebx
  41f0a7:	int    0x1
  41f0a9:	mov    esi,0xeef23763
  41f0ae:	add    BYTE PTR [edx-0x117745af],al
  41f0b4:	dec    edi
  41f0b5:	sub    al,0x9
  41f0b7:	call   0xe1e5:0xa0e5472
  41f0be:	inc    edi
  41f0bf:	push   ss
  41f0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0c1:	(bad)  
  41f0c2:	xchg   esp,eax
  41f0c3:	fnstsw WORD PTR [esi]
  41f0c5:	sbb    BYTE PTR [edx],dh
  41f0c7:	and    bl,BYTE PTR [edi-0x70f7315a]
  41f0cd:	xchg   ebp,eax
  41f0ce:	cdq    
  41f0cf:	rcl    DWORD PTR ds:0x84b37788,cl
  41f0d5:	mov    esi,DWORD PTR [esi]
  41f0d7:	sub    eax,DWORD PTR ds:0xd35f6e7b
  41f0dd:	xchg   esi,eax
  41f0de:	inc    eax
  41f0df:	pop    ds
  41f0e0:	xchg   esp,eax
  41f0e1:	jmp    esp
  41f0e3:	aad    0xd0
  41f0e5:	push   esp
  41f0e6:	dec    edi
  41f0e7:	jg     0x41f13a
  41f0e9:	add    dl,BYTE PTR [esi-0x6d0504e5]
  41f0ef:	add    eax,0xab215c49
  41f0f4:	int    0xf7
  41f0f6:	jecxz  0x41f09c
  41f0f8:	test   eax,0x45a6f130
  41f0fd:	or     esp,ecx
  41f0ff:	jl     0x41f16a
  41f101:	mov    esi,0xd9f25592
  41f106:	xor    BYTE PTR [ebp+0x2c84352b],dh
  41f10c:	pushf  
  41f10d:	call   0x50f627cb
  41f112:	out    0xf5,al
  41f114:	lea    esp,[ebx+0x54]
  41f117:	pop    esp
  41f118:	mov    bh,0xb2
  41f11a:	mov    edx,0xccb83bf2
  41f11f:	fcomp  DWORD PTR [ebx-0x30]
  41f122:	xchg   esi,eax
  41f123:	retf   
  41f124:	ins    BYTE PTR es:[edi],dx
  41f125:	setle  BYTE PTR [edi]
  41f128:	mov    ds:0xbcf4e3b8,eax
  41f12d:	cmp    dh,bh
  41f12f:	add    eax,0x11397b36
  41f134:	sti    
  41f135:	in     eax,dx
  41f136:	lahf   
  41f137:	cwde   
  41f138:	sub    ebx,DWORD PTR [ebx]
  41f13a:	push   edx
  41f13b:	pop    edx
  41f13c:	jbe    0x41f0e2
  41f13e:	push   es
  41f13f:	in     al,dx
  41f140:	ret    0x232b
  41f143:	add    eax,0x1232149e
  41f148:	push   ebp
  41f149:	jo     0x41f10a
  41f14b:	mov    edx,0xcbf3c05f
  41f150:	jl     0x41f185
  41f152:	mov    edi,esi
  41f154:	jbe    0x41f142
  41f156:	shl    BYTE PTR [esi-0x4ddff2b1],0x31
  41f15d:	imul   edx,DWORD PTR [ecx-0x1b39ae52],0x2b
  41f164:	dec    ebx
  41f165:	adc    cl,al
  41f167:	clc    
  41f168:	in     al,dx
  41f169:	clc    
  41f16a:	fdivr  st,st(2)
  41f16c:	int3   
  41f16d:	arpl   WORD PTR [esi-0x54],cx
  41f170:	mov    BYTE PTR [esi],dl
  41f172:	jae    0x41f1d3
  41f174:	inc    eax
  41f175:	push   esi
  41f176:	sub    al,0xfc
  41f178:	popf   
  41f179:	jge    0x41f149
  41f17b:	std    
  41f17c:	inc    edi
  41f17d:	push   edi
  41f17e:	sub    DWORD PTR [edi-0x7e],0x454cd73d
  41f185:	dec    ebp
  41f186:	and    dh,BYTE PTR [ecx]
  41f188:	jmp    0xa46f:0xae4d32d0
  41f18f:	pop    ebx
  41f190:	cmp    eax,esi
  41f192:	pop    edx
  41f193:	(bad)  
  41f194:	sti    
  41f195:	pop    ebp
  41f196:	mov    ch,0x1d
  41f198:	xor    DWORD PTR ds:0x619788cd,esi
  41f19e:	adc    al,0xfc
  41f1a0:	sub    BYTE PTR [ebp+0x72a6488e],dh
  41f1a6:	aaa    
  41f1a7:	mov    ecx,0x199ba74a
  41f1ac:	push   edi
  41f1ad:	stos   BYTE PTR es:[edi],al
  41f1ae:	sar    dh,0x92
  41f1b1:	push   ds
  41f1b2:	adc    ch,0x99
  41f1b5:	sub    eax,DWORD PTR [edi+0x526b9402]
  41f1bb:	inc    esp
  41f1bc:	pop    esi
  41f1bd:	jnp    0x41f220
  41f1bf:	or     dl,bl
  41f1c1:	std    
  41f1c2:	int3   
  41f1c3:	loop   0x41f16e
  41f1c5:	imul   esp,DWORD PTR [ebp-0x13],0xffffff82
  41f1c9:	dec    eax
  41f1ca:	outs   dx,DWORD PTR ds:[esi]
  41f1cb:	and    bl,BYTE PTR [eax-0x4e]
  41f1ce:	pmaxsw mm3,QWORD PTR [edi+0x40a01d14]
  41f1d5:	sub    BYTE PTR [esi],0x6d
  41f1d8:	push   ds
  41f1d9:	add    BYTE PTR [esi-0x738b5996],0x93
  41f1e0:	dec    ecx
  41f1e1:	popf   
  41f1e2:	dec    esi
  41f1e3:	neg    DWORD PTR [edi]
  41f1e5:	aas    
  41f1e6:	xor    ch,bh
  41f1e8:	sub    ah,BYTE PTR [ebx+0x4f3ea248]
  41f1ee:	xlat   BYTE PTR ds:[ebx]
  41f1ef:	mov    ds:0xeae95962,eax
  41f1f4:	test   bh,bh
  41f1f6:	xchg   ebx,eax
  41f1f7:	jb     0x41f220
  41f1f9:	in     eax,0x32
  41f1fb:	mov    bl,0x54
  41f1fd:	adc    al,0xa9
  41f1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f200:	jne    0x41f260
  41f202:	or     ecx,DWORD PTR [edi]
  41f204:	shl    BYTE PTR [ecx+0x46b6faca],cl
  41f20a:	pop    ds
  41f20b:	add    eax,0xffffff91
  41f20e:	daa    
  41f20f:	(bad)  
  41f211:	in     eax,dx
  41f212:	fld    st(1)
  41f214:	cmp    BYTE PTR [edx],ah
  41f216:	sbb    eax,0x10cfe146
  41f21b:	int    0x6b
  41f21d:	cli    
  41f21e:	data16 mov bh,0xf3
  41f221:	les    edx,FWORD PTR [edx+0x7c]
  41f224:	mov    es:0x7c8d14b4,al
  41f22a:	js     0x41f259
  41f22c:	cli    
  41f22d:	in     al,dx
  41f22e:	leave  
  41f22f:	jge    0x41f1c2
  41f231:	mov    cl,0x84
  41f233:	pop    esi
  41f234:	iret   
  41f235:	xchg   ebx,eax
  41f236:	sub    bh,ch
  41f238:	xchg   ch,dh
  41f23a:	bound  ecx,QWORD PTR [ecx]
  41f23c:	cs aas 
  41f23e:	lea    ecx,[ecx]
  41f240:	adc    eax,0xe0a8f5cb
  41f245:	cmp    DWORD PTR [esi-0x2b],ebp
  41f248:	cmc    
  41f249:	mov    fs,WORD PTR [eax+0x73]
  41f24c:	push   esi
  41f24d:	mov    bl,0xfe
  41f24f:	push   cs
  41f250:	into   
  41f251:	lock xor dh,BYTE PTR [edx+edi*1]
  41f255:	stc    
  41f256:	fsubrp st(6),st
  41f258:	sbb    al,0x6f
  41f25a:	scas   al,BYTE PTR es:[edi]
  41f25b:	dec    ecx
  41f25c:	push   0xffffffef
  41f25e:	pop    ecx
  41f25f:	jb     0x41f228
  41f261:	jmp    0x7f0b:0x9da0e7c5
  41f268:	mov    bh,0xad
  41f26a:	jnp    0x41f250
  41f26c:	jmp    0x41f2a3
  41f26e:	jno    0x41f21e
  41f270:	fisttp DWORD PTR [esi]
  41f272:	test   ch,bl
  41f274:	mov    ds:0x38d7b4df,al
  41f279:	cmp    eax,0xa0e05e65
  41f27e:	inc    DWORD PTR [edx+ebp*8+0x1b]
  41f282:	ins    BYTE PTR es:[edi],dx
  41f283:	fcmovu st,st(4)
  41f285:	aam    0x28
  41f287:	jmp    0xaef81efa
  41f28c:	mov    ebp,0x9be5e747
  41f291:	jmp    0x41f2f3
  41f293:	pop    esp
  41f294:	adc    DWORD PTR [ebp-0x49],edx
  41f297:	adc    bh,dl
  41f299:	sbb    ah,BYTE PTR [esi+esi*1-0x2124e6d6]
  41f2a0:	arpl   WORD PTR [edx+0x65],sp
  41f2a3:	or     al,0x60
  41f2a5:	sbb    BYTE PTR [eax],al
  41f2a7:	rcl    edi,cl
  41f2a9:	not    ecx
  41f2ab:	test   al,0x2e
  41f2ad:	add    al,0x7e
  41f2af:	pop    ss
  41f2b0:	(bad)  
  41f2b1:	cmp    BYTE PTR [ebp+0x49399c55],al
  41f2b7:	in     al,0xac
  41f2b9:	cld    
  41f2ba:	inc    edx
  41f2bb:	and    cl,BYTE PTR cs:[ebx]
  41f2be:	jle    0x41f2cc
  41f2c0:	daa    
  41f2c1:	sbb    eax,0x31bc5e1c
  41f2c6:	mov    DWORD PTR [edi],edi
  41f2c8:	fcompp 
  41f2ca:	ror    BYTE PTR [eax],1
  41f2cc:	cmp    al,0x4a
  41f2ce:	mov    fs,WORD PTR [ebp+0x27]
  41f2d1:	xor    al,0x5
  41f2d3:	push   cs
  41f2d4:	cld    
  41f2d5:	shl    DWORD PTR [ebx],0xef
  41f2d8:	sahf   
  41f2d9:	and    cl,ah
  41f2db:	cmp    DWORD PTR [esi-0x3e16d526],esi
  41f2e1:	sbb    BYTE PTR [eax+0x5],al
  41f2e4:	jo     0x41f311
  41f2e6:	sub    DWORD PTR ds:0x6541e69f,edi
  41f2ec:	es mov esi,0xdcc2efb
  41f2f2:	cmp    esp,0xc2cb55e2
  41f2f8:	dec    ebp
  41f2f9:	push   ebx
  41f2fa:	mov    DWORD PTR [ebx],ebp
  41f2fc:	cli    
  41f2fd:	loope  0x41f2dd
  41f2ff:	push   ss
  41f300:	fwait
  41f301:	xor    ch,BYTE PTR gs:[eax+ecx*2]
  41f305:	jnp    0x41f29d
  41f307:	(bad)  
  41f308:	cmp    ch,BYTE PTR [eax]
  41f30a:	shl    BYTE PTR ds:0x1ec20bf5,1
  41f310:	pop    edx
  41f311:	add    eax,0x9e865651
  41f316:	(bad)  
  41f317:	mov    ds:0x95ade142,al
  41f31c:	fdiv   QWORD PTR [edi+0x0]
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	sub    ah,0x3d
  41f330:	push   0x16e052b
  41f335:	add    ah,dh
  41f337:	add    al,0x0
  41f339:	add    BYTE PTR [ecx+0x38],bh
  41f33c:	in     al,dx
  41f33d:	out    0x69,al
  41f33f:	test   eax,0xee15ec68
  41f344:	push   ds
  41f345:	pushf  
  41f346:	pushf  
  41f347:	xlat   BYTE PTR ds:[ebx]
  41f348:	cmc    
  41f349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34a:	mov    BYTE PTR [edi-0x3f],dl
  41f34d:	mov    eax,ds:0xf8a612b0
  41f352:	ss retf 0xfd71
  41f356:	outs   dx,BYTE PTR ds:[esi]
  41f357:	arpl   WORD PTR [edx-0x76],cx
  41f35a:	dec    ebp
  41f35b:	pop    esp
  41f35c:	mov    ecx,0xe3dd5d99
  41f361:	mov    BYTE PTR [ebp+0x18f886f],dh
  41f367:	push   cs
  41f368:	call   0xf786c209
  41f36d:	xchg   ecx,eax
  41f36e:	adc    edi,edi
  41f370:	cmp    DWORD PTR [ecx-0x6c],ecx
  41f373:	cmp    dl,BYTE PTR [ebp+0x11]
  41f376:	jl     0x41f3c7
  41f378:	and    BYTE PTR [edx],dh
  41f37a:	inc    ebp
  41f37b:	cdq    
  41f37c:	xor    BYTE PTR [edx+eax*8-0x39f03915],cl
  41f383:	rol    DWORD PTR [edi+0x2437efeb],0x7e
  41f38a:	in     eax,0x11
  41f38c:	jl     0x41f3e7
  41f38e:	shl    DWORD PTR [ebx],0x4
  41f391:	shr    BYTE PTR [edx+ecx*2+0x76ef3ef],0xe7
  41f399:	(bad)  
  41f39a:	fst    DWORD PTR [ebx-0x4f]
  41f39d:	bound  ebx,QWORD PTR [eax+0x2e5e6ccc]
  41f3a3:	ins    DWORD PTR es:[edi],dx
  41f3a4:	mov    eax,0x492683fc
  41f3a9:	out    dx,al
  41f3aa:	inc    esp
  41f3ab:	mov    cl,0x26
  41f3ad:	into   
  41f3ae:	pop    es
  41f3af:	jecxz  0x41f3e9
  41f3b1:	nop
  41f3b2:	fimul  WORD PTR [esi-0x11]
  41f3b5:	mov    ebx,0x3e31b938
  41f3ba:	sbb    al,0xc4
  41f3bc:	and    eax,DWORD PTR [esi+0x26963590]
  41f3c2:	mov    ds:0x80fb906c,eax
  41f3c7:	rol    DWORD PTR [ebx-0xe],cl
  41f3ca:	test   al,0x2
  41f3cc:	bound  edx,QWORD PTR [ebp-0x559cfec8]
  41f3d2:	fist   WORD PTR [ebx-0x3c]
  41f3d5:	cs dec eax
  41f3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d8:	ja     0x41f3f7
  41f3da:	popf   
  41f3db:	cwde   
  41f3dc:	dec    esi
  41f3dd:	stc    
  41f3de:	jo     0x41f3dd
  41f3e0:	sub    ecx,ecx
  41f3e2:	pop    ss
  41f3e3:	aam    0xa5
  41f3e5:	cmp    ecx,DWORD PTR [esi+0x5d57cdae]
  41f3eb:	pop    edx
  41f3ec:	and    ah,ah
  41f3ee:	int3   
  41f3ef:	(bad)  
  41f3f0:	mov    bl,0x9
  41f3f2:	ins    DWORD PTR es:[edi],dx
  41f3f3:	inc    edi
  41f3f4:	push   eax
  41f3f5:	into   
  41f3f6:	push   ebp
  41f3f7:	pop    esi
  41f3f8:	xor    ebp,esp
  41f3fa:	adc    edi,DWORD PTR [edx]
  41f3fc:	shl    BYTE PTR [eax],1
  41f3fe:	dec    ecx
  41f3ff:	clc    
  41f400:	mov    ah,0x15
  41f402:	pop    edi
  41f403:	add    BYTE PTR [eax+0x3d],0x63
  41f407:	pop    ds
  41f408:	add    ecx,DWORD PTR ds:0x9dfbf00f
  41f40e:	mov    esp,0xf46f86c5
  41f413:	inc    eax
  41f414:	fs aad 0x2c
  41f417:	dec    ecx
  41f418:	pop    esi
  41f419:	fst    QWORD PTR [esp+eax*4-0x626079ea]
  41f420:	inc    esp
  41f421:	test   BYTE PTR [ecx+esi*1],cl
  41f424:	inc    DWORD PTR [edi+0x4]
  41f427:	pop    ecx
  41f428:	lock sbb BYTE PTR [ebx+0x2b],0x2d
  41f42d:	das    
  41f42e:	mov    ah,al
  41f430:	lods   eax,DWORD PTR ds:[esi]
  41f431:	jmp    0x44b7:0x333988fa
  41f438:	or     DWORD PTR [edx-0x108a8724],ecx
  41f43e:	leave  
  41f43f:	sub    ah,BYTE PTR [eax+0x2069f981]
  41f445:	mov    ecx,0xcbd6d71f
  41f44a:	jle    0x41f3e1
  41f44c:	push   eax
  41f44d:	pop    es
  41f44e:	jo     0x41f46a
  41f450:	fdivp  st(4),st
  41f452:	mov    ds:0x79e16927,eax
  41f457:	div    BYTE PTR [edi+0x19dfcb02]
  41f45d:	inc    ebx
  41f45e:	les    edi,FWORD PTR ds:0xa73b9709
  41f464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f465:	iret   
  41f466:	out    dx,al
  41f467:	or     DWORD PTR [edx+0x32],esi
  41f46a:	sub    DWORD PTR fs:0x93ff7d6b,edx
  41f471:	xchg   esp,eax
  41f472:	lds    esp,FWORD PTR [edi+0x60]
  41f475:	sbb    al,BYTE PTR [eax]
  41f477:	(bad)  [esi]
  41f479:	or     eax,0xc49494f3
  41f47e:	or     al,0x1a
  41f480:	mov    al,0x43
  41f482:	scas   eax,DWORD PTR es:[edi]
  41f483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f484:	xor    bh,BYTE PTR [eax-0x4e]
  41f487:	dec    edi
  41f488:	ds dec edx
  41f48a:	and    DWORD PTR [ecx+0x1],eax
  41f48d:	orps   xmm4,XMMWORD PTR [edi+eax*2-0x2902b6c0]
  41f495:	hlt    
  41f496:	mov    edx,DWORD PTR [eax]
  41f498:	inc    ebx
  41f499:	pop    ds
  41f49a:	sbb    al,0x17
  41f49c:	mov    ch,0xd3
  41f49e:	ret    
  41f49f:	das    
  41f4a0:	aas    
  41f4a1:	push   ds
  41f4a2:	mov    ebx,0xe42034b
  41f4a7:	mov    esp,0x8bf02ff2
  41f4ac:	xchg   edi,eax
  41f4ad:	or     eax,0xe6de8e84
  41f4b2:	mov    cl,al
  41f4b4:	xlat   BYTE PTR ds:[ebx]
  41f4b5:	outs   dx,DWORD PTR ds:[esi]
  41f4b6:	xchg   ecx,eax
  41f4b7:	xchg   esp,eax
  41f4b8:	(bad)  [edx+0x3d38a7e5]
  41f4be:	leave  
  41f4bf:	call   0x29b4:0x7b6ea9c6
  41f4c6:	ret    
  41f4c7:	into   
  41f4c8:	xor    al,BYTE PTR [ebx]
  41f4ca:	mov    esi,0x30540497
  41f4cf:	xlat   BYTE PTR ds:[ebx]
  41f4d0:	into   
  41f4d1:	pop    ds
  41f4d2:	mov    ds:0xde10389f,eax
  41f4d7:	fwait
  41f4d8:	add    al,0x60
  41f4da:	pop    ebp
  41f4db:	or     ah,cl
  41f4dd:	dec    esi
  41f4de:	mov    edi,0xa6487570
  41f4e3:	adc    ebx,eax
  41f4e5:	sub    BYTE PTR [edx+0x361f5d1d],ch
  41f4eb:	xchg   BYTE PTR [esi],ch
  41f4ed:	xor    esp,DWORD PTR [ebp-0x1c]
  41f4f0:	mov    DWORD PTR [ecx+eax*4+0x15c83ada],ebx
  41f4f7:	imul   esp,edi,0xffffff9f
  41f4fa:	icebp  
  41f4fb:	jo     0x41f560
  41f4fd:	out    dx,al
  41f4fe:	adc    eax,0x3dbc8e59
  41f503:	retf   0xbe65
  41f506:	xor    eax,0xc2e97823
  41f50b:	dec    ebp
  41f50c:	test   BYTE PTR [edi+0x362d7c50],0x57
  41f513:	push   ds
  41f514:	pop    ds
  41f515:	out    dx,eax
  41f516:	stc    
  41f517:	imul   eax,DWORD PTR [ecx+edx*4+0x532b07c1],0x30
  41f51f:	sbb    eax,0xa90c984a
  41f524:	shl    DWORD PTR ds:0x82892782,cl
  41f52a:	lea    esi,[esi+0x5003bbde]
  41f530:	(bad)  
  41f531:	sar    BYTE PTR [eax],cl
  41f533:	loope  0x41f525
  41f535:	test   eax,0x7fa4c0e
  41f53a:	mov    ds:0xe53331f1,al
  41f53f:	mov    bl,BYTE PTR [eax]
  41f541:	cld    
  41f542:	ins    BYTE PTR es:[edi],dx
  41f543:	jmp    0x41f50b
  41f545:	out    0xa1,al
  41f547:	in     al,0x80
  41f549:	and    DWORD PTR [eax-0x4a1b9014],0xeffe89c5
  41f553:	out    dx,eax
  41f554:	dec    ecx
  41f555:	ins    BYTE PTR es:[edi],dx
  41f556:	cmp    bl,bl
  41f558:	and    ecx,ecx
  41f55a:	fwait
  41f55b:	pop    ecx
  41f55c:	mov    ebx,0xad667420
  41f561:	mov    bh,0x7d
  41f563:	and    eax,0x6c138531
  41f568:	out    0x80,eax
  41f56a:	xor    BYTE PTR [eax-0x5e3bf08e],ch
  41f570:	or     eax,0x508e6fc8
  41f575:	add    eax,0xf775181e
  41f57a:	mov    ch,0x4e
  41f57c:	ds in  eax,dx
  41f57e:	fcom   DWORD PTR [ebx-0xdb1714b]
  41f584:	mov    esi,0xa8f80616
  41f589:	pop    ebp
  41f58a:	pushf  
  41f58b:	fwait
  41f58c:	ins    DWORD PTR es:[edi],dx
  41f58d:	push   ds
  41f58e:	mov    ch,0x3f
  41f590:	(bad)  
  41f591:	arpl   WORD PTR [edx],bx
  41f593:	mov    ebx,0xf6144baf
  41f598:	jne    0x41f5b4
  41f59a:	inc    esi
  41f59b:	int    0xe7
  41f59d:	inc    esi
  41f59e:	inc    esi
  41f59f:	into   
  41f5a0:	adc    dh,BYTE PTR [bp+si]
  41f5a3:	mov    BYTE PTR ds:[eax+eiz*2+0x7ef33dfb],dh
  41f5ab:	dec    edi
  41f5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ad:	sbb    al,0x43
  41f5af:	xor    eax,0x2a73f4a1
  41f5b4:	push   cs
  41f5b5:	mov    bl,0x23
  41f5b7:	pop    esi
  41f5b8:	mov    ah,0xff
  41f5ba:	dec    ebx
  41f5bb:	js     0x41f5ba
  41f5bd:	(bad)  [edi]
  41f5bf:	mov    al,0x54
  41f5c1:	sar    ebp,1
  41f5c3:	sub    al,0xf4
  41f5c5:	jno    0x41f622
  41f5c7:	pop    DWORD PTR [ebx+0x6252962e]
  41f5cd:	adc    al,0x1b
  41f5cf:	clc    
  41f5d0:	mov    esp,0x32b8c36a
  41f5d5:	enter  0x1faa,0xc2
  41f5d9:	mov    eax,ds:0x350e6aba
  41f5de:	call   0x49933375
  41f5e3:	mov    esp,0x8daf488
  41f5e8:	xchg   ecx,eax
  41f5e9:	jnp    0x41f652
  41f5eb:	xor    DWORD PTR [esi],ebx
  41f5ed:	pop    ebx
  41f5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ef:	xlat   BYTE PTR ds:[ebx]
  41f5f0:	cwde   
  41f5f1:	sub    cl,BYTE PTR [eax+0x1b]
  41f5f4:	ja     0x41f58a
  41f5f6:	pop    ecx
  41f5f7:	(bad)  
  41f5f9:	pop    ss
  41f5fa:	sti    
  41f5fb:	aas    
  41f5fc:	call   0x150a:0x3ccd48b4
  41f603:	fwait
  41f604:	mov    ds:0xd7a9ca33,eax
  41f609:	mov    edi,0x91c18a76
  41f60e:	mov    fs,WORD PTR [ebp-0x35f82cef]
  41f614:	std    
  41f615:	aam    0x19
  41f617:	int3   
  41f618:	mov    ecx,0xcfe47750
  41f61d:	add    eax,DWORD PTR [ebx+0x49]
  41f620:	cmp    bl,BYTE PTR ds:0x3ac099b6
  41f626:	lods   eax,DWORD PTR ds:[esi]
  41f627:	xchg   ecx,eax
  41f628:	mov    bl,0xf3
  41f62a:	out    0xbd,eax
  41f62c:	std    
  41f62d:	popf   
  41f62e:	jmp    FWORD PTR [ebp+0x4122ebe5]
  41f634:	inc    esi
  41f635:	aaa    
  41f636:	in     al,0x27
  41f638:	cmp    al,0x0
  41f63a:	je     0x41f686
  41f63c:	mov    WORD PTR [ecx-0x64],?
  41f63f:	push   ds
  41f640:	aam    0xa3
  41f642:	add    dh,0xb8
  41f645:	pop    edi
  41f646:	pop    edx
  41f647:	shr    cl,0xe3
  41f64a:	mov    ah,ch
  41f64c:	inc    esi
  41f64d:	pop    edx
  41f64e:	sbb    al,0xb5
  41f650:	test   al,0x19
  41f652:	pushf  
  41f653:	fidiv  WORD PTR [esi]
  41f655:	jg     0x41f603
  41f657:	jne    0x41f66d
  41f659:	mov    bh,0xa0
  41f65b:	dec    esi
  41f65c:	out    dx,al
  41f65d:	mov    al,ds:0x5f542d50
  41f662:	popa   
  41f663:	(bad)  
  41f664:	stos   BYTE PTR es:[edi],al
  41f665:	jne    0x41f690
  41f667:	xor    dh,BYTE PTR [edi+0x2e2b41e6]
  41f66d:	jp     0x41f6af
  41f66f:	fcomp  DWORD PTR [edx]
  41f671:	add    al,0x12
  41f673:	push   cs
  41f674:	xchg   BYTE PTR [esi],cl
  41f676:	int    0x75
  41f678:	mov    ?,WORD PTR [ebx]
  41f67a:	mov    ah,0xe2
  41f67c:	shl    BYTE PTR ds:0x57936134,0xad
  41f683:	pop    ebp
  41f684:	pop    ss
  41f685:	out    dx,eax
  41f686:	icebp  
  41f687:	or     al,0x1f
  41f689:	adc    ecx,DWORD PTR [ebx+0x7e]
  41f68c:	mov    al,0xe3
  41f68e:	sbb    DWORD PTR [esp+ebx*1],ebp
  41f691:	and    BYTE PTR ds:0x854a0659,bl
  41f697:	or     eax,0x1627093a
  41f69c:	xor    dh,BYTE PTR [eax-0x4ce00e9c]
  41f6a2:	cmp    eax,0xeafa8300
  41f6a7:	and    al,ch
  41f6a9:	rol    ebx,cl
  41f6ab:	aaa    
  41f6ac:	xor    cl,BYTE PTR [esi]
  41f6ae:	or     DWORD PTR [esi-0xa],0xd4f99f1a
  41f6b5:	lock ds inc ecx
  41f6b8:	push   cs
  41f6b9:	(bad)  
  41f6ba:	dec    ebp
  41f6bb:	test   eax,0x7b2a5b98
  41f6c0:	xor    eax,0xfd6a890d
  41f6c5:	fidivr WORD PTR [ebx-0x293c992f]
  41f6cb:	adc    BYTE PTR [ebp+0x74],dh
  41f6ce:	jp     0x41f726
  41f6d0:	std    
  41f6d1:	pop    ebp
  41f6d2:	cmp    al,0x3e
  41f6d4:	cdq    
  41f6d5:	mov    bl,0xe2
  41f6d7:	scas   al,BYTE PTR es:[edi]
  41f6d8:	push   ds
  41f6d9:	inc    ebp
  41f6da:	cmp    eax,0x4b66dbee
  41f6df:	sub    bh,BYTE PTR [esi-0x65b7bf44]
  41f6e5:	sub    al,0xe5
  41f6e7:	inc    edx
  41f6e8:	popa   
  41f6e9:	loopne 0x41f694
  41f6eb:	mov    esi,0xaf69ea83
  41f6f0:	sbb    dh,ah
  41f6f2:	fcomp  DWORD PTR [ecx-0x59]
  41f6f5:	sub    edx,eax
  41f6f7:	mov    ds:0xb04a7d4d,al
  41f6fc:	fcomp  DWORD PTR [edi-0x3c]
  41f6ff:	lea    esi,es:[edi-0x2a6c3722]
  41f706:	loop   0x41f6e3
  41f708:	mov    ebx,0xe1f77f5a
  41f70d:	aas    
  41f70e:	(bad)  
  41f70f:	popf   
  41f710:	cmp    al,0xfb
  41f712:	inc    esi
  41f713:	dec    esp
  41f714:	jle    0x41f723
  41f716:	jmp    0x41f698
  41f718:	and    eax,0x86d66f6c
  41f71d:	pusha  
  41f71e:	pop    ss
  41f71f:	jle    0x41f6d2
  41f721:	je     0x41f71a
  41f723:	inc    esi
  41f724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f725:	jno    0x41f771
  41f727:	pop    ds
  41f728:	arpl   WORD PTR [ebx+0x6e],bx
  41f72b:	adc    edx,DWORD PTR [edi-0x57]
  41f72e:	and    edx,DWORD PTR [ebx+0x56]
  41f731:	mov    ebp,DWORD PTR [edx-0x755c4f72]
  41f737:	xor    BYTE PTR [edx-0x2605472e],ah
  41f73d:	mov    eax,0x8d5737a7
  41f742:	pop    edi
  41f743:	stos   DWORD PTR es:[edi],eax
  41f744:	inc    ebp
  41f745:	pop    esi
  41f746:	inc    ebp
  41f747:	lods   al,BYTE PTR ds:[esi]
  41f748:	adc    dh,BYTE PTR [esi]
  41f74a:	adc    al,0x1b
  41f74c:	adc    al,0x51
  41f74e:	sub    DWORD PTR [eax-0x4b],edi
  41f751:	mov    DWORD PTR [edx-0x78c78902],ebp
  41f757:	adc    eax,0xec1f41ce
  41f75c:	out    0x62,eax
  41f75e:	(bad)  
  41f75f:	les    esp,FWORD PTR [ecx+ebp*2+0x33]
  41f763:	pop    ds
  41f764:	pusha  
  41f765:	mov    al,0xd7
  41f767:	mov    bl,0x4f
  41f769:	jnp    0x41f701
  41f76b:	pop    eax
  41f76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76d:	push   ecx
  41f76e:	ins    DWORD PTR es:[edi],dx
  41f76f:	retf   0x8824
  41f772:	xchg   edi,eax
  41f773:	bound  ebx,QWORD PTR [edi]
  41f775:	sub    BYTE PTR [edi],ch
  41f777:	stos   DWORD PTR es:[edi],eax
  41f778:	out    0x1e,al
  41f77a:	dec    edx
  41f77b:	test   DWORD PTR [edx-0x4c],ebx
  41f77e:	pop    ebx
  41f77f:	cld    
  41f780:	push   ebp
  41f781:	mov    eax,0x46de11e9
  41f786:	rcl    DWORD PTR [eax+esi*4],0x25
  41f78a:	xor    eax,0xbc92e3be
  41f78f:	in     eax,0x21
  41f791:	xchg   BYTE PTR [ecx+ecx*1],bl
  41f794:	and    bh,dl
  41f796:	test   eax,0x9766226e
  41f79b:	in     eax,dx
  41f79c:	xor    DWORD PTR [esi],edx
  41f79e:	inc    ecx
  41f79f:	loope  0x41f803
  41f7a1:	fsub   DWORD PTR [ebx+0x54bb31ff]
  41f7a7:	bound  ebp,QWORD PTR [ebx+0x2f]
  41f7aa:	xchg   esi,eax
  41f7ab:	jno    0x41f829
  41f7ad:	les    esp,FWORD PTR [ebp+0x14c88e97]
  41f7b3:	(bad)  
  41f7b4:	out    0x5c,eax
  41f7b6:	xor    ecx,DWORD PTR [ecx+edx*1+0x10]
  41f7ba:	and    BYTE PTR [esi],al
  41f7bc:	adc    edi,DWORD PTR [ecx+0x6]
  41f7bf:	cs mov ebp,0x92c092f9
  41f7c5:	mov    DWORD PTR [edi-0x26],esp
  41f7c8:	jae    0x41f7a0
  41f7ca:	in     eax,dx
  41f7cb:	pop    ebp
  41f7cc:	sbb    BYTE PTR [esi-0x78fc8246],ch
  41f7d2:	and    ecx,DWORD PTR [ebp+0x2c8898d4]
  41f7d8:	popf   
  41f7d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7da:	test   BYTE PTR [ebx+0x57],0xff
  41f7de:	fild   DWORD PTR [esi-0x13]
  41f7e1:	loope  0x41f7ba
  41f7e3:	mov    BYTE PTR [esp+ecx*1-0x1e],bh
  41f7e7:	cmp    eax,0x1f330646
  41f7ec:	shl    DWORD PTR [ebp-0x28039c7d],cl
  41f7f2:	pop    edx
  41f7f3:	xchg   ebx,eax
  41f7f4:	add    BYTE PTR [eax-0x55],bh
  41f7f7:	or     edx,DWORD PTR [ebp+0x55]
  41f7fa:	popf   
  41f7fb:	pusha  
  41f7fc:	and    ebp,ecx
  41f7fe:	nop
  41f7ff:	add    eax,0x5d59f26f
  41f804:	aam    0x92
  41f806:	xor    bl,0xd9
  41f809:	jmp    0x8c5b:0x8b0cc7b7
  41f810:	adc    bh,ah
  41f812:	jl     0x41f830
  41f814:	mov    cl,0xe7
  41f816:	sbb    DWORD PTR ds:0xed9dccb8,esp
  41f81c:	mov    cl,0x38
  41f81e:	push   esi
  41f81f:	add    BYTE PTR [ebx-0x73796f31],0x7d
  41f826:	hlt    
  41f827:	jnp    0x41f7d9
  41f829:	aad    0xc9
  41f82b:	scas   eax,DWORD PTR es:[edi]
  41f82c:	jb     0x41f7e5
  41f82e:	add    BYTE PTR [eax],al
  41f830:	add    BYTE PTR [eax],al
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	out    0xe3,al
  41f840:	ins    DWORD PTR es:[edi],dx
  41f841:	adc    al,0xf9
  41f843:	jb     0x41f846
  41f845:	add    ah,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [esi+0x7b7b34fe],bl
  41f84f:	mov    ebx,0xd4091423
  41f854:	scas   al,BYTE PTR es:[edi]
  41f855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f856:	int    0x7a
  41f858:	in     al,dx
  41f859:	pop    ebp
  41f85a:	shl    DWORD PTR [edi],1
  41f85c:	jmp    0x6bf1:0xb96cabf
  41f863:	xchg   ebx,eax
  41f864:	add    ebp,DWORD PTR [ebx-0x53]
  41f867:	test   eax,0xe42f53a1
  41f86c:	inc    ebx
  41f86d:	jnp    0x41f8cb
  41f86f:	dec    ecx
  41f870:	arpl   sp,dx
  41f872:	cs (bad) 
  41f875:	mov    ds:0x4c73138d,eax
  41f87a:	xchg   ebx,eax
  41f87b:	pop    esi
  41f87c:	push   0x6df2b865
  41f881:	cld    
  41f882:	pop    edx
  41f883:	jmp    0x8c16:0x836ae997
  41f88a:	xchg   esp,eax
  41f88b:	nop
  41f88c:	dec    esp
  41f88d:	outs   dx,DWORD PTR ds:[esi]
  41f88e:	(bad)  
  41f88f:	repz mov eax,ds:0x12df5357
  41f895:	xlat   BYTE PTR ds:[ebx]
  41f896:	dec    eax
  41f897:	fisttp DWORD PTR [esi+ecx*8-0xbbeba05]
  41f89e:	xor    dh,dl
  41f8a0:	or     DWORD PTR [edi-0x46],ecx
  41f8a3:	and    DWORD PTR cs:[esi+0x433639bd],edi
  41f8aa:	inc    edi
  41f8ab:	mov    ecx,0xe904c7c5
  41f8b0:	push   es
  41f8b1:	dec    eax
  41f8b2:	or     BYTE PTR [esi],ah
  41f8b4:	xchg   ecx,eax
  41f8b5:	push   ebx
  41f8b6:	sub    esp,ebp
  41f8b8:	push   cs
  41f8b9:	xor    al,0xd9
  41f8bb:	clc    
  41f8bc:	add    esp,DWORD PTR [esi]
  41f8be:	jne    0x41f8bf
  41f8c0:	jnp    0x41f859
  41f8c2:	dec    esi
  41f8c3:	fcomip st,st(5)
  41f8c5:	or     esp,DWORD PTR [ebx]
  41f8c7:	das    
  41f8c8:	ret    
  41f8c9:	ins    BYTE PTR es:[edi],dx
  41f8ca:	sub    eax,0xc3df3caf
  41f8cf:	xchg   ebp,eax
  41f8d0:	outs   dx,DWORD PTR ds:[esi]
  41f8d1:	clc    
  41f8d2:	and    BYTE PTR [eax+0xc84bb4f],0x29
  41f8d9:	gs jl  0x41f8c7
  41f8dc:	sub    al,0xc9
  41f8de:	or     bl,al
  41f8e0:	lods   al,BYTE PTR ds:[esi]
  41f8e1:	fistp  DWORD PTR [edi]
  41f8e3:	push   0x3adf3ffa
  41f8e8:	push   ebx
  41f8e9:	xchg   esp,eax
  41f8ea:	xchg   edi,eax
  41f8eb:	dec    esi
  41f8ec:	popf   
  41f8ed:	hlt    
  41f8ee:	inc    edi
  41f8ef:	lahf   
  41f8f0:	jno    0x41f8ac
  41f8f2:	aaa    
  41f8f3:	xor    edi,DWORD PTR [ebp+0x2c15f2ea]
  41f8f9:	xchg   ecx,eax
  41f8fa:	mov    ecx,0x5b185865
  41f8ff:	and    DWORD PTR [edi-0x26],edi
  41f902:	xor    bl,dl
  41f904:	scas   al,BYTE PTR es:[edi]
  41f905:	or     dl,BYTE PTR [ecx]
  41f907:	js     0x41f8a9
  41f909:	iret   
  41f90a:	(bad)  
  41f90b:	iret   
  41f90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f90d:	xchg   edi,eax
  41f90e:	inc    ebx
  41f90f:	ins    BYTE PTR es:[edi],dx
  41f910:	(bad)  
  41f911:	mov    edx,0x8b019832
  41f916:	sbb    DWORD PTR [eax+eax*8-0x101fa4dc],eax
  41f91d:	mov    ch,0xef
  41f91f:	out    0x16,al
  41f921:	or     dl,BYTE PTR [ebx-0x4c]
  41f924:	std    
  41f925:	ja     0x41f939
  41f927:	leave  
  41f928:	lea    esi,ds:0xb2d565bf
  41f92e:	ret    0x5a66
  41f931:	pusha  
  41f932:	cld    
  41f933:	or     BYTE PTR [eax+0x3c],dl
  41f936:	call   0x33778fbe
  41f93b:	call   FWORD PTR [ebp-0x13c8e969]
  41f941:	cmp    al,cl
  41f943:	call   0xd2b47cee
  41f948:	or     BYTE PTR [edi-0x19],dl
  41f94b:	cld    
  41f94c:	loop   0x41f9ae
  41f94e:	adc    BYTE PTR [eax],ch
  41f950:	fld    DWORD PTR [edx-0x33]
  41f953:	imul   ecx,DWORD PTR [ebx],0xffffffbc
  41f956:	xchg   edx,eax
  41f957:	add    BYTE PTR [edi+esi*4+0x5],bh
  41f95b:	test   al,0x88
  41f95d:	adc    al,0xd6
  41f95f:	fcomp  QWORD PTR [eax]
  41f961:	cld    
  41f962:	cmc    
  41f963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f964:	ja     0x41f988
  41f966:	mov    esp,0x1f91623a
  41f96b:	mov    ebx,0x596551c9
  41f970:	push   ebp
  41f971:	mov    cl,0x56
  41f973:	ret    0xd6fa
  41f976:	jne    0x41f9c2
  41f978:	inc    eax
  41f979:	test   DWORD PTR [edx+0x256e240f],ebp
  41f97f:	mov    ch,0xd4
  41f981:	fcmovnb st,st(4)
  41f983:	dec    esi
  41f984:	push   ebx
  41f985:	outs   dx,BYTE PTR ds:[esi]
  41f986:	inc    esi
  41f987:	jno    0x41f90e
  41f989:	repnz gs mov esp,0x15812f59
  41f990:	mov    ecx,gs
  41f992:	mov    edx,0x8bdc12c7
  41f997:	scas   eax,DWORD PTR es:[edi]
  41f998:	cmp    BYTE PTR [ecx+0x13],dl
  41f99b:	ret    0xc8b8
  41f99e:	sub    edi,DWORD PTR [edi]
  41f9a0:	mov    bh,BYTE PTR [ebx]
  41f9a2:	xchg   esp,eax
  41f9a3:	rol    DWORD PTR [esp+ebp*4],0x26
  41f9a7:	push   eax
  41f9a8:	hlt    
  41f9a9:	call   0xf2f444a9
  41f9ae:	and    ebx,edi
  41f9b0:	inc    ebx
  41f9b1:	adc    BYTE PTR [ebp+0x61],ah
  41f9b4:	cmp    ecx,ebx
  41f9b6:	sbb    eax,0x6a63fc84
  41f9bb:	sbb    bh,BYTE PTR fs:[eax+0x4376159a]
  41f9c2:	shl    DWORD PTR [edi+eax*8],cl
  41f9c5:	daa    
  41f9c6:	in     eax,dx
  41f9c7:	je     0x41f9a9
  41f9c9:	(bad)  
  41f9ca:	aad    0x62
  41f9cc:	lahf   
  41f9cd:	add    al,0xb5
  41f9cf:	daa    
  41f9d0:	xor    DWORD PTR [eax+ecx*4],ebp
  41f9d3:	xor    eax,0x5d717796
  41f9d8:	mov    cl,0xd0
  41f9da:	adc    BYTE PTR [eax],bh
  41f9dc:	push   ebp
  41f9dd:	mov    edi,0x327c084b
  41f9e2:	lods   al,BYTE PTR ds:[esi]
  41f9e3:	adc    dl,al
  41f9e5:	sti    
  41f9e6:	int3   
  41f9e7:	ret    
  41f9e8:	mov    cl,0x18
  41f9ea:	jle    0x41f9dc
  41f9ec:	fld    DWORD PTR [ebp-0x401fdf5f]
  41f9f2:	aaa    
  41f9f3:	jne    0x41fa56
  41f9f5:	sub    ecx,DWORD PTR [esi]
  41f9f7:	pop    esp
  41f9f8:	adc    DWORD PTR [ebx+edx*8-0x29],esi
  41f9fc:	pop    ebx
  41f9fd:	mov    BYTE PTR [edx+0x24],ah
  41fa00:	cdq    
  41fa01:	dec    ebx
  41fa02:	mov    al,BYTE PTR [ebx]
  41fa04:	inc    edx
  41fa05:	mov    bl,0xa1
  41fa07:	adc    eax,0x3d44f164
  41fa0c:	rol    BYTE PTR [eax+0x6debb0c7],0x26
  41fa13:	mov    ds:0x9fc64d1f,eax
  41fa18:	cmp    esp,DWORD PTR [ebx-0x56fc1368]
  41fa1e:	lahf   
  41fa1f:	fisttp QWORD PTR [ebx+0x29c5da47]
  41fa25:	push   es
  41fa26:	inc    eax
  41fa27:	(bad)  [edx]
  41fa29:	push   es
  41fa2a:	outs   dx,DWORD PTR ds:[esi]
  41fa2b:	mov    WORD PTR [esi+0x6729b0f7],es
  41fa31:	xchg   edx,eax
  41fa32:	ja     0x41fa63
  41fa34:	(bad)  
  41fa36:	call   0x81dc0e48
  41fa3b:	jmp    0xd7a2:0x744b1671
  41fa42:	ficomp WORD PTR [edx]
  41fa44:	ror    BYTE PTR [edi-0x61702ae1],1
  41fa4a:	fmul   DWORD PTR [ebx-0x1]
  41fa4d:	and    DWORD PTR [esi+ecx*8+0x6be3daa2],esi
  41fa54:	xchg   edi,eax
  41fa55:	sbb    eax,0x6d49b6b2
  41fa5a:	push   0xc881654d
  41fa5f:	sar    BYTE PTR [edx],0x53
  41fa62:	fwait
  41fa63:	adc    al,BYTE PTR [ebp+0x3e]
  41fa66:	dec    esi
  41fa67:	pop    es
  41fa68:	xlat   BYTE PTR ds:[ebx]
  41fa69:	test   al,0xd2
  41fa6b:	cmc    
  41fa6c:	push   ebp
  41fa6d:	aad    0xad
  41fa6f:	dec    ebx
  41fa70:	or     cl,BYTE PTR [eax]
  41fa72:	jnp    0x41fa6a
  41fa74:	jl     0x41fa5c
  41fa76:	sahf   
  41fa77:	sbb    eax,DWORD PTR [eax+edi*2-0x2645bc08]
  41fa7e:	push   edx
  41fa7f:	cmp    eax,0x20deec9c
  41fa84:	into   
  41fa85:	test   al,0x75
  41fa87:	out    0xd,al
  41fa89:	sub    eax,0x4be50893
  41fa8e:	pop    edi
  41fa90:	mov    cl,BYTE PTR [edi-0x55]
  41fa93:	xor    BYTE PTR [edi+0x1bd03027],bl
  41fa99:	mov    eax,edi
  41fa9b:	scas   eax,DWORD PTR es:[edi]
  41fa9c:	and    al,0x8a
  41fa9e:	aam    0x5c
  41faa0:	and    eax,0xb17593b2
  41faa5:	and    eax,0x708c33c
  41faaa:	or     DWORD PTR [ebp-0x5283c5a2],0xffffffa2
  41fab1:	xchg   BYTE PTR [eax],ch
  41fab3:	bound  eax,QWORD PTR [edx+eax*1-0x21db939d]
  41faba:	or     ah,ah
  41fabc:	pop    edx
  41fabd:	mov    ah,BYTE PTR ds:0x41c43dd6
  41fac3:	adc    eax,0xbd2cd0fa
  41fac8:	jp     0x41faa8
  41faca:	fwait
  41facb:	mov    al,ds:0xfdb75ce2
  41fad0:	(bad)  
  41fad1:	mov    bl,BYTE PTR [ebx]
  41fad3:	repnz dec esp
  41fad5:	(bad)  
  41fad6:	icebp  
  41fad7:	popf   
  41fad8:	add    esi,DWORD PTR [ebx]
  41fada:	ja     0x41fb15
  41fadc:	repnz shl DWORD PTR ss:[edx-0x5afd4ad8],0x2d
  41fae5:	data16 xchg BYTE PTR [edx+eiz*2+0x2e],dh
  41faea:	shl    DWORD PTR [ebx+0x35],cl
  41faed:	sub    BYTE PTR [ebx],0xda
  41faf0:	(bad)  
  41faf1:	enter  0x8465,0x71
  41faf5:	es scas al,BYTE PTR es:[edi]
  41faf7:	mov    bh,0xda
  41faf9:	push   0x3
  41fafb:	cs or  eax,0x65f91d15
  41fb01:	pop    ss
  41fb02:	mov    ebx,0x454d21da
  41fb07:	shl    BYTE PTR [ebx-0x4a],0x61
  41fb0b:	(bad)  [esi-0x40e310fb]
  41fb11:	aad    0x43
  41fb13:	dec    ecx
  41fb14:	enter  0xb1ff,0x61
  41fb18:	repz adc al,0xa7
  41fb1b:	sub    DWORD PTR [ebp-0x565c8ab8],esp
  41fb21:	mov    ah,0xb5
  41fb23:	imul   eax,edx,0x9
  41fb26:	sub    DWORD PTR [edx+eax*1+0x7],esi
  41fb2a:	dec    ecx
  41fb2b:	push   0x224badb0
  41fb30:	or     eax,0xb88e8f8
  41fb35:	int    0xad
  41fb37:	cmp    BYTE PTR [esi+0x64a6ddb5],ch
  41fb3d:	push   ecx
  41fb3e:	scas   eax,DWORD PTR es:[di]
  41fb40:	cmp    DWORD PTR [ecx+0x30717bb7],ecx
  41fb46:	jae    0x41fb8c
  41fb48:	gs leave 
  41fb4a:	xchg   ebp,edx
  41fb4c:	pop    ds
  41fb4d:	ficomp WORD PTR [eax-0x2a6d4524]
  41fb53:	mov    dh,0xea
  41fb55:	ret    
  41fb56:	imul   edi,DWORD PTR [eax+0x5e],0x7d6ee01f
  41fb5d:	pop    eax
  41fb5e:	jp     0x41fbc2
  41fb60:	and    ah,BYTE PTR [ebp-0x6]
  41fb63:	push   ecx
  41fb64:	pop    edx
  41fb65:	or     al,0x92
  41fb67:	jo     0x41fbe8
  41fb69:	nop
  41fb6a:	adc    cl,0x7
  41fb6d:	bound  ecx,QWORD PTR [esi+eiz*4]
  41fb70:	sub    al,0x6b
  41fb72:	and    edi,ebx
  41fb74:	xor    bh,BYTE PTR [esi]
  41fb76:	and    BYTE PTR [esi-0x6f4b6219],dh
  41fb7c:	adc    BYTE PTR [ecx-0x4e],al
  41fb7f:	shl    al,1
  41fb81:	sbb    DWORD PTR [esi*4-0x6723c197],0x63
  41fb89:	and    esp,edi
  41fb8b:	lds    edi,FWORD PTR [ecx+0x1ae2c35f]
  41fb91:	into   
  41fb92:	fs or  cl,ch
  41fb95:	sbb    eax,0x30765429
  41fb9a:	mov    ecx,0xf5b227c3
  41fb9f:	ficomp DWORD PTR [ebx+0x2d]
  41fba2:	push   0x7de6e823
  41fba7:	ret    0x675b
  41fbaa:	dec    eax
  41fbab:	mov    eax,0x3522df99
  41fbb0:	sbb    edx,DWORD PTR [edi+0x63]
  41fbb3:	nop
  41fbb4:	adc    al,0x95
  41fbb6:	inc    esi
  41fbb7:	test   eax,0x461d3186
  41fbbc:	dec    ebp
  41fbbd:	das    
  41fbbe:	jno    0x41fb56
  41fbc0:	test   al,0xb
  41fbc2:	cmp    cl,al
  41fbc4:	sti    
  41fbc5:	sub    bh,al
  41fbc7:	ss dec edx
  41fbc9:	sbb    eax,0x83ee768
  41fbce:	inc    ebp
  41fbcf:	bound  ecx,QWORD PTR [ecx]
  41fbd1:	out    dx,al
  41fbd2:	xlat   BYTE PTR ds:[ebx]
  41fbd3:	dec    ebp
  41fbd4:	adc    edx,DWORD PTR [eax+0x3f]
  41fbd7:	nop
  41fbd8:	or     DWORD PTR [ecx+0x21ea4650],ecx
  41fbde:	jle    0x41fbff
  41fbe0:	xor    al,0xcf
  41fbe2:	jnp    0x41fbd8
  41fbe4:	and    bh,bl
  41fbe6:	pop    esi
  41fbe7:	lahf   
  41fbe8:	pop    ebx
  41fbe9:	mov    ds,WORD PTR [esi]
  41fbeb:	and    DWORD PTR [edi-0x32],ebx
  41fbee:	mov    esi,0x6721ab00
  41fbf3:	adc    eax,0xb1fe66f7
  41fbf8:	xchg   DWORD PTR [esi],esp
  41fbfa:	push   ebp
  41fbfb:	ret    
  41fbfc:	mov    ecx,0x96ea856e
  41fc01:	aad    0x6b
  41fc03:	int3   
  41fc04:	dec    edi
  41fc05:	icebp  
  41fc06:	mov    esp,0xfc0913cf
  41fc0b:	gs inc esi
  41fc0d:	retf   
  41fc0e:	inc    esi
  41fc0f:	fwait
  41fc10:	out    0xa,eax
  41fc12:	into   
  41fc13:	lahf   
  41fc14:	xor    al,dl
  41fc16:	lods   eax,DWORD PTR ds:[esi]
  41fc17:	ror    BYTE PTR [eax+edi*4-0x40cfbb38],1
  41fc1e:	and    ah,BYTE PTR [edx+0x1822a23d]
  41fc24:	mov    bh,0xe0
  41fc26:	xchg   ebp,eax
  41fc27:	enter  0x20c8,0xb7
  41fc2b:	xchg   ebx,eax
  41fc2c:	(bad)  
  41fc2e:	call   0x35150d4f
  41fc33:	adc    DWORD PTR [edx],0x2e
  41fc36:	fbld   TBYTE PTR [esi+0x28c948d9]
  41fc3c:	xor    ecx,eax
  41fc3e:	xchg   esp,eax
  41fc3f:	pop    edx
  41fc40:	jno    0x41fc87
  41fc42:	fistp  DWORD PTR [edx-0x4f]
  41fc45:	push   esp
  41fc46:	cmp    ecx,ebx
  41fc48:	cld    
  41fc49:	cmc    
  41fc4a:	ds test al,0x18
  41fc4d:	ror    DWORD PTR [edx-0x66],cl
  41fc50:	sbb    BYTE PTR [esi],dl
  41fc52:	mov    DWORD PTR [ecx+0x69],ebx
  41fc55:	stos   DWORD PTR es:[edi],eax
  41fc56:	or     DWORD PTR [ebp+0x10e72d0b],0x64
  41fc5d:	nop
  41fc5e:	mov    esp,0xc70e8fe2
  41fc63:	push   esi
  41fc64:	mov    DWORD PTR [esi-0x32723806],esi
  41fc6a:	in     al,0x60
  41fc6c:	fadd   st(6),st
  41fc6e:	dec    esp
  41fc6f:	lock or eax,0xdb5e3040
  41fc75:	or     edi,DWORD PTR [esi+0x3371bd65]
  41fc7b:	fs jnp 0x41fcf8
  41fc7e:	rcr    BYTE PTR [edx],1
  41fc80:	ins    DWORD PTR es:[edi],dx
  41fc81:	fdivp  st(2),st
  41fc83:	push   0x8924a665
  41fc88:	pop    ds
  41fc89:	mov    eax,ds:0xe4e29bad
  41fc8e:	out    dx,al
  41fc8f:	rcr    DWORD PTR [esi],1
  41fc91:	bound  esp,QWORD PTR [edi]
  41fc93:	outs   dx,BYTE PTR ds:[esi]
  41fc94:	cmc    
  41fc95:	pusha  
  41fc96:	cmp    ebx,DWORD PTR [esi]
  41fc98:	push   ebx
  41fc99:	pop    esp
  41fc9a:	dec    esi
  41fc9b:	sbb    edx,DWORD PTR [ebx-0x353c36c2]
  41fca1:	mov    esp,0x674b8682
  41fca6:	loope  0x41fce8
  41fca8:	fstp   DWORD PTR [eax]
  41fcaa:	xchg   edx,eax
  41fcab:	cmovp  ebx,ebx
  41fcae:	mov    edx,0x4c493321
  41fcb3:	or     esp,DWORD PTR [edi-0x1f]
  41fcb6:	bswap  esp
  41fcb8:	ds dec eax
  41fcba:	(bad)  
  41fcbb:	mov    ebx,0x38b1aae0
  41fcc0:	hlt    
  41fcc1:	xchg   BYTE PTR ds:0x1a7a8859,cl
  41fcc7:	sbb    eax,ecx
  41fcc9:	jne    0x41fc72
  41fccb:	test   al,0xd
  41fccd:	jge    0x41fc6e
  41fccf:	pop    ds
  41fcd0:	mov    ds:0xdb24daaf,al
  41fcd5:	jmp    0x41fc92
  41fcd7:	(bad)  
  41fcd8:	adc    ah,ah
  41fcda:	xor    BYTE PTR [edx],dl
  41fcdc:	je     0x41fcd6
  41fcde:	shl    ecx,1
  41fce0:	imul   esp,DWORD PTR [ebp+edi*1-0x357fd98e],0x18ad2f1c
  41fceb:	or     esp,DWORD PTR cs:[edi]
  41fcee:	mov    esp,0x2d4c6d14
  41fcf3:	stos   BYTE PTR es:[edi],al
  41fcf4:	ja     0x41fcb7
  41fcf6:	push   edx
  41fcf7:	mov    al,0x56
  41fcf9:	cmp    DWORD PTR [esi+0x2b37e786],edi
  41fcff:	cwde   
  41fd00:	add    eax,0x54c7c0c0
  41fd05:	stc    
  41fd06:	lea    edi,[eax]
  41fd08:	xor    dl,BYTE PTR [ebx]
  41fd0a:	jle    0x41fd1e
  41fd0c:	or     DWORD PTR [edx],edx
  41fd0e:	pop    es
  41fd0f:	cli    
  41fd10:	cmp    eax,0x615366ba
  41fd15:	mov    ah,0x13
  41fd17:	inc    esi
  41fd18:	xor    DWORD PTR gs:[ebx+0x3b04c4e0],ebx
  41fd1f:	pop    ds
  41fd20:	out    dx,al
  41fd21:	loope  0x41fd1c
  41fd23:	mov    BYTE PTR [edi-0x424a8261],dh
  41fd29:	and    al,0x97
  41fd2b:	in     eax,0x35
  41fd2d:	out    0x9a,al
  41fd2f:	and    BYTE PTR [esi-0x3e79edee],ah
  41fd35:	fld    QWORD PTR [ebp+0x10]
  41fd38:	and    al,0x55
  41fd3a:	add    DWORD PTR [edi+0x54bf],ebx
  41fd40:	add    BYTE PTR [eax],al
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x710dcedc],dh
  41fd51:	out    dx,al
  41fd52:	in     eax,dx
  41fd53:	ja     0x41fd56
  41fd55:	add    ah,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [esi+0x650372c],ah
  41fd5f:	adc    DWORD PTR gs:[ecx-0x73c3d687],edi
  41fd66:	sbb    BYTE PTR [edx+0x43fce69a],ah
  41fd6c:	cmp    ebp,eax
  41fd6e:	xchg   esi,eax
  41fd6f:	leave  
  41fd70:	add    ebx,ebx
  41fd72:	push   cs
  41fd73:	jp     0x41fd9d
  41fd75:	sub    esp,0xa0cddaae
  41fd7b:	lods   eax,DWORD PTR ds:[esi]
  41fd7c:	jo     0x41fd9c
  41fd7e:	aam    0x1b
  41fd80:	in     al,dx
  41fd81:	(bad)  
  41fd82:	cld    
  41fd83:	bnd jl 0x41fdca
  41fd86:	sti    
  41fd87:	add    DWORD PTR [ebp-0x1d],0x2e1ed6c5
  41fd8e:	adc    BYTE PTR [ebx+0x50],dh
  41fd91:	mov    esi,0xb4df3b7b
  41fd96:	sub    BYTE PTR [ebx],bh
  41fd98:	xchg   BYTE PTR [esi],al
  41fd9a:	mov    ds:0x6f361cb3,eax
  41fd9f:	icebp  
  41fda0:	gs pop esi
  41fda2:	inc    esi
  41fda3:	(bad)  
  41fda4:	js     0x41fd7f
  41fda6:	addr16 push 0x11
  41fda9:	adc    bh,BYTE PTR [esi]
  41fdab:	mov    cl,BYTE PTR [edx]
  41fdad:	xchg   ecx,eax
  41fdae:	aas    
  41fdaf:	adc    edi,DWORD PTR [eax]
  41fdb1:	loopne 0x41fd8a
  41fdb3:	jmp    0xdc85:0x83629403
  41fdba:	add    ebp,0x3e
  41fdbd:	(bad)  
  41fdbe:	fistp  DWORD PTR [edx+0x610d93f5]
  41fdc4:	(bad)  [esi]
  41fdc6:	mov    bl,0x21
  41fdc8:	mov    al,ds:0xd280f6fb
  41fdcd:	std    
  41fdce:	adc    ch,BYTE PTR [ecx]
  41fdd0:	pop    es
  41fdd1:	push   edx
  41fdd2:	test   BYTE PTR [ebp-0x455e7bce],0x42
  41fdd9:	retf   0xecb5
  41fddc:	loope  0x41fe00
  41fdde:	jle    0x41fe17
  41fde0:	dec    edi
  41fde1:	sahf   
  41fde2:	test   DWORD PTR [edi-0x5],ecx
  41fde5:	scas   al,BYTE PTR es:[edi]
  41fde6:	ficomp DWORD PTR ds:0xfdb20e24
  41fdec:	mov    eax,DWORD PTR ds:0x2b63d56f
  41fdf2:	and    al,0x5b
  41fdf4:	test   eax,0x258808aa
  41fdf9:	in     eax,0xa8
  41fdfb:	mov    bl,0xf8
  41fdfd:	mov    ch,0x86
  41fdff:	scas   al,BYTE PTR es:[edi]
  41fe00:	(bad)  
  41fe01:	fidiv  WORD PTR [ebp-0x21]
  41fe04:	mov    bl,0x76
  41fe06:	xchg   DWORD PTR [esi+0x131c9a42],esp
  41fe0c:	hlt    
  41fe0d:	test   DWORD PTR [ebx+0x5c],eax
  41fe10:	js     0x41fe2b
  41fe12:	call   FWORD PTR [ebx-0x42]
  41fe15:	jb     0x41fe92
  41fe17:	sub    eax,0x107a09f6
  41fe1c:	inc    esp
  41fe1d:	sbb    al,0x31
  41fe1f:	fstp   QWORD PTR [esi+ecx*8-0x6bee51c5]
  41fe26:	sar    ah,cl
  41fe28:	pop    esi
  41fe29:	jns    0x41fe58
  41fe2b:	scas   al,BYTE PTR es:[edi]
  41fe2c:	lods   eax,DWORD PTR ds:[esi]
  41fe2d:	and    eax,DWORD PTR [ebx-0x45]
  41fe30:	push   ebx
  41fe31:	ds cmp al,0xf6
  41fe34:	sub    al,0x3e
  41fe36:	sbb    al,0xd1
  41fe38:	adc    cl,BYTE PTR [eax]
  41fe3a:	add    eax,0x4d28728e
  41fe3f:	dec    esi
  41fe40:	push   ebp
  41fe41:	in     eax,0x9c
  41fe43:	popa   
  41fe44:	mov    bh,BYTE PTR [edi+edi*4]
  41fe47:	mov    ch,BYTE PTR [ecx-0x2]
  41fe4a:	mov    BYTE PTR [edx+0x5ee488f4],ch
  41fe50:	or     al,0xaa
  41fe52:	xchg   esi,eax
  41fe53:	sti    
  41fe54:	mov    al,ds:0x38f5c415
  41fe59:	sub    al,0xd1
  41fe5b:	aam    0xc6
  41fe5d:	xchg   esi,eax
  41fe5e:	add    DWORD PTR [edx-0x676b22b6],ebp
  41fe64:	cld    
  41fe65:	stos   DWORD PTR es:[edi],eax
  41fe66:	mov    bl,0x60
  41fe68:	xchg   BYTE PTR [ebp-0x3e],dh
  41fe6b:	pop    ss
  41fe6c:	data16 fwait
  41fe6e:	mov    ds:0x4b586edc,al
  41fe73:	push   0xffffff90
  41fe75:	ja     0x41fe9f
  41fe77:	jge    0x41fe71
  41fe79:	pop    ecx
  41fe7a:	stc    
  41fe7b:	xchg   eax,edx
  41fe7d:	call   0x59bfb562
  41fe82:	sbb    ebp,DWORD PTR [ebx]
  41fe84:	ins    BYTE PTR es:[edi],dx
  41fe85:	loopne 0x41fec6
  41fe87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe88:	out    dx,eax
  41fe89:	ja     0x41fe2c
  41fe8b:	dec    esi
  41fe8c:	lds    ebx,FWORD PTR [esp+ebp*1]
  41fe8f:	mov    esi,0xf13a547
  41fe94:	and    al,0xe2
  41fe96:	retf   
  41fe97:	sti    
  41fe98:	push   ds
  41fe99:	in     eax,dx
  41fe9a:	call   0x55ca:0xfedbc97c
  41fea1:	call   0xc088:0xf6f1cb8c
  41fea8:	push   edx
  41fea9:	(bad)  
  41feaa:	push   ds
  41feab:	jmp    0x41ff19
  41fead:	xchg   edi,eax
  41feae:	hlt    
  41feaf:	mov    ah,0x25
  41feb1:	jnp    0x41fea8
  41feb3:	jl     0x41ff33
  41feb5:	leave  
  41feb6:	xor    eax,0x128f7611
  41febb:	push   ecx
  41febc:	les    esp,FWORD PTR [ebp-0x7891789d]
  41fec2:	push   0x3
  41fec4:	cmp    bh,BYTE PTR [ebp-0x3a]
  41fec7:	or     al,0x92
  41fec9:	xor    bh,BYTE PTR [eax+esi*2-0x44166e6d]
  41fed0:	popf   
  41fed1:	pop    ss
  41fed2:	adc    ah,0xda
  41fed5:	sahf   
  41fed6:	adc    al,0x8c
  41fed8:	jae    0x41feea
  41feda:	jecxz  0x41fe96
  41fedc:	popa   
  41fedd:	out    0xa8,al
  41fedf:	ret    0xab9d
  41fee2:	pop    esi
  41fee3:	jnp    0x41fe84
  41fee5:	retf   0xbec6
  41fee8:	jno    0x41ff67
  41feea:	addr16 pop es
  41feec:	std    
  41feed:	out    0x66,eax
  41feef:	jmp    0x589481da
  41fef4:	leave  
  41fef5:	ds pop ebx
  41fef7:	sbb    DWORD PTR [ecx],0x931741ca
  41fefd:	sti    
  41fefe:	dec    ebp
  41feff:	inc    edi
  41ff00:	cmp    ebx,esp
  41ff02:	adc    eax,0x43063cc6
  41ff07:	sti    
  41ff08:	std    
  41ff09:	add    dh,al
  41ff0b:	jno    0x41ff82
  41ff0d:	push   edi
  41ff0e:	daa    
  41ff0f:	ret    0xde58
  41ff12:	or     bl,ah
  41ff14:	rcl    BYTE PTR [eax+0x6a],cl
  41ff17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff18:	dec    ecx
  41ff19:	les    eax,FWORD PTR [edi+0x63]
  41ff1c:	push   0xffffffb6
  41ff1e:	mov    cl,0x95
  41ff20:	push   esp
  41ff21:	sbb    edi,DWORD PTR [eax+0x4a96ba02]
  41ff27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff28:	cwde   
  41ff29:	sbb    eax,edx
  41ff2b:	pop    es
  41ff2c:	cdq    
  41ff2d:	mov    ds,WORD PTR [eax-0x3f]
  41ff30:	mov    ah,0xda
  41ff32:	jne    0x41ff76
  41ff34:	gs pop es
  41ff36:	push   edi
  41ff37:	xor    edi,DWORD PTR ss:[esi]
  41ff3a:	lock enter 0x25a4,0x14
  41ff3f:	sub    al,0x41
  41ff41:	fcomp  DWORD PTR [ebx-0x482e8013]
  41ff47:	jle    0x41ff59
  41ff49:	xchg   DWORD PTR [edi+0x68],edi
  41ff4c:	push   ss
  41ff4d:	and    eax,0x990b2cf6
  41ff52:	fild   WORD PTR [ebx]
  41ff54:	add    eax,0xc3643e2e
  41ff59:	jecxz  0x41ff14
  41ff5b:	int    0x66
  41ff5d:	mov    ?,WORD PTR [esi+0x985ef02]
  41ff63:	xor    al,BYTE PTR [edx-0x53]
  41ff66:	or     BYTE PTR [eax],0x88
  41ff69:	(bad)  
  41ff6a:	mov    ds:0x54374919,al
  41ff6f:	mov    ds:0x244cd857,al
  41ff74:	aad    0xcc
  41ff76:	mov    DWORD PTR ds:0xa35c7aa4,ebx
  41ff7c:	and    al,BYTE PTR [edi+0x3f]
  41ff7f:	mov    eax,ds:0x131afdad
  41ff84:	adc    BYTE PTR [ecx-0x4ef59c04],ch
  41ff8a:	in     al,dx
  41ff8b:	dec    ecx
  41ff8c:	jle    0x420007
  41ff8e:	jmp    0x8bdca50a
  41ff93:	iret   
  41ff94:	rol    BYTE PTR [eax],1
  41ff96:	sub    BYTE PTR [esi-0x33],cl
  41ff99:	and    eax,0x8c710c8c
  41ff9e:	fsubr  QWORD PTR [esi+0x6ce5091b]
  41ffa4:	cld    
  41ffa5:	int    0x2d
  41ffa7:	push   edx
  41ffa8:	sub    al,0x61
  41ffaa:	ins    DWORD PTR es:[edi],dx
  41ffab:	or     eax,0x97b7b390
  41ffb0:	fild   DWORD PTR [edi]
  41ffb2:	jg     0x41fffe
  41ffb4:	dec    ebx
  41ffb5:	lea    ebp,[esi+0x25]
  41ffb8:	loope  0x41ff7c
  41ffba:	push   edi
  41ffbb:	mov    gs,WORD PTR [edi+0x79a36c1e]
  41ffc1:	adc    eax,0x8ab1da79
  41ffc6:	sti    
  41ffc7:	jmp    0xc1d9bcbc
  41ffcc:	adc    BYTE PTR [ebx],bh
  41ffce:	popa   
  41ffcf:	int3   
  41ffd0:	sbb    eax,0xa109fcb9
  41ffd5:	ins    BYTE PTR es:[edi],dx
  41ffd6:	pop    es
  41ffd7:	leave  
  41ffd8:	add    al,0x47
  41ffda:	dec    ebx
  41ffdb:	pop    ecx
  41ffdc:	les    eax,FWORD PTR [esi+edi*8]
  41ffdf:	xchg   DWORD PTR [esi],edx
  41ffe1:	gs xchg edi,eax
  41ffe3:	mov    ebp,esi
  41ffe5:	mov    eax,ds:0x91ce8977
  41ffea:	out    0xf3,eax
  41ffec:	add    BYTE PTR [ebx+0x1f],0xa3
  41fff0:	in     eax,0x4c
  41fff2:	push   0xa57f0fe7
  41fff7:	jge    0x42004a
  41fff9:	sub    esi,eax
  41fffb:	out    0x9c,al
  41fffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fffe:	rol    DWORD PTR [ebx+0x70],1
  420001:	in     eax,dx
  420002:	cdq    
  420003:	cld    
  420004:	or     ah,BYTE PTR [ecx+0x2a]
  420007:	jp     0x42006d
  420009:	fisttp QWORD PTR [ecx-0x47]
  42000c:	cmp    DWORD PTR [ebp+0x3c65b3f],esp
  420012:	es push ss
  420014:	dec    esp
  420015:	jecxz  0x42003f
  420017:	jo     0x420085
  420019:	outs   dx,BYTE PTR ds:[esi]
  42001a:	jle    0x420023
  42001c:	fs lahf 
  42001e:	shr    BYTE PTR [ebp-0x80],cl
  420021:	push   esp
  420022:	inc    bl
  420024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420025:	int    0x3a
  420027:	mov    bl,0x1d
  420029:	lods   al,BYTE PTR ds:[esi]
  42002a:	ret    0xa200
  42002d:	xor    al,0xd5
  42002f:	adc    bh,BYTE PTR [edx-0x16fa14c7]
  420035:	loope  0x41ffbc
  420037:	das    
  420038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420039:	ss sahf 
  42003b:	mov    cl,0xb8
  42003d:	(bad)  
  42003e:	into   
  42003f:	dec    ecx
  420040:	or     eax,0xfbb4cea8
  420045:	sub    al,0x3f
  420047:	and    BYTE PTR [edi-0x507777bc],ch
  42004d:	jnp    0x4200b8
  42004f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420050:	xor    esi,eax
  420052:	dec    edi
  420053:	addr16 xchg edx,eax
  420055:	jmp    0xaefb:0xa36cc66b
  42005c:	out    dx,eax
  42005d:	and    al,0xd4
  42005f:	dec    ebx
  420060:	push   esi
  420061:	mov    gs,WORD PTR [edx+0x1]
  420064:	inc    eax
  420065:	outs   dx,BYTE PTR ds:[esi]
  420066:	lea    ebx,[eax-0x18]
  420069:	rcl    ch,0x9a
  42006c:	das    
  42006d:	in     eax,0xea
  42006f:	sbb    eax,0xfafff95f
  420074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420075:	jno    0x420086
  420077:	retf   
  420078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420079:	movq   mm3,QWORD PTR [ebx-0x29]
  42007d:	std    
  42007e:	adc    BYTE PTR [esi+0x531b8208],bh
  420084:	aaa    
  420085:	adc    BYTE PTR [edx],dl
  420087:	pop    es
  420088:	inc    eax
  420089:	aaa    
  42008a:	jmp    FWORD PTR [edx]
  42008c:	ja     0x42004a
  42008e:	push   ss
  42008f:	xor    al,0xbb
  420091:	out    dx,eax
  420092:	data16 sub BYTE PTR [edx],ch
  420095:	mov    WORD PTR [ecx-0x1181d514],?
  42009b:	dec    edi
  42009c:	push   ecx
  42009d:	mov    cl,BYTE PTR [ecx]
  42009f:	sahf   
  4200a0:	jno    0x4200b7
  4200a2:	pop    eax
  4200a3:	add    al,0xaf
  4200a5:	pop    eax
  4200a6:	pop    ebp
  4200a7:	sahf   
  4200a8:	stos   DWORD PTR es:[edi],eax
  4200a9:	inc    ebp
  4200aa:	mov    esi,0x87959c66
  4200af:	push   edx
  4200b0:	ds mov al,0xea
  4200b3:	jmp    0xa295:0xbd316c8b
  4200ba:	loopne 0x420049
  4200bc:	imul   edx,DWORD PTR [edi+0x40849d69],0xffffffa0
  4200c3:	ins    DWORD PTR es:[edi],dx
  4200c4:	jmp    0x1a272ecf
  4200c9:	xchg   ebx,eax
  4200ca:	loope  0x4200d2
  4200cc:	sub    eax,0x23ac0a5c
  4200d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d2:	inc    edx
  4200d3:	out    dx,eax
  4200d4:	scas   al,BYTE PTR es:[edi]
  4200d5:	cmc    
  4200d6:	js     0x42014c
  4200d8:	mov    esi,0x551e70c5
  4200dd:	adc    al,0xe8
  4200df:	push   0xffffff93
  4200e1:	jb     0x42006d
  4200e3:	repz xlat BYTE PTR ds:[ebx]
  4200e5:	add    DWORD PTR [edi+0x23e9a54f],esp
  4200eb:	lea    eax,[ebp+0x60]
  4200ee:	push   cs
  4200ef:	ret    0x8485
  4200f2:	add    BYTE PTR [eax+0x24d8668e],bh
  4200f8:	fild   DWORD PTR [esi+esi*4+0x7e0a85bd]
  4200ff:	(bad)  
  420100:	idiv   BYTE PTR [edx+0x7cd70f21]
  420106:	mov    eax,0xf70dc4d8
  42010b:	stos   BYTE PTR es:[edi],al
  42010c:	or     al,ah
  42010e:	(bad)  
  42010f:	mov    ds,WORD PTR [edx+eax*2]
  420112:	pusha  
  420113:	adc    DWORD PTR [ebp-0x76be1bca],esp
  420119:	mov    esi,0x640f5232
  42011e:	je     0x420156
  420120:	sbb    eax,0xc3f8f198
  420125:	or     BYTE PTR [ecx+0x25949d10],ch
  42012b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012c:	push   0xffffffbc
  42012e:	mov    edi,0xa12c938b
  420133:	cmp    al,0xd1
  420135:	dec    edi
  420136:	sub    BYTE PTR [esi+0x0],0xa9
  42013a:	js     0x42011f
  42013c:	(bad)  
  42013e:	jo     0x42015c
  420140:	cld    
  420141:	xor    DWORD PTR ds:0xd07ef7ec,0x4
  420149:	push   esp
  42014a:	xor    DWORD PTR [eax-0x26750195],edx
  420150:	sub    BYTE PTR [esi+eax*2],0x34
  420154:	ds int 0xf8
  420157:	stos   BYTE PTR es:[edi],al
  420158:	repz ror DWORD PTR [ebx-0xa0ee249],1
  42015f:	popf   
  420160:	xchg   BYTE PTR [ebx-0x20347ed7],dh
  420166:	dec    edi
  420167:	lods   al,BYTE PTR ds:[esi]
  420168:	dec    esp
  420169:	and    cl,ch
  42016b:	mov    esp,0xdc8b1756
  420170:	rol    BYTE PTR [esi],1
  420172:	cmp    ch,BYTE PTR [ebx+0x6e861955]
  420178:	dec    edx
  420179:	call   0x877c361f
  42017e:	hlt    
  42017f:	sar    DWORD PTR [ebx-0x1fbcff25],0xa5
  420186:	xor    ebp,DWORD PTR [ecx+0x5bb6c315]
  42018c:	sub    edi,0x4b3107ce
  420192:	pop    esi
  420193:	add    esp,DWORD PTR [eax]
  420195:	inc    ecx
  420196:	(bad)  
  420197:	lds    eax,FWORD PTR [eax]
  420199:	shl    BYTE PTR [ebp-0x37],0x4
  42019d:	cmp    ah,0xf3
  4201a0:	add    BYTE PTR [ebx+0x6e],al
  4201a3:	(bad)  
  4201a4:	mov    eax,ds:0x5b8561bd
  4201a9:	inc    ecx
  4201aa:	shr    ecx,cl
  4201ac:	ficomp DWORD PTR [eax+0x54ebbba7]
  4201b2:	or     eax,0xa3aa263b
  4201b7:	mov    ch,0xb5
  4201b9:	mov    edx,?
  4201bb:	jo     0x42015a
  4201bd:	stos   BYTE PTR es:[edi],al
  4201be:	adc    DWORD PTR [esi+0x7c508bb6],ebp
  4201c4:	outs   dx,DWORD PTR ds:[esi]
  4201c5:	or     bh,BYTE PTR [edi]
  4201c7:	pop    esp
  4201c8:	dec    edx
  4201c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201ca:	pop    ecx
  4201cb:	jmp    0x8b42:0xb54e76dc
  4201d2:	sbb    cl,BYTE PTR [esi]
  4201d4:	aam    0xbf
  4201d6:	retf   
  4201d7:	push   esp
  4201d8:	jp     0x420219
  4201da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201db:	fwait
  4201dc:	push   es
  4201dd:	(bad)  
  4201de:	in     al,dx
  4201df:	fld    DWORD PTR ds:0xc47c4a73
  4201e5:	inc    edx
  4201e6:	push   es
  4201e7:	push   esp
  4201e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201e9:	aad    0x6
  4201eb:	sahf   
  4201ec:	and    eax,0x20e62264
  4201f1:	int3   
  4201f2:	and    al,0xca
  4201f4:	je     0x42021d
  4201f6:	call   0xbf33:0x8c66ce00
  4201fd:	push   0xda9432ed
  420202:	cld    
  420203:	nop
  420204:	jno    0x420249
  420206:	out    dx,eax
  420207:	mov    WORD PTR [eax],ss
  420209:	adc    BYTE PTR [ebp+0x75],bl
  42020c:	inc    edi
  42020d:	(bad)  
  42020f:	loope  0x420280
  420211:	jb     0x4201c6
  420213:	loope  0x4201c5
  420215:	inc    ebp
  420216:	aad    0x54
  420218:	and    ah,BYTE PTR [edi-0x7e80e400]
  42021e:	sub    BYTE PTR [ebp-0x5fdeab8a],dl
  420224:	or     BYTE PTR [eax-0x8],dh
  420227:	ins    DWORD PTR es:[edi],dx
  420228:	sub    eax,0xea545e9b
  42022d:	jnp    0x420204
  42022f:	jmp    0x266fd0ed
  420234:	inc    ecx
  420235:	push   eax
  420236:	pop    esi
  420237:	outs   dx,BYTE PTR ds:[si]
  420239:	mov    DWORD PTR [ecx+0x54a1fb2c],esp
  42023f:	test   BYTE PTR [eax+ebp*1+0x40],0x29
  420244:	and    DWORD PTR [ebp+0x44a3ab95],esi
  42024a:	retf   0xef99
  42024d:	mov    es,WORD PTR [eax]
  42024f:	add    BYTE PTR [eax],al
  420251:	add    BYTE PTR [esi+0x57fe4584],dl
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    ch,bl
  42025f:	mov    edi,0x7ce1566a
  420264:	add    DWORD PTR [eax],eax
  420266:	hlt    
  420267:	add    al,0x0
  420269:	add    BYTE PTR [edx+edi*2],bh
  42026c:	(bad)  
  42026d:	out    dx,al
  42026e:	mov    esp,0x13c82aee
  420273:	ins    BYTE PTR es:[edi],dx
  420274:	scas   al,BYTE PTR es:[edi]
  420275:	stos   DWORD PTR es:[edi],eax
  420276:	jl     0x420232
  420278:	xchg   BYTE PTR ds:0x9320dd66,bl
  42027e:	test   al,0xdd
  420280:	(bad)  
  420281:	das    
  420282:	cdq    
  420283:	mov    bh,0x9f
  420285:	data16 je 0x420301
  420288:	push   ss
  420289:	adc    al,0x52
  42028b:	mov    edi,0xf5e50c31
  420290:	cs std 
  420292:	ds scas al,BYTE PTR es:[edi]
  420294:	xchg   bp,ax
  420296:	dec    esp
  420297:	adc    DWORD PTR [edi+0x550a25e8],edi
  42029d:	gs xchg edx,eax
  42029f:	daa    
  4202a0:	fwait
  4202a1:	arpl   WORD PTR [edx],si
  4202a3:	fwait
  4202a4:	jne    0x4202ea
  4202a6:	in     eax,0xfa
  4202a8:	scas   al,BYTE PTR es:[edi]
  4202a9:	and    edx,ecx
  4202ab:	retf   0xf31c
  4202ae:	inc    ebx
  4202af:	fdiv   DWORD PTR [ebp+0x11]
  4202b2:	mov    dl,BYTE PTR [eax]
  4202b4:	out    dx,al
  4202b5:	out    0x47,al
  4202b7:	mov    ch,0xec
  4202b9:	mov    ds:0x1f03e1fb,al
  4202be:	sub    ch,bl
  4202c0:	add    bl,BYTE PTR [edx+0x44]
  4202c3:	sbb    BYTE PTR [ebx],0xe8
  4202c6:	sbb    al,0x76
  4202c8:	pop    ecx
  4202c9:	or     eax,0x7d53ad63
  4202ce:	adc    eax,0xab1be9cf
  4202d3:	jo     0x420348
  4202d5:	jo     0x42025e
  4202d7:	xchg   BYTE PTR [ecx],ch
  4202d9:	std    
  4202da:	push   ds
  4202db:	push   edi
  4202dc:	rcl    DWORD PTR [edi+0x5ee83d68],1
  4202e2:	mov    bh,0xe7
  4202e4:	imul   ebp,DWORD PTR ds:0xbd75a657,0x231817f7
  4202ee:	shl    dl,0x60
  4202f1:	out    0x40,al
  4202f3:	(bad)  
  4202f4:	and    DWORD PTR [ebp-0x5a0c4f55],ecx
  4202fa:	sub    BYTE PTR [ebx],bh
  4202fc:	mov    ah,0x81
  4202fe:	sub    ebp,edx
  420300:	loop   0x4202ff
  420302:	mov    bl,0xe2
  420304:	mov    bl,0x60
  420306:	adc    eax,0xfdce9e99
  42030b:	push   edx
  42030c:	pop    ds
  42030d:	push   esp
  42030e:	adc    BYTE PTR [edi],cl
  420310:	mov    dl,0xbb
  420312:	stc    
  420313:	or     ah,BYTE PTR [ebp-0x25]
  420316:	mov    ah,0xda
  420318:	loope  0x420352
  42031a:	pop    ss
  42031b:	rcr    edi,1
  42031d:	hlt    
  42031e:	inc    esi
  42031f:	mov    ss,WORD PTR [ebp+0x63]
  420322:	mov    edi,0x2db304e
  420327:	enter  0xe0c6,0x1f
  42032b:	push   es
  42032c:	dec    esp
  42032d:	sub    BYTE PTR ds:[edx+esi*4+0x45],bh
  420332:	imul   ecx,ecx,0x52
  420335:	hlt    
  420336:	jbe    0x42033b
  420338:	jmp    0x42035b
  42033a:	std    
  42033b:	pop    esp
  42033c:	jecxz  0x420369
  42033e:	and    BYTE PTR [esp+ebx*4+0x63],0x97
  420343:	pop    ds
  420344:	sti    
  420345:	jecxz  0x42037d
  420347:	(bad)  
  420349:	sub    DWORD PTR [ebx+ebp*1+0xf],edx
  42034d:	mov    dl,0xc
  42034f:	neg    BYTE PTR [eax+0x37]
  420352:	push   eax
  420353:	push   cs
  420354:	pusha  
  420355:	jns    0x4202dd
  420357:	mov    esp,0x6e3c42a9
  42035c:	add    al,0x28
  42035e:	loopne 0x420363
  420360:	stc    
  420361:	test   eax,0xca1e0146
  420366:	pop    ebp
  420367:	scas   eax,DWORD PTR es:[edi]
  420368:	(bad)  
  420369:	jnp    0x4202ec
  42036b:	icebp  
  42036c:	int3   
  42036d:	jge    0x4203c1
  42036f:	mov    al,ds:0x7b5d40f5
  420374:	jge    0x420379
  420376:	jp     0x420317
  420378:	out    dx,eax
  420379:	repnz mov dh,0xad
  42037c:	out    dx,al
  42037d:	pop    edx
  42037e:	int    0xf7
  420380:	ret    0x4d59
  420383:	xchg   esi,edi
  420385:	call   0x29c4:0xe2fe0580
  42038c:	mov    eax,ds:0xa4b8d13
  420391:	fs in  eax,0x3c
  420394:	dec    ecx
  420395:	ret    0x29cc
  420398:	mov    al,0x86
  42039a:	xor    DWORD PTR ds:0xcc952472,ecx
  4203a0:	fldcw  WORD PTR [edx+0x1df25781]
  4203a6:	add    ebx,ecx
  4203a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a9:	aad    0x6f
  4203ab:	jo     0x420349
  4203ad:	mov    bl,0x3d
  4203af:	pop    ecx
  4203b0:	and    dl,cl
  4203b2:	cwde   
  4203b3:	pop    esp
  4203b4:	(bad)
  4203b7:	push   ss
  4203b8:	push   ebp
  4203b9:	mov    esi,0xdb1f17d
  4203be:	call   0x57e117a2
  4203c3:	mov    ah,dh
  4203c5:	test   eax,0xda294a16
  4203ca:	lock inc edi
  4203cc:	pop    eax
  4203cd:	or     eax,0xbcbda98a
  4203d2:	inc    edx
  4203d3:	(bad)  
  4203d4:	xor    dh,bh
  4203d6:	test   BYTE PTR [ebp+0x24],dl
  4203d9:	test   BYTE PTR [esi-0x3235ab5c],al
  4203df:	(bad)  
  4203e0:	jmp    FWORD PTR [ebp+0x65effdea]
  4203e6:	mov    al,ds:0x37a6d5dc
  4203eb:	mov    esp,DWORD PTR [esi]
  4203ed:	mov    eax,0xde8efa9d
  4203f2:	add    al,0x97
  4203f4:	push   0xf
  4203f6:	push   cs
  4203f7:	add    dh,ah
  4203f9:	and    dl,BYTE PTR [esi+eiz*1-0x8807549]
  420400:	adc    eax,0xbc4b55bb
  420405:	int3   
  420406:	inc    ecx
  420407:	hlt    
  420408:	inc    edx
  420409:	xor    al,0x61
  42040b:	push   ss
  42040c:	daa    
  42040d:	popf   
  42040e:	mov    cl,0x7
  420410:	mov    ds:0x8e7b860c,eax
  420415:	ds fstp st(5)
  420418:	inc    ebp
  420419:	loope  0x42046a
  42041b:	pop    ecx
  42041c:	mov    ?,WORD PTR [esi]
  42041e:	jp     0x4203b4
  420420:	test   DWORD PTR [ebx+0x33],0xbd89376d
  420427:	sub    al,0xf8
  420429:	push   esi
  42042a:	mov    ah,0xe3
  42042c:	jne    0x4203b1
  42042e:	cmc    
  42042f:	dec    ebp
  420430:	aad    0xb6
  420432:	push   ebp
  420433:	fistp  WORD PTR [ecx+0x5a]
  420436:	and    BYTE PTR [ecx],0x67
  420439:	add    BYTE PTR [ebx-0x43],bh
  42043c:	mov    cl,0x88
  42043e:	cdq    
  42043f:	stc    
  420440:	retf   0x63e6
  420443:	outs   dx,BYTE PTR ds:[esi]
  420444:	ds popf 
  420446:	dec    ecx
  420447:	aam    0x5d
  420449:	ret    0xfa65
  42044c:	adc    esi,DWORD PTR [ecx-0xa66c0ff]
  420452:	fwait
  420453:	aas    
  420454:	mov    gs,WORD PTR [ecx+ebp*8+0x22966e9e]
  42045b:	push   ebx
  42045c:	fcom   st(1)
  42045e:	int3   
  42045f:	daa    
  420460:	mov    eax,0x33730384
  420465:	aad    0x95
  420467:	clc    
  420468:	inc    ecx
  420469:	push   esp
  42046a:	adc    ecx,edx
  42046c:	ss or  al,0x4a
  42046f:	fmul   QWORD PTR [esi-0xdab2594]
  420475:	leave  
  420476:	mov    ds:0xed441e55,eax
  42047b:	in     al,0x2d
  42047d:	leave  
  42047e:	sbb    BYTE PTR [eax+0x62],dh
  420481:	inc    ebp
  420482:	push   esi
  420483:	popa   
  420484:	jae    0x42048d
  420486:	ffreep st(6)
  420488:	push   0xf5cd7c30
  42048d:	in     eax,0x86
  42048f:	push   esp
  420490:	cdq    
  420491:	push   edi
  420492:	inc    edi
  420493:	iret   
  420494:	xchg   esi,eax
  420495:	add    ch,BYTE PTR [ebx-0x149e63]
  42049b:	inc    ebp
  42049c:	mov    esi,0xbc19a9b7
  4204a1:	ret    
  4204a2:	imul   eax,DWORD PTR [eax-0x4b],0xe0972931
  4204a9:	pop    ebp
  4204aa:	in     al,dx
  4204ab:	jnp    0x4204a2
  4204ad:	shr    BYTE PTR [eax-0x4a766876],0x0
  4204b4:	jg     0x420486
  4204b6:	mov    dl,0x39
  4204b8:	loopne 0x420488
  4204ba:	push   esi
  4204bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204bc:	mov    dl,0x90
  4204be:	enter  0xb600,0x46
  4204c2:	jno    0x4204a3
  4204c4:	call   FWORD PTR [edi+0x3e518086]
  4204ca:	push   edi
  4204cb:	jno    0x420527
  4204cd:	mov    dh,0x8
  4204cf:	xor    al,0x53
  4204d1:	loope  0x420482
  4204d3:	popa   
  4204d4:	icebp  
  4204d5:	mov    ds:0x1fa900b8,al
  4204da:	(bad)  
  4204db:	ret    0x56ee
  4204de:	js     0x4204a4
  4204e0:	cwde   
  4204e1:	out    0xb4,eax
  4204e3:	cld    
  4204e4:	lods   al,BYTE PTR ds:[esi]
  4204e5:	and    DWORD PTR [edx+ebp*8],edi
  4204e8:	jnp    0x420535
  4204ea:	pop    es
  4204eb:	ja     0x420503
  4204ed:	jnp    0x4204ae
  4204ef:	dec    eax
  4204f0:	push   0x788879dd
  4204f5:	jecxz  0x420478
  4204f7:	xchg   esp,eax
  4204f8:	rcl    BYTE PTR [ecx+0x28],cl
  4204fb:	(bad)  
  4204fc:	jmp    0x970b:0xb9b0354a
  420503:	daa    
  420504:	or     edx,DWORD PTR [ebx+0x3e71c58e]
  42050a:	adc    al,0xd2
  42050c:	leave  
  42050d:	mov    BYTE PTR [eax+0x0],dh
  420510:	dec    ebp
  420511:	and    eax,0x2bb40a0c
  420516:	loopne 0x420538
  420518:	nop
  420519:	dec    eax
  42051a:	xor    eax,0xaf03f54d
  42051f:	gs adc eax,0x5bc8271e
  420525:	jl     0x42055f
  420527:	shr    BYTE PTR [edi+0x1c],cl
  42052a:	fisub  DWORD PTR [ebp-0xb]
  42052d:	aaa    
  42052e:	push   ss
  42052f:	imul   ebx,DWORD PTR [edx-0x3],0x1ad1eb31
  420536:	mov    esp,DWORD PTR ds:0x18c14972
  42053c:	push   ss
  42053d:	xchg   ch,dl
  42053f:	shl    DWORD PTR [edx-0x5],1
  420542:	mov    ds:0xb92dc461,al
  420547:	test   al,0x1c
  420549:	clc    
  42054a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42054b:	adc    DWORD PTR [edi-0x60],0x70
  42054f:	sub    eax,0xe6f2aab4
  420554:	xchg   ecx,eax
  420555:	pop    ecx
  420556:	stc    
  420557:	in     eax,0xfb
  420559:	jae    0x4205ab
  42055b:	and    al,0x5b
  42055d:	xor    dl,dh
  42055f:	push   0xa3d8111
  420564:	push   ecx
  420565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420566:	xor    eax,0xe709889a
  42056b:	cmp    DWORD PTR ss:[edx+0x7b],0x6f
  420570:	not    DWORD PTR [ebx]
  420572:	test   BYTE PTR [edi],cl
  420574:	sub    eax,0xdaef8741
  420579:	cmp    ebx,0x4e
  42057c:	push   esi
  42057d:	cld    
  42057e:	mov    esp,0x3f737afb
  420583:	jmp    0x7468e61b
  420588:	mov    cl,0x16
  42058a:	add    eax,0x74c48a09
  42058f:	adc    BYTE PTR [eax],ch
  420591:	mov    ds:0xbfa24505,al
  420596:	mov    DWORD PTR [esi],esi
  420598:	jmp    0x327e:0xdac0e0d8
  42059f:	and    ah,ah
  4205a1:	addr16 sbb esi,eax
  4205a4:	in     eax,0xcb
  4205a6:	jno    0x420558
  4205a8:	ret    
  4205a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205aa:	repnz cwde 
  4205ac:	icebp  
  4205ad:	inc    ecx
  4205ae:	cwde   
  4205af:	xchg   esi,eax
  4205b0:	xor    bh,al
  4205b2:	neg    DWORD PTR [edi+0x3e3894ad]
  4205b8:	pop    esp
  4205b9:	mov    dh,0xdb
  4205bb:	push   es
  4205bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205bd:	mov    dh,0x3c
  4205bf:	xchg   esi,eax
  4205c0:	bnd jne 0x420637
  4205c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205c4:	call   0xfce49287
  4205c9:	ins    BYTE PTR es:[edi],dx
  4205ca:	cmp    BYTE PTR ds:0xa8cb405c,0x74
  4205d1:	push   ebx
  4205d2:	cdq    
  4205d3:	shld   DWORD PTR [edx],esi,0x79
  4205d7:	test   al,0xc4
  4205d9:	inc    eax
  4205da:	imul   edi,DWORD PTR [ecx],0x6a
  4205dd:	popf   
  4205de:	push   ebx
  4205df:	test   BYTE PTR [eax-0x147c981a],0x85
  4205e6:	adc    BYTE PTR [ebp+0x7b565572],ch
  4205ec:	rdtsc  
  4205ee:	arpl   WORD PTR [edi-0x6a],di
  4205f1:	sub    eax,0x33063539
  4205f6:	xchg   edi,eax
  4205f7:	repz jb 0x420592
  4205fa:	les    edx,FWORD PTR [ebp+0x52]
  4205fd:	inc    ebx
  4205fe:	push   ebx
  4205ff:	pop    ecx
  420600:	pop    eax
  420601:	js     0x4205f5
  420603:	ret    0x3bba
  420606:	cdq    
  420607:	mov    edi,0xfb12e34c
  42060c:	lahf   
  42060d:	sbb    ch,BYTE PTR [ebx]
  42060f:	cmp    DWORD PTR [esi+0x5f],esi
  420612:	imul   edx,DWORD PTR [ecx+0x199d39fd],0x36
  420619:	jmp    0x8ae796b9
  42061e:	sti    
  42061f:	mov    al,ds:0xb3c835b9
  420624:	pop    esi
  420625:	jge    0x420640
  420627:	mov    edx,0x3cf13e31
  42062c:	adc    BYTE PTR [ecx],ch
  42062e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42062f:	dec    esi
  420630:	and    esi,eax
  420632:	lock push eax
  420634:	fisttp WORD PTR [esp+edi*4-0x6048f450]
  42063b:	sahf   
  42063c:	push   esp
  42063d:	xor    ah,bl
  42063f:	mov    bh,0x63
  420641:	rol    DWORD PTR [edi+0x12],cl
  420644:	add    DWORD PTR [ebp-0x7e4c42a],ecx
  42064a:	mov    ds,WORD PTR [ebx]
  42064c:	mov    DWORD PTR [edx-0x5519428c],ebx
  420652:	and    ch,BYTE PTR [eax-0x14]
  420655:	sub    DWORD PTR [edi-0x6b6552b],edi
  42065b:	retf   0x3133
  42065e:	ja     0x420663
  420660:	mov    bh,0x5b
  420662:	pusha  
  420663:	xchg   ebp,eax
  420664:	rcl    ebp,0x5c
  420667:	cmp    al,0x1f
  420669:	ds stc 
  42066b:	pop    ss
  42066c:	loop   0x420698
  42066e:	stos   BYTE PTR es:[edi],al
  42066f:	jnp    0x420635
  420671:	push   0x8bc4af37
  420676:	mov    ?,WORD PTR [ebx+0x28]
  420679:	and    DWORD PTR [ebx],edi
  42067b:	bound  edx,QWORD PTR [esi+ebx*8]
  42067e:	cld    
  42067f:	lods   al,BYTE PTR ds:[esi]
  420680:	xor    ebp,ebp
  420682:	nop
  420683:	mov    esi,0x4ef86e46
  420688:	add    esp,ecx
  42068a:	and    DWORD PTR [ecx-0x49bd60a2],eax
  420690:	sbb    cl,BYTE PTR [edi+0xf]
  420693:	adc    eax,0x856989
  420698:	mov    esp,es
  42069a:	mov    bl,BYTE PTR [edi]
  42069c:	pop    esi
  42069d:	retf   0x2e09
  4206a0:	int    0x5a
  4206a2:	(bad)  
  4206a4:	inc    ecx
  4206a5:	(bad)  
  4206a6:	pusha  
  4206a7:	cdq    
  4206a8:	not    DWORD PTR [eax]
  4206aa:	adc    BYTE PTR [ecx-0x76],0x73
  4206ae:	adc    bl,BYTE PTR [esi+ebp*4-0x21]
  4206b2:	aad    0x96
  4206b4:	mov    ah,0x1c
  4206b6:	adc    eax,0xd4f67a18
  4206bb:	das    
  4206bc:	iret   
  4206bd:	mov    ch,0xe6
  4206bf:	and    ch,cl
  4206c1:	fimul  DWORD PTR [ebp+esi*8-0x6d1b595a]
  4206c8:	or     DWORD PTR [eax+edx*4-0x75],ebp
  4206cc:	mov    dl,0x18
  4206ce:	jmp    0x258:0x7d78bba5
  4206d5:	and    al,0x3e
  4206d7:	and    BYTE PTR [esi-0x67],bl
  4206da:	ret    
  4206db:	fnstenv [ecx+0x548f50a3]
  4206e1:	or     eax,edx
  4206e3:	mov    eax,ds:0xacc975e2
  4206e8:	aam    0x2e
  4206ea:	inc    ebp
  4206eb:	or     al,0x48
  4206ed:	inc    edx
  4206ee:	enter  0xdb4e,0x83
  4206f2:	retf   
  4206f3:	(bad)
  4206f7:	lahf   
  4206f8:	loopne 0x4206d6
  4206fa:	out    dx,eax
  4206fb:	or     ah,ch
  4206fd:	inc    ebx
  4206fe:	int3   
  4206ff:	adc    ecx,DWORD PTR [edx]
  420701:	adc    DWORD PTR [esp+ebp*4+0x8],0x54
  420706:	icebp  
  420707:	into   
  420708:	push   0xe8326c27
  42070d:	jg     0x4206fc
  42070f:	sub    edi,edx
  420711:	inc    ebp
  420712:	lahf   
  420713:	or     BYTE PTR cs:[eax+0x7b],cl
  420717:	cmp    al,0x8
  420719:	je     0x420750
  42071b:	in     al,0x8d
  42071d:	fcom   st(4)
  42071f:	jmp    0x420790
  420721:	mov    bl,0x73
  420723:	sbb    BYTE PTR [ebx+0x22],bh
  420726:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  420728:	or     bh,BYTE PTR [edi+0x6]
  42072b:	add    esi,ebp
  42072d:	sub    dl,bh
  42072f:	je     0x420776
  420731:	sbb    dl,BYTE PTR [ecx+0x10]
  420734:	call   0x9b899e3e
  420739:	pushf  
  42073a:	sbb    edx,DWORD PTR [esi-0xc]
  42073d:	int3   
  42073e:	data16 inc dh
  420741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420742:	add    DWORD PTR [edx],ebx
  420744:	jl     0x420708
  420746:	bswap  edx
  420748:	les    esp,FWORD PTR [edx+0x25]
  42074b:	jb     0x420789
  42074d:	ja     0x4207b3
  42074f:	in     eax,dx
  420750:	gs dec ebp
  420752:	in     eax,dx
  420753:	out    dx,al
  420754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420755:	in     eax,dx
  420756:	test   DWORD PTR [eax-0x3790bdff],0xda56
  420760:	add    BYTE PTR [eax],al
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	xchg   ecx,eax
  42076f:	adc    DWORD PTR [edi+0x181d5f9],ebx
  420775:	add    ah,dh
  420777:	add    al,0x0
  420779:	add    BYTE PTR [edi-0x55],dl
  42077c:	aas    
  42077d:	scas   eax,DWORD PTR es:[edi]
  42077e:	inc    ebx
  42077f:	mov    esp,0xf9f536ca
  420784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420785:	add    eax,0x12c81334
  42078a:	cdq    
  42078b:	int    0x15
  42078d:	push   cs
  42078e:	mov    al,ds:0xe38342d7
  420793:	or     al,0x57
  420795:	je     0x4207e5
  420797:	arpl   WORD PTR [edx-0x74631c9a],ax
  42079d:	in     eax,dx
  42079e:	fisttp QWORD PTR [ebx-0x6f226195]
  4207a4:	jg     0x420812
  4207a6:	jg     0x42080b
  4207a8:	xor    eax,0x32102e36
  4207ad:	add    dh,0xb2
  4207b0:	loop   0x42073b
  4207b2:	adc    al,bl
  4207b4:	daa    
  4207b5:	pusha  
  4207b6:	sub    al,0x15
  4207b8:	test   BYTE PTR [edi],dl
  4207ba:	mov    eax,0xf5d8ffcb
  4207bf:	or     BYTE PTR ds:0x90dfcbe6,al
  4207c5:	inc    edi
  4207c6:	mov    dl,0x5d
  4207c8:	fcomp  QWORD PTR [esp+ebp*8-0x10]
  4207cc:	cwde   
  4207cd:	cmc    
  4207ce:	mov    ebp,0x42504c97
  4207d3:	xchg   edi,eax
  4207d4:	in     al,dx
  4207d5:	and    BYTE PTR [edi],dh
  4207d7:	sub    DWORD PTR [edi+0x2b],0x78
  4207db:	inc    edx
  4207dc:	pop    es
  4207dd:	dec    ecx
  4207de:	xchg   ecx,eax
  4207df:	mov    bl,0x6d
  4207e1:	adc    dh,BYTE PTR [esi]
  4207e3:	jl     0x4207bc
  4207e5:	xor    BYTE PTR [ebp+0x55],dl
  4207e8:	or     eax,0x88d122b7
  4207ed:	call   0x2bcf:0xc90b6870
  4207f4:	cwde   
  4207f5:	mov    al,ds:0x8b052bbd
  4207fa:	(bad)  
  4207fb:	clc    
  4207fc:	repnz push ecx
  4207fe:	mov    bl,0xb0
  420800:	add    al,0xb1
  420802:	and    ebx,DWORD PTR [edi-0x28a87133]
  420808:	sbb    eax,0x6ff1fe8a
  42080d:	mov    edx,0x8b95e88
  420812:	(bad)  
  420813:	mov    eax,ds:0x76ffbad2
  420818:	mov    ebp,0xa23804c3
  42081d:	fild   WORD PTR [edi+edx*4]
  420820:	aam    0xe4
  420822:	mov    al,0x56
  420824:	sub    ch,BYTE PTR [ebx+0x16]
  420827:	cmp    ecx,esi
  420829:	mov    cl,0x6e
  42082b:	mov    ds:0xd9c102cc,eax
  420830:	fist   WORD PTR [edx]
  420833:	sbb    al,BYTE PTR [esi+edi*8-0x7716ed52]
  42083a:	add    al,0x29
  42083c:	sub    al,0xfc
  42083f:	mov    ds:0x833936c8,eax
  420844:	sub    eax,0xa049da2c
  420849:	sub    bl,ch
  42084b:	or     DWORD PTR [esi],ebx
  42084d:	jbe    0x42082c
  42084f:	pop    es
  420850:	sub    ax,0x2d1d
  420854:	shr    DWORD PTR [eax+0x1],cl
  420857:	retf   
  420858:	lock and dh,BYTE PTR [esi+0x37]
  42085c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085d:	stos   BYTE PTR es:[edi],al
  42085e:	dec    ebx
  42085f:	int3   
  420860:	mov    dh,bh
  420862:	clc    
  420863:	or     edx,DWORD PTR [edx-0x6d]
  420866:	push   cs
  420867:	jecxz  0x42087a
  420869:	cs inc eax
  42086b:	mov    edx,?
  42086d:	cld    
  42086e:	inc    ebp
  42086f:	sbb    al,0x34
  420871:	(bad)  
  420872:	cmc    
  420873:	and    eax,0xb9fd5a50
  420878:	js     0x42087a
  42087a:	lods   al,BYTE PTR ds:[esi]
  42087b:	push   eax
  42087c:	data16 aad 0xb4
  42087f:	nop
  420880:	mov    ecx,0x96679e84
  420885:	push   edi
  420886:	xchg   ebp,eax
  420887:	xor    al,0xf6
  420889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42088a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42088b:	out    dx,al
  42088c:	rol    ebp,cl
  42088e:	es or  eax,0xb9f16e03
  420894:	and    ch,BYTE PTR [edi-0x24]
  420897:	(bad)  
  420898:	xchg   esi,eax
  420899:	mov    ds:0x587e14e2,al
  42089e:	xchg   ebx,eax
  42089f:	push   ebx
  4208a0:	dec    esi
  4208a1:	iret   
  4208a2:	xlat   BYTE PTR ds:[ebx]
  4208a3:	mov    cl,0x11
  4208a5:	leave  
  4208a6:	cli    
  4208a7:	xchg   ebp,eax
  4208a8:	mov    dl,BYTE PTR [edx+0x6288d739]
  4208ae:	outs   dx,DWORD PTR ds:[esi]
  4208af:	int    0xbf
  4208b1:	popa   
  4208b2:	(bad)  
  4208b3:	dec    esp
  4208b4:	pop    ebx
  4208b5:	dec    esi
  4208b6:	xchg   ecx,eax
  4208b7:	mov    ds:0x63b56cf5,al
  4208bc:	stos   BYTE PTR es:[edi],al
  4208bd:	jle    0x4208aa
  4208bf:	cmp    BYTE PTR [ecx-0x6a],bh
  4208c2:	aaa    
  4208c3:	call   0x55c:0xcfd9ad43
  4208ca:	call   0xfca:0xc720f66c
  4208d1:	fwait
  4208d2:	inc    ecx
  4208d3:	repz enter 0x4fc6,0x45
  4208d8:	sbb    BYTE PTR [esi+0x4a],cl
  4208db:	mov    eax,ds:0x7511ee86
  4208e0:	sahf   
  4208e1:	push   cs
  4208e2:	sti    
  4208e3:	loope  0x42087e
  4208e5:	pop    ebp
  4208e6:	push   cs
  4208e7:	lds    eax,FWORD PTR [edx-0x7a]
  4208ea:	pop    ds
  4208eb:	jne    0x420872
  4208ed:	mov    bl,0xfe
  4208ef:	mov    bl,0xd6
  4208f1:	ins    DWORD PTR es:[edi],dx
  4208f2:	inc    ecx
  4208f3:	mov    dl,0x6e
  4208f5:	mov    edx,0x7fa014f1
  4208fa:	or     bl,BYTE PTR [ecx]
  4208fc:	test   eax,0x82938c60
  420901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420902:	add    BYTE PTR [eax+0x536acb69],bl
  420908:	out    0xb,al
  42090a:	out    0xbd,al
  42090c:	fwait
  42090d:	and    eax,0x12944a87
  420912:	into   
  420913:	js     0x4208df
  420915:	mov    al,0x2a
  420917:	div    DWORD PTR [ecx-0x23604622]
  42091d:	add    BYTE PTR [ecx+0x7f694a9],dh
  420923:	dec    ecx
  420924:	sub    esi,ebx
  420926:	gs jmp 0xf97c2bea
  42092c:	adc    al,0x11
  42092e:	push   eax
  42092f:	aam    0xe9
  420931:	mov    ds:0x5693e6c1,al
  420936:	cmp    DWORD PTR [edi-0x23ab4c67],ecx
  42093c:	leave  
  42093d:	pop    ebp
  42093e:	jmp    0x420907
  420940:	xchg   esp,eax
  420941:	sub    eax,0x424d51bf
  420946:	push   esp
  420947:	int    0x40
  420949:	ins    DWORD PTR es:[edi],dx
  42094a:	(bad)  
  42094b:	(bad)  
  42094c:	fidivr WORD PTR [ebx+0x58dafa5f]
  420952:	sub    BYTE PTR [edi-0x48c0dd56],cl
  420958:	mov    dl,0x5a
  42095a:	jge    0x420925
  42095c:	xor    eax,0xa06bb28d
  420961:	or     BYTE PTR [esi+0x2a],cl
  420964:	xchg   esp,eax
  420965:	test   DWORD PTR [ebp-0x7b],0x20674ed9
  42096c:	fld    TBYTE PTR [edi+0x314ded9c]
  420972:	cmp    bl,ah
  420974:	imul   esi,DWORD PTR [edx],0xffffffa5
  420977:	jnp    0x420916
  420979:	popf   
  42097a:	mov    esi,0xc3481eea
  42097f:	mov    al,0x11
  420981:	adc    BYTE PTR [esi],dh
  420983:	scas   al,BYTE PTR es:[edi]
  420984:	cmp    DWORD PTR [edx],ecx
  420986:	mov    ecx,0x9fff341c
  42098b:	(bad)  
  42098d:	jmp    0xec303e0c
  420992:	cmp    bl,BYTE PTR [ebx-0x65c61ca6]
  420998:	mov    esp,0xe9229bcd
  42099d:	cli    
  42099e:	jnp    0x420962
  4209a0:	cmp    ebp,0x8f95dff0
  4209a6:	punpckhwd mm4,QWORD PTR [esi+0x4d53797e]
  4209ad:	mov    ds:0xff437db6,al
  4209b2:	pusha  
  4209b3:	(bad)  
  4209b4:	popa   
  4209b5:	jbe    0x420999
  4209b7:	xchg   edx,eax
  4209b8:	cmc    
  4209b9:	dec    eax
  4209ba:	mov    dl,BYTE PTR [edi+0x7e301864]
  4209c0:	das    
  4209c1:	sbb    ebp,DWORD PTR [ebp-0x79]
  4209c4:	jae    0x420a32
  4209c6:	mov    ecx,0x8ff93c1f
  4209cb:	shr    BYTE PTR [edi-0x1],0x49
  4209cf:	in     al,dx
  4209d0:	jae    0x4209f4
  4209d2:	outs   dx,BYTE PTR ds:[esi]
  4209d3:	retf   0x241
  4209d6:	je     0x420a31
  4209d8:	mov    cl,0x94
  4209da:	call   FWORD PTR [edi-0x3e]
  4209dd:	and    eax,0x3e83c593
  4209e2:	and    eax,0x2b579bbc
  4209e7:	inc    ebp
  4209e8:	fucomp st(1)
  4209ea:	loop   0x420a53
  4209ec:	jnp    0x4209f6
  4209ee:	fs ins DWORD PTR es:[edi],dx
  4209f0:	repnz ins DWORD PTR es:[edi],dx
  4209f2:	fnstcw WORD PTR [ecx-0x1bca1f8f]
  4209f8:	daa    
  4209f9:	push   edx
  4209fa:	push   ebx
  4209fb:	push   esi
  4209fc:	push   es
  4209fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209fe:	(bad)  
  4209ff:	bound  edx,QWORD PTR [ecx-0x3bac5c6b]
  420a05:	sbb    eax,0x15d1a1d
  420a0a:	jb     0x420a54
  420a0c:	inc    ebx
  420a0d:	call   0xddda398e
  420a12:	push   ds
  420a13:	mov    edx,0xc19d2017
  420a18:	(bad)
  420a1b:	popa   
  420a1c:	fisttp QWORD PTR [ebp-0x7f]
  420a1f:	inc    ebx
  420a20:	mov    esi,DWORD PTR [ebx-0x4cee69a0]
  420a26:	pop    ds
  420a27:	jp     0x4209de
  420a29:	jl     0x4209d6
  420a2b:	inc    ebp
  420a2c:	add    eax,0x2c17da61
  420a31:	pop    eax
  420a32:	sti    
  420a33:	ret    
  420a34:	sti    
  420a35:	sub    dh,ah
  420a37:	jae    0x4209bd
  420a39:	sub    BYTE PTR [ebp+0x50e5802b],bh
  420a3f:	arpl   sp,sp
  420a41:	adc    BYTE PTR [eax-0x33],0x98
  420a45:	add    DWORD PTR [eax-0x45],esi
  420a48:	test   DWORD PTR [esi+0x6332101],0x8c6c962c
  420a52:	retf   
  420a53:	ror    BYTE PTR [edi+0x12],0x40
  420a57:	add    al,0xd9
  420a59:	push   esp
  420a5b:	mov    dl,0xe5
  420a5d:	jae    0x420aba
  420a5f:	pop    ebp
  420a60:	addr16 add al,0xd2
  420a63:	leave  
  420a64:	jl     0x4209fc
  420a66:	adc    al,0x25
  420a68:	sub    al,0x42
  420a6a:	fstp   TBYTE PTR [eax-0x78]
  420a6d:	shl    DWORD PTR [edx+0x68],1
  420a70:	mov    ah,0xcd
  420a72:	dec    ebx
  420a73:	loop   0x420a6f
  420a75:	shl    esp,cl
  420a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a78:	or     al,0x3c
  420a7a:	dec    edx
  420a7b:	ds (bad) 
  420a7d:	lods   al,BYTE PTR ds:[esi]
  420a7e:	or     al,0x5
  420a80:	push   esi
  420a81:	jg     0x420a51
  420a83:	pop    esp
  420a84:	push   es
  420a85:	mov    dl,BYTE PTR [ecx-0x7a5c309d]
  420a8b:	inc    esi
  420a8c:	mov    esp,0x3ff08e64
  420a91:	repnz bound esi,QWORD PTR [ebx+0x6a]
  420a95:	sub    esi,DWORD PTR [ebx+eax*1+0x4b5115cd]
  420a9c:	test   DWORD PTR [eax-0xe3e6b4e],eax
  420aa2:	(bad)  [esi-0x47]
  420aa5:	adc    DWORD PTR [edi+0x1ef83fee],ecx
  420aab:	(bad)  
  420aac:	ret    0x30b7
  420aaf:	leave  
  420ab0:	shl    BYTE PTR [esi],1
  420ab2:	cli    
  420ab3:	dec    ebx
  420ab4:	mov    dl,0x43
  420ab6:	add    cl,dl
  420ab8:	push   0x24
  420aba:	popa   
  420abb:	shl    BYTE PTR [eax],cl
  420abd:	(bad)  
  420abe:	outs   dx,DWORD PTR ds:[esi]
  420abf:	push   es
  420ac0:	add    BYTE PTR [edx+ebp*4+0x2c2f2b55],dh
  420ac7:	pop    ebp
  420ac8:	imul   edi,DWORD PTR [esi],0xf9a6ae32
  420ace:	(bad)  
  420acf:	cmp    eax,0xcbe2e500
  420ad4:	mov    cl,0x6d
  420ad6:	push   esi
  420ad7:	rol    DWORD PTR [eax-0x1f],0x48
  420adb:	push   ds
  420adc:	jle    0x420ae3
  420ade:	call   0xb976823b
  420ae3:	in     eax,0xf6
  420ae5:	shl    BYTE PTR [edi],0x78
  420ae8:	mov    ah,0xfc
  420aea:	push   cs
  420aeb:	lock push ecx
  420aed:	jne    0x420b32
  420aef:	retf   
  420af0:	mov    ds:0xe06c1e0c,al
  420af5:	mov    ebx,0x64f62ca0
  420afa:	mov    cl,bl
  420afc:	cmp    al,0x5d
  420afe:	fimul  WORD PTR [ebx-0x1d]
  420b01:	je     0x420b55
  420b03:	jecxz  0x420b5e
  420b05:	push   eax
  420b06:	sbb    al,BYTE PTR [edi-0x5b]
  420b09:	xchg   edi,eax
  420b0a:	jg     0x420b70
  420b0c:	sub    al,0x39
  420b0e:	dec    ecx
  420b0f:	test   al,0x36
  420b11:	aaa    
  420b12:	push   eax
  420b13:	jb     0x420aeb
  420b15:	mov    esi,0x13786295
  420b1a:	test   eax,0xb35d5631
  420b1f:	cmp    esp,DWORD PTR [edx-0xc]
  420b22:	sub    edi,DWORD PTR [ebx]
  420b24:	sbb    DWORD PTR [ecx+0x21],esp
  420b27:	sbb    cl,dl
  420b29:	ins    DWORD PTR es:[edi],dx
  420b2a:	stos   DWORD PTR es:[edi],eax
  420b2b:	jmp    0x420acf
  420b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b2e:	adc    al,0x3b
  420b30:	cmp    BYTE PTR [edi+0x59a6e918],0xfa
  420b37:	push   ecx
  420b38:	cmc    
  420b39:	repz sub eax,0x7364314a
  420b3f:	rcr    BYTE PTR [ebx+0x13],1
  420b42:	loop   0x420ac7
  420b44:	sbb    BYTE PTR [edx-0x48],dh
  420b47:	das    
  420b48:	sti    
  420b49:	arpl   WORD PTR [esi-0x75],dx
  420b4c:	pop    ebx
  420b4d:	xchg   BYTE PTR [ebx+0x5f],dh
  420b50:	js     0x420aef
  420b52:	pop    ecx
  420b53:	sahf   
  420b54:	enter  0xb377,0x32
  420b58:	mov    esp,0x5ec489dd
  420b5d:	lods   eax,DWORD PTR ds:[esi]
  420b5e:	(bad)  
  420b5f:	sahf   
  420b60:	mov    WORD PTR [ebx+0x53],es
  420b63:	pop    esi
  420b64:	mov    ah,0xd0
  420b66:	(bad)  
  420b67:	pop    esp
  420b68:	jae    0x420b79
  420b6a:	push   0xfffffff8
  420b6c:	mov    esi,0x991fb825
  420b71:	pop    ebp
  420b72:	mov    bl,0xc
  420b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b75:	sbb    DWORD PTR ds:0xe99d0a77,0xffffffca
  420b7c:	jmp    0x420b0d
  420b7e:	xchg   esi,eax
  420b7f:	and    al,0x3c
  420b81:	sub    eax,0x25f7bdc4
  420b86:	mov    edi,0xfecc56aa
  420b8b:	ja     0x420bab
  420b8d:	test   eax,0x880e2c02
  420b92:	xchg   edx,eax
  420b93:	(bad)  
  420b94:	and    ebp,esp
  420b96:	jno    0x420b1d
  420b98:	jecxz  0x420b21
  420b9a:	je     0x420bbb
  420b9c:	gs push edi
  420b9e:	cmp    bh,dl
  420ba0:	inc    eax
  420ba1:	jae    0x420be8
  420ba3:	das    
  420ba4:	test   DWORD PTR [edi],0xf6bfbc29
  420baa:	and    BYTE PTR [edi+0xa],al
  420bad:	mov    ah,0x2
  420baf:	fs jbe 0x420bbc
  420bb2:	dec    edx
  420bb3:	cli    
  420bb4:	xchg   edi,eax
  420bb5:	adc    ebp,DWORD PTR [edi+0x4cfd821b]
  420bbb:	test   DWORD PTR [edx-0x54fc2e40],ecx
  420bc1:	stc    
  420bc2:	sbb    eax,0x61b11822
  420bc7:	lahf   
  420bc8:	inc    edx
  420bc9:	jo     0x420c0d
  420bcb:	jle    0x420c36
  420bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bce:	icebp  
  420bcf:	jmp    0x2b7834fe
  420bd4:	repz loope 0x420bdf
  420bd7:	aas    
  420bd8:	leave  
  420bd9:	lods   al,BYTE PTR ds:[esi]
  420bda:	out    0x66,eax
  420bdc:	icebp  
  420bdd:	mov    ebp,DWORD PTR [ecx-0x1b]
  420be0:	add    eax,0x5140743b
  420be5:	je     0x420bc6
  420be7:	pushf  
  420be8:	test   al,0xa0
  420bea:	mov    dh,0xa3
  420bec:	cwde   
  420bed:	jle    0x420c24
  420bef:	sub    DWORD PTR [esi],eax
  420bf1:	pusha  
  420bf2:	mov    gs,WORD PTR [eax]
  420bf4:	fimul  DWORD PTR [ebp+0x3582cfd6]
  420bfa:	lahf   
  420bfb:	push   ss
  420bfc:	xor    dh,BYTE PTR [edx+0x4da55f55]
  420c02:	loopne 0x420c83
  420c04:	push   ss
  420c05:	xor    DWORD PTR [edx-0x3a],edi
  420c08:	push   eax
  420c09:	scas   eax,DWORD PTR es:[edi]
  420c0a:	addr16 push cs
  420c0c:	mov    ebx,0xaf54ee54
  420c11:	mov    eax,ds:0x63ac8e72
  420c16:	icebp  
  420c17:	fdiv   st(3),st
  420c19:	shl    edi,1
  420c1b:	and    bl,al
  420c1d:	ret    0x6dc7
  420c20:	ror    DWORD PTR [eax+0x41b41900],cl
  420c26:	js     0x420c92
  420c28:	jae    0x420c15
  420c2a:	xchg   edi,eax
  420c2b:	mov    al,ds:0x46b4fd0a
  420c30:	jmp    0x420c92
  420c32:	pop    esp
  420c33:	mov    ch,0xef
  420c35:	rcr    BYTE PTR [esi-0x1717a5a],cl
  420c3b:	out    dx,eax
  420c3c:	jne    0x420bf1
  420c3e:	fadd   DWORD PTR [esi+0x3e9ce1a2]
  420c44:	cld    
  420c45:	xchg   ebx,eax
  420c46:	sbb    esi,DWORD PTR [edi+0x3cdad551]
  420c4c:	dec    esp
  420c4d:	out    0xcc,al
  420c4f:	aam    0x60
  420c51:	sub    al,BYTE PTR [edi+ecx*1+0x3da9b375]
  420c58:	jmp    0x2fa1:0xedc3c90
  420c5f:	sbb    al,0x6f
  420c61:	inc    esp
  420c62:	lea    ebx,[esi+0x11]
  420c65:	aam    0xaf
  420c67:	sub    edx,eax
  420c69:	dec    edi
  420c6a:	xchg   ebp,eax
  420c6b:	and    ecx,eax
  420c6d:	out    0x0,eax
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x2f8b47a9]
  420c80:	fs dec ebp
  420c82:	leave  
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    ah,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ecx+0x4d6b8b7a],bh
  420c8f:	inc    DWORD PTR [edx-0x7f]
  420c92:	leave  
  420c93:	push   esi
  420c94:	dec    ebx
  420c95:	and    DWORD PTR [edx],eax
  420c97:	and    DWORD PTR [ebx+0x59],0x661c93bd
  420c9e:	test   eax,0xd928000d
  420ca3:	pop    edi
  420ca4:	stos   BYTE PTR es:[edi],al
  420ca5:	loopne 0x420c87
  420ca7:	adc    ebp,DWORD PTR [ebx-0x15]
  420caa:	mov    ch,0x8d
  420cac:	nop
  420cad:	mov    dh,0xa4
  420caf:	ret    
  420cb0:	ret    0x5567
  420cb3:	out    0x83,eax
  420cb5:	xchg   esp,eax
  420cb6:	nop
  420cb7:	js     0x420c6d
  420cb9:	mov    edx,0xe4738a0
  420cbe:	mov    BYTE PTR [eax+edi*4+0x38],0xe6
  420cc3:	rcr    DWORD PTR [edi+0x78],0x23
  420cc7:	aaa    
  420cc8:	push   ebp
  420cc9:	xchg   ecx,eax
  420cca:	(bad)  
  420ccb:	mov    al,0xe9
  420ccd:	mov    al,ds:0xf4de7013
  420cd2:	inc    ebp
  420cd3:	rep outs dx,DWORD PTR ds:[esi]
  420cd5:	add    dh,ah
  420cd7:	mov    ds:0xc0009903,eax
  420cdc:	in     al,dx
  420cdd:	dec    eax
  420cde:	(bad)  
  420cdf:	mov    ds:0x77a26f8a,al
  420ce4:	jg     0x420d40
  420ce6:	loop   0x420d5e
  420ce8:	adc    dl,BYTE PTR [esi-0x1f9c793d]
  420cee:	sahf   
  420cef:	mov    bh,0x90
  420cf1:	mov    WORD PTR [ecx],ds
  420cf3:	push   0xffffffe5
  420cf5:	mov    ebp,0x244d043d
  420cfa:	inc    edi
  420cfb:	in     al,0xe2
  420cfd:	stc    
  420cfe:	mov    ebx,DWORD PTR [ebx+0x1e]
  420d01:	xor    al,0xea
  420d03:	cmp    al,0x7c
  420d05:	hlt    
  420d06:	out    dx,al
  420d07:	mov    edx,DWORD PTR [esi-0x31292709]
  420d0d:	(bad)  
  420d0e:	cmp    al,0x34
  420d10:	cmp    ebp,esi
  420d12:	pop    eax
  420d13:	bound  esi,QWORD PTR [eax+0x6bc89b79]
  420d19:	jmp    0x9e64:0x2e59e26a
  420d20:	jmp    0x6db1:0xad2b030d
  420d27:	mov    al,ds:0x4ad5dd1a
  420d2c:	mov    ?,esp
  420d2e:	push   ss
  420d2f:	ret    0xac8f
  420d32:	cmp    BYTE PTR [ebx+ebp*4+0xa8f17a3],0x8
  420d3a:	push   es
  420d3b:	push   ebp
  420d3c:	xchg   edi,eax
  420d3d:	adc    ch,BYTE PTR [edx+0x6d9cf790]
  420d43:	sub    eax,0xffae17aa
  420d48:	sub    BYTE PTR ds:0xfe563ca,bl
  420d4e:	xchg   ebx,eax
  420d4f:	pop    ecx
  420d50:	jp     0x420ce4
  420d52:	daa    
  420d53:	repz mov ds:0x3bd268ac,eax
  420d59:	inc    esp
  420d5a:	lods   eax,DWORD PTR ds:[esi]
  420d5b:	push   esp
  420d5c:	lods   al,BYTE PTR ds:[esi]
  420d5d:	push   cs
  420d5e:	dec    ebx
  420d5f:	xor    DWORD PTR [ebx],0x58ac17c4
  420d65:	daa    
  420d66:	mov    esp,0xef8618bd
  420d6b:	jmp    0xeca8:0xde7f6b72
  420d72:	je     0x420de2
  420d74:	and    BYTE PTR ds:0xe11c12f1,0x7c
  420d7b:	fs inc eax
  420d7d:	sbb    eax,0x12dbf03d
  420d82:	xchg   esp,eax
  420d83:	rol    DWORD PTR [edi-0x5c5a6e5c],1
  420d89:	push   edx
  420d8a:	inc    eax
  420d8b:	test   BYTE PTR [edx+0x4a],bl
  420d8e:	mov    edi,0x43060d7b
  420d93:	aas    
  420d94:	test   BYTE PTR [edx+edi*8+0x46],bl
  420d98:	arpl   WORD PTR [eax+0x19],ax
  420d9b:	jle    0x420e0e
  420d9d:	sub    ebx,0xb6aaa820
  420da3:	(bad)  
  420da4:	fnstsw WORD PTR [ebx]
  420da6:	cmp    DWORD PTR [ecx+0x7],ecx
  420da9:	std    
  420daa:	xchg   ebx,eax
  420dab:	mov    DWORD PTR [ebx-0x7a],ebx
  420dae:	mov    bl,0xdd
  420db0:	imul   eax,DWORD PTR [esi],0xffffff9e
  420db3:	and    al,ch
  420db5:	adc    ebp,DWORD PTR [esi]
  420db7:	mov    bh,0xd3
  420db9:	push   cs
  420dba:	(bad)  
  420dbb:	xlat   BYTE PTR ds:[ebx]
  420dbc:	test   eax,0x148b618b
  420dc1:	xchg   edi,edi
  420dc3:	test   BYTE PTR [ecx],bl
  420dc5:	stos   BYTE PTR es:[edi],al
  420dc6:	jg     0x420dee
  420dc8:	sbb    ebp,DWORD PTR [ecx+0x4dbeba72]
  420dce:	mov    edi,0xc773d09b
  420dd3:	dec    edx
  420dd4:	sub    dl,BYTE PTR [esi]
  420dd6:	sbb    al,0xae
  420dd8:	cmp    eax,0x3611f186
  420ddd:	shl    DWORD PTR [edx+0x40],cl
  420de0:	fs push ecx
  420de2:	xchg   BYTE PTR [eax+0x2f],bh
  420de5:	sbb    al,0xed
  420de7:	ds ja  0x420e3d
  420dea:	jmp    0x420e41
  420dec:	dec    eax
  420ded:	in     al,dx
  420dee:	mov    ds:0xe43af3f5,al
  420df3:	mov    al,0xc3
  420df5:	aam    0xb9
  420df7:	lds    ecx,FWORD PTR [edi]
  420df9:	xchg   ebx,eax
  420dfa:	xlat   BYTE PTR ds:[ebx]
  420dfb:	lea    ebx,[ebx-0x7a]
  420dfe:	sub    al,0xd5
  420e00:	das    
  420e01:	in     al,dx
  420e02:	sub    al,bh
  420e04:	ficom  DWORD PTR [edi-0xcac8429]
  420e0a:	fcom   DWORD PTR [edx+0x22]
  420e0d:	xlat   BYTE PTR ds:[ebx]
  420e0e:	mov    BYTE PTR [eax-0x29],dl
  420e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e12:	aaa    
  420e13:	push   ebx
  420e14:	repnz dec ebx
  420e16:	std    
  420e17:	ds daa 
  420e19:	jge    0x420dbf
  420e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e1c:	mov    cl,0xd8
  420e1e:	cmp    ch,BYTE PTR [ecx+esi*8]
  420e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e22:	push   cs
  420e23:	cs retf 0x5b12
  420e27:	inc    edx
  420e28:	rol    eax,cl
  420e2a:	jnp    0x420e56
  420e2c:	icebp  
  420e2d:	(bad)  
  420e2e:	xchg   ebx,eax
  420e2f:	lods   eax,DWORD PTR ds:[esi]
  420e30:	mov    ebp,0xe07a59cc
  420e35:	sbb    DWORD PTR [edx],esi
  420e37:	not    DWORD PTR [edi+0x41c161b1]
  420e3d:	jmp    0xd344fb9d
  420e42:	inc    esp
  420e43:	inc    edx
  420e44:	push   edi
  420e45:	or     ch,BYTE PTR [esi-0x27]
  420e48:	mov    dh,0xd9
  420e4a:	push   cs
  420e4b:	xchg   BYTE PTR [edi+eax*4+0x4b],ah
  420e4f:	adc    BYTE PTR [edx+0x52a25809],dh
  420e55:	pop    eax
  420e56:	rcl    DWORD PTR [eax-0x6a18d8aa],cl
  420e5c:	mov    ebx,0xe64974d5
  420e61:	in     al,0xe2
  420e63:	outs   dx,BYTE PTR ds:[esi]
  420e64:	inc    edx
  420e65:	cmp    ch,ch
  420e67:	mov    ds:0x7a6f698f,eax
  420e6c:	sub    al,0xf2
  420e6e:	push   ebx
  420e6f:	(bad)  
  420e70:	push   edx
  420e71:	div    esi
  420e73:	pop    esi
  420e74:	sbb    al,0xfa
  420e76:	and    cl,BYTE PTR [edx+0x3c9cc13c]
  420e7c:	mov    bl,0x6c
  420e7e:	outs   dx,BYTE PTR es:[esi]
  420e80:	int    0x36
  420e82:	jns    0x420e22
  420e84:	ret    
  420e85:	mov    eax,0xfa63da76
  420e8a:	retf   0x989
  420e8d:	add    al,0x66
  420e8f:	inc    ecx
  420e90:	jnp    0x420e78
  420e92:	clc    
  420e93:	int3   
  420e94:	in     al,dx
  420e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e96:	test   DWORD PTR [ebp+eax*4-0x7e995bf],eax
  420e9d:	xchg   DWORD PTR [ecx+edi*8+0x6f],esi
  420ea1:	and    eax,0x41a6b51d
  420ea6:	jg     0x420f15
  420ea8:	jmp    DWORD PTR [ecx-0x253c533c]
  420eae:	es pop ebp
  420eb0:	xchg   esp,eax
  420eb1:	aaa    
  420eb2:	mov    cl,0xa8
  420eb4:	mov    ds,WORD PTR [ebp+0x2c7a60b8]
  420eba:	inc    ebx
  420ebb:	addr16 mov bl,0x7b
  420ebe:	xlat   BYTE PTR ds:[ebx]
  420ebf:	pushf  
  420ec0:	jb     0x420e8e
  420ec2:	mov    al,0x1e
  420ec4:	push   es
  420ec5:	xor    eax,0x369cbe3
  420eca:	sub    al,0x3b
  420ecc:	mov    eax,ds:0xe97941d8
  420ed1:	and    eax,0xfb8bdebd
  420ed6:	push   0x950d58f0
  420edb:	sar    bh,cl
  420edd:	mov    ebx,0x2204adb5
  420ee2:	xchg   esi,eax
  420ee3:	(bad)  
  420ee4:	cmp    eax,0xf3621e9d
  420ee9:	and    ebp,ebx
  420eeb:	pop    ds
  420eec:	inc    esp
  420eed:	dec    ecx
  420eee:	jp     0x420ea4
  420ef0:	imul   esi,DWORD PTR [esi-0x695eec0f],0x85623194
  420efa:	in     eax,0xb4
  420efc:	fs sbb eax,0xdfbacb4e
  420f02:	cmp    esi,DWORD PTR ds:0x9306a443
  420f08:	nop
  420f09:	into   
  420f0a:	ret    
  420f0b:	loope  0x420ed1
  420f0d:	sti    
  420f0e:	mov    ds:0x6db2deb0,al
  420f13:	mov    edx,0x8978c54f
  420f18:	mov    ds:0xe4764bd9,eax
  420f1d:	inc    ecx
  420f1e:	inc    edi
  420f1f:	mov    bl,0x4c
  420f21:	jnp    0x420ec6
  420f23:	mov    bl,0x98
  420f26:	adc    eax,0xadfc6a8e
  420f2b:	aaa    
  420f2c:	gs addr16 xor eax,0x9da72842
  420f33:	jecxz  0x420ec3
  420f35:	push   eax
  420f36:	push   cs
  420f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f38:	jge    0x420f54
  420f3a:	mov    ebp,0x2b5aa031
  420f3f:	and    ecx,DWORD PTR [esi]
  420f41:	call   0x912a:0x8a400176
  420f48:	jo     0x420f78
  420f4a:	xchg   ebp,eax
  420f4b:	add    bl,BYTE PTR [edx+0x5d]
  420f4e:	pop    ebp
  420f4f:	ins    DWORD PTR es:[edi],dx
  420f50:	or     eax,0x97685217
  420f55:	sar    DWORD PTR [ebx],1
  420f57:	jl     0x420f9c
  420f59:	dec    esi
  420f5a:	je     0x420f0b
  420f5c:	shr    DWORD PTR [ebx],cl
  420f5e:	mov    DWORD PTR [ebp+esi*1+0x320f26c4],edi
  420f65:	and    al,ah
  420f67:	in     eax,dx
  420f68:	out    dx,al
  420f69:	mov    ch,0x5d
  420f6b:	add    al,0x42
  420f6d:	add    DWORD PTR [ebx+0x23f48e5e],0x33
  420f74:	pop    ds
  420f75:	sub    al,0xe8
  420f77:	dec    eax
  420f78:	enter  0xeb80,0x4e
  420f7c:	iret   
  420f7d:	cmp    BYTE PTR [esi-0x3ea8daa7],dh
  420f83:	push   ds
  420f84:	mov    edx,DWORD PTR [eax-0x106a59d6]
  420f8a:	es loopne 0x420f96
  420f8d:	lods   al,BYTE PTR ds:[esi]
  420f8e:	jge    0x420f5b
  420f90:	cld    
  420f91:	(bad)  
  420f92:	aad    0xde
  420f94:	imul   BYTE PTR [ecx-0x6e]
  420f97:	inc    eax
  420f98:	xchg   edx,eax
  420f99:	xchg   ebx,eax
  420f9a:	je     0x420f64
  420f9c:	and    al,0x95
  420f9e:	mov    bl,0xb3
  420fa0:	daa    
  420fa1:	rol    eax,0xa5
  420fa4:	or     DWORD PTR [edi+0x289e6024],eax
  420faa:	xor    al,BYTE PTR [edi]
  420fac:	xchg   edx,eax
  420fad:	gs retf 
  420faf:	xor    ebx,edi
  420fb1:	add    ebx,DWORD PTR [eax-0x7388e321]
  420fb7:	popa   
  420fb8:	xchg   edi,eax
  420fb9:	jb     0x420ff6
  420fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fbc:	mov    dh,0x81
  420fbe:	and    BYTE PTR [esi+0x11aa54b4],0x6e
  420fc5:	in     eax,0x7d
  420fc7:	adc    al,0x64
  420fc9:	xor    bh,BYTE PTR [edi-0x4b257b02]
  420fcf:	retf   
  420fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd1:	les    ecx,FWORD PTR [ebx-0x7f]
  420fd4:	mov    eax,DWORD PTR [ebx]
  420fd6:	cmp    edx,DWORD PTR [edi]
  420fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fd9:	(bad)  
  420fda:	shl    BYTE PTR [esi],1
  420fdc:	cmc    
  420fdd:	push   ebp
  420fde:	mov    dl,0x4e
  420fe0:	scas   al,BYTE PTR es:[edi]
  420fe1:	sub    BYTE PTR [ecx+esi*2-0x3b],ch
  420fe5:	out    0xac,eax
  420fe7:	aad    0x99
  420fe9:	loope  0x420f95
  420feb:	dec    ebp
  420fec:	push   eax
  420fed:	pop    edx
  420fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fef:	push   cs
  420ff0:	fs jno 0x420f9c
  420ff3:	pop    ebp
  420ff4:	sti    
  420ff5:	sub    DWORD PTR [edx+0xc728a10],ebp
  420ffb:	aas    
  420ffc:	pop    ebp
  420ffd:	cwde   
  420ffe:	fisub  WORD PTR [ebx*1-0x21cadf7e]
  421005:	popf   
  421006:	cld    
  421007:	add    DWORD PTR [ecx-0x7f372625],ebx
  42100d:	pop    edx
  42100e:	push   esp
  42100f:	jo     0x421023
  421011:	dec    eax
  421012:	lock imul ebp,edi,0x6ac17f63
  421019:	arpl   WORD PTR [eax],cx
  42101b:	pop    edi
  42101c:	nop
  42101d:	fwait
  42101e:	js     0x421003
  421020:	out    0xc9,eax
  421022:	jl     0x420fe3
  421024:	or     al,0xd3
  421026:	stos   DWORD PTR es:[edi],eax
  421027:	in     eax,dx
  421028:	lea    ebx,[ebx]
  42102a:	fimul  WORD PTR [ecx-0x65cf1462]
  421030:	mov    edi,0x246256c9
  421035:	mov    eax,gs:0xfea9ab3e
  42103b:	lock jg 0x42104d
  42103e:	popa   
  42103f:	add    BYTE PTR [edx+0x4f41e3fd],al
  421045:	mov    esi,0x5211a9db
  42104a:	cli    
  42104b:	push   ds
  42104c:	cmp    eax,0x3e96d5e9
  421051:	pop    ss
  421052:	fcmovne st,st(3)
  421054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421055:	(bad)  
  421056:	stos   DWORD PTR es:[edi],eax
  421057:	sbb    esp,ecx
  421059:	mov    ebp,0x70786979
  42105e:	sbb    edi,DWORD PTR ds:[edx-0x31]
  421062:	cld    
  421063:	xor    edx,DWORD PTR [eax+ecx*4+0x18]
  421067:	jmp    0xbf8c:0xd25b423a
  42106e:	in     al,dx
  42106f:	cli    
  421070:	dec    edi
  421071:	sti    
  421072:	daa    
  421073:	xor    DWORD PTR [ebp+0x36],edx
  421076:	mov    ch,0xac
  421078:	aad    0xe4
  42107a:	test   eax,0xf0b60a66
  42107f:	fmul   DWORD PTR [edx]
  421081:	dec    ecx
  421082:	enter  0x3f33,0x16
  421086:	popa   
  421087:	mul    DWORD PTR [edi+0x40f9a612]
  42108d:	fisubr WORD PTR [edi]
  42108f:	adc    BYTE PTR [ebx-0x1e],cl
  421092:	out    dx,eax
  421093:	push   edx
  421094:	xor    edx,DWORD PTR [edi-0x27]
  421097:	xor    bl,BYTE PTR [esi+0x4e]
  42109a:	mov    ah,BYTE PTR [edi-0x4cd35ff6]
  4210a0:	xor    WORD PTR gs:[esi-0x4fe411d6],cx
  4210a8:	adc    DWORD PTR [esi+0x3d],0xc630eed0
  4210af:	stos   BYTE PTR es:[edi],al
  4210b0:	retf   0xf5e0
  4210b3:	add    al,0xe4
  4210b5:	add    DWORD PTR fs:[eax+0x58],ecx
  4210b9:	mov    al,0xf3
  4210bb:	mov    ecx,0x52c0259f
  4210c0:	mov    eax,ds:0x9e212fa5
  4210c5:	sbb    ebx,DWORD PTR [edx]
  4210c7:	fisubr DWORD PTR [edx]
  4210c9:	and    bl,BYTE PTR [ecx]
  4210cb:	into   
  4210cc:	add    BYTE PTR [ebp+0x767c2467],al
  4210d2:	sub    BYTE PTR [ebp-0x3c],cl
  4210d5:	outs   dx,DWORD PTR ds:[esi]
  4210d6:	repnz cmp ah,dl
  4210d9:	inc    edi
  4210da:	cli    
  4210db:	in     eax,0x6b
  4210dd:	mov    ebp,0x8c4e8849
  4210e2:	push   esi
  4210e3:	clc    
  4210e4:	ins    BYTE PTR es:[edi],dx
  4210e5:	mov    cl,0x4d
  4210e7:	adc    eax,0x26bf4369
  4210ec:	adc    eax,0x7be955da
  4210f1:	(bad)  
  4210f2:	retf   
  4210f3:	arpl   WORD PTR [ebx+0x3f0a7033],bp
  4210f9:	in     al,0x9
  4210fb:	leave  
  4210fc:	xchg   esi,eax
  4210fd:	mov    cl,0xa1
  4210ff:	or     al,0xfb
  421101:	imul   ebp,esp,0xa16f7917
  421107:	xor    cl,BYTE PTR [ecx-0x70]
  42110a:	(bad)  ds:0x1b321be
  421110:	pusha  
  421111:	aad    0x72
  421113:	pop    es
  421114:	icebp  
  421115:	xor    BYTE PTR [ecx],cl
  421117:	rcr    edi,0x78
  42111a:	outs   dx,DWORD PTR ds:[esi]
  42111b:	ds dec esi
  42111d:	push   ds
  42111e:	mov    ds:0x3ddfe227,eax
  421123:	add    esp,ebp
  421125:	mov    ch,0x17
  421127:	sbb    DWORD PTR [edi-0x507fe91e],0x1c
  42112e:	rol    DWORD PTR [edi],1
  421130:	adc    DWORD PTR [ebx-0x32635aba],ebp
  421136:	mov    ch,0xa4
  421138:	imul   ebp,DWORD PTR [ebp+0xfc9d1ba],0x77
  42113f:	mov    edx,0x81969def
  421144:	push   ecx
  421145:	mov    edx,0xf5a58744
  42114a:	cli    
  42114b:	mov    ah,0x19
  42114d:	sub    bl,bh
  42114f:	inc    ebp
  421150:	aad    0x94
  421152:	aad    0x6
  421154:	inc    ecx
  421155:	push   esp
  421156:	arpl   WORD PTR [edi+0x45],di
  421159:	push   edx
  42115a:	(bad)  
  42115b:	fcmovne st,st(7)
  42115d:	out    0xde,eax
  42115f:	or     bl,BYTE PTR [edi+0x13ff0a75]
  421165:	adc    al,0xe
  421167:	mov    dh,0x19
  421169:	xchg   DWORD PTR [ebp+0x10306818],ebx
  42116f:	or     eax,0x2eb52211
  421174:	jb     0x4211b5
  421176:	mov    dl,0xfa
  421178:	in     eax,dx
  421179:	pop    ss
  42117a:	ins    DWORD PTR es:[edi],dx
  42117b:	fcom   DWORD PTR [ebx+0xb1]
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [edx+0x15],dl
  421190:	frstor [ebx]
  421192:	mov    ebp,0xf400018b
  421197:	add    al,0x0
  421199:	add    BYTE PTR [esi+0x19],cl
  42119c:	and    esi,DWORD PTR [ebp+0x5e]
  42119f:	call   0x41e0a176
  4211a4:	mov    ecx,0x4b6340d2
  4211a9:	lahf   
  4211aa:	lds    edx,FWORD PTR [edi-0x2e0769b4]
  4211b0:	icebp  
  4211b1:	mov    al,ds:0xe96ebf98
  4211b6:	mov    bl,0xd5
  4211b8:	data16 jg 0x4211bb
  4211bb:	sub    eax,0xe76c379e
  4211c0:	add    ch,bh
  4211c2:	ins    BYTE PTR es:[edi],dx
  4211c3:	cs cmp ah,BYTE PTR cs:[edx]
  4211c7:	mov    ebp,0xc0440b8c
  4211cc:	sbb    cl,BYTE PTR [esi-0x75a53956]
  4211d2:	mov    WORD PTR [eax+ecx*4-0x36],fs
  4211d6:	mov    eax,0x1dd83c6e
  4211db:	pop    ebp
  4211dc:	hlt    
  4211dd:	push   0xffffffd5
  4211df:	sbb    al,0x92
  4211e1:	push   esp
  4211e2:	adc    al,0x7
  4211e4:	leave  
  4211e5:	jl     0x421264
  4211e7:	inc    ebx
  4211e8:	lock dec edi
  4211ea:	mov    DWORD PTR [eax-0x74],esi
  4211ed:	or     eax,0xbd1b7948
  4211f2:	add    DWORD PTR [edi],edi
  4211f4:	mov    bl,0xfe
  4211f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f7:	leave  
  4211f8:	dec    edi
  4211f9:	in     al,dx
  4211fa:	push   ebx
  4211fb:	lods   eax,DWORD PTR ds:[esi]
  4211fc:	sub    BYTE PTR [ecx+0x72],0x99
  421200:	(bad)  
  421201:	in     al,0xd4
  421203:	in     eax,dx
  421204:	ret    
  421205:	pop    esi
  421206:	sbb    eax,0x13a56205
  42120b:	sar    DWORD PTR [eax-0x5a],0x49
  42120f:	cdq    
  421210:	call   0x305:0x2e651fd1
  421217:	mov    gs,esp
  421219:	sbb    al,0x2e
  42121b:	sub    esi,DWORD PTR [esi]
  42121d:	sbb    al,0x98
  42121f:	push   edx
  421220:	and    BYTE PTR [ecx+0x76e4f75a],bl
  421226:	ss or  eax,0x3449f83f
  42122c:	arpl   ax,si
  42122e:	lock iret 
  421230:	pop    edx
  421231:	addr16 gs sbb al,0x14
  421235:	dec    esp
  421236:	fs inc edx
  421238:	mov    edi,0x98f64a57
  42123d:	or     esp,DWORD PTR [eax+0x25]
  421240:	push   esp
  421241:	push   ecx
  421242:	mov    dl,0xf
  421244:	je     0x421205
  421246:	inc    edi
  421247:	pop    es
  421248:	push   ss
  421249:	and    esp,DWORD PTR [edi]
  42124b:	and    eax,0x235cb8ef
  421250:	loopne 0x421228
  421252:	out    0x11,eax
  421254:	loopne 0x42121b
  421256:	mov    bl,0x28
  421258:	sar    dl,cl
  42125a:	outs   dx,DWORD PTR ds:[esi]
  42125b:	xlat   BYTE PTR ds:[ebx]
  42125c:	adc    cl,BYTE PTR [ecx]
  42125e:	push   ecx
  421260:	mov    edi,0xd60a5336
  421265:	adc    bl,ch
  421267:	cld    
  421268:	mov    bh,0x93
  42126a:	xor    edx,DWORD PTR [edx-0x52]
  42126d:	sub    BYTE PTR [esi+0x17],bl
  421270:	out    0x46,al
  421272:	and    dl,cl
  421274:	jl     0x421216
  421276:	aaa    
  421277:	pop    ss
  421278:	pop    ecx
  421279:	pusha  
  42127a:	xchg   edx,eax
  42127b:	inc    esp
  42127c:	jecxz  0x421216
  42127e:	fdiv   st,st(7)
  421280:	inc    ebx
  421281:	jno    0x4212c1
  421283:	or     al,cl
  421285:	ret    0x4007
  421288:	fs xchg esi,eax
  42128a:	xor    ebp,ecx
  42128c:	in     eax,0xdc
  42128e:	and    eax,0xc57a267
  421293:	das    
  421294:	sub    bl,BYTE PTR [esi-0x3a215149]
  42129a:	in     al,dx
  42129b:	scas   eax,DWORD PTR es:[edi]
  42129c:	mov    ecx,0x325ef8c6
  4212a1:	jb     0x421250
  4212a3:	cmp    dl,al
  4212a5:	pop    eax
  4212a6:	jecxz  0x42123b
  4212a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a9:	cli    
  4212aa:	js     0x421293
  4212ac:	sub    al,0x4e
  4212ae:	mov    cl,0x54
  4212b0:	aaa    
  4212b1:	out    dx,eax
  4212b2:	push   edx
  4212b3:	and    bl,BYTE PTR [ebp+edx*2+0x7588cd10]
  4212ba:	xchg   esi,eax
  4212bb:	adc    BYTE PTR [edx+ebp*2],bl
  4212be:	cs ds or cl,bl
  4212c2:	inc    edi
  4212c3:	jo     0x4212dd
  4212c5:	call   0x860c:0xd42ce46f
  4212cc:	fimul  DWORD PTR gs:[esi]
  4212cf:	push   0xb1878107
  4212d4:	cmp    eax,0xf4cd1caa
  4212d9:	cs popf 
  4212db:	jl     0x42134f
  4212dd:	sar    BYTE PTR [ecx+0x3be66732],0x17
  4212e4:	(bad)  
  4212e5:	pop    edi
  4212e6:	repz cdq 
  4212e8:	inc    eax
  4212e9:	in     al,0x33
  4212eb:	jg     0x421368
  4212ed:	fbld   TBYTE PTR [ecx-0x10826d5c]
  4212f3:	inc    ebx
  4212f4:	test   eax,0xa961ea2e
  4212f9:	cmp    eax,0x98728831
  4212fe:	mov    ecx,0xb4cf786c
  421303:	xor    edi,eax
  421305:	mov    BYTE PTR [ecx],cl
  421307:	push   ebp
  421308:	pop    es
  421309:	mov    bh,0x6
  42130b:	arpl   WORD PTR [edi+eax*2+0x62],ax
  42130f:	xor    bl,al
  421311:	cmc    
  421312:	enter  0x4d43,0x58
  421316:	int    0x1
  421318:	ret    0x8dab
  42131b:	pop    ecx
  42131c:	cwde   
  42131d:	(bad)  
  42131f:	add    esp,ebx
  421321:	or     esp,DWORD PTR [ebx-0x9d90c7]
  421327:	mov    ebx,0xfdff832e
  42132c:	rcr    BYTE PTR [ecx-0x1b],1
  42132f:	sbb    BYTE PTR [ebx+ebx*2+0x5fe79a77],ah
  421336:	hlt    
  421337:	ror    DWORD PTR [edi],0xfe
  42133a:	mov    ebx,0xdad83f04
  42133f:	fs and al,0x14
  421342:	adc    eax,0x98269a5a
  421347:	rcl    DWORD PTR [esi],1
  421349:	test   BYTE PTR [edi],bl
  42134b:	sub    eax,0x19aa052d
  421350:	sti    
  421351:	pusha  
  421352:	xor    al,0x75
  421354:	fidiv  WORD PTR ds:0x4df1e724
  42135a:	ds hlt 
  42135c:	enter  0xdb3e,0x88
  421360:	ss pop edi
  421362:	fld    QWORD PTR [ebp+0x6af8b943]
  421368:	push   edi
  421369:	leave  
  42136a:	popa   
  42136b:	pop    esi
  42136c:	loop   0x42134d
  42136e:	vpunpckldq ymm1,ymm7,ymm3
  421372:	and    DWORD PTR [ebx+0xab63e63],esi
  421378:	xor    al,0xc8
  42137a:	stos   BYTE PTR es:[edi],al
  42137b:	popa   
  42137c:	loop   0x421377
  42137e:	sub    BYTE PTR es:[eax+edi*2+0x65],dl
  421383:	rcr    WORD PTR [esi+0x30a54a52],0xee
  42138b:	push   esp
  42138c:	gs push ebx
  42138e:	fnsave [esi+0x4e]
  421391:	popf   
  421392:	xchg   ecx,eax
  421393:	sub    eax,ecx
  421395:	lods   al,BYTE PTR ds:[esi]
  421396:	xor    esp,DWORD PTR ds:0x5505cf37
  42139c:	ds mov esi,0x20edde34
  4213a2:	jns    0x42135b
  4213a4:	pop    ebx
  4213a5:	push   ebp
  4213a6:	pop    es
  4213a7:	call   0x8b10:0xcda3b0c9
  4213ae:	iret   
  4213af:	xchg   DWORD PTR [eax],ebp
  4213b1:	push   eax
  4213b2:	xor    edx,DWORD PTR [ebx-0x3f]
  4213b5:	cld    
  4213b6:	into   
  4213b7:	mov    dh,0xac
  4213b9:	adc    eax,DWORD PTR [edx-0x19dda653]
  4213bf:	push   ds
  4213c0:	stos   DWORD PTR es:[edi],eax
  4213c1:	add    dh,BYTE PTR ds:0xbcb1a6aa
  4213c7:	ins    DWORD PTR es:[edi],dx
  4213c8:	iret   
  4213c9:	mov    ebx,0x4279fb33
  4213ce:	(bad)
  4213d2:	xor    DWORD PTR [ebx-0x5e],edx
  4213d5:	and    eax,0x5f653f86
  4213da:	test   esp,0x9870cf67
  4213e0:	das    
  4213e1:	retf   
  4213e2:	mov    ch,0x4f
  4213e4:	addr16 inc eax
  4213e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e7:	mov    WORD PTR [edi-0x6e],gs
  4213ea:	ret    0xd335
  4213ed:	mov    edi,ss
  4213ef:	das    
  4213f0:	mov    ds:0x5c5dd995,eax
  4213f5:	mov    ?,eax
  4213f7:	fiadd  DWORD PTR [ebx+0x16]
  4213fa:	push   ss
  4213fb:	add    esp,DWORD PTR [ebp+0x65]
  4213fe:	and    DWORD PTR [esp+ecx*4],eax
  421401:	xchg   ebp,eax
  421402:	jmp    0x4213e4
  421404:	xchg   esp,eax
  421405:	jmp    0xc9f4:0x451b676d
  42140c:	(bad)  
  42140d:	aad    0xe4
  42140f:	cwde   
  421410:	sub    BYTE PTR [edi],cl
  421412:	jnp    0x42141d
  421414:	push   ebx
  421415:	mov    esp,0x55ef8c08
  42141a:	mov    ecx,0xbd7bc6a
  42141f:	xchg   ebx,eax
  421420:	mov    esp,0xe6a6e712
  421425:	xchg   esi,eax
  421426:	push   cs
  421427:	add    ah,ch
  421429:	int    0x75
  42142b:	sub    bl,ah
  42142d:	shl    DWORD PTR [edx],0x75
  421430:	pop    esp
  421431:	in     eax,dx
  421432:	pop    edi
  421433:	and    eax,0x653cd640
  421438:	pop    ebx
  421439:	xchg   esp,eax
  42143a:	inc    eax
  42143b:	mov    al,BYTE PTR [esi+0x1a382ea9]
  421441:	xchg   DWORD PTR [eax],eax
  421443:	cmp    al,0x4a
  421445:	fist   WORD PTR gs:[ebp+0x35]
  421449:	gs or  eax,0x323c8715
  42144f:	pop    esp
  421450:	es inc ebp
  421452:	adc    esi,DWORD PTR [esi-0xa29ce05]
  421458:	es jle 0x4213f6
  42145b:	sub    DWORD PTR [esi],esp
  42145d:	lods   eax,DWORD PTR ds:[esi]
  42145e:	sbb    ebx,DWORD PTR [ebp+0x3f]
  421461:	sbb    DWORD PTR [edx],0x7a2a1dc3
  421467:	out    dx,eax
  421468:	ja     0x421454
  42146a:	mov    esi,0xbc40a90a
  42146f:	mov    bh,0xb8
  421471:	and    BYTE PTR [eax+ecx*4-0x6d3ea848],0x3f
  421479:	adc    ah,bl
  42147b:	nop
  42147c:	addr16 pop edi
  42147e:	fisubr DWORD PTR [ebx]
  421480:	frstor [edi+0x627fd983]
  421486:	cld    
  421487:	adc    eax,eax
  421489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42148a:	sahf   
  42148b:	dec    esp
  42148c:	test   eax,0xda6fb8aa
  421491:	sbb    BYTE PTR ds:0xb58041a,cl
  421497:	xlat   BYTE PTR ds:[ebx]
  421498:	icebp  
  421499:	lods   al,BYTE PTR ds:[esi]
  42149a:	xchg   DWORD PTR [edi+ebx*2-0x50164592],ebx
  4214a1:	xchg   BYTE PTR [ecx],al
  4214a3:	rol    bl,0x27
  4214a6:	retf   0x7047
  4214a9:	jbe    0x4214a7
  4214ab:	push   ebx
  4214ac:	push   edx
  4214ad:	add    al,0xda
  4214af:	int    0x86
  4214b1:	(bad)  
  4214b2:	icebp  
  4214b3:	mov    ?,esp
  4214b5:	or     cl,cl
  4214b7:	pop    es
  4214b8:	pop    es
  4214b9:	(bad)  
  4214ba:	push   edi
  4214bb:	(bad)  
  4214bd:	loope  0x4214d8
  4214bf:	outs   dx,DWORD PTR ds:[esi]
  4214c0:	add    eax,0xe033cc1c
  4214c5:	xchg   ebp,eax
  4214c6:	inc    eax
  4214c7:	jle    0x421538
  4214c9:	push   0x22
  4214cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214cc:	jg     0x4214c8
  4214ce:	dec    edx
  4214cf:	xor    dl,BYTE PTR [edi]
  4214d1:	mov    ebx,0xc563e0fd
  4214d6:	fmul   DWORD PTR [esi+0x4f]
  4214d9:	sub    eax,0x2c4e30e7
  4214de:	add    DWORD PTR [ecx+0x648ff0fb],0xffffffc2
  4214e5:	out    0x9a,eax
  4214e7:	jg     0x4214d2
  4214e9:	mov    ah,BYTE PTR [edi+0x38]
  4214ec:	adc    al,0xce
  4214ee:	mov    ah,0xcc
  4214f0:	jns    0x4214d7
  4214f2:	test   BYTE PTR [ebx-0xcf99d08],bl
  4214f8:	iret   
  4214f9:	dec    ebx
  4214fa:	mov    al,al
  4214fc:	cmc    
  4214fd:	and    eax,0x2fb4299c
  421502:	addr16 xchg esp,eax
  421504:	outs   dx,DWORD PTR ds:[esi]
  421505:	js     0x421496
  421507:	xchg   esi,eax
  421508:	xor    ecx,eax
  42150a:	or     DWORD PTR [esi+ebp*8+0x7],ebx
  42150e:	xchg   edi,eax
  42150f:	inc    ebp
  421510:	cwde   
  421511:	add    al,0x41
  421513:	mov    eax,ds:0xd00cbc18
  421518:	xor    al,0xd2
  42151a:	test   BYTE PTR ds:0xdf70f737,cl
  421520:	rcl    ebp,0x25
  421523:	jmp    0xbc38b995
  421528:	cmp    eax,0x1b1e4249
  42152d:	pop    ebp
  42152e:	sub    al,dh
  421530:	fsub   DWORD PTR [esi]
  421532:	pushf  
  421533:	jmp    0xfffe9d2b
  421538:	retf   
  421539:	aam    0x99
  42153b:	jo     0x42157e
  42153d:	inc    edi
  42153e:	push   ds
  42153f:	cmc    
  421540:	mov    edx,0x45afc92b
  421545:	or     eax,0xfef3a014
  42154a:	dec    ecx
  42154b:	inc    edi
  42154c:	sbb    al,0x9c
  42154e:	mov    edi,0x6146927
  421553:	xchg   edi,eax
  421554:	fwait
  421555:	jno    0x4214f8
  421557:	sbb    al,0x82
  421559:	pop    ss
  42155a:	shr    DWORD PTR [ecx+0x564f692],cl
  421560:	fistp  QWORD PTR [eax]
  421562:	arpl   bp,di
  421564:	xchg   edi,eax
  421565:	pop    ecx
  421566:	xlat   BYTE PTR ds:[ebx]
  421567:	xor    ebx,DWORD PTR [esi+0x7572f20d]
  42156d:	push   es
  42156e:	es jle 0x4215ef
  421571:	jns    0x421573
  421573:	adc    bh,0x8e
  421576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421577:	cdq    
  421578:	dec    ebp
  421579:	es std 
  42157b:	shl    DWORD PTR [ebx-0x1],cl
  42157e:	mov    eax,ds:0x52476e7d
  421583:	dec    esi
  421584:	jle    0x421550
  421586:	hlt    
  421587:	addr16 xchg ebx,eax
  421589:	and    eax,0x9de0d96
  42158e:	mov    bl,0xd7
  421590:	sbb    dh,BYTE PTR [eax]
  421592:	test   eax,0x1a6861ed
  421597:	ficomp DWORD PTR [ebx]
  421599:	push   DWORD PTR [edi]
  42159b:	sbb    al,0x30
  42159d:	mov    ch,0xc6
  42159f:	ds xchg ebx,eax
  4215a1:	stc    
  4215a2:	sbb    BYTE PTR [edx-0x4c],ch
  4215a5:	lock sti 
  4215a7:	call   0xe8cca45a
  4215ac:	sub    eax,0x434f524f
  4215b1:	adc    al,0xb2
  4215b3:	icebp  
  4215b4:	jb     0x42156f
  4215b6:	hlt    
  4215b7:	push   ebp
  4215b8:	lahf   
  4215b9:	shl    DWORD PTR [edi-0x24],1
  4215bc:	jle    0x421546
  4215be:	adc    DWORD PTR [eax-0x28],ecx
  4215c1:	push   ebx
  4215c2:	sbb    eax,DWORD PTR [ebp-0x29]
  4215c5:	cwde   
  4215c6:	rcl    DWORD PTR [ebx+0x1629c5bc],0xb7
  4215cd:	ja     0x4215b4
  4215cf:	jp     0x421591
  4215d1:	shl    DWORD PTR [edx-0x625ca832],cl
  4215d7:	cwde   
  4215d8:	cli    
  4215d9:	sub    al,0xf3
  4215db:	arpl   WORD PTR [eax+0x14],ax
  4215de:	imul   ebx,DWORD PTR [esi+0x26],0x55
  4215e2:	mov    bl,0x54
  4215e4:	int3   
  4215e5:	jne    0x4215ac
  4215e7:	fld    TBYTE PTR [eax]
  4215e9:	outs   dx,DWORD PTR ds:[esi]
  4215ea:	push   ebx
  4215eb:	(bad)  
  4215ec:	push   ds
  4215ed:	and    DWORD PTR [edi+0x7be7e520],0x18
  4215f4:	cmp    DWORD PTR [ecx-0x54],esp
  4215f7:	fld    QWORD PTR [esp+esi*2-0x9]
  4215fb:	(bad)  
  4215fd:	xchg   BYTE PTR [eax-0x5],dh
  421600:	jns    0x421591
  421602:	xchg   ecx,eax
  421603:	lods   eax,DWORD PTR ds:[esi]
  421604:	jb     0x42164b
  421606:	lods   al,BYTE PTR ds:[esi]
  421607:	and    eax,0x1e821509
  42160c:	cli    
  42160d:	mov    ds:0x1f940379,al
  421612:	push   ds
  421613:	pop    edx
  421614:	shl    DWORD PTR [edx],1
  421616:	jl     0x42162e
  421618:	sub    ecx,DWORD PTR es:[esi]
  42161b:	and    dh,ah
  42161d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42161f:	push   edi
  421620:	sub    dl,BYTE PTR [esi+0x7f]
  421623:	jo     0x4215ca
  421625:	mov    ebx,0x6eaf7b86
  42162a:	bound  edi,QWORD PTR [eax+ebx*8-0x3fb7445d]
  421631:	sub    eax,0xea800025
  421636:	jns    0x4215e9
  421638:	loop   0x421612
  42163a:	popa   
  42163b:	sbb    eax,0xdbad17bd
  421640:	sbb    ch,BYTE PTR [edi+0xc640a20]
  421646:	adc    eax,0xda6e836b
  42164b:	mov    ds:0x8ad1e376,al
  421650:	push   ss
  421651:	dec    ebp
  421652:	dec    edi
  421653:	fst    QWORD PTR [ebp-0x6d4f3313]
  421659:	pop    edx
  42165a:	into   
  42165b:	mov    ?,WORD PTR [ebp+0x1f]
  42165e:	loopne 0x421685
  421660:	add    edx,edx
  421662:	sbb    al,0x60
  421664:	out    dx,al
  421665:	jecxz  0x4216a7
  421667:	enter  0xfc15,0xe3
  42166b:	addr16 dec edi
  42166d:	adc    BYTE PTR [ebp-0x27],al
  421670:	iret   
  421671:	xor    BYTE PTR [ebx-0x41],0xc5
  421675:	ins    DWORD PTR es:[edi],dx
  421676:	dec    edi
  421677:	mov    bh,0xb
  421679:	mov    ecx,0x29f5b490
  42167e:	or     al,0x14
  421680:	cmp    dl,cl
  421682:	(bad)  
  421683:	ins    DWORD PTR es:[edi],dx
  421684:	cmp    eax,ecx
  421686:	imul   eax,DWORD PTR [edx],0x71
  421689:	mov    esp,0x2787c5b2
  42168e:	add    BYTE PTR [eax],al
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x20fa83c6
  4216a1:	outs   dx,DWORD PTR ds:[esi]
  4216a2:	mov    cl,0x90
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	hlt    
  4216a7:	add    al,0x0
  4216a9:	add    al,ah
  4216ab:	test   DWORD PTR [edi-0x22],edx
  4216ae:	imul   eax,DWORD PTR [ebp+0x3b090228],0x30
  4216b5:	fnstenv [ebx]
  4216b7:	sub    DWORD PTR [eax+0x250ab37e],ecx
  4216bd:	push   esp
  4216be:	xchg   edi,eax
  4216bf:	jnp    0x4216c1
  4216c1:	xor    al,0x1b
  4216c3:	popa   
  4216c4:	jb     0x4216f7
  4216c6:	xchg   esp,edi
  4216c8:	mov    ds:0x24d61940,eax
  4216cd:	arpl   WORD PTR [ebx+eiz*2+0x6d37855],sp
  4216d4:	ds mov ecx,0x55c1ee0
  4216da:	inc    edi
  4216db:	dec    ecx
  4216dc:	add    DWORD PTR [ecx],edx
  4216de:	adc    ebp,DWORD PTR [esi-0x7a]
  4216e1:	aad    0x9d
  4216e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e4:	sbb    al,0x9c
  4216e6:	inc    edi
  4216e7:	scas   eax,DWORD PTR es:[edi]
  4216e8:	sbb    DWORD PTR [edi],edx
  4216ea:	inc    edx
  4216eb:	fstp   DWORD PTR [esi-0x1c37b2cf]
  4216f1:	les    esi,FWORD PTR [edx-0x68]
  4216f4:	cmp    DWORD PTR [eax+0x31],esi
  4216f7:	mov    edi,0x6bd40cd8
  4216fc:	(bad)  
  4216fd:	jg     0x4216b2
  4216ff:	push   es
  421700:	jbe    0x4216ad
  421702:	xchg   ebp,eax
  421703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421704:	xchg   ch,bl
  421706:	arpl   WORD PTR [edx+0x220b0b77],si
  42170c:	jp     0x42173f
  42170e:	dec    edx
  42170f:	outs   dx,DWORD PTR ds:[esi]
  421710:	aas    
  421711:	js     0x42173a
  421713:	sbb    edi,edi
  421715:	test   BYTE PTR [eax+0x59],0xfe
  421719:	jo     0x421769
  42171b:	and    eax,0xb19bb668
  421720:	sbb    ebp,edx
  421722:	xchg   ebx,eax
  421723:	lock cmp BYTE PTR [eax-0x6c],0xe2
  421728:	outs   dx,BYTE PTR ds:[esi]
  421729:	push   edi
  42172a:	je     0x4216be
  42172c:	retf   
  42172d:	xlat   BYTE PTR ds:[ebx]
  42172e:	adc    dh,0xcf
  421731:	in     al,0x1b
  421733:	in     al,dx
  421734:	or     DWORD PTR [esi+0x60],ebx
  421737:	les    ebp,FWORD PTR [esp+eax*4-0x4b8cc19e]
  42173e:	sbb    DWORD PTR [eax-0x7d],edi
  421741:	loopne 0x421778
  421743:	scas   al,BYTE PTR es:[edi]
  421744:	or     al,0x73
  421746:	popa   
  421747:	aaa    
  421748:	in     al,dx
  421749:	or     DWORD PTR [esi],ebx
  42174b:	xchg   ecx,eax
  42174c:	xor    DWORD PTR [esi-0x70],0x57ac19d0
  421753:	fs (bad) 
  421755:	loopne 0x42170e
  421757:	push   0xffffffbe
  421759:	fstp   QWORD PTR [ecx+ecx*2]
  42175c:	jecxz  0x421789
  42175e:	pop    ecx
  42175f:	push   es
  421760:	or     BYTE PTR [ecx+ebx*8-0x4f],ah
  421764:	ins    DWORD PTR es:[edi],dx
  421765:	in     al,dx
  421766:	(bad)  
  421767:	ds out 0xb,eax
  42176a:	mov    ecx,0x8b806a92
  42176f:	ja     0x4217b5
  421771:	or     ecx,eax
  421773:	ja     0x4217c8
  421775:	mov    ecx,0xe0eb3d7a
  42177a:	pop    es
  42177b:	mov    esi,0xaccd6165
  421780:	jbe    0x4217ce
  421782:	sub    al,BYTE PTR [ebp-0x40]
  421785:	or     eax,0x49eeb2f2
  42178a:	mov    DWORD PTR [esi],0xdd0cdd8
  421790:	cld    
  421791:	test   eax,0xc9d27c37
  421796:	xchg   edx,eax
  421797:	icebp  
  421798:	mov    bh,0x89
  42179a:	ins    DWORD PTR es:[edi],dx
  42179b:	jle    0x42177e
  42179d:	push   edi
  42179e:	das    
  42179f:	loope  0x421747
  4217a1:	pop    ebp
  4217a2:	cmc    
  4217a3:	stos   DWORD PTR es:[edi],eax
  4217a4:	out    dx,eax
  4217a5:	mov    BYTE PTR [ecx-0x78],ah
  4217a8:	pop    eax
  4217a9:	or     ebx,DWORD PTR [esi]
  4217ab:	xor    al,0x4d
  4217ad:	jge    0x4217f4
  4217af:	into   
  4217b0:	ins    DWORD PTR es:[edi],dx
  4217b1:	mov    esp,0x37304475
  4217b6:	cmp    DWORD PTR [ebp-0x43],esi
  4217b9:	xchg   ebx,eax
  4217ba:	aad    0x13
  4217bc:	outs   dx,DWORD PTR ds:[esi]
  4217bd:	add    BYTE PTR [ecx+0x67413db7],dl
  4217c3:	cmp    dl,ah
  4217c5:	es addr16 mov bl,0xf4
  4217c9:	ret    
  4217ca:	inc    ebp
  4217cb:	fwait
  4217cc:	jge    0x42174f
  4217ce:	xchg   esp,ecx
  4217d0:	dec    esi
  4217d1:	out    0xa7,al
  4217d3:	cmp    ecx,DWORD PTR [esi]
  4217d5:	shl    BYTE PTR ds:0x155ecaa3,1
  4217db:	call   0x9b41:0xc9256142
  4217e2:	dec    esi
  4217e3:	int    0x60
  4217e5:	pop    edx
  4217e6:	dec    eax
  4217e7:	(bad)  
  4217e8:	fimul  DWORD PTR [eax+0x68c769db]
  4217ee:	sub    eax,0x669b745c
  4217f3:	adc    ebp,DWORD PTR [eax]
  4217f5:	ror    BYTE PTR [esi],cl
  4217f7:	stos   BYTE PTR es:[edi],al
  4217f8:	out    0xef,eax
  4217fa:	cmp    eax,0x787544c0
  4217ff:	rcl    BYTE PTR [eax+0x741e4fd8],1
  421805:	dec    BYTE PTR [esi]
  421807:	test   eax,0x4d8c4a89
  42180c:	pop    DWORD PTR [ecx+0x32]
  42180f:	or     dl,BYTE PTR [esi]
  421811:	mov    dl,0xea
  421813:	adc    BYTE PTR [edx],dl
  421815:	pop    ds
  421816:	std    
  421817:	ret    0xbf09
  42181a:	test   DWORD PTR [esi+eax*2-0x38],esp
  42181e:	add    dx,di
  421821:	dec    ecx
  421822:	imul   esi,DWORD PTR [edx+0x19de8261],0xffffff9a
  421829:	and    ecx,eax
  42182b:	aad    0x12
  42182d:	or     eax,0x9403d809
  421832:	jns    0x4217bc
  421834:	imul   ecx,eax,0xffffffa3
  421837:	imul   edi,esi,0x3bbfba0a
  42183d:	dec    eax
  42183e:	cmp    edi,ebp
  421840:	sub    eax,0xbfcb45ef
  421845:	cld    
  421846:	int    0x24
  421848:	loop   0x421821
  42184a:	sbb    BYTE PTR [ebp+0x4d],cl
  42184d:	and    cl,dh
  42184f:	fsubp  st(0),st
  421851:	mov    ch,0xb9
  421853:	dec    esp
  421854:	add    BYTE PTR [edx+0x4e],bh
  421857:	push   ecx
  421858:	imul   esp,DWORD PTR [esi+ebx*8-0x71],0xe7ebe6b7
  421860:	jl     0x421839
  421862:	hlt    
  421863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421864:	xchg   DWORD PTR [edx+0x6d],esp
  421867:	add    dl,BYTE PTR [ebp+esi*4-0x4f4562b4]
  42186e:	add    al,0xbd
  421870:	and    al,0xa9
  421872:	fdivr  st,st(1)
  421874:	mov    DWORD PTR [ebx],eax
  421876:	xor    eax,0x42d90c93
  42187b:	inc    esp
  42187c:	outs   dx,BYTE PTR ds:[esi]
  42187d:	pop    eax
  42187e:	push   ebp
  42187f:	inc    ebx
  421880:	cld    
  421881:	inc    esi
  421882:	ins    DWORD PTR es:[edi],dx
  421883:	mov    ds:0x85ba148a,al
  421888:	ret    0x6622
  42188b:	inc    esp
  42188c:	jle    0x421816
  42188e:	jne    0x421812
  421890:	cdq    
  421891:	mov    ah,0x87
  421893:	sbb    esp,DWORD PTR [eax]
  421895:	loop   0x4218c7
  421897:	push   esp
  421898:	xor    cl,cl
  42189a:	dec    esp
  42189b:	xchg   DWORD PTR [edi-0x54],eax
  42189e:	jne    0x4218a1
  4218a0:	jl     0x42184f
  4218a2:	fdiv   DWORD PTR [eax+ebx*8-0x4a]
  4218a6:	pop    edi
  4218a7:	inc    edx
  4218a8:	pusha  
  4218a9:	xor    BYTE PTR [edi+ebx*1],dh
  4218ac:	xchg   DWORD PTR [eax+0x67],ebp
  4218af:	imul   edx,DWORD PTR [edi-0x5ff870f1],0x3b8050e5
  4218b9:	cmc    
  4218ba:	lds    edx,FWORD PTR [edx]
  4218bc:	enter  0x623f,0x4c
  4218c0:	mov    esi,DWORD PTR [ecx+esi*8-0x30]
  4218c4:	sub    BYTE PTR [ecx+0x18fb8ff7],bh
  4218ca:	dec    ebp
  4218cb:	xor    cl,BYTE PTR [edx]
  4218cd:	jl     0x42192e
  4218cf:	int3   
  4218d0:	inc    ebp
  4218d1:	mov    esi,0xc722496e
  4218d6:	adc    DWORD PTR [edx+eiz*2+0x5c0f03b9],edi
  4218dd:	lock leave 
  4218df:	mov    ch,0xcc
  4218e1:	xor    edx,DWORD PTR fs:[esi]
  4218e4:	aam    0x5c
  4218e6:	repnz sub eax,0xd7d367c5
  4218ec:	push   es
  4218ed:	add    eax,0xad64c931
  4218f2:	imul   ebx,esp,0xffffffd3
  4218f5:	outs   dx,BYTE PTR ds:[esi]
  4218f6:	jp     0x421916
  4218f8:	sahf   
  4218f9:	or     DWORD PTR [edx-0x706a20d3],edx
  4218ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421900:	pop    ebx
  421901:	into   
  421902:	sub    DWORD PTR [edi+0x4284575d],edi
  421908:	and    eax,0x76365240
  42190d:	retf   0x9395
  421910:	xor    eax,0xe25a1e3d
  421915:	push   ecx
  421916:	and    dh,BYTE PTR [ecx-0x72fb801]
  42191c:	xchg   esp,eax
  42191d:	aad    0xbb
  42191f:	and    edx,DWORD PTR [edi+edi*4]
  421922:	jl     0x421974
  421924:	sahf   
  421925:	test   DWORD PTR [ebx-0x1bb69bf],ebx
  42192b:	cmp    bl,BYTE PTR [eax+ebx*2+0x4c]
  42192f:	dec    ebx
  421930:	inc    ebx
  421931:	frstor [esi]
  421933:	and    esp,DWORD PTR [edx-0x1d]
  421936:	leave  
  421937:	dec    ecx
  421938:	iret   
  421939:	pop    ds
  42193a:	mov    bh,0xb9
  42193c:	pop    edi
  42193d:	addr16 jl 0x421961
  421940:	and    BYTE PTR ds:0x9f7bbe18,ah
  421946:	fidivr WORD PTR [ecx+0x57]
  421949:	js     0x421986
  42194b:	cmp    al,0xe6
  42194d:	cmp    al,0x9c
  42194f:	aas    
  421950:	push   ds
  421951:	call   FWORD PTR [eax-0x9d1748e]
  421957:	hlt    
  421958:	push   0x18
  42195a:	pop    edi
  42195b:	arpl   di,bp
  42195d:	mov    ds:0x86c28a24,eax
  421962:	nop
  421963:	jnp    0x4218ef
  421965:	je     0x421959
  421967:	test   eax,0x4e9a1952
  42196c:	jnp    0x42193c
  42196e:	loopne 0x421987
  421970:	mov    ebx,DWORD PTR ds:0xbfd65554
  421976:	aad    0x48
  421978:	out    0x72,al
  42197a:	push   0xb0e65a1c
  42197f:	int3   
  421980:	mov    dh,0x3c
  421982:	and    DWORD PTR [ecx+0x12],esi
  421985:	ficom  WORD PTR [edx-0x42]
  421988:	push   cs
  421989:	mov    edx,0xbe571200
  42198e:	xchg   esi,eax
  42198f:	fisubr WORD PTR [esi]
  421991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421992:	add    al,0xc4
  421994:	in     eax,0x60
  421996:	test   DWORD PTR [edx+0x158261f6],ebx
  42199c:	xchg   DWORD PTR [ecx-0x384f0b09],ecx
  4219a2:	daa    
  4219a3:	xchg   DWORD PTR ds:[esi+0x66],ebx
  4219a7:	hlt    
  4219a8:	fidivr WORD PTR es:[esi+eiz*4-0x7f]
  4219ad:	mov    ds,WORD PTR [ebp-0x6d]
  4219b0:	int    0xf5
  4219b2:	dec    ebp
  4219b3:	dec    edx
  4219b4:	jmp    0x421a2d
  4219b6:	inc    edx
  4219b7:	push   ecx
  4219b8:	rcl    DWORD PTR [edi+edx*8],cl
  4219bb:	mov    dl,0xb5
  4219bd:	cld    
  4219be:	dec    ebp
  4219bf:	jl     0x4219a7
  4219c1:	mov    esi,0x62580eb
  4219c6:	rcl    BYTE PTR [esi-0x350f1962],cl
  4219cc:	pop    es
  4219cd:	jns    0x4219fb
  4219cf:	in     eax,dx
  4219d0:	ret    0x1481
  4219d3:	out    0x16,al
  4219d5:	repz out 0x17,al
  4219d8:	les    ebp,FWORD PTR [esi-0x6d]
  4219db:	(bad)  [esi+esi*2-0x59d7e0a9]
  4219e2:	mov    dl,0x3b
  4219e4:	std    
  4219e5:	scas   eax,DWORD PTR es:[edi]
  4219e6:	test   bh,ch
  4219e8:	add    edi,0xf1a926ff
  4219ee:	test   DWORD PTR ds:0xd7b74e72,0x648a0b85
  4219f8:	ja     0x421a6f
  4219fa:	jp     0x421a50
  4219fc:	mov    WORD PTR [esi+0x234435ee],fs
  421a02:	push   esi
  421a03:	ins    DWORD PTR es:[edi],dx
  421a04:	jle    0x421a16
  421a06:	out    0xa4,eax
  421a08:	aas    
  421a09:	arpl   WORD PTR [edi+0x2e],si
  421a0c:	daa    
  421a0d:	int3   
  421a0e:	(bad)  
  421a0f:	sbb    DWORD PTR [esi-0x541dd52],0xb525528d
  421a19:	cdq    
  421a1a:	sbb    DWORD PTR [esi-0x2b],eax
  421a1d:	(bad)  
  421a1e:	jnp    0x4219db
  421a20:	sti    
  421a21:	fs popf 
  421a23:	add    al,0xe7
  421a25:	sbb    eax,0x6de84074
  421a2a:	jb     0x4219d1
  421a2c:	jl     0x4219ca
  421a2e:	sbb    eax,0xb22669e4
  421a33:	int3   
  421a34:	cdq    
  421a35:	sbb    eax,ecx
  421a37:	mov    edx,0x9f332f1e
  421a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a3d:	jb     0x4219ef
  421a3f:	xchg   ebp,eax
  421a40:	inc    ebp
  421a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a42:	mov    al,0x9a
  421a44:	dec    ebx
  421a45:	mov    ds:0xb417f9c8,eax
  421a4a:	and    al,0x18
  421a4c:	sub    al,0x6b
  421a4e:	daa    
  421a4f:	xchg   ebx,eax
  421a50:	jmp    0x421a74
  421a52:	dec    esi
  421a53:	inc    esp
  421a54:	push   ecx
  421a55:	je     0x421a20
  421a57:	mov    esi,0xee20e830
  421a5c:	pop    eax
  421a5d:	std    
  421a5e:	rol    BYTE PTR [edx-0x3],cl
  421a61:	in     al,dx
  421a62:	dec    eax
  421a63:	pop    ss
  421a64:	pushf  
  421a65:	call   0xf838:0x59fedd63
  421a6c:	lahf   
  421a6d:	fild   WORD PTR [eax]
  421a6f:	cli    
  421a70:	mov    bl,0x8b
  421a72:	aaa    
  421a73:	in     al,dx
  421a74:	fstp   DWORD PTR [esi-0x42]
  421a77:	cmp    eax,0xed6cd85a
  421a7c:	mov    ds:0xf48fae66,eax
  421a81:	push   ss
  421a82:	mov    ebp,0xf7a3f5ce
  421a87:	lahf   
  421a88:	pop    es
  421a89:	mov    ch,0x43
  421a8b:	mov    bl,bh
  421a8d:	test   al,0x41
  421a8f:	add    BYTE PTR [ecx+0x11],ch
  421a92:	dec    eax
  421a93:	and    eax,0xba824954
  421a98:	mov    eax,0x8bdcde10
  421a9d:	or     BYTE PTR [ebp-0x1cc36253],0x55
  421aa4:	xchg   ecx,edi
  421aa6:	jmp    0xf778:0x1e21b7ed
  421aad:	add    BYTE PTR [esp+eax*2-0x5876dc4d],dh
  421ab4:	repz fmul st,st(4)
  421ab7:	add    eax,0x38
  421aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421abb:	fwait
  421abc:	jo     0x421b37
  421abe:	shl    ebx,1
  421ac0:	add    DWORD PTR [ebp-0x51],ecx
  421ac3:	or     BYTE PTR [esi-0x6b],dl
  421ac6:	cmp    cl,BYTE PTR gs:[esi-0x63]
  421aca:	imul   ecx,DWORD PTR ds:0x484524e9,0xffffffea
  421ad1:	mov    bh,0x62
  421ad3:	add    ecx,DWORD PTR [ebx+ecx*1-0x71]
  421ad7:	xor    ebp,DWORD PTR [edx+0x2e]
  421ada:	mov    dl,0x7a
  421adc:	jge    0x421b16
  421ade:	push   eax
  421adf:	xor    al,0x70
  421ae1:	scas   eax,DWORD PTR es:[edi]
  421ae2:	int3   
  421ae3:	sbb    al,0x70
  421ae5:	sub    DWORD PTR [ebp+0x22],ebp
  421ae8:	cdq    
  421ae9:	ss push ecx
  421aeb:	mov    bl,0xc8
  421aed:	mov    ds:0x2a285f75,al
  421af2:	mov    ebp,0x4d2d798c
  421af7:	rcl    DWORD PTR [ebx+edx*8+0x3a],cl
  421afb:	push   es
  421afc:	inc    al
  421afe:	cmp    eax,0xec802c9
  421b03:	sbb    eax,0xf261c43d
  421b08:	ror    BYTE PTR [ecx+esi*8-0x57],1
  421b0c:	mov    ah,0xfa
  421b0e:	push   eax
  421b0f:	cdq    
  421b10:	ret    
  421b11:	lsl    eax,WORD PTR [ebp+0x3e]
  421b15:	xor    esp,DWORD PTR [edi-0x2d1dee21]
  421b1b:	xchg   ebx,eax
  421b1c:	mov    BYTE PTR [edi],dl
  421b1e:	je     0x421ab5
  421b20:	xchg   edi,eax
  421b21:	pushf  
  421b22:	cmp    al,0x9e
  421b24:	cmp    eax,0xb71545d1
  421b29:	in     eax,dx
  421b2a:	ss ror edi,0xc0
  421b2e:	mov    bl,0x30
  421b30:	push   ebp
  421b31:	ret    
  421b32:	imul   DWORD PTR [ecx-0x4a4ff74e]
  421b38:	test   al,0x2d
  421b3a:	jae    0x421b37
  421b3c:	arpl   WORD PTR [edx],dx
  421b3e:	mov    ebx,0xa9328bd9
  421b43:	mov    ah,0x15
  421b45:	adc    DWORD PTR [esi-0x52],edx
  421b48:	xchg   ebp,eax
  421b49:	loopne 0x421b44
  421b4b:	cmc    
  421b4c:	push   esp
  421b4d:	cmp    al,0xf9
  421b4f:	mov    ebx,0xfc53bd5c
  421b54:	push   eax
  421b55:	mov    esp,0x3846d8b7
  421b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b5b:	push   0xd9587a4b
  421b60:	rol    eax,1
  421b62:	mov    ds:0xc850bd66,al
  421b67:	ins    DWORD PTR es:[edi],dx
  421b68:	(bad)  
  421b69:	ins    BYTE PTR es:[edi],dx
  421b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b6b:	and    BYTE PTR [edi-0x6499aaf5],al
  421b71:	jns    0x421b14
  421b73:	(bad)  
  421b74:	stc    
  421b75:	test   DWORD PTR [eax+0x77642781],esi
  421b7b:	inc    esp
  421b7c:	out    dx,al
  421b7d:	test   al,0x0
  421b7f:	cmp    ch,bh
  421b81:	push   ebp
  421b82:	dec    ebp
  421b83:	das    
  421b84:	in     eax,0xbb
  421b86:	push   edx
  421b87:	int    0x6e
  421b89:	cmp    DWORD PTR [eax],0xffffffbb
  421b8c:	sub    DWORD PTR [eax-0x6a],edx
  421b8f:	xchg   ebp,eax
  421b90:	adc    DWORD PTR [edx+0x2188fbe0],esi
  421b96:	out    dx,eax
  421b97:	add    eax,0xd463577a
  421b9c:	xor    ah,BYTE PTR [ebp+0x0]
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0x611b:0x33770da0
  421bb1:	adc    DWORD PTR [ebp-0xbfffe6b],esp
  421bb7:	add    al,0x0
  421bb9:	add    BYTE PTR [ecx+ecx*2],al
  421bbc:	and    esp,0x8402b859
  421bc2:	leave  
  421bc3:	fsubr  DWORD PTR [edx+0x67939319]
  421bc9:	add    al,0xa6
  421bcb:	lock xchg edi,eax
  421bcd:	pop    ds
  421bce:	aam    0x4a
  421bd0:	popf   
  421bd1:	sti    
  421bd2:	loopne 0x421baf
  421bd4:	mov    dl,0x72
  421bd6:	ret    0x32f1
  421bd9:	enter  0x19f4,0xb
  421bdd:	inc    edx
  421bde:	push   edi
  421bdf:	das    
  421be0:	cs popa 
  421be2:	pop    eax
  421be3:	jnp    0x421bd6
  421be5:	sub    BYTE PTR [edi-0x38],dh
  421be8:	pmulhw mm1,QWORD PTR [esi+0x41]
  421bec:	in     eax,dx
  421bed:	pop    eax
  421bee:	aam    0x96
  421bf0:	mov    ebp,0x5f0b6c61
  421bf5:	inc    ebx
  421bf6:	daa    
  421bf7:	push   ecx
  421bf8:	jb     0x421ba7
  421bfa:	stc    
  421bfb:	fstp   DWORD PTR [ecx+0x5a9dad5c]
  421c01:	into   
  421c02:	mov    ecx,0x24aaadee
  421c07:	gs inc eax
  421c09:	pop    edx
  421c0a:	and    edx,ebx
  421c0c:	mov    esi,DWORD PTR [ecx]
  421c0e:	mov    dl,0xaa
  421c10:	mov    cl,0x81
  421c12:	cmp    DWORD PTR [ebp+0x338fe52f],edx
  421c18:	jle    0x421baf
  421c1a:	xchg   ecx,eax
  421c1b:	xchg   ebp,eax
  421c1c:	cmp    DWORD PTR [edx+0x52a70689],ebx
  421c22:	sbb    bl,BYTE PTR cs:[eax+0x2d9cc3ea]
  421c29:	push   edi
  421c2a:	push   esp
  421c2b:	xchg   edi,eax
  421c2c:	pop    esi
  421c2d:	pop    edi
  421c2e:	ja     0x421c75
  421c30:	sbb    bh,BYTE PTR [ebp+0x36]
  421c33:	sahf   
  421c34:	mov    WORD PTR [edx+0x48],gs
  421c37:	and    ebx,DWORD PTR [edx]
  421c39:	cmp    BYTE PTR [edi+ebx*2+0x19],0x6d
  421c3e:	jecxz  0x421c16
  421c40:	imul   ebx,DWORD PTR [edx+edi*1-0x43],0x4cf7f7f0
  421c48:	iret   
  421c49:	retf   
  421c4a:	pop    esp
  421c4b:	push   ecx
  421c4c:	sub    edx,DWORD PTR ds:0x9227c16
  421c52:	test   al,0x41
  421c54:	mov    dh,0xac
  421c56:	pop    ss
  421c57:	sar    al,0x79
  421c5a:	cld    
  421c5b:	push   ecx
  421c5c:	xchg   esp,eax
  421c5d:	(bad)  
  421c5f:	loop   0x421c2f
  421c61:	(bad)  
  421c62:	call   DWORD PTR [edx+ebx*4]
  421c65:	ins    DWORD PTR es:[edi],dx
  421c66:	pop    edx
  421c67:	into   
  421c68:	mov    fs,WORD PTR [edx+esi*8]
  421c6b:	xor    BYTE PTR ds:0x3c6fcbcc,ch
  421c71:	in     eax,dx
  421c72:	repz xchg edi,eax
  421c74:	stc    
  421c75:	dec    edx
  421c76:	mov    esi,0xd64c79ee
  421c7b:	pusha  
  421c7c:	test   al,0x1e
  421c7e:	test   DWORD PTR [edx+0x19],ebp
  421c81:	and    BYTE PTR [eax+0x70],cl
  421c84:	jb     0x421c1f
  421c86:	mov    ds:0x828de021,al
  421c8b:	sbb    al,0xc4
  421c8d:	je     0x421d0b
  421c8f:	outs   dx,BYTE PTR ds:[esi]
  421c90:	or     DWORD PTR [edi+ebx*1-0x1b165c05],ebp
  421c97:	cmp    cl,BYTE PTR [ebp-0x400d0e23]
  421c9d:	outs   dx,DWORD PTR ds:[esi]
  421c9e:	add    eax,0x1de629e2
  421ca3:	pop    ebx
  421ca4:	adc    esi,DWORD PTR [esi-0x4]
  421ca7:	pop    esi
  421ca8:	leave  
  421ca9:	outs   dx,DWORD PTR ds:[esi]
  421caa:	in     al,dx
  421cab:	dec    esp
  421cac:	pop    ds
  421cad:	clc    
  421cae:	mov    ds:0x39b1062c,al
  421cb3:	xor    dh,BYTE PTR ds:0x11ea71de
  421cb9:	imul   bh
  421cbb:	out    0x88,eax
  421cbd:	cwde   
  421cbe:	fisubr WORD PTR [edi+0x70]
  421cc1:	mov    ecx,0x712ea69c
  421cc6:	push   0x8ada58b4
  421ccb:	test   DWORD PTR [eax+0x7e],esp
  421cce:	jns    0x421c80
  421cd0:	push   ds
  421cd1:	pop    es
  421cd2:	mov    WORD PTR ds:0x5870d1b1,cs
  421cd8:	inc    esi
  421cd9:	ja     0x421cae
  421cdb:	or     al,BYTE PTR [esi]
  421cdd:	add    al,0x18
  421cdf:	mov    ah,0x85
  421ce1:	and    DWORD PTR [ecx],ebx
  421ce3:	dec    ebp
  421ce4:	sar    BYTE PTR [eax+0x48],0xd7
  421ce8:	xchg   esp,eax
  421ce9:	and    DWORD PTR [ebx+0x73cb68b],0xffffffea
  421cf0:	dec    ebp
  421cf1:	in     al,0xe0
  421cf3:	pop    ecx
  421cf4:	cmp    eax,0x33f98ca4
  421cf9:	mov    cl,0xfa
  421cfb:	xchg   ebx,eax
  421cfc:	mov    ah,0xd3
  421cfe:	xchg   ebx,eax
  421cff:	ss mov esp,0xeee94591
  421d05:	pop    ebp
  421d06:	in     al,dx
  421d07:	(bad)  
  421d08:	jp     0x421cee
  421d0a:	add    DWORD PTR [eax],0x33
  421d0d:	push   ebx
  421d0e:	ss popa 
  421d10:	dec    esp
  421d11:	enter  0xf9dd,0xaf
  421d15:	leave  
  421d16:	imul   ecx,DWORD PTR [ebx-0x3a6f655f],0x3f90ddbc
  421d20:	popa   
  421d21:	call   0x2de6ea1f
  421d26:	ins    DWORD PTR es:[edi],dx
  421d27:	test   BYTE PTR [edi],0x4
  421d2a:	xchg   ebp,eax
  421d2b:	int3   
  421d2c:	adc    al,0xf9
  421d2e:	lea    eax,[ebp-0x6890cfbf]
  421d34:	call   0xa33c:0x7157af53
  421d3b:	dec    ebx
  421d3c:	stc    
  421d3d:	scas   eax,DWORD PTR es:[edi]
  421d3e:	scas   eax,DWORD PTR es:[edi]
  421d3f:	sub    BYTE PTR [ebx],ch
  421d41:	test   eax,0x576ae56
  421d46:	and    DWORD PTR [edx+0x437af559],esp
  421d4c:	xor    ecx,DWORD PTR [ebx+0x3cf5a81a]
  421d52:	add    al,0x96
  421d54:	ins    DWORD PTR es:[edi],dx
  421d55:	pop    ebx
  421d56:	(bad)  
  421d57:	jmp    0x97ca2f91
  421d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d5d:	scas   al,BYTE PTR es:[edi]
  421d5e:	ins    BYTE PTR es:[edi],dx
  421d5f:	add    ebx,esp
  421d61:	ret    
  421d62:	popa   
  421d63:	enter  0xb184,0x99
  421d67:	(bad)  
  421d68:	sti    
  421d69:	dec    ecx
  421d6a:	retf   
  421d6b:	push   eax
  421d6c:	or     BYTE PTR [edx+0x497e80f7],dh
  421d72:	mov    edi,0x889b7d45
  421d77:	pop    ebx
  421d78:	pop    edx
  421d79:	jb     0x421cff
  421d7b:	sahf   
  421d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d7d:	xchg   ebp,eax
  421d7e:	into   
  421d7f:	xchg   esi,eax
  421d80:	int3   
  421d81:	sbb    BYTE PTR [edi-0xe],dh
  421d84:	cmp    eax,0xbd265021
  421d89:	cli    
  421d8a:	call   0xd8432352
  421d8f:	push   eax
  421d90:	xlat   BYTE PTR ds:[ebx]
  421d91:	ins    DWORD PTR es:[edi],dx
  421d92:	cmc    
  421d93:	or     ebp,DWORD PTR [edi]
  421d95:	shl    DWORD PTR [edi],1
  421d97:	xchg   edx,eax
  421d98:	mov    ebp,0xaca5260b
  421d9d:	xor    eax,0xb55500ac
  421da2:	shr    BYTE PTR [ebx-0x44],cl
  421da5:	xchg   ecx,eax
  421da6:	test   DWORD PTR [ebx-0xca054e5],0x28e8972e
  421db0:	xor    ah,BYTE PTR [ebx-0x23]
  421db3:	mov    bh,0xde
  421db5:	in     eax,0x6b
  421db7:	or     BYTE PTR [esi+esi*1+0x246d4454],bh
  421dbe:	adc    esp,ebp
  421dc0:	cli    
  421dc1:	cld    
  421dc2:	push   es
  421dc3:	cli    
  421dc4:	imul   esi,DWORD PTR [ebp+ecx*4+0x12ad74f6],0xffffffe6
  421dcc:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  421dce:	pop    edi
  421dcf:	adc    al,0x66
  421dd1:	shl    BYTE PTR [edi],0xdc
  421dd4:	inc    eax
  421dd5:	add    edx,DWORD PTR ds:0xab03267b
  421ddb:	xchg   ebx,eax
  421ddc:	int3   
  421ddd:	push   cs
  421dde:	data16 or ah,BYTE PTR [edi-0x5ea21ac2]
  421de5:	inc    edx
  421de6:	cmp    al,0x87
  421de8:	mov    ebp,0x9db4800b
  421ded:	ins    DWORD PTR es:[edi],dx
  421dee:	add    al,0x16
  421df0:	sub    eax,0x8f7fd2e4
  421df5:	dec    eax
  421df6:	sub    eax,0xb9f88ba9
  421dfb:	sub    ah,BYTE PTR [ebx]
  421dfd:	add    BYTE PTR [ecx-0x36],cl
  421e00:	or     DWORD PTR [ebx+0x77],ebx
  421e03:	push   ds
  421e04:	push   ebx
  421e05:	and    DWORD PTR [esp+eiz*2+0x37],esp
  421e09:	(bad)  
  421e0a:	enter  0x633b,0xd7
  421e0e:	inc    esi
  421e0f:	(bad)  
  421e10:	dec    esi
  421e11:	popa   
  421e12:	pop    ebx
  421e13:	or     DWORD PTR [ebx+0x7],0x8d4ea748
  421e1a:	adc    eax,0x99295f2
  421e1f:	xor    eax,0x1d872201
  421e24:	shr    BYTE PTR [ebx+0xe],cl
  421e27:	mov    al,ds:0x5a9a4eb6
  421e2c:	jg     0x421e6b
  421e2e:	sub    ebp,edi
  421e30:	cli    
  421e31:	shl    esi,0x97
  421e34:	aad    0xce
  421e36:	push   es
  421e37:	adc    ebp,DWORD PTR [ebp-0x1122a05f]
  421e3d:	xchg   ebx,eax
  421e3e:	push   cs
  421e3f:	cmp    eax,0xa5fdd5d8
  421e44:	fisttp WORD PTR [ebx]
  421e46:	test   ch,0x3c
  421e49:	push   es
  421e4a:	jo     0x421e08
  421e4c:	fwait
  421e4d:	mov    ecx,DWORD PTR [esi-0x3]
  421e50:	cmc    
  421e51:	leave  
  421e52:	or     ecx,eax
  421e54:	xchg   ecx,eax
  421e55:	lahf   
  421e56:	ja     0x421e02
  421e58:	hlt    
  421e59:	sbb    eax,0x71f7514e
  421e5e:	inc    edi
  421e5f:	fisttp DWORD PTR [ecx-0x64]
  421e62:	rcr    DWORD PTR [edx],1
  421e64:	pop    ss
  421e65:	add    ch,BYTE PTR [edi]
  421e67:	in     al,dx
  421e68:	lea    ebp,[ecx+0x41262c76]
  421e6e:	in     al,dx
  421e6f:	cld    
  421e70:	test   BYTE PTR [ebx+0x728199d0],al
  421e76:	aad    0x5c
  421e78:	and    bh,BYTE PTR [ecx]
  421e7a:	xor    BYTE PTR [eax],0x3e
  421e7d:	fild   DWORD PTR [ecx+0x69]
  421e80:	mov    esi,0x2f24136a
  421e85:	cmp    eax,0x1c5e85f0
  421e8a:	scas   al,BYTE PTR es:[edi]
  421e8b:	popf   
  421e8c:	fld    DWORD PTR cs:[ebp+0x51]
  421e90:	cmp    eax,DWORD PTR [ebx+0x79]
  421e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e94:	sub    edi,esi
  421e96:	(bad)  
  421e97:	xchg   edi,eax
  421e98:	jmp    0x6f5d:0xcc664b58
  421e9f:	je     0x421edf
  421ea1:	mov    al,0x14
  421ea3:	xchg   esp,eax
  421ea4:	arpl   WORD PTR [edi],ax
  421ea6:	(bad)  
  421ea7:	aad    0xdd
  421ea9:	or     esi,DWORD PTR [ebx-0x51abb0d3]
  421eaf:	and    bh,BYTE PTR [edx-0x4c916b16]
  421eb5:	jmp    0x9d69:0x8125f6bd
  421ebc:	gs addr16 push eax
  421ebf:	data16 mov cl,0x53
  421ec2:	addr16 sbb ebp,ebp
  421ec5:	xor    bh,BYTE PTR [edx]
  421ec7:	and    BYTE PTR [edi+0x66c5d185],cl
  421ecd:	ss scas eax,DWORD PTR es:[edi]
  421ecf:	push   0xb1e0e8c0
  421ed4:	mov    edx,0xb2bc245e
  421ed9:	add    DWORD PTR [esi+0x24],esp
  421edc:	jno    0x421f3e
  421ede:	imul   ebp,esi,0xffffffc7
  421ee1:	lea    ebx,[edx]
  421ee3:	arpl   WORD PTR [ecx-0x4b],di
  421ee6:	xchg   edx,eax
  421ee7:	lock pushf 
  421ee9:	sbb    DWORD PTR [ecx+0x26850f65],0xcb78676d
  421ef3:	es es mov ecx,0xb4487080
  421efa:	pop    esi
  421efb:	xor    edi,ebp
  421efd:	pop    ecx
  421efe:	push   0xffffffd3
  421f00:	pop    ebx
  421f01:	hlt    
  421f02:	or     al,0xc0
  421f04:	add    bl,bh
  421f06:	and    eax,0x3e1d9c24
  421f0b:	xor    ecx,eax
  421f0d:	data16 fcos 
  421f10:	and    esp,DWORD PTR [edi]
  421f12:	mov    eax,0x67ce6802
  421f17:	sbb    ah,BYTE PTR [eax+0x0]
  421f1a:	xchg   ecx,eax
  421f1b:	out    0x4b,eax
  421f1d:	test   DWORD PTR [edi],0x1b810fb6
  421f23:	jb     0x421f9e
  421f25:	pop    esi
  421f26:	mov    al,ds:0x19c25ef8
  421f2b:	sbb    eax,0x1104eca3
  421f30:	loopne 0x421ef9
  421f32:	adc    ebp,0x72
  421f35:	xor    ebx,ecx
  421f37:	jne    0x421ecf
  421f39:	cdq    
  421f3a:	je     0x421fa0
  421f3c:	pop    esi
  421f3d:	mov    ch,0x54
  421f3f:	std    
  421f40:	add    DWORD PTR [ebp+0xcb2b1e1],0x4c
  421f47:	sbb    eax,0x429dcd77
  421f4c:	xor    BYTE PTR [edx],ch
  421f4e:	adc    BYTE PTR [ebp-0x1092c5a9],ch
  421f54:	sub    bh,cl
  421f56:	lea    eax,[ecx]
  421f58:	loope  0x421fb9
  421f5a:	jl     0x421fc9
  421f5c:	in     al,0x8d
  421f5e:	ret    0x45d4
  421f61:	inc    eax
  421f62:	aam    0xa6
  421f64:	sub    BYTE PTR [edx+0x5183168a],bh
  421f6a:	push   cs
  421f6b:	xor    edx,DWORD PTR [ebp+ebx*4+0x9]
  421f6f:	pushf  
  421f70:	or     ebp,DWORD PTR [ebx-0x4e]
  421f73:	repz retf 0x2b3d
  421f77:	mov    ds:0x1de2ea23,eax
  421f7c:	jbe    0x421fdd
  421f7e:	lock sbb eax,0x80287ece
  421f84:	mov    BYTE PTR [edx-0x51781346],dl
  421f8a:	idiv   DWORD PTR [bx+si-0x7]
  421f8e:	inc    edi
  421f8f:	popf   
  421f90:	in     eax,0x7e
  421f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f93:	dec    eax
  421f94:	jmp    0x9cffdb52
  421f99:	inc    edi
  421f9a:	mov    al,0x4a
  421f9c:	mov    al,ds:0x45e0355d
  421fa1:	aad    0x5
  421fa3:	jns    0x421f40
  421fa5:	inc    esp
  421fa6:	sub    al,0xba
  421fa8:	js     0x421ff8
  421faa:	add    BYTE PTR [ecx-0x2b831656],0x35
  421fb1:	mov    fs,WORD PTR [eax]
  421fb3:	retf   0xda35
  421fb6:	jae    0x421fc0
  421fb8:	call   FWORD PTR [ebp-0xd]
  421fbb:	inc    edx
  421fbc:	retf   
  421fbd:	mov    ds:0x2c76c3b3,eax
  421fc2:	ret    0x43b5
  421fc5:	and    BYTE PTR [edx+0xf90695b],0x35
  421fcc:	mov    bh,0x32
  421fce:	push   esp
  421fcf:	push   esi
  421fd0:	mov    bh,dl
  421fd2:	loopne 0x421fab
  421fd4:	push   es
  421fd5:	mov    ?,WORD PTR ds:0x393c55da
  421fdb:	add    edi,esp
  421fdd:	inc    esi
  421fde:	xchg   ecx,eax
  421fdf:	outs   dx,DWORD PTR ds:[esi]
  421fe0:	or     DWORD PTR [esi+esi*4+0xc824e2b],0x332ce846
  421feb:	inc    eax
  421fec:	sub    esp,DWORD PTR [ebx-0x6d]
  421fef:	into   
  421ff0:	jne    0x421ff2
  421ff2:	xchg   ebx,eax
  421ff3:	push   ss
  421ff4:	stc    
  421ff5:	das    
  421ff6:	cli    
  421ff7:	sti    
  421ff8:	pop    ebp
  421ff9:	jg     0x421fe8
  421ffb:	or     ebx,esi
  421ffd:	pushf  
  421ffe:	sub    eax,0x9ec6fb8c
  422003:	and    eax,0x9132d792
  422008:	loopne 0x422086
  42200a:	mov    ah,0x5c
  42200c:	arpl   WORD PTR [ecx-0x47828aab],dx
  422012:	aaa    
  422013:	xor    dl,dl
  422015:	jnp    0x422091
  422017:	hlt    
  422018:	lods   eax,DWORD PTR ds:[esi]
  422019:	lock mov eax,ds:0x7ae5796d
  42201f:	call   0xc403:0x9bbc6488
  422026:	es jmp 0xd9745d79
  42202c:	(bad)  
  42202d:	xchg   edx,eax
  42202e:	loope  0x422075
  422030:	(bad)  
  422031:	mov    ebp,0xce657e1
  422036:	into   
  422037:	test   eax,0xb141802c
  42203c:	(bad)  
  42203d:	out    dx,eax
  42203e:	js     0x422055
  422040:	mov    edi,0x49cbc7ec
  422045:	pop    ebp
  422046:	in     al,dx
  422047:	pusha  
  422048:	xchg   edi,eax
  422049:	aad    0xe0
  42204b:	ffreep st(1)
  42204d:	jno    0x421ffe
  42204f:	cmp    ebp,DWORD PTR es:[ebp-0x66cc6eb1]
  422056:	jo     0x42200d
  422058:	cmp    ebx,DWORD PTR [ecx-0x61]
  42205b:	out    0x2f,eax
  42205d:	and    dh,BYTE PTR [ecx+0x3e382879]
  422063:	popf   
  422064:	sub    BYTE PTR [esi+0x6eb58070],bl
  42206a:	sbb    eax,DWORD PTR [eax-0x251fe848]
  422070:	mov    ch,0x8
  422072:	jmp    0x4220d2
  422074:	add    eax,0x71309641
  422079:	pop    edi
  42207a:	sti    
  42207b:	out    dx,eax
  42207c:	sbb    ebx,DWORD PTR [ebp-0xa]
  42207f:	test   DWORD PTR [ebp-0x5a],ecx
  422082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422083:	shr    BYTE PTR [eax+0x1c],cl
  422086:	inc    ebp
  422087:	jo     0x4220ca
  422089:	in     al,0x37
  42208b:	pop    edx
  42208c:	jae    0x4220c9
  42208e:	clc    
  42208f:	mov    bh,0xb1
  422091:	test   BYTE PTR [esi],ch
  422093:	ss cs repz mov eax,0x87811f0d
  42209b:	push   esi
  42209c:	jbe    0x422057
  42209e:	mov    ebx,DWORD PTR [edx]
  4220a0:	ins    BYTE PTR es:[edi],dx
  4220a1:	sub    eax,0x27b662eb
  4220a6:	or     eax,0x7dfac26d
  4220ab:	lods   eax,DWORD PTR ds:[esi]
  4220ac:	xchg   edi,eax
  4220ad:	mov    edx,0x0
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	add    dh,ch
  4220c0:	fadd   st,st(4)
  4220c2:	cdq    
  4220c3:	call   0x0:0x4f40001
  4220ca:	shr    DWORD PTR [ecx-0x35],0x41
  4220ce:	std    
  4220cf:	sbb    al,0x29
  4220d1:	ds into 
  4220d3:	inc    esi
  4220d4:	sbb    eax,0x487c0f7
  4220d9:	sbb    al,0xd0
  4220db:	pop    ebx
  4220dc:	sub    al,0xe3
  4220de:	add    BYTE PTR [ebx-0x72],dl
  4220e1:	out    0xec,al
  4220e3:	rol    BYTE PTR [esp+edi*2+0x3d0810ce],cl
  4220ea:	push   ebx
  4220eb:	test   al,0x5
  4220ed:	push   ecx
  4220ee:	mov    al,0x69
  4220f0:	sar    BYTE PTR [esi+0x403e2181],0x9
  4220f7:	jo     0x422152
  4220f9:	cmp    al,0x2f
  4220fb:	popa   
  4220fc:	xor    eax,0xc54a3540
  422101:	mov    ebp,0x40ab58f1
  422106:	or     BYTE PTR [ebx+0x454f38b9],ah
  42210c:	outs   dx,DWORD PTR ds:[esi]
  42210d:	cld    
  42210e:	sub    eax,0x36e287cb
  422113:	dec    ecx
  422114:	lahf   
  422115:	dec    ebx
  422116:	dec    esi
  422117:	leave  
  422118:	xchg   edi,eax
  422119:	push   0x7b41197
  42211e:	jno    0x4220b9
  422120:	pop    ecx
  422121:	add    BYTE PTR [esi+0x18],ch
  422124:	aam    0xae
  422126:	es jl  0x42212c
  422129:	mov    ch,0xf8
  42212b:	fdivp  st(4),st
  42212d:	inc    ebp
  42212e:	inc    ecx
  42212f:	loop   0x4220fe
  422131:	fidiv  WORD PTR [ebx-0x75637fa3]
  422137:	fnstcw WORD PTR [ebx-0x719f1879]
  42213d:	div    edx
  42213f:	out    dx,eax
  422140:	es xor al,0x15
  422143:	push   cs
  422144:	pop    ecx
  422145:	add    bl,0x98
  422148:	inc    edx
  422149:	into   
  42214a:	lahf   
  42214b:	pop    ss
  42214c:	loopne 0x4221ac
  42214e:	and    dh,BYTE PTR [esi-0x24]
  422151:	xchg   edi,eax
  422152:	xor    al,0x32
  422154:	outs   dx,DWORD PTR ds:[esi]
  422155:	jnp    0x422116
  422157:	jmp    0x4220f8
  422159:	bnd jge 0x422188
  42215c:	clc    
  42215d:	retf   0x670f
  422160:	les    edi,FWORD PTR [esi-0x71e9d73]
  422166:	sbb    BYTE PTR [ebx-0x7a],cl
  422169:	jns    0x42210b
  42216b:	cld    
  42216c:	sti    
  42216d:	lods   al,BYTE PTR ds:[esi]
  42216e:	xor    DWORD PTR [eax-0x25],edx
  422171:	cmp    eax,0x57d3cd46
  422176:	pop    ebx
  422177:	arpl   WORD PTR [esi+edi*4+0x2034029a],si
  42217e:	mov    cl,0x82
  422180:	push   edx
  422181:	loope  0x422190
  422183:	idiv   ah
  422185:	stos   DWORD PTR es:[edi],eax
  422186:	je     0x422134
  422188:	pop    es
  422189:	push   ss
  42218a:	push   esi
  42218b:	mov    ch,0x67
  42218d:	data16 mov ch,0x83
  422190:	(bad)  
  422191:	in     al,dx
  422192:	sbb    eax,0xbd762c22
  422197:	test   al,0x49
  422199:	mov    esp,0x4137777
  42219e:	jmp    0xd67b:0x85a8af73
  4221a5:	mov    ebp,0x93c62504
  4221aa:	es pushf 
  4221ac:	stos   DWORD PTR es:[edi],eax
  4221ad:	push   esi
  4221ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221af:	jno    0x422192
  4221b1:	cdq    
  4221b2:	xlat   BYTE PTR ds:[ebx]
  4221b3:	mov    bl,0x44
  4221b5:	fist   WORD PTR [bx+di]
  4221b8:	stc    
  4221b9:	arpl   WORD PTR [eax+ebp*4],bp
  4221bc:	xchg   ebp,eax
  4221bd:	(bad)  
  4221be:	mov    DWORD PTR ds:0xe0eb28e1,edi
  4221c4:	xor    ah,al
  4221c6:	ss jg  0x42222f
  4221c9:	inc    esp
  4221ca:	imul   esp,DWORD PTR [esi],0xffffffeb
  4221cd:	jae    0x422174
  4221cf:	mov    cl,0xd8
  4221d1:	je     0x4221ed
  4221d3:	sbb    DWORD PTR [edi-0x42ccb8ce],ebx
  4221d9:	inc    ebp
  4221da:	call   0xbe612ff5
  4221df:	hlt    
  4221e0:	mov    DWORD PTR [edx],ebp
  4221e2:	popf   
  4221e3:	stos   DWORD PTR es:[edi],eax
  4221e4:	mov    esi,0xe15a85c9
  4221e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ea:	push   edi
  4221eb:	xor    eax,0x2df61439
  4221f0:	cdq    
  4221f1:	iret   
  4221f2:	test   al,al
  4221f4:	jo     0x422199
  4221f6:	or     BYTE PTR [ecx+eax*2],dh
  4221f9:	mov    al,ds:0xad89e5e3
  4221fe:	rcr    DWORD PTR [eax+0x78],cl
  422201:	mov    edi,0x93c5fdf6
  422206:	mov    ecx,0x343e010
  42220b:	add    edi,esp
  42220d:	mov    eax,ds:0x838d5489
  422212:	retf   
  422213:	add    DWORD PTR [edx],ecx
  422215:	in     eax,0xf8
  422217:	loop   0x42221b
  422219:	ss out dx,eax
  42221b:	dec    eax
  42221c:	ja     0x422263
  42221e:	(bad)  
  42221f:	fild   DWORD PTR [edi-0x53]
  422222:	jge    0x422241
  422224:	imul   eax,ebx,0x3b7095c9
  42222a:	inc    esp
  42222b:	in     eax,0x5b
  42222d:	xchg   edi,eax
  42222e:	cmp    dh,BYTE PTR [ecx]
  422230:	inc    ecx
  422231:	dec    ecx
  422232:	retf   
  422233:	hlt    
  422234:	lods   eax,DWORD PTR ds:[esi]
  422235:	icebp  
  422236:	shl    al,cl
  422238:	mov    WORD PTR [eax+0x4e7f8d5],ss
  42223e:	rcr    BYTE PTR [edx+0x7],1
  422241:	popa   
  422242:	repnz clc 
  422244:	jns    0x42221a
  422246:	loopne 0x422217
  422248:	gs xor ch,cl
  42224b:	js     0x422249
  42224d:	jne    0x4221ec
  42224f:	dec    ebx
  422250:	push   ss
  422251:	aaa    
  422252:	sti    
  422253:	xchg   esp,eax
  422254:	jno    0x422225
  422256:	adc    eax,0xf015103d
  42225b:	jb     0x422221
  42225d:	push   ss
  42225e:	push   ebp
  42225f:	and    eax,esi
  422261:	icebp  
  422262:	imul   ebp,DWORD PTR ds:0xdf455c75,0xffffffe2
  422269:	mov    eax,0x88755119
  42226e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42226f:	cmp    al,0x58
  422271:	push   ds
  422272:	sti    
  422273:	fidiv  DWORD PTR [edx+0x2aeb12e2]
  422279:	addr16 push ecx
  42227b:	mov    dh,0x73
  42227d:	ret    
  42227e:	pop    ss
  42227f:	cmc    
  422280:	sbb    al,0xa
  422282:	inc    esi
  422283:	mov    ah,0xbe
  422285:	lahf   
  422286:	add    BYTE PTR [edx-0x7390c5a6],0x82
  42228d:	ret    0xff6b
  422290:	or     al,0x54
  422292:	adc    DWORD PTR [edi],eax
  422294:	xchg   ebp,eax
  422295:	inc    edx
  422296:	inc    esp
  422297:	adc    BYTE PTR [eax+0x7a04fbd9],dl
  42229d:	cmp    eax,0xc8873143
  4222a2:	push   ds
  4222a3:	sahf   
  4222a4:	ins    BYTE PTR es:[edi],dx
  4222a5:	imul   esp,DWORD PTR [edx+0x11c7ea78],0xffffffe1
  4222ac:	sahf   
  4222ad:	push   ecx
  4222ae:	mov    esi,eax
  4222b0:	adc    ah,BYTE PTR [ebp-0x76]
  4222b3:	mov    ch,0x9d
  4222b5:	aam    0x15
  4222b7:	clc    
  4222b8:	stc    
  4222b9:	jne    0x4222f4
  4222bb:	aaa    
  4222bc:	inc    esp
  4222bd:	jecxz  0x4222ab
  4222bf:	rol    DWORD PTR [esi],cl
  4222c1:	xor    DWORD PTR [ebx+ebp*8+0x1ff2ac88],0x16783c32
  4222cc:	lds    ecx,FWORD PTR [edx-0x635be536]
  4222d2:	push   ecx
  4222d3:	fst    DWORD PTR [ecx+0x7d05dcdf]
  4222d9:	adc    BYTE PTR [eax+0x36],0x40
  4222dd:	and    BYTE PTR [edi+0x1c],ah
  4222e0:	sbb    ecx,DWORD PTR [ebp-0x47]
  4222e3:	dec    eax
  4222e4:	fcom   QWORD PTR [ecx]
  4222e6:	mov    al,ds:0x8a421627
  4222eb:	xchg   edi,eax
  4222ec:	(bad)  
  4222ee:	neg    BYTE PTR [ebp+0x7a3eab34]
  4222f4:	pop    eax
  4222f5:	retf   0x9899
  4222f8:	data16 jne 0x42228e
  4222fb:	inc    eax
  4222fc:	mov    eax,0xa2685fbd
  422301:	cmp    eax,DWORD PTR [esi-0xe648a90]
  422307:	sbb    al,0x75
  422309:	mov    al,0xf8
  42230b:	mov    esi,0x1d4b3509
  422310:	shl    DWORD PTR [eax],cl
  422312:	dec    edi
  422313:	mov    ds:0xc056283,eax
  422318:	jl     0x42232e
  42231a:	in     eax,0xcc
  42231c:	jo     0x422302
  42231e:	sub    BYTE PTR [edx-0x7],ah
  422321:	cdq    
  422322:	fsubr  DWORD PTR [edx+0x2850cd7c]
  422328:	sahf   
  422329:	pop    edi
  42232a:	(bad)  
  42232b:	fstp   QWORD PTR [eax+esi*2]
  42232e:	adc    BYTE PTR [ebx+ebx*8],bh
  422331:	push   es
  422332:	jb     0x42239a
  422334:	adc    eax,0xbfbcebb9
  422339:	jnp    0x422302
  42233b:	xchg   esp,eax
  42233c:	scas   eax,DWORD PTR es:[edi]
  42233d:	cwde   
  42233e:	xchg   edx,eax
  42233f:	and    al,0xe7
  422341:	sub    BYTE PTR [edx],bh
  422343:	and    dl,0xaf
  422346:	into   
  422347:	xchg   esi,eax
  422348:	clc    
  422349:	int3   
  42234a:	pushf  
  42234b:	pop    ds
  42234c:	push   0x125794f6
  422351:	or     ebp,edi
  422353:	fisttp DWORD PTR [edx+0x18c0fea2]
  422359:	sbb    eax,0xb2f477e2
  42235e:	addr16 push 0x881dfc23
  422364:	jne    0x4223b9
  422366:	add    BYTE PTR [edi+0x4249cf75],ah
  42236c:	lds    ebp,FWORD PTR [edi]
  42236e:	imul   edi,DWORD PTR [ebp-0x14],0xfad17e21
  422375:	pop    ss
  422376:	pop    eax
  422377:	ins    DWORD PTR es:[edi],dx
  422378:	push   ebp
  422379:	into   
  42237a:	xor    edi,esp
  42237c:	cmp    DWORD PTR [edx-0x18d6fed0],edx
  422382:	mov    eax,0x6ae71d04
  422387:	hlt    
  422388:	push   0xffffffc4
  42238a:	jp     0x422348
  42238c:	xchg   ecx,eax
  42238d:	push   ebx
  42238e:	cdq    
  42238f:	outs   dx,DWORD PTR ds:[esi]
  422390:	add    edx,ebp
  422392:	ret    0xa907
  422395:	mov    BYTE PTR [bp-0x4cae],bl
  42239a:	jmp    0x42233a
  42239c:	aaa    
  42239d:	sar    DWORD PTR [esi],0xb0
  4223a0:	fidivr DWORD PTR [eax+eax*2+0x10]
  4223a4:	shr    BYTE PTR [edx],1
  4223a6:	pop    edx
  4223a7:	jno    0x4223fd
  4223a9:	dec    esi
  4223aa:	lock (bad) 
  4223ac:	mov    dh,0x6c
  4223ae:	jbe    0x422351
  4223b0:	popa   
  4223b1:	rcr    BYTE PTR [edx-0xaea0863],cl
  4223b7:	call   0x728f:0xe5878e2a
  4223be:	mov    edx,0xc74a7b24
  4223c3:	pop    edi
  4223c4:	dec    edi
  4223c5:	call   0x2cc:0x5f8f964
  4223cc:	shr    BYTE PTR [esi+edi*2],cl
  4223cf:	xchg   esp,eax
  4223d0:	mov    ds:0x6b42c119,eax
  4223d5:	or     ebx,edi
  4223d7:	test   DWORD PTR [edx-0x9e55466],edi
  4223dd:	pop    es
  4223de:	shr    DWORD PTR ds:0xd65c6de4,0xca
  4223e5:	cmp    esp,DWORD PTR [bx+si]
  4223e8:	nop
  4223e9:	int    0xaf
  4223eb:	inc    esp
  4223ec:	xor    eax,0xd5fe5bf8
  4223f1:	mov    eax,ds:0x22966ceb
  4223f6:	mov    esi,0xb8624943
  4223fb:	loope  0x42246e
  4223fd:	dec    ebx
  4223fe:	dec    esp
  4223ff:	xlat   BYTE PTR ds:[ebx]
  422400:	xlat   BYTE PTR ds:[ebx]
  422401:	(bad)  
  422402:	xlat   BYTE PTR ds:[ebx]
  422403:	fmulp  st(7),st
  422405:	frstor [ebp-0x77486db7]
  42240b:	pop    eax
  42240c:	or     eax,0x3800f029
  422411:	adc    ebp,DWORD PTR [ebp-0x2d50c29c]
  422417:	ficomp WORD PTR [ecx]
  422419:	mov    eax,DWORD PTR [ecx+0x3ea0adb]
  42241f:	jp     0x42246a
  422421:	or     bh,BYTE PTR [ecx-0x13]
  422424:	sahf   
  422425:	jg     0x422403
  422427:	psubd  mm0,QWORD PTR [ebx-0x209a0f2b]
  42242e:	xchg   ecx,eax
  42242f:	push   edx
  422430:	or     eax,DWORD PTR [esi+ebx*2+0xb]
  422434:	into   
  422435:	jge    0x422461
  422437:	xor    eax,0x361caf7b
  42243c:	dec    ebx
  42243d:	in     eax,0x5d
  42243f:	(bad)  
  422440:	jl     0x422406
  422442:	add    esp,DWORD PTR [eax+0x5a]
  422445:	fisub  DWORD PTR [ebp+0x64b5d3e3]
  42244b:	loopne 0x422413
  42244d:	push   ss
  42244e:	fmul   DWORD PTR [esi+edi*2]
  422451:	and    eax,0xa7d42d3
  422456:	mov    edx,0x26c2ba4c
  42245b:	imul   esp,DWORD PTR [eax+ecx*2-0x76],0xab9a8283
  422463:	add    al,0x6d
  422465:	jmp    0x8991:0xb355c9f6
  42246c:	std    
  42246d:	sti    
  42246e:	icebp  
  42246f:	or     ebx,DWORD PTR ds:0xc9b050f2
  422475:	and    dl,dh
  422477:	scas   eax,DWORD PTR es:[edi]
  422478:	mov    DWORD PTR [esi],eax
  42247a:	jg     0x422401
  42247c:	dec    edx
  42247d:	fimul  DWORD PTR [ebx]
  42247f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422480:	or     ah,dh
  422482:	sbb    DWORD PTR [esp+edx*8-0x6d],edi
  422486:	push   ss
  422487:	mov    ds:0x3a2ac768,eax
  42248c:	mov    ?,esi
  42248e:	lds    edi,FWORD PTR ds:0x363bfba2
  422494:	mov    ebx,0xd348dd80
  422499:	or     DWORD PTR es:[ecx],eax
  42249c:	inc    bx
  42249e:	inc    ecx
  42249f:	sub    al,0xe
  4224a1:	fst    DWORD PTR [ebx]
  4224a3:	(bad)  
  4224a4:	mov    eax,0x7edae556
  4224a9:	repz cmp BYTE PTR [edi+0x127f83cd],bh
  4224b0:	(bad)  
  4224b2:	in     eax,dx
  4224b3:	xor    al,0x51
  4224b5:	sub    al,BYTE PTR [ebx+0x9]
  4224b8:	push   ecx
  4224b9:	lea    esi,ds:0xcf05e121
  4224bf:	(bad)  
  4224c0:	pop    ecx
  4224c1:	f2xm1  
  4224c3:	push   es
  4224c4:	cmc    
  4224c5:	jecxz  0x422488
  4224c7:	mov    eax,ds:0x8e04d187
  4224cc:	retf   0x2e07
  4224cf:	adc    DWORD PTR [ebx-0x3d],0xffffffb2
  4224d3:	dec    ecx
  4224d4:	or     DWORD PTR [eax+esi*2+0x39],ebx
  4224d8:	scas   eax,DWORD PTR es:[edi]
  4224d9:	and    eax,0xd7f372e
  4224de:	(bad)  
  4224df:	sbb    DWORD PTR [esi-0x235aa874],ecx
  4224e5:	fild   WORD PTR [ebx]
  4224e7:	bswap  ebp
  4224e9:	jmp    0xcf1b:0x32fcb80e
  4224f0:	sbb    al,BYTE PTR [edi-0x2]
  4224f3:	xlat   BYTE PTR ds:[ebx]
  4224f4:	mov    ecx,0x7a70f350
  4224f9:	inc    edi
  4224fa:	sub    BYTE PTR [eax],dh
  4224fc:	mov    gs,edx
  4224fe:	popa   
  4224ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422500:	cdq    
  422501:	hlt    
  422502:	scas   al,BYTE PTR es:[edi]
  422503:	les    ebp,FWORD PTR [ebx]
  422505:	jo     0x4224da
  422507:	jp     0x422536
  422509:	jne    0x4224ae
  42250b:	dec    edi
  42250c:	cs mov dl,0x40
  42250f:	and    eax,DWORD PTR [eax+0x3fc8008]
  422515:	push   cs
  422516:	lea    esp,[ecx-0x7f]
  422519:	and    DWORD PTR [edx],edi
  42251b:	add    eax,0x4197001b
  422520:	in     al,dx
  422521:	mov    bh,0x73
  422523:	ds je  0x422508
  422526:	leave  
  422527:	call   0x3cfa73f0
  42252c:	mov    cl,0x3c
  42252e:	push   edi
  42252f:	inc    esp
  422530:	mov    dl,0xc0
  422532:	xchg   ecx,eax
  422533:	test   ebp,esi
  422535:	inc    eax
  422536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422537:	mov    ecx,0x1986d450
  42253c:	jge    0x4225b8
  42253e:	ja     0x422504
  422540:	jb     0x42255c
  422542:	fild   QWORD PTR [ebp-0x47]
  422545:	jp     0x42250d
  422547:	arpl   dx,ax
  422549:	sub    BYTE PTR [ecx+0x5ab723e7],cl
  42254f:	mov    dh,0x81
  422551:	in     eax,0x21
  422553:	test   eax,0x2172c303
  422558:	data16 aad 0x7e
  42255b:	cmp    DWORD PTR [ecx+edi*4+0x46],eax
  42255f:	push   ecx
  422560:	mov    al,ds:0xf418d174
  422565:	inc    esp
  422566:	mov    esp,0xe2ebbe7d
  42256b:	mov    dl,0x76
  42256d:	dec    esi
  42256e:	cs clc 
  422570:	adc    DWORD PTR [edi+0x54],ebx
  422573:	fnstsw WORD PTR [esp+edi*2+0x5a7b6a39]
  42257a:	std    
  42257b:	in     eax,0xc8
  42257d:	add    dh,BYTE PTR [eax]
  42257f:	out    dx,eax
  422580:	cmp    eax,0xa55ca8ce
  422585:	xor    al,0xfd
  422587:	push   edx
  422588:	iret   
  422589:	push   0xffffffb4
  42258b:	std    
  42258c:	inc    ecx
  42258d:	cmp    DWORD PTR [esi],esp
  42258f:	fistp  DWORD PTR [ecx-0x46]
  422592:	cmp    BYTE PTR [edi],bh
  422594:	push   ebx
  422595:	cmp    ah,al
  422597:	ins    BYTE PTR es:[edi],dx
  422598:	repz adc al,0xe5
  42259b:	or     eax,0x1fe66dfe
  4225a0:	dec    esi
  4225a1:	jle    0x42261f
  4225a3:	(bad)  
  4225a4:	enter  0x7555,0xa1
  4225a8:	les    ebp,FWORD PTR [ecx+0x21ce9eb1]
  4225ae:	push   ss
  4225af:	jl     0x422565
  4225b1:	dec    ebp
  4225b2:	pop    esp
  4225b3:	dec    ebp
  4225b4:	cmp    edi,DWORD PTR [ecx-0x74dc4e8c]
  4225ba:	lods   al,BYTE PTR ds:[esi]
  4225bb:	(bad)  
  4225bc:	leave  
  4225bd:	mov    edx,0x0
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f8d:0x345faacc
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	hlt    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR [edi-0x5beb3097],dl
  4225df:	sbb    DWORD PTR [esi],esi
  4225e1:	push   esp
  4225e2:	or     BYTE PTR [ecx+0x185433cd],ah
  4225e8:	loope  0x42261d
  4225ea:	push   esi
  4225eb:	xchg   ebx,eax
  4225ec:	stos   DWORD PTR es:[edi],eax
  4225ed:	(bad)  
  4225ee:	mov    edi,0xccfb310e
  4225f3:	shl    BYTE PTR ds:0x33100e71,0xe6
  4225fa:	sbb    al,0xa6
  4225fc:	jo     0x422675
  4225fe:	iret   
  4225ff:	(bad)  
  422600:	cmp    BYTE PTR [ecx],cl
  422602:	mov    ds:0x3ee22dd8,eax
  422607:	les    edx,FWORD PTR [ebx]
  422609:	test   DWORD PTR [ecx+ebx*2],esp
  42260c:	pusha  
  42260d:	cli    
  42260e:	je     0x4225ac
  422610:	push   ebx
  422611:	fld    TBYTE PTR [ecx+0x69]
  422614:	js     0x4225b3
  422616:	bound  ecx,QWORD PTR [edi]
  422618:	retf   
  422619:	push   esp
  42261a:	inc    edi
  42261b:	inc    ecx
  42261c:	xor    al,0x38
  42261e:	popa   
  42261f:	jge    0x422663
  422621:	lock adc eax,0x6bb7fb5c
  422627:	sub    ch,BYTE PTR ds:0x878792a0
  42262d:	fs jmp 0x42261e
  422630:	mov    cl,0x97
  422632:	pushf  
  422633:	aaa    
  422634:	cmp    al,0xbe
  422636:	xchg   esi,eax
  422637:	inc    edi
  422638:	xor    ch,ah
  42263a:	ss jmp 0x9de37478
  422640:	out    0xa7,eax
  422642:	jp     0x422691
  422644:	dec    esi
  422645:	jbe    0x4225d7
  422647:	push   edx
  422648:	push   ds
  422649:	aas    
  42264a:	jmp    0xf033b9be
  42264f:	scas   al,BYTE PTR es:[edi]
  422650:	inc    esi
  422651:	leave  
  422652:	ja     0x422623
  422654:	ins    DWORD PTR es:[edi],dx
  422655:	xchg   edx,eax
  422656:	dec    edi
  422657:	in     al,dx
  422658:	imul   ebx,ebp,0xffffff9e
  42265b:	in     al,dx
  42265c:	adc    eax,0x2fafea69
  422661:	mov    ds:0x5e769550,eax
  422666:	and    al,0xe2
  422668:	aam    0x99
  42266a:	and    ebx,DWORD PTR [esp+ecx*1]
  42266d:	sub    DWORD PTR [ebx],edi
  42266f:	jl     0x422683
  422671:	and    BYTE PTR [ebx-0x6b],bl
  422674:	fwait
  422675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422676:	xlat   BYTE PTR ds:[ebx]
  422677:	dec    eax
  422678:	loopne 0x422611
  42267a:	xchg   esi,eax
  42267b:	ja     0x4226a9
  42267d:	rcl    BYTE PTR [edx+edx*2-0x6cd53d91],cl
  422684:	ins    DWORD PTR es:[edi],dx
  422685:	sbb    DWORD PTR [esi],edx
  422687:	mov    dl,BYTE PTR [ecx-0x78159b51]
  42268d:	and    cl,BYTE PTR ds:0x93a5fe4f
  422693:	fcmovbe st,st(5)
  422695:	pop    es
  422696:	out    0xe2,eax
  422698:	mov    ebx,0x1830e679
  42269d:	sbb    DWORD PTR [edi-0x2d],ebp
  4226a0:	das    
  4226a1:	cdq    
  4226a2:	mov    al,0x75
  4226a4:	dec    ebx
  4226a5:	jl     0x42265a
  4226a7:	mov    ebx,0xb7b7ad06
  4226ac:	(bad)  [ebx-0x19959dce]
  4226b2:	add    al,0xda
  4226b4:	lods   al,BYTE PTR ds:[esi]
  4226b5:	add    DWORD PTR [esi+ecx*1],edx
  4226b8:	push   ss
  4226b9:	std    
  4226ba:	leave  
  4226bb:	push   0x49
  4226bd:	xchg   esi,eax
  4226be:	mov    al,ds:0xdbf9ec9a
  4226c3:	mov    esi,0xb2783da8
  4226c8:	add    BYTE PTR [edi+0x5e6111d8],ch
  4226ce:	xchg   edi,eax
  4226cf:	aam    0x51
  4226d1:	push   esp
  4226d2:	inc    ecx
  4226d3:	push   cs
  4226d4:	test   al,0x75
  4226d6:	into   
  4226d7:	cs test al,0xd9
  4226da:	mov    eax,0x95b9b7b5
  4226df:	fisubr DWORD PTR [edx]
  4226e1:	or     DWORD PTR [eax+0x19a3fed],ebx
  4226e7:	cmc    
  4226e8:	call   0x965a:0x82c90c52
  4226ef:	jl     0x4226f4
  4226f1:	xor    dh,BYTE PTR [ebx+0x16]
  4226f4:	sub    cl,BYTE PTR [esi+0x2f]
  4226f7:	push   ebx
  4226f8:	dec    edi
  4226f9:	and    eax,edi
  4226fb:	mov    ch,0x63
  4226fd:	shl    ch,1
  4226ff:	cdq    
  422700:	cmp    al,0xb2
  422702:	dec    ebp
  422703:	cmp    DWORD PTR [eax+ebx*1-0x9],esi
  422707:	fistp  DWORD PTR [edx+0x77]
  42270a:	arpl   cx,ax
  42270c:	xchg   ecx,eax
  42270d:	ins    BYTE PTR es:[edi],dx
  42270e:	int3   
  42270f:	lods   eax,DWORD PTR ds:[esi]
  422710:	mov    esp,0x859c7f4c
  422715:	pop    edx
  422716:	sbb    ebp,ebp
  422718:	lods   al,BYTE PTR ds:[esi]
  422719:	lea    ebp,[ecx]
  42271b:	imul   esi,DWORD PTR [ecx+0x2d627b82],0xffffffa6
  422722:	outs   dx,BYTE PTR ds:[esi]
  422723:	ret    
  422724:	lods   al,BYTE PTR ds:[esi]
  422725:	ret    0xf8d0
  422728:	xchg   ebx,eax
  422729:	and    al,0xe5
  42272b:	fwait
  42272c:	into   
  42272d:	jbe    0x422763
  42272f:	inc    esi
  422730:	mov    eax,ds:0x47c7f9c5
  422735:	jmp    0x7b512b73
  42273a:	jae    0x422779
  42273c:	sbb    ebx,edx
  42273e:	jns    0x42271d
  422740:	test   al,0xe
  422742:	add    dh,BYTE PTR [eax-0x4d46097d]
  422748:	dec    ecx
  422749:	fmul   st,st(7)
  42274b:	jecxz  0x4227c6
  42274d:	jge    0x4227b4
  42274f:	aas    
  422750:	call   0xdc4317b8
  422755:	xchg   edx,eax
  422756:	mov    ebp,0xf08bc55a
  42275b:	pop    edx
  42275c:	dec    ecx
  42275d:	mov    ebp,0xbec2e6de
  422762:	cmp    al,0xcf
  422764:	ret    0x425e
  422767:	pop    esp
  422768:	mov    edi,0xa4e674d8
  42276d:	arpl   WORD PTR [eax-0x1],bp
  422770:	popa   
  422771:	jp     0x422705
  422773:	push   es
  422774:	push   eax
  422775:	mov    ebp,0x9cd4667e
  42277a:	popa   
  42277b:	lock loopne 0x422750
  42277e:	mov    ebx,0xd1db3e05
  422783:	mov    BYTE PTR cs:[ebp+0x29dfe032],al
  42278a:	(bad)
  42278d:	pop    ds
  42278e:	in     eax,dx
  42278f:	dec    esp
  422790:	mov    eax,ds:0x6de9b106
  422795:	xchg   BYTE PTR [ebx+0x18],dh
  422798:	arpl   WORD PTR [esi],bx
  42279a:	rcl    BYTE PTR [ebx-0x52],cl
  42279d:	push   edx
  42279e:	es adc al,0x3e
  4227a1:	lods   al,BYTE PTR ds:[esi]
  4227a2:	stos   BYTE PTR es:[edi],al
  4227a3:	inc    dx
  4227a5:	je     0x4227bf
  4227a7:	xlat   BYTE PTR ds:[ebx]
  4227a8:	clc    
  4227a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227aa:	xor    eax,0x69f843d7
  4227af:	jo     0x42281d
  4227b1:	ret    
  4227b2:	add    eax,0x8e539769
  4227b7:	sbb    DWORD PTR [esi+0x1c],ecx
  4227ba:	call   0x172a:0x6442ee46
  4227c1:	xchg   esp,eax
  4227c2:	mov    dl,0xf3
  4227c4:	xor    BYTE PTR [ebp-0x3f],bh
  4227c7:	mov    es,WORD PTR [edx-0x6cc83950]
  4227cd:	int    0xb4
  4227cf:	or     ecx,ebp
  4227d1:	xlat   BYTE PTR ds:[ebx]
  4227d2:	push   ds
  4227d3:	xchg   esi,eax
  4227d4:	push   ds
  4227d5:	into   
  4227d6:	jmp    0x422823
  4227d8:	jae    0x4227bc
  4227da:	mov    DWORD PTR [edx-0x43],edx
  4227dd:	mov    dh,0x32
  4227df:	or     bl,al
  4227e1:	add    esp,DWORD PTR [esi+0x3343fcf0]
  4227e7:	mov    dl,0x89
  4227e9:	mov    ecx,0xf772f31a
  4227ee:	(bad)  
  4227ef:	fdivr  st,st(6)
  4227f1:	mov    cl,0xd2
  4227f3:	jno    0x422806
  4227f5:	or     al,0xa0
  4227f7:	jle    0x422838
  4227f9:	cmp    DWORD PTR [ebx-0x5],edi
  4227fc:	xchg   esp,eax
  4227fd:	out    dx,al
  4227fe:	test   al,0xf9
  422800:	ds mov ch,0x8d
  422803:	inc    eax
  422804:	sahf   
  422805:	aaa    
  422806:	pop    edx
  422807:	repnz pop edi
  422809:	xor    BYTE PTR [ebx+0x1d2f6872],ch
  42280f:	xor    BYTE PTR [edi],al
  422811:	adc    dl,cl
  422813:	push   ecx
  422814:	inc    eax
  422815:	out    0x93,eax
  422817:	pusha  
  422818:	or     bh,dh
  42281a:	sbb    edi,DWORD PTR [edx]
  42281c:	nop
  42281d:	push   edx
  42281e:	fist   WORD PTR [edi+0x6]
  422821:	pop    ecx
  422822:	mov    eax,ds:0xf255f3f5
  422827:	mov    WORD PTR [eax],?
  422829:	or     ch,BYTE PTR [ebp-0x1ba3ece4]
  42282f:	and    DWORD PTR [edi+0x4f],esp
  422832:	push   0xcb55c2c6
  422837:	push   esp
  422838:	outs   dx,DWORD PTR ds:[esi]
  422839:	pop    es
  42283a:	daa    
  42283b:	jp     0x422803
  42283d:	inc    edi
  42283e:	sar    BYTE PTR [edi+0x2ab0bba],1
  422844:	push   0x67e98a78
  422849:	int3   
  42284a:	mov    al,ds:0xc2be0c8f
  42284f:	mov    al,dl
  422851:	pop    ebx
  422852:	or     al,0xc
  422854:	push   ebx
  422855:	sbb    BYTE PTR [edi-0x43aa8e48],0xb8
  42285c:	imul   eax,DWORD PTR [edx-0x56d205c9],0x868cd3b
  422866:	int3   
  422867:	in     al,dx
  422868:	adc    al,0x93
  42286a:	dec    esp
  42286b:	and    eax,0x5e18786c
  422870:	shr    DWORD PTR [edx],1
  422872:	punpcklbw mm5,DWORD PTR [ebx+0x7306f65c]
  422879:	inc    edx
  42287a:	fdecstp 
  42287c:	pop    esi
  42287d:	call   0x1ed7:0xff1e68d7
  422884:	aam    0x7a
  422886:	out    dx,al
  422887:	mov    ds:0x6a34abbf,eax
  42288c:	cli    
  42288d:	jo     0x4228da
  42288f:	retf   0x506e
  422892:	inc    ebx
  422893:	dec    esp
  422894:	sub    eax,0x57c19517
  422899:	inc    eax
  42289a:	push   0x5c
  42289c:	jno    0x4228fd
  42289e:	lea    ebp,[ecx]
  4228a0:	pop    ecx
  4228a1:	ja     0x4228cf
  4228a3:	lahf   
  4228a4:	(bad)  
  4228a5:	repz fdivr st,st(0)
  4228a8:	or     eax,0xc06f7658
  4228ad:	cmp    edx,0x7f6e2610
  4228b3:	sahf   
  4228b4:	imul   BYTE PTR [eax-0x477e0a43]
  4228ba:	jnp    0x42293a
  4228bc:	mov    BYTE PTR [edx],0x1a
  4228bf:	jmp    0xbd5fa694
  4228c4:	jb     0x4228c0
  4228c6:	cmp    eax,0xa84bd04d
  4228cb:	pop    edi
  4228cc:	test   BYTE PTR [ecx],ah
  4228ce:	jl     0x422926
  4228d0:	rcl    DWORD PTR [ecx-0x2b],0xf1
  4228d4:	cmp    DWORD PTR [ebp+0xc],0xffffff83
  4228d8:	xchg   edx,eax
  4228d9:	adc    edx,edi
  4228db:	jb     0x422931
  4228dd:	inc    ecx
  4228de:	(bad)  
  4228df:	shl    DWORD PTR [eax-0x6e1bedcd],cl
  4228e5:	jmp    0x5cbdd335
  4228ea:	call   0xe138:0x5152c4e
  4228f1:	jo     0x4228ac
  4228f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228f4:	or     esp,DWORD PTR [ebx+0x338e9e7]
  4228fa:	int3   
  4228fb:	pop    es
  4228fc:	addr16 mov ah,0xdf
  4228ff:	mov    esp,0x672a128d
  422904:	cld    
  422905:	stc    
  422906:	mov    WORD PTR [edx+0x60],?
  422909:	push   cs
  42290a:	(bad)  
  42290b:	jmp    0x959f:0x5bd66a1e
  422912:	xor    esp,DWORD PTR [ecx+0x38]
  422915:	stos   DWORD PTR es:[edi],eax
  422916:	or     BYTE PTR [ecx+0x19],0x25
  42291a:	xor    eax,0x48d8bf3b
  42291f:	out    dx,al
  422920:	cwde   
  422921:	push   ecx
  422922:	or     eax,0x32f25272
  422927:	inc    ebp
  422928:	pop    edi
  422929:	xor    al,0xb2
  42292b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42292c:	popf   
  42292d:	or     eax,0xf37e02cf
  422932:	sbb    ebx,ebx
  422934:	(bad)  
  422935:	cmp    DWORD PTR [ebx-0x3fb64e5f],esp
  42293b:	cmp    BYTE PTR [ebx+0x5b],0x0
  42293f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422940:	nop
  422941:	mov    al,0xa0
  422943:	mov    bh,0xfc
  422945:	sbb    DWORD PTR [edx-0x2a],eax
  422948:	or     edx,DWORD PTR [eax-0x45]
  42294b:	mov    cl,0x12
  42294d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42294e:	shl    esi,0x6d
  422951:	imul   ebx,DWORD PTR ds:0x62284e77,0x8b91b455
  42295b:	mov    esp,0xc8e578b5
  422960:	lea    edi,[edi]
  422962:	push   0xffffffa6
  422964:	jnp    0x4229d4
  422966:	jns    0x42292b
  422968:	fwait
  422969:	call   0x1222b7ab
  42296e:	add    DWORD PTR [edx],ebx
  422970:	and    eax,0xe9ff2769
  422975:	sub    eax,0x24b5c511
  42297a:	xchg   ebx,eax
  42297b:	shl    DWORD PTR [edi+0x3],1
  42297e:	inc    ebp
  42297f:	and    DWORD PTR [ebx],edx
  422981:	pop    ss
  422982:	mov    bh,0xb
  422984:	in     eax,dx
  422985:	rcl    DWORD PTR [edx-0x5d],cl
  422988:	cld    
  422989:	add    DWORD PTR [eax-0x47],ecx
  42298c:	ins    DWORD PTR es:[edi],dx
  42298d:	aaa    
  42298e:	sbb    esp,edi
  422990:	js     0x42291d
  422992:	cli    
  422993:	les    edx,FWORD PTR [ecx]
  422995:	adc    BYTE PTR [ebp+0x1a],bh
  422998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422999:	aad    0xc
  42299b:	adc    al,0x72
  42299d:	jns    0x4229ff
  42299f:	call   0xf3cf:0xe7bde654
  4229a6:	adc    BYTE PTR [esi+0x5f9c8fd0],dh
  4229ac:	pop    eax
  4229ad:	xchg   esi,eax
  4229ae:	in     eax,dx
  4229af:	fwait
  4229b0:	and    DWORD PTR [ebx+edx*4+0xd40a225],edx
  4229b7:	sbb    eax,0xf7553c55
  4229bc:	test   eax,0xe61268e1
  4229c1:	(bad)  
  4229c2:	sbb    al,0xef
  4229c4:	in     al,dx
  4229c5:	push   0xe45237
  4229ca:	into   
  4229cb:	out    0x12,al
  4229cd:	mov    al,0x73
  4229cf:	xchg   esi,eax
  4229d0:	cmp    DWORD PTR [edi+0x475b3ebb],esp
  4229d6:	sub    DWORD PTR [edi+0x4b3e1fa2],ebp
  4229dc:	cs aas 
  4229de:	add    al,0x9c
  4229e0:	retf   0x1e11
  4229e3:	and    esp,ebx
  4229e5:	cmp    edx,DWORD PTR [esi+edi*4+0x5dcf0159]
  4229ec:	lds    ebp,FWORD PTR [esi+0x5a]
  4229ef:	scas   eax,DWORD PTR es:[edi]
  4229f0:	or     DWORD PTR [ebx+0x6a],ebp
  4229f3:	ret    0x5618
  4229f6:	js     0x42298f
  4229f8:	in     al,dx
  4229f9:	push   cs
  4229fa:	das    
  4229fb:	les    ecx,FWORD PTR [ebp-0x603c1adf]
  422a01:	add    BYTE PTR [esi],dh
  422a03:	sbb    DWORD PTR ds:0xd7dfa865,ecx
  422a09:	mov    BYTE PTR [edi-0x499a7ec6],al
  422a0f:	jg     0x4229b3
  422a11:	dec    esp
  422a12:	cmp    edi,ebp
  422a14:	and    eax,0x3d6f8491
  422a19:	pop    ebp
  422a1a:	aam    0x28
  422a1c:	sbb    BYTE PTR [edx+0x4d2c6a4c],cl
  422a22:	jno    0x4229b6
  422a24:	sbb    ch,BYTE PTR [edx-0x15da7162]
  422a2a:	loope  0x422a0e
  422a2c:	pop    ss
  422a2d:	call   0x5434:0xc9841e7d
  422a34:	mov    bh,0xb4
  422a36:	add    al,0x7a
  422a38:	cld    
  422a39:	pushf  
  422a3a:	das    
  422a3b:	cmp    dl,BYTE PTR [edx-0x7771dd04]
  422a41:	fild   WORD PTR [edi]
  422a43:	bound  esi,QWORD PTR [eax+0x2dd866bd]
  422a49:	mov    esp,0xc9fb498f
  422a4e:	pop    esi
  422a4f:	aad    0xca
  422a51:	sub    ch,ch
  422a53:	add    dl,BYTE PTR [ebx-0x76e5998f]
  422a59:	repnz ins BYTE PTR es:[edi],dx
  422a5b:	inc    ebx
  422a5c:	test   BYTE PTR [edi],dl
  422a5e:	mov    dh,0xa4
  422a60:	jo     0x422a5c
  422a62:	sbb    al,0x77
  422a64:	fldenv [esi+0x12]
  422a67:	adc    esi,esp
  422a69:	ja     0x422ac2
  422a6b:	pop    ds
  422a6c:	xor    ah,0xe0
  422a6f:	sahf   
  422a70:	(bad)  
  422a71:	cs push ds
  422a73:	xor    ch,BYTE PTR [ebp+edi*8+0x33]
  422a77:	clc    
  422a78:	or     eax,0x4d8461db
  422a7d:	aad    0xb6
  422a7f:	add    edi,DWORD PTR es:0xa576c5f2
  422a86:	pop    eax
  422a87:	mov    bl,0x6d
  422a89:	jnp    0x422afd
  422a8b:	cdq    
  422a8c:	test   BYTE PTR [esi+ebx*8],dh
  422a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a90:	js     0x422a8b
  422a92:	and    DWORD PTR fs:[edx],ecx
  422a95:	in     eax,0x95
  422a97:	pop    esi
  422a98:	add    al,0x5f
  422a9a:	push   esp
  422a9b:	and    ebp,ecx
  422a9d:	push   ebp
  422a9e:	xchg   BYTE PTR [eax],dl
  422aa0:	jmp    0x422a41
  422aa2:	fcomp  QWORD PTR [ebx+0x1416e3c0]
  422aa8:	sub    edx,edx
  422aaa:	jg     0x422a58
  422aac:	and    bh,bl
  422aae:	int    0x4d
  422ab0:	xchg   esp,eax
  422ab1:	add    eax,0x1fc6e6e3
  422ab6:	push   ebx
  422ab7:	cmc    
  422ab8:	int    0x96
  422aba:	aas    
  422abb:	mov    edi,0xe02bbaf8
  422ac0:	fsub   st(3),st
  422ac2:	pusha  
  422ac3:	and    ah,BYTE PTR [esp+eiz*8+0x4c]
  422ac7:	jo     0x422a75
  422ac9:	sub    edx,esi
  422acb:	cmp    eax,0x2fa7
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0xfebcc14],bh
  422ae2:	and    DWORD PTR [ecx+eax*1+0x4f400],0x944d4e00
  422aed:	test   eax,0xa7db4b6e
  422af2:	mov    dh,0xdc
  422af4:	in     eax,0xa5
  422af6:	mov    al,0xef
  422af8:	mul    BYTE PTR [ebp-0x373cee63]
  422afe:	dec    ebx
  422aff:	push   ecx
  422b00:	fucom  st(6)
  422b02:	jg     0x422a9d
  422b04:	push   0x9dd2a619
  422b09:	mov    ebx,0x113261dd
  422b0e:	fcmovnb st,st(6)
  422b10:	xchg   cl,al
  422b12:	pxor   mm1,mm6
  422b15:	sub    ah,dh
  422b17:	jecxz  0x422b51
  422b19:	jle    0x422a9e
  422b1b:	scas   al,BYTE PTR es:[edi]
  422b1c:	repnz pop ebx
  422b1e:	bound  ebx,QWORD PTR [ecx+edi*4+0x64425608]
  422b25:	and    dh,dh
  422b27:	cmp    ch,BYTE PTR [edx+esi*8]
  422b2a:	cmc    
  422b2b:	in     al,dx
  422b2c:	adc    eax,edx
  422b2e:	mov    dl,0x4a
  422b30:	arpl   WORD PTR [edx+0x70],sp
  422b33:	sbb    eax,0xf8957d78
  422b38:	xlat   BYTE PTR ds:[ebx]
  422b39:	fdivr  DWORD PTR [ebx-0x2cc6ee58]
  422b3f:	icebp  
  422b40:	push   ebx
  422b41:	not    DWORD PTR [ecx]
  422b43:	fucomp st(3)
  422b45:	loope  0x422b6b
  422b47:	out    dx,eax
  422b48:	dec    edx
  422b49:	nop
  422b4a:	xor    BYTE PTR [edi],al
  422b4c:	xor    esp,edi
  422b4e:	bound  edi,QWORD PTR [edi+0x6]
  422b51:	mov    ebp,esp
  422b53:	repnz jmp 0x254c:0x5b95cf81
  422b5b:	jmp    0x422b8d
  422b5d:	push   ss
  422b5e:	mov    cs,WORD PTR [eax-0x38dfebf6]
  422b64:	push   cs
  422b65:	aad    0xf3
  422b67:	test   BYTE PTR [esi],bh
  422b69:	inc    esi
  422b6a:	jne    0x422b6d
  422b6c:	(bad)  [esi]
  422b6e:	jnp    0x422bcc
  422b70:	mov    esi,DWORD PTR [esi+0x6a51f92d]
  422b76:	imul   edi,DWORD PTR [edx+0x58e57e03],0x373238e1
  422b80:	push   ebp
  422b81:	mov    eax,0x64983b29
  422b86:	pop    es
  422b87:	push   ecx
  422b88:	outs   dx,DWORD PTR ds:[esi]
  422b89:	aas    
  422b8a:	mov    dl,0x9d
  422b8c:	mov    ds:0x158841,al
  422b91:	in     al,dx
  422b92:	jno    0x422b4f
  422b94:	mov    ds,WORD PTR [ebx]
  422b96:	dec    ebp
  422b97:	scas   eax,DWORD PTR es:[edi]
  422b98:	jle    0x422b73
  422b9a:	push   es
  422b9b:	sbb    DWORD PTR [edi-0x80],esp
  422b9e:	outs   dx,DWORD PTR ds:[esi]
  422b9f:	je     0x422b9f
  422ba1:	sbb    eax,0x30c5a81f
  422ba6:	into   
  422ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba8:	das    
  422ba9:	loope  0x422c0d
  422bab:	jns    0x422bc6
  422bad:	inc    ecx
  422bae:	pop    edi
  422baf:	push   cs
  422bb0:	nop
  422bb1:	xchg   BYTE PTR [edi+0x2c],bh
  422bb4:	retf   0x8c55
  422bb7:	pop    ds
  422bb8:	cmp    BYTE PTR [ebx+0x5d],dl
  422bbb:	mov    ebp,0x7d9529f9
  422bc0:	and    BYTE PTR [edi-0x66a19f87],ah
  422bc6:	mov    esp,edx
  422bc8:	cmp    DWORD PTR [esi+ecx*1+0x564085dc],edi
  422bcf:	(bad)  [ebx]
  422bd1:	mov    bh,0x8e
  422bd3:	jnp    0x422bc5
  422bd5:	xor    ch,bh
  422bd7:	sbb    ah,BYTE PTR [ebx]
  422bd9:	mov    edx,0xf4550869
  422bde:	cli    
  422bdf:	imul   ebp
  422be1:	cdq    
  422be2:	jg     0x422bd5
  422be4:	shl    BYTE PTR [eax],0x9e
  422be7:	or     bl,BYTE PTR [eax-0x72]
  422bea:	in     al,dx
  422beb:	push   es
  422bec:	clc    
  422bed:	mov    ah,0x86
  422bef:	clc    
  422bf0:	jp     0x422c12
  422bf2:	sbb    BYTE PTR [eax-0x6639df1c],0x80
  422bf9:	push   es
  422bfa:	mov    eax,0xa141938d
  422bff:	add    DWORD PTR [edx+0xe092ffe],esp
  422c05:	pop    ebp
  422c06:	jns    0x422c52
  422c08:	daa    
  422c09:	fsub   QWORD PTR [eax-0x3a]
  422c0c:	scas   al,BYTE PTR es:[edi]
  422c0d:	and    DWORD PTR [edx+0x72],ecx
  422c10:	add    eax,0x87585a11
  422c15:	push   edx
  422c16:	xchg   ebp,eax
  422c17:	inc    esp
  422c18:	push   ebx
  422c19:	or     ebx,DWORD PTR [edx]
  422c1b:	add    DWORD PTR [eax],0xffffffaa
  422c1e:	fist   DWORD PTR [ecx-0x9f4d362]
  422c24:	xchg   edi,eax
  422c25:	jbe    0x422c4b
  422c27:	aam    0x68
  422c29:	jno    0x422be6
  422c2b:	arpl   WORD PTR [eax-0x30db1db2],bx
  422c31:	push   0x90ebe350
  422c36:	jo     0x422c18
  422c38:	push   esi
  422c39:	loop   0x422c05
  422c3b:	sub    DWORD PTR [edx+0xe],ecx
  422c3e:	(bad)  
  422c3f:	(bad)
  422c43:	lock jle 0x422c71
  422c46:	pop    ebx
  422c47:	or     al,0x19
  422c49:	out    dx,al
  422c4a:	and    eax,0x1d9f1b23
  422c4f:	mov    al,ds:0xabab88f4
  422c54:	mov    eax,0x8ceace17
  422c59:	inc    eax
  422c5a:	repz int3 
  422c5c:	mov    ch,0x1d
  422c5e:	mov    WORD PTR [ebx],gs
  422c60:	mov    edx,0x841221dc
  422c65:	pop    edi
  422c66:	mov    ch,0xa4
  422c68:	ror    BYTE PTR [esi],1
  422c6a:	jge    0x422c01
  422c6c:	jg     0x422c60
  422c6e:	sub    BYTE PTR [eax+0x47],dl
  422c71:	test   eax,0x47e6f8fe
  422c76:	shl    ch,0xfa
  422c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c7a:	dec    edi
  422c7b:	rol    BYTE PTR [ebx-0x1b37c1f4],1
  422c81:	scas   al,BYTE PTR es:[edi]
  422c82:	daa    
  422c83:	adc    dh,ah
  422c85:	test   DWORD PTR [eax],edx
  422c87:	xchg   esi,eax
  422c88:	mov    cl,al
  422c8a:	mov    bh,0xb1
  422c8c:	test   BYTE PTR [esi],cl
  422c8e:	retf   0x4120
  422c91:	rcr    BYTE PTR [edx+0x211a6e5f],1
  422c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c98:	adc    eax,0x618fdf9b
  422c9d:	inc    edi
  422c9e:	arpl   WORD PTR [eax+0x7a1be11b],sp
  422ca4:	imul   DWORD PTR [ebx-0x7764aad9]
  422caa:	dec    esi
  422cab:	jnp    0x422c91
  422cad:	sqrtps xmm5,XMMWORD PTR [edx+ebx*1]
  422cb1:	mov    dh,0x1f
  422cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cb4:	xchg   ecx,eax
  422cb5:	or     ebx,DWORD PTR [edi]
  422cb7:	sbb    edi,DWORD PTR [eax+ebx*1-0x1c7bd9a2]
  422cbe:	into   
  422cbf:	retf   
  422cc0:	mov    ax,ds:0x9adeba9e
  422cc6:	cmp    al,0x40
  422cc8:	cdq    
  422cc9:	add    BYTE PTR ds:0xf7dbc6bd,dh
  422ccf:	mov    al,ds:0x13c7ccc6
  422cd4:	push   ds
  422cd5:	cmp    al,0x20
  422cd7:	(bad)  
  422cd8:	pusha  
  422cd9:	cld    
  422cda:	adc    al,0xb7
  422cdc:	dec    esp
  422cdd:	lods   al,BYTE PTR ds:[esi]
  422cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cdf:	retf   
  422ce0:	or     ch,0x26
  422ce3:	sub    BYTE PTR [esi-0xf],cl
  422ce6:	repnz mov dl,0xe2
  422ce9:	jo     0x422cfa
  422ceb:	xchg   bh,bl
  422ced:	pop    edi
  422cee:	(bad)  
  422cef:	ret    0x35ad
  422cf2:	(bad)  
  422cf3:	aad    0x68
  422cf5:	or     DWORD PTR [eax],esi
  422cf7:	dec    ebp
  422cf8:	xlat   BYTE PTR ds:[ebx]
  422cf9:	jb     0x422d55
  422cfb:	(bad)  
  422cfc:	or     al,0xb7
  422cfe:	sbb    ah,BYTE PTR [ebx]
  422d00:	das    
  422d01:	fldcw  WORD PTR [ebp+0x28b8c3ae]
  422d07:	jl     0x422d2b
  422d09:	pop    esi
  422d0a:	inc    eax
  422d0b:	jb     0x422d18
  422d0d:	pop    ecx
  422d0e:	adc    BYTE PTR [ebx+0x4b],bl
  422d11:	sahf   
  422d12:	and    DWORD PTR [ebx-0x3e],0xfffbc488
  422d19:	fisubr WORD PTR [eax]
  422d1b:	xchg   ch,bl
  422d1d:	lods   eax,DWORD PTR ds:[esi]
  422d1e:	paddusb mm0,QWORD PTR [ebx+0xe32632e]
  422d25:	mov    esp,0x2af99344
  422d2a:	sub    cl,BYTE PTR [esi-0x67f915fd]
  422d30:	xor    ch,dh
  422d32:	bt     DWORD PTR ds:0xb8eeaacc,edx
  422d39:	inc    ebp
  422d3a:	in     al,dx
  422d3b:	mov    DWORD PTR [eax],edi
  422d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d3e:	inc    bl
  422d40:	adc    DWORD PTR [ecx-0x76],edx
  422d43:	xchg   edi,eax
  422d44:	ror    DWORD PTR [ebx],0x23
  422d47:	or     BYTE PTR [ebx+0x5c],bl
  422d4a:	cld    
  422d4b:	mov    ecx,0x37333b73
  422d50:	inc    ebp
  422d51:	xchg   edx,eax
  422d52:	das    
  422d53:	fcom   DWORD PTR [bp+di-0x6]
  422d57:	push   es
  422d58:	and    bh,BYTE PTR [ebx-0x60402aaf]
  422d5e:	cmp    DWORD PTR [edx+0xc],edi
  422d61:	xor    al,0xc1
  422d63:	push   edi
  422d64:	pop    ebx
  422d65:	mov    esi,0xd8de3cd
  422d6a:	mov    bh,0xf7
  422d6c:	sti    
  422d6d:	in     al,dx
  422d6e:	push   edi
  422d6f:	shl    BYTE PTR [eax-0x15],0xdc
  422d73:	je     0x422dc6
  422d75:	or     edi,ebp
  422d77:	es and esp,0xe
  422d7b:	scas   al,BYTE PTR es:[edi]
  422d7c:	call   0x8115:0x42e13efd
  422d83:	inc    ebx
  422d84:	pusha  
  422d85:	xor    al,0x7b
  422d87:	pop    esi
  422d88:	add    ch,BYTE PTR [ebp-0x3745b6dd]
  422d8e:	mov    ch,0x5d
  422d90:	and    BYTE PTR [ecx-0x1e],al
  422d93:	fldenv [ecx+edi*8]
  422d96:	hlt    
  422d97:	pop    ecx
  422d98:	test   al,0xb2
  422d9a:	mov    al,0x7e
  422d9c:	or     al,0xd4
  422d9e:	jge    0x422d95
  422da0:	jp     0x422d3c
  422da2:	or     eax,0x2e6a8fd4
  422da7:	popa   
  422da8:	mov    dh,0x34
  422daa:	bound  edx,QWORD PTR [ebp+0x37]
  422dad:	cwde   
  422dae:	repnz mov edi,0x66416ace
  422db4:	shl    DWORD PTR [edi],1
  422db6:	sub    ch,BYTE PTR [edi]
  422db8:	xchg   edx,eax
  422db9:	xor    esi,DWORD PTR [ebx-0x2984bf6c]
  422dbf:	cdq    
  422dc0:	adc    bl,BYTE PTR [ebp-0x7]
  422dc3:	ja     0x422da4
  422dc5:	jnp    0x422dfe
  422dc7:	jmp    0xea9c6140
  422dcc:	ret    0x2e22
  422dcf:	aas    
  422dd0:	lahf   
  422dd1:	ror    BYTE PTR [edx+0x33],1
  422dd4:	adc    ebx,DWORD PTR [ebx+0x21]
  422dd7:	inc    edx
  422dd8:	xor    DWORD PTR [edi+ebp*4],0x35
  422ddc:	xchg   esi,eax
  422ddd:	add    bl,al
  422ddf:	(bad)  
  422de0:	mov    esp,eax
  422de2:	aaa    
  422de3:	test   esp,esi
  422de5:	dec    ebp
  422de6:	inc    ecx
  422de7:	sbb    DWORD PTR [esi],ebp
  422de9:	les    eax,FWORD PTR [esi]
  422deb:	cli    
  422dec:	lahf   
  422ded:	stc    
  422dee:	dec    edi
  422def:	push   edx
  422df0:	cmp    al,BYTE PTR [edi]
  422df2:	or     ecx,eax
  422df4:	data16 hlt 
  422df6:	xlat   BYTE PTR ds:[ebx]
  422df7:	rcr    ch,cl
  422df9:	rol    DWORD PTR [eax-0x1cfa1ff8],1
  422dff:	(bad)
  422e02:	and    eax,0x52510619
  422e07:	iret   
  422e08:	mov    ds:0x93865c9b,al
  422e0d:	xor    al,0xed
  422e0f:	mov    al,ch
  422e11:	push   esi
  422e12:	scas   eax,DWORD PTR es:[edi]
  422e13:	add    BYTE PTR [ebx-0x24],bh
  422e16:	iret   
  422e17:	adc    ecx,DWORD PTR [eax+0x19e3305c]
  422e1d:	add    cl,cl
  422e1f:	ins    DWORD PTR es:[edi],dx
  422e20:	test   BYTE PTR ds:0x5ea9754e,bh
  422e26:	pushf  
  422e27:	pop    es
  422e28:	mov    DWORD PTR [eax-0x48],0xf31d3090
  422e2f:	xchg   edx,eax
  422e30:	(bad)  
  422e31:	xchg   edx,eax
  422e32:	adc    al,0x40
  422e34:	repz push ds
  422e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e37:	outs   dx,BYTE PTR ds:[esi]
  422e38:	cmp    esi,DWORD PTR [ebp+0xe33a968]
  422e3e:	jns    0x422df8
  422e40:	xchg   edi,eax
  422e41:	sub    eax,0xb859d5df
  422e46:	push   esp
  422e47:	call   0x36d39d36
  422e4c:	je     0x422e5b
  422e4e:	mov    ch,dl
  422e50:	or     DWORD PTR [edi-0x18],ebp
  422e53:	fcomp  DWORD PTR [eax+0x4dc4ba5b]
  422e59:	popa   
  422e5a:	pop    edi
  422e5b:	(bad)  
  422e5c:	cmp    al,0xb5
  422e5e:	mov    BYTE PTR [eax],0xa0
  422e61:	jp     0x422ed7
  422e63:	int3   
  422e64:	cmp    ebx,DWORD PTR [ecx+esi*1+0x68]
  422e68:	and    bh,BYTE PTR [edx]
  422e6a:	ins    DWORD PTR es:[edi],dx
  422e6b:	scas   al,BYTE PTR es:[edi]
  422e6c:	push   ebp
  422e6d:	push   ebp
  422e6e:	pushf  
  422e6f:	push   eax
  422e70:	fincstp 
  422e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e73:	shl    BYTE PTR [ecx-0xba1a870],0xda
  422e7a:	and    al,0x8b
  422e7c:	mov    al,ds:0xbc35b76f
  422e81:	jns    0x422e53
  422e83:	pop    eax
  422e84:	inc    DWORD PTR [eax+ebp*4+0x785d63e]
  422e8b:	rcl    DWORD PTR [esi],0xd9
  422e8e:	ficomp DWORD PTR [ecx+0x2396d0d1]
  422e94:	call   0x84b0:0x6096a8b4
  422e9b:	mov    dl,0x2a
  422e9d:	stos   DWORD PTR es:[edi],eax
  422e9e:	dec    ebp
  422e9f:	adc    DWORD PTR [edi+0x54765c50],eax
  422ea5:	(bad)  
  422ea7:	in     eax,0x31
  422ea9:	cs (bad) 
  422eab:	mov    ebp,0x11a0613f
  422eb0:	mov    edx,0xd9c24074
  422eb5:	hlt    
  422eb6:	mov    BYTE PTR [edx-0x65],0xad
  422eba:	jne    0x422e4c
  422ebc:	sub    edi,edi
  422ebe:	out    dx,al
  422ebf:	arpl   WORD PTR [esi+0x7a],di
  422ec2:	lahf   
  422ec3:	retf   0xcbb8
  422ec6:	pop    es
  422ec7:	push   esi
  422ec8:	or     edx,DWORD PTR [ebp+0x59]
  422ecb:	jmp    0xf36157b6
  422ed0:	and    al,0x5
  422ed2:	js     0x422e72
  422ed4:	fld    DWORD PTR [eax]
  422ed6:	ja     0x422f2f
  422ed8:	and    DWORD PTR [edx+edx*1+0x76a219f1],eax
  422edf:	mov    ebx,0x13fd44d3
  422ee4:	std    
  422ee5:	add    bl,BYTE PTR [eax+0x2c]
  422ee8:	cmc    
  422ee9:	adc    DWORD PTR [ebx],esp
  422eeb:	xchg   DWORD PTR [eax+0x2f],eax
  422eee:	sahf   
  422eef:	ins    BYTE PTR es:[edi],dx
  422ef0:	jmp    0x422ed6
  422ef2:	out    0x6,eax
  422ef4:	sahf   
  422ef5:	das    
  422ef6:	stos   DWORD PTR es:[edi],eax
  422ef7:	out    dx,eax
  422ef8:	adc    BYTE PTR ds:0xddf41180,bl
  422efe:	jmp    DWORD PTR [ebp-0xb7f7ba6]
  422f04:	div    BYTE PTR [ebx+0x4c]
  422f07:	jae    0x422f63
  422f09:	sbb    DWORD PTR [edx+0x7a7dd5dd],ebp
  422f0f:	push   esp
  422f10:	mov    ebx,0x174d152b
  422f15:	hlt    
  422f16:	rcl    DWORD PTR [ebx],cl
  422f18:	inc    eax
  422f19:	addr16 daa 
  422f1b:	fs inc ebx
  422f1d:	pop    esp
  422f1e:	dec    BYTE PTR [esp+ecx*4]
  422f21:	adc    DWORD PTR [edx],edx
  422f23:	inc    ebx
  422f24:	out    0xc2,eax
  422f26:	xor    BYTE PTR [edx-0x32],bh
  422f29:	pop    esp
  422f2a:	in     al,dx
  422f2b:	in     al,dx
  422f2c:	mov    bh,0xa3
  422f2e:	dec    ebx
  422f2f:	and    BYTE PTR [ebx-0x61],dl
  422f32:	sub    al,0xd2
  422f34:	je     0x422ecd
  422f36:	data16 or BYTE PTR [ecx+0x71],0x9d
  422f3b:	jbe    0x422f8b
  422f3d:	das    
  422f3e:	inc    ebp
  422f3f:	and    eax,0x9b41769f
  422f44:	lea    esi,[ebp-0x1db5c356]
  422f4a:	and    esi,DWORD PTR [ebx+0x50e0edb9]
  422f50:	jge    0x422f4f
  422f52:	js     0x422fb6
  422f54:	imul   ebp,DWORD PTR [edi+ebp*1],0x9ac951cd
  422f5b:	imul   ecx,DWORD PTR [edx+0x76],0xffffffdd
  422f5f:	add    bh,0x0
  422f62:	stos   DWORD PTR es:[edi],eax
  422f63:	or     BYTE PTR [edi+0x1670240b],bl
  422f69:	adc    ecx,DWORD PTR [ebp+0x1]
  422f6c:	cmp    eax,DWORD PTR [edi]
  422f6e:	sub    eax,0xab4b342d
  422f73:	clc    
  422f74:	js     0x422f54
  422f76:	aad    0x61
  422f78:	test   DWORD PTR [edi+edi*1-0x760aeb8],eax
  422f7f:	sbb    BYTE PTR [eax+0x8],0x4b
  422f83:	mov    edx,0xd3782109
  422f88:	inc    ebp
  422f89:	in     eax,dx
  422f8a:	xor    BYTE PTR [edi+edx*4-0x3f2a8719],ch
  422f91:	aas    
  422f92:	ins    DWORD PTR es:[edi],dx
  422f93:	addr16 loopne 0x422f9a
  422f96:	ret    
  422f97:	pop    es
  422f98:	sub    al,0xb4
  422f9a:	ins    DWORD PTR es:[edi],dx
  422f9b:	aas    
  422f9c:	adc    eax,0xb90336a8
  422fa1:	int    0xc1
  422fa3:	bound  ecx,QWORD PTR [esi+0x7e278389]
  422fa9:	les    ebp,FWORD PTR [eax-0x7b]
  422fac:	fcom   DWORD PTR [ecx]
  422fae:	lods   al,BYTE PTR ds:[esi]
  422faf:	(bad)  
  422fb0:	outs   dx,BYTE PTR ds:[esi]
  422fb1:	jne    0x422f95
  422fb3:	add    dh,BYTE PTR [ecx+ecx*4-0x77]
  422fb7:	mov    eax,0xe87b9d5a
  422fbc:	add    eax,esi
  422fbe:	cmp    al,0xe3
  422fc0:	dec    eax
  422fc1:	jne    0x42300f
  422fc3:	js     0x422fe7
  422fc5:	pop    es
  422fc6:	(bad)  
  422fc7:	ret    0xc362
  422fca:	jp     0x422f77
  422fcc:	in     eax,0xa0
  422fce:	dec    ebp
  422fcf:	mov    ds:0x48016e30,al
  422fd4:	aad    0x54
  422fd6:	fidivr WORD PTR [bp+si+0x4b]
  422fda:	dec    ebp
  422fdb:	sar    DWORD PTR [edi],0xe3
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    ebp,DWORD PTR [ebp-0x47]
  422ff0:	retf   
  422ff1:	xor    BYTE PTR [ebp-0x57],0x1
  422ff5:	add    ah,dh
  422ff7:	add    al,0x0
  422ff9:	add    BYTE PTR [edi-0x6d],cl
  422ffc:	ror    bh,0x53
  422fff:	in     al,0xcc
  423001:	jge    0x422fc1
  423003:	dec    eax
  423004:	add    al,BYTE PTR [esp+ebx*8+0x219d6cd6]
  42300b:	dec    esp
  42300c:	jp     0x423070
  42300e:	mov    ecx,DWORD PTR [ebx]
  423010:	jg     0x423044
  423012:	ja     0x42304d
  423014:	stos   DWORD PTR es:[edi],eax
  423015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423016:	cmp    eax,0xe4c5d1e7
  42301b:	aas    
  42301c:	mov    cl,0xb
  42301e:	xchg   edi,eax
  42301f:	(bad)  
  423020:	pop    eax
  423021:	ss ins BYTE PTR es:[edi],dx
  423023:	js     0x42302e
  423025:	mov    ch,0x21
  423027:	mov    ebp,0x75a3ca0e
  42302c:	jle    0x422fb6
  42302e:	dec    esp
  42302f:	push   cs
  423030:	xchg   esp,eax
  423031:	push   0x36
  423033:	ja     0x422fbd
  423035:	mov    cl,0x26
  423037:	adc    esi,DWORD PTR [esi]
  423039:	mov    BYTE PTR gs:[edi+0x30628ccd],ch
  423040:	mov    eax,edx
  423042:	mov    edi,0xf9ab2cb8
  423047:	es lock sti 
  42304a:	iret   
  42304b:	out    0x10,al
  42304d:	jl     0x422fe2
  42304f:	aad    0x9f
  423051:	or     esi,DWORD PTR [ecx+0x6e8eb470]
  423057:	pop    ss
  423058:	push   edi
  423059:	sbb    DWORD PTR [ecx],edi
  42305b:	mov    ch,BYTE PTR ds:0xafaa9e16
  423061:	mov    bl,0xcc
  423063:	or     edx,DWORD PTR [esi+ecx*1+0x12a3aae7]
  42306a:	adc    al,0xe5
  42306c:	mov    bh,0xba
  42306e:	ja     0x423011
  423070:	loopne 0x42307d
  423072:	loope  0x423023
  423074:	fisub  DWORD PTR [eax+0x714eb548]
  42307a:	jp     0x4230db
  42307c:	mov    ds:0xddeab976,eax
  423081:	mov    ds:0xf4af7d14,eax
  423086:	adc    DWORD PTR [esi+0x48],0xffffffbd
  42308a:	in     al,0x4d
  42308c:	js     0x423018
  42308e:	add    BYTE PTR [ecx+0xe3c1e4],ch
  423094:	xchg   ecx,eax
  423095:	nop
  423096:	pop    eax
  423097:	mov    edi,0xb395e1ac
  42309c:	xchg   ebx,eax
  42309d:	sub    dh,0x7c
  4230a0:	je     0x4230b7
  4230a2:	add    bl,0xad
  4230a5:	xchg   ecx,eax
  4230a6:	adc    DWORD PTR [edi],edx
  4230a8:	(bad)  
  4230a9:	push   esp
  4230aa:	mov    bl,0x27
  4230ac:	popf   
  4230ad:	ror    BYTE PTR [ecx],cl
  4230af:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4230b1:	fld    QWORD PTR [ecx+0x3e]
  4230b4:	xchg   ebx,eax
  4230b5:	shr    BYTE PTR [ecx+ebx*1],cl
  4230b8:	add    eax,0x918ee6dc
  4230bd:	test   BYTE PTR [ebp+0x32],dl
  4230c0:	add    DWORD PTR [eax-0x2fd28a1b],0x66
  4230c7:	shl    DWORD PTR [eax-0x2f],1
  4230ca:	xor    dl,BYTE PTR [ecx]
  4230cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230cd:	cmp    ah,0xcc
  4230d0:	inc    ebx
  4230d1:	(bad)  
  4230d3:	fisub  WORD PTR [ebx]
  4230d5:	in     al,0x40
  4230d7:	xchg   DWORD PTR [esi+0x52207f00],eax
  4230dd:	push   esp
  4230de:	sbb    bh,BYTE PTR [ecx]
  4230e0:	cmp    ebx,DWORD PTR [esi]
  4230e2:	ja     0x4230eb
  4230e4:	pop    edx
  4230e5:	dec    esp
  4230e6:	dec    esi
  4230e7:	push   ds
  4230e8:	cmp    BYTE PTR [eax-0x10],bl
  4230eb:	cmovae eax,DWORD PTR [esi-0x3c3a03b6]
  4230f2:	clc    
  4230f3:	cld    
  4230f4:	fidiv  WORD PTR [edi]
  4230f6:	sahf   
  4230f7:	push   edx
  4230f8:	sub    DWORD PTR [ebp-0x27c610fe],0x8b238b35
  423102:	int    0xb2
  423104:	shl    BYTE PTR [edx-0x46],cl
  423107:	rcl    DWORD PTR [edx],cl
  423109:	rol    DWORD PTR [ecx+0x4f],0x50
  42310d:	add    eax,0x470afbb2
  423112:	cmp    al,0x21
  423114:	mov    esp,0xd5aec815
  423119:	mov    ah,0x1e
  42311b:	out    dx,eax
  42311c:	cmp    ah,dh
  42311e:	dec    ebx
  42311f:	or     eax,0xd90ff464
  423124:	dec    edi
  423125:	in     eax,dx
  423126:	test   BYTE PTR [ebx-0x68],dh
  423129:	jbe    0x423182
  42312b:	mov    ds:0xf4d8486e,eax
  423130:	adc    eax,0x6eb5fb45
  423135:	dec    edx
  423136:	pop    esi
  423137:	pushf  
  423138:	inc    esp
  423139:	push   ecx
  42313a:	push   edx
  42313b:	dec    edx
  42313c:	sub    esi,DWORD PTR [eax]
  42313e:	fucomi st,st(7)
  423140:	mov    ds:0x6a3b6118,eax
  423145:	adc    cl,BYTE PTR [edx-0x2d]
  423148:	loopne 0x4230d3
  42314a:	test   al,0x4
  42314c:	leave  
  42314d:	call   0x9a63:0xa541b216
  423154:	add    BYTE PTR [esi-0x68a09640],0x69
  42315b:	sub    al,0x90
  42315d:	call   0xd4e3:0x27a887ba
  423164:	stos   BYTE PTR es:[edi],al
  423165:	lock cmp al,0x1b
  423168:	jmp    0x4231b3
  42316a:	repz mov cl,0xd5
  42316d:	cmp    ebx,ebx
  42316f:	in     al,dx
  423170:	cmp    eax,0xb48675c7
  423175:	sbb    BYTE PTR [esi-0x3c],dh
  423178:	adc    ch,BYTE PTR [ebx]
  42317a:	sbb    DWORD PTR [esi],0xc9d03a72
  423180:	xchg   ecx,eax
  423181:	cmp    dh,BYTE PTR [ecx+0x64]
  423184:	mov    esp,0x2587aa6e
  423189:	(bad)
  42318d:	pcmpgtd mm5,QWORD PTR [eax-0x3e96f08f]
  423194:	cmp    edi,ecx
  423196:	adc    esp,edi
  423198:	shl    DWORD PTR [ebx+esi*2+0x29e74293],cl
  42319f:	inc    edx
  4231a0:	into   
  4231a1:	pop    ss
  4231a2:	out    dx,eax
  4231a3:	xor    eax,0x3da2681
  4231a8:	add    esi,DWORD PTR [ecx]
  4231aa:	mov    ebx,0x8619aa13
  4231af:	xchg   ecx,eax
  4231b0:	fnstcw WORD PTR [ebx+0x32]
  4231b3:	cmp    edx,DWORD PTR [ecx]
  4231b5:	fld    TBYTE PTR [esi]
  4231b7:	pop    edi
  4231b8:	xchg   ecx,eax
  4231b9:	pusha  
  4231ba:	repnz scas al,BYTE PTR es:[edi]
  4231bc:	mov    bl,0xaa
  4231be:	sbb    eax,0x55aeddcc
  4231c3:	stos   DWORD PTR es:[edi],eax
  4231c4:	dec    eax
  4231c5:	(bad)  [edx+ebp*4+0x44]
  4231c9:	cwde   
  4231ca:	and    BYTE PTR [edi-0xf],dl
  4231cd:	adc    al,0xe8
  4231cf:	inc    edx
  4231d0:	aaa    
  4231d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231d2:	mov    ah,0x54
  4231d4:	je     0x423249
  4231d6:	cs lock xor al,0x2
  4231da:	mov    ch,0xd
  4231dc:	icebp  
  4231dd:	test   eax,0xd7e5ae0a
  4231e2:	mov    dl,0x35
  4231e4:	cmc    
  4231e5:	pop    edi
  4231e6:	and    BYTE PTR [eax],ch
  4231e8:	lea    edx,[esi]
  4231ea:	lods   eax,DWORD PTR ds:[esi]
  4231ec:	out    dx,al
  4231ed:	inc    esi
  4231ee:	clc    
  4231ef:	jl     0x423208
  4231f1:	xor    al,0x61
  4231f3:	dec    edi
  4231f4:	std    
  4231f5:	adc    eax,0xffe0238f
  4231fa:	or     eax,0x6c3d9026
  4231ff:	jg     0x423261
  423201:	int    0xc7
  423203:	test   al,0xb
  423205:	cmp    dh,cl
  423207:	pop    ds
  423208:	add    bh,dh
  42320a:	jnp    0x4231ac
  42320c:	add    bl,0x1
  42320f:	retf   
  423210:	dec    edx
  423211:	pop    edi
  423212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423213:	aas    
  423214:	dec    ebx
  423215:	sub    edx,DWORD PTR [ebx+0x1a9ddd1f]
  42321b:	repnz xchg esp,eax
  42321d:	push   es
  42321e:	mul    ah
  423220:	(bad)  
  423221:	xor    WORD PTR [esi+0x14],0x46
  423226:	sub    edx,edx
  423228:	and    eax,0x326f4b1c
  42322d:	xchg   ecx,eax
  42322e:	xor    esp,ebx
  423230:	iret   
  423231:	inc    ebp
  423232:	loopne 0x4231f7
  423234:	rol    DWORD PTR [ecx],0x9b
  423237:	sahf   
  423238:	jmp    0x42321b
  42323a:	sti    
  42323b:	aam    0xe6
  42323d:	inc    ecx
  42323e:	in     al,0x22
  423240:	pop    esi
  423241:	xor    DWORD PTR [edx],edx
  423243:	ret    
  423244:	fld    TBYTE PTR [ecx+0x3707a46]
  42324a:	push   ebx
  42324b:	loope  0x42328a
  42324d:	out    dx,al
  42324e:	and    ebx,DWORD PTR [edi+0x1726f689]
  423254:	pop    ds
  423255:	inc    esp
  423256:	loopne 0x423248
  423258:	inc    esp
  423259:	cmp    DWORD PTR ds:[ebx-0x80],ebp
  42325d:	dec    eax
  42325e:	cmp    eax,0xf4321e1a
  423263:	fbstp  TBYTE PTR [esi+0x64a04030]
  423269:	add    BYTE PTR [ecx-0x3dbe3a2f],ch
  42326f:	test   eax,0x8b4d33cc
  423274:	xor    esp,DWORD PTR [ebp-0x4df30ea4]
  42327a:	or     eax,0xb08f289f
  42327f:	in     al,0x42
  423281:	(bad)  
  423282:	push   ebx
  423283:	xchg   esi,eax
  423284:	jge    0x42324e
  423286:	jmp    esi
  423288:	mov    esi,0x4aa9ec4f
  42328d:	mov    ch,BYTE PTR [ecx+0x7b]
  423290:	fiadd  WORD PTR [edi+0x68]
  423293:	out    dx,al
  423294:	jns    0x423234
  423296:	imul   edx,DWORD PTR [ecx+esi*4],0xf0dec0
  42329d:	cwde   
  42329e:	shl    BYTE PTR [edi],0x64
  4232a1:	outs   dx,BYTE PTR ds:[esi]
  4232a2:	rcl    DWORD PTR [eax+0x67],cl
  4232a5:	sub    ecx,edi
  4232a7:	inc    edx
  4232a8:	adc    ch,bl
  4232aa:	cmp    ebx,DWORD PTR [eax]
  4232ac:	iret   
  4232ad:	dec    ecx
  4232ae:	das    
  4232af:	push   esi
  4232b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232b1:	cmp    ecx,DWORD PTR [esi+0x7f]
  4232b4:	out    dx,eax
  4232b5:	sahf   
  4232b6:	add    esp,DWORD PTR [eax+edi*2]
  4232b9:	jle    0x42328d
  4232bb:	lock fwait
  4232bd:	test   eax,0xc9d5709
  4232c2:	popa   
  4232c3:	pop    edi
  4232c4:	addr16 clc 
  4232c6:	sub    BYTE PTR [eax],dl
  4232c8:	or     al,0x96
  4232ca:	scas   eax,DWORD PTR es:[edi]
  4232cb:	sbb    cl,bh
  4232cd:	xor    al,BYTE PTR [edi-0x2b000205]
  4232d3:	and    DWORD PTR ds:0x32b6f640,ecx
  4232d9:	inc    ecx
  4232da:	test   DWORD PTR [edi+0x7b094119],0xda0a9ace
  4232e4:	test   DWORD PTR [eax+0x2277d5d7],esp
  4232ea:	mov    al,0x8
  4232ec:	push   es
  4232ed:	push   ebx
  4232ee:	mov    ebp,DWORD PTR [ebp-0x3c]
  4232f1:	mov    edx,?
  4232f3:	loop   0x423296
  4232f5:	jg     0x4232ad
  4232f7:	add    esi,DWORD PTR [edi]
  4232f9:	xchg   BYTE PTR [ebx],bl
  4232fb:	jnp    0x423337
  4232fd:	fnstcw WORD PTR [edx+ebx*8+0x1b68074]
  423304:	pop    edx
  423305:	fild   DWORD PTR [ecx]
  423307:	pusha  
  423308:	or     al,0xd1
  42330a:	mov    ebx,?
  42330c:	loopne 0x42337d
  42330e:	scas   eax,DWORD PTR es:[edi]
  42330f:	stos   DWORD PTR es:[edi],eax
  423310:	push   es
  423311:	mov    ebp,DWORD PTR [ebx-0x76]
  423314:	or     DWORD PTR [ebx],esp
  423316:	cmp    BYTE PTR [ecx+0xf4ef314],al
  42331c:	outs   dx,BYTE PTR ds:[esi]
  42331d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42331e:	clc    
  42331f:	outs   dx,BYTE PTR ds:[esi]
  423320:	ficomp WORD PTR [edx]
  423322:	adc    DWORD PTR [ecx],ebx
  423324:	mov    eax,0x273dbf9d
  423329:	sub    BYTE PTR ds:0x30863fa7,0x7a
  423330:	pop    esi
  423331:	(bad)  
  423332:	leave  
  423333:	pop    ecx
  423334:	xor    DWORD PTR [ebp-0x4f],ecx
  423337:	call   0xf413:0xfe01d4ed
  42333e:	and    BYTE PTR [edi-0x11],ah
  423341:	pop    ebx
  423342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423343:	xchg   BYTE PTR [ecx+eiz*1],bh
  423346:	cmc    
  423347:	sub    eax,DWORD PTR [ebx]
  423349:	jae    0x423322
  42334b:	or     eax,0x8b9110ea
  423350:	dec    edi
  423351:	adc    ah,BYTE PTR [ecx-0x18]
  423354:	enter  0x6416,0x8f
  423358:	cwde   
  423359:	test   al,0x96
  42335b:	scas   eax,DWORD PTR es:[edi]
  42335c:	repz pop edx
  42335e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42335f:	mov    ds:0x288d1c98,eax
  423364:	stc    
  423365:	call   0x37fc:0x532dd0bd
  42336c:	jecxz  0x42332f
  42336e:	aas    
  42336f:	mov    dh,bl
  423371:	mov    ebx,0x46517f5a
  423376:	iret   
  423377:	movlps QWORD PTR [ecx-0x24de359d],xmm2
  42337e:	inc    ebp
  42337f:	fdiv   QWORD PTR [edi]
  423381:	push   esp
  423382:	dec    esp
  423383:	stc    
  423384:	pop    esp
  423385:	sbb    al,0xe2
  423387:	jecxz  0x423327
  423389:	imul   DWORD PTR [edx-0xd]
  42338c:	push   ecx
  42338d:	xchg   ebx,eax
  42338e:	or     edi,DWORD PTR [eax-0x10]
  423391:	push   0x5b9be458
  423396:	jae    0x42333b
  423398:	(bad)  
  423399:	and    esp,esp
  42339b:	mov    ch,0x2
  42339d:	push   0x7b
  42339f:	lods   eax,DWORD PTR ds:[esi]
  4233a0:	es push eax
  4233a2:	xor    ah,BYTE PTR [edx]
  4233a4:	and    esi,edi
  4233a6:	inc    esi
  4233a7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4233a9:	add    al,0x31
  4233ab:	pop    ecx
  4233ac:	in     al,0xe8
  4233ae:	leave  
  4233af:	pop    ebx
  4233b0:	shr    DWORD PTR [edx-0x5105f0f],cl
  4233b6:	dec    esi
  4233b7:	(bad)  
  4233b8:	aas    
  4233b9:	enter  0x1075,0x52
  4233bd:	and    cl,BYTE PTR [eax]
  4233bf:	addr16 xchg edi,eax
  4233c1:	test   DWORD PTR ds:[ecx+0x64],edi
  4233c5:	push   eax
  4233c6:	shr    BYTE PTR [ebp-0x18fef6d9],0x39
  4233cd:	pop    ss
  4233ce:	dec    ebx
  4233cf:	xchg   esi,eax
  4233d0:	push   es
  4233d1:	repz pop ds
  4233d3:	mov    ebp,0x600a289b
  4233d8:	sti    
  4233d9:	cmp    DWORD PTR [ebx-0xa48f09e],ecx
  4233df:	mov    ah,0x58
  4233e1:	pop    esi
  4233e2:	or     edi,ebx
  4233e4:	or     BYTE PTR [ebx-0x21],al
  4233e7:	sub    DWORD PTR [edi],0xb17a9eb6
  4233ed:	mov    bh,0xbd
  4233ef:	inc    edi
  4233f0:	dec    eax
  4233f1:	xor    BYTE PTR ds:0xdcffe949,dl
  4233f7:	or     DWORD PTR [edi+0x6bd43e3b],0xffffffdc
  4233fe:	(bad)  
  4233ff:	sub    edx,DWORD PTR [esi+esi*2-0xebf90e5]
  423406:	fld    DWORD PTR [esi+0x6c]
  423409:	retf   
  42340a:	cli    
  42340b:	fs sbb al,0x5c
  42340e:	sub    eax,0xa13ed867
  423413:	test   eax,0x7f60004b
  423418:	jo     0x4233df
  42341a:	cdq    
  42341b:	ret    
  42341c:	dec    ebx
  42341d:	mov    dl,0x85
  42341f:	sub    eax,0x387bf3e0
  423424:	push   edx
  423425:	mov    al,ds:0x2b7d2577
  42342a:	fidivr DWORD PTR [eiz*2-0x3a0f6f6a]
  423431:	xchg   edx,eax
  423432:	cmp    BYTE PTR fs:[edx+edx*1-0x60],bh
  423437:	(bad)  
  423438:	pop    esi
  423439:	sbb    DWORD PTR [esi],esp
  42343b:	sub    al,0x1
  42343d:	arpl   WORD PTR [edi-0x21],cx
  423440:	cmp    esi,DWORD PTR [edx-0x2a0acab9]
  423446:	jmp    0xf81e02e9
  42344b:	test   BYTE PTR [esi],dl
  42344d:	clc    
  42344e:	cwde   
  42344f:	addr16 shl bh,cl
  423452:	add    al,0x74
  423454:	shl    BYTE PTR [edx-0x53e1bb78],1
  42345a:	rcr    DWORD PTR [esi],cl
  42345c:	jne    0x423429
  42345e:	or     DWORD PTR ds:0x9780b06c,ebp
  423464:	mov    edi,0x22ba923c
  423469:	sti    
  42346a:	outs   dx,DWORD PTR ds:[esi]
  42346b:	lahf   
  42346c:	inc    ecx
  42346d:	jo     0x42345d
  42346f:	push   ss
  423470:	mov    al,0xc2
  423472:	jns    0x423489
  423474:	or     ah,BYTE PTR [edx+0x49bb77dc]
  42347a:	sbb    bh,BYTE PTR [esi+0x344759db]
  423480:	pop    edi
  423481:	into   
  423482:	ret    0x9253
  423485:	or     eax,esp
  423487:	in     al,dx
  423488:	inc    edx
  423489:	adc    eax,ecx
  42348b:	pop    ebx
  42348c:	xor    eax,0x5b41d5f0
  423491:	inc    BYTE PTR [eax-0x52]
  423494:	sbb    eax,0x47fec7b0
  423499:	ret    0xbba1
  42349c:	scas   eax,DWORD PTR es:[edi]
  42349d:	mov    ah,0x74
  42349f:	cmc    
  4234a0:	pop    edx
  4234a1:	sbb    ch,BYTE PTR [esi]
  4234a3:	jmp    0x624e07ec
  4234a8:	xor    al,bl
  4234aa:	cld    
  4234ab:	cmp    dh,cl
  4234ad:	adc    dh,0xa0
  4234b0:	ja     0x42352e
  4234b2:	fs scas eax,DWORD PTR es:[edi]
  4234b4:	jae    0x423454
  4234b6:	lock and DWORD PTR [edi-0x14],ebx
  4234ba:	adc    ebx,esp
  4234bc:	ja     0x4234e0
  4234be:	sub    DWORD PTR [ebp-0x58],ebx
  4234c1:	fs push esp
  4234c3:	mov    esi,0x648af167
  4234c8:	xchg   ecx,eax
  4234c9:	mov    cl,0x9d
  4234cb:	jne    0x4234ac
  4234cd:	mov    ecx,0xdef3a0fa
  4234d2:	jne    0x4234d7
  4234d4:	adc    al,0x5d
  4234d6:	cmp    al,0x94
  4234d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234d9:	call   0xdc91:0x60042b31
  4234e0:	sahf   
  4234e1:	pop    ecx
  4234e2:	into   
  4234e3:	call   0xe9ae:0x186b5b3c
  4234ea:	and    cl,bh
  4234ec:	out    dx,al
  4234ed:	in     al,0x0
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	add    BYTE PTR [ecx-0x5d],cl
  4234f4:	push   ebp
  4234f5:	(bad)  
  4234f6:	push   esi
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	jo     0x423555
  423500:	inc    ecx
  423501:	fild   QWORD PTR [ecx-0x52]
  423504:	add    DWORD PTR [eax],eax
  423506:	hlt    
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edi],ah
  42350b:	vmptrld QWORD PTR [eax]
  42350e:	(bad)  
  42350f:	push   edx
  423510:	push   ebp
  423511:	or     al,0xc5
  423513:	sbb    bl,BYTE PTR [edi]
  423515:	lock jl 0x42357f
  423518:	sbb    DWORD PTR [esi-0x1c],0xfffffff2
  42351c:	inc    ebp
  42351d:	sub    edx,DWORD PTR [ebx]
  42351f:	outs   dx,BYTE PTR ds:[esi]
  423520:	loope  0x423592
  423522:	outs   dx,DWORD PTR ds:[esi]
  423523:	or     edi,DWORD PTR [edi+eiz*2+0x27]
  423527:	sbb    eax,0x93c575f8
  42352c:	mov    dh,0x25
  42352e:	das    
  42352f:	arpl   WORD PTR [edx-0x20],dx
  423532:	xlat   BYTE PTR ds:[ebx]
  423533:	or     edi,DWORD PTR [ebp+0x6c]
  423536:	adc    cl,BYTE PTR [ebx+eax*8]
  423539:	pop    esp
  42353a:	cmp    eax,0xdcf3d58c
  42353f:	aam    0x17
  423541:	and    DWORD PTR [eax+0x27a83f83],ebx
  423547:	mov    ds:0x660bc2a8,al
  42354c:	and    DWORD PTR [esp+ebp*4+0xf6679f4],edi
  423553:	cdq    
  423554:	aam    0xe1
  423556:	hlt    
  423557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423558:	neg    DWORD PTR [ebx]
  42355a:	sub    ebx,ecx
  42355c:	mov    esp,eax
  42355e:	pop    es
  42355f:	sahf   
  423560:	sbb    ah,BYTE PTR [esi]
  423562:	rol    BYTE PTR ds:0x63980320,1
  423568:	enter  0x568b,0x99
  42356c:	cmp    dl,dl
  42356e:	mov    edx,0xadddb12f
  423573:	dec    esp
  423574:	test   esp,0x7031be86
  42357a:	xchg   esi,eax
  42357b:	dec    edx
  42357c:	lods   eax,DWORD PTR ds:[esi]
  42357d:	std    
  42357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42357f:	mov    edi,0xcce33f00
  423584:	add    BYTE PTR [esi+0x27],al
  423587:	and    BYTE PTR [esi],bl
  423589:	add    bh,ch
  42358b:	popf   
  42358c:	mov    esp,0xdcf10d2f
  423591:	jl     0x423537
  423593:	fadd   DWORD PTR [ecx+0x4b163ea3]
  423599:	std    
  42359a:	pop    edi
  42359b:	or     BYTE PTR [edx],dh
  42359d:	mov    ds:0x99fa5a3d,eax
  4235a2:	je     0x4235df
  4235a4:	push   0xd1d0f889
  4235a9:	push   0xffffff8d
  4235ab:	dec    esp
  4235ac:	mov    bh,0x0
  4235ae:	out    0x28,eax
  4235b0:	push   cs
  4235b1:	or     eax,DWORD PTR [edi+0x2e]
  4235b4:	ror    BYTE PTR [edi+0x4f],1
  4235b7:	daa    
  4235b8:	xlat   BYTE PTR ds:[ebx]
  4235b9:	cli    
  4235ba:	popf   
  4235bb:	push   ebx
  4235bc:	(bad)  
  4235bd:	mov    gs,WORD PTR ds:0xc7ac2298
  4235c3:	jmp    0x423605
  4235c5:	xchg   ecx,eax
  4235c6:	jp     0x4235e2
  4235c8:	mov    al,ds:0xb17c5c11
  4235cd:	aas    
  4235ce:	mov    esp,0x3f7ec3aa
  4235d3:	cmp    ah,0xf
  4235d6:	push   esi
  4235d7:	or     eax,0xa12ff31
  4235dc:	loopne 0x4235c4
  4235de:	mov    ecx,0x117e3362
  4235e3:	test   BYTE PTR [ebx+0x368d89c4],dl
  4235e9:	(bad)  
  4235ea:	mov    ecx,0xdc65127c
  4235ef:	pop    DWORD PTR [ebx+0x5c]
  4235f2:	(bad)  
  4235f4:	into   
  4235f5:	enter  0x5f07,0xd5
  4235f9:	pusha  
  4235fa:	stc    
  4235fb:	ret    
  4235fc:	adc    cl,BYTE PTR ds:0x2a5be87
  423602:	mov    ah,0xc0
  423604:	fs inc edi
  423606:	push   0xc54a3edc
  42360b:	mov    al,0x9
  42360d:	outs   dx,DWORD PTR ds:[esi]
  42360e:	mov    dl,0x82
  423610:	sbb    BYTE PTR [eax+ebx*4],dl
  423613:	push   esi
  423614:	(bad)  
  423615:	loop   0x4235cf
  423617:	jmp    0x1ec4:0x416a4968
  42361e:	xlat   BYTE PTR ds:[ebx]
  42361f:	aaa    
  423620:	xor    cl,cl
  423622:	dec    ebp
  423623:	into   
  423624:	ret    0x2db
  423627:	fld    QWORD PTR [ebx]
  423629:	cmp    cl,al
  42362b:	bound  ebp,QWORD PTR [ecx-0x5b]
  42362e:	aaa    
  42362f:	stos   DWORD PTR es:[edi],eax
  423630:	retf   0xde5c
  423633:	out    dx,al
  423634:	xor    eax,DWORD PTR [ecx-0x5c]
  423637:	aam    0xc6
  423639:	outs   dx,BYTE PTR ds:[esi]
  42363a:	pop    ebp
  42363b:	mov    eax,0xd2426bed
  423640:	idiv   DWORD PTR [si+0x7f]
  423644:	inc    edi
  423645:	int    0x68
  423647:	fdiv   QWORD PTR [ecx+0x2b9f0de]
  42364d:	repz ds pop ebx
  423650:	jle    0x423650
  423652:	mov    eax,0x307d8244
  423657:	in     eax,dx
  423658:	loopne 0x4236b7
  42365a:	mov    ecx,0xbddcb827
  42365f:	mov    ebx,0x5acbd415
  423664:	rcl    DWORD PTR [edx-0x3e],1
  423667:	sbb    BYTE PTR [ebx+0x5b830948],0x79
  42366e:	sub    BYTE PTR [eax+0x4eb54b03],al
  423674:	das    
  423675:	sti    
  423676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423677:	mov    cl,0x81
  423679:	addr16 dec esp
  42367b:	test   al,0x66
  42367d:	fwait
  42367e:	call   0x1fc54505
  423683:	pop    ss
  423684:	mov    WORD PTR [ecx+0x3df2cc43],?
  42368a:	jne    0x42363e
  42368c:	push   ebp
  42368d:	inc    esi
  42368e:	sbb    BYTE PTR [ebx-0x47b1259c],al
  423694:	xlat   BYTE PTR ds:[ebx]
  423695:	or     BYTE PTR [edi+0x2334e92],bh
  42369b:	mov    esi,0x5e3fafb5
  4236a0:	xchg   esp,eax
  4236a1:	mov    al,ds:0xc0d53826
  4236a6:	ret    0x2d22
  4236a9:	mov    WORD PTR [ecx],?
  4236ab:	push   edi
  4236ac:	inc    esp
  4236ad:	mov    DWORD PTR [edi+0x3704b30a],eax
  4236b3:	xchg   ebx,eax
  4236b4:	nop    DWORD PTR [ebx]
  4236b7:	push   0x6ea75a15
  4236bc:	add    BYTE PTR [eax],0x69
  4236bf:	pusha  
  4236c0:	lds    ebp,FWORD PTR [esi-0x46a77d39]
  4236c6:	pop    ebp
  4236c7:	xchg   esp,eax
  4236c8:	sub    edi,edx
  4236ca:	xlat   BYTE PTR ds:[ebx]
  4236cb:	jge    0x423721
  4236cd:	mov    esi,0xa53fbff7
  4236d2:	xor    cl,BYTE PTR [ebp+esi*2+0x3c6e2943]
  4236d9:	fadd   st(5),st
  4236db:	ret    
  4236dc:	lods   al,BYTE PTR ds:[esi]
  4236dd:	and    al,0x9f
  4236df:	mov    fs,ebx
  4236e1:	inc    esi
  4236e2:	xchg   DWORD PTR [ecx-0x5dd4177e],edx
  4236e8:	adc    BYTE PTR [edx-0xbe093a6],dl
  4236ee:	mov    ah,0xe3
  4236f0:	imul   ebp,DWORD PTR [edx+ebp*4-0x2a],0x71249a1f
  4236f8:	enter  0x96e5,0x76
  4236fc:	in     eax,0xa3
  4236fe:	xchg   DWORD PTR [eax+0x50510db3],esi
  423704:	test   eax,0x3191c4f7
  423709:	sbb    eax,0x808fc312
  42370e:	pop    ebx
  42370f:	mov    ds:0x2c8527bf,al
  423714:	mov    bl,BYTE PTR [esi-0x3b]
  423717:	pusha  
  423718:	adc    al,0x6b
  42371a:	mov    ah,0xff
  42371c:	push   0x2
  42371e:	and    BYTE PTR ds:[edx+0x0],0x7
  423723:	fild   DWORD PTR [ecx]
  423725:	adc    ebx,DWORD PTR [edi-0x653ea463]
  42372b:	sbb    DWORD PTR [ecx-0x29],edx
  42372e:	mov    bh,0x24
  423730:	fs out dx,eax
  423732:	xchg   ecx,eax
  423733:	sub    DWORD PTR [eax+0x530eced9],ebx
  423739:	shr    DWORD PTR [eax+edx*8+0x781fcdc0],0xb8
  423741:	test   DWORD PTR [ebp-0x6f],esi
  423744:	(bad)  
  423745:	pushf  
  423746:	imul   eax,DWORD PTR [edi],0x374b5227
  42374c:	mov    ebp,0x41e40683
  423751:	jmp    0xaf810ca2
  423756:	push   edx
  423757:	xor    eax,0x4caf3a7b
  42375c:	and    al,0x70
  42375e:	add    BYTE PTR [edi-0x36],cl
  423761:	ss mov ch,0x5d
  423764:	inc    eax
  423765:	cmp    DWORD PTR [ebx-0x390fa9d7],ecx
  42376b:	push   edx
  42376c:	test   al,0x14
  42376e:	and    al,0xc1
  423770:	pop    ecx
  423771:	and    eax,DWORD PTR [ebx+0x45]
  423774:	jb     0x4237b2
  423776:	neg    bh
  423778:	bound  ebx,QWORD PTR [edi]
  42377a:	sub    BYTE PTR [ebx+edi*4+0x1e],0xa4
  42377f:	jnp    0x4237fc
  423781:	mov    esp,0x1ccc24c6
  423786:	pop    ebx
  423787:	daa    
  423788:	fdivr  st(1),st
  42378a:	jne    0x4237bf
  42378c:	lods   al,BYTE PTR ds:[esi]
  42378d:	and    DWORD PTR [eax+edi*2+0x40a6117e],esi
  423794:	and    al,0x4d
  423796:	pop    esp
  423797:	js     0x423784
  423799:	lahf   
  42379a:	retf   0xd824
  42379d:	xlat   BYTE PTR ds:[ebx]
  42379e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42379f:	div    DWORD PTR [esi+eax*2-0x4937114c]
  4237a6:	fwait
  4237a7:	out    dx,al
  4237a8:	stos   DWORD PTR es:[edi],eax
  4237a9:	div    BYTE PTR ds:0x7df60a0a
  4237af:	rol    ebx,1
  4237b1:	aad    0x67
  4237b3:	cli    
  4237b4:	(bad)  
  4237b5:	fwait
  4237b6:	push   ds
  4237b7:	loopne 0x42379a
  4237b9:	loope  0x423782
  4237bb:	xor    al,0x74
  4237bd:	clc    
  4237be:	mov    al,cl
  4237c0:	mov    dl,0xcb
  4237c2:	(bad)  
  4237c3:	sbb    eax,0x9d0f61c1
  4237c8:	xchg   esp,eax
  4237c9:	ror    DWORD PTR [ecx+0x617cc14d],1
  4237cf:	shr    BYTE PTR [ecx],cl
  4237d1:	test   al,cl
  4237d3:	push   eax
  4237d4:	xlat   BYTE PTR ds:[ebx]
  4237d5:	mov    edx,0xe617e845
  4237da:	je     0x423766
  4237dc:	aad    0x1e
  4237de:	std    
  4237df:	add    BYTE PTR [eax],bl
  4237e1:	mov    ecx,0x9dc3e0f5
  4237e6:	retf   0xcafc
  4237e9:	test   al,0xf5
  4237eb:	bound  esi,QWORD PTR [eax]
  4237ed:	dec    esp
  4237ee:	imul   esp,DWORD PTR [ecx+0x4],0x872dd1da
  4237f5:	add    ecx,esp
  4237f7:	mov    ebx,0xa64cde68
  4237fc:	xor    BYTE PTR [edi+0x6a],ch
  4237ff:	pop    ebx
  423800:	pop    ebp
  423801:	cmp    al,0xc
  423803:	iret   
  423804:	loop   0x42385a
  423806:	dec    edx
  423807:	repnz pop edi
  423809:	push   ecx
  42380a:	and    BYTE PTR [esp+edx*1],dl
  42380d:	jl     0x4237a7
  42380f:	push   ds
  423810:	and    ch,ch
  423812:	xchg   edx,eax
  423813:	push   esp
  423814:	outs   dx,BYTE PTR ds:[esi]
  423815:	lods   eax,DWORD PTR ds:[esi]
  423816:	inc    ebp
  423817:	js     0x423809
  423819:	hlt    
  42381a:	adc    eax,0xe8051f66
  42381f:	retf   0xf244
  423822:	dec    esi
  423823:	mov    esi,0xaa1f5bf
  423828:	outs   dx,DWORD PTR ds:[esi]
  423829:	mov    bl,0x69
  42382b:	int3   
  42382c:	das    
  42382d:	ins    DWORD PTR es:[edi],dx
  42382e:	pop    eax
  42382f:	arpl   ax,bp
  423831:	mov    bl,bl
  423833:	mov    ebp,0xfe080710
  423838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42383a:	les    esi,FWORD PTR [edx-0x1927f1eb]
  423840:	popa   
  423841:	test   edx,0xbf7941d8
  423847:	(bad)  
  423848:	out    dx,al
  423849:	sahf   
  42384a:	(bad)  
  42384c:	jno    0x423862
  42384e:	and    DWORD PTR [edx+eax*2],ebp
  423851:	sbb    DWORD PTR [esi+0x1e],ebp
  423854:	xor    cl,BYTE PTR [esi-0x2bdd93a4]
  42385a:	sub    bl,BYTE PTR [eax]
  42385c:	aas    
  42385d:	jl     0x423859
  42385f:	loop   0x42382b
  423861:	pop    eax
  423862:	pusha  
  423863:	xor    esp,ecx
  423865:	add    cl,bh
  423867:	xchg   BYTE PTR [edx+0x391b00ec],ch
  42386d:	sbb    al,0x1c
  42386f:	sub    eax,esp
  423871:	jp     0x423889
  423873:	pop    esp
  423874:	int3   
  423875:	int    0x8b
  423877:	sbb    ch,bh
  423879:	in     al,dx
  42387a:	mov    cl,0xe1
  42387c:	xor    BYTE PTR [esi],0xf7
  42387f:	clc    
  423880:	pop    ss
  423881:	shr    BYTE PTR [edx+0x77],1
  423884:	aam    0x8d
  423886:	push   edx
  423887:	aas    
  423888:	add    esi,DWORD PTR [ebp+edx*1+0x5b]
  42388c:	and    eax,0x2d3e8ed2
  423891:	cdq    
  423892:	hlt    
  423893:	clc    
  423894:	dec    ebp
  423895:	mov    al,ds:0x550a678d
  42389a:	adc    DWORD PTR [ecx-0x1],0xafcb85
  4238a1:	pop    edx
  4238a2:	inc    ebx
  4238a3:	sbb    al,0x66
  4238a5:	and    esp,esp
  4238a7:	stos   DWORD PTR es:[edi],eax
  4238a8:	clc    
  4238a9:	cmp    eax,0x869d3b4b
  4238ae:	mov    cl,0x38
  4238b0:	mov    ?,WORD PTR [ebp+0x264ea5e1]
  4238b6:	sbb    al,0xf4
  4238b8:	xor    edx,DWORD PTR [edi]
  4238ba:	cld    
  4238bb:	ins    DWORD PTR es:[edi],dx
  4238bc:	cld    
  4238bd:	sub    eax,0x72d691d0
  4238c2:	jg     0x423942
  4238c4:	or     eax,0x89b6f4c1
  4238c9:	das    
  4238ca:	imul   edx,DWORD PTR [eax],0x6a946668
  4238d0:	call   0x8917:0xb13413b7
  4238d7:	mov    ah,0xd3
  4238d9:	adc    bh,BYTE PTR [esi-0x6a628eb7]
  4238df:	or     al,0xdf
  4238e1:	inc    esi
  4238e2:	ret    
  4238e3:	and    BYTE PTR [esp+ecx*1-0x73],dl
  4238e7:	aaa    
  4238e8:	adc    DWORD PTR [ebx*2-0x7b231a16],0x42
  4238f0:	(bad)  
  4238f1:	hlt    
  4238f2:	jl     0x423965
  4238f4:	mov    esp,0x4322204d
  4238f9:	test   BYTE PTR [eax+0x49279843],ah
  4238ff:	and    eax,0xe50b77a8
  423904:	add    esi,DWORD PTR [ecx-0x657f50e3]
  42390a:	push   0x7fb8ee64
  42390f:	sub    ebp,esp
  423911:	xchg   edx,eax
  423912:	pop    esi
  423913:	aam    0xac
  423915:	push   esi
  423916:	popa   
  423917:	das    
  423918:	xchg   edx,eax
  423919:	ds out dx,eax
  42391b:	in     al,0x73
  42391d:	retf   
  42391e:	lods   al,BYTE PTR ds:[esi]
  42391f:	je     0x423946
  423921:	cwde   
  423922:	jmp    0x4238ce
  423924:	popa   
  423925:	mov    edx,0xaceda5c5
  42392a:	call   0xcb9b:0x4883d3c3
  423931:	cmp    ch,BYTE PTR [bp+si-0x7805]
  423936:	fmul   QWORD PTR [ebx-0x49]
  423939:	int    0xa6
  42393b:	dec    esp
  42393c:	or     al,0xcd
  42393e:	jmp    0x4238cc
  423940:	add    al,bl
  423942:	pop    esp
  423943:	call   0xa1c3e95a
  423948:	jae    0x4238d1
  42394a:	push   ss
  42394b:	pop    ecx
  42394c:	repnz pusha 
  42394e:	retf   
  42394f:	mov    cl,0x46
  423951:	stos   BYTE PTR es:[edi],al
  423952:	push   cs
  423953:	cwde   
  423954:	adc    al,0xe6
  423956:	xchg   edi,eax
  423957:	data16 cmc 
  423959:	data16 (bad) 
  42395b:	sub    eax,0x21026e5c
  423960:	mov    eax,DWORD PTR [esi-0x3c07fecc]
  423966:	clc    
  423967:	ins    DWORD PTR es:[edi],dx
  423968:	daa    
  423969:	mov    ecx,0xe47d17db
  42396e:	push   edi
  42396f:	xor    DWORD PTR [ebx],ebx
  423971:	enter  0xe371,0x50
  423975:	jp     0x42391b
  423977:	mov    edx,0x2d23eda8
  42397c:	test   eax,0x32dbe26e
  423981:	fcomip st,st(6)
  423983:	fmul   DWORD PTR [eax-0x24]
  423986:	pusha  
  423987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423988:	jno    0x423990
  42398a:	cli    
  42398b:	cmp    al,0xcd
  42398d:	out    dx,al
  42398e:	push   esp
  42398f:	test   DWORD PTR [eax+0x2c],ecx
  423992:	adc    BYTE PTR [ecx+0x2c],bh
  423995:	test   al,0xcb
  423997:	add    DWORD PTR [ebx+0x42],ebp
  42399a:	pop    edx
  42399b:	sbb    al,0xe3
  42399d:	or     eax,0x798dc343
  4239a2:	lods   eax,DWORD PTR ds:[esi]
  4239a3:	call   0x9eae3868
  4239a8:	mov    WORD PTR [edx+ebx*4+0x24],cs
  4239ac:	fnstcw WORD PTR [ebx+ecx*2]
  4239af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239b0:	jne    0x4239bb
  4239b2:	push   esi
  4239b3:	or     al,0xdf
  4239b5:	mov    ah,0x5b
  4239b7:	dec    ebx
  4239b8:	test   cl,ah
  4239ba:	outs   dx,BYTE PTR ds:[esi]
  4239bb:	pop    eax
  4239bc:	or     BYTE PTR [ecx-0x54],ch
  4239bf:	enter  0x128b,0xc0
  4239c3:	inc    edx
  4239c4:	addr16 pop ebx
  4239c6:	test   DWORD PTR [ebp+ecx*1-0x7e],eax
  4239ca:	and    al,0x91
  4239cc:	cmp    al,0xf2
  4239ce:	pop    ds
  4239cf:	mov    cl,0x55
  4239d1:	mov    BYTE PTR [ebx-0xd2252a1],bh
  4239d7:	lea    ebp,[ebp+ebx*8+0x5b]
  4239db:	mov    edi,0x8bcea01d
  4239e0:	scas   al,BYTE PTR es:[edi]
  4239e1:	fimul  DWORD PTR [ecx-0xc]
  4239e4:	mov    ah,0x68
  4239e6:	in     eax,0x76
  4239e8:	fs xor al,0x97
  4239eb:	rol    DWORD PTR [edx+edi*2-0x4b20784b],0xab
  4239f3:	mov    cl,0x8c
  4239f5:	fiadd  WORD PTR [eax]
  4239f7:	pop    ds
  4239f8:	rcl    ah,cl
  4239fa:	fldcw  WORD PTR [ebp+0x33]
  4239fd:	sbb    DWORD PTR [eax],eax
  4239ff:	add    BYTE PTR [eax],al
  423a01:	add    BYTE PTR [esi-0x69],al
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x79a16a3a]
  423a12:	pop    ebp
  423a13:	mov    bl,0x1
  423a15:	add    ah,dh
  423a17:	add    al,0x0
  423a19:	add    bl,dh
  423a1b:	not    BYTE PTR [eax+0x36]
  423a1e:	je     0x423a25
  423a20:	adc    al,BYTE PTR [ebp+0x66]
  423a23:	mov    edx,0x3e949974
  423a28:	(bad)  
  423a29:	outs   dx,DWORD PTR ds:[esi]
  423a2a:	xor    DWORD PTR [ebx+0x6c],esp
  423a2d:	rol    BYTE PTR [edx-0x4d],0x1f
  423a31:	sbb    BYTE PTR [ebx+0x6fd92e55],0xa6
  423a38:	shl    BYTE PTR [edx+0x2e254e4b],0x1c
  423a3f:	sbb    BYTE PTR [ebp-0x49],bl
  423a42:	xor    BYTE PTR [ecx+0x28],ch
  423a45:	and    DWORD PTR [esi-0x70],eax
  423a48:	(bad)  
  423a49:	fadd   DWORD PTR [ecx+0x752f866a]
  423a4f:	sbb    DWORD PTR [esi+0x3e],ebp
  423a52:	adc    edx,edx
  423a54:	sahf   
  423a55:	les    ecx,FWORD PTR [edi-0x1361d75c]
  423a5b:	add    eax,0xf0e06ce
  423a60:	sub    ah,BYTE PTR [ebp+0x2cb6921e]
  423a66:	repz ror DWORD PTR [esp+eax*1+0x4b],0x2e
  423a6c:	dec    ecx
  423a6d:	stos   DWORD PTR es:[edi],eax
  423a6e:	(bad)  
  423a6f:	mov    edx,0xf7f930d6
  423a74:	xor    BYTE PTR [eax],ch
  423a76:	inc    ecx
  423a77:	loope  0x423a9c
  423a79:	cmp    al,0x1d
  423a7b:	adc    BYTE PTR [edx-0x52],dh
  423a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a7f:	jbe    0x423a71
  423a81:	repz fwait
  423a83:	mov    al,0x6c
  423a85:	sub    ch,BYTE PTR [ecx]
  423a87:	adc    dh,bh
  423a89:	pop    esp
  423a8a:	or     BYTE PTR [eax+0x69],al
  423a8d:	pusha  
  423a8e:	fnstsw WORD PTR [edx]
  423a90:	mov    al,ds:0x8d3aea8f
  423a95:	add    al,0x7f
  423a97:	or     DWORD PTR [esi-0x5b1a7db5],ecx
  423a9d:	jne    0x423a95
  423a9f:	lds    ebp,FWORD PTR [esi-0x7e]
  423aa2:	fistp  DWORD PTR [esi-0x3a29e416]
  423aa8:	mov    esp,0x72678928
  423aad:	cld    
  423aae:	mov    ecx,0xaa35534e
  423ab3:	pop    ecx
  423ab4:	inc    ecx
  423ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ab6:	xchg   edx,eax
  423ab7:	ins    BYTE PTR es:[edi],dx
  423ab8:	push   es
  423ab9:	cmp    BYTE PTR [edx+0x77844dbb],ah
  423abf:	imul   ebx,DWORD PTR [esi+0x13746e04],0x49
  423ac6:	jmp    0x423b34
  423ac8:	aaa    
  423ac9:	lock inc esi
  423acb:	or     al,BYTE PTR [eax]
  423acd:	repnz inc esp
  423acf:	pop    edi
  423ad0:	cs mov ah,0x89
  423ad3:	bound  ecx,QWORD PTR [ebx-0x63b00961]
  423ad9:	sbb    BYTE PTR [ecx],0xa6
  423adc:	fdivrp st(6),st
  423ade:	sub    BYTE PTR [edi],bl
  423ae0:	mov    edi,0x5991f4ce
  423ae5:	addr16 pop edi
  423ae7:	xchg   ebp,eax
  423ae8:	jp     0x423a78
  423aea:	add    al,BYTE PTR [esi+0x6a]
  423aed:	mov    ds:0x64433e3c,eax
  423af2:	push   0x4221d1cd
  423af7:	mov    DWORD PTR [edi+0x73789327],ecx
  423afd:	test   BYTE PTR [ecx+0x10190773],dh
  423b03:	js     0x423a98
  423b05:	jns    0x423ab2
  423b07:	iret   
  423b08:	div    BYTE PTR [eax+ecx*4]
  423b0b:	lds    ecx,FWORD PTR [edx+0xd5188b9]
  423b11:	sbb    eax,0x75fae5cc
  423b16:	enter  0x9ae1,0x13
  423b1a:	jo     0x423ae5
  423b1c:	mov    DWORD PTR [eax+0x2e218d40],edx
  423b22:	fmul   QWORD PTR [ebx]
  423b24:	das    
  423b25:	xor    ecx,DWORD PTR [ecx-0x53]
  423b28:	adc    al,0xed
  423b2a:	cld    
  423b2b:	inc    ebx
  423b2c:	ja     0x423b82
  423b2e:	sub    BYTE PTR [esi+0x19],ch
  423b31:	mov    eax,0xde2a3dbd
  423b36:	pop    edx
  423b37:	sub    esi,ecx
  423b39:	iret   
  423b3a:	inc    BYTE PTR [ebp-0x685060ef]
  423b40:	(bad)  
  423b41:	jg     0x423b48
  423b43:	test   al,0x7c
  423b45:	sbb    edx,DWORD PTR [ebp+0x187d24e9]
  423b4b:	push   ebx
  423b4c:	push   eax
  423b4d:	dec    eax
  423b4e:	or     BYTE PTR [ebx+0x2e],ch
  423b51:	dec    esi
  423b52:	sbb    bh,ah
  423b54:	outs   dx,BYTE PTR ds:[esi]
  423b55:	ja     0x423bd4
  423b57:	std    
  423b58:	jb     0x423bae
  423b5a:	aaa    
  423b5b:	sub    DWORD PTR [esi],eax
  423b5d:	aad    0x86
  423b5f:	ret    0x529e
  423b62:	loope  0x423bac
  423b64:	(bad)  
  423b65:	mov    ds:0xfb904d1b,eax
  423b6a:	lahf   
  423b6b:	add    eax,0x2ad49ef0
  423b70:	sub    ah,BYTE PTR [ecx+0x66]
  423b73:	jp     0x423b3c
  423b75:	dec    edx
  423b76:	xchg   ebp,eax
  423b77:	xchg   edi,eax
  423b78:	adc    BYTE PTR [ebx],dl
  423b7a:	and    eax,edi
  423b7c:	xor    BYTE PTR [eax+0x76],dl
  423b7f:	and    al,0xe
  423b81:	or     al,0xf4
  423b83:	inc    eax
  423b84:	mul    BYTE PTR [ecx]
  423b86:	jle    0x423b95
  423b88:	addr16 jmp 0x2f56:0xcf96184c
  423b90:	mov    ecx,0x1dbe065a
  423b95:	ins    DWORD PTR es:[edi],dx
  423b96:	jmp    0xe3ecdef5
  423b9b:	sbb    al,dl
  423b9d:	pushf  
  423b9e:	loop   0x423bd3
  423ba0:	sub    eax,eax
  423ba2:	jmp    0x2755d25d
  423ba7:	cpuid  
  423ba9:	fcom   QWORD PTR [esi-0xd]
  423bac:	jecxz  0x423b3b
  423bae:	jno    0x423b53
  423bb0:	dec    edi
  423bb1:	push   es
  423bb2:	add    al,0xd5
  423bb4:	nop
  423bb5:	mov    esp,edi
  423bb7:	repnz retf 
  423bb9:	add    al,0xd2
  423bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bbc:	mov    dl,0xb9
  423bbe:	pusha  
  423bbf:	cli    
  423bc0:	inc    ebp
  423bc1:	mov    ds:0xada55467,eax
  423bc6:	loopne 0x423be5
  423bc8:	movaps xmm2,XMMWORD PTR [esi+edx*1]
  423bcc:	push   0x1a8de666
  423bd1:	add    BYTE PTR [eax-0x6637ec12],al
  423bd7:	adc    eax,edx
  423bd9:	lahf   
  423bda:	cmp    DWORD PTR [esi],esp
  423bdc:	pop    ecx
  423bdd:	mov    ds:0xd44ea549,al
  423be2:	add    dl,BYTE PTR [edi]
  423be4:	test   DWORD PTR [ebx],ebp
  423be6:	fild   WORD PTR [eax-0x23]
  423be9:	imul   edi,DWORD PTR [eax],0x5d
  423bec:	pop    edi
  423bed:	xor    bh,ah
  423bef:	out    dx,al
  423bf0:	or     al,0xba
  423bf2:	test   eax,0xbfe1ab88
  423bf7:	sbb    esi,DWORD PTR [ecx+0x21]
  423bfa:	rep stos BYTE PTR es:[edi],al
  423bfc:	shl    ecx,cl
  423bfe:	out    dx,eax
  423bff:	pop    ebp
  423c00:	add    ah,BYTE PTR [edx+ecx*2]
  423c03:	push   esi
  423c04:	mov    ecx,0x2f3311e2
  423c09:	aaa    
  423c0a:	outs   dx,BYTE PTR ds:[esi]
  423c0b:	test   eax,0xa81c8ddb
  423c10:	push   edi
  423c11:	dec    ebx
  423c12:	mov    DWORD PTR [eax+0x46],ebx
  423c15:	out    dx,al
  423c16:	fwait
  423c17:	xchg   edi,eax
  423c18:	gs pop eax
  423c1a:	jle    0x423b9c
  423c1c:	es scas al,BYTE PTR es:[edi]
  423c1e:	in     eax,dx
  423c1f:	das    
  423c20:	(bad)  
  423c21:	cmp    DWORD PTR ds:0x31165433,esi
  423c27:	lahf   
  423c28:	std    
  423c29:	push   ds
  423c2a:	or     DWORD PTR [edi],0x9f9b384d
  423c30:	jbe    0x423c64
  423c32:	(bad)  
  423c33:	div    esp
  423c35:	fist   DWORD PTR [edi]
  423c37:	push   0x28
  423c39:	out    0xcd,eax
  423c3b:	mov    bl,0xc2
  423c3d:	repnz mov ecx,0x8e108a59
  423c43:	pusha  
  423c44:	popa   
  423c45:	inc    esi
  423c46:	lock mov esi,0xa24b2d34
  423c4c:	xchg   ebx,eax
  423c4d:	add    al,0x52
  423c4f:	inc    ebp
  423c50:	and    al,BYTE PTR [edi]
  423c52:	add    dl,BYTE PTR [edx]
  423c54:	jne    0x423c0d
  423c56:	test   eax,0x2ea1f2c6
  423c5b:	mov    bh,0xcf
  423c5d:	mov    ds:0x5571e6d9,al
  423c62:	lods   al,BYTE PTR ds:[esi]
  423c63:	repnz call 0x316d:0x6fdce84d
  423c6b:	scas   al,BYTE PTR es:[edi]
  423c6c:	std    
  423c6d:	or     al,BYTE PTR [esi-0x250ae791]
  423c73:	jns    0x423cb6
  423c75:	leave  
  423c76:	lea    edx,[ebp-0x316c9376]
  423c7c:	das    
  423c7d:	xor    eax,0xf631d758
  423c82:	fdivp  st(2),st
  423c84:	pop    esi
  423c85:	nop
  423c86:	lock jmp 0x423c34
  423c89:	push   esp
  423c8a:	cwde   
  423c8b:	mov    al,ds:0xcad28cfb
  423c90:	sbb    bh,ah
  423c92:	call   0xa681:0xf863c619
  423c99:	or     BYTE PTR [eax],al
  423c9b:	fbld   TBYTE PTR [ebp+ecx*2-0x59]
  423c9f:	div    BYTE PTR [eax+esi*1-0x1b8614de]
  423ca6:	bound  esp,QWORD PTR [ecx]
  423ca8:	xchg   WORD PTR [ebx],sp
  423cab:	call   0xb7fa:0x124625d
  423cb2:	enter  0x4818,0x2b
  423cb6:	fs pop ecx
  423cb8:	aas    
  423cb9:	(bad)  
  423cbb:	and    ebp,DWORD PTR [ecx-0x787350c4]
  423cc1:	mov    al,ds:0xccdcca82
  423cc6:	sbb    ch,BYTE PTR [ebp-0x17]
  423cc9:	adc    ecx,esi
  423ccb:	shr    DWORD PTR [esi-0x4a],1
  423cce:	pusha  
  423ccf:	(bad)  
  423cd0:	(bad)  
  423cd2:	stc    
  423cd3:	icebp  
  423cd4:	fadd   DWORD PTR [ebx-0x49]
  423cd7:	mov    bh,0xa3
  423cd9:	outs   dx,DWORD PTR ds:[esi]
  423cda:	xchg   bh,bl
  423cdc:	loop   0x423c7b
  423cde:	xlat   BYTE PTR ds:[ebx]
  423cdf:	out    dx,eax
  423ce0:	jg     0x423d44
  423ce2:	dec    edi
  423ce3:	push   edi
  423ce4:	xchg   edi,eax
  423ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ce6:	dec    ecx
  423ce7:	inc    edx
  423ce8:	adc    eax,0x1ee83510
  423ced:	ins    DWORD PTR es:[edi],dx
  423cee:	add    DWORD PTR [ebp+0x6a],eax
  423cf1:	cmc    
  423cf2:	and    eax,0x6231e4e
  423cf7:	(bad)  
  423cf8:	pop    ebp
  423cf9:	sub    bh,BYTE PTR [edi+0x3f95adbc]
  423cff:	dec    edx
  423d00:	repnz pusha 
  423d02:	and    ebx,DWORD PTR [esi-0x3ecb3822]
  423d08:	in     eax,dx
  423d09:	lds    esi,FWORD PTR [edx+0x32]
  423d0c:	add    al,0x7b
  423d0e:	xchg   edi,eax
  423d0f:	fadd   st,st(7)
  423d11:	bound  ebp,QWORD PTR es:[edx]
  423d14:	sbb    al,0xf7
  423d16:	test   BYTE PTR [ebx+0x105c7376],0xef
  423d1d:	or     eax,0x5460e597
  423d22:	bound  ebx,QWORD PTR [esi-0x5e24e442]
  423d28:	daa    
  423d29:	sub    dh,BYTE PTR [esp+edi*2+0x39]
  423d2d:	xor    al,dh
  423d2f:	jmp    0x423d9a
  423d31:	dec    edx
  423d32:	lea    esp,[edx]
  423d34:	mov    esp,0xdabf942
  423d39:	push   ss
  423d3a:	mov    dl,0x88
  423d3c:	cdq    
  423d3d:	loope  0x423da7
  423d3f:	adc    al,0x2
  423d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d42:	add    al,0x5f
  423d44:	dec    ecx
  423d45:	mov    edi,0xc7ea7f22
  423d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d4b:	int3   
  423d4c:	(bad)  
  423d4d:	aad    0xde
  423d4f:	xchg   ebp,eax
  423d50:	mov    DWORD PTR [edi-0x791cca89],ebx
  423d56:	ja     0x423d57
  423d58:	sbb    DWORD PTR [ebx+0x13010240],eax
  423d5e:	sub    al,0x6b
  423d60:	bound  esp,QWORD PTR [ebp+0x1ee25a8a]
  423d66:	stos   BYTE PTR es:[edi],al
  423d67:	dec    eax
  423d68:	out    dx,al
  423d69:	stc    
  423d6a:	xor    ch,ch
  423d6c:	stos   BYTE PTR es:[edi],al
  423d6d:	xchg   ecx,eax
  423d6e:	add    cl,BYTE PTR [edi+edx*4+0x42a6fd98]
  423d75:	data16 in al,dx
  423d77:	mov    al,ds:0x106f78a8
  423d7c:	push   edx
  423d7d:	xor    ah,BYTE PTR [eax+0x2a57707a]
  423d83:	pop    edi
  423d84:	pusha  
  423d85:	mov    eax,ecx
  423d87:	les    ebx,FWORD PTR [edx-0x78d8a5c5]
  423d8d:	push   0x2f114132
  423d92:	push   esp
  423d93:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  423d95:	loope  0x423e0e
  423d97:	cmp    DWORD PTR [ebx],eax
  423d99:	push   eax
  423d9a:	fmul   DWORD PTR [edi+ecx*4-0x9d09f44]
  423da1:	ins    BYTE PTR es:[edi],dx
  423da2:	out    dx,al
  423da3:	inc    edi
  423da4:	sub    dl,BYTE PTR [ecx+edx*8+0x5531c54]
  423dab:	cmp    eax,0x42af5e4b
  423db0:	lock (bad) 
  423db2:	pop    es
  423db3:	and    ecx,DWORD PTR [eax-0x2519e0a4]
  423db9:	fnstenv [ebx-0x19ae6bf9]
  423dbf:	dec    edi
  423dc0:	hlt    
  423dc1:	call   DWORD PTR [esi-0x23]
  423dc4:	fbstp  TBYTE PTR [ebx]
  423dc6:	js     0x423db1
  423dc8:	xchg   BYTE PTR [ebx+0xf9876c3],dh
  423dce:	xchg   ebx,eax
  423dcf:	outs   dx,DWORD PTR ds:[esi]
  423dd0:	sbb    eax,0x5a6ddbae
  423dd5:	dec    esi
  423dd6:	xchg   ecx,eax
  423dd7:	pusha  
  423dd8:	mov    esp,0x70232f52
  423ddd:	inc    edi
  423dde:	sbb    edx,esi
  423de0:	or     BYTE PTR [ecx+0xd],0xe
  423de4:	dec    esi
  423de5:	pop    ds
  423de6:	scas   eax,DWORD PTR es:[edi]
  423de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423de8:	sbb    BYTE PTR [esi+0xc],al
  423deb:	lahf   
  423dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ded:	pop    eax
  423dee:	fistp  DWORD PTR [ebx+0x3e]
  423df1:	frstor [ecx-0x1c]
  423df4:	mov    ebx,ecx
  423df6:	mov    edx,0xfaaf6235
  423dfb:	aaa    
  423dfc:	mov    esp,0xbcbe10fd
  423e01:	call   0x190a:0xc3337389
  423e08:	pop    edi
  423e09:	cmp    eax,0x5a07a451
  423e0e:	jne    0x423dae
  423e10:	fwait
  423e11:	arpl   WORD PTR [edi],bx
  423e13:	jno    0x423e0b
  423e15:	icebp  
  423e16:	imul   edx,DWORD PTR ds:0x3a3ca034,0x4f0ad710
  423e20:	mov    ecx,0x8e37c577
  423e25:	jge    0x423dec
  423e27:	aas    
  423e28:	mov    eax,DWORD PTR [ecx+0xf82f7e2]
  423e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e2f:	add    eax,0xa0cf16ee
  423e34:	fwait
  423e35:	ret    
  423e36:	loopne 0x423ea2
  423e38:	sub    esi,DWORD PTR [ebp+0x27361d1c]
  423e3e:	test   BYTE PTR [edi],bh
  423e40:	out    0x3b,al
  423e42:	es int 0xed
  423e45:	push   esp
  423e46:	pusha  
  423e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e48:	shr    BYTE PTR [ebx+ecx*2+0x5c4be17d],cl
  423e4f:	xor    ebx,DWORD PTR [esi]
  423e51:	hlt    
  423e52:	call   FWORD PTR [ebx]
  423e54:	mov    ds:0xdb471c4f,al
  423e59:	out    dx,al
  423e5a:	mov    esp,0x603f3e03
  423e5f:	shl    dh,1
  423e61:	mov    bl,BYTE PTR [ebx+ecx*1]
  423e64:	in     al,0x9f
  423e66:	cs xchg ecx,eax
  423e68:	inc    esi
  423e69:	dec    ebx
  423e6a:	sbb    DWORD PTR [edi-0x62],0xc9f9fed0
  423e71:	fcomp  st(5)
  423e73:	inc    ebx
  423e74:	or     DWORD PTR [edi],edi
  423e76:	test   al,0x7a
  423e78:	dec    ebp
  423e79:	out    dx,eax
  423e7a:	(bad)  
  423e7b:	in     eax,dx
  423e7c:	jb     0x423e67
  423e7e:	mov    esp,0x8ff4ebf5
  423e83:	jae    0x423e30
  423e85:	imul   esp,DWORD PTR [eax],0xd38eb454
  423e8b:	fnstsw WORD PTR [edx-0x647d28b2]
  423e91:	push   cs
  423e92:	stc    
  423e93:	add    ch,BYTE PTR [ebx+0xf96ecc0]
  423e99:	arpl   WORD PTR [ecx+0x41904e8f],dx
  423e9f:	(bad)  
  423ea0:	cwde   
  423ea1:	sub    bh,0xfb
  423ea4:	mov    edi,0x694894d9
  423ea9:	jle    0x423e40
  423eab:	pavgw  mm5,mm4
  423eae:	stc    
  423eaf:	mov    BYTE PTR cs:[esi-0x52],dh
  423eb3:	sub    eax,0xa87d61f2
  423eb8:	out    0xc8,al
  423eba:	inc    edi
  423ebb:	adc    DWORD PTR [eax],ebx
  423ebd:	adc    ebx,DWORD PTR [ebx]
  423ebf:	mov    edi,0x6088879c
  423ec4:	mov    WORD PTR [ebp+0x6095b33a],fs
  423eca:	dec    edi
  423ecb:	scas   eax,DWORD PTR es:[edi]
  423ecc:	pop    ebp
  423ecd:	pop    edx
  423ece:	dec    ebx
  423ecf:	outs   dx,BYTE PTR ds:[esi]
  423ed0:	dec    edi
  423ed1:	xchg   ebx,eax
  423ed2:	(bad)  
  423ed3:	xor    eax,0xa7c9dc33
  423ed8:	das    
  423ed9:	jge    0x423f2a
  423edb:	fucom  st(1)
  423edd:	lods   eax,DWORD PTR ds:[esi]
  423ede:	mov    ah,cl
  423ee0:	jl     0x423f34
  423ee2:	mov    DWORD PTR [ecx+0x53],ecx
  423ee5:	cmp    esp,eax
  423ee7:	pop    es
  423ee8:	mov    esp,0x629588d0
  423eed:	pushf  
  423eee:	das    
  423eef:	sub    DWORD PTR [esi+esi*1+0x56],esp
  423ef3:	ret    
  423ef4:	pusha  
  423ef5:	push   0xfd0b1207
  423efa:	xchg   edi,eax
  423efb:	add    BYTE PTR [edx-0x1b95f30f],ch
  423f01:	fadd   DWORD PTR [esi-0x1b9a0245]
  423f07:	xchg   esp,eax
  423f08:	(bad)  
  423f09:	and    dh,BYTE PTR [eax+0xa07315]
  423f0f:	add    BYTE PTR [eax],al
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fiadd  DWORD PTR [esi+0x45]
  423f20:	aam    0x2b
  423f22:	push   ecx
  423f23:	mov    eax,0x4f40001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	loope  0x423fa5
  423f2c:	mov    edi,0x97eb1afa
  423f31:	rcr    DWORD PTR [ebp+0x4e],0x98
  423f35:	add    eax,0xe9d3f897
  423f3a:	iret   
  423f3b:	icebp  
  423f3c:	(bad)  
  423f3d:	xchg   esi,eax
  423f3e:	adc    DWORD PTR [edx-0x4d],esp
  423f41:	fstp   DWORD PTR [edi-0x5912531b]
  423f47:	mov    edx,0xe851a15e
  423f4c:	gs out 0xe6,eax
  423f4f:	add    al,0xcd
  423f51:	out    0x8c,eax
  423f53:	pop    edx
  423f54:	in     al,0xb
  423f56:	outs   dx,BYTE PTR ds:[esi]
  423f57:	sub    edi,DWORD PTR [ecx+0x69ff2556]
  423f5d:	fild   DWORD PTR [edi]
  423f5f:	xor    eax,0xd08662d8
  423f64:	in     al,0x31
  423f66:	mov    edi,0xe496c110
  423f6b:	pushf  
  423f6c:	mov    ebp,0xcb149ad8
  423f71:	pop    ds
  423f72:	mov    ds:0x879ad9ea,al
  423f77:	jo     0x423f63
  423f79:	mov    eax,fs:0x750430ef
  423f7f:	ss or  eax,0xc3c9d6c0
  423f85:	fldenv [edx-0x60b00bb9]
  423f8b:	mov    ecx,0x3b1a3074
  423f90:	mov    ecx,0x91972865
  423f95:	je     0x423f44
  423f97:	stc    
  423f98:	and    cl,ch
  423f9a:	cmp    BYTE PTR [ecx+ecx*4],dl
  423f9d:	sbb    BYTE PTR [eax+0xe],0x59
  423fa1:	jb     0x423f6f
  423fa3:	adc    ecx,DWORD PTR [ebx+0xf]
  423fa6:	in     al,0xc2
  423fa8:	pop    es
  423fa9:	outs   dx,DWORD PTR ds:[esi]
  423faa:	arpl   WORD PTR [esi-0x72],dx
  423fad:	clc    
  423fae:	xchg   edx,edi
  423fb0:	inc    ebp
  423fb1:	and    ebp,esi
  423fb3:	pop    esp
  423fb4:	jae    0x423f56
  423fb6:	(bad)  
  423fb7:	lahf   
  423fb8:	ror    DWORD PTR [esi],0x74
  423fbb:	imul   edx,DWORD PTR [edx+ebx*8],0x459f0dc1
  423fc2:	sub    esi,esp
  423fc4:	dec    esp
  423fc5:	dec    eax
  423fc6:	xor    bh,BYTE PTR [eax]
  423fc8:	fld    TBYTE PTR [eax-0x51]
  423fcb:	cdq    
  423fcc:	ja     0x423fdb
  423fce:	pop    ebx
  423fcf:	sub    eax,esp
  423fd1:	or     DWORD PTR [eax+0x7b11bdc8],esp
  423fd7:	mov    esi,0x9d4429e8
  423fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fdd:	(bad)
  423fe1:	jecxz  0x424031
  423fe3:	cmp    bh,dl
  423fe5:	xchg   edi,eax
  423fe6:	stc    
  423fe7:	pusha  
  423fe8:	retf   0x3630
  423feb:	clc    
  423fec:	add    al,0xe0
  423fee:	adc    al,0x9c
  423ff0:	dec    eax
  423ff1:	shl    dh,cl
  423ff3:	enter  0xa26e,0xb5
  423ff7:	jbe    0x424015
  423ff9:	dec    edx
  423ffa:	enter  0xa414,0x1
  423ffe:	or     BYTE PTR [edi+0x446946d5],bl
  424004:	call   0xc913e73f
  424009:	dec    ebx
  42400a:	sti    
  42400b:	pop    ebp
  42400c:	outs   dx,DWORD PTR ds:[esi]
  42400d:	mov    ?,esp
  42400f:	dec    edi
  424010:	xchg   esi,eax
  424011:	test   edx,0x8bbc4197
  424017:	fiadd  WORD PTR [eax+ebx*2+0x3f]
  42401b:	rcr    BYTE PTR [ecx+0x5f],1
  42401e:	dec    esp
  42401f:	popf   
  424020:	jb     0x423feb
  424022:	es jno 0x424027
  424025:	and    BYTE PTR [edx],ah
  424027:	and    DWORD PTR [esi-0x1dffdecc],esp
  42402d:	inc    edx
  42402e:	ss stos BYTE PTR es:[edi],al
  424030:	cmp    DWORD PTR [ecx+0x7d],edx
  424033:	rcl    BYTE PTR [ecx+ebx*2],cl
  424036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424037:	out    0x1e,eax
  424039:	mov    dh,0xd7
  42403b:	pop    ecx
  42403c:	inc    ecx
  42403d:	fs stc 
  42403f:	inc    edi
  424040:	(bad)  
  424041:	jmp    0xade8:0x75d3a2ac
  424048:	sar    esi,0x19
  42404b:	es icebp 
  42404d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42404e:	das    
  42404f:	mov    cl,bl
  424051:	fs pop ds
  424053:	jecxz  0x424087
  424055:	dec    eax
  424056:	and    al,0xae
  424058:	push   ds
  424059:	mov    bh,ch
  42405b:	and    al,0xbf
  42405d:	iret   
  42405e:	inc    eax
  42405f:	or     eax,0x66678e74
  424064:	int3   
  424065:	sub    eax,0x623b8b1b
  42406a:	dec    edx
  42406b:	inc    esp
  42406c:	mov    BYTE PTR [ecx-0x62],ah
  42406f:	sbb    DWORD PTR [eax],esi
  424071:	aam    0xfc
  424073:	(bad)  
  424076:	jne    0x424013
  424078:	pop    edx
  424079:	dec    esi
  42407a:	test   WORD PTR [edx+0x36b6a225],cx
  424081:	inc    ebx
  424082:	add    eax,0xf00b3bbc
  424087:	sahf   
  424088:	in     al,0x20
  42408a:	mov    edx,0x97901c72
  42408f:	cmp    ecx,DWORD PTR [eax]
  424091:	scas   eax,DWORD PTR es:[edi]
  424092:	and    ebx,DWORD PTR [ebp-0x1a]
  424095:	sahf   
  424096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424097:	(bad)  
  424098:	rcl    DWORD PTR [ecx-0x2b640dba],cl
  42409e:	in     eax,dx
  42409f:	cmp    cl,BYTE PTR [ecx-0x66dedfba]
  4240a5:	jne    0x424034
  4240a7:	(bad)  
  4240a8:	sub    al,0x1e
  4240aa:	fcmove st,st(1)
  4240ac:	mov    eax,ebx
  4240ae:	xlat   BYTE PTR ds:[ebx]
  4240af:	mov    edi,0x270b4ae1
  4240b4:	fcomip st,st(7)
  4240b6:	add    BYTE PTR [esi+esi*8],ah
  4240b9:	(bad)  
  4240ba:	out    dx,al
  4240bb:	sub    al,0x1
  4240bd:	pop    ebp
  4240be:	xor    ebp,DWORD PTR ds:[esi]
  4240c1:	lahf   
  4240c2:	fsub   DWORD PTR [esi-0x2520531d]
  4240c8:	daa    
  4240c9:	jmp    0x7ad2:0x4f345b2c
  4240d0:	mov    edx,gs
  4240d2:	mov    esp,0x7884f4b7
  4240d7:	div    DWORD PTR [ebp+0x14bc0686]
  4240dd:	sub    BYTE PTR [ebp-0x2b35a881],al
  4240e3:	retf   0x7316
  4240e6:	out    dx,al
  4240e7:	dec    edi
  4240e8:	mov    al,0x49
  4240ea:	nop
  4240eb:	aad    0xd3
  4240ed:	inc    edx
  4240ee:	sub    edx,esp
  4240f0:	shl    DWORD PTR [edx-0x31],1
  4240f3:	jns    0x424121
  4240f5:	jmp    0x424120
  4240f7:	pop    ebp
  4240f8:	jbe    0x424116
  4240fa:	js     0x424153
  4240fc:	scas   eax,DWORD PTR es:[edi]
  4240fd:	push   edi
  4240fe:	mov    bh,0xd7
  424100:	fstp   TBYTE PTR [edi-0x3a]
  424103:	jbe    0x42412b
  424105:	stc    
  424106:	dec    esp
  424107:	jge    0x424164
  424109:	es clc 
  42410b:	fisubr DWORD PTR [esi+0x4d732c01]
  424111:	add    eax,0xaaee0cad
  424116:	out    dx,eax
  424117:	ror    DWORD PTR [ebp+0x2752b1ce],1
  42411d:	jmp    0xb54b4daa
  424122:	dec    esp
  424123:	jg     0x4240fe
  424125:	mov    al,ds:0xa9983922
  42412a:	mov    ds:0x5df042ac,eax
  42412f:	(bad)  
  424131:	xor    BYTE PTR [ecx],ch
  424133:	in     eax,dx
  424134:	mov    BYTE PTR [edi+0x1c522163],cl
  42413a:	clc    
  42413b:	int3   
  42413c:	add    eax,0xb439d24f
  424141:	lea    edx,cs:[edx-0x743d5b1c]
  424148:	or     ch,BYTE PTR [edi+0x3409570f]
  42414e:	and    eax,0x8eaafa43
  424153:	sub    eax,0x619a3e89
  424158:	fs cmc 
  42415a:	pop    eax
  42415b:	mov    eax,0xf502199c
  424160:	sbb    BYTE PTR [edx],cl
  424162:	sbb    ebx,eax
  424164:	inc    edi
  424165:	adc    BYTE PTR [ebx],bh
  424167:	bound  eax,QWORD PTR [ebp+eax*8-0x7614e18b]
  42416e:	pop    edi
  42416f:	mov    bl,0x3a
  424171:	jmp    0xce06:0x63ded79d
  424178:	push   ebx
  424179:	nop
  42417a:	mov    ebx,0x360a1066
  42417f:	inc    esp
  424180:	hlt    
  424181:	adc    eax,DWORD PTR [ebx]
  424183:	retf   0x2d3c
  424186:	push   ebx
  424187:	iret   
  424188:	push   ebp
  424189:	retf   0x6323
  42418c:	cmp    al,0xce
  42418e:	fadd   QWORD PTR [ecx-0x49]
  424191:	mov    WORD PTR [ebx+0x7ca8f0bc],es
  424197:	jge    0x424214
  424199:	ret    0xa42e
  42419c:	shr    DWORD PTR [ecx+0x7f],1
  42419f:	xor    bl,ah
  4241a1:	js     0x424161
  4241a3:	scas   al,BYTE PTR es:[edi]
  4241a4:	retf   
  4241a5:	arpl   WORD PTR [ebp+0x7569300],bx
  4241ab:	scas   al,BYTE PTR es:[edi]
  4241ac:	inc    edi
  4241ad:	iret   
  4241ae:	inc    esp
  4241af:	es dec ebx
  4241b1:	or     BYTE PTR ds:0x5b80e600,al
  4241b7:	and    BYTE PTR [eax+0x27ebdabc],bh
  4241bd:	rcr    DWORD PTR [ebx],0xf6
  4241c0:	jg     0x4241e6
  4241c2:	sbb    eax,DWORD PTR [edx-0x6f]
  4241c5:	pop    ecx
  4241c6:	je     0x424175
  4241c8:	mov    dh,0x0
  4241ca:	xor    bl,ch
  4241cc:	jmp    0x37f9:0xa5cd03ea
  4241d3:	fs inc ecx
  4241d5:	daa    
  4241d6:	add    edi,0xffffff83
  4241d9:	pop    edx
  4241da:	arpl   di,sp
  4241dc:	cs pop edx
  4241de:	push   esp
  4241df:	pop    edx
  4241e0:	ds mov ecx,0x8c776ae0
  4241e6:	adc    eax,0x631917f0
  4241eb:	sub    ebp,edx
  4241ed:	push   edx
  4241ee:	lock or ebp,DWORD PTR [eax+0x425d9b8d]
  4241f5:	pop    es
  4241f6:	mov    edx,0x83f91666
  4241fb:	add    bh,cl
  4241fd:	leave  
  4241fe:	ds pop es
  424200:	xchg   edi,eax
  424201:	inc    esi
  424202:	pop    ebx
  424203:	xor    ah,BYTE PTR [ebp+0x27]
  424206:	pop    edx
  424207:	repz ret 
  424209:	inc    esp
  42420a:	in     eax,dx
  42420b:	test   BYTE PTR [edx+0x103dec6d],0x9
  424212:	mov    esp,0x82837999
  424217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424218:	jns    0x4241c2
  42421a:	iret   
  42421b:	fstp   st(1)
  42421d:	outs   dx,DWORD PTR ds:[esi]
  42421e:	lahf   
  42421f:	cmp    eax,0x470838f8
  424224:	jmp    0x4241b5
  424226:	mov    ebp,0x283e42e2
  42422b:	pop    ecx
  42422c:	xor    BYTE PTR [ebp+0x78],bl
  42422f:	shl    BYTE PTR [edi],cl
  424231:	iret   
  424232:	dec    eax
  424233:	jo     0x424280
  424235:	pop    esi
  424236:	and    eax,0x8bab24de
  42423b:	mov    dh,0xd9
  42423d:	aam    0x98
  42423f:	test   DWORD PTR [ebx-0x3f],edi
  424242:	pop    es
  424243:	loopne 0x42422c
  424245:	xor    eax,0x7795a6ec
  42424a:	cmp    al,0xb2
  42424c:	(bad)  
  42424d:	popf   
  42424e:	mov    bh,0xda
  424250:	jo     0x4242c9
  424252:	retf   0x1ce4
  424255:	aam    0xd5
  424257:	cdq    
  424258:	ss mov bl,0x59
  42425b:	(bad)  [edi]
  42425d:	ffreep st(6)
  42425f:	out    0x7f,al
  424261:	lahf   
  424262:	cmp    eax,0x89c6fa8f
  424267:	lds    ebx,FWORD PTR [ebx-0x73]
  42426a:	je     0x424280
  42426c:	cmp    cl,BYTE PTR [edx]
  42426e:	xor    bh,dh
  424270:	mov    DWORD PTR [esi-0x17],esi
  424273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424274:	mov    esp,0xc1f09cb5
  424279:	add    ebx,DWORD PTR [ebp+ecx*4-0x2518b122]
  424280:	or     al,0x6d
  424282:	call   0x2b143163
  424287:	mov    ds:0x30604f00,al
  42428c:	(bad)  
  42428e:	pop    edi
  42428f:	daa    
  424290:	jmp    0x90ed:0xad6ecf82
  424297:	fisttp DWORD PTR [esi-0x1cb49a74]
  42429d:	hlt    
  42429e:	arpl   WORD PTR [ebp+0x50f37fcb],sp
  4242a4:	add    al,0x92
  4242a6:	sahf   
  4242a7:	sbb    eax,DWORD PTR [esi]
  4242a9:	(bad)  
  4242aa:	stc    
  4242ab:	gs xor al,0x4b
  4242ae:	sti    
  4242af:	mov    dl,0xdc
  4242b1:	imul   edx,eax,0x483fcbc0
  4242b7:	sar    BYTE PTR [ecx+0x3d015ddd],1
  4242bd:	call   FWORD PTR [edx+0x54ea80cb]
  4242c3:	sahf   
  4242c4:	inc    ebx
  4242c5:	pop    esi
  4242c6:	xor    al,0x36
  4242c8:	xchg   BYTE PTR [ecx+0x140f447d],dh
  4242ce:	xlat   BYTE PTR ds:[ebx]
  4242cf:	prefetch BYTE PTR [esi+0x7322fcbf]
  4242d6:	mov    ah,0x78
  4242d8:	sbb    DWORD PTR [ebx+0x308f359],ecx
  4242de:	mov    ch,0x6c
  4242e0:	mov    cl,0x71
  4242e2:	mov    bl,0x2d
  4242e4:	(bad)  ds:0x765ddc97
  4242ea:	jge    0x424295
  4242ec:	retf   
  4242ed:	inc    ebp
  4242ee:	sahf   
  4242ef:	pusha  
  4242f0:	sub    eax,0x18f6b3cf
  4242f5:	push   esi
  4242f6:	daa    
  4242f7:	and    eax,0x48e66801
  4242fc:	lds    edi,FWORD PTR [edx-0x1f]
  4242ff:	xor    bl,bl
  424301:	or     DWORD PTR [eax+0x22879f],0x68fac4c
  42430b:	hlt    
  42430c:	out    0x62,al
  42430e:	mov    dh,0xcb
  424310:	aam    0xed
  424312:	in     al,dx
  424313:	imul   esp,DWORD PTR [edx-0x6c],0x6bccb8fb
  42431a:	push   esp
  42431b:	mov    esi,0x9afa8d0f
  424320:	pop    ecx
  424321:	rol    BYTE PTR [ebp+0x25],cl
  424324:	fld    QWORD PTR [edx+ecx*4-0xd642b13]
  42432b:	ins    DWORD PTR es:[edi],dx
  42432c:	jb     0x424358
  42432e:	gs push edi
  424330:	pop    es
  424331:	imul   ebx,ebx,0x944f54e5
  424337:	outs   dx,DWORD PTR ds:[esi]
  424338:	shr    DWORD PTR [ebx+0x3db8b421],1
  42433e:	pop    ecx
  42433f:	shl    BYTE PTR [edx+0x3f],1
  424342:	pusha  
  424343:	push   esi
  424344:	add    bl,BYTE PTR [ebp-0x51a6ba06]
  42434a:	pop    esi
  42434b:	mov    edx,0x7a5b0c48
  424351:	adc    ecx,0x6c11f5dd
  424357:	or     ebx,DWORD PTR [ecx+0x227eae49]
  42435d:	pusha  
  42435e:	addr16 in eax,0xf4
  424361:	ficom  DWORD PTR [ecx-0x250ccc84]
  424367:	mov    al,0x64
  424369:	mov    cl,0x9f
  42436b:	dec    edi
  42436c:	adc    BYTE PTR ds:0xdd6c7187,cl
  424372:	scas   eax,DWORD PTR es:[edi]
  424373:	lods   eax,DWORD PTR ds:[esi]
  424374:	xchg   esp,eax
  424375:	(bad)  
  424376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424377:	daa    
  424378:	hlt    
  424379:	lods   al,BYTE PTR ds:[esi]
  42437a:	adc    eax,0xd9b408c
  42437f:	ss (bad) 
  424381:	cmp    DWORD PTR [ecx-0x4b],ebp
  424384:	(bad)  
  424385:	cld    
  424386:	xchg   edx,eax
  424387:	cld    
  424388:	fdiv   st,st(6)
  42438a:	and    al,0x21
  42438c:	inc    ecx
  42438d:	stc    
  42438e:	fs sbb edi,eax
  424391:	jecxz  0x4243d0
  424393:	mov    bh,0xb1
  424395:	mov    edx,0x56ded555
  42439a:	shr    DWORD PTR [ebp+0x14b7c22f],0xed
  4243a1:	sbb    eax,0xa02f9152
  4243a6:	dec    ebx
  4243a7:	add    edi,esi
  4243a9:	jo     0x424424
  4243ab:	jl     0x424407
  4243ad:	dec    esi
  4243ae:	pop    esi
  4243af:	xchg   edx,eax
  4243b0:	mov    dl,0x11
  4243b2:	xchg   esi,eax
  4243b3:	sub    ecx,DWORD PTR [edx-0x7775f632]
  4243b9:	sub    ch,dh
  4243bb:	cdq    
  4243bc:	out    dx,al
  4243bd:	pop    esi
  4243be:	jbe    0x4243dc
  4243c0:	loope  0x4243d4
  4243c2:	push   0x2a3f332b
  4243c7:	icebp  
  4243c8:	sub    bh,ch
  4243ca:	repnz sub ecx,DWORD PTR [edx+0x22]
  4243ce:	pop    esi
  4243cf:	or     eax,0x2e748e9e
  4243d4:	adc    al,0xb2
  4243d6:	std    
  4243d7:	inc    ebp
  4243d8:	and    ebx,edx
  4243da:	jmp    0x4243db
  4243dc:	cdq    
  4243dd:	lods   al,BYTE PTR ds:[esi]
  4243de:	xchg   ebx,eax
  4243df:	ror    ah,cl
  4243e1:	jb     0x42437e
  4243e3:	xchg   ebx,eax
  4243e4:	fadd   st,st(4)
  4243e6:	mov    dh,0x8d
  4243e8:	bound  ebp,QWORD PTR [ecx]
  4243ea:	aaa    
  4243eb:	or     ah,BYTE PTR [ebx-0x45]
  4243ee:	jmp    0x2a2c:0x62e51c3e
  4243f5:	leave  
  4243f6:	lods   al,BYTE PTR ds:[esi]
  4243f7:	cmp    eax,0x86e81ac4
  4243fc:	pop    ecx
  4243fd:	enter  0xe688,0xf2
  424401:	pop    edi
  424402:	es sbb al,0xbe
  424405:	adc    BYTE PTR [esi-0x6d],bl
  424408:	xchg   ch,dl
  42440a:	(bad)  [eax]
  42440c:	nop
  42440d:	aad    0xe3
  42440f:	xor    BYTE PTR ds:0xaa4f3ec9,ch
  424415:	das    
  424416:	js     0x42444f
  424418:	repz jb 0x42446d
  42441b:	sbb    DWORD PTR [ebx-0x5],ecx
  42441e:	add    BYTE PTR [eax],al
  424420:	add    BYTE PTR [eax],al
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	lds    eax,FWORD PTR [ecx]
  424430:	xchg   edi,eax
  424431:	hlt    
  424432:	inc    ebp
  424433:	mov    ebp,0x4f40001
  424438:	add    BYTE PTR [eax],al
  42443a:	and    eax,0xca9d9bd7
  42443f:	pop    eax
  424440:	sti    
  424441:	clc    
  424442:	jmp    0xcd47:0x143358b6
  424449:	mov    esi,0x9d49ce13
  42444e:	lahf   
  42444f:	push   0xb910d9b0
  424454:	(bad)  
  424455:	push   esp
  424456:	lods   al,BYTE PTR ds:[esi]
  424457:	test   DWORD PTR [eax-0x3d76923b],edx
  42445d:	test   eax,edx
  42445f:	cli    
  424460:	verw   sp
  424463:	xor    bh,BYTE PTR [eax-0x5b2dbca2]
  424469:	test   BYTE PTR [edi+0x7bc94b99],al
  42446f:	(bad)  
  424470:	sub    bh,BYTE PTR [edx+0x6f657a72]
  424476:	(bad)  
  424478:	jmp    0x7e5e:0x30f1a162
  42447f:	pop    edx
  424480:	int3   
  424481:	mov    dh,0x9
  424483:	adc    DWORD PTR [edx-0x71],esp
  424486:	mov    ebp,0x28094958
  42448b:	xchg   edi,eax
  42448c:	xchg   ebx,eax
  42448d:	retf   
  42448e:	fsubr  QWORD PTR [edx+0x33055002]
  424494:	push   eax
  424495:	jns    0x4244f3
  424497:	(bad)  
  424498:	mov    ah,0xd7
  42449a:	push   0xe51bc0c4
  42449f:	in     al,0xb1
  4244a1:	out    dx,eax
  4244a2:	jmp    0x424459
  4244a4:	adc    BYTE PTR [eax-0x5dbdb131],ch
  4244aa:	jp     0x4244e7
  4244ac:	fbld   TBYTE PTR [edi+0x62bb5de8]
  4244b2:	lahf   
  4244b3:	out    0xb4,al
  4244b5:	xlat   BYTE PTR ds:[ebx]
  4244b6:	pop    es
  4244b7:	test   DWORD PTR [edx+ebp*1-0xd],esp
  4244bb:	jmp    0x897f6493
  4244c0:	ret    0x3e9
  4244c3:	push   ss
  4244c4:	cli    
  4244c5:	jmp    0x42452b
  4244c7:	adc    al,0x3c
  4244c9:	repnz (bad) 
  4244cb:	pop    esi
  4244cc:	arpl   WORD PTR [edx+ebx*2+0x7dc61362],dx
  4244d3:	inc    ebx
  4244d4:	outs   dx,DWORD PTR ds:[esi]
  4244d5:	fldl2t 
  4244d7:	pop    ebx
  4244d8:	pop    edx
  4244d9:	aam    0xd2
  4244db:	xor    dl,0xe1
  4244de:	mov    DWORD PTR [ecx-0x42],edi
  4244e1:	xchg   BYTE PTR [ecx-0x717517a9],dh
  4244e7:	cli    
  4244e8:	and    bl,ch
  4244ea:	shr    DWORD PTR [esi],1
  4244ec:	repnz xlat BYTE PTR ds:[ebx]
  4244ee:	out    0x4,al
  4244f0:	test   eax,0x7b7fe00d
  4244f5:	in     al,0xcd
  4244f7:	xchg   esp,eax
  4244f8:	sbb    al,0x5a
  4244fa:	mov    dl,0x18
  4244fc:	(bad)  
  4244fd:	ja     0x424530
  4244ff:	mov    ecx,0xf4b7922f
  424504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424505:	adc    edx,ebx
  424507:	inc    ebx
  424508:	cs xchg ebp,eax
  42450a:	gs pushf 
  42450c:	retf   0x3a9c
  42450f:	mov    BYTE PTR [edx-0x7621d440],cl
  424515:	imul   esp,DWORD PTR ds:0x259cfb42,0x25
  42451c:	fwait
  42451d:	or     DWORD PTR [esi-0x3d6bfdf1],0xffffffb1
  424524:	lahf   
  424525:	push   ss
  424526:	ret    0x7c3b
  424529:	mov    cl,0x67
  42452b:	icebp  
  42452c:	adc    bl,BYTE PTR [edx]
  42452e:	scas   al,BYTE PTR es:[edi]
  42452f:	cmp    al,BYTE PTR [ebp-0x6622efdc]
  424535:	sbb    DWORD PTR [esi-0x63],eax
  424538:	sub    al,0xc2
  42453a:	sbb    BYTE PTR [eax+0xc],0x11
  42453e:	das    
  42453f:	(bad)  
  424540:	jne    0x42450a
  424542:	jno    0x424595
  424544:	mov    esi,0xe814cc3
  424549:	in     al,dx
  42454a:	inc    DWORD PTR [esi-0x72]
  42454d:	mov    eax,ds:0xd3cfb986
  424552:	loope  0x42455b
  424554:	aas    
  424555:	add    eax,0x7e0c3c58
  42455a:	ror    DWORD PTR [ebx-0x4f],cl
  42455d:	out    dx,al
  42455e:	jg     0x4244f6
  424560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424561:	clc    
  424562:	push   es
  424563:	(bad)  
  424564:	lahf   
  424565:	loopne 0x424557
  424567:	jecxz  0x4245b0
  424569:	jg     0x4245b4
  42456b:	xchg   ebp,eax
  42456c:	inc    edi
  42456d:	outs   dx,BYTE PTR ds:[esi]
  42456e:	shl    BYTE PTR [edx],0xc9
  424571:	push   edx
  424572:	js     0x424580
  424574:	(bad)  
  424575:	pop    esp
  424576:	xchg   ch,ch
  424578:	(bad)  
  424579:	jb     0x42453b
  42457b:	sar    DWORD PTR [edx-0x6d],1
  42457e:	cmp    eax,0x95e61e94
  424583:	movzx  eax,WORD PTR [ebp+0x68]
  424587:	add    bh,BYTE PTR [ecx+0x466cc938]
  42458d:	imul   eax,edx,0x6f1edd34
  424593:	push   edx
  424594:	dec    ebx
  424595:	mov    cs,edx
  424597:	mov    edi,0xccf820e
  42459c:	iret   
  42459d:	mov    WORD PTR [edx-0x7b],ds
  4245a0:	push   eax
  4245a1:	xchg   ebp,eax
  4245a2:	xchg   esi,eax
  4245a3:	(bad)  
  4245a4:	out    0x26,al
  4245a6:	(bad)
  4245a9:	arpl   WORD PTR [ecx+ecx*1-0x2515609f],dx
  4245b0:	fdivr  QWORD PTR [ebx-0x1d]
  4245b3:	push   ebp
  4245b4:	push   es
  4245b5:	leave  
  4245b6:	out    dx,al
  4245b7:	or     ebx,DWORD PTR [edx-0x37]
  4245ba:	jge    0x424599
  4245bc:	push   0x532ca6cb
  4245c1:	(bad)  
  4245c2:	fnstcw WORD PTR [ecx*2-0x10e057b7]
  4245c9:	xchg   ecx,eax
  4245ca:	add    ch,BYTE PTR [edx-0x53]
  4245cd:	mov    dl,0x46
  4245cf:	mov    dl,0x2d
  4245d1:	or     eax,0x5ed8d52d
  4245d6:	repnz sar ebx,1
  4245d9:	pushf  
  4245da:	ins    BYTE PTR es:[edi],dx
  4245db:	lds    esi,FWORD PTR ds:0x75e1e81b
  4245e1:	sbb    eax,0x9a382ad2
  4245e6:	pop    edi
  4245e7:	aas    
  4245e8:	loop   0x424659
  4245ea:	jbe    0x424610
  4245ec:	cmp    eax,0xa13e3db3
  4245f1:	add    eax,0xa2b2375d
  4245f6:	shl    DWORD PTR [eax-0x16b30737],0xee
  4245fd:	and    BYTE PTR [ecx-0x3848daec],dl
  424603:	retf   0x3fe4
  424606:	mov    al,ds:0x824a1d19
  42460b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42460c:	js     0x4245b9
  42460e:	sar    DWORD PTR [ecx+eax*1],cl
  424611:	out    dx,eax
  424612:	iret   
  424613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424614:	vpshuflw ymm7,YMMWORD PTR [esi+0x5aa89e1f],0x82
  42461d:	dec    esp
  42461e:	aam    0x64
  424620:	dec    eax
  424621:	loop   0x424639
  424623:	dec    esp
  424624:	adc    edi,esi
  424626:	dec    edx
  424627:	dec    edx
  424628:	imul   ecx,DWORD PTR [eax],0x32eda3
  42462e:	popa   
  42462f:	out    0x53,eax
  424631:	and    al,0x3c
  424633:	ror    BYTE PTR [ecx-0x4679b5e7],cl
  424639:	jnp    0x4246a9
  42463b:	fwait
  42463c:	fwait
  42463d:	or     dl,BYTE PTR [esi]
  42463f:	popf   
  424640:	imul   ecx,DWORD PTR [edx+0x79],0x7c9ba2cf
  424647:	xchg   ebx,eax
  424648:	mov    eax,0x4417b6ac
  42464d:	out    dx,eax
  42464e:	mov    ah,0x80
  424650:	icebp  
  424651:	or     BYTE PTR [ecx],bl
  424653:	jne    0x4245f7
  424655:	pushf  
  424656:	inc    eax
  424657:	push   esp
  424658:	repz mov eax,ds:0xf7e7a62f
  42465e:	fs cmp esp,esp
  424661:	fmul   DWORD PTR [ebx]
  424663:	pop    ecx
  424664:	cdq    
  424665:	push   esp
  424666:	cmp    BYTE PTR [eax-0x591b38ec],cl
  42466c:	int    0x59
  42466e:	rcr    edx,0xf5
  424671:	sub    BYTE PTR [ebx-0x2a],dl
  424674:	in     al,dx
  424675:	jno    0x424660
  424677:	pop    edi
  424678:	rcl    BYTE PTR [esi],0x34
  42467b:	scas   eax,DWORD PTR es:[edi]
  42467c:	test   DWORD PTR [edi-0x291c5f82],ebp
  424682:	ins    BYTE PTR es:[edi],dx
  424683:	push   0xffffffc7
  424685:	loopne 0x424689
  424687:	cmp    BYTE PTR [ecx-0x5d],bh
  42468a:	jns    0x4246db
  42468c:	rol    BYTE PTR ss:[ecx-0xfa435ad],cl
  424693:	ja     0x424659
  424695:	xor    edi,0x84c63e99
  42469b:	call   0x86a9937c
  4246a0:	sti    
  4246a1:	mov    edi,0xd40c002c
  4246a6:	rcr    dl,cl
  4246a8:	pop    ecx
  4246a9:	rcr    ebx,1
  4246ab:	into   
  4246ac:	mov    ds:0xb3315e61,eax
  4246b1:	in     al,0x55
  4246b3:	fldenv [ebp-0x29]
  4246b6:	daa    
  4246b7:	aad    0xd9
  4246b9:	outs   dx,DWORD PTR ds:[esi]
  4246ba:	stos   BYTE PTR es:[edi],al
  4246bb:	or     eax,0x48ab9847
  4246c0:	(bad)
  4246c3:	enter  0xc521,0x3c
  4246c7:	xor    BYTE PTR [edi+eiz*1+0x59],0xee
  4246cc:	daa    
  4246cd:	enter  0x3a96,0x80
  4246d1:	jmp    0x59abd3b0
  4246d6:	jmp    0x4246d6
  4246d8:	or     ebx,0x9c579926
  4246de:	nop
  4246df:	pop    ds
  4246e0:	scas   al,BYTE PTR es:[edi]
  4246e1:	mov    al,0x22
  4246e3:	stos   DWORD PTR es:[edi],eax
  4246e4:	add    ah,dl
  4246e6:	mov    al,ds:0x6206f
  4246eb:	mov    eax,0x4ddd7e2
  4246f0:	xor    DWORD PTR [edx+0x3ad39478],ecx
  4246f6:	push   edx
  4246f7:	mov    ds:0x3bcc9ce5,al
  4246fc:	push   edx
  4246fd:	mov    ecx,0x4f9a1413
  424702:	jno    0x4246d8
  424704:	and    esp,DWORD PTR ds:0x7ea4ad67
  42470a:	aas    
  42470b:	mov    fs,WORD PTR [esi+ebx*2]
  42470e:	jne    0x42478e
  424710:	sub    DWORD PTR [edi+0x9],ebx
  424713:	push   ds
  424714:	ror    BYTE PTR [ebx+0xcfc7d8a],1
  42471a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42471b:	cmp    ch,bh
  42471d:	pop    ebx
  42471e:	push   ss
  42471f:	mov    bh,0xfc
  424721:	retf   0x5321
  424724:	lods   eax,DWORD PTR ds:[esi]
  424725:	cmc    
  424726:	rcl    BYTE PTR [edi-0x2eae72fc],0x3f
  42472d:	jno    0x42473e
  42472f:	push   ds
  424730:	mov    DWORD PTR [ebp-0x1a9fd2b3],esp
  424736:	push   ss
  424737:	ret    0xf509
  42473a:	push   edi
  42473b:	xchg   ebx,eax
  42473c:	jne    0x4247a0
  42473e:	xchg   BYTE PTR [edx+0x11022983],ch
  424744:	or     eax,DWORD PTR [esi-0x140b4dab]
  42474a:	retf   
  42474b:	cmp    eax,0x47b5059e
  424750:	lods   eax,DWORD PTR ds:[esi]
  424751:	aam    0x77
  424753:	fisttp WORD PTR [eax]
  424755:	fbstp  TBYTE PTR ds:0xacc205ba
  42475b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475c:	test   eax,0xe643d9f7
  424761:	push   ecx
  424762:	mul    BYTE PTR [edx]
  424764:	retf   0xa60a
  424767:	jb     0x424701
  424769:	xchg   ebx,eax
  42476a:	sbb    BYTE PTR [ecx],al
  42476c:	adc    DWORD PTR [edx],0xfffffff1
  42476f:	mov    esp,0xa938f5c7
  424774:	jl     0x424724
  424776:	sbb    BYTE PTR [ecx+0x5653fc0d],bl
  42477c:	mov    ah,0x6d
  42477e:	push   edx
  42477f:	mov    ch,0xec
  424781:	retf   
  424782:	mov    BYTE PTR [esi],cl
  424784:	pop    edx
  424785:	popa   
  424786:	addr16 pop es
  424788:	dec    edi
  424789:	xchg   edi,eax
  42478a:	ins    BYTE PTR es:[edi],dx
  42478b:	mov    cl,0x14
  42478d:	or     ch,dl
  42478f:	mov    dh,0xa5
  424791:	sbb    BYTE PTR [ebx+0x7c9a99fd],cl
  424797:	jmp    0xf985:0x38ed42e4
  42479e:	adc    bh,ah
  4247a0:	xchg   ebp,eax
  4247a1:	or     DWORD PTR [ebx+0x5c],edi
  4247a4:	pop    es
  4247a5:	xor    ch,al
  4247a7:	pop    ebx
  4247a8:	ds es mov edx,0xb6032284
  4247af:	shl    BYTE PTR [esi],0x81
  4247b2:	scas   eax,DWORD PTR es:[edi]
  4247b3:	stos   BYTE PTR es:[edi],al
  4247b4:	xor    BYTE PTR [edi],ah
  4247b6:	jne    0x4247fb
  4247b8:	std    
  4247b9:	leave  
  4247ba:	and    al,0xba
  4247bc:	push   esi
  4247bd:	lods   al,BYTE PTR ds:[esi]
  4247be:	cwde   
  4247bf:	mov    BYTE PTR ds:0x61ae8e6,ch
  4247c5:	sahf   
  4247c6:	cld    
  4247c7:	push   0xb43e1952
  4247cc:	pop    esp
  4247cd:	push   esp
  4247ce:	jle    0x424803
  4247d0:	xor    eax,0xb437e559
  4247d5:	sbb    cl,BYTE PTR [ebx]
  4247d7:	inc    esp
  4247d8:	fadd   st(3),st
  4247da:	ss pcmpgtw mm2,mm1
  4247de:	pop    edi
  4247df:	mov    ah,0x1d
  4247e1:	mov    dh,BYTE PTR [eax-0x40]
  4247e4:	xor    BYTE PTR [esi],al
  4247e6:	xchg   ebp,eax
  4247e7:	pushf  
  4247e8:	cmp    al,dl
  4247ea:	cdq    
  4247eb:	sub    eax,0xb9b5bde3
  4247f0:	mov    esp,0xb259070c
  4247f5:	ss push 0xd5efdee
  4247fb:	clc    
  4247fc:	sub    ch,BYTE PTR ds:0xd076df9c
  424802:	test   al,0x2a
  424804:	call   0x97128eb5
  424809:	pop    eax
  42480a:	shl    DWORD PTR [ebx+esi*8+0x427c2b33],cl
  424811:	adc    BYTE PTR [ebx],bh
  424813:	outs   dx,DWORD PTR ds:[esi]
  424814:	mov    edi,0xb7be12dd
  424819:	mov    dl,0xe9
  42481b:	outs   dx,BYTE PTR ds:[esi]
  42481c:	mov    dh,0xab
  42481e:	xchg   esi,eax
  42481f:	dec    eax
  424820:	ja     0x4247af
  424822:	sti    
  424823:	push   ss
  424824:	sub    ebp,DWORD PTR [edx+ecx*4]
  424827:	(bad)  
  424829:	sbb    DWORD PTR [edx+ebx*8+0x34],eax
  42482d:	dec    ecx
  42482e:	inc    ebx
  42482f:	outs   dx,DWORD PTR ds:[esi]
  424830:	out    0xd2,al
  424832:	sti    
  424833:	loop   0x42482a
  424835:	sub    BYTE PTR [eax-0x5f9a8e0e],dh
  42483b:	outs   dx,BYTE PTR ds:[esi]
  42483c:	repz push 0xffffff8a
  42483f:	sub    esi,0xfffffff8
  424842:	xchg   BYTE PTR [ecx-0x8],dl
  424845:	sub    ecx,DWORD PTR [eax-0x57]
  424848:	out    0x1a,al
  42484a:	adc    al,BYTE PTR [edi]
  42484c:	cwde   
  42484d:	sbb    DWORD PTR [ecx+ebx*1-0x2e],ebp
  424851:	push   ebx
  424852:	mov    ebp,0x30f19431
  424857:	mov    al,ds:0xbc4ff053
  42485c:	fsub   DWORD PTR [esi+0x16]
  42485f:	sub    esp,DWORD PTR [ecx-0x7b3cf02b]
  424865:	mov    eax,ds:0x975d4db5
  42486a:	inc    edx
  42486b:	sbb    cl,bl
  42486d:	rcl    DWORD PTR [edi],1
  42486f:	xchg   bl,bh
  424871:	cmp    BYTE PTR [edx+0x6031f43f],dl
  424877:	fwait
  424878:	and    BYTE PTR [eax],cl
  42487a:	mov    eax,ds:0xdcd06377
  42487f:	sub    eax,esi
  424881:	dec    eax
  424882:	bound  ebp,QWORD PTR [ebp-0x2d]
  424885:	fst    QWORD PTR [ebx+edx*2]
  424888:	js     0x424812
  42488a:	imul   esp,edx,0x8c70c184
  424890:	retf   0x7a66
  424893:	xchg   edx,eax
  424894:	sbb    al,0xa1
  424896:	push   esi
  424897:	fadd   DWORD PTR [edi]
  424899:	inc    ecx
  42489a:	sbb    al,0x5d
  42489d:	cwde   
  42489e:	inc    esp
  42489f:	ins    BYTE PTR es:[edi],dx
  4248a0:	ins    BYTE PTR es:[edi],dx
  4248a1:	adc    cx,WORD PTR [eax+0x2]
  4248a5:	repz cwde 
  4248a7:	clc    
  4248a8:	cmp    al,0xf2
  4248aa:	xchg   BYTE PTR [ebx],cl
  4248ac:	or     DWORD PTR [ecx-0x171475e0],edx
  4248b2:	push   edx
  4248b3:	sti    
  4248b4:	pop    ss
  4248b5:	push   0xffffffd2
  4248b7:	mov    eax,0xfb8f80d4
  4248bc:	mov    ds:0x87cf8f6e,al
  4248c1:	lock inc esi
  4248c3:	push   0x23
  4248c5:	ror    ebp,1
  4248c7:	add    edx,ebp
  4248c9:	sbb    eax,0xf8ac27f5
  4248ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248cf:	or     DWORD PTR [ecx-0x20c77b7d],eax
  4248d5:	mov    ecx,0x2fcf6b8b
  4248da:	jecxz  0x4248a6
  4248dc:	mulps  xmm6,xmm6
  4248df:	pop    ds
  4248e0:	push   es
  4248e1:	fistp  WORD PTR [ecx-0x26]
  4248e4:	test   al,0xc1
  4248e6:	push   esi
  4248e7:	mov    bh,0x1c
  4248e9:	fnsave [edi+eiz*2+0x36]
  4248ed:	xchg   ecx,ebx
  4248ef:	das    
  4248f0:	push   0x5ddb612c
  4248f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f6:	mov    eax,ds:0xc05514d4
  4248fb:	mov    ecx,0x8c866110
  424900:	bound  ebp,QWORD PTR [edi]
  424902:	inc    esp
  424903:	sahf   
  424904:	(bad)  [esi]
  424906:	pop    esi
  424907:	mov    eax,DWORD PTR [edi-0x2e]
  42490a:	test   al,0x17
  42490c:	add    DWORD PTR [edx-0x17],0x755862ba
  424913:	xchg   ebx,eax
  424914:	pop    ss
  424915:	push   ebp
  424916:	push   es
  424917:	xchg   edx,esi
  424919:	dec    DWORD PTR [edi+0x6e]
  42491c:	clc    
  42491d:	mov    gs,WORD PTR [edi-0x6b]
  424920:	mov    eax,ds:0x3f559ba8
  424925:	and    ecx,esp
  424927:	xor    eax,0x22a687b7
  42492c:	leave  
  42492d:	rol    BYTE PTR [eax],1
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42493f:	pop    ss
  424940:	pop    esp
  424941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424942:	cmp    edx,eax
  424944:	add    DWORD PTR [eax],eax
  424946:	hlt    
  424947:	add    al,0x0
  424949:	add    bl,ch
  42494b:	nop
  42494c:	or     BYTE PTR [ebx],dl
  42494e:	add    BYTE PTR [ecx+0x72],ch
  424951:	cmc    
  424952:	mov    esp,0xcdba3431
  424957:	bound  edi,QWORD PTR [ecx+0x61]
  42495a:	ror    BYTE PTR [edi+0x26d65b47],cl
  424960:	sub    DWORD PTR [edx],eax
  424962:	iret   
  424963:	addr16 pop esp
  424965:	jmp    0x18a9:0x9ea95a58
  42496c:	mov    ebp,0xc53c25b3
  424971:	lock adc al,0xf3
  424974:	fcom   QWORD PTR [esi-0x24]
  424977:	les    esp,FWORD PTR [esi+0xc]
  42497a:	retf   
  42497b:	cmp    BYTE PTR [edi+0x77],dh
  42497e:	mov    DWORD PTR [di+0x6e],ebp
  424982:	ror    edx,1
  424984:	iret   
  424985:	aas    
  424986:	cdq    
  424987:	inc    esp
  424988:	mov    dh,0xcd
  42498a:	(bad)  
  42498b:	sar    BYTE PTR [ebp-0x52],cl
  42498e:	loop   0x4249fc
  424990:	ror    BYTE PTR [eax],cl
  424992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424993:	ss hlt 
  424995:	daa    
  424996:	outs   dx,WORD PTR ds:[esi]
  424998:	mov    ds:0x3681de58,al
  42499d:	push   es
  42499e:	fstp   QWORD PTR [esi+0x7ce90d00]
  4249a4:	mov    dl,0xaa
  4249a6:	jne    0x424a20
  4249a8:	ins    BYTE PTR es:[edi],dx
  4249a9:	shr    dl,cl
  4249ab:	cmp    al,0x6d
  4249ad:	popf   
  4249ae:	std    
  4249af:	jecxz  0x4249f0
  4249b1:	mov    ah,0x58
  4249b3:	pop    esi
  4249b4:	gs adc al,0x1c
  4249b7:	imul   ebx,DWORD PTR [esi+0x2d646177],0xffffffee
  4249be:	fdiv   DWORD PTR [eax+0x79436a37]
  4249c4:	mov    bh,0xad
  4249c6:	(bad)  
  4249c7:	clc    
  4249c8:	rcr    dh,cl
  4249ca:	and    eax,0x22dffcae
  4249cf:	pop    edx
  4249d0:	push   ecx
  4249d1:	repz rol DWORD PTR ds:0x50711a63,cl
  4249d8:	dec    ecx
  4249d9:	inc    ecx
  4249da:	adc    BYTE PTR [ecx-0x37f7781],0xd1
  4249e1:	inc    edx
  4249e2:	cmp    ah,BYTE PTR [esi-0x35c0c950]
  4249e8:	lds    eax,FWORD PTR [ebp-0xb]
  4249eb:	bound  edx,QWORD PTR [edx+ebx*1-0x1d]
  4249ef:	sbb    BYTE PTR [edx-0x3a8621c7],ch
  4249f5:	ficomp DWORD PTR [ecx-0x7c9dd752]
  4249fb:	sub    al,0x4c
  4249fd:	inc    edi
  4249fe:	fidivr WORD PTR ds:0x4cf31ef8
  424a04:	xor    DWORD PTR [ecx+0x66],edi
  424a07:	fbld   TBYTE PTR [ecx+edi*8+0x24]
  424a0b:	fs adc ecx,ecx
  424a0e:	popa   
  424a0f:	aad    0x70
  424a11:	or     ah,BYTE PTR [edi+0x4b]
  424a14:	mov    edi,0xc55217af
  424a19:	xor    eax,0x5aac66e0
  424a1e:	dec    edi
  424a1f:	cld    
  424a20:	ror    BYTE PTR [esi],0x5b
  424a23:	mov    cx,0x78a9
  424a27:	pop    esp
  424a28:	call   0xae434258
  424a2d:	in     eax,0x8a
  424a2f:	xor    BYTE PTR [edi+0x191d7fc2],bl
  424a35:	dec    ebp
  424a36:	inc    ebx
  424a37:	in     eax,dx
  424a38:	jns    0x424aac
  424a3a:	stos   DWORD PTR es:[edi],eax
  424a3b:	push   esi
  424a3c:	push   edx
  424a3d:	mov    DWORD PTR ds:0xbac6c7c,esi
  424a43:	pushf  
  424a44:	xchg   esp,eax
  424a45:	fild   WORD PTR [eax-0x2e]
  424a48:	inc    edx
  424a49:	xchg   ecx,eax
  424a4a:	xlat   BYTE PTR ds:[ebx]
  424a4b:	loope  0x424a8f
  424a4d:	xchg   ebx,eax
  424a4e:	xchg   edi,eax
  424a4f:	mov    bl,cl
  424a51:	push   es
  424a52:	lods   al,BYTE PTR ds:[esi]
  424a53:	mov    dh,0x62
  424a55:	push   es
  424a56:	push   ds
  424a57:	repnz call 0x65a9:0x988d7ab
  424a5f:	mov    dh,0xb3
  424a61:	popa   
  424a62:	jb     0x424a68
  424a64:	jmp    0xc2ea2a16
  424a69:	lock (bad) 
  424a6b:	aad    0x96
  424a6d:	(bad)  
  424a6f:	in     al,0x18
  424a71:	inc    BYTE PTR [edx-0x69]
  424a74:	test   eax,0xd2967ee4
  424a79:	cmp    al,0xe0
  424a7b:	clc    
  424a7c:	pop    ds
  424a7d:	push   edi
  424a7e:	adc    edi,DWORD PTR [edi+0x42]
  424a81:	sahf   
  424a82:	stos   BYTE PTR es:[edi],al
  424a83:	push   ebx
  424a84:	icebp  
  424a85:	jns    0x424a22
  424a87:	jle    0x424b08
  424a89:	inc    ebx
  424a8a:	pop    ss
  424a8b:	shl    al,cl
  424a8d:	scas   eax,DWORD PTR es:[edi]
  424a8e:	cdq    
  424a8f:	pop    edx
  424a90:	movhps QWORD PTR [ecx-0x26],xmm6
  424a94:	sbb    al,BYTE PTR ds:0x656b96d1
  424a9a:	push   0x3cda1fe5
  424a9f:	outs   dx,BYTE PTR ds:[esi]
  424aa0:	cwde   
  424aa1:	inc    ecx
  424aa2:	xchg   edi,eax
  424aa3:	rol    ebx,0xbf
  424aa6:	sbb    BYTE PTR [esi],0x72
  424aa9:	(bad)  
  424aaa:	pop    esi
  424aab:	push   edi
  424aac:	out    0xa1,al
  424aae:	xchg   bl,cl
  424ab0:	sbb    eax,0xb50a7834
  424ab5:	ins    DWORD PTR es:[edi],dx
  424ab6:	in     eax,0x18
  424ab8:	inc    edx
  424ab9:	xchg   esp,eax
  424aba:	mov    al,ds:0x3f6e1420
  424abf:	in     al,dx
  424ac0:	(bad)  
  424ac1:	jo     0x424a62
  424ac3:	dec    ebp
  424ac4:	add    DWORD PTR [edi],ebp
  424ac6:	aaa    
  424ac7:	mov    edx,0x5890d068
  424acc:	rol    DWORD PTR [ebp+0x6a],0xeb
  424ad0:	sub    ch,BYTE PTR [eax+eiz*1+0x34]
  424ad4:	iret   
  424ad5:	xor    DWORD PTR [esi-0x2f],ebp
  424ad8:	popa   
  424ad9:	adc    eax,0x28eafadd
  424ade:	aad    0x7e
  424ae0:	das    
  424ae1:	or     eax,0xed0646ee
  424ae7:	setg   dh
  424aea:	ror    edx,1
  424aec:	int    0x87
  424aee:	pop    ebx
  424aef:	cmp    ah,dh
  424af1:	xchg   edx,eax
  424af2:	xor    al,0x2
  424af4:	sbb    DWORD PTR [edi-0xed0dbd1],ebp
  424afa:	addr16 xor al,0x75
  424afd:	mov    edx,0xb94687ab
  424b02:	xchg   esi,eax
  424b03:	(bad)  
  424b04:	js     0x424ad8
  424b06:	ret    
  424b07:	mov    bh,0x8b
  424b09:	in     eax,0x3
  424b0b:	cmp    al,0x7
  424b0d:	xchg   ebx,eax
  424b0e:	ins    BYTE PTR es:[edi],dx
  424b0f:	mov    ah,0xcb
  424b11:	and    DWORD PTR es:[ebp-0xd],edi
  424b15:	call   0xbc85:0x700c82d0
  424b1c:	pop    ebp
  424b1d:	int    0x5b
  424b1f:	bound  edx,QWORD PTR [edi+0xee2a4e]
  424b25:	ficomp WORD PTR [edi]
  424b27:	ds cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  424b2a:	fldcw  WORD PTR [esi+0x6b]
  424b2d:	mov    esi,DWORD PTR ds:[ecx]
  424b30:	pop    ecx
  424b31:	cmp    ah,BYTE PTR ds:0x5ba8a2d9
  424b37:	dec    edi
  424b38:	mov    fs:0xe3be5e1a,eax
  424b3e:	cmc    
  424b3f:	add    ch,BYTE PTR [ecx]
  424b41:	push   cs
  424b42:	int    0x12
  424b44:	push   0x43
  424b46:	cdq    
  424b47:	jp     0x424ada
  424b49:	cli    
  424b4a:	or     BYTE PTR [eax+0x5d7d24],bl
  424b50:	pusha  
  424b51:	mov    ebp,0x55e59a93
  424b56:	aas    
  424b57:	stos   BYTE PTR es:[edi],al
  424b58:	lods   eax,DWORD PTR ds:[esi]
  424b59:	fwait
  424b5a:	nop
  424b5b:	inc    edi
  424b5c:	mov    dh,0x31
  424b5e:	call   0x74e2:0x4355e309
  424b65:	dec    ecx
  424b66:	push   0x975bd7a2
  424b6b:	mov    ebx,0x45fde166
  424b70:	js     0x424b7f
  424b72:	dec    ecx
  424b73:	inc    esi
  424b74:	stos   BYTE PTR es:[edi],al
  424b75:	ja     0x424bc9
  424b77:	adc    bh,BYTE PTR [ebx-0x5898a783]
  424b7d:	leave  
  424b7e:	mov    eax,ds:0x8b5bccd0
  424b83:	jb     0x424bd3
  424b85:	mov    eax,ds:0x5ea52aed
  424b8a:	add    eax,0x88712caf
  424b8f:	lods   eax,DWORD PTR ds:[esi]
  424b90:	fsub   QWORD PTR [esi+edx*4-0x4da3bef]
  424b97:	adc    ecx,DWORD PTR [ebx+edi*1]
  424b9a:	bound  eax,QWORD PTR [edi+0x47]
  424b9d:	mov    ds:0x6a53a22,al
  424ba2:	popf   
  424ba3:	adc    bl,BYTE PTR [eax-0x21bc36c7]
  424ba9:	je     0x424bf9
  424bab:	les    ebp,FWORD PTR [ebx-0x44f18e14]
  424bb1:	nop
  424bb2:	leave  
  424bb3:	push   cs
  424bb4:	mov    DWORD PTR [ebx],edi
  424bb6:	sbb    eax,0xf1a5004d
  424bbb:	sar    BYTE PTR [edi-0x1fd2d5b3],cl
  424bc1:	pop    edi
  424bc2:	sbb    al,0xc5
  424bc4:	stos   BYTE PTR es:[edi],al
  424bc5:	dec    ebx
  424bc6:	xchg   BYTE PTR [eax-0x36],al
  424bc9:	popa   
  424bca:	sbb    al,0xbb
  424bcc:	sti    
  424bcd:	retf   0xd6c
  424bd0:	add    BYTE PTR [edi-0x40e1652],dl
  424bd6:	pop    ds
  424bd7:	bound  esp,QWORD PTR [edi+edx*1+0x5b83cd77]
  424bde:	pusha  
  424bdf:	xchg   ecx,eax
  424be0:	std    
  424be1:	call   0x918067de
  424be6:	iret   
  424be7:	test   cl,0xa
  424bea:	pop    esi
  424beb:	sub    eax,0x18e23282
  424bf0:	push   esp
  424bf1:	xchg   ecx,eax
  424bf2:	xchg   edi,eax
  424bf3:	int3   
  424bf4:	mov    BYTE PTR [ebx],0xf7
  424bf7:	jecxz  0x424c5f
  424bf9:	aaa    
  424bfa:	or     edx,0xa5ecb6b5
  424c00:	sbb    eax,DWORD PTR [eax]
  424c02:	out    0xc3,eax
  424c04:	cmp    al,0xf
  424c06:	push   0xfffffff0
  424c08:	scas   al,BYTE PTR es:[edi]
  424c09:	sbb    bh,al
  424c0b:	mov    dl,0x67
  424c0d:	pfrsqit1 mm6,mm3
  424c11:	jle    0x424be6
  424c13:	div    edx
  424c15:	jge    0x424bc0
  424c17:	test   al,0x82
  424c19:	cmc    
  424c1a:	dec    ecx
  424c1b:	sbb    ebp,ebp
  424c1d:	lahf   
  424c1e:	or     eax,0x6fa5490a
  424c23:	mov    DWORD PTR [ebx+0x5e],edx
  424c26:	mov    bl,0xfe
  424c28:	mov    eax,0xf6a279b5
  424c2d:	pop    ebx
  424c2e:	bound  ebp,QWORD PTR [eax]
  424c30:	pop    ss
  424c31:	out    dx,eax
  424c32:	add    DWORD PTR [edi+0x69768d4d],ebp
  424c38:	pop    ebx
  424c39:	and    ch,BYTE PTR [ebp+edi*2-0x21c3706f]
  424c40:	cmp    eax,0x78b7c1ae
  424c45:	adc    al,0xf2
  424c47:	pop    ds
  424c48:	ja     0x424be1
  424c4a:	push   esp
  424c4b:	mov    cl,0x99
  424c4d:	in     eax,dx
  424c4e:	loope  0x424c17
  424c50:	data16 outs dx,BYTE PTR ds:[esi]
  424c52:	addr16 jnp 0x424c86
  424c55:	dec    ebx
  424c56:	mov    cl,0x8
  424c58:	dec    ecx
  424c59:	(bad)  
  424c5a:	stc    
  424c5b:	xchg   ebp,eax
  424c5c:	push   ebp
  424c5d:	shl    DWORD PTR [eax+0x56ae7ec8],0x19
  424c64:	daa    
  424c65:	mov    esi,eax
  424c67:	sub    esi,DWORD PTR [esi+0x3de950ba]
  424c6d:	mov    cl,0xa6
  424c6f:	test   eax,0xf794f1dc
  424c74:	dec    edx
  424c75:	cmc    
  424c76:	sbb    ch,BYTE PTR [ebx+0x16]
  424c79:	idiv   BYTE PTR [edi+edi*8+0x7d]
  424c7d:	dec    esi
  424c7e:	jmp    0xc06fc4c8
  424c83:	push   ss
  424c84:	call   0xb50e:0x7461c087
  424c8b:	adc    BYTE PTR [edx+0x7eef2c0e],bl
  424c91:	(bad)  
  424c93:	jmp    0x136d:0xde7b637f
  424c9a:	mov    ds:0xa3a6e181,al
  424c9f:	out    0x72,eax
  424ca1:	clc    
  424ca2:	test   BYTE PTR [edi],0x38
  424ca5:	and    DWORD PTR [edi+0x7b],esp
  424ca8:	mov    dl,0x7a
  424caa:	xchg   ebx,eax
  424cab:	leave  
  424cac:	pop    eax
  424cad:	and    DWORD PTR [edi+0x7f8b33dd],edi
  424cb3:	and    DWORD PTR [eax],0x184bca0d
  424cb9:	push   ebp
  424cba:	adc    eax,0x4ffbddb4
  424cbf:	xlat   BYTE PTR ds:[ebx]
  424cc0:	mov    eax,ds:0xc3766c78
  424cc5:	icebp  
  424cc6:	js     0x424c6b
  424cc8:	imul   eax,DWORD PTR [eax-0x6f],0x9ab8c369
  424ccf:	push   0xffffffd4
  424cd1:	int    0x1c
  424cd3:	(bad)  
  424cd4:	ret    0x3ecb
  424cd7:	mov    al,ds:0x9fc2b38c
  424cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cdd:	lods   al,BYTE PTR ds:[esi]
  424cde:	repnz fisttp WORD PTR [edx+0x593eb64]
  424ce5:	and    cl,cl
  424ce7:	cmp    al,0xa9
  424ce9:	jecxz  0x424c70
  424ceb:	(bad)  
  424cec:	loopne 0x424c81
  424cee:	and    BYTE PTR [edx],ah
  424cf0:	push   ebx
  424cf1:	mov    al,0x5a
  424cf3:	inc    ebp
  424cf4:	stos   DWORD PTR es:[edi],eax
  424cf5:	fucomp st(3)
  424cf7:	fldenv [esi+0x54]
  424cfa:	or     esi,DWORD PTR [ebx-0x5d704634]
  424d00:	pop    es
  424d01:	push   eax
  424d02:	into   
  424d03:	xor    DWORD PTR [edx],ecx
  424d05:	dec    ebp
  424d06:	mov    ds:0x881acb1b,eax
  424d0b:	test   DWORD PTR [eax-0x31],edx
  424d0e:	xor    DWORD PTR [ecx+ebx*4+0x2],0xfffffff1
  424d13:	aaa    
  424d14:	outs   dx,BYTE PTR ds:[esi]
  424d15:	push   ecx
  424d16:	and    ebx,DWORD PTR [edx+0x1d]
  424d19:	rcl    BYTE PTR [ebp+0x79590d6c],0x65
  424d20:	fcom   QWORD PTR [ebx-0x66]
  424d23:	leave  
  424d24:	retf   0x11f5
  424d27:	mov    al,0xa3
  424d29:	jp     0x424d95
  424d2b:	cmp    DWORD PTR [eax-0x29888de9],ebx
  424d31:	mul    eax
  424d33:	inc    edi
  424d34:	mov    esi,0xedfe1cdb
  424d39:	and    ebx,DWORD PTR [eax+ebp*4-0x18]
  424d3d:	in     eax,0xe2
  424d3f:	rcr    ebx,cl
  424d41:	adc    edx,ebx
  424d43:	into   
  424d44:	pop    ebp
  424d45:	fstp   DWORD PTR [ebx+esi*4+0x3fcc7d17]
  424d4c:	cmp    al,0x5b
  424d4e:	pop    ebx
  424d4f:	dec    cl
  424d51:	mov    WORD PTR [esi],?
  424d53:	ja     0x424d37
  424d55:	push   edi
  424d56:	retf   
  424d57:	ins    BYTE PTR es:[edi],dx
  424d58:	(bad)  
  424d59:	sub    BYTE PTR [esi-0x5],bl
  424d5c:	and    BYTE PTR [edi-0x4e8ff180],al
  424d62:	xchg   esi,eax
  424d63:	call   0x98f045
  424d68:	cli    
  424d69:	nop
  424d6a:	std    
  424d6b:	push   0xe20c8536
  424d70:	inc    esi
  424d71:	add    eax,0x50b8277f
  424d76:	cli    
  424d77:	cmc    
  424d78:	addr16 xchg ecx,eax
  424d7a:	pop    eax
  424d7b:	sahf   
  424d7c:	xor    ch,ah
  424d7e:	rcl    BYTE PTR [esi-0x70],cl
  424d81:	test   al,0x78
  424d83:	mov    al,dl
  424d85:	dec    eax
  424d86:	ds int 0xd2
  424d89:	inc    esi
  424d8a:	int    0x58
  424d8c:	cmc    
  424d8d:	add    eax,0xf9d7bae8
  424d92:	add    edx,DWORD PTR [esi-0x68]
  424d95:	pop    ebp
  424d96:	xlat   BYTE PTR ds:[ebx]
  424d97:	mov    bh,0x80
  424d99:	mov    DWORD PTR [ebp+0x55a70d08],eax
  424d9f:	arpl   WORD PTR ds:0x14b3db,bx
  424da5:	mov    cl,0x81
  424da7:	or     dl,BYTE PTR [ebp+esi*8-0x20718555]
  424dae:	rol    DWORD PTR [edx+0x15],0x28
  424db2:	xor    BYTE PTR [edx],ah
  424db4:	xor    DWORD PTR [ebx-0x6e1f0c26],ebx
  424dba:	pop    ds
  424dbb:	fwait
  424dbc:	push   ds
  424dbd:	(bad)  
  424dbe:	cld    
  424dbf:	jae    0x424d75
  424dc1:	and    BYTE PTR [edi+0x3b],ch
  424dc4:	add    BYTE PTR [edi],0x79
  424dc7:	icebp  
  424dc8:	xchg   BYTE PTR [esi+eax*8],ah
  424dcb:	sub    DWORD PTR [eax-0x1fcc488],0xfffffff8
  424dd2:	and    BYTE PTR [edi-0x7d],ch
  424dd5:	mov    ds:0xaf4240d,al
  424dda:	ret    
  424ddb:	xchg   edi,eax
  424ddc:	cli    
  424ddd:	inc    ebx
  424dde:	push   ebx
  424ddf:	test   al,0xba
  424de1:	sbb    eax,0x3d94d538
  424de6:	ds pop esp
  424de8:	mov    cs,edx
  424dea:	imul   edi,edi,0x6d586b6
  424df0:	aaa    
  424df1:	and    dl,ah
  424df3:	jo     0x424dcf
  424df5:	and    cl,BYTE PTR [ebp+0x1683677]
  424dfb:	cld    
  424dfc:	fild   QWORD PTR [edx]
  424dfe:	xchg   esp,eax
  424dff:	test   DWORD PTR [edx-0x7eb78d33],esp
  424e05:	cdq    
  424e06:	in     al,0x27
  424e08:	mov    ds:0x6b259a14,al
  424e0d:	cdq    
  424e0e:	icebp  
  424e0f:	mov    dh,0xea
  424e11:	xor    al,0x7b
  424e13:	xchg   esi,eax
  424e14:	arpl   WORD PTR [esi+0x63],sp
  424e17:	dec    ecx
  424e18:	(bad)  
  424e19:	std    
  424e1a:	je     0x424e3b
  424e1c:	(bad)  
  424e1d:	repz (bad)
  424e20:	add    dl,BYTE PTR [esp+edx*2+0xb]
  424e24:	or     al,0xec
  424e26:	gs inc ecx
  424e28:	jle    0x424e87
  424e2a:	jg     0x424e88
  424e2c:	in     al,dx
  424e2d:	jb     0x424dff
  424e2f:	mov    edx,0xc59bedf6
  424e34:	inc    ebx
  424e35:	pop    ecx
  424e36:	je     0x424e41
  424e38:	(bad)  
  424e3a:	test   DWORD PTR ds:0x829c,esp
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ebx,DWORD PTR [ebx+0x2d8dc4f4]
  424e53:	mov    DWORD PTR [ecx],0x4f400
  424e59:	add    dl,ch
  424e5b:	xchg   edx,eax
  424e5c:	and    BYTE PTR [ecx-0x60],bl
  424e5f:	xor    BYTE PTR [eax],0xe6
  424e62:	aam    0x1d
  424e64:	or     BYTE PTR [ebx],al
  424e66:	fwait
  424e67:	mov    edx,0x65290563
  424e6c:	clc    
  424e6d:	and    eax,0x84fa6d45
  424e72:	and    al,0x82
  424e74:	cli    
  424e75:	jmp    0x41aa:0x3b231732
  424e7c:	jmp    0x424e9f
  424e7e:	out    dx,eax
  424e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e80:	xor    DWORD PTR [edx+0x78],0x9f6acee3
  424e87:	loop   0x424e38
  424e89:	push   edx
  424e8a:	les    bp,DWORD PTR [ebp+ebx*1-0x57cd1c37]
  424e92:	mov    bh,0x6f
  424e94:	push   ebx
  424e95:	adc    DWORD PTR [eax-0x16],ecx
  424e98:	jle    0x424eb5
  424e9a:	push   ecx
  424e9b:	aad    0x94
  424e9d:	cmp    al,0xa7
  424e9f:	inc    eax
  424ea0:	cmp    al,0x6d
  424ea2:	fadd   DWORD PTR [edi+0x2f644241]
  424ea8:	sub    BYTE PTR [edx-0x2d06050b],dh
  424eae:	sub    al,0x2c
  424eb0:	mov    ds:0xc092f423,eax
  424eb5:	pop    edi
  424eb6:	iret   
  424eb7:	inc    DWORD PTR [esi+0x68a5cbe]
  424ebd:	sub    edi,ebp
  424ebf:	xor    bh,dl
  424ec1:	mov    WORD PTR [esi-0x4d],cs
  424ec4:	push   esp
  424ec5:	pop    es
  424ec6:	or     ecx,esp
  424ec8:	hlt    
  424ec9:	push   esi
  424eca:	(bad)  
  424ecb:	fisub  WORD PTR [edi+0x7fa8a1cc]
  424ed1:	test   eax,0x9923c8a7
  424ed6:	bound  edx,QWORD PTR [edi-0x56b78b40]
  424edc:	and    eax,0xd8c36a8
  424ee1:	out    0x24,al
  424ee3:	push   ds
  424ee4:	fnstenv [eax-0x59]
  424ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ee8:	inc    esp
  424ee9:	outs   dx,BYTE PTR ds:[esi]
  424eea:	jae    0x424f69
  424eec:	rol    BYTE PTR [ecx],0xcb
  424eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ef0:	rol    esi,1
  424ef2:	clc    
  424ef3:	(bad)  
  424ef5:	inc    esi
  424ef6:	mov    al,0x53
  424ef8:	cwde   
  424ef9:	push   edx
  424efa:	xchg   BYTE PTR [esi+0x2294b463],al
  424f00:	loop   0x424efa
  424f02:	sahf   
  424f03:	pop    esi
  424f04:	mov    al,ds:0x189d6ac
  424f09:	dec    esp
  424f0a:	aas    
  424f0b:	add    dl,bl
  424f0d:	push   eax
  424f0e:	je     0x424f7c
  424f10:	push   es
  424f11:	out    0xa3,al
  424f13:	outs   dx,DWORD PTR ds:[esi]
  424f14:	pop    edx
  424f15:	aas    
  424f16:	imul   DWORD PTR [ebx-0x5895dcb8]
  424f1c:	xor    cl,BYTE PTR [ebx]
  424f1e:	pop    ebp
  424f1f:	gs je  0x424fa0
  424f22:	or     eax,0x34aa563d
  424f27:	push   ebp
  424f28:	call   0xe20bdb59
  424f2d:	scas   al,BYTE PTR es:[edi]
  424f2e:	mov    al,ds:0xd8709906
  424f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f34:	mov    ch,0x6b
  424f36:	sub    BYTE PTR [edx+edi*2-0x7d92987c],0x3
  424f3e:	ret    
  424f3f:	inc    ecx
  424f40:	mov    WORD PTR [ebp-0x25],fs
  424f43:	repnz popa 
  424f45:	push   0x52
  424f47:	xor    DWORD PTR [esp+esi*2],0x24761c6b
  424f4e:	mov    ah,0x68
  424f50:	pop    esp
  424f51:	mov    ebp,0x5a816c40
  424f56:	xchg   edi,eax
  424f57:	rcr    BYTE PTR [edx],0x87
  424f5a:	pop    ecx
  424f5b:	push   0x25
  424f5d:	ins    BYTE PTR es:[edi],dx
  424f5e:	das    
  424f5f:	sbb    eax,0x82df175a
  424f64:	cmp    DWORD PTR [ebx-0x7dbe043d],0x2f
  424f6b:	adc    al,0x15
  424f6d:	cld    
  424f6e:	sub    ebp,eax
  424f70:	test   eax,0xfd02be10
  424f75:	xchg   BYTE PTR [edi-0x3c],dl
  424f78:	dec    edi
  424f79:	cmp    eax,0x22db30c7
  424f7e:	test   BYTE PTR [edi-0x5439f1f1],bh
  424f84:	shl    BYTE PTR [eax+0x4115ed18],0x77
  424f8b:	(bad)  
  424f8c:	mov    eax,0xc8830183
  424f91:	sub    BYTE PTR [edx],0x1a
  424f94:	sbb    eax,0x47929f76
  424f99:	ror    BYTE PTR ds:0x49cd6e62,cl
  424f9f:	mov    bh,0xbe
  424fa1:	adc    BYTE PTR [ebx+0x53df7d57],al
  424fa7:	pushf  
  424fa8:	pop    ss
  424fa9:	lods   eax,DWORD PTR ds:[esi]
  424faa:	fistp  QWORD PTR [edi+0x406ccdc9]
  424fb0:	sahf   
  424fb1:	scas   eax,DWORD PTR es:[edi]
  424fb2:	sub    al,0x9a
  424fb4:	jp     0x424f79
  424fb6:	sbb    cl,BYTE PTR [ebx-0x2c]
  424fb9:	nop
  424fba:	enter  0xe384,0x51
  424fbe:	add    bl,ah
  424fc0:	xor    BYTE PTR [ecx-0x78],dl
  424fc3:	sub    al,0x82
  424fc5:	inc    eax
  424fc6:	mov    ecx,0x18de15c0
  424fcb:	(bad)  
  424fce:	jp     0x424f84
  424fd0:	shl    BYTE PTR [ebx-0x71],1
  424fd3:	push   cs
  424fd4:	mov    ecx,esp
  424fd6:	pop    ebp
  424fd7:	stos   DWORD PTR es:[edi],eax
  424fd8:	cmp    eax,0xa4ff39e6
  424fdd:	stos   DWORD PTR es:[edi],eax
  424fde:	mov    ch,0x90
  424fe0:	retf   
  424fe1:	ds mov cl,0x6a
  424fe4:	outs   dx,BYTE PTR ds:[esi]
  424fe5:	or     BYTE PTR [ebx],bh
  424fe7:	pusha  
  424fe8:	jnp    0x424ff3
  424fea:	shl    DWORD PTR [ecx+ebx*8+0x316fda28],0x7b
  424ff2:	ds mov dh,0x72
  424ff5:	add    ebp,edx
  424ff7:	fstp   DWORD PTR [ecx]
  424ff9:	cmp    ebp,eax
  424ffb:	ret    
  424ffc:	push   ebp
  424ffd:	add    al,0x77
  424fff:	mov    ds:0xfa5754a9,eax
  425004:	sbb    esp,ebx
  425006:	call   0x300308ae
  42500b:	push   esp
  42500c:	fsubr  QWORD PTR [esi+0x42722d5c]
  425012:	add    bl,BYTE PTR [edi]
  425014:	mov    eax,ds:0x3f7c8f18
  425019:	add    ch,al
  42501b:	mov    ds:0xe8c2803c,eax
  425020:	inc    ecx
  425021:	icebp  
  425022:	push   esp
  425023:	loopne 0x42504c
  425025:	and    eax,DWORD PTR [edi-0x1f]
  425028:	adc    eax,0xb2aa7eee
  42502d:	mov    edx,0xc5301b1e
  425032:	inc    ecx
  425033:	or     eax,0x7c81b4c4
  425038:	push   ds
  425039:	aam    0x86
  42503b:	xor    BYTE PTR [edx+eiz*1-0x40],0x44
  425040:	pop    edx
  425041:	sar    BYTE PTR [eax-0x2f282406],1
  425047:	mov    ebx,DWORD PTR [esi+0x7f520f07]
  42504d:	push   edi
  42504e:	mov    dh,0xe6
  425050:	in     eax,dx
  425051:	dec    esi
  425052:	into   
  425053:	sub    ch,bh
  425055:	loop   0x425070
  425057:	ds in  eax,dx
  425059:	jbe    0x4250b9
  42505b:	pop    edi
  42505c:	pop    ecx
  42505d:	rcr    BYTE PTR [edi+0x46e1a888],0x99
  425064:	push   es
  425065:	adc    esp,DWORD PTR [edx]
  425067:	pop    edx
  425068:	je     0x42508f
  42506a:	mov    ds:0x81a1847d,eax
  42506f:	cli    
  425070:	xlat   BYTE PTR ds:[ebx]
  425071:	fild   QWORD PTR [ecx-0x6a3fbc75]
  425077:	daa    
  425078:	call   DWORD PTR [ecx+0x5709e661]
  42507e:	dec    edi
  42507f:	xchg   al,al
  425081:	sub    bl,BYTE PTR [esi+ebx*4+0x1c]
  425085:	sbb    BYTE PTR [edi+ebp*8+0x67],ch
  425089:	fdivr  QWORD PTR [esi+0x6]
  42508c:	pop    es
  42508d:	je     0x42502d
  42508f:	or     eax,0xe3320873
  425094:	fwait
  425095:	pop    ebx
  425096:	cmp    al,0xa0
  425098:	adc    ecx,ebx
  42509a:	mov    ebx,DWORD PTR [esi]
  42509c:	loopne 0x425107
  42509e:	cli    
  42509f:	ret    0x7aba
  4250a2:	cli    
  4250a3:	mov    bl,0xf0
  4250a5:	out    0x80,al
  4250a7:	jge    0x425108
  4250a9:	adc    al,0x4b
  4250ab:	repnz sbb dl,0x25
  4250af:	sbb    edx,0x212560ec
  4250b5:	lahf   
  4250b6:	sub    edx,DWORD PTR [ecx-0x6d]
  4250b9:	cli    
  4250ba:	add    dl,bl
  4250bc:	aad    0x2f
  4250be:	aaa    
  4250bf:	out    0xf1,eax
  4250c1:	rcl    ecx,1
  4250c3:	in     eax,0x6e
  4250c5:	or     ah,dh
  4250c7:	jecxz  0x4250ff
  4250c9:	loopne 0x425105
  4250cb:	cmp    al,0xc7
  4250cd:	dec    esp
  4250ce:	aaa    
  4250cf:	das    
  4250d0:	repz pop DWORD PTR [esi+ebp*1+0x4a]
  4250d5:	inc    ecx
  4250d6:	mov    ch,0x9d
  4250d8:	call   0xc38b:0x30e74553
  4250df:	fild   QWORD PTR [edi+esi*4]
  4250e2:	mov    esp,0xfccdc5bc
  4250e7:	xor    al,BYTE PTR [ecx-0x5b694e65]
  4250ed:	loope  0x4250ef
  4250ef:	pop    ebx
  4250f0:	mov    WORD PTR [ecx],cs
  4250f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250f3:	sbb    DWORD PTR [esi+0x34319783],ebx
  4250f9:	icebp  
  4250fa:	jns    0x425096
  4250fc:	mov    ebp,0xe27e42d3
  425101:	jl     0x4250b8
  425103:	sbb    al,0xa7
  425105:	and    BYTE PTR [ebx-0x7b],dl
  425108:	adc    al,0x3
  42510a:	xor    bh,BYTE PTR [eax+0x4ca14510]
  425110:	jbe    0x425184
  425112:	push   esp
  425113:	push   esp
  425114:	xchg   BYTE PTR [edi],dh
  425116:	retf   0xdd16
  425119:	fistp  DWORD PTR [edi-0x3904bd1e]
  42511f:	das    
  425120:	fbstp  TBYTE PTR [esi+0x68]
  425123:	shr    BYTE PTR [edx-0x28],0x8b
  425127:	ins    DWORD PTR es:[edi],dx
  425128:	push   esp
  425129:	inc    eax
  42512b:	popf   
  42512c:	popf   
  42512d:	jno    0x425146
  42512f:	jle    0x425115
  425131:	xchg   esi,eax
  425132:	pop    eax
  425133:	dec    ebx
  425134:	je     0x425131
  425136:	push   ds
  425137:	out    0x3b,eax
  425139:	mov    ebp,DWORD PTR [edi*8+0x4eab29c8]
  425140:	pop    ss
  425141:	mov    edi,0x98a8ab26
  425146:	cmovne ebp,DWORD PTR [ebx-0x78347b0e]
  42514d:	loope  0x425112
  42514f:	push   edi
  425150:	aaa    
  425151:	popf   
  425152:	(bad)  
  425153:	aam    0xeb
  425155:	mul    cl
  425157:	in     al,0x55
  425159:	cwde   
  42515a:	std    
  42515b:	(bad)  
  42515c:	mov    al,0xac
  42515e:	mov    BYTE PTR [eax+0x1c],bl
  425161:	jecxz  0x425110
  425163:	(bad)  
  425164:	mov    ebx,0x80f33207
  425169:	retf   
  42516a:	call   0x7d194a
  42516f:	mov    ds:0xc8d3b352,al
  425174:	jne    0x4251a5
  425176:	inc    eax
  425177:	pusha  
  425178:	add    ecx,ecx
  42517a:	rcl    al,1
  42517c:	out    0x89,eax
  42517e:	mov    cl,0x1e
  425180:	jmp    0x42513c
  425182:	(bad)  
  425183:	repz jecxz 0x425172
  425186:	dec    ebx
  425187:	repz pop ds
  425189:	add    al,0x1b
  42518b:	(bad)  
  42518c:	iret   
  42518d:	push   cs
  42518e:	in     eax,dx
  42518f:	jp     0x4251f7
  425191:	leave  
  425192:	enter  0xa17a,0x1e
  425196:	pusha  
  425197:	js     0x425189
  425199:	jecxz  0x42516e
  42519b:	int3   
  42519c:	and    eax,0xb25f2c51
  4251a1:	add    DWORD PTR [ecx+0x7a],ebp
  4251a4:	mov    eax,ds:0x8026329e
  4251a9:	adc    eax,0xa2b31a53
  4251ae:	sub    al,0x64
  4251b0:	test   eax,ecx
  4251b2:	cdq    
  4251b3:	xor    al,0xee
  4251b5:	int3   
  4251b6:	(bad)  [esi]
  4251b8:	mov    dh,0x6c
  4251ba:	pop    ebx
  4251bb:	fisttp WORD PTR [ebx-0x3c]
  4251be:	inc    ebp
  4251bf:	xchg   esp,eax
  4251c0:	mov    ah,0x9
  4251c2:	cmp    eax,0xfce2815
  4251c7:	xor    DWORD PTR [edi+0x3b51cb61],esp
  4251cd:	add    eax,0x20c71e79
  4251d2:	and    bl,BYTE PTR [eax]
  4251d4:	add    eax,0xf663b7af
  4251d9:	scas   al,BYTE PTR es:[edi]
  4251da:	inc    edx
  4251db:	mov    dh,0x1b
  4251dd:	push   esp
  4251de:	xchg   ebx,ebx
  4251e0:	add    DWORD PTR ds:[ebx],esp
  4251e3:	mov    ds:0x27a6e25,eax
  4251e8:	cmp    eax,0xd987222e
  4251ed:	xor    BYTE PTR [esi+0x12cd3ecb],dh
  4251f3:	cli    
  4251f4:	jl     0x425266
  4251f6:	and    eax,0x66eb9154
  4251fb:	xor    al,0x16
  4251fd:	das    
  4251fe:	(bad)  
  4251ff:	fcomp  DWORD PTR [ecx-0x3992d76e]
  425205:	ss lahf 
  425207:	mov    ch,0x50
  425209:	popa   
  42520a:	in     al,dx
  42520b:	adc    ah,BYTE PTR [ebx-0x4d0c4a73]
  425211:	pop    ecx
  425212:	fwait
  425213:	adc    BYTE PTR [esi],dh
  425215:	push   cs
  425216:	das    
  425217:	push   ss
  425218:	fstp   QWORD PTR [edi+edi*2+0x73cd4708]
  42521f:	gs imul esp
  425222:	arpl   bx,dx
  425224:	int3   
  425225:	test   dh,al
  425227:	popf   
  425228:	sbb    edx,edx
  42522a:	icebp  
  42522b:	into   
  42522c:	sub    BYTE PTR [esi-0x683e3141],dl
  425232:	fild   DWORD PTR [edi]
  425234:	int    0xe2
  425236:	pop    ebx
  425237:	in     al,0xd4
  425239:	in     al,dx
  42523a:	loopne 0x4251cf
  42523c:	pop    edi
  42523d:	scas   eax,DWORD PTR es:[edi]
  42523e:	push   0x68
  425240:	es out dx,al
  425242:	mov    cl,0xbe
  425244:	nop    DWORD PTR [ebp+eax*2+0x5cb3ca8c]
  42524c:	or     eax,0x77fb5ae7
  425251:	push   es
  425252:	popf   
  425253:	and    eax,0xfe79d13d
  425258:	mov    ebp,0x32bd74af
  42525d:	mov    edx,0x5363cbbf
  425262:	cmp    ecx,esi
  425264:	adc    eax,0xe5d17fa7
  425269:	(bad)  
  42526a:	mov    ds:0xc74ab027,al
  42526f:	es cmp edi,esp
  425272:	fild   WORD PTR [ecx-0x23360d33]
  425278:	clc    
  425279:	add    BYTE PTR ds:0xdab3b93c,bl
  42527f:	cmp    bl,BYTE PTR [ebx-0x35a79d79]
  425285:	stos   DWORD PTR es:[edi],eax
  425286:	fcmovb st,st(5)
  425288:	pushf  
  425289:	(bad)  
  42528a:	(bad)  
  42528b:	mov    ebx,0x49649a15
  425290:	(bad)  
  425291:	js     0x4252dd
  425293:	mov    ebx,0xbc70dd60
  425298:	cdq    
  425299:	shl    DWORD PTR [edi+0x5df52873],1
  42529f:	cmp    DWORD PTR [edx-0x57ec7804],0xffffffb1
  4252a6:	test   DWORD PTR ss:[edx-0x8],edi
  4252aa:	xchg   ebx,eax
  4252ab:	or     dh,bl
  4252ad:	lods   eax,DWORD PTR ds:[esi]
  4252ae:	mov    ebp,0x7d1255ec
  4252b3:	jno    0x42525a
  4252b5:	fld    TBYTE PTR [ebp+0x1df9e6d0]
  4252bb:	fadd   QWORD PTR [esi]
  4252bd:	and    DWORD PTR ds:0x49ba72b9,0x36
  4252c4:	data16 stos BYTE PTR es:[edi],al
  4252c6:	repnz fsubrp st(0),st
  4252c9:	jmp    0x17a4d685
  4252ce:	sbb    DWORD PTR [eax-0x44],0x3a
  4252d2:	cmp    eax,0xd898bcef
  4252d7:	add    esi,DWORD PTR [esi]
  4252d9:	mov    WORD PTR [edi+edi*1],es
  4252dc:	mov    bl,0xcd
  4252de:	imul   esi,DWORD PTR [ebp-0x3],0xbd84671
  4252e5:	cmp    DWORD PTR [edx],eax
  4252e7:	jnp    0x4252c8
  4252e9:	fcom   DWORD PTR [eax-0x717a921]
  4252ef:	shr    DWORD PTR cs:[esi+ebp*8],0xc9
  4252f4:	and    DWORD PTR [esi-0x2d609425],esi
  4252fa:	fidivr WORD PTR [esi+0x535b8aea]
  425300:	xor    BYTE PTR [esi+0x75507f9a],0x9f
  425307:	xor    ah,BYTE PTR [edx-0x1f7b5267]
  42530d:	jge    0x4252f3
  42530f:	mov    edx,0x8556571a
  425314:	sahf   
  425315:	bound  esi,QWORD PTR [ebp-0x1c]
  425318:	test   DWORD PTR [eax],eax
  42531a:	daa    
  42531b:	pop    esp
  42531c:	imul   edi,DWORD PTR [ecx-0x18d489ac],0x58021067
  425326:	in     al,dx
  425327:	jl     0x425371
  425329:	jbe    0x42531e
  42532b:	add    dl,bh
  42532d:	jle    0x425355
  42532f:	xor    eax,0x89610e22
  425334:	lods   eax,DWORD PTR es:[esi]
  425336:	jae    0x425327
  425338:	ins    BYTE PTR es:[edi],dx
  425339:	add    eax,0x2ed76c92
  42533e:	cmp    bh,BYTE PTR [eax+0x28]
  425341:	stos   BYTE PTR es:[edi],al
  425342:	fisttp WORD PTR [ebx]
  425344:	adc    ch,BYTE PTR [edi-0x50]
  425347:	and    al,0xeb
  425349:	adc    al,0x9d
  42534b:	sti    
  42534c:	rol    BYTE PTR [eax+eax*1],1
  42534f:	add    BYTE PTR [eax],al
  425351:	add    BYTE PTR [ebx-0x11909fab],bl
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	mov    WORD PTR [eax-0x33defa39],es
  425364:	add    DWORD PTR [eax],eax
  425366:	hlt    
  425367:	add    al,0x0
  425369:	add    ch,bh
  42536b:	mov    esp,0xdc089150
  425370:	mov    ds:0xe7f96d83,eax
  425375:	or     esi,0x17
  425378:	aam    0x7e
  42537a:	enter  0xf4a8,0x97
  42537e:	sbb    dl,bl
  425380:	sub    eax,0x5c44520d
  425385:	rcl    DWORD PTR [ecx],0x60
  425388:	iret   
  425389:	jmp    0x5256ef82
  42538e:	sub    DWORD PTR [edi+0x327c2b00],ebp
  425394:	pop    edx
  425395:	fmul   DWORD PTR [eax-0x44cbe8b]
  42539b:	inc    esi
  42539c:	push   0x35d4be53
  4253a1:	adc    eax,DWORD PTR [eax+0x6a05230b]
  4253a7:	dec    ecx
  4253a8:	ret    0xb24a
  4253ab:	mov    DWORD PTR [eax],esi
  4253ad:	ins    BYTE PTR es:[edi],dx
  4253ae:	jno    0x4253e6
  4253b0:	push   esi
  4253b1:	shr    edx,1
  4253b3:	inc    esi
  4253b4:	add    al,0x18
  4253b6:	lahf   
  4253b7:	xchg   esi,eax
  4253b8:	ror    BYTE PTR [ebx+0x4b],cl
  4253bb:	sbb    eax,0x852eab0a
  4253c0:	push   ecx
  4253c1:	jmp    0x17b9:0x1d84169
  4253c8:	jecxz  0x4253b4
  4253ca:	pop    edi
  4253cb:	sbb    dl,BYTE PTR [ecx+0x44033917]
  4253d1:	sub    BYTE PTR [esi-0x53],bh
  4253d4:	pop    edi
  4253d5:	adc    al,0xc3
  4253d7:	daa    
  4253d8:	loope  0x425396
  4253da:	cwde   
  4253db:	shr    dh,1
  4253dd:	push   ds
  4253de:	fisttp QWORD PTR [esi]
  4253e0:	aad    0xc8
  4253e2:	mov    ah,0xab
  4253e4:	into   
  4253e5:	fxch   st(3)
  4253e7:	and    al,0xeb
  4253e9:	xchg   edi,eax
  4253ea:	and    edx,DWORD PTR [edx+0xfeca310]
  4253f0:	(bad)  [eax]
  4253f2:	pushf  
  4253f3:	and    al,0x29
  4253f5:	mov    esi,0xe60c69c8
  4253fa:	push   esp
  4253fb:	sbb    DWORD PTR [ecx],ebp
  4253fd:	xchg   esp,eax
  4253fe:	sbb    DWORD PTR [ebp+0x5f59c517],edx
  425404:	outs   dx,BYTE PTR ds:[esi]
  425405:	call   0x8e35:0x9ad904e5
  42540c:	cdq    
  42540d:	push   cs
  42540e:	push   0x22bfa343
  425413:	ret    0xd2d3
  425416:	(bad)  
  425417:	sbb    BYTE PTR [edi],cl
  425419:	cmp    BYTE PTR ds:0x259778b7,dh
  42541f:	fs cs repnz aad 0x72
  425424:	out    0xdf,al
  425426:	popa   
  425427:	test   DWORD PTR [eax],ecx
  425429:	adc    ebx,DWORD PTR [esi-0x19]
  42542c:	sbb    BYTE PTR [edx-0x7c],0x32
  425430:	adc    esp,DWORD PTR ds:0x92bf47f9
  425436:	fsub   DWORD PTR [ecx]
  425438:	mov    al,0xbf
  42543a:	xchg   esp,eax
  42543b:	popa   
  42543c:	mov    ds:0x96eddb10,eax
  425441:	daa    
  425442:	push   0x42ca31e4
  425447:	aaa    
  425448:	and    BYTE PTR [edx-0x456fc8c2],bl
  42544e:	pop    es
  42544f:	xlat   BYTE PTR ds:[ebx]
  425450:	pop    ds
  425451:	mov    ah,0xd5
  425453:	loope  0x4254b4
  425455:	or     eax,0xcfbd0d04
  42545a:	cmp    DWORD PTR [ebx+eiz*4],0x46b99505
  425461:	ja     0x425414
  425463:	(bad)  
  425464:	mov    al,0x62
  425466:	pushf  
  425467:	xchg   edi,ebp
  425469:	xchg   esp,eax
  42546a:	sub    al,0xec
  42546c:	mov    eax,ds:0xa75f30ca
  425471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425472:	in     eax,0x93
  425474:	sar    BYTE PTR [edi+0x15],0xe2
  425478:	adc    eax,DWORD PTR [edi+0x1f34ff8d]
  42547e:	sbb    edi,edi
  425480:	inc    esp
  425481:	int    0x40
  425483:	xor    BYTE PTR [edi-0x7f],0xed
  425487:	mov    bh,BYTE PTR [eax-0x6e7695cb]
  42548d:	sahf   
  42548e:	mov    al,0xf0
  425491:	aam    0xf5
  425493:	dec    esp
  425494:	test   DWORD PTR [esp+ecx*2+0x5b],ebp
  425498:	repz jae 0x4254f1
  42549b:	push   cs
  42549c:	dec    edi
  42549d:	retf   0x1497
  4254a0:	dec    edi
  4254a1:	mov    al,0x31
  4254a3:	ins    DWORD PTR es:[edi],dx
  4254a4:	xor    ebp,DWORD PTR [ebp+0x66]
  4254a7:	cmp    ebp,DWORD PTR [esi-0xa]
  4254aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254ab:	fcomp  QWORD PTR [edx+0x6d]
  4254ae:	repnz rcr DWORD PTR [ebx],cl
  4254b1:	pop    ebp
  4254b2:	repnz into 
  4254b4:	iret   
  4254b5:	lods   eax,DWORD PTR ds:[esi]
  4254b6:	(bad)  
  4254b7:	xor    esp,DWORD PTR [ecx-0x55]
  4254ba:	(bad)  
  4254bb:	sub    ebx,DWORD PTR [ecx]
  4254bd:	mov    bh,0xb1
  4254bf:	mov    ebx,0xf93ef13e
  4254c4:	or     eax,0xf38cb924
  4254c9:	in     al,dx
  4254ca:	adc    DWORD PTR [edi],0x91f6e31a
  4254d0:	pop    ebx
  4254d1:	cdq    
  4254d2:	mov    ebx,0x72ab5772
  4254d7:	xlat   BYTE PTR ds:[ebx]
  4254d8:	test   BYTE PTR [edx+0x34],0x43
  4254dc:	or     eax,esp
  4254de:	and    edx,DWORD PTR [edi+0x19a37ab8]
  4254e4:	ss mov dl,0xc5
  4254e7:	addr16 std 
  4254e9:	sbb    al,BYTE PTR [edx+ecx*2+0x3a]
  4254ed:	mov    ah,0xdf
  4254ef:	inc    edx
  4254f0:	or     DWORD PTR [edx-0x6d],0xffffffe9
  4254f4:	mov    ecx,?
  4254f6:	mov    ebp,0x84819ad7
  4254fb:	stos   BYTE PTR es:[edi],al
  4254fc:	xor    dh,BYTE PTR [ecx+0x34]
  4254ff:	push   eax
  425500:	mov    ecx,esi
  425502:	popa   
  425503:	xor    al,0xdd
  425505:	pop    esp
  425506:	icebp  
  425507:	cs jb  0x425551
  42550a:	inc    si
  42550c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42550d:	outs   dx,BYTE PTR ds:[esi]
  42550e:	mov    ebp,0xf16d8ba6
  425513:	cmp    DWORD PTR [esi-0x2c],ecx
  425516:	repz mov ds:0x9902953e,al
  42551c:	mov    ebp,0x746f01e0
  425521:	leave  
  425522:	dec    esi
  425523:	and    edi,ebx
  425525:	(bad)  
  425526:	mov    dh,0xc4
  425528:	js     0x425519
  42552a:	pop    ss
  42552b:	inc    eax
  42552c:	add    bl,BYTE PTR [edx+0x50]
  42552f:	jmp    0xaba2e7bb
  425534:	cvtpi2ps xmm0,QWORD PTR [ebx-0x673c56b4]
  42553b:	dec    ecx
  42553c:	scas   al,BYTE PTR es:[edi]
  42553d:	sar    BYTE PTR [edx-0x42],1
  425540:	or     eax,0x1079ef64
  425545:	(bad)  
  425546:	jae    0x425557
  425548:	jl     0x4254d0
  42554a:	stos   BYTE PTR es:[edi],al
  42554b:	xor    bl,BYTE PTR [esi]
  42554d:	repnz push ds
  42554f:	iret   
  425550:	and    esi,DWORD PTR [ebx]
  425552:	sub    ebx,DWORD PTR [ecx]
  425554:	mov    gs,esi
  425556:	inc    esi
  425557:	sahf   
  425558:	loope  0x4254e5
  42555a:	add    eax,0xb3dbbc89
  42555f:	sahf   
  425560:	mov    esp,0xe6778a1
  425565:	leave  
  425566:	fwait
  425567:	sub    esp,ebx
  425569:	das    
  42556a:	xor    eax,0xffffffd4
  42556d:	dec    edx
  42556e:	mov    bh,0x5
  425570:	pop    ebx
  425571:	scas   eax,DWORD PTR es:[edi]
  425572:	xlat   BYTE PTR ds:[ebx]
  425573:	arpl   WORD PTR [ecx+0x5fcfd038],dx
  425579:	add    DWORD PTR [edx+ecx*2],edi
  42557c:	shl    BYTE PTR [edi+0x1f],1
  42557f:	xchg   edi,eax
  425580:	test   al,0x83
  425582:	or     edx,DWORD PTR [ebx+esi*2]
  425585:	cmp    al,0xcc
  425587:	bound  eax,QWORD PTR [edi]
  425589:	inc    esp
  42558a:	or     dl,al
  42558c:	ds xchg esp,eax
  42558e:	xchg   edx,eax
  42558f:	xor    eax,0x71c0640b
  425594:	addr16 and eax,ecx
  425597:	mov    DWORD PTR [ebp+0x1b162015],0xb3509283
  4255a1:	fiadd  DWORD PTR ss:[eax+0x2dcf152f]
  4255a8:	pop    ebx
  4255a9:	or     DWORD PTR [edx+edi*1],ebx
  4255ac:	cmc    
  4255ad:	gs hlt 
  4255af:	(bad)  
  4255b0:	cmp    esp,esi
  4255b2:	or     eax,0x5124ab8f
  4255b7:	sub    DWORD PTR [eax-0x1a],esp
  4255ba:	inc    esi
  4255bb:	jbe    0x4255a5
  4255bd:	test   DWORD PTR [esi-0x9],esi
  4255c0:	xor    al,0xdb
  4255c2:	jo     0x425570
  4255c4:	push   esp
  4255c5:	gs sbb esi,ebx
  4255c8:	mov    gs,WORD PTR [edi-0x4c52dd97]
  4255ce:	das    
  4255cf:	push   ebx
  4255d0:	stc    
  4255d1:	mov    bh,0x65
  4255d3:	xor    DWORD PTR [esi-0x60],esi
  4255d6:	lods   al,BYTE PTR ds:[esi]
  4255d7:	jno    0x4255c8
  4255d9:	and    al,0x2b
  4255db:	ins    BYTE PTR es:[edi],dx
  4255dc:	inc    esi
  4255dd:	jl     0x42557a
  4255df:	iret   
  4255e0:	repnz dec ecx
  4255e2:	in     eax,0x8e
  4255e4:	dec    edx
  4255e5:	add    al,0x22
  4255e7:	cld    
  4255e8:	mov    WORD PTR [eax],ds
  4255ea:	xchg   esp,eax
  4255eb:	jnp    0x4255cb
  4255ed:	dec    edx
  4255ee:	mov    ecx,0x7cd3ff5b
  4255f3:	ror    BYTE PTR [edx+esi*8],cl
  4255f6:	mov    WORD PTR [eax-0x4c],?
  4255f9:	cli    
  4255fa:	xchg   ecx,eax
  4255fb:	gs xchg ebx,eax
  4255fd:	outs   dx,BYTE PTR ds:[esi]
  4255fe:	(bad)  
  4255ff:	neg    DWORD PTR es:[edx+0x6ec43725]
  425606:	mov    ecx,0xa721573
  42560b:	push   esp
  42560c:	pushf  
  42560d:	mov    eax,esi
  42560f:	sbb    al,0xe0
  425611:	mov    DWORD PTR [ebx-0x3e52ceed],ebx
  425617:	fcmovne st,st(6)
  425619:	adc    eax,0x9d29503b
  42561e:	aaa    
  42561f:	lgs    esp,FWORD PTR [eax]
  425622:	mov    bh,0x3a
  425624:	ins    BYTE PTR es:[edi],dx
  425625:	sub    ah,dh
  425627:	call   0x3d1b191d
  42562c:	jno    0x425621
  42562e:	push   ebp
  42562f:	call   0x2b82:0x5bfdaa5a
  425636:	into   
  425637:	jle    0x4256a2
  425639:	outs   dx,DWORD PTR ds:[esi]
  42563a:	ins    DWORD PTR es:[edi],dx
  42563b:	mov    esp,0x63ac9b60
  425640:	clc    
  425641:	jno    0x4255d7
  425643:	jbe    0x425627
  425645:	push   0xfffffffc
  425647:	iret   
  425648:	xchg   esp,eax
  425649:	mov    bh,0x5b
  42564b:	aaa    
  42564c:	mov    ds,WORD PTR [ebp-0x4e]
  42564f:	clc    
  425650:	jns    0x425691
  425652:	jg     0x425654
  425654:	call   0xb4de:0xd087dced
  42565b:	jmp    0x425620
  42565d:	push   eax
  42565e:	pop    ss
  42565f:	cmp    DWORD PTR [eax-0x30],eax
  425662:	xor    edx,DWORD PTR [ebx]
  425664:	repnz (bad) 
  425666:	pop    ss
  425667:	in     al,0x3e
  425669:	ret    
  42566a:	add    al,0x65
  42566c:	aas    
  42566d:	jbe    0x4256d1
  42566f:	adc    ebp,edi
  425671:	fisub  WORD PTR [ebx]
  425673:	hlt    
  425674:	outs   dx,DWORD PTR ds:[esi]
  425675:	jnp    0x4256eb
  425677:	cs xor al,0xa7
  42567a:	add    al,0xf3
  42567c:	call   0x7dff:0xc60216d5
  425683:	or     esp,eax
  425685:	jl     0x4256eb
  425687:	pop    ds
  425688:	(bad)  
  425689:	sbb    eax,0x4e9d8ed2
  42568e:	call   DWORD PTR [edi-0x71]
  425691:	pushf  
  425692:	dec    edi
  425693:	add    bh,bh
  425695:	push   eax
  425696:	paddsb mm0,QWORD PTR [ebp-0x4b564d74]
  42569d:	pusha  
  42569e:	ss jno 0x4256d2
  4256a1:	leave  
  4256a2:	mov    eax,0x4b69afab
  4256a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256a8:	and    bh,BYTE PTR [esi-0x530529a9]
  4256ae:	mov    bl,0x1
  4256b0:	ficom  DWORD PTR [ebp-0x130c5469]
  4256b6:	adc    ecx,DWORD PTR [eax]
  4256b8:	hlt    
  4256b9:	mov    bl,ah
  4256bb:	jbe    0x42570c
  4256bd:	bound  edi,QWORD PTR [edx]
  4256bf:	push   esp
  4256c0:	repz jge 0x42566d
  4256c3:	xchg   esp,eax
  4256c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256c5:	repz sub eax,0x8a550c5f
  4256cb:	cmp    BYTE PTR [edx-0x79],ah
  4256ce:	sar    BYTE PTR [edx-0x6a],cl
  4256d1:	mov    cl,0xfa
  4256d3:	adc    DWORD PTR [esi-0x74343495],0x79
  4256da:	push   0xffffffe4
  4256dc:	mov    dh,0xdf
  4256de:	icebp  
  4256df:	dec    esp
  4256e0:	mov    cl,0x5e
  4256e2:	jg     0x4256dc
  4256e4:	jge    0x425761
  4256e6:	adc    ebx,DWORD PTR [edi+0x69b525a5]
  4256ec:	push   edi
  4256ed:	cmp    eax,0xc1409413
  4256f2:	push   edi
  4256f3:	sub    DWORD PTR [esi+0x46],eax
  4256f6:	stos   DWORD PTR es:[edi],eax
  4256f7:	sub    esi,ecx
  4256f9:	fcmovnbe st,st(4)
  4256fb:	in     al,dx
  4256fc:	lods   al,BYTE PTR ds:[esi]
  4256fd:	enter  0xdaaf,0x62
  425701:	adc    eax,0xafc25032
  425706:	in     eax,dx
  425707:	or     eax,0x2478e894
  42570c:	loopne 0x425728
  42570e:	cmp    DWORD PTR [edx],0x2ae72aca
  425714:	mov    ?,WORD PTR [ecx]
  425716:	dec    ebp
  425717:	adc    eax,0x9739e6eb
  42571c:	inc    esi
  42571d:	adc    cl,BYTE PTR [eax+0x36]
  425720:	call   0x7342:0xf3b1873f
  425727:	inc    eax
  425728:	jg     0x425731
  42572a:	push   es
  42572b:	ds cs scas eax,DWORD PTR es:[edi]
  42572e:	call   FWORD PTR [ebp+0x3e416eb3]
  425734:	icebp  
  425735:	mov    BYTE PTR [ecx-0x34],bh
  425738:	retf   
  425739:	and    ebp,esi
  42573b:	jecxz  0x425746
  42573d:	jmp    0xec6f73c5
  425742:	(bad)  
  425743:	in     al,0x2f
  425745:	bound  esp,QWORD PTR [ebx+0x1c4869f3]
  42574b:	mov    esi,0xe0488208
  425750:	in     eax,0x13
  425752:	popa   
  425753:	mov    al,0x40
  425755:	iret   
  425756:	mov    al,ds:0x16a61e7a
  42575b:	cmp    esi,esp
  42575d:	ror    BYTE PTR [eax+eiz*2-0xb],1
  425761:	sbb    bh,BYTE PTR [esp+ecx*4]
  425764:	lock retf 
  425766:	sar    DWORD PTR [ebx],1
  425768:	test   DWORD PTR [edx+0xe],eax
  42576b:	cmc    
  42576c:	ret    
  42576d:	cdq    
  42576e:	inc    eax
  42576f:	sub    DWORD PTR [ecx+0x673060fc],edi
  425775:	stos   DWORD PTR es:[edi],eax
  425776:	cmp    ch,al
  425778:	inc    ecx
  425779:	je     0x425711
  42577b:	hlt    
  42577c:	aam    0x32
  42577e:	add    dl,bh
  425780:	ret    0x9705
  425783:	jb     0x425739
  425785:	mov    esi,0x7e3d5b98
  42578a:	mov    edi,0xad22c792
  42578f:	cli    
  425790:	outs   dx,BYTE PTR ds:[esi]
  425791:	jb     0x4257f4
  425793:	or     al,0x97
  425795:	mov    dh,dh
  425797:	push   ebx
  425798:	sub    esp,ebp
  42579a:	das    
  42579b:	inc    eax
  42579c:	scas   eax,DWORD PTR es:[edi]
  42579d:	xor    bh,bh
  42579f:	fiadd  WORD PTR [esi-0x76]
  4257a2:	test   DWORD PTR ss:[edx+0x52],0x9320f88e
  4257aa:	mov    ch,0xb9
  4257ac:	nop
  4257ad:	les    edx,FWORD PTR [edi]
  4257af:	retf   0xb2c5
  4257b2:	je     0x4257d6
  4257b4:	cmp    dh,dl
  4257b6:	loopne 0x42579c
  4257b8:	mov    ebx,0x5f08ad26
  4257bd:	icebp  
  4257be:	shl    DWORD PTR [eax-0x5f],1
  4257c1:	popf   
  4257c2:	(bad)  
  4257c3:	adc    edx,DWORD PTR [esi-0x3a]
  4257c6:	or     BYTE PTR [ebx-0x19],al
  4257c9:	hlt    
  4257ca:	js     0x42582e
  4257cc:	push   ebx
  4257cd:	outs   dx,BYTE PTR ds:[esi]
  4257ce:	fwait
  4257cf:	pop    ds
  4257d0:	inc    edi
  4257d1:	mov    al,ds:0x7321ae63
  4257d6:	test   al,0x35
  4257d8:	lods   eax,DWORD PTR ds:[esi]
  4257d9:	fdivr  QWORD PTR [ebp+0x4813411c]
  4257df:	cmp    edi,DWORD PTR [edx+ecx*2-0x122e8a04]
  4257e6:	pop    esi
  4257e7:	mov    DWORD PTR [eax],esp
  4257e9:	add    eax,0x1370de19
  4257ee:	fdivr  st(3),st
  4257f0:	cmp    DWORD PTR [eax],ebp
  4257f2:	xor    eax,0xe7e15e1c
  4257f7:	xchg   edi,eax
  4257f8:	fcmovbe st,st(4)
  4257fa:	pop    edi
  4257fb:	mov    al,BYTE PTR [edx+0x41]
  4257fe:	mov    bh,0x78
  425800:	pop    ecx
  425801:	cmp    al,0x6
  425803:	rol    ecx,0x8a
  425806:	(bad)  
  425808:	sbb    ah,ah
  42580a:	xchg   edx,eax
  42580b:	jae    0x4257ef
  42580d:	sub    eax,0xe9aeae45
  425812:	repnz push esp
  425814:	xchg   ecx,eax
  425815:	push   esp
  425816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425817:	mov    bl,0x16
  425819:	gs std 
  42581b:	mov    esi,0x4151097a
  425820:	pop    eax
  425821:	loope  0x4257c0
  425823:	push   ss
  425824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425825:	push   0x1cdb7225
  42582a:	and    edi,DWORD PTR [eax]
  42582c:	mov    esp,0xab1d0d46
  425831:	pop    edx
  425832:	jno    0x425889
  425834:	and    ch,BYTE PTR [ebx+eiz*4]
  425837:	ficom  DWORD PTR [edx-0x6e]
  42583a:	rcl    eax,0x8a
  42583d:	jmp    FWORD PTR [esi-0x23cf539]
  425843:	inc    eax
  425844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425845:	test   eax,0x286ef468
  42584a:	adc    eax,0x2819faef
  42584f:	aam    0x40
  425851:	sbb    ch,bh
  425853:	shl    DWORD PTR [esi],1
  425855:	dec    edx
  425856:	les    esi,FWORD PTR [ebx-0x2f7048f]
  42585c:	cmp    DWORD PTR [esi+0x0],ecx
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x765d36f8]
  42586f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425870:	mov    bh,0x2b
  425872:	adc    eax,0xf40001d1
  425877:	add    al,0x0
  425879:	add    BYTE PTR [edx+0x76c8d76a],bl
  42587f:	repz sahf 
  425881:	xor    edi,DWORD PTR [ecx]
  425883:	hlt    
  425884:	mov    bh,0x3
  425886:	sbb    BYTE PTR [eax],cl
  425888:	adc    edi,DWORD PTR [edi-0x7348babf]
  42588e:	call   0x34f6:0x3167d59e
  425895:	adc    bh,BYTE PTR [ecx]
  425897:	xchg   edi,eax
  425898:	in     eax,0x53
  42589a:	and    bh,BYTE PTR [ecx-0x6b]
  42589d:	pop    es
  42589e:	ins    DWORD PTR es:[edi],dx
  42589f:	in     al,0x72
  4258a1:	(bad)  
  4258a3:	bound  esp,QWORD PTR [ebx-0x4f760641]
  4258a9:	je     0x4258fa
  4258ab:	xlat   BYTE PTR ds:[ebx]
  4258ac:	stos   DWORD PTR es:[edi],eax
  4258ad:	popa   
  4258ae:	retf   
  4258af:	push   ebp
  4258b1:	les    esp,FWORD PTR [edx]
  4258b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258b4:	jecxz  0x4258a1
  4258b6:	enter  0x3525,0x1d
  4258ba:	mov    ebp,0xf3419847
  4258bf:	bound  edi,QWORD PTR [eax+0x4c]
  4258c2:	dec    edi
  4258c3:	jmp    0x4d2ea851
  4258c8:	sbb    BYTE PTR [ebx+0x1306c2d0],ch
  4258ce:	xchg   BYTE PTR [ecx-0x659f1ef1],ah
  4258d4:	sbb    BYTE PTR [edx+0x46b44b23],cl
  4258da:	test   eax,0xd92b078f
  4258df:	xor    BYTE PTR [ecx+0x482c0920],dl
  4258e5:	mov    edi,ds
  4258e7:	pop    es
  4258e8:	test   DWORD PTR [ecx-0x4],esi
  4258eb:	or     edx,eax
  4258ed:	adc    al,0xb6
  4258ef:	xchg   ebp,eax
  4258f0:	pop    ds
  4258f1:	sub    DWORD PTR [edx-0xb7f45a2],0xffffffd4
  4258f8:	push   0xe137cd46
  4258fd:	mov    ecx,0x1e682f1a
  425902:	imul   ebx,DWORD PTR [ecx+0x15],0xe5c27204
  425909:	fcmovne st,st(6)
  42590b:	ss arpl sp,si
  42590e:	xor    eax,DWORD PTR [ebp+0x632eaabb]
  425914:	repz sub al,0x5b
  425917:	rol    DWORD PTR [eax-0xa],cl
  42591a:	dec    esp
  42591b:	ds push ebp
  42591d:	pop    ds
  42591e:	test   BYTE PTR [edx],bl
  425920:	mov    cl,BYTE PTR [ebx-0x8]
  425923:	pop    ds
  425924:	repnz xor al,0xe6
  425927:	aam    0xd1
  425929:	jg     0x425921
  42592b:	arpl   WORD PTR [ecx],bp
  42592d:	xor    al,0xff
  42592f:	and    DWORD PTR [ebx],0x4b
  425932:	mov    dh,0xa0
  425934:	ins    BYTE PTR es:[edi],dx
  425935:	push   esp
  425936:	stc    
  425937:	and    ebp,ebp
  425939:	fmul   DWORD PTR [eax+0x4a]
  42593c:	add    eax,0xc6da2d0f
  425941:	xchg   esp,eax
  425942:	repz je 0x4258fb
  425945:	mov    eax,ds:0xa0272119
  42594a:	mov    WORD PTR [ecx-0x773ba822],?
  425950:	(bad)  
  425951:	mov    dh,0xca
  425953:	call   0xa507aed7
  425958:	push   cs
  425959:	ja     0x42590a
  42595b:	jo     0x4259c7
  42595d:	jnp    0x425966
  42595f:	sbb    al,0xc2
  425961:	dec    eax
  425962:	pop    edx
  425963:	adc    al,0xec
  425965:	imul   ecx,DWORD PTR [ecx+0x76],0x38
  425969:	ficomp WORD PTR [eax]
  42596b:	dec    edi
  42596c:	sub    bl,BYTE PTR [ebx+0x3c]
  42596f:	retf   0x67df
  425972:	and    DWORD PTR [eax],edx
  425974:	(bad)  
  425976:	sbb    BYTE PTR [edi+0x25f412f3],cl
  42597c:	jl     0x425943
  42597e:	lea    edx,[ebx-0x6f]
  425981:	mov    dl,0xa9
  425983:	mov    WORD PTR [edi],gs
  425985:	je     0x4259bf
  425987:	cdq    
  425988:	repnz sbb eax,0xe51d285a
  42598e:	fistp  WORD PTR [eax+0x3b8a5ca2]
  425994:	jp     0x4259f6
  425996:	push   esp
  425997:	out    dx,al
  425998:	dec    eax
  425999:	and    bl,bh
  42599b:	enter  0x4282,0x35
  42599f:	popf   
  4259a0:	push   ecx
  4259a1:	inc    eax
  4259a2:	dec    esp
  4259a3:	mov    BYTE PTR [edx],bh
  4259a5:	js     0x4259ff
  4259a7:	push   edx
  4259a8:	mov    esp,0xb78d1049
  4259ad:	out    0x95,al
  4259af:	and    eax,0xa00969a1
  4259b4:	loopne 0x425a09
  4259b6:	outs   dx,BYTE PTR ds:[esi]
  4259b7:	jle    0x42593c
  4259b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ba:	pusha  
  4259bb:	subps  xmm7,XMMWORD PTR [eax-0x615975c6]
  4259c2:	data16 int3 
  4259c4:	dec    ebp
  4259c5:	mov    edi,0x9425fdff
  4259ca:	jns    0x4259c6
  4259cc:	ins    BYTE PTR es:[edi],dx
  4259cd:	pop    edx
  4259ce:	sub    al,0xe3
  4259d0:	jno    0x425a38
  4259d2:	xchg   edi,eax
  4259d3:	stc    
  4259d4:	mov    al,ds:0xf81a7f4c
  4259d9:	ja     0x425a40
  4259db:	pop    ds
  4259dc:	dec    ebx
  4259dd:	popf   
  4259de:	xchg   ecx,eax
  4259df:	mov    edx,0x8e9618f8
  4259e4:	aam    0x6d
  4259e6:	mov    ds:0x85a32db,eax
  4259eb:	mov    dh,cl
  4259ed:	xor    BYTE PTR [ecx],dl
  4259ef:	aam    0x65
  4259f1:	in     eax,0x4a
  4259f3:	pop    ds
  4259f4:	cld    
  4259f5:	(bad)  
  4259f6:	scas   al,BYTE PTR es:[edi]
  4259f7:	fidivr DWORD PTR [ecx-0x5c4fa939]
  4259fd:	push   es
  4259fe:	test   eax,0xdbb9a3b8
  425a03:	push   ds
  425a04:	inc    ecx
  425a05:	js     0x4259e3
  425a07:	jno    0x4259ab
  425a09:	add    ah,BYTE PTR [ecx+ecx*1-0x5]
  425a0d:	and    BYTE PTR [esi+0x4e51a97c],cl
  425a13:	xor    BYTE PTR [ecx],dh
  425a15:	dec    ebx
  425a16:	or     al,0xff
  425a18:	jp     0x425a4a
  425a1a:	ret    0xb275
  425a1d:	adc    edx,DWORD PTR [eax+0x5d55fbdc]
  425a23:	mov    al,0x3a
  425a25:	test   DWORD PTR [edx-0x30bade],edi
  425a2b:	push   edx
  425a2c:	inc    esi
  425a2d:	ret    
  425a2e:	push   es
  425a2f:	pushw  0x1b43
  425a33:	cmp    al,0x56
  425a35:	jnp    0x4259b8
  425a37:	cmp    al,0x85
  425a39:	pop    es
  425a3a:	addr16 (bad) 
  425a3d:	cs mov al,0xdd
  425a40:	push   ss
  425a41:	adc    al,0xf
  425a43:	jmp    0x425a58
  425a45:	jle    0x4259e0
  425a47:	dec    ebp
  425a48:	call   0x1080:0x7632991a
  425a4f:	or     BYTE PTR [edi-0x7b4930d],ah
  425a55:	hlt    
  425a56:	scas   eax,DWORD PTR es:[edi]
  425a57:	pusha  
  425a58:	cld    
  425a59:	cmp    DWORD PTR [ecx+0x9a513ca],0x46045b39
  425a63:	mov    al,ds:0xb02d227c
  425a68:	add    BYTE PTR [ecx+0x4503d136],dl
  425a6e:	add    edx,esi
  425a70:	push   esp
  425a71:	adc    ecx,edx
  425a73:	outs   dx,DWORD PTR ds:[esi]
  425a74:	jle    0x425a8c
  425a76:	push   edi
  425a77:	mov    bl,0x27
  425a79:	jecxz  0x425ae4
  425a7b:	sti    
  425a7c:	(bad)  
  425a7d:	not    BYTE PTR [ebx]
  425a7f:	sbb    edx,esi
  425a81:	cli    
  425a82:	rcr    esi,cl
  425a84:	gs (bad) 
  425a86:	sbb    BYTE PTR [ebp-0x6fbb18a7],ch
  425a8c:	lahf   
  425a8d:	fild   QWORD PTR [edx-0x736383fc]
  425a93:	in     al,dx
  425a94:	test   eax,edx
  425a96:	or     cl,ch
  425a98:	jmp    0x425a91
  425a9a:	jmp    0xb79b3605
  425a9f:	xor    eax,0x8889a3c1
  425aa4:	daa    
  425aa5:	adc    edi,DWORD PTR [ecx]
  425aa7:	inc    eax
  425aa8:	cmc    
  425aa9:	fidivr WORD PTR [esi]
  425aab:	inc    esi
  425aac:	adc    eax,0x57ced515
  425ab1:	sub    ah,dl
  425ab3:	xor    DWORD PTR [esp+ebp*1+0x49ae8f80],ebp
  425aba:	sub    ebp,DWORD PTR [ebx-0x4a321f27]
  425ac0:	rcr    DWORD PTR [ebx-0x71],cl
  425ac3:	or     al,0xe2
  425ac5:	inc    ecx
  425ac6:	inc    ebx
  425ac7:	(bad)  
  425ac8:	in     al,dx
  425ac9:	mov    eax,0xc3a9516b
  425ace:	mov    cl,0xd5
  425ad0:	or     BYTE PTR [eax],dh
  425ad2:	sbb    BYTE PTR ds:0xb6d3760d,ch
  425ad8:	xor    eax,0x19ab7be5
  425add:	xchg   esi,eax
  425ade:	loopne 0x425a83
  425ae0:	sbb    dh,BYTE PTR ds:0x3745cb01
  425ae6:	ror    edx,cl
  425ae8:	ins    DWORD PTR es:[edi],dx
  425ae9:	xor    ecx,DWORD PTR [esi+ebp*4+0xb]
  425aed:	xchg   BYTE PTR [ebp-0x7f],cl
  425af0:	je     0x425ab1
  425af2:	pop    ds
  425af3:	aaa    
  425af4:	aad    0x5d
  425af6:	pop    es
  425af7:	std    
  425af8:	lea    ebx,[ebp+eiz*4-0x7c]
  425afc:	je     0x425afc
  425afe:	not    BYTE PTR [edx]
  425b00:	adc    DWORD PTR [esi],ecx
  425b02:	pop    ebx
  425b03:	(bad)  
  425b05:	mov    ds:0xa0c34863,eax
  425b0a:	mov    eax,ds:0xeffc8f2e
  425b0f:	jb     0x425b0a
  425b11:	not    BYTE PTR [edi+0x5]
  425b14:	retf   
  425b15:	fcomi  st,st(3)
  425b17:	or     DWORD PTR [edi+0x20e435df],ebx
  425b1d:	mov    bl,0xd5
  425b1f:	test   al,0xb3
  425b21:	mov    ds:0xbaf9a378,eax
  425b26:	adc    al,al
  425b28:	or     ebx,DWORD PTR [edi+eax*2]
  425b2b:	push   cs
  425b2c:	rcl    esp,0x8e
  425b2f:	sbb    eax,0x2d04f0b5
  425b34:	push   eax
  425b35:	xchg   edi,eax
  425b36:	mov    ecx,0x477916ef
  425b3b:	xor    eax,0x580ef5f0
  425b40:	pusha  
  425b41:	retf   
  425b42:	xchg   BYTE PTR [eax-0x7c],dh
  425b45:	daa    
  425b46:	out    dx,al
  425b47:	adc    DWORD PTR [edx],ebx
  425b49:	inc    ebx
  425b4a:	ret    
  425b4b:	retf   
  425b4c:	fisttp DWORD PTR [ebx-0x15]
  425b4f:	add    ebx,esp
  425b51:	and    al,0x7b
  425b53:	cwde   
  425b54:	jns    0x425b95
  425b56:	sbb    DWORD PTR [eax+esi*8+0x70],esi
  425b5a:	push   ecx
  425b5b:	inc    esi
  425b5c:	inc    esi
  425b5d:	jns    0x425b58
  425b5f:	arpl   WORD PTR cs:[ebp+0x5af672ee],dx
  425b66:	inc    esi
  425b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b68:	jae    0x425bae
  425b6a:	xchg   edi,eax
  425b6b:	cmp    BYTE PTR [ebx],ah
  425b6d:	ret    
  425b6e:	jmp    0x425bab
  425b70:	and    BYTE PTR [ebx+0x260bd83b],bl
  425b76:	cmp    bl,BYTE PTR [ecx]
  425b78:	pop    eax
  425b79:	adc    eax,0x13bccf48
  425b7e:	jecxz  0x425ba9
  425b80:	pop    edi
  425b81:	mov    esi,0xd3c7b4e8
  425b86:	sbb    BYTE PTR [esi-0x4603704a],al
  425b8c:	mov    esi,0xafeb4412
  425b91:	cmp    ebx,ebp
  425b93:	lods   al,BYTE PTR ds:[esi]
  425b94:	xor    BYTE PTR [eax],bh
  425b96:	jae    0x425bac
  425b98:	imul   esp,DWORD PTR [edi+0x2a23197c],0x7d
  425b9f:	mov    ah,0xdf
  425ba1:	mov    WORD PTR [esi+0x71433b67],fs
  425ba7:	sub    DWORD PTR [edi],0x5c20e831
  425bad:	addr16 xor al,0x5f
  425bb0:	mov    edi,0x321f1d33
  425bb5:	retf   0x7efd
  425bb8:	mov    bh,BYTE PTR [ecx-0x403ffa4b]
  425bbe:	(bad)  
  425bbf:	test   BYTE PTR [edx],ah
  425bc1:	inc    BYTE PTR [ecx+0x14]
  425bc4:	adc    BYTE PTR [eax-0x38],bh
  425bc7:	xchg   edx,eax
  425bc8:	cli    
  425bc9:	jb     0x425c25
  425bcb:	outs   dx,BYTE PTR ds:[esi]
  425bcc:	scas   al,BYTE PTR es:[edi]
  425bcd:	repnz and esp,DWORD PTR [esi-0x3a3a97fb]
  425bd4:	pop    ecx
  425bd5:	mov    ebp,0x82986491
  425bda:	mov    dh,BYTE PTR [eax]
  425bdc:	cmp    al,BYTE PTR [edx+0x74]
  425bdf:	inc    si
  425be1:	(bad)  
  425be2:	fadd   DWORD PTR [eax+0x65]
  425be5:	in     eax,0xee
  425be7:	inc    edi
  425be8:	push   ds
  425be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bea:	cmp    esp,ebx
  425bec:	je     0x425c6a
  425bee:	jg     0x425bd8
  425bf0:	adc    ah,dl
  425bf2:	(bad)  
  425bf3:	aaa    
  425bf4:	test   BYTE PTR [ebx+0x4f],ch
  425bf7:	xlat   BYTE PTR ds:[ebx]
  425bf8:	je     0x425c51
  425bfa:	jle    0x425c33
  425bfc:	mov    WORD PTR [edx-0x68],cs
  425bff:	sbb    DWORD PTR [esi+0x1407f69c],0x70632470
  425c09:	dec    eax
  425c0a:	loopne 0x425b9d
  425c0c:	xchg   DWORD PTR [esi],ebp
  425c0e:	mov    ds:0x38aa9f5a,eax
  425c13:	data16 jno 0x425bd9
  425c16:	ror    bl,1
  425c18:	cmp    eax,0x4b7dcbc4
  425c1d:	jmp    0x978e07f4
  425c22:	stos   BYTE PTR es:[edi],al
  425c23:	fild   QWORD PTR [ebx+0x52]
  425c26:	stos   DWORD PTR es:[edi],eax
  425c27:	ins    BYTE PTR es:[edi],dx
  425c28:	mov    ds:0x5d30dd3d,eax
  425c2d:	jnp    0x425c88
  425c2f:	jp     0x425c8d
  425c31:	loop   0x425c02
  425c33:	mov    esi,0xc961d54a
  425c38:	push   ebp
  425c39:	clc    
  425c3a:	push   esi
  425c3b:	rol    DWORD PTR [ecx+0x0],0x23
  425c3f:	mov    ch,BYTE PTR [ebp-0x2cf0927a]
  425c45:	sbb    bh,dl
  425c47:	xor    dl,ah
  425c49:	lahf   
  425c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c4b:	inc    ebx
  425c4c:	pop    ebx
  425c4d:	rcl    BYTE PTR [edx-0x48019612],0xe0
  425c54:	jp     0x425c7e
  425c56:	inc    edx
  425c57:	test   BYTE PTR [edx+0x25b6b1e0],0xc7
  425c5e:	mov    edx,0xccdeca53
  425c63:	mov    dl,0x4
  425c65:	test   DWORD PTR [esi+0x2306cf9],ecx
  425c6b:	xor    al,0xbc
  425c6d:	sub    eax,DWORD PTR [ecx-0x63]
  425c70:	mov    cl,0x9d
  425c72:	jp     0x425c0a
  425c74:	(bad)  
  425c75:	imul   BYTE PTR [eax+esi*8-0x48dd823b]
  425c7c:	cbw    
  425c7e:	dec    edi
  425c7f:	daa    
  425c80:	popf   
  425c81:	mov    bl,0x51
  425c83:	lds    edx,FWORD PTR [ecx]
  425c85:	ffree  st(6)
  425c87:	xchg   ebx,eax
  425c88:	xor    eax,0xe8ce73d6
  425c8d:	jne    0x425cbb
  425c8f:	std    
  425c90:	pop    ecx
  425c91:	ss ja  0x425d05
  425c94:	fnsave [ecx]
  425c96:	cmc    
  425c97:	add    BYTE PTR [edi-0x304669c3],dh
  425c9d:	inc    edx
  425c9e:	int    0xf
  425ca0:	dec    ebp
  425ca1:	jns    0x425c8a
  425ca3:	outs   dx,DWORD PTR ds:[esi]
  425ca4:	pop    ds
  425ca5:	sti    
  425ca6:	xchg   ebp,eax
  425ca7:	xlat   BYTE PTR ds:[ebx]
  425ca8:	lods   al,BYTE PTR ds:[esi]
  425caa:	xlat   BYTE PTR ds:[ebx]
  425cab:	ins    BYTE PTR es:[edi],dx
  425cac:	sbb    dl,BYTE PTR [ebx]
  425cae:	(bad)  
  425caf:	mov    bh,0x66
  425cb1:	aam    0xd1
  425cb3:	mov    dh,0x9b
  425cb5:	push   eax
  425cb6:	and    cl,BYTE PTR [ebx+ecx*8-0x12b08301]
  425cbd:	sub    ebp,DWORD PTR [edx-0x3b3798a9]
  425cc3:	dec    ecx
  425cc4:	pop    edi
  425cc5:	repz xchg edx,eax
  425cc7:	xchg   ebp,eax
  425cc8:	out    dx,al
  425cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cca:	cli    
  425ccb:	imul   DWORD PTR [edx]
  425ccd:	xlat   BYTE PTR ds:[ebx]
  425cce:	pop    ecx
  425ccf:	cld    
  425cd0:	jg     0x425c56
  425cd2:	cwde   
  425cd3:	xor    ch,BYTE PTR [esi+0x311a81ab]
  425cd9:	or     edx,DWORD PTR [esi+0x2f]
  425cdc:	dec    ecx
  425cdd:	xchg   esp,eax
  425cde:	adc    bl,BYTE PTR ds:0xed72652a
  425ce4:	fsubp  st(7),st
  425ce6:	ins    BYTE PTR es:[edi],dx
  425ce7:	(bad)  
  425ce8:	test   eax,0xc81bf000
  425ced:	imul   esi,ecx,0xffffff8e
  425cf0:	lods   al,BYTE PTR ds:[esi]
  425cf1:	ret    0x2f2b
  425cf4:	push   ecx
  425cf5:	xor    al,0xce
  425cf7:	inc    edx
  425cf8:	(bad)  
  425cf9:	fmulp  st(4),st
  425cfb:	fwait
  425cfc:	inc    ebp
  425cfd:	xchg   edi,eax
  425cfe:	pop    ebx
  425cff:	adc    eax,0x39c7e9bf
  425d04:	pop    ebp
  425d05:	je     0x425d43
  425d07:	outs   dx,BYTE PTR ds:[esi]
  425d08:	mov    bh,0xe0
  425d0a:	imul   esi,DWORD PTR [ebx+0x3f],0xffffffe1
  425d0e:	mov    edi,0x62799880
  425d13:	mov    cl,0x1a
  425d15:	mov    esi,DWORD PTR [edi+ebx*2+0x64]
  425d19:	hlt    
  425d1a:	loop   0x425d68
  425d1c:	lods   al,BYTE PTR ds:[esi]
  425d1d:	mov    eax,eax
  425d1f:	jnp    0x425cad
  425d21:	adc    esi,DWORD PTR [ebx+0xf]
  425d24:	cmp    eax,0x361d5830
  425d29:	in     eax,dx
  425d2a:	stos   DWORD PTR es:[edi],eax
  425d2b:	addr16 xchg ebx,eax
  425d2d:	jmp    0x425dad
  425d2f:	cmp    eax,0xef31a4d4
  425d34:	stc    
  425d35:	xchg   ebx,eax
  425d36:	mov    cl,ch
  425d38:	mov    dl,0x19
  425d3a:	jmp    0xf5b4:0x65cb0b21
  425d41:	inc    DWORD PTR [edx-0x4cbdc6b8]
  425d47:	daa    
  425d48:	mov    DWORD PTR [edx],ebp
  425d4a:	mov    esi,0x5b026e44
  425d4f:	pop    edx
  425d50:	pop    edx
  425d51:	dec    eax
  425d52:	std    
  425d53:	xor    eax,edx
  425d55:	pop    eax
  425d56:	std    
  425d57:	push   esi
  425d58:	mov    ecx,0xeb5b830a
  425d5d:	dec    esp
  425d5e:	shrd   DWORD PTR [ecx],eax,0x1d
  425d62:	sbb    eax,0xdacf6e26
  425d67:	push   es
  425d68:	je     0x425da8
  425d6a:	fwait
  425d6b:	push   esp
  425d6c:	pop    es
  425d6d:	jnp    0x425d6f
  425d6f:	add    BYTE PTR [eax],al
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ecx+edi*1-0x56]
  425d80:	clc    
  425d81:	out    0x9,eax
  425d83:	(bad)  
  425d84:	add    DWORD PTR [eax],eax
  425d86:	hlt    
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [edx],ah
  425d8b:	inc    ebx
  425d8c:	xchg   ebx,eax
  425d8d:	inc    esi
  425d8e:	mov    ebp,0x162e827f
  425d93:	dec    ebp
  425d94:	or     BYTE PTR [eax+0x3b],dl
  425d97:	loop   0x425d24
  425d99:	imul   edi,eax,0x2b
  425d9c:	loop   0x425d22
  425d9e:	sub    BYTE PTR ds:0x72c9a352,cl
  425da4:	inc    esi
  425da5:	jae    0x425e26
  425da7:	pop    ds
  425da8:	xchg   ebp,eax
  425da9:	ret    0x5627
  425dac:	fs mov al,0x16
  425daf:	pop    esi
  425db0:	test   eax,0xdee65f24
  425db5:	push   es
  425db6:	adc    eax,0xbe0144da
  425dbb:	out    0x2b,al
  425dbd:	adc    al,0xab
  425dbf:	cmp    DWORD PTR ds:0x9b5d6fb9,edi
  425dc5:	mov    edi,0x7daa68a1
  425dca:	xchg   edx,eax
  425dcb:	xor    al,0x22
  425dcd:	xor    bl,BYTE PTR [ebp+0x14c1afaa]
  425dd3:	push   DWORD PTR [ebp-0x46]
  425dd6:	rcl    esi,cl
  425dd8:	test   bh,0xd9
  425ddb:	out    0x5b,eax
  425ddd:	jmp    0x1adc:0xc109bbff
  425de4:	dec    ebx
  425de5:	xchg   esp,eax
  425de6:	stos   DWORD PTR es:[edi],eax
  425de7:	jp     0x425d76
  425de9:	push   esp
  425dea:	sub    bl,ah
  425dec:	leave  
  425ded:	or     eax,0x6fa3fa07
  425df2:	pop    es
  425df3:	xor    eax,0x3fd1d9e3
  425df8:	jnp    0x425da5
  425dfa:	add    edi,ebx
  425dfc:	rcr    BYTE PTR [ecx-0x799802f8],1
  425e02:	lahf   
  425e03:	sub    BYTE PTR [ecx+0x48bb531e],dh
  425e09:	or     dh,dl
  425e0b:	or     ebp,edx
  425e0d:	arpl   sp,bp
  425e0f:	popa   
  425e10:	int3   
  425e11:	inc    esi
  425e12:	mov    esp,0xdd9d160
  425e17:	dec    eax
  425e18:	out    dx,al
  425e19:	bound  eax,QWORD PTR [ecx+ebp*2-0x792b7f9c]
  425e20:	(bad)  
  425e22:	lds    ecx,FWORD PTR [ecx-0x6a]
  425e25:	or     ah,BYTE PTR [ecx-0x11]
  425e28:	xchg   esi,eax
  425e29:	(bad)  
  425e2a:	call   0x2cb1:0x72aca37f
  425e31:	xchg   BYTE PTR [edi-0x7c66c81e],cl
  425e37:	ins    BYTE PTR es:[edi],dx
  425e38:	push   ds
  425e39:	pop    edi
  425e3a:	xchg   esp,eax
  425e3b:	or     eax,0xb8596d02
  425e40:	nop
  425e41:	outs   dx,BYTE PTR ds:[esi]
  425e42:	pop    es
  425e43:	mov    ch,0xc6
  425e45:	test   eax,0x613c8fa0
  425e4a:	rcr    DWORD PTR [edi-0x3b],1
  425e4d:	aam    0x6d
  425e4f:	(bad)  
  425e50:	dec    edi
  425e51:	std    
  425e52:	outs   dx,BYTE PTR ds:[esi]
  425e53:	pop    eax
  425e54:	div    BYTE PTR [edi-0x2c559025]
  425e5a:	add    BYTE PTR [ebp+0x5d6b419a],ch
  425e60:	inc    esi
  425e61:	push   esp
  425e62:	add    DWORD PTR [edx+0x4a605d30],0x5d3ce4be
  425e6c:	icebp  
  425e6d:	mov    ch,0x73
  425e6f:	jno    0x425e05
  425e71:	lods   al,BYTE PTR ds:[esi]
  425e72:	jp     0x425e25
  425e74:	ss (bad) 
  425e76:	sti    
  425e77:	(bad)  
  425e79:	xcrypt-cfb (bad)
  425e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e7b:	jecxz  0x425e45
  425e7d:	(bad)  
  425e7e:	outs   dx,BYTE PTR ds:[esi]
  425e7f:	jg     0x425e58
  425e81:	fsubrp st(1),st
  425e83:	cmc    
  425e84:	sti    
  425e85:	sar    al,1
  425e87:	xchg   edx,eax
  425e88:	add    DWORD PTR [edx-0x48],esp
  425e8b:	pop    edi
  425e8c:	cmp    BYTE PTR [esp+ebx*1+0x47d3ef9f],ch
  425e93:	and    BYTE PTR [esi+0x64eafc97],dl
  425e99:	enter  0x57d3,0x98
  425e9d:	adc    esi,0xffffffe8
  425ea0:	mov    ebp,DWORD PTR [edx]
  425ea2:	pop    ecx
  425ea3:	push   edx
  425ea4:	aam    0x6a
  425ea6:	lahf   
  425ea7:	inc    ecx
  425ea8:	push   cs
  425ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eaa:	dec    esp
  425eab:	scas   al,BYTE PTR es:[edi]
  425eac:	dec    esp
  425ead:	inc    eax
  425eae:	push   ecx
  425eaf:	sbb    al,0xe0
  425eb1:	adc    BYTE PTR [esi-0x6b14c57c],bl
  425eb7:	mov    esi,0x97ec7af9
  425ebc:	iret   
  425ebd:	enter  0x6ddd,0x6b
  425ec1:	and    DWORD PTR [ecx+0x325e1f4],edx
  425ec7:	sti    
  425ec8:	test   BYTE PTR [edx-0x24cd6ef0],dh
  425ece:	dec    ecx
  425ecf:	jae    0x425f40
  425ed1:	stos   DWORD PTR es:[edi],eax
  425ed2:	ror    DWORD PTR [ebp+0x5c9d404a],1
  425ed8:	sub    ebp,DWORD PTR [esi]
  425eda:	in     eax,dx
  425edb:	outs   dx,DWORD PTR ds:[esi]
  425edc:	sub    al,0x78
  425ede:	cli    
  425edf:	cdq    
  425ee0:	push   ebx
  425ee1:	pop    esp
  425ee2:	in     eax,0xdf
  425ee4:	sbb    esp,DWORD PTR [ebp-0xbacc95a]
  425eea:	pop    ebx
  425eeb:	add    edx,edi
  425eed:	push   ecx
  425eee:	bound  edx,QWORD PTR [ebx]
  425ef0:	out    dx,al
  425ef1:	push   esp
  425ef2:	add    ch,BYTE PTR ds:0x880af94
  425ef8:	out    dx,eax
  425ef9:	xchg   ebp,eax
  425efa:	push   edx
  425efb:	inc    edi
  425efc:	and    ecx,edx
  425efe:	fadd   QWORD PTR [edi-0x65f09d7f]
  425f04:	mov    al,ds:0xe1babc8f
  425f09:	push   es
  425f0a:	add    eax,eax
  425f0c:	pop    ebp
  425f0d:	je     0x425f1a
  425f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f10:	mov    cs,ecx
  425f12:	inc    ecx
  425f13:	enter  0x24,0xff
  425f17:	jg     0x425ed5
  425f19:	test   BYTE PTR [esp+eiz*4-0x75],bl
  425f1d:	outs   dx,BYTE PTR ds:[esi]
  425f1e:	lods   eax,DWORD PTR ds:[esi]
  425f1f:	iret   
  425f20:	(bad)
  425f24:	or     edi,ebp
  425f26:	sbb    al,0x6f
  425f28:	cld    
  425f29:	mov    ch,0xa6
  425f2b:	push   ebx
  425f2c:	out    0x75,eax
  425f2e:	sub    esi,DWORD PTR [ebp-0x66b664ef]
  425f34:	push   cs
  425f35:	xchg   ebx,eax
  425f36:	addr16 pop eax
  425f38:	sbb    BYTE PTR [edi+0x75],dl
  425f3b:	cld    
  425f3c:	jge    0x425f05
  425f3e:	dec    esp
  425f3f:	fdiv   st(3),st
  425f41:	jno    0x425f00
  425f43:	adc    DWORD PTR [edx-0x15],eax
  425f46:	dec    edi
  425f47:	inc    ebp
  425f48:	lea    edx,[eax]
  425f4a:	dec    ebx
  425f4b:	jne    0x425f78
  425f4d:	jecxz  0x425ed3
  425f4f:	inc    ecx
  425f50:	push   esp
  425f51:	sub    BYTE PTR [ebx],dl
  425f53:	retf   
  425f54:	test   al,0x78
  425f56:	mov    ebp,0xa6d716ad
  425f5b:	mov    dh,BYTE PTR [edx]
  425f5d:	jo     0x425f6e
  425f5f:	aad    0x1e
  425f61:	neg    DWORD PTR [edi]
  425f63:	jns    0x425fb9
  425f65:	in     eax,dx
  425f66:	ret    
  425f67:	cli    
  425f68:	mov    bh,0xcb
  425f6a:	jo     0x425fca
  425f6c:	fistp  DWORD PTR [edi+esi*8+0x1c]
  425f70:	(bad)  
  425f71:	mov    dl,0x8b
  425f73:	xchg   ebp,eax
  425f74:	loope  0x425f1c
  425f76:	dec    eax
  425f77:	leave  
  425f78:	shr    BYTE PTR [ebx+esi*4+0xd0726ef],cl
  425f7f:	repnz mov DWORD PTR [edx],ebp
  425f82:	add    DWORD PTR [edx+ebx*8-0x1bc1d5f0],ecx
  425f89:	pop    ds
  425f8a:	and    BYTE PTR [edi+0x75ca04ba],dh
  425f90:	adc    al,dl
  425f92:	test   ebp,eax
  425f94:	push   ebp
  425f95:	cld    
  425f96:	dec    edx
  425f97:	inc    ebx
  425f98:	lods   eax,DWORD PTR ds:[esi]
  425f99:	js     0x425f46
  425f9b:	push   edx
  425f9c:	test   eax,0x40615d02
  425fa1:	or     eax,0x71e42dea
  425fa6:	std    
  425fa7:	xor    DWORD PTR [ebp-0x47],esp
  425faa:	add    al,0x9f
  425fac:	rcr    BYTE PTR [ebx+0x4f],1
  425faf:	mov    gs,WORD PTR [eax+0x18]
  425fb2:	pop    ebx
  425fb3:	add    DWORD PTR ds:0x69bdb64e,edi
  425fb9:	aaa    
  425fba:	add    al,BYTE PTR [ebp-0x19]
  425fbd:	xor    bl,BYTE PTR ds:0x528fcaa3
  425fc3:	mov    ds:0x1704633b,al
  425fc8:	mov    ebx,DWORD PTR [eax+0x3f]
  425fcb:	js     0x425fc0
  425fcd:	mov    ds:0xeb298a07,eax
  425fd2:	out    dx,al
  425fd3:	mov    ss,WORD PTR ss:[ebx-0x12]
  425fd7:	mov    dl,BYTE PTR [edi-0x6bfaf087]
  425fdd:	add    BYTE PTR [ebp+0x5e],bh
  425fe0:	ror    BYTE PTR [eax],cl
  425fe2:	out    dx,eax
  425fe3:	es movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  425fe6:	adc    al,BYTE PTR [esi-0x16]
  425fe9:	mov    cl,BYTE PTR [eax+0x2736e85c]
  425fef:	mov    dl,0x4b
  425ff1:	mov    edx,0xa92d0599
  425ff6:	or     BYTE PTR [edx+0x5d],0x93
  425ffa:	imul   ecx,DWORD PTR [ebx],0xb5994ef5
  426000:	mov    bl,0x4c
  426002:	sti    
  426003:	jmp    0x4a08d4ac
  426008:	scas   eax,DWORD PTR es:[edi]
  426009:	ror    BYTE PTR [ecx+eiz*8],1
  42600c:	call   0x901:0xd2757bd9
  426013:	sar    BYTE PTR ds:0xd2e95d1,1
  426019:	and    esi,0x338f2a2f
  42601f:	mov    eax,0xe40c5e7b
  426024:	cmc    
  426025:	sub    bl,dl
  426027:	xchg   esi,eax
  426028:	pop    ebp
  426029:	or     eax,0x484c15f6
  42602e:	mov    esp,0xb7ac8b24
  426033:	(bad)  
  426034:	dec    edi
  426035:	jns    0x425ff0
  426037:	jno    0x4260af
  426039:	call   0x8adccdee
  42603e:	xor    eax,0xde8c85cb
  426043:	repnz outs dx,DWORD PTR ds:[esi]
  426045:	jb     0x42603f
  426047:	es inc edx
  426049:	push   es
  42604a:	int    0xf5
  42604c:	(bad)  
  42604e:	mov    ebx,0x777b96fb
  426053:	aam    0xdc
  426055:	and    edx,DWORD PTR [ecx-0x2c6c3eba]
  42605b:	mov    ecx,0xdd260827
  426060:	or     BYTE PTR [edx],dh
  426062:	or     bl,bl
  426064:	sbb    BYTE PTR [ebp+0x65],dh
  426067:	xchg   edx,eax
  426068:	rcr    DWORD PTR [edx],0xd
  42606b:	pop    ebx
  42606c:	xor    ebp,DWORD PTR ds:0x36ecd9b6
  426072:	cmc    
  426073:	es sti 
  426075:	push   edx
  426076:	mov    eax,ds:0x3f78abe5
  42607b:	lds    eax,FWORD PTR [esp+edi*4+0x18]
  42607f:	push   0x809c6fd7
  426084:	ret    0xac68
  426087:	into   
  426088:	std    
  426089:	mov    edi,0x2cdbebe5
  42608e:	sbb    DWORD PTR [ebx+edi*1],esp
  426091:	fistp  WORD PTR [ebx+0x2938cb79]
  426097:	leave  
  426098:	cmp    BYTE PTR [edi+0x42],ch
  42609b:	test   eax,0x9d404cf
  4260a0:	xchg   ebp,eax
  4260a1:	inc    ecx
  4260a2:	mov    ch,0x4
  4260a4:	and    BYTE PTR [edi-0x18],dh
  4260a7:	cdq    
  4260a8:	mov    BYTE PTR [edx-0x3cfecd56],ah
  4260ae:	pop    esp
  4260af:	in     al,dx
  4260b0:	xchg   ebx,eax
  4260b1:	ret    0x739c
  4260b4:	les    edx,FWORD PTR [ebx+0x1c]
  4260b7:	leave  
  4260b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260b9:	iret   
  4260ba:	jb     0x4260bf
  4260bc:	dec    esi
  4260bd:	add    eax,0xb35324ba
  4260c2:	xchg   esp,eax
  4260c3:	mov    edi,0x6f4a7f12
  4260c8:	and    BYTE PTR [ecx],cl
  4260ca:	push   ds
  4260cb:	shr    DWORD PTR [ebp-0x2503669],cl
  4260d1:	out    0x41,al
  4260d3:	test   BYTE PTR [ebp-0x16],0xc4
  4260d7:	es loop 0x42606f
  4260da:	pop    es
  4260db:	push   es
  4260dc:	inc    edx
  4260dd:	aaa    
  4260de:	cmp    eax,0x19bce508
  4260e3:	pop    eax
  4260e4:	push   0x5689b7f9
  4260e9:	sti    
  4260ea:	nop
  4260eb:	adc    eax,0x7eb2d314
  4260f0:	dec    eax
  4260f1:	adc    BYTE PTR [esi+0x62],0xc3
  4260f5:	je     0x4260f1
  4260f7:	fldenv [eax+0x3aab7d43]
  4260fd:	jmp    0x42610d
  4260ff:	out    dx,eax
  426100:	cmp    al,0x5a
  426102:	loopne 0x426117
  426104:	jae    0x426175
  426106:	cmp    DWORD PTR [edx],eax
  426108:	repz sti 
  42610a:	sti    
  42610b:	in     eax,0x68
  42610d:	and    al,0x33
  42610f:	add    eax,0x6e15874c
  426114:	xor    DWORD PTR [ebp-0x7b],0x864a1143
  42611b:	in     al,dx
  42611c:	or     eax,0xb9c38991
  426121:	cdq    
  426122:	aad    0x9c
  426124:	mov    eax,ds:0x53466e34
  426129:	(bad)  
  42612b:	and    BYTE PTR [edx+ecx*2+0x5033fe92],cl
  426132:	neg    BYTE PTR [edx+0x492711cd]
  426138:	sbb    edx,edx
  42613a:	not    BYTE PTR [esi+0x12187678]
  426140:	push   0xffffff9c
  426142:	pushf  
  426143:	xchg   ebx,eax
  426144:	add    al,0xbd
  426146:	xchg   edi,eax
  426147:	lods   eax,DWORD PTR ds:[esi]
  426148:	sub    ecx,DWORD PTR [ebx]
  42614a:	(bad)  
  42614b:	lods   eax,DWORD PTR ds:[esi]
  42614c:	jmp    0x426155
  42614e:	mov    ch,0xef
  426150:	ds pop ss
  426152:	pop    edx
  426153:	xchg   DWORD PTR [edi],ecx
  426155:	adc    ebx,esi
  426157:	xchg   edx,eax
  426158:	add    BYTE PTR [esi],bl
  42615a:	pop    ebp
  42615b:	jo     0x426167
  42615d:	ss jo  0x426188
  426160:	or     BYTE PTR [ecx],ah
  426162:	inc    ebp
  426163:	fdiv   DWORD PTR [edi+0x68]
  426166:	push   esi
  426167:	cmp    cl,al
  426169:	icebp  
  42616a:	mov    esp,0x4114f1c3
  42616f:	xlat   BYTE PTR ds:[ebx]
  426170:	cmp    edx,esi
  426172:	dec    ebp
  426173:	call   0xf6e1fef
  426178:	and    dh,bh
  42617a:	cmp    ebx,edi
  42617c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42617e:	outs   dx,BYTE PTR ds:[esi]
  42617f:	in     eax,dx
  426180:	(bad)  
  426181:	(bad)  
  426182:	jp     0x426187
  426184:	lods   al,BYTE PTR ds:[esi]
  426185:	add    BYTE PTR [esi],dh
  426187:	(bad)  
  426188:	repz cmp esi,ebx
  42618b:	les    ecx,FWORD PTR [edi-0x59685487]
  426191:	(bad)  
  426192:	cli    
  426193:	cmp    al,0x9d
  426195:	and    DWORD PTR [esi-0x4389b4c0],0x7e
  42619c:	adc    dl,BYTE PTR [ebx+ecx*8-0x508d3c12]
  4261a3:	sar    BYTE PTR [edx+edi*1],cl
  4261a6:	mov    esp,0x78ee967b
  4261ab:	and    al,0x29
  4261ad:	pusha  
  4261ae:	mul    BYTE PTR [edi]
  4261b0:	jg     0x4261d8
  4261b2:	call   0xc3ff:0xc7ff4f90
  4261b9:	ror    BYTE PTR [eax+0x9a40b22],cl
  4261bf:	ret    0x6cd3
  4261c2:	sub    dh,BYTE PTR [ebx+0x3]
  4261c5:	call   0xd97391c2
  4261ca:	test   eax,0x1cd0356
  4261cf:	push   eax
  4261d0:	mov    al,0x5b
  4261d2:	push   cs
  4261d3:	pop    es
  4261d4:	mov    dl,0xb3
  4261d6:	cld    
  4261d7:	cmp    edx,0xffc841ec
  4261dd:	andps  xmm2,XMMWORD PTR [ecx-0x5d]
  4261e1:	inc    esp
  4261e2:	icebp  
  4261e3:	cli    
  4261e4:	jl     0x426186
  4261e6:	sub    al,0x8f
  4261e8:	(bad)  
  4261e9:	adc    al,0x3b
  4261eb:	xor    ah,ch
  4261ed:	adc    esp,edx
  4261ef:	cmp    eax,DWORD PTR [esi]
  4261f1:	mov    dh,0xf6
  4261f3:	xchg   edx,eax
  4261f4:	xchg   esi,eax
  4261f5:	in     eax,dx
  4261f6:	jae    0x426261
  4261f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261f9:	hlt    
  4261fa:	repnz loopne 0x4261d1
  4261fd:	call   0xe9ed6a61
  426202:	xchg   ecx,eax
  426203:	xchg   ebp,eax
  426204:	jnp    0x4261a5
  426206:	test   dl,cl
  426208:	dec    ebx
  426209:	aaa    
  42620a:	push   ecx
  42620b:	frstor [eax]
  42620d:	xchg   edi,eax
  42620e:	dec    BYTE PTR [esi]
  426210:	push   edx
  426211:	leave  
  426212:	xor    al,0x14
  426214:	lds    ecx,FWORD PTR [eax+0x3]
  426217:	inc    esp
  426218:	jns    0x4261ea
  42621a:	pop    ss
  42621b:	inc    ebp
  42621c:	mov    ss,ebp
  42621e:	sti    
  42621f:	mov    ah,0x9
  426221:	mov    ds:0xf865b0e6,eax
  426226:	push   esi
  426227:	leave  
  426228:	test   eax,0x7760d26f
  42622d:	mov    ebx,0x980e1cd2
  426232:	(bad)  
  426233:	xor    dh,BYTE PTR [eax]
  426235:	div    esp
  426237:	sbb    eax,0x9a98374
  42623c:	xor    eax,DWORD PTR [eax]
  42623e:	cmp    dh,cl
  426240:	mov    eax,ebp
  426242:	xchg   esp,eax
  426243:	out    dx,al
  426244:	(bad)  
  426246:	sub    ah,bh
  426248:	call   DWORD PTR [ecx]
  42624a:	push   ecx
  42624b:	add    al,0x79
  42624d:	push   edx
  42624e:	add    esp,esp
  426250:	inc    esi
  426251:	jb     0x426276
  426253:	xchg   DWORD PTR [eax-0x2],edi
  426256:	addr16 je 0x426282
  426259:	scas   al,BYTE PTR es:[edi]
  42625a:	ret    
  42625b:	fidivr WORD PTR [edx]
  42625d:	ror    BYTE PTR [edx],1
  42625f:	repz (bad) 
  426261:	cmp    DWORD PTR [eax],ecx
  426263:	in     eax,0x51
  426265:	pop    ss
  426266:	and    bh,ch
  426268:	stos   BYTE PTR es:[edi],al
  426269:	jne    0x42624a
  42626b:	pop    edx
  42626c:	jmp    0x323875c6
  426271:	xor    al,0xd3
  426273:	jns    0x426240
  426275:	pop    edx
  426276:	cmp    edx,DWORD PTR [ecx-0x26f16a04]
  42627c:	out    dx,eax
  42627d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42627e:	add    BYTE PTR [eax],al
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	popf   
  42628f:	outs   dx,BYTE PTR ds:[esi]
  426290:	add    BYTE PTR [ecx+0x1dafd],al
  426296:	hlt    
  426297:	add    al,0x0
  426299:	add    BYTE PTR [ecx+esi*1],al
  42629c:	rcl    BYTE PTR [ebp+ecx*1+0xe],1
  4262a0:	mov    eax,0x9dfbcbe3
  4262a5:	sbb    cl,BYTE PTR [ebx-0x71]
  4262a8:	rcr    esp,cl
  4262aa:	retf   
  4262ab:	mov    cl,0x2e
  4262ad:	aaa    
  4262ae:	xor    esp,DWORD PTR [esi]
  4262b0:	jmp    0x4770ce8d
  4262b5:	inc    ecx
  4262b6:	es inc edx
  4262b8:	push   ecx
  4262b9:	stc    
  4262ba:	sbb    bh,0x1
  4262bd:	pop    es
  4262be:	jl     0x42631e
  4262c0:	mov    WORD PTR [ecx],ss
  4262c2:	pop    ecx
  4262c3:	xchg   edi,eax
  4262c4:	sahf   
  4262c5:	ficom  DWORD PTR [ebp+0x6b]
  4262c8:	stc    
  4262c9:	sbb    ebp,esi
  4262cb:	in     eax,dx
  4262cc:	adc    BYTE PTR [edi+ecx*2],cl
  4262cf:	inc    esi
  4262d0:	dec    ebx
  4262d1:	bound  ebx,QWORD PTR ds:0x94f91beb
  4262d7:	sbb    al,BYTE PTR [edi+0x4fb51cdd]
  4262dd:	cmp    dh,BYTE PTR [ecx+0xf1c60a2]
  4262e3:	in     eax,0x66
  4262e5:	dec    ebp
  4262e6:	pop    eax
  4262e7:	pop    es
  4262e8:	mov    bl,0x54
  4262ea:	frstor [edx-0x5ca37ce8]
  4262f0:	or     bl,BYTE PTR [edx]
  4262f2:	mov    ebp,0x7ecb32a3
  4262f7:	mov    BYTE PTR [eax-0x238d374c],bl
  4262fd:	mov    ds:0x958ea181,al
  426302:	ja     0x4262c6
  426304:	mov    ds:0xe8bcba30,al
  426309:	xchg   edx,eax
  42630a:	add    dl,0xc2
  42630d:	lods   al,BYTE PTR ds:[esi]
  42630e:	mov    BYTE PTR ds:[ebp-0x4e],ah
  426312:	cdq    
  426313:	ret    0x770b
  426316:	xchg   DWORD PTR [edx+0x2a],ecx
  426319:	jge    0x426359
  42631b:	xchg   edi,eax
  42631c:	hlt    
  42631d:	push   es
  42631e:	push   cs
  42631f:	add    BYTE PTR [ebx+0x1916cec5],0xd8
  426326:	inc    edi
  426327:	inc    esi
  426328:	pop    edi
  426329:	cwde   
  42632a:	add    DWORD PTR [ebp+0x73],eax
  42632d:	push   ecx
  42632e:	test   DWORD PTR [esi],ebp
  426330:	lahf   
  426331:	jecxz  0x426327
  426333:	xchg   DWORD PTR [edx+0x43],esi
  426336:	push   edx
  426337:	(bad)  [esi]
  426339:	outs   dx,BYTE PTR ds:[esi]
  42633a:	xchg   esp,eax
  42633b:	js     0x42633d
  42633d:	sbb    eax,0x457f9160
  426342:	adc    dl,BYTE PTR [ebx]
  426344:	(bad)  
  426345:	stos   BYTE PTR es:[edi],al
  426346:	xor    BYTE PTR [edx+edi*1-0x6e07364],0xc3
  42634e:	or     ebp,DWORD PTR [ebx+0x30]
  426351:	(bad)  
  426352:	aad    0x73
  426354:	popa   
  426355:	add    BYTE PTR [edx],0x34
  426358:	sbb    al,0x10
  42635a:	push   cs
  42635b:	pop    esi
  42635c:	jo     0x4262ea
  42635e:	mov    al,ds:0x8a350858
  426363:	pop    ebp
  426364:	add    eax,0x76fe4536
  426369:	in     al,0x3e
  42636b:	add    eax,0xc0b21df7
  426370:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  426372:	sub    esi,esi
  426374:	adc    DWORD PTR [ebp-0x74c90293],esi
  42637a:	js     0x426367
  42637c:	mov    ecx,0x4498e96b
  426381:	fwait
  426382:	and    ah,al
  426384:	les    edi,FWORD PTR [ebx-0x4d]
  426387:	jbe    0x4263f1
  426389:	push   ebx
  42638a:	in     eax,dx
  42638b:	adc    al,0xee
  42638d:	scas   al,BYTE PTR es:[edi]
  42638e:	adc    eax,esi
  426390:	or     ecx,eax
  426392:	cdq    
  426393:	js     0x42640b
  426395:	fmul   st(3),st
  426397:	adc    DWORD PTR [bx+si-0x267e],0xf77d0b6d
  4263a0:	rol    DWORD PTR [esi+edx*2+0x693821cb],cl
  4263a7:	in     eax,0x48
  4263a9:	cmc    
  4263aa:	xor    bh,BYTE PTR [ecx-0x72]
  4263ad:	dec    esp
  4263ae:	jo     0x4263dc
  4263b0:	and    edx,DWORD PTR [edx-0x2f24cd6a]
  4263b6:	shl    DWORD PTR ds:0xc752211c,1
  4263bc:	cld    
  4263bd:	ins    DWORD PTR es:[edi],dx
  4263be:	test   BYTE PTR [edx-0x50dc22fe],dh
  4263c4:	lods   al,BYTE PTR ds:[esi]
  4263c5:	sub    eax,0x46ee84b3
  4263ca:	data16 mov ah,0x50
  4263cd:	scas   al,BYTE PTR es:[edi]
  4263ce:	pop    ebp
  4263cf:	cdq    
  4263d0:	mov    al,ds:0xbb1eb814
  4263d5:	fnstcw WORD PTR [ebx]
  4263d7:	cmp    al,0xb8
  4263d9:	shl    dh,0x29
  4263dc:	dec    esi
  4263dd:	in     al,dx
  4263de:	out    dx,eax
  4263df:	hlt    
  4263e0:	mov    dh,0xc1
  4263e2:	adc    al,BYTE PTR [edi-0x23]
  4263e5:	test   eax,0x7dc8a1ae
  4263ea:	pop    es
  4263eb:	cmp    BYTE PTR [edi],0x28
  4263ee:	cs and ebp,edi
  4263f1:	jbe    0x426411
  4263f3:	mov    ecx,?
  4263f5:	out    0xfa,eax
  4263f7:	cli    
  4263f8:	mov    edx,0x4a06b7a6
  4263fd:	sub    eax,0x861aac22
  426402:	test   DWORD PTR [ecx],0x1a9643e0
  426408:	push   cs
  426409:	std    
  42640a:	xor    edi,DWORD PTR [edx-0x4dffb27f]
  426410:	clc    
  426411:	inc    esp
  426412:	pusha  
  426413:	das    
  426414:	mov    bl,0x33
  426416:	sbb    ah,bl
  426418:	test   al,0x5e
  42641a:	jo     0x426463
  42641c:	dec    ebx
  42641d:	jne    0x426488
  42641f:	add    al,0x67
  426421:	mov    bl,0xed
  426423:	push   ecx
  426424:	addr16 pushf 
  426426:	nop
  426427:	addr16 and eax,ecx
  42642a:	jae    0x4263ce
  42642c:	xchg   edi,eax
  42642d:	hlt    
  42642e:	dec    edi
  42642f:	ror    ah,cl
  426431:	push   ss
  426432:	pop    esp
  426433:	(bad)  
  426434:	fstp   TBYTE PTR [esi+0x50]
  426437:	out    0xac,eax
  426439:	mov    esi,0x2a9c426a
  42643e:	sbb    al,BYTE PTR [ebp-0x2f]
  426441:	(bad)  
  426442:	jecxz  0x426476
  426444:	(bad)  
  426445:	adc    BYTE PTR [edx+0x6cea532e],dl
  42644b:	mov    bh,0x3e
  42644d:	or     BYTE PTR [edi],0x9f
  426450:	cdq    
  426451:	push   ebx
  426452:	stos   BYTE PTR es:[edi],al
  426453:	dec    edi
  426454:	add    ah,BYTE PTR [ecx-0x28337a58]
  42645a:	ins    BYTE PTR es:[edi],dx
  42645b:	sub    DWORD PTR [ebx],eax
  42645d:	push   ds
  42645e:	push   0xffffffd3
  426460:	or     edx,DWORD PTR [edi-0x7a]
  426463:	jb     0x426470
  426465:	nop
  426466:	mov    ah,0x81
  426468:	fnstenv [edx+0x7099c7d4]
  42646e:	retf   
  42646f:	sbb    DWORD PTR [ecx+0x1e],esi
  426472:	push   eax
  426473:	sub    DWORD PTR [ecx+0x6d7269ac],ebp
  426479:	loope  0x4264c6
  42647b:	add    edx,0xc3aae1fd
  426481:	mov    ds:0x483dd642,eax
  426486:	fistp  WORD PTR [ecx+ecx*2+0x10]
  42648a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42648b:	adc    edi,DWORD PTR [ebx]
  42648d:	adc    ch,BYTE PTR [edi+ebp*2-0x3edaf5a9]
  426494:	bnd jae 0x426464
  426497:	test   eax,0xe695e5fb
  42649c:	jp     0x42650b
  42649e:	sub    ch,BYTE PTR fs:[edx+0x3d24ebde]
  4264a5:	jnp    0x42649f
  4264a7:	mov    DWORD PTR [edi+0x1c],esp
  4264aa:	jno    0x4264d7
  4264ac:	sub    eax,0x4a0a470
  4264b1:	mov    cl,0x8a
  4264b3:	add    BYTE PTR [ebx-0x4d],0x44
  4264b7:	cmp    DWORD PTR [esi],edi
  4264b9:	adc    al,0x59
  4264bb:	push   eax
  4264bc:	jp     0x42648e
  4264be:	xor    bh,BYTE PTR [eax]
  4264c0:	jbe    0x426514
  4264c2:	pushf  
  4264c3:	fidiv  WORD PTR [eax]
  4264c5:	fiadd  DWORD PTR [bx+di-0x5b44]
  4264ca:	std    
  4264cb:	inc    ecx
  4264cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264cd:	out    0x7d,al
  4264cf:	sahf   
  4264d0:	jecxz  0x426549
  4264d2:	and    al,0x30
  4264d4:	pop    esp
  4264d5:	push   ss
  4264d6:	rol    BYTE PTR [eax],1
  4264d8:	sahf   
  4264d9:	mov    bh,0xea
  4264db:	pop    edx
  4264dc:	sub    al,0x37
  4264de:	sub    eax,0xaf79bac2
  4264e3:	mov    al,0x73
  4264e5:	test   eax,0x89d52cd6
  4264ea:	jmp    0x42654e
  4264ec:	lock fdiv DWORD PTR [ebx]
  4264ef:	icebp  
  4264f0:	sbb    DWORD PTR [edi-0x502697e],esi
  4264f6:	or     al,0xce
  4264f8:	imul   ebp
  4264fa:	mov    al,ds:0xf5a93da7
  4264ff:	cwde   
  426500:	repnz stos BYTE PTR es:[edi],al
  426502:	adc    bh,al
  426504:	xor    eax,0x6254992d
  426509:	xchg   ebx,eax
  42650a:	cwde   
  42650b:	sbb    BYTE PTR [ebx-0x2],dl
  42650e:	pop    esp
  42650f:	mov    ds:0x792efb2a,al
  426514:	mov    edx,0x1e0975f8
  426519:	push   0x8
  42651b:	sub    al,0x6f
  42651d:	jmp    0x42653c
  42651f:	push   cs
  426520:	loopne 0x4264bd
  426522:	in     al,0xb3
  426524:	call   0x3fba:0x296a824f
  42652b:	mov    eax,0x9a6fc595
  426530:	fistp  QWORD PTR [eax-0x42]
  426533:	test   DWORD PTR [ebx-0x2205a4ac],edi
  426539:	mov    bh,BYTE PTR ds:0x1504b738
  42653f:	retf   
  426540:	mov    bl,0x6b
  426542:	outs   dx,BYTE PTR ds:[esi]
  426543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426544:	in     al,0x29
  426546:	cmp    cl,BYTE PTR ds:0x50e64b2e
  42654c:	test   eax,0x2593a8e0
  426551:	mov    edi,0x23f35de4
  426556:	cli    
  426557:	push   ds
  426558:	dec    DWORD PTR [eax+0x2ff67461]
  42655e:	add    eax,0x838c3ff4
  426563:	(bad)  
  426564:	arpl   WORD PTR [esi],dx
  426566:	cdq    
  426567:	xor    al,0x35
  426569:	imul   ecx,DWORD PTR [edi-0x79],0x750ed35c
  426570:	test   BYTE PTR [ebx+0x3e],0x95
  426574:	xor    eax,0xfc5ddbc9
  426579:	jo     0x426517
  42657b:	or     esi,DWORD PTR cs:[eax]
  42657e:	push   ds
  42657f:	cs mov ebx,0xd3edf29
  426585:	inc    eax
  426586:	and    eax,DWORD PTR [ecx]
  426588:	mov    BYTE PTR ss:[esp+edx*2],ah
  42658c:	fdivp  st(5),st
  42658e:	pop    ds
  42658f:	mov    al,ds:0xa3f94a3c
  426594:	in     eax,0xfc
  426596:	shl    edi,cl
  426598:	fidivr DWORD PTR [edx+0x13147d98]
  42659e:	jmp    0x1c4274d9
  4265a3:	imul   ecx,DWORD PTR [ebx-0x41],0xc2df61f6
  4265aa:	icebp  
  4265ab:	inc    ebx
  4265ac:	fidivr DWORD PTR [edx]
  4265ae:	std    
  4265af:	push   ss
  4265b0:	out    0x60,eax
  4265b2:	pop    edx
  4265b3:	sar    BYTE PTR [ebp-0x5967d557],1
  4265b9:	in     eax,dx
  4265ba:	and    al,0x5
  4265bc:	into   
  4265bd:	popf   
  4265be:	mov    ebp,0x83757aa9
  4265c3:	hlt    
  4265c4:	mov    ds:0x94188a4,al
  4265c9:	xor    DWORD PTR [ebp+0x0],edx
  4265cc:	aas    
  4265cd:	(bad)  
  4265ce:	js     0x426550
  4265d0:	jae    0x4265a2
  4265d2:	in     al,0xe1
  4265d4:	pushf  
  4265d5:	jmp    0xda55e884
  4265da:	ss int3 
  4265dc:	pop    edx
  4265dd:	cmc    
  4265de:	sbb    eax,DWORD PTR [ecx-0x3f06fcf2]
  4265e4:	call   FWORD PTR [edx-0x4c]
  4265e7:	push   cs
  4265e8:	or     edi,0x47c0a548
  4265ee:	or     eax,0x80290ff0
  4265f3:	jns    0x42661c
  4265f5:	adc    al,0xb0
  4265f7:	jmp    0x7248:0xc7163f1d
  4265fe:	in     al,0x36
  426600:	out    0xfb,al
  426602:	sub    al,0x4d
  426604:	cmp    BYTE PTR [ecx+ecx*2+0x74],al
  426608:	in     eax,0x15
  42660a:	rcr    BYTE PTR [esi+ebp*4-0x5c],0xb8
  42660f:	shr    DWORD PTR [eax+0x22],0x5a
  426613:	and    eax,0xddd07810
  426618:	jae    0x426620
  42661a:	ja     0x4265ea
  42661c:	aas    
  42661d:	pop    esp
  42661e:	inc    edx
  42661f:	sbb    esp,DWORD PTR [edx-0x5c]
  426622:	aas    
  426623:	int    0xe3
  426625:	mov    edi,0xa7db43bb
  42662b:	dec    eax
  42662c:	mov    edi,0x820ff217
  426631:	rcl    BYTE PTR [edi],0x7c
  426634:	push   ebx
  426635:	mov    eax,0x3d850341
  42663a:	aaa    
  42663b:	stos   BYTE PTR es:[edi],al
  42663c:	scas   eax,DWORD PTR es:[edi]
  42663d:	std    
  42663e:	mov    dh,0x12
  426640:	imul   edi,eax,0x71
  426643:	push   0xffffffbe
  426645:	ret    
  426646:	imul   ebp,esi,0xffffff87
  426649:	dec    ebx
  42664a:	fild   DWORD PTR [ebx]
  42664c:	and    BYTE PTR ds:0xda929cac,dl
  426652:	stos   DWORD PTR es:[edi],eax
  426653:	es jge 0x426607
  426656:	iret   
  426657:	or     esp,DWORD PTR [ebx]
  426659:	rcl    DWORD PTR ds:0x7e9c46e9,0x55
  426660:	imul   esp,DWORD PTR [ebx-0xb],0xfffffff1
  426664:	ds cwde 
  426666:	xor    DWORD PTR [esi+0x23],esi
  426669:	and    al,0x69
  42666b:	in     eax,dx
  42666c:	daa    
  42666d:	lds    esi,FWORD PTR [eax-0x17]
  426670:	push   cs
  426671:	cs dec edx
  426673:	or     eax,0x59622c31
  426678:	sub    BYTE PTR [ecx+0x1f],bl
  42667b:	jns    0x42667c
  42667d:	arpl   ax,ax
  42667f:	pop    esp
  426680:	mov    eax,ds:0x837b9398
  426685:	es ret 
  426687:	out    0x98,al
  426689:	cmp    BYTE PTR [edx-0x4449b89b],ah
  42668f:	(bad)  
  426691:	mov    eax,ds:0x2a048597
  426696:	lea    eax,[esi]
  426698:	push   edi
  426699:	or     edi,DWORD PTR [ecx]
  42669b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42669c:	mov    BYTE PTR [esi],cl
  42669e:	mov    ebx,0x2351781c
  4266a3:	jmp    0x83d96bef
  4266a8:	sbb    DWORD PTR [ecx-0x49],edx
  4266ab:	popf   
  4266ac:	sar    DWORD PTR [eax],cl
  4266ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266af:	fucomi st,st(2)
  4266b1:	cmp    esi,ecx
  4266b3:	jp     0x4266b2
  4266b5:	and    esi,DWORD PTR [edi]
  4266b7:	jb     0x426732
  4266b9:	inc    edx
  4266ba:	dec    eax
  4266bb:	lea    esp,[edi+0x41]
  4266be:	mov    bl,0x20
  4266c0:	adc    esi,esi
  4266c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266c3:	test   al,0x8d
  4266c5:	sub    al,0xa4
  4266c7:	pushf  
  4266c8:	push   eax
  4266c9:	outs   dx,BYTE PTR ds:[esi]
  4266ca:	daa    
  4266cb:	fsubr  DWORD PTR [esi-0x97b6f73]
  4266d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266d2:	pop    esp
  4266d3:	add    cl,BYTE PTR [ebx]
  4266d5:	xor    eax,0xe2a3a4da
  4266da:	xor    eax,esi
  4266dc:	sub    eax,0xa127d4e2
  4266e1:	xor    bl,dl
  4266e3:	cmp    DWORD PTR ds:0xaa63fc18,esp
  4266e9:	xor    ecx,DWORD PTR [ecx+edx*1]
  4266ec:	xchg   DWORD PTR [edx-0x19bfa60f],ecx
  4266f2:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4266f4:	push   esi
  4266f5:	adc    edi,esp
  4266f7:	stos   DWORD PTR es:[edi],eax
  4266f8:	cmp    bl,BYTE PTR [ebx+0x624984c8]
  4266fe:	mov    ds:0x39781a68,al
  426703:	ret    
  426704:	mov    dh,0xe1
  426706:	arpl   WORD PTR [ecx],di
  426708:	fiadd  DWORD PTR [ecx+ebp*8-0x54]
  42670c:	sbb    edx,DWORD PTR [ebx]
  42670e:	in     eax,0x15
  426710:	loop   0x42676a
  426712:	popa   
  426713:	je     0x42674e
  426715:	and    al,0x57
  426717:	jb     0x4266e0
  426719:	pop    esi
  42671a:	pop    edx
  42671b:	call   0xa494:0x9dc4a2e
  426722:	ja     0x4266c2
  426724:	lahf   
  426725:	push   ecx
  426726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426727:	sar    DWORD PTR [ebp-0x1e02fff2],0x4e
  42672e:	or     eax,0x49966fb3
  426733:	jecxz  0x42674f
  426735:	js     0x42675f
  426737:	aad    0xde
  426739:	pop    es
  42673a:	imul   esp,DWORD PTR [esi-0x59],0xb586d3fd
  426741:	lods   eax,DWORD PTR ds:[esi]
  426742:	stos   BYTE PTR es:[edi],al
  426743:	ffree  st(6)
  426745:	jne    0x426767
  426747:	sbb    DWORD PTR ds:0xa2387380,0x6015b707
  426751:	mov    edi,0xd00e27aa
  426756:	push   0x7e61565c
  42675b:	mov    al,ds:0x13d2e5ef
  426760:	in     eax,0x93
  426762:	add    BYTE PTR [edi],ah
  426764:	push   edi
  426765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426766:	fwait
  426767:	and    dl,BYTE PTR [esi-0x567fbdaf]
  42676d:	sbb    ebx,DWORD PTR [edi]
  42676f:	sub    edx,esp
  426771:	push   esi
  426772:	(bad)  
  426773:	test   BYTE PTR [eax+ecx*1-0x6bed098d],0x77
  42677b:	imul   esi,DWORD PTR ds:0xe34acc18,0x2e346dae
  426785:	and    eax,0x1991cc68
  42678a:	push   ebp
  42678b:	jge    0x4267d7
  42678d:	lahf   
  42678e:	add    BYTE PTR [eax],al
  426790:	add    BYTE PTR [eax],al
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	cmp    bl,bl
  4267a0:	jecxz  0x4267fb
  4267a2:	icebp  
  4267a3:	fild   WORD PTR [ecx]
  4267a5:	add    ah,dh
  4267a7:	add    al,0x0
  4267a9:	add    bh,ch
  4267ab:	push   edx
  4267ac:	cmp    al,0x12
  4267ae:	mov    ecx,0xe756fefa
  4267b3:	jg     0x4267ef
  4267b5:	fxam   
  4267b7:	les    ebx,FWORD PTR [edx+0x18d53ef2]
  4267bd:	fild   DWORD PTR ds:0x182d9e18
  4267c3:	push   cs
  4267c4:	out    dx,eax
  4267c5:	jne    0x426749
  4267c7:	fcomp  DWORD PTR ds:0x3601982f
  4267cd:	or     al,cl
  4267cf:	shl    DWORD PTR [ebp+0x29],0xc7
  4267d3:	mov    ah,0x53
  4267d5:	inc    esp
  4267d6:	(bad)  
  4267d7:	push   0x7
  4267d9:	push   esp
  4267da:	ins    DWORD PTR es:[edi],dx
  4267db:	ror    BYTE PTR [edi-0x7a],1
  4267de:	les    esp,FWORD PTR [ebp-0x2c]
  4267e1:	push   0x720cfb3a
  4267e6:	cdq    
  4267e7:	xor    BYTE PTR [esi+0x1aaada14],0x3c
  4267ee:	cdq    
  4267ef:	out    0xb9,al
  4267f1:	in     al,0x32
  4267f3:	(bad)  
  4267f4:	cdq    
  4267f5:	push   ecx
  4267f6:	adc    esp,DWORD PTR [edx-0x4440d1c0]
  4267fc:	aas    
  4267fd:	push   ebx
  4267fe:	jmp    0xba9d:0x1ca308e5
  426805:	test   al,0xd1
  426807:	adc    ah,dh
  426809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42680a:	fdivr  st,st(3)
  42680c:	jg     0x42686e
  42680e:	adc    DWORD PTR [ebx],edi
  426810:	xchg   edx,eax
  426811:	dec    edi
  426812:	test   al,0xba
  426814:	adc    BYTE PTR [ecx],al
  426816:	stos   BYTE PTR es:[edi],al
  426817:	add    DWORD PTR ds:0x72fea3c5,0x6a
  42681e:	fwait
  42681f:	push   ebx
  426820:	mov    ds:0xab522505,al
  426825:	or     dh,ch
  426827:	ss je  0x42683e
  42682a:	rol    DWORD PTR [esi],1
  42682c:	(bad)  
  42682d:	shr    BYTE PTR [ebx],1
  42682f:	or     al,0xef
  426831:	fmul   DWORD PTR [edi-0x6ffea629]
  426837:	sub    eax,DWORD PTR gs:[esi-0x417ee11]
  42683e:	pop    esp
  42683f:	mov    ds:0xfc2fd569,al
  426844:	(bad)  
  426845:	out    0xba,eax
  426847:	les    edx,FWORD PTR [eax+edx*1+0x7903fbd1]
  42684e:	das    
  42684f:	cmp    eax,0xfc0c61ea
  426854:	in     eax,0x3e
  426856:	icebp  
  426857:	cmp    ecx,DWORD PTR [ecx-0x17]
  42685a:	leave  
  42685b:	or     eax,DWORD PTR [ecx+0x6fd7e328]
  426861:	test   BYTE PTR [esi],ah
  426863:	iret   
  426864:	arpl   ax,dx
  426866:	or     DWORD PTR ds:0xef2d9f9a,eax
  42686c:	xchg   edx,eax
  42686d:	jmp    0x9322a6f4
  426872:	jnp    0x42681e
  426874:	push   cs
  426875:	push   esi
  426876:	cs test ebx,edx
  426879:	mov    esi,DWORD PTR [edi]
  42687b:	pusha  
  42687c:	pop    ebx
  42687d:	xor    al,0x3
  42687f:	mov    eax,ds:0xde19b024
  426884:	jp     0x426818
  426886:	cdq    
  426887:	outs   dx,DWORD PTR ds:[esi]
  426888:	push   esp
  426889:	ret    0xec2e
  42688c:	adc    BYTE PTR [edx],dl
  42688e:	or     DWORD PTR [ebx+0x1828689],esi
  426894:	push   cs
  426895:	shl    DWORD PTR [esi-0x2ec360d4],0x5e
  42689c:	xchg   edi,eax
  42689d:	push   esi
  42689e:	arpl   si,cx
  4268a0:	xor    esi,DWORD PTR [eax+0x360c14a5]
  4268a6:	rcr    BYTE PTR [edi-0x18770128],0x42
  4268ad:	xor    eax,0x5f6cdb28
  4268b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268b3:	ins    DWORD PTR es:[edi],dx
  4268b4:	xor    eax,0x50ed1071
  4268b9:	push   0x56
  4268bb:	add    al,ch
  4268bd:	push   esp
  4268be:	pusha  
  4268bf:	test   DWORD PTR [ebx+0x3e2e891d],ebx
  4268c5:	aas    
  4268c6:	out    dx,eax
  4268c7:	adc    DWORD PTR [ebp-0x17d338a9],esp
  4268cd:	out    0xd,al
  4268cf:	ja     0x426930
  4268d1:	cmp    al,0x8b
  4268d3:	into   
  4268d4:	sub    DWORD PTR [esi-0x45abc069],esi
  4268da:	sub    cl,BYTE PTR [edx-0x70adc9bf]
  4268e0:	jbe    0x4268e2
  4268e2:	push   eax
  4268e3:	sahf   
  4268e4:	jae    0x426930
  4268e6:	loopne 0x4268b0
  4268e8:	shl    cl,1
  4268ea:	and    al,BYTE PTR [eax+0x1e]
  4268ed:	jo     0x426870
  4268ef:	fs push edi
  4268f1:	scas   al,BYTE PTR es:[edi]
  4268f2:	jo     0x426959
  4268f4:	in     al,dx
  4268f5:	cwde   
  4268f6:	fsubr  st,st(0)
  4268f8:	lock sbb al,BYTE PTR [ebx+0x73]
  4268fc:	inc    ebx
  4268fd:	sbb    ah,BYTE PTR [ebx-0x45b3256a]
  426903:	sbb    dh,BYTE PTR [esp+esi*1-0x2c]
  426907:	cmp    al,0xc0
  426909:	dec    edx
  42690a:	pop    ecx
  42690b:	jp     0x426963
  42690d:	xchg   BYTE PTR [esi-0x30],bh
  426910:	enter  0xcddb,0xce
  426914:	mov    ebp,0x3f6e1368
  426919:	jo     0x4268e1
  42691b:	in     eax,dx
  42691c:	hlt    
  42691d:	es loope 0x426999
  426920:	jge    0x42698e
  426922:	iret   
  426923:	xor    edi,edx
  426925:	nop
  426926:	mov    ecx,0xe168384f
  42692b:	pop    edi
  42692c:	lock jns 0x4268b4
  42692f:	jns    0x426980
  426931:	and    BYTE PTR [eax+0x7480276d],dl
  426937:	rol    DWORD PTR [eax+0x3c],0x63
  42693b:	push   esp
  42693c:	test   BYTE PTR [edi],0x77
  42693f:	jbe    0x42693e
  426941:	lahf   
  426942:	bound  eax,QWORD PTR [esi]
  426944:	mov    esp,esi
  426946:	mov    dh,0xf4
  426948:	retf   
  426949:	push   cs
  42694a:	in     eax,0x82
  42694c:	push   esi
  42694d:	(bad)  
  42694e:	and    al,0x78
  426950:	push   ebp
  426951:	mov    bh,0x71
  426953:	imul   ecx,DWORD PTR [ecx],0xffffffcb
  426956:	(bad)  
  426957:	rol    BYTE PTR [edx],1
  426959:	ret    0x59fa
  42695c:	mov    ds:0x6b780771,al
  426961:	das    
  426962:	jne    0x4268ea
  426964:	push   cs
  426965:	test   al,0x91
  426967:	mov    WORD PTR [eax*1+0x549cbbd8],fs
  42696e:	mov    bh,0x6
  426970:	pop    ebp
  426971:	sbb    BYTE PTR es:[ecx+edi*1-0x4f],0x92
  426977:	inc    eax
  426978:	sbb    ebp,DWORD PTR [eax-0x57c69171]
  42697e:	(bad)  
  42697f:	(bad)  
  426980:	ins    BYTE PTR es:[edi],dx
  426981:	jmp    0x61a1:0x84c57a5f
  426988:	pop    esi
  426989:	in     eax,dx
  42698a:	dec    ebp
  42698b:	inc    edx
  42698c:	add    al,0x4
  42698e:	adc    al,0x7d
  426990:	aaa    
  426991:	scas   eax,DWORD PTR es:[edi]
  426992:	pop    edx
  426993:	adc    al,BYTE PTR [ecx+0x66]
  426996:	js     0x426a0e
  426998:	push   eax
  426999:	js     0x4269e1
  42699b:	ss xor eax,0x789ad8ad
  4269a1:	jb     0x426a06
  4269a3:	sub    al,0x54
  4269a5:	jl     0x426984
  4269a7:	xlat   BYTE PTR ds:[ebx]
  4269a8:	pop    ds
  4269a9:	lds    ebx,FWORD PTR [ecx-0x66056bc9]
  4269af:	ja     0x426932
  4269b1:	xchg   ebx,eax
  4269b2:	(bad)  
  4269b3:	aam    0xaf
  4269b5:	je     0x4269d3
  4269b7:	mov    ch,0xfa
  4269b9:	and    al,0xc3
  4269bb:	or     DWORD PTR ds:0xf67c863e,edx
  4269c1:	imul   ecx,DWORD PTR [esi],0xd0c07e98
  4269c7:	fmul   DWORD PTR [ebx-0x4eafbd17]
  4269cd:	push   esp
  4269ce:	aad    0xd4
  4269d0:	jl     0x426a4e
  4269d2:	mov    edx,0x95b87591
  4269d7:	push   edx
  4269d8:	sbb    eax,0x7bcfa32a
  4269dd:	and    esp,ecx
  4269df:	inc    DWORD PTR [ecx]
  4269e1:	push   ds
  4269e2:	cdq    
  4269e3:	popa   
  4269e4:	dec    esi
  4269e5:	lds    esi,FWORD PTR [esi-0x12]
  4269e8:	mov    edx,0x8688c306
  4269ed:	cs repz xchg esp,eax
  4269f0:	ins    DWORD PTR es:[edi],dx
  4269f1:	adc    ch,BYTE PTR [ebx]
  4269f3:	std    
  4269f4:	cmp    esi,esi
  4269f6:	icebp  
  4269f7:	out    0xf4,al
  4269f9:	sub    ecx,DWORD PTR [edi+edi*8]
  4269fc:	jp     0x426a14
  4269fe:	nop
  4269ff:	pop    ebp
  426a00:	sbb    al,0x61
  426a02:	imul   DWORD PTR [edx-0x42fb576e]
  426a08:	repz lahf 
  426a0a:	es sub al,0x12
  426a0d:	cmp    al,0x1a
  426a0f:	push   ebx
  426a10:	or     esp,DWORD PTR [bp+si+0x61b5]
  426a15:	mov    edi,0xa5589f61
  426a1a:	fisub  WORD PTR [edi-0x2a]
  426a1d:	ret    0xb5dc
  426a20:	push   ebx
  426a21:	jo     0x426a02
  426a23:	mov    eax,ds:0x310a9e44
  426a28:	and    ebp,ebp
  426a2a:	lock les edi,FWORD PTR [edi+0x633644b1]
  426a31:	add    DWORD PTR [ecx+0x17],esi
  426a34:	inc    eax
  426a35:	sub    ecx,DWORD PTR [edx+eiz*8+0x6b]
  426a39:	pop    edx
  426a3a:	push   ebx
  426a3b:	push   esi
  426a3c:	adc    al,0x5a
  426a3e:	sbb    BYTE PTR [edi-0x45],dh
  426a41:	xchg   esp,eax
  426a42:	ror    BYTE PTR [edi-0x1b6a20df],0x0
  426a49:	fs inc edx
  426a4b:	pop    ss
  426a4c:	xchg   edi,eax
  426a4d:	push   ebp
  426a4e:	scas   al,BYTE PTR es:[edi]
  426a4f:	pop    edx
  426a50:	push   cs
  426a51:	cmp    DWORD PTR [ebx],0x3a
  426a54:	xlat   BYTE PTR ds:[ebx]
  426a55:	jg     0x426a0f
  426a57:	aaa    
  426a58:	cmp    BYTE PTR [eax-0x79b45d84],bl
  426a5e:	pop    esp
  426a5f:	sub    BYTE PTR [ebx],dl
  426a61:	sub    ch,cl
  426a63:	jns    0x426ac8
  426a65:	add    ebp,DWORD PTR [eax-0x6ed244b9]
  426a6b:	int    0xf2
  426a6d:	adc    eax,0xf38bc750
  426a72:	push   edi
  426a73:	cmp    ebx,DWORD PTR [eax+esi*2]
  426a76:	sahf   
  426a77:	in     al,dx
  426a78:	xor    DWORD PTR [esi*4-0x4107da91],esi
  426a7f:	fild   QWORD PTR [edi-0x5aa75ab6]
  426a85:	add    esi,DWORD PTR [eax+0x79257cab]
  426a8b:	imul   edi,DWORD PTR [ecx+0x17],0xf
  426a8f:	add    edx,DWORD PTR [edi]
  426a91:	cli    
  426a92:	cld    
  426a93:	imul   ecx,DWORD PTR [edi+0x77],0x915db747
  426a9a:	dec    edx
  426a9b:	sub    eax,0x8a79f800
  426aa0:	cmp    BYTE PTR [ebx+0x2b],bh
  426aa3:	pop    edx
  426aa4:	call   DWORD PTR [edx]
  426aa6:	push   ebx
  426aa7:	mov    WORD PTR [edx],ds
  426aa9:	hlt    
  426aaa:	jg     0x426b0a
  426aac:	xor    al,0xc8
  426aae:	dec    esi
  426aaf:	and    DWORD PTR [ecx],0x4c316ad7
  426ab5:	push   ss
  426ab6:	ins    BYTE PTR es:[edi],dx
  426ab7:	xchg   ecx,eax
  426ab8:	sub    BYTE PTR [edi+0x29],0xd6
  426abc:	shr    DWORD PTR [ebp+ebp*8+0x7d3625a1],cl
  426ac3:	push   es
  426ac4:	xor    cl,dl
  426ac6:	repnz mov ecx,0x3c0fd968
  426acc:	and    BYTE PTR [bx+di+0x5b2f],dh
  426ad1:	add    ecx,ecx
  426ad3:	dec    eax
  426ad4:	fisttp WORD PTR [edx-0x32202350]
  426ada:	out    0x28,eax
  426adc:	pop    ds
  426add:	ffree  st(2)
  426adf:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ae1:	add    ch,0x70
  426ae4:	scas   al,BYTE PTR es:[edi]
  426ae5:	jb     0x426b31
  426ae7:	fist   WORD PTR [edi]
  426ae9:	mov    edi,0xe559d93f
  426aee:	ins    DWORD PTR es:[edi],dx
  426aef:	jb     0x426ab3
  426af1:	sbb    bl,dh
  426af3:	pop    ebp
  426af4:	clc    
  426af5:	stos   BYTE PTR es:[edi],al
  426af6:	(bad)  
  426af8:	sti    
  426af9:	xor    al,0xa5
  426afb:	jmp    0xa9b0ee19
  426b00:	jno    0x426b81
  426b02:	cdq    
  426b03:	popf   
  426b04:	jl     0x426ac5
  426b06:	cmp    edx,DWORD PTR [eax+0x69bf5fe7]
  426b0c:	jns    0x426b29
  426b0e:	push   cs
  426b0f:	mov    dl,0x24
  426b11:	xor    ch,BYTE PTR [ecx+0x239d8b85]
  426b17:	outs   dx,BYTE PTR ds:[esi]
  426b18:	push   ecx
  426b19:	or     DWORD PTR [esi-0x5c8d4422],ebx
  426b1f:	push   ebx
  426b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b21:	push   0x5b
  426b23:	sub    al,ch
  426b25:	sti    
  426b26:	bound  eax,QWORD PTR [ebx+0x49]
  426b29:	out    dx,al
  426b2a:	xchg   ebx,eax
  426b2b:	dec    ecx
  426b2c:	sbb    BYTE PTR [ecx],dh
  426b2e:	sahf   
  426b2f:	mov    esp,0xb29affd9
  426b34:	sbb    eax,0x32eb8d91
  426b39:	sub    BYTE PTR [esi],dl
  426b3b:	or     eax,edi
  426b3d:	(bad)  
  426b3e:	scas   eax,DWORD PTR es:[edi]
  426b3f:	int3   
  426b40:	mov    al,0x2c
  426b42:	push   eax
  426b43:	bound  eax,QWORD PTR [edx-0x20]
  426b46:	imul   ecx,edi,0xfffffff3
  426b49:	jg     0x426ba8
  426b4b:	inc    edx
  426b4c:	cmp    ebp,ecx
  426b4e:	psrlw  mm2,mm7
  426b51:	inc    ebx
  426b52:	inc    ecx
  426b53:	nop
  426b54:	inc    edx
  426b55:	add    ebx,ecx
  426b57:	push   esp
  426b58:	(bad)
  426b5c:	daa    
  426b5d:	dec    eax
  426b5e:	rcr    BYTE PTR [ebp-0x3f4e3c15],0x21
  426b65:	dec    ebx
  426b66:	dec    edx
  426b67:	retf   0xaf61
  426b6a:	mov    WORD PTR [esi+0x4e],ds
  426b6d:	xor    eax,0x5f37c111
  426b72:	sub    cl,BYTE PTR [eax-0x2225437]
  426b78:	xor    ecx,DWORD PTR [eax+0x403fdf1a]
  426b7e:	sbb    al,0x49
  426b80:	cmp    al,0xeb
  426b82:	push   ss
  426b83:	sub    eax,0x932f5f2e
  426b88:	sub    cl,ch
  426b8a:	jecxz  0x426b83
  426b8c:	aas    
  426b8d:	push   ecx
  426b8e:	icebp  
  426b8f:	pop    eax
  426b90:	mov    esp,0x26723a0e
  426b95:	fldcw  WORD PTR [eax]
  426b97:	mov    bl,0x39
  426b99:	sbb    al,0xe4
  426b9b:	push   ebp
  426b9c:	jp     0x426c15
  426b9e:	push   ss
  426b9f:	add    eax,0x202b9e15
  426ba4:	int    0xbc
  426ba6:	push   edi
  426ba7:	or     eax,0xc79419be
  426bac:	dec    eax
  426bad:	and    DWORD PTR [edx+0x61],esi
  426bb0:	add    ebp,eax
  426bb2:	jnp    0x426b3b
  426bb4:	pop    ebx
  426bb5:	inc    edx
  426bb6:	test   DWORD PTR [edi],0x3b1b2472
  426bbc:	inc    esp
  426bbd:	mov    al,ds:0x8318b02b
  426bc2:	ret    0xe02d
  426bc5:	hlt    
  426bc6:	mov    edx,0xf64c87f4
  426bcb:	je     0x426bce
  426bcd:	adc    al,0x1
  426bcf:	xchg   DWORD PTR [eax-0x5a],edi
  426bd2:	pop    es
  426bd3:	sahf   
  426bd4:	aas    
  426bd5:	imul   edi,DWORD PTR [edi+0x6f172f36],0xfffffff8
  426bdc:	(bad)  
  426bdd:	sbb    al,0x90
  426bdf:	pop    eax
  426be0:	je     0x426b89
  426be2:	ds pop edx
  426be4:	xchg   edx,eax
  426be5:	push   esi
  426be6:	ja     0x426bfb
  426be8:	arpl   bp,dx
  426bea:	aad    0x23
  426bec:	push   eax
  426bed:	xchg   ecx,eax
  426bee:	in     eax,0x5f
  426bf0:	mov    bh,0x62
  426bf2:	imul   eax,DWORD PTR [esi-0x73565cfa],0x540543fa
  426bfc:	adc    ebx,ebp
  426bfe:	inc    ecx
  426bff:	ds mov bh,0x7a
  426c02:	dec    esp
  426c03:	adc    BYTE PTR [esi+0x3a],bl
  426c06:	adc    BYTE PTR [eax-0x51],al
  426c09:	(bad)  
  426c0a:	cli    
  426c0b:	fbld   TBYTE PTR [esp+esi*4]
  426c0e:	loopne 0x426bf1
  426c10:	(bad)  
  426c11:	and    edx,eax
  426c13:	mov    ebp,0xe2dda706
  426c18:	xor    BYTE PTR [edx],0xc2
  426c1b:	cmp    esi,edi
  426c1d:	ret    0xab5d
  426c20:	test   DWORD PTR [eax],ecx
  426c22:	push   ds
  426c23:	out    dx,al
  426c24:	dec    ecx
  426c25:	pop    edx
  426c26:	push   cs
  426c27:	ret    
  426c28:	icebp  
  426c29:	fs (bad) 
  426c2b:	js     0x426bad
  426c2d:	mov    ch,0x3a
  426c2f:	cmp    eax,0x1ffb1c92
  426c34:	out    0x5c,al
  426c36:	jle    0x426c62
  426c38:	mov    WORD PTR [eax-0x61],ss
  426c3b:	mov    ebp,0xd80d88a1
  426c40:	cmp    ah,BYTE PTR [ecx]
  426c42:	hlt    
  426c43:	ins    DWORD PTR es:[edi],dx
  426c44:	call   0x7ae6:0x7e68ba37
  426c4b:	or     al,0xf6
  426c4d:	cld    
  426c4e:	sub    ch,0x42
  426c51:	jp     0x426c0f
  426c53:	repz cld 
  426c55:	and    BYTE PTR [ecx-0x3e],dl
  426c58:	push   es
  426c59:	mov    esp,0x48eff24b
  426c5e:	cmp    DWORD PTR [esi+0x63],edx
  426c61:	sar    DWORD PTR ds:0x8b93f97b,1
  426c67:	popa   
  426c68:	into   
  426c69:	cmp    BYTE PTR ds:0x1c90c92f,0xaa
  426c70:	push   esp
  426c71:	std    
  426c72:	pusha  
  426c73:	int3   
  426c74:	xor    DWORD PTR [ecx-0xb3ec896],ebp
  426c7a:	(bad)  
  426c7b:	aam    0x21
  426c7d:	xor    DWORD PTR [esi+0x4789e694],edi
  426c83:	stos   DWORD PTR es:[edi],eax
  426c84:	mov    ch,0x97
  426c86:	jno    0x426cf2
  426c88:	aam    0x9c
  426c8a:	es loop 0x426c11
  426c8d:	mov    es,WORD PTR [esi+0x5c7fa713]
  426c93:	arpl   WORD PTR [ecx+ebx*2],ax
  426c96:	jnp    0x426cb1
  426c98:	je     0x426c57
  426c9a:	push   ebp
  426c9b:	(bad)  
  426c9c:	loope  0x426cb9
  426c9e:	add    BYTE PTR [eax],al
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x6ae88e10],cl
  426caf:	call   0x1:0xe4e59a66
  426cb6:	hlt    
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [edx-0x4098cb24],dl
  426cbf:	jge    0x426c9d
  426cc1:	sub    edi,0xffffffaf
  426cc4:	scas   al,BYTE PTR es:[edi]
  426cc5:	(bad)
  426cc8:	into   
  426cc9:	add    bh,cl
  426ccb:	shld   ecx,esp,0x4
  426ccf:	cmp    eax,DWORD PTR ds:0x73114649
  426cd5:	xor    BYTE PTR [eax-0x6b],al
  426cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cd9:	ficom  DWORD PTR [edx+0x2ee90f5e]
  426cdf:	or     esp,edi
  426ce1:	jns    0x426ccf
  426ce3:	push   ecx
  426ce4:	(bad)
  426ce7:	inc    esi
  426ce8:	stc    
  426ce9:	leave  
  426cea:	mov    DWORD PTR [ecx+0x396bc978],0xbb77be47
  426cf4:	jnp    0x426cc2
  426cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cf7:	push   0xf5e42a59
  426cfc:	adc    DWORD PTR [edi-0x5efe6c57],eax
  426d02:	shl    esi,cl
  426d04:	psubd  mm7,QWORD PTR [ecx+edx*8-0x7a]
  426d09:	jne    0x426d6b
  426d0b:	clc    
  426d0c:	sub    ecx,edi
  426d0e:	gs pop ds
  426d10:	rcl    BYTE PTR [edx+0x5a867f45],1
  426d16:	loop   0x426d48
  426d18:	jmp    0x268c70fe
  426d1d:	fcomp  QWORD PTR [edx+0x494ec86]
  426d23:	in     eax,0x0
  426d25:	aad    0x45
  426d27:	(bad)  
  426d28:	ins    DWORD PTR es:[edi],dx
  426d29:	or     al,0xcf
  426d2b:	pop    eax
  426d2c:	xchg   esi,eax
  426d2d:	sahf   
  426d2e:	push   edi
  426d2f:	aas    
  426d30:	push   ds
  426d31:	(bad)  
  426d32:	int3   
  426d33:	bound  edi,QWORD PTR [ebx+eiz*1+0xe]
  426d37:	daa    
  426d38:	cdq    
  426d39:	arpl   WORD PTR [ebx],bx
  426d3b:	outs   dx,BYTE PTR ds:[esi]
  426d3c:	mov    eax,DWORD PTR [ebx-0x647940e9]
  426d42:	lds    esi,FWORD PTR [ebp-0x474cc95e]
  426d48:	imul   ebp
  426d4a:	jae    0x426d52
  426d4c:	ror    DWORD PTR [esi],cl
  426d4e:	iret   
  426d4f:	mov    esi,0xf0f1a4cd
  426d54:	fstp   DWORD PTR [esi]
  426d56:	pop    ebx
  426d57:	jae    0x426d89
  426d59:	(bad)  [eax-0x8]
  426d5c:	dec    edx
  426d5d:	fcmovbe st,st(2)
  426d5f:	inc    BYTE PTR [ebx-0x74eae151]
  426d65:	ret    
  426d66:	jmp    0xe5dea9f8
  426d6b:	push   ss
  426d6c:	hlt    
  426d6d:	jg     0x426d14
  426d6f:	mov    eax,ds:0x51181dd0
  426d74:	out    0xc7,al
  426d76:	(bad)  [ebx]
  426d78:	cmc    
  426d79:	push   es
  426d7a:	mov    ebp,edx
  426d7c:	rcr    BYTE PTR [ecx-0x14],0x8
  426d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d81:	or     DWORD PTR [eax+0x25],ebx
  426d84:	add    ebp,ebp
  426d86:	popa   
  426d87:	int    0x4f
  426d89:	outs   dx,BYTE PTR ds:[esi]
  426d8a:	sti    
  426d8b:	dec    ecx
  426d8c:	mov    edi,0xdea1179a
  426d91:	push   edx
  426d92:	cld    
  426d93:	inc    edi
  426d94:	fsubr  QWORD PTR [edi]
  426d96:	and    BYTE PTR [edx+0x6b],bl
  426d99:	in     al,dx
  426d9a:	mov    bl,0x3f
  426d9c:	jmp    0x426d3c
  426d9e:	out    0x3e,eax
  426da0:	call   0x8454:0x2846665d
  426da7:	call   0xc96c87e8
  426dac:	mov    edx,0x753710dd
  426db1:	sub    dl,BYTE PTR [eax-0x38]
  426db4:	(bad)  
  426db5:	(bad)  
  426db6:	fild   QWORD PTR [eax-0x5420e288]
  426dbc:	sub    al,0xc3
  426dbe:	fldenv [esi-0x63]
  426dc1:	out    0x7a,eax
  426dc3:	in     eax,dx
  426dc4:	xchg   ecx,eax
  426dc5:	add    BYTE PTR [eax-0x493e3da3],al
  426dcb:	xchg   BYTE PTR [ecx+0x7108670d],bh
  426dd1:	add    bh,BYTE PTR [eax-0x4d]
  426dd4:	sahf   
  426dd5:	xchg   esi,eax
  426dd6:	push   es
  426dd7:	add    eax,0x44c78f8d
  426ddc:	js     0x426d8d
  426dde:	pop    esp
  426ddf:	xchg   ecx,eax
  426de0:	mov    ds:0xc298be7a,eax
  426de5:	dec    eax
  426de6:	jnp    0x426e39
  426de8:	adc    eax,0xdd6329ab
  426ded:	out    dx,eax
  426dee:	data16 jns 0x426e2c
  426df1:	sbb    eax,DWORD PTR [edi+0x7341022]
  426df7:	fld    DWORD PTR [eax+0x6c8bfc90]
  426dfd:	or     dh,0x25
  426e00:	lahf   
  426e01:	adc    ebp,DWORD PTR [edi+0x59]
  426e04:	push   ds
  426e05:	(bad)  
  426e06:	fxch   st(0)
  426e08:	or     eax,0x7e21f622
  426e0d:	test   DWORD PTR [esi],0xef0f3d0c
  426e13:	mov    esi,0xbaa1a4e
  426e18:	retf   
  426e19:	mov    al,0xe6
  426e1b:	loop   0x426dee
  426e1d:	neg    BYTE PTR ds:[ecx]
  426e20:	or     BYTE PTR [ebp+0x11919a38],bl
  426e26:	in     al,dx
  426e27:	jno    0x426e6d
  426e29:	call   0xae6ef3fa
  426e2e:	jl     0x426e95
  426e30:	sub    al,al
  426e32:	jg     0x426db7
  426e34:	daa    
  426e35:	push   es
  426e36:	aas    
  426e37:	cmp    bh,BYTE PTR [ebx-0xc46e652]
  426e3d:	jmp    0x426e31
  426e3f:	jae    0x426ec0
  426e41:	test   eax,0x51d43ec8
  426e46:	cld    
  426e47:	imul   DWORD PTR [esi+esi*1-0x5f]
  426e4b:	xor    BYTE PTR [edx+0x4ded898],cl
  426e51:	sub    DWORD PTR [ebx+0x732205e2],edx
  426e57:	enter  0x403c,0x6e
  426e5b:	outs   dx,BYTE PTR ds:[esi]
  426e5c:	repz inc ebx
  426e5e:	ja     0x426e64
  426e60:	fs pop esi
  426e62:	mov    dh,0x23
  426e64:	(bad)  
  426e65:	enter  0xbf3d,0xc2
  426e69:	rcl    dh,1
  426e6b:	mov    fs,WORD PTR [eax-0x37b7f9a]
  426e71:	imul   esp,DWORD PTR [esi],0xc08a44a3
  426e77:	push   0x173fe598
  426e7c:	aas    
  426e7d:	fsubr  QWORD PTR [ecx+0x1c0eda9a]
  426e83:	jmp    0x761a364e
  426e88:	mov    bh,0x35
  426e8a:	jmp    0xf33196e9
  426e8f:	dec    ebx
  426e90:	ins    BYTE PTR es:[edi],dx
  426e91:	sbb    eax,0x4613e6a5
  426e96:	and    bl,dl
  426e98:	cmp    eax,DWORD PTR [edi-0x370cd9d8]
  426e9e:	xor    BYTE PTR [esi+0x26],al
  426ea1:	std    
  426ea2:	jne    0x426e51
  426ea4:	stc    
  426ea5:	push   es
  426ea6:	sub    eax,0x144210d3
  426eab:	pop    ebp
  426eac:	and    eax,0xf843e723
  426eb1:	arpl   bp,sp
  426eb3:	js     0x426eee
  426eb5:	mov    ds:0x3b5bec9c,eax
  426eba:	loopne 0x426eac
  426ebc:	adc    BYTE PTR [eax],cl
  426ebe:	pop    es
  426ebf:	xchg   DWORD PTR [esi],ebp
  426ec1:	in     al,0x8f
  426ec3:	push   ecx
  426ec4:	xor    ecx,edx
  426ec6:	imul   esp,DWORD PTR [ecx],0x8504cacb
  426ecc:	cli    
  426ecd:	xchg   ebx,eax
  426ece:	loopne 0x426ed8
  426ed0:	aas    
  426ed1:	(bad)  
  426ed2:	out    0x1d,eax
  426ed4:	ss pop ds
  426ed6:	inc    ebp
  426ed7:	loopne 0x426e84
  426ed9:	or     al,0x49
  426edb:	push   ebx
  426edc:	sahf   
  426edd:	add    al,0xf9
  426edf:	inc    eax
  426ee0:	repz fisttp QWORD PTR [ebp-0x62]
  426ee4:	test   bh,ah
  426ee6:	push   eax
  426ee7:	lods   al,BYTE PTR ds:[esi]
  426ee8:	sti    
  426ee9:	xchg   ebp,eax
  426eea:	dec    ebx
  426eeb:	inc    esp
  426eec:	add    DWORD PTR [ebp-0x707e12ee],edx
  426ef2:	pop    esp
  426ef3:	and    DWORD PTR [ebp+0x3a],ebx
  426ef6:	mov    fs,edi
  426ef8:	addr16 mov cl,0x5a
  426efb:	adc    ecx,ebx
  426efd:	jae    0x426e98
  426eff:	data16 sub bh,BYTE PTR [ebx]
  426f02:	sbb    ebx,DWORD PTR [edx+0x3c]
  426f05:	loop   0x426ee3
  426f07:	xchg   BYTE PTR [esi],bh
  426f09:	add    BYTE PTR [eax],al
  426f0b:	int3   
  426f0c:	jne    0x426f08
  426f0e:	jle    0x426f42
  426f10:	jns    0x426f1d
  426f12:	enter  0xa737,0xcf
  426f16:	lock (bad) [ebx]
  426f19:	and    edx,DWORD PTR [edi-0x61]
  426f1c:	xor    ecx,esi
  426f1e:	lock retf 0x25ad
  426f22:	loopne 0x426ec0
  426f24:	sbb    DWORD PTR [edi-0x13],esi
  426f27:	call   0x2692160f
  426f2c:	gs mov esi,0xa36124a3
  426f32:	push   esp
  426f33:	xchg   BYTE PTR [ecx+ebp*2],dl
  426f36:	rol    BYTE PTR [bp+0x7bb],cl
  426f3b:	pop    edx
  426f3c:	sub    DWORD PTR [ecx-0x16],esp
  426f3f:	call   0x4be404d5
  426f44:	mov    DWORD PTR [ebx],esp
  426f46:	dec    ecx
  426f47:	push   es
  426f48:	mov    bl,0x15
  426f4a:	adc    DWORD PTR [eax],ebp
  426f4c:	lds    edi,FWORD PTR [ebx-0x77]
  426f4f:	xor    bh,BYTE PTR [esi-0x2d]
  426f52:	mov    al,0xd8
  426f54:	aaa    
  426f55:	add    eax,0x87b98bfc
  426f5a:	push   esi
  426f5b:	pop    DWORD PTR [edi+0xfba1876]
  426f61:	xor    esp,DWORD PTR [ecx+edi*2-0x60]
  426f65:	fstp   TBYTE PTR [edx]
  426f67:	pushf  
  426f68:	fcomp  QWORD PTR es:[esi]
  426f6b:	sar    BYTE PTR [esi+0x2],0x53
  426f6f:	mov    al,0x5e
  426f71:	lahf   
  426f72:	xchg   esi,eax
  426f73:	test   al,0x94
  426f75:	pop    ecx
  426f76:	ins    BYTE PTR es:[edi],dx
  426f77:	xor    al,BYTE PTR [edx]
  426f79:	and    esp,esi
  426f7b:	fwait
  426f7c:	jne    0x426f60
  426f7e:	pop    ebp
  426f7f:	sub    BYTE PTR [edi],ah
  426f81:	sbb    BYTE PTR [esi+0x43],ch
  426f84:	cmp    BYTE PTR [edx+0xb7e208e],ch
  426f8a:	adc    BYTE PTR [edi+0x271d91b6],cl
  426f90:	pop    ebx
  426f91:	and    eax,0x350b8f20
  426f96:	xchg   ecx,eax
  426f97:	dec    esp
  426f98:	icebp  
  426f99:	dec    esi
  426f9a:	mov    ebp,DWORD PTR [edi]
  426f9c:	iret   
  426f9d:	jle    0x427012
  426f9f:	fs loope 0x426fc2
  426fa2:	mov    ds:0xddd8b4ee,al
  426fa7:	cli    
  426fa8:	mov    eax,ds
  426faa:	nop
  426fab:	xchg   DWORD PTR [eax-0x331eaefc],edi
  426fb1:	lahf   
  426fb2:	ret    0x2b6d
  426fb5:	sahf   
  426fb6:	sti    
  426fb7:	adc    edi,esp
  426fb9:	mov    ah,0x94
  426fbb:	out    0x95,al
  426fbd:	loopne 0x426f40
  426fbf:	dec    esi
  426fc0:	inc    ebp
  426fc1:	dec    esp
  426fc2:	mov    ?,WORD PTR [esi+0x4e4e2ecc]
  426fc8:	in     eax,dx
  426fc9:	lds    esp,FWORD PTR [ecx+ebp*2]
  426fcc:	int    0x69
  426fce:	add    al,0xf2
  426fd0:	and    edi,eax
  426fd2:	jmp    0xafdc:0x53bd7a55
  426fd9:	aas    
  426fda:	sub    bh,al
  426fdc:	jge    0x426fe5
  426fde:	in     al,dx
  426fdf:	shl    BYTE PTR [edx-0x25],cl
  426fe2:	ret    0xe35
  426fe5:	lahf   
  426fe6:	add    DWORD PTR [esi-0x3a],ebx
  426fe9:	mov    cl,0x28
  426feb:	and    esi,ebx
  426fed:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  426fef:	adc    eax,0xe8296be4
  426ff4:	inc    ebx
  426ff5:	cmp    DWORD PTR [esi],edx
  426ff7:	dec    ebx
  426ff8:	add    dh,BYTE PTR ds:[ecx]
  426ffb:	data16 arpl WORD PTR [ecx],cx
  426ffe:	mov    ah,0xbe
  427000:	sub    DWORD PTR [ecx+0x261f38f9],esi
  427006:	call   0x553e:0x3764a5c9
  42700d:	pop    ss
  42700e:	adc    al,0xa8
  427010:	push   ebx
  427011:	and    al,0x45
  427013:	and    BYTE PTR [ebx],cl
  427015:	ret    0xf654
  427018:	and    DWORD PTR [esi],0x36b6a846
  42701e:	mov    gs,WORD PTR [esi-0x6e566]
  427024:	inc    edx
  427025:	shl    BYTE PTR [ecx],1
  427027:	aaa    
  427028:	jmp    0xb862:0x45b9aa26
  42702f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427030:	sbb    eax,0x2ee9b0e2
  427035:	out    0xf7,eax
  427037:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  427039:	adc    BYTE PTR [ebp-0x5e],bh
  42703c:	add    esp,DWORD PTR [eax+0x4e67c72]
  427042:	sub    BYTE PTR [ebx-0x5e590b51],dl
  427048:	pop    es
  427049:	or     DWORD PTR [esi],0x5e1976c2
  42704f:	fist   DWORD PTR [edx+0x2b]
  427052:	and    dl,BYTE PTR [edx]
  427054:	int3   
  427055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427056:	int3   
  427057:	sub    BYTE PTR [eax+ebx*2],al
  42705a:	or     dl,ah
  42705c:	fsub   QWORD PTR [esi]
  42705e:	inc    ebx
  42705f:	pop    ecx
  427060:	push   es
  427061:	pop    ss
  427062:	call   0xd69b:0xbe7d3e16
  427069:	xchg   BYTE PTR gs:[eax],al
  42706c:	es inc esi
  42706e:	pop    ecx
  42706f:	push   ebx
  427070:	add    DWORD PTR [ebp-0x53],esi
  427073:	fs icebp 
  427075:	and    ch,BYTE PTR [edx+0x59e67bc6]
  42707b:	popf   
  42707c:	mov    BYTE PTR [eax-0x8],ch
  42707f:	jmp    0x4270c8
  427081:	leave  
  427082:	adc    al,0xbd
  427084:	inc    esp
  427085:	pop    esi
  427086:	dec    edx
  427087:	xchg   ecx,eax
  427088:	inc    esp
  427089:	and    BYTE PTR [ebp-0x72f92232],ah
  42708f:	or     BYTE PTR [ebx+0x68],0xd3
  427093:	lahf   
  427094:	xor    eax,edi
  427096:	push   ecx
  427097:	outs   dx,DWORD PTR ds:[esi]
  427098:	ret    0x3ec9
  42709b:	push   esi
  42709c:	sahf   
  42709d:	mov    ch,0xa
  42709f:	pop    ebp
  4270a0:	stos   DWORD PTR es:[edi],eax
  4270a1:	cmp    dh,BYTE PTR [ecx-0x31b86c66]
  4270a7:	adc    al,0xc4
  4270a9:	cdq    
  4270aa:	shl    eax,0x26
  4270ad:	jb     0x42709c
  4270af:	mov    ds:0x103c0c48,eax
  4270b4:	xor    DWORD PTR [edx],eax
  4270b6:	cli    
  4270b7:	mov    bh,0xc7
  4270b9:	mov    ebx,0xf12f5fdf
  4270be:	jge    0x4270f0
  4270c0:	jmp    0xa594:0xd8195dff
  4270c7:	sub    al,0x26
  4270c9:	scas   al,BYTE PTR es:[edi]
  4270ca:	dec    ecx
  4270cb:	push   esi
  4270cc:	repz adc al,0x6a
  4270cf:	and    al,cl
  4270d1:	(bad)  
  4270d4:	out    dx,eax
  4270d5:	(bad)  
  4270d6:	jmp    0x42708c
  4270d8:	dec    eax
  4270d9:	(bad)  
  4270da:	arpl   cx,ax
  4270dc:	or     BYTE PTR [edi+0x4c0aa61d],cl
  4270e2:	add    dh,bl
  4270e4:	scas   eax,DWORD PTR es:[edi]
  4270e5:	sahf   
  4270e6:	rcl    BYTE PTR [ebp+0xfd592e9],1
  4270ec:	inc    edx
  4270ed:	jg     0x4270b2
  4270ef:	push   0x4e
  4270f1:	push   ebx
  4270f2:	ja     0x427137
  4270f4:	es pop ss
  4270f6:	popa   
  4270f7:	or     al,0x2
  4270f9:	retf   0x78c1
  4270fc:	mov    bh,0xe5
  4270fe:	xor    BYTE PTR [ecx-0x11],dh
  427101:	dec    esi
  427102:	pop    ecx
  427103:	cmp    DWORD PTR ds:0x322a7dc5,ecx
  427109:	rcr    DWORD PTR [ecx-0x3e99fb53],1
  42710f:	sbb    BYTE PTR [edx-0x17993c7e],bh
  427115:	mov    edx,ebx
  427117:	push   ecx
  427118:	sahf   
  427119:	and    ch,al
  42711b:	pop    ds
  42711c:	shr    BYTE PTR [esi],0x76
  42711f:	pop    ecx
  427120:	sub    al,0x80
  427122:	outs   dx,DWORD PTR ds:[esi]
  427123:	sub    esp,DWORD PTR [eax]
  427125:	in     al,0xe4
  427127:	lds    edx,FWORD PTR [esi+esi*1]
  42712a:	popf   
  42712b:	push   ecx
  42712c:	test   BYTE PTR [esi-0x2],dl
  42712f:	clc    
  427130:	push   es
  427131:	xchg   ebp,eax
  427132:	mov    al,0xde
  427134:	aaa    
  427135:	lds    ebx,FWORD PTR [esi+0x5087771f]
  42713b:	mov    dl,bl
  42713d:	sbb    esp,DWORD PTR [eax+ebx*2]
  427140:	cs (bad) 
  427142:	stc    
  427143:	adc    ebx,esi
  427145:	cmc    
  427146:	out    0x83,al
  427148:	and    esi,eax
  42714a:	xchg   edx,eax
  42714b:	jo     0x4270db
  42714d:	fcmovnu st,st(5)
  42714f:	lock pop ecx
  427151:	shl    DWORD PTR [edx-0x19a144c7],1
  427157:	dec    edx
  427158:	push   0x8bdf97ff
  42715d:	fbstp  TBYTE PTR [ebx-0x44]
  427160:	arpl   si,sp
  427162:	push   ebx
  427163:	add    ah,BYTE PTR [ebx-0xadecaab]
  427169:	ss ror dl,0xe3
  42716d:	sub    al,0x5f
  42716f:	aaa    
  427170:	or     eax,0x35ac1f6c
  427175:	cmp    eax,0xffe7d0cf
  42717a:	retf   
  42717b:	iret   
  42717c:	mov    ebx,0xeb633e2c
  427181:	(bad)  
  427182:	loopne 0x4271a9
  427184:	out    dx,al
  427185:	push   ds
  427186:	ds inc edx
  427188:	mov    cl,0xbf
  42718a:	sub    DWORD PTR [edi-0x1db0634e],ebp
  427190:	mov    al,ds:0x2d01317e
  427195:	je     0x4271c4
  427197:	adc    eax,0xf96fd18
  42719c:	or     eax,0x9b0619aa
  4271a1:	mov    ecx,0x6d9739b7
  4271a6:	loopne 0x42717a
  4271a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271a9:	push   ds
  4271aa:	rcl    DWORD PTR ds:0xcd56,1
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	sti    
  4271bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271c0:	cmp    DWORD PTR [eax-0x27],0xf40001e9
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [esi+0x71],bl
  4271cc:	addr16 nop
  4271ce:	hlt    
  4271cf:	enter  0xbe9a,0x1
  4271d3:	mov    esp,0x7f5a0b3
  4271d8:	(bad)  [esi]
  4271da:	jne    0x42720b
  4271dc:	ins    BYTE PTR es:[edi],dx
  4271dd:	push   eax
  4271de:	cmp    BYTE PTR [esp+ebp*4-0x2d6e8c4b],ch
  4271e5:	fs in  al,dx
  4271e7:	aas    
  4271e8:	addr16 add eax,0x4e34c88a
  4271ee:	jl     0x42719e
  4271f0:	(bad)  
  4271f1:	mov    dh,0x87
  4271f3:	shr    DWORD PTR [esp+ebp*1+0x5c],0x6a
  4271f8:	cmp    DWORD PTR [ecx],eax
  4271fa:	out    0xe0,al
  4271fc:	cmp    ah,al
  4271fe:	mov    al,ds:0x41296913
  427203:	(bad)  
  427204:	out    0xe0,eax
  427206:	scas   al,BYTE PTR es:[edi]
  427207:	or     al,0xa3
  427209:	fdivr  st,st(1)
  42720b:	push   eax
  42720c:	lods   eax,DWORD PTR ds:[esi]
  42720d:	mov    ?,esi
  42720f:	mov    dl,0xb
  427211:	outs   dx,DWORD PTR ds:[esi]
  427212:	push   ds
  427213:	in     al,0x4b
  427215:	and    ecx,DWORD PTR [eax+ebp*1+0x66]
  427219:	mov    dh,0x66
  42721b:	jmp    0xe992:0xe79cc1d5
  427222:	pusha  
  427223:	push   ds
  427224:	in     al,dx
  427225:	and    ch,BYTE PTR [esi]
  427227:	or     al,0x23
  427229:	in     eax,dx
  42722a:	push   es
  42722b:	in     al,dx
  42722c:	add    BYTE PTR ss:[ebp+ecx*1+0x1e],ah
  427231:	sub    ebp,esi
  427233:	adc    BYTE PTR [ebp+0x89d0572],dl
  427239:	xchg   edx,eax
  42723a:	cmp    esp,DWORD PTR [eax+0x33]
  42723d:	inc    edi
  42723e:	jmp    0x42729a
  427240:	ficomp DWORD PTR [esp+esi*1+0x1f]
  427244:	push   ebp
  427245:	mov    WORD PTR [ebp-0x1d1ed9b8],?
  42724b:	rol    DWORD PTR [eax+0x5ad3b4f8],0xa7
  427252:	jecxz  0x42720c
  427254:	adc    DWORD PTR [ebx+0x7c6cd890],eax
  42725a:	ins    BYTE PTR es:[edi],dx
  42725b:	js     0x4272b4
  42725d:	ror    DWORD PTR [ebx+0x6ee3346a],1
  427263:	iret   
  427264:	mov    esi,0x5945f5f9
  427269:	pusha  
  42726a:	outs   dx,DWORD PTR ds:[esi]
  42726b:	ret    
  42726c:	test   eax,0x8672b0d0
  427271:	lods   eax,DWORD PTR ds:[esi]
  427272:	cdq    
  427273:	in     eax,0xbf
  427275:	mov    ds:0x86c7bda8,al
  42727a:	mov    ebx,0x62b3e072
  42727f:	jns    0x42728b
  427281:	dec    eax
  427282:	in     al,dx
  427283:	in     al,0xc6
  427285:	ja     0x427303
  427287:	jg     0x4272c5
  427289:	sub    eax,0xb5f2e7f6
  42728e:	fdivr  DWORD PTR [eax+0x58]
  427291:	sti    
  427292:	out    0x23,al
  427294:	mov    edx,ebp
  427296:	sub    al,0xe
  427298:	icebp  
  427299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42729a:	sbb    BYTE PTR ds:0x8b1813fa,ch
  4272a0:	jle    0x42726c
  4272a2:	rcl    dh,0x3b
  4272a5:	adc    eax,0x581a0a32
  4272aa:	test   al,0x5f
  4272ac:	sub    eax,0xf4d59d9e
  4272b1:	cmp    al,0x1b
  4272b3:	outs   dx,BYTE PTR ds:[esi]
  4272b4:	stc    
  4272b5:	sbb    cl,BYTE PTR [eax+0x47]
  4272b8:	enter  0x94a2,0xa5
  4272bc:	fmul   QWORD PTR [ebx]
  4272be:	push   es
  4272bf:	stos   DWORD PTR es:[edi],eax
  4272c0:	inc    ebx
  4272c1:	fadd   st,st(2)
  4272c3:	jmp    0x4272b1
  4272c5:	xor    al,0x5b
  4272c7:	call   0x898:0xc3fe4423
  4272ce:	aas    
  4272cf:	or     DWORD PTR [edi+edi*1],esi
  4272d2:	data16 mov bl,BYTE PTR [ebx-0x6a]
  4272d6:	and    edi,DWORD PTR [esi-0x2b]
  4272d9:	shl    BYTE PTR [ecx],1
  4272db:	jp     0x42729a
  4272dd:	jnp    0x4272f2
  4272df:	mov    ebx,0x5978fe65
  4272e4:	inc    esi
  4272e5:	inc    eax
  4272e6:	xchg   esp,eax
  4272e7:	ins    DWORD PTR es:[edi],dx
  4272e8:	aad    0x87
  4272ea:	adc    BYTE PTR [edx+0x145b9c60],ah
  4272f0:	fnstenv es:[edx+0x61061070]
  4272f7:	lahf   
  4272f8:	jne    0x4272bc
  4272fa:	ins    DWORD PTR es:[edi],dx
  4272fb:	mov    ch,BYTE PTR [esi]
  4272fd:	in     al,0x10
  4272ff:	inc    esi
  427300:	in     eax,dx
  427301:	addr16 ja 0x427330
  427304:	xchg   ebx,eax
  427305:	jg     0x4272a6
  427307:	mov    DWORD PTR [esi],ebp
  427309:	xor    al,BYTE PTR [esi]
  42730b:	cmp    ch,ch
  42730d:	push   ss
  42730e:	mov    ds,WORD PTR [ebx]
  427310:	fdiv   DWORD PTR [edi]
  427312:	dec    edx
  427313:	mov    dl,0x4c
  427315:	dec    edx
  427316:	fsub   DWORD PTR [edi]
  427318:	or     eax,0x53fa9ed4
  42731d:	pushf  
  42731e:	mov    bl,0x39
  427320:	mov    ebp,0x26571830
  427325:	(bad)  [edi+0x1c]
  427328:	pop    edx
  427329:	jecxz  0x42730e
  42732b:	ficomp DWORD PTR [ebx+0x54a7a68d]
  427331:	in     eax,dx
  427332:	ja     0x427302
  427334:	scas   eax,DWORD PTR es:[edi]
  427335:	cmp    esp,DWORD PTR [ebx+0x54]
  427338:	fwait
  427339:	jb     0x427361
  42733b:	pop    es
  42733c:	mov    ds:0x107df2b9,eax
  427341:	push   ebp
  427342:	clc    
  427343:	mov    ebx,0xe1264595
  427348:	and    DWORD PTR [eax-0x2adad5dd],ebx
  42734e:	shr    BYTE PTR [eax],0x97
  427351:	js     0x427390
  427353:	mov    ds:0x9bd2cf8e,al
  427358:	jg     0x4272de
  42735a:	in     eax,dx
  42735b:	sbb    eax,0x687b4cf3
  427360:	popf   
  427361:	sub    dh,BYTE PTR fs:[edx+0x44]
  427365:	pop    es
  427366:	jnp    0x427327
  427368:	int    0xf0
  42736a:	and    al,0xd8
  42736c:	mov    ds:0x455ebad9,al
  427371:	ret    0xb73b
  427374:	icebp  
  427375:	(bad)
  427378:	inc    ebp
  427379:	retf   0xaf03
  42737c:	dec    edx
  42737d:	jmp    0xbe28:0x56ac0e3c
  427384:	jle    0x4273a0
  427386:	sub    ecx,esp
  427388:	sub    BYTE PTR [esi],bh
  42738a:	push   es
  42738b:	cli    
  42738c:	and    DWORD PTR [esi+0x205e703a],0x851d914c
  427396:	cmp    dl,dl
  427398:	and    DWORD PTR [eax+0x6396dba5],edx
  42739e:	dec    eax
  42739f:	(bad)  
  4273a0:	sub    eax,DWORD PTR [ebp-0x16]
  4273a3:	push   ecx
  4273a4:	mov    ebx,0xb876a05f
  4273a9:	dec    ecx
  4273aa:	or     ah,BYTE PTR [ebx+0x13]
  4273ad:	mov    edx,0xeb75a5e9
  4273b2:	mov    ah,0x8b
  4273b4:	pop    ecx
  4273b5:	xor    BYTE PTR ds:0xc65f7fde,ch
  4273bb:	and    eax,0x8e15f65b
  4273c0:	loopne 0x427430
  4273c2:	aam    0x1d
  4273c4:	ret    0x34eb
  4273c7:	inc    edx
  4273c8:	inc    esp
  4273c9:	sub    bl,BYTE PTR [ebp*2-0x5849d095]
  4273d0:	ins    BYTE PTR es:[edi],dx
  4273d1:	xchg   DWORD PTR [edi+0x14],edx
  4273d4:	sub    eax,0x47b623f0
  4273d9:	or     BYTE PTR [ecx],al
  4273db:	mov    cl,0x7b
  4273dd:	jmp    0x42743e
  4273df:	test   BYTE PTR [edx],0xa5
  4273e2:	imul   ebp,DWORD PTR ds:0x1fc8d730,0xc37cac45
  4273ec:	stos   BYTE PTR es:[edi],al
  4273ed:	idiv   DWORD PTR [edi-0x13]
  4273f0:	mov    ds:0xfd9ef7a8,al
  4273f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273f6:	ror    dl,cl
  4273f8:	push   ebx
  4273f9:	test   esp,esi
  4273fb:	add    edi,ebx
  4273fd:	and    al,BYTE PTR [ebx]
  4273ff:	lock mov ebx,0x5b01c93
  427405:	dec    ebx
  427406:	pop    es
  427407:	es repz push ds
  42740a:	sub    DWORD PTR [edi],edx
  42740c:	ret    
  42740d:	outs   dx,DWORD PTR ds:[esi]
  42740e:	int    0xcb
  427410:	leave  
  427411:	gs das 
  427413:	stos   BYTE PTR es:[edi],al
  427414:	fwait
  427415:	repnz push esi
  427417:	fwait
  427418:	pop    ds
  427419:	push   esi
  42741a:	mov    ebp,0x788e9516
  42741f:	fadd   QWORD PTR [edi]
  427421:	sti    
  427422:	push   esp
  427423:	jmp    FWORD PTR [ecx]
  427425:	xor    eax,0x8688fda5
  42742a:	lds    esp,FWORD PTR [edi+0x28]
  42742d:	jl     0x4274a3
  42742f:	push   ebx
  427430:	pushf  
  427431:	ss mul cl
  427434:	add    eax,0xa5f7e59
  427439:	std    
  42743a:	push   ebp
  42743b:	and    DWORD PTR [edi-0x7b096f52],ebx
  427441:	pop    ss
  427442:	pop    eax
  427443:	push   cs
  427444:	mov    edi,0x25a7ddec
  427449:	add    DWORD PTR [edi+0x1c8000a5],edi
  42744f:	rcl    DWORD PTR [ecx+0x5fedf181],cl
  427455:	mov    BYTE PTR [edx],ah
  427457:	cwde   
  427458:	mov    eax,0xc4f355d6
  42745e:	xor    DWORD PTR [edx+0x3e6b412],esp
  427464:	sub    ebp,ecx
  427466:	(bad)  
  427468:	pop    eax
  427469:	je     0x427483
  42746b:	mov    al,0x4b
  42746d:	mov    WORD PTR [ecx-0x49],?
  427470:	pop    eax
  427471:	lods   eax,DWORD PTR ds:[esi]
  427472:	push   ebx
  427473:	pushf  
  427474:	xchg   esi,eax
  427475:	fwait
  427476:	sbb    bh,bl
  427478:	pop    edx
  427479:	jmp    0x21ddc113
  42747e:	pop    eax
  42747f:	pushf  
  427480:	test   BYTE PTR [ebx-0x23],0xb1
  427484:	hlt    
  427485:	push   ss
  427486:	scas   eax,DWORD PTR es:[edi]
  427487:	bound  esp,QWORD PTR [eax+0x7c]
  42748a:	je     0x42744c
  42748c:	lahf   
  42748d:	push   esi
  42748e:	cwde   
  42748f:	lahf   
  427490:	mov    ebx,esp
  427492:	daa    
  427493:	adc    al,0x27
  427495:	xor    DWORD PTR [ecx],eax
  427497:	push   eax
  427498:	add    DWORD PTR [edx],0xffffffb6
  42749b:	mov    bl,0x92
  42749d:	or     edx,esp
  42749f:	mov    cl,BYTE PTR [edi]
  4274a1:	mov    eax,ds:0x6f5f0dce
  4274a6:	enter  0x6076,0x15
  4274aa:	enter  0x84ef,0x38
  4274ae:	pop    ebp
  4274af:	jmp    DWORD PTR [edx]
  4274b1:	and    BYTE PTR [eax+0x1a],bl
  4274b4:	out    0x54,eax
  4274b6:	imul   ecx,DWORD PTR [edi+0x49551aad],0xffffff89
  4274bd:	fdivr  DWORD PTR [edx-0x74]
  4274c0:	jne    0x4274f7
  4274c2:	xchg   ecx,eax
  4274c3:	lods   eax,DWORD PTR ds:[esi]
  4274c4:	jo     0x427487
  4274c6:	fnstsw WORD PTR ds:0xdf62fcf7
  4274cc:	mov    al,0xe2
  4274ce:	add    eax,DWORD PTR [edi+0x4658336b]
  4274d4:	mov    ecx,esi
  4274d6:	or     bl,dl
  4274d8:	xor    ecx,esi
  4274da:	jecxz  0x427525
  4274dc:	jg     0x427467
  4274de:	pop    ebp
  4274df:	loope  0x4274ed
  4274e1:	sbb    BYTE PTR [eax-0x12bad035],cl
  4274e7:	nop
  4274e8:	loopne 0x4274e5
  4274ea:	mov    ebp,0x67de3ba4
  4274ef:	mov    al,ds:0xcb160ed5
  4274f4:	(bad)  
  4274f5:	fdiv   st(0),st
  4274f7:	(bad)  [ebp+0x45]
  4274fa:	sti    
  4274fb:	and    ecx,0x2bba490d
  427501:	pop    ds
  427502:	cli    
  427503:	cmp    BYTE PTR [edx-0x24],bh
  427506:	push   eax
  427507:	and    edi,0xc0994d7a
  42750d:	mov    ds:0x8b92ab43,eax
  427512:	dec    ebp
  427513:	add    eax,0xbc888962
  427518:	sub    BYTE PTR [ecx+0x3f599c47],ch
  42751e:	sbb    al,0xaa
  427520:	and    esp,DWORD PTR [ecx]
  427522:	adc    DWORD PTR [eax],ebx
  427524:	mov    esi,0xb296d3ee
  427529:	fcmove st,st(5)
  42752b:	adc    bl,BYTE PTR [esi+0x19]
  42752e:	scas   eax,DWORD PTR es:[edi]
  42752f:	leave  
  427530:	fidiv  WORD PTR [ebx+eiz*1-0x26]
  427534:	test   cl,0x30
  427537:	mov    ebx,0xf0ecc9ec
  42753c:	mov    eax,ds:0x21ad52e9
  427541:	jmp    0x3f7:0x9ce56e3
  427548:	pop    esi
  427549:	rcr    BYTE PTR [edx+0x7bb8b811],1
  42754f:	(bad)  
  427550:	cmp    al,0xf5
  427552:	xor    ch,BYTE PTR [edx*8-0x253573b5]
  427559:	setnp  BYTE PTR [ecx]
  42755c:	xor    edx,DWORD PTR [esi-0x6339ca4a]
  427562:	inc    ecx
  427563:	adc    dl,bh
  427565:	sub    eax,0x3dfc81ea
  42756a:	sar    BYTE PTR [ebp+0x79e9141e],1
  427570:	out    0x29,eax
  427572:	lods   al,BYTE PTR ds:[esi]
  427573:	xchg   esp,eax
  427574:	push   es
  427575:	or     ah,BYTE PTR [esi-0x73]
  427578:	mov    al,ds:0xb314d0f6
  42757d:	jge    0x4275fb
  42757f:	addr16 jbe 0x42759c
  427582:	rcl    BYTE PTR [edx-0x6c],cl
  427585:	add    cl,BYTE PTR ds:0x3fa1818f
  42758b:	cdq    
  42758c:	dec    edi
  42758d:	mov    edx,0x63e548a7
  427592:	sub    BYTE PTR [eax+0x402fea3],dh
  427598:	mov    edx,DWORD PTR [ebx-0x2c]
  42759b:	idiv   BYTE PTR [ebx]
  42759d:	es and eax,0x3e114a14
  4275a3:	xor    BYTE PTR [ecx],ch
  4275a5:	in     al,dx
  4275a6:	int3   
  4275a7:	xchg   ebp,eax
  4275a8:	arpl   WORD PTR es:[ecx],bp
  4275ab:	fs leave 
  4275ad:	pop    es
  4275ae:	das    
  4275af:	sub    eax,DWORD PTR [edi+0x35]
  4275b2:	xchg   esi,eax
  4275b3:	aaa    
  4275b4:	jl     0x427598
  4275b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275b7:	mov    ds:0x6225e1dd,al
  4275bc:	add    BYTE PTR [ecx],al
  4275be:	jo     0x427586
  4275c0:	and    eax,0x179f05f
  4275c5:	enter  0x5484,0x1a
  4275c9:	(bad)  
  4275cb:	push   0xfffffffb
  4275cd:	adc    eax,0x5ac1679f
  4275d2:	add    ah,BYTE PTR [esp+esi*1+0x235fe4b6]
  4275d9:	ds enter 0xf941,0x49
  4275de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275df:	mov    ebp,0x9837d631
  4275e4:	ins    BYTE PTR es:[edi],dx
  4275e5:	out    dx,eax
  4275e6:	xor    eax,0xd2d18320
  4275eb:	(bad)  
  4275ec:	jne    0x42759c
  4275ee:	push   ecx
  4275ef:	inc    edi
  4275f0:	mov    ch,0x79
  4275f2:	fild   QWORD PTR [ecx+0x10]
  4275f5:	adc    eax,0x19c93645
  4275fa:	js     0x4275d1
  4275fc:	jmp    0x39b2eeda
  427601:	xor    al,0xb
  427603:	jbe    0x42760b
  427605:	clc    
  427606:	inc    ebx
  427607:	in     al,dx
  427608:	xchg   DWORD PTR [eax],ebp
  42760a:	cdq    
  42760b:	cmp    ecx,eax
  42760d:	xchg   esi,eax
  42760e:	jo     0x42767b
  427610:	inc    ebx
  427611:	bound  ebp,QWORD PTR [edi-0x1589706a]
  427617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427618:	jmp    0xc028:0xe25dc416
  42761f:	xchg   BYTE PTR [edx-0x269c5ce],al
  427625:	pop    ebp
  427626:	and    eax,0x59193992
  42762b:	sahf   
  42762c:	mov    DWORD PTR [esi-0x310725fc],0x9eb446ee
  427636:	ror    DWORD PTR [eax+eax*1],1
  427639:	dec    eax
  42763a:	mov    ah,0x75
  42763c:	sub    DWORD PTR [eax],ecx
  42763e:	iret   
  42763f:	stos   DWORD PTR es:[edi],eax
  427640:	test   dh,ah
  427642:	sub    DWORD PTR [edi-0x5],ebx
  427645:	cld    
  427646:	(bad)  
  427647:	mov    dl,0x47
  427649:	aad    0x61
  42764b:	stos   BYTE PTR es:[edi],al
  42764c:	aam    0x30
  42764e:	sar    DWORD PTR [ebx+eiz*4+0x11437ede],1
  427655:	fsub   QWORD PTR [ebx+eiz*8-0x1e46be36]
  42765c:	test   ah,dl
  42765e:	les    ecx,FWORD PTR [edi]
  427660:	jbe    0x4276ce
  427662:	sbb    DWORD PTR [esi+0x5337cd8e],esp
  427668:	stos   BYTE PTR es:[edi],al
  427669:	jbe    0x42769a
  42766b:	add    al,0x22
  42766d:	and    BYTE PTR [ebx],ah
  42766f:	cmp    al,0xfd
  427671:	repnz test al,0xc5
  427674:	xchg   edx,eax
  427675:	mov    bh,0xf5
  427677:	in     eax,0x5f
  427679:	xchg   ebx,ebp
  42767b:	imul   edx,ebp,0x6492f22f
  427681:	dec    eax
  427682:	cmp    eax,0x305b13d2
  427687:	je     0x4276cb
  427689:	arpl   WORD PTR [esi],dx
  42768b:	adc    ebp,ebx
  42768d:	inc    edi
  42768e:	mul    ebx
  427690:	int    0x6f
  427692:	stos   DWORD PTR es:[edi],eax
  427693:	or     eax,0x6053345b
  427698:	mov    esi,0x5f7052f0
  42769d:	loopne 0x4276e4
  42769f:	shl    DWORD PTR [ecx],cl
  4276a1:	sbb    bl,bh
  4276a3:	push   edi
  4276a4:	xchg   ecx,eax
  4276a5:	cmp    DWORD PTR [esi+0x42],ecx
  4276a8:	dec    esp
  4276a9:	mov    BYTE PTR [edx],bh
  4276ab:	test   BYTE PTR [edi+0x0],ch
  4276ae:	stos   BYTE PTR es:[edi],al
  4276af:	or     ebx,DWORD PTR [edx]
  4276b1:	mov    ds:0xfa8e2633,al
  4276b6:	adc    eax,DWORD PTR [ebx]
  4276b8:	push   cs
  4276b9:	inc    ecx
  4276ba:	fld    TBYTE PTR [ebx-0x47]
  4276bd:	cld    
  4276be:	add    BYTE PTR [eax],al
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0xe2f91c3b
  4276cf:	fs jp  0x427702
  4276d2:	int    0xee
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	hlt    
  4276d7:	add    al,0x0
  4276d9:	add    BYTE PTR [eax],dl
  4276db:	out    dx,eax
  4276dc:	arpl   WORD PTR [ebx+0x2f],sp
  4276df:	dec    edx
  4276e0:	xor    eax,0x64b5a7bf
  4276e5:	and    al,0x14
  4276e7:	or     eax,0x58fb487d
  4276ec:	dec    ecx
  4276ed:	jbe    0x4276ed
  4276ef:	enter  0x2ae3,0x49
  4276f3:	(bad)  
  4276f4:	cmp    esp,DWORD PTR [esi+0x20]
  4276f7:	nop
  4276f8:	test   al,0xdf
  4276fa:	push   ds
  4276fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276fc:	cwde   
  4276fd:	xchg   ebp,eax
  4276fe:	push   edi
  4276ff:	sbb    BYTE PTR [ecx+0xf],al
  427702:	push   eax
  427703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427704:	outs   dx,BYTE PTR ds:[esi]
  427705:	inc    ebp
  427706:	pop    esp
  427707:	loop   0x42775f
  427709:	or     al,BYTE PTR [ecx]
  42770b:	fistp  QWORD PTR [edx+0x40]
  42770e:	mov    esi,0x28c2a2d5
  427713:	and    DWORD PTR [edx+ebx*4+0x73],ebp
  427717:	or     dh,dh
  427719:	inc    edx
  42771a:	call   0x997c8abc
  42771f:	hlt    
  427720:	out    dx,al
  427721:	and    BYTE PTR [ebx],ah
  427723:	mov    ds:0x8de4babd,eax
  427728:	push   ebx
  427729:	fimul  WORD PTR [esi+0x76]
  42772c:	aas    
  42772d:	data16 fwait
  42772f:	mov    al,0x3b
  427731:	dec    ebx
  427732:	out    dx,eax
  427733:	stos   BYTE PTR es:[edi],al
  427734:	jp     0x4276cd
  427736:	aas    
  427737:	inc    ecx
  427738:	mov    bh,0x5d
  42773a:	mov    cl,0x17
  42773c:	sub    esp,DWORD PTR [eax+0x79]
  42773f:	dec    edx
  427740:	ficomp DWORD PTR ds:0xb69de0b
  427746:	jne    0x427713
  427748:	and    eax,0x9c6945ec
  42774d:	dec    ecx
  42774e:	rol    BYTE PTR [ecx+0x2dc0456d],0x51
  427755:	aaa    
  427756:	adc    ch,BYTE PTR [eax+0x51eaa713]
  42775c:	xchg   DWORD PTR [edx],esi
  42775e:	dec    esi
  42775f:	sbb    BYTE PTR [eax],ah
  427761:	out    dx,eax
  427762:	daa    
  427763:	adc    esi,esp
  427765:	stos   BYTE PTR es:[edi],al
  427766:	push   esi
  427767:	inc    edi
  427768:	pusha  
  427769:	pop    edi
  42776a:	cmp    ebx,eax
  42776c:	mov    eax,0x9df3dd83
  427771:	pop    edi
  427772:	jge    0x4277a8
  427774:	loope  0x427793
  427776:	inc    edi
  427777:	pop    es
  427778:	cmp    ch,BYTE PTR [ecx+0x4a06c371]
  42777e:	xchg   ecx,eax
  42777f:	sti    
  427780:	(bad)  
  427781:	test   eax,0x64de51eb
  427786:	(bad)  
  427787:	xor    DWORD PTR [eax-0x42],eax
  42778a:	mov    al,0x66
  42778c:	dec    ecx
  42778d:	sbb    DWORD PTR [ecx-0x7b854ad9],0x63d27664
  427797:	gs test al,0x35
  42779a:	inc    ebp
  42779b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42779c:	xor    BYTE PTR [eax+0x36],ah
  42779f:	stos   DWORD PTR es:[edi],eax
  4277a0:	icebp  
  4277a1:	lea    eax,[eax-0x1192559]
  4277a7:	pop    ebp
  4277a8:	call   0xfa45e64d
  4277ad:	enter  0x687d,0xb9
  4277b1:	in     eax,0x6c
  4277b3:	inc    edx
  4277b4:	mov    dh,0x50
  4277b6:	jmp    0x50ad8c49
  4277bb:	pop    esi
  4277bc:	arpl   sp,cx
  4277be:	xor    BYTE PTR [esi+ecx*2+0x34],0x2f
  4277c3:	pop    ecx
  4277c4:	imul   ecx,DWORD PTR [ebx],0xe
  4277c7:	sbb    BYTE PTR [edx+0x52],0x2d
  4277cb:	in     al,dx
  4277cc:	stos   DWORD PTR es:[edi],eax
  4277cd:	retf   0x4083
  4277d0:	or     DWORD PTR [esi+0x55150188],esi
  4277d6:	mov    bl,0xf4
  4277d8:	push   edi
  4277d9:	pop    ss
  4277da:	mov    esi,0xe153f1d3
  4277df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277e0:	out    dx,al
  4277e1:	inc    ebp
  4277e2:	add    bh,BYTE PTR ds:0x80027494
  4277e8:	lods   eax,DWORD PTR ds:[esi]
  4277e9:	data16 add dl,ch
  4277ec:	xchg   edx,eax
  4277ed:	mov    al,ds:0xdfe35a79
  4277f2:	jmp    0xc5e5:0xe9ff7ac6
  4277f9:	mov    eax,ds:0xbc53d618
  4277fe:	add    ch,BYTE PTR [esi+edx*4-0x4d]
  427802:	jg     0x42783a
  427804:	xor    DWORD PTR ds:0x2c969e86,ebp
  42780a:	jp     0x4277cc
  42780c:	fsubp  st(1),st
  42780e:	or     eax,0x1474e7bd
  427813:	popa   
  427814:	jecxz  0x427872
  427816:	mov    esp,0x3e616756
  42781b:	call   0x23a2:0xa1d9f1de
  427822:	mov    al,0xa1
  427824:	or     DWORD PTR [esi+ecx*1-0x6c],edx
  427828:	jge    0x4277c2
  42782a:	lock mov dl,0xf7
  42782d:	inc    edi
  42782e:	xor    BYTE PTR [edx+0x56f3c649],ah
  427834:	add    eax,0x21f9d920
  427839:	sbb    ebp,DWORD PTR ds:0x6e3da4d8
  42783f:	pop    ss
  427840:	jle    0x427835
  427842:	push   eax
  427843:	push   eax
  427844:	pop    ebp
  427845:	cmp    al,BYTE PTR [esi+edx*2]
  427848:	fwait
  427849:	sub    edx,0xffffff96
  42784c:	pop    es
  42784d:	xchg   ebp,eax
  42784e:	cmp    al,0x4
  427850:	jae    0x4277d5
  427852:	aaa    
  427853:	jge    0x427866
  427855:	addr16 mov eax,ds:0x30e6
  427859:	(bad)  
  42785a:	loopne 0x4278b6
  42785c:	ret    
  42785d:	test   DWORD PTR [esi+0x6b],ecx
  427860:	mov    ebp,DWORD PTR [eax-0x18]
  427863:	js     0x427849
  427865:	cmp    cl,BYTE PTR [eax-0x26]
  427868:	arpl   WORD PTR [eax+0x6b6f72c6],bp
  42786e:	enterw 0x8cd1,0x2
  427873:	out    dx,al
  427874:	stos   DWORD PTR es:[edi],eax
  427875:	adc    ebx,edi
  427877:	test   BYTE PTR [eax-0x1b],al
  42787a:	inc    ecx
  42787b:	cli    
  42787c:	dec    edi
  42787d:	mov    edx,0x249e2457
  427882:	adc    DWORD PTR [esi-0x56cffe],edi
  427888:	jns    0x42789f
  42788a:	add    ecx,DWORD PTR [esi-0x17]
  42788d:	cmp    esi,DWORD PTR [esi+ebx*8-0x57e29966]
  427894:	call   0x3d1bf482
  427899:	xchg   ebp,eax
  42789a:	xor    cl,BYTE PTR [esi+0x75029d2e]
  4278a0:	cmc    
  4278a1:	cwde   
  4278a2:	add    eax,0x8aea11c2
  4278a7:	inc    esp
  4278a8:	add    DWORD PTR [edx-0x311c6396],ebx
  4278ae:	push   edi
  4278af:	(bad)  
  4278b0:	(bad)  
  4278b2:	outs   dx,DWORD PTR ds:[esi]
  4278b3:	sub    al,0xa9
  4278b5:	call   0x6fc2cdcd
  4278ba:	or     BYTE PTR [ebx+0x45],dl
  4278bd:	mov    ecx,0x2253b6c9
  4278c2:	xor    BYTE PTR [ecx+0x44],bh
  4278c5:	loopne 0x4278fb
  4278c7:	add    bh,BYTE PTR [esi+0x1e]
  4278ca:	sti    
  4278cb:	jmp    0x427872
  4278cd:	cli    
  4278ce:	adc    eax,0xa79e2a8
  4278d3:	call   edx
  4278d5:	mov    eax,ds:0x7a0f26f8
  4278da:	adc    ebp,DWORD PTR ds:0x4647c2c
  4278e0:	push   edi
  4278e1:	sar    DWORD PTR [ecx+0x58],1
  4278e4:	pushf  
  4278e5:	push   ds
  4278e6:	ss leave 
  4278e8:	pop    ds
  4278e9:	xchg   ebx,eax
  4278ea:	sbb    BYTE PTR [edi],ch
  4278ec:	mov    ds:0xecf66bcf,al
  4278f1:	pop    esi
  4278f2:	mov    ecx,0x1af37191
  4278f7:	rol    ch,0xc1
  4278fa:	stos   DWORD PTR es:[edi],eax
  4278fb:	retf   
  4278fc:	push   esp
  4278fd:	sahf   
  4278fe:	ins    BYTE PTR es:[edi],dx
  4278ff:	cld    
  427900:	xor    bl,BYTE PTR [edx]
  427902:	jbe    0x427895
  427904:	inc    edi
  427905:	sub    al,0x33
  427907:	imul   eax,DWORD PTR [edx+0x6209520d],0x18
  42790e:	inc    ebp
  42790f:	pop    ebx
  427910:	inc    eax
  427911:	jno    0x427963
  427913:	pop    ebp
  427914:	push   edi
  427915:	pop    ebp
  427916:	in     al,dx
  427917:	push   esp
  427918:	xchg   ebp,eax
  427919:	or     esi,DWORD PTR [ecx]
  42791b:	jmp    0x4278f9
  42791d:	xchg   ebx,eax
  42791e:	adc    al,BYTE PTR [ebx-0x15]
  427921:	sbb    eax,0x5a12eee3
  427926:	mov    cl,0xe7
  427928:	mov    ds:0x482021a1,eax
  42792d:	jae    0x427917
  42792f:	sti    
  427930:	imul   ebp,DWORD PTR [ebp+0x4c],0xabed21d5
  427937:	mov    eax,0xae0177a3
  42793c:	adc    eax,0x44c03669
  427941:	out    0xce,al
  427943:	mov    dl,BYTE PTR [eax+0x17]
  427946:	aas    
  427947:	fimul  DWORD PTR [ebx+0x18]
  42794a:	sbb    al,0xb
  42794c:	jle    0x42799c
  42794e:	ret    
  42794f:	lea    ebx,[edx]
  427951:	ja     0x42791c
  427953:	(bad)  
  427954:	(bad)  
  427955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427956:	inc    esp
  427957:	ins    BYTE PTR es:[edi],dx
  427958:	dec    esp
  427959:	or     DWORD PTR [ecx-0x2ee77f90],0xf5f4e88
  427963:	xchg   edx,eax
  427964:	sbb    al,0x3b
  427966:	into   
  427967:	inc    edi
  427968:	into   
  427969:	jecxz  0x4279de
  42796b:	push   0xffffffc1
  42796d:	jnp    0x427930
  42796f:	cmp    al,0x98
  427971:	xor    dh,bh
  427973:	out    dx,al
  427974:	cmp    eax,0x9b485ce8
  427979:	inc    ecx
  42797a:	shl    DWORD PTR [esi-0x1de1488a],0x72
  427981:	shl    BYTE PTR [eax-0x3902f90e],0x6d
  427988:	ret    0x2379
  42798b:	xchg   ecx,eax
  42798c:	ja     0x4279fb
  42798e:	mov    eax,0xebf76332
  427993:	lods   al,BYTE PTR ds:[esi]
  427994:	mov    ds:0x18aeb862,eax
  427999:	xchg   edx,eax
  42799a:	and    DWORD PTR [esp+eiz*2-0x73],edx
  42799e:	arpl   WORD PTR [ecx+0x15],si
  4279a1:	or     al,0xda
  4279a3:	xor    BYTE PTR [ebx-0x64],ah
  4279a6:	in     eax,dx
  4279a7:	and    DWORD PTR [edi-0x3e],edi
  4279aa:	inc    ecx
  4279ab:	fidivr WORD PTR [ecx]
  4279ad:	and    BYTE PTR [eax+eiz*1+0x66],bl
  4279b1:	ins    BYTE PTR es:[edi],dx
  4279b2:	pop    ebx
  4279b3:	mov    edx,0x99e34121
  4279b8:	xchg   DWORD PTR [esi],ebx
  4279ba:	sub    eax,DWORD PTR [ebx+0x20]
  4279bd:	add    esp,DWORD PTR [ecx]
  4279bf:	(bad)  [ecx]
  4279c1:	xchg   edi,eax
  4279c2:	sbb    dh,BYTE PTR [esi]
  4279c4:	retf   
  4279c5:	loopne 0x4279ad
  4279c7:	mov    ah,0xc7
  4279c9:	cwde   
  4279ca:	test   eax,0x83d1ec47
  4279cf:	adc    esp,DWORD PTR [eax-0x7c5a374d]
  4279d5:	jo     0x4279fc
  4279d7:	jmp    0xb409:0x5d4e4550
  4279de:	scas   eax,DWORD PTR es:[edi]
  4279df:	mov    ch,0x96
  4279e1:	dec    ebx
  4279e2:	rcl    DWORD PTR [edx-0x1e],cl
  4279e5:	xchg   esi,eax
  4279e6:	xchg   edi,eax
  4279e7:	lahf   
  4279e8:	lea    edi,[ebp+0x2]
  4279eb:	aaa    
  4279ec:	sub    ch,BYTE PTR [ebp-0x30468656]
  4279f2:	aam    0xed
  4279f4:	popa   
  4279f5:	cmp    eax,0xfaaa61db
  4279fa:	fwait
  4279fb:	out    0x95,al
  4279fd:	or     al,0xed
  4279ff:	test   eax,0xb8c44c63
  427a04:	or     al,0xc4
  427a06:	test   BYTE PTR [ebp-0x3a882ded],0xd
  427a0d:	cmp    edx,DWORD PTR [edx-0x36]
  427a10:	das    
  427a11:	cmp    eax,DWORD PTR [ebp-0x715d006b]
  427a17:	ds jmp 0xe82de1ce
  427a1d:	js     0x427a43
  427a1f:	lods   al,BYTE PTR ds:[esi]
  427a20:	push   es
  427a21:	(bad)  [esi-0x49dd361a]
  427a27:	xchg   ebx,eax
  427a28:	cmp    DWORD PTR [ebp+0x66],edi
  427a2b:	out    0x70,al
  427a2d:	pop    edx
  427a2e:	fistp  WORD PTR [edx+eiz*4+0x3a91fd21]
  427a35:	jecxz  0x427aa3
  427a37:	(bad)  
  427a38:	push   esi
  427a39:	dec    edi
  427a3a:	xlat   BYTE PTR ds:[ebx]
  427a3b:	data16 fild QWORD PTR [esi]
  427a3e:	gs push 0x58c39c6b
  427a44:	jo     0x427a67
  427a46:	adc    bl,BYTE PTR [edi+0x3dfe50c8]
  427a4c:	je     0x427ab5
  427a4e:	lock xchg ebx,eax
  427a50:	inc    ecx
  427a51:	mov    edx,0x92b3a800
  427a56:	(bad)  
  427a57:	imul   esp,ebx,0xffffffd3
  427a5a:	lods   al,BYTE PTR ds:[esi]
  427a5b:	hlt    
  427a5c:	ds icebp 
  427a5e:	aam    0xb7
  427a60:	add    eax,0x1ee19ab4
  427a65:	mov    esi,0xa0fbdc1d
  427a6a:	mov    BYTE PTR [eax-0x6c5282ad],bl
  427a70:	xchg   edi,eax
  427a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a72:	and    al,0xbc
  427a74:	(bad)  
  427a75:	fptan  
  427a77:	cmp    al,0x97
  427a79:	retf   
  427a7a:	xchg   ebp,eax
  427a7b:	test   al,0x79
  427a7d:	push   edi
  427a7e:	cmp    al,0x70
  427a80:	(bad)  
  427a82:	inc    esp
  427a83:	fdivr  QWORD PTR [ebx]
  427a85:	fbld   TBYTE PTR [edi+edx*8]
  427a88:	jae    0x427a11
  427a8a:	and    ah,al
  427a8c:	fldenv [edi+eiz*4]
  427a8f:	addr16 push cs
  427a91:	je     0x427ab3
  427a93:	dec    esi
  427a94:	xor    BYTE PTR [edi],bh
  427a96:	pushf  
  427a97:	pop    ecx
  427a98:	mov    bh,0x8a
  427a9a:	fist   DWORD PTR [ecx+0x1f]
  427a9d:	ss scas eax,DWORD PTR es:[edi]
  427a9f:	inc    edx
  427aa0:	or     edi,eax
  427aa2:	cmc    
  427aa3:	pop    esi
  427aa4:	test   al,0x7c
  427aa6:	aam    0xd0
  427aa8:	inc    esp
  427aa9:	in     al,0x60
  427aab:	push   ds
  427aac:	or     al,0xb3
  427aae:	rcr    ebp,0x6a
  427ab1:	adc    DWORD PTR [ecx-0x5d577215],edx
  427ab7:	adc    edx,DWORD PTR [edi+0x10f2f94d]
  427abd:	ret    
  427abe:	(bad)  
  427abf:	scas   al,BYTE PTR es:[edi]
  427ac0:	dec    ebp
  427ac1:	ret    
  427ac2:	inc    ebp
  427ac3:	imul   ebx,DWORD PTR [eax],0xffffffc6
  427ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ac7:	out    dx,eax
  427ac8:	pop    edx
  427ac9:	push   cs
  427aca:	push   ds
  427acb:	aas    
  427acc:	mov    cl,0xfd
  427ace:	mov    esp,0xdf1dca20
  427ad3:	or     BYTE PTR [esi-0xbce8126],dl
  427ad9:	addr16 dec ebx
  427adb:	ss xchg ebx,eax
  427add:	adc    ebx,DWORD PTR [eax]
  427adf:	js     0x427ad0
  427ae1:	loope  0x427ab3
  427ae3:	dec    esp
  427ae4:	jne    0x427a82
  427ae6:	lods   al,BYTE PTR ds:[esi]
  427ae7:	cwde   
  427ae8:	ffree  st(2)
  427aea:	xchg   edi,eax
  427aeb:	or     eax,0xc9bd6fb4
  427af0:	pop    es
  427af1:	fcom   DWORD PTR [ebp-0x6fdb42b8]
  427af7:	pop    edi
  427af8:	aas    
  427af9:	push   cs
  427afa:	pop    ebp
  427afb:	push   edi
  427afc:	xchg   edi,eax
  427afd:	fninit 
  427aff:	cmp    cl,BYTE PTR [ecx-0x2beff757]
  427b05:	push   eax
  427b06:	mov    WORD PTR [esi-0x704c9fc],gs
  427b0c:	or     edx,DWORD PTR [ebx-0x7e]
  427b0f:	mov    ah,0x1a
  427b11:	test   al,0x33
  427b13:	mov    edx,0x55545f6d
  427b18:	ficom  WORD PTR [ebx+edx*8+0x15]
  427b1c:	adc    BYTE PTR [edx+ebx*1+0x0],bh
  427b20:	inc    edx
  427b21:	arpl   WORD PTR [ebp-0x197d66af],cx
  427b27:	call   0xc9373d05
  427b2c:	fsub   st(3),st
  427b2e:	(bad)  
  427b2f:	shr    DWORD PTR [ebp-0x31],1
  427b32:	xor    DWORD PTR [ebx+0x2ce2b9bb],0x2a73e4e
  427b3c:	ror    BYTE PTR [edx],cl
  427b3e:	push   0x70b466d6
  427b43:	jecxz  0x427b59
  427b45:	xlat   BYTE PTR ds:[ebx]
  427b46:	push   ebp
  427b47:	(bad)  
  427b48:	pop    esi
  427b49:	loope  0x427bc1
  427b4b:	imul   edx,eax,0x428e8957
  427b51:	sti    
  427b52:	not    DWORD PTR [ecx+0x6a]
  427b55:	daa    
  427b56:	xor    BYTE PTR [ecx-0x6c],bl
  427b59:	(bad)  
  427b5b:	loope  0x427ba0
  427b5d:	fimul  WORD PTR [eax+0x705bffc7]
  427b63:	dec    edi
  427b64:	cmp    ch,BYTE PTR [ebx-0x31]
  427b67:	sub    ah,BYTE PTR [eax]
  427b69:	stos   BYTE PTR es:[edi],al
  427b6a:	and    eax,DWORD PTR [ebp+0x3d]
  427b6d:	sub    al,0x83
  427b70:	bound  ebp,QWORD PTR [ebp-0x61]
  427b73:	add    al,0x4
  427b75:	enter  0xe493,0x30
  427b79:	sub    BYTE PTR [edi+0x6dbc90a7],0xa5
  427b80:	scas   al,BYTE PTR es:[edi]
  427b81:	test   al,0xc7
  427b83:	or     BYTE PTR ds:0x8aea7556,ah
  427b89:	aaa    
  427b8a:	int    0x15
  427b8c:	fiadd  DWORD PTR [eax+0x731cc786]
  427b92:	scas   eax,DWORD PTR es:[edi]
  427b93:	mov    cl,0xc6
  427b95:	mov    WORD PTR ds:0x3773c5ca,?
  427b9b:	imul   ebx,edx,0xb1f45ec
  427ba1:	dec    edi
  427ba2:	mov    cl,0xe7
  427ba4:	test   eax,0xd52700b3
  427ba9:	add    eax,0xa7d2ba9b
  427bae:	jle    0x427b49
  427bb0:	xor    al,0x4e
  427bb2:	std    
  427bb3:	or     al,0xcf
  427bb5:	aad    0x12
  427bb7:	pop    edx
  427bb8:	pop    ecx
  427bb9:	jb     0x427c18
  427bbb:	std    
  427bbc:	mov    bl,0x50
  427bbe:	je     0x427ba1
  427bc0:	es sbb eax,0xc33c6054
  427bc6:	xchg   DWORD PTR [ebp+0x70],esi
  427bc9:	jecxz  0x427c22
  427bcb:	jo     0x427b53
  427bcd:	sub    DWORD PTR [eax],eax
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x629fe2d0
  427be0:	into   
  427be1:	sbb    al,0xc1
  427be3:	repz add DWORD PTR [eax],eax
  427be6:	hlt    
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [esi+0x41159abe],ch
  427bef:	push   ds
  427bf0:	push   es
  427bf1:	ds dec eax
  427bf3:	and    al,0xb0
  427bf5:	add    al,0xa1
  427bf7:	or     eax,0x72b3ae1a
  427bfc:	and    DWORD PTR [ebp-0x10],eax
  427bff:	mov    esp,0x2ed2a9c7
  427c04:	push   ebx
  427c05:	test   al,0xfa
  427c07:	jg     0x427c1d
  427c09:	dec    eax
  427c0a:	mov    ebx,0x2f49fbad
  427c0f:	jp     0x427c0f
  427c11:	sub    DWORD PTR [eax+eax*4-0x35],ebp
  427c15:	dec    edi
  427c16:	mov    esi,?
  427c18:	cmp    DWORD PTR [edi+0x41],edx
  427c1b:	pop    ds
  427c1c:	push   0xffffffa1
  427c1e:	cmp    esi,DWORD PTR [esi]
  427c20:	fidivr DWORD PTR [esp+edx*4]
  427c23:	mov    dl,0x31
  427c25:	push   es
  427c26:	xchg   esi,eax
  427c27:	or     eax,0x9b09a887
  427c2c:	das    
  427c2d:	ror    DWORD PTR [ebx-0x4d],1
  427c30:	aam    0x8d
  427c32:	push   ss
  427c33:	and    esp,esi
  427c35:	xchg   esp,eax
  427c36:	js     0x427c1b
  427c38:	mov    BYTE PTR [eax],0x70
  427c3b:	aad    0x53
  427c3d:	mov    bh,bl
  427c3f:	sbb    dh,BYTE PTR [eax]
  427c41:	fisttp QWORD PTR [eax]
  427c43:	dec    ebx
  427c44:	nop
  427c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c46:	jne    0x427be8
  427c48:	ins    BYTE PTR es:[edi],dx
  427c49:	int    0x48
  427c4b:	mov    al,0xd4
  427c4d:	mov    ebx,0x3219698d
  427c52:	and    eax,ebp
  427c54:	sar    DWORD PTR [ebp+0x67],0xa9
  427c58:	push   cs
  427c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c5a:	sbb    al,0xc7
  427c5c:	push   0x44
  427c5e:	call   0x7273:0x48dd1340
  427c65:	mov    dl,BYTE PTR [ebx-0x37]
  427c68:	jecxz  0x427ca8
  427c6a:	stos   BYTE PTR es:[edi],al
  427c6b:	mov    DWORD PTR [ebp+ecx*2+0x7c82aa03],ebp
  427c72:	(bad)
  427c75:	fsub   DWORD PTR [edx]
  427c77:	inc    ecx
  427c78:	xchg   ebp,eax
  427c79:	int3   
  427c7a:	outs   dx,DWORD PTR ds:[esi]
  427c7b:	sub    edi,edx
  427c7d:	dec    edx
  427c7e:	std    
  427c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c80:	jmp    0x427c80
  427c82:	pop    edx
  427c83:	into   
  427c84:	jmp    0x427cb3
  427c86:	scas   al,BYTE PTR es:[edi]
  427c87:	sub    eax,0xdfc122db
  427c8c:	sbb    ebx,DWORD PTR [edi+0x44ed298b]
  427c92:	outs   dx,DWORD PTR ds:[esi]
  427c93:	cmp    ebx,esp
  427c95:	pushf  
  427c96:	ss loop 0x427caf
  427c99:	pop    eax
  427c9a:	mov    ds:0x74585f97,eax
  427c9f:	dec    ebx
  427ca0:	outs   dx,BYTE PTR ds:[esi]
  427ca1:	xor    al,0xfe
  427ca3:	(bad)  
  427ca4:	cmp    edx,edi
  427ca6:	jmp    0x427c8c
  427ca8:	pop    es
  427ca9:	test   al,0xfa
  427cab:	inc    esi
  427cac:	mov    BYTE PTR [ecx-0x652b185e],bl
  427cb2:	mov    bh,0xad
  427cb4:	pop    ebp
  427cb5:	sub    esp,edx
  427cb7:	addr16 daa 
  427cb9:	sahf   
  427cba:	mov    bl,0x94
  427cbc:	dec    ebp
  427cbd:	push   es
  427cbe:	dec    edx
  427cbf:	out    dx,al
  427cc0:	ins    BYTE PTR es:[edi],dx
  427cc1:	or     ebx,ebp
  427cc3:	fucomp st(1)
  427cc5:	mov    eax,0xffb38d0d
  427cca:	fst    QWORD PTR [ecx-0x2c]
  427ccd:	out    dx,al
  427cce:	inc    ebp
  427ccf:	sahf   
  427cd0:	jno    0x427c84
  427cd2:	inc    ebp
  427cd3:	pushf  
  427cd4:	dec    ecx
  427cd5:	mov    cl,ch
  427cd7:	mov    eax,0x3c85aa2f
  427cdc:	in     eax,0x1b
  427cde:	sub    DWORD PTR [edx],eax
  427ce0:	pop    ss
  427ce1:	nop
  427ce2:	mov    ah,BYTE PTR [esi]
  427ce4:	xchg   esp,eax
  427ce5:	pop    esi
  427ce6:	mov    eax,0x1418f61b
  427ceb:	sti    
  427cec:	xor    edx,ebp
  427cee:	mov    ch,0x1a
  427cf0:	pop    ss
  427cf1:	push   ebp
  427cf2:	or     ebx,DWORD PTR [edi+0x4fbd2949]
  427cf8:	repz jp 0x427d00
  427cfb:	arpl   WORD PTR [eax+0xb2b1d33],si
  427d01:	and    al,0xed
  427d03:	inc    eax
  427d04:	loop   0x427c8d
  427d06:	push   edx
  427d07:	dec    ebx
  427d08:	and    BYTE PTR [ebx+0x58705386],0x71
  427d0f:	mov    ah,BYTE PTR [esi+0x23]
  427d12:	push   eax
  427d13:	iret   
  427d14:	sub    eax,0x3c2c0091
  427d19:	jl     0x427d7c
  427d1b:	loop   0x427d1c
  427d1d:	push   edx
  427d1e:	stos   DWORD PTR es:[edi],eax
  427d1f:	adc    ah,ch
  427d21:	mov    ebx,0xbae5ee02
  427d26:	xchg   esi,eax
  427d27:	mov    bl,0x78
  427d29:	push   ds
  427d2a:	nop
  427d2b:	pusha  
  427d2c:	sub    BYTE PTR ds:0x8ded454c,bl
  427d32:	inc    edx
  427d33:	add    DWORD PTR [ebp-0x3a6299ae],esp
  427d39:	or     eax,0x8afd5ffb
  427d3e:	arpl   WORD PTR ds:0x85b21678,cx
  427d44:	popf   
  427d45:	adc    al,0xbe
  427d47:	mov    edx,0x3f826d87
  427d4c:	pop    ecx
  427d4d:	pushf  
  427d4e:	and    DWORD PTR [ecx+0x6e],0xfffffff7
  427d52:	aad    0x53
  427d54:	dec    ebp
  427d55:	cmp    al,0xd2
  427d57:	rol    ebx,cl
  427d59:	mov    ebp,0x3fb1edd2
  427d5e:	test   DWORD PTR [edi+0x4c],esi
  427d61:	mov    ebp,0xb3628a47
  427d66:	daa    
  427d67:	mov    eax,0xc360e4ea
  427d6c:	xchg   esp,eax
  427d6d:	adc    bl,BYTE PTR [edx+0x4d]
  427d70:	or     al,0x35
  427d72:	ret    
  427d73:	mov    dl,0xe6
  427d75:	(bad)  [edi+0x6a4369bb]
  427d7b:	push   edx
  427d7c:	jbe    0x427d0c
  427d7e:	xchg   ebp,eax
  427d7f:	and    al,0xda
  427d81:	jle    0x427d88
  427d83:	addr16 xor bh,dh
  427d86:	lea    eax,[edi-0x30]
  427d89:	adc    ebx,DWORD PTR [esp+ecx*8-0x39104ec9]
  427d90:	das    
  427d91:	sub    ch,BYTE PTR cs:[edx]
  427d94:	sahf   
  427d95:	xchg   ebx,eax
  427d96:	or     al,0xc8
  427d98:	push   esp
  427d99:	push   eax
  427d9a:	es iret 
  427d9c:	push   edi
  427d9d:	xchg   edx,eax
  427d9e:	out    0xe0,al
  427da0:	test   BYTE PTR [edx-0x4e],dh
  427da3:	std    
  427da4:	adc    esp,ebp
  427da6:	(bad)  
  427da8:	pop    ebp
  427da9:	pop    eax
  427daa:	(bad)  
  427dab:	jbe    0x427d30
  427dad:	mov    ds:0x23613336,al
  427db2:	aad    0x3e
  427db4:	sub    DWORD PTR [esi],ebx
  427db6:	push   0xbd8e9fe6
  427dbb:	pop    ecx
  427dbc:	mov    edx,0xc13e7a7d
  427dc1:	(bad)  
  427dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dc3:	pop    eax
  427dc4:	add    eax,0xd2fdfd73
  427dc9:	imul   ecx,DWORD PTR [ebx],0xffffffb2
  427dcc:	push   0xffffffe2
  427dce:	jmp    0x23af:0x49c91e6f
  427dd5:	adc    BYTE PTR [ebx],0x65
  427dd8:	adc    esp,DWORD PTR [ebx+0x5a]
  427ddb:	and    eax,DWORD PTR [ebx+ebp*1+0x2e]
  427ddf:	and    al,0x9c
  427de1:	clc    
  427de2:	or     BYTE PTR [ecx-0x6c],ch
  427de5:	mov    WORD PTR [ecx+0x5f],ss
  427de8:	cmp    al,0x87
  427dea:	dec    esi
  427deb:	addr16 adc eax,0x471428a2
  427df1:	imul   esp,DWORD PTR [eax-0x1ab33701],0xffffff84
  427df8:	sti    
  427df9:	jmp    0xfe52:0x9f4fea03
  427e00:	out    0x98,eax
  427e02:	fstp   QWORD PTR [ecx-0x46625aff]
  427e08:	jae    0x427df9
  427e0a:	cmc    
  427e0b:	mov    BYTE PTR [ecx-0x7d8477d6],dl
  427e11:	push   cs
  427e12:	retf   
  427e13:	jb     0x427e25
  427e15:	int3   
  427e16:	xacquire xchg BYTE PTR [ebp+eax*1-0x119d656b],dl
  427e1e:	imul   edi,DWORD PTR [esi+0x33440ca8],0x1e
  427e25:	lea    edx,[eax+esi*2+0x14]
  427e29:	dec    ebp
  427e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e2b:	mov    ebx,0x88b3a90d
  427e30:	inc    ecx
  427e31:	retf   
  427e32:	mov    cl,0xa4
  427e34:	neg    DWORD PTR [edx-0x52]
  427e37:	scas   al,BYTE PTR es:[edi]
  427e38:	test   esi,ecx
  427e3a:	aam    0x37
  427e3c:	retf   
  427e3d:	cmc    
  427e3e:	test   al,0x23
  427e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e41:	xlat   BYTE PTR ds:[ebx]
  427e42:	icebp  
  427e43:	call   0x51104167
  427e48:	add    ah,BYTE PTR [edx-0x6b]
  427e4b:	loop   0x427dce
  427e4d:	fs ins BYTE PTR es:[edi],dx
  427e4f:	and    BYTE PTR [eax+0xf8a3408],dh
  427e55:	inc    esp
  427e56:	push   ebp
  427e57:	or     eax,0xa61a9c15
  427e5c:	jo     0x427eb0
  427e5e:	retf   
  427e5f:	ret    0x3184
  427e62:	mov    WORD PTR [edi-0x78a67ad2],ds
  427e68:	jae    0x427e49
  427e6a:	daa    
  427e6b:	jmp    0x582320c6
  427e70:	popf   
  427e71:	repnz outs dx,DWORD PTR ds:[esi]
  427e73:	imul   edx,edx,0x30
  427e76:	arpl   WORD PTR [ebx+ecx*8],bp
  427e79:	inc    ecx
  427e7a:	inc    edi
  427e7b:	adc    eax,0x88e56291
  427e80:	nop
  427e81:	int    0x4c
  427e83:	iret   
  427e84:	jbe    0x427e39
  427e86:	xchg   ecx,eax
  427e87:	dec    DWORD PTR [ebp-0x30783807]
  427e8d:	sub    dl,cl
  427e8f:	add    al,0x9d
  427e91:	xchg   ebx,eax
  427e92:	and    DWORD PTR ds:0x7b6aaccd,0x6673307b
  427e9c:	(bad)  [edx]
  427e9e:	fistp  WORD PTR [esi]
  427ea0:	mov    al,0x4d
  427ea2:	add    al,0xe9
  427ea5:	cmp    edi,DWORD PTR ds:0xb563f381
  427eab:	adc    ch,BYTE PTR [ecx]
  427ead:	sbb    cl,BYTE PTR [edi-0x49]
  427eb0:	mov    esp,0xd6084f3e
  427eb5:	xchg   edi,eax
  427eb6:	sub    bh,BYTE PTR [ebp+0x37]
  427eb9:	cmp    eax,0x4291edce
  427ebe:	enter  0x6aed,0xb
  427ec2:	scas   eax,DWORD PTR es:[edi]
  427ec3:	popf   
  427ec4:	push   esi
  427ec5:	sti    
  427ec6:	es jns 0x427e9e
  427ec9:	out    dx,eax
  427eca:	ja     0x427e55
  427ecc:	loopne 0x427f1d
  427ece:	pop    ecx
  427ecf:	xor    BYTE PTR [edi],bl
  427ed1:	outs   dx,BYTE PTR ds:[esi]
  427ed2:	loope  0x427ed1
  427ed4:	retf   
  427ed5:	daa    
  427ed6:	(bad)  
  427ed7:	mov    ch,0xdb
  427ed9:	sbb    eax,0xad8ca317
  427ede:	in     eax,0x1f
  427ee0:	std    
  427ee1:	icebp  
  427ee2:	lock push 0xffffffac
  427ee5:	les    esp,FWORD PTR [edx+edi*1-0x65bdf719]
  427eec:	mov    ebp,0x12d3950
  427ef1:	outs   dx,DWORD PTR ds:[esi]
  427ef2:	sub    dl,BYTE PTR [ebp-0x63]
  427ef5:	mov    dh,0x4e
  427ef7:	xor    dh,BYTE PTR [ebx+0x31f23ac4]
  427efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427efe:	fwait
  427eff:	repz popa 
  427f01:	daa    
  427f02:	test   BYTE PTR [ebx+0x55],0x43
  427f06:	sti    
  427f07:	sub    eax,DWORD PTR [edi+0x6c]
  427f0a:	xor    DWORD PTR [ecx-0x3d9c232d],edx
  427f10:	dec    esi
  427f11:	fdivrp st(7),st
  427f13:	das    
  427f14:	push   esi
  427f15:	popa   
  427f16:	retf   
  427f17:	mov    al,ds:0x7e9b4a8c
  427f1c:	mov    cl,0xdf
  427f1e:	pop    ecx
  427f1f:	stc    
  427f20:	inc    edx
  427f21:	push   edx
  427f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f23:	mov    dl,0xf7
  427f25:	cdq    
  427f26:	call   0x1671:0x19068fba
  427f2d:	mov    ebx,0xc06bc821
  427f32:	je     0x427eb5
  427f34:	repz cmp DWORD PTR ds:0x5a81,eax
  427f3a:	add    DWORD PTR [edx+0x2c4f1064],esi
  427f40:	xchg   ebp,eax
  427f41:	and    ecx,DWORD PTR [ecx]
  427f43:	mov    ds:0x3d478b9d,eax
  427f48:	xor    edx,0x23fed056
  427f4e:	mov    WORD PTR [esi-0x3c],cs
  427f51:	adc    eax,0x4fbe68ad
  427f56:	inc    ebp
  427f57:	sbb    esp,eax
  427f59:	pop    es
  427f5a:	inc    ebp
  427f5b:	adc    DWORD PTR [edx],ebp
  427f5d:	add    ebx,DWORD PTR [eax-0x530e92c6]
  427f63:	mov    bh,0xe9
  427f65:	lahf   
  427f66:	into   
  427f67:	pushf  
  427f68:	into   
  427f69:	dec    ebp
  427f6a:	test   BYTE PTR [edx-0x6a59b4dd],bl
  427f70:	and    al,0x26
  427f72:	fld    TBYTE PTR [edx]
  427f74:	in     al,0xcd
  427f76:	jp     0x427f60
  427f78:	inc    ebp
  427f79:	and    ebx,edx
  427f7b:	dec    edx
  427f7c:	sub    edi,DWORD PTR ss:[ebx]
  427f7f:	popa   
  427f80:	xor    cl,BYTE PTR [esi-0x1dd8587a]
  427f86:	dec    esp
  427f87:	fbld   TBYTE PTR [esi-0x9]
  427f8a:	pop    ds
  427f8b:	inc    esi
  427f8c:	jmp    0x427f71
  427f8e:	retf   
  427f8f:	repnz or al,0xf4
  427f92:	xchg   ebx,eax
  427f93:	jg     0x427f97
  427f95:	mov    eax,0xf5c987c9
  427f9a:	inc    ecx
  427f9b:	ror    DWORD PTR [esi-0x27],1
  427f9e:	inc    edx
  427f9f:	pushf  
  427fa0:	mov    ebx,0x117fc3fa
  427fa5:	ins    DWORD PTR es:[edi],dx
  427fa6:	(bad)  
  427fa7:	cwde   
  427fa8:	stc    
  427fa9:	ret    0x796d
  427fac:	aaa    
  427fad:	cmp    DWORD PTR [esi+0xceeaaba],esi
  427fb3:	adc    BYTE PTR [ebx+0xa912434],bl
  427fb9:	and    BYTE PTR [ecx-0x7f],dl
  427fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fbd:	mov    esp,0x6a3b9348
  427fc2:	push   eax
  427fc3:	mov    eax,ds:0xbb52c154
  427fc8:	pop    ss
  427fc9:	or     ebp,DWORD PTR [ecx]
  427fcb:	(bad)  
  427fcc:	ror    BYTE PTR [edx],cl
  427fce:	icebp  
  427fcf:	mov    edx,DWORD PTR [edi-0x62]
  427fd2:	lea    edi,[edi+ebp*1]
  427fd5:	pop    edi
  427fd6:	call   0x9c4bafc9
  427fdb:	xchg   ecx,eax
  427fdc:	xor    edx,ebx
  427fde:	enter  0xe767,0x1b
  427fe2:	or     BYTE PTR [eax-0x68],dh
  427fe5:	jge    0x427fbb
  427fe7:	aad    0xaa
  427fe9:	push   edi
  427fea:	out    0x9d,al
  427fec:	push   ebx
  427fed:	fidivr WORD PTR ds:0x5c727a6d
  427ff3:	repnz out 0x20,eax
  427ff6:	out    0x37,eax
  427ff8:	test   al,0xed
  427ffa:	lods   al,BYTE PTR ds:[esi]
  427ffb:	sbb    al,0x3b
  427ffd:	push   edi
  427ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fff:	pop    edi
  428000:	mov    dl,BYTE PTR [ebx+esi*4+0x2d]
  428004:	popf   
  428005:	adc    BYTE PTR [eax-0x19],ah
  428008:	ins    BYTE PTR es:[edi],dx
  428009:	xor    BYTE PTR [ecx+0x14],0x4c
  42800d:	ror    BYTE PTR [edi-0x509914ce],0x6c
  428014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428015:	fild   WORD PTR [edx]
  428017:	(bad)  
  428018:	push   DWORD PTR [esi]
  42801a:	inc    eax
  42801b:	adc    ecx,ebp
  42801d:	stc    
  42801e:	mov    esi,0x68471e62
  428023:	(bad)  
  428024:	fwait
  428025:	push   es
  428026:	(bad)  
  428027:	and    al,0x7d
  428029:	cwde   
  42802a:	popa   
  42802b:	or     ebp,DWORD PTR [edx]
  42802d:	jle    0x428072
  42802f:	ins    BYTE PTR es:[edi],dx
  428030:	adc    ebx,DWORD PTR [esi-0x45]
  428033:	xor    ecx,DWORD PTR [edx+0x61614f64]
  428039:	push   ebx
  42803a:	adc    eax,0x3a83c200
  42803f:	xchg   ecx,esi
  428041:	sub    BYTE PTR [eax+0x4cf3848e],bl
  428047:	pop    edx
  428048:	(bad)  
  428049:	popa   
  42804a:	inc    eax
  42804b:	cmc    
  42804c:	mov    WORD PTR [edx],?
  42804e:	test   al,0x5e
  428050:	mov    ecx,0xa8112767
  428055:	cmp    BYTE PTR [ecx],dl
  428057:	ret    0xaeee
  42805a:	sbb    al,0x8a
  42805c:	xchg   edx,eax
  42805d:	scas   eax,DWORD PTR es:[edi]
  42805e:	test   al,0x24
  428060:	jb     0x428064
  428062:	int3   
  428063:	or     eax,0x3c40ab00
  428068:	mov    bl,0x99
  42806a:	push   ds
  42806b:	scas   al,BYTE PTR es:[edi]
  42806c:	popa   
  42806d:	(bad)  
  42806e:	push   ss
  42806f:	cld    
  428070:	loope  0x428054
  428072:	mov    edx,0xaf4bc784
  428077:	jmp    0x428065
  428079:	pop    edi
  42807a:	xchg   esi,edi
  42807c:	clc    
  42807d:	cdq    
  42807e:	pop    ebp
  42807f:	jge    0x4280cd
  428081:	push   0x6a
  428083:	mov    esp,0x315b924c
  428088:	jb     0x42806c
  42808a:	daa    
  42808b:	icebp  
  42808c:	movlps QWORD PTR [esi],xmm7
  42808f:	xchg   ebp,eax
  428090:	jae    0x428050
  428092:	push   esp
  428093:	std    
  428094:	fwait
  428095:	sar    ch,1
  428097:	adc    BYTE PTR [ecx],dl
  428099:	lds    esp,FWORD PTR [eax-0x420d179a]
  42809f:	xchg   edi,eax
  4280a0:	add    BYTE PTR [edx+0x3047cd97],cl
  4280a6:	xchg   esp,eax
  4280a7:	out    0x57,al
  4280a9:	mov    dh,0x6b
  4280ab:	rol    DWORD PTR [edi-0x69f07cce],0xc5
  4280b2:	mov    dh,0x7a
  4280b4:	hlt    
  4280b5:	ds mov DWORD PTR gs:[ecx-0x2b113e3e],ebp
  4280bd:	aam    0xdd
  4280bf:	push   esi
  4280c0:	pop    ecx
  4280c1:	fdivr  QWORD PTR [ebx+eax*1-0x47]
  4280c5:	sahf   
  4280c6:	mov    ebp,0xdeabbff
  4280cb:	xchg   edi,eax
  4280cc:	push   edx
  4280cd:	lock enter 0x3992,0x47
  4280d2:	test   DWORD PTR [ebx-0x31],ebp
  4280d5:	je     0x428059
  4280d7:	test   DWORD PTR [ebp+0x6fb8b7ed],esp
  4280dd:	pop    es
  4280de:	add    BYTE PTR [eax],al
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	(bad)  
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0xdd89742]
  4280ef:	cmp    esi,DWORD PTR [esi+0x1f8b56b]
  4280f5:	add    ah,dh
  4280f7:	add    al,0x0
  4280f9:	add    BYTE PTR [edi],ah
  4280fb:	and    eax,0x16d0818b
  428100:	push   0xfffffff5
  428102:	or     BYTE PTR [ebp-0x33c8b831],dl
  428108:	mov    esp,0xd7272173
  42810d:	mov    edi,0xeff28228
  428112:	cmp    bh,0x57
  428115:	adc    ecx,ebp
  428117:	and    cl,BYTE PTR [ecx]
  428119:	loopne 0x4280ca
  42811b:	mov    bh,0x8
  42811d:	jle    0x42813e
  42811f:	mov    BYTE PTR [edi],bl
  428121:	add    BYTE PTR [edi+0x64d5cb50],ah
  428127:	sbb    BYTE PTR [edi+ebx*2],0x68
  42812b:	push   ebp
  42812c:	lea    edx,[ebx-0x283ec09c]
  428132:	mov    ah,0xb2
  428134:	out    0xc7,al
  428136:	push   ebp
  428137:	mov    ah,0xe7
  428139:	and    eax,0xcb7ec747
  42813e:	mov    al,0x40
  428140:	ret    
  428141:	sub    esi,DWORD PTR [edi-0x3c]
  428144:	xchg   edx,esp
  428146:	call   0xf914:0xb8963c8b
  42814d:	stos   DWORD PTR es:[edi],eax
  42814e:	aad    0xbd
  428150:	out    dx,al
  428151:	inc    edx
  428152:	jae    0x4281a3
  428154:	retf   0xa4fd
  428157:	and    DWORD PTR [esi*2-0x41ad3022],esp
  42815e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42815f:	cwde   
  428160:	or     al,0xf6
  428162:	call   DWORD PTR [ebp-0x58]
  428165:	stc    
  428166:	nop
  428167:	ins    BYTE PTR es:[edi],dx
  428168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428169:	dec    edi
  42816a:	ja     0x42815d
  42816c:	pop    edi
  42816d:	fidivr WORD PTR [esi]
  42816f:	test   eax,0xb51f1525
  428174:	cli    
  428175:	jl     0x4281d1
  428177:	lock mov BYTE PTR [ecx-0x21],ch
  42817b:	fs pop ebp
  42817d:	lahf   
  42817e:	xor    eax,0xba80e47b
  428183:	push   ebx
  428184:	xor    DWORD PTR ds:0x4a47683f,esi
  42818a:	es sub eax,0xd21c8789
  428190:	(bad)  
  428191:	std    
  428192:	addr16 push ds
  428194:	icebp  
  428195:	mov    ecx,0x6c483cd1
  42819a:	xor    cl,BYTE PTR [esi]
  42819c:	lock inc esi
  42819e:	mov    esp,0x56ad17cd
  4281a3:	mov    ecx,0xc2cd48d9
  4281a8:	jnp    0x4281db
  4281aa:	(bad)  
  4281ab:	gs int 0xb1
  4281ae:	jl     0x4281c8
  4281b0:	mov    ebp,0x55b70879
  4281b5:	jmp    0xddf3:0xf6314de2
  4281bc:	lea    ebx,[edi+0x29]
  4281bf:	adc    al,0x67
  4281c1:	call   0x3461:0xbf5ecfdd
  4281c8:	mov    ds:0x1d1759c3,ax
  4281ce:	stc    
  4281cf:	repz mov bx,0x3490
  4281d4:	xchg   edi,eax
  4281d5:	pop    es
  4281d6:	mov    bl,0xb7
  4281d8:	pop    esp
  4281d9:	push   eax
  4281da:	imul   esp,DWORD PTR [edx+0x48],0x2332a24d
  4281e1:	iret   
  4281e2:	pop    ebp
  4281e3:	jg     0x4281e3
  4281e5:	sub    DWORD PTR [ebp*2-0x3234a7d0],ebp
  4281ec:	(bad)  
  4281ed:	cmp    al,0x3c
  4281ef:	cwde   
  4281f0:	lods   eax,DWORD PTR ds:[esi]
  4281f1:	leave  
  4281f2:	or     ebx,DWORD PTR [esi+0xe23a8fa]
  4281f8:	in     eax,dx
  4281f9:	xor    BYTE PTR [ebp-0x7ef07c59],dl
  4281ff:	fs jmp 0x9f81:0x22ce
  428206:	jns    0x428191
  428208:	mov    ah,0x19
  42820a:	adc    al,0x5b
  42820c:	shr    BYTE PTR [ebx-0x63],1
  42820f:	or     dl,al
  428211:	fimul  DWORD PTR [edi-0x9]
  428214:	in     al,0xac
  428216:	lock addr16 and al,0x8e
  42821a:	inc    ebp
  42821b:	mov    WORD PTR [esp+eiz*4-0x3d5d610b],ds
  428222:	popf   
  428223:	sub    eax,0x9e559026
  428228:	ds sub edx,esi
  42822b:	icebp  
  42822c:	cmc    
  42822d:	mov    esp,0x360ec06e
  428232:	mov    ecx,0xe485847d
  428237:	pop    eax
  428238:	jle    0x428201
  42823a:	fwait
  42823b:	push   0xff219e64
  428240:	inc    ecx
  428241:	mov    ah,0x59
  428243:	dec    eax
  428244:	mov    ss,WORD PTR [esi+0x708183e4]
  42824a:	push   0x5e7f8582
  42824f:	xchg   ecx,eax
  428250:	sar    ecx,cl
  428252:	dec    edx
  428253:	fwait
  428254:	mov    dh,0xc
  428256:	dec    ebx
  428257:	or     esp,DWORD PTR [edi+eax*4-0x1b06f9b2]
  42825e:	jne    0x428212
  428260:	or     ch,BYTE PTR [edi+0xf]
  428263:	dec    ebx
  428264:	stos   BYTE PTR es:[edi],al
  428265:	mov    eax,ds:0x444c0b2d
  42826a:	sub    ch,BYTE PTR [edx]
  42826c:	mov    ds:0x6184c6a2,eax
  428271:	cld    
  428272:	out    dx,eax
  428273:	sub    BYTE PTR [ebp+0xb],dh
  428276:	add    eax,0x1e15436b
  42827b:	repz cmc 
  42827d:	stos   DWORD PTR es:[edi],eax
  42827e:	aam    0xe9
  428280:	div    BYTE PTR [ecx+0x75861868]
  428286:	xlat   BYTE PTR ds:[ebx]
  428287:	in     al,dx
  428288:	adc    bl,ah
  42828a:	ret    
  42828b:	js     0x42829c
  42828d:	pushf  
  42828e:	pop    edx
  42828f:	adc    BYTE PTR [ecx+0x2d],cl
  428292:	jo     0x42821c
  428294:	daa    
  428295:	sbb    ecx,DWORD PTR [esp+ecx*1-0x15484fcd]
  42829c:	xchg   edi,eax
  42829d:	adc    eax,0x6ec56858
  4282a2:	inc    ebp
  4282a3:	(bad)  
  4282a4:	aam    0xd7
  4282a6:	jle    0x428248
  4282a8:	pop    ebx
  4282a9:	inc    edx
  4282aa:	cs adc eax,0xbb43f3e5
  4282b0:	cmp    al,0xcc
  4282b2:	cmp    cl,BYTE PTR [ebx-0x5e]
  4282b5:	add    al,0x87
  4282b7:	pushw  cs
  4282b9:	and    eax,0xb4f3b078
  4282be:	ss ds popf 
  4282c1:	lods   eax,DWORD PTR ds:[esi]
  4282c2:	or     al,0xf
  4282c4:	xor    al,0xe
  4282c6:	mov    eax,0x8fe942f6
  4282cb:	gs sub eax,0xf894e7b4
  4282d1:	jo     0x4282c8
  4282d3:	stos   BYTE PTR es:[edi],al
  4282d4:	xor    DWORD PTR ds:[edi+0x2b],ecx
  4282d8:	cmp    bl,dl
  4282da:	mov    gs,WORD PTR [edi-0xc0432]
  4282e0:	xor    al,0xce
  4282e2:	inc    eax
  4282e3:	in     eax,dx
  4282e4:	sbb    al,0x2
  4282e6:	iret   
  4282e7:	and    al,0x63
  4282e9:	pop    esi
  4282ea:	mov    WORD PTR [esi-0x14],ds
  4282ed:	pop    ebx
  4282ee:	retf   
  4282ef:	cmp    DWORD PTR [esi-0x43ee7622],0x69955f9a
  4282f9:	fadd   QWORD PTR [edi-0x3cdaf057]
  4282ff:	and    al,bl
  428301:	mov    ds:0xe356d18c,al
  428306:	nop
  428307:	pavgb  mm6,mm3
  42830a:	out    0xe,eax
  42830c:	and    BYTE PTR ss:[edx+0xf],cl
  428310:	lods   al,BYTE PTR ds:[esi]
  428311:	(bad)  
  428312:	jo     0x42837e
  428314:	xchg   ebx,eax
  428315:	call   DWORD PTR [ebx-0x42bf8d0a]
  42831b:	jo     0x4282cc
  42831d:	pop    ss
  42831e:	not    BYTE PTR [eax+0x781eb08c]
  428324:	sbb    al,0xbd
  428326:	fisubr DWORD PTR [edi]
  428328:	xor    ah,BYTE PTR [esi-0x37]
  42832b:	xor    eax,0xdda98724
  428330:	and    al,0x1d
  428332:	dec    ebx
  428333:	out    dx,al
  428334:	stc    
  428335:	sub    ecx,DWORD PTR [esi]
  428337:	xchg   BYTE PTR [eax+ecx*8],bh
  42833a:	mov    bh,0x4b
  42833c:	xor    BYTE PTR [ebp+0x5c],al
  42833f:	or     BYTE PTR [edx+0xf],bh
  428342:	rdtsc  
  428344:	mov    eax,ds:0x7c2e43be
  428349:	std    
  42834a:	imul   esi,DWORD PTR [ebx+0x3b],0x6ed163dd
  428351:	add    eax,0x68f2858
  428356:	lods   al,BYTE PTR ds:[esi]
  428357:	mov    eax,0xd3d5f9e7
  42835c:	dec    ecx
  42835d:	popa   
  42835e:	int    0xb8
  428360:	pop    ds
  428361:	das    
  428362:	xchg   esi,eax
  428363:	aam    0xd8
  428365:	vmread DWORD PTR [esi+0x5e],edi
  428369:	les    edi,FWORD PTR [eax+0x68]
  42836c:	jbe    0x428340
  42836e:	pusha  
  42836f:	xor    eax,0x1cfae342
  428374:	or     BYTE PTR [ecx+esi*8+0x79],0x69
  428379:	aad    0xc7
  42837b:	pop    eax
  42837c:	popa   
  42837d:	scas   al,BYTE PTR es:[edi]
  42837e:	imul   esi,DWORD PTR [ebx+eax*8],0xffffff85
  428382:	mov    edx,0xee151fab
  428387:	loopne 0x4283f9
  428389:	sbb    eax,0x502f21b1
  42838e:	rcr    DWORD PTR [edi+0x49],0xb9
  428392:	imul   esp,DWORD PTR [edi-0x69],0xd7bc607e
  428399:	sbb    al,0xb3
  42839b:	fidiv  DWORD PTR [edx+eiz*2+0x2a5c884f]
  4283a2:	mov    DWORD PTR [edx+edi*1-0x465787c7],esp
  4283a9:	inc    esp
  4283aa:	xchg   edi,eax
  4283ab:	or     esi,DWORD PTR [ebp+0x4]
  4283ae:	outs   dx,DWORD PTR ds:[esi]
  4283b0:	in     eax,dx
  4283b1:	iret   
  4283b2:	jns    0x4283c8
  4283b4:	fist   DWORD PTR [esi-0x188d4970]
  4283ba:	xchg   edi,eax
  4283bb:	jb     0x428373
  4283bd:	out    0x64,al
  4283bf:	or     BYTE PTR [eax],bl
  4283c1:	mov    ebp,0x9c1bae88
  4283c6:	sub    BYTE PTR [esi+0x75],bh
  4283c9:	div    BYTE PTR [ebx-0x2bef101c]
  4283cf:	mov    bh,0x5b
  4283d1:	cmp    eax,DWORD PTR [ebx]
  4283d3:	ret    0xf16a
  4283d6:	and    DWORD PTR [eax],edi
  4283d8:	dec    edx
  4283d9:	dec    ecx
  4283da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283db:	sbb    ah,BYTE PTR [ebx-0x205fe1fc]
  4283e1:	push   ebx
  4283e2:	mov    dl,0x94
  4283e4:	inc    edi
  4283e5:	fs sahf 
  4283e7:	push   esp
  4283e8:	ror    ah,1
  4283ea:	fs ins DWORD PTR es:[edi],dx
  4283ec:	mov    edx,0x21fdb98a
  4283f1:	aad    0x9d
  4283f3:	je     0x428422
  4283f5:	adc    BYTE PTR [edi],cl
  4283f7:	mov    dl,0xea
  4283f9:	ja     0x4283ad
  4283fb:	shl    DWORD PTR [ebx+0x7db8ff4],1
  428401:	mov    ebp,0xe24006e4
  428406:	xchg   edi,eax
  428407:	adc    BYTE PTR [ecx+0x2b846a19],ah
  42840d:	or     DWORD PTR [esi],ebp
  42840f:	push   esp
  428410:	je     0x42840d
  428412:	lods   eax,DWORD PTR ds:[esi]
  428413:	dec    ebx
  428414:	ss pop es
  428416:	in     al,0x49
  428418:	sbb    BYTE PTR [esi+0x29],0x5f
  42841c:	popf   
  42841d:	out    0xc3,eax
  42841f:	mov    ah,0xb6
  428421:	repnz (bad) 
  428423:	icebp  
  428424:	test   eax,0xdd33c024
  428429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42842a:	dec    esi
  42842b:	retf   
  42842c:	mov    eax,ds:0x808156a
  428431:	mov    ecx,0x4e28025e
  428436:	idiv   BYTE PTR [edi+0x3eea7087]
  42843c:	ror    DWORD PTR [edi+0x2462c064],cl
  428442:	call   0x5ac1:0x2bbe120f
  428449:	rol    BYTE PTR [ecx],0x37
  42844c:	xchg   esi,eax
  42844d:	cmp    eax,0x313a63c5
  428452:	jnp    0x428435
  428454:	into   
  428455:	mov    ebp,0x4c58a1af
  42845a:	loopne 0x428403
  42845c:	lock and al,0xef
  42845f:	mov    bl,0x1
  428461:	push   eax
  428462:	ja     0x42847e
  428464:	sub    bl,dl
  428466:	icebp  
  428467:	or     eax,DWORD PTR [eax+0x542e7b58]
  42846d:	stc    
  42846e:	fwait
  42846f:	stos   DWORD PTR es:[edi],eax
  428470:	or     cl,BYTE PTR [edi+0xde17fda]
  428476:	sti    
  428477:	cmp    DWORD PTR [ecx+edi*2-0x6f607e6b],edx
  42847e:	test   BYTE PTR [edx-0x5b],dl
  428481:	popa   
  428482:	int    0xd
  428484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428485:	hlt    
  428486:	leave  
  428487:	aam    0x72
  428489:	leave  
  42848a:	cli    
  42848b:	out    dx,eax
  42848c:	pusha  
  42848d:	mov    edi,0x413d2640
  428492:	in     eax,dx
  428493:	test   eax,0xb9f4fa91
  428498:	int3   
  428499:	(bad)
  42849e:	pop    edx
  42849f:	or     al,0x5e
  4284a1:	sub    al,0x1e
  4284a3:	ins    DWORD PTR es:[edi],dx
  4284a4:	jbe    0x4284ae
  4284a6:	sub    eax,0x729ef768
  4284ab:	xchg   ebp,eax
  4284ac:	pop    ss
  4284ad:	mov    dh,0x18
  4284af:	inc    ebp
  4284b0:	inc    ebx
  4284b1:	adc    ebx,0xd6cd6a89
  4284b7:	pop    ss
  4284b8:	sub    bl,ch
  4284ba:	jb     0x4284d3
  4284bc:	nop
  4284bd:	lds    edi,FWORD PTR [edx-0x3e]
  4284c0:	jle    0x428461
  4284c2:	cld    
  4284c3:	mov    al,ds:0x89126f24
  4284c8:	inc    ecx
  4284c9:	ror    BYTE PTR ds:0x97356aa7,1
  4284cf:	mov    dh,0x65
  4284d1:	sbb    DWORD PTR [edx+0x37],eax
  4284d4:	mov    esp,0x35437a27
  4284d9:	adc    al,0x29
  4284db:	push   esi
  4284dd:	mov    ebx,0x319722c7
  4284e2:	or     eax,0xfd8ae7d8
  4284e7:	mov    BYTE PTR [edx-0x12fba432],ch
  4284ed:	fwait
  4284ee:	push   esi
  4284ef:	push   edx
  4284f0:	xchg   ebx,eax
  4284f1:	inc    edi
  4284f2:	mov    esi,0xc4e0a6d9
  4284f7:	aam    0x62
  4284f9:	and    BYTE PTR [eax+esi*2],dl
  4284fc:	xor    BYTE PTR [eax+0x29],dh
  4284ff:	xor    ebp,DWORD PTR [ecx+esi*2+0x13]
  428503:	das    
  428504:	ret    
  428505:	adc    BYTE PTR [eax],al
  428507:	push   0x24
  428509:	ins    BYTE PTR es:[edi],dx
  42850a:	in     eax,dx
  42850b:	add    BYTE PTR [ecx+0x53],bh
  42850e:	mov    esi,DWORD PTR [ebx+0x3b9e0b81]
  428514:	scas   al,BYTE PTR es:[edi]
  428515:	mov    ah,0x5b
  428517:	in     eax,dx
  428518:	lods   al,BYTE PTR ds:[esi]
  428519:	mov    WORD PTR [edi+ecx*4],ss
  42851c:	ret    
  42851d:	hlt    
  42851e:	icebp  
  42851f:	dec    edi
  428520:	sti    
  428521:	popf   
  428522:	cmp    eax,0x5923d55a
  428527:	mov    ebx,0x8231a82a
  42852c:	xlat   BYTE PTR ds:[ebx]
  42852d:	and    bh,BYTE PTR [ebx]
  42852f:	popa   
  428530:	cld    
  428531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428533:	jp     0x42854d
  428535:	daa    
  428536:	cs cli 
  428538:	xchg   edx,eax
  428539:	pop    ebx
  42853a:	pusha  
  42853b:	lea    ecx,[edx]
  42853d:	push   ds
  42853e:	mov    eax,ds:0x31b78e25
  428543:	xor    DWORD PTR [ecx],esi
  428545:	call   0xeebee75c
  42854a:	ds inc edx
  42854c:	sub    cl,BYTE PTR [edi-0x1dde674c]
  428552:	hlt    
  428553:	(bad)  [edi+0x5407b1ee]
  428559:	mov    al,0x52
  42855b:	ret    
  42855c:	imul   ecx,DWORD PTR [esi-0x3f],0xdab25cd
  428563:	stc    
  428564:	cli    
  428565:	sub    ch,BYTE PTR [ebx-0x4c7dcefe]
  42856b:	pop    ds
  42856c:	clc    
  42856d:	(bad)  
  42856e:	icebp  
  42856f:	outs   dx,BYTE PTR ds:[esi]
  428570:	mov    bl,0x57
  428572:	or     ebx,DWORD PTR [edi]
  428574:	sbb    BYTE PTR [eax],0x85
  428577:	xchg   esp,eax
  428578:	pop    edx
  428579:	mov    BYTE PTR [ecx-0x34011f26],dh
  42857f:	fisttp QWORD PTR [esi+0x672e578]
  428585:	and    ebx,DWORD PTR [ebx-0x1fa4c223]
  42858b:	dec    esi
  42858c:	mov    esi,0x90f10d8d
  428591:	mov    esp,0xa67e3538
  428596:	sbb    al,0x19
  428598:	sbb    al,0xb
  42859a:	jg     0x428541
  42859c:	mov    edx,cs
  42859e:	xchg   esi,eax
  42859f:	mov    ecx,DWORD PTR [eax-0x32]
  4285a2:	mov    ah,0xfb
  4285a4:	mov    ecx,0xb5e3cae6
  4285a9:	xchg   edx,eax
  4285aa:	ins    DWORD PTR es:[edi],dx
  4285ab:	ror    dl,0x58
  4285ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	xchg   ebx,eax
  4285b0:	and    ah,BYTE PTR [eax-0x3e0d3f0b]
  4285b6:	out    dx,al
  4285b7:	es push 0xffffff87
  4285ba:	jmp    0xe7dc74d3
  4285bf:	sahf   
  4285c0:	stos   DWORD PTR es:[edi],eax
  4285c1:	fwait
  4285c2:	mov    eax,0xc9e0c271
  4285c7:	daa    
  4285c8:	mov    BYTE PTR [edx+edi*1-0x384ece21],0xef
  4285d0:	in     al,dx
  4285d1:	in     eax,0x35
  4285d3:	push   ebp
  4285d4:	popa   
  4285d5:	mov    bh,0xab
  4285d7:	adc    ah,BYTE PTR [edi]
  4285d9:	pop    ebp
  4285da:	inc    ecx
  4285db:	stos   BYTE PTR es:[edi],al
  4285dc:	push   0xc15042ee
  4285e1:	mov    edi,0xf6892e12
  4285e6:	bound  eax,QWORD PTR [eax+0x6c]
  4285e9:	into   
  4285ea:	retf   
  4285eb:	pop    ebx
  4285ec:	test   BYTE PTR [esi+0x0],0x12
  4285f3:	adc    BYTE PTR [eax-0x41c16dc2],0xac
  4285fa:	retf   0x4cd7
  4285fd:	ins    BYTE PTR es:[edi],dx
  4285fe:	mov    ecx,0xa99a1973
  428603:	std    
  428604:	add    DWORD PTR [eax],eax
  428606:	push   es
  428607:	add    BYTE PTR [eax],al
  428609:	add    BYTE PTR [ecx],cl
  42860b:	mov    eax,ds:0xff338bc
	...
