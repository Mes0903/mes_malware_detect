
fa395c6dfaee78b3dc3095698bb94716ab9e09cff7122f140fa4c857c4d6fd61.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xbe55e01a
  402b89:	ss or  eax,0x7a7a7a32
  402b8f:	jp     0x402b68
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x2b],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1e42f8bf
  402c38:	jp     0x402c3c
  402c3a:	push   ebx
  402c3b:	xor    DWORD PTR [ecx],eax
  402c3d:	adc    ecx,DWORD PTR [esi]
  402c3f:	fdivrp st(3),st
  402c41:	sbb    al,ah
  402c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c44:	mov    ds:0xdd718f49,eax
  402c49:	js     0x402bec
  402c4b:	into   
  402c4c:	repnz and edi,0xc0eb3831
  402c53:	jnp    0x402caa
  402c55:	dec    edi
  402c56:	jno    0x402c3d
  402c58:	adc    BYTE PTR [edi+0x50d3c646],ah
  402c5e:	cli    
  402c5f:	aas    
  402c60:	jmp    0x402c2a
  402c62:	jne    0x402cd1
  402c64:	inc    ebx
  402c65:	sub    BYTE PTR [esi+0x11be22a7],bh
  402c6b:	addr16 data16 (bad) 
  402c6e:	retf   0xe571
  402c71:	jge    0x402ca7
  402c73:	and    BYTE PTR cs:[ecx+0x4b640ba4],ch
  402c7a:	sbb    ebx,ebp
  402c7c:	sub    cl,BYTE PTR [ecx+0x68605bc7]
  402c82:	dec    edx
  402c83:	sbb    eax,0x770a2b19
  402c88:	test   WORD PTR [eax-0x37],si
  402c8c:	fild   WORD PTR [ecx+0x748d754]
  402c92:	nop
  402c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c94:	xchg   edx,eax
  402c95:	add    eax,0x9ce075d6
  402c9a:	and    edi,DWORD PTR [ecx+0x71608e10]
  402ca0:	xor    BYTE PTR [edx],ch
  402ca2:	fs xchg edx,eax
  402ca4:	sbb    al,0x5a
  402ca6:	ja     0x402ce8
  402ca8:	loopne 0x402ca8
  402caa:	jnp    0x402d10
  402cac:	jbe    0x402cde
  402cae:	jecxz  0x402c87
  402cb0:	pusha  
  402cb1:	inc    edi
  402cb2:	pushf  
  402cb3:	add    al,0x37
  402cb5:	ret    
  402cb6:	xchg   edx,eax
  402cb7:	or     DWORD PTR [ecx],0xffffff80
  402cba:	stc    
  402cbb:	inc    esp
  402cbc:	inc    eax
  402cbd:	data16 and ch,BYTE PTR [ecx]
  402cc0:	mov    ah,0x60
  402cc2:	pop    ds
  402cc3:	(bad)  
  402cc5:	dec    BYTE PTR [edi-0xf]
  402cc8:	cmp    BYTE PTR [ebp+0x1b58949],cl
  402cce:	sub    bh,BYTE PTR ds:[ebx]
  402cd1:	sbb    esp,DWORD PTR [eax+0x7d]
  402cd4:	aas    
  402cd5:	xchg   edi,eax
  402cd6:	jno    0x402c7c
  402cd8:	shl    BYTE PTR [eax-0x77],1
  402cdb:	pop    edi
  402cdc:	push   ss
  402cdd:	outs   dx,DWORD PTR ds:[esi]
  402cde:	xor    al,0x24
  402ce0:	mov    ds:0xeb4d0c93,eax
  402ce5:	and    edx,edx
  402ce7:	jo     0x402ccd
  402ce9:	jns    0x402d04
  402ceb:	cs or  cl,bh
  402cee:	retf   
  402cef:	or     al,0x7f
  402cf1:	dec    ecx
  402cf2:	pop    edi
  402cf3:	(bad)  
  402cf4:	mov    al,ds:0x33f5b7d4
  402cf9:	iret   
  402cfa:	fistp  DWORD PTR [ecx]
  402cfc:	lods   al,BYTE PTR ds:[esi]
  402cfd:	xchg   DWORD PTR [ecx+0x64],esi
  402d00:	cld    
  402d01:	(bad)  
  402d02:	popa   
  402d03:	mov    ecx,0xc1e25466
  402d08:	adc    DWORD PTR [esi+edi*4-0x43],0xffffffb6
  402d0d:	test   eax,0x889f5326
  402d12:	out    dx,al
  402d13:	inc    esp
  402d14:	jnp    0x402d41
  402d16:	push   ss
  402d17:	(bad)  
  402d18:	cmp    dl,cl
  402d1a:	push   esp
  402d1b:	retf   0x191e
  402d1e:	cld    
  402d1f:	mov    al,cs:0x6ac98f7b
  402d25:	nop
  402d26:	xlat   BYTE PTR ds:[ebx]
  402d27:	lods   al,BYTE PTR ds:[esi]
  402d28:	shl    BYTE PTR [edx+0xd],cl
  402d2b:	mov    edx,0xb560db04
  402d30:	pop    ecx
  402d31:	hlt    
  402d32:	sbb    edx,DWORD PTR [edx+0x1e13c8f7]
  402d38:	add    al,0x9d
  402d3a:	push   0x32
  402d3c:	pop    ds
  402d3d:	jb     0x402d26
  402d3f:	jbe    0x402d6f
  402d41:	adc    DWORD PTR [edi+0x1eba5c9],ebx
  402d47:	inc    eax
  402d48:	xchg   BYTE PTR [ebp+0x6eda80e8],al
  402d4e:	fcom   QWORD PTR [edx]
  402d50:	int3   
  402d51:	jns    0x402cdb
  402d53:	add    al,0xae
  402d55:	xchg   edi,eax
  402d56:	repnz lahf 
  402d58:	jae    0x402ceb
  402d5a:	xor    eax,0x12db4944
  402d5f:	popa   
  402d60:	jle    0x402d48
  402d62:	fld    QWORD PTR [ebp-0x47]
  402d65:	ds mov esp,0xbd05a3d9
  402d6b:	call   0xfde7:0x278d7dab
  402d72:	mov    dh,0x46
  402d74:	lds    edx,FWORD PTR [edi-0x1a]
  402d77:	jnp    0x402d8b
  402d79:	or     dh,BYTE PTR [eax]
  402d7b:	mov    ds:0xbcab2fa0,eax
  402d80:	fadd   DWORD PTR [edx+edx*2-0x1c4045c]
  402d87:	cmc    
  402d88:	mov    bh,0x5b
  402d8a:	dec    eax
  402d8b:	jne    0x402d37
  402d8d:	mov    ch,0x28
  402d8f:	addr16 jbe 0x402db2
  402d92:	hlt    
  402d93:	and    BYTE PTR [ebp-0x56],ch
  402d96:	cld    
  402d97:	adc    eax,DWORD PTR [ecx+eiz*4+0x8805317]
  402d9e:	adc    BYTE PTR [ebp+0x1b],dh
  402da1:	fdiv   QWORD PTR [esi-0xfbc9919]
  402da7:	jbe    0x402e25
  402da9:	inc    ebx
  402daa:	push   cs
  402dab:	cwde   
  402dac:	pop    edi
  402dad:	or     edx,DWORD PTR [esi+0x17f353bd]
  402db3:	pop    edi
  402db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db6:	sub    BYTE PTR ds:0x91571130,dh
  402dbc:	jge    0x402e0b
  402dbe:	in     eax,dx
  402dbf:	pop    ebx
  402dc0:	fdivr  st,st(2)
  402dc2:	jecxz  0x402d6f
  402dc4:	(bad)  
  402dc5:	lahf   
  402dc6:	into   
  402dc7:	sti    
  402dc8:	pushf  
  402dc9:	sub    edi,DWORD PTR [esi-0x73988589]
  402dcf:	test   BYTE PTR [ebp-0x5d74dba5],ah
  402dd5:	push   esp
  402dd6:	faddp  st(5),st
  402dd8:	cmp    cl,BYTE PTR [edi-0xc77e4c5]
  402dde:	in     al,0x7a
  402de0:	jbe    0x402e00
  402de2:	(bad)  
  402de3:	pop    ebx
  402de4:	add    BYTE PTR [ebx],bl
  402de6:	cwde   
  402de7:	and    BYTE PTR [esi+0x4f],bh
  402dea:	push   ecx
  402deb:	stc    
  402dec:	jbe    0x402d8b
  402dee:	(bad)  
  402def:	push   ss
  402df0:	aas    
  402df1:	pop    ss
  402df2:	popf   
  402df3:	mov    bh,0xf7
  402df5:	sbb    DWORD PTR [ebx-0x1f1f9651],esp
  402dfb:	push   0x12692ceb
  402e00:	mov    DWORD PTR [ebx+0x57816a27],0xbfe7989
  402e0a:	fild   DWORD PTR [ecx]
  402e0c:	ins    BYTE PTR es:[edi],dx
  402e0d:	out    0x41,eax
  402e0f:	pop    ebp
  402e10:	loopne 0x402da1
  402e12:	imul   edx,ecx,0x75
  402e15:	mov    ds:0xd4441714,eax
  402e1a:	test   BYTE PTR ss:[eax],dh
  402e1d:	sub    DWORD PTR [edx+0x2871c2a2],edx
  402e23:	mov    ebp,0x138d660f
  402e28:	jbe    0x402dda
  402e2a:	dec    edi
  402e2b:	dec    edx
  402e2c:	nop
  402e2d:	int    0x93
  402e2f:	adc    BYTE PTR [eax+0x11],al
  402e32:	in     eax,dx
  402e33:	retf   
  402e34:	push   eax
  402e35:	addr16 ds out dx,al
  402e38:	cs mov ecx,0x943bb220
  402e3e:	mov    bh,0x8
  402e40:	mov    dh,BYTE PTR [eax-0x33]
  402e43:	loop   0x402e00
  402e45:	out    0xcf,al
  402e47:	jae    0x402e2e
  402e49:	jg     0x402e6c
  402e4b:	sbb    al,0x79
  402e4d:	xchg   DWORD PTR [ebx+0x2b],ebp
  402e50:	jb     0x402e9c
  402e52:	jmp    0xb4cb:0x18126ad3
  402e59:	fcom   DWORD PTR [esi-0x65]
  402e5c:	or     al,0x92
  402e5e:	inc    ecx
  402e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e60:	mov    ah,0xaa
  402e62:	rcl    BYTE PTR [edi],0xc4
  402e65:	cmp    esp,edx
  402e67:	imul   eax,ebp,0x7a
  402e6a:	out    0xa8,al
  402e6c:	in     eax,dx
  402e6d:	mov    cs,WORD PTR [ebx-0x39506984]
  402e73:	rcl    al,cl
  402e75:	scas   eax,DWORD PTR es:[edi]
  402e76:	dec    ebp
  402e77:	push   edx
  402e78:	je     0x402ee5
  402e7a:	pop    ecx
  402e7b:	adc    al,0x57
  402e7d:	jbe    0x402e82
  402e7f:	in     al,dx
  402e80:	shl    BYTE PTR [ebx-0x5366c2b],1
  402e86:	add    bh,BYTE PTR [ecx]
  402e88:	xor    DWORD PTR [esi],ebp
  402e8a:	jmp    DWORD PTR ds:0xd2ac72f8
  402e90:	mov    dh,0x6c
  402e92:	scas   eax,DWORD PTR es:[edi]
  402e93:	inc    eax
  402e94:	sub    eax,edx
  402e96:	into   
  402e97:	xor    BYTE PTR [ebp-0x3b],ch
  402e9a:	add    BYTE PTR [ebp-0x26],al
  402e9d:	xchg   edi,eax
  402e9e:	lahf   
  402e9f:	in     al,dx
  402ea0:	(bad)  
  402ea1:	mov    ds:0x2b01e387,eax
  402ea6:	ja     0x402ece
  402ea8:	imul   BYTE PTR [esi+0x42743613]
  402eae:	repz and DWORD PTR [ebx-0x6e],ebp
  402eb2:	cmp    eax,0xac071223
  402eb7:	adc    DWORD PTR [esi+0x6aedc06d],ecx
  402ebd:	sub    al,0xb0
  402ebf:	or     BYTE PTR [ecx],0x24
  402ec2:	leave  
  402ec3:	retf   
  402ec4:	and    DWORD PTR [ebx+0x6e],edi
  402ec7:	mov    edi,0x4ad51599
  402ecd:	test   DWORD PTR ds:0xef8ac34a,esp
  402ed3:	int    0xe0
  402ed5:	(bad)  
  402ed6:	mul    bh
  402ed8:	lea    esp,[eax-0x55]
  402edb:	mov    dh,0x47
  402edd:	cmp    DWORD PTR [ebx-0x1d],0xbe3a3ff2
  402ee4:	cs add ecx,0x392dee0b
  402eeb:	test   al,0xed
  402eed:	mov    cs,WORD PTR [ecx-0x1c]
  402ef0:	out    dx,al
  402ef1:	push   ss
  402ef2:	leave  
  402ef3:	aas    
  402ef4:	xor    al,0x82
  402ef6:	push   edx
  402ef7:	mov    bl,0xf9
  402ef9:	jo     0x402ec9
  402efb:	je     0x402f5b
  402efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402efe:	xchg   ebp,eax
  402eff:	es or  edx,ecx
  402f02:	mov    DWORD PTR [eax-0x57],edi
  402f05:	mov    es:0xafceb1b4,eax
  402f0b:	and    ebx,DWORD PTR [edx-0x1b]
  402f0e:	clc    
  402f0f:	inc    esi
  402f10:	adc    ecx,DWORD PTR [eax]
  402f12:	(bad)
  402f15:	dec    esp
  402f16:	inc    ebx
  402f17:	out    0x31,al
  402f19:	adc    BYTE PTR [edi-0x60827d34],dh
  402f1f:	or     DWORD PTR [ecx],eax
  402f21:	sbb    eax,0x92121330
  402f26:	push   ebp
  402f27:	inc    ecx
  402f28:	jo     0x402ed0
  402f2a:	jno    0x4e7db6f8
  402f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f31:	cwde   
  402f32:	or     dl,dl
  402f34:	mov    esp,0x5785bfb4
  402f39:	add    ch,ch
  402f3b:	call   0x4c131ad9
  402f40:	stc    
  402f41:	sbb    eax,0x3964e545
  402f46:	add    ch,ch
  402f48:	adc    BYTE PTR [esi+0x53],bh
  402f4b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  402f4d:	dec    eax
  402f4e:	add    cl,BYTE PTR [ebp+ecx*2+0x34da1b27]
  402f55:	loope  0x402f37
  402f57:	cmp    DWORD PTR ds:[edx+0x18a2c976],edx
  402f5e:	mov    DWORD PTR [ecx+0x3b],ecx
  402f61:	push   es
  402f62:	sub    esp,DWORD PTR [eax]
  402f64:	xchg   ecx,eax
  402f65:	mov    al,ds:0x895ebbb8
  402f6a:	pop    ecx
  402f6b:	in     eax,0x47
  402f6d:	cwde   
  402f6e:	jnp    0x402f01
  402f70:	pop    esi
  402f71:	test   eax,0x9b8aafde
  402f76:	hlt    
  402f77:	std    
  402f78:	pop    ebx
  402f79:	lods   al,BYTE PTR ds:[esi]
  402f7a:	ja     0x402f72
  402f7c:	fistp  WORD PTR [edx+0x617d58f4]
  402f82:	mov    ecx,0x7bf3e75f
  402f87:	xchg   edi,eax
  402f88:	(bad)  [edx-0x5c27558f]
  402f8e:	test   al,0xbf
  402f90:	xchg   ebx,eax
  402f91:	xor    al,0xe4
  402f93:	mov    BYTE PTR [ecx+0x43],bl
  402f96:	sbb    al,0xc2
  402f98:	and    al,0x51
  402f9a:	aam    0xed
  402f9c:	mov    ds:0x6b3179ef,eax
  402fa1:	mov    esp,0x2705bc7a
  402fa6:	or     ebp,DWORD PTR [esi]
  402fa8:	xor    bl,BYTE PTR [ebx]
  402faa:	retf   
  402fab:	pushf  
  402fac:	test   BYTE PTR [esp+ebp*2-0x7bc9fea],dl
  402fb3:	aas    
  402fb4:	nop
  402fb5:	lahf   
  402fb6:	retf   0x4577
  402fb9:	(bad)  
  402fbb:	aam    0xcd
  402fbd:	arpl   WORD PTR [esi+0x16daa023],bx
  402fc3:	adc    ebx,edi
  402fc5:	mov    edi,DWORD PTR [edx+edi*8+0x60]
  402fc9:	pop    ss
  402fca:	fimul  WORD PTR [edx]
  402fcc:	fcom   DWORD PTR [eax+0x7]
  402fcf:	nop
  402fd0:	(bad)  
  402fd1:	(bad)  
  402fd2:	mov    ecx,0xd11de90
  402fd7:	outs   dx,BYTE PTR ds:[esi]
  402fd8:	pop    edi
  402fd9:	or     DWORD PTR ds:0x22b6ac40,esi
  402fdf:	inc    esp
  402fe0:	sub    edi,edi
  402fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe3:	xchg   edx,eax
  402fe4:	cmc    
  402fe5:	xchg   ebp,eax
  402fe6:	gs mov cs:0x44c4f141,eax
  402fed:	inc    esi
  402fee:	lea    eax,[esi]
  402ff0:	leave  
  402ff1:	aas    
  402ff2:	or     BYTE PTR [edx+0x6e0748ce],ah
  402ff8:	xchg   esi,eax
  402ff9:	jae    0x402ff9
  402ffb:	jo     0x403027
  402ffd:	dec    ebp
  402ffe:	repz and cl,BYTE PTR [ebp+0x2200e89]
  403005:	jb     0x40303d
  403007:	enter  0xcfde,0x6f
  40300b:	imul   ecx,DWORD PTR [ebp+0x56b94f3d],0x27c8621e
  403015:	pop    ebp
  403016:	add    DWORD PTR [ecx+0x2a],esi
  403019:	popf   
  40301a:	xchg   dl,bh
  40301c:	jmp    0x402fe8
  40301e:	push   eax
  40301f:	xchg   ecx,eax
  403020:	(bad)  
  403021:	ja     0x40306f
  403023:	loop   0x402fc7
  403025:	push   edi
  403026:	outs   dx,DWORD PTR ds:[esi]
  403027:	jmp    0x6a5f:0xed9ad2d4
  40302e:	pop    eax
  40302f:	stc    
  403030:	push   ecx
  403031:	dec    ebp
  403032:	xchg   ebp,eax
  403033:	mov    bh,0x80
  403035:	repnz sub BYTE PTR [edx-0xe],ah
  403039:	iret   
  40303a:	sbb    DWORD PTR [eax-0x4fbc9b40],edi
  403040:	xchg   ecx,eax
  403041:	mov    eax,0xf93f810
  403046:	jg     0x4030bd
  403048:	out    0xe9,eax
  40304a:	das    
  40304b:	mov    ds:0xca12470c,al
  403050:	leave  
  403051:	adc    eax,0xfaa78ac1
  403056:	sbb    BYTE PTR [esi-0x1fefbe95],bh
  40305c:	mov    ecx,0x4e5129c9
  403061:	ret    
  403062:	push   ebx
  403063:	fldcw  WORD PTR [edx-0x51e4811e]
  403069:	std    
  40306a:	push   0x1d767f4c
  40306f:	inc    ecx
  403070:	mov    ah,0xee
  403072:	js     0x403041
  403074:	xchg   DWORD PTR [ebx],ecx
  403076:	xchg   esi,eax
  403077:	je     0x403048
  403079:	ret    
  40307a:	pop    esi
  40307b:	xchg   ecx,eax
  40307c:	mov    al,ds:0xda4ea5fc
  403081:	out    0xcd,eax
  403083:	lahf   
  403084:	inc    ecx
  403085:	inc    ebp
  403086:	adc    DWORD PTR [ecx+0x3948dd9f],0x4
  40308d:	mov    ah,0xe4
  40308f:	mov    eax,ds:0x80cc6d83
  403094:	mov    ecx,0x4bc6d303
  403099:	mov    ebx,0x4634b3b1
  40309e:	je     0x403066
  4030a0:	or     ebp,edi
  4030a2:	mov    DWORD PTR [edi+0xca67b42],edx
  4030a8:	sti    
  4030a9:	mov    WORD PTR [ebp+0x3f],?
  4030ac:	je     0x4030e7
  4030ae:	clc    
  4030af:	cmp    eax,0xad7a3a6e
  4030b4:	add    al,BYTE PTR [ebx-0x2c]
  4030b7:	inc    esp
  4030b8:	test   DWORD PTR [edx],ebp
  4030ba:	cwde   
  4030bb:	dec    edi
  4030bc:	shr    DWORD PTR [ebx-0x16],0x12
  4030c0:	pop    es
  4030c1:	xchg   BYTE PTR ss:[ecx-0x405031d6],dh
  4030c8:	inc    edx
  4030c9:	sub    DWORD PTR [esi+eiz*4+0x6908da95],ecx
  4030d0:	lea    edi,[esi+0x4967f1f]
  4030d6:	mov    eax,ds:0xe5c90a74
  4030db:	cwde   
  4030dc:	adc    BYTE PTR [ecx],cl
  4030de:	adc    al,0xfc
  4030e0:	sub    DWORD PTR [eax-0x12aebb3e],edi
  4030e6:	sti    
  4030e7:	pop    ss
  4030e8:	jne    0x403090
  4030ea:	pop    eax
  4030eb:	pop    ss
  4030ec:	fdiv   DWORD PTR [ecx+0x4d380181]
  4030f2:	lds    esp,FWORD PTR [ebp-0x51e999ff]
  4030f8:	adc    DWORD PTR [ebx+0x48cd0b81],ebx
  4030fe:	pop    es
  4030ff:	jns    0x40314a
  403101:	push   esi
  403102:	iret   
  403103:	jmp    0x544a6b6f
  403108:	push   esi
  403109:	dec    esp
  40310a:	fadd   DWORD PTR [ecx+0x2e30ee2b]
  403110:	push   ss
  403111:	mov    dh,0x29
  403113:	mov    ebx,0x447736f4
  403118:	push   esi
  403119:	dec    ebp
  40311a:	fsubp  st(1),st
  40311c:	out    0x81,al
  40311e:	jg     0x4030a5
  403120:	call   0xf7b85436
  403125:	cmp    eax,0x26846b7d
  40312a:	xchg   ecx,eax
  40312b:	shl    DWORD PTR ss:[eax+eax*8-0x4a],0xb6
  403131:	mov    cl,0x2
  403133:	mov    WORD PTR [ebp+eax*4-0x7aff6335],ds
  40313a:	push   esp
  40313b:	sbb    al,0x9c
  40313d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40313e:	out    0xbb,eax
  403140:	push   ebp
  403141:	xor    BYTE PTR [eax+0x6f],bl
  403144:	sbb    eax,0x66ffff67
  403149:	pushf  
  40314a:	out    dx,al
  40314b:	mov    esi,0x12920625
  403150:	dec    esi
  403151:	(bad)  
  403152:	sar    cl,cl
  403154:	fnstcw WORD PTR ds:0x585675b9
  40315a:	out    0xd6,al
  40315c:	add    al,0xd8
  40315e:	imul   esi,DWORD PTR [esi+0x5b0f693c],0xd4a33da1
  403168:	sti    
  403169:	xchg   edi,eax
  40316a:	inc    ecx
  40316b:	inc    edx
  40316c:	(bad)  cs:[eax+0x22e83ea0]
  403173:	pop    esi
  403174:	les    ecx,FWORD PTR [eax+0x29]
  403177:	inc    edx
  403178:	and    DWORD PTR [esi+0x4faec925],ebx
  40317e:	and    eax,DWORD PTR [ebx+0x29]
  403181:	int3   
  403182:	(bad)  
  403183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403184:	mov    ebx,ecx
  403186:	cmp    BYTE PTR [esi+0x79],ch
  403189:	pop    esp
  40318a:	lods   al,BYTE PTR ds:[esi]
  40318b:	mov    dl,0xbb
  40318d:	fcom   DWORD PTR [ebp-0x5420d57b]
  403193:	ss out dx,eax
  403195:	sbb    al,0xd1
  403197:	pop    edx
  403198:	dec    eax
  403199:	dec    ebp
  40319a:	push   es
  40319b:	call   0x5b139cb1
  4031a0:	hlt    
  4031a1:	dec    esi
  4031a2:	inc    edi
  4031a3:	add    eax,0xf31bcc32
  4031a8:	shl    DWORD PTR [eax-0x84383f],cl
  4031ae:	clc    
  4031af:	js     0x403212
  4031b1:	sub    BYTE PTR [ebx-0x40e6552a],ch
  4031b7:	rcl    DWORD PTR [ebp+0x32e90d9e],1
  4031bd:	jmp    0x403221
  4031bf:	mov    ch,0xba
  4031c1:	push   ds
  4031c2:	mov    edx,0x978158b9
  4031c7:	test   DWORD PTR [eax+0x741e849c],eax
  4031cd:	jl     0x403209
  4031cf:	dec    ecx
  4031d0:	xor    BYTE PTR [edx],ch
  4031d2:	loop   0x403246
  4031d4:	lods   eax,DWORD PTR ds:[esi]
  4031d5:	aam    0x43
  4031d7:	daa    
  4031d8:	in     eax,dx
  4031d9:	cld    
  4031da:	lds    ecx,FWORD PTR [ecx]
  4031dc:	jl     0x4031be
  4031de:	fs dec esp
  4031e0:	out    dx,al
  4031e1:	mov    cl,0x7d
  4031e3:	mov    BYTE PTR [esi],ch
  4031e5:	sub    eax,0x7b0f48b5
  4031ea:	setl   BYTE PTR [ecx]
  4031ed:	fcomip st,st(5)
  4031ef:	gs loopne 0x403192
  4031f2:	call   0xfb5210e8
  4031f7:	mov    esi,?
  4031f9:	jg     0x4031cc
  4031fb:	sbb    ah,BYTE PTR [edx-0x41]
  4031fe:	cmp    ebx,DWORD PTR [ebx+ecx*8]
  403201:	cmp    ebp,ebp
  403203:	outs   dx,BYTE PTR ds:[esi]
  403204:	es sub al,0x93
  403207:	iret   
  403208:	test   BYTE PTR [edx-0x42275447],dh
  40320e:	adc    al,0xf3
  403211:	popf   
  403212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403213:	inc    edi
  403214:	jecxz  0x403269
  403216:	(bad)  
  403217:	jno    0x4031bf
  403219:	dec    DWORD PTR [ebx]
  40321b:	cwde   
  40321c:	inc    ecx
  40321d:	sti    
  40321e:	mov    ds:0xfe981921,al
  403223:	pushf  
  403224:	adc    al,0x76
  403226:	xchg   edx,eax
  403227:	fisttp QWORD PTR [ebx]
  403229:	xchg   esi,eax
  40322a:	add    BYTE PTR [esi],dh
  40322c:	mov    dh,ch
  40322e:	(bad)  
  40322f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403230:	scas   eax,DWORD PTR es:[edi]
  403231:	rcl    BYTE PTR [ebx-0x75196c54],0xf1
  403238:	cdq    
  403239:	sbb    al,0x91
  40323b:	das    
  40323c:	jmp    0xe4d8:0x1fcafe2d
  403243:	jl     0x4031f5
  403245:	ds cmc 
  403247:	retf   
  403248:	mov    eax,0xd06bd168
  40324d:	jne    0x403242
  40324f:	aam    0xf9
  403251:	call   0x4421:0x8966c21d
  403258:	dec    ecx
  403259:	mov    eax,ds:0xce1d8fad
  40325e:	(bad)  
  40325f:	dec    ebx
  403260:	mov    ds:0x9183a917,eax
  403265:	shl    DWORD PTR [eax-0x348bb31f],1
  40326b:	sti    
  40326c:	mov    ebp,0xbd47ff9d
  403271:	add    al,BYTE PTR ds:0xa260e822
  403277:	shr    BYTE PTR [edx],cl
  403279:	pop    es
  40327a:	imul   ecx,DWORD PTR [eax+0x59],0xbf2e59ae
  403281:	(bad)  
  403282:	int3   
  403283:	mov    ecx,0x6b25deb9
  403288:	nop
  403289:	mov    DWORD PTR [ebx-0xa],esi
  40328c:	adc    eax,0x89a68ad9
  403291:	and    al,0x89
  403293:	push   0x6d
  403295:	push   ebp
  403296:	and    bl,BYTE PTR [ebx-0x74]
  403299:	and    eax,0x962a452c
  40329e:	dec    edx
  40329f:	iret   
  4032a0:	sub    DWORD PTR [ecx+eax*4+0x4b299f69],ecx
  4032a7:	mov    ecx,0xb6c1b636
  4032ac:	mov    cl,0xf1
  4032ae:	ret    0xbeea
  4032b1:	fcom   QWORD PTR [eax+eiz*1+0x2b6276f8]
  4032b8:	or     eax,0x2bc6b277
  4032bd:	loopne 0x4032df
  4032bf:	cdq    
  4032c0:	push   eax
  4032c1:	push   eax
  4032c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c3:	cmp    eax,0x97fe9971
  4032c8:	mov    edx,0xf6b09f8b
  4032cd:	retf   0x2459
  4032d0:	aaa    
  4032d1:	sub    al,BYTE PTR [ebp-0x76]
  4032d4:	mov    edi,0x326f6647
  4032d9:	mov    eax,0xc314cdd9
  4032de:	repnz pushf 
  4032e0:	mov    dh,0x8
  4032e2:	sbb    esp,DWORD PTR [esi]
  4032e4:	je     0x403270
  4032e6:	add    DWORD PTR [esi+0x32e1228],edi
  4032ec:	pushf  
  4032ed:	cld    
  4032ee:	cmp    edx,DWORD PTR [eax+0x49]
  4032f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032f2:	lock call FWORD PTR [ebp+0xa]
  4032f6:	ror    BYTE PTR fs:[eax],0xf7
  4032fa:	mov    BYTE PTR [edx+eax*8+0x6a],cl
  4032fe:	ret    0xd869
  403301:	adc    eax,0xd52116ee
  403306:	seto   BYTE PTR [esi+edx*4-0x37]
  40330b:	dec    edx
  40330c:	pop    ss
  40330d:	das    
  40330e:	xchg   DWORD PTR [edx+0x3a6d83af],ebp
  403314:	mov    dl,0xfd
  403316:	cdq    
  403317:	pop    esp
  403318:	test   eax,0x97430ff4
  40331d:	gs loopne 0x4032a6
  403320:	inc    esi
  403321:	pop    edi
  403322:	cli    
  403323:	and    eax,0xced0c094
  403328:	test   dl,ah
  40332a:	ja     0x4032ff
  40332c:	mov    gs,WORD PTR [ebx+0x672bf610]
  403332:	push   0x78dbff27
  403337:	adc    bl,dl
  403339:	dec    ebx
  40333a:	jp     0x40339b
  40333c:	sbb    BYTE PTR [edi+0x41],bl
  40333f:	ss loopne 0x403320
  403342:	mov    al,0xea
  403344:	in     eax,dx
  403345:	ret    
  403346:	ret    
  403347:	stos   DWORD PTR es:[edi],eax
  403348:	inc    ebp
  403349:	arpl   WORD PTR [ebx-0x42],bx
  40334c:	push   cs
  40334d:	add    dh,BYTE PTR [edx-0x44]
  403350:	vmovlpd xmm2,xmm0,xmm7
  403354:	pop    ss
  403355:	pop    ecx
  403356:	dec    esp
  403357:	cdq    
  403358:	(bad)  
  403359:	or     DWORD PTR [eax-0x64815a43],eax
  40335f:	aaa    
  403360:	pop    esi
  403361:	add    BYTE PTR [edx-0x2fe15fc7],0x9d
  403368:	xor    DWORD PTR [edx-0x50],0x12
  40336c:	outs   dx,DWORD PTR ds:[esi]
  40336d:	loopne 0x4033de
  40336f:	loope  0x403338
  403371:	fs pop edx
  403373:	jnp    0x403330
  403375:	inc    edx
  403376:	ret    0x7508
  403379:	xor    esi,DWORD PTR [ebp-0x68]
  40337c:	int    0xc4
  40337e:	push   ss
  40337f:	xor    BYTE PTR [edx+0x1b2c3357],bl
  403385:	sbb    eax,0xdb7db8ac
  40338a:	jge    0x4033bf
  40338c:	sbb    al,0x6
  40338e:	xor    al,0xe5
  403390:	out    0x16,eax
  403392:	push   0x7
  403394:	jae    0x40338f
  403396:	inc    eax
  403397:	mov    eax,0x8eef147f
  40339c:	mov    edi,0xa742ecd1
  4033a1:	mov    esp,DWORD PTR [ebp+ebp*8+0x1e]
  4033a5:	inc    esp
  4033a6:	in     eax,0x2
  4033a8:	pusha  
  4033a9:	test   BYTE PTR [ebp-0x2e],0x50
  4033ad:	mov    ah,BYTE PTR [ebx]
  4033af:	mov    bl,0xa
  4033b1:	idiv   esp
  4033b3:	sbb    BYTE PTR [edi],dh
  4033b5:	pop    es
  4033b6:	test   al,0x15
  4033b8:	fstp   DWORD PTR [ecx+ebp*1]
  4033bb:	arpl   WORD PTR [edi+edi*4+0x16c80558],di
  4033c2:	jb     0x4033e0
  4033c4:	sbb    DWORD PTR [esi-0x3d],0xffffffea
  4033c8:	btr    DWORD PTR [bp+0x2055],esp
  4033ce:	push   edx
  4033cf:	and    BYTE PTR [ebp-0x1],al
  4033d2:	dec    edx
  4033d3:	add    DWORD PTR [eax-0x1c0de8d9],edi
  4033d9:	cld    
  4033da:	dec    edx
  4033db:	das    
  4033dc:	cmp    al,BYTE PTR [edi-0x1]
  4033df:	ins    DWORD PTR es:[edi],dx
  4033e0:	(bad)  
  4033e1:	mov    dl,0x2b
  4033e3:	pop    ds
  4033e4:	cld    
  4033e5:	les    esi,FWORD PTR [ebx+0x6e5dd3bb]
  4033eb:	mov    ebp,0xaed730c8
  4033f0:	loopne 0x40338e
  4033f2:	adc    edx,DWORD PTR [esi]
  4033f4:	lock mov BYTE PTR [ebx],dh
  4033f7:	add    BYTE PTR [ebx+0x7c],0xe4
  4033fb:	jno    0x403394
  4033fd:	in     al,0x45
  4033ff:	xchg   ecx,eax
  403400:	hlt    
  403401:	jl     0x40340f
  403403:	cwde   
  403404:	mov    eax,ds:0x81ab2b98
  403409:	jle    0x40341a
  40340b:	cmp    cl,BYTE PTR [bx+di+0x556a]
  403410:	jge    0x403436
  403412:	add    ah,cl
  403414:	lea    esp,[edi+0x80a74d]
  40341a:	and    BYTE PTR [ecx+0x7e],dh
  40341d:	pop    ds
  40341e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341f:	mov    ss,ebp
  403421:	shl    DWORD PTR [ecx+eiz*4+0x3e],cl
  403425:	jns    0x403484
  403427:	xchg   ebp,eax
  403428:	stc    
  403429:	jp     0x4033f8
  40342b:	hlt    
  40342c:	add    eax,0x94fd1ef3
  403431:	verw   WORD PTR [eax+eiz*2+0x2a]
  403436:	je     0x403476
  403438:	xchg   DWORD PTR [edi],esp
  40343a:	jecxz  0x403460
  40343c:	mov    edi,0x291009bb
  403441:	sub    BYTE PTR [ebp+0xe84071d],bl
  403447:	cli    
  403448:	inc    edx
  403449:	or     eax,0xb9e422ae
  40344e:	mov    dl,0x47
  403450:	cmp    ebx,DWORD PTR [eax+0x48]
  403453:	sub    DWORD PTR [esi+0xe],ebx
  403456:	push   eax
  403457:	mov    ah,0xbe
  403459:	rcr    DWORD PTR [edx],cl
  40345b:	push   eax
  40345c:	into   
  40345d:	xor    al,0x34
  40345f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403460:	mov    bh,BYTE PTR [eax+edi*4+0x22]
  403464:	enter  0x6521,0x15
  403468:	mov    ss,WORD PTR [edx-0x5e]
  40346b:	xchg   ebx,eax
  40346c:	xchg   edi,eax
  40346d:	mov    ch,0x45
  40346f:	addr16 jo 0x4033f3
  403472:	popa   
  403473:	cli    
  403474:	shr    BYTE PTR ds:0xf9b18040,cl
  40347a:	mov    bl,0x72
  40347c:	push   0x5f573677
  403481:	test   eax,0x6b224804
  403486:	jmp    0x4034b2
  403488:	nop
  403489:	pop    es
  40348a:	rcr    BYTE PTR [ebp+0x1d82278],1
  403490:	add    edi,DWORD PTR [edi-0x2399b166]
  403496:	cmp    dh,BYTE PTR [esp+0x6f]
  40349a:	add    eax,0xd73764d7
  40349f:	enter  0xe9fe,0x6e
  4034a3:	jb     0x40342c
  4034a5:	imul   ecx
  4034a7:	repz arpl WORD PTR [edx],sp
  4034aa:	sub    ah,BYTE PTR [ecx+0x69]
  4034ad:	fwait
  4034ae:	push   ebx
  4034af:	mov    ecx,0x9594f32
  4034b4:	(bad)  
  4034b5:	(bad)  
  4034b6:	int    0xf9
  4034b8:	cwde   
  4034b9:	shl    DWORD PTR [esi+0x2f6793ff],cl
  4034bf:	jb     0x40346f
  4034c1:	retf   
  4034c2:	enter  0x3639,0x5b
  4034c6:	inc    ebp
  4034c7:	dec    eax
  4034c8:	loop   0x403502
  4034ca:	add    eax,0xcd9f1853
  4034cf:	les    edx,FWORD PTR [edx]
  4034d1:	add    eax,0x8343e6d1
  4034d6:	icebp  
  4034d7:	mov    eax,DWORD PTR [edx-0x27]
  4034da:	inc    BYTE PTR [edx]
  4034dc:	jge    0x4034f5
  4034de:	stos   BYTE PTR es:[edi],al
  4034df:	adc    ch,BYTE PTR [eax+0x7]
  4034e2:	popf   
  4034e3:	xtest  
  4034e6:	out    dx,eax
  4034e7:	out    dx,al
  4034e8:	test   eax,0xcd3a2919
  4034ed:	push   ebp
  4034ee:	cdq    
  4034ef:	adc    eax,0x31d5dbee
  4034f4:	arpl   bp,bp
  4034f6:	and    DWORD PTR [eax+0xd],ecx
  4034f9:	(bad)  
  4034fa:	sbb    al,0x9f
  4034fc:	neg    BYTE PTR [edi-0x69abf972]
  403502:	mov    BYTE PTR [edx+0x3d],bh
  403505:	sbb    eax,0xfabed135
  40350a:	shr    DWORD PTR [ebx+0x44048efc],cl
  403510:	cmp    ah,al
  403512:	leave  
  403513:	or     ebp,DWORD PTR [eax-0x2ab2f7ba]
  403519:	push   ebx
  40351a:	xchg   edi,eax
  40351b:	loope  0x4034e7
  40351d:	fstp   QWORD PTR [edi+0x46]
  403520:	lea    edi,[ebx]
  403522:	retf   
  403523:	xchg   ebx,eax
  403524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403525:	icebp  
  403526:	sub    DWORD PTR [esi],ecx
  403528:	out    0x47,eax
  40352a:	ror    ebp,0xa5
  40352d:	xor    eax,0x1e892aaa
  403532:	fcomp  st(3)
  403534:	cli    
  403535:	xchg   BYTE PTR [edx+0x3],bl
  403538:	call   0x7e17:0xbf685de2
  40353f:	into   
  403540:	sub    al,0x56
  403542:	jmp    0x72bd502e
  403547:	mov    ds:0x28fb9f5a,eax
  40354c:	sbb    DWORD PTR [eax-0x6c],esi
  40354f:	mov    ecx,0x74d4cbd
  403554:	les    eax,FWORD PTR [eax+0x59]
  403557:	inc    ebp
  403558:	mov    bh,0x6c
  40355a:	retf   
  40355b:	inc    esi
  40355c:	xchg   esi,eax
  40355d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40355e:	shr    BYTE PTR [eax+ebp*1],0xff
  403562:	scas   eax,DWORD PTR es:[edi]
  403563:	iret   
  403564:	pushf  
  403565:	pop    es
  403566:	or     BYTE PTR [esi+0x6c33ae53],bh
  40356c:	imul   BYTE PTR [esi-0x44a5bb72]
  403572:	mov    cl,0x8e
  403574:	or     eax,0x326a267d
  403579:	mov    dh,dl
  40357b:	(bad)  
  40357c:	div    BYTE PTR [ebx-0x697aba4c]
  403582:	adc    cl,0x3d
  403585:	sbb    al,0x88
  403587:	mov    ch,0x52
  403589:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40358b:	xor    ecx,DWORD PTR [edi+0x71ea77e9]
  403591:	data16 cli 
  403593:	(bad)  
  403594:	push   esi
  403595:	icebp  
  403596:	sub    DWORD PTR [ecx-0x45fbcfb6],ebp
  40359c:	jmp    0x1f80909d
  4035a1:	cld    
  4035a2:	dec    ebp
  4035a3:	fwait
  4035a4:	loop   0x403571
  4035a6:	dec    edi
  4035a7:	sub    DWORD PTR [edx],ecx
  4035a9:	pusha  
  4035aa:	call   0x465d:0xfb436965
  4035b1:	jmp    0xeff0bdc
  4035b6:	nop
  4035b7:	inc    ebx
  4035b8:	scas   al,BYTE PTR es:[edi]
  4035b9:	call   DWORD PTR [esi-0x7c]
  4035bc:	rcr    BYTE PTR [esi],0x36
  4035bf:	mov    ebx,0x8b5be334
  4035c4:	dec    ebp
  4035c5:	call   0x658f:0x552e73ef
  4035cc:	(bad)  [edi-0x48]
  4035cf:	xchg   ebp,eax
  4035d0:	or     ebp,DWORD PTR [ebx]
  4035d2:	stos   BYTE PTR es:[edi],al
  4035d3:	dec    esp
  4035d4:	xchg   esp,eax
  4035d5:	icebp  
  4035d6:	out    dx,al
  4035d7:	adc    DWORD PTR ds:0x4644ba20,0x9810f912
  4035e1:	addr16 clc 
  4035e3:	scas   al,BYTE PTR es:[edi]
  4035e4:	iret   
  4035e5:	adc    eax,0x719456bc
  4035ea:	jno    0x403586
  4035ec:	bound  ebp,QWORD PTR [esi+0x3aef861f]
  4035f2:	ins    BYTE PTR es:[edi],dx
  4035f3:	mov    ds:0x2f4a074c,eax
  4035f8:	adc    dh,BYTE PTR [edx+ecx*4-0x545364d7]
  4035ff:	add    eax,0x64565046
  403604:	cmc    
  403605:	mov    eax,cs
  403607:	in     eax,dx
  403608:	cmp    ch,dh
  40360a:	das    
  40360b:	or     eax,0x94be50be
  403610:	outs   dx,BYTE PTR ds:[esi]
  403611:	pop    es
  403612:	pop    ebx
  403613:	sbb    edi,DWORD PTR [edi+ebp*2-0x5e]
  403617:	add    bl,al
  403619:	push   0xbdb70e9a
  40361e:	xchg   bl,cl
  403620:	jg     0x4035f2
  403622:	jb     0x4035bc
  403624:	mov    bh,BYTE PTR [edx+0x7e]
  403627:	ret    
  403628:	mov    dl,0xdd
  40362a:	jns    0x4035f9
  40362c:	cmp    al,BYTE PTR [ecx+0x5d03ad2e]
  403632:	addr16 je 0x40360d
  403635:	fldcw  WORD PTR [ecx+0x204ab0ec]
  40363b:	jmp    0x403611
  40363d:	sahf   
  40363e:	loope  0x40365c
  403640:	mov    ebp,0xb825a608
  403645:	mov    ecx,0xc2fc9752
  40364a:	retf   0x16a8
  40364d:	(bad)  
  40364e:	test   edi,0x520d953f
  403654:	pop    ecx
  403655:	cmp    DWORD PTR [eax],edx
  403657:	xor    al,ah
  403659:	sbb    BYTE PTR [ebp+0x6f],ch
  40365c:	xchg   DWORD PTR [edx],edi
  40365e:	push   esp
  40365f:	push   esp
  403660:	loopne 0x403631
  403662:	ficomp WORD PTR [eax-0x25]
  403665:	push   edi
  403666:	push   eax
  403667:	pop    esp
  403668:	mov    ds:0x5624f3ff,eax
  40366d:	call   0xe616:0xd84b497a
  403674:	inc    ebp
  403675:	clc    
  403676:	and    al,0x9d
  403678:	or     dh,ah
  40367a:	addr16 inc edi
  40367c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40367d:	stos   BYTE PTR es:[edi],al
  40367e:	imul   ecx,DWORD PTR [esp+esi*8+0x73c8020b],0xe6656784
  403689:	stos   DWORD PTR es:[edi],eax
  40368a:	xor    BYTE PTR [eax+0x2854f33d],0xd7
  403691:	sbb    edx,DWORD PTR [edi-0x49]
  403694:	sub    DWORD PTR [ecx+0x5274f5df],ecx
  40369a:	jge    0x403620
  40369c:	sbb    edi,DWORD PTR [esi+eax*4-0x2fc32f7]
  4036a3:	xor    BYTE PTR [ebp+0x2d8a4c77],bh
  4036a9:	mov    dh,0xc6
  4036ab:	and    DWORD PTR [edx+0x1109b758],0xffffffed
  4036b2:	pop    es
  4036b3:	mov    esi,0xd5ff799
  4036b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b9:	and    eax,0xa11ce190
  4036be:	in     eax,0x3a
  4036c0:	fwait
  4036c1:	push   ecx
  4036c2:	nop
  4036c3:	mov    ebx,0x271923ff
  4036c8:	bnd jo 0x4036bc
  4036cb:	scas   al,BYTE PTR es:[edi]
  4036cc:	into   
  4036cd:	inc    ah
  4036cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d0:	sub    al,BYTE PTR [edi+0x38]
  4036d3:	ror    DWORD PTR [ecx+0x2308c312],cl
  4036d9:	add    al,0x1f
  4036db:	ret    
  4036dc:	dec    ebx
  4036dd:	push   eax
  4036de:	mov    ebx,0xf856d9f0
  4036e3:	xchg   esp,eax
  4036e4:	(bad)  
  4036e5:	clc    
  4036e6:	outs   dx,BYTE PTR ds:[esi]
  4036e7:	adc    BYTE PTR [ebp-0x36],al
  4036ea:	xchg   ecx,eax
  4036eb:	adc    DWORD PTR [ebp+ecx*8-0x17],ecx
  4036ef:	jb     0x4036dc
  4036f1:	fucomp st(7)
  4036f3:	fstp   QWORD PTR [ecx-0x33d2926d]
  4036f9:	leave  
  4036fa:	dec    edi
  4036fb:	mov    ?,WORD PTR ds:0x360519d9
  403701:	inc    edx
  403702:	cmp    DWORD PTR [ebx],edx
  403704:	jae    0x403757
  403706:	out    0x64,eax
  403708:	ds repnz stc 
  40370b:	sbb    al,0x9
  40370d:	sbb    ah,BYTE PTR [edx+0x66]
  403710:	pop    ecx
  403711:	jns    0x403774
  403713:	aas    
  403714:	xchg   esp,ecx
  403716:	lea    ecx,[esi-0x4e]
  403719:	js     0x4036a5
  40371b:	mov    WORD PTR [eax+0x6b],fs
  40371e:	fisub  WORD PTR [edi+0x4e46b122]
  403724:	cli    
  403725:	(bad)  
  403726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403727:	push   ecx
  403728:	inc    eax
  403729:	enter  0xfc21,0xaf
  40372d:	mov    al,0x11
  40372f:	mov    ds:0x911967ee,eax
  403734:	hlt    
  403735:	push   0xe90a0b31
  40373a:	rcr    BYTE PTR [eax+0x40],1
  40373d:	data16 mov WORD PTR [ebx+0x12049cb7],cs
  403744:	ins    BYTE PTR es:[edi],dx
  403745:	dec    ecx
  403746:	push   edi
  403747:	scas   eax,DWORD PTR es:[edi]
  403748:	and    al,bl
  40374a:	(bad)  
  40374b:	in     eax,dx
  40374c:	pop    ebx
  40374d:	push   eax
  40374e:	cmp    al,0x4b
  403750:	int3   
  403751:	stos   BYTE PTR es:[edi],al
  403752:	ins    BYTE PTR es:[edi],dx
  403753:	jp     0x4037a1
  403755:	ror    BYTE PTR [ebx+0x65600f06],0xce
  40375c:	test   DWORD PTR [edx],ebp
  40375e:	out    dx,eax
  40375f:	adc    DWORD PTR [ecx-0x21],esi
  403762:	inc    esp
  403763:	mov    DWORD PTR [eax+0x5],0x73378a5d
  40376a:	dec    ebx
  40376c:	aam    0xb4
  40376e:	icebp  
  40376f:	rcl    BYTE PTR [edi],1
  403771:	imul   ebx,ecx,0x30b132f0
  403777:	and    DWORD PTR [ecx+0xe],ebp
  40377a:	(bad)  
  40377b:	sub    al,0x22
  40377d:	loop   0x403762
  40377f:	pop    ds
  403780:	push   esp
  403781:	ds cmc 
  403783:	out    0xd9,eax
  403785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403786:	adc    edi,DWORD PTR [edx+0x76acdfbb]
  40378c:	call   0xef88:0x1ede3011
  403793:	ficomp DWORD PTR [ecx-0x175ab00f]
  403799:	ins    BYTE PTR es:[edi],dx
  40379a:	imul   ebp,eax,0x52086060
  4037a0:	mov    ah,0x57
  4037a2:	jge    0x4037b3
  4037a4:	out    0xa,eax
  4037a6:	imul   edi,edx,0xc4613298
  4037ac:	jne    0x403785
  4037ae:	push   eax
  4037af:	bound  ebp,QWORD PTR [ebx-0x41f5a0e6]
  4037b5:	sub    eax,DWORD PTR [edx+0x4d024654]
  4037bb:	mov    DWORD PTR [eax+0x5c13d865],ebp
  4037c1:	out    0x33,eax
  4037c3:	mov    cl,0x8b
  4037c5:	mov    eax,ds:0x40840bce
  4037ca:	mov    ah,0x6d
  4037cc:	inc    ebx
  4037cd:	mov    ecx,0x3e7528a4
  4037d2:	aam    0xfa
  4037d4:	aad    0xba
  4037d6:	xlat   BYTE PTR cs:[ebx]
  4037d8:	lds    edx,FWORD PTR [eax]
  4037da:	jle    0x403843
  4037dc:	dec    ecx
  4037dd:	in     al,0x36
  4037df:	arpl   WORD PTR [edi],sp
  4037e1:	outs   dx,DWORD PTR ds:[esi]
  4037e2:	or     al,0xde
  4037e4:	push   eax
  4037e5:	mov    dl,bl
  4037e7:	adc    BYTE PTR [esi-0x53219d7b],ah
  4037ed:	nop
  4037ee:	or     ebx,edi
  4037f0:	jae    0x403821
  4037f2:	and    al,bh
  4037f4:	sbb    ebp,DWORD PTR [eax+0xf]
  4037f7:	or     ebx,ebp
  4037f9:	jo     0x4037cf
  4037fb:	lods   eax,DWORD PTR ds:[esi]
  4037fc:	add    edx,DWORD PTR [ebp+ecx*8-0x46]
  403800:	nop
  403801:	sbb    dl,BYTE PTR [ebp+0x5641e37a]
  403807:	lea    esp,[ebp+0x40477e74]
  40380d:	(bad)  
  40380f:	dec    ecx
  403810:	bound  edi,QWORD PTR [ebx-0x6b0291c4]
  403816:	pop    ss
  403817:	int3   
  403818:	loop   0x403823
  40381a:	push   eax
  40381b:	xlat   BYTE PTR ds:[ebx]
  40381c:	pushf  
  40381d:	(bad)  [edx+0x102a7301]
  403823:	mov    dh,0x95
  403825:	ins    DWORD PTR es:[edi],dx
  403826:	jns    0x403844
  403828:	add    eax,0x521b5e8
  40382d:	or     bh,BYTE PTR [ecx-0xb167c6a]
  403833:	mov    cl,0xe0
  403835:	mov    dh,0x88
  403837:	inc    ecx
  403838:	hlt    
  403839:	ret    0x116e
  40383c:	and    DWORD PTR [ecx],ecx
  40383e:	inc    edx
  40383f:	dec    ebx
  403840:	mov    eax,ds:0xdfd94c56
  403845:	(bad)  
  403847:	outs   dx,BYTE PTR ds:[esi]
  403848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403849:	fild   WORD PTR [edx-0x69]
  40384c:	and    DWORD PTR [ecx-0x58],esp
  40384f:	sbb    eax,0x445e46d8
  403854:	mov    eax,0x31a8ac03
  403859:	jnp    0x40386b
  40385b:	mov    dl,0xc7
  40385d:	ret    
  40385e:	mov    edi,0x2744539a
  403863:	ins    DWORD PTR es:[edi],dx
  403864:	sub    eax,0x23281302
  403869:	lea    ebx,[edx]
  40386b:	test   eax,0xa6e4193
  403870:	push   edx
  403871:	jecxz  0x403894
  403873:	sbb    al,0x3b
  403875:	(bad)  
  403876:	jmp    0xcf694d56
  40387b:	ss inc esi
  40387d:	popa   
  40387e:	test   al,0x4c
  403880:	fist   WORD PTR [edx+0x1a]
  403883:	data16 mov ds:0xd6a981f3,al
  403889:	popf   
  40388a:	dec    ebx
  40388b:	pushf  
  40388c:	mov    ds:0x127cfdf6,eax
  403891:	xchg   esp,eax
  403892:	sbb    eax,0x636221df
  403897:	(bad)  
  403898:	xchg   ebx,eax
  403899:	mov    ds:0x2e12e065,al
  40389e:	xor    eax,DWORD PTR [ebp+0x710b15be]
  4038a4:	ffree  st(0)
  4038a6:	adc    al,0x98
  4038a8:	or     eax,0xf39a469b
  4038ad:	xchg   ebx,eax
  4038ae:	in     eax,0x42
  4038b0:	enter  0x1ea4,0x6e
  4038b4:	jae    0x403921
  4038b6:	sbb    al,0x66
  4038b8:	repnz inc edx
  4038ba:	xor    BYTE PTR [ecx+0x7c],dh
  4038bd:	in     al,dx
  4038be:	loopne 0x40389c
  4038c0:	fcom   DWORD PTR [eax-0x623005be]
  4038c6:	inc    edx
  4038c7:	mov    dh,0x95
  4038c9:	push   ebp
  4038ca:	jno    0x40387d
  4038cc:	mov    ss,WORD PTR [edx+ecx*1+0x26867ed3]
  4038d3:	add    eax,0xcf88273d
  4038d8:	or     al,0xb9
  4038da:	cmp    BYTE PTR [ebx],0xd0
  4038dd:	or     eax,0xc93676a7
  4038e2:	sub    ah,BYTE PTR [esi-0xe]
  4038e5:	sahf   
  4038e6:	pop    ds
  4038e7:	and    ebx,DWORD PTR [ebp+0x73]
  4038ea:	dec    edi
  4038eb:	aas    
  4038ec:	inc    edi
  4038ed:	mov    WORD PTR [ebp-0x49fbf680],ds
  4038f3:	stos   BYTE PTR es:[edi],al
  4038f4:	stos   DWORD PTR es:[edi],eax
  4038f5:	mov    esp,0xc609533b
  4038fa:	outs   dx,BYTE PTR ds:[esi]
  4038fb:	in     eax,dx
  4038fc:	jno    0x40387f
  4038fe:	outs   dx,DWORD PTR ds:[esi]
  4038ff:	ret    
  403900:	sub    DWORD PTR [edi-0x1a],esp
  403903:	mov    WORD PTR [ebp-0x12],fs
  403906:	call   0x242:0x87534894
  40390d:	les    eax,FWORD PTR [edi]
  40390f:	pop    esp
  403910:	sub    DWORD PTR [ebx-0x57],esp
  403913:	sar    DWORD PTR [ebp+0x3cfe4bae],1
  403919:	pop    edx
  40391a:	xchg   DWORD PTR [esi],edx
  40391c:	cli    
  40391d:	push   edx
  40391e:	mov    edi,0x42681b04
  403923:	lock mov DWORD PTR [ecx],0xa33adda5
  40392a:	xchg   esi,eax
  40392b:	add    esp,DWORD PTR [edi+0x61]
  40392e:	into   
  40392f:	call   0x7a4f23eb
  403934:	cs push es
  403936:	inc    ebx
  403937:	sbb    ch,BYTE PTR [esi-0x21]
  40393a:	and    edi,DWORD PTR [edi]
  40393c:	pop    edx
  40393d:	mov    eax,0x34aa862c
  403942:	and    BYTE PTR [ecx],al
  403944:	icebp  
  403945:	outs   dx,BYTE PTR ds:[esi]
  403946:	cmp    eax,0xb9e70e72
  40394b:	cmp    al,0x7b
  40394d:	retf   0x10d8
  403950:	add    dh,BYTE PTR [ebp+0x45]
  403953:	cmp    cl,dh
  403955:	enter  0xb4c4,0xa6
  403959:	mov    bh,BYTE PTR [edx]
  40395b:	cli    
  40395c:	fs mov al,bh
  40395f:	mov    eax,0xeec52603
  403964:	popa   
  403965:	les    ebx,FWORD PTR [ebp-0x323c275b]
  40396b:	sti    
  40396c:	inc    esi
  40396d:	int    0x24
  40396f:	or     al,0x86
  403971:	daa    
  403972:	jg     0x4039e2
  403974:	fcom   QWORD PTR [ecx-0x16]
  403977:	xor    al,BYTE PTR [edi-0x6f]
  40397a:	sti    
  40397b:	adc    al,0x97
  40397d:	popa   
  40397e:	mov    dl,0xfe
  403980:	std    
  403981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403982:	in     eax,dx
  403983:	sub    eax,0x4afc80ff
  403988:	mov    ebp,0x97e7fdd2
  40398d:	push   cs
  40398e:	fsub   DWORD PTR [ebp+0x3d1a4cff]
  403994:	xor    edi,edi
  403996:	imul   ecx,DWORD PTR [ecx+0xd],0x9a579963
  40399d:	dec    edx
  40399e:	les    ebx,FWORD PTR [edx]
  4039a0:	pop    edi
  4039a1:	xor    bh,BYTE PTR [ebp-0xa151573]
  4039a7:	sbb    DWORD PTR [edx+0x69],ebx
  4039aa:	push   esp
  4039ab:	add    DWORD PTR [esi+0x3d],edx
  4039ae:	sbb    al,0x8f
  4039b0:	and    eax,0xe7958a7f
  4039b5:	daa    
  4039b6:	jnp    0x4039b7
  4039b8:	jae    0x40395d
  4039ba:	inc    ebp
  4039bb:	sbb    ecx,ebx
  4039bd:	loop   0x403a36
  4039bf:	iret   
  4039c0:	stc    
  4039c1:	clc    
  4039c2:	mov    eax,ds:0xa03759c6
  4039c7:	fwait
  4039c8:	nop
  4039c9:	aaa    
  4039ca:	gs ret 
  4039cc:	mov    fs,WORD PTR [ebp+0x6d51ebdd]
  4039d2:	pusha  
  4039d3:	ds mov ch,0x52
  4039d6:	add    esi,esp
  4039d8:	sub    ebx,esp
  4039da:	fucomp st(4)
  4039dc:	mov    bh,dh
  4039de:	ss cmp ecx,esp
  4039e1:	dec    ebp
  4039e2:	mov    eax,DWORD PTR [edi+0x534f39bc]
  4039e8:	cli    
  4039e9:	xchg   DWORD PTR [ebp-0x159a5191],esp
  4039ef:	pop    edi
  4039f0:	inc    esp
  4039f1:	cmp    dh,BYTE PTR [edi-0x2132fc90]
  4039f7:	push   ds
  4039f8:	int    0xba
  4039fa:	add    eax,0xf0241e88
  4039ff:	mov    edx,0x4d27595b
  403a04:	jl     0x403a2f
  403a06:	in     al,dx
  403a07:	jne    0x4039c8
  403a09:	mov    dh,BYTE PTR [edx]
  403a0b:	jp     0x403a1c
  403a0d:	fld    DWORD PTR [ebx-0x36]
  403a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a11:	iret   
  403a12:	pop    ss
  403a13:	add    dl,dl
  403a15:	push   ebx
  403a16:	js     0x403a6b
  403a18:	repnz dec di
  403a1b:	xor    al,0x10
  403a1d:	mov    al,0x3d
  403a1f:	not    DWORD PTR [eax]
  403a21:	mov    eax,ds:0xe9728e24
  403a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a27:	sar    DWORD PTR [edi-0x4f],0xbc
  403a2b:	jne    0x403a46
  403a2d:	jmp    0x403a75
  403a2f:	fistp  QWORD PTR [edi+eax*4]
  403a32:	test   eax,0x1dd329c
  403a37:	sub    al,ch
  403a39:	add    al,BYTE PTR [edi+0x3e]
  403a3c:	in     al,0x96
  403a3e:	or     BYTE PTR ds:0xaf48c284,al
  403a44:	(bad)
  403a47:	pop    esp
  403a48:	adc    al,0x15
  403a4a:	aad    0x20
  403a4c:	shl    BYTE PTR [eax+0x76c247ce],cl
  403a52:	sbb    al,0x5f
  403a54:	xchg   esp,eax
  403a55:	push   esi
  403a56:	dec    edx
  403a57:	fidiv  WORD PTR [eax+0x56]
  403a5a:	cmp    eax,0x3b38379f
  403a5f:	pop    edi
  403a60:	mov    ch,0x75
  403a62:	xor    BYTE PTR ds:0xe9263844,cl
  403a68:	in     eax,0x21
  403a6a:	push   edx
  403a6b:	loop   0x403ac1
  403a6d:	inc    esi
  403a6e:	push   0x1c73b42d
  403a73:	jl     0x403a38
  403a75:	inc    eax
  403a76:	bnd jb 0x403a57
  403a79:	sbb    BYTE PTR [ecx],dh
  403a7b:	loopne 0x403a3b
  403a7d:	jge    0x403ad9
  403a7f:	(bad)  
  403a80:	or     eax,0x6ec3932e
  403a85:	adc    dh,ah
  403a87:	pop    edi
  403a88:	and    ebp,DWORD PTR [ecx-0x4fb29099]
  403a8e:	jmp    0xf559:0xf303026f
  403a95:	sbb    DWORD PTR [eax+0x9],0x68
  403a99:	das    
  403a9a:	loop   0x403a7e
  403a9c:	lahf   
  403a9d:	(bad)  
  403a9e:	sbb    al,0x2f
  403aa0:	push   0xffffffbd
  403aa2:	cmp    DWORD PTR [edx+ecx*2],esi
  403aa5:	in     al,dx
  403aa6:	dec    ecx
  403aa7:	out    0x5f,eax
  403aa9:	mov    esp,0x71571974
  403aae:	mov    esi,0x2d5be676
  403ab3:	in     eax,dx
  403ab4:	xlat   BYTE PTR ds:[ebx]
  403ab5:	and    DWORD PTR [esi],ebp
  403ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab8:	sbb    al,0x6c
  403aba:	into   
  403abb:	dec    DWORD PTR [esi-0x8]
  403abe:	pop    ecx
  403abf:	xor    ah,bh
  403ac1:	repnz xchg esi,eax
  403ac3:	xor    bh,BYTE PTR [esi+0x5613afa4]
  403ac9:	mov    ebp,0x1b6d0120
  403ace:	jp     0x403a68
  403ad0:	(bad)  
  403ad1:	nop
  403ad2:	and    eax,0xf78ba2b0
  403ad7:	cli    
  403ad8:	gs (bad) 
  403ada:	fimul  DWORD PTR [ebx]
  403adc:	call   0x63b2:0xde631071
  403ae3:	or     ah,bh
  403ae5:	(bad)  
  403ae6:	das    
  403ae7:	out    dx,al
  403ae8:	pop    eax
  403ae9:	in     eax,dx
  403aea:	loopne 0x403b49
  403aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aed:	das    
  403aee:	mov    cl,0xe
  403af0:	pop    es
  403af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403af2:	mov    DWORD PTR [eax],ebx
  403af4:	add    eax,0xfd9bdbed
  403af9:	and    edi,ecx
  403afb:	sbb    eax,0xf55af85b
  403b00:	scas   eax,DWORD PTR es:[edi]
  403b01:	adc    al,0xf8
  403b03:	add    eax,0xac79b7ce
  403b08:	(bad)  
  403b09:	jmp    0x371ae5ea
  403b0e:	xor    DWORD PTR [eax-0x1d3d5f5c],eax
  403b14:	out    0x18,eax
  403b16:	pusha  
  403b17:	xchg   dl,bl
  403b19:	mov    cl,0x34
  403b1b:	inc    esi
  403b1c:	jns    0x403aa5
  403b1e:	fs push 0xcda31430
  403b24:	dec    ebx
  403b25:	mov    cl,0x31
  403b27:	ret    
  403b28:	add    eax,0x243f38af
  403b2d:	repnz (bad) 
  403b2f:	or     edi,esi
  403b31:	test   DWORD PTR [ebp-0x11],esp
  403b34:	ret    
  403b35:	mov    bh,0xe4
  403b37:	xchg   DWORD PTR [esi+0xbb5e5ea],esi
  403b3d:	cmp    eax,0xab8d6fb9
  403b42:	aaa    
  403b43:	dec    eax
  403b44:	in     eax,0x3d
  403b46:	inc    ecx
  403b47:	loope  0x403baf
  403b49:	cmp    ah,cl
  403b4b:	call   0xec8:0x33605808
  403b52:	dec    ebp
  403b53:	jnp    0x403b15
  403b55:	les    esi,FWORD PTR [eax-0x5c]
  403b58:	ja     0x403ba3
  403b5a:	lock pop edi
  403b5c:	xor    BYTE PTR [esi],0x35
  403b5f:	and    BYTE PTR [edx+0x400fa9fa],al
  403b65:	inc    ebx
  403b66:	add    DWORD PTR [edi+esi*2+0x1b],eax
  403b6a:	push   ds
  403b6b:	mov    ecx,DWORD PTR [eax+0xe]
  403b6e:	aad    0xb
  403b70:	xchg   esi,eax
  403b71:	(bad)  
  403b72:	(bad)  
  403b73:	dec    edi
  403b74:	inc    edx
  403b75:	adc    ch,bh
  403b77:	xchg   edi,eax
  403b78:	fnsave cs:[ebx]
  403b7b:	les    esp,FWORD PTR [edx-0x7b908299]
  403b81:	mov    eax,ds:0xa40d20a2
  403b86:	gs add al,0xe7
  403b89:	and    ebp,DWORD PTR [edx-0x34600b67]
  403b8f:	jb     0x403b9a
  403b91:	push   ecx
  403b92:	cmp    dh,BYTE PTR [edx-0x1d]
  403b95:	(bad)  
  403b97:	aas    
  403b98:	xlat   BYTE PTR ds:[ebx]
  403b99:	push   edi
  403b9a:	pop    ebx
  403b9b:	test   al,0x84
  403b9d:	call   0x2075:0xfe03d041
  403ba4:	ret    
  403ba5:	cmp    esi,DWORD PTR [ecx-0x44]
  403ba8:	xlat   BYTE PTR ds:[ebx]
  403ba9:	mov    esp,0x846f7d29
  403bae:	fxch   st(0)
  403bb0:	add    eax,0xf94ed7ba
  403bb5:	push   edx
  403bb6:	cld    
  403bb7:	imul   edi,DWORD PTR [eax+0x10927b0e],0x56
  403bbe:	dec    ecx
  403bbf:	in     eax,dx
  403bc0:	adc    esi,DWORD PTR [esi-0x3e]
  403bc3:	je     0x403bd2
  403bc5:	imul   ebx,DWORD PTR [esi],0x40
  403bc8:	add    eax,0xda2dc06
  403bcd:	mov    esp,0xcf7b0c59
  403bd2:	and    bl,BYTE PTR [esi]
  403bd4:	loope  0x403bbd
  403bd6:	ja     0x403b65
  403bd8:	pop    ecx
  403bd9:	pop    ds
  403bda:	sti    
  403bdb:	inc    esi
  403bdc:	pop    ecx
  403bdd:	rcl    DWORD PTR [ebx-0x38946e0e],0xf8
  403be4:	jecxz  0x403b73
  403be6:	popa   
  403be7:	test   eax,0x81af8e87
  403bec:	(bad)  
  403bed:	not    BYTE PTR [edi]
  403bef:	sub    DWORD PTR [ebp-0x454a8073],esi
  403bf5:	push   esp
  403bf6:	dec    ebx
  403bf7:	dec    edi
  403bf8:	ss das 
  403bfa:	je     0x403bd8
  403bfc:	repnz fst DWORD PTR [esi+0x41f3e388]
  403c03:	push   ss
  403c04:	ds pushf 
  403c06:	add    DWORD PTR [ebx],ebp
  403c08:	adc    eax,0xb5ba9fac
  403c0d:	lods   al,BYTE PTR ds:[esi]
  403c0e:	xchg   esp,eax
  403c0f:	adc    edi,edx
  403c11:	inc    edx
  403c12:	pop    esp
  403c13:	test   cl,0x18
  403c16:	mov    ebp,0xfa9130b1
  403c1b:	imul   edi,DWORD PTR [edi],0x72
  403c1e:	ffreep st(5)
  403c20:	in     al,0xbe
  403c22:	mov    cl,0x48
  403c24:	mov    esi,0x457c7f3f
  403c29:	adc    al,0x6b
  403c2b:	push   edi
  403c2c:	dec    ebx
  403c2d:	gs (bad) 
  403c2f:	xchg   edx,eax
  403c30:	js     0x403c24
  403c32:	mov    dh,BYTE PTR [edx+0x69756a90]
  403c38:	inc    esp
  403c39:	cmp    al,0x33
  403c3b:	inc    ecx
  403c3c:	rcl    BYTE PTR [ecx+0xe],1
  403c3f:	jg     0x403bf4
  403c41:	shr    BYTE PTR [ebp+ebx*1+0x44],0x3b
  403c46:	int    0xbe
  403c48:	sbb    al,BYTE PTR [edx]
  403c4a:	sbb    al,0xe4
  403c4c:	inc    ebx
  403c4d:	xchg   DWORD PTR [edi],esi
  403c4f:	enter  0x5bcf,0xee
  403c53:	dec    eax
  403c54:	ss mov dh,0x48
  403c57:	(bad)  
  403c58:	jmp    0xccde564b
  403c5d:	fdiv   DWORD PTR [esi]
  403c5f:	loopne 0x403c7f
  403c61:	pop    ss
  403c62:	jb     0x403c46
  403c64:	mov    ebx,0xa7b85fa
  403c69:	fst    st(3)
  403c6b:	pop    ds
  403c6c:	pop    edi
  403c6d:	loop   0x403c32
  403c6f:	rol    BYTE PTR [esi+0x260af6ea],cl
  403c75:	xor    esp,DWORD PTR [edx+0x266ad000]
  403c7b:	ins    DWORD PTR es:[edi],dx
  403c7c:	or     DWORD PTR [ebx],0xffffffbd
  403c7f:	add    BYTE PTR [ecx],ch
  403c81:	paddusw mm3,QWORD PTR [ebx]
  403c84:	std    
  403c85:	adc    edi,edx
  403c87:	mov    eax,0xd198f190
  403c8c:	or     edx,DWORD PTR [edx-0x6bf712e3]
  403c92:	pop    es
  403c93:	inc    ebx
  403c94:	es push edi
  403c96:	dec    edx
  403c97:	sahf   
  403c98:	inc    ebx
  403c99:	xor    dl,BYTE PTR [esi]
  403c9b:	and    DWORD PTR [eax+0x12b31860],0xffffff97
  403ca2:	mov    cl,0x20
  403ca4:	dec    esp
  403ca5:	popf   
  403ca6:	icebp  
  403ca7:	mov    eax,0x11be051f
  403cac:	xlat   BYTE PTR ds:[ebx]
  403cad:	fwait
  403cae:	dec    esi
  403caf:	jns    0x403d02
  403cb1:	shl    DWORD PTR [edi],1
  403cb3:	dec    ebp
  403cb4:	mov    bl,0x41
  403cb6:	loope  0x403d27
  403cb8:	fwait
  403cb9:	or     edx,DWORD PTR [edi]
  403cbb:	xor    ah,BYTE PTR [esi-0x3dce877e]
  403cc1:	xlat   BYTE PTR ds:[ebx]
  403cc2:	inc    edx
  403cc3:	jns    0x403c59
  403cc5:	and    ch,dl
  403cc7:	jg     0x403d23
  403cc9:	cmp    cl,BYTE PTR [ebx+0x63c259a]
  403ccf:	and    ah,BYTE PTR [esi]
  403cd1:	sub    al,0x12
  403cd3:	adc    BYTE PTR [ebp-0x6b2ff891],ah
  403cd9:	xchg   ecx,eax
  403cda:	mov    bh,0xb8
  403cdc:	test   BYTE PTR [edi+eiz*4-0x7e],dh
  403ce0:	sub    esi,ecx
  403ce2:	fs mov dh,0xb2
  403ce5:	not    DWORD PTR [esi-0x1c]
  403ce8:	mov    ds:0x1b319a4,eax
  403ced:	lea    eax,[eax+0x25]
  403cf0:	adc    eax,0xe29d3fc4
  403cf5:	pop    ss
  403cf6:	mov    esi,0x38592849
  403cfb:	pop    eax
  403cfc:	loope  0x403ce6
  403cfe:	xchg   edi,eax
  403cff:	icebp  
  403d00:	mov    DWORD PTR [ecx],ebp
  403d02:	mov    dl,0x1a
  403d04:	jle    0x403cb9
  403d06:	in     eax,dx
  403d07:	pop    ds
  403d08:	movaps xmm3,xmm3
  403d0b:	pop    ecx
  403d0c:	retf   
  403d0d:	lods   eax,DWORD PTR ds:[esi]
  403d0e:	push   ebp
  403d0f:	jno    0x403c92
  403d11:	loop   0x403cdb
  403d13:	outs   dx,BYTE PTR ds:[esi]
  403d14:	lea    esp,[esi+esi*2]
  403d17:	ret    
  403d18:	jae    0x403cc7
  403d1a:	out    0x29,eax
  403d1c:	fwait
  403d1d:	mov    WORD PTR [eax],es
  403d1f:	push   cs
  403d20:	out    0x53,al
  403d22:	addr16 mov al,ds:0xd727
  403d26:	sub    eax,0x4a03195a
  403d2b:	and    eax,0x1b702168
  403d30:	mov    DWORD PTR fs:0x28165cc4,ecx
  403d37:	mov    BYTE PTR [ebx+0x44feda75],al
  403d3d:	mov    ch,0x72
  403d3f:	test   eax,0x3f6dfa84
  403d44:	add    ch,BYTE PTR [eax]
  403d46:	pop    ebx
  403d47:	mov    ch,0x29
  403d49:	int3   
  403d4a:	outs   dx,BYTE PTR ds:[esi]
  403d4b:	in     al,0x61
  403d4d:	and    esp,DWORD PTR [edx]
  403d4f:	adc    edx,DWORD PTR [edx+0x476a3ca7]
  403d55:	and    DWORD PTR ds:0x3d90c306,0xffffffc5
  403d5c:	cdq    
  403d5d:	cmp    edi,DWORD PTR [esi+eiz*8]
  403d60:	push   esp
  403d61:	or     dh,bl
  403d63:	xlat   BYTE PTR ds:[ebx]
  403d64:	or     al,0x8d
  403d66:	push   esp
  403d67:	add    al,BYTE PTR [edx-0x72]
  403d6a:	mov    ecx,0x14798040
  403d6f:	out    dx,eax
  403d70:	inc    ecx
  403d71:	ss mov ecx,0x1e5ea88f
  403d77:	test   eax,0xc7728e29
  403d7c:	inc    ecx
  403d7d:	xor    DWORD PTR [eax-0x6a],ebp
  403d80:	sbb    DWORD PTR [edi+0x17f7aae3],0x7c
  403d87:	scas   al,BYTE PTR es:[edi]
  403d88:	dec    edx
  403d89:	sub    edx,edx
  403d8b:	cmp    eax,0x60687e44
  403d90:	mov    edi,0x1eea9546
  403d95:	pshufw mm2,QWORD PTR [ecx-0x11982432],0xdd
  403d9d:	xor    edx,DWORD PTR [eax+0x45]
  403da0:	mov    ebp,0x22e4e4d
  403da5:	fwait
  403da6:	popf   
  403da7:	inc    eax
  403da8:	pop    edi
  403da9:	and    BYTE PTR [esi*2-0x42a55ecc],cl
  403db0:	popa   
  403db1:	popf   
  403db2:	push   0x1bdc8c28
  403db7:	fsubr  st,st(5)
  403db9:	jnp    0x403dca
  403dbb:	xchg   BYTE PTR ds:0x8923e8d2,cl
  403dc1:	outs   dx,DWORD PTR ds:[esi]
  403dc2:	es pop eax
  403dc4:	mov    cs,WORD PTR [edx+0x3d]
  403dc7:	dec    esi
  403dc8:	sub    BYTE PTR [eax+0x1f],ah
  403dcb:	(bad)  
  403dcc:	xchg   edx,eax
  403dcd:	and    edx,esi
  403dcf:	add    al,0xcf
  403dd1:	icebp  
  403dd2:	sub    BYTE PTR [edi+0x11],al
  403dd5:	outs   dx,BYTE PTR ds:[esi]
  403dd6:	adc    cl,ch
  403dd8:	arpl   si,si
  403dda:	dec    BYTE PTR [ecx+0x77d462a5]
  403de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de1:	inc    edx
  403de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de3:	mov    dh,0xc6
  403de5:	jp     0x403e0e
  403de7:	sub    eax,0xc87e4eec
  403dec:	int3   
  403ded:	pop    esp
  403dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403def:	cld    
  403df0:	iret   
  403df1:	push   ebp
  403df2:	lea    ebp,[edi+0x7]
  403df5:	lds    ebx,FWORD PTR [ebp+0x21]
  403df8:	inc    ebp
  403df9:	inc    esi
  403dfa:	cmp    eax,0x7bc3afa
  403dff:	adc    al,0x88
  403e01:	loopne 0x403e5a
  403e03:	retf   0x6c0c
  403e06:	mov    BYTE PTR [edx],bl
  403e08:	(bad)  
  403e0a:	imul   bh
  403e0c:	lahf   
  403e0d:	jmp    0xa11a5afe
  403e12:	sbb    al,0x73
  403e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e15:	lods   al,BYTE PTR ds:[esi]
  403e16:	push   ss
  403e17:	test   eax,0x5c4ce5f8
  403e1c:	cmp    bh,BYTE PTR [ebx]
  403e1e:	into   
  403e1f:	dec    edi
  403e20:	and    al,0x8e
  403e22:	ret    0x3e2b
  403e25:	add    eax,0x2fa1cbe2
  403e2b:	retf   
  403e2c:	mov    ds:0x26823146,eax
  403e31:	sbb    DWORD PTR ds:0x22af5902,esi
  403e37:	enter  0xf3c1,0xe
  403e3b:	aam    0x16
  403e3d:	adc    eax,0x49f8f5ff
  403e42:	cmp    DWORD PTR [esi-0x9],ebp
  403e45:	ret    
  403e46:	adc    DWORD PTR [ecx+0x2c59850e],ebx
  403e4c:	push   ebp
  403e4d:	mov    ds:0x609fa5c2,eax
  403e52:	out    0x26,eax
  403e54:	pop    ebx
  403e55:	popa   
  403e56:	mov    ds:0xa23a35f5,al
  403e5b:	in     al,0xa6
  403e5d:	mov    al,0xf6
  403e5f:	or     eax,0x827f2b04
  403e64:	lahf   
  403e65:	ret    
  403e66:	imul   ebp,DWORD PTR [eax+0x1f3929fd],0x525cd831
  403e70:	(bad)  
  403e71:	mov    ecx,0x883452b5
  403e76:	test   eax,0x345a4ee4
  403e7b:	push   esi
  403e7c:	sar    DWORD PTR [edi],1
  403e7e:	pusha  
  403e7f:	popa   
  403e80:	xchg   ebp,eax
  403e81:	rcl    DWORD PTR [ebx-0x298ff403],0xee
  403e88:	mov    ecx,ecx
  403e8a:	jmp    0x403ebd
  403e8c:	retf   
  403e8d:	jno    0x403ed6
  403e8f:	jb     0x403ecd
  403e91:	jmp    0x1495:0x51a6cda5
  403e98:	xchg   esp,eax
  403e99:	jecxz  0x403ed9
  403e9b:	xor    DWORD PTR [edi],esi
  403e9d:	imul   eax,DWORD PTR [eax],0xfffffffd
  403ea0:	or     edx,edi
  403ea2:	pop    ebx
  403ea3:	mov    al,0x45
  403ea5:	adc    bh,BYTE PTR [ebx+ebx*8+0x62]
  403ea9:	test   al,0x72
  403eab:	jbe    0x403e95
  403ead:	mov    ds:0x7a327b17,eax
  403eb2:	inc    ebp
  403eb3:	push   esp
  403eb4:	sub    al,0x65
  403eb6:	cwde   
  403eb7:	dec    esi
  403eb8:	sbb    eax,DWORD PTR [eax+ebp*8-0x252b61e0]
  403ebf:	test   BYTE PTR [ebp-0x4f],0x55
  403ec3:	xchg   edi,eax
  403ec4:	das    
  403ec5:	mov    bh,0xf1
  403ec7:	repz pop ebp
  403ec9:	shl    DWORD PTR [ebx],1
  403ecb:	mov    ?,WORD PTR [edi]
  403ecd:	pusha  
  403ece:	or     eax,0xea2d03f0
  403ed3:	jge    0x403e97
  403ed5:	(bad)  
  403ed7:	retf   
  403ed8:	jne    0x403ea7
  403eda:	mov    ah,ch
  403edc:	icebp  
  403edd:	mov    al,ds:0x687368f5
  403ee2:	mov    WORD PTR [esi+0x3972f15b],fs
  403ee8:	sbb    al,BYTE PTR [ecx+0x7b452630]
  403eee:	ja     0x403e8c
  403ef0:	js     0x403f28
  403ef2:	or     eax,0xad29e1b5
  403ef7:	jb     0x403eb9
  403ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403efa:	jo     0x403f6f
  403efc:	outs   dx,DWORD PTR ds:[esi]
  403efd:	xchg   edi,eax
  403efe:	outs   dx,DWORD PTR ds:[esi]
  403eff:	out    0xc2,al
  403f01:	adc    bh,BYTE PTR [eax-0x49f097c0]
  403f07:	or     DWORD PTR [esi+0x33b5858c],esp
  403f0d:	xchg   edi,eax
  403f0e:	mov    ecx,0xe9bc354c
  403f13:	lahf   
  403f14:	stc    
  403f15:	imul   eax,DWORD PTR [eax-0x6affde02],0x1f9f690c
  403f1f:	fisttp QWORD PTR [edi+0x765634ca]
  403f25:	sbb    DWORD PTR [ebx-0x6318872e],ecx
  403f2b:	daa    
  403f2c:	add    al,0x2b
  403f2e:	sahf   
  403f2f:	cmp    BYTE PTR [edi-0x130d13e3],al
  403f35:	in     al,dx
  403f36:	(bad)  
  403f37:	scas   al,BYTE PTR es:[edi]
  403f38:	dec    ebp
  403f39:	daa    
  403f3a:	iret   
  403f3b:	xchg   esp,eax
  403f3c:	int    0xa1
  403f3e:	sub    ebp,eax
  403f40:	repz mov ch,0x6e
  403f43:	mov    bl,al
  403f45:	xchg   esi,eax
  403f46:	in     eax,dx
  403f47:	bound  ebp,QWORD PTR [edx+ecx*2]
  403f4a:	stos   BYTE PTR es:[edi],al
  403f4b:	stos   DWORD PTR es:[edi],eax
  403f4c:	pop    ebp
  403f4d:	retf   0xc9ad
  403f50:	adc    edi,DWORD PTR [edx-0xd]
  403f53:	imul   ebx,DWORD PTR [eax+0x131a20a6],0x2f
  403f5a:	shl    DWORD PTR [esi+0x65d45f16],0x0
  403f61:	jmp    0x6df6:0xeadbeaa4
  403f68:	cmp    BYTE PTR [edx],dl
  403f6a:	jb     0x403fc4
  403f6c:	retf   0xd888
  403f6f:	sar    DWORD PTR [ebp+0x4d700f0a],cl
  403f75:	outs   dx,DWORD PTR ds:[esi]
  403f76:	push   es
  403f77:	and    DWORD PTR [eax],edi
  403f79:	and    esi,DWORD PTR fs:[eax-0x1]
  403f7d:	ins    BYTE PTR es:[edi],dx
  403f7e:	cmp    BYTE PTR [ebx+0x3f],bh
  403f81:	loop   0x403f1c
  403f83:	jnp    0x403fed
  403f85:	push   cs
  403f86:	dec    eax
  403f87:	xchg   esp,eax
  403f88:	int3   
  403f89:	mov    ebx,0x2651a8fb
  403f8e:	jmp    0x529e9355
  403f93:	mov    ebp,0x4e71605e
  403f98:	std    
  403f99:	sar    BYTE PTR [esi+0x77df891a],0xc2
  403fa0:	push   ecx
  403fa1:	cmp    edx,DWORD PTR [eax+esi*1+0x72]
  403fa5:	lds    ebp,FWORD PTR [ebp+ebx*2-0x3]
  403fa9:	outs   dx,DWORD PTR ds:[esi]
  403faa:	inc    edi
  403fab:	icebp  
  403fac:	je     0x403f88
  403fae:	popf   
  403faf:	push   esi
  403fb0:	hlt    
  403fb1:	mov    ds:0xd70f3d35,eax
  403fb6:	and    al,0x15
  403fb8:	and    esi,DWORD PTR [ebx-0x44f5933e]
  403fbe:	retf   0xaf10
  403fc1:	sbb    eax,DWORD PTR [ecx-0x7b15479c]
  403fc7:	ja     0x403f92
  403fc9:	retf   
  403fca:	pop    esi
  403fcb:	push   ds
  403fcc:	mov    ecx,0xf5d78b91
  403fd1:	cli    
  403fd2:	and    ebx,ebp
  403fd4:	cmp    BYTE PTR [edx],al
  403fd6:	jecxz  0x403f7d
  403fd8:	inc    esp
  403fd9:	cmp    BYTE PTR [ebx+esi*8],dh
  403fdc:	iret   
  403fdd:	mov    esp,0x906ba4bd
  403fe2:	lahf   
  403fe3:	leave  
  403fe4:	jmp    0xcd15cb80
  403fe9:	xlat   BYTE PTR ds:[ebx]
  403fea:	cmp    DWORD PTR [ebx-0x7e],edx
  403fed:	pop    ebx
  403fee:	int    0xc6
  403ff0:	enter  0x850b,0x15
  403ff4:	mov    edx,ebp
  403ff6:	sahf   
  403ff7:	outs   dx,BYTE PTR ds:[esi]
  403ff8:	mov    dh,0x41
  403ffa:	lahf   
  403ffb:	sub    DWORD PTR [ecx],ecx
  403ffd:	std    
  403ffe:	pop    esi
  403fff:	push   cs
  404000:	dec    eax
  404001:	clc    
  404002:	sbb    eax,0x833f31dc
  404007:	pop    ecx
  404008:	xchg   DWORD PTR [ecx-0x250700cf],edi
  40400e:	pop    edi
  40400f:	inc    esp
  404010:	jb     0x40407a
  404012:	push   esi
  404013:	les    esp,FWORD PTR [edi+0x1f340707]
  404019:	mov    eax,0xd5561812
  40401e:	and    BYTE PTR [edx-0x4b],bl
  404021:	mov    ebx,0x4a75bd29
  404026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404027:	xchg   DWORD PTR [eax-0x7a970801],edi
  40402d:	scas   eax,DWORD PTR es:[edi]
  40402e:	or     edi,DWORD PTR [esi-0x2c1e7f10]
  404034:	outs   dx,BYTE PTR ds:[esi]
  404035:	inc    eax
  404036:	imul   BYTE PTR [ebx-0x21]
  404039:	xchg   ecx,eax
  40403a:	mov    cl,0x27
  40403c:	shl    BYTE PTR [esi],0xd5
  40403f:	jle    0x40405f
  404041:	push   ebx
  404042:	mov    ebp,0x2b19f3ef
  404047:	jge    0x40408e
  404049:	sbb    ch,BYTE PTR [ecx-0x2963f2c]
  40404f:	nop
  404050:	je     0x404030
  404052:	lods   al,BYTE PTR ds:[esi]
  404053:	inc    ebx
  404054:	add    BYTE PTR [eax+eiz*4],al
  404057:	cmp    ch,BYTE PTR [eax+0xda1764e]
  40405d:	out    dx,eax
  40405e:	or     edx,edi
  404060:	addps  xmm6,XMMWORD PTR [eax]
  404063:	fwait
  404064:	adc    DWORD PTR [ebx+ebx*1],0xffffffad
  404068:	or     al,0x96
  40406a:	adc    DWORD PTR [esi],eax
  40406c:	xchg   edx,eax
  40406d:	add    eax,0x8b86171a
  404072:	xlat   BYTE PTR ds:[ebx]
  404073:	cmp    eax,0x5f6355b
  404079:	fstp   DWORD PTR [edx]
  40407b:	pop    ebp
  40407c:	dec    esp
  40407d:	shr    DWORD PTR [esi+eax*2],1
  404080:	push   edi
  404081:	mov    BYTE PTR [ecx+0x6b],dh
  404084:	inc    eax
  404085:	sbb    eax,DWORD PTR [ebx]
  404087:	out    0xce,eax
  404089:	std    
  40408a:	sub    BYTE PTR [eax],0xe5
  40408d:	jnp    0x404033
  40408f:	test   ebp,eax
  404091:	in     eax,0x4f
  404093:	cmp    al,0xa3
  404095:	ds push ebp
  404097:	dec    ecx
  404098:	adc    edx,DWORD PTR [esi+ebp*4-0x1c525096]
  40409f:	inc    ecx
  4040a0:	add    BYTE PTR [ecx-0x340e110e],ah
  4040a6:	or     ebx,esp
  4040a8:	xchg   edi,eax
  4040a9:	fcomip st,st(4)
  4040ab:	fbstp  TBYTE PTR [edi+ebx*8+0x528ac0f6]
  4040b2:	les    ebx,FWORD PTR [ecx]
  4040b4:	adc    BYTE PTR [edx+0x67],dh
  4040b7:	inc    edx
  4040b8:	cli    
  4040b9:	add    edi,edi
  4040bb:	xchg   esp,eax
  4040bc:	(bad)  
  4040bd:	out    0x47,eax
  4040bf:	leave  
  4040c0:	retf   0xe2b2
  4040c3:	rol    DWORD PTR [ebp+0x4472dfc9],0xe5
  4040ca:	loopne 0x40414b
  4040cc:	pop    esi
  4040cd:	sub    BYTE PTR [esi+eax*2],0xda
  4040d1:	dec    eax
  4040d2:	mov    DWORD PTR [eax],ebx
  4040d4:	ins    BYTE PTR es:[edi],dx
  4040d5:	fwait
  4040d6:	lds    ecx,FWORD PTR [esi+ecx*4]
  4040d9:	xor    DWORD PTR [esi-0x15],eax
  4040dc:	daa    
  4040dd:	(bad)  
  4040de:	(bad)  
  4040e0:	outs   dx,BYTE PTR ds:[esi]
  4040e1:	sbb    eax,0x7f05ec60
  4040e6:	and    DWORD PTR [ebx-0x1],edx
  4040e9:	mov    esp,0x61f0dcc7
  4040ee:	imul   edx,DWORD PTR ds:0xd9ac632b,0xffffff85
  4040f5:	stc    
  4040f6:	hlt    
  4040f7:	xchg   esi,eax
  4040f8:	adc    al,0x2
  4040fa:	cdq    
  4040fb:	cmp    BYTE PTR [ecx-0x6b],0xba
  4040ff:	xchg   esi,eax
  404100:	cmp    DWORD PTR [ebp-0x5a],esp
  404103:	cld    
  404104:	jmp    0x8987:0x6468cc32
  40410b:	inc    edi
  40410c:	aam    0x3c
  40410e:	into   
  40410f:	cmp    eax,edx
  404111:	jecxz  0x40411e
  404113:	retf   
  404114:	cli    
  404115:	in     eax,dx
  404116:	inc    ebp
  404117:	xchg   esp,eax
  404118:	cmp    cl,dl
  40411a:	out    0x93,al
  40411c:	into   
  40411d:	xor    ch,BYTE PTR [ebx-0x42]
  404120:	xor    esi,DWORD PTR [ebx+0x2c]
  404123:	xchg   esi,eax
  404124:	shl    al,1
  404126:	je     0x40410d
  404128:	add    BYTE PTR [edx-0x9bf4e59],dl
  40412e:	gs (bad) 
  404131:	push   esp
  404132:	cmp    esp,ebx
  404134:	jecxz  0x404123
  404136:	cmp    ecx,DWORD PTR [edi+ebx*1-0x17046aec]
  40413d:	(bad)  
  40413e:	mov    edi,0xaefbce5c
  404143:	stos   BYTE PTR es:[edi],al
  404144:	ins    DWORD PTR es:[edi],dx
  404145:	adc    DWORD PTR ds:0xb51dff83,ebp
  40414b:	mov    ebx,edi
  40414d:	push   0x67414b5b
  404152:	and    al,0x33
  404154:	and    eax,0x4502723f
  404159:	adc    ch,BYTE PTR [edi-0x2]
  40415c:	mov    cl,0x7c
  40415e:	ja     0x4040e5
  404160:	mov    cl,0x95
  404162:	les    esi,FWORD PTR [edi+eiz*8]
  404165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404166:	mov    ds:0x2ec200be,al
  40416b:	(bad)  
  40416c:	cmp    al,0xdc
  40416e:	pop    edi
  40416f:	mov    al,ds:0x30a01a4a
  404174:	stos   BYTE PTR es:[edi],al
  404175:	dec    esi
  404176:	(bad)  
  404178:	(bad)  
  404179:	adc    BYTE PTR [ecx+0x1a],bl
  40417c:	dec    eax
  40417d:	and    ch,BYTE PTR fs:0x4ab97de6
  404184:	bound  edx,QWORD PTR [ebx+0x561e8daa]
  40418a:	xor    BYTE PTR [edi],al
  40418c:	mov    eax,0xe42ad7f8
  404191:	add    eax,0x339f31c4
  404196:	repz inc ebx
  404198:	dec    ecx
  404199:	in     al,0x3f
  40419b:	dec    ebx
  40419c:	sbb    eax,0x954e3ca8
  4041a1:	push   ecx
  4041a2:	lods   eax,DWORD PTR ds:[esi]
  4041a3:	fisub  WORD PTR ds:0xbc95e80c
  4041a9:	je     0x40419f
  4041ab:	jle    0x4041d1
  4041ad:	xor    DWORD PTR [ecx+0x26],ebx
  4041b0:	lahf   
  4041b1:	push   ebx
  4041b2:	lods   al,BYTE PTR ds:[esi]
  4041b3:	jnp    0x4041b8
  4041b5:	jle    0x404154
  4041b7:	inc    ebp
  4041b8:	jle    0x4041c5
  4041ba:	sbb    DWORD PTR [edi-0x23],esp
  4041bd:	fdiv   DWORD PTR [edi]
  4041bf:	mov    eax,ecx
  4041c1:	(bad)  
  4041c2:	pop    edi
  4041c3:	mov    ds:0x8a1ff58a,eax
  4041c8:	in     al,0x35
  4041ca:	out    dx,eax
  4041cb:	pop    edi
  4041cc:	xchg   edx,eax
  4041cd:	daa    
  4041ce:	std    
  4041cf:	pusha  
  4041d0:	fucomp st(2)
  4041d2:	(bad)  
  4041d3:	inc    DWORD PTR [edx-0x490b4e0a]
  4041d9:	pop    ecx
  4041da:	mov    WORD PTR [edi+0x7e62dab3],?
  4041e0:	sbb    edx,DWORD PTR [ebx]
  4041e2:	test   DWORD PTR [ebx-0x4c130c0b],ebx
  4041e8:	(bad)  
  4041e9:	sbb    al,0xf9
  4041eb:	adc    edx,DWORD PTR [eax+ebx*1-0x75dda0d5]
  4041f2:	stc    
  4041f3:	aaa    
  4041f4:	aaa    
  4041f5:	sbb    esi,0xffffffc8
  4041f8:	scas   eax,DWORD PTR es:[edi]
  4041f9:	and    BYTE PTR [edi],dh
  4041fb:	jb     0x4041f7
  4041fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fe:	es je  0x404224
  404201:	sub    ebp,DWORD PTR [esi+0x17]
  404204:	hlt    
  404205:	sub    al,0x9f
  404207:	jp     0x404239
  404209:	shl    DWORD PTR [edx+0x70],1
  40420c:	hlt    
  40420d:	cmp    eax,0xf0c3a0b3
  404212:	call   0xf06f41f2
  404217:	mov    bh,0x18
  404219:	inc    ebp
  40421a:	cmp    eax,0xdcf60684
  40421f:	in     eax,0x22
  404221:	xchg   ebp,eax
  404222:	dec    ecx
  404223:	sbb    edx,DWORD PTR [edx]
  404225:	ret    0x38ba
  404228:	call   FWORD PTR [ecx+0x31]
  40422b:	shl    DWORD PTR [ebp-0x2809aebb],0xed
  404232:	sbb    al,0x7b
  404234:	add    esp,DWORD PTR [ecx-0x2ce02a3b]
  40423a:	inc    edx
  40423b:	sub    eax,0x5c451403
  404240:	mov    ah,0x8c
  404242:	mov    esi,ebx
  404244:	xor    BYTE PTR [esi+0x1fdcd68c],bh
  40424a:	into   
  40424b:	sub    bl,BYTE PTR [esi-0x623ce583]
  404251:	xchg   edi,eax
  404252:	icebp  
  404253:	daa    
  404254:	adc    BYTE PTR [ebp+0x4f021453],dl
  40425a:	mov    ecx,0x224ce04a
  40425f:	dec    ecx
  404260:	es cdq 
  404262:	aaa    
  404263:	jp     0x4041ec
  404265:	dec    eax
  404266:	pop    eax
  404267:	pop    edi
  404268:	dec    edi
  404269:	mov    esi,0x565c18a3
  40426e:	lods   eax,DWORD PTR ds:[esi]
  40426f:	test   BYTE PTR [esp+eax*4+0x19],0x91
  404274:	stos   DWORD PTR es:[edi],eax
  404275:	inc    edx
  404276:	int    0xb6
  404278:	xchg   edi,eax
  404279:	test   eax,0x81c3130e
  40427e:	xchg   esi,eax
  40427f:	jmp    0x7010:0x800f5f57
  404286:	div    dl
  404288:	pop    edi
  404289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40428a:	lods   al,BYTE PTR ds:[esi]
  40428b:	or     BYTE PTR [ebp-0x535f9ebd],bh
  404291:	std    
  404292:	jne    0x404248
  404294:	xchg   edx,eax
  404295:	out    dx,eax
  404296:	and    al,BYTE PTR [esi-0x758996db]
  40429c:	fcomp  QWORD PTR [esi+0x69]
  40429f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a0:	jbe    0x40424a
  4042a2:	xchg   ebx,eax
  4042a3:	push   ebx
  4042a4:	leave  
  4042a5:	push   esp
  4042a6:	jecxz  0x404296
  4042a8:	sbb    DWORD PTR [ecx+0x6a],ebx
  4042ab:	inc    esi
  4042ac:	(bad)  
  4042ad:	addr16 dec esp
  4042af:	mov    edi,0x4cb3b860
  4042b4:	arpl   WORD PTR [eax+0x1a814053],si
  4042ba:	(bad)  
  4042bb:	je     0x4042fd
  4042bd:	jns    0x404335
  4042bf:	fsub   QWORD PTR [ecx+0x55]
  4042c2:	xor    bh,0x82
  4042c5:	(bad)  
  4042c6:	sub    eax,0xcf6c36a2
  4042cb:	ins    BYTE PTR es:[edi],dx
  4042cc:	sbb    eax,DWORD PTR [ecx+0x459f8be5]
  4042d2:	and    eax,DWORD PTR [eax+0x632e61fa]
  4042d8:	mov    dh,0x6d
  4042da:	push   es
  4042db:	sbb    edi,eax
  4042dd:	mov    bl,0xdd
  4042df:	enter  0xf3c6,0x36
  4042e3:	xchg   ecx,eax
  4042e4:	push   ds
  4042e5:	xor    BYTE PTR [esi+0x2d],0x75
  4042e9:	fsub   QWORD PTR [edx-0xd1a3d71]
  4042ef:	into   
  4042f0:	sbb    ebx,eax
  4042f2:	ss or  dl,bh
  4042f5:	xchg   esi,eax
  4042f6:	shr    BYTE PTR [esp+edi*2+0x4c920434],cl
  4042fd:	and    al,0x81
  4042ff:	ret    0x7051
  404302:	and    bh,BYTE PTR [edi+0x68]
  404305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404306:	std    
  404307:	mov    eax,0x5c2e7a24
  40430c:	xlat   BYTE PTR ds:[ebx]
  40430d:	add    ch,BYTE PTR [edi]
  40430f:	adc    esp,DWORD PTR [edx+0x4b5121b8]
  404315:	daa    
  404316:	mov    esi,0xfe94a152
  40431b:	int3   
  40431c:	clc    
  40431d:	(bad)
  404320:	cdq    
  404321:	push   ebx
  404322:	std    
  404323:	sbb    ah,BYTE PTR ds:0xf3c24490
  404329:	outs   dx,DWORD PTR ds:[esi]
  40432a:	test   BYTE PTR [ecx],dl
  40432c:	jg     0x404318
  40432e:	pop    es
  40432f:	hlt    
  404330:	xor    al,BYTE PTR [ebp-0x2bc5825e]
  404336:	or     DWORD PTR [edi-0x47],esp
  404339:	outs   dx,DWORD PTR ds:[esi]
  40433a:	xor    edx,eax
  40433c:	mov    DWORD PTR [eax-0x4f],esp
  40433f:	mov    bh,0xb9
  404341:	or     DWORD PTR [edx+0x4f],eax
  404344:	pushf  
  404345:	daa    
  404346:	push   esp
  404347:	jb     0x40439f
  404349:	pop    ecx
  40434a:	dec    esi
  40434b:	pop    esp
  40434c:	ja     0x404336
  40434e:	outs   dx,BYTE PTR ds:[esi]
  40434f:	inc    esi
  404350:	add    BYTE PTR [esi-0x5b4096e0],ah
  404356:	push   edx
  404357:	pop    ebp
  404358:	cmp    eax,DWORD PTR [ecx+0x61]
  40435b:	enter  0xe2f9,0xda
  40435f:	mov    eax,0x5b9bd5f0
  404364:	or     DWORD PTR [eax],esi
  404366:	pop    ebp
  404367:	push   ebp
  404368:	ja     0x404364
  40436a:	mov    edi,0xd6dfb92e
  40436f:	mov    esi,0x48d5c0fa
  404374:	xor    al,ah
  404376:	inc    ebx
  404377:	and    DWORD PTR [ebp-0x4d7c57e1],ebp
  40437d:	rcr    BYTE PTR [ebx+0x37],1
  404380:	fst    DWORD PTR [eax]
  404382:	add    BYTE PTR [ecx+0x45],cl
  404385:	shl    BYTE PTR [ecx-0x79],0x7
  404389:	add    eax,0x89027524
  40438e:	mov    bl,0x5a
  404390:	jg     0x4043ae
  404392:	mov    esp,0xe3f9419d
  404397:	sub    al,0xef
  404399:	push   0x1fc6e6bd
  40439e:	xchg   BYTE PTR [ebx+0x2337d67b],dl
  4043a4:	push   eax
  4043a5:	push   esp
  4043a6:	ja     0x4043bb
  4043a8:	outs   dx,DWORD PTR gs:[esi]
  4043aa:	pop    edi
  4043ab:	sub    dh,BYTE PTR [esi]
  4043ad:	mov    al,ds:0x988a5414
  4043b2:	cld    
  4043b3:	mov    esp,0x73c96d6d
  4043b8:	in     eax,dx
  4043b9:	inc    edx
  4043ba:	sub    al,0x60
  4043bc:	mov    ebp,ebp
  4043be:	call   0xc7f1:0xb378f29c
  4043c5:	sbb    eax,0x44e5cad9
  4043ca:	out    0x21,al
  4043cc:	mov    esi,0x62c57262
  4043d1:	(bad)  
  4043d2:	out    0x39,al
  4043d4:	jo     0x404359
  4043d6:	aas    
  4043d7:	sub    dh,BYTE PTR [edx-0x21]
  4043da:	sbb    DWORD PTR [ebx],esi
  4043dc:	mov    bl,0xc4
  4043de:	jge    0x40445b
  4043e0:	test   DWORD PTR [ebp+0x437fdd73],eax
  4043e6:	mov    al,ds:0xe611efca
  4043eb:	ret    0x9c50
  4043ee:	cld    
  4043ef:	stc    
  4043f0:	sub    eax,0x982eb027
  4043f5:	test   eax,0xdb4a3b11
  4043fa:	push   ecx
  4043fb:	xor    BYTE PTR [eax-0x48da272b],cl
  404401:	push   es
  404402:	mov    BYTE PTR [esi+0x16],bl
  404405:	enter  0x8683,0xa8
  404409:	imul   ecx,DWORD PTR [ebp+eax*8-0x759084f2],0xfffffff4
  404411:	sub    bh,BYTE PTR [eax+0x115ac2e0]
  404417:	jl     0x4043d4
  404419:	popf   
  40441a:	push   ss
  40441b:	das    
  40441c:	sbb    BYTE PTR [ecx-0x11169a75],bh
  404422:	sub    BYTE PTR [ebp+edi*1-0x4ac8ce1b],dh
  404429:	stc    
  40442a:	aas    
  40442b:	stos   BYTE PTR es:[edi],al
  40442c:	push   ecx
  40442d:	ss or  ecx,ebx
  404430:	test   eax,0x38754423
  404435:	ret    
  404436:	pushf  
  404437:	retf   0xd046
  40443a:	imul   ebp,DWORD PTR [esi+ecx*4-0x14],0xffffff85
  40443f:	clc    
  404440:	jbe    0x404447
  404442:	ins    DWORD PTR es:[edi],dx
  404443:	stos   BYTE PTR es:[edi],al
  404444:	xchg   edx,eax
  404445:	out    dx,al
  404446:	in     al,dx
  404447:	hlt    
  404448:	pusha  
  404449:	mov    al,ds:0x844b2c9c
  40444e:	sbb    edx,DWORD PTR [eax]
  404450:	repz mov eax,cs
  404453:	or     DWORD PTR [ecx],ecx
  404455:	and    ecx,edi
  404457:	pop    ds
  404458:	and    cl,BYTE PTR [eax+0x4b]
  40445b:	inc    edx
  40445c:	(bad)  
  40445d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40445e:	mov    ah,0x12
  404460:	cmp    eax,0xb8522c00
  404465:	repnz (bad) 
  404467:	sbb    BYTE PTR [edx-0x59e173aa],cl
  40446d:	mov    ch,0x33
  40446f:	popa   
  404470:	mov    edi,0x4a468de3
  404475:	mov    bh,0x47
  404477:	push   ds
  404478:	stos   DWORD PTR es:[edi],eax
  404479:	xlat   BYTE PTR ds:[ebx]
  40447a:	fist   DWORD PTR ds:[eax-0x2c]
  40447e:	or     cl,BYTE PTR [ebx]
  404480:	loop   0x404423
  404482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404483:	add    ch,BYTE PTR ds:0x8d361f7e
  404489:	ins    DWORD PTR es:[edi],dx
  40448a:	pop    ss
  40448b:	das    
  40448c:	and    bl,BYTE PTR [edi-0x4e]
  40448f:	xchg   DWORD PTR [edx+ebp*2],esp
  404492:	loope  0x4044e6
  404494:	dec    edi
  404495:	arpl   WORD PTR [edx+0x49],cx
  404498:	adc    ebx,DWORD PTR [esi+0x5c]
  40449b:	jns    0x4044f0
  40449d:	jo     0x40446e
  40449f:	imul   edx,DWORD PTR [ebp+0xa],0x550303fd
  4044a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a7:	fstp   QWORD PTR [esi]
  4044a9:	out    dx,al
  4044aa:	jmp    0x404499
  4044ac:	push   0x6f5c1757
  4044b1:	sub    esi,DWORD PTR [edi+0x3c]
  4044b4:	arpl   WORD PTR [ecx+eax*1-0x56],si
  4044b8:	push   esp
  4044b9:	outs   dx,BYTE PTR ds:[esi]
  4044ba:	vmread DWORD PTR ss:[edi-0x7c],edi
  4044bf:	bound  ebp,QWORD PTR [edx]
  4044c1:	mov    esp,DWORD PTR [ebp-0x41]
  4044c4:	ins    DWORD PTR es:[edi],dx
  4044c5:	test   BYTE PTR [esi-0x3b9fef13],cl
  4044cb:	popf   
  4044cc:	shr    DWORD PTR [edx-0x18111bc2],1
  4044d2:	adc    eax,DWORD PTR [esi+edi*4]
  4044d5:	ins    BYTE PTR es:[edi],dx
  4044d6:	adc    al,0x9d
  4044d8:	hlt    
  4044d9:	jle    0x40448c
  4044db:	icebp  
  4044dc:	outs   dx,BYTE PTR ds:[esi]
  4044dd:	sbb    bl,BYTE PTR ds:0x12261562
  4044e3:	jp     0x4044cc
  4044e5:	ror    BYTE PTR [edi-0x1d937bb8],cl
  4044eb:	arpl   WORD PTR [eax-0x26],bp
  4044ee:	mov    esp,0x5f1feb12
  4044f3:	rep ins BYTE PTR es:[edi],dx
  4044f5:	mov    ebx,DWORD PTR [ecx+0x6f1c47cb]
  4044fb:	pushf  
  4044fc:	adc    BYTE PTR [eax-0x3df2101d],bh
  404502:	add    DWORD PTR ds:0xc8f08ce6,0x45
  404509:	(bad)  
  40450b:	xor    cl,BYTE PTR [edi+0x62]
  40450e:	(bad)  
  404510:	stos   DWORD PTR es:[edi],eax
  404511:	popf   
  404512:	ror    BYTE PTR [esi-0x275ed6b7],cl
  404518:	add    BYTE PTR [eax-0x24],dh
  40451b:	cs push esi
  40451d:	and    ecx,DWORD PTR [edx+0x61]
  404520:	(bad)  [eax]
  404522:	push   esi
  404523:	div    DWORD PTR [edx]
  404525:	data16 das 
  404527:	sahf   
  404528:	xchg   edx,eax
  404529:	in     eax,dx
  40452a:	loopne 0x40456f
  40452c:	fistp  DWORD PTR [esi+0x60]
  40452f:	stos   DWORD PTR es:[edi],eax
  404530:	loope  0x404590
  404532:	mov    ss:0x57a02253,al
  404538:	pusha  
  404539:	arpl   WORD PTR [edi+0x52ecb606],bp
  40453f:	stc    
  404540:	retf   
  404541:	cmc    
  404542:	pop    ss
  404543:	mov    ch,ah
  404545:	fst    DWORD PTR [esi+0x50]
  404548:	cwde   
  404549:	pop    ebp
  40454a:	or     DWORD PTR [esi-0x1],ecx
  40454d:	xor    BYTE PTR [edi-0x24],bh
  404550:	adc    bl,bl
  404552:	fisubr DWORD PTR [ebx]
  404554:	cwde   
  404555:	dec    esi
  404556:	sti    
  404557:	cmp    al,0xa4
  404559:	(bad)  
  40455a:	pushf  
  40455b:	pushf  
  40455c:	cmp    al,0x25
  40455e:	sti    
  40455f:	arpl   WORD PTR [esi+0x6f],ax
  404562:	repnz loop 0x4045b9
  404565:	sub    DWORD PTR ds:0x805d27e0,0x27eb72e3
  40456f:	inc    esi
  404570:	test   BYTE PTR [edi+0x3acb6320],0x8b
  404577:	push   edx
  404578:	outs   dx,DWORD PTR ds:[esi]
  404579:	frstor [edi+0xd]
  40457c:	cwde   
  40457d:	cmp    edi,0xbb3f8dc4
  404583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404584:	jns    0x404571
  404586:	xchg   esp,eax
  404587:	adc    eax,0xa203a4d2
  40458c:	adc    BYTE PTR [edi],al
  40458e:	or     al,0xa0
  404590:	jg     0x40454e
  404592:	dec    esi
  404593:	xchg   DWORD PTR [ebp+eiz*4+0x144a9b36],esp
  40459a:	push   0x627eb9f4
  40459f:	add    eax,0x92e00c80
  4045a4:	mov    ds:0x219236ac,eax
  4045a9:	shl    BYTE PTR [edx+0x59],1
  4045ac:	pop    esp
  4045ad:	and    eax,0xce59f270
  4045b2:	iret   
  4045b3:	push   esp
  4045b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b5:	mov    edx,0x442b2eb7
  4045ba:	cmp    eax,0xffffffcf
  4045bd:	hlt    
  4045be:	and    dl,BYTE PTR ds:0x283c8d03
  4045c4:	and    cl,cl
  4045c6:	adc    BYTE PTR [edx+0x13],bh
  4045c9:	(bad)  
  4045ca:	bnd jae 0x4045bc
  4045cd:	repnz sbb DWORD PTR [ebx],0xffffff90
  4045d1:	xchg   ebx,eax
  4045d2:	dec    ebx
  4045d3:	dec    esi
  4045d4:	or     ch,BYTE PTR [esi]
  4045d6:	out    0x5d,al
  4045d8:	cmp    DWORD PTR [eax+0x34],esp
  4045db:	mov    bh,ah
  4045dd:	sbb    eax,0x90f152e7
  4045e2:	mov    bl,0x51
  4045e4:	repnz fmul QWORD PTR ss:[edx+0x175d25d9]
  4045ec:	push   eax
  4045ed:	outs   dx,DWORD PTR ds:[esi]
  4045ee:	sar    DWORD PTR [edx],1
  4045f0:	fnstcw WORD PTR [ebp-0x10dac36b]
  4045f6:	xchg   ecx,eax
  4045f7:	jnp    0x4045eb
  4045f9:	rol    DWORD PTR [edi+0x5aa5ab02],1
  4045ff:	stc    
  404600:	cmpxchg edi,esi
  404603:	test   DWORD PTR [edx-0x686e0969],esp
  404609:	(bad)  
  40460a:	rol    dh,1
  40460c:	js     0x4045b0
  40460e:	and    edx,edx
  404610:	stos   DWORD PTR es:[edi],eax
  404611:	idiv   BYTE PTR [ebp+0x1b6be9ee]
  404617:	xor    dh,BYTE PTR [ebx+0x2c1a6b1f]
  40461d:	or     BYTE PTR [edx+0x56b1df38],ch
  404623:	cmp    DWORD PTR [ecx],0x31
  404626:	inc    ebp
  404627:	inc    ebx
  404628:	pop    ebp
  404629:	xor    BYTE PTR [ebp-0x1595ea9c],dl
  40462f:	into   
  404630:	mov    bl,0xd7
  404632:	add    BYTE PTR [ebp-0x4b1cd8d6],al
  404638:	dec    edx
  404639:	xchg   ebp,eax
  40463a:	adc    eax,0x2f1c6642
  40463f:	nop
  404640:	cdq    
  404641:	push   ecx
  404642:	and    DWORD PTR [edx-0x634200e0],eax
  404648:	lea    eax,ds:0x784e3628
  40464e:	mov    ebp,0xed04a715
  404653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404654:	mov    esi,DWORD PTR [edi]
  404656:	push   ds
  404657:	xor    al,0x81
  404659:	ret    
  40465a:	xchg   ebx,eax
  40465b:	jo     0x4045ff
  40465d:	jl     0x4046d3
  40465f:	mov    ah,0xdd
  404661:	cmp    edx,DWORD PTR [edi+0x21]
  404664:	cmp    al,0x77
  404666:	sub    BYTE PTR [ebx+ebx*2-0x38eed2ca],ah
  40466d:	push   0xfffffff0
  40466f:	aad    0x9e
  404671:	out    0xb6,eax
  404673:	pusha  
  404674:	mov    cl,0x28
  404676:	xor    BYTE PTR [eax+0x655dedc0],dl
  40467c:	std    
  40467d:	inc    ecx
  40467e:	pop    eax
  40467f:	cs push esi
  404681:	ins    DWORD PTR es:[edi],dx
  404682:	dec    ebx
  404683:	in     eax,0x61
  404685:	or     al,0x17
  404687:	add    bh,BYTE PTR [ebp+edx*1-0x48f445b3]
  40468e:	out    dx,eax
  40468f:	push   edi
  404690:	(bad)  
  404691:	in     al,dx
  404692:	(bad)  
  404693:	pop    esp
  404694:	gs pop esi
  404696:	jnp    0x4046a2
  404698:	inc    esp
  404699:	sti    
  40469a:	jo     0x404650
  40469c:	and    al,0x3
  40469e:	push   ecx
  40469f:	and    DWORD PTR [ebp+0x58befd84],edi
  4046a5:	add    esp,DWORD PTR [edi+0x343b1db7]
  4046ab:	hlt    
  4046ac:	or     ch,BYTE PTR [eax+ebp*2]
  4046af:	sbb    ebp,DWORD PTR [ebp+eax*1-0x61]
  4046b3:	pop    ds
  4046b4:	jns    0x4046fd
  4046b6:	xor    al,0x68
  4046b8:	mov    DWORD PTR [ebx-0x43],esi
  4046bb:	add    bl,cl
  4046bd:	mov    al,0xcd
  4046bf:	jmp    0xe158:0x6199e256
  4046c6:	add    ch,BYTE PTR [ecx]
  4046c8:	test   BYTE PTR [edi+edi*8],dh
  4046cb:	add    al,0x2e
  4046cd:	adc    al,dh
  4046cf:	adc    edx,DWORD PTR [edi+esi*4]
  4046d2:	scas   eax,DWORD PTR es:[edi]
  4046d3:	sub    ebx,DWORD PTR [edi+0x667e47c0]
  4046d9:	pusha  
  4046da:	bnd jp 0x40471f
  4046dd:	sahf   
  4046de:	adc    al,0xe2
  4046e0:	ins    DWORD PTR es:[edi],dx
  4046e1:	ret    
  4046e2:	ret    0xe6ff
  4046e5:	cs push es
  4046e7:	push   edi
  4046e8:	fucomp st(4)
  4046ea:	arpl   si,si
  4046ec:	stos   DWORD PTR es:[edi],eax
  4046ed:	into   
  4046ee:	test   al,0x7b
  4046f0:	add    DWORD PTR [eax],ebx
  4046f2:	jp     0x4046e4
  4046f4:	xchg   esi,eax
  4046f5:	mov    ecx,0xc38dba6f
  4046fa:	adc    ebp,edx
  4046fc:	cmp    cl,BYTE PTR [ecx+eiz*8+0x20]
  404700:	xchg   edx,eax
  404701:	inc    DWORD PTR [esi+0x64325268]
  404707:	jne    0x4046ed
  404709:	push   ebx
  40470a:	(bad)  
  40470b:	mov    DWORD PTR [esi],edx
  40470d:	jbe    0x404716
  40470f:	jno    0x4046af
  404711:	je     0x404773
  404713:	and    ch,0x65
  404716:	retf   0x962b
  404719:	add    BYTE PTR [ebx],dh
  40471b:	jmp    0x336714af
  404720:	jp     0x40473d
  404722:	push   edi
  404723:	sub    BYTE PTR ds:0xa6a953df,bl
  404729:	cmp    al,0x75
  40472b:	mov    ch,0xac
  40472d:	dec    esi
  40472e:	cld    
  40472f:	adc    DWORD PTR [ebp+0x1a67ba63],edx
  404735:	inc    edx
  404736:	jae    0x4046f2
  404738:	inc    esp
  404739:	aad    0x4d
  40473b:	add    eax,0x6ef903ae
  404740:	dec    edi
  404741:	fcom   DWORD PTR [edi-0x39]
  404744:	dec    esp
  404745:	sub    BYTE PTR [edx+ebx*8],0x16
  404749:	mov    BYTE PTR [ecx-0x21],cl
  40474c:	cld    
  40474d:	lock clc 
  40474f:	pop    ebp
  404750:	or     DWORD PTR [eax+0x63],0x7594ce84
  404757:	ins    BYTE PTR es:[edi],dx
  404758:	sahf   
  404759:	call   0x81a5:0xe8c600f5
  404760:	inc    esp
  404761:	jo     0x4046ec
  404763:	sub    esi,edx
  404765:	and    DWORD PTR [edi+0x73ce2789],ebp
  40476b:	xlat   BYTE PTR ds:[ebx]
  40476c:	xchg   BYTE PTR [edi-0x637df432],dl
  404772:	int3   
  404773:	test   DWORD PTR [ebp+edx*1+0x7d0c7f0c],edi
  40477a:	xchg   edi,eax
  40477b:	jno    0x40473a
  40477d:	add    DWORD PTR ds:0xc2ceb591,esi
  404783:	or     al,0x51
  404785:	gs xchg esp,eax
  404787:	push   esi
  404788:	push   0x35
  40478a:	sbb    edi,edi
  40478c:	lea    ebp,[edi]
  40478e:	inc    BYTE PTR [edx]
  404790:	mov    eax,ds:0xf56f7b1a
  404795:	add    eax,0x767d4079
  40479a:	xor    BYTE PTR [eax+ebx*4-0x196b88af],0x98
  4047a2:	hlt    
  4047a3:	push   edi
  4047a4:	ins    DWORD PTR es:[edi],dx
  4047a5:	mov    ecx,0x159a0cf1
  4047aa:	mov    WORD PTR [eax-0x77],ss
  4047ad:	xchg   edi,eax
  4047ae:	scas   eax,DWORD PTR es:[edi]
  4047af:	push   0xbf7d9463
  4047b4:	mov    bh,0x7f
  4047b6:	arpl   WORD PTR [esi+0x70],si
  4047b9:	xlat   BYTE PTR ds:[ebx]
  4047ba:	test   DWORD PTR [ecx],0x3b116573
  4047c0:	mov    dh,BYTE PTR [ebp+0x106f0ced]
  4047c6:	push   edx
  4047c7:	popa   
  4047c8:	add    DWORD PTR [ebp+0x7689d31e],edi
  4047ce:	ins    BYTE PTR es:[edi],dx
  4047cf:	or     dh,bl
  4047d1:	dec    edi
  4047d2:	inc    ecx
  4047d3:	jle    0x4047ae
  4047d5:	adc    esp,DWORD PTR [edx-0x558a930e]
  4047db:	pushf  
  4047dc:	aad    0xcd
  4047de:	sub    BYTE PTR [esi],ah
  4047e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e1:	adc    bh,dh
  4047e3:	dec    BYTE PTR [ebp-0x4414b244]
  4047e9:	pop    edx
  4047ea:	sub    esi,DWORD PTR es:[ecx]
  4047ed:	lock xor ebx,DWORD PTR [ebx+esi*8+0x5ded0101]
  4047f5:	cmp    DWORD PTR [edx-0x62],esp
  4047f8:	inc    edx
  4047f9:	jl     0x4047c8
  4047fb:	adc    DWORD PTR [ebx],ebx
  4047fd:	(bad)  
  4047fe:	adc    DWORD PTR [ecx-0x55],ebx
  404801:	xchg   edi,eax
  404802:	pop    bp
  404804:	jns    0x40482b
  404806:	js     0x4047a5
  404808:	and    DWORD PTR [ebx+0x25],esi
  40480b:	pop    esp
  40480c:	adc    al,dh
  40480e:	iret   
  40480f:	jbe    0x404858
  404811:	js     0x4047f3
  404813:	adc    eax,0x66b196f
  404818:	push   cs
  404819:	ins    DWORD PTR es:[edi],dx
  40481a:	leave  
  40481b:	inc    esi
  40481c:	dec    ebp
  40481d:	inc    edi
  40481e:	sahf   
  40481f:	lods   eax,DWORD PTR ds:[esi]
  404820:	mov    WORD PTR [eax+edi*1],gs
  404823:	je     0x404819
  404825:	mov    ebx,0x9d72b360
  40482a:	fsub   DWORD PTR [esi+eiz*4]
  40482d:	rcl    edi,cl
  40482f:	pop    edi
  404830:	mov    ds:0x85ec71ea,al
  404835:	ja     0x404832
  404837:	xor    eax,0xd405dbd6
  40483c:	sbb    bl,BYTE PTR [esp+esi*8+0x32]
  404840:	dec    esp
  404841:	pop    edx
  404842:	mov    bh,0xfb
  404844:	or     eax,0xb9a38bda
  404849:	push   ebp
  40484a:	outs   dx,DWORD PTR ds:[esi]
  40484b:	pop    ebx
  40484c:	xor    edx,edi
  40484e:	popa   
  40484f:	push   ecx
  404850:	sbb    cl,ch
  404852:	inc    ecx
  404853:	(bad)  
  404854:	xor    DWORD PTR [edx+0x65],esp
  404857:	push   0xfffffff0
  404859:	add    al,0xd8
  40485b:	enter  0x3ce9,0x60
  40485f:	mov    edx,0xb589fe85
  404864:	aaa    
  404865:	cwde   
  404866:	add    BYTE PTR [eax],0xd
  404869:	sahf   
  40486a:	cmp    eax,0x10
  40486d:	or     ebp,DWORD PTR [esi+0x5c6a655]
  404873:	cld    
  404874:	jbe    0x40484e
  404876:	mov    bp,dx
  404879:	xor    DWORD PTR [edx-0x12067ef],ecx
  40487f:	and    eax,0xea90aea9
  404884:	add    ebx,DWORD PTR [eax-0x77f7427f]
  40488a:	inc    esi
  40488b:	mov    eax,0xd76a9cbb
  404890:	xor    al,0x10
  404892:	sti    
  404893:	dec    esp
  404894:	jg     0x4048f1
  404896:	or     DWORD PTR [ecx+0x3a96b516],ebx
  40489c:	xor    BYTE PTR [eax],cl
  40489e:	icebp  
  40489f:	gs adc al,0x60
  4048a2:	jp     0x4048e6
  4048a4:	push   ecx
  4048a5:	mov    edi,0xe825d59e
  4048aa:	fld    DWORD PTR [eax+0x20fecb17]
  4048b0:	jbe    0x4048c6
  4048b2:	repnz pop esi
  4048b4:	leave  
  4048b5:	inc    edi
  4048b6:	data16 mov bl,BYTE PTR [ecx+0xb]
  4048ba:	jg     0x4048ea
  4048bc:	mov    dh,0xb6
  4048be:	cmp    al,0xab
  4048c0:	mov    cs,WORD PTR [ebx-0x13]
  4048c3:	and    eax,0x16410459
  4048c8:	xchg   BYTE PTR ds:0xa7dc7f5c,al
  4048ce:	out    0xfd,al
  4048d0:	ins    DWORD PTR es:[edi],dx
  4048d1:	je     0x404864
  4048d3:	cli    
  4048d4:	mov    eax,0x95e6cd82
  4048d9:	adc    esp,edi
  4048db:	lods   eax,DWORD PTR ds:[esi]
  4048dc:	sub    edi,DWORD PTR [edx+edx*2-0x22e34bba]
  4048e3:	mov    DWORD PTR [esi-0x6f109b7d],esi
  4048e9:	jb     0x40492b
  4048eb:	jmp    0x4048fb
  4048ed:	cdq    
  4048ee:	shl    bh,0x6c
  4048f1:	outs   dx,BYTE PTR ds:[esi]
  4048f2:	sar    esp,0x97
  4048f5:	shl    ebp,0x72
  4048f8:	not    DWORD PTR ds:0x30f4c5b8
  4048fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ff:	push   edi
  404900:	ja     0x4048c5
  404902:	not    ch
  404904:	loopne 0x4048d4
  404906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404907:	outs   dx,BYTE PTR ds:[esi]
  404908:	pop    ss
  404909:	ror    BYTE PTR [esi+0x18],1
  40490c:	jmp    0x40496c
  40490e:	loope  0x40490e
  404910:	shl    BYTE PTR [edx],cl
  404912:	jg     0x4048f7
  404914:	in     al,0x9c
  404916:	adc    ah,BYTE PTR [ebp+esi*1+0xa]
  40491a:	dec    ebx
  40491b:	mov    edi,0x5c9d4332
  404920:	push   esi
  404921:	cmc    
  404922:	dec    esi
  404923:	mov    bl,0xf9
  404925:	outs   dx,BYTE PTR ds:[esi]
  404926:	sub    ecx,DWORD PTR [esi+0x70993d8d]
  40492c:	and    al,0xa1
  40492e:	(bad)  
  40492f:	push   esi
  404930:	ja     0x40491e
  404932:	pusha  
  404933:	cli    
  404934:	xor    DWORD PTR [edi+esi*8],edx
  404937:	lahf   
  404938:	stc    
  404939:	test   DWORD PTR [ebx+0x1d],0xdc19b540
  404940:	into   
  404941:	fdiv   QWORD PTR [ecx-0xc]
  404944:	dec    BYTE PTR [edi]
  404946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404947:	lahf   
  404948:	and    DWORD PTR [ecx-0x7a],ecx
  40494b:	or     eax,0x5169afac
  404950:	outs   dx,DWORD PTR ds:[esi]
  404951:	cmp    DWORD PTR [edi+0x2d68a058],ebp
  404957:	add    eax,0xd1fd19ef
  40495c:	enter  0x8d9e,0x1a
  404960:	and    al,0x98
  404962:	sub    al,BYTE PTR [edi+0x46]
  404965:	(bad)  
  404966:	int    0x26
  404968:	jnp    0x40496b
  40496a:	pop    es
  40496b:	out    0x8c,eax
  40496d:	std    
  40496e:	push   0xffffffec
  404970:	mov    eax,0xde51a347
  404975:	mov    dl,0xcc
  404977:	repnz sbb al,0xe3
  40497a:	sub    bl,bh
  40497c:	sub    al,bh
  40497e:	out    0x70,al
  404980:	outs   dx,BYTE PTR ds:[esi]
  404981:	sbb    eax,0xb42eecad
  404986:	push   eax
  404987:	inc    ebx
  404988:	adc    dl,ch
  40498a:	push   ss
  40498b:	cli    
  40498c:	sahf   
  40498d:	out    dx,al
  40498e:	pop    eax
  40498f:	xchg   BYTE PTR [edx+0x17],ah
  404992:	or     DWORD PTR [ebp-0x6a1a928f],0xffffffa6
  404999:	mov    ebp,esp
  40499b:	mov    ds:0xad1b316d,al
  4049a0:	dec    ecx
  4049a1:	cwde   
  4049a2:	cmp    eax,0x5e29e369
  4049a7:	scas   eax,DWORD PTR es:[edi]
  4049a8:	sbb    DWORD PTR ds:0xa05e6433,ebp
  4049ae:	jmp    FWORD PTR [edi+edi*4-0x60]
  4049b2:	fldl2t 
  4049b4:	mov    ebx,0xb779c252
  4049b9:	cmp    ebx,DWORD PTR [ebx]
  4049bb:	mov    edi,DWORD PTR [ebp-0x374bfb9f]
  4049c1:	hlt    
  4049c2:	add    ebx,ecx
  4049c4:	popa   
  4049c5:	fs out 0x85,eax
  4049c8:	jae    0x4049ca
  4049ca:	(bad)  
  4049cb:	sbb    BYTE PTR [edi],dl
  4049cd:	add    eax,0xcf28075a
  4049d2:	addr16 push ebp
  4049d4:	in     eax,dx
  4049d5:	out    0x19,eax
  4049d7:	gs mov ebx,0xfab64d56
  4049dd:	sbb    ch,BYTE PTR [eax-0x6c]
  4049e0:	mov    DWORD PTR [edx+0x296dfa7d],ebx
  4049e6:	push   0xffffffbf
  4049e8:	pop    ebx
  4049e9:	push   ecx
  4049ea:	test   DWORD PTR [ebx],eax
  4049ec:	adc    eax,0xe5fe3e4f
  4049f1:	xchg   ebx,eax
  4049f2:	fs dec esi
  4049f4:	jne    0x404a41
  4049f6:	mov    al,0x81
  4049f8:	or     BYTE PTR [eax-0x58],dh
  4049fb:	(bad)  
  4049fc:	(bad)  
  4049fd:	push   edx
  4049fe:	pop    ebx
  4049ff:	fwait
  404a00:	icebp  
  404a01:	mov    dh,0x82
  404a03:	aas    
  404a04:	test   BYTE PTR [ebx],0x28
  404a07:	out    0xa0,eax
  404a09:	push   ecx
  404a0a:	sbb    al,0xa
  404a0c:	push   edi
  404a0d:	adc    cl,cl
  404a0f:	jne    0x404a0e
  404a11:	repnz int3 
  404a13:	xchg   esp,eax
  404a14:	int3   
  404a15:	(bad)  
  404a17:	sbb    BYTE PTR [edx+edx*1-0x36ecf176],ch
  404a1e:	jg     0x4049be
  404a20:	repnz sub eax,0xbd4af7f7
  404a26:	sub    DWORD PTR [esi-0x5f],0xf237e0a2
  404a2d:	mov    cl,0x2c
  404a2f:	or     esp,DWORD PTR [ebp-0x76]
  404a32:	jae    0x4049ea
  404a34:	mov    cl,0x19
  404a36:	popa   
  404a37:	xchg   DWORD PTR [eax],esp
  404a39:	clc    
  404a3a:	imul   ecx,DWORD PTR [edx],0x64
  404a3d:	inc    edi
  404a3e:	enter  0x641b,0x2a
  404a42:	mov    ds:0xdbe0203d,al
  404a47:	mov    dl,0x39
  404a49:	xor    al,0x8e
  404a4b:	fiadd  WORD PTR [ebp-0x5f]
  404a4e:	sbb    ecx,edi
  404a50:	cld    
  404a51:	loope  0x404aa5
  404a53:	push   cx
  404a55:	sub    BYTE PTR [eax],dh
  404a57:	pop    es
  404a58:	push   ebp
  404a59:	ret    0xf24c
  404a5c:	push   eax
  404a5d:	jmp    0xc249:0x1e60c743
  404a64:	shr    BYTE PTR [edx-0x76],1
  404a67:	pushf  
  404a68:	nop
  404a69:	out    0x45,eax
  404a6b:	lock sub eax,0x6c30cfd5
  404a71:	aam    0x66
  404a73:	mov    BYTE PTR [ebp-0x370d42dc],al
  404a79:	sub    BYTE PTR [edi],al
  404a7b:	nop
  404a7c:	fsub   DWORD PTR [ebx-0x1e]
  404a7f:	xor    cl,ch
  404a81:	call   edi
  404a83:	nop
  404a84:	inc    esi
  404a85:	int    0x26
  404a87:	arpl   WORD PTR [ebx-0x4ef5634b],ax
  404a8d:	xchg   edi,ecx
  404a8f:	pop    esi
  404a90:	retf   
  404a91:	ins    BYTE PTR es:[edi],dx
  404a92:	adc    eax,0xf0de1d5d
  404a97:	xchg   ecx,eax
  404a98:	fldcw  WORD PTR [esi+0x27a7e885]
  404a9e:	inc    edi
  404a9f:	or     BYTE PTR [ecx+0x12],dh
  404aa2:	lods   al,BYTE PTR ds:[esi]
  404aa3:	pusha  
  404aa4:	mov    ds:0x61fcb8ed,eax
  404aa9:	hlt    
  404aaa:	rol    ah,1
  404aac:	mov    dl,0x6
  404aae:	xor    eax,0x10cdd86c
  404ab3:	std    
  404ab4:	imul   esi,DWORD PTR [ecx-0x45],0xffffffd4
  404ab8:	out    0xae,eax
  404aba:	xchg   edx,eax
  404abb:	push   ss
  404abc:	mov    esp,0x4ed9bb24
  404ac1:	outs   dx,BYTE PTR ds:[esi]
  404ac2:	fs test esi,ecx
  404ac5:	fsubr  st(3),st
  404ac7:	js     0x404b2d
  404ac9:	push   ecx
  404aca:	inc    esi
  404acb:	cmp    eax,0x8fb0cacf
  404ad0:	test   eax,0x6f11f252
  404ad5:	(bad)  
  404ad7:	mov    ch,0xb1
  404ad9:	mov    dh,0x57
  404adb:	pop    esi
  404adc:	dec    ecx
  404add:	aaa    
  404ade:	cmp    ebx,DWORD PTR [edx+esi*8+0x52]
  404ae2:	popf   
  404ae3:	aad    0x2a
  404ae5:	stos   BYTE PTR es:[edi],al
  404ae6:	push   es
  404ae7:	cmc    
  404ae8:	mov    eax,0xd1115821
  404aed:	xchg   ebp,eax
  404aee:	loop   0x404a91
  404af0:	and    DWORD PTR [eax],esp
  404af2:	pushf  
  404af3:	(bad)  
  404af4:	fsub   st(5),st
  404af6:	pop    ss
  404af7:	jl     0x404b74
  404af9:	mov    bl,0xfc
  404afb:	cdq    
  404afc:	jnp    0x404a82
  404afe:	pop    eax
  404aff:	stos   DWORD PTR es:[edi],eax
  404b00:	push   ss
  404b01:	ret    
  404b02:	(bad)  [edx-0x6c]
  404b05:	sbb    BYTE PTR [edi],bl
  404b07:	mov    ah,0xce
  404b09:	stc    
  404b0a:	add    eax,0x9a827b3e
  404b0f:	mov    dl,0x72
  404b11:	imul   edx,DWORD PTR [esp+edx*4],0xffffff80
  404b15:	push   ecx
  404b16:	xor    BYTE PTR [edx+edi*1-0x4c],cl
  404b1a:	pusha  
  404b1b:	hlt    
  404b1c:	add    ebp,DWORD PTR [eax]
  404b1e:	mov    ds:0xee451545,eax
  404b23:	mov    esi,0xa56eb3e3
  404b28:	mov    ecx,DWORD PTR ds:0xd960f3a6
  404b2e:	das    
  404b2f:	mov    ah,0xea
  404b31:	ja     0x404b4b
  404b33:	add    edx,DWORD PTR [ebp+0x739919d0]
  404b39:	mov    ah,0x94
  404b3b:	adc    al,0x38
  404b3d:	data16 and dl,dl
  404b40:	jl     0x404b0b
  404b42:	aad    0x40
  404b44:	or     DWORD PTR [esi-0x58],eax
  404b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b48:	out    0x29,eax
  404b4a:	inc    ecx
  404b4b:	push   edi
  404b4c:	or     ebx,DWORD PTR [ebx+0x2870760]
  404b52:	push   edx
  404b53:	sbb    BYTE PTR [edx-0x683b3eca],dh
  404b59:	icebp  
  404b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5b:	xchg   esp,eax
  404b5c:	push   es
  404b5d:	sub    dl,BYTE PTR [ebx-0x7]
  404b60:	mov    ah,0x99
  404b62:	add    DWORD PTR [ebx+0x3b089c55],edx
  404b68:	(bad)  
  404b69:	rol    DWORD PTR [ebx+esi*8],cl
  404b6c:	test   DWORD PTR [edx+0x7a],esp
  404b6f:	lods   eax,DWORD PTR ds:[esi]
  404b70:	sub    esi,DWORD PTR [edi]
  404b72:	popf   
  404b73:	ss push es
  404b75:	pop    edx
  404b76:	xor    DWORD PTR [edx+0x185ef6c6],0x599fb86b
  404b80:	ror    al,0xd3
  404b83:	jg     0x404b8e
  404b85:	cwde   
  404b86:	fcom   st(7)
  404b88:	push   0x7b
  404b8a:	fisttp WORD PTR [ebx+0x55ba5082]
  404b90:	dec    edx
  404b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b92:	out    0x6d,eax
  404b94:	repz cmp al,BYTE PTR [ecx-0x4e6a4b8a]
  404b9b:	arpl   WORD PTR [esi+ebx*2],bp
  404b9e:	and    DWORD PTR [ebx-0x25],0xbbfa7d26
  404ba5:	mov    ds:0x15cb843a,al
  404baa:	into   
  404bab:	sub    eax,0xdee9c9d2
  404bb0:	inc    ebp
  404bb1:	mov    BYTE PTR [edx],al
  404bb3:	fisttp QWORD PTR [edx-0x5380fc19]
  404bb9:	je     0x404b9e
  404bbb:	mov    bl,0xca
  404bbd:	ret    
  404bbe:	jbe    0x404bba
  404bc0:	nop
  404bc1:	loope  0x404b59
  404bc3:	les    eax,FWORD PTR [esi+ebp*4-0x42]
  404bc7:	push   ds
  404bc8:	xchg   ebp,eax
  404bc9:	fwait
  404bca:	nop
  404bcb:	lods   al,BYTE PTR ds:[esi]
  404bcc:	outs   dx,DWORD PTR ds:[esi]
  404bcd:	mov    bl,0x4e
  404bcf:	push   esp
  404bd0:	lahf   
  404bd1:	sbb    edx,DWORD PTR [ebp-0x54]
  404bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd5:	mov    al,0xbf
  404bd7:	cmp    eax,0x3683b689
  404bdc:	xchg   ecx,eax
  404bdd:	ss ss das 
  404be0:	pop    ds
  404be1:	mov    eax,0x5cde1ed2
  404be6:	rcr    DWORD PTR [ebx+0x35],0x7d
  404bea:	pop    esi
  404beb:	pop    ds
  404bec:	dec    ebp
  404bed:	mov    esp,0x1c524892
  404bf2:	xchg   ebx,eax
  404bf3:	pop    ecx
  404bf4:	pop    edi
  404bf5:	popf   
  404bf6:	in     al,dx
  404bf7:	mov    ch,0xc1
  404bf9:	leave  
  404bfa:	cmc    
  404bfb:	push   ebp
  404bfc:	pop    ss
  404bfd:	rcl    DWORD PTR [eax],1
  404bff:	leave  
  404c00:	mov    ch,0xf8
  404c02:	fwait
  404c03:	mov    esp,0x349829f5
  404c08:	(bad)  
  404c09:	push   edx
  404c0a:	jno    0x404ba8
  404c0c:	mul    BYTE PTR ds:0xe578ae4c
  404c12:	test   bl,al
  404c14:	xchg   edi,eax
  404c15:	cmp    eax,0x3310150e
  404c1a:	dec    edi
  404c1b:	(bad)  
  404c1c:	fld    st(7)
  404c1e:	scas   eax,DWORD PTR es:[edi]
  404c1f:	rol    DWORD PTR [edx-0x66],0x6a
  404c23:	repnz retfw 
  404c26:	call   DWORD PTR [eax]
  404c28:	add    DWORD PTR [esi+ebx*1+0x71cd7360],esp
  404c2f:	repz adc al,0x82
  404c32:	scas   eax,DWORD PTR es:[edi]
  404c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c34:	push   ebx
  404c35:	push   eax
  404c36:	(bad)  
  404c37:	jle    0x404bca
  404c39:	aam    0xcd
  404c3b:	and    dl,BYTE PTR [edi]
  404c3d:	adc    BYTE PTR [edi-0x538c9ab6],0x0
  404c44:	icebp  
  404c45:	popa   
  404c46:	push   es
  404c47:	out    dx,eax
  404c48:	xchg   esi,eax
  404c49:	and    eax,0x4e45ca4f
  404c4e:	inc    ebx
  404c4f:	mov    ecx,0x331d6a7a
  404c54:	mov    al,0x40
  404c56:	cmp    al,0xab
  404c58:	int    0x3e
  404c5a:	xchg   edx,eax
  404c5b:	add    BYTE PTR [edi+0x59f75a30],ah
  404c61:	jge    0x404c97
  404c63:	imul   esi,DWORD PTR [edx-0x7f],0x1c
  404c67:	(bad)  
  404c68:	retf   0xc3ef
  404c6b:	sub    DWORD PTR [ecx-0x51],edi
  404c6e:	scas   al,BYTE PTR es:[edi]
  404c6f:	cmc    
  404c70:	mov    dl,0x43
  404c72:	mov    al,0xd4
  404c74:	in     al,0xc9
  404c76:	xchg   ebx,eax
  404c77:	dec    edx
  404c78:	inc    edx
  404c79:	mov    bl,0x87
  404c7b:	es mov edi,0xbdb22e20
  404c81:	mov    ?,WORD PTR [edi+0x22]
  404c84:	adc    DWORD PTR [ecx+0x5b],ecx
  404c87:	dec    ecx
  404c88:	xor    eax,0xa182e1c
  404c8d:	jae    0x404cb0
  404c8f:	pop    ecx
  404c90:	mov    dh,0xff
  404c92:	xor    ebp,DWORD PTR ds:0x7e3d77bb
  404c98:	jae    0x404cb7
  404c9a:	inc    esi
  404c9b:	jl     0x404cd2
  404c9d:	retf   
  404c9e:	jp     0x404cbb
  404ca0:	imul   ecx,DWORD PTR [ecx],0x2c
  404ca3:	nop
  404ca4:	push   edi
  404ca5:	les    ebx,FWORD PTR [esi+0x74dbc9f9]
  404cab:	lock pop es
  404cad:	sbb    eax,0xf4a0d706
  404cb2:	test   BYTE PTR [edx+ecx*8+0x2ac472ad],dl
  404cb9:	sub    bh,BYTE PTR [esi]
  404cbb:	mov    cl,0xdf
  404cbd:	cmp    DWORD PTR [edx+eax*1],0xffffffae
  404cc1:	sub    eax,0xd975f628
  404cc6:	les    edi,FWORD PTR ds:0x60f65d5f
  404ccc:	mov    BYTE PTR [ebp+0x15e1cce6],ch
  404cd2:	jno    0x404d42
  404cd4:	imul   ebx,DWORD PTR [ebp-0x13ae2097],0xffffffee
  404cdb:	jb     0x404c90
  404cdd:	xchg   ebp,eax
  404cde:	int3   
  404cdf:	jge    0x404ce6
  404ce1:	pop    ebx
  404ce2:	push   ds
  404ce3:	(bad)  
  404ce4:	and    ecx,DWORD PTR ds:0x985c334b
  404cea:	ret    
  404ceb:	jbe    0x404c9e
  404ced:	daa    
  404cee:	lods   al,BYTE PTR ds:[esi]
  404cef:	pop    DWORD PTR [ebx+ebp*2-0x1159bf71]
  404cf6:	inc    eax
  404cf7:	int3   
  404cf8:	imul   ecx,esi,0x20
  404cfb:	xchg   ebp,eax
  404cfc:	add    eax,0x7f1a933d
  404d01:	(bad)  
  404d03:	pusha  
  404d04:	mov    WORD PTR [ecx],ds
  404d06:	int3   
  404d07:	sbb    DWORD PTR ds:0x71f8d2d5,ecx
  404d0d:	xor    BYTE PTR [eax-0x67],0x49
  404d11:	jb     0x404d3d
  404d13:	cwde   
  404d14:	cdq    
  404d15:	mov    ah,0x74
  404d17:	jmp    DWORD PTR ds:0x423f4ae4
  404d1d:	jno    0x404cba
  404d1f:	pop    edi
  404d20:	pop    edx
  404d21:	in     eax,dx
  404d22:	add    dl,ah
  404d24:	nop
  404d25:	adc    eax,ebx
  404d27:	or     dh,BYTE PTR [ecx-0x73]
  404d2a:	add    eax,0x107c5274
  404d2f:	inc    edi
  404d30:	xchg   DWORD PTR [edx],ebp
  404d32:	adc    dh,dh
  404d34:	cmp    eax,0x40470574
  404d39:	and    eax,0x5d1e1a91
  404d3e:	gs or  bh,bl
  404d41:	and    eax,0x381c3204
  404d46:	pop    edx
  404d47:	jecxz  0x404dc5
  404d49:	adc    bl,bh
  404d4b:	sub    al,0x44
  404d4d:	push   esi
  404d4e:	mov    bl,0x56
  404d50:	push   ecx
  404d51:	sbb    al,ah
  404d53:	nop
  404d54:	jmp    0xd8b7:0x4ff4e40e
  404d5b:	mov    ch,0xf5
  404d5d:	cmp    al,0xf2
  404d5f:	ds sbb dh,cl
  404d62:	ja     0x404cf5
  404d64:	xchg   ebx,eax
  404d65:	test   eax,0xac2e0d1e
  404d6a:	jae    0x404db4
  404d6c:	das    
  404d6d:	cmp    eax,0x329b1c5
  404d72:	push   esi
  404d73:	adc    BYTE PTR [ebx],0x43
  404d76:	xchg   ebx,eax
  404d77:	cmp    al,0xba
  404d7a:	data16 loop 0x404d04
  404d7d:	xor    al,0x72
  404d7f:	leave  
  404d80:	push   es
  404d81:	push   esp
  404d82:	out    0xa2,al
  404d84:	ret    0xe9c8
  404d87:	push   0x274f32b7
  404d8c:	jnp    0x404df0
  404d8e:	ficomp DWORD PTR [edx+0x3f0e59ac]
  404d94:	out    dx,al
  404d95:	in     al,dx
  404d96:	gs das 
  404d98:	daa    
  404d99:	add    BYTE PTR [ecx],dh
  404d9b:	clc    
  404d9c:	fucomip st,st(7)
  404d9e:	xor    BYTE PTR [edx],0x11
  404da1:	or     BYTE PTR ds:[esi],cl
  404da4:	sbb    BYTE PTR [esi+0x7a],ah
  404da7:	mov    ah,0xfa
  404da9:	repnz mov ds:0x54340fd3,al
  404daf:	add    BYTE PTR [ebx-0x5730510c],dh
  404db5:	inc    ebx
  404db6:	loopne 0x404d62
  404db8:	jne    0x404d43
  404dba:	jg     0x404e2f
  404dbc:	push   cs
  404dbd:	dec    ebx
  404dbe:	sti    
  404dbf:	rol    BYTE PTR [ebx+ebp*2+0x6a12706a],0x27
  404dc7:	fidivr DWORD PTR [ebp+0x5]
  404dca:	inc    ebp
  404dcb:	jno    0x404db5
  404dcd:	out    0x5f,al
  404dcf:	jne    0x404d73
  404dd1:	aam    0x43
  404dd3:	inc    eax
  404dd4:	repz jo 0x404e36
  404dd7:	mov    dh,0xc2
  404dd9:	pop    ecx
  404dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ddb:	inc    esi
  404ddc:	push   edx
  404ddd:	inc    ecx
  404dde:	sub    ah,dh
  404de0:	pop    esp
  404de1:	loope  0x404e59
  404de3:	jmp    0x1a8f:0x450b1994
  404dea:	mov    bl,0x43
  404dec:	mov    ch,0xec
  404dee:	mov    eax,0x1fcaff7a
  404df3:	xor    BYTE PTR [esi+ebp*2+0x7f],ah
  404df7:	lahf   
  404df8:	adc    al,0xf9
  404dfa:	and    eax,DWORD PTR [ecx-0x28fe96a5]
  404e00:	sbb    DWORD PTR ds:0x6a6f1fcc,esi
  404e06:	fsub   QWORD PTR [esi+0x39365536]
  404e0c:	ds int 0x85
  404e0f:	jno    0x404dd6
  404e11:	mov    ds:0x8f2a2152,al
  404e16:	push   esp
  404e17:	and    BYTE PTR [edi],bl
  404e19:	mov    ch,0xb8
  404e1b:	int3   
  404e1c:	or     al,0xcb
  404e1e:	or     ah,BYTE PTR [esi]
  404e20:	sahf   
  404e21:	mov    BYTE PTR [esp+ebp*4+0x2cfbde72],al
  404e28:	mov    esp,0x8cbf1a56
  404e2d:	mov    esi,0x8e452745
  404e32:	nop
  404e33:	aad    0x66
  404e35:	inc    ecx
  404e36:	lahf   
  404e37:	fistp  QWORD PTR [ebp+edx*2+0xac59e97]
  404e3e:	sub    BYTE PTR [esi+eiz*2],dh
  404e41:	daa    
  404e42:	das    
  404e43:	sti    
  404e44:	outs   dx,BYTE PTR ds:[esi]
  404e45:	(bad)  
  404e46:	iret   
  404e47:	pop    esp
  404e48:	je     0x404e7e
  404e4a:	pop    edi
  404e4b:	mov    dh,0x8f
  404e4d:	stos   BYTE PTR es:[edi],al
  404e4e:	add    ch,0xc4
  404e51:	push   edx
  404e52:	jnp    0x404e10
  404e54:	cmp    bh,BYTE PTR [ebp-0x4476b7c6]
  404e5a:	ins    DWORD PTR es:[edi],dx
  404e5b:	mov    ds:0x5c15e015,eax
  404e60:	cwde   
  404e61:	add    DWORD PTR [edx],edx
  404e63:	jb     0x404df9
  404e65:	adc    al,al
  404e67:	push   0x51
  404e69:	jl     0x404e8e
  404e6b:	jmp    0xa5ef:0x642df28
  404e72:	aam    0x3
  404e74:	jp     0x404df7
  404e76:	push   esi
  404e77:	fmul   DWORD PTR [eax+0x2879aa3a]
  404e7d:	dec    eax
  404e7e:	adc    al,0x3d
  404e80:	lock dec esp
  404e82:	jle    0x404e60
  404e84:	lock dec eax
  404e86:	inc    edi
  404e87:	shl    BYTE PTR [edx],cl
  404e89:	xor    cl,dl
  404e8b:	mov    esp,0xf418f7d4
  404e90:	imul   edx,DWORD PTR [eax+ebx*2+0x632d8997],0x6ec32763
  404e9b:	add    al,0x72
  404e9d:	in     eax,0x5b
  404e9f:	jecxz  0x404eb0
  404ea1:	arpl   WORD PTR [edi-0x56a8de6d],dx
  404ea7:	ins    BYTE PTR es:[edi],dx
  404ea8:	out    dx,eax
  404ea9:	es cld 
  404eab:	cdq    
  404eac:	sbb    ch,BYTE PTR [ecx-0x54]
  404eaf:	xor    bh,bh
  404eb1:	inc    ebp
  404eb2:	aaa    
  404eb3:	pop    edi
  404eb4:	shrd   DWORD PTR [edx],ecx,cl
  404eb7:	xor    DWORD PTR [edi-0x2a495f53],eax
  404ebd:	ficom  WORD PTR [esi+0x7689474e]
  404ec3:	ret    
  404ec4:	out    0x10,al
  404ec6:	out    0x2e,al
  404ec8:	cli    
  404ec9:	sub    BYTE PTR [esi],ah
  404ecb:	mov    bh,BYTE PTR [edx+edx*2+0x2b6144c]
  404ed2:	push   ss
  404ed3:	ins    BYTE PTR es:[edi],dx
  404ed4:	pop    ds
  404ed5:	ins    DWORD PTR es:[edi],dx
  404ed6:	inc    edx
  404ed7:	mov    eax,ds:0x6d765073
  404edc:	ins    BYTE PTR es:[edi],dx
  404edd:	mov    edx,0xcfcf122
  404ee2:	sub    BYTE PTR [esi-0x53b8c435],0x7a
  404ee9:	test   BYTE PTR [ebp-0x35fe19b1],cl
  404eef:	jb     0x404f31
  404ef1:	jle    0x404f05
  404ef3:	dec    ebx
  404ef4:	ret    
  404ef5:	(bad)  
  404ef6:	in     eax,0xbb
  404ef8:	(bad)  
  404ef9:	jb     0x404f3b
  404efb:	fisttp WORD PTR [edx-0x4c]
  404efe:	rol    dh,1
  404f00:	pop    ebp
  404f01:	ss mov ch,0xcc
  404f04:	test   dh,ch
  404f06:	imul   esi,DWORD PTR [edx],0xa61920e9
  404f0c:	outs   dx,BYTE PTR ds:[esi]
  404f0d:	aaa    
  404f0e:	push   ecx
  404f0f:	rcl    DWORD PTR [ecx-0x590d439d],cl
  404f15:	adc    eax,0xd7024e8b
  404f1a:	jno    0x404f17
  404f1c:	inc    edx
  404f1d:	jns    0x404ecc
  404f1f:	cld    
  404f20:	test   DWORD PTR [eax],0xa60d940b
  404f26:	sub    dh,BYTE PTR [edx]
  404f28:	clc    
  404f29:	jbe    0x404f00
  404f2b:	pop    edx
  404f2c:	jp     0x404ef5
  404f2e:	push   0x8bfc458b
  404f33:	jge    0x404f2d
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xd80af58a
  405700:	cld    
  405701:	(bad)  
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	pinsrw mm4,WORD PTR [edx+0x67528339],0xe9
  405712:	xchg   ebx,ebp
  405714:	lds    eax,FWORD PTR [eax+0x43]
  405717:	cmp    eax,0xa03edc57
  40571c:	mov    ch,0x7d
  40571e:	shr    DWORD PTR [ecx-0xe],0x25
  405722:	(bad)  
  405723:	sar    BYTE PTR [ebp-0x153b1ba5],1
  405729:	push   edi
  40572a:	dec    edi
  40572b:	dec    ebx
  40572c:	xor    ch,dl
  40572e:	jl     0x40577d
  405730:	xchg   ch,ch
  405732:	pushf  
  405733:	push   cs
  405734:	mov    edx,0xeae4642
  405739:	fist   WORD PTR [ebp+edx*8+0x7d]
  40573d:	adc    DWORD PTR [ebx],esp
  40573f:	mov    dh,0xa5
  405741:	xor    esi,0x39627cb6
  405747:	in     al,0x5
  405749:	scas   eax,DWORD PTR es:[edi]
  40574a:	adc    DWORD PTR ds:0xa1c553f,esi
  405750:	and    bl,BYTE PTR ds:0x121002b2
  405756:	lea    edx,[ebp+0x25]
  405759:	and    al,0xca
  40575b:	(bad)  
  40575c:	xchg   ebx,eax
  40575d:	dec    ebp
  40575e:	dec    edi
  40575f:	ins    BYTE PTR es:[edi],dx
  405760:	mov    ecx,0x7e8a2b0
  405765:	mov    al,BYTE PTR [edi+0x4e834715]
  40576b:	pushf  
  40576c:	dec    ebp
  40576d:	and    BYTE PTR [edi+0x2d],cl
  405770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405771:	(bad)  
  405772:	sbb    edx,edi
  405774:	cmc    
  405775:	mov    al,al
  405777:	(bad)
  40577b:	mov    eax,0x809c708c
  405780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405781:	outs   dx,DWORD PTR ds:[esi]
  405782:	mov    al,0xb1
  405784:	cmp    BYTE PTR [edi],cl
  405786:	je     0x405754
  405788:	jbe    0x40572f
  40578a:	mov    bh,0x65
  40578c:	pushf  
  40578d:	scas   eax,DWORD PTR es:[edi]
  40578e:	cmp    al,0x1f
  405790:	into   
  405791:	and    ebx,edx
  405793:	sbb    BYTE PTR [esi],al
  405795:	dec    eax
  405796:	mov    esp,0xf882b28d
  40579b:	sbb    DWORD PTR [esi+0x1e],ebp
  40579e:	stos   DWORD PTR es:[edi],eax
  40579f:	mov    eax,0x311e578a
  4057a4:	int    0x52
  4057a6:	mov    edi,0xe0314adc
  4057ab:	fidiv  DWORD PTR fs:[eax-0x7a]
  4057af:	shl    DWORD PTR [eax],cl
  4057b1:	mov    ah,0xfa
  4057b3:	push   esp
  4057b4:	scas   eax,DWORD PTR es:[edi]
  4057b5:	pop    eax
  4057b6:	sbb    esp,ecx
  4057b8:	inc    ecx
  4057b9:	cwde   
  4057ba:	pop    esp
  4057bb:	xchg   esp,eax
  4057bc:	mov    esp,DWORD PTR [edi]
  4057be:	jge    0x4057cf
  4057c0:	pushf  
  4057c1:	jg     0x405787
  4057c3:	xchg   BYTE PTR [esi],bl
  4057c5:	or     al,0x67
  4057c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c8:	ins    DWORD PTR es:[edi],dx
  4057c9:	push   0x4515f419
  4057ce:	mov    edx,0x5c90cf81
  4057d3:	sub    ch,bh
  4057d5:	rcl    BYTE PTR [edi+0xb520302],1
  4057db:	(bad)
  4057de:	in     al,0xb9
  4057e0:	push   esp
  4057e2:	fs mov ebp,0x379cd7b0
  4057e8:	mov    ebp,0xf05ffca4
  4057ed:	dec    eax
  4057ee:	popf   
  4057ef:	std    
  4057f0:	hlt    
  4057f1:	fbstp  TBYTE PTR [ebp-0x2c]
  4057f4:	sub    ecx,esp
  4057f6:	jns    0x40580c
  4057f8:	popa   
  4057f9:	sub    eax,0x74897a85
  4057fe:	lods   eax,DWORD PTR ds:[esi]
  4057ff:	mov    edi,0xbfb6bfe6
  405804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405805:	or     al,0x11
  405807:	inc    ecx
  405808:	mov    ecx,0x8f0ac07e
  40580d:	stos   DWORD PTR es:[edi],eax
  40580e:	and    bh,ah
  405810:	stos   BYTE PTR es:[edi],al
  405811:	dec    esi
  405812:	sub    al,BYTE PTR [eax-0x2d]
  405815:	es jmp 0xcc02d1be
  40581b:	aam    0xec
  40581d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40581e:	adc    edx,DWORD PTR [eax+ebx*2+0xfaba7d]
  405825:	mov    al,0x7d
  405827:	pop    eax
  405828:	jo     0x405801
  40582a:	cwde   
  40582b:	xor    BYTE PTR [ebx+0x21edabfd],cl
  405831:	cdq    
  405832:	cmp    bh,BYTE PTR [eax]
  405834:	jp     0x405825
  405836:	push   ecx
  405837:	jmp    0x8e0c48c2
  40583c:	inc    esi
  40583d:	add    DWORD PTR [esp+eiz*8-0x4e],esp
  405841:	pop    esp
  405842:	test   BYTE PTR [edx],dh
  405844:	enter  0x86e9,0xef
  405848:	lods   al,BYTE PTR ds:[esi]
  405849:	sbb    eax,0x790e2ba2
  40584e:	xchg   edi,eax
  40584f:	lahf   
  405850:	dec    esi
  405851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405852:	lock jne 0x405822
  405855:	aam    0xd2
  405857:	jns    0x40589b
  405859:	dec    edi
  40585a:	push   ss
  40585b:	mov    es,ebp
  40585d:	fiadd  DWORD PTR [ecx-0x79]
  405860:	mov    ah,0xff
  405862:	fwait
  405863:	mov    ah,0xdc
  405865:	mov    DWORD PTR [ecx+eiz*8],0xd795902d
  40586c:	inc    ebp
  40586d:	test   eax,0x3b3d624f
  405872:	push   eax
  405873:	mov    al,ds:0xc46eab27
  405878:	sbb    eax,0x5f1e72e
  40587d:	cmp    eax,0xd768ee03
  405882:	sub    DWORD PTR [edi+0x11704ba9],edx
  405888:	int    0x1f
  40588a:	std    
  40588b:	stos   DWORD PTR es:[edi],eax
  40588c:	clc    
  40588d:	push   esi
  40588e:	adc    esp,DWORD PTR [edi+edi*1]
  405891:	push   ebx
  405892:	inc    ecx
  405893:	(bad)  
  405894:	xor    al,0xf9
  405896:	sbb    eax,0x6cefceee
  40589b:	nop
  40589c:	inc    ebx
  40589d:	call   DWORD PTR [ebx+0x5f]
  4058a0:	sub    BYTE PTR [ecx+0x5f],dl
  4058a3:	stc    
  4058a4:	std    
  4058a5:	aam    0xfb
  4058a7:	pop    es
  4058a8:	les    ebx,FWORD PTR [eax+0x8b66b25]
  4058ae:	pop    ecx
  4058af:	jns    0x4058af
  4058b1:	cld    
  4058b2:	sub    ecx,esp
  4058b4:	jle    0x4058c3
  4058b6:	data16 jge 0x405844
  4058b9:	dec    ebp
  4058ba:	out    0x25,al
  4058bc:	cmp    eax,0x93d9cb95
  4058c1:	pop    ds
  4058c2:	ds or  BYTE PTR es:[edi+ecx*2-0x73ef7b7e],0xde
  4058cc:	pop    ss
  4058cd:	push   esi
  4058ce:	dec    edi
  4058cf:	and    al,BYTE PTR [ebp-0x35]
  4058d2:	aaa    
  4058d3:	jb     0x405875
  4058d5:	fisubr DWORD PTR [edi]
  4058d7:	lea    edx,[ebp-0x4e]
  4058da:	mov    esi,0xadd64718
  4058df:	fisub  DWORD PTR [edi+0x45]
  4058e2:	and    BYTE PTR [edi],dl
  4058e4:	div    BYTE PTR ds:0x30892472
  4058ea:	repz mov al,0x9f
  4058ed:	pop    ss
  4058ee:	dec    esi
  4058ef:	shl    DWORD PTR ds:0x8eb5b9a4,cl
  4058f5:	push   ebx
  4058f6:	inc    edx
  4058f7:	xor    bh,BYTE PTR [ebp-0x4ddcdcd4]
  4058fd:	imul   BYTE PTR [eax+0x21]
  405900:	pusha  
  405901:	mov    esi,0x6f915484
  405906:	fnstcw WORD PTR [edx]
  405908:	and    ebp,DWORD PTR [edi]
  40590a:	outs   dx,DWORD PTR ds:[esi]
  40590b:	stc    
  40590c:	jle    0x4058b2
  40590e:	xchg   ebx,eax
  40590f:	outs   dx,BYTE PTR ds:[esi]
  405910:	push   ebp
  405911:	in     al,dx
  405912:	mov    al,0xa8
  405914:	push   cs
  405915:	and    BYTE PTR [eax+0x41],dh
  405918:	hlt    
  405919:	dec    eax
  40591a:	shl    DWORD PTR ds:0x61d93de2,1
  405920:	les    eax,FWORD PTR [eax]
  405922:	jmp    0x40590a
  405924:	call   0xcc3:0x435e7d80
  40592b:	rcr    DWORD PTR ss:[eax+ecx*4],1
  40592f:	hlt    
  405930:	xlat   BYTE PTR ds:[ebx]
  405931:	stos   BYTE PTR es:[edi],al
  405932:	out    dx,al
  405933:	int3   
  405934:	mov    ebx,0x8aeb5170
  405939:	test   BYTE PTR [eax+ebx*4-0x55ff098e],dl
  405940:	mov    BYTE PTR [esi-0x346ef3bb],0x95
  405947:	push   ecx
  405948:	lods   eax,DWORD PTR ds:[esi]
  405949:	call   0x1e44:0x94ccbfe5
  405950:	shl    BYTE PTR [eax+0x16dba838],cl
  405956:	and    ch,BYTE PTR [edi+0x73]
  405959:	out    0x40,eax
  40595b:	(bad)  
  40595c:	pusha  
  40595d:	mov    dl,BYTE PTR [edx]
  40595f:	add    ah,al
  405961:	dec    ebp
  405962:	pop    esp
  405963:	pop    ecx
  405964:	push   esi
  405965:	stc    
  405966:	neg    DWORD PTR [edx]
  405968:	pop    esp
  405969:	xor    BYTE PTR [esi-0x76969d7c],0x3d
  405970:	and    ecx,DWORD PTR [ebx+ecx*8-0x25bb249e]
  405977:	xchg   ebx,eax
  405978:	arpl   cx,si
  40597a:	fwait
  40597b:	cmp    bl,BYTE PTR [eax-0x6b]
  40597e:	pop    ebx
  40597f:	jmp    0x405983
  405981:	popf   
  405982:	and    al,0x6
  405984:	cmp    BYTE PTR [ebx+ebx*1+0x1d],ch
  405988:	sub    esp,DWORD PTR [ecx]
  40598a:	dec    ebx
  40598b:	cmc    
  40598c:	xor    DWORD PTR [ecx+0x65],edi
  40598f:	fcomp  QWORD PTR [edi-0x2a]
  405992:	ss into 
  405994:	test   DWORD PTR [edi],esi
  405996:	xlat   BYTE PTR ds:[ebx]
  405997:	pop    ds
  405998:	ret    
  405999:	mov    dh,0x31
  40599b:	push   ebx
  40599c:	js     0x4059c5
  40599e:	iret   
  40599f:	pop    ds
  4059a0:	fld    TBYTE PTR [ebp-0x5f]
  4059a3:	sub    esi,DWORD PTR [eax-0x33]
  4059a6:	pop    esi
  4059a7:	cmp    ah,BYTE PTR [edi-0x253b6197]
  4059ad:	pop    edx
  4059ae:	daa    
  4059af:	push   ss
  4059b0:	cwde   
  4059b1:	jmp    0xf9424058
  4059b6:	add    ebx,edi
  4059b8:	pop    eax
  4059b9:	xor    eax,0x3705d35
  4059be:	lds    edi,FWORD PTR [edi]
  4059c0:	cdq    
  4059c1:	jne    0x405a33
  4059c3:	mov    eax,0x99826a11
  4059c8:	movs   DWORD PTR es:[di],DWORD PTR fs:[si]
  4059cb:	stos   DWORD PTR es:[edi],eax
  4059cc:	xor    DWORD PTR [esi+0x64749c1d],ebx
  4059d2:	pop    es
  4059d3:	(bad)  
  4059d4:	cmp    bh,BYTE PTR [edi-0x59c7ced8]
  4059da:	adc    BYTE PTR [ebx],cl
  4059dc:	aaa    
  4059dd:	mov    ch,0x96
  4059df:	daa    
  4059e0:	sub    BYTE PTR [edi],0x46
  4059e3:	xor    ebp,DWORD PTR [eax-0x28]
  4059e6:	xor    DWORD PTR [ebx],0x9fe6c5aa
  4059ec:	xchg   BYTE PTR [ebp+0x33c700db],ch
  4059f2:	pop    ebp
  4059f3:	dec    ebx
  4059f4:	mov    ah,0x1d
  4059f6:	repz shl DWORD PTR [edi-0x5d],1
  4059fa:	jp     0x405a3f
  4059fc:	fs push esi
  4059fe:	gs mov bl,0x73
  405a01:	std    
  405a02:	jp     0x405a49
  405a04:	shrd   DWORD PTR [esi+0x3f3a1f24],eax,cl
  405a0b:	xchg   ecx,eax
  405a0c:	add    al,0xb
  405a0e:	mov    ebp,0x64b1417
  405a13:	ss into 
  405a15:	xor    ecx,DWORD PTR [esi+0x59]
  405a18:	cmp    eax,DWORD PTR [ecx]
  405a1a:	popa   
  405a1b:	cmp    BYTE PTR [eax],dh
  405a1d:	inc    esi
  405a1e:	push   edx
  405a1f:	inc    esp
  405a20:	test   eax,0xb182e976
  405a25:	push   eax
  405a26:	adc    DWORD PTR [edx+eax*8],0xffffffec
  405a2a:	add    eax,0x8eab133b
  405a2f:	xchg   esp,eax
  405a30:	push   ebx
  405a31:	push   cs
  405a32:	dec    esp
  405a33:	and    eax,0x995db551
  405a38:	dec    edx
  405a39:	xchg   edi,eax
  405a3a:	rcl    bh,cl
  405a3c:	test   DWORD PTR ds:0xedbad514,edx
  405a42:	push   ebx
  405a43:	xchg   ebp,eax
  405a44:	or     eax,0x29578361
  405a49:	jmp    0x3b835e59
  405a4e:	shr    dh,1
  405a50:	xchg   ebx,eax
  405a51:	pushf  
  405a52:	aad    0x53
  405a54:	inc    ecx
  405a55:	lods   al,BYTE PTR ds:[esi]
  405a56:	adc    al,0x23
  405a58:	pushf  
  405a59:	cmc    
  405a5a:	ss fwait
  405a5c:	jle    0x405a0d
  405a5e:	push   0xe4a46703
  405a63:	test   eax,0x36b05320
  405a68:	dec    esi
  405a69:	(bad)  
  405a6a:	xor    ch,BYTE PTR [esi+esi*1]
  405a6d:	(bad)  
  405a6e:	fidiv  WORD PTR [edx-0x59]
  405a71:	pop    ebx
  405a72:	iret   
  405a73:	mov    ebx,0x49462e51
  405a78:	xchg   esi,eax
  405a79:	arpl   WORD PTR [ecx+0x37],dx
  405a7c:	xlat   BYTE PTR ds:[ebx]
  405a7d:	cdq    
  405a7e:	jns    0x405a18
  405a80:	data16 mov dl,BYTE PTR [edx-0x7b118d5e]
  405a87:	fwait
  405a88:	popw   es
  405a8a:	inc    ecx
  405a8b:	mov    edx,0x997dc070
  405a90:	sbb    eax,0xbd7a6081
  405a95:	aas    
  405a96:	sub    al,0x85
  405a98:	cmp    ebp,ecx
  405a9a:	inc    edx
  405a9b:	(bad)  
  405a9c:	fdivrp st(7),st
  405a9e:	std    
  405a9f:	mov    al,0xe9
  405aa1:	daa    
  405aa2:	sub    DWORD PTR [edi-0x410a3726],edi
  405aa8:	imul   ecx,edx,0xb5b64e91
  405aae:	(bad)  
  405aaf:	(bad)  
  405ab0:	mov    dh,0x11
  405ab2:	fs psrad mm7,mm0
  405ab6:	outs   dx,DWORD PTR ds:[esi]
  405ab7:	loopne 0x405a9f
  405ab9:	scas   al,BYTE PTR es:[edi]
  405aba:	int3   
  405abb:	nop
  405abc:	xor    BYTE PTR [esi-0x6b12dc80],al
  405ac2:	jo     0x405a85
  405ac4:	les    esp,FWORD PTR [ecx+0x6a1966bd]
  405aca:	jae    0x405aa0
  405acc:	xor    al,0x39
  405ace:	ror    BYTE PTR [esi+eiz*1+0x76613960],0x7c
  405ad6:	mov    dh,0xee
  405ad8:	popf   
  405ad9:	or     eax,0x2ec73059
  405ade:	inc    ebp
  405adf:	test   bl,ch
  405ae1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  405ae3:	les    eax,FWORD PTR [ebp+0x5d]
  405ae6:	jmp    0x405b08
  405ae8:	push   ebp
  405ae9:	pop    edx
  405aea:	pusha  
  405aeb:	jo     0x405b33
  405aed:	or     BYTE PTR [edx],bl
  405aef:	repnz mov bh,0x23
  405af2:	mov    ebp,0xa020fa1c
  405af7:	retf   0x1eb0
  405afa:	mov    ss,WORD PTR [ecx]
  405afc:	dec    esp
  405afd:	mov    edx,0x924d3a12
  405b02:	ins    BYTE PTR es:[edi],dx
  405b03:	call   0x4c77:0x7df7caa
  405b0a:	pop    ebp
  405b0b:	mov    ds:0x578dbbab,eax
  405b10:	jo     0x405aa1
  405b12:	xchg   edx,eax
  405b13:	cmp    al,BYTE PTR [esi]
  405b15:	fdivr  DWORD PTR [esi-0xb]
  405b18:	inc    edx
  405b19:	sbb    DWORD PTR [eax-0x4ebe621f],ebx
  405b1f:	sar    DWORD PTR [ecx],cl
  405b21:	fbld   TBYTE PTR cs:[ebx-0x5f]
  405b25:	pusha  
  405b26:	sub    dl,bl
  405b28:	pop    ds
  405b29:	inc    esi
  405b2a:	imul   esp,ebp,0xe3e0e2f7
  405b30:	hlt    
  405b31:	fist   DWORD PTR [eax+0x7c]
  405b34:	das    
  405b35:	cdq    
  405b36:	es sub dh,ah
  405b39:	jp     0x405ad5
  405b3b:	test   al,0x25
  405b3d:	scas   eax,DWORD PTR es:[edi]
  405b3e:	aam    0xed
  405b40:	pop    esi
  405b41:	stc    
  405b42:	xchg   DWORD PTR [ebp+ebx*8-0x50],edx
  405b46:	test   edx,ecx
  405b48:	and    eax,0x83935c12
  405b4d:	mov    ch,BYTE PTR [edi]
  405b4f:	pop    edi
  405b50:	push   0xffffffd5
  405b52:	shl    BYTE PTR [ecx],1
  405b54:	fstp   TBYTE PTR [ebp-0x3269c536]
  405b5b:	bound  esp,QWORD PTR [eax]
  405b5d:	ror    DWORD PTR [edi-0x372e8b5e],0x17
  405b64:	(bad)  
  405b65:	xchg   DWORD PTR [di],edx
  405b68:	repnz push ebp
  405b6a:	or     al,BYTE PTR [ebx]
  405b6c:	mov    es,WORD PTR [esi+ebp*2]
  405b6f:	sub    ecx,DWORD PTR [edi-0x727220df]
  405b75:	adc    edi,ebx
  405b77:	or     al,0x19
  405b79:	call   0x926d4343
  405b7e:	lock cdq 
  405b80:	sub    al,0xaf
  405b82:	mov    dh,BYTE PTR [ecx+0x5ce151d4]
  405b88:	sbb    dh,BYTE PTR [eax-0x71]
  405b8b:	sbb    eax,0x46c21a8f
  405b90:	loopne 0x405c04
  405b92:	arpl   WORD PTR [edx+0x2e],bp
  405b95:	data16 cmp dl,BYTE PTR [eax+0xd]
  405b99:	dec    edi
  405b9a:	push   esi
  405b9b:	or     al,0x2c
  405b9d:	sub    eax,0x5c
  405ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba1:	sbb    al,0x4d
  405ba3:	aad    0x1d
  405ba5:	aad    0xdb
  405ba7:	xchg   ecx,eax
  405ba8:	leave  
  405ba9:	or     ebp,edi
  405bab:	jo     0x405c20
  405bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bae:	inc    ebx
  405baf:	xor    eax,0xd1b091d1
  405bb4:	xchg   ebp,eax
  405bb5:	jmp    0x405bfc
  405bb7:	(bad)  
  405bb8:	or     al,0x51
  405bba:	out    0x7b,eax
  405bbc:	and    cl,BYTE PTR [ebx-0x5430f85e]
  405bc2:	inc    eax
  405bc3:	xor    dh,BYTE PTR [ebx-0x36b18c1d]
  405bc9:	add    esp,DWORD PTR [eax+0x26]
  405bcc:	out    dx,al
  405bcd:	and    eax,0x84ff22ea
  405bd2:	(bad)  
  405bd3:	xlat   BYTE PTR ds:[ebx]
  405bd4:	push   ss
  405bd5:	ror    DWORD PTR [ebx+0x14],cl
  405bd8:	hlt    
  405bd9:	inc    esp
  405bda:	inc    bl
  405bdc:	test   eax,0xbbfb42e9
  405be1:	adc    DWORD PTR [eax-0x58e2c09a],ebx
  405be7:	bound  esi,QWORD PTR [ebp+0x6cb25cd1]
  405bed:	or     eax,0xf60c710b
  405bf2:	mov    edx,0xdca9d0d7
  405bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bf8:	or     BYTE PTR [edx-0x46e7ecba],al
  405bfe:	test   ebx,0x7825bdb1
  405c04:	xor    edi,eax
  405c06:	sub    al,dh
  405c08:	mov    eax,DWORD PTR [esp+eiz*4+0xb53283f]
  405c0f:	loop   0x405c36
  405c11:	xor    al,0x1
  405c13:	mov    dh,0x11
  405c15:	arpl   WORD PTR [esi-0x14],bx
  405c18:	adc    ch,BYTE PTR [eax+0x20]
  405c1b:	out    dx,eax
  405c1c:	call   0x6ab1e3ef
  405c21:	push   ss
  405c22:	xor    BYTE PTR [esi+0x5f],ch
  405c25:	xchg   ebp,eax
  405c26:	fisubr WORD PTR [edi+0x169a0492]
  405c2c:	addr16 jo 0x405c28
  405c2f:	inc    edi
  405c30:	idiv   DWORD PTR [ecx]
  405c32:	add    al,0xdf
  405c34:	pop    DWORD PTR [edx-0x5d6415fd]
  405c3a:	iret   
  405c3b:	jo     0x405bc2
  405c3d:	and    esp,DWORD PTR [edx+edi*2]
  405c40:	cld    
  405c41:	fsub   QWORD PTR [ecx+0x6a]
  405c44:	sub    DWORD PTR [ecx+ebx*8],ebp
  405c47:	add    DWORD PTR [edi+0x98ecd7d],esi
  405c4d:	out    dx,eax
  405c4e:	(bad)
  405c51:	push   0xef86f3d4
  405c56:	out    dx,al
  405c57:	ins    DWORD PTR es:[edi],dx
  405c58:	dec    ebx
  405c59:	int3   
  405c5a:	jmp    FWORD PTR [edi]
  405c5c:	mov    dl,0x88
  405c5e:	mov    eax,0x5da0d1c6
  405c63:	sub    DWORD PTR [esi],0x4a12188
  405c69:	sub    al,0x67
  405c6b:	es xchg edi,eax
  405c6d:	test   eax,0x3641625d
  405c72:	push   DWORD PTR [esi-0x79ba5286]
  405c78:	or     al,0x1d
  405c7a:	push   edi
  405c7b:	hlt    
  405c7c:	bound  eax,QWORD PTR [ebp+eax*4+0x4]
  405c80:	leave  
  405c81:	push   ebx
  405c82:	pop    es
  405c83:	sar    DWORD PTR [ebx+0x56],0x6f
  405c87:	or     ebp,DWORD PTR [eax+ecx*2+0x593ef285]
  405c8e:	mov    ebx,0x7aaf1d24
  405c93:	jle    0x405c73
  405c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c96:	in     eax,0xbf
  405c98:	jne    0x405caa
  405c9a:	adc    eax,0xb8261156
  405c9f:	int3   
  405ca0:	pop    esp
  405ca1:	sub    BYTE PTR [ebx+0x1b],ch
  405ca4:	sbb    BYTE PTR [esi-0x65ab1934],cl
  405caa:	and    eax,0x2d16eb95
  405caf:	jp     0x405cb1
  405cb1:	stc    
  405cb2:	mov    eax,DWORD PTR [ebx+eax*1]
  405cb5:	inc    DWORD PTR [esi+0x4f]
  405cb8:	sbb    DWORD PTR [eax-0x56],0xaa3ca1d9
  405cbf:	adc    DWORD PTR [eax+0x43a05115],esi
  405cc5:	cwde   
  405cc6:	pop    esi
  405cc7:	sub    dh,BYTE PTR [ecx+0x74]
  405cca:	inc    ecx
  405ccb:	xor    eax,0x86dbe750
  405cd0:	inc    eax
  405cd1:	stos   BYTE PTR es:[edi],al
  405cd2:	push   edi
  405cd3:	scas   eax,DWORD PTR es:[edi]
  405cd4:	xlat   BYTE PTR ds:[ebx]
  405cd5:	adc    ebp,eax
  405cd7:	in     al,0xbb
  405cd9:	(bad)  
  405cda:	loop   0x405d54
  405cdc:	(bad)  
  405cdd:	pop    ds
  405cde:	mov    al,ds:0x30bfb2c2
  405ce3:	xor    BYTE PTR [ecx-0x3f53b9a],0xb2
  405cea:	mov    ecx,0xa7067d3b
  405cef:	es pop esp
  405cf1:	loopne 0x405cd0
  405cf3:	loop   0x405cb4
  405cf5:	out    0xb,al
  405cf7:	mov    bh,0x5b
  405cf9:	mov    WORD PTR [esi-0x1e8fb634],cs
  405cff:	data16 fist DWORD PTR ds:0x9221ba68
  405d06:	jmp    FWORD PTR [edx]
  405d08:	adc    eax,0x36d00122
  405d0d:	pop    eax
  405d0e:	loop   0x405d6d
  405d10:	lods   eax,DWORD PTR ds:[esi]
  405d11:	shr    BYTE PTR [edx],1
  405d13:	mov    edx,0x129718ae
  405d18:	lea    esp,[edi]
  405d1a:	rcr    BYTE PTR [edx-0x4308300f],cl
  405d20:	mov    ecx,0x552d2030
  405d25:	mov    bh,0x47
  405d27:	das    
  405d28:	or     BYTE PTR [eax+0x63ee9e60],ch
  405d2e:	or     bl,dh
  405d30:	pop    ebp
  405d31:	or     BYTE PTR [ebx+0x56],ch
  405d34:	xor    DWORD PTR [edx],0xba6c7e20
  405d3a:	int3   
  405d3b:	iret   
  405d3c:	add    eax,0xd4f22a7d
  405d41:	outs   dx,BYTE PTR ds:[esi]
  405d42:	lahf   
  405d43:	arpl   WORD PTR ds:0xe39dd1d3,ax
  405d49:	dec    ecx
  405d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d4b:	or     DWORD PTR [edx],edi
  405d4d:	aam    0xf
  405d4f:	inc    ebp
  405d50:	pop    ds
  405d51:	outs   dx,DWORD PTR ds:[esi]
  405d52:	lods   al,BYTE PTR cs:[esi]
  405d54:	cmp    eax,edx
  405d56:	jg     0x405d98
  405d58:	cs int3 
  405d5a:	test   al,0xf5
  405d5c:	ss out dx,al
  405d5e:	mov    esi,0xaaec7c94
  405d63:	pushf  
  405d64:	pop    es
  405d65:	jae    0x405dd6
  405d67:	add    edx,DWORD PTR [ecx+eax*2+0x61f5f89a]
  405d6e:	outs   dx,BYTE PTR ds:[esi]
  405d6f:	and    eax,ebx
  405d71:	data16 fstp st(4)
  405d74:	cdq    
  405d75:	popf   
  405d76:	mov    eax,ds:0xf875b04a
  405d7b:	mov    esp,0xdebda3f6
  405d80:	and    BYTE PTR [ecx-0x130b6cfd],0xea
  405d87:	aad    0x12
  405d89:	aam    0xcf
  405d8b:	xchg   ebx,eax
  405d8c:	mov    cl,BYTE PTR [esi]
  405d8e:	jns    0x405d10
  405d90:	aam    0x47
  405d92:	test   ch,bl
  405d94:	mov    BYTE PTR [edx],cl
  405d96:	add    al,0xfe
  405d98:	cmp    esi,DWORD PTR [ecx]
  405d9a:	int    0xc8
  405d9c:	imul   edi,DWORD PTR [ebx-0x7e],0x3b4226b7
  405da3:	clc    
  405da4:	inc    esp
  405da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da6:	pop    edi
  405da7:	sbb    al,0x8e
  405da9:	test   DWORD PTR [ebx-0x74],eax
  405dac:	jbe    0x405d6b
  405dae:	inc    eax
  405daf:	sub    eax,0xf8d959b9
  405db4:	(bad)  
  405db5:	jmp    0x582a:0x504ce64b
  405dbc:	iret   
  405dbd:	imul   edx,DWORD PTR [ecx+0x36d5d191],0x795c7f85
  405dc7:	ror    DWORD PTR [ebx-0x1],1
  405dca:	sub    BYTE PTR [edx-0x262a467f],bl
  405dd0:	push   ds
  405dd1:	arpl   WORD PTR [eax+edx*1+0x72],ax
  405dd5:	inc    esi
  405dd6:	les    ecx,FWORD PTR [ebx*1-0x2f850e4a]
  405ddd:	das    
  405dde:	mov    ebx,0xf35e1c1c
  405de3:	ja     0x405dea
  405de5:	sbb    edx,DWORD PTR [ebx]
  405de7:	or     DWORD PTR [ebx-0x38],eax
  405dea:	call   0x8de04dc
  405def:	dec    edx
  405df0:	mov    dl,0xbb
  405df2:	mov    cl,0x4a
  405df4:	rcl    DWORD PTR [ecx+eiz*2+0xbcc1ee4],0x10
  405dfc:	mov    bl,0xb7
  405dfe:	leave  
  405dff:	mov    esp,0x91d4e974
  405e04:	out    dx,eax
  405e05:	fisubr DWORD PTR [ebx-0x301afc]
  405e0b:	cmp    DWORD PTR fs:[ebx-0x40cdc30],ebp
  405e12:	sub    al,BYTE PTR [eax]
  405e14:	xor    eax,ecx
  405e16:	xor    ecx,DWORD PTR [edi+0x36db2318]
  405e1c:	pusha  
  405e1d:	jmp    FWORD PTR [esi-0x3a]
  405e20:	mov    bh,0x4a
  405e22:	add    DWORD PTR [ebx+edi*2-0x6b47cfa8],esp
  405e29:	sbb    eax,0x97a7dc44
  405e2e:	pusha  
  405e2f:	fs icebp 
  405e31:	nop
  405e32:	repnz pop edi
  405e34:	or     esi,DWORD PTR [eax-0x20c3cf1d]
  405e3a:	lahf   
  405e3b:	mov    ecx,0xf6d3316c
  405e40:	and    eax,DWORD PTR [ebx]
  405e42:	into   
  405e43:	or     ah,BYTE PTR [esi-0x21]
  405e46:	ins    BYTE PTR es:[edi],dx
  405e47:	retf   
  405e48:	or     eax,0xcf34044
  405e4d:	clc    
  405e4e:	shl    BYTE PTR [eax+0x55d23745],0x77
  405e55:	sub    dh,0x2d
  405e58:	pushf  
  405e59:	push   edi
  405e5a:	fsubr  st(4),st
  405e5c:	and    cl,BYTE PTR [eax+0x12]
  405e5f:	sbb    eax,DWORD PTR [edi]
  405e61:	push   ss
  405e62:	test   eax,0x48db22d7
  405e67:	(bad)  
  405e68:	jecxz  0x405e4b
  405e6a:	pop    esp
  405e6b:	addr16 cli 
  405e6d:	xchg   ebx,eax
  405e6e:	mov    DWORD PTR [ebx-0x3930d40e],edi
  405e74:	fwait
  405e75:	push   0xffffffd1
  405e77:	mov    dl,0xaa
  405e79:	jae    0x405e56
  405e7b:	inc    edx
  405e7c:	mov    BYTE PTR ss:[ecx+0x293dc338],0xc3
  405e84:	mov    al,0xbf
  405e86:	xchg   ebx,eax
  405e87:	xchg   esi,eax
  405e88:	dec    esi
  405e89:	mov    esi,0xfdf9ae43
  405e8e:	icebp  
  405e8f:	mov    ch,0x50
  405e91:	xor    ecx,edx
  405e93:	xchg   edx,eax
  405e94:	jg     0x405e7b
  405e96:	or     ecx,edx
  405e98:	es stc 
  405e9a:	mov    bl,0x3a
  405e9c:	cmp    al,0xf
  405e9e:	loope  0x405ee0
  405ea0:	cmp    BYTE PTR [ebx],bh
  405ea2:	sbb    DWORD PTR gs:[eax-0x5b3fd489],0x77
  405eaa:	popa   
  405eab:	sub    al,0xa1
  405ead:	inc    ebx
  405eae:	inc    ebp
  405eaf:	push   0xb673ebee
  405eb4:	xchg   ebx,eax
  405eb5:	and    esp,DWORD PTR [ebx+0x19c13a62]
  405ebb:	push   ecx
  405ebc:	pop    es
  405ebd:	repnz xor al,0xf9
  405ec0:	gs test cl,ah
  405ec3:	das    
  405ec4:	ins    DWORD PTR es:[edi],dx
  405ec5:	imul   esp,DWORD PTR ds:0x6d10de2f,0xffffffa8
  405ecc:	stos   BYTE PTR es:[edi],al
  405ecd:	mov    ecx,0x2a1696fe
  405ed2:	cmp    edx,DWORD PTR [ecx+0x2bb6da30]
  405ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed9:	mov    esp,0x66635225
  405ede:	call   0xf765:0x8298d60a
  405ee5:	int3   
  405ee6:	cmp    edx,DWORD PTR [edx+eax*2-0x430fdacb]
  405eed:	ins    BYTE PTR es:[edi],dx
  405eee:	rcl    BYTE PTR [eax-0x2e],1
  405ef1:	xor    eax,0x3a0ce43e
  405ef6:	sti    
  405ef7:	out    0x1a,eax
  405ef9:	inc    edx
  405efa:	push   ecx
  405efb:	lock push ebp
  405efd:	xchg   ecx,eax
  405efe:	iret   
  405eff:	nop
  405f00:	mov    bl,0xb9
  405f02:	jno    0x8badcf9e
  405f08:	call   0x62dd:0x786bb8da
  405f0f:	push   eax
  405f10:	jbe    0x405eea
  405f12:	ds push cs
  405f14:	adc    al,0x8e
  405f16:	jle    0x405f35
  405f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f19:	dec    ebx
  405f1a:	mov    esp,0xffa7412b
  405f1f:	jmp    0x405ebb
  405f21:	add    BYTE PTR [esi-0x5e],dl
  405f24:	imul   ebp,DWORD PTR [edi-0x34d0c7c2],0x5ed05dc2
  405f2e:	cmp    BYTE PTR es:[eax],ch
  405f31:	mov    dh,0x4e
  405f33:	shl    BYTE PTR [edx],0x7a
  405f36:	dec    esi
  405f37:	add    eax,0xc4d6f21d
  405f3c:	dec    ebp
  405f3d:	push   esi
  405f3e:	pop    esp
  405f3f:	xlat   BYTE PTR ds:[ebx]
  405f40:	push   0xffffff92
  405f42:	jecxz  0x405ef3
  405f44:	xor    BYTE PTR [edi+0x744840b2],ah
  405f4a:	mov    bl,0x8f
  405f4c:	fnsave [ecx-0x43d8d158]
  405f52:	out    dx,al
  405f53:	xchg   ah,cl
  405f55:	in     eax,0xbd
  405f57:	or     BYTE PTR [edx+0x46],cl
  405f5a:	fild   DWORD PTR [ebx+ebp*2]
  405f5d:	inc    edx
  405f5e:	(bad)  
  405f60:	ins    DWORD PTR es:[edi],dx
  405f61:	mov    dh,0x49
  405f63:	mov    ds:0x2db9a331,eax
  405f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f69:	rcr    BYTE PTR [eax+0x293337c2],1
  405f6f:	or     DWORD PTR [edx-0x68],edx
  405f72:	push   ebx
  405f73:	std    
  405f74:	dec    ebx
  405f75:	cmc    
  405f76:	ss in  al,dx
  405f78:	or     BYTE PTR [ecx],bl
  405f7a:	test   al,0x84
  405f7c:	dec    ecx
  405f7d:	and    eax,0x9d719fe7
  405f82:	add    eax,0xa233644a
  405f87:	inc    ebx
  405f88:	repz neg ah
  405f8b:	shr    BYTE PTR [ecx-0x5e1a07ae],0xe0
  405f92:	aaa    
  405f93:	not    BYTE PTR [edx]
  405f95:	retf   0x49c5
  405f98:	(bad)  fs:[ecx+0x4292a350]
  405f9f:	mov    DWORD PTR [ebp+0x382fa516],eax
  405fa5:	fnstcw WORD PTR [eax]
  405fa7:	inc    esp
  405fa8:	fistp  QWORD PTR [ebx]
  405faa:	adc    al,0xe7
  405fac:	mov    al,0xf4
  405fae:	or     ebp,DWORD PTR [edx]
  405fb0:	jnp    0x405fdc
  405fb2:	js     0x406009
  405fb4:	pop    si
  405fb6:	xor    BYTE PTR [eax+0x759f7911],dh
  405fbc:	(bad)  
  405fbd:	aam    0xf0
  405fbf:	mov    esp,0xd19e8cff
  405fc4:	out    dx,eax
  405fc5:	inc    edx
  405fc6:	addr16 int 0xfb
  405fc9:	xor    al,0x43
  405fcb:	(bad)  
  405fcc:	cmp    eax,0xe9a58455
  405fd1:	lahf   
  405fd2:	add    dl,ah
  405fd4:	xchg   esi,eax
  405fd5:	in     eax,dx
  405fd6:	scas   eax,DWORD PTR es:[edi]
  405fd7:	sahf   
  405fd8:	push   edi
  405fd9:	mov    edx,DWORD PTR [edi+0x3e]
  405fdc:	mov    esi,0xb8e0ffee
  405fe1:	test   eax,0x82453b1e
  405fe6:	mov    dh,0x9
  405fe8:	test   BYTE PTR [edi-0x61],bh
  405feb:	fmul   DWORD PTR [eax+ecx*8-0x48]
  405fef:	xchg   esi,eax
  405ff0:	mov    esp,0x1274c577
  405ff5:	clc    
  405ff6:	mov    ds:0xa4b2a183,eax
  405ffb:	jg     0x406034
  405ffd:	push   0xe55cc999
  406002:	dec    ebp
  406003:	loop   0x406021
  406005:	adc    al,0x74
  406007:	push   ds
  406008:	jno    0x405faf
  40600a:	ret    0xa0f7
  40600d:	cmp    edx,esi
  40600f:	cmp    al,0xca
  406011:	lods   eax,DWORD PTR ds:[esi]
  406012:	lock sub esp,DWORD PTR [ecx+0x513b2f1b]
  406019:	or     DWORD PTR [edx-0x63106fc7],ecx
  40601f:	and    al,BYTE PTR [edi+0x36babb63]
  406025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406026:	(bad)  
  406027:	jmp    0x405fc7
  406029:	pop    es
  40602a:	add    al,BYTE PTR [ecx]
  40602c:	fwait
  40602d:	loopne 0x406088
  40602f:	add    ebp,0x40
  406032:	sahf   
  406033:	jo     0x406011
  406035:	xchg   esp,eax
  406036:	jle    0x406092
  406038:	mov    ebp,0x4b1fcca5
  40603d:	outs   dx,BYTE PTR ds:[esi]
  40603e:	pop    ds
  40603f:	sar    BYTE PTR [esi-0xa],0x63
  406043:	xor    ebp,ecx
  406045:	lods   eax,DWORD PTR ds:[esi]
  406046:	loop   0x405ff0
  406048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406049:	or     eax,DWORD PTR [edx+0x7b]
  40604c:	sbb    ecx,DWORD PTR [esi-0x2b]
  40604f:	push   es
  406050:	(bad)  
  406051:	pop    esp
  406052:	mov    WORD PTR [ebp+0x96a13be],fs
  406058:	pop    ecx
  406059:	std    
  40605a:	repz or BYTE PTR [esi+eiz*2+0x585f257f],0x12
  406063:	mov    eax,ds:0x3271058b
  406068:	sub    bh,0xe
  40606b:	xchg   esp,eax
  40606c:	xchg   edi,eax
  40606d:	push   0x23
  40606f:	ja     0x406090
  406071:	push   esi
  406072:	and    eax,0xaebd69c8
  406077:	cmp    eax,0xfde4a8f
  40607c:	xchg   esi,eax
  40607d:	xchg   esp,esp
  40607f:	inc    esi
  406080:	mov    al,0x69
  406082:	cld    
  406083:	(bad)  
  406084:	(bad)  
  406085:	jle    0x4060cb
  406087:	mov    ch,0xf
  406089:	dec    ecx
  40608a:	ss add dl,BYTE PTR es:[eax+edi*2+0x41]
  406090:	fdivr  DWORD PTR [ebx+eax*1-0xb]
  406094:	aaa    
  406095:	jg     0x406107
  406097:	mov    eax,0x963fe0
  40609c:	cmc    
  40609d:	fldcw  WORD PTR [edx-0x5815e56a]
  4060a3:	sub    eax,0x20a462c4
  4060a8:	call   0xc6ea1125
  4060ad:	popf   
  4060ae:	mov    esi,0x56594823
  4060b3:	int3   
  4060b4:	dec    esi
  4060b5:	adc    dh,al
  4060b7:	cwde   
  4060b8:	ret    0x5376
  4060bb:	cmp    edi,ebx
  4060bd:	aad    0x3c
  4060bf:	cmp    eax,0x6774ab9e
  4060c4:	je     0x40610e
  4060c6:	pop    es
  4060c7:	adc    edi,edx
  4060c9:	cmp    DWORD PTR [edi-0x2d],0xdc4b5df
  4060d0:	rol    BYTE PTR [edx+0x9],cl
  4060d3:	mov    dh,0x58
  4060d5:	gs sahf 
  4060d7:	adc    eax,0xf7f9b696
  4060dc:	cmc    
  4060dd:	sbb    edi,DWORD PTR [edi+0x2d]
  4060e0:	adc    BYTE PTR [eax],bl
  4060e2:	test   al,cl
  4060e4:	imul   esi,DWORD PTR [ebx],0x49
  4060e7:	fiadd  WORD PTR ds:0xd33bf5dd
  4060ed:	adc    ebp,esi
  4060ef:	sahf   
  4060f0:	int    0x3c
  4060f2:	or     BYTE PTR [esi-0x43],0x9
  4060f6:	mov    dl,dh
  4060f8:	out    0x30,eax
  4060fa:	lock sbb bl,BYTE PTR [edi*8+0x4d7acfe4]
  406102:	xchg   DWORD PTR [edx-0x69f8efc3],ebp
  406108:	mov    edx,0x47b75bfc
  40610d:	stc    
  40610e:	lahf   
  40610f:	mov    edx,0xcdaeff92
  406114:	sbb    edi,ebp
  406116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406117:	inc    esp
  406118:	jp     0x406156
  40611a:	ins    BYTE PTR es:[edi],dx
  40611b:	in     eax,0x1f
  40611d:	outs   dx,DWORD PTR ds:[esi]
  40611e:	xchg   ecx,eax
  40611f:	and    ebx,DWORD PTR [edx]
  406121:	(bad)  
  406122:	ror    BYTE PTR [edx+0x4f],1
  406125:	xor    edx,esp
  406127:	or     bl,BYTE PTR [eax+esi*8+0x7b]
  40612b:	cmp    DWORD PTR [ecx-0x7d2c9a94],esp
  406131:	and    DWORD PTR [eax+0x58],ebx
  406134:	sub    eax,DWORD PTR [esi+0x51]
  406137:	dec    edx
  406138:	sbb    ebp,DWORD PTR [esi-0x25c208f3]
  40613e:	and    eax,0xddfb71a5
  406143:	mul    BYTE PTR [edi]
  406145:	pop    ebp
  406146:	inc    edx
  406147:	cmp    al,0xa3
  406149:	and    ah,BYTE PTR [edi]
  40614b:	or     eax,0xb3cf4551
  406150:	loop   0x406180
  406152:	stos   BYTE PTR es:[edi],al
  406153:	fs add esp,ebp
  406156:	sub    ecx,0x3704d8e4
  40615c:	mov    ecx,?
  40615e:	mov    DWORD PTR [edx+0x3d],edi
  406161:	mov    eax,ds:0x30930a37
  406166:	xchg   esp,eax
  406167:	out    0x89,al
  406169:	sti    
  40616a:	push   edx
  40616c:	test   ecx,0x249bfa2c
  406172:	push   esp
  406173:	pusha  
  406174:	call   FWORD PTR [eax]
  406176:	int3   
  406177:	inc    DWORD PTR [esi+eax*1-0x4e62a2]
  40617e:	add    al,0x6b
  406180:	aas    
  406181:	adc    al,0x97
  406183:	add    al,0x65
  406185:	xchg   esp,eax
  406186:	in     eax,dx
  406187:	rcr    BYTE PTR [edi-0x6f087cbe],cl
  40618d:	inc    edi
  40618e:	inc    edi
  40618f:	pushf  
  406190:	(bad)  
  406191:	je     0x4061f1
  406193:	pop    eax
  406194:	dec    esp
  406195:	ds out 0xe,eax
  406198:	pop    ds
  406199:	inc    ecx
  40619a:	imul   eax,ebp,0x9f66dc62
  4061a0:	fs inc ebx
  4061a2:	xor    edx,ebx
  4061a4:	(bad)  
  4061a5:	adc    BYTE PTR [edx],cl
  4061a7:	(bad)  
  4061a8:	fist   DWORD PTR [edi]
  4061aa:	cmp    BYTE PTR [edx+0x4e],0x21
  4061ae:	enter  0x48c,0xb5
  4061b2:	loopne 0x4061fc
  4061b4:	cdq    
  4061b5:	(bad)
  4061b8:	sbb    al,0xbb
  4061ba:	mov    ch,0xa2
  4061bc:	test   DWORD PTR [esi-0x1c8e0864],esi
  4061c2:	adc    al,0x79
  4061c4:	int    0xfb
  4061c6:	lods   eax,DWORD PTR ds:[esi]
  4061c7:	lea    esi,[esi-0x41]
  4061ca:	add    eax,0x78b003ff
  4061cf:	ins    DWORD PTR es:[edi],dx
  4061d0:	inc    ebx
  4061d1:	pop    esi
  4061d2:	retf   
  4061d3:	ins    BYTE PTR es:[edi],dx
  4061d4:	and    ebp,esi
  4061d6:	dec    ebp
  4061d7:	les    edi,FWORD PTR [edi+0x1b]
  4061da:	mov    ebx,DWORD PTR [eiz*4-0x2c63cb47]
  4061e1:	sbb    al,0xa
  4061e3:	cmp    edi,0x6937dbf3
  4061e9:	out    0x76,eax
  4061eb:	retf   0x1812
  4061ee:	mul    DWORD PTR [ecx+0x56daf7e7]
  4061f4:	add    al,0xca
  4061f6:	mov    ecx,0xb8b0c9e3
  4061fb:	stc    
  4061fc:	push   eax
  4061fd:	mov    dl,0xee
  4061ff:	imul   esi,DWORD PTR [esi-0x27dd2825],0x77
  406206:	lods   al,BYTE PTR ds:[esi]
  406207:	sbb    ch,ah
  406209:	xor    eax,0x552c1a0c
  40620e:	sbb    eax,0x95ff7578
  406213:	sar    BYTE PTR [eax],0x3b
  406216:	fsubr  QWORD PTR [ebp-0x29]
  406219:	pop    eax
  40621a:	sub    BYTE PTR [eax-0xcf6690b],cl
  406220:	sbb    eax,0xe3fe6715
  406225:	es cmp eax,0xdd8e129e
  40622b:	scas   al,BYTE PTR es:[edi]
  40622c:	push   DWORD PTR [esp+edi*2]
  40622f:	adc    DWORD PTR [esi+0x5182789],ecx
  406235:	jo     0x40629b
  406237:	stos   BYTE PTR es:[edi],al
  406238:	sub    ah,BYTE PTR [esi+ebx*4+0x1270d841]
  40623f:	ret    
  406240:	repz sub DWORD PTR [edx],esi
  406243:	test   eax,0x343efc26
  406248:	sbb    al,0xd1
  40624a:	jp     0x406242
  40624c:	addr16 dec esi
  40624e:	jns    0x406260
  406250:	int    0x2b
  406252:	inc    esi
  406253:	icebp  
  406254:	sub    ecx,DWORD PTR [edi+0x2b]
  406257:	jb     0x40624f
  406259:	push   esp
  40625a:	(bad)  [ebx+0x4]
  40625d:	stos   BYTE PTR es:[edi],al
  40625e:	gs nop
  406260:	mov    edx,DWORD PTR [eax-0x62650484]
  406266:	jno    0x4062bf
  406268:	adc    al,dl
  40626a:	inc    ebp
  40626b:	ins    DWORD PTR es:[edi],dx
  40626c:	ficom  DWORD PTR [esi-0x21a7c6c4]
  406272:	rcr    BYTE PTR [ecx],1
  406274:	dec    ebp
  406275:	popf   
  406276:	push   edi
  406277:	jge    0x4061f9
  406279:	inc    edi
  40627a:	jnp    0x406291
  40627c:	cmc    
  40627d:	(bad)
  406280:	cs data16 test al,0xaf
  406284:	test   al,0x92
  406286:	loop   0x406224
  406288:	add    eax,0xbc40831b
  40628d:	lock fs loop 0x40622f
  406291:	mov    ecx,0x1412b744
  406296:	xchg   ecx,eax
  406297:	stos   BYTE PTR es:[edi],al
  406298:	xchg   BYTE PTR [eax],ch
  40629a:	jbe    0x40627a
  40629c:	adc    edi,DWORD PTR [eax+0x1d]
  40629f:	xor    BYTE PTR [ecx],cl
  4062a1:	and    ah,BYTE PTR [esi]
  4062a3:	daa    
  4062a4:	int3   
  4062a5:	pop    ebx
  4062a6:	leave  
  4062a7:	mov    bl,0xba
  4062a9:	sbb    dl,ch
  4062ab:	cmp    eax,0x3e2c3909
  4062b0:	and    BYTE PTR [ecx+esi*4],al
  4062b3:	mov    cl,cl
  4062b5:	and    BYTE PTR [eax+0x45],0x45
  4062b9:	add    DWORD PTR [esi],esp
  4062bb:	mov    edx,0x56f0665
  4062c0:	mov    esi,0x7ef1bbd7
  4062c5:	and    bh,BYTE PTR [ebx+0x375f15a0]
  4062cb:	adc    edx,DWORD PTR [edi+0x2a6ca266]
  4062d1:	jg     0x406258
  4062d3:	pop    eax
  4062d4:	dec    esp
  4062d5:	cli    
  4062d6:	and    ecx,DWORD PTR [esi+0x6b]
  4062d9:	sub    al,0xd0
  4062db:	mov    bl,0x29
  4062dd:	(bad)  
  4062de:	aas    
  4062df:	push   es
  4062e0:	lock cmp eax,0xff231d30
  4062e6:	dec    esp
  4062e7:	dec    esi
  4062e8:	sbb    BYTE PTR [edx+0x2d],dh
  4062eb:	jl     0x4062c2
  4062ed:	mov    esi,0xe981e98a
  4062f2:	imul   edi,edx,0x90d8b7c
  4062f8:	add    esp,DWORD PTR [edx+0x5c]
  4062fb:	dec    esp
  4062fc:	stc    
  4062fd:	(bad)  
  4062fe:	les    ebp,FWORD PTR [esi]
  406300:	cs pop es
  406302:	call   0xd7f5:0xfd31bcb0
  406309:	add    BYTE PTR [edx],bl
  40630b:	and    eax,0x694d5e39
  406310:	(bad)  
  406311:	outs   dx,DWORD PTR ds:[esi]
  406312:	cld    
  406313:	sar    DWORD PTR [ebp+0x17],cl
  406316:	popa   
  406317:	dec    edi
  406318:	xor    ebx,DWORD PTR [ecx]
  40631a:	mov    ds:0xcf295716,al
  40631f:	cmp    BYTE PTR [ecx+0x2b],ah
  406322:	es fcom st(3)
  406325:	cli    
  406326:	inc    ebx
  406327:	in     eax,0x88
  406329:	scas   eax,DWORD PTR es:[edi]
  40632a:	lock fistp DWORD PTR [ecx+0x77]
  40632e:	shl    ah,cl
  406330:	sub    BYTE PTR [ecx],dh
  406332:	lds    ebp,FWORD PTR [esi-0x58]
  406335:	sar    DWORD PTR [edi-0x2a9e9f3d],1
  40633b:	pop    ebp
  40633c:	pop    ecx
  40633d:	test   al,0xa9
  40633f:	add    eax,DWORD PTR [ebx]
  406341:	xor    BYTE PTR [edi+0x4a],0x1f
  406345:	outs   dx,DWORD PTR ds:[esi]
  406346:	cdq    
  406347:	mov    ebx,0x9f0874e7
  40634c:	shl    DWORD PTR [edi+eiz*4-0x54d70ea4],0xd7
  406354:	scas   al,BYTE PTR es:[edi]
  406355:	push   eax
  406356:	lods   al,BYTE PTR ds:[esi]
  406357:	sahf   
  406358:	and    ah,bl
  40635a:	lahf   
  40635b:	mov    bl,0x8f
  40635d:	ds js  0x40632f
  406360:	icebp  
  406361:	push   0x70
  406363:	mov    esi,0x92b3fba6
  406368:	mov    dl,0x98
  40636a:	adc    ebp,eax
  40636c:	jae    0x4063a2
  40636e:	jl     0x406378
  406370:	ret    0x1412
  406373:	jne    0x406319
  406375:	je     0x4063de
  406377:	clc    
  406378:	lea    esi,[ebx-0x48ff57ee]
  40637e:	jmp    0x1a1a:0xfce8e772
  406385:	and    BYTE PTR [esi-0x2e],ch
  406388:	xchg   ebx,eax
  406389:	leave  
  40638a:	sbb    al,0x2d
  40638c:	out    dx,eax
  40638d:	std    
  40638e:	mov    ch,0xf
  406390:	pop    es
  406391:	push   ds
  406392:	lods   eax,DWORD PTR ds:[esi]
  406393:	out    0x2,eax
  406395:	mov    ds:0x9b307323,al
  40639a:	retf   
  40639b:	(bad)  
  40639e:	adc    ebx,DWORD PTR [edx+0x22]
  4063a1:	arpl   WORD PTR [eax-0x7f],cx
  4063a4:	aad    0xe7
  4063a6:	dec    eax
  4063a7:	mov    ds:0xcaee2331,eax
  4063ac:	data16 and ah,BYTE PTR [eax+0x59]
  4063b0:	add    al,0x54
  4063b2:	xchg   BYTE PTR [eax+0x41],dl
  4063b5:	pop    ebp
  4063b6:	pop    es
  4063b7:	inc    ecx
  4063b8:	sbb    BYTE PTR [edx],cl
  4063ba:	adc    ecx,eax
  4063bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063bd:	ins    DWORD PTR es:[edi],dx
  4063be:	outs   dx,BYTE PTR ds:[esi]
  4063bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c0:	and    DWORD PTR [eax+0x57],edx
  4063c3:	or     DWORD PTR [edx+0x35],ebp
  4063c6:	retf   
  4063c7:	popf   
  4063c8:	stos   BYTE PTR es:[edi],al
  4063c9:	jle    0x4063a6
  4063cb:	push   eax
  4063cc:	ins    DWORD PTR es:[edi],dx
  4063cd:	hlt    
  4063ce:	lods   eax,DWORD PTR ds:[esi]
  4063cf:	cmc    
  4063d0:	into   
  4063d1:	shl    DWORD PTR [esi],cl
  4063d3:	sub    BYTE PTR [esi],ch
  4063d5:	jb     0x4063de
  4063d7:	popf   
  4063d8:	out    dx,eax
  4063d9:	push   0x7679b98f
  4063de:	jmp    0x2cf3:0x2dff15c5
  4063e5:	sbb    eax,0xc7dd048c
  4063ea:	fdiv   st(1),st
  4063ec:	xchg   BYTE PTR [edi+0x73],dh
  4063ef:	ss into 
  4063f1:	mov    esp,0xc45a05a0
  4063f6:	sub    al,0x74
  4063f8:	jb     0x40638a
  4063fa:	(bad)  
  4063fb:	jmp    0x2550:0x9cc0af37
  406402:	cmp    al,0x2b
  406404:	xlat   BYTE PTR ds:[ebx]
  406405:	push   0x5b
  406407:	sbb    DWORD PTR [eax-0x10],0xffffffc0
  40640b:	lods   al,BYTE PTR ds:[esi]
  40640c:	jne    0x4063d7
  40640e:	ins    BYTE PTR es:[edi],dx
  40640f:	imul   edi,DWORD PTR [eax],0xffffffcf
  406412:	in     eax,0xbd
  406414:	push   0x39fd7ae8
  406419:	mov    ah,0x30
  40641b:	aas    
  40641c:	aaa    
  40641d:	cmp    ch,cl
  40641f:	test   DWORD PTR [edi-0x1b],esi
  406422:	mov    dl,0x3
  406424:	mov    eax,ds:0x52cf29d7
  406429:	jg     0x406475
  40642b:	dec    eax
  40642c:	mov    gs,eax
  40642e:	cdq    
  40642f:	xor    eax,0x19e79e12
  406434:	dec    esi
  406435:	fst    QWORD PTR ds:0x3ea25ba9
  40643b:	sar    DWORD PTR [eax+0x4983690c],0x17
  406442:	fdivr  st(4),st
  406444:	test   DWORD PTR [eax],esp
  406446:	mov    ds:0xd1e4e90d,al
  40644b:	(bad)  
  40644c:	push   ds
  40644d:	call   FWORD PTR [esp+eiz*2+0x242052ad]
  406454:	pop    esp
  406455:	pusha  
  406456:	scas   eax,DWORD PTR es:[edi]
  406457:	pop    ds
  406458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406459:	dec    eax
  40645a:	pop    esi
  40645b:	jno    0x40646f
  40645d:	rcr    BYTE PTR ds:0x7fc20df5,cl
  406463:	ss mov ebp,0xf3cb6d90
  406469:	pop    ebp
  40646a:	mov    BYTE PTR [edi-0x66],al
  40646d:	cmp    cl,ah
  40646f:	sbb    DWORD PTR [eax-0x6],esp
  406472:	xchg   esp,eax
  406473:	rcl    BYTE PTR [eax-0x4bb7fa0c],0xcf
  40647a:	mov    al,0xd7
  40647c:	or     DWORD PTR [ecx-0x652e101],esp
  406482:	mov    cl,0xdc
  406484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406485:	test   bl,0x7f
  406488:	pop    esi
  406489:	repz stc 
  40648b:	repz daa 
  40648d:	imul   edi,DWORD PTR [ecx],0x60
  406490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406491:	push   ss
  406492:	sub    bh,BYTE PTR [edi]
  406494:	loope  0x4064b1
  406496:	imul   eax,DWORD PTR [esp+edi*1],0xffffffa0
  40649a:	popf   
  40649b:	inc    esi
  40649c:	sti    
  40649d:	sub    al,0x81
  40649f:	and    al,0xca
  4064a1:	cmp    esp,eax
  4064a3:	dec    edx
  4064a4:	mov    esp,0xd05ada77
  4064a9:	jnp    0x406507
  4064ab:	cmp    eax,ebx
  4064ad:	lds    esp,FWORD PTR [eax-0x52]
  4064b0:	add    al,0xc4
  4064b2:	dec    esi
  4064b3:	and    edx,edi
  4064b5:	pop    eax
  4064b6:	inc    eax
  4064b7:	test   eax,0xfd4e5838
  4064bc:	in     eax,dx
  4064bd:	sub    dl,BYTE PTR [ebp+0x14]
  4064c0:	fs (bad) 
  4064c2:	cmp    DWORD PTR [edi+0x1a],edi
  4064c5:	dec    edx
  4064c6:	xchg   esi,eax
  4064c7:	or     dh,0xb6
  4064ca:	loopne 0x406517
  4064cc:	popa   
  4064cd:	call   0x473b1837
  4064d2:	jns    0x4064bc
  4064d4:	xlat   BYTE PTR gs:[ebx]
  4064d6:	xchg   ebx,eax
  4064d7:	mov    dh,0x70
  4064d9:	cmc    
  4064da:	adc    ebp,DWORD PTR [edx]
  4064dc:	xchg   ecx,eax
  4064dd:	mov    BYTE PTR [ebx],ch
  4064df:	inc    ebp
  4064e0:	stos   DWORD PTR es:[edi],eax
  4064e1:	mov    ds:0x33d5b62b,al
  4064e6:	mov    esi,0x47693ed1
  4064eb:	mov    fs,WORD PTR [eax+0x1d6a3d6f]
  4064f1:	add    eax,0xeef540e0
  4064f6:	push   esp
  4064f7:	out    0x7f,eax
  4064f9:	ins    DWORD PTR es:[edi],dx
  4064fa:	ins    BYTE PTR es:[edi],dx
  4064fb:	sub    BYTE PTR [ebp-0x6236f53e],cl
  406501:	dec    ebp
  406502:	jno    0x406554
  406504:	test   eax,0x9ee554d2
  406509:	out    dx,eax
  40650a:	add    DWORD PTR [ecx+0x1d9d84f7],ebp
  406510:	adc    esi,esp
  406512:	lods   al,BYTE PTR ds:[esi]
  406513:	mov    ds:0x3006a44f,al
  406518:	adc    ah,BYTE PTR [edi+0x5e]
  40651b:	iret   
  40651c:	into   
  40651d:	outs   dx,DWORD PTR ds:[esi]
  40651e:	inc    esp
  40651f:	mov    ds,WORD PTR [esi-0x18]
  406522:	and    ah,bh
  406524:	mov    ebx,0xfe9f2abc
  406529:	mov    ds:0xab60be48,al
  40652e:	jns    0x406589
  406530:	pop    ds
  406531:	sub    eax,0xf9a249df
  406536:	in     eax,0x46
  406538:	xchg   bh,dh
  40653a:	mov    ch,0x24
  40653c:	lds    ecx,FWORD PTR [esi-0x732d7840]
  406542:	push   esp
  406543:	mov    WORD PTR [eax],ds
  406545:	cld    
  406546:	mov    cl,0x3b
  406548:	mov    edx,0xeb1327ac
  40654d:	fwait
  40654e:	xchg   ecx,edx
  406550:	mov    ch,0x33
  406552:	ds sbb bh,ah
  406555:	cmp    eax,DWORD PTR [edi+0x29]
  406558:	arpl   WORD PTR [ebx+0x11],cx
  40655b:	sahf   
  40655c:	fnstenv [eax-0x232aa195]
  406562:	loopne 0x40655c
  406564:	jmp    0x4064f5
  406566:	cmp    bh,bh
  406568:	inc    edx
  406569:	jecxz  0x406574
  40656b:	inc    ecx
  40656c:	xchg   ecx,eax
  40656d:	sub    al,0x9d
  40656f:	xchg   DWORD PTR [eax],ecx
  406571:	xor    bh,BYTE PTR [edi-0x31]
  406574:	sbb    BYTE PTR [eax+0x185c34f3],0x8b
  40657b:	test   al,0x3a
  40657d:	pop    ebp
  40657e:	jne    0x4065c5
  406580:	jmp    0x7a3:0x6ab6a3a1
  406587:	int3   
  406588:	and    al,0xed
  40658a:	add    al,0x97
  40658c:	jge    0x4065c4
  40658e:	add    ch,BYTE PTR [eax-0x41023646]
  406594:	scas   eax,DWORD PTR es:[edi]
  406595:	mov    edx,0xbbb33095
  40659a:	or     DWORD PTR [ebp+0x34],esi
  40659d:	sbb    ebx,DWORD PTR ds:0xc36a5c4
  4065a3:	push   esp
  4065a4:	dec    ecx
  4065a5:	outs   dx,DWORD PTR ds:[esi]
  4065a6:	into   
  4065a7:	daa    
  4065a8:	sub    esi,DWORD PTR [eax+0x33a86151]
  4065ae:	cld    
  4065af:	retf   0xf765
  4065b2:	push   0xffffff99
  4065b4:	hlt    
  4065b5:	push   ss
  4065b6:	(bad)  
  4065b7:	call   0xcf02b212
  4065bc:	into   
  4065bd:	pop    ds
  4065be:	out    dx,al
  4065bf:	cmp    DWORD PTR [esi+0x6b034018],edx
  4065c5:	push   ds
  4065c6:	sbb    DWORD PTR [esi],0xa9ec1a18
  4065cc:	pop    edi
  4065cd:	icebp  
  4065ce:	inc    eax
  4065cf:	lock js 0x40658f
  4065d2:	lahf   
  4065d3:	xor    BYTE PTR [ecx],ch
  4065d5:	pop    DWORD PTR [eax-0x7f]
  4065d8:	jmp    0xeb27:0xd1665600
  4065df:	enter  0x1315,0xc7
  4065e3:	loope  0x40658f
  4065e5:	xor    al,0x22
  4065e7:	or     eax,edi
  4065e9:	mov    BYTE PTR [esi],dl
  4065eb:	in     al,0xf5
  4065ed:	add    cl,BYTE PTR [ebp-0x6f]
  4065f0:	mov    fs,WORD PTR [edi+0x3b]
  4065f3:	sbb    al,0x8f
  4065f5:	imul   edi,edx,0x18
  4065f8:	sbb    eax,0xe6057242
  4065fd:	mov    ah,BYTE PTR [ebx-0x14fca936]
  406603:	inc    ebx
  406604:	int    0x45
  406606:	fucomi st,st(0)
  406608:	push   es
  406609:	cld    
  40660a:	dec    eax
  40660b:	xchg   edx,eax
  40660c:	xchg   ecx,eax
  40660d:	push   ds
  40660e:	jb     0x4065b7
  406610:	inc    BYTE PTR [ebx-0x6d]
  406613:	mov    esp,0xe08d7061
  406618:	ins    DWORD PTR es:[edi],dx
  406619:	mov    cl,0x6f
  40661b:	xchg   esi,eax
  40661c:	(bad)  
  40661d:	repnz mov ebp,0xf5b35c61
  406623:	shl    BYTE PTR [eax-0x16],1
  406626:	lea    esp,[esi-0x4a35c9cb]
  40662c:	adc    al,0xfb
  40662e:	adc    al,0x9f
  406630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406631:	loopne 0x4065e9
  406633:	in     al,dx
  406634:	sbb    ebx,DWORD PTR [ecx-0x14]
  406637:	push   edi
  406638:	xor    al,0x18
  40663a:	adc    ah,BYTE PTR [ebp-0x39]
  40663d:	pushf  
  40663e:	xor    edi,DWORD PTR [eax]
  406640:	bound  esi,QWORD PTR [esp+edi*4]
  406643:	cs fs pop ebp
  406646:	mov    dl,0x30
  406648:	stos   DWORD PTR es:[edi],eax
  406649:	adc    al,0x3f
  40664b:	call   0x1a10:0xa323aa56
  406652:	or     al,0xe
  406654:	ss mov al,0xee
  406657:	inc    ecx
  406658:	adc    ebx,DWORD PTR [eax]
  40665a:	push   ss
  40665b:	sbb    DWORD PTR [ebx+0x35],0xffffffc1
  40665f:	mov    cl,0x2a
  406661:	shl    BYTE PTR [eax],cl
  406663:	xor    ecx,edi
  406665:	out    0x1f,al
  406667:	sub    BYTE PTR [esi+edx*8-0x3e],dh
  40666b:	mov    eax,ds:0x6a5426fa
  406670:	cdq    
  406671:	mov    dh,0x2
  406673:	inc    edi
  406674:	inc    edx
  406675:	ins    BYTE PTR es:[edi],dx
  406676:	(bad)  
  406677:	arpl   WORD PTR [edi-0x15],ax
  40667a:	mov    edi,fs
  40667c:	call   0x244544d
  406681:	jne    0x4066c4
  406683:	mov    WORD PTR [esi],?
  406685:	adc    DWORD PTR [ecx-0xa],ebp
  406688:	jl     0x406667
  40668a:	pusha  
  40668b:	xor    eax,0xb6b07c64
  406690:	outs   dx,BYTE PTR ds:[esi]
  406691:	sub    ecx,edx
  406693:	cmp    esi,esp
  406695:	popf   
  406696:	or     DWORD PTR [ebx-0x5],ebp
  406699:	xchg   DWORD PTR [ecx-0x5422b8df],ebp
  40669f:	push   ebp
  4066a0:	jo     0x406622
  4066a2:	add    eax,0xa8093de2
  4066a7:	add    al,0x50
  4066a9:	sub    BYTE PTR ds:0x785250d4,bl
  4066af:	repnz sub bh,BYTE PTR [edi+0x18]
  4066b3:	pop    ebp
  4066b4:	push   ebx
  4066b5:	mov    esi,DWORD PTR [eax+edi*1-0x71ac190b]
  4066bc:	push   edi
  4066bd:	aad    0xf2
  4066bf:	push   ebp
  4066c0:	mov    esp,eax
  4066c2:	add    dl,BYTE PTR [ebx+0x33]
  4066c5:	adc    al,0x9e
  4066c7:	or     al,0xc4
  4066c9:	icebp  
  4066ca:	arpl   WORD PTR [ebp+0x68],dx
  4066cd:	add    eax,0x4a6ab63e
  4066d2:	ins    DWORD PTR es:[edi],dx
  4066d3:	int    0x24
  4066d5:	sar    esi,cl
  4066d7:	popa   
  4066d8:	jmp    0x7575d748
  4066dd:	mov    eax,0xe2418d5f
  4066e2:	cmp    dh,BYTE PTR [eax+0x46489c47]
  4066e8:	mov    ds:0x925adca3,eax
  4066ed:	pop    edx
  4066ee:	mov    ecx,0xc964466d
  4066f3:	mov    ecx,0x4c76ddb4
  4066f8:	ror    DWORD PTR [esi],cl
  4066fa:	mov    bh,0x18
  4066fc:	mov    eax,0xc33f97c1
  406701:	push   ebp
  406702:	pop    es
  406703:	pusha  
  406704:	div    BYTE PTR [eax]
  406706:	sbb    al,0xf6
  406708:	xlat   BYTE PTR ds:[ebx]
  406709:	cmp    al,0x26
  40670b:	pop    edi
  40670c:	out    0x66,al
  40670e:	add    BYTE PTR [ebx+ebp*8],dl
  406711:	inc    esp
  406712:	loop   0x4066aa
  406714:	and    eax,DWORD PTR [ebp-0x7df54810]
  40671a:	mov    dh,0xd
  40671c:	cld    
  40671d:	adc    al,0xe
  40671f:	sub    eax,0x2946e314
  406724:	cmp    al,0x1b
  406726:	ins    BYTE PTR es:[edi],dx
  406727:	xchg   esp,eax
  406728:	fmul   QWORD PTR [ecx]
  40672a:	push   ss
  40672b:	push   cs
  40672c:	cwde   
  40672d:	xor    eax,0xcafdeba0
  406732:	pushf  
  406733:	mov    esi,0x46c3369d
  406738:	rcl    BYTE PTR [edi+0x5c],1
  40673b:	xchg   edi,eax
  40673c:	mov    bh,0x23
  40673e:	mov    ch,0xf6
  406740:	imul   ecx,DWORD PTR [edx-0x44],0xa23a8bd3
  406747:	sbb    DWORD PTR [esi+0x20],0x23bd2cb7
  40674e:	mov    bl,BYTE PTR [ecx+0x31]
  406751:	or     bl,BYTE PTR [ecx+0x2c88f2ae]
  406757:	shr    BYTE PTR [eax+eiz*1+0x6b41c932],1
  40675e:	stos   BYTE PTR es:[edi],al
  40675f:	gs jp  0x40675e
  406762:	pop    eax
  406763:	dec    ebp
  406764:	outs   dx,DWORD PTR ds:[esi]
  406765:	in     al,0xb7
  406767:	and    DWORD PTR [ecx+0x60],ebp
  40676a:	mov    ebp,0x7e51e318
  40676f:	std    
  406770:	jbe    0x406737
  406772:	retf   
  406773:	pop    ecx
  406774:	mov    DWORD PTR [esi],esp
  406776:	sahf   
  406777:	dec    esp
  406778:	out    dx,al
  406779:	and    eax,0x477840cc
  40677e:	mov    ecx,0x11e20f29
  406783:	(bad)  
  406784:	xchg   esi,eax
  406785:	cmp    DWORD PTR [ebp+0x3a],0x8119082e
  40678c:	cmp    BYTE PTR [eax],dh
  40678e:	out    0x5d,eax
  406790:	xchg   ebp,eax
  406791:	cdq    
  406792:	push   0xffffffb8
  406794:	popa   
  406795:	daa    
  406796:	ret    0x6660
  406799:	push   es
  40679a:	inc    eax
  40679b:	mov    ecx,0x3b0da8ec
  4067a0:	inc    eax
  4067a1:	hlt    
  4067a2:	sbb    eax,DWORD PTR [edx]
  4067a4:	sub    esi,DWORD PTR [eax-0xa]
  4067a7:	frstor [edx]
  4067a9:	xchg   ecx,eax
  4067aa:	inc    ecx
  4067ab:	cmp    BYTE PTR [ecx+0x3657fdf2],al
  4067b1:	jp     0x4067ca
  4067b3:	inc    esi
  4067b4:	jg     0x40682e
  4067b6:	xor    BYTE PTR [ebx-0x6ba348bf],cl
  4067bc:	in     eax,dx
  4067bd:	(bad)  
  4067be:	sar    ebx,0x19
  4067c1:	stos   BYTE PTR es:[edi],al
  4067c2:	(bad)  
  4067c3:	pop    esi
  4067c4:	cmp    BYTE PTR [edx],0x28
  4067c7:	sub    ah,BYTE PTR [edi]
  4067c9:	pop    edx
  4067ca:	xor    al,0x7e
  4067cc:	or     BYTE PTR [eax+0x2d],dl
  4067cf:	dec    eax
  4067d0:	inc    ebx
  4067d1:	cld    
  4067d2:	in     eax,dx
  4067d3:	push   cs
  4067d4:	adc    dl,cl
  4067d6:	clc    
  4067d7:	xor    cl,BYTE PTR [ebp+0x709a88d9]
  4067dd:	iret   
  4067de:	(bad)  
  4067e0:	push   cs
  4067e1:	call   0x7262c283
  4067e6:	retf   
  4067e7:	mov    ebp,0x7efe4ffd
  4067ec:	jbe    0x4067cd
  4067ee:	ret    0xe0ba
  4067f1:	outs   dx,BYTE PTR ds:[esi]
  4067f2:	test   DWORD PTR [eax+ecx*8+0x22],esi
  4067f6:	sbb    eax,0x32f46210
  4067fb:	jge    0x40677f
  4067fd:	fistp  QWORD PTR [edx]
  4067ff:	scas   eax,DWORD PTR es:[edi]
  406800:	xor    bl,0x9c
  406803:	lods   eax,DWORD PTR ds:[esi]
  406804:	adc    bh,BYTE PTR [ecx+0xb664863]
  40680a:	std    
  40680b:	sub    BYTE PTR [ecx+0x1d],dh
  40680e:	mov    cl,0x3b
  406810:	lods   al,BYTE PTR ds:[esi]
  406811:	mov    ecx,0x77cd0f04
  406816:	outs   dx,DWORD PTR ds:[esi]
  406817:	jne    0x4067f3
  406819:	mov    cl,0x98
  40681b:	ret    0x310e
  40681e:	sub    BYTE PTR [ecx+0x72],ch
  406821:	and    eax,0xfb31c673
  406826:	and    ebx,edi
  406828:	inc    esp
  406829:	fwait
  40682a:	add    al,0xf4
  40682c:	scas   eax,DWORD PTR es:[edi]
  40682d:	push   0xffffffe7
  40682f:	fwait
  406830:	repz mov eax,ds:0xb0ecb0a
  406836:	or     al,BYTE PTR [esi-0x23]
  406839:	xchg   edx,eax
  40683a:	idiv   DWORD PTR [ebx]
  40683c:	add    BYTE PTR [eax-0x40],ah
  40683f:	cmp    al,0xdb
  406841:	cmp    ecx,DWORD PTR [edi]
  406843:	enter  0x2b2a,0x51
  406847:	das    
  406848:	adc    BYTE PTR [ecx+0x28836ca5],0xe0
  40684f:	imul   ecx,esp,0xc9f6ab0d
  406855:	push   0x23
  406857:	int3   
  406858:	popf   
  406859:	cs dec edx
  40685b:	in     al,dx
  40685c:	gs dec esp
  40685e:	mov    eax,ds:0x67b3fdfb
  406863:	cdq    
  406864:	cmc    
  406865:	pop    ds
  406866:	(bad)  
  406867:	or     ebx,DWORD PTR [eax-0x13]
  40686a:	stc    
  40686b:	pop    ebp
  40686c:	add    ecx,DWORD PTR [esp+ecx*8+0x1d]
  406870:	mov    ecx,esi
  406872:	popa   
  406873:	push   eax
  406874:	ret    
  406875:	cmp    eax,0xc5416525
  40687a:	cmp    DWORD PTR [esi],eax
  40687c:	popa   
  40687d:	inc    edi
  40687e:	sbb    ecx,DWORD PTR ds:0x8f1d5e90
  406884:	push   es
  406885:	test   BYTE PTR [esi+0x68],bl
  406888:	ja     0x406815
  40688a:	add    bh,bh
  40688c:	cdq    
  40688d:	inc    edi
  40688e:	sub    bh,dh
  406890:	mul    DWORD PTR [edi-0x4c]
  406893:	fdivr  QWORD PTR [edx]
  406895:	loope  0x4068d5
  406897:	std    
  406898:	push   ebx
  406899:	push   edi
  40689a:	ret    
  40689b:	dec    esp
  40689c:	and    BYTE PTR ds:0xc9941e2d,dh
  4068a2:	icebp  
  4068a3:	add    ecx,DWORD PTR [eax-0x3250ef7f]
  4068a9:	dec    ebp
  4068aa:	inc    ebx
  4068ab:	sbb    BYTE PTR [eax+0x8f1a870],bl
  4068b1:	stc    
  4068b2:	or     eax,0xa86ec4a0
  4068b7:	jp     0x40683f
  4068b9:	jae    0x406846
  4068bb:	scas   al,BYTE PTR es:[edi]
  4068bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068bd:	out    0x7f,al
  4068bf:	pop    edi
  4068c0:	adc    dh,BYTE PTR [edi-0x2a147208]
  4068c6:	scas   eax,DWORD PTR es:[edi]
  4068c7:	dec    edx
  4068c8:	pop    ebx
  4068c9:	jmp    FWORD PTR [ebx+ebp*1]
  4068cc:	ror    esi,cl
  4068ce:	adc    cl,BYTE PTR [edx]
  4068d0:	fdiv   DWORD PTR [esi-0x198f6af9]
  4068d6:	push   eax
  4068d7:	sbb    esp,eax
  4068d9:	leave  
  4068da:	das    
  4068db:	pop    ds
  4068dc:	stos   BYTE PTR es:[edi],al
  4068dd:	cmc    
  4068de:	or     BYTE PTR [ebx-0xc],al
  4068e1:	mov    ah,0xf0
  4068e3:	xchg   ebp,eax
  4068e4:	adc    bh,BYTE PTR [edi-0xaebf951]
  4068ea:	les    edx,FWORD PTR [ecx+0x73]
  4068ed:	fucomi st,st(3)
  4068ef:	jl     0x4068fb
  4068f1:	jns    0x40689a
  4068f3:	mov    edx,0x497ad801
  4068f8:	mov    al,ds:0x32f2aa5c
  4068fd:	mov    BYTE PTR ds:0x3ab9b555,dl
  406903:	dec    esi
  406904:	inc    ebp
  406905:	mov    DWORD PTR [ebx+0x62],ebx
  406908:	sqrtps xmm4,xmm0
  40690b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40690c:	xchg   BYTE PTR [esi],ah
  40690e:	or     al,0x1c
  406910:	mov    bh,dh
  406912:	hlt    
  406913:	xchg   esp,eax
  406914:	push   esi
  406915:	sbb    edx,0x728c0c10
  40691b:	jns    0x4068eb
  40691d:	jno    0x406979
  40691f:	mov    eax,ds:0x4815ee48
  406924:	jmp    0x2c553c4b
  406929:	ja     0x4068dd
  40692b:	pushf  
  40692c:	out    0x92,eax
  40692e:	sub    BYTE PTR [ecx+0x33a8608b],dh
  406934:	mov    DWORD PTR [edi-0x36],0x292dd571
  40693b:	sub    edx,DWORD PTR [ecx]
  40693d:	jno    0x4068c2
  40693f:	or     DWORD PTR [esi-0x77],edi
  406942:	xor    bl,BYTE PTR [ecx-0x2]
  406945:	xor    edi,DWORD PTR [edi+0x70]
  406948:	push   edi
  406949:	push   es
  40694a:	mov    dh,BYTE PTR ds:0x32b0d76c
  406950:	jge    0x40692d
  406952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406953:	inc    edi
  406954:	fsub   st(2),st
  406956:	sub    BYTE PTR [eax],al
  406958:	out    0x7a,eax
  40695a:	mov    bh,0x4b
  40695c:	add    al,0xe8
  40695e:	adc    ebp,DWORD PTR [ebx]
  406960:	pop    edi
  406961:	pop    ebx
  406962:	inc    edi
  406963:	xor    dh,bl
  406965:	jp     0x406973
  406967:	scas   al,BYTE PTR es:[edi]
  406968:	pop    edi
  406969:	loop   0x4069d0
  40696b:	adc    BYTE PTR [eax],dl
  40696d:	push   edi
  40696e:	push   edx
  40696f:	sbb    BYTE PTR [esi+eiz*8],bh
  406972:	pop    edi
  406973:	xor    DWORD PTR [ebx+0x545631d1],ebp
  406979:	or     eax,0x7ff9e24a
  40697e:	sar    DWORD PTR [ebx+0x7253db5f],1
  406984:	lea    eax,[ecx]
  406986:	dec    esp
  406987:	sub    al,BYTE PTR [edx+0x60]
  40698a:	pop    ebp
  40698b:	call   0x6e7f651b
  406990:	ja     0x406a0d
  406992:	fisub  WORD PTR [edx+0x2]
  406995:	fldlg2 
  406997:	jmp    0x879f056c
  40699c:	mov    edx,0xebcc5bd5
  4069a1:	xchg   ebp,eax
  4069a2:	addr16 mov dl,0xa0
  4069a5:	or     esp,ebx
  4069a7:	sbb    DWORD PTR ds:0xe17b186f,esi
  4069ad:	add    eax,0xe3f23e15
  4069b2:	pop    ds
  4069b3:	in     eax,0x26
  4069b5:	repz push eax
  4069b7:	mov    bh,0x1a
  4069b9:	pop    edi
  4069ba:	test   eax,0x7bfefe2
  4069bf:	stos   BYTE PTR es:[edi],al
  4069c0:	ror    bl,cl
  4069c2:	adc    BYTE PTR [ebp-0x7288ed49],ah
  4069c8:	ret    0xfe79
  4069cb:	outs   dx,DWORD PTR ds:[esi]
  4069cc:	jno    0x406a13
  4069ce:	fist   DWORD PTR [ebp+ebx*4-0x42]
  4069d2:	daa    
  4069d3:	mov    ch,0x83
  4069d5:	mov    WORD PTR [edx-0x52a64cc2],?
  4069db:	adc    bl,BYTE PTR [ebp+0x4f084a9]
  4069e1:	popf   
  4069e2:	xor    cl,BYTE PTR [ebx-0x12]
  4069e5:	jbe    0x406980
  4069e7:	sub    bh,BYTE PTR [ebx-0x6d]
  4069ea:	dec    esp
  4069eb:	xor    al,0xfa
  4069ed:	adc    al,cl
  4069ef:	arpl   WORD PTR [edi],si
  4069f1:	pop    ecx
  4069f2:	pop    ds
  4069f3:	test   DWORD PTR [edx+ebp*8+0x5189e46f],ebp
  4069fa:	out    dx,al
  4069fb:	and    esi,esi
  4069fd:	mov    edi,0x46b74a38
  406a02:	sbb    BYTE PTR [edi+edx*1+0x6916a5a7],bl
  406a09:	retf   0x4f9b
  406a0c:	jl     0x406a8b
  406a0e:	stc    
  406a0f:	push   ebp
  406a10:	and    edx,esi
  406a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a13:	adc    bh,BYTE PTR [ebx+0x718f083e]
  406a19:	leave  
  406a1a:	cmc    
  406a1b:	mov    ah,0x61
  406a1d:	out    0x15,al
  406a1f:	push   eax
  406a20:	dec    ecx
  406a21:	or     eax,DWORD PTR [ecx]
  406a23:	icebp  
  406a24:	lahf   
  406a25:	std    
  406a26:	sbb    BYTE PTR [edx+0x9],0x97
  406a2a:	dec    edi
  406a2b:	leave  
  406a2c:	ins    DWORD PTR es:[edi],dx
  406a2d:	jnp    0x4069e7
  406a2f:	xchg   esi,eax
  406a30:	in     al,dx
  406a31:	fnstenv [edi+ebp*8+0x212b28a4]
  406a38:	pop    ebp
  406a39:	pop    edx
  406a3a:	push   0xc66e2f6e
  406a3f:	mov    dh,0xd8
  406a41:	sbb    al,0x88
  406a43:	loopne 0x4069e7
  406a45:	mov    edi,0x8e49a694
  406a4a:	shl    ebx,1
  406a4c:	ja     0x406a04
  406a4e:	cld    
  406a4f:	push   esi
  406a50:	pop    ecx
  406a51:	aas    
  406a52:	cld    
  406a53:	dec    esp
  406a54:	jno    0x406a5e
  406a56:	xchg   esi,eax
  406a57:	test   eax,0xe40edd85
  406a5c:	iret   
  406a5d:	mov    al,0xa2
  406a5f:	sub    BYTE PTR [ecx-0x3d],al
  406a62:	adc    ch,dl
  406a64:	mov    bl,0xc3
  406a66:	inc    edx
  406a67:	sbb    BYTE PTR [edi+ebx*4-0x20431dfa],dl
  406a6e:	sub    eax,esi
  406a70:	jo     0x406adc
  406a72:	scas   al,BYTE PTR es:[edi]
  406a73:	xchg   ch,ah
  406a75:	out    dx,eax
  406a76:	sub    al,0x97
  406a78:	dec    ebx
  406a79:	ffree  st(2)
  406a7b:	imul   ecx,DWORD PTR [edi],0x60ea9d9a
  406a81:	mov    ch,0x5d
  406a83:	into   
  406a84:	pusha  
  406a85:	fstp   DWORD PTR [esi-0x7e9fabe3]
  406a8b:	test   DWORD PTR [esi],ebp
  406a8d:	pop    eax
  406a8e:	mov    esp,0xbcd5010f
  406a93:	ret    
  406a94:	and    al,0xf4
  406a96:	addr16 jbe 0x406aa3
  406a99:	paddsw mm2,QWORD PTR [edi]
  406a9c:	(bad)  
  406a9d:	daa    
  406a9e:	lods   eax,DWORD PTR ds:[esi]
  406a9f:	mov    ?,eax
  406aa1:	sub    eax,0x11a46e11
  406aa6:	cmp    eax,0xc325351d
  406aab:	inc    ecx
  406aac:	ins    DWORD PTR es:[edi],dx
  406aad:	xchg   ebx,eax
  406aae:	(bad)  
  406aaf:	adc    dl,ch
  406ab1:	inc    esp
  406ab2:	mov    WORD PTR [ebp+0x7e9cb1ea],ds
  406ab8:	out    dx,eax
  406ab9:	add    DWORD PTR [esi+0x37],0x1dbdc9ac
  406ac0:	iret   
  406ac1:	sub    eax,0x973e5193
  406ac6:	adc    eax,DWORD PTR [ebx-0x955ecc3]
  406acc:	push   ebp
  406acd:	jne    0x406aa3
  406acf:	es cmp eax,0xfb5329d9
  406ad5:	adc    esp,0x3c14168a
  406adb:	fild   DWORD PTR [esi+0x593eddd4]
  406ae1:	shl    BYTE PTR [ecx+0x44],1
  406ae4:	test   edx,esi
  406ae6:	(bad)  [ecx-0x2d]
  406ae9:	inc    edi
  406aea:	imul   esp,DWORD PTR [esi+0x1b],0x4e223a18
  406af1:	jl     0x406a85
  406af3:	int    0x8
  406af5:	adc    dl,BYTE PTR [ebx]
  406af7:	ret    0xe356
  406afa:	xor    eax,0xf9dbb036
  406aff:	pop    ebp
  406b00:	jp     0x406b19
  406b02:	adc    BYTE PTR [eax+0x2c490345],ah
  406b08:	gs mov al,0xc8
  406b0b:	push   0x5eb94166
  406b10:	mov    bl,0xac
  406b12:	dec    esi
  406b13:	imul   esp,DWORD PTR [edi-0x6c],0x96b3a7fc
  406b1a:	loope  0x406b2d
  406b1c:	and    ah,BYTE PTR [eax-0x7982f67]
  406b22:	(bad)  [edx]
  406b24:	rcr    ah,1
  406b26:	clc    
  406b27:	and    BYTE PTR [edx+0x8],0xeb
  406b2b:	or     eax,0xb2dd062c
  406b30:	cs jg  0x406adf
  406b33:	in     eax,0xf6
  406b35:	stos   DWORD PTR es:[edi],eax
  406b36:	dec    ebp
  406b37:	es leave 
  406b39:	cmp    eax,0xcd57a3a9
  406b3e:	sub    edx,DWORD PTR [ebx+0x32]
  406b41:	sub    bl,BYTE PTR [ecx-0x2e3440d8]
  406b47:	cmc    
  406b48:	ds popf 
  406b4a:	ins    DWORD PTR es:[edi],dx
  406b4b:	add    al,0x94
  406b4d:	push   esp
  406b4e:	jmp    DWORD PTR [ecx-0x53]
  406b51:	or     eax,0x986bfd9a
  406b56:	mov    ebx,0x2cf7e6ad
  406b5b:	int    0x37
  406b5d:	or     BYTE PTR [eax-0x6b47d24],bl
  406b63:	inc    esi
  406b64:	or     BYTE PTR [ebx],0xb9
  406b67:	pop    ebx
  406b68:	mov    cl,BYTE PTR [edi+eiz*4-0x14]
  406b6c:	sbb    al,0x53
  406b6e:	mov    DWORD PTR [edi+0x51],ebp
  406b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b72:	pop    DWORD PTR [ebp-0x34472bf8]
  406b78:	mov    bl,0xae
  406b7a:	ret    0xf9ce
  406b7d:	mov    edi,0xece2c574
  406b82:	test   al,0xbe
  406b84:	aam    0x63
  406b86:	adc    al,0x58
  406b88:	lea    edi,ds:0x573ebebf
  406b8e:	adc    DWORD PTR [ecx-0x64],ebx
  406b91:	push   esi
  406b92:	sub    BYTE PTR [edi-0x38bc510b],ch
  406b98:	mov    edi,0x4839db6c
  406b9d:	test   al,0xbd
  406b9f:	inc    edi
  406ba0:	push   edi
  406ba1:	ret    
  406ba2:	push   ecx
  406ba3:	cmp    BYTE PTR [eax-0x54],ah
  406ba6:	cdq    
  406ba7:	scas   al,BYTE PTR es:[edi]
  406ba8:	cli    
  406ba9:	xchg   BYTE PTR [edi+ebp*2+0x1e],al
  406bad:	jle    0x406bd2
  406baf:	adc    BYTE PTR [ebp+0x72],bh
  406bb2:	js     0x406b8e
  406bb4:	xor    DWORD PTR [edx+0x23b4e34],ebp
  406bba:	push   ebx
  406bbb:	fcomi  st,st(1)
  406bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bbe:	(bad)  
  406bbf:	loopne 0x406c3c
  406bc1:	and    ch,BYTE PTR [edi-0x60]
  406bc4:	xor    al,0x30
  406bc6:	rol    BYTE PTR [eax+ecx*8+0x524b636a],0xe9
  406bce:	outs   dx,DWORD PTR ds:[esi]
  406bcf:	mov    edi,0xde207850
  406bd4:	fstp   TBYTE PTR [ebx+0x77]
  406bd7:	jmp    0x406bf5
  406bd9:	mov    edi,0x1115a55
  406bde:	jne    0x406c3b
  406be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be1:	inc    edx
  406be2:	out    0x9a,eax
  406be4:	cmp    BYTE PTR ds:0x96ceeaf,bh
  406bea:	dec    edx
  406beb:	cmp    eax,0x9d0b5a45
  406bf0:	ror    BYTE PTR [ecx],cl
  406bf2:	mov    ds:0x34bca1d1,eax
  406bf7:	push   ds
  406bf8:	pop    es
  406bf9:	lea    esi,[ecx+0x4e]
  406bfc:	cmp    al,0x61
  406bfe:	xchg   edi,eax
  406bff:	mov    cl,0x12
  406c01:	dec    edi
  406c02:	inc    esi
  406c03:	stc    
  406c04:	push   ebx
  406c05:	mov    bl,BYTE PTR [esi+eax*2+0x262e72dd]
  406c0c:	push   edx
  406c0d:	push   DWORD PTR [eax*8+0x2ae20c01]
  406c14:	fs ins BYTE PTR es:[edi],dx
  406c16:	jbe    0x406bdd
  406c18:	xchg   DWORD PTR [eax],edx
  406c1a:	mov    ah,0xd8
  406c1c:	int3   
  406c1d:	mov    bh,0x2d
  406c1f:	adc    al,0x75
  406c21:	pop    edi
  406c22:	xor    al,BYTE PTR [edx]
  406c24:	inc    edx
  406c25:	adc    esp,ebx
  406c27:	mov    dl,0x2b
  406c29:	xor    al,0xd2
  406c2b:	inc    edi
  406c2c:	xchg   esi,eax
  406c2d:	mov    al,BYTE PTR [ebx-0x39]
  406c30:	dec    edi
  406c31:	pop    esi
  406c32:	mov    eax,ds:0x493e74ad
  406c37:	mov    dh,0xc9
  406c39:	xchg   DWORD PTR [eax-0x19],edi
  406c3c:	inc    BYTE PTR ds:0xfd2139fd
  406c42:	add    eax,0x8a69bd20
  406c47:	fs sbb eax,0xc2f9ac6a
  406c4d:	pop    ecx
  406c4e:	fstp   QWORD PTR [edi]
  406c50:	jp     0x406cbd
  406c52:	nop
  406c53:	mov    WORD PTR [eax+0x1df0b146],fs
  406c59:	sub    DWORD PTR [edx],ebx
  406c5b:	mov    edi,0xf35cd5b8
  406c60:	mov    edi,0x5342c6e2
  406c65:	mov    ebx,0x4899565
  406c6a:	mov    eax,ds:0x55ee7546
  406c6f:	scas   eax,DWORD PTR es:[edi]
  406c70:	or     eax,0x42078107
  406c75:	pop    es
  406c76:	or     al,0x1b
  406c78:	add    ah,BYTE PTR [ebx+0x2883dbec]
  406c7e:	mov    cs,WORD PTR [ebx]
  406c80:	inc    ecx
  406c81:	daa    
  406c82:	call   ebp
  406c84:	inc    edx
  406c85:	pop    esi
  406c86:	in     eax,0x1b
  406c88:	test   DWORD PTR [eax],ebx
  406c8a:	add    al,0x82
  406c8c:	dec    edx
  406c8d:	daa    
  406c8e:	inc    ebx
  406c8f:	mov    es,ecx
  406c91:	adc    eax,0xd1c282bb
  406c96:	xchg   esp,eax
  406c97:	ffree  st(6)
  406c99:	(bad)  
  406c9a:	pop    edx
  406c9b:	jg     0x406c20
  406c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c9e:	(bad)  
  406c9f:	aas    
  406ca0:	in     eax,dx
  406ca1:	(bad)  
  406ca2:	iret   
  406ca3:	out    dx,al
  406ca4:	push   0xa0c0c704
  406ca9:	test   eax,0x15c6b075
  406cae:	mov    al,ds:0xdb550cb5
  406cb3:	pop    esp
  406cb4:	jb     0x406cd7
  406cb6:	neg    BYTE PTR [ecx-0x77]
  406cb9:	cs pop es
  406cbb:	ret    
  406cbc:	xchg   ebx,eax
  406cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbe:	and    dl,bl
  406cc0:	mov    ebx,0xcc51d115
  406cc5:	or     eax,0xc460cfbe
  406cca:	aad    0xdc
  406ccc:	cmp    eax,0xfbdebc83
  406cd1:	jl     0x406d0d
  406cd3:	and    dh,BYTE PTR fs:[edi+ebp*4+0x9afc5f3]
  406cdb:	inc    edx
  406cdc:	mov    edi,0x4777d42a
  406ce1:	adc    DWORD PTR [eax-0x6d],ebx
  406ce4:	and    eax,DWORD PTR [edx+0x6cea0ce9]
  406cea:	xchg   esi,eax
  406ceb:	or     bh,dl
  406ced:	iret   
  406cee:	hlt    
  406cef:	ror    BYTE PTR [edx*1-0x7211fdf2],0xb
  406cf7:	aad    0xe7
  406cf9:	jge    0x406cf4
  406cfb:	lahf   
  406cfc:	shr    BYTE PTR [ebx+0x527dee8d],0x50
  406d03:	js     0x406cc7
  406d05:	loopne 0x406cb9
  406d07:	loopne 0x406d66
  406d09:	repnz mov ebx,0xd73bf75d
  406d0f:	cmp    eax,0x4279e697
  406d14:	mov    BYTE PTR ds:0xbb3efb79,bl
  406d1a:	push   ecx
  406d1b:	imul   eax,ebp,0xffffffb2
  406d1e:	imul   ebp,esi,0xffffff9e
  406d21:	mov    ecx,0xabe617ad
  406d26:	pop    esi
  406d27:	xor    al,0x52
  406d29:	rcr    BYTE PTR [ebp-0x1c1d455e],cl
  406d2f:	mov    bh,0x85
  406d31:	fwait
  406d32:	cld    
  406d33:	stc    
  406d34:	or     ah,dh
  406d36:	ins    BYTE PTR es:[edi],dx
  406d37:	add    ebp,DWORD PTR [ecx]
  406d39:	cmp    cl,bh
  406d3b:	or     edx,eax
  406d3d:	jle    0x406da8
  406d3f:	and    al,0x19
  406d41:	adc    eax,ebx
  406d43:	mov    ?,ecx
  406d45:	fdiv   DWORD PTR [ebx+0x1c]
  406d48:	fiadd  DWORD PTR [eax-0x3cc73aad]
  406d4e:	pop    edi
  406d4f:	jl     0x406ce7
  406d51:	adc    ebp,DWORD PTR [edx+0x17]
  406d54:	xchg   edi,eax
  406d55:	in     eax,0xca
  406d57:	fistp  DWORD PTR [eax+eiz*8]
  406d5a:	sbb    al,0x22
  406d5c:	das    
  406d5d:	or     al,0x39
  406d5f:	sub    eax,0x5dedc4b0
  406d64:	daa    
  406d65:	fisttp WORD PTR [ebp+0x46]
  406d68:	cs call 0x9e4357f2
  406d6e:	push   ecx
  406d6f:	fcmovnu st,st(2)
  406d71:	ss loopne 0x406d6b
  406d74:	pop    esp
  406d75:	xchg   esi,eax
  406d76:	enter  0x68d4,0x9e
  406d7a:	jo     0x406d0f
  406d7c:	jp     0x406df5
  406d7e:	je     0x406db0
  406d80:	outs   dx,DWORD PTR ds:[esi]
  406d81:	jecxz  0x406d78
  406d83:	sbb    DWORD PTR [eax],eax
  406d85:	fisttp DWORD PTR [eax+0x65]
  406d88:	repnz sbb bh,0x90
  406d8c:	not    DWORD PTR [ecx-0x19]
  406d8f:	in     eax,dx
  406d90:	push   esi
  406d91:	inc    eax
  406d92:	push   ecx
  406d93:	fwait
  406d94:	sbb    DWORD PTR [ebx-0x5f],ebp
  406d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d98:	push   ss
  406d99:	jge    0x406dbe
  406d9b:	pop    eax
  406d9c:	in     eax,dx
  406d9d:	fdiv   QWORD PTR [edi-0x51]
  406da0:	sbb    eax,0x42ae8184
  406da5:	xor    eax,DWORD PTR [ecx]
  406da7:	mov    bh,0xe6
  406da9:	mov    esp,0x2f2698f6
  406dae:	push   0x77
  406db0:	mov    dh,0x74
  406db2:	add    edx,edx
  406db4:	mov    edi,0xde28808e
  406db9:	das    
  406dba:	xchg   edi,eax
  406dbb:	ss push ds
  406dbd:	sub    al,0xb0
  406dbf:	xchg   ebx,eax
  406dc0:	cmp    DWORD PTR [edx],edx
  406dc2:	int3   
  406dc3:	sbb    bl,ah
  406dc5:	sub    ah,BYTE PTR [edx+0x78]
  406dc8:	stos   BYTE PTR es:[edi],al
  406dc9:	dec    esp
  406dca:	ins    DWORD PTR es:[edi],dx
  406dcb:	cmp    ecx,0x7a
  406dce:	or     al,0x69
  406dd0:	js     0x406e0f
  406dd2:	inc    edx
  406dd3:	adc    bl,BYTE PTR [ebx-0x5a030266]
  406dd9:	repz loope 0x406d5d
  406ddc:	inc    esp
  406ddd:	add    al,0x2
  406ddf:	fidivr WORD PTR [ebp-0x67]
  406de2:	dec    ecx
  406de3:	cwde   
  406de4:	mov    fs,WORD PTR [edx]
  406de6:	std    
  406de7:	test   BYTE PTR [eax+0x7f57c15e],0x10
  406dee:	lock and eax,0xfddf09e2
  406df4:	adc    eax,0xc6e15cd5
  406df9:	inc    ecx
  406dfa:	nop
  406dfb:	mov    bh,0xe2
  406dfd:	in     al,0xb2
  406dff:	ret    0x3ed7
  406e02:	hlt    
  406e03:	mov    esi,0x79e82221
  406e08:	mov    dl,0x6a
  406e0a:	gs and bl,ch
  406e0d:	add    BYTE PTR [ebp+0x23],0x32
  406e11:	jecxz  0x406d9c
  406e13:	cwde   
  406e14:	mov    gs,ecx
  406e16:	adc    DWORD PTR [edx-0x309938cb],edi
  406e1c:	sbb    DWORD PTR [esp+edi*1-0x462b3524],ecx
  406e23:	fstp   DWORD PTR [ebp-0x2ac86ed0]
  406e29:	(bad)  [eax+0x7a621d7c]
  406e2f:	sar    DWORD PTR [edx-0x2f5290da],0xf6
  406e36:	in     eax,0x23
  406e38:	mov    cl,0xa8
  406e3a:	xchg   edx,eax
  406e3b:	push   eax
  406e3c:	jmp    0x89c0:0x722ec5b5
  406e43:	inc    edi
  406e44:	(bad)  
  406e46:	mov    eax,0x1ccda75
  406e4b:	ret    
  406e4c:	(bad)  
  406e4d:	rol    BYTE PTR [eax-0x60],1
  406e50:	sbb    eax,0xe1534293
  406e55:	inc    esp
  406e56:	dec    ebx
  406e57:	je     0x406de9
  406e59:	(bad)
  406e5c:	xor    BYTE PTR [eax+ebx*4+0x1da60be4],0x60
  406e64:	xlat   BYTE PTR ds:[ebx]
  406e65:	das    
  406e66:	push   es
  406e67:	pop    esi
  406e68:	cs pop eax
  406e6a:	pop    ebp
  406e6b:	scas   al,BYTE PTR es:[edi]
  406e6c:	jl     0x406e8a
  406e6e:	inc    esi
  406e6f:	lahf   
  406e70:	push   0xffffffc8
  406e72:	ret    0x9768
  406e75:	pushf  
  406e76:	shr    bl,cl
  406e78:	sbb    al,0xf3
  406e7a:	sbb    al,0x6d
  406e7c:	pop    ebx
  406e7d:	sbb    ebp,ebp
  406e7f:	repz das 
  406e81:	xchg   edi,eax
  406e82:	add    ebx,eax
  406e84:	data16 mov bl,0xf0
  406e87:	xchg   esp,eax
  406e88:	jmp    0x1a16906d
  406e8d:	cs mov bl,0xa1
  406e90:	out    0xb6,al
  406e92:	ror    DWORD PTR [ebx],1
  406e94:	aas    
  406e95:	dec    ecx
  406e96:	inc    eax
  406e97:	ja     0x406ee4
  406e99:	add    ebx,ebp
  406e9b:	popa   
  406e9c:	add    eax,DWORD PTR ds:0xb11e2fcc
  406ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea3:	jle    0x406e99
  406ea5:	inc    ecx
  406ea6:	jge    0x406ebd
  406ea8:	push   ds
  406ea9:	add    ecx,eax
  406eab:	mov    eax,ds:0x15c3f0c6
  406eb0:	(bad)  [ebp+0x45]
  406eb3:	(bad)  
  406eb4:	jo     0x8cfed847
  406eba:	ja     0x406f0a
  406ebc:	in     al,dx
  406ebd:	or     BYTE PTR [eax+0x42e1f0d],dl
  406ec3:	leave  
  406ec4:	pop    ebx
  406ec5:	nop
  406ec6:	inc    esi
  406ec7:	jp     0x406e8f
  406ec9:	in     eax,0x57
  406ecb:	in     eax,dx
  406ecc:	pushf  
  406ecd:	lds    ecx,FWORD PTR [ebx]
  406ecf:	pop    ds
  406ed0:	sti    
  406ed1:	sbb    al,BYTE PTR ds:0x13e65ae2
  406ed7:	push   esi
  406ed8:	jmp    0xce2a:0x3aa5f39a
  406edf:	ror    DWORD PTR [edx-0x73],cl
  406ee2:	xor    al,0x16
  406ee4:	inc    esp
  406ee5:	rol    eax,cl
  406ee7:	adc    bl,BYTE PTR [ecx+0x200e8ac8]
  406eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eee:	loop   0x406f23
  406ef0:	aas    
  406ef1:	sbb    al,0xfa
  406ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef4:	fidiv  WORD PTR [eax+0x47]
  406ef7:	mov    ecx,0xe9e3a57
  406efc:	pop    edi
  406efd:	jmp    0x406f70
  406eff:	pop    ds
  406f00:	jle    0x406ec3
  406f02:	sub    eax,ebx
  406f04:	sub    al,0xce
  406f06:	ret    0x593c
  406f09:	lock stc 
  406f0b:	hlt    
  406f0c:	sti    
  406f0d:	mov    bh,0xae
  406f0f:	fbstp  TBYTE PTR [edi]
  406f11:	in     al,0x66
  406f13:	(bad)  
  406f14:	xor    bh,BYTE PTR [eax]
  406f16:	lods   eax,DWORD PTR ds:[esi]
  406f17:	cwde   
  406f18:	pop    ebp
  406f19:	shl    edi,0x88
  406f1c:	jle    0x406f22
  406f1e:	loop   0x406eba
  406f20:	ret    
  406f21:	rcl    ebp,1
  406f23:	xor    DWORD PTR [eax],edi
  406f25:	(bad)  
  406f27:	aas    
  406f28:	inc    ebp
  406f29:	add    DWORD PTR [ebp-0x19],edi
  406f2c:	and    al,0xd1
  406f2e:	push   cs
  406f2f:	cwde   
  406f30:	lds    esp,FWORD PTR [edx]
  406f32:	adc    al,0x90
  406f34:	dec    edx
  406f35:	mov    dl,0xcf
  406f37:	int    0x3f
  406f39:	sub    al,ch
  406f3b:	cmp    eax,0xafd34767
  406f40:	xchg   BYTE PTR [esi-0x3d],bl
  406f43:	jne    0x406fa6
  406f45:	mov    ebx,0x6e9dff87
  406f4a:	push   ebp
  406f4b:	xor    DWORD PTR [ecx+0x1e],eax
  406f4e:	outs   dx,BYTE PTR ds:[esi]
  406f4f:	dec    esi
  406f50:	rcl    BYTE PTR [edx+0x64],0x35
  406f54:	xchg   ebp,eax
  406f55:	std    
  406f56:	xchg   DWORD PTR [esp+ecx*4],ebx
  406f59:	pop    ss
  406f5a:	push   ecx
  406f5b:	enter  0x2882,0x3d
  406f5f:	shr    BYTE PTR [ebx],cl
  406f61:	sahf   
  406f62:	outs   dx,BYTE PTR ds:[esi]
  406f63:	fadd   DWORD PTR [ebx]
  406f65:	and    bl,bh
  406f67:	cmp    BYTE PTR [esi+ebx*2+0x7d7e1ea],ch
  406f6e:	imul   esi,esi,0xdcb62797
  406f74:	dec    esi
  406f75:	jmp    0x270a:0x7f2a473a
  406f7c:	mov    al,0xa6
  406f7e:	xchg   ecx,eax
  406f7f:	xlat   BYTE PTR ds:[ebx]
  406f80:	mov    BYTE PTR [esi+0x4b79bc7c],ah
  406f86:	nop
  406f87:	les    ebp,FWORD PTR [eax+0xc]
  406f8a:	retf   
  406f8b:	xor    ch,BYTE PTR [ecx-0x67]
  406f8e:	adc    bl,BYTE PTR [edi]
  406f90:	aas    
  406f91:	pop    edx
  406f92:	leave  
  406f93:	outs   dx,BYTE PTR ds:[esi]
  406f94:	rcr    BYTE PTR [eax+0x71],0xa1
  406f98:	stos   DWORD PTR es:[edi],eax
  406f99:	in     al,0x8b
  406f9b:	cld    
  406f9c:	lock enter 0x430b,0x7b
  406fa1:	pusha  
  406fa2:	fs das 
  406fa4:	pop    es
  406fa5:	mov    esp,0xbed832d8
  406faa:	aaa    
  406fab:	add    BYTE PTR [edx+0x71],dh
  406fae:	(bad)  
  406faf:	ss in  al,dx
  406fb1:	scas   al,BYTE PTR es:[edi]
  406fb2:	sbb    al,0xb4
  406fb4:	in     eax,dx
  406fb5:	add    BYTE PTR [esi-0x80],0xb6
  406fb9:	xor    edx,edi
  406fbb:	push   cs
  406fbc:	sbb    BYTE PTR ds:0x8aae7ef8,ah
  406fc2:	nop
  406fc3:	jle    0x406fee
  406fc5:	dec    esp
  406fc6:	xchg   ecx,eax
  406fc7:	call   0x4180e440
  406fcc:	xchg   edi,eax
  406fcd:	jnp    0x406f63
  406fcf:	fld    QWORD PTR [eax+ecx*8-0x2052e3bc]
  406fd6:	jle    0x407053
  406fd8:	loope  0x406fa0
  406fda:	iret   
  406fdb:	mov    eax,ds:0xc22b250e
  406fe0:	(bad)  
  406fe1:	push   edi
  406fe2:	sub    eax,0x98d8b1c8
  406fe7:	shr    eax,cl
  406fe9:	outs   dx,DWORD PTR ds:[esi]
  406fea:	xchg   esi,eax
  406feb:	push   edx
  406fec:	js     0x406ff1
  406fee:	aas    
  406fef:	shl    esi,1
  406ff1:	dec    ebx
  406ff2:	mov    dh,ch
  406ff4:	test   BYTE PTR [edx+0x5603bf5],ch
  406ffa:	std    
  406ffb:	xchg   edi,eax
  406ffc:	fsubr  QWORD PTR [esi+0x50]
  406fff:	jbe    0x406fa5
  407001:	in     al,0x26
  407003:	push   cs
  407004:	out    0x58,eax
  407006:	or     BYTE PTR [edx-0x52],ch
  407009:	jmp    0xa372f8c7
  40700e:	add    BYTE PTR [ebx-0x7e],ch
  407011:	xchg   ebp,eax
  407012:	retf   0xd5a3
  407015:	and    bh,BYTE PTR [esi+0x2a]
  407018:	jae    0x406ff7
  40701a:	mov    cl,0x26
  40701c:	cs dec esp
  40701e:	jg     0x406fa7
  407020:	xchg   ebp,eax
  407021:	cmp    BYTE PTR [eax+0x6737730b],ch
  407027:	sbb    bl,ch
  407029:	repz sub cl,BYTE PTR [edi+0x5a]
  40702d:	cmp    BYTE PTR [edi],0x76
  407030:	cmp    edx,esp
  407032:	inc    ebx
  407033:	sub    cl,BYTE PTR [ebx+eax*2]
  407036:	stos   DWORD PTR es:[edi],eax
  407037:	neg    DWORD PTR [ecx]
  407039:	cmp    edx,DWORD PTR [eiz*2-0x5e1ded70]
  407040:	add    BYTE PTR [eax-0x293c753a],0x1b
  407047:	retf   
  407048:	imul   ebx,DWORD PTR [esi],0xd2a13d85
  40704e:	je     0x407092
  407050:	ror    DWORD PTR [edx-0x79673cd5],0x93
  407057:	or     BYTE PTR [ebx-0x71eae139],0xa7
  40705e:	fcomp  DWORD PTR [edi+0x48]
  407061:	mov    dh,0x9b
  407063:	mov    ss,WORD PTR [eax+edx*2+0x7711950e]
  40706a:	outs   dx,DWORD PTR ds:[esi]
  40706b:	sub    DWORD PTR [esi+eiz*4],esp
  40706e:	ret    0xbc1c
  407071:	(bad)  
  407073:	in     eax,0x77
  407075:	pop    ecx
  407076:	test   al,0x6a
  407078:	adc    eax,0x28d08233
  40707d:	sahf   
  40707e:	dec    esp
  40707f:	and    ch,BYTE PTR [ecx]
  407081:	mov    ah,0xc2
  407083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407084:	mov    ss,WORD PTR [ecx]
  407086:	and    DWORD PTR [edx+0x59],eax
  407089:	mov    dl,0x24
  40708b:	icebp  
  40708c:	inc    edx
  40708d:	pop    edx
  40708e:	mov    bl,0xdf
  407090:	mov    ebp,0x96e118ec
  407095:	or     bl,BYTE PTR [ebp+0x3ba84230]
  40709b:	js     0x40709c
  40709d:	push   edx
  40709e:	mov    edx,0xf3079752
  4070a3:	stc    
  4070a4:	xchg   ebp,eax
  4070a5:	xor    eax,0xabcee465
  4070aa:	cli    
  4070ab:	cmp    eax,0x45379474
  4070b0:	xor    DWORD PTR [edi],edi
  4070b2:	into   
  4070b3:	retf   
  4070b4:	xchg   DWORD PTR [edi-0x3053cb1f],eax
  4070ba:	push   ebp
  4070bb:	xor    eax,0xff907b0e
  4070c0:	sbb    al,0x96
  4070c2:	mov    al,ds:0x3d6dbe4e
  4070c7:	jmp    0x75aed452
  4070cc:	in     eax,dx
  4070cd:	ror    BYTE PTR [edi+0x6d],0x15
  4070d1:	xchg   esp,eax
  4070d2:	mov    ah,0xc
  4070d4:	dec    edi
  4070d5:	xor    DWORD PTR [edi],ecx
  4070d7:	and    eax,0xcafcba77
  4070dc:	jl     0x407158
  4070de:	aad    0x3e
  4070e0:	fwait
  4070e1:	loop   0x4070f3
  4070e3:	or     edx,esi
  4070e5:	sub    BYTE PTR [edi-0x26],cl
  4070e8:	mov    dh,BYTE PTR [ecx+eiz*4]
  4070eb:	jne    0x407148
  4070ed:	outs   dx,DWORD PTR ds:[esi]
  4070ee:	sbb    eax,0x2cba64c4
  4070f3:	mov    ebx,0xe2a747a3
  4070f8:	xor    bh,ah
  4070fa:	xor    ah,BYTE PTR [edi+esi*2-0x1f071c67]
  407101:	adc    BYTE PTR [ecx],0xe0
  407104:	mov    dh,0x58
  407106:	icebp  
  407107:	lahf   
  407108:	je     0x40709d
  40710a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40710b:	sub    eax,0x2eb8528b
  407110:	fnstcw WORD PTR [edx+0x5a86da79]
  407116:	shl    BYTE PTR [edx-0x57a94a29],cl
  40711c:	aam    0x56
  40711e:	pop    edx
  40711f:	in     eax,0xb0
  407121:	mov    bh,0xb3
  407123:	sub    esi,DWORD PTR [eax]
  407125:	push   0xa23cbb79
  40712a:	sub    al,0x18
  40712c:	ffreep st(6)
  40712e:	jbe    0x40717c
  407130:	div    BYTE PTR ds:0x500b7d50
  407136:	aas    
  407137:	xchg   DWORD PTR [ecx+0x4b],esp
  40713a:	ret    0xc6dc
  40713d:	adc    DWORD PTR [ebp-0x6e],0xffffffee
  407141:	(bad)  
  407142:	adc    BYTE PTR [esi-0x5aa3435e],bh
  407148:	jne    0x407167
  40714a:	dec    esi
  40714b:	cmp    esp,DWORD PTR ds:0xd99c3da7
  407151:	out    0xb7,eax
  407153:	fs mov ah,0x77
  407156:	popa   
  407157:	idiv   BYTE PTR [ebx]
  407159:	aas    
  40715a:	bound  esp,QWORD PTR [ebx-0x90d7d07]
  407160:	cdq    
  407161:	mov    eax,DWORD PTR [eax-0x1d5bce84]
  407167:	addr16 sti 
  407169:	mov    ah,0xb8
  40716b:	push   cs
  40716c:	es xor al,0x9f
  40716f:	ret    
  407170:	std    
  407171:	jae    0x40715b
  407173:	push   es
  407174:	jg     0x407185
  407176:	iret   
  407177:	das    
  407178:	xor    bh,BYTE PTR [eax-0x6c]
  40717b:	mov    ds:0xabd1a266,al
  407180:	jmp    0x4071c2
  407182:	nop
  407183:	rcr    BYTE PTR [edi+0x7c728538],cl
  407189:	retf   0xa650
  40718c:	je     0x40718c
  40718e:	cwde   
  40718f:	jo     0x4071e1
  407191:	cmc    
  407192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407193:	mov    ebp,0xbfe4911c
  407198:	jmp    0x7010e735
  40719d:	inc    esp
  40719e:	jge    0x407204
  4071a0:	test   BYTE PTR [edi+0x5],al
  4071a3:	cmp    eax,0x9c48eb10
  4071a8:	imul   ebx,DWORD PTR [esi],0xd573797a
  4071ae:	push   ebx
  4071af:	mov    esp,0x1ef7305a
  4071b4:	icebp  
  4071b5:	jge    0x40719f
  4071b7:	adc    eax,0xa5ade51b
  4071bc:	inc    BYTE PTR [ecx-0x1f]
  4071bf:	test   eax,0x91660b1c
  4071c4:	mov    bh,0x74
  4071c6:	jb     0x4071e2
  4071c8:	jbe    0x4071b9
  4071ca:	jnp    0x4071bc
  4071cc:	xor    ebx,DWORD PTR [ebx+0x2d]
  4071cf:	imul   esp,DWORD PTR [ecx+0x1bbbc525],0x55c7911c
  4071d9:	in     al,dx
  4071da:	in     al,dx
  4071db:	stc    
  4071dc:	ds cmp eax,0x70c0aff
  4071e2:	inc    ecx
  4071e3:	mov    edx,0xb4672877
  4071e8:	out    0x5a,al
  4071ea:	(bad)  
  4071eb:	dec    esi
  4071ec:	ficom  DWORD PTR [esi]
  4071ee:	iret   
  4071ef:	pop    edi
  4071f0:	scas   eax,DWORD PTR es:[edi]
  4071f1:	jbe    0x4071fb
  4071f3:	inc    eax
  4071f4:	adc    eax,DWORD PTR [ecx-0x39dec112]
  4071fa:	add    al,0x7b
  4071fd:	test   eax,0xaa2b1874
  407202:	std    
  407203:	fcmove st,st(6)
  407205:	in     al,0x8a
  407207:	jl     0x4071b8
  407209:	out    0xb4,al
  40720b:	stc    
  40720c:	cmp    dh,0xe6
  40720f:	into   
  407210:	fs (bad) 
  407212:	jnp    0x4071f7
  407214:	mov    bh,al
  407216:	add    edi,DWORD PTR [edx+0x33]
  407219:	mov    ds:0xb22e0078,al
  40721e:	jae    0x40726c
  407220:	mov    eax,0x4dcfa323
  407225:	mov    bh,0x34
  407227:	push   0x69
  407229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40722a:	scas   eax,DWORD PTR es:[edi]
  40722b:	inc    edx
  40722c:	add    al,0xef
  40722e:	inc    edi
  40722f:	add    BYTE PTR [ebx+0x6e50fb5b],0xce
  407236:	jo     0x4071cb
  407238:	gs xor ebx,eax
  40723b:	cmp    al,0xb2
  40723d:	inc    ebx
  40723e:	inc    ebp
  40723f:	sbb    BYTE PTR [ebx],bl
  407241:	gs pop ds
  407243:	dec    esi
  407244:	xchg   BYTE PTR [edi-0x1a],bl
  407247:	imul   dl
  407249:	stos   DWORD PTR es:[edi],eax
  40724a:	or     ebp,0xe2f64d42
  407250:	and    ebp,DWORD PTR [ecx-0xb]
  407253:	inc    edx
  407254:	add    eax,0xb2d69c93
  407259:	int3   
  40725a:	push   eax
  40725b:	es out 0xa0,eax
  40725e:	add    al,0x80
  407260:	movhps QWORD PTR [eax+0x400cc7d4],xmm1
  407267:	mov    edi,0xbde4f9f
  40726c:	out    0xda,eax
  40726e:	adc    BYTE PTR [edx],0x9a
  407271:	ror    BYTE PTR [ebx-0x5a],1
  407274:	xchg   ecx,eax
  407275:	mov    cl,0xa5
  407277:	out    dx,al
  407278:	jg     0x407245
  40727a:	sub    bh,BYTE PTR ds:0x2a3f6032
  407280:	and    DWORD PTR [edi+0x58a75a59],edi
  407286:	cmp    eax,0xc99a7444
  40728b:	jno    0x407271
  40728d:	cmp    DWORD PTR [edi+0x4301dbfd],ebx
  407293:	or     al,0x55
  407295:	add    esi,DWORD PTR [ebp+0x6d]
  407298:	mov    ah,ah
  40729a:	sub    esp,DWORD PTR [eax+0x38f53f42]
  4072a0:	jae    0x4072bf
  4072a2:	call   0xfb5d59fc
  4072a7:	adc    BYTE PTR [eax+0x1b748833],0x74
  4072ae:	inc    ecx
  4072af:	test   al,0x44
  4072b1:	sbb    ebp,DWORD PTR [edi+0x4be80a7b]
  4072b7:	mov    ebp,0x8d3029d2
  4072bc:	fiadd  WORD PTR [ecx]
  4072be:	cmc    
  4072bf:	mov    al,ds:0x3b5e8195
  4072c4:	loope  0x407265
  4072c6:	mov    esi,0xe7d2c4e8
  4072cb:	add    eax,0x4782e557
  4072d0:	push   ecx
  4072d1:	test   al,0xc
  4072d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d4:	inc    edi
  4072d5:	and    cl,cl
  4072d7:	sti    
  4072d8:	xor    bl,BYTE PTR ds:0x7378e2b6
  4072de:	push   es
  4072df:	xor    BYTE PTR [ecx+ebp*2-0x67b52d8],dl
  4072e6:	xor    DWORD PTR [esi+0x1fcb6371],edi
  4072ec:	fadd   st,st(0)
  4072ee:	leave  
  4072ef:	call   0xefe01daa
  4072f4:	popa   
  4072f5:	sbb    bl,BYTE PTR [ebp+0x42]
  4072f8:	inc    esp
  4072f9:	push   esi
  4072fa:	retf   0x819f
  4072fd:	in     eax,0x5e
  4072ff:	loop   0x407316
  407301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407302:	loope  0x407381
  407304:	addr16 mov esp,0x179b8150
  40730a:	ss push 0xc599f1b7
  407310:	dec    ebx
  407311:	neg    DWORD PTR [ecx-0x43]
  407314:	dec    ebx
  407315:	daa    
  407316:	jecxz  0x407369
  407318:	adc    ecx,DWORD PTR [eax+0x6f7233bc]
  40731e:	pop    eax
  40731f:	popf   
  407320:	ret    0x1dd9
  407323:	ins    DWORD PTR es:[edi],dx
  407324:	jo     0x4072f6
  407326:	push   edx
  407327:	dec    eax
  407328:	cld    
  407329:	jmp    DWORD PTR [edx+0x6eef0ff6]
  40732f:	xor    eax,0xc443bf0b
  407334:	sub    BYTE PTR [ebx-0x177da36c],cl
  40733a:	mov    al,ds:0xd03fd299
  40733f:	inc    ecx
  407340:	adc    eax,ecx
  407342:	sbb    al,0xc1
  407344:	or     al,0xa7
  407346:	jo     0x40730f
  407348:	lods   eax,DWORD PTR ds:[esi]
  407349:	adc    bh,0xaf
  40734c:	mov    ah,0x33
  40734e:	add    al,0x7
  407350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407351:	ret    
  407352:	dec    esp
  407353:	hlt    
  407354:	(bad)  
  407355:	pop    esi
  407356:	mov    BYTE PTR [edi],0xe2
  407359:	rcl    bh,1
  40735b:	scas   al,BYTE PTR es:[edi]
  40735c:	imul   ecx,DWORD PTR [edi],0x63ec0a3c
  407362:	out    dx,eax
  407363:	ret    0xff34
  407366:	mov    ecx,0x159ab08e
  40736b:	mov    esi,0x432e3110
  407370:	sub    BYTE PTR [edx],dh
  407372:	outs   dx,DWORD PTR ds:[esi]
  407373:	(bad)  
  407374:	(bad)  
  407375:	add    cl,BYTE PTR [esi]
  407377:	push   ecx
  407378:	push   esi
  407379:	or     eax,0x89159a94
  40737e:	int3   
  40737f:	stc    
  407380:	push   ecx
  407381:	xor    eax,0x2b2afc5a
  407386:	aaa    
  407387:	xchg   BYTE PTR [esp+0x2833bd56],dl
  40738e:	push   es
  40738f:	cmp    bh,BYTE PTR [ebx+0x15ffbaf3]
  407395:	outs   dx,DWORD PTR ds:[esi]
  407396:	repz js 0x407324
  407399:	pop    es
  40739a:	mov    eax,ds:0x8c35652
  40739f:	(bad)
  4073a4:	ds jb  0x40738e
  4073a7:	leave  
  4073a8:	sub    edx,ebx
  4073aa:	push   DWORD PTR [ecx-0x24]
  4073ad:	xor    eax,0x865bb253
  4073b2:	iret   
  4073b3:	lock pop eax
  4073b5:	push   ecx
  4073b6:	or     al,0x35
  4073b8:	mov    WORD PTR [esi-0x3e],ds
  4073bb:	pop    ebp
  4073bc:	cli    
  4073bd:	aam    0x69
  4073bf:	dec    eax
  4073c0:	nop
  4073c1:	aam    0x29
  4073c3:	lahf   
  4073c4:	retf   0x404e
  4073c7:	stos   BYTE PTR es:[edi],al
  4073c8:	js     0x407439
  4073ca:	aad    0xf9
  4073cc:	lock aas 
  4073ce:	xchg   ecx,eax
  4073cf:	cmp    al,0xe9
  4073d1:	lock aam 0xf3
  4073d4:	adc    DWORD PTR [esi-0x69efdd51],esi
  4073da:	(bad)  
  4073db:	pop    ebp
  4073dc:	adc    eax,0xece2b40f
  4073e1:	jecxz  0x40745e
  4073e3:	fisttp WORD PTR [edi-0x5c]
  4073e6:	call   0x153b:0x794ba496
  4073ed:	ss dec eax
  4073ef:	mov    esp,0x6971607b
  4073f4:	push   ss
  4073f5:	xchg   BYTE PTR [ebx],dl
  4073f7:	mov    ah,0x1f
  4073f9:	std    
  4073fa:	clc    
  4073fb:	and    eax,eax
  4073fd:	lock pop ecx
  4073ff:	jbe    0x4073eb
  407401:	or     BYTE PTR [eax],0xdd
  407404:	scas   eax,DWORD PTR es:[edi]
  407405:	pop    edx
  407406:	mov    esp,0xb2f209a5
  40740b:	push   esi
  40740c:	in     eax,0x37
  40740e:	xchg   DWORD PTR [ebx],esp
  407410:	pop    esi
  407411:	(bad)  
  407412:	iret   
  407413:	and    ch,bl
  407415:	adc    dh,BYTE PTR [edi+0x5b2dae86]
  40741b:	mov    esp,0x897e91ac
  407420:	mov    al,ds:0x95d607d8
  407425:	mov    ds:0x1157cf0c,al
  40742a:	push   0xb584da83
  40742f:	nop
  407430:	in     al,dx
  407431:	jle    0x407491
  407433:	(bad)  
  407434:	out    dx,eax
  407435:	jo     0x407446
  407437:	mov    eax,eax
  407439:	ins    DWORD PTR es:[edi],dx
  40743a:	ja     0x407429
  40743c:	call   0xa520:0xc957dfcb
  407443:	push   es
  407444:	xchg   edx,eax
  407445:	ja     0x40742c
  407447:	popa   
  407448:	and    eax,0x645c1e72
  40744d:	shl    DWORD PTR [edx+ebx*1],1
  407450:	mov    al,0xaf
  407452:	mov    WORD PTR [eax+esi*1-0x6608921a],?
  407459:	sub    eax,0xd9d08919
  40745e:	adc    al,0x7c
  407460:	mov    bh,0x44
  407462:	retf   0xea18
  407465:	push   ds
  407466:	or     edi,edx
  407468:	jge    0x40740e
  40746a:	mov    BYTE PTR [ebx+0x367f56a6],cl
  407470:	xchg   edx,eax
  407471:	jne    0x407457
  407473:	jge    0x40749f
  407475:	lea    ebp,[ebx]
  407477:	ret    0xf8d0
  40747a:	or     al,0x12
  40747c:	out    dx,eax
  40747d:	faddp  st(6),st
  40747f:	pop    es
  407480:	int    0x37
  407482:	push   cs
  407483:	jno    0x40748b
  407485:	iret   
  407486:	adc    cl,BYTE PTR [eax-0x3e74ba80]
  40748c:	popa   
  40748d:	not    DWORD PTR [eax]
  40748f:	pop    ebp
  407490:	mov    edi,0xd88130a
  407495:	lock mov dh,0xcb
  407498:	popa   
  407499:	out    dx,eax
  40749a:	outs   dx,DWORD PTR ds:[esi]
  40749b:	leave  
  40749c:	add    ebx,ebx
  40749e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749f:	sub    BYTE PTR [esi-0x2e39a83d],cl
  4074a5:	enter  0x27da,0xe1
  4074a9:	xor    dl,BYTE PTR [ecx+0x1e]
  4074ac:	pop    fs
  4074ae:	pop    ebx
  4074af:	adc    esp,DWORD PTR gs:[ecx-0x7d]
  4074b3:	inc    esp
  4074b4:	jge    0x40747a
  4074b6:	or     al,0x7b
  4074b8:	cmp    BYTE PTR [esi],ch
  4074ba:	test   DWORD PTR [esi],esi
  4074bc:	mov    ds:0x2f94edb6,al
  4074c1:	inc    esi
  4074c2:	inc    esi
  4074c3:	xchg   BYTE PTR [eax],al
  4074c5:	sub    al,0x2e
  4074c7:	icebp  
  4074c8:	xchg   ebp,eax
  4074c9:	test   DWORD PTR [ebx+0x64],ebx
  4074cc:	inc    edi
  4074cd:	addr16 clc 
  4074cf:	aaa    
  4074d0:	fldlg2 
  4074d2:	mov    eax,0xac800273
  4074d7:	dec    edx
  4074d8:	ficom  DWORD PTR [ecx+0x53]
  4074db:	leave  
  4074dc:	scas   al,BYTE PTR es:[edi]
  4074dd:	div    DWORD PTR [ecx-0x36e8b3ab]
  4074e3:	bound  edx,QWORD PTR [ebx+0x77]
  4074e6:	mov    bh,0x51
  4074e8:	lahf   
  4074e9:	pushf  
  4074ea:	push   esi
  4074eb:	es hlt 
  4074ed:	inc    edx
  4074ee:	pop    es
  4074ef:	cmc    
  4074f0:	fwait
  4074f1:	lock jmp 0xe9a9:0x68ca7385
  4074f9:	pop    eax
  4074fa:	cmp    eax,0x4ca04248
  4074ff:	and    eax,DWORD PTR [esi]
  407501:	mov    ebp,0x5013c21c
  407506:	out    dx,al
  407507:	push   ss
  407508:	cmc    
  407509:	and    edx,edx
  40750b:	lods   eax,DWORD PTR ds:[esi]
  40750c:	jb     0x407552
  40750e:	jg     0x407577
  407510:	push   cs
  407511:	sub    al,0xa3
  407513:	push   0x50f87187
  407518:	push   eax
  407519:	sbb    ah,0xf5
  40751c:	ins    DWORD PTR es:[edi],dx
  40751d:	call   FWORD PTR [edx+0x51]
  407520:	mov    edi,0x9b490734
  407525:	test   DWORD PTR [eax+ebp*8],esi
  407528:	adc    eax,DWORD PTR [esi]
  40752a:	mov    ecx,0x2949d5f7
  40752f:	retf   
  407530:	push   es
  407531:	cmp    eax,0xd2e01d6
  407536:	scas   eax,DWORD PTR es:[edi]
  407537:	sti    
  407538:	sti    
  407539:	push   ss
  40753a:	mov    ah,0xd0
  40753c:	dec    BYTE PTR [esi-0x25]
  40753f:	in     al,dx
  407540:	xchg   ebx,eax
  407541:	jmp    0x9da:0x783fbf63
  407548:	adc    DWORD PTR [ecx+0x1bd5eb76],ecx
  40754e:	push   0x21aa4698
  407553:	imul   ebx,DWORD PTR [esi+ebp*2-0x54],0xe
  407558:	repz addr16 push ebp
  40755b:	ficom  WORD PTR [edi+0x832940]
  407561:	inc    eax
  407562:	ret    
  407563:	fild   QWORD PTR [ebp+0x1fa5ed68]
  407569:	setno  al
  40756c:	dec    esp
  40756d:	xchg   esi,eax
  40756e:	ficomp WORD PTR [ebx-0x7e]
  407571:	in     eax,dx
  407572:	jae    0x407579
  407574:	gs in  eax,dx
  407576:	pop    edx
  407577:	ins    DWORD PTR es:[edi],dx
  407578:	(bad)  
  407579:	(bad)  
  40757a:	mov    al,ds:0x6cf54e3b
  40757f:	test   al,0xd3
  407581:	and    eax,0x44fa991a
  407586:	push   edx
  407587:	aad    0x83
  407589:	push   esi
  40758a:	loope  0x40755d
  40758c:	xchg   ebx,eax
  40758d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40758e:	repz sbb edi,DWORD PTR [eax-0x428aa740]
  407595:	mov    al,bl
  407597:	cmp    ah,BYTE PTR [ecx+ecx*4+0x7cb002b9]
  40759e:	cmp    al,BYTE PTR [edi]
  4075a0:	imul   edi,ecx,0x47
  4075a3:	mov    ebp,0xf2e32262
  4075a8:	fwait
  4075a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075aa:	mov    dh,0x65
  4075ac:	(bad)  
  4075ad:	mov    esp,0x57c034f5
  4075b2:	mov    bl,0xe7
  4075b4:	(bad)  
  4075b6:	fbld   TBYTE PTR [ebp+0x57]
  4075b9:	fxch   st(1)
  4075bb:	xchg   ebx,eax
  4075bc:	(bad)  
  4075be:	add    esi,edi
  4075c0:	js     0x407619
  4075c2:	xchg   ebp,eax
  4075c3:	push   es
  4075c4:	mov    edi,0xf37f92af
  4075c9:	inc    eax
  4075ca:	xchg   ebp,eax
  4075cb:	sub    DWORD PTR [ecx+0x75],esp
  4075ce:	jg     0x4075cd
  4075d0:	sar    DWORD PTR [esi],0x5b
  4075d3:	mov    esp,0x5587b217
  4075d8:	gs sbb al,0x75
  4075db:	sbb    ebp,DWORD PTR [ecx]
  4075dd:	outs   dx,BYTE PTR ds:[esi]
  4075de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075df:	mov    eax,0x58f89eac
  4075e4:	add    al,0xaa
  4075e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e7:	test   BYTE PTR [edx],0xfc
  4075ea:	add    eax,DWORD PTR [eax+ecx*1+0x27]
  4075ee:	pop    es
  4075ef:	mov    ecx,DWORD PTR [ebx-0x5c]
  4075f2:	shl    dh,cl
  4075f4:	xlat   BYTE PTR ds:[ebx]
  4075f5:	stos   DWORD PTR es:[edi],eax
  4075f6:	loop   0x4075e3
  4075f8:	fs stc 
  4075fa:	jmp    0x4634:0x2d2eff1e
  407601:	dec    DWORD PTR [edi+0xc]
  407604:	inc    ebp
  407605:	int3   
  407606:	out    dx,al
  407607:	mov    ebx,0x9b969818
  40760c:	mov    BYTE PTR [ecx+0x48],al
  40760f:	retf   
  407610:	cld    
  407611:	jl     0x4075e3
  407613:	xchg   esp,eax
  407614:	clc    
  407615:	push   esi
  407616:	cmp    al,BYTE PTR [edi-0x1c]
  407619:	call   0x36ff:0x3575cf0f
  407620:	mov    esi,edi
  407622:	sbb    al,0xbf
  407624:	sub    eax,esp
  407626:	mov    ecx,0xc62b166b
  40762b:	dec    ecx
  40762c:	in     al,0x4d
  40762e:	or     esi,DWORD PTR [esi-0xc]
  407631:	pop    eax
  407632:	sbb    al,0x5a
  407634:	dec    esp
  407635:	sbb    BYTE PTR [edx],bl
  407637:	dec    edi
  407638:	stos   BYTE PTR es:[edi],al
  407639:	leave  
  40763a:	ror    dh,0x5f
  40763d:	or     al,0xdb
  40763f:	cmp    edi,DWORD PTR [ebx]
  407641:	dec    ecx
  407642:	or     eax,0xa1e3c715
  407647:	std    
  407648:	or     DWORD PTR [ecx-0x3ae27c15],0x3fceca4a
  407652:	mov    ecx,0xf6937f34
  407657:	mov    DWORD PTR [ecx],0xfae59427
  40765d:	cmp    al,0x79
  40765f:	fstp   TBYTE PTR ds:0xbd3aa436
  407665:	sbb    BYTE PTR [ecx-0xcf60396],dl
  40766b:	or     dh,BYTE PTR [eax-0x2257942e]
  407671:	add    bh,bh
  407673:	daa    
  407674:	pop    ecx
  407675:	dec    ebx
  407676:	push   cs
  407677:	addr16 xor ecx,eax
  40767a:	leave  
  40767b:	mov    al,0xb8
  40767d:	imul   esp,edi,0xffffff87
  407680:	inc    esp
  407681:	adc    edi,DWORD PTR [esi+0x53]
  407684:	cs pop edx
  407686:	leavew 
  407688:	push   ss
  407689:	call   0x4505e99d
  40768e:	popa   
  40768f:	lods   al,BYTE PTR ds:[esi]
  407690:	jmp    0x4076a9
  407692:	jmp    0x749ce769
  407697:	jo     0x407693
  407699:	pop    esi
  40769a:	dec    esi
  40769b:	jle    0x407653
  40769d:	mov    bl,0xf6
  40769f:	and    al,0x42
  4076a1:	int3   
  4076a2:	mov    esi,0xca8b9b65
  4076a7:	dec    edi
  4076a8:	push   esp
  4076a9:	sbb    dh,BYTE PTR [esi+edx*8+0x3a2a9838]
  4076b0:	add    edx,DWORD PTR [edi]
  4076b2:	pop    ecx
  4076b3:	mov    ebx,0x4eae0d6f
  4076b8:	fdivr  QWORD PTR [ecx]
  4076ba:	out    0x8b,eax
  4076bc:	xchg   DWORD PTR [ebx+0x6bbccf84],edx
  4076c2:	push   ds
  4076c3:	xchg   ebp,eax
  4076c4:	leave  
  4076c5:	ds int3 
  4076c7:	jp     0x407681
  4076c9:	xor    bh,BYTE PTR [eax+0x62]
  4076cc:	sub    ebx,DWORD PTR [esi-0x50]
  4076cf:	test   DWORD PTR [eax-0x21],esp
  4076d2:	bswap  eax
  4076d4:	mov    bh,0xcf
  4076d6:	push   esi
  4076d7:	add    DWORD PTR [edi-0xe],ebx
  4076da:	sub    esi,DWORD PTR [edi-0x12be1dc6]
  4076e0:	xchg   DWORD PTR [ebp+edx*8-0x70],ebx
  4076e4:	ret    0x18ab
  4076e7:	dec    edi
  4076e8:	mov    dh,0x49
  4076ea:	mov    ch,0x66
  4076ec:	mov    ecx,0x83b8b482
  4076f1:	push   0x79
  4076f3:	lea    eax,[eax-0x69]
  4076f6:	out    0x60,al
  4076f8:	sub    esp,DWORD PTR [edi+ecx*8]
  4076fb:	push   esi
  4076fc:	push   esp
  4076fd:	dec    edi
  4076fe:	cmc    
  4076ff:	repnz push es
  407701:	xchg   esi,eax
  407702:	inc    ebp
  407703:	push   es
  407704:	lods   eax,DWORD PTR ds:[esi]
  407705:	and    DWORD PTR [edx],0x35f07981
  40770b:	outs   dx,BYTE PTR ds:[esi]
  40770c:	hlt    
  40770d:	or     eax,0x2abd329e
  407712:	push   esp
  407713:	test   eax,0x3fcdb3e3
  407718:	mov    ah,0x96
  40771a:	scas   eax,DWORD PTR es:[edi]
  40771b:	scas   eax,DWORD PTR es:[edi]
  40771c:	xchg   edx,eax
  40771d:	mov    al,0xed
  40771f:	imul   esi,DWORD PTR [ecx-0x5db41465],0x16
  407726:	sub    eax,0x98f84e63
  40772b:	xor    al,0x95
  40772d:	sub    BYTE PTR [esi-0x13],ah
  407730:	arpl   WORD PTR [edi+0x7fd7c649],sp
  407736:	push   edi
  407737:	add    eax,0xe3369037
  40773c:	scas   al,BYTE PTR es:[edi]
  40773d:	mov    bl,0xd8
  40773f:	addr16 mov ecx,0xe85e09c8
  407745:	sub    edx,DWORD PTR [ebx+0x11]
  407748:	jns    0x4076d4
  40774a:	xchg   edx,eax
  40774b:	pop    ebp
  40774c:	ins    BYTE PTR es:[edi],dx
  40774d:	mov    dh,0x1
  40774f:	xor    BYTE PTR [esi],bh
  407751:	dec    edi
  407752:	or     al,BYTE PTR [ecx+0x439e6bd7]
  407758:	push   ebx
  407759:	xchg   ebx,eax
  40775a:	adc    BYTE PTR [ecx],ch
  40775c:	mov    bl,0x7b
  40775e:	xchg   edx,eax
  40775f:	retf   0x1014
  407762:	xor    eax,0xd6b9145e
  407767:	jmp    0x40779b
  407769:	rcr    BYTE PTR ds:0x2f0aa7a6,1
  40776f:	xchg   ecx,eax
  407770:	inc    ebp
  407771:	mov    DWORD PTR [eax-0xd71e807],0x64b4c27e
  40777b:	out    dx,al
  40777c:	retf   
  40777d:	int    0x30
  40777f:	js     0x407728
  407781:	sub    DWORD PTR [eax],eax
  407783:	push   0xa08c1d58
  407788:	inc    ecx
  407789:	shl    ah,0x80
  40778c:	pop    eax
  40778d:	xchg   edx,eax
  40778e:	xlat   BYTE PTR ds:[ebx]
  40778f:	aad    0xb6
  407791:	adc    ebx,DWORD PTR [ebx]
  407793:	mov    eax,0xa89c725a
  407798:	jl     0x407729
  40779a:	int3   
  40779b:	jo     0x407808
  40779d:	xor    eax,0x4b1f6e89
  4077a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a3:	call   0x2f2c1dfa
  4077a8:	leave  
  4077a9:	xchg   edx,eax
  4077aa:	sub    eax,DWORD PTR [esi]
  4077ac:	scas   al,BYTE PTR es:[edi]
  4077ad:	cmp    eax,0x17f7f07a
  4077b2:	shl    BYTE PTR [edx],cl
  4077b4:	sbb    eax,0x7a541cab
  4077b9:	xor    eax,0x316dd337
  4077be:	or     al,0x68
  4077c0:	dec    edi
  4077c1:	adc    eax,0x693fc202
  4077c6:	dec    eax
  4077c7:	je     0x407823
  4077c9:	test   al,0x78
  4077cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077cc:	out    0xef,eax
  4077ce:	fstp   DWORD PTR [edi+eiz*4-0x1d]
  4077d2:	lahf   
  4077d3:	ret    0x85ef
  4077d6:	pcmpgtb mm0,QWORD PTR [edi]
  4077d9:	test   eax,0x68cc42ec
  4077de:	pop    ds
  4077df:	or     esi,0x9e05f069
  4077e5:	int    0x79
  4077e7:	push   ebx
  4077e8:	pop    ecx
  4077e9:	sbb    BYTE PTR [esi+0x53],dh
  4077ec:	mov    ecx,0xe6ca5a2a
  4077f1:	xchg   esi,eax
  4077f2:	add    DWORD PTR [edx+0x1bdf67b],eax
  4077f8:	retf   
  4077f9:	jnp    0x40782d
  4077fb:	mov    edx,0x49713ae6
  407800:	cmp    BYTE PTR [ebx],dl
  407802:	pop    ebx
  407803:	std    
  407804:	popa   
  407805:	mov    bh,0xe5
  407807:	xchg   esi,eax
  407808:	fcmovu st,st(1)
  40780a:	aam    0xf9
  40780c:	jecxz  0x407859
  40780e:	fldcw  WORD PTR [ebx+0x12]
  407811:	in     al,dx
  407812:	daa    
  407813:	dec    edx
  407814:	loop   0x407850
  407816:	loopne 0x407893
  407818:	push   cs
  407819:	mov    bl,0xac
  40781b:	call   DWORD PTR [ebx+0xb]
  40781e:	test   eax,0x438070a6
  407823:	mov    ds:0x5d1fbe5e,al
  407828:	mov    bl,0xf4
  40782a:	fstp   DWORD PTR [esi+0x32758b49]
  407830:	and    ebx,DWORD PTR [edi-0x59599604]
  407836:	fild   DWORD PTR [ecx+0x1c89ea50]
  40783c:	push   es
  40783d:	scas   al,BYTE PTR es:[edi]
  40783e:	sbb    bl,BYTE PTR ds:0x888b9a2e
  407844:	push   esi
  407845:	mov    eax,0x7e11725e
  40784a:	test   BYTE PTR [esi],cl
  40784c:	or     esp,DWORD PTR [eax+eax*4+0x50d36978]
  407853:	or     al,0x4c
  407855:	pusha  
  407856:	push   ds
  407857:	xchg   edi,eax
  407858:	xor    BYTE PTR [edx+0x6e85f7a],al
  40785e:	pop    es
  40785f:	repnz out dx,eax
  407861:	pop    eax
  407862:	call   0x7f22:0x5eed5ce8
  407869:	jne    0x407811
  40786b:	hlt    
  40786c:	xchg   esp,eax
  40786d:	cmp    BYTE PTR [esi],dl
  40786f:	and    eax,0x2ba5b4c2
  407874:	not    BYTE PTR [ebp+0x59]
  407877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407878:	bswap  ebx
  40787a:	loopne 0x407880
  40787c:	mov    ds,ecx
  40787e:	mov    esi,0x7397e370
  407883:	(bad)  
  407884:	sub    BYTE PTR [ecx],0x2c
  407887:	and    al,0x8f
  407889:	or     BYTE PTR [ecx+0x2ee315eb],0x7f
  407890:	(bad)  
  407891:	push   ds
  407892:	sub    al,0xd2
  407894:	push   esp
  407895:	sbb    bh,BYTE PTR [edi]
  407897:	xchg   edi,eax
  407898:	es push 0x70
  40789b:	mov    cl,0x7e
  40789d:	cmp    ecx,eax
  40789f:	stos   BYTE PTR es:[edi],al
  4078a0:	mov    al,ds:0x4169de07
  4078a5:	repnz test DWORD PTR [ebx],esp
  4078a8:	sti    
  4078a9:	xchg   DWORD PTR [edi+0x68399e10],edi
  4078af:	inc    esp
  4078b0:	push   ss
  4078b1:	dec    DWORD PTR [edx+0x61]
  4078b4:	xchg   esp,eax
  4078b5:	stc    
  4078b6:	jge    0x40783d
  4078b8:	cmp    DWORD PTR [esi-0xf71638],eax
  4078be:	bound  ebx,QWORD PTR ds:0xd2f9be65
  4078c4:	jge    0x40793b
  4078c6:	fdiv   QWORD PTR [edi-0x19]
  4078c9:	xor    eax,0x89417ebc
  4078ce:	in     eax,0x4d
  4078d0:	mov    DWORD PTR [edx+eiz*2+0x5fdfb8da],ebp
  4078d7:	mul    BYTE PTR [edi-0x2ccfc7d4]
  4078dd:	imul   ebp,esi,0x47
  4078e0:	shl    dl,1
  4078e2:	scas   al,BYTE PTR es:[edi]
  4078e3:	cmp    BYTE PTR [esi-0x346e152a],bl
  4078e9:	jge    0x4078ac
  4078eb:	adc    dl,cl
  4078ed:	xchg   edx,eax
  4078ee:	das    
  4078ef:	mov    BYTE PTR [ebx+0x31],0x2f
  4078f3:	inc    ebx
  4078f4:	add    eax,esp
  4078f6:	push   esp
  4078f7:	cld    
  4078f8:	out    0x26,eax
  4078fa:	nop
  4078fb:	aam    0xf0
  4078fd:	jbe    0x40788f
  4078ff:	cmc    
  407900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407901:	pop    ss
  407902:	rcr    DWORD PTR [edx+0x3b],0x1c
  407906:	xchg   ebx,eax
  407907:	repnz sub al,0x79
  40790a:	xor    eax,0xf5b0b0c2
  40790f:	push   ds
  407910:	call   0x4cb1eba6
  407915:	and    BYTE PTR [edx+0x50],ch
  407918:	hlt    
  407919:	sbb    eax,0x60dce090
  40791e:	jl     0x407933
  407920:	test   DWORD PTR [esi],esi
  407922:	or     al,0xf5
  407924:	adc    esi,edi
  407926:	mov    al,0x82
  407928:	test   BYTE PTR [edx+0x70f97822],dh
  40792e:	xchg   esi,eax
  40792f:	pop    edx
  407930:	inc    esp
  407931:	cmp    bh,al
  407933:	mov    WORD PTR [eax+0x23],ds
  407936:	or     edx,esi
  407938:	in     al,0x1c
  40793a:	cmp    al,0xa9
  40793c:	sbb    DWORD PTR [eax+0x161a426b],ebp
  407942:	nop
  407943:	enter  0x9bf7,0x70
  407947:	jbe    0x40796e
  407949:	pop    ebx
  40794a:	call   0x8c2d7cb8
  40794f:	mov    ds,WORD PTR [edx-0x32]
  407952:	pop    es
  407953:	pop    ss
  407954:	mov    edi,0xdd2f9b63
  407959:	pop    es
  40795a:	xor    bh,BYTE PTR [esi-0xb3afb]
  407960:	push   ds
  407961:	aaa    
  407962:	dec    edi
  407963:	add    DWORD PTR [esi+esi*4],esi
  407966:	test   DWORD PTR [ebx-0x2],0xb5646f40
  40796d:	rcr    BYTE PTR [ecx+0x4a749858],0x3f
  407974:	jg     0x4079e4
  407976:	jae    0x4079df
  407978:	cmc    
  407979:	xor    dx,WORD PTR [edi+0x47]
  40797d:	jmp    0x4079c6
  40797f:	sbb    esi,DWORD PTR [edx+0x62519e57]
  407985:	ins    DWORD PTR es:[edi],dx
  407986:	lods   eax,DWORD PTR ds:[esi]
  407987:	or     DWORD PTR [ebx-0x74],ebx
  40798a:	in     al,0xf7
  40798c:	test   DWORD PTR [ecx-0x4d],esi
  40798f:	dec    ebp
  407990:	lock cld 
  407992:	add    eax,0xc4c12c5d
  407997:	xchg   ebx,eax
  407998:	mov    esp,0x889d1583
  40799d:	sahf   
  40799e:	push   ss
  40799f:	pusha  
  4079a0:	xchg   edx,eax
  4079a1:	mov    ds,WORD PTR [ecx-0x5a]
  4079a4:	scas   eax,DWORD PTR es:[edi]
  4079a5:	mov    bl,0x2a
  4079a7:	inc    esp
  4079a8:	cs ins BYTE PTR es:[edi],dx
  4079aa:	stos   DWORD PTR es:[edi],eax
  4079ab:	icebp  
  4079ac:	daa    
  4079ad:	pop    esi
  4079ae:	push   cs
  4079af:	jg     0x4079db
  4079b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b2:	(bad)  [ebx]
  4079b4:	ret    0xb3e5
  4079b7:	inc    esi
  4079b8:	adc    ebp,esi
  4079ba:	test   al,0x4e
  4079bc:	add    eax,0x2952c327
  4079c1:	push   0x3e886402
  4079c6:	popf   
  4079c7:	pcmpeqd mm5,QWORD PTR [edi+0x7b58fb79]
  4079ce:	adc    cl,BYTE PTR [esi]
  4079d0:	adc    bh,BYTE PTR [eax+eax*4-0x30]
  4079d4:	out    0xdf,al
  4079d6:	jg     0x407a44
  4079d8:	aaa    
  4079d9:	pop    ebx
  4079da:	jg     0x407961
  4079dc:	leave  
  4079dd:	jmp    0x40799b
  4079df:	dec    edx
  4079e0:	push   0xb2f575ca
  4079e5:	cmp    eax,0x3cbc8edf
  4079ea:	hlt    
  4079eb:	sub    ebx,eax
  4079ed:	inc    esp
  4079ee:	adc    DWORD PTR [ecx],ebx
  4079f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f1:	imul   esp,DWORD PTR [edi+0x20936993],0x33eb56ec
  4079fb:	cmp    esi,DWORD PTR cs:[ecx]
  4079fe:	pusha  
  4079ff:	mov    es,WORD PTR [edx-0x69]
  407a02:	sub    bh,ch
  407a04:	outs   dx,BYTE PTR gs:[esi]
  407a06:	cli    
  407a07:	jmp    0x407a28
  407a09:	adc    ebx,DWORD PTR [esi+0x16]
  407a0c:	pop    esi
  407a0d:	push   0x2c
  407a0f:	xchg   DWORD PTR [esp+edi*1-0x1aa1dddc],esp
  407a16:	aad    0xf7
  407a18:	aam    0xe1
  407a1a:	and    ah,al
  407a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1d:	std    
  407a1e:	and    edi,DWORD PTR [edx+0x7a30b860]
  407a24:	(bad)  
  407a25:	in     al,dx
  407a26:	outs   dx,BYTE PTR ds:[esi]
  407a27:	imul   ecx,DWORD PTR [esi+ebx*1+0x41],0x5a
  407a2c:	clc    
  407a2d:	mov    BYTE PTR [ecx],cl
  407a2f:	jb     0x407a33
  407a31:	mov    ch,bl
  407a33:	cdq    
  407a34:	lods   al,BYTE PTR ds:[esi]
  407a35:	lods   eax,DWORD PTR ds:[esi]
  407a36:	(bad)  
  407a38:	not    BYTE PTR [ecx+0x33]
  407a3b:	retf   0x6068
  407a3e:	cmp    DWORD PTR [esi+edi*1+0x70],0x8b28c500
  407a46:	dec    ebp
  407a47:	cld    
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x650e60fa
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	push   eax
  407b36:	dec    ebp
  407b37:	(bad)  
  407b38:	in     eax,dx
  407b39:	je     0x407b9d
  407b3b:	jnp    0x407b56
  407b3d:	mov    edx,DWORD PTR [ebx]
  407b3f:	dec    esp
  407b40:	xor    edi,0x28
  407b43:	retf   0x6a9a
  407b46:	xor    ebx,DWORD PTR [esp+edx*1]
  407b49:	pop    edi
  407b4a:	mov    edi,0x90a00e09
  407b4f:	std    
  407b50:	ret    0xd2f7
  407b53:	xchg   ecx,eax
  407b54:	lea    eax,[eax+0x3274e586]
  407b5a:	call   0x4f28:0x72516fd9
  407b61:	ins    DWORD PTR es:[edi],dx
  407b62:	sub    esi,DWORD PTR [edx+ecx*4-0x5e6d27f7]
  407b69:	push   edi
  407b6a:	cmp    eax,0x48f67de5
  407b6f:	(bad)  
  407b70:	mov    DWORD PTR [eax],ebp
  407b72:	jns    0x407ba9
  407b74:	pop    ecx
  407b75:	shr    BYTE PTR ds:0x39ef0ed0,0xce
  407b7c:	jb     0x407be9
  407b7e:	xor    eax,0x4d3cf456
  407b83:	cli    
  407b84:	icebp  
  407b85:	jge    0x407b56
  407b87:	jge    0x407b0c
  407b89:	retf   
  407b8a:	dec    ecx
  407b8b:	retf   
  407b8c:	mov    ds:0x19326c68,al
  407b91:	add    cl,BYTE PTR [esi-0x35]
  407b94:	mov    DWORD PTR [ebx-0x4c],edx
  407b97:	adc    BYTE PTR [ebx+0x18],0xdb
  407b9b:	aas    
  407b9c:	fisubr WORD PTR [edx-0x30]
  407b9f:	gs pushf 
  407ba1:	aad    0x2f
  407ba3:	ja     0x407b2f
  407ba5:	test   eax,0x45789179
  407baa:	and    eax,0xa03c4fb5
  407baf:	jnp    0x407b49
  407bb1:	and    ch,BYTE PTR [ecx-0x7f]
  407bb4:	jecxz  0x407bfe
  407bb6:	push   ebx
  407bb7:	jecxz  0x407b5d
  407bb9:	and    cl,BYTE PTR [esi]
  407bbb:	dec    esi
  407bbc:	sub    al,0x42
  407bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bbf:	pop    ss
  407bc0:	lds    esi,FWORD PTR [ebx]
  407bc2:	xor    DWORD PTR cs:[eax],esi
  407bc5:	or     al,0x29
  407bc7:	fidiv  DWORD PTR [esi-0x20]
  407bca:	sahf   
  407bcb:	xchg   esp,eax
  407bcc:	jecxz  0x407bb2
  407bce:	sbb    ah,al
  407bd0:	out    0x98,al
  407bd2:	push   edx
  407bd3:	pop    ebp
  407bd4:	xchg   ebx,eax
  407bd5:	push   ss
  407bd6:	pop    ebx
  407bd7:	dec    edi
  407bd8:	out    0x31,al
  407bda:	or     DWORD PTR [edx-0x57266431],0xffffffc9
  407be1:	hlt    
  407be2:	inc    edi
  407be3:	push   ss
  407be4:	(bad)  
  407be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407be7:	ja     0x407bbe
  407be9:	shl    BYTE PTR ds:0xd827d0e6,1
  407bef:	(bad)  
  407bf0:	daa    
  407bf1:	or     dl,dh
  407bf3:	pop    esi
  407bf4:	pop    ds
  407bf5:	mov    esp,0xb797a062
  407bfa:	cmp    eax,0x1d5a0991
  407bff:	(bad)  
  407c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c01:	daa    
  407c02:	out    0x5d,al
  407c04:	xchg   esi,eax
  407c05:	icebp  
  407c06:	ja     0x407c2b
  407c08:	popa   
  407c09:	mov    al,ah
  407c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c0c:	adc    eax,0x8b1af69b
  407c11:	and    eax,0x9566010b
  407c16:	or     BYTE PTR [edx-0x59],bh
  407c19:	mov    ds:0x9ab0c88f,eax
  407c1e:	loop   0x407bf5
  407c20:	loope  0x407bb1
  407c22:	add    al,0x6e
  407c24:	pushf  
  407c25:	jae    0x407c0f
  407c27:	add    dl,BYTE PTR [eax-0x67]
  407c2a:	jg     0x407c59
  407c2c:	cmp    ah,BYTE PTR [edx]
  407c2e:	mov    al,ds:0xb52a0705
  407c33:	imul   edi,DWORD PTR [ebp+edx*8+0x129b80cd],0x5fe0495d
  407c3e:	sub    al,BYTE PTR [ebp-0x34]
  407c41:	je     0x407c67
  407c43:	lahf   
  407c44:	mov    ds:0xc5abd8a8,al
  407c49:	fld    DWORD PTR [ebx-0x22]
  407c4c:	stos   DWORD PTR es:[edi],eax
  407c4d:	imul   edi,esp,0x353e3bea
  407c53:	mov    bl,al
  407c55:	scas   eax,DWORD PTR es:[edi]
  407c56:	cmp    esp,DWORD PTR [edx-0x5c]
  407c59:	in     al,0x41
  407c5b:	mov    bl,0x6c
  407c5d:	pushf  
  407c5e:	les    ebx,FWORD PTR [ecx]
  407c60:	mov    dl,0xfa
  407c62:	stos   BYTE PTR es:[edi],al
  407c63:	sahf   
  407c64:	(bad)  
  407c65:	xor    BYTE PTR [eax+ebx*4+0x113e34b1],bh
  407c6c:	jne    0x407cba
  407c6e:	retf   
  407c6f:	push   ebx
  407c70:	cmc    
  407c71:	mov    ebp,0x48a71d22
  407c76:	mov    ebx,0x1045ad4a
  407c7b:	add    eax,DWORD PTR [esi+0x13173cc3]
  407c81:	sbb    al,0xab
  407c83:	mov    dh,0x42
  407c85:	mov    esp,0xd189ec71
  407c8a:	pop    edx
  407c8b:	std    
  407c8c:	rol    DWORD PTR [edi-0x52ef2144],1
  407c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c93:	inc    edi
  407c94:	inc    edx
  407c95:	or     ebp,DWORD PTR [ecx]
  407c97:	arpl   WORD PTR [ecx],bp
  407c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c9a:	mov    esp,0xd50f6a9c
  407c9f:	stc    
  407ca0:	loop   0x407cfb
  407ca2:	adc    BYTE PTR [edi+edx*4-0x25],0x52
  407ca7:	(bad)  
  407ca8:	aam    0xc
  407caa:	scas   al,BYTE PTR es:[edi]
  407cab:	addr16 leave 
  407cad:	push   0x11
  407caf:	shl    BYTE PTR [ebx-0xad112f3],0x34
  407cb6:	and    DWORD PTR [edi+eiz*2],eax
  407cb9:	jle    0x407cb3
  407cbb:	mov    bl,0xc5
  407cbd:	cdq    
  407cbe:	mov    al,ds:0xf8ad9120
  407cc3:	jmp    0x407c51
  407cc5:	push   esp
  407cc6:	xlat   BYTE PTR ds:[ebx]
  407cc7:	add    eax,0xd42c4525
  407ccc:	jbe    0x407d23
  407cce:	inc    esi
  407ccf:	arpl   WORD PTR [ebp-0x385b6981],bx
  407cd5:	fistp  DWORD PTR [edi+0x5b8ddcc8]
  407cdb:	jne    0x407cf8
  407cdd:	stos   BYTE PTR es:[edi],al
  407cde:	sbb    edi,DWORD PTR [ebx+0xf756c3e]
  407ce4:	(bad)  
  407ce5:	jnp    0x407d3b
  407ce7:	addr16 push 0xf64ddde1
  407ced:	ds call 0xd24f2c22
  407cf3:	addr16 icebp 
  407cf5:	adc    eax,DWORD PTR [eax+0x147b0f59]
  407cfb:	dec    esi
  407cfc:	pop    ebp
  407cfd:	mov    DWORD PTR [edx-0x5946a815],esi
  407d03:	xor    BYTE PTR [edx],0x60
  407d06:	clc    
  407d07:	and    DWORD PTR [ebx+0x57],edx
  407d0a:	scas   eax,DWORD PTR es:[edi]
  407d0b:	sti    
  407d0c:	lahf   
  407d0d:	push   edi
  407d0e:	mov    edx,0xdbeee8d2
  407d13:	xor    BYTE PTR [edx],0xe6
  407d16:	adc    DWORD PTR [bx+si-0x2e],edx
  407d1a:	push   0xffffffca
  407d1c:	lahf   
  407d1d:	imul   DWORD PTR [ebp-0x44]
  407d20:	ret    
  407d21:	push   edi
  407d22:	add    ebp,DWORD PTR [ecx+ebx*8]
  407d25:	push   eax
  407d26:	aaa    
  407d27:	lahf   
  407d28:	call   ebx
  407d2a:	outs   dx,DWORD PTR ds:[esi]
  407d2b:	in     al,0x37
  407d2d:	aad    0x3f
  407d2f:	xor    edx,DWORD PTR [esi]
  407d31:	sar    BYTE PTR [eax+eiz*1-0x29365494],1
  407d38:	cld    
  407d39:	xchg   edx,eax
  407d3a:	push   ecx
  407d3b:	icebp  
  407d3c:	pop    eax
  407d3d:	mov    DWORD PTR [ebx+0x57371019],ebx
  407d43:	push   es
  407d44:	not    edx
  407d46:	nop
  407d47:	retf   0xbf8d
  407d4a:	xchg   ecx,eax
  407d4b:	pop    edx
  407d4c:	xlat   BYTE PTR ds:[ebx]
  407d4d:	xor    DWORD PTR [edx+0x48193a1b],esp
  407d53:	es icebp 
  407d55:	aas    
  407d56:	adc    eax,0x249a2913
  407d5b:	add    DWORD PTR [esi],ebp
  407d5d:	inc    eax
  407d5e:	add    esi,esp
  407d60:	push   cs
  407d61:	mov    bh,0x26
  407d63:	xor    al,dl
  407d65:	mov    ebp,0x84f738c0
  407d6a:	test   DWORD PTR [ebp-0x3886a652],eax
  407d70:	dec    esp
  407d71:	fwait
  407d72:	dec    ebp
  407d73:	pop    ebx
  407d74:	mov    ebx,0xb25f7736
  407d79:	push   0x2
  407d7b:	push   esi
  407d7c:	mov    edx,0xd274ad16
  407d81:	xchg   ebx,eax
  407d82:	test   BYTE PTR [ecx+0x7e],ah
  407d85:	(bad)  
  407d86:	das    
  407d87:	fs aad 0x7c
  407d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d8b:	lahf   
  407d8c:	sbb    eax,0xca447e60
  407d91:	sub    edi,DWORD PTR [eax-0x70]
  407d94:	mov    ecx,gs
  407d96:	mov    ebp,0x63dc72bd
  407d9b:	add    DWORD PTR [eax+esi*1+0x4263a4c3],eax
  407da2:	inc    edi
  407da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da4:	mov    esi,0x213f6525
  407da9:	outs   dx,BYTE PTR ds:[esi]
  407daa:	inc    ecx
  407dab:	and    ah,BYTE PTR [eax-0x5c352b63]
  407db1:	push   0xc3967e0a
  407db6:	jmp    0x407e20
  407db8:	pop    esp
  407db9:	or     eax,0x660923a7
  407dbe:	stos   DWORD PTR es:[edi],eax
  407dbf:	mov    gs,WORD PTR [eax-0x1c]
  407dc2:	sub    DWORD PTR [ebp+0x7a5eac68],edi
  407dc8:	in     al,0xb
  407dca:	jg     0x407de7
  407dcc:	sbb    al,0x3b
  407dce:	adc    ebx,DWORD PTR ds:0x9f6b5b26
  407dd4:	or     al,0xd6
  407dd6:	hlt    
  407dd7:	push   ebp
  407dd8:	cld    
  407dd9:	inc    BYTE PTR [edx+0x69]
  407ddc:	fstp   QWORD PTR [esi-0x38]
  407ddf:	fstp   DWORD PTR [edx-0x4152fce9]
  407de5:	stos   DWORD PTR es:[edi],eax
  407de6:	popf   
  407de7:	inc    ecx
  407de8:	push   ebp
  407de9:	mov    ds:0xa27ffd05,eax
  407dee:	fsubr  DWORD PTR [ecx+ecx*4-0x6ea4e202]
  407df5:	out    dx,eax
  407df6:	stos   DWORD PTR es:[edi],eax
  407df7:	xor    cl,BYTE PTR ds:0x58fe1a5f
  407dfd:	fidivr WORD PTR [ecx-0x7747de14]
  407e03:	mov    edi,0xd0e395a3
  407e08:	les    ebx,FWORD PTR [eax]
  407e0a:	add    DWORD PTR [ebp+0x1d82cd9b],edi
  407e10:	stos   DWORD PTR es:[edi],eax
  407e11:	mov    ch,0x45
  407e13:	shl    BYTE PTR [edi-0x65028b2a],cl
  407e19:	inc    esp
  407e1a:	stos   BYTE PTR es:[edi],al
  407e1b:	sub    BYTE PTR [esi-0x7bfd9a0b],bl
  407e21:	rol    BYTE PTR [ecx+0x2865bb7c],cl
  407e27:	inc    ecx
  407e28:	xor    edi,ebx
  407e2a:	outs   dx,BYTE PTR ds:[esi]
  407e2b:	aad    0x1e
  407e2d:	cmc    
  407e2e:	sub    eax,0x29024291
  407e33:	mov    edi,ecx
  407e35:	test   BYTE PTR [eax-0x4d475caf],bl
  407e3b:	into   
  407e3c:	mov    ebp,DWORD PTR [eax-0x270e302]
  407e42:	xor    al,0x8b
  407e44:	faddp  st(3),st
  407e46:	iret   
  407e47:	rcl    DWORD PTR fs:0xf7e34a4b,0xc
  407e4f:	lods   al,BYTE PTR ds:[esi]
  407e50:	mov    bl,0x32
  407e52:	ss mov ah,0xe3
  407e55:	cmc    
  407e56:	mov    esp,0x5df1cfb6
  407e5b:	sahf   
  407e5c:	popa   
  407e5d:	in     al,0x5d
  407e5f:	imul   esp,DWORD PTR [edx+0x51484f05],0x63
  407e66:	repnz pop ebp
  407e68:	mov    al,ds:0xe5424699
  407e6d:	jmp    0xb192fd14
  407e72:	xchg   BYTE PTR [esi-0x399e108],bh
  407e78:	test   al,0x53
  407e7a:	leave  
  407e7b:	aad    0x78
  407e7d:	(bad)  
  407e7e:	jae    0x407e3c
  407e80:	pop    DWORD PTR [ebx-0x34e7e95f]
  407e86:	lahf   
  407e87:	fdivr  DWORD PTR [ebx+0x4d]
  407e8a:	pop    ebp
  407e8b:	clc    
  407e8c:	je     0x407ea3
  407e8e:	in     eax,dx
  407e8f:	jge    0x407ed2
  407e91:	pop    ecx
  407e92:	push   ss
  407e93:	mov    DWORD PTR [ebp+0x5230e4f8],ebx
  407e99:	test   eax,0x44d2fc18
  407e9e:	test   eax,0x6b8fa98f
  407ea3:	loop   0x407f20
  407ea5:	jle    0x407ea5
  407ea7:	pusha  
  407ea8:	cmp    al,0x47
  407eaa:	pop    ecx
  407eab:	or     eax,0xca1b35fb
  407eb0:	xor    al,0xb6
  407eb2:	stc    
  407eb3:	lods   al,BYTE PTR ds:[esi]
  407eb4:	sub    eax,0x8a097a13
  407eb9:	sbb    dl,BYTE PTR [esi+eax*8]
  407ebc:	out    0x60,al
  407ebe:	les    ecx,FWORD PTR [eax-0x5b]
  407ec1:	mov    edx,0x5590007b
  407ec6:	push   ss
  407ec7:	sub    ebx,DWORD PTR [ebx-0x7c30a84]
  407ecd:	inc    eax
  407ece:	(bad)  
  407ecf:	xchg   edx,eax
  407ed0:	lods   eax,DWORD PTR ds:[esi]
  407ed1:	int3   
  407ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed3:	clc    
  407ed4:	mov    cl,bh
  407ed6:	adc    edi,DWORD PTR ds:0x1af9039
  407edc:	stos   BYTE PTR es:[edi],al
  407edd:	call   0x7302:0x5e254fae
  407ee4:	iret   
  407ee5:	in     al,0xbc
  407ee7:	fidivr WORD PTR [ecx+0x71721b28]
  407eed:	jmp    0xe00edfce
  407ef2:	sub    bl,dl
  407ef4:	adc    al,0x71
  407ef6:	sbb    ecx,DWORD PTR [edx]
  407ef8:	scas   eax,DWORD PTR es:[edi]
  407ef9:	pop    eax
  407efa:	ins    DWORD PTR es:[edi],dx
  407efb:	xor    cl,BYTE PTR [eax-0x26]
  407efe:	call   0xce93ee08
  407f03:	das    
  407f04:	cdq    
  407f05:	popf   
  407f06:	pop    edi
  407f07:	cmp    BYTE PTR [esi-0x63],dh
  407f0a:	push   eax
  407f0b:	push   edx
  407f0c:	push   esp
  407f0d:	shl    BYTE PTR [ebx+0x6b],1
  407f10:	in     eax,dx
  407f11:	pop    ecx
  407f12:	or     ch,BYTE PTR [edi-0x24]
  407f15:	sbb    al,0x42
  407f17:	pop    ebx
  407f18:	mov    ds:0x674ff32a,eax
  407f1d:	in     eax,0x94
  407f1f:	jbe    0x407ecd
  407f21:	jmp    0x6b991f56
  407f26:	int3   
  407f27:	lahf   
  407f28:	dec    ebx
  407f29:	aaa    
  407f2a:	in     eax,dx
  407f2b:	repz dec ecx
  407f2d:	mov    bh,0x20
  407f2f:	(bad)
  407f32:	xor    DWORD PTR [edx+0x703ea7cf],0x56b09ad
  407f3c:	sbb    bl,BYTE PTR [ecx+0x1]
  407f3f:	push   eax
  407f40:	sbb    bh,BYTE PTR [ecx]
  407f42:	mov    ecx,cs
  407f44:	push   ebx
  407f45:	aam    0x4
  407f47:	sbb    BYTE PTR [ecx-0x7a8068ed],bl
  407f4d:	sub    DWORD PTR [edx-0xf],edi
  407f50:	hlt    
  407f51:	imul   esi,esp,0x4edac8e5
  407f57:	push   0x8489e82
  407f5c:	mov    edx,0x4b6a4219
  407f61:	data16 xor BYTE PTR fs:[ebp-0x9ea311e],dl
  407f69:	jge    0x407f4b
  407f6b:	mov    edx,esi
  407f6d:	adc    eax,0xfae9bed5
  407f72:	(bad)  
  407f73:	and    al,0xf8
  407f75:	ror    esi,1
  407f77:	popa   
  407f78:	test   BYTE PTR [edx+0x1ea80d12],0x9c
  407f7f:	xchg   ebx,eax
  407f80:	and    ecx,DWORD PTR [edx+0x3]
  407f83:	mov    ah,0x9e
  407f85:	add    DWORD PTR [esi+0x492b47f3],eax
  407f8b:	test   al,0x2f
  407f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8e:	adc    bh,BYTE PTR [edi+ebx*8]
  407f91:	rcr    DWORD PTR [eax-0x5da3d6f6],1
  407f97:	or     DWORD PTR [edi+0x9],edx
  407f9a:	imul   esi,DWORD PTR [esi-0x61],0x889b4c46
  407fa1:	xchg   ebx,eax
  407fa2:	psubd  mm4,QWORD PTR [esi+ecx*2-0x75]
  407fa7:	scas   al,BYTE PTR es:[edi]
  407fa8:	pop    edx
  407fa9:	add    al,cl
  407fab:	in     al,0x48
  407fad:	stc    
  407fae:	in     eax,dx
  407faf:	inc    edi
  407fb0:	mov    ebp,0xfb80441a
  407fb5:	imul   esi,DWORD PTR [edi+eiz*8],0xffffffc9
  407fb9:	inc    eax
  407fba:	dec    ebp
  407fbb:	mov    ds:0xe4240873,al
  407fc0:	cmc    
  407fc1:	jge    0x407fb0
  407fc3:	fisttp QWORD PTR [ecx]
  407fc5:	pop    eax
  407fc6:	push   ecx
  407fc7:	xchg   ebp,eax
  407fc8:	pop    ebx
  407fc9:	rcr    DWORD PTR [esi],cl
  407fcb:	inc    edi
  407fcc:	and    eax,esp
  407fce:	loop   0x407f5e
  407fd0:	aam    0x1c
  407fd2:	iret   
  407fd3:	pop    eax
  407fd4:	push   ebx
  407fd5:	fmul   st,st(4)
  407fd7:	leave  
  407fd8:	hlt    
  407fd9:	lds    esp,FWORD PTR [ebx-0x4f]
  407fdc:	lods   al,BYTE PTR ds:[esi]
  407fdd:	pop    esi
  407fde:	stc    
  407fdf:	adc    cl,dl
  407fe1:	sbb    eax,0x37c53261
  407fe6:	sahf   
  407fe7:	enter  0xb848,0x3
  407feb:	lea    esi,[esi+0x61]
  407fee:	test   al,0xc4
  407ff0:	adc    DWORD PTR [ebx+eax*8+0x16513121],ebx
  407ff7:	sbb    bh,bl
  407ff9:	push   esp
  407ffa:	out    dx,eax
  407ffb:	rcl    DWORD PTR [ebx-0x24],cl
  407ffe:	jne    0x407fec
  408000:	push   esi
  408001:	cmc    
  408002:	repnz std 
  408004:	adc    al,BYTE PTR [edi]
  408006:	mov    ebp,0x9547f626
  40800b:	and    al,0x55
  40800d:	inc    esi
  40800e:	xor    DWORD PTR [edi-0x488cb8e7],ebp
  408014:	jmp    0x954:0xa5e9e2cc
  40801b:	enter  0xc7a8,0x14
  40801f:	and    BYTE PTR [edx],0xaa
  408022:	cli    
  408023:	push   ds
  408024:	outs   dx,BYTE PTR ds:[esi]
  408025:	cmp    eax,esi
  408027:	dec    edi
  408028:	aam    0x85
  40802a:	lahf   
  40802b:	xchg   DWORD PTR [edi-0x763747d6],ebp
  408031:	mov    ebp,0xb34f8f32
  408036:	cmp    ebx,DWORD PTR [edx-0x6f]
  408039:	adc    eax,DWORD PTR [esi+eax*2-0x2cb0b8b7]
  408040:	or     BYTE PTR [eax],0x88
  408043:	pop    ss
  408044:	xor    ebp,DWORD PTR ds:0x272fe92
  40804a:	push   esi
  40804b:	stos   BYTE PTR es:[edi],al
  40804c:	push   eax
  40804d:	shl    BYTE PTR [edi*2+0x38072d2d],0x7d
  408055:	lods   eax,DWORD PTR ds:[esi]
  408056:	dec    ebp
  408057:	push   ebx
  408058:	int3   
  408059:	iret   
  40805a:	mov    esi,0x2dc6e2a1
  40805f:	xchg   edi,eax
  408060:	loopne 0x408040
  408062:	loop   0x40802f
  408064:	fs xor al,0x87
  408067:	sub    DWORD PTR [edi-0x65],ecx
  40806a:	(bad)  
  40806b:	mov    esp,0x24e72543
  408070:	mov    edx,0x2bc9fc61
  408075:	loop   0x407ffa
  408077:	sbb    eax,0x36a7e41a
  40807c:	mov    eax,esi
  40807e:	lock int 0xb7
  408081:	or     eax,0x75a386ca
  408086:	xchg   ecx,eax
  408087:	and    DWORD PTR [eax+0x504109],esi
  40808d:	mov    DWORD PTR [ebp+eax*2-0x67],0x3ba554ab
  408095:	sahf   
  408096:	lahf   
  408097:	cli    
  408098:	adc    edx,DWORD PTR [edi+0x49]
  40809b:	dec    edx
  40809c:	xor    al,dh
  40809e:	adc    al,0x3b
  4080a0:	imul   esp,DWORD PTR [ecx],0x434e004b
  4080a6:	and    edx,edi
  4080a8:	push   esp
  4080a9:	imul   esp,DWORD PTR [ebx],0x9dcb75d6
  4080af:	ret    0x9299
  4080b2:	xor    eax,0xd4d82c37
  4080b7:	or     BYTE PTR [ecx+0x77],0xc0
  4080bb:	out    dx,al
  4080bc:	push   ebx
  4080bd:	sub    DWORD PTR ds:0x8247c6c3,ebp
  4080c3:	leave  
  4080c4:	lods   al,BYTE PTR ds:[esi]
  4080c5:	cwde   
  4080c6:	jge    0x408127
  4080c8:	mov    DWORD PTR [eax+eax*4-0x1ca8e363],edx
  4080cf:	xchg   ebp,eax
  4080d0:	retf   
  4080d1:	pop    esi
  4080d2:	dec    ebx
  4080d3:	pop    ebx
  4080d4:	cmp    ecx,DWORD PTR [esi]
  4080d6:	into   
  4080d7:	xor    ebp,esp
  4080d9:	popa   
  4080da:	mov    ah,0x5
  4080dc:	xlat   BYTE PTR ds:[ebx]
  4080dd:	sub    eax,0x3d439d2c
  4080e2:	xchg   ecx,eax
  4080e3:	mov    edx,esp
  4080e5:	xchg   edx,ebx
  4080e7:	inc    esi
  4080e8:	mov    dh,0x63
  4080ea:	dec    esi
  4080eb:	retf   
  4080ec:	push   ebp
  4080ed:	dec    edi
  4080ee:	aaa    
  4080ef:	or     bh,dl
  4080f1:	push   0x75
  4080f3:	add    eax,0x6fed257b
  4080f8:	scas   al,BYTE PTR es:[edi]
  4080f9:	loopne 0x408134
  4080fb:	push   eax
  4080fc:	test   eax,0xf57d095d
  408101:	jmp    0xfbfd:0x3e9d2e24
  408108:	into   
  408109:	retf   
  40810a:	mov    ebp,fs
  40810c:	push   edi
  40810d:	pop    edi
  40810e:	aad    0x6a
  408110:	cmp    BYTE PTR [eax],0x65
  408113:	test   al,0x81
  408115:	xor    DWORD PTR [ebx],ecx
  408117:	aas    
  408118:	inc    ecx
  408119:	test   al,0xd6
  40811b:	xchg   DWORD PTR [eax+0x5a7f73b],ebx
  408121:	in     al,dx
  408122:	pop    ss
  408123:	out    dx,al
  408124:	cmc    
  408125:	loopne 0x40814f
  408127:	iret   
  408128:	xchg   esi,eax
  408129:	sub    ebp,DWORD PTR [edi-0x567bf942]
  40812f:	(bad)  
  408130:	arpl   ax,si
  408132:	sub    cl,ah
  408134:	cld    
  408135:	jg     0x4080ed
  408137:	(bad)  
  408138:	ficom  WORD PTR [edi+0x2a]
  40813b:	inc    ebx
  40813c:	dec    esi
  40813d:	(bad)  
  40813e:	sahf   
  40813f:	xchg   ebx,eax
  408140:	imul   edx,DWORD PTR [edi+0xc],0xbb047ee7
  408147:	xchg   ebp,eax
  408148:	es pop eax
  40814a:	into   
  40814b:	push   ds
  40814c:	add    DWORD PTR [esi],esp
  40814e:	mov    eax,0xac32053e
  408153:	pop    ds
  408154:	data16 jp 0x40818c
  408157:	add    DWORD PTR [eax*1-0x51a68c4c],edi
  40815e:	push   ss
  40815f:	pop    esi
  408160:	lock push es
  408162:	push   ebp
  408163:	or     ebp,esi
  408165:	jle    0x4081d7
  408167:	into   
  408168:	sbb    DWORD PTR [esi-0x2f],0xe993375
  40816f:	js     0x4081d7
  408171:	push   ebp
  408172:	rcr    BYTE PTR [edi],cl
  408174:	in     eax,dx
  408175:	enter  0xde8a,0x60
  408179:	mov    ch,0xa0
  40817b:	xlat   BYTE PTR ds:[bx]
  40817d:	in     al,dx
  40817e:	push   0xffffffa6
  408180:	rcr    DWORD PTR [ebp-0x35],0x8f
  408184:	cwde   
  408185:	lds    ebp,FWORD PTR [esi-0x69e1434c]
  40818b:	data16 loop 0x408142
  40818e:	push   edi
  40818f:	mov    ebx,fs
  408191:	popa   
  408192:	mov    ch,0x9e
  408194:	push   eax
  408195:	dec    ebx
  408196:	leave  
  408197:	clc    
  408198:	mov    ebp,0x2dcc1d46
  40819d:	in     al,0xcc
  40819f:	xor    eax,DWORD PTR [edi]
  4081a1:	les    ebp,FWORD PTR [edi]
  4081a3:	xchg   ebx,eax
  4081a4:	je     0x408187
  4081a6:	xchg   esp,eax
  4081a7:	push   0x9a82652d
  4081ac:	call   0xa975:0x35176fb8
  4081b3:	push   ds
  4081b4:	and    ebx,DWORD PTR [edx+0x24a3713c]
  4081ba:	pmuludq mm7,mm0
  4081bd:	sub    dl,BYTE PTR [ecx+0x5a5d8052]
  4081c3:	push   edi
  4081c4:	lahf   
  4081c5:	retf   0x7650
  4081c8:	adc    al,0x3e
  4081ca:	into   
  4081cb:	retf   
  4081cc:	stc    
  4081cd:	retf   0xfb8b
  4081d0:	mov    al,ds:0x70d0e997
  4081d5:	mov    bh,BYTE PTR [ebp+0x340e4ad8]
  4081db:	iret   
  4081dc:	aaa    
  4081dd:	xor    edi,DWORD PTR [ebx-0x35]
  4081e0:	shl    DWORD PTR [ebx+0x9],0x44
  4081e4:	cmp    eax,ecx
  4081e6:	shl    esp,1
  4081e8:	sbb    esp,DWORD PTR [eax-0x541c0ec6]
  4081ee:	cwde   
  4081ef:	lahf   
  4081f0:	push   ebp
  4081f1:	sbb    al,0xe5
  4081f3:	mov    edx,0x76f53ab5
  4081f8:	add    DWORD PTR [edi-0x3c990e64],ecx
  4081fe:	stos   BYTE PTR es:[edi],al
  4081ff:	imul   ecx,ebx,0xdcdcc414
  408205:	stc    
  408206:	(bad)  
  408207:	adc    eax,0xd49c2489
  40820c:	sub    esi,DWORD PTR [edi-0x382206e0]
  408212:	(bad)  
  408213:	dec    edx
  408214:	jb     0x40824e
  408216:	jecxz  0x408236
  408218:	fdiv   st,st(3)
  40821a:	push   ebx
  40821b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40821c:	out    dx,eax
  40821d:	pop    ecx
  40821e:	sub    bh,dl
  408220:	pop    ss
  408221:	xor    BYTE PTR [eax],ch
  408223:	mov    ds:0x16961b2a,al
  408228:	jle    0x4081d7
  40822a:	(bad)  
  40822b:	xor    BYTE PTR [ecx+ecx*8+0xc],ah
  40822f:	mov    al,0x69
  408231:	fnstcw WORD PTR [edx]
  408233:	jbe    0x408213
  408235:	xchg   esp,eax
  408236:	jo     0x40823b
  408238:	fnstsw WORD PTR [edx]
  40823a:	call   0x1249:0x6f628095
  408241:	test   eax,0x776b7616
  408246:	dec    ebx
  408247:	ins    DWORD PTR es:[edi],dx
  408248:	cmp    al,0xdc
  40824a:	jl     0x4082b5
  40824c:	scas   al,BYTE PTR es:[edi]
  40824d:	lahf   
  40824e:	sub    BYTE PTR [edi+0x708b2246],ah
  408254:	mov    eax,0xc2779a57
  408259:	lods   eax,DWORD PTR ds:[esi]
  40825a:	(bad)  
  40825b:	sub    DWORD PTR [esi],ecx
  40825d:	adc    bh,al
  40825f:	sar    BYTE PTR [ecx],cl
  408261:	dec    esi
  408262:	xchg   ecx,eax
  408263:	or     eax,0xef395ed0
  408268:	pop    esi
  408269:	enter  0xdeca,0xd7
  40826d:	mov    bh,0x3d
  40826f:	scas   eax,DWORD PTR es:[edi]
  408270:	xchg   al,al
  408272:	push   cs
  408273:	inc    ebp
  408274:	sub    bl,BYTE PTR [ebx]
  408276:	push   cs
  408277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408278:	lods   al,BYTE PTR ds:[esi]
  408279:	mov    ebp,0xe8da7221
  40827e:	jns    0x4082e5
  408280:	sar    BYTE PTR [eax-0x20d4aa74],1
  408286:	inc    eax
  408287:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408289:	sub    DWORD PTR [eax+0x4d],edx
  40828c:	sub    DWORD PTR [ebx+eax*1],esp
  40828f:	out    dx,al
  408290:	or     dl,BYTE PTR gs:[edx+0x39]
  408294:	test   BYTE PTR [ebx],ah
  408296:	cs stos DWORD PTR es:[edi],eax
  408298:	push   es
  408299:	mov    eax,0x2bee964d
  40829e:	push   ds
  40829f:	(bad)  
  4082a0:	loop   0x408307
  4082a2:	adc    al,dl
  4082a4:	lea    ecx,[edi-0x128e2462]
  4082aa:	jns    0x408299
  4082ac:	sub    ebx,esi
  4082ae:	inc    eax
  4082af:	ss inc ebp
  4082b1:	or     dh,BYTE PTR [ebx+0x12]
  4082b4:	mov    bh,dh
  4082b6:	dec    edi
  4082b7:	adc    esp,DWORD PTR [ecx-0x73d3ec62]
  4082bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082be:	push   cs
  4082bf:	ret    0xa753
  4082c2:	adc    dh,BYTE PTR ds:0x56449916
  4082c8:	pop    eax
  4082c9:	fincstp 
  4082cb:	imul   BYTE PTR [edi]
  4082cd:	cdq    
  4082ce:	into   
  4082cf:	mov    al,es:0x2036e682
  4082d5:	sbb    eax,0xa628541c
  4082da:	cmc    
  4082db:	cli    
  4082dc:	test   DWORD PTR [edi+0x7],edx
  4082df:	or     eax,DWORD PTR [ecx-0x32]
  4082e2:	and    edx,edx
  4082e4:	push   ebx
  4082e5:	mov    edx,0x4194532e
  4082ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082eb:	sub    edx,esp
  4082ed:	test   DWORD PTR [eax-0x5d],eax
  4082f0:	jb     0x408301
  4082f2:	test   BYTE PTR [edx+0x51804244],cl
  4082f8:	jecxz  0x408368
  4082fa:	xor    ah,BYTE PTR [ecx]
  4082fc:	jmp    0x498b3f94
  408301:	sbb    al,0xc
  408303:	pusha  
  408304:	cmp    cl,BYTE PTR [ebp+ecx*2+0x25]
  408308:	dec    ebx
  408309:	lods   eax,DWORD PTR ds:[esi]
  40830a:	sbb    BYTE PTR [edi+eax*2+0x71],dh
  40830e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40830f:	in     eax,0xcd
  408311:	mov    dl,0x6
  408313:	cwde   
  408314:	gs aam 0x75
  408317:	iret   
  408318:	(bad)
  40831c:	je     0x4082c8
  40831e:	mov    BYTE PTR [ebx],cl
  408320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408321:	xchg   ebx,eax
  408322:	mov    al,ds:0x8cf43dc5
  408327:	mov    ebp,DWORD PTR [ebx]
  408329:	sbb    al,0xe4
  40832b:	popf   
  40832c:	out    0xc8,al
  40832e:	cmp    bh,BYTE PTR [edi]
  408330:	dec    ecx
  408331:	lods   eax,DWORD PTR cs:[esi]
  408333:	lahf   
  408334:	inc    edx
  408335:	call   0xba8c:0xc8723bf6
  40833c:	dec    edx
  40833d:	ret    0xe302
  408340:	sbb    esi,DWORD PTR [edi+0x74]
  408343:	push   esp
  408344:	xor    bl,ah
  408346:	(bad)  
  408347:	js     0x40838c
  408349:	push   0xffffffc3
  40834b:	cld    
  40834c:	mov    edi,0xc2ba3490
  408351:	adc    bh,BYTE PTR [ecx+0x49]
  408354:	mov    eax,0xd0652d79
  408359:	and    DWORD PTR [edx],ecx
  40835b:	sti    
  40835c:	(bad)  
  40835d:	ficomp WORD PTR [esi]
  40835f:	ds xchg esi,eax
  408361:	sbb    edi,esp
  408363:	outs   dx,DWORD PTR ds:[esi]
  408364:	ja     0x4082fe
  408366:	jnp    0x4083e2
  408368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408369:	or     BYTE PTR [edi+0x75c53ff7],dl
  40836f:	sub    al,0xcd
  408371:	(bad)  
  408372:	cli    
  408373:	or     al,0x48
  408375:	sub    eax,DWORD PTR [esi]
  408377:	(bad)  
  408378:	cs dec esp
  40837a:	add    BYTE PTR ds:0xf3eec1f8,dl
  408380:	lods   al,BYTE PTR ds:[esi]
  408381:	sbb    al,0xe1
  408383:	mov    ds,WORD PTR [ebx]
  408385:	and    edx,DWORD PTR [esi-0x2e]
  408388:	test   al,0x56
  40838a:	lods   al,BYTE PTR ds:[esi]
  40838b:	out    0x8a,al
  40838d:	push   0x9e0db858
  408392:	and    dl,BYTE PTR [ebx+eiz*4+0x79]
  408396:	xor    DWORD PTR [ecx+0x272467ad],edx
  40839c:	fisttp WORD PTR [edi+edi*8]
  40839f:	jp     0x4083d9
  4083a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083a2:	push   ss
  4083a3:	jo     0x40832a
  4083a5:	and    DWORD PTR [ebx],eax
  4083a7:	ret    
  4083a8:	pop    edi
  4083a9:	rcl    BYTE PTR [eax+0x32106ba6],0x8e
  4083b0:	int3   
  4083b1:	lods   eax,DWORD PTR ds:[esi]
  4083b2:	mov    ebp,0xb71cfda3
  4083b7:	ficomp DWORD PTR [ebp+edi*8+0x2e34fdc5]
  4083be:	jg     0x4083fe
  4083c0:	adc    esp,DWORD PTR [esi-0x4cb76a5e]
  4083c6:	idiv   cl
  4083c8:	in     eax,dx
  4083c9:	push   0xa6217322
  4083ce:	mov    ebx,0x489d3d87
  4083d3:	call   0x2eb4:0x29464c54
  4083da:	fadd   QWORD PTR [ebp-0x7dc503e8]
  4083e0:	adc    al,0x3c
  4083e2:	icebp  
  4083e3:	loopne 0x4083c8
  4083e5:	mov    ah,0x41
  4083e7:	shrd   DWORD PTR [edi+edi*2-0x24e52def],ebx,0xa8
  4083f0:	daa    
  4083f1:	mov    cl,0xe1
  4083f3:	imul   esp,edi,0xffffffbb
  4083f6:	cwde   
  4083f7:	sar    al,cl
  4083f9:	fld    TBYTE PTR [edi+0x21]
  4083fc:	bound  ebp,QWORD PTR [ecx-0x5c48a8ca]
  408402:	icebp  
  408403:	cli    
  408404:	ds in  eax,dx
  408406:	xor    eax,0x4ad376a9
  40840b:	fwait
  40840c:	dec    ebp
  40840d:	enter  0x15a1,0x30
  408411:	pop    esi
  408412:	mov    dh,0x7b
  408414:	jge    0x408483
  408416:	mov    eax,ds:0x70946b76
  40841b:	call   0x95a:0x4952460b
  408422:	into   
  408423:	xor    eax,0x1c93e0ac
  408428:	pop    ebp
  408429:	es mov edi,0x248b9f3d
  40842f:	push   ds
  408430:	and    ecx,DWORD PTR [edi+ebx*4]
  408433:	imul   esi,edx,0xc5484da
  408439:	xor    dh,BYTE PTR [ebx+0x20eac782]
  40843f:	add    al,0x48
  408441:	(bad)  
  408442:	repz sub DWORD PTR ds:0x40db138c,ebx
  408449:	fcom   st(1)
  40844b:	or     ah,BYTE PTR [edx-0x38c88048]
  408451:	sti    
  408452:	daa    
  408453:	xor    al,0x4e
  408455:	sub    al,0x5b
  408457:	test   al,0xcb
  408459:	mov    bh,0x8
  40845b:	mov    eax,DWORD PTR [edi+0x79b72f81]
  408461:	inc    ebx
  408462:	(bad)
  408465:	push   esp
  408466:	jno    0x40848c
  408468:	aas    
  408469:	push   ss
  40846a:	dec    ecx
  40846b:	jnp    0x4084d6
  40846d:	xchg   esi,ebx
  40846f:	add    ecx,eax
  408471:	xchg   edx,eax
  408472:	mov    ebp,?
  408474:	out    dx,al
  408475:	mov    cl,0xba
  408477:	pop    es
  408478:	jmp    0x4084b6
  40847a:	and    eax,0xfd44a825
  40847f:	imul   eax,DWORD PTR [edi+ecx*4-0x73],0x4a
  408484:	jne    0x408502
  408486:	jl     0x40845d
  408488:	dec    eax
  408489:	dec    edi
  40848a:	popa   
  40848b:	popa   
  40848c:	aad    0x33
  40848e:	repz popa 
  408490:	sar    DWORD PTR [ebx-0x41],1
  408493:	push   ebp
  408494:	jp     0x408440
  408496:	push   edi
  408497:	dec    eax
  408498:	pop    edi
  408499:	and    ebx,DWORD PTR [ebx]
  40849b:	sub    DWORD PTR [eax-0xd],edx
  40849e:	int    0x47
  4084a0:	sbb    al,0xcb
  4084a2:	xchg   esp,eax
  4084a3:	imul   eax,DWORD PTR [ebx+eax*1+0x7c09a14e],0xffffffd1
  4084ab:	in     al,dx
  4084ac:	aad    0xfd
  4084ae:	or     bh,ah
  4084b0:	xchg   ebx,eax
  4084b1:	xor    edx,DWORD PTR [ebx+0xd5f5d19]
  4084b7:	or     BYTE PTR [ebp+0x62],ah
  4084ba:	and    dl,dh
  4084bc:	mov    eax,ds:0x781b8bf1
  4084c1:	fcomi  st,st(3)
  4084c3:	xor    DWORD PTR [ebp-0x1d3ea254],ebp
  4084c9:	in     eax,0x94
  4084cb:	mov    ah,0xc4
  4084cd:	push   esi
  4084ce:	sar    BYTE PTR [edi+eiz*4-0x58],cl
  4084d2:	(bad)  
  4084d3:	push   es
  4084d4:	pop    esi
  4084d5:	push   es
  4084d6:	push   es
  4084d7:	dec    edi
  4084d8:	out    dx,al
  4084d9:	xor    eax,0xc7e117cd
  4084de:	inc    ecx
  4084df:	xchg   ebp,eax
  4084e0:	(bad)  
  4084e1:	clc    
  4084e2:	push   eax
  4084e3:	arpl   sp,sp
  4084e5:	pushf  
  4084e6:	sbb    eax,0xb1fa1d87
  4084eb:	in     al,0x7b
  4084ed:	addr16 mov ?,edx
  4084f0:	clc    
  4084f1:	pop    eax
  4084f2:	in     eax,dx
  4084f3:	scas   al,BYTE PTR es:[edi]
  4084f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f5:	cmp    edx,DWORD PTR [ecx-0x4]
  4084f8:	sub    eax,0x423edfde
  4084fd:	aaa    
  4084fe:	jb     0x408577
  408500:	sar    BYTE PTR [edi-0x7d7f1ae0],1
  408506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408507:	js     0x408513
  408509:	push   eax
  40850a:	and    al,ch
  40850c:	iret   
  40850d:	jo     0x4084a6
  40850f:	scas   eax,DWORD PTR es:[edi]
  408510:	out    dx,al
  408511:	cdq    
  408512:	scas   eax,DWORD PTR es:[edi]
  408513:	lahf   
  408514:	mov    edi,0xde3adc78
  408519:	mov    edi,0xacac84e2
  40851e:	in     al,dx
  40851f:	xor    eax,0x414aa793
  408524:	jbe    0x4084d7
  408526:	or     al,0xcc
  408528:	mov    al,ds:0x7f7fe9d
  40852d:	adc    DWORD PTR [edx-0x1ef339b3],ebx
  408533:	and    eax,0x4e2d4a4c
  408538:	push   esp
  408539:	pop    eax
  40853a:	mov    es,WORD PTR [edi+0x5bc5fe0f]
  408540:	adc    ebp,0xf8a120c7
  408546:	jp     0x408535
  408548:	push   cs
  408549:	hlt    
  40854a:	mov    esi,0x6d3c9bb1
  40854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408550:	inc    ebx
  408551:	mov    ebp,0x34c2a9fc
  408556:	inc    esi
  408557:	pushf  
  408558:	(bad)  
  408559:	fdivr  DWORD PTR [edx]
  40855b:	cs push 0x56
  40855e:	jb     0x408574
  408560:	cwde   
  408561:	shl    BYTE PTR [esi-0x68],1
  408564:	dec    eax
  408565:	inc    edi
  408566:	cld    
  408567:	xchg   edx,eax
  408568:	test   DWORD PTR es:[ebx+eax*1-0x65],ecx
  40856d:	inc    eax
  40856e:	jns    0x4084f9
  408570:	ins    BYTE PTR es:[edi],dx
  408571:	cmp    dl,BYTE PTR [edi+eiz*1+0x1b]
  408575:	xor    BYTE PTR [ebp-0x68],ch
  408578:	jl     0x408544
  40857a:	neg    DWORD PTR [esi-0x3f1d4811]
  408580:	mov    edx,0xed81fce0
  408585:	shr    DWORD PTR [ecx+0x1c82f5b1],1
  40858b:	in     al,0xd
  40858d:	(bad)  
  40858e:	pop    ebx
  40858f:	xchg   ecx,eax
  408590:	jnp    0x408603
  408592:	lds    esp,FWORD PTR [ebx+0x77275fee]
  408598:	lea    esi,[esi-0x80]
  40859b:	adc    DWORD PTR [ebp-0x20],esi
  40859e:	sub    dh,BYTE PTR [esi+edi*8-0x2e70b635]
  4085a5:	jmp    0x287a:0xbfbc471f
  4085ac:	jne    0x4085ac
  4085ae:	mov    esi,0x1079362d
  4085b3:	jp     0x4085af
  4085b5:	in     eax,dx
  4085b6:	out    dx,eax
  4085b7:	loope  0x408551
  4085b9:	push   esp
  4085ba:	dec    esi
  4085bb:	add    dl,BYTE PTR [ebx+esi*4-0x70629f90]
  4085c2:	leave  
  4085c3:	or     BYTE PTR [edx+eiz*2+0x2d2a0462],dh
  4085ca:	(bad)  
  4085cb:	jmp    0x40856b
  4085cd:	sbb    eax,0x53be285c
  4085d2:	cs mov edx,0xcfc4b3a2
  4085d8:	retf   
  4085d9:	jb     0x40856a
  4085db:	out    0xac,eax
  4085dd:	add    BYTE PTR [ebx-0x4e850a60],ah
  4085e3:	cwde   
  4085e4:	stc    
  4085e5:	gs repz out 0x94,al
  4085e9:	outs   dx,BYTE PTR ds:[esi]
  4085ea:	sahf   
  4085eb:	sahf   
  4085ec:	bound  esi,QWORD PTR [edx-0x34]
  4085ef:	cmc    
  4085f0:	js     0x408600
  4085f2:	aas    
  4085f3:	cdq    
  4085f4:	mov    ah,0x4a
  4085f6:	jl     0x4085c1
  4085f8:	dec    ecx
  4085f9:	xlat   BYTE PTR cs:[ebx]
  4085fb:	jl     0x408608
  4085fd:	ins    BYTE PTR es:[edi],dx
  4085fe:	jmp    0xce27:0x1df35a7a
  408605:	scas   eax,DWORD PTR es:[edi]
  408606:	lahf   
  408607:	ss cmp ecx,ebp
  40860a:	mov    bl,0x94
  40860c:	or     BYTE PTR [eax+esi*4+0x41],ah
  408610:	push   0xa752d991
  408615:	xor    al,0x75
  408617:	dec    esp
  408618:	sbb    edx,edi
  40861a:	adc    ah,bh
  40861c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40861d:	ja     0x408624
  40861f:	bswap  eax
  408621:	dec    ebp
  408622:	pop    ds
  408623:	sbb    al,0xe1
  408625:	jb     0x408693
  408627:	loope  0x408610
  408629:	push   ss
  40862a:	mov    cl,0xaf
  40862c:	mov    eax,ds:0x1a70773
  408631:	aas    
  408632:	bound  ecx,QWORD PTR [ebp-0x45]
  408635:	enter  0xf545,0x99
  408639:	lds    ebp,FWORD PTR ds:0x6769f262
  40863f:	jnp    0x408620
  408641:	arpl   si,cx
  408643:	pusha  
  408644:	xchg   al,bh
  408646:	cmp    ecx,DWORD PTR [esi-0x4d]
  408649:	inc    eax
  40864a:	call   0x698e:0x677977f4
  408651:	push   es
  408652:	fmul   QWORD PTR [edx*1-0x46f4c8a2]
  408659:	xor    edi,ebp
  40865b:	lahf   
  40865c:	out    0xf8,al
  40865e:	dec    edi
  40865f:	je     0x40860e
  408661:	ja     0x40866f
  408663:	adc    DWORD PTR gs:[ecx+ebp*8-0x318c6d41],esi
  40866b:	imul   edi,DWORD PTR [edx+0x38],0x96c27622
  408672:	sub    dl,al
  408674:	shr    DWORD PTR [esi+0x7d0811db],0x96
  40867b:	pop    ebp
  40867c:	sar    BYTE PTR [edx+0x1c],1
  40867f:	stos   BYTE PTR es:[edi],al
  408680:	pop    esi
  408681:	mov    ss:0x6e6b68aa,al
  408687:	cwde   
  408688:	imul   BYTE PTR [ebx+0x7d5f556a]
  40868e:	push   0xffffff9f
  408690:	test   DWORD PTR [ecx-0x66e782fb],ecx
  408696:	test   eax,0xb854443
  40869b:	mov    bh,0xd4
  40869d:	test   al,0xc8
  40869f:	jbe    0x40870e
  4086a1:	and    DWORD PTR [esi+0x4b],esi
  4086a4:	daa    
  4086a5:	jnp    0x4086fa
  4086a7:	xchg   BYTE PTR [ebx-0x34c77980],bl
  4086ad:	xchg   ebp,eax
  4086ae:	xor    dh,BYTE PTR [edx+0x29]
  4086b1:	(bad)  
  4086b2:	pop    edx
  4086b3:	xchg   ebp,eax
  4086b4:	pushf  
  4086b5:	cld    
  4086b6:	jo     0x4086fd
  4086b8:	dec    edx
  4086b9:	jmp    0x4086f7
  4086bb:	gs sub sp,bp
  4086bf:	inc    esp
  4086c0:	mov    esi,0x40402d7b
  4086c5:	push   es
  4086c6:	adc    ebp,DWORD PTR [ebx+0x30]
  4086c9:	mov    bl,0x22
  4086cb:	mov    dl,BYTE PTR [ecx+0x61fb4696]
  4086d1:	pop    eax
  4086d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d3:	or     ebp,DWORD PTR ds:0xc807bc43
  4086d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086da:	popf   
  4086db:	in     eax,dx
  4086dc:	cs jbe 0x40871c
  4086df:	xor    BYTE PTR [ebx+0x79],0x6a
  4086e3:	pop    esp
  4086e4:	add    eax,0xd84b61ee
  4086e9:	mov    bl,0x90
  4086eb:	fsub   QWORD PTR [eax]
  4086ed:	ds push edi
  4086ef:	test   BYTE PTR [ecx],bh
  4086f1:	out    dx,al
  4086f2:	in     eax,dx
  4086f3:	add    dh,BYTE PTR [eax+0x6227baa3]
  4086f9:	or     al,0xab
  4086fb:	sahf   
  4086fc:	dec    eax
  4086fd:	rcr    DWORD PTR [eax+0xf],1
  408700:	ds push edi
  408702:	jbe    0x408781
  408704:	mov    esi,0xe7e2a9e6
  408709:	out    dx,al
  40870a:	sbb    al,0x30
  40870c:	jae    0x408760
  40870e:	jnp    0x40870c
  408710:	mov    edx,0x9dbc7b6d
  408715:	je     0x408729
  408717:	inc    esi
  408718:	inc    esi
  408719:	mov    ah,0xb5
  40871b:	(bad)  
  40871c:	popa   
  40871d:	dec    ecx
  40871e:	pop    ss
  40871f:	test   bh,dl
  408721:	mov    ecx,0x1a9712e1
  408726:	fild   QWORD PTR [edx+0x5a2b13ca]
  40872c:	fisub  WORD PTR cs:[edi*1-0x1887fd1b]
  408734:	or     esi,DWORD PTR [eax+0x71a50f7]
  40873a:	xchg   esi,eax
  40873b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873c:	push   es
  40873d:	rcl    DWORD PTR [edx+0x62130ecf],1
  408743:	cmp    DWORD PTR [ecx-0xa40993a],ebx
  408749:	ret    
  40874a:	pop    ebp
  40874b:	pop    ecx
  40874c:	call   0xc69e:0xfeec9a75
  408753:	ss stc 
  408755:	aaa    
  408756:	jl     0x408793
  408758:	ss dec eax
  40875a:	dec    esp
  40875b:	jb     0x40870c
  40875d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40875e:	mov    esp,0xdec30966
  408763:	jle    0x4087aa
  408765:	(bad)  
  408766:	clc    
  408767:	sub    eax,0x55a75200
  40876c:	out    dx,al
  40876d:	add    BYTE PTR [esi+0x74],cl
  408770:	fisubr DWORD PTR [eax-0x6fc5f643]
  408776:	adc    BYTE PTR [edi-0x47eb20ae],0x8d
  40877d:	and    BYTE PTR [edi],al
  40877f:	mul    BYTE PTR [ebp-0x54]
  408782:	shr    BYTE PTR [eax-0x3b],1
  408785:	inc    DWORD PTR [edx-0x57ad01ba]
  40878b:	or     bl,BYTE PTR cs:[ebx]
  40878e:	and    dl,ch
  408790:	push   ebx
  408791:	mov    cl,0x4e
  408793:	push   cs
  408794:	add    eax,0x66e3db31
  408799:	mov    esi,0xf459d0ed
  40879e:	loopne 0x4087f9
  4087a0:	sti    
  4087a1:	mov    ch,0x70
  4087a3:	dec    esi
  4087a4:	inc    ecx
  4087a5:	sbb    ecx,DWORD PTR [ecx+0x68]
  4087a8:	and    bh,ah
  4087aa:	mov    esi,0x826c507c
  4087af:	adc    ebx,DWORD PTR [ebx-0x5ee9cc63]
  4087b5:	in     eax,0x3a
  4087b7:	sti    
  4087b8:	push   es
  4087b9:	shr    DWORD PTR [ebx-0x12],cl
  4087bc:	cmc    
  4087bd:	pop    esi
  4087be:	inc    ebp
  4087bf:	addr16 int 0x95
  4087c2:	repz retf 0x5b74
  4087c6:	pop    ds
  4087c7:	dec    eax
  4087c8:	pusha  
  4087c9:	das    
  4087ca:	cwde   
  4087cb:	jbe    0x408822
  4087cd:	cli    
  4087ce:	cli    
  4087cf:	popa   
  4087d0:	hlt    
  4087d1:	push   ds
  4087d2:	push   eax
  4087d3:	adc    BYTE PTR [ebp+0x6e],0x30
  4087d7:	(bad)  
  4087d8:	enter  0x127c,0x4b
  4087dc:	push   cs
  4087dd:	pop    esp
  4087de:	sub    eax,0xd13cfe6
  4087e3:	test   DWORD PTR [esi],ecx
  4087e5:	jnp    0x4087e6
  4087e7:	and    eax,0x8d4b46ae
  4087ec:	mov    bl,0x3c
  4087ee:	xor    dh,al
  4087f0:	push   esp
  4087f1:	inc    edi
  4087f2:	jnp    0x40885b
  4087f4:	ret    
  4087f5:	and    edx,DWORD PTR [ebx]
  4087f7:	cmp    DWORD PTR [edx-0x40],ebp
  4087fa:	leave  
  4087fb:	xor    edi,DWORD PTR [ebx]
  4087fd:	jb     0x408873
  4087ff:	lock sbb BYTE PTR [eax],al
  408802:	ror    eax,cl
  408804:	pop    ebp
  408805:	push   ebx
  408806:	jge    0x408855
  408808:	ins    DWORD PTR es:[edi],dx
  408809:	in     al,dx
  40880a:	lods   al,BYTE PTR ds:[esi]
  40880b:	cmp    DWORD PTR [edi],0xffffff8c
  40880e:	jbe    0x408867
  408810:	imul   edi,DWORD PTR [edi-0x32],0x7aeb8c24
  408817:	rcl    eax,0x74
  40881a:	mov    eax,0x928ce8f4
  40881f:	and    al,0x81
  408821:	(bad)  
  408822:	cmp    al,0x11
  408824:	push   ds
  408825:	pop    esi
  408827:	lea    esi,[esi-0xa378e75]
  40882d:	je     0x408880
  40882f:	test   DWORD PTR [bp+di+0xd1f],esi
  408834:	mov    bl,0x3a
  408836:	fdivr  QWORD PTR [ecx-0x3fe6ae07]
  40883c:	mov    ds:0x98c67256,eax
  408841:	pop    ebp
  408842:	cmp    eax,0x4e1487ee
  408847:	pop    esi
  408848:	fld    QWORD PTR [edi]
  40884a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40884b:	sub    ah,ch
  40884d:	adc    al,0x6c
  40884f:	dec    edx
  408850:	cmp    al,0xd1
  408852:	mov    ds:0x8510fc25,eax
  408857:	cmc    
  408858:	imul   DWORD PTR [esi-0x236c9608]
  40885e:	addr16 cmp al,0x13
  408861:	das    
  408862:	popa   
  408863:	cmp    eax,eax
  408865:	je     0x40887e
  408867:	(bad)  
  408868:	sar    BYTE PTR [eax+0x70],0x59
  40886c:	add    bh,BYTE PTR [edx+0x458a5ed0]
  408872:	or     bh,BYTE PTR [edi+ebx*2-0x3]
  408876:	inc    edi
  408877:	jno    0x408853
  408879:	imul   edx,DWORD PTR [edi+0x27],0x3b
  40887d:	xor    ecx,DWORD PTR [edi]
  40887f:	cmp    DWORD PTR [eax+0x79870624],edi
  408885:	nop
  408886:	dec    BYTE PTR [ecx+0x37]
  408889:	pop    ss
  40888a:	xchg   esp,eax
  40888b:	jmp    0x4088df
  40888d:	xchg   ecx,eax
  40888e:	pop    es
  40888f:	sub    edi,edx
  408891:	inc    esp
  408892:	lock xchg esp,eax
  408894:	les    edx,FWORD PTR [esi+0x51]
  408897:	lods   al,BYTE PTR ds:[esi]
  408898:	das    
  408899:	cwde   
  40889a:	mov    eax,ds:0x8f8dfa60
  40889f:	sbb    eax,0x44d66ba3
  4088a4:	push   esp
  4088a5:	xor    ecx,DWORD PTR [ebx]
  4088a7:	packssdw mm1,QWORD PTR [edi+0x57]
  4088ab:	or     esi,edx
  4088ad:	push   esp
  4088ae:	cmp    DWORD PTR [ebx],esi
  4088b0:	out    0x9c,al
  4088b2:	aad    0x2e
  4088b4:	xor    BYTE PTR ds:[ebx+0x48],ah
  4088b8:	es pop es
  4088ba:	inc    ebp
  4088bb:	daa    
  4088bc:	fisttp QWORD PTR [ecx]
  4088be:	ja     0x40886d
  4088c0:	and    bl,BYTE PTR [eax-0x74]
  4088c3:	lds    esp,FWORD PTR cs:[ecx]
  4088c6:	mov    edi,ebx
  4088c8:	push   ecx
  4088c9:	fst    st(4)
  4088cb:	test   DWORD PTR [ebx+0x4d],ebp
  4088ce:	jns    0x408882
  4088d0:	lahf   
  4088d1:	jge    0x40891f
  4088d3:	loopne 0x40887e
  4088d5:	imul   edx,DWORD PTR es:[edx+0x3d9d972b],0xf
  4088dd:	shl    esp,cl
  4088df:	hlt    
  4088e0:	(bad)  
  4088e1:	daa    
  4088e2:	xchg   edx,eax
  4088e3:	(bad)  
  4088e4:	push   edx
  4088e5:	in     eax,dx
  4088e6:	add    al,0xc5
  4088e8:	adc    al,0xc2
  4088ea:	dec    edx
  4088eb:	pusha  
  4088ec:	or     eax,0xdf7fca45
  4088f1:	out    0x2,al
  4088f3:	push   ds
  4088f4:	scas   al,BYTE PTR es:[edi]
  4088f5:	stc    
  4088f6:	inc    ebp
  4088f7:	adc    al,BYTE PTR [ebx+eax*4+0x7d]
  4088fb:	(bad)  
  4088fc:	div    DWORD PTR [ecx-0x4b]
  4088ff:	inc    ecx
  408900:	sub    eax,0x27cb7c5b
  408905:	std    
  408906:	jnp    0x408909
  408908:	inc    esp
  408909:	push   ebp
  40890a:	push   es
  40890b:	pop    ebp
  40890c:	loop   0x40893f
  40890e:	or     esp,DWORD PTR [ecx]
  408910:	(bad)  
  408912:	push   edx
  408913:	in     eax,dx
  408914:	add    eax,0x7645f1e2
  408919:	mov    bh,0x1c
  40891b:	mov    al,0x4
  40891d:	repnz dec ecx
  40891f:	ret    
  408920:	mov    ebp,0x7af325c7
  408925:	adc    DWORD PTR [ebp-0x2f33a8dd],ebx
  40892b:	aad    0x60
  40892d:	aad    0x1
  40892f:	mov    ch,0xd4
  408931:	pop    ecx
  408932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408933:	pop    ss
  408934:	in     eax,dx
  408935:	dec    edi
  408936:	cmp    DWORD PTR [esi+ebp*4],0x2af18c36
  40893d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40893e:	jp     0x4088e9
  408940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408941:	fbld   TBYTE PTR [edx-0x48]
  408944:	jbe    0x4089ac
  408946:	dec    ecx
  408947:	fiadd  WORD PTR [ecx+ebx*2]
  40894a:	cli    
  40894b:	cmp    eax,0x4f7c8a39
  408950:	xchg   cx,bx
  408953:	call   0x7702:0x4d6204e3
  40895a:	cmp    BYTE PTR [ebx],0x77
  40895d:	jne    0x408944
  40895f:	scas   eax,DWORD PTR es:[edi]
  408960:	sub    al,0xe3
  408962:	jae    0x4089c1
  408964:	outs   dx,DWORD PTR ds:[esi]
  408965:	out    0xe6,al
  408967:	dec    ebp
  408968:	or     edx,edx
  40896a:	in     eax,0x6e
  40896c:	cmp    DWORD PTR [edx],ebx
  40896e:	shr    DWORD PTR [edx-0x6e],cl
  408971:	ins    DWORD PTR es:[edi],dx
  408972:	push   ecx
  408973:	add    eax,0xe53d1ff2
  408978:	inc    esp
  408979:	cmp    esi,ebx
  40897b:	(bad)  
  40897d:	shr    DWORD PTR [esi],0x78
  408980:	cmp    BYTE PTR [edi+0x5ee4741d],cl
  408986:	icebp  
  408987:	scas   al,BYTE PTR es:[edi]
  408988:	fiadd  WORD PTR [ecx-0x1a11fc04]
  40898e:	pop    ss
  40898f:	sbb    DWORD PTR [ecx],0xf9aff4e8
  408995:	and    al,0x93
  408997:	lahf   
  408998:	sub    esp,ebx
  40899a:	and    bl,BYTE PTR [ecx]
  40899c:	sub    edx,DWORD PTR [esi-0x2e7325e0]
  4089a2:	sbb    eax,0xc8aed54e
  4089a7:	out    dx,eax
  4089a8:	ret    
  4089a9:	jl     0x408a1a
  4089ab:	ret    
  4089ac:	adc    BYTE PTR [edx],dl
  4089ae:	loope  0x40897f
  4089b0:	outs   dx,DWORD PTR ds:[esi]
  4089b1:	enter  0x2c5e,0xb6
  4089b5:	adc    eax,0x56a2fe00
  4089ba:	mov    ecx,0x41cb1bbe
  4089bf:	push   ebp
  4089c0:	mov    eax,ds:0x4f82762c
  4089c5:	es loope 0x408a2d
  4089c8:	mov    al,ds:0xb20ded27
  4089cd:	hlt    
  4089ce:	jno    0x4089c6
  4089d0:	dec    ebx
  4089d1:	bound  ebx,QWORD PTR [esi-0x5d]
  4089d4:	xchg   esi,eax
  4089d5:	xlat   BYTE PTR ds:[ebx]
  4089d6:	lods   eax,DWORD PTR ds:[esi]
  4089d7:	push   cs
  4089d8:	sbb    DWORD PTR [eax+0x4],edx
  4089db:	or     ah,BYTE PTR [edx-0x465dee79]
  4089e1:	sub    ebx,edx
  4089e3:	nop
  4089e4:	add    BYTE PTR [ebx],dl
  4089e6:	or     ah,BYTE PTR [ebx+0x2680387b]
  4089ec:	mov    dh,0x3a
  4089ee:	in     al,dx
  4089ef:	test   BYTE PTR [ebx-0x3b],dl
  4089f2:	inc    edx
  4089f3:	in     al,dx
  4089f4:	stos   BYTE PTR es:[edi],al
  4089f5:	and    dh,BYTE PTR [esi]
  4089f7:	fsubr  st(4),st
  4089f9:	jb     0x4089ff
  4089fb:	mov    ebx,0xed851f22
  408a00:	retf   
  408a01:	sub    cl,0x6f
  408a04:	push   0xffe01164
  408a09:	stos   BYTE PTR es:[edi],al
  408a0a:	icebp  
  408a0b:	test   eax,0x68a412b0
  408a10:	push   0x28
  408a12:	dec    ecx
  408a13:	mov    al,ds:0x563094ff
  408a18:	inc    ebx
  408a19:	pusha  
  408a1a:	mov    bh,0xf6
  408a1c:	jbe    0x408a33
  408a1e:	addr16 add eax,0x1592ce7a
  408a24:	outs   dx,BYTE PTR ds:[esi]
  408a25:	pop    ebp
  408a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a27:	cs push esp
  408a29:	ret    0x4309
  408a2c:	mov    esp,0x90653b64
  408a31:	test   DWORD PTR [edx-0x3b],ebx
  408a34:	scas   eax,DWORD PTR es:[edi]
  408a35:	sbb    al,0xb0
  408a37:	dec    esi
  408a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a39:	outs   dx,BYTE PTR ds:[esi]
  408a3a:	shr    DWORD PTR [edx+0x43595bb8],0xa0
  408a41:	cmc    
  408a42:	xchg   esi,eax
  408a43:	dec    eax
  408a44:	js     0x408abf
  408a46:	xor    al,0xc1
  408a48:	push   ss
  408a49:	cwde   
  408a4a:	jo     0x408ab4
  408a4c:	push   es
  408a4d:	fwait
  408a4e:	das    
  408a4f:	test   eax,0x1f762567
  408a54:	inc    esp
  408a55:	loop   0x408a02
  408a57:	mov    BYTE PTR [ecx-0x36d54ae],ah
  408a5d:	shl    BYTE PTR [ebp+0x5d],0x2d
  408a61:	stos   DWORD PTR es:[edi],eax
  408a62:	sbb    BYTE PTR [ecx+0x0],cl
  408a65:	push   ds
  408a66:	shl    ah,0x1c
  408a69:	call   0x3c6e:0x7044e36c
  408a70:	add    DWORD PTR [ebx-0x44333143],0x480c62be
  408a7a:	mov    dh,0x69
  408a7c:	scas   al,BYTE PTR es:[edi]
  408a7d:	fsubr  st(7),st
  408a7f:	jg     0x408af2
  408a81:	sahf   
  408a82:	sub    bl,bl
  408a84:	cmp    BYTE PTR [edi],0xb5
  408a87:	fs stos BYTE PTR es:[edi],al
  408a89:	cmp    al,0xe8
  408a8b:	ins    DWORD PTR es:[edi],dx
  408a8c:	mov    bl,0x15
  408a8e:	xchg   edi,eax
  408a8f:	icebp  
  408a90:	int    0x60
  408a92:	push   es
  408a93:	les    esp,FWORD PTR [ebp+0x4d]
  408a96:	jns    0x408a2d
  408a98:	bnd jbe 0x408b17
  408a9b:	out    dx,al
  408a9c:	mov    edx,0x960ffc08
  408aa1:	rcr    bh,cl
  408aa3:	mov    bl,0xd2
  408aa5:	mov    eax,ds:0xa705a97e
  408aaa:	das    
  408aab:	xor    eax,0xb21e948d
  408ab0:	outs   dx,DWORD PTR ds:[esi]
  408ab1:	iret   
  408ab2:	pop    ebp
  408ab3:	aaa    
  408ab4:	scas   al,BYTE PTR es:[edi]
  408ab5:	add    ebp,DWORD PTR [eax+0x5b]
  408ab8:	hlt    
  408ab9:	(bad)  
  408aba:	cmp    bl,BYTE PTR [eax]
  408abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408abd:	imul   DWORD PTR [edx-0x3a2ab491]
  408ac3:	test   DWORD PTR [ebx-0x2c],ebp
  408ac6:	lahf   
  408ac7:	inc    esi
  408ac8:	sub    ah,BYTE PTR [eax-0x5deed57c]
  408ace:	inc    esp
  408acf:	mov    ecx,0xee399ee4
  408ad4:	test   eax,0xad80be9b
  408ad9:	jae    0x408b3b
  408adb:	push   0x9b60e5d3
  408ae0:	dec    esp
  408ae1:	leave  
  408ae2:	jne    0x408ac1
  408ae4:	idiv   DWORD PTR [eax-0x79bcbb56]
  408aea:	mov    dh,BYTE PTR [edi-0xe]
  408aed:	not    DWORD PTR [ecx]
  408aef:	out    dx,al
  408af0:	icebp  
  408af1:	arpl   WORD PTR [ecx+ebx*1+0x7e427089],bx
  408af8:	(bad)  
  408af9:	leave  
  408afa:	add    al,0xe2
  408afc:	das    
  408afd:	jne    0x408b0b
  408aff:	mov    edi,0xcba79f90
  408b04:	mov    al,0x3a
  408b06:	sub    esi,eax
  408b08:	in     al,0x8e
  408b0a:	xor    BYTE PTR [ecx-0x3921f39f],ah
  408b10:	scas   eax,DWORD PTR es:[edi]
  408b11:	loop   0x408b57
  408b13:	stos   DWORD PTR es:[edi],eax
  408b14:	inc    ebx
  408b15:	mov    dh,0x28
  408b17:	xlat   BYTE PTR ds:[ebx]
  408b18:	dec    edi
  408b19:	cmp    esp,DWORD PTR [ebx]
  408b1b:	dec    esi
  408b1c:	sub    DWORD PTR [esi+0x4fee53ca],ebp
  408b22:	add    BYTE PTR [edx],cl
  408b24:	jne    0x408b50
  408b26:	push   0xffffffcd
  408b28:	push   edx
  408b29:	lea    esp,[esi+0x22]
  408b2c:	push   0xffffff8e
  408b2e:	cmp    edi,DWORD PTR ds:0x69f9c5bb
  408b34:	ds push ebp
  408b36:	push   esp
  408b37:	push   ebp
  408b38:	std    
  408b39:	test   DWORD PTR [esi-0x30ac572d],esi
  408b3f:	or     eax,0x9217cbf2
  408b44:	imul   ebx,DWORD PTR [edi],0xffffffaf
  408b47:	cmc    
  408b48:	inc    edi
  408b49:	add    esi,esi
  408b4b:	add    al,0x58
  408b4d:	cmp    al,0x90
  408b4f:	pop    ebx
  408b50:	in     eax,0x2f
  408b52:	lds    esp,FWORD PTR [ebx-0x17]
  408b55:	xlat   BYTE PTR ds:[ebx]
  408b56:	jmp    0x408b30
  408b58:	push   cs
  408b59:	int3   
  408b5a:	(bad)  
  408b5b:	mov    WORD PTR ds:0xfc0d3808,ss
  408b61:	popf   
  408b62:	mov    esi,gs
  408b64:	xlat   BYTE PTR ds:[ebx]
  408b65:	ficom  WORD PTR ds:[esi]
  408b68:	xor    dl,0xbb
  408b6b:	xor    ah,BYTE PTR [eax-0x37]
  408b6e:	mov    ch,0xa3
  408b70:	imul   ebp,DWORD PTR [eax-0x47],0xffffffac
  408b74:	cdq    
  408b75:	int3   
  408b76:	cmp    dh,BYTE PTR [esi]
  408b78:	fistp  DWORD PTR ds:0x39a56fde
  408b7e:	pop    esp
  408b7f:	int3   
  408b80:	in     al,dx
  408b81:	mov    eax,ds:0x12e4a834
  408b86:	mov    ds:0xe70950f6,eax
  408b8b:	push   ebx
  408b8c:	add    eax,0x775e4291
  408b91:	sub    DWORD PTR [edx-0x6efc3390],edx
  408b97:	das    
  408b98:	mov    edx,0x6bf33d98
  408b9d:	jno    0x408b68
  408b9f:	pop    ebx
  408ba0:	cmp    DWORD PTR [ebp-0x5b75f4ba],0xffffffac
  408ba7:	pop    eax
  408ba8:	sub    eax,0xe3cc81c4
  408bad:	sub    al,0x59
  408baf:	adc    eax,DWORD PTR [edx+0x13]
  408bb2:	mov    bl,0xb4
  408bb4:	adc    BYTE PTR [edx],dh
  408bb6:	retf   0xb3ce
  408bb9:	push   ebx
  408bba:	push   ss
  408bbb:	imul   DWORD PTR [ebx+0x46]
  408bbe:	jecxz  0x408c2f
  408bc0:	mov    al,dh
  408bc2:	shl    BYTE PTR [ebp+0x1d],0x5e
  408bc6:	in     eax,0x6e
  408bc8:	and    al,0x5b
  408bca:	mov    ds:0xe18caf7d,al
  408bcf:	mov    eax,0x9d9a3d59
  408bd4:	in     eax,dx
  408bd5:	ror    BYTE PTR [ebx-0x68],1
  408bd8:	mov    ebp,0x1807e06c
  408bdd:	mov    ?,WORD PTR [ecx+0x47]
  408be0:	push   ds
  408be1:	sub    al,0x2a
  408be3:	mov    DWORD PTR [esi+ebp*2+0x5d8170d],ecx
  408bea:	push   esi
  408beb:	fucom  st(5)
  408bed:	arpl   WORD PTR ds:0x10603768,di
  408bf3:	jno    0x408c01
  408bf5:	dec    esp
  408bf6:	out    0xaf,eax
  408bf8:	(bad)  
  408bf9:	rcl    DWORD PTR [eax-0x640514a],1
  408bff:	loop   0x408bdf
  408c01:	xor    DWORD PTR [edi],esi
  408c03:	mov    cl,0x54
  408c05:	idiv   BYTE PTR [ecx+0xdf14b12]
  408c0b:	cmp    al,0xfb
  408c0d:	lds    edx,FWORD PTR [ebx-0x4df19d09]
  408c13:	in     al,dx
  408c14:	xor    eax,0xb3a243e1
  408c19:	call   0xcc4ba287
  408c1e:	inc    ebp
  408c1f:	fs icebp 
  408c21:	in     al,dx
  408c22:	add    DWORD PTR [edx],esp
  408c24:	adc    al,0x7
  408c26:	repz xor eax,DWORD PTR [esi+esi*8+0x7e9dc27c]
  408c2e:	fld    TBYTE PTR [ebx+0x38]
  408c31:	ja     0x408be2
  408c33:	xchg   edi,eax
  408c34:	mov    esp,0x756f4980
  408c39:	outs   dx,BYTE PTR ds:[esi]
  408c3a:	xor    esi,DWORD PTR [edi*8-0x72499ee9]
  408c41:	rep lods al,BYTE PTR ds:[esi]
  408c43:	and    BYTE PTR [edx+0x29],dh
  408c46:	mov    esp,0x8b202e6e
  408c4b:	sbb    ebx,DWORD PTR [ebp+0x4a]
  408c4e:	push   0xffffffde
  408c50:	test   al,0xb6
  408c52:	jecxz  0x408ccf
  408c54:	push   ds
  408c55:	scas   eax,DWORD PTR es:[edi]
  408c56:	neg    BYTE PTR [ecx-0x1e]
  408c59:	push   es
  408c5a:	mov    edi,0xf6f6e4c0
  408c5f:	mov    bh,0xbf
  408c61:	add    BYTE PTR [ebx+edx*4+0x12],dh
  408c65:	and    edx,DWORD PTR [ebx-0x1c]
  408c68:	xchg   esi,eax
  408c69:	ds and al,0x6c
  408c6c:	loopne 0x408c98
  408c6e:	lock int3 
  408c70:	mov    eax,0x8d0ac0a1
  408c75:	xchg   BYTE PTR [ecx-0x2cca4bf3],cl
  408c7b:	adc    al,bl
  408c7d:	int    0xec
  408c7f:	xor    eax,0x6c8dfb3e
  408c84:	shl    DWORD PTR ds:0x35b25d19,cl
  408c8a:	push   esi
  408c8b:	xchg   ecx,eax
  408c8c:	mov    WORD PTR [esi-0x72f5e61c],ss
  408c92:	out    0xd6,al
  408c94:	inc    ebp
  408c95:	jecxz  0x408cba
  408c97:	outs   dx,DWORD PTR ds:[esi]
  408c98:	sbb    ebp,DWORD PTR [esi+0x18a27807]
  408c9e:	gs rol esi,cl
  408ca1:	(bad)  
  408ca2:	jo     0x408cdd
  408ca4:	jae    0x408c2a
  408ca6:	cmp    DWORD PTR ds:0x59a3f12e,edi
  408cac:	hlt    
  408cad:	adc    ah,BYTE PTR [ebx]
  408caf:	jb     0x408c58
  408cb1:	in     al,0xf2
  408cb3:	and    DWORD PTR [edi],ecx
  408cb5:	lock jmp 0x408c7d
  408cb8:	push   ebp
  408cb9:	xchg   ecx,eax
  408cba:	xlat   BYTE PTR ds:[ebx]
  408cbb:	adc    ebp,DWORD PTR [ebp-0x42608e]
  408cc1:	(bad)  
  408cc2:	enter  0x39d1,0xd2
  408cc6:	xor    eax,0x7bc12e89
  408ccb:	push   ebx
  408ccc:	std    
  408ccd:	ss cmp dh,dl
  408cd0:	fwait
  408cd1:	sbb    ecx,ebp
  408cd3:	push   ecx
  408cd4:	lds    esp,FWORD PTR [esi-0x188a836d]
  408cda:	inc    edx
  408cdb:	or     al,bl
  408cdd:	jb     0x408d2f
  408cdf:	gs mov ebp,0x8f60c584
  408ce5:	push   ebp
  408ce6:	dec    eax
  408ce7:	stc    
  408ce8:	jne    0x408d17
  408cea:	jno    0x408c7d
  408cec:	jno    0x408c99
  408cee:	mov    bl,0x49
  408cf0:	xchg   ebx,eax
  408cf1:	test   BYTE PTR [edi-0x1],al
  408cf4:	xor    BYTE PTR [edi+eax*2-0x41],0x71
  408cf9:	mov    ecx,ds
  408cfb:	imul   ecx,DWORD PTR [esi],0x6f
  408cfe:	jecxz  0x408cf0
  408d00:	int    0x6d
  408d02:	je     0x408c9b
  408d04:	and    dh,0x34
  408d07:	mov    ch,0x97
  408d09:	jmp    0x7729:0x8e33f355
  408d10:	cld    
  408d11:	popa   
  408d12:	jecxz  0x408d3a
  408d14:	dec    edx
  408d15:	popf   
  408d16:	xchg   ebx,eax
  408d17:	lea    ebx,[esi+0x7b]
  408d1a:	xchg   ebx,eax
  408d1b:	popa   
  408d1c:	xchg   esi,eax
  408d1d:	fninit 
  408d1f:	in     eax,0x5d
  408d21:	retf   
  408d22:	pop    edx
  408d23:	data16 repz ficom DWORD PTR [ebx+0x7e092926]
  408d2b:	push   ss
  408d2c:	pop    ds
  408d2d:	ja     0x408cb3
  408d2f:	xchg   ebp,eax
  408d30:	test   al,0x31
  408d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d33:	push   edi
  408d34:	mov    DWORD PTR ds:0x50ec51f2,ebx
  408d3a:	cli    
  408d3b:	add    DWORD PTR [ebp+0x1b],ebp
  408d3e:	(bad)  
  408d3f:	iret   
  408d40:	push   es
  408d41:	(bad)  
  408d42:	push   0x55cbb852
  408d47:	shl    esi,cl
  408d49:	adc    dl,BYTE PTR [ecx+0x1d84079a]
  408d4f:	test   eax,0x23c43a91
  408d54:	rcl    BYTE PTR [eax+0x62],cl
  408d57:	adc    eax,0xc60e9b29
  408d5c:	mov    al,0xdd
  408d5e:	mov    ebp,0x763a4f2c
  408d63:	int    0x70
  408d65:	loope  0x408dbf
  408d67:	push   0x2c
  408d69:	loopne 0x408d49
  408d6b:	enter  0x3267,0xb7
  408d6f:	ror    DWORD PTR ds:0x2c0a9379,cl
  408d75:	mov    eax,0xd187b5f1
  408d7a:	push   ss
  408d7b:	mov    edx,DWORD PTR [edx]
  408d7d:	arpl   WORD PTR [esi],cx
  408d7f:	add    dl,al
  408d81:	mov    BYTE PTR [edi-0x25],dh
  408d84:	nop
  408d85:	retf   
  408d86:	jl     0x408e01
  408d88:	push   0xf4cd345f
  408d8d:	stos   DWORD PTR es:[edi],eax
  408d8e:	cmp    al,0xbb
  408d90:	cmp    dh,BYTE PTR [ecx]
  408d92:	(bad)  
  408d94:	mov    ah,0x67
  408d96:	jns    0x408d36
  408d98:	fs mov bl,0x3c
  408d9b:	aam    0xff
  408d9d:	push   esp
  408d9e:	aad    0x3e
  408da0:	cmp    edx,esi
  408da2:	aaa    
  408da3:	enter  0x1ad7,0x73
  408da7:	and    dl,bl
  408da9:	jns    0x408d57
  408dab:	in     eax,0xfe
  408dad:	cmp    eax,0xf9928f43
  408db2:	add    BYTE PTR [ecx-0x2ddefea],dh
  408db8:	(bad)  
  408db9:	cs push ebp
  408dbb:	mov    ebp,DWORD PTR [eax+0x1084d168]
  408dc1:	int    0xb0
  408dc3:	xchg   ebx,eax
  408dc4:	pop    esp
  408dc5:	das    
  408dc6:	fisubr WORD PTR [edx]
  408dc8:	push   0xffffffdd
  408dca:	xor    BYTE PTR [ecx+ebp*2+0x72],0x56
  408dcf:	fbld   TBYTE PTR fs:[esi]
  408dd2:	icebp  
  408dd3:	jmp    0xe9bcc508
  408dd8:	mov    ds:0x66d5a963,eax
  408ddd:	cmp    ah,ch
  408ddf:	loop   0x408d72
  408de1:	fnstsw WORD PTR [ecx]
  408de3:	mov    eax,0x3ae83bd5
  408de8:	add    eax,0xaa52246a
  408ded:	ins    BYTE PTR es:[edi],dx
  408dee:	xor    eax,0xdf1400d9
  408df3:	cmp    al,0x19
  408df5:	mov    ds:0xc36e026a,eax
  408dfa:	mov    esi,?
  408dfc:	mov    cs,WORD PTR [edx-0x2f871274]
  408e02:	pop    edi
  408e03:	or     BYTE PTR [ebx-0x7e],dh
  408e06:	mov    esp,0xc5321576
  408e0b:	lock fcomp QWORD PTR [edi-0x46]
  408e0f:	shl    DWORD PTR [ecx],1
  408e11:	or     BYTE PTR fs:[edx+0x3fcc9ce1],dl
  408e18:	mov    fs,esp
  408e1a:	sbb    edi,edi
  408e1c:	add    DWORD PTR [edi+0x7e],edi
  408e1f:	mov    al,ds:0xe13fa7bc
  408e24:	mov    dh,0x4a
  408e26:	dec    ebx
  408e27:	inc    esi
  408e28:	popa   
  408e29:	cmp    BYTE PTR ds:0x41ba4724,0x32
  408e30:	and    eax,0x80f762e2
  408e35:	sub    ecx,DWORD PTR [esi-0x13b0201c]
  408e3b:	xor    eax,0xd0468960
  408e40:	idiv   BYTE PTR [esi-0x5e]
  408e43:	mov    DWORD PTR [edi+0x3d07f252],edx
  408e49:	jp     0x408e96
  408e4b:	adc    dh,al
  408e4d:	lea    esp,[ebx+edi*1+0x5363cbbe]
  408e54:	(bad)  
  408e55:	cs jbe 0x408e30
  408e58:	add    BYTE PTR [edi-0x7daae4fb],0x37
  408e5f:	outs   dx,BYTE PTR cs:[esi]
  408e61:	add    al,0x29
  408e63:	add    edx,DWORD PTR [ecx-0x14]
  408e66:	aad    0xc9
  408e68:	mov    ebp,0xa46a9d24
  408e6d:	pop    ecx
  408e6e:	(bad)  
  408e6f:	sar    DWORD PTR [esi+eax*2+0x7ac5f819],1
  408e76:	loopne 0x408e69
  408e78:	popf   
  408e79:	arpl   WORD PTR [eax-0x61f7a68c],sp
  408e7f:	mov    DWORD PTR [ecx+0x14374ac7],esi
  408e85:	pop    esp
  408e86:	es loopne 0x408efc
  408e89:	int    0xdc
  408e8b:	mov    al,ds:0x84df5c41
  408e90:	out    dx,al
  408e91:	pop    esp
  408e92:	add    al,0x38
  408e94:	lods   al,BYTE PTR ds:[esi]
  408e95:	pop    edx
  408e96:	sub    al,0x79
  408e98:	int    0x4b
  408e9a:	adc    esp,DWORD PTR [edi+ebx*1]
  408e9d:	dec    ebp
  408e9e:	inc    ecx
  408e9f:	inc    edx
  408ea0:	add    DWORD PTR [ebx],ebx
  408ea2:	daa    
  408ea3:	(bad)  
  408ea4:	outs   dx,DWORD PTR ds:[esi]
  408ea5:	pop    es
  408ea6:	(bad)
  408ea9:	push   eax
  408eaa:	shl    BYTE PTR ds:0xab1e9f37,0xa2
  408eb1:	sar    DWORD PTR [ecx],cl
  408eb3:	jno    0x408f22
  408eb5:	inc    ebp
  408eb6:	pop    es
  408eb7:	sub    edx,DWORD PTR [edi]
  408eb9:	test   eax,0xdefd5505
  408ebe:	jp     0x408ef1
  408ec0:	mov    bh,0xc7
  408ec2:	inc    ecx
  408ec3:	test   eax,0x5002846a
  408ec8:	xchg   edi,eax
  408ec9:	push   esi
  408eca:	cld    
  408ecb:	dec    esp
  408ecc:	daa    
  408ecd:	push   ebx
  408ece:	push   edi
  408ecf:	inc    esi
  408ed0:	fimul  DWORD PTR [bp+di-0x33]
  408ed4:	js     0x408eb5
  408ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed7:	and    DWORD PTR [esp+esi*1+0x77],ebp
  408edb:	push   0x13
  408edd:	mov    ebp,esp
  408edf:	out    0x3,eax
  408ee1:	in     al,dx
  408ee2:	jg     0x408e86
  408ee4:	pop    ds
  408ee5:	push   esp
  408ee6:	bound  esi,QWORD PTR [esi]
  408ee8:	cmp    DWORD PTR [esi+0x8],0x8cc3bfb6
  408eef:	int    0xe0
  408ef1:	sbb    cl,BYTE PTR [edi]
  408ef3:	or     dl,ch
  408ef5:	cmp    edi,DWORD PTR [edi]
  408ef7:	or     eax,0x7907aba
  408efc:	lods   eax,DWORD PTR ds:[esi]
  408efd:	shr    ebx,0x37
  408f00:	aaa    
  408f01:	mov    edi,0xf4bf4f02
  408f06:	or     BYTE PTR [ebx+0x1c],al
  408f09:	mov    bh,0xdc
  408f0b:	addr16 xchg ecx,eax
  408f0d:	dec    ecx
  408f0e:	mov    cl,0x85
  408f10:	sub    al,0x98
  408f12:	add    bh,BYTE PTR [ebx*2-0x607b1430]
  408f19:	push   0x30e7fb4d
  408f1e:	iret   
  408f1f:	or     esi,DWORD PTR [edx+0x4a]
  408f22:	or     esp,DWORD PTR [edi+0xb]
  408f25:	cmp    ebp,DWORD PTR [ebp+0x7c]
  408f28:	and    DWORD PTR [ecx+edx*4-0x1f5b8d92],ebp
  408f2f:	mov    ebx,0xba67802e
  408f34:	jae    0x408f9b
  408f36:	xchg   ebp,eax
  408f37:	test   eax,0x2f061a5d
  408f3c:	(bad)  
  408f3e:	xchg   edx,eax
  408f3f:	jns    0x408f34
  408f41:	mov    dh,0xd
  408f43:	(bad)  
  408f44:	dec    eax
  408f45:	cli    
  408f46:	cmp    BYTE PTR [eax+0x44c23455],bl
  408f4c:	inc    esi
  408f4d:	mov    cl,0xfb
  408f4f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  408f51:	ins    BYTE PTR es:[edi],dx
  408f52:	addr16 pop ss
  408f54:	out    dx,ax
  408f56:	aas    
  408f57:	xlat   BYTE PTR ds:[ebx]
  408f58:	cmp    ah,ch
  408f5a:	xor    DWORD PTR [ebp+0x4f],esp
  408f5d:	dec    edi
  408f5e:	adc    BYTE PTR [esi-0x7fd6db3b],dh
  408f64:	push   0xe39cb60e
  408f69:	cdq    
  408f6a:	(bad)  
  408f6b:	icebp  
  408f6c:	popa   
  408f6d:	jb     0x408f22
  408f6f:	rcr    DWORD PTR [esi],1
  408f71:	sbb    al,0x29
  408f73:	dec    DWORD PTR [eax-0x5d2f5b14]
  408f79:	pop    ebp
  408f7a:	repz mov ah,0xec
  408f7d:	push   ebp
  408f7e:	stc    
  408f7f:	out    dx,eax
  408f80:	xor    DWORD PTR [esi+0x11],edi
  408f83:	fistp  DWORD PTR [ebx+eiz*4]
  408f86:	add    bl,BYTE PTR [eax-0x26c7279a]
  408f8c:	jae    0x408fd7
  408f8e:	push   DWORD PTR [eax+edx*8-0x8]
  408f92:	jo     0x408f74
  408f94:	sub    esi,edi
  408f96:	shr    bh,0x98
  408f99:	loope  0x408f1b
  408f9b:	cmp    cl,BYTE PTR [ebx-0x66]
  408f9e:	jecxz  0x408f4e
  408fa0:	in     al,0x41
  408fa2:	(bad)  
  408fa3:	mov    bh,0x37
  408fa5:	inc    edi
  408fa6:	test   DWORD PTR [ecx+0x319abe9d],ebx
  408fac:	sti    
  408fad:	fst    st(3)
  408faf:	xor    al,0x41
  408fb1:	jecxz  0x408ffe
  408fb3:	pusha  
  408fb4:	push   es
  408fb5:	addr16 push 0xc9d9de2a
  408fbb:	add    DWORD PTR [ecx],ecx
  408fbd:	inc    esp
  408fbe:	mov    al,ds:0xd7ef6005
  408fc3:	lahf   
  408fc4:	cmp    ecx,DWORD PTR ds:0x8b2cd7c6
  408fca:	out    dx,eax
  408fcb:	adc    ebp,DWORD PTR [edx+0x97e8de2]
  408fd1:	sbb    al,0x10
  408fd3:	(bad)  
  408fd5:	out    dx,al
  408fd6:	retf   0x1e0
  408fd9:	ror    DWORD PTR [ebp-0x5b],cl
  408fdc:	fdivr  QWORD PTR ds:[ecx+0x7]
  408fe0:	and    ebp,DWORD PTR [ebx]
  408fe2:	dec    edx
  408fe3:	cmp    BYTE PTR ds:0x2f0942a7,dl
  408fe9:	adc    al,0x75
  408feb:	in     al,0x3
  408fed:	lds    eax,FWORD PTR [edx+0x116f76ea]
  408ff3:	in     al,dx
  408ff4:	sub    eax,0xa5c62b0
  408ff9:	or     eax,0x58ca317b
  408ffe:	mov    ebp,0xe5208768
  409003:	dec    ecx
  409004:	push   edx
  409005:	dec    edi
  409006:	nop
  409007:	add    ebx,DWORD PTR [eax+0x61]
  40900a:	(bad)
  40900d:	pop    ss
  40900e:	and    DWORD PTR [ebp+eiz*1-0x69902422],esi
  409015:	mov    ch,0xa5
  409017:	and    BYTE PTR [edx+eiz*1-0xe],dh
  40901b:	retf   
  40901c:	xchg   ecx,eax
  40901d:	aad    0xc7
  40901f:	pop    es
  409020:	sti    
  409021:	mov    ds:0x657ec430,eax
  409026:	rol    BYTE PTR [eax],cl
  409028:	sub    eax,0x4ce1bb2d
  40902d:	repz test al,0x5c
  409030:	mov    WORD PTR [eax-0x6f608e47],?
  409036:	xchg   edx,eax
  409037:	push   0x1c
  409039:	jns    0x409005
  40903b:	inc    eax
  40903c:	xchg   edi,eax
  40903d:	push   ds
  40903e:	add    eax,0x9e44e18b
  409043:	pusha  
  409044:	enter  0x3f53,0xfa
  409048:	sbb    DWORD PTR [esi],0xfffffffd
  40904b:	dec    esi
  40904c:	xchg   ecx,eax
  40904d:	or     DWORD PTR [ebp+0x44],edi
  409050:	rcl    BYTE PTR [eax],0x72
  409053:	call   0x6ba4:0x6caefe2d
  40905a:	and    bh,ch
  40905c:	pop    ds
  40905d:	and    ch,ah
  40905f:	inc    esi
  409060:	mov    ecx,0xef233ace
  409065:	adc    BYTE PTR [esi],0x4e
  409068:	push   eax
  409069:	out    0xfa,al
  40906b:	ret    0x2a03
  40906e:	inc    edi
  40906f:	ins    BYTE PTR es:[edi],dx
  409070:	les    ebx,FWORD PTR [eax]
  409072:	push   es
  409073:	xchg   ebx,eax
  409074:	out    0x57,eax
  409076:	shl    BYTE PTR [ecx-0x5ddb3ee7],1
  40907c:	inc    eax
  40907d:	pop    eax
  40907e:	out    0xe8,al
  409080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409081:	mov    cl,BYTE PTR [ebp+edx*4-0x67061c8f]
  409088:	dec    eax
  409089:	xchg   dh,al
  40908b:	jmp    0xde70a852
  409090:	mul    ebx
  409092:	pop    es
  409093:	pop    ecx
  409094:	aam    0x9
  409096:	hlt    
  409097:	cli    
  409098:	fisttp QWORD PTR es:[esi-0x2683e63c]
  40909f:	xor    al,0x45
  4090a1:	loop   0x409087
  4090a3:	adc    al,0xd9
  4090a5:	sbb    DWORD PTR [edx+0x2165b4f6],edx
  4090ab:	and    eax,0x7f2acec5
  4090b0:	xchg   edi,eax
  4090b1:	call   0x8c37c422
  4090b6:	ins    DWORD PTR es:[edi],dx
  4090b7:	cli    
  4090b8:	push   cs
  4090b9:	push   ebp
  4090ba:	and    al,0x39
  4090bc:	and    eax,0x78d8e0e
  4090c1:	out    0xba,al
  4090c3:	and    si,WORD PTR [edx+0x20]
  4090c7:	push   edx
  4090c8:	sbb    BYTE PTR [ebx],bl
  4090ca:	ins    DWORD PTR es:[edi],dx
  4090cb:	imul   ecx,DWORD PTR [ecx+0x64dd26e9],0x44
  4090d2:	imul   edi,DWORD PTR [bx+si-0x7d],0x4c218c73
  4090da:	sub    BYTE PTR [esi-0x355bd19d],bh
  4090e0:	call   0x3b80:0x572da1c2
  4090e7:	pop    esi
  4090e8:	pop    eax
  4090e9:	lods   al,BYTE PTR ds:[esi]
  4090ea:	aad    0xce
  4090ec:	fsub   QWORD PTR es:[edi+0x7c]
  4090f0:	pushf  
  4090f1:	jne    0x4090a3
  4090f3:	std    
  4090f4:	mov    eax,ds:0x1bbadec3
  4090f9:	pop    ecx
  4090fa:	out    0xb6,eax
  4090fc:	add    BYTE PTR [edx+0x13],0x76
  409100:	bound  esp,QWORD PTR [edx]
  409102:	aam    0x3
  409104:	(bad)  
  409105:	xor    DWORD PTR ds:0x274b3e6f,ecx
  40910b:	cmp    bl,BYTE PTR [esi+eax*8+0xa4cbe5]
  409112:	dec    esp
  409113:	je     0x40916c
  409115:	adc    dh,dh
  409117:	scas   eax,DWORD PTR es:[edi]
  409118:	or     eax,DWORD PTR [ebx]
  40911a:	jecxz  0x409165
  40911c:	mov    BYTE PTR [ebp-0x43630cac],0x63
  409123:	arpl   WORD PTR [esi+0x32],sp
  409126:	pop    ebp
  409127:	mov    eax,ds:0xb9e8a47f
  40912c:	scas   eax,DWORD PTR es:[edi]
  40912d:	adc    DWORD PTR [eax-0x7a19ada9],0xf1150cf9
  409137:	jns    0x40919e
  409139:	dec    ecx
  40913a:	dec    edx
  40913b:	in     al,0xd7
  40913d:	xchg   esi,eax
  40913e:	jns    0x40910e
  409140:	mov    ds:0xd3718d1,eax
  409145:	push   esp
  409146:	lds    ebx,FWORD PTR [edi+ebx*2]
  409149:	scas   al,BYTE PTR es:[edi]
  40914a:	mov    ch,BYTE PTR [eax-0x76]
  40914d:	mov    ch,0x18
  40914f:	cwde   
  409150:	xchg   esi,eax
  409151:	loopne 0x4090d3
  409153:	rcl    DWORD PTR ds:0x272418bd,1
  409159:	mov    edi,0xb97a2393
  40915e:	push   ebx
  40915f:	fwait
  409160:	(bad)  
  409161:	mov    bh,al
  409163:	ds (bad) 
  409166:	pop    edi
  409167:	push   cs
  409168:	jl     0x409100
  40916a:	pop    esi
  40916b:	pop    es
  40916c:	and    DWORD PTR [eax+0x6b],eax
  40916f:	test   al,0xb6
  409171:	jb     0x40914c
  409173:	shr    BYTE PTR [edx+edi*2+0xe3627d9],0xbb
  40917b:	call   0x7a45:0x8585064b
  409182:	or     BYTE PTR [eax],dl
  409184:	xor    ebx,esp
  409186:	or     BYTE PTR [eax+eiz*4],0x47
  40918a:	imul   ecx,edx,0xffffff8d
  40918d:	push   esp
  40918e:	mov    esp,0xc449ba1
  409193:	xchg   al,bl
  409195:	pop    edx
  409196:	xchg   ebx,eax
  409197:	shr    BYTE PTR [ecx-0x52],cl
  40919a:	js     0x4091a0
  40919c:	sbb    dh,BYTE PTR [esi-0x5e]
  40919f:	fisub  DWORD PTR [ecx+ebx*8+0x79695adc]
  4091a6:	xlat   BYTE PTR ds:[ebx]
  4091a7:	jg     0x409218
  4091a9:	popa   
  4091aa:	(bad)
  4091ad:	sub    ebp,esi
  4091af:	push   esi
  4091b0:	dec    esi
  4091b1:	mov    al,0xe7
  4091b3:	ret    
  4091b4:	and    DWORD PTR [ebp+edi*4-0x4f],ebx
  4091b8:	je     0x409172
  4091ba:	aaa    
  4091bb:	stc    
  4091bc:	mov    dh,0x90
  4091be:	jb     0x40918e
  4091c0:	and    DWORD PTR [eax+edi*2+0x35],0x5
  4091c5:	int    0x4
  4091c7:	cs push 0x19
  4091ca:	dec    eax
  4091cb:	das    
  4091cc:	neg    dh
  4091ce:	mov    cl,0xc6
  4091d0:	dec    edx
  4091d1:	das    
  4091d2:	fiadd  DWORD PTR [ecx]
  4091d4:	(bad)  
  4091d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d6:	shl    edx,cl
  4091d8:	int    0xb5
  4091da:	mov    dh,0xc5
  4091dc:	(bad)  
  4091dd:	mov    ebx,0x1189e16
  4091e2:	mov    DWORD PTR [ecx+0x1f787a67],ecx
  4091e8:	cmp    eax,0x5f1239f8
  4091ed:	sub    BYTE PTR [ebx],dh
  4091ef:	jae    0x409265
  4091f1:	jecxz  0x4091dd
  4091f3:	loope  0x4091d9
  4091f5:	jge    0x409266
  4091f7:	sar    DWORD PTR [eax],1
  4091f9:	jmp    FWORD PTR [edi-0x48]
  4091fc:	push   ss
  4091fd:	push   esp
  4091fe:	in     eax,dx
  4091ff:	call   DWORD PTR [edx+0x7417a15d]
  409205:	push   es
  409206:	xlat   BYTE PTR ds:[ebx]
  409207:	loope  0x4091ef
  409209:	ja     0x4091ea
  40920b:	push   ecx
  40920c:	inc    eax
  40920d:	(bad)  [ebp-0x44c79fae]
  409213:	mov    bh,0x1d
  409215:	ret    
  409216:	push   edx
  409217:	mov    al,ds:0xaca04786
  40921c:	push   ds
  40921d:	cmp    DWORD PTR [eax-0x3870987a],esi
  409223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409224:	or     DWORD PTR [edi+ebp*8-0x7b986549],ebp
  40922b:	pop    edx
  40922c:	or     al,0xe4
  40922e:	ds icebp 
  409230:	int    0x1f
  409232:	push   ss
  409233:	mov    esp,0xeebbf3dd
  409238:	cmp    cl,BYTE PTR [esi+0x58]
  40923b:	pop    ecx
  40923c:	gs pop edi
  40923e:	pop    ds
  40923f:	sbb    DWORD PTR ds:0x85cd479b,ebx
  409245:	test   eax,0x1c392090
  40924a:	gs das 
  40924c:	mov    bl,BYTE PTR [edi-0xa]
  40924f:	xor    bl,cl
  409251:	aam    0x9d
  409253:	mov    al,ds:0x14de6fa5
  409258:	inc    edi
  409259:	sub    eax,0xa22dff62
  40925e:	(bad)  
  409260:	mov    esi,0x90915091
  409265:	mov    al,0x46
  409267:	xor    bh,ch
  409269:	cs mov al,0x4
  40926c:	adc    al,0x92
  40926e:	cmp    dl,BYTE PTR [ecx+0x39baabed]
  409274:	jg     0x409230
  409276:	out    dx,eax
  409277:	(bad)  
  409278:	out    dx,eax
  409279:	xlat   BYTE PTR ds:[ebx]
  40927a:	mov    fs,WORD PTR [ecx]
  40927c:	cs in  al,dx
  40927e:	das    
  40927f:	mov    ds:0x122c9c24,eax
  409284:	xchg   ebx,eax
  409285:	retf   
  409286:	ss and eax,0x3ed9be37
  40928c:	clc    
  40928d:	push   ds
  40928e:	dec    edx
  40928f:	jmp    0xd92007a8
  409294:	or     eax,0xf248214c
  409299:	dec    edx
  40929a:	int3   
  40929b:	mov    edx,DWORD PTR [eax-0x471afcd5]
  4092a1:	push   es
  4092a2:	jecxz  0x409258
  4092a4:	test   al,0x62
  4092a6:	shl    cl,1
  4092a8:	sub    al,0x4c
  4092aa:	mov    edi,0xd48c62b0
  4092af:	add    BYTE PTR [edx-0x21],0xa3
  4092b3:	push   esp
  4092b4:	dec    ebp
  4092b5:	mov    es,WORD PTR [ecx]
  4092b7:	(bad)  
  4092b8:	dec    eax
  4092b9:	jne    0x40930d
  4092bb:	iret   
  4092bc:	mov    dl,0xd7
  4092be:	cmc    
  4092bf:	pop    ebp
  4092c0:	js     0x4092f8
  4092c2:	je     0x409250
  4092c4:	cld    
  4092c5:	cmp    ebx,ebp
  4092c7:	cdq    
  4092c8:	mov    ecx,0x3456c576
  4092cd:	int    0x15
  4092cf:	xchg   esi,eax
  4092d0:	inc    ecx
  4092d1:	stos   BYTE PTR es:[edi],al
  4092d2:	call   0x179f:0xcb7ea260
  4092d9:	gs cld 
  4092db:	sbb    BYTE PTR [edx+0x58],al
  4092de:	lahf   
  4092df:	retf   0x3c9a
  4092e2:	mov    dh,BYTE PTR [eax+0x12accd46]
  4092e8:	stos   DWORD PTR es:[edi],eax
  4092e9:	dec    ebp
  4092ea:	xchg   esi,eax
  4092eb:	aad    0x3b
  4092ed:	jle    0x40927f
  4092ef:	test   DWORD PTR [ecx+ebp*2],ebp
  4092f2:	sbb    BYTE PTR ds:0xaa8cd0e7,cl
  4092f8:	push   edi
  4092f9:	pop    ebx
  4092fa:	cmp    eax,DWORD PTR [ebp-0x6b]
  4092fd:	xor    esp,ecx
  4092ff:	jg     0x409304
  409301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409302:	add    DWORD PTR [edi-0x59],edi
  409305:	mov    bl,0x5f
  409307:	inc    edx
  409308:	aam    0xb7
  40930a:	pop    ebx
  40930b:	imul   ecx,DWORD PTR [ecx+0x17285264],0xffffffb7
  409312:	ins    BYTE PTR es:[edi],dx
  409313:	inc    DWORD PTR [ebp-0x4cc3a6e9]
  409319:	dec    ebx
  40931a:	call   0x8031:0x412bbcde
  409321:	adc    esi,ecx
  409323:	call   0x7012085b
  409328:	mov    esp,0x8257a7fc
  40932d:	jmp    0x6559:0x5411495
  409334:	xchg   DWORD PTR [ebx-0x454e8de4],edx
  40933a:	add    BYTE PTR [edi-0x5b],cl
  40933d:	pop    esi
  40933e:	clc    
  40933f:	jg     0x409380
  409341:	xchg   edx,eax
  409342:	mov    bl,0x87
  409344:	inc    esi
  409345:	push   esi
  409346:	sub    al,0x25
  409348:	dec    edi
  409349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40934a:	fnsave [edi+0x1f102aff]
  409350:	mov    ecx,0x3aff167
  409355:	(bad)  
  409356:	repz lea ebp,[ebp+0x36]
  40935a:	pop    edx
  40935b:	fcomp  st(4)
  40935d:	stos   DWORD PTR es:[edi],eax
  40935e:	or     BYTE PTR [edi+0x50],bh
  409361:	add    BYTE PTR [ebx],bh
  409363:	mov    al,0xbb
  409365:	inc    ecx
  409366:	imul   ebp,DWORD PTR [ecx],0xfffffff6
  409369:	push   ss
  40936a:	mov    WORD PTR [ebx-0x15cfd6f3],cs
  409370:	inc    ebx
  409371:	and    ch,al
  409373:	outs   dx,DWORD PTR ds:[esi]
  409374:	adc    ah,bh
  409376:	int    0x93
  409378:	jne    0x40934a
  40937a:	add    cl,bl
  40937c:	outs   dx,DWORD PTR cs:[esi]
  40937e:	xchg   ebx,eax
  40937f:	push   edx
  409380:	cmp    edi,DWORD PTR [ebp+0x75]
  409383:	stos   BYTE PTR es:[edi],al
  409384:	add    BYTE PTR [eax+0xa],0x8e
  409388:	cmp    eax,0x1325829f
  40938d:	push   esp
  40938e:	mov    eax,?
  409390:	clc    
  409391:	shl    DWORD PTR [ecx-0x39],0x8f
  409395:	xlat   BYTE PTR ds:[ebx]
  409396:	cmp    al,0x41
  409398:	mov    edx,0x2b461893
  40939d:	test   eax,0xf92d84ed
  4093a2:	ret    
  4093a3:	fisubr WORD PTR [eax]
  4093a5:	mov    ecx,DWORD PTR [edx+edi*1+0x39c50188]
  4093ac:	retf   
  4093ad:	xchg   esp,eax
  4093ae:	int3   
  4093af:	int    0x81
  4093b1:	fsubrp st(5),st
  4093b3:	jae    0x40940a
  4093b5:	lds    ecx,FWORD PTR [edx-0x5aab1771]
  4093bb:	clc    
  4093bc:	enter  0x3072,0xad
  4093c0:	pop    ebp
  4093c1:	ror    DWORD PTR [ebx],0x28
  4093c4:	fisttp DWORD PTR es:[ecx]
  4093c7:	ins    DWORD PTR es:[edi],dx
  4093c8:	sub    edx,DWORD PTR [edi+0x73]
  4093cb:	repnz inc esp
  4093cd:	sub    cl,bh
  4093cf:	or     eax,0x6ab70686
  4093d4:	cmp    eax,ebx
  4093d6:	push   0x7f
  4093d8:	pop    ebx
  4093d9:	aam    0x9e
  4093db:	fst    DWORD PTR [ebp+0x31]
  4093de:	add    esi,DWORD PTR [esi-0xc]
  4093e1:	cmp    DWORD PTR [esi],edx
  4093e3:	aad    0xf8
  4093e5:	inc    ebx
  4093e6:	js     0x4093f6
  4093e8:	xor    eax,0xfbdd70d7
  4093ed:	test   DWORD PTR [eax+0x4da7dda1],0xeea00c33
  4093f7:	std    
  4093f8:	test   al,0x8a
  4093fa:	push   esi
  4093fb:	mov    ah,0x4e
  4093fd:	out    0x24,al
  4093ff:	scas   al,BYTE PTR es:[edi]
  409400:	jno    0x4093d9
  409402:	xchg   BYTE PTR [ecx-0x4d],bl
  409405:	das    
  409406:	push   0xffffffbd
  409408:	cdq    
  409409:	scas   al,BYTE PTR es:[edi]
  40940a:	sti    
  40940b:	sahf   
  40940c:	arpl   WORD PTR [ebp-0x367a745f],bx
  409412:	(bad)  
  409413:	lock push esp
  409415:	pop    edx
  409416:	sti    
  409417:	lea    esi,[edx+0x8]
  40941a:	stc    
  40941b:	mov    esi,0xbb89ff91
  409420:	inc    edi
  409421:	jmp    0x409405
  409423:	loopne 0x409405
  409425:	outs   dx,BYTE PTR ds:[esi]
  409426:	inc    ebx
  409427:	retf   
  409428:	adc    al,0xae
  40942a:	sbb    al,0xe6
  40942c:	add    BYTE PTR gs:[edx+esi*2-0x32],bh
  409431:	jns    0x40942f
  409433:	aam    0x98
  409435:	aad    0x3f
  409437:	aaa    
  409438:	push   ebx
  409439:	stos   DWORD PTR es:[edi],eax
  40943a:	sub    DWORD PTR [eax],0x2a
  40943d:	pushf  
  40943e:	push   ss
  40943f:	xchg   esi,eax
  409440:	pop    esp
  409441:	dec    edx
  409442:	mov    fs,WORD PTR [ecx+0x28197bad]
  409448:	mov    WORD PTR [ebx+ecx*2-0x11ddf96f],fs
  40944f:	(bad)  
  409450:	in     eax,dx
  409451:	ror    DWORD PTR [ebp+0x57e1dde8],1
  409457:	rcl    BYTE PTR [ecx],0x59
  40945a:	je     0x409450
  40945c:	add    ebp,DWORD PTR [ebp+eax*2+0x7be43226]
  409463:	popa   
  409464:	aam    0x5
  409466:	adc    BYTE PTR [eax-0x70],0x60
  40946a:	sbb    BYTE PTR [ecx+0x26],al
  40946d:	jb     0x4094a5
  40946f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409470:	cwde   
  409471:	xchg   BYTE PTR [eax+esi*2-0x2602aebb],dl
  409478:	ret    
  409479:	outs   dx,DWORD PTR ds:[esi]
  40947a:	lods   eax,DWORD PTR ds:[esi]
  40947b:	fidivr WORD PTR [eax-0xc]
  40947e:	dec    esp
  40947f:	mov    edi,0x7d23e4e8
  409484:	cdq    
  409485:	cdq    
  409486:	xor    al,0xc5
  409488:	xchg   BYTE PTR [si-0x756c],ch
  40948d:	popf   
  40948e:	push   esp
  40948f:	in     eax,0x63
  409491:	imul   BYTE PTR [edx+0x27536489]
  409497:	add    BYTE PTR [ebp+0x47],cl
  40949a:	and    cl,bh
  40949c:	lods   eax,DWORD PTR ds:[esi]
  40949d:	enter  0x50e,0x8f
  4094a1:	cdq    
  4094a2:	cdq    
  4094a3:	pop    edi
  4094a4:	leave  
  4094a5:	addr16 sub eax,0x4d16384b
  4094ab:	in     al,0x34
  4094ad:	pop    edi
  4094ae:	pop    ecx
  4094af:	fstp   st(2)
  4094b1:	lods   al,BYTE PTR ds:[esi]
  4094b2:	dec    edx
  4094b3:	lock dec eax
  4094b5:	in     eax,0x8d
  4094b7:	ret    
  4094b8:	adc    DWORD PTR [eax-0xe],edi
  4094bb:	cmp    BYTE PTR [ebx+0x64],al
  4094be:	test   DWORD PTR [ebx+eax*4-0x1b55f33e],edi
  4094c5:	ins    BYTE PTR es:[edi],dx
  4094c6:	aad    0x78
  4094c8:	cmp    eax,0xbb8d0ed6
  4094cd:	adc    BYTE PTR [eax-0x1f793000],dh
  4094d3:	fcom   DWORD PTR [edi-0x71002f97]
  4094d9:	or     BYTE PTR [edi-0x343e5b7a],0x32
  4094e0:	iret   
  4094e1:	in     al,dx
  4094e2:	jp     0x409498
  4094e4:	sub    DWORD PTR [ebx-0x2b],esp
  4094e7:	pop    es
  4094e8:	outs   dx,DWORD PTR ds:[esi]
  4094e9:	push   0xab67970c
  4094ee:	test   al,0xa8
  4094f0:	dec    esi
  4094f1:	inc    ebx
  4094f2:	shr    BYTE PTR [ecx],1
  4094f4:	aad    0x95
  4094f6:	leave  
  4094f7:	dec    esi
  4094f8:	push   esp
  4094f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fa:	int3   
  4094fb:	lock ds es pop es
  4094ff:	jbe    0x409493
  409501:	mov    dh,0xf5
  409503:	pushf  
  409504:	push   ebp
  409505:	inc    ecx
  409506:	pusha  
  409507:	sti    
  409508:	inc    eax
  409509:	pop    ebx
  40950a:	jmp    0xbcc8e962
  40950f:	mov    eax,ds:0xc3231ef
  409514:	adc    ebx,DWORD PTR [edi-0x5e]
  409517:	sbb    esp,DWORD PTR [ecx+0x3f]
  40951a:	rol    BYTE PTR [esi-0x269de06a],0xf8
  409521:	xchg   ecx,eax
  409522:	test   eax,0x455285a
  409527:	xchg   esi,eax
  409528:	popa   
  409529:	gs adc dl,al
  40952c:	pop    ebx
  40952d:	retf   0xa67c
  409530:	xor    ah,BYTE PTR [esi-0x3a]
  409533:	xchg   edx,eax
  409534:	xor    eax,0x29dd5843
  409539:	fidiv  DWORD PTR [edi+0x262dfcad]
  40953f:	and    eax,0x67142b6a
  409544:	jge    0x409504
  409546:	loope  0x4094eb
  409548:	adc    al,0x49
  40954a:	mov    dh,0x14
  40954c:	jecxz  0x4095a0
  40954e:	xchg   esp,eax
  40954f:	pop    ecx
  409550:	lds    ecx,FWORD PTR [ecx-0x73]
  409553:	mov    ?,WORD PTR [edi]
  409555:	mov    eax,ds:0xdec24404
  40955a:	repz pop esi
  40955c:	outs   dx,BYTE PTR ds:[esi]
  40955d:	retf   
  40955e:	xlat   BYTE PTR ds:[ebx]
  40955f:	icebp  
  409560:	out    dx,al
  409561:	cdq    
  409562:	cld    
  409563:	dec    esi
  409564:	adc    dh,BYTE PTR [ebp+0x37]
  409567:	ror    BYTE PTR [eax-0x26],cl
  40956a:	pop    edi
  40956b:	pop    ecx
  40956c:	into   
  40956d:	test   eax,0x5a9985cb
  409572:	inc    eax
  409573:	mov    ?,WORD PTR [ebx-0x63]
  409576:	mov    al,ds:0x747ee730
  40957b:	adc    DWORD PTR [edx+edx*2+0x999767e],ecx
  409582:	pop    esp
  409583:	jae    0x40956f
  409585:	jnp    0x4095a2
  409587:	(bad)  
  409588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409589:	push   es
  40958a:	inc    edx
  40958b:	jl     0x40952d
  40958d:	in     al,0x56
  40958f:	xchg   edi,eax
  409590:	test   DWORD PTR [edx+0xf91ef4f],0x1693b6c0
  40959a:	mov    esi,esp
  40959c:	fidivr DWORD PTR [edi-0x78bd5f29]
  4095a2:	sub    BYTE PTR [edx-0x485e5288],0xd3
  4095a9:	sub    BYTE PTR [ebp+0x20],dh
  4095ac:	mov    esi,0x6bd2edce
  4095b1:	inc    ebp
  4095b2:	xchg   ebp,eax
  4095b3:	lea    esi,[edi+0x39c81fc3]
  4095b9:	dec    eax
  4095ba:	scas   al,BYTE PTR es:[edi]
  4095bb:	pop    esp
  4095bc:	mov    eax,ebx
  4095be:	icebp  
  4095bf:	push   ss
  4095c0:	loopne 0x409596
  4095c2:	xchg   esi,eax
  4095c3:	jmp    0x4ff6178f
  4095c8:	lods   eax,DWORD PTR ds:[esi]
  4095c9:	call   0xe194f0dc
  4095ce:	fnclex 
  4095d0:	std    
  4095d1:	out    dx,al
  4095d2:	push   edi
  4095d3:	mov    ds:0x7c09b7ea,al
  4095d8:	test   al,0x93
  4095da:	or     al,0x40
  4095dc:	jno    0x409569
  4095de:	dec    esp
  4095df:	out    dx,eax
  4095e0:	mov    al,0x13
  4095e2:	lods   eax,DWORD PTR ds:[esi]
  4095e3:	rcl    DWORD PTR ds:0x16581006,0x66
  4095ea:	ins    DWORD PTR es:[edi],dx
  4095eb:	mov    ah,0x85
  4095ed:	icebp  
  4095ee:	jb     0x409653
  4095f0:	dec    ebx
  4095f1:	in     al,0xe6
  4095f3:	mov    dl,0x1e
  4095f5:	xor    eax,0x5c01c06b
  4095fa:	out    dx,eax
  4095fb:	dec    ebp
  4095fc:	pop    ecx
  4095fd:	push   es
  4095fe:	mov    BYTE PTR ds:0xacf65463,dl
  409604:	add    ebx,DWORD PTR cs:[ecx+0x2029b9ec]
  40960b:	imul   edi,DWORD PTR [esi],0x1d
  40960e:	sbb    ebp,DWORD PTR [eax]
  409610:	adc    eax,0xedc4f9d
  409615:	push   edx
  409616:	pop    es
  409617:	imul   DWORD PTR [ebp-0x13629fbb]
  40961d:	xor    edx,DWORD PTR [edx-0x1082fa60]
  409623:	inc    ebx
  409624:	sub    esi,edi
  409626:	dec    edi
  409627:	shl    ecx,1
  409629:	scas   al,BYTE PTR es:[edi]
  40962a:	push   ss
  40962b:	test   eax,0x93d1c209
  409630:	pop    esi
  409631:	inc    ebp
  409632:	bound  edx,QWORD PTR [edi+0x524900a7]
  409638:	cmc    
  409639:	arpl   WORD PTR ss:[edi-0xfad6eed],cx
  409640:	sbb    cl,bl
  409642:	adc    al,0xbf
  409644:	ins    DWORD PTR es:[edi],dx
  409645:	fldcw  WORD PTR [ebx-0x5b]
  409648:	and    bh,BYTE PTR [ebp+esi*2-0x6b582600]
  40964f:	mov    ch,0x98
  409651:	xchg   DWORD PTR [eax],ecx
  409653:	pop    ebp
  409654:	add    cl,BYTE PTR [ecx+eax*4+0x7e]
  409658:	adc    esp,DWORD PTR [ebp+0x9]
  40965b:	out    0x24,eax
  40965d:	shl    cl,0xc
  409660:	mov    esp,DWORD PTR [ecx*8-0x74f7cdfb]
  409667:	repz cmp BYTE PTR [edi+0x2f],0x34
  40966c:	dec    eax
  40966d:	lods   eax,DWORD PTR ds:[esi]
  40966e:	sub    bh,bh
  409670:	popa   
  409671:	mov    esp,0x8e548f5
  409676:	jns    0x4096de
  409678:	shl    esi,1
  40967a:	mov    al,0x6d
  40967c:	cmp    eax,0x238c473c
  409681:	jb     0x409610
  409683:	imul   esp,DWORD PTR [esi-0x8],0x21aab084
  40968a:	sahf   
  40968b:	cmp    dh,BYTE PTR [edx]
  40968d:	mov    ebp,0x3914f619
  409692:	sbb    BYTE PTR [ebx+0x28770eb8],bh
  409698:	and    ecx,esp
  40969a:	inc    esi
  40969b:	jl     0x4096c3
  40969d:	mov    ah,0x5c
  40969f:	aas    
  4096a0:	loope  0x4096d6
  4096a2:	mov    ch,BYTE PTR [esi]
  4096a4:	add    ebx,ebp
  4096a6:	and    al,0x1f
  4096a8:	xor    ch,BYTE PTR [eax-0x41]
  4096ab:	pusha  
  4096ac:	jecxz  0x409689
  4096ae:	pop    ebp
  4096af:	push   esi
  4096b0:	xor    al,0x9c
  4096b2:	das    
  4096b3:	inc    ecx
  4096b4:	push   esp
  4096b5:	shl    BYTE PTR [ecx],0x5
  4096b8:	test   eax,0x29f9a60f
  4096bd:	dec    edi
  4096be:	mov    bh,0x25
  4096c0:	outs   dx,BYTE PTR ds:[esi]
  4096c1:	jg     0x409737
  4096c3:	push   ebp
  4096c4:	xor    ecx,DWORD PTR [esi-0x43]
  4096c7:	rcr    DWORD PTR [ebx],0x49
  4096ca:	pop    ebp
  4096cb:	push   ds
  4096cc:	call   0xeb00eab9
  4096d1:	xlat   BYTE PTR ds:[ebx]
  4096d2:	xlat   BYTE PTR ds:[ebx]
  4096d3:	mov    ds:0xbe1ff53e,al
  4096d8:	dec    edx
  4096d9:	inc    edi
  4096da:	push   ds
  4096db:	cvtpi2ps xmm6,QWORD PTR [esi-0x11]
  4096df:	inc    esi
  4096e0:	mov    al,ds:0xe9c42f2e
  4096e5:	inc    ebp
  4096e6:	and    al,0x5a
  4096e8:	and    eax,ebx
  4096ea:	shl    bh,1
  4096ec:	nop
  4096ed:	and    edx,DWORD PTR [edx-0x34]
  4096f0:	push   ebp
  4096f1:	lods   al,BYTE PTR ds:[esi]
  4096f2:	adc    al,0xe6
  4096f4:	xchg   edi,eax
  4096f5:	push   esi
  4096f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096f7:	div    DWORD PTR [ebp-0x3e]
  4096fa:	or     BYTE PTR [ebx-0xa],cl
  4096fd:	dec    edi
  4096fe:	push   edi
  4096ff:	mov    ch,0xd1
  409701:	mov    edx,0x644ca86a
  409706:	mov    ebx,0xec7bafc7
  40970b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40970c:	pop    ecx
  40970d:	pop    ds
  40970e:	sub    eax,esp
  409710:	cmp    bh,BYTE PTR [ebp-0xe]
  409713:	sbb    DWORD PTR [ecx-0x4e],0x3f
  409717:	dec    ebp
  409718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409719:	add    al,BYTE PTR [edx-0x42]
  40971c:	xor    DWORD PTR [ecx+0x27865dbf],ebx
  409722:	imul   ebx,edx,0xffffffcc
  409725:	movhps QWORD PTR [edi-0x7e],xmm1
  409729:	mov    BYTE PTR [ebx],bl
  40972b:	xchg   esi,eax
  40972c:	into   
  40972d:	pop    es
  40972e:	lods   eax,DWORD PTR ds:[esi]
  40972f:	neg    DWORD PTR [ecx+0x1f]
  409732:	stos   BYTE PTR es:[edi],al
  409733:	(bad)  
  409735:	xor    eax,0xcde83923
  40973a:	pop    es
  40973b:	xchg   edi,eax
  40973c:	(bad)  
  40973d:	xchg   esi,eax
  40973e:	fisttp DWORD PTR [ebx]
  409740:	ins    BYTE PTR es:[edi],dx
  409741:	pop    esi
  409742:	xchg   ecx,eax
  409743:	int3   
  409744:	pop    ss
  409745:	or     al,0x68
  409747:	pusha  
  409748:	ss mov esi,0xc7574603
  40974e:	nop
  40974f:	clc    
  409750:	add    cl,ah
  409752:	test   al,0x4b
  409754:	mov    esp,DWORD PTR [ebx-0x3b4dbe14]
  40975a:	fs js  0x40974a
  40975d:	(bad)  
  40975e:	ins    DWORD PTR es:[edi],dx
  40975f:	pusha  
  409760:	jne    0x409797
  409762:	pop    ebp
  409763:	int3   
  409764:	sbb    al,0x79
  409766:	add    eax,0xae0ebf4d
  40976b:	push   es
  40976c:	ds inc edi
  40976e:	fbld   TBYTE PTR [ebx]
  409770:	jns    0x409774
  409772:	int3   
  409773:	and    ebp,DWORD PTR [edx+esi*2]
  409776:	push   ebx
  409777:	test   ecx,ebp
  409779:	nop
  40977a:	add    eax,DWORD PTR [edi]
  40977c:	and    dl,BYTE PTR [edi+esi*8]
  40977f:	jns    0x409751
  409781:	out    dx,al
  409782:	cmp    BYTE PTR [edi+0xdd23a3d],ch
  409788:	mov    dl,0x4d
  40978a:	cmp    eax,0xebc7434d
  40978f:	imul   ebx,DWORD PTR [esi-0x3f0098ce],0xf9f024b6
  409799:	mov    esp,0xe0080b7e
  40979e:	jne    0x4097de
  4097a0:	mov    al,0xf1
  4097a2:	inc    esp
  4097a3:	cli    
  4097a4:	dec    esi
  4097a5:	and    DWORD PTR [eax-0x34],0xffffffc4
  4097a9:	push   eax
  4097aa:	jnp    0x4097ee
  4097ac:	inc    edi
  4097ad:	mov    ebx,0xb9a7b7c3
  4097b2:	pop    esp
  4097b3:	sbb    eax,0xe5c9137d
  4097b8:	push   cs
  4097b9:	dec    eax
  4097ba:	cmc    
  4097bb:	not    ch
  4097bd:	mov    cl,0xf9
  4097c0:	sbb    BYTE PTR [edx+0x2909225],dh
  4097c6:	mov    esp,0x7e6ce6e1
  4097cb:	out    0xd6,al
  4097cd:	and    edx,DWORD PTR [ecx+0x3d86d994]
  4097d3:	jo     0x409780
  4097d5:	popa   
  4097d6:	(bad)  
  4097d7:	mov    ebx,0xf2faace9
  4097dc:	push   cs
  4097dd:	arpl   bp,dx
  4097df:	repz push ebx
  4097e1:	adc    BYTE PTR [eax+0x36ce758],al
  4097e7:	dec    ebx
  4097e8:	inc    ebp
  4097e9:	push   edx
  4097ea:	cld    
  4097eb:	dec    edx
  4097ec:	adc    ch,BYTE PTR [eax+0x58]
  4097ef:	jecxz  0x4097bf
  4097f1:	xchg   edx,eax
  4097f2:	mov    ds:0xdd89b446,eax
  4097f7:	and    ebx,eax
  4097f9:	adc    eax,0x5a5d67a6
  4097fe:	cmp    ebx,edi
  409800:	xor    eax,0x6664eb65
  409805:	mov    ebp,0x159ffb49
  40980a:	inc    ebp
  40980b:	mov    ah,0xc4
  40980d:	stos   DWORD PTR es:[edi],eax
  40980e:	mov    bh,dh
  409810:	call   0xa6dd:0x12b5f4e6
  409817:	inc    esp
  409818:	mov    al,0xa9
  40981a:	fwait
  40981b:	rcl    DWORD PTR [ecx+0x56],1
  40981e:	xor    DWORD PTR [eax],ecx
  409820:	add    eax,0xab8a990c
  409825:	iret   
  409826:	inc    edi
  409827:	(bad)  
  409828:	bound  edi,QWORD PTR [eax]
  40982a:	ins    DWORD PTR es:[edi],dx
  40982b:	ret    
  40982c:	js     0x409810
  40982e:	mov    cl,0x64
  409830:	and    BYTE PTR [ebx],ah
  409832:	popa   
  409833:	icebp  
  409834:	push   edx
  409835:	add    dh,BYTE PTR [ebp-0x51]
  409838:	cmc    
  409839:	aas    
  40983a:	inc    esp
  40983b:	ret    
  40983c:	xlat   BYTE PTR ds:[ebx]
  40983d:	fcmovne st,st(0)
  40983f:	or     al,0xfd
  409841:	mov    ch,0xd7
  409843:	or     esp,DWORD PTR [eax]
  409845:	add    eax,0x6c5b9f71
  40984a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40984b:	popf   
  40984c:	mov    dl,0xa2
  40984e:	push   edx
  40984f:	adc    eax,0x7d7cc5a8
  409854:	mov    ds:0x8458c3af,al
  409859:	je     0x40987d
  40985b:	cmp    ecx,DWORD PTR [ecx]
  40985d:	mov    ds:0x7a1671bf,al
  409862:	das    
  409863:	aaa    
  409864:	push   edx
  409865:	adc    eax,0xb7702edf
  40986a:	call   0xa144fe60
  40986f:	adc    bh,BYTE PTR [esi+edi*8]
  409872:	stos   BYTE PTR es:[edi],al
  409873:	call   0xfd71:0xfa6ae718
  40987a:	and    cl,BYTE PTR [esp+esi*4+0x4b5ef2b0]
  409881:	jae    0x40980f
  409883:	in     eax,dx
  409884:	call   0xfdec0473
  409889:	jl     0x409899
  40988b:	rcr    BYTE PTR ds:0xf99ae162,cl
  409891:	es mov ebp,0xb942b0f2
  409897:	mov    esi,0x6576ae21
  40989c:	int3   
  40989d:	add    al,bh
  40989f:	lock jbe 0x409858
  4098a2:	cmp    eax,0x76637bd1
  4098a7:	sahf   
  4098a8:	mov    dl,0xd8
  4098aa:	test   BYTE PTR [di],0x10
  4098ae:	rcr    BYTE PTR [ebp+0x3b],0x22
  4098b2:	adc    ah,al
  4098b4:	fcomp  QWORD PTR [ecx]
  4098b6:	push   ebx
  4098b7:	and    BYTE PTR [ebx-0x3b1ec34d],bh
  4098bd:	mov    ds:0xa0744761,al
  4098c2:	imul   ecx,DWORD PTR fs:[edx+0x2e6aee39],0x4d
  4098ca:	dec    ebp
  4098cb:	das    
  4098cc:	(bad)  
  4098cd:	fld    QWORD PTR [ecx]
  4098cf:	test   BYTE PTR [eax],dh
  4098d1:	adc    DWORD PTR [esi+0x6ceb3cb5],esp
  4098d7:	or     BYTE PTR [ecx+ebx*4-0x4fa67233],bl
  4098de:	mov    esi,0x3a26b131
  4098e3:	or     BYTE PTR [ecx],bl
  4098e5:	push   esi
  4098e6:	sub    al,0xae
  4098e8:	arpl   WORD PTR [ecx-0x5c4ff949],bp
  4098ee:	jl     0x4098ba
  4098f0:	lock iret 
  4098f2:	sub    eax,0x79088dbb
  4098f7:	pop    es
  4098f8:	fimul  DWORD PTR [esp+ebp*2-0x62]
  4098fc:	mov    ebx,0xf7c14cbc
  409901:	dec    edi
  409902:	rcr    BYTE PTR [eax-0x4e4e5adb],1
  409908:	jno    0x409989
  40990a:	in     al,dx
  40990b:	xor    DWORD PTR [esp+ebp*2+0x5],ebx
  40990f:	jbe    0x40992c
  409911:	sub    al,0xe
  409913:	jbe    0x4098bb
  409915:	not    BYTE PTR [ebx+0x4dfaced6]
  40991b:	pop    ecx
  40991c:	ins    BYTE PTR es:[edi],dx
  40991d:	(bad)  
  40991e:	hlt    
  40991f:	adc    eax,DWORD PTR [eax+0x7c]
  409922:	adc    eax,0xdf74d4a0
  409927:	mov    esp,0x39c36e19
  40992c:	(bad)  
  40992d:	adc    BYTE PTR [ebp-0x4],bh
  409930:	shr    BYTE PTR [eax+eax*1-0x510f1a82],1
  409937:	stos   DWORD PTR es:[edi],eax
  409938:	jno    0x409986
  40993a:	rol    DWORD PTR [ecx+ecx*2-0x4],1
  40993e:	fwait
  40993f:	sbb    al,BYTE PTR [esi-0x10f63163]
  409945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409946:	xor    eax,0xca51a02e
  40994b:	xchg   ebx,eax
  40994c:	(bad)  
  40994d:	pop    ecx
  40994e:	xlat   BYTE PTR ds:[ebx]
  40994f:	(bad)  
  409951:	leave  
  409952:	retf   0xc230
  409955:	mov    al,ds:0x7ce153f3
  40995a:	stos   DWORD PTR es:[edi],eax
  40995b:	dec    esi
  40995c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40995d:	xchg   esi,eax
  40995e:	jb     0x409922
  409960:	or     BYTE PTR [ebx],cl
  409962:	jmp    0x61736b8e
  409967:	sub    ebp,DWORD PTR [ecx-0x2]
  40996a:	mov    edi,0x823b8343
  40996f:	sbb    DWORD PTR [ebp+0x56],ebx
  409972:	stc    
  409973:	fistp  QWORD PTR [edx]
  409975:	add    DWORD PTR [ebp-0x2e11970a],edi
  40997b:	lods   al,BYTE PTR ds:[esi]
  40997c:	aam    0x1
  40997e:	clc    
  40997f:	xchg   ecx,eax
  409980:	(bad)  
  409981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409982:	jp     0x4099fa
  409984:	xchg   esp,eax
  409985:	test   al,0x60
  409987:	pushf  
  409988:	cld    
  409989:	sbb    al,0x97
  40998b:	cld    
  40998c:	idiv   BYTE PTR [edx-0x3e9642c5]
  409992:	inc    esi
  409993:	pop    eax
  409994:	(bad)  
  409995:	(bad)  
  409996:	stos   DWORD PTR es:[edi],eax
  409997:	mov    ds:0x8762d611,al
  40999c:	imul   eax,ebx,0xf3f4e2b4
  4099a2:	inc    edi
  4099a3:	fild   WORD PTR [ebp+0x7fe246cb]
  4099a9:	int    0x27
  4099ab:	rcl    BYTE PTR [ebx+0x4f],1
  4099ae:	daa    
  4099af:	xor    bh,ch
  4099b1:	xchg   ebp,eax
  4099b2:	jle    0x409962
  4099b4:	xchg   esi,eax
  4099b5:	mov    eax,ds:0x3bb71e0c
  4099ba:	fnstsw WORD PTR [esp+ecx*4]
  4099bd:	dec    eax
  4099be:	inc    ebx
  4099bf:	sbb    al,0x5f
  4099c1:	sbb    eax,0x392d0c1a
  4099c6:	in     eax,0x1f
  4099c8:	mov    dh,0x65
  4099ca:	jae    0x40994d
  4099cc:	fwait
  4099cd:	xor    ecx,eax
  4099cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d0:	jnp    0x4099fd
  4099d2:	pop    eax
  4099d3:	dec    eax
  4099d4:	add    DWORD PTR [ecx+0x5dc18dec],ecx
  4099da:	mov    esi,DWORD PTR [eax+0x3f]
  4099dd:	or     ch,BYTE PTR [ebx+0x48]
  4099e0:	xor    BYTE PTR [esi-0x49771c62],dh
  4099e6:	sub    eax,0x58120519
  4099eb:	or     eax,0x14cb60b6
  4099f0:	push   es
  4099f1:	scas   al,BYTE PTR es:[edi]
  4099f2:	jge    0x4099ea
  4099f4:	cmp    DWORD PTR [ebx+0x4a],eax
  4099f7:	int3   
  4099f8:	push   0x62
  4099fa:	fmulp  st(2),st
  4099fc:	cli    
  4099fd:	or     al,ch
  4099ff:	dec    eax
  409a00:	ret    0xbb4c
  409a03:	xor    esi,edx
  409a05:	fisub  DWORD PTR [esi]
  409a07:	dec    eax
  409a08:	fnstcw WORD PTR [ebx]
  409a0a:	add    ah,BYTE PTR [eax-0x74]
  409a0d:	adc    al,0x5d
  409a0f:	push   ebp
  409a10:	aam    0x72
  409a12:	pusha  
  409a13:	add    BYTE PTR [edx+0x4b77ac07],al
  409a19:	mov    ebp,0xcfd7762c
  409a1e:	retf   0xb1b9
  409a21:	outs   dx,DWORD PTR ds:[esi]
  409a22:	test   eax,ebx
  409a24:	inc    edi
  409a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a26:	jb     0x409a1a
  409a28:	mov    al,ch
  409a2a:	retf   
  409a2b:	ficomp DWORD PTR [ecx+0xfd3a860]
  409a31:	addr16 fwait
  409a33:	sbb    BYTE PTR [ebp+0x3b],0x21
  409a37:	test   eax,0x2bec6ca9
  409a3c:	jle    0x409aa4
  409a3e:	shl    BYTE PTR ds:0xf93d5891,0x56
  409a45:	inc    ebx
  409a46:	inc    edi
  409a47:	inc    ebp
  409a48:	ds jcxz 0x4099e2
  409a4c:	outs   dx,BYTE PTR ds:[esi]
  409a4d:	or     al,0xb0
  409a4f:	sbb    ch,dl
  409a51:	mov    al,ds:0x536df5ac
  409a56:	repnz out 0x8c,eax
  409a59:	hlt    
  409a5a:	mov    dh,0x5f
  409a5c:	div    DWORD PTR [ecx+0x228ba84]
  409a62:	out    0x41,eax
  409a64:	imul   ecx,DWORD PTR [ebp+0x6ba2a118],0x1cb20549
  409a6e:	es jns 0x409ad5
  409a71:	sahf   
  409a72:	shl    al,0xb4
  409a75:	add    al,0x93
  409a77:	xchg   DWORD PTR ds:0x9b337d36,ebp
  409a7d:	mov    ds:0xb38e788b,eax
  409a82:	push   ds
  409a83:	dec    esi
  409a84:	lods   al,BYTE PTR cs:[esi]
  409a86:	jo     0x409a40
  409a88:	out    0x3c,al
  409a8a:	ficom  WORD PTR [edi+0x29]
  409a8d:	xchg   ch,bl
  409a8f:	sbb    DWORD PTR [ecx],ecx
  409a91:	sub    BYTE PTR [edx],ch
  409a93:	dec    esi
  409a94:	ss ss (bad) 
  409a97:	div    BYTE PTR [eax]
  409a99:	adc    BYTE PTR [eax],0xc7
  409a9c:	dec    esp
  409a9d:	xor    DWORD PTR [edx],0x3c
  409aa0:	ja     0x409ab0
  409aa2:	or     BYTE PTR [ecx-0x52c6dc9a],dl
  409aa8:	ror    ecx,cl
  409aaa:	jecxz  0x409a51
  409aac:	adc    bh,al
  409aae:	xor    al,0xa8
  409ab0:	ficomp DWORD PTR [edx-0xf3c7dbb]
  409ab6:	push   ss
  409ab7:	push   edx
  409ab8:	mov    eax,0x35a7ab65
  409abd:	popa   
  409abe:	jne    0x409ac1
  409ac0:	fsubr  DWORD PTR [edx+0x1000a771]
  409ac6:	das    
  409ac7:	call   0x2bf7:0x8f234cfd
  409ace:	jno    0x409afd
  409ad0:	xchg   ebx,eax
  409ad1:	ss (bad) 
  409ad3:	xchg   esi,eax
  409ad4:	les    edi,FWORD PTR [esi+0x42]
  409ad7:	test   BYTE PTR [ebp-0x3799f115],ch
  409add:	je     0x409b05
  409adf:	inc    eax
  409ae0:	pop    edx
  409ae1:	hlt    
  409ae2:	add    eax,0x68ba135
  409ae7:	pop    edi
  409ae8:	cwde   
  409ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aea:	das    
  409aeb:	sub    DWORD PTR [ecx-0x5e],ebx
  409aee:	int    0x83
  409af0:	icebp  
  409af1:	aad    0xe6
  409af3:	lahf   
  409af4:	adc    eax,0x67c0a95f
  409af9:	dec    esi
  409afa:	dec    esp
  409afb:	shl    DWORD PTR ss:[eax],0x9e
  409aff:	into   
  409b00:	cmp    edx,edi
  409b02:	jbe    0x409b43
  409b04:	xchg   esp,eax
  409b05:	xchg   esi,eax
  409b06:	daa    
  409b07:	pop    ecx
  409b08:	mov    ecx,0x67cdd1d6
  409b0d:	jmp    DWORD PTR [ecx-0x2e5c603c]
  409b13:	call   0x6fc0:0xb404f22f
  409b1a:	push   ebx
  409b1b:	gs jecxz 0x409b2d
  409b1e:	loopne 0x409aa3
  409b20:	push   eax
  409b21:	inc    esp
  409b22:	out    0x3,eax
  409b24:	loopne 0x409aca
  409b26:	xchg   edi,eax
  409b27:	stos   BYTE PTR es:[edi],al
  409b28:	add    BYTE PTR [eax],0xee
  409b2b:	int3   
  409b2c:	fadd   st(5),st
  409b2e:	nop    ecx
  409b31:	lahf   
  409b32:	jp     0x409b85
  409b34:	mov    ebp,0x2e366c81
  409b39:	dec    esp
  409b3a:	sbb    al,0x6d
  409b3c:	out    0xd1,eax
  409b3e:	sub    dh,al
  409b40:	arpl   WORD PTR [ecx+0x2d945389],di
  409b46:	mov    esi,0x3d3fa73b
  409b4b:	rol    BYTE PTR [ebp+0x6016b904],0xe4
  409b52:	or     esp,ebx
  409b54:	inc    edi
  409b55:	scas   eax,DWORD PTR es:[edi]
  409b56:	mov    bh,0xb9
  409b58:	pop    es
  409b59:	xor    dh,dl
  409b5b:	imul   edi,DWORD PTR [ecx+0x2468bbda],0xffffff8f
  409b62:	aam    0xa6
  409b64:	jo     0x409b88
  409b66:	adc    al,0x6f
  409b68:	dec    ebp
  409b69:	inc    ecx
  409b6a:	xchg   ecx,eax
  409b6b:	mov    ebp,0xea2db700
  409b70:	xlat   BYTE PTR ds:[ebx]
  409b71:	and    edx,ecx
  409b73:	in     al,0xe3
  409b75:	cmp    ebp,DWORD PTR [edx]
  409b77:	push   ds
  409b78:	test   eax,0x63e86f34
  409b7d:	out    0xc7,eax
  409b7f:	mov    al,ds:0x6e8f212d
  409b84:	lds    ecx,FWORD PTR [ebx]
  409b86:	push   es
  409b87:	js     0x409bf2
  409b89:	ror    BYTE PTR [ebx+eiz*4+0x29],0xea
  409b8e:	jnp    0x409b21
  409b90:	div    DWORD PTR [ebx+0x5a6b291f]
  409b96:	jle    0x409b4b
  409b98:	out    0x45,eax
  409b9a:	xchg   edx,eax
  409b9b:	sbb    DWORD PTR [esi-0x56],ebp
  409b9e:	mov    ebx,0x672c1a82
  409ba3:	rol    DWORD PTR [eax-0x2c],0x9e
  409ba7:	mov    al,ds:0xec69afab
  409bac:	daa    
  409bad:	das    
  409bae:	dec    esp
  409baf:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409bb1:	or     al,0xa7
  409bb3:	sbb    ecx,DWORD PTR [esi-0x6484b948]
  409bb9:	xchg   edx,eax
  409bba:	fidivr DWORD PTR [ebp+0x56]
  409bbd:	dec    esi
  409bbe:	or     DWORD PTR [eax-0x3c],ecx
  409bc1:	dec    BYTE PTR [edx+0x71364b1]
  409bc7:	jo     0x409c3a
  409bc9:	sahf   
  409bca:	jnp    0x409b90
  409bcc:	mov    eax,DWORD PTR [eax-0x6]
  409bcf:	push   esi
  409bd0:	push   ss
  409bd1:	pushf  
  409bd2:	sub    BYTE PTR [ebx-0x38],dh
  409bd5:	sub    DWORD PTR [ecx],ecx
  409bd7:	std    
  409bd8:	aaa    
  409bd9:	imul   esp,eax,0xffffffeb
  409bdc:	jmp    0x3190:0x2f9ca4bd
  409be3:	mov    esi,0x81cce55e
  409be8:	sbb    bh,bl
  409bea:	mov    dl,0x9f
  409bec:	xchg   ecx,eax
  409bed:	in     eax,0xc4
  409bef:	jmp    0xf710:0x89f15b11
  409bf6:	sbb    edi,ebp
  409bf8:	jle    0x409c17
  409bfa:	cwde   
  409bfb:	pop    ds
  409bfc:	aas    
  409bfd:	jo     0x409bf7
  409bff:	outs   dx,DWORD PTR ds:[esi]
  409c00:	add    al,BYTE PTR [esi]
  409c02:	shr    BYTE PTR [ebp-0xb],0xc4
  409c06:	dec    ebp
  409c07:	fcomp  DWORD PTR [esi+0x42dfa17f]
  409c0d:	call   0x7e93bf74
  409c12:	mov    ss:0x67757a18,eax
  409c18:	scas   al,BYTE PTR es:[edi]
  409c19:	sub    ah,BYTE PTR [eax]
  409c1b:	cmp    esp,DWORD PTR [ebx]
  409c1d:	or     DWORD PTR [ebx+0x1c28df5b],esi
  409c23:	mov    bh,BYTE PTR [ecx]
  409c25:	pusha  
  409c26:	xlat   BYTE PTR ds:[ebx]
  409c27:	mov    esi,0xd101d079
  409c2c:	fsubr  QWORD PTR [ecx+0x5d]
  409c2f:	mov    al,0xda
  409c31:	inc    ecx
  409c32:	stos   BYTE PTR es:[edi],al
  409c33:	cmp    al,0x2d
  409c35:	out    dx,eax
  409c36:	ds (bad) 
  409c38:	ss pop ebx
  409c3a:	xchg   BYTE PTR ds:0x24690ea9,dl
  409c40:	cld    
  409c41:	cli    
  409c42:	fbld   TBYTE PTR [esi]
  409c44:	pop    ss
  409c45:	cmp    ecx,DWORD PTR [edi-0x23]
  409c48:	cli    
  409c49:	pop    eax
  409c4a:	repnz fidiv DWORD PTR [edx-0xdf6afc0]
  409c51:	aaa    
  409c52:	mov    ecx,0x1d4143fe
  409c57:	jl     0x409c09
  409c59:	jle    0x409cab
  409c5b:	fs je  0x409c05
  409c5e:	out    0x9c,eax
  409c60:	or     eax,edx
  409c62:	enter  0x62a4,0xab
  409c66:	pop    ebp
  409c67:	push   ds
  409c68:	out    0x87,eax
  409c6a:	inc    ecx
  409c6b:	sbb    BYTE PTR [ecx],cl
  409c6d:	cmp    cl,BYTE PTR [eax]
  409c6f:	out    dx,al
  409c70:	jl     0x409c96
  409c72:	sbb    DWORD PTR [edx+0x74],esi
  409c75:	stc    
  409c76:	and    DWORD PTR [eax+0x697f25e6],0xae0016e7
  409c80:	test   al,0xa
  409c82:	jecxz  0x409c6d
  409c84:	(bad)  
  409c85:	ins    DWORD PTR es:[edi],dx
  409c86:	inc    ebp
  409c87:	mov    edx,0x9fa0a3c9
  409c8c:	mov    cl,0xf6
  409c8e:	xor    eax,0x1e408d2c
  409c93:	xchg   ebx,eax
  409c94:	test   ebx,ecx
  409c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c97:	dec    edx
  409c98:	fst    DWORD PTR [eax]
  409c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c9b:	xor    al,0xbd
  409c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9e:	or     ebp,DWORD PTR [edi+0xd]
  409ca1:	aam    0xc7
  409ca3:	out    0x34,eax
  409ca5:	jecxz  0x409c49
  409ca7:	dec    ebx
  409ca8:	sub    edx,esi
  409caa:	pop    esp
  409cab:	enter  0x7f82,0x43
  409caf:	mov    esi,ebx
  409cb1:	mov    al,0x23
  409cb3:	imul   ecx,esi,0x21e949df
  409cb9:	lods   eax,DWORD PTR ds:[esi]
  409cba:	adc    BYTE PTR [ebp-0x23],ah
  409cbd:	mov    al,ds:0x455b216
  409cc2:	push   ss
  409cc3:	dec    edi
  409cc4:	adc    ebp,DWORD PTR [ecx-0x59e1b82e]
  409cca:	fwait
  409ccb:	cmp    al,0xd4
  409ccd:	xor    al,0x54
  409ccf:	pushf  
  409cd0:	inc    edx
  409cd1:	das    
  409cd2:	xlat   BYTE PTR ds:[ebx]
  409cd3:	pop    edi
  409cd4:	cmove  ecx,DWORD PTR [edx+edi*8-0x6d6310e]
  409cdc:	and    eax,0x78d60e34
  409ce1:	mov    ds:0x2de63ca2,al
  409ce6:	pop    ss
  409ce7:	arpl   cx,bx
  409ce9:	test   DWORD PTR [edx+0x3f769338],ebx
  409cef:	fidiv  DWORD PTR [edx+0x3]
  409cf2:	js     0x409ca0
  409cf4:	mov    dh,0x7a
  409cf6:	test   al,0xd4
  409cf8:	add    eax,esi
  409cfa:	mov    ah,0x6a
  409cfc:	sbb    al,0x12
  409cff:	sub    DWORD PTR [edi-0x34],ebx
  409d02:	sti    
  409d03:	mov    edx,0x33bb581e
  409d08:	(bad)  
  409d09:	int    0xa6
  409d0b:	mov    al,ds:0x39e67a5c
  409d10:	pop    ebx
  409d11:	or     esp,DWORD PTR [ecx]
  409d13:	inc    edx
  409d14:	adc    esi,ebp
  409d16:	sub    DWORD PTR [ebx],0xfffffff1
  409d19:	sbb    al,0xb7
  409d1b:	xchg   esp,eax
  409d1c:	fstp   QWORD PTR [edx]
  409d1e:	jae    0x409cf5
  409d20:	mov    esp,0x5ae45b67
  409d25:	pop    esp
  409d26:	ins    BYTE PTR es:[edi],dx
  409d27:	push   ecx
  409d28:	loopne 0x409d6f
  409d2a:	jp     0x409d1d
  409d2c:	push   cs
  409d2d:	leave  
  409d2e:	dec    eax
  409d2f:	popf   
  409d30:	or     al,0xf2
  409d32:	sbb    al,0x55
  409d34:	neg    BYTE PTR [edx]
  409d36:	int    0x55
  409d38:	and    esi,eax
  409d3a:	mov    ecx,0xc64113ee
  409d3f:	cmc    
  409d40:	mov    ecx,0x6dd7be61
  409d45:	pop    esi
  409d46:	and    al,0xb6
  409d48:	sbb    ebx,0xffffff91
  409d4b:	mov    ebp,0x2544dfd1
  409d50:	add    edx,DWORD PTR [edx]
  409d52:	push   esp
  409d53:	pop    esp
  409d54:	push   0xf8995fb5
  409d59:	aad    0x3a
  409d5b:	add    al,0x9
  409d5d:	fimul  DWORD PTR [ebp+0x61db2add]
  409d63:	xlat   BYTE PTR ds:[ebx]
  409d64:	inc    edx
  409d65:	add    bh,BYTE PTR [eax+0x1aec0d1a]
  409d6b:	push   edi
  409d6c:	add    ebx,DWORD PTR [eax-0x60]
  409d6f:	cmp    dh,bl
  409d71:	xchg   ecx,eax
  409d72:	jnp    0x409dbc
  409d74:	pushf  
  409d75:	test   DWORD PTR [eax-0x70],ebp
  409d78:	pop    ebx
  409d79:	sbb    al,0xab
  409d7b:	(bad)  
  409d7c:	lock bnd jo 0x409d8f
  409d80:	mov    ch,BYTE PTR [esi-0x42]
  409d83:	and    esi,DWORD PTR [edx+0xd]
  409d86:	pop    esp
  409d87:	cwde   
  409d88:	dec    esi
  409d89:	clc    
  409d8a:	(bad)
  409d8e:	es jbe 0x409d4d
  409d91:	fcom   QWORD PTR [esi]
  409d93:	jmp    0x409dc4
  409d95:	mov    DWORD PTR [ecx-0x6e349527],ecx
  409d9b:	inc    ecx
  409d9c:	mov    eax,0xfd94498a
  409da1:	mov    DWORD PTR [eax],ebp
  409da3:	jmp    0x777454e5
  409da8:	cdq    
  409da9:	retf   
  409daa:	xor    bh,BYTE PTR [esi]
  409dac:	sbb    al,0x66
  409dae:	out    dx,al
  409daf:	inc    ebx
  409db0:	push   cs
  409db1:	sahf   
  409db2:	scas   al,BYTE PTR es:[edi]
  409db3:	or     al,0x6e
  409db5:	push   ebp
  409db6:	ret    0x5906
  409db9:	outs   dx,BYTE PTR ds:[esi]
  409dba:	cmp    al,0xc6
  409dbc:	out    dx,al
  409dbd:	jbe    0x409dab
  409dbf:	add    edx,DWORD PTR [eax+0x17]
  409dc2:	int3   
  409dc3:	imul   esi,DWORD PTR [esi],0x6f
  409dc6:	dec    edx
  409dc7:	fadd   st,st(2)
  409dc9:	adc    DWORD PTR [edi+0x61],esi
  409dcc:	or     bl,dh
  409dce:	mov    eax,ds:0x294ec644
  409dd3:	into   
  409dd4:	sbb    DWORD PTR [ecx-0x5d],ebp
  409dd7:	in     al,dx
  409dd8:	inc    edi
  409dd9:	sbb    ebx,ebp
  409ddb:	popf   
  409ddc:	stos   DWORD PTR es:[edi],eax
  409ddd:	rcr    BYTE PTR [esi+eax*4-0x148b89e2],cl
  409de4:	shl    dl,0x36
  409de7:	ficomp DWORD PTR [ecx+0x2e]
  409dea:	add    eax,0xe3937e87
  409def:	mov    WORD PTR [esp+edi*2],cs
  409df2:	daa    
  409df3:	mov    ds,WORD PTR [eax]
  409df5:	sbb    esp,esp
  409df7:	push   cs
  409df8:	(bad)  
  409df9:	outs   dx,DWORD PTR ds:[esi]
  409dfa:	push   es
  409dfb:	in     al,dx
  409dfc:	jne    0x409e64
  409dfe:	retf   0xbbb3
  409e01:	mov    ecx,0x4733e9c2
  409e06:	inc    ecx
  409e07:	mov    ds:0xf7d5048e,eax
  409e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e0d:	mov    dh,0x49
  409e0f:	pop    ss
  409e10:	ds push 0x64
  409e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e15:	xchg   esp,eax
  409e16:	xor    ebp,DWORD PTR [ecx+0x6fa2f940]
  409e1c:	pusha  
  409e1d:	jbe    0x409e6d
  409e1f:	retf   0xc46c
  409e22:	push   ebx
  409e23:	pop    ebx
  409e24:	pop    esi
  409e25:	call   0x1b30:0x99b03dc2
  409e2c:	and    ebx,DWORD PTR [eax-0x36]
  409e2f:	jmp    0x3f4d03c1
  409e34:	push   ss
  409e35:	xor    bh,BYTE PTR [eax-0x65]
  409e38:	xlat   BYTE PTR ds:[ebx]
  409e39:	cwde   
  409e3a:	hlt    
  409e3b:	pop    edx
  409e3c:	xchg   ebp,eax
  409e3d:	sti    
  409e3e:	test   DWORD PTR [ebp+0x517b0fbe],0xe8d4356a
  409e48:	add    BYTE PTR ds:0xd43d003c,ch
  409e4e:	out    0xc0,eax
  409e50:	fistp  DWORD PTR [ebx+ebx*4]
  409e53:	add    al,0x88
  409e55:	sbb    DWORD PTR [eax+0x21f78131],0x395e9d9
  409e5f:	test   eax,0xe7dc0beb
  409e64:	inc    edx
  409e65:	int3   
  409e66:	sub    BYTE PTR [edi+0x6da2a8f1],ah
  409e6c:	xchg   ecx,eax
  409e6d:	lock push edx
  409e6f:	push   eax
  409e70:	imul   eax,DWORD PTR [edx]
  409e73:	mov    edx,DWORD PTR [ebp-0x4]
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx+0x1657c083],bl
  40a717:	xor    eax,0x46de2f1
  40a71c:	jp     0x40a798
  40a71e:	out    0x5f,al
  40a720:	jp     0x40a79c
  40a722:	push   edx
  40a723:	or     esi,esp
  40a725:	aam    0x49
  40a727:	pop    edx
  40a728:	adc    al,0x5
  40a72a:	call   0x595f:0x69eee379
  40a731:	add    bh,ch
  40a733:	mov    al,ds:0x9780090d
  40a738:	cmp    DWORD PTR [edx+0x55],edx
  40a73b:	push   es
  40a73c:	retf   
  40a73d:	cmp    BYTE PTR [ecx+0x4e],cl
  40a740:	mov    eax,ds:0x3b6ee4b1
  40a745:	arpl   WORD PTR [edi-0x17653340],di
  40a74b:	adc    ebx,0x7c544915
  40a751:	(bad)  [eax]
  40a753:	and    al,0x1a
  40a755:	push   ebx
  40a756:	push   0x33a500a6
  40a75b:	lahf   
  40a75c:	mov    dh,0xef
  40a75e:	aas    
  40a75f:	rcl    DWORD PTR [esi],0x7a
  40a762:	bound  edi,QWORD PTR [edx]
  40a764:	js     0x40a771
  40a766:	(bad)  
  40a767:	xor    DWORD PTR [esp+ebx*1+0x24],0xffffffc7
  40a76c:	fcmovnbe st,st(4)
  40a76e:	(bad)  
  40a76f:	in     al,dx
  40a770:	enter  0x3f8b,0x2f
  40a774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a775:	push   eax
  40a776:	add    cl,BYTE PTR [eax]
  40a778:	sub    eax,0xe737ecb6
  40a77d:	mov    al,ds:0x41b8fa3a
  40a782:	or     al,BYTE PTR [ebx+0x6e0c8ccb]
  40a788:	or     al,0xce
  40a78a:	popa   
  40a78b:	add    eax,0x1df9515a
  40a790:	and    DWORD PTR [ebx-0x5d7a142e],ecx
  40a796:	push   ss
  40a797:	mov    esp,0x8c5e5217
  40a79c:	dec    ebx
  40a79d:	add    BYTE PTR [esp+eiz*2+0x3bbffbbf],ch
  40a7a4:	iret   
  40a7a5:	mov    ds:0x5adecd1f,al
  40a7aa:	inc    ebp
  40a7ab:	jns    0x40a7a4
  40a7ad:	iret   
  40a7ae:	and    dh,BYTE PTR [edi-0xc7633b0]
  40a7b4:	clc    
  40a7b5:	xchg   esi,eax
  40a7b6:	push   es
  40a7b7:	shl    DWORD PTR [eax-0x37],cl
  40a7ba:	mov    bh,0x79
  40a7bc:	jbe    0x40a778
  40a7be:	jmp    0x613f:0x765156d3
  40a7c5:	inc    ebx
  40a7c6:	mov    al,BYTE PTR [ebx-0x79]
  40a7c9:	mov    ah,BYTE PTR [ebx-0x3d3a4101]
  40a7cf:	(bad)  [edx+0x29eee8ce]
  40a7d5:	fdivr  DWORD PTR [ebp+0x55]
  40a7d8:	mov    dl,0x86
  40a7da:	sbb    BYTE PTR [ebp-0x79],0xd8
  40a7de:	popf   
  40a7df:	add    esp,DWORD PTR ds:0x261427ce
  40a7e5:	dec    esi
  40a7e6:	std    
  40a7e7:	lods   eax,DWORD PTR ds:[esi]
  40a7e8:	mov    esp,0x72ac61d2
  40a7ed:	xchg   edx,eax
  40a7ee:	shl    DWORD PTR [ebp-0x6f08dc7f],1
  40a7f4:	add    dh,ah
  40a7f6:	or     DWORD PTR [edi+0x2a1e3f19],esp
  40a7fc:	daa    
  40a7fd:	add    DWORD PTR [ebx+esi*8],ebx
  40a800:	imul   ebp,DWORD PTR [esi+0x19287698],0x56
  40a807:	cmp    edx,esi
  40a809:	dec    ebp
  40a80a:	jg     0x40a80c
  40a80c:	and    BYTE PTR [ebx+0x8],0x9d
  40a810:	inc    ebx
  40a811:	push   ebx
  40a812:	cs mov bh,0x57
  40a815:	cmp    al,0xe
  40a817:	add    edi,ecx
  40a819:	jnp    0x40a7c2
  40a81b:	je     0x40a84b
  40a81d:	pushf  
  40a81e:	lea    edi,[edx-0x6e556aa8]
  40a824:	xchg   ebp,eax
  40a825:	stc    
  40a826:	in     eax,0x5c
  40a828:	cdq    
  40a829:	jecxz  0x40a81f
  40a82b:	mov    esp,0xce30b315
  40a830:	inc    ecx
  40a831:	xchg   ecx,eax
  40a832:	mov    eax,ds:0xb70fefa0
  40a837:	inc    ecx
  40a838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a839:	jp     0x40a83a
  40a83b:	xor    al,0x5a
  40a83d:	mov    dl,0x5a
  40a83f:	xchg   edx,eax
  40a840:	ds jns 0x40a8b3
  40a843:	fstp   DWORD PTR [ebx-0x3c80552a]
  40a849:	sbb    BYTE PTR [eax-0x3ae0dbcd],cl
  40a84f:	test   BYTE PTR [ebp+eiz*1-0x3d],bh
  40a853:	xchg   ebx,eax
  40a854:	adc    eax,0xd29ea452
  40a859:	in     al,dx
  40a85a:	(bad)
  40a85d:	push   ss
  40a85e:	repnz inc edi
  40a860:	retf   
  40a861:	jns    0x40a828
  40a863:	mov    edx,0x87ba0c15
  40a868:	inc    eax
  40a869:	and    bl,BYTE PTR [ebp+eax*2-0x257f2894]
  40a870:	push   ebx
  40a871:	add    eax,0xe5080c09
  40a876:	xchg   ebp,eax
  40a877:	xor    al,0x42
  40a879:	fild   QWORD PTR [ebx-0x51153b87]
  40a87f:	pop    eax
  40a880:	punpckldq mm4,DWORD PTR [edx-0x42]
  40a884:	(bad)
  40a888:	in     eax,0x1b
  40a88a:	outs   dx,BYTE PTR ds:[esi]
  40a88b:	push   ebx
  40a88c:	inc    edi
  40a88d:	and    BYTE PTR [edx+edi*8-0x3d],al
  40a891:	aad    0xa3
  40a893:	rcl    BYTE PTR [esi+0x3aa2e61e],0xfe
  40a89a:	into   
  40a89b:	and    BYTE PTR [edx],dh
  40a89d:	jnp    0x40a832
  40a89f:	push   ds
  40a8a0:	adc    eax,0x802f56d1
  40a8a5:	or     dh,BYTE PTR [ebp-0x43250d28]
  40a8ab:	dec    ebp
  40a8ac:	add    DWORD PTR [ecx],ebp
  40a8ae:	std    
  40a8af:	jge    0x40a914
  40a8b1:	jns    0x40a881
  40a8b3:	push   0xffffffa0
  40a8b5:	cmp    al,0xea
  40a8b7:	cmp    al,0xe9
  40a8b9:	push   es
  40a8ba:	sahf   
  40a8bb:	outs   dx,BYTE PTR ds:[esi]
  40a8bc:	mov    bh,0xbe
  40a8be:	adc    bl,BYTE PTR ds:0xf2a1922c
  40a8c4:	jle    0x40a92a
  40a8c6:	retf   0xffdc
  40a8c9:	jne    0x40a93f
  40a8cb:	cmp    eax,0x90e0ac41
  40a8d0:	pop    esi
  40a8d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d2:	mov    bl,0xf7
  40a8d4:	jp     0x40a8c1
  40a8d6:	mov    ecx,0xafe6f41
  40a8db:	add    DWORD PTR [edi+edi*2],ecx
  40a8de:	mov    dl,0xa9
  40a8e0:	xchg   esp,eax
  40a8e1:	sahf   
  40a8e2:	idiv   eax
  40a8e4:	lahf   
  40a8e5:	cmp    al,0x4c
  40a8e7:	(bad)  
  40a8e8:	cmp    DWORD PTR [esi],ebp
  40a8ea:	movd   ecx,mm6
  40a8ed:	sar    BYTE PTR [ecx],1
  40a8ef:	pushf  
  40a8f0:	inc    edi
  40a8f1:	loopne 0x40a8b1
  40a8f3:	xchg   DWORD PTR [esi+0x57],esi
  40a8f6:	jnp    0x40a945
  40a8f8:	push   es
  40a8f9:	les    esp,FWORD PTR [edx-0x78]
  40a8fc:	ret    
  40a8fd:	sub    al,0xbc
  40a8ff:	(bad)  
  40a900:	xlat   BYTE PTR ds:[ebx]
  40a901:	arpl   WORD PTR [edx+0x27],sp
  40a904:	rol    BYTE PTR [edx+0xea933f6],1
  40a90a:	lods   al,BYTE PTR ds:[esi]
  40a90b:	js     0x40a941
  40a90d:	imul   ebp,DWORD PTR [esi+0xe29b3ca],0xffffffa2
  40a914:	aad    0xdc
  40a916:	aas    
  40a917:	jmp    DWORD PTR [eax-0x7]
  40a91a:	in     al,dx
  40a91b:	mov    esp,0xfa4d36bf
  40a920:	or     dh,BYTE PTR [edx-0x3474026c]
  40a926:	sti    
  40a927:	mov    esp,esp
  40a929:	lods   al,BYTE PTR ds:[esi]
  40a92a:	sub    bh,BYTE PTR [ecx+0x3e]
  40a92d:	cli    
  40a92e:	cli    
  40a92f:	aaa    
  40a930:	pop    ds
  40a931:	mov    al,0x19
  40a933:	and    eax,0x3bfde24e
  40a938:	pusha  
  40a939:	test   eax,0x49504ace
  40a93e:	adc    eax,0x5cb804c0
  40a943:	stos   DWORD PTR es:[edi],eax
  40a944:	adc    ebp,edx
  40a946:	xor    dl,al
  40a948:	add    eax,0xd18e1b48
  40a94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a94e:	test   eax,0x94ebb816
  40a953:	add    DWORD PTR [edx+0x73cdc7d6],ebp
  40a959:	fcom   QWORD PTR [eax+0x47fd73ff]
  40a95f:	sub    al,BYTE PTR [edx+0x13000d5b]
  40a965:	push   ecx
  40a966:	or     DWORD PTR [eax+edi*4],ecx
  40a969:	mov    eax,es
  40a96b:	inc    ebx
  40a96c:	or     bh,ch
  40a96e:	adc    DWORD PTR [ecx],edi
  40a970:	pop    ss
  40a971:	sub    al,0xa8
  40a973:	push   cs
  40a974:	into   
  40a975:	mov    DWORD PTR [ecx],edx
  40a977:	inc    BYTE PTR [edx]
  40a979:	fmul   QWORD PTR ds:0x6accd92
  40a97f:	jmp    0x40a90a
  40a981:	loopne 0x40a9d7
  40a983:	sbb    eax,0x7066a3bc
  40a988:	sub    BYTE PTR [ebx],al
  40a98a:	xor    eax,0xf7f06b07
  40a98f:	fdivr  st,st(5)
  40a991:	fwait
  40a992:	inc    ebx
  40a993:	cmp    eax,ebp
  40a995:	mov    ebx,DWORD PTR [edi+0x24454c22]
  40a99b:	and    ah,BYTE PTR [esi-0x4d3b8ba8]
  40a9a1:	enter  0x30a4,0x15
  40a9a5:	mov    DWORD PTR [eax+0x6],esp
  40a9a8:	sbb    BYTE PTR [ecx+esi*4+0x20],dh
  40a9ac:	aam    0x4b
  40a9ae:	and    eax,0x1c1f4a1
  40a9b3:	in     al,dx
  40a9b4:	fistp  WORD PTR [ebp+0x11]
  40a9b7:	mov    eax,ds:0x48eaa0b8
  40a9bc:	clc    
  40a9bd:	sub    DWORD PTR [eax-0xd],ecx
  40a9c0:	lahf   
  40a9c1:	mov    al,ds:0xb2cf7b6a
  40a9c6:	pop    ecx
  40a9c7:	cmp    DWORD PTR [ebx-0x2c],edi
  40a9ca:	sub    DWORD PTR [ecx+ebp*1+0x74a7aa94],edi
  40a9d1:	mov    DWORD PTR [ecx],0x41ab45a3
  40a9d7:	push   es
  40a9d8:	in     eax,dx
  40a9d9:	or     edx,DWORD PTR [edx+0x76d26282]
  40a9df:	pop    eax
  40a9e0:	xor    eax,0xa9898398
  40a9e5:	or     BYTE PTR [edi+0x2a],bh
  40a9e8:	adc    ecx,DWORD PTR [ebx]
  40a9ea:	dec    edx
  40a9eb:	sti    
  40a9ec:	enter  0x6e9b,0x1e
  40a9f0:	aas    
  40a9f1:	dec    ecx
  40a9f2:	ins    BYTE PTR es:[edi],dx
  40a9f3:	fisttp WORD PTR [edx+ebx*8-0x4a165262]
  40a9fa:	jg     0x40a9e2
  40a9fc:	mov    dh,0x5c
  40a9fe:	mov    dh,0xc9
  40aa00:	pop    esi
  40aa01:	jns    0x40aa73
  40aa03:	pop    ebx
  40aa04:	aad    0xcb
  40aa06:	mov    fs,WORD PTR [ebx*4-0x60f3edd3]
  40aa0d:	xor    cl,BYTE PTR [bx+si+0x6ea5]
  40aa12:	dec    ebx
  40aa13:	mov    dh,al
  40aa15:	add    esp,DWORD PTR [esi+0x16]
  40aa18:	mov    esi,0x3b26b6e8
  40aa1d:	popa   
  40aa1e:	call   0x87a0:0xa1c3a1a0
  40aa25:	ret    0x9312
  40aa28:	ficomp WORD PTR [ecx+eiz*4+0x1deb5b67]
  40aa2f:	sbb    DWORD PTR [edi],ebp
  40aa31:	push   eax
  40aa32:	dec    edi
  40aa33:	(bad)  
  40aa35:	xchg   esi,eax
  40aa36:	mov    esi,DWORD PTR ds:0x653d8c4a
  40aa3c:	pop    edi
  40aa3d:	push   ebx
  40aa3e:	cmp    DWORD PTR [esi+esi*2+0xb3e230d],0x662fa603
  40aa49:	sti    
  40aa4a:	dec    ecx
  40aa4b:	call   0x8e13:0x210483d1
  40aa52:	sti    
  40aa53:	mov    cl,0xcc
  40aa55:	pushf  
  40aa56:	mov    edi,DWORD PTR [eax+0x2282cd1b]
  40aa5c:	add    ch,BYTE PTR [edx]
  40aa5e:	int3   
  40aa5f:	fwait
  40aa60:	(bad)  
  40aa61:	fdivp  st(5),st
  40aa63:	out    0xf7,eax
  40aa65:	mov    ebx,0xdf5b8d61
  40aa6a:	mov    ds:0xa613d1a,al
  40aa6f:	out    0x55,al
  40aa71:	inc    ecx
  40aa72:	and    DWORD PTR [edx+0x30436e66],ecx
  40aa78:	push   esp
  40aa79:	mov    DWORD PTR [eax+0x7f],edi
  40aa7c:	jae    0x40aa0f
  40aa7e:	(bad)  
  40aa7f:	pavgb  mm2,QWORD PTR [esi-0x73ae76d6]
  40aa86:	bsr    esp,DWORD PTR [edx]
  40aa89:	or     BYTE PTR [eax+0x7a],bh
  40aa8c:	push   es
  40aa8d:	mov    esi,0x1f07ebe5
  40aa92:	gs aaa 
  40aa94:	(bad)  
  40aa95:	stc    
  40aa96:	xor    BYTE PTR [ecx+0x6473ebe1],0x2
  40aa9d:	cmp    dl,BYTE PTR [edx+0x7f32c01]
  40aaa3:	aas    
  40aaa4:	fs pop ds
  40aaa6:	fisubr DWORD PTR [ebp+edi*8+0x4cc44e4a]
  40aaad:	sub    dh,BYTE PTR [edi]
  40aaaf:	jnp    0x40ab25
  40aab1:	pop    ebx
  40aab2:	fs jecxz 0x40aadc
  40aab5:	ins    BYTE PTR es:[edi],dx
  40aab6:	xor    ecx,eax
  40aab8:	cmp    DWORD PTR [esi-0x65],edx
  40aabb:	jl     0x40aaaf
  40aabd:	or     al,0xfc
  40aabf:	sbb    ebx,esp
  40aac1:	mov    ch,0x90
  40aac3:	mov    dh,BYTE PTR [edx+edx*2]
  40aac6:	push   ebp
  40aac7:	gs mov esi,0x8b2a2ddc
  40aacd:	outs   dx,BYTE PTR ds:[esi]
  40aace:	or     DWORD PTR [ebp+edx*4-0x43],0x2f
  40aad3:	mov    ebx,0x11eea7c0
  40aad8:	dec    eax
  40aad9:	mov    eax,0xb4da3164
  40aade:	jl     0x40aa64
  40aae0:	scas   eax,DWORD PTR es:[edi]
  40aae1:	in     al,0x54
  40aae3:	loope  0x40ab32
  40aae5:	stos   DWORD PTR es:[edi],eax
  40aae6:	popf   
  40aae7:	int    0x1f
  40aae9:	cs retf 0x7f53
  40aaed:	add    al,0x17
  40aaef:	push   esi
  40aaf0:	xchg   esp,eax
  40aaf1:	fmul   st(2),st
  40aaf3:	enter  0xb864,0x5a
  40aaf7:	cmc    
  40aaf8:	pop    esp
  40aaf9:	call   0x6cc3:0x8aa3816d
  40ab00:	bound  edx,QWORD PTR [ebp+0x55]
  40ab03:	mov    ds:0x1394f0c2,al
  40ab08:	xchg   DWORD PTR [edx],ecx
  40ab0a:	outs   dx,BYTE PTR ds:[esi]
  40ab0b:	shl    BYTE PTR [edi],cl
  40ab0d:	aaa    
  40ab0e:	fnstenv [edi+ebx*1+0x3f]
  40ab12:	cli    
  40ab13:	push   esp
  40ab14:	cmp    cl,BYTE PTR [edi-0xe2b35da]
  40ab1a:	out    dx,eax
  40ab1b:	adc    BYTE PTR [ebx-0x6d],0x88
  40ab1f:	mov    edx,0x9dc26ba2
  40ab24:	out    0x7e,al
  40ab26:	push   0x9f404ade
  40ab2b:	ret    
  40ab2c:	call   0x8fb383a2
  40ab31:	pop    eax
  40ab32:	and    al,0x91
  40ab34:	fdiv   DWORD PTR [edi-0x6dc6d76a]
  40ab3a:	lds    edx,FWORD PTR [esi]
  40ab3c:	ret    0xf663
  40ab3f:	int    0xf4
  40ab41:	arpl   WORD PTR ds:0x9e4523d1,bx
  40ab47:	test   DWORD PTR [ecx-0x11b40405],esi
  40ab4d:	aam    0x58
  40ab4f:	call   0x72ef:0xade0e271
  40ab56:	mov    ebx,0x93cb592c
  40ab5b:	and    esi,ebp
  40ab5d:	repz out 0xa3,eax
  40ab60:	inc    esi
  40ab61:	and    DWORD PTR [ecx-0x3e],ebp
  40ab64:	rcl    DWORD PTR [ebp+0xa],1
  40ab67:	sub    al,0x78
  40ab69:	leave  
  40ab6a:	mov    dl,0x0
  40ab6c:	sbb    edi,0x22
  40ab6f:	scas   eax,DWORD PTR es:[edi]
  40ab70:	nop
  40ab71:	lock repnz or eax,0x9ad2d9f6
  40ab78:	int3   
  40ab79:	out    dx,al
  40ab7a:	loopne 0x40ab9d
  40ab7c:	adc    eax,ecx
  40ab7e:	xchg   ebx,eax
  40ab7f:	clc    
  40ab80:	lods   eax,DWORD PTR ds:[esi]
  40ab81:	or     edi,DWORD PTR [esi+ebx*4+0x23]
  40ab85:	ins    BYTE PTR es:[edi],dx
  40ab86:	sbb    eax,0xab296b8f
  40ab8b:	imul   eax,esi,0x1
  40ab8e:	dec    DWORD PTR [ebx-0x22afd92f]
  40ab94:	call   0xab9ff87c
  40ab99:	and    al,0x4f
  40ab9b:	sub    DWORD PTR [edx],esp
  40ab9d:	(bad)  
  40ab9e:	push   esp
  40ab9f:	jp     0x40ab9f
  40aba1:	xor    eax,0x4265ca77
  40aba6:	ret    0x252b
  40aba9:	mov    ds:0xa4828027,eax
  40abae:	js     0x40aba0
  40abb0:	sbb    BYTE PTR [esi-0x1e],al
  40abb3:	mov    al,0x9c
  40abb5:	and    ebp,DWORD PTR [esi+0x42]
  40abb8:	pop    esi
  40abb9:	pusha  
  40abba:	and    DWORD PTR ds:0x850124a0,ecx
  40abc0:	dec    ecx
  40abc1:	cmp    DWORD PTR [edx+0x3e5edcb5],ebx
  40abc7:	push   ebx
  40abc8:	mov    WORD PTR [ecx-0x5b],cs
  40abcb:	mov    bh,0x22
  40abcd:	mov    dh,0x25
  40abcf:	jl     0x40aba0
  40abd1:	(bad)  
  40abd2:	sti    
  40abd3:	popf   
  40abd4:	imul   eax,DWORD PTR [ebx+eiz*1],0xdef9fb89
  40abdb:	mov    esp,0x7ea4f1ec
  40abe0:	pusha  
  40abe1:	daa    
  40abe2:	mov    ds:0xe634fdbd,al
  40abe7:	sbb    esi,ecx
  40abe9:	push   cs
  40abea:	jge    0x40ac18
  40abec:	call   edx
  40abee:	xchg   ecx,eax
  40abef:	imul   edi,DWORD PTR [edx+esi*4-0x600588f0],0x8ab8d246
  40abfa:	loopne 0x40abb5
  40abfc:	push   ds
  40abfd:	fsubr  st(5),st
  40abff:	cmp    DWORD PTR [edx+0x66],esp
  40ac02:	jns    0x40ac20
  40ac04:	dec    edx
  40ac05:	jns    0x40abc0
  40ac07:	jnp    0x40abd6
  40ac09:	lods   eax,DWORD PTR ds:[esi]
  40ac0a:	fistp  DWORD PTR [eax+0x33888abc]
  40ac10:	inc    esp
  40ac11:	call   0xf9779eaa
  40ac16:	aas    
  40ac17:	inc    eax
  40ac18:	cwde   
  40ac19:	jnp    0x40ac2b
  40ac1b:	out    dx,eax
  40ac1c:	push   edx
  40ac1d:	adc    ah,BYTE PTR [esi-0x7]
  40ac20:	lods   eax,DWORD PTR ds:[esi]
  40ac21:	cmp    edx,DWORD PTR [ecx+edx*8+0x33]
  40ac25:	imul   ebp,DWORD PTR [eax-0x3],0xffffffec
  40ac29:	xor    DWORD PTR [eax+0x3d],0xffffffd4
  40ac2d:	loope  0x40ac27
  40ac2f:	out    dx,eax
  40ac30:	pop    ss
  40ac31:	ins    BYTE PTR es:[edi],dx
  40ac32:	jne    0x40ac2b
  40ac34:	outs   dx,BYTE PTR ds:[esi]
  40ac35:	pop    eax
  40ac36:	data16 add bh,dh
  40ac39:	and    BYTE PTR [esp+ecx*1],bh
  40ac3c:	out    0x1b,al
  40ac3e:	push   cs
  40ac3f:	fimul  WORD PTR [ebx+0x4fb8f18c]
  40ac45:	cmp    al,0xee
  40ac47:	adc    bh,BYTE PTR [ebx]
  40ac49:	int    0xe5
  40ac4b:	lods   eax,DWORD PTR ds:[esi]
  40ac4c:	mov    edx,0xae74757d
  40ac51:	aad    0x62
  40ac53:	shl    DWORD PTR [ecx+esi*8],0x13
  40ac57:	jmp    0x9294:0x1fa0098a
  40ac5e:	adc    eax,0x5bb636d9
  40ac63:	add    BYTE PTR [ebp+0x3f74ac19],ah
  40ac69:	cdq    
  40ac6a:	xchg   ebx,eax
  40ac6b:	mov    ebp,0xea9ae235
  40ac70:	inc    edi
  40ac71:	loop   0x40ac62
  40ac73:	mov    edi,0xd1a9b88c
  40ac78:	ret    0x180e
  40ac7b:	push   ecx
  40ac7c:	sub    edx,DWORD PTR [ecx]
  40ac7e:	sar    ebx,cl
  40ac80:	fcomp  DWORD PTR ds:0xd335c9dd
  40ac86:	outs   dx,DWORD PTR ds:[esi]
  40ac87:	jl     0x40acce
  40ac89:	sbb    edx,DWORD PTR [esi-0x63]
  40ac8c:	xlat   BYTE PTR ds:[ebx]
  40ac8d:	ret    0xa475
  40ac90:	push   es
  40ac91:	jb     0x40ac84
  40ac93:	mov    ch,0x6f
  40ac95:	add    BYTE PTR [ecx-0x4a1b19dc],bh
  40ac9b:	ss mov edx,0x26afe669
  40aca1:	ins    BYTE PTR es:[edi],dx
  40aca2:	lods   al,BYTE PTR ds:[esi]
  40aca3:	test   bl,dl
  40aca5:	jmp    0x79f78248
  40acaa:	sbb    edx,DWORD PTR [esi-0x43b0899e]
  40acb0:	xchg   BYTE PTR [esi+0x3e],ch
  40acb3:	xchg   esp,eax
  40acb4:	sbb    eax,0xc558ad93
  40acb9:	popf   
  40acba:	ins    DWORD PTR es:[edi],dx
  40acbb:	(bad)  
  40acbc:	xor    al,0xea
  40acbe:	in     al,dx
  40acbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc0:	sub    cl,BYTE PTR [eax+0x51]
  40acc3:	cmp    dl,BYTE PTR [eax]
  40acc5:	sbb    ah,BYTE PTR [edx]
  40acc7:	ret    0x4272
  40acca:	ror    DWORD PTR [esi-0x4],0x21
  40acce:	push   esi
  40accf:	push   esi
  40acd0:	cs popf 
  40acd2:	jg     0x40aca5
  40acd4:	pop    ecx
  40acd5:	fistp  DWORD PTR [esi+0xb347a10]
  40acdb:	mov    edi,0x9fce5289
  40ace0:	hlt    
  40ace1:	in     eax,dx
  40ace2:	clc    
  40ace3:	dec    edi
  40ace4:	mov    ds:0x7a069cb3,eax
  40ace9:	push   ebx
  40acea:	jae    0x40ace4
  40acec:	loope  0x40ad49
  40acee:	dec    esp
  40acef:	mov    cl,0x91
  40acf1:	into   
  40acf2:	xor    al,0x1
  40acf4:	test   al,0xd
  40acf6:	je     0x40ad10
  40acf8:	fadd   DWORD PTR es:0xce7a3446
  40acff:	call   0xd3cd:0xc6b88e64
  40ad06:	popf   
  40ad07:	aaa    
  40ad08:	jmp    0x40ad48
  40ad0a:	sbb    al,0x3
  40ad0c:	mov    ds:0x2a7d33d6,eax
  40ad11:	(bad)  
  40ad12:	enter  0xa580,0x8a
  40ad16:	push   ecx
  40ad17:	xlat   BYTE PTR ds:[ebx]
  40ad18:	add    DWORD PTR [ecx+ecx*2-0x88ba5df],eax
  40ad1f:	adc    eax,0x5e8c0640
  40ad24:	sub    BYTE PTR [esp+edi*4],ch
  40ad27:	aam    0x44
  40ad29:	int    0x46
  40ad2b:	and    ecx,ecx
  40ad2d:	dec    ebp
  40ad2e:	inc    ebp
  40ad2f:	and    esi,esi
  40ad31:	cmp    eax,0x7d7b41ae
  40ad36:	pusha  
  40ad37:	mov    ds:0x3a28f19,eax
  40ad3c:	adc    ah,dl
  40ad3e:	je     0x40ad1a
  40ad40:	out    dx,al
  40ad41:	into   
  40ad42:	mov    esp,0x21c9f5c1
  40ad47:	mov    bl,BYTE PTR cs:[ebp+0x34]
  40ad4b:	adc    al,0xa1
  40ad4d:	jge    0x40ad19
  40ad4f:	jne    0x40ad31
  40ad51:	int3   
  40ad52:	adc    edx,edx
  40ad54:	push   ds
  40ad55:	pop    ebp
  40ad56:	sbb    DWORD PTR [ebx],ecx
  40ad58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad59:	jp     0x40ad3c
  40ad5b:	and    BYTE PTR [edi+0x49],bl
  40ad5e:	(bad)  
  40ad5f:	adc    eax,0xa6df502d
  40ad64:	sar    bh,cl
  40ad66:	mov    eax,0x3e92d0f7
  40ad6b:	pop    esi
  40ad6c:	jmp    0x984ca774
  40ad71:	jne    0x40ad95
  40ad73:	or     DWORD PTR [esi+0x44],0x4b136b46
  40ad7a:	mov    ch,0x23
  40ad7c:	xchg   DWORD PTR [edx+eax*1],ebp
  40ad7f:	call   0x8f86:0x2278a3c
  40ad86:	xlat   BYTE PTR ds:[ebx]
  40ad87:	mov    ds:0x4240d7e3,al
  40ad8c:	adc    cl,BYTE PTR [ecx-0x3d9dbcef]
  40ad92:	xor    DWORD PTR [ebp-0x66],0x1e
  40ad96:	dec    ebx
  40ad97:	push   ecx
  40ad98:	cmp    al,0xb3
  40ad9a:	mov    dl,0x17
  40ad9c:	in     al,0xc7
  40ad9e:	mov    esp,0x8cc63bb0
  40ada3:	cwde   
  40ada4:	jmp    0xb92a67b3
  40ada9:	sar    DWORD PTR [ebp-0x6915c89d],0x4a
  40adb0:	mov    ds,edi
  40adb2:	cmp    eax,0xde44f530
  40adb7:	dec    edx
  40adb8:	les    eax,FWORD PTR [ebp-0x694ffb34]
  40adbe:	pop    ecx
  40adbf:	or     BYTE PTR [esi+ebx*2+0x18dff4c],dl
  40adc6:	xor    eax,0xe3f7c3aa
  40adcb:	or     eax,0x14f0d90a
  40add0:	cwde   
  40add1:	psrlq  mm1,QWORD PTR [ebp+0x5c29f7f1]
  40add8:	xchg   ecx,eax
  40add9:	jb     0x40ad95
  40addb:	mov    bl,0xa8
  40addd:	mov    al,ds:0x309d5783
  40ade2:	mov    esi,0xc95cab35
  40ade7:	mov    bl,0x10
  40ade9:	in     al,dx
  40adea:	out    dx,eax
  40adeb:	retf   0x39e5
  40adee:	adc    eax,0xc0490246
  40adf3:	in     al,dx
  40adf4:	push   ss
  40adf5:	mov    bh,0xe4
  40adf7:	pop    edi
  40adf8:	inc    esp
  40adf9:	out    0x67,al
  40adfb:	pop    edx
  40adfc:	fsub   DWORD PTR [ecx-0x67c8d818]
  40ae02:	cdq    
  40ae03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae04:	repnz pop esi
  40ae06:	mov    cl,0x50
  40ae08:	je     0x40ae3e
  40ae0a:	jo     0x40ae15
  40ae0c:	and    DWORD PTR [edi+eiz*1-0x2fb893c3],edx
  40ae13:	stos   DWORD PTR es:[edi],eax
  40ae14:	clc    
  40ae15:	mov    bh,0xa4
  40ae17:	in     eax,dx
  40ae18:	scas   eax,DWORD PTR es:[edi]
  40ae19:	and    edi,esi
  40ae1b:	repz mov fs,WORD PTR [ecx-0xe418271]
  40ae22:	fcmovbe st,st(5)
  40ae24:	test   BYTE PTR [edx-0x348fa65],bl
  40ae2a:	dec    ecx
  40ae2b:	test   DWORD PTR [edx-0x3cf03d48],esp
  40ae31:	inc    edi
  40ae32:	in     al,dx
  40ae33:	mov    bh,0x1c
  40ae35:	mov    WORD PTR [ebp+0x7cabd243],?
  40ae3b:	add    ecx,0x59
  40ae3e:	add    al,0xe6
  40ae40:	mov    ecx,0xc853113e
  40ae45:	mov    ds:0xb4db18be,al
  40ae4a:	pop    edx
  40ae4b:	push   es
  40ae4c:	add    eax,0xcf38c172
  40ae51:	jp     0x40add3
  40ae53:	adc    ebp,DWORD PTR [ecx-0x42]
  40ae56:	add    bl,BYTE PTR [ebx]
  40ae58:	pop    edx
  40ae59:	(bad)  
  40ae5a:	(bad)  
  40ae5b:	xor    dh,bl
  40ae5d:	sahf   
  40ae5e:	dec    esi
  40ae5f:	fs leave 
  40ae61:	aaa    
  40ae62:	mov    edx,0xb0fd24de
  40ae67:	data16 mov cl,bh
  40ae6a:	into   
  40ae6b:	aas    
  40ae6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae6e:	mov    bh,0xe3
  40ae70:	cwde   
  40ae71:	call   0x487a:0x31129b76
  40ae78:	jecxz  0x40aec1
  40ae7a:	test   eax,0xca43a9a5
  40ae7f:	pop    ds
  40ae80:	enter  0x2507,0xdc
  40ae84:	mov    ebx,0x4d2bb86d
  40ae89:	in     eax,dx
  40ae8a:	pop    es
  40ae8b:	(bad)  
  40ae8c:	cld    
  40ae8d:	sbb    edi,ecx
  40ae8f:	add    BYTE PTR [eax],0xd7
  40ae92:	pop    edx
  40ae93:	inc    eax
  40ae94:	sar    DWORD PTR [ecx+0x20],cl
  40ae97:	or     edx,DWORD PTR [ebp-0x5525df09]
  40ae9d:	or     dl,dh
  40ae9f:	cmp    al,0x8e
  40aea1:	es pop esp
  40aea3:	cdq    
  40aea4:	sub    DWORD PTR cs:[edi-0x10],ebp
  40aea8:	xchg   esp,eax
  40aea9:	mov    gs,WORD PTR [ebp-0x78f053e1]
  40aeaf:	push   esi
  40aeb0:	inc    edx
  40aeb1:	sbb    eax,0xfb5cf4a2
  40aeb6:	xor    DWORD PTR [ebp+0x31],0x73a00620
  40aebd:	and    DWORD PTR ds:0xe62c9e2b,ecx
  40aec3:	mov    edi,0x7bcb5f86
  40aec8:	mov    BYTE PTR [edx],bh
  40aeca:	mov    eax,ds:0x5319a692
  40aecf:	push   ds
  40aed0:	scas   al,BYTE PTR es:[edi]
  40aed1:	lock adc DWORD PTR [ecx+0x63],edx
  40aed5:	fnsave [ecx-0x6d1914a7]
  40aedb:	scas   eax,DWORD PTR es:[edi]
  40aedc:	push   esi
  40aedd:	cli    
  40aede:	shl    BYTE PTR [edx-0x35],cl
  40aee1:	xor    al,0x54
  40aee3:	add    edx,ebp
  40aee5:	xor    eax,0x43b153da
  40aeea:	mov    eax,0xa6630bbe
  40aeef:	retf   0xabe7
  40aef2:	inc    esp
  40aef3:	clc    
  40aef4:	pop    ebx
  40aef5:	clc    
  40aef6:	mov    ecx,0x3a1ac29
  40aefb:	push   cs
  40aefc:	(bad)  
  40aefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aefe:	enter  0xb638,0x46
  40af02:	xchg   edi,eax
  40af03:	stos   DWORD PTR es:[edi],eax
  40af04:	sbb    DWORD PTR ds:0xaec4a79a,ecx
  40af0a:	sbb    esi,DWORD PTR [edx]
  40af0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af0d:	addr16 jno 0xf4c34b5e
  40af14:	push   ebx
  40af15:	stos   BYTE PTR es:[edi],al
  40af16:	iret   
  40af17:	iret   
  40af18:	cmp    al,BYTE PTR [edi]
  40af1a:	mov    ah,0x5d
  40af1c:	push   ecx
  40af1d:	mov    esi,0x3f9294d8
  40af22:	int    0x82
  40af24:	cmp    esi,DWORD PTR [ebp+0x53c93ab2]
  40af2a:	xchg   esi,eax
  40af2b:	jl     0x40af3b
  40af2d:	push   0xffffff9d
  40af2f:	ss sub bl,0x73
  40af33:	pop    es
  40af34:	mov    esp,0x1e0a6467
  40af39:	or     eax,0xcd917357
  40af3e:	stc    
  40af3f:	inc    esp
  40af40:	loopne 0x40af11
  40af42:	arpl   WORD PTR [ebx-0x13748f76],si
  40af48:	stos   DWORD PTR es:[edi],eax
  40af49:	sbb    bh,BYTE PTR [ebp+0x75]
  40af4c:	or     eax,0xfb4e3e85
  40af51:	jl     0x40af79
  40af53:	cld    
  40af54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af55:	sbb    bh,BYTE PTR [ebx-0x46]
  40af58:	sti    
  40af59:	lock sbb eax,0x6e88fbb2
  40af5f:	inc    edx
  40af60:	ss das 
  40af62:	fs out 0x23,eax
  40af65:	xchg   esi,eax
  40af66:	add    al,0xd5
  40af68:	rcr    DWORD PTR [ebp-0x20d2c851],cl
  40af6e:	int3   
  40af6f:	sub    BYTE PTR [edi+edx*1-0x47c45a9c],bl
  40af76:	adc    eax,0xa04f5ad1
  40af7b:	xor    DWORD PTR fs:[ebx+0x2ef74765],esi
  40af82:	popf   
  40af83:	pop    edi
  40af84:	cmp    edx,DWORD PTR [esi+0x7f6e33ce]
  40af8a:	sbb    ch,BYTE PTR [ecx+0x684b97cc]
  40af90:	jl     0x40af48
  40af92:	xor    BYTE PTR [edx+0x4829b0e9],dl
  40af98:	aas    
  40af99:	imul   eax,DWORD PTR ss:[esi+0x67779268],0x7ba795f
  40afa4:	popf   
  40afa5:	rcr    bh,0x8c
  40afa8:	and    DWORD PTR [edx+0x5ca4f71d],edi
  40afae:	and    al,0x1c
  40afb0:	adc    eax,0x4c10da33
  40afb5:	shl    BYTE PTR [edi],1
  40afb7:	jno    0x40af74
  40afb9:	xchg   ebp,eax
  40afba:	sub    al,0x8a
  40afbc:	lods   al,BYTE PTR ds:[esi]
  40afbd:	inc    ebx
  40afbe:	and    eax,0x9b0f7900
  40afc3:	call   0xa01aa96f
  40afc8:	mov    ebx,0x807e00bf
  40afcd:	pop    ebp
  40afce:	sub    DWORD PTR [esi-0x43],eax
  40afd1:	sti    
  40afd2:	sti    
  40afd3:	or     ecx,ebp
  40afd5:	pop    esi
  40afd6:	xchg   ebp,eax
  40afd7:	test   al,0xf2
  40afd9:	retf   
  40afda:	fs pop ebp
  40afdc:	mov    di,0xd73
  40afe0:	rol    DWORD PTR [esi+0x14],cl
  40afe3:	fst    QWORD PTR [edx-0x73]
  40afe6:	(bad)  
  40afe7:	xchg   ebp,eax
  40afe8:	sar    esp,1
  40afea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afeb:	ja     0x40af8b
  40afed:	gs pushf 
  40afef:	xchg   ebx,eax
  40aff0:	ins    BYTE PTR es:[edi],dx
  40aff1:	mov    ds:0x3c1b3c40,eax
  40aff6:	js     0x40afea
  40aff8:	inc    eax
  40aff9:	or     DWORD PTR [eax],0x52
  40affc:	ret    0x18e0
  40afff:	fiadd  DWORD PTR [ecx+0x13a58c78]
  40b005:	ins    DWORD PTR es:[edi],dx
  40b006:	shl    BYTE PTR [ebp-0x664d27a5],0x55
  40b00d:	and    al,0xfd
  40b00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b010:	int3   
  40b011:	and    dl,al
  40b013:	ss pop ds
  40b015:	sbb    bh,dh
  40b017:	ins    BYTE PTR es:[edi],dx
  40b018:	xchg   BYTE PTR [esi-0x39b366af],al
  40b01e:	jbe    0x40b071
  40b020:	outs   dx,BYTE PTR ds:[esi]
  40b021:	in     al,0xdd
  40b023:	rcl    DWORD PTR [eax],0x39
  40b026:	popf   
  40b027:	xchg   ebx,eax
  40b028:	(bad)  
  40b029:	sub    BYTE PTR [esi-0x19],al
  40b02c:	adc    bl,BYTE PTR [ebp+edx*8+0x65]
  40b030:	fcomp  QWORD PTR [edi-0x4a]
  40b033:	xlat   BYTE PTR ds:[ebx]
  40b034:	push   ss
  40b035:	jb     0x40b004
  40b037:	cdq    
  40b038:	sbb    dh,BYTE PTR [edi+0x37]
  40b03b:	pop    ecx
  40b03c:	es adc al,0x76
  40b03f:	jle    0x40b071
  40b041:	xor    DWORD PTR [edx+0x5c],ebx
  40b044:	or     BYTE PTR [ecx-0x4a],0xdc
  40b048:	je     0x40b061
  40b04a:	xchg   esp,eax
  40b04b:	push   ebx
  40b04c:	popf   
  40b04d:	pop    esp
  40b04e:	push   eax
  40b04f:	aas    
  40b050:	not    BYTE PTR [edi]
  40b052:	push   ebx
  40b053:	and    eax,DWORD PTR [ecx]
  40b055:	cmp    al,BYTE PTR [ebx]
  40b057:	xor    ch,BYTE PTR [ecx+0x60f6521b]
  40b05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b05e:	fsubr  QWORD PTR [edi-0x1f]
  40b061:	test   dl,bl
  40b063:	call   0x6ae2:0xcc483f15
  40b06a:	je     0x40b06c
  40b06c:	mov    bl,0x28
  40b06e:	inc    ebx
  40b06f:	jge    0x40b090
  40b071:	push   ebx
  40b072:	cmp    DWORD PTR [ebp+0x12e5a305],ebx
  40b078:	inc    eax
  40b079:	mov    edi,0x5a2aea37
  40b07e:	shl    esi,1
  40b080:	pavgb  mm2,QWORD PTR [ebp-0x667ffc7e]
  40b087:	push   ss
  40b088:	pop    esp
  40b089:	retf   0xe949
  40b08c:	dec    ecx
  40b08d:	add    BYTE PTR [ebx],dh
  40b08f:	jle    0x40b0ab
  40b091:	ins    DWORD PTR es:[edi],dx
  40b092:	test   DWORD PTR [ebx+0x4baf1298],ebx
  40b098:	sbb    BYTE PTR [esp+ebx*8+0x76],cl
  40b09c:	push   ds
  40b09d:	push   ss
  40b09e:	dec    DWORD PTR [esi-0x8ce2390]
  40b0a4:	(bad)  
  40b0a5:	mov    ecx,0x1db2d252
  40b0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ab:	outs   dx,BYTE PTR ds:[esi]
  40b0ac:	lods   eax,DWORD PTR ds:[esi]
  40b0ad:	fucom  st(7)
  40b0af:	mov    ecx,0xae29d1be
  40b0b4:	js     0x40b040
  40b0b6:	and    al,0x6f
  40b0b8:	add    BYTE PTR [edx+0x764222c0],0x8f
  40b0bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c0:	add    eax,0x9aeb5aec
  40b0c5:	mov    ebp,0x63792c26
  40b0ca:	xor    al,0xab
  40b0cc:	xor    DWORD PTR [eax],ebp
  40b0ce:	fiadd  WORD PTR [ecx-0x17]
  40b0d1:	outs   dx,BYTE PTR ds:[esi]
  40b0d2:	push   edi
  40b0d3:	out    dx,al
  40b0d4:	pop    ebx
  40b0d5:	mov    ds,WORD PTR [ebp+0x4a]
  40b0d8:	and    dh,BYTE PTR [eax-0x59]
  40b0db:	stos   BYTE PTR es:[edi],al
  40b0dc:	repnz inc edi
  40b0de:	add    DWORD PTR [eax+0x6adb42c8],esi
  40b0e4:	sub    ebx,esp
  40b0e6:	jnp    0x40b11c
  40b0e8:	sbb    ebp,DWORD PTR [edx-0x1b460e22]
  40b0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ef:	sub    al,BYTE PTR [eax-0x3c6839a]
  40b0f5:	jno    0x40b0e7
  40b0f7:	daa    
  40b0f8:	inc    ecx
  40b0f9:	jo     0x40b123
  40b0fb:	mov    dl,0x7b
  40b0fd:	cmc    
  40b0fe:	fs ja  0x40b0fa
  40b101:	adc    al,ah
  40b103:	inc    esp
  40b104:	fisubr DWORD PTR [ecx]
  40b106:	dec    edi
  40b107:	adc    al,0xce
  40b109:	add    BYTE PTR [eax],dh
  40b10b:	ins    BYTE PTR es:[edi],dx
  40b10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b10d:	cwde   
  40b10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b10f:	sbb    cl,BYTE PTR [eax+0x73975108]
  40b115:	xor    esi,DWORD PTR [ecx]
  40b117:	int    0x5
  40b119:	shr    DWORD PTR [ebx+0x3a],cl
  40b11c:	outs   dx,DWORD PTR ds:[esi]
  40b11d:	mov    DWORD PTR [ebp-0x7cab1b58],edx
  40b123:	inc    edi
  40b124:	stos   DWORD PTR es:[edi],eax
  40b125:	mov    ah,0x20
  40b127:	push   ds
  40b128:	mov    edx,0x3179d2e4
  40b12d:	jbe    0x40b166
  40b12f:	pop    eax
  40b130:	or     ch,ah
  40b132:	jge    0x40b15f
  40b134:	xor    bh,BYTE PTR [edi]
  40b136:	scas   eax,DWORD PTR es:[edi]
  40b137:	xor    bh,dh
  40b139:	idiv   DWORD PTR [ecx]
  40b13b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b13d:	fcomi  st,st(5)
  40b13f:	out    0x87,al
  40b141:	pop    ds
  40b142:	add    edi,DWORD PTR cs:[eax]
  40b145:	aas    
  40b146:	(bad)  
  40b147:	mov    al,0x9e
  40b149:	adc    eax,0xfb6a887f
  40b14e:	or     al,0x7f
  40b150:	arpl   WORD PTR [edx],si
  40b152:	out    dx,al
  40b153:	dec    edx
  40b154:	int3   
  40b155:	repz add esi,edi
  40b158:	xchg   ebx,eax
  40b159:	pop    esp
  40b15a:	imul   ebx,DWORD PTR [ecx-0x4d],0xffffffaa
  40b15e:	xor    al,0x6a
  40b160:	lods   eax,DWORD PTR es:[esi]
  40b162:	mov    edx,0x895f4660
  40b167:	arpl   WORD PTR [ecx],dx
  40b169:	aaa    
  40b16a:	sub    BYTE PTR [edx],dl
  40b16c:	xchg   ebx,eax
  40b16d:	rcr    BYTE PTR [esi+0x1123ffe],1
  40b173:	in     eax,0xf2
  40b175:	push   esp
  40b176:	xchg   esi,eax
  40b177:	js     0x40b104
  40b179:	push   edi
  40b17a:	das    
  40b17b:	mov    eax,ebp
  40b17d:	pop    edx
  40b17e:	jl     0x40b13c
  40b180:	and    al,0xc5
  40b182:	mov    esi,0x615c705a
  40b187:	shr    ebp,1
  40b189:	lock idiv DWORD PTR [eax]
  40b18c:	add    BYTE PTR ss:[ebp-0xd],dh
  40b190:	loope  0x40b171
  40b192:	push   0xffffffd8
  40b194:	mov    esp,0xee427d06
  40b199:	cwde   
  40b19a:	pop    es
  40b19b:	mov    ds:0xb034c7d5,al
  40b1a0:	fsubr  DWORD PTR [ebp+0x784b3469]
  40b1a6:	cmp    ebx,DWORD PTR [ebp-0x58]
  40b1a9:	xor    eax,DWORD PTR [edx-0x32b28eaf]
  40b1af:	icebp  
  40b1b0:	leave  
  40b1b1:	adc    ebp,DWORD PTR [ebx+ebp*1+0x49d70880]
  40b1b8:	cmp    ebp,DWORD PTR [edi+edi*2-0x4c]
  40b1bc:	(bad)  
  40b1bd:	cmp    al,0xba
  40b1bf:	mov    dh,0x2f
  40b1c1:	repz push eax
  40b1c3:	jge    0x40b1f1
  40b1c5:	sub    BYTE PTR [ebp+0x23],0x37
  40b1c9:	inc    ebx
  40b1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1cb:	fsub   st,st(0)
  40b1cd:	pop    ebx
  40b1ce:	jmp    0x133d:0x7655f01e
  40b1d5:	aam    0xa
  40b1d7:	push   edx
  40b1d8:	and    BYTE PTR [esi-0xd],dl
  40b1db:	lea    ecx,[edi]
  40b1dd:	loop   0x40b24e
  40b1df:	repz mov WORD PTR ds:0xaa7e0df0,cs
  40b1e6:	aam    0xb9
  40b1e8:	lock mov ch,0x1c
  40b1eb:	rol    BYTE PTR [edx+0xcf3c876],1
  40b1f1:	dec    esp
  40b1f2:	pop    ss
  40b1f3:	push   cs
  40b1f4:	mov    dl,0xd3
  40b1f6:	and    DWORD PTR [bx],edi
  40b1f9:	mov    edi,0x813f3b5c
  40b1fe:	mov    ds:0xad5ed9f4,eax
  40b203:	(bad)
  40b207:	mov    ch,0x8b
  40b209:	and    dh,BYTE PTR [edi+0x485fb9ab]
  40b20f:	add    eax,DWORD PTR [edi+0xb]
  40b212:	adc    DWORD PTR [edx],edi
  40b214:	adc    al,0x85
  40b216:	pop    edi
  40b217:	pop    ss
  40b218:	adc    BYTE PTR [edi-0x59],al
  40b21b:	xchg   edi,eax
  40b21c:	mov    BYTE PTR [eax-0x34ac6c85],al
  40b222:	(bad)  [edi]
  40b224:	xor    ch,ah
  40b226:	pop    esp
  40b227:	sub    eax,0x8372f1c
  40b22c:	loop   0x40b27e
  40b22e:	xor    al,0x36
  40b230:	and    BYTE PTR [edi],cl
  40b232:	into   
  40b233:	or     bl,BYTE PTR [ecx]
  40b235:	call   0xb088d0b7
  40b23a:	mov    ds:0xae1d2594,al
  40b23f:	arpl   WORD PTR [ebp-0x15],sp
  40b242:	out    0x61,eax
  40b244:	mov    DWORD PTR [ebx-0x2345cd6c],0x3e1823b
  40b24e:	dec    esp
  40b24f:	jnp    0x40b1f3
  40b251:	fldcw  WORD PTR [esi]
  40b253:	mov    ecx,0x7e7cf316
  40b258:	pop    edx
  40b259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b25a:	cmp    dl,BYTE PTR gs:[edi-0x5a]
  40b25e:	inc    ebp
  40b25f:	push   esi
  40b260:	cmp    al,0xb0
  40b262:	pushf  
  40b263:	xchg   ebp,eax
  40b264:	xchg   esi,eax
  40b265:	lods   al,BYTE PTR ds:[esi]
  40b266:	jmp    0x38b7311b
  40b26b:	push   ebx
  40b26c:	add    DWORD PTR [eax-0x43],esp
  40b26f:	test   DWORD PTR [edi-0x3b8fe62d],edi
  40b275:	and    DWORD PTR [ebx+0x66],edx
  40b278:	mov    ebp,0x7aade837
  40b27d:	or     al,0xe8
  40b27f:	mov    dl,0xf8
  40b281:	adc    esp,DWORD PTR [esi]
  40b283:	loope  0x40b2aa
  40b285:	int3   
  40b286:	push   ecx
  40b287:	aas    
  40b288:	inc    esi
  40b289:	scas   eax,DWORD PTR es:[edi]
  40b28a:	jl     0x40b2d9
  40b28c:	call   0xee59:0x62bd6e9a
  40b293:	xor    BYTE PTR [esi+0x1c],0xa5
  40b297:	add    edi,esp
  40b299:	inc    esi
  40b29a:	sbb    BYTE PTR [esi-0x295f8bf],bh
  40b2a0:	mov    eax,ds:0xe82b5cc
  40b2a5:	sbb    dl,BYTE PTR [ebx-0x41]
  40b2a8:	iret   
  40b2a9:	xchg   si,ax
  40b2ab:	cli    
  40b2ac:	(bad)  
  40b2ae:	popf   
  40b2af:	test   al,0xaf
  40b2b1:	jg     0x40b26e
  40b2b3:	dec    eax
  40b2b4:	inc    ecx
  40b2b5:	call   0x92bc:0x8bdab223
  40b2bc:	sbb    al,0xde
  40b2be:	push   ebx
  40b2bf:	test   ch,bl
  40b2c1:	lods   eax,DWORD PTR ds:[esi]
  40b2c2:	idiv   DWORD PTR [ebp+edx*4+0xf5e5471]
  40b2c9:	imul   edx,DWORD PTR [ebx],0x46
  40b2cc:	xchg   edi,eax
  40b2cd:	call   0x6dd6:0xc3896a38
  40b2d4:	mov    eax,ds:0x142ec243
  40b2d9:	xor    eax,0xf7f484b3
  40b2de:	mov    bl,0x4f
  40b2e0:	out    dx,eax
  40b2e1:	outs   dx,BYTE PTR ds:[esi]
  40b2e2:	pusha  
  40b2e3:	int    0xd2
  40b2e5:	ins    DWORD PTR es:[edi],dx
  40b2e6:	int3   
  40b2e7:	xchg   ebp,eax
  40b2e8:	sub    BYTE PTR [edx-0x10b17be4],al
  40b2ee:	jp     0x40b2aa
  40b2f0:	out    dx,al
  40b2f1:	or     edx,DWORD PTR [edx+edx*1+0x37d5ecc9]
  40b2f8:	cwde   
  40b2f9:	test   DWORD PTR [edx],ebx
  40b2fb:	sar    DWORD PTR [esi-0x49],0xa9
  40b2ff:	fstp   DWORD PTR [eax+0x60276955]
  40b305:	pop    ebx
  40b306:	or     bl,BYTE PTR [edi]
  40b308:	mov    edi,0xa3e9e656
  40b30d:	enter  0xadb3,0x5e
  40b311:	push   edi
  40b312:	adc    esi,DWORD PTR [esp+eax*2-0x4bfebfa9]
  40b319:	mov    ebx,0xefb73812
  40b31e:	xchg   ebx,eax
  40b31f:	mov    edx,0x3c0d5d2b
  40b324:	test   DWORD PTR [ecx],eax
  40b326:	je     0x40b38c
  40b328:	call   0xa5f7:0x3560665e
  40b32f:	ja     0x40b396
  40b331:	fld    QWORD PTR [edi+edi*8]
  40b334:	popf   
  40b335:	xor    DWORD PTR [ebx-0x23],ecx
  40b338:	mov    eax,0xad7df8b
  40b33d:	jnp    0x40b398
  40b33f:	mov    ebx,0x909a87ab
  40b344:	aas    
  40b345:	loop   0x40b37b
  40b347:	test   BYTE PTR [edi-0x5205fca3],cl
  40b34d:	pop    edi
  40b34e:	push   edi
  40b34f:	sub    bl,BYTE PTR [edx]
  40b351:	dec    eax
  40b352:	shl    BYTE PTR [edx],cl
  40b354:	outs   dx,BYTE PTR ds:[esi]
  40b355:	jns    0x40b3b6
  40b357:	adc    BYTE PTR [esi-0x2b],cl
  40b35a:	sbb    al,0x36
  40b35c:	mov    bl,0x1f
  40b35e:	retf   0x9d62
  40b361:	dec    ebp
  40b362:	add    BYTE PTR [edi],dl
  40b364:	mov    bl,0x66
  40b366:	jo     0x40b363
  40b368:	or     eax,0x2ec21ac5
  40b36d:	out    0xd3,eax
  40b36f:	sbb    dl,BYTE PTR [edi+ebx*1-0x355f7a37]
  40b376:	out    0xed,al
  40b378:	mov    al,ds:0x60184a8c
  40b37d:	add    al,0x66
  40b37f:	xchg   BYTE PTR [ebx],bh
  40b381:	and    DWORD PTR [esi],edx
  40b383:	mov    esp,0x513f8b92
  40b388:	inc    eax
  40b389:	push   ecx
  40b38a:	xchg   BYTE PTR [esi-0x7b],cl
  40b38d:	sbb    BYTE PTR ds:0x5c2a3a83,cl
  40b393:	add    edx,DWORD PTR [ebx+0x46]
  40b396:	jle    0x40b39c
  40b398:	shr    BYTE PTR [edi-0x47352497],cl
  40b39e:	mov    ebx,0xd529c68e
  40b3a3:	fisttp QWORD PTR [ecx]
  40b3a5:	sahf   
  40b3a6:	aam    0xfc
  40b3a8:	dec    eax
  40b3a9:	(bad)  
  40b3aa:	push   ds
  40b3ab:	mov    edx,0x8a65d858
  40b3b0:	inc    esp
  40b3b1:	sub    BYTE PTR [ebx+ebx*1+0x4cf15f4d],bh
  40b3b8:	inc    ebx
  40b3b9:	sbb    eax,eax
  40b3bb:	out    dx,al
  40b3bc:	dec    eax
  40b3bd:	bound  edx,QWORD PTR [edi]
  40b3bf:	clc    
  40b3c0:	and    eax,0x97712236
  40b3c5:	jecxz  0x40b3ab
  40b3c7:	xor    dl,cl
  40b3c9:	mov    ?,WORD PTR [edi-0x56ae2698]
  40b3cf:	scas   al,BYTE PTR es:[edi]
  40b3d0:	adc    bl,dl
  40b3d2:	xor    edx,ebp
  40b3d4:	sbb    eax,0x1bf7ee6
  40b3d9:	inc    ecx
  40b3da:	mov    edi,0xd9922d03
  40b3df:	or     DWORD PTR [edx],ecx
  40b3e1:	loopne 0x40b3fb
  40b3e3:	aam    0x3b
  40b3e5:	or     al,BYTE PTR [eax+0x5111ebe8]
  40b3eb:	rep outs dx,BYTE PTR ds:[esi]
  40b3ed:	ret    
  40b3ee:	pushaw 
  40b3f0:	push   ecx
  40b3f1:	sti    
  40b3f2:	dec    esi
  40b3f3:	sti    
  40b3f4:	mov    WORD PTR [edx+0xa],gs
  40b3f7:	pop    ebp
  40b3f8:	inc    esp
  40b3f9:	jle    0x40b3ba
  40b3fb:	pop    esi
  40b3fc:	xchg   edx,eax
  40b3fd:	dec    ebx
  40b3fe:	fld    st(6)
  40b400:	ins    DWORD PTR es:[edi],dx
  40b401:	dec    cl
  40b403:	daa    
  40b404:	cmc    
  40b405:	icebp  
  40b406:	aaa    
  40b407:	leave  
  40b408:	les    ebx,FWORD PTR [ebp-0x42]
  40b40b:	je     0x40b38e
  40b40d:	pop    esp
  40b40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40f:	test   al,0xa0
  40b411:	outs   dx,DWORD PTR ds:[esi]
  40b412:	sahf   
  40b413:	xor    BYTE PTR ds:0xeb09d777,ah
  40b419:	repnz and eax,0xc017e679
  40b41f:	adc    bh,0x21
  40b422:	in     al,dx
  40b423:	fisttp QWORD PTR [eax+ebp*2+0x1f]
  40b427:	in     eax,dx
  40b428:	mov    ah,cl
  40b42a:	pop    ebx
  40b42b:	aaa    
  40b42c:	repnz rcr DWORD PTR [esi],cl
  40b42f:	dec    edi
  40b430:	bound  ebp,QWORD PTR [edi]
  40b432:	jbe    0x40b3d3
  40b434:	dec    ecx
  40b435:	cmp    al,BYTE PTR [esp+ebx*2+0x4de2c114]
  40b43c:	mov    al,ds:0x414414aa
  40b441:	(bad)  
  40b442:	cmc    
  40b443:	out    dx,eax
  40b444:	xlat   BYTE PTR ds:[ebx]
  40b445:	or     dl,BYTE PTR [edx+ecx*2]
  40b448:	ret    
  40b449:	pop    eax
  40b44a:	mov    ebp,0xb55aedeb
  40b44f:	push   esp
  40b450:	icebp  
  40b451:	repnz mov BYTE PTR [edx+eiz*1+0x759597f6],ch
  40b459:	(bad)  [ebx+0x31f19b0f]
  40b45f:	mov    DWORD PTR [ebx],eax
  40b461:	dec    edi
  40b462:	retf   
  40b463:	jns    0x40b3f8
  40b465:	std    
  40b466:	cmc    
  40b467:	and    BYTE PTR [ebp+eax*1+0x3a],ah
  40b46b:	add    eax,0x7ecbcd8c
  40b470:	data16 outs dx,BYTE PTR ds:[si]
  40b473:	and    BYTE PTR [ebp+0x41],bl
  40b476:	ins    BYTE PTR es:[edi],dx
  40b477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b478:	aaa    
  40b479:	xchg   ecx,eax
  40b47a:	iret   
  40b47b:	sbb    al,0x40
  40b47d:	pop    ebp
  40b47e:	and    al,0x2f
  40b480:	call   0xbfcd85f
  40b485:	mov    eax,0xf150c4a1
  40b48a:	cmp    dh,cl
  40b48c:	aad    0x90
  40b48e:	cdq    
  40b48f:	fs adc al,0x51
  40b493:	lock or ah,bh
  40b496:	scas   al,BYTE PTR es:[edi]
  40b497:	push   esi
  40b498:	mov    ds:0xb5ceaa7e,eax
  40b49d:	jno    0x40b4d7
  40b49f:	mov    eax,0xd28a740f
  40b4a4:	repnz add ebp,DWORD PTR [edx-0x1e4e505a]
  40b4ab:	(bad)  
  40b4ac:	js     0x40b4a8
  40b4ae:	inc    edi
  40b4af:	mov    BYTE PTR [ecx+0x23],bh
  40b4b2:	xchg   esi,eax
  40b4b3:	aaa    
  40b4b4:	dec    edi
  40b4b5:	xchg   esi,eax
  40b4b6:	or     ax,0x257d
  40b4ba:	cmp    bl,BYTE PTR [ecx+0x49fa384b]
  40b4c0:	mov    edi,0x64cdaa14
  40b4c5:	pop    eax
  40b4c6:	jle    0x40b4b7
  40b4c8:	sub    ah,dl
  40b4ca:	xor    eax,0x1a853844
  40b4cf:	jmp    0xbb5c0ec3
  40b4d4:	push   edi
  40b4d5:	sub    BYTE PTR [edi+0x42f58509],ch
  40b4db:	fstp   TBYTE PTR [ebp-0x7f495751]
  40b4e1:	in     eax,dx
  40b4e2:	mov    ah,BYTE PTR ds:0xd05c72c
  40b4e8:	mov    al,0xce
  40b4ea:	push   eax
  40b4eb:	dec    ebp
  40b4ec:	cwde   
  40b4ed:	addr16 push edi
  40b4ef:	in     eax,dx
  40b4f0:	or     BYTE PTR [eax],0xa8
  40b4f3:	in     al,dx
  40b4f4:	jns    0x40b47f
  40b4f6:	in     eax,dx
  40b4f7:	stos   DWORD PTR es:[edi],eax
  40b4f8:	into   
  40b4f9:	stos   BYTE PTR es:[edi],al
  40b4fa:	sar    DWORD PTR [ebp-0x7ee1d635],1
  40b500:	std    
  40b501:	std    
  40b502:	jecxz  0x40b49b
  40b504:	adc    ebp,DWORD PTR [edi+0x67]
  40b507:	es mov edx,0xe0bdd8ce
  40b50d:	lods   eax,DWORD PTR ds:[esi]
  40b50e:	lock push esp
  40b510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b511:	fsub   st,st(7)
  40b513:	mov    dh,0x92
  40b515:	(bad)  
  40b516:	sub    al,0xdc
  40b518:	imul   esi,edx,0xaba416ef
  40b51e:	int    0xd8
  40b520:	inc    ebx
  40b521:	jne    0x40b599
  40b523:	les    ebx,FWORD PTR [ecx+0x1fde58f4]
  40b529:	retf   
  40b52a:	dec    ecx
  40b52b:	cmp    al,0x83
  40b52d:	ins    DWORD PTR es:[edi],dx
  40b52e:	sbb    ch,bl
  40b530:	adc    BYTE PTR [ebp+ebp*2+0x46],dl
  40b534:	inc    ebp
  40b535:	ss xchg edi,eax
  40b537:	push   eax
  40b538:	mov    al,ds:0x6b60a3b8
  40b53d:	inc    esp
  40b53e:	push   0xffffffbe
  40b540:	and    BYTE PTR [ebp-0x73],dh
  40b543:	sbb    eax,0xefcf8187
  40b548:	add    ah,cl
  40b54a:	pop    edi
  40b54b:	push   ds
  40b54c:	and    cl,BYTE PTR [eax]
  40b54e:	sub    eax,0x8403056a
  40b553:	sub    ch,dh
  40b555:	cmp    BYTE PTR [eax+0x741655dd],dl
  40b55b:	cmp    al,0xcd
  40b55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b55e:	add    ebx,ebx
  40b560:	pop    ds
  40b561:	repnz retf 
  40b563:	jb     0x40b567
  40b565:	fsubrp st(3),st
  40b567:	push   ecx
  40b568:	sti    
  40b569:	mov    cl,0x97
  40b56b:	mov    bh,0x49
  40b56d:	gs shr ah,0x2d
  40b571:	mov    al,ds:0x6a0f72f7
  40b576:	or     ebx,esi
  40b578:	pop    ds
  40b579:	mov    al,ds:0x28f75629
  40b57e:	in     al,0xeb
  40b580:	adc    BYTE PTR [edx+0x48],0x7e
  40b584:	outs   dx,BYTE PTR ds:[esi]
  40b585:	jmp    0x5a79:0x1ead5847
  40b58c:	in     eax,dx
  40b58d:	cmp    eax,0x785a1508
  40b592:	pushf  
  40b593:	int    0x7c
  40b595:	rcr    BYTE PTR [eax-0x71],cl
  40b598:	dec    ecx
  40b599:	dec    ebp
  40b59a:	int    0x77
  40b59c:	ret    
  40b59d:	adc    BYTE PTR [eax+0x20],0x97
  40b5a1:	sbb    ah,BYTE PTR [esi+0x40]
  40b5a4:	xchg   al,bl
  40b5a6:	lahf   
  40b5a7:	inc    bh
  40b5a9:	push   ecx
  40b5aa:	push   ecx
  40b5ab:	pop    esp
  40b5ac:	sahf   
  40b5ad:	jnp    0x40b5a5
  40b5af:	loopne 0x40b58b
  40b5b1:	sti    
  40b5b2:	sub    al,0xdb
  40b5b4:	add    BYTE PTR [ecx],ch
  40b5b6:	sub    BYTE PTR [ecx],ah
  40b5b8:	mov    al,ds:0x25289169
  40b5bd:	jbe    0x40b5c0
  40b5bf:	jb     0x40b5eb
  40b5c1:	loop   0x40b5cc
  40b5c3:	dec    ecx
  40b5c4:	and    bh,BYTE PTR [edx-0x1d]
  40b5c7:	into   
  40b5c8:	repz scas eax,DWORD PTR es:[edi]
  40b5ca:	mov    BYTE PTR [ebp-0x34],ah
  40b5cd:	shr    DWORD PTR [edx+edx*4-0x2d],cl
  40b5d1:	or     al,0x6f
  40b5d3:	sbb    BYTE PTR ds:0x18bd622b,ah
  40b5d9:	out    dx,eax
  40b5da:	ror    eax,1
  40b5dc:	mov    dh,0x3
  40b5de:	mov    ds:0xcf8a6a4e,eax
  40b5e3:	xchg   esp,eax
  40b5e4:	sbb    al,0xe1
  40b5e6:	iret   
  40b5e7:	into   
  40b5e8:	mov    bh,0xd5
  40b5ea:	fbstp  TBYTE PTR [esp+edx*8]
  40b5ed:	aas    
  40b5ee:	lds    ebp,FWORD PTR [edi-0x2bf75580]
  40b5f4:	xchg   ebx,eax
  40b5f5:	mov    ch,0xbf
  40b5f7:	rol    DWORD PTR [edi+0x3c],cl
  40b5fa:	mov    ah,0xa9
  40b5fc:	and    DWORD PTR [edx+0x2],0xa709cbfc
  40b603:	pop    edx
  40b604:	add    eax,0xfb9cfcb6
  40b609:	mov    ecx,0xe7b9866f
  40b60e:	xor    al,0xb
  40b610:	adc    ecx,ebp
  40b612:	out    dx,eax
  40b613:	das    
  40b614:	mov    ebp,0x9b69da45
  40b619:	stos   BYTE PTR es:[edi],al
  40b61a:	test   eax,0x3e721e2a
  40b61f:	adc    ecx,DWORD PTR [eax]
  40b621:	js     0x40b5a4
  40b623:	add    ecx,esp
  40b625:	sub    ch,ah
  40b627:	xchg   esi,eax
  40b628:	in     eax,0x8f
  40b62a:	(bad)  
  40b62b:	mov    DWORD PTR [edx+0x6a],0x27e659f1
  40b632:	mov    esp,0xe8f1908d
  40b637:	pop    es
  40b638:	mov    cl,0x59
  40b63a:	sub    dh,BYTE PTR [esp+eax*1]
  40b63d:	retf   
  40b63e:	lahf   
  40b63f:	in     eax,0xb4
  40b641:	scas   al,BYTE PTR es:[edi]
  40b642:	pop    ss
  40b643:	ds mov dl,0x31
  40b646:	adc    esp,eax
  40b648:	fdivr  st(2),st
  40b64a:	retf   
  40b64b:	cmp    DWORD PTR [ebx],eax
  40b64d:	pop    ecx
  40b64e:	sahf   
  40b64f:	push   0xffffffed
  40b651:	icebp  
  40b652:	stos   DWORD PTR es:[edi],eax
  40b653:	shr    bh,cl
  40b655:	mov    WORD PTR [edi+eax*4+0x3edfb495],fs
  40b65c:	jmp    0x6f78:0xae70372a
  40b663:	loop   0x40b602
  40b665:	sbb    edx,DWORD PTR [ebp-0x55]
  40b668:	rol    BYTE PTR [eax-0x1c548843],cl
  40b66e:	and    DWORD PTR [bp+0x43],0x57f76d5a
  40b676:	cmp    bl,BYTE PTR [edx+ebx*2]
  40b679:	cmp    esp,DWORD PTR [eax-0x2376df37]
  40b67f:	daa    
  40b680:	sbb    DWORD PTR gs:[ebx+0x6ef3e32b],esp
  40b687:	push   edx
  40b688:	jecxz  0x40b680
  40b68a:	clc    
  40b68b:	inc    ebp
  40b68c:	xchg   DWORD PTR [edi+0x19d21392],esp
  40b692:	mov    eax,ds:0x97ba47ee
  40b697:	mov    ds:0xdf60282,al
  40b69c:	sbb    BYTE PTR [edx+edx*8],cl
  40b69f:	and    al,0xa0
  40b6a1:	bound  ebx,QWORD PTR [ecx+esi*2-0x5]
  40b6a5:	retf   
  40b6a6:	jb     0x40b692
  40b6a8:	out    dx,eax
  40b6a9:	fs inc eax
  40b6ac:	pop    esi
  40b6ad:	xchg   ecx,eax
  40b6ae:	stc    
  40b6af:	fisttp WORD PTR es:[ecx+ebp*2-0x22ee3176]
  40b6b7:	cdq    
  40b6b8:	lahf   
  40b6b9:	icebp  
  40b6ba:	dec    eax
  40b6bb:	push   ss
  40b6bc:	enter  0x7b60,0x7f
  40b6c0:	pop    eax
  40b6c1:	mov    ch,0x8c
  40b6c3:	rol    BYTE PTR [esi-0x47],0xb6
  40b6c7:	ret    
  40b6c8:	sub    dh,BYTE PTR [edx+0x59881b4]
  40b6ce:	jno    0x40b6f1
  40b6d0:	fadd   DWORD PTR [esi-0x73]
  40b6d3:	or     BYTE PTR [esi],dl
  40b6d5:	call   0x152eaf35
  40b6da:	outs   dx,DWORD PTR ds:[esi]
  40b6db:	adc    BYTE PTR [esi+0x13],cl
  40b6de:	fnstsw WORD PTR [edx]
  40b6e0:	jbe    0x40b6b7
  40b6e2:	dec    ebx
  40b6e3:	cmp    al,0x17
  40b6e5:	std    
  40b6e6:	inc    ecx
  40b6e7:	retf   
  40b6e8:	in     al,0xd1
  40b6ea:	mov    edi,0x565921c
  40b6ef:	xchg   bl,dl
  40b6f1:	or     eax,0x170adeb1
  40b6f6:	(bad)  
  40b6f7:	mov    eax,ds:0x9108d275
  40b6fc:	and    BYTE PTR [esi+0x68bbc715],dh
  40b702:	and    al,dh
  40b704:	inc    edx
  40b705:	add    eax,0xcc38f640
  40b70a:	push   esi
  40b70b:	and    eax,DWORD PTR [edx-0x26]
  40b70e:	sub    DWORD PTR [ecx+0x31],esi
  40b711:	mov    dl,0xc9
  40b713:	aam    0xf2
  40b715:	cmp    esi,DWORD PTR [esi+0x17ea56]
  40b71b:	add    eax,0xfb643971
  40b720:	push   ebx
  40b721:	es fs add eax,0xadbc49ed
  40b728:	xor    DWORD PTR [edx+0x503815f0],ebx
  40b72e:	pop    eax
  40b72f:	or     al,dh
  40b731:	arpl   WORD PTR [eax],bx
  40b733:	and    al,0xfc
  40b735:	push   cs
  40b736:	dec    eax
  40b737:	and    eax,0x413a5a17
  40b73c:	mov    dl,BYTE PTR [ebx]
  40b73e:	leave  
  40b73f:	scas   eax,DWORD PTR es:[edi]
  40b740:	sub    eax,0xe4ccef1b
  40b745:	(bad)  
  40b746:	test   eax,0xfe108d43
  40b74b:	(bad)  
  40b74c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b74d:	mov    cl,0xdb
  40b74f:	cli    
  40b750:	adc    BYTE PTR [esi-0xb],al
  40b753:	es pop esi
  40b755:	adc    al,0x1d
  40b757:	jno    0x40b6de
  40b759:	pop    ds
  40b75a:	es test ah,dl
  40b75d:	jmp    FWORD PTR [esi-0x15]
  40b760:	in     al,dx
  40b761:	push   ds
  40b762:	add    BYTE PTR [ecx],ah
  40b764:	mov    eax,ds:0x1f07b3fa
  40b769:	pop    edi
  40b76a:	lods   eax,DWORD PTR ds:[esi]
  40b76b:	pop    ebx
  40b76c:	imul   edx,DWORD PTR [esi],0x607061f3
  40b772:	jmp    0x1b0d:0x2fcb702a
  40b779:	(bad)  [ecx-0xe]
  40b77c:	paddd  mm2,QWORD PTR [esi+esi*4-0x21244da5]
  40b784:	in     eax,dx
  40b785:	jnp    0x40b799
  40b787:	add    eax,0x26d6d77d
  40b78c:	add    al,0xc8
  40b78e:	mov    eax,0x69970141
  40b793:	inc    ebx
  40b794:	adc    ebp,esp
  40b796:	popf   
  40b797:	retf   
  40b798:	xchg   ebp,eax
  40b799:	loope  0x40b728
  40b79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b79c:	jae    0x40b7bb
  40b79e:	test   eax,0x550324fc
  40b7a3:	aas    
  40b7a4:	xchg   edi,eax
  40b7a5:	test   eax,0x347a2d3f
  40b7aa:	mov    ecx,0xaba9aed2
  40b7af:	inc    esp
  40b7b0:	add    ebx,DWORD PTR [ebx+0x73]
  40b7b3:	mov    ah,BYTE PTR ss:[ebp+eiz*1-0x20a6c06a]
  40b7bb:	or     esi,DWORD PTR [eax-0x3f]
  40b7be:	div    DWORD PTR [edi+0x57]
  40b7c1:	sbb    ebp,DWORD PTR [eax-0x1a]
  40b7c4:	cdq    
  40b7c5:	add    eax,0x771eea0a
  40b7ca:	mov    esp,0xa1519dea
  40b7cf:	mov    al,ds:0x9f443bd1
  40b7d4:	int    0x1
  40b7d6:	adc    ebx,0x49c384f
  40b7dc:	mov    ch,0xda
  40b7de:	xchg   ecx,eax
  40b7df:	call   0xce73:0x4b15a47
  40b7e6:	dec    edi
  40b7e7:	test   DWORD PTR [edi],esi
  40b7e9:	in     al,dx
  40b7ea:	fstp   DWORD PTR [ebx-0x7d]
  40b7ed:	cmp    edi,DWORD PTR [edi+0xc47934d]
  40b7f3:	out    0x93,eax
  40b7f5:	pop    esp
  40b7f6:	mov    ecx,0xd196e2c8
  40b7fb:	call   0x4166f3ac
  40b800:	(bad)  
  40b801:	aaa    
  40b802:	or     DWORD PTR [edx],ecx
  40b804:	and    al,0x26
  40b806:	push   es
  40b807:	dec    ebp
  40b808:	cmp    eax,esp
  40b80a:	push   eax
  40b80b:	push   esp
  40b80c:	xor    cl,BYTE PTR [ebx-0x42]
  40b80f:	nop
  40b810:	jp     0x40b7aa
  40b812:	adc    al,0xbf
  40b814:	imul   esp,ebx,0x70
  40b817:	push   0xec797ff6
  40b81c:	push   esi
  40b81d:	cmp    DWORD PTR [eax+0x29],0xf0d9e0af
  40b824:	pminub mm0,QWORD PTR [edi]
  40b827:	test   ebx,edi
  40b829:	jp     0x40b825
  40b82b:	or     ecx,esi
  40b82d:	or     bl,BYTE PTR ds:0x9dbbd48c
  40b833:	sahf   
  40b834:	mov    BYTE PTR [esi+0x61],dh
  40b837:	mov    edx,0x96aac9d1
  40b83c:	add    BYTE PTR [ecx+0x31],0x87
  40b840:	mov    es,WORD PTR [edx+0x4d666c45]
  40b846:	(bad)  
  40b848:	jne    0x40b81d
  40b84a:	pop    es
  40b84b:	sbb    ch,BYTE PTR [ebx+0x62d840e]
  40b851:	lods   eax,DWORD PTR ds:[esi]
  40b852:	stos   DWORD PTR es:[edi],eax
  40b853:	pop    ebx
  40b854:	ins    BYTE PTR es:[edi],dx
  40b855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b856:	inc    edi
  40b857:	inc    eax
  40b858:	imul   eax,DWORD PTR [eax],0x54
  40b85b:	ret    0x392a
  40b85e:	sahf   
  40b85f:	repz mov edi,DWORD PTR [edx+0x46]
  40b863:	(bad)  
  40b864:	mov    eax,ds:0x90824a4c
  40b869:	push   edx
  40b86a:	dec    edx
  40b86b:	call   0x5e64e067
  40b870:	sbb    edx,DWORD PTR [ecx-0x50b81d71]
  40b876:	cmp    DWORD PTR [ecx+0x2ab468d0],eax
  40b87c:	and    al,0xdf
  40b87e:	sub    esp,DWORD PTR [edx+0xf]
  40b881:	out    0x68,eax
  40b883:	dec    esp
  40b884:	out    0xcb,al
  40b886:	or     DWORD PTR [eax-0x63edfd58],0x2e
  40b88d:	test   eax,0x668cdecf
  40b892:	loope  0x40b81e
  40b894:	push   edi
  40b895:	ret    
  40b896:	es retf 
  40b898:	popa   
  40b899:	push   es
  40b89a:	imul   esp,DWORD PTR [esi+0x2536d019],0xfffffffc
  40b8a1:	mov    bh,0x3d
  40b8a3:	in     eax,0x79
  40b8a5:	fwait
  40b8a6:	in     al,0xe1
  40b8a8:	dec    edi
  40b8a9:	mov    cl,0x24
  40b8ab:	jne    0x40b8a1
  40b8ad:	jmp    0x40b8d2
  40b8af:	sbb    BYTE PTR [ecx-0x626bf21a],dl
  40b8b5:	or     cl,dh
  40b8b7:	fdivrp st(4),st
  40b8b9:	xlat   BYTE PTR ds:[ebx]
  40b8ba:	sbb    bh,cl
  40b8bc:	sar    BYTE PTR [edi+0x2a],cl
  40b8bf:	xchg   ecx,eax
  40b8c0:	jge    0x40b907
  40b8c2:	and    al,0xa2
  40b8c4:	sahf   
  40b8c5:	bound  esp,QWORD PTR [ecx-0x22ed6f27]
  40b8cb:	cmp    eax,0x6bb48731
  40b8d0:	daa    
  40b8d1:	pop    eax
  40b8d2:	test   DWORD PTR [edi+0x35],ebp
  40b8d5:	jge    0x40b920
  40b8d7:	arpl   WORD PTR [esi-0x36],bp
  40b8da:	mov    bl,0xda
  40b8dc:	push   esp
  40b8dd:	leave  
  40b8de:	cmp    esi,edi
  40b8e0:	lods   al,BYTE PTR ds:[esi]
  40b8e1:	ss mov dh,0xc6
  40b8e4:	outs   dx,BYTE PTR ds:[esi]
  40b8e5:	inc    edx
  40b8e6:	test   BYTE PTR [esp+edi*8-0x6a],bl
  40b8ea:	jp     0x40b881
  40b8ec:	daa    
  40b8ed:	and    BYTE PTR [esi],bl
  40b8ef:	mov    ds:0x295d4784,al
  40b8f4:	repz out dx,al
  40b8f6:	pop    esi
  40b8f7:	xchg   esp,eax
  40b8f8:	mov    edx,0x58e4d6d0
  40b8fd:	es push 0x22
  40b900:	aaa    
  40b901:	cmp    BYTE PTR [ebx],bh
  40b903:	dec    esp
  40b904:	inc    esp
  40b905:	cmp    DWORD PTR [ebp+0x43d7f055],0xc1ec9e85
  40b90f:	ret    0xa3b9
  40b912:	loopne 0x40b944
  40b914:	leave  
  40b915:	or     BYTE PTR [edx],0xbe
  40b918:	sti    
  40b919:	ins    DWORD PTR es:[edi],dx
  40b91a:	imul   ebp,DWORD PTR [eax+0x17417527],0xffffff90
  40b921:	mov    edi,0x49b2be41
  40b926:	adc    esp,DWORD PTR [ebp-0x5c2d510c]
  40b92c:	call   0x699b:0xb0307786
  40b933:	int    0x3
  40b935:	pop    ds
  40b936:	push   es
  40b937:	push   0x9e852de5
  40b93c:	xchg   ecx,eax
  40b93d:	cmc    
  40b93e:	mov    cl,0xb0
  40b940:	push   esi
  40b941:	test   ebp,ebp
  40b943:	mov    ah,0x3e
  40b945:	push   eax
  40b946:	sahf   
  40b947:	xchg   ebx,eax
  40b948:	sbb    dl,BYTE PTR [edx+0x4c]
  40b94b:	jae    0x40b97b
  40b94d:	and    BYTE PTR [ebx+0x3e],dh
  40b950:	in     eax,0x6c
  40b952:	push   esp
  40b953:	stc    
  40b954:	lock mov eax,ds:0x2755273
  40b95a:	iret   
  40b95b:	jae    0x40b961
  40b95d:	inc    eax
  40b95e:	fidiv  WORD PTR [eax]
  40b960:	jmp    0x17e2142
  40b965:	gs (bad) 
  40b967:	iret   
  40b968:	stos   BYTE PTR es:[edi],al
  40b969:	mov    dh,0x5b
  40b96b:	jae    0x40b9cb
  40b96d:	push   edi
  40b96e:	pop    eax
  40b96f:	retf   
  40b970:	push   ebx
  40b971:	rcl    BYTE PTR [ecx+0xe],0xa7
  40b975:	push   ecx
  40b976:	rcl    dl,0x6c
  40b979:	push   ss
  40b97a:	push   ss
  40b97b:	pop    eax
  40b97c:	fiadd  DWORD PTR [ebp-0x276552]
  40b982:	enter  0x2131,0xee
  40b986:	mov    esp,0xce880ad
  40b98b:	cmp    DWORD PTR [ecx],0x18
  40b98e:	and    esp,DWORD PTR [edx]
  40b990:	out    dx,al
  40b991:	xchg   ebp,eax
  40b992:	rcr    DWORD PTR [ebp+0x3ee3142e],1
  40b998:	sbb    esi,0x69ebdec4
  40b99e:	mov    cl,0x11
  40b9a0:	add    edi,edx
  40b9a2:	out    0xb2,eax
  40b9a4:	shr    BYTE PTR [edx],cl
  40b9a6:	lods   al,BYTE PTR ds:[esi]
  40b9a7:	push   esi
  40b9a8:	sub    eax,0x7844480e
  40b9ad:	std    
  40b9ae:	out    0x67,eax
  40b9b0:	xchg   esi,eax
  40b9b1:	push   eax
  40b9b2:	les    ebx,FWORD PTR [edi-0xffe34b0]
  40b9b8:	rcl    DWORD PTR [ebx-0x78969046],cl
  40b9be:	cmc    
  40b9bf:	movntq QWORD PTR [edi+0x3f],mm7
  40b9c3:	xchg   edi,eax
  40b9c4:	mov    dh,0xe5
  40b9c6:	call   0x2c8e:0xd08827e
  40b9cd:	inc    ebx
  40b9ce:	cmp    DWORD PTR [ebp+0x79],0x1bc71eb3
  40b9d5:	push   0x45
  40b9d7:	dec    esp
  40b9d8:	mov    gs,ecx
  40b9da:	inc    ebx
  40b9db:	nop
  40b9dc:	stos   BYTE PTR es:[edi],al
  40b9dd:	inc    edi
  40b9de:	or     esi,DWORD PTR [ecx+0x59817942]
  40b9e4:	dec    ebp
  40b9e5:	cwde   
  40b9e6:	loop   0x40b9c1
  40b9e8:	adc    ah,BYTE PTR [ebp+0x32c13155]
  40b9ee:	mov    edi,0xfe226aa7
  40b9f3:	push   es
  40b9f4:	adc    DWORD PTR [ebp-0x9],0x1b
  40b9f8:	mov    cl,ah
  40b9fa:	pushf  
  40b9fb:	inc    edx
  40b9fc:	jge    0x40b9a2
  40b9fe:	popa   
  40b9ff:	pop    edi
  40ba00:	in     eax,dx
  40ba01:	imul   ebx,ebp,0xd508421e
  40ba07:	add    dl,BYTE PTR [esi]
  40ba09:	test   eax,0xc74bb06a
  40ba0e:	pop    es
  40ba0f:	stos   DWORD PTR es:[edi],eax
  40ba10:	xchg   ebp,eax
  40ba11:	rol    BYTE PTR [edx-0x46bb143a],1
  40ba17:	aas    
  40ba18:	inc    ebp
  40ba19:	dec    ecx
  40ba1a:	aad    0x4a
  40ba1c:	cmp    edx,edx
  40ba1e:	push   eax
  40ba1f:	sub    al,0x17
  40ba21:	and    al,0xad
  40ba23:	in     eax,0x9
  40ba25:	lods   eax,DWORD PTR ds:[esi]
  40ba26:	in     eax,0x80
  40ba28:	dec    edi
  40ba29:	mov    WORD PTR [eax],gs
  40ba2b:	js     0x40ba7c
  40ba2d:	inc    ebx
  40ba2e:	sahf   
  40ba2f:	mov    BYTE PTR [eax+0x615bc0e9],al
  40ba35:	out    dx,eax
  40ba36:	nop
  40ba37:	shl    DWORD PTR [edi-0x17],cl
  40ba3a:	icebp  
  40ba3b:	popa   
  40ba3c:	dec    ebp
  40ba3d:	enter  0x7baa,0x5c
  40ba41:	mov    ds:0x573918cf,al
  40ba46:	int3   
  40ba47:	xchg   ecx,eax
  40ba48:	pop    edi
  40ba49:	inc    ecx
  40ba4a:	push   esi
  40ba4b:	jle    0x40ba5b
  40ba4d:	inc    edx
  40ba4e:	(bad)  
  40ba4f:	fsubp  st(1),st
  40ba51:	retf   
  40ba52:	and    al,0x9c
  40ba54:	xor    eax,0x709e11fb
  40ba59:	mov    BYTE PTR [ebx],dh
  40ba5b:	into   
  40ba5c:	stc    
  40ba5d:	cmc    
  40ba5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba5f:	mov    dh,0x76
  40ba61:	rcr    edi,cl
  40ba63:	pop    eax
  40ba64:	xor    al,0x73
  40ba66:	icebp  
  40ba67:	aaa    
  40ba68:	mov    bl,0xbe
  40ba6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba6b:	push   ecx
  40ba6c:	mov    edi,0xaccd67b4
  40ba71:	lock cwd 
  40ba74:	ja     0x40bae8
  40ba76:	inc    esi
  40ba77:	cmp    eax,0xb678d7e0
  40ba7c:	jl     0x40baf7
  40ba7e:	pop    ss
  40ba7f:	sbb    BYTE PTR [esi],al
  40ba81:	pop    edx
  40ba82:	jp     0x40ba47
  40ba84:	iret   
  40ba85:	xor    dl,dl
  40ba87:	popf   
  40ba88:	inc    ecx
  40ba89:	aas    
  40ba8a:	int3   
  40ba8b:	xor    ebp,DWORD PTR [edi]
  40ba8d:	jb     0x40ba2b
  40ba8f:	or     bh,dl
  40ba91:	pop    eax
  40ba92:	std    
  40ba93:	or     cl,bh
  40ba95:	mov    ebp,fs
  40ba97:	cmp    eax,0x20309e85
  40ba9c:	iret   
  40ba9d:	mov    eax,ds:0x6f8c0be4
  40baa2:	or     ebp,edx
  40baa4:	sbb    ah,BYTE PTR [ebx]
  40baa6:	xchg   bl,dh
  40baa8:	xor    DWORD PTR [edi+0x3849233e],esi
  40baae:	ret    0xa715
  40bab1:	shr    DWORD PTR [edi-0x79],0x9f
  40bab5:	arpl   bp,bp
  40bab7:	xchg   esp,eax
  40bab8:	(bad)  
  40bab9:	jmp    0x40ba4c
  40babb:	test   BYTE PTR [esi+esi*4],bh
  40babe:	fs pop eax
  40bac0:	dec    eax
  40bac1:	push   ss
  40bac2:	push   ebx
  40bac3:	repz adc al,0xfb
  40bac6:	call   0xf55e:0x84a45039
  40bacd:	xchg   esp,eax
  40bace:	add    ebx,DWORD PTR [ecx-0x7fcd13ee]
  40bad4:	call   0x9941:0xad639208
  40badb:	xchg   esp,eax
  40badc:	cmp    al,0x3d
  40bade:	xor    al,0xbe
  40bae0:	(bad)  
  40bae1:	repnz sbb ebp,DWORD PTR [edi]
  40bae4:	dec    esi
  40bae5:	mov    edx,0xcbda1bc0
  40baea:	sbb    eax,0x6efb0164
  40baef:	ins    BYTE PTR es:[edi],dx
  40baf0:	push   ds
  40baf1:	in     eax,0x59
  40baf3:	jb     0x40bb04
  40baf5:	add    al,BYTE PTR [ebx+0x41a5dbd9]
  40bafb:	cmp    ebx,DWORD PTR [edi+ebp*2-0x70]
  40baff:	jb     0x40bb48
  40bb01:	je     0x40bb56
  40bb03:	rcl    BYTE PTR ds:0x80cb5944,0x64
  40bb0a:	test   BYTE PTR [ebx-0x1b],0x96
  40bb0e:	or     DWORD PTR [eax-0x2c92a46],0xb56a08b6
  40bb18:	scas   eax,DWORD PTR es:[edi]
  40bb19:	rcl    DWORD PTR [ebp-0x294e292a],cl
  40bb1f:	cld    
  40bb20:	xchg   ecx,eax
  40bb22:	xchg   BYTE PTR [esi+0x3096a805],ch
  40bb28:	stc    
  40bb29:	inc    ebx
  40bb2a:	sbb    eax,0x5ffa9499
  40bb2f:	mov    WORD PTR [ebp+0x39e38e63],gs
  40bb35:	cdq    
  40bb36:	or     BYTE PTR [ebp-0x565ec0cf],ch
  40bb3c:	cmp    ah,cl
  40bb3e:	retf   0x675d
  40bb41:	sub    ebx,DWORD PTR [edi]
  40bb43:	xchg   DWORD PTR [edx+ebp*2],esi
  40bb46:	inc    ebx
  40bb47:	or     ebp,DWORD PTR [edx+0x4d018b42]
  40bb4d:	adc    al,0xa4
  40bb4f:	popa   
  40bb50:	mov    edx,0xcb4d0f14
  40bb55:	sbb    esi,edx
  40bb57:	jae    0x40bb29
  40bb59:	xor    bl,BYTE PTR [esi-0x40577f9e]
  40bb5f:	and    BYTE PTR [ebx+0x18],ah
  40bb62:	mov    cl,0x24
  40bb64:	pop    esi
  40bb65:	xlat   BYTE PTR ds:[ebx]
  40bb66:	sbb    eax,0x70e9a469
  40bb6b:	imul   ebp,DWORD PTR [ebx+0x17f838f4],0x50fae914
  40bb75:	(bad)  
  40bb77:	daa    
  40bb78:	mov    ds:0x655640a4,eax
  40bb7d:	pop    esi
  40bb7e:	mov    al,0x25
  40bb80:	(bad)  
  40bb81:	mov    ch,0x8a
  40bb83:	xchg   ebx,eax
  40bb84:	sub    edi,ebp
  40bb86:	jno    0x40bb12
  40bb88:	mov    eax,0xc684faa0
  40bb8d:	cmp    bh,0xa9
  40bb90:	xor    eax,0x59b5ef5c
  40bb95:	enter  0xa35d,0x2b
  40bb99:	popa   
  40bb9a:	out    dx,eax
  40bb9b:	fmul   QWORD PTR [esi+0x707ec45a]
  40bba1:	fnstenv [esi+ebx*4+0x1d]
  40bba5:	(bad)  
  40bba6:	retf   0xda7
  40bba9:	cmc    
  40bbaa:	push   ss
  40bbab:	cmp    ah,BYTE PTR [edx-0x2c89642b]
  40bbb1:	test   DWORD PTR [ecx+0x75],ecx
  40bbb4:	jmp    0x65cd:0x33df804f
  40bbbb:	out    0x51,al
  40bbbd:	mov    WORD PTR [ecx+0x22708546],ds
  40bbc3:	pop    ebx
  40bbc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc5:	and    DWORD PTR [ebx],esi
  40bbc7:	and    al,0x69
  40bbc9:	shr    DWORD PTR [edi-0x24],0x23
  40bbcd:	popf   
  40bbce:	lea    esi,ds:0x5d406043
  40bbd4:	loop   0x40bbc3
  40bbd6:	hlt    
  40bbd7:	jl     0x40bb61
  40bbd9:	xchg   edx,eax
  40bbda:	cmp    DWORD PTR [edx+0xd],eax
  40bbdd:	inc    esp
  40bbde:	test   eax,0x423c0302
  40bbe3:	mov    eax,0x6a2aa29d
  40bbe8:	les    ebp,FWORD PTR [edx-0x52]
  40bbeb:	jb     0x40bc35
  40bbed:	push   ds
  40bbee:	mov    eax,ds:0xd61d3dde
  40bbf3:	scas   eax,DWORD PTR es:[edi]
  40bbf4:	mov    dl,BYTE PTR [edi-0x3e]
  40bbf7:	jo     0x40bbd1
  40bbf9:	jmp    0x40bc09
  40bbfb:	out    0x79,al
  40bbfd:	in     eax,0x9a
  40bbff:	out    dx,eax
  40bc00:	sar    DWORD PTR es:[edx+0xba2029f],1
  40bc07:	bound  esi,QWORD PTR [ecx]
  40bc09:	retf   
  40bc0a:	iret   
  40bc0b:	ins    DWORD PTR es:[edi],dx
  40bc0c:	pop    ebx
  40bc0d:	pop    edi
  40bc0e:	xchg   edi,eax
  40bc0f:	imul   esp,DWORD PTR [esi],0x7b0fa50f
  40bc15:	(bad)  
  40bc17:	mov    si,0x6db
  40bc1b:	push   ebp
  40bc1c:	or     al,0xa
  40bc1e:	sub    dh,BYTE PTR [ebx+0x7]
  40bc21:	call   0x6160:0x544fd78c
  40bc28:	(bad)  
  40bc2a:	popa   
  40bc2b:	imul   edi,DWORD PTR ds:0x285f481a,0xc1ba1d5
  40bc35:	pop    edx
  40bc36:	mov    ds:0x39cc1e0e,eax
  40bc3b:	xor    ebx,DWORD PTR [edx+0x6f]
  40bc3e:	ss mov ebx,0xdeefe6f9
  40bc44:	lods   al,BYTE PTR ds:[esi]
  40bc45:	shr    BYTE PTR [eax],1
  40bc47:	add    BYTE PTR [ecx+0x3b],ch
  40bc4a:	fidiv  WORD PTR [eax-0x12693087]
  40bc50:	and    eax,0x3f522852
  40bc55:	add    eax,0x48bf70f0
  40bc5a:	sub    eax,0x304afbd5
  40bc5f:	lea    esp,[esi+edi*4]
  40bc62:	out    0x36,al
  40bc64:	mov    ch,0x8a
  40bc66:	into   
  40bc67:	push   ebp
  40bc68:	or     ah,bl
  40bc6a:	test   DWORD PTR [ebp-0x4863df43],edi
  40bc70:	cmp    eax,0x6d654dea
  40bc75:	xchg   esp,eax
  40bc76:	outs   dx,BYTE PTR ds:[esi]
  40bc77:	xchg   edx,eax
  40bc78:	cmp    ah,ch
  40bc7a:	ds xchg ecx,eax
  40bc7c:	sti    
  40bc7d:	das    
  40bc7e:	icebp  
  40bc7f:	push   ebp
  40bc81:	sysret 
  40bc83:	mov    esp,0x893e5c18
  40bc88:	cld    
  40bc89:	(bad)  
  40bc8a:	sar    BYTE PTR [ecx],1
  40bc8c:	bound  esp,QWORD PTR [esi+0x47]
  40bc8f:	mov    al,ds:0x679954bd
  40bc94:	add    eax,esi
  40bc96:	fstp   st(7)
  40bc98:	xor    cl,BYTE PTR [eax-0x5f]
  40bc9b:	mov    BYTE PTR [ebp+0x5834e382],al
  40bca1:	push   ecx
  40bca2:	mov    dl,0xd0
  40bca4:	fld    TBYTE PTR [esi+ebx*1]
  40bca7:	lds    ecx,FWORD PTR [esi-0x41]
  40bcaa:	push   ds
  40bcab:	pop    eax
  40bcac:	dec    edx
  40bcad:	sub    ebp,DWORD PTR [ecx-0x1ec95808]
  40bcb3:	push   0x7ea4447b
  40bcb8:	mov    edx,DWORD PTR [eax+0x6a]
  40bcbb:	jg     0x40bcfa
  40bcbd:	call   0xfcc8c8e9
  40bcc2:	arpl   bp,di
  40bcc4:	dec    esi
  40bcc5:	cmp    DWORD PTR [edx+ebp*4+0x19],ebx
  40bcc9:	push   esp
  40bcca:	loope  0x40bd20
  40bccc:	icebp  
  40bccd:	mov    ds:0x1b5c5d47,eax
  40bcd2:	fidiv  DWORD PTR [ebx+0x765061b8]
  40bcd8:	leave  
  40bcd9:	(bad)  
  40bcdb:	popf   
  40bcdc:	stos   DWORD PTR es:[edi],eax
  40bcdd:	or     DWORD PTR [ebx-0x1e5f8891],0x19dc6154
  40bce7:	xor    DWORD PTR [eax+ebp*8+0x24],ebx
  40bceb:	int    0x53
  40bced:	and    ebx,DWORD PTR [ecx]
  40bcef:	adc    DWORD PTR [ecx-0x45],ebx
  40bcf2:	and    al,0xf7
  40bcf4:	and    ch,BYTE PTR [edx+0x73]
  40bcf7:	fidiv  DWORD PTR [edi]
  40bcf9:	mov    eax,cs
  40bcfb:	es iret 
  40bcfd:	sbb    ebx,ecx
  40bcff:	and    DWORD PTR [ecx+0x33],esp
  40bd02:	pushf  
  40bd03:	std    
  40bd04:	mov    edi,0x923c1668
  40bd09:	es sbb eax,0x99a913fe
  40bd0f:	add    edx,DWORD PTR [eiz*8-0x235a35f6]
  40bd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd17:	sbb    al,0x3c
  40bd19:	pop    esp
  40bd1a:	cwde   
  40bd1b:	push   0x73b66c60
  40bd20:	pop    edx
  40bd21:	dec    eax
  40bd22:	loop   0x40bd31
  40bd24:	icebp  
  40bd25:	cmp    ah,BYTE PTR [edi+0x4]
  40bd28:	fbld   TBYTE PTR [ecx]
  40bd2a:	(bad)  
  40bd2c:	mov    edi,0x3fed5405
  40bd31:	push   0x90752200
  40bd36:	test   eax,0x4408c2a0
  40bd3b:	ins    DWORD PTR es:[edi],dx
  40bd3c:	mov    bl,0xf
  40bd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd3f:	pop    ss
  40bd40:	call   0xcfbe:0x9541e626
  40bd47:	in     eax,0x4f
  40bd49:	aad    0x47
  40bd4b:	jb     0x40bd99
  40bd4d:	lahf   
  40bd4e:	jnp    0x40bd60
  40bd50:	outs   dx,DWORD PTR ds:[esi]
  40bd51:	sahf   
  40bd52:	mov    dl,0xb6
  40bd54:	xchg   esi,eax
  40bd55:	mov    dl,0x4b
  40bd57:	jmp    0xa45:0x283a1b91
  40bd5e:	cli    
  40bd5f:	push   ss
  40bd60:	ret    
  40bd61:	add    DWORD PTR [eax+eax*2],ebx
  40bd64:	xor    ch,0x66
  40bd67:	cmc    
  40bd68:	push   ds
  40bd69:	xchg   ah,ch
  40bd6b:	out    0x17,eax
  40bd6d:	out    0xa7,al
  40bd6f:	sbb    al,0xf7
  40bd71:	bound  ebx,QWORD PTR [edi]
  40bd73:	lods   al,BYTE PTR ds:[esi]
  40bd74:	xchg   esi,eax
  40bd75:	(bad)  
  40bd76:	jle    0x40bd07
  40bd78:	scas   al,BYTE PTR es:[edi]
  40bd79:	call   0x4f023953
  40bd7e:	iret   
  40bd7f:	mov    eax,ds:0x914aa828
  40bd84:	or     DWORD PTR [eax-0x7b],eax
  40bd87:	je     0x40bddc
  40bd89:	test   BYTE PTR [edx+0x3d],al
  40bd8c:	pop    eax
  40bd8d:	test   al,0xfa
  40bd8f:	repnz push esi
  40bd91:	jecxz  0x40bda0
  40bd93:	fisub  WORD PTR [edi-0x66c1b47]
  40bd99:	leave  
  40bd9a:	push   esi
  40bd9b:	xchg   esp,eax
  40bd9c:	push   esp
  40bd9d:	cmp    DWORD PTR [edx],esp
  40bd9f:	mov    esp,DWORD PTR [ebx+eax*8]
  40bda2:	jmp    0x2a37eff4
  40bda7:	cld    
  40bda8:	jg     0x40bd68
  40bdaa:	sbb    BYTE PTR [esi+0x1f8b73d9],dl
  40bdb0:	xchg   edx,eax
  40bdb1:	fcos   
  40bdb3:	push   edx
  40bdb4:	retf   0xbcf5
  40bdb7:	push   DWORD PTR [ebx-0xc821d15]
  40bdbd:	xchg   edx,eax
  40bdbe:	sbb    ebx,ebx
  40bdc0:	dec    ecx
  40bdc1:	sub    esp,esi
  40bdc3:	clc    
  40bdc4:	pop    ds
  40bdc5:	push   es
  40bdc6:	cmp    eax,0xb8efb7a2
  40bdcb:	jp     0x40bd8b
  40bdcd:	mov    ebx,0x9ad81c9d
  40bdd2:	in     al,dx
  40bdd3:	popa   
  40bdd4:	push   ecx
  40bdd5:	ds and al,0x55
  40bdd8:	push   cs
  40bdd9:	cmp    al,0xe4
  40bddb:	mov    dl,0xba
  40bddd:	mov    dl,0x0
  40bddf:	enter  0xe73b,0x32
  40bde3:	call   0x41c1:0x61f51d11
  40bdea:	ins    DWORD PTR es:[edi],dx
  40bdeb:	addr16 popw ss
  40bdee:	pushf  
  40bdef:	pop    ebp
  40bdf0:	shl    DWORD PTR [edx+0x451c6390],1
  40bdf6:	push   ebx
  40bdf7:	mov    eax,0xd3db5b08
  40bdfc:	adc    BYTE PTR cs:[edi+0x187addd1],cl
  40be03:	mov    al,ds:0x1ec7ac5c
  40be08:	mov    ebp,DWORD PTR [edi+0x42]
  40be0b:	jge    0x40bdfa
  40be0d:	push   0xffffffa8
  40be0f:	inc    edx
  40be10:	sbb    cl,BYTE PTR [esi]
  40be12:	add    eax,0x1a8c49f7
  40be17:	add    al,0xd6
  40be19:	pop    esi
  40be1a:	mov    edi,DWORD PTR [edi]
  40be1c:	xchg   esi,eax
  40be1d:	out    dx,eax
  40be1e:	pop    ecx
  40be1f:	sub    cl,BYTE PTR ds:0xe98f10f
  40be25:	and    DWORD PTR [eax-0x31],ecx
  40be28:	dec    esp
  40be29:	pop    ebx
  40be2a:	retf   0xc399
  40be2d:	and    ecx,DWORD PTR [ecx-0x28f6f88c]
  40be33:	jbe    0x40be92
  40be35:	pop    edi
  40be36:	push   cs
  40be37:	(bad)  
  40be3a:	adc    cl,0x53
  40be3d:	jo     0x40be4c
  40be3f:	cmp    dl,BYTE PTR [esp+ecx*2+0x33]
  40be43:	adc    BYTE PTR [esi-0x13],bh
  40be46:	cmp    ebx,DWORD PTR [ebx-0x2]
  40be49:	addr16 (bad) 
  40be4c:	jmp    0x4ac4:0x918d74cf
  40be53:	bound  ecx,QWORD PTR [ebp+0x39]
  40be56:	add    al,0x99
  40be58:	mov    bh,0x5b
  40be5a:	jecxz  0x40bddd
  40be5c:	cmp    eax,0x2e59ab99
  40be61:	push   esi
  40be62:	cmc    
  40be63:	mov    al,ds:0x1f2935e9
  40be68:	jl     0x40be23
  40be6a:	sti    
  40be6b:	fidivr WORD PTR [bx-0x67]
  40be6f:	arpl   WORD PTR [edi],dx
  40be71:	xor    dl,BYTE PTR ds:0xb6c617a7
  40be77:	adc    dh,ah
  40be79:	jecxz  0x40be57
  40be7b:	mov    cl,0x7f
  40be7d:	adc    BYTE PTR [eax+0x39b9cbcd],dh
  40be83:	into   
  40be84:	jnp    0x40be8a
  40be86:	outs   dx,BYTE PTR ds:[esi]
  40be87:	push   ebp
  40be88:	adc    ah,BYTE PTR [edx]
  40be8a:	outs   dx,BYTE PTR fs:[esi]
  40be8c:	dec    ebx
  40be8d:	push   esi
  40be8e:	pop    ds
  40be8f:	scas   al,BYTE PTR es:[edi]
  40be90:	loop   0x40bf10
  40be92:	xchg   esp,eax
  40be93:	fs repz add eax,0x9f36d7a3
  40be9a:	sahf   
  40be9b:	imul   esi,edx,0xfde09dda
  40bea1:	cmc    
  40bea2:	inc    edx
  40bea3:	ret    0x4d69
  40bea6:	aaa    
  40bea7:	mov    eax,0xffacba3c
  40beac:	jns    0x84782d70
  40beb2:	adc    eax,DWORD PTR [edi]
  40beb4:	sub    al,0xe2
  40beb7:	fstp   TBYTE PTR [edi-0x14a8440f]
  40bebd:	jb     0x40bf33
  40bebf:	(bad)  
  40bec0:	jmp    0xe9d8a486
  40bec5:	mov    WORD PTR [ebp+0x42ab5fbb],?
  40becb:	mov    cs,WORD PTR [ebx]
  40becd:	push   ss
  40bece:	outs   dx,DWORD PTR ds:[esi]
  40becf:	jbe    0x40bf3f
  40bed1:	pusha  
  40bed2:	stos   DWORD PTR es:[edi],eax
  40bed3:	jecxz  0x40bef5
  40bed5:	or     eax,0xb9dd488b
  40beda:	mov    esi,0x8d27424f
  40bedf:	mov    al,ds:0xaf1d5d37
  40bee4:	xor    al,al
  40bee6:	xchg   ebp,eax
  40bee7:	pushf  
  40bee8:	add    al,0xa4
  40beea:	or     al,0x5c
  40beec:	mov    ?,ecx
  40beee:	adc    al,0x9e
  40bef0:	push   esp
  40bef1:	fdiv   QWORD PTR [ebx+ecx*4]
  40bef4:	std    
  40bef5:	mov    ch,0xb2
  40bef7:	xor    DWORD PTR [eax],esi
  40bef9:	dec    ebp
  40befa:	push   eax
  40befb:	test   BYTE PTR [esi-0x76],cl
  40befe:	or     ebx,DWORD PTR [esi]
  40bf00:	test   esp,esi
  40bf02:	mov    eax,ds:0x145710e
  40bf07:	std    
  40bf08:	push   edx
  40bf09:	test   BYTE PTR [ebp-0x77],bl
  40bf0c:	push   ecx
  40bf0d:	push   ecx
  40bf0e:	test   BYTE PTR [edi-0xf],dl
  40bf11:	sbb    bh,bh
  40bf13:	mov    esi,0x86c8c096
  40bf18:	fsubr  DWORD PTR ds:0x72050e81
  40bf1e:	and    esi,DWORD PTR [ebp+0x12]
  40bf21:	into   
  40bf22:	sets   BYTE PTR [edi]
  40bf25:	push   edx
  40bf26:	das    
  40bf27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf28:	(bad)  
  40bf29:	test   eax,0x3064e48b
  40bf2e:	icebp  
  40bf2f:	sbb    ch,BYTE PTR [edx]
  40bf31:	fidivr WORD PTR [edx+esi*2]
  40bf34:	mov    bl,0x15
  40bf36:	or     bl,BYTE PTR [edi-0x200781cb]
  40bf3c:	jne    0x40beda
  40bf3e:	(bad)  
  40bf3f:	out    0x8f,al
  40bf41:	jecxz  0x40bf69
  40bf43:	in     al,dx
  40bf44:	add    al,bh
  40bf46:	and    eax,0x993a0f34
  40bf4b:	addr16 out 0xbb,eax
  40bf4e:	lahf   
  40bf4f:	int    0x5
  40bf51:	loop   0x40bee9
  40bf53:	push   es
  40bf54:	loope  0x40bf94
  40bf56:	cmp    eax,0xa9969356
  40bf5b:	dec    edi
  40bf5c:	ins    DWORD PTR es:[edi],dx
  40bf5d:	(bad)  
  40bf5e:	cwde   
  40bf5f:	aad    0x99
  40bf61:	test   ebp,esi
  40bf63:	xlat   BYTE PTR ds:[ebx]
  40bf64:	out    dx,al
  40bf65:	jge    0x40bf73
  40bf67:	jb     0x40bf86
  40bf69:	out    dx,eax
  40bf6a:	cmp    BYTE PTR [ebp+0x19c95151],bh
  40bf70:	mov    dl,0xa5
  40bf72:	adc    esp,ebp
  40bf74:	sbb    al,0x94
  40bf76:	dec    esi
  40bf77:	retf   0x7570
  40bf7a:	scas   al,BYTE PTR es:[edi]
  40bf7b:	pop    ebp
  40bf7c:	gs cmc 
  40bf7e:	jecxz  0x40bfde
  40bf80:	cdq    
  40bf81:	enter  0x64c0,0xd
  40bf85:	aam    0x94
  40bf87:	and    DWORD PTR [ecx+0x208e7cfb],ebp
  40bf8d:	test   eax,0x3a4ef2f4
  40bf92:	adc    al,0x3d
  40bf94:	inc    edx
  40bf95:	sbb    eax,0x62069115
  40bf9a:	and    al,0x1a
  40bf9c:	aam    0x3f
  40bf9e:	push   ebx
  40bf9f:	ja     0x40bfc9
  40bfa1:	push   ecx
  40bfa2:	enter  0x9a21,0x20
  40bfa6:	mov    ecx,0xd4222214
  40bfab:	xchg   ebp,eax
  40bfac:	sti    
  40bfad:	lods   al,BYTE PTR ds:[esi]
  40bfae:	gs rol al,cl
  40bfb1:	xchg   ebx,eax
  40bfb2:	sub    BYTE PTR [ebx+eax*1+0x3e228532],bl
  40bfb9:	inc    ebx
  40bfba:	hlt    
  40bfbb:	pop    DWORD PTR [esi+0x48]
  40bfbe:	retf   
  40bfbf:	repz jg 0x40c027
  40bfc2:	adc    DWORD PTR [ebp-0x8ccd655],eax
  40bfc8:	or     bl,BYTE PTR [ebx+0x1]
  40bfcb:	sub    DWORD PTR [edi+0x4bda01f],esi
  40bfd1:	mov    ebx,0xe753fdfa
  40bfd6:	jno    0x40c055
  40bfd8:	inc    ebx
  40bfd9:	js     0x40bfc7
  40bfdb:	ror    DWORD PTR ss:[esi+0x54],1
  40bfdf:	cmp    al,0xc8
  40bfe1:	aad    0xe8
  40bfe3:	jle    0x40bfc7
  40bfe5:	out    dx,al
  40bfe6:	sub    al,BYTE PTR [eax]
  40bfe8:	stos   DWORD PTR es:[edi],eax
  40bfe9:	dec    eax
  40bfea:	repz mov ds:0x333c8ed0,eax
  40bff0:	loope  0x40bfcd
  40bff2:	add    BYTE PTR [ebx],0xcc
  40bff5:	add    ah,BYTE PTR [ebp+0x4e]
  40bff8:	ror    DWORD PTR [esi+0x73],cl
  40bffb:	adc    al,0x7
  40bffd:	xchg   esp,eax
  40bffe:	mov    ds:0xdafb6b24,al
  40c003:	add    cl,bl
  40c005:	pop    eax
  40c006:	repnz sahf 
  40c008:	pushf  
  40c009:	mov    esp,ss
  40c00b:	mov    dh,0xfe
  40c00d:	and    eax,0x3d717d42
  40c012:	add    cl,al
  40c014:	xchg   ebx,eax
  40c015:	gs and eax,0xe0589c60
  40c01b:	and    ebx,DWORD PTR [ecx]
  40c01d:	pop    ds
  40c01e:	stos   BYTE PTR es:[edi],al
  40c01f:	call   0x344a:0xd66e71a5
  40c026:	fstp   QWORD PTR [edi]
  40c028:	jno    0x40c086
  40c02a:	call   0x390:0xa9d4f936
  40c031:	mov    dh,0xee
  40c033:	mov    ds:0xe022f6b0,eax
  40c038:	sub    BYTE PTR [edx],cl
  40c03a:	test   BYTE PTR [edi+0x29bc30ce],cl
  40c040:	ins    BYTE PTR es:[edi],dx
  40c041:	push   ecx
  40c042:	mov    dl,0x4c
  40c044:	shl    DWORD PTR [di+0x58],0xd0
  40c049:	stos   DWORD PTR es:[edi],eax
  40c04a:	lods   al,BYTE PTR ds:[esi]
  40c04b:	cmp    al,0xdc
  40c04d:	ror    eax,0x2f
  40c050:	sbb    al,0x5c
  40c052:	(bad)  
  40c053:	mov    ah,0xb6
  40c055:	jmp    0xe881d8c1
  40c05a:	and    cl,dl
  40c05c:	ins    DWORD PTR es:[edi],dx
  40c05d:	lods   al,BYTE PTR ds:[esi]
  40c05e:	rol    BYTE PTR [eax],0x38
  40c061:	dec    ebx
  40c062:	dec    DWORD PTR [ebx]
  40c064:	adc    bl,BYTE PTR [edi+ebp*4-0x3e6b9c45]
  40c06b:	arpl   si,bp
  40c06d:	(bad)  
  40c06e:	sbb    esi,DWORD PTR [edx+ebx*2+0x5d7e42e0]
  40c075:	xchg   esi,eax
  40c076:	pushf  
  40c077:	cmc    
  40c078:	xchg   edi,eax
  40c079:	lahf   
  40c07a:	shl    DWORD PTR ds:[ecx+0x25313854],0x48
  40c082:	lods   eax,DWORD PTR ds:[esi]
  40c083:	lds    esi,FWORD PTR [ecx+eax*8-0x144ab471]
  40c08a:	(bad)  
  40c08b:	cmp    al,0x6a
  40c08d:	mov    ds:0x2cd08416,eax
  40c092:	outs   dx,BYTE PTR ds:[esi]
  40c093:	sub    al,0xc7
  40c095:	sbb    al,0x5f
  40c097:	into   
  40c098:	mov    DWORD PTR [ebx+0x24],edx
  40c09b:	jbe    0x40c039
  40c09d:	mov    DWORD PTR [esi],edi
  40c09f:	loopne 0x40c0b6
  40c0a1:	(bad)  
  40c0a2:	dec    ecx
  40c0a3:	dec    esi
  40c0a4:	adc    dl,BYTE PTR gs:[edi]
  40c0a7:	pop    es
  40c0a8:	pop    ss
  40c0a9:	push   ebx
  40c0aa:	out    dx,eax
  40c0ab:	ja     0x40c06f
  40c0ad:	aaa    
  40c0ae:	stos   DWORD PTR es:[edi],eax
  40c0af:	mov    bh,0x4
  40c0b1:	sar    DWORD PTR [edx+0x6cf98cf1],1
  40c0b7:	sbb    eax,0xee182e69
  40c0bc:	sbb    DWORD PTR [eax+0x7fc47d6b],0x57bbd41b
  40c0c6:	mov    dl,0x85
  40c0c8:	adc    edx,0xffffff8c
  40c0cb:	out    dx,al
  40c0cc:	mov    bl,BYTE PTR [edx]
  40c0ce:	dec    esp
  40c0cf:	jnp    0x40c143
  40c0d1:	(bad)  
  40c0d2:	pop    ss
  40c0d3:	mov    DWORD PTR [ecx],esi
  40c0d5:	fimul  WORD PTR [edi+0x2bb6a259]
  40c0db:	add    DWORD PTR [esi+edi*4-0x4c979aea],eax
  40c0e2:	shl    DWORD PTR [ebx+0x60fe8f51],0x57
  40c0e9:	pop    es
  40c0ea:	ret    0xa430
  40c0ed:	fstp   TBYTE PTR [edi-0x74]
  40c0f0:	cmp    BYTE PTR [edi],ah
  40c0f2:	mov    eax,ds:0xf0283180
  40c0f7:	stos   BYTE PTR es:[edi],al
  40c0f8:	lock mov dh,0xa3
  40c0fb:	adc    eax,0x5e420a39
  40c100:	mov    DWORD PTR [esi-0x1c6ba639],eax
  40c106:	int    0xea
  40c108:	sub    DWORD PTR [edi-0x23137974],ebp
  40c10e:	xor    DWORD PTR [esi-0xe47f0ff],eax
  40c114:	mov    bh,0xb8
  40c116:	out    0x44,eax
  40c118:	in     eax,0x86
  40c11a:	std    
  40c11b:	pop    ss
  40c11c:	dec    eax
  40c11d:	mov    ecx,0x2186b505
  40c122:	xor    eax,0xebd486fa
  40c127:	imul   edi,DWORD PTR [esi-0x2f],0x2
  40c12b:	test   BYTE PTR [ecx],ch
  40c12d:	sub    al,0x1e
  40c12f:	mov    eax,ds:0x8d76f77a
  40c134:	sub    al,0x7d
  40c136:	lds    eax,FWORD PTR [edx+0x79245d75]
  40c13c:	sbb    BYTE PTR [edx],bl
  40c13e:	sti    
  40c13f:	test   eax,0x96d1f7d3
  40c144:	(bad)  
  40c145:	daa    
  40c146:	or     ah,BYTE PTR [edx+edx*1]
  40c149:	or     BYTE PTR [ebx-0x7df9fb68],ch
  40c14f:	outs   dx,BYTE PTR ds:[esi]
  40c150:	push   ebx
  40c151:	stos   DWORD PTR es:[edi],eax
  40c152:	ret    
  40c153:	inc    ebx
  40c154:	mov    dl,0x31
  40c156:	push   0x25d58018
  40c15b:	mov    esp,0x11d4b0e9
  40c160:	sahf   
  40c161:	popf   
  40c162:	in     eax,0x36
  40c164:	inc    edx
  40c165:	out    dx,eax
  40c166:	jmp    0xc7174a1
  40c16b:	xchg   DWORD PTR [ebp+0x6a],ecx
  40c16e:	xor    BYTE PTR [ebp-0x3d],ah
  40c171:	call   0x2d949b89
  40c176:	retf   0xfe9
  40c179:	xor    edi,DWORD PTR [edx]
  40c17b:	scas   eax,DWORD PTR es:[edi]
  40c17c:	pop    es
  40c17d:	dec    di
  40c17f:	retf   0x3ac8
  40c182:	stos   BYTE PTR es:[edi],al
  40c183:	pusha  
  40c184:	and    DWORD PTR [ebx+0x599a2e6],eax
  40c18a:	add    ebp,DWORD PTR [edi+0x41335596]
  40c190:	jg     0x40c1ba
  40c192:	push   cs
  40c193:	aas    
  40c194:	push   edi
  40c195:	mov    ds:0x4320ec32,eax
  40c19a:	xchg   ebp,eax
  40c19b:	js     0x40c14c
  40c19d:	jo     0x40c1d3
  40c19f:	mov    BYTE PTR [ebx],ah
  40c1a1:	loop   0x40c214
  40c1a3:	pop    ds
  40c1a4:	pop    ds
  40c1a5:	adc    ah,0x89
  40c1a8:	mov    BYTE PTR cs:[edi-0x461bf531],cl
  40c1af:	iret   
  40c1b0:	add    BYTE PTR [edx],0x9a
  40c1b3:	dec    esp
  40c1b4:	pop    ss
  40c1b5:	rcr    DWORD PTR [edx+0x2df7cf53],cl
  40c1bb:	in     eax,0x1a
  40c1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1be:	xchg   esp,eax
  40c1bf:	cdq    
  40c1c0:	inc    edi
  40c1c1:	push   ecx
  40c1c2:	xlat   BYTE PTR ds:[ebx]
  40c1c3:	mov    esp,0xeee61859
  40c1c8:	lock pop ecx
  40c1ca:	imul   esi,eax,0xff01b5a4
  40c1d0:	or     al,0x65
  40c1d2:	retf   
  40c1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d4:	and    BYTE PTR [eax+0x12655839],ah
  40c1da:	lock cli 
  40c1dc:	push   ds
  40c1dd:	outs   dx,DWORD PTR ds:[esi]
  40c1de:	jl     0x40c256
  40c1e0:	add    ch,al
  40c1e2:	out    dx,al
  40c1e3:	out    0x4c,eax
  40c1e5:	jge    0x40c1d8
  40c1e7:	mov    edi,0x12a4d025
  40c1ec:	or     dh,0x42
  40c1ef:	(bad)  
  40c1f1:	cmp    bh,BYTE PTR [ecx]
  40c1f3:	mov    al,0x6b
  40c1f5:	cld    
  40c1f6:	sbb    al,0x86
  40c1f8:	add    eax,0x847ace9d
  40c1fd:	cmp    al,0xfc
  40c1ff:	pop    edx
  40c200:	test   BYTE PTR [eax+esi*8],0xe1
  40c204:	loope  0x40c20f
  40c206:	add    bh,cl
  40c208:	pop    ebx
  40c209:	(bad)  
  40c20a:	in     eax,0x28
  40c20c:	aaa    
  40c20d:	dec    ebp
  40c20e:	adc    eax,0x98a1761
  40c213:	mov    BYTE PTR [eax],bh
  40c215:	adc    DWORD PTR [edi+0xdf9c34f],0xc9c33a7d
  40c21f:	stos   BYTE PTR es:[edi],al
  40c220:	jmp    0x51c8d33a
  40c225:	imul   edx,DWORD PTR [ebp+0x27fcd328],0x6b
  40c22c:	(bad)  
  40c22d:	sbb    DWORD PTR [ecx],ebx
  40c22f:	jp     0x40c270
  40c231:	outs   dx,BYTE PTR ds:[esi]
  40c232:	push   0xe48c2540
  40c237:	pop    edx
  40c238:	jae    0x40c22d
  40c23a:	leave  
  40c23b:	imul   DWORD PTR [edi-0x589d1603]
  40c241:	int3   
  40c242:	pop    ss
  40c243:	popa   
  40c244:	in     al,0xf8
  40c246:	std    
  40c247:	xchg   ecx,eax
  40c248:	sub    DWORD PTR [ecx-0x10],edx
  40c24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c24c:	test   al,0xa9
  40c24e:	mov    dh,0xb9
  40c250:	fimul  WORD PTR [eax-0x74]
  40c253:	adc    DWORD PTR [ebx+esi*4],eax
  40c256:	or     al,0xfa
  40c258:	sbb    DWORD PTR [edx],edi
  40c25a:	jmp    0xa9314d36
  40c25f:	out    0x83,eax
  40c261:	popa   
  40c262:	sub    BYTE PTR [esi+0x422c4de3],dh
  40c268:	iret   
  40c269:	cwde   
  40c26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26b:	xor    edx,DWORD PTR [edi+0x33]
  40c26e:	mov    al,ds:0x1af49eb5
  40c273:	cs (bad) 
  40c275:	idiv   DWORD PTR [ebp+0x4f50cc27]
  40c27b:	sub    ebx,DWORD PTR [edi-0x16]
  40c27e:	call   0xb9fa:0xea07b2a0
  40c285:	imul   ebp,ebx,0xdca99f53
  40c28b:	inc    esp
  40c28c:	icebp  
  40c28d:	cmp    BYTE PTR [eax+0x4c2c9d],dl
  40c293:	(bad)  
  40c294:	sti    
  40c295:	bound  edi,QWORD PTR [esi-0x37d1ebd2]
  40c29b:	rcl    DWORD PTR [edi+0x6c669f20],cl
  40c2a1:	out    0x32,al
  40c2a3:	and    ebp,DWORD PTR ds:0xc32c8866
  40c2a9:	int3   
  40c2aa:	or     ebx,0x1f
  40c2ad:	inc    esi
  40c2ae:	(bad)  [ebp+0x19]
  40c2b1:	mov    ecx,0x7b63ae6c
  40c2b6:	mov    ebx,0xf7a20dbe
  40c2bb:	mov    ah,0xec
  40c2bd:	mov    cl,0xe7
  40c2bf:	(bad)  
  40c2c0:	nop
  40c2c1:	pop    ebx
  40c2c2:	xor    eax,0x458714
  40c2c7:	call   0xacd8:0x7f75f941
  40c2ce:	lds    ebx,FWORD PTR [ebp-0x335afbcd]
  40c2d4:	push   eax
  40c2d5:	rol    BYTE PTR [edi],1
  40c2d7:	mov    eax,0x173130f
  40c2dc:	lea    ecx,es:[eax]
  40c2df:	cwde   
  40c2e0:	xor    eax,0x3d6c2cc0
  40c2e5:	loop   0x40c2cf
  40c2e7:	or     ecx,DWORD PTR [edi-0xc]
  40c2ea:	xor    DWORD PTR [esi+0x6a],edx
  40c2ed:	pop    esi
  40c2ee:	push   0xe1b6da12
  40c2f3:	inc    edi
  40c2f4:	cli    
  40c2f5:	pop    esp
  40c2f6:	fsub   st(3),st
  40c2f8:	jbe    0x40c2b5
  40c2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fb:	push   ebx
  40c2fc:	imul   esp,DWORD PTR [esp+eiz*4],0x1af9e72d
  40c303:	bswap  esi
  40c305:	ja     0x40c29f
  40c307:	jne    0x40c2b1
  40c309:	hlt    
  40c30a:	aaa    
  40c30b:	inc    ebx
  40c30c:	adc    eax,0xa3e609ee
  40c311:	mov    ebp,DWORD PTR [ebx]
  40c313:	retf   
  40c314:	xor    BYTE PTR [edi-0x1423e7d3],al
  40c31a:	xchg   edx,eax
  40c31b:	ds inc ebp
  40c31d:	mov    esp,0xc9321418
  40c322:	xchg   ecx,eax
  40c323:	sub    dh,BYTE PTR [bx+di+0x1b0b]
  40c328:	jns    0x40c388
  40c32a:	jg     0x40c317
  40c32c:	pop    edx
  40c32d:	mov    ebx,ecx
  40c32f:	les    edx,FWORD PTR [eax-0x6f]
  40c332:	stc    
  40c333:	mov    dh,0xed
  40c335:	push   ebp
  40c336:	sbb    al,0x9a
  40c338:	xor    DWORD PTR [edi*8-0x77bc3175],edx
  40c33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c340:	(bad)  
  40c341:	(bad)  
  40c342:	scas   al,BYTE PTR es:[edi]
  40c343:	jae    0x40c382
  40c345:	adc    al,0x25
  40c347:	jmp    0x40c301
  40c349:	inc    edx
  40c34a:	in     eax,dx
  40c34b:	loopne 0x40c301
  40c34d:	clc    
  40c34e:	or     al,0x25
  40c350:	lahf   
  40c351:	fs dec ecx
  40c353:	loopne 0x40c305
  40c355:	stos   DWORD PTR es:[edi],eax
  40c356:	inc    esp
  40c357:	dec    ebx
  40c358:	mov    eax,ds:0x4fdaa27a
  40c35d:	dec    ecx
  40c35e:	mov    al,0xf0
  40c360:	inc    esi
  40c361:	das    
  40c362:	int3   
  40c363:	test   DWORD PTR [edi+edx*8-0x13fbabe],0x6d61e08a
  40c36e:	adc    ebp,DWORD PTR [ecx-0x89f8c3d]
  40c374:	and    al,0x4
  40c376:	and    esi,ebp
  40c378:	imul   ecx,DWORD PTR [edi],0x9c287f4c
  40c37e:	lods   eax,DWORD PTR ds:[esi]
  40c37f:	pop    ebx
  40c380:	jbe    0x40c368
  40c382:	push   0xbff73ec5
  40c387:	dec    ecx
  40c388:	fisub  WORD PTR [ebx]
  40c38a:	add    ebp,edi
  40c38c:	sub    DWORD PTR [esi-0x66],ecx
  40c38f:	stc    
  40c390:	lahf   
  40c391:	add    eax,0x97fcf989
  40c396:	cmp    al,0xd4
  40c398:	push   0x6b
  40c39a:	out    0x80,eax
  40c39c:	scas   al,BYTE PTR es:[edi]
  40c39d:	scas   al,BYTE PTR es:[edi]
  40c39e:	pop    edx
  40c39f:	(bad)  
  40c3a0:	jbe    0x40c324
  40c3a2:	jb     0x40c339
  40c3a4:	ss ins DWORD PTR es:[edi],dx
  40c3a6:	push   ss
  40c3a7:	loop   0x40c415
  40c3a9:	iret   
  40c3aa:	mov    WORD PTR [eax+0x1cd6f860],es
  40c3b0:	add    eax,DWORD PTR [edi]
  40c3b2:	xor    DWORD PTR [esi-0x779fac84],0xffffff92
  40c3b9:	ins    BYTE PTR es:[edi],dx
  40c3ba:	mov    DWORD PTR [ebx],esi
  40c3bc:	pop    edi
  40c3bd:	or     al,0xe3
  40c3bf:	rol    BYTE PTR ds:0xc05fa9cc,0xb5
  40c3c6:	(bad)  
  40c3c7:	cmc    
  40c3c8:	cwde   
  40c3c9:	repz popf 
  40c3cb:	mov    edi,0xa3525986
  40c3d0:	lods   al,BYTE PTR ds:[si]
  40c3d2:	adc    edi,ebx
  40c3d4:	pop    esi
  40c3d5:	imul   ebx,DWORD PTR [edi-0x64454b8a],0x8fc5b1c4
  40c3df:	cwde   
  40c3e0:	sbb    al,0x5d
  40c3e2:	aad    0x2d
  40c3e4:	into   
  40c3e5:	pop    edi
  40c3e6:	outs   dx,BYTE PTR ds:[esi]
  40c3e7:	pushf  
  40c3e8:	dec    edx
  40c3e9:	mov    ebx,0xa9480248
  40c3ee:	pop    ds
  40c3ef:	enter  0xa62e,0x5c
  40c3f3:	pop    esi
  40c3f4:	or     al,0x4b
  40c3f6:	pop    eax
  40c3f7:	mov    ah,0x4b
  40c3f9:	and    DWORD PTR [edi-0x730829b3],edi
  40c3ff:	lods   al,BYTE PTR ds:[esi]
  40c400:	adc    al,0x44
  40c402:	jb     0x40c3fb
  40c404:	add    edx,DWORD PTR [edi+0x4917a1]
  40c40a:	lock push ebp
  40c40c:	fisttp WORD PTR [ebp-0x74]
  40c40f:	in     eax,0x3
  40c411:	and    ch,cl
  40c413:	sub    al,0xe8
  40c415:	pop    es
  40c416:	jmp    0x67781d96
  40c41b:	in     al,dx
  40c41c:	lods   al,BYTE PTR ds:[esi]
  40c41d:	aas    
  40c41e:	jecxz  0x40c436
  40c420:	pop    ss
  40c421:	mov    esp,0xde9e2e4c
  40c426:	jnp    0x40c482
  40c428:	jo     0x40c44e
  40c42a:	lods   al,BYTE PTR ds:[esi]
  40c42b:	jg     0x40c4a5
  40c42d:	mov    ebx,0x5e884dd7
  40c432:	in     eax,0x19
  40c434:	clc    
  40c435:	mov    ah,0x91
  40c437:	sbb    edx,edi
  40c439:	les    ebx,FWORD PTR [ecx-0x1feef889]
  40c43f:	loope  0x40c4b3
  40c441:	xor    DWORD PTR [esi+0xc78769f],edi
  40c447:	rcr    cl,1
  40c449:	push   edi
  40c44a:	xchg   edi,eax
  40c44b:	sub    ebx,DWORD PTR [ebp-0x7f]
  40c44e:	mov    eax,0xc8ecbf6f
  40c453:	push   ecx
  40c454:	outs   dx,BYTE PTR ds:[esi]
  40c455:	jae    0x40c43e
  40c457:	pop    ebx
  40c458:	mov    ebp,0x8a601927
  40c45d:	sub    al,0x73
  40c45f:	pop    ebx
  40c460:	rol    DWORD PTR [edi-0x288e757],1
  40c466:	dec    ebx
  40c467:	repnz pop ss
  40c469:	mov    es,WORD PTR [edx-0x17]
  40c46c:	fidivr DWORD PTR [esi+0x5]
  40c46f:	imul   esp,DWORD PTR [ecx],0x44e20d2a
  40c475:	imul   ebp,esi,0xffffff83
  40c478:	cmp    DWORD PTR [esi],ebx
  40c47a:	ins    BYTE PTR es:[edi],dx
  40c47b:	sti    
  40c47c:	sub    ecx,DWORD PTR [esi+0xc]
  40c47f:	cmp    al,0xd
  40c481:	test   DWORD PTR [ebp-0x63499a58],0xcd3d069f
  40c48b:	rol    DWORD PTR [ebx+0x6038c4bf],1
  40c491:	sub    edx,DWORD PTR [ebp+esi*2-0x722b23c9]
  40c498:	fdivr  QWORD PTR [ebp-0x19c48127]
  40c49e:	lahf   
  40c49f:	outs   dx,DWORD PTR ds:[esi]
  40c4a0:	or     BYTE PTR [eax+ebp*8-0x19c965ef],al
  40c4a7:	mov    bh,BYTE PTR [eax+eiz*8+0x4efac08e]
  40c4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4af:	clc    
  40c4b0:	ficom  WORD PTR [ebx+0x0]
  40c4b3:	enter  0x6422,0x1f
  40c4b7:	adc    eax,0x96785e29
  40c4bc:	add    BYTE PTR [ebx+edi*8],al
  40c4bf:	(bad)  
  40c4c0:	pop    esp
  40c4c1:	push   0x62
  40c4c3:	mov    cl,0x8f
  40c4c5:	push   edx
  40c4c6:	fxch   st(4)
  40c4c8:	inc    esi
  40c4c9:	jle    0x40c4ba
  40c4cb:	clc    
  40c4cc:	xchg   BYTE PTR [eax+0x1caedd75],al
  40c4d2:	js     0x40c4c9
  40c4d4:	cwde   
  40c4d5:	inc    ecx
  40c4d6:	add    edx,0x1
  40c4d9:	ret    
  40c4da:	xor    al,0x9f
  40c4dc:	hlt    
  40c4dd:	sbb    edx,DWORD PTR [ecx-0x6761762e]
  40c4e3:	adc    esp,edi
  40c4e5:	cmp    ah,dh
  40c4e7:	scas   al,BYTE PTR es:[edi]
  40c4e8:	sahf   
  40c4e9:	pop    ds
  40c4ea:	in     eax,dx
  40c4eb:	sub    edx,esp
  40c4ed:	push   ss
  40c4ee:	adc    dl,BYTE PTR [ebx+0x792c340e]
  40c4f4:	pop    ebx
  40c4f5:	fidiv  DWORD PTR [ebp-0x4c]
  40c4f8:	cld    
  40c4f9:	stc    
  40c4fa:	out    dx,eax
  40c4fb:	rol    BYTE PTR fs:[ebx],1
  40c4fe:	and    BYTE PTR [esi-0x4],dl
  40c501:	mov    dh,0xbe
  40c503:	inc    ebp
  40c504:	and    al,0x81
  40c506:	jle    0x40c4d6
  40c508:	dec    eax
  40c509:	test   eax,esi
  40c50b:	fiadd  DWORD PTR [ebx-0x30]
  40c50e:	mov    ebp,0x735c489
  40c513:	pop    esp
  40c514:	ds mov bl,0x73
  40c517:	xlat   BYTE PTR ds:[ebx]
  40c518:	sub    al,0x47
  40c51a:	nop
  40c51b:	sbb    al,0x41
  40c51d:	pop    edx
  40c51e:	mov    eax,ds:0x563658e5
  40c523:	stc    
  40c524:	(bad)  
  40c525:	daa    
  40c526:	adc    al,0xb2
  40c528:	(bad)  
  40c529:	mov    esi,0x76a79abb
  40c52e:	call   ebx
  40c530:	cli    
  40c531:	dec    esp
  40c532:	lahf   
  40c533:	inc    eax
  40c534:	scas   al,BYTE PTR es:[edi]
  40c535:	sub    dh,dh
  40c537:	or     eax,0xd3e71621
  40c53c:	pop    ds
  40c53d:	dec    ecx
  40c53e:	inc    ebp
  40c53f:	mov    ds:0x13938c6d,eax
  40c544:	adc    esp,esp
  40c546:	inc    ebx
  40c547:	mov    eax,ds:0xe2f2aa75
  40c54c:	jno    0x40c568
  40c54e:	test   BYTE PTR ds:0x568d2563,bl
  40c554:	rcr    ah,1
  40c556:	pop    ds
  40c557:	sar    ecx,0x2f
  40c55a:	in     eax,dx
  40c55b:	aam    0x9b
  40c55d:	or     al,0x77
  40c55f:	mov    edi,edx
  40c561:	or     al,0x8f
  40c563:	cwde   
  40c564:	sbb    edi,eax
  40c566:	jg     0x40c545
  40c568:	leave  
  40c569:	or     eax,0x8d3d0fbd
  40c56e:	arpl   WORD PTR [esi+0x0],ax
  40c571:	mov    edx,0x8a227123
  40c576:	arpl   WORD PTR [ecx-0x7195402b],bx
  40c57c:	mov    BYTE PTR ds:0x41caa7c0,bh
  40c582:	pop    es
  40c583:	(bad)  
  40c584:	mov    eax,ds:0xbe6e7ac
  40c589:	ffreep st(4)
  40c58b:	les    eax,FWORD PTR [ebx+0x4584415d]
  40c591:	xor    BYTE PTR [edx+0xb],dl
  40c594:	fild   QWORD PTR [ebx-0x39]
  40c597:	jne    0x40c546
  40c599:	xchg   DWORD PTR [ecx-0x1d],ebx
  40c59c:	aaa    
  40c59d:	xchg   ebp,eax
  40c59e:	loope  0x40c5e4
  40c5a0:	mov    ebp,0x5d7b7994
  40c5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a6:	and    BYTE PTR [ebp-0x2c178bf2],dh
  40c5ac:	jno    0x40c57b
  40c5ae:	and    al,BYTE PTR [ecx+0x2bcb0eb8]
  40c5b4:	cmp    bl,BYTE PTR [eax-0x44]
  40c5b7:	mov    BYTE PTR [eax+0x3ff40dd7],dl
  40c5bd:	jmp    0xff0a2d0e
  40c5c2:	sbb    edi,DWORD PTR [ecx-0x16]
  40c5c5:	out    0xc,eax
  40c5c7:	sar    al,0x3b
  40c5ca:	cmp    BYTE PTR [edx-0x50d2efe5],bh
  40c5d0:	retf   
  40c5d1:	shl    DWORD PTR [edi],1
  40c5d3:	repz inc eax
  40c5d5:	sbb    edi,ebx
  40c5d7:	xor    eax,0x8a46a70b
  40c5dc:	dec    edi
  40c5dd:	pusha  
  40c5de:	pop    ebx
  40c5df:	in     eax,dx
  40c5e0:	dec    eax
  40c5e1:	fmul   st(7),st
  40c5e3:	push   ecx
  40c5e4:	jp     0x40c609
  40c5e6:	test   BYTE PTR [edx+0x4f23f532],0x21
  40c5ed:	dec    esi
  40c5ee:	add    BYTE PTR [ecx+0x4b],ch
  40c5f1:	xor    esi,eax
  40c5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5f4:	adc    DWORD PTR [ebp-0x48cfd0c],edi
  40c5fa:	in     al,0xfd
  40c5fc:	mov    al,ds:0x16c0d09d
  40c601:	sub    BYTE PTR [edi+ecx*2+0x604c5398],0x87
  40c609:	cmp    esp,DWORD PTR [edx+0x14]
  40c60c:	mov    BYTE PTR [edi+0x17dc5582],cl
  40c612:	cmp    dh,BYTE PTR [esi]
  40c614:	in     al,dx
  40c615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c616:	adc    DWORD PTR [esi-0x59c54fc0],edx
  40c61c:	xchg   edi,edx
  40c61e:	push   ss
  40c61f:	fild   WORD PTR [ecx]
  40c621:	cs cwde 
  40c623:	inc    edx
  40c624:	push   es
  40c625:	das    
  40c626:	aaa    
  40c627:	push   0xed0a763e
  40c62c:	mov    edx,0x76b5ee88
  40c631:	loopne 0x40c5ba
  40c633:	jb     0x40c630
  40c635:	inc    edi
  40c636:	add    al,0xd5
  40c638:	in     al,0x11
  40c63a:	imul   ecx,DWORD PTR [ebx-0x68603d36],0x9cc13fe1
  40c644:	call   DWORD PTR [edx+0x6f8507f7]
  40c64a:	inc    eax
  40c64b:	outs   dx,DWORD PTR ds:[esi]
  40c64c:	in     eax,dx
  40c64d:	mov    esi,0xdaf43360
  40c652:	push   esi
  40c653:	pop    esi
  40c654:	add    DWORD PTR [ecx],ecx
  40c656:	mov    ebx,ebp
  40c658:	and    al,0x6b
  40c65a:	in     eax,0x6
  40c65c:	inc    esp
  40c65d:	jp     0x40c60a
  40c65f:	sbb    eax,0x1b6a6027
  40c664:	jl     0x40c6c3
  40c666:	sub    DWORD PTR ds:0x37efb5d9,edx
  40c66c:	fidivr WORD PTR [ebp+0x6c]
  40c66f:	dec    edi
  40c670:	scas   al,BYTE PTR es:[edi]
  40c671:	mov    ds:0xe1693304,eax
  40c676:	mov    al,0x2f
  40c678:	xlat   BYTE PTR ds:[ebx]
  40c679:	std    
  40c67a:	hlt    
  40c67b:	jg     0x40c606
  40c67d:	jbe    0x40c67a
  40c67f:	icebp  
  40c680:	pop    ecx
  40c681:	ja     0x40c6cd
  40c683:	fwait
  40c684:	int3   
  40c685:	rol    BYTE PTR [edi],0x89
  40c688:	cs enter 0x2413,0xec
  40c68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c68e:	add    ebx,DWORD PTR [ebp+0x24]
  40c691:	(bad)  
  40c693:	stos   DWORD PTR es:[edi],eax
  40c694:	and    dl,ah
  40c696:	aaa    
  40c697:	mov    al,ds:0x7a46ff7c
  40c69c:	and    edx,ecx
  40c69e:	push   eax
  40c69f:	js     0x40c65f
  40c6a1:	adc    eax,ebx
  40c6a3:	loop   0x40c69b
  40c6a5:	push   esi
  40c6a6:	jg     0x40c661
  40c6a8:	bound  ecx,QWORD PTR [eax-0xd8cb9bf]
  40c6ae:	int    0xad
  40c6b0:	mov    ss:0x2ad3a017,al
  40c6b6:	mov    ecx,0xbe7eb612
  40c6bb:	xor    ebx,esp
  40c6bd:	xchg   ebx,eax
  40c6be:	inc    edi
  40c6bf:	cs cdq 
  40c6c1:	mov    ch,0x7
  40c6c3:	xor    ebx,edx
  40c6c5:	add    al,0xa1
  40c6c7:	(bad)  
  40c6c8:	lods   al,BYTE PTR ds:[esi]
  40c6c9:	das    
  40c6ca:	mov    ah,0xd5
  40c6cc:	(bad)  
  40c6cd:	clc    
  40c6ce:	mov    ebp,0xb27a4eb4
  40c6d3:	aam    0x23
  40c6d5:	lock sub DWORD PTR [ecx-0x6c527aac],edi
  40c6dc:	xchg   ebp,eax
  40c6dd:	and    al,0x64
  40c6df:	add    esi,ecx
  40c6e1:	add    cl,BYTE PTR [ebx+0x78d47bb3]
  40c6e7:	clc    
  40c6e8:	cmc    
  40c6e9:	leave  
  40c6ea:	or     edi,DWORD PTR [ebx-0x799a41c7]
  40c6f0:	cmp    DWORD PTR [edi-0x669cfb6e],ebp
  40c6f6:	or     al,0xdf
  40c6f8:	sbb    bl,BYTE PTR [edi+esi*8]
  40c6fb:	(bad)  
  40c6fc:	cmp    eax,0x512d1d19
  40c701:	adc    BYTE PTR [eax-0x5a],0xff
  40c705:	push   ecx
  40c706:	xchg   ecx,eax
  40c707:	leave  
  40c708:	inc    esp
  40c709:	xchg   esp,eax
  40c70a:	mov    eax,ds:0x91572a39
  40c70f:	pop    ecx
  40c710:	out    dx,al
  40c711:	aam    0x97
  40c713:	(bad)  
  40c715:	out    dx,al
  40c716:	test   DWORD PTR [ebx],ebp
  40c718:	mov    bh,0x4
  40c71a:	ret    0x9349
  40c71d:	(bad)  
  40c71e:	cmc    
  40c71f:	loope  0x40c6fe
  40c721:	stc    
  40c722:	and    cl,cl
  40c724:	jg     0x40c703
  40c726:	add    esp,DWORD PTR [edx]
  40c728:	push   edx
  40c729:	jmp    DWORD PTR [edi+0x61]
  40c72c:	iret   
  40c72d:	call   0xeaf9b2d9
  40c732:	in     eax,dx
  40c733:	add    esp,edx
  40c735:	das    
  40c736:	aam    0xc3
  40c738:	xor    al,0xf4
  40c73a:	sub    DWORD PTR [esi+eax*2-0x44381780],ebx
  40c741:	push   cs
  40c742:	cmp    al,0xbc
  40c744:	add    eax,0x77a110b3
  40c749:	push   esi
  40c74a:	test   BYTE PTR [edi+0x7c],bh
  40c74d:	pop    ecx
  40c74e:	stos   DWORD PTR es:[edi],eax
  40c74f:	sbb    eax,DWORD PTR [ecx]
  40c751:	inc    eax
  40c752:	cmp    al,0xc
  40c754:	mov    edi,0x5534c47f
  40c759:	out    0xf,al
  40c75b:	push   ebp
  40c75c:	jmp    0xdcb367eb
  40c761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c762:	loopne 0x40c72d
  40c764:	scas   eax,DWORD PTR es:[edi]
  40c765:	jmp    0x4cc529de
  40c76a:	sub    al,0x65
  40c76c:	mov    ch,0xce
  40c76e:	jmp    0x36cae463
  40c773:	adc    DWORD PTR [ecx+ebp*4],edi
  40c776:	arpl   dx,cx
  40c778:	rcl    edi,1
  40c77a:	inc    esp
  40c77b:	mov    ebp,0x62a891f6
  40c780:	es push 0x8861269
  40c786:	inc    edi
  40c787:	fstp   TBYTE PTR [esi]
  40c789:	adc    al,0x10
  40c78b:	ja     0x40c771
  40c78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c78e:	pop    edx
  40c78f:	aam    0x69
  40c791:	xchg   edx,eax
  40c792:	dec    cl
  40c794:	mov    ds:0xdd24fd40,eax
  40c799:	daa    
  40c79a:	push   0xffffff98
  40c79c:	sub    DWORD PTR [ebp+0x32],ebx
  40c79f:	mov    edi,0x9114f507
  40c7a4:	int3   
  40c7a5:	inc    esp
  40c7a6:	daa    
  40c7a7:	mov    esp,0x6d84ffff
  40c7ac:	push   ss
  40c7ad:	shr    BYTE PTR [edi],1
  40c7af:	sbb    DWORD PTR [ecx],esp
  40c7b1:	test   ch,dl
  40c7b3:	xchg   esi,eax
  40c7b4:	xor    ebp,DWORD PTR [edx+eax*1-0x4b]
  40c7b8:	stc    
  40c7b9:	and    DWORD PTR [ecx+0x1da5c158],0x23e0f95d
  40c7c3:	pusha  
  40c7c4:	mov    esp,0xa76791c5
  40c7c9:	fwait
  40c7ca:	mov    ds:0x71908386,eax
  40c7cf:	sbb    DWORD PTR [eax-0x63],edi
  40c7d2:	imul   DWORD PTR [edx+0x0]
  40c7d5:	dec    ecx
  40c7d6:	popw   es
  40c7d8:	rcr    BYTE PTR [edi-0x44],1
  40c7db:	test   dh,dl
  40c7dd:	inc    eax
  40c7de:	inc    esi
  40c7df:	ja     0x40c843
  40c7e1:	adc    DWORD PTR [edx+0x43e66665],0xebdb330e
  40c7eb:	push   cs
  40c7ec:	push   ebx
  40c7ed:	xchg   esp,eax
  40c7ee:	daa    
  40c7ef:	cmp    eax,DWORD PTR [eax+eax*1]
  40c7f2:	mov    ss,WORD PTR [edi-0x1ec32f42]
  40c7f8:	pop    edi
  40c7f9:	(bad)  
  40c7fa:	test   eax,0x69e9a5d4
  40c7ff:	pop    esp
  40c800:	clc    
  40c801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c802:	xor    esi,ebp
  40c804:	xor    DWORD PTR [edx+0x2a],ebp
  40c807:	jp     0x40c7d1
  40c809:	sbb    al,0x6f
  40c80b:	xchg   edi,eax
  40c80c:	addr16 fwait
  40c80e:	mov    esi,0x438767a0
  40c813:	stos   DWORD PTR es:[edi],eax
  40c814:	lock mov edi,fs
  40c817:	dec    ebp
  40c818:	mov    edi,0xc8f8ec7f
  40c81d:	scas   al,BYTE PTR es:[edi]
  40c81e:	sub    cl,cl
  40c820:	fwait
  40c821:	int3   
  40c822:	xor    edx,DWORD PTR [ebx]
  40c824:	sub    DWORD PTR [edx+0x3cc4ce3b],ecx
  40c82a:	inc    esi
  40c82b:	push   ebx
  40c82c:	mov    bl,0x15
  40c82e:	inc    esi
  40c82f:	out    dx,al
  40c830:	xchg   DWORD PTR [esi],ebp
  40c832:	rol    DWORD PTR [ebp+esi*2+0x6d],1
  40c836:	push   es
  40c837:	sbb    BYTE PTR [edi],dl
  40c839:	mov    bl,0xaa
  40c83b:	cdq    
  40c83c:	sahf   
  40c83d:	sbb    esi,ebp
  40c83f:	(bad)  
  40c840:	mov    esi,0xf77a77a6
  40c845:	sub    dl,BYTE PTR [ebp-0x53]
  40c848:	(bad)  
  40c849:	sbb    eax,0x1b283e86
  40c84e:	adc    ebp,DWORD PTR [edi+0x4066a09e]
  40c854:	(bad)  
  40c855:	xor    eax,0x96cab4fc
  40c85a:	add    BYTE PTR [esi+0xf],0xf4
  40c85e:	jbe    0x40c817
  40c860:	xor    eax,0x2ff161eb
  40c865:	pusha  
  40c866:	pop    ebx
  40c867:	inc    edx
  40c868:	leave  
  40c869:	push   0xfffffff5
  40c86b:	ficomp WORD PTR fs:[ecx]
  40c86e:	imul   edi,DWORD PTR [ebp-0x33f01669],0xb7895ec1
  40c878:	jmp    0xd1e5:0xe741ff49
  40c87f:	mov    bh,0xcd
  40c881:	not    BYTE PTR [ebx-0x46]
  40c884:	das    
  40c885:	lods   eax,DWORD PTR ds:[esi]
  40c886:	clc    
  40c887:	inc    ecx
  40c888:	cmp    eax,0xe012b1e8
  40c88d:	(bad)  
  40c88f:	and    DWORD PTR [ecx],eax
  40c891:	push   ebp
  40c892:	push   cs
  40c893:	xchg   ecx,eax
  40c894:	stc    
  40c895:	sub    esp,DWORD PTR ds:0x4a5629a7
  40c89b:	outs   dx,BYTE PTR ds:[esi]
  40c89c:	aas    
  40c89d:	sub    ah,bl
  40c89f:	xor    BYTE PTR [esi-0x28],dh
  40c8a2:	cs into 
  40c8a4:	(bad)  [edi]
  40c8a6:	adc    ecx,DWORD PTR [esi-0x2d]
  40c8a9:	dec    ebx
  40c8aa:	mov    ebx,0xaec7f211
  40c8af:	and    ax,0x426c
  40c8b3:	test   al,bh
  40c8b5:	sbb    al,0xd5
  40c8b7:	inc    eax
  40c8b8:	pop    ebp
  40c8b9:	push   es
  40c8ba:	cmp    BYTE PTR es:[ebp+0x42],0x5a
  40c8bf:	and    DWORD PTR [edx],0x6cc34dee
  40c8c5:	loope  0x40c85e
  40c8c7:	sbb    DWORD PTR [esi-0x21],eax
  40c8ca:	clc    
  40c8cb:	jge    0x40c8e3
  40c8cd:	iret   
  40c8ce:	add    eax,ebp
  40c8d0:	int    0xc8
  40c8d2:	xor    eax,0x9bdb3ef7
  40c8d7:	mov    dh,dh
  40c8d9:	lahf   
  40c8da:	mov    dl,0x49
  40c8dc:	pop    edx
  40c8dd:	sub    DWORD PTR [ebp+0x74],ebx
  40c8e0:	xor    eax,DWORD PTR [ebx-0x50]
  40c8e3:	dec    DWORD PTR [esi+0x66edf2d2]
  40c8e9:	aaa    
  40c8ea:	test   al,0x39
  40c8ec:	inc    ecx
  40c8ed:	pushf  
  40c8ee:	mov    ch,0xd1
  40c8f0:	sbb    al,0xf3
  40c8f2:	push   ss
  40c8f3:	jl     0x40c88d
  40c8f5:	jne    0x40c944
  40c8f7:	jno    0x40c895
  40c8f9:	imul   ecx,DWORD PTR [edx+0x65],0xe4467419
  40c900:	out    dx,eax
  40c901:	sbb    ah,dh
  40c903:	aad    0x3c
  40c905:	clc    
  40c906:	sub    al,0x1c
  40c908:	scas   eax,DWORD PTR es:[edi]
  40c909:	rol    DWORD PTR [edx],1
  40c90b:	pop    ecx
  40c90c:	lods   al,BYTE PTR ds:[esi]
  40c90d:	or     bh,BYTE PTR [eax-0x13]
  40c910:	xor    dh,BYTE PTR [eax]
  40c912:	test   BYTE PTR [eax-0x46],al
  40c915:	add    dh,BYTE PTR [ecx+0x31]
  40c918:	sbb    edx,eax
  40c91a:	in     eax,dx
  40c91b:	lds    edi,FWORD PTR [ecx+0xea43940]
  40c921:	jae    0x40c97d
  40c923:	cmp    al,0x7c
  40c925:	pop    esp
  40c926:	call   0xb0b0:0x692cfca
  40c92d:	jns    0x40c973
  40c92f:	mov    dh,0xa2
  40c931:	in     al,0xf6
  40c933:	mov    edi,0xcae69059
  40c938:	add    DWORD PTR [ebx-0x62],edx
  40c93b:	dec    esi
  40c93c:	ss dec esp
  40c93e:	enter  0xa301,0x88
  40c942:	lods   al,BYTE PTR ds:[esi]
  40c943:	cmc    
  40c944:	sbb    al,0x36
  40c946:	ins    DWORD PTR es:[edi],dx
  40c947:	fidiv  DWORD PTR [ecx]
  40c949:	test   al,0x14
  40c94b:	frstpm(287 only) 
  40c94d:	adc    eax,0xcac7c142
  40c952:	mov    ds:0x6445954d,al
  40c957:	(bad)  
  40c958:	iret   
  40c959:	push   0x340a2f23
  40c95e:	in     al,dx
  40c95f:	sub    esp,esi
  40c961:	(bad)  
  40c962:	addr16 hlt 
  40c964:	dec    edx
  40c965:	adc    eax,0xb3414601
  40c96a:	mov    cs,WORD PTR [esi]
  40c96c:	sbb    DWORD PTR [edx-0x13],ebx
  40c96f:	inc    ebx
  40c970:	out    0x2f,al
  40c972:	xor    esp,DWORD PTR [ebx]
  40c974:	push   ss
  40c975:	lock pushf 
  40c977:	cmc    
  40c978:	gs dec esi
  40c97a:	cmp    DWORD PTR [esi+0x70],ebx
  40c97d:	rcl    DWORD PTR [ebp+0x39ee8e0d],1
  40c983:	sti    
  40c984:	mov    dl,0x6a
  40c986:	inc    ecx
  40c987:	stos   BYTE PTR es:[edi],al
  40c988:	retf   0xb4ef
  40c98b:	sar    DWORD PTR ds:[edi+0x40],1
  40c98f:	jmp    0x3505:0x2a7dadbb
  40c996:	jbe    0x40c933
  40c998:	or     eax,0x52191791
  40c99d:	loope  0x40c997
  40c99f:	shr    BYTE PTR [ecx],cl
  40c9a1:	fimul  WORD PTR [esi+0x684f51b6]
  40c9a7:	pop    es
  40c9a8:	aaa    
  40c9a9:	pop    edi
  40c9aa:	or     al,0x7c
  40c9ac:	hlt    
  40c9ad:	add    edx,0xebd7c617
  40c9b3:	mov    al,ds:0x9904db8a
  40c9b8:	(bad)  
  40c9ba:	int    0x13
  40c9bc:	jmp    0x34b7cfe0
  40c9c1:	jb     0x40c9c8
  40c9c3:	cmp    DWORD PTR [edi+0x7d],ebx
  40c9c6:	and    BYTE PTR [esi+esi*1],dl
  40c9c9:	adc    ah,BYTE PTR [eax+0x79fded88]
  40c9cf:	rcr    ebx,1
  40c9d1:	sbb    eax,0x3633d7cb
  40c9d6:	inc    esi
  40c9d7:	xor    BYTE PTR [ecx-0x42b94636],0xaf
  40c9de:	lods   al,BYTE PTR ds:[esi]
  40c9df:	inc    esi
  40c9e0:	(bad)  
  40c9e1:	adc    BYTE PTR [ebx],0xb4
  40c9e4:	push   ecx
  40c9e5:	pop    edx
  40c9e6:	data16 cmp ah,dh
  40c9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ea:	(bad)
  40c9ee:	jecxz  0x40c993
  40c9f0:	dec    ebp
  40c9f1:	scas   al,BYTE PTR es:[edi]
  40c9f2:	inc    edx
  40c9f3:	mov    ch,0xda
  40c9f5:	push   ebx
  40c9f6:	cmc    
  40c9f7:	(bad)  
  40c9f8:	jae    0x40ca66
  40c9fa:	push   cs
  40c9fb:	xor    esp,DWORD PTR [ecx+0x74]
  40c9fe:	xor    eax,DWORD PTR [esi+ecx*4]
  40ca01:	enter  0xf0aa,0xae
  40ca05:	cmp    BYTE PTR [eax],0xf6
  40ca08:	fdivrp st(4),st
  40ca0a:	jmp    0x501c:0xdbb865f6
  40ca11:	xchg   ebx,eax
  40ca12:	add    bh,BYTE PTR [edx-0x683243d1]
  40ca18:	inc    ebx
  40ca19:	and    al,0xc5
  40ca1b:	adc    BYTE PTR [edi+0x6f],cl
  40ca1e:	mov    al,ds:0x5efa3c95
  40ca23:	mov    al,0x0
  40ca25:	shl    BYTE PTR [edx-0x5a],1
  40ca28:	mov    cl,0xcb
  40ca2a:	lock (bad) 
  40ca2c:	addr16 push cs
  40ca2e:	mov    dh,0x60
  40ca30:	das    
  40ca31:	push   eax
  40ca32:	stos   BYTE PTR es:[edi],al
  40ca33:	scas   eax,DWORD PTR es:[edi]
  40ca34:	pop    ebx
  40ca35:	xchg   esp,eax
  40ca36:	lods   eax,DWORD PTR ds:[esi]
  40ca37:	mov    al,0xfc
  40ca39:	int3   
  40ca3a:	std    
  40ca3b:	cmp    ebx,DWORD PTR [ebp+0x68dfda6e]
  40ca41:	push   ds
  40ca42:	stos   DWORD PTR es:[edi],eax
  40ca43:	lods   al,BYTE PTR ds:[esi]
  40ca44:	fnstenv [edx+0x19]
  40ca47:	into   
  40ca48:	xchg   esi,eax
  40ca49:	jge    0x40ca01
  40ca4b:	mov    ds:0x709ea5cb,al
  40ca50:	adc    DWORD PTR [ecx],ebp
  40ca52:	fsub   QWORD PTR [ebx-0x68c36a6a]
  40ca58:	ja     0x97cb7101
  40ca5e:	out    dx,al
  40ca5f:	mov    ecx,0xd263dc29
  40ca64:	icebp  
  40ca65:	fidiv  WORD PTR [edi]
  40ca67:	fiadd  DWORD PTR [eax]
  40ca69:	xchg   ebx,eax
  40ca6a:	mov    edx,0x6f6c0724
  40ca6f:	aas    
  40ca70:	xor    DWORD PTR [edx],edi
  40ca72:	imul   ebp,DWORD PTR [ebp-0x3],0xda12dfca
  40ca79:	test   eax,0x2bfcaea5
  40ca7e:	sbb    al,0x33
  40ca80:	adc    esp,esi
  40ca82:	mul    edx
  40ca84:	not    DWORD PTR [edi-0x6c]
  40ca87:	inc    esi
  40ca88:	push   es
  40ca89:	int3   
  40ca8a:	dec    edi
  40ca8b:	jmp    0xe41eeef6
  40ca90:	sub    al,0xeb
  40ca92:	outs   dx,DWORD PTR ds:[esi]
  40ca93:	dec    ecx
  40ca94:	mov    cl,0xf9
  40ca96:	cmp    DWORD PTR [ecx-0x75644a22],esi
  40ca9c:	cmp    BYTE PTR cs:[edi-0x7d5b2349],al
  40caa3:	mov    ds:0xe5cdca90,eax
  40caa8:	leave  
  40caa9:	pop    es
  40caaa:	lods   al,BYTE PTR ds:[esi]
  40caab:	in     eax,dx
  40caac:	mov    al,ds:0x8b18012f
  40cab1:	inc    ebp
  40cab2:	cld    
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xd5bb0f9,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40ce58
  40cde1:	or     ebx,ebp
  40cde3:	sub    eax,0xb678164e
  40cde8:	dec    ebp
  40cde9:	je     0x40cd95
  40cdeb:	inc    ebx
  40cdec:	iret   
  40cded:	cmp    al,0x7e
  40cdef:	rcl    BYTE PTR [ebx+0x4c],0x92
  40cdf3:	pop    ecx
  40cdf4:	jno    0x40ce4a
  40cdf6:	daa    
  40cdf7:	in     eax,dx
  40cdf8:	pushf  
  40cdf9:	jb     0x40ce69
  40cdfb:	shr    DWORD PTR [eax+0x36],1
  40cdfe:	stc    
  40cdff:	push   eax
  40ce00:	es sub edi,ecx
  40ce03:	outs   dx,DWORD PTR ds:[esi]
  40ce04:	dec    ebx
  40ce05:	shl    ebx,cl
  40ce07:	dec    ebp
  40ce08:	adc    eax,0x67929805
  40ce0d:	jg     0x40cda6
  40ce0f:	fdivr  QWORD PTR [eax]
  40ce11:	in     eax,dx
  40ce12:	gs jp  0x40cdf6
  40ce15:	xor    al,0x32
  40ce17:	jmp    0x66b9:0xb0f4a99d
  40ce1e:	jmp    0x40cded
  40ce20:	jnp    0x40ce2e
  40ce22:	out    0xae,eax
  40ce24:	xchg   esp,eax
  40ce25:	jmp    0x40ce23
  40ce27:	fwait
  40ce28:	cmp    DWORD PTR [edi+ebx*4],ecx
  40ce2b:	push   0x2f67848c
  40ce30:	adc    al,BYTE PTR cs:[ecx-0x1c]
  40ce34:	rcl    BYTE PTR [edi-0x72595cf0],cl
  40ce3a:	mov    esi,0x9b422ce
  40ce3f:	pop    eax
  40ce40:	push   0xffffffa9
  40ce42:	and    eax,0xfe047f32
  40ce47:	scas   eax,DWORD PTR es:[edi]
  40ce48:	inc    esp
  40ce49:	lods   eax,DWORD PTR ds:[esi]
  40ce4a:	xchg   ecx,eax
  40ce4b:	xchg   ebx,eax
  40ce4c:	push   edx
  40ce4d:	into   
  40ce4e:	nop
  40ce4f:	clc    
  40ce50:	loope  0x40ce1d
  40ce52:	retf   
  40ce53:	daa    
  40ce54:	lahf   
  40ce55:	not    BYTE PTR [eax]
  40ce57:	lods   eax,DWORD PTR ds:[esi]
  40ce58:	mov    edx,0xf32304e1
  40ce5d:	jne    0x40ce39
  40ce5f:	mov    ch,bh
  40ce61:	sub    bl,ch
  40ce63:	mov    esi,DWORD PTR [ecx-0x65]
  40ce66:	rcl    BYTE PTR [edx-0x1d],cl
  40ce69:	repnz iret 
  40ce6b:	xlat   BYTE PTR ds:[ebx]
  40ce6c:	imul   edi,DWORD PTR [ecx-0x5],0x2f
  40ce70:	add    eax,eax
  40ce72:	(bad)  
  40ce73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce74:	iret   
  40ce75:	push   edx
  40ce76:	or     al,0x7
  40ce78:	aaa    
  40ce79:	fcmovbe st,st(0)
  40ce7b:	stos   DWORD PTR es:[edi],eax
  40ce7c:	push   0x3f
  40ce7e:	out    0x7a,eax
  40ce80:	lods   al,BYTE PTR ds:[esi]
  40ce81:	test   eax,0x51b34fa0
  40ce86:	jl     0x40cee5
  40ce88:	dec    edi
  40ce89:	fiadd  WORD PTR [eax]
  40ce8b:	shl    DWORD PTR [ecx-0x4],0x1a
  40ce8f:	adc    bh,BYTE PTR [ebp-0x46]
  40ce92:	inc    eax
  40ce93:	ror    DWORD PTR ds:0x12ffd92d,0xa3
  40ce9a:	mov    ds,WORD PTR [edi-0x26]
  40ce9d:	jb     0x40ce87
  40ce9f:	jmp    0x4f4e0fa7
  40cea4:	mov    ah,0xa7
  40cea6:	cmp    eax,0x80cac6a2
  40ceab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceac:	push   ss
  40cead:	push   eax
  40ceae:	dec    ebx
  40ceaf:	jl     0x40ce40
  40ceb1:	and    bl,BYTE PTR [esi]
  40ceb3:	jbe    0x40cef2
  40ceb5:	push   eax
  40ceb6:	fist   WORD PTR [ecx+0x9]
  40ceb9:	int3   
  40ceba:	retf   0xe40b
  40cebd:	leave  
  40cebe:	mov    ebp,0x69a7f2b0
  40cec3:	(bad)  
  40cec4:	sub    BYTE PTR [eax-0x51],dh
  40cec7:	cwde   
  40cec8:	or     eax,0x15d3356f
  40cecd:	ds sub ebp,0x1940d79
  40ced4:	lock ins DWORD PTR es:[edi],dx
  40ced6:	jl     0x40cedc
  40ced8:	or     al,0xd5
  40ceda:	jl     0x40ce64
  40cedc:	mov    cl,0xb7
  40cede:	or     DWORD PTR [edx-0x49],edi
  40cee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee2:	or     eax,0xec4b6f29
  40cee7:	mov    esi,0x38f8b889
  40ceec:	dec    ebp
  40ceed:	rcl    ch,0x6c
  40cef0:	loope  0x40cf49
  40cef2:	and    esp,DWORD PTR [ecx+ebx*2+0x3e]
  40cef6:	and    al,0xa2
  40cef8:	out    dx,al
  40cef9:	arpl   WORD PTR [eax+0x1],di
  40cefc:	(bad)  
  40cefd:	(bad)  
  40cefe:	in     al,dx
  40ceff:	inc    ebp
  40cf00:	dec    edi
  40cf01:	xchg   BYTE PTR [ecx+0x5a28c805],al
  40cf07:	pop    di
  40cf09:	pusha  
  40cf0a:	rcr    BYTE PTR [edi+0x2b17f378],1
  40cf10:	mov    ch,0xd9
  40cf12:	imul   edx,DWORD PTR [esi],0xffffffad
  40cf15:	pop    es
  40cf16:	das    
  40cf17:	rcl    BYTE PTR [eax],1
  40cf19:	out    0x6c,eax
  40cf1b:	mov    edx,0x6dbfd242
  40cf20:	pop    edx
  40cf21:	jecxz  0x40cf70
  40cf23:	fist   WORD PTR [edx-0x6b]
  40cf26:	xchg   ecx,eax
  40cf27:	pushf  
  40cf28:	icebp  
  40cf29:	popf   
  40cf2a:	retf   
  40cf2b:	repnz and edx,DWORD PTR [ebx+eiz*2+0x3a]
  40cf30:	xor    ebp,DWORD PTR [ecx-0x7e]
  40cf33:	mov    ebp,es
  40cf35:	rcr    ch,cl
  40cf37:	shl    BYTE PTR ds:0x824cf3d4,1
  40cf3d:	lea    ecx,[ecx+0x18]
  40cf40:	push   esp
  40cf41:	and    eax,0x25228daf
  40cf46:	jle    0x40cf66
  40cf48:	push   es
  40cf49:	(bad)  
  40cf4a:	fucomip st,st(3)
  40cf4c:	jl     0x40cee6
  40cf4e:	xchg   edx,eax
  40cf4f:	jnp    0x40cfcc
  40cf51:	inc    ebx
  40cf52:	aad    0x54
  40cf54:	push   ss
  40cf55:	xchg   ebx,eax
  40cf56:	in     eax,dx
  40cf57:	pop    ss
  40cf58:	enter  0xb416,0x71
  40cf5c:	jbe    0x40cf1f
  40cf5e:	xor    ah,ah
  40cf60:	push   esi
  40cf61:	test   al,0x8f
  40cf63:	sar    DWORD PTR [edi-0x38ef14e4],cl
  40cf69:	sbb    al,0xd4
  40cf6b:	sti    
  40cf6c:	cdq    
  40cf6d:	cwde   
  40cf6e:	and    ebx,eax
  40cf70:	mov    cl,0xbb
  40cf72:	inc    ebx
  40cf73:	fstp   st(4)
  40cf75:	fs jmp 0x40cf46
  40cf78:	loopne 0x40cf19
  40cf7a:	repnz adc BYTE PTR [edi+ebp*1-0x62e6e0b5],bl
  40cf82:	mov    ebp,0xa64fca2a
  40cf87:	dec    esp
  40cf88:	outs   dx,BYTE PTR ds:[esi]
  40cf89:	mov    ecx,0x6fbdd81a
  40cf8e:	mov    al,ds:0x1152f735
  40cf93:	fsubr  DWORD PTR [ebx+0x36a8e66f]
  40cf99:	mov    eax,gs:0xfbcf693e
  40cf9f:	inc    edx
  40cfa0:	iret   
  40cfa1:	fnstenv [ebp+0x65]
  40cfa4:	xchg   esp,eax
  40cfa5:	scas   al,BYTE PTR es:[edi]
  40cfa6:	clc    
  40cfa7:	inc    eax
  40cfa8:	xchg   BYTE PTR [edi-0x3],al
  40cfab:	sub    al,0x75
  40cfad:	dec    esi
  40cfae:	retf   0x29a7
  40cfb1:	fdivr  st,st(1)
  40cfb3:	clc    
  40cfb4:	cmp    edx,esp
  40cfb6:	repz push cs
  40cfb8:	mov    dl,0xae
  40cfba:	in     al,0x76
  40cfbc:	and    dl,ch
  40cfbe:	push   ecx
  40cfbf:	pop    eax
  40cfc0:	mov    bh,BYTE PTR [ecx-0xf]
  40cfc3:	out    0x97,eax
  40cfc5:	cmp    al,0x32
  40cfc7:	stos   BYTE PTR es:[edi],al
  40cfc8:	xchg   esp,eax
  40cfc9:	inc    edi
  40cfca:	adc    al,0x9e
  40cfcc:	ds pop eax
  40cfce:	repnz pop esp
  40cfd0:	inc    esp
  40cfd1:	scas   al,BYTE PTR es:[edi]
  40cfd2:	push   ebp
  40cfd3:	pop    edi
  40cfd4:	sub    eax,0x7391ddbe
  40cfd9:	push   0xffffffa5
  40cfdb:	jmp    0xe2a0:0xcc630fd3
  40cfe2:	cmp    edx,DWORD PTR [edi]
  40cfe4:	mov    fs,ecx
  40cfe6:	imul   edx,DWORD PTR [ebx],0xa69cd164
  40cfec:	mov    dh,0xa9
  40cfee:	int    0xdf
  40cff0:	dec    edi
  40cff1:	fsubrp st(4),st
  40cff3:	mul    DWORD PTR [edx+0x75]
  40cff6:	push   0xe3e55554
  40cffb:	inc    eax
  40cffc:	mov    eax,ds:0xfbf2da5a
  40d001:	stc    
  40d002:	sbb    eax,0xeb7a5beb
  40d007:	and    eax,0xc0056aa2
  40d00c:	test   eax,0x8205c2d4
  40d011:	inc    edi
  40d012:	pop    ds
  40d013:	pop    esi
  40d014:	mov    esp,0xa1c953cc
  40d019:	or     dl,bl
  40d01b:	add    BYTE PTR [esi-0x8edc238],0xdc
  40d022:	push   edx
  40d023:	or     eax,0x8f466814
  40d028:	pop    ebx
  40d02a:	xchg   ebx,eax
  40d02b:	loopne 0x40cff1
  40d02d:	add    eax,0x6a2fab0a
  40d032:	fldz   
  40d034:	add    al,0x5d
  40d036:	(bad)  
  40d037:	into   
  40d038:	loopne 0x40d00d
  40d03a:	jmp    0x2bf5:0xcc82a0cb
  40d041:	lea    edi,[edx+edx*8+0x36b1e70f]
  40d048:	les    esp,FWORD PTR [edi+0x35]
  40d04b:	sbb    BYTE PTR [esi],0xa9
  40d04e:	inc    ebp
  40d04f:	mov    DWORD PTR [eax],edx
  40d051:	jb     0x40d052
  40d053:	inc    ebp
  40d054:	test   al,0x7
  40d056:	test   eax,0x2140ee15
  40d05b:	dec    esi
  40d05c:	icebp  
  40d05d:	xchg   DWORD PTR ds:0x6b0e15df,esi
  40d063:	cs xchg ebp,eax
  40d065:	lods   al,BYTE PTR ds:[esi]
  40d066:	mov    bh,0x95
  40d068:	(bad)
  40d06c:	stc    
  40d06d:	fistp  QWORD PTR [eax]
  40d06f:	mov    al,ds:0xd57321d8
  40d074:	cmc    
  40d075:	in     al,0x4c
  40d077:	pop    ecx
  40d078:	sbb    esp,0x61
  40d07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07c:	xlat   BYTE PTR ds:[ebx]
  40d07d:	dec    edi
  40d07e:	sub    al,0x8b
  40d080:	push   esp
  40d081:	pop    eax
  40d082:	loop   0x40d08f
  40d084:	pop    ds
  40d085:	xchg   sp,ax
  40d087:	or     dh,BYTE PTR [ecx+ebx*4]
  40d08a:	adc    esp,edx
  40d08c:	push   edi
  40d08d:	cdq    
  40d08e:	lea    edi,[ebx-0x2a183109]
  40d094:	add    DWORD PTR [eax],ebx
  40d096:	call   0xc730ecb2
  40d09b:	leave  
  40d09c:	into   
  40d09d:	fstp   QWORD PTR [esi-0x1b61e849]
  40d0a3:	sti    
  40d0a4:	fiadd  DWORD PTR [ecx]
  40d0a6:	mov    WORD PTR ds:0x50b54e85,fs
  40d0ac:	lahf   
  40d0ad:	daa    
  40d0ae:	scas   al,BYTE PTR es:[edi]
  40d0af:	sbb    eax,0x5d1c7f21
  40d0b4:	push   ds
  40d0b5:	push   edx
  40d0b6:	sbb    eax,0xf1e5b218
  40d0bb:	sbb    al,0x9e
  40d0bd:	mov    ds:0xd277ae75,eax
  40d0c2:	test   DWORD PTR [ebx+edx*8],eax
  40d0c5:	adc    BYTE PTR [ebx],dl
  40d0c7:	pop    ds
  40d0c8:	cwde   
  40d0c9:	ror    ecx,1
  40d0cb:	or     al,0xe8
  40d0cd:	jb     0x40d079
  40d0cf:	sti    
  40d0d0:	sbb    dh,BYTE PTR [ebx]
  40d0d2:	adc    DWORD PTR ds:0xa3e440e2,0x337638c0
  40d0dc:	push   0x67
  40d0de:	mov    WORD PTR [edi],cs
  40d0e0:	mul    dl
  40d0e2:	inc    edi
  40d0e3:	push   ss
  40d0e4:	shr    DWORD PTR [eax+0x25],1
  40d0e7:	sub    BYTE PTR [eax+0x62aead57],dl
  40d0ed:	in     eax,dx
  40d0ee:	cs (bad) 
  40d0f0:	or     esi,DWORD PTR [ebx+0x2e]
  40d0f3:	sbb    al,0xdf
  40d0f5:	in     al,dx
  40d0f6:	mov    WORD PTR [eax+edi*8-0x2f],fs
  40d0fa:	rcl    ch,1
  40d0fc:	mov    DWORD PTR [edi-0x4eed1eab],ecx
  40d102:	xor    eax,0x584d84f2
  40d107:	cmp    eax,0xd8f4432c
  40d10c:	inc    edx
  40d10d:	dec    edx
  40d10e:	pop    eax
  40d10f:	add    al,0xfb
  40d111:	xchg   edi,eax
  40d112:	fwait
  40d113:	jecxz  0x40d129
  40d115:	bound  ebp,QWORD PTR [ecx+0xf]
  40d118:	xor    BYTE PTR [esi+0x6cf30def],al
  40d11e:	ret    
  40d11f:	inc    edx
  40d120:	fidiv  DWORD PTR ds:0xbeb8d878
  40d126:	cmp    eax,0xe1688a1e
  40d12b:	mov    ecx,0x1d540130
  40d130:	adc    DWORD PTR [esi],edx
  40d132:	dec    ebp
  40d133:	shl    DWORD PTR [ecx-0x55],1
  40d136:	jmp    0x40d184
  40d138:	aaa    
  40d139:	push   0xffffffa9
  40d13b:	ss pop ebp
  40d13d:	dec    ebx
  40d13e:	pop    ds
  40d13f:	test   cl,dl
  40d141:	(bad)  
  40d142:	iret   
  40d143:	xchg   edi,eax
  40d144:	std    
  40d145:	adc    cl,BYTE PTR [edx-0x73]
  40d148:	add    eax,0x4b657f5d
  40d14d:	dec    ebx
  40d14e:	inc    eax
  40d14f:	pop    ebp
  40d150:	hlt    
  40d151:	mov    ebx,0xaa7e0fbc
  40d156:	fld    st(6)
  40d158:	sar    BYTE PTR [esi-0x18f05c44],cl
  40d15e:	sub    bh,BYTE PTR [edi+eiz*4]
  40d161:	addr16 mov edi,0x57db8abc
  40d167:	add    DWORD PTR [ecx],edx
  40d169:	cdq    
  40d16a:	push   edi
  40d16b:	add    eax,0xb614df77
  40d170:	cdq    
  40d171:	xor    bh,bl
  40d173:	xor    ch,dh
  40d175:	dec    ebp
  40d176:	adc    al,0xdf
  40d178:	ja     0x40d15f
  40d17a:	lea    ebp,ss:[ebp+eiz*2-0xb2e26b5]
  40d182:	fs sub edi,esi
  40d185:	outs   dx,BYTE PTR ds:[esi]
  40d186:	dec    ebx
  40d187:	jecxz  0x40d1bc
  40d189:	aam    0x40
  40d18b:	mov    ds:0xb4e66372,eax
  40d190:	(bad)  
  40d191:	fcmovnu st,st(6)
  40d193:	test   al,0x7f
  40d195:	sbb    edi,DWORD PTR [edi-0x70]
  40d198:	push   ebp
  40d199:	fiadd  WORD PTR [edx+0xc197cda]
  40d19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1a0:	mov    al,0x35
  40d1a2:	or     BYTE PTR [ecx+0x20938e8],0xb0
  40d1a9:	sbb    al,0xc4
  40d1ab:	stos   DWORD PTR es:[edi],eax
  40d1ac:	popf   
  40d1ad:	pushf  
  40d1ae:	push   edx
  40d1af:	cs out 0xdf,eax
  40d1b2:	sbb    ch,BYTE PTR [eax+0x3e]
  40d1b5:	add    DWORD PTR [eax-0x6a],eax
  40d1b8:	shl    dl,cl
  40d1ba:	xchg   esp,eax
  40d1bb:	outs   dx,DWORD PTR ds:[esi]
  40d1bc:	pushf  
  40d1bd:	mov    esi,0x78360002
  40d1c2:	mov    esp,0xcd239a8
  40d1c7:	ficom  WORD PTR [edx]
  40d1c9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d1cb:	xor    esi,DWORD PTR [ebp+esi*1+0x7e63dd52]
  40d1d2:	push   ecx
  40d1d3:	or     DWORD PTR [ebx-0x1b1933f9],ecx
  40d1d9:	sbb    edi,DWORD PTR [ecx+0x6c]
  40d1dc:	cmp    DWORD PTR [esi-0x5f],ebp
  40d1df:	js     0x40d1d8
  40d1e1:	jne    0x40d260
  40d1e3:	(bad)  
  40d1e4:	or     al,0x4d
  40d1e6:	mov    al,0xe2
  40d1e8:	addr16 push 0xffffff9f
  40d1eb:	jge    0x40d255
  40d1ed:	sub    al,0x80
  40d1ef:	je     0x40d23e
  40d1f1:	pop    ss
  40d1f2:	xchg   ecx,eax
  40d1f3:	call   0x4fb37535
  40d1f8:	or     DWORD PTR ds:[edx*2-0x110204b6],edx
  40d200:	mov    gs,WORD PTR [edx+0x7e]
  40d203:	inc    eax
  40d204:	push   esi
  40d205:	jns    0x40d1c8
  40d207:	pop    ebp
  40d208:	and    BYTE PTR [esi+ecx*2-0x5d],bl
  40d20c:	push   ss
  40d20d:	pop    eax
  40d20e:	shr    DWORD PTR gs:[ebx+0x3b9eb2c7],cl
  40d215:	loopne 0x40d1f2
  40d217:	retf   
  40d218:	cmp    DWORD PTR [ebx+0x50881b58],ecx
  40d21e:	stc    
  40d21f:	mov    eax,0xe1743f9e
  40d224:	sub    al,0xb2
  40d226:	cmc    
  40d227:	xchg   ecx,eax
  40d228:	mov    bl,0xc6
  40d22a:	scas   eax,DWORD PTR es:[edi]
  40d22b:	sbb    al,0xed
  40d22d:	cmp    al,BYTE PTR ds:[esi]
  40d230:	mov    bl,0x21
  40d232:	or     eax,0xe60c4
  40d237:	call   0x4525:0xe6724b86
  40d23e:	call   0x1a22:0x28d0d469
  40d245:	hlt    
  40d246:	cmp    DWORD PTR [edi-0x52],0xffffff9e
  40d24a:	int3   
  40d24b:	ret    0x8ee8
  40d24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d24f:	test   eax,0x88c35d78
  40d254:	into   
  40d255:	mov    edi,0x2e440a6e
  40d25a:	add    esp,ecx
  40d25c:	gs leave 
  40d25e:	xchg   DWORD PTR [edi+0x170bf9c0],ebp
  40d264:	sbb    BYTE PTR [eax+edx*8-0x29],0x4f
  40d269:	pop    ds
  40d26a:	repz fcmovu st,st(0)
  40d26d:	jge    0x40d2ed
  40d26f:	daa    
  40d270:	jmp    0xc988:0xb44f50aa
  40d277:	ret    
  40d278:	clc    
  40d279:	jae    0x40d2f1
  40d27b:	daa    
  40d27c:	pop    eax
  40d27d:	cdq    
  40d27e:	cmp    eax,0x316485e1
  40d283:	inc    ebx
  40d284:	jmp    0x40d301
  40d286:	pop    edx
  40d287:	int3   
  40d288:	jle    0x40d235
  40d28a:	cmp    eax,0xda83bfc3
  40d28f:	ins    DWORD PTR es:[edi],dx
  40d290:	jle    0x40d2d0
  40d292:	repz add ebp,eax
  40d295:	loop   0x40d24a
  40d297:	call   0xff900381
  40d29c:	stos   DWORD PTR es:[edi],eax
  40d29d:	into   
  40d29e:	outs   dx,BYTE PTR ds:[esi]
  40d29f:	jb     0x40d268
  40d2a1:	out    0x58,al
  40d2a3:	dec    esi
  40d2a4:	int    0xc3
  40d2a6:	daa    
  40d2a7:	mov    esp,0x32def201
  40d2ac:	pop    es
  40d2ad:	push   0xffffffdb
  40d2af:	out    dx,eax
  40d2b0:	xchg   ebp,eax
  40d2b1:	xor    al,0x79
  40d2b3:	dec    eax
  40d2b4:	test   eax,0xdb1c9f17
  40d2b9:	icebp  
  40d2ba:	inc    edi
  40d2bb:	stc    
  40d2bc:	test   ebx,ecx
  40d2be:	das    
  40d2bf:	aad    0xaa
  40d2c1:	adc    DWORD PTR [edi],edx
  40d2c3:	cwde   
  40d2c4:	(bad)  
  40d2c5:	ins    DWORD PTR es:[edi],dx
  40d2c6:	pop    es
  40d2c7:	stc    
  40d2c8:	int3   
  40d2c9:	cli    
  40d2ca:	sub    DWORD PTR [ebx-0x33],esi
  40d2cd:	add    bl,BYTE PTR [ebp-0xeedb3fb]
  40d2d3:	mov    edx,0xeb7d451e
  40d2d8:	int3   
  40d2d9:	xor    al,0x48
  40d2db:	mov    edi,0x78a015db
  40d2e0:	out    dx,eax
  40d2e1:	dec    esi
  40d2e2:	jg     0x40d34c
  40d2e4:	xchg   edx,edx
  40d2e6:	repnz sub eax,0x3d885882
  40d2ec:	(bad)  
  40d2ed:	arpl   WORD PTR [eax+0x25],di
  40d2f0:	add    esp,DWORD PTR [eax+0x3e2ddd9e]
  40d2f6:	sbb    ah,BYTE PTR [edi+0x41]
  40d2f9:	out    0x35,al
  40d2fb:	in     al,0x8b
  40d2fd:	push   ds
  40d2fe:	out    0xc4,al
  40d300:	mov    edi,0xde2d3241
  40d305:	xchg   esi,eax
  40d306:	pop    esi
  40d307:	push   0xffffffe7
  40d309:	xor    al,0xaa
  40d30b:	adc    eax,DWORD PTR [ecx]
  40d30d:	mov    ds:0xb271585c,al
  40d312:	push   ebp
  40d313:	es push 0x73
  40d316:	pushfw 
  40d318:	sub    DWORD PTR [edi+edx*1+0x5b],eax
  40d31c:	cmp    DWORD PTR [ecx-0xe3399ec],edx
  40d322:	jmp    0x40d380
  40d324:	and    dh,cl
  40d326:	in     al,0xa5
  40d328:	push   esp
  40d329:	pop    ds
  40d32a:	xor    ah,BYTE PTR [ebp-0x160d5467]
  40d330:	mov    edx,0x1b178512
  40d335:	dec    esi
  40d336:	iret   
  40d337:	das    
  40d338:	(bad)  
  40d339:	jne    0x40d328
  40d33b:	fcom   DWORD PTR [ecx-0xbbc0cc0]
  40d341:	dec    ebp
  40d342:	mov    ch,0x27
  40d344:	jge    0x40d3c2
  40d346:	pusha  
  40d347:	stc    
  40d348:	cmp    dl,ch
  40d34a:	xchg   ebp,eax
  40d34b:	lea    eax,[ecx]
  40d34d:	cmp    bh,cl
  40d34f:	mov    ebp,0x32312d59
  40d354:	out    0x60,al
  40d356:	pusha  
  40d357:	sti    
  40d358:	xor    BYTE PTR [ecx],ah
  40d35a:	retf   
  40d35b:	pop    ebx
  40d35c:	dec    ebx
  40d35d:	inc    edi
  40d35e:	call   0x65561019
  40d363:	dec    ebx
  40d364:	and    BYTE PTR [edi],bl
  40d366:	je     0x40d330
  40d368:	xchg   ebp,eax
  40d369:	lods   al,BYTE PTR ds:[esi]
  40d36a:	pop    ecx
  40d36b:	ins    BYTE PTR es:[edi],dx
  40d36c:	sbb    DWORD PTR [edi-0x14b07ac9],esp
  40d372:	adc    ch,dh
  40d374:	and    edx,DWORD PTR [ebx+ebx*8-0x7bf48c77]
  40d37b:	cmp    eax,0x56921927
  40d380:	std    
  40d381:	push   ebp
  40d382:	std    
  40d383:	jo     0x40d3be
  40d385:	gs dec ebp
  40d387:	mov    gs,WORD PTR [ecx+eax*8+0x2d211c3a]
  40d38e:	and    BYTE PTR ds:0x1a0e438f,dh
  40d394:	mov    bl,0xa8
  40d396:	xchg   edi,eax
  40d397:	cmp    al,0xc0
  40d399:	out    0x15,eax
  40d39b:	mov    edi,0x54763555
  40d3a0:	and    BYTE PTR [esi-0x5a2a1d18],dl
  40d3a6:	call   0x4024e643
  40d3ab:	add    ecx,DWORD PTR [edi]
  40d3ad:	fnsave [ecx]
  40d3af:	dec    ebx
  40d3b0:	jo     0x40d376
  40d3b2:	sti    
  40d3b3:	(bad)  
  40d3b4:	cli    
  40d3b5:	jae    0x40d3a9
  40d3b7:	lods   al,BYTE PTR ds:[esi]
  40d3b8:	mov    dl,0xa6
  40d3ba:	push   cs
  40d3bb:	xchg   ebx,eax
  40d3bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3bd:	pop    edx
  40d3be:	mov    BYTE PTR [ebp-0x629935fd],cl
  40d3c4:	dec    edx
  40d3c5:	outs   dx,DWORD PTR ds:[esi]
  40d3c6:	inc    esi
  40d3c7:	outs   dx,DWORD PTR ds:[esi]
  40d3c8:	xchg   edi,eax
  40d3c9:	jae    0x40d380
  40d3cb:	je     0x40d382
  40d3cd:	into   
  40d3ce:	lahf   
  40d3cf:	int3   
  40d3d0:	pop    esp
  40d3d1:	icebp  
  40d3d2:	cld    
  40d3d3:	mov    ah,0xe2
  40d3d5:	sahf   
  40d3d6:	push   ebx
  40d3d7:	or     esi,DWORD PTR [ebp+0x3c3d25f1]
  40d3dd:	cmc    
  40d3de:	sbb    bh,BYTE PTR [edi-0x7434deef]
  40d3e4:	adc    ch,cl
  40d3e6:	xchg   BYTE PTR [ebp-0x9],dh
  40d3e9:	popf   
  40d3ea:	adc    al,0xdd
  40d3ec:	dec    ecx
  40d3ed:	dec    ebp
  40d3ee:	pop    ss
  40d3ef:	call   0xfad9114
  40d3f4:	push   ebx
  40d3f5:	cmovs  esp,ecx
  40d3f8:	mov    edi,0x1fe376b
  40d3fd:	adc    al,0x8d
  40d3ff:	sbb    al,0x1f
  40d401:	shl    DWORD PTR [ebp+0x7d],1
  40d404:	ret    
  40d405:	gs aaa 
  40d407:	int    0xaa
  40d409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d40b:	xor    eax,0xbeb74280
  40d410:	push   edi
  40d411:	and    esp,DWORD PTR [edx]
  40d413:	adc    ecx,DWORD PTR gs:[esi+0x4853da03]
  40d41a:	mov    dl,0x25
  40d41c:	push   edi
  40d41d:	data16 cld 
  40d41f:	cmp    edi,DWORD PTR [ebx]
  40d421:	push   esp
  40d422:	jmp    0x987b42df
  40d427:	mov    cs,WORD PTR [edi+edx*1+0x50]
  40d42b:	xchg   ebp,eax
  40d42c:	push   0xba8d3090
  40d431:	test   eax,0x7a010118
  40d436:	pop    ebp
  40d437:	inc    esp
  40d438:	mov    al,ds:0x434bd943
  40d43d:	push   edi
  40d43e:	fsub   DWORD PTR [edi]
  40d440:	inc    edx
  40d441:	add    eax,0xfc7f582f
  40d446:	test   eax,0x1253dcbe
  40d44c:	push   DWORD PTR [ecx]
  40d44e:	sbb    al,0xe3
  40d450:	test   dh,cl
  40d452:	cmp    ch,bl
  40d454:	inc    ecx
  40d455:	xor    BYTE PTR [edx+0x2caa386e],0xf3
  40d45c:	sbb    al,0xa
  40d45e:	lea    ebx,[eax]
  40d460:	push   edi
  40d461:	jmp    0x3e95:0xcf1bddc5
  40d468:	xchg   edi,eax
  40d469:	pop    es
  40d46a:	rol    ch,1
  40d46c:	cmp    esp,DWORD PTR [ebx-0x1d58716]
  40d472:	adc    BYTE PTR [edi-0xb0e55b1],bh
  40d478:	scas   al,BYTE PTR es:[edi]
  40d479:	add    al,0x29
  40d47b:	(bad)  
  40d47c:	mov    eax,ds:0x28f43750
  40d481:	xchg   esp,eax
  40d482:	ret    0xeba
  40d485:	mov    ah,0x67
  40d487:	xor    esi,edi
  40d489:	ss nop
  40d48b:	sahf   
  40d48c:	cmp    ch,bl
  40d48e:	mov    bl,0x8e
  40d490:	scas   eax,DWORD PTR es:[edi]
  40d491:	pop    esi
  40d492:	sub    dh,dh
  40d494:	rcr    BYTE PTR ds:0x524e9851,0x3f
  40d49b:	ret    0xb22b
  40d49e:	jp     0x40d4d5
  40d4a0:	xor    al,0xa0
  40d4a2:	(bad)  
  40d4a3:	jns    0x40d51f
  40d4a5:	push   ebp
  40d4a6:	jnp    0x40d477
  40d4a8:	push   0xc193164a
  40d4ad:	sub    DWORD PTR [edx-0x60],eax
  40d4b0:	or     dh,BYTE PTR [esp+ecx*2]
  40d4b3:	aaa    
  40d4b4:	sub    eax,0xd63411fc
  40d4b9:	rcr    DWORD PTR [esi-0x575bb44b],0x24
  40d4c0:	push   0x2157951d
  40d4c5:	xor    al,0x47
  40d4c7:	xchg   esi,eax
  40d4c8:	mov    edi,0xca5ab47e
  40d4cd:	xor    al,0x7
  40d4cf:	sub    BYTE PTR [eax+0x77b7a844],cl
  40d4d5:	test   DWORD PTR [ecx],ecx
  40d4d7:	pusha  
  40d4d8:	stos   BYTE PTR es:[edi],al
  40d4d9:	mov    cl,0x17
  40d4db:	mov    edx,0xbaa41f94
  40d4e0:	outs   dx,BYTE PTR ds:[esi]
  40d4e1:	(bad)  
  40d4e3:	mov    cl,0x1d
  40d4e5:	push   0xe1fd4fff
  40d4ea:	xlat   BYTE PTR ds:[ebx]
  40d4ec:	std    
  40d4ed:	(bad)  
  40d4ee:	cmp    eax,0xbb1d1fcd
  40d4f3:	or     eax,0x85a99c78
  40d4f8:	mov    al,ds:0x3173c336
  40d4fd:	inc    eax
  40d4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ff:	das    
  40d500:	cmp    al,0x89
  40d502:	adc    BYTE PTR [ebx+ebp*4],cl
  40d505:	mov    gs,WORD PTR [ebp-0x1b]
  40d508:	test   ecx,eax
  40d50a:	aam    0xb5
  40d50c:	fidivr WORD PTR [edx]
  40d50e:	or     bh,dl
  40d510:	pop    es
  40d511:	out    0x45,eax
  40d513:	jne    0x40d53b
  40d515:	pop    es
  40d516:	jp     0x40d573
  40d518:	outs   dx,DWORD PTR ds:[esi]
  40d519:	pop    ebx
  40d51a:	je     0x40d55d
  40d51c:	sub    bl,bh
  40d51e:	fnsave [eax-0x6d]
  40d521:	adc    dl,cl
  40d523:	je     0x40d552
  40d525:	jbe    0x40d536
  40d527:	popf   
  40d528:	and    ebx,0x39b3f9b5
  40d52e:	mov    al,0x93
  40d530:	enter  0x4aec,0xc4
  40d534:	aad    0x2b
  40d536:	push   esi
  40d537:	jmp    0x9decc7c6
  40d53c:	test   eax,0xa94f220
  40d541:	mov    dl,0x73
  40d543:	sub    DWORD PTR [ebx+0x42c417aa],ebx
  40d549:	mov    ecx,DWORD PTR [edi-0x28]
  40d54c:	adc    al,0xc5
  40d54e:	push   es
  40d54f:	fdiv   QWORD PTR [ecx+0x636c88b3]
  40d555:	inc    esp
  40d556:	ins    BYTE PTR es:[edi],dx
  40d557:	sub    ebp,ebx
  40d559:	add    eax,0xfb261c9c
  40d55e:	mov    eax,ds:0xe54eef28
  40d563:	mov    BYTE PTR [eax+edi*4+0x71cfbade],al
  40d56a:	and    DWORD PTR [ecx],ebp
  40d56c:	retf   0x7b33
  40d56f:	and    eax,0x2c303442
  40d574:	daa    
  40d575:	or     bl,ch
  40d577:	jg     0x40d5d1
  40d579:	mov    DWORD PTR [ebp+0x4432adf7],ebp
  40d57f:	push   eax
  40d580:	jns    0x40d574
  40d582:	mov    esp,0xf220f678
  40d587:	cmp    dh,BYTE PTR [esi-0x62a6b208]
  40d58d:	mov    ds:0xc2f57d99,eax
  40d592:	jg     0x40d561
  40d594:	jmp    0x881c:0x98956b69
  40d59b:	push   ebx
  40d59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d59d:	pop    edx
  40d59e:	xor    al,0xb6
  40d5a0:	icebp  
  40d5a1:	cmp    DWORD PTR [ecx],ebp
  40d5a3:	adc    ebp,edx
  40d5a5:	or     ebx,ecx
  40d5a7:	cli    
  40d5a8:	jg     0x40d5d3
  40d5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ab:	arpl   WORD PTR [eax+0x6e],bp
  40d5ae:	and    BYTE PTR [ebx],0x10
  40d5b1:	leave  
  40d5b2:	into   
  40d5b3:	fisttp WORD PTR [ebx+0x7f]
  40d5b6:	push   0x2ee9f88
  40d5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5bc:	push   edx
  40d5bd:	adc    DWORD PTR [edi-0x96e209b],ebp
  40d5c3:	rcl    BYTE PTR [ecx+0x2ffc4f5b],0x1e
  40d5ca:	into   
  40d5cb:	mov    ch,dh
  40d5cd:	dec    esi
  40d5ce:	jns    0x40d578
  40d5d0:	add    DWORD PTR [ecx],edx
  40d5d2:	push   ebp
  40d5d3:	rol    DWORD PTR [eax],0xfe
  40d5d6:	dec    ecx
  40d5d7:	loopne 0x40d633
  40d5d9:	or     dl,BYTE PTR [ecx+0x4465d817]
  40d5df:	lock lock jno 0x40d5f3
  40d5e3:	das    
  40d5e4:	mov    ds:0xb8dc1002,eax
  40d5e9:	shl    DWORD PTR [eax],1
  40d5eb:	sub    eax,0x9a1a90e
  40d5f0:	ficom  DWORD PTR [ebp-0x23471b70]
  40d5f6:	cmp    al,0x32
  40d5f8:	jle    0x40d60e
  40d5fa:	and    bl,cl
  40d5fc:	or     bh,cl
  40d5fe:	mov    bl,0x90
  40d600:	dec    edx
  40d601:	pop    es
  40d602:	mov    esp,0x56aff34a
  40d607:	fcom   DWORD PTR [ebp+0x68e298be]
  40d60d:	cmc    
  40d60e:	pop    ds
  40d60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d610:	mov    esi,?
  40d612:	inc    eax
  40d613:	pop    ds
  40d614:	pop    ebx
  40d615:	pop    ss
  40d616:	mov    al,ds:0x9f46c9bf
  40d61b:	adc    esp,DWORD PTR [ebx]
  40d61d:	aam    0x84
  40d61f:	leave  
  40d620:	out    0xee,eax
  40d622:	mov    al,0x3c
  40d624:	cmc    
  40d625:	and    edx,DWORD PTR [edi-0x272b6ec5]
  40d62b:	mov    bl,0x36
  40d62d:	js     0x40d68c
  40d62f:	lods   al,BYTE PTR ds:[esi]
  40d630:	popa   
  40d631:	mov    ebx,DWORD PTR [ecx-0x61]
  40d634:	adc    DWORD PTR [ebp+0xb],ecx
  40d637:	pop    ds
  40d638:	ror    DWORD PTR [ecx-0x4d6f06ec],cl
  40d63e:	rcr    BYTE PTR ds:0xaeb2c3e5,1
  40d644:	fadd   st,st(3)
  40d646:	stos   DWORD PTR es:[edi],eax
  40d647:	lods   eax,DWORD PTR ds:[esi]
  40d648:	mov    cl,0x0
  40d64a:	push   ebp
  40d64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64c:	jb     0x40d5f8
  40d64e:	or     cl,0xc8
  40d651:	inc    edi
  40d652:	pop    ebp
  40d653:	inc    edi
  40d654:	gs test bl,dl
  40d657:	cmp    DWORD PTR [ebx],0x53309d49
  40d65d:	adc    eax,0xaf26439a
  40d662:	sub    BYTE PTR [eax-0x28],ch
  40d665:	cmp    cl,ah
  40d667:	or     eax,0x5041492c
  40d66c:	das    
  40d66d:	jbe    0x40d6dc
  40d66f:	sub    al,0xe1
  40d671:	adc    al,BYTE PTR [esi-0x5840f8bd]
  40d677:	jno    0x40d678
  40d679:	sbb    al,0x1b
  40d67b:	lods   al,BYTE PTR ds:[esi]
  40d67c:	out    dx,al
  40d67d:	mov    dh,0x39
  40d67f:	inc    esi
  40d680:	mov    dh,cl
  40d682:	sub    ah,BYTE PTR [ebp+0x588e7626]
  40d688:	adc    BYTE PTR [ecx],ch
  40d68a:	int    0xcc
  40d68c:	outs   dx,DWORD PTR ds:[esi]
  40d68d:	dec    esi
  40d68e:	push   cs
  40d68f:	icebp  
  40d690:	fild   QWORD PTR [edx+0x41282718]
  40d696:	rcl    cl,0xd8
  40d699:	or     bl,BYTE PTR [edi-0x2f]
  40d69c:	test   eax,0x2c2e98a7
  40d6a1:	xor    ah,bh
  40d6a3:	mov    cl,0xd3
  40d6a5:	adc    BYTE PTR [eax],al
  40d6a7:	sub    BYTE PTR [edi+0x3c492e38],dl
  40d6ad:	repz add dl,cl
  40d6b0:	test   eax,0x981e436b
  40d6b5:	int3   
  40d6b6:	stos   BYTE PTR es:[edi],al
  40d6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b8:	or     al,0x9b
  40d6ba:	gs pop ebx
  40d6bc:	mov    eax,ds:0x91c3033d
  40d6c1:	test   DWORD PTR [ebp+ecx*4-0x4a],0x55c1cdf2
  40d6c9:	aas    
  40d6ca:	cmc    
  40d6cb:	inc    ecx
  40d6cc:	into   
  40d6cd:	outs   dx,BYTE PTR ds:[esi]
  40d6ce:	inc    ebx
  40d6cf:	sar    DWORD PTR [edi-0x46],0x99
  40d6d3:	adc    esp,DWORD PTR [edx]
  40d6d5:	retf   0xf81b
  40d6d8:	mov    BYTE PTR [edi],bh
  40d6da:	jecxz  0x40d735
  40d6dc:	push   ecx
  40d6dd:	cmp    DWORD PTR [eax],edx
  40d6df:	repnz ins BYTE PTR es:[edi],dx
  40d6e1:	xchg   ebp,eax
  40d6e2:	stos   BYTE PTR es:[edi],al
  40d6e3:	xor    DWORD PTR [edx+0x50a3161d],ecx
  40d6e9:	lea    edi,[ebx+esi*4]
  40d6ec:	std    
  40d6ed:	add    al,0xf3
  40d6ef:	and    DWORD PTR [ecx],ebx
  40d6f1:	jns    0x40d751
  40d6f3:	jle    0x40d6dc
  40d6f5:	mov    ch,0x32
  40d6f7:	xchg   esi,eax
  40d6f8:	pusha  
  40d6f9:	jle    0x40d770
  40d6fb:	sbb    DWORD PTR [eax-0x69],0xffffff89
  40d6ff:	in     eax,dx
  40d700:	push   edi
  40d701:	and    ch,BYTE PTR [ebx]
  40d703:	sub    BYTE PTR [ebx],dl
  40d705:	(bad)  
  40d707:	mov    dh,0x2e
  40d709:	jne    0x40d6f2
  40d70b:	cmp    al,0x47
  40d70d:	lods   al,BYTE PTR ds:[esi]
  40d70e:	stos   DWORD PTR es:[edi],eax
  40d70f:	pop    edx
  40d710:	adc    al,BYTE PTR [eax]
  40d712:	aas    
  40d713:	sub    DWORD PTR [edx+edi*1+0x6],ecx
  40d717:	clc    
  40d718:	cmp    ecx,esi
  40d71a:	or     al,ch
  40d71c:	into   
  40d71d:	imul   esp,DWORD PTR [edi+0x1c],0xffffffc7
  40d721:	mov    ds:0x8ce2a2e,eax
  40d726:	enter  0xe3a3,0x13
  40d72a:	push   ecx
  40d72b:	mov    BYTE PTR [eax],bl
  40d72d:	xor    eax,0x7df7a485
  40d732:	scas   al,BYTE PTR es:[edi]
  40d733:	cdq    
  40d734:	outs   dx,DWORD PTR ds:[esi]
  40d735:	or     BYTE PTR [ebx],dl
  40d737:	mov    al,ds:0xc60ee2e7
  40d73c:	and    al,0x9
  40d73e:	cmp    cl,al
  40d740:	push   0x22
  40d742:	(bad)  
  40d743:	mov    al,0x31
  40d745:	mov    ds:0xe9f1f071,al
  40d74a:	push   esi
  40d74b:	mov    al,ds:0x8e3891bc
  40d750:	dec    edx
  40d751:	dec    ebx
  40d752:	ins    DWORD PTR es:[edi],dx
  40d753:	xlat   BYTE PTR ds:[ebx]
  40d754:	hlt    
  40d755:	mov    ah,0x1b
  40d757:	pop    edx
  40d758:	xstore-rng (bad)
  40d759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75a:	sub    cl,0x16
  40d75d:	sub    DWORD PTR [ebp-0x50],esi
  40d760:	retf   0x67ca
  40d763:	mov    eax,DWORD PTR [ecx]
  40d765:	adc    eax,0xdfd0d21d
  40d76a:	or     al,BYTE PTR [eax-0x5f]
  40d76d:	fsub   DWORD PTR [ebx+0x3b]
  40d770:	sub    eax,0xd94c5967
  40d775:	jo     0x40d754
  40d777:	inc    ebp
  40d778:	aad    0x1b
  40d77a:	or     al,0x1c
  40d77c:	sbb    eax,0xeecdfa72
  40d781:	icebp  
  40d782:	test   ebx,esi
  40d784:	or     eax,0xd6d37144
  40d789:	and    BYTE PTR [edi-0x16],bh
  40d78c:	cmc    
  40d78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d78e:	mov    ebp,0xf3306abc
  40d793:	rol    DWORD PTR [edx+0x43],cl
  40d796:	enter  0x994a,0xff
  40d79a:	outs   dx,BYTE PTR ds:[esi]
  40d79b:	ja     0x40d766
  40d79d:	dec    esp
  40d79e:	jne    0x40d74e
  40d7a0:	pop    ds
  40d7a1:	xor    BYTE PTR ds:0x165a3144,bh
  40d7a7:	push   ss
  40d7a8:	das    
  40d7a9:	cmp    ecx,esp
  40d7ab:	inc    DWORD PTR [edi-0x2]
  40d7ae:	and    DWORD PTR [ebp-0x29],esp
  40d7b1:	add    eax,0xe49403d4
  40d7b6:	xchg   esi,eax
  40d7b7:	inc    edi
  40d7b8:	fst    QWORD PTR ds:0xe5016b22
  40d7be:	fcomp  st(4)
  40d7c0:	aam    0x8f
  40d7c2:	retf   0xba93
  40d7c5:	xchg   ebp,eax
  40d7c6:	jecxz  0x40d845
  40d7c8:	or     ebp,DWORD PTR [ebx+0x14]
  40d7cb:	xchg   esp,eax
  40d7cc:	pop    ss
  40d7cd:	rcl    dh,1
  40d7cf:	mov    bh,0xb2
  40d7d1:	add    al,0x5b
  40d7d3:	xor    BYTE PTR [edi],dh
  40d7d5:	add    eax,0x2f946dfa
  40d7da:	leave  
  40d7db:	sbb    ch,BYTE PTR [eax-0x7c]
  40d7de:	pop    esp
  40d7df:	push   ds
  40d7e0:	sahf   
  40d7e1:	xor    al,0x86
  40d7e3:	outs   dx,DWORD PTR ds:[esi]
  40d7e4:	out    dx,al
  40d7e5:	imul   esi,DWORD PTR [ecx-0x54f3af37],0x11
  40d7ec:	jecxz  0x40d804
  40d7ee:	sahf   
  40d7ef:	test   eax,0xf61fa38d
  40d7f4:	nop
  40d7f5:	nop
  40d7f6:	adc    ebx,ecx
  40d7f8:	ret    0x4b35
  40d7fb:	icebp  
  40d7fc:	loopne 0x40d807
  40d7fe:	aam    0xa
  40d800:	sar    DWORD PTR [esi-0x36b46448],0x37
  40d807:	dec    esi
  40d808:	bound  eax,QWORD PTR [ecx+0x8]
  40d80b:	iret   
  40d80c:	or     edi,DWORD PTR [eax-0x921db55]
  40d812:	mov    DWORD PTR [esi],edi
  40d814:	mov    eax,0x23c8f15c
  40d819:	cli    
  40d81a:	stos   DWORD PTR es:[edi],eax
  40d81b:	loop   0x40d860
  40d81d:	stos   DWORD PTR es:[edi],eax
  40d81e:	sbb    eax,0x6d5c782b
  40d823:	test   DWORD PTR [ecx],0x58286ca
  40d829:	mov    ch,0x9b
  40d82b:	inc    ebp
  40d82c:	xor    al,0xee
  40d82e:	pop    esp
  40d82f:	sub    eax,0x5cb6665b
  40d834:	loopne 0x40d7cc
  40d836:	xor    ebx,eax
  40d838:	pop    ds
  40d839:	out    0xcb,eax
  40d83b:	out    0x7f,al
  40d83d:	xor    eax,DWORD PTR [ebx-0x557ecdfd]
  40d843:	pop    ecx
  40d844:	jmp    0x40d7e4
  40d846:	inc    ecx
  40d847:	aad    0xed
  40d849:	add    bh,al
  40d84b:	je     0x40d8c0
  40d84d:	mul    DWORD PTR [edi]
  40d84f:	in     al,dx
  40d850:	ds mov ecx,0x64c667e3
  40d856:	les    ebx,FWORD PTR [ebx+0x21]
  40d859:	dec    edx
  40d85a:	div    BYTE PTR [eax+0x16b9c578]
  40d860:	xchg   BYTE PTR [edi+0x1],bh
  40d863:	inc    ecx
  40d864:	aam    0xeb
  40d866:	jnp    0x40d81b
  40d868:	add    eax,0xa81195a5
  40d86d:	fadd   DWORD PTR [eax*4+0x64e0dfb2]
  40d874:	sub    BYTE PTR [ebx-0x5d],dh
  40d877:	sbb    BYTE PTR [edi-0x267839bf],dl
  40d87d:	loop   0x40d832
  40d87f:	mov    eax,0x1ed37b53
  40d884:	pop    es
  40d885:	and    BYTE PTR [ebp-0x6a],ch
  40d888:	sub    DWORD PTR [edi+0x85bc55c],edi
  40d88e:	daa    
  40d88f:	repz pop ebx
  40d891:	add    bl,bl
  40d893:	rol    al,0x53
  40d896:	call   0x182b:0x4b957194
  40d89d:	dec    edx
  40d89e:	mov    al,ds:0x16afae1a
  40d8a3:	dec    edi
  40d8a4:	in     al,0x7f
  40d8a6:	jbe    0x40d8f1
  40d8a8:	fcomip st,st(2)
  40d8aa:	ins    DWORD PTR es:[edi],dx
  40d8ab:	cmc    
  40d8ac:	pop    eax
  40d8ad:	adc    bh,ah
  40d8af:	and    dh,BYTE PTR ds:0xaa7b87b1
  40d8b5:	ret    
  40d8b6:	scas   eax,DWORD PTR es:[edi]
  40d8b7:	sbb    DWORD PTR [edx+0xba82d7e],ecx
  40d8bd:	das    
  40d8be:	clc    
  40d8bf:	std    
  40d8c0:	dec    ecx
  40d8c1:	add    eax,0x2a3873ac
  40d8c6:	ror    ecx,cl
  40d8c8:	or     BYTE PTR [ecx+eiz*1-0x6b267b48],ch
  40d8cf:	and    eax,0x88f035e4
  40d8d4:	adc    BYTE PTR [ecx],dl
  40d8d6:	ror    bl,0xf4
  40d8d9:	test   al,0x1d
  40d8db:	cmp    eax,0xe17d59f0
  40d8e0:	pop    ecx
  40d8e1:	hlt    
  40d8e2:	jb     0x40d8c6
  40d8e4:	pop    ss
  40d8e5:	sbb    ebp,ebx
  40d8e7:	sub    al,0x91
  40d8e9:	ja     0x40d892
  40d8eb:	xor    ah,BYTE PTR [esi+ecx*1-0x478425dc]
  40d8f2:	dec    ebp
  40d8f3:	dec    ebx
  40d8f4:	sub    edx,eax
  40d8f6:	pop    ebx
  40d8f7:	rcl    BYTE PTR [esi+0x74610f53],1
  40d8fd:	adc    eax,0x3a5817b5
  40d902:	dec    ebp
  40d903:	push   eax
  40d904:	data16 sub BYTE PTR [eax+edi*1+0x1f],bh
  40d909:	ror    DWORD PTR [edx-0x3c11d024],0xbf
  40d910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d911:	sti    
  40d912:	imul   esp,DWORD PTR [ebp+0x3a2705ef],0xffffffd5
  40d919:	jo     0x40d998
  40d91b:	vmovddup ymm5,YMMWORD PTR [ecx-0x4e98a7c9]
  40d923:	inc    eax
  40d924:	fadd   QWORD PTR [ecx+0xf]
  40d927:	clc    
  40d928:	mov    ebx,0xf9b84ac3
  40d92d:	cmp    ah,BYTE PTR [ebx+edx*2-0x56]
  40d931:	push   ebp
  40d932:	jmp    0x235f1ef4
  40d937:	inc    edx
  40d938:	lea    edx,[ebp-0x12]
  40d93b:	pusha  
  40d93c:	ltr    WORD PTR [eax+0x0]
  40d940:	retf   0x31c5
  40d943:	jl     0x40d9a9
  40d945:	and    esp,DWORD PTR [ebx-0x16c8262c]
  40d94b:	adc    BYTE PTR [ebx],0x7e
  40d94e:	nop
  40d94f:	push   es
  40d950:	add    bh,ah
  40d952:	mov    esi,0x4d409e43
  40d957:	fs inc eax
  40d959:	adc    DWORD PTR [edx],ecx
  40d95b:	jae    0x40d938
  40d95d:	dec    edi
  40d95e:	mov    cs,WORD PTR [eax+ebp*8-0x595f3558]
  40d965:	jae    0x40d943
  40d967:	out    0x16,al
  40d969:	jle    0x40d994
  40d96b:	(bad)  
  40d96c:	fdiv   DWORD PTR [ebp-0x3f]
  40d96f:	push   ebx
  40d970:	xor    ebp,DWORD PTR [edi]
  40d972:	sbb    edx,ebx
  40d974:	inc    edi
  40d975:	dec    ebx
  40d976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d977:	fcmovnb st,st(6)
  40d979:	and    al,cl
  40d97b:	ds mov esi,ds
  40d97e:	pavgw  mm3,QWORD PTR [eax]
  40d981:	lock aam 0x40
  40d984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d985:	dec    ebx
  40d986:	mov    eax,edi
  40d988:	push   edi
  40d989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98a:	fdivr  DWORD PTR [eax-0x75]
  40d98d:	push   esi
  40d98e:	dec    esi
  40d98f:	pop    edi
  40d990:	sbb    edi,DWORD PTR [edx+eax*4]
  40d993:	sub    BYTE PTR [ebx+0x3],0xe2
  40d997:	pop    esp
  40d998:	xchg   esi,eax
  40d999:	adc    edi,DWORD PTR [ecx+0x41]
  40d99c:	adc    BYTE PTR [ecx],cl
  40d99e:	icebp  
  40d99f:	xchg   edi,eax
  40d9a0:	in     eax,0x24
  40d9a2:	or     eax,0xbd624582
  40d9a7:	scas   eax,DWORD PTR es:[edi]
  40d9a8:	lea    ebp,[edx]
  40d9aa:	cld    
  40d9ab:	dec    esp
  40d9ac:	inc    esi
  40d9ad:	jmp    0x40d930
  40d9af:	add    eax,0x48b342c5
  40d9b4:	aas    
  40d9b5:	rcl    DWORD PTR [edx],cl
  40d9b7:	and    dl,bh
  40d9b9:	test   al,0x4d
  40d9bb:	aas    
  40d9bc:	xlat   BYTE PTR ds:[ebx]
  40d9bd:	pop    ebp
  40d9be:	shl    DWORD PTR [edi-0x882a8dc],1
  40d9c4:	imul   bh
  40d9c6:	in     al,0xbb
  40d9c8:	dec    ebx
  40d9c9:	adc    edi,DWORD PTR [ecx-0x6b]
  40d9cc:	mov    cl,0x8
  40d9ce:	ret    0x2354
  40d9d1:	or     al,0xd
  40d9d3:	ins    BYTE PTR es:[edi],dx
  40d9d4:	imul   BYTE PTR [esp+edi*2-0x35]
  40d9d8:	dec    esp
  40d9d9:	inc    edx
  40d9da:	push   edi
  40d9db:	fidivr WORD PTR [edx]
  40d9dd:	lods   al,BYTE PTR ds:[esi]
  40d9de:	jmp    0xc57:0x77b68db8
  40d9e5:	rcl    BYTE PTR [esp+ecx*1+0x14],0x30
  40d9ea:	inc    esi
  40d9eb:	xor    ebp,DWORD PTR [ecx+0x50f0c698]
  40d9f1:	xchg   ebx,eax
  40d9f2:	hlt    
  40d9f3:	outs   dx,DWORD PTR ds:[esi]
  40d9f4:	mov    gs,WORD PTR [edx]
  40d9f6:	push   ds
  40d9f7:	dec    eax
  40d9f8:	dec    esp
  40d9f9:	pop    ebp
  40d9fa:	jne    0x40d9ec
  40d9fc:	loop   0x40d9b0
  40d9fe:	and    BYTE PTR [ecx],dh
  40da00:	lea    esi,[edi]
  40da02:	ds xchg ecx,eax
  40da04:	adc    ch,0x1d
  40da07:	mov    eax,0x32eb9940
  40da0c:	sbb    bh,BYTE PTR [ecx+0x2eefb2b8]
  40da12:	mov    DWORD PTR [esi],ebp
  40da14:	push   ecx
  40da15:	sbb    al,0x9
  40da17:	and    dh,bh
  40da19:	or     ecx,0x30c5d21b
  40da1f:	sbb    BYTE PTR [eax],dl
  40da21:	adc    al,0xea
  40da23:	add    BYTE PTR [ebp+eiz*1-0x6e],bh
  40da27:	sub    eax,0x5ed0ebc6
  40da2c:	sar    DWORD PTR [ecx+0x199352fd],cl
  40da32:	into   
  40da33:	sbb    esp,ebx
  40da35:	aas    
  40da36:	aaa    
  40da37:	out    0xc8,eax
  40da39:	fwait
  40da3a:	xor    esp,edi
  40da3c:	mov    ch,0x42
  40da3e:	enter  0x5ef1,0x67
  40da42:	xchg   BYTE PTR [ecx],bl
  40da44:	push   esi
  40da45:	dec    edi
  40da46:	int3   
  40da47:	mov    esi,0xb433ba8
  40da4c:	bound  esi,QWORD PTR [edi]
  40da4e:	pslld  mm0,QWORD PTR [ecx-0x4ce313d5]
  40da55:	push   ebp
  40da56:	lahf   
  40da57:	mov    ss,edx
  40da59:	cmp    BYTE PTR [ebx-0x296ccb7a],0x8c
  40da60:	dec    eax
  40da61:	mov    bl,0xc6
  40da63:	fdiv   QWORD PTR [ebx]
  40da65:	int3   
  40da66:	pop    ebx
  40da67:	jae    0x40dab5
  40da69:	pop    esi
  40da6a:	lods   al,BYTE PTR ds:[esi]
  40da6b:	xor    DWORD PTR [ecx-0x29],esp
  40da6e:	ds pop ebp
  40da70:	and    dh,ah
  40da72:	loope  0x40d9ff
  40da74:	outs   dx,BYTE PTR ds:[esi]
  40da75:	or     BYTE PTR [edx-0x50e7def9],dl
  40da7b:	cmp    eax,0xc64f2648
  40da80:	xchg   esp,eax
  40da81:	sub    dl,al
  40da83:	fbld   TBYTE PTR [edi-0x111aa650]
  40da89:	pusha  
  40da8a:	mov    esp,0xbeffd02a
  40da8f:	mov    BYTE PTR [ebx+ebx*4-0x44],0xd8
  40da94:	fnsave [ecx-0x19]
  40da97:	mov    eax,ds:0xc16a8f64
  40da9c:	pop    eax
  40da9d:	xchg   ebp,eax
  40da9e:	dec    edi
  40da9f:	add    al,0xf7
  40daa1:	mov    eax,ds:0x4ed39255
  40daa6:	loope  0x40daca
  40daa8:	js     0x40da9f
  40daaa:	push   0xffffffbb
  40daac:	fcomp  DWORD PTR [edx]
  40daae:	iret   
  40daaf:	lods   eax,DWORD PTR ds:[esi]
  40dab0:	icebp  
  40dab1:	xchg   esp,eax
  40dab2:	fwait
  40dab3:	sbb    ch,BYTE PTR [esi+0x31ef3390]
  40dab9:	dec    edx
  40daba:	daa    
  40dabb:	xor    esi,eax
  40dabd:	mov    ds:0x89dfe3b,eax
  40dac2:	inc    esi
  40dac3:	jno    0x40da81
  40dac5:	test   al,0x46
  40dac7:	(bad)  
  40dac8:	push   ecx
  40dac9:	std    
  40daca:	imul   ebx,DWORD PTR [ecx],0x2851143e
  40dad0:	jae    0x40db37
  40dad2:	dec    eax
  40dad3:	adc    BYTE PTR [edx+eiz*8],bl
  40dad6:	bswap  ebp
  40dad8:	leave  
  40dad9:	jbe    0x40da9c
  40dadb:	add    DWORD PTR [ebx],ecx
  40dadd:	test   eax,0xad2f8668
  40dae2:	paddq  mm7,QWORD PTR [ebx-0x18]
  40dae6:	out    0xaf,eax
  40dae8:	jbe    0x40dae9
  40daea:	xchg   esi,eax
  40daeb:	dec    edx
  40daec:	sbb    eax,esi
  40daee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daef:	stos   DWORD PTR es:[edi],eax
  40daf0:	pop    esp
  40daf1:	xor    BYTE PTR [eax+0x3c],0x56
  40daf5:	or     ebp,DWORD PTR [edx+0x1b08564d]
  40dafb:	mov    WORD PTR [eax+0x285575ff],es
  40db01:	std    
  40db02:	mov    ebp,0xcaa273cd
  40db07:	push   edi
  40db08:	jmp    0xcbf060da
  40db0d:	std    
  40db0e:	push   edx
  40db0f:	into   
  40db10:	jne    0x40db34
  40db12:	mov    esi,0xd5348bf1
  40db17:	call   0x50e3436f
  40db1c:	pop    di
  40db1e:	out    0xe3,eax
  40db20:	int    0xa4
  40db22:	xchg   ecx,eax
  40db23:	cdq    
  40db24:	mov    cl,0x91
  40db26:	cmp    ebx,ebp
  40db28:	mov    esp,esp
  40db2a:	fist   DWORD PTR [esi+0x38]
  40db2d:	dec    ecx
  40db2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db2f:	mov    bh,0xc9
  40db31:	ins    BYTE PTR es:[edi],dx
  40db32:	loop   0x40db42
  40db34:	ficom  DWORD PTR [esi+0x7f]
  40db37:	mov    al,ds:0x780bc7b0
  40db3c:	jb     0x40db18
  40db3e:	cmp    al,0x92
  40db40:	adc    BYTE PTR [edx-0x2e],bh
  40db43:	retf   
  40db44:	in     eax,0x2f
  40db46:	(bad)  
  40db48:	addr16 cwde 
  40db4a:	dec    edx
  40db4b:	cmp    al,0xd1
  40db4d:	ja     0x40dbba
  40db4f:	jo     0x40dad9
  40db51:	outs   dx,BYTE PTR ds:[esi]
  40db52:	pop    ebx
  40db53:	into   
  40db54:	out    0xad,eax
  40db56:	mov    ch,0xda
  40db58:	mov    ds:0xec35c1df,eax
  40db5d:	das    
  40db5e:	loopne 0x40dae3
  40db60:	repz fdivr DWORD PTR ss:[esp]
  40db65:	mov    bl,0x52
  40db67:	pusha  
  40db68:	fmul   QWORD PTR [edx-0x7f]
  40db6b:	jmp    0x149c372c
  40db70:	stos   DWORD PTR es:[edi],eax
  40db71:	xchg   edx,eax
  40db72:	xchg   esp,eax
  40db73:	stos   DWORD PTR es:[edi],eax
  40db74:	cdq    
  40db75:	sbb    eax,0xa827831d
  40db7a:	mov    ds:0xad004c3e,al
  40db7f:	sub    eax,0xb1e93e83
  40db84:	push   esp
  40db85:	inc    ebp
  40db86:	cmp    ah,BYTE PTR [eax]
  40db88:	mov    al,0x7a
  40db8a:	inc    ebp
  40db8b:	sub    al,0x8
  40db8d:	inc    edi
  40db8e:	iret   
  40db8f:	js     0x40db4f
  40db91:	adc    BYTE PTR [ebx*8+0x15754d4d],dh
  40db98:	and    eax,0xc56b961d
  40db9d:	sbb    eax,0x7080c19e
  40dba2:	or     eax,0x6ced2502
  40dba7:	addr16 stc 
  40dba9:	sub    al,0xcd
  40dbab:	hlt    
  40dbac:	dec    esp
  40dbad:	popa   
  40dbae:	dec    eax
  40dbaf:	bound  ebx,QWORD PTR [eax]
  40dbb1:	mov    ebp,DWORD PTR [esi+0x39]
  40dbb4:	mov    al,0x8a
  40dbb6:	pushf  
  40dbb7:	fsubr  DWORD PTR es:[edi+0xa26127d]
  40dbbe:	retf   0x6544
  40dbc1:	sahf   
  40dbc2:	fidivr DWORD PTR [edx-0x789a367a]
  40dbc8:	lock idiv BYTE PTR [eax+0x42]
  40dbcc:	lods   al,BYTE PTR ds:[esi]
  40dbcd:	mov    ebx,0x816016c9
  40dbd2:	xchg   edi,eax
  40dbd3:	mov    ebx,0xd8b8fc7e
  40dbd8:	ss jecxz 0x40dc0a
  40dbdb:	push   esp
  40dbdc:	data16 es cli 
  40dbdf:	fcomi  st,st(3)
  40dbe1:	arpl   di,ax
  40dbe3:	mov    ebp,0xdfaa9c23
  40dbe8:	dec    edi
  40dbe9:	or     esi,DWORD PTR [esi+0x2f]
  40dbec:	shl    BYTE PTR [edi-0x7aa09af8],1
  40dbf2:	inc    eax
  40dbf3:	pushf  
  40dbf4:	sub    DWORD PTR [eax-0x28],edi
  40dbf7:	lods   eax,DWORD PTR ds:[esi]
  40dbf8:	jb     0x40db83
  40dbfa:	stc    
  40dbfb:	inc    eax
  40dbfc:	sbb    al,0x12
  40dbfe:	rcl    DWORD PTR [esi],cl
  40dc00:	push   ecx
  40dc01:	xchg   ecx,eax
  40dc02:	or     al,0x40
  40dc04:	add    dh,dh
  40dc06:	xor    dh,dl
  40dc08:	add    esp,ebx
  40dc0a:	xor    DWORD PTR [eax],ecx
  40dc0c:	dec    edi
  40dc0d:	fmul   st,st(5)
  40dc0f:	adc    BYTE PTR [edi+0x19ab8557],dl
  40dc15:	test   al,0x91
  40dc17:	cwde   
  40dc18:	jmp    0xf606:0x3babf200
  40dc1f:	inc    esi
  40dc20:	ds fwait
  40dc22:	add    dl,ch
  40dc24:	lods   eax,DWORD PTR gs:[esi]
  40dc26:	adc    al,0xe0
  40dc28:	lods   al,BYTE PTR ds:[esi]
  40dc29:	mov    ecx,0xf9eebb49
  40dc2e:	aam    0xe3
  40dc30:	jmp    0x40dc30
  40dc32:	retf   0x4c15
  40dc35:	sbb    esi,DWORD PTR [ebx-0x30]
  40dc38:	mov    ah,0x46
  40dc3a:	jns    0x40dc3d
  40dc3c:	or     eax,0x5a05de70
  40dc41:	jecxz  0x40dc50
  40dc43:	fisttp WORD PTR [edi+0x45850a1c]
  40dc49:	inc    ebx
  40dc4a:	icebp  
  40dc4b:	add    esp,esi
  40dc4d:	xchg   ebp,eax
  40dc4e:	mov    eax,ds:0x2968e98d
  40dc53:	mov    bl,0xff
  40dc55:	in     eax,dx
  40dc56:	loop   0x40dc40
  40dc58:	stc    
  40dc59:	cmp    DWORD PTR [ebx-0x6973ed6c],ecx
  40dc5f:	fsubr  QWORD PTR [ebx-0x40d09373]
  40dc65:	push   edx
  40dc66:	mov    edx,esi
  40dc68:	cwde   
  40dc69:	fs jne 0x40dc31
  40dc6c:	sub    dl,ah
  40dc6e:	pop    ebp
  40dc6f:	loopne 0x40dcdd
  40dc71:	arpl   WORD PTR [esi],cx
  40dc73:	mov    ah,0x56
  40dc75:	mov    ebp,0x3c065e3
  40dc7a:	jge    0x40dcd9
  40dc7c:	mov    bh,0xcd
  40dc7e:	push   ss
  40dc7f:	or     BYTE PTR gs:[edx+eax*8-0x54516860],bh
  40dc87:	popf   
  40dc88:	out    0xc1,al
  40dc8a:	xchg   ecx,eax
  40dc8b:	or     eax,DWORD PTR [edi-0x781f852a]
  40dc91:	stos   DWORD PTR es:[edi],eax
  40dc92:	xchg   edi,eax
  40dc93:	(bad)  
  40dc94:	mov    ebp,0x20a03cc2
  40dc99:	xchg   ebp,ecx
  40dc9b:	mov    WORD PTR [esp+ebp*2-0x78ed9a2c],gs
  40dca2:	popf   
  40dca3:	xchg   DWORD PTR [ecx+0x5e9abcb7],esi
  40dca9:	mov    ds:0x74dbaf0f,eax
  40dcae:	in     al,0x7e
  40dcb0:	sbb    esp,DWORD PTR [eax+ebp*4]
  40dcb3:	inc    esp
  40dcb4:	pop    ss
  40dcb5:	and    dl,0xb6
  40dcb8:	add    ebp,DWORD PTR [edx]
  40dcba:	cld    
  40dcbb:	pop    esi
  40dcbc:	retf   0xf3b7
  40dcbf:	loope  0x40dcdf
  40dcc1:	dec    eax
  40dcc2:	xor    esp,ebp
  40dcc4:	push   ds
  40dcc5:	stos   BYTE PTR es:[edi],al
  40dcc6:	inc    ebx
  40dcc7:	xor    DWORD PTR ds:0x755cd983,edi
  40dccd:	jb     0x40dc7c
  40dccf:	fsubr  QWORD PTR [esi]
  40dcd1:	repz mov bl,0x54
  40dcd4:	mov    esi,0x78a26026
  40dcd9:	loopne 0x40dc9d
  40dcdb:	fs retf 0xbf34
  40dcdf:	xlat   BYTE PTR ds:[ebx]
  40dce0:	adc    al,ch
  40dce2:	jge    0x40dcd9
  40dce4:	lds    edi,FWORD PTR [ecx+esi*1-0x7fc34ca8]
  40dceb:	hlt    
  40dcec:	test   eax,0xba0939ce
  40dcf1:	call   0xdccd:0x42ae2efa
  40dcf8:	rol    BYTE PTR ds:0x7862dd66,cl
  40dcfe:	fsub   QWORD PTR [edx]
  40dd00:	cmp    eax,ebx
  40dd02:	fcomp  QWORD PTR [eax-0x2ae40ab3]
  40dd08:	bound  ebx,QWORD PTR [ecx*2-0x5d3312e8]
  40dd0f:	xchg   ebx,eax
  40dd10:	sbb    eax,0x9493de2d
  40dd15:	mov    eax,0x9f7398cc
  40dd1a:	mov    al,0x55
  40dd1c:	or     ebx,ebp
  40dd1e:	pop    edi
  40dd1f:	or     eax,0x88cb8b80
  40dd24:	(bad)
  40dd28:	jbe    0x40dd43
  40dd2a:	mov    ds,WORD PTR [edi+0x278f148e]
  40dd30:	psubb  mm0,QWORD PTR [ebp-0x63]
  40dd34:	xor    eax,0xbc18269b
  40dd39:	adc    al,0xba
  40dd3b:	inc    ebx
  40dd3c:	or     eax,0x534c0c97
  40dd41:	jmp    0x40ddb7
  40dd43:	addr16 xchg ebp,eax
  40dd45:	pushf  
  40dd46:	retf   0x9f3f
  40dd49:	stos   DWORD PTR es:[edi],eax
  40dd4a:	loop   0x40dd8c
  40dd4c:	(bad)  
  40dd4d:	retf   
  40dd4e:	mov    esp,0xaecb5095
  40dd53:	jae    0x40dd8a
  40dd55:	dec    dl
  40dd57:	jnp    0x40dd83
  40dd59:	lods   al,BYTE PTR ds:[esi]
  40dd5a:	push   edi
  40dd5b:	mov    ecx,?
  40dd5d:	cli    
  40dd5e:	pop    ds
  40dd5f:	std    
  40dd60:	xlat   BYTE PTR ds:[ebx]
  40dd61:	pop    ds
  40dd62:	jnp    0x40dd5d
  40dd64:	lea    ebx,[esi+0x7b]
  40dd67:	out    dx,eax
  40dd68:	xor    ebx,edx
  40dd6a:	xchg   esp,eax
  40dd6b:	inc    edx
  40dd6c:	popf   
  40dd6d:	push   ds
  40dd6e:	ins    BYTE PTR es:[edi],dx
  40dd6f:	xchg   ecx,eax
  40dd70:	xchg   esi,eax
  40dd71:	jo     0x40ddb6
  40dd73:	add    BYTE PTR [esi-0x68],al
  40dd76:	push   esp
  40dd77:	iret   
  40dd78:	xchg   ebp,eax
  40dd79:	pop    ss
  40dd7a:	push   ecx
  40dd7b:	mov    BYTE PTR [ebx],cl
  40dd7d:	xchg   DWORD PTR [edi+0x44],ebp
  40dd80:	push   ss
  40dd81:	jmp    0xb89:0x68199ad5
  40dd88:	push   ebx
  40dd89:	in     eax,dx
  40dd8a:	pusha  
  40dd8b:	pop    ebp
  40dd8c:	xchg   esp,eax
  40dd8d:	rep ins DWORD PTR es:[edi],dx
  40dd8f:	jno    0x40dda2
  40dd91:	call   0x1507848
  40dd96:	ja     0x40ddda
  40dd98:	push   ecx
  40dd99:	ins    BYTE PTR es:[edi],dx
  40dd9a:	jp     0x40dd40
  40dd9c:	mov    edi,0x1a465880
  40dda1:	pop    edx
  40dda2:	std    
  40dda3:	sub    dl,bh
  40dda5:	push   ecx
  40dda6:	dec    eax
  40dda7:	jae    0x40de0d
  40dda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddaa:	pop    eax
  40ddab:	retf   
  40ddac:	mov    WORD PTR [edx],es
  40ddae:	popf   
  40ddaf:	cmc    
  40ddb0:	cs pop es
  40ddb2:	jno    0x40dd79
  40ddb4:	add    eax,0x22e80888
  40ddb9:	pop    edi
  40ddba:	push   cs
  40ddbb:	cdq    
  40ddbc:	pusha  
  40ddbd:	mov    ebx,0x1760a480
  40ddc2:	pop    ecx
  40ddc4:	aad    0x2c
  40ddc6:	cmp    BYTE PTR ds:0x967cece9,bl
  40ddcc:	test   al,0x18
  40ddce:	fmul   DWORD PTR [edi+0x6f237eaa]
  40ddd4:	xchg   BYTE PTR [ecx+0x58],dh
  40ddd7:	inc    BYTE PTR [esi]
  40ddd9:	nop
  40ddda:	ds pop ds
  40dddc:	push   cs
  40dddd:	ret    0xd5ce
  40dde0:	ins    DWORD PTR es:[edi],dx
  40dde1:	and    edx,ecx
  40dde3:	fst    st(3)
  40dde5:	test   eax,0x43582052
  40ddea:	aad    0x7c
  40ddec:	xchg   edi,eax
  40dded:	jmp    0x40ddc2
  40ddef:	mov    ch,0x8e
  40ddf1:	pop    edx
  40ddf2:	ja     0x40de58
  40ddf4:	ficom  DWORD PTR [edi+0x30524767]
  40ddfa:	mov    edx,gs
  40ddfc:	push   esp
  40ddfd:	sub    eax,0xa02888c4
  40de02:	(bad)  
  40de03:	lods   eax,DWORD PTR ds:[esi]
  40de04:	mov    cl,0x9
  40de06:	and    BYTE PTR [ecx-0x7b2675fc],ah
  40de0c:	adc    al,0xb2
  40de0e:	aam    0x74
  40de10:	nop
  40de11:	daa    
  40de12:	repz dec ebx
  40de14:	fnstsw WORD PTR es:[esi]
  40de17:	inc    esp
  40de18:	or     WORD PTR [ebx-0x3],ax
  40de1c:	jne    0x40de85
  40de1e:	scas   al,BYTE PTR es:[edi]
  40de1f:	xchg   ecx,eax
  40de20:	jecxz  0x40ddbe
  40de22:	nop
  40de23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de24:	imul   ecx,DWORD PTR [ebp-0x4642f48],0x7c
  40de2b:	jmp    0x31d5dcea
  40de30:	or     eax,DWORD PTR [ebx]
  40de32:	mov    DWORD PTR [esi-0x58],ecx
  40de35:	test   BYTE PTR [ebx],0x9a
  40de38:	in     eax,0xc8
  40de3a:	(bad)  
  40de3c:	and    edi,esi
  40de3e:	popa   
  40de3f:	je     0x40de0f
  40de41:	mov    al,ds:0xa8e11af8
  40de46:	jp     0x40de42
  40de48:	add    DWORD PTR [esi],ebp
  40de4a:	shl    esi,cl
  40de4c:	repnz mov ss,WORD PTR [edi-0x41edf7bf]
  40de53:	sub    ch,al
  40de55:	aas    
  40de56:	lock hlt 
  40de58:	push   esi
  40de59:	dec    eax
  40de5a:	adc    bh,al
  40de5c:	test   al,0xd6
  40de5e:	cmp    al,0xb8
  40de60:	and    BYTE PTR [eax-0x71],0x5
  40de64:	pop    esp
  40de65:	xchg   esi,eax
  40de66:	xor    BYTE PTR [ecx+eax*2+0x4e],al
  40de6a:	data16 adc cl,BYTE PTR [edi]
  40de6d:	fisttp WORD PTR [ecx+0xe6b2bf0]
  40de73:	mov    cl,al
  40de75:	jl     0x40de80
  40de77:	ins    DWORD PTR es:[edi],dx
  40de78:	add    edx,edi
  40de7a:	(bad)  
  40de7b:	mov    bl,dl
  40de7d:	cmp    cl,BYTE PTR [eax+0x752b78cc]
  40de83:	pop    esi
  40de84:	push   edi
  40de85:	xchg   BYTE PTR [edx+eiz*2],ch
  40de88:	aam    0x65
  40de8a:	cmp    al,BYTE PTR [esi]
  40de8c:	adc    ch,BYTE PTR [edx]
  40de8e:	cmp    DWORD PTR [eax+edi*1+0x5be13383],ebx
  40de95:	in     eax,dx
  40de96:	mov    ds:0x896d7c13,eax
  40de9b:	xor    DWORD PTR [ebp+0x13],esi
  40de9e:	es jb  0x40de7b
  40dea1:	lods   eax,DWORD PTR ds:[esi]
  40dea2:	xchg   ebp,eax
  40dea3:	sbb    eax,0xcf06eccc
  40dea8:	dec    ecx
  40dea9:	popf   
  40deaa:	pusha  
  40deab:	std    
  40deac:	enter  0xa423,0x3d
  40deb0:	sbb    DWORD PTR [ebx-0x13],ebp
  40deb3:	outs   dx,DWORD PTR ds:[esi]
  40deb4:	fwait
  40deb5:	mov    edi,0xd9db0b7d
  40deba:	push   0x3
  40debc:	enter  0x5924,0x6c
  40dec0:	mov    eax,0x71bc2e92
  40dec5:	fs dec edi
  40dec7:	inc    eax
  40dec8:	xchg   DWORD PTR [edx],ebp
  40deca:	std    
  40decb:	rcl    edx,0x6e
  40dece:	outs   dx,BYTE PTR ds:[esi]
  40decf:	jne    0x40de6e
  40ded1:	push   ebp
  40ded2:	sub    al,0xa2
  40ded4:	stos   BYTE PTR es:[edi],al
  40ded5:	adc    eax,0xdb57ab41
  40deda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dedb:	cld    
  40dedc:	rcr    dh,0x85
  40dedf:	ret    
  40dee0:	mov    ds:0x2876feee,eax
  40dee5:	adc    DWORD PTR [ecx-0x64],edx
  40dee8:	pop    eax
  40dee9:	adc    DWORD PTR [ebx+ebx*1-0x3],esp
  40deed:	outs   dx,DWORD PTR ds:[esi]
  40deee:	pushf  
  40deef:	adc    al,BYTE PTR [ebp+0x8]
  40def2:	dec    eax
  40def3:	test   cl,0x96
  40def6:	cmp    DWORD PTR [edi],esi
  40def8:	jg     0x40deff
  40defa:	push   ds
  40defb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40defc:	add    ebx,ecx
  40defe:	push   eax
  40deff:	jecxz  0x40df57
  40df01:	or     DWORD PTR [eax],ecx
  40df03:	cs push ecx
  40df05:	loope  0x40dea9
  40df07:	mov    al,0x21
  40df09:	fwait
  40df0a:	mov    bh,0xdf
  40df0c:	push   es
  40df0d:	pop    eax
  40df0e:	inc    ebx
  40df0f:	popf   
  40df10:	sub    eax,0xf01b18b0
  40df15:	inc    ecx
  40df16:	(bad)  [edi+0x75]
  40df19:	xor    al,0x51
  40df1b:	inc    eax
  40df1c:	push   DWORD PTR [ecx-0x1ef78fe8]
  40df22:	fistp  QWORD PTR [ecx+0xa95d375]
  40df28:	push   edi
  40df29:	xchg   edx,eax
  40df2a:	mov    edi,edx
  40df2c:	push   esp
  40df2d:	jae    0x40df22
  40df2f:	or     bl,dl
  40df31:	push   0xffffffc8
  40df33:	not    esi
  40df35:	test   ah,al
  40df37:	es cmp al,0x31
  40df3a:	mov    ecx,0x3b567bc3
  40df3f:	iretw  
  40df41:	lock inc eax
  40df43:	sahf   
  40df44:	lock fxch st(0)
  40df47:	or     dh,BYTE PTR [eax]
  40df49:	and    DWORD PTR [ebp-0x4f66f677],0x3ed751f3
  40df53:	pop    esp
  40df54:	xor    eax,0x6e8e9a1b
  40df59:	and    eax,0x135e953
  40df5e:	into   
  40df5f:	sbb    dl,BYTE PTR [edx+0x54fbb03e]
  40df65:	sub    al,BYTE PTR [eax-0xa]
  40df68:	push   ds
  40df69:	sbb    esi,ebx
  40df6b:	cmp    eax,0xfa4bb896
  40df70:	inc    edx
  40df71:	jp     0x40dfbe
  40df73:	outs   dx,BYTE PTR ds:[esi]
  40df74:	jb     0x40dfd7
  40df76:	and    eax,0xa49088e6
  40df7b:	sub    al,0xa9
  40df7d:	pop    ss
  40df7e:	or     edx,DWORD PTR [edx+0x0]
  40df81:	mov    bl,0x4e
  40df83:	xchg   edi,eax
  40df84:	popf   
  40df85:	mov    ebx,0xea1219b
  40df8a:	js     0x40dfd4
  40df8c:	add    eax,0x28d3a23c
  40df91:	(bad)  
  40df92:	cli    
  40df93:	sbb    eax,0xed5a0acc
  40df98:	out    0x61,al
  40df9a:	push   ebp
  40df9b:	jmp    0x17f03ab5
  40dfa0:	jmp    0xf7f08c00
  40dfa5:	jle    0x40dfc3
  40dfa7:	call   0xfc0a4503
  40dfac:	pop    eax
  40dfad:	mov    dl,BYTE PTR [ebx+0x0]
  40dfb0:	jne    0x40df48
  40dfb2:	cmp    al,BYTE PTR [esi+0x6d]
  40dfb5:	test   DWORD PTR [ecx],ebx
  40dfb7:	outs   dx,BYTE PTR ds:[esi]
  40dfb8:	sub    eax,0x8cb98c07
  40dfbd:	das    
  40dfbe:	ss js  0x40e016
  40dfc1:	icebp  
  40dfc2:	xor    DWORD PTR [ecx+esi*2-0x37],edx
  40dfc6:	dec    ebp
  40dfc7:	mov    eax,DWORD PTR ds:[edx-0x75106b02]
  40dfce:	push   edi
  40dfcf:	cwde   
  40dfd0:	ja     0x40e004
  40dfd2:	pushf  
  40dfd3:	ret    
  40dfd4:	jg     0x40e04f
  40dfd6:	xor    al,0x92
  40dfd8:	(bad)  
  40dfd9:	into   
  40dfda:	adc    BYTE PTR [si-0x7],dl
  40dfde:	sti    
  40dfdf:	pop    ebp
  40dfe0:	and    BYTE PTR [ecx-0x50c1ea9e],al
  40dfe6:	jp     0x40e004
  40dfe8:	push   ebx
  40dfe9:	cs dec esp
  40dfeb:	xor    BYTE PTR ds:0xdc639c99,ah
  40dff1:	push   cs
  40dff2:	test   DWORD PTR [edi-0x6f],ecx
  40dff5:	sti    
  40dff6:	and    dh,BYTE PTR [esi+0x6f66031d]
  40dffc:	fwait
  40dffd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfff:	es dec ecx
  40e001:	fnstenv [edi]
  40e003:	arpl   di,ax
  40e005:	xor    al,0x6d
  40e007:	push   edx
  40e008:	lahf   
  40e009:	pop    es
  40e00a:	xor    DWORD PTR [eax],ebp
  40e00c:	dec    ebp
  40e00d:	cmp    bh,BYTE PTR [eax-0x74]
  40e010:	xchg   edx,eax
  40e011:	add    BYTE PTR [eax+0x46],ah
  40e014:	pop    esi
  40e015:	push   esi
  40e016:	mov    WORD PTR [edi],es
  40e018:	sub    eax,0x1d422be3
  40e01e:	(bad)  
  40e01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e020:	jmp    0xdea9:0x5b59e5bc
  40e027:	add    BYTE PTR gs:[ebx],dl
  40e02a:	std    
  40e02b:	fdiv   QWORD PTR [edx]
  40e02d:	sbb    eax,0xce17dd1f
  40e032:	test   eax,0x60029237
  40e037:	fwait
  40e038:	stc    
  40e039:	pusha  
  40e03a:	aas    
  40e03b:	fwait
  40e03c:	pop    ebx
  40e03d:	jne    0x40e062
  40e03f:	add    ch,dl
  40e041:	or     BYTE PTR [edi+0x71],bl
  40e044:	mov    al,ds:0x32b36bc3
  40e049:	fwait
  40e04a:	adc    al,BYTE PTR [ebp-0x76e1c0a6]
  40e050:	in     eax,0x64
  40e052:	push   ss
  40e053:	mov    edx,0xdff6e450
  40e058:	das    
  40e059:	mov    dl,0xe2
  40e05b:	fcom   DWORD PTR [ebx-0x44]
  40e05e:	ins    BYTE PTR es:[edi],dx
  40e05f:	sub    dh,ah
  40e061:	lock jne 0x40e031
  40e064:	mov    ds:0x512abde0,eax
  40e069:	cli    
  40e06a:	jns    0x40dff6
  40e06c:	es hlt 
  40e06e:	push   esp
  40e06f:	call   0x9dcd:0x2ff1c4c0
  40e076:	lods   al,BYTE PTR ds:[esi]
  40e077:	adc    dh,BYTE PTR [esi+0x517634f5]
  40e07d:	inc    edx
  40e07e:	pop    DWORD PTR [edi-0x13cd24e]
  40e084:	add    eax,0x53819277
  40e089:	ret    0xcbf8
  40e08c:	and    eax,0xcc680756
  40e091:	int    0x6f
  40e093:	adc    al,0x88
  40e095:	cmp    DWORD PTR [eax],edi
  40e097:	adc    al,bl
  40e099:	fnstenv [ecx-0x1a738fb9]
  40e09f:	push   cs
  40e0a0:	scas   al,BYTE PTR es:[edi]
  40e0a1:	out    0xba,eax
  40e0a3:	dec    ecx
  40e0a4:	xchg   esp,eax
  40e0a5:	test   DWORD PTR [edi-0x17e4155a],esi
  40e0ab:	push   cs
  40e0ac:	mov    dl,0x56
  40e0ae:	cwde   
  40e0af:	jae    0x40e0fc
  40e0b1:	cmp    DWORD PTR [ebx-0xdc25f03],0x3
  40e0b8:	ins    DWORD PTR es:[edi],dx
  40e0b9:	jmp    0x93da986a
  40e0be:	sbb    DWORD PTR [esi],edi
  40e0c0:	in     eax,0x85
  40e0c2:	push   ss
  40e0c3:	(bad)  
  40e0c4:	std    
  40e0c5:	adc    al,0x18
  40e0c8:	push   0x1ebce5bb
  40e0cd:	(bad)  
  40e0ce:	mov    ch,0xcf
  40e0d0:	jno    0x40e0d0
  40e0d2:	inc    edi
  40e0d3:	mov    eax,ds:0x731b9735
  40e0d8:	xchg   ebp,ecx
  40e0da:	pop    ds
  40e0db:	(bad)  
  40e0dc:	sbb    esi,ecx
  40e0de:	das    
  40e0df:	div    BYTE PTR [ebp+0x54]
  40e0e2:	xchg   esi,eax
  40e0e3:	xor    eax,0xd5530487
  40e0e8:	dec    ecx
  40e0e9:	hlt    
  40e0ea:	mov    al,ds:0x4dc4baef
  40e0ef:	jp     0x40e0b5
  40e0f1:	lds    ecx,FWORD PTR [esi]
  40e0f3:	inc    ecx
  40e0f4:	sub    al,0xf
  40e0f6:	adc    BYTE PTR [edi+eax*4-0x9a74a67],bl
  40e0fd:	sbb    BYTE PTR [esi],ch
  40e0ff:	retf   0x8edb
  40e102:	jl     0x40e168
  40e104:	out    0xde,al
  40e106:	xchg   DWORD PTR [esi+0x23b644dd],ebp
  40e10c:	popa   
  40e10d:	mul    DWORD PTR [edi+0xd]
  40e110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e112:	adc    al,0x94
  40e114:	hlt    
  40e115:	jne    0x40e0e2
  40e117:	xchg   ebx,eax
  40e118:	jl     0x40e15b
  40e11a:	sub    dh,BYTE PTR [eax+0x2567aa9e]
  40e120:	fidivr WORD PTR [ebp-0x60]
  40e123:	lods   eax,DWORD PTR ds:[esi]
  40e124:	xchg   BYTE PTR [ebx-0x53],dl
  40e127:	inc    edi
  40e128:	push   es
  40e129:	pop    ss
  40e12a:	lock jmp DWORD PTR [ebp+0x4ab5b51]
  40e131:	and    DWORD PTR [esi+edi*2-0x54],edx
  40e135:	mov    esi,0xe67f063a
  40e13a:	ins    BYTE PTR es:[edi],dx
  40e13b:	cmp    eax,0x7bb5d063
  40e140:	pop    eax
  40e141:	push   edi
  40e142:	data16 xor BYTE PTR [eax+0x54b80ba2],dh
  40e149:	xchg   esp,eax
  40e14a:	(bad)  [eax-0x7ca6e829]
  40e150:	(bad)  [esi]
  40e152:	jge    0x40e198
  40e154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e155:	cmp    dh,BYTE PTR [ebp-0x3b3d9ae4]
  40e15b:	jl     0x40e1ae
  40e15d:	test   eax,0xeb918481
  40e162:	rcl    BYTE PTR [edx+ecx*4-0x2ae38da8],cl
  40e169:	sub    eax,0x5bf92322
  40e16e:	jl     0x40e1e5
  40e170:	inc    ebp
  40e171:	call   0xc16e:0xf1a01668
  40e178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e179:	outs   dx,DWORD PTR ds:[esi]
  40e17a:	sti    
  40e17b:	ins    BYTE PTR es:[edi],dx
  40e17c:	ror    DWORD PTR [esp+esi*8],cl
  40e17f:	push   cs
  40e180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e181:	xchg   ebx,eax
  40e182:	dec    esp
  40e183:	(bad)  
  40e184:	lods   al,BYTE PTR ds:[esi]
  40e185:	pop    edx
  40e186:	cmp    DWORD PTR [ecx-0x7f6dd24b],ebp
  40e18c:	fadd   QWORD PTR [edi+0x1d59f8a1]
  40e192:	inc    ecx
  40e193:	lahf   
  40e194:	fist   WORD PTR [edi]
  40e196:	and    DWORD PTR [eax-0xa],esp
  40e199:	push   0x164c48b6
  40e19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e19f:	jl     0x40e1c8
  40e1a1:	cmp    ah,dh
  40e1a3:	adc    BYTE PTR [edi],ah
  40e1a5:	ins    DWORD PTR es:[edi],dx
  40e1a6:	aaa    
  40e1a7:	adc    edx,ebx
  40e1a9:	pop    ds
  40e1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ab:	mov    ah,0x9b
  40e1ad:	mov    esi,gs
  40e1af:	ss inc eax
  40e1b1:	ja     0x40e1da
  40e1b3:	fstp   DWORD PTR fs:[edx+0x2f3dbd39]
  40e1ba:	arpl   WORD PTR [eax],ax
  40e1bc:	not    BYTE PTR [ebx+0x2db1d3]
  40e1c2:	push   ecx
  40e1c3:	rcr    BYTE PTR [ebp-0x3f00b98f],0xdf
  40e1ca:	cli    
  40e1cb:	test   DWORD PTR [eax-0x534d83],esp
  40e1d1:	out    0xf8,al
  40e1d3:	adc    DWORD PTR [eax-0x23aa8009],0xfffffffa
  40e1da:	push   edi
  40e1db:	out    dx,al
  40e1dc:	pop    ebp
  40e1dd:	push   eax
  40e1de:	imul   dl
  40e1e0:	push   es
  40e1e1:	or     edx,ebp
  40e1e3:	rcr    DWORD PTR [ebp+0x3b],1
  40e1e6:	call   0xe4679cd9
  40e1eb:	fnsave ds:0x55d751a5
  40e1f1:	fcom   DWORD PTR ds:0xed85a696
  40e1f7:	mov    esi,0xd7968775
  40e1fc:	sub    DWORD PTR [edi-0x2fba8c09],ebx
  40e202:	cld    
  40e203:	push   0x35980d24
  40e208:	ret    0x660c
  40e20b:	pushf  
  40e20c:	cdq    
  40e20d:	mov    esp,0x5f7fa8f8
  40e212:	cs ds ins BYTE PTR es:[edi],dx
  40e215:	mov    edi,DWORD PTR [esi+0x4298f5ae]
  40e21b:	mov    BYTE PTR [eax],al
  40e21d:	mov    al,0x85
  40e21f:	shl    cl,0xe2
  40e222:	mov    ebx,0x43424d57
  40e227:	inc    eax
  40e228:	inc    ebp
  40e229:	jns    0x40e280
  40e22b:	push   es
  40e22c:	and    al,0x20
  40e22e:	cdq    
  40e22f:	or     ah,bh
  40e231:	ja     0x40e248
  40e233:	jb     0x40e202
  40e235:	sub    ebx,DWORD PTR [esi]
  40e237:	(bad)  
  40e238:	mov    esi,0x6d22c9db
  40e23d:	or     ecx,DWORD PTR [eax-0x67]
  40e240:	std    
  40e241:	jg     0x40e251
  40e243:	repnz dec ecx
  40e245:	cmp    DWORD PTR [edi],0x3b7a5767
  40e24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e24c:	inc    ecx
  40e24d:	mov    al,ds:0xaff7372b
  40e252:	das    
  40e253:	popf   
  40e254:	jg     0x40e27d
  40e256:	mov    ?,WORD PTR [edx+edx*1+0x41f8bb03]
  40e25d:	ins    BYTE PTR es:[edi],dx
  40e25e:	lock cmp al,0x80
  40e261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e262:	mov    bh,0x4c
  40e264:	pop    es
  40e265:	sbb    al,0x1b
  40e267:	push   ds
  40e268:	out    dx,eax
  40e269:	cs dec esp
  40e26b:	sbb    eax,0xbbd8324f
  40e270:	sub    eax,0x80181bac
  40e275:	push   0x64030ff
  40e27a:	arpl   bp,sp
  40e27c:	dec    ebx
  40e27d:	nop
  40e27e:	jns    0x40e26e
  40e280:	cdq    
  40e281:	arpl   WORD PTR [ecx+0x24a4fd5f],bx
  40e287:	fwait
  40e288:	lock and al,0x3b
  40e28b:	sbb    DWORD PTR [esi+0x30],ebx
  40e28e:	mov    ebx,0xc0072c10
  40e293:	xor    BYTE PTR [edi+edi*8-0x1d],dh
  40e297:	jbe    0x40e2f3
  40e299:	int    0x79
  40e29b:	dec    edx
  40e29c:	adc    ebp,DWORD PTR [ebp+0x27315a1]
  40e2a2:	aas    
  40e2a3:	adc    al,0x17
  40e2a5:	mov    ecx,0x30cec30b
  40e2aa:	inc    ebp
  40e2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ac:	fst    DWORD PTR [esi+eiz*4+0x5b]
  40e2b0:	ror    bl,cl
  40e2b2:	imul   ebp,DWORD PTR [edi+eax*2+0x767b811e],0xffffffa8
  40e2ba:	fdivr  QWORD PTR [esi-0x4f6c1587]
  40e2c0:	ret    0x5c8f
  40e2c3:	lods   eax,DWORD PTR ds:[esi]
  40e2c4:	sar    DWORD PTR [ebp+0x42],1
  40e2c7:	inc    ecx
  40e2c8:	xchg   edi,eax
  40e2c9:	pop    eax
  40e2ca:	(bad)  
  40e2cb:	(bad)  
  40e2cc:	xor    ebx,ecx
  40e2ce:	xor    DWORD PTR [edx-0x4413a325],edx
  40e2d4:	fiadd  DWORD PTR [ebp+0x224a4c02]
  40e2da:	mov    ebp,0xc2c43fa3
  40e2df:	mov    eax,ds:0xa021ed92
  40e2e4:	and    DWORD PTR [edx+0x4436f02b],0x5a1f93ad
  40e2ee:	loop   0x40e305
  40e2f0:	add    bl,bh
  40e2f2:	in     eax,dx
  40e2f3:	add    al,0xf6
  40e2f5:	call   0x954de997
  40e2fa:	push   ebx
  40e2fb:	and    BYTE PTR [edx],dl
  40e2fd:	pop    ecx
  40e2fe:	mov    edx,0xdf1eaee8
  40e303:	sar    DWORD PTR [eax-0x5a4c52b1],1
  40e309:	mov    edx,0x44b5972a
  40e30e:	mov    esp,0x92f9397c
  40e313:	mov    dh,0x7b
  40e315:	stos   DWORD PTR es:[edi],eax
  40e316:	les    esp,FWORD PTR [ebx]
  40e318:	xor    DWORD PTR [edi+edx*1-0x5b96db9f],ebx
  40e31f:	sub    DWORD PTR [edi-0x7ec96439],esp
  40e325:	jmp    0x40e2e9
  40e327:	les    eax,FWORD PTR [ecx-0x47]
  40e32a:	jo     0x40e31a
  40e32c:	shl    bl,cl
  40e32e:	(bad)  
  40e32f:	int3   
  40e330:	sti    
  40e331:	jb     0x40e309
  40e333:	mov    BYTE PTR [ebp-0x40bd9eee],ah
  40e339:	mov    al,0x40
  40e33b:	add    ah,BYTE PTR [edx+0x7c70b5f4]
  40e341:	pop    esp
  40e342:	dec    eax
  40e343:	jmp    0x40e2ce
  40e345:	ss aam 0x72
  40e348:	fimul  DWORD PTR [ebx]
  40e34a:	xchg   edi,eax
  40e34b:	add    DWORD PTR [ebp-0x50],edi
  40e34e:	(bad)  
  40e34f:	push   esp
  40e350:	mov    dh,0xa7
  40e352:	push   0x76
  40e354:	xor    bl,BYTE PTR [edx]
  40e356:	stc    
  40e357:	dec    BYTE PTR [eax+0x76]
  40e35a:	xor    ecx,edi
  40e35c:	or     ah,dl
  40e35e:	mov    bh,0xbd
  40e360:	ja     0x40e3ba
  40e362:	jmp    0x40e3b3
  40e364:	(bad)  
  40e365:	add    BYTE PTR [esi],bh
  40e367:	push   es
  40e368:	in     al,0x38
  40e36a:	push   ss
  40e36b:	popa   
  40e36c:	aam    0x68
  40e36e:	(bad)  
  40e36f:	in     eax,dx
  40e370:	(bad)  
  40e371:	push   0x79
  40e373:	inc    eax
  40e374:	pop    ebp
  40e375:	scas   al,BYTE PTR es:[edi]
  40e376:	or     dl,BYTE PTR [edi-0x34]
  40e379:	outs   dx,DWORD PTR ds:[esi]
  40e37a:	cli    
  40e37b:	cmp    eax,DWORD PTR [edi+eax*1]
  40e37e:	es inc eax
  40e380:	bound  edi,QWORD PTR [edi]
  40e382:	jl     0x40e3bf
  40e384:	pop    es
  40e385:	(bad)  
  40e386:	cmp    DWORD PTR [ebx+0x22],ebp
  40e389:	pop    es
  40e38a:	mov    eax,ds:0xc31fe3cc
  40e38f:	call   0x3dcd8bb4
  40e394:	clc    
  40e395:	sub    esi,DWORD PTR [esi+0x4bea46d5]
  40e39b:	dec    eax
  40e39c:	sub    esp,DWORD PTR [edx-0x6fe7c87d]
  40e3a2:	test   al,0x6e
  40e3a4:	shl    DWORD PTR [edx+0xc2f57e3],1
  40e3aa:	dec    ebx
  40e3ab:	mov    ch,0xd7
  40e3ad:	out    dx,al
  40e3ae:	imul   edi,DWORD PTR [ecx+0x2f],0x657d83e5
  40e3b5:	sti    
  40e3b6:	fidiv  DWORD PTR [eax+0x119f5a28]
  40e3bc:	sub    al,0xdb
  40e3be:	xchg   esi,eax
  40e3bf:	and    DWORD PTR [ecx],ebp
  40e3c1:	and    BYTE PTR [ecx-0x5b48f789],dl
  40e3c7:	inc    ebp
  40e3c8:	mov    dh,0x94
  40e3ca:	out    dx,eax
  40e3cb:	dec    eax
  40e3cc:	ins    BYTE PTR es:[edi],dx
  40e3cd:	pop    ebx
  40e3ce:	sbb    eax,0x244d2c70
  40e3d3:	mov    ecx,0x47b25743
  40e3d8:	fld    DWORD PTR [esi+0x1b]
  40e3db:	into   
  40e3dc:	lock jbe 0x40e3d3
  40e3df:	inc    edi
  40e3e0:	pushf  
  40e3e1:	test   eax,0xd724061f
  40e3e6:	or     edi,DWORD PTR [edx-0x117c1caa]
  40e3ec:	ja     0x40e412
  40e3ee:	jmp    0x40e46f
  40e3f0:	icebp  
  40e3f1:	imul   esp,DWORD PTR ds:0x77176c87,0xffffffb0
  40e3f8:	jge    0x40e38c
  40e3fa:	xchg   ebx,eax
  40e3fb:	sbb    dl,BYTE PTR [ecx+0x2fa57b73]
  40e401:	xchg   edx,eax
  40e402:	cmovo  edx,DWORD PTR [edx]
  40e405:	xchg   BYTE PTR [edx-0x686d16d1],bl
  40e40b:	add    ah,BYTE PTR [ecx]
  40e40d:	push   edi
  40e40e:	and    BYTE PTR [edi-0x26],0xdf
  40e412:	popf   
  40e413:	pop    es
  40e414:	(bad)  
  40e415:	jmp    0x40e3e6
  40e417:	fistp  QWORD PTR [edi+0x274af63d]
  40e41d:	cdq    
  40e41e:	fwait
  40e41f:	pop    ebx
  40e420:	dec    edx
  40e421:	push   esi
  40e422:	jmp    0x4828335c
  40e427:	mov    ds:0x326b3ab4,al
  40e42c:	ss push esi
  40e42e:	mov    esp,0xbe31d11
  40e433:	pushf  
  40e434:	cmp    dl,0xe
  40e437:	inc    eax
  40e438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e439:	and    dl,0xe5
  40e43c:	xor    al,0xda
  40e43e:	(bad)  
  40e43f:	sub    al,0x8c
  40e441:	or     esp,DWORD PTR [ebx+esi*4-0x5aa46640]
  40e448:	cmp    ecx,DWORD PTR [esi-0x14]
  40e44b:	xor    ebp,DWORD PTR [edi+eax*8-0x1e5919db]
  40e452:	mov    ds:0x3cc17258,al
  40e457:	std    
  40e458:	(bad)  
  40e459:	sub    al,BYTE PTR [ecx+0x10580877]
  40e45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e460:	mov    ebx,0x9ec05cd5
  40e465:	iret   
  40e466:	pop    edx
  40e467:	sbb    al,ah
  40e469:	dec    ebx
  40e46a:	bound  ecx,QWORD PTR [eax]
  40e46c:	fs jmp 0x9c65396f
  40e472:	or     al,0x4a
  40e474:	pop    ss
  40e475:	(bad)  
  40e476:	sub    ch,BYTE PTR [ebp+0x42]
  40e479:	clc    
  40e47a:	add    eax,eax
  40e47c:	arpl   WORD PTR [edi],bp
  40e47e:	cs scas al,BYTE PTR es:[edi]
  40e480:	xor    ah,dl
  40e482:	(bad)  
  40e483:	scas   al,BYTE PTR es:[edi]
  40e484:	fprem  
  40e486:	test   DWORD PTR [ebp-0x179b2a00],esp
  40e48c:	mov    ?,WORD PTR ds:0x8ed8dc40
  40e492:	or     al,0xe7
  40e494:	outs   dx,DWORD PTR ds:[esi]
  40e495:	add    ebx,ebp
  40e497:	ret    0x128d
  40e49a:	not    DWORD PTR [eax+0x4]
  40e49d:	sbb    DWORD PTR [eax+esi*2],eax
  40e4a0:	cs xchg ebp,eax
  40e4a2:	(bad)  
  40e4a4:	repz mov dh,0x7a
  40e4a7:	ins    DWORD PTR es:[edi],dx
  40e4a8:	or     BYTE PTR [edi],ah
  40e4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ac:	aam    0x68
  40e4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4af:	(bad)  
  40e4b0:	push   ds
  40e4b1:	ret    
  40e4b2:	push   ss
  40e4b3:	fld    TBYTE PTR [edx-0x4]
  40e4b6:	stos   BYTE PTR es:[edi],al
  40e4b7:	push   cs
  40e4b8:	ins    BYTE PTR es:[edi],dx
  40e4b9:	lock loop 0x40e501
  40e4bc:	jne    0x40e4d8
  40e4be:	rcr    DWORD PTR [edx],0x0
  40e4c1:	jbe    0x40e535
  40e4c3:	enter  0x4bfe,0x14
  40e4c7:	and    ebx,DWORD PTR [eax]
  40e4c9:	push   ebx
  40e4ca:	sub    al,0xa1
  40e4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4cd:	(bad)  
  40e4ce:	jne    0x40e54f
  40e4d0:	imul   ecx,DWORD PTR [esi+0x7a],0x1c4fe5f4
  40e4d7:	jmp    0x40e49b
  40e4d9:	cmc    
  40e4da:	jbe    0x40e50a
  40e4dc:	stos   DWORD PTR es:[edi],eax
  40e4dd:	(bad)  
  40e4de:	push   ebp
  40e4df:	adc    DWORD PTR [edi-0x3d],0xd734db
  40e4e6:	xor    DWORD PTR [eax+0x59b4f7bd],0xc18de657
  40e4f0:	inc    ecx
  40e4f1:	stos   BYTE PTR es:[edi],al
  40e4f2:	retf   
  40e4f3:	sub    DWORD PTR [ebx+0x596a5a6c],eax
  40e4f9:	mov    dl,0x4a
  40e4fb:	pusha  
  40e4fc:	ret    
  40e4fd:	call   0x9ec30642
  40e502:	cli    
  40e503:	and    al,BYTE PTR ds:0x2a4d24e3
  40e509:	pop    ss
  40e50a:	test   eax,0x4655a058
  40e50f:	ffreep st(3)
  40e511:	sahf   
  40e512:	(bad)
  40e515:	fnstsw WORD PTR [edx]
  40e517:	push   ss
  40e518:	add    ah,al
  40e51a:	mov    bh,BYTE PTR [edi+0x28d3d29a]
  40e520:	jg     0x40e501
  40e522:	or     eax,0xccae3567
  40e527:	xchg   edi,eax
  40e528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e529:	dec    ecx
  40e52a:	ss loop 0x40e51e
  40e52d:	inc    esp
  40e52e:	and    BYTE PTR [ebp+0x77],0xd5
  40e532:	mov    edi,0xfb2926ac
  40e537:	outs   dx,BYTE PTR ds:[esi]
  40e538:	add    dh,BYTE PTR [ecx]
  40e53a:	sbb    esi,eax
  40e53c:	mov    eax,ds:0x992bf5de
  40e541:	inc    ebx
  40e542:	leave  
  40e543:	(bad)  [edi-0x16e32184]
  40e549:	pop    ebx
  40e54a:	out    0x8b,eax
  40e54c:	sbb    DWORD PTR [ebx+0x42],ecx
  40e54f:	and    al,BYTE PTR [edi-0x40]
  40e552:	shr    DWORD PTR [eax*1+0x48ed2ac9],1
  40e559:	rcl    BYTE PTR [edi+eax*4+0x5],1
  40e55d:	dec    ebp
  40e55e:	mov    ah,0x54
  40e560:	push   edx
  40e561:	jbe    0x40e502
  40e563:	jmp    0xb211:0x118bee7d
  40e56a:	popf   
  40e56b:	and    al,dl
  40e56d:	stos   BYTE PTR es:[edi],al
  40e56e:	push   ebx
  40e56f:	push   cs
  40e570:	ins    DWORD PTR es:[edi],dx
  40e571:	or     ecx,DWORD PTR [si-0x6f2d]
  40e576:	fist   WORD PTR [edx+0x1d6b21f9]
  40e57c:	dec    edi
  40e57d:	cwde   
  40e57e:	lea    edi,[esi-0x405952a4]
  40e584:	adc    eax,0x277125fd
  40e589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e58a:	xchg   BYTE PTR [esi+ebp*1],cl
  40e58d:	adc    bh,dl
  40e58f:	das    
  40e590:	arpl   WORD PTR gs:[eax-0x35],cx
  40e594:	rol    DWORD PTR [ebp-0x68],0xd5
  40e598:	out    dx,al
  40e599:	ins    BYTE PTR es:[edi],dx
  40e59a:	push   0xffffff9a
  40e59c:	jno    0x40e5fe
  40e59e:	sub    ebp,DWORD PTR [edx-0x5ad7f278]
  40e5a4:	icebp  
  40e5a5:	sbb    eax,0x590d9540
  40e5aa:	mov    WORD PTR [edx-0xf],ss
  40e5ad:	std    
  40e5ae:	rcl    BYTE PTR [ebx-0x68],1
  40e5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b2:	or     eax,DWORD PTR [eax]
  40e5b4:	add    DWORD PTR [edx+0x66a52a34],esp
  40e5ba:	and    ebp,DWORD PTR [ebx+0x7f]
  40e5bd:	pusha  
  40e5be:	xor    eax,DWORD PTR [ebp-0x4]
  40e5c1:	stc    
  40e5c2:	hlt    
  40e5c3:	mov    DWORD PTR [ebx-0x46e9a47a],ebx
  40e5c9:	adc    eax,0x46647eea
  40e5ce:	shl    DWORD PTR [edx-0x182d8119],1
  40e5d4:	mov    esi,0xf00a5e3c
  40e5d9:	mov    WORD PTR ds:0xf35d49ec,ss
  40e5df:	popf   
  40e5e0:	dec    esp
  40e5e1:	or     eax,0x44611ce8
  40e5e6:	jae    0x40e63b
  40e5e8:	jmp    0x1c7ff3a8
  40e5ed:	out    dx,al
  40e5ee:	adc    ah,BYTE PTR [ebp-0x751a7a0c]
  40e5f4:	sbb    eax,DWORD PTR [ebp+0x3fab413d]
  40e5fa:	xchg   edi,eax
  40e5fb:	enter  0xbdf5,0x2a
  40e5ff:	add    DWORD PTR [edi],ecx
  40e601:	pop    esi
  40e602:	(bad)
  40e606:	dec    eax
  40e607:	jne    0x7e562d87
  40e60d:	jp     0x40e65d
  40e60f:	out    0xc3,eax
  40e611:	mov    DWORD PTR [edx-0x2b],edx
  40e614:	xor    al,0x40
  40e616:	dec    edi
  40e617:	imul   esi,eax,0x1b
  40e61a:	ds xor al,0x9f
  40e61d:	jb     0x40e65b
  40e61f:	jno    0x40e66a
  40e621:	mov    cl,0x81
  40e623:	daa    
  40e624:	mov    ecx,DWORD PTR [esi+0x7e]
  40e627:	inc    esi
  40e628:	or     al,0x5e
  40e62b:	mov    ebx,0x7862ff3f
  40e630:	xor    esi,DWORD PTR [edi]
  40e632:	sbb    DWORD PTR [eax-0x1d],0xbbb0f8eb
  40e639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63a:	mov    edi,0x962bbfbb
  40e63f:	int3   
  40e640:	mov    bh,0xef
  40e642:	and    al,BYTE PTR [eax]
  40e644:	hlt    
  40e645:	(bad)  [edx-0x66]
  40e648:	rol    dh,1
  40e64a:	pop    eax
  40e64b:	cmp    al,BYTE PTR [ebp+0xc2ce3ee]
  40e651:	adc    bh,BYTE PTR [ecx]
  40e653:	mov    ds:0x544061b8,eax
  40e658:	pop    ds
  40e659:	rcl    BYTE PTR [ebx],cl
  40e65b:	mov    ch,0xaa
  40e65d:	div    BYTE PTR [edx+ebx*4]
  40e660:	pop    edx
  40e661:	push   0xeb3b6306
  40e666:	leave  
  40e667:	xchg   edx,eax
  40e668:	sbb    eax,edi
  40e66a:	mul    BYTE PTR [ebx]
  40e66c:	jmp    0x8fde:0x6b12863f
  40e673:	adc    al,0xbf
  40e675:	sahf   
  40e676:	ja     0x40e60d
  40e678:	daa    
  40e679:	mov    ah,0x74
  40e67b:	jge    0x40e60a
  40e67d:	jne    0x40e686
  40e67f:	out    dx,eax
  40e680:	(bad)  
  40e681:	mov    ebx,0x4556e1c1
  40e686:	pop    ds
  40e687:	push   edi
  40e688:	mov    bl,0x13
  40e68a:	inc    edi
  40e68b:	fisttp QWORD PTR [eax]
  40e68d:	psubq  mm2,mm7
  40e690:	xchg   ebx,eax
  40e691:	or     ebx,ecx
  40e693:	mov    edx,ebx
  40e695:	jmp    0x40e716
  40e697:	cld    
  40e698:	mov    eax,0x1943b17
  40e69d:	mov    edi,0x317e915e
  40e6a2:	scas   eax,DWORD PTR es:[edi]
  40e6a3:	adc    esp,DWORD PTR [edi]
  40e6a5:	call   0x77b90d90
  40e6aa:	test   DWORD PTR [ecx+edx*2-0x7382e6a1],ebp
  40e6b1:	repz inc ecx
  40e6b3:	hlt    
  40e6b4:	mov    dl,0xe
  40e6b6:	jmp    0x3a5542d0
  40e6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6bc:	fwait
  40e6bd:	jo     0x40e6b8
  40e6bf:	cmpps  xmm5,XMMWORD PTR [edx+0x5cc37698],0x44
  40e6c7:	push   es
  40e6c8:	add    DWORD PTR [esi+0x30],ebx
  40e6cb:	mov    gs,WORD PTR [edx+0x254cf6ff]
  40e6d1:	and    BYTE PTR [esi+esi*8],0x2c
  40e6d5:	cs sbb al,0x2e
  40e6d8:	push   esp
  40e6d9:	cmp    al,ch
  40e6db:	in     eax,dx
  40e6dc:	jbe    0x40e737
  40e6de:	push   ds
  40e6df:	in     al,0xe
  40e6e1:	jge    0x40e72f
  40e6e3:	push   esi
  40e6e4:	test   al,0xd9
  40e6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6e7:	fdivr  st,st(7)
  40e6e9:	int3   
  40e6ea:	push   esp
  40e6eb:	inc    esi
  40e6ec:	inc    esp
  40e6ed:	inc    edx
  40e6ee:	jmp    0xbc8e510e
  40e6f3:	or     al,0xb5
  40e6f5:	int    0x2c
  40e6f7:	les    ecx,FWORD PTR ds:0xa22404e0
  40e6fd:	cmp    dh,bl
  40e6ff:	pop    ebp
  40e700:	loop   0x40e742
  40e702:	dec    edi
  40e703:	call   0xea52465c
  40e708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e709:	imul   eax,edi,0x84660f09
  40e70f:	inc    eax
  40e710:	mov    esi,0x960b2168
  40e715:	inc    eax
  40e716:	pop    DWORD PTR [eax+0x3f]
  40e719:	cld    
  40e71a:	sub    eax,DWORD PTR [edi+0x2efe6a09]
  40e720:	jae    0x40e79a
  40e722:	sti    
  40e723:	pop    eax
  40e724:	inc    esi
  40e725:	loope  0x40e6d5
  40e727:	aam    0xd2
  40e729:	ret    
  40e72a:	pop    edi
  40e72b:	fsubr  QWORD PTR [edx-0x9fd61c1]
  40e731:	cli    
  40e732:	cmp    BYTE PTR [eax],ch
  40e734:	rcr    DWORD PTR [edx+0x37124ef6],0x48
  40e73b:	popf   
  40e73c:	push   edi
  40e73d:	addr16 mov dl,0x2b
  40e740:	pop    ebx
  40e741:	out    dx,al
  40e742:	mov    eax,ds:0x1dabdc5f
  40e747:	xor    ah,BYTE PTR [edi+0x2ff0f18c]
  40e74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74e:	aaa    
  40e74f:	stos   DWORD PTR es:[edi],eax
  40e750:	fs repz xor al,0x17
  40e754:	inc    eax
  40e755:	push   ebp
  40e756:	mov    eax,0x4dfab5da
  40e75b:	add    DWORD PTR [eax-0x1d972df],ebp
  40e761:	sahf   
  40e762:	test   bh,0x31
  40e765:	pusha  
  40e766:	arpl   WORD PTR [edx-0x2bca8e6c],bp
  40e76c:	jae    0x40e7b1
  40e76e:	arpl   WORD PTR [edi+ebx*4],cx
  40e771:	(bad)
  40e776:	addr16 jne 0x40e741
  40e779:	push   0xffffffe4
  40e77b:	dec    ebp
  40e77c:	scas   al,BYTE PTR es:[edi]
  40e77d:	adc    ebx,DWORD PTR [edi-0x59]
  40e780:	dec    esp
  40e781:	jg     0x40e7e4
  40e783:	pop    eax
  40e784:	into   
  40e785:	test   bh,cl
  40e787:	cmp    eax,0x8e06f4bd
  40e78c:	xchg   BYTE PTR [eax],bl
  40e78e:	jnp    0x40e798
  40e790:	shr    BYTE PTR [edi],0xe6
  40e793:	cld    
  40e794:	lock mov ah,0x7b
  40e797:	xchg   edi,eax
  40e798:	pop    eax
  40e799:	add    BYTE PTR [ebx-0x39],dl
  40e79c:	pop    eax
  40e79d:	mov    dl,dh
  40e79f:	out    0x9b,eax
  40e7a1:	stos   DWORD PTR es:[edi],eax
  40e7a2:	jg     0x40e805
  40e7a4:	lock fstp QWORD PTR [edx]
  40e7a7:	jns    0x40e7db
  40e7a9:	lds    ebx,FWORD PTR [eax+0x23ec0c06]
  40e7af:	test   al,0xa0
  40e7b1:	jns    0x40e7fb
  40e7b3:	adc    eax,ebx
  40e7b5:	in     eax,0x73
  40e7b7:	push   ds
  40e7b8:	hlt    
  40e7b9:	or     DWORD PTR [edx-0x1e],eax
  40e7bc:	nop
  40e7bd:	mov    esp,0x2c2a98a9
  40e7c2:	jmp    0xaa90594e
  40e7c7:	adc    BYTE PTR [ebx+edx*8+0xc],cl
  40e7cb:	jae    0x40e7a2
  40e7cd:	pop    eax
  40e7ce:	fdiv   QWORD PTR [ebx-0x578cf6d]
  40e7d4:	and    al,0x20
  40e7d6:	rcr    BYTE PTR [ecx-0x42],0x8c
  40e7da:	pushw  0xa19e
  40e7de:	lock fist WORD PTR [edx-0x21e120e6]
  40e7e5:	xchg   esp,eax
  40e7e6:	in     al,0x26
  40e7e8:	mov    al,ds:0x53ea9662
  40e7ed:	mov    edi,0x9f464540
  40e7f2:	sbb    DWORD PTR [ecx+esi*4+0x1d61eb30],esp
  40e7f9:	sub    ebp,DWORD PTR [eax-0x13]
  40e7fc:	ficomp WORD PTR [ecx]
  40e7fe:	mov    ah,0xec
  40e800:	data16 (bad) 
  40e802:	lea    edx,ds:0x9d32a62b
  40e808:	xchg   edi,eax
  40e809:	xor    ebx,DWORD PTR es:[edi]
  40e80c:	rcl    ebx,1
  40e80e:	lahf   
  40e80f:	jecxz  0x40e7b5
  40e811:	outs   dx,DWORD PTR ds:[esi]
  40e812:	not    DWORD PTR [ecx]
  40e814:	pushf  
  40e815:	mov    bh,0xa7
  40e817:	iret   
  40e818:	push   ebx
  40e819:	jecxz  0x40e7f2
  40e81b:	call   0xf1e5fa9b
  40e820:	push   0x5b
  40e822:	sbb    ch,ch
  40e824:	dec    eax
  40e825:	pextrw eax,(bad),0xc5
  40e827:	inc    esp
  40e828:	mov    cs,WORD PTR [edx+0x5f]
  40e82b:	pop    edx
  40e82c:	and    eax,0x146f8310
  40e831:	shl    eax,0x8d
  40e834:	dec    esi
  40e835:	ficomp WORD PTR [esi+0x1f4b0d7d]
  40e83b:	inc    ebp
  40e83c:	lods   al,BYTE PTR ds:[esi]
  40e83d:	lods   al,BYTE PTR ds:[esi]
  40e83e:	fistp  WORD PTR [ecx]
  40e840:	jne    0x40e8a4
  40e842:	ror    ecx,cl
  40e844:	inc    DWORD PTR [ebx+0x77075abe]
  40e84a:	fldenv [edx-0x49ba9185]
  40e850:	dec    eax
  40e851:	jmp    0x40e84e
  40e853:	sbb    ebx,eax
  40e855:	out    0x22,eax
  40e857:	mov    BYTE PTR [edi+0x1c43195b],ch
  40e85d:	leave  
  40e85e:	inc    ebx
  40e85f:	jo     0x40e8b8
  40e861:	test   DWORD PTR ds:0x8b4509fe,edx
  40e867:	xchg   edi,eax
  40e868:	ror    ch,1
  40e86a:	xor    dh,BYTE PTR [ecx-0x45c2b9a1]
  40e870:	sub    al,0x42
  40e872:	jne    0x40e81e
  40e874:	lea    ebp,[ebx]
  40e876:	(bad)
  40e87a:	sub    DWORD PTR [ebp-0x1f6bdccb],0x9cb52b66
  40e884:	mov    al,ds:0xb21577d5
  40e889:	mov    edi,0x2447a40f
  40e88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e88f:	lods   al,BYTE PTR ds:[esi]
  40e890:	call   FWORD PTR [edi]
  40e892:	scas   eax,DWORD PTR es:[edi]
  40e893:	cmp    esp,ecx
  40e895:	retf   
  40e896:	test   DWORD PTR [edx],eax
  40e898:	mov    ecx,0x9a53bdd7
  40e89d:	or     ebp,ecx
  40e89f:	mov    ch,0x25
  40e8a1:	mov    esp,DWORD PTR [ebx]
  40e8a3:	inc    BYTE PTR [ecx]
  40e8a5:	pop    ecx
  40e8a6:	mov    bh,0x31
  40e8a8:	or     dl,ah
  40e8aa:	push   ss
  40e8ab:	loop   0x40e8bf
  40e8ad:	(bad)
  40e8b1:	sar    BYTE PTR [ebx],cl
  40e8b3:	mov    fs,WORD PTR [ebx+0x551e77e8]
  40e8b9:	jmp    0x41d7b9bf
  40e8be:	rcl    bl,1
  40e8c0:	and    bh,BYTE PTR [ecx]
  40e8c2:	cmp    BYTE PTR [edx-0x7b77d91f],bh
  40e8c8:	fidivr DWORD PTR [ecx]
  40e8ca:	sbb    BYTE PTR [edi+0x4f],dl
  40e8cd:	mov    ds:0xc2f6267b,eax
  40e8d2:	out    0x44,eax
  40e8d4:	pop    ebp
  40e8d5:	jg     0x40e86a
  40e8d7:	or     ah,ch
  40e8d9:	mov    dl,0xe8
  40e8db:	pop    ds
  40e8dc:	xchg   DWORD PTR [eax-0x25ce6d46],ecx
  40e8e2:	dec    edx
  40e8e3:	mov    ah,BYTE PTR ds:[ecx]
  40e8e6:	out    0x38,al
  40e8e8:	retf   0xbd6d
  40e8eb:	adc    ecx,DWORD PTR [edx-0x1e]
  40e8ee:	jno    0x40e8bc
  40e8f0:	dec    esp
  40e8f1:	xlat   BYTE PTR ds:[ebx]
  40e8f2:	repz jge 0x40e908
  40e8f5:	arpl   WORD PTR [ebp+0x41],si
  40e8f8:	pop    edi
  40e8f9:	pusha  
  40e8fa:	ins    BYTE PTR es:[edi],dx
  40e8fb:	(bad)  
  40e8fc:	out    dx,al
  40e8fd:	mov    ebp,0x98cbccb0
  40e902:	gs jge 0x40e8e1
  40e905:	(bad)  
  40e906:	(bad)  
  40e907:	in     eax,dx
  40e908:	mov    edx,0xad73e345
  40e90d:	xor    al,0x57
  40e90f:	and    DWORD PTR ds:0x993ca6fd,ebx
  40e915:	inc    eax
  40e916:	sub    al,0xa6
  40e918:	cwde   
  40e919:	sub    BYTE PTR [ebp+0x471a6b3e],bh
  40e91f:	fst    st(1)
  40e921:	js     0x40e8ee
  40e923:	inc    edx
  40e924:	add    ebp,DWORD PTR [edi-0x34]
  40e927:	mov    ecx,0x4bf9748a
  40e92c:	jnp    0x40e924
  40e92e:	nop
  40e92f:	sub    BYTE PTR [ebp-0x22e8f311],dl
  40e935:	out    0xae,eax
  40e937:	xor    al,0xd7
  40e939:	jnp    0x40e91f
  40e93b:	sahf   
  40e93c:	jbe    0x40e9b6
  40e93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e93f:	push   cs
  40e940:	(bad)  
  40e942:	jmp    0x729c24ef
  40e947:	clc    
  40e948:	imul   ebp,DWORD PTR ds:0xe06412c4,0x617bc374
  40e952:	mov    esi,0xf5f70664
  40e957:	arpl   WORD PTR [ecx+0x2d],bp
  40e95a:	xlat   BYTE PTR ds:[ebx]
  40e95b:	fwait
  40e95c:	loope  0x40e9a0
  40e95e:	or     edx,ebp
  40e960:	or     BYTE PTR ds:0x7cf18acb,bh
  40e966:	iret   
  40e967:	add    ebx,esi
  40e969:	popf   
  40e96a:	mov    edi,DWORD PTR [ebx+0x542fba1e]
  40e970:	mov    BYTE PTR ss:[esi-0x10],ch
  40e974:	cmp    al,0xd7
  40e976:	dec    edx
  40e977:	xchg   BYTE PTR [edi+0xcf1fdf2],ah
  40e97d:	mov    ch,0xaf
  40e97f:	fst    DWORD PTR [edi+0x4a]
  40e982:	test   BYTE PTR [eax],dl
  40e984:	add    ebp,DWORD PTR fs:[ebx+0x7b]
  40e988:	sar    DWORD PTR [esi-0x17490d4d],1
  40e98e:	push   ebp
  40e98f:	sub    eax,0x25b37cf1
  40e994:	jo     0x40e97d
  40e996:	xor    eax,0x91e5319a
  40e99b:	test   eax,0x66f17acf
  40e9a0:	icebp  
  40e9a1:	dec    ecx
  40e9a2:	pop    ds
  40e9a3:	or     al,0xd0
  40e9a5:	test   eax,0x33e8596f
  40e9aa:	xor    ch,ch
  40e9ac:	std    
  40e9ad:	pop    edi
  40e9ae:	repnz stos DWORD PTR es:[edi],eax
  40e9b0:	fmul   QWORD PTR [edi-0x56d4ba1f]
  40e9b6:	ins    DWORD PTR es:[edi],dx
  40e9b7:	sub    DWORD PTR ds:0x30cce382,edi
  40e9bd:	jne    0x40e9e2
  40e9bf:	push   ecx
  40e9c0:	vpminub xmm5,xmm0,XMMWORD PTR [esi-0xa]
  40e9c5:	adc    BYTE PTR [edx-0x5],ah
  40e9c8:	sub    al,0x92
  40e9ca:	jmp    0xb092d2c5
  40e9cf:	out    0xcc,eax
  40e9d1:	popf   
  40e9d2:	mov    eax,ds:0xf0fb7b7b
  40e9d7:	add    BYTE PTR [esi+0x6f],cl
  40e9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9db:	data16 lahf 
  40e9dd:	sub    al,ch
  40e9df:	scas   al,BYTE PTR es:[edi]
  40e9e0:	jne    0x40ea1e
  40e9e2:	into   
  40e9e3:	ja     0x40e997
  40e9e5:	ror    BYTE PTR [esi+0x6a],cl
  40e9e8:	jnp    0x40e9a7
  40e9ea:	cld    
  40e9eb:	push   0x73
  40e9ed:	pusha  
  40e9ee:	adc    esi,DWORD PTR [ebp+edi*2-0x433e7bb4]
  40e9f5:	imul   esi
  40e9f7:	xchg   ebp,eax
  40e9f8:	aad    0x75
  40e9fa:	pop    ebx
  40e9fb:	dec    ecx
  40e9fc:	mov    esp,DWORD PTR [edx-0x4a]
  40e9ff:	sbb    al,0x6
  40ea01:	cli    
  40ea02:	leave  
  40ea03:	data16 das 
  40ea05:	jno    0x40e992
  40ea07:	cmp    DWORD PTR [ebx],edx
  40ea09:	sbb    al,BYTE PTR [edi-0x7da40d0f]
  40ea0f:	shl    DWORD PTR [edi],0xbe
  40ea12:	pusha  
  40ea13:	fwait
  40ea14:	mul    BYTE PTR [edi-0x66003eb7]
  40ea1a:	inc    esi
  40ea1b:	es jmp 0x4f20:0xe097766a
  40ea23:	dec    ecx
  40ea24:	and    ebp,ebx
  40ea26:	push   es
  40ea27:	ins    DWORD PTR es:[edi],dx
  40ea28:	add    DWORD PTR [ebx+0x3e],ebp
  40ea2b:	or     edi,DWORD PTR [esi-0x6cbb9405]
  40ea31:	outs   dx,DWORD PTR ds:[esi]
  40ea32:	adc    al,0xee
  40ea34:	sub    ecx,ebp
  40ea36:	sbb    DWORD PTR [ecx+0x2a],ecx
  40ea39:	cmp    BYTE PTR [ebx+0x1],dh
  40ea3c:	sbb    al,BYTE PTR [ecx]
  40ea3e:	cmp    eax,0x3301ac35
  40ea43:	lock imul edx,DWORD PTR [esi-0x1e],0xffffff80
  40ea48:	add    BYTE PTR [edx+esi*4+0xecdae63],cl
  40ea4f:	pop    es
  40ea50:	sti    
  40ea51:	cmp    ebx,DWORD PTR [edi-0x352da238]
  40ea57:	cmp    eax,0x5c6e0ae7
  40ea5c:	add    eax,0x5f25a720
  40ea61:	(bad)  
  40ea62:	jns    0x40eaab
  40ea64:	push   ds
  40ea65:	sbb    DWORD PTR [esi+0x3a],ecx
  40ea68:	adc    al,0x1c
  40ea6a:	popa   
  40ea6b:	daa    
  40ea6c:	js     0x40eaa6
  40ea6e:	ficom  DWORD PTR [ebx-0x1ecddcef]
  40ea74:	(bad)  
  40ea75:	es aad 0xf8
  40ea78:	inc    eax
  40ea79:	out    0xdf,al
  40ea7b:	xor    eax,0xf17e7579
  40ea80:	rcl    BYTE PTR [ebx+0x456aeb53],1
  40ea86:	dec    ebp
  40ea87:	repz mov ds:0x669ad81d,al
  40ea8d:	cdq    
  40ea8e:	inc    eax
  40ea8f:	mov    bl,0x5f
  40ea91:	or     eax,0x3a2418b4
  40ea96:	jo     0x40eab3
  40ea98:	mov    ds:0x9d41cf70,eax
  40ea9d:	cmp    eax,DWORD PTR [edx+ebx*4+0x36]
  40eaa1:	mov    cl,0xfb
  40eaa3:	pushf  
  40eaa4:	sub    DWORD PTR [edx-0x7c],0xb8961371
  40eaab:	into   
  40eaac:	mov    al,ds:0x2a6b7caa
  40eab1:	pop    edi
  40eab2:	dec    ebp
  40eab3:	inc    ebp
  40eab4:	dec    ecx
  40eab5:	shr    BYTE PTR [ecx+0x4feb87b9],0x8e
  40eabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eabd:	dec    ebx
  40eabe:	and    DWORD PTR [ebp+0x1a],edx
  40eac1:	xor    al,0xab
  40eac3:	cmp    edx,DWORD PTR [edx+0x7ff94015]
  40eac9:	jecxz  0x40eb44
  40eacb:	jns    0x40ea5a
  40eacd:	adc    DWORD PTR [ebx-0x1a],esp
  40ead0:	dec    ebx
  40ead1:	imul   edx,DWORD PTR [ebx+ecx*8+0x42287e44],0x5846eb3a
  40eadc:	shl    DWORD PTR [ebp-0x6aaede5b],cl
  40eae2:	add    al,0x9e
  40eae4:	fistp  DWORD PTR [edi]
  40eae6:	lahf   
  40eae7:	test   bh,bl
  40eae9:	push   ecx
  40eaea:	dec    edx
  40eaeb:	dec    esp
  40eaec:	inc    edx
  40eaed:	js     0x40eb5d
  40eaef:	push   es
  40eaf0:	out    0xd0,al
  40eaf2:	sub    cl,BYTE PTR [edx+ecx*4]
  40eaf5:	sub    BYTE PTR [edi],dh
  40eaf7:	add    DWORD PTR [ecx+0x7513618],0x9ed21955
  40eb01:	das    
  40eb02:	sbb    BYTE PTR [ecx+0x3ddced76],ah
  40eb08:	in     eax,0x65
  40eb0a:	pop    esp
  40eb0b:	leave  
  40eb0c:	push   ss
  40eb0d:	inc    edi
  40eb0e:	sbb    eax,0x5e355955
  40eb13:	xchg   DWORD PTR ds:0x118b5f7d,edi
  40eb19:	frstor [eax+0x57]
  40eb1c:	inc    ecx
  40eb1d:	adc    al,0xaa
  40eb1f:	push   ds
  40eb20:	xor    dl,al
  40eb22:	pushf  
  40eb23:	cmp    eax,0xf7668a0a
  40eb28:	and    DWORD PTR [ebx-0x73ed9439],eax
  40eb2e:	ins    DWORD PTR es:[edi],dx
  40eb2f:	cwde   
  40eb30:	vsqrtss xmm0,xmm4,DWORD PTR [edx+esi*2-0x16]
  40eb36:	pop    edi
  40eb37:	inc    edi
  40eb38:	popf   
  40eb39:	or     DWORD PTR [ebx-0x741c7f13],ebx
  40eb3f:	or     esp,0x6d
  40eb42:	sub    DWORD PTR [edi+0x6a342127],0x69ed28
  40eb4c:	mov    ch,BYTE PTR [eax+eax*2]
  40eb4f:	sub    DWORD PTR [edx-0x5285ea67],edx
  40eb55:	ja     0x40eaf3
  40eb57:	dec    ecx
  40eb58:	popf   
  40eb59:	jnp    0x40eae8
  40eb5b:	or     ah,BYTE PTR [esp+edi*1-0x2]
  40eb5f:	adc    DWORD PTR [ebx],ebp
  40eb61:	aas    
  40eb62:	cld    
  40eb63:	in     eax,0xa0
  40eb65:	pop    ebp
  40eb66:	pop    edx
  40eb67:	pop    eax
  40eb68:	cmp    esp,eax
  40eb6a:	dec    BYTE PTR [ebp+0x3cdd2b4d]
  40eb70:	adc    BYTE PTR ds:0x976b526f,ah
  40eb76:	popa   
  40eb77:	repz pop eax
  40eb79:	ret    
  40eb7a:	and    DWORD PTR [edi+0x4d],edx
  40eb7d:	mov    bh,BYTE PTR [edi+0x4d]
  40eb80:	ss dec eax
  40eb82:	popf   
  40eb83:	inc    edx
  40eb84:	rcl    BYTE PTR [eax+edi*2],1
  40eb87:	cmp    DWORD PTR [edi+0x15],0x4ce9f883
  40eb8e:	jle    0x40eb34
  40eb90:	fs mov cl,0x2a
  40eb93:	mov    bh,0x2c
  40eb95:	mov    dl,0xbb
  40eb97:	test   DWORD PTR [edi],ebp
  40eb99:	mov    eax,0xf1168739
  40eb9e:	add    DWORD PTR [eax],ecx
  40eba0:	in     eax,dx
  40eba1:	out    0x7a,al
  40eba3:	mov    ecx,0xcfa84eb7
  40eba8:	jmp    0x888b65bf
  40ebad:	test   al,0xc9
  40ebaf:	pop    ebx
  40ebb0:	test   al,0x8
  40ebb2:	neg    BYTE PTR ds:0x8b9b7a91
  40ebb8:	inc    ebx
  40ebb9:	je     0x40ec38
  40ebbb:	xchg   esp,eax
  40ebbc:	jecxz  0x40eba1
  40ebbe:	dec    ecx
  40ebbf:	mov    eax,0x50cb951
  40ebc4:	push   edx
  40ebc5:	sbb    ebp,eax
  40ebc7:	mov    bh,0xe7
  40ebc9:	imul   ecx,ebp,0xffffffb3
  40ebcc:	add    BYTE PTR [ecx-0x69f2c1c8],ah
  40ebd2:	imul   edx,DWORD PTR [eax+0xc],0xec49cab
  40ebd9:	lds    edx,FWORD PTR [edx+0x77b658d7]
  40ebdf:	in     eax,dx
  40ebe0:	adc    bh,ah
  40ebe2:	jne    0x40eb64
  40ebe4:	inc    edi
  40ebe5:	mov    edx,0x6812a075
  40ebea:	outs   dx,DWORD PTR ds:[esi]
  40ebeb:	stc    
  40ebec:	mov    WORD PTR [ecx+0x13e04ab2],ss
  40ebf2:	outs   dx,BYTE PTR ds:[esi]
  40ebf3:	xlat   BYTE PTR ds:[ebx]
  40ebf4:	ss mov ebp,0x7b2f36ff
  40ebfa:	in     eax,dx
  40ebfb:	push   DWORD PTR [edx+esi*4-0x9c52b2b]
  40ec02:	(bad)  [eax+0xe]
  40ec05:	icebp  
  40ec06:	add    DWORD PTR [eax+0x64],esp
  40ec09:	push   ebp
  40ec0a:	push   esp
  40ec0b:	loop   0x40ec65
  40ec0d:	inc    esp
  40ec0e:	and    al,0xd3
  40ec10:	inc    ebx
  40ec11:	lea    ebp,[ebp+0x3e86503b]
  40ec17:	adc    DWORD PTR ss:[ebx],0x2315078
  40ec1e:	aaa    
  40ec1f:	mov    cl,bh
  40ec21:	sbb    dl,BYTE PTR [ebp+0x38]
  40ec24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec25:	lock mov ?,WORD PTR [ebp+ebx*8-0x34a4e848]
  40ec2d:	sub    ch,BYTE PTR [bx+di-0x1f]
  40ec31:	add    esi,DWORD PTR [ebp-0x13f485d0]
  40ec37:	dec    ebx
  40ec38:	pop    ss
  40ec39:	aas    
  40ec3a:	inc    ebp
  40ec3b:	inc    edx
  40ec3c:	xor    eax,0x6d46378d
  40ec41:	dec    esi
  40ec42:	pop    eax
  40ec43:	mov    ah,0x3d
  40ec45:	nop
  40ec46:	inc    ecx
  40ec47:	bound  ecx,QWORD PTR [edi+0xa]
  40ec4a:	rcl    BYTE PTR [eax+0x29144c34],cl
  40ec50:	add    eax,0x415b5e5c
  40ec55:	loop   0x40ec2e
  40ec57:	xchg   esi,eax
  40ec58:	leave  
  40ec59:	in     eax,dx
  40ec5a:	jl     0x40eca5
  40ec5c:	cdq    
  40ec5d:	pop    ss
  40ec5e:	fwait
  40ec5f:	lods   al,BYTE PTR ds:[esi]
  40ec60:	pop    ds
  40ec61:	push   DWORD PTR [edi]
  40ec63:	pop    esi
  40ec64:	stos   BYTE PTR es:[edi],al
  40ec65:	fisttp QWORD PTR [ebx+eax*1]
  40ec68:	lea    esp,[ecx+0x7b9a4ac7]
  40ec6e:	pop    esp
  40ec6f:	xor    esi,DWORD PTR [esi+0xd35ec57]
  40ec75:	test   eax,0xde096c7f
  40ec7a:	and    al,0xbe
  40ec7c:	add    eax,0x23130e36
  40ec81:	push   es
  40ec82:	mov    ds:0x4cc6c9d2,eax
  40ec87:	(bad)  
  40ec88:	xchg   ecx,eax
  40ec89:	jl     0x40ecbf
  40ec8b:	and    eax,0x6b857a40
  40ec90:	pop    ds
  40ec91:	add    DWORD PTR [ebx-0x2b],ebx
  40ec94:	scas   al,BYTE PTR es:[edi]
  40ec95:	pop    ebx
  40ec96:	cmp    esp,DWORD PTR [ecx]
  40ec98:	inc    esp
  40ec99:	mov    ds:0xc7b58866,al
  40ec9e:	xor    al,0x1a
  40eca0:	je     0x40ec56
  40eca2:	pop    ss
  40eca3:	fcom   DWORD PTR [eax+ebp*4]
  40eca6:	sub    eax,0x799f5e77
  40ecab:	xchg   edi,eax
  40ecac:	xchg   esi,eax
  40ecad:	adc    al,ch
  40ecaf:	je     0x40ecc9
  40ecb1:	push   cs
  40ecb2:	dec    ebx
  40ecb3:	pop    ds
  40ecb4:	mov    al,0x70
  40ecb6:	je     0x40ec98
  40ecb8:	popf   
  40ecb9:	test   ecx,esi
  40ecbb:	mov    dh,0x31
  40ecbd:	jmp    0x572702cf
  40ecc2:	and    eax,0x4ec4db01
  40ecc7:	test   DWORD PTR [edi+0x6377468c],esi
  40eccd:	mov    ecx,0xa39cc01f
  40ecd2:	je     0x40ec6a
  40ecd4:	rol    DWORD PTR [esi+0x3ea9d340],cl
  40ecda:	lock lds edi,FWORD PTR [edx-0x4f]
  40ecde:	jge    0x40ed25
  40ece0:	repnz pop ebx
  40ece2:	jmp    0x66991c3b
  40ece7:	push   edx
  40ece8:	out    0x60,eax
  40ecea:	jne    0x40ec76
  40ecec:	adc    BYTE PTR [eax+0x501f7755],0x6c
  40ecf3:	ins    BYTE PTR es:[edi],dx
  40ecf4:	and    ah,dh
  40ecf6:	push   ds
  40ecf7:	rol    DWORD PTR [ebx-0x69],cl
  40ecfa:	test   BYTE PTR [edx],ah
  40ecfc:	hlt    
  40ecfd:	push   es
  40ecfe:	mov    ecx,0xa8b07b22
  40ed03:	cld    
  40ed04:	mov    ecx,0x407edbbe
  40ed09:	int    0x71
  40ed0b:	imul   ecx,ebp,0xfffffff9
  40ed0e:	js     0x40ed45
  40ed10:	sar    BYTE PTR [esi],1
  40ed12:	mov    eax,0x5d132512
  40ed17:	mov    WORD PTR [ebx+0x79],?
  40ed1a:	jg     0x40ece0
  40ed1c:	mov    BYTE PTR [esi+0x42],cl
  40ed1f:	lahf   
  40ed20:	sbb    BYTE PTR [edx+0x94984dc],0xc5
  40ed27:	retf   0xd36
  40ed2a:	sbb    BYTE PTR [edx+0x1e46ff18],cl
  40ed30:	loop   0x40ed5d
  40ed32:	adc    edx,ebx
  40ed34:	mov    edx,0xad19a939
  40ed39:	pop    es
  40ed3a:	xor    eax,0xc6bddb32
  40ed3f:	adc    DWORD PTR [ebx-0xb0d0d28],edx
  40ed45:	iret   
  40ed46:	outs   dx,BYTE PTR ds:[esi]
  40ed47:	lea    esi,[ecx+ebp*2+0x76e36c46]
  40ed4e:	mov    bl,0xf7
  40ed50:	jmp    0x40ecea
  40ed52:	mov    edi,0x5d3aad1a
  40ed57:	or     edx,DWORD PTR [esi]
  40ed59:	dec    ebp
  40ed5a:	rcl    DWORD PTR [esi+ebp*8+0x57],cl
  40ed5e:	mov    eax,ds:0xca7dd127
  40ed63:	dec    edi
  40ed64:	sub    BYTE PTR [ebp-0x22],dl
  40ed67:	lods   eax,DWORD PTR ds:[si]
  40ed69:	imul   edx,DWORD PTR [ebp+ecx*2+0x19],0xba877850
  40ed71:	pop    esi
  40ed72:	fnstenv [ecx+0x12aed895]
  40ed78:	sbb    BYTE PTR [edx+eiz*2],al
  40ed7b:	cmc    
  40ed7c:	sub    ecx,DWORD PTR [esi]
  40ed7e:	sub    DWORD PTR [edx-0x3c2ed398],esi
  40ed84:	aaa    
  40ed85:	mov    esp,0x8d6634f6
  40ed8a:	push   ds
  40ed8b:	jmp    0xc4e3170c
  40ed90:	call   0x9133f868
  40ed95:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed97:	mov    eax,ds:0xa013f27
  40ed9c:	ds daa 
  40ed9e:	pop    es
  40ed9f:	shl    BYTE PTR [edi-0x47],cl
  40eda2:	mov    ds:0x760e91a2,eax
  40eda7:	ins    DWORD PTR es:[edi],dx
  40eda8:	push   ebp
  40eda9:	xor    BYTE PTR [edx-0x7c],0x5f
  40edad:	add    bl,ah
  40edaf:	fstp   TBYTE PTR [esi+0x68]
  40edb2:	das    
  40edb3:	loope  0x40ed96
  40edb5:	or     DWORD PTR [esi-0x39],esi
  40edb8:	add    BYTE PTR [ebx+0x5],ah
  40edbb:	inc    esp
  40edbc:	gs xchg ebx,eax
  40edbe:	mov    WORD PTR ds:0x5634d7f6,?
  40edc4:	mov    eax,0x3a174eaa
  40edc9:	mov    al,0x15
  40edcb:	sar    al,0x65
  40edce:	sub    bl,ah
  40edd0:	aas    
  40edd1:	mov    ebx,0x11d29df6
  40edd6:	outs   dx,BYTE PTR ds:[esi]
  40edd7:	out    dx,eax
  40edd8:	add    eax,0x6878f548
  40eddd:	hlt    
  40edde:	mov    dl,0xbf
  40ede0:	lock nop
  40ede2:	mov    ecx,0x1286233d
  40ede7:	mov    edi,0xdb152358
  40edec:	mov    bl,0x45
  40edee:	mov    edx,0x978fe22
  40edf3:	out    dx,al
  40edf4:	jecxz  0x40ee59
  40edf6:	or     eax,0xcf3824b6
  40edfb:	icebp  
  40edfc:	les    esi,FWORD PTR [edx-0x45be5e27]
  40ee02:	pop    esp
  40ee03:	pusha  
  40ee04:	je     0x40ee69
  40ee06:	out    0x4e,al
  40ee08:	imul   edi,DWORD PTR [edx+ebx*1+0x5b4bf68a],0x7065d87e
  40ee13:	inc    ebx
  40ee14:	push   cs
  40ee15:	cmp    ah,dl
  40ee17:	in     eax,dx
  40ee18:	ss push ecx
  40ee1a:	int3   
  40ee1b:	shl    bh,0x90
  40ee1e:	outs   dx,DWORD PTR ds:[esi]
  40ee1f:	sar    dl,cl
  40ee21:	ds cli 
  40ee23:	cmp    eax,0x68b5a339
  40ee28:	dec    esi
  40ee29:	div    DWORD PTR [esi+0x6b05d291]
  40ee2f:	or     bl,BYTE PTR [edi]
  40ee31:	xor    al,0x67
  40ee33:	add    ecx,edi
  40ee35:	dec    ebx
  40ee36:	jg     0x40ee57
  40ee38:	xor    BYTE PTR [eax],al
  40ee3a:	pop    ss
  40ee3b:	sub    cl,ah
  40ee3d:	sub    cl,BYTE PTR [esi+esi*1+0xbdd6f7]
  40ee44:	cdq    
  40ee45:	pop    ebp
  40ee46:	push   cs
  40ee47:	mov    esi,0x9aeb11fd
  40ee4c:	cdq    
  40ee4d:	cmp    eax,DWORD PTR [edi+0x139fe44c]
  40ee53:	and    esi,DWORD PTR [ecx-0x7c]
  40ee56:	mov    DWORD PTR [ecx+0x64b5ca7],ebx
  40ee5c:	cmp    al,0x74
  40ee5e:	inc    ecx
  40ee5f:	hlt    
  40ee60:	and    esp,edx
  40ee62:	ror    BYTE PTR [ebx],0x8e
  40ee65:	stos   DWORD PTR es:[edi],eax
  40ee66:	cmc    
  40ee67:	cmc    
  40ee68:	inc    esi
  40ee69:	ret    0x85da
  40ee6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6d:	xor    eax,0xf0995210
  40ee72:	jmp    0xa04e49a7
  40ee77:	enter  0x3a98,0x44
  40ee7b:	inc    ebp
  40ee7c:	daa    
  40ee7d:	push   edi
  40ee7e:	je     0x40eef0
  40ee80:	xor    eax,0x5f1a0071
  40ee85:	sbb    DWORD PTR [ecx-0x29],edi
  40ee88:	mov    ecx,0x4fb5a2a9
  40ee8d:	push   ds
  40ee8e:	mov    BYTE PTR [ecx-0x1c],al
  40ee91:	pop    ds
  40ee92:	hlt    
  40ee93:	mov    ebp,0x142f0ccf
  40ee98:	jp     0x40ef03
  40ee9a:	jmp    0x40ee33
  40ee9c:	fucomip st,st(3)
  40ee9e:	cld    
  40ee9f:	sub    esi,esi
  40eea1:	sbb    dl,BYTE PTR [ebx-0x6dd18faf]
  40eea7:	mov    eax,ds:0xee4307f2
  40eeac:	pop    ecx
  40eead:	popa   
  40eeae:	sub    al,BYTE PTR [ebx+0x48f2a001]
  40eeb4:	lods   eax,DWORD PTR ds:[esi]
  40eeb5:	dec    edx
  40eeb6:	and    BYTE PTR [edx],al
  40eeb8:	xchg   ebx,eax
  40eeb9:	pop    eax
  40eeba:	ja     0x40ee6f
  40eebc:	fcomp  QWORD PTR [esi+eax*2]
  40eebf:	jmp    0x40eedc
  40eec1:	(bad)  
  40eec2:	dec    edi
  40eec3:	push   edi
  40eec4:	fldcw  WORD PTR [ebx-0x7c137cb]
  40eeca:	or     ah,cl
  40eecc:	xchg   ebx,eax
  40eecd:	call   0xa533:0x2c6052c9
  40eed4:	daa    
  40eed5:	test   BYTE PTR [ebp-0x14],ch
  40eed8:	das    
  40eed9:	pusha  
  40eeda:	pop    ecx
  40eedb:	inc    edi
  40eedc:	jmp    0xd34:0x2c867b46
  40eee3:	adc    DWORD PTR [edx],esp
  40eee5:	leave  
  40eee6:	pop    ecx
  40eee7:	js     0x40eee0
  40eee9:	mov    BYTE PTR [eax-0x7ec9fa52],cl
  40eeef:	into   
  40eef0:	bswap  ebp
  40eef2:	fdivr  DWORD PTR [ecx+0x43]
  40eef5:	mov    eax,ds:0xb4e07d83
  40eefa:	sti    
  40eefb:	push   ds
  40eefc:	out    0xd6,al
  40eefe:	xor    ecx,ecx
  40ef00:	mov    DWORD PTR [ebp+0xa],esi
  40ef03:	push   eax
  40ef04:	add    ecx,0xffffffee
  40ef07:	push   ebp
  40ef08:	dec    esi
  40ef09:	cwde   
  40ef0a:	out    dx,eax
  40ef0b:	pop    eax
  40ef0c:	js     0x40eeb0
  40ef0e:	retf   0x79e3
  40ef11:	test   BYTE PTR [edi],bh
  40ef13:	loop   0x40eee4
  40ef15:	test   BYTE PTR [edi],bl
  40ef17:	loop   0x40eea2
  40ef19:	test   BYTE PTR [edx+0x0],dh
  40ef1c:	dec    eax
  40ef1d:	test   DWORD PTR [ebx],0x36cf123c
  40ef23:	lods   al,BYTE PTR ds:[esi]
  40ef24:	adc    BYTE PTR [edi],bl
  40ef26:	push   edi
  40ef27:	scas   eax,DWORD PTR es:[edi]
  40ef28:	repnz les ebp,FWORD PTR [ecx]
  40ef2b:	bound  eax,QWORD PTR ds:0x94feecd
  40ef31:	std    
  40ef32:	jp     0x40ef19
  40ef34:	imul   bl
  40ef36:	aad    0xa0
  40ef38:	das    
  40ef39:	fdivrp st(6),st
  40ef3b:	rol    ecx,cl
  40ef3d:	ror    dl,cl
  40ef3f:	mov    edi,DWORD PTR [edi+0x57460704]
  40ef45:	xchg   esi,eax
  40ef46:	add    bl,0xf5
  40ef49:	sub    dh,al
  40ef4b:	or     al,BYTE PTR [eax-0x74b899e5]
  40ef51:	shr    DWORD PTR [ebx+0x2b],cl
  40ef54:	add    ah,BYTE PTR [edx+edi*2+0x7823be37]
  40ef5b:	pop    esp
  40ef5c:	sbb    al,0xfc
  40ef5e:	mov    bl,0x6d
  40ef60:	mov    esp,0x80680604
  40ef65:	jl     0x40ef28
  40ef67:	jl     0x40ef54
  40ef69:	outs   dx,DWORD PTR ds:[esi]
  40ef6a:	mov    BYTE PTR [edx+0x7],ah
  40ef6d:	retf   0xf501
  40ef70:	inc    ebx
  40ef71:	daa    
  40ef72:	mov    cl,0x67
  40ef74:	cmp    dh,cl
  40ef76:	fild   QWORD PTR [esp+edi*8-0x270476bd]
  40ef7d:	inc    eax
  40ef7e:	out    dx,al
  40ef7f:	cmc    
  40ef80:	jbe    0x40ef33
  40ef82:	nop
  40ef83:	out    dx,eax
  40ef84:	bound  ecx,QWORD PTR [esi+0x39]
  40ef87:	pop    ecx
  40ef88:	shl    dh,cl
  40ef8a:	les    edx,FWORD PTR fs:[edx-0x67]
  40ef8e:	mov    cl,0x6c
  40ef90:	xor    DWORD PTR [ebp-0x457b77a1],eax
  40ef96:	mov    BYTE PTR [edi+0x65],dh
  40ef99:	outs   dx,DWORD PTR ds:[esi]
  40ef9a:	jmp    0x40efe0
  40ef9c:	loope  0x40ef35
  40ef9e:	aam    0xb1
  40efa0:	or     al,0xeb
  40efa2:	lods   al,BYTE PTR ds:[esi]
  40efa3:	imul   esp,DWORD PTR ds:0x128ff649,0x187b8f49
  40efad:	repnz push ecx
  40efaf:	jl     0x40ef98
  40efb1:	xchg   esp,eax
  40efb2:	(bad)  
  40efb3:	lock aaa 
  40efb5:	stos   DWORD PTR es:[edi],eax
  40efb6:	icebp  
  40efb7:	in     eax,dx
  40efb8:	jmp    0x71a3f594
  40efbd:	mov    esi,0x1c9d92f
  40efc2:	jb     0x40ef70
  40efc4:	unpcklps xmm6,xmm5
  40efc7:	data16 fwait
  40efc9:	sbb    edx,ecx
  40efcb:	dec    ecx
  40efcc:	test   DWORD PTR [ebp-0x38],ecx
  40efcf:	scas   al,BYTE PTR es:[edi]
  40efd0:	mov    eax,ds:0xe247ae4f
  40efd5:	data16 aas 
  40efd7:	in     al,0x4
  40efd9:	jbe    0x40f01e
  40efdb:	xlat   BYTE PTR ds:[ebx]
  40efdc:	cmc    
  40efdd:	and    cl,BYTE PTR [esi-0x6e9eae82]
  40efe3:	sbb    ebp,DWORD PTR [edx]
  40efe5:	push   esp
  40efe6:	icebp  
  40efe7:	pop    ss
  40efe8:	and    BYTE PTR [ebp-0x67d76284],al
  40efee:	and    edx,DWORD PTR [ebx+0x4d60a0d9]
  40eff4:	or     bl,bl
  40eff6:	popf   
  40eff7:	outs   dx,DWORD PTR ds:[esi]
  40eff8:	fist   DWORD PTR [ebx+0x3]
  40effb:	ins    DWORD PTR es:[edi],dx
  40effc:	jl     0x40f008
  40effe:	sub    DWORD PTR [eax],ecx
  40f000:	dec    esp
  40f001:	inc    ebx
  40f002:	ret    
  40f003:	push   ebx
  40f004:	rcr    BYTE PTR [edx+ebx*2],cl
  40f007:	test   BYTE PTR ds:0xe718e41b,ch
  40f00d:	dec    ecx
  40f00e:	pop    fs
  40f010:	and    dl,BYTE PTR [eax-0x1f]
  40f013:	fsubrp st(0),st
  40f015:	push   eax
  40f016:	clc    
  40f017:	adc    ch,dh
  40f019:	cmp    al,0x88
  40f01b:	sbb    ebp,esp
  40f01d:	mov    ebp,DWORD PTR [edi]
  40f01f:	test   al,0x12
  40f021:	lds    edi,FWORD PTR [ebp+0x3cf73a2]
  40f027:	jle    0x40efff
  40f029:	push   ebx
  40f02a:	add    eax,0x55107fcd
  40f02f:	xchg   ecx,eax
  40f030:	push   0xa2098fbb
  40f035:	pop    esp
  40f036:	xor    ecx,DWORD PTR [ecx+ebx*8+0x9]
  40f03a:	jo     0x40f0a1
  40f03c:	aam    0xde
  40f03e:	and    eax,0xe77b746a
  40f043:	sub    dh,BYTE PTR [ebp-0x2135b26b]
  40f049:	sbb    esi,ebx
  40f04b:	in     al,0xa1
  40f04d:	out    0x3f,eax
  40f04f:	sti    
  40f050:	out    0xa8,al
  40f052:	call   0x9f27:0xce37ae3f
  40f059:	(bad)  
  40f05b:	bound  esi,QWORD PTR [esi+ebp*8+0x48842349]
  40f062:	(bad)  
  40f063:	mov    bh,BYTE PTR [esi+0x401bf43f]
  40f069:	mov    cl,0xaf
  40f06b:	(bad)  
  40f06f:	je     0x40f0b7
  40f071:	mov    dh,0x46
  40f073:	jg     0x9e55256d
  40f079:	mov    eax,ds:0xd61d51a
  40f07e:	les    edx,FWORD PTR [ecx]
  40f080:	sbb    al,BYTE PTR ds:0x6031016b
  40f086:	out    dx,al
  40f087:	dec    ebx
  40f088:	into   
  40f089:	retf   0xb5f1
  40f08c:	into   
  40f08d:	fist   WORD PTR es:[ebx-0x77658dbe]
  40f094:	and    DWORD PTR [ecx+ebp*2-0x26],ebp
  40f098:	aad    0x33
  40f09a:	jle    0x40f0d5
  40f09c:	cli    
  40f09d:	dec    ebp
  40f09e:	outs   dx,BYTE PTR ds:[esi]
  40f09f:	imul   ecx,DWORD PTR [ecx],0x18244559
  40f0a5:	add    BYTE PTR [esi],cl
  40f0a7:	adc    DWORD PTR [esi-0x63],edx
  40f0aa:	mov    al,0x5c
  40f0ac:	push   ss
  40f0ad:	callw  0x6413
  40f0b1:	and    esi,ecx
  40f0b3:	ror    bl,1
  40f0b5:	fisttp WORD PTR [esp+ebx*1-0x12]
  40f0b9:	test   al,0x36
  40f0bb:	lods   eax,DWORD PTR ds:[esi]
  40f0bc:	sub    DWORD PTR [bp+di+0x7d],eax
  40f0c0:	ds aaa 
  40f0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c3:	gs out 0x69,al
  40f0c6:	xor    esi,esi
  40f0c8:	sub    al,0xb4
  40f0ca:	lea    edi,[ebp+ebx*2+0x4]
  40f0ce:	outs   dx,BYTE PTR ds:[esi]
  40f0cf:	mov    ebp,0x4cf6781b
  40f0d4:	and    eax,0x1640ac33
  40f0d9:	ins    DWORD PTR es:[edi],dx
  40f0da:	retf   0xeaad
  40f0dd:	fwait
  40f0de:	mov    edx,0x87d110c1
  40f0e3:	dec    eax
  40f0e4:	xchg   esi,eax
  40f0e5:	sub    dh,BYTE PTR [edx-0xf2dac6f]
  40f0eb:	sbb    al,0x73
  40f0ed:	fdiv   DWORD PTR [ecx-0x3248a0a5]
  40f0f3:	rcr    BYTE PTR ds:0x1c08be46,0xb2
  40f0fa:	sbb    BYTE PTR [ecx+0x7e],bl
  40f0fd:	call   0xd5de6879
  40f102:	adc    bl,BYTE PTR [ebp+0x47]
  40f105:	arpl   WORD PTR [esi],cx
  40f107:	inc    DWORD PTR [edx+0x6fe9b0bf]
  40f10d:	pop    edx
  40f10e:	jecxz  0x40f15b
  40f110:	stos   BYTE PTR es:[edi],al
  40f111:	fcom   DWORD PTR [ecx]
  40f113:	fadd   QWORD PTR [eax+0x7992bf1]
  40f119:	out    0xe5,eax
  40f11b:	pop    ecx
  40f11c:	sub    dl,BYTE PTR [ecx+0x3]
  40f11f:	xor    BYTE PTR [ecx],ah
  40f121:	cmp    bl,BYTE PTR [ebp-0x7a]
  40f124:	xchg   edx,eax
  40f125:	lods   eax,DWORD PTR ds:[esi]
  40f126:	clc    
  40f127:	or     DWORD PTR [edx-0x3b],0x16
  40f12b:	dec    esp
  40f12c:	add    BYTE PTR [edi-0x7ab688ac],bh
  40f132:	sbb    eax,0x4fd6bcde
  40f137:	inc    ebx
  40f138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f139:	mov    ebp,0x8b4b4711
  40f13e:	jne    0x40f14c
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	into   
  40fa17:	push   ebx
  40fa18:	(bad)  
  40fa1a:	je     0x40f9e6
  40fa1c:	jp     0x40fa98
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	aam    0xb9
  40fa24:	imul   eax,esi,0x4c18358c
  40fa2a:	stos   BYTE PTR es:[edi],al
  40fa2b:	pop    edx
  40fa2c:	(bad)  
  40fa2e:	or     eax,0x484e4347
  40fa33:	jnp    0x40fa75
  40fa35:	mov    dl,BYTE PTR [ecx-0x44]
  40fa38:	sub    DWORD PTR [esp+edx*1],ecx
  40fa3b:	push   0xc98ef70c
  40fa40:	or     BYTE PTR [ebx+0x9],al
  40fa43:	mov    ah,0xb4
  40fa45:	int3   
  40fa46:	outs   dx,DWORD PTR ds:[esi]
  40fa47:	adc    ebx,ebp
  40fa49:	div    DWORD PTR [edi]
  40fa4b:	repnz adc edi,DWORD PTR [ebp+0x538335d6]
  40fa52:	add    BYTE PTR [edi-0x40],0x3b
  40fa56:	sbb    ebx,DWORD PTR [esi+esi*1-0xc]
  40fa5a:	xor    ecx,esp
  40fa5c:	addr16 and eax,0x5a0db942
  40fa62:	xchg   edx,eax
  40fa63:	pop    ss
  40fa64:	mov    BYTE PTR [ecx+0x5a],bl
  40fa67:	jb     0x40fa4c
  40fa69:	mov    edx,0x6ead0a7b
  40fa6e:	sub    dl,BYTE PTR [ebx-0x4365b67b]
  40fa74:	or     edx,DWORD PTR [ebx-0x1]
  40fa77:	ror    BYTE PTR [edi+0x1c],0x44
  40fa7b:	mov    ch,0xb6
  40fa7d:	in     al,0xa2
  40fa7f:	test   al,0xd2
  40fa81:	xor    ecx,DWORD PTR [edi-0x55]
  40fa84:	or     eax,0x381bf05b
  40fa89:	aaa    
  40fa8a:	ss push ss
  40fa8c:	(bad)  
  40fa8d:	lods   eax,DWORD PTR ds:[esi]
  40fa8e:	es jno 0x40fad6
  40fa91:	aam    0xbd
  40fa93:	pop    ebx
  40fa94:	jae    0x40fa2f
  40fa96:	arpl   WORD PTR [ecx-0xcd44bc4],cx
  40fa9c:	cmp    BYTE PTR [ecx-0x719a7068],ch
  40faa2:	sti    
  40faa3:	and    al,0x61
  40faa5:	cmc    
  40faa6:	sub    eax,0xae9875af
  40faab:	popa   
  40faac:	push   ebp
  40faad:	fstp   TBYTE PTR [ecx-0xd]
  40fab0:	inc    ebx
  40fab1:	xor    al,0x33
  40fab3:	pop    edi
  40fab4:	loop   0x40faf0
  40fab6:	stos   DWORD PTR es:[edi],eax
  40fab7:	adc    DWORD PTR [edi+0x72],edx
  40faba:	std    
  40fabb:	dec    eax
  40fabc:	es loopne 0x40fab9
  40fabf:	pop    ss
  40fac0:	je     0x40fb23
  40fac2:	repnz lea ecx,[ecx-0x1c1cefbb]
  40fac9:	push   ds
  40faca:	push   ecx
  40facb:	jmp    0x40faff
  40facd:	mov    WORD PTR [ebp-0x49ad0544],gs
  40fad3:	loopne 0x40faa9
  40fad5:	cs pop ss
  40fad7:	js     0x40fadc
  40fad9:	sar    ch,1
  40fadb:	add    DWORD PTR [edi-0x62],edx
  40fade:	xchg   ebp,eax
  40fadf:	pop    edx
  40fae0:	jl     0x40fab8
  40fae2:	inc    ebx
  40fae3:	push   ecx
  40fae4:	shr    al,1
  40fae6:	outs   dx,BYTE PTR ds:[esi]
  40fae7:	push   ebp
  40fae8:	sub    BYTE PTR [edi],bl
  40faea:	fdivr  QWORD PTR [ecx]
  40faec:	jl     0x40fa78
  40faee:	jae    0x40fb42
  40faf0:	into   
  40faf1:	stc    
  40faf2:	sub    BYTE PTR [eax-0x5a],al
  40faf5:	pop    ebx
  40faf6:	pop    edi
  40faf7:	push   0xffffffd6
  40faf9:	es ret 0xb4a5
  40fafd:	les    eax,FWORD PTR [esi]
  40faff:	pop    eax
  40fb00:	jle    0x40fb42
  40fb02:	mov    bl,0xd7
  40fb04:	pusha  
  40fb05:	icebp  
  40fb06:	add    BYTE PTR [edi+0x23],bl
  40fb09:	jecxz  0x40faad
  40fb0b:	cmp    eax,DWORD PTR [esi+eiz*4-0x59071ff0]
  40fb12:	mov    BYTE PTR [edi],al
  40fb14:	sbb    ecx,DWORD PTR [ecx]
  40fb16:	fsubr  DWORD PTR [ebp-0x4564517b]
  40fb1c:	das    
  40fb1d:	mov    ah,0xbb
  40fb1f:	stos   DWORD PTR es:[edi],eax
  40fb20:	inc    edi
  40fb21:	enter  0x6150,0x8d
  40fb25:	push   ebx
  40fb26:	fs dec eax
  40fb28:	leave  
  40fb29:	jb     0x40fac6
  40fb2b:	push   ecx
  40fb2c:	push   es
  40fb2d:	test   DWORD PTR [ebp-0x42],esi
  40fb30:	in     eax,dx
  40fb31:	lahf   
  40fb32:	mov    WORD PTR [esi+0x61c95e04],?
  40fb38:	pusha  
  40fb39:	ja     0x40fba9
  40fb3b:	and    al,al
  40fb3d:	cmp    eax,0xadecdb69
  40fb42:	jg     0x9d0d3528
  40fb48:	mov    eax,0xf672fad9
  40fb4d:	and    bl,BYTE PTR [ebp-0x3577203d]
  40fb53:	jle    0x40fb0d
  40fb55:	shl    BYTE PTR [esi-0x11],0x5f
  40fb59:	push   ds
  40fb5a:	push   eax
  40fb5b:	mov    gs,ebp
  40fb5d:	inc    edx
  40fb5e:	mov    cl,0x89
  40fb60:	and    bl,cl
  40fb62:	mov    ebp,ebx
  40fb64:	xchg   ebx,eax
  40fb65:	fwait
  40fb66:	mov    ah,0x22
  40fb69:	and    ebp,DWORD PTR [esi-0x4e]
  40fb6c:	inc    ebx
  40fb6d:	lock aaa 
  40fb6f:	ret    
  40fb70:	(bad)  
  40fb71:	xchg   esi,eax
  40fb72:	in     eax,dx
  40fb73:	push   es
  40fb74:	cmp    bh,BYTE PTR [eax-0x52a7acca]
  40fb7a:	or     al,0x9f
  40fb7c:	iret   
  40fb7d:	pushf  
  40fb7e:	mov    al,ds:0x82f16764
  40fb83:	repnz sbb eax,0x95e63060
  40fb89:	test   bl,cl
  40fb8b:	dec    ebp
  40fb8c:	test   DWORD PTR [esi+0x29],edi
  40fb8f:	jmp    0x40fb49
  40fb91:	add    eax,0x6b55e2e4
  40fb96:	pop    ecx
  40fb97:	jbe    0x40fb5c
  40fb99:	call   0x44e53f59
  40fb9e:	in     eax,0x56
  40fba0:	jle    0x40fb39
  40fba2:	xchg   ebx,eax
  40fba3:	push   0x46
  40fba5:	fistp  WORD PTR [ecx]
  40fba7:	dec    ecx
  40fba8:	jne    0x40fc19
  40fbaa:	jmp    0x6a1c:0x73d97e95
  40fbb1:	cdq    
  40fbb2:	xchg   edi,eax
  40fbb3:	xchg   ecx,eax
  40fbb4:	dec    esp
  40fbb5:	pop    esp
  40fbb6:	pop    ecx
  40fbb7:	test   DWORD PTR [ebx+0x1],0xc102b8b6
  40fbbe:	add    dl,cl
  40fbc0:	fisttp QWORD PTR ds:0xed24df24
  40fbc6:	stos   BYTE PTR es:[edi],al
  40fbc7:	cmp    eax,0xefb681ac
  40fbcc:	mov    ds:0x6696b39b,eax
  40fbd1:	fidivr WORD PTR [esi-0x921c26]
  40fbd7:	ret    
  40fbd8:	(bad)  
  40fbd9:	xlat   BYTE PTR ds:[ebx]
  40fbda:	fisubr WORD PTR [edi-0x5f72d367]
  40fbe0:	sub    DWORD PTR [esi+ebx*2-0x24],esp
  40fbe4:	cmc    
  40fbe5:	rep ins DWORD PTR es:[edi],dx
  40fbe7:	dec    ecx
  40fbe8:	test   ebp,0xb9d71f57
  40fbee:	pop    esi
  40fbef:	add    bh,ah
  40fbf1:	es inc ebp
  40fbf3:	lahf   
  40fbf4:	mov    esp,0x38f958b
  40fbf9:	mov    WORD PTR [edi],es
  40fbfb:	sub    BYTE PTR [edi+0x19d7f982],al
  40fc01:	lods   eax,DWORD PTR ds:[esi]
  40fc02:	movzx  esi,BYTE PTR [edx]
  40fc05:	push   ebp
  40fc06:	jmp    0xd3718a96
  40fc0b:	je     0x40fc8c
  40fc0d:	sahf   
  40fc0e:	es popf 
  40fc10:	jmp    0x40fbf9
  40fc12:	add    eax,0x356aa532
  40fc17:	cmp    BYTE PTR [ebx],al
  40fc19:	jae    0x40fc63
  40fc1b:	adc    bl,BYTE PTR ss:[ebp+0x1]
  40fc1f:	xchg   esi,eax
  40fc20:	inc    edi
  40fc21:	jg     0x40fbce
  40fc23:	out    dx,eax
  40fc24:	out    dx,eax
  40fc25:	retf   0xc91
  40fc28:	test   BYTE PTR [ebx],dl
  40fc2a:	mov    cl,0x7e
  40fc2c:	jecxz  0x40fc64
  40fc2e:	xchg   esi,eax
  40fc2f:	adc    al,0xb9
  40fc31:	push   esp
  40fc32:	mov    dh,0x9d
  40fc34:	inc    esp
  40fc35:	dec    edi
  40fc36:	jmp    0x7a78:0x1c9781f4
  40fc3d:	xchg   esi,eax
  40fc3e:	sub    al,0x35
  40fc40:	sbb    al,0x85
  40fc42:	out    0xc3,al
  40fc44:	lods   eax,DWORD PTR ds:[esi]
  40fc45:	in     al,0x21
  40fc47:	push   ecx
  40fc48:	clc    
  40fc49:	das    
  40fc4a:	les    esp,FWORD PTR [edi+0x2f]
  40fc4d:	out    0x55,al
  40fc4f:	inc    ecx
  40fc50:	adc    BYTE PTR [eax],0x14
  40fc53:	push   edi
  40fc54:	and    al,0x68
  40fc56:	fsub   QWORD PTR [ebp-0x36]
  40fc59:	jmp    0xab3bff44
  40fc5e:	adc    eax,0x1abc6f64
  40fc63:	or     eax,0x7f8a389c
  40fc68:	aas    
  40fc69:	rcl    DWORD PTR [esp+eiz*8-0x24495562],1
  40fc70:	jp     0x40fcad
  40fc72:	lock sub eax,0xc6060dd6
  40fc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc79:	mov    ebx,0x1292f048
  40fc7e:	and    ecx,ecx
  40fc80:	dec    esi
  40fc81:	mov    bh,0x24
  40fc83:	push   esp
  40fc84:	ret    
  40fc85:	call   0x88bc:0xeccb1693
  40fc8c:	jb     0x40fcd1
  40fc8e:	jge    0x40fc6d
  40fc90:	mov    DWORD PTR [edi+edi*8],ebp
  40fc93:	ins    BYTE PTR es:[edi],dx
  40fc94:	scas   eax,DWORD PTR es:[edi]
  40fc95:	mov    bh,0xa4
  40fc97:	cwde   
  40fc98:	repz test DWORD PTR [ebx+0x1ba9ceb5],0xf903809b
  40fca3:	push   esi
  40fca4:	loop   0x40fc49
  40fca6:	mov    WORD PTR [ebx],?
  40fca8:	mov    al,ds:0x8be4690e
  40fcad:	sub    eax,0x71794800
  40fcb2:	push   0xffffff84
  40fcb4:	xchg   esp,eax
  40fcb5:	repz push ebx
  40fcb7:	sbb    dl,BYTE PTR [ecx]
  40fcb9:	inc    esi
  40fcba:	addr16 jne 0x40fd38
  40fcbd:	and    ebx,0x430632f8
  40fcc3:	shl    DWORD PTR [eax-0x561b98d3],1
  40fcc9:	(bad)  
  40fcca:	cdq    
  40fccb:	dec    eax
  40fccc:	ja     0x40fc6a
  40fcce:	iret   
  40fccf:	ds pop ds
  40fcd1:	jne    0x40fd45
  40fcd3:	inc    esi
  40fcd4:	or     BYTE PTR [edi-0x1e],dl
  40fcd7:	popa   
  40fcd8:	xchg   esp,eax
  40fcd9:	cdq    
  40fcda:	cmp    al,0x5d
  40fcdc:	push   ecx
  40fcdd:	cmp    al,0x87
  40fcdf:	sub    eax,0x2522d8d5
  40fce4:	sbb    DWORD PTR [ebp+0x5f6e12bb],ebx
  40fcea:	mov    ?,WORD PTR [ecx]
  40fcec:	mov    ebx,0x35042ff3
  40fcf1:	jl     0x40fcfb
  40fcf3:	in     al,0x94
  40fcf5:	scas   al,BYTE PTR es:[edi]
  40fcf6:	in     eax,dx
  40fcf7:	aad    0xb3
  40fcf9:	ret    
  40fcfa:	hlt    
  40fcfb:	push   ss
  40fcfc:	add    esi,DWORD PTR [edi]
  40fcfe:	sub    ebx,DWORD PTR [esi-0x23]
  40fd01:	addr16 pusha 
  40fd03:	(bad)  
  40fd04:	cmp    eax,0x28900dc4
  40fd09:	adc    eax,DWORD PTR [ebp-0x6a]
  40fd0c:	push   esi
  40fd0d:	inc    esp
  40fd0e:	int3   
  40fd0f:	(bad)  
  40fd10:	stos   DWORD PTR es:[edi],eax
  40fd11:	xor    BYTE PTR [ecx],al
  40fd13:	xlat   BYTE PTR ds:[ebx]
  40fd14:	jmp    0x40fd64
  40fd16:	xchg   esp,eax
  40fd17:	mov    ebp,0x7798f96f
  40fd1c:	pop    edi
  40fd1d:	or     eax,0xc07ba7f0
  40fd22:	outs   dx,BYTE PTR ds:[esi]
  40fd23:	mov    es,WORD PTR [ecx+0x44736f6d]
  40fd29:	dec    ebp
  40fd2a:	push   cs
  40fd2b:	dec    ecx
  40fd2c:	ds aas 
  40fd2e:	cs adc al,al
  40fd31:	(bad)  [esi+esi*4+0x55104160]
  40fd38:	cmp    eax,0xb08b2eb
  40fd3d:	sahf   
  40fd3e:	xchg   esp,eax
  40fd3f:	inc    edi
  40fd40:	enter  0x146e,0x53
  40fd44:	scas   eax,DWORD PTR es:[edi]
  40fd45:	adc    edx,esp
  40fd47:	hlt    
  40fd48:	setl   BYTE PTR [edx]
  40fd4b:	(bad)  
  40fd4c:	dec    BYTE PTR [edi+ecx*2-0x54882690]
  40fd53:	xor    DWORD PTR [eax-0x6b72493a],edi
  40fd59:	scas   al,BYTE PTR es:[edi]
  40fd5a:	dec    esi
  40fd5b:	imul   esi,DWORD PTR [edx+0x77],0x74c33369
  40fd62:	lahf   
  40fd63:	dec    ecx
  40fd64:	mov    edx,0x7da70ff8
  40fd69:	aas    
  40fd6a:	sub    eax,0x5f36106b
  40fd6f:	xchg   ebx,eax
  40fd70:	jecxz  0x40fd96
  40fd72:	mov    cl,0xe8
  40fd74:	adc    al,0x36
  40fd76:	fidivr DWORD PTR ds:0x3887bea3
  40fd7c:	mov    ds:0xb8998ea4,al
  40fd81:	mul    DWORD PTR [ebp+0x29e7569c]
  40fd87:	lock lock loopne 0x40fd93
  40fd8b:	sbb    DWORD PTR [edi-0x6d87e963],edx
  40fd91:	add    eax,0xcc60c08d
  40fd96:	pop    eax
  40fd97:	adc    eax,0x5459471f
  40fd9c:	push   ebx
  40fd9d:	dec    ebp
  40fd9e:	call   0x1852:0x9825dcc2
  40fda5:	imul   edi,edi,0xdc23d7a7
  40fdab:	push   edi
  40fdac:	call   0x3c2:0x2a6dbc45
  40fdb3:	test   BYTE PTR [esi+0x6f],bh
  40fdb6:	imul   BYTE PTR [ecx+0x483015a9]
  40fdbc:	test   al,0x5e
  40fdbe:	mov    esi,0x32e12103
  40fdc3:	popf   
  40fdc4:	inc    esp
  40fdc5:	add    DWORD PTR [edi-0x68],0x570cfd2f
  40fdcc:	in     al,dx
  40fdcd:	sahf   
  40fdce:	sbb    bh,bl
  40fdd0:	sbb    ebx,edi
  40fdd2:	stc    
  40fdd3:	scas   al,BYTE PTR es:[edi]
  40fdd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdd5:	xchg   esi,eax
  40fdd6:	fist   WORD PTR [edx+edi*1]
  40fdd9:	sub    al,0xad
  40fddb:	(bad)  
  40fddc:	push   esi
  40fddd:	sbb    edx,ecx
  40fddf:	push   0x5bbdbc44
  40fde4:	sub    ebp,ecx
  40fde6:	pushf  
  40fde7:	or     al,0xd3
  40fde9:	mov    ebx,0x5cc0e44
  40fdee:	push   edi
  40fdef:	dec    ebx
  40fdf0:	ds into 
  40fdf2:	int    0x48
  40fdf4:	not    esi
  40fdf6:	mov    eax,esp
  40fdf8:	lods   al,BYTE PTR ds:[esi]
  40fdf9:	sub    eax,0xb7f9b55d
  40fdfe:	and    eax,0x84cde4dd
  40fe03:	mov    edx,0x752ded3f
  40fe08:	stos   DWORD PTR es:[edi],eax
  40fe09:	pop    ebp
  40fe0a:	add    al,0x96
  40fe0c:	ret    
  40fe0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe0e:	lea    esi,[ebp+0x69]
  40fe11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe12:	add    edi,DWORD PTR [ebp+esi*1-0x38]
  40fe16:	dec    BYTE PTR [ebx+0x40639774]
  40fe1c:	test   BYTE PTR [edx+0x67],bl
  40fe1f:	in     al,dx
  40fe20:	aas    
  40fe21:	adc    al,0x70
  40fe23:	cmp    ebp,DWORD PTR [edi+0x19f7f6ac]
  40fe29:	adc    eax,0x88a461dd
  40fe2e:	push   esi
  40fe2f:	jbe    0x40fe50
  40fe31:	pusha  
  40fe32:	lahf   
  40fe33:	cdq    
  40fe34:	cmp    eax,0x5a4f3688
  40fe39:	ret    0xde8a
  40fe3c:	mov    ss,WORD PTR [ecx]
  40fe3e:	bound  eax,QWORD PTR [eax]
  40fe40:	ret    
  40fe41:	test   BYTE PTR [edi+0x49],cl
  40fe44:	push   0xffffffff
  40fe46:	xor    DWORD PTR [edx],0x7939fa
  40fe4c:	push   ebp
  40fe4d:	and    bh,cl
  40fe4f:	sbb    eax,0x6529e37c
  40fe54:	push   ebp
  40fe55:	inc    edx
  40fe56:	jne    0x40fe5d
  40fe58:	jbe    0x40fecd
  40fe5a:	add    eax,0x47ceddf7
  40fe5f:	(bad)  
  40fe61:	cli    
  40fe62:	adc    bh,BYTE PTR [edi-0x6069df0f]
  40fe68:	rcr    BYTE PTR [eax+0x73],0x63
  40fe6c:	outs   dx,BYTE PTR ds:[esi]
  40fe6d:	dec    ecx
  40fe6e:	jno    0x40feab
  40fe70:	jo     0x40fdfb
  40fe72:	add    al,0xf7
  40fe74:	es mov bl,0x8c
  40fe77:	ds cmp eax,0xda02147
  40fe7d:	xchg   esi,eax
  40fe7e:	jge    0x40fe8a
  40fe80:	shl    BYTE PTR [ebx],0xdb
  40fe83:	icebp  
  40fe84:	adc    esi,DWORD PTR [eax-0x217d785d]
  40fe8a:	jb     0x40fe1d
  40fe8c:	pop    ecx
  40fe8d:	or     eax,0x4aaa9255
  40fe92:	lock pop ds
  40fe94:	scas   al,BYTE PTR es:[edi]
  40fe95:	arpl   WORD PTR [ecx+0x3e],dx
  40fe98:	mov    bh,0xd6
  40fe9a:	pushf  
  40fe9b:	int    0x2
  40fe9d:	add    BYTE PTR ss:[ecx],al
  40fea0:	adc    ebp,0x9c3f3f39
  40fea6:	jbe    0x40fea7
  40fea8:	pop    edi
  40fea9:	push   esi
  40feaa:	pop    edi
  40feab:	jle    0x40fec3
  40fead:	leave  
  40feae:	retf   0xa509
  40feb1:	dec    ebp
  40feb2:	adc    al,0x1f
  40feb4:	fwait
  40feb5:	sbb    bh,dh
  40feb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb8:	jl     0x40fe6e
  40feba:	ins    DWORD PTR es:[edi],dx
  40febb:	push   esi
  40febc:	adc    dl,BYTE PTR [edx-0xfccca4e]
  40fec2:	in     eax,dx
  40fec3:	pop    ebp
  40fec4:	loopne 0x40ff17
  40fec6:	pop    edi
  40fec7:	data16 mov ah,0xbe
  40feca:	jno    0x40ff38
  40fecc:	daa    
  40fecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fece:	mov    eax,ds:0x266a021
  40fed3:	mov    dl,0x7c
  40fed5:	lods   al,BYTE PTR ds:[esi]
  40fed6:	mov    eax,ds:0xd1cf4ac8
  40fedb:	pop    es
  40fedc:	sub    dh,BYTE PTR [eax]
  40fede:	push   cs
  40fedf:	inc    eax
  40fee0:	push   es
  40fee1:	pop    es
  40fee2:	ins    BYTE PTR es:[edi],dx
  40fee3:	icebp  
  40fee4:	pop    es
  40fee5:	mov    edx,0x28f8cf37
  40feea:	cwde   
  40feeb:	cs jne 0x40ff0b
  40feee:	mov    eax,0x7b0b64bf
  40fef3:	jmp    0x386948aa
  40fef8:	xchg   ebx,eax
  40fef9:	loopne 0x40fec5
  40fefb:	or     ch,al
  40fefd:	fs pop esi
  40feff:	(bad)  
  40ff00:	and    BYTE PTR [edi-0x22],bl
  40ff03:	outs   dx,DWORD PTR ds:[esi]
  40ff04:	push   esp
  40ff05:	mov    esp,0xadae884a
  40ff0a:	xchg   esp,eax
  40ff0b:	inc    BYTE PTR [ebp+0x51e0729b]
  40ff11:	inc    eax
  40ff12:	jl     0x40fea7
  40ff14:	dec    esi
  40ff15:	jg     0x40fee4
  40ff17:	mov    al,0x15
  40ff19:	xchg   ebp,eax
  40ff1a:	repnz mov dh,0x64
  40ff1d:	adc    eax,0x55b9a1f1
  40ff22:	push   ecx
  40ff23:	aas    
  40ff24:	daa    
  40ff25:	dec    eax
  40ff26:	je     0x40fee3
  40ff28:	call   0x30574065
  40ff2d:	push   ecx
  40ff2e:	fcmovbe st,st(7)
  40ff30:	or     eax,0x807b79cb
  40ff35:	xchg   esp,eax
  40ff36:	inc    ecx
  40ff37:	mov    esp,0x6252d23b
  40ff3c:	jo     0x40ff0b
  40ff3e:	stos   DWORD PTR es:[edi],eax
  40ff3f:	(bad)  
  40ff40:	push   edx
  40ff41:	mov    ebx,0x675ebd6f
  40ff46:	xchg   ebp,eax
  40ff47:	(bad)  
  40ff48:	fimul  WORD PTR [ecx-0x5a]
  40ff4b:	mov    al,ds:0x95b0f425
  40ff50:	pop    ebp
  40ff51:	iret   
  40ff52:	cmp    al,0xb3
  40ff54:	mov    ebp,0x44996077
  40ff59:	jmp    0xd81244ff
  40ff5e:	sbb    DWORD PTR [ecx],0xffffffe1
  40ff61:	ds push cs
  40ff63:	popf   
  40ff64:	out    dx,al
  40ff65:	ds push edx
  40ff67:	call   0xb1636821
  40ff6c:	out    dx,al
  40ff6d:	out    0xab,al
  40ff6f:	xor    al,0x40
  40ff71:	mov    esi,0x34d6213e
  40ff76:	xor    esp,DWORD PTR [ebx-0x36]
  40ff79:	repnz jecxz 0x40ffe9
  40ff7c:	sub    eax,edi
  40ff7e:	xor    dh,0x77
  40ff81:	dec    edi
  40ff82:	scas   al,BYTE PTR es:[edi]
  40ff83:	scas   eax,DWORD PTR es:[edi]
  40ff84:	clc    
  40ff85:	inc    ebx
  40ff86:	hlt    
  40ff87:	push   esi
  40ff88:	ins    DWORD PTR es:[edi],dx
  40ff89:	(bad)  
  40ff8a:	std    
  40ff8b:	xchg   ecx,eax
  40ff8c:	mov    dh,0xd6
  40ff8e:	mov    ah,0xee
  40ff90:	sbb    DWORD PTR [esi-0x3e2e0257],eax
  40ff96:	out    dx,al
  40ff97:	xor    BYTE PTR [ecx+edi*8-0x27],dl
  40ff9b:	dec    esi
  40ff9c:	cmp    BYTE PTR [esi],ch
  40ff9e:	pop    ebx
  40ff9f:	pop    edx
  40ffa0:	mov    ds,WORD PTR [eax-0x80]
  40ffa3:	inc    ebp
  40ffa4:	(bad)  
  40ffa5:	adc    al,0x15
  40ffa7:	adc    ebp,DWORD PTR [eax-0x1bbf26a9]
  40ffad:	ss xor ebx,esp
  40ffb0:	mov    ch,0xf
  40ffb2:	mov    esp,0x5e1a1fe6
  40ffb7:	bound  esp,QWORD PTR [ebx+0x5d465cb5]
  40ffbd:	jge    0x40ff6b
  40ffbf:	jg     0x41003d
  40ffc1:	int3   
  40ffc2:	stos   DWORD PTR es:[edi],eax
  40ffc3:	sti    
  40ffc4:	jle    0x40ffbd
  40ffc6:	mov    eax,ds:0xe959f94b
  40ffcb:	lea    ebx,[eax+0x7d30e36e]
  40ffd1:	pop    ebp
  40ffd2:	addr16 and eax,0x3004510a
  40ffd8:	inc    eax
  40ffd9:	mov    esp,0x5726f113
  40ffde:	fisttp DWORD PTR [ecx-0x56bacdf]
  40ffe4:	and    eax,ebx
  40ffe6:	(bad)  
  40ffe7:	sub    al,0xf0
  40ffe9:	pushf  
  40ffea:	or     BYTE PTR [edx+0x3],cl
  40ffed:	xlat   BYTE PTR ds:[ebx]
  40ffee:	mov    al,0xf5
  40fff0:	aaa    
  40fff1:	out    0xb,eax
  40fff3:	loope  0x40fff8
  40fff5:	cld    
  40fff6:	(bad)  
  40fff8:	outs   dx,DWORD PTR ds:[esi]
  40fff9:	icebp  
  40fffa:	jmp    0x9c84:0x8f110173
  410001:	jmp    0xf8fcf00b
  410006:	rep outs dx,DWORD PTR ds:[esi]
  410008:	jecxz  0x40ff96
  41000a:	dec    ebp
  41000b:	ss pop eax
  41000d:	sub    DWORD PTR [edx-0x29],eax
  410010:	mov    ds:0xca4e804c,eax
  410015:	lds    ebp,FWORD PTR [esi+eax*2]
  410018:	xchg   edi,eax
  410019:	test   dl,al
  41001b:	inc    ecx
  41001c:	popf   
  41001d:	xor    eax,0x6f7b6055
  410022:	cmp    esi,edx
  410024:	dec    esi
  410025:	stos   BYTE PTR es:[edi],al
  410026:	test   eax,0xe859cc28
  41002b:	(bad)  
  41002c:	mov    bl,0x4f
  41002e:	cdq    
  41002f:	retf   
  410030:	mov    dh,0x26
  410032:	out    dx,eax
  410033:	iret   
  410034:	jns    0x410006
  410036:	mov    ds:0x9fcfbc5b,eax
  41003b:	sbb    bl,BYTE PTR [ebx-0x4791c4b4]
  410041:	(bad)  
  410042:	dec    edx
  410043:	out    0xed,al
  410045:	cld    
  410046:	sub    al,0x91
  410048:	jo     0x40ffde
  41004a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41004b:	fstp   TBYTE PTR [edi]
  41004d:	dec    esi
  41004e:	sbb    al,0xfc
  410050:	push   0xfffffff8
  410052:	pop    eax
  410053:	ficom  DWORD PTR [ebp+0x79]
  410056:	out    0xb5,al
  410058:	push   0x52
  41005a:	xchg   edx,eax
  41005b:	fstp   DWORD PTR [esi]
  41005d:	mov    bl,cl
  41005f:	into   
  410060:	out    dx,eax
  410061:	cwde   
  410062:	sbb    al,0xbe
  410064:	int    0xe8
  410066:	retf   
  410067:	shr    bl,1
  410069:	clc    
  41006a:	out    dx,al
  41006b:	test   ebp,ecx
  41006d:	mov    WORD PTR ds:0x62bce13a,ss
  410073:	aaa    
  410074:	mov    BYTE PTR [ebx],ah
  410076:	fnsave [ebx+edi*8+0x799342d2]
  41007d:	dec    DWORD PTR [edi]
  41007f:	nop
  410080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410081:	dec    esp
  410082:	jge    0x41003a
  410084:	push   ebx
  410085:	and    DWORD PTR [esi-0x7],0xc154909f
  41008c:	ds retf 
  41008e:	jp     0x41005c
  410090:	xchg   edx,eax
  410091:	iret   
  410092:	fmul   QWORD PTR [edx-0x745ab85a]
  410098:	pop    esi
  410099:	(bad)  
  41009a:	sub    DWORD PTR [eax+0x6b],esi
  41009d:	push   cs
  41009e:	xchg   ecx,eax
  41009f:	icebp  
  4100a0:	(bad)  
  4100a1:	pop    ds
  4100a2:	(bad)  
  4100a3:	rol    DWORD PTR ds:0x7dbf7a39,cl
  4100a9:	cdq    
  4100aa:	ja     0x410077
  4100ac:	and    eax,0xe81273fa
  4100b1:	cmp    DWORD PTR [ecx-0x533e632b],eax
  4100b7:	xchg   BYTE PTR [edx-0x55c945af],al
  4100bd:	out    dx,al
  4100be:	std    
  4100bf:	sar    BYTE PTR [edi],1
  4100c1:	pop    ebx
  4100c2:	and    ebp,eax
  4100c4:	(bad)  
  4100c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c6:	xor    DWORD PTR [ebx-0x75],edi
  4100c9:	iret   
  4100ca:	jb     0x410107
  4100cc:	jecxz  0x4100f6
  4100ce:	add    edx,DWORD PTR [ebx-0x7c]
  4100d1:	sub    eax,0xfcc4b71a
  4100d6:	dec    esp
  4100d7:	jno    0x4100e2
  4100d9:	lds    esi,FWORD PTR [eax-0x73]
  4100dc:	mov    ch,0x41
  4100de:	jmp    0x35093063
  4100e3:	les    edx,FWORD PTR [ecx-0x30]
  4100e6:	rcl    bh,1
  4100e8:	xchg   ecx,eax
  4100e9:	cdq    
  4100ea:	xor    BYTE PTR [ecx+0x1],cl
  4100ed:	inc    esi
  4100ee:	jnp    0x410094
  4100f0:	pop    ecx
  4100f1:	xchg   ebx,eax
  4100f2:	add    bl,BYTE PTR [ecx]
  4100f4:	shl    BYTE PTR [esi+0x55],1
  4100f7:	adc    esi,DWORD PTR [edi+0x74]
  4100fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100fb:	push   ss
  4100fc:	sbb    ebp,DWORD PTR [ebx+edx*8-0x54d72a8e]
  410103:	mov    al,ds:0x5608cc61
  410108:	repnz iret 
  41010a:	mov    ecx,DWORD PTR [eax+0x18d00161]
  410110:	inc    esp
  410111:	xor    al,BYTE PTR [ecx+eax*4+0xf]
  410115:	lock push ds
  410117:	(bad)  
  410118:	push   ss
  410119:	and    al,0xb2
  41011b:	adc    DWORD PTR [edi-0x3b863dc0],0x10
  410122:	test   edx,eax
  410124:	nop
  410125:	lock call DWORD PTR [esi+0x544644c7]
  41012c:	xor    BYTE PTR ds:0x72aab8ae,ah
  410132:	cmc    
  410133:	fild   QWORD PTR [edx+0x2c81bec7]
  410139:	inc    ecx
  41013a:	or     DWORD PTR ds:0xaeef002a,ebx
  410140:	adc    al,0x7b
  410142:	ja     0x4101ae
  410144:	std    
  410145:	and    DWORD PTR [ebp+0xf745b60],ecx
  41014b:	push   es
  41014c:	push   eax
  41014d:	repnz push edx
  41014f:	pop    eax
  410150:	xor    bl,dh
  410152:	jmp    0x1a57:0x7b634932
  410159:	inc    ebp
  41015a:	cld    
  41015b:	and    al,0xfc
  41015d:	pop    esi
  41015e:	mov    ebx,0x30ba6270
  410163:	and    ch,BYTE PTR [ecx]
  410165:	lock adc ch,cl
  410168:	stos   BYTE PTR es:[edi],al
  410169:	popf   
  41016a:	xlat   BYTE PTR ds:[ebx]
  41016b:	inc    esp
  41016c:	aaa    
  41016d:	imul   eax,DWORD PTR [esi+eax*2],0xf
  410171:	lods   al,BYTE PTR ds:[esi]
  410172:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410174:	sbb    al,0x69
  410176:	jmp    DWORD PTR [ebx]
  410178:	out    dx,al
  410179:	iret   
  41017a:	xor    ah,BYTE PTR [eax-0x3e0727f9]
  410180:	call   0x8f739a38
  410185:	sbb    DWORD PTR ds:0x98752a1d,esp
  41018b:	pop    ebx
  41018c:	or     dl,BYTE PTR [edx]
  41018e:	hlt    
  41018f:	inc    ebx
  410190:	adc    DWORD PTR [esi-0x2a],ebp
  410193:	adc    BYTE PTR [eax+ebp*8],bl
  410196:	pushf  
  410197:	cmp    al,BYTE PTR [ebx+0x7d]
  41019a:	mov    ebp,0x382c6464
  41019f:	ds xchg edx,esp
  4101a2:	push   edi
  4101a3:	lahf   
  4101a4:	lea    ebx,[ebx]
  4101a6:	mov    eax,ds:0x2dba3b1c
  4101ab:	scas   eax,DWORD PTR es:[edi]
  4101ac:	mov    ebx,eax
  4101ae:	jns    0x410193
  4101b0:	push   eax
  4101b1:	xchg   ebx,eax
  4101b2:	das    
  4101b3:	adc    ch,0xc5
  4101b6:	or     DWORD PTR [edx],esi
  4101b8:	shr    DWORD PTR [esp+eax*1],1
  4101bb:	mov    bl,0x7f
  4101bd:	xchg   esp,eax
  4101be:	arpl   WORD PTR [edi],di
  4101c0:	mov    ah,bl
  4101c2:	outs   dx,BYTE PTR ds:[esi]
  4101c3:	adc    eax,DWORD PTR [edi+0x1f1cebbf]
  4101c9:	test   eax,0x2cfb18d4
  4101ce:	inc    ebx
  4101cf:	fld    st(5)
  4101d1:	cpuid  
  4101d3:	leave  
  4101d4:	pop    edi
  4101d5:	imul   edx,ecx,0xdad75bf5
  4101db:	in     al,dx
  4101dc:	mov    DWORD PTR [edx-0x1d],esp
  4101df:	leave  
  4101e0:	data16 ins BYTE PTR es:[edi],dx
  4101e2:	out    dx,al
  4101e3:	into   
  4101e4:	mov    DWORD PTR ds:0xac8e790c,esp
  4101ea:	xlat   BYTE PTR ds:[ebx]
  4101eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ec:	in     eax,dx
  4101ed:	aaa    
  4101ee:	std    
  4101ef:	inc    ebx
  4101f0:	cwde   
  4101f1:	call   0xeb3d:0x91dc4da8
  4101f8:	xor    edx,edi
  4101fa:	pop    ecx
  4101fb:	pusha  
  4101fc:	clc    
  4101fd:	xchg   edx,eax
  4101fe:	pop    ss
  4101ff:	(bad)  
  410200:	jnp    0x4101b0
  410202:	push   0x7a24bf94
  410207:	xchg   ebx,eax
  410208:	inc    ecx
  410209:	call   0x65acc52c
  41020e:	pop    eax
  41020f:	jle    0x4101b3
  410211:	pop    edx
  410212:	xor    DWORD PTR [ebx-0xc25911d],esp
  410218:	int3   
  410219:	mov    ebp,0xff25188f
  41021e:	xchg   ebx,eax
  41021f:	push   ss
  410220:	jecxz  0x41029f
  410222:	jge    0x4101e2
  410224:	sub    al,0x7d
  410226:	sub    al,BYTE PTR [ebp+esi*8+0x61f020a]
  41022d:	mov    eax,0x77e8ec83
  410232:	std    
  410233:	adc    BYTE PTR [esi+ebp*2],bl
  410236:	call   0x132f:0xded384bd
  41023d:	mov    edi,0x3773149b
  410242:	jmp    0x41020d
  410244:	inc    ebp
  410245:	add    edi,DWORD PTR [edi-0x7d]
  410248:	add    DWORD PTR [esi-0x57e51c04],0xc76863d8
  410252:	retf   
  410253:	int    0xaf
  410255:	cmp    esi,DWORD PTR [esi]
  410257:	retf   0x9c42
  41025a:	das    
  41025b:	inc    esi
  41025c:	mov    bh,0xbf
  41025e:	jno    0x410205
  410260:	mov    esp,0xfb5f8d74
  410265:	ret    
  410266:	adc    eax,0xdf115855
  41026b:	add    DWORD PTR [eax-0x5f],esi
  41026e:	pop    ebp
  41026f:	push   esi
  410270:	dec    ebx
  410271:	(bad)  
  410272:	or     eax,0x9e3b6a33
  410277:	cli    
  410278:	jp     0x4101ff
  41027a:	dec    edx
  41027b:	int    0xa2
  41027d:	(bad)  
  41027e:	scas   eax,DWORD PTR es:[edi]
  41027f:	adc    BYTE PTR [esi],bh
  410281:	scas   eax,DWORD PTR es:[edi]
  410282:	sub    eax,0x50d64e93
  410287:	pusha  
  410288:	dec    edx
  410289:	ror    BYTE PTR [esp+edi*1-0x62],1
  41028d:	scas   eax,DWORD PTR es:[edi]
  41028e:	mov    ds:0x43b8f07e,al
  410293:	pop    es
  410294:	not    DWORD PTR [ebx+0x38f4f05b]
  41029a:	adc    DWORD PTR [eax+0x650b3b92],edx
  4102a0:	repnz neg DWORD PTR [edx+ebp*8]
  4102a4:	push   ebp
  4102a5:	dec    edi
  4102a6:	mov    dl,0xd6
  4102a8:	or     dl,cl
  4102aa:	aam    0x82
  4102ac:	sub    eax,0x86ed6db8
  4102b1:	sbb    BYTE PTR [edx+eiz*1+0x66dfe7],bh
  4102b8:	imul   edx,DWORD PTR [ebx+edi*2-0x45],0x1c
  4102bd:	outs   dx,DWORD PTR ds:[esi]
  4102be:	push   esp
  4102bf:	mov    dh,0xe5
  4102c1:	xchg   edi,eax
  4102c2:	add    bh,BYTE PTR [ebp-0x759897cf]
  4102c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102c9:	or     eax,0x98b41043
  4102ce:	cmp    ebp,DWORD PTR [ebx]
  4102d0:	adc    al,0xa0
  4102d2:	adc    al,0x2b
  4102d4:	sbb    bl,BYTE PTR [eax-0x35c88e21]
  4102da:	(bad)  
  4102db:	mul    BYTE PTR [esp+ecx*8+0x25112c77]
  4102e2:	xchg   edi,edx
  4102e4:	cmp    al,BYTE PTR [ecx+ebx*4]
  4102e7:	pop    esi
  4102e8:	addr16 dec ecx
  4102ea:	pop    ds
  4102eb:	mov    ah,0x15
  4102ed:	sar    DWORD PTR [ecx],1
  4102ef:	cdq    
  4102f0:	inc    ecx
  4102f1:	add    DWORD PTR [ebp+0x35],ecx
  4102f4:	out    0xf8,eax
  4102f6:	xor    al,0xf4
  4102f8:	xlat   BYTE PTR ds:[ebx]
  4102f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102fa:	adc    al,0x69
  4102fc:	sub    al,0x6f
  4102fe:	cwde   
  4102ff:	jl     0x4102d0
  410301:	push   ebp
  410302:	loopne 0x4102e2
  410304:	or     al,0x49
  410306:	into   
  410307:	test   BYTE PTR [esi-0x2f],bh
  41030a:	stos   BYTE PTR es:[edi],al
  41030b:	mov    ecx,0xa95b19ec
  410310:	lds    ax,DWORD PTR [edi]
  410313:	jbe    0x41036c
  410315:	test   ebx,esp
  410317:	in     eax,0x8c
  410319:	add    al,0x97
  41031b:	pusha  
  41031c:	xchg   esp,eax
  41031d:	sub    BYTE PTR [edx-0x7a8e3603],bl
  410323:	imul   edx,DWORD PTR [ebp-0x6ff7b383],0x57
  41032a:	cdq    
  41032b:	and    eax,0x36c87290
  410330:	ins    BYTE PTR es:[edi],dx
  410331:	mov    ds:0x92de2d5c,eax
  410336:	pushf  
  410337:	clc    
  410338:	inc    ebx
  410339:	and    BYTE PTR [esi-0xb],cl
  41033c:	xchg   BYTE PTR [bx+di+0x5c],al
  410340:	and    eax,0x72855a48
  410345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410346:	rcl    DWORD PTR [edx],cl
  410348:	call   0x45b1:0xd2536f5e
  41034f:	shl    BYTE PTR [ebx+0x54792e84],1
  410355:	pop    edx
  410356:	cld    
  410357:	in     eax,dx
  410358:	jmp    0xb944:0x18196156
  41035f:	rcl    ch,cl
  410361:	jnp    0x4103e1
  410363:	inc    esp
  410364:	ror    DWORD PTR [ecx],0xde
  410367:	hlt    
  410368:	adc    BYTE PTR [ebx+ecx*2],0xd2
  41036c:	je     0x410307
  41036e:	adc    BYTE PTR [esi-0x37],0xc1
  410372:	jae    0x410351
  410374:	loope  0x41032b
  410376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410377:	aaa    
  410378:	test   BYTE PTR [edx],bl
  41037a:	ss ja  0x410385
  41037d:	cli    
  41037e:	push   es
  41037f:	dec    edx
  410380:	in     al,dx
  410381:	push   ecx
  410382:	add    BYTE PTR [ecx+0x3d],al
  410385:	mov    ah,bl
  410387:	mov    ch,0x77
  410389:	imul   ecx,DWORD PTR [edx+0x60],0xc57876ca
  410390:	stos   BYTE PTR es:[edi],al
  410391:	in     al,dx
  410392:	setp   BYTE PTR [ebx]
  410395:	dec    ecx
  410396:	jg     0x410337
  410398:	jbe    0x410354
  41039a:	mov    ebp,0x310a17c7
  41039f:	lds    eax,FWORD PTR [eax]
  4103a1:	xchg   ebp,eax
  4103a2:	and    bl,bh
  4103a4:	bound  edi,QWORD PTR [eax+0x6198b096]
  4103aa:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4103ac:	mov    al,ds:0x42061558
  4103b1:	nop
  4103b2:	xor    BYTE PTR [ebx],0x77
  4103b5:	sub    esp,ebp
  4103b7:	cmp    eax,0x243f191
  4103bc:	out    dx,eax
  4103bd:	les    ebx,FWORD PTR [edx-0x457935ce]
  4103c3:	adc    cl,ah
  4103c5:	(bad)  
  4103c6:	mov    ss,WORD PTR [edi+0x49]
  4103c9:	fsub   DWORD PTR [ebx+0x57db6dca]
  4103cf:	(bad)  
  4103d0:	jno    0x410420
  4103d2:	jmp    0x4103a9
  4103d4:	fmul   st(6),st
  4103d6:	add    eax,0x67332bcc
  4103db:	mov    bl,0x4e
  4103dd:	movntps XMMWORD PTR [ecx-0x2d],xmm5
  4103e1:	sbb    al,0x2a
  4103e3:	(bad)  
  4103e4:	js     0x410385
  4103e6:	lea    eax,[ebp+ebx*8-0x54]
  4103ea:	fcomip st,st(1)
  4103ec:	mov    bh,0x6f
  4103ee:	mov    ss,edi
  4103f0:	mov    bh,0x15
  4103f2:	iret   
  4103f3:	inc    edx
  4103f4:	fisub  DWORD PTR [ebx-0x62]
  4103f7:	mov    cl,0x30
  4103f9:	mov    eax,ds:0xc3ac2696
  4103fe:	dec    ebx
  4103ff:	jmp    0x1d643af9
  410404:	jo     0x4103a3
  410406:	pop    DWORD PTR [ebx+esi*1]
  410409:	icebp  
  41040a:	inc    edx
  41040b:	adc    eax,0xfa1160a8
  410410:	sbb    al,BYTE PTR [eax+0x2dac9964]
  410416:	(bad)
  410419:	add    esp,DWORD PTR [edi+0x56]
  41041c:	and    al,0x2f
  41041e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41041f:	push   es
  410420:	and    DWORD PTR [esi-0x23],esi
  410423:	or     al,0x9f
  410425:	push   ds
  410426:	cmp    BYTE PTR [edx],bl
  410428:	inc    esi
  410429:	cs jo  0x4103d3
  41042c:	mov    esp,0x8f10fb3a
  410431:	pop    ebx
  410432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410433:	xor    eax,0x4bef1a6c
  410438:	ins    BYTE PTR es:[edi],dx
  410439:	sti    
  41043a:	adc    al,0x9f
  41043c:	push   ebx
  41043d:	xlat   BYTE PTR ds:[ebx]
  41043e:	add    bl,BYTE PTR [esi+0x5a]
  410441:	imul   ebp,ebp,0xffffffb8
  410444:	or     bh,ah
  410446:	pop    esp
  410447:	pop    esi
  410448:	jb     0x410442
  41044a:	gs sub eax,0x20774719
  410450:	nop
  410451:	xchg   ebx,eax
  410452:	aam    0xf7
  410454:	pop    esi
  410455:	(bad)  
  410456:	cld    
  410457:	xchg   edx,eax
  410458:	mov    ebx,0x27c48cd9
  41045d:	xchg   BYTE PTR [ecx+0x68],bh
  410460:	adc    cl,BYTE PTR [ebx-0x7a]
  410463:	add    ebp,edx
  410465:	jo     0x4104bf
  410467:	fxch   st(6)
  410469:	lods   al,BYTE PTR ds:[esi]
  41046a:	push   ebp
  41046b:	push   eax
  41046c:	jns    0x41043e
  41046e:	in     al,0x4c
  410470:	lods   eax,DWORD PTR ds:[esi]
  410471:	or     dh,BYTE PTR [ebp+0x6b]
  410474:	sub    BYTE PTR [ebp+0x28],dl
  410477:	aas    
  410478:	fldenv ds:0xec445694
  41047e:	or     BYTE PTR [esi+0x715212cc],cl
  410484:	xchg   ecx,eax
  410485:	push   0xffffff8e
  410487:	xchg   ecx,eax
  410488:	mov    esp,0xa62df58a
  41048d:	push   DWORD PTR [ecx-0x165564ed]
  410493:	(bad)  
  410495:	ret    0xf893
  410498:	(bad)  
  410499:	jne    0x410421
  41049b:	dec    edx
  41049c:	addr16 int3 
  41049e:	out    dx,eax
  41049f:	and    ebp,eax
  4104a1:	sub    ecx,DWORD PTR [esp+esi*1+0x1b]
  4104a5:	push   es
  4104a6:	push   0x26
  4104a8:	inc    ebp
  4104a9:	stos   BYTE PTR es:[edi],al
  4104aa:	cmp    al,0x30
  4104ac:	shl    DWORD PTR [ecx+0x3e],1
  4104af:	je     0x4104ce
  4104b1:	mov    ecx,0xb9dc7221
  4104b6:	push   ebp
  4104b7:	icebp  
  4104b8:	fild   QWORD PTR [esi+0x6d2aa1b4]
  4104be:	neg    DWORD PTR [eax-0x33cb9d93]
  4104c4:	push   0x19
  4104c6:	cld    
  4104c7:	leave  
  4104c8:	xor    ah,ch
  4104ca:	and    eax,0xee1c982c
  4104cf:	add    eax,0x216aefc6
  4104d4:	xchg   esi,eax
  4104d5:	icebp  
  4104d6:	push   esi
  4104d7:	push   ebp
  4104d8:	les    esp,FWORD PTR [ebx+0x42]
  4104db:	aad    0xae
  4104dd:	jge    0x410495
  4104df:	adc    DWORD PTR [ebp-0x4b3635f9],0x4bbc3e97
  4104e9:	sbb    DWORD PTR [eax+0x2fd461eb],esi
  4104ef:	mov    ebp,DWORD PTR [ebx+0x5d]
  4104f2:	xor    dh,BYTE PTR [ebx]
  4104f4:	test   BYTE PTR [esi],dh
  4104f6:	jle    0x41051f
  4104f8:	loop   0x4104e5
  4104fa:	xchg   BYTE PTR [eax+0x531cbad2],bh
  410500:	aad    0x27
  410502:	or     eax,0x2ca50f4e
  410507:	add    edx,DWORD PTR [ecx+0x4c]
  41050a:	shr    BYTE PTR [ebx-0x7f],1
  41050d:	push   0x661c88a2
  410512:	jle    0x4104de
  410514:	and    esp,esp
  410516:	rcl    esi,cl
  410518:	push   eax
  410519:	xor    DWORD PTR [ecx-0x59],0xffffffb3
  41051d:	xor    eax,0x1f2a8e7d
  410522:	adc    eax,0xf45a439d
  410527:	add    DWORD PTR [ebx+0x7],esp
  41052a:	jne    0x4104c7
  41052c:	mov    al,0x83
  41052e:	add    al,0x84
  410530:	aam    0xd0
  410532:	pop    ss
  410533:	(bad)  
  410534:	lahf   
  410535:	pop    esi
  410536:	dec    ebx
  410537:	(bad)  
  410539:	mov    ah,0x5f
  41053b:	xor    ah,dl
  41053d:	jbe    0x410548
  41053f:	ja     0x410533
  410541:	push   edi
  410542:	jp     0x4104df
  410544:	or     al,0xac
  410546:	mov    BYTE PTR [edi+0x52],dl
  410549:	(bad)  
  41054a:	sar    BYTE PTR [edx-0x4b807c5e],0xd3
  410551:	mov    DWORD PTR [ebx+ecx*1+0x160d7058],edi
  410558:	inc    esi
  410559:	jae    0x410523
  41055b:	jl     0x410516
  41055d:	mov    ss,WORD PTR [ebx-0x56]
  410560:	(bad)  
  410562:	dec    edi
  410563:	repz rol BYTE PTR [ebx-0x1a03ce9b],1
  41056a:	repnz shr DWORD PTR [ecx],1
  41056d:	xchg   DWORD PTR [ebx+0x328f43b9],ebp
  410573:	(bad)  
  410574:	mov    esi,0xe0e27ca
  410579:	dec    ebx
  41057a:	pop    ds
  41057b:	lods   al,BYTE PTR ds:[esi]
  41057c:	daa    
  41057d:	sub    DWORD PTR [edx],ebp
  41057f:	scas   al,BYTE PTR es:[edi]
  410580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410581:	inc    edi
  410582:	into   
  410583:	out    0x1d,eax
  410585:	xchg   ecx,eax
  410586:	inc    edx
  410587:	lods   eax,DWORD PTR ds:[esi]
  410588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410589:	fwait
  41058a:	add    bh,BYTE PTR [eax+eax*2+0x5c]
  41058e:	pop    esi
  41058f:	imul   edx,DWORD PTR [esi+0x39],0xcb5a066d
  410596:	xor    bh,BYTE PTR [eax+0x20ea3d20]
  41059c:	lahf   
  41059d:	cmc    
  41059e:	(bad)  
  4105a0:	dec    DWORD PTR [ecx+0x64beebb6]
  4105a6:	cli    
  4105a7:	in     eax,0xa7
  4105a9:	and    ecx,esp
  4105ab:	jge    0x410597
  4105ad:	fidiv  WORD PTR [ecx]
  4105af:	mov    BYTE PTR [ebx-0x18],cl
  4105b2:	popa   
  4105b3:	mov    edx,0x962d420b
  4105b8:	addr16 cmc 
  4105ba:	pop    edx
  4105bb:	pop    es
  4105bc:	shl    esi,cl
  4105be:	cmp    dh,dl
  4105c0:	xor    cl,bh
  4105c2:	sub    BYTE PTR [edx+eiz*4-0x3c],ch
  4105c6:	cs mov eax,edi
  4105c9:	imul   ebx,DWORD PTR [ecx],0x23
  4105cc:	aas    
  4105cd:	jns    0x4105d7
  4105cf:	jno    0x410607
  4105d1:	pop    ebp
  4105d2:	into   
  4105d3:	xchg   ecx,eax
  4105d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d5:	(bad)  
  4105d6:	js     0x4105af
  4105d8:	sub    dh,BYTE PTR [esi+0x7a]
  4105db:	lmsw   WORD PTR [edi-0x1b]
  4105df:	aam    0x47
  4105e1:	scas   al,BYTE PTR es:[edi]
  4105e2:	push   ss
  4105e3:	out    0xce,eax
  4105e5:	xor    DWORD PTR [ecx+0x78],edx
  4105e8:	arpl   WORD PTR [bp+si+0x197f],ax
  4105ed:	mov    edx,0x20cb1a92
  4105f2:	push   eax
  4105f3:	push   edi
  4105f4:	out    0x1d,al
  4105f6:	dec    edi
  4105f7:	bound  esi,QWORD PTR [edi-0x4f]
  4105fa:	mov    al,BYTE PTR [edi]
  4105fc:	cmp    eax,eax
  4105fe:	test   DWORD PTR [ebp+0x18],esi
  410601:	xchg   ecx,eax
  410602:	pop    esp
  410603:	mov    al,ds:0x7d3a426f
  410608:	pop    ss
  410609:	ins    DWORD PTR es:[edi],dx
  41060a:	hlt    
  41060b:	sbb    BYTE PTR [edi+0x6c],0x7d
  41060f:	jp     0x410596
  410611:	xor    eax,0x3e63cc31
  410616:	ins    DWORD PTR es:[edi],dx
  410617:	rcl    ebx,0x5a
  41061a:	sbb    DWORD PTR [edx-0x66b44578],eax
  410620:	xchg   edx,eax
  410621:	dec    edi
  410622:	add    esi,DWORD PTR [ecx]
  410624:	pop    eax
  410625:	ss push 0xd5612e84
  41062b:	std    
  41062c:	mov    BYTE PTR [edx-0x66],cl
  41062f:	adc    DWORD PTR ds:0xf5be0c07,edx
  410635:	(bad)
  410638:	mov    dh,0x11
  41063a:	mov    edi,0xc41b0883
  41063f:	mov    esi,0xa42dc668
  410644:	fstp   QWORD PTR [esi-0x1e]
  410647:	outs   dx,DWORD PTR ds:[esi]
  410648:	ds mov eax,0xa2afe2a6
  41064e:	jb     0x4106ce
  410650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410651:	sar    bh,0xb0
  410654:	mov    ebx,0xd713babf
  410659:	cmp    al,0x9d
  41065b:	sub    bl,dh
  41065d:	jecxz  0x4106a8
  41065f:	(bad)  
  410660:	out    dx,al
  410661:	rol    BYTE PTR [edi+0x21d94b7e],0x4c
  410668:	pop    ss
  410669:	xchg   esi,eax
  41066a:	gs stos BYTE PTR es:[edi],al
  41066c:	and    DWORD PTR [eax-0x51],ebx
  41066f:	mov    ch,0x1c
  410671:	nop
  410672:	addr16 mov al,0x11
  410675:	add    esp,DWORD PTR [ecx-0x6e914a91]
  41067b:	pushw  es
  41067d:	ds xchg esi,eax
  41067f:	jb     0x410608
  410681:	sahf   
  410682:	cmp    BYTE PTR [ebx],bh
  410684:	mov    ch,0xf4
  410686:	loop   0x4106ad
  410688:	jns    0x4106b6
  41068a:	xchg   DWORD PTR [ebx],edx
  41068c:	mov    al,ds:0xcf0698e7
  410691:	xchg   BYTE PTR [edi+0x36],bh
  410694:	jnp    0x4106a4
  410696:	aaa    
  410697:	je     0x410620
  410699:	mov    ebp,0xcb450551
  41069e:	pop    ebp
  41069f:	inc    BYTE PTR [ecx+0x4d]
  4106a2:	shl    BYTE PTR [ebx+ecx*8+0x43],1
  4106a6:	fucomip st,st(4)
  4106a8:	sahf   
  4106a9:	loope  0x4106a0
  4106ab:	mov    bh,0x40
  4106ad:	mov    esp,0x5d670e4f
  4106b2:	mov    esp,0xf07fd130
  4106b7:	je     0x4106dc
  4106b9:	adc    eax,0xb6aa56db
  4106be:	stos   DWORD PTR es:[edi],eax
  4106bf:	cdq    
  4106c0:	push   ds
  4106c1:	fst    QWORD PTR [eax+0x1bf21c65]
  4106c7:	clc    
  4106c8:	sbb    al,0x68
  4106ca:	jo     0x41068f
  4106cc:	and    al,0xf0
  4106ce:	jmp    0x41066b
  4106d0:	inc    edi
  4106d1:	push   edx
  4106d2:	add    DWORD PTR [eax+0x4e7939b5],edi
  4106d8:	cmp    eax,DWORD PTR [eax+0x27ac523]
  4106de:	call   0xbe81cb0
  4106e3:	fstp   DWORD PTR [esi+0xf]
  4106e6:	in     al,dx
  4106e7:	getsec 
  4106e9:	adc    bl,dh
  4106eb:	ss inc ebx
  4106ed:	jmp    0x77aefacb
  4106f2:	jge    0x410726
  4106f4:	mov    eax,0xc2f09ccb
  4106f9:	aad    0x21
  4106fb:	mov    esi,edi
  4106fd:	dec    ecx
  4106fe:	sub    BYTE PTR [ebp-0x35],bh
  410701:	pop    edi
  410702:	inc    edx
  410703:	xor    al,0xb3
  410705:	dec    ebp
  410706:	(bad)  
  410707:	push   ds
  410708:	mov    ebp,0x91b24b87
  41070d:	pop    ecx
  41070e:	jle    0x410690
  410710:	lahf   
  410711:	jne    0x4106d9
  410713:	(bad)  
  410715:	xor    edx,esp
  410717:	int3   
  410718:	xor    al,dl
  41071a:	shl    cl,cl
  41071c:	(bad)  
  41071d:	in     al,0xa9
  41071f:	fadd   st,st(5)
  410721:	les    edx,FWORD PTR [esi-0x183b99ce]
  410727:	test   eax,0xe6bf32d6
  41072c:	fisttp QWORD PTR [esi]
  41072e:	jae    0x410737
  410730:	pop    es
  410731:	xchg   DWORD PTR fs:[edx*1-0x31784754],esp
  410739:	mov    edi,0x436fc868
  41073e:	dec    BYTE PTR [edx-0x4f]
  410741:	hlt    
  410742:	dec    edx
  410743:	repz in eax,0x78
  410746:	xchg   ebx,eax
  410747:	push   esi
  410748:	jmp    0x410712
  41074a:	dec    edx
  41074b:	pusha  
  41074c:	in     al,dx
  41074d:	pop    es
  41074e:	inc    edx
  41074f:	lods   eax,DWORD PTR ds:[esi]
  410750:	pusha  
  410751:	leave  
  410752:	in     eax,0x96
  410754:	enter  0xb128,0x50
  410758:	dec    ecx
  410759:	fld    TBYTE PTR [eax-0x39d59dfd]
  41075f:	mov    eax,ds:0xbd3733c6
  410764:	push   0x78
  410766:	and    al,0xd
  410768:	mov    bh,0x47
  41076a:	(bad)  
  41076b:	mov    ebx,0x74574bbe
  410770:	loop   0x410720
  410772:	fxch   st(2)
  410774:	leave  
  410775:	xchg   ecx,eax
  410776:	(bad)  
  410777:	neg    DWORD PTR [edx-0x6b]
  41077a:	and    BYTE PTR [esi+0x2b11adda],0x23
  410781:	dec    esi
  410782:	lock retf 
  410784:	addr16 mov esi,0x5dae97a2
  41078a:	sbb    DWORD PTR [edx+0x52],esi
  41078d:	ins    DWORD PTR es:[edi],dx
  41078e:	inc    eax
  41078f:	ja     0x4107b2
  410791:	push   ebp
  410792:	mov    al,ds:0xf3acaa4a
  410797:	push   eax
  410798:	dec    eax
  410799:	adc    eax,0x54312a3b
  41079e:	mov    dl,0x4d
  4107a0:	sub    dh,cl
  4107a2:	and    al,0xc5
  4107a4:	xchg   ebp,eax
  4107a5:	mov    esi,0x970f6f1d
  4107aa:	mov    esp,0x1e1e2a99
  4107af:	xor    eax,0xd6ecb3bd
  4107b4:	fld    DWORD PTR [ebp+0x7ddcb675]
  4107ba:	add    BYTE PTR [edx*2+0x6c52c289],cl
  4107c1:	data16 lods al,BYTE PTR ds:[esi]
  4107c3:	jns    0x410782
  4107c5:	mov    dl,0x33
  4107c7:	mov    cl,0xcb
  4107c9:	push   ecx
  4107ca:	mov    eax,0xf312ca87
  4107cf:	sub    bl,BYTE PTR [eax]
  4107d1:	inc    ebx
  4107d2:	call   0xdbce3579
  4107d7:	mul    BYTE PTR [esi-0x58]
  4107da:	mov    eax,ds:0x4c74c081
  4107df:	jmp    0x1c7f8af8
  4107e4:	mov    ds:0x55c0777c,al
  4107e9:	push   0x7b
  4107eb:	pop    edx
  4107ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ed:	clc    
  4107ee:	outs   dx,BYTE PTR ds:[esi]
  4107ef:	(bad)
  4107f2:	ret    
  4107f3:	mov    ebx,0xc506cc7d
  4107f8:	pop    esp
  4107f9:	loopne 0x41084e
  4107fb:	dec    ebx
  4107fc:	inc    esi
  4107fd:	mov    esp,0x935cd4c9
  410802:	dec    esp
  410803:	int3   
  410804:	retf   0x4ac5
  410807:	mov    edi,0x1a94dccb
  41080c:	je     0x4107fc
  41080e:	popf   
  41080f:	sbb    esi,DWORD PTR [eax-0x1d]
  410812:	mov    dl,0x27
  410814:	std    
  410815:	sbb    BYTE PTR [edx],bl
  410817:	dec    eax
  410818:	data16 in al,0xb5
  41081b:	cmp    BYTE PTR [esp+edi*1],cl
  41081e:	lods   eax,DWORD PTR ds:[esi]
  41081f:	clc    
  410820:	push   ds
  410821:	lods   eax,DWORD PTR ds:[esi]
  410822:	nop
  410823:	test   BYTE PTR [ebx+0x5f],cl
  410826:	iret   
  410827:	inc    esi
  410828:	push   esi
  410829:	jmp    DWORD PTR ds:0x75f1ccb3
  41082f:	jg     0x41089e
  410831:	nop
  410832:	test   ch,al
  410834:	xor    BYTE PTR [ecx+edi*2+0x15a33ef8],dl
  41083b:	dec    ebx
  41083c:	out    dx,eax
  41083d:	or     eax,0x221e9bac
  410842:	ret    
  410843:	mov    bh,0x24
  410845:	in     eax,0x82
  410847:	outs   dx,DWORD PTR ds:[esi]
  410848:	push   edi
  410849:	push   0xffffffea
  41084b:	xchg   esi,eax
  41084c:	shl    DWORD PTR [ebp+0x3a],1
  41084f:	jns    0x410801
  410851:	xchg   BYTE PTR [eax-0x29],bh
  410854:	test   DWORD PTR [esi+0x75],0x33c10f83
  41085b:	dec    edi
  41085c:	ja     0x410878
  41085e:	shl    DWORD PTR [esp+edx*1+0x21],1
  410862:	add    dl,dl
  410864:	mov    edi,0x2fac939d
  410869:	fisttp DWORD PTR [edx-0x4c]
  41086c:	mov    ebp,0x8eafcac7
  410871:	and    eax,0xb777ddba
  410876:	dec    ecx
  410877:	mov    eax,0x918c325a
  41087c:	gs jae 0x41083e
  41087f:	popf   
  410880:	xor    bh,BYTE PTR [esi+0x1c]
  410883:	stos   DWORD PTR es:[edi],eax
  410884:	icebp  
  410885:	sbb    eax,0x8bfd1518
  41088a:	adc    ecx,DWORD PTR [esp+eax*1-0x2d]
  41088e:	mov    al,bl
  410890:	loopne 0x4108f3
  410892:	xlat   BYTE PTR ds:[ebx]
  410893:	cdq    
  410894:	in     al,0x62
  410896:	(bad)
  41089a:	in     eax,0x8d
  41089c:	fstp   QWORD PTR [esi]
  41089e:	popa   
  41089f:	push   ebp
  4108a0:	cdq    
  4108a1:	iret   
  4108a2:	imul   esp,DWORD PTR [eax],0x53
  4108a5:	and    ebp,esi
  4108a7:	inc    esi
  4108a8:	gs popa 
  4108aa:	and    ch,BYTE PTR [ecx+0x28]
  4108ad:	xchg   ebp,eax
  4108ae:	xor    BYTE PTR [eax-0xc],0x1e
  4108b2:	add    eax,eax
  4108b4:	mov    al,ds:0x6239ef8a
  4108b9:	das    
  4108ba:	mov    bl,0xd7
  4108bc:	add    dl,cl
  4108be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108bf:	mov    bl,0xda
  4108c1:	call   0xb17c:0xbc4c10dd
  4108c8:	mov    ebp,0x1efee1d9
  4108cd:	cmp    al,0x32
  4108cf:	repnz pusha 
  4108d1:	cmp    eax,0x88e6d049
  4108d6:	push   0x42
  4108d8:	mov    ecx,0x3c802919
  4108dd:	std    
  4108de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108df:	mov    bl,0x6b
  4108e1:	(bad)  
  4108e2:	idiv   eax
  4108e4:	jb     0x4108ac
  4108e6:	out    0x5c,eax
  4108e8:	aam    0xa1
  4108ea:	xchg   ebp,eax
  4108eb:	xchg   esp,eax
  4108ec:	sti    
  4108ed:	loope  0x410870
  4108ef:	fidiv  DWORD PTR [ebp-0x65]
  4108f2:	dec    ebp
  4108f3:	mov    eax,ds:0xdc05114b
  4108f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f9:	fild   QWORD PTR [edx]
  4108fb:	xor    eax,0x5c64c8
  410900:	gs mov bl,0x6e
  410903:	cmp    eax,0xca2ad6a
  410908:	out    0x28,al
  41090a:	leave  
  41090b:	ss sti 
  41090d:	(bad)  
  41090e:	adc    BYTE PTR [ecx+edi*8-0x593e42],dh
  410915:	pop    ecx
  410916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410917:	and    al,0xe
  410919:	rcr    BYTE PTR [edi+0x457e8df7],0x11
  410920:	dec    ecx
  410921:	pop    esp
  410922:	mov    ecx,0xffc4ab8f
  410927:	addr16 mov bh,bh
  41092a:	arpl   WORD PTR [eax-0x5ea9643d],cx
  410930:	loop   0x41099f
  410932:	aad    0xb1
  410934:	mov    esp,0x1f284f44
  410939:	(bad)  
  41093a:	(bad)  
  41093b:	sti    
  41093c:	stos   BYTE PTR es:[edi],al
  41093d:	sbb    cl,0xc2
  410940:	dec    edi
  410941:	scas   al,BYTE PTR es:[edi]
  410942:	jae    0x4108c7
  410944:	popa   
  410945:	rdmsr  
  410947:	push   ss
  410948:	adc    al,0x29
  41094a:	lea    edi,[edx+0x61]
  41094d:	xor    DWORD PTR [eax+0x39ac6ec9],eax
  410953:	lods   eax,DWORD PTR ds:[esi]
  410954:	mov    eax,ds:0x28ea202d
  410959:	cli    
  41095a:	xchg   ecx,eax
  41095b:	aam    0xd4
  41095d:	jmp    0x41099b
  41095f:	stc    
  410960:	sbb    cl,BYTE PTR [ecx]
  410962:	xor    BYTE PTR [edx],0x3a
  410965:	int3   
  410966:	(bad)  
  410967:	fiadd  WORD PTR [ebx]
  410969:	into   
  41096a:	lsl    ecx,WORD PTR [esi+0x4b345ad0]
  410971:	mov    ebp,0x2827db8e
  410976:	ja     0x410976
  410978:	lahf   
  410979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41097a:	loope  0x410919
  41097c:	jo     0x41091b
  41097e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41097f:	pop    edx
  410980:	mov    ebp,0xd4dcc434
  410986:	nop
  410987:	repnz push ecx
  410989:	daa    
  41098a:	lods   eax,DWORD PTR ds:[esi]
  41098b:	(bad)  
  41098c:	fldcw  WORD PTR [edx-0x1d]
  41098f:	inc    esi
  410990:	mov    esp,0x707957de
  410995:	imul   eax,DWORD PTR [esi+0x6b],0x53
  410999:	call   0x62b7:0xce149641
  4109a0:	or     al,BYTE PTR [edi-0x12282f28]
  4109a6:	icebp  
  4109a7:	daa    
  4109a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a9:	pop    ecx
  4109aa:	test   eax,0x2bb6645c
  4109af:	pop    edx
  4109b0:	in     al,dx
  4109b1:	fist   DWORD PTR [edi+0x56]
  4109b4:	mov    esi,0xbb9efb97
  4109b9:	add    ch,BYTE PTR cs:[ecx+0x48]
  4109bd:	mov    ds:0xb70569eb,eax
  4109c2:	in     eax,0x4a
  4109c4:	pop    ds
  4109c5:	sub    eax,0xb884a5
  4109ca:	lds    ebx,FWORD PTR ds:[edi-0x5b]
  4109ce:	sbb    al,0xd1
  4109d0:	adc    al,0x1d
  4109d2:	cli    
  4109d3:	test   BYTE PTR [ecx+0x597061a6],bh
  4109d9:	les    esp,FWORD PTR [ecx]
  4109db:	mov    ah,0x10
  4109dd:	xchg   esp,eax
  4109de:	lock cmp al,ch
  4109e1:	add    edx,DWORD PTR [ebx+0x65]
  4109e4:	and    BYTE PTR [eax],0x66
  4109e7:	mov    bh,0x5a
  4109e9:	ror    bl,0x38
  4109ec:	mov    bl,0xd1
  4109ee:	retf   
  4109ef:	nop
  4109f0:	retf   
  4109f1:	mov    edi,0xef8175f8
  4109f6:	cmp    cl,BYTE PTR ds:[ebx+eax*4]
  4109fa:	mov    eax,0x26e2538a
  4109ff:	inc    esi
  410a00:	jns    0x410a30
  410a02:	fsubr  DWORD PTR [ebx+0x7dc8c8d3]
  410a08:	push   esp
  410a09:	arpl   WORD PTR [ebx-0x49],bx
  410a0c:	push   ecx
  410a0d:	stos   BYTE PTR es:[edi],al
  410a0e:	jae    0x410a14
  410a10:	push   ebp
  410a11:	or     esi,DWORD PTR [esi]
  410a13:	lahf   
  410a14:	and    eax,0x3802b7e9
  410a19:	mov    al,0x9d
  410a1b:	mov    dh,0x54
  410a1d:	xor    cl,BYTE PTR [edx]
  410a1f:	jo     0x4109a2
  410a21:	xchg   ecx,eax
  410a22:	jmp    0x4109bf
  410a24:	mov    ds:0xc671da17,al
  410a29:	xchg   esp,eax
  410a2a:	retf   0x6bb
  410a2d:	aaa    
  410a2e:	(bad)  
  410a2f:	pop    esp
  410a30:	pusha  
  410a31:	jecxz  0x410a6a
  410a33:	div    BYTE PTR [edi-0x75]
  410a36:	push   cs
  410a37:	or     BYTE PTR [eax-0x36],ch
  410a3a:	add    dl,cl
  410a3c:	mov    dh,0xfd
  410a3e:	call   0x6d52c732
  410a43:	sub    BYTE PTR [ebx+edi*2],ch
  410a46:	(bad)  
  410a47:	addr16 jbe 0x410a96
  410a4a:	sti    
  410a4b:	adc    DWORD PTR es:[ecx-0x71ed4f31],edi
  410a52:	mov    al,ds:0x9ece618a
  410a57:	jmp    0x410a03
  410a59:	dec    edx
  410a5a:	xchg   ebx,eax
  410a5b:	ds icebp 
  410a5d:	fisttp WORD PTR [edi+0x5813a3b4]
  410a63:	rol    BYTE PTR [ebx+ebp*1-0x15],0x6e
  410a68:	js     0x410a87
  410a6a:	xchg   ah,bh
  410a6c:	inc    ecx
  410a6d:	cmc    
  410a6e:	or     dl,cl
  410a70:	sbb    edi,ebp
  410a72:	mov    eax,ds:0xf76df350
  410a77:	bound  edi,QWORD PTR gs:[edi-0x3f]
  410a7b:	push   ecx
  410a7c:	push   0x42
  410a7e:	push   es
  410a7f:	mov    WORD PTR [ebx-0x1e],fs
  410a82:	sbb    eax,0xb2ba8dd1
  410a87:	mov    cs,WORD PTR [ebx+0x4b]
  410a8a:	adc    al,BYTE PTR [eax]
  410a8c:	push   edi
  410a8d:	out    0xba,eax
  410a8f:	pop    edi
  410a90:	pop    eax
  410a91:	adc    eax,DWORD PTR [esi]
  410a93:	push   eax
  410a94:	or     eax,edx
  410a96:	int3   
  410a97:	or     esi,ebp
  410a99:	out    0xb8,eax
  410a9b:	sbb    al,0x2f
  410a9d:	or     al,0xd2
  410a9f:	(bad)  [edi]
  410aa1:	ja     0x410a8a
  410aa3:	out    dx,eax
  410aa4:	pop    ecx
  410aa5:	pop    ss
  410aa6:	cmp    al,0xcf
  410aa8:	push   0x2d
  410aaa:	ins    BYTE PTR es:[edi],dx
  410aab:	push   ebx
  410aac:	jnp    0x410ab0
  410aae:	mov    al,0xe6
  410ab0:	out    0x1e,al
  410ab2:	xchg   ecx,eax
  410ab3:	dec    edx
  410ab4:	sub    al,0x9b
  410ab6:	sbb    DWORD PTR [ecx+ebx*8+0x72],0xe5a95b3c
  410abe:	test   al,0x4a
  410ac0:	call   FWORD PTR [eax+esi*2-0x61]
  410ac4:	imul   esp,edx,0x1ad8c14b
  410aca:	push   ecx
  410acb:	mov    eax,0xbbc20170
  410ad0:	outs   dx,BYTE PTR ds:[esi]
  410ad1:	inc    edx
  410ad2:	push   0x88a0f601
  410ad7:	push   ebp
  410ad8:	test   BYTE PTR [ebx+0x540615f7],bl
  410ade:	mov    dl,0x88
  410ae0:	lock rol DWORD PTR [eax-0x27],1
  410ae4:	xor    BYTE PTR [esi-0x1d],al
  410ae7:	addr16 push edx
  410ae9:	out    0xda,al
  410aeb:	mov    dh,cl
  410aed:	scas   al,BYTE PTR es:[edi]
  410aee:	inc    ebx
  410aef:	cmp    eax,0xa0c47cfb
  410af4:	ret    0x1a88
  410af7:	into   
  410af8:	mov    ch,0xac
  410afa:	fistp  QWORD PTR [eiz*8-0x329306ec]
  410b01:	or     ebx,DWORD PTR [ecx-0x2c3d595b]
  410b07:	sub    eax,0x69116073
  410b0c:	jecxz  0x410ae7
  410b0e:	pop    es
  410b0f:	push   ds
  410b10:	adc    edx,edx
  410b12:	ret    
  410b13:	ja     0x410a95
  410b15:	jge    0x410a9c
  410b17:	ret    
  410b18:	sub    al,0x79
  410b1a:	stos   DWORD PTR es:[edi],eax
  410b1b:	dec    edi
  410b1c:	push   esi
  410b1d:	out    dx,eax
  410b1e:	lods   eax,DWORD PTR ds:[esi]
  410b1f:	in     al,dx
  410b20:	cmp    cl,BYTE PTR gs:[edi-0x17]
  410b24:	iret   
  410b25:	xchg   ebp,eax
  410b26:	add    BYTE PTR [esi],ah
  410b28:	stc    
  410b29:	inc    eax
  410b2a:	dec    esp
  410b2b:	cmp    DWORD PTR [esi+0x6ff205fa],0xffffffb5
  410b32:	sub    dh,BYTE PTR [ecx]
  410b34:	inc    edx
  410b35:	xchg   ebx,eax
  410b36:	add    cl,bl
  410b38:	(bad)  
  410b39:	shl    BYTE PTR [esp+esi*8-0x79],1
  410b3d:	clc    
  410b3e:	fst    DWORD PTR [edi+0x50cf4f85]
  410b44:	dec    eax
  410b45:	cld    
  410b46:	fstp   TBYTE PTR ds:0x19fd484d
  410b4c:	and    dl,al
  410b4e:	jmp    0x410bcb
  410b50:	or     eax,0x998e826
  410b55:	push   ecx
  410b56:	(bad)
  410b59:	and    DWORD PTR [eax-0x2e],eax
  410b5c:	push   esp
  410b5d:	ja     0x410bd1
  410b5f:	add    eax,0x7fbf3b99
  410b64:	popf   
  410b65:	dec    esp
  410b66:	pop    eax
  410b67:	pushf  
  410b68:	sbb    al,0x0
  410b6a:	cmc    
  410b6b:	and    dh,BYTE PTR [eax+0x72f188ff]
  410b71:	pushf  
  410b72:	mov    ebx,0x19d35803
  410b77:	outs   dx,DWORD PTR ds:[esi]
  410b78:	nop
  410b79:	mov    gs,WORD PTR [ecx+eiz*4]
  410b7c:	cld    
  410b7d:	rcl    BYTE PTR [ebx-0x5ff69072],0xd
  410b84:	jge    0x410b61
  410b86:	sbb    al,0x76
  410b88:	mov    ecx,0x4629d8fe
  410b8d:	xchg   DWORD PTR [edx-0x55],ebp
  410b90:	pop    esi
  410b91:	lahf   
  410b92:	dec    edx
  410b93:	cld    
  410b94:	(bad)  
  410b96:	stc    
  410b97:	adc    eax,0x6c62334
  410b9c:	push   esp
  410b9d:	or     BYTE PTR [edx+0x41f062e0],al
  410ba3:	cs xor esi,ebx
  410ba6:	push   0x31
  410ba8:	jge    0x410bdf
  410baa:	cmp    al,0xea
  410bac:	(bad)  
  410bad:	adc    BYTE PTR [esi],cl
  410baf:	push   ecx
  410bb0:	xchg   esi,eax
  410bb1:	(bad)  
  410bb2:	sub    al,BYTE PTR [esi]
  410bb4:	cmp    eax,DWORD PTR [edx+0x59c9f194]
  410bba:	xchg   DWORD PTR [esi+0x4d96821a],ebx
  410bc0:	aaa    
  410bc1:	jae    0x410c07
  410bc3:	dec    ebx
  410bc4:	cmp    BYTE PTR [ecx-0xf01e53c],0x1e
  410bcb:	jns    0x410c44
  410bcd:	std    
  410bce:	push   0xb66f5b0e
  410bd3:	mov    ecx,0x95a12792
  410bd8:	sti    
  410bd9:	jmp    0x410c2e
  410bdb:	and    DWORD PTR [edi-0x32832fcc],esp
  410be1:	aaa    
  410be2:	sbb    al,0x2e
  410be4:	push   ecx
  410be5:	xchg   edi,eax
  410be6:	fstp   TBYTE PTR [esi]
  410be8:	and    ebp,eax
  410bea:	pop    ds
  410beb:	jge    0x410bf3
  410bed:	pop    ebp
  410bee:	cmp    al,0xec
  410bf0:	mov    ds:0x373120c0,al
  410bf5:	pop    eax
  410bf6:	(bad)  
  410bf7:	popa   
  410bf8:	es jns 0x410be3
  410bfb:	shl    BYTE PTR [eax+ebp*8],0xa4
  410bff:	adc    dl,bh
  410c01:	push   ds
  410c02:	mov    ch,0x5b
  410c04:	and    DWORD PTR fs:[edi+0x60],edi
  410c08:	sysexit 
  410c0a:	xchg   DWORD PTR [edi+0x5fa8b63f],eax
  410c10:	inc    ebp
  410c11:	dec    esi
  410c12:	pop    edi
  410c13:	inc    eax
  410c14:	pop    ebp
  410c15:	clc    
  410c16:	mov    al,ds:0x31b95ba0
  410c1b:	xchg   ecx,eax
  410c1c:	test   dh,dh
  410c1e:	pushf  
  410c1f:	jmp    0x2188:0x91f5cbf8
  410c26:	push   esp
  410c27:	jne    0x410ca8
  410c29:	mov    ecx,0x61d86f6a
  410c2e:	and    eax,0x8e6f6708
  410c33:	and    DWORD PTR [eax+0x55],edi
  410c36:	and    DWORD PTR [ebx+0xb],ebx
  410c39:	loopne 0x410bbf
  410c3b:	dec    ecx
  410c3c:	sub    DWORD PTR [esi+0x35],0x3
  410c40:	lahf   
  410c41:	xor    al,0xbd
  410c43:	push   edi
  410c44:	push   eax
  410c45:	pushf  
  410c46:	or     BYTE PTR [edx],0xe2
  410c49:	xor    ecx,edx
  410c4b:	mov    bl,0x10
  410c4d:	pop    eax
  410c4e:	sbb    ebp,ebp
  410c50:	cli    
  410c51:	fcomp  st(2)
  410c53:	adc    al,0x49
  410c55:	add    eax,0x51e1f1ee
  410c5a:	sbb    dl,BYTE PTR [esi+edx*2-0x48]
  410c5e:	xchg   ecx,ecx
  410c60:	repz mov ecx,0x5c6ef55b
  410c66:	push   cs
  410c67:	shl    DWORD PTR [ebx],1
  410c69:	sar    DWORD PTR [esi],0x2e
  410c6c:	cld    
  410c6d:	js     0x410c7b
  410c6f:	lods   al,BYTE PTR ds:[esi]
  410c70:	sub    BYTE PTR [esi-0x28],dl
  410c73:	sahf   
  410c74:	in     eax,dx
  410c75:	mov    eax,0x33b8c9ce
  410c7a:	or     DWORD PTR [edi+0x34],edi
  410c7d:	pop    ecx
  410c7e:	mov    ah,0x57
  410c80:	ficom  DWORD PTR ds:0xacd78af2
  410c86:	je     0x410cb8
  410c88:	repz mov ecx,0x8eab015
  410c8e:	mov    esi,0x46bffa25
  410c93:	jmp    0x410c53
  410c95:	lods   al,BYTE PTR ds:[esi]
  410c96:	xor    BYTE PTR [eax],dh
  410c98:	push   DWORD PTR [edi+0xbd0add3]
  410c9e:	test   BYTE PTR [ebp+edi*1-0x7d],al
  410ca2:	or     al,0x2a
  410ca4:	pop    eax
  410ca5:	fwait
  410ca6:	call   0xae405daa
  410cab:	push   ds
  410cac:	pop    ebp
  410cad:	test   al,0x45
  410caf:	and    DWORD PTR [edx-0x13986d97],ebx
  410cb5:	leave  
  410cb6:	loope  0x410cef
  410cb8:	xchg   ebp,eax
  410cb9:	push   cs
  410cba:	pusha  
  410cbb:	out    dx,eax
  410cbc:	(bad)  
  410cbd:	jmp    0x6bd1f75a
  410cc2:	mov    ds:0x17796e72,eax
  410cc7:	jl     0x410d2c
  410cc9:	jmp    0x2696:0x9f815a1b
  410cd0:	call   0x97bb:0xcd454058
  410cd7:	fcomp  QWORD PTR [ebx]
  410cd9:	mov    esi,0xfc754e6
  410cde:	mov    ebp,ecx
  410ce0:	sub    BYTE PTR [edi],ch
  410ce2:	xchg   ecx,ecx
  410ce4:	popa   
  410ce5:	mov    esi,DWORD PTR [eax]
  410ce7:	cmp    eax,DWORD PTR ds:0xd4f3953f
  410ced:	xchg   ebp,eax
  410cee:	out    0x8e,al
  410cf0:	mov    ch,0x63
  410cf2:	(bad)  
  410cf3:	cmp    ch,BYTE PTR [edx+ecx*4+0x32ec9bcb]
  410cfa:	clc    
  410cfb:	mov    eax,0x73e033a1
  410d00:	sub    al,0x94
  410d02:	ret    0x941a
  410d05:	mov    ds:0xfbe9d7b6,eax
  410d0a:	mov    bh,0x4
  410d0c:	fwait
  410d0d:	push   edi
  410d0e:	sub    BYTE PTR [ebp+0x69eaf88f],cl
  410d14:	mov    dh,0xdf
  410d16:	sub    DWORD PTR [eax],ecx
  410d18:	aaa    
  410d19:	inc    esp
  410d1a:	sub    al,0x6c
  410d1c:	jae    0x410d1a
  410d1e:	test   eax,0x8eb00ce1
  410d23:	add    esp,ebp
  410d25:	shl    DWORD PTR [esi+0x45],1
  410d28:	(bad)  
  410d29:	lea    edi,[ecx-0x59]
  410d2c:	xchg   ebp,eax
  410d2d:	ds nop
  410d2f:	xchg   esp,eax
  410d30:	cld    
  410d31:	pop    esp
  410d32:	fdiv   st(6),st
  410d34:	lods   al,BYTE PTR ds:[esi]
  410d35:	jb     0x410d22
  410d37:	mov    ebp,0xd7a4b383
  410d3c:	retf   
  410d3d:	inc    eax
  410d3e:	mov    ecx,0x24cd3993
  410d43:	dec    edx
  410d44:	lds    eax,FWORD PTR [eax+0x42]
  410d47:	lea    edx,[edx-0x49]
  410d4a:	mov    ah,0xce
  410d4c:	xlat   BYTE PTR ds:[ebx]
  410d4d:	mov    dl,0x88
  410d4f:	pop    DWORD PTR [esi]
  410d51:	xlat   BYTE PTR ds:[ebx]
  410d52:	mov    edx,ebp
  410d54:	pop    ebx
  410d55:	int    0xca
  410d57:	out    0x29,al
  410d59:	xor    al,0xc3
  410d5b:	mov    bl,0xf1
  410d5d:	add    eax,0xbcf7d0db
  410d62:	in     al,dx
  410d63:	outs   dx,DWORD PTR ds:[esi]
  410d64:	aam    0x4c
  410d66:	aaa    
  410d67:	xchg   ah,dl
  410d69:	(bad)
  410d6c:	fisubr DWORD PTR [esi+ebp*8]
  410d6f:	xor    BYTE PTR [edx],cl
  410d71:	(bad)  
  410d73:	pop    ebp
  410d74:	mov    ebx,0xef8e568b
  410d79:	ret    0x9c59
  410d7c:	sub    eax,DWORD PTR [edx+0x4b]
  410d7f:	mov    dh,0xdf
  410d81:	cwde   
  410d82:	(bad)  
  410d83:	jmp    0x3f67c4ff
  410d88:	shr    ebx,cl
  410d8a:	xor    DWORD PTR [edi+eax*4],0xd2a74585
  410d91:	aaa    
  410d92:	and    ecx,esi
  410d94:	xor    edx,DWORD PTR [ebx-0xc]
  410d97:	stos   BYTE PTR es:[edi],al
  410d98:	sbb    al,0xdd
  410d9a:	and    bh,BYTE PTR [ecx]
  410d9c:	or     bh,dl
  410d9e:	lods   eax,DWORD PTR ds:[esi]
  410d9f:	dec    esi
  410da0:	sub    eax,0x2cde1afc
  410da5:	mov    ds:0xd5832e04,al
  410daa:	stos   BYTE PTR es:[edi],al
  410dab:	out    0xea,al
  410dad:	push   es
  410dae:	cmc    
  410daf:	jns    0x410e07
  410db1:	stos   BYTE PTR es:[edi],al
  410db2:	fmul   QWORD PTR [esi-0x41]
  410db5:	scas   al,BYTE PTR es:[edi]
  410db6:	loope  0x410df9
  410db8:	les    esi,FWORD PTR [edx+0x2]
  410dbb:	or     al,0xa1
  410dbd:	cmp    BYTE PTR [ebx+0x3f22b16f],dl
  410dc3:	fild   QWORD PTR [edi+eiz*2+0xd249cf1]
  410dca:	xor    ah,BYTE PTR [esi-0x28]
  410dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dce:	xchg   edx,eax
  410dcf:	mov    ds:0x9ab83e9,al
  410dd4:	sahf   
  410dd5:	and    edi,DWORD PTR [ecx+0x1e]
  410dd8:	(bad)  
  410dda:	pushf  
  410ddb:	ret    
  410ddc:	cmp    eax,0x962e5417
  410de1:	sbb    BYTE PTR [ecx-0x49],bl
  410de4:	xor    BYTE PTR [esi-0x1de2bd01],ah
  410dea:	cmp    BYTE PTR [edx],al
  410dec:	or     bl,bl
  410dee:	push   edi
  410def:	mov    bh,0xdc
  410df1:	xchg   ecx,eax
  410df2:	or     BYTE PTR [edi],ch
  410df4:	mov    eax,0x7c807a8a
  410df9:	cmc    
  410dfa:	ret    
  410dfb:	cmp    BYTE PTR [eax-0x17],al
  410dfe:	popf   
  410dff:	bndstx [esi-0x4b3e6c7b],(bad)
  410e06:	adc    ch,bh
  410e08:	je     0x410dc6
  410e0a:	gs push ds
  410e0c:	cmc    
  410e0d:	nop
  410e0e:	sbb    edx,DWORD PTR [ebx+0x3f34ddfe]
  410e14:	popa   
  410e15:	and    BYTE PTR [ecx],al
  410e17:	inc    ebp
  410e18:	sub    BYTE PTR [eax],0x55
  410e1b:	sbb    BYTE PTR [esi],ah
  410e1d:	fwait
  410e1e:	add    ecx,DWORD PTR gs:[eax]
  410e21:	inc    esi
  410e22:	cmp    eax,0xf760804f
  410e27:	lods   al,BYTE PTR ds:[esi]
  410e28:	(bad)  
  410e29:	inc    dx
  410e2b:	add    ah,BYTE PTR [eax-0x52f04ad2]
  410e31:	fs test bh,bl
  410e34:	jno    0x410e3f
  410e36:	and    al,0x65
  410e38:	ror    DWORD PTR [esi],cl
  410e3a:	neg    BYTE PTR [ecx+0x70]
  410e3d:	push   esp
  410e3e:	sar    ebx,1
  410e40:	cwde   
  410e41:	stc    
  410e42:	es inc esp
  410e44:	xchg   ebp,eax
  410e45:	dec    ecx
  410e46:	xchg   edi,eax
  410e47:	shl    ebp,cl
  410e49:	(bad)
  410e4c:	test   BYTE PTR [ecx+0x27f5a6f4],ah
  410e52:	pop    ebp
  410e53:	jle    0x410e31
  410e55:	xchg   ecx,eax
  410e56:	mov    ecx,0x3ac5a7e2
  410e5b:	mov    ah,0x4c
  410e5d:	pop    edi
  410e5e:	xchg   edx,eax
  410e5f:	or     cl,bh
  410e61:	iret   
  410e62:	pop    esp
  410e63:	pushf  
  410e64:	and    al,0x85
  410e66:	and    ah,BYTE PTR ds:[ebp-0x16]
  410e6a:	xor    eax,0x986e93ba
  410e6f:	les    ecx,FWORD PTR [ecx-0x50]
  410e72:	in     eax,0xda
  410e74:	push   ss
  410e75:	out    dx,al
  410e76:	lahf   
  410e77:	mov    dl,0x6a
  410e79:	jmp    0x410ef1
  410e7b:	stc    
  410e7c:	and    BYTE PTR [eax],bh
  410e7e:	dec    ebp
  410e7f:	icebp  
  410e80:	ret    0xcbb3
  410e83:	daa    
  410e84:	(bad)  
  410e85:	pop    esi
  410e86:	lods   eax,DWORD PTR ds:[esi]
  410e87:	push   ebx
  410e88:	sub    ebp,DWORD PTR [esi+0x41]
  410e8b:	sar    esp,cl
  410e8d:	xchg   edx,eax
  410e8e:	stc    
  410e8f:	sar    BYTE PTR [edx],1
  410e91:	mov    al,ds:0x4129b896
  410e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e97:	icebp  
  410e98:	adc    ah,cl
  410e9a:	pop    esp
  410e9b:	jle    0x410ed8
  410e9d:	and    eax,0x9e971cf9
  410ea2:	out    dx,al
  410ea3:	inc    edi
  410ea4:	push   edi
  410ea5:	or     ebp,DWORD PTR [ecx]
  410ea7:	fidivr WORD PTR [esi]
  410ea9:	lds    edi,FWORD PTR ds:0xad091b15
  410eaf:	(bad)  [esi]
  410eb1:	loopne 0x410e68
  410eb3:	pop    edx
  410eb4:	cmp    BYTE PTR gs:[ebp-0x339edd14],ah
  410ebb:	les    esp,FWORD PTR [esi-0x1f]
  410ebe:	cs adc al,0xc5
  410ec1:	inc    esp
  410ec2:	push   0xfffffffa
  410ec4:	mov    eax,0x3c95a067
  410ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eca:	ss dec eax
  410ecc:	rcr    DWORD PTR [esi+esi*4-0x4e74aa98],1
  410ed3:	cmp    eax,0xbc9960f3
  410ed8:	cdq    
  410ed9:	(bad)  
  410eda:	lods   eax,DWORD PTR ds:[esi]
  410edb:	mov    al,0x4e
  410edd:	mov    DWORD PTR [ebp+0x7c52798e],ebx
  410ee3:	data16 adc BYTE PTR [edi-0x7b],al
  410ee7:	xchg   edi,eax
  410ee8:	pminsw mm2,QWORD PTR [ecx+eiz*2-0x7dcea64f]
  410ef0:	add    dl,bl
  410ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef3:	test   al,0xfd
  410ef5:	pop    edx
  410ef6:	das    
  410ef7:	sbb    DWORD PTR [eax],edi
  410ef9:	jp     0x410ec8
  410efb:	inc    ebx
  410efc:	hlt    
  410efd:	add    al,bh
  410eff:	sahf   
  410f00:	mov    ebx,0x2a3a5917
  410f05:	push   es
  410f06:	push   esp
  410f07:	push   0x1a
  410f09:	add    BYTE PTR ds:0x79b0e8b1,ch
  410f0f:	pop    ebx
  410f10:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410f12:	xchg   DWORD PTR [edi],edx
  410f14:	cmc    
  410f15:	retf   
  410f16:	sub    DWORD PTR [ecx-0xfe6f83f],0x4e5fce59
  410f20:	daa    
  410f21:	mov    esp,0x82434868
  410f26:	mov    ecx,edx
  410f28:	xchg   DWORD PTR [esp+ebx*8-0x35],esp
  410f2c:	ret    0x3cbe
  410f2f:	inc    ebx
  410f30:	xor    al,BYTE PTR [ecx+0x2b]
  410f33:	inc    esi
  410f34:	adc    al,0x7
  410f36:	mov    cl,0x76
  410f38:	sub    esi,esp
  410f3a:	pop    edx
  410f3b:	pop    es
  410f3c:	test   eax,0x5dd91c8
  410f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f42:	ins    BYTE PTR es:[edi],dx
  410f43:	mov    bl,0xe2
  410f45:	jae    0x410ef2
  410f47:	dec    ebp
  410f48:	fisubr DWORD PTR [eax+ecx*2]
  410f4b:	cmp    ah,BYTE PTR [ebp-0x4b]
  410f4e:	pop    ebx
  410f4f:	inc    esi
  410f50:	div    DWORD PTR [ebp-0x6a]
  410f53:	pop    ecx
  410f54:	(bad)  
  410f55:	push   edi
  410f56:	lahf   
  410f57:	push   edx
  410f58:	nop
  410f59:	hlt    
  410f5a:	cs and eax,0xb40eb4ed
  410f60:	inc    esi
  410f61:	aad    0x6a
  410f63:	push   cs
  410f64:	add    al,0x8a
  410f66:	out    dx,al
  410f67:	std    
  410f68:	mov    bh,0xe4
  410f6a:	in     eax,0x17
  410f6c:	retf   
  410f6d:	sbb    bl,ch
  410f6f:	lahf   
  410f70:	mov    dh,0xfd
  410f72:	push   esp
  410f73:	or     edx,esi
  410f75:	fisub  DWORD PTR [eax+0x25]
  410f78:	jmp    0xdc4:0xb614ee71
  410f7f:	sti    
  410f80:	sbb    al,0x8b
  410f82:	and    esp,DWORD PTR [ecx-0x18e64a41]
  410f88:	cmp    ecx,DWORD PTR [ecx-0x12a2783b]
  410f8e:	ret    0xed1f
  410f91:	sub    bh,BYTE PTR [ebx]
  410f93:	mov    BYTE PTR [ebx],cl
  410f95:	mov    ecx,fs
  410f97:	mov    cl,BYTE PTR [edi]
  410f99:	sub    DWORD PTR [esi+0xb],esp
  410f9c:	aad    0x76
  410f9e:	retf   
  410f9f:	push   ss
  410fa0:	sub    eax,0x41a88834
  410fa5:	repz jp 0x410fd7
  410fa8:	ins    BYTE PTR es:[edi],dx
  410fa9:	push   ebx
  410faa:	push   edi
  410fab:	mov    ds:0xa84163dd,eax
  410fb1:	stc    
  410fb2:	outs   dx,BYTE PTR ds:[esi]
  410fb3:	lahf   
  410fb4:	push   edx
  410fb5:	das    
  410fb6:	pop    ecx
  410fb7:	cmp    eax,0xc1616e9f
  410fbc:	ja     0x410f3e
  410fbe:	adc    al,0xde
  410fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc1:	frstor [edx]
  410fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fc4:	cli    
  410fc5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410fc7:	xor    bh,BYTE PTR [eax-0x643be619]
  410fcd:	pusha  
  410fce:	jg     0x410fbc
  410fd0:	pop    edx
  410fd1:	add    BYTE PTR [edi],0x34
  410fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd5:	ja     0x410f74
  410fd7:	fldenv [ecx]
  410fd9:	mov    dl,0x76
  410fdb:	js     0x410fa2
  410fdd:	sub    DWORD PTR ds:0x92ad399c,ebx
  410fe3:	hlt    
  410fe4:	outs   dx,DWORD PTR ds:[esi]
  410fe5:	aas    
  410fe6:	call   0x56ff:0x490d94d8
  410fed:	iret   
  410fee:	cmp    esp,ebp
  410ff0:	aas    
  410ff1:	lea    eax,[ecx-0x1a]
  410ff4:	xchg   esp,eax
  410ff5:	scas   eax,DWORD PTR es:[edi]
  410ff6:	dec    edx
  410ff7:	aam    0x18
  410ff9:	mov    ebx,0x3e4eee5e
  410ffe:	sahf   
  410fff:	icebp  
  411000:	xchg   esi,eax
  411001:	popa   
  411002:	jl     0x410fc6
  411004:	dec    ebx
  411005:	outs   dx,DWORD PTR ds:[esi]
  411006:	jae    0x41104b
  411008:	adc    dh,ch
  41100a:	es cmp ah,bl
  41100d:	adc    ecx,edx
  41100f:	jno    0x411067
  411011:	fs mov edx,0x639fa41b
  411017:	add    eax,0xf82e725f
  41101c:	mov    dh,0x80
  41101e:	ret    0x54f6
  411021:	jmp    0xc4dc:0xbfa137dd
  411028:	add    ebp,esp
  41102a:	js     0x410fe6
  41102c:	sbb    BYTE PTR [esi-0x51],0x38
  411030:	test   al,0x18
  411032:	gs pop esp
  411034:	cmp    DWORD PTR [ecx+0x57356f3a],esp
  41103a:	mov    esi,0x7c09779a
  41103f:	sub    DWORD PTR [esi],edx
  411041:	neg    BYTE PTR [ebx+edx*2+0x4a060be9]
  411048:	shl    BYTE PTR [edi],0x73
  41104b:	leave  
  41104c:	mov    al,cs:0x7260aaa6
  411052:	add    BYTE PTR [edx-0x62d6ead0],bl
  411058:	(bad)  
  411059:	out    dx,eax
  41105a:	in     eax,dx
  41105b:	jl     0x410ff4
  41105d:	jmp    0x85ed1d2d
  411062:	imul   edi,DWORD PTR [edx],0x3e
  411065:	ret    0x6ac5
  411068:	fcom   QWORD PTR [edi+0x54f413a8]
  41106e:	and    BYTE PTR [eax+0x61b5a66e],ah
  411074:	in     al,dx
  411075:	frstor [ebx-0x7e]
  411078:	cmp    eax,0x57558a55
  41107d:	pop    esi
  41107e:	repz pop ebx
  411080:	lock pop eax
  411082:	sbb    eax,0xb8e0738
  411087:	pop    ebx
  411088:	pop    edi
  411089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41108a:	stos   BYTE PTR es:[edi],al
  41108b:	jmp    0x5d8de5be
  411090:	scas   eax,DWORD PTR es:[edi]
  411091:	popf   
  411092:	pushf  
  411093:	fdivr  QWORD PTR [eax-0x6a8bb2e1]
  411099:	iret   
  41109a:	mov    dl,0xd6
  41109d:	sti    
  41109e:	popf   
  41109f:	xor    dh,BYTE PTR [edi-0x15332ef]
  4110a5:	push   esp
  4110a6:	or     al,al
  4110a8:	xchg   BYTE PTR [edi-0x374d4047],cl
  4110ae:	xor    esp,DWORD PTR [edi]
  4110b0:	xchg   esi,eax
  4110b1:	sbb    edx,DWORD PTR [ebp+edi*2-0x4c]
  4110b5:	out    dx,al
  4110b6:	pop    es
  4110b7:	ja     0x411075
  4110b9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110bb:	sbb    DWORD PTR ds:[esi-0x9],edx
  4110bf:	pop    ebx
  4110c0:	aas    
  4110c1:	inc    edx
  4110c2:	pushf  
  4110c3:	adc    ah,BYTE PTR [ecx+eax*8-0x44]
  4110c7:	fld    st(1)
  4110c9:	mov    esp,0x8d5fe0b7
  4110ce:	and    DWORD PTR [ebx-0x35abde8f],ecx
  4110d4:	outs   dx,BYTE PTR ds:[esi]
  4110d5:	sbb    BYTE PTR [edx],dl
  4110d7:	mov    ebx,DWORD PTR [edx+edx*4]
  4110da:	in     eax,0xc1
  4110dc:	sbb    al,0x1c
  4110de:	ds xchg edi,eax
  4110e0:	jbe    0x41113c
  4110e2:	push   ebx
  4110e3:	div    DWORD PTR [ecx-0xb68efb3]
  4110e9:	(bad)  
  4110ea:	cli    
  4110eb:	jge    0x4110ca
  4110ed:	sub    eax,0xf6d8bb45
  4110f2:	sub    cl,BYTE PTR [esi]
  4110f4:	lock in eax,0x51
  4110f7:	push   cs
  4110f8:	dec    eax
  4110f9:	cs mov bl,0xd7
  4110fc:	and    ecx,DWORD PTR ds:0xcbeb3865
  411102:	loopne 0x411123
  411104:	(bad)  
  411105:	mov    ch,0x61
  411107:	jmp    0x4110f2
  411109:	jecxz  0x4110e2
  41110b:	loop   0x411096
  41110d:	fld    QWORD PTR [edx+esi*2+0x65]
  411111:	jo     0x41117b
  411113:	dec    DWORD PTR [ebx]
  411115:	jp     0x411139
  411117:	inc    eax
  411118:	inc    esi
  411119:	loop   0x411130
  41111b:	cmp    al,BYTE PTR [esi+0x36]
  41111e:	lods   al,BYTE PTR ds:[esi]
  41111f:	push   esi
  411120:	ins    BYTE PTR es:[edi],dx
  411121:	in     eax,0xa1
  411123:	sbb    eax,0xb995eb15
  411128:	hlt    
  411129:	repz aaa 
  41112b:	and    dh,bh
  41112d:	adc    cl,dh
  41112f:	rol    BYTE PTR [ebx],cl
  411131:	sub    al,BYTE PTR [ebx-0x26]
  411134:	stos   DWORD PTR es:[edi],eax
  411135:	sbb    ebx,ebx
  411137:	out    dx,al
  411138:	fcmovb st,st(5)
  41113a:	cmc    
  41113b:	push   cs
  41113c:	out    0x96,eax
  41113e:	cmp    eax,DWORD PTR [edi+0x31f4b15d]
  411144:	bound  edi,QWORD PTR [edi-0x30]
  411147:	into   
  411148:	xor    edx,DWORD PTR [esi]
  41114a:	mov    ecx,0xf49c4b60
  41114f:	xor    al,0xac
  411151:	call   0x3fc264a7
  411156:	and    dl,BYTE PTR [ebx-0x6c]
  411159:	pop    edi
  41115a:	xor    DWORD PTR ds:0x227959c1,ecx
  411160:	das    
  411161:	shl    DWORD PTR [ebp+eax*2+0x4c],0x74
  411166:	jo     0x411147
  411168:	cmp    sp,WORD PTR [edx-0x7a]
  41116c:	dec    ecx
  41116d:	mov    ebx,0xf54e8831
  411172:	daa    
  411173:	mov    dh,0x28
  411175:	sub    eax,DWORD PTR [ebx+0x4fe3bb95]
  41117b:	xchg   edx,ebp
  41117d:	js     0x4111d2
  41117f:	xchg   esp,eax
  411180:	bound  ebx,QWORD PTR [ebx+0x52e80baf]
  411186:	call   0xbac5:0xd4629436
  41118d:	popf   
  41118e:	addr16 pop edi
  411190:	enter  0x6865,0x38
  411194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411195:	gs push ebp
  411197:	retf   
  411198:	mov    ebx,0x24df7a93
  41119d:	jg     0x411169
  41119f:	mov    bl,0x0
  4111a1:	inc    ebp
  4111a2:	repnz inc edx
  4111a4:	pop    esp
  4111a5:	mov    eax,0x7111b3f4
  4111aa:	or     al,0x6c
  4111ac:	mov    dh,0x4f
  4111ae:	es pop ss
  4111b0:	loop   0x4111a9
  4111b2:	push   ss
  4111b3:	mov    eax,eax
  4111b5:	cmp    BYTE PTR [edx+eax*8-0x27aee80f],bh
  4111bc:	push   edx
  4111bd:	pushf  
  4111be:	in     al,0xc6
  4111c0:	cmp    BYTE PTR [edi+ebx*4+0x0],bl
  4111c4:	jmp    0x35f5:0x4064ffa3
  4111cb:	and    eax,0x71ad3052
  4111d0:	pop    esp
  4111d1:	mov    BYTE PTR [edi-0x76873be4],cl
  4111d7:	mov    dh,0x35
  4111d9:	in     eax,dx
  4111da:	mov    ebx,0x7025e768
  4111df:	add    DWORD PTR [ecx-0x7a],0x9
  4111e3:	sub    esp,edi
  4111e5:	fwait
  4111e6:	ds lahf 
  4111e8:	out    0x15,al
  4111ea:	out    dx,eax
  4111eb:	inc    ecx
  4111ec:	mov    BYTE PTR [esi+0x2efb5b0c],bl
  4111f2:	push   esp
  4111f3:	jle    0x41126e
  4111f5:	fsubrp st(4),st
  4111f7:	jb     0x41126f
  4111f9:	ds call 0x7420f7c6
  4111ff:	jg     0x4111fe
  411201:	push   edi
  411202:	das    
  411203:	add    bh,bh
  411205:	mov    al,0x89
  411207:	dec    esi
  411208:	arpl   WORD PTR [ecx+0x7e2e243f],dx
  41120e:	xchg   esp,eax
  41120f:	jl     0x41125a
  411211:	mov    ah,BYTE PTR [esi-0x47456e1]
  411217:	xor    BYTE PTR [bp+di-0x2f],0x20
  41121c:	xor    al,0xe5
  41121e:	inc    esi
  41121f:	dec    edi
  411220:	push   0xa993d2a8
  411225:	and    BYTE PTR [edx+eax*2-0x14],dl
  411229:	xchg   edx,eax
  41122a:	scas   al,BYTE PTR es:[edi]
  41122b:	cwde   
  41122c:	(bad)  
  41122d:	(bad)  
  41122e:	jns    0x4112a5
  411230:	push   eax
  411231:	in     eax,0x22
  411233:	pop    esi
  411234:	push   ss
  411235:	mov    edi,0x4d8fc8ad
  41123a:	dec    edi
  41123b:	mov    dh,0xa5
  41123d:	inc    esp
  41123e:	adc    esi,DWORD PTR [edx]
  411240:	retf   0x7784
  411243:	jo     0x4112a1
  411245:	sub    DWORD PTR [ecx+ebp*2+0x3e5d8c92],0x27
  41124d:	or     bl,dh
  41124f:	div    BYTE PTR [ebx+0x79c9f93b]
  411255:	sbb    DWORD PTR ds:0x35a6b496,ecx
  41125b:	ret    0xc5ef
  41125e:	in     eax,0x67
  411260:	repnz and eax,0x6324dab9
  411266:	or     DWORD PTR [eax],0xffffffe6
  411269:	mov    BYTE PTR [ecx],0x2e
  41126c:	loope  0x41125a
  41126e:	push   es
  41126f:	mov    edx,0xf394de97
  411274:	stos   BYTE PTR es:[edi],al
  411275:	jmp    0xd471:0xe4a15fc2
  41127c:	fisub  WORD PTR [ebx+0x677d1b57]
  411282:	fxch   st(6)
  411284:	dec    esp
  411285:	inc    eax
  411286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411287:	mov    eax,ds:0xf6e3a50f
  41128c:	sbb    al,0xc4
  41128e:	loop   0x4112c7
  411290:	(bad)  
  411291:	loope  0x4112fa
  411293:	mov    DWORD PTR [ebx],esi
  411295:	stc    
  411296:	xchg   esi,eax
  411297:	outs   dx,DWORD PTR ds:[esi]
  411298:	mov    WORD PTR [ebx],fs
  41129a:	test   esi,esi
  41129c:	jae    0x411291
  41129e:	jne    0x411263
  4112a0:	js     0x41125a
  4112a2:	aam    0xd6
  4112a4:	pusha  
  4112a5:	add    dl,0xbb
  4112a8:	xchg   ebp,eax
  4112a9:	pop    edi
  4112aa:	xchg   ecx,eax
  4112ab:	lea    esp,[eax]
  4112ad:	mov    dl,0x77
  4112af:	lds    edi,FWORD PTR [eax]
  4112b1:	jne    0x4112fc
  4112b3:	mov    ss,esi
  4112b5:	or     DWORD PTR [eax+0xb],0xffffffb3
  4112b9:	imul   si,WORD PTR [ebx-0x5a],0xe106
  4112bf:	dec    ebp
  4112c0:	aad    0x24
  4112c2:	lea    esp,[edi+0x28338777]
  4112c8:	fstcw  WORD PTR [edx]
  4112cb:	xchg   ebp,eax
  4112cc:	pop    eax
  4112cd:	leave  
  4112ce:	xchg   ebx,eax
  4112cf:	add    esp,DWORD PTR [edi+0x12e23c27]
  4112d5:	dec    esi
  4112d6:	dec    edx
  4112d7:	aad    0xa3
  4112d9:	in     al,0xfa
  4112db:	fmul   DWORD PTR [ebp+0x185dfb47]
  4112e1:	sub    bl,al
  4112e3:	cmp    eax,0x92416fbd
  4112e8:	retf   
  4112e9:	(bad)  
  4112ea:	pop    ebx
  4112eb:	loope  0x411279
  4112ed:	mov    al,ds:0x966b9ef6
  4112f2:	cmp    DWORD PTR [edx-0x8],esi
  4112f5:	test   BYTE PTR [edx-0x2f],cl
  4112f8:	push   esp
  4112f9:	mov    ds:0x6f0074a4,eax
  4112fe:	sti    
  4112ff:	scas   al,BYTE PTR es:[edi]
  411300:	push   edx
  411301:	pop    eax
  411302:	sub    BYTE PTR [eax-0x17],0xa2
  411306:	(bad)  
  411307:	and    al,0xb2
  411309:	(bad)  
  41130a:	pusha  
  41130b:	xor    ch,BYTE PTR [edx+eax*2]
  41130e:	jmp    0x41132d
  411310:	sbb    eax,0x565e5466
  411315:	push   es
  411316:	fdivr  QWORD PTR [eax-0x60]
  411319:	setae  BYTE PTR [edi+ebp*8]
  41131d:	pop    esi
  41131e:	xor    eax,0xe3fafaf1
  411323:	shl    ch,cl
  411325:	stos   DWORD PTR es:[edi],eax
  411326:	pop    edi
  411327:	cmc    
  411328:	(bad)  
  411329:	(bad)  
  41132a:	les    edi,FWORD PTR fs:[ecx-0x17b64ffe]
  411331:	fwait
  411332:	ja     0x4112be
  411334:	pop    eax
  411335:	adc    DWORD PTR [esi],esi
  411337:	adc    al,ch
  411339:	and    BYTE PTR [eax-0x5e377ee0],0x63
  411340:	int3   
  411341:	shld   DWORD PTR [ecx],esp,0x67
  411345:	les    edx,FWORD PTR [ebp+0x46]
  411348:	push   esi
  411349:	cwde   
  41134a:	arpl   WORD PTR [eax+0x66],dx
  41134d:	stc    
  41134e:	inc    eax
  41134f:	cwde   
  411350:	icebp  
  411351:	outs   dx,DWORD PTR ds:[esi]
  411352:	(bad)  
  411354:	jl     0x4112fa
  411356:	imul   edx,DWORD PTR [edx],0x38690075
  41135c:	retf   0x7ea4
  41135f:	leave  
  411360:	mov    esi,0x7faebe
  411365:	ss cmp eax,0xc08970d1
  41136b:	lods   eax,DWORD PTR ds:[esi]
  41136c:	pop    es
  41136d:	repnz dec ebp
  41136f:	jecxz  0x411303
  411371:	(bad)  
  411373:	cs das 
  411375:	loopne 0x4113ec
  411377:	cmp    BYTE PTR [ebx-0x724cadbe],0xa4
  41137e:	sahf   
  41137f:	cmp    DWORD PTR ds:0xb3957551,esp
  411385:	jnp    0x4113a5
  411387:	jmp    0x4113c6
  411389:	test   al,0x2a
  41138b:	scas   al,BYTE PTR es:[edi]
  41138c:	mov    DWORD PTR [esi+0x6eb9b0db],edi
  411392:	lds    esp,FWORD PTR [ebx-0x236e8115]
  411398:	xchg   ecx,eax
  411399:	dec    edx
  41139a:	mov    DWORD PTR [eax],eax
  41139c:	sub    BYTE PTR [ebp+0x4a89cf7d],dh
  4113a2:	push   cs
  4113a3:	and    esp,DWORD PTR [esi+0x7eb394d8]
  4113a9:	lahf   
  4113aa:	pop    DWORD PTR [edi]
  4113ac:	int    0xbe
  4113ae:	pop    ecx
  4113af:	shr    BYTE PTR [eax],cl
  4113b1:	inc    ebx
  4113b2:	push   esi
  4113b3:	out    dx,al
  4113b4:	hlt    
  4113b5:	fdivr  QWORD PTR [esi-0x44]
  4113b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b9:	(bad)  
  4113ba:	mov    ch,0xd
  4113bc:	sub    al,0x57
  4113be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113bf:	sar    BYTE PTR [edi],1
  4113c1:	jecxz  0x4113be
  4113c3:	bound  ebx,QWORD PTR [edi+eax*1-0x52af0227]
  4113ca:	pop    edi
  4113cb:	test   BYTE PTR [esi+0x11c6be28],dl
  4113d1:	jnp    0x41142a
  4113d3:	jb     0x411428
  4113d5:	inc    esi
  4113d6:	dec    esi
  4113d7:	repnz ror BYTE PTR [eax+0x16],0xba
  4113dc:	test   eax,0xd2d36113
  4113e1:	fdivr  DWORD PTR [ebx]
  4113e3:	jmp    0x82ce366a
  4113e8:	inc    esp
  4113e9:	xchg   esp,eax
  4113ea:	mov    cl,0xd3
  4113ec:	pop    ss
  4113ed:	in     eax,0xe6
  4113ef:	xchg   esi,eax
  4113f0:	jae    0x4113af
  4113f2:	sbb    eax,0x82b3431a
  4113f7:	in     eax,0x86
  4113f9:	jge    0x41141c
  4113fb:	dec    edi
  4113fc:	fisub  WORD PTR [ebx]
  4113fe:	fwait
  4113ff:	push   ss
  411400:	cmp    DWORD PTR [ebx-0x7c72bd8d],esi
  411406:	test   DWORD PTR [ebp-0x2ea08d46],0xa94628c3
  411410:	test   DWORD PTR [eax+eax*1-0x794276a7],esp
  411417:	sahf   
  411418:	outs   dx,BYTE PTR ds:[esi]
  411419:	call   FWORD PTR [esi-0x3f03f958]
  41141f:	out    0xa7,al
  411421:	or     al,0x5f
  411423:	cld    
  411424:	clc    
  411425:	retf   0x79fb
  411428:	sbb    esp,esp
  41142a:	mov    ah,BYTE PTR [ecx+0x1a02979a]
  411430:	loope  0x4113ca
  411432:	and    edi,ebx
  411434:	gs push 0x1d3d2796
  41143a:	loopne 0x4113cd
  41143c:	bound  edx,QWORD PTR [esi+0x3ee428ef]
  411442:	es xchg esi,eax
  411444:	mov    cl,0x22
  411446:	push   esp
  411447:	mov    eax,0x266288c2
  41144c:	int    0xb6
  41144e:	rcr    ah,cl
  411450:	or     al,0xe9
  411452:	push   ebx
  411453:	xchg   esp,eax
  411454:	mov    ecx,0xefa94011
  411459:	and    al,BYTE PTR [ebx+eax*4+0x3f]
  41145d:	fcomp  DWORD PTR [esi]
  41145f:	or     BYTE PTR [ecx+0xefaceb2],dl
  411465:	mov    ds:0x6695a507,ax
  41146b:	out    dx,al
  41146c:	jge    0x411411
  41146e:	jg     0x411403
  411470:	nop
  411471:	jno    0x411403
  411473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411474:	inc    ecx
  411475:	xor    BYTE PTR [ecx-0x50],bl
  411478:	mov    ds:0x4f201796,al
  41147d:	ret    0x985
  411480:	fistp  QWORD PTR [ecx+0x34]
  411483:	jge    0x4114ea
  411485:	jmp    0xa88f:0xfcadabaa
  41148c:	in     al,dx
  41148d:	jno    0x4114f2
  41148f:	or     DWORD PTR [ecx+ecx*2+0x24],ecx
  411493:	outs   dx,DWORD PTR ds:[esi]
  411494:	mov    ds:0x877babf8,eax
  411499:	sbb    cl,BYTE PTR [edx+0x7dab6136]
  41149f:	push   ds
  4114a0:	dec    ecx
  4114a1:	sub    esp,DWORD PTR [eax-0x27]
  4114a4:	xchg   esp,eax
  4114a5:	cmp    BYTE PTR [ecx+ebp*4],dh
  4114a8:	test   dh,0xc2
  4114ab:	scas   al,BYTE PTR es:[edi]
  4114ac:	mov    esp,0xdec710d8
  4114b1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4114b3:	cmc    
  4114b4:	inc    ebx
  4114b5:	imul   esp,DWORD PTR [esi+0x16b523f1],0x5f
  4114bc:	dec    edi
  4114bd:	cli    
  4114be:	xchg   ecx,eax
  4114bf:	inc    esp
  4114c0:	stos   BYTE PTR es:[edi],al
  4114c1:	add    ch,BYTE PTR [eax+0x63ee3c72]
  4114c7:	cmc    
  4114c8:	adc    BYTE PTR [ecx+0x45],ch
  4114cb:	sub    al,0xcc
  4114cd:	leave  
  4114ce:	aad    0x1e
  4114d0:	das    
  4114d1:	add    BYTE PTR [edi+esi*1],dh
  4114d4:	sub    BYTE PTR [edx+esi*4],bl
  4114d7:	inc    edx
  4114d8:	pop    ebx
  4114d9:	inc    ebx
  4114da:	sub    BYTE PTR [edi+0x3a],al
  4114dd:	mov    gs,WORD PTR [edi*4+0x3bf72b3d]
  4114e4:	fisttp WORD PTR [eax-0xe4bfbe2]
  4114ea:	sub    ecx,esi
  4114ec:	pop    esp
  4114ed:	in     al,0x67
  4114ef:	mov    bl,0x2d
  4114f1:	iret   
  4114f2:	mov    ebx,0xb36c062d
  4114f7:	sub    eax,0xe1ae5c88
  4114fc:	retf   0x80d5
  4114ff:	outs   dx,BYTE PTR ds:[esi]
  411500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411501:	outs   dx,DWORD PTR ds:[esi]
  411502:	jo     0x41150d
  411504:	lods   al,BYTE PTR ds:[esi]
  411505:	jb     0x4114b9
  411507:	inc    ecx
  411508:	and    DWORD PTR [ebp+0x7b170756],0x18
  41150f:	adc    DWORD PTR [edx],esp
  411511:	ins    DWORD PTR es:[edi],dx
  411512:	or     DWORD PTR [eax],ebx
  411514:	xchg   edx,eax
  411515:	sbb    BYTE PTR [eax-0x73b82019],al
  41151b:	push   ebx
  41151c:	hlt    
  41151d:	mov    BYTE PTR [esi+0x6bb8f9e6],bh
  411523:	arpl   si,ax
  411525:	push   eax
  411526:	push   0x7834d40c
  41152b:	jle    0x411518
  41152d:	call   0xb14d1ffe
  411532:	cld    
  411533:	dec    ebx
  411534:	adc    BYTE PTR [eax-0x3eeb0493],bl
  41153a:	lods   eax,DWORD PTR ds:[esi]
  41153b:	(bad)  
  41153c:	mov    ?,WORD PTR [edx+0x1856ae08]
  411542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411543:	or     DWORD PTR [ebp+0x14],ebx
  411546:	or     eax,0x993adb4a
  41154b:	mov    ebp,0x258d4ef2
  411550:	xchg   ebx,eax
  411551:	pop    ebp
  411552:	pop    es
  411553:	pop    ss
  411554:	cmp    BYTE PTR ds:0x4d6260d8,dl
  41155a:	scas   al,BYTE PTR es:[edi]
  41155b:	sti    
  41155c:	jle    0x411592
  41155e:	inc    ebp
  41155f:	jnp    0x41151d
  411561:	out    dx,al
  411562:	iret   
  411563:	mov    ebp,esp
  411565:	fnstenv [esi]
  411567:	add    DWORD PTR [ecx+0x2e7e9db9],ecx
  41156d:	lods   al,BYTE PTR ds:[esi]
  41156e:	aas    
  41156f:	rcl    si,1
  411572:	mov    ecx,?
  411574:	or     bh,BYTE PTR [ecx+0x1a]
  411577:	test   DWORD PTR [eax-0x315cb68],0xa32ed21f
  411581:	imul   edx,DWORD PTR [eax-0x2a5248d2],0xd2138418
  41158b:	mov    dh,0xed
  41158d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41158e:	adc    esp,DWORD PTR [esi]
  411590:	aas    
  411591:	inc    ebx
  411592:	ret    0x3052
  411595:	loop   0x41152c
  411597:	jbe    0x4115ae
  411599:	scas   eax,DWORD PTR es:[edi]
  41159a:	fs call 0x6790:0xbcd9840a
  4115a2:	in     al,dx
  4115a3:	aas    
  4115a4:	pop    edx
  4115a5:	mov    DWORD PTR ds:0xcb82cc50,edx
  4115ab:	int3   
  4115ac:	ja     0x4115cc
  4115ae:	sub    DWORD PTR [ebx],esi
  4115b0:	sub    al,0x9a
  4115b2:	jmp    0x611a:0xd98c85fe
  4115b9:	inc    edx
  4115ba:	push   edx
  4115bb:	unpcklps xmm2,XMMWORD PTR [edi-0x44]
  4115bf:	jnp    0x4115ca
  4115c1:	into   
  4115c2:	cli    
  4115c3:	add    DWORD PTR [ebx-0x16fbff2e],0x1c
  4115ca:	ss push ds
  4115cc:	out    0x8c,eax
  4115ce:	mov    eax,ds:0xf76058bb
  4115d3:	dec    ecx
  4115d4:	jmp    0x223c:0x31a6c87a
  4115db:	or     esp,eax
  4115dd:	and    bl,BYTE PTR [edi-0x62]
  4115e0:	inc    ebp
  4115e1:	mov    dl,al
  4115e3:	cs pop ebp
  4115e5:	push   ds
  4115e6:	shr    esi,cl
  4115e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e9:	adc    al,0x65
  4115eb:	add    BYTE PTR [edx],al
  4115ed:	pop    ecx
  4115ee:	ins    BYTE PTR es:[edi],dx
  4115ef:	pop    esi
  4115f0:	out    dx,al
  4115f1:	cmp    DWORD PTR [eax-0x465f7308],esp
  4115f7:	push   edx
  4115f8:	jge    0x41158a
  4115fa:	ins    DWORD PTR es:[edi],dx
  4115fb:	sbb    bl,BYTE PTR [ecx-0x7d]
  4115fe:	jo     0x4115a4
  411600:	mov    ss,WORD PTR [esi-0x4a40da64]
  411606:	and    DWORD PTR [edi+0x34],eax
  411609:	das    
  41160a:	rcl    DWORD PTR [ebx+esi*1+0x3a],0x28
  41160f:	rol    DWORD PTR [eax-0x3ebb328b],1
  411615:	and    dh,BYTE PTR [edx-0x257df5f7]
  41161b:	les    ebp,FWORD PTR [esi+0x3df71228]
  411621:	cmp    DWORD PTR [ebx],edi
  411623:	hlt    
  411624:	xor    ecx,0x448dc07d
  41162a:	jge    0x41165f
  41162c:	stos   BYTE PTR es:[edi],al
  41162d:	in     eax,0x27
  41162f:	fsubr  QWORD PTR [esi]
  411631:	or     edi,esi
  411633:	daa    
  411634:	mov    ch,0x52
  411636:	pop    edx
  411637:	cmc    
  411638:	(bad)  
  41163a:	rol    BYTE PTR [esi+edi*4],cl
  41163d:	push   ss
  41163e:	lods   eax,DWORD PTR ds:[esi]
  41163f:	pop    ecx
  411640:	sbb    eax,0xaa8e7143
  411645:	out    0x58,al
  411647:	and    al,BYTE PTR ds:0xfaab29ea
  41164d:	mov    dl,0xa7
  41164f:	sub    al,0x3
  411651:	std    
  411652:	aas    
  411653:	cdq    
  411654:	xor    al,0xf7
  411656:	(bad)  
  411658:	add    BYTE PTR [edx+esi*4+0x7e],dl
  41165c:	or     BYTE PTR [esi+eiz*4-0x37c34902],0x4
  411664:	idiv   BYTE PTR [edi]
  411666:	or     eax,0xb7dba4c5
  41166b:	das    
  41166c:	and    BYTE PTR [ebx],dh
  41166e:	jb     0x411650
  411670:	adc    BYTE PTR [ebx],dh
  411672:	jle    0x4116cd
  411674:	fisubr DWORD PTR [edx]
  411676:	test   eax,0x680ab868
  41167b:	mov    cs,esp
  41167d:	and    cl,BYTE PTR [esi-0x7b2cbf04]
  411683:	mov    ebp,0x9061a909
  411688:	dec    edi
  411689:	mov    esi,0xe606e706
  41168e:	mul    DWORD PTR [ebp+0x45082a3a]
  411694:	mov    ds:0x8fac06f,al
  411699:	cmp    eax,0xe7ac19ea
  41169e:	ins    DWORD PTR es:[edi],dx
  41169f:	jbe    0x4116bc
  4116a1:	pop    edx
  4116a2:	std    
  4116a3:	sub    eax,0xe37e762f
  4116a8:	mov    cl,0xc9
  4116aa:	clc    
  4116ab:	push   ds
  4116ac:	addr16 popa 
  4116ae:	sub    ecx,DWORD PTR [edx]
  4116b0:	xchg   ah,ch
  4116b2:	push   ss
  4116b3:	es dec ebx
  4116b5:	fldenv [edi]
  4116b7:	call   0x98e03bf8
  4116bc:	pop    ds
  4116bd:	pop    edx
  4116be:	retf   0x9b83
  4116c1:	dec    ebp
  4116c2:	stc    
  4116c3:	(bad)  
  4116c4:	in     eax,dx
  4116c5:	test   DWORD PTR [edi+eax*1-0x6a],0xfad7ea85
  4116cd:	out    dx,al
  4116ce:	push   ecx
  4116cf:	xchg   ebp,eax
  4116d0:	dec    ecx
  4116d1:	gs pop ecx
  4116d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d4:	(bad)  
  4116d5:	mov    esi,0x43212e26
  4116da:	or     DWORD PTR [edi],edx
  4116dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116dd:	lock add al,0x0
  4116e0:	(bad)  
  4116e1:	and    BYTE PTR [ecx+0x7],dl
  4116e4:	ins    DWORD PTR es:[edi],dx
  4116e5:	shl    DWORD PTR [edx+eiz*2-0x2f],cl
  4116e9:	test   eax,0xf66803bd
  4116ee:	sub    al,0xa3
  4116f0:	or     BYTE PTR [eax+0x356661d7],ah
  4116f6:	inc    eax
  4116f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f8:	cmp    BYTE PTR [ebp+0x3ee6b3b5],al
  4116fe:	push   0xffffffef
  411700:	das    
  411701:	imul   DWORD PTR [eax+0x4]
  411704:	jmp    FWORD PTR [edx-0x49406563]
  41170a:	lea    ebx,[eax+0x385325eb]
  411710:	dec    esp
  411711:	xlat   BYTE PTR ds:[ebx]
  411712:	mov    ah,bl
  411714:	int    0xa1
  411716:	dec    edi
  411717:	fdiv   QWORD PTR [eax-0x6f]
  41171a:	out    0x67,eax
  41171c:	imul   ebx,edx,0xb36d1d09
  411722:	add    BYTE PTR [eax],ch
  411724:	push   eax
  411725:	mov    ebx,0x637a014c
  41172a:	les    ebx,FWORD PTR [edi]
  41172c:	int    0xd5
  41172e:	sub    eax,0x4df60b5b
  411733:	aas    
  411734:	(bad)  
  411736:	inc    edi
  411737:	loopne 0x4117a2
  411739:	pop    ds
  41173a:	les    ebp,FWORD PTR [ebp+esi*1+0x686bd597]
  411741:	gs (bad) 
  411743:	sti    
  411744:	xchg   ecx,eax
  411745:	cli    
  411746:	ret    0xc4cc
  411749:	enter  0x5231,0x74
  41174d:	cli    
  41174e:	mov    bh,0x10
  411750:	loopne 0x411738
  411752:	outs   dx,BYTE PTR ds:[esi]
  411753:	rcl    DWORD PTR [ebx-0x21],0xc7
  411757:	ficom  WORD PTR [ebp+edx*2+0x29]
  41175b:	aad    0xb3
  41175d:	or     al,dh
  41175f:	jns    0x411721
  411761:	rcr    DWORD PTR [ecx],1
  411763:	inc    edx
  411764:	mov    edx,0xb3de48ae
  411769:	push   ecx
  41176a:	adc    ch,BYTE PTR [esi+0x9]
  41176d:	jns    0x4117b9
  41176f:	dec    esi
  411770:	in     eax,0x38
  411772:	mov    bl,BYTE PTR [eax]
  411774:	sub    al,0xb
  411776:	out    0x1d,eax
  411778:	lahf   
  411779:	repz scas al,BYTE PTR es:[edi]
  41177b:	cwde   
  41177c:	addr16 or ebx,esi
  41177f:	fdivr  st,st(0)
  411781:	popf   
  411782:	loop   0x4117ce
  411784:	popa   
  411785:	rcl    DWORD PTR [ebx-0xb],1
  411788:	adc    BYTE PTR [ebp+edx*8-0x47c1b3dd],0xe
  411790:	iret   
  411791:	iret   
  411792:	mov    es,WORD PTR [edx+0x10]
  411795:	push   ebx
  411796:	jo     0x411721
  411798:	bnd jp 0x4117e9
  41179b:	push   edx
  41179c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41179d:	pop    esp
  41179e:	ja     0x411808
  4117a0:	rol    DWORD PTR [ebx],1
  4117a2:	out    0x7f,eax
  4117a4:	sti    
  4117a5:	arpl   WORD PTR [esi],bx
  4117a7:	push   esi
  4117a8:	les    esp,FWORD PTR [eax-0x2b]
  4117ab:	loopne 0x4117eb
  4117ad:	rcr    edi,0xbb
  4117b0:	mov    cl,BYTE PTR [ecx-0x35]
  4117b3:	sbb    ecx,DWORD PTR [ebx]
  4117b5:	cmp    eax,0x7b88cb2b
  4117ba:	test   ebp,0xb11e3c29
  4117c0:	lahf   
  4117c1:	jl     0x4117d6
  4117c3:	jle    0x41179a
  4117c5:	std    
  4117c6:	pop    edi
  4117c7:	repz call 0x1cb5:0x6c4015ac
  4117cf:	imul   eax,DWORD PTR [edi-0x706966b2],0x23
  4117d6:	das    
  4117d7:	(bad)  
  4117d8:	jle    0x411813
  4117da:	jmp    FWORD PTR [eax-0x38d49680]
  4117e0:	clc    
  4117e1:	dec    edi
  4117e2:	jp     0x411812
  4117e4:	cmp    BYTE PTR [edx+0x12802cea],bl
  4117ea:	outs   dx,BYTE PTR ds:[esi]
  4117eb:	retf   
  4117ec:	dec    ebp
  4117ed:	xchg   ebp,eax
  4117ee:	iret   
  4117ef:	sub    BYTE PTR [edx+0x6f],al
  4117f2:	mov    dl,0x3a
  4117f4:	enter  0xb2cc,0x35
  4117f8:	sub    al,0xef
  4117fa:	mov    eax,ds:0xad93c569
  4117ff:	adc    BYTE PTR [edx+ebx*2],dh
  411802:	(bad)  
  411803:	fiadd  DWORD PTR [ebx+0x0]
  411806:	xor    al,BYTE PTR [edi]
  411808:	mov    ds:0x472bebfa,eax
  41180d:	popa   
  41180e:	stos   DWORD PTR es:[edi],eax
  41180f:	aam    0xbc
  411811:	jmp    0xc8582a6a
  411816:	add    dl,0xce
  411819:	je     0x4117a7
  41181b:	ins    DWORD PTR es:[edi],dx
  41181c:	xchg   ebp,eax
  41181d:	sbb    bl,BYTE PTR [ebx-0x77]
  411820:	rol    eax,1
  411822:	sti    
  411823:	push   edi
  411824:	xor    eax,DWORD PTR [ebp-0x49]
  411827:	inc    ebx
  411828:	sbb    eax,0x7bcbfdfc
  41182d:	lds    ebx,FWORD PTR [edi]
  41182f:	jnp    0x4117d3
  411831:	(bad)  
  411832:	lds    ebx,FWORD PTR ss:[ebp-0x4e75ea73]
  411839:	push   ecx
  41183a:	pop    ds
  41183b:	inc    esi
  41183c:	int    0xbf
  41183e:	xor    al,0xd9
  411840:	adc    eax,DWORD PTR ds:0xfea58f45
  411846:	aad    0x58
  411848:	pop    esi
  411849:	and    DWORD PTR [eax+0x2e46df43],0xa6d2d8fc
  411853:	cmc    
  411854:	xor    DWORD PTR fs:[esi],0xffffffcc
  411858:	xchg   edi,eax
  411859:	pop    es
  41185a:	mov    dh,0x64
  41185c:	sbb    eax,0xe00bfc50
  411861:	sub    ch,BYTE PTR [esi-0x28459b57]
  411867:	inc    eax
  411868:	addr16 push ebx
  41186a:	cwde   
  41186b:	push   ebx
  41186d:	mov    esi,0xc87e2089
  411872:	std    
  411873:	dec    edi
  411874:	mov    eax,0xb835c444
  411879:	cmp    DWORD PTR [esi-0x1fb58ac4],edi
  41187f:	fcmovbe st,st(7)
  411881:	mov    dh,0x24
  411883:	nop
  411884:	out    0x79,eax
  411886:	jp     0x4118e8
  411888:	data16 sub dl,ch
  41188b:	pop    esp
  41188c:	out    0x3b,al
  41188e:	mov    ds:0xd226b005,eax
  411893:	push   ebp
  411894:	pusha  
  411895:	xchg   ebp,eax
  411896:	fcom   QWORD PTR [ecx]
  411898:	iret   
  411899:	inc    ebx
  41189a:	inc    edx
  41189b:	std    
  41189c:	dec    edi
  41189d:	shr    ebp,cl
  41189f:	add    eax,0xd42055ce
  4118a4:	hlt    
  4118a5:	shl    al,1
  4118a7:	add    al,0x59
  4118a9:	ret    0x732f
  4118ac:	or     al,0xe5
  4118ae:	mov    bh,0xd4
  4118b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b1:	inc    edx
  4118b2:	(bad)  
  4118b3:	je     0x41188f
  4118b5:	xchg   ebp,eax
  4118b6:	xor    dh,BYTE PTR [eax-0x25]
  4118b9:	(bad)  
  4118ba:	xor    eax,0x467d5622
  4118bf:	mov    eax,ds:0x6803c5f0
  4118c4:	data16 icebp 
  4118c6:	call   0xc4a06ffe
  4118cb:	data16 and BYTE PTR [edx+0x3cce194d],cl
  4118d2:	shl    bh,cl
  4118d4:	jg     0x4118f3
  4118d6:	and    eax,0x7cd2f6d5
  4118db:	sub    al,0x68
  4118dd:	mov    ds:0x64c834d7,al
  4118e2:	or     ebx,DWORD PTR [esi]
  4118e4:	or     DWORD PTR [ebx+0x4edeba1f],ebp
  4118ea:	and    esi,edi
  4118ec:	not    DWORD PTR [eax+eiz*1+0x5fe886c5]
  4118f3:	inc    eax
  4118f4:	ins    DWORD PTR es:[edi],dx
  4118f5:	jae    0x411929
  4118f7:	xchg   BYTE PTR [esp+ebp*8+0x13a8a6ed],ah
  4118fe:	sti    
  4118ff:	repnz xor DWORD PTR [eax+0x3f],edx
  411903:	push   es
  411904:	push   ds
  411905:	scas   al,BYTE PTR es:[edi]
  411906:	sbb    al,0xa9
  411908:	xchg   ecx,eax
  411909:	or     eax,0x119e313
  41190e:	popf   
  41190f:	jg     0x41192e
  411911:	sub    edi,DWORD PTR [ebp-0x5c4f9aed]
  411917:	mov    bl,0xd6
  411919:	lods   eax,DWORD PTR ds:[esi]
  41191a:	mov    DWORD PTR [edi-0x36a263f2],edi
  411920:	xchg   ecx,eax
  411921:	fld    QWORD PTR [esi-0x3a]
  411924:	into   
  411925:	stos   DWORD PTR es:[edi],eax
  411926:	pop    ss
  411927:	pusha  
  411928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411929:	sbb    DWORD PTR [edi+0x68abc468],esp
  41192f:	mov    eax,ds:0xe5f62820
  411934:	inc    esp
  411935:	sahf   
  411936:	push   edi
  411937:	loopne 0x411981
  411939:	daa    
  41193a:	mov    dl,0x19
  41193c:	dec    esi
  41193d:	and    ch,BYTE PTR [ebx+esi*2+0x5e48f65f]
  411944:	sub    DWORD PTR [edx+0x1b80997d],ebp
  41194a:	addr16 retf 
  41194c:	stos   DWORD PTR es:[edi],eax
  41194d:	dec    esi
  41194e:	xchg   DWORD PTR [edx-0x62],esi
  411951:	mov    dl,0x39
  411953:	lahf   
  411954:	sbb    al,0x3e
  411956:	pop    edx
  411957:	fisubr WORD PTR [ecx]
  411959:	jl     0x411900
  41195b:	jns    0x4118f4
  41195d:	ins    BYTE PTR es:[edi],dx
  41195e:	pusha  
  41195f:	push   0xfffffff2
  411961:	addr16 ret 0x4154
  411965:	fst    st(6)
  411967:	idiv   BYTE PTR [edx-0x7b0755ab]
  41196d:	inc    eax
  41196e:	push   ecx
  41196f:	fidiv  WORD PTR [edi+ebp*8-0x1a790e38]
  411976:	jmp    0x41198b
  411978:	dec    ebx
  411979:	fnstcw WORD PTR [ebx-0x7b]
  41197c:	in     al,dx
  41197d:	ret    
  41197e:	push   esi
  41197f:	pop    es
  411980:	and    ah,dh
  411982:	pop    ecx
  411983:	inc    ecx
  411984:	(bad)  
  411986:	mov    cl,0xee
  411988:	xchg   edi,eax
  411989:	ins    BYTE PTR es:[edi],dx
  41198a:	jp     0x411923
  41198c:	dec    ebp
  41198d:	pop    esi
  41198e:	cld    
  41198f:	and    edx,DWORD PTR [edx+0x56]
  411992:	mov    al,ds:0x6778598b
  411997:	inc    esi
  411998:	push   ss
  411999:	adc    eax,0x20332674
  41199e:	out    dx,al
  41199f:	rcl    BYTE PTR [esi+eax*1+0x60],0x30
  4119a4:	jbe    0x4119a0
  4119a6:	xchg   edi,eax
  4119a7:	imul   edx,DWORD PTR [eax+edi*4],0xfffffff8
  4119ab:	jp     0x41198e
  4119ad:	iret   
  4119ae:	mov    ecx,0x3e1403a2
  4119b3:	int    0x3e
  4119b5:	dec    ebx
  4119b6:	sub    DWORD PTR [edx],ecx
  4119b8:	mov    BYTE PTR [eax+0x49ddb162],dh
  4119be:	pop    ss
  4119bf:	dec    eax
  4119c0:	adc    DWORD PTR cs:[esi],0xad23ee99
  4119c7:	pop    eax
  4119c8:	adc    BYTE PTR [edx+0x3c4cbeda],ch
  4119ce:	sub    ebp,0xd5d653bf
  4119d4:	sub    DWORD PTR [ebx],ebx
  4119d6:	(bad)  
  4119d7:	jecxz  0x411a21
  4119d9:	push   DWORD PTR [edi-0x3]
  4119dc:	aad    0x61
  4119de:	or     al,0x5a
  4119e0:	(bad)  
  4119e1:	xlat   BYTE PTR ds:[ebx]
  4119e2:	jl     0x411a0c
  4119e4:	ds in  al,dx
  4119e6:	rcr    BYTE PTR [edx+0x4b1d467e],1
  4119ec:	cld    
  4119ed:	aaa    
  4119ee:	and    eax,0xea22320d
  4119f3:	jne    0x411a52
  4119f5:	add    eax,DWORD PTR [ecx]
  4119f7:	jle    0x411a20
  4119f9:	and    edx,DWORD PTR [edi+0x7c069a53]
  4119ff:	pushf  
  411a00:	cmp    DWORD PTR [edx-0x5709cbaa],ebp
  411a06:	inc    eax
  411a07:	sbb    eax,0x892693ea
  411a0c:	bound  edx,QWORD PTR [eax+0x103d4689]
  411a12:	stc    
  411a13:	jbe    0x4119db
  411a15:	xor    dl,cl
  411a17:	fbld   TBYTE PTR [esi+0x2d]
  411a1a:	shl    DWORD PTR [eax+0x50],0xb6
  411a1e:	fsub   DWORD PTR [eax+0x65809485]
  411a24:	sub    BYTE PTR ds:0x28c3acaf,al
  411a2a:	popa   
  411a2b:	push   esi
  411a2c:	fprem  
  411a2e:	dec    edx
  411a2f:	and    edi,DWORD PTR [esp+0x83b04fe]
  411a36:	repnz mov bl,0x21
  411a39:	iret   
  411a3a:	push   ds
  411a3b:	mov    edi,gs
  411a3d:	mov    al,ds:0xdd850b0d
  411a42:	lea    ebx,[eax+0x32]
  411a45:	ins    BYTE PTR es:[edi],dx
  411a46:	lea    edx,[ebx-0x3a9089b9]
  411a4c:	sub    ebp,DWORD PTR [ebx+0x6a]
  411a4f:	mov    edi,0x291a7434
  411a54:	addr16 mov al,0xc6
  411a57:	addr16 push esp
  411a59:	add    edi,edx
  411a5b:	into   
  411a5c:	or     dh,BYTE PTR ds:0xa59d8192
  411a62:	fadd   st(3),st
  411a64:	hlt    
  411a65:	pushf  
  411a66:	and    DWORD PTR [ebp+0x2fc87cb2],edi
  411a6c:	sbb    bh,BYTE PTR [ecx-0x3a6f409f]
  411a72:	enter  0xa6cc,0x2
  411a76:	push   eax
  411a77:	and    DWORD PTR [ecx+0x7],0xe12cb390
  411a7e:	jg     0x411afe
  411a80:	jmp    0x8144f265
  411a85:	sbb    bl,bl
  411a87:	outs   dx,BYTE PTR ds:[esi]
  411a88:	cs out dx,al
  411a8a:	mov    ds,WORD PTR [eax]
  411a8c:	(bad)  
  411a8d:	jg     0x411a7e
  411a8f:	xor    ebx,ecx
  411a91:	sub    al,0x8a
  411a93:	int    0x9b
  411a95:	and    cl,cl
  411a97:	cwde   
  411a98:	ja     0x411aa1
  411a9a:	ins    DWORD PTR es:[edi],dx
  411a9b:	in     eax,0xf
  411a9d:	mov    ebx,0xe89039b3
  411aa2:	sahf   
  411aa3:	cli    
  411aa4:	add    dl,cl
  411aa6:	loope  0x411b1d
  411aa8:	int    0x15
  411aaa:	jl     0x411ac8
  411aac:	jnp    0x411af3
  411aae:	sar    BYTE PTR [edi+0x7c483594],1
  411ab4:	jge    0x411a61
  411ab6:	push   ds
  411ab7:	int    0xe0
  411ab9:	(bad)  
  411aba:	sti    
  411abb:	mov    eax,0xf6628816
  411ac0:	sub    dh,0x2d
  411ac3:	imul   esp,ecx,0xffffffb9
  411ac6:	out    0x72,eax
  411ac8:	pand   mm5,QWORD PTR [ebp-0x30]
  411acc:	pop    eax
  411acd:	jns    0x411a93
  411acf:	and    DWORD PTR [ebx-0x308a44b],esp
  411ad5:	mov    bl,0x44
  411ad7:	cmc    
  411ad8:	mov    ebp,0x7d51eb55
  411add:	jp     0x411aa1
  411adf:	bound  ebx,QWORD PTR [eax-0x61972a72]
  411ae5:	pop    ecx
  411ae6:	iret   
  411ae7:	lods   al,BYTE PTR ds:[esi]
  411ae8:	and    eax,0x7322a6f2
  411aed:	scas   eax,DWORD PTR es:[edi]
  411aee:	int    0x5c
  411af0:	dec    eax
  411af1:	mov    eax,0xa28aac26
  411af6:	xor    eax,0x72beadb3
  411afb:	hlt    
  411afc:	xchg   esi,eax
  411afd:	mov    DWORD PTR ds:0x676c8c97,ebx
  411b03:	rcr    esi,1
  411b05:	cmp    BYTE PTR [ebx+0x50],ch
  411b08:	push   ebx
  411b09:	pop    esp
  411b0a:	inc    esp
  411b0b:	(bad)  
  411b0c:	(bad)  
  411b0d:	mov    WORD PTR [eax+edx*4],?
  411b10:	add    cl,BYTE PTR [eax+0x5c4c3819]
  411b16:	inc    ecx
  411b17:	mov    ch,0xc0
  411b19:	mov    BYTE PTR [edi-0x6c52d58f],ch
  411b1f:	or     bl,BYTE PTR [ebx]
  411b21:	jecxz  0x411b29
  411b23:	ds dec ebp
  411b25:	fs xor eax,0xfd128327
  411b2b:	pop    edx
  411b2c:	int    0x2f
  411b2e:	cmp    eax,0xc492d085
  411b33:	(bad)  
  411b34:	lods   al,BYTE PTR ds:[esi]
  411b35:	lods   eax,DWORD PTR ds:[esi]
  411b36:	in     al,dx
  411b37:	mov    eax,0xa473312a
  411b3c:	in     al,0x84
  411b3e:	clc    
  411b3f:	(bad)  
  411b41:	jns    0x411b6a
  411b43:	shl    BYTE PTR [ecx],1
  411b45:	outs   dx,BYTE PTR ds:[esi]
  411b46:	push   esi
  411b47:	push   ss
  411b48:	(bad)  
  411b49:	sub    al,0xfb
  411b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b4c:	jp     0x411b3c
  411b4e:	cmc    
  411b4f:	sbb    ah,bh
  411b51:	mov    cl,0x36
  411b53:	sbb    BYTE PTR [edi],bh
  411b55:	dec    eax
  411b56:	int3   
  411b57:	push   esp
  411b58:	cmp    edx,eax
  411b5a:	cmc    
  411b5b:	adc    al,0x8a
  411b5d:	add    al,0x63
  411b5f:	ror    edi,1
  411b61:	(bad)  
  411b62:	push   ebp
  411b63:	sar    DWORD PTR [ebx-0x5dec1d46],1
  411b69:	fsubr  DWORD PTR [ebp+0x750362c3]
  411b70:	ror    BYTE PTR [ecx-0x2859cbdf],1
  411b76:	push   es
  411b77:	xor    ebp,esi
  411b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b7a:	lods   al,BYTE PTR ds:[esi]
  411b7b:	pop    ds
  411b7c:	xchg   ebp,eax
  411b7d:	and    DWORD PTR [ebx+ebx*2-0x1d],eax
  411b81:	les    edx,FWORD PTR [eax-0x2e]
  411b84:	xchg   edi,edx
  411b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b87:	(bad)  
  411b89:	sub    DWORD PTR [edi-0x31],esi
  411b8c:	(bad)  
  411b8d:	stos   BYTE PTR es:[edi],al
  411b8e:	cli    
  411b8f:	jo     0x411b7c
  411b91:	push   esi
  411b92:	sbb    ebx,DWORD PTR [eax-0x65]
  411b95:	pop    ss
  411b96:	lods   eax,DWORD PTR ds:[esi]
  411b97:	es xor al,0x17
  411b9a:	add    BYTE PTR [ebp-0x787da9b6],dh
  411ba0:	adc    cl,BYTE PTR [eax-0x167b12c9]
  411ba6:	dec    ebp
  411ba7:	dec    ebp
  411ba8:	xor    ebp,DWORD PTR [esi-0x47]
  411bab:	pop    es
  411bac:	rol    DWORD PTR [edi+0x7e8af8],cl
  411bb2:	jns    0x411c1d
  411bb4:	jmp    0xa09f194a
  411bb9:	outs   dx,DWORD PTR ds:[esi]
  411bba:	retf   
  411bbb:	and    BYTE PTR [edx-0x71],dh
  411bbe:	pusha  
  411bbf:	mov    dh,BYTE PTR [edi+0x57067a14]
  411bc5:	adc    esi,DWORD PTR [edi-0x53]
  411bc8:	mov    al,ds:0xcf383ebb
  411bcd:	popf   
  411bce:	mov    edx,0xb032b5d7
  411bd3:	sub    al,ah
  411bd5:	inc    ebx
  411bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd7:	cmp    eax,0xb2d71ea3
  411bdc:	ins    DWORD PTR es:[edi],dx
  411bdd:	aad    0x74
  411bdf:	or     edi,DWORD PTR [ebx-0x2c687d1d]
  411be5:	xor    al,bh
  411be7:	repnz in eax,0x52
  411bea:	inc    ebp
  411bec:	or     edx,DWORD PTR [esi-0x3c]
  411bef:	fld    QWORD PTR [ecx+0x32dcd9c7]
  411bf5:	stos   DWORD PTR es:[edi],eax
  411bf6:	add    DWORD PTR [esi+0x7f],0x921ff700
  411bfd:	sub    DWORD PTR [ecx+esi*8+0x4e],edx
  411c01:	aad    0xdb
  411c03:	ins    BYTE PTR es:[edi],dx
  411c04:	add    ebp,DWORD PTR [ecx]
  411c06:	or     dl,BYTE PTR [edi]
  411c08:	sysexit 
  411c0a:	cs pop ebx
  411c0c:	jbe    0x411c3c
  411c0e:	sub    al,0x29
  411c10:	adc    eax,eax
  411c12:	mov    cl,dl
  411c14:	sbb    al,0x22
  411c16:	inc    edi
  411c17:	test   eax,0xbf87eea5
  411c1c:	mov    al,ds:0x85b0cdc7
  411c21:	clc    
  411c22:	inc    esi
  411c23:	stos   BYTE PTR es:[edi],al
  411c24:	sbb    dh,0xbd
  411c27:	hlt    
  411c28:	lahf   
  411c29:	addr16 pop eax
  411c2b:	push   es
  411c2c:	mov    esi,0x7500c635
  411c31:	xor    ebx,DWORD PTR [esi]
  411c33:	and    BYTE PTR [edi],cl
  411c35:	pop    ebx
  411c36:	xor    BYTE PTR [ecx-0x47],0xc9
  411c3a:	pop    ebp
  411c3b:	push   eax
  411c3c:	pop    edx
  411c3d:	jae    0x411c27
  411c3f:	mov    ds:0x664daa87,al
  411c44:	in     al,0x38
  411c46:	push   edx
  411c47:	ret    
  411c48:	add    DWORD PTR [eax-0x52],eax
  411c4b:	pop    edi
  411c4c:	(bad)  
  411c4d:	ds lock inc eax
  411c50:	inc    ebx
  411c51:	call   0xd9fb:0xe1baafd5
  411c58:	js     0x411c3f
  411c5a:	ret    0x848e
  411c5d:	retf   0x57f5
  411c60:	adc    esp,DWORD PTR [ecx-0xe]
  411c63:	inc    ebx
  411c64:	ret    0x4951
  411c67:	mov    ebp,0xd27c126c
  411c6c:	mov    DWORD PTR gs:[esi-0x48],edx
  411c70:	jle    0x411cbd
  411c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c73:	imul   ebx,DWORD PTR [eax-0x3a20ad2f],0x90c63f3a
  411c7d:	xchg   ebx,eax
  411c7e:	mov    esi,0xe2f3f998
  411c83:	js     0x411cc3
  411c85:	aam    0xc5
  411c87:	int    0x20
  411c89:	cmp    al,0xa6
  411c8b:	and    eax,0xbf1655d5
  411c90:	clc    
  411c91:	loop   0x411cf3
  411c93:	(bad)  
  411c94:	and    ecx,DWORD PTR [eax-0x5d04e74a]
  411c9a:	lock sub eax,0xff1b9487
  411ca0:	jo     0x411ca6
  411ca2:	lea    esp,[ebx]
  411ca4:	iret   
  411ca5:	les    eax,FWORD PTR [edi-0x5a]
  411ca8:	bound  edi,QWORD PTR [eax]
  411caa:	and    al,0xa0
  411cac:	cmp    ah,BYTE PTR [esi-0x34]
  411caf:	dec    eax
  411cb0:	in     eax,0x64
  411cb2:	jb     0x411ccf
  411cb4:	cdq    
  411cb5:	pop    edi
  411cb6:	pop    esi
  411cb7:	adc    dh,bh
  411cb9:	aad    0xfa
  411cbb:	and    esp,DWORD PTR ds:0x52e26e44
  411cc1:	mov    ebp,0x4a6a4fce
  411cc6:	jmp    0x411c88
  411cc8:	shl    DWORD PTR [edi-0x6b],0x9c
  411ccc:	test   DWORD PTR [edx+0x51],0x6512b0c8
  411cd3:	and    al,0xaf
  411cd5:	fs aas 
  411cd7:	jno    0x411cb2
  411cd9:	sub    al,ah
  411cdb:	daa    
  411cdc:	jno    0x411c61
  411cde:	add    al,0xde
  411ce0:	sbb    BYTE PTR [edx+0x24],ch
  411ce3:	jne    0x411d45
  411ce5:	and    DWORD PTR [eax],ebx
  411ce7:	clc    
  411ce8:	or     BYTE PTR [eax],ah
  411cea:	pusha  
  411ceb:	mov    edi,esi
  411ced:	dec    edx
  411cee:	jnp    0x411c89
  411cf0:	hlt    
  411cf1:	retf   0x2b15
  411cf4:	mov    ebx,esi
  411cf6:	test   eax,0x3dc95336
  411cfb:	xchg   DWORD PTR [ebx+0x3df0e004],ecx
  411d01:	pop    ds
  411d02:	clc    
  411d03:	jnp    0x411cdf
  411d05:	and    bl,BYTE PTR [esi+eax*1-0x69]
  411d09:	push   es
  411d0a:	enter  0x377b,0x45
  411d0e:	les    eax,FWORD PTR [eax-0x2a]
  411d11:	cli    
  411d12:	leave  
  411d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d14:	add    BYTE PTR [edi],dl
  411d16:	pop    ds
  411d17:	mov    dh,BYTE PTR [ecx-0x1]
  411d1a:	mov    DWORD PTR [esi],edx
  411d1c:	int    0xee
  411d1e:	rcl    WORD PTR ds:0xe8a764bb,1
  411d25:	lea    ebx,[esi+0x5556082a]
  411d2b:	mov    al,0xef
  411d2d:	mov    ah,0xe2
  411d2f:	xchg   ebp,eax
  411d30:	cdq    
  411d31:	mov    esp,0xe6f172bb
  411d36:	xor    BYTE PTR [ebx-0x79],0xf5
  411d3a:	ins    DWORD PTR es:[edi],dx
  411d3b:	dec    ebx
  411d3c:	dec    eax
  411d3d:	push   ebx
  411d3e:	fst    DWORD PTR [eax]
  411d40:	mov    ebp,0x3d020e7b
  411d45:	cmp    BYTE PTR [edx+0x36],0x3e
  411d49:	xlat   BYTE PTR ds:[ebx]
  411d4a:	mov    ch,0x20
  411d4c:	fild   WORD PTR [edx]
  411d4e:	xchg   edx,eax
  411d4f:	(bad)  
  411d50:	cmp    ch,BYTE PTR [ecx]
  411d52:	inc    eax
  411d53:	jp     0x411cfb
  411d55:	jne    0x411d7d
  411d57:	cld    
  411d58:	cmp    DWORD PTR [ebx],ecx
  411d5a:	data16 jg 0x411d99
  411d5d:	cmc    
  411d5e:	shl    edx,1
  411d60:	add    BYTE PTR [esi+0x14],0x67
  411d64:	push   eax
  411d65:	fwait
  411d66:	xchg   ebx,eax
  411d67:	or     al,0xa8
  411d69:	jecxz  0x411d7c
  411d6b:	xlat   BYTE PTR ds:[ebx]
  411d6c:	add    eax,0x9f8ece56
  411d71:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411d73:	adc    dh,BYTE PTR [eax-0x13]
  411d76:	test   BYTE PTR [esi],bl
  411d78:	rcr    DWORD PTR [ebx+ebx*8],1
  411d7b:	push   0xbdc3e1f3
  411d80:	adc    ecx,edi
  411d82:	in     al,dx
  411d83:	xor    cl,BYTE PTR [edx-0x8]
  411d86:	jb     0x411d92
  411d88:	mov    edi,0xee83a327
  411d8d:	or     ebx,DWORD PTR ds:0xa45222d0
  411d93:	call   FWORD PTR [ecx+0x36386137]
  411d99:	jnp    0x411d6a
  411d9b:	xor    ah,cl
  411d9d:	ja     0x411d93
  411d9f:	fdiv   DWORD PTR [eax-0x7df035c5]
  411da5:	daa    
  411da6:	fdiv   st(7),st
  411da8:	(bad)  
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	mov    bl,0x54
  412036:	jge    0x412033
  412038:	fs (bad) 
  41203a:	cmp    DWORD PTR [esi-0x64],eax
  41203d:	push   ebp
  41203e:	sbb    DWORD PTR [ebp+esi*1-0x58],0x1f2d9
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	mov    ds:0x79cf9f04,al
  415643:	aam    0x0
  415645:	add    ah,dh
  415647:	add    al,0x0
  415649:	add    BYTE PTR [edx],cl
  41564b:	(bad)  
  41564c:	mov    ebx,0x23028029
  415651:	inc    edi
  415652:	sub    dh,BYTE PTR ds:0xd95430a8
  415658:	push   edi
  415659:	shl    DWORD PTR [ecx-0x62ced7ab],0x77
  415660:	sti    
  415661:	pop    es
  415662:	push   0x4f052e94
  415667:	xchg   DWORD PTR [esi],ebx
  415669:	and    bh,BYTE PTR [ebp+0x53]
  41566c:	test   DWORD PTR [edx],ebp
  41566e:	psubw  mm7,QWORD PTR [ecx-0x4240a4c3]
  415675:	hlt    
  415676:	add    DWORD PTR ds:0xbff95bb5,edi
  41567c:	inc    ebp
  41567d:	stos   DWORD PTR es:[edi],eax
  41567e:	lds    esi,FWORD PTR [edx+0x777aefb5]
  415684:	scas   eax,DWORD PTR es:[edi]
  415685:	xor    eax,0x4d638811
  41568a:	lea    esi,[eax]
  41568c:	xor    BYTE PTR [esi+0x5f],bl
  41568f:	jle    0x415652
  415691:	test   eax,0x42912697
  415696:	xchg   edx,eax
  415697:	dec    ebp
  415698:	in     eax,0x56
  41569a:	rol    DWORD PTR [edi],cl
  41569c:	pop    ss
  41569d:	into   
  41569e:	inc    ebp
  41569f:	(bad)  
  4156a0:	push   esi
  4156a1:	int    0x7d
  4156a3:	inc    edx
  4156a4:	ret    
  4156a5:	les    edx,FWORD PTR [eax]
  4156a7:	jp     0x4156ce
  4156a9:	out    dx,eax
  4156aa:	or     BYTE PTR [ecx],bh
  4156ac:	adc    bl,cl
  4156ae:	push   ebp
  4156af:	in     eax,dx
  4156b0:	xor    ebp,DWORD PTR [eax-0x27bb8d8e]
  4156b6:	sub    DWORD PTR [ebx-0x3d],esp
  4156b9:	ds es xchg edx,eax
  4156bc:	sahf   
  4156bd:	xchg   edi,eax
  4156be:	push   0x23
  4156c0:	dec    esi
  4156c1:	cmp    ebp,DWORD PTR [esi-0x71]
  4156c4:	xchg   edx,eax
  4156c5:	sub    al,0x3c
  4156c7:	inc    DWORD PTR [eax]
  4156c9:	ror    DWORD PTR [ecx-0x2f253739],0x39
  4156d0:	jle    0x415693
  4156d2:	lds    ebp,FWORD PTR [edx+0x6ca798b]
  4156d8:	dec    BYTE PTR [eax+0x21cfc77b]
  4156de:	ins    BYTE PTR es:[edi],dx
  4156df:	(bad)  
  4156e0:	jb     0x415691
  4156e2:	cmp    DWORD PTR [eax+ebp*2-0x4395d647],edi
  4156e9:	call   0x57f78d88
  4156ee:	(bad)  
  4156ef:	js     0x415764
  4156f1:	sysret 
  4156f3:	mov    edx,0x7beedd33
  4156f9:	or     eax,0xfeb5c74
  4156fe:	js     0x41576c
  415700:	or     DWORD PTR [ebx],esi
  415702:	lods   al,BYTE PTR ds:[esi]
  415703:	push   es
  415704:	cld    
  415705:	jnp    0x41577f
  415707:	ficomp DWORD PTR [edi+0x5ed1bf8a]
  41570d:	xchg   esi,eax
  41570e:	outs   dx,BYTE PTR ds:[esi]
  41570f:	lds    edi,FWORD PTR ds:0x878a8292
  415715:	mov    al,ds:0x603f08e
  41571a:	adc    BYTE PTR [ebx],cl
  41571c:	loop   0x415784
  41571e:	(bad)  
  41571f:	xchg   ebx,eax
  415720:	mov    DWORD PTR [ecx+0x5a8873be],esp
  415726:	or     BYTE PTR cs:[eax+ebp*8],dh
  41572a:	lods   eax,DWORD PTR ds:[esi]
  41572b:	in     al,0x1d
  41572d:	push   ebp
  41572e:	stos   BYTE PTR es:[edi],al
  41572f:	adc    dl,al
  415731:	pop    eax
  415732:	or     al,0xcd
  415734:	adc    BYTE PTR [edx-0x37],dl
  415737:	dec    edi
  415738:	and    BYTE PTR [ecx+edi*4+0x7f],ah
  41573c:	stc    
  41573d:	iret   
  41573e:	pop    esp
  41573f:	test   eax,0xd9d064c7
  415744:	mov    ah,0xda
  415746:	pop    es
  415747:	retf   
  415748:	inc    esp
  415749:	adc    edi,DWORD PTR [edi+0x52a266ba]
  41574f:	test   eax,0xa10eec27
  415754:	retf   0x45c6
  415757:	xor    ecx,DWORD PTR [ebx+0x5b9e0eb3]
  41575d:	shr    BYTE PTR [ecx],1
  41575f:	inc    ecx
  415760:	xor    eax,0x5eeda7c9
  415765:	(bad)  
  415766:	retf   
  415767:	outs   dx,BYTE PTR ss:[esi]
  415769:	xchg   BYTE PTR [edi],bh
  41576b:	mov    ebx,0x54dbd664
  415770:	pop    ebp
  415771:	dec    ecx
  415772:	arpl   WORD PTR [ebx-0x7],dx
  415775:	popa   
  415776:	loope  0x415727
  415778:	fisttp DWORD PTR [ebx]
  41577a:	dec    ebp
  41577b:	push   ebx
  41577c:	pop    ebx
  41577d:	retf   
  41577e:	mov    esi,0xb0fa5242
  415783:	or     BYTE PTR [eax+0x9ff2d33],cl
  415789:	mov    DWORD PTR [esi],edi
  41578b:	mov    dh,0xff
  41578d:	xchg   ebx,eax
  41578e:	cmp    BYTE PTR [edx+0x6a],0x44
  415792:	sbb    dh,bl
  415794:	cdq    
  415795:	jb     0x4157f4
  415797:	or     edi,ecx
  415799:	adc    al,0xbd
  41579b:	adc    edi,DWORD PTR ds:[ebx-0x247673b8]
  4157a2:	ror    DWORD PTR [ebx-0x5607618a],0x2
  4157a9:	mov    gs,WORD PTR [esi+eax*2]
  4157ac:	stos   DWORD PTR es:[edi],eax
  4157ad:	push   es
  4157ae:	(bad)  
  4157af:	xor    BYTE PTR [esi-0x20],bh
  4157b2:	fadd   st(3),st
  4157b4:	out    dx,eax
  4157b5:	lock retf 
  4157b7:	cmp    DWORD PTR [edi+0x78],ebp
  4157ba:	sbb    DWORD PTR [eax+edi*2-0x2e550d4a],ecx
  4157c1:	sbb    ch,dl
  4157c3:	test   BYTE PTR [ecx-0x3b],0xe7
  4157c7:	add    DWORD PTR [ecx],edx
  4157c9:	sbb    DWORD PTR [eax+0x420277ab],ecx
  4157cf:	loopne 0x415798
  4157d1:	xchg   edi,eax
  4157d2:	jg     0x41583e
  4157d4:	mov    ebp,0x3249b2bf
  4157d9:	and    al,BYTE PTR [ebx+0x4d]
  4157dc:	rcl    ecx,cl
  4157de:	into   
  4157df:	js     0x41581f
  4157e1:	dec    eax
  4157e2:	out    dx,al
  4157e3:	test   BYTE PTR [eax+eiz*8-0x6d],ah
  4157e7:	cmc    
  4157e8:	inc    edx
  4157e9:	dec    edx
  4157ea:	pop    ebx
  4157eb:	daa    
  4157ec:	lods   eax,DWORD PTR ds:[esi]
  4157ed:	dec    eax
  4157ee:	jmp    0x31bf154a
  4157f3:	(bad)  
  4157f4:	jecxz  0x41580d
  4157f6:	mov    dh,0xab
  4157f8:	adc    al,0xb3
  4157fa:	mov    edi,0x29e1e2cd
  4157ff:	rol    esi,cl
  415801:	scas   eax,DWORD PTR es:[edi]
  415802:	cmp    dl,bl
  415804:	cmc    
  415805:	add    bl,BYTE PTR [edx]
  415807:	(bad)  
  415808:	pop    edx
  415809:	push   ecx
  41580a:	xchg   ecx,eax
  41580b:	fimul  WORD PTR ds:[ebp+0x9eeaf8f]
  415812:	int    0xb2
  415814:	clc    
  415815:	mov    eax,0xc4f27a94
  41581a:	pop    ecx
  41581b:	dec    edx
  41581c:	dec    esi
  41581d:	cld    
  41581e:	leave  
  41581f:	sbb    DWORD PTR [ecx+0x7f],esi
  415822:	aas    
  415823:	inc    esp
  415824:	pop    eax
  415825:	jno    0x41583e
  415827:	fs cwde 
  415829:	mov    cl,0xec
  41582b:	jl     0x4157d1
  41582d:	cmp    eax,0x4cc24927
  415832:	jmp    0xd1f0:0xc9940d91
  415839:	adc    BYTE PTR [ebp-0x19728f07],cl
  41583f:	xor    eax,0xe0279ca
  415844:	pop    ebp
  415845:	std    
  415846:	sti    
  415847:	add    eax,0x383c88eb
  41584c:	sti    
  41584d:	jns    0x415851
  41584f:	outs   dx,DWORD PTR ds:[esi]
  415850:	dec    edx
  415851:	aad    0xd
  415853:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415855:	div    esp
  415857:	xor    cl,BYTE PTR [edx]
  415859:	mov    WORD PTR [edx+0x33],?
  41585c:	push   ebx
  41585d:	cmp    eax,0xbf99bf88
  415862:	mov    edi,0x2e70e553
  415867:	inc    ecx
  415868:	retf   
  415869:	out    0xcf,al
  41586b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586c:	cmp    al,0xb9
  41586e:	ss jle 0x415886
  415871:	dec    ecx
  415872:	hlt    
  415873:	je     0x41589a
  415875:	fmul   st,st(1)
  415877:	add    DWORD PTR [esi+0x25],ebx
  41587a:	lahf   
  41587b:	pop    eax
  41587c:	lds    edi,FWORD PTR [ecx]
  41587e:	cmp    BYTE PTR [edi],cl
  415880:	lock popf 
  415882:	inc    esi
  415883:	push   ss
  415884:	dec    ebx
  415885:	pop    es
  415886:	std    
  415887:	(bad)  [eax+0x4c]
  41588a:	xchg   edi,eax
  41588b:	mov    WORD PTR [ecx],fs
  41588d:	std    
  41588e:	jmp    0x4158ab
  415890:	imul   esi,edi,0xffffffd5
  415893:	dec    edi
  415894:	mov    ds:0x70c8975a,eax
  415899:	pushf  
  41589a:	pusha  
  41589b:	pop    edx
  41589c:	fisub  WORD PTR [ecx+edi*1-0x4856c37a]
  4158a3:	sbb    eax,0x1d10af26
  4158a8:	ss dec si
  4158ab:	sti    
  4158ac:	inc    ebp
  4158ad:	push   ebx
  4158ae:	outs   dx,DWORD PTR ds:[esi]
  4158af:	(bad)  
  4158b0:	imul   esp,esi,0xffffffee
  4158b3:	div    DWORD PTR [edi]
  4158b5:	cmp    al,0xc0
  4158b7:	fsub   QWORD PTR [ebx-0x2f]
  4158ba:	out    0xc2,al
  4158bc:	xchg   edx,eax
  4158bd:	stos   DWORD PTR es:[edi],eax
  4158be:	inc    edx
  4158bf:	xor    ebp,ebp
  4158c1:	daa    
  4158c2:	inc    ebp
  4158c3:	push   ss
  4158c4:	cmp    eax,0x35c1dba8
  4158c9:	out    dx,al
  4158ca:	clc    
  4158cb:	xchg   DWORD PTR [ebx],esi
  4158cd:	xor    DWORD PTR es:[eax-0x16],eax
  4158d1:	or     DWORD PTR [ebx],ecx
  4158d3:	leave  
  4158d4:	mov    ebx,0xd186f846
  4158d9:	mov    esp,esi
  4158db:	or     cl,BYTE PTR [esp+ebp*1+0x312a1ca2]
  4158e2:	xchg   ebp,eax
  4158e3:	imul   ebx,ebp,0x7c
  4158e6:	mov    eax,0x93e120a4
  4158eb:	xchg   ebp,eax
  4158ec:	adc    eax,0x6b96c2c2
  4158f1:	sti    
  4158f2:	mov    ebp,0x9c174bd5
  4158f7:	dec    esi
  4158f8:	jecxz  0x415893
  4158fa:	xor    BYTE PTR [eax],ah
  4158fc:	jo     0x41590c
  4158fe:	mov    bl,BYTE PTR [ebx-0x2b]
  415901:	jo     0x4158c5
  415903:	mov    BYTE PTR [edx+0x53],dl
  415906:	(bad)  
  415907:	sti    
  415908:	aaa    
  415909:	hlt    
  41590a:	inc    esi
  41590b:	lea    ecx,[ebp+0x2b5cc97d]
  415911:	pavgw  mm6,QWORD PTR [edi+0x5bd51f53]
  415918:	in     eax,0x17
  41591a:	fcomp  QWORD PTR [ecx+0x463f3834]
  415920:	pusha  
  415921:	adc    al,BYTE PTR [edx]
  415923:	pusha  
  415924:	outs   dx,BYTE PTR ds:[esi]
  415925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415926:	mov    bl,0xa5
  415928:	cs xchg esi,eax
  41592a:	ins    BYTE PTR es:[edi],dx
  41592b:	mov    ch,0x5e
  41592d:	dec    ecx
  41592e:	sub    ebx,DWORD PTR [ecx+0x3e]
  415931:	xlat   BYTE PTR ds:[ebx]
  415932:	fwait
  415933:	mov    eax,ds:0x3ca9d069
  415938:	push   edi
  415939:	in     eax,0x2
  41593b:	sar    BYTE PTR [edx-0x792383e],0xf8
  415942:	jl     0x41593c
  415944:	int    0x7c
  415946:	jo     0x415985
  415948:	sub    DWORD PTR [ebx-0x33],0x716ecc75
  41594f:	pop    edi
  415950:	push   esp
  415951:	sti    
  415952:	into   
  415953:	jne    0x415927
  415955:	(bad)  
  415956:	push   cs
  415957:	jo     0x41591d
  415959:	adc    al,0x8a
  41595b:	int3   
  41595c:	repz out dx,eax
  41595e:	psrad  mm0,mm6
  415961:	dec    ebx
  415962:	or     ecx,DWORD PTR [ebp-0x6]
  415965:	adc    eax,0x7f5987ea
  41596a:	imul   esi,DWORD PTR [eax+0x4ae92ac0],0x3fdc6f05
  415974:	xor    BYTE PTR [edx+0x5f9f6091],bh
  41597a:	adc    ebp,ebp
  41597c:	sbb    edi,DWORD PTR [edx+edx*8-0x25f69ab]
  415983:	push   esp
  415984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415985:	sub    dh,bh
  415987:	stc    
  415988:	dec    edi
  415989:	inc    esi
  41598a:	leave  
  41598b:	js     0x415949
  41598d:	out    0xec,al
  41598f:	repz sub esi,ebp
  415992:	(bad)  
  415993:	jecxz  0x4159c2
  415995:	ror    BYTE PTR [eax+ecx*4],0x94
  415999:	push   0x34476b31
  41599e:	jmp    0x1533:0x327c0e6e
  4159a5:	mov    WORD PTR [edx-0x4416f1e2],gs
  4159ab:	adc    DWORD PTR [edi+esi*4+0x3ec38570],edx
  4159b2:	aam    0xe7
  4159b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b5:	shl    DWORD PTR [edi+0x32dd52df],0xa1
  4159bc:	lods   al,BYTE PTR ds:[esi]
  4159bd:	xchg   ebp,eax
  4159be:	and    al,0x26
  4159c0:	mov    BYTE PTR [edx],dl
  4159c2:	shl    BYTE PTR [edx+0x7b8a8e9a],cl
  4159c8:	sub    DWORD PTR [ebx+0x13d73a54],esp
  4159ce:	dec    edx
  4159cf:	jne    0x415a4c
  4159d1:	push   ecx
  4159d2:	mov    edx,0x1ab5a94c
  4159d7:	add    ecx,DWORD PTR [edi]
  4159d9:	mov    ?,WORD PTR [esi-0x7cd0f34e]
  4159df:	push   esi
  4159e0:	stc    
  4159e1:	pop    ebx
  4159e2:	mov    ds:0x9dc81339,al
  4159e7:	mov    eax,DWORD PTR [edx-0x69ba1c83]
  4159ed:	sub    eax,DWORD PTR [ecx+0x1b50c1bc]
  4159f3:	and    ebx,DWORD PTR [esi-0x2762940a]
  4159f9:	test   bl,bh
  4159fb:	inc    esi
  4159fc:	cwde   
  4159fd:	imul   edx,DWORD PTR [ebp-0x5e],0x524aa758
  415a04:	jmp    0x4bc41e42
  415a09:	subps  xmm2,XMMWORD PTR [ebp-0x53fd833d]
  415a10:	daa    
  415a11:	jecxz  0x4159c9
  415a13:	inc    ebp
  415a14:	fidiv  WORD PTR [ecx-0x212a99b9]
  415a1a:	clc    
  415a1b:	mov    al,ds:0xd3d3a792
  415a20:	iret   
  415a21:	dec    ecx
  415a22:	out    dx,al
  415a23:	xlat   BYTE PTR ds:[ebx]
  415a25:	imul   edi,DWORD PTR [ecx],0x767cf29
  415a2b:	jge    0x4159d8
  415a2d:	je     0x415a26
  415a2f:	mov    BYTE PTR [ebp-0x14],bl
  415a32:	sbb    al,0x94
  415a34:	add    BYTE PTR [ebx-0x6d],0x2b
  415a38:	(bad)  [ecx+0x58]
  415a3b:	(bad)  
  415a3c:	cld    
  415a3d:	inc    edi
  415a3e:	push   es
  415a3f:	gs or  al,0x46
  415a42:	sahf   
  415a43:	xor    BYTE PTR [esi-0x19],al
  415a46:	add    eax,0x51e9e82b
  415a4b:	rol    ebx,1
  415a4d:	in     eax,0xa8
  415a4f:	jb     0x4159fd
  415a51:	iret   
  415a52:	lahf   
  415a53:	or     ch,BYTE PTR [ebx+ebx*1-0x2d40b251]
  415a5a:	mov    eax,0xf719d0c4
  415a5f:	in     al,dx
  415a60:	ret    
  415a61:	leave  
  415a62:	(bad)
  415a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a66:	pop    esi
  415a67:	cwde   
  415a68:	and    DWORD PTR [edx+0x53c86a82],edx
  415a6e:	mov    dl,0x86
  415a70:	jae    0x415a95
  415a72:	ret    
  415a73:	cwde   
  415a74:	mov    ebx,DWORD PTR [edx-0x3037e975]
  415a7a:	or     al,BYTE PTR [esi+0x10898228]
  415a80:	jecxz  0x415a99
  415a82:	xchg   edx,eax
  415a83:	pop    esi
  415a84:	cdq    
  415a85:	fwait
  415a86:	dec    edx
  415a87:	add    eax,0xf457f31e
  415a8c:	sbb    dh,bl
  415a8e:	adc    al,0x7d
  415a90:	in     al,dx
  415a91:	and    BYTE PTR [ebx+ebp*4+0x7c],dl
  415a95:	jg     0x415a93
  415a97:	jle    0x415b00
  415a99:	sub    al,0x67
  415a9b:	pusha  
  415a9c:	dec    ecx
  415a9d:	loopne 0x415aa1
  415a9f:	push   cs
  415aa0:	mov    edx,0x5a3c16fa
  415aa5:	inc    ecx
  415aa6:	fist   WORD PTR [eax]
  415aa8:	push   ecx
  415aa9:	push   0xffffffa9
  415aab:	lahf   
  415aac:	fsubp  st(6),st
  415aae:	mov    ch,0xdd
  415ab0:	push   ebx
  415ab1:	repnz dec edx
  415ab3:	fcom   QWORD PTR [eax]
  415ab5:	add    al,0x48
  415ab7:	cmp    al,0x59
  415ab9:	xchg   ebp,eax
  415aba:	in     al,0x2c
  415abc:	sbb    bh,BYTE PTR [ebp-0x6]
  415abf:	xor    dh,BYTE PTR [ecx+eiz*4]
  415ac2:	pop    ebp
  415ac3:	jle    0x415ab8
  415ac5:	enter  0x18bf,0xe4
  415ac9:	mov    edx,0x57ec946a
  415ace:	int3   
  415acf:	arpl   si,sp
  415ad1:	test   BYTE PTR [edi+0x6c],dh
  415ad4:	push   ecx
  415ad5:	jmp    0xfef1fef0
  415ada:	xchg   edx,eax
  415adb:	das    
  415adc:	xchg   edx,eax
  415add:	test   DWORD PTR [eax+0x6db7eb3d],edx
  415ae3:	or     DWORD PTR [edi+0x458186ae],esi
  415ae9:	push   es
  415aea:	or     esp,DWORD PTR [eax+0x4d]
  415aed:	push   cs
  415aee:	and    dl,bh
  415af0:	fiadd  WORD PTR [eax+edx*2]
  415af3:	lods   eax,DWORD PTR ds:[esi]
  415af4:	leave  
  415af5:	ss std 
  415af7:	cmc    
  415af8:	push   es
  415af9:	xchg   edx,eax
  415afa:	sti    
  415afb:	pop    ds
  415afc:	adc    eax,0xa9ec8b33
  415b01:	sahf   
  415b02:	cwde   
  415b03:	or     esp,edi
  415b05:	mov    BYTE PTR [edx],0xdc
  415b08:	scas   eax,DWORD PTR es:[edi]
  415b09:	(bad)  
  415b0b:	test   eax,0x1e2492fe
  415b10:	sub    eax,0x2b8dddbe
  415b15:	loopne 0x415b84
  415b17:	cmp    BYTE PTR [edx+0x59],ch
  415b1a:	jb     0x415b39
  415b1c:	dec    edx
  415b1d:	add    dh,BYTE PTR [esi+0x15]
  415b20:	call   FWORD PTR [ebx]
  415b22:	and    BYTE PTR [esp+ebx*1-0x77],cl
  415b26:	leave  
  415b27:	popf   
  415b28:	inc    esi
  415b2a:	dec    edi
  415b2b:	(bad)
  415b2f:	adc    BYTE PTR [ecx-0x2b6487e2],bl
  415b35:	mov    eax,ds:0x93e1de77
  415b3a:	mov    ebx,0x477bbb
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	sub    BYTE PTR [edx-0x2692ddce],al
  415b54:	add    BYTE PTR [eax],al
  415b56:	hlt    
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR ds:0x3abd3df5,dh
  415b5f:	int3   
  415b60:	out    0x1d,al
  415b62:	cmp    dl,BYTE PTR [edx]
  415b64:	pop    ss
  415b65:	push   esp
  415b66:	out    0x79,eax
  415b68:	and    dl,BYTE PTR [edx]
  415b6a:	(bad)  
  415b6b:	xor    DWORD PTR [esi],edx
  415b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b6e:	shl    DWORD PTR ds:0x23c61ebc,1
  415b74:	inc    esp
  415b75:	or     al,0x33
  415b77:	(bad)  
  415b78:	in     al,0x12
  415b7a:	pop    ecx
  415b7b:	cmp    al,BYTE PTR [edi-0x36463c6c]
  415b81:	rol    DWORD PTR [esi],cl
  415b83:	jge    0x415b18
  415b85:	pop    ebx
  415b86:	cdq    
  415b87:	jl     0x415b57
  415b89:	out    dx,al
  415b8a:	test   ch,bl
  415b8c:	and    DWORD PTR [edx+0x60],ebp
  415b8f:	jb     0x415bc7
  415b91:	xchg   DWORD PTR [eax],esp
  415b93:	rol    BYTE PTR [eax],cl
  415b95:	out    0x7,al
  415b97:	add    eax,0x2d3ea30e
  415b9c:	or     al,0xfa
  415b9e:	in     al,dx
  415b9f:	(bad)  
  415ba0:	jmp    0x2135fd1c
  415ba5:	(bad)  [esi-0x60]
  415ba8:	mov    bl,0xf8
  415baa:	cld    
  415bab:	fistp  WORD PTR [ebx+eiz*4+0x57b2f1a1]
  415bb2:	fmul   DWORD PTR [esi]
  415bb4:	mov    WORD PTR cs:[edx],ss
  415bb7:	or     eax,DWORD PTR [esi]
  415bb9:	daa    
  415bba:	xchg   edi,eax
  415bbb:	inc    edx
  415bbc:	jp     0x415bb0
  415bbe:	or     BYTE PTR [ebx-0x468a088b],bl
  415bc4:	push   esp
  415bc5:	fs mov esi,?
  415bc8:	stos   BYTE PTR es:[edi],al
  415bc9:	push   ds
  415bca:	xchg   ebx,eax
  415bcb:	inc    edx
  415bcc:	add    bh,dl
  415bce:	xchg   DWORD PTR [edi-0x2c],esp
  415bd1:	inc    ebx
  415bd2:	adc    eax,0xad2a1d72
  415bd7:	dec    esi
  415bd8:	xor    DWORD PTR [edi+ecx*4],edi
  415bdb:	pop    edi
  415bdc:	push   ebx
  415bdd:	cmp    cl,BYTE PTR [edx+0x32]
  415be0:	mov    bl,BYTE PTR [ebp-0x5ccefd3c]
  415be6:	or     BYTE PTR [ebx-0x1c],0xbc
  415bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415beb:	jbe    0x415bdd
  415bed:	(bad)  
  415bef:	inc    ecx
  415bf0:	pop    ss
  415bf1:	loopne 0x415c0a
  415bf3:	push   ecx
  415bf4:	xchg   edx,eax
  415bf5:	cmp    al,0xa0
  415bf7:	pusha  
  415bf8:	xor    eax,0xec442d55
  415bfd:	(bad)  
  415bfe:	js     0x415bd3
  415c00:	rcl    DWORD PTR [eax],1
  415c02:	out    0x3e,al
  415c04:	pop    eax
  415c05:	jmp    0xdfc8d3c0
  415c0a:	add    al,0x73
  415c0c:	push   ebp
  415c0d:	push   edx
  415c0e:	sar    BYTE PTR [esi+0x5d],cl
  415c11:	mov    edx,DWORD PTR [ecx-0x7c]
  415c14:	test   DWORD PTR [esp+edx*2],esp
  415c17:	hlt    
  415c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c19:	mov    WORD PTR [ecx-0x1797e3eb],ss
  415c1f:	add    esp,DWORD PTR [edi+0x5a464750]
  415c25:	(bad)  
  415c26:	in     al,dx
  415c27:	scas   al,BYTE PTR es:[edi]
  415c28:	jb     0x415bab
  415c2a:	aam    0x4a
  415c2c:	ret    0x1af0
  415c2f:	cmc    
  415c30:	cdq    
  415c31:	shl    DWORD PTR [edx+0x1d],0xec
  415c35:	out    0x3f,eax
  415c37:	lods   eax,DWORD PTR ds:[esi]
  415c38:	ins    BYTE PTR es:[edi],dx
  415c39:	into   
  415c3a:	loopne 0x415c13
  415c3c:	push   ebp
  415c3d:	push   eax
  415c3e:	outs   dx,BYTE PTR ds:[esi]
  415c3f:	call   0xc2b2:0xfb35f57c
  415c46:	add    DWORD PTR [eax-0x53dd58f4],0xffffffdc
  415c4d:	pop    ebp
  415c4e:	cmp    dl,BYTE PTR [edi]
  415c50:	popf   
  415c51:	mov    bh,0xf2
  415c53:	int    0x98
  415c55:	mov    ds:0xfd4075e4,al
  415c5a:	jno    0x415cb1
  415c5c:	test   ah,al
  415c5e:	ins    BYTE PTR es:[edi],dx
  415c5f:	pop    edi
  415c60:	hlt    
  415c61:	cs cbw 
  415c64:	jo     0x415cd6
  415c66:	sbb    DWORD PTR [edi],esp
  415c68:	fadd   QWORD PTR [edx]
  415c6a:	xor    eax,0x6f7bcf1f
  415c6f:	adc    eax,0x2f92c15
  415c74:	cwde   
  415c75:	cdq    
  415c76:	idiv   edi
  415c78:	dec    edi
  415c79:	fcmovne st,st(3)
  415c7b:	ret    
  415c7c:	das    
  415c7d:	jp     0x415cf4
  415c7f:	or     eax,0x2b4f6531
  415c84:	psrad  mm6,mm7
  415c87:	ror    BYTE PTR [ebp-0x33],cl
  415c8a:	test   eax,0x4ff1228d
  415c90:	sbb    BYTE PTR [eax],ah
  415c92:	daa    
  415c93:	mov    bh,dh
  415c95:	add    al,0x69
  415c97:	(bad)  
  415c98:	jnp    0x415cd5
  415c9a:	mov    DWORD PTR [eax*2+0x431d94b2],ebx
  415ca1:	xchg   ebx,eax
  415ca2:	fucomp st(7)
  415ca4:	gs lock dec ebx
  415ca7:	and    al,bl
  415ca9:	aam    0xbf
  415cab:	mov    bl,BYTE PTR [edi+0x49e9e770]
  415cb1:	jae    0x415c87
  415cb3:	shl    DWORD PTR [ecx],cl
  415cb5:	adc    eax,0xcd677dca
  415cba:	pusha  
  415cbb:	and    BYTE PTR [edx-0x7d],0x47
  415cbf:	arpl   WORD PTR [ebx-0x4],sp
  415cc2:	mov    eax,DWORD PTR [ebp-0x54]
  415cc5:	mov    edx,0x9263db11
  415cca:	(bad)  [eax]
  415ccc:	xlat   BYTE PTR ds:[ebx]
  415ccd:	push   0x33165e23
  415cd2:	xlat   BYTE PTR ds:[ebx]
  415cd3:	jg     0x415d26
  415cd5:	(bad)  
  415cd6:	frstor [ebp-0x4]
  415cd9:	in     al,dx
  415cda:	mov    edx,0x4961db2e
  415cdf:	out    0x99,al
  415ce1:	mov    bl,0x26
  415ce3:	fldenv [esi-0x6d]
  415ce6:	loop   0x415c97
  415ce8:	mov    cl,ah
  415cea:	dec    esi
  415ceb:	stos   BYTE PTR es:[edi],al
  415cec:	int    0xfb
  415cee:	xor    dl,BYTE PTR cs:[edi+0x1]
  415cf2:	dec    ebp
  415cf3:	mov    esi,0x3f9beef1
  415cf8:	mov    bh,0xea
  415cfa:	jns    0x415d38
  415cfc:	enter  0x6b6b,0x23
  415d00:	push   0xffffffc8
  415d02:	push   ecx
  415d03:	out    0xb0,eax
  415d05:	inc    esi
  415d06:	and    ebp,DWORD PTR [ebp+0xb8ed75d]
  415d0c:	and    BYTE PTR [ebx-0x1b],bh
  415d0f:	loopne 0x415ce8
  415d11:	cmc    
  415d12:	or     eax,DWORD PTR [edx-0x4f]
  415d15:	fimul  WORD PTR es:[edi]
  415d18:	ret    0x5feb
  415d1b:	mov    esp,0x1611c11d
  415d20:	mov    dh,0x73
  415d22:	add    al,0xa4
  415d24:	sbb    BYTE PTR [eax-0x54eaadeb],bh
  415d2a:	pop    esp
  415d2b:	test   ebx,ebp
  415d2d:	jne    0x415d0f
  415d2f:	or     eax,0x7d92e902
  415d34:	iret   
  415d35:	cli    
  415d36:	idiv   DWORD PTR [edx-0x3a]
  415d39:	leave  
  415d3a:	push   ss
  415d3b:	shl    DWORD PTR [edx-0xec01b10],cl
  415d41:	sub    esi,edi
  415d43:	(bad)  
  415d44:	stos   DWORD PTR es:[edi],eax
  415d45:	rcr    BYTE PTR [edx],0xc9
  415d48:	sub    ch,bl
  415d4a:	fdiv   DWORD PTR [ecx-0x1]
  415d4d:	push   ecx
  415d4e:	stos   BYTE PTR es:[edi],al
  415d4f:	mov    ebx,0x71e41aa6
  415d54:	test   DWORD PTR [bx+si+0x4e20],0xd0dd3b98
  415d5d:	sbb    BYTE PTR [eax+0x265420b4],al
  415d63:	xor    ebp,DWORD PTR [ebp+0x3b2fce02]
  415d69:	shr    DWORD PTR [ecx],0xcc
  415d6c:	cld    
  415d6d:	pop    edi
  415d6e:	enter  0x1f15,0xc1
  415d72:	setae  BYTE PTR ds:0x4d4b7f43
  415d79:	scas   al,BYTE PTR es:[edi]
  415d7a:	mov    bh,dl
  415d7c:	add    DWORD PTR [edx+0x373c5930],esp
  415d82:	neg    al
  415d84:	inc    ebp
  415d85:	repnz mov DWORD PTR [ebp-0x465b0f9a],edx
  415d8c:	inc    ebx
  415d8d:	add    al,0x65
  415d8f:	data16 mov bh,0xc9
  415d92:	add    ch,BYTE PTR [ecx-0x595e750c]
  415d98:	push   es
  415d99:	or     ecx,DWORD PTR [edi+0x11c5fd62]
  415d9f:	imul   ecx,DWORD PTR [ecx+0x31],0xfffffff8
  415da3:	sbb    eax,0x7a542a26
  415da8:	mov    edi,edx
  415daa:	hlt    
  415dab:	jns    0x415d8f
  415dad:	jbe    0x415d36
  415daf:	jge    0x415d55
  415db1:	mov    BYTE PTR [edx+0x4c61586],ch
  415db7:	pop    ecx
  415db8:	mov    DWORD PTR [ebp+0x1e],esp
  415dbb:	sbb    eax,0x563ef54a
  415dc0:	mov    ah,0x95
  415dc2:	jmp    0xe0b79bc4
  415dc7:	(bad)  
  415dc8:	mov    al,0xdc
  415dca:	sbb    al,0x21
  415dcc:	pop    edx
  415dcd:	sti    
  415dce:	or     bh,BYTE PTR [edi+esi*8]
  415dd1:	mov    ebp,0xefa6060a
  415dd6:	mov    ecx,0xa2527363
  415ddb:	dec    edx
  415ddc:	sub    BYTE PTR [edx-0x5b],dl
  415ddf:	outs   dx,BYTE PTR ds:[esi]
  415de0:	cli    
  415de1:	mov    ebp,DWORD PTR [edi]
  415de3:	js     0x415db4
  415de5:	sbb    eax,0xe1459a27
  415dea:	mov    ah,0x44
  415dec:	loope  0x415e58
  415dee:	cmc    
  415def:	ins    DWORD PTR es:[edi],dx
  415df0:	mov    dl,0x63
  415df2:	out    0xc,al
  415df4:	push   ebx
  415df5:	inc    ecx
  415df6:	in     al,0x95
  415df8:	jbe    0x415e15
  415dfa:	adc    eax,0xd04b2c8
  415dff:	or     BYTE PTR [ecx],al
  415e01:	jo     0x415e6c
  415e03:	xchg   edi,eax
  415e04:	sub    edx,DWORD PTR [ecx+0x41]
  415e07:	jo     0x415df4
  415e09:	mov    ds:0xf0f47287,al
  415e0e:	int    0x1a
  415e10:	jge    0x415e7a
  415e12:	sbb    esi,edi
  415e14:	bound  eax,QWORD PTR [edi-0x57]
  415e17:	add    edx,edi
  415e19:	test   al,0xe0
  415e1b:	mov    edi,0xa4a1f759
  415e20:	pop    esi
  415e21:	(bad)  
  415e22:	les    edi,FWORD PTR [edx-0x394f1bc2]
  415e28:	aam    0xb0
  415e2a:	shl    BYTE PTR [esi+0x4487008b],1
  415e30:	inc    esp
  415e31:	dec    ebp
  415e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e33:	test   eax,0xb3739977
  415e38:	xchg   esi,eax
  415e39:	das    
  415e3a:	pushf  
  415e3b:	cmp    DWORD PTR [eax-0x61],edx
  415e3e:	in     eax,0x90
  415e40:	push   ecx
  415e41:	pop    ebp
  415e42:	mov    ds:0x330bbe66,al
  415e47:	aam    0xa2
  415e49:	jl     0x415e3b
  415e4b:	or     DWORD PTR cs:[esi+0x62785646],0xacde2645
  415e56:	mov    ah,0x55
  415e58:	nop
  415e59:	ret    0x6beb
  415e5c:	arpl   WORD PTR [ebx],cx
  415e5e:	add    DWORD PTR ds:0x1c14d382,esp
  415e64:	pushf  
  415e65:	mov    eax,ds:0x968eef87
  415e6a:	stos   BYTE PTR es:[edi],al
  415e6b:	mov    ch,0x37
  415e6d:	sub    al,0x72
  415e70:	arpl   WORD PTR [ebx+0x2cf8b1ad],bp
  415e76:	push   0x694ac08a
  415e7b:	popf   
  415e7c:	mov    ebp,0x25a76d05
  415e81:	hlt    
  415e82:	sbb    edi,DWORD PTR [esi]
  415e84:	rcr    DWORD PTR [esi-0x145c1f76],1
  415e8a:	mov    DWORD PTR [eax+0x30153610],esp
  415e90:	mov    al,0x96
  415e92:	adc    al,0x85
  415e94:	sub    BYTE PTR [esi+0x23],ch
  415e97:	sahf   
  415e98:	fimul  WORD PTR [ebx-0x7e]
  415e9b:	mov    ch,0x7d
  415e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e9e:	mov    ds:0xb4d2b722,al
  415ea3:	sar    DWORD PTR [esi-0x690b6bca],cl
  415ea9:	popa   
  415eaa:	enter  0xa57e,0xf5
  415eae:	mov    edx,0x86640411
  415eb3:	jmp    0xce1985c6
  415eb8:	push   esi
  415eb9:	xchg   ebp,eax
  415eba:	xchg   ecx,eax
  415ebb:	mov    dl,0xed
  415ebd:	(bad)  
  415ebe:	cmp    BYTE PTR [ebp-0x24ddb63d],ch
  415ec4:	jl     0x415e4a
  415ec6:	sti    
  415ec7:	mov    esi,0x43b5d252
  415ecc:	or     BYTE PTR [ebp+0x37a4fb6f],ah
  415ed2:	int3   
  415ed3:	in     eax,0x89
  415ed5:	aam    0x50
  415ed7:	int3   
  415ed8:	and    bh,BYTE PTR [ecx-0x5a]
  415edb:	loopne 0x415f1e
  415edd:	mov    esp,DWORD PTR [ebp-0x1e37a05d]
  415ee3:	test   dh,dl
  415ee5:	mov    al,ds:0x8363931d
  415eea:	shl    BYTE PTR ds:0x66fe34e1,cl
  415ef0:	repnz in eax,dx
  415ef2:	mov    BYTE PTR [ecx-0x5466c760],ah
  415ef8:	pop    esp
  415ef9:	or     esi,DWORD PTR [edi-0x3f]
  415efc:	adc    edx,ecx
  415efe:	ins    DWORD PTR es:[edi],dx
  415eff:	in     al,0x1
  415f01:	add    al,0x7
  415f03:	outs   dx,DWORD PTR ds:[esi]
  415f04:	adc    bh,BYTE PTR [eax+0x2a]
  415f07:	cmc    
  415f08:	sbb    al,0x32
  415f0a:	out    dx,eax
  415f0b:	xchg   BYTE PTR [edx],bh
  415f0d:	and    eax,0x30978c15
  415f12:	cdq    
  415f13:	lock jecxz 0x415f48
  415f16:	ja     0x415f04
  415f18:	mov    ch,0x47
  415f1a:	push   es
  415f1b:	adc    eax,0xc22978a0
  415f20:	adc    DWORD PTR [edi-0x2626430c],0xc061b978
  415f2a:	test   eax,0xe64d2beb
  415f2f:	ss cmp al,cl
  415f32:	pushf  
  415f33:	cld    
  415f34:	mov    eax,0x781c9319
  415f39:	mov    ebx,0xbe84ee1c
  415f3e:	cmp    BYTE PTR [ebp-0xd],cl
  415f41:	scas   eax,DWORD PTR es:[edi]
  415f42:	popf   
  415f43:	jl     0x415f06
  415f45:	lock sub dl,BYTE PTR [edx+ebp*4-0xbbf5810]
  415f4d:	pop    esi
  415f4e:	mov    bl,BYTE PTR [esi+0x22eeb5d4]
  415f54:	test   DWORD PTR [eax],esi
  415f56:	outs   dx,DWORD PTR ds:[esi]
  415f57:	and    cl,bh
  415f59:	sbb    al,0xbf
  415f5b:	test   al,0x71
  415f5d:	pop    edi
  415f5e:	(bad)  
  415f5f:	dec    ebp
  415f60:	pop    esp
  415f61:	dec    esi
  415f62:	mov    eax,0xf4b2f72d
  415f67:	mov    ecx,0x426df122
  415f6c:	mov    ch,0x53
  415f6e:	push   ss
  415f6f:	iret   
  415f70:	adc    eax,0x5f3d3c41
  415f75:	mov    WORD PTR [ecx],fs
  415f77:	push   ebx
  415f78:	dec    edi
  415f79:	stos   DWORD PTR es:[edi],eax
  415f7a:	dec    ecx
  415f7b:	(bad)  
  415f7c:	jmp    0x5b61:0xd6328190
  415f83:	sub    eax,0xe264fcf1
  415f88:	cmp    eax,0x7ee20d78
  415f8d:	fldcw  WORD PTR [edi-0x6acade02]
  415f93:	push   eax
  415f94:	call   0x8da9:0x43ad89b8
  415f9b:	xchg   esp,eax
  415f9c:	adc    edi,DWORD PTR [esi]
  415f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f9f:	add    cl,BYTE PTR [eax]
  415fa1:	fwait
  415fa2:	xor    BYTE PTR [edx-0x7b],0x4b
  415fa6:	mov    ah,0x6
  415fa8:	xchg   ebp,eax
  415fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415faa:	push   edx
  415fab:	gs pop edi
  415fad:	mov    ebx,0x2774bad7
  415fb2:	or     BYTE PTR [ecx-0x822595c],cl
  415fb8:	or     al,0x44
  415fba:	test   BYTE PTR [ecx-0x6330c893],bh
  415fc0:	push   es
  415fc1:	cli    
  415fc2:	hlt    
  415fc3:	jge    0x415f54
  415fc5:	std    
  415fc6:	(bad)  
  415fc7:	pushf  
  415fc8:	std    
  415fc9:	xor    BYTE PTR [ebp-0x8ae7ea1],0x59
  415fd0:	call   0x55ef:0x177796d1
  415fd7:	leave  
  415fd8:	push   esp
  415fd9:	jno    0x415fbb
  415fdb:	xchg   edi,eax
  415fdc:	shl    DWORD PTR [edi],1
  415fde:	jb     0x415fe8
  415fe0:	mov    bl,0x61
  415fe2:	in     al,0x3a
  415fe4:	fisubr WORD PTR [edi+0x7baa1d88]
  415fea:	or     DWORD PTR [edi-0x38],ebx
  415fed:	adc    BYTE PTR [ecx+edi*2-0x1bce69eb],al
  415ff4:	mov    edx,0xcd8fa7c3
  415ff9:	jbe    0x416079
  415ffb:	add    BYTE PTR [esi-0x6e],cl
  415ffe:	fisttp WORD PTR [eax-0x59e7697b]
  416004:	sti    
  416005:	add    DWORD PTR [edx-0x52],eax
  416008:	adc    dh,ch
  41600a:	clc    
  41600b:	std    
  41600c:	xchg   ebx,eax
  41600d:	test   DWORD PTR [ebp+ebx*1-0x53e132a6],ebp
  416014:	push   ds
  416015:	pop    edx
  416016:	jo     0x415ff0
  416018:	mov    cl,0xe6
  41601a:	outs   dx,DWORD PTR ds:[esi]
  41601b:	inc    edi
  41601c:	call   DWORD PTR [esi]
  41601e:	out    dx,al
  41601f:	lods   eax,DWORD PTR ds:[esi]
  416020:	daa    
  416021:	pop    ecx
  416022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416023:	mov    esi,0x7cdbd903
  416028:	stos   DWORD PTR es:[edi],eax
  416029:	popa   
  41602a:	adc    al,0xe2
  41602c:	xchg   BYTE PTR [ecx],bh
  41602e:	mov    ch,BYTE PTR [esi+0xd]
  416031:	dec    ebx
  416032:	inc    eax
  416033:	in     eax,dx
  416034:	inc    esi
  416035:	stos   BYTE PTR es:[edi],al
  416036:	sub    al,0x2c
  416038:	jb     0x415fcb
  41603a:	mov    esp,0x2c987bf
  41603f:	jg     0x416075
  416041:	add    ecx,DWORD PTR [edi]
  416043:	cld    
  416044:	js     0x416050
  416046:	test   DWORD PTR ds:0x16a14538,0x2a47
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x416070
  41605f:	cmp    BYTE PTR [edi+0xde61aa],ch
  416065:	add    ah,dh
  416067:	add    al,0x0
  416069:	add    BYTE PTR [ebx],bl
  41606b:	outs   dx,BYTE PTR ds:[esi]
  41606c:	out    dx,al
  41606d:	xor    al,0x9
  41606f:	push   cs
  416070:	aad    0x80
  416072:	fmul   DWORD PTR [ebp+0x41]
  416075:	out    dx,eax
  416076:	mov    ah,0x98
  416078:	ja     0x4160e3
  41607a:	stc    
  41607b:	cs cmp al,0x2f
  41607e:	xchg   esi,eax
  41607f:	inc    edi
  416080:	in     al,0x45
  416082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416084:	arpl   WORD PTR [edx],si
  416086:	add    eax,0xe1ada238
  41608b:	stos   DWORD PTR es:[edi],eax
  41608c:	ss std 
  41608e:	std    
  41608f:	mov    eax,ds:0x11d220f7
  416094:	mov    edi,0x231ef83f
  416099:	(bad)  
  41609a:	jp     0x41608b
  41609c:	and    BYTE PTR [eax+0x2e2fa1d9],dl
  4160a2:	add    al,0x69
  4160a4:	aad    0xee
  4160a6:	imul   ebp,DWORD PTR cs:[edi],0xffffffa6
  4160aa:	sub    esi,DWORD PTR [ebp+ebp*4+0x676f139b]
  4160b1:	aaa    
  4160b2:	pop    esp
  4160b3:	jmp    0xa8c18d51
  4160b8:	push   ss
  4160b9:	dec    esi
  4160ba:	(bad)  
  4160bb:	xor    ch,cl
  4160bd:	fistp  WORD PTR [ebp-0x80]
  4160c0:	add    bh,BYTE PTR [ebp+0x1b]
  4160c3:	ror    BYTE PTR ds:0xc51b9b0b,1
  4160c9:	cli    
  4160ca:	mov    DWORD PTR es:[eax-0x26],esi
  4160ce:	bound  eax,QWORD PTR [ebx+ebx*1]
  4160d1:	xchg   ebx,eax
  4160d2:	js     0x416096
  4160d4:	push   ecx
  4160d5:	jp     0x416128
  4160d7:	push   ss
  4160d8:	sub    eax,0x7bad48d0
  4160dd:	mov    dl,0x6
  4160df:	mov    ebx,0xd5e0c6c1
  4160e4:	lds    esi,FWORD PTR [ebx]
  4160e6:	out    0xd7,al
  4160e8:	clc    
  4160e9:	sti    
  4160ea:	int3   
  4160eb:	inc    eax
  4160ec:	call   0x7562087b
  4160f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f2:	ror    BYTE PTR [ebx],cl
  4160f4:	out    dx,eax
  4160f5:	outs   dx,BYTE PTR ds:[esi]
  4160f6:	or     bh,ch
  4160f8:	je     0x41608b
  4160fa:	cmp    al,0x24
  4160fc:	jmp    0xa94c:0x1049056e
  416103:	cmp    BYTE PTR [esi+0x1b963685],bh
  416109:	add    ebx,DWORD PTR [ebx-0x73cb2a59]
  41610f:	mul    DWORD PTR [esi]
  416111:	and    ch,bh
  416113:	retf   0xdbba
  416116:	gs pop eax
  416118:	retf   0xe3b8
  41611b:	push   ss
  41611c:	cmp    BYTE PTR [bp+0x4d4],dh
  416121:	sar    edx,0x63
  416124:	pop    ebx
  416125:	sbb    dh,dh
  416127:	add    eax,0xc61c061a
  41612c:	push   edx
  41612d:	daa    
  41612e:	imul   BYTE PTR [edi+ebx*4+0x27]
  416132:	sub    al,0xe7
  416134:	adc    eax,0xc2caa61e
  416139:	push   ecx
  41613a:	mov    al,0x7e
  41613c:	xchg   edx,eax
  41613d:	dec    ebp
  41613e:	or     DWORD PTR [ebp+0x432da68c],esp
  416144:	jle    0x4160e8
  416146:	mov    bl,0xa5
  416148:	test   BYTE PTR [ecx+0x62],bh
  41614b:	shl    esi,cl
  41614d:	xchg   esp,eax
  41614e:	mov    esi,0x4529f48f
  416153:	or     al,0x99
  416155:	lahf   
  416156:	jno    0x4161a2
  416158:	ds aam 0x98
  41615b:	fild   DWORD PTR [eax-0x79]
  41615e:	adc    eax,0x4bf202a2
  416163:	xor    al,0x50
  416165:	dec    ecx
  416166:	sub    eax,0xee3878cc
  41616b:	jmp    0xe460fb78
  416170:	in     eax,0xc2
  416172:	jp     0x416157
  416174:	imul   ebx,DWORD PTR [edi+edi*1-0x2e],0xffffffbf
  416179:	repz add al,0x64
  41617c:	dec    ecx
  41617d:	or     DWORD PTR [ebx-0x5c],ebp
  416180:	push   edi
  416181:	pop    esp
  416182:	loopne 0x416107
  416184:	pop    ebx
  416185:	sbb    al,0x63
  416187:	dec    esi
  416188:	mov    BYTE PTR [edi-0x5b6cb4c7],bl
  41618e:	add    eax,0x6e3155d0
  416193:	gs (bad) 
  416196:	fild   QWORD PTR [ecx+0x1b]
  416199:	xor    dh,bh
  41619b:	shl    DWORD PTR [eax+0x4e],1
  41619e:	int    0xbc
  4161a0:	and    ch,al
  4161a2:	sbb    BYTE PTR [ebp-0x4b723f8],bl
  4161a8:	mov    bh,dl
  4161aa:	xchg   ebx,ecx
  4161ac:	add    bl,BYTE PTR [edx]
  4161ae:	mov    ebx,0x8981eb26
  4161b3:	lds    ecx,FWORD PTR [ecx-0x35]
  4161b6:	add    dl,al
  4161b8:	fwait
  4161b9:	cdq    
  4161ba:	pusha  
  4161bb:	mov    DWORD PTR [ebx-0x62],edi
  4161be:	adc    esp,DWORD PTR [ecx-0x6a]
  4161c1:	pusha  
  4161c2:	add    al,0x38
  4161c4:	scas   eax,DWORD PTR es:[edi]
  4161c5:	push   ebx
  4161c6:	iret   
  4161c7:	lods   al,BYTE PTR ds:[esi]
  4161c8:	sub    DWORD PTR [ecx-0x68aba38a],eax
  4161ce:	jmp    0x211516f1
  4161d3:	sub    ch,dl
  4161d5:	jecxz  0x4161cc
  4161d7:	or     eax,0x471edf13
  4161dc:	mov    eax,0x83c0be20
  4161e1:	in     eax,dx
  4161e2:	and    al,0x6e
  4161e4:	xchg   esp,eax
  4161e5:	das    
  4161e6:	fidiv  DWORD PTR [ecx]
  4161e8:	dec    esp
  4161e9:	ret    
  4161ea:	mov    dh,0xad
  4161ec:	(bad)  [edx+0x5c07eaee]
  4161f2:	xchg   ebp,eax
  4161f3:	dec    ebp
  4161f4:	push   edx
  4161f5:	mov    ds:0x5028d563,eax
  4161fa:	sti    
  4161fb:	xchg   edx,eax
  4161fc:	cmp    BYTE PTR [ebp+esi*4-0x80],bh
  416200:	and    al,0xbc
  416202:	adc    DWORD PTR [ecx+0x30],0x6ab0546b
  416209:	aam    0x6b
  41620b:	std    
  41620c:	js     0x4161c7
  41620e:	mul    DWORD PTR [esi-0x7]
  416211:	push   0x129c3a20
  416216:	fiadd  WORD PTR [edx-0x15]
  416219:	pop    ds
  41621a:	ficom  WORD PTR [edi]
  41621c:	jb     0x4161bb
  41621e:	and    al,0x6e
  416220:	xor    esi,DWORD PTR [edx-0x50f6aa52]
  416226:	xchg   ecx,eax
  416227:	ss hlt 
  416229:	mov    ch,0x95
  41622b:	cmp    al,0xe
  41622d:	push   edi
  41622e:	mov    dl,0x83
  416230:	in     eax,0xb
  416232:	outs   dx,DWORD PTR ds:[esi]
  416233:	jg     0x4161c4
  416235:	into   
  416236:	or     BYTE PTR [ebx],ah
  416238:	in     eax,0x70
  41623a:	mov    eax,ds:0x73e301e
  41623f:	dec    edi
  416240:	adc    DWORD PTR [edi+0x73d56337],ebx
  416246:	dec    esp
  416247:	mov    bl,0x2c
  416249:	in     eax,dx
  41624a:	das    
  41624b:	dec    eax
  41624c:	push   es
  41624d:	pop    esp
  41624e:	adc    esp,eax
  416250:	inc    edi
  416251:	fadd   st,st(3)
  416253:	inc    esp
  416254:	push   cs
  416255:	pop    eax
  416256:	shr    DWORD PTR [esi],1
  416258:	cdq    
  416259:	test   eax,0xbac32327
  41625e:	adc    al,0xd8
  416260:	cmp    al,0xd8
  416262:	pop    ss
  416263:	mov    ebx,0x7b3db563
  416268:	or     eax,0xa280013
  41626d:	inc    edi
  41626e:	adc    BYTE PTR [ecx+0x38],0x6a
  416272:	ins    DWORD PTR es:[edi],dx
  416273:	mov    ecx,0xfd295f4
  416278:	aaa    
  416279:	enter  0xa919,0x14
  41627d:	push   esp
  41627e:	adc    al,0x92
  416280:	mov    dl,BYTE PTR [esi+0x67]
  416283:	dec    ecx
  416284:	call   0xd913:0x2b79400a
  41628b:	ins    DWORD PTR es:[edi],dx
  41628c:	popf   
  41628d:	or     bh,ah
  41628f:	loopne 0x4162c1
  416291:	dec    edx
  416292:	dec    ebp
  416293:	pusha  
  416294:	push   ebx
  416295:	dec    eax
  416296:	mov    ebx,0x3b3fd985
  41629b:	add    al,0xcd
  41629d:	or     DWORD PTR ss:[eax+eax*1+0x2d98de38],0x59
  4162a6:	test   eax,0x4243cd1d
  4162ab:	ja     0x4162b7
  4162ad:	fimul  DWORD PTR [esi]
  4162af:	dec    esp
  4162b0:	xlat   BYTE PTR ds:[ebx]
  4162b1:	outs   dx,DWORD PTR ds:[esi]
  4162b2:	pop    ds
  4162b3:	inc    eax
  4162b4:	mov    DWORD PTR [esi+ecx*1-0x14],edx
  4162b8:	jno    0x4162e4
  4162ba:	sub    edx,esp
  4162bc:	dec    ebx
  4162bd:	sub    al,0x3e
  4162bf:	push   0xffffff92
  4162c1:	mov    esp,DWORD PTR [esi]
  4162c3:	push   ds
  4162c4:	ins    BYTE PTR es:[edi],dx
  4162c5:	xor    BYTE PTR [ebp-0x56e888ae],0x38
  4162cc:	lock (bad) 
  4162ce:	pop    edx
  4162cf:	dec    ecx
  4162d0:	mov    al,BYTE PTR [edi+eiz*1-0x61]
  4162d4:	lods   al,BYTE PTR ds:[esi]
  4162d5:	cld    
  4162d6:	or     cl,BYTE PTR ds:0x567a3e6a
  4162dc:	in     al,dx
  4162dd:	xor    BYTE PTR [edi-0x46daa667],dl
  4162e3:	inc    esp
  4162e4:	jnp    0x416321
  4162e6:	sbb    eax,0x591e3a75
  4162eb:	xchg   ebp,eax
  4162ec:	pop    es
  4162ed:	jnp    0x416280
  4162ef:	scas   eax,DWORD PTR es:[edi]
  4162f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f1:	test   eax,0xfa3db19b
  4162f6:	repz into 
  4162f8:	mov    al,ds:0x481951d7
  4162fd:	dec    esi
  4162fe:	mov    dh,0xff
  416300:	and    cl,dl
  416302:	inc    edi
  416303:	sub    esp,edi
  416305:	push   0x7f
  416307:	cwde   
  416308:	xor    eax,0x7d6dcb41
  41630d:	es push ds
  41630f:	mov    ebx,0x2bc50b46
  416314:	pop    es
  416315:	sub    ebp,DWORD PTR [eax+0x545111e1]
  41631b:	leave  
  41631c:	icebp  
  41631d:	push   edi
  41631e:	out    dx,al
  41631f:	stos   DWORD PTR es:[edi],eax
  416320:	jecxz  0x416369
  416322:	pop    ebx
  416323:	sbb    al,0x92
  416325:	sub    ch,BYTE PTR [ebx]
  416327:	push   esi
  416328:	lds    edx,FWORD PTR [edi+0x11633b93]
  41632e:	push   0x60
  416330:	pop    ecx
  416331:	pop    ebp
  416332:	ins    DWORD PTR es:[edi],dx
  416333:	aad    0x7f
  416335:	mov    esi,0xc514dcc3
  41633a:	pop    esi
  41633b:	std    
  41633c:	retf   0x8f26
  41633f:	rcl    cl,cl
  416341:	jno    0x41634e
  416343:	mov    al,ds:0x80ad9f34
  416348:	sbb    BYTE PTR [ecx+0x1ee84b5b],bh
  41634e:	jmp    0xa9a1:0xd1cf50fe
  416355:	sub    ch,BYTE PTR [ebx]
  416357:	or     cl,BYTE PTR [ecx+0x2b]
  41635a:	jecxz  0x41634b
  41635c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41635d:	add    al,0xbe
  41635f:	and    eax,0x9dbd4d08
  416364:	push   ss
  416365:	icebp  
  416366:	mov    DWORD PTR [esi+0x1c],edi
  416369:	jl     0x416308
  41636b:	stos   DWORD PTR es:[edi],eax
  41636c:	lods   eax,DWORD PTR ds:[esi]
  41636d:	mov    esi,esp
  41636f:	xchg   edi,eax
  416370:	sub    DWORD PTR [ebx],0xffffffd7
  416373:	enter  0x25a5,0xa3
  416377:	les    eax,FWORD PTR [ecx+0x3d324c87]
  41637d:	scas   al,BYTE PTR es:[edi]
  41637e:	int3   
  41637f:	push   ss
  416380:	in     al,0x56
  416382:	xchg   DWORD PTR [esi-0x55b701f7],ecx
  416388:	adc    BYTE PTR [edx+ebp*1+0x5617772c],al
  41638f:	(bad)  
  416390:	or     al,0xff
  416392:	(bad)  [esi]
  416394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416395:	or     BYTE PTR [eax-0x7d],dh
  416398:	jae    0x416410
  41639a:	add    al,0x71
  41639c:	mov    DWORD PTR [ecx+0x1ee44561],edi
  4163a2:	mov    esp,0x7bbbb290
  4163a7:	xchg   edx,eax
  4163a8:	scas   al,BYTE PTR es:[edi]
  4163a9:	pop    ecx
  4163aa:	xor    al,0xbf
  4163ac:	mov    ebp,0xdcbe6140
  4163b1:	jp     0x41633b
  4163b3:	cmp    dl,BYTE PTR [ecx+0x72c96a14]
  4163b9:	xor    edi,esp
  4163bb:	inc    ecx
  4163bc:	inc    ebx
  4163bd:	push   ss
  4163be:	xor    ecx,edi
  4163c0:	inc    ecx
  4163c1:	and    al,0x4b
  4163c3:	or     DWORD PTR [ebx-0x2f],ebx
  4163c6:	jg     0x4163e9
  4163c8:	mov    WORD PTR [edx],?
  4163ca:	mov    ds:0x2d947838,eax
  4163cf:	push   ebp
  4163d0:	xchg   ecx,eax
  4163d1:	sub    al,BYTE PTR [ecx]
  4163d3:	in     eax,0x89
  4163d5:	out    0xd9,eax
  4163d7:	push   ds
  4163d8:	stc    
  4163d9:	inc    esi
  4163da:	cmc    
  4163db:	repz pop edi
  4163dd:	jmp    0x2a2dc05d
  4163e2:	ins    DWORD PTR es:[edi],dx
  4163e3:	pop    es
  4163e4:	and    bh,BYTE PTR [ecx]
  4163e6:	adc    DWORD PTR [ecx-0x22],esi
  4163e9:	sbb    ebx,eax
  4163eb:	dec    eax
  4163ec:	add    BYTE PTR [ebp+ebx*1-0x7dae45ff],bh
  4163f3:	sub    BYTE PTR [esi],dh
  4163f5:	adc    cl,BYTE PTR [edi+0x56134170]
  4163fb:	(bad)
  4163fe:	loopne 0x4163ff
  416400:	rol    DWORD PTR [esi],0x68
  416403:	mov    ds:0xfc28a312,al
  416408:	fcomp  DWORD PTR [ecx]
  41640a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41640c:	int    0xe2
  41640e:	mov    BYTE PTR [eax],0x5b
  416411:	pop    esi
  416412:	sar    bh,0x5e
  416415:	add    dl,dh
  416417:	(bad)  
  416419:	xchg   DWORD PTR [esi+esi*8],ebp
  41641c:	neg    esi
  41641e:	cli    
  41641f:	int    0xc3
  416421:	xchg   esp,eax
  416422:	adc    BYTE PTR [eax-0x670fac8d],0x9f
  416429:	repz mov ah,0x8e
  41642c:	adc    edx,DWORD PTR [edx+0x6a466b2b]
  416432:	xor    DWORD PTR [esi+edi*8-0x53],0x19
  416437:	cmp    edi,DWORD PTR [esi]
  416439:	push   0x281896f1
  41643e:	mov    ch,bh
  416440:	ins    BYTE PTR es:[edi],dx
  416441:	rcr    bl,1
  416443:	je     0x41647a
  416445:	cwde   
  416446:	push   ss
  416447:	cli    
  416448:	cmc    
  416449:	adc    DWORD PTR [edi+ebp*2],ebx
  41644c:	stos   DWORD PTR es:[edi],eax
  41644d:	mov    esi,fs
  41644f:	fisub  WORD PTR [ecx+0x69]
  416452:	jl     0x4163e1
  416454:	inc    edx
  416455:	lahf   
  416456:	xchg   ebx,eax
  416457:	test   al,0x62
  416459:	cwde   
  41645a:	xchg   DWORD PTR [edx],esi
  41645c:	mov    ds:0xc5b3d023,eax
  416461:	adc    DWORD PTR [edi+0x56687851],esp
  416467:	in     al,0xa0
  416469:	(bad)  
  41646a:	loop   0x4164b4
  41646c:	ficomp DWORD PTR [edx-0x2b]
  41646f:	push   ss
  416470:	xor    al,0x11
  416472:	lock sub eax,0x133eaf82
  416478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416479:	cmp    al,0x30
  41647b:	popa   
  41647c:	retf   0xce03
  41647f:	pop    edx
  416480:	inc    esi
  416481:	ror    DWORD PTR [ecx],cl
  416483:	cli    
  416484:	adc    DWORD PTR [edi],esi
  416486:	repz loope 0x41644b
  416489:	dec    esi
  41648a:	enter  0x2a17,0x46
  41648e:	dec    ebx
  41648f:	add    dh,dh
  416491:	inc    esi
  416492:	ret    0x33b1
  416495:	dec    edx
  416496:	xor    DWORD PTR [esi],ebx
  416498:	push   0xffffffec
  41649a:	int    0x53
  41649c:	add    eax,0xb021bac9
  4164a1:	dec    edx
  4164a2:	aam    0x77
  4164a4:	repz add dl,dl
  4164a7:	daa    
  4164a8:	mov    ebx,0xe7051b56
  4164ad:	add    al,0x1f
  4164af:	adc    al,0x39
  4164b1:	pop    ebx
  4164b2:	cld    
  4164b3:	sub    ebp,DWORD PTR gs:[edi]
  4164b6:	loope  0x416441
  4164b8:	leave  
  4164b9:	fldenv [esi]
  4164bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164bc:	imul   esi,DWORD PTR [eax+0x76],0xffffffd6
  4164c0:	push   0xe14fda47
  4164c5:	xchg   edx,eax
  4164c6:	(bad)  
  4164c7:	push   esi
  4164c8:	pop    eax
  4164c9:	int3   
  4164ca:	test   BYTE PTR [eax+0x3646d653],0x89
  4164d1:	cwde   
  4164d2:	add    al,BYTE PTR [ecx-0x71244dbb]
  4164d8:	ins    DWORD PTR es:[edi],dx
  4164d9:	inc    edi
  4164da:	nop
  4164db:	pop    es
  4164dc:	push   esp
  4164dd:	cmp    al,0x98
  4164df:	(bad)  
  4164e0:	cmp    al,0xe0
  4164e2:	or     edx,DWORD PTR [eax-0x3f]
  4164e5:	je     0x4164f1
  4164e7:	repnz fidiv DWORD PTR ds:0x2c665e21
  4164ee:	std    
  4164ef:	aas    
  4164f0:	sub    BYTE PTR [ebp+0xd13ecb9],dl
  4164f6:	pop    ebx
  4164f7:	hlt    
  4164f8:	test   BYTE PTR [esi-0x4f153614],bh
  4164fe:	fmulp  st(2),st
  416500:	xor    dh,0xa5
  416503:	push   edi
  416504:	aaa    
  416505:	aad    0x92
  416507:	mov    DWORD PTR [edi+0x4b],edx
  41650a:	jle    0x4164be
  41650c:	sbb    BYTE PTR [esi-0x7e8fd0c5],0x5
  416513:	mov    bh,0x88
  416515:	imul   DWORD PTR [eax+ebx*4+0x76]
  416519:	jno    0x4164ce
  41651b:	xor    dl,bh
  41651d:	fwait
  41651e:	and    ebp,DWORD PTR [ebp+0x6e]
  416521:	xor    BYTE PTR [edi-0xfaaf353],bl
  416527:	(bad)  
  416528:	cmp    bl,BYTE PTR [ecx+eiz*8+0x2f]
  41652c:	inc    edx
  41652d:	and    dl,BYTE PTR [edx]
  41652f:	imul   edx,DWORD PTR [edx+0x44652b74],0x512c076f
  416539:	in     eax,dx
  41653a:	xchg   ecx,eax
  41653b:	dec    esi
  41653c:	mov    cl,0x15
  41653e:	or     eax,0x2c5f93fe
  416543:	pop    edi
  416544:	call   0xd105:0xd3efb8dc
  41654b:	fdivp  st(3),st
  41654d:	cmp    al,0x3
  41654f:	jmp    0xf0a5:0x434fdd7
  416556:	push   esp
  416557:	(bad)  
  416558:	mov    ch,0x97
  41655a:	ins    DWORD PTR es:[edi],dx
  41655b:	xchg   ebp,eax
  41655c:	stc    
  41655d:	pop    edx
  41655e:	add    BYTE PTR [eax],al
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xedf1
  41656f:	push   0xe3556d5c
  416574:	add    BYTE PTR [eax],al
  416576:	hlt    
  416577:	add    al,0x0
  416579:	add    BYTE PTR [edi-0x2ce0127f],ah
  41657f:	pop    edi
  416580:	data16 mov al,ds:0x11705cd2
  416586:	cmp    BYTE PTR [ebp-0x1a85116a],al
  41658c:	add    ch,bl
  41658e:	pop    ecx
  41658f:	loop   0x41659b
  416591:	inc    ecx
  416592:	jecxz  0x416543
  416594:	ret    0x645d
  416597:	dec    eax
  416598:	(bad)  
  416599:	(bad)  
  41659a:	repnz cmp ch,BYTE PTR [ebx+0x3c]
  41659e:	rcr    ebx,0x15
  4165a1:	jo     0x4165c7
  4165a3:	mov    bh,0x77
  4165a5:	add    edx,DWORD PTR [esp+eax*4]
  4165a8:	push   cs
  4165a9:	ds pop ds
  4165ab:	loope  0x4165c3
  4165ad:	adc    bl,BYTE PTR [esp+ebx*2-0x350d08e3]
  4165b4:	add    DWORD PTR [ebx+0x63e5be32],esp
  4165ba:	push   es
  4165bb:	and    DWORD PTR [eax-0x4c],edx
  4165be:	sub    DWORD PTR [ebx+0x3b],0x7b4f9865
  4165c5:	(bad)  
  4165c6:	in     eax,dx
  4165c7:	mov    esi,DWORD PTR [eax]
  4165c9:	in     al,dx
  4165ca:	dec    eax
  4165cb:	(bad)  
  4165cc:	shl    DWORD PTR [eax],0xe6
  4165cf:	addr16 cmp al,0x7b
  4165d2:	lods   al,BYTE PTR es:[esi]
  4165d4:	add    ah,dh
  4165d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165d7:	cmp    BYTE PTR [esi],0xc7
  4165da:	fwait
  4165db:	mov    dh,0x74
  4165dd:	cmp    DWORD PTR [edx],eax
  4165df:	pop    eax
  4165e0:	or     al,0x17
  4165e2:	and    edi,DWORD PTR [ebx]
  4165e4:	repnz dec ecx
  4165e6:	mov    ecx,0x77d4cfd2
  4165eb:	mov    dh,0x2d
  4165ed:	scas   eax,DWORD PTR es:[edi]
  4165ee:	pop    edi
  4165ef:	xchg   ecx,eax
  4165f0:	jb     0x41666f
  4165f2:	inc    esp
  4165f3:	mov    ebx,0xaacf3b69
  4165f8:	ss sbb eax,0x17f089be
  4165fe:	xchg   edi,eax
  4165ff:	jnp    0x4165c4
  416601:	mov    ch,0xeb
  416603:	fbld   TBYTE PTR [edi+0x1d110e40]
  416609:	or     bh,ah
  41660b:	int    0xe2
  41660d:	sub    DWORD PTR [edx-0x3595c9fc],eax
  416613:	push   0xfa9ab3d4
  416618:	cmp    al,0x5
  41661a:	pop    edx
  41661b:	sbb    edi,DWORD PTR [ecx]
  41661d:	ror    BYTE PTR [edx+ebx*2],cl
  416620:	lea    esi,[eax]
  416622:	inc    esp
  416623:	sub    ah,BYTE PTR [eax-0x2bd661ad]
  416629:	mov    dh,0x6c
  41662b:	or     DWORD PTR [edx+ebx*4+0xf],eax
  41662f:	out    dx,al
  416630:	push   cs
  416631:	or     BYTE PTR ds:0x65a31a2b,ah
  416637:	mov    ebp,0x885cb530
  41663c:	inc    edi
  41663d:	push   eax
  41663e:	shr    BYTE PTR ds:0x1edce661,1
  416644:	lods   al,BYTE PTR ds:[esi]
  416645:	je     0x41661a
  416647:	enter  0x91a5,0x72
  41664b:	jmp    0x71a68862
  416650:	adc    edi,DWORD PTR ss:[esi+0x1]
  416654:	out    dx,eax
  416655:	(bad)  
  416656:	dec    ebp
  416657:	loopne 0x41666a
  416659:	add    eax,DWORD PTR [edi]
  41665b:	retf   
  41665c:	pop    ebx
  41665d:	and    DWORD PTR [ecx+0x6c],edi
  416660:	lods   eax,DWORD PTR ds:[esi]
  416661:	xor    eax,0x32c4d365
  416666:	jecxz  0x416615
  416668:	rcl    DWORD PTR [ecx+0x41e8fc74],0xc7
  41666f:	sub    al,0xeb
  416671:	stc    
  416672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416673:	xchg   esi,eax
  416674:	dec    esp
  416675:	mov    al,ds:0xcb85f2ff
  41667a:	fwait
  41667b:	fwait
  41667c:	xchg   edi,eax
  41667d:	pop    es
  41667e:	ja     0x41669f
  416680:	jno    0x416684
  416682:	sbb    eax,ebp
  416684:	jge    0x416701
  416686:	mov    dl,0x98
  416688:	dec    BYTE PTR [edx+0x7e664dbf]
  41668e:	xchg   BYTE PTR [ebx],dh
  416690:	ins    BYTE PTR es:[edi],dx
  416691:	cld    
  416692:	rol    DWORD PTR [ebx],1
  416694:	or     eax,0x5c9e6868
  416699:	push   0x2d6025fb
  41669e:	jo     0x41668d
  4166a0:	mov    ah,ah
  4166a2:	test   al,0x81
  4166a4:	sbb    BYTE PTR [edx+0x3],ah
  4166a7:	scas   al,BYTE PTR es:[edi]
  4166a8:	sub    BYTE PTR [esi+0x6a7125af],ah
  4166ae:	(bad)
  4166b2:	inc    eax
  4166b3:	and    bl,BYTE PTR [edx-0x328ccf96]
  4166b9:	retf   0xe945
  4166bc:	aaa    
  4166bd:	(bad)  
  4166be:	pop    ebp
  4166bf:	mov    bl,0x93
  4166c1:	push   es
  4166c2:	cmp    ecx,DWORD PTR [esi+0x6d]
  4166c5:	jne    0x4166aa
  4166c7:	fimul  DWORD PTR [ebx]
  4166c9:	dec    ecx
  4166ca:	out    dx,al
  4166cb:	cdq    
  4166cc:	inc    ebp
  4166cd:	mov    bh,0xb7
  4166cf:	sbb    BYTE PTR [ecx],ch
  4166d1:	icebp  
  4166d2:	xor    bh,0x98
  4166d5:	adc    al,al
  4166d7:	push   eax
  4166d8:	push   ds
  4166d9:	sub    edx,ebp
  4166db:	cwde   
  4166dc:	fcmovnu st,st(4)
  4166de:	psllq  mm3,QWORD PTR [ebx+0x41e84b9f]
  4166e5:	inc    edi
  4166e6:	loopne 0x416729
  4166e8:	stos   BYTE PTR es:[edi],al
  4166e9:	(bad)  [ecx-0x589df91b]
  4166ef:	xchg   ebx,eax
  4166f0:	add    eax,0x7e7b2a8c
  4166f5:	mov    ebx,0x530ca56d
  4166fa:	pop    ss
  4166fb:	adc    al,BYTE PTR [ebx-0x4fe7699d]
  416701:	loopne 0x4166d1
  416703:	push   edx
  416704:	xchg   ecx,eax
  416705:	mov    ecx,0xdbe03d68
  41670a:	mov    bl,0xdc
  41670c:	popf   
  41670d:	or     al,0x74
  41670f:	ret    
  416710:	mov    dh,BYTE PTR [edi-0x6e]
  416713:	(bad)  
  416714:	adc    ch,BYTE PTR [edi-0x72ff24f8]
  41671a:	push   ds
  41671b:	daa    
  41671c:	xchg   esi,eax
  41671d:	mov    esp,0x6023f30d
  416722:	xchg   ebx,eax
  416723:	pmuludq mm1,mm3
  416726:	rcl    DWORD PTR [esi+ecx*1+0x4c25d42a],1
  41672d:	std    
  41672e:	call   0xdca:0x7a589944
  416735:	mov    esp,0x90d8b2ef
  41673a:	lods   eax,DWORD PTR ds:[esi]
  41673b:	push   0x3014c7ac
  416740:	fiadd  WORD PTR [edx+edi*1]
  416743:	call   FWORD PTR [edx-0x434b2c21]
  416749:	das    
  41674a:	fistp  QWORD PTR [ebx]
  41674c:	add    al,0xd8
  41674e:	and    DWORD PTR [ebx],edx
  416750:	xchg   ebx,eax
  416751:	xchg   edi,eax
  416752:	push   ds
  416753:	clc    
  416754:	xor    al,0xdd
  416756:	mov    ecx,0x3f5f473f
  41675b:	adc    BYTE PTR [esi-0x6e767641],0x5a
  416762:	lods   al,BYTE PTR ds:[esi]
  416763:	js     0x41679f
  416765:	test   al,0x84
  416767:	mov    ah,0x5e
  416769:	push   es
  41676a:	outs   dx,BYTE PTR ds:[esi]
  41676b:	xor    ch,dh
  41676d:	int3   
  41676e:	shufps xmm5,XMMWORD PTR [ebx-0x2a],0xf
  416773:	ds ins BYTE PTR es:[edi],dx
  416775:	mov    eax,0x6be1ceee
  41677a:	ss (bad) 
  41677c:	jmp    0x608bf5b4
  416781:	fisttp QWORD PTR [edi+eiz*1+0x16]
  416785:	dec    eax
  416786:	or     eax,0x2c6e4d5
  41678b:	pop    ecx
  41678c:	push   ecx
  41678d:	mov    eax,ds:0xba63690
  416792:	pop    ds
  416793:	aaa    
  416794:	lahf   
  416795:	out    dx,al
  416796:	inc    edx
  416797:	fsub   st,st(0)
  416799:	loope  0x416815
  41679b:	mov    cl,0xc6
  41679d:	adc    ebp,ebx
  41679f:	pop    es
  4167a0:	loopne 0x4167c5
  4167a2:	loopne 0x4167fc
  4167a4:	ja     0x41672a
  4167a6:	xchg   edi,eax
  4167a7:	scas   al,BYTE PTR es:[edi]
  4167a8:	int    0x9a
  4167aa:	and    edx,DWORD PTR [ebx+0x367e7e9f]
  4167b0:	lock dec edx
  4167b2:	inc    eax
  4167b3:	adc    eax,0x1abdabe8
  4167b8:	and    ch,0x81
  4167bb:	bound  eax,QWORD PTR [edx+0x5802c98f]
  4167c1:	mov    dh,0x4b
  4167c3:	mov    WORD PTR ds:0x5cfa1707,ss
  4167c9:	out    dx,eax
  4167ca:	outs   dx,BYTE PTR ds:[esi]
  4167cb:	cmp    eax,0x720c2f8c
  4167d0:	mov    ebp,0xdecb4f35
  4167d5:	pusha  
  4167d6:	pop    edi
  4167d7:	loop   0x41675e
  4167d9:	mov    edi,?
  4167db:	dec    ecx
  4167dc:	or     dh,dh
  4167de:	imul   edx,DWORD PTR [edi+0x61],0xffffff9e
  4167e2:	(bad)  
  4167e4:	and    DWORD PTR ds:0xe4abc5bd,edi
  4167ea:	stc    
  4167eb:	xchg   edi,eax
  4167ec:	jo     0x416802
  4167ee:	int    0x6a
  4167f0:	mov    ebp,0xa19797a0
  4167f5:	xlat   BYTE PTR ds:[ebx]
  4167f6:	push   eax
  4167f7:	xchg   DWORD PTR [eax+eax*4-0x8d44d7f],ecx
  4167fe:	out    dx,al
  4167ff:	adc    eax,0x90100280
  416804:	mov    bl,ah
  416806:	aam    0xf5
  416808:	or     DWORD PTR [esi],ebx
  41680a:	jno    0x416814
  41680c:	xor    al,0xe7
  41680e:	and    ebp,edx
  416810:	in     eax,dx
  416811:	adc    bh,BYTE PTR [ebx+0x26]
  416814:	xor    BYTE PTR [esi],0x8d
  416817:	push   edx
  416818:	xlat   BYTE PTR ds:[ebx]
  416819:	out    dx,eax
  41681a:	mov    edi,0x64e7dd3a
  41681f:	jnp    0x416882
  416821:	dec    eax
  416822:	and    dh,BYTE PTR [edx]
  416824:	xor    dh,ch
  416826:	leave  
  416827:	dec    eax
  416828:	popf   
  416829:	lds    edi,FWORD PTR [ebp+0x54133731]
  41682f:	rol    BYTE PTR [esi-0x135d289c],1
  416835:	push   edx
  416836:	sti    
  416837:	and    BYTE PTR [ebx-0x63],cl
  41683a:	cmp    DWORD PTR [esi-0x20],edi
  41683d:	push   ds
  41683e:	icebp  
  41683f:	shl    DWORD PTR [edx+ebp*8],0xbe
  416843:	(bad)  
  416844:	push   esi
  416845:	inc    ecx
  416846:	pop    ss
  416847:	inc    DWORD PTR [edi+ebp*4]
  41684a:	jg     0x4167de
  41684c:	mov    edi,0x28a07264
  416851:	xor    edi,DWORD PTR [ebx-0xb]
  416854:	push   0xc
  416856:	sbb    ch,ah
  416858:	ins    BYTE PTR es:[edi],dx
  416859:	jl     0x4167eb
  41685b:	ret    0x21bd
  41685e:	push   ebp
  41685f:	stc    
  416860:	and    edx,DWORD PTR [ebx]
  416862:	pop    ebx
  416863:	fwait
  416864:	es sub ecx,esi
  416867:	jmp    esp
  416869:	push   ebx
  41686a:	inc    esi
  41686b:	inc    edi
  41686c:	add    al,0x14
  41686e:	mov    ebx,esi
  416870:	popf   
  416871:	ins    BYTE PTR es:[edi],dx
  416872:	add    al,0xef
  416874:	out    0xc9,eax
  416876:	scas   al,BYTE PTR es:[edi]
  416877:	jl     0x416857
  416879:	cmp    al,0x2a
  41687b:	cld    
  41687c:	loope  0x4168ef
  41687e:	ret    0x9b9
  416881:	fs daa 
  416883:	cmp    al,0x98
  416885:	sar    DWORD PTR [edi+0x34162d7c],1
  41688b:	test   BYTE PTR [eax+0x733422cb],dl
  416891:	jmp    0xca14b4f8
  416896:	or     BYTE PTR [esi+0x704cb739],cl
  41689c:	sub    ebx,ecx
  41689e:	pop    edx
  41689f:	out    0xcf,al
  4168a1:	push   esp
  4168a2:	bound  esp,QWORD PTR [edx]
  4168a4:	fidiv  DWORD PTR [esi]
  4168a6:	outs   dx,BYTE PTR ds:[esi]
  4168a7:	cli    
  4168a8:	into   
  4168a9:	inc    esi
  4168aa:	imul   ecx,DWORD PTR [edx],0xffffffa3
  4168ad:	mov    fs,WORD PTR [edx-0x4f9233bc]
  4168b3:	icebp  
  4168b4:	mov    edx,0x34c65f4a
  4168b9:	les    edi,FWORD PTR [ecx]
  4168bb:	dec    edi
  4168bc:	mov    al,0xdf
  4168be:	or     BYTE PTR [edx],ah
  4168c0:	jmp    0x416868
  4168c2:	pop    ebx
  4168c3:	inc    ecx
  4168c4:	xor    BYTE PTR [edi-0x6a423501],bh
  4168ca:	bound  ecx,QWORD PTR [eax]
  4168cc:	sar    DWORD PTR [eax-0x2d8308f8],0xc0
  4168d3:	mov    al,ds:0xd0d1df45
  4168d8:	fisubr DWORD PTR [ebx+0x4]
  4168db:	push   cs
  4168dc:	test   eax,0x197f543f
  4168e1:	inc    esi
  4168e2:	out    dx,eax
  4168e3:	out    dx,al
  4168e4:	push   esi
  4168e5:	mov    dh,0xb8
  4168e7:	mov    dl,0x13
  4168e9:	jg     0x416886
  4168eb:	sbb    BYTE PTR [esi+0x16],dh
  4168ee:	and    dl,BYTE PTR [edx+edx*1]
  4168f1:	xor    eax,0xc716faee
  4168f6:	sub    al,0x16
  4168f8:	jl     0x416916
  4168fa:	js     0x416896
  4168fc:	xchg   esi,eax
  4168fd:	mov    eax,ds:0x2e53551e
  416902:	xchg   esp,eax
  416903:	js     0x41688c
  416905:	or     esi,DWORD PTR [edi-0x29d55383]
  41690b:	add    DWORD PTR [eax],ecx
  41690d:	and    eax,0x8a04cf54
  416912:	aas    
  416913:	push   cs
  416914:	sbb    BYTE PTR [ecx-0x67],ch
  416917:	ds jns 0x4168c8
  41691a:	jmp    0x416938
  41691c:	adc    al,0x10
  41691e:	leave  
  41691f:	lods   eax,DWORD PTR ds:[esi]
  416920:	test   eax,0x951946f8
  416925:	test   BYTE PTR [ebx],ch
  416927:	and    DWORD PTR [eax],edx
  416929:	jmp    0x32fb8ee1
  41692e:	pop    ebp
  41692f:	and    eax,0xc62da20d
  416934:	jno    0x416905
  416936:	pavgw  mm3,mm1
  416939:	xor    dl,BYTE PTR [eax+0x779637ab]
  41693f:	mov    ds:0x408db0b7,eax
  416944:	mov    edi,0x1b60ef8c
  416949:	popf   
  41694a:	mov    edx,0xb882bef0
  41694f:	mov    esp,edi
  416951:	sub    al,0x2e
  416953:	arpl   WORD PTR [edx+ecx*1-0xd],cx
  416957:	fmulp  st(0),st
  416959:	xor    BYTE PTR ds:0x2b54710d,0x3f
  416960:	sbb    eax,0x89875083
  416965:	pop    edx
  416966:	add    eax,DWORD PTR [edx*4-0x7195bae]
  41696d:	inc    esp
  41696e:	push   ss
  41696f:	xchg   ecx,eax
  416970:	lahf   
  416971:	cwde   
  416972:	mov    bl,ch
  416974:	inc    ecx
  416975:	inc    esi
  416976:	push   esp
  416977:	out    0x1a,eax
  416979:	add    DWORD PTR [edi],0xf282b510
  41697f:	push   ebx
  416980:	adc    al,0x22
  416983:	(bad)  
  416984:	mov    esi,0xb02cc18c
  416989:	push   ebx
  41698a:	xchg   ch,cl
  41698c:	in     al,0x15
  41698e:	push   esi
  41698f:	clc    
  416990:	ss pop ecx
  416992:	dec    ebp
  416993:	or     dh,BYTE PTR [edx+eiz*4]
  416996:	adc    DWORD PTR [eax],edx
  416998:	neg    BYTE PTR [ecx-0x32]
  41699b:	ror    BYTE PTR [ebp+0x270d4958],1
  4169a1:	pop    es
  4169a2:	cmp    ah,BYTE PTR [eax-0x6c]
  4169a5:	adc    eax,0xb924337f
  4169aa:	icebp  
  4169ab:	(bad)  
  4169ac:	pop    ecx
  4169ad:	adc    bl,cl
  4169af:	lea    esp,[edx+0x54]
  4169b2:	imul   edi,DWORD PTR [edx-0x5c05b47a],0x4232478a
  4169bc:	imul   DWORD PTR [ecx+ecx*8]
  4169bf:	push   0xffffffde
  4169c1:	inc    eax
  4169c2:	add    eax,0x96936282
  4169c7:	pop    DWORD PTR [ecx+0x3b9958bf]
  4169cd:	and    al,0xd1
  4169cf:	push   0x852b7852
  4169d4:	mov    edi,0x3d1278a4
  4169d9:	nop
  4169da:	(bad)  
  4169db:	lds    ebx,FWORD PTR [ebx+esi*4]
  4169de:	push   es
  4169df:	sub    al,0x4f
  4169e1:	fiadd  WORD PTR [ebp-0x7c]
  4169e4:	mov    esi,0x2fdeeb5d
  4169e9:	fadd   DWORD PTR ds:0x643492e
  4169ef:	(bad)  
  4169f1:	out    dx,al
  4169f2:	ins    BYTE PTR es:[edi],dx
  4169f3:	mov    WORD PTR [ecx-0x46],ds
  4169f6:	inc    eax
  4169f7:	xchg   ebx,eax
  4169f8:	push   0x27
  4169fa:	mov    esp,0x61be79f7
  4169ff:	sub    edi,DWORD PTR [edi]
  416a01:	and    esi,DWORD PTR ds:0xb5b35f2a
  416a07:	mov    BYTE PTR [ebx],dh
  416a09:	mov    eax,0x89cf145a
  416a0e:	fwait
  416a0f:	xchg   esi,eax
  416a10:	arpl   si,si
  416a12:	fistp  DWORD PTR [edi+0x12]
  416a15:	jg     0x4169ff
  416a17:	ins    DWORD PTR es:[edi],dx
  416a18:	fdivr  st(5),st
  416a1a:	sub    al,0x9e
  416a1c:	aad    0xfc
  416a1e:	mov    DWORD PTR [eax-0x23c964f7],edx
  416a24:	dec    eax
  416a25:	xor    BYTE PTR [eax-0x2b],ch
  416a28:	stos   BYTE PTR es:[edi],al
  416a29:	je     0x416a05
  416a2b:	sub    DWORD PTR [edi],edx
  416a2d:	popf   
  416a2e:	cmp    al,bh
  416a30:	hlt    
  416a31:	leave  
  416a32:	shr    DWORD PTR [ebx-0x75e2e9a8],cl
  416a38:	arpl   WORD PTR [edx],di
  416a3a:	out    0xae,eax
  416a3c:	test   DWORD PTR [eax-0x71],eax
  416a3f:	xor    DWORD PTR [ecx+0x183c4e1f],0xcd92fa
  416a49:	cmp    esi,DWORD PTR ds:0x6f8927ae
  416a4f:	jp     0x416a04
  416a51:	dec    ecx
  416a52:	cld    
  416a53:	imul   esp,ecx,0x178980e8
  416a59:	out    0x49,al
  416a5b:	inc    edx
  416a5c:	or     DWORD PTR [edx-0x4c],edx
  416a5f:	cdq    
  416a60:	paddq  mm0,mm1
  416a63:	push   es
  416a64:	or     BYTE PTR [edi],ah
  416a66:	jecxz  0x416a8b
  416a68:	mov    ebx,0x2e7344d2
  416a6d:	stc    
  416a6e:	add    BYTE PTR [eax],al
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x7f3b875],cl
  416a7f:	mov    ecx,0xe8496767
  416a84:	add    BYTE PTR [eax],al
  416a86:	hlt    
  416a87:	add    al,0x0
  416a89:	add    ah,ah
  416a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a8c:	dec    esp
  416a8d:	or     ecx,0x6ed34bac
  416a93:	jo     0x416a5d
  416a95:	jmp    0x13d20409
  416a9a:	lods   eax,DWORD PTR ds:[esi]
  416a9b:	inc    ebp
  416a9c:	popa   
  416a9d:	mov    edi,0x50ddf8cb
  416aa2:	imul   edx,ebx,0x4a
  416aa5:	jp     0x416a3a
  416aa7:	loopne 0x416a8c
  416aa9:	lahf   
  416aaa:	inc    eax
  416aab:	adc    eax,0xfbf370a8
  416ab0:	inc    ecx
  416ab1:	test   eax,0xaf3a6dd4
  416ab6:	and    eax,0xc3e3030f
  416abb:	in     eax,0xd7
  416abd:	in     al,0x37
  416abf:	mov    esp,0x7efa88cc
  416ac4:	or     ecx,DWORD PTR [edi]
  416ac6:	push   edi
  416ac7:	xor    eax,0xbb200065
  416acc:	adc    BYTE PTR [eax-0x7b],al
  416acf:	xor    bl,BYTE PTR [esi+ecx*2]
  416ad2:	push   es
  416ad3:	rcl    DWORD PTR [esi],0xe0
  416ad6:	pop    ss
  416ad7:	aam    0x48
  416ad9:	hlt    
  416ada:	mov    esp,ebx
  416adc:	push   eax
  416add:	pushf  
  416ade:	sub    esi,DWORD PTR [esp+eax*8]
  416ae1:	adc    al,0x2d
  416ae3:	pop    ss
  416ae4:	jg     0x416b5f
  416ae6:	mov    ebp,0xfa03dfcb
  416aeb:	aam    0x5e
  416aed:	cmc    
  416aee:	inc    ebx
  416aef:	sub    ebp,esi
  416af1:	jne    0x416aa3
  416af3:	mov    esi,0xe9bd0789
  416af8:	mov    WORD PTR [eax-0x53],?
  416afb:	mov    dl,0x8
  416afd:	pusha  
  416afe:	jge    0x416b74
  416b00:	ror    BYTE PTR [ebx-0x78],0xb1
  416b04:	mov    dh,0x3f
  416b06:	ins    BYTE PTR es:[edi],dx
  416b07:	pop    esp
  416b08:	xchg   ecx,eax
  416b09:	into   
  416b0a:	dec    ebp
  416b0b:	aam    0x7a
  416b0d:	dec    edi
  416b0e:	jmp    ebp
  416b10:	js     0x416af9
  416b12:	sbb    DWORD PTR [ebx+0x24],eax
  416b15:	push   ss
  416b16:	push   edx
  416b17:	inc    eax
  416b18:	mov    bh,0x25
  416b1a:	xchg   edx,eax
  416b1b:	mov    ?,eax
  416b1d:	jae    0x416ac2
  416b1f:	jecxz  0x416b94
  416b21:	adc    esi,DWORD PTR ds:0x61e9cd4c
  416b27:	mov    DWORD PTR [eax-0x6],ebp
  416b2a:	xor    al,0x42
  416b2c:	mov    dh,0x2
  416b2e:	clc    
  416b2f:	sbb    al,BYTE PTR [eax]
  416b31:	inc    esp
  416b32:	adc    eax,0xef7de221
  416b37:	sbb    BYTE PTR [edi+0x6c],bl
  416b3a:	stc    
  416b3b:	mov    ah,0x9f
  416b3d:	cli    
  416b3e:	cmp    BYTE PTR [eax],dh
  416b40:	sub    ebx,DWORD PTR [ebp+0x72]
  416b43:	lods   eax,DWORD PTR ds:[esi]
  416b44:	daa    
  416b45:	mov    ds:0x3ab02fa,eax
  416b4a:	ins    DWORD PTR es:[edi],dx
  416b4b:	ja     0x416b2b
  416b4d:	xor    al,0xa0
  416b4f:	push   esp
  416b50:	pop    DWORD PTR [ecx+eiz*2+0x1c]
  416b54:	cdq    
  416b55:	xlat   BYTE PTR ds:[ebx]
  416b56:	push   es
  416b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b58:	or     ch,BYTE PTR [ecx]
  416b5a:	mov    WORD PTR [ebx+0x4a],fs
  416b5d:	pop    ebx
  416b5e:	in     al,dx
  416b5f:	and    ecx,DWORD PTR [edi+0x66237ca3]
  416b65:	lds    ebx,FWORD PTR [edx]
  416b67:	or     eax,0x63b9a579
  416b6c:	aad    0x1b
  416b6e:	mov    cl,0xf7
  416b71:	xchg   ebp,eax
  416b72:	cmp    esp,DWORD PTR [eax]
  416b74:	ficomp WORD PTR [esi+0x45]
  416b77:	arpl   WORD PTR [edi],di
  416b79:	pop    eax
  416b7a:	(bad)  
  416b7b:	iret   
  416b7c:	push   ss
  416b7d:	xor    eax,0x795d4a95
  416b82:	jle    0x416b1e
  416b84:	jge    0x416b32
  416b86:	xchg   edi,eax
  416b87:	or     DWORD PTR [esi+ecx*4-0x60],esi
  416b8b:	(bad)  
  416b8c:	cwde   
  416b8d:	call   esp
  416b8f:	add    al,0xfd
  416b91:	in     eax,0xd5
  416b93:	inc    ebx
  416b94:	fwait
  416b95:	cs pusha 
  416b97:	ins    BYTE PTR es:[edi],dx
  416b98:	in     al,0x63
  416b9a:	mov    BYTE PTR [eax+0x539f7daf],al
  416ba0:	psllq  mm0,mm0
  416ba3:	adc    DWORD PTR [ecx-0xe182803],ecx
  416ba9:	add    BYTE PTR ds:0x9f5c4a72,dh
  416baf:	cmc    
  416bb0:	arpl   WORD PTR ds:0xc539b25d,cx
  416bb6:	je     0x416c0a
  416bb8:	mov    ecx,DWORD PTR [eax]
  416bba:	adc    DWORD PTR ds:0x91d8133e,edx
  416bc0:	retf   
  416bc1:	retf   
  416bc2:	mov    edi,0x29b60acf
  416bc7:	mov    ds:0x6cb02f78,al
  416bcc:	mov    esi,0xb96e7383
  416bd1:	jno    0x416bae
  416bd3:	xchg   ecx,eax
  416bd4:	lods   al,BYTE PTR ds:[esi]
  416bd5:	mov    ebp,DWORD PTR [ebp-0x2e]
  416bd8:	mov    DWORD PTR [ebx-0x1af18401],esi
  416bde:	ss clc 
  416be0:	ror    DWORD PTR [ebp-0x1cad9899],1
  416be6:	and    edi,eax
  416be8:	xchg   ebx,eax
  416be9:	push   edi
  416bea:	add    al,0x65
  416bec:	daa    
  416bed:	jb     0x416bfd
  416bef:	inc    edx
  416bf0:	leave  
  416bf1:	pop    esi
  416bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf3:	fisubr DWORD PTR [ebx]
  416bf5:	xchg   edi,eax
  416bf6:	data16 int3 
  416bf8:	mov    bh,ch
  416bfa:	mov    eax,DWORD PTR [edx+0x54]
  416bfd:	pop    eax
  416bfe:	sub    eax,0x1a919cb3
  416c03:	add    eax,0x86e7034e
  416c08:	(bad)  
  416c09:	xchg   edi,eax
  416c0a:	xchg   esp,eax
  416c0b:	lahf   
  416c0c:	mov    bh,0xc8
  416c0e:	fs mov edi,0x52ff741
  416c14:	jbe    0x416c09
  416c16:	lods   eax,DWORD PTR ds:[esi]
  416c17:	out    0xe0,eax
  416c19:	inc    edi
  416c1a:	push   cs
  416c1b:	out    dx,al
  416c1c:	enter  0x30f9,0x5b
  416c20:	(bad)  
  416c21:	out    0x52,eax
  416c23:	sub    cl,BYTE PTR [eax+0x7f]
  416c26:	jo     0x416bdf
  416c28:	lock pop esp
  416c2a:	sub    ebx,DWORD PTR [ecx-0x3c079b72]
  416c30:	in     al,dx
  416c31:	cmp    al,0xb4
  416c33:	push   ebx
  416c34:	ja     0x416cb1
  416c36:	pop    edi
  416c37:	pushf  
  416c38:	fnsave [edi]
  416c3a:	inc    eax
  416c3b:	add    al,0x79
  416c3d:	fs pop edi
  416c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c40:	jmp    0xf25e:0x557d67d0
  416c47:	dec    esp
  416c48:	push   ebp
  416c49:	adc    edx,DWORD PTR [ebx+0x5dc2fe5f]
  416c4f:	pop    edx
  416c50:	aam    0x50
  416c52:	scas   eax,DWORD PTR es:[edi]
  416c53:	cs cmp ecx,DWORD PTR es:[eax]
  416c57:	dec    ecx
  416c58:	pop    edx
  416c59:	xor    DWORD PTR [ecx-0x70],eax
  416c5c:	add    bl,BYTE PTR [ebx]
  416c5e:	jecxz  0x416c85
  416c60:	ins    BYTE PTR es:[edi],dx
  416c61:	outs   dx,BYTE PTR ds:[esi]
  416c62:	sub    BYTE PTR [edx-0x5a],bl
  416c65:	arpl   WORD PTR [eax-0x5b29ca3c],si
  416c6b:	fidiv  DWORD PTR [ecx-0xb586b0e]
  416c71:	jg     0x416c81
  416c73:	mov    bh,BYTE PTR [esi-0x2e]
  416c76:	fld    TBYTE PTR [eax+0x741795ee]
  416c7c:	(bad)  
  416c7d:	jmp    0x411b12c
  416c82:	stos   DWORD PTR es:[edi],eax
  416c83:	xchg   esi,eax
  416c84:	pop    ebx
  416c85:	dec    edi
  416c86:	sub    eax,0x19e9e7bd
  416c8b:	and    ch,0x85
  416c8e:	mov    esi,0x364b119e
  416c93:	(bad)  
  416c94:	mov    ebx,DWORD PTR [ecx]
  416c96:	arpl   WORD PTR [edx],si
  416c98:	cmp    ah,BYTE PTR [edx-0x31097084]
  416c9e:	mov    edx,0x2e325060
  416ca3:	mov    esp,0x4c0abf58
  416ca8:	punpcklwd mm2,DWORD PTR [edx+0x32ef2f1a]
  416caf:	out    dx,eax
  416cb0:	mov    ds:0xadc91b3c,al
  416cb5:	xor    dl,BYTE PTR [ecx]
  416cb7:	or     ah,bl
  416cb9:	adc    eax,0x66348c79
  416cbe:	stos   DWORD PTR es:[edi],eax
  416cbf:	mov    dh,0xa4
  416cc1:	lds    esi,FWORD PTR [esi-0x2f]
  416cc4:	sub    DWORD PTR [edx+0xb],ecx
  416cc7:	or     ebp,ebp
  416cc9:	jp     0x416c93
  416ccb:	fldenv [esi+0x314bc666]
  416cd1:	enter  0x28a0,0x9b
  416cd5:	je     0x416d28
  416cd7:	push   ecx
  416cd8:	sub    bl,dh
  416cda:	push   esi
  416cdb:	jae    0x416d09
  416cdd:	jp     0x416cff
  416cdf:	sbb    al,0x6a
  416ce1:	mov    bh,0xd1
  416ce3:	jmp    0x416c79
  416ce5:	dec    edi
  416ce6:	push   0x68
  416ce8:	add    ah,dl
  416cea:	mov    cl,0x31
  416cec:	cmp    al,0xa7
  416cee:	sbb    eax,0x10779ef1
  416cf3:	jle    0x416ce3
  416cf5:	out    dx,al
  416cf6:	cmp    al,0xa7
  416cf8:	mov    al,0x66
  416cfa:	dec    esp
  416cfb:	lock ins DWORD PTR es:[edi],dx
  416cfd:	mov    edx,0xa3fecbb7
  416d02:	sub    edi,DWORD PTR [ecx+0x4ade0adb]
  416d08:	daa    
  416d09:	fist   DWORD PTR [eax]
  416d0b:	test   DWORD PTR [ebx],ebx
  416d0d:	addr16 jg 0x416cb4
  416d10:	jno    0x416d75
  416d12:	ds pop esp
  416d14:	daa    
  416d15:	pop    ebp
  416d16:	cwde   
  416d17:	loop   0x416ced
  416d19:	test   BYTE PTR [edi],bh
  416d1b:	imul   edi,DWORD PTR [ecx],0x6
  416d1e:	sahf   
  416d1f:	xchg   edx,eax
  416d20:	sbb    BYTE PTR [esi],dh
  416d22:	xor    DWORD PTR [eax+0x7dbd205b],edx
  416d28:	js     0x416d43
  416d2a:	xchg   BYTE PTR [edi-0x172059cb],dl
  416d30:	inc    esi
  416d31:	enter  0x6325,0xe
  416d35:	lods   al,BYTE PTR ds:[esi]
  416d36:	mov    cl,0x5a
  416d38:	mov    esi,DWORD PTR [esi+ebx*1]
  416d3b:	icebp  
  416d3c:	test   eax,0x844752a9
  416d41:	jb     0x416d25
  416d43:	js     0x416d1f
  416d45:	enter  0x560e,0x8
  416d49:	dec    ebx
  416d4a:	add    DWORD PTR [ecx-0xea7dc75],0xffffffba
  416d51:	jecxz  0x416cdf
  416d53:	and    bl,BYTE PTR [ecx-0x3e88ea86]
  416d59:	mov    DWORD PTR [edx+eax*4],esi
  416d5c:	ds nop
  416d5e:	and    dl,BYTE PTR [edi-0xa]
  416d61:	fild   DWORD PTR [edi-0x76]
  416d64:	xchg   BYTE PTR [ebp+0x44],dl
  416d67:	dec    esi
  416d68:	ds xchg esp,eax
  416d6a:	daa    
  416d6b:	jl     0x416dcb
  416d6d:	adc    DWORD PTR [ebx],eax
  416d6f:	xor    eax,0x7054bf2d
  416d74:	push   edi
  416d75:	popa   
  416d76:	inc    ecx
  416d77:	enter  0xf28d,0x66
  416d7b:	outs   dx,BYTE PTR ds:[esi]
  416d7c:	dec    ebx
  416d7d:	fwait
  416d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d7f:	inc    edi
  416d80:	stc    
  416d81:	sub    al,0x22
  416d83:	scas   eax,DWORD PTR es:[edi]
  416d84:	pop    es
  416d85:	(bad)  
  416d86:	ins    BYTE PTR es:[edi],dx
  416d87:	mov    bh,0x9f
  416d89:	ins    BYTE PTR es:[edi],dx
  416d8a:	jo     0x416d57
  416d8c:	bound  edx,QWORD PTR ds:0x50b1baf5
  416d92:	int    0x8a
  416d94:	mov    ebx,0xb66b2469
  416d99:	cli    
  416d9a:	push   edi
  416d9b:	stos   BYTE PTR es:[edi],al
  416d9c:	repnz mov dh,0x7
  416d9f:	bound  ebx,QWORD PTR [ebx-0x4f]
  416da2:	adc    eax,0xf3c81607
  416da7:	inc    esp
  416da8:	push   esi
  416da9:	xchg   esi,eax
  416daa:	fidivr DWORD PTR [eax+0x276d18eb]
  416db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db1:	cmp    al,0x49
  416db3:	lock test al,0x77
  416db6:	or     al,0x55
  416db8:	test   eax,0x7dc132af
  416dbd:	add    eax,0xa7b4bba4
  416dc2:	or     eax,0xaba303da
  416dc8:	cmp    BYTE PTR [esi+0x467ee56f],bl
  416dce:	pop    es
  416dcf:	test   DWORD PTR [ebx],ecx
  416dd1:	sub    al,0xcb
  416dd3:	out    0x80,eax
  416dd5:	fbstp  TBYTE PTR [ecx+0x186d6370]
  416ddb:	or     al,0x42
  416ddd:	mov    ah,0xc9
  416ddf:	call   0xec3c:0xc8ab0c42
  416de6:	leave  
  416de7:	push   esi
  416de8:	ret    
  416de9:	lods   eax,DWORD PTR ds:[esi]
  416dea:	out    dx,al
  416deb:	(bad)  
  416dec:	and    bl,BYTE PTR [edx+0x31ebe21]
  416df2:	push   0x3a
  416df4:	mov    esi,0x703a2c9
  416df9:	dec    eax
  416dfa:	jmp    0x416e3f
  416dfc:	mov    al,ds:0xdd193841
  416e01:	jne    0x416e2c
  416e03:	addr16 das 
  416e05:	(bad)  
  416e07:	rcl    BYTE PTR [edx-0x2201880a],0x38
  416e0e:	adc    eax,0x2fef9a63
  416e13:	jb     0x416e2f
  416e15:	sub    al,0x67
  416e17:	je     0x416e2a
  416e19:	(bad)  
  416e1a:	in     eax,0xdf
  416e1c:	push   esi
  416e1d:	inc    eax
  416e1e:	call   0x5ced:0xeea2aadf
  416e25:	add    bh,bl
  416e27:	in     al,0x52
  416e29:	retf   0x26d0
  416e2c:	(bad)  
  416e2d:	enter  0xd498,0x47
  416e31:	xor    al,0xc8
  416e33:	(bad)  [esi+0x51]
  416e36:	std    
  416e37:	adc    bh,ah
  416e39:	mov    bh,0x22
  416e3b:	aad    0xf3
  416e3d:	in     al,dx
  416e3e:	add    ah,BYTE PTR [eax+0x65]
  416e41:	in     al,dx
  416e42:	(bad)  [ebp-0x797c994c]
  416e48:	(bad)  
  416e49:	jp     0x416e0b
  416e4b:	enter  0xf44b,0x9a
  416e4f:	xchg   esi,eax
  416e50:	pop    ebx
  416e51:	or     DWORD PTR [ebx+0x7f],esp
  416e54:	retf   
  416e55:	or     eax,0x8e6bb13f
  416e5a:	adc    eax,0x98303dcc
  416e5f:	rcr    dh,0x69
  416e62:	dec    esp
  416e63:	and    BYTE PTR ds:[ebp-0x7d20aacc],0xcb
  416e6b:	or     al,0xa8
  416e6d:	fistp  QWORD PTR [edx]
  416e6f:	pop    ss
  416e70:	es push esi
  416e72:	sub    BYTE PTR [ecx-0x47],cl
  416e75:	xchg   ecx,eax
  416e76:	pusha  
  416e77:	dec    edx
  416e78:	dec    eax
  416e79:	inc    edi
  416e7a:	(bad)  
  416e7b:	pop    ss
  416e7c:	jbe    0x416ee2
  416e7e:	test   eax,0x540e6812
  416e83:	dec    ebx
  416e84:	cmp    DWORD PTR [edi],ecx
  416e86:	or     BYTE PTR ds:0x6f32c87c,ch
  416e8c:	xor    al,0x84
  416e8e:	js     0x416e1d
  416e90:	cli    
  416e91:	bound  edi,QWORD PTR [ebx]
  416e93:	xchg   ebp,eax
  416e94:	cmp    al,0xdc
  416e96:	dec    BYTE PTR [ebx+eiz*1]
  416e99:	push   ss
  416e9a:	aas    
  416e9b:	(bad)  
  416e9c:	push   cs
  416e9d:	jmp    0x416e8c
  416e9f:	out    0x8a,eax
  416ea1:	mov    bl,0xf2
  416ea3:	push   ebp
  416ea4:	mov    edx,0x3309f185
  416ea9:	(bad)  
  416eaa:	popa   
  416eab:	add    edx,DWORD PTR [ecx-0x7]
  416eae:	pop    ss
  416eaf:	imul   edi,DWORD PTR [edx],0xa95eea33
  416eb5:	inc    edi
  416eb6:	xor    esi,DWORD PTR [edx+0x1d]
  416eb9:	mov    eax,ds:0x47d1b5c4
  416ebe:	sbb    DWORD PTR [esi],esi
  416ec0:	data16 sub BYTE PTR [ebx+0x6d],ch
  416ec4:	int    0x1c
  416ec6:	pop    esi
  416ec7:	mov    ?,WORD PTR [ebp+ecx*4+0x1f62326d]
  416ece:	enter  0xa923,0x3b
  416ed2:	dec    esp
  416ed3:	mov    edi,0xc294ac62
  416ed8:	in     eax,0x2d
  416eda:	sbb    DWORD PTR [edi+0x34],ecx
  416edd:	mov    ebp,ebp
  416edf:	(bad)  
  416ee0:	jmp    0x9cfb80d0
  416ee5:	push   0x5fcaea68
  416eea:	xor    ecx,edi
  416eec:	cmp    cl,0x6a
  416eef:	scas   eax,DWORD PTR es:[edi]
  416ef0:	bound  edi,QWORD PTR [ebp-0x3c735db6]
  416ef6:	out    0xa3,eax
  416ef8:	in     al,dx
  416ef9:	sbb    edi,esp
  416efb:	pop    eax
  416efc:	in     eax,0x18
  416efe:	xor    DWORD PTR [ebx-0x7b],0xffffffa9
  416f02:	cmp    al,0xad
  416f04:	jnp    0x416f2a
  416f06:	rcl    bl,0xf
  416f09:	xchg   edi,eax
  416f0a:	xlat   BYTE PTR ds:[ebx]
  416f0b:	jge    0x416eb7
  416f0d:	jb     0x416f5a
  416f0f:	in     al,0x5c
  416f11:	mov    BYTE PTR [ecx+eiz*8+0x21],bh
  416f15:	push   ebx
  416f16:	inc    edi
  416f17:	repnz dec eax
  416f19:	xor    ebp,DWORD PTR [edx-0x32]
  416f1c:	lock loopne 0x416ee9
  416f1f:	sub    eax,DWORD PTR [eax-0x55]
  416f22:	xor    bh,bh
  416f24:	mov    ch,0x97
  416f26:	fcomp  DWORD PTR [edi+esi*1-0x66]
  416f2a:	bound  ebx,QWORD PTR [edx]
  416f2c:	js     0x416f12
  416f2e:	retf   
  416f2f:	shufps xmm3,XMMWORD PTR [eax-0x31],0x84
  416f34:	stos   DWORD PTR es:[edi],eax
  416f35:	inc    ebx
  416f36:	adc    ah,BYTE PTR [edi+0x108d99f1]
  416f3c:	cmp    al,0x51
  416f3e:	or     eax,0x39fdc4ca
  416f43:	push   ebp
  416f44:	cmp    BYTE PTR [ecx+edx*4-0x7e],bl
  416f48:	mov    ecx,ebp
  416f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f4b:	call   0xd8d03639
  416f50:	ins    DWORD PTR es:[edi],dx
  416f51:	popw   ds
  416f53:	fadd   st,st(5)
  416f55:	dec    edi
  416f56:	xchg   ebp,eax
  416f57:	or     BYTE PTR fs:0x93d5ce34,ah
  416f5e:	push   ebp
  416f5f:	mov    dh,0xbe
  416f61:	ins    BYTE PTR es:[edi],dx
  416f62:	push   ebp
  416f63:	test   ecx,edi
  416f65:	in     eax,dx
  416f66:	pop    eax
  416f67:	fprem1 
  416f69:	lahf   
  416f6a:	sbb    al,0x54
  416f6d:	lahf   
  416f6e:	test   eax,ebp
  416f70:	arpl   dx,bx
  416f72:	push   0xa9239ddc
  416f77:	shl    BYTE PTR [esi-0x45],1
  416f7a:	cwde   
  416f7b:	sbb    eax,0x5fd6
  416f80:	add    BYTE PTR [eax],al
  416f82:	push   ebp
  416f83:	sub    al,0x5f
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x1397f626]
  416f90:	inc    edx
  416f91:	in     eax,0x3d
  416f93:	in     eax,dx
  416f94:	add    BYTE PTR [eax],al
  416f96:	hlt    
  416f97:	add    al,0x0
  416f99:	add    BYTE PTR [edi-0xe],bh
  416f9c:	cld    
  416f9d:	in     al,0x2b
  416f9f:	mov    ebp,0x72f3ac30
  416fa4:	cmp    al,0x95
  416fa6:	sub    esi,esp
  416fa8:	std    
  416fa9:	sub    dh,BYTE PTR [edi]
  416fab:	push   edx
  416fac:	cmp    cl,BYTE PTR [eax]
  416fae:	sti    
  416faf:	adc    eax,0x69118e9d
  416fb4:	adc    al,0x11
  416fb6:	xor    al,0xbd
  416fb8:	and    ecx,edi
  416fba:	arpl   ax,bx
  416fbc:	sub    ah,BYTE PTR es:[ebx+0x2]
  416fc0:	lds    eax,FWORD PTR [ecx-0x2f399e52]
  416fc6:	loop   0x41701f
  416fc8:	sbb    BYTE PTR [eax],cl
  416fca:	xchg   ebp,eax
  416fcb:	xor    ecx,DWORD PTR [edx]
  416fcd:	mov    edi,0x9e8ad2f1
  416fd2:	sbb    al,0x37
  416fd4:	rol    BYTE PTR [eax-0x53],0x58
  416fd8:	jmp    0x78f9:0x10dbaed4
  416fdf:	xor    edi,DWORD PTR [esi-0x4159aff]
  416fe5:	leave  
  416fe6:	push   esp
  416fe7:	sti    
  416fe8:	jmp    0x135b:0x870a605e
  416fef:	ret    
  416ff0:	pop    ecx
  416ff1:	mov    bh,0x1
  416ff3:	ins    DWORD PTR es:[edi],dx
  416ff4:	fmul   DWORD PTR [edx-0x1db4f4c5]
  416ffa:	mov    bl,0x39
  416ffc:	sbb    al,0x43
  416ffe:	call   0x7a8c88b4
  417003:	lea    esi,[ecx]
  417005:	out    0xdf,al
  417007:	jns    0x416fb2
  417009:	iret   
  41700a:	ja     0x416fdd
  41700c:	sub    al,dl
  41700e:	or     BYTE PTR [esi-0x78],bh
  417011:	lock jecxz 0x416fc8
  417014:	push   eax
  417015:	and    BYTE PTR [esi],dh
  417017:	sub    ah,BYTE PTR [esi+0x2210d65b]
  41701d:	pop    es
  41701e:	fbld   TBYTE PTR [edx+0x7d]
  417021:	repnz push 0xf7566b34
  417027:	mov    eax,ebx
  417029:	push   ss
  41702a:	xchg   ch,cl
  41702c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41702d:	into   
  41702e:	push   ebx
  417030:	xchg   DWORD PTR [eax+0x19],edi
  417033:	not    ebx
  417035:	pop    esi
  417036:	jmp    DWORD PTR [eax-0x68]
  417039:	test   eax,0x7a680fd0
  41703e:	popf   
  41703f:	cmp    al,0xb9
  417041:	cli    
  417042:	dec    edx
  417043:	sub    al,0x43
  417045:	mov    ds:0xa1fb779c,eax
  41704a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41704b:	mov    edi,0x733cfe7d
  417050:	mov    DWORD PTR [eax-0x6a],esi
  417053:	jnp    0x41704f
  417055:	jl     0x41707b
  417057:	mov    ah,0xef
  417059:	and    ch,ah
  41705b:	popa   
  41705c:	xchg   DWORD PTR [edx+0x2756f4d2],ecx
  417062:	jg     0x417022
  417064:	enter  0xc355,0xf5
  417068:	in     al,dx
  417069:	adc    DWORD PTR [ebx-0x56],edi
  41706c:	dec    edi
  41706d:	mov    esp,0x822078ba
  417072:	cld    
  417073:	ds xchg ebx,eax
  417075:	pop    ss
  417076:	sub    edi,DWORD PTR [eax+0x7e]
  417079:	jb     0x4170f0
  41707b:	cmc    
  41707c:	mov    DWORD PTR [eax],esi
  41707e:	fadd   DWORD PTR [esp+edi*2]
  417081:	mov    eax,0x683f4b9e
  417086:	jno    0x4170a6
  417088:	daa    
  417089:	jmp    0x17ec1e1b
  41708e:	push   edi
  41708f:	mov    bl,0xca
  417091:	out    0xca,al
  417093:	les    ecx,FWORD PTR [esi]
  417095:	mov    ecx,0xfb217191
  41709a:	(bad)  
  41709b:	or     al,0xff
  41709d:	(bad)  
  41709e:	adc    al,bh
  4170a0:	repz pop ecx
  4170a2:	ins    BYTE PTR es:[edi],dx
  4170a3:	mov    ds:0xe113decf,eax
  4170a8:	mov    bh,0xcf
  4170aa:	xchg   ecx,eax
  4170ab:	and    BYTE PTR [ebp-0x5c53a50a],dh
  4170b1:	and    DWORD PTR [esi*1+0x749cd8b0],0x92522b44
  4170bc:	mov    ebp,0xede3b9b1
  4170c1:	jle    0x417065
  4170c3:	mov    edi,0x790f1579
  4170c8:	cs aaa 
  4170ca:	and    eax,0x9d8a7b80
  4170cf:	jno    0x417144
  4170d1:	mov    ecx,0xc6963a3e
  4170d6:	push   edx
  4170d7:	mov    esi,0x40eb0d55
  4170dc:	sti    
  4170dd:	mov    bl,BYTE PTR [ecx]
  4170df:	aam    0xb9
  4170e1:	(bad)  
  4170e2:	cmp    edx,DWORD PTR ds:0xe9a6d873
  4170e8:	in     eax,0x5f
  4170ea:	pop    es
  4170eb:	adc    al,al
  4170ed:	sub    dl,BYTE PTR [eax-0x14]
  4170f0:	test   bl,0x46
  4170f3:	(bad)  
  4170f4:	shl    BYTE PTR [edi+0xd],cl
  4170f7:	int3   
  4170f8:	scas   al,BYTE PTR es:[edi]
  4170f9:	pusha  
  4170fa:	test   BYTE PTR [edi-0x77],0xad
  4170fe:	outs   dx,BYTE PTR ds:[esi]
  4170ff:	scas   eax,DWORD PTR es:[edi]
  417100:	sub    edx,DWORD PTR [esi+0x15039340]
  417106:	and    DWORD PTR [eax-0xf3afea5],esp
  41710c:	pop    es
  41710d:	daa    
  41710e:	aas    
  41710f:	mov    ebx,0xa8ae3f73
  417114:	aam    0xd
  417116:	jmp    0x4390:0xcacbb6ce
  41711d:	pushf  
  41711e:	aaa    
  41711f:	xchg   ebx,eax
  417120:	mov    ds:0x5428b295,eax
  417125:	ins    BYTE PTR es:[edi],dx
  417126:	xchg   edi,eax
  417127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417128:	idiv   DWORD PTR [esp+ecx*2+0x2a]
  41712c:	stos   DWORD PTR es:[edi],eax
  41712d:	mov    eax,0xafaff859
  417132:	add    BYTE PTR [edx-0xc],cl
  417135:	mov    es,WORD PTR [esi]
  417137:	(bad)  
  417138:	add    esp,0x5832b13
  41713e:	mov    dh,0xb3
  417140:	mov    BYTE PTR [ebx],dl
  417142:	mov    esp,0x369118cc
  417147:	sbb    al,0x4f
  417149:	fisubr WORD PTR [ebx+0x49]
  41714c:	(bad)  
  41714d:	cmp    eax,0xfdfada48
  417152:	pop    edi
  417153:	push   eax
  417154:	arpl   WORD PTR ds:0x497ed933,cx
  41715a:	test   bl,cl
  41715c:	inc    edx
  41715d:	nop
  41715e:	cwde   
  41715f:	outs   dx,DWORD PTR ds:[esi]
  417160:	sbb    bh,BYTE PTR [eax]
  417162:	sbb    al,0xfe
  417164:	cmp    DWORD PTR [esi],ebp
  417166:	in     al,0x1
  417168:	inc    ebp
  417169:	aaa    
  41716a:	dec    ebx
  41716b:	scas   al,BYTE PTR es:[edi]
  41716c:	cmp    al,0x3b
  41716e:	enter  0x588a,0xc5
  417172:	xor    al,0xff
  417174:	call   0x992e:0x891161c0
  41717b:	mov    ecx,0xfd979cd7
  417180:	cwde   
  417181:	int    0x74
  417183:	test   eax,0x135b97e
  417188:	sub    DWORD PTR [ebx],edi
  41718a:	push   eax
  41718b:	sbb    eax,0xef9ecee
  417190:	push   ebp
  417191:	jmp    0x831524e8
  417196:	daa    
  417197:	cmc    
  417198:	push   esi
  417199:	jmp    DWORD PTR [esi-0x2]
  41719c:	cmp    BYTE PTR [esi],0x34
  41719f:	popa   
  4171a0:	pusha  
  4171a1:	sbb    DWORD PTR [ebx-0x43],0xfffffff0
  4171a5:	push   edx
  4171a6:	loope  0x417147
  4171a8:	jp     0x4171f6
  4171aa:	loope  0x4171f8
  4171ac:	adc    ebp,edx
  4171ae:	inc    ebx
  4171af:	clc    
  4171b0:	sub    bh,dh
  4171b2:	aam    0xa9
  4171b4:	cs pop ecx
  4171b6:	pop    edi
  4171b7:	addr16 jbe 0x41715c
  4171ba:	aas    
  4171bb:	sbb    eax,0xbd8564aa
  4171c0:	aaa    
  4171c1:	inc    ebp
  4171c2:	outs   dx,DWORD PTR ds:[esi]
  4171c3:	sbb    al,0x6f
  4171c5:	sbb    BYTE PTR [esi+0x3b],bl
  4171c8:	stc    
  4171c9:	int3   
  4171ca:	aam    0x3c
  4171cc:	mov    edx,0xe35580b9
  4171d1:	xchg   ebx,eax
  4171d2:	sub    DWORD PTR gs:[eax],esp
  4171d5:	sub    DWORD PTR [ebp-0x6c],edx
  4171d8:	and    eax,0xe5fa8953
  4171dd:	les    ebx,FWORD PTR [ebx-0x6312bb72]
  4171e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e4:	or     bl,BYTE PTR [edi+0x264b4b4a]
  4171ea:	pop    edi
  4171eb:	test   eax,0x2c3fe713
  4171f0:	jb     0x41721f
  4171f2:	pop    es
  4171f3:	inc    edi
  4171f4:	fcmovnbe st,st(6)
  4171f6:	daa    
  4171f7:	push   esp
  4171f8:	or     al,0x38
  4171fa:	add    edi,DWORD PTR [eax]
  4171fc:	inc    ecx
  4171fd:	adc    BYTE PTR [edi+0x30cd8ad5],ah
  417203:	(bad)
  417207:	outs   dx,DWORD PTR ds:[esi]
  417208:	lea    edi,[ebp-0x6f6bab5c]
  41720e:	push   ebp
  41720f:	stos   BYTE PTR es:[edi],al
  417210:	mov    ds:0x85957fcb,eax
  417215:	fs sbb al,0xae
  417218:	ja     0x417216
  41721a:	fsub   DWORD PTR [ebx+0x47a2f2ed]
  417220:	cld    
  417221:	inc    eax
  417222:	sub    DWORD PTR gs:[ebp+0x6d],eax
  417226:	gs aam 0x5c
  417229:	xchg   ecx,eax
  41722a:	dec    edi
  41722b:	mov    ds:0x55482ee,al
  417230:	jge    0x4172a9
  417232:	lea    esp,ds:0xb912ecff
  417238:	adc    al,0x4b
  41723a:	lods   eax,DWORD PTR ds:[esi]
  41723b:	sub    eax,0xacd27c3a
  417240:	mov    esp,DWORD PTR [edi-0x3e]
  417243:	fnsave [ecx+0x1b221818]
  417249:	daa    
  41724a:	sub    al,0x83
  41724c:	lds    cx,DWORD PTR ds:0x3d8829a2
  417253:	pop    DWORD PTR [edi-0x57011583]
  417259:	inc    DWORD PTR [ebx-0x12f26c38]
  41725f:	dec    ebp
  417260:	xor    al,0xa2
  417262:	or     eax,0x2a6ded0d
  417267:	(bad)  
  417268:	push   ebx
  417269:	mov    ds:0x3d3414a7,eax
  41726e:	in     al,dx
  41726f:	test   DWORD PTR [edx-0x1209047e],esi
  417275:	es out dx,eax
  417277:	pop    ebx
  417278:	jl     0x417247
  41727a:	jp     0x4172a9
  41727c:	add    al,0xa7
  41727e:	push   es
  41727f:	aam    0xf9
  417281:	retf   0xcba
  417284:	in     eax,dx
  417285:	adc    al,0xa0
  417287:	lock (bad) 
  417289:	mov    ebp,0xdb2c47e4
  41728e:	cli    
  41728f:	mov    ebx,0x30a85ac4
  417294:	daa    
  417295:	ret    0x100d
  417298:	xchg   ebp,eax
  417299:	fidiv  DWORD PTR [esi-0x1f]
  41729c:	nop
  41729d:	lea    ecx,[eax-0x75972c5e]
  4172a3:	call   0x9b53:0xafe3b08c
  4172aa:	sbb    eax,0xf6cf8096
  4172af:	arpl   WORD PTR [edx-0x226675d7],si
  4172b5:	mov    eax,ds:0x568c45d8
  4172ba:	sbb    dh,ah
  4172bc:	fmul   QWORD PTR [esi]
  4172be:	lahf   
  4172bf:	sub    DWORD PTR [edx],ecx
  4172c1:	imul   esi,DWORD PTR [eax],0x73e30467
  4172c7:	cmp    BYTE PTR [edi-0x4d],0x86
  4172cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172cc:	lahf   
  4172cd:	sar    ebx,cl
  4172cf:	push   ecx
  4172d0:	int    0x8f
  4172d2:	mov    bl,0x7f
  4172d4:	or     eax,0xfbb9504f
  4172d9:	mov    ecx,0xbdd594e5
  4172de:	pop    edi
  4172df:	jg     0x4172f8
  4172e1:	es ins BYTE PTR es:[edi],dx
  4172e3:	xchg   ebx,eax
  4172e4:	mov    al,ds:0x31742a6e
  4172e9:	mov    dh,0x4f
  4172eb:	fst    QWORD PTR ds:[eax-0x5f32b1de]
  4172f2:	jp     0x4172f9
  4172f4:	cmp    eax,0x4c71f4e2
  4172f9:	cli    
  4172fa:	fnstenv [eax]
  4172fc:	push   ds
  4172fd:	mov    ds:0x7e70e1a6,al
  417302:	add    dl,ah
  417304:	dec    esi
  417305:	out    0x39,al
  417307:	xor    eax,0x8eb4ad44
  41730c:	mov    dh,0xc2
  41730e:	in     eax,0xc9
  417310:	popa   
  417311:	sbb    eax,0x5ba87103
  417316:	mov    BYTE PTR [ebx+0x655e94ca],bh
  41731c:	scas   eax,DWORD PTR es:[edi]
  41731d:	sbb    BYTE PTR [esi-0x5705abb4],al
  417323:	mov    ecx,0xc3c601de
  417328:	(bad)  
  417329:	mov    esi,0x33687cd7
  41732e:	xchg   BYTE PTR [ecx],bl
  417330:	cli    
  417331:	aas    
  417332:	stos   DWORD PTR es:[edi],eax
  417333:	or     dh,BYTE PTR [edx]
  417335:	sbb    al,0x9
  417337:	in     al,0xc5
  417339:	adc    bh,al
  41733b:	in     al,dx
  41733c:	and    eax,0x9c6f9fac
  417341:	pop    esi
  417342:	inc    edi
  417343:	add    al,dh
  417345:	push   0x48
  417347:	cmc    
  417348:	stos   BYTE PTR es:[edi],al
  417349:	(bad)  
  41734a:	jg     0x417366
  41734c:	std    
  41734d:	push   ebx
  41734e:	imul   DWORD PTR [ebx+0x72f6acdb]
  417354:	icebp  
  417355:	cdq    
  417356:	mov    eax,ds:0x89716860
  41735b:	(bad)  
  41735d:	push   cs
  41735e:	lods   eax,DWORD PTR ds:[esi]
  41735f:	aas    
  417360:	out    0x67,eax
  417362:	sbb    eax,0x73b7b3ee
  417367:	xchg   ebx,eax
  417368:	mov    ah,0xf4
  41736a:	scas   eax,DWORD PTR es:[edi]
  41736b:	add    eax,0xadb68dec
  417370:	aas    
  417371:	ret    0xad07
  417374:	cmc    
  417375:	xor    eax,DWORD PTR [eax]
  417377:	inc    esp
  417378:	addr16 push ebp
  41737a:	jno    0x417364
  41737c:	xor    al,0x5d
  41737e:	lea    esp,[ecx]
  417380:	bswap  esi
  417382:	xchg   ebp,eax
  417383:	rcl    BYTE PTR [ebp+0x4b],0x51
  417387:	sar    BYTE PTR [edi-0x15],cl
  41738a:	(bad)  
  41738b:	jmp    0xf69:0xbd65238
  417392:	in     al,0xa1
  417394:	xlat   BYTE PTR ds:[ebx]
  417395:	adc    cl,BYTE PTR [ebx]
  417397:	pop    esi
  417398:	leave  
  417399:	pop    edi
  41739a:	or     eax,0x6d51f734
  41739f:	(bad)  
  4173a0:	rcr    DWORD PTR [esi],cl
  4173a2:	pop    edx
  4173a3:	jp     0x417376
  4173a5:	sub    al,0xff
  4173a7:	mov    ecx,0xa1c2e62d
  4173ac:	test   DWORD PTR [eax+0x21cc8dbc],0xbe8a9d0e
  4173b6:	cli    
  4173b7:	mov    ds:0xe7e4b336,eax
  4173bc:	jg     0x417352
  4173be:	or     eax,eax
  4173c0:	jge    0x417357
  4173c2:	dec    esp
  4173c3:	jmp    0x2bb2:0x55ac7915
  4173ca:	iret   
  4173cb:	rol    ebx,1
  4173cd:	mov    edi,0xed5edba
  4173d2:	mov    cl,0x20
  4173d4:	in     eax,dx
  4173d5:	pop    edi
  4173d6:	lock jmp 0x4173f4
  4173d9:	imul   esp,DWORD PTR [ecx-0x76],0xe32d5d7c
  4173e0:	mov    al,0x16
  4173e2:	jmp    0x417434
  4173e4:	rcr    ah,1
  4173e6:	mov    esi,0x8d9524a6
  4173eb:	stos   BYTE PTR es:[edi],al
  4173ec:	fadd   DWORD PTR [esi+0x75930262]
  4173f2:	test   DWORD PTR [edi],esp
  4173f4:	inc    edi
  4173f5:	pop    esi
  4173f6:	adc    al,0x74
  4173f8:	sub    DWORD PTR [ebp-0x224c6b48],eax
  4173fe:	(bad)  
  4173ff:	and    BYTE PTR ds:0x3179e4d7,bl
  417405:	outs   dx,DWORD PTR ds:[esi]
  417406:	lahf   
  417407:	xor    al,0xf7
  417409:	js     0x417463
  41740b:	xchg   ecx,eax
  41740c:	mov    ebp,0xdb033f73
  417411:	sub    al,0x0
  417413:	hlt    
  417414:	enter  0xde8b,0x4d
  417418:	xlat   BYTE PTR ds:[ebx]
  417419:	mov    edi,0xf6d8aebe
  41741e:	add    dl,ch
  417420:	out    0x29,eax
  417422:	or     cl,BYTE PTR [eax]
  417424:	sbb    ch,ah
  417426:	ret    
  417427:	jmp    0xc98009f9
  41742c:	loope  0x417463
  41742e:	(bad)  
  41742f:	(bad)  [ebp+0x43]
  417432:	cmp    BYTE PTR [esi+0x70],bh
  417435:	sahf   
  417436:	cs data16 fdivr st(3),st
  41743a:	push   cx
  41743c:	or     cl,BYTE PTR [edx+0x30eed0b4]
  417442:	jo     0x41748e
  417444:	test   BYTE PTR [ebx-0x60904af3],ah
  41744a:	xor    esp,DWORD PTR [ebp-0x5417546e]
  417450:	lahf   
  417451:	or     dh,bl
  417453:	pusha  
  417454:	add    esp,DWORD PTR [ebx+0x64f76c8b]
  41745a:	xchg   edx,eax
  41745b:	mov    ds:0x95e86e47,eax
  417460:	(bad)  
  417461:	pop    ds
  417462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417463:	not    BYTE PTR [ebx-0x1686eb6]
  417469:	ja     0x4174b5
  41746b:	imul   DWORD PTR [ecx*4-0x5fa29ff7]
  417472:	pop    edx
  417473:	out    0x4,al
  417475:	sub    eax,0x31ab7a26
  41747a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747b:	inc    edx
  41747c:	pop    esp
  41747d:	adc    DWORD PTR [ebx-0x60],esi
  417480:	mov    ebx,0xed15aa12
  417485:	dec    edx
  417486:	addr16 dec ebp
  417488:	mov    BYTE PTR [ebx-0x929031e],al
  41748e:	add    BYTE PTR [eax],al
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0xc384
  4174a0:	dec    esi
  4174a1:	aas    
  4174a2:	xor    edx,esi
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	hlt    
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR [edx],bl
  4174ab:	inc    esp
  4174ac:	leave  
  4174ad:	cmp    eax,0xd7a4069
  4174b2:	dec    esi
  4174b3:	call   0xe3fb:0x408da61c
  4174ba:	jo     0x417498
  4174bc:	out    0xcf,eax
  4174be:	inc    esi
  4174bf:	shr    DWORD PTR [ecx+ebp*4-0x624c817a],0x7a
  4174c7:	mov    bh,0x8e
  4174c9:	in     eax,0xac
  4174cb:	jle    0x417527
  4174cd:	mov    esp,0x8412a58d
  4174d2:	add    eax,0x9cdd4df2
  4174d7:	inc    ecx
  4174d8:	sub    cl,ch
  4174da:	xor    ebx,DWORD PTR [edx]
  4174dc:	outs   dx,BYTE PTR ds:[esi]
  4174dd:	pop    edi
  4174de:	shl    esp,cl
  4174e0:	mov    es,WORD PTR [eax+0x4e954d53]
  4174e6:	daa    
  4174e7:	add    DWORD PTR [ebx+0x1f],esi
  4174ea:	ds sbb eax,0xa6b7912e
  4174f0:	bound  ebp,QWORD PTR [edi]
  4174f2:	shr    ch,cl
  4174f4:	xchg   DWORD PTR [ebx],ecx
  4174f6:	mov    ds:0xaf1bbfee,eax
  4174fb:	sbb    eax,0x63e42bd9
  417500:	mov    ds:0xe6ac5d9,al
  417505:	mov    al,ds:0x67105afa
  41750a:	dec    esi
  41750b:	fild   QWORD PTR ds:0xdc79fed
  417511:	les    edx,FWORD PTR [edx]
  417513:	cmp    al,0x76
  417515:	gs loop 0x41752b
  417518:	jg     0x417570
  41751a:	sub    eax,0xc91fe94f
  41751f:	(bad)  
  417520:	cmc    
  417521:	js     0x417598
  417523:	out    dx,eax
  417524:	push   eax
  417525:	leave  
  417526:	cmp    al,ch
  417528:	das    
  417529:	repz jecxz 0x417520
  41752c:	sbb    al,0x3b
  41752e:	and    DWORD PTR [edx-0x13],ebx
  417531:	mov    eax,DWORD PTR [esi]
  417533:	pop    ss
  417534:	cmp    esp,ecx
  417536:	cmp    dl,ah
  417538:	sahf   
  417539:	test   BYTE PTR [edx-0x36ec63bd],0x64
  417540:	push   ss
  417541:	jo     0x4175a8
  417543:	mov    BYTE PTR [edi],0x1b
  417546:	mov    ch,0xff
  417548:	jo     0x417530
  41754a:	lods   al,BYTE PTR ds:[esi]
  41754c:	idiv   BYTE PTR [edi]
  41754e:	call   0x1834:0xbf65c158
  417555:	aad    0xd0
  417557:	iret   
  417558:	or     al,0x4a
  41755a:	mov    ecx,0x8a5e93f
  41755f:	xchg   DWORD PTR [ebp-0x77],eax
  417562:	jmp    0x8cdaa5d5
  417567:	je     0x417595
  417569:	sbb    DWORD PTR [ebx],0x33eeca09
  41756f:	xchg   edx,edx
  417571:	dec    edi
  417572:	push   esi
  417573:	push   ecx
  417574:	or     ebx,ebx
  417576:	xchg   esi,eax
  417577:	mov    ds:0x64ade90a,eax
  41757c:	push   es
  41757d:	and    bh,BYTE PTR [esi]
  41757f:	sub    BYTE PTR [eax],cl
  417581:	inc    edi
  417582:	xchg   ebx,eax
  417583:	test   al,0xe
  417585:	sti    
  417586:	fwait
  417587:	aam    0xcf
  417589:	loopne 0x41753d
  41758b:	fdivr  QWORD PTR [ebp-0x4e989810]
  417591:	mov    ?,WORD PTR [ecx+esi*4]
  417594:	scas   al,BYTE PTR es:[edi]
  417595:	xlat   BYTE PTR ds:[ebx]
  417596:	mov    ch,0xb2
  417598:	push   esi
  417599:	aam    0xe0
  41759b:	mov    eax,0x303a7fe8
  4175a0:	daa    
  4175a1:	aaa    
  4175a2:	inc    ebx
  4175a3:	jb     0x417573
  4175a5:	rcl    BYTE PTR [eax],cl
  4175a7:	out    dx,al
  4175a8:	sub    DWORD PTR [edi+0x155d40fe],esp
  4175ae:	test   DWORD PTR [edi+ecx*4-0xb],ebp
  4175b2:	cmp    bh,bh
  4175b4:	mov    al,ds:0x8e37a497
  4175b9:	or     al,0x66
  4175bb:	or     eax,0xb66a4df0
  4175c0:	mov    eax,ss
  4175c2:	push   0x414dbd35
  4175c7:	push   edi
  4175c8:	mov    WORD PTR [bp+di+0xf],ss
  4175cc:	add    bl,bl
  4175ce:	xchg   ebp,eax
  4175cf:	jb     0x41757a
  4175d1:	adc    BYTE PTR [eax+0x47],dh
  4175d4:	jo     0x417590
  4175d6:	aas    
  4175d7:	xchg   edi,eax
  4175d8:	mov    esp,0x1098da02
  4175dd:	push   ecx
  4175de:	mov    edi,0xd21c0250
  4175e3:	aam    0xfa
  4175e5:	adc    eax,0x50991589
  4175ea:	fst    st(5)
  4175ec:	push   es
  4175ed:	push   0xffffffaf
  4175ef:	shr    eax,1
  4175f1:	ss inc esp
  4175f3:	dec    ebp
  4175f4:	push   es
  4175f5:	push   edi
  4175f6:	adc    al,0x9b
  4175f8:	popa   
  4175f9:	pop    esi
  4175fa:	jno    0x417587
  4175fc:	test   al,0x8b
  4175fe:	es sub ah,cl
  417601:	mov    cl,0xa6
  417603:	iret   
  417604:	in     eax,0x23
  417606:	cmp    BYTE PTR [edi+0x60],0xb1
  41760a:	mov    esp,0x4dfd8492
  41760f:	push   eax
  417610:	cmp    al,0xf4
  417612:	fisubr DWORD PTR ds:0x557006ea
  417618:	xchg   edx,eax
  417619:	outs   dx,DWORD PTR ds:[esi]
  41761a:	ror    DWORD PTR [ebp+0x6df452e0],0x77
  417621:	mov    edx,0x58aa6e5a
  417626:	sbb    eax,edx
  417628:	ss jne 0x417654
  41762b:	or     al,0x1b
  41762d:	in     al,0xee
  41762f:	jmp    0x6826af65
  417634:	mov    ecx,0x8c8969ac
  417639:	lock push 0x4514aee6
  41763f:	adc    al,0x65
  417641:	mov    edi,0xb3368692
  417646:	(bad)  
  417647:	mov    dl,0x40
  417649:	cld    
  41764a:	mov    al,0x7d
  41764c:	in     eax,0x8d
  41764e:	mov    ds:0x9dcf403c,eax
  417653:	mov    ecx,0x318db259
  417658:	fsub   DWORD PTR [ebx+0x78]
  41765b:	bound  esp,QWORD PTR [ecx]
  41765d:	or     al,0x5
  41765f:	scas   al,BYTE PTR es:[edi]
  417660:	ds das 
  417662:	not    DWORD PTR [esi+0x4c]
  417665:	adc    al,0x25
  417667:	sbb    DWORD PTR [edi],ecx
  417669:	mov    ebp,0xc192fd26
  41766e:	cmp    eax,0x4625fece
  417673:	xor    esi,ecx
  417675:	mov    edx,0x494818a8
  41767a:	mov    WORD PTR [edx-0x33],cs
  41767d:	cs jns 0x417621
  417680:	fsub   QWORD PTR [edi+ebx*1-0x28]
  417684:	bnd jmp 0x417670
  417687:	mov    WORD PTR [ebx-0x7d3fa5c9],fs
  41768d:	mov    dh,BYTE PTR [ecx+edx*8+0x741c7918]
  417694:	mov    eax,ds:0xa4b9183f
  417699:	mov    al,ds:0xb0d8cbad
  41769e:	lods   eax,DWORD PTR ds:[esi]
  41769f:	push   ebx
  4176a0:	jg     0x417679
  4176a2:	cwde   
  4176a3:	pop    ecx
  4176a4:	in     al,dx
  4176a5:	cmp    eax,0xbd982f8a
  4176aa:	jno    0x417709
  4176ac:	int3   
  4176ad:	gs jne 0x417641
  4176b0:	push   eax
  4176b1:	jmp    0xa0c8469d
  4176b6:	ds mov bl,0xa5
  4176b9:	std    
  4176ba:	cmp    eax,0x61f853b7
  4176bf:	cmc    
  4176c0:	aaa    
  4176c1:	data16 cmp al,0xfb
  4176c4:	fs (bad) 
  4176c6:	cmp    dl,BYTE PTR [ebp-0x68e3c3c4]
  4176cc:	fild   WORD PTR ds:0x1e79b0ff
  4176d2:	imul   DWORD PTR [eax+0x19]
  4176d5:	jnp    0x41769e
  4176d7:	das    
  4176d8:	push   ebp
  4176d9:	ret    0xc061
  4176dc:	xor    BYTE PTR [edi+0xf79fc51],ah
  4176e2:	dec    ecx
  4176e3:	pop    ebp
  4176e4:	push   esp
  4176e5:	push   cs
  4176e6:	iret   
  4176e7:	inc    ecx
  4176e8:	jno    0x417709
  4176ea:	add    eax,0x8881ae3a
  4176ef:	mov    dl,0xc
  4176f1:	jl     0x417769
  4176f3:	dec    ebx
  4176f4:	xor    edi,DWORD PTR [ebp+0xb]
  4176f7:	nop
  4176f8:	inc    ecx
  4176f9:	gs jl  0x4176fd
  4176fc:	(bad)  
  4176fd:	pop    edi
  4176fe:	push   ss
  4176ff:	sbb    BYTE PTR [eax+0x5a70c6ad],bh
  417705:	lock aam 0xad
  417708:	hlt    
  417709:	lods   eax,DWORD PTR ds:[esi]
  41770a:	jns    0x417731
  41770c:	and    BYTE PTR [ebx-0x53],bh
  41770f:	add    eax,0xa17f0999
  417714:	xor    BYTE PTR [edi+0x1d],bh
  417717:	or     al,0x4a
  417719:	(bad)  
  41771a:	cli    
  41771b:	fsubr  DWORD PTR [edi]
  41771d:	xor    DWORD PTR [esp+ebp*1+0x4c51d53a],esi
  417724:	mov    ah,ah
  417726:	adc    cl,al
  417728:	xchg   ecx,eax
  417729:	mov    ax,0x3a00
  41772d:	es (bad) 
  41772f:	shl    DWORD PTR [esi],1
  417731:	inc    eax
  417732:	sbb    al,0x76
  417734:	aaa    
  417735:	xchg   ecx,eax
  417736:	aad    0x67
  417738:	popa   
  417739:	add    BYTE PTR [ebx-0x13],bl
  41773c:	add    al,0xf5
  41773e:	arpl   WORD PTR [ecx+0x2608f68a],si
  417744:	lock (bad) 
  417746:	notrack call DWORD PTR [ebp+0x1a]
  41774a:	cmp    bh,BYTE PTR [ecx-0x48fdf82c]
  417750:	push   ebx
  417751:	or     dh,BYTE PTR [esi-0x68]
  417754:	jmp    0x6b1b:0x9c7fcf4b
  41775b:	dec    eax
  41775c:	outs   dx,DWORD PTR ds:[esi]
  41775d:	pop    ss
  41775e:	pop    eax
  41775f:	ins    DWORD PTR es:[edi],dx
  417760:	fwait
  417761:	mov    es,WORD PTR [eax+0x40a09ccd]
  417767:	fldenv [eax]
  417769:	jo     0x41779b
  41776b:	adc    al,0xe1
  41776d:	xor    esp,DWORD PTR [esi]
  41776f:	jmp    0x417776
  417771:	sbb    DWORD PTR [eax+0x76],esp
  417774:	stc    
  417775:	out    dx,al
  417776:	cld    
  417777:	(bad)  
  417778:	(bad)  
  417779:	(bad)  
  41777a:	ds test eax,0x1366fa50
  417780:	fild   DWORD PTR [edx+edi*8]
  417783:	sub    DWORD PTR [esi+0x15f7a902],eax
  417789:	mov    es,WORD PTR [esi+edx*4]
  41778c:	jae    0x417779
  41778e:	sahf   
  41778f:	retf   0x354a
  417792:	jl     0x41775c
  417794:	adc    al,0x3c
  417796:	mov    ah,0x38
  417798:	popa   
  417799:	into   
  41779a:	pop    ds
  41779b:	and    ecx,esi
  41779d:	popa   
  41779e:	mov    eax,0x3dddd6b
  4177a3:	sbb    al,0x3f
  4177a5:	push   0xe59fe93
  4177aa:	in     al,dx
  4177ab:	push   cs
  4177ac:	jg     0x417776
  4177ae:	dec    ebx
  4177af:	add    al,0x61
  4177b1:	movzx  ecx,BYTE PTR ds:0xe1649232
  4177b8:	mov    esi,0x5a1a4802
  4177bd:	pop    esp
  4177be:	imul   edi,ebp,0x3efd257c
  4177c4:	mov    ss,WORD PTR [edx-0x5a]
  4177c7:	or     al,dh
  4177c9:	and    eax,0x808f5c8d
  4177ce:	sub    al,0xb1
  4177d0:	pcmpeqb mm5,QWORD PTR ds:0x89492d9f
  4177d7:	nop
  4177d8:	test   al,0x56
  4177da:	out    0x66,al
  4177dc:	dec    ebp
  4177dd:	mov    edi,0xd42a95ba
  4177e2:	mov    ebp,0x9df9f92d
  4177e7:	js     0x4177aa
  4177e9:	aaa    
  4177ea:	dec    ebp
  4177eb:	(bad)  
  4177ec:	std    
  4177ed:	jbe    0x4177ee
  4177ef:	mov    dl,0x48
  4177f1:	pop    ebx
  4177f2:	jp     0x4177ce
  4177f4:	inc    esp
  4177f5:	out    0xd9,eax
  4177f7:	in     eax,dx
  4177f8:	xchg   edi,eax
  4177f9:	fsub   QWORD PTR [edi+0x14a96633]
  4177ff:	mov    dh,0x59
  417801:	es nop
  417803:	dec    BYTE PTR [eax+ebx*4]
  417806:	mov    dl,0xec
  417808:	clc    
  417809:	inc    ebx
  41780a:	jne    0x4177b0
  41780c:	ss jmp 0x4177e0
  41780f:	xlat   BYTE PTR ds:[ebx]
  417810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417811:	pop    ebx
  417812:	xchg   BYTE PTR [edi],cl
  417814:	dec    ebp
  417815:	dec    edi
  417816:	mov    ds:0xcac77ec1,eax
  41781b:	out    dx,al
  41781c:	out    0x80,eax
  41781e:	js     0x41781f
  417820:	sti    
  417821:	jmp    0x314fda45
  417826:	les    esp,FWORD PTR [edx]
  417828:	lahf   
  417829:	into   
  41782a:	leave  
  41782b:	stos   DWORD PTR es:[edi],eax
  41782c:	lods   eax,DWORD PTR ds:[esi]
  41782d:	push   es
  41782e:	repnz fwait
  417830:	mov    al,0xf7
  417832:	pop    esp
  417833:	mov    cl,0x7d
  417835:	jle    0x41780d
  417837:	aam    0x90
  417839:	xor    bh,BYTE PTR [ebx]
  41783b:	mov    ds:0x8060f0aa,al
  417840:	cmp    esi,DWORD PTR [edx]
  417842:	xor    cl,BYTE PTR [esi+0x6f]
  417845:	mov    al,0x9c
  417847:	inc    edx
  417848:	out    dx,al
  417849:	sbb    eax,0x58bbf6fd
  41784e:	mov    edx,0xbb46c5c9
  417853:	lods   eax,DWORD PTR ds:[esi]
  417854:	jne    0x41787c
  417856:	lods   eax,DWORD PTR ds:[esi]
  417857:	sub    eax,0x20fecb30
  41785c:	aam    0x46
  41785e:	xchg   edi,eax
  41785f:	or     eax,0x9c006698
  417864:	fist   DWORD PTR [ebp-0x16]
  417867:	or     esp,edi
  417869:	rol    BYTE PTR [ebx+0x23],0xbd
  41786d:	pop    edx
  41786e:	aam    0x29
  417870:	inc    ebx
  417871:	(bad)  
  417872:	and    eax,0xef808b4a
  417877:	je     0x417837
  417879:	jae    0x41782f
  41787b:	lock jne 0x4178e5
  41787e:	imul   ecx,DWORD PTR [ecx],0x21
  417881:	stos   BYTE PTR es:[edi],al
  417882:	icebp  
  417883:	or     esp,DWORD PTR [edi-0x57]
  417886:	push   ecx
  417887:	fistp  WORD PTR [edx+0x4e42923f]
  41788d:	jle    0x41789e
  41788f:	cmp    al,0x58
  417891:	stos   BYTE PTR es:[edi],al
  417892:	sbb    BYTE PTR [ecx-0x646b63a9],0x0
  417899:	fsub   DWORD PTR [ecx]
  41789b:	mov    ds:0xc1c5814a,eax
  4178a0:	or     DWORD PTR [eax+0x34],ecx
  4178a3:	and    dl,cl
  4178a5:	cmp    ah,BYTE PTR [edi-0x11]
  4178a8:	fstp   st(6)
  4178aa:	retf   
  4178ab:	jmp    0x417863
  4178ad:	sbb    DWORD PTR [ebx-0x54],eax
  4178b0:	ins    BYTE PTR es:[edi],dx
  4178b1:	mov    ebp,DWORD PTR [esi-0x42d79713]
  4178b7:	and    DWORD PTR [edx-0x6d7ef38b],eax
  4178bd:	jns    0x417874
  4178bf:	jns    0x41790f
  4178c1:	jne    0x4178d1
  4178c3:	dec    ecx
  4178c4:	add    DWORD PTR [esp+eax*2+0x6d],edi
  4178c8:	rcr    DWORD PTR [eax],1
  4178ca:	sahf   
  4178cb:	xor    BYTE PTR [edi-0x6aba10e0],dh
  4178d1:	(bad)  [ecx-0x73fc3ecd]
  4178d7:	xchg   edx,eax
  4178d8:	sub    al,0xcc
  4178da:	(bad)  
  4178db:	fwait
  4178dc:	adc    eax,0xd16baecf
  4178e1:	sbb    BYTE PTR [ecx-0x6f24c2ee],ah
  4178e7:	dec    ecx
  4178e8:	rol    DWORD PTR [edx-0x4a],0x47
  4178ec:	lods   al,BYTE PTR ds:[esi]
  4178ed:	mov    es,WORD PTR [eax+0x59]
  4178f0:	and    BYTE PTR [edi-0x175cd6b],al
  4178f6:	loop   0x41796f
  4178f8:	mov    ch,0xef
  4178fa:	adc    BYTE PTR [ebx+esi*8-0x6d7f6527],cl
  417901:	sub    esp,edx
  417903:	cmp    ecx,edi
  417905:	lods   eax,DWORD PTR ds:[esi]
  417906:	call   0x92ca9459
  41790b:	(bad)  
  41790c:	jb     0x417929
  41790e:	xor    dh,bh
  417910:	mov    ebx,0xf64a8840
  417915:	mov    cl,BYTE PTR [ebp-0x69]
  417918:	sar    DWORD PTR [ebx-0x34],0x92
  41791c:	fsubrp st(2),st
  41791e:	(bad)  
  417920:	xor    al,0x92
  417922:	jl     0x417917
  417924:	mov    bh,0xfa
  417926:	jle    0x417954
  417928:	sbb    dl,BYTE PTR [edx+0x2fd6581e]
  41792e:	dec    esi
  41792f:	shl    BYTE PTR [ebx+edx*8],0xd7
  417933:	pop    edx
  417934:	ret    
  417935:	cmp    bh,bl
  417937:	cdq    
  417938:	nop
  417939:	idiv   bl
  41793b:	into   
  41793c:	jecxz  0x41791b
  41793e:	add    ch,dl
  417940:	push   0xffffffef
  417942:	xchg   DWORD PTR [ebp-0x66],esp
  417945:	lods   eax,DWORD PTR ds:[esi]
  417946:	mov    DWORD PTR [edi+0x25],eax
  417949:	mov    eax,ds:0x7bcdd962
  41794e:	fisub  WORD PTR [esi+0x4f]
  417951:	push   cs
  417952:	xchg   edi,eax
  417953:	mov    ds:0x477a33f0,eax
  417958:	sbb    DWORD PTR [eax-0x1ad07746],ebx
  41795e:	adc    DWORD PTR [ebp-0x11],edi
  417961:	aam    0x7e
  417963:	test   al,0xaa
  417965:	adc    DWORD PTR [edx+0x1f07d1c5],eax
  41796b:	fs xchg ecx,eax
  41796d:	out    dx,eax
  41796e:	stos   BYTE PTR es:[edi],al
  41796f:	mov    ds:0x78675110,al
  417974:	pop    edx
  417975:	mov    al,ds:0x702cf6f7
  41797a:	push   edx
  41797b:	push   cs
  41797c:	xchg   ecx,eax
  41797d:	pop    esi
  41797e:	push   es
  41797f:	cli    
  417980:	je     0x417905
  417982:	out    dx,eax
  417983:	jg     0x41799b
  417985:	mov    ss,WORD PTR [ecx+ebp*8]
  417988:	fidivr DWORD PTR [ebp+0x60]
  41798b:	jns    0x417986
  41798d:	mov    esi,ds
  41798f:	sti    
  417990:	jp     0x417989
  417992:	shl    DWORD PTR ds:0x3c823565,1
  417998:	and    ah,BYTE PTR [ebx+0x1edfc076]
  41799e:	add    BYTE PTR [eax],al
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x18951375
  4179b1:	mov    esi,0xf725
  4179b6:	hlt    
  4179b7:	add    al,0x0
  4179b9:	add    BYTE PTR [edi-0x15],ch
  4179bc:	aaa    
  4179bd:	ins    WORD PTR es:[edi],dx
  4179bf:	and    bl,ch
  4179c1:	push   cs
  4179c2:	lods   eax,DWORD PTR ds:[esi]
  4179c3:	shl    bl,cl
  4179c5:	shl    BYTE PTR [ebp-0x2f],cl
  4179c8:	jl     0x41795b
  4179ca:	adc    BYTE PTR [edx-0x39f9e5ae],0x63
  4179d1:	outs   dx,BYTE PTR ds:[esi]
  4179d2:	push   cs
  4179d3:	call   0x25082603
  4179d8:	mov    ah,0xe9
  4179da:	mov    cl,0x69
  4179dc:	in     al,dx
  4179dd:	hlt    
  4179de:	mov    ah,0xa3
  4179e0:	add    BYTE PTR [ebx+0x22874d53],bl
  4179e6:	and    eax,0x7ede30bb
  4179eb:	inc    ebp
  4179ec:	xchg   ebp,eax
  4179ed:	loopne 0x417a6c
  4179ef:	mov    ecx,0x564ea1f4
  4179f4:	add    BYTE PTR [edx],ah
  4179f6:	fstp   DWORD PTR ds:0x26cec54a
  4179fc:	sbb    eax,0x8a21c1b4
  417a01:	jae    0x417a2b
  417a03:	ds hlt 
  417a05:	mov    cl,0x93
  417a07:	ret    0x9dd
  417a0a:	(bad)  
  417a0b:	cmp    ebx,DWORD PTR [eax]
  417a0d:	pop    edi
  417a0e:	adc    al,0x23
  417a10:	popa   
  417a11:	dec    esi
  417a12:	enter  0xbb1e,0xb1
  417a16:	pusha  
  417a17:	xlat   BYTE PTR cs:[ebx]
  417a19:	inc    esi
  417a1a:	jnp    0x41799f
  417a1c:	mov    bh,0xb2
  417a1e:	push   es
  417a1f:	shl    BYTE PTR [ebx],0x79
  417a22:	fidiv  WORD PTR [edi]
  417a24:	imul   edx,DWORD PTR [edi-0x37890c86],0xfb6cbb64
  417a2e:	je     0x417a2b
  417a30:	inc    esp
  417a31:	or     eax,0x742846d1
  417a36:	fist   WORD PTR [edx]
  417a38:	je     0x417a87
  417a3a:	rcr    BYTE PTR [esi],cl
  417a3c:	into   
  417a3d:	jne    0x417a89
  417a3f:	jmp    DWORD PTR [edi]
  417a41:	popf   
  417a42:	adc    BYTE PTR [ecx+edi*1-0x22],dl
  417a46:	sbb    al,0xbd
  417a49:	inc    edx
  417a4a:	out    dx,eax
  417a4b:	cs dec ebx
  417a4d:	jl     0x417a6b
  417a4f:	mov    ds:0x44df692c,eax
  417a54:	or     eax,0xfa95a170
  417a59:	jne    0x417abe
  417a5b:	push   ss
  417a5c:	xchg   esi,eax
  417a5d:	lahf   
  417a5e:	push   es
  417a5f:	push   esp
  417a60:	test   ebp,0xe2e9a6f1
  417a66:	ins    DWORD PTR es:[edi],dx
  417a67:	leave  
  417a68:	inc    esp
  417a69:	je     0x417ad1
  417a6b:	fucomp st(2)
  417a6d:	repz bound ebx,QWORD PTR ss:[edx]
  417a71:	jl     0x417aca
  417a73:	mov    DWORD PTR [ebp+0x533e728f],esi
  417a79:	psllw  mm2,QWORD PTR [ecx+0xc]
  417a7d:	xchg   edi,eax
  417a7e:	cmp    eax,0x8da2eb4b
  417a83:	loope  0x417aff
  417a85:	jmp    0x417a45
  417a87:	push   ss
  417a88:	test   al,0xa6
  417a8a:	pop    ebx
  417a8b:	clc    
  417a8c:	push   ebx
  417a8d:	xchg   esp,eax
  417a8e:	xchg   edi,eax
  417a8f:	popa   
  417a90:	push   ds
  417a91:	mov    eax,ds:0xbd4c48a3
  417a96:	jecxz  0x417ad9
  417a98:	popa   
  417a99:	in     al,0x77
  417a9b:	aad    0x23
  417a9d:	shr    DWORD PTR [edi-0x2c],cl
  417aa0:	jg     0x417a78
  417aa2:	mov    DWORD PTR [eax],edi
  417aa4:	(bad)  
  417aa5:	(bad)  
  417aa6:	stos   DWORD PTR es:[edi],eax
  417aa7:	(bad)  
  417aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa9:	cmp    DWORD PTR [ebx-0x74a24636],0x6a647591
  417ab3:	adc    al,0x33
  417ab5:	mov    ecx,0xc0caec30
  417aba:	mov    ebp,0xc51d997e
  417abf:	dec    ecx
  417ac0:	inc    edi
  417ac1:	jle    0x417ab1
  417ac3:	mov    ebx,0x51186a9e
  417ac8:	(bad)  
  417ac9:	inc    ecx
  417aca:	aaa    
  417acb:	popf   
  417acc:	or     al,0x99
  417ace:	jmp    0x417aa0
  417ad0:	hlt    
  417ad1:	add    BYTE PTR [edi+0x2a1c77e5],dl
  417ad7:	mov    cs,WORD PTR [edx]
  417ad9:	not    DWORD PTR [edi+0x42]
  417adc:	js     0x417a5e
  417ade:	pop    edx
  417adf:	add    cl,al
  417ae1:	addr16 adc al,0x18
  417ae4:	lock cmp DWORD PTR [edx+ecx*2],edx
  417ae8:	jbe    0x417acc
  417aea:	jae    0x417a9a
  417aec:	out    dx,al
  417aed:	fnstsw WORD PTR [edi-0x38eb4d69]
  417af3:	adc    ch,BYTE PTR [edx-0x1]
  417af6:	pop    ecx
  417af7:	les    edi,FWORD PTR [ecx-0x7f]
  417afa:	call   0xf799b2c0
  417aff:	jno    0x417b12
  417b01:	test   DWORD PTR [ebx+0x37],eax
  417b04:	pop    eax
  417b05:	xchg   ebx,eax
  417b06:	push   edx
  417b07:	ret    
  417b08:	ficomp DWORD PTR [ebx+0x18]
  417b0b:	adc    ebp,DWORD PTR [edx+0x6c]
  417b0e:	sbb    BYTE PTR [esi],ch
  417b10:	cld    
  417b11:	fcmovb st,st(6)
  417b13:	fld    DWORD PTR [ebp-0x54]
  417b16:	ds cs out dx,eax
  417b19:	cmp    DWORD PTR [esi-0x7856a2f9],esi
  417b1f:	jo     0x417ae6
  417b21:	xor    al,BYTE PTR [ecx]
  417b23:	inc    edx
  417b24:	ror    BYTE PTR [eax],cl
  417b26:	dec    edi
  417b27:	fnstcw WORD PTR [esi-0x9]
  417b2a:	jp     0x417b2d
  417b2c:	adc    cl,cl
  417b2e:	push   esi
  417b2f:	jae    0x417b40
  417b31:	clc    
  417b32:	inc    ecx
  417b33:	jb     0x417b88
  417b35:	inc    eax
  417b36:	cmp    al,0xe6
  417b38:	(bad)  
  417b39:	pusha  
  417b3a:	jo     0x417b78
  417b3c:	(bad)  
  417b3d:	dec    ecx
  417b3e:	fcom   DWORD PTR [ecx+0x58f6f427]
  417b44:	pop    edx
  417b45:	inc    ebx
  417b46:	dec    ebp
  417b47:	enter  0x7634,0xef
  417b4b:	out    dx,eax
  417b4c:	pop    esi
  417b4d:	xchg   edi,eax
  417b4e:	sub    eax,0xce2d8fc7
  417b53:	push   ds
  417b54:	fdivr  DWORD PTR [edi-0x6e6eb0bf]
  417b5a:	pop    ebx
  417b5b:	fidiv  WORD PTR [edx+0x38ec126d]
  417b61:	retf   0xea81
  417b64:	push   edi
  417b65:	mov    ch,0xff
  417b67:	test   eax,0xdc0e0b61
  417b6c:	mov    WORD PTR [esi],ss
  417b6e:	mov    dh,0xf1
  417b70:	(bad)  
  417b71:	sbb    al,0x5
  417b73:	sub    eax,ecx
  417b75:	jmp    FWORD PTR [ebx-0x727e3440]
  417b7b:	sub    eax,0xa9e495ca
  417b80:	test   eax,0x7a59f322
  417b85:	out    dx,eax
  417b86:	ins    BYTE PTR es:[edi],dx
  417b87:	lds    ecx,FWORD PTR [edi-0x6a]
  417b8a:	jmp    0x417b33
  417b8c:	mov    BYTE PTR [ebx+0x41],ch
  417b8f:	sub    eax,0xef686c7
  417b94:	inc    eax
  417b95:	mov    edi,0xe233b94f
  417b9a:	sbb    ch,BYTE PTR ds:0x1afc7a3e
  417ba0:	sbb    cl,BYTE PTR [ebx+0x34417258]
  417ba6:	xlat   BYTE PTR ds:[ebx]
  417ba7:	sub    edi,DWORD PTR [ecx]
  417ba9:	jo     0x417b7d
  417bab:	xchg   edi,eax
  417bac:	mov    cl,0xd7
  417bae:	(bad)  [eax+0x44]
  417bb1:	push   eax
  417bb2:	or     BYTE PTR [edx+ebx*1-0x1f],bl
  417bb6:	repnz outs dx,BYTE PTR ds:[esi]
  417bb8:	enter  0x261e,0x2b
  417bbc:	mov    bh,0x3e
  417bbe:	cmp    al,0x86
  417bc0:	and    BYTE PTR [eax-0x4f],0x28
  417bc4:	jle    0x417b5c
  417bc6:	mov    ah,0x43
  417bc8:	faddp  st(5),st
  417bca:	aad    0xd5
  417bcc:	xchg   esi,eax
  417bcd:	std    
  417bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bcf:	adc    eax,0x68dea6f2
  417bd4:	outs   dx,DWORD PTR ds:[esi]
  417bd5:	add    DWORD PTR [esi],ebp
  417bd7:	pop    ss
  417bd8:	int3   
  417bd9:	sub    esp,DWORD PTR [edi]
  417bdb:	out    dx,eax
  417bdc:	sbb    ah,bh
  417bde:	adc    al,0x5d
  417be0:	xor    edi,0x6e00cf59
  417be6:	xchg   DWORD PTR [edi+0x12edf885],ebp
  417bec:	and    BYTE PTR [esp+ebp*2+0x16],al
  417bf0:	jbe    0x417b9f
  417bf2:	xchg   edi,eax
  417bf3:	ja     0x417bd7
  417bf5:	cmp    bh,BYTE PTR [esi]
  417bf7:	push   esi
  417bf8:	inc    edx
  417bf9:	ss out 0x27,eax
  417bfc:	dec    ecx
  417bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfe:	sbb    DWORD PTR [edx+0x55901682],eax
  417c04:	sub    al,0x16
  417c06:	or     al,0x32
  417c08:	test   BYTE PTR fs:[edi-0x4cb9e300],ah
  417c0f:	sbb    al,0xc4
  417c11:	inc    edx
  417c12:	call   0x5d24:0xb9abfd8d
  417c19:	arpl   WORD PTR [edi-0x23],sp
  417c1c:	dec    eax
  417c1d:	dec    ebp
  417c1e:	in     al,0x69
  417c20:	xor    ebx,DWORD PTR [ebx]
  417c22:	stos   DWORD PTR es:[edi],eax
  417c23:	and    DWORD PTR [edx-0x24],esp
  417c26:	cdq    
  417c27:	leave  
  417c28:	cs push ecx
  417c2a:	mov    ah,0x6a
  417c2c:	jo     0x417c02
  417c2e:	rcr    BYTE PTR [esi+esi*1-0x23acf079],cl
  417c35:	jbe    0x417c85
  417c37:	or     eax,0x69fb1ee
  417c3c:	hlt    
  417c3d:	out    0x5e,eax
  417c3f:	sub    esi,esi
  417c41:	outs   dx,BYTE PTR ds:[esi]
  417c42:	lahf   
  417c43:	scas   al,BYTE PTR es:[edi]
  417c44:	(bad)  
  417c45:	ins    DWORD PTR es:[edi],dx
  417c46:	adc    eax,edx
  417c48:	ins    DWORD PTR es:[edi],dx
  417c49:	fwait
  417c4a:	xchg   esi,eax
  417c4b:	fistp  WORD PTR [edx+ecx*4]
  417c4e:	sbb    DWORD PTR [ebx+0x20],ebx
  417c51:	les    edi,FWORD PTR [edi]
  417c53:	cmp    cl,BYTE PTR [edx+0x3]
  417c56:	int3   
  417c57:	xchg   ecx,eax
  417c58:	test   al,0x70
  417c5a:	cmp    eax,esp
  417c5c:	imul   ecx,esi,0x5c774411
  417c62:	and    al,0x64
  417c64:	or     BYTE PTR [esi+0x2e],bl
  417c67:	add    al,0xfa
  417c69:	cmp    DWORD PTR [ecx-0xd25e4b7],edi
  417c6f:	lahf   
  417c70:	sbb    DWORD PTR [ebp-0x5e],esi
  417c73:	enter  0x60bb,0xbb
  417c77:	push   ecx
  417c78:	pop    edi
  417c79:	mov    eax,fs:0xc2d19032
  417c7f:	cli    
  417c80:	cmp    eax,0xb267988
  417c85:	cs cli 
  417c87:	dec    ecx
  417c88:	mov    bh,0x20
  417c8a:	dec    ebp
  417c8b:	xor    DWORD PTR [edi+0x2709cd69],esi
  417c91:	mov    ds,WORD PTR [ebp+ebp*2-0x8125508]
  417c98:	pop    si
  417c9a:	xchg   DWORD PTR [edi+0x137bce9f],ecx
  417ca0:	outs   dx,BYTE PTR ds:[esi]
  417ca1:	popa   
  417ca2:	pop    es
  417ca3:	xchg   edx,eax
  417ca4:	icebp  
  417ca5:	xor    DWORD PTR [bx+0x4edd],ebp
  417caa:	rcl    DWORD PTR [esi+0x530d0809],1
  417cb0:	aad    0xbc
  417cb2:	and    al,0x16
  417cb4:	inc    edi
  417cb5:	popa   
  417cb6:	mov    bl,0xcf
  417cb8:	lods   al,BYTE PTR ds:[esi]
  417cb9:	pop    esp
  417cba:	inc    ebp
  417cbb:	inc    edi
  417cbc:	aad    0x1e
  417cbe:	fimul  WORD PTR [esi]
  417cc0:	repz cmc 
  417cc2:	or     BYTE PTR [edi-0x43],cl
  417cc5:	mov    ebp,0x8b9aefff
  417cca:	in     eax,dx
  417ccb:	sbb    cl,ah
  417ccd:	aad    0x58
  417ccf:	add    dh,bh
  417cd1:	jl     0x417cac
  417cd3:	aas    
  417cd4:	scas   eax,DWORD PTR es:[edi]
  417cd5:	scas   al,BYTE PTR es:[edi]
  417cd6:	ret    
  417cd7:	add    BYTE PTR [ebp-0x44],cl
  417cda:	pop    ebp
  417cdb:	xchg   bl,dh
  417cdd:	fst    QWORD PTR [ebp-0x29185fb]
  417ce3:	ins    BYTE PTR es:[edi],dx
  417ce4:	mov    ss,edx
  417ce6:	pop    esp
  417ce7:	adc    edi,DWORD PTR [eax+0x42]
  417cea:	mov    ds:0xbb422ce8,al
  417cef:	outs   dx,BYTE PTR ds:[esi]
  417cf0:	push   es
  417cf1:	add    DWORD PTR [ebx+ebx*1],ecx
  417cf4:	mov    cl,0x1a
  417cf6:	push   ebx
  417cf7:	jae    0x417d0e
  417cf9:	push   0x12
  417cfb:	inc    edi
  417cfc:	je     0x417d77
  417cfe:	call   0xedb4a1f9
  417d03:	ret    0x2f56
  417d06:	out    dx,eax
  417d07:	and    eax,0x9f83459e
  417d0c:	push   ds
  417d0d:	ror    BYTE PTR [eax+0x67adc8ad],0xe9
  417d14:	in     al,dx
  417d15:	test   eax,0x5d818348
  417d1a:	pop    edi
  417d1b:	stos   DWORD PTR es:[edi],eax
  417d1c:	rcr    BYTE PTR [ebx+0x535043b9],0x9c
  417d23:	aaa    
  417d24:	not    ch
  417d26:	loopne 0x417cb3
  417d28:	adc    BYTE PTR gs:[edx],cl
  417d2b:	pop    eax
  417d2c:	or     ecx,DWORD PTR [eax]
  417d2e:	pop    ebx
  417d2f:	ret    0x5af6
  417d32:	xor    al,0x6e
  417d34:	ds stos BYTE PTR es:[edi],al
  417d36:	(bad)  
  417d37:	dec    ecx
  417d38:	cmp    esi,DWORD PTR [eax+0x7436ba86]
  417d3e:	fnstcw WORD PTR [ebp-0x444e9cd3]
  417d44:	in     al,0xde
  417d46:	jmp    0x11383ea9
  417d4b:	jo     0x417d97
  417d4d:	add    al,0xa0
  417d4f:	mov    DWORD PTR [ebx+0x2b7eedeb],ecx
  417d55:	sub    DWORD PTR [edx-0x5e],eax
  417d58:	pop    ecx
  417d59:	inc    esp
  417d5a:	jns    0x417d26
  417d5c:	push   esi
  417d5d:	sub    DWORD PTR [ecx+0x17],ebx
  417d60:	(bad)  
  417d62:	and    al,0x1f
  417d65:	xor    al,BYTE PTR [ecx]
  417d67:	out    0xc8,eax
  417d69:	mov    dh,BYTE PTR [edx]
  417d6b:	call   0x2a36:0xbdbf06f9
  417d72:	add    eax,0xe0788df4
  417d77:	outs   dx,DWORD PTR ds:[esi]
  417d78:	inc    ebp
  417d79:	test   al,0x79
  417d7b:	daa    
  417d7c:	push   ds
  417d7d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417d80:	jp     0x417d44
  417d82:	clc    
  417d83:	xchg   cx,ax
  417d85:	mov    ah,0xd0
  417d87:	cmp    eax,0xfb1c6fe3
  417d8c:	lahf   
  417d8d:	call   0xa193:0x3b3cdfce
  417d94:	add    ch,dl
  417d96:	rol    DWORD PTR [ebp-0x3826fa8d],1
  417d9c:	mov    DWORD PTR [esi-0x10ef726d],edx
  417da2:	outs   dx,DWORD PTR ds:[esi]
  417da3:	or     dh,cl
  417da5:	mov    cl,0x11
  417da7:	jge    0x417d59
  417da9:	cmc    
  417daa:	arpl   WORD PTR [eax-0x61],bx
  417dad:	xchg   esi,eax
  417dae:	in     eax,0x59
  417db0:	xchg   ebx,eax
  417db1:	in     eax,dx
  417db2:	and    ah,bh
  417db4:	and    al,0xc1
  417db6:	pop    edx
  417db7:	call   0xcb2c:0xe7139014
  417dbe:	or     DWORD PTR [ebx-0x56545ce1],edi
  417dc4:	push   es
  417dc5:	cmp    al,0x98
  417dc7:	sub    BYTE PTR [ebx+0x704a8a25],0x12
  417dce:	jno    0x417d65
  417dd0:	fwait
  417dd1:	jmp    0xf7c3:0xaad04fd8
  417dd8:	mov    dl,0xfb
  417dda:	scas   eax,DWORD PTR es:[edi]
  417ddb:	test   al,0xe1
  417ddd:	cmp    DWORD PTR [bx-0x3ff1],edx
  417de2:	xchg   edx,eax
  417de3:	pop    ebp
  417de4:	rcl    BYTE PTR [edi],cl
  417de6:	jb     0x417da2
  417de8:	fild   DWORD PTR [ebx-0x3b]
  417deb:	adc    esp,0x64
  417dee:	fldln2 
  417df0:	stc    
  417df1:	scas   eax,DWORD PTR es:[edi]
  417df2:	(bad)  
  417df4:	inc    ebp
  417df5:	pop    ebx
  417df6:	dec    esi
  417df7:	int    0xb6
  417df9:	repz gs fnstsw ax
  417dfd:	ds dec edi
  417dff:	inc    edi
  417e00:	xlat   BYTE PTR ds:[ebx]
  417e01:	pop    eax
  417e02:	call   0xb458:0xcb024d85
  417e09:	sub    edx,DWORD PTR [edi+edx*2-0x24]
  417e0d:	lea    ebp,[ecx+0x3b5e84d4]
  417e13:	mov    cl,0xc7
  417e15:	sbb    eax,0xefcb341c
  417e1a:	mov    edx,0xb8005788
  417e1f:	dec    esp
  417e20:	adc    eax,0xe4b856fc
  417e25:	jne    0x417e27
  417e27:	in     al,dx
  417e28:	adc    DWORD PTR [edx-0x77],ecx
  417e2b:	addr16 repnz mov dh,0x1d
  417e2f:	clc    
  417e30:	xchg   DWORD PTR [edi-0x36],ebp
  417e33:	dec    eax
  417e34:	ret    0x27b9
  417e37:	sar    DWORD PTR [ebp-0x3d],1
  417e3a:	jl     0x417e9b
  417e3c:	jge    0x417dff
  417e3e:	shl    BYTE PTR [ebx+0x56],0xbf
  417e42:	adc    BYTE PTR [eax+0x19271abf],al
  417e48:	mov    al,BYTE PTR [ebp-0x1e]
  417e4b:	push   edi
  417e4c:	hlt    
  417e4d:	or     BYTE PTR [ebx+0x10],bl
  417e50:	xor    dh,BYTE PTR [ebx-0x2a5f6a3f]
  417e56:	inc    ecx
  417e57:	ret    
  417e58:	and    eax,0x33266447
  417e5d:	xor    DWORD PTR [eax+0x6f],0xc4acff49
  417e64:	stc    
  417e65:	stos   BYTE PTR es:[edi],al
  417e66:	jne    0x417ec9
  417e68:	mov    al,0xba
  417e6a:	push   ss
  417e6b:	or     ecx,eax
  417e6d:	sbb    DWORD PTR [esi-0x5e],eax
  417e70:	add    eax,0x998d6cd1
  417e75:	dec    eax
  417e76:	fmul   DWORD PTR [ebx]
  417e78:	(bad)  
  417e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e7a:	add    eax,0xb2fd2849
  417e7f:	and    ebp,DWORD PTR [ebp-0x12]
  417e82:	test   BYTE PTR [eax+0x15],bl
  417e85:	xchg   DWORD PTR [edi+0x1ec15905],ecx
  417e8b:	pop    eax
  417e8c:	pop    ebx
  417e8d:	aam    0xa5
  417e8f:	mov    bl,dl
  417e91:	and    dl,BYTE PTR [ebp+0x234eb52d]
  417e97:	ins    DWORD PTR es:[edi],dx
  417e98:	xchg   esp,eax
  417e99:	adc    esp,DWORD PTR [ecx+0x29]
  417e9c:	(bad)  
  417e9d:	rol    BYTE PTR [edx-0x2d8b646c],0x8d
  417ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea5:	(bad)  
  417ea6:	sti    
  417ea7:	mov    DWORD PTR [eax+esi*1-0x70075a90],edi
  417eae:	add    BYTE PTR [eax],al
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	mulps  xmm3,XMMWORD PTR [edi]
  417ec0:	mov    ch,0xc9
  417ec2:	sbb    esp,edi
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	hlt    
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR ds:0xe27f1c3a,bl
  417ecf:	shl    BYTE PTR [eax],0xc
  417ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ed3:	(bad)  
  417ed4:	cld    
  417ed5:	xlat   BYTE PTR ds:[ebx]
  417ed6:	cmp    edi,DWORD PTR ds:0x4297b257
  417edc:	and    BYTE PTR [ebp+0x1c],al
  417edf:	shl    BYTE PTR [ebx-0x2],0xbf
  417ee3:	aam    0x52
  417ee5:	pushf  
  417ee6:	adc    ecx,DWORD PTR [ecx]
  417ee8:	jo     0x417f17
  417eea:	push   ebx
  417eeb:	mov    al,0x22
  417eed:	xlat   BYTE PTR ds:[ebx]
  417eee:	cmp    DWORD PTR [edx],0xffffff92
  417ef1:	mov    edi,0x9b851062
  417ef6:	mov    eax,?
  417ef8:	stos   BYTE PTR es:[edi],al
  417ef9:	pop    ds
  417efa:	ror    dh,cl
  417efc:	sbb    ebx,DWORD PTR [eax-0x63]
  417eff:	inc    esp
  417f00:	xchg   ebp,eax
  417f01:	sbb    al,0xbc
  417f03:	fwait
  417f04:	es sbb eax,0xa50e9945
  417f0a:	jp     0x417f26
  417f0c:	add    DWORD PTR [ecx+0x5ea247ae],edi
  417f12:	dec    edi
  417f13:	in     eax,dx
  417f14:	cdq    
  417f15:	and    eax,0x3bf34936
  417f1a:	pusha  
  417f1b:	mov    ds:0xe90d16b7,eax
  417f20:	std    
  417f21:	jmp    FWORD PTR [ebx+esi*1+0x67]
  417f25:	test   DWORD PTR [eax+0x63dafd18],edi
  417f2b:	jg     0x417f4d
  417f2d:	jno    0x417efc
  417f2f:	and    eax,ecx
  417f31:	ret    0x31e
  417f34:	cmp    BYTE PTR [ecx],dh
  417f36:	fidivr WORD PTR [esi]
  417f38:	idiv   DWORD PTR [ecx-0x1cf19c8a]
  417f3e:	xlat   BYTE PTR ds:[ebx]
  417f3f:	shr    ch,0xf7
  417f42:	jmp    0xc252:0x8b31760
  417f49:	fsubr  DWORD PTR [edx]
  417f4b:	mov    cl,0x9a
  417f4d:	xor    eax,DWORD PTR [ecx-0x49bae16f]
  417f53:	inc    ebp
  417f54:	dec    eax
  417f55:	stos   DWORD PTR es:[edi],eax
  417f56:	das    
  417f57:	fimul  DWORD PTR ds:0xa30da415
  417f5d:	sbb    al,bl
  417f5f:	xchg   edx,eax
  417f60:	sbb    al,0xb0
  417f62:	ss ins BYTE PTR es:[edi],dx
  417f64:	inc    ebx
  417f65:	neg    ch
  417f67:	outs   dx,BYTE PTR ds:[esi]
  417f68:	adc    BYTE PTR [ebx+0x176fc926],cl
  417f6e:	cmp    esi,DWORD PTR [esi+0x5aa390f3]
  417f74:	xor    DWORD PTR [ebx+0x37],ebx
  417f77:	ss mov edi,eax
  417f7a:	aam    0x31
  417f7c:	jle    0x417f76
  417f7e:	xchg   ecx,eax
  417f7f:	xchg   edi,eax
  417f80:	cmc    
  417f81:	ret    0x1d61
  417f84:	pop    esi
  417f85:	aam    0xf6
  417f87:	pop    esi
  417f88:	inc    edi
  417f89:	mov    ecx,0xa3ea9837
  417f8e:	inc    esp
  417f8f:	mov    ch,BYTE PTR ds:0x13ae7d7a
  417f95:	fisttp QWORD PTR [ecx+0x7f]
  417f98:	aam    0x67
  417f9a:	inc    eax
  417f9b:	jne    0x417f65
  417f9d:	jg     0x417fe2
  417f9f:	ins    DWORD PTR es:[edi],dx
  417fa0:	mov    ds:0x857024e2,al
  417fa5:	sub    eax,0xa71ae377
  417faa:	mov    bl,0xfc
  417fac:	ret    0xfb6
  417faf:	pop    esp
  417fb0:	push   ebp
  417fb1:	out    0xd8,al
  417fb3:	ss mov ebx,0x740b0342
  417fb9:	in     eax,0x4a
  417fbb:	pushf  
  417fbc:	or     ch,BYTE PTR [edx+0x5f]
  417fbf:	pop    esp
  417fc0:	xlat   BYTE PTR fs:[ebx]
  417fc2:	popf   
  417fc3:	push   ecx
  417fc4:	mov    fs,WORD PTR [ebx+edi*2+0x3a]
  417fc8:	fidivr WORD PTR [ecx+ecx*8-0x5]
  417fcc:	mov    eax,0xd5fe0925
  417fd1:	das    
  417fd2:	lods   eax,DWORD PTR ds:[esi]
  417fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd4:	xor    DWORD PTR [edx+0x66],ebp
  417fd7:	arpl   bx,bx
  417fd9:	call   0xab20:0x8c3b36f3
  417fe0:	mov    al,0x5f
  417fe2:	mov    ebp,0x760dec0e
  417fe7:	xor    al,0x7e
  417fe9:	out    0x5e,al
  417feb:	out    0xce,al
  417fed:	xchg   ebp,eax
  417fee:	add    dh,dl
  417ff0:	cmp    al,0x79
  417ff2:	add    DWORD PTR [ebx-0x7624b655],0x9577e4b1
  417ffc:	std    
  417ffd:	pushf  
  417ffe:	idiv   esp
  418000:	lahf   
  418001:	jno    0x418076
  418003:	sbb    edi,DWORD PTR [edx+0x65]
  418006:	lahf   
  418007:	pop    eax
  418008:	outs   dx,BYTE PTR ds:[esi]
  418009:	mov    ecx,0x847b28b3
  41800e:	mov    ebp,0xaa0593ac
  418013:	sbb    ch,BYTE PTR [edi-0x5b5a71b8]
  418019:	iret   
  41801a:	retf   
  41801b:	ror    DWORD PTR [ebx+edx*8+0x68de72b5],0xc2
  418023:	push   ebp
  418024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418025:	push   eax
  418026:	mov    dh,0xdc
  418028:	shl    DWORD PTR [eax],1
  41802a:	mov    eax,ds:0x4471b4ee
  41802f:	push   esi
  418030:	loopne 0x417ffb
  418032:	adc    al,0x73
  418034:	mov    BYTE PTR [eax],al
  418036:	lods   al,BYTE PTR ds:[esi]
  418037:	xchg   esp,eax
  418038:	add    DWORD PTR [esi-0x15f7c600],0xd7686765
  418042:	push   edi
  418043:	sub    al,0x83
  418045:	call   0x55cf:0x23236e62
  41804c:	cmp    DWORD PTR [ebp+0x2a],ecx
  41804f:	mov    edi,0xd6512f01
  418054:	fdivr  st,st(5)
  418056:	fs retf 0x64c4
  41805a:	inc    edi
  41805b:	test   BYTE PTR [ebx],al
  41805d:	dec    eax
  41805e:	mov    ds:0xdcc0d299,al
  418063:	arpl   ax,di
  418065:	sub    al,0xb3
  418067:	loop   0x4180c3
  418069:	imul   edx,DWORD PTR [eax+0x73],0x30a1d84
  418070:	addr16 sahf 
  418072:	rol    BYTE PTR [eax],0xd8
  418075:	ins    DWORD PTR es:[edi],dx
  418076:	mov    BYTE PTR [esi+0x4e],al
  418079:	test   DWORD PTR [ebp+eax*2-0x14],esi
  41807d:	push   ebx
  41807e:	pop    es
  41807f:	dec    esp
  418080:	bound  ebx,QWORD PTR fs:[ebx+0x27fb0b4a]
  418087:	(bad)
  41808a:	fbld   TBYTE PTR [ebp-0x438bfefe]
  418090:	retf   0xc6c2
  418093:	sbb    bl,BYTE PTR [ecx]
  418095:	xchg   esp,eax
  418096:	(bad)  
  418097:	sub    eax,0xf86b29e6
  41809c:	xchg   ebx,eax
  41809d:	mov    dl,0x6b
  41809f:	mov    dl,0x6b
  4180a1:	adc    eax,0xe676b421
  4180a6:	sub    eax,0xc8e107b6
  4180ab:	repz ret 
  4180ad:	jmp    0xf14a:0xe12475a4
  4180b4:	and    al,0x20
  4180b6:	scas   al,BYTE PTR es:[edi]
  4180b7:	sar    DWORD PTR [ecx-0x55c76a21],cl
  4180bd:	aad    0x2b
  4180bf:	xchg   DWORD PTR [ebp-0x1e],eax
  4180c2:	test   eax,0xb4ac803d
  4180c8:	cmp    al,0x7d
  4180ca:	sbb    eax,0xcb115f0a
  4180cf:	lds    ecx,FWORD PTR [ebx+0x6b89c855]
  4180d5:	(bad)  
  4180d6:	cdq    
  4180d7:	(bad)  [esi]
  4180d9:	jle    0x4180a7
  4180db:	adc    BYTE PTR [ecx+0x4766ab8],dl
  4180e1:	inc    eax
  4180e2:	mov    bh,0x36
  4180e4:	out    dx,al
  4180e5:	imul   ecx,DWORD PTR [ecx-0x560af189],0xd7d94736
  4180ef:	and    cl,dl
  4180f1:	jle    0x418154
  4180f3:	cli    
  4180f4:	mov    BYTE PTR [ecx+0x648a1816],bl
  4180fa:	and    ebp,edx
  4180fc:	les    edx,FWORD PTR [edx]
  4180fe:	sbb    eax,0xaba88476
  418103:	out    0x55,al
  418105:	int3   
  418106:	or     eax,0xb79ea656
  41810b:	sbb    al,0xe4
  41810d:	dec    edi
  41810e:	mov    dh,0xc0
  418110:	loop   0x4180a2
  418112:	(bad)  
  418113:	fnstenv [edx-0x53]
  418116:	dec    esp
  418117:	jl     0x4180d9
  418119:	(bad)  
  41811a:	sahf   
  41811b:	cmp    BYTE PTR [eax-0x40],0xb3
  41811f:	add    al,0x47
  418121:	sbb    al,0xb1
  418123:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418125:	jnp    0x41814d
  418127:	setae  al
  41812a:	in     eax,dx
  41812b:	mov    dh,0xff
  41812d:	jecxz  0x418121
  41812f:	sub    DWORD PTR es:[ebp+0x1b6197b1],esp
  418136:	lock and ebp,DWORD PTR [esi]
  418139:	xchg   ebp,eax
  41813a:	jbe    0x4181a4
  41813c:	push   ebp
  41813d:	arpl   sp,dx
  41813f:	push   0xffffffad
  418141:	test   al,0x28
  418143:	push   eax
  418144:	add    eax,0xb6b5898c
  418149:	test   eax,0xfd137b9d
  41814e:	cmp    dl,BYTE PTR [edx+0x69]
  418151:	add    al,0xc7
  418153:	mov    al,ds:0xde574762
  418158:	nop
  418159:	push   es
  41815a:	xor    cl,BYTE PTR [esp+ebx*2+0x4584a358]
  418161:	(bad)  
  418163:	call   0x57dd:0x2337575c
  41816a:	(bad)  [esi]
  41816c:	push   ebp
  41816d:	mov    ecx,0x77c2239f
  418172:	dec    edx
  418173:	xchg   DWORD PTR [edx+0x55],ecx
  418176:	mov    bl,0x30
  418178:	inc    ecx
  418179:	xor    al,0xc6
  41817b:	add    DWORD PTR [esp+ecx*1-0x57],edi
  41817f:	dec    ebx
  418180:	cld    
  418181:	push   ecx
  418182:	xchg   esp,eax
  418183:	and    al,0x5d
  418185:	push   ds
  418186:	(bad)  
  418187:	lea    ebp,[esi+0x5a48843c]
  41818d:	loop   0x41814d
  41818f:	jp     0x4181c2
  418191:	inc    ecx
  418192:	int    0xb1
  418194:	push   ds
  418195:	mov    al,0xdc
  418197:	mov    edi,0xf0648121
  41819c:	(bad)  
  41819d:	mov    bl,0x1e
  41819f:	loopne 0x4181d7
  4181a1:	js     0x4181cc
  4181a3:	adc    ah,BYTE PTR [esp+ecx*1]
  4181a6:	cld    
  4181a7:	adc    eax,0x16b00eb9
  4181ac:	and    DWORD PTR [edi],0x43
  4181af:	lea    edi,[esi+edi*8+0x5cbf10]
  4181b6:	inc    esp
  4181b7:	and    BYTE PTR [eax+ebp*4],0x46
  4181bb:	enter  0xebbf,0xcc
  4181bf:	in     eax,0x8c
  4181c1:	inc    edi
  4181c2:	call   0x681ddb55
  4181c7:	xor    DWORD PTR ds:0x8d6bb710,0x7edf155c
  4181d1:	push   0x11767c5b
  4181d6:	mov    bl,0x46
  4181d8:	or     eax,0x851f079c
  4181dd:	dec    ebx
  4181de:	fidiv  DWORD PTR ds:0xca043dfe
  4181e4:	inc    edi
  4181e5:	push   esp
  4181e6:	inc    cx
  4181e8:	or     al,0x80
  4181ea:	fs icebp 
  4181ec:	aad    0xd0
  4181ee:	jecxz  0x418198
  4181f0:	mov    bl,ch
  4181f2:	idiv   BYTE PTR [ebp-0x32cb0312]
  4181f8:	stc    
  4181f9:	lods   al,BYTE PTR ds:[esi]
  4181fa:	enter  0x7440,0x44
  4181fe:	push   cs
  4181ff:	mov    BYTE PTR [esp+ebx*1-0x25b8af5e],dl
  418206:	repz sub cl,BYTE PTR [edi]
  418209:	jmp    0x418274
  41820b:	adc    al,0xa9
  41820d:	jbe    0x418276
  41820f:	mov    esi,0x3596142a
  418214:	dec    ebp
  418215:	or     al,0x53
  418217:	outs   dx,BYTE PTR ds:[esi]
  418218:	jo     0x41826d
  41821a:	sub    esi,eax
  41821c:	xor    ebx,DWORD PTR [ecx]
  41821e:	xchg   ecx,eax
  41821f:	mov    esi,0x47f95911
  418224:	in     eax,dx
  418225:	call   0x7266:0x1eb4bb6
  41822c:	stc    
  41822d:	add    ah,BYTE PTR [ebp-0x12a2c472]
  418233:	test   DWORD PTR [ebx-0x57],esp
  418236:	rol    BYTE PTR [esi],cl
  418238:	sbb    DWORD PTR [edi+0x49],ebp
  41823b:	xor    BYTE PTR [ecx+0x40],dl
  41823e:	sbb    eax,0x1fab7b82
  418243:	adc    ebp,DWORD PTR [ebp+0x7a9a3358]
  418249:	cwde   
  41824a:	stos   BYTE PTR es:[edi],al
  41824b:	and    ah,BYTE PTR [ebp-0x67eb172e]
  418251:	xchg   edi,eax
  418252:	ins    DWORD PTR es:[edi],dx
  418253:	lock xor al,0x74
  418256:	jb     0x4181e6
  418258:	jl     0x418251
  41825a:	outs   dx,DWORD PTR ds:[esi]
  41825b:	cmp    eax,0xb32ca206
  418260:	sahf   
  418261:	outs   dx,DWORD PTR ds:[esi]
  418262:	push   ebx
  418263:	shl    BYTE PTR [ebp-0x29ab492f],0xac
  41826a:	aad    0x9
  41826c:	inc    ecx
  41826d:	adc    al,0xda
  41826f:	arpl   WORD PTR [esi-0x6e15e968],bx
  418275:	jae    0x418249
  418277:	je     0x418210
  418279:	and    al,bl
  41827b:	ret    0xeae
  41827e:	in     eax,dx
  41827f:	fild   QWORD PTR [ebx-0x58]
  418282:	js     0x418212
  418284:	out    0xe,eax
  418286:	test   ah,cl
  418288:	push   ebp
  418289:	sub    BYTE PTR [ebx+0x3e0ba493],0x9b
  418290:	cmp    DWORD PTR [eax+0x975c007],0xf432cb85
  41829a:	cmp    BYTE PTR [ebx-0x2ac9e5],cl
  4182a0:	inc    ecx
  4182a1:	cld    
  4182a2:	fxch   st(3)
  4182a4:	ret    
  4182a5:	xor    bh,al
  4182a7:	sti    
  4182a8:	jne    0x4182a5
  4182aa:	or     al,dl
  4182ac:	xor    ah,BYTE PTR [ebp-0x12]
  4182af:	xor    dh,dh
  4182b1:	and    ebx,ebp
  4182b3:	sar    al,cl
  4182b5:	cmp    dl,BYTE PTR [edx+0x7ec77721]
  4182bb:	add    dl,BYTE PTR [ecx]
  4182bd:	xchg   ebp,eax
  4182be:	push   esp
  4182bf:	mov    ch,0x18
  4182c1:	push   cs
  4182c2:	shr    DWORD PTR [edx+0x7676ffc9],0x44
  4182c9:	add    BYTE PTR [eax],bl
  4182cb:	jne    0x4182b3
  4182cd:	rcl    DWORD PTR [ebp-0x5f],1
  4182d0:	mov    bl,0x87
  4182d2:	mul    BYTE PTR [edx]
  4182d4:	xchg   BYTE PTR [ebp+0x2525e6a4],bl
  4182da:	arpl   WORD PTR [ecx+0x63cae29a],bx
  4182e0:	inc    edx
  4182e1:	pop    edx
  4182e2:	hlt    
  4182e3:	sahf   
  4182e4:	mov    edx,ebx
  4182e6:	stos   BYTE PTR es:[edi],al
  4182e7:	adc    eax,0x54ff6f9b
  4182ec:	clc    
  4182ed:	pop    ecx
  4182ee:	jbe    0x418284
  4182f0:	mov    fs,WORD PTR [ebp+0x5a]
  4182f3:	mov    dl,bh
  4182f5:	in     eax,0xac
  4182f7:	stc    
  4182f8:	out    dx,eax
  4182f9:	pmuludq mm6,mm5
  4182fc:	scas   al,BYTE PTR es:[edi]
  4182fd:	jmp    0x325b603e
  418302:	shl    dh,0x78
  418305:	retf   
  418306:	stos   DWORD PTR es:[edi],eax
  418307:	cmp    esi,ecx
  418309:	leave  
  41830a:	pop    es
  41830b:	mov    eax,ebx
  41830d:	mov    eax,0x7246ea99
  418312:	and    eax,0x1389cf9f
  418317:	add    al,0x76
  418319:	adc    bh,BYTE PTR [esi]
  41831b:	mov    ds:0xe16bad6,eax
  418320:	dec    ecx
  418321:	lock xchg edi,eax
  418323:	loopne 0x4182fd
  418325:	add    ecx,DWORD PTR [edi-0x64cf6836]
  41832b:	sbb    DWORD PTR ds:0xcaca,esp
  418330:	fs pushf 
  418332:	and    edi,DWORD PTR [edi+0x4f58113]
  418338:	xor    ebp,esp
  41833a:	(bad)
  41833e:	mov    ds:0xb3e25fd6,eax
  418343:	test   eax,0x454cc99f
  418348:	or     eax,0xaee1ed6d
  41834d:	jmp    0x4183a8
  41834f:	jp     0x418322
  418351:	loop   0x4183ce
  418353:	jg     0x4182ee
  418355:	mov    BYTE PTR [edi],ch
  418357:	pop    esp
  418358:	mov    ecx,0x55e0928d
  41835d:	repnz inc esp
  41835f:	aas    
  418360:	int    0xcb
  418362:	or     DWORD PTR [edx+ebp*2],0xffffffca
  418366:	lahf   
  418367:	icebp  
  418368:	add    DWORD PTR ds:0x8bbbda55,eax
  41836e:	repz pop esi
  418370:	inc    edx
  418371:	jns    0x4183b6
  418373:	or     eax,0x72349ae5
  418378:	es push edx
  41837a:	pop    esp
  41837b:	loope  0x4183e5
  41837d:	pop    esp
  41837e:	gs mov ch,0xec
  418381:	xchg   ebp,eax
  418382:	popa   
  418383:	(bad)  
  418384:	pop    edx
  418385:	pop    ss
  418386:	fcomp  st(2)
  418388:	xchg   esp,eax
  418389:	push   ebp
  41838a:	out    0x92,eax
  41838c:	rcr    DWORD PTR [eax-0x3],1
  41838f:	cwde   
  418390:	mov    ch,0xad
  418392:	adc    ecx,ebx
  418394:	loopne 0x418403
  418396:	ret    
  418397:	inc    DWORD PTR [eax+0x122d6f99]
  41839d:	clc    
  41839e:	sti    
  41839f:	dec    ecx
  4183a0:	aas    
  4183a1:	loop   0x4183a4
  4183a3:	jmp    0x1dc0bbb8
  4183a8:	(bad)  [edi+edx*2+0x6b469e32]
  4183af:	or     DWORD PTR [ecx],esi
  4183b1:	mov    eax,0x959d4e6c
  4183b6:	test   DWORD PTR [ebx+0x1b],esi
  4183b9:	mov    DWORD PTR [eax+0x6d9fe3],ecx
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	sub    edx,0x1
  4183d0:	(bad)  
  4183d1:	sbb    eax,0x1010d
  4183d6:	hlt    
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [ecx],bl
  4183db:	or     DWORD PTR [eax+0x10],esp
  4183de:	sbb    al,0xdb
  4183e0:	cld    
  4183e1:	sbb    esi,DWORD PTR [eax]
  4183e3:	sub    al,0x10
  4183e5:	shr    BYTE PTR [ebp+0x5a],cl
  4183e8:	mov    cs,edi
  4183ea:	xor    DWORD PTR [edi+0x4cab0942],esp
  4183f0:	std    
  4183f1:	mov    ss,eax
  4183f3:	inc    esi
  4183f4:	cld    
  4183f5:	jae    0x418462
  4183f7:	xor    DWORD PTR [eax+0x7a],edx
  4183fa:	push   eax
  4183fb:	hlt    
  4183fc:	loop   0x41846c
  4183fe:	jo     0x41847f
  418400:	mov    eax,0x89563a21
  418405:	aas    
  418406:	adc    BYTE PTR [edi-0x43],bl
  418409:	jl     0xffaffc80
  41840f:	inc    edi
  418410:	fist   DWORD PTR [esi+0x4d]
  418413:	sti    
  418414:	cmp    BYTE PTR [ebp-0x80],ch
  418417:	fwait
  418418:	js     0x41846d
  41841a:	out    0x43,eax
  41841c:	jl     0x41840b
  41841e:	mov    ebp,0xadbb1fc9
  418423:	push   0x76a11015
  418428:	(bad)  
  418429:	out    dx,al
  41842a:	pushf  
  41842b:	xor    ebp,DWORD PTR [edx+0x648d61c0]
  418431:	push   ss
  418432:	sbb    ecx,DWORD PTR ds:0xf637d7f5
  418438:	cmp    eax,0x848dadb1
  41843d:	das    
  41843e:	pop    edx
  41843f:	jns    0x4183db
  418441:	mov    cl,0x1a
  418443:	jecxz  0x418483
  418445:	outs   dx,BYTE PTR ds:[esi]
  418446:	ret    0x6d73
  418449:	mov    edi,ebx
  41844b:	adc    ebx,eax
  41844d:	pop    eax
  41844e:	sbb    BYTE PTR ds:0xb6cca85f,al
  418454:	jbe    0x418430
  418456:	sbb    DWORD PTR [ecx-0x569067a4],ebp
  41845c:	lock and eax,0xad213092
  418462:	fsubr  st,st(5)
  418464:	sar    BYTE PTR [eax+0x1193ebdc],cl
  41846a:	or     DWORD PTR [ecx-0x32b82538],ecx
  418470:	stos   BYTE PTR es:[edi],al
  418471:	cwde   
  418472:	jmp    0x41849e
  418474:	xchg   edx,eax
  418475:	jb     0x4184e9
  418477:	inc    ecx
  418478:	mov    ch,0x5
  41847a:	repnz mov DWORD PTR [eax],ecx
  41847d:	aas    
  41847e:	cmp    edi,DWORD PTR [eax]
  418480:	retf   0xd953
  418483:	dec    edi
  418484:	xor    DWORD PTR [edx],esi
  418486:	sar    esp,cl
  418488:	fidivr WORD PTR [edi]
  41848a:	dec    esi
  41848b:	retw   0xe249
  41848f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418490:	sbb    eax,0x3e601213
  418495:	inc    ebx
  418496:	arpl   WORD PTR [esi-0x73b41d05],si
  41849c:	jns    0x4184f8
  41849e:	mov    ebx,0x8979103a
  4184a3:	adc    eax,0x21748575
  4184a8:	retf   0x874
  4184ab:	jo     0x418488
  4184ad:	mov    bl,0xcb
  4184af:	cmp    eax,esp
  4184b1:	mov    eax,0x354f8d4a
  4184b6:	cdq    
  4184b7:	fs (bad) 
  4184b9:	fistp  WORD PTR [esi-0x79]
  4184bc:	ja     0x4184e7
  4184be:	xor    bl,BYTE PTR [edx+0x6b55bf51]
  4184c4:	(bad)  
  4184c5:	in     al,0x52
  4184c7:	inc    edx
  4184c8:	in     al,0x3b
  4184ca:	mov    esp,0x521cead3
  4184cf:	push   ecx
  4184d0:	mov    esp,0x146072bc
  4184d5:	push   edi
  4184d6:	call   0xbed9:0x6e3266a
  4184dd:	cld    
  4184de:	xchg   edx,eax
  4184df:	imul   esi,DWORD PTR [esi],0xffffffd5
  4184e2:	dec    eax
  4184e3:	das    
  4184e4:	xchg   edx,eax
  4184e5:	test   al,0xe6
  4184e7:	adc    DWORD PTR [ebx+0x39a9fd15],ebx
  4184ed:	and    edi,DWORD PTR [edi-0x3e619d77]
  4184f3:	pop    esp
  4184f4:	jbe    0x4184de
  4184f6:	ins    DWORD PTR es:[edi],dx
  4184f7:	mov    ecx,0x48570504
  4184fc:	xor    al,0x24
  4184fe:	sub    BYTE PTR [ebp-0x25e18888],bl
  418504:	fld    DWORD PTR [edx-0x18]
  418507:	mov    cl,0xdb
  418509:	dec    ebx
  41850a:	dec    edi
  41850b:	loope  0x4184e1
  41850d:	add    bh,bl
  41850f:	mov    bl,0xb0
  418511:	(bad)  
  418512:	mulps  xmm5,xmm3
  418515:	add    DWORD PTR [esp+esi*2-0x3964a9d6],ebx
  41851c:	mov    eax,0x2252e91f
  418521:	dec    ebx
  418522:	retf   
  418523:	jnp    0x41851b
  418525:	ret    
  418526:	jp     0x418529
  418528:	aam    0x13
  41852a:	xchg   ebx,eax
  41852b:	pause  
  41852d:	loope  0x41853c
  41852f:	aam    0x16
  418531:	aaa    
  418532:	adc    eax,0x98ed1f76
  418537:	and    BYTE PTR [edi-0x6f1eaa58],cl
  41853d:	lahf   
  41853e:	stc    
  41853f:	in     eax,dx
  418540:	ret    0xd779
  418543:	sbb    DWORD PTR [edx+0x26b4231d],0x71
  41854a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41854b:	ror    BYTE PTR [esi+0x5266bb61],cl
  418551:	xchg   ecx,eax
  418552:	mov    eax,ds:0x8f223a14
  418557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418558:	aas    
  418559:	popa   
  41855a:	pop    ebp
  41855b:	sti    
  41855c:	outs   dx,BYTE PTR ds:[esi]
  41855d:	out    dx,eax
  41855e:	dec    eax
  41855f:	iret   
  418560:	and    al,BYTE PTR ds:0x961b0bc3
  418566:	imul   edx,DWORD PTR [edx+0x4],0xff96ae88
  41856d:	test   DWORD PTR [ecx-0x70f7ad7f],edx
  418573:	(bad)  
  418574:	popa   
  418575:	pop    ds
  418576:	psubd  mm1,QWORD PTR [edx-0x23]
  41857a:	(bad)  
  41857b:	sub    BYTE PTR [ebx+0x7c],bl
  41857e:	sar    DWORD PTR [eax+edx*2+0x33],1
  418582:	sbb    ebx,0x6e
  418585:	mul    BYTE PTR [eax+0x56d2ff18]
  41858b:	add    al,0xbe
  41858d:	and    BYTE PTR ds:0x30521062,dl
  418593:	dec    edx
  418594:	fnstsw WORD PTR [ebx+esi*2-0x80]
  418598:	scas   al,BYTE PTR es:[edi]
  418599:	push   ss
  41859a:	int3   
  41859b:	dec    edx
  41859c:	add    BYTE PTR [esi],dl
  41859e:	cmp    BYTE PTR [ebx+0x506ae1b3],dh
  4185a4:	inc    eax
  4185a5:	jnp    0x4185b8
  4185a7:	jnp    0x41856e
  4185a9:	cli    
  4185aa:	xchg   esp,ebx
  4185ac:	out    0x6a,eax
  4185ae:	ror    DWORD PTR [edi],0x99
  4185b1:	out    0xbf,al
  4185b3:	pushf  
  4185b4:	mov    eax,ds:0x6686985e
  4185b9:	xchg   dh,ah
  4185bb:	mov    bl,0x1
  4185bd:	mov    ecx,0x6a3c88fd
  4185c2:	lods   al,BYTE PTR ds:[esi]
  4185c3:	int3   
  4185c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c5:	lock scas eax,DWORD PTR es:[di]
  4185c8:	out    0x28,eax
  4185ca:	lock into 
  4185cc:	sbb    DWORD PTR [ebx],ebp
  4185ce:	mov    dl,0x18
  4185d0:	loope  0x4185da
  4185d2:	mov    ch,0xdb
  4185d4:	dec    esp
  4185d5:	iret   
  4185d6:	nop
  4185d7:	pop    esp
  4185d8:	mov    bl,BYTE PTR [ecx+eax*2+0x10]
  4185dc:	enter  0x26a,0xfb
  4185e0:	mov    ebp,0x66492acf
  4185e5:	(bad)  
  4185e6:	shl    esp,cl
  4185e8:	xchg   BYTE PTR ds:0xb3dc2e64,ah
  4185ee:	rol    ebx,cl
  4185f0:	shl    BYTE PTR [ebx+ebp*1-0x3a],0x7
  4185f5:	mov    cl,0x9a
  4185f7:	cwde   
  4185f8:	loopne 0x4185f4
  4185fa:	(bad)  
  4185fc:	in     al,0xe
  4185fe:	or     eax,0xaee75ba4
  418603:	or     dl,BYTE PTR [edx+ebx*1-0x51]
  418607:	in     al,0x7b
  418609:	sbb    edi,DWORD PTR [ebx+ebp*1]
  41860c:	cld    
  41860d:	sbb    edi,DWORD PTR [edi-0x47]
  418610:	xchg   BYTE PTR [ebx-0x1e],dh
  418613:	cmc    
  418614:	add    bh,BYTE PTR [esi+ebp*1-0x43b2785c]
  41861b:	fstp   DWORD PTR [ecx-0x4bd3af64]
  418621:	cli    
  418622:	aam    0x47
  418624:	inc    edi
  418625:	cld    
  418626:	lods   al,BYTE PTR ds:[esi]
  418627:	pop    ds
  418628:	enter  0x6492,0x8f
  41862c:	leave  
  41862d:	ficomp WORD PTR [ebp+0x48]
  418630:	ror    BYTE PTR [edi],1
  418632:	ins    DWORD PTR es:[edi],dx
  418633:	mov    esi,0x7c4eaf52
  418638:	xor    DWORD PTR [ebx-0x21],0x75
  41863c:	xchg   BYTE PTR [ecx-0x3fa4e78a],bl
  418642:	push   esi
  418643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418644:	test   eax,0x79197c3e
  418649:	test   eax,0x82929099
  41864e:	sub    eax,0x3cb9992f
  418653:	push   cs
  418654:	mov    cl,0x45
  418656:	fisub  DWORD PTR [ebp+0x5c]
  418659:	inc    ebp
  41865a:	push   DWORD PTR [esp+ecx*4]
  41865d:	mov    al,0xfb
  41865f:	call   0xa21786b7
  418664:	mov    ecx,DWORD PTR [eax]
  418666:	shl    DWORD PTR [ecx],1
  418668:	sbb    al,0x6c
  41866a:	push   ecx
  41866b:	mov    edi,0x5ba6810c
  418670:	das    
  418671:	repnz inc DWORD PTR [ebp+0x7dbd4182]
  418678:	jno    0x4186eb
  41867a:	xchg   edi,eax
  41867b:	call   0xbe24:0xfda62906
  418682:	outs   dx,DWORD PTR ds:[esi]
  418683:	and    DWORD PTR [esi+eax*4+0x58b95b08],edi
  41868a:	add    eax,0xc02bdae8
  41868f:	pop    esp
  418690:	fisub  WORD PTR [edi+0x6fb52da4]
  418696:	adc    BYTE PTR [edi+eiz*2+0x65],cl
  41869a:	iret   
  41869b:	mov    cl,0x5b
  41869d:	pusha  
  41869e:	mov    bh,0x85
  4186a0:	jge    0x4186b5
  4186a2:	into   
  4186a3:	jns    0x41866b
  4186a5:	mov    ecx,0xc1f1dd6a
  4186aa:	and    eax,0x4d4c96ed
  4186af:	sbb    BYTE PTR [esi+0x2f8eeb1f],bl
  4186b5:	mov    dh,0xe9
  4186b7:	mul    DWORD PTR [ecx+0x347b979]
  4186bd:	ret    0x56de
  4186c0:	imul   DWORD PTR [ecx+edi*4-0x7e975397]
  4186c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c9:	(bad)  
  4186ca:	pushf  
  4186cb:	pop    edx
  4186cc:	sub    eax,DWORD PTR [edi+0x72f62306]
  4186d2:	ins    DWORD PTR es:[edi],dx
  4186d3:	dec    esp
  4186d4:	inc    ebx
  4186d5:	dec    esp
  4186d6:	inc    ebp
  4186d7:	in     eax,dx
  4186d8:	cmp    DWORD PTR ds:0xf7425679,0x35
  4186df:	pop    ebp
  4186e0:	mov    si,0x5d02
  4186e4:	pop    ds
  4186e5:	loopne 0x418671
  4186e7:	pop    esi
  4186e8:	pop    ebx
  4186e9:	iret   
  4186ea:	popa   
  4186eb:	inc    DWORD PTR [eax+0x4bde3437]
  4186f1:	in     eax,0x68
  4186f3:	jae    0x4186e0
  4186f5:	fmul   DWORD PTR [eax+0x7]
  4186f8:	adc    BYTE PTR [eax+0xa0f3d44],0x61
  4186ff:	xchg   edi,eax
  418700:	(bad)  
  418701:	rcr    BYTE PTR [edx],1
  418703:	popf   
  418704:	ins    DWORD PTR es:[edi],dx
  418705:	cmc    
  418706:	dec    eax
  418707:	mov    ch,0x7e
  418709:	dec    ebp
  41870a:	adc    eax,0x5fbdc83a
  41870f:	pop    esi
  418710:	icebp  
  418711:	push   0x67
  418713:	leave  
  418714:	mov    al,0x29
  418716:	adc    eax,ebp
  418718:	and    BYTE PTR [esi+ebx*2],0x8d
  41871c:	mov    es,WORD PTR [ebx]
  41871e:	nop
  41871f:	sub    DWORD PTR [eax+0x48],ecx
  418722:	xchg   ecx,eax
  418723:	xchg   ebp,eax
  418724:	ret    
  418725:	inc    edi
  418726:	aam    0xa3
  418728:	xchg   DWORD PTR [esi],edx
  41872a:	frndint 
  41872c:	aad    0x2f
  41872e:	hlt    
  41872f:	push   DWORD PTR [edi+0x2a]
  418732:	xchg   esi,eax
  418733:	add    DWORD PTR [ecx],edx
  418735:	pop    ebx
  418736:	xor    dh,BYTE PTR [edx+0x30]
  418739:	adc    al,0x6
  41873b:	push   es
  41873c:	dec    edi
  41873d:	push   edx
  41873e:	inc    ebx
  41873f:	pop    ds
  418740:	add    al,0x18
  418742:	enter  0xf7ab,0x5a
  418746:	in     al,dx
  418747:	lea    edx,gs:[ecx]
  41874a:	xor    DWORD PTR [edx+ebx*4-0xc1d9314],ecx
  418751:	out    0xe9,al
  418753:	dec    edx
  418754:	popf   
  418755:	adc    esi,DWORD PTR [ebx+0x777ae4b8]
  41875b:	mov    esp,0xfaa31430
  418760:	les    esp,FWORD PTR [ebx]
  418762:	into   
  418763:	cmc    
  418764:	ins    DWORD PTR es:[edi],dx
  418765:	mov    dh,0xb4
  418767:	adc    DWORD PTR [edx+0x10],eax
  41876a:	add    al,0x53
  41876c:	mov    al,BYTE PTR [ebx+0x6ca6e763]
  418772:	and    eax,0x3335d6bd
  418777:	sub    esp,DWORD PTR [esi+0x2c6600fe]
  41877d:	cdq    
  41877e:	mov    al,0xb2
  418780:	jo     0x418722
  418782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418783:	shl    edx,1
  418785:	jecxz  0x41877a
  418787:	add    ch,BYTE PTR [ecx-0x2]
  41878a:	or     BYTE PTR [ebp-0x31],al
  41878d:	mov    ebp,DWORD PTR [ebx+0x5b]
  418790:	dec    edi
  418791:	sub    eax,0xbb692ae5
  418796:	daa    
  418797:	sbb    DWORD PTR [ebp+0x3c],eax
  41879a:	xor    eax,0xb9116abb
  41879f:	jns    0x418760
  4187a1:	mov    dh,0xe0
  4187a3:	in     eax,dx
  4187a4:	mov    bl,0x2d
  4187a6:	sbb    ebx,edi
  4187a8:	pop    edi
  4187a9:	scas   eax,DWORD PTR es:[edi]
  4187aa:	xchg   edi,eax
  4187ab:	push   ecx
  4187ac:	mov    ah,0xc1
  4187ae:	aad    0x33
  4187b0:	out    dx,eax
  4187b1:	lds    eax,FWORD PTR [edi+0x38]
  4187b4:	push   edx
  4187b5:	cwde   
  4187b6:	xlat   BYTE PTR ds:[ebx]
  4187b7:	call   FWORD PTR [ecx-0x1f]
  4187ba:	jmp    FWORD PTR [edx+0x7d]
  4187bd:	and    bl,BYTE PTR [edx-0x80]
  4187c0:	aaa    
  4187c1:	add    eax,0x24a60bba
  4187c6:	js     0x418839
  4187c8:	add    ecx,0x4b80bb4
  4187ce:	lock ins BYTE PTR es:[edi],dx
  4187d0:	cmp    eax,0x717554c8
  4187d5:	cli    
  4187d6:	es dec ecx
  4187d8:	add    eax,0x3a3b911a
  4187dd:	inc    ebx
  4187de:	test   DWORD PTR [edi],ebp
  4187e0:	xor    DWORD PTR [edi-0x1d],edx
  4187e3:	mov    ah,0x68
  4187e5:	popf   
  4187e6:	call   0xed8c:0xc3e3ff3
  4187ed:	mov    fs,WORD PTR [ecx+0xf]
  4187f0:	fs push edi
  4187f2:	data16 jae 0x418811
  4187f5:	mul    ah
  4187f7:	into   
  4187f8:	aaa    
  4187f9:	jno    0x41885e
  4187fb:	loopne 0x418797
  4187fd:	and    al,0xc8
  4187ff:	sub    eax,0x587a0ab8
  418804:	mov    edx,0xa4ba9622
  418809:	or     BYTE PTR [edi+eiz*1],al
  41880c:	or     ch,BYTE PTR [edi+esi*8-0x12e551ca]
  418813:	push   eax
  418814:	mov    ebp,0xbf5174c9
  418819:	pop    ebx
  41881a:	jno    0x4187ce
  41881c:	jno    0x418875
  41881e:	mov    al,0xf2
  418820:	in     al,dx
  418821:	or     al,0xc8
  418823:	cmp    eax,0x9b584ca3
  418828:	jnp    0x41884b
  41882a:	or     eax,0x8a460999
  41882f:	jmp    0xa8bf:0x4f476fe0
  418836:	dec    edx
  418837:	in     al,dx
  418838:	or     cl,BYTE PTR [ecx+0x3ad8edc9]
  41883e:	jle    0x4188b3
  418840:	add    ebx,DWORD PTR [eax+esi*4+0x5ae772f6]
  418847:	push   ecx
  418848:	jbe    0x41882f
  41884a:	add    esp,esp
  41884c:	mov    al,BYTE PTR [edi+0x3f]
  41884f:	mov    ch,0xdc
  418851:	fnstenv [ebx+0x399bca52]
  418857:	jmp    0x418889
  418859:	pop    ds
  41885a:	in     eax,0xa1
  41885c:	jp     0x41880f
  41885e:	ds inc ebx
  418860:	cwde   
  418861:	imul   edx,DWORD PTR [eax],0x9161e29a
  418867:	enter  0x414,0x7c
  41886b:	mov    WORD PTR [edi+ebx*8+0x11af85a0],?
  418872:	pop    es
  418873:	sub    BYTE PTR [esi-0x7a2b9d7c],bh
  418879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41887a:	sbb    BYTE PTR [edi+edi*1-0x33],bh
  41887e:	mov    eax,0xd20408ce
  418883:	jne    0x4188fa
  418885:	out    dx,al
  418886:	pop    ebp
  418887:	cdq    
  418888:	push   edx
  418889:	xchg   DWORD PTR [eax-0x5c8678a8],edi
  41888f:	adc    cl,BYTE PTR [ebx-0x41649924]
  418895:	pop    ds
  418896:	test   al,0x21
  418898:	push   ecx
  418899:	push   cs
  41889a:	imul   eax,DWORD PTR [ecx+0x751f3acd],0x39
  4188a1:	add    DWORD PTR [eax+0x217326d2],eax
  4188a7:	pop    es
  4188a8:	ja     0x4188eb
  4188aa:	in     eax,0x68
  4188ac:	call   0xad9b8666
  4188b1:	adc    eax,0x4d5f9e83
  4188b6:	pop    es
  4188b7:	jmp    0xddf7:0xdb54c2dd
  4188be:	add    al,0xc0
  4188c0:	repz mov ebp,0x2f242e45
  4188c6:	scas   eax,DWORD PTR es:[edi]
  4188c7:	xor    al,0xdf
  4188c9:	push   esi
  4188ca:	sbb    bh,BYTE PTR [edi+0x65ea]
  4188d0:	add    BYTE PTR [eax],al
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0x31
  4188df:	(bad)  
  4188e1:	xor    DWORD PTR [ecx],eax
  4188e3:	push   es
  4188e4:	add    DWORD PTR [eax],eax
  4188e6:	hlt    
  4188e7:	add    al,0x0
  4188e9:	add    BYTE PTR [ecx],ah
  4188eb:	fcomp  QWORD PTR [edi]
  4188ed:	xchg   esi,eax
  4188ee:	pop    ebx
  4188ef:	xor    cl,BYTE PTR [esi-0x57]
  4188f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f3:	dec    eax
  4188f4:	out    dx,eax
  4188f5:	push   ecx
  4188f6:	ret    
  4188f7:	sbb    ah,al
  4188f9:	test   DWORD PTR [ecx+esi*1+0x63aca79b],edx
  418900:	outs   dx,BYTE PTR ds:[esi]
  418901:	or     BYTE PTR [ebp+0x20],bh
  418904:	adc    eax,0x25b9807f
  418909:	in     eax,0xf
  41890b:	push   edi
  41890c:	sar    BYTE PTR [eiz*1-0x31965814],1
  418913:	or     cl,BYTE PTR [ecx]
  418915:	jg     0x418969
  418917:	aaa    
  418918:	scas   al,BYTE PTR es:[edi]
  418919:	cmp    al,BYTE PTR [edi-0x1f]
  41891c:	out    0x78,eax
  41891e:	sbb    DWORD PTR [eax+0x1],0x3d
  418922:	loop   0x4188f8
  418924:	dec    esp
  418925:	sub    esi,ecx
  418927:	inc    ecx
  418928:	mov    esp,0x647f8de5
  41892d:	outs   dx,DWORD PTR ds:[esi]
  41892e:	and    BYTE PTR [ebx+0x1e],bl
  418931:	or     DWORD PTR [eax],edi
  418933:	push   ss
  418934:	dec    edi
  418935:	repz ret 
  418937:	add    ebx,ebp
  418939:	dec    ebp
  41893a:	xor    bh,BYTE PTR [ebp+0x2c]
  41893d:	pop    edx
  41893e:	xor    edx,DWORD PTR [ecx-0x6a]
  418941:	ret    
  418942:	mov    ds:0xd8c8c33f,eax
  418947:	lods   al,BYTE PTR ds:[esi]
  418948:	xchg   DWORD PTR [edx],esi
  41894a:	outs   dx,BYTE PTR ds:[esi]
  41894b:	fld    QWORD PTR [ebx]
  41894d:	sub    eax,0x1c789ebd
  418952:	mov    ebp,0xabf9f35d
  418957:	es mov dh,0x75
  41895a:	loope  0x418938
  41895c:	inc    ebx
  41895d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41895e:	shl    BYTE PTR ds:0xdedaf10b,1
  418964:	mov    bh,0x12
  418966:	adc    DWORD PTR [edx],0xf0fcee95
  41896c:	ss inc ebp
  41896e:	pop    ds
  41896f:	sub    BYTE PTR [ebp+0x28682348],ch
  418975:	pop    edx
  418976:	mul    bl
  418978:	xchg   edi,eax
  418979:	cli    
  41897a:	mov    ds:0x9e763600,eax
  41897f:	jl     0x4189d0
  418981:	cmp    eax,0x1b9df8d3
  418986:	scas   eax,DWORD PTR es:[edi]
  418987:	scas   eax,DWORD PTR es:[edi]
  418988:	test   DWORD PTR [edx+0x18],ebx
  41898b:	sub    eax,0xce26dd58
  418990:	ret    
  418991:	mov    WORD PTR [edx-0x15],ss
  418994:	aaa    
  418995:	push   esp
  418996:	out    dx,eax
  418997:	shr    DWORD PTR [edi+0x41],0xee
  41899b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41899c:	add    DWORD PTR [esi+0x40],esi
  41899f:	push   DWORD PTR [edx+0xbb1f6e6]
  4189a5:	jne    0x418937
  4189a7:	dec    edx
  4189a8:	aam    0x20
  4189aa:	adc    eax,DWORD PTR ds:0xb5d057b
  4189b0:	ret    
  4189b1:	pop    ss
  4189b2:	std    
  4189b3:	xlat   BYTE PTR ds:[ebx]
  4189b4:	ss push eax
  4189b6:	test   al,0x8e
  4189b8:	cmp    BYTE PTR [edx-0x6e9e0940],cl
  4189be:	popa   
  4189bf:	xchg   ebx,eax
  4189c0:	jnp    0x4189e8
  4189c2:	mov    WORD PTR [edx-0x1de5d62c],fs
  4189c8:	and    BYTE PTR [ebx+edx*8],ch
  4189cb:	pusha  
  4189cc:	and    DWORD PTR [edi+0x4f],ebp
  4189cf:	imul   ebp,DWORD PTR [ebx-0x4c],0x756a937e
  4189d6:	div    BYTE PTR [di+0x5156]
  4189db:	pop    ebx
  4189dc:	ja     0x4189f2
  4189de:	push   ebx
  4189df:	mov    WORD PTR [esi+0x3f],ss
  4189e2:	out    dx,eax
  4189e3:	or     eax,0x724eae95
  4189e8:	popf   
  4189e9:	cmp    dl,ah
  4189eb:	adc    ah,BYTE PTR [ecx+ebx*4]
  4189ee:	cmp    DWORD PTR [edx-0xe],0xf1a85bf4
  4189f5:	sbb    BYTE PTR [eax-0x19],ch
  4189f8:	(bad)  
  4189f9:	into   
  4189fa:	sbb    ecx,ecx
  4189fc:	aad    0x0
  4189fe:	loopne 0x4189c0
  418a00:	mov    ?,WORD PTR [eax+0x3e]
  418a03:	test   eax,0xbefb3af
  418a08:	mov    dl,0x49
  418a0a:	fwait
  418a0b:	adc    dl,BYTE PTR [eax*8+0x32924bf7]
  418a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a13:	fiadd  DWORD PTR [ebp-0x3837af7]
  418a19:	xchg   ebp,eax
  418a1a:	or     ch,BYTE PTR [ebx+0x5eeb2385]
  418a20:	adc    al,0x15
  418a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a23:	push   edx
  418a24:	inc    DWORD PTR ds:0x7d9433a4
  418a2a:	or     al,0x19
  418a2c:	sub    eax,0xa894e4ff
  418a31:	adc    edi,DWORD PTR [edi-0x3d]
  418a34:	add    ebx,DWORD PTR [edi+0x31]
  418a37:	pop    edx
  418a38:	fidiv  WORD PTR [eax+0x51]
  418a3b:	stc    
  418a3c:	mov    ecx,0x5da6ade3
  418a41:	gs dec edx
  418a43:	in     eax,0x47
  418a45:	pop    es
  418a46:	fild   WORD PTR [ebp+ebp*2+0x46]
  418a4a:	gs cwd 
  418a4d:	cmp    eax,0x39d9e46a
  418a52:	mov    bl,0x2e
  418a54:	and    DWORD PTR [edx],ecx
  418a56:	jmp    0x4189de
  418a58:	and    DWORD PTR [ecx+eiz*2-0x66d44cb1],eax
  418a5f:	jecxz  0x4189f9
  418a61:	adc    eax,0xb402dc75
  418a66:	shl    BYTE PTR [ecx-0x5a8f3c63],1
  418a6c:	dec    edi
  418a6d:	aaa    
  418a6e:	imul   esi,eax,0xcbd803f5
  418a74:	xor    bl,dh
  418a76:	shr    BYTE PTR [edi+0x76],0xbf
  418a7a:	ret    
  418a7b:	imul   ecx,DWORD PTR [ebx-0x4d9bad7d],0x8a4948f
  418a85:	out    dx,eax
  418a86:	adc    eax,0x773617af
  418a8b:	dec    esp
  418a8c:	mov    BYTE PTR [ecx],bl
  418a8e:	xor    BYTE PTR [ecx+0x1b594519],dl
  418a94:	mov    ch,0x8c
  418a96:	mov    ecx,0xda39b65
  418a9b:	mov    dh,0xd
  418a9d:	imul   edi,DWORD PTR [eax],0x1c41ef92
  418aa3:	nop
  418aa4:	inc    DWORD PTR [edx-0x63bc8165]
  418aaa:	int3   
  418aab:	lds    edi,FWORD PTR [edx+0x3d]
  418aae:	lods   eax,DWORD PTR ds:[esi]
  418aaf:	std    
  418ab0:	push   ebp
  418ab1:	mov    al,0x48
  418ab3:	fnstenv [eax+0x6e]
  418ab6:	and    ebp,DWORD PTR [eax-0x5c645772]
  418abc:	test   al,0xd5
  418abe:	es cld 
  418ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac1:	ror    DWORD PTR [ebx],cl
  418ac3:	rcr    DWORD PTR [esi],0x1
  418ac6:	mov    ?,WORD PTR [esi-0x14]
  418ac9:	or     eax,0xbea9733c
  418ace:	mov    eax,0x21d0334c
  418ad3:	sbb    eax,0xf88e7f58
  418ad8:	cmp    al,0xef
  418ada:	dec    ebp
  418adb:	xchg   esi,eax
  418adc:	jmp    0x7e56:0xb5aec98f
  418ae3:	and    al,BYTE PTR [ebp+0x0]
  418ae6:	add    bh,0x90
  418ae9:	fldenv [ebx+0x52]
  418aec:	sbb    DWORD PTR ss:[esi-0x3ce64c1e],esi
  418af3:	xchg   ebp,eax
  418af4:	jne    0x418b04
  418af6:	mov    ds:0x203b5b18,eax
  418afb:	mov    al,0x57
  418afd:	leave  
  418afe:	jae    0x418b2b
  418b00:	pop    es
  418b01:	push   ss
  418b02:	cli    
  418b03:	mov    eax,0xe36501be
  418b08:	push   edx
  418b09:	push   0x26c47de8
  418b0e:	mov    dh,0x7b
  418b10:	int3   
  418b11:	sub    eax,DWORD PTR [edi+ecx*1+0x396b8066]
  418b18:	or     BYTE PTR [ecx+0x78],bh
  418b1b:	jno    0x418af6
  418b1d:	cmc    
  418b1e:	rcl    DWORD PTR [eax-0xc40fd38],1
  418b24:	and    DWORD PTR [esi-0x114313c6],0x7786d1f8
  418b2e:	mov    WORD PTR [edx-0xb],es
  418b31:	repz into 
  418b33:	push   esi
  418b34:	sub    eax,DWORD PTR [edx]
  418b36:	push   edi
  418b37:	xchg   ebp,eax
  418b38:	mov    dl,0x15
  418b3a:	inc    eax
  418b3b:	cmp    dl,BYTE PTR [eax]
  418b3d:	mov    bl,0x7c
  418b3f:	fyl2x  
  418b41:	and    DWORD PTR [ecx-0x49],esi
  418b44:	pop    ecx
  418b45:	mov    eax,0x5fa5ee03
  418b4a:	jns    0x418b97
  418b4c:	pusha  
  418b4d:	xchg   edx,eax
  418b4e:	retf   0x3813
  418b51:	(bad)  
  418b52:	fs mov eax,0xc8179f9
  418b58:	lahf   
  418b59:	mov    eax,ds:0x688df481
  418b5e:	les    ebx,FWORD PTR [ebx-0x51cfa634]
  418b64:	push   0x8b4d3285
  418b69:	mov    DWORD PTR [eax],edx
  418b6b:	adc    esi,ebp
  418b6d:	daa    
  418b6e:	adc    DWORD PTR [eax*1-0x3848539e],ecx
  418b75:	jbe    0x418bcd
  418b77:	cmp    al,0x3e
  418b79:	loop   0x418b8d
  418b7b:	scas   eax,DWORD PTR es:[edi]
  418b7c:	aaa    
  418b7d:	stc    
  418b7e:	xchg   edi,ecx
  418b80:	(bad)  
  418b81:	div    BYTE PTR [edi]
  418b83:	int3   
  418b84:	pop    esi
  418b85:	popf   
  418b86:	jge    0x418b1e
  418b88:	je     0x418b0e
  418b8a:	jge    0x418b34
  418b8c:	and    al,0x1
  418b8e:	retf   
  418b8f:	inc    ebp
  418b90:	mov    ebx,0x9f3967a9
  418b95:	add    BYTE PTR [edi+esi*2+0x7e],0xd2
  418b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b9b:	sub    eax,0x53755dd9
  418ba0:	sub    esp,edx
  418ba2:	pushf  
  418ba3:	fisttp QWORD PTR [edi+edi*1+0x74df85f3]
  418baa:	test   BYTE PTR [ebp-0x64],bh
  418bad:	addr16 inc esi
  418baf:	xchg   esi,eax
  418bb0:	lahf   
  418bb1:	aaa    
  418bb2:	pushf  
  418bb3:	jge    0x418bf4
  418bb5:	cmp    al,0x81
  418bb7:	mov    cl,0x14
  418bb9:	lea    ebp,[eax]
  418bbb:	jmp    DWORD PTR [ebx]
  418bbd:	std    
  418bbe:	outs   dx,BYTE PTR ds:[esi]
  418bbf:	ins    BYTE PTR es:[edi],dx
  418bc0:	push   esp
  418bc1:	hlt    
  418bc2:	icebp  
  418bc3:	call   0x6491ac42
  418bc8:	clc    
  418bc9:	adc    BYTE PTR [eax+0x2ba11731],dl
  418bcf:	adc    dl,BYTE PTR [edx]
  418bd1:	xlat   BYTE PTR ds:[ebx]
  418bd2:	lea    esi,[esp+edi*2]
  418bd5:	(bad)  [esi+ecx*8-0x6a3ad61d]
  418bdc:	jg     0x418c49
  418bde:	fiadd  WORD PTR [esi+0x55]
  418be1:	test   edx,eax
  418be3:	test   eax,0x8a211487
  418be8:	fcmovnb st,st(3)
  418bea:	cmp    al,0xc5
  418bec:	shr    DWORD PTR [ebp+0x4ef64bdb],1
  418bf2:	ins    BYTE PTR es:[edi],dx
  418bf3:	test   DWORD PTR [ecx],ecx
  418bf5:	pop    es
  418bf6:	rcr    BYTE PTR ds:0x46729d33,1
  418bfc:	inc    edx
  418bfd:	jno    0x418b92
  418bff:	dec    ebp
  418c00:	jmp    DWORD PTR [esi-0x71]
  418c03:	and    esp,edi
  418c05:	pusha  
  418c06:	sahf   
  418c07:	jmp    0x2391:0xf85e2e8b
  418c0e:	icebp  
  418c0f:	ret    0x7b09
  418c12:	add    BYTE PTR [ebx+0x604cb2d1],cl
  418c18:	and    ebx,ecx
  418c1a:	cmc    
  418c1b:	nop
  418c1c:	lea    eax,[ebx+0x3379de85]
  418c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c23:	inc    edx
  418c24:	dec    esi
  418c25:	lock (bad) 
  418c27:	clc    
  418c28:	sbb    DWORD PTR [ebx],eax
  418c2a:	stos   BYTE PTR es:[edi],al
  418c2b:	push   eax
  418c2c:	xchg   ebx,eax
  418c2d:	cs nop
  418c2f:	pop    ds
  418c30:	pshufw mm3,QWORD PTR [ebx+eiz*4+0x22e813c2],0xb2
  418c39:	nop
  418c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c3b:	dec    ebx
  418c3c:	pop    ebx
  418c3d:	push   edi
  418c3e:	(bad)  
  418c3f:	jo     0x418bda
  418c41:	enter  0x98b4,0x6c
  418c45:	pusha  
  418c46:	inc    edx
  418c47:	loopne 0x418bcb
  418c49:	cmp    esp,DWORD PTR [edi]
  418c4b:	out    dx,al
  418c4c:	pop    esp
  418c4d:	iret   
  418c4e:	and    ebp,edx
  418c50:	shr    BYTE PTR [ebp-0x3b],cl
  418c53:	(bad)  
  418c55:	call   DWORD PTR [eax]
  418c57:	mov    bh,0xeb
  418c59:	fld    DWORD PTR [eax-0x612f666b]
  418c5f:	sahf   
  418c60:	mov    eax,ds:0xe298839
  418c65:	jecxz  0x418caf
  418c67:	mov    ecx,0x23d98660
  418c6c:	call   0x1491958f
  418c71:	ds inc eax
  418c73:	lods   eax,DWORD PTR ds:[esi]
  418c74:	xchg   esi,esp
  418c76:	js     0x418ca3
  418c78:	aad    0xda
  418c7a:	add    al,BYTE PTR [esi+0x16]
  418c7d:	pop    ds
  418c7e:	xor    BYTE PTR [esp+ebx*2+0x45],bh
  418c82:	nop
  418c83:	rcl    edi,0x2f
  418c86:	out    0x3f,al
  418c88:	fnsave ds:0x1384f59e
  418c8e:	cdq    
  418c8f:	mov    ds:0xc2639673,al
  418c94:	(bad)  
  418c95:	(bad)  
  418c96:	in     al,0x5d
  418c98:	cmp    al,0x57
  418c9a:	mov    BYTE PTR [ebx-0x175c4489],0x4b
  418ca1:	pop    ebp
  418ca2:	loope  0x418cdc
  418ca4:	add    edi,DWORD PTR [ebp+0x768017d0]
  418caa:	out    0xca,al
  418cac:	or     BYTE PTR [ebx-0x3b],cl
  418caf:	repz sbb al,BYTE PTR [esp+edx*1+0x30]
  418cb4:	aas    
  418cb5:	jmp    0x418cbe
  418cb7:	adc    al,0xd8
  418cb9:	jle    0x418d27
  418cbb:	push   0xffffff92
  418cbd:	xor    eax,0x56625a16
  418cc2:	push   0x7e
  418cc4:	jne    0x418d25
  418cc6:	mov    dh,0x54
  418cc8:	sti    
  418cc9:	(bad)  
  418cca:	adc    eax,0xb1844c0e
  418ccf:	push   ecx
  418cd0:	ja     0x418c61
  418cd2:	dec    ebx
  418cd3:	les    esp,FWORD PTR [edx-0x66a7f4f2]
  418cd9:	cs sti 
  418cdb:	(bad)
  418cde:	cmp    ecx,edx
  418ce0:	pop    es
  418ce1:	xchg   edx,eax
  418ce2:	leave  
  418ce3:	sub    eax,0xca265187
  418ce8:	hlt    
  418ce9:	aad    0xe1
  418ceb:	sbb    BYTE PTR [edi],cl
  418ced:	mov    ch,0xde
  418cef:	push   ecx
  418cf0:	out    dx,al
  418cf1:	xchg   BYTE PTR [esi-0x192db536],dh
  418cf7:	cdq    
  418cf8:	mov    cl,0x1
  418cfa:	retf   
  418cfb:	jp     0x418d35
  418cfd:	iret   
  418cfe:	mov    al,0x95
  418d00:	mov    ecx,DWORD PTR [ebx]
  418d02:	pop    ds
  418d03:	xor    edx,DWORD PTR [ebx-0x8]
  418d06:	ins    BYTE PTR es:[edi],dx
  418d07:	mov    bl,bl
  418d09:	dec    eax
  418d0a:	mov    ds:0xd23502cb,al
  418d0f:	mov    bl,0xbe
  418d11:	jl     0x418ccc
  418d13:	pop    es
  418d14:	mov    bl,BYTE PTR [ebp+0x312dd5b2]
  418d1a:	ret    
  418d1b:	sub    DWORD PTR [bx+di-0x19],edi
  418d1f:	fild   DWORD PTR ss:[ecx-0x29f7ad3b]
  418d26:	jo     0x418cbf
  418d28:	(bad)  
  418d29:	xor    DWORD PTR [edx],ebx
  418d2b:	and    dl,BYTE PTR [ebx+0x37]
  418d2e:	push   ebp
  418d2f:	arpl   WORD PTR [esi+eiz*1],dx
  418d32:	adc    DWORD PTR [ecx+ecx*4+0x6b],ebx
  418d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d37:	cmp    BYTE PTR [edi+esi*1-0x70],bh
  418d3b:	in     eax,dx
  418d3c:	mov    esp,0x60889515
  418d41:	xchg   edx,eax
  418d42:	test   cl,dl
  418d44:	in     eax,0xfb
  418d46:	cmp    ebx,ebp
  418d48:	das    
  418d49:	pushf  
  418d4a:	add    bl,dl
  418d4c:	ret    
  418d4d:	test   eax,0x4e322a4f
  418d52:	out    0x3d,eax
  418d54:	dec    ebx
  418d55:	(bad)  
  418d56:	out    0xd4,al
  418d58:	fisubr DWORD PTR [ebx+0xc61f85e]
  418d5e:	loop   0x418d4f
  418d60:	jno    0x418d60
  418d62:	xor    DWORD PTR [eax],eax
  418d64:	cmp    BYTE PTR [esi-0x531b79f5],ch
  418d6a:	ja     0x418d36
  418d6c:	or     al,0x61
  418d6e:	sbb    BYTE PTR [ebx+edx*2+0x79],ch
  418d72:	jle    0x418de4
  418d74:	out    0x13,al
  418d76:	lods   al,BYTE PTR ds:[esi]
  418d77:	mov    ebx,edx
  418d79:	test   DWORD PTR [ecx],ecx
  418d7b:	push   ebx
  418d7c:	sbb    ebp,edi
  418d7e:	std    
  418d7f:	mov    ah,0xe1
  418d81:	sub    cl,BYTE PTR [ebp+0x177824e5]
  418d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d88:	mov    cl,0x37
  418d8a:	mov    al,0x47
  418d8c:	imul   BYTE PTR [eax]
  418d8e:	out    dx,al
  418d8f:	mov    ah,dh
  418d91:	sub    eax,DWORD PTR [eax*2+0x2c661a78]
  418d98:	(bad)  
  418d9a:	or     DWORD PTR ds:0xb0f71755,edi
  418da0:	xchg   ebx,eax
  418da1:	cmp    BYTE PTR [ecx+ebp*4+0x3b],ch
  418da5:	cld    
  418da6:	jne    0x418db5
  418da8:	pop    ds
  418da9:	sar    DWORD PTR [ebx+0x1a311859],0xd8
  418db0:	ins    BYTE PTR es:[edi],dx
  418db1:	jge    0x418d46
  418db3:	push   eax
  418db4:	rol    BYTE PTR [ecx],0xac
  418db7:	pop    eax
  418db8:	or     al,0x88
  418dba:	mov    dl,0x4e
  418dbc:	pop    esp
  418dbd:	inc    ebp
  418dbe:	ds leave 
  418dc0:	adc    DWORD PTR [ebp+eiz*2+0x17],0xf
  418dc5:	mov    ebp,0xb2c40875
  418dca:	test   eax,0xa51b7bc8
  418dcf:	retf   
  418dd0:	int    0x7d
  418dd2:	and    BYTE PTR [ebp+ebp*1+0x1e689ee4],0xca
  418dda:	repz mov ds:0x7371,eax
  418de0:	add    BYTE PTR [eax],al
  418de2:	mov    dl,0x57
  418de4:	push   0xffffffc9
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0xd4721600
  418df2:	cmc    
  418df3:	or     al,BYTE PTR [ecx]
  418df5:	add    ah,dh
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [ecx-0x45],ch
  418dfc:	or     esi,esi
  418dfe:	xor    eax,0xb31ee158
  418e03:	or     DWORD PTR [edi],ecx
  418e05:	jmp    0xb6679c54
  418e0a:	sub    BYTE PTR [esi-0x1f03bd19],dl
  418e10:	cmp    bl,dh
  418e12:	or     esi,esi
  418e14:	cmp    al,0x17
  418e16:	mov    dl,0x6b
  418e18:	pop    ss
  418e19:	stos   BYTE PTR es:[edi],al
  418e1a:	pushf  
  418e1b:	adc    ah,BYTE PTR [esp+esi*1]
  418e1e:	sbb    BYTE PTR [eax+0x40126fd3],ah
  418e24:	pop    ebx
  418e25:	stc    
  418e26:	jbe    0x418dc5
  418e28:	stos   BYTE PTR es:[edi],al
  418e29:	mov    esp,0xe7a14f23
  418e2e:	out    0x3c,al
  418e30:	and    BYTE PTR [ebx+esi*4],bl
  418e33:	cld    
  418e34:	dec    ebx
  418e35:	inc    esp
  418e36:	std    
  418e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e38:	imul   edx,DWORD PTR [edi+0xa90ef40],0x7c
  418e3f:	and    bh,bh
  418e41:	add    BYTE PTR [esi],al
  418e43:	stos   DWORD PTR es:[edi],eax
  418e44:	lock arpl WORD PTR [edi],sp
  418e47:	or     ebp,DWORD PTR [edx]
  418e49:	pop    ss
  418e4a:	mov    dh,0xa9
  418e4c:	out    dx,eax
  418e4d:	sar    BYTE PTR [esi+0x295174c3],1
  418e53:	add    DWORD PTR [eax-0x67e753cb],0x3c53924b
  418e5d:	loopne 0x418eb2
  418e5f:	fstp   TBYTE PTR [eax-0x5e4e12f4]
  418e65:	push   0xffffffe4
  418e67:	mov    eax,ds:0x5accb38a
  418e6c:	mov    ebx,0x51f15508
  418e71:	sti    
  418e72:	dec    esi
  418e73:	mov    DWORD PTR [ecx-0x75],ebp
  418e76:	outs   dx,BYTE PTR ds:[esi]
  418e77:	mov    al,ds:0xe902992e
  418e7c:	retf   0x928
  418e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e80:	sub    ebx,DWORD PTR [ebx+0x20]
  418e83:	cmp    al,0xf5
  418e85:	mov    fs,WORD PTR [edx-0x48d08499]
  418e8b:	xchg   BYTE PTR cs:[edx+eiz*4-0x2871dc3b],bl
  418e93:	dec    esp
  418e94:	scas   al,BYTE PTR es:[edi]
  418e95:	loope  0x418e87
  418e97:	cdq    
  418e98:	scas   al,BYTE PTR es:[edi]
  418e99:	data16 in al,0x45
  418e9c:	xchg   ecx,eax
  418e9d:	outs   dx,BYTE PTR ds:[esi]
  418e9e:	mov    esp,DWORD PTR [ebx-0x5ea5299]
  418ea4:	ins    BYTE PTR es:[edi],dx
  418ea5:	fwait
  418ea6:	push   ss
  418ea7:	das    
  418ea8:	xlat   BYTE PTR ds:[ebx]
  418ea9:	mov    esp,0x8a07404
  418eae:	bound  eax,QWORD PTR [ebx-0x52]
  418eb1:	xchg   bh,ch
  418eb3:	cmp    al,0xf6
  418eb5:	(bad)  
  418eb6:	mov    eax,DWORD PTR [ebx+0x5f]
  418eb9:	test   DWORD PTR ss:[edx],edx
  418ebc:	cwde   
  418ebd:	call   0xec65cdd5
  418ec2:	jns    0x418e9e
  418ec4:	fs out 0x58,al
  418ec7:	mov    esp,0xc27ba691
  418ecc:	mov    bl,BYTE PTR [ecx+0x33d94a2c]
  418ed2:	xor    edi,DWORD PTR [ebx+edi*2+0x70c1bc98]
  418ed9:	or     edx,esi
  418edb:	(bad)  
  418edc:	and    al,0xdc
  418ede:	xor    DWORD PTR [eax],0x1f
  418ee1:	shr    BYTE PTR [eax],1
  418ee3:	jp     0x418ed2
  418ee5:	jmp    0xd9e9:0xa9f41d38
  418eec:	stos   DWORD PTR es:[edi],eax
  418eed:	ja     0x418ecf
  418eef:	enter  0xa93f,0x28
  418ef3:	scas   al,BYTE PTR es:[edi]
  418ef4:	sub    al,0xc7
  418ef6:	loope  0x418f17
  418ef8:	stos   BYTE PTR es:[edi],al
  418ef9:	fld    TBYTE PTR [esi+0x3c7075bb]
  418eff:	icebp  
  418f00:	mov    ah,0x8f
  418f02:	jno    0x418f10
  418f04:	jmp    0x8ad0:0x10a73d2e
  418f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f0c:	fstp   st(0)
  418f0e:	ret    
  418f0f:	icebp  
  418f10:	repnz xchg esp,eax
  418f12:	cmp    esp,DWORD PTR [ebx]
  418f14:	mov    esp,0x6865697a
  418f19:	pop    edx
  418f1a:	xor    al,0xa0
  418f1c:	mov    edi,esi
  418f1e:	mov    dl,0xf6
  418f20:	je     0x418efd
  418f22:	gs mov edx,edx
  418f25:	adc    eax,ebp
  418f27:	or     al,0xc7
  418f29:	inc    eax
  418f2a:	jo     0x418eac
  418f2c:	xor    eax,0x5d22173d
  418f31:	cmp    bl,BYTE PTR ss:[ebx]
  418f34:	mov    ds:0xa947b7e4,al
  418f39:	jl     0x418f76
  418f3b:	adc    eax,0x2729b8b4
  418f40:	jge    0x418ee5
  418f42:	cwde   
  418f43:	xchg   ebp,eax
  418f44:	or     DWORD PTR [ecx-0x1e],esp
  418f47:	mov    ch,0x81
  418f49:	jne    0x418f24
  418f4b:	(bad)  [edx]
  418f4d:	and    al,0x1
  418f4f:	scas   al,BYTE PTR es:[edi]
  418f50:	xor    dl,bh
  418f52:	sbb    BYTE PTR [edi],ah
  418f54:	xor    DWORD PTR [edx],edi
  418f56:	fnstsw WORD PTR [ecx+ebp*8+0x28ca8ff4]
  418f5d:	test   eax,0xd9b75c10
  418f62:	iret   
  418f63:	dec    eax
  418f64:	daa    
  418f65:	sbb    DWORD PTR [ebp-0x56f64b94],eax
  418f6b:	lahf   
  418f6c:	test   al,0x4d
  418f6e:	sbb    ebp,DWORD PTR [eax+0x129b93a6]
  418f74:	adc    al,0xc2
  418f76:	sub    al,0x74
  418f78:	sub    al,BYTE PTR [ecx]
  418f7a:	retf   
  418f7b:	outs   dx,BYTE PTR ds:[esi]
  418f7c:	push   ss
  418f7d:	popf   
  418f7e:	mov    al,ds:0x20812b22
  418f83:	cdq    
  418f84:	pop    eax
  418f85:	inc    edi
  418f86:	je     0x418fdb
  418f88:	pop    esi
  418f89:	xor    ebx,DWORD PTR [eax-0x58]
  418f8c:	(bad)  
  418f8d:	cmp    eax,0xe84b2d39
  418f92:	xchg   ebp,eax
  418f93:	(bad)  
  418f95:	mov    dl,0x86
  418f97:	ds retf 
  418f99:	jmp    0x5c3878e3
  418f9e:	fiadd  DWORD PTR [edx]
  418fa0:	pusha  
  418fa1:	push   esp
  418fa2:	and    DWORD PTR [ebx+0xa],ebx
  418fa5:	cmp    dh,ch
  418fa7:	pop    ds
  418fa8:	xchg   ebp,eax
  418fa9:	mov    WORD PTR [ebx+ebp*4-0x38549e01],es
  418fb0:	jg     0x418fd4
  418fb2:	jmp    0x9cc7:0x3b23aa91
  418fb9:	das    
  418fba:	inc    ebx
  418fbb:	mov    dh,0xab
  418fbd:	mov    ah,0xc7
  418fbf:	stos   BYTE PTR es:[edi],al
  418fc0:	add    edx,esi
  418fc2:	mov    ds:0x7e0af20c,eax
  418fc7:	inc    BYTE PTR ds:0x87a52557
  418fcd:	sbb    DWORD PTR [ebx+0x6851c710],edx
  418fd3:	and    bl,al
  418fd5:	(bad)  
  418fd7:	cmc    
  418fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd9:	cmp    DWORD PTR [ebp+edi*8+0x7e],esp
  418fdd:	ins    DWORD PTR es:[edi],dx
  418fde:	inc    edx
  418fdf:	stos   DWORD PTR es:[edi],eax
  418fe0:	push   0xfffffff1
  418fe2:	bswap  esp
  418fe4:	fnstsw WORD PTR [ebp-0x39]
  418fe7:	pop    esp
  418fe8:	ret    
  418fe9:	jmp    0xe613:0x332ccedc
  418ff0:	lods   al,BYTE PTR ds:[esi]
  418ff1:	and    eax,0x5b76ac2c
  418ff6:	repnz cmc 
  418ff8:	xchg   esi,eax
  418ff9:	mov    bh,0xc5
  418ffb:	mov    ah,0x1b
  418ffd:	sub    ecx,DWORD PTR [ecx+0x13559257]
  419003:	ror    eax,cl
  419005:	je     0x418fbf
  419007:	fwait
  419008:	add    al,0x23
  41900a:	std    
  41900b:	fsubr  QWORD PTR [ebx]
  41900d:	add    dh,BYTE PTR [eax+0x19a94f27]
  419013:	or     ch,BYTE PTR ss:[ecx]
  419016:	rcr    BYTE PTR [esp+eax*4-0x68],0xab
  41901b:	pop    ds
  41901c:	fisub  WORD PTR [ebx-0x1a]
  41901f:	inc    ecx
  419020:	stos   DWORD PTR es:[edi],eax
  419021:	cmp    DWORD PTR [ebx],ebx
  419023:	mov    bh,0xac
  419025:	adc    al,0xf
  419027:	push   eax
  419028:	addr16 mov dh,0x1f
  41902b:	scas   eax,DWORD PTR es:[edi]
  41902c:	retf   0xfb02
  41902f:	or     DWORD PTR [ebp-0x300949a],ebx
  419035:	push   eax
  419036:	repnz mov ds:0xffc911ba,al
  41903c:	push   edx
  41903d:	imul   eax,DWORD PTR [edi-0x47dbdf03],0xaffed54f
  419047:	pop    ebx
  419048:	call   0xafcc:0xd013b4cd
  41904f:	mov    ds:0x5aee960a,al
  419054:	mov    bl,0xa9
  419056:	dec    esp
  419057:	js     0x419047
  419059:	lods   eax,DWORD PTR ds:[esi]
  41905a:	je     0x418fef
  41905c:	jnp    0x4190bc
  41905e:	pop    ebx
  41905f:	test   eax,0x599448f0
  419064:	addr16 out dx,eax
  419066:	cmp    DWORD PTR [esi+eax*8-0x4],ecx
  41906a:	dec    esp
  41906b:	mov    eax,0xc60e0ed2
  419070:	ret    
  419071:	inc    edi
  419072:	pop    esp
  419073:	mov    eax,DWORD PTR [ecx+0x58073806]
  419079:	outs   dx,BYTE PTR ds:[esi]
  41907a:	dec    eax
  41907b:	inc    eax
  41907c:	sar    BYTE PTR [edx],cl
  41907e:	mov    fs,WORD PTR [ecx]
  419080:	and    ebp,eax
  419082:	mov    ebx,0x1518631
  419087:	inc    esp
  419088:	sub    bl,al
  41908a:	pop    ebp
  41908b:	jecxz  0x419010
  41908d:	pop    ds
  41908e:	cdq    
  41908f:	test   al,al
  419091:	cmp    BYTE PTR [edi+0x1327a3a],al
  419097:	jns    0x4190ea
  419099:	cmp    ch,BYTE PTR [ebp+ecx*1-0x75]
  41909d:	sub    bl,BYTE PTR [ebx-0x29c8ec20]
  4190a3:	and    eax,0x8d83585c
  4190a8:	and    al,0xc7
  4190aa:	xchg   edx,eax
  4190ab:	xor    esp,DWORD PTR [eax-0x284383d8]
  4190b1:	test   eax,0x6708ae8f
  4190b6:	jg     0x41907c
  4190b8:	in     al,dx
  4190b9:	sahf   
  4190ba:	sub    eax,0x6e1ca2dd
  4190bf:	ja     0x4190cb
  4190c1:	xchg   ecx,eax
  4190c2:	test   al,0x5e
  4190c4:	fadd   QWORD PTR [esi]
  4190c6:	or     BYTE PTR ds:0xaadd5030,dh
  4190cc:	xor    eax,esp
  4190ce:	jbe    0x4190f8
  4190d0:	movlps QWORD PTR [edx-0xd],xmm0
  4190d4:	outs   dx,BYTE PTR es:[esi]
  4190d6:	sub    DWORD PTR [edi],ebx
  4190d8:	or     al,0x11
  4190da:	push   ebp
  4190db:	pop    esi
  4190dc:	jae    0x1a2a8366
  4190e2:	sar    cl,0xd3
  4190e5:	hlt    
  4190e6:	daa    
  4190e7:	mov    bl,0x4d
  4190e9:	lock not DWORD PTR [esi]
  4190ec:	and    DWORD PTR [edx+0x47],ecx
  4190ef:	test   al,0x98
  4190f1:	xchg   esp,eax
  4190f2:	ds mov edi,0x595bdcd9
  4190f8:	dec    edi
  4190f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190fa:	mov    cl,0x56
  4190fc:	sub    dh,dl
  4190fe:	cdq    
  4190ff:	test   eax,0x26928060
  419104:	sti    
  419105:	sub    DWORD PTR [ebp+0x1],0xffffffd8
  419109:	sahf   
  41910a:	mov    cl,0x14
  41910c:	mov    ch,0xb0
  41910e:	clc    
  41910f:	les    eax,FWORD PTR [eax+0x7]
  419112:	add    edx,0xffffffea
  419115:	mov    dl,0x72
  419117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419118:	mov    ch,0xbe
  41911a:	inc    edx
  41911b:	bnd jb 0x4190b3
  41911e:	add    al,0xc7
  419120:	push   ebx
  419121:	and    BYTE PTR [ebx],ch
  419123:	dec    eax
  419124:	out    0x83,eax
  419126:	aaa    
  419127:	fisttp WORD PTR [ecx-0x47]
  41912a:	dec    edx
  41912b:	jle    0x4190dd
  41912d:	sub    esp,DWORD PTR [esi]
  41912f:	pop    ds
  419130:	test   eax,0xd1d02f4
  419135:	pop    edi
  419136:	popf   
  419137:	adc    bl,dl
  419139:	fwait
  41913a:	stc    
  41913b:	test   al,0x3b
  41913d:	mov    ch,al
  41913f:	cwde   
  419140:	outs   dx,DWORD PTR ds:[esi]
  419141:	sti    
  419142:	fcom   DWORD PTR [ebx]
  419144:	lahf   
  419145:	jb     0x41918c
  419147:	mov    ah,0x26
  419149:	xchg   edx,eax
  41914a:	sbb    ecx,DWORD PTR [ecx+0x5]
  41914d:	lock jns 0x4190e2
  419150:	mov    dl,0xb1
  419152:	jmp    0x4190d6
  419154:	inc    ebp
  419155:	es dec ebp
  419157:	or     BYTE PTR [edi-0x55621580],cl
  41915d:	push   edx
  41915e:	inc    esi
  41915f:	fisttp WORD PTR [ebp+0x13ab41d2]
  419165:	rol    DWORD PTR [ebp+0x61b3170a],0x44
  41916c:	jnp    0x4190fa
  41916e:	xchg   ebx,eax
  41916f:	sub    esi,DWORD PTR [eax+0x69]
  419172:	popa   
  419173:	test   al,0x98
  419175:	(bad)  
  419176:	cmp    ebp,DWORD PTR [ecx]
  419178:	xchg   eax,esi
  41917a:	inc    edx
  41917b:	lea    edx,[eax-0x20d5faa4]
  419181:	and    DWORD PTR [eax-0x69],0xc117d358
  419188:	xor    BYTE PTR [ebx+0x15],dl
  41918b:	cmp    edx,0xd7d5dc60
  419191:	mov    eax,0xfc9bfe9a
  419196:	pop    edx
  419197:	xor    eax,0x6b1c6801
  41919c:	lahf   
  41919d:	fwait
  41919e:	pop    esp
  41919f:	cmp    bl,bl
  4191a1:	xor    BYTE PTR [ecx-0x6b545b0],cl
  4191a7:	cmp    BYTE PTR [edx],cl
  4191a9:	xor    eax,0x4bb088bd
  4191ae:	mov    dl,0xd
  4191b0:	fdivr  st,st(2)
  4191b2:	cmp    eax,0x6d1a38
  4191b7:	cmc    
  4191b8:	popf   
  4191b9:	pop    ss
  4191ba:	push   esi
  4191bb:	out    0xed,al
  4191bd:	aam    0x83
  4191bf:	addr16 (bad) 
  4191c1:	out    0x2b,eax
  4191c3:	xchg   ebx,eax
  4191c4:	outs   dx,DWORD PTR ds:[esi]
  4191c5:	loop   0x419180
  4191c7:	mov    esi,0xe012b5fa
  4191cc:	lea    edx,[eax]
  4191ce:	mov    eax,ds:0x5a377584
  4191d3:	inc    ebx
  4191d4:	or     bl,ah
  4191d6:	das    
  4191d7:	fidivr WORD PTR [ebp+0x1f]
  4191da:	push   cs
  4191db:	fstp   TBYTE PTR [edi-0x32]
  4191de:	mov    bh,0x8b
  4191e0:	xchg   edx,eax
  4191e1:	xor    BYTE PTR [eax],dh
  4191e3:	cmp    eax,0x97aaf52c
  4191e8:	div    DWORD PTR [edx]
  4191ea:	ret    0x6e8a
  4191ed:	out    dx,al
  4191ee:	pop    ecx
  4191ef:	rcl    DWORD PTR [ecx-0x19],1
  4191f2:	add    dh,BYTE PTR [edx-0x6e95989b]
  4191f8:	jnp    0x4191d5
  4191fa:	xchg   edi,eax
  4191fb:	cmp    BYTE PTR [eax],dl
  4191fd:	jg     0x41924a
  4191ff:	dec    edi
  419200:	push   ecx
  419201:	stos   BYTE PTR es:[edi],al
  419202:	pop    ds
  419203:	dec    ebx
  419204:	pop    ebp
  419205:	add    eax,0xd4b9d125
  41920a:	call   0xa91e:0xad7051cc
  419211:	mov    ds:0x4b7edbde,eax
  419216:	in     eax,dx
  419217:	ror    DWORD PTR cs:[ecx+eiz*4-0x13c64816],cl
  41921f:	adc    al,0x20
  419221:	cmp    ebp,edi
  419223:	pop    ds
  419224:	rcl    ecx,cl
  419226:	or     al,0x77
  419228:	ds dec ebx
  41922a:	mov    ebx,0x453d9089
  41922f:	dec    esp
  419230:	mov    bl,0x84
  419232:	xchg   ecx,eax
  419233:	mov    BYTE PTR [ebp*2+0x16be972a],al
  41923a:	(bad)  
  41923b:	adc    BYTE PTR [esi],cl
  41923d:	dec    esp
  41923e:	popf   
  41923f:	sahf   
  419240:	adc    DWORD PTR [ecx+0x282045bf],0x0
  419247:	out    0xf1,al
  419249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41924a:	(bad)  
  41924b:	jae    0x41927a
  41924d:	test   BYTE PTR [esi],ah
  41924f:	mov    DWORD PTR [ebp-0x12460165],esp
  419255:	hlt    
  419256:	lods   eax,DWORD PTR ds:[esi]
  419257:	fwait
  419258:	stc    
  419259:	hlt    
  41925a:	fcmovnbe st,st(5)
  41925c:	adc    DWORD PTR [esi+0x2f],ebp
  41925f:	sbb    DWORD PTR [ebx+0x6d],0x8
  419263:	xor    BYTE PTR cs:[edx-0x19],0x10
  419268:	in     al,dx
  419269:	stc    
  41926a:	mov    ecx,0x9503709e
  41926f:	sbb    BYTE PTR [ebp-0x5ecea554],bl
  419275:	les    edi,FWORD PTR [ebx]
  419277:	pop    esp
  419278:	jno    0x4192ea
  41927a:	out    0x7,al
  41927c:	ds into 
  41927e:	jl     0x4192bd
  419280:	nop
  419281:	or     eax,0x715a2c6b
  419286:	iret   
  419287:	xor    ebp,DWORD PTR [eax+0x42]
  41928a:	mov    eax,ds:0x5ce14a72
  41928f:	mov    cl,0x43
  419291:	lahf   
  419292:	dec    esp
  419293:	pop    ebx
  419294:	scas   eax,DWORD PTR es:[edi]
  419295:	and    DWORD PTR [esp+edx*8-0x47],ecx
  419299:	and    ah,cl
  41929b:	outs   dx,BYTE PTR ds:[esi]
  41929c:	dec    ebp
  41929d:	and    ch,BYTE PTR [ecx]
  41929f:	popf   
  4192a0:	mov    dl,0x67
  4192a2:	push   es
  4192a3:	sti    
  4192a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192a5:	push   eax
  4192a6:	aad    0xce
  4192a8:	adc    ebx,edi
  4192aa:	inc    ebx
  4192ab:	sub    DWORD PTR [edi+0x41],0xffffffad
  4192af:	mov    ds:0x419d45df,eax
  4192b4:	dec    esi
  4192b5:	and    bl,BYTE PTR [eax]
  4192b7:	lahf   
  4192b8:	xchg   bl,dl
  4192ba:	fsub   st,st(6)
  4192bc:	iret   
  4192bd:	fld1   
  4192bf:	sbb    edx,DWORD PTR [ecx]
  4192c1:	into   
  4192c2:	jle    0x4192e3
  4192c4:	push   0xfffffff9
  4192c6:	cmp    dl,bl
  4192c8:	pop    esi
  4192c9:	das    
  4192ca:	aad    0xa3
  4192cc:	iret   
  4192cd:	lds    eax,FWORD PTR [bp+di-0x2a]
  4192d1:	ins    BYTE PTR es:[edi],dx
  4192d2:	adc    BYTE PTR [eax+0x3cd90495],bl
  4192d8:	inc    ebx
  4192d9:	xor    DWORD PTR [eax-0x304351fa],esi
  4192df:	dec    ebp
  4192e0:	jecxz  0x419296
  4192e2:	das    
  4192e3:	aad    0xff
  4192e5:	pushf  
  4192e6:	sub    esi,DWORD PTR [esi]
  4192e8:	pop    edx
  4192e9:	stos   DWORD PTR es:[edi],eax
  4192ea:	push   ecx
  4192eb:	and    DWORD PTR [eax-0x5e],ecx
  4192ee:	add    BYTE PTR [eax],al
  4192f0:	add    BYTE PTR [eax],al
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x261b5d81
  419300:	int3   
  419301:	daa    
  419302:	jmp    0xf4419416
  419307:	add    al,0x0
  419309:	add    BYTE PTR [eax+0x785f3f97],dh
  41930f:	rol    DWORD PTR [edi+0x43079127],0x4c
  419316:	push   ds
  419317:	add    al,0x2
  419319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931a:	xchg   edx,eax
  41931b:	push   es
  41931c:	(bad)  [esp+esi*2+0x6f]
  419320:	push   eax
  419321:	out    0xd5,eax
  419323:	fbld   TBYTE PTR [eax]
  419325:	gs jecxz 0x4192eb
  419328:	push   ds
  419329:	xchg   edi,eax
  41932a:	dec    edx
  41932b:	fadd   QWORD PTR [eax]
  41932d:	test   edx,0x528699c8
  419333:	cmp    BYTE PTR [edi-0x3cdc1109],ch
  419339:	leave  
  41933a:	sbb    ah,BYTE PTR [ebp-0xcac9723]
  419340:	mov    edx,0x16f305d2
  419345:	mov    ebx,0x22ae8f67
  41934a:	adc    edx,ebx
  41934c:	test   DWORD PTR [esi-0x43684986],esp
  419352:	xor    ah,BYTE PTR [edi-0x1ad4ce13]
  419358:	sbb    ax,0xd077
  41935c:	add    ecx,ebx
  41935e:	jl     0x4193b8
  419360:	mov    ecx,DWORD PTR [esi-0x44c66d5]
  419366:	fcomp  DWORD PTR [esi+0x1f]
  419369:	cmp    edi,DWORD PTR [edx+0x3c]
  41936c:	sub    eax,0xab96022e
  419371:	mov    ecx,0x49f206b
  419376:	dec    ebp
  419377:	test   BYTE PTR [edx-0x6d],ch
  41937a:	mov    al,0xc9
  41937c:	lods   al,BYTE PTR ds:[esi]
  41937d:	xchg   edi,eax
  41937e:	adc    ebx,DWORD PTR [edi]
  419380:	jg     0x419382
  419382:	cmp    BYTE PTR [ebp+0x24284278],0x1
  419389:	jae    0x419406
  41938b:	sub    eax,0x6244b6a1
  419390:	shl    BYTE PTR [edx-0x49],0xbb
  419394:	jne    0x41935c
  419396:	stc    
  419397:	fyl2xp1 
  419399:	stos   BYTE PTR es:[edi],al
  41939a:	jo     0x419350
  41939c:	sub    eax,0x317e14a2
  4193a1:	js     0x4193ac
  4193a3:	cmp    esp,DWORD PTR [edx]
  4193a5:	dec    edx
  4193a6:	add    ebx,DWORD PTR [edx+eiz*4]
  4193a9:	stc    
  4193aa:	xchg   edi,eax
  4193ab:	xor    BYTE PTR [edx],bl
  4193ad:	jbe    0x419354
  4193af:	sahf   
  4193b0:	lds    eax,FWORD PTR [edx-0x4e8bed94]
  4193b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b7:	inc    ebx
  4193b8:	jp     0x4193a0
  4193ba:	xor    eax,0xbcd989d0
  4193bf:	sbb    edi,esp
  4193c1:	bnd jno 0x4193f1
  4193c4:	sti    
  4193c5:	dec    DWORD PTR [esi-0x20]
  4193c8:	loope  0x419394
  4193ca:	nop
  4193cb:	mov    ds:0x114fc40c,eax
  4193d0:	or     ah,cl
  4193d2:	mov    ds:0x41dc7b5e,eax
  4193d7:	push   ebx
  4193d8:	mov    ch,0x9d
  4193da:	leave  
  4193db:	or     bl,bl
  4193dd:	mov    esp,0x6187578e
  4193e2:	xor    BYTE PTR [ebp+edx*4-0x4],0xfb
  4193e7:	inc    ebp
  4193e8:	dec    ecx
  4193e9:	or     ebp,DWORD PTR [edx+0x4a]
  4193ec:	aas    
  4193ed:	icebp  
  4193ee:	xchg   edx,eax
  4193ef:	and    BYTE PTR [esi+ebp*2+0x5376f943],ch
  4193f6:	and    al,0xf9
  4193f8:	push   0x13364847
  4193fd:	(bad)  
  4193fe:	les    esp,FWORD PTR [esi+ebx*4]
  419401:	call   0x9b88:0x8f3c29f4
  419408:	pop    ebx
  419409:	in     al,0xf7
  41940b:	mov    cl,0x33
  41940d:	sahf   
  41940e:	xor    dl,BYTE PTR [edx-0x741c04a5]
  419414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419415:	stos   BYTE PTR es:[edi],al
  419416:	aas    
  419417:	inc    edx
  419418:	lods   eax,DWORD PTR ds:[esi]
  419419:	xchg   ebx,eax
  41941a:	fldenv [esi-0x63167fa0]
  419420:	jbe    0x419495
  419422:	push   ds
  419423:	mov    esp,0x49fb13bc
  419428:	call   FWORD PTR [edi-0x5e]
  41942b:	fwait
  41942c:	test   ch,bl
  41942e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942f:	(bad)
  419432:	into   
  419433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419434:	sbb    eax,0x4a1607e2
  419439:	fdivr  QWORD PTR [ebp+0x37]
  41943c:	and    BYTE PTR [eax-0x77],dl
  41943f:	jns    0x4193d1
  419441:	loop   0x4193f7
  419443:	ds xor eax,0x69954f79
  419449:	xor    edi,DWORD PTR [ecx+0x73]
  41944c:	mov    edx,0x5142a013
  419451:	jl     0x4194c6
  419453:	imul   ecx,DWORD PTR [eax],0x92943348
  419459:	mov    ch,0x61
  41945b:	jl     0x4194be
  41945d:	push   ebx
  41945e:	lods   al,BYTE PTR ds:[esi]
  41945f:	arpl   WORD PTR [esp+ebx*1+0x9fccbd5],sp
  419466:	lahf   
  419467:	lods   eax,DWORD PTR ds:[esi]
  419468:	ret    
  419469:	xchg   edx,eax
  41946a:	sub    al,0x81
  41946c:	ret    
  41946d:	xor    dh,ch
  41946f:	mov    dh,0xf2
  419471:	pushf  
  419472:	or     DWORD PTR [ebx+ecx*2],0x9c00b1d9
  419479:	pop    edi
  41947a:	sub    BYTE PTR [edx+0x3e],dh
  41947d:	js     0x4194f6
  41947f:	or     al,0x59
  419481:	push   ecx
  419482:	jae    0x4194b1
  419484:	add    dh,0xa
  419487:	ficomp DWORD PTR [eax+0x3]
  41948a:	in     eax,dx
  41948b:	jbe    0x419459
  41948d:	add    BYTE PTR [edi-0x2c],dl
  419490:	xor    esi,DWORD PTR [eax*2-0x359cabb0]
  419497:	out    0xf1,al
  419499:	out    dx,eax
  41949a:	xor    cl,BYTE PTR [edx-0xc68ede3]
  4194a0:	test   eax,0x7bb2463b
  4194a5:	rcr    DWORD PTR [eax-0x59],0x38
  4194a9:	in     al,dx
  4194aa:	repnz stc 
  4194ac:	retf   
  4194ad:	push   cs
  4194ae:	ja     0x419485
  4194b0:	pop    ss
  4194b1:	push   eax
  4194b2:	pop    ds
  4194b3:	fsubr  QWORD PTR [edx]
  4194b5:	ds and ah,bh
  4194b8:	xor    al,0x8c
  4194ba:	arpl   bp,si
  4194bc:	pop    ebx
  4194bd:	mov    ?,WORD PTR [edx]
  4194bf:	mov    esi,0x3c71dce3
  4194c4:	loope  0x4194e5
  4194c6:	mov    bl,0x65
  4194c8:	pop    edi
  4194c9:	mov    DWORD PTR [esi],eax
  4194cb:	out    0x68,al
  4194cd:	imul   ecx,edx,0x811f3dd1
  4194d3:	pop    ss
  4194d4:	adc    bh,BYTE PTR [edi]
  4194d6:	aam    0x9a
  4194d8:	xchg   esp,eax
  4194d9:	jb     0x4194f3
  4194db:	ret    0x43ba
  4194de:	ja     0x4194d9
  4194e0:	push   ss
  4194e1:	xor    dl,BYTE PTR [ebx]
  4194e3:	sub    eax,0x32314d2c
  4194e8:	outs   dx,DWORD PTR ds:[esi]
  4194e9:	arpl   WORD PTR [edi+0x1],cx
  4194ec:	popf   
  4194ed:	loop   0x419482
  4194ef:	sbb    DWORD PTR [ecx+0x79],edi
  4194f2:	ins    BYTE PTR es:[edi],dx
  4194f3:	push   cs
  4194f4:	pop    eax
  4194f5:	add    BYTE PTR [ebp+0x3d],ah
  4194f8:	mov    dl,BYTE PTR [eax-0x9]
  4194fb:	add    eax,0xb72486a6
  419500:	jmp    0x41957a
  419502:	adc    DWORD PTR [ebx-0x1e],0x50
  419506:	ja     0x4194e3
  419508:	adc    edx,eax
  41950a:	push   eax
  41950b:	or     al,0xa2
  41950d:	xchg   ebp,eax
  41950e:	data16 fist DWORD PTR [edi]
  419511:	xchg   BYTE PTR [esi+0x3d],bl
  419514:	test   al,0x1b
  419516:	je     0x41956f
  419518:	add    BYTE PTR ds:0x7cea3bd4,dl
  41951e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41951f:	jge    0x419514
  419521:	xchg   ebx,eax
  419522:	sbb    al,0xee
  419524:	xor    cl,BYTE PTR [ecx-0x218e575b]
  41952a:	lea    ebp,[ecx+eiz*8+0x73]
  41952e:	xor    ebx,DWORD PTR [ebx]
  419530:	stos   BYTE PTR es:[edi],al
  419531:	adc    ch,BYTE PTR [esi+0x472dfcf]
  419537:	push   edx
  419538:	dec    edi
  419539:	(bad)  
  41953a:	mov    ebx,0x6e9426ce
  41953f:	sbb    ch,dl
  419541:	mov    ds:0x1b340e93,eax
  419546:	xchg   ecx,eax
  419547:	and    eax,0x84c0218e
  41954c:	loop   0x41952c
  41954e:	and    ecx,0xd4ca5c03
  419554:	mov    ch,0x7d
  419556:	lods   al,BYTE PTR ds:[esi]
  419557:	mov    cl,0xe7
  419559:	push   ss
  41955a:	hlt    
  41955b:	(bad)  
  41955c:	jbe    0x41956a
  41955e:	jnp    0x41957c
  419560:	sub    ah,dl
  419562:	out    0x6e,al
  419564:	test   DWORD PTR [ecx+0x75],0x5c468891
  41956b:	sbb    DWORD PTR [eax],esp
  41956d:	xor    edi,esi
  41956f:	xchg   ecx,eax
  419570:	or     cl,BYTE PTR [ebx+0x53]
  419573:	aam    0x4f
  419575:	(bad)  
  419576:	shr    cl,0x89
  419579:	inc    ebp
  41957a:	aaa    
  41957b:	clc    
  41957c:	fiadd  DWORD PTR [ebx+0x2180b9a0]
  419582:	rcr    BYTE PTR [ebx+0x49],0x3a
  419586:	cmp    al,0x67
  419588:	adc    eax,0x785b300b
  41958d:	mov    esi,0xc7cb4620
  419592:	shl    DWORD PTR [ecx+0x7ef8073e],cl
  419598:	lahf   
  419599:	frstor [ecx]
  41959b:	mov    WORD PTR [ebx+0x5c],ds
  41959e:	shl    DWORD PTR [edi-0x3a77269d],1
  4195a4:	test   edi,edx
  4195a6:	mov    eax,ds:0x126703ab
  4195ab:	popa   
  4195ac:	fstp   st(2)
  4195ae:	loop   0x419621
  4195b0:	jno    0x4195c9
  4195b2:	mov    cl,0xf5
  4195b4:	sub    eax,0x819fd324
  4195b9:	pop    es
  4195ba:	enter  0xfd4f,0xb3
  4195be:	xchg   ebx,eax
  4195bf:	outs   dx,DWORD PTR ds:[esi]
  4195c0:	stc    
  4195c1:	nop
  4195c2:	(bad)  
  4195c3:	loop   0x419555
  4195c5:	mov    cl,0x9e
  4195c7:	test   DWORD PTR [ebp+0x16],0xbaef36f
  4195ce:	rcl    ebx,0xc8
  4195d1:	fisub  DWORD PTR [esi-0x66870b9b]
  4195d7:	inc    edi
  4195d8:	or     bl,BYTE PTR [eax-0x7e467dc8]
  4195de:	mov    ch,0x31
  4195e0:	inc    eax
  4195e1:	xchg   esp,eax
  4195e2:	imul   ebp,edx,0x5450431d
  4195e8:	mul    BYTE PTR [ecx-0x35]
  4195eb:	sbb    eax,0xdd99151e
  4195f0:	retf   0xa7c6
  4195f3:	std    
  4195f4:	sbb    BYTE PTR [ecx-0x22],ah
  4195f7:	ret    
  4195f8:	leave  
  4195f9:	inc    edi
  4195fa:	aam    0xa9
  4195fc:	pusha  
  4195fd:	rcl    cl,cl
  4195ff:	adc    DWORD PTR [edi+0x54e1822c],eax
  419605:	sbb    ebp,eax
  419607:	xlat   BYTE PTR ds:[ebx]
  419608:	(bad)  
  41960a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41960b:	xor    BYTE PTR ds:0x481272f,dl
  419611:	inc    edi
  419612:	jno    0x419629
  419614:	jnp    0x4195a7
  419616:	sbb    al,0xd3
  419618:	repz inc ebx
  41961a:	or     al,0xbc
  41961c:	xor    BYTE PTR [eax+0x27],bl
  41961f:	pop    edx
  419620:	push   0x1f1c207f
  419625:	inc    esi
  419626:	inc    esi
  419627:	push   esi
  419628:	xor    bh,BYTE PTR [edx-0x24]
  41962b:	call   0x3005:0x3f8308af
  419632:	lods   al,BYTE PTR ds:[esi]
  419633:	mov    ebx,0xde18c51a
  419638:	imul   ebp,edx,0xffffffbb
  41963b:	jb     0x4195f0
  41963d:	sar    BYTE PTR [ecx+0x42],0xc8
  419641:	mov    dh,BYTE PTR [edx]
  419643:	retf   
  419644:	call   0xcc42:0xbe0c432c
  41964b:	out    0xed,al
  41964d:	outs   dx,BYTE PTR ds:[esi]
  41964e:	fsubr  st(4),st
  419650:	mov    ds:0x4bf6ea8c,al
  419655:	pop    edx
  419656:	out    0x8,eax
  419658:	sti    
  419659:	repnz dec ebx
  41965b:	(bad)  
  41965c:	jnp    0x419669
  41965e:	pop    ss
  41965f:	int    0x7b
  419661:	mov    ebx,0x13d17f37
  419666:	mov    al,0x69
  419668:	mov    esi,DWORD PTR [edi+0x79]
  41966b:	sbb    bl,BYTE PTR es:[ebx+0x3b]
  41966f:	or     DWORD PTR [eax],edi
  419671:	sub    DWORD PTR [eax-0x4baab1c6],ebp
  419677:	jp     0x41963b
  419679:	xchg   ecx,eax
  41967a:	stc    
  41967b:	fimul  WORD PTR [ebp-0x56525ae0]
  419681:	jo     0x419605
  419683:	xcrypt-cbc (bad)
  419684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419685:	push   eax
  419686:	(bad)  
  419688:	adc    al,0x4
  41968a:	cs adc eax,0xcc8fb88b
  419690:	pop    edi
  419691:	fcmovnbe st,st(7)
  419693:	xor    DWORD PTR [edx+eax*4+0x44],esp
  419697:	rcr    DWORD PTR [eax+0x2e],1
  41969a:	adc    DWORD PTR [ecx],edx
  41969c:	cmp    al,0xf6
  41969e:	inc    edi
  41969f:	icebp  
  4196a0:	adc    DWORD PTR [ebx+0x53f23da0],esp
  4196a6:	mul    esp
  4196a8:	test   DWORD PTR [edx-0x44a64887],ecx
  4196ae:	lahf   
  4196af:	(bad)  
  4196b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b1:	ins    DWORD PTR es:[edi],dx
  4196b2:	arpl   WORD PTR [edi+0x62],cx
  4196b5:	push   edx
  4196b6:	push   0x96039b6f
  4196bb:	dec    esi
  4196bc:	sbb    al,0x96
  4196be:	arpl   WORD PTR [ecx],bx
  4196c0:	(bad)  
  4196c1:	push   ss
  4196c2:	dec    ebp
  4196c3:	shl    BYTE PTR [ecx-0x5b102cab],cl
  4196c9:	imul   ebp,DWORD PTR [edi+0x41923021],0x8ccd57f2
  4196d3:	aad    0x3a
  4196d5:	pop    es
  4196d6:	jne    0x4196ca
  4196d8:	loop   0x419661
  4196da:	in     al,dx
  4196db:	jmp    0x41973b
  4196dd:	add    al,BYTE PTR [ebx+0x20]
  4196e0:	inc    ecx
  4196e1:	imul   ecx,DWORD PTR ds:0xa001d07a,0xffffffcd
  4196e8:	mov    ds:0xdf60b270,al
  4196ed:	arpl   WORD PTR [edi],sp
  4196ef:	leave  
  4196f0:	retf   
  4196f1:	jbe    0x4196e7
  4196f3:	mov    edi,0xa05e4e51
  4196f8:	mov    eax,0xaa75886a
  4196fd:	into   
  4196fe:	mov    bh,0x99
  419700:	inc    eax
  419701:	int3   
  419702:	frstor [edi+0x63a184bc]
  419708:	mov    dh,BYTE PTR [ebx]
  41970a:	sub    al,0xda
  41970c:	mov    DWORD PTR [eax+0x9],edi
  41970f:	pop    ds
  419710:	aas    
  419711:	mov    al,ds:0x148d1c84
  419716:	jle    0x419735
  419718:	fisubr DWORD PTR [ebx+0x37]
  41971b:	xor    BYTE PTR [edx-0x24],bl
  41971e:	loopne 0x4196fa
  419720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419721:	adc    DWORD PTR [ebp+esi*4-0x4048d474],0x47cb9b75
  41972c:	rcr    edi,0x3e
  41972f:	jbe    0x419792
  419731:	and    bh,ch
  419733:	and    ah,BYTE PTR [ebp+0x7ae41f20]
  419739:	sub    BYTE PTR [ecx],ah
  41973b:	push   esi
  41973c:	dec    ebp
  41973d:	jge    0x4197b6
  41973f:	jecxz  0x4197b6
  419741:	push   ebx
  419742:	jnp    0x4196f7
  419744:	sub    DWORD PTR [edx+0x5],esi
  419747:	adc    ebx,DWORD PTR [ebp-0x23ec24fe]
  41974d:	fistp  QWORD PTR [esi]
  41974f:	ror    DWORD PTR [ecx+0x21],cl
  419752:	ja     0x4197aa
  419754:	ins    BYTE PTR es:[edi],dx
  419755:	mov    ?,WORD PTR [esi-0x70]
  419758:	neg    BYTE PTR [edx-0x73eff127]
  41975e:	not    DWORD PTR [eax+0x3ae84be6]
  419764:	push   esp
  419765:	sub    BYTE PTR [ebp-0x11a52e91],0xdd
  41976c:	ds ins DWORD PTR es:[edi],dx
  41976e:	mov    esp,0xf172fe1c
  419773:	cmc    
  419774:	pop    esi
  419775:	lods   al,BYTE PTR ds:[esi]
  419776:	and    dh,dh
  419778:	mov    WORD PTR [ebp+ebx*1-0x56],?
  41977c:	push   ss
  41977d:	cwde   
  41977e:	(bad)  
  41977f:	dec    ch
  419781:	adc    al,0xae
  419783:	pop    ebx
  419784:	xchg   bx,ax
  419786:	arpl   WORD PTR [edi-0x7b],di
  419789:	les    ebx,FWORD PTR [esi-0xffa0cbe]
  41978f:	loope  0x419788
  419791:	test   BYTE PTR [edx],cl
  419793:	jecxz  0x41976a
  419795:	push   edi
  419796:	mov    bh,0xd4
  419798:	out    dx,al
  419799:	inc    esi
  41979a:	xor    eax,0x41cd2c92
  41979f:	(bad)  
  4197a1:	xor    DWORD PTR [esi+0xa5add85],esi
  4197a7:	jbe    0x4197e0
  4197a9:	in     al,dx
  4197aa:	fs push eax
  4197ac:	mov    ds:0xc4e50b19,al
  4197b1:	jle    0x419733
  4197b3:	pop    ebx
  4197b4:	mov    edi,0x9162d3ae
  4197b9:	pop    edx
  4197ba:	cmp    DWORD PTR [edx+0x2f0cd636],ebx
  4197c0:	outs   dx,BYTE PTR ds:[esi]
  4197c1:	ins    DWORD PTR es:[edi],dx
  4197c2:	xchg   ebx,eax
  4197c3:	(bad)
  4197c6:	imul   edi,DWORD PTR [esi],0x7302833f
  4197cc:	lods   al,BYTE PTR ds:[esi]
  4197cd:	out    0x75,eax
  4197cf:	stos   BYTE PTR es:[edi],al
  4197d0:	or     eax,0x3592bf06
  4197d5:	lahf   
  4197d6:	mov    ch,0x9c
  4197d8:	mov    bh,bl
  4197da:	nop
  4197db:	sbb    BYTE PTR [ebx],ch
  4197dd:	push   cs
  4197de:	cmp    cl,BYTE PTR [esi+0x3e]
  4197e1:	int    0x3f
  4197e3:	adc    ebx,0xb66e54de
  4197e9:	sub    BYTE PTR [esi],0x2f
  4197ec:	ret    
  4197ed:	dec    esp
  4197ee:	sub    WORD PTR [ecx],si
  4197f1:	mov    dh,0x93
  4197f3:	shr    eax,1
  4197f5:	sbb    esp,esi
  4197f7:	(bad)  
  4197f8:	pop    edx
  4197f9:	push   ebx
  4197fa:	nop
  4197fb:	cmp    BYTE PTR [eax+ecx*2+0x0],dl
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	rol    bl,1
  41980f:	and    ebp,DWORD PTR [esi]
  419811:	jnp    0x4197f0
  419813:	adc    al,0x1
  419815:	add    ah,dh
  419817:	add    al,0x0
  419819:	add    bh,bh
  41981b:	iret   
  41981c:	cmp    cl,dl
  41981e:	and    ch,dl
  419820:	mov    bh,dh
  419822:	(bad)  
  419823:	mov    eax,ds:0x4aac71a2
  419828:	in     eax,0x72
  41982a:	mov    ebp,0x1ba5dbc1
  41982f:	push   edx
  419830:	(bad)  
  419831:	xchg   ebx,eax
  419832:	pop    edx
  419833:	int3   
  419834:	and    eax,0x1539608c
  419839:	mov    ?,ebx
  41983b:	jg     0x41982d
  41983d:	mov    edx,0xe2217b25
  419842:	test   al,0xc8
  419844:	push   esp
  419845:	adc    al,0x84
  419847:	and    eax,0x3adfc088
  41984c:	ins    DWORD PTR es:[edi],dx
  41984d:	rcr    DWORD PTR [ecx],1
  41984f:	dec    esp
  419850:	jecxz  0x419857
  419852:	push   ebx
  419853:	dec    esi
  419854:	fwait
  419855:	xchg   edx,eax
  419856:	call   0xdc5ca8ad
  41985b:	sbb    BYTE PTR [ecx-0x60],cl
  41985e:	jecxz  0x4197ff
  419860:	ins    DWORD PTR es:[edi],dx
  419861:	xor    eax,0x78e99b62
  419866:	fmul   DWORD PTR [eax]
  419868:	mov    cl,0x50
  41986a:	xchg   edi,eax
  41986b:	(bad)  
  41986c:	jb     0x419897
  41986e:	inc    esi
  41986f:	sar    DWORD PTR [edi+0x4],cl
  419872:	lods   eax,DWORD PTR ds:[esi]
  419873:	mov    ?,WORD PTR [ebp+0x244e13d4]
  419879:	nop
  41987a:	pop    edx
  41987b:	jb     0x419861
  41987d:	adc    BYTE PTR [edi+0x6e9d89c3],0x32
  419884:	or     eax,0x76dbf0fc
  419889:	mov    bh,ah
  41988b:	bnd jmp 0x4198b2
  41988e:	sbb    ecx,ecx
  419890:	mov    esi,0xc7cffc8a
  419895:	jnp    0x419916
  419897:	cs stos DWORD PTR es:[edi],eax
  419899:	mov    ebx,0x5b5fd49f
  41989e:	aaa    
  41989f:	push   ds
  4198a0:	scas   eax,DWORD PTR es:[edi]
  4198a1:	sub    eax,0xa561640a
  4198a6:	xor    eax,0xe0960794
  4198ab:	push   edi
  4198ac:	xchg   edi,eax
  4198ad:	ins    DWORD PTR es:[edi],dx
  4198ae:	retf   
  4198af:	or     DWORD PTR [esi+eax*1],esi
  4198b2:	jno    0x4198b6
  4198b4:	xor    edi,DWORD PTR [esi-0x6549ce18]
  4198ba:	dec    edx
  4198bb:	adc    esi,DWORD PTR [eax+0x6caef088]
  4198c1:	push   edi
  4198c2:	arpl   WORD PTR [edi],ax
  4198c4:	call   0xe48e866c
  4198c9:	mov    bl,0x73
  4198cb:	push   ss
  4198cc:	mov    eax,ds:0x41d7a5e7
  4198d1:	int    0x4a
  4198d3:	scas   al,BYTE PTR es:[edi]
  4198d4:	mov    ds:0x9ca2bbf8,eax
  4198d9:	sbb    eax,0x77dd7f2e
  4198de:	mov    dl,0xfd
  4198e0:	adc    BYTE PTR [edi+0x324851d4],0x9
  4198e7:	cdq    
  4198e8:	sets   BYTE PTR [edi]
  4198eb:	mov    ecx,0xf7aee475
  4198f0:	mov    edx,0x6b308d80
  4198f5:	cli    
  4198f6:	nop
  4198f7:	and    bh,BYTE PTR [eax+eax*4+0xd]
  4198fb:	bnd jno 0x419952
  4198fe:	mov    dl,0x2b
  419900:	xchg   DWORD PTR [edx+0x5e6f31a0],ebp
  419906:	fs mov cl,0x24
  419909:	push   edi
  41990a:	into   
  41990b:	outs   dx,BYTE PTR ds:[esi]
  41990c:	pop    esp
  41990d:	daa    
  41990e:	in     eax,dx
  41990f:	test   esi,esi
  419911:	(bad)  
  419912:	frstor [esi-0x5cf48241]
  419918:	aaa    
  419919:	cmp    ch,0x89
  41991c:	or     BYTE PTR [ebp-0x28f215a4],cl
  419922:	out    0x32,al
  419924:	push   ds
  419925:	inc    ebx
  419926:	popf   
  419927:	enter  0x690d,0x2e
  41992b:	jecxz  0x419988
  41992d:	inc    edi
  41992e:	or     al,0x54
  419930:	cwde   
  419931:	mov    dl,0x47
  419933:	lods   al,BYTE PTR ds:[esi]
  419934:	iret   
  419935:	pop    eax
  419936:	shl    BYTE PTR [eax+0x6a],1
  419939:	(bad)  
  41993a:	mov    dh,BYTE PTR [esi+edi*8]
  41993d:	xchg   ebp,eax
  41993e:	cmp    edx,DWORD PTR [ebx+0x44]
  419941:	xor    BYTE PTR [edi],dl
  419943:	inc    eax
  419944:	xor    BYTE PTR [edx-0x1efb254e],0x49
  41994b:	out    0xcc,al
  41994d:	test   BYTE PTR [esi+edx*2-0xc],cl
  419951:	addr16 inc ebp
  419953:	pop    eax
  419954:	adc    BYTE PTR [ecx+0x61854c7b],ch
  41995a:	mov    eax,0xccd23695
  41995f:	(bad)  
  419960:	popa   
  419961:	lods   al,BYTE PTR ds:[esi]
  419962:	mov    edx,0x15a2880d
  419967:	fisttp DWORD PTR [edx]
  419969:	adc    eax,0x4827bc9d
  41996e:	sub    BYTE PTR [ecx],ah
  419970:	pushf  
  419971:	pop    esp
  419972:	ss jl  0x419993
  419975:	cld    
  419976:	mov    dh,0xc9
  419978:	xchg   esp,eax
  419979:	push   edx
  41997a:	adc    edi,DWORD PTR [edi+0x46]
  41997d:	repnz xchg esi,eax
  41997f:	ins    BYTE PTR es:[edi],dx
  419980:	add    eax,0xe6dab949
  419985:	pop    ebp
  419986:	sbb    DWORD PTR [edi-0x1d2db201],esi
  41998c:	ja     0x4199d7
  41998e:	icebp  
  41998f:	jmp    0x59037b4e
  419994:	or     al,0xe3
  419996:	push   ecx
  419997:	pop    ss
  419998:	out    dx,eax
  419999:	sub    eax,0x7ed01f79
  41999e:	inc    eax
  41999f:	jbe    0x4199d4
  4199a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a2:	push   es
  4199a3:	and    DWORD PTR [esi-0x27075c5c],eax
  4199a9:	xor    DWORD PTR [edx-0x7cec01e6],0x53
  4199b0:	inc    eax
  4199b1:	xchg   edi,eax
  4199b2:	cmp    ch,BYTE PTR [eax+0x546a7052]
  4199b8:	fist   WORD PTR [ebp+0x11d71946]
  4199be:	(bad)  
  4199bf:	je     0x41995c
  4199c1:	out    0xf4,al
  4199c3:	fadd   QWORD PTR [ebp+esi*8-0x4ee97487]
  4199ca:	xchg   ebp,eax
  4199cb:	js     0x419a1e
  4199cd:	cs gs pmaddwd mm7,mm2
  4199d2:	mov    WORD PTR [edx-0x4],fs
  4199d5:	adc    al,0x72
  4199d7:	mov    BYTE PTR [ebx-0x5f7b5529],ah
  4199dd:	sub    eax,0x6b85fbba
  4199e2:	in     al,dx
  4199e3:	push   eax
  4199e4:	mov    al,BYTE PTR [ecx]
  4199e6:	fwait
  4199e7:	std    
  4199e8:	dec    edx
  4199e9:	call   0xc003a268
  4199ee:	sbb    dl,bl
  4199f0:	rcl    BYTE PTR [edx],cl
  4199f2:	(bad)  
  4199f3:	or     edx,DWORD PTR [esi+0x6f]
  4199f6:	lock push es
  4199f8:	enter  0x3077,0x28
  4199fc:	rcr    BYTE PTR [eax],1
  4199fe:	sti    
  4199ff:	stos   DWORD PTR es:[edi],eax
  419a00:	sbb    BYTE PTR [ecx+eiz*2],al
  419a03:	push   eax
  419a04:	push   eax
  419a05:	dec    ecx
  419a06:	pusha  
  419a07:	mov    ?,ecx
  419a09:	or     ebp,DWORD PTR [edx]
  419a0b:	and    edi,edi
  419a0d:	mov    bl,0xd6
  419a0f:	(bad)  
  419a10:	imul   ecx,eax,0x69e690bd
  419a16:	ret    0xb0ad
  419a19:	leave  
  419a1a:	in     eax,0x90
  419a1c:	jle    0x419a55
  419a1e:	cmp    BYTE PTR [ebx+esi*1],al
  419a21:	inc    esi
  419a22:	in     al,dx
  419a23:	add    BYTE PTR [ebx],ch
  419a25:	lock mov edx,0xce0049c2
  419a2b:	repz mov edi,0x74e5eede
  419a31:	sub    ebp,esp
  419a33:	js     0x419aa1
  419a35:	sub    ch,BYTE PTR [ebx+ebp*2-0x31f4d739]
  419a3c:	dec    ecx
  419a3d:	mov    dl,0x2c
  419a3f:	fwait
  419a40:	scas   al,BYTE PTR es:[edi]
  419a41:	int    0x20
  419a43:	test   cl,ch
  419a45:	(bad)  
  419a46:	mov    bl,0xe7
  419a48:	fcmove st,st(3)
  419a4a:	iret   
  419a4b:	out    0x8,eax
  419a4d:	cs ds mov ah,0x7c
  419a51:	dec    ebp
  419a52:	add    ch,BYTE PTR [ecx-0x3d71104e]
  419a58:	fiadd  WORD PTR [esi+0x26]
  419a5b:	icebp  
  419a5c:	mov    BYTE PTR [edi+edi*4-0x42],dl
  419a60:	iret   
  419a61:	and    ebp,DWORD PTR [eax]
  419a63:	add    cl,dh
  419a65:	gs mov ebx,0xaf1f9278
  419a6b:	jl     0x419a1e
  419a6d:	scas   al,BYTE PTR es:[edi]
  419a6e:	cs jle 0x419ab3
  419a71:	jle    0x419a42
  419a73:	push   edi
  419a74:	test   BYTE PTR ds:0x7588fe61,dh
  419a7a:	int    0xc2
  419a7c:	add    DWORD PTR [edi],edi
  419a7e:	arpl   WORD PTR [eax-0x24],ax
  419a81:	into   
  419a82:	mov    ah,0xd9
  419a84:	popa   
  419a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a86:	adc    al,0x8c
  419a88:	and    eax,eax
  419a8a:	lock jle 0x419ab9
  419a8d:	pop    ebp
  419a8e:	push   DWORD PTR [ebp+0xc]
  419a91:	jmp    0x3eef:0x125a8d9c
  419a98:	nop
  419a99:	adc    esi,DWORD PTR [ebx+eax*2-0x30ef4515]
  419aa0:	call   0x7b59:0xe8085310
  419aa7:	sti    
  419aa8:	pusha  
  419aa9:	adc    DWORD PTR [edi-0x472b3c64],ebp
  419aaf:	fsub   QWORD PTR [edx]
  419ab1:	and    al,0x49
  419ab3:	(bad)  
  419ab4:	inc    edi
  419ab5:	(bad)  
  419ab6:	hlt    
  419ab7:	std    
  419ab8:	shl    BYTE PTR [edi+0x2d],cl
  419abb:	push   cs
  419abc:	cmp    BYTE PTR [ecx+0x2f5f0f6],cl
  419ac2:	push   edx
  419ac3:	adc    al,0xb
  419ac5:	(bad)  [eax]
  419ac7:	je     0x419afb
  419ac9:	lock mov ds:0x33fa0661,eax
  419acf:	dec    esi
  419ad0:	not    BYTE PTR [edi+0x5f]
  419ad3:	mov    ebp,0x37add8f8
  419ad8:	xchg   BYTE PTR [edi],al
  419ada:	adc    bh,ah
  419adc:	sub    eax,0x42de29d1
  419ae1:	xor    dl,cl
  419ae3:	outs   dx,BYTE PTR ds:[esi]
  419ae4:	pop    ds
  419ae5:	mov    edx,0x74221cb3
  419aea:	xor    ebx,DWORD PTR [ebx]
  419aec:	fiadd  WORD PTR [eax]
  419aee:	add    DWORD PTR [ebx],0xfaa92a87
  419af4:	scas   al,BYTE PTR es:[edi]
  419af5:	aam    0x6f
  419af7:	(bad)
  419afa:	aas    
  419afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419afc:	inc    edx
  419afd:	pop    eax
  419afe:	cli    
  419aff:	cs sub al,0x89
  419b02:	retf   0x8400
  419b05:	pushf  
  419b06:	inc    edx
  419b07:	jle    0x419b2f
  419b09:	sbb    bl,ah
  419b0b:	jp     0x419b68
  419b0d:	fwait
  419b0e:	adc    dh,BYTE PTR [esp+edi*8-0x2]
  419b12:	call   0xc5a6:0x4a435a15
  419b19:	arpl   WORD PTR [edx+0x3dd0fbb6],di
  419b1f:	sub    bh,cl
  419b21:	in     eax,dx
  419b22:	cmp    eax,0x34beb06f
  419b27:	jns    0x419b78
  419b29:	ret    0x7e6b
  419b2c:	jp     0x419ac5
  419b2e:	xchg   BYTE PTR [edi],al
  419b30:	push   cs
  419b31:	or     BYTE PTR [edx-0x62d11e38],dl
  419b37:	push   ebx
  419b38:	aaa    
  419b39:	and    al,0x11
  419b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b3c:	sub    al,0xf8
  419b3e:	call   0x6090:0xc83090b
  419b45:	pop    ss
  419b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b47:	cld    
  419b48:	push   ebp
  419b49:	dec    edi
  419b4a:	push   edi
  419b4b:	mov    eax,0xd00d6e0e
  419b50:	jmp    0xedb67bd5
  419b55:	in     eax,dx
  419b56:	test   al,0x24
  419b58:	shr    BYTE PTR [ebx-0x730fa2db],0xd2
  419b5f:	or     eax,0xa9e0fbd7
  419b64:	enter  0x765d,0x91
  419b68:	jmp    0x419b43
  419b6a:	push   es
  419b6b:	arpl   dx,cx
  419b6d:	je     0x419ba7
  419b6f:	push   ebp
  419b70:	xor    ah,dh
  419b72:	sub    BYTE PTR [ebp-0x20],al
  419b75:	daa    
  419b76:	shl    BYTE PTR [esi-0xaceb1b],0xd6
  419b7d:	sub    BYTE PTR [ecx+0x1872f5d3],dl
  419b83:	and    BYTE PTR [eax-0x688d8e63],cl
  419b89:	sbb    BYTE PTR [ebx-0x10642094],dl
  419b8f:	es mov bh,0xa6
  419b92:	loop   0x419bf3
  419b94:	stos   BYTE PTR es:[edi],al
  419b95:	shl    ch,cl
  419b97:	sbb    ah,ch
  419b99:	jo     0x419beb
  419b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b9c:	or     DWORD PTR [eax+0x14],0xc0741f64
  419ba3:	xor    bl,dh
  419ba5:	es lahf 
  419ba7:	dec    ebx
  419ba8:	aad    0xc7
  419baa:	mov    dh,0x3c
  419bac:	in     al,dx
  419bad:	add    edx,ecx
  419baf:	push   0xfffffffb
  419bb1:	sbb    eax,0x354df0e0
  419bb6:	icebp  
  419bb7:	mov    dl,0x2b
  419bb9:	lds    edi,FWORD PTR [edx+0x8]
  419bbc:	pop    ss
  419bbd:	dec    eax
  419bbe:	sahf   
  419bbf:	mov    bl,0xb0
  419bc1:	out    dx,al
  419bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc3:	test   eax,0xb64284d1
  419bc8:	std    
  419bc9:	cmp    edx,ebx
  419bcb:	test   eax,0x4485e327
  419bd0:	test   DWORD PTR [ebx-0xd],0x32f69c8d
  419bd7:	push   ebx
  419bd8:	mov    dx,0xd41
  419bdc:	lock inc edx
  419bde:	cmp    BYTE PTR [esi-0x5dbab9bc],dh
  419be4:	jne    0x419b8e
  419be6:	sub    esi,ebx
  419be8:	(bad)  
  419be9:	ins    BYTE PTR es:[edi],dx
  419bea:	imul   esi,DWORD PTR [ecx-0x589407fb],0xffffffa9
  419bf1:	outs   dx,BYTE PTR ds:[esi]
  419bf2:	retf   0x1ff4
  419bf5:	jo     0x419c68
  419bf7:	pop    esp
  419bf8:	sub    ah,dl
  419bfa:	push   ebx
  419bfb:	mov    ebx,0x9b955451
  419c00:	pop    esp
  419c01:	xchg   ebx,eax
  419c02:	fs push esi
  419c04:	in     eax,dx
  419c05:	mov    bh,0x52
  419c07:	xlat   BYTE PTR ds:[ebx]
  419c08:	jl     0x419c53
  419c0a:	cmc    
  419c0b:	rol    BYTE PTR [edx+0x1c40724b],1
  419c11:	les    edi,FWORD PTR [ecx-0x3e]
  419c14:	pop    edx
  419c15:	cmp    DWORD PTR [esi],ebx
  419c17:	pop    ebp
  419c18:	aas    
  419c19:	mov    eax,0xc5caca7e
  419c1e:	mov    al,0xc
  419c20:	retf   
  419c21:	call   0x9279:0x71e991df
  419c28:	mov    ecx,0xc6016f84
  419c2d:	mov    edx,0x2da68bc2
  419c32:	scas   al,BYTE PTR es:[edi]
  419c33:	xor    dl,BYTE PTR [ecx+0x44]
  419c36:	sub    bl,cl
  419c38:	push   ebp
  419c39:	jae    0x419bd1
  419c3b:	cmp    DWORD PTR ds:0x75e80827,ebp
  419c41:	rol    BYTE PTR [ebx-0x6a],0x5d
  419c45:	rcl    DWORD PTR [ebp-0x2744731a],0x7b
  419c4c:	dec    ecx
  419c4d:	imul   esp,DWORD PTR [esi],0xfffffff1
  419c50:	popa   
  419c51:	or     esp,ecx
  419c53:	stc    
  419c54:	mov    ds:0xfc3a59f9,eax
  419c59:	pop    ebp
  419c5a:	cmc    
  419c5b:	or     BYTE PTR [edi+edx*1],ch
  419c5e:	out    0x5f,al
  419c60:	or     DWORD PTR [eax+0x1d0da96e],ecx
  419c66:	mov    esi,0x9db1532f
  419c6b:	data16 jbe 0x419c73
  419c6e:	add    BYTE PTR [edx-0x393e1b74],0x6f
  419c75:	add    eax,0xb7595ee5
  419c7a:	jo     0x419c4d
  419c7c:	test   al,0xe3
  419c7e:	add    ebx,DWORD PTR [edx-0x32]
  419c81:	xor    BYTE PTR [ebx],cl
  419c83:	cld    
  419c84:	int3   
  419c85:	and    BYTE PTR [ebp-0x61],0x57
  419c89:	mov    cl,0x3e
  419c8b:	and    al,0x14
  419c8d:	or     DWORD PTR [edi],edi
  419c8f:	add    eax,0x1afe5431
  419c94:	pop    esi
  419c95:	cmp    edx,DWORD PTR [edi+0xfc63e64]
  419c9b:	aad    0x53
  419c9d:	ret    0x9bad
  419ca0:	adc    dh,BYTE PTR [edx-0x59]
  419ca3:	lock lods eax,DWORD PTR ds:[esi]
  419ca5:	fsub   DWORD PTR [esi+0x21]
  419ca8:	call   0xe96f:0xdccb6b60
  419caf:	ss scas al,BYTE PTR es:[edi]
  419cb1:	xsaveopt [edi]
  419cb4:	loop   0x419d30
  419cb6:	jmp    0x66de3885
  419cbb:	in     eax,0xa1
  419cbd:	sbb    ah,BYTE PTR [esi+0x19]
  419cc0:	and    ecx,DWORD PTR [ecx-0x10b8a237]
  419cc6:	test   ah,bh
  419cc8:	and    BYTE PTR [eax-0x17],dh
  419ccb:	and    al,0x14
  419ccd:	imul   eax,DWORD PTR [edi+0x73],0x6c
  419cd1:	and    eax,0x54a7f3a9
  419cd6:	add    eax,0xc3f50c25
  419cdb:	or     al,0xc1
  419cdd:	push   edi
  419cde:	nop
  419cdf:	and    bl,BYTE PTR [esi-0x1e]
  419ce2:	sar    BYTE PTR [eax+0x1f],1
  419ce5:	lds    ebp,FWORD PTR [eax]
  419ce7:	(bad)  
  419ce8:	sti    
  419ce9:	ret    
  419cea:	push   esi
  419ceb:	(bad)  
  419cec:	scas   al,BYTE PTR es:[edi]
  419ced:	repnz sbb eax,0xd832b967
  419cf3:	sar    ebp,1
  419cf5:	clc    
  419cf6:	sar    BYTE PTR [eax-0x42471f4c],1
  419cfc:	adc    cl,dh
  419cfe:	js     0x419caa
  419d00:	sub    BYTE PTR [ecx-0x20],0xb7
  419d04:	mov    edx,0x14ea2b54
  419d09:	xchg   ebp,eax
  419d0a:	pop    eax
  419d0b:	sbb    BYTE PTR [edi],bh
  419d0d:	scas   eax,DWORD PTR es:[edi]
  419d0e:	add    BYTE PTR [eax],al
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x518bf884]
  419d20:	mov    esp,gs
  419d22:	rcr    DWORD PTR [ecx],1
  419d24:	add    DWORD PTR [eax],eax
  419d26:	hlt    
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [esi],dl
  419d2b:	pop    edi
  419d2c:	or     DWORD PTR [esp+ecx*8-0x50],esp
  419d30:	pop    ebp
  419d31:	sub    bl,BYTE PTR ds:0x95b9b067
  419d37:	sub    bp,cx
  419d3a:	nop
  419d3b:	push   ebx
  419d3c:	aaa    
  419d3d:	or     cl,ch
  419d3f:	xor    al,0x58
  419d41:	cmp    ebp,eax
  419d43:	or     dh,bh
  419d45:	icebp  
  419d46:	mov    dh,0xb9
  419d48:	xor    al,0xa0
  419d4a:	test   al,0xb3
  419d4c:	(bad)  
  419d4d:	mov    eax,ds:0xb612660a
  419d52:	fs xor al,0x6b
  419d55:	add    esp,eax
  419d57:	mov    bl,0xd
  419d59:	xor    eax,0x393b17f6
  419d5e:	pop    ss
  419d5f:	push   edi
  419d60:	call   0x3c8a:0x8305edc2
  419d67:	in     al,dx
  419d68:	(bad)  
  419d6a:	bnd jo 0x419cf5
  419d6d:	loope  0x419d5e
  419d6f:	dec    edi
  419d70:	cmc    
  419d71:	xor    al,0xce
  419d73:	xchg   edx,eax
  419d74:	cmp    dh,BYTE PTR [esi-0x3b4f8312]
  419d7a:	mov    BYTE PTR [ebx],0xc8
  419d7d:	dec    esi
  419d7e:	push   edi
  419d7f:	xchg   BYTE PTR [ecx],bh
  419d81:	mov    cl,dh
  419d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d84:	out    0xe7,al
  419d86:	enter  0xb68b,0x5b
  419d8a:	test   al,0xb7
  419d8c:	push   es
  419d8d:	adc    BYTE PTR [edx],ah
  419d8f:	nop
  419d90:	idiv   DWORD PTR [esi+ebp*4]
  419d93:	dec    edi
  419d94:	push   es
  419d95:	sahf   
  419d96:	fdivr  DWORD PTR [eax]
  419d98:	mov    al,ds:0x7eba4428
  419d9d:	or     ch,ah
  419d9f:	push   es
  419da0:	call   0x7be3:0x192480e0
  419da7:	mov    eax,?
  419da9:	sti    
  419daa:	scas   al,BYTE PTR es:[edi]
  419dab:	test   eax,0x9b7bb5bc
  419db0:	addr16 (bad) 
  419db2:	nop
  419db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419db4:	xor    eax,0x6adbc003
  419db9:	pop    esp
  419dba:	jmp    0x419e12
  419dbc:	repz not BYTE PTR [edi+ebx*8+0x40]
  419dc1:	mov    ah,BYTE PTR ds:0x2ad243c3
  419dc7:	outs   dx,BYTE PTR ds:[esi]
  419dc8:	jecxz  0x419e12
  419dca:	mov    dh,0x41
  419dcc:	out    dx,al
  419dcd:	ror    BYTE PTR [edi+ecx*8+0x1c],0xd0
  419dd2:	push   esp
  419dd3:	inc    ebp
  419dd4:	push   eax
  419dd5:	imul   esi,eax,0x4253e4b3
  419ddb:	sbb    DWORD PTR [edx+0x38],esp
  419dde:	sbb    eax,0x59ce75b6
  419de3:	push   ebx
  419de4:	mov    dh,0x83
  419de6:	dec    esp
  419de7:	(bad)  
  419de8:	aaa    
  419de9:	add    al,0x7f
  419deb:	and    DWORD PTR [ebp-0x30],edi
  419dee:	mov    al,ds:0x6a4e1a00
  419df3:	cmc    
  419df4:	scas   eax,DWORD PTR es:[edi]
  419df5:	xchg   ebp,eax
  419df6:	xchg   ebp,eax
  419df7:	add    BYTE PTR [eax+0x7e],0x9
  419dfb:	sbb    edi,DWORD PTR [esi+0x2699c46a]
  419e01:	mov    ch,bh
  419e03:	inc    esi
  419e04:	aad    0xc3
  419e06:	dec    edi
  419e07:	leave  
  419e08:	leave  
  419e09:	cmc    
  419e0a:	int    0x79
  419e0c:	imul   ebp,DWORD PTR [edx+0x7b4d6536],0xc0c57caf
  419e16:	not    BYTE PTR [ecx-0x1455d1cc]
  419e1c:	pop    ss
  419e1d:	or     al,0x24
  419e1f:	fnstcw WORD PTR [ecx]
  419e21:	retf   0xd09b
  419e24:	inc    ebx
  419e25:	clc    
  419e26:	pushf  
  419e27:	add    dl,al
  419e29:	mov    esi,0xf1544a5e
  419e2e:	inc    edi
  419e2f:	in     eax,dx
  419e30:	stc    
  419e31:	mov    ebx,0xddc9dd5
  419e36:	pop    ss
  419e37:	lahf   
  419e38:	imul   esp,DWORD PTR [edi+0x2c],0xd3d130fc
  419e3f:	xchg   esi,eax
  419e40:	xchg   DWORD PTR [edi+ebx*4+0x2a],esi
  419e44:	dec    ecx
  419e45:	fs int3 
  419e47:	add    DWORD PTR [edx+0x5a],ecx
  419e4a:	adc    al,0x1c
  419e4c:	addr16 cld 
  419e4e:	jl     0x419e7f
  419e50:	(bad)  
  419e51:	and    ebp,esi
  419e53:	(bad)  
  419e54:	push   ebx
  419e55:	push   edx
  419e56:	xchg   esi,eax
  419e57:	(bad)  
  419e59:	mov    ds:0x63591364,eax
  419e5e:	cld    
  419e5f:	cdq    
  419e60:	cmp    ch,BYTE PTR [ecx-0x17]
  419e63:	(bad)  
  419e64:	jo     0x419dfe
  419e66:	(bad)  ds:0x84df337b
  419e6c:	jl     0x419e37
  419e6e:	jmp    0xdefb:0x372019
  419e75:	outs   dx,DWORD PTR ds:[esi]
  419e76:	and    ch,BYTE PTR [edi-0x1eee1597]
  419e7c:	call   0xe884:0xf05975f
  419e83:	sbb    ecx,DWORD PTR ds:0x20ba68e8
  419e89:	dec    esi
  419e8a:	pop    ds
  419e8b:	or     dl,dh
  419e8d:	mov    ds,WORD PTR [edx+0x49]
  419e90:	mov    esi,0x4006207e
  419e95:	jbe    0x419e96
  419e97:	inc    edi
  419e98:	add    al,0x9c
  419e9a:	pop    ebp
  419e9b:	dec    ebx
  419e9c:	loopne 0x419e4c
  419e9e:	aas    
  419e9f:	gs pop edi
  419ea1:	arpl   WORD PTR [eax-0x2a],sp
  419ea4:	push   ecx
  419ea5:	dec    esp
  419ea6:	jns    0x419ed1
  419ea8:	pop    edx
  419eaa:	add    esi,DWORD PTR [ecx-0x32]
  419ead:	dec    edi
  419eae:	mov    dh,0xe2
  419eb0:	mov    WORD PTR [edx+0x2ea929bf],?
  419eb6:	mov    dh,0xf3
  419eb8:	mov    ds:0xb79e6562,al
  419ebd:	mov    dl,0xf8
  419ebf:	cmp    al,0x33
  419ec1:	xchg   edx,eax
  419ec2:	jae    0x419f3c
  419ec4:	xchg   esp,eax
  419ec5:	popf   
  419ec6:	int3   
  419ec7:	rol    ecx,cl
  419ec9:	bound  esi,QWORD PTR [edi]
  419ecb:	xor    edx,DWORD PTR [esi-0x210fd914]
  419ed1:	mov    ds:0xa1cecf6d,eax
  419ed6:	test   eax,0x3309c912
  419edb:	add    al,0x7c
  419edd:	xchg   edi,eax
  419ede:	push   es
  419edf:	inc    esi
  419ee0:	in     eax,0x59
  419ee2:	xlat   BYTE PTR ds:[ebx]
  419ee3:	push   esp
  419ee4:	dec    esp
  419ee5:	rcr    BYTE PTR [ebx+0x2d],1
  419ee8:	xor    edi,esp
  419eea:	mov    eax,ds:0x775c1fd2
  419eef:	les    esp,FWORD PTR [eax+0x7f79c137]
  419ef5:	jbe    0x419e8c
  419ef7:	push   0x126c94ae
  419efc:	push   cs
  419efd:	inc    ecx
  419efe:	(bad)  
  419eff:	mov    ah,0xc5
  419f01:	push   ebp
  419f02:	call   0x3027:0x3549a9b9
  419f09:	nop
  419f0a:	sbb    al,0xf8
  419f0c:	dec    ebp
  419f0d:	xchg   DWORD PTR [edi-0x3efddf91],esi
  419f13:	scas   eax,DWORD PTR es:[edi]
  419f14:	pusha  
  419f15:	retf   
  419f16:	push   esi
  419f17:	cdq    
  419f18:	and    BYTE PTR [edi],0x15
  419f1b:	inc    edi
  419f1c:	test   eax,0x503f778d
  419f21:	ins    BYTE PTR es:[edi],dx
  419f22:	adc    al,0x59
  419f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f25:	jle    0x419ee5
  419f27:	mov    bh,0x59
  419f29:	fidivr DWORD PTR [edi]
  419f2b:	mov    eax,0xbe4eb38e
  419f30:	push   ds
  419f31:	xchg   edi,ecx
  419f33:	cdq    
  419f34:	in     eax,dx
  419f35:	sub    al,0xc4
  419f37:	aad    0x80
  419f39:	mov    ah,0xbf
  419f3b:	rcl    BYTE PTR [eax],cl
  419f3d:	cmp    DWORD PTR [edx+0x43873cf6],ebx
  419f43:	dec    esp
  419f44:	ret    0x42ef
  419f47:	pushf  
  419f48:	mov    ds:0x2f7ec076,al
  419f4d:	mov    ebx,0x7d9d8e02
  419f52:	in     eax,0x6d
  419f54:	sbb    al,0xdd
  419f56:	fst    QWORD PTR [edx]
  419f58:	xor    esp,DWORD PTR fs:[ebp+0x7858a492]
  419f5f:	xor    BYTE PTR [edx+0x11],ch
  419f62:	ret    
  419f63:	(bad)  
  419f64:	outs   dx,DWORD PTR ds:[esi]
  419f65:	aas    
  419f66:	add    DWORD PTR [esp+ebp*2+0xe254686],0x34
  419f6e:	jecxz  0x419f5b
  419f70:	and    al,0x76
  419f72:	in     eax,dx
  419f73:	sub    al,al
  419f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f76:	lea    edx,[esi+ebp*4-0x18]
  419f7a:	(bad)  
  419f7b:	mov    eax,DWORD PTR [edx]
  419f7d:	fidivr DWORD PTR [ecx-0x6]
  419f80:	pop    ecx
  419f81:	push   ebx
  419f82:	inc    ebx
  419f83:	scas   eax,DWORD PTR es:[edi]
  419f84:	jno    0x419f6a
  419f86:	int3   
  419f87:	test   al,0xe5
  419f89:	jb     0x419fe7
  419f8b:	(bad)  
  419f8c:	add    esp,DWORD PTR [ebx-0x79]
  419f8f:	aaa    
  419f90:	sbb    ch,dh
  419f92:	push   eax
  419f93:	je     0x419f49
  419f95:	imul   edx,DWORD PTR [eax],0xffffffde
  419f98:	js     0x419fd7
  419f9a:	cdq    
  419f9b:	ror    DWORD PTR [esi],0xe2
  419f9e:	je     0x419fad
  419fa0:	das    
  419fa1:	les    ebp,FWORD PTR [ebx+0x41]
  419fa4:	pop    ebx
  419fa5:	jg     0x419f5b
  419fa7:	loopne 0x419f6f
  419fa9:	xlat   BYTE PTR ds:[ebx]
  419faa:	add    BYTE PTR [ebx+0x4b],0xed
  419fae:	pop    ecx
  419faf:	rcl    dl,0x25
  419fb2:	pushf  
  419fb3:	xor    BYTE PTR [eax+0x47],dl
  419fb6:	xor    eax,0x724411da
  419fbb:	pop    es
  419fbc:	scas   al,BYTE PTR es:[edi]
  419fbd:	ficom  DWORD PTR [edi+esi*8+0x2bd0e4cc]
  419fc4:	xor    al,ch
  419fc6:	sbb    bl,BYTE PTR [eax]
  419fc8:	hlt    
  419fc9:	or     BYTE PTR [edx-0x7fb798c2],0xe9
  419fd0:	popf   
  419fd1:	enter  0x2d99,0x1
  419fd5:	mov    bl,dh
  419fd7:	inc    esp
  419fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fda:	pop    eax
  419fdb:	fiadd  WORD PTR [edx+0x1c8ca543]
  419fe1:	mov    ch,0x52
  419fe3:	test   al,0xde
  419fe5:	xchg   edx,eax
  419fe6:	inc    edx
  419fe7:	loop   0x419fe5
  419fe9:	sti    
  419fea:	xchg   ebp,eax
  419feb:	mov    dh,0x34
  419fed:	xor    BYTE PTR [eax+0x224c6706],ch
  419ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff4:	mov    esi,0xb9e1a902
  419ff9:	jecxz  0x41a078
  419ffb:	inc    esp
  419ffc:	aam    0x24
  419ffe:	mov    dh,0x10
  41a000:	pop    esi
  41a001:	mov    fs,WORD PTR [edx+edx*2-0x5f]
  41a005:	add    ah,dh
  41a007:	mov    WORD PTR [eax],?
  41a009:	pop    ds
  41a00a:	push   eax
  41a00b:	test   eax,0xeaddc34f
  41a010:	or     DWORD PTR [edi+0x74],edi
  41a013:	mov    ebx,0x49b7629a
  41a018:	out    0x6e,eax
  41a01a:	popf   
  41a01b:	cmp    al,BYTE PTR [ecx]
  41a01d:	push   0xffffff91
  41a01f:	fnstsw WORD PTR [edx*8+0x4c202eaf]
  41a026:	xor    dl,ah
  41a028:	sub    eax,0x382fa7f8
  41a02d:	in     eax,dx
  41a02e:	dec    edx
  41a02f:	push   ds
  41a030:	jge    0x41a035
  41a032:	(bad)  
  41a033:	mov    bl,0x50
  41a035:	inc    esi
  41a036:	aam    0xda
  41a038:	lahf   
  41a039:	outs   dx,DWORD PTR ds:[esi]
  41a03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a03b:	js     0x41a07f
  41a03d:	add    dh,BYTE PTR [esi-0x385bfcd2]
  41a043:	imul   eax,DWORD PTR [edi-0x72],0x2c
  41a047:	adc    eax,0x4112ad92
  41a04c:	repnz adc esi,DWORD PTR [edi-0x7f]
  41a050:	call   0x5c28:0xa08b7824
  41a057:	and    al,dh
  41a059:	adc    eax,0x19202e17
  41a05e:	out    dx,al
  41a05f:	sub    eax,0xfb5a31ff
  41a064:	adc    ch,BYTE PTR [ecx]
  41a066:	xlat   BYTE PTR ds:[ebx]
  41a067:	fsub   QWORD PTR [ebx]
  41a069:	xor    BYTE PTR [edx+0x6193c429],dl
  41a06f:	rcl    DWORD PTR [edi-0x2384df93],cl
  41a075:	mov    esp,0x3028363
  41a07a:	das    
  41a07b:	or     ah,dh
  41a07d:	xor    al,0x77
  41a07f:	fsubp  st(7),st
  41a081:	adc    al,0xfc
  41a083:	ret    0xb650
  41a086:	into   
  41a087:	ror    DWORD PTR [eax],cl
  41a089:	xchg   BYTE PTR [eax-0x34],bl
  41a08c:	lods   eax,DWORD PTR ds:[esi]
  41a08d:	mov    eax,ds:0x4fb39053
  41a092:	dec    esi
  41a093:	xchg   esp,eax
  41a094:	and    DWORD PTR [edi],ebx
  41a096:	push   esi
  41a097:	(bad)  
  41a098:	pop    eax
  41a099:	adc    eax,0xd5bba4d6
  41a09e:	(bad)  [ebp+0x79]
  41a0a1:	sahf   
  41a0a2:	mov    es,WORD PTR [edi+0x47c73a5f]
  41a0a8:	mov    ah,0x46
  41a0aa:	mov    al,al
  41a0ac:	pop    edi
  41a0ad:	xchg   esp,eax
  41a0ae:	rcl    ah,1
  41a0b0:	adc    bl,BYTE PTR [edx]
  41a0b2:	pop    ss
  41a0b3:	cmc    
  41a0b4:	int    0xa
  41a0b6:	clc    
  41a0b7:	ret    0x907a
  41a0ba:	jg     0x41a083
  41a0bc:	div    DWORD PTR [ecx]
  41a0be:	fdivr  st(7),st
  41a0c0:	cmp    BYTE PTR [ecx+edi*4],bh
  41a0c3:	mov    DWORD PTR [esp+edi*8-0x6d855eea],edx
  41a0ca:	call   0xc325:0x6e12b422
  41a0d1:	div    DWORD PTR [ebp-0x2e44b540]
  41a0d7:	scas   eax,DWORD PTR es:[edi]
  41a0d8:	xor    DWORD PTR [esi-0x46],edx
  41a0db:	ror    DWORD PTR [edi-0x11],1
  41a0de:	push   DWORD PTR [edi-0x2a1e0cb6]
  41a0e4:	cli    
  41a0e5:	push   es
  41a0e6:	and    BYTE PTR [edx+0x7f],ch
  41a0e9:	xchg   esp,eax
  41a0ea:	rcl    BYTE PTR [esi],1
  41a0ec:	(bad)  
  41a0ed:	imul   DWORD PTR [edx+0x5019dc23]
  41a0f3:	fidiv  WORD PTR [ebp+eiz*4+0x79b0eccf]
  41a0fa:	xchg   ebp,eax
  41a0fb:	test   al,0x93
  41a0fd:	or     BYTE PTR [ebx],al
  41a0ff:	scas   al,BYTE PTR es:[edi]
  41a100:	mov    eax,0xfa9c6f06
  41a105:	sbb    ah,BYTE PTR [ecx]
  41a107:	imul   eax,DWORD PTR [edi+esi*4],0xffffffde
  41a10b:	push   esp
  41a10c:	mul    BYTE PTR [esi+eiz*2-0x5bb24d5c]
  41a113:	ins    BYTE PTR es:[edi],dx
  41a114:	ret    0xe814
  41a117:	pop    eax
  41a118:	add    DWORD PTR [esi+0x5b],edx
  41a11b:	adc    eax,0x163c9459
  41a120:	cmp    eax,0x143e3f26
  41a125:	outs   dx,DWORD PTR ds:[esi]
  41a126:	mov    edi,0xe7da6953
  41a12b:	popf   
  41a12c:	mov    WORD PTR [ecx+0x18],ss
  41a12f:	mov    bh,0xa3
  41a131:	aaa    
  41a132:	push   ss
  41a133:	retf   0x3f2c
  41a136:	mov    ebp,0xa28db344
  41a13b:	jge    0x41a1a3
  41a13d:	and    DWORD PTR [edx],0x17e493bd
  41a143:	test   BYTE PTR [eax],bh
  41a145:	or     BYTE PTR [esi],al
  41a147:	clc    
  41a148:	idiv   bl
  41a14a:	jg     0x41a10f
  41a14c:	mov    ecx,DWORD PTR [edi-0x38c6504]
  41a152:	aaa    
  41a153:	add    eax,0x9e16cf1a
  41a158:	ficomp DWORD PTR [edi]
  41a15a:	pop    ebx
  41a15b:	sar    edx,0xf1
  41a15e:	sbb    eax,0x31b435c
  41a163:	loopne 0x41a14d
  41a165:	(bad)  
  41a166:	sub    al,0x4d
  41a168:	cmp    ecx,DWORD PTR [edi-0x28e77fff]
  41a16e:	ret    
  41a16f:	push   es
  41a170:	pop    ebp
  41a171:	sbb    BYTE PTR [esi+eiz*4+0x70],dh
  41a175:	pushf  
  41a176:	dec    eax
  41a177:	cmp    bl,BYTE PTR [eax]
  41a179:	cwde   
  41a17a:	jg     0x41a127
  41a17c:	clc    
  41a17d:	inc    ebp
  41a17e:	xlat   BYTE PTR ds:[ebx]
  41a17f:	mov    al,ds:0xf0e94f48
  41a184:	addr16 ss add al,0xbd
  41a188:	cmp    ecx,DWORD PTR [edi]
  41a18a:	pop    edx
  41a18b:	sbb    ah,dl
  41a18d:	jge    0x41a1fa
  41a18f:	pop    edx
  41a190:	cmp    BYTE PTR es:[edi-0x76],dl
  41a194:	dec    edi
  41a195:	push   es
  41a196:	iret   
  41a197:	imul   ebp,DWORD PTR [ecx],0x8521025a
  41a19d:	shl    BYTE PTR [esi],cl
  41a19f:	daa    
  41a1a0:	jne    0x41a157
  41a1a2:	loop   0x41a1bd
  41a1a4:	and    edx,edi
  41a1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a7:	add    BYTE PTR [ebx+0x56],bh
  41a1aa:	or     BYTE PTR [eax+0x39af4d33],ch
  41a1b0:	adc    eax,0xcde7b75a
  41a1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1b6:	mov    ebx,0x4b459e2c
  41a1bb:	ins    BYTE PTR es:[edi],dx
  41a1bc:	ficomp DWORD PTR [ebp-0x4d6aed14]
  41a1c2:	mov    dl,0x86
  41a1c4:	cld    
  41a1c5:	dec    esp
  41a1c6:	mov    ecx,DWORD PTR [edx]
  41a1c8:	sahf   
  41a1c9:	mov    ebx,DWORD PTR ds:0xb9523bf7
  41a1cf:	outs   dx,BYTE PTR ds:[si]
  41a1d1:	mov    eax,0xa869b8fc
  41a1d6:	or     dh,BYTE PTR [eax]
  41a1d8:	cs sbb eax,0x8b78369a
  41a1de:	mov    DWORD PTR [edx+edx*8],esi
  41a1e1:	icebp  
  41a1e2:	pop    esp
  41a1e3:	cmp    ch,BYTE PTR [edi+0x50]
  41a1e6:	xchg   esp,eax
  41a1e7:	(bad)  
  41a1e8:	xchg   edi,eax
  41a1e9:	push   ds
  41a1ea:	jmp    0xfc6f:0x1b19bf09
  41a1f1:	int3   
  41a1f2:	lea    edx,[edi]
  41a1f4:	imul   edx,edi,0xffffffa2
  41a1f7:	clc    
  41a1f8:	xchg   edi,eax
  41a1f9:	in     eax,dx
  41a1fa:	mov    bh,0xbb
  41a1fc:	push   esp
  41a1fd:	xchg   BYTE PTR [edi-0x472cfb80],dh
  41a203:	stos   DWORD PTR es:[edi],eax
  41a204:	cld    
  41a205:	mov    ch,cl
  41a207:	adc    eax,0xc3ea7e43
  41a20c:	outs   dx,DWORD PTR ds:[esi]
  41a20d:	popf   
  41a20e:	and    DWORD PTR [edx],esp
  41a210:	jmp    FWORD PTR [edx]
  41a212:	xchg   ebx,eax
  41a213:	inc    edi
  41a214:	out    dx,al
  41a215:	cmp    ch,BYTE PTR [ecx+0x42]
  41a218:	pop    ds
  41a219:	adc    cl,BYTE PTR [ebx+0x6b]
  41a21c:	push   cs
  41a21d:	mov    edx,0x0
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs cmp eax,0xc52b6e66
  41a233:	push   ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	hlt    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [ecx+0x61],bh
  41a23c:	popf   
  41a23d:	dec    edi
  41a23e:	scas   eax,DWORD PTR es:[edi]
  41a23f:	mov    ecx,0x9b91ae10
  41a244:	push   ebp
  41a245:	dec    sp
  41a247:	cmp    al,0x68
  41a249:	jmp    0x41a1e6
  41a24b:	mov    ebx,0xf42fe072
  41a250:	or     cl,ch
  41a252:	cwde   
  41a253:	(bad)  
  41a254:	cmp    ebp,DWORD PTR [edi-0x5e]
  41a257:	jo     0x41a2cb
  41a259:	neg    BYTE PTR [ebx+ebx*4+0x79a3a80a]
  41a260:	cmp    bl,bl
  41a262:	mov    cs,ecx
  41a264:	push   cs
  41a265:	or     esi,DWORD PTR [ecx-0xb]
  41a268:	mov    cl,0x2
  41a26a:	clc    
  41a26b:	bound  esp,QWORD PTR [edi]
  41a26d:	call   0x9652:0x6ebf333
  41a274:	punpcklwd mm4,DWORD PTR [eax]
  41a277:	jbe    0x41a242
  41a279:	jnp    0x41a2b6
  41a27b:	push   esp
  41a27c:	lea    esp,[edi]
  41a27e:	addr16 dec ebx
  41a280:	xchg   ebp,eax
  41a281:	and    al,0xcc
  41a283:	cmp    edx,edx
  41a285:	mov    cl,0xdc
  41a287:	mov    ebx,es
  41a289:	das    
  41a28a:	or     dh,al
  41a28c:	and    al,0xc8
  41a28e:	shrd   DWORD PTR [ebx-0x32],edi,cl
  41a292:	and    edx,edi
  41a294:	fisttp DWORD PTR [ecx-0x41]
  41a297:	lods   al,BYTE PTR ds:[esi]
  41a298:	(bad)  
  41a299:	mov    eax,ds:0x780f82ee
  41a29e:	mov    esi,0x2b26e893
  41a2a3:	jo     0x41a282
  41a2a5:	dec    ebx
  41a2a6:	lds    edx,FWORD PTR [edi+0x13]
  41a2a9:	nop
  41a2aa:	cdq    
  41a2ab:	pop    eax
  41a2ac:	out    0xf0,al
  41a2ae:	aad    0x5
  41a2b0:	das    
  41a2b1:	jl     0x41a289
  41a2b3:	add    eax,0xc3a71f22
  41a2b8:	jo     0x41a2b3
  41a2ba:	ja     0x41a328
  41a2bc:	mov    bh,0xc2
  41a2be:	ret    0x20d7
  41a2c1:	jnp    0x41a2d4
  41a2c3:	dec    ebp
  41a2c4:	loop   0x41a2ef
  41a2c6:	fs push esi
  41a2c8:	ja     0x41a2b7
  41a2ca:	rol    DWORD PTR [esi+0x2f485e97],0x5b
  41a2d1:	stos   BYTE PTR es:[edi],al
  41a2d2:	(bad)  
  41a2d3:	push   cs
  41a2d4:	fsub   DWORD PTR es:[ebx+0x5d798c3e]
  41a2db:	cmp    al,0x7b
  41a2dd:	rol    BYTE PTR cs:[ebp+0x562d13f9],0xc
  41a2e5:	in     al,dx
  41a2e6:	icebp  
  41a2e7:	call   0x5e04:0xb0c8218c
  41a2ee:	jg     0x41a2fd
  41a2f0:	mov    ebp,0x13ff29d6
  41a2f5:	repz dec edi
  41a2f7:	add    dh,cl
  41a2f9:	repnz xchg dh,dl
  41a2fc:	sbb    BYTE PTR [ebx],bl
  41a2fe:	and    al,0x9
  41a300:	ja     0x41a32e
  41a302:	push   ebp
  41a303:	pop    eax
  41a304:	lock ss leave 
  41a307:	or     esp,0xfa57c800
  41a30d:	xchg   esp,eax
  41a30e:	or     ecx,eax
  41a310:	in     al,dx
  41a311:	sti    
  41a312:	addr16 adc al,0x46
  41a315:	mov    esp,DWORD PTR [edi+ebx*1-0x3b8a934f]
  41a31c:	not    DWORD PTR [ebp+0x2ac3cb4d]
  41a322:	adc    edi,0x3a9c5cc5
  41a328:	arpl   WORD PTR ds:0xb03db76a,bp
  41a32e:	jp     0x41a3a2
  41a330:	push   cs
  41a331:	sbb    eax,0xdce5b190
  41a336:	pop    eax
  41a337:	pop    eax
  41a338:	jmp    0xbf0a3d1a
  41a33d:	shl    ch,cl
  41a33f:	sbb    eax,DWORD PTR ds:[esi+0x76852b8b]
  41a346:	adc    DWORD PTR [ebp-0x6a265bcb],0x7d
  41a34d:	xor    ah,dl
  41a34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a350:	sub    DWORD PTR [ecx-0x2f1e85e6],ecx
  41a356:	push   ebx
  41a357:	xchg   ebp,eax
  41a358:	adc    DWORD PTR gs:[edx],edx
  41a35b:	inc    edx
  41a35c:	mov    ds:0x660e77e,al
  41a361:	adc    BYTE PTR [edx-0x55],dl
  41a364:	adc    DWORD PTR [edi-0x65],ecx
  41a367:	lods   eax,DWORD PTR ds:[esi]
  41a368:	jae    0x41a38d
  41a36a:	push   cs
  41a36b:	sbb    DWORD PTR [eax+0x3b26884d],edx
  41a371:	pop    edx
  41a372:	push   esi
  41a373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a374:	fs mov esp,0xb4f7a0f2
  41a37a:	xchg   ecx,eax
  41a37b:	pop    ds
  41a37c:	lods   eax,DWORD PTR ds:[esi]
  41a37d:	lea    edx,[edx]
  41a37f:	inc    edx
  41a380:	mov    al,ds:0x437aa23b
  41a385:	std    
  41a386:	xor    eax,0x4f5e3f34
  41a38b:	loop   0x41a3f8
  41a38d:	ins    DWORD PTR es:[edi],dx
  41a38e:	or     edx,DWORD PTR [eax]
  41a390:	jo     0x41a367
  41a392:	je     0x41a3d6
  41a394:	or     DWORD PTR [edi],esp
  41a396:	pop    eax
  41a397:	test   DWORD PTR [edi-0x6fbf8ebf],0x74299f3c
  41a3a1:	push   edx
  41a3a2:	icebp  
  41a3a3:	ss jbe 0x41a33a
  41a3a6:	and    eax,0xf7817a99
  41a3ab:	(bad)  
  41a3ac:	aaa    
  41a3ad:	push   0xe7522b88
  41a3b2:	jecxz  0x41a3e7
  41a3b4:	(bad)  
  41a3b5:	stc    
  41a3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b7:	popf   
  41a3b8:	inc    esi
  41a3b9:	jmp    0x41a3ab
  41a3bb:	fild   DWORD PTR [esi-0x3a49cc0c]
  41a3c1:	aad    0xe7
  41a3c3:	add    eax,0xac5e852e
  41a3c8:	cwde   
  41a3c9:	mov    ecx,0x4684bfae
  41a3ce:	mov    al,0xf7
  41a3d0:	push   ecx
  41a3d1:	test   BYTE PTR [eax+edx*2],cl
  41a3d4:	in     al,dx
  41a3d5:	mov    bh,0x76
  41a3d7:	xchg   DWORD PTR [edx-0x7642dbd2],esp
  41a3dd:	hlt    
  41a3de:	pop    ebx
  41a3df:	push   eax
  41a3e0:	test   al,0x3a
  41a3e2:	pop    ds
  41a3e3:	xor    BYTE PTR [ebx],bl
  41a3e5:	push   ecx
  41a3e6:	test   eax,0x700e3e21
  41a3eb:	mov    esp,0x4632f0c1
  41a3f0:	cmc    
  41a3f1:	sti    
  41a3f2:	inc    ebp
  41a3f3:	sub    al,0x1a
  41a3f5:	mov    eax,cs
  41a3f7:	loopne 0x41a3ff
  41a3f9:	loopne 0x41a3af
  41a3fb:	scas   al,BYTE PTR es:[edi]
  41a3fc:	(bad)  
  41a3fd:	pop    esp
  41a3fe:	mov    BYTE PTR [edx+0xbae3c14],ah
  41a404:	sbb    eax,0x20936c1
  41a409:	jne    0x41a3ce
  41a40b:	(bad)  
  41a40d:	push   edi
  41a40e:	call   DWORD PTR [edx+edi*8+0x27]
  41a413:	xor    edx,edx
  41a415:	or     dl,BYTE PTR [esi+0xa58c24c]
  41a41b:	or     cl,al
  41a41d:	mov    es,WORD PTR [eax-0x35712a77]
  41a423:	xchg   edi,eax
  41a424:	shl    DWORD PTR ds:0x462c5e67,cl
  41a42a:	adc    al,BYTE PTR [edi]
  41a42c:	jns    0x41a3c1
  41a42e:	pop    ecx
  41a42f:	mov    al,0xed
  41a431:	call   0x590941de
  41a436:	mov    al,0xba
  41a438:	sub    DWORD PTR [ecx+0x4c3f9944],edx
  41a43e:	dec    esp
  41a43f:	cmp    al,0x28
  41a441:	sub    eax,0x1d156b09
  41a446:	(bad)
  41a44a:	inc    eax
  41a44b:	(bad)
  41a44e:	mov    ebp,0xb9bdbde9
  41a453:	push   ebx
  41a454:	lds    esi,FWORD PTR [eax]
  41a456:	xor    al,0x87
  41a458:	daa    
  41a459:	in     eax,0xc4
  41a45b:	add    dh,BYTE PTR [ecx+0x11d2a286]
  41a461:	inc    esi
  41a462:	xchg   edx,eax
  41a463:	aad    0x7b
  41a465:	or     cl,ch
  41a467:	test   al,0x17
  41a469:	hlt    
  41a46a:	add    ebx,esp
  41a46c:	in     al,dx
  41a46d:	xchg   esp,eax
  41a46e:	jmp    0x820536
  41a473:	cdq    
  41a474:	xor    esi,DWORD PTR [ebx+eiz*1]
  41a477:	(bad)  
  41a478:	sbb    bh,BYTE PTR [edi-0xe931d8e]
  41a47e:	pop    ss
  41a47f:	mov    al,BYTE PTR [ebx]
  41a481:	lods   eax,DWORD PTR ds:[esi]
  41a482:	and    al,0xed
  41a484:	mov    esi,0xb77d6818
  41a489:	jns    0x41a45f
  41a48b:	pop    esp
  41a48c:	mov    ch,0x6f
  41a48e:	jecxz  0x41a45a
  41a490:	imul   ebx,DWORD PTR [edi],0xffffffc1
  41a493:	(bad)  [edi-0x62]
  41a496:	ret    0x9686
  41a499:	or     edi,DWORD PTR [ecx]
  41a49b:	xor    eax,0xc8d0d951
  41a4a0:	xchg   BYTE PTR [ebx],ah
  41a4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a3:	add    eax,DWORD PTR [eax]
  41a4a5:	sbb    DWORD PTR [eax-0x8],ebp
  41a4a8:	push   ebp
  41a4a9:	icebp  
  41a4aa:	mov    edx,0xe965dc3a
  41a4af:	jle    0x41a45d
  41a4b1:	pop    es
  41a4b2:	imul   ecx,DWORD PTR [ebp+0x6a6827b3],0x26b83456
  41a4bc:	rol    DWORD PTR [esi-0x310f6688],1
  41a4c2:	jl     0x41a473
  41a4c4:	(bad)  
  41a4c5:	adc    DWORD PTR [ebx+eax*8],ecx
  41a4c8:	and    al,0xa6
  41a4ca:	lock dec ecx
  41a4cc:	jno    0x41a4e0
  41a4ce:	cld    
  41a4cf:	repz scas eax,DWORD PTR es:[edi]
  41a4d1:	retf   
  41a4d2:	xchg   DWORD PTR [ebx-0x74],edx
  41a4d5:	inc    esi
  41a4d6:	lahf   
  41a4d7:	push   ds
  41a4d8:	rcl    edx,0x12
  41a4db:	dec    edi
  41a4dc:	mov    edx,0x58ad62
  41a4e1:	mov    dl,0x56
  41a4e3:	or     al,0x8b
  41a4e5:	xor    al,0x8d
  41a4e7:	cli    
  41a4e8:	ds sbb eax,0x6c1b8d56
  41a4ee:	add    BYTE PTR [ecx],bl
  41a4f0:	dec    eax
  41a4f1:	mov    ecx,0x743a06db
  41a4f6:	retf   
  41a4f7:	and    ah,0x65
  41a4fa:	mov    esp,0xdfd4d473
  41a4ff:	add    DWORD PTR [edx+0x76795faa],0xfdf9e9e4
  41a509:	dec    esi
  41a50a:	lock add al,0xfb
  41a50d:	mov    edi,0x693f9411
  41a512:	dec    esi
  41a513:	popf   
  41a514:	rcr    BYTE PTR [esi+0x387aa144],cl
  41a51a:	repnz add DWORD PTR [ecx],edx
  41a51d:	mov    esp,0x551af044
  41a522:	jge    0x41a51e
  41a524:	mov    ecx,edi
  41a526:	addr16 pop eax
  41a528:	add    ebx,DWORD PTR [edi]
  41a52a:	add    DWORD PTR [esi+0x21],0xffffffb3
  41a52e:	jno    0x41a530
  41a530:	jp     0x41a4d5
  41a532:	cmp    al,0xc5
  41a534:	sub    eax,0x5b0da786
  41a539:	jnp    0x41a4c6
  41a53b:	inc    edx
  41a53c:	pop    eax
  41a53d:	mov    BYTE PTR [ebp-0x97fd436],dl
  41a543:	adc    al,0x9a
  41a545:	aas    
  41a546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a547:	arpl   WORD PTR [ecx-0x23],di
  41a54a:	inc    edi
  41a54b:	(bad)  
  41a54c:	scas   eax,DWORD PTR es:[edi]
  41a54d:	pop    edi
  41a54e:	lods   al,BYTE PTR ds:[esi]
  41a54f:	fisttp WORD PTR [esi+0xab27bb5]
  41a555:	add    eax,0xa2f86b5f
  41a55a:	sahf   
  41a55b:	mov    ch,dl
  41a55d:	jno    0x41a548
  41a55f:	xchg   edi,eax
  41a560:	outs   dx,DWORD PTR ds:[esi]
  41a561:	add    DWORD PTR [ecx+edi*4],esp
  41a564:	repz add al,0x6f
  41a567:	dec    ecx
  41a568:	xor    DWORD PTR gs:[ebx+edx*4+0x43],edi
  41a56d:	jmp    0x41a513
  41a56f:	push   es
  41a570:	sub    dh,al
  41a572:	cmp    DWORD PTR [edi],ecx
  41a574:	lock mov ds:0x20ac9725,eax
  41a57a:	push   ss
  41a57b:	test   BYTE PTR [ebp-0x21],al
  41a57e:	jmp    0x41a5b4
  41a580:	mov    dh,BYTE PTR [eax+ecx*4-0x30ee9f0d]
  41a587:	xor    ah,BYTE PTR [ecx]
  41a589:	push   ss
  41a58a:	add    al,0x27
  41a58c:	pop    ebp
  41a58d:	test   DWORD PTR [edi-0xd],0xda4e045a
  41a594:	xchg   ebx,eax
  41a595:	sbb    DWORD PTR [eax-0x1246bbde],esp
  41a59b:	into   
  41a59c:	test   DWORD PTR [ecx-0x70],ebp
  41a59f:	lds    ecx,FWORD PTR [edi]
  41a5a1:	push   ebp
  41a5a2:	xchg   ecx,eax
  41a5a3:	pop    ebx
  41a5a4:	mov    edi,0xdb1061a4
  41a5a9:	arpl   WORD PTR [edx],bx
  41a5ab:	in     eax,dx
  41a5ac:	stc    
  41a5ad:	mov    ebp,0x11d07751
  41a5b2:	(bad)  
  41a5b3:	jae    0x41a61a
  41a5b5:	sub    edi,edx
  41a5b7:	and    bh,al
  41a5b9:	mov    ebp,?
  41a5bb:	adc    bl,ah
  41a5bd:	sub    DWORD PTR [esi+0x52],0xffffff9d
  41a5c1:	mov    eax,ds:0x259dcc09
  41a5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5c7:	jae    0x41a580
  41a5c9:	mov    bl,0xd1
  41a5cb:	mov    ds:0xdaf10a4c,eax
  41a5d0:	div    BYTE PTR [ebp-0x9a05eae]
  41a5d6:	icebp  
  41a5d7:	sub    DWORD PTR [ebx+0x17353f63],ecx
  41a5dd:	mov    bh,0x2a
  41a5df:	cli    
  41a5e0:	sbb    eax,DWORD PTR [esi+0x510ee02a]
  41a5e6:	pushf  
  41a5e7:	mov    al,BYTE PTR [esi*4-0x76537371]
  41a5ee:	adc    al,0xb
  41a5f0:	icebp  
  41a5f1:	lds    ebx,FWORD PTR [ebx+0x5a]
  41a5f4:	push   esp
  41a5f5:	call   0x927beb28
  41a5fa:	or     edx,ebp
  41a5fc:	jle    0x41a67a
  41a5fe:	das    
  41a5ff:	push   edi
  41a600:	cmp    esp,DWORD PTR [esi-0x51]
  41a603:	jno    0x41a5c6
  41a605:	xchg   dh,ch
  41a607:	mov    cl,BYTE PTR [ecx-0x2b]
  41a60a:	adc    al,0xa9
  41a60c:	fdivr  QWORD PTR [ecx-0x7f4e48f5]
  41a612:	push   es
  41a613:	(bad)  
  41a614:	int3   
  41a615:	ja     0x41a5d3
  41a617:	rol    DWORD PTR [eax-0x288eddf1],cl
  41a61d:	mov    DWORD PTR [esi-0x44457955],esi
  41a623:	jp     0x41a631
  41a625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a626:	aam    0x5e
  41a628:	inc    ebp
  41a629:	retf   0xc35a
  41a62c:	sbb    BYTE PTR [esp+ecx*1],cl
  41a62f:	sub    al,0x5d
  41a631:	mov    BYTE PTR [esi+edi*2+0x6a6fc299],0x74
  41a639:	dec    ecx
  41a63a:	clts   
  41a63c:	pop    ebx
  41a63d:	gs jno 0x41a693
  41a640:	xchg   edx,eax
  41a641:	push   cs
  41a642:	je     0x41a623
  41a644:	iret   
  41a645:	xchg   ebp,eax
  41a646:	(bad)
  41a649:	nop
  41a64a:	aad    0x4c
  41a64c:	mov    ecx,0xf3333001
  41a651:	adc    eax,DWORD PTR [edi-0x24]
  41a654:	sub    esi,DWORD PTR [edi+ebx*4-0x1d9ad4bd]
  41a65b:	in     al,0x9d
  41a65d:	retf   
  41a65e:	sub    esp,DWORD PTR [ecx-0x2f]
  41a661:	popf   
  41a662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a663:	(bad)  
  41a664:	aad    0x4
  41a666:	and    DWORD PTR [ecx-0x48],0xffffff90
  41a66a:	inc    ecx
  41a66b:	aad    0x31
  41a66d:	scas   eax,DWORD PTR es:[edi]
  41a66e:	jmp    0x81b1:0xd5221c4b
  41a675:	ins    BYTE PTR es:[edi],dx
  41a676:	imul   eax,DWORD PTR [esi-0x7694926b],0xffffffc0
  41a67d:	fs push ds
  41a67f:	xor    DWORD PTR [edx+0x757cf946],ebp
  41a685:	add    eax,0x7bc8f9c8
  41a68a:	push   0x49
  41a68c:	cmp    BYTE PTR [esi-0x7d5b9576],ch
  41a692:	sbb    eax,0xeb06af7a
  41a697:	call   0x4d30:0x24200353
  41a69e:	dec    ebp
  41a69f:	fstp   QWORD PTR [edx+0x57]
  41a6a2:	and    bl,dh
  41a6a4:	frndint 
  41a6a6:	mov    ?,WORD PTR [edi+ecx*4+0x11]
  41a6aa:	test   eax,0x924f4859
  41a6af:	cmp    dh,dl
  41a6b1:	loopne 0x41a693
  41a6b3:	adc    BYTE PTR [esi],cl
  41a6b5:	inc    eax
  41a6b6:	(bad)  
  41a6b7:	fwait
  41a6b8:	data16 daa 
  41a6ba:	mov    ecx,0x4838a922
  41a6bf:	mov    ebp,0xa2c13f51
  41a6c4:	jo     0x41a6cc
  41a6c6:	adc    bl,dl
  41a6c8:	sub    eax,0xf2993bcc
  41a6cd:	cmp    al,0xb4
  41a6cf:	mov    bh,BYTE PTR [ebx+0x6d]
  41a6d2:	sti    
  41a6d3:	push   ebx
  41a6d4:	arpl   WORD PTR [edx+0x2c9c68f9],ax
  41a6da:	mov    ds:0x9c2eb498,al
  41a6df:	inc    esi
  41a6e0:	lock xor BYTE PTR [ebp+0x266d1632],al
  41a6e7:	xor    edi,ebp
  41a6e9:	aaa    
  41a6ea:	daa    
  41a6eb:	xchg   esp,eax
  41a6ec:	add    bl,BYTE PTR [ecx]
  41a6ee:	sbb    eax,0x19adbff1
  41a6f3:	out    dx,eax
  41a6f4:	mov    WORD PTR [ebx+0x6b],ss
  41a6f7:	imul   ebx,DWORD PTR [edx-0x23],0x1505cd00
  41a6fe:	or     eax,0x9441ed0c
  41a703:	cmp    DWORD PTR [edi],0xfa26804b
  41a709:	inc    edx
  41a70a:	cs (bad) 
  41a70c:	(bad)  
  41a70d:	adc    BYTE PTR [ebx],ah
  41a70f:	cwde   
  41a710:	cmp    edx,esi
  41a712:	mov    ebx,0xbef253b0
  41a717:	shr    BYTE PTR [eax],0x88
  41a71a:	sub    DWORD PTR [eax],0xebd41131
  41a720:	es leave 
  41a722:	xchg   esi,eax
  41a723:	mov    WORD PTR [ebp-0x2fe2d8be],ds
  41a729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72a:	(bad)  
  41a72b:	hlt    
  41a72c:	jle    0x41a6b2
  41a72e:	add    BYTE PTR [eax],al
  41a730:	add    BYTE PTR [eax],al
  41a732:	dec    esi
  41a733:	outs   dx,DWORD PTR ds:[esi]
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	sub    eax,0xb9c695bd
  41a743:	and    eax,DWORD PTR [ecx]
  41a745:	add    ah,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [edi+0x3fb3cf1c],ah
  41a74f:	stos   BYTE PTR es:[edi],al
  41a750:	and    BYTE PTR [ebx-0x3d8f99a8],0xa9
  41a757:	xchg   edx,eax
  41a758:	push   esp
  41a759:	dec    esi
  41a75a:	push   esp
  41a75b:	xchg   ebp,eax
  41a75c:	imul   dl
  41a75e:	icebp  
  41a75f:	fld    TBYTE PTR [eax+0x5d]
  41a762:	adc    DWORD PTR [edx],ebx
  41a764:	adc    al,0xf7
  41a766:	pop    ss
  41a767:	push   edx
  41a768:	jne    0x41a7c0
  41a76a:	es ins BYTE PTR es:[edi],dx
  41a76c:	retf   0xa933
  41a76f:	into   
  41a770:	call   0x1bd1:0x431035c7
  41a777:	adc    al,0xbe
  41a779:	jle    0x41a7dc
  41a77b:	mov    edx,0x200e92a4
  41a780:	add    al,0xd1
  41a782:	ja     0x41a7b8
  41a784:	popa   
  41a785:	push   eax
  41a786:	js     0x41a7bd
  41a788:	cmp    BYTE PTR [ebp+0x6aa8f842],ch
  41a78e:	(bad)  
  41a78f:	mov    ecx,0xafb6264d
  41a794:	retf   0xe39d
  41a797:	push   cs
  41a798:	mov    ds:0xc70362d,al
  41a79d:	mov    dh,0x13
  41a79f:	mov    ch,0xac
  41a7a1:	inc    edi
  41a7a2:	or     al,BYTE PTR [edx]
  41a7a4:	and    ch,BYTE PTR ss:[esi-0x5ffbead3]
  41a7ab:	mov    bl,BYTE PTR [ebx+0x7af00762]
  41a7b1:	dec    ecx
  41a7b2:	jmp    0x41a78e
  41a7b4:	xchg   ecx,eax
  41a7b5:	mov    esi,0x849ce199
  41a7ba:	sar    BYTE PTR [esi+eiz*2],0x29
  41a7be:	nop
  41a7bf:	ds popf 
  41a7c1:	adc    DWORD PTR [esi-0x5d],edi
  41a7c4:	cmp    al,0x6e
  41a7c6:	loopne 0x41a7c3
  41a7c8:	aas    
  41a7c9:	sub    ebp,DWORD PTR [edx]
  41a7cb:	push   eax
  41a7cc:	shr    ch,cl
  41a7ce:	dec    edx
  41a7cf:	mov    ds:0x14936048,al
  41a7d4:	xchg   ecx,esi
  41a7d6:	jmp    0x6a36:0xd3107b36
  41a7dd:	addr16 int 0xa1
  41a7e0:	cdq    
  41a7e1:	jae    0x41a7ff
  41a7e3:	loope  0x41a771
  41a7e5:	ins    DWORD PTR es:[edi],dx
  41a7e6:	data16 mov al,0xa5
  41a7e9:	js     0x41a82f
  41a7eb:	stc    
  41a7ec:	and    al,0xfb
  41a7ee:	pop    edi
  41a7f0:	ins    DWORD PTR es:[edi],dx
  41a7f1:	mov    edx,0xc8fbe169
  41a7f6:	adc    al,0xf2
  41a7f8:	gs dec edx
  41a7fa:	leave  
  41a7fb:	cmp    ax,0xbb98
  41a7ff:	pop    eax
  41a800:	or     DWORD PTR [esi+ebp*8],ebx
  41a803:	xor    al,0xf4
  41a805:	hlt    
  41a806:	dec    ecx
  41a807:	pop    ebx
  41a808:	jne    0x41a7a4
  41a80a:	pop    ebx
  41a80b:	stos   BYTE PTR es:[edi],al
  41a80c:	enter  0xb5d8,0x8f
  41a810:	xor    al,0xa
  41a812:	mov    esi,0x6c149169
  41a817:	or     cl,cl
  41a819:	loopne 0x41a7ac
  41a81b:	and    al,0xb7
  41a81d:	stos   BYTE PTR es:[edi],al
  41a81e:	jno    0x41a833
  41a820:	jp     0x41a7d7
  41a822:	out    0x99,eax
  41a824:	imul   BYTE PTR [ecx+0x6d48fe78]
  41a82a:	push   esi
  41a82b:	mov    bl,0xb6
  41a82d:	cli    
  41a82e:	jb     0x41a8a5
  41a830:	enter  0xb12c,0xe6
  41a834:	and    BYTE PTR [ecx-0x30],0xaa
  41a838:	mov    bh,0x91
  41a83a:	mov    ebp,0x9980802b
  41a83f:	jmp    0x5ab2b2f2
  41a844:	jg     0x41a86d
  41a846:	pop    esi
  41a847:	sbb    al,0xdd
  41a849:	dec    esp
  41a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84b:	cdq    
  41a84c:	xchg   ebp,eax
  41a84d:	pop    esi
  41a84e:	out    dx,al
  41a84f:	ds dec ebp
  41a851:	in     al,0xf1
  41a853:	in     al,dx
  41a854:	rcl    DWORD PTR [ebx+edi*2],1
  41a857:	inc    eax
  41a858:	idiv   DWORD PTR [edi-0x62059921]
  41a85e:	enter  0xd9cf,0x5c
  41a862:	ficom  WORD PTR ds:0xd1f68ad9
  41a868:	cmc    
  41a869:	lods   al,BYTE PTR ds:[esi]
  41a86a:	rol    DWORD PTR [esi],cl
  41a86c:	hlt    
  41a86d:	std    
  41a86e:	jb     0x41a875
  41a870:	(bad)  
  41a871:	(bad)  
  41a873:	ins    BYTE PTR es:[edi],dx
  41a874:	ins    BYTE PTR es:[edi],dx
  41a875:	fadd   DWORD PTR [ebx]
  41a877:	jg     0x41a8b5
  41a879:	inc    edi
  41a87a:	aas    
  41a87b:	loopne 0x41a8eb
  41a87d:	adc    eax,edi
  41a87f:	mov    ?,ebx
  41a881:	adc    esp,DWORD PTR [eax+0x3398822a]
  41a887:	jmp    0xdb95:0x10a5dba7
  41a88e:	pop    eax
  41a88f:	add    eax,ebx
  41a891:	popa   
  41a892:	ds dec ebp
  41a894:	data16 sti 
  41a896:	xor    BYTE PTR [edx],al
  41a898:	sub    eax,0x6dc47cef
  41a89d:	icebp  
  41a89e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a89f:	pushf  
  41a8a0:	iret   
  41a8a1:	mov    BYTE PTR ds:0x682be387,ah
  41a8a7:	fbld   TBYTE PTR [esi]
  41a8a9:	dec    eax
  41a8aa:	out    dx,eax
  41a8ab:	imul   eax,DWORD PTR [ebx-0x6f57268b],0x2d
  41a8b2:	mov    esi,0x9eb49aac
  41a8b7:	cpuid  
  41a8b9:	adc    eax,0xf909fe86
  41a8be:	xchg   BYTE PTR [esi-0x7007912e],bl
  41a8c4:	push   ecx
  41a8c5:	stos   DWORD PTR es:[edi],eax
  41a8c6:	push   edi
  41a8c7:	mov    ss,WORD PTR [ecx]
  41a8c9:	sub    al,0x38
  41a8cb:	repnz push eax
  41a8cd:	sahf   
  41a8ce:	jmp    0x41a896
  41a8d0:	xor    al,BYTE PTR [ebp+0x743763a]
  41a8d6:	rcl    DWORD PTR [ebp-0x6f],cl
  41a8d9:	ss add al,0x72
  41a8dc:	(bad)  
  41a8dd:	xchg   edi,eax
  41a8de:	mov    ebx,0x2af5188a
  41a8e3:	dec    edx
  41a8e4:	push   eax
  41a8e5:	add    eax,0xa08ca318
  41a8ea:	mov    edi,0xaa46eb8f
  41a8ef:	in     eax,0x1c
  41a8f1:	xor    dl,BYTE PTR [esi+0x66]
  41a8f4:	mov    ebx,0x465b4e39
  41a8f9:	in     al,0x61
  41a8fb:	mov    ebx,0x5978f5db
  41a900:	ret    
  41a901:	adc    al,0x7d
  41a903:	jecxz  0x41a963
  41a905:	mov    ebx,0xbc167a67
  41a90a:	fdiv   QWORD PTR [eax-0x4b]
  41a90d:	dec    esi
  41a90e:	or     bh,bh
  41a910:	push   eax
  41a911:	push   0xffffffd3
  41a913:	pop    es
  41a914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a915:	mov    ds:0x65fa2c6,al
  41a91a:	or     dh,BYTE PTR [esi-0x3a]
  41a91d:	test   BYTE PTR [edx-0x7b],bl
  41a920:	(bad)  
  41a921:	scas   eax,DWORD PTR es:[edi]
  41a922:	mov    al,0xac
  41a924:	xor    ch,BYTE PTR [ebp-0x4c5188e7]
  41a92a:	jmp    0x41a8e5
  41a92c:	stc    
  41a92d:	sub    DWORD PTR [ecx],0x5c
  41a930:	(bad)  
  41a931:	jnp    0x41a9b0
  41a933:	push   0x50880bc9
  41a938:	ret    0xb287
  41a93b:	or     ebx,DWORD PTR [edx+0x3f]
  41a93e:	add    BYTE PTR [ebp-0x7ad0aec9],ch
  41a944:	iret   
  41a945:	out    0xc2,eax
  41a947:	mov    al,0x84
  41a949:	cmp    dl,BYTE PTR [ebp+0x5b5882f8]
  41a94f:	xor    BYTE PTR [edx+0x14],al
  41a952:	jb     0x41a966
  41a954:	xor    eax,0x4ec08fa8
  41a959:	mov    eax,ds:0x5ed08081
  41a95e:	inc    esi
  41a95f:	jo     0x41a953
  41a961:	mov    eax,0x6d457d36
  41a966:	js     0x41a9b8
  41a968:	push   esp
  41a969:	push   ecx
  41a96a:	pusha  
  41a96b:	jnp    0x41a9c0
  41a96d:	test   BYTE PTR [eax],dl
  41a96f:	outs   dx,DWORD PTR ds:[esi]
  41a970:	outs   dx,BYTE PTR ds:[esi]
  41a971:	and    al,0x9a
  41a973:	jae    0x41a91e
  41a975:	cmp    DWORD PTR [ecx],esp
  41a977:	push   cs
  41a978:	and    eax,0x847aafe8
  41a97d:	imul   esi,edx,0xb63e79d0
  41a983:	or     ch,BYTE PTR [esp+ebp*4-0x15067279]
  41a98a:	dec    ebx
  41a98b:	xor    ah,bl
  41a98d:	sbb    bh,BYTE PTR [edi]
  41a98f:	call   0x50eb:0x284d53e8
  41a996:	mov    bl,0xc7
  41a998:	(bad)  
  41a999:	mov    ebx,0x822c9a12
  41a99e:	icebp  
  41a99f:	je     0x41a930
  41a9a1:	push   cs
  41a9a2:	ds push es
  41a9a4:	stc    
  41a9a5:	arpl   WORD PTR [edi-0x40],si
  41a9a8:	std    
  41a9a9:	int3   
  41a9aa:	aad    0xaa
  41a9ac:	fwait
  41a9ad:	jmp    DWORD PTR [esi-0x452a12bf]
  41a9b3:	imul   ecx,DWORD PTR [ebx+ebp*4+0x777b0b10],0x74
  41a9bb:	mov    ?,WORD PTR [ebp*1+0x219e1d4d]
  41a9c2:	sbb    edi,DWORD PTR [eax+ebp*4+0x3e94df79]
  41a9c9:	mov    ds:0x4c014dd7,eax
  41a9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9cf:	mov    esi,0x93960a43
  41a9d4:	jl     0x41a9c0
  41a9d6:	and    WORD PTR [edx-0x6f782512],cx
  41a9dd:	ret    0x2af0
  41a9e0:	or     DWORD PTR [eax+0x7dc6ef56],eax
  41a9e6:	(bad)  
  41a9e8:	add    eax,0xa8b8af9e
  41a9ed:	mov    dh,0xaf
  41a9ef:	shr    al,cl
  41a9f1:	je     0x41a9d4
  41a9f3:	xor    al,0x19
  41a9f5:	(bad)  
  41a9f6:	or     al,0x2b
  41a9f8:	mov    ds:0xede8756f,eax
  41a9fd:	cmc    
  41a9fe:	fldenv [esi]
  41aa00:	scas   al,BYTE PTR es:[edi]
  41aa01:	ds nop
  41aa03:	or     esp,ebp
  41aa05:	cmp    al,0xe3
  41aa07:	sbb    BYTE PTR [edi-0x4d4ebd19],al
  41aa0d:	test   esi,ebp
  41aa0f:	xchg   esi,eax
  41aa10:	xor    ch,cl
  41aa12:	es jne 0x41aa4c
  41aa15:	inc    esi
  41aa16:	pop    ebx
  41aa17:	out    dx,eax
  41aa18:	add    BYTE PTR [ecx+ecx*8],0x5f
  41aa1c:	jne    0x41aa3e
  41aa1e:	call   0x2ae5:0x7ecdab42
  41aa25:	inc    edx
  41aa26:	xor    bh,BYTE PTR [ebx+0x372ee7ed]
  41aa2c:	adc    ebx,DWORD PTR [eax-0x1d6c557f]
  41aa32:	mov    cl,0x3d
  41aa34:	sahf   
  41aa35:	fsub   DWORD PTR [ebp-0x1f]
  41aa38:	ins    BYTE PTR es:[edi],dx
  41aa39:	jmp    0xa45:0x4050fd47
  41aa40:	inc    ebx
  41aa41:	and    al,0xb3
  41aa43:	je     0x41a9ec
  41aa45:	sti    
  41aa46:	jle    0x41aa82
  41aa48:	ss push 0x71
  41aa4b:	push   cs
  41aa4c:	push   ebp
  41aa4d:	mov    bl,0xdc
  41aa4f:	jp     0x41a9e0
  41aa51:	sbb    ch,BYTE PTR [edi-0x62318189]
  41aa57:	loop   0x41aa5f
  41aa59:	mov    edx,0x8409dff7
  41aa5e:	sub    edi,eax
  41aa60:	push   es
  41aa61:	xor    BYTE PTR [eax-0x1a08b169],bl
  41aa67:	sbb    edi,DWORD PTR [ebx]
  41aa69:	in     eax,0x39
  41aa6b:	ss inc eax
  41aa6d:	mov    ch,0xac
  41aa6f:	jge    0x41aaa5
  41aa71:	mov    DWORD PTR [ebx],esp
  41aa73:	pusha  
  41aa74:	packssdw mm2,mm1
  41aa77:	xor    al,0xb6
  41aa79:	popf   
  41aa7a:	jmp    0xf081:0x5edaf573
  41aa81:	dec    edi
  41aa82:	out    dx,eax
  41aa83:	lods   eax,DWORD PTR ds:[esi]
  41aa84:	(bad)  
  41aa85:	fimul  DWORD PTR [ebx+0x1e]
  41aa88:	dec    ebx
  41aa89:	pop    ebp
  41aa8a:	call   0x23496640
  41aa8f:	jne    0x41aaed
  41aa91:	(bad)  
  41aa92:	mov    eax,ds:0x5a83ad17
  41aa97:	push   cs
  41aa98:	dec    esi
  41aa99:	xlat   BYTE PTR ds:[ebx]
  41aa9a:	jmp    0x41aa6e
  41aa9c:	pop    ecx
  41aa9d:	adc    eax,0x4616c6df
  41aaa2:	mov    bh,0xaf
  41aaa4:	rol    dl,1
  41aaa6:	adc    al,0xd9
  41aaa8:	sbb    eax,0xa88e8879
  41aaad:	inc    esi
  41aaae:	sub    ebp,DWORD PTR [edx+0x2603877f]
  41aab4:	mov    ebp,0x7344771b
  41aab9:	(bad)  
  41aaba:	adc    BYTE PTR [edi-0xf23c207],al
  41aac0:	or     ah,BYTE PTR [ebx]
  41aac2:	mov    edi,0xb4b54bd4
  41aac7:	loopne 0x41aa70
  41aac9:	icebp  
  41aaca:	pop    es
  41aacb:	dec    ebx
  41aacc:	push   ebp
  41aacd:	and    bh,BYTE PTR [ebp+0x2bdd5747]
  41aad3:	das    
  41aad4:	jp     0x41aaa4
  41aad6:	mov    ah,0x8e
  41aad8:	push   ecx
  41aad9:	into   
  41aada:	cmp    DWORD PTR [eax+0x5a6ef5ef],ebp
  41aae0:	xchg   edx,eax
  41aae1:	xchg   ecx,eax
  41aae2:	enter  0x13ee,0x70
  41aae6:	lods   al,BYTE PTR ds:[esi]
  41aae7:	imul   edx,DWORD PTR [bp+0x67],0xe7895aed
  41aaef:	mov    bh,0x66
  41aaf1:	xor    eax,0x916eb558
  41aaf6:	push   0xffffffa2
  41aaf8:	test   BYTE PTR [eax+esi*1+0x68078558],ah
  41aaff:	mov    edi,0x67e071d2
  41ab04:	sbb    al,0x1e
  41ab06:	pusha  
  41ab07:	retf   
  41ab08:	aaa    
  41ab09:	loop   0x41ab2a
  41ab0b:	gs and al,dh
  41ab0e:	mov    dh,0x6
  41ab10:	sub    bh,BYTE PTR [ebx]
  41ab12:	cld    
  41ab13:	xchg   BYTE PTR [edi+0x48],dl
  41ab16:	fwait
  41ab17:	dec    esi
  41ab18:	inc    esi
  41ab19:	jne    0x41aa9d
  41ab1b:	and    DWORD PTR [ecx+0x697e1fd4],0xd9fbed14
  41ab25:	cmp    ch,al
  41ab27:	lods   al,BYTE PTR ds:[esi]
  41ab28:	mov    edx,?
  41ab2a:	adc    DWORD PTR [esi+0x73d45ac7],0x66871976
  41ab34:	mul    DWORD PTR [esi-0x63668fc9]
  41ab3a:	mov    ds:0x88a7474a,eax
  41ab3f:	pop    edi
  41ab40:	sub    BYTE PTR [ecx+0x2],ch
  41ab43:	pop    esp
  41ab44:	pop    es
  41ab45:	retf   0x712d
  41ab48:	or     ah,BYTE PTR [eax+0x20c654dc]
  41ab4e:	jne    0x41aad3
  41ab50:	mov    dl,0x75
  41ab52:	outs   dx,BYTE PTR ds:[esi]
  41ab53:	ror    BYTE PTR [ecx],cl
  41ab55:	inc    eax
  41ab56:	cmp    DWORD PTR [esi-0x20],0x70
  41ab5a:	loopne 0x41ab84
  41ab5c:	aam    0x2b
  41ab5e:	(bad)  
  41ab5f:	cmp    BYTE PTR [ecx+0x5da7a8c5],ch
  41ab65:	int    0x55
  41ab67:	mov    edi,0x9086484d
  41ab6c:	stc    
  41ab6d:	jo     0x41abcf
  41ab6f:	inc    ebx
  41ab70:	stos   DWORD PTR es:[edi],eax
  41ab71:	jp     0x41abdd
  41ab73:	int    0x5f
  41ab75:	out    0x58,eax
  41ab77:	not    BYTE PTR [eax+0x43]
  41ab7a:	push   esp
  41ab7b:	adc    eax,0x1ef3d1be
  41ab80:	leave  
  41ab81:	into   
  41ab82:	std    
  41ab83:	sbb    al,0x83
  41ab85:	cmc    
  41ab86:	rcr    DWORD PTR [esi],0xe2
  41ab89:	call   0x396dfff
  41ab8e:	and    DWORD PTR [esi],eax
  41ab90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab91:	inc    eax
  41ab92:	mov    BYTE PTR [eax+0x70a945c3],cl
  41ab98:	sub    cl,bh
  41ab9a:	imul   BYTE PTR [esi-0x42e3ebe4]
  41aba0:	and    edx,DWORD PTR [edx+0x62]
  41aba3:	shl    DWORD PTR [edx],0x54
  41aba6:	out    0x9e,eax
  41aba8:	mov    dh,0xce
  41abaa:	cmp    bl,bh
  41abac:	inc    eax
  41abad:	pop    esp
  41abae:	cdq    
  41abaf:	mov    ah,0x5e
  41abb1:	dec    edi
  41abb2:	xchg   edi,eax
  41abb3:	jle    0x41ab6f
  41abb5:	mov    bh,0x45
  41abb7:	jmp    0x9acf5331
  41abbc:	push   ds
  41abbd:	aaa    
  41abbe:	popa   
  41abbf:	stc    
  41abc0:	or     al,0x2b
  41abc2:	push   ss
  41abc3:	pop    eax
  41abc4:	dec    edi
  41abc5:	add    BYTE PTR [esi+0x2af01778],al
  41abcb:	sub    al,0xf1
  41abcd:	stc    
  41abce:	jmp    0x9770:0xe6efa110
  41abd5:	push   ebx
  41abd6:	add    DWORD PTR [eax+0x1e83a5dd],edi
  41abdc:	mov    al,0xf6
  41abde:	mov    dh,0xca
  41abe0:	gs pop eax
  41abe2:	mov    bl,0x82
  41abe4:	fcomp  QWORD PTR [ebp-0x55f8b046]
  41abea:	out    dx,al
  41abeb:	push   eax
  41abec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abed:	stos   DWORD PTR es:[edi],eax
  41abee:	adc    esi,ecx
  41abf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf1:	push   0x56
  41abf3:	cmp    DWORD PTR [edx-0x498bd634],ecx
  41abf9:	push   ebx
  41abfa:	inc    esp
  41abfb:	push   es
  41abfc:	inc    ecx
  41abfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abfe:	fcomp  DWORD PTR [esi]
  41ac00:	cmp    BYTE PTR [edx-0x4d],cl
  41ac03:	mov    ecx,0x2ee79299
  41ac08:	pop    ebx
  41ac09:	popa   
  41ac0a:	inc    esi
  41ac0b:	cmp    DWORD PTR [eax+edx*2],esp
  41ac0e:	jns    0x41ac31
  41ac10:	int3   
  41ac11:	ror    BYTE PTR [ebp-0x72b4b77b],1
  41ac17:	neg    DWORD PTR [esi-0x27]
  41ac1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1b:	dec    edx
  41ac1c:	push   ebp
  41ac1d:	dec    edi
  41ac1e:	add    eax,0xcd5e7497
  41ac23:	ret    0x3079
  41ac26:	pusha  
  41ac27:	call   0xec3a31b0
  41ac2c:	daa    
  41ac2d:	push   esp
  41ac2e:	cmp    ebx,DWORD PTR [ecx]
  41ac30:	fs ss test eax,0x6396340c
  41ac37:	cmp    BYTE PTR [esi+edi*8+0x630e8ecd],al
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	dec    ebp
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	cmc    
  41ac4f:	ds ret 0xadab
  41ac53:	sub    BYTE PTR [ecx],al
  41ac55:	add    ah,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [eax-0x7],al
  41ac5c:	repnz popa 
  41ac5e:	std    
  41ac5f:	out    0x2e,al
  41ac61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac62:	mov    edi,0xa91a5875
  41ac67:	inc    ebx
  41ac68:	sahf   
  41ac69:	fmul   st(4),st
  41ac6b:	call   0x82df:0x1f91e51c
  41ac72:	fstp   QWORD PTR [edi]
  41ac74:	mov    ds:0x949a3168,al
  41ac79:	xor    eax,0xe12afecc
  41ac7e:	pushf  
  41ac7f:	imul   esi,ebx,0x38
  41ac82:	or     eax,0x963a8d29
  41ac87:	cld    
  41ac88:	shl    edi,1
  41ac8a:	adc    esp,DWORD PTR [ebx+0xa05d5bd]
  41ac90:	add    al,0x58
  41ac92:	sub    eax,0x461719a7
  41ac97:	(bad)  
  41ac98:	cwde   
  41ac99:	(bad)  
  41ac9a:	cld    
  41ac9b:	fdivp  st(2),st
  41ac9d:	sbb    bh,BYTE PTR [ecx+0x36]
  41aca0:	inc    eax
  41aca1:	mov    edx,0xdafd6cee
  41aca6:	shr    BYTE PTR [ebx-0x1cfb8383],cl
  41acac:	or     eax,0x49e7d3d
  41acb1:	jmp    0x41ad0e
  41acb3:	int3   
  41acb4:	pop    edi
  41acb5:	mov    dl,0xe6
  41acb7:	push   0xfffffff3
  41acb9:	jnp    0x41ac91
  41acbb:	dec    edi
  41acbc:	hlt    
  41acbd:	or     ebp,ecx
  41acbf:	test   eax,0x73ed6299
  41acc4:	js     0x41accd
  41acc6:	retf   0xdad7
  41acc9:	(bad)  
  41acca:	fwait
  41accb:	pop    ebp
  41accc:	shl    BYTE PTR [ebx],0x94
  41accf:	out    dx,al
  41acd0:	add    DWORD PTR ds:0xa0bcde50,ebp
  41acd6:	xlat   BYTE PTR ds:[ebx]
  41acd7:	setns  BYTE PTR [edi+0x56]
  41acdb:	and    ebx,DWORD PTR [ebx+0xb609c93]
  41ace1:	sub    al,0xaa
  41ace3:	icebp  
  41ace4:	adc    edx,DWORD PTR [ebx]
  41ace6:	fiadd  DWORD PTR [edx+0x4682061e]
  41acec:	cdq    
  41aced:	int3   
  41acee:	not    DWORD PTR [ebx+edi*4+0x20dd8c5d]
  41acf5:	mov    WORD PTR [edx-0x41],es
  41acf8:	add    eax,0xec6c3b47
  41acfd:	jne    0x41ad7d
  41acff:	fcom   QWORD PTR [ecx+ebx*1]
  41ad02:	rol    DWORD PTR [ebp-0x5bcd0b16],0xb
  41ad09:	rcl    DWORD PTR [ebp+0x36],0xe3
  41ad0d:	adc    ah,BYTE PTR [eax-0x5d]
  41ad10:	push   edx
  41ad11:	or     BYTE PTR [esi+0x38],0x9
  41ad15:	cmp    al,0xae
  41ad17:	jecxz  0x41acb1
  41ad19:	sub    bh,BYTE PTR [esp+edi*4-0x1d]
  41ad1d:	ss inc esi
  41ad1f:	inc    ebp
  41ad20:	fimul  WORD PTR [esi]
  41ad22:	pop    ebp
  41ad23:	icebp  
  41ad24:	leave  
  41ad25:	cmc    
  41ad26:	adc    ebp,DWORD PTR [edi-0x1d705533]
  41ad2c:	fild   QWORD PTR [ecx]
  41ad2e:	and    DWORD PTR [edi+0x6650b514],eax
  41ad34:	xchg   edi,eax
  41ad35:	mov    dh,0x47
  41ad37:	std    
  41ad38:	or     DWORD PTR fs:[eax-0x1949a199],ebp
  41ad3f:	imul   ebx,DWORD PTR [edx+0x7a],0xffffffb6
  41ad43:	xor    BYTE PTR [edi],dl
  41ad45:	dec    esp
  41ad46:	push   es
  41ad47:	inc    ebp
  41ad48:	popf   
  41ad49:	sub    bl,BYTE PTR [esi-0x21]
  41ad4c:	in     eax,dx
  41ad4d:	(bad)  
  41ad4e:	pop    esp
  41ad4f:	xchg   DWORD PTR [ebx],esp
  41ad51:	icebp  
  41ad52:	cmp    eax,0x505564d6
  41ad57:	cs jmp 0x41adbe
  41ad5a:	mov    DWORD PTR [ebx],esi
  41ad5c:	cwde   
  41ad5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad5e:	mov    ds:0xf483bf76,eax
  41ad63:	shl    ch,0x29
  41ad66:	pop    esi
  41ad67:	stos   BYTE PTR es:[edi],al
  41ad68:	repnz dec eax
  41ad6a:	or     ecx,DWORD PTR [edi-0x2ff2b9a]
  41ad70:	iret   
  41ad71:	lods   al,BYTE PTR ds:[esi]
  41ad72:	ret    
  41ad73:	ret    
  41ad74:	xor    eax,DWORD PTR [eax+0x68]
  41ad77:	dec    ebp
  41ad78:	je     0x41ad10
  41ad7a:	dec    edi
  41ad7b:	test   al,0xf
  41ad7d:	cmp    eax,0x736d15d
  41ad82:	fwait
  41ad83:	test   DWORD PTR [ebp+0x4d],eax
  41ad86:	gs jbe 0x41ad0a
  41ad89:	or     DWORD PTR [eax+0x54],ecx
  41ad8c:	adc    cl,BYTE PTR [eax-0x1b]
  41ad8f:	jle    0x41ad88
  41ad91:	and    BYTE PTR [ebp-0x79],dl
  41ad94:	ja     0x41adee
  41ad96:	jge    0x41ade2
  41ad98:	jl     0x41ad5d
  41ad9a:	jbe    0x41ad20
  41ad9c:	loope  0x41add3
  41ad9e:	imul   esp,DWORD PTR [esi-0x10632d59],0x8fbfeba6
  41ada8:	sub    eax,0xd59d10c4
  41adad:	rol    DWORD PTR [eax+ebx*4+0x58],cl
  41adb1:	imul   esi,DWORD PTR [ebp+0x7a],0xfcf17ebf
  41adb8:	xchg   esi,eax
  41adb9:	adc    eax,0xfee36288
  41adbe:	pop    ebx
  41adbf:	adc    DWORD PTR [eax-0x55],edi
  41adc2:	mov    DWORD PTR [edx],ebx
  41adc4:	adc    DWORD PTR [esi+0x82ee56b],eax
  41adca:	jb     0x41ae19
  41adcc:	stos   BYTE PTR es:[edi],al
  41adcd:	xchg   esp,eax
  41adce:	mov    bh,0x96
  41add0:	and    BYTE PTR [ebx-0x58],cl
  41add3:	int3   
  41add4:	adc    dh,ah
  41add6:	inc    ebp
  41add7:	test   eax,0x80df0d84
  41addc:	dec    eax
  41addd:	push   edx
  41adde:	xlat   BYTE PTR ds:[ebx]
  41addf:	mov    eax,ds:0x3044586b
  41ade4:	pop    ebp
  41ade5:	in     eax,dx
  41ade6:	jo     0x41ad7f
  41ade8:	shl    DWORD PTR [eax-0x4337ea4b],1
  41adee:	xor    DWORD PTR [edx],0xb
  41adf1:	outs   dx,DWORD PTR ds:[esi]
  41adf2:	loope  0x41ae1c
  41adf4:	enter  0xffdf,0x9a
  41adf8:	(bad)  
  41adf9:	sub    DWORD PTR [eax+0x79c2d775],ebp
  41adff:	into   
  41ae00:	mov    ch,0xa8
  41ae02:	outs   dx,BYTE PTR ds:[esi]
  41ae03:	mov    ecx,0x7873af0d
  41ae08:	bound  ecx,QWORD PTR [ecx-0x9]
  41ae0b:	jecxz  0x41ae17
  41ae0d:	gs out dx,eax
  41ae0f:	push   edx
  41ae10:	loope  0x41adfd
  41ae12:	aas    
  41ae13:	cmp    eax,0xfce29744
  41ae18:	idiv   BYTE PTR [ebp+0x69]
  41ae1b:	push   0x44
  41ae1d:	sbb    eax,0x8e698068
  41ae22:	hlt    
  41ae23:	pop    ds
  41ae24:	xor    BYTE PTR [eax+0x57b922fc],bh
  41ae2a:	mov    al,gs:0xea83f8c3
  41ae30:	sbb    eax,DWORD PTR [eax-0x33118b36]
  41ae36:	xchg   ecx,eax
  41ae37:	outs   dx,BYTE PTR ds:[esi]
  41ae38:	jp     0x41ae0e
  41ae3a:	xchg   DWORD PTR gs:[ebp-0x36c3f911],esp
  41ae41:	mov    al,0x33
  41ae43:	stos   BYTE PTR es:[edi],al
  41ae44:	ja     0x41aea2
  41ae46:	sahf   
  41ae47:	fld    QWORD PTR [edi-0x12]
  41ae4a:	cdq    
  41ae4b:	popf   
  41ae4c:	stos   DWORD PTR es:[edi],eax
  41ae4d:	mov    al,ds:0xad656a92
  41ae52:	sub    al,0x1d
  41ae54:	nop
  41ae55:	pop    ecx
  41ae56:	jmp    0x41ae8e
  41ae58:	push   ebp
  41ae59:	mov    ebx,?
  41ae5b:	ds pusha 
  41ae5d:	cmp    al,0x58
  41ae5f:	add    bh,BYTE PTR [edx-0x38e19fb]
  41ae65:	sti    
  41ae66:	jl     0x41ae67
  41ae68:	adc    BYTE PTR [ebx],ah
  41ae6a:	out    0xd4,al
  41ae6c:	frstor [ebx-0x148f456b]
  41ae72:	adc    eax,0x465004f7
  41ae77:	repz mov eax,0xc5dd2a3
  41ae7d:	cmp    eax,0x501798ff
  41ae82:	mov    ah,0x96
  41ae84:	push   esi
  41ae85:	dec    BYTE PTR [esi+ebx*4+0x4e64c7c3]
  41ae8c:	mov    ah,0x6d
  41ae8e:	dec    ebx
  41ae8f:	or     DWORD PTR es:[ebx+0x3b],0xc98af158
  41ae97:	pop    ds
  41ae98:	inc    esp
  41ae99:	jecxz  0x41aedc
  41ae9b:	popf   
  41ae9c:	arpl   WORD PTR [edi],bp
  41ae9e:	push   esi
  41ae9f:	cmp    BYTE PTR [ebp*2+0x71516fea],bl
  41aea6:	add    al,0x34
  41aea8:	adc    DWORD PTR [edi-0x50],ebx
  41aeab:	dec    edi
  41aeac:	push   eax
  41aead:	and    dh,BYTE PTR [edx-0x10]
  41aeb0:	pop    ebp
  41aeb1:	repz mov WORD PTR [edi+0x73],ds
  41aeb5:	jg     0x41ae5b
  41aeb7:	(bad)  
  41aeb8:	sub    BYTE PTR [esi-0x7c],bh
  41aebb:	or     DWORD PTR [esi],esp
  41aebd:	out    dx,al
  41aebe:	and    ebp,esp
  41aec0:	or     al,0x95
  41aec2:	jns    0x41af1b
  41aec4:	and    DWORD PTR ds:0x81ea42e4,0xffffffd0
  41aecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aecc:	das    
  41aecd:	add    esp,DWORD PTR [ebx-0x561b2752]
  41aed3:	xchg   ebp,eax
  41aed4:	pop    edi
  41aed5:	pop    esi
  41aed6:	repz retf 0x854d
  41aeda:	adc    ecx,esi
  41aedc:	jmp    0x41af2a
  41aede:	push   ecx
  41aedf:	add    ebx,DWORD PTR [eax]
  41aee1:	data16 jge 0x41aeac
  41aee4:	fidiv  DWORD PTR [esi+0x2186267]
  41aeea:	dec    esp
  41aeeb:	test   al,0xc1
  41aeed:	dec    esp
  41aeee:	mov    edx,es
  41aef0:	iret   
  41aef1:	sub    al,0x47
  41aef3:	inc    edi
  41aef4:	push   esi
  41aef5:	ss ds push ecx
  41aef8:	xor    edi,DWORD PTR [edx-0x6d294ee]
  41aefe:	call   0x1e7f4b6f
  41af03:	mov    dh,0x38
  41af05:	rcr    DWORD PTR [ebx-0x74],1
  41af08:	mov    dh,0xdf
  41af0a:	mov    ah,0xbb
  41af0c:	shl    DWORD PTR [ecx+ebp*2-0x5fb94f10],1
  41af13:	in     eax,0xa1
  41af15:	push   edi
  41af16:	mov    eax,0x83f2782
  41af1b:	jb     0x41af8c
  41af1d:	rol    BYTE PTR [ebp-0x7e],cl
  41af20:	pop    ss
  41af21:	sub    BYTE PTR [ecx+esi*1],al
  41af24:	in     al,0x1e
  41af26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af27:	mov    BYTE PTR [ebp-0x1b905bd7],ah
  41af2d:	sub    BYTE PTR [eax],dh
  41af2f:	mov    ecx,0xbbfea090
  41af34:	aas    
  41af35:	scas   eax,DWORD PTR es:[edi]
  41af36:	arpl   WORD PTR [edx+0x5e],sp
  41af39:	or     al,0x4e
  41af3b:	outs   dx,BYTE PTR ds:[esi]
  41af3c:	adc    al,0xaa
  41af3e:	dec    esp
  41af3f:	fs call 0x3507:0x5bc52f51
  41af47:	shl    BYTE PTR [eax],cl
  41af49:	je     0x41afbb
  41af4b:	inc    esi
  41af4c:	push   ds
  41af4d:	adc    eax,0x7fcea216
  41af52:	xchg   DWORD PTR ds:0x3e311c86,esp
  41af58:	in     al,dx
  41af59:	lock mov ah,0x3
  41af5c:	rol    DWORD PTR [ebx-0x603d75b],0xf
  41af63:	push   cs
  41af64:	sbb    edi,esp
  41af66:	dec    edx
  41af67:	popa   
  41af68:	inc    esp
  41af69:	add    DWORD PTR [esi],eax
  41af6b:	imul   ebx,esi,0xbc7be11
  41af71:	(bad)  
  41af72:	jo     0x41af63
  41af74:	push   ecx
  41af75:	add    DWORD PTR [edi-0x63],ebx
  41af78:	into   
  41af79:	arpl   sp,sp
  41af7b:	fimul  WORD PTR [ebp-0x75]
  41af7e:	mov    ebx,0xd5c36299
  41af83:	fwait
  41af84:	out    dx,al
  41af85:	pop    ebx
  41af86:	in     al,0xd
  41af88:	mov    eax,ds:0x59f16c44
  41af8d:	adc    dh,al
  41af8f:	pop    eax
  41af90:	mov    edi,0xcf3fe882
  41af95:	mov    esp,0xed93c677
  41af9a:	pop    esp
  41af9b:	rol    DWORD PTR [edi-0x59],cl
  41af9e:	and    eax,0x12bb6fc6
  41afa3:	outs   dx,DWORD PTR ds:[esi]
  41afa4:	int    0x40
  41afa6:	mov    ebx,0x29243f82
  41afab:	mov    edi,0xdbd1cd20
  41afb0:	ins    DWORD PTR es:[edi],dx
  41afb1:	in     al,0xad
  41afb3:	in     eax,0x5d
  41afb5:	fld    QWORD PTR [edx-0x10f2d018]
  41afbb:	enter  0x3440,0xb9
  41afbf:	mov    DWORD PTR ds:0xf83226f0,ebp
  41afc5:	mov    eax,ss
  41afc7:	fsubr  QWORD PTR [ebx-0x53]
  41afca:	adc    eax,DWORD PTR [ebx+0x5e6041f9]
  41afd0:	hlt    
  41afd1:	mov    ebx,0x2eb291aa
  41afd6:	sub    DWORD PTR ss:[edx-0x514d9237],edi
  41afdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afde:	inc    ebp
  41afdf:	mov    cl,0x35
  41afe1:	leave  
  41afe2:	clc    
  41afe3:	scas   eax,DWORD PTR es:[edi]
  41afe4:	sub    bl,BYTE PTR [ebp+0x7f166a3f]
  41afea:	mov    bl,0xcb
  41afec:	mov    ds,WORD PTR [ebx+eax*2+0x5b330b83]
  41aff3:	repnz sub DWORD PTR [edx-0x3fea1442],eax
  41affa:	call   0x7ffa0af7
  41afff:	test   al,0x61
  41b001:	out    0x42,eax
  41b003:	retf   0xb497
  41b006:	fdiv   DWORD PTR [edi+0x8]
  41b009:	add    DWORD PTR [edx+0x360458e3],esi
  41b00f:	or     edi,ebp
  41b011:	cmc    
  41b012:	out    dx,eax
  41b013:	sbb    al,0x1f
  41b015:	std    
  41b016:	sub    edi,DWORD PTR [edx-0x41ecbb56]
  41b01c:	sub    ch,BYTE PTR [edi-0x1e1731ad]
  41b022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b023:	pop    ecx
  41b024:	scas   eax,DWORD PTR es:[edi]
  41b025:	in     eax,0x28
  41b027:	inc    eax
  41b028:	in     eax,0x6e
  41b02a:	es jle 0x41afbc
  41b02d:	jb     0x41b09e
  41b02f:	and    DWORD PTR [ebp-0x75],0xffffffac
  41b033:	push   edi
  41b034:	ror    BYTE PTR [edi+0x15],cl
  41b037:	push   es
  41b038:	lahf   
  41b039:	out    0xd3,al
  41b03b:	jnp    0x41b0bb
  41b03d:	sahf   
  41b03e:	xor    BYTE PTR [ecx-0x4d77cfac],al
  41b044:	mov    ah,0xa1
  41b046:	mov    DWORD PTR [eax+0x25],esi
  41b049:	xchg   DWORD PTR [edx+0x77],edx
  41b04c:	ror    BYTE PTR [ebx-0x7],cl
  41b04f:	loope  0x41afe1
  41b051:	mov    cl,0xa4
  41b053:	jmp    0xac4d834c
  41b058:	mov    BYTE PTR gs:[edx-0x48ca99cf],bl
  41b05f:	pop    edx
  41b060:	rol    DWORD PTR [esi],1
  41b062:	mov    dl,0x57
  41b064:	xchg   edx,eax
  41b065:	sub    DWORD PTR [edi+0x1a7e2142],esi
  41b06b:	into   
  41b06c:	mov    ds:0x8ea9c981,eax
  41b071:	push   cs
  41b072:	js     0x41b0c5
  41b074:	shr    cl,0x13
  41b077:	pop    edi
  41b078:	cmc    
  41b079:	mov    ebp,0xdb548081
  41b07e:	jle    0x41b091
  41b080:	stc    
  41b081:	pop    ebx
  41b082:	fsubr  st(2),st
  41b084:	ja     0x41b00c
  41b086:	retf   
  41b087:	repnz aad 0x41
  41b08a:	and    ebx,DWORD PTR [ebx-0x4e]
  41b08d:	mov    ch,0xb0
  41b08f:	int    0x9d
  41b091:	out    dx,al
  41b092:	inc    edx
  41b093:	scas   eax,DWORD PTR es:[edi]
  41b094:	sbb    BYTE PTR [edi],0x94
  41b097:	sub    edx,DWORD PTR [ebp+0x30]
  41b09a:	push   eax
  41b09b:	test   BYTE PTR [ecx-0x3d766b59],al
  41b0a1:	jbe    0x41b0fc
  41b0a3:	dec    edx
  41b0a4:	jge    0x41b027
  41b0a6:	mov    ds:0x4f5b00ac,al
  41b0ab:	not    DWORD PTR [edx+0x68]
  41b0ae:	je     0x41b0e9
  41b0b0:	outs   dx,DWORD PTR ds:[esi]
  41b0b1:	pop    edx
  41b0b2:	pusha  
  41b0b3:	push   edi
  41b0b4:	or     ebp,DWORD PTR [esi+ebx*4]
  41b0b7:	inc    edx
  41b0b8:	leave  
  41b0b9:	pop    es
  41b0ba:	stos   BYTE PTR es:[edi],al
  41b0bb:	out    0xc9,al
  41b0bd:	jl     0x41b0a6
  41b0bf:	push   ebx
  41b0c0:	cli    
  41b0c1:	jo     0x41b0cc
  41b0c3:	xor    eax,0xbc2fe6fc
  41b0c8:	mov    edx,0x1343fb2f
  41b0cd:	mov    ebx,0x205787c4
  41b0d2:	dec    esi
  41b0d3:	outs   dx,DWORD PTR ds:[esi]
  41b0d4:	mov    BYTE PTR [esi-0x2b],dh
  41b0d7:	xchg   edx,eax
  41b0d8:	fidivr WORD PTR [ebp+0x5b518c0b]
  41b0de:	mov    al,0x8f
  41b0e0:	mov    eax,0x20aa9ca8
  41b0e5:	inc    esp
  41b0e6:	popa   
  41b0e7:	imul   edi,DWORD PTR ds:0x4ee8079e,0x1d
  41b0ee:	xchg   ecx,eax
  41b0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0f0:	mov    ds:0xf2a24b,al
  41b0f5:	sub    esp,DWORD PTR [edx]
  41b0f7:	push   es
  41b0f8:	int3   
  41b0f9:	and    al,0x26
  41b0fb:	(bad)  [ebx-0x912229b]
  41b101:	mov    ds:0x73d334cd,al
  41b106:	adc    BYTE PTR [edx],bh
  41b108:	fcomip st,st(0)
  41b10a:	cmp    ebp,DWORD PTR [esi-0x22a92aa3]
  41b110:	mov    DWORD PTR ds:0x8c3e4f7f,edi
  41b116:	cs jne 0x41b12b
  41b119:	push   ds
  41b11a:	xchg   edi,eax
  41b11b:	or     bh,dl
  41b11d:	xchg   ebp,eax
  41b11e:	mov    cl,dh
  41b120:	and    dh,BYTE PTR [edi+edi*2+0x66]
  41b124:	clc    
  41b125:	sub    al,0xab
  41b127:	or     al,0x48
  41b129:	cmp    eax,0xa6720516
  41b12e:	js     0x41b0e3
  41b130:	shr    DWORD PTR [ebp-0xb42818c],0x7d
  41b137:	mov    dh,0x36
  41b139:	lds    si,DWORD PTR [edx+0x56]
  41b13d:	xor    eax,0xbc3b56f
  41b142:	in     al,0x1
  41b144:	fadd   QWORD PTR [esi+eax*2]
  41b147:	adc    bh,al
  41b149:	sbb    dl,BYTE PTR [eax-0xf]
  41b14c:	mov    al,ds:0xf5
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	cli    
  41b15f:	push   0x2da1700e
  41b164:	add    DWORD PTR [eax],eax
  41b166:	hlt    
  41b167:	add    al,0x0
  41b169:	add    BYTE PTR [edx+0x28],dh
  41b16c:	inc    edi
  41b16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b16e:	and    ebx,DWORD PTR [edx+0x66]
  41b171:	sar    DWORD PTR [esi+0x79],1
  41b174:	aaa    
  41b175:	daa    
  41b176:	jle    0x41b0f8
  41b178:	jmp    0xb599:0xe2165eb5
  41b17f:	jge    0x41b19f
  41b181:	inc    esi
  41b182:	or     edx,DWORD PTR [ebx-0x4c666b9c]
  41b188:	out    dx,al
  41b189:	lea    ecx,ss:[ebp-0x3b02597f]
  41b190:	ror    DWORD PTR [esi],1
  41b192:	mov    esp,0x59d52b9c
  41b197:	daa    
  41b198:	aas    
  41b199:	aaa    
  41b19a:	stos   BYTE PTR es:[edi],al
  41b19b:	outs   dx,BYTE PTR ds:[esi]
  41b19c:	xor    eax,0x6d1161ba
  41b1a1:	push   ds
  41b1a2:	not    DWORD PTR [esi+0x44b62249]
  41b1a8:	pusha  
  41b1a9:	imul   esi,DWORD PTR [ecx+0x4c],0x47f645f5
  41b1b0:	xlat   BYTE PTR ds:[ebx]
  41b1b1:	scas   al,BYTE PTR es:[edi]
  41b1b2:	call   0x99b6:0x4c9e9a1b
  41b1b9:	sbb    bl,dl
  41b1bb:	aas    
  41b1bc:	xor    esp,DWORD PTR [ecx]
  41b1be:	mov    dh,0x6a
  41b1c0:	inc    edx
  41b1c1:	into   
  41b1c2:	cmp    eax,0xfd950800
  41b1c7:	sub    DWORD PTR [ebp-0x2a],0xffffffd6
  41b1cb:	jo     0x41b1b6
  41b1cd:	mov    cl,0x3
  41b1cf:	push   ds
  41b1d0:	inc    eax
  41b1d1:	(bad)  
  41b1d2:	aam    0x7d
  41b1d4:	jecxz  0x41b1bb
  41b1d6:	pop    edx
  41b1d7:	sbb    BYTE PTR [edx],bl
  41b1d9:	(bad)  
  41b1da:	pop    esi
  41b1db:	cld    
  41b1dc:	push   ecx
  41b1dd:	xor    DWORD PTR [ebp+0xc421f28],0x33
  41b1e4:	xchg   esp,eax
  41b1e5:	ss mov dl,0x32
  41b1e8:	out    0xff,eax
  41b1ea:	aaa    
  41b1eb:	dec    ecx
  41b1ec:	(bad)  
  41b1ed:	aaa    
  41b1ee:	imul   edi,esi,0xffffffc1
  41b1f1:	inc    edi
  41b1f2:	out    dx,al
  41b1f3:	push   ss
  41b1f4:	pop    ebx
  41b1f5:	rol    DWORD PTR [esp+edi*2-0x7e],1
  41b1f9:	pop    edi
  41b1fa:	fsub   QWORD PTR [eax]
  41b1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1fe:	fsubrp st(7),st
  41b200:	pop    ebp
  41b201:	aam    0x5c
  41b203:	sbb    al,0xdc
  41b205:	jne    0x41b22a
  41b207:	jnp    0x41b1a4
  41b209:	shl    BYTE PTR [esi-0x4583dd28],1
  41b20f:	cmp    esp,edx
  41b211:	test   dh,bl
  41b213:	arpl   WORD PTR [ecx+0x6cae7996],bx
  41b219:	fistp  DWORD PTR [ebx]
  41b21b:	sub    eax,0xec40588a
  41b220:	xchg   BYTE PTR [ebx+eiz*1],ch
  41b223:	adc    eax,0x287702b0
  41b228:	bound  ebx,QWORD PTR [ebp+0x4cb91293]
  41b22e:	aas    
  41b22f:	push   ecx
  41b230:	fidivr WORD PTR [ecx+0x3a903e7a]
  41b236:	push   esp
  41b237:	sahf   
  41b238:	fs call 0xfb4892a1
  41b23e:	test   al,0x17
  41b240:	pop    ecx
  41b241:	push   eax
  41b242:	jbe    0x41b291
  41b244:	cmp    BYTE PTR [ecx-0x33],ch
  41b247:	pusha  
  41b248:	and    BYTE PTR [ecx+0x78],ah
  41b24b:	test   eax,0x1e0f8a7d
  41b250:	sahf   
  41b251:	push   eax
  41b252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b253:	lea    esi,[ecx-0x33]
  41b256:	mov    bh,0xec
  41b258:	data16 mov bp,0x2ebe
  41b25d:	mov    ch,0x9e
  41b25f:	les    esi,FWORD PTR [ecx+ebp*8]
  41b262:	mov    eax,ds:0x173f1ae4
  41b267:	(bad)  
  41b268:	jmp    0xc2c76b0f
  41b26d:	mov    ss,ebp
  41b26f:	add    eax,0x845a190b
  41b274:	imul   DWORD PTR [ebp-0x11]
  41b277:	(bad)
  41b27a:	mov    edx,0x676ad052
  41b27f:	jecxz  0x41b240
  41b281:	(bad)  
  41b282:	mov    WORD PTR ds:0xac76fcd5,?
  41b288:	fimul  DWORD PTR [esp+edx*4+0x28]
  41b28c:	lahf   
  41b28d:	jecxz  0x41b279
  41b28f:	repnz xchg edx,eax
  41b291:	ins    DWORD PTR es:[edi],dx
  41b292:	icebp  
  41b293:	mov    eax,DWORD PTR [ecx+0x7360b3eb]
  41b299:	test   DWORD PTR [esi+0x75d77985],esp
  41b29f:	adc    DWORD PTR [edi-0x45f793c5],ebp
  41b2a5:	adc    DWORD PTR [ecx],ecx
  41b2a7:	and    dl,ah
  41b2a9:	loope  0x41b25a
  41b2ab:	mov    edi,0x694aa806
  41b2b0:	dec    esp
  41b2b1:	std    
  41b2b2:	js     0x41b26a
  41b2b4:	or     DWORD PTR [ebp-0x43],esp
  41b2b7:	(bad)  
  41b2b8:	jmp    0xc2aa5583
  41b2bd:	lods   eax,DWORD PTR ds:[esi]
  41b2be:	repz adc BYTE PTR [ebx+0x2b],0x56
  41b2c3:	dec    ebp
  41b2c4:	std    
  41b2c5:	in     eax,0xea
  41b2c7:	push   0x58
  41b2c9:	icebp  
  41b2ca:	fdivr  QWORD PTR [ecx]
  41b2cc:	stos   DWORD PTR es:[edi],eax
  41b2cd:	adc    ah,bh
  41b2cf:	cs xor ah,bl
  41b2d2:	cmp    eax,0x69c34b3e
  41b2d7:	test   eax,0x78d65d92
  41b2dc:	lods   al,BYTE PTR ds:[esi]
  41b2dd:	aam    0x5
  41b2df:	mov    bl,0xc2
  41b2e1:	test   BYTE PTR [edx-0x66183502],al
  41b2e7:	jmp    0x41b30d
  41b2e9:	inc    eax
  41b2ea:	sbb    al,0xfd
  41b2ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ed:	rol    DWORD PTR [esi-0x74e0c450],cl
  41b2f3:	loop   0x41b369
  41b2f5:	lea    ecx,[edi+0x22]
  41b2f8:	sub    edx,DWORD PTR [edi]
  41b2fa:	dec    ecx
  41b2fb:	loope  0x41b2b0
  41b2fd:	and    DWORD PTR [edx-0x66],ebx
  41b300:	jae    0x41b2ba
  41b302:	mov    bl,0xf6
  41b304:	fldenv [edi+0x53]
  41b307:	leave  
  41b308:	pop    edx
  41b309:	popf   
  41b30a:	dec    ebx
  41b30b:	inc    edi
  41b30c:	add    DWORD PTR [ebp-0x6903ef5b],edi
  41b312:	nop
  41b313:	test   BYTE PTR [eax+0x67],dh
  41b316:	scas   al,BYTE PTR es:[edi]
  41b317:	push   ds
  41b318:	pop    ebp
  41b319:	adc    bh,BYTE PTR [eax-0x38304642]
  41b31f:	pop    edx
  41b320:	pusha  
  41b321:	xchg   ebp,eax
  41b322:	adc    eax,DWORD PTR ds:0x358518e6
  41b328:	int3   
  41b329:	stos   BYTE PTR es:[edi],al
  41b32a:	pop    esp
  41b32b:	inc    edi
  41b32c:	daa    
  41b32d:	adc    ah,BYTE PTR [ecx+0x69]
  41b330:	adc    eax,0xbc06a4d4
  41b335:	iret   
  41b336:	iret   
  41b337:	pop    ebx
  41b338:	pop    ds
  41b339:	(bad)  
  41b33a:	fadd   st(3),st
  41b33c:	adc    DWORD PTR [ebx-0x214c8626],ebp
  41b342:	call   0xc71ba793
  41b347:	mov    esi,0x95a2dcde
  41b34c:	sub    eax,0xd08bdb7f
  41b351:	mov    al,ds:0xff9134a
  41b356:	stos   DWORD PTR es:[edi],eax
  41b357:	popf   
  41b358:	inc    ecx
  41b359:	jo     0x41b3b6
  41b35b:	xchg   BYTE PTR [eax],bh
  41b35d:	pop    ecx
  41b35e:	cmp    DWORD PTR [eax-0x28],ebx
  41b361:	xchg   ecx,eax
  41b362:	bound  ebp,QWORD PTR [eax-0x763367df]
  41b368:	inc    esp
  41b369:	jb     0x41b3e4
  41b36b:	mov    dl,0x9e
  41b36d:	jecxz  0x41b3ea
  41b36f:	imul   DWORD PTR [esi-0x1e]
  41b372:	xchg   esi,eax
  41b373:	mov    ch,0xa8
  41b375:	imul   ecx,DWORD PTR [ebp+ecx*8-0x4a56ca71],0x20
  41b37d:	fild   DWORD PTR [eax-0x6ea4934d]
  41b383:	sub    eax,ebx
  41b385:	mov    BYTE PTR [ebx-0x5b],ch
  41b388:	stos   DWORD PTR es:[edi],eax
  41b389:	retf   
  41b38a:	push   ss
  41b38b:	xor    DWORD PTR [eax+0x7eb4c720],esi
  41b391:	pusha  
  41b392:	div    BYTE PTR [esi]
  41b394:	add    ebp,esp
  41b396:	mov    al,BYTE PTR [ebx]
  41b398:	out    dx,al
  41b399:	sar    edi,cl
  41b39b:	sahf   
  41b39c:	inc    ebx
  41b39d:	sbb    BYTE PTR [ebx-0x66771edd],bl
  41b3a3:	shr    ecx,0x20
  41b3a6:	adc    DWORD PTR [esi-0x35],ebx
  41b3a9:	test   BYTE PTR [ebx-0xd9682ab],0xe7
  41b3b0:	mov    ebp,DWORD PTR [ecx]
  41b3b2:	popa   
  41b3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3b4:	xchg   edi,eax
  41b3b5:	in     al,dx
  41b3b6:	and    al,0xdb
  41b3b8:	mov    dh,0x60
  41b3ba:	fwait
  41b3bb:	jmp    0x4eed:0xd30ece42
  41b3c2:	out    dx,eax
  41b3c3:	out    0xd,al
  41b3c5:	mov    ebp,DWORD PTR [esi+ebx*8-0x7115602d]
  41b3cc:	out    dx,eax
  41b3cd:	fisubr WORD PTR [eax-0xc]
  41b3d0:	xchg   ecx,eax
  41b3d1:	int3   
  41b3d2:	fisubr WORD PTR [edx+0x9a581a4]
  41b3d8:	mov    WORD PTR [ebp-0x53],cs
  41b3db:	repnz mov dl,0x4c
  41b3de:	or     edx,ebp
  41b3e0:	mov    DWORD PTR [edi],ebp
  41b3e2:	fsub   QWORD PTR [edi-0x43f2a78a]
  41b3e8:	outs   dx,DWORD PTR ds:[esi]
  41b3e9:	in     eax,dx
  41b3ea:	fisttp DWORD PTR [ebx+ebx*1+0x20217c33]
  41b3f1:	mov    ebx,0x103423fb
  41b3f6:	mov    al,ch
  41b3f8:	jns    0x41b3d7
  41b3fa:	cwde   
  41b3fb:	fnstenv [eax]
  41b3fd:	push   ecx
  41b3fe:	xchg   ebp,eax
  41b3ff:	dec    esp
  41b400:	cwde   
  41b401:	xchg   ecx,eax
  41b402:	test   ebx,edi
  41b404:	icebp  
  41b405:	or     eax,0x7c27ee59
  41b40a:	and    BYTE PTR [eax],dl
  41b40c:	clc    
  41b40d:	iret   
  41b40e:	aas    
  41b40f:	enter  0xfac0,0xa
  41b413:	jp     0x41b45b
  41b415:	push   edx
  41b416:	cmp    ch,BYTE PTR [ebx]
  41b418:	sub    BYTE PTR [edi],dh
  41b41a:	scas   al,BYTE PTR es:[edi]
  41b41b:	mov    cl,0xed
  41b41d:	aaa    
  41b41e:	in     eax,0x33
  41b420:	sub    DWORD PTR [ecx+0x63],ebp
  41b423:	sbb    dl,ah
  41b425:	dec    esi
  41b426:	aaa    
  41b427:	out    dx,al
  41b428:	dec    eax
  41b429:	ficomp DWORD PTR [esi]
  41b42b:	dec    edi
  41b42c:	add    DWORD PTR [ecx-0x6b],ebp
  41b42f:	or     al,0x9b
  41b431:	outs   dx,DWORD PTR ds:[esi]
  41b432:	stc    
  41b433:	bound  ebp,QWORD PTR [ecx]
  41b435:	pop    ebp
  41b436:	and    bl,BYTE PTR [ebp+0x2c7e98b5]
  41b43c:	push   edx
  41b43d:	sub    cl,ch
  41b43f:	mov    esp,0xe9d0ed89
  41b444:	inc    BYTE PTR ds:0x1b51b0c9
  41b44a:	out    0xff,eax
  41b44c:	pop    esi
  41b44d:	mov    DWORD PTR [eax-0x3efd0738],edx
  41b453:	inc    edi
  41b454:	dec    esp
  41b455:	ins    BYTE PTR es:[edi],dx
  41b456:	sbb    DWORD PTR [esi+esi*1+0x2ed1b28d],0x4c780c4f
  41b461:	xchg   ebp,eax
  41b462:	loope  0x41b483
  41b464:	pop    esi
  41b465:	pusha  
  41b466:	mov    edx,DWORD PTR [ebp+0x5e]
  41b469:	retf   
  41b46a:	push   esp
  41b46b:	jbe    0x41b467
  41b46d:	inc    ebp
  41b46e:	std    
  41b46f:	or     dh,cl
  41b471:	retf   
  41b472:	pop    ebx
  41b473:	(bad)  
  41b474:	pop    edi
  41b475:	inc    ebp
  41b476:	lods   eax,DWORD PTR ds:[esi]
  41b477:	cmp    eax,0xa4759983
  41b47c:	mov    edi,0xe2c9976c
  41b481:	pop    edi
  41b482:	retf   0x2ae9
  41b485:	push   ebx
  41b486:	pop    esp
  41b487:	and    DWORD PTR [ebx+0x603f115],edx
  41b48d:	cld    
  41b48e:	neg    BYTE PTR [ecx+eax*1-0x1]
  41b492:	mov    WORD PTR [esi+eiz*1-0x31189e77],?
  41b499:	jmp    0x92b1:0xcd1ac0f3
  41b4a0:	inc    eax
  41b4a1:	or     DWORD PTR [ecx+0x15],esi
  41b4a4:	adc    eax,DWORD PTR [edx-0x16]
  41b4a7:	fisub  WORD PTR [ebx+0x27]
  41b4aa:	lock lahf 
  41b4ac:	in     al,0x88
  41b4ae:	pop    es
  41b4af:	fisttp WORD PTR [edx]
  41b4b1:	ret    0x425c
  41b4b4:	or     DWORD PTR [ebx-0xc9856da],0x10
  41b4bb:	sahf   
  41b4bc:	test   DWORD PTR [esi-0x2c],esp
  41b4bf:	or     dl,BYTE PTR [ebp+edi*4-0x426d5acf]
  41b4c6:	push   ecx
  41b4c7:	es nop
  41b4c9:	or     DWORD PTR [ebp+0x1388f57b],ecx
  41b4cf:	cdq    
  41b4d0:	int3   
  41b4d1:	dec    esp
  41b4d2:	add    eax,0x4ba7b2f9
  41b4d7:	pop    eax
  41b4d8:	int    0x31
  41b4da:	sar    BYTE PTR [esi*1+0x6debcc80],1
  41b4e1:	in     al,0x71
  41b4e3:	imul   esp,DWORD PTR [esi],0xbaa5e5ab
  41b4e9:	out    dx,al
  41b4ea:	scas   eax,DWORD PTR es:[edi]
  41b4eb:	ret    
  41b4ec:	xor    DWORD PTR ss:[ebx],edi
  41b4ef:	cmp    BYTE PTR [ecx+0x2a2adff7],al
  41b4f5:	pop    ds
  41b4f6:	pop    es
  41b4f7:	xchg   ebp,eax
  41b4f8:	mov    bl,0x5f
  41b4fa:	enter  0x2a11,0x29
  41b4fe:	jg     0x41b570
  41b500:	(bad)  
  41b502:	jmp    0x8ec3bd36
  41b507:	outs   dx,BYTE PTR ds:[esi]
  41b508:	pop    ds
  41b509:	clc    
  41b50a:	jg     0x41b528
  41b50c:	clc    
  41b50d:	add    esi,edi
  41b50f:	push   es
  41b510:	dec    ebp
  41b511:	stos   DWORD PTR es:[edi],eax
  41b512:	cmp    eax,0xdf9dc1ae
  41b517:	xor    BYTE PTR [ecx+0x18],al
  41b51a:	or     ecx,ebx
  41b51c:	push   0x51
  41b51e:	jbe    0x41b4ba
  41b520:	push   0xb42085bd
  41b525:	dec    esp
  41b526:	and    DWORD PTR [edi],ebx
  41b528:	ret    0x226c
  41b52b:	jmp    0xcceea0d1
  41b530:	mov    ch,0xa3
  41b532:	enter  0x82a9,0x3
  41b536:	scas   eax,DWORD PTR es:[edi]
  41b537:	retf   0x711a
  41b53a:	mov    eax,ds:0x6cec9563
  41b53f:	pop    esp
  41b540:	inc    ebp
  41b541:	in     eax,dx
  41b542:	cmp    dh,BYTE PTR cs:[esi-0x1f0b74b2]
  41b549:	mov    ebx,0x3c46c2fa
  41b54e:	adc    al,0xa2
  41b550:	div    ch
  41b552:	into   
  41b553:	mov    dh,0x60
  41b555:	sub    BYTE PTR [edx+0x43],bl
  41b558:	mov    ah,0x1a
  41b55a:	xchg   ecx,eax
  41b55b:	mov    eax,ds:0xa45fdaa3
  41b560:	sbb    bh,al
  41b562:	adc    al,0x2
  41b564:	sub    al,0x78
  41b566:	lahf   
  41b567:	xor    eax,0xa737532e
  41b56c:	neg    BYTE PTR [eax]
  41b56e:	in     eax,dx
  41b56f:	test   bh,cl
  41b571:	in     eax,0xcb
  41b573:	adc    dl,al
  41b575:	ffree  st(1)
  41b577:	mov    ah,0x6d
  41b579:	lea    ebx,[eax]
  41b57b:	mov    esi,?
  41b57d:	push   ebx
  41b57e:	or     DWORD PTR [edi-0x6],ecx
  41b581:	mov    cl,0x4f
  41b583:	sbb    al,ch
  41b585:	call   0x8a3ae3e0
  41b58a:	mov    ebp,0x281fd214
  41b58f:	or     BYTE PTR [edx-0x703cea41],ah
  41b595:	out    0x4f,al
  41b597:	stos   BYTE PTR es:[edi],al
  41b598:	sahf   
  41b599:	icebp  
  41b59a:	push   esi
  41b59b:	icebp  
  41b59c:	push   edi
  41b59d:	retf   
  41b59e:	jae    0x41b5e9
  41b5a0:	int3   
  41b5a1:	ja     0x41b600
  41b5a3:	(bad)  
  41b5a4:	xchg   esi,eax
  41b5a5:	xor    bh,dh
  41b5a7:	test   esp,edi
  41b5a9:	std    
  41b5aa:	fs lahf 
  41b5ac:	call   0xdf4b4817
  41b5b1:	aam    0x31
  41b5b3:	ss ret 0xf2b9
  41b5b7:	cmp    ebp,DWORD PTR [ecx+0x5375fa63]
  41b5bd:	sbb    DWORD PTR [ecx],edi
  41b5bf:	push   esi
  41b5c0:	mov    ch,0x4c
  41b5c2:	sar    dl,0xbe
  41b5c5:	loope  0x41b5dc
  41b5c7:	push   ds
  41b5c8:	out    0x5d,eax
  41b5ca:	sbb    al,0x99
  41b5cc:	push   cs
  41b5cd:	add    BYTE PTR [esi],cl
  41b5cf:	push   es
  41b5d0:	jge    0x41b5c0
  41b5d2:	pusha  
  41b5d3:	sub    ch,BYTE PTR [eax]
  41b5d5:	iret   
  41b5d6:	(bad)  
  41b5d7:	in     eax,dx
  41b5d8:	mov    eax,ds:0xaec59fce
  41b5dd:	iret   
  41b5de:	cdq    
  41b5df:	sub    eax,0x7e0ffeeb
  41b5e4:	or     edi,esi
  41b5e6:	xchg   esi,eax
  41b5e7:	add    al,0x8a
  41b5e9:	daa    
  41b5ea:	add    al,0x11
  41b5ec:	jl     0x41b5a7
  41b5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ef:	add    BYTE PTR [ebp-0x19],ah
  41b5f2:	fldenv [ecx+0x33]
  41b5f5:	xchg   ax,ax
  41b5f7:	fcmovb st,st(4)
  41b5f9:	mov    al,ds:0x53939802
  41b5fe:	jl     0x41b5cc
  41b600:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b602:	shl    ah,cl
  41b604:	or     DWORD PTR [edx],0x18a8901d
  41b60a:	or     eax,0xcb79b44e
  41b60f:	push   ecx
  41b610:	repnz bound esi,QWORD PTR [ebp+0x18b5770a]
  41b617:	js     0x41b59f
  41b619:	push   esi
  41b61a:	mov    ?,WORD PTR [esi]
  41b61c:	xor    esi,DWORD PTR [eax+0x54f0654b]
  41b622:	repnz or bh,BYTE PTR [ebp+eax*8+0x1a458373]
  41b62a:	jmp    0x27b8:0xae684610
  41b631:	stc    
  41b632:	pop    ebp
  41b633:	adc    dh,0xf9
  41b636:	sti    
  41b637:	xchg   esp,eax
  41b638:	jge    0x41b673
  41b63a:	lds    eax,FWORD PTR [ebp+edx*4-0x27117b7c]
  41b641:	lahf   
  41b642:	test   ah,cl
  41b644:	lea    esp,[eax]
  41b646:	and    ecx,DWORD PTR [eax]
  41b648:	sbb    al,0xeb
  41b64a:	lahf   
  41b64b:	push   es
  41b64c:	ss jecxz 0x41b628
  41b64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b650:	daa    
  41b651:	out    dx,al
  41b652:	fsubr  QWORD PTR [ecx-0x9c4dd57]
  41b658:	scas   eax,DWORD PTR es:[edi]
  41b659:	mov    al,0x30
  41b65b:	dec    edx
  41b65c:	out    dx,al
  41b65d:	pusha  
  41b65e:	add    BYTE PTR [eax],al
  41b660:	add    BYTE PTR [eax],al
  41b662:	(bad)  
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	popa   
  41b66f:	xchg   esi,eax
  41b670:	into   
  41b671:	ret    0x3295
  41b674:	add    DWORD PTR [eax],eax
  41b676:	hlt    
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR ds:0x29438f64,ch
  41b67f:	adc    BYTE PTR [edi-0x2facb1ed],0xff
  41b686:	mov    WORD PTR [ebp+0x63e49c9d],gs
  41b68c:	push   edi
  41b68d:	test   BYTE PTR [ebp-0x32],dh
  41b690:	cmp    eax,0x27af6e16
  41b695:	adc    eax,0x4f4c84ec
  41b69a:	or     ah,BYTE PTR [esi]
  41b69c:	enter  0x9441,0xd7
  41b6a0:	dec    ebx
  41b6a1:	lahf   
  41b6a2:	fsub   QWORD PTR [edx+0x2c]
  41b6a5:	pop    ds
  41b6a6:	or     DWORD PTR [ebx-0x69883c2],0x9e73030b
  41b6b0:	xchg   ebx,eax
  41b6b1:	mov    al,ds:0xfd25e51c
  41b6b6:	and    DWORD PTR [esi+0x20085229],edi
  41b6bc:	fldenv [esi-0x71]
  41b6bf:	sub    eax,0xc22f8637
  41b6c4:	sbb    eax,DWORD PTR [eax]
  41b6c6:	inc    ebx
  41b6c7:	(bad)  
  41b6c8:	mov    ebp,DWORD PTR [ebx-0xc93350b]
  41b6ce:	xchg   edx,eax
  41b6cf:	mov    ds:0xdc8284b9,eax
  41b6d4:	inc    ebp
  41b6d5:	das    
  41b6d6:	jp     0x41b6e8
  41b6d8:	(bad)  
  41b6da:	sub    bl,BYTE PTR [ecx+0x48]
  41b6dd:	ficom  DWORD PTR [ebx+0x670ed3e9]
  41b6e3:	in     al,dx
  41b6e4:	pop    ss
  41b6e5:	pop    ss
  41b6e6:	push   ebp
  41b6e7:	loop   0x41b6d8
  41b6e9:	test   DWORD PTR [ecx],edi
  41b6eb:	inc    ebx
  41b6ec:	aam    0xb1
  41b6ee:	mul    BYTE PTR [eax+0x19]
  41b6f1:	enter  0xc90d,0xad
  41b6f5:	jp     0x41b6e4
  41b6f7:	dec    esi
  41b6f8:	imul   esp,DWORD PTR [ebp+0x3b],0x36
  41b6fc:	xchg   DWORD PTR [eax],ebp
  41b6fe:	fucom  st(5)
  41b700:	cmp    BYTE PTR [edi+0x67861efd],0x13
  41b707:	pop    esp
  41b708:	iret   
  41b709:	add    al,0xcf
  41b70b:	cwde   
  41b70c:	inc    eax
  41b70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b70e:	in     al,0xe3
  41b710:	jge    0x41b77c
  41b712:	dec    ebx
  41b713:	mov    edi,DWORD PTR [ebx-0x26350581]
  41b719:	pop    ss
  41b71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71b:	mov    edi,0x9bf04a51
  41b720:	or     BYTE PTR [esp+esi*8-0x7a],dh
  41b724:	(bad)
  41b727:	adc    ebp,esi
  41b729:	fsincos 
  41b72b:	pop    esp
  41b72c:	or     al,0xb5
  41b72e:	pop    ecx
  41b72f:	stos   BYTE PTR es:[edi],al
  41b730:	mov    edi,0xeffe39bc
  41b735:	shl    DWORD PTR [edx-0x67],cl
  41b738:	scas   al,BYTE PTR es:[edi]
  41b739:	into   
  41b73a:	lods   eax,DWORD PTR ds:[esi]
  41b73b:	test   bh,ch
  41b73d:	es sbb esp,edi
  41b740:	add    ecx,DWORD PTR [ebp-0x45]
  41b743:	inc    ebx
  41b744:	push   edx
  41b745:	xor    eax,0x5c23564c
  41b74a:	push   esi
  41b74b:	les    ecx,FWORD PTR [ebp+0x468321c5]
  41b751:	adc    DWORD PTR [edi+eax*4],ecx
  41b754:	jae    0x41b714
  41b756:	mov    DWORD PTR [esi-0x6ccd4f07],0x6c3cc9c0
  41b760:	jns    0x41b71a
  41b762:	mov    dl,0xd3
  41b764:	cmp    al,0xe
  41b766:	inc    ebx
  41b767:	arpl   WORD PTR [ecx],ax
  41b769:	jmp    0x41b7c5
  41b76b:	mov    BYTE PTR ds:0xd5b3376d,dl
  41b771:	fs data16 and al,0x38
  41b775:	jge    0x41b7ac
  41b777:	xchg   esp,eax
  41b778:	mov    ch,0x1f
  41b77a:	es aam 0x8d
  41b77d:	je     0x41b7f9
  41b77f:	mov    ah,0x2
  41b781:	loop   0x41b775
  41b783:	shl    BYTE PTR ds:0x23e1f8cb,cl
  41b789:	mov    dl,0xd2
  41b78b:	bound  esp,QWORD PTR [edx+0x4a7bef35]
  41b791:	and    eax,0x1c183883
  41b796:	les    edi,FWORD PTR [ebp+esi*8-0x6]
  41b79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79b:	(bad)  
  41b79c:	jb     0x41b7f6
  41b79e:	cmp    al,0xba
  41b7a0:	mov    dh,0x44
  41b7a2:	sti    
  41b7a3:	rcr    BYTE PTR [ecx+0x76],1
  41b7a6:	pop    ds
  41b7a7:	out    dx,al
  41b7a8:	and    DWORD PTR [ecx+0x43e41653],0xffffffc1
  41b7af:	in     al,0x38
  41b7b1:	dec    ecx
  41b7b2:	icebp  
  41b7b3:	jp     0x41b737
  41b7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b6:	enter  0x34b1,0x49
  41b7ba:	inc    ebx
  41b7bb:	mov    bh,0xa1
  41b7bd:	pop    ss
  41b7be:	mov    esp,0x8fae544e
  41b7c3:	test   DWORD PTR [ebp+0x4e],esp
  41b7c6:	cmp    al,0xd6
  41b7c8:	ja     0x41b816
  41b7ca:	and    al,0x44
  41b7cc:	test   ebp,ebx
  41b7ce:	(bad)  
  41b7cf:	xchg   ecx,eax
  41b7d0:	imul   eax,DWORD PTR [esp+ebp*1],0xe771b2e0
  41b7d7:	in     eax,dx
  41b7d8:	and    bh,BYTE PTR [eax+0x42da2c76]
  41b7de:	push   ds
  41b7df:	pop    edi
  41b7e0:	or     eax,0x9af2ce83
  41b7e5:	cmp    edi,ebx
  41b7e7:	sub    al,0x57
  41b7e9:	jbe    0x41b7df
  41b7eb:	stos   BYTE PTR es:[edi],al
  41b7ec:	mov    al,ds:0x1b7658ab
  41b7f1:	mov    ah,BYTE PTR [eax+0x4a]
  41b7f4:	jg     0x41b7ca
  41b7f6:	or     edi,ecx
  41b7f8:	xor    esi,DWORD PTR [edx+0x3e]
  41b7fb:	mov    edi,0x6a8c5841
  41b800:	mov    BYTE PTR [edx-0x41644fd1],0x64
  41b807:	and    BYTE PTR [edi],0xa0
  41b80a:	test   eax,0x8e1a9003
  41b80f:	and    eax,0xf55db792
  41b814:	pusha  
  41b815:	mov    dl,0xc0
  41b817:	adc    BYTE PTR [esi],cl
  41b819:	mov    dl,0x5e
  41b81b:	test   al,0xd5
  41b81d:	pushw  0x75a5
  41b821:	mov    ebx,0x4b8a6321
  41b826:	mov    eax,0xe4410ba0
  41b82b:	sub    dl,0x10
  41b82e:	jbe    0x41b893
  41b830:	loop   0x41b85c
  41b832:	ret    
  41b833:	sub    al,BYTE PTR [ecx]
  41b835:	dec    ecx
  41b836:	mul    DWORD PTR [ecx]
  41b838:	out    0x8d,al
  41b83a:	and    al,0x72
  41b83c:	int3   
  41b83d:	pop    edx
  41b83e:	xor    BYTE PTR [ebx],ch
  41b840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b841:	inc    eax
  41b842:	mov    es,WORD PTR [eax-0x78]
  41b845:	cmp    DWORD PTR [ecx-0x37a67fcb],ebp
  41b84b:	test   BYTE PTR [ebx+eax*4],0x5b
  41b84f:	cdq    
  41b850:	mov    bh,0xff
  41b852:	xor    bl,BYTE PTR [edx]
  41b854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b855:	std    
  41b856:	push   edx
  41b857:	lock jb 0x41b824
  41b85a:	push   0x2a4aa551
  41b85f:	ret    
  41b860:	sar    DWORD PTR [eax-0x7400fd40],1
  41b866:	add    eax,0x1d3d8c41
  41b86b:	outs   dx,DWORD PTR es:[esi]
  41b86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b86e:	shl    DWORD PTR [ebx+0x58],1
  41b871:	jmp    0x41b850
  41b873:	shl    DWORD PTR [esi-0x7b],cl
  41b876:	pop    ebx
  41b877:	push   ds
  41b878:	jmp    0xc30a5212
  41b87d:	jns    0x41b839
  41b87f:	cmp    al,0xa5
  41b881:	sub    eax,0x87e1ead2
  41b886:	mov    bh,0x16
  41b888:	jb     0x41b8ba
  41b88a:	mov    ecx,0x8be1dbce
  41b88f:	lods   al,BYTE PTR ds:[esi]
  41b890:	(bad)  
  41b891:	fst    QWORD PTR ds:0x11d60c89
  41b897:	sbb    ah,dl
  41b899:	leave  
  41b89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b89b:	and    dl,BYTE PTR [eax+0x4069cd70]
  41b8a1:	(bad)  
  41b8a3:	mov    ecx,0xe965af3f
  41b8a8:	scas   eax,DWORD PTR es:[edi]
  41b8a9:	mov    edx,0xc013e2db
  41b8ae:	out    0x83,al
  41b8b0:	ds inc ebp
  41b8b2:	mov    DWORD PTR [edx+0x7848fd42],ebx
  41b8b8:	jb     0x41b923
  41b8ba:	(bad)  
  41b8bc:	xchg   edx,eax
  41b8bd:	adc    BYTE PTR [eax],cl
  41b8bf:	shl    BYTE PTR [edi],0xc7
  41b8c2:	retf   
  41b8c3:	js     0x41b8bf
  41b8c5:	dec    esi
  41b8c6:	push   ecx
  41b8c7:	test   al,0x34
  41b8c9:	push   esi
  41b8ca:	imul   esp,eax,0x38c8aacc
  41b8d0:	adc    DWORD PTR ss:[esi+0x4b9bfdd1],0xade287ef
  41b8db:	(bad)
  41b8de:	sub    bl,BYTE PTR [ebx+0x5762ce6b]
  41b8e4:	aaa    
  41b8e5:	xchg   esi,eax
  41b8e6:	inc    eax
  41b8e7:	push   esi
  41b8e8:	inc    edi
  41b8e9:	mov    al,0x6c
  41b8eb:	call   0xb9fe:0x4772ecb0
  41b8f2:	clc    
  41b8f3:	ins    DWORD PTR es:[edi],dx
  41b8f4:	iret   
  41b8f5:	scas   eax,DWORD PTR es:[edi]
  41b8f6:	sbb    dl,BYTE PTR [eax]
  41b8f8:	dec    esp
  41b8f9:	xor    DWORD PTR [ecx+0x6f],esi
  41b8fc:	sbb    BYTE PTR [esi+0x75],bh
  41b8ff:	push   esi
  41b900:	jg     0x41b96b
  41b902:	mov    bl,0xf
  41b904:	mov    esp,0xb75bfd7a
  41b909:	adc    eax,0x5bffb9e0
  41b90e:	mov    ecx,DWORD PTR [eax-0x4c94a655]
  41b914:	cmp    al,0x55
  41b916:	adc    dl,bl
  41b918:	cdq    
  41b919:	mov    al,ds:0xbccfda
  41b91e:	loop   0x41b977
  41b920:	pop    esp
  41b921:	dec    esp
  41b922:	aad    0x7b
  41b924:	ror    bh,cl
  41b926:	inc    ebp
  41b927:	or     DWORD PTR [ebx+0xe],edx
  41b92a:	pop    ebp
  41b92b:	pop    ss
  41b92c:	mov    eax,0x2be0a9d5
  41b931:	iret   
  41b932:	jns    0x41b948
  41b934:	and    BYTE PTR ds:0x4f44114d,al
  41b93a:	jbe    0x41b902
  41b93c:	aas    
  41b93d:	loope  0x41b93e
  41b93f:	dec    ebx
  41b940:	sbb    ecx,DWORD PTR [eax+0x366ac7eb]
  41b946:	mov    ecx,0xdd78e75f
  41b94b:	jmp    0x3529:0x938b37f3
  41b952:	es loop 0x41b96d
  41b955:	mov    edx,0x27ab9740
  41b95a:	sub    esp,DWORD PTR [edx-0x679514f5]
  41b960:	out    0x5c,al
  41b962:	(bad)  
  41b963:	xor    dl,ch
  41b965:	xchg   ecx,eax
  41b966:	bnd jge 0x41b987
  41b969:	into   
  41b96a:	nop
  41b96b:	in     eax,dx
  41b96c:	dec    edx
  41b96d:	fistp  QWORD PTR [ecx-0x75]
  41b970:	pop    esp
  41b971:	js     0x41b9d7
  41b973:	dec    ebp
  41b974:	outs   dx,DWORD PTR ds:[esi]
  41b975:	stc    
  41b976:	(bad)  
  41b977:	jnp    0x41b9e9
  41b979:	je     0x41b976
  41b97b:	push   edi
  41b97c:	dec    esp
  41b97d:	sub    edi,DWORD PTR [eax+ecx*4+0x16480be9]
  41b984:	out    0x6,eax
  41b986:	sub    eax,0x77b4c785
  41b98b:	and    esp,DWORD PTR [ecx]
  41b98d:	jge    0x41b9e1
  41b98f:	push   ecx
  41b990:	imul   esp,DWORD PTR [edx],0x2c57c25b
  41b996:	mov    bh,BYTE PTR [edi]
  41b998:	dec    esi
  41b999:	cmp    BYTE PTR [eax],ah
  41b99b:	fcom   DWORD PTR [esi]
  41b99d:	mov    bh,0x4d
  41b99f:	shl    DWORD PTR [ecx-0x137ab0a9],cl
  41b9a5:	adc    esp,edx
  41b9a7:	jle    0x41b93f
  41b9a9:	jns    0x41b9bb
  41b9ab:	es add cl,0x93
  41b9af:	cli    
  41b9b0:	ins    BYTE PTR es:[edi],dx
  41b9b1:	and    eax,0x7dc05e4d
  41b9b6:	add    dl,BYTE PTR [ecx+0xa]
  41b9b9:	es xchg edi,eax
  41b9bb:	sar    cl,0xae
  41b9be:	sub    eax,0xa3bd10c9
  41b9c3:	mov    DWORD PTR [ebx+ecx*2-0x58],ecx
  41b9c7:	popa   
  41b9c8:	ins    DWORD PTR es:[edi],dx
  41b9c9:	lock cmp BYTE PTR [ebx+0x78],bh
  41b9cd:	arpl   cx,ax
  41b9cf:	in     eax,0xd2
  41b9d1:	xchg   bh,ah
  41b9d3:	mov    ds:0xcfc0ccb0,al
  41b9d8:	ins    BYTE PTR es:[edi],dx
  41b9d9:	xadd   BYTE PTR ds:[edi],cl
  41b9dd:	sub    al,0x6b
  41b9df:	sub    al,0xd7
  41b9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e2:	pop    ecx
  41b9e3:	dec    esi
  41b9e4:	scas   eax,DWORD PTR es:[edi]
  41b9e5:	dec    esp
  41b9e6:	daa    
  41b9e7:	sub    BYTE PTR [esi+0x74],dl
  41b9ea:	je     0x41ba3e
  41b9ec:	or     ah,BYTE PTR [ecx-0x3a]
  41b9ef:	scas   al,BYTE PTR es:[edi]
  41b9f0:	jbe    0x41ba33
  41b9f2:	adc    eax,0xc4eb31a6
  41b9f7:	dec    esp
  41b9f8:	xor    BYTE PTR [ecx],ch
  41b9fa:	cmp    BYTE PTR [ebx+0x8613233],dh
  41ba00:	mov    esp,ebp
  41ba02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba03:	jp     0x41b9b8
  41ba05:	dec    ebp
  41ba06:	nop
  41ba07:	jbe    0x41b9cb
  41ba09:	cmp    BYTE PTR [eax],al
  41ba0b:	loopne 0x41ba19
  41ba0d:	mov    esi,0x65d4ed1
  41ba12:	sahf   
  41ba13:	mov    WORD PTR [edi-0x32],ss
  41ba16:	push   ebp
  41ba17:	inc    edx
  41ba18:	push   0x44952f7f
  41ba1d:	xchg   esi,eax
  41ba1e:	inc    ebx
  41ba1f:	fbld   TBYTE PTR [edx]
  41ba21:	fcomp  QWORD PTR [edi+0x38]
  41ba24:	pop    ecx
  41ba25:	lods   eax,DWORD PTR ds:[esi]
  41ba26:	les    ecx,FWORD PTR [ebp+0x2a9e23c0]
  41ba2c:	aam    0x2a
  41ba2e:	jp     0x41ba61
  41ba30:	cmp    esp,DWORD PTR [ecx+eax*4]
  41ba33:	rol    BYTE PTR [ebp+0x11e69df5],1
  41ba39:	inc    ecx
  41ba3a:	jle    0x41b9d6
  41ba3c:	jb     0x41ba02
  41ba3e:	xchg   DWORD PTR [esi+0x3a6a68da],ecx
  41ba44:	adc    bh,BYTE PTR [ecx+ebp*8-0x1d]
  41ba48:	addr16 ja 0x41ba62
  41ba4b:	jmp    0x41ba5b
  41ba4d:	xor    DWORD PTR [ebx],ecx
  41ba4f:	xlat   BYTE PTR ds:[ebx]
  41ba50:	fild   WORD PTR [ebp-0x47]
  41ba53:	(bad)
  41ba57:	add    al,0xab
  41ba59:	cmc    
  41ba5a:	cmp    ah,dh
  41ba5c:	repz aad 0xde
  41ba5f:	loope  0x41ba16
  41ba61:	leave  
  41ba62:	cmp    ebx,DWORD PTR [esp+edi*4+0x5320480a]
  41ba69:	inc    esp
  41ba6a:	popf   
  41ba6b:	fstp   TBYTE PTR [ebp+0x28]
  41ba6e:	mov    cl,dl
  41ba70:	add    cl,ah
  41ba72:	and    eax,DWORD PTR [edi]
  41ba74:	pop    edx
  41ba75:	pop    es
  41ba76:	pop    edi
  41ba77:	jbe    0x41ba93
  41ba79:	sti    
  41ba7a:	add    al,0x53
  41ba7c:	leave  
  41ba7d:	xor    eax,0xd634df44
  41ba82:	jno    0x41ba41
  41ba84:	and    BYTE PTR [edx+0x5643d343],ah
  41ba8a:	popf   
  41ba8b:	jl     0x41ba2c
  41ba8d:	jle    0x41bad0
  41ba8f:	mov    ch,0xc2
  41ba91:	sbb    eax,edx
  41ba93:	add    DWORD PTR [ecx+0x2ad51fc8],0xffffffbe
  41ba9a:	jne    0x41ba55
  41ba9c:	push   ebp
  41ba9e:	loop   0x41ba27
  41baa0:	arpl   WORD PTR [esi],di
  41baa2:	xor    bl,BYTE PTR [edi*1+0x76f75c22]
  41baa9:	lds    edx,FWORD PTR [ebp-0x31]
  41baac:	pop    edi
  41baad:	data16 (bad) [ecx]
  41bab0:	(bad)  [edx-0x3fad2eb8]
  41bab6:	mov    BYTE PTR [edi+0x69822a66],0xb4
  41babd:	sub    edx,ebx
  41babf:	ret    0x1411
  41bac2:	push   ds
  41bac3:	adc    dl,bh
  41bac5:	in     al,0x8
  41bac7:	jbe    0x41bb1f
  41bac9:	inc    ecx
  41baca:	lock mov ah,0x8
  41bacd:	enter  0x41e9,0xc4
  41bad1:	std    
  41bad2:	sub    al,0x4
  41bad4:	push   edx
  41bad5:	aad    0x40
  41bad7:	or     edi,esp
  41bad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bada:	ins    DWORD PTR es:[edi],dx
  41badb:	clc    
  41badc:	xchg   DWORD PTR [esi-0x27],ebx
  41badf:	and    al,0x60
  41bae1:	imul   ebx,DWORD PTR [ecx+0x38430827],0x7e5e364a
  41baeb:	jno    0x41bb2a
  41baed:	sub    DWORD PTR [ebp+0x3],eax
  41baf0:	add    eax,0x5ab33941
  41baf5:	jb     0x41baf0
  41baf7:	xchg   esp,eax
  41baf8:	daa    
  41baf9:	call   0xfd1f:0x422c1371
  41bb00:	pop    ebx
  41bb01:	dec    ebp
  41bb02:	fcmovb st,st(6)
  41bb04:	gs cwde 
  41bb06:	xchg   ebx,eax
  41bb07:	loop   0x41bb77
  41bb09:	adc    eax,0x3dfa0c03
  41bb0e:	mov    esp,0x3ff6c6aa
  41bb13:	in     al,0x2d
  41bb15:	sar    DWORD PTR [edi],cl
  41bb17:	(bad)  
  41bb18:	out    dx,eax
  41bb19:	clc    
  41bb1a:	sahf   
  41bb1b:	loopne 0x41ba9d
  41bb1d:	int3   
  41bb1e:	mov    al,ds:0x97f2065
  41bb23:	mov    ebx,0x49358a38
  41bb28:	sbb    al,0x76
  41bb2a:	mov    edi,0x392ebb5d
  41bb2f:	enter  0x1c2,0xf2
  41bb33:	ret    0x261d
  41bb36:	mov    esi,0xe22739f8
  41bb3b:	in     al,dx
  41bb3c:	inc    ebx
  41bb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3e:	lods   eax,DWORD PTR ds:[esi]
  41bb3f:	push   0x3efb905c
  41bb44:	loope  0x41bafb
  41bb46:	push   esp
  41bb47:	cdq    
  41bb48:	push   0x551e8897
  41bb4d:	xchg   edx,eax
  41bb4e:	sti    
  41bb4f:	call   0xbd36:0xc7f1329a
  41bb56:	and    ecx,ebp
  41bb58:	mov    eax,DWORD PTR [eax+0x63]
  41bb5b:	ins    DWORD PTR es:[edi],dx
  41bb5c:	sub    DWORD PTR [ebp-0x8],edx
  41bb5f:	(bad)  
  41bb60:	push   eax
  41bb61:	in     eax,dx
  41bb62:	test   BYTE PTR ds:0x50e472f4,ah
  41bb68:	and    DWORD PTR [eax],ecx
  41bb6a:	pop    ecx
  41bb6b:	dec    eax
  41bb6c:	and    ah,BYTE PTR [ecx]
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xe1442583
  41bb7f:	xor    al,0x26
  41bb81:	int3   
  41bb82:	mov    DWORD PTR [edi],esi
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	hlt    
  41bb87:	add    al,0x0
  41bb89:	add    BYTE PTR [esi],ch
  41bb8b:	clc    
  41bb8c:	add    DWORD PTR [ecx-0xe87e237],esp
  41bb92:	mov    ecx,0x4b2c5b80
  41bb97:	mov    esp,0xa1e9490f
  41bb9c:	lods   al,BYTE PTR ds:[esi]
  41bb9d:	push   ds
  41bb9e:	jbe    0x41bc07
  41bba0:	imul   edi,DWORD PTR [ebx-0x2a4df732],0xffffffbe
  41bba7:	mov    al,BYTE PTR [esi-0x79]
  41bbaa:	xor    ebx,DWORD PTR [ebx-0x77]
  41bbad:	ja     0x41bb64
  41bbaf:	adc    al,0x88
  41bbb1:	imul   BYTE PTR [esi-0x6e]
  41bbb4:	push   ecx
  41bbb5:	test   dl,bl
  41bbb7:	and    eax,0xadf264ba
  41bbbc:	cdq    
  41bbbd:	inc    ebp
  41bbbe:	fild   DWORD PTR [ebx+0x63]
  41bbc1:	jge    0x41bc25
  41bbc3:	loope  0x41bbbd
  41bbc5:	add    DWORD PTR [ebx],ebp
  41bbc7:	add    al,0xf6
  41bbc9:	pop    ds
  41bbca:	and    esi,DWORD PTR [ebx]
  41bbcc:	jmp    0x41bbc3
  41bbce:	int3   
  41bbcf:	add    eax,0x32e4144e
  41bbd4:	dec    edi
  41bbd5:	enter  0x1e2c,0x4f
  41bbd9:	test   al,0xa
  41bbdb:	pop    es
  41bbdc:	adc    BYTE PTR [edx-0x2b],bl
  41bbdf:	mov    ds:0xe5406068,eax
  41bbe4:	dec    esp
  41bbe5:	mov    ebx,ebp
  41bbe7:	test   BYTE PTR [edi],0x76
  41bbea:	sub    cl,BYTE PTR [edi+0x6aaa748f]
  41bbf0:	dec    esi
  41bbf1:	xchg   esp,eax
  41bbf2:	mov    ?,WORD PTR [edx]
  41bbf4:	fstp   TBYTE PTR ds:0x9f1fc5b5
  41bbfa:	ds pop eax
  41bbfc:	jns    0x41bb9e
  41bbfe:	push   esp
  41bbff:	(bad)
  41bc03:	(bad)  
  41bc04:	(bad)  
  41bc05:	shl    BYTE PTR [ebp-0x13],1
  41bc08:	and    BYTE PTR [eax-0x16],ah
  41bc0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc0c:	push   esp
  41bc0d:	jl     0x41bbde
  41bc0f:	sar    DWORD PTR [edi+0x21],0x97
  41bc13:	sbb    ecx,DWORD PTR fs:[edi+0x17eb01c1]
  41bc1a:	add    BYTE PTR [ecx],cl
  41bc1c:	mov    ah,0xbf
  41bc1e:	add    DWORD PTR [edi+0x5a],esp
  41bc21:	cdq    
  41bc22:	push   ebx
  41bc23:	inc    esi
  41bc24:	mov    esi,0x48919b99
  41bc29:	outs   dx,DWORD PTR ds:[esi]
  41bc2a:	inc    edi
  41bc2b:	pusha  
  41bc2c:	idiv   DWORD PTR [edi-0x5a0c2578]
  41bc32:	jmp    0x41bc20
  41bc34:	mov    BYTE PTR [ebx+0x23],bl
  41bc37:	iret   
  41bc38:	es mov esi,0x509bcee7
  41bc3e:	jg     0x41bc9f
  41bc40:	inc    edi
  41bc41:	outs   dx,BYTE PTR ds:[esi]
  41bc42:	add    dh,BYTE PTR [eax]
  41bc44:	adc    DWORD PTR [ebp+0x5928d644],edi
  41bc4a:	retf   
  41bc4b:	xchg   ebx,eax
  41bc4c:	or     DWORD PTR [esi+0x64d78402],eax
  41bc52:	sbb    edx,eax
  41bc54:	popa   
  41bc55:	pop    es
  41bc56:	mov    ebx,0x7958240b
  41bc5b:	ds (bad) 
  41bc5e:	mov    dl,0xcf
  41bc60:	inc    esi
  41bc61:	xchg   ecx,eax
  41bc62:	or     eax,0xc539ed60
  41bc67:	int3   
  41bc68:	stos   DWORD PTR es:[edi],eax
  41bc69:	push   0x61b78e14
  41bc6e:	or     DWORD PTR [ebx-0x757416c],esp
  41bc74:	mov    dh,0x7c
  41bc76:	mov    BYTE PTR [eax+eiz*8],dl
  41bc79:	pop    ecx
  41bc7a:	leave  
  41bc7b:	das    
  41bc7c:	adc    esp,DWORD PTR [esi+0x6f]
  41bc7f:	jnp    0x41bc12
  41bc81:	pop    ebx
  41bc82:	in     al,0x72
  41bc84:	xchg   edi,eax
  41bc85:	out    dx,eax
  41bc86:	loop   0x41bcef
  41bc88:	jo     0x41bc86
  41bc8a:	inc    eax
  41bc8b:	mov    al,0x29
  41bc8d:	sub    BYTE PTR [ecx+eiz*1],ch
  41bc90:	sahf   
  41bc91:	ins    DWORD PTR es:[edi],dx
  41bc92:	call   0xb77818
  41bc97:	clc    
  41bc98:	fwait
  41bc99:	and    al,0x60
  41bc9b:	cmp    DWORD PTR [ecx-0x40535faf],ebp
  41bca1:	imul   BYTE PTR [ebx]
  41bca3:	je     0x41bcba
  41bca5:	iret   
  41bca6:	push   es
  41bca7:	lock mov esi,0x6dfb6558
  41bcad:	das    
  41bcae:	clc    
  41bcaf:	xor    ecx,DWORD PTR [esi+edi*4]
  41bcb2:	lahf   
  41bcb3:	test   BYTE PTR [eax+0x3bbc6323],0x98
  41bcba:	xor    al,0x7e
  41bcbc:	outs   dx,BYTE PTR ds:[esi]
  41bcbd:	out    0x3b,al
  41bcbf:	lods   al,BYTE PTR ds:[esi]
  41bcc0:	jne    0x41bc6c
  41bcc2:	inc    ecx
  41bcc3:	sbb    eax,DWORD PTR [edx-0x2e]
  41bcc6:	pop    es
  41bcc7:	ins    BYTE PTR es:[edi],dx
  41bcc8:	enter  0x61de,0x96
  41bccc:	cmp    DWORD PTR [eax-0xc],edx
  41bccf:	outs   dx,BYTE PTR ds:[esi]
  41bcd0:	in     eax,dx
  41bcd1:	sbb    DWORD PTR [di+0x15],edx
  41bcd5:	nop
  41bcd6:	cmp    al,0xd5
  41bcd8:	pop    ebp
  41bcd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcda:	sbb    eax,DWORD PTR [eax]
  41bcdc:	icebp  
  41bcdd:	push   ebx
  41bcde:	or     DWORD PTR [ebx-0x51],0x7ce57ca1
  41bce5:	sub    al,0xc8
  41bce7:	jl     0x41bcc8
  41bce9:	push   edi
  41bcea:	rcl    BYTE PTR [ecx-0x70],0x3a
  41bcee:	adc    eax,0xeb96c39d
  41bcf3:	xor    dh,BYTE PTR [ebp+0x5c]
  41bcf6:	xor    al,0xa0
  41bcf8:	lds    esp,FWORD PTR [ebp-0x7a]
  41bcfb:	fwait
  41bcfc:	inc    edi
  41bcfd:	xchg   ebx,eax
  41bcfe:	lahf   
  41bcff:	test   al,0xe
  41bd01:	fsubr  QWORD PTR [edx]
  41bd03:	push   0x70
  41bd05:	fist   WORD PTR [esi-0x53d68a21]
  41bd0b:	ret    0xd3bf
  41bd0e:	mov    dh,0xde
  41bd10:	xchg   BYTE PTR [edx-0x6a],al
  41bd13:	cmp    eax,0x962578c1
  41bd18:	enter  0x10d8,0x6c
  41bd1c:	mov    ecx,0x5531a396
  41bd21:	mov    eax,ds:0x696345f1
  41bd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd27:	(bad)  
  41bd29:	retf   0x276e
  41bd2c:	xchg   ecx,eax
  41bd2d:	mov    ch,0x38
  41bd2f:	into   
  41bd30:	and    BYTE PTR [esi-0x39],0x63
  41bd34:	lods   al,BYTE PTR ds:[esi]
  41bd35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd36:	test   eax,0xe18c81ba
  41bd3b:	xchg   esp,eax
  41bd3c:	es push edi
  41bd3e:	pushf  
  41bd3f:	lahf   
  41bd40:	mov    WORD PTR [ebp+ebp*1+0x0],cs
  41bd44:	xor    ch,BYTE PTR [ecx]
  41bd46:	inc    ebp
  41bd47:	mov    ecx,DWORD PTR [eax+0x1b037549]
  41bd4d:	cdq    
  41bd4e:	inc    ebx
  41bd4f:	xor    BYTE PTR [eax-0x1a7f432b],0x24
  41bd56:	xor    ah,dh
  41bd58:	nop
  41bd59:	jae    0x41bd3e
  41bd5b:	mov    esi,0xae875e6c
  41bd60:	inc    edi
  41bd61:	sub    al,0x88
  41bd63:	push   esp
  41bd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd65:	adc    edx,DWORD PTR [esi]
  41bd67:	rcr    ecx,1
  41bd69:	sub    BYTE PTR [edx+ecx*4+0x72],al
  41bd6d:	fmul   st(3),st
  41bd6f:	pop    esp
  41bd70:	loop   0x41bd0a
  41bd72:	imul   edx,DWORD PTR [ebx-0x1e57776a],0x40
  41bd79:	xchg   DWORD PTR [ebx+0x6c],esi
  41bd7c:	outs   dx,DWORD PTR ds:[esi]
  41bd7d:	mov    ds:0xede6bba6,eax
  41bd82:	add    bh,BYTE PTR [edi]
  41bd84:	xlat   BYTE PTR ds:[ebx]
  41bd85:	ss mov bh,0x4e
  41bd88:	add    bh,BYTE PTR [esi]
  41bd8a:	xchg   esp,eax
  41bd8b:	mov    BYTE PTR [eax+0x167bfd70],al
  41bd91:	mov    eax,ds:0x4f19d3c4
  41bd96:	retf   
  41bd97:	cli    
  41bd98:	test   al,bh
  41bd9a:	adc    edi,DWORD PTR [eax-0x290d9e77]
  41bda0:	push   ecx
  41bda1:	hlt    
  41bda2:	pushf  
  41bda3:	adc    ah,ch
  41bda5:	mov    WORD PTR [ebx+0xe],fs
  41bda8:	push   ebx
  41bda9:	imul   ebp,edi,0x82a28c88
  41bdaf:	mov    al,0x9e
  41bdb1:	add    al,0xed
  41bdb3:	and    DWORD PTR [esi-0x436cbb2c],0x79135cce
  41bdbd:	ja     0x41bd9d
  41bdbf:	loop   0x41bd76
  41bdc1:	imul   esp,DWORD PTR [ebp+edx*1+0x52],0x2a
  41bdc6:	xor    esi,DWORD PTR [ebx]
  41bdc8:	and    BYTE PTR [ebp+0x16],0x3d
  41bdcc:	add    al,0x8d
  41bdce:	loop   0x41bdc2
  41bdd0:	mov    WORD PTR [esi+edx*1+0x28],es
  41bdd4:	cmp    BYTE PTR cs:[edi+0x1],bl
  41bdd8:	dec    esp
  41bdd9:	(bad)  
  41bdda:	jl     0x41bdfd
  41bddc:	mov    al,0x42
  41bdde:	push   ss
  41bddf:	out    0xd2,eax
  41bde1:	cwde   
  41bde2:	enter  0xe08a,0xf5
  41bde6:	test   ah,al
  41bde8:	mov    al,ch
  41bdea:	xchg   edi,eax
  41bdeb:	cmp    eax,0x1592f88a
  41bdf0:	adc    eax,0x6367e8a3
  41bdf5:	jae    0x41bdf5
  41bdf7:	loope  0x41bd7d
  41bdf9:	popa   
  41bdfa:	inc    ecx
  41bdfb:	out    0xf6,al
  41bdfd:	rol    DWORD PTR [edx],0xb5
  41be00:	je     0x41be2c
  41be02:	mov    bh,0x51
  41be04:	dec    edx
  41be05:	dec    esp
  41be06:	jp     0x41be50
  41be08:	mov    edi,?
  41be0a:	add    edi,esi
  41be0c:	jmp    0x41be6f
  41be0e:	mov    ah,0xca
  41be10:	cmp    eax,0xfc0f6146
  41be15:	mov    eax,0xa0bc212
  41be1a:	rcl    BYTE PTR [ebp-0x5c50eff6],1
  41be20:	add    al,BYTE PTR es:[eax]
  41be23:	mov    DWORD PTR [edx-0x115cf980],ecx
  41be29:	out    dx,al
  41be2a:	pop    ebx
  41be2b:	call   0x1741:0xc34f51ac
  41be32:	loopne 0x41bdd9
  41be34:	add    eax,0xab5c4e22
  41be39:	push   ds
  41be3a:	mov    DWORD PTR [ecx],0x2c5ec65c
  41be40:	jnp    0x41be88
  41be42:	dec    ecx
  41be43:	xchg   BYTE PTR [edx+esi*1],ah
  41be46:	add    eax,0x3c479638
  41be4b:	mov    ecx,0xccc696c8
  41be50:	jne    0x41be5a
  41be52:	mov    WORD PTR [edx+ebp*1+0xd],fs
  41be56:	ins    BYTE PTR es:[edi],dx
  41be57:	jns    0x41bea1
  41be59:	mov    al,ds:0xab3510d4
  41be5e:	test   eax,0x7bff85c4
  41be63:	mov    esi,0x865bb6af
  41be68:	cwde   
  41be69:	nop
  41be6a:	(bad)  
  41be6b:	arpl   WORD PTR [ebx],ax
  41be6d:	dec    edi
  41be6e:	jo     0x41bdf8
  41be70:	push   cs
  41be71:	imul   ecx,DWORD PTR [edi],0xc
  41be74:	rcr    BYTE PTR [edx],1
  41be76:	pop    edx
  41be77:	dec    esp
  41be78:	inc    eax
  41be79:	mov    cl,0xd0
  41be7b:	xchg   BYTE PTR ds:0x4c0b673d,bl
  41be81:	popf   
  41be82:	std    
  41be83:	call   0xdf43947e
  41be88:	or     BYTE PTR [ecx],dh
  41be8a:	and    BYTE PTR [edi],ah
  41be8c:	out    dx,al
  41be8d:	inc    ecx
  41be8e:	in     eax,0x90
  41be90:	ins    BYTE PTR es:[edi],dx
  41be91:	sub    bl,BYTE PTR [edx]
  41be93:	cmc    
  41be94:	in     eax,dx
  41be95:	push   ebx
  41be96:	daa    
  41be97:	stos   DWORD PTR es:[edi],eax
  41be98:	pop    ebp
  41be99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9a:	loop   0x41be3c
  41be9c:	pop    ss
  41be9d:	mov    ch,bh
  41be9f:	xor    BYTE PTR [edx+0x6d88e4e0],cl
  41bea5:	jmp    0x81de300
  41beaa:	div    BYTE PTR [edx-0x2d]
  41bead:	or     DWORD PTR [ecx-0x6],0xffffff82
  41beb1:	leave  
  41beb2:	mov    BYTE PTR [edx+0x24d38a67],dl
  41beb8:	into   
  41beb9:	or     eax,0xa040b20c
  41bebe:	push   ebx
  41bebf:	mov    dh,BYTE PTR [ebp-0x38810832]
  41bec5:	push   ecx
  41bec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec7:	mov    ecx,0xdab96cc2
  41becc:	shl    bh,1
  41bece:	ja     0x41bf33
  41bed0:	mov    cl,0xbb
  41bed2:	stos   BYTE PTR es:[edi],al
  41bed3:	push   esp
  41bed4:	xor    edx,DWORD PTR [ecx+0x8]
  41bed7:	jmp    0xc727:0xa6df5b7c
  41bede:	pop    es
  41bedf:	outs   dx,BYTE PTR ds:[esi]
  41bee0:	dec    esp
  41bee1:	dec    ebx
  41bee2:	push   eax
  41bee3:	cmp    BYTE PTR [ebx],dh
  41bee5:	jp     0x41be8d
  41bee7:	cwde   
  41bee8:	push   esp
  41bee9:	frstor [ebp+0x1457f074]
  41beef:	nop
  41bef0:	out    dx,eax
  41bef1:	test   eax,0x8d14547f
  41bef6:	pop    es
  41bef7:	sub    al,0x20
  41bef9:	push   0xffffffc4
  41befb:	stos   DWORD PTR es:[edi],eax
  41befc:	js     0x41bf44
  41befe:	lods   ax,WORD PTR ds:[esi]
  41bf00:	out    0x3a,al
  41bf02:	cmp    ebx,DWORD PTR [ebx-0x26]
  41bf05:	scas   eax,DWORD PTR es:[edi]
  41bf06:	mov    ecx,0xe207a139
  41bf0b:	sub    eax,0x28da7906
  41bf10:	adc    DWORD PTR [esi-0x12],0xffffffab
  41bf14:	test   al,0xa1
  41bf16:	xchg   esi,eax
  41bf17:	sub    ecx,DWORD PTR [esi+0x190d50b6]
  41bf1d:	and    DWORD PTR [edi+0x3f],esi
  41bf20:	inc    edi
  41bf21:	xchg   DWORD PTR [edx+0x3c80e8f2],ecx
  41bf27:	mov    esi,0x47e8161e
  41bf2c:	pushf  
  41bf2d:	(bad)  
  41bf2e:	call   0xdb64b7cd
  41bf33:	push   0x46ef3c42
  41bf38:	loop   0x41bebf
  41bf3a:	out    dx,eax
  41bf3b:	inc    esi
  41bf3c:	imul   BYTE PTR [ebp-0x78]
  41bf3f:	neg    ebp
  41bf41:	jno    0x41bf6d
  41bf43:	push   eax
  41bf44:	cmp    dl,ch
  41bf46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf47:	push   edi
  41bf48:	and    ch,BYTE PTR ds:0x3abc9d5b
  41bf4e:	outs   dx,BYTE PTR ds:[esi]
  41bf4f:	mov    edi,0x535d93f3
  41bf54:	add    BYTE PTR [ebp+edx*1-0x55ec8cb2],dl
  41bf5b:	mov    ds:0xe734a5ac,al
  41bf60:	xor    esi,esi
  41bf62:	push   cs
  41bf63:	aad    0x3c
  41bf65:	pop    esi
  41bf66:	imul   esp,edi,0x62
  41bf69:	xchg   BYTE PTR [edx+0x7e],cl
  41bf6c:	mov    edi,0xdc92109a
  41bf71:	leave  
  41bf72:	sbb    edx,DWORD PTR [edx+0x2ca42164]
  41bf78:	ret    0x8fa1
  41bf7b:	xchg   ebp,eax
  41bf7c:	dec    ecx
  41bf7d:	cmp    DWORD PTR [edi],eax
  41bf7f:	pop    edx
  41bf80:	mov    ds:0x2fbabb7b,al
  41bf85:	iret   
  41bf86:	adc    eax,0x41df32b4
  41bf8b:	(bad)  
  41bf8c:	pusha  
  41bf8d:	int    0x43
  41bf8f:	ret    
  41bf90:	fnsave [ecx+0x1154b583]
  41bf96:	mov    al,ds:0xe8af31e7
  41bf9b:	in     eax,dx
  41bf9c:	push   ds
  41bf9d:	and    dh,BYTE PTR [eax]
  41bf9f:	mov    edi,0x5b3c1cb0
  41bfa4:	mov    DWORD PTR [ecx],ebx
  41bfa6:	or     dh,0xb9
  41bfa9:	outs   dx,DWORD PTR ds:[esi]
  41bfaa:	jne    0x41bff6
  41bfac:	ret    0xeaa5
  41bfaf:	loop   0x41bf42
  41bfb1:	adc    DWORD PTR [ecx+0xd5f2b12],0xffffffab
  41bfb8:	mov    gs,ecx
  41bfba:	mov    BYTE PTR [esi+edx*1],ah
  41bfbd:	mov    ds:0x41c6275c,eax
  41bfc2:	les    esp,FWORD PTR [edi-0x752804ac]
  41bfc8:	(bad)  
  41bfc9:	xor    eax,0x46cbe0e2
  41bfce:	fld    TBYTE PTR [ecx]
  41bfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd1:	std    
  41bfd2:	out    0x9,eax
  41bfd4:	xlat   BYTE PTR ds:[ebx]
  41bfd5:	and    BYTE PTR [esi+0x74d6ee56],dl
  41bfdb:	leave  
  41bfdc:	std    
  41bfdd:	jl     0x41bfab
  41bfdf:	xchg   edx,eax
  41bfe0:	jns    0x41c04b
  41bfe2:	or     DWORD PTR [eax],esi
  41bfe4:	xor    eax,0x2bce7d46
  41bfe9:	pop    ss
  41bfea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfeb:	retf   0x86ca
  41bfee:	cmp    ecx,DWORD PTR [esi]
  41bff0:	std    
  41bff1:	mov    ah,0x6f
  41bff3:	xor    eax,0x53499fa4
  41bff8:	sub    BYTE PTR [ebx+ebp*4],0xac
  41bffc:	clc    
  41bffd:	sub    al,0x3d
  41bfff:	push   ss
  41c000:	push   ebp
  41c001:	mov    dl,0x94
  41c003:	mov    ch,0x4
  41c005:	call   0x4c77:0x4593e080
  41c00c:	rcr    DWORD PTR [ecx],1
  41c00e:	or     dx,WORD PTR es:[esi]
  41c012:	ds mov edi,?
  41c015:	mov    WORD PTR [ebx+ebx*2+0x373d4d0a],?
  41c01c:	jmp    FWORD PTR [ebx-0x20af804a]
  41c022:	sahf   
  41c023:	into   
  41c024:	scas   eax,DWORD PTR es:[edi]
  41c025:	in     al,dx
  41c026:	xchg   ecx,eax
  41c027:	int3   
  41c028:	lock xor al,0xeb
  41c02b:	mov    ch,0x19
  41c02d:	fimul  DWORD PTR [ecx-0xa74fa3c]
  41c033:	ror    BYTE PTR [eax+0x38],cl
  41c036:	fst    QWORD PTR [edx-0x1af1b33c]
  41c03c:	fabs   
  41c03e:	add    edi,DWORD PTR [ebx-0x3eb5c48b]
  41c044:	mov    esp,DWORD PTR [ebx+0x3af8aa66]
  41c04a:	xor    bl,BYTE PTR [esi]
  41c04c:	mov    al,ds:0x1c872a8d
  41c051:	dec    edi
  41c052:	(bad)  
  41c053:	mov    edi,0xfdd21912
  41c058:	ds addr16 popa 
  41c05b:	sbb    eax,0xa4a119ec
  41c060:	ror    DWORD PTR [edx],0x2c
  41c063:	sub    bl,dh
  41c065:	test   al,0x5a
  41c067:	loope  0x41c015
  41c069:	mov    ds:0x10bcc839,eax
  41c06e:	mov    ds:0x33cf93a1,eax
  41c073:	adc    ebx,DWORD PTR [eax+ecx*1-0x78748d9b]
  41c07a:	scas   eax,DWORD PTR es:[edi]
  41c07b:	xor    eax,0x461e
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	xchg   ebp,eax
  41c08f:	ret    
  41c090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c091:	jo     0x41c110
  41c093:	cmp    al,0x1
  41c095:	add    ah,dh
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [esi],bl
  41c09b:	rcr    esp,0x53
  41c09e:	jno    0x41c0d7
  41c0a0:	lods   eax,DWORD PTR ds:[esi]
  41c0a1:	ds retf 0x33d9
  41c0a5:	std    
  41c0a6:	jp     0x41c0c3
  41c0a8:	push   edi
  41c0a9:	adc    eax,0xbfb0f181
  41c0ae:	mov    edx,0x2c06e85f
  41c0b3:	stos   BYTE PTR es:[edi],al
  41c0b4:	push   ebp
  41c0b5:	xor    al,0xb1
  41c0b7:	je     0x41c0ec
  41c0b9:	and    DWORD PTR [eax+eiz*2-0x2d2cb7fa],ebp
  41c0c0:	cmp    bl,BYTE PTR [eax]
  41c0c2:	dec    esi
  41c0c3:	dec    edi
  41c0c4:	xor    ebx,edi
  41c0c6:	rcl    edx,cl
  41c0c8:	in     eax,0x2a
  41c0ca:	or     WORD PTR [ebx],bp
  41c0cd:	out    0x11,eax
  41c0cf:	sbb    edx,DWORD PTR [edx+0x30]
  41c0d2:	aad    0x78
  41c0d4:	adc    eax,0x113d96c2
  41c0d9:	data16 jp 0x41c101
  41c0dc:	pop    eax
  41c0dd:	out    dx,eax
  41c0de:	in     eax,0x85
  41c0e0:	(bad)  [ecx-0x6e06b798]
  41c0e6:	out    0xb7,eax
  41c0e8:	mov    esp,0x12ddede3
  41c0ed:	pop    ds
  41c0ee:	pop    esi
  41c0ef:	gs xor al,BYTE PTR ds:[edx]
  41c0f3:	mov    fs,WORD PTR [esi]
  41c0f5:	adc    BYTE PTR [edx-0x25a5315b],bh
  41c0fb:	add    al,BYTE PTR [ebx]
  41c0fd:	add    dl,BYTE PTR [esi]
  41c0ff:	jl     0x41c107
  41c101:	loopne 0x41c0a4
  41c103:	aam    0x8b
  41c105:	es inc esp
  41c107:	pop    es
  41c108:	xlat   BYTE PTR ds:[ebx]
  41c109:	mov    bl,0x71
  41c10b:	xlat   BYTE PTR ds:[ebx]
  41c10c:	cmp    al,0x75
  41c10e:	adc    al,0x6a
  41c110:	popa   
  41c111:	add    eax,0xf82e1a81
  41c116:	cld    
  41c117:	addr16 xchg ebp,eax
  41c119:	rep outs dx,BYTE PTR ds:[esi]
  41c11b:	push   ds
  41c11c:	ss mov dh,ch
  41c11f:	pop    ebp
  41c120:	sbb    esp,DWORD PTR [edx+0x18e77eae]
  41c126:	sbb    al,0x5c
  41c128:	scas   al,BYTE PTR es:[edi]
  41c129:	inc    esp
  41c12a:	push   ds
  41c12b:	out    0xfb,eax
  41c12d:	or     esi,DWORD PTR [ecx-0x32]
  41c130:	sbb    edx,DWORD PTR [ebx+0x661f217a]
  41c136:	dec    ebx
  41c137:	mov    ebp,0x2dcc5192
  41c13c:	pop    ebp
  41c13d:	mov    ch,0x25
  41c13f:	jb     0x41c0c1
  41c141:	inc    ebp
  41c142:	pop    ebx
  41c143:	xchg   DWORD PTR [edx+0x7c],ebp
  41c146:	test   al,0xb6
  41c148:	adc    eax,0x480132e5
  41c14d:	mov    cl,0x10
  41c14f:	adc    eax,0xe0ac3bc4
  41c154:	test   al,0x75
  41c156:	cmp    eax,0xaba2f085
  41c15b:	(bad)  
  41c15c:	dec    edi
  41c15d:	mov    DWORD PTR [edx],edx
  41c15f:	sub    eax,0x7338aa61
  41c164:	pop    ss
  41c165:	(bad)  
  41c166:	sbb    al,0xdb
  41c168:	(bad)  
  41c169:	pop    ecx
  41c16a:	and    al,ch
  41c16c:	dec    BYTE PTR [eax+0xdbe9d3f]
  41c172:	xlat   BYTE PTR ds:[ebx]
  41c173:	xor    BYTE PTR [esi],0xf5
  41c176:	ins    BYTE PTR es:[edi],dx
  41c177:	mov    dl,0x5a
  41c179:	xchg   esi,ebp
  41c17b:	dec    ebx
  41c17c:	pop    esp
  41c17d:	push   0xa4f2db5a
  41c182:	data16 sbb BYTE PTR [ebp+edx*4+0x33107f01],dl
  41c18a:	cli    
  41c18b:	lahf   
  41c18c:	sbb    bh,bl
  41c18e:	mov    edi,0x81fec453
  41c193:	mov    eax,0x73cf4cf2
  41c198:	inc    esi
  41c199:	shl    DWORD PTR [edi+eax*8-0x59],0x6a
  41c19e:	mov    ah,0x32
  41c1a0:	push   ebx
  41c1a1:	jbe    0x41c17f
  41c1a3:	jno    0x41c14f
  41c1a5:	push   0xffffffc7
  41c1a7:	xor    eax,0xb2266e0a
  41c1ac:	sbb    esi,0xbf1c90b0
  41c1b2:	fiadd  WORD PTR ds:0x156b2059
  41c1b8:	mov    ecx,0x99d0ae0
  41c1bd:	xchg   ebp,eax
  41c1be:	and    ch,BYTE PTR [ebx+0x4071b4d7]
  41c1c4:	int    0x6e
  41c1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c7:	push   es
  41c1c8:	out    0x88,al
  41c1ca:	mov    ch,0xcd
  41c1cc:	in     eax,0xac
  41c1ce:	cmp    DWORD PTR [ecx],eax
  41c1d0:	mov    ebx,0xe5d10890
  41c1d5:	push   esp
  41c1d6:	adc    DWORD PTR [edx+0x1be697d4],esp
  41c1dc:	pop    ebx
  41c1dd:	inc    ebx
  41c1de:	dec    eax
  41c1df:	jl     0x41c222
  41c1e1:	popf   
  41c1e2:	ins    BYTE PTR es:[edi],dx
  41c1e3:	push   0xd48c2d25
  41c1e8:	int    0x14
  41c1ea:	loope  0x41c1eb
  41c1ec:	rol    BYTE PTR [edi+0x358ca8df],1
  41c1f2:	mov    BYTE PTR [eax+0x61d85380],cl
  41c1f8:	lods   al,BYTE PTR ds:[esi]
  41c1f9:	add    cl,al
  41c1fb:	mov    edi,0xd98a2568
  41c200:	jne    0x41c1d4
  41c202:	jmp    0x41c224
  41c204:	(bad)  
  41c205:	or     al,0xcf
  41c207:	ins    DWORD PTR es:[edi],dx
  41c208:	sub    eax,ecx
  41c20a:	mov    ds:0x5f8ba7fb,al
  41c20f:	mov    al,ds:0x990f5cdf
  41c214:	dec    esi
  41c215:	and    ecx,ecx
  41c217:	imul   edi,esp,0xb8fac6b6
  41c21d:	push   eax
  41c21e:	sbb    BYTE PTR [edi+0x3ac54b6c],bl
  41c224:	mov    gs,WORD PTR [esi]
  41c226:	adc    al,0x9b
  41c228:	repz fidivr DWORD PTR [edx+0x3391b1aa]
  41c22f:	mov    dl,0x21
  41c231:	jnp    0x41c2a9
  41c233:	into   
  41c234:	cmp    eax,0xfc6f977d
  41c239:	lock push esi
  41c23b:	xor    BYTE PTR [esi],bh
  41c23d:	cmp    al,0xc6
  41c23f:	rol    BYTE PTR [ebx+0x53],1
  41c242:	push   esp
  41c243:	push   esp
  41c244:	pop    es
  41c245:	xor    DWORD PTR [esp+eax*2+0x7fd084d2],ebx
  41c24c:	das    
  41c24d:	cli    
  41c24e:	and    ebx,edi
  41c250:	daa    
  41c251:	dec    ebp
  41c252:	push   es
  41c253:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c255:	adc    cl,BYTE PTR [esi-0x64]
  41c258:	mov    dl,BYTE PTR [esi+ebx*2-0x15c35df2]
  41c25f:	mov    ah,0x46
  41c261:	sbb    bh,al
  41c263:	xor    BYTE PTR [esi+edx*4+0x61db7c36],dl
  41c26a:	call   0x2c15:0xf1a1d3ef
  41c271:	mov    DWORD PTR [ebx+ebp*4+0x6bdbbfaf],ecx
  41c278:	cmc    
  41c279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c27a:	data16 adc bl,dh
  41c27d:	pop    ds
  41c27e:	outs   dx,DWORD PTR ds:[esi]
  41c27f:	add    DWORD PTR [edi-0x46],ebx
  41c282:	add    ebx,DWORD PTR [edx]
  41c284:	addr16 jnp 0x41c23e
  41c287:	out    0xf,eax
  41c289:	mov    bl,0xb8
  41c28b:	xchg   esi,eax
  41c28c:	mov    DWORD PTR [eax+0x1aa399a1],eax
  41c292:	retf   
  41c293:	test   BYTE PTR [ebx-0x40],ch
  41c296:	jp     0x41c22f
  41c298:	shr    ah,0x66
  41c29b:	pop    edx
  41c29c:	inc    ebx
  41c29d:	ins    BYTE PTR es:[edi],dx
  41c29e:	mov    ecx,0xf3e22520
  41c2a3:	push   ds
  41c2a4:	into   
  41c2a5:	sub    DWORD PTR [edx+0x58],ecx
  41c2a8:	test   al,0x67
  41c2aa:	and    edx,0x1f
  41c2ad:	jcxz   0x41c2bf
  41c2b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b1:	jp     0x41c2ad
  41c2b3:	inc    esp
  41c2b4:	rcr    BYTE PTR [edi],1
  41c2b6:	aaa    
  41c2b7:	shr    bl,0x70
  41c2ba:	bound  edx,QWORD PTR [ebp-0x997de2e]
  41c2c0:	pushf  
  41c2c1:	mov    eax,0xba3000a0
  41c2c6:	xchg   eax,esp
  41c2c8:	and    DWORD PTR ss:[ebx],eax
  41c2cb:	jmp    0xa0cf:0xe3cd8d66
  41c2d2:	les    ebx,FWORD PTR [ecx]
  41c2d4:	ror    DWORD PTR [ebx],1
  41c2d6:	pop    ebp
  41c2d7:	sbb    eax,edx
  41c2d9:	mov    ecx,0xc1f93cb3
  41c2de:	stos   DWORD PTR es:[edi],eax
  41c2df:	and    eax,0x54937766
  41c2e4:	dec    ebx
  41c2e5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c2e7:	and    BYTE PTR [eax+0x189dcfe3],ah
  41c2ed:	rol    DWORD PTR ds:0x28541f79,cl
  41c2f3:	mov    BYTE PTR [esi+0x4],ch
  41c2f6:	aas    
  41c2f7:	inc    ecx
  41c2f8:	imul   edx,DWORD PTR ds:0x2cfafa6c,0xb574b6cf
  41c302:	popa   
  41c303:	mov    cl,BYTE PTR gs:[edi-0x4c]
  41c307:	(bad)  
  41c308:	mov    esp,0x277f1fd
  41c30d:	fwait
  41c30e:	mov    esi,0x1ee8a569
  41c313:	add    BYTE PTR [eax-0x45],ah
  41c316:	cdq    
  41c317:	stos   BYTE PTR es:[edi],al
  41c318:	pop    ds
  41c319:	cwde   
  41c31a:	fucomp st(6)
  41c31c:	in     al,dx
  41c31d:	fxch   st(7)
  41c31f:	sbb    DWORD PTR [esi],eax
  41c321:	or     al,0x85
  41c323:	or     BYTE PTR [edx-0x2337e799],bh
  41c329:	push   0x9546d149
  41c32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32f:	sar    DWORD PTR [eax-0x230e7768],1
  41c335:	mov    edx,DWORD PTR [esi+0x2c]
  41c338:	pop    ebp
  41c339:	lods   al,BYTE PTR ds:[esi]
  41c33a:	xor    eax,0x823ac512
  41c33f:	and    al,BYTE PTR [edx]
  41c341:	add    eax,0xb764ff3e
  41c346:	cdq    
  41c347:	dec    DWORD PTR [eax-0xa1be274]
  41c34d:	and    bl,ch
  41c34f:	mov    ah,0xb4
  41c351:	mov    ebp,0xafa1fd47
  41c356:	xlat   BYTE PTR ds:[ebx]
  41c357:	ret    0xd075
  41c35a:	repz aas 
  41c35c:	xor    DWORD PTR [edi],eax
  41c35e:	sti    
  41c35f:	ret    
  41c360:	rol    DWORD PTR [ecx-0x6d],1
  41c363:	addr16 push ebp
  41c365:	xchg   esp,eax
  41c366:	retf   
  41c367:	sbb    cl,bl
  41c369:	xor    BYTE PTR [edi-0x77c8165],0x55
  41c370:	mov    DWORD PTR [edx],eax
  41c372:	or     al,0x4a
  41c374:	jl     0x41c357
  41c376:	not    BYTE PTR [ebx-0x5dd9da80]
  41c37c:	dec    esp
  41c37d:	dec    ecx
  41c37e:	(bad)  
  41c37f:	clc    
  41c380:	dec    esi
  41c381:	mov    ebp,0xb1e455fa
  41c386:	inc    ebp
  41c387:	and    ebp,eax
  41c389:	std    
  41c38a:	jmp    0x41c34b
  41c38c:	fwait
  41c38d:	aad    0xa5
  41c38f:	(bad)  
  41c390:	and    eax,0x5a408bb4
  41c395:	(bad)  
  41c396:	mov    al,ds:0x43f2b1e6
  41c39b:	leave  
  41c39c:	test   al,0x3f
  41c39e:	repnz push cs
  41c3a0:	mov    es,WORD PTR [esp+eax*8+0xbe06384]
  41c3a7:	add    ebx,esi
  41c3a9:	or     cl,BYTE PTR [esi-0x31e54bb]
  41c3af:	data16 jno 0x41c402
  41c3b2:	ret    
  41c3b3:	lods   eax,DWORD PTR ds:[esi]
  41c3b4:	call   0xa1924beb
  41c3b9:	retf   0x2463
  41c3bc:	int3   
  41c3bd:	jbe    0x41c414
  41c3bf:	pop    ds
  41c3c0:	dec    ebx
  41c3c1:	add    BYTE PTR [ecx-0x16e825ac],0x4c
  41c3c8:	inc    ecx
  41c3c9:	lods   eax,DWORD PTR ds:[esi]
  41c3cb:	jmp    0x92bd7a5e
  41c3d0:	fld    st(0)
  41c3d2:	out    dx,al
  41c3d3:	fcom   DWORD PTR [ecx-0x56]
  41c3d6:	inc    edi
  41c3d7:	out    dx,al
  41c3d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d9:	into   
  41c3da:	cld    
  41c3db:	retf   0x1590
  41c3de:	iret   
  41c3df:	mov    esp,0x86163e7d
  41c3e4:	aaa    
  41c3e5:	push   0x6bcd8902
  41c3ea:	cld    
  41c3eb:	aaa    
  41c3ec:	push   ebx
  41c3ed:	retf   0xc8b8
  41c3f0:	dec    edi
  41c3f1:	pop    esp
  41c3f2:	jecxz  0x41c3ba
  41c3f4:	cmp    ebx,DWORD PTR [esi-0x5c6924b]
  41c3fa:	loopne 0x41c3f0
  41c3fc:	aad    0xe8
  41c3fe:	out    dx,eax
  41c3ff:	mov    BYTE PTR [edx+0x10],bl
  41c402:	fwait
  41c403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c404:	pop    ss
  41c405:	inc    esp
  41c406:	mov    ch,0x59
  41c408:	pop    ebx
  41c409:	dec    esp
  41c40a:	les    edi,FWORD PTR ds:0xde7ffb8d
  41c410:	hlt    
  41c411:	cli    
  41c412:	xor    bh,BYTE PTR [edi+0x6f21dd3c]
  41c418:	shr    BYTE PTR [esi-0x183bccd4],cl
  41c41e:	(bad)  
  41c41f:	test   al,0xda
  41c421:	jecxz  0x41c3e7
  41c423:	lods   al,BYTE PTR ds:[esi]
  41c424:	cmc    
  41c425:	gs ret 0x605a
  41c429:	or     DWORD PTR [esi],eax
  41c42b:	sub    DWORD PTR [edx],edi
  41c42d:	cdq    
  41c42e:	jo     0x41c4a8
  41c430:	xor    DWORD PTR [ecx-0x61],ecx
  41c433:	xor    al,0x40
  41c435:	loop   0x41c3e5
  41c437:	mov    ebx,0x163831a6
  41c43c:	jl     0x41c3e2
  41c43e:	shl    ecx,1
  41c440:	xchg   ebp,eax
  41c441:	adc    BYTE PTR [edi+0x796c9b68],ch
  41c447:	mov    ds:0xa2b29e9,al
  41c44c:	push   ecx
  41c44d:	std    
  41c44e:	(bad)  
  41c44f:	out    dx,al
  41c450:	mov    ebx,0x26ae4090
  41c455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c456:	cld    
  41c457:	push   ds
  41c458:	in     al,0x2e
  41c45a:	or     eax,DWORD PTR [esi+ebp*8]
  41c45d:	add    dl,BYTE PTR [esi+eiz*4+0xa3f86a2]
  41c464:	ficom  DWORD PTR [esi]
  41c466:	ds jmp 0xb39d:0x702d61e1
  41c46e:	or     al,0x7a
  41c470:	js     0x41c442
  41c472:	cmp    al,0x37
  41c474:	mov    WORD PTR [esi],ds
  41c476:	lods   eax,DWORD PTR ds:[esi]
  41c477:	mov    bh,0x5a
  41c479:	repz xchg esi,eax
  41c47b:	pop    ds
  41c47c:	retf   
  41c47d:	sahf   
  41c47e:	dec    ebx
  41c47f:	mov    bl,BYTE PTR [edi+0x3b]
  41c482:	pop    es
  41c483:	out    dx,eax
  41c484:	xchg   esi,eax
  41c485:	out    dx,eax
  41c486:	or     al,bl
  41c488:	aam    0xa
  41c48a:	stc    
  41c48b:	fs hlt 
  41c48d:	sub    ebx,DWORD PTR [ebp+0x79edc942]
  41c493:	push   ax
  41c495:	sub    eax,0x8c66151c
  41c49a:	rcl    BYTE PTR [edx+0x61],0x1e
  41c49e:	lea    edx,[ebx+eax*4]
  41c4a1:	jb     0x41c444
  41c4a3:	in     eax,dx
  41c4a4:	in     eax,dx
  41c4a5:	adc    al,0x49
  41c4a7:	stos   BYTE PTR es:[edi],al
  41c4a8:	mov    al,0x37
  41c4aa:	cmc    
  41c4ab:	xchg   esp,eax
  41c4ac:	call   0xad1:0x88a3b495
  41c4b3:	mov    edx,edx
  41c4b5:	xor    al,0xf3
  41c4b7:	std    
  41c4b8:	ret    0x2d08
  41c4bb:	or     edi,0xffffffda
  41c4be:	push   ss
  41c4bf:	loop   0x41c515
  41c4c1:	xchg   ecx,eax
  41c4c2:	iret   
  41c4c3:	in     al,dx
  41c4c4:	arpl   cx,bx
  41c4c6:	outs   dx,DWORD PTR ds:[esi]
  41c4c7:	cli    
  41c4c8:	jp     0x41c495
  41c4ca:	shl    BYTE PTR [esi+0x57455675],0xbe
  41c4d1:	ret    0xd130
  41c4d4:	jns    0x41c50c
  41c4d6:	test   DWORD PTR [edi+0x2c],edx
  41c4d9:	sar    BYTE PTR [ebp-0x43a30c87],0x70
  41c4e0:	and    eax,0x30de04b2
  41c4e5:	xchg   esi,eax
  41c4e6:	(bad)  
  41c4e7:	(bad)  
  41c4e8:	int    0xae
  41c4ea:	pop    ds
  41c4eb:	mov    bh,0xe1
  41c4ed:	mov    BYTE PTR ds:0x26bb46dc,bh
  41c4f3:	test   eax,0xec8256d0
  41c4f8:	sbb    eax,0xf3372432
  41c4fd:	push   cs
  41c4fe:	pop    ecx
  41c4ff:	out    dx,al
  41c500:	dec    ebx
  41c501:	or     cl,BYTE PTR ds:0x780436e3
  41c507:	ds jne 0x41c49b
  41c50a:	lock inc esi
  41c50c:	jmp    0x51e52750
  41c511:	cmp    al,0xd3
  41c513:	pop    edi
  41c514:	xor    esi,DWORD PTR [ebp+0x4afaedb7]
  41c51a:	mov    bl,0xd
  41c51c:	or     DWORD PTR [eax],ebp
  41c51e:	sub    DWORD PTR [eax+0x1efa5238],ebx
  41c524:	aas    
  41c525:	scas   eax,DWORD PTR es:[edi]
  41c526:	pop    ebx
  41c527:	pusha  
  41c528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c529:	jo     0x41c55f
  41c52b:	outs   dx,DWORD PTR ds:[esi]
  41c52c:	push   cs
  41c52d:	adc    dl,dl
  41c52f:	mov    ah,0xed
  41c531:	cli    
  41c532:	test   BYTE PTR [ebp-0xc],bh
  41c535:	xor    eax,0xf1b82c4f
  41c53a:	adc    bh,BYTE PTR [ecx]
  41c53c:	xchg   esi,eax
  41c53d:	lds    eax,FWORD PTR [edi+0x6f8625da]
  41c543:	aas    
  41c544:	dec    edx
  41c545:	ss sub ebp,eax
  41c548:	sahf   
  41c549:	imul   edx,DWORD PTR [edx-0x1b],0xe08edfa3
  41c550:	mov    eax,0xfe9415f4
  41c555:	pop    esp
  41c556:	and    edx,DWORD PTR [eax+0x44c7cf29]
  41c55c:	sbb    dx,WORD PTR [ebx]
  41c55f:	fwait
  41c560:	pop    ebp
  41c561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c562:	outs   dx,BYTE PTR ds:[esi]
  41c563:	push   ss
  41c564:	xchg   ecx,eax
  41c565:	cmp    al,0xdb
  41c567:	adc    DWORD PTR [ebx],ebx
  41c569:	pop    edi
  41c56a:	dec    edi
  41c56b:	xchg   ebx,eax
  41c56c:	mov    esi,DWORD PTR [esi+0x1dbdb2ec]
  41c572:	js     0x41c5ef
  41c574:	loop   0x41c520
  41c576:	sbb    eax,0xf0f03c65
  41c57b:	retf   0x96c1
  41c57e:	pop    edx
  41c57f:	(bad)  
  41c580:	mov    eax,0x13d0b376
  41c585:	pop    ds
  41c586:	lods   al,BYTE PTR ds:[esi]
  41c587:	adc    ebx,DWORD PTR [edi]
  41c589:	ret    0xc246
  41c58c:	cs js  0x41c58f
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	xor    BYTE PTR [eax],bl
  41c5a0:	mov    ds:0x1417195,al
  41c5a5:	add    ah,dh
  41c5a7:	add    al,0x0
  41c5a9:	add    BYTE PTR [esi+0x4f],bl
  41c5ac:	loope  0x41c621
  41c5ae:	das    
  41c5af:	mov    ds:0x482a80af,eax
  41c5b4:	mov    eax,eax
  41c5b6:	test   al,0xde
  41c5b8:	in     al,0x6f
  41c5ba:	bound  ebx,QWORD PTR [eax-0x28]
  41c5bd:	out    0x67,al
  41c5bf:	pop    ebx
  41c5c0:	pop    ebx
  41c5c1:	enter  0xe12a,0xe2
  41c5c5:	je     0x41c54a
  41c5c7:	mov    dh,0xa
  41c5c9:	repnz (bad) 
  41c5cb:	cs popf 
  41c5cd:	outs   dx,DWORD PTR ds:[esi]
  41c5ce:	jnp    0x41c604
  41c5d0:	jbe    0x41c5ce
  41c5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d3:	nop
  41c5d4:	inc    esp
  41c5d5:	cmp    ah,dh
  41c5d7:	xchg   ebx,eax
  41c5d8:	mov    DWORD PTR [ebx+0x495312c5],esi
  41c5de:	test   cl,dl
  41c5e0:	dec    eax
  41c5e1:	add    eax,0xb0f8d7f5
  41c5e6:	mov    BYTE PTR [eax+0x75f69acc],bh
  41c5ec:	mov    BYTE PTR [ebx+0x6],ch
  41c5ef:	push   ds
  41c5f0:	xor    DWORD PTR [ecx],esp
  41c5f2:	test   eax,0xfd5f294
  41c5f7:	dec    ebp
  41c5f8:	push   esi
  41c5f9:	stc    
  41c5fa:	in     al,dx
  41c5fb:	inc    esp
  41c5fc:	test   al,0xf9
  41c5fe:	in     eax,0x34
  41c600:	inc    ebp
  41c601:	lods   al,BYTE PTR ds:[esi]
  41c602:	sbb    al,0x4f
  41c604:	push   cs
  41c605:	ins    BYTE PTR es:[edi],dx
  41c606:	popf   
  41c607:	jle    0x41c647
  41c609:	cmp    al,0x3d
  41c60b:	mov    ebp,0x520ea51e
  41c610:	jl     0x41c5e6
  41c612:	inc    edi
  41c613:	pusha  
  41c614:	xchg   edx,eax
  41c615:	lds    edx,FWORD PTR [eax+edx*2+0x5e]
  41c619:	adc    BYTE PTR [ebp-0x1ecb838f],0xce
  41c620:	lods   eax,DWORD PTR ds:[esi]
  41c621:	cwde   
  41c622:	jns    0x41c5e6
  41c624:	adc    BYTE PTR [eax+ecx*2],0xf7
  41c628:	add    eax,0xaf8265ca
  41c62d:	inc    ebp
  41c62e:	je     0x41c613
  41c630:	out    dx,al
  41c631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c632:	ret    
  41c633:	cwde   
  41c634:	push   ds
  41c635:	shr    BYTE PTR [ebx-0x676361f7],cl
  41c63b:	idiv   DWORD PTR [eax]
  41c63d:	jns    0x41c659
  41c63f:	xor    esp,eax
  41c641:	iret   
  41c642:	pop    ecx
  41c643:	inc    edi
  41c644:	mov    al,ds:0x7b7d0ea
  41c649:	dec    ebp
  41c64a:	lock cmp BYTE PTR [edx+0x31fe87e9],ch
  41c651:	jo     0x41c61b
  41c653:	push   esp
  41c654:	(bad)  
  41c655:	mov    ah,0x46
  41c657:	cs icebp 
  41c659:	in     eax,0x9f
  41c65b:	add    eax,0x710d3dea
  41c660:	in     al,0x9f
  41c662:	fwait
  41c663:	(bad)  
  41c664:	popa   
  41c665:	(bad)  
  41c666:	lods   al,BYTE PTR ds:[esi]
  41c667:	mov    esi,0xdae6c204
  41c66c:	leave  
  41c66d:	mov    edi,esi
  41c66f:	and    ah,BYTE PTR [ebx-0x50a1162a]
  41c675:	daa    
  41c676:	ins    DWORD PTR es:[edi],dx
  41c677:	sti    
  41c678:	iret   
  41c679:	lds    ebx,FWORD PTR [esi-0x6a]
  41c67c:	pop    ss
  41c67d:	(bad)  [ecx+0x60334133]
  41c683:	outs   dx,BYTE PTR ds:[esi]
  41c684:	into   
  41c685:	mov    dl,0x53
  41c687:	or     DWORD PTR [ebp+0x2c],edi
  41c68a:	xor    dh,ch
  41c68c:	mov    cl,0x52
  41c68e:	int3   
  41c68f:	cli    
  41c690:	mov    eax,0x40d2ee03
  41c695:	mov    ebx,?
  41c697:	jne    0x41c706
  41c699:	aad    0x58
  41c69b:	inc    ebx
  41c69c:	les    edx,FWORD PTR fs:[ecx-0x61]
  41c6a0:	dec    ebp
  41c6a1:	aas    
  41c6a2:	outs   dx,DWORD PTR ds:[esi]
  41c6a3:	icebp  
  41c6a4:	dec    edx
  41c6a5:	jle    0x41c6b9
  41c6a7:	shl    DWORD PTR [ebp+0x57],0xa7
  41c6ab:	scas   al,BYTE PTR es:[di]
  41c6ad:	jno    0x41c6b3
  41c6af:	vpshaq xmm9,fs:[ebx-0x49],xmm5
  41c6b6:	mov    ecx,0x52cf680c
  41c6bb:	lods   eax,DWORD PTR ds:[esi]
  41c6bc:	push   esi
  41c6bd:	nop
  41c6be:	shufps xmm5,xmm1,0xb0
  41c6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c3:	mov    dl,BYTE PTR [ebx+0x66]
  41c6c6:	fdiv   DWORD PTR [ebp+0x6]
  41c6c9:	pop    esi
  41c6ca:	lahf   
  41c6cb:	mov    ebp,0x6cdd60fb
  41c6d0:	lock adc dl,BYTE PTR cs:[ebp-0x70]
  41c6d5:	adc    bl,BYTE PTR [ebx-0xb]
  41c6d8:	out    0x60,eax
  41c6da:	mov    esp,0xfdc83dc3
  41c6df:	(bad)  
  41c6e0:	repz fbstp TBYTE PTR [eax]
  41c6e3:	out    dx,eax
  41c6e4:	push   edx
  41c6e5:	adc    al,0x38
  41c6e7:	idiv   ebp
  41c6e9:	shl    BYTE PTR [ebx],0x31
  41c6ec:	cmp    ecx,eax
  41c6ee:	test   DWORD PTR [ecx],esp
  41c6f0:	sbb    eax,0x23cf46b9
  41c6f5:	cmp    al,0xa5
  41c6f7:	stos   BYTE PTR es:[edi],al
  41c6f8:	xor    al,BYTE PTR [ecx]
  41c6fa:	aam    0xa7
  41c6fc:	mov    ebx,0xe9850ff8
  41c701:	mov    al,0xb5
  41c703:	mov    DWORD PTR [edi-0x1f],ebp
  41c706:	std    
  41c707:	push   edi
  41c708:	addr16 pop esp
  41c70a:	imul   BYTE PTR [eax+0x2e]
  41c70d:	fldenv [edx]
  41c70f:	ins    BYTE PTR es:[edi],dx
  41c710:	cmp    ebp,eax
  41c712:	retf   
  41c713:	xchg   DWORD PTR [edi-0xd368ad],edi
  41c719:	pushf  
  41c71a:	je     0x41c6bc
  41c71c:	mov    DWORD PTR [ebx+0x1c],esp
  41c71f:	lods   al,BYTE PTR ds:[esi]
  41c720:	stc    
  41c721:	or     eax,0xe8802a92
  41c726:	mov    ecx,0xd3528555
  41c72b:	jno    0x41c6f3
  41c72d:	mov    ds:0x35392a57,eax
  41c732:	scas   al,BYTE PTR es:[edi]
  41c733:	cmp    dl,BYTE PTR [ebp+0x63d24574]
  41c739:	lock jne 0x41c77d
  41c73c:	mov    edx,?
  41c73e:	inc    ebx
  41c73f:	inc    edx
  41c740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c741:	mov    eax,0x9fa1ac81
  41c746:	repz adc eax,0x48ddc988
  41c74c:	mov    ebp,?
  41c74e:	lods   al,BYTE PTR ds:[esi]
  41c74f:	dec    ecx
  41c750:	or     BYTE PTR [esi+ebp*2],cl
  41c753:	dec    esp
  41c754:	cmp    ebx,ecx
  41c756:	das    
  41c757:	(bad)  
  41c758:	mov    fs,WORD PTR [edx+0x2a60a72b]
  41c75e:	in     al,0x55
  41c760:	xor    ebp,DWORD PTR [ebx]
  41c762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c763:	fst    DWORD PTR [ebp+0x12]
  41c766:	out    dx,al
  41c767:	pop    ss
  41c768:	fimul  DWORD PTR [esi]
  41c76a:	and    dh,bh
  41c76c:	or     al,BYTE PTR [edi+0x5e]
  41c76f:	mov    ds:0x182a739d,eax
  41c774:	lea    ebp,[edi-0x49cfdcc9]
  41c77a:	sub    ah,BYTE PTR [ebx-0x4d54e2a5]
  41c780:	or     esp,DWORD PTR [edx+0x19]
  41c783:	mov    bh,0x8f
  41c785:	(bad)  
  41c786:	out    dx,eax
  41c787:	pop    ebx
  41c788:	in     eax,dx
  41c789:	hlt    
  41c78a:	sub    DWORD PTR [edi+esi*1-0x40782106],eax
  41c791:	push   ds
  41c792:	and    al,BYTE PTR [ebx+0x1c]
  41c795:	push   eax
  41c796:	pop    ebp
  41c797:	int    0x0
  41c799:	bound  edi,QWORD PTR [edx+ebp*4+0x1cd64d7f]
  41c7a0:	pop    ss
  41c7a1:	pusha  
  41c7a2:	sub    edx,DWORD PTR [edi-0x5b]
  41c7a5:	(bad)  
  41c7a6:	shl    DWORD PTR [ebp+0x50],1
  41c7a9:	xor    al,0x79
  41c7ab:	jmp    0x5cad:0x87395099
  41c7b2:	aam    0x44
  41c7b4:	add    esi,DWORD PTR [ecx+0x5b]
  41c7b7:	cwde   
  41c7b8:	and    BYTE PTR [edi],ch
  41c7ba:	or     bh,BYTE PTR [edx+0x3a]
  41c7bd:	fnsave [ecx]
  41c7bf:	pop    esp
  41c7c0:	sub    DWORD PTR [esi+eax*2+0x77],esi
  41c7c4:	xchg   DWORD PTR [edx],esp
  41c7c6:	test   eax,0x61842052
  41c7cb:	add    al,0x37
  41c7cd:	(bad)  
  41c7ce:	in     eax,dx
  41c7cf:	mov    dh,0xd5
  41c7d1:	fsub   st,st(2)
  41c7d3:	neg    BYTE PTR [ebp+0x60615dae]
  41c7d9:	xlat   BYTE PTR ds:[ebx]
  41c7da:	das    
  41c7db:	into   
  41c7dc:	adc    dh,BYTE PTR [esp+eiz*8-0x69109c6c]
  41c7e3:	inc    edi
  41c7e4:	push   edi
  41c7e5:	xchg   esp,eax
  41c7e6:	fldpi  
  41c7e8:	sbb    al,0xab
  41c7ea:	stc    
  41c7eb:	into   
  41c7ec:	sub    eax,0x518f183d
  41c7f1:	mov    dh,0x9c
  41c7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f4:	add    BYTE PTR [edx+edx*1-0x7b],dh
  41c7f8:	test   eax,0xf10ddbe7
  41c7fd:	gs cs add eax,0x886a6f22
  41c804:	or     ch,BYTE PTR [edi-0x6461b705]
  41c80a:	fiadd  WORD PTR [ebx+0x23]
  41c80d:	ins    DWORD PTR es:[edi],dx
  41c80e:	nop
  41c80f:	jo     0x41c86f
  41c811:	mov    eax,0xe795e375
  41c816:	sub    eax,0xa9d26f72
  41c81b:	push   ss
  41c81c:	cmp    eax,0xb29142ec
  41c821:	(bad)
  41c825:	mov    bh,0xad
  41c827:	pop    es
  41c828:	add    BYTE PTR [edi+0x4ccf5420],ah
  41c82e:	ror    esp,1
  41c830:	sub    dl,BYTE PTR [ecx]
  41c832:	sqrtps xmm2,XMMWORD PTR es:[eax-0x1615efed]
  41c83a:	add    al,0x2d
  41c83c:	or     dl,BYTE PTR [edx+0x31ae90ca]
  41c842:	into   
  41c843:	push   ebx
  41c844:	push   ebx
  41c845:	xchg   edi,eax
  41c846:	repz sub al,0x28
  41c849:	mov    ds:0xd4677d07,al
  41c84e:	dec    eax
  41c84f:	and    esi,DWORD PTR [ecx]
  41c851:	push   es
  41c852:	enter  0xa4ed,0x3e
  41c856:	jns    0x41c84f
  41c858:	mov    ds:0xb9759204,al
  41c85d:	sub    al,0xc7
  41c85f:	js     0x41c82a
  41c861:	sbb    ecx,DWORD PTR [edi+eax*2+0x61861adb]
  41c868:	call   0xb5e20277
  41c86d:	xor    al,0x27
  41c86f:	or     eax,0x4fed87bd
  41c874:	xchg   ecx,eax
  41c875:	cmp    BYTE PTR [esi-0x38],bl
  41c878:	pop    es
  41c879:	adc    eax,0xb5bc6a46
  41c87e:	jg     0x41c87b
  41c880:	mov    DWORD PTR [edi],0x4929ba44
  41c886:	sbb    esi,ecx
  41c888:	mov    al,0x35
  41c88a:	dec    ebp
  41c88b:	es xchg ebx,eax
  41c88d:	jns    0x41c81e
  41c88f:	aas    
  41c890:	mov    edx,0x636cf9f1
  41c895:	data16 sub al,0xe0
  41c898:	outs   dx,BYTE PTR ds:[esi]
  41c899:	mov    edi,0x5aa35dfd
  41c89e:	dec    edx
  41c89f:	sbb    ch,BYTE PTR [eax-0x7b]
  41c8a2:	xor    BYTE PTR [ebx],ch
  41c8a4:	retf   0xfed6
  41c8a7:	push   ss
  41c8a8:	loope  0x41c862
  41c8aa:	ret    
  41c8ab:	xor    ebx,esp
  41c8ad:	lea    edx,[ebx-0x18]
  41c8b0:	lahf   
  41c8b1:	out    dx,al
  41c8b2:	mov    ebx,cs
  41c8b4:	push   0x27
  41c8b6:	adc    esi,esi
  41c8b8:	fild   WORD PTR [edi]
  41c8ba:	jl     0x41c8b5
  41c8bc:	mov    BYTE PTR [esi-0xf],dh
  41c8bf:	mov    ebp,0xaddc9518
  41c8c4:	out    0x27,eax
  41c8c6:	leave  
  41c8c7:	fld    DWORD PTR [edx]
  41c8c9:	sbb    eax,DWORD PTR [esi+0x27]
  41c8cc:	mov    bh,0xb6
  41c8ce:	jae    0x41c854
  41c8d0:	out    0x43,al
  41c8d2:	add    al,0x7
  41c8d4:	lods   eax,DWORD PTR ds:[esi]
  41c8d5:	mov    al,0x2
  41c8d7:	or     al,0xb7
  41c8d9:	or     ch,BYTE PTR [ebp+0x171a86ef]
  41c8df:	fdivr  QWORD PTR [edx+0x2a]
  41c8e2:	scas   al,BYTE PTR es:[edi]
  41c8e3:	xchg   esi,eax
  41c8e4:	ror    DWORD PTR [ebx+0x9],1
  41c8e7:	repnz cmp eax,0x327111a4
  41c8ed:	mov    edx,0xb16b6b7f
  41c8f2:	in     al,0xc9
  41c8f4:	fcomp  QWORD PTR [ebx]
  41c8f6:	jo     0x41c938
  41c8f8:	sub    al,0x11
  41c8fa:	fcmovnbe st,st(0)
  41c8fc:	xor    DWORD PTR [ecx],0x7c
  41c8ff:	push   ecx
  41c900:	jbe    0x41c893
  41c902:	or     edx,eax
  41c904:	(bad)  
  41c906:	in     al,dx
  41c907:	jns    0x41c8d1
  41c909:	cmc    
  41c90a:	push   ebp
  41c90b:	pop    esi
  41c90c:	fist   DWORD PTR [ebx+0x72d2b0ed]
  41c912:	dec    edi
  41c913:	es dec ebx
  41c915:	dec    eax
  41c916:	and    BYTE PTR [ebx],0x6a
  41c919:	inc    ebp
  41c91a:	daa    
  41c91b:	jp     0x41c90e
  41c91d:	sub    cl,0x3
  41c920:	jae    0x41c95d
  41c922:	inc    ebx
  41c923:	add    cl,cl
  41c925:	sbb    eax,0x91cbbf23
  41c92a:	xchg   ebx,eax
  41c92b:	cmc    
  41c92c:	int    0x80
  41c92e:	inc    esi
  41c92f:	test   BYTE PTR [ecx+0x3d103f44],0x47
  41c936:	mov    esp,DWORD PTR [ebp+0x4c]
  41c939:	xor    DWORD PTR [eax+0x7354981a],ebx
  41c93f:	scas   eax,DWORD PTR es:[edi]
  41c940:	cmp    BYTE PTR [eax+0x50627784],dh
  41c946:	ins    DWORD PTR es:[edi],dx
  41c947:	scas   al,BYTE PTR es:[edi]
  41c948:	js     0x41c927
  41c94a:	outs   dx,BYTE PTR ds:[esi]
  41c94b:	fs cli 
  41c94d:	sub    BYTE PTR [ecx-0x114fc949],bl
  41c953:	add    DWORD PTR [edi],ebp
  41c955:	jne    0x41c94b
  41c957:	xchg   ecx,eax
  41c958:	add    ebp,DWORD PTR [ebx+0x79ba4ae2]
  41c95e:	and    BYTE PTR [edx-0x6c],bh
  41c961:	mov    ch,0x5c
  41c963:	fcomp  DWORD PTR [edi+0x18]
  41c966:	push   esp
  41c967:	out    dx,eax
  41c968:	fdiv   st,st(2)
  41c96a:	ins    BYTE PTR es:[edi],dx
  41c96b:	sub    DWORD PTR [ecx-0x6b],0xffffffed
  41c96f:	int3   
  41c970:	add    cl,ch
  41c972:	sub    eax,DWORD PTR [ecx*4-0x54da3f82]
  41c979:	pop    ebx
  41c97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c97b:	add    eax,0x5407baa4
  41c980:	pminub mm4,QWORD PTR [ecx]
  41c983:	lea    edx,[ebp+0x4ec20635]
  41c989:	push   edx
  41c98a:	pop    ecx
  41c98b:	out    0x1c,eax
  41c98d:	mov    eax,0x2826ed59
  41c992:	sub    esi,edx
  41c994:	dec    esp
  41c995:	jne    0x41c9cb
  41c997:	xchg   edi,eax
  41c998:	test   al,0xbf
  41c99a:	jae    0x41c932
  41c99c:	xchg   ebx,eax
  41c99d:	push   ebp
  41c99e:	int    0x64
  41c9a0:	test   al,0xe4
  41c9a2:	mov    edx,0x1101a5
  41c9a7:	mov    bl,0x99
  41c9a9:	sbb    BYTE PTR [esi+0x6e],dl
  41c9ac:	mov    esp,0xe702306e
  41c9b1:	mov    bl,dl
  41c9b3:	stos   DWORD PTR es:[edi],eax
  41c9b4:	fadd   st,st(2)
  41c9b6:	fisttp QWORD PTR [esi-0x27]
  41c9b9:	jb     0x41c9a8
  41c9bb:	xchg   esp,eax
  41c9bc:	jae    0x41c98d
  41c9be:	aad    0x2f
  41c9c0:	mov    ebx,0xdc08a8dc
  41c9c5:	pop    esp
  41c9c6:	leave  
  41c9c7:	mov    ecx,0x941fac75
  41c9cc:	mov    esp,0x71cc915e
  41c9d1:	ror    DWORD PTR [ebp+0x64],1
  41c9d4:	lahf   
  41c9d5:	sub    al,0x3f
  41c9d7:	sbb    ecx,eax
  41c9d9:	loope  0x41c9f5
  41c9db:	and    BYTE PTR [ebp-0x27],0xd5
  41c9df:	mov    cl,0x55
  41c9e1:	out    dx,eax
  41c9e2:	int    0x82
  41c9e4:	jge    0x41ca4c
  41c9e6:	mov    dl,0x1c
  41c9e8:	int3   
  41c9e9:	xor    eax,DWORD PTR [edx+0x25]
  41c9ec:	dec    ebx
  41c9ed:	mov    eax,esi
  41c9ef:	jno    0x41c9e4
  41c9f1:	int3   
  41c9f2:	dec    ecx
  41c9f3:	mov    bh,0x44
  41c9f5:	xchg   DWORD PTR [esp+eiz*4+0x6e1eabc5],ebx
  41c9fc:	mov    al,ds:0x3b4f893a
  41ca01:	adc    bh,bl
  41ca03:	lods   al,BYTE PTR ds:[esi]
  41ca04:	lods   eax,DWORD PTR ds:[esi]
  41ca05:	lea    eax,[ecx-0xf8c79d1]
  41ca0b:	jg     0x41c9a8
  41ca0d:	jl     0x41ca01
  41ca0f:	gs xchg edx,eax
  41ca11:	adc    ebp,DWORD PTR [esi]
  41ca13:	push   es
  41ca14:	jg     0x41c9fa
  41ca16:	jo     0x41c99a
  41ca18:	mov    cl,0x9
  41ca1a:	xchg   edx,eax
  41ca1b:	rcl    ch,1
  41ca1d:	jmp    FWORD PTR [esi+ebp*2+0x6b]
  41ca21:	mov    edi,0x39de0f24
  41ca26:	fs ja  0x41c9f4
  41ca29:	mov    ds:0xdd88204e,eax
  41ca2e:	dec    ebx
  41ca2f:	js     0x41ca8e
  41ca31:	jge    0x41ca60
  41ca33:	push   esp
  41ca34:	inc    esi
  41ca35:	cmp    eax,0x6b2e0735
  41ca3a:	cmp    al,0x5e
  41ca3c:	jg     0x41ca44
  41ca3e:	daa    
  41ca3f:	pop    esi
  41ca40:	scas   eax,DWORD PTR es:[edi]
  41ca41:	ret    
  41ca42:	xchg   dx,ax
  41ca44:	jge    0x41ca9d
  41ca46:	in     al,0x6d
  41ca48:	fimul  DWORD PTR [ecx+eiz*2+0x36aaf66c]
  41ca4f:	add    al,0x8e
  41ca51:	push   eax
  41ca52:	les    ebx,FWORD PTR [edi-0x7f]
  41ca55:	enter  0xd664,0x63
  41ca59:	xchg   DWORD PTR [ecx],eax
  41ca5b:	cmp    al,0x2
  41ca5d:	sbb    eax,ebp
  41ca5f:	(bad)  
  41ca60:	out    0xeb,eax
  41ca62:	adc    DWORD PTR [edi+0x5819b95c],eax
  41ca68:	add    BYTE PTR [esi],bh
  41ca6a:	stos   BYTE PTR es:[edi],al
  41ca6b:	push   es
  41ca6c:	aas    
  41ca6d:	and    eax,0xb8f782a1
  41ca72:	retf   
  41ca73:	add    al,0x5
  41ca75:	pop    ebx
  41ca76:	sub    al,0xf9
  41ca78:	pop    ds
  41ca79:	pop    eax
  41ca7a:	test   eax,0xe86f0d4f
  41ca7f:	dec    esp
  41ca80:	fld    DWORD PTR [edx-0x1b]
  41ca83:	retf   0x790f
  41ca86:	sbb    eax,0xed61c048
  41ca8b:	add    ah,dl
  41ca8d:	xchg   edx,eax
  41ca8e:	sbb    ch,dl
  41ca90:	dec    esi
  41ca91:	jns    0x41ca2d
  41ca93:	push   cs
  41ca94:	push   0xffffffc7
  41ca96:	out    dx,al
  41ca97:	popa   
  41ca98:	cs push ecx
  41ca9a:	inc    ebp
  41ca9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca9c:	cdq    
  41ca9d:	dec    eax
  41ca9e:	add    BYTE PTR [eax],al
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x5]
  41caaf:	arpl   bp,sp
  41cab1:	aas    
  41cab2:	gs inc esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	hlt    
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [eax+eiz*8],dl
  41cabc:	cvtps2pd xmm3,QWORD PTR [ebx+eax*2]
  41cac0:	mov    edx,DWORD PTR [edi-0x6a189623]
  41cac6:	sub    esi,esi
  41cac8:	and    dh,bh
  41caca:	ds repnz icebp 
  41cacd:	mov    dl,0x11
  41cacf:	add    eax,0x2462c535
  41cad4:	sbb    bl,al
  41cad6:	pop    ebp
  41cad7:	push   esi
  41cad8:	xchg   edx,eax
  41cad9:	adc    dl,bh
  41cadb:	xchg   esi,eax
  41cadc:	lock scas al,BYTE PTR es:[edi]
  41cade:	ins    DWORD PTR es:[edi],dx
  41cadf:	inc    ebx
  41cae0:	dec    eax
  41cae1:	addr16 mov dh,0xf6
  41cae4:	jb     0x41caaf
  41cae6:	or     al,0xfb
  41cae8:	icebp  
  41cae9:	jle    0x41caa6
  41caeb:	pop    es
  41caec:	test   BYTE PTR [ecx-0x743e1a94],cl
  41caf2:	push   edx
  41caf3:	cmp    al,0x14
  41caf5:	add    al,0xcb
  41caf7:	jp     0x41cb2a
  41caf9:	fbld   TBYTE PTR [ebp+0x2c]
  41cafc:	mov    esp,0xd00bb7f6
  41cb01:	pop    ebx
  41cb02:	les    edi,FWORD PTR [edi-0x21400585]
  41cb08:	loop   0x41cb80
  41cb0a:	stos   DWORD PTR es:[edi],eax
  41cb0b:	dec    esp
  41cb0c:	loopne 0x41cb16
  41cb0e:	int3   
  41cb0f:	mov    dh,0xaa
  41cb11:	adc    al,BYTE PTR [ebx]
  41cb13:	jg     0x41caf7
  41cb15:	jno    0x41cb49
  41cb17:	jle    0x41cac6
  41cb19:	loop   0x41cb46
  41cb1b:	mov    ds:0x61562b50,al
  41cb20:	test   al,bh
  41cb22:	retf   0x900
  41cb25:	sub    esp,DWORD PTR [edi]
  41cb27:	cli    
  41cb28:	jo     0x41cb87
  41cb2a:	and    eax,0x3cb5ad7f
  41cb2f:	mov    esi,0x7d4d23b6
  41cb34:	ficomp WORD PTR [edi-0x3050168f]
  41cb3a:	fwait
  41cb3b:	jae    0x41cb76
  41cb3d:	outs   dx,BYTE PTR ds:[esi]
  41cb3e:	sub    BYTE PTR [eax+0x2a],bl
  41cb41:	jecxz  0x41cafd
  41cb43:	jbe    0x41cb72
  41cb45:	lods   al,BYTE PTR ds:[esi]
  41cb46:	add    al,al
  41cb48:	in     eax,0x20
  41cb4a:	test   al,0xe3
  41cb4c:	sar    esi,cl
  41cb4e:	inc    edi
  41cb4f:	mov    eax,ds:0xcfbfafb3
  41cb54:	jbe    0x41cbcc
  41cb56:	mov    ah,BYTE PTR [esi+0x6]
  41cb59:	or     esi,DWORD PTR [edx]
  41cb5b:	ja     0x41caf6
  41cb5d:	nop
  41cb5e:	mov    WORD PTR [esi+ebx*8],ds
  41cb61:	push   ss
  41cb62:	and    BYTE PTR [edx+ebp*1-0x73],al
  41cb66:	das    
  41cb67:	mov    cl,0x32
  41cb69:	push   0xffffffcc
  41cb6b:	loope  0x41cb1d
  41cb6d:	push   0x76
  41cb6f:	ja     0x41cbb3
  41cb71:	xchg   edi,eax
  41cb72:	addr16 pop edx
  41cb74:	(bad)  
  41cb75:	js     0x41cbc1
  41cb77:	push   ebp
  41cb78:	push   eax
  41cb79:	clc    
  41cb7a:	mov    BYTE PTR [ecx+0x4a],al
  41cb7d:	and    edx,DWORD PTR [ecx]
  41cb7f:	stos   BYTE PTR es:[edi],al
  41cb80:	adc    ecx,edx
  41cb82:	mov    BYTE PTR [edx-0x75283fb7],dh
  41cb88:	fdiv   QWORD PTR [ecx+0x16]
  41cb8b:	mov    eax,ds:0x427768cd
  41cb90:	push   ss
  41cb91:	pop    eax
  41cb92:	push   0xb3bed640
  41cb97:	or     BYTE PTR [ebx-0x7e79cd88],0xba
  41cb9e:	mov    ds:0x9986f389,eax
  41cba3:	xlat   BYTE PTR ds:[ebx]
  41cba4:	(bad)  
  41cba6:	fst    QWORD PTR [edx]
  41cba8:	xchg   ebx,eax
  41cba9:	or     eax,0x6eddb2cf
  41cbae:	rcr    DWORD PTR [eax],0xe7
  41cbb1:	and    edi,DWORD PTR [ebp+0x3898eb6d]
  41cbb7:	sub    eax,0x8765beb5
  41cbbc:	jo     0x41cb55
  41cbbe:	xor    edi,DWORD PTR ds:0xcac489ac
  41cbc4:	mov    ah,0xda
  41cbc6:	xor    BYTE PTR [edi],bl
  41cbc8:	ss call 0x7852:0x926c8b31
  41cbd0:	hlt    
  41cbd1:	jb     0x41cbae
  41cbd3:	imul   edx,DWORD PTR [edx+ebx*2+0x2],0x2ff3606f
  41cbdb:	cmp    al,0x50
  41cbdd:	jp     0x41cb6d
  41cbdf:	std    
  41cbe0:	adc    eax,0xe1bf5771
  41cbe5:	into   
  41cbe6:	pop    ds
  41cbe7:	mov    edi,0x9dfa550b
  41cbec:	int    0xda
  41cbee:	bound  edx,QWORD PTR [edi+ebp*1+0x6ca9f31e]
  41cbf5:	push   0x8e346650
  41cbfa:	sti    
  41cbfb:	hlt    
  41cbfc:	outs   dx,BYTE PTR ds:[esi]
  41cbfd:	mov    ah,0x4a
  41cbff:	dec    edi
  41cc00:	and    esi,DWORD PTR [ebx+ebp*8+0x6efcde41]
  41cc07:	pop    edi
  41cc08:	fsub   DWORD PTR [ecx+0x65df26aa]
  41cc0e:	(bad)  
  41cc0f:	aam    0xf8
  41cc11:	sbb    ah,BYTE PTR [ecx]
  41cc13:	push   esp
  41cc14:	push   0x243ad8ab
  41cc19:	push   0xf53ee873
  41cc1e:	and    BYTE PTR ss:[edi+0x46],cl
  41cc22:	sti    
  41cc23:	sbb    BYTE PTR [ebx+ecx*8],0xcd
  41cc27:	add    ch,BYTE PTR [esp+esi*1-0x3b]
  41cc2b:	sbb    al,0x8d
  41cc2d:	(bad)  
  41cc2e:	cmp    al,0x8c
  41cc30:	dec    edi
  41cc31:	scas   eax,DWORD PTR es:[edi]
  41cc32:	mov    dl,0xd6
  41cc34:	dec    esi
  41cc35:	push   ecx
  41cc36:	cmp    DWORD PTR [eax],ebp
  41cc38:	ret    0xd88d
  41cc3b:	daa    
  41cc3c:	sub    ebp,esi
  41cc3e:	pop    eax
  41cc3f:	js     0x41cc35
  41cc41:	sbb    al,0x51
  41cc43:	ret    0xcc7e
  41cc46:	shl    DWORD PTR [esi-0x51250f99],1
  41cc4c:	add    edi,ebp
  41cc4e:	(bad)  
  41cc4f:	les    ebx,FWORD PTR [ecx]
  41cc51:	dec    ebx
  41cc52:	jecxz  0x41cc5b
  41cc54:	stos   DWORD PTR es:[edi],eax
  41cc55:	mov    dl,BYTE PTR [ebx+eiz*1]
  41cc58:	ss pop ebx
  41cc5a:	addr16 mov edi,0xbc1267b7
  41cc60:	mov    esp,0xf620ee20
  41cc65:	mov    bl,0xaa
  41cc67:	ret    
  41cc68:	jge    0x41cc92
  41cc6a:	jp     0x41cce5
  41cc6c:	out    dx,al
  41cc6d:	pop    edi
  41cc6e:	pop    edi
  41cc6f:	retw   
  41cc71:	ins    BYTE PTR es:[edi],dx
  41cc72:	ds mov edx,0xf139aa35
  41cc78:	imul   esi,ebx,0xf8394116
  41cc7e:	mov    dh,0x24
  41cc80:	shr    DWORD PTR [ecx+0x8],1
  41cc83:	sbb    DWORD PTR [ebp-0x22f139f],edx
  41cc89:	mov    WORD PTR [edx-0x37],gs
  41cc8c:	and    DWORD PTR fs:[edx+ebp*2],0x51
  41cc91:	cmp    DWORD PTR [esi+0x79f01a15],esi
  41cc97:	mov    ebx,ebx
  41cc99:	cdq    
  41cc9a:	add    dh,BYTE PTR [ebx+edi*1+0x49b1be1e]
  41cca1:	mov    esi,0x729c5bf3
  41cca6:	sub    dl,BYTE PTR fs:[ecx-0x33]
  41ccaa:	ret    0x1a9d
  41ccad:	(bad)  
  41ccae:	mov    ds,WORD PTR [edi]
  41ccb0:	aas    
  41ccb1:	rol    esi,cl
  41ccb3:	cmp    DWORD PTR [edx],edi
  41ccb5:	xchg   ebx,eax
  41ccb6:	pop    DWORD PTR [esp+eax*4+0x172bc1ac]
  41ccbd:	mov    ah,0x68
  41ccbf:	pop    eax
  41ccc0:	pop    ecx
  41ccc1:	add    al,0x13
  41ccc3:	sub    eax,0x2ab65e77
  41ccc8:	jmp    0xae5b:0x2f32d088
  41cccf:	jle    0x41cd06
  41ccd1:	cmc    
  41ccd2:	outs   dx,BYTE PTR ds:[esi]
  41ccd3:	pusha  
  41ccd4:	daa    
  41ccd5:	adc    edi,DWORD PTR [esi+0x45ddb0cb]
  41ccdb:	and    esi,DWORD PTR [edx-0x56]
  41ccde:	(bad)  
  41cce0:	leave  
  41cce1:	or     ebp,esi
  41cce3:	sbb    cl,ch
  41cce5:	ins    BYTE PTR es:[edi],dx
  41cce6:	lock xchg esi,eax
  41cce8:	sbb    eax,0xb3310cbc
  41cced:	and    edi,DWORD PTR [eax]
  41ccef:	add    ch,BYTE PTR [ebx+0x22]
  41ccf2:	pop    eax
  41ccf3:	ins    BYTE PTR es:[edi],dx
  41ccf4:	mov    dh,0x5f
  41ccf6:	push   ds
  41ccf7:	mov    esi,esi
  41ccf9:	cmc    
  41ccfa:	es push ss
  41ccfc:	cdq    
  41ccfd:	daa    
  41ccfe:	xchg   edi,eax
  41ccff:	inc    ecx
  41cd00:	(bad)  
  41cd01:	cmp    BYTE PTR [esp+ebx*8-0x6ad0f6b],al
  41cd08:	add    dl,BYTE PTR [esi]
  41cd0a:	and    ebx,DWORD PTR [ebx+0x645b352e]
  41cd10:	cwde   
  41cd11:	xor    ebx,DWORD PTR [edx]
  41cd13:	mov    ax,0x766f
  41cd17:	cmp    eax,edx
  41cd19:	pop    eax
  41cd1a:	repz sbb BYTE PTR ds:0x275652b8,dh
  41cd21:	jecxz  0x41cd92
  41cd23:	shl    edi,0x4f
  41cd26:	cdq    
  41cd27:	stos   DWORD PTR es:[edi],eax
  41cd28:	test   al,0xd5
  41cd2a:	(bad)  
  41cd2b:	popa   
  41cd2c:	adc    ebp,DWORD PTR [ecx]
  41cd2e:	push   esi
  41cd2f:	jg     0x41cd40
  41cd31:	loope  0x41ccea
  41cd33:	bnd ret 
  41cd35:	shl    DWORD PTR ds:0xabcf17fe,0x8f
  41cd3c:	sub    ch,BYTE PTR ds:0xbd31aaa1
  41cd42:	push   eax
  41cd43:	ret    0xab14
  41cd46:	xchg   esp,eax
  41cd47:	hlt    
  41cd48:	jns    0x41cd29
  41cd4a:	cmp    DWORD PTR [esi-0x3a],ebp
  41cd4d:	adc    al,0xb3
  41cd4f:	inc    ebp
  41cd50:	adc    DWORD PTR [esp+edx*4],ebx
  41cd53:	scas   eax,DWORD PTR es:[edi]
  41cd54:	adc    eax,0xe328c95e
  41cd59:	sti    
  41cd5a:	cmc    
  41cd5b:	lods   al,BYTE PTR ds:[esi]
  41cd5c:	mov    esp,0xde33a109
  41cd61:	cmp    al,0xcd
  41cd63:	arpl   WORD PTR [ecx-0x5bec58e8],si
  41cd69:	neg    DWORD PTR [esp+eax*4]
  41cd6c:	outs   dx,BYTE PTR ds:[esi]
  41cd6d:	out    0x88,al
  41cd6f:	fld    QWORD PTR [ecx-0x59]
  41cd72:	cs mov ebx,0x5ae4e4e3
  41cd78:	pushf  
  41cd79:	adc    eax,0x8ecdfa7
  41cd7e:	jae    0x41cd13
  41cd80:	ret    0xe7b5
  41cd83:	mov    ecx,0x4e425b27
  41cd88:	push   ds
  41cd89:	aaa    
  41cd8a:	pop    esp
  41cd8b:	jge    0x41cd2c
  41cd8d:	push   cs
  41cd8e:	pop    ecx
  41cd8f:	cmp    al,0x6b
  41cd91:	xor    eax,0x6feb66e1
  41cd96:	cli    
  41cd97:	mov    esi,0xa4c481ca
  41cd9c:	retf   
  41cd9d:	adc    bl,BYTE PTR [ebx-0x45]
  41cda0:	mov    al,ds:0xfeef709e
  41cda5:	arpl   WORD PTR [eax+0x4d],bx
  41cda8:	mov    al,0x48
  41cdaa:	adc    al,0xc7
  41cdac:	cmp    eax,ebp
  41cdae:	mov    bl,0x7f
  41cdb0:	mov    dl,0x75
  41cdb2:	ss iret 
  41cdb4:	xchg   ebp,eax
  41cdb5:	popa   
  41cdb6:	imul   BYTE PTR [ebp-0x7b69659e]
  41cdbc:	push   esi
  41cdbd:	(bad)  
  41cdbe:	mov    ebp,0x2944343b
  41cdc3:	les    ebx,FWORD PTR [edx+0x63]
  41cdc6:	ret    
  41cdc7:	leave  
  41cdc8:	lea    ebp,[eax]
  41cdca:	shr    BYTE PTR [ecx-0x7c],0xc5
  41cdce:	push   ebx
  41cdcf:	leave  
  41cdd0:	pop    ecx
  41cdd1:	leave  
  41cdd2:	jns    0x41cd86
  41cdd4:	adc    BYTE PTR [ecx],dh
  41cdd6:	loopne 0x41cd6f
  41cdd8:	test   BYTE PTR [ebp+0x7b],dl
  41cddb:	add    bh,BYTE PTR [esp+ebp*8+0x468b789e]
  41cde2:	push   ebp
  41cde3:	pop    ss
  41cde4:	fild   WORD PTR [esi-0x4305901d]
  41cdea:	mov    ecx,0x516552f3
  41cdef:	push   ecx
  41cdf0:	ret    
  41cdf1:	mov    esp,ecx
  41cdf3:	js     0x41cde4
  41cdf5:	pop    esi
  41cdf6:	push   ecx
  41cdf7:	nop
  41cdf8:	mov    ds:0x7587522e,eax
  41cdfd:	cwde   
  41cdfe:	(bad)  
  41cdff:	or     DWORD PTR [ecx],esp
  41ce01:	dec    esi
  41ce02:	jno    0x41cd87
  41ce04:	and    BYTE PTR [ebp-0x3dc0d0a1],bh
  41ce0a:	xchg   edx,eax
  41ce0b:	(bad)  
  41ce0c:	repnz in al,dx
  41ce0e:	xchg   esp,eax
  41ce0f:	jno    0x41ce1a
  41ce11:	push   edx
  41ce12:	mov    dh,0x1
  41ce14:	mov    esp,0x6c9cdbbb
  41ce19:	pop    esp
  41ce1a:	sbb    bh,BYTE PTR [edi-0x24]
  41ce1d:	xchg   esi,eax
  41ce1e:	test   eax,0x6cc34b33
  41ce23:	test   DWORD PTR [edi+0x53],edx
  41ce26:	inc    esp
  41ce27:	or     bh,BYTE PTR [edi-0x43]
  41ce2a:	ror    esp,1
  41ce2c:	test   edx,0xf3caca30
  41ce32:	fwait
  41ce33:	add    ch,BYTE PTR [esp+eiz*8-0x7b]
  41ce37:	cmp    BYTE PTR [ecx+0x65187763],0xa9
  41ce3e:	je     0x41ce4d
  41ce40:	mov    ch,0xe7
  41ce42:	mov    al,0xe5
  41ce44:	mov    dl,0xe9
  41ce46:	stos   BYTE PTR es:[edi],al
  41ce47:	xchg   ebx,eax
  41ce48:	mov    bl,0xf3
  41ce4a:	pop    esi
  41ce4b:	lods   eax,DWORD PTR ds:[esi]
  41ce4c:	sbb    BYTE PTR [ebp-0x5446fbe4],al
  41ce52:	rcr    DWORD PTR [eax-0x1b],cl
  41ce55:	add    BYTE PTR [edx+0x52],ah
  41ce58:	fidivr DWORD PTR [ebx]
  41ce5a:	mov    bl,0x52
  41ce5c:	call   DWORD PTR [ecx+0x3b]
  41ce5f:	xor    edx,DWORD PTR ds:[edx+0x3d]
  41ce63:	gs ss pusha 
  41ce66:	sti    
  41ce67:	push   0xffffffd9
  41ce69:	sti    
  41ce6a:	ret    0xa30
  41ce6d:	aad    0x51
  41ce6f:	sbb    bh,BYTE PTR [ebp+ebx*4-0x1cc66526]
  41ce76:	pusha  
  41ce77:	call   0x970e:0xc0ec3b67
  41ce7e:	test   DWORD PTR [eax-0x5f0f8df1],0xce97603b
  41ce88:	mov    esi,DWORD PTR [ebx+0x79]
  41ce8b:	sahf   
  41ce8c:	jb     0x41cec8
  41ce8e:	lods   eax,DWORD PTR ds:[esi]
  41ce8f:	cmp    cl,BYTE PTR [edi]
  41ce91:	inc    esi
  41ce92:	dec    bl
  41ce94:	out    0x84,al
  41ce96:	adc    ebp,DWORD PTR [edx]
  41ce98:	add    ah,BYTE PTR [ebx-0x71fa295d]
  41ce9e:	scas   al,BYTE PTR es:[edi]
  41ce9f:	add    eax,0x386703c8
  41cea4:	scas   eax,DWORD PTR es:[edi]
  41cea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea6:	xor    BYTE PTR [ecx+0x2a],bl
  41cea9:	out    dx,eax
  41ceaa:	mov    ds:0x85d6b370,eax
  41ceaf:	inc    eax
  41ceb0:	push   edx
  41ceb1:	in     al,dx
  41ceb2:	adc    cl,BYTE PTR [esp+esi*8+0x5]
  41ceb6:	iret   
  41ceb7:	xchg   ecx,eax
  41ceb8:	fistp  QWORD PTR [ebx-0x161116c4]
  41cebe:	xchg   ah,al
  41cec0:	shl    BYTE PTR [edx],cl
  41cec2:	xchg   ecx,eax
  41cec3:	lds    esi,FWORD PTR [ecx-0x31]
  41cec6:	in     eax,dx
  41cec7:	push   esi
  41cec8:	inc    ecx
  41cec9:	xor    WORD PTR [esi-0x3d],ax
  41cecd:	mov    edx,0x4dfa0ca9
  41ced2:	loop   0x41cec8
  41ced4:	fmul   DWORD PTR [ebx-0x59]
  41ced7:	push   ebx
  41ced8:	imul   ecx,ebp,0xfffffffa
  41cedb:	repnz inc ebp
  41cedd:	pop    esp
  41cede:	test   eax,0x58210cf8
  41cee3:	loope  0x41cef8
  41cee5:	mov    bl,BYTE PTR [ebx+0x4b54ead6]
  41ceeb:	push   ds
  41ceec:	pop    ds
  41ceed:	ss push ecx
  41ceef:	xchg   BYTE PTR [edx],al
  41cef1:	enter  0x81ac,0xb8
  41cef5:	ins    BYTE PTR es:[edi],dx
  41cef6:	pmaddwd mm6,QWORD PTR [eax-0x361de44e]
  41cefd:	fbstp  TBYTE PTR [esi]
  41ceff:	pop    eax
  41cf00:	ret    
  41cf01:	xor    eax,0xb94dacca
  41cf06:	push   eax
  41cf07:	repnz add bh,BYTE PTR [eax-0x6f]
  41cf0b:	outs   dx,DWORD PTR ds:[esi]
  41cf0c:	and    DWORD PTR [edi-0x28f4eb3b],esi
  41cf12:	mov    ebp,edx
  41cf14:	xchg   cl,bl
  41cf16:	mov    dh,dl
  41cf18:	fadd   st,st(6)
  41cf1a:	pop    ss
  41cf1b:	mov    bl,0xab
  41cf1d:	push   esi
  41cf1e:	cmp    eax,0xe6fc9b36
  41cf23:	add    BYTE PTR [eax],dh
  41cf25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf26:	sub    eax,0x15810c8a
  41cf2b:	aam    0xeb
  41cf2d:	push   esp
  41cf2e:	xor    DWORD PTR [edx-0x227cce23],0xfffffff4
  41cf35:	dec    ecx
  41cf36:	and    ebx,DWORD PTR [edi+0x35b23c8f]
  41cf3c:	sub    DWORD PTR [edx-0x3fea5c5e],eax
  41cf42:	mov    ah,BYTE PTR [ebx-0x28]
  41cf45:	pop    ecx
  41cf46:	cwde   
  41cf47:	push   0xffffff8c
  41cf49:	fwait
  41cf4a:	cmc    
  41cf4b:	pop    ebx
  41cf4c:	stos   BYTE PTR es:[edi],al
  41cf4d:	fmul   st,st(0)
  41cf4f:	dec    eax
  41cf50:	jno    0x41cf5c
  41cf52:	arpl   di,si
  41cf54:	push   edi
  41cf55:	adc    ch,BYTE PTR [eax-0x47]
  41cf58:	bnd jg 0x41cf33
  41cf5b:	ret    0xad8b
  41cf5e:	pop    ebp
  41cf5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf60:	jmp    0xa25cb308
  41cf65:	inc    edi
  41cf66:	lahf   
  41cf67:	mov    ebx,0x193ed537
  41cf6c:	xchg   DWORD PTR [esi+0x2dfbf242],esi
  41cf72:	sub    BYTE PTR [edi],0x83
  41cf75:	mov    WORD PTR [eax],cs
  41cf77:	out    dx,al
  41cf78:	mov    eax,ds:0x2f4602e9
  41cf7d:	push   ss
  41cf7e:	clc    
  41cf7f:	push   edx
  41cf80:	not    BYTE PTR [edi+0x6f]
  41cf83:	es hlt 
  41cf85:	pop    bp
  41cf87:	jne    0x41cf1b
  41cf89:	ret    
  41cf8a:	je     0x41cf18
  41cf8c:	sbb    DWORD PTR [ebp+0xf41a3a],ebx
  41cf92:	into   
  41cf93:	jne    0x41cf24
  41cf95:	push   ebp
  41cf96:	xchg   edx,eax
  41cf97:	or     eax,0x25902e27
  41cf9c:	adc    DWORD PTR [eax],ebx
  41cf9e:	mov    bl,0xc0
  41cfa0:	inc    ebx
  41cfa1:	inc    edx
  41cfa2:	push   ecx
  41cfa3:	xchg   ebp,eax
  41cfa4:	shl    DWORD PTR [edi],1
  41cfa6:	aad    0xb5
  41cfa8:	xlat   BYTE PTR ds:[ebx]
  41cfa9:	fdivr  st,st(3)
  41cfab:	dec    ecx
  41cfac:	add    ah,BYTE PTR [eax+eax*1+0x0]
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x520a218
  41cfc2:	pop    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	hlt    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR ds:0x4d024d0b,cl
  41cfcf:	cld    
  41cfd0:	adc    al,0x5f
  41cfd2:	imul   ebx,DWORD PTR [ecx+0x1e],0x6f
  41cfd6:	loope  0x41d035
  41cfd8:	jno    0x41cfd3
  41cfda:	mov    esp,?
  41cfdc:	test   DWORD PTR [ebp+0x353d0542],edi
  41cfe2:	inc    ebx
  41cfe3:	rol    DWORD PTR [eax+0x4e],1
  41cfe6:	neg    eax
  41cfe8:	adc    BYTE PTR [edi],dl
  41cfea:	mov    edx,0xaf5d4563
  41cfef:	jae    0x41cfd2
  41cff1:	fidivr DWORD PTR [ebp+0x68]
  41cff4:	fadd   st,st(3)
  41cff6:	jne    0x41cfcf
  41cff8:	jo     0x41cfe6
  41cffa:	mov    dh,0xdc
  41cffc:	mov    esp,0x9d5a56c9
  41d001:	mov    cl,BYTE PTR [ebx]
  41d003:	dec    eax
  41d004:	pop    eax
  41d005:	xor    al,0x88
  41d007:	outs   dx,DWORD PTR ds:[esi]
  41d008:	leave  
  41d009:	in     eax,0x3a
  41d00b:	hlt    
  41d00c:	or     BYTE PTR [edx+0x6e1b1342],dl
  41d012:	clc    
  41d013:	mov    bh,0x24
  41d015:	lahf   
  41d016:	inc    ebp
  41d017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d018:	in     al,0x88
  41d01a:	daa    
  41d01b:	pop    ss
  41d01c:	lods   eax,DWORD PTR ds:[esi]
  41d01d:	jmp    0x41cfab
  41d01f:	adc    edi,ebp
  41d021:	ja     0x41d06e
  41d023:	push   ebx
  41d024:	jb     0x41d01b
  41d026:	sbb    ebx,0xd0e540d
  41d02c:	xor    al,0xc3
  41d02e:	inc    edx
  41d02f:	call   eax
  41d031:	adc    eax,0xbf66a7c1
  41d036:	lds    esi,FWORD PTR [ebp-0x356dca8a]
  41d03c:	xor    dh,BYTE PTR es:[ebx]
  41d03f:	jg     0x41cfcc
  41d041:	stc    
  41d042:	mov    ch,0x3b
  41d044:	in     eax,0x58
  41d046:	repz imul ebp,eax,0x5
  41d04a:	call   0xd9024ef
  41d04f:	test   eax,0x2d46797f
  41d054:	cwde   
  41d055:	idiv   BYTE PTR [esi+edi*4-0x1e85dac]
  41d05c:	test   DWORD PTR [ebp-0x38],esp
  41d05f:	data16 (bad) 
  41d061:	xor    al,0x9c
  41d063:	mov    dl,0xd7
  41d065:	fstp   QWORD PTR [esp+eax*1]
  41d068:	jae    0x41d022
  41d06a:	adc    DWORD PTR [esi-0x55],edx
  41d06d:	test   bh,cl
  41d06f:	imul   dl
  41d071:	outs   dx,BYTE PTR ds:[esi]
  41d072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d073:	xor    DWORD PTR [esi],eax
  41d075:	push   ecx
  41d076:	dec    ebx
  41d077:	test   al,0x2c
  41d079:	sub    BYTE PTR [ebx-0x7f],0x52
  41d07d:	mov    dh,0xf1
  41d07f:	outs   dx,DWORD PTR ds:[esi]
  41d080:	push   ss
  41d081:	mov    ds:0xffb6abca,al
  41d086:	(bad)  
  41d087:	repnz pop ebp
  41d089:	test   DWORD PTR [ebp-0x5662693f],0x9e41c964
  41d093:	and    eax,0x165ac02f
  41d098:	add    esi,ecx
  41d09a:	adc    BYTE PTR [ebx],ah
  41d09c:	out    0xd1,eax
  41d09e:	mov    ?,edi
  41d0a0:	xlat   BYTE PTR ds:[ebx]
  41d0a1:	add    DWORD PTR [eax+edi*1-0x49],ecx
  41d0a5:	pop    ds
  41d0a6:	lds    edi,FWORD PTR [ecx+0x3543badb]
  41d0ac:	jo     0x41d0f9
  41d0ae:	les    ebx,FWORD PTR [eax+edx*4]
  41d0b1:	cmp    bl,al
  41d0b3:	call   0xc2f9:0x4c7a24e0
  41d0ba:	enter  0xb601,0xe0
  41d0be:	jno    0x41d09f
  41d0c0:	push   ebp
  41d0c1:	xchg   ebx,eax
  41d0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c3:	jno    0x41d0eb
  41d0c5:	outs   dx,DWORD PTR ds:[esi]
  41d0c6:	pop    es
  41d0c7:	sub    edi,DWORD PTR [esi+0x47]
  41d0ca:	sbb    BYTE PTR [edi+0x2df6db98],bl
  41d0d0:	mov    edi,0xf11778fe
  41d0d5:	xor    bh,dl
  41d0d7:	pop    es
  41d0d8:	pop    esi
  41d0d9:	sar    BYTE PTR fs:[edi+esi*2-0x1775cab1],0xdb
  41d0e2:	jne    0x41d14d
  41d0e4:	mov    eax,ds:0x40f66cbe
  41d0e9:	dec    edx
  41d0ea:	push   cs
  41d0eb:	sub    eax,0xc2b755a6
  41d0f0:	call   0xee64633a
  41d0f5:	and    eax,0x602e70fc
  41d0fa:	adc    bl,BYTE PTR [ebx+0x5]
  41d0fd:	jmp    0x10e01a62
  41d102:	jge    0x41d135
  41d104:	lahf   
  41d105:	bnd jnp 0x41d157
  41d108:	pushf  
  41d109:	push   ds
  41d10a:	jge    0x41d103
  41d10c:	sub    bl,dl
  41d10e:	loopne 0x41d0da
  41d110:	adc    edx,eax
  41d112:	push   ebp
  41d113:	out    dx,al
  41d114:	test   al,0x63
  41d116:	or     eax,0x9945136e
  41d11b:	cmp    edi,DWORD PTR [esi+ebp*8-0x5a]
  41d11f:	or     BYTE PTR [edi-0x3f],dl
  41d122:	adc    BYTE PTR [ebx-0x1f],ah
  41d125:	mov    ebx,0xa67fddbd
  41d12a:	xchg   DWORD PTR [ebx-0x1f],ebp
  41d12d:	sbb    al,0xfc
  41d12f:	mov    ah,0xb8
  41d131:	sbb    eax,0xd4374ecb
  41d136:	popa   
  41d137:	fstp   QWORD PTR [edx+0x7030c833]
  41d13d:	ds xor al,0x82
  41d140:	mov    esp,0x1d0530f5
  41d145:	(bad)  
  41d147:	jmp    0x41d142
  41d149:	inc    ebx
  41d14a:	xchg   esi,eax
  41d14b:	cmp    bl,ah
  41d14d:	and    eax,edi
  41d14f:	fxch   st(5)
  41d151:	lock int3 
  41d153:	cmp    esi,DWORD PTR [esi]
  41d155:	(bad)  
  41d156:	add    ebp,ebp
  41d158:	out    dx,eax
  41d159:	mov    edx,eax
  41d15b:	cmp    ebp,esp
  41d15d:	call   0x2ceb6886
  41d162:	sbb    bh,BYTE PTR ds:0xe3c393e7
  41d168:	inc    esp
  41d169:	cli    
  41d16a:	pop    es
  41d16b:	stos   DWORD PTR es:[edi],eax
  41d16c:	sbb    cl,BYTE PTR [ebp+0x31]
  41d16f:	push   cs
  41d170:	lods   al,BYTE PTR ds:[esi]
  41d171:	push   cs
  41d172:	ins    BYTE PTR es:[edi],dx
  41d173:	icebp  
  41d174:	int    0x46
  41d176:	mov    esi,0xa9465d2
  41d17b:	add    dh,cl
  41d17d:	xor    ecx,DWORD PTR ds:0xf966df89
  41d183:	popf   
  41d184:	adc    eax,0x3c9a816c
  41d189:	sbb    al,0xfc
  41d18b:	mov    es,WORD PTR [edi]
  41d18d:	jnp    0x41d1ed
  41d18f:	data16 aaa 
  41d191:	fidiv  DWORD PTR [ecx-0x25]
  41d194:	jne    0x41d185
  41d196:	pop    ds
  41d197:	push   esi
  41d198:	pop    esp
  41d199:	xchg   ecx,eax
  41d19a:	jo     0x41d17f
  41d19c:	adc    BYTE PTR ss:[edx+0x3f],0x70
  41d1a1:	cmp    al,0xa7
  41d1a3:	sbb    ebx,edx
  41d1a5:	xchg   edi,eax
  41d1a6:	dec    esi
  41d1a7:	adc    esp,DWORD PTR [ecx+eiz*4]
  41d1aa:	ds mov cl,0x4a
  41d1ad:	mov    dl,0x1
  41d1af:	outs   dx,BYTE PTR ds:[esi]
  41d1b0:	test   BYTE PTR [ecx],ah
  41d1b2:	add    ebx,DWORD PTR [ecx]
  41d1b4:	inc    eax
  41d1b5:	rcr    esp,cl
  41d1b7:	inc    edi
  41d1b8:	and    BYTE PTR [ecx-0xd380653],dl
  41d1be:	inc    ebp
  41d1bf:	xchg   ebp,eax
  41d1c0:	push   es
  41d1c1:	pop    esi
  41d1c2:	sar    BYTE PTR [eax+0xe],0x3d
  41d1c6:	xor    eax,0xe2109622
  41d1cb:	icebp  
  41d1cc:	iret   
  41d1cd:	mov    al,0xdd
  41d1cf:	push   ebx
  41d1d0:	fbld   TBYTE PTR [ecx-0x67158d3e]
  41d1d6:	sbb    al,0x11
  41d1d8:	pop    ebx
  41d1d9:	loop   0x41d1c8
  41d1db:	fcom   DWORD PTR [eax-0x25]
  41d1de:	rol    DWORD PTR [ecx+0x742b19dc],1
  41d1e4:	push   eax
  41d1e5:	add    DWORD PTR fs:[esi+0x368a2f8],ecx
  41d1ec:	push   esi
  41d1ed:	(bad)  
  41d1ef:	in     al,dx
  41d1f0:	push   es
  41d1f1:	jecxz  0x41d257
  41d1f3:	and    ecx,ebx
  41d1f5:	pop    esi
  41d1f6:	call   0xe5cd:0x4feb1bbd
  41d1fd:	ss mov esi,0x336105e1
  41d203:	imul   edi,DWORD PTR [esi+0x4dfee571],0x2b6649d6
  41d20d:	jb     0x41d203
  41d20f:	cmp    eax,0x3082c07e
  41d214:	inc    ebx
  41d215:	repnz or esi,eax
  41d218:	rcl    DWORD PTR [ebx-0x49],1
  41d21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d21c:	xchg   ebp,eax
  41d21d:	pop    ebx
  41d21e:	sub    ebx,DWORD PTR [eax-0x8872aa2]
  41d224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d225:	add    al,0x14
  41d227:	shl    bh,1
  41d229:	jne    0x41d237
  41d22b:	test   al,0x90
  41d22d:	mov    al,ds:0x71bbe9d8
  41d232:	mov    WORD PTR [esi+0x4980093e],?
  41d238:	int    0x5f
  41d23a:	(bad)  
  41d23b:	jl     0x41d1f3
  41d23d:	push   ebp
  41d23e:	lahf   
  41d23f:	xchg   ebx,eax
  41d240:	jmp    DWORD PTR [ebx-0x55]
  41d243:	xor    ax,cx
  41d246:	out    dx,al
  41d247:	out    0x8b,eax
  41d249:	jns    0x41d275
  41d24b:	icebp  
  41d24c:	or     eax,0x2e51f200
  41d251:	or     ah,ah
  41d253:	fcomi  st,st(3)
  41d255:	pop    esp
  41d256:	aam    0x1e
  41d258:	rep stos DWORD PTR es:[edi],eax
  41d25a:	ins    DWORD PTR es:[edi],dx
  41d25b:	jle    0x41d2db
  41d25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d25e:	dec    eax
  41d25f:	retf   
  41d260:	jbe    0x41d1f7
  41d262:	mov    edx,0xf4b2793
  41d267:	sbb    DWORD PTR [edi],esi
  41d269:	sbb    BYTE PTR [edi],cl
  41d26b:	pop    es
  41d26c:	inc    esi
  41d26d:	into   
  41d26e:	mov    al,0x13
  41d270:	gs jne 0x41d28a
  41d273:	(bad)  
  41d274:	or     bl,bl
  41d276:	dec    ebx
  41d277:	jo     0x41d20e
  41d279:	fwait
  41d27a:	or     ebx,esp
  41d27c:	mov    edi,0xf11eac15
  41d281:	inc    esp
  41d282:	mov    cl,0x29
  41d284:	lods   eax,DWORD PTR ds:[esi]
  41d285:	push   es
  41d286:	adc    eax,esp
  41d288:	data16 (bad) ss:[esi+0xe]
  41d28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d28e:	pop    es
  41d28f:	add    eax,0x3b3ae35a
  41d294:	dec    edx
  41d295:	cmp    dh,dh
  41d297:	sub    eax,0x2977e374
  41d29c:	nop
  41d29d:	xchg   BYTE PTR ds:[edx-0x2d],bh
  41d2a1:	es jb  0x41d313
  41d2a4:	xchg   ebp,eax
  41d2a5:	or     al,0x4a
  41d2a7:	ror    eax,0x24
  41d2aa:	mov    bh,0x88
  41d2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ad:	arpl   WORD PTR [eax+esi*2],cx
  41d2b0:	push   ecx
  41d2b1:	dec    edx
  41d2b2:	in     eax,0x68
  41d2b4:	fcmovbe st,st(7)
  41d2b6:	test   ebx,ecx
  41d2b8:	sub    BYTE PTR [esi+0x56],cl
  41d2bb:	push   ecx
  41d2bc:	xchg   esp,eax
  41d2bd:	mov    ds:0xc49c4fa7,al
  41d2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2c3:	int    0x5c
  41d2c5:	or     al,0x88
  41d2c7:	imul   DWORD PTR ds:[ecx]
  41d2ca:	push   0x10
  41d2cc:	sahf   
  41d2cd:	sbb    DWORD PTR [edi],ebp
  41d2cf:	sbb    esp,DWORD PTR [ecx-0x1a]
  41d2d2:	repz sbb BYTE PTR [edi],ch
  41d2d5:	adc    esp,ecx
  41d2d7:	mov    dl,BYTE PTR [ecx-0x9]
  41d2da:	pop    edi
  41d2db:	push   es
  41d2dc:	rcr    bh,0x75
  41d2df:	icebp  
  41d2e0:	add    BYTE PTR [ecx],dh
  41d2e2:	cmp    eax,0xa19583a6
  41d2e7:	push   cs
  41d2e8:	in     eax,dx
  41d2e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ea:	fldenv [ecx]
  41d2ec:	cmp    dh,bl
  41d2ee:	and    al,0x5e
  41d2f0:	es loopne 0x41d329
  41d2f3:	call   0xf415:0x64e792c
  41d2fa:	fwait
  41d2fb:	add    esi,DWORD PTR [ebx+0x56f1ff6c]
  41d301:	aam    0x2e
  41d303:	jmp    0x41d360
  41d305:	lods   al,BYTE PTR cs:[esi]
  41d307:	mov    ch,0x7f
  41d309:	sub    eax,0xe91f38
  41d30e:	mov    DWORD PTR ds:0x1b62caf7,eax
  41d314:	aad    0xf1
  41d316:	js     0x41d2de
  41d318:	jecxz  0x41d2f7
  41d31a:	nop
  41d31b:	cmp    dx,WORD PTR [eax-0x38]
  41d31f:	xor    al,0xd0
  41d321:	popa   
  41d322:	mov    ds:0x34f7a678,eax
  41d327:	or     esi,edi
  41d329:	jg     0x41d371
  41d32b:	rcl    DWORD PTR [ebx-0x5faf77cf],1
  41d331:	data16 into 
  41d333:	sub    DWORD PTR [ecx+0x3456a31],esp
  41d339:	data16 adc BYTE PTR [eax],bh
  41d33c:	fst    QWORD PTR [edx-0x5e29a17f]
  41d342:	sbb    DWORD PTR [ebx],ebp
  41d344:	xor    eax,0x9cc0eb40
  41d349:	push   ecx
  41d34a:	hlt    
  41d34b:	call   0xa4a8:0x2b2f43c2
  41d352:	daa    
  41d353:	stos   BYTE PTR es:[edi],al
  41d354:	in     al,0x25
  41d356:	cmp    al,0xff
  41d358:	es out 0xbf,al
  41d35b:	adc    eax,0xffffffe0
  41d35e:	pushf  
  41d35f:	jbe    0x41d2f8
  41d361:	ret    
  41d362:	push   ecx
  41d363:	retf   
  41d364:	jge    0x41d364
  41d366:	dec    eax
  41d367:	cmp    edx,DWORD PTR [ebp-0x36a94875]
  41d36d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d36e:	sub    dl,dl
  41d370:	inc    eax
  41d371:	pop    ebx
  41d372:	mov    ds:0x7754da2e,eax
  41d377:	add    al,0x61
  41d379:	neg    DWORD PTR [eax+0x235749be]
  41d37f:	xchg   ebx,eax
  41d380:	pop    edx
  41d381:	ret    0x1602
  41d384:	hlt    
  41d385:	adc    DWORD PTR [esi],edx
  41d387:	add    DWORD PTR [esi+0x14],edi
  41d38a:	hlt    
  41d38b:	pop    edx
  41d38c:	or     BYTE PTR [esi+0x335e0bd4],al
  41d392:	nop
  41d393:	push   ebx
  41d394:	jg     0x41d3fc
  41d396:	out    dx,al
  41d397:	push   ebx
  41d398:	nop
  41d399:	loop   0x41d38b
  41d39b:	jg     0x41d3f3
  41d39d:	xchg   esi,eax
  41d39e:	cmp    BYTE PTR [edi],ah
  41d3a0:	dec    ebp
  41d3a1:	jg     0x41d41a
  41d3a3:	(bad)  
  41d3a4:	fldenv ds:0xb9f88735
  41d3aa:	cmp    BYTE PTR [edx+eiz*1],cl
  41d3ad:	inc    ebx
  41d3ae:	cli    
  41d3af:	cdq    
  41d3b0:	das    
  41d3b1:	repnz pop ds
  41d3b3:	sub    al,0x2f
  41d3b5:	pusha  
  41d3b6:	pushf  
  41d3b7:	leave  
  41d3b8:	inc    edx
  41d3b9:	ins    BYTE PTR es:[edi],dx
  41d3ba:	and    DWORD PTR [eax+eax*4-0x7230d0a4],ecx
  41d3c1:	lods   eax,DWORD PTR ds:[esi]
  41d3c2:	ins    BYTE PTR es:[edi],dx
  41d3c3:	inc    edi
  41d3c4:	retf   0xfcc1
  41d3c7:	lea    edx,[edi]
  41d3c9:	mov    al,ds:0x3455e4eb
  41d3ce:	fisttp QWORD PTR [eax+eax*4-0x1f]
  41d3d2:	scas   eax,DWORD PTR es:[edi]
  41d3d3:	and    al,0x50
  41d3d5:	cwde   
  41d3d6:	add    edi,DWORD PTR [esi+esi*1+0x5f24aa51]
  41d3dd:	xchg   esp,eax
  41d3de:	inc    ebp
  41d3df:	cmp    ebx,DWORD PTR [edx+0x745284c6]
  41d3e5:	and    al,0x93
  41d3e7:	outs   dx,BYTE PTR ds:[esi]
  41d3e8:	mov    edi,0x10c1222d
  41d3ed:	xchg   esp,eax
  41d3ee:	mov    DWORD PTR [ebx+0x27],ecx
  41d3f1:	hlt    
  41d3f2:	add    dl,BYTE PTR [ebp-0x2b]
  41d3f5:	inc    edx
  41d3f6:	lahf   
  41d3f7:	xor    al,0x28
  41d3f9:	mov    edi,0xa6f36db0
  41d3fe:	arpl   WORD PTR [ebx],ax
  41d400:	sbb    edx,DWORD PTR [edi+0x4325c586]
  41d406:	in     al,0xb6
  41d408:	xor    DWORD PTR [esi],esi
  41d40a:	int3   
  41d40b:	sbb    al,0x93
  41d40d:	test   eax,0x6a9cdec5
  41d412:	mov    eax,0x4f5371bf
  41d417:	hlt    
  41d418:	push   ecx
  41d419:	jecxz  0x41d3d6
  41d41b:	rcl    DWORD PTR [ecx],1
  41d41d:	das    
  41d41e:	jge    0x41d41a
  41d420:	mov    al,ds:0x73b6331d
  41d425:	xlat   BYTE PTR ds:[ebx]
  41d426:	lock fld TBYTE PTR [eax-0x2d54b822]
  41d42d:	jge    0x41d409
  41d42f:	jle    0x41d3fe
  41d431:	or     DWORD PTR [ebx],edi
  41d433:	adc    esp,eax
  41d435:	mov    ds:0xb661b2ff,al
  41d43a:	sti    
  41d43b:	je     0x41d3da
  41d43d:	arpl   di,sp
  41d43f:	int3   
  41d440:	call   0x9dfe0efe
  41d445:	fnstenv [edi-0x2351deff]
  41d44b:	mov    esi,0x6e661aa9
  41d450:	jge    0x41d3fc
  41d452:	mov    eax,ds:0x6bf8b604
  41d457:	mov    fs:0xa7f808ca,eax
  41d45d:	pop    edx
  41d45e:	mov    WORD PTR [esi+ebp*1-0x582cf764],ss
  41d465:	inc    esp
  41d466:	or     al,BYTE PTR [edx+ebp*8]
  41d469:	inc    edx
  41d46a:	sub    BYTE PTR ss:[edi-0x97053f0],ah
  41d471:	or     BYTE PTR ds:0x69248d1b,ah
  41d477:	inc    ecx
  41d478:	das    
  41d479:	mov    al,0x1e
  41d47b:	jl     0x41d4fa
  41d47d:	aas    
  41d47e:	dec    edi
  41d47f:	pop    ebx
  41d480:	sbb    DWORD PTR [esi+0x51],ebp
  41d483:	aaa    
  41d484:	outs   dx,BYTE PTR ds:[esi]
  41d485:	ins    BYTE PTR es:[edi],dx
  41d486:	sbb    al,0x3e
  41d488:	sub    edx,0x69
  41d48b:	inc    ecx
  41d48c:	pop    ecx
  41d48d:	test   DWORD PTR [ebx],ebp
  41d48f:	lahf   
  41d490:	test   DWORD PTR [eax-0x648d7c01],ecx
  41d496:	and    eax,0x35cca899
  41d49b:	cmp    ebp,DWORD PTR ds:0x7b4291f7
  41d4a1:	rcl    DWORD PTR ds:0x746b96a9,0x1b
  41d4a8:	jno    0x41d449
  41d4aa:	and    DWORD PTR [ebx+0x65],ecx
  41d4ad:	dec    esp
  41d4ae:	loop   0x41d483
  41d4b0:	sub    eax,0x8d2f5851
  41d4b5:	stos   BYTE PTR es:[edi],al
  41d4b6:	xor    esi,esp
  41d4b8:	adc    eax,DWORD PTR [edx+0x74625343]
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0x655ff411
  41d4cf:	cmp    ah,BYTE PTR [ebp+0x1504d2f]
  41d4d5:	add    ah,dh
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [ebx],bl
  41d4db:	xchg   BYTE PTR [esp+eax*8+0x32],bh
  41d4df:	pop    ecx
  41d4e0:	shl    BYTE PTR [ecx-0x75],1
  41d4e3:	push   ebp
  41d4e4:	cmp    BYTE PTR [edi+ebx*2+0x1f9ce42e],bl
  41d4eb:	sbb    BYTE PTR [ebx-0x4f],dh
  41d4ee:	in     eax,dx
  41d4ef:	xor    bh,dl
  41d4f1:	fwait
  41d4f2:	push   edi
  41d4f3:	aad    0x77
  41d4f5:	popf   
  41d4f6:	and    eax,0x569d7cc1
  41d4fb:	mov    eax,DWORD PTR [ebp+0x2b]
  41d4fe:	lea    ebx,[edx+0x3ef258c7]
  41d504:	mov    ebx,0xba021433
  41d509:	jne    0x41d491
  41d50b:	arpl   WORD PTR [ebx+eiz*2],bp
  41d50e:	jae    0x41d534
  41d510:	xchg   edx,eax
  41d511:	push   ds
  41d512:	pop    ds
  41d513:	stc    
  41d514:	shufps xmm2,xmm1,0xb4
  41d518:	mov    eax,?
  41d51a:	pop    edx
  41d51b:	jmp    0x49f3:0xf1b1cb93
  41d522:	ja     0x41d590
  41d524:	add    BYTE PTR [ecx+0x26],dh
  41d527:	jmp    0x8131:0x25833f14
  41d52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d52f:	push   ebp
  41d530:	data16 mov ds:0x51d0dca9,al
  41d536:	pop    es
  41d537:	xchg   BYTE PTR [edx],al
  41d539:	in     al,dx
  41d53a:	sar    ebp,1
  41d53c:	out    0x73,al
  41d53e:	xchg   ecx,eax
  41d53f:	(bad)  
  41d540:	je     0x41d57f
  41d542:	popf   
  41d543:	add    eax,DWORD PTR [edi]
  41d545:	aam    0x2c
  41d547:	inc    eax
  41d548:	mov    ecx,ebp
  41d54a:	mov    bl,0xc2
  41d54c:	cmp    ah,ch
  41d54e:	das    
  41d54f:	ret    0x3694
  41d552:	mov    esp,0xe8683300
  41d557:	xlat   BYTE PTR ds:[ebx]
  41d558:	pop    ebx
  41d559:	add    al,0x57
  41d55b:	popa   
  41d55c:	lock pop ebx
  41d55e:	jbe    0x41d53a
  41d560:	repz dec esi
  41d562:	cld    
  41d563:	jmp    0xeaed:0x3038df7c
  41d56a:	cmp    al,0xc7
  41d56c:	xlat   BYTE PTR ds:[ebx]
  41d56d:	inc    eax
  41d56e:	sbb    cl,dl
  41d570:	das    
  41d571:	enter  0xf396,0x26
  41d575:	dec    edi
  41d576:	aaa    
  41d577:	call   0x288d:0x3b6403b0
  41d57e:	xchg   ebp,eax
  41d57f:	cmp    al,0x30
  41d581:	cdq    
  41d582:	dec    edi
  41d583:	(bad)  
  41d584:	push   eax
  41d585:	mov    bl,0x8d
  41d587:	jnp    0x41d544
  41d589:	inc    esp
  41d58a:	cmp    ecx,ebx
  41d58c:	fidivr WORD PTR [esi+eiz*2-0xc]
  41d590:	push   ecx
  41d591:	xor    eax,0xb2390464
  41d596:	add    BYTE PTR [ecx+0x40f72748],ch
  41d59c:	out    0x49,eax
  41d59e:	dec    edi
  41d59f:	adc    eax,0x77a36e44
  41d5a4:	jbe    0x41d59c
  41d5a6:	leave  
  41d5a7:	std    
  41d5a8:	or     DWORD PTR [ebx-0x6d6d307b],0xa3006382
  41d5b2:	aaa    
  41d5b3:	out    dx,al
  41d5b4:	or     eax,0x6c9d09db
  41d5b9:	je     0x41d561
  41d5bb:	int3   
  41d5bc:	jecxz  0x41d5f8
  41d5be:	add    BYTE PTR [ecx+0xe],0xce
  41d5c2:	test   edi,esi
  41d5c4:	ret    0xc39f
  41d5c7:	stos   DWORD PTR es:[edi],eax
  41d5c8:	adc    al,0xe9
  41d5ca:	stc    
  41d5cb:	cwde   
  41d5cc:	lods   al,BYTE PTR ds:[esi]
  41d5cd:	push   ecx
  41d5ce:	inc    esp
  41d5cf:	retf   0xfa11
  41d5d2:	xchg   edi,eax
  41d5d3:	dec    ecx
  41d5d4:	inc    edx
  41d5d5:	xchg   ebx,eax
  41d5d6:	dec    esi
  41d5d7:	xchg   BYTE PTR [esi-0x4f2c451b],dh
  41d5dd:	inc    esi
  41d5de:	adc    DWORD PTR [edx-0x12],edx
  41d5e1:	push   edi
  41d5e2:	in     eax,0x63
  41d5e4:	frstor [ebp+eax*1-0x5]
  41d5e8:	mov    bl,0xb4
  41d5ea:	pop    eax
  41d5eb:	jb     0x41d656
  41d5ed:	sbb    al,0x3d
  41d5ef:	jns    0x41d5a6
  41d5f1:	inc    ebx
  41d5f2:	pop    edx
  41d5f3:	leave  
  41d5f4:	nop
  41d5f5:	dec    edi
  41d5f6:	mov    bh,0x7f
  41d5f8:	or     eax,0xbb97a7c
  41d5fd:	pop    ds
  41d5fe:	xchg   esp,eax
  41d5ff:	test   eax,0xc592a74f
  41d604:	inc    edi
  41d605:	xor    BYTE PTR [edi-0x4d871b06],0x50
  41d60c:	or     al,0x86
  41d60e:	in     eax,dx
  41d60f:	rol    BYTE PTR [edx+ebp*2-0x5107ab06],cl
  41d616:	push   cs
  41d617:	gs call 0xe2b1aa10
  41d61d:	and    eax,0xc22b7680
  41d622:	inc    esp
  41d623:	fwait
  41d624:	out    dx,al
  41d625:	xor    ah,ch
  41d627:	xchg   ebp,eax
  41d628:	scas   eax,DWORD PTR es:[edi]
  41d629:	popa   
  41d62a:	jl     0x41d6ab
  41d62c:	pop    ebx
  41d62d:	mov    BYTE PTR [edi-0x46f37715],dl
  41d633:	pop    ebp
  41d634:	imul   edx,DWORD PTR [eax+eax*2],0xffffffc8
  41d638:	jnp    0x41d661
  41d63a:	sbb    eax,0xd940c9e1
  41d63f:	imul   ecx,DWORD PTR [esi],0xcb890e1d
  41d645:	hlt    
  41d646:	sub    ecx,DWORD PTR [ebp+0x69]
  41d649:	das    
  41d64a:	leave  
  41d64b:	mov    dl,0xc3
  41d64d:	inc    eax
  41d64e:	adc    eax,0x471f7222
  41d653:	inc    esp
  41d654:	adc    eax,0xe8562c04
  41d659:	pop    ebp
  41d65a:	stos   BYTE PTR es:[edi],al
  41d65b:	adc    BYTE PTR [esi+eiz*1],dl
  41d65e:	fisub  WORD PTR [edx-0x37e2efd2]
  41d664:	mov    esi,0x2651d71f
  41d669:	in     al,dx
  41d66a:	mov    gs,WORD PTR [esi]
  41d66c:	aad    0x5f
  41d66e:	cdq    
  41d66f:	jno    0x41d630
  41d671:	adc    al,0x7d
  41d673:	loopne 0x41d641
  41d675:	add    DWORD PTR [edx],edi
  41d677:	sub    DWORD PTR [ecx+0x46],esp
  41d67a:	sbb    eax,0x69655370
  41d67f:	call   0x9e1c:0x4b4cd61f
  41d686:	xchg   edx,eax
  41d687:	hlt    
  41d688:	aaa    
  41d689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d68a:	pusha  
  41d68b:	mov    BYTE PTR [esp+ebp*1+0x5a],0x83
  41d690:	ror    DWORD PTR [edx+0x27],0x92
  41d694:	dec    ecx
  41d695:	test   edx,ebp
  41d697:	out    0xd2,al
  41d699:	mov    ebp,0x32e9815c
  41d69e:	xchg   ebx,eax
  41d69f:	mov    ds:0x3fc57f97,eax
  41d6a4:	jecxz  0x41d716
  41d6a6:	std    
  41d6a7:	lods   al,BYTE PTR ds:[esi]
  41d6a8:	mov    dh,0x7c
  41d6aa:	shl    BYTE PTR [ebp+0x357b2bd1],cl
  41d6b0:	push   ecx
  41d6b1:	jg     0x41d697
  41d6b3:	mov    esi,0xfbc484f1
  41d6b8:	inc    eax
  41d6b9:	aaa    
  41d6ba:	xor    BYTE PTR ds:0xe293de78,cl
  41d6c0:	int    0x96
  41d6c2:	jecxz  0x41d666
  41d6c4:	cld    
  41d6c5:	sbb    cl,BYTE PTR [ecx+0x7f30879f]
  41d6cb:	cmp    BYTE PTR [esi],ah
  41d6cd:	scas   eax,DWORD PTR es:[edi]
  41d6ce:	mov    dl,ch
  41d6d0:	stos   DWORD PTR es:[edi],eax
  41d6d1:	add    BYTE PTR [edi+ebp*2],0x61
  41d6d5:	xor    DWORD PTR [esi],esp
  41d6d7:	xor    eax,0x4f541f40
  41d6dc:	mov    eax,0xad398dbf
  41d6e1:	sub    al,0x39
  41d6e3:	popf   
  41d6e4:	sub    DWORD PTR [ebp-0x27d3580f],esi
  41d6ea:	inc    ebx
  41d6eb:	out    0x26,eax
  41d6ed:	(bad)  
  41d6ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ef:	inc    edi
  41d6f0:	ror    BYTE PTR [edx-0x1],0x9b
  41d6f4:	fsub   st(5),st
  41d6f6:	into   
  41d6f7:	retf   
  41d6f8:	push   esp
  41d6f9:	and    eax,0xa766fee7
  41d6fe:	out    dx,al
  41d6ff:	shl    BYTE PTR [ebp-0x21aebc63],0x20
  41d706:	pop    ecx
  41d707:	xchg   esi,eax
  41d708:	in     al,dx
  41d709:	pop    ecx
  41d70a:	jmp    0xdc80d359
  41d70f:	fs iret 
  41d711:	push   ebp
  41d712:	mov    ebx,0x440eafc3
  41d717:	loopne 0x41d6a6
  41d719:	xchg   edi,eax
  41d71a:	sar    esp,cl
  41d71c:	cmp    eax,0xf10945c7
  41d721:	shr    BYTE PTR [esi],1
  41d723:	push   eax
  41d724:	dec    esi
  41d725:	fild   DWORD PTR [eax+0x1]
  41d728:	and    BYTE PTR [ecx],bh
  41d72a:	bound  ecx,QWORD PTR [edi-0x3e]
  41d72d:	in     al,dx
  41d72e:	add    al,0x60
  41d730:	loopne 0x41d75d
  41d732:	xor    ah,bh
  41d734:	icebp  
  41d735:	mov    cl,0x20
  41d737:	mov    ah,0xa1
  41d739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d73a:	and    esp,DWORD PTR [esi+0x139da5c4]
  41d740:	jnp    0x41d77f
  41d742:	cli    
  41d743:	retf   0x2476
  41d746:	mov    DWORD PTR [eax+0x3b8534b0],esp
  41d74c:	sbb    DWORD PTR [eax],0x78392545
  41d752:	inc    ecx
  41d753:	adc    eax,edx
  41d755:	into   
  41d756:	mov    WORD PTR [ecx+0xd],ds
  41d759:	push   ecx
  41d75a:	fcmovb st,st(6)
  41d75c:	sahf   
  41d75d:	adc    eax,DWORD PTR [ecx-0x63]
  41d760:	add    BYTE PTR [ebx+ebp*1-0x350518be],dl
  41d767:	clc    
  41d768:	imul   esp,ebx,0x1
  41d76b:	dec    ebx
  41d76c:	dec    ebp
  41d76d:	add    eax,0xdf80ffc6
  41d772:	fwait
  41d773:	pop    eax
  41d774:	inc    ebx
  41d775:	sbb    eax,0x2cbd4f5d
  41d77a:	aam    0x79
  41d77c:	ja     0x41d749
  41d77e:	into   
  41d77f:	add    esp,ebp
  41d781:	stos   BYTE PTR es:[edi],al
  41d782:	mov    al,0x33
  41d784:	pop    es
  41d785:	or     DWORD PTR [ebx+eiz*1+0x70],esi
  41d789:	sbb    eax,0x58de40ab
  41d78e:	xchg   esp,eax
  41d78f:	inc    ebx
  41d790:	fdiv   QWORD PTR [esi+ebp*4-0x7d]
  41d794:	pop    ecx
  41d795:	mov    edi,0xf6c6ecc7
  41d79a:	pop    esi
  41d79b:	push   esp
  41d79c:	rcr    esi,cl
  41d79e:	fadd   QWORD PTR [ebx]
  41d7a0:	adc    dh,BYTE PTR [ecx-0x721cd42e]
  41d7a6:	add    ecx,DWORD PTR [edx-0x31]
  41d7a9:	pop    eax
  41d7aa:	ret    0x3017
  41d7ad:	lods   al,BYTE PTR ds:[esi]
  41d7ae:	in     al,0xf0
  41d7b0:	popf   
  41d7b1:	or     ecx,edx
  41d7b3:	iret   
  41d7b4:	xchg   edi,eax
  41d7b5:	lods   al,BYTE PTR ds:[esi]
  41d7b6:	test   al,0x45
  41d7b8:	nop
  41d7b9:	(bad)  
  41d7bb:	clc    
  41d7bc:	std    
  41d7bd:	mov    ch,0x11
  41d7bf:	cld    
  41d7c0:	imul   ebx,esp,0xd76709f4
  41d7c6:	aad    0xd6
  41d7c8:	xchg   esp,eax
  41d7c9:	repnz dec ebx
  41d7cb:	pop    ss
  41d7cc:	push   es
  41d7cd:	fild   WORD PTR [edi+0x4dd28933]
  41d7d3:	mov    esi,0x66cf6e4d
  41d7d8:	sub    edi,DWORD PTR [esi]
  41d7da:	mov    ebx,0x87649212
  41d7df:	inc    edx
  41d7e0:	repnz cli 
  41d7e2:	jae    0x41d7c3
  41d7e4:	adc    eax,0x5a7e4e18
  41d7e9:	add    BYTE PTR [edi+0x43],bl
  41d7ec:	das    
  41d7ed:	push   ds
  41d7ee:	and    esp,DWORD PTR [ecx]
  41d7f0:	(bad)  
  41d7f1:	aas    
  41d7f2:	xor    eax,0xe098af7c
  41d7f7:	iret   
  41d7f8:	push   esi
  41d7f9:	xchg   ebx,eax
  41d7fa:	jbe    0x41d863
  41d7fc:	mov    ecx,0xb0f44417
  41d801:	push   edi
  41d802:	or     DWORD PTR [ecx],edx
  41d804:	shr    eax,0x97
  41d807:	test   al,0x45
  41d809:	add    ebx,DWORD PTR [esp+esi*1-0x7d3d758b]
  41d810:	xchg   edx,eax
  41d811:	mov    BYTE PTR [edx],ah
  41d813:	test   BYTE PTR [esi+ecx*2+0x18],dl
  41d817:	xchg   edx,eax
  41d818:	ret    0x48f9
  41d81b:	and    edx,eax
  41d81d:	jg     0x41d7f2
  41d81f:	cmp    ah,bl
  41d821:	dec    eax
  41d822:	mov    ecx,0x221e274e
  41d827:	cmp    DWORD PTR [esi-0x1b],0x473d19d0
  41d82e:	xor    DWORD PTR [ebx+esi*1],0x6b
  41d832:	cmp    eax,0x37c44add
  41d837:	mov    bh,BYTE PTR [ebp+0x67]
  41d83a:	(bad)  
  41d83b:	xchg   edx,eax
  41d83c:	je     0x41d8a1
  41d83e:	inc    ebp
  41d83f:	hlt    
  41d840:	(bad)  
  41d841:	sbb    DWORD PTR [ecx+0x4],ecx
  41d844:	mov    esi,0xbc250020
  41d849:	mov    ds:0x772e37b4,eax
  41d84e:	lea    edx,[edi+edi*8+0x63]
  41d852:	popa   
  41d853:	mov    ds:0x6eba97a9,eax
  41d858:	lods   eax,DWORD PTR ds:[esi]
  41d859:	mov    dh,0xdf
  41d85b:	mov    al,0xc9
  41d85d:	adc    ebp,DWORD PTR [edx-0x52]
  41d860:	jns    0x41d89e
  41d862:	mov    esp,0xdeb78f6d
  41d867:	mov    eax,ds:0xed15718e
  41d86c:	mov    al,0x4f
  41d86e:	bound  ebp,QWORD PTR [ebp+0x165c0575]
  41d874:	and    eax,0x8a1b18e1
  41d879:	pop    eax
  41d87a:	mov    eax,ds:0x60ca3f5d
  41d87f:	leave  
  41d880:	not    DWORD PTR [edi]
  41d882:	inc    ebx
  41d883:	or     cl,bh
  41d885:	ja     0x41d82d
  41d887:	jl     0x41d80a
  41d889:	bound  ecx,QWORD PTR ds:0xdb01e5dc
  41d88f:	xchg   ebp,eax
  41d890:	push   ecx
  41d891:	mov    dl,0xf2
  41d893:	fdiv   st(0),st
  41d895:	pop    ebp
  41d896:	and    al,0xcf
  41d898:	rol    BYTE PTR [esi],cl
  41d89a:	mov    ds:0x3bb33adf,eax
  41d89f:	ret    0x551
  41d8a2:	(bad)  
  41d8a3:	repz mov esp,ecx
  41d8a6:	mov    ah,0x54
  41d8a8:	js     0x41d8b5
  41d8aa:	hlt    
  41d8ab:	adc    eax,0x7494735f
  41d8b0:	sub    al,0x8d
  41d8b2:	sbb    DWORD PTR [edx],0xffffffec
  41d8b5:	or     eax,0x60123f8d
  41d8ba:	jmp    0x6c30:0x5e9fea32
  41d8c1:	jmp    0x756ba622
  41d8c6:	lock mov dh,0xec
  41d8c9:	mov    ch,BYTE PTR [ecx]
  41d8cb:	and    ch,ah
  41d8cd:	push   ebx
  41d8ce:	mov    ch,0xe0
  41d8d0:	inc    ebp
  41d8d1:	inc    esi
  41d8d2:	xchg   BYTE PTR [ebp+0x3175ffb2],cl
  41d8d8:	outs   dx,DWORD PTR ds:[esi]
  41d8d9:	jp     0x41d8a9
  41d8db:	and    BYTE PTR [ebp*2+0x1aa55a31],0xfd
  41d8e3:	fs jmp 0x41d8dc
  41d8e6:	add    ecx,esi
  41d8e8:	inc    esi
  41d8e9:	sub    dl,cl
  41d8eb:	inc    eax
  41d8ec:	fimul  WORD PTR [ecx+eiz*4+0x1359ac5c]
  41d8f3:	call   0xf773:0xce492ba6
  41d8fa:	push   esi
  41d8fb:	inc    ebp
  41d8fc:	ja     0x41d90b
  41d8fe:	jae    0x41d933
  41d900:	cli    
  41d901:	gs jl  0x41d90c
  41d904:	shr    BYTE PTR ds:0xeb21a529,cl
  41d90a:	mov    BYTE PTR [edx+0x7d],ch
  41d90d:	cmp    eax,0x2bd5fa4b
  41d912:	mov    esi,0x46375dc4
  41d917:	ss mov bh,0x9a
  41d91a:	adc    eax,0x989ada9e
  41d91f:	lahf   
  41d920:	dec    ebx
  41d921:	push   edx
  41d922:	add    dl,BYTE PTR [ebx]
  41d924:	pop    es
  41d925:	hlt    
  41d926:	mov    WORD PTR [edx],ds
  41d928:	nop
  41d929:	icebp  
  41d92a:	pop    eax
  41d92b:	jne    0x41d9a3
  41d92d:	idiv   DWORD PTR [ebp-0x2c8f1bb1]
  41d933:	jbe    0x41d95a
  41d935:	(bad)  [edx]
  41d937:	xor    ax,0xde38
  41d93b:	and    dl,al
  41d93d:	mov    al,ds:0xddc6ef97
  41d942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d943:	pop    esi
  41d944:	and    DWORD PTR [ecx-0x2c],ecx
  41d947:	int    0xe9
  41d949:	or     BYTE PTR [edi+0xf],bl
  41d94c:	fwait
  41d94d:	loopne 0x41d93c
  41d94f:	adc    al,0xbd
  41d951:	mov    eax,0xaacf6208
  41d956:	outs   dx,BYTE PTR ds:[esi]
  41d957:	inc    edx
  41d958:	push   ecx
  41d959:	nop
  41d95a:	mov    dh,bh
  41d95c:	dec    ecx
  41d95d:	(bad)  
  41d95e:	xchg   esp,eax
  41d95f:	inc    edx
  41d960:	lods   al,BYTE PTR ds:[esi]
  41d961:	push   es
  41d962:	adc    eax,0x61469f94
  41d967:	xor    BYTE PTR [esi+0x6d28114d],dh
  41d96d:	mov    esi,0x6d25eedc
  41d972:	nop
  41d973:	push   ebp
  41d974:	mov    WORD PTR [ebx+0x69],fs
  41d977:	popa   
  41d978:	pop    ebp
  41d979:	inc    esp
  41d97a:	mov    bl,0xf3
  41d97c:	pop    edx
  41d97d:	hlt    
  41d97e:	or     dl,ah
  41d980:	jmp    0xcb49:0x5b2da30a
  41d987:	sahf   
  41d988:	sub    esi,DWORD PTR [esp+ebx*4]
  41d98b:	je     0x41d9e7
  41d98d:	or     al,0x3e
  41d98f:	cmc    
  41d990:	sahf   
  41d991:	xchg   ebx,eax
  41d992:	push   eax
  41d993:	sub    BYTE PTR [ebx-0x25],0xf1
  41d997:	xor    DWORD PTR [ecx+0x5e],0x27
  41d99b:	pop    ds
  41d99c:	or     DWORD PTR [ebx-0x3e],ebx
  41d99f:	fs add eax,0x94933155
  41d9a6:	into   
  41d9a7:	das    
  41d9a8:	jns    0x41d990
  41d9aa:	das    
  41d9ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ad:	imul   eax,DWORD PTR [ecx+ecx*1-0x3b33ed51],0xfffffff6
  41d9b5:	stc    
  41d9b6:	ret    0x858c
  41d9b9:	sbb    al,BYTE PTR [eax]
  41d9bb:	add    BYTE PTR [edx+0x3c4fae34],0x6c
  41d9c2:	ds mov ah,0x21
  41d9c5:	jg     0x41da08
  41d9c7:	pop    eax
  41d9c8:	test   al,0x6d
  41d9ca:	jmp    0x41d9a5
  41d9cc:	ja     0x41da3f
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	add    BYTE PTR [eax],al
  41d9d2:	pop    esi
  41d9d3:	pop    esi
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	sub    BYTE PTR [ebx+0x55416db1],ah
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	hlt    
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR [ebx],al
  41d9eb:	cmp    dl,BYTE PTR [edi+0x5a4537c2]
  41d9f1:	sbb    al,0x20
  41d9f3:	and    al,0x96
  41d9f5:	fcomp  DWORD PTR [eax-0x69]
  41d9f8:	lock nop
  41d9fa:	ins    DWORD PTR es:[edi],dx
  41d9fb:	dec    esp
  41d9fc:	into   
  41d9fd:	adc    al,0x14
  41d9ff:	or     esp,edi
  41da01:	sbb    BYTE PTR [ebx-0x8da2392],al
  41da07:	sbb    DWORD PTR ds:0x731e4627,edi
  41da0d:	in     eax,dx
  41da0e:	dec    esi
  41da0f:	ins    DWORD PTR es:[edi],dx
  41da10:	addr16 (bad) 
  41da12:	xchg   ebp,eax
  41da13:	sbb    BYTE PTR [edi+0x3ea3965e],0x39
  41da1a:	mov    ds,WORD PTR [ebp-0x2e]
  41da1d:	jns    0x41d9bb
  41da1f:	int    0x5b
  41da21:	jbe    0x41da26
  41da23:	pop    esi
  41da24:	xchg   edi,eax
  41da25:	inc    edi
  41da26:	test   DWORD PTR [ebp+0x74],eax
  41da29:	es mov eax,0x5a67a10d
  41da2f:	sbb    al,0xfc
  41da31:	das    
  41da32:	repz cs in al,0xd6
  41da36:	dec    ebp
  41da37:	sbb    DWORD PTR [ecx],eax
  41da39:	imul   esp,DWORD PTR [esi+eiz*4-0x77868254],0xe882f2df
  41da44:	arpl   WORD PTR [esi-0x4d],cx
  41da47:	aam    0xce
  41da49:	(bad)  
  41da4a:	pushf  
  41da4b:	mov    eax,0x4ca556f6
  41da50:	cmp    eax,0xe593312f
  41da55:	jmp    0x67027337
  41da5a:	mov    ch,0x4d
  41da5c:	shl    DWORD PTR [edx+0x56cd1eb5],1
  41da62:	add    al,0xc6
  41da64:	popa   
  41da65:	push   esi
  41da66:	push   0x50
  41da68:	(bad)  
  41da69:	daa    
  41da6a:	popf   
  41da6b:	xor    BYTE PTR [ebx+ebp*8-0x73b36506],dh
  41da72:	push   ebp
  41da73:	pop    esp
  41da74:	loop   0x41da37
  41da76:	pop    ds
  41da77:	mov    al,0xfc
  41da79:	jbe    0x41da1d
  41da7b:	ds (bad) 
  41da7d:	js     0x41da81
  41da7f:	push   eax
  41da80:	mov    edi,0xa4fabfcb
  41da85:	(bad)  
  41da86:	xchg   esp,eax
  41da87:	mov    ss,WORD PTR [edx+0x2a9d46c3]
  41da8d:	gs and al,0x1d
  41da90:	pop    esp
  41da91:	push   ebp
  41da92:	push   ecx
  41da93:	(bad)  [edx]
  41da95:	dec    eax
  41da96:	imul   BYTE PTR [edi+eax*4-0x33]
  41da9a:	outs   dx,DWORD PTR ds:[esi]
  41da9b:	xor    BYTE PTR [ebx],dl
  41da9d:	dec    edx
  41da9e:	adc    BYTE PTR [eax-0x6d4c2dd6],ch
  41daa4:	add    eax,esp
  41daa6:	test   eax,0xf21298b2
  41daab:	les    esp,FWORD PTR [eax+0x37808af4]
  41dab1:	pop    ds
  41dab2:	push   cs
  41dab3:	or     eax,0x19386282
  41dab8:	test   eax,0x68ad31af
  41dabd:	mov    ebp,DWORD PTR [esi+edx*8-0x39]
  41dac1:	aad    0x4f
  41dac3:	xchg   ebp,eax
  41dac4:	adc    esi,DWORD PTR [ecx-0x2cfde32e]
  41daca:	lods   al,BYTE PTR ds:[esi]
  41dacb:	ins    BYTE PTR es:[edi],dx
  41dacc:	pop    ebx
  41dacd:	push   eax
  41dace:	inc    ebx
  41dacf:	push   0xd496980c
  41dad4:	retf   0xb68f
  41dad7:	or     edx,0xffffffd0
  41dada:	fnstcw WORD PTR [ecx+eax*8-0x1715e25c]
  41dae1:	shl    DWORD PTR [edi],0x2d
  41dae4:	dec    edx
  41dae5:	hlt    
  41dae6:	sbb    al,0x71
  41dae8:	daa    
  41dae9:	pop    es
  41daea:	cmp    DWORD PTR [ebp-0x6a],0x4c655591
  41daf1:	mov    WORD PTR [esi],es
  41daf3:	mov    ecx,0x82b2adab
  41daf8:	push   edx
  41daf9:	out    dx,eax
  41dafa:	div    BYTE PTR [eax]
  41dafc:	test   ebp,esi
  41dafe:	(bad)  [ecx+edx*8]
  41db01:	inc    eax
  41db02:	loop   0x41db28
  41db04:	shl    BYTE PTR [edi+0x6840465b],cl
  41db0a:	mov    dl,0x6a
  41db0c:	jo     0x41dab3
  41db0e:	jno    0x41db2e
  41db10:	ja     0x41db3c
  41db12:	mov    dl,BYTE PTR [ebp-0x31977810]
  41db18:	mov    BYTE PTR [ecx+eiz*1-0x17ba3d6],ch
  41db1f:	shl    BYTE PTR [ebp+0x705c28cc],1
  41db25:	xor    al,0x3c
  41db27:	adc    eax,0x388ce7a
  41db2c:	push   ds
  41db2d:	stos   BYTE PTR es:[edi],al
  41db2e:	inc    DWORD PTR [edi-0x1f]
  41db31:	push   cs
  41db32:	jmp    0xa4a5:0xe294033f
  41db39:	sub    eax,0x1a78c938
  41db3e:	pop    eax
  41db3f:	add    DWORD PTR [ecx],edi
  41db41:	lds    ebx,FWORD PTR [esi+0x6e8f4e63]
  41db47:	dec    eax
  41db48:	and    eax,0xe2a1352f
  41db4d:	push   ss
  41db4e:	sub    DWORD PTR [edi],0xfffffffc
  41db51:	aaa    
  41db52:	jne    0x41dbbb
  41db54:	dec    eax
  41db55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db56:	leave  
  41db57:	mov    ah,0x1d
  41db59:	cmp    al,0x38
  41db5b:	push   cs
  41db5c:	mov    esi,0x940d0c9f
  41db61:	(bad)  
  41db62:	jmp    0x41dbc9
  41db64:	and    eax,0x2fcaacb1
  41db69:	mov    BYTE PTR [eax+ecx*2],bl
  41db6c:	push   ebp
  41db6d:	pop    esp
  41db6e:	and    DWORD PTR [ebx],ecx
  41db70:	adc    esi,DWORD PTR [eax]
  41db72:	mov    dh,0x8
  41db74:	cmc    
  41db75:	lods   eax,DWORD PTR ds:[esi]
  41db76:	out    0x7a,al
  41db78:	push   cs
  41db79:	loopne 0x41dbe9
  41db7b:	inc    ecx
  41db7c:	jle    0x41db7f
  41db7e:	dec    ecx
  41db7f:	in     eax,0x5
  41db81:	push   eax
  41db82:	mov    ds:0x906149ab,eax
  41db87:	or     ah,BYTE PTR [edx]
  41db89:	rcl    DWORD PTR [ebx+ecx*2],0x4e
  41db8d:	push   esi
  41db8e:	pop    ds
  41db8f:	test   BYTE PTR [esi+eax*2-0x77],al
  41db93:	inc    esp
  41db94:	dec    eax
  41db95:	sbb    esi,0x34
  41db98:	push   cs
  41db99:	mov    ebx,0x4301c4b5
  41db9e:	add    DWORD PTR [ecx+0x60b5a50d],edi
  41dba4:	arpl   WORD PTR ds:0x141509d5,cx
  41dbaa:	push   0xffffffa0
  41dbac:	arpl   WORD PTR [ebx-0x24],di
  41dbaf:	or     al,0xa6
  41dbb1:	xchg   DWORD PTR [ebp+0x367b4bb5],ebx
  41dbb7:	icebp  
  41dbb8:	adc    esp,ebp
  41dbba:	inc    esp
  41dbbb:	dec    ebx
  41dbbc:	daa    
  41dbbd:	dec    edx
  41dbbe:	rcl    ebx,cl
  41dbc0:	lds    eax,FWORD PTR [ebx]
  41dbc2:	call   0xe47f3603
  41dbc7:	fdiv   st(2),st
  41dbc9:	push   cs
  41dbca:	xor    DWORD PTR [eax+0x7bb0541b],0xffffffe8
  41dbd1:	imul   edi,DWORD PTR ds:0x787bb5de,0x55aa9682
  41dbdb:	scas   al,BYTE PTR es:[edi]
  41dbdc:	pop    eax
  41dbdd:	or     esp,DWORD PTR [eax-0x3d]
  41dbe0:	jns    0x41dbd9
  41dbe2:	clc    
  41dbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbe4:	mov    al,0x6
  41dbe6:	lahf   
  41dbe7:	or     edx,DWORD PTR [edi-0x5e86e5bc]
  41dbed:	(bad)  
  41dbef:	popf   
  41dbf0:	xchg   edx,eax
  41dbf1:	push   eax
  41dbf2:	xchg   BYTE PTR [esi],ah
  41dbf4:	psubusb mm7,QWORD PTR [edi-0x289ba9d2]
  41dbfb:	or     al,dl
  41dbfd:	hlt    
  41dbfe:	push   esp
  41dbff:	je     0x41dc3f
  41dc01:	jae    0x41dc82
  41dc03:	inc    ecx
  41dc04:	or     bh,BYTE PTR [eax-0x43]
  41dc07:	cmc    
  41dc08:	imul   edx,DWORD PTR [ebx],0x11
  41dc0b:	test   DWORD PTR [ecx-0x7e],0x5bcaaf44
  41dc12:	cmp    al,0xe3
  41dc14:	inc    ebx
  41dc15:	mov    ss,WORD PTR [edx+eax*4+0x256b4b3]
  41dc1c:	push   esp
  41dc1d:	mov    ebx,DWORD PTR [esi+0x614ff2c]
  41dc23:	pop    ebx
  41dc24:	mov    ds:0x7cbddb4b,al
  41dc29:	inc    esp
  41dc2a:	sbb    ebp,esi
  41dc2c:	jl     0x41dc7d
  41dc2e:	adc    DWORD PTR [edx],0xd085a3d1
  41dc34:	pop    es
  41dc35:	jns    0x41dc31
  41dc37:	es mov ebp,DWORD PTR fs:[esi+0x3c]
  41dc3c:	sar    DWORD PTR [edi],1
  41dc3e:	sbb    DWORD PTR [ebx-0x746bd3bb],esp
  41dc44:	enter  0x508d,0xab
  41dc48:	mov    ebp,0x729f120a
  41dc4d:	test   BYTE PTR [esi-0x5483eac],0x97
  41dc54:	mov    ds,ecx
  41dc56:	lods   al,BYTE PTR ds:[esi]
  41dc57:	loopne 0x41dccc
  41dc59:	loop   0x41dc89
  41dc5b:	dec    ebx
  41dc5c:	enter  0x99e9,0x24
  41dc60:	xchg   edx,eax
  41dc61:	sbb    DWORD PTR [edx-0x5efc8164],edx
  41dc67:	fdivr  QWORD PTR [edx]
  41dc69:	clc    
  41dc6a:	(bad)  
  41dc6b:	int    0xc8
  41dc6d:	mov    eax,ds:0x5d9c42aa
  41dc72:	push   eax
  41dc73:	adc    ch,BYTE PTR [eax]
  41dc75:	clc    
  41dc76:	jg     0x41dc48
  41dc78:	fdivr  st(7),st
  41dc7a:	push   0xda7154f2
  41dc7f:	icebp  
  41dc80:	popa   
  41dc81:	and    bl,BYTE PTR [edi-0x2f0e4778]
  41dc87:	mov    esp,0x4015c9af
  41dc8c:	fstp   QWORD PTR [eax+0x2692553a]
  41dc92:	inc    ebp
  41dc93:	xor    al,0x55
  41dc95:	xchg   edx,eax
  41dc96:	aaa    
  41dc97:	aaa    
  41dc98:	mov    ch,0x35
  41dc9a:	jmp    0x41dcac
  41dc9c:	aaa    
  41dc9d:	(bad)  
  41dc9e:	fisttp QWORD PTR [esi+edx*2]
  41dca1:	mov    ch,BYTE PTR [edi]
  41dca3:	shr    bl,1
  41dca5:	add    al,BYTE PTR [edx+0x75236b30]
  41dcab:	fst    QWORD PTR [ebx+0x20c80b08]
  41dcb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb2:	out    dx,al
  41dcb3:	pslld  mm2,QWORD PTR [esi]
  41dcb6:	dec    ebx
  41dcb7:	or     bl,BYTE PTR [ebx-0x1]
  41dcba:	and    ebp,DWORD PTR [esi]
  41dcbc:	js     0x41dca8
  41dcbe:	clc    
  41dcbf:	repz loop 0x41dc53
  41dcc2:	aas    
  41dcc3:	fs (bad) 
  41dcc5:	not    BYTE PTR [ebx-0x59]
  41dcc8:	es add al,al
  41dccb:	jmp    0x5502:0x7a127a4b
  41dcd2:	or     al,0xe6
  41dcd4:	xor    eax,0x6451faec
  41dcd9:	inc    esp
  41dcda:	out    dx,al
  41dcdb:	pop    ebx
  41dcdc:	mov    eax,ds:0xc20c7d4
  41dce1:	cdq    
  41dce2:	hlt    
  41dce3:	(bad)  
  41dce4:	scas   al,BYTE PTR es:[edi]
  41dce5:	int    0xf1
  41dce7:	pop    ds
  41dce8:	mov    ds:0x5d35014d,al
  41dced:	popf   
  41dcee:	adc    ecx,DWORD PTR [eax]
  41dcf0:	or     ebp,DWORD PTR [ebx]
  41dcf2:	pop    ds
  41dcf3:	loopne 0x41dc7b
  41dcf5:	mov    ebx,0xd89179ce
  41dcfa:	jb     0x41dd06
  41dcfc:	adc    ebx,0x20
  41dcff:	sub    eax,0xfcf34710
  41dd04:	mov    fs,ebx
  41dd06:	mov    ecx,0xb3ad8ba
  41dd0b:	add    al,0xf
  41dd0d:	popa   
  41dd0e:	sub    BYTE PTR [ebx],0x27
  41dd11:	cmp    al,0x89
  41dd13:	outs   dx,BYTE PTR ds:[esi]
  41dd14:	add    ch,dh
  41dd16:	mov    cl,0xe7
  41dd18:	stos   BYTE PTR es:[edi],al
  41dd19:	pusha  
  41dd1a:	test   eax,0xb4e94275
  41dd1f:	aaa    
  41dd20:	scas   al,BYTE PTR es:[edi]
  41dd21:	fild   QWORD PTR [edi]
  41dd23:	fstp   QWORD PTR [edi+0x24]
  41dd26:	clc    
  41dd27:	mov    edi,0x36c83adc
  41dd2c:	das    
  41dd2d:	jne    0x41dcfd
  41dd2f:	sub    edi,DWORD PTR ds:0x7b48aa0d
  41dd35:	jmp    FWORD PTR [ebx+0x31]
  41dd38:	cmp    al,bh
  41dd3a:	jnp    0x41dd0f
  41dd3c:	or     eax,0x5859940f
  41dd41:	jns    0x41dd54
  41dd43:	bound  esi,QWORD PTR [edi+0x45]
  41dd46:	dec    ecx
  41dd47:	mov    eax,ds:0xfb91ea3e
  41dd4c:	int3   
  41dd4d:	enter  0x7803,0x10
  41dd51:	neg    BYTE PTR [edx+ebp*8+0x13]
  41dd55:	lods   al,BYTE PTR ds:[esi]
  41dd56:	cmp    al,0xe2
  41dd58:	sub    eax,0x642f3413
  41dd5d:	mov    ebx,0xbe2c6943
  41dd62:	cmp    dl,BYTE PTR [edx-0x7e0e0f02]
  41dd68:	jnp    0x41ddcd
  41dd6a:	loop   0x41dd88
  41dd6c:	aad    0x55
  41dd6e:	popf   
  41dd6f:	jmp    0xb001:0x654af32a
  41dd76:	sbb    ch,BYTE PTR [esi+0x2e8e017a]
  41dd7c:	retf   0x2991
  41dd7f:	mov    eax,ds:0x36c54e7e
  41dd84:	and    al,0xb2
  41dd86:	aad    0x47
  41dd88:	ss pop edi
  41dd8a:	rcl    DWORD PTR [ecx+0x4c],1
  41dd8d:	sub    ebx,ecx
  41dd8f:	add    BYTE PTR [ebp+edx*2+0x6e],0x46
  41dd94:	push   edx
  41dd95:	out    dx,eax
  41dd96:	or     cl,BYTE PTR [ebx+0x1460c38a]
  41dd9c:	cmp    BYTE PTR [eax+0x7a24a87f],ch
  41dda2:	aam    0x37
  41dda4:	and    esp,edx
  41dda6:	add    edx,DWORD PTR [ecx-0x2018df24]
  41ddac:	sti    
  41ddad:	mov    cl,0xf8
  41ddaf:	loop   0x41de29
  41ddb1:	push   ds
  41ddb2:	daa    
  41ddb3:	fcom   QWORD PTR [edi-0x8]
  41ddb6:	ins    DWORD PTR es:[edi],dx
  41ddb7:	and    BYTE PTR [edi],0x2e
  41ddba:	or     DWORD PTR [eax-0x42],ebx
  41ddbd:	hlt    
  41ddbe:	jo     0x41ddad
  41ddc0:	cld    
  41ddc1:	call   0xa71830b4
  41ddc6:	adc    al,0x3e
  41ddc8:	mov    edi,0x8d91403d
  41ddcd:	mov    ebx,0xc059efff
  41ddd2:	adc    DWORD PTR [ecx+0x28],edx
  41ddd5:	jl     0x41de05
  41ddd7:	xor    bl,ch
  41ddd9:	dec    ebp
  41ddda:	in     eax,dx
  41dddb:	pop    DWORD PTR [ebp+0x589f2e0c]
  41dde1:	push   cs
  41dde2:	jecxz  0x41dda2
  41dde4:	dec    ebp
  41dde5:	dec    eax
  41dde6:	popa   
  41dde7:	add    al,0x49
  41dde9:	mov    ss,WORD PTR [edi-0x41f7f187]
  41ddef:	sub    edx,DWORD PTR [edi-0x497114f5]
  41ddf5:	mov    al,0xac
  41ddf7:	adc    cl,BYTE PTR [ecx+0x49]
  41ddfa:	xor    DWORD PTR [ecx-0x47ee37c7],esp
  41de00:	xchg   ebp,eax
  41de01:	iret   
  41de02:	sub    eax,ebp
  41de04:	and    DWORD PTR [ecx+0x3c],esi
  41de07:	xchg   edx,eax
  41de08:	xor    bl,BYTE PTR [eax+ecx*2+0x5a]
  41de0c:	and    al,0x48
  41de0e:	aas    
  41de0f:	pop    ds
  41de10:	out    dx,al
  41de11:	cld    
  41de12:	sub    esi,esi
  41de14:	out    0xeb,eax
  41de16:	mov    ds:0x94f8f663,eax
  41de1b:	pop    edi
  41de1c:	outs   dx,DWORD PTR ds:[esi]
  41de1d:	daa    
  41de1e:	mov    al,ah
  41de20:	ins    BYTE PTR es:[edi],dx
  41de21:	in     al,0x2d
  41de23:	xor    DWORD PTR [edx*4+0x50429896],0x5c
  41de2b:	or     eax,0xe067bea8
  41de30:	out    dx,ax
  41de32:	jl     0x41ddfe
  41de34:	dec    ebp
  41de35:	jecxz  0x41de3c
  41de37:	push   ebx
  41de38:	mov    dh,BYTE PTR [edx]
  41de3a:	push   0x2b
  41de3c:	dec    eax
  41de3d:	dec    ecx
  41de3e:	popf   
  41de3f:	pop    ebx
  41de40:	jecxz  0x41de93
  41de42:	outs   dx,BYTE PTR ds:[esi]
  41de43:	int3   
  41de44:	sub    BYTE PTR ds:0xe09e3ac9,al
  41de4a:	scas   al,BYTE PTR es:[edi]
  41de4b:	stos   DWORD PTR es:[edi],eax
  41de4c:	pop    esp
  41de4d:	push   ebp
  41de4e:	pop    ds
  41de4f:	call   0x249b:0x1f6db348
  41de56:	fimul  WORD PTR [edx+0x5a5d1c09]
  41de5c:	pop    ebp
  41de5d:	mov    cl,0xc0
  41de5f:	cwde   
  41de60:	inc    edx
  41de61:	scas   al,BYTE PTR es:[edi]
  41de62:	dec    ecx
  41de63:	aas    
  41de64:	fs mov bl,0x3a
  41de67:	mov    eax,?
  41de69:	xchg   ebp,eax
  41de6a:	ds (bad) 
  41de6c:	push   cs
  41de6d:	jo     0x41ddfc
  41de6f:	mov    edi,es
  41de71:	dec    eax
  41de72:	iret   
  41de73:	adc    eax,0x9e33960f
  41de78:	inc    eax
  41de79:	pop    ds
  41de7a:	pop    es
  41de7b:	std    
  41de7c:	dec    ecx
  41de7d:	jp     0x41de6f
  41de7f:	mov    ebp,0xa96bef02
  41de84:	lock add al,0x87
  41de87:	lock cmc 
  41de89:	adc    eax,0x4545476
  41de8e:	test   DWORD PTR [ecx-0x5c280b46],0xa7e7619d
  41de98:	pop    edi
  41de99:	lds    esi,FWORD PTR [esp+ebp*2-0x9]
  41de9d:	jmp    0x3d1b:0x215f16f6
  41dea4:	in     eax,0x7b
  41dea6:	adc    eax,0x68ec513
  41deab:	mov    esp,0x6ac7cab4
  41deb0:	(bad)  
  41deb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deb2:	jmp    0x1793580c
  41deb7:	mov    ds:0xe1af956c,al
  41debc:	pop    ebx
  41debd:	adc    BYTE PTR [ebx],ch
  41debf:	mov    cl,0x5a
  41dec1:	add    ebp,DWORD PTR [eax+0x6b1c003c]
  41dec7:	ret    0x2e4b
  41deca:	jmp    0x1022f020
  41decf:	js     0x41df0f
  41ded1:	push   ss
  41ded2:	stc    
  41ded3:	adc    BYTE PTR [eax-0x50c24d8a],al
  41ded9:	jl     0x41ded5
  41dedb:	and    dl,BYTE PTR [edx-0xf]
  41dede:	add    BYTE PTR [eax],al
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	in     al,0x30
  41def0:	cld    
  41def1:	test   eax,0x15a35
  41def6:	hlt    
  41def7:	add    al,0x0
  41def9:	add    BYTE PTR [edx+0x69ad6553],dl
  41deff:	sub    al,0xd2
  41df01:	(bad)  
  41df02:	push   eax
  41df03:	add    bl,BYTE PTR [ebp+0xeb417a]
  41df09:	add    BYTE PTR [edi-0x2f],al
  41df0c:	nop
  41df0d:	xchg   DWORD PTR [ecx],edx
  41df0f:	adc    al,0x7d
  41df11:	xchg   ebp,eax
  41df12:	add    BYTE PTR [esi+0xbc5a893],bl
  41df18:	push   ss
  41df19:	mov    dh,0x4f
  41df1b:	mov    DWORD PTR [edi+0x65],eax
  41df1e:	inc    esp
  41df1f:	jge    0x41deab
  41df21:	push   bx
  41df23:	(bad)  
  41df24:	sub    BYTE PTR [eax+0x67],bh
  41df27:	loop   0x41dfa6
  41df29:	inc    ebp
  41df2a:	stc    
  41df2b:	pop    esp
  41df2c:	cdq    
  41df2d:	loope  0x41df60
  41df2f:	cmp    ebp,edi
  41df31:	mov    bh,0x23
  41df33:	ds xor dh,bl
  41df36:	aad    0x1f
  41df38:	pusha  
  41df39:	daa    
  41df3a:	ficom  DWORD PTR [eax+0x3b]
  41df3d:	jg     0x41df5a
  41df3f:	or     al,0x9c
  41df41:	ret    0xb5da
  41df44:	cld    
  41df45:	inc    esi
  41df46:	xchg   esi,eax
  41df47:	mov    ds,WORD PTR gs:[ecx-0x4f]
  41df4b:	sbb    al,BYTE PTR [esi]
  41df4d:	and    BYTE PTR [esi-0x57f0514f],al
  41df53:	mov    edx,0x9e618eb7
  41df58:	and    eax,DWORD PTR [edx+ebp*4+0x42]
  41df5c:	outs   dx,BYTE PTR ds:[esi]
  41df5d:	dec    ebp
  41df5e:	pushf  
  41df5f:	add    al,dh
  41df61:	inc    ebp
  41df62:	inc    eax
  41df63:	fsubr  st,st(6)
  41df65:	iret   
  41df66:	sbb    al,0x21
  41df68:	add    al,BYTE PTR [esi]
  41df6a:	mov    DWORD PTR [ebx+eiz*8],esp
  41df6d:	icebp  
  41df6e:	mov    ebp,0x6f30e48a
  41df73:	loope  0x41df95
  41df75:	mul    BYTE PTR ds:0xced63d59
  41df7b:	dec    edi
  41df7c:	ss and eax,0x11067607
  41df82:	lods   eax,DWORD PTR ds:[esi]
  41df83:	sub    edi,DWORD PTR [edx]
  41df85:	mov    ebx,0x3463871e
  41df8a:	xlat   BYTE PTR ds:[ebx]
  41df8b:	fld    QWORD PTR [ebx]
  41df8d:	jp     0x41e006
  41df8f:	cmc    
  41df90:	loopne 0x41dff3
  41df92:	jge    0x41e00f
  41df94:	xor    eax,0x5323c62
  41df99:	into   
  41df9a:	(bad)  
  41df9b:	sti    
  41df9c:	cmp    eax,0x404a852f
  41dfa1:	ficomp DWORD PTR [ebx]
  41dfa3:	push   es
  41dfa4:	scas   al,BYTE PTR es:[edi]
  41dfa5:	xor    BYTE PTR [eax+0x1a],cl
  41dfa8:	lea    esi,[ebp+ecx*1+0x68b33218]
  41dfaf:	(bad)  
  41dfb0:	fadd   st,st(7)
  41dfb2:	mov    ecx,0x4b863990
  41dfb7:	icebp  
  41dfb8:	pusha  
  41dfb9:	sbb    eax,0x24454863
  41dfbe:	jbe    0x41e02f
  41dfc0:	jo     0x41dfd0
  41dfc2:	push   0x58
  41dfc4:	jb     0x41e00e
  41dfc6:	xchg   edx,eax
  41dfc7:	jo     0x41e00b
  41dfc9:	jp     0x41dfd2
  41dfcb:	lahf   
  41dfcc:	pop    esi
  41dfcd:	out    0x36,eax
  41dfcf:	adc    DWORD PTR [edi],ecx
  41dfd1:	push   edi
  41dfd2:	ss scas eax,DWORD PTR es:[edi]
  41dfd4:	add    ecx,DWORD PTR ds:0x7c7c0823
  41dfda:	aam    0x76
  41dfdc:	clc    
  41dfdd:	rcl    BYTE PTR [esi-0x4f],cl
  41dfe0:	adc    al,0xb1
  41dfe2:	fimul  WORD PTR [eax]
  41dfe4:	es daa 
  41dfe6:	sub    eax,0x487fb9ac
  41dfeb:	and    eax,0x584fd307
  41dff0:	and    al,0x2d
  41dff2:	adc    eax,0x1cd6029a
  41dff7:	add    DWORD PTR [esi-0x49f3d92d],edi
  41dffd:	shl    DWORD PTR [eax],0x18
  41e000:	nop
  41e001:	lahf   
  41e002:	sbb    dh,BYTE PTR [edx+edi*2+0x63538d74]
  41e009:	mov    esi,0xca56071c
  41e00e:	neg    DWORD PTR [ebx]
  41e010:	cdq    
  41e011:	mov    DWORD PTR [esi+0x6b],edi
  41e014:	pop    edi
  41e015:	out    0x24,eax
  41e017:	push   esp
  41e018:	loopne 0x41dfda
  41e01a:	mov    al,ds:0xeb235a6b
  41e01f:	out    0x57,eax
  41e021:	pop    ebp
  41e022:	ret    0x8635
  41e025:	das    
  41e026:	psllq  mm7,QWORD PTR [ecx-0x2a]
  41e02a:	outs   dx,BYTE PTR ds:[esi]
  41e02b:	xchg   esi,eax
  41e02c:	cmp    esi,DWORD PTR [edi]
  41e02e:	fcom   QWORD PTR [ecx]
  41e030:	pop    eax
  41e031:	lahf   
  41e032:	(bad)  
  41e034:	push   edx
  41e035:	cmp    BYTE PTR [edx+0x29fce63b],ch
  41e03b:	cmp    DWORD PTR [ebp-0x4f91897],edi
  41e041:	aad    0x22
  41e043:	adc    DWORD PTR [edi],esp
  41e045:	in     al,0x9c
  41e047:	mov    ch,0x5f
  41e049:	aam    0x9
  41e04b:	js     0x41e06b
  41e04d:	mov    edi,0x8d250c3c
  41e052:	fucomi st,st(1)
  41e054:	fisub  DWORD PTR [ecx]
  41e056:	call   0xfc95:0xcf14e4f2
  41e05d:	mov    ch,0x41
  41e05f:	push   edx
  41e060:	jo     0x41e02a
  41e062:	test   eax,0x74ff6e19
  41e067:	lods   eax,DWORD PTR ds:[esi]
  41e068:	sahf   
  41e069:	ror    DWORD PTR [edx-0x106eb711],cl
  41e06f:	adc    eax,0x8c2281cd
  41e074:	mov    edi,0x80c30fe2
  41e079:	xor    DWORD PTR [ecx],ebx
  41e07b:	inc    eax
  41e07c:	and    eax,DWORD PTR [edx-0x4a]
  41e07f:	xchg   ebx,eax
  41e080:	xchg   ebp,eax
  41e081:	repnz dec eax
  41e083:	lods   eax,DWORD PTR ds:[esi]
  41e084:	div    dl
  41e086:	or     al,0x98
  41e088:	mov    esp,0x670ef378
  41e08d:	jae    0x41e06c
  41e08f:	mov    cl,0xfc
  41e091:	jnp    0x41e042
  41e093:	jp     0x41e081
  41e095:	mov    al,ds:0xf4f1c6fd
  41e09a:	inc    edx
  41e09b:	scas   al,BYTE PTR es:[edi]
  41e09c:	aas    
  41e09d:	mov    ds:0x42a23c0f,al
  41e0a2:	sbb    al,ah
  41e0a4:	fld    TBYTE PTR [ecx+0x1c27e214]
  41e0aa:	sar    BYTE PTR [esi],cl
  41e0ac:	sti    
  41e0ad:	in     al,0x81
  41e0af:	out    0xce,al
  41e0b1:	rol    BYTE PTR [edx-0x26562c6e],cl
  41e0b7:	mov    al,ds:0x188e8e09
  41e0bc:	lds    edx,FWORD PTR [eax]
  41e0be:	pop    ds
  41e0bf:	or     DWORD PTR [ebx+0x2fa7e67f],0xffffff8c
  41e0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c7:	arpl   WORD PTR [ebx],di
  41e0c9:	cwde   
  41e0ca:	aad    0xff
  41e0cc:	or     BYTE PTR [edx*4+0x24e2c626],dh
  41e0d3:	mov    ss,WORD PTR [ecx+0x27]
  41e0d6:	inc    ecx
  41e0d7:	cmp    ah,BYTE PTR [esi]
  41e0d9:	(bad)  
  41e0da:	stc    
  41e0db:	fidivr WORD PTR [ecx+0x2e]
  41e0de:	xor    bh,BYTE PTR [esi-0x34dd8fce]
  41e0e4:	xor    BYTE PTR [edi],bh
  41e0e6:	pop    ebx
  41e0e7:	sub    DWORD PTR ds:0xc8320973,0xbd8bb0bc
  41e0f1:	jnp    0x41e0c7
  41e0f3:	imul   edi,DWORD PTR ds:0x7c6e4470,0xfffffff2
  41e0fa:	rol    BYTE PTR [edx+0x38],0xe2
  41e0fe:	fisub  DWORD PTR [esi+0x76]
  41e101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e102:	inc    esp
  41e103:	cmp    eax,0x9a31fd48
  41e108:	inc    eax
  41e109:	mov    esp,0xd9f8981a
  41e10e:	xchg   DWORD PTR [edi+eax*2+0x89ad4ed],eax
  41e115:	in     al,dx
  41e116:	xchg   edi,eax
  41e117:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e119:	and    bh,BYTE PTR [ecx+0x1614390d]
  41e11f:	adc    al,0x71
  41e121:	pop    ecx
  41e122:	sub    al,0x5b
  41e124:	out    0x9c,al
  41e126:	call   0xd070:0xc77ddac9
  41e12d:	cmp    DWORD PTR [ebx+0x699dffec],edi
  41e133:	add    eax,0x5da78f8
  41e138:	mov    ah,0x0
  41e13a:	pop    ecx
  41e13b:	cmp    ebp,DWORD PTR [edi-0x10]
  41e13e:	lahf   
  41e13f:	mov    ds:0x30972b84,eax
  41e144:	push   es
  41e145:	lods   eax,DWORD PTR ds:[esi]
  41e146:	(bad)
  41e149:	pushf  
  41e14a:	mov    dl,0x5a
  41e14c:	push   eax
  41e14d:	int    0x5a
  41e14f:	stc    
  41e150:	push   es
  41e151:	pop    ebp
  41e152:	push   ds
  41e153:	sti    
  41e154:	in     al,0x8d
  41e156:	fsub   st(6),st
  41e158:	pop    ecx
  41e159:	sub    ch,BYTE PTR [esi-0x4e]
  41e15c:	cdq    
  41e15d:	xor    DWORD PTR [ecx+0xb],eax
  41e160:	loope  0x41e155
  41e162:	push   es
  41e163:	and    DWORD PTR [edi+0x3e],ecx
  41e166:	in     al,0x90
  41e168:	xchg   eax,ebx
  41e16a:	stc    
  41e16b:	add    eax,0x647b0fb9
  41e170:	xchg   edi,eax
  41e171:	jmp    0xc9f8:0x2324880b
  41e178:	push   ds
  41e179:	and    BYTE PTR [edi],ah
  41e17b:	jmp    0x17:0x29d97a6d
  41e182:	stos   BYTE PTR es:[edi],al
  41e183:	xlat   BYTE PTR ds:[ebx]
  41e184:	xor    edx,edx
  41e186:	shl    bh,0xe5
  41e189:	dec    edi
  41e18a:	adc    BYTE PTR [edx],ah
  41e18c:	or     al,0xc4
  41e18e:	and    bh,dl
  41e190:	(bad)  
  41e192:	push   es
  41e193:	fs popf 
  41e195:	jge    0x41e14b
  41e197:	inc    ebx
  41e198:	(bad)  
  41e199:	jns    0x41e177
  41e19b:	mov    esp,0x950c485
  41e1a0:	push   ecx
  41e1a1:	mov    cl,0xcb
  41e1a3:	xor    eax,DWORD PTR [esi-0x1251ae12]
  41e1a9:	enter  0xc780,0xfe
  41e1ad:	add    bl,dh
  41e1af:	jmp    0x41e221
  41e1b1:	gs leave 
  41e1b3:	je     0x41e15c
  41e1b5:	inc    esp
  41e1b6:	xor    edx,DWORD PTR [ecx+0x34272821]
  41e1bc:	(bad)  
  41e1bd:	pop    ebx
  41e1be:	ret    
  41e1bf:	retf   0xf105
  41e1c2:	out    dx,eax
  41e1c3:	cld    
  41e1c4:	mov    dl,0x6b
  41e1c6:	rcl    ebx,1
  41e1c8:	cmp    eax,0x6ac877b6
  41e1cd:	xor    cl,dh
  41e1cf:	xchg   edi,eax
  41e1d0:	retf   0xce39
  41e1d3:	in     al,0xfa
  41e1d5:	sbb    al,0xd6
  41e1d7:	aam    0x3b
  41e1d9:	mov    dh,dh
  41e1db:	adc    DWORD PTR [edx+0x34],ebx
  41e1de:	cmp    eax,0xeca0381
  41e1e3:	jae    0x41e20b
  41e1e5:	jnp    0x41e218
  41e1e7:	daa    
  41e1e8:	push   0xffffffc0
  41e1ea:	outs   dx,DWORD PTR ds:[esi]
  41e1eb:	cmp    BYTE PTR [ebx+edx*8],0xc1
  41e1ef:	push   esi
  41e1f0:	test   al,0x1a
  41e1f2:	mov    ds:0xf3e40e3f,eax
  41e1f7:	and    eax,0xb03ae0c4
  41e1fc:	push   ebx
  41e1fd:	sbb    BYTE PTR [edi],dl
  41e1ff:	fsub   st,st(0)
  41e201:	cmpps  xmm2,XMMWORD PTR [ecx],0x54
  41e205:	popf   
  41e206:	setae  BYTE PTR [ebx]
  41e209:	lds    ebx,FWORD PTR [ebx+ebp*2]
  41e20c:	fidiv  WORD PTR [ebp+0x4ca0b24a]
  41e212:	mov    dl,0xd7
  41e214:	ret    0xb09e
  41e217:	jl     0x41e284
  41e219:	scas   al,BYTE PTR es:[edi]
  41e21a:	mov    al,ds:0xbf3058d3
  41e21f:	shl    ebx,1
  41e221:	pop    esi
  41e222:	pusha  
  41e223:	(bad)  
  41e224:	retf   
  41e225:	mov    al,0x2b
  41e227:	dec    edx
  41e228:	pop    edx
  41e229:	jb     0x41e1bc
  41e22b:	retf   0xda09
  41e22e:	cmp    edx,DWORD PTR [eax+0x9]
  41e231:	dec    edi
  41e232:	scas   al,BYTE PTR es:[edi]
  41e233:	in     al,dx
  41e234:	sti    
  41e235:	add    eax,0x15e98fca
  41e23a:	dec    ebx
  41e23b:	lea    eax,[eax-0x212a7a84]
  41e241:	or     eax,0x5950db46
  41e246:	jle    0x41e1f2
  41e248:	shl    DWORD PTR [eax-0x68f40c7c],cl
  41e24e:	or     edi,DWORD PTR ds:0x9d61140f
  41e254:	jnp    0x41e215
  41e256:	push   0x75
  41e258:	inc    esp
  41e259:	pop    ebx
  41e25a:	mov    edi,0x17edccd8
  41e25f:	cs inc edi
  41e261:	sub    dh,BYTE PTR [ebx+0x7d]
  41e264:	leave  
  41e265:	rcr    bh,cl
  41e267:	pop    es
  41e268:	test   al,0xff
  41e26a:	sti    
  41e26b:	add    DWORD PTR [ecx+0x60a0e2e2],0x6c
  41e272:	scas   al,BYTE PTR es:[edi]
  41e273:	and    DWORD PTR [eax-0x3725645a],esi
  41e279:	cmp    ebp,edx
  41e27b:	mov    cl,cl
  41e27d:	gs push ss
  41e27f:	inc    edi
  41e280:	add    al,0x3f
  41e282:	popf   
  41e283:	mov    WORD PTR [eax-0x7dc8b7bf],?
  41e289:	inc    esp
  41e28a:	mov    edi,0x739a58f3
  41e28f:	mov    ebp,0xe6a7e7b7
  41e294:	sub    ecx,DWORD PTR [edx+0x17c796e1]
  41e29a:	outs   dx,DWORD PTR ds:[esi]
  41e29b:	in     al,0xc8
  41e29d:	dec    eax
  41e29e:	aam    0xd
  41e2a0:	retf   
  41e2a1:	pcmpgtd mm0,mm0
  41e2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2a5:	dec    ebx
  41e2a6:	aas    
  41e2a7:	mov    dl,0xc6
  41e2a9:	dec    ecx
  41e2aa:	mov    edx,0x209ab1a0
  41e2af:	jmp    0x16b0:0x77781c60
  41e2b6:	(bad)  
  41e2b8:	push   esi
  41e2b9:	int    0x82
  41e2bb:	scas   al,BYTE PTR es:[edi]
  41e2bc:	retf   0x152b
  41e2bf:	je     0x41e26b
  41e2c1:	mov    bl,BYTE PTR [edx]
  41e2c3:	xor    BYTE PTR [eax-0x6805a3d7],ch
  41e2c9:	xor    BYTE PTR [edi],ch
  41e2cb:	pop    ebx
  41e2cc:	cmp    DWORD PTR ds:0xd79bc1e7,ebx
  41e2d2:	adc    al,0x2f
  41e2d4:	in     al,dx
  41e2d5:	xchg   ecx,eax
  41e2d6:	sub    al,0x6d
  41e2d8:	lds    ebx,FWORD PTR ds:0x35ae3ee6
  41e2de:	mov    ebx,0xc424179d
  41e2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e4:	jge    0x41e2fc
  41e2e6:	adc    eax,0xd2e1688
  41e2eb:	lods   al,BYTE PTR ds:[esi]
  41e2ec:	call   0x34f1028d
  41e2f1:	inc    eax
  41e2f2:	pop    esp
  41e2f3:	dec    esp
  41e2f4:	rcl    DWORD PTR [ebx+ecx*4-0xe],1
  41e2f8:	adc    al,al
  41e2fa:	pop    ebp
  41e2fb:	sbb    eax,0xc09cf3a0
  41e300:	leave  
  41e301:	scas   eax,DWORD PTR es:[edi]
  41e302:	or     BYTE PTR [eax-0x7d7f1939],dl
  41e308:	je     0x41e350
  41e30a:	xchg   BYTE PTR [eax-0x2e],dl
  41e30d:	mov    ds:0x4d87e1c2,al
  41e312:	mov    dh,0xc3
  41e314:	mov    cl,0xd7
  41e316:	in     al,dx
  41e317:	and    cl,BYTE PTR [edx+0x6dfb385f]
  41e31d:	inc    esi
  41e31e:	rol    BYTE PTR [edx-0x64],cl
  41e321:	sbb    ebp,edx
  41e323:	call   0xd723c7ce
  41e328:	out    0xb3,al
  41e32a:	clc    
  41e32b:	push   cs
  41e32c:	(bad)  
  41e32d:	aam    0x7
  41e32f:	das    
  41e330:	adc    eax,0x5a0adafe
  41e335:	inc    ecx
  41e336:	mov    BYTE PTR [eax-0x6097ffea],al
  41e33c:	loop   0x41e376
  41e33e:	rol    DWORD PTR [esi],cl
  41e340:	cmp    al,0x83
  41e342:	or     edi,DWORD PTR [edx+ebx*1+0x53a7acd4]
  41e349:	inc    ecx
  41e34a:	push   edx
  41e34b:	xor    bl,BYTE PTR [edi-0x7d7b393f]
  41e351:	stos   BYTE PTR es:[edi],al
  41e352:	mov    bh,0xe6
  41e354:	adc    edx,0x9af2d56f
  41e35a:	test   DWORD PTR [ebp+ebx*8-0x409da3e2],ebp
  41e361:	or     eax,0xf57d5b33
  41e366:	int3   
  41e367:	xor    DWORD PTR ds:0x25524564,eax
  41e36d:	jns    0x41e3a3
  41e36f:	adc    bh,0x6c
  41e372:	xor    BYTE PTR [eax],ch
  41e374:	std    
  41e375:	(bad)  
  41e376:	or     eax,esi
  41e378:	jl     0x41e3b3
  41e37a:	fs mov cl,0x68
  41e37d:	cmp    DWORD PTR [ecx+0x7a70bd0],ebp
  41e383:	mov    edx,?
  41e385:	fisttp QWORD PTR [ebx]
  41e387:	mov    esp,0x3be3b1a6
  41e38c:	aaa    
  41e38d:	pop    ds
  41e38e:	mov    edi,0x7b14eb65
  41e393:	(bad)  
  41e394:	ds ins BYTE PTR es:[edi],dx
  41e396:	aaa    
  41e397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e398:	rcr    DWORD PTR [esi+0x73e7bc71],1
  41e39e:	and    DWORD PTR [edi-0x10],eax
  41e3a1:	popf   
  41e3a2:	ss add al,ah
  41e3a5:	dec    esp
  41e3a6:	popa   
  41e3a7:	jno    0x41e39b
  41e3a9:	adc    BYTE PTR [esi-0x2d86bf4e],al
  41e3af:	(bad)  
  41e3b0:	mov    bl,0xfd
  41e3b2:	or     ah,ch
  41e3b4:	pop    ecx
  41e3b5:	inc    ecx
  41e3b6:	mov    dl,0xbb
  41e3b8:	fadd   QWORD PTR [ecx+eiz*4-0x3bd56149]
  41e3bf:	jmp    0x41e411
  41e3c1:	push   eax
  41e3c2:	pop    esi
  41e3c3:	pop    esi
  41e3c4:	mov    eax,0x46eb34c6
  41e3c9:	mov    al,0x5f
  41e3cb:	pop    edx
  41e3cc:	call   0xe3db:0xa5758f4f
  41e3d3:	push   ebx
  41e3d4:	pop    eax
  41e3d5:	mov    dh,ah
  41e3d7:	fsub   QWORD PTR [ecx+ecx*2-0x73]
  41e3db:	lea    edi,[esi+0x4a]
  41e3de:	xor    BYTE PTR [ecx-0x751f2b83],0x37
  41e3e5:	push   eax
  41e3e6:	pop    edi
  41e3e7:	and    BYTE PTR [ebx-0x5ab71f20],0x27
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x67ddfc94
  41e400:	icebp  
  41e401:	stos   BYTE PTR es:[edi],al
  41e402:	sub    DWORD PTR [edi+0x1],ebx
  41e405:	add    ah,dh
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [edi-0x79a572b3],dl
  41e40f:	test   eax,0xb55e4148
  41e414:	and    DWORD PTR [esi+esi*4],edx
  41e417:	sub    eax,0xe0c09310
  41e41c:	xchg   ebx,eax
  41e41d:	retf   0xcf3c
  41e420:	xor    esi,ebp
  41e422:	ret    0x3532
  41e425:	and    cl,BYTE PTR [esi]
  41e427:	ret    0x83b0
  41e42a:	fdiv   st(3),st
  41e42c:	fistp  DWORD PTR [ebx+0x1c]
  41e42f:	(bad)  
  41e430:	fisubr WORD PTR [eax-0x35274776]
  41e436:	mov    dl,0x10
  41e438:	icebp  
  41e439:	inc    esp
  41e43a:	das    
  41e43b:	jp     0x41e4ae
  41e43d:	icebp  
  41e43e:	jp     0x41e42a
  41e440:	add    DWORD PTR [eax],eax
  41e442:	jnp    0x41e448
  41e444:	retf   
  41e445:	mov    ds:0x437aa390,al
  41e44a:	mov    al,BYTE PTR [ebp-0x5]
  41e44d:	(bad)  
  41e44e:	(bad)  
  41e44f:	push   ds
  41e450:	push   esp
  41e451:	sbb    edi,DWORD PTR [edi+0x4211d2c3]
  41e457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e458:	jl     0x41e48d
  41e45a:	clc    
  41e45b:	jne    0x41e43a
  41e45d:	sub    ch,BYTE PTR [edi]
  41e45f:	mov    al,0x42
  41e461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e462:	outs   dx,BYTE PTR ds:[esi]
  41e463:	fucom  st(5)
  41e465:	inc    ebx
  41e466:	das    
  41e467:	xchg   DWORD PTR [edi],esi
  41e469:	in     al,0xb6
  41e46b:	daa    
  41e46c:	or     edi,DWORD PTR [edi-0x48c5001a]
  41e472:	xlat   BYTE PTR ds:[ebx]
  41e473:	inc    eax
  41e474:	xor    edx,DWORD PTR [eax-0xf]
  41e477:	sub    ah,BYTE PTR [eax-0xd070bc0]
  41e47d:	inc    ecx
  41e47e:	int3   
  41e47f:	call   0xdeb8:0x50f5d6eb
  41e486:	int    0xac
  41e488:	sub    BYTE PTR [esi],bl
  41e48a:	inc    edi
  41e48b:	repz mov ds:0x5dca54d7,al
  41e491:	das    
  41e492:	scas   al,BYTE PTR es:[edi]
  41e493:	mov    esi,0x71d8c9c8
  41e498:	sbb    ebx,DWORD PTR [eax+0x34]
  41e49b:	adc    al,0x3f
  41e49d:	shl    BYTE PTR [edi],0x18
  41e4a0:	ss (bad) 
  41e4a2:	dec    esp
  41e4a3:	mov    ebp,0xd2a0dfdf
  41e4a8:	js     0x41e4fa
  41e4aa:	in     al,0xf8
  41e4ac:	xor    BYTE PTR [ebx+0x3abf183e],0x90
  41e4b3:	mov    ebx,0x702d98fa
  41e4b8:	inc    esi
  41e4b9:	clc    
  41e4ba:	jecxz  0x41e51f
  41e4bc:	add    BYTE PTR [ecx*8-0x2e3794e5],bh
  41e4c3:	retf   
  41e4c4:	or     bh,BYTE PTR [esi+0x73]
  41e4c7:	lods   al,BYTE PTR ds:[esi]
  41e4c8:	or     ecx,0xffffffab
  41e4cb:	sbb    edx,DWORD PTR [edx]
  41e4cd:	mov    ch,ch
  41e4cf:	jle    0x41e51c
  41e4d1:	cmp    al,0x8d
  41e4d3:	xchg   edx,eax
  41e4d4:	or     ah,BYTE PTR [ecx]
  41e4d6:	push   edx
  41e4d7:	mov    bh,BYTE PTR [ebp-0x50]
  41e4da:	js     0x41e525
  41e4dc:	outs   dx,BYTE PTR ds:[esi]
  41e4dd:	push   edx
  41e4de:	(bad)  
  41e4df:	loopne 0x41e4fd
  41e4e1:	in     al,0x94
  41e4e3:	repnz xor eax,edi
  41e4e6:	aam    0xf8
  41e4e8:	add    eax,0xdf401494
  41e4ed:	xor    dh,BYTE PTR [edx+0x3884d2dc]
  41e4f3:	mov    esi,0x3edeeba1
  41e4f8:	inc    esi
  41e4f9:	inc    ecx
  41e4fa:	mov    DWORD PTR [ebp-0x1c],esp
  41e4fd:	pusha  
  41e4fe:	ins    DWORD PTR es:[edi],dx
  41e4ff:	xlat   BYTE PTR ds:[ebx]
  41e500:	add    esp,DWORD PTR [ebp-0x110bee22]
  41e506:	add    BYTE PTR [esi],0xd
  41e509:	(bad)  
  41e50b:	jecxz  0x41e4e3
  41e50d:	fcomp  QWORD PTR [edi-0x12b7187c]
  41e513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e514:	xchg   edi,eax
  41e515:	add    al,0x74
  41e517:	pop    esp
  41e518:	test   al,0xa3
  41e51a:	xor    ah,cl
  41e51c:	fiadd  DWORD PTR fs:[eax-0x6ea9b8ac]
  41e523:	xor    BYTE PTR [ebx-0x2e],al
  41e526:	dec    esi
  41e527:	adc    DWORD PTR [ecx+0x5782dec2],eax
  41e52d:	mov    dh,0x74
  41e52f:	call   0x7cb45bbb
  41e534:	pushf  
  41e535:	bound  esp,QWORD PTR cs:[edx+0x2172e127]
  41e53c:	inc    ebp
  41e53d:	push   ebp
  41e53e:	dec    ebp
  41e53f:	pop    esi
  41e540:	retf   
  41e541:	and    DWORD PTR ds:0xd32cff40,0x83d66d14
  41e54b:	pop    edx
  41e54c:	xchg   esi,eax
  41e54d:	jns    0x41e4ed
  41e54f:	mov    ah,0x6d
  41e551:	daa    
  41e552:	cmp    al,0x90
  41e554:	xchg   ebp,eax
  41e555:	or     ah,BYTE PTR [edx+0x166abef2]
  41e55b:	and    al,0xc
  41e55d:	clc    
  41e55e:	mov    cl,0x64
  41e560:	or     al,0xdc
  41e562:	mov    ds:0xd7997906,eax
  41e567:	in     eax,0x1f
  41e569:	jbe    0x41e56e
  41e56b:	shr    BYTE PTR [eax+0x74ad92f7],1
  41e571:	push   ecx
  41e572:	int    0x3f
  41e574:	div    BYTE PTR [edx+0xb460d95]
  41e57a:	loop   0x41e546
  41e57c:	xchg   esi,eax
  41e57d:	test   cl,cl
  41e57f:	xchg   ebx,eax
  41e580:	and    eax,0xeaac8e8f
  41e585:	sub    BYTE PTR [edx+esi*2-0x6f464255],dh
  41e58c:	xchg   edi,eax
  41e58d:	jae    0x41e586
  41e58f:	sub    eax,0x4bec1b68
  41e594:	nop
  41e595:	jecxz  0x41e543
  41e597:	pop    ss
  41e598:	ror    DWORD PTR [esi-0x6c51cd97],cl
  41e59e:	je     0x41e5a9
  41e5a0:	outs   dx,BYTE PTR ds:[esi]
  41e5a1:	mov    dh,0x70
  41e5a3:	jae    0x41e60c
  41e5a5:	or     DWORD PTR ds:0x3229054b,esp
  41e5ab:	xor    DWORD PTR [esi+esi*1],esp
  41e5ae:	loopne 0x41e538
  41e5b0:	dec    ebx
  41e5b1:	mov    DWORD PTR [eax+0x6e],ebp
  41e5b4:	retf   0x1860
  41e5b7:	ja     0x41e55c
  41e5b9:	addr16 cmp eax,0x952cd4ff
  41e5bf:	rcr    BYTE PTR [ecx-0x4c],0xe1
  41e5c3:	neg    DWORD PTR [eax+0x1e]
  41e5c6:	rol    edx,cl
  41e5c8:	into   
  41e5c9:	add    al,0xc9
  41e5cb:	sar    BYTE PTR [esp+esi*4-0x1b],1
  41e5cf:	push   esi
  41e5d0:	mov    esi,0xe13bf1e7
  41e5d5:	xor    ebx,DWORD PTR [edi]
  41e5d7:	cmp    al,0xef
  41e5d9:	in     eax,0x12
  41e5db:	test   eax,0x3bef04ea
  41e5e0:	ret    
  41e5e1:	shl    DWORD PTR [ecx-0x121a0256],0x98
  41e5e8:	mov    DWORD PTR [eax-0x60],ebp
  41e5eb:	lods   eax,DWORD PTR ds:[esi]
  41e5ec:	cmp    bh,BYTE PTR [ebp-0x50d60b6b]
  41e5f2:	adc    al,0xc5
  41e5f4:	xchg   esi,eax
  41e5f5:	or     DWORD PTR [ecx+0x66558fe6],ebp
  41e5fb:	cmp    BYTE PTR [esi-0x36d65731],cl
  41e601:	iret   
  41e602:	outs   dx,BYTE PTR ds:[esi]
  41e603:	mov    cl,0x7a
  41e605:	pop    edi
  41e606:	dec    ebp
  41e607:	ss sbb eax,0xc7d40a29
  41e60d:	stos   DWORD PTR es:[edi],eax
  41e60e:	fdiv   st,st(7)
  41e610:	fistp  WORD PTR [ebx+edx*4]
  41e613:	loop   0x41e5d0
  41e615:	xlat   BYTE PTR ds:[ebx]
  41e616:	cmp    ecx,esi
  41e618:	xchg   ebx,eax
  41e619:	mov    dh,ch
  41e61b:	pushf  
  41e61c:	mov    esi,cs
  41e61e:	adc    al,0x81
  41e620:	add    al,0x30
  41e622:	dec    ebx
  41e623:	cmp    eax,0x25414dcf
  41e628:	fstp   QWORD PTR [edx-0x1d]
  41e62b:	lods   al,BYTE PTR ds:[esi]
  41e62c:	clc    
  41e62d:	out    dx,al
  41e62e:	mov    edi,0x6f77070b
  41e633:	ror    bh,cl
  41e635:	xchg   edx,eax
  41e636:	shl    DWORD PTR [eax+0x71],0x2b
  41e63a:	loop   0x41e5bc
  41e63c:	sub    edx,esi
  41e63e:	stos   BYTE PTR es:[edi],al
  41e63f:	jbe    0x41e63e
  41e641:	fs push 0xffffffd5
  41e644:	jmp    0xffaa:0x6dbb3f71
  41e64b:	add    BYTE PTR [eax],cl
  41e64d:	ins    DWORD PTR es:[edi],dx
  41e64e:	leave  
  41e64f:	loop   0x41e6cd
  41e651:	sbb    al,0xf6
  41e653:	int    0x7e
  41e655:	fiadd  WORD PTR [edx+eiz*2-0x2d]
  41e659:	push   ebp
  41e65a:	or     eax,0xa9d37220
  41e65f:	jb     0x41e640
  41e661:	gs push ss
  41e663:	jl     0x41e627
  41e665:	sub    eax,0xc9bf655
  41e66a:	pushf  
  41e66b:	mov    ah,0xb8
  41e66d:	ret    
  41e66e:	and    eax,0x4b4595f3
  41e673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e674:	and    eax,0xcb21b2e6
  41e679:	mov    al,ds:0xaf3175f2
  41e67e:	or     BYTE PTR [esi+0x41],ah
  41e681:	mov    al,ds:0xd3bdd121
  41e686:	fs cwde 
  41e688:	popf   
  41e689:	push   esi
  41e68a:	sub    al,0xf4
  41e68c:	xchg   ebx,eax
  41e68d:	jne    0x41e67d
  41e68f:	mov    ebx,0x96a60408
  41e694:	jl     0x41e684
  41e696:	cmp    ch,cl
  41e698:	add    edx,ebx
  41e69a:	add    DWORD PTR [ebx+0x51179ca4],esp
  41e6a0:	test   eax,0xb73a89c1
  41e6a5:	retf   0x1a76
  41e6a8:	xor    al,0x87
  41e6aa:	retf   
  41e6ab:	lods   al,BYTE PTR ds:[esi]
  41e6ac:	xor    esp,DWORD PTR [esi-0x45]
  41e6af:	mov    bl,0x62
  41e6b1:	ja     0x41e648
  41e6b3:	sahf   
  41e6b4:	ins    BYTE PTR es:[edi],dx
  41e6b5:	push   ebx
  41e6b6:	hlt    
  41e6b7:	neg    BYTE PTR [edi]
  41e6b9:	scas   al,BYTE PTR es:[edi]
  41e6ba:	out    dx,eax
  41e6bb:	prefetch (bad)
  41e6bc:	or     eax,0xdc14b4e8
  41e6c1:	cmp    esp,esp
  41e6c3:	js     0x41e6dd
  41e6c5:	add    esp,DWORD PTR [eax-0x66aeea19]
  41e6cb:	xor    edi,DWORD PTR [esi]
  41e6cd:	pop    es
  41e6ce:	mov    ch,0x38
  41e6d0:	outs   dx,DWORD PTR ds:[esi]
  41e6d1:	enter  0x6928,0xd2
  41e6d5:	out    0x8c,eax
  41e6d7:	mov    edx,0xf63a43d2
  41e6dc:	cmp    BYTE PTR [ebx+0x2e],al
  41e6df:	ja     0x41e686
  41e6e1:	and    BYTE PTR [ebx-0x1cdf740f],bh
  41e6e7:	jge    0x41e6fd
  41e6e9:	mov    ah,0x74
  41e6eb:	push   eax
  41e6ec:	dec    edx
  41e6ed:	call   0x40cb9425
  41e6f2:	call   0x9ff0c3a4
  41e6f7:	sbb    esp,ecx
  41e6f9:	push   edx
  41e6fa:	into   
  41e6fb:	jae    0x41e6cc
  41e6fd:	sahf   
  41e6fe:	push   ss
  41e6ff:	nop
  41e700:	jmp    0x1dae56fc
  41e705:	mov    dh,BYTE PTR [esi-0x2106602e]
  41e70b:	add    edi,0x3a
  41e70e:	pop    ecx
  41e70f:	(bad)  
  41e710:	je     0x41e73e
  41e712:	sub    eax,DWORD PTR [edx+0x1a]
  41e715:	or     ebp,DWORD PTR [edx-0x54918614]
  41e71b:	ret    0x8e91
  41e71e:	inc    esi
  41e71f:	in     al,0xbe
  41e721:	mov    dh,0xd5
  41e723:	xchg   ebp,eax
  41e724:	adc    al,0xc2
  41e726:	pop    edx
  41e727:	aaa    
  41e728:	pop    esi
  41e729:	mov    al,0xf1
  41e72b:	and    al,0x15
  41e72d:	adc    edi,ebx
  41e72f:	xchg   DWORD PTR [eax+0x56],eax
  41e732:	leave  
  41e733:	rcl    BYTE PTR [esi-0x71c80d73],cl
  41e739:	shr    BYTE PTR [esp+esi*4],1
  41e73c:	clc    
  41e73d:	(bad)  
  41e73e:	dec    ecx
  41e73f:	dec    ebp
  41e740:	add    BYTE PTR [ebx],ch
  41e742:	sahf   
  41e743:	pop    ds
  41e744:	mov    BYTE PTR [ecx+0x66639244],ch
  41e74a:	pop    ecx
  41e74b:	push   edi
  41e74c:	fdivr  QWORD PTR [ecx]
  41e74e:	call   0x712c:0x621ea870
  41e755:	sbb    cl,cl
  41e757:	jge    0x41e7d3
  41e759:	cmp    dh,BYTE PTR [esi]
  41e75b:	loop   0x41e7c4
  41e75d:	jge    0x41e724
  41e75f:	mov    bh,0xd4
  41e761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e762:	cld    
  41e763:	sub    eax,0xff3d41c
  41e768:	add    ch,cl
  41e76a:	mov    dh,0x7d
  41e76c:	and    DWORD PTR [esi-0x3c987023],eax
  41e772:	repnz add ah,bh
  41e775:	std    
  41e776:	push   esp
  41e777:	mov    dl,0x7f
  41e779:	and    DWORD PTR [ecx],ecx
  41e77b:	mov    dl,BYTE PTR [edx+0x6d687157]
  41e781:	mov    edx,0x4ef2a0a2
  41e786:	loope  0x41e7f5
  41e788:	out    dx,eax
  41e789:	into   
  41e78a:	enter  0x1ac0,0xf8
  41e78e:	xchg   ebx,eax
  41e78f:	clc    
  41e790:	jnp    0x41e759
  41e792:	icebp  
  41e793:	jge    0x41e775
  41e795:	lods   al,BYTE PTR ds:[esi]
  41e796:	hlt    
  41e797:	ds jae 0x41e78b
  41e79a:	and    esp,DWORD PTR [eax*4-0x24cfd7b7]
  41e7a1:	dec    edx
  41e7a2:	outs   dx,BYTE PTR ds:[esi]
  41e7a3:	test   eax,0x51289295
  41e7a8:	(bad)  
  41e7a9:	repnz xor eax,0x239060d9
  41e7af:	adc    DWORD PTR [ebx+0x9ddc155],esp
  41e7b5:	inc    esi
  41e7b6:	outs   dx,BYTE PTR ds:[esi]
  41e7b7:	bound  eax,QWORD PTR [edi+0x4a319ee8]
  41e7bd:	jg     0x41e820
  41e7bf:	jbe    0x41e7ad
  41e7c1:	lods   al,BYTE PTR ds:[esi]
  41e7c2:	dec    edi
  41e7c3:	mov    ebp,0xb6374da0
  41e7c8:	push   es
  41e7c9:	pop    eax
  41e7ca:	or     edx,ebx
  41e7cc:	mov    esi,0x748d92ac
  41e7d1:	xchg   edi,eax
  41e7d2:	dec    eax
  41e7d3:	push   0x6f
  41e7d5:	mov    eax,ds:0xbfc53515
  41e7da:	not    edi
  41e7dc:	inc    edi
  41e7dd:	fbld   TBYTE PTR [esp+ebp*1]
  41e7e0:	loop   0x41e802
  41e7e2:	mov    esp,0x40e929fd
  41e7e7:	int3   
  41e7e8:	mov    ds:0xf956c215,eax
  41e7ed:	sbb    eax,0x28f702d9
  41e7f2:	add    edx,DWORD PTR [ecx]
  41e7f4:	repnz in al,0x50
  41e7f7:	xchg   ebx,eax
  41e7f8:	aaa    
  41e7f9:	ss ins BYTE PTR es:[edi],dx
  41e7fb:	pop    edi
  41e7fc:	call   DWORD PTR [eax]
  41e7fe:	lahf   
  41e7ff:	fistp  WORD PTR [edx-0x75aa54b9]
  41e805:	nop
  41e806:	addr16 leave 
  41e808:	pop    ecx
  41e809:	dec    edx
  41e80a:	sub    DWORD PTR [esp+edi*2+0x7e],esp
  41e80e:	and    DWORD PTR [ecx+0x621b204a],edi
  41e814:	xlat   BYTE PTR ds:[ebx]
  41e815:	mov    al,ds:0xe2137bb1
  41e81a:	push   0xffffffbf
  41e81c:	push   esp
  41e81d:	popa   
  41e81e:	sbb    BYTE PTR [edx],dl
  41e820:	dec    esi
  41e821:	jge    0x41e82a
  41e823:	loop   0x41e87f
  41e825:	inc    ecx
  41e826:	ins    DWORD PTR es:[edi],dx
  41e827:	dec    edi
  41e828:	mov    esp,0x55447481
  41e82d:	pusha  
  41e82e:	(bad)  
  41e82f:	and    bl,BYTE PTR [ebx]
  41e831:	add    al,BYTE PTR [edx]
  41e833:	fimul  DWORD PTR [ebp+0x4a1ea60f]
  41e839:	ret    
  41e83a:	test   eax,0x228c0d0b
  41e83f:	mov    esp,0xc3508db
  41e844:	lods   eax,DWORD PTR ds:[esi]
  41e845:	mov    edi,0x4aead98c
  41e84a:	jmp    0x343e:0x9fcc7a88
  41e851:	sub    eax,0x8f5ce842
  41e856:	or     dl,BYTE PTR [eax-0x2fefe553]
  41e85c:	lods   eax,DWORD PTR ds:[esi]
  41e85d:	and    al,BYTE PTR [esi-0x4b]
  41e860:	push   0x3a75d8ba
  41e865:	inc    eax
  41e866:	(bad)  
  41e867:	and    eax,0x4ef9e90b
  41e86c:	sahf   
  41e86d:	jmp    0x336e:0xd6c3c640
  41e874:	sbb    eax,0x327d0691
  41e879:	mov    DWORD PTR [ecx+0x1e],esi
  41e87c:	loopne 0x41e802
  41e87e:	mov    bh,0x24
  41e880:	pop    esp
  41e881:	cmc    
  41e882:	sbb    BYTE PTR es:[esi],cl
  41e885:	ds or  eax,0xb6a50c2b
  41e88b:	dec    ebp
  41e88c:	mov    ds:0x223d7ce3,eax
  41e891:	xchg   edi,eax
  41e892:	test   BYTE PTR [edx-0x66],dh
  41e895:	(bad)  
  41e896:	xchg   esp,eax
  41e897:	(bad)  
  41e898:	jl     0x41e8da
  41e89a:	mov    bh,0xb2
  41e89c:	(bad)  
  41e89d:	sbb    ebp,DWORD PTR [esi-0x6b]
  41e8a0:	rol    DWORD PTR [ecx],1
  41e8a2:	sbb    bl,bh
  41e8a4:	pop    esp
  41e8a5:	imul   eax,ecx,0x85a74a98
  41e8ab:	inc    ebx
  41e8ac:	jecxz  0x41e908
  41e8ae:	pop    ss
  41e8af:	retf   
  41e8b0:	data16 ins BYTE PTR es:[di],dx
  41e8b3:	aaa    
  41e8b4:	addr16 adc edi,ecx
  41e8b7:	or     eax,0x4cef6d14
  41e8bc:	jb     0x41e84e
  41e8be:	mov    cl,0x31
  41e8c0:	or     ecx,DWORD PTR [edi]
  41e8c2:	rol    BYTE PTR [ebx-0x450b0a12],0x8f
  41e8c9:	xchg   ebp,eax
  41e8ca:	sbb    eax,0x2109c950
  41e8cf:	cs in  eax,0x73
  41e8d2:	sub    BYTE PTR [eax+0x210f2d05],dh
  41e8d8:	and    edx,ebx
  41e8da:	adc    DWORD PTR [ebp+0x6],eax
  41e8dd:	pop    esi
  41e8de:	aad    0x53
  41e8e0:	out    0x8e,eax
  41e8e2:	cmp    al,0xa4
  41e8e4:	iret   
  41e8e5:	jmp    DWORD PTR [eax+0x4]
  41e8e8:	add    BYTE PTR [esp+ebp*8-0x41],bl
  41e8ec:	int    0x19
  41e8ee:	mov    ah,dh
  41e8f0:	push   es
  41e8f1:	xor    eax,0x96c0fd66
  41e8f6:	test   eax,0xe05760f2
  41e8fb:	xchg   esi,eax
  41e8fc:	test   BYTE PTR [ecx+0x0],cl
  41e8ff:	add    BYTE PTR [eax],al
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	mov    BYTE PTR [ebx+edi*8],cl
  41e911:	inc    esp
  41e912:	sbb    eax,0xf4000164
  41e917:	add    al,0x0
  41e919:	add    ah,cl
  41e91b:	bound  eax,QWORD PTR [eax-0x3f]
  41e91e:	mov    ebx,0x9c71c580
  41e923:	test   DWORD PTR [ebx-0x30],esi
  41e926:	push   ds
  41e927:	mov    DWORD PTR [edx],esp
  41e929:	test   al,0xe5
  41e92b:	arpl   WORD PTR [ecx],ax
  41e92d:	loope  0x41e8b3
  41e92f:	xor    eax,0x8e862a3f
  41e934:	add    BYTE PTR [eax+0x4],0xa7
  41e938:	fisubr DWORD PTR [ebp-0x15]
  41e93b:	clc    
  41e93c:	ss inc edx
  41e93e:	pusha  
  41e93f:	jp     0x41e975
  41e941:	pop    edx
  41e942:	xchg   ebx,eax
  41e943:	sub    bh,BYTE PTR [edi]
  41e945:	clc    
  41e946:	fsubr  st,st(4)
  41e948:	push   edx
  41e949:	jg     0x41e96f
  41e94b:	retf   0x4ffe
  41e94e:	push   cs
  41e94f:	mov    ch,0x5b
  41e951:	mov    BYTE PTR [edi],bh
  41e953:	lds    esi,FWORD PTR [ebp-0x26]
  41e956:	in     eax,dx
  41e957:	mov    ecx,0xf857de33
  41e95c:	mov    BYTE PTR [esi+eiz*1],dh
  41e95f:	mov    al,ds:0x27192ea8
  41e964:	dec    ecx
  41e965:	mov    cl,0xff
  41e967:	shl    BYTE PTR [edi-0x7b],1
  41e96a:	cli    
  41e96b:	push   es
  41e96c:	cmp    DWORD PTR [esi],ecx
  41e96e:	scas   eax,DWORD PTR es:[edi]
  41e96f:	sub    al,0xea
  41e971:	mov    BYTE PTR [ecx],0x66
  41e974:	clc    
  41e975:	mov    al,0x10
  41e977:	pop    ebp
  41e978:	cmp    al,0x8
  41e97a:	stos   BYTE PTR es:[edi],al
  41e97b:	dec    eax
  41e97c:	pop    ss
  41e97d:	pop    ecx
  41e97e:	adc    BYTE PTR [ecx+0x6782ae3],0xe3
  41e985:	jle    0x41e999
  41e987:	ffreep st(5)
  41e989:	fisttp DWORD PTR [esi+esi*8]
  41e98c:	push   0x62
  41e98e:	add    eax,0x1425f61
  41e993:	imul   ecx,DWORD PTR [ecx-0x70746d54],0x1e
  41e99a:	iret   
  41e99b:	xor    ebx,DWORD PTR [eax-0x2d078417]
  41e9a1:	test   BYTE PTR [ebx+0xa2a5155],dl
  41e9a7:	add    DWORD PTR [ebx+0x48f159d],ebx
  41e9ad:	xchg   esp,eax
  41e9ae:	out    0xcb,al
  41e9b0:	jnp    0x41e9e7
  41e9b2:	push   esi
  41e9b3:	mov    eax,ds:0x99935fd6
  41e9b8:	cmp    BYTE PTR [edi],0x1
  41e9bb:	loop   0x41e9f3
  41e9bd:	xchg   ecx,eax
  41e9be:	imul   edi,DWORD PTR [eax+0x5d],0x261059ac
  41e9c5:	sti    
  41e9c6:	call   0xf6bc302b
  41e9cb:	arpl   ax,ax
  41e9cd:	sub    eax,0x5051d69c
  41e9d2:	cmp    al,0xb3
  41e9d4:	or     al,0xef
  41e9d6:	adc    ebx,DWORD PTR gs:[edx+0x51]
  41e9da:	sub    ebx,DWORD PTR [edx]
  41e9dc:	pop    esp
  41e9dd:	and    ebx,DWORD PTR [eax+0x1a865618]
  41e9e3:	mov    al,0xf
  41e9e5:	add    eax,DWORD PTR [ebp+ebp*2+0x70]
  41e9e9:	(bad)  
  41e9ea:	mov    al,gs:0x4591caeb
  41e9f0:	mov    ecx,DWORD PTR [edi+0x58]
  41e9f3:	into   
  41e9f4:	loope  0x41e994
  41e9f6:	inc    ebp
  41e9f7:	push   eax
  41e9f8:	xor    DWORD PTR ss:[eax],0x15
  41e9fc:	xchg   esp,eax
  41e9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9fe:	popa   
  41e9ff:	mov    cs,WORD PTR [edx-0x2e0c5826]
  41ea05:	xchg   edi,eax
  41ea06:	push   ss
  41ea07:	sbb    bl,BYTE PTR [ebx-0x15]
  41ea0a:	data16 imul BYTE PTR [ebx]
  41ea0d:	sub    BYTE PTR [ecx],0xe
  41ea10:	rcl    BYTE PTR [ebx],0x4e
  41ea13:	rcr    DWORD PTR [ebp-0x77],0xb2
  41ea17:	(bad)  
  41ea18:	sbb    DWORD PTR [ecx-0xf7adf96],ebp
  41ea1e:	jmp    0xd80ff330
  41ea23:	out    0xef,al
  41ea25:	push   0xfd42d94
  41ea2a:	dec    edi
  41ea2b:	fidiv  WORD PTR [esp+ecx*4]
  41ea2e:	scas   al,BYTE PTR es:[edi]
  41ea2f:	fisub  DWORD PTR [ebx-0x3c]
  41ea32:	jmp    0x74e5:0x9b8bb908
  41ea39:	sub    eax,0xee8fd8b3
  41ea3e:	call   0x7624:0x217d5d26
  41ea45:	mov    ebx,0x9571cd1d
  41ea4a:	mov    esp,0x4e23825e
  41ea4f:	mov    DWORD PTR [eax],edx
  41ea51:	scas   al,BYTE PTR es:[edi]
  41ea52:	push   ecx
  41ea53:	mov    ds:0xe6c788da,eax
  41ea58:	je     0x41ea5e
  41ea5a:	sub    BYTE PTR [esi+0x64],bl
  41ea5d:	in     al,0x3c
  41ea5f:	mov    ebp,0x8beda23c
  41ea64:	sub    DWORD PTR [ebx],edi
  41ea66:	outs   dx,BYTE PTR ds:[esi]
  41ea67:	ret    
  41ea68:	icebp  
  41ea69:	mov    ch,0x32
  41ea6b:	mov    esp,0x74575e79
  41ea70:	fisub  WORD PTR [eax]
  41ea72:	push   esp
  41ea73:	pusha  
  41ea74:	pop    ebx
  41ea75:	xchg   ecx,eax
  41ea76:	pop    ds
  41ea77:	and    eax,0x5c0ba540
  41ea7c:	push   ebp
  41ea7d:	daa    
  41ea7e:	dec    ecx
  41ea7f:	loopne 0x41ea2a
  41ea81:	mov    edi,0x52e35d5
  41ea86:	adc    ebp,DWORD PTR [edx+eax*4]
  41ea89:	leave  
  41ea8a:	fmul   DWORD PTR [ebx]
  41ea8c:	(bad)  
  41ea8d:	or     esi,DWORD PTR [ecx]
  41ea8f:	push   ebx
  41ea90:	jecxz  0x41ea90
  41ea92:	xchg   edi,eax
  41ea93:	(bad)  [esi-0x38]
  41ea96:	xor    edi,DWORD PTR [edi]
  41ea98:	adc    edx,0x65
  41ea9b:	inc    esp
  41ea9c:	push   0xffffffe4
  41ea9e:	pop    edi
  41ea9f:	mov    DWORD PTR [edi+0x78],ecx
  41eaa2:	adc    eax,0xb9dd82a3
  41eaa7:	adc    dl,ch
  41eaa9:	dec    eax
  41eaaa:	mov    eax,0xfc13688a
  41eaaf:	rcl    esi,1
  41eab1:	sbb    eax,0xa3fee376
  41eab6:	push   es
  41eab7:	cmp    ecx,ebx
  41eab9:	sbb    eax,0x50baa3
  41eabe:	sar    BYTE PTR [edx],0x76
  41eac1:	adc    DWORD PTR [edx+0x6d],edx
  41eac4:	pop    ecx
  41eac5:	shl    esi,0xc0
  41eac8:	xchg   ebp,eax
  41eac9:	lahf   
  41eaca:	test   DWORD PTR [eax],ebp
  41eacc:	push   0xffffff89
  41eace:	mov    al,0xd2
  41ead0:	mov    cl,0x9a
  41ead2:	mov    ecx,DWORD PTR [esi]
  41ead4:	(bad)  
  41ead5:	jge    0x41eb16
  41ead7:	popa   
  41ead8:	or     BYTE PTR [edx+0x3b],ch
  41eadb:	leave  
  41eadc:	or     ch,BYTE PTR [esi+0x48803d55]
  41eae2:	bsr    edx,DWORD PTR [edi+0x6e]
  41eae6:	hlt    
  41eae7:	jg     0x41eb4f
  41eae9:	sub    ah,BYTE PTR [ebp+0x14]
  41eaec:	cmp    ebp,DWORD PTR [esi+ebp*8]
  41eaef:	jl     0x41eb66
  41eaf1:	and    DWORD PTR [edi-0x66fd53a1],edx
  41eaf7:	pop    ebp
  41eaf8:	jmp    0x63d5:0xcaa65d6e
  41eaff:	pop    ebp
  41eb00:	clc    
  41eb01:	adc    DWORD PTR [ebx+0x21],0xb
  41eb05:	lods   eax,DWORD PTR ds:[esi]
  41eb06:	fdivr  st,st(0)
  41eb08:	clc    
  41eb09:	ds jp  0x41eab5
  41eb0c:	inc    ecx
  41eb0d:	ds and eax,0xcb8d6b9b
  41eb13:	ins    BYTE PTR es:[edi],dx
  41eb14:	repz pusha 
  41eb16:	out    0x68,eax
  41eb18:	add    ecx,esi
  41eb1a:	out    dx,al
  41eb1b:	jb     0x41eaf8
  41eb1d:	jb     0x41eafd
  41eb1f:	outs   dx,DWORD PTR ds:[esi]
  41eb20:	rcr    BYTE PTR [ebx+ecx*8],cl
  41eb23:	pop    es
  41eb24:	ins    DWORD PTR es:[edi],dx
  41eb25:	mov    ebp,DWORD PTR [ecx+0x71349316]
  41eb2b:	repnz cmp al,0x9b
  41eb2e:	shl    dh,0x3d
  41eb31:	pop    edi
  41eb33:	fisubr DWORD PTR es:0x8629a4ef
  41eb3a:	mov    ebx,0x617fb993
  41eb3f:	jo     0x41eb8b
  41eb41:	cli    
  41eb42:	pop    ss
  41eb43:	scas   eax,DWORD PTR es:[edi]
  41eb44:	push   ebx
  41eb45:	std    
  41eb46:	fwait
  41eb47:	and    dh,BYTE PTR [ecx-0x74]
  41eb4a:	sahf   
  41eb4b:	ja     0x41eb9c
  41eb4d:	fiadd  DWORD PTR [eax-0x2523ed6b]
  41eb53:	loopne 0x41eb00
  41eb55:	call   0x4501:0x58a239da
  41eb5c:	rcl    DWORD PTR [ecx],0x2b
  41eb5f:	shl    dh,cl
  41eb61:	push   esp
  41eb62:	and    eax,0xaa9c75fe
  41eb67:	inc    ebx
  41eb68:	retf   
  41eb69:	aas    
  41eb6a:	loopne 0x41eb6b
  41eb6c:	mov    al,bl
  41eb6e:	sar    BYTE PTR [edx],1
  41eb70:	sub    BYTE PTR [ecx-0xe],al
  41eb73:	fld    TBYTE PTR ds:0x79438db9
  41eb79:	je     0x41eba9
  41eb7b:	jmp    0x7671:0x2f8e8000
  41eb82:	cld    
  41eb83:	mov    cl,0xe1
  41eb85:	stos   DWORD PTR es:[edi],eax
  41eb86:	bound  esp,QWORD PTR [esi]
  41eb88:	repnz test BYTE PTR [edx-0x6c],al
  41eb8c:	adc    DWORD PTR [ebp-0x73679f91],esp
  41eb92:	push   ss
  41eb93:	dec    edi
  41eb94:	call   0x3fb72303
  41eb99:	xchg   BYTE PTR [ebp-0x78],al
  41eb9c:	call   0xc028:0x3183a473
  41eba3:	xchg   ebp,eax
  41eba4:	or     DWORD PTR [edx-0x72025b98],eax
  41ebaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebab:	popa   
  41ebac:	xor    eax,0xcbc3f7b1
  41ebb1:	xchg   edx,eax
  41ebb2:	pop    ebx
  41ebb3:	pop    edx
  41ebb4:	and    DWORD PTR [esi-0x58],ebp
  41ebb7:	ror    BYTE PTR [edx+0x64],0xf8
  41ebbb:	sar    BYTE PTR [eax+0x74c19acd],1
  41ebc1:	mov    esp,0x9d4647a2
  41ebc6:	mov    ds:0x848b98c7,eax
  41ebcb:	sub    DWORD PTR [ebx-0x6374e7e],eax
  41ebd1:	out    dx,al
  41ebd2:	pop    ds
  41ebd3:	scas   al,BYTE PTR es:[edi]
  41ebd4:	adc    eax,0x45066c73
  41ebd9:	add    al,0x28
  41ebdb:	push   ds
  41ebdc:	stos   BYTE PTR es:[edi],al
  41ebdd:	out    dx,eax
  41ebde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebdf:	mov    ebp,0x94147560
  41ebe4:	push   edx
  41ebe5:	stc    
  41ebe6:	mov    esi,0xd0a859a4
  41ebeb:	or     dh,BYTE PTR [eax-0x7f]
  41ebee:	shr    ah,0x7a
  41ebf1:	xor    al,0xa2
  41ebf3:	sub    bh,BYTE PTR [ebx-0x75]
  41ebf6:	cld    
  41ebf7:	or     ch,cl
  41ebf9:	adc    al,0x1c
  41ebfc:	cmc    
  41ebfd:	popa   
  41ebfe:	cmc    
  41ebff:	shr    BYTE PTR [edi-0x27b53997],0x7c
  41ec06:	add    BYTE PTR [edi-0x72],dl
  41ec09:	fdiv   st,st(6)
  41ec0b:	xchg   ebp,eax
  41ec0c:	outs   dx,DWORD PTR ds:[esi]
  41ec0d:	in     al,dx
  41ec0e:	(bad)  
  41ec0f:	pusha  
  41ec10:	xchg   ebp,edx
  41ec12:	sbb    BYTE PTR [ebp+eax*2+0x37],al
  41ec16:	mov    DWORD PTR [edi+eiz*1],ecx
  41ec19:	ds jg  0x41ec24
  41ec1c:	xchg   ebp,eax
  41ec1d:	adc    BYTE PTR [esi+0x3e5cce4f],bh
  41ec23:	xor    al,0x7d
  41ec25:	sub    BYTE PTR [edi],dh
  41ec27:	out    0xe7,eax
  41ec29:	mov    DWORD PTR [edi],0xfa14cd38
  41ec2f:	ret    0xc61d
  41ec32:	cmp    al,0x9b
  41ec34:	jae    0x41ec2b
  41ec36:	pop    ss
  41ec37:	into   
  41ec38:	hlt    
  41ec39:	push   esi
  41ec3a:	ds or  edx,ebp
  41ec3d:	pop    edi
  41ec3e:	sub    ch,bl
  41ec40:	push   ebx
  41ec41:	int    0x84
  41ec43:	and    BYTE PTR [edi+eax*8-0x64],cl
  41ec47:	jns    0x41ec89
  41ec49:	dec    esp
  41ec4a:	mul    DWORD PTR [ecx+0x5964a015]
  41ec50:	xchg   ebp,eax
  41ec51:	xlat   BYTE PTR ds:[ebx]
  41ec52:	stc    
  41ec53:	push   ds
  41ec54:	mov    esp,0xc28cc32a
  41ec59:	mov    esi,0xaf9ee049
  41ec5e:	xor    bl,BYTE PTR [ebx+0x4c82c925]
  41ec64:	inc    eax
  41ec65:	xchg   esp,eax
  41ec66:	pop    ebx
  41ec67:	into   
  41ec68:	pop    edx
  41ec69:	jo     0x41ec98
  41ec6b:	cwde   
  41ec6c:	mov    edx,0x3116adb1
  41ec71:	outs   dx,BYTE PTR ds:[esi]
  41ec72:	push   eax
  41ec73:	(bad)  
  41ec74:	loope  0x41ecf3
  41ec76:	mov    esi,0x59348aab
  41ec7b:	sbb    al,0x5b
  41ec7e:	mov    edi,0x80742639
  41ec83:	ret    
  41ec84:	div    DWORD PTR [ecx-0x41]
  41ec87:	mov    BYTE PTR [ebp+0x51],dh
  41ec8a:	dec    edi
  41ec8b:	and    ecx,DWORD PTR [edi+0x7cc33a63]
  41ec91:	test   al,0x64
  41ec93:	inc    edi
  41ec94:	inc    esp
  41ec95:	sbb    edi,DWORD PTR [bx+0x3d]
  41ec99:	dec    edi
  41ec9a:	test   eax,0x1d7b4e62
  41ec9f:	xchg   ecx,eax
  41eca0:	xchg   edi,eax
  41eca1:	pop    ebx
  41eca2:	push   DWORD PTR [esi+eiz*1+0x4dc09c79]
  41eca9:	mov    ch,0xae
  41ecab:	push   esp
  41ecac:	and    ebp,ecx
  41ecae:	push   edx
  41ecaf:	cmp    al,0xca
  41ecb1:	call   0x66ae:0xb9699b6b
  41ecb8:	jmp    0xedc8:0x7133a8a2
  41ecbf:	loop   0x41ecbb
  41ecc1:	mov    ch,0xb7
  41ecc3:	gs ja  0x41ec56
  41ecc6:	pop    ebp
  41ecc7:	push   es
  41ecc8:	mov    bh,0x43
  41ecca:	pop    ecx
  41eccb:	imul   ebp,DWORD PTR [eax+ebx*2],0xfffffffe
  41eccf:	xchg   esi,eax
  41ecd0:	enter  0xc73,0x2f
  41ecd4:	add    al,0x5f
  41ecd6:	fidiv  DWORD PTR [edi-0x6d]
  41ecd9:	jg     0x41ecb9
  41ecdb:	or     BYTE PTR [ecx],0xbc
  41ecde:	push   cs
  41ecdf:	pop    esp
  41ece0:	sbb    al,0x10
  41ece2:	fiadd  WORD PTR [edx-0x5a]
  41ece5:	or     DWORD PTR [ebp+0x14],ebx
  41ece8:	inc    eax
  41ece9:	mov    cl,0x2e
  41eceb:	jg     0x41ece6
  41eced:	inc    esp
  41ecee:	inc    esp
  41ecef:	cmp    DWORD PTR [esp+eiz*8+0x67a41b2f],edx
  41ecf6:	fwait
  41ecf7:	sbb    BYTE PTR [edi+ebp*2-0x65],0x20
  41ecfc:	retf   
  41ecfd:	cld    
  41ecfe:	jo     0x41ec97
  41ed00:	mov    esi,0x5ff26c12
  41ed05:	pop    ss
  41ed06:	cmc    
  41ed07:	adc    esp,DWORD PTR [ecx+0x70]
  41ed0a:	xor    ebx,ebx
  41ed0c:	push   ds
  41ed0d:	(bad)  
  41ed0e:	test   BYTE PTR [ebp-0x62045f0],0xb7
  41ed15:	push   eax
  41ed16:	mov    ch,0x49
  41ed18:	aad    0x9f
  41ed1a:	mov    ebp,0x17477048
  41ed1f:	sahf   
  41ed20:	ja     0x41ed47
  41ed22:	idiv   DWORD PTR [eax]
  41ed24:	dec    esi
  41ed25:	adc    ch,BYTE PTR [si]
  41ed28:	daa    
  41ed29:	add    DWORD PTR [ebx],esp
  41ed2b:	loopne 0x41ed4c
  41ed2d:	out    0xa2,al
  41ed2f:	push   edi
  41ed30:	out    dx,al
  41ed31:	adc    DWORD PTR [ecx+0x68ded8c8],esi
  41ed37:	jmp    0x4ed6d130
  41ed3c:	sub    BYTE PTR [edi],dh
  41ed3e:	(bad)  
  41ed3f:	iret   
  41ed40:	pushf  
  41ed41:	xor    DWORD PTR [edi+edx*1-0x1e],0x2ccf8f29
  41ed49:	out    0x51,al
  41ed4b:	rcr    BYTE PTR [edx+0x79121c0b],1
  41ed51:	lods   eax,DWORD PTR ds:[esi]
  41ed52:	pop    ds
  41ed53:	xor    edi,esp
  41ed55:	jmp    0xfa03:0xadd8e7c6
  41ed5c:	mov    DWORD PTR [ecx-0x2c],edx
  41ed5f:	push   ss
  41ed60:	adc    eax,0xe4b91524
  41ed65:	fcmovnbe st,st(0)
  41ed67:	retf   0x2879
  41ed6a:	lock dec BYTE PTR [ecx+0x44]
  41ed6e:	js     0x41ed02
  41ed70:	sub    DWORD PTR [ecx+edi*4-0x23],edi
  41ed74:	in     al,0x47
  41ed76:	call   DWORD PTR [eax+0x33b90e18]
  41ed7c:	es mov ah,0x82
  41ed7f:	xchg   esp,eax
  41ed80:	mov    eax,ds:0xe4c4a46d
  41ed85:	and    ebx,DWORD PTR [esi+0x21]
  41ed88:	arpl   WORD PTR [edi-0xa9d3fa7],sp
  41ed8e:	xchg   edi,eax
  41ed8f:	(bad)  
  41ed90:	(bad)  
  41ed91:	test   DWORD PTR [edi-0x43],ebp
  41ed94:	mov    eax,0x4671c800
  41ed99:	pop    esp
  41ed9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed9b:	in     al,dx
  41ed9c:	mov    ebx,0xdc2e5827
  41eda1:	out    dx,al
  41eda2:	daa    
  41eda3:	fst    DWORD PTR [eax]
  41eda5:	popa   
  41eda6:	out    0xb3,al
  41eda8:	mov    BYTE PTR [edx],dl
  41edaa:	test   cl,0xee
  41edad:	repnz xor eax,0x23d5e566
  41edb3:	xor    edi,DWORD PTR [ecx]
  41edb5:	test   eax,0x9d0bd012
  41edba:	popf   
  41edbb:	jge    0x41ed49
  41edbd:	cwde   
  41edbe:	popf   
  41edbf:	and    esp,DWORD PTR [ebx]
  41edc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edc2:	int    0x72
  41edc4:	mov    ch,0xcd
  41edc6:	cmc    
  41edc7:	xchg   edx,eax
  41edc8:	cli    
  41edc9:	xor    ah,BYTE PTR [edx-0x4d]
  41edcc:	lods   eax,DWORD PTR ds:[esi]
  41edcd:	mov    edi,0xb8600fb4
  41edd2:	add    al,0x6d
  41edd4:	sub    DWORD PTR ds:0x5a0aca1e,0x69021175
  41edde:	and    cl,0x72
  41ede1:	sbb    BYTE PTR [eax-0x22],ch
  41ede4:	xchg   edx,eax
  41ede5:	cmc    
  41ede6:	rcl    al,0x96
  41ede9:	mov    ds:0x60aae352,eax
  41edee:	test   BYTE PTR [ecx+0x3a6e32fb],bl
  41edf4:	mov    eax,0xe0ade285
  41edf9:	add    esp,DWORD PTR [edx+eiz*8-0x52d4fdf7]
  41ee00:	fs cld 
  41ee02:	data16 sbb al,0x70
  41ee05:	adc    edx,DWORD PTR [edx-0xf]
  41ee08:	xor    BYTE PTR [edx],dl
  41ee0a:	push   cs
  41ee0b:	mov    edx,0xeb97
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	and    eax,0x11bb3943
  41ee23:	imul   eax,DWORD PTR [ecx],0x4f400
  41ee29:	add    BYTE PTR [ebx],cl
  41ee2b:	dec    esi
  41ee2c:	ja     0x41ee2c
  41ee2e:	es cli 
  41ee30:	loope  0x41ee6c
  41ee32:	xchg   ebx,eax
  41ee33:	xor    DWORD PTR es:[edx],eax
  41ee36:	ins    DWORD PTR es:[edi],dx
  41ee37:	push   esi
  41ee38:	jae    0x41edfb
  41ee3a:	sbb    DWORD PTR [ecx+0x28],ecx
  41ee3d:	lods   eax,DWORD PTR ds:[esi]
  41ee3e:	call   0x6d23dce1
  41ee43:	pop    eax
  41ee44:	(bad)  
  41ee45:	(bad)  [ebx]
  41ee47:	jb     0x41eea7
  41ee49:	xchg   edi,eax
  41ee4a:	mov    dl,0xf7
  41ee4c:	add    al,0x4
  41ee4e:	xlat   BYTE PTR ds:[ebx]
  41ee4f:	pushf  
  41ee50:	cmp    BYTE PTR [ebx-0x66e17a3a],cl
  41ee56:	sub    eax,0xbc3d534f
  41ee5b:	push   edi
  41ee5c:	sbb    cl,BYTE PTR [ecx+0x73]
  41ee5f:	sub    eax,0xfe96ff3d
  41ee64:	xlat   BYTE PTR ds:[ebx]
  41ee65:	test   BYTE PTR [ebx+0x1d9b5fab],cl
  41ee6b:	sub    bl,BYTE PTR [edi+ebp*4+0x5f6f22f4]
  41ee72:	int    0x4e
  41ee74:	and    DWORD PTR [ebp+0x12a9767e],eax
  41ee7a:	jne    0x41eebb
  41ee7c:	mov    BYTE PTR [edi+ebx*8],al
  41ee7f:	imul   esi,ebp,0xffffffa0
  41ee82:	adc    bl,BYTE PTR [esi+0x5045959f]
  41ee88:	fild   WORD PTR [esi-0x1510c32b]
  41ee8e:	retf   
  41ee8f:	das    
  41ee90:	loopne 0x41ef11
  41ee92:	mov    WORD PTR [ecx],cs
  41ee94:	out    dx,al
  41ee95:	into   
  41ee96:	jg     0x41ee4a
  41ee98:	int    0xcf
  41ee9a:	lods   eax,DWORD PTR ss:[esi]
  41ee9c:	call   0x49ad:0x5b8c82bb
  41eea3:	in     al,dx
  41eea4:	inc    ebx
  41eea5:	jns    0x41eecd
  41eea7:	adc    dl,BYTE PTR [eax]
  41eea9:	sbb    DWORD PTR [ebx-0xb],ebx
  41eeac:	add    al,0xd0
  41eeae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb0:	adc    al,0x22
  41eeb2:	jno    0x41ef2f
  41eeb4:	arpl   WORD PTR [eax],cx
  41eeb6:	mov    esi,0xc96b10af
  41eebb:	outs   dx,BYTE PTR ds:[esi]
  41eebc:	mov    ds:0xaf15087b,eax
  41eec1:	xor    eax,0xc4670bb0
  41eec6:	and    edi,DWORD PTR [esi-0x51]
  41eec9:	cmc    
  41eeca:	jp     0x41eea4
  41eecc:	add    eax,0xf0d85d79
  41eed1:	mov    esi,0x6e8ccd06
  41eed6:	fidivr DWORD PTR [ebx-0x79]
  41eed9:	out    0x2,al
  41eedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eedc:	psubq  mm2,QWORD PTR [esi]
  41eedf:	sub    DWORD PTR [ebx+0x68],ebx
  41eee2:	not    ebx
  41eee4:	das    
  41eee5:	dec    eax
  41eee6:	cdq    
  41eee7:	stos   BYTE PTR es:[edi],al
  41eee8:	aas    
  41eee9:	push   ebp
  41eeea:	sbb    DWORD PTR [ebp+0x18],ecx
  41eeed:	es cli 
  41eeef:	pop    eax
  41eef0:	test   eax,0x80b9135a
  41eef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef6:	adc    eax,0x5ed387a9
  41eefb:	lods   eax,DWORD PTR ds:[esi]
  41eefc:	lea    ecx,[edi-0x2a19c42f]
  41ef02:	pop    ds
  41ef03:	shl    dh,cl
  41ef05:	icebp  
  41ef06:	dec    ecx
  41ef07:	outs   dx,BYTE PTR ds:[esi]
  41ef08:	ror    DWORD PTR [ebx],1
  41ef0a:	push   esi
  41ef0b:	lea    ebp,[esi]
  41ef0d:	int    0x45
  41ef0f:	in     eax,0x1a
  41ef11:	out    0xea,al
  41ef13:	jne    0x41ef07
  41ef15:	xchg   esi,eax
  41ef16:	es dec esp
  41ef18:	aam    0x0
  41ef1a:	or     dh,bl
  41ef1c:	mov    esp,0xa4e38dc1
  41ef21:	scas   al,BYTE PTR es:[edi]
  41ef22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef23:	scas   al,BYTE PTR es:[edi]
  41ef24:	add    BYTE PTR [esi+0x38],0x97
  41ef28:	xor    DWORD PTR [ebx],ebx
  41ef2a:	sti    
  41ef2b:	pushf  
  41ef2c:	inc    eax
  41ef2d:	inc    ebp
  41ef2e:	mov    ebp,0x3f14734
  41ef33:	sbb    dh,BYTE PTR [edx+0x3f8fcbe5]
  41ef39:	adc    DWORD PTR [ecx+0x1d],edx
  41ef3c:	push   ebx
  41ef3d:	outs   dx,DWORD PTR ds:[esi]
  41ef3e:	lahf   
  41ef3f:	xor    ebx,eax
  41ef41:	test   al,0xe0
  41ef43:	not    BYTE PTR [ebp+0x4c]
  41ef46:	inc    ebp
  41ef47:	mov    bl,0x8d
  41ef49:	cli    
  41ef4a:	push   0xc9f26d23
  41ef4f:	mov    ah,0xa
  41ef51:	add    DWORD PTR [ebx+0x8],eax
  41ef54:	rcl    BYTE PTR [ecx-0x20ffcf7a],0xec
  41ef5b:	test   al,0x8f
  41ef5d:	pusha  
  41ef5e:	mov    dl,0xec
  41ef60:	push   esi
  41ef61:	mov    esi,0xd6052753
  41ef66:	sahf   
  41ef67:	aam    0x1c
  41ef69:	pop    esi
  41ef6a:	and    BYTE PTR [ebp+0x67],0x5d
  41ef6e:	pop    eax
  41ef70:	mov    DWORD PTR [ebx],eax
  41ef72:	jo     0x41efd0
  41ef74:	xor    bl,bl
  41ef76:	xchg   esi,eax
  41ef77:	add    eax,0x979a8d9f
  41ef7c:	aas    
  41ef7d:	inc    ebx
  41ef7e:	cmc    
  41ef7f:	cmp    al,bh
  41ef81:	out    0x7a,eax
  41ef83:	out    dx,eax
  41ef84:	sbb    DWORD PTR [ebp-0x4],ebx
  41ef87:	mov    esi,0xbdbaf489
  41ef8c:	(bad)  
  41ef8d:	push   esi
  41ef8e:	inc    edi
  41ef8f:	jl     0x41ef9f
  41ef91:	cmova  esi,DWORD PTR [ecx]
  41ef94:	popa   
  41ef95:	adc    eax,0xf1e7b21d
  41ef9a:	outs   dx,BYTE PTR ds:[esi]
  41ef9b:	pop    eax
  41ef9c:	pop    ebp
  41ef9d:	inc    ebp
  41ef9e:	(bad)  
  41ef9f:	jns    0x41efaa
  41efa1:	xchg   BYTE PTR [edx+0x5185134a],al
  41efa7:	fild   QWORD PTR [edx-0x54]
  41efaa:	mov    eax,0x83606218
  41efaf:	ret    0xa390
  41efb2:	xor    edi,DWORD PTR [edi+0x36]
  41efb5:	(bad)  
  41efb6:	aam    0x16
  41efb8:	shl    DWORD PTR [ebp-0x53287e23],0x42
  41efbf:	or     al,0x3e
  41efc1:	scas   eax,DWORD PTR es:[edi]
  41efc2:	sub    BYTE PTR [edx+eax*1],cl
  41efc5:	enter  0xa10f,0xf9
  41efc9:	adc    al,0x8f
  41efcb:	mov    esp,0x8e127e11
  41efd0:	inc    eax
  41efd1:	inc    esi
  41efd2:	pusha  
  41efd3:	aad    0x21
  41efd5:	cmp    ecx,esi
  41efd7:	xor    eax,0x34b57893
  41efdc:	ins    BYTE PTR es:[edi],dx
  41efdd:	stos   DWORD PTR es:[edi],eax
  41efde:	push   ebp
  41efdf:	inc    eax
  41efe0:	inc    edx
  41efe1:	retf   
  41efe2:	sbb    DWORD PTR [eax],0xf3f344c7
  41efe8:	add    eax,0x4099d640
  41efed:	aaa    
  41efee:	sub    eax,0xec6010a1
  41eff3:	push   edx
  41eff4:	xlat   BYTE PTR ds:[ebx]
  41eff5:	mov    al,al
  41eff7:	jmp    0xa405cc6a
  41effc:	sub    esi,DWORD PTR [edx+ebp*4+0x73]
  41f000:	xchg   ecx,eax
  41f001:	fild   QWORD PTR ds:0xe584e10b
  41f007:	pop    es
  41f008:	cwde   
  41f009:	leave  
  41f00a:	jae    0x41f01e
  41f00c:	jo     0x41f06e
  41f00e:	and    al,0x3e
  41f010:	loopne 0x41efe6
  41f012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f013:	xchg   ebp,eax
  41f014:	adc    ecx,DWORD PTR [edi+ebx*4]
  41f017:	sti    
  41f018:	sbb    ch,BYTE PTR [ecx+0x70]
  41f01b:	(bad)  
  41f01c:	mov    edi,0xf0b5019
  41f021:	and    bl,ah
  41f023:	loope  0x41f08d
  41f025:	dec    esp
  41f026:	in     eax,dx
  41f027:	inc    edi
  41f028:	fcmovbe st,st(6)
  41f02a:	push   esp
  41f02b:	adc    al,0x7b
  41f02d:	add    ecx,DWORD PTR [ebx]
  41f02f:	cmp    al,0x40
  41f031:	inc    ebp
  41f032:	jge    0x41f06f
  41f034:	out    0x54,eax
  41f036:	cmp    bl,BYTE PTR ds:0x6f582d17
  41f03c:	jmp    0x6ad9:0x26fa86b6
  41f043:	icebp  
  41f044:	xchg   edx,eax
  41f045:	arpl   di,ax
  41f047:	div    BYTE PTR [ecx]
  41f049:	pop    ecx
  41f04a:	sbb    BYTE PTR [ebp+0x3aa5d43],ah
  41f050:	mov    ds:0xaeb9c75a,al
  41f055:	pop    esp
  41f056:	sub    bl,bl
  41f058:	jns    0x41f0a6
  41f05a:	cmp    BYTE PTR [edi-0x26],bh
  41f05d:	mov    edx,0x79459264
  41f062:	ss int3 
  41f064:	push   eax
  41f065:	xchg   edi,eax
  41f066:	js     0x41f06d
  41f068:	pop    esi
  41f069:	out    dx,al
  41f06a:	mov    dl,0x36
  41f06c:	dec    esi
  41f06d:	loopne 0x41f09d
  41f06f:	sbb    dh,BYTE PTR [esp+ebp*1-0x72b0b00b]
  41f076:	and    esp,ebp
  41f078:	cmp    eax,0xd70aa7a6
  41f07d:	out    0x80,eax
  41f07f:	fs (bad) 
  41f081:	mov    ebp,gs
  41f083:	leave  
  41f084:	ds sbb edx,ebx
  41f087:	add    DWORD PTR [ebx],esp
  41f089:	or     eax,0x79ce6bef
  41f08e:	and    al,0x1d
  41f090:	jne    0x41f086
  41f092:	pop    ebp
  41f093:	cmp    BYTE PTR [edi],dh
  41f095:	dec    ebx
  41f096:	pop    ecx
  41f097:	aam    0x10
  41f099:	dec    ebx
  41f09a:	push   eax
  41f09b:	mov    BYTE PTR [edx],bl
  41f09d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f09f:	jle    0x41f0b7
  41f0a1:	xor    ah,BYTE PTR [esi-0x2acc4833]
  41f0a7:	xor    al,0x54
  41f0a9:	add    ecx,DWORD PTR [eax+0x170d0bfa]
  41f0af:	dec    esi
  41f0b0:	fisttp QWORD PTR [edx-0x12]
  41f0b3:	fisub  WORD PTR [edi]
  41f0b5:	enter  0x8af4,0xad
  41f0b9:	sti    
  41f0ba:	jae    0x41f06b
  41f0bc:	popf   
  41f0bd:	cmp    al,0x4c
  41f0bf:	cld    
  41f0c0:	in     eax,dx
  41f0c1:	pushf  
  41f0c2:	test   DWORD PTR [esp+edx*8-0x37],eax
  41f0c6:	int3   
  41f0c7:	jno    0x41f10e
  41f0c9:	adc    eax,DWORD PTR [edx+0x6911566b]
  41f0cf:	mov    ebx,0xecabf3c6
  41f0d4:	stc    
  41f0d5:	ss mov edi,0x331f57e7
  41f0db:	inc    ebp
  41f0dc:	je     0x41f12e
  41f0de:	mov    DWORD PTR [edi],eax
  41f0e0:	scas   al,BYTE PTR es:[edi]
  41f0e1:	xchg   esp,eax
  41f0e2:	push   0x57
  41f0e4:	jge    0x41f12c
  41f0e6:	push   ecx
  41f0e7:	int3   
  41f0e8:	mov    cl,0x95
  41f0ea:	inc    edi
  41f0eb:	loope  0x41f125
  41f0ed:	rol    DWORD PTR [ebp+0x44],cl
  41f0f0:	stc    
  41f0f1:	pop    esp
  41f0f2:	mov    WORD PTR [esi+0xb],gs
  41f0f5:	call   DWORD PTR [edx+0xb4afcc2]
  41f0fb:	mov    ds:0xb7258124,al
  41f100:	mov    bh,0x1
  41f102:	and    al,0x31
  41f104:	out    0xb0,al
  41f106:	dec    ebx
  41f107:	int3   
  41f108:	retf   
  41f109:	sub    eax,0x2538f452
  41f10e:	adc    al,0x74
  41f110:	push   ecx
  41f111:	pop    ebp
  41f112:	daa    
  41f113:	gs pop ds
  41f115:	(bad)  
  41f116:	mov    bh,0xf2
  41f118:	cld    
  41f119:	jp     0x41f0e3
  41f11b:	mov    al,ds:0x4c3ba07
  41f120:	inc    ebp
  41f121:	icebp  
  41f122:	mov    edi,0xa792b63b
  41f127:	sahf   
  41f128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f129:	sbb    al,BYTE PTR [ebp+esi*4+0x4b3d640a]
  41f130:	shl    BYTE PTR [eax],1
  41f132:	jae    0x41f183
  41f134:	jns    0x41f17f
  41f136:	(bad)  
  41f137:	jmp    0xabb3ee5f
  41f13c:	mov    bl,0xea
  41f13e:	mul    BYTE PTR [edx+0xed76828]
  41f144:	mov    bl,0x14
  41f146:	or     BYTE PTR [esi-0x6f],dl
  41f149:	ret    0x515e
  41f14c:	xor    BYTE PTR [ecx-0x70e0b528],dl
  41f152:	mov    ecx,0xe1d48a94
  41f157:	or     bh,BYTE PTR [ebp*2+0x4f39aca0]
  41f15e:	fstp   TBYTE PTR [ebx-0x37]
  41f161:	test   BYTE PTR [eax],ch
  41f163:	pop    edi
  41f164:	lock sbb BYTE PTR [edi],dh
  41f167:	cmp    DWORD PTR [ecx],ebp
  41f169:	jg     0x41f176
  41f16b:	jae    0x41f13f
  41f16d:	js     0x41f199
  41f16f:	out    0xc4,al
  41f171:	push   esp
  41f172:	pop    ds
  41f173:	rol    DWORD PTR [ecx],0xe0
  41f176:	repz cmp al,0x69
  41f179:	push   cs
  41f17a:	in     al,0x6b
  41f17c:	lods   eax,DWORD PTR ds:[esi]
  41f17d:	pop    eax
  41f17e:	push   ebp
  41f17f:	aas    
  41f180:	pop    eax
  41f181:	jae    0x41f18f
  41f183:	fild   DWORD PTR ds:0x65f4ca1e
  41f189:	mov    dh,0xb3
  41f18b:	mov    edi,0xeb718add
  41f190:	retf   0x69eb
  41f193:	push   ebp
  41f194:	js     0x41f1f6
  41f196:	daa    
  41f197:	aas    
  41f198:	mov    eax,DWORD PTR [eax+0x6f4fee1a]
  41f19e:	push   edx
  41f19f:	dec    edi
  41f1a0:	pushaw 
  41f1a2:	clc    
  41f1a3:	jnp    0x41f14b
  41f1a5:	and    ebp,edx
  41f1a7:	add    DWORD PTR [esi+0x70692dbf],edx
  41f1ad:	sbb    ebp,ebp
  41f1af:	mov    al,0x7
  41f1b1:	(bad)  
  41f1b2:	xlat   BYTE PTR ds:[ebx]
  41f1b3:	outs   dx,DWORD PTR ds:[esi]
  41f1b4:	js     0x41f16b
  41f1b6:	icebp  
  41f1b7:	inc    esp
  41f1b8:	cli    
  41f1b9:	adc    dl,bl
  41f1bb:	adc    al,0xaf
  41f1bd:	(bad)  
  41f1be:	pop    eax
  41f1bf:	sahf   
  41f1c0:	sub    ebp,esp
  41f1c2:	xchg   esi,eax
  41f1c3:	fist   WORD PTR es:[edi]
  41f1c6:	and    al,0x2b
  41f1c8:	adc    BYTE PTR [eax],dl
  41f1ca:	bound  esp,QWORD PTR [eax+eax*1+0x4f]
  41f1ce:	sub    ebx,DWORD PTR [edi]
  41f1d0:	mov    DWORD PTR [edi-0x596b854d],edi
  41f1d6:	mov    dl,al
  41f1d8:	lock out 0xc,eax
  41f1db:	fistp  WORD PTR [edx]
  41f1dd:	rcr    BYTE PTR [ecx+edx*8+0x272af85f],1
  41f1e4:	fwait
  41f1e5:	or     eax,0xf5f97d34
  41f1ea:	call   0x8c96:0x57a51498
  41f1f1:	cmp    eax,0xe898b7aa
  41f1f6:	rcl    al,cl
  41f1f8:	pop    ebp
  41f1f9:	(bad)  
  41f1fa:	in     al,dx
  41f1fb:	mov    edi,0xeda7a119
  41f200:	les    eax,FWORD PTR [edx-0x48e7ab9f]
  41f206:	inc    ebp
  41f207:	or     BYTE PTR [ebp+0x53717f14],ch
  41f20d:	mov    dh,0xfc
  41f20f:	xchg   ecx,eax
  41f210:	xor    eax,0x7e59f337
  41f215:	push   edi
  41f216:	push   0x523f431b
  41f21b:	xchg   edx,eax
  41f21c:	xor    DWORD PTR [eax+0x32],0xe9691e38
  41f223:	and    eax,0x7cbb9125
  41f228:	mov    bl,bl
  41f22a:	mov    cl,0x86
  41f22c:	lods   al,BYTE PTR ds:[esi]
  41f22d:	(bad)  
  41f22e:	scas   eax,DWORD PTR es:[edi]
  41f22f:	scas   eax,DWORD PTR es:[edi]
  41f230:	lahf   
  41f231:	push   ds
  41f232:	push   0x9f1750db
  41f237:	mov    ebx,0xd744539f
  41f23c:	sub    eax,0xb240500a
  41f241:	sbb    ch,BYTE PTR [ebx+eax*8]
  41f244:	mov    ds:0x34bfbb2a,eax
  41f249:	dec    edi
  41f24a:	fstp   QWORD PTR [esi+0x8]
  41f24d:	inc    esi
  41f24e:	sbb    esp,eax
  41f250:	mov    BYTE PTR [ecx-0x24eec332],dl
  41f256:	sub    DWORD PTR [ecx+0x26988e62],esi
  41f25c:	jp     0x41f1f2
  41f25e:	das    
  41f25f:	dec    ecx
  41f260:	adc    bl,bl
  41f262:	and    al,BYTE PTR [eax+0x1f]
  41f265:	fnstenv [edx-0x16]
  41f268:	jmp    0x41f23f
  41f26a:	mov    edi,0x917508ff
  41f26f:	mov    ds:0xba722185,al
  41f274:	popf   
  41f275:	cmp    DWORD PTR [ecx+0x67e2791f],ebx
  41f27b:	repz rcl bh,0x50
  41f27f:	xchg   esi,eax
  41f280:	and    eax,0xd6adff8
  41f285:	sbb    al,0xb9
  41f287:	inc    esi
  41f288:	push   ss
  41f289:	(bad)  
  41f28a:	loopne 0x41f29d
  41f28c:	and    DWORD PTR [ecx+0x5c],0xffffffe6
  41f290:	pushf  
  41f291:	inc    eax
  41f292:	fldcw  WORD PTR [edi]
  41f294:	mov    edx,0xb7eb79c5
  41f299:	bound  edi,QWORD PTR ds:0xcb5bf6fa
  41f29f:	retf   0xa740
  41f2a2:	mov    esp,0x2c1bba2a
  41f2a7:	mov    DWORD PTR [edx],ebp
  41f2a9:	push   eax
  41f2aa:	push   0x48f0d8b3
  41f2af:	rcr    DWORD PTR [edi+0x73],0x92
  41f2b3:	jle    0x41f315
  41f2b5:	outs   dx,DWORD PTR ds:[esi]
  41f2b6:	stos   DWORD PTR es:[edi],eax
  41f2b7:	xor    edx,esi
  41f2b9:	(bad)  
  41f2ba:	fsub   DWORD PTR [esi+0x16]
  41f2bd:	fs enter 0xfb08,0x48
  41f2c2:	inc    eax
  41f2c3:	aaa    
  41f2c4:	ret    
  41f2c5:	jae    0x41f32f
  41f2c7:	pop    ecx
  41f2c8:	jecxz  0x41f313
  41f2ca:	or     al,0xeb
  41f2cc:	imul   ebx,DWORD PTR [esi+ecx*8+0x5],0x47
  41f2d1:	in     eax,dx
  41f2d2:	stc    
  41f2d3:	inc    ebx
  41f2d4:	inc    esi
  41f2d5:	mov    edx,0x729abe3d
  41f2da:	pop    ebx
  41f2db:	sub    DWORD PTR [esi-0x2f0ef0ad],0x68
  41f2e2:	outs   dx,DWORD PTR ds:[esi]
  41f2e3:	(bad)  
  41f2e4:	mov    ds:0x9691252f,eax
  41f2e9:	test   DWORD PTR [ebp-0x32c83b85],esi
  41f2ef:	pushf  
  41f2f0:	fs sub al,0x9e
  41f2f3:	retf   
  41f2f4:	adc    al,0x74
  41f2f6:	xchg   esi,eax
  41f2f7:	stos   DWORD PTR es:[edi],eax
  41f2f8:	adc    bl,BYTE PTR [esi+0x6e]
  41f2fb:	imul   esi,edx,0x801e8e17
  41f301:	in     eax,0x78
  41f303:	sub    DWORD PTR ss:[eax-0x5be6c4f5],0xffffffbf
  41f30b:	jns    0x41f2f6
  41f30d:	stos   BYTE PTR es:[edi],al
  41f30e:	in     eax,0xac
  41f310:	dec    eax
  41f311:	push   ebx
  41f312:	mov    eax,0xc622d0f5
  41f317:	adc    ecx,DWORD PTR [eax]
  41f319:	sbb    DWORD PTR [esi+0x3dc413],ecx
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	add    BYTE PTR [edi+0x58f7a52],0x6e
  41f334:	add    DWORD PTR [eax],eax
  41f336:	hlt    
  41f337:	add    al,0x0
  41f339:	add    dh,cl
  41f33b:	jecxz  0x41f343
  41f33d:	aad    0x3e
  41f33f:	ss cs push 0x4bca1bf8
  41f346:	cs fdivp st(1),st
  41f349:	test   BYTE PTR ds:0xfbcd3543,ch
  41f34f:	sub    eax,DWORD PTR [ecx+0x5b]
  41f352:	xor    al,0xd8
  41f354:	(bad)  
  41f355:	mov    WORD PTR [edi+0x1458953d],gs
  41f35b:	outs   dx,DWORD PTR ds:[esi]
  41f35c:	repz jae 0x41f330
  41f35f:	(bad)
  41f362:	pop    ecx
  41f363:	pop    ss
  41f364:	or     ah,dh
  41f366:	xor    al,0x3e
  41f368:	sbb    al,0xab
  41f36a:	int    0xc
  41f36c:	imul   esp,DWORD PTR [eax],0x15d973de
  41f372:	or     esp,DWORD PTR [edx-0x45fa30a6]
  41f378:	xor    cl,BYTE PTR [esi+0x5bfcce4c]
  41f37e:	xchg   edx,eax
  41f37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f380:	mov    ebp,0x62a3b1e8
  41f385:	inc    ecx
  41f386:	sbb    BYTE PTR [edi-0x71],ch
  41f389:	dec    eax
  41f38a:	in     eax,0xf9
  41f38c:	inc    edx
  41f38d:	pushf  
  41f38e:	bnd jmp 0x41f68ae6
  41f394:	sub    al,0x5a
  41f396:	test   BYTE PTR [eax+0x54051caa],ch
  41f39c:	les    esp,FWORD PTR [edi-0x3962f5c3]
  41f3a2:	mov    ?,ebx
  41f3a4:	ficom  DWORD PTR [esi-0x24]
  41f3a7:	sti    
  41f3a8:	(bad)  
  41f3a9:	inc    esi
  41f3aa:	daa    
  41f3ab:	dec    edx
  41f3ac:	repz push 0xffffffe4
  41f3af:	cdq    
  41f3b0:	xchg   esp,eax
  41f3b1:	lds    esi,FWORD PTR [edx]
  41f3b3:	dec    esp
  41f3b4:	dec    ebp
  41f3b5:	inc    eax
  41f3b6:	cmp    eax,0x751669aa
  41f3bb:	popa   
  41f3bc:	frstor [eax+0x8bf1ec]
  41f3c2:	scas   al,BYTE PTR es:[edi]
  41f3c3:	mov    es:0x24b50c20,al
  41f3c9:	xor    BYTE PTR [ecx+esi*2-0x77],bl
  41f3cd:	lds    ecx,FWORD PTR [ecx+0x3f901b12]
  41f3d3:	test   BYTE PTR [edi],ch
  41f3d5:	sti    
  41f3d6:	mov    dh,0xb7
  41f3d8:	push   ss
  41f3d9:	cmp    eax,0x9e5126ec
  41f3de:	xchg   DWORD PTR [ebp-0x74ffdedd],edi
  41f3e4:	or     bl,BYTE PTR [ebp-0x4b]
  41f3e7:	add    DWORD PTR ds:0x19ef349a,edx
  41f3ed:	fist   WORD PTR ss:[esi+0x1d]
  41f3f1:	add    al,0x95
  41f3f3:	dec    ebp
  41f3f4:	rol    dl,cl
  41f3f6:	je     0x41f453
  41f3f8:	dec    ecx
  41f3f9:	stc    
  41f3fa:	mov    DWORD PTR [eax+esi*2],0x61ec0077
  41f401:	cwde   
  41f402:	test   esi,esp
  41f404:	aam    0xc6
  41f406:	test   eax,0x5f584351
  41f40b:	xchg   BYTE PTR [bp+di+0x59],ah
  41f40f:	cmp    eax,0xf937ee6c
  41f414:	mov    ch,BYTE PTR [ebp-0x68a566e1]
  41f41a:	fsubrp st(5),st
  41f41c:	and    ch,BYTE PTR [ecx+ecx*4-0x747940df]
  41f423:	jo     0x41f445
  41f425:	push   ebx
  41f426:	out    dx,eax
  41f427:	retf   0x5029
  41f42a:	cmc    
  41f42b:	pop    ds
  41f42c:	aad    0x91
  41f42e:	add    BYTE PTR [eax],bl
  41f430:	aam    0xb8
  41f432:	push   edi
  41f433:	out    0x12,eax
  41f435:	and    al,0x36
  41f437:	sbb    edx,DWORD PTR [ebp-0xcb68607]
  41f43d:	dec    edi
  41f43e:	adc    bh,0xc5
  41f441:	idiv   DWORD PTR [edx+0x6d]
  41f444:	test   BYTE PTR [edi+0xd],0x35
  41f448:	sbb    bl,BYTE PTR [eax+0xaed3c7c]
  41f44e:	cmp    eax,DWORD PTR [edi+0x25a0c27b]
  41f454:	cld    
  41f455:	dec    edx
  41f456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f457:	push   esi
  41f458:	lods   eax,DWORD PTR ds:[esi]
  41f459:	mov    edi,edi
  41f45b:	popa   
  41f45c:	je     0x41f402
  41f45e:	into   
  41f45f:	fcom   st(7)
  41f461:	(bad)  
  41f462:	mov    ah,0x2f
  41f464:	or     eax,0xe828a892
  41f469:	int    0xad
  41f46b:	add    BYTE PTR [ecx-0x6f469702],dl
  41f471:	jle    0x41f4be
  41f473:	clc    
  41f474:	(bad)  
  41f476:	es je  0x41f4be
  41f479:	arpl   WORD PTR [ebx+0x68],si
  41f47c:	cs js  0x41f499
  41f47f:	jecxz  0x41f47c
  41f481:	jb     0x41f4ab
  41f483:	and    DWORD PTR [eax-0x11],ebx
  41f486:	mov    esp,0x33006de8
  41f48b:	mov    BYTE PTR [edi-0x590e45e4],bl
  41f491:	sbb    esi,ebx
  41f493:	sub    bl,0x33
  41f496:	sbb    ch,al
  41f498:	ficom  WORD PTR [esi+0x6a5827a9]
  41f49e:	stos   DWORD PTR es:[edi],eax
  41f49f:	cmp    BYTE PTR [edi+0x62d3bd2e],cl
  41f4a5:	imul   ecx,DWORD PTR [eax-0x24f7a58],0x73
  41f4ac:	sar    DWORD PTR [esi+0x487460d5],1
  41f4b2:	out    0x1a,al
  41f4b4:	xchg   edx,eax
  41f4b5:	mov    ebp,DWORD PTR [esi]
  41f4b7:	jbe    0x41f4dd
  41f4b9:	outs   dx,BYTE PTR ds:[esi]
  41f4ba:	in     eax,dx
  41f4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4bc:	imul   edx,esi,0xffffffe0
  41f4bf:	repz inc esp
  41f4c1:	dec    esp
  41f4c2:	inc    eax
  41f4c3:	retf   0xe9fe
  41f4c6:	fs and eax,ebp
  41f4c9:	xchg   edx,eax
  41f4ca:	int    0x16
  41f4cc:	inc    edx
  41f4cd:	and    bl,BYTE PTR [ecx]
  41f4cf:	ins    BYTE PTR es:[edi],dx
  41f4d0:	ret    
  41f4d1:	aam    0xbb
  41f4d3:	add    eax,0x67b41aac
  41f4d8:	sbb    BYTE PTR [edi+0x2b06a051],bl
  41f4de:	jl     0x41f49c
  41f4e0:	iret   
  41f4e1:	in     eax,dx
  41f4e2:	or     edx,edi
  41f4e4:	fld    TBYTE PTR [ecx-0x484e963b]
  41f4ea:	fs add dh,ah
  41f4ed:	in     al,0x84
  41f4ef:	inc    ebp
  41f4f0:	stos   BYTE PTR es:[edi],al
  41f4f1:	mov    esp,0xd519ddd7
  41f4f6:	fisttp QWORD PTR [edx]
  41f4f8:	call   FWORD PTR [esi+0x62c550ef]
  41f4fe:	push   esp
  41f4ff:	add    BYTE PTR [edx],al
  41f501:	adc    al,0xbc
  41f503:	push   eax
  41f504:	sbb    BYTE PTR [esi-0x1fb34d3d],bh
  41f50a:	pop    ebx
  41f50b:	retf   
  41f50c:	mov    dl,0x5
  41f50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50f:	sbb    ebx,0xd0257ab0
  41f515:	cli    
  41f516:	jecxz  0x41f4d2
  41f518:	outs   dx,DWORD PTR ds:[esi]
  41f519:	add    DWORD PTR ds:0x9bb9f248,ebp
  41f51f:	pop    ds
  41f520:	dec    ecx
  41f521:	test   DWORD PTR [esp+edi*2+0x3307a247],esi
  41f528:	fdivr  QWORD PTR [edi-0x61fe3f18]
  41f52e:	mov    esi,0xf44610e9
  41f533:	enter  0xb0d7,0xaa
  41f537:	cmp    bl,dl
  41f539:	mov    ah,0x7e
  41f53b:	cld    
  41f53c:	fisub  WORD PTR [edx-0x6c]
  41f53f:	sub    dl,BYTE PTR [edi]
  41f541:	jp     0x41f5c0
  41f543:	dec    edx
  41f544:	sti    
  41f545:	xchg   ebx,eax
  41f546:	aam    0x61
  41f548:	push   0x68
  41f54a:	mov    ds:0x5e1c49,al
  41f54f:	fnstsw WORD PTR [ecx-0x18]
  41f552:	xchg   edx,eax
  41f553:	fisttp WORD PTR [edi-0x4674bce1]
  41f559:	test   eax,0x83dfb1f
  41f55e:	scas   al,BYTE PTR es:[di]
  41f560:	xor    eax,0x812e9910
  41f565:	into   
  41f566:	gs mov ch,0xa6
  41f569:	pop    ss
  41f56a:	pop    esi
  41f56b:	pop    ecx
  41f56c:	sbb    ch,bl
  41f56e:	inc    ecx
  41f56f:	and    dh,0xe
  41f572:	jmp    0x41f511
  41f574:	in     al,0x94
  41f576:	inc    esi
  41f577:	jnp    0x41f5dc
  41f579:	add    dl,BYTE PTR [ebp-0x60]
  41f57c:	loopne 0x41f56a
  41f57e:	xor    ebx,esi
  41f580:	xchg   edi,eax
  41f581:	dec    ebp
  41f582:	cmp    ebp,edi
  41f584:	push   esi
  41f585:	inc    edx
  41f586:	jo     0x41f559
  41f588:	hlt    
  41f589:	(bad)  
  41f58a:	test   BYTE PTR [ebp+0x44],0xda
  41f58e:	int3   
  41f58f:	adc    BYTE PTR [edx-0x4d],0x69
  41f593:	xchg   ebp,eax
  41f594:	int3   
  41f595:	outs   dx,BYTE PTR ds:[esi]
  41f596:	adc    eax,edi
  41f598:	and    al,0x8b
  41f59a:	es jbe 0x41f5fe
  41f59d:	sti    
  41f59e:	mov    dl,0xba
  41f5a0:	dec    esp
  41f5a1:	in     al,0xe6
  41f5a3:	test   al,0x78
  41f5a5:	into   
  41f5a6:	aaa    
  41f5a7:	test   al,0xf3
  41f5a9:	sub    al,BYTE PTR [ebx-0x64cebaf4]
  41f5af:	fisub  WORD PTR [edx-0x255e0f3]
  41f5b5:	xlat   BYTE PTR ds:[ebx]
  41f5b6:	pusha  
  41f5b7:	not    BYTE PTR [edi]
  41f5b9:	pop    ebx
  41f5ba:	cld    
  41f5bb:	fnsave [esi+0x34c193dc]
  41f5c1:	add    eax,eax
  41f5c3:	scas   eax,DWORD PTR es:[edi]
  41f5c4:	je     0x41f557
  41f5c6:	add    bl,dl
  41f5c8:	jne    0x41f5da
  41f5ca:	leave  
  41f5cb:	mov    edx,0x96e08956
  41f5d0:	add    eax,eax
  41f5d2:	stos   DWORD PTR es:[edi],eax
  41f5d3:	pop    edi
  41f5d4:	(bad)  
  41f5d5:	hlt    
  41f5d6:	mov    bl,0x29
  41f5d8:	xor    esp,DWORD PTR [edx-0x23832d51]
  41f5de:	fadd   DWORD PTR [ebp-0x58]
  41f5e1:	adc    al,0xb
  41f5e3:	mov    ecx,0x3ea8ba2b
  41f5e8:	out    dx,al
  41f5e9:	push   0x547fe8e0
  41f5ee:	mov    ecx,0xc8a95ff1
  41f5f3:	inc    eax
  41f5f4:	cmp    DWORD PTR [ebx],ebp
  41f5f6:	and    eax,0x15ff2ba1
  41f5fb:	pop    ecx
  41f5fc:	pop    es
  41f5fd:	sbb    ch,ah
  41f5ff:	pop    eax
  41f600:	or     BYTE PTR gs:[esp+ebx*1-0x80],dh
  41f605:	xchg   esp,eax
  41f606:	test   BYTE PTR ds:0xe9fb39c0,bl
  41f60c:	scas   eax,DWORD PTR es:[edi]
  41f60d:	dec    ecx
  41f60e:	js     0x41f61c
  41f610:	adc    eax,0x730d4d69
  41f615:	dec    ebp
  41f616:	fst    DWORD PTR [ebx-0x7aee5808]
  41f61c:	mov    ebp,?
  41f61e:	retf   0x3e7b
  41f621:	jl     0x41f5c3
  41f623:	les    esp,FWORD PTR [ebx]
  41f625:	test   DWORD PTR [edi-0x53acda8d],edi
  41f62b:	jge    0x41f637
  41f62d:	ret    0x45ba
  41f630:	(bad)  
  41f632:	jecxz  0x41f682
  41f634:	fidiv  DWORD PTR [esi]
  41f636:	add    edx,edi
  41f638:	dec    esp
  41f639:	fldcw  WORD PTR [edi+ebx*8+0xd]
  41f63d:	icebp  
  41f63e:	and    DWORD PTR [edi],0xf9733e1d
  41f644:	xor    edx,DWORD PTR ds:0xed8232ad
  41f64a:	and    DWORD PTR [ebx+0x2cce20d6],esp
  41f650:	xchg   edx,eax
  41f651:	(bad)  
  41f652:	sbb    al,0xf
  41f654:	mov    ah,0x3b
  41f656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f657:	push   ds
  41f658:	jle    0x41f5ef
  41f65a:	mov    eax,ds:0xd6871e1a
  41f65f:	jmp    0x41f6db
  41f661:	mov    dl,0x42
  41f663:	ins    BYTE PTR es:[edi],dx
  41f664:	push   edi
  41f665:	sbb    al,bh
  41f667:	pop    ds
  41f668:	xchg   edi,eax
  41f669:	cmp    ebp,ecx
  41f66b:	xor    DWORD PTR [ecx+0x4d1f4ca6],edi
  41f671:	xor    BYTE PTR [ebx],ah
  41f673:	xchg   edx,eax
  41f674:	cmp    ch,bh
  41f676:	and    BYTE PTR [ebp-0x780f838a],dl
  41f67c:	rcl    BYTE PTR [ecx*1+0x39a494a3],0xea
  41f684:	sbb    DWORD PTR [ecx-0x43],esp
  41f687:	jne    0x41f6b6
  41f689:	imul   ecx,ebp,0x156d636
  41f68f:	dec    ebp
  41f690:	cmc    
  41f691:	lods   al,BYTE PTR ds:[esi]
  41f692:	push   ebx
  41f693:	out    0xee,eax
  41f695:	inc    esp
  41f696:	xchg   edi,eax
  41f697:	pop    ecx
  41f698:	lods   eax,DWORD PTR ds:[esi]
  41f699:	pop    ebp
  41f69a:	jns    0x41f626
  41f69c:	inc    esi
  41f69d:	imul   ebx,DWORD PTR [eax+eax*2+0x1185624b],0xc46b5d4a
  41f6a8:	mov    ds:0x1a0f9d19,al
  41f6ad:	(bad)  
  41f6ae:	mov    dh,0x9e
  41f6b0:	and    eax,ebp
  41f6b2:	cld    
  41f6b3:	mov    bh,0xe9
  41f6b5:	cmp    eax,0xc28d0549
  41f6ba:	enter  0x308f,0xbd
  41f6be:	mov    ?,WORD PTR [edi+0x16]
  41f6c1:	sbb    BYTE PTR [esi],bl
  41f6c3:	push   ss
  41f6c4:	rol    DWORD PTR ds:[edx+0x3945bc25],1
  41f6cb:	cmp    eax,esi
  41f6cd:	mul    BYTE PTR [esi]
  41f6cf:	nop
  41f6d0:	ret    0xa0ec
  41f6d3:	ss scas al,BYTE PTR es:[edi]
  41f6d5:	inc    edx
  41f6d6:	dec    eax
  41f6d7:	adc    eax,0xf870ba88
  41f6dc:	(bad)  
  41f6de:	adc    al,0x37
  41f6e0:	sbb    edi,0x0
  41f6e3:	(bad)  
  41f6e4:	vpaddd ymm1,ymm5,YMMWORD PTR [edi-0x3f3420ec]
  41f6ec:	xor    al,0x8
  41f6ee:	leave  
  41f6ef:	mov    ss,ecx
  41f6f1:	dec    eax
  41f6f2:	pop    esp
  41f6f3:	mov    ds,ecx
  41f6f5:	fistp  WORD PTR [esi+ebp*1-0x4cfe6441]
  41f6fc:	and    cl,cl
  41f6fe:	int    0xf9
  41f700:	fisub  DWORD PTR [ebp+0x1f]
  41f703:	loope  0x41f699
  41f705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f706:	adc    esp,DWORD PTR [ecx+0x40d79519]
  41f70c:	inc    edi
  41f70d:	adc    esp,esi
  41f70f:	push   es
  41f710:	fs loop 0x41f6c0
  41f713:	dec    esi
  41f714:	dec    edx
  41f715:	in     eax,0x5b
  41f717:	mov    eax,0xe4c0c986
  41f71c:	mov    edi,0x877db961
  41f721:	fisttp DWORD PTR [edx]
  41f723:	stos   DWORD PTR es:[edi],eax
  41f724:	fs mov ebp,0xbdb6e669
  41f72a:	repz xor ecx,DWORD PTR [esi-0x23]
  41f72e:	cmp    eax,0x75a4b5e8
  41f733:	cs hlt 
  41f735:	in     eax,dx
  41f736:	stos   DWORD PTR es:[edi],eax
  41f737:	ret    0xdf71
  41f73a:	mov    edi,0x948f5159
  41f73f:	out    dx,eax
  41f740:	jae    0x41f70f
  41f742:	repnz sbb ah,BYTE PTR [ecx-0x29]
  41f746:	and    ebp,DWORD PTR [edi-0x6a]
  41f749:	in     al,dx
  41f74a:	xor    dh,dl
  41f74c:	or     ebp,ecx
  41f74e:	and    DWORD PTR [eax-0x7609a22a],ecx
  41f754:	ficomp DWORD PTR ds:0x91c55817
  41f75a:	sub    BYTE PTR [ebx],dh
  41f75c:	je     0x41f79c
  41f75e:	pop    ecx
  41f75f:	lods   al,BYTE PTR ds:[esi]
  41f760:	add    eax,0x6c5e2115
  41f765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f766:	cs mov esp,ebx
  41f769:	es jmp 0xcad8f352
  41f76f:	cmp    ebx,edi
  41f771:	jecxz  0x41f7dc
  41f773:	xchg   ebp,eax
  41f774:	fcomp  DWORD PTR [ecx-0x485c179a]
  41f77a:	scas   al,BYTE PTR es:[edi]
  41f77b:	daa    
  41f77c:	cwde   
  41f77d:	sbb    DWORD PTR [edx-0x2a7dfbc6],ecx
  41f783:	add    al,0xd0
  41f785:	xlat   BYTE PTR ds:[ebx]
  41f786:	inc    esi
  41f787:	ss jae 0x41f7f4
  41f78a:	sub    al,0xf2
  41f78c:	mov    eax,ds:0xfeb327b2
  41f791:	mov    ?,esp
  41f793:	stos   BYTE PTR es:[edi],al
  41f794:	dec    edi
  41f795:	and    dl,cl
  41f797:	cmp    eax,0x1d100b90
  41f79c:	cmp    ebx,0x45
  41f79f:	test   al,0x2e
  41f7a1:	add    bh,BYTE PTR [edx-0x3c0037b4]
  41f7a7:	retf   
  41f7a8:	out    dx,eax
  41f7a9:	imul   esi,DWORD PTR [ebx],0xffffffc3
  41f7ac:	xchg   edi,eax
  41f7ad:	ficomp DWORD PTR [edx+0x76]
  41f7b0:	repz push eax
  41f7b2:	call   0x1edbfaee
  41f7b7:	lock pushf 
  41f7b9:	(bad)  
  41f7ba:	aam    0x27
  41f7bc:	xchg   esp,eax
  41f7bd:	call   0xbb97518a
  41f7c2:	mov    ebx,0xfcff53bc
  41f7c7:	xor    dh,BYTE PTR [edi+0x6c]
  41f7ca:	pop    ss
  41f7cb:	icebp  
  41f7cc:	rcr    DWORD PTR [eax+0x2b],0xa8
  41f7d0:	lock xchg ebx,eax
  41f7d2:	scas   eax,DWORD PTR es:[edi]
  41f7d3:	mov    eax,0x58343804
  41f7d8:	loopne 0x41f82f
  41f7da:	out    dx,eax
  41f7db:	ficom  DWORD PTR [ebx+0x6a6a75cf]
  41f7e1:	dec    edx
  41f7e2:	(bad)  
  41f7e3:	pop    edi
  41f7e4:	repnz test al,0x38
  41f7e7:	retf   0xa254
  41f7ea:	or     BYTE PTR [eax-0x7889fbe0],cl
  41f7f0:	ret    0x7d5f
  41f7f3:	adc    BYTE PTR ds:0xd7bced47,0xe7
  41f7fa:	iret   
  41f7fb:	and    ah,0xf2
  41f7fe:	add    BYTE PTR [esi-0x646e44ca],al
  41f804:	shl    BYTE PTR [ecx-0x60],0xc4
  41f808:	xchg   ebx,ecx
  41f80a:	jg     0x41f826
  41f80c:	jmp    0xe86eec04
  41f811:	sub    BYTE PTR [ecx+0x1a2ff9bb],ah
  41f817:	inc    esi
  41f818:	in     eax,0xdc
  41f81a:	into   
  41f81b:	cmp    BYTE PTR [ecx+0x17d33d6],cl
  41f821:	fistp  QWORD PTR [edi+0x3b6c1fd2]
  41f827:	dec    edi
  41f828:	(bad)  
  41f829:	cwde   
  41f82a:	scas   eax,DWORD PTR es:[edi]
  41f82b:	ss pop ds
  41f82d:	jne    0x41f82f
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	or     eax,0xf9b0424a
  41f843:	jb     0x41f846
  41f845:	add    ah,dh
  41f847:	add    al,0x0
  41f849:	add    ch,ch
  41f84b:	push   esp
  41f84c:	idiv   BYTE PTR [ecx-0x7b3e9764]
  41f852:	pop    ebx
  41f853:	cld    
  41f854:	pop    edx
  41f855:	jo     0x14d32ec1
  41f85b:	mov    ebx,0x5d1f7db8
  41f860:	dec    edi
  41f861:	cld    
  41f862:	cmp    cl,BYTE PTR [edx+eiz*1-0x70]
  41f866:	repnz fbstp TBYTE PTR [esi-0x433174a1]
  41f86d:	inc    BYTE PTR [edi]
  41f86f:	fisubr WORD PTR [edi]
  41f871:	jge    0x41f876
  41f873:	pop    ss
  41f874:	adc    cl,cl
  41f876:	xchg   edx,eax
  41f877:	xchg   esi,eax
  41f878:	pop    edi
  41f879:	xchg   esi,eax
  41f87a:	fimul  DWORD PTR [eax+edx*2]
  41f87d:	push   ebp
  41f87e:	cmp    eax,0xe30bb85f
  41f883:	sahf   
  41f884:	push   ebx
  41f885:	pop    ds
  41f886:	dec    edi
  41f887:	xor    dh,BYTE PTR [ebp+0x10]
  41f88a:	dec    eax
  41f88b:	xchg   ebp,eax
  41f88c:	jns    0x41f812
  41f88e:	test   eax,0xefd8b00e
  41f893:	jecxz  0x41f85f
  41f895:	out    0x2b,eax
  41f897:	adc    esi,DWORD PTR [esi-0x4dd30ebe]
  41f89d:	add    al,0x57
  41f89f:	and    ch,BYTE PTR [esi]
  41f8a1:	pop    es
  41f8a2:	loope  0x41f915
  41f8a4:	clc    
  41f8a5:	lds    esp,FWORD PTR [edi]
  41f8a7:	hlt    
  41f8a8:	sbb    eax,0x9ba86b58
  41f8ad:	mov    edi,0x7b46b723
  41f8b2:	and    al,0x57
  41f8b4:	push   esp
  41f8b5:	gs jno 0x41f860
  41f8b8:	and    DWORD PTR [ebx-0x74],ecx
  41f8bb:	jne    0x41f930
  41f8bd:	adc    al,0xe9
  41f8bf:	sahf   
  41f8c0:	pop    ss
  41f8c1:	les    ebx,FWORD PTR [ecx]
  41f8c3:	in     al,0x8d
  41f8c5:	jmp    0x3701:0x14205935
  41f8cc:	push   ds
  41f8cd:	dec    eax
  41f8ce:	push   es
  41f8cf:	int    0xe1
  41f8d1:	sbb    al,0x96
  41f8d3:	mov    al,ds:0x65d0597
  41f8d8:	mov    ebp,0xc59cad98
  41f8dd:	mov    ebx,0xa899f72
  41f8e2:	ror    edi,1
  41f8e4:	test   al,0xe0
  41f8e6:	sbb    eax,0x68527c6
  41f8eb:	rcl    BYTE PTR [ebx],0xb8
  41f8ee:	sbb    eax,0xaa06eceb
  41f8f3:	mov    esi,0xb90eb4a6
  41f8f8:	lea    esi,[edi+ebp*8-0x4b]
  41f8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8fd:	fnsave [ecx-0x4540e876]
  41f903:	inc    ebp
  41f904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f905:	cmp    ebp,esi
  41f907:	add    eax,edi
  41f909:	loope  0x41f8f1
  41f90b:	lahf   
  41f90c:	inc    esp
  41f90d:	or     eax,0x72407747
  41f912:	pushf  
  41f913:	aad    0x20
  41f915:	(bad)  
  41f916:	mov    ds:0x2521665,al
  41f91b:	pop    ds
  41f91c:	mov    edx,0xbc68f776
  41f921:	or     edi,0x3b
  41f924:	jge    0x41f96c
  41f926:	push   esi
  41f927:	sub    esp,edx
  41f929:	mov    ch,0x96
  41f92b:	sar    BYTE PTR [edx],cl
  41f92d:	hlt    
  41f92e:	(bad)  [edi+0x4df8e5d7]
  41f934:	pop    esp
  41f935:	sbb    dh,BYTE PTR [eax+edx*8]
  41f938:	mov    al,0x2f
  41f93a:	loop   0x41f8f1
  41f93c:	iret   
  41f93d:	mov    ecx,0x333a496d
  41f942:	mov    edx,0x319247fe
  41f947:	and    eax,0x4188cfc7
  41f94c:	push   eax
  41f94d:	inc    ebp
  41f94e:	(bad)  
  41f94f:	xor    eax,0xe7809097
  41f954:	(bad)  
  41f955:	iret   
  41f956:	inc    eax
  41f957:	ret    
  41f958:	(bad)  [edx+0x4a]
  41f95b:	loope  0x41f964
  41f95d:	dec    edi
  41f95e:	(bad)  
  41f95f:	ja     0x41f905
  41f961:	xchg   DWORD PTR [ecx],ecx
  41f963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f964:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41f966:	iret   
  41f967:	sub    eax,0x1fc8a02
  41f96c:	inc    ebp
  41f96d:	mov    dh,0xed
  41f96f:	ja     0x41f8fe
  41f971:	jae    0x41f9ee
  41f973:	xchg   ebx,eax
  41f974:	mov    ds:0xa54beafa,al
  41f979:	icebp  
  41f97a:	(bad)  
  41f97c:	or     ebp,DWORD PTR [ecx-0x1a]
  41f97f:	inc    esp
  41f980:	js     0x41f92a
  41f982:	jg     0x41f982
  41f984:	mov    ss,WORD PTR [edx+0x4bdbda11]
  41f98a:	xchg   edi,eax
  41f98b:	rcr    DWORD PTR [edx+0x66a37ab2],0x5c
  41f992:	mov    ds:0xc15ae755,al
  41f997:	lea    eax,[ecx+0x3b65c601]
  41f99d:	xchg   ecx,eax
  41f99e:	mov    bh,0x28
  41f9a0:	xchg   ebp,eax
  41f9a1:	dec    BYTE PTR [ecx]
  41f9a3:	in     al,0xc
  41f9a5:	test   al,0x87
  41f9a7:	imul   ebp,DWORD PTR [edx+0x1d],0xf1ba19d9
  41f9ae:	jns    0x41f9e0
  41f9b0:	out    0xcb,eax
  41f9b2:	int3   
  41f9b3:	(bad)  
  41f9b5:	xchg   edi,eax
  41f9b6:	or     DWORD PTR [ebp+esi*8-0x70],esp
  41f9ba:	outs   dx,DWORD PTR ds:[esi]
  41f9bb:	adc    eax,0x250f51fd
  41f9c0:	xchg   DWORD PTR [edx+0x38],ecx
  41f9c3:	sbb    edx,eax
  41f9c5:	lods   eax,DWORD PTR ds:[esi]
  41f9c6:	cwde   
  41f9c7:	xor    eax,0x69604119
  41f9cc:	mov    WORD PTR [eax],ss
  41f9ce:	mov    ebx,0xfa47cf22
  41f9d3:	js     0x41f962
  41f9d5:	aam    0x80
  41f9d7:	mov    eax,ds:0x569e2be0
  41f9dc:	add    DWORD PTR [edx-0x4c],ecx
  41f9df:	int    0xc0
  41f9e1:	mov    edx,0x4faf246f
  41f9e6:	fadd   st(2),st
  41f9e8:	fist   DWORD PTR [edi+ecx*4+0x4c]
  41f9ec:	(bad)  
  41f9ed:	sbb    ebp,DWORD PTR gs:[edi-0xe5ba576]
  41f9f4:	test   DWORD PTR [ebx-0x6c8f13bf],ecx
  41f9fa:	jmp    0xb8a64a34
  41f9ff:	cmp    eax,0xad075cb
  41fa04:	mov    ecx,0x8eab367
  41fa09:	adc    DWORD PTR [ebp-0x20],0xffffffea
  41fa0d:	mov    edx,0x94e5e76f
  41fa12:	push   eax
  41fa13:	xor    al,0xa1
  41fa15:	outs   dx,BYTE PTR ds:[esi]
  41fa16:	jo     0x41f9d0
  41fa18:	cmc    
  41fa19:	xchg   edi,eax
  41fa1a:	neg    BYTE PTR [edx+0x4db1df51]
  41fa20:	mov    ds:0x767ce2f5,eax
  41fa25:	test   DWORD PTR [edi-0x1e],ecx
  41fa28:	ficom  DWORD PTR [esi-0x63]
  41fa2b:	retf   
  41fa2c:	xor    dh,0x68
  41fa2f:	or     DWORD PTR [ebx-0x62],esi
  41fa32:	jmp    0x41faa0
  41fa34:	shr    BYTE PTR [eax+0x3e],cl
  41fa37:	call   0xd3d6c4ce
  41fa3c:	and    BYTE PTR [edi+0x65b47791],dh
  41fa42:	mov    ?,WORD PTR [esi]
  41fa44:	mov    ds:0xae76f141,al
  41fa49:	je     0x41f9e8
  41fa4b:	stos   DWORD PTR es:[edi],eax
  41fa4c:	jmp    0xc25d:0x3ef04522
  41fa53:	pop    ss
  41fa54:	push   0xf
  41fa56:	inc    ebx
  41fa57:	mul    BYTE PTR [eax]
  41fa59:	(bad)  
  41fa5a:	not    DWORD PTR [ecx-0x65fb076b]
  41fa60:	nop
  41fa61:	mov    WORD PTR [ecx-0x5349fe1f],ss
  41fa67:	iret   
  41fa68:	scas   al,BYTE PTR es:[edi]
  41fa69:	aad    0xac
  41fa6b:	jmp    0xd052:0x56d49491
  41fa72:	out    dx,al
  41fa73:	add    ebx,0x4826d2fb
  41fa79:	add    BYTE PTR [edx+0x2e],ch
  41fa7c:	mov    WORD PTR [eax],?
  41fa7e:	call   0xac749430
  41fa83:	push   ds
  41fa84:	push   ebx
  41fa85:	inc    esi
  41fa86:	and    DWORD PTR [eax-0x27476a08],0xffffffc3
  41fa8d:	(bad)  
  41fa8e:	xor    dh,BYTE PTR [esi]
  41fa90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa91:	inc    esp
  41fa92:	sbb    cl,BYTE PTR [ecx+ebx*4]
  41fa95:	out    dx,al
  41fa96:	stos   BYTE PTR es:[edi],al
  41fa97:	aas    
  41fa98:	jge    0x41fab8
  41fa9a:	mov    cl,0xea
  41fa9c:	jp     0x41fac1
  41fa9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa9f:	jae    0x41fab2
  41faa1:	jmp    0x41faca
  41faa3:	outs   dx,DWORD PTR ds:[esi]
  41faa4:	inc    ebp
  41faa5:	(bad)
  41faa8:	sbb    ch,al
  41faaa:	lahf   
  41faab:	ret    
  41faac:	push   ecx
  41faad:	mov    dh,0x4b
  41faaf:	popf   
  41fab0:	addr16 ss mov bl,cl
  41fab4:	sbb    edi,esp
  41fab6:	gs pop edx
  41fab8:	and    dh,ch
  41faba:	cli    
  41fabb:	nop
  41fabc:	aaa    
  41fabd:	and    al,0xf1
  41fabf:	out    dx,eax
  41fac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac1:	popa   
  41fac2:	pusha  
  41fac3:	(bad)  
  41fac4:	mov    ebp,0x214592c0
  41fac9:	inc    esp
  41faca:	out    dx,al
  41facb:	or     BYTE PTR [ebx+0x37],bl
  41face:	mov    edi,0x67bc7f3d
  41fad3:	mov    dl,0x2f
  41fad5:	fdecstp 
  41fad7:	fsub   QWORD PTR [eax+ecx*2+0x42]
  41fadb:	dec    eax
  41fadc:	lods   eax,DWORD PTR ds:[esi]
  41fadd:	mov    dl,0xa0
  41fadf:	fs inc edi
  41fae1:	int    0xba
  41fae3:	sbb    al,0xcf
  41fae5:	or     ch,ah
  41fae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fae8:	mov    bh,0x21
  41faea:	loopne 0x41faf0
  41faec:	adc    BYTE PTR [edi],dh
  41faee:	dec    edi
  41faef:	pushf  
  41faf0:	nop
  41faf1:	xchg   edi,eax
  41faf2:	mov    cl,0x21
  41faf4:	xor    edx,esp
  41faf6:	sbb    eax,0x4da57da0
  41fafb:	pop    edx
  41fafc:	je     0x41faa3
  41fafe:	cdq    
  41faff:	xchg   esp,eax
  41fb00:	shr    edi,cl
  41fb02:	adc    cl,BYTE PTR [ebx-0x3e]
  41fb05:	dec    bl
  41fb07:	neg    BYTE PTR [ebp-0x30226fde]
  41fb0d:	fwait
  41fb0e:	sbb    bl,BYTE PTR [eax-0x4d8be78a]
  41fb14:	jl     0x41fb23
  41fb16:	out    0x9d,al
  41fb18:	inc    esp
  41fb19:	or     eax,0x7f233742
  41fb1e:	adc    eax,0xd9545d8
  41fb23:	ins    BYTE PTR es:[edi],dx
  41fb24:	repz xlat BYTE PTR ds:[ebx]
  41fb26:	fidiv  WORD PTR [ebx+eiz*8]
  41fb29:	push   esi
  41fb2a:	in     eax,dx
  41fb2b:	jnp    0x41fae0
  41fb2d:	jmp    0x7ff8c1bf
  41fb32:	jbe    0x41fb6e
  41fb34:	dec    ecx
  41fb35:	mov    esi,DWORD PTR [esi]
  41fb37:	and    edi,ecx
  41fb39:	mov    al,ds:0x41d53883
  41fb3e:	inc    esp
  41fb3f:	inc    esp
  41fb40:	ds call 0xf234296a
  41fb46:	stos   BYTE PTR es:[edi],al
  41fb47:	dec    ebx
  41fb48:	jg     0x41fbbe
  41fb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb4b:	loopne 0x41fbad
  41fb4d:	test   BYTE PTR [esi],cl
  41fb4f:	xchg   edi,eax
  41fb50:	clc    
  41fb51:	or     esi,DWORD PTR [ecx-0x62]
  41fb54:	cmp    BYTE PTR [ecx+0x40],dl
  41fb57:	shr    DWORD PTR [ebp+0x7d],cl
  41fb5a:	xchg   edx,eax
  41fb5b:	rcl    DWORD PTR [ebp+ecx*1-0x2bb2a643],cl
  41fb62:	jl     0x41fb25
  41fb64:	aam    0x4e
  41fb66:	repnz stc 
  41fb68:	add    DWORD PTR [ebp-0x27],esp
  41fb6b:	aad    0xf1
  41fb6d:	fidivr DWORD PTR [eax+0x43]
  41fb70:	pop    ebx
  41fb71:	mov    DWORD PTR [eax+0x3],ebx
  41fb74:	(bad)  
  41fb75:	xor    eax,0x7ad5670f
  41fb7a:	iret   
  41fb7b:	jg     0x41fb30
  41fb7d:	push   esp
  41fb7e:	popf   
  41fb7f:	aam    0x35
  41fb81:	int3   
  41fb82:	xchg   ebx,eax
  41fb83:	aas    
  41fb84:	cli    
  41fb85:	test   al,0x31
  41fb87:	or     BYTE PTR [ecx-0x34],dh
  41fb8a:	pop    eax
  41fb8b:	jmp    DWORD PTR [ecx-0x3d]
  41fb8e:	icebp  
  41fb8f:	aad    0x90
  41fb91:	ficom  DWORD PTR [edi+0x2f]
  41fb94:	push   ecx
  41fb95:	mov    esi,0x361cd83d
  41fb9a:	sbb    DWORD PTR [esi-0x51e38aae],eax
  41fba0:	iret   
  41fba1:	xchg   ebx,eax
  41fba2:	sub    ch,cl
  41fba4:	in     eax,0x7b
  41fba6:	xchg   edx,eax
  41fba7:	into   
  41fba8:	mov    edx,0x29d53cd4
  41fbad:	shl    DWORD PTR [esi-0x6],cl
  41fbb0:	and    BYTE PTR [ebx+0x52],bl
  41fbb3:	xchg   ebp,eax
  41fbb4:	xchg   edx,eax
  41fbb5:	adc    eax,0x48effed3
  41fbba:	fiadd  WORD PTR [edx]
  41fbbc:	shl    BYTE PTR [ebp-0x1e],0x1e
  41fbc0:	aad    0xb4
  41fbc2:	fcmovu st,st(6)
  41fbc4:	dec    eax
  41fbc5:	dec    esp
  41fbc6:	mov    edx,0x9cbedcdf
  41fbcb:	jae    0x41fb61
  41fbcd:	inc    ebp
  41fbce:	cld    
  41fbcf:	mov    ebp,edi
  41fbd1:	adc    eax,0xd60557d0
  41fbd6:	cli    
  41fbd7:	aad    0x25
  41fbd9:	xor    ch,BYTE PTR [edi+0x6397d354]
  41fbdf:	cmp    eax,0xb9c49305
  41fbe4:	pop    ss
  41fbe5:	push   ds
  41fbe6:	js     0x41fbcd
  41fbe8:	xchg   edx,eax
  41fbe9:	pop    ecx
  41fbea:	sbb    BYTE PTR [ecx-0x24ccb38b],al
  41fbf0:	js     0x41fc71
  41fbf2:	or     eax,0x3fa40391
  41fbf7:	loop   0x41fc76
  41fbf9:	adc    BYTE PTR [edi],0x7b
  41fbfc:	clc    
  41fbfd:	jg     0x41fb9e
  41fbff:	dec    esp
  41fc00:	out    dx,eax
  41fc01:	in     eax,dx
  41fc02:	inc    edx
  41fc03:	setg   BYTE PTR [eax-0x7d]
  41fc07:	ret    0x69fe
  41fc0a:	jp     0x41fc2b
  41fc0c:	data16 mov bh,0x59
  41fc0f:	dec    edi
  41fc10:	mov    bh,0x88
  41fc12:	js     0x41fb9e
  41fc14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc15:	fwait
  41fc16:	xor    DWORD PTR [eax-0x3c6692da],ebp
  41fc1c:	bound  ecx,QWORD PTR [ebx]
  41fc1e:	push   edi
  41fc1f:	mov    eax,0xc9d32ce
  41fc24:	call   0x3e656385
  41fc29:	out    0x64,eax
  41fc2b:	sub    dl,BYTE PTR [edx-0x6d]
  41fc2e:	sub    BYTE PTR [ecx-0x38],ch
  41fc31:	xor    eax,0xa2250b1f
  41fc36:	dec    esi
  41fc37:	mov    ebp,0xc8c018ca
  41fc3c:	and    ah,dl
  41fc3e:	or     dh,BYTE PTR [edi]
  41fc40:	inc    edi
  41fc41:	dec    ebp
  41fc42:	call   0xae2:0x1f9e4bc0
  41fc49:	cwde   
  41fc4a:	loope  0x41fc8d
  41fc4c:	dec    ebx
  41fc4d:	add    ebp,edx
  41fc4f:	adc    bh,BYTE PTR [eax]
  41fc51:	fsqrt  
  41fc53:	mov    ebx,0x1844d20
  41fc58:	out    0x28,al
  41fc5a:	dec    BYTE PTR cs:[ebx+0x719bf410]
  41fc61:	cmp    dh,al
  41fc63:	xchg   esp,eax
  41fc64:	popa   
  41fc65:	(bad)  
  41fc66:	lods   al,BYTE PTR ds:[esi]
  41fc67:	xchg   esp,eax
  41fc68:	lock fimul WORD PTR [ecx-0x76]
  41fc6c:	xchg   edx,eax
  41fc6d:	cli    
  41fc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc6f:	ja     0x41fce0
  41fc71:	fucom  st(1)
  41fc73:	pop    ds
  41fc74:	sub    DWORD PTR [ebx-0x291f5fc],edi
  41fc7a:	pop    esp
  41fc7b:	pop    ds
  41fc7c:	or     ah,BYTE PTR [esi]
  41fc7e:	aad    0xba
  41fc80:	xchg   esp,eax
  41fc81:	xchg   edi,eax
  41fc82:	push   eax
  41fc83:	sti    
  41fc84:	into   
  41fc85:	add    esi,esi
  41fc87:	sub    dl,BYTE PTR [edx-0x1]
  41fc8a:	data16 jge 0x41fcf5
  41fc8d:	xor    DWORD PTR [ebx-0x6ff1370],esi
  41fc93:	xor    BYTE PTR [esi],bl
  41fc95:	js     0x41fc54
  41fc97:	inc    ebx
  41fc98:	popa   
  41fc99:	(bad)  
  41fc9a:	jmp    0x712d:0x2a632da7
  41fca1:	repz popa 
  41fca3:	addr16 iret 
  41fca5:	jno    0x41fd0c
  41fca7:	out    0xff,eax
  41fca9:	pushf  
  41fcaa:	xor    eax,0x8f4b3961
  41fcaf:	test   BYTE PTR [edx+0xb],dl
  41fcb2:	mov    dh,0x7d
  41fcb4:	xchg   ebp,eax
  41fcb5:	loop   0x41fc82
  41fcb7:	sbb    BYTE PTR [esi+0x26e10d77],cl
  41fcbd:	push   cs
  41fcbe:	scas   eax,DWORD PTR es:[edi]
  41fcbf:	mov    ebp,0xc932fc75
  41fcc4:	sub    dl,BYTE PTR ds:0x48a257f
  41fcca:	and    esp,DWORD PTR [ecx]
  41fccc:	dec    edi
  41fccd:	jmp    0x90e4:0xcda7c0d5
  41fcd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd5:	xchg   esp,eax
  41fcd6:	call   0xb3f8:0x7157c5a6
  41fcdd:	scas   eax,DWORD PTR es:[edi]
  41fcde:	xor    eax,0xed9002
  41fce3:	mov    WORD PTR [esp+eiz*8],?
  41fce6:	test   al,0x3d
  41fce8:	dec    ebx
  41fce9:	out    dx,al
  41fcea:	mov    ds:0xa3c6bba7,al
  41fcef:	call   0x430d:0xf0779dce
  41fcf6:	push   esi
  41fcf7:	xchg   edx,eax
  41fcf8:	jg     0x41fced
  41fcfa:	iret   
  41fcfb:	mov    eax,DWORD PTR [esi]
  41fcfd:	lock pop edi
  41fcff:	cmc    
  41fd00:	dec    edx
  41fd01:	pop    esp
  41fd02:	jle    0x41fd13
  41fd04:	and    esi,DWORD PTR [edx]
  41fd06:	aaa    
  41fd07:	or     eax,esp
  41fd09:	cmp    bh,BYTE PTR [ebx]
  41fd0b:	mov    bl,0xaf
  41fd0d:	inc    edi
  41fd0e:	mov    esp,0xbcd9fdde
  41fd13:	aad    0xac
  41fd15:	sub    bh,al
  41fd17:	or     al,0x12
  41fd19:	jge    0x41fd3d
  41fd1b:	mov    ebp,0x4568a592
  41fd20:	add    BYTE PTR ds:0x5e0e500f,dl
  41fd26:	push   ebx
  41fd27:	mov    esi,0x9627d2d5
  41fd2c:	mov    cl,bl
  41fd2e:	pop    ebx
  41fd2f:	sbb    ecx,DWORD PTR [edx-0x521c55fd]
  41fd35:	inc    esi
  41fd36:	loop   0x41fdb3
  41fd38:	push   cs
  41fd39:	pop    ebx
  41fd3a:	ror    DWORD PTR [ecx+0x2630],cl
  41fd40:	add    BYTE PTR [eax],al
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x18f01024],dh
  41fd51:	paddsw mm6,QWORD PTR [edi+0x1]
  41fd55:	add    ah,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [ebx],bh
  41fd5b:	mov    al,ds:0x5deef0f8
  41fd60:	jmp    0x41fcfe
  41fd62:	xor    eax,0xf0e0f334
  41fd67:	push   ss
  41fd68:	or     al,0xb7
  41fd6a:	std    
  41fd6b:	popf   
  41fd6c:	fnsave [ebp-0x1f6517b]
  41fd72:	jne    0x41fda5
  41fd74:	das    
  41fd75:	pop    ebp
  41fd76:	aad    0x64
  41fd78:	es stos BYTE PTR es:[edi],al
  41fd7a:	xchg   edx,eax
  41fd7b:	sub    esp,eax
  41fd7d:	inc    esp
  41fd7e:	adc    al,0xfe
  41fd80:	ds pop es
  41fd82:	sti    
  41fd83:	scas   eax,DWORD PTR es:[edi]
  41fd84:	outs   dx,BYTE PTR gs:[esi]
  41fd86:	jb     0x41fd8f
  41fd88:	mov    esi,esp
  41fd8a:	sbb    ch,BYTE PTR [edi+eax*1+0x70f21b02]
  41fd91:	xlat   BYTE PTR ds:[ebx]
  41fd92:	out    dx,al
  41fd93:	mov    eax,ds:0x573bb4d9
  41fd98:	popa   
  41fd99:	pop    ds
  41fd9a:	arpl   WORD PTR [ebp-0x2e],bp
  41fd9d:	jns    0x41fe13
  41fd9f:	xor    eax,0x2c031631
  41fda4:	jmp    0xce35495b
  41fda9:	test   BYTE PTR [eax+0x1b4bf032],al
  41fdaf:	mov    bl,0xd1
  41fdb1:	xor    BYTE PTR [esp+ecx*8],0x1e
  41fdb5:	jno    0x41fdc2
  41fdb7:	add    BYTE PTR [edi-0x4c107b5a],0x9d
  41fdbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdbf:	ins    BYTE PTR es:[edi],dx
  41fdc0:	jmp    DWORD PTR [eax+0x1edae40a]
  41fdc6:	in     al,dx
  41fdc7:	sbb    eax,0x9d5cf111
  41fdcc:	les    edx,FWORD PTR [esp+edx*1]
  41fdcf:	mov    bl,ch
  41fdd1:	test   BYTE PTR [ebp-0x484e043e],al
  41fdd7:	xlat   BYTE PTR ds:[ebx]
  41fdd8:	jbe    0x41fe58
  41fdda:	fstp   DWORD PTR [ebx+0x4c717bb3]
  41fde0:	add    al,0xfd
  41fde2:	mov    ss,WORD PTR [eax+0x36978309]
  41fde8:	hlt    
  41fde9:	dec    esp
  41fdea:	ficom  WORD PTR ds:0x762ed54a
  41fdf0:	mov    bl,0xf8
  41fdf2:	sub    eax,0xab898a6d
  41fdf7:	mov    eax,0x4a84ed24
  41fdfc:	outs   dx,BYTE PTR ds:[esi]
  41fdfd:	inc    edi
  41fdfe:	call   0xc11e:0xa371122b
  41fe05:	adc    eax,0xe61a192e
  41fe0a:	mov    eax,0x36e797c6
  41fe0f:	(bad)  [edx+0x66]
  41fe12:	loope  0x41fe60
  41fe14:	scas   eax,DWORD PTR es:[edi]
  41fe15:	ret    
  41fe16:	pop    eax
  41fe17:	in     eax,dx
  41fe18:	stc    
  41fe19:	dec    ebx
  41fe1a:	push   es
  41fe1b:	in     eax,dx
  41fe1c:	(bad)
  41fe1f:	jle    0x41fe81
  41fe21:	mov    ebx,0x7fdba104
  41fe26:	mov    al,0xce
  41fe28:	xlat   BYTE PTR ds:[ebx]
  41fe29:	xchg   ebx,eax
  41fe2a:	in     eax,dx
  41fe2b:	jae    0x41fdf1
  41fe2d:	cwde   
  41fe2e:	inc    ebx
  41fe2f:	in     eax,0xd7
  41fe31:	test   al,0x13
  41fe33:	push   ebp
  41fe34:	xor    DWORD PTR [esi-0x74],ecx
  41fe37:	dec    eax
  41fe38:	por    mm4,QWORD PTR [ecx]
  41fe3b:	ss cld 
  41fe3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe3e:	(bad)  
  41fe3f:	call   0xe78ca4e6
  41fe44:	shr    BYTE PTR [esp+edx*8],1
  41fe47:	push   edi
  41fe48:	repz cmp eax,DWORD PTR ds:0x7e6af995
  41fe4f:	sub    BYTE PTR [esi+0x2c],dh
  41fe52:	xchg   esp,eax
  41fe53:	iret   
  41fe54:	repz fidiv WORD PTR [ebp+0x47]
  41fe58:	lods   eax,DWORD PTR ds:[esi]
  41fe59:	sbb    BYTE PTR [edi+0x6a66ae7a],dh
  41fe5f:	pusha  
  41fe60:	lods   eax,DWORD PTR ds:[esi]
  41fe61:	add    al,0x3a
  41fe63:	sbb    ebp,0xffffffe9
  41fe66:	pop    edi
  41fe67:	or     ecx,DWORD PTR [ecx-0x33]
  41fe6a:	inc    edx
  41fe6b:	js     0x41febc
  41fe6d:	jnp    0x41fe9a
  41fe6f:	pop    ecx
  41fe70:	add    ecx,DWORD PTR [edi-0x1907155]
  41fe76:	fwait
  41fe77:	stos   DWORD PTR es:[edi],eax
  41fe78:	leave  
  41fe79:	xchg   ebx,eax
  41fe7a:	sbb    dh,0x8d
  41fe7d:	mov    ebp,0xc534eb0c
  41fe82:	inc    edi
  41fe83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe84:	pop    esp
  41fe85:	xor    cl,0x16
  41fe88:	push   edi
  41fe89:	stos   DWORD PTR es:[edi],eax
  41fe8a:	mov    cs,ecx
  41fe8c:	mov    ebp,0xde951fcf
  41fe91:	adc    eax,0xbadd88b0
  41fe96:	push   ss
  41fe97:	arpl   cx,si
  41fe99:	outs   dx,BYTE PTR ds:[esi]
  41fe9a:	js     0x41fe9d
  41fe9c:	mov    al,ds:0xe4582b52
  41fea1:	xor    esi,DWORD PTR [ebp+0x65b8b43f]
  41fea7:	int    0x14
  41fea9:	pop    ss
  41feaa:	sbb    ebp,esi
  41feac:	mov    al,0x3b
  41feae:	rcl    BYTE PTR [ecx+0x47],0x8e
  41feb2:	jnp    0x41fe5f
  41feb4:	(bad)  
  41feb5:	or     ebp,ecx
  41feb7:	mov    al,0x76
  41feb9:	adc    al,0xd9
  41febb:	clc    
  41febc:	inc    esi
  41febd:	jbe    0x41fed1
  41febf:	inc    esi
  41fec0:	push   es
  41fec1:	fisub  DWORD PTR [edx-0x26]
  41fec4:	sbb    bl,BYTE PTR [ecx+0x4a108fc5]
  41feca:	fcomp  st(1)
  41fecc:	fwait
  41fecd:	mov    DWORD PTR [eax+0x15],ebx
  41fed0:	call   0xb91fe52e
  41fed5:	(bad)  
  41fed6:	xchg   esi,eax
  41fed7:	xchg   BYTE PTR [edx+0x68],bh
  41feda:	(bad)  
  41fedb:	cmp    ebx,DWORD PTR [esi-0x1]
  41fede:	repz pop eax
  41fee0:	sbb    eax,0x186a1abb
  41fee5:	xor    bl,bl
  41fee7:	das    
  41fee8:	mov    ebx,0xdcdd47ad
  41feed:	repz add al,0x4b
  41fef0:	js     0x41ff57
  41fef2:	fs pop ecx
  41fef4:	push   es
  41fef5:	pop    ecx
  41fef6:	mov    edx,0x60742bd6
  41fefb:	mov    esp,0x4e86afd7
  41ff00:	mov    edi,0x2934768
  41ff05:	jecxz  0x41fec5
  41ff07:	imul   edx,DWORD PTR [eax+0xe],0xe
  41ff0b:	dec    esp
  41ff0c:	xor    eax,0x6470ebf0
  41ff11:	in     eax,dx
  41ff12:	jmp    0x41ff57
  41ff14:	stos   DWORD PTR es:[edi],eax
  41ff15:	pushf  
  41ff16:	push   ebp
  41ff17:	pusha  
  41ff18:	inc    ebp
  41ff19:	ror    BYTE PTR [eax+0x3d3eb5fb],cl
  41ff1f:	mov    esp,0xd7b45b8c
  41ff24:	or     ebx,DWORD PTR [esi-0x7b]
  41ff27:	pop    eax
  41ff28:	call   0x750:0x32baddf2
  41ff2f:	xor    al,0xcf
  41ff31:	int3   
  41ff32:	mov    ch,0xb4
  41ff34:	sbb    ebx,DWORD PTR [ecx-0x495f5446]
  41ff3a:	mov    bh,0x85
  41ff3c:	mov    esp,0xcf9b545e
  41ff41:	push   DWORD PTR [edi+0x51]
  41ff44:	stos   BYTE PTR es:[edi],al
  41ff45:	aaa    
  41ff46:	mov    edx,0x765fe825
  41ff4b:	cmp    al,BYTE PTR [eax+ecx*2]
  41ff4e:	jmp    WORD PTR [ebp-0x62]
  41ff52:	sub    BYTE PTR [ecx-0x598c6d9d],dh
  41ff58:	inc    eax
  41ff59:	jmp    0x9f3bb89a
  41ff5e:	pop    edi
  41ff5f:	push   esp
  41ff60:	mov    ecx,0x82d59044
  41ff65:	or     al,al
  41ff67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff68:	dec    esi
  41ff69:	adc    ebp,DWORD PTR [esi+0xee2ef23]
  41ff6f:	jge    0x41ff00
  41ff71:	push   ss
  41ff72:	outs   dx,DWORD PTR ds:[esi]
  41ff73:	dec    edi
  41ff74:	rcr    dh,0xb9
  41ff77:	jne    0x41ff21
  41ff79:	sbb    dh,BYTE PTR [eax]
  41ff7b:	mov    ?,WORD PTR [eax]
  41ff7d:	sub    eax,DWORD PTR [ebx]
  41ff7f:	fimul  WORD PTR [ebp-0x56c80220]
  41ff85:	pop    esp
  41ff86:	xchg   ebx,eax
  41ff87:	push   ebx
  41ff88:	and    al,0xa4
  41ff8a:	cmc    
  41ff8b:	jmp    0xe007:0x47dcd4f5
  41ff92:	std    
  41ff93:	push   ds
  41ff94:	mov    fs,WORD PTR [ebx]
  41ff96:	adc    eax,DWORD PTR [esi+0x477e133e]
  41ff9c:	out    0xc,al
  41ff9e:	and    DWORD PTR [esi-0x7a],eax
  41ffa1:	mov    al,0xfe
  41ffa3:	dec    edx
  41ffa4:	bound  eax,QWORD PTR [eax+eax*4-0x60]
  41ffa8:	test   DWORD PTR [ecx+0x6a5701fd],edi
  41ffae:	or     DWORD PTR [eax+0x4d354700],0x28
  41ffb5:	jle    0x41ff42
  41ffb7:	dec    eax
  41ffb8:	ja     0x41ff5c
  41ffba:	stos   DWORD PTR es:[edi],eax
  41ffbb:	out    dx,eax
  41ffbc:	add    BYTE PTR [ecx+0x6a],dl
  41ffbf:	aaa    
  41ffc0:	xlat   BYTE PTR ds:[ebx]
  41ffc1:	push   ds
  41ffc2:	(bad)  
  41ffc3:	into   
  41ffc4:	xchg   ebp,eax
  41ffc5:	iret   
  41ffc6:	repz and DWORD PTR [edi],0xc
  41ffca:	xlat   BYTE PTR fs:[ebx]
  41ffcc:	mov    ecx,0x51092b9c
  41ffd1:	cmp    bl,BYTE PTR [ecx-0x7728aa3f]
  41ffd7:	push   ss
  41ffd8:	jo     0x41ffdf
  41ffda:	repnz fwait
  41ffdc:	aas    
  41ffdd:	mov    ds:0x30dfdd48,al
  41ffe2:	jne    0x42003e
  41ffe4:	lods   eax,DWORD PTR ds:[esi]
  41ffe5:	mov    al,ds:0x7092a082
  41ffea:	jbe    0x420005
  41ffec:	or     DWORD PTR [ecx+esi*8+0x69726677],edx
  41fff3:	add    al,0x4d
  41fff5:	cmp    edi,ebp
  41fff7:	add    al,bl
  41fff9:	mov    ds:0x4f9f0501,eax
  41fffe:	pop    esp
  41ffff:	mov    ch,0xf8
  420001:	in     al,dx
  420002:	mov    esp,0x30a9c62c
  420007:	das    
  420008:	bound  ecx,QWORD PTR [edx-0x105305a6]
  42000e:	ins    DWORD PTR es:[edi],dx
  42000f:	mov    edi,0xfdea2ae1
  420015:	xchg   ebp,eax
  420016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420017:	jle    0x42004d
  420019:	xchg   DWORD PTR [esi],eax
  42001b:	fwait
  42001c:	xlat   BYTE PTR ds:[ebx]
  42001d:	shl    BYTE PTR [edi],0x57
  420020:	sar    DWORD PTR [ecx+0x3b7a4ba1],cl
  420026:	add    ecx,DWORD PTR [ebx+0x5e]
  420029:	js     0x420091
  42002b:	lods   eax,DWORD PTR ds:[esi]
  42002c:	enter  0x74c8,0xce
  420030:	mov    eax,ds:0xf8d00176
  420035:	lahf   
  420036:	push   edi
  420037:	lea    eax,[ebp-0x18c7a1de]
  42003d:	outs   dx,DWORD PTR ds:[esi]
  42003e:	loop   0x42002e
  420040:	mov    ebp,0x10797d30
  420045:	stos   BYTE PTR es:[edi],al
  420046:	xlat   BYTE PTR ds:[ebx]
  420047:	imul   ebp,DWORD PTR [ebp-0x30a82816],0x20
  42004e:	clc    
  42004f:	clc    
  420050:	dec    edi
  420051:	and    ebp,DWORD PTR [edi-0x62]
  420054:	fwait
  420055:	push   ss
  420056:	es ud1 ecx,DWORD PTR gs:[eax-0x61]
  42005c:	adc    eax,0xc1900ca5
  420061:	aad    0x77
  420063:	or     ebp,ebp
  420065:	test   DWORD PTR [eax-0x60b5f737],eax
  42006b:	(bad)  
  42006c:	pusha  
  42006d:	sbb    bl,0xab
  420070:	inc    ecx
  420071:	fstp   st(4)
  420073:	repnz push ss
  420075:	data16 add dl,BYTE PTR [ebx-0x45]
  420079:	inc    ebp
  42007a:	push   ss
  42007b:	into   
  42007c:	and    al,0x4
  42007e:	(bad)  
  420080:	xchg   esi,eax
  420081:	pop    es
  420082:	lahf   
  420083:	nop
  420084:	pop    ds
  420085:	sbb    bh,bl
  420087:	mov    cl,0xaa
  420089:	xor    DWORD PTR [edx+ecx*2-0xdaff59f],edi
  420090:	inc    eax
  420091:	fisubr DWORD PTR [ebp-0x2129431f]
  420097:	pop    esp
  420098:	sub    dh,cl
  42009a:	or     eax,0x687990d4
  42009f:	es jl  0x4200da
  4200a2:	pusha  
  4200a3:	jmp    DWORD PTR [edi-0x3a]
  4200a6:	inc    esp
  4200a7:	cmp    ch,BYTE PTR [ebp+0x77a3c6e]
  4200ad:	rcr    eax,1
  4200af:	mov    es,WORD PTR [eax-0x66aa7de6]
  4200b5:	mov    bh,0xc7
  4200b7:	or     edi,esi
  4200b9:	mov    ds:0x81b86f06,al
  4200be:	cmp    al,0xe4
  4200c0:	xor    cl,BYTE PTR [ecx-0x7c2d2d61]
  4200c6:	mov    cl,0xfd
  4200c8:	test   DWORD PTR [eax-0x15d7d0a],0x3abaa771
  4200d2:	fmul   DWORD PTR [ebp-0x79]
  4200d5:	out    0x81,eax
  4200d7:	dec    esi
  4200d8:	sbb    BYTE PTR [ecx],dh
  4200da:	cmp    ebx,eax
  4200dc:	and    al,ch
  4200de:	dec    ebx
  4200df:	inc    ebx
  4200e0:	in     eax,dx
  4200e1:	dec    eax
  4200e2:	and    eax,0x3d983959
  4200e7:	lods   al,BYTE PTR ds:[esi]
  4200e8:	int    0x77
  4200ea:	jge    0x4200e7
  4200ec:	fld    TBYTE PTR ds:0x498eca46
  4200f2:	(bad)  
  4200f3:	dec    eax
  4200f4:	xlat   BYTE PTR ds:[ebx]
  4200f5:	call   0xd339:0xcfa153e8
  4200fc:	jmp    0x35bb:0x61b95489
  420103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420104:	je     0x420128
  420106:	mov    bh,0xb8
  420108:	adc    eax,0x52e899c
  42010d:	push   ebp
  42010e:	xor    DWORD PTR [ecx-0x77],ebp
  420111:	outs   dx,BYTE PTR ds:[esi]
  420112:	push   esi
  420113:	xchg   ebx,eax
  420114:	fdiv   QWORD PTR [esi-0x713b3fff]
  42011a:	push   es
  42011b:	push   edi
  42011c:	cmp    eax,DWORD PTR [edi+0x30340c42]
  420122:	jne    0x42019c
  420124:	jle    0x420107
  420126:	nop
  420127:	cmp    cl,BYTE PTR ds:0x67ab0a8
  42012d:	es popaw 
  420130:	cwde   
  420131:	dec    edi
  420132:	mov    ecx,0xed782626
  420137:	mov    dl,BYTE PTR [esi-0x1554a6eb]
  42013d:	add    al,0x17
  42013f:	mov    dl,0x2a
  420141:	imul   ebp,ebx,0x5742a3d9
  420147:	inc    edi
  420148:	leave  
  420149:	push   ecx
  42014a:	scas   eax,DWORD PTR es:[edi]
  42014b:	mov    esi,0xf194adb5
  420150:	neg    bh
  420152:	ins    DWORD PTR es:[edi],dx
  420153:	dec    ecx
  420154:	push   edx
  420155:	rcl    BYTE PTR [esi-0x45],cl
  420158:	cmp    BYTE PTR [eax+0x35],ch
  42015b:	aam    0x54
  42015d:	cwde   
  42015e:	and    ebp,DWORD PTR [ebx+edi*1+0x1d2a510e]
  420165:	push   cs
  420166:	repz lds esi,FWORD PTR [eax+0x1e]
  42016a:	(bad)  
  42016b:	fcom   DWORD PTR [ecx]
  42016d:	and    dh,BYTE PTR [ebx]
  42016f:	jno    0x4201b9
  420171:	push   edi
  420172:	adc    al,0xca
  420174:	mov    ch,0x94
  420176:	popaw  
  420178:	popa   
  420179:	(bad)  
  42017a:	cs push ebx
  42017c:	call   0xcb6e669f
  420181:	loopne 0x42015e
  420183:	ret    0x4b2f
  420186:	pop    esi
  420187:	jb     0x4201e4
  420189:	add    al,0xc4
  42018b:	call   ebx
  42018d:	add    al,0x65
  42018f:	aas    
  420190:	mov    dh,0x83
  420192:	sbb    BYTE PTR [edi],dh
  420194:	retf   
  420195:	and    eax,0x2b15d9c6
  42019a:	(bad)  
  42019b:	pop    ecx
  42019c:	pop    ebp
  42019d:	xchg   esi,eax
  42019e:	lahf   
  42019f:	inc    ebp
  4201a0:	pushf  
  4201a1:	daa    
  4201a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a3:	sbb    bh,bh
  4201a5:	pop    ebx
  4201a6:	jmp    0x106b20ee
  4201ab:	dec    edx
  4201ac:	push   edi
  4201ad:	out    0xfa,eax
  4201af:	les    esp,FWORD PTR fs:[edx+0x59]
  4201b3:	out    dx,al
  4201b4:	sbb    DWORD PTR [ebx+0x7908a746],0x7a
  4201bb:	inc    eax
  4201bc:	mov    ds:0x671da245,al
  4201c1:	inc    edi
  4201c2:	add    esi,DWORD PTR [edx-0x406b0fe7]
  4201c8:	mov    cl,0x5a
  4201ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201cb:	ins    DWORD PTR es:[edi],dx
  4201cc:	add    bl,BYTE PTR [eax-0x5a6d5b1e]
  4201d2:	test   eax,0xb6f5ffcd
  4201d7:	fadd   st,st(5)
  4201d9:	mov    ds:0xd193fa60,al
  4201de:	or     DWORD PTR [edi-0x6c],edx
  4201e1:	cdq    
  4201e2:	das    
  4201e3:	(bad)  
  4201e4:	iret   
  4201e5:	fisubr DWORD PTR [edx-0x74]
  4201e8:	xor    dl,BYTE PTR [edx]
  4201ea:	xor    edi,DWORD PTR [eax+0xc986e59]
  4201f0:	loop   0x4201be
  4201f2:	jae    0x42026e
  4201f4:	cmc    
  4201f5:	bound  edx,QWORD PTR [ebx+0x1452a102]
  4201fb:	cmp    edi,esp
  4201fd:	mov    WORD PTR [edx+0x36],?
  420200:	cmp    eax,0xe64c0fa8
  420205:	xor    DWORD PTR [eax+ebx*8],ecx
  420208:	dec    ecx
  420209:	and    DWORD PTR [ecx-0x5a],esi
  42020c:	cmp    BYTE PTR [ebp-0x40],0xd0
  420210:	fwait
  420211:	rcl    al,cl
  420213:	lods   eax,DWORD PTR ds:[esi]
  420214:	scas   eax,DWORD PTR es:[edi]
  420215:	and    eax,0x62c5311d
  42021a:	pop    DWORD PTR [edi+0xf638f0f]
  420220:	and    al,0xa4
  420222:	xchg   esp,eax
  420223:	cmp    al,0xe6
  420225:	retf   
  420226:	pushf  
  420227:	mov    esi,DWORD PTR [eax+0x16442b93]
  42022d:	mov    ebx,0x3f35a59a
  420232:	mov    edx,0x3ebbb97c
  420237:	(bad)  
  420238:	shr    DWORD PTR [edi+ebx*8+0x48],cl
  42023c:	test   DWORD PTR [edi],ebp
  42023e:	sbb    BYTE PTR [ebx],dh
  420240:	sbb    esi,DWORD PTR [eax]
  420242:	addr16 jnp 0x420217
  420245:	lock add dl,BYTE PTR [edx-0x3abe14f5]
  42024c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42024d:	sahf   
  42024e:	add    BYTE PTR [eax],al
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ebx+ebx*8],ch
  420260:	int    0x7
  420262:	loope  0x4202e0
  420264:	add    DWORD PTR [eax],eax
  420266:	hlt    
  420267:	add    al,0x0
  420269:	add    BYTE PTR [eax],dh
  42026b:	aas    
  42026c:	cmp    DWORD PTR [ebx],edx
  42026e:	mov    DWORD PTR [edx-0xf],eax
  420271:	add    ebp,DWORD PTR [esi+0x5084c1ee]
  420277:	outs   dx,BYTE PTR cs:[esi]
  420279:	jae    0x420272
  42027b:	add    edx,0xffffffe1
  42027e:	adc    bl,bh
  420280:	cmp    al,0x61
  420282:	add    esi,0x76b98399
  420288:	dec    edi
  420289:	xchg   ecx,eax
  42028a:	jecxz  0x4202e5
  42028c:	sub    al,0xe1
  42028e:	or     DWORD PTR [edi-0x26],esp
  420291:	ins    DWORD PTR es:[edi],dx
  420292:	xchg   DWORD PTR [edi],esp
  420294:	push   cs
  420295:	and    DWORD PTR [eax+ebx*8-0x6dd4de85],0xffffff84
  42029d:	fstp   TBYTE PTR [ecx-0x7fd91508]
  4202a3:	inc    eax
  4202a4:	ret    
  4202a5:	(bad)  
  4202a6:	icebp  
  4202a7:	mov    edi,0x8731c7e5
  4202ac:	test   BYTE PTR [ebx-0x61],ch
  4202af:	dec    esp
  4202b0:	xor    dl,ch
  4202b2:	add    ebx,DWORD PTR [edx+0x67]
  4202b5:	outs   dx,DWORD PTR ds:[esi]
  4202b6:	aam    0xb1
  4202b8:	(bad)  
  4202b9:	pop    ecx
  4202ba:	sbb    DWORD PTR [ebx-0x2c],eax
  4202bd:	cmp    DWORD PTR [ebx+ebx*2-0x30],eax
  4202c1:	stc    
  4202c2:	mov    edi,0x7395ad00
  4202c7:	call   0x5294:0x7be4d720
  4202ce:	in     al,dx
  4202cf:	sub    ebx,DWORD PTR gs:[ebp+0x3dd661eb]
  4202d6:	das    
  4202d7:	dec    edi
  4202d8:	xchg   DWORD PTR [eax+0x346a3167],esp
  4202de:	test   DWORD PTR [ecx-0x1913a29b],ebp
  4202e4:	push   ecx
  4202e5:	inc    ebx
  4202e6:	int    0x49
  4202e8:	xchg   esp,eax
  4202e9:	or     ebx,DWORD PTR [ebx-0x74]
  4202ec:	inc    ebx
  4202ed:	jb     0x42036c
  4202ef:	push   esp
  4202f0:	mov    ecx,0x4c92f0b8
  4202f5:	sar    BYTE PTR [eax+edi*1],0x37
  4202f9:	fmul   st(0),st
  4202fb:	adc    edx,esp
  4202fd:	inc    esi
  4202fe:	pop    ebp
  4202ff:	lods   al,BYTE PTR ds:[esi]
  420300:	xor    al,0x85
  420302:	jbe    0x42028e
  420304:	mov    bl,0xfe
  420306:	mov    ecx,0x82d3b90c
  42030b:	pop    esp
  42030c:	pop    esi
  42030d:	aad    0x48
  42030f:	jg     0x420311
  420311:	xor    eax,0xa91494fc
  420316:	pop    edx
  420317:	mov    ds:0xc0e9643a,eax
  42031c:	pop    ecx
  42031d:	imul   DWORD PTR [ecx]
  42031f:	pop    ds
  420320:	sti    
  420321:	loope  0x420346
  420323:	mov    BYTE PTR [edi+edx*8-0x80],dh
  420327:	push   esi
  420328:	sbb    DWORD PTR [eax-0x4cd1c4a6],ebx
  42032e:	jnp    0x4202d1
  420330:	ret    
  420331:	fdivr  QWORD PTR [eax-0x27a05555]
  420337:	sub    al,0x1
  420339:	adc    eax,0x8699bd09
  42033e:	mov    cl,0x2e
  420340:	ret    0x9e1c
  420343:	ja     0x420336
  420345:	mov    esi,0x72fd06b0
  42034a:	repnz iret 
  42034c:	jns    0x4202ec
  42034e:	ss and al,0x7b
  420351:	push   ss
  420352:	outs   dx,DWORD PTR ds:[esi]
  420353:	mov    eax,ds:0x5018ec77
  420358:	repz out dx,al
  42035a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42035b:	xor    dh,dl
  42035d:	lahf   
  42035e:	repz mov edx,ebp
  420361:	add    edx,esi
  420363:	mov    BYTE PTR [esi+0x787ef3bf],al
  420369:	in     eax,0x78
  42036b:	(bad)  
  42036c:	fild   WORD PTR [edx+0x6b]
  42036f:	jae    0x4203c7
  420371:	inc    eax
  420372:	mov    dh,0xc2
  420374:	ror    DWORD PTR [edx+0x30],cl
  420377:	lods   al,BYTE PTR ds:[esi]
  420378:	push   eax
  420379:	push   ds
  42037a:	mov    cl,0xa3
  42037c:	ins    DWORD PTR es:[edi],dx
  42037d:	push   ecx
  42037e:	mov    edi,0xee33adfd
  420383:	push   edi
  420384:	loope  0x420327
  420386:	or     ebx,eax
  420388:	nop
  420389:	(bad)  
  42038a:	mov    db5,edi
  42038d:	jecxz  0x42032f
  42038f:	lahf   
  420390:	lods   eax,DWORD PTR ds:[esi]
  420391:	inc    ecx
  420392:	repnz pop ebx
  420394:	nop
  420395:	dec    ebp
  420396:	imul   esi,DWORD PTR ds:0x8099c388,0x77e67547
  4203a0:	pop    edi
  4203a1:	and    DWORD PTR [eax+0x77],ebx
  4203a4:	int3   
  4203a5:	cmp    eax,0x1e788a0
  4203aa:	dec    esi
  4203ab:	add    eax,0x28c647f9
  4203b0:	std    
  4203b1:	xlat   BYTE PTR ds:[ebx]
  4203b2:	pop    ss
  4203b3:	fnstcw WORD PTR [esi+esi*2+0x1335593]
  4203ba:	xchg   ebx,eax
  4203bb:	pop    esp
  4203bc:	lods   al,BYTE PTR ds:[esi]
  4203bd:	rcl    DWORD PTR [ecx+edx*8-0x34],0x15
  4203c2:	lock xor DWORD PTR [edi+edx*4],ebx
  4203c6:	nop
  4203c7:	pop    ebx
  4203c8:	iret   
  4203c9:	jg     0x4203a0
  4203cb:	cmp    DWORD PTR ss:[edx],ebp
  4203ce:	aad    0xb6
  4203d0:	shr    BYTE PTR [esi],1
  4203d2:	pop    esp
  4203d3:	into   
  4203d4:	jmp    0x5553:0x8211ad48
  4203db:	jmp    0x8902:0x832c0edf
  4203e2:	add    ebx,ebp
  4203e4:	aaa    
  4203e5:	aaa    
  4203e6:	int    0x2
  4203e8:	xchg   ebp,eax
  4203e9:	in     eax,dx
  4203ea:	inc    edx
  4203eb:	nop
  4203ec:	mov    ebx,0xd56fe016
  4203f1:	pop    ebx
  4203f2:	push   ecx
  4203f3:	or     BYTE PTR [edx+0x15d846cd],ah
  4203f9:	fbld   TBYTE PTR [esi]
  4203fb:	inc    ebx
  4203fc:	nop
  4203fd:	lods   al,BYTE PTR ds:[esi]
  4203fe:	fild   DWORD PTR [edi-0x4b]
  420401:	int3   
  420402:	mov    edi,DWORD PTR [eax]
  420404:	push   0xcb049ad1
  420409:	jmp    0x420413
  42040b:	clc    
  42040c:	sub    eax,0xb65cb122
  420411:	or     eax,0xa5725a60
  420416:	out    0x16,al
  420418:	inc    ecx
  420419:	xchg   edi,eax
  42041a:	jne    0x420415
  42041c:	je     0x42047f
  42041e:	ins    DWORD PTR es:[edi],dx
  42041f:	xchg   edx,esi
  420421:	hlt    
  420422:	and    esi,DWORD PTR [eax-0x9d5db2e]
  420428:	sub    eax,0x73c0e5d
  42042d:	adc    DWORD PTR [esi-0x23],ecx
  420430:	daa    
  420431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420432:	aad    0x4a
  420434:	xchg   BYTE PTR ds:0xa339be64,dl
  42043a:	xlat   BYTE PTR ds:[ebx]
  42043b:	push   cs
  42043c:	icebp  
  42043d:	imul   edi,DWORD PTR [eax-0x537e0d0b],0x2647b815
  420447:	add    al,0x2b
  420449:	add    BYTE PTR [esi+0x4f],dl
  42044c:	xchg   edi,eax
  42044d:	mov    dl,0x99
  42044f:	xchg   esp,eax
  420450:	shr    DWORD PTR [esi+0x6228b3a0],cl
  420456:	shl    BYTE PTR [edx+0x2d629b74],0xfe
  42045d:	lods   al,BYTE PTR ds:[esi]
  42045e:	in     eax,0xac
  420460:	cld    
  420461:	(bad)  
  420462:	data16 mov bl,BYTE PTR [ebx]
  420465:	jno    0x42045e
  420467:	cli    
  420468:	mov    eax,0xee259b72
  42046d:	(bad)  
  42046e:	jmp    0x2399:0xce6a4662
  420475:	lods   al,BYTE PTR ds:[esi]
  420476:	mov    ebx,0xe4c0093c
  42047b:	dec    esp
  42047c:	inc    ebx
  42047d:	mov    ah,0x20
  42047f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420480:	aam    0xa8
  420482:	cmp    ebp,esi
  420484:	inc    edi
  420485:	mov    al,ds:0x2fc3634b
  42048a:	mov    DWORD PTR [edi+0x4beb4fa7],esp
  420490:	cld    
  420491:	mov    ecx,0x6be53aaa
  420496:	mov    esp,0xd4712d12
  42049b:	ss stos DWORD PTR es:[edi],eax
  42049d:	and    al,BYTE PTR [eax-0x7e]
  4204a0:	and    bh,BYTE PTR [ebp-0x6e]
  4204a3:	dec    ebp
  4204a4:	push   eax
  4204a5:	xchg   edi,eax
  4204a6:	inc    esi
  4204a7:	aam    0x29
  4204a9:	out    0x93,eax
  4204ab:	ins    DWORD PTR es:[edi],dx
  4204ac:	imul   edi,DWORD PTR [ebx],0x149d0b48
  4204b2:	mov    eax,ds:0x8dd9873
  4204b7:	cmc    
  4204b8:	scas   eax,DWORD PTR es:[edi]
  4204b9:	test   eax,0xf5ec37fd
  4204be:	add    esi,DWORD PTR [edx]
  4204c0:	jl     0x420512
  4204c2:	jae    0x42045a
  4204c4:	add    BYTE PTR [edx],0xbf
  4204c7:	and    BYTE PTR [ebx-0x5a],al
  4204ca:	out    dx,eax
  4204cb:	pop    esp
  4204cc:	jmp    0x8cd6b7d8
  4204d1:	loopne 0x420547
  4204d3:	cmp    BYTE PTR [esi-0x59],dl
  4204d6:	out    0x6c,eax
  4204d8:	dec    eax
  4204d9:	les    esp,FWORD PTR [edx]
  4204db:	or     al,0xb5
  4204dd:	cmp    bl,BYTE PTR [esi+0x51232c16]
  4204e3:	xchg   ch,dl
  4204e5:	icebp  
  4204e6:	inc    esp
  4204e7:	or     eax,0x881019a0
  4204ec:	jmp    0x420493
  4204ee:	(bad)  
  4204ef:	fst    DWORD PTR [ecx+0x7e]
  4204f2:	aad    0x9f
  4204f4:	adc    eax,0x1e9ad234
  4204f9:	fsub   st(7),st
  4204fb:	jno    0x4204ce
  4204fd:	dec    ecx
  4204fe:	jl     0x4204e1
  420500:	rol    BYTE PTR [ebx-0x63f296b6],cl
  420506:	pop    ecx
  420507:	mov    al,ch
  420509:	sbb    al,0x22
  42050b:	fs adc ah,dl
  42050e:	lea    edi,[ecx]
  420510:	retf   
  420511:	enter  0xcadb,0xeb
  420515:	inc    esi
  420516:	add    ah,bl
  420518:	sti    
  420519:	icebp  
  42051a:	int3   
  42051b:	(bad)  [ecx+eiz*2]
  42051e:	add    DWORD PTR [edi+0x5e967ddc],eax
  420524:	jecxz  0x420564
  420526:	cmp    bl,ch
  420528:	jbe    0x42053c
  42052a:	jge    0x4205a2
  42052c:	pop    ebp
  42052d:	mov    bh,0x55
  42052f:	jnp    0x4204ea
  420531:	outs   dx,DWORD PTR ds:[esi]
  420532:	xchg   ah,bl
  420534:	mov    BYTE PTR [edx-0x10],dl
  420537:	hlt    
  420538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420539:	out    dx,eax
  42053a:	imul   eax,DWORD PTR [ebp+ebx*1-0x75],0xffffffd5
  42053f:	or     eax,0xe73aa454
  420544:	mov    al,0x81
  420546:	jae    0x4204d9
  420548:	sub    BYTE PTR cs:[ecx+eax*1+0x3a],ch
  42054d:	ins    DWORD PTR es:[edi],dx
  42054e:	loopne 0x4205b2
  420550:	neg    DWORD PTR [edi]
  420552:	repnz stos BYTE PTR es:[edi],al
  420554:	add    dh,BYTE PTR [edx+0x43]
  420557:	jne    0x420539
  420559:	repnz scas al,BYTE PTR es:[edi]
  42055b:	inc    ebx
  42055c:	xor    esp,edx
  42055e:	ds jo  0x4205dd
  420561:	sub    BYTE PTR [ebx],dl
  420563:	(bad)  
  420565:	or     eax,0xbf6a05
  42056a:	repz scas eax,DWORD PTR es:[edi]
  42056c:	inc    eax
  42056d:	std    
  42056e:	out    dx,eax
  42056f:	inc    ebx
  420570:	and    bh,BYTE PTR [ebp+0x44]
  420573:	imul   edi,ebx,0xffffffb3
  420576:	adc    ecx,eax
  420578:	adc    al,0x94
  42057a:	fiadd  WORD PTR [ebx]
  42057c:	adc    DWORD PTR [edx],0x5a
  42057f:	shr    BYTE PTR [edx+0x2aff0298],cl
  420585:	fwait
  420586:	jmp    0x5ba5:0x945cecf5
  42058d:	in     al,0x8d
  42058f:	out    0xf0,eax
  420591:	pop    ebx
  420592:	jne    0x42051f
  420594:	fld    QWORD PTR [ebx]
  420596:	mov    ecx,0x97df6898
  42059b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42059c:	sbb    DWORD PTR [ecx-0x59b5fbfd],edi
  4205a2:	fistp  QWORD PTR [eax+ebx*2+0x1234c53d]
  4205a9:	retf   0x94ea
  4205ac:	std    
  4205ad:	inc    esi
  4205ae:	stos   DWORD PTR es:[edi],eax
  4205af:	jbe    0x420617
  4205b1:	sbb    dh,BYTE PTR [ecx+0x533fe3cd]
  4205b7:	xor    BYTE PTR ds:0xf5eb0018,bl
  4205bd:	add    cl,BYTE PTR [ebp-0x55165b2b]
  4205c3:	or     al,0xff
  4205c5:	ds mov edi,edi
  4205c8:	xchg   edx,eax
  4205c9:	fwait
  4205ca:	mov    al,ds:0x3848c3b9
  4205cf:	inc    ebp
  4205d0:	cmp    BYTE PTR [ebp+ebp*8+0x77],0x5c
  4205d5:	test   DWORD PTR [ebx-0x25],ebp
  4205d8:	cmp    al,0x1b
  4205da:	xchg   ebp,eax
  4205db:	add    ecx,ecx
  4205dd:	sar    BYTE PTR [edi+edx*4],cl
  4205e0:	imul   edx,DWORD PTR [edx+0x5c],0x53
  4205e4:	add    cl,BYTE PTR [edi+0x3e]
  4205e7:	inc    ebp
  4205e8:	push   ss
  4205e9:	ret    
  4205ea:	(bad)  
  4205eb:	stc    
  4205ec:	icebp  
  4205ed:	cs dec esp
  4205ef:	cmp    ch,BYTE PTR [ebp-0xe]
  4205f2:	(bad)  
  4205f3:	pop    ebx
  4205f4:	mov    ah,0xf5
  4205f6:	into   
  4205f7:	xlat   BYTE PTR ds:[ebx]
  4205f8:	push   edi
  4205f9:	not    edx
  4205fb:	pop    ecx
  4205fc:	sub    edx,ebp
  4205fe:	push   ebp
  4205ff:	sub    al,0x6e
  420601:	adc    bl,BYTE PTR [esi]
  420603:	bound  esi,QWORD PTR [edx]
  420605:	fbstp  TBYTE PTR [ebp+eiz*8+0x75]
  420609:	and    cl,ch
  42060b:	jmp    0x52dc094f
  420610:	gs repnz pushf 
  420613:	jmp    0x420638
  420615:	fidivr WORD PTR [esi+ecx*1-0x27]
  420619:	and    al,0xe7
  42061b:	in     al,dx
  42061c:	jl     0x42061e
  42061e:	push   0xffffffa7
  420620:	pop    ss
  420621:	mov    eax,ds:0x98e7e83f
  420626:	mov    eax,0x6429dc82
  42062b:	and    ebx,edi
  42062d:	mov    eax,0x976ca7cf
  420632:	mov    dl,0x57
  420634:	xchg   edi,eax
  420635:	outs   dx,DWORD PTR ds:[esi]
  420636:	jne    0x4205c3
  420638:	dec    esi
  420639:	frstor [ebx+0x3d1410be]
  42063f:	jecxz  0x42065d
  420641:	pop    eax
  420642:	(bad)  
  420643:	in     al,dx
  420644:	sbb    BYTE PTR ds:0x4bf4686f,bl
  42064a:	sub    dh,bh
  42064c:	addr16 adc eax,0xcc428969
  420652:	inc    edx
  420653:	lock shl BYTE PTR [edi],1
  420656:	sar    BYTE PTR [edx-0x5e60b1a1],0x6f
  42065d:	pop    esp
  42065e:	outs   dx,BYTE PTR ds:[esi]
  42065f:	outs   dx,BYTE PTR ds:[esi]
  420660:	shl    BYTE PTR [edi+0x7ca327b],1
  420666:	mov    BYTE PTR [esi],ch
  420668:	in     eax,0xcb
  42066a:	fmul   DWORD PTR [eax]
  42066c:	inc    ebp
  42066d:	jno    0x4206e6
  42066f:	xchg   ebp,eax
  420670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420671:	mov    edi,DWORD PTR [eax]
  420673:	cmp    eax,0x91d71ba5
  420678:	lea    edi,[esi]
  42067a:	mov    BYTE PTR [ecx+edx*4-0xa],ch
  42067e:	mov    ebp,DWORD PTR [ebx]
  420680:	sbb    al,0xb5
  420682:	push   esp
  420683:	and    ch,BYTE PTR [eax]
  420685:	retf   0xc866
  420688:	jnp    0x4206cf
  42068a:	imul   edx,DWORD PTR [ecx-0x11eb81e9],0x50effa72
  420694:	mov    eax,ds:0x66ef1325
  420699:	aas    
  42069a:	xor    DWORD PTR ds:0xf51ca914,ebx
  4206a0:	lahf   
  4206a1:	xchg   ebp,eax
  4206a2:	sti    
  4206a3:	imul   esi,DWORD PTR [esi+eiz*2],0xffffffc3
  4206a7:	sub    DWORD PTR [ebx+ecx*1],ebp
  4206aa:	sbb    DWORD PTR [eax],esp
  4206ac:	mov    al,0xde
  4206ae:	outs   dx,BYTE PTR ds:[esi]
  4206af:	gs push ecx
  4206b1:	test   DWORD PTR [edx-0x7e],0xf1dc2649
  4206b8:	inc    edx
  4206b9:	add    ebp,DWORD PTR [eax+0x27]
  4206bc:	mov    ecx,0x34a694c8
  4206c1:	adc    edx,DWORD PTR [esp+eiz*8]
  4206c4:	xchg   esp,eax
  4206c5:	push   ds
  4206c6:	arpl   WORD PTR [edi-0xf],bx
  4206c9:	mov    esp,ss
  4206cb:	sub    al,0xa0
  4206cd:	mov    esi,0x4e14df4d
  4206d2:	imul   BYTE PTR [esi]
  4206d4:	stos   BYTE PTR es:[edi],al
  4206d5:	sar    DWORD PTR [ebx-0x4ceeb266],cl
  4206db:	pop    edx
  4206dc:	sbb    esp,esi
  4206de:	cld    
  4206df:	mov    DWORD PTR [edi],eax
  4206e1:	lods   eax,DWORD PTR ds:[esi]
  4206e2:	or     al,0xa2
  4206e4:	cmp    DWORD PTR [ebp+0x5ae98bba],0xeeec6c93
  4206ee:	dec    ebx
  4206ef:	dec    edi
  4206f0:	jg     0x420748
  4206f2:	jb     0x420757
  4206f4:	fcomp  DWORD PTR [esi+edx*1-0x6]
  4206f8:	mov    ah,0x50
  4206fa:	push   ebx
  4206fb:	xor    DWORD PTR [edx+0x7b],0xb55c05b6
  420702:	cmp    BYTE PTR [esi+ecx*1],bl
  420705:	and    eax,0x92f0edfd
  42070a:	or     DWORD PTR [ebx],ebp
  42070c:	neg    BYTE PTR [edi-0x5b3f3ef6]
  420712:	stos   BYTE PTR es:[edi],al
  420713:	xchg   esi,eax
  420714:	call   DWORD PTR fs:[ebp+edx*4-0x16]
  420719:	sub    eax,0x99be2043
  42071e:	repz xor BYTE PTR [edi-0x39],bl
  420722:	jb     0x420765
  420724:	jecxz  0x420762
  420726:	fwait
  420727:	add    al,0xd1
  420729:	mov    dl,0xb7
  42072b:	or     eax,0xe4744bfd
  420730:	les    esp,FWORD PTR [ecx+eiz*1+0x5174819a]
  420737:	lock xchg edx,eax
  420739:	std    
  42073a:	lock sbb ebx,DWORD PTR [esi-0x35b7ac64]
  420741:	dec    esi
  420742:	cmp    ebp,DWORD PTR [esi-0xe]
  420745:	mov    dl,0x93
  420747:	sar    DWORD PTR [esi-0xc],0x6b
  42074b:	mov    dl,0xf0
  42074d:	mov    bl,0x6f
  42074f:	sahf   
  420750:	sbb    al,0x5d
  420752:	outs   dx,BYTE PTR ds:[esi]
  420753:	xchg   ebp,eax
  420754:	adc    BYTE PTR [ecx+0x53],bl
  420757:	mov    al,0xc
  420759:	jne    0x42077e
  42075b:	retf   0x4609
  42075e:	add    BYTE PTR [eax],al
  420760:	add    BYTE PTR [eax],al
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	imul   DWORD PTR [ebx-0x7e2a7bce]
  420774:	add    DWORD PTR [eax],eax
  420776:	hlt    
  420777:	add    al,0x0
  420779:	add    BYTE PTR [eax+ecx*2-0x76],ah
  42077d:	fld    TBYTE PTR [edi]
  42077f:	mov    cl,BYTE PTR [ebp+0xd3497af]
  420785:	out    0x89,al
  420787:	push   ebx
  420788:	adc    eax,0x1a2ce75c
  42078d:	cld    
  42078e:	sar    BYTE PTR [eax],cl
  420790:	lds    esp,FWORD PTR [esi+0x29c1824]
  420796:	rcr    DWORD PTR [esi-0x39501f7c],1
  42079c:	pop    ecx
  42079d:	jb     0x4207b1
  42079f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207a0:	imul   eax,DWORD PTR [edx+0x8],0xffffffe6
  4207a4:	and    dl,ah
  4207a6:	scas   al,BYTE PTR es:[edi]
  4207a7:	pop    edx
  4207a8:	jae    0x42079b
  4207aa:	inc    esp
  4207ab:	scas   eax,DWORD PTR es:[edi]
  4207ac:	or     BYTE PTR [ecx],dh
  4207ae:	lock cld 
  4207b0:	mov    esi,0xa7d1951d
  4207b5:	cmp    esp,ebx
  4207b7:	mov    ebp,0x2360c64a
  4207bc:	pop    esp
  4207bd:	dec    esi
  4207be:	int3   
  4207bf:	fbstp  TBYTE PTR [eax+0x7]
  4207c2:	or     ebx,0x78
  4207c5:	add    ah,0x7b
  4207c8:	pop    eax
  4207c9:	xor    edx,DWORD PTR [esi]
  4207cb:	jo     0x420793
  4207cd:	mov    al,0xff
  4207cf:	mov    eax,0x119d56c8
  4207d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d5:	jmp    0x4207e7
  4207d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d8:	inc    edi
  4207d9:	outs   dx,BYTE PTR ds:[esi]
  4207da:	ret    
  4207db:	lock cmp al,0x18
  4207de:	mov    dl,BYTE PTR [ebx+0x2583e642]
  4207e4:	jbe    0x420782
  4207e6:	mov    ebx,DWORD PTR [eax+0x32832b26]
  4207ec:	(bad)  
  4207ed:	stos   BYTE PTR es:[edi],al
  4207ee:	xchg   BYTE PTR [esi+0x434b136],bl
  4207f4:	and    eax,0xfe9de361
  4207f9:	cmp    bl,BYTE PTR [edx+0x2a1279f3]
  4207ff:	inc    eax
  420800:	mov    ebx,es
  420802:	sbb    eax,DWORD PTR [edx-0x7e0db081]
  420808:	xor    bh,dl
  42080a:	adc    eax,0xbb5a345e
  42080f:	add    DWORD PTR [eax-0x4f],esp
  420812:	iret   
  420813:	xlat   BYTE PTR ds:[ebx]
  420814:	mov    ?,WORD PTR [edx-0x15]
  420817:	dec    ebp
  420818:	mov    ss,WORD PTR [esp+ebp*1]
  42081b:	pushf  
  42081c:	mov    edx,0x1266a6f9
  420821:	les    esp,FWORD PTR [ecx-0x59]
  420824:	shl    BYTE PTR [edx],cl
  420826:	ja     0x42085e
  420828:	lea    ecx,[edi]
  42082a:	inc    ecx
  42082b:	(bad)  
  42082c:	rcr    BYTE PTR [edx-0x7b],cl
  42082f:	add    BYTE PTR [edi+ebx*8+0x13],cl
  420833:	mov    ebp,0xe9538553
  420838:	mov    ecx,0x99349515
  42083d:	fst    QWORD PTR [ecx]
  42083f:	push   es
  420840:	out    dx,al
  420841:	fwait
  420842:	jne    0x420862
  420844:	fsubr  st,st(3)
  420846:	lods   al,BYTE PTR ds:[esi]
  420847:	mov    al,ds:0x6fb38d15
  42084c:	adc    DWORD PTR ss:[esi],0xffffffa9
  420850:	xor    al,0x1
  420852:	mov    ds:0xa620cdd9,eax
  420857:	int    0xa
  420859:	icebp  
  42085a:	sbb    eax,0xf214b0d4
  42085f:	popf   
  420860:	jle    0x420840
  420862:	icebp  
  420863:	adc    DWORD PTR [ecx*2+0x649d2483],ecx
  42086a:	cmp    dh,0xb0
  42086d:	xchg   edi,eax
  42086e:	inc    esp
  42086f:	add    eax,0x4d0d715a
  420874:	ins    BYTE PTR es:[edi],dx
  420875:	adc    DWORD PTR [ecx+0x69],0xe067c8bd
  42087c:	popf   
  42087d:	aad    0x1
  42087f:	sbb    edx,DWORD PTR [di+0x239]
  420884:	pop    eax
  420885:	js     0x420889
  420887:	bound  esi,QWORD PTR [eax]
  420889:	inc    edi
  42088a:	test   DWORD PTR [edi+ebx*2+0x52],0x355561da
  420892:	imul   DWORD PTR [edx+0x55dafdd5]
  420898:	cmp    esi,DWORD PTR [esi+0x7313d811]
  42089e:	mov    ebp,0x1f8c43d6
  4208a3:	ficom  WORD PTR [edx-0x1179e8ba]
  4208a9:	shl    BYTE PTR [ebx-0x43],0x78
  4208ad:	push   ebx
  4208ae:	mov    ch,0x10
  4208b0:	fiadd  DWORD PTR ds:0xbbe379f
  4208b6:	inc    esp
  4208b7:	sbb    ecx,eax
  4208b9:	sbb    BYTE PTR [eax+0x4daf0c51],ch
  4208bf:	repnz pop edi
  4208c1:	ret    0x68d1
  4208c4:	jl     0x42091a
  4208c6:	cwde   
  4208c7:	mov    bl,0x6a
  4208c9:	in     al,dx
  4208ca:	push   ebp
  4208cb:	xor    ebp,0xb6ce9b71
  4208d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d2:	pop    fs
  4208d4:	sbb    ebx,DWORD PTR ds:[ebx]
  4208d7:	lods   al,BYTE PTR ds:[esi]
  4208d8:	neg    BYTE PTR [ecx+0x6d988c38]
  4208de:	repz push 0xef400b35
  4208e4:	dec    eax
  4208e5:	sub    al,0xd0
  4208e7:	aam    0xcb
  4208e9:	mov    ebp,DWORD PTR [ecx-0x25835401]
  4208ef:	(bad)  
  4208f0:	btr    DWORD PTR [esp+edx*4],edi
  4208f4:	push   edi
  4208f5:	dec    edx
  4208f6:	sub    edx,DWORD PTR [ebx+0x77]
  4208f9:	push   ss
  4208fa:	loop   0x4208f3
  4208fc:	adc    bh,al
  4208fe:	into   
  4208ff:	repz fmul DWORD PTR ds:0xaa787939
  420906:	pop    esp
  420907:	pop    ebx
  420908:	and    DWORD PTR [eax-0x26],ebp
  42090b:	retf   
  42090c:	loope  0x42092d
  42090e:	fcom   DWORD PTR [edx+0x761e662a]
  420914:	push   0x261258b1
  420919:	pop    esi
  42091a:	adc    cl,ch
  42091c:	mov    ebx,0x92290f52
  420921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420922:	add    al,0xd9
  420924:	cmp    dl,BYTE PTR [ecx+0x3c]
  420927:	sbb    DWORD PTR [esi+0x4a],ebp
  42092a:	inc    ecx
  42092b:	cmp    DWORD PTR [ecx+0x71],ebp
  42092e:	dec    esp
  42092f:	inc    edi
  420930:	loopne 0x4208e8
  420932:	pop    eax
  420933:	int3   
  420934:	ja     0x4208e0
  420936:	jne    0x420994
  420938:	ret    
  420939:	ret    
  42093a:	mov    bl,BYTE PTR [edx+0x64]
  42093d:	icebp  
  42093e:	add    esp,DWORD PTR [ebp+0x45]
  420941:	push   ecx
  420942:	stos   BYTE PTR es:[edi],al
  420943:	jecxz  0x420977
  420945:	mov    edx,0xd818a51c
  42094a:	pop    ds
  42094b:	mov    ebp,0xac11a0ff
  420950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420951:	aad    0x3a
  420953:	push   esp
  420954:	sahf   
  420955:	mov    edi,0xb6b70285
  42095a:	and    al,0x90
  42095c:	mov    ds:0x67470c2b,eax
  420961:	cld    
  420962:	fbld   TBYTE PTR [esi+ebx*1]
  420965:	cmp    BYTE PTR [ecx+0x60],ah
  420968:	jo     0x42093f
  42096a:	fcom   QWORD PTR [esi-0x253fdd29]
  420970:	in     al,dx
  420971:	xor    eax,0x255a163c
  420976:	pusha  
  420977:	hlt    
  420978:	sbb    eax,0x159795e0
  42097d:	idiv   BYTE PTR [ecx+0x8ab256a]
  420983:	add    cl,dl
  420985:	gs ss jl 0x420937
  420989:	lea    esi,[ebx]
  42098b:	xor    BYTE PTR [ecx-0x56356df],0xdc
  420992:	mov    DWORD PTR [edx-0x74],ebx
  420995:	dec    esp
  420996:	std    
  420997:	enter  0x14aa,0xdd
  42099b:	push   ds
  42099c:	imul   edi,DWORD PTR [esi],0xda45d861
  4209a2:	sub    DWORD PTR [ebx-0x29ce7713],edi
  4209a8:	sbb    eax,0x832b764b
  4209ad:	imul   esi,DWORD PTR [ebp-0x3f],0xf6423766
  4209b4:	dec    eax
  4209b5:	aaa    
  4209b6:	pop    edi
  4209b7:	mov    eax,ds:0x6a437d33
  4209bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209bd:	ret    
  4209be:	xlat   BYTE PTR ds:[ebx]
  4209bf:	adc    ch,BYTE PTR [ecx+0x400de6bb]
  4209c5:	sub    eax,0x428121ad
  4209ca:	sti    
  4209cb:	fs push 0x18
  4209ce:	mov    eax,ds:0xa9cd4d85
  4209d3:	daa    
  4209d4:	mov    cl,0xaf
  4209d6:	ss daa 
  4209d8:	leave  
  4209d9:	cmp    bh,BYTE PTR [ecx]
  4209db:	aam    0x2d
  4209dd:	push   es
  4209de:	xor    BYTE PTR [eax],bl
  4209e0:	test   eax,0x12b42b6b
  4209e5:	leave  
  4209e6:	add    cl,0xdd
  4209e9:	daa    
  4209ea:	add    al,0x1e
  4209ec:	or     dh,BYTE PTR [ebx]
  4209ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ef:	out    dx,eax
  4209f0:	or     ebp,ecx
  4209f2:	mov    ah,0x3b
  4209f4:	push   edi
  4209f5:	mov    ecx,0x7b994d4d
  4209fa:	nop
  4209fb:	sub    al,dl
  4209fd:	or     ebp,ebx
  4209ff:	pshufw mm4,QWORD PTR [ebp+0x1163819d],0x53
  420a07:	xor    ch,al
  420a09:	inc    ebx
  420a0a:	push   es
  420a0b:	cli    
  420a0c:	mov    ebp,0x2ff72da9
  420a11:	and    DWORD PTR [eax-0x2],esp
  420a14:	jmp    0xcfca:0xc5a6a343
  420a1b:	jmp    0x7b349211
  420a20:	pop    ebp
  420a21:	cdq    
  420a22:	ror    DWORD PTR [ebp+0x44],1
  420a25:	sbb    eax,0xe75c9272
  420a2a:	xor    DWORD PTR [edx-0x248ee9fb],edx
  420a30:	lahf   
  420a31:	cmp    eax,0x32895d1
  420a36:	inc    ebx
  420a37:	jl     0x420a93
  420a39:	inc    edx
  420a3a:	push   esp
  420a3b:	mov    ah,0x71
  420a3d:	outs   dx,BYTE PTR ds:[esi]
  420a3e:	cmp    al,0x91
  420a40:	js     0x4209f4
  420a42:	and    edi,DWORD PTR [eax]
  420a44:	xchg   DWORD PTR [esp+ebp*4+0x38],esi
  420a48:	and    eax,0xa011721a
  420a4d:	repz enter 0xad4f,0x87
  420a52:	lds    ecx,FWORD PTR [eax]
  420a54:	in     al,dx
  420a55:	push   ebp
  420a56:	retf   0x9d0e
  420a59:	and    DWORD PTR ds:0xa2758d82,ebx
  420a5f:	lea    edx,[esi+eax*2-0x7c720e79]
  420a66:	aaa    
  420a67:	mov    esp,0x3283ae56
  420a6c:	retf   
  420a6d:	cmc    
  420a6e:	retf   0x9193
  420a71:	sbb    cl,cl
  420a73:	sbb    ah,BYTE PTR [esp+eax*8-0x3c]
  420a77:	jle    0x420aa8
  420a79:	in     al,dx
  420a7a:	(bad)  
  420a7b:	iret   
  420a7c:	(bad)  [edi+0x25]
  420a7f:	and    eax,0xb5c57536
  420a84:	mov    eax,0xfe2ec2b6
  420a89:	fmul   st,st(3)
  420a8b:	xchg   edx,eax
  420a8c:	and    DWORD PTR [edx],eax
  420a8e:	es dec edi
  420a90:	mov    edi,0xd4984c41
  420a95:	mov    bl,0x9
  420a97:	push   esp
  420a98:	xchg   ebp,eax
  420a99:	push   es
  420a9a:	cmp    DWORD PTR [edi],edi
  420a9c:	leave  
  420a9d:	push   0xebb0b7b
  420aa2:	cs loop 0x420b0f
  420aa5:	push   0xffffff99
  420aa7:	(bad)  
  420aa8:	repnz and DWORD PTR [esi-0x7fd88e2a],edx
  420aaf:	jg     0x420ae5
  420ab1:	data16 (bad) 
  420ab3:	shr    BYTE PTR [edi-0x36b97e42],1
  420ab9:	popa   
  420aba:	or     DWORD PTR [edi-0x2e488af4],ebx
  420ac0:	inc    esi
  420ac1:	cmc    
  420ac2:	or     al,0x60
  420ac4:	mov    WORD PTR [edx+ecx*4+0x742a62dc],?
  420acb:	aad    0x7a
  420acd:	in     al,dx
  420ace:	dec    edx
  420acf:	dec    esp
  420ad0:	mov    ebp,0x93bc2ba1
  420ad5:	jno    0x420b34
  420ad7:	fld    QWORD PTR [eax+ebx*4-0x2e]
  420adb:	xlat   BYTE PTR ds:[ebx]
  420adc:	outs   dx,DWORD PTR ds:[esi]
  420ade:	sbb    al,BYTE PTR [edx-0x6b]
  420ae1:	jle    0x420aff
  420ae3:	mov    dh,0x7
  420ae5:	jmp    0x615786ec
  420aea:	loope  0x420b01
  420aec:	int3   
  420aed:	rcl    DWORD PTR [esi-0x3e8f794b],1
  420af3:	enter  0x1713,0xac
  420af7:	js     0x420afc
  420af9:	js     0x420b03
  420afb:	sbb    edx,esi
  420afd:	(bad)
  420b00:	inc    ecx
  420b01:	ja     0x420b27
  420b03:	dec    esp
  420b04:	je     0x420b48
  420b06:	push   edx
  420b07:	ret    0xd038
  420b0a:	sub    eax,0x75fe1a63
  420b0f:	mov    cl,0x23
  420b11:	(bad)  
  420b13:	shl    DWORD PTR [ecx+0x7788f412],cl
  420b19:	in     al,dx
  420b1a:	or     dl,dh
  420b1c:	cmc    
  420b1d:	mov    ah,0x98
  420b1f:	fyl2x  
  420b21:	daa    
  420b22:	push   esp
  420b23:	jmp    0xb26f:0x162f8b51
  420b2a:	nop
  420b2b:	jnp    0x420b5a
  420b2d:	mov    bl,0x53
  420b2f:	sti    
  420b30:	xchg   ebx,eax
  420b31:	push   eax
  420b32:	outs   dx,BYTE PTR ds:[esi]
  420b33:	mov    esp,0x6555b8c4
  420b38:	(bad)  
  420b39:	out    0xe2,eax
  420b3b:	cmp    ch,BYTE PTR [ebp-0x57]
  420b3e:	pop    ebx
  420b3f:	inc    edi
  420b40:	push   ebx
  420b41:	rcr    esi,cl
  420b43:	das    
  420b44:	ins    BYTE PTR es:[edi],dx
  420b45:	(bad)  
  420b46:	push   0x767657ed
  420b4b:	mov    bh,BYTE PTR [ecx-0x40]
  420b4e:	sub    eax,0x79ec0251
  420b53:	xor    eax,0x776a0b39
  420b58:	mov    eax,ds:0x36e8bb2f
  420b5d:	inc    ebp
  420b5e:	cli    
  420b5f:	push   ebp
  420b60:	adc    DWORD PTR [esi+0x259986ef],edx
  420b66:	and    BYTE PTR [edi+0x34468942],bh
  420b6c:	pop    ecx
  420b6d:	add    ch,BYTE PTR [ecx-0x55]
  420b70:	mov    ebp,0x94096d38
  420b75:	imul   BYTE PTR [edx]
  420b77:	sbb    BYTE PTR [esi-0x66],0x1c
  420b7b:	(bad)  
  420b7c:	and    DWORD PTR [ecx-0x1a18327f],ebp
  420b82:	shr    ah,1
  420b84:	in     eax,dx
  420b85:	dec    esi
  420b86:	mov    ebx,0x8012cf74
  420b8b:	pop    ebx
  420b8c:	cs pop ds
  420b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8f:	push   ebx
  420b90:	mov    gs,WORD PTR [eax+0x24]
  420b93:	cmp    DWORD PTR [esi+0x572336d8],edi
  420b99:	jne    0x420bc9
  420b9b:	mov    edi,0xfea28e0a
  420ba0:	lods   eax,DWORD PTR cs:[esi]
  420ba2:	addr16 dec edi
  420ba4:	add    al,cl
  420ba6:	sbb    eax,0x43613897
  420bab:	ss data16 jecxz 0x420be5
  420baf:	mov    esi,DWORD PTR [esi]
  420bb1:	test   eax,0x18508fca
  420bb6:	mov    BYTE PTR [ebp-0x1a],ch
  420bb9:	icebp  
  420bba:	fbld   TBYTE PTR [eax-0x17]
  420bbd:	add    DWORD PTR [ebx-0x193b5b47],esi
  420bc3:	sar    dl,cl
  420bc5:	jg     0x420c13
  420bc7:	retf   0xa531
  420bca:	(bad)  
  420bcb:	test   al,0xcb
  420bcd:	sub    BYTE PTR [esi-0x58],0xbb
  420bd1:	jnp    0x420bcb
  420bd3:	mov    DWORD PTR [eax],ebp
  420bd5:	iret   
  420bd6:	adc    al,0x1
  420bd8:	hlt    
  420bd9:	test   bl,cl
  420bdb:	in     al,dx
  420bdc:	adc    eax,0xdd716583
  420be1:	int    0x33
  420be3:	fwait
  420be4:	inc    ebp
  420be5:	or     al,0x8e
  420be7:	lahf   
  420be8:	xor    DWORD PTR [ebx+0x2acf7fc8],ebp
  420bee:	inc    ecx
  420bef:	je     0x420c49
  420bf1:	sahf   
  420bf2:	inc    esp
  420bf3:	arpl   si,bp
  420bf5:	mov    eax,ds:0x4215339a
  420bfa:	sti    
  420bfb:	je     0x420c7a
  420bfd:	dec    edx
  420bfe:	sub    al,BYTE PTR [ebp+0x78]
  420c01:	xor    edx,edx
  420c03:	and    dl,dh
  420c05:	mov    edx,0x8bd2ef51
  420c0a:	or     BYTE PTR [esi-0x72859507],ah
  420c10:	scas   eax,DWORD PTR es:[edi]
  420c11:	ror    BYTE PTR [ebp-0x5eb404c6],1
  420c17:	push   esp
  420c18:	mov    ch,0xce
  420c1a:	push   edi
  420c1b:	popa   
  420c1c:	or     DWORD PTR [ecx-0x6176b57d],ecx
  420c22:	add    DWORD PTR [esi],ebp
  420c24:	xchg   BYTE PTR [ecx-0x28],al
  420c27:	imul   BYTE PTR [eax+0x7027baf3]
  420c2d:	cmp    eax,DWORD PTR ds:0x26ab5587
  420c33:	adc    al,BYTE PTR [esi-0x65]
  420c36:	mov    ds:0xf373e81a,eax
  420c3b:	lds    eax,FWORD PTR [ebp-0x1f]
  420c3e:	lods   eax,DWORD PTR ds:[esi]
  420c3f:	push   0x210aa39e
  420c44:	xchg   ebp,eax
  420c45:	jp     0x420bf4
  420c47:	mov    bl,0xfd
  420c49:	cmp    al,0x45
  420c4b:	stos   BYTE PTR es:[edi],al
  420c4c:	xchg   ebx,eax
  420c4d:	test   dl,al
  420c4f:	call   0x9589:0xf296110c
  420c56:	mov    al,0x9e
  420c58:	loope  0x420c44
  420c5a:	ret    
  420c5b:	pusha  
  420c5c:	inc    edx
  420c5d:	sbb    BYTE PTR [ecx-0x71f79487],ch
  420c63:	mov    eax,0xce8af9a5
  420c68:	xor    dl,BYTE PTR [edi]
  420c6a:	xor    DWORD PTR [eax+ebx*4+0x43],ebp
  420c6e:	add    BYTE PTR [eax],al
  420c70:	add    BYTE PTR [eax],al
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0x4ffb857]
  420c80:	cmp    edx,esp
  420c82:	leave  
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    ah,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ebp+0x11],bl
  420c8c:	xor    eax,DWORD PTR [esi-0x462bd4b1]
  420c92:	pusha  
  420c93:	mov    esp,0x27c85933
  420c98:	and    DWORD PTR [edx],esp
  420c9a:	push   edx
  420c9b:	sbb    ch,BYTE PTR [edi]
  420c9d:	xor    DWORD PTR [edx-0x316f7f00],0xe3ffb72
  420ca7:	fstp   st(7)
  420ca9:	es (bad) 
  420cab:	repnz outs dx,BYTE PTR ds:[esi]
  420cad:	xor    BYTE PTR [ecx-0x16],bh
  420cb0:	cmp    esp,DWORD PTR [ebx+0x1c8dcdcb]
  420cb6:	jns    0x420cc8
  420cb8:	inc    edx
  420cb9:	add    BYTE PTR ds:0x3ced9d4e,dl
  420cbf:	les    eax,FWORD PTR [edx]
  420cc1:	call   0xec57d87a
  420cc6:	clc    
  420cc7:	adc    DWORD PTR ds:0x668428de,esi
  420ccd:	push   edx
  420cce:	into   
  420ccf:	nop
  420cd0:	test   ch,bl
  420cd2:	fisttp DWORD PTR [edi-0x2]
  420cd5:	cmp    cl,BYTE PTR [ebx]
  420cd7:	stc    
  420cd8:	test   ebp,esi
  420cda:	sbb    ebx,esi
  420cdc:	arpl   WORD PTR [esi-0x6],dx
  420cdf:	popf   
  420ce0:	in     al,0xd4
  420ce2:	mov    al,0xc9
  420ce4:	pop    ecx
  420ce5:	add    esi,esi
  420ce7:	push   ebx
  420ce8:	pop    ds
  420ce9:	mov    ds:0x79649f35,al
  420cee:	pop    esp
  420cef:	push   es
  420cf0:	(bad)  
  420cf1:	mov    bl,BYTE PTR [ebx-0x3d8b8724]
  420cf7:	sahf   
  420cf8:	int    0x35
  420cfa:	int    0x92
  420cfc:	into   
  420cfd:	test   al,0xe0
  420cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d00:	lock or BYTE PTR [esi+ebx*2],0x80
  420d05:	imul   ebp,DWORD PTR [edx-0x28c6078a],0xc072c38a
  420d0f:	int    0x8c
  420d11:	lahf   
  420d12:	dec    ebx
  420d13:	ja     0x420ce1
  420d15:	sti    
  420d16:	daa    
  420d17:	mov    DWORD PTR [ebx],ebx
  420d19:	inc    ecx
  420d1a:	sub    al,0x7b
  420d1c:	dec    ebx
  420d1d:	mov    esi,0x2aa59624
  420d22:	fucomp st(3)
  420d24:	push   DWORD PTR [eax+ebx*1-0x7a]
  420d28:	nop
  420d29:	inc    ecx
  420d2a:	int    0xb9
  420d2c:	push   ecx
  420d2d:	jb     0x420d81
  420d2f:	dec    edx
  420d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d31:	inc    eax
  420d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d33:	jg     0x420d61
  420d35:	test   eax,0x57ad86d5
  420d3a:	push   ecx
  420d3b:	xchg   ebx,eax
  420d3c:	and    DWORD PTR [edx+ebp*2+0x4f],0x190ad0b2
  420d44:	fild   DWORD PTR [ebp+ecx*1+0x4d466f01]
  420d4b:	push   ss
  420d4c:	ss int3 
  420d4e:	jecxz  0x420d57
  420d50:	fnsave [ebx]
  420d52:	pusha  
  420d53:	add    edx,eax
  420d55:	add    al,0xde
  420d57:	pop    edi
  420d58:	loop   0x420d49
  420d5a:	mov    bl,0x6e
  420d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5d:	sub    dl,BYTE PTR [ecx]
  420d5f:	outs   dx,DWORD PTR ds:[esi]
  420d60:	or     eax,0x2fc7f2da
  420d65:	sbb    eax,0xff2d3f0d
  420d6a:	stos   BYTE PTR es:[edi],al
  420d6b:	sub    al,0x2b
  420d6d:	dec    ebp
  420d6e:	pop    edx
  420d6f:	ins    BYTE PTR es:[edi],dx
  420d70:	adc    ebp,0xffffffb3
  420d73:	in     al,dx
  420d74:	mov    ebp,DWORD PTR [eax]
  420d76:	xchg   ebx,eax
  420d77:	jmp    0x4c1d:0x2e668720
  420d7e:	sbb    al,0xc9
  420d80:	jge    0x420dd4
  420d82:	mov    bh,0x63
  420d84:	imul   ebp,DWORD PTR [esi-0x17],0xffffffbf
  420d88:	nop
  420d89:	jno    0x420dbf
  420d8b:	dec    BYTE PTR [edi]
  420d8d:	les    ebx,FWORD PTR [edi+0x3b5b62c0]
  420d93:	mov    BYTE PTR [esi+eax*2+0x5108cb5b],bl
  420d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d9b:	jecxz  0x420d4c
  420d9d:	xchg   ebp,ebp
  420d9f:	dec    edi
  420da0:	stos   DWORD PTR es:[edi],eax
  420da1:	jne    0x420e10
  420da3:	dec    eax
  420da4:	mul    BYTE PTR [esp+ebp*4-0x5]
  420da8:	fild   DWORD PTR [ecx+0xbda8f2f]
  420dae:	cld    
  420daf:	inc    ebp
  420db0:	pop    esp
  420db1:	ja     0x420dd6
  420db3:	loopne 0x420d4f
  420db5:	das    
  420db6:	int3   
  420db7:	fcomp  DWORD PTR [ebx-0x5c]
  420dba:	mov    edi,0xe757e516
  420dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dc0:	mov    ebx,0xd9b22eba
  420dc5:	sbb    eax,0x28099e84
  420dca:	sub    al,0x22
  420dcc:	push   esi
  420dcd:	push   ds
  420dce:	mov    eax,0x52a90e50
  420dd3:	int3   
  420dd4:	sbb    esi,DWORD PTR [ecx-0x6d]
  420dd7:	sbb    ah,BYTE PTR [esi-0x3df73e86]
  420ddd:	call   0x361ea0e2
  420de2:	jb     0x420de1
  420de4:	dec    esp
  420de5:	adc    eax,0x6a3b3530
  420dea:	jno    0x420d93
  420dec:	les    ebx,FWORD PTR ds:0x1e626c37
  420df2:	mov    ch,0xff
  420df4:	mov    ecx,esp
  420df6:	jo     0x420e42
  420df8:	mov    WORD PTR [edx-0x545b0d88],cs
  420dfe:	push   ebx
  420dff:	test   al,0x12
  420e01:	pushf  
  420e02:	jl     0x420e4a
  420e04:	sub    DWORD PTR [edi],0x64
  420e07:	mov    ch,BYTE PTR [ecx]
  420e09:	dec    eax
  420e0a:	dec    ecx
  420e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e0c:	inc    ebp
  420e0d:	iret   
  420e0e:	and    bl,al
  420e10:	loope  0x420e50
  420e12:	jle    0x420e0b
  420e14:	xor    DWORD PTR es:[edi-0x4a],esp
  420e18:	aas    
  420e19:	xchg   ebx,eax
  420e1a:	xor    DWORD PTR [esi-0x3ea7e45a],edi
  420e20:	push   ds
  420e21:	jnp    0x420e95
  420e23:	push   ebx
  420e24:	stos   DWORD PTR es:[edi],eax
  420e25:	inc    edx
  420e26:	ds (bad) 
  420e28:	xor    BYTE PTR ss:[ecx],dl
  420e2b:	les    eax,FWORD PTR [eax-0x35]
  420e2e:	(bad)  
  420e2f:	lds    esp,FWORD PTR [ebx]
  420e31:	(bad)  
  420e32:	dec    eax
  420e33:	xchg   ecx,eax
  420e34:	ds sbb al,0x9c
  420e37:	xor    edx,DWORD PTR [ebp+0x73]
  420e3a:	sub    al,0x6b
  420e3c:	push   ds
  420e3d:	mov    bl,0x72
  420e3f:	mov    ?,WORD PTR [edi-0x74b143aa]
  420e45:	into   
  420e46:	lock inc eax
  420e48:	jo     0x420ec9
  420e4a:	jae    0x420de1
  420e4c:	out    dx,al
  420e4d:	mov    cs,WORD PTR gs:[esi+0x3dfc29c1]
  420e54:	iret   
  420e55:	jge    0x420eae
  420e57:	or     eax,0x90c3e0dd
  420e5c:	pop    ss
  420e5d:	jo     0x420e1e
  420e5f:	adc    al,0xcb
  420e61:	out    0x8f,eax
  420e63:	dec    esp
  420e64:	pop    esi
  420e65:	stos   BYTE PTR es:[edi],al
  420e66:	or     DWORD PTR [eax],eax
  420e68:	cmp    edx,edi
  420e6a:	sbb    ah,bh
  420e6c:	fisttp WORD PTR [ebx+0x44]
  420e6f:	mov    ecx,0x1cc8614
  420e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e75:	call   0x8f63:0x3b10fb95
  420e7c:	sub    BYTE PTR [eax+0x3a8771ec],bh
  420e82:	dec    esi
  420e83:	cmp    dh,BYTE PTR [edi]
  420e85:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e87:	test   al,0x5b
  420e89:	retf   
  420e8a:	icebp  
  420e8b:	leave  
  420e8c:	aaa    
  420e8d:	icebp  
  420e8e:	xor    ah,ch
  420e90:	sbb    BYTE PTR [esi],0x21
  420e93:	aad    0x8d
  420e95:	nop
  420e96:	jmp    0x9e66:0x5bfe6182
  420e9d:	sbb    eax,0x9ae0d366
  420ea2:	mov    edi,DWORD PTR [eax]
  420ea4:	repnz dec edi
  420ea6:	and    BYTE PTR [eax-0x2],dl
  420ea9:	mov    esi,DWORD PTR [esp+eiz*4]
  420eac:	or     al,0x9e
  420eae:	int3   
  420eaf:	mov    dl,0x4c
  420eb1:	pop    es
  420eb2:	dec    edi
  420eb3:	bound  esi,QWORD PTR [ebp+0x3f]
  420eb6:	jno    0x420e3a
  420eb8:	cmp    bh,ch
  420eba:	imul   ecx,ecx,0x4d
  420ebd:	add    dl,BYTE PTR [esi]
  420ebf:	(bad)  
  420ec1:	sbb    eax,0xef8e5b22
  420ec6:	push   0x749bd72f
  420ecb:	pop    ecx
  420ecc:	inc    edx
  420ecd:	stos   BYTE PTR es:[edi],al
  420ece:	jle    0x420e5e
  420ed0:	es data16 jmp 0x420efe
  420ed4:	dec    edx
  420ed5:	sub    DWORD PTR [edx+eax*1],esp
  420ed8:	jl     0x420f53
  420eda:	in     al,dx
  420edb:	dec    BYTE PTR [edi-0x52]
  420ede:	dec    esp
  420edf:	cli    
  420ee0:	xchg   esi,eax
  420ee1:	pushf  
  420ee2:	or     dl,BYTE PTR [ebx-0x3e]
  420ee5:	jmp    0x61441258
  420eea:	es (bad) 
  420eec:	aad    0x56
  420eee:	retf   0x18d5
  420ef1:	and    DWORD PTR [esi-0x28da090b],edi
  420ef7:	popa   
  420ef8:	sub    DWORD PTR [ebx-0x5a],edx
  420efb:	leave  
  420efc:	stos   DWORD PTR es:[edi],eax
  420efd:	inc    eax
  420efe:	jl     0x420f39
  420f00:	stos   BYTE PTR es:[edi],al
  420f01:	cli    
  420f02:	and    DWORD PTR [ebp-0x27],eax
  420f05:	inc    ecx
  420f06:	dec    esp
  420f07:	loope  0x420f60
  420f09:	xor    DWORD PTR [edx],ecx
  420f0b:	inc    ebp
  420f0c:	mov    esi,0x10233cf4
  420f11:	dec    esp
  420f12:	xor    cl,bh
  420f14:	aad    0xa8
  420f16:	pop    esp
  420f17:	bnd je 0x420ec2
  420f1a:	fnstenv [eax-0x7d]
  420f1d:	sub    bh,BYTE PTR [esp+ebp*2]
  420f20:	daa    
  420f21:	jg     0x420f12
  420f23:	in     al,0xe1
  420f25:	xchg   DWORD PTR [edi-0x50667a37],eax
  420f2b:	xchg   DWORD PTR [edx],ebp
  420f2d:	ins    DWORD PTR es:[edi],dx
  420f2e:	lods   eax,DWORD PTR cs:[esi]
  420f30:	fisttp WORD PTR [esi+0x6b09ca3c]
  420f36:	std    
  420f37:	mov    dh,0x3f
  420f39:	inc    sp
  420f3b:	mov    esi,0x26097c4e
  420f40:	fstp   TBYTE PTR [edi-0x58bd2405]
  420f46:	adc    ecx,DWORD PTR ds:0x5385ff73
  420f4c:	mov    BYTE PTR [ebx-0x3ae67a85],dh
  420f52:	dec    edx
  420f53:	xchg   edx,eax
  420f54:	dec    esi
  420f55:	mov    ch,0x5e
  420f57:	push   es
  420f58:	push   edi
  420f59:	cli    
  420f5a:	mov    edi,0xa29831fa
  420f5f:	inc    ecx
  420f60:	dec    ebx
  420f61:	xor    ah,al
  420f63:	xchg   BYTE PTR [edi],ah
  420f65:	repz sbb ebx,DWORD PTR [ebx]
  420f68:	pop    ebx
  420f69:	pop    ss
  420f6a:	push   eax
  420f6b:	leave  
  420f6c:	dec    esp
  420f6d:	xor    BYTE PTR [edi],0xc9
  420f70:	dec    dx
  420f72:	les    edi,FWORD PTR [edx-0x51]
  420f75:	ss out 0x5d,al
  420f78:	xchg   DWORD PTR [ebp+0x65],esp
  420f7b:	push   ebx
  420f7c:	adc    DWORD PTR [ecx],edi
  420f7e:	pop    ebp
  420f7f:	shl    BYTE PTR [esi],cl
  420f81:	or     al,0x5c
  420f83:	inc    edx
  420f85:	repnz mov ah,0xfe
  420f88:	add    BYTE PTR ds:0xe8376b25,0xa0
  420f8f:	dec    esi
  420f90:	cli    
  420f91:	test   esi,ebx
  420f93:	inc    DWORD PTR [ebx]
  420f95:	mov    WORD PTR [esi+edx*8],?
  420f98:	mov    ebp,0xa4ada8fe
  420f9d:	xor    al,0xb
  420f9f:	add    ecx,ebx
  420fa1:	fiadd  DWORD PTR [esp+ebp*1+0x462a01df]
  420fa8:	jne    0x420f68
  420faa:	jl     0x421007
  420fac:	stos   BYTE PTR es:[edi],al
  420fad:	jno    0x420f69
  420faf:	xor    al,BYTE PTR [ecx+0x5c]
  420fb2:	into   
  420fb3:	pop    es
  420fb4:	inc    esi
  420fb5:	fmul   DWORD PTR [edx-0x5c0779f4]
  420fbb:	jmp    0xf88b9a92
  420fc0:	dec    esi
  420fc1:	fidiv  WORD PTR [ecx+0x1d]
  420fc4:	jmp    0x420f4f
  420fc6:	lods   al,BYTE PTR ds:[esi]
  420fc7:	cwde   
  420fc8:	js     0x420f5e
  420fca:	gs and ah,al
  420fcd:	and    DWORD PTR [edi],esi
  420fcf:	ins    BYTE PTR es:[edi],dx
  420fd0:	jb     0x421043
  420fd2:	loope  0x420fef
  420fd4:	xor    ecx,esp
  420fd6:	aas    
  420fd7:	mov    BYTE PTR [edi-0x45],dh
  420fda:	and    eax,0x1368bb5c
  420fdf:	out    dx,eax
  420fe0:	scas   eax,DWORD PTR es:[edi]
  420fe1:	cld    
  420fe2:	mov    dh,BYTE PTR [esi+esi*2+0x6]
  420fe6:	fisubr WORD PTR [edi+ebx*8]
  420fe9:	lods   eax,DWORD PTR ds:[esi]
  420fea:	jmp    0x421008
  420fec:	dec    esi
  420fed:	aam    0x71
  420fef:	xchg   esp,eax
  420ff0:	or     DWORD PTR [edx],ebp
  420ff2:	dec    ebp
  420ff3:	mov    eax,0x7bed75b6
  420ff8:	sbb    dh,BYTE PTR ds:0xaaf8ab78
  420ffe:	mov    dl,bl
  421000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421001:	push   ds
  421002:	clc    
  421003:	dec    edi
  421004:	(bad)  
  421006:	daa    
  421007:	jo     0x420fc9
  421009:	sahf   
  42100a:	mov    BYTE PTR [ecx-0x2a0ea0f],0xeb
  421011:	pop    es
  421012:	xchg   ecx,eax
  421013:	mov    edi,0xde096654
  421018:	mov    eax,0xfcf250fc
  42101d:	mov    ah,0x50
  42101f:	sub    esi,DWORD PTR [ebp+0xec42c5f]
  421025:	out    dx,eax
  421026:	push   ecx
  421027:	stos   DWORD PTR es:[edi],eax
  421028:	xchg   ebx,eax
  421029:	jmp    0x420ff1
  42102b:	push   ebx
  42102c:	pop    DWORD PTR [edx]
  42102e:	cmp    eax,0xa599cde
  421033:	push   ecx
  421034:	imul   ecx,DWORD PTR [ecx],0xf41f54e8
  42103a:	push   0x1d
  42103c:	test   al,0x6b
  42103e:	in     al,0x1
  421040:	cld    
  421041:	sbb    al,0x52
  421043:	xor    al,0xa0
  421045:	cld    
  421046:	mov    esp,0x76d48d18
  42104b:	xchg   DWORD PTR [edx],ebx
  42104d:	push   cs
  42104e:	mov    ebx,0xba7b0db4
  421053:	aaa    
  421054:	lods   al,BYTE PTR ds:[esi]
  421055:	xchg   edi,eax
  421056:	or     esi,esp
  421058:	ja     0x42103f
  42105a:	loopne 0x42109f
  42105c:	cmp    BYTE PTR [edx-0x31],ah
  42105f:	add    DWORD PTR [ebx+0x19e9fa91],ebx
  421065:	popa   
  421066:	je     0x421008
  421068:	imul   esi,esp,0xf5c870db
  42106e:	lods   al,BYTE PTR ds:[esi]
  42106f:	icebp  
  421070:	mov    ah,0x3b
  421072:	loop   0x4210da
  421074:	retf   0xfb67
  421077:	lds    eax,FWORD PTR [ebx+0x28]
  42107a:	cmc    
  42107b:	pop    ebp
  42107c:	add    BYTE PTR [esi],0xc3
  42107f:	add    al,0xb4
  421081:	or     DWORD PTR [edi],ebx
  421083:	imul   edi,DWORD PTR [esi+0x4f11364],0x15
  42108a:	mov    bl,0x5c
  42108c:	pop    edi
  42108d:	dec    ebx
  42108e:	push   eax
  42108f:	aas    
  421090:	fcmovbe st,st(6)
  421092:	std    
  421093:	mov    dl,0xc2
  421095:	ins    BYTE PTR es:[edi],dx
  421096:	stos   DWORD PTR es:[edi],eax
  421097:	push   edx
  421098:	xchg   esp,eax
  421099:	sub    ah,BYTE PTR [eax+0xa492357]
  42109f:	push   ecx
  4210a0:	stos   BYTE PTR es:[edi],al
  4210a1:	clc    
  4210a2:	fs ins DWORD PTR es:[edi],dx
  4210a4:	mov    al,ds:0x73ccb715
  4210a9:	mov    ah,0xa0
  4210ab:	(bad)  
  4210ac:	cmp    al,0xf4
  4210ae:	or     edi,ecx
  4210b0:	lods   eax,DWORD PTR ds:[esi]
  4210b1:	inc    eax
  4210b2:	sar    al,0x38
  4210b5:	dec    edx
  4210b6:	lods   eax,DWORD PTR ds:[esi]
  4210b7:	daa    
  4210b8:	pop    ecx
  4210b9:	(bad)  
  4210ba:	cmp    dl,BYTE PTR [edx-0x4f5cb52]
  4210c0:	sbb    eax,0x3cedec70
  4210c5:	add    eax,0x44eeef74
  4210ca:	hlt    
  4210cb:	adc    al,0xeb
  4210cd:	(bad)  
  4210ce:	or     cl,BYTE PTR [edx-0x58]
  4210d1:	mov    ebx,0x8416ceb3
  4210d6:	fadd   QWORD PTR [ecx-0x54feb05f]
  4210dc:	sbb    esi,ecx
  4210de:	xlat   BYTE PTR ds:[ebx]
  4210df:	jp     0x42114c
  4210e1:	mov    cl,0xf1
  4210e3:	(bad)  
  4210e4:	sbb    eax,0x5cb017bf
  4210e9:	mov    ch,0x57
  4210eb:	outs   dx,BYTE PTR ds:[esi]
  4210ec:	inc    edi
  4210ed:	or     al,0x33
  4210ef:	outs   dx,DWORD PTR ds:[esi]
  4210f0:	das    
  4210f1:	xor    DWORD PTR [ebx+edi*1],esi
  4210f4:	push   ecx
  4210f5:	inc    esp
  4210f6:	pop    eax
  4210f7:	push   eax
  4210f8:	inc    esi
  4210f9:	cmp    eax,0x37b95c26
  4210fe:	cmp    eax,0x3fce1847
  421103:	jae    0x4210aa
  421105:	pushf  
  421106:	mov    ah,0x9b
  421108:	jp     0x421161
  42110a:	push   esp
  42110b:	jge    0x4210e2
  42110d:	adc    eax,0x52e1c593
  421112:	popa   
  421113:	add    edi,DWORD PTR [ebx-0x52df2afc]
  421119:	cmp    edi,0xa44390c1
  42111f:	jmp    0x74db206e
  421124:	les    ebx,FWORD PTR [ebp+0x7b95d90c]
  42112a:	into   
  42112b:	add    BYTE PTR ds:0x96dcc9b0,dl
  421131:	mov    edx,0xb2c36765
  421136:	jo     0x4210e6
  421138:	cmp    DWORD PTR [edi+0x35],ebx
  42113b:	jno    0x4211bb
  42113d:	xchg   esi,eax
  42113e:	cmp    DWORD PTR [edx+0x3c],ecx
  421141:	fisubr DWORD PTR [edi-0x60]
  421144:	and    eax,DWORD PTR [ecx]
  421146:	mov    ds:0x17c12693,al
  42114b:	jp     0x421195
  42114d:	mov    dh,cl
  42114f:	repz ss stc 
  421152:	pop    ecx
  421153:	push   ss
  421154:	cli    
  421155:	(bad)  
  421156:	fld    DWORD PTR [ebp+0x5f]
  421159:	xchg   ebx,eax
  42115a:	scas   eax,DWORD PTR es:[edi]
  42115b:	aaa    
  42115c:	clc    
  42115d:	lahf   
  42115e:	test   BYTE PTR [ebp+0x3f5dbc65],dh
  421164:	fisubr DWORD PTR [eax]
  421166:	mov    cs,WORD PTR [edi+0x4b]
  421169:	sti    
  42116a:	repnz fdivr st(7),st
  42116d:	dec    eax
  42116e:	sub    ecx,DWORD PTR [edi-0x42]
  421171:	arpl   WORD PTR [ecx],bp
  421173:	ret    
  421174:	cmp    BYTE PTR [esi],0x21
  421177:	js     0x4211ca
  421179:	jae    0x4211a9
  42117b:	ss enter 0x8e,0x0
  421180:	add    BYTE PTR [eax],al
  421182:	xchg   edi,ecx
  421184:	adc    ebp,DWORD PTR [edx]
  421186:	pop    ebx
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [edi-0x42164583],dl
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    ah,dh
  421197:	add    al,0x0
  421199:	add    ah,al
  42119b:	jmp    0x41d8792b
  4211a0:	hlt    
  4211a1:	les    esp,FWORD PTR [eax]
  4211a3:	into   
  4211a4:	xchg   ebp,eax
  4211a5:	imul   esi,ebp,0xffffffa2
  4211a8:	aam    0xb6
  4211aa:	jl     0x4211ba
  4211ac:	and    al,0x90
  4211ae:	nop
  4211af:	or     DWORD PTR [edi+0x138ff7a9],edx
  4211b5:	js     0x42120f
  4211b7:	mov    cl,0xd
  4211b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ba:	jno    0x4211fb
  4211bc:	out    0x35,al
  4211be:	pop    esi
  4211bf:	cli    
  4211c0:	out    dx,eax
  4211c1:	sub    DWORD PTR [edi],edx
  4211c3:	jecxz  0x4211d7
  4211c5:	and    eax,0xbaa35afc
  4211ca:	jle    0x421212
  4211cc:	cmp    al,0xec
  4211ce:	cmp    DWORD PTR [edi],edx
  4211d0:	adc    BYTE PTR ss:[esp+edi*8+0x64d382a0],ah
  4211d8:	mov    esp,0x46646bf4
  4211dd:	jp     0x421256
  4211df:	push   es
  4211e0:	(bad)  
  4211e1:	sub    DWORD PTR [ecx+ebx*1-0x67],edx
  4211e5:	sbb    DWORD PTR [esi-0x17],ebp
  4211e8:	mov    edx,0xb4857c46
  4211ed:	add    BYTE PTR [ecx],dl
  4211ef:	push   0x94a941fd
  4211f4:	int    0x9d
  4211f6:	push   edi
  4211f7:	mov    al,0x56
  4211f9:	or     esi,esp
  4211fb:	enter  0x4a01,0x56
  4211ff:	dec    edx
  421200:	fdiv   st(7),st
  421202:	pop    edx
  421203:	cs stos BYTE PTR es:[edi],al
  421205:	mov    edx,0xab9e4e6b
  42120a:	mov    cl,bh
  42120c:	call   0x9160:0x129bb263
  421213:	into   
  421214:	sti    
  421215:	shl    DWORD PTR [esi+0x5c],0x1b
  421219:	or     al,0x52
  42121b:	push   edi
  42121c:	cmp    esp,DWORD PTR [esp+esi*2+0x45]
  421220:	dec    esi
  421221:	fdivr  DWORD PTR [esi+ecx*4]
  421224:	pop    ebp
  421225:	repz jmp 0x5f53a30b
  42122b:	xchg   ebp,eax
  42122c:	(bad)  
  42122d:	push   ss
  42122e:	(bad)  
  42122f:	frstor [ebp+0x62bed81a]
  421235:	cdq    
  421236:	ss pop eax
  421238:	imul   edi,DWORD PTR [eax],0x50db3ba6
  42123e:	jle    0x4212a7
  421240:	outs   dx,BYTE PTR ds:[esi]
  421241:	sub    bl,BYTE PTR [edx]
  421243:	ja     0x421267
  421245:	test   DWORD PTR [edi],ebp
  421247:	sub    dh,BYTE PTR [eax-0x47e7580a]
  42124d:	data16 mov dh,0x96
  421250:	xlat   BYTE PTR ds:[ebx]
  421251:	mov    cl,0x28
  421253:	xor    eax,0x5fdf0072
  421258:	xor    eax,0x2525a08a
  42125d:	aam    0x9e
  42125f:	ret    0x54eb
  421262:	or     al,0x9f
  421264:	lods   al,BYTE PTR ds:[esi]
  421265:	mov    ah,0x7b
  421267:	hlt    
  421268:	call   0x5a0ddaf4
  42126d:	mov    DWORD PTR [ebx+0x1c9679cb],esp
  421273:	gs cwde 
  421275:	pop    ds
  421276:	in     al,dx
  421277:	xchg   esp,eax
  421278:	rcr    DWORD PTR [edx+0x2a],0xe5
  42127c:	mov    dl,0xee
  42127e:	and    dh,0x39
  421281:	int    0xd
  421283:	das    
  421284:	sub    ebp,DWORD PTR [ebp+edi*2+0x1c]
  421288:	ficom  WORD PTR [eax+0x2449e9a1]
  42128e:	dec    ecx
  42128f:	in     eax,0x3e
  421291:	inc    esp
  421292:	popf   
  421293:	not    BYTE PTR [edx+0x4b]
  421296:	dec    edi
  421297:	dec    eax
  421298:	sbb    esi,DWORD PTR [eax-0x34b4a88b]
  42129e:	inc    ecx
  42129f:	xchg   ebx,eax
  4212a0:	sbb    ch,BYTE PTR [esi+esi*8-0x3e]
  4212a4:	imul   ebp,ebx,0x19f80987
  4212aa:	inc    esi
  4212ab:	inc    edx
  4212ac:	mov    dh,0xc8
  4212ae:	add    eax,0x552149ed
  4212b3:	jno    0x421313
  4212b5:	mov    edi,esi
  4212b7:	sub    DWORD PTR [ebx],ecx
  4212b9:	add    ebp,DWORD PTR [esp+esi*4+0x16]
  4212bd:	or     eax,0x11adbad2
  4212c2:	inc    eax
  4212c3:	int3   
  4212c4:	rol    BYTE PTR [esi+0x60],0xc4
  4212c8:	call   0x252d:0x89176395
  4212cf:	stc    
  4212d0:	in     eax,0xdd
  4212d2:	mov    bl,0xe5
  4212d4:	jae    0x421310
  4212d6:	mov    eax,DWORD PTR [edx+0x6f]
  4212d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212da:	out    0xa5,al
  4212dc:	push   ds
  4212dd:	dec    ebp
  4212de:	jecxz  0x4212b8
  4212e0:	xchg   edx,eax
  4212e1:	fwait
  4212e2:	xor    BYTE PTR ss:[ebx],0x9e
  4212e6:	pop    ds
  4212e7:	dec    eax
  4212e8:	das    
  4212e9:	ror    BYTE PTR ds:0x76fe6b74,1
  4212ef:	push   ebx
  4212f0:	jmp    0x4212d8
  4212f2:	iret   
  4212f3:	fld    DWORD PTR [edx-0xfb5f0d4]
  4212f9:	cli    
  4212fa:	sub    edx,DWORD PTR [edi+0x7fa74e4a]
  421300:	or     cl,ah
  421302:	pop    edx
  421303:	mov    ecx,0x8ed63584
  421308:	add    BYTE PTR [ebp+0x1b],0xd6
  42130c:	test   ebx,ecx
  42130e:	mov    DWORD PTR [eax+esi*8-0x7f],edx
  421312:	dec    ecx
  421313:	iret   
  421314:	inc    edx
  421315:	mov    bl,0xcf
  421317:	xchg   BYTE PTR [edi-0x4cf5c201],dl
  42131d:	dec    ebx
  42131e:	cmp    al,0xdd
  421320:	jp     0x4212e4
  421322:	pop    ss
  421323:	or     eax,0xd2ac4ddf
  421328:	cld    
  421329:	div    BYTE PTR [eax-0x4869f508]
  42132f:	mov    esp,0xdf17717b
  421334:	mov    ch,0xdd
  421336:	(bad)  
  421337:	inc    ebp
  421338:	ins    BYTE PTR es:[edi],dx
  421339:	test   al,0xc7
  42133b:	mov    cl,ch
  42133d:	mov    ch,0x15
  42133f:	nop
  421340:	cmc    
  421341:	aam    0x90
  421343:	(bad)  
  421344:	fwait
  421345:	or     esp,DWORD PTR [ebx]
  421347:	loop   0x4212d2
  421349:	xor    al,0x60
  42134b:	not    DWORD PTR [eax-0x2522b6b1]
  421351:	jo     0x4213a3
  421353:	and    BYTE PTR [edx-0x55],bh
  421356:	sub    ecx,0xddb0dcad
  42135c:	in     eax,dx
  42135d:	adc    eax,0x21efaad3
  421362:	pop    esi
  421363:	sub    DWORD PTR [eax-0x66],edx
  421366:	in     al,dx
  421367:	cld    
  421368:	dec    edx
  421369:	stos   BYTE PTR es:[edi],al
  42136a:	pop    ss
  42136b:	fsub   DWORD PTR [ecx-0x4e]
  42136e:	rcl    ecx,cl
  421370:	in     eax,dx
  421371:	cmp    eax,0x4268e17c
  421376:	clc    
  421377:	daa    
  421378:	push   ebp
  421379:	push   ecx
  42137a:	(bad)  
  42137b:	sti    
  42137c:	in     eax,0xdc
  42137e:	fidiv  DWORD PTR [esp+ebx*8-0x1a193b92]
  421385:	popa   
  421386:	add    DWORD PTR [edx-0x63fe4792],ebp
  42138c:	fild   WORD PTR [esi+0x7348801f]
  421392:	mov    dl,BYTE PTR [ebp+eax*8-0x20]
  421396:	mov    ecx,DWORD PTR [ecx+0x67]
  421399:	push   eax
  42139a:	mov    eax,ds:0x7894eca2
  42139f:	scas   eax,DWORD PTR es:[edi]
  4213a0:	or     DWORD PTR [ebp+edi*1-0x2b],edx
  4213a4:	or     ebx,esi
  4213a6:	mov    dh,0x59
  4213a8:	les    edi,FWORD PTR [edi+0x41]
  4213ab:	cdq    
  4213ac:	push   cs
  4213ad:	dec    edx
  4213ae:	inc    eax
  4213af:	scas   eax,DWORD PTR es:[edi]
  4213b0:	aam    0xcd
  4213b2:	add    bl,BYTE PTR [ecx]
  4213b4:	cmp    BYTE PTR [ebp+0x5b9f05ed],al
  4213ba:	jns    0x4213eb
  4213bc:	or     ah,BYTE PTR [ecx+0x2567810d]
  4213c2:	test   DWORD PTR [eax+0x7f],esi
  4213c5:	xor    dl,BYTE PTR [esi+0xb]
  4213c8:	test   eax,0x1c3d692f
  4213cd:	test   bh,ch
  4213cf:	jmp    0x82c7:0x38ec1269
  4213d6:	imul   eax,DWORD PTR [ecx+0x208d7568],0xffffff9e
  4213dd:	push   esi
  4213de:	pop    ds
  4213df:	fs in  al,0x70
  4213e2:	adc    eax,0x508e1ad2
  4213e7:	pop    eax
  4213e8:	jp     0x42145c
  4213ea:	xchg   edx,eax
  4213eb:	mov    ah,0x68
  4213ed:	daa    
  4213ee:	and    eax,0xc87bec30
  4213f3:	xchg   edi,eax
  4213f4:	add    ah,al
  4213f6:	mov    esp,0xfc3db0a6
  4213fb:	push   0x42
  4213fd:	sbb    dl,BYTE PTR [eax+0x7b]
  421400:	js     0x4213c9
  421402:	mov    ah,0x11
  421404:	and    al,0x45
  421406:	in     al,0xfe
  421408:	fstp   DWORD PTR [esi]
  42140a:	mov    ch,0xb0
  42140c:	es pop esi
  42140e:	mov    esp,0x12973bce
  421413:	dec    ebx
  421414:	fsub   DWORD PTR [edx-0x2e]
  421417:	mov    al,ds:0x9b916233
  42141c:	repz sbb dh,BYTE PTR [esi+0x2d]
  421420:	gs jmp bx
  421424:	fnstenv [ebx]
  421426:	mov    al,0x91
  421428:	sar    BYTE PTR [eax],cl
  42142a:	ins    BYTE PTR es:[edi],dx
  42142b:	jmp    0x1f8e9362
  421430:	std    
  421431:	inc    esp
  421432:	mov    edx,0x332ae53a
  421437:	jns    0x4214ac
  421439:	jne    0x421406
  42143b:	jg     0x4214a2
  42143d:	dec    esp
  42143e:	cwde   
  42143f:	xchg   ebp,eax
  421440:	cli    
  421441:	imul   eax,DWORD PTR [ebp+eax*8+0x54],0xc38ec495
  421449:	rcr    BYTE PTR [edx-0x6f],1
  42144c:	cwde   
  42144d:	dec    ebx
  42144e:	fcom   st(1)
  421450:	jmp    0x51358464
  421455:	and    eax,0xa6f080a5
  42145a:	in     eax,0xc0
  42145c:	dec    edi
  42145d:	fsubp  st(6),st
  42145f:	and    edx,DWORD PTR [ebx]
  421461:	mov    ecx,0x533ca634
  421466:	sub    BYTE PTR [ecx+0x42],dh
  421469:	je     0x42149e
  42146b:	pushf  
  42146c:	nop
  42146d:	pusha  
  42146e:	push   cs
  42146f:	lock mov dl,bl
  421472:	loope  0x421441
  421474:	out    0x16,al
  421476:	sbb    edx,DWORD PTR [ebx]
  421478:	into   
  421479:	ins    DWORD PTR es:[edi],dx
  42147a:	inc    ecx
  42147b:	nop
  42147c:	ins    BYTE PTR es:[edi],dx
  42147d:	repz sub BYTE PTR ds:0x3f67b0af,bh
  421484:	fistp  QWORD PTR [ebx+0x51]
  421487:	mov    bh,0x50
  421489:	sti    
  42148a:	sub    eax,0x1edc87ea
  42148f:	xor    eax,0x1fc93dc
  421494:	mov    BYTE PTR [eax+ebp*2-0x7a7c711],bh
  42149b:	aam    0x5f
  42149d:	or     edi,DWORD PTR [edx]
  42149f:	rcl    dl,1
  4214a1:	xor    BYTE PTR [ebx-0x47fe1b95],dl
  4214a7:	adc    ch,BYTE PTR [edi+0x54574c83]
  4214ad:	sar    dl,1
  4214af:	jecxz  0x421492
  4214b1:	adc    ah,bh
  4214b3:	add    DWORD PTR [edx+0x75],esp
  4214b6:	scas   al,BYTE PTR es:[edi]
  4214b7:	cmp    ah,0xcb
  4214ba:	out    0x2,al
  4214bc:	mov    BYTE PTR [eiz*1-0x169036ec],cl
  4214c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c4:	pop    eax
  4214c5:	inc    esi
  4214c6:	sub    al,0x2a
  4214c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214c9:	cdq    
  4214ca:	ret    0xed89
  4214cd:	sahf   
  4214ce:	nop
  4214cf:	xor    BYTE PTR [ecx-0x44937a7f],al
  4214d5:	jns    0x4214ee
  4214d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d8:	jle    0x421483
  4214da:	lods   eax,DWORD PTR ds:[esi]
  4214db:	retf   
  4214dc:	in     al,dx
  4214dd:	xchg   ebp,eax
  4214de:	pushf  
  4214df:	cli    
  4214e0:	ins    BYTE PTR es:[edi],dx
  4214e1:	dec    ebp
  4214e2:	sub    ecx,DWORD PTR [eax]
  4214e4:	ret    0x12bf
  4214e7:	jae    0x421478
  4214e9:	mov    ecx,0xf2c7e770
  4214ee:	out    dx,al
  4214ef:	xchg   esi,eax
  4214f0:	test   al,0x8d
  4214f2:	adc    eax,0xe25b1f21
  4214f7:	push   edi
  4214f8:	mov    bl,0x63
  4214fa:	je     0x421544
  4214fc:	adc    edi,esi
  4214fe:	pushf  
  4214ff:	ja     0x421549
  421501:	jmp    FWORD PTR [esi+0xc5e68d7]
  421507:	dec    esp
  421508:	xchg   DWORD PTR [edi-0x7e],edx
  42150b:	icebp  
  42150c:	inc    esi
  42150d:	ins    BYTE PTR es:[edi],dx
  42150e:	sub    DWORD PTR ds:0x56a9ff61,esi
  421514:	and    bh,al
  421516:	jne    0x42149d
  421518:	jns    0x42157e
  42151a:	lds    esp,FWORD PTR [ecx-0x2e4030bb]
  421520:	or     DWORD PTR [edx],0x75331ee2
  421526:	cmp    al,0x71
  421528:	ret    0xe624
  42152b:	stos   DWORD PTR es:[edi],eax
  42152c:	cli    
  42152d:	pop    esi
  42152e:	push   cs
  42152f:	je     0x421527
  421531:	cs popa 
  421533:	shl    DWORD PTR [eax+0x413f8622],cl
  421539:	push   ebp
  42153a:	std    
  42153b:	xchg   ebp,eax
  42153c:	out    0xa4,eax
  42153e:	mov    al,ds:0x5a843242
  421543:	and    ah,BYTE PTR [ecx+edx*2]
  421546:	(bad)  
  421547:	gs je  0x4214e6
  42154a:	callw  0xf672
  42154e:	xchg   edi,eax
  42154f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421550:	test   al,0xc3
  421552:	pop    es
  421553:	jo     0x4214e5
  421555:	aam    0xa4
  421557:	loop   0x4215a4
  421559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42155a:	scas   al,BYTE PTR es:[edi]
  42155b:	or     edi,ebp
  42155d:	sbb    DWORD PTR [esi],eax
  42155f:	push   esp
  421560:	ja     0x42151e
  421562:	ret    0x5a1e
  421565:	add    al,0xe0
  421567:	jae    0x4215a6
  421569:	inc    esp
  42156a:	lea    ebx,[edi]
  42156c:	loope  0x421560
  42156e:	ret    
  42156f:	xchg   ecx,eax
  421570:	lea    ebx,fs:[ebp-0x76]
  421574:	mov    eax,ds:0x687b3f0b
  421579:	pop    es
  42157a:	movzx  ebx,WORD PTR [bx-0x6e]
  42157f:	enter  0x4ac1,0x39
  421583:	adc    eax,0x970cf374
  421588:	jmp    0xd815:0x2dbf0dc3
  42158f:	push   edx
  421590:	sbb    al,0x34
  421592:	xchg   ebp,eax
  421593:	xor    bl,cl
  421595:	loop   0x421587
  421597:	and    eax,0xacdb11d3
  42159c:	mov    edx,0x55193df6
  4215a1:	push   edx
  4215a2:	push   0xffffffca
  4215a4:	sbb    ebp,DWORD PTR [edi+eax*4]
  4215a7:	mov    esi,0xf63ca36
  4215ac:	aaa    
  4215ad:	mov    BYTE PTR [edx-0x52e150b8],bl
  4215b3:	rcr    BYTE PTR [edi+0x70],1
  4215b6:	rcr    ebp,1
  4215b8:	and    al,0x4c
  4215bb:	daa    
  4215bc:	icebp  
  4215bd:	xchg   DWORD PTR [eax],ecx
  4215bf:	mov    bh,0x77
  4215c1:	mov    dl,0xd7
  4215c3:	mov    eax,0x1e934714
  4215c8:	fisttp DWORD PTR [esi+0x38]
  4215cb:	mov    esp,0xf58168f
  4215d0:	call   0xa375:0x6366d7de
  4215d7:	add    bl,BYTE PTR [ebx+0x521081d2]
  4215dd:	mov    ds:0x5f337817,eax
  4215e2:	fwait
  4215e3:	aad    0xe
  4215e5:	lock outs dx,DWORD PTR ds:[esi]
  4215e7:	div    BYTE PTR [ebp+eax*8-0x51]
  4215eb:	add    cl,bl
  4215ed:	inc    esp
  4215ee:	or     ecx,esp
  4215f0:	pop    ebp
  4215f1:	jae    0x421668
  4215f3:	jle    0x421642
  4215f5:	lahf   
  4215f6:	fdivr  QWORD PTR [ecx+eiz*2]
  4215f9:	push   0x56d3d550
  4215fe:	shl    dh,cl
  421600:	dec    ecx
  421601:	jns    0x4215b8
  421603:	cmp    dl,BYTE PTR [edx+0x67ab6d8e]
  421609:	mov    al,ds:0xaaac6342
  42160e:	pop    ebx
  42160f:	pop    ss
  421610:	add    al,0x9a
  421612:	adc    BYTE PTR [edi+0xd],0x66
  421616:	jns    0x421619
  421618:	push   edx
  421619:	nop
  42161a:	mov    WORD PTR [ebx-0x1f6369d7],ss
  421620:	arpl   WORD PTR [esi-0x5c32446f],dx
  421626:	xchg   ebx,eax
  421627:	arpl   sp,si
  421629:	add    al,0xa6
  42162b:	popa   
  42162c:	cmp    eax,0x90b6c56a
  421631:	mov    al,0x9e
  421633:	mov    eax,ds:0xf00c4976
  421638:	mov    ch,0xd0
  42163a:	movaps xmm1,xmm5
  42163d:	cmp    cl,BYTE PTR [edx-0x1b]
  421640:	popf   
  421641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421642:	or     al,0xf5
  421644:	rcr    DWORD PTR [esi-0xb],cl
  421647:	test   eax,0x370fbe22
  42164c:	pusha  
  42164d:	in     al,0x26
  42164f:	jl     0x4216a3
  421651:	jnp    0x421613
  421653:	and    eax,0xfe860258
  421658:	mov    ebp,0x726efd21
  42165d:	lahf   
  42165e:	call   0x17d:0x290572fb
  421665:	sti    
  421666:	idiv   BYTE PTR [edi]
  421668:	loop   0x42163f
  42166a:	lea    esp,ds:[ecx+0x5]
  42166e:	mov    dh,0x48
  421670:	mov    edx,0xe0a776ba
  421675:	dec    edx
  421676:	imul   ebp,DWORD PTR [ebx-0x6e],0xbd6e083
  42167d:	mov    edi,0x16197172
  421682:	test   eax,0x20e3cbd5
  421687:	push   es
  421688:	fmul   QWORD PTR [esi-0x2d]
  42168b:	cmc    
  42168c:	dec    edi
  42168d:	aas    
  42168e:	add    BYTE PTR [eax],al
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x8c9595c6
  4216a1:	mov    ch,0xb1
  4216a3:	nop
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	hlt    
  4216a7:	add    al,0x0
  4216a9:	add    BYTE PTR [ecx-0x4bf23284],dh
  4216af:	pop    edi
  4216b0:	daa    
  4216b1:	(bad)  
  4216b2:	mov    esi,0xe5805ae5
  4216b7:	mov    bl,0x22
  4216b9:	mov    esi,esi
  4216bb:	clc    
  4216bc:	int3   
  4216bd:	fwait
  4216be:	shl    ah,cl
  4216c0:	sub    dh,bl
  4216c2:	in     al,0x78
  4216c4:	nop
  4216c5:	or     BYTE PTR [ebp+0x10441750],0x5b
  4216cc:	mov    al,ds:0xe0306706
  4216d1:	sub    DWORD PTR [eax],esp
  4216d3:	add    cl,cl
  4216d5:	push   0xae817280
  4216da:	push   ecx
  4216db:	test   al,0x81
  4216dd:	fs aaa 
  4216df:	mov    al,0x7a
  4216e1:	jbe    0x42167f
  4216e3:	jmp    0x4216b5
  4216e5:	inc    esi
  4216e6:	(bad)  
  4216e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e8:	retf   0xb42e
  4216eb:	inc    ebx
  4216ec:	popa   
  4216ed:	fild   WORD PTR [ebx+ebp*8+0x21]
  4216f1:	call   0xbfa67281
  4216f6:	xchg   ecx,eax
  4216f7:	jne    0x42176c
  4216f9:	clc    
  4216fa:	cmp    BYTE PTR [edx],0x8c
  4216fd:	daa    
  4216fe:	mov    ebp,0x3a74a9cb
  421703:	fidivr WORD PTR [ebp+0x21]
  421706:	adc    ch,BYTE PTR [ecx-0x37]
  421709:	xor    BYTE PTR [edx+esi*8],dl
  42170c:	icebp  
  42170d:	ficom  DWORD PTR [edx]
  42170f:	fadd   QWORD PTR [ebx]
  421711:	dec    esi
  421712:	sub    cl,dh
  421714:	cli    
  421715:	aad    0xb1
  421717:	fwait
  421718:	jmp    0xce9dc0b6
  42171d:	push   es
  42171e:	(bad)  
  42171f:	call   0x7787b529
  421724:	lea    edi,[ebx]
  421726:	push   cs
  421727:	or     DWORD PTR [edi+edi*2],ecx
  42172a:	and    ebp,DWORD PTR [edi-0x5a]
  42172d:	inc    ebx
  42172e:	adc    ah,BYTE PTR [eax+ebp*4-0x7d]
  421732:	or     dh,dh
  421734:	push   eax
  421735:	add    bl,BYTE PTR [esi+esi*1+0x5692df41]
  42173c:	mov    bh,0xaa
  42173e:	pop    ebx
  42173f:	lock ror BYTE PTR [edi],0x88
  421743:	mov    ebx,ecx
  421745:	addr16 xchg ebp,eax
  421747:	push   esp
  421748:	and    DWORD PTR [esi],0xffffffe6
  42174b:	jns    0x42174b
  42174d:	retf   0x61f0
  421750:	clc    
  421751:	mov    al,0x9d
  421753:	mov    edx,DWORD PTR [edx]
  421755:	adc    dl,BYTE PTR [esp+eax*1+0x78bb351a]
  42175c:	dec    esi
  42175e:	ss es daa 
  421761:	mov    al,ds:0x3e16cac4
  421766:	aaa    
  421767:	xor    DWORD PTR [ecx+0x11],ebp
  42176a:	mov    edi,0xbab34bf6
  42176f:	test   DWORD PTR [edx+0x601b06d0],edi
  421775:	and    BYTE PTR [eax+0x8],dh
  421778:	or     ebp,0x62
  42177b:	jecxz  0x4217e2
  42177d:	or     BYTE PTR [esi+eiz*2],dl
  421780:	xlat   BYTE PTR ds:[ebx]
  421781:	out    dx,eax
  421782:	loop   0x421706
  421784:	pop    es
  421785:	dec    edx
  421786:	push   es
  421787:	loop   0x4217f6
  421789:	xor    cl,BYTE PTR [eax-0x30fcd9df]
  42178f:	rol    BYTE PTR ds:0x2540fd91,1
  421795:	pop    esi
  421796:	fnstenv [ecx-0x70]
  421799:	test   eax,0x13af3776
  42179e:	and    BYTE PTR [ebx-0x55e20a32],0x6b
  4217a5:	or     ebp,DWORD PTR [ebx+0x49]
  4217a8:	int3   
  4217a9:	cs jbe 0x4217b2
  4217ac:	jl     0x421810
  4217ae:	add    dl,BYTE PTR [esi]
  4217b0:	jg     0x421778
  4217b2:	jp     0x4217fd
  4217b4:	dec    edx
  4217b5:	and    ebx,DWORD PTR [ebx-0x27082361]
  4217bb:	xor    BYTE PTR [edx],al
  4217bd:	sub    edi,DWORD PTR [ecx+0x39]
  4217c0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217c2:	rcl    DWORD PTR [eax+0x220bd17d],cl
  4217c8:	pop    ss
  4217c9:	push   0x9c6a2e0e
  4217ce:	mov    al,ds:0x5769bf2b
  4217d3:	in     al,dx
  4217d4:	xlat   BYTE PTR ds:[ebx]
  4217d5:	in     al,0x7f
  4217d7:	jmp    0x4217e3
  4217d9:	addr16 pop ebx
  4217db:	xchg   edi,eax
  4217dc:	dec    ebx
  4217dd:	pop    ecx
  4217de:	jo     0x421810
  4217e0:	mov    edi,0x92c5658b
  4217e5:	or     ecx,ecx
  4217e7:	test   eax,0xbaff6755
  4217ec:	inc    edx
  4217ed:	pop    edx
  4217ee:	lea    edi,ds:0xb8cfde56
  4217f4:	sahf   
  4217f5:	cs scas eax,DWORD PTR es:[edi]
  4217f7:	jb     0x421794
  4217f9:	dec    edi
  4217fa:	sbb    edi,ecx
  4217fc:	jne    0x421875
  4217fe:	mov    ebp,edx
  421800:	ja     0x421817
  421802:	or     esp,edx
  421804:	aaa    
  421805:	jg     0x42187e
  421807:	xor    al,0x45
  421809:	pop    es
  42180a:	or     eax,0xa746cc64
  42180f:	div    BYTE PTR [eax-0x69c66008]
  421815:	xor    ebp,DWORD PTR [ebx+0x7db1d4d6]
  42181b:	cmp    BYTE PTR [ebx],cl
  42181d:	push   ds
  42181e:	aad    0xc6
  421820:	inc    ebp
  421821:	shld   DWORD PTR [edi-0x70],eax,cl
  421825:	or     eax,0x5fcdccf8
  42182a:	dec    eax
  42182b:	fwait
  42182c:	push   0x91ac8a72
  421831:	or     dl,BYTE PTR [ebp-0x36e3506b]
  421837:	push   es
  421838:	sub    eax,0x1dbed7b2
  42183d:	xchg   esp,eax
  42183e:	mov    ss,ebp
  421840:	pop    edi
  421841:	out    0x90,eax
  421843:	ret    
  421844:	aas    
  421845:	xor    al,0x8c
  421847:	sub    esp,edi
  421849:	es mov ebx,0x2de23b7d
  42184f:	push   ebx
  421850:	bound  ebp,QWORD PTR [ecx-0x6d]
  421853:	push   0x94ba10d6
  421858:	test   DWORD PTR ds:0xeba0a24c,0xc1c40779
  421862:	aas    
  421863:	lahf   
  421864:	sub    eax,0x7a5a0ebe
  421869:	xchg   ecx,eax
  42186a:	or     eax,0x446d4866
  42186f:	int    0x48
  421871:	push   ebx
  421872:	dec    esp
  421873:	inc    esp
  421874:	xor    BYTE PTR [ecx-0x69],dh
  421877:	sbb    al,0x4f
  421879:	mov    ebp,0xd56a9751
  42187e:	int    0x45
  421880:	push   esp
  421881:	das    
  421882:	mov    esp,0x3da05dc4
  421887:	cmp    BYTE PTR [esi-0x1f],0x9f
  42188b:	std    
  42188c:	lds    edx,FWORD PTR [esi+ebp*1-0x76db782f]
  421893:	inc    DWORD PTR [edx+edx*2-0x9a28941]
  42189a:	scas   al,BYTE PTR es:[edi]
  42189b:	fild   DWORD PTR [esi+0x3af43348]
  4218a1:	addr16 push esp
  4218a3:	or     esi,0x6a4c9d30
  4218a9:	cmc    
  4218aa:	(bad)  
  4218ab:	dec    edx
  4218ac:	push   ebx
  4218ad:	mov    eax,ds:0xbbee360e
  4218b2:	aam    0x38
  4218b4:	push   ebx
  4218b5:	mov    WORD PTR [eax+0x7801182d],gs
  4218bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218bc:	or     cl,bl
  4218be:	cmp    esi,0xffffffbc
  4218c1:	ret    0x3edb
  4218c4:	pop    ebx
  4218c5:	jns    0x42185c
  4218c7:	pushf  
  4218c8:	and    BYTE PTR [edx+edi*8-0x27b91ef4],dh
  4218cf:	dec    cx
  4218d1:	pop    edx
  4218d2:	cmc    
  4218d3:	iret   
  4218d4:	adc    edx,ebp
  4218d6:	ins    BYTE PTR es:[edi],dx
  4218d7:	xchg   esp,eax
  4218d8:	jne    0x421945
  4218da:	push   es
  4218db:	test   al,0x67
  4218dd:	pop    edx
  4218de:	cmp    eax,0x564c8a95
  4218e3:	xchg   ebx,eax
  4218e4:	sbb    DWORD PTR [edx+edx*2+0xe],ebp
  4218e8:	rcr    DWORD PTR [edi-0x69],1
  4218eb:	pop    DWORD PTR [ecx+0x13221918]
  4218f1:	lea    ebp,[ebp-0x66]
  4218f4:	(bad)  
  4218f5:	cmc    
  4218f6:	push   0xfffffff3
  4218f8:	sub    ah,BYTE PTR [edx-0x52]
  4218fb:	out    dx,al
  4218fc:	inc    edx
  4218fd:	stos   DWORD PTR es:[edi],eax
  4218fe:	or     esp,DWORD PTR [eax+esi*4]
  421901:	or     al,0x12
  421903:	and    BYTE PTR [edx+ecx*2+0x592b6b43],ch
  42190a:	or     edi,0xc133df10
  421910:	retf   0xfd1f
  421913:	add    eax,0x50071baa
  421918:	cmp    ebx,DWORD PTR [ebx+0x62]
  42191b:	xor    ebp,esp
  42191d:	ins    DWORD PTR es:[edi],dx
  42191e:	adc    DWORD PTR [ebx+esi*2],edx
  421921:	jnp    0x421964
  421923:	div    esp
  421925:	gs sbb al,0x67
  421928:	jecxz  0x4218c5
  42192a:	dec    si
  42192c:	mov    bh,0x64
  42192e:	push   edi
  42192f:	out    dx,eax
  421930:	rcl    BYTE PTR [ebx],cl
  421932:	mov    esi,0x7aa12340
  421937:	adc    al,0x98
  421939:	sub    al,0xc7
  42193b:	icebp  
  42193c:	inc    esi
  42193d:	je     0x421989
  42193f:	cmp    DWORD PTR [esi],edx
  421941:	push   esp
  421942:	out    0x95,eax
  421944:	push   ss
  421945:	jo     0x42194c
  421947:	mov    esp,0xf081b132
  42194c:	mov    ds:0xe64c6e4e,al
  421951:	cdq    
  421952:	fisubr DWORD PTR [edx]
  421954:	cmp    bl,BYTE PTR [ecx+0x5f]
  421957:	sbb    BYTE PTR [edi-0x18254617],bl
  42195d:	push   esi
  42195e:	jns    0x42192d
  421960:	aad    0x97
  421962:	mov    ch,BYTE PTR [edi-0xf]
  421965:	adc    al,0xc8
  421967:	adc    BYTE PTR [ecx+eiz*2],dl
  42196a:	push   edx
  42196b:	pop    ss
  42196c:	push   esi
  42196d:	arpl   WORD PTR [ecx+0x13],ax
  421970:	adc    DWORD PTR [eax-0x1f446627],eax
  421976:	xchg   ecx,eax
  421977:	push   esp
  421978:	pop    ds
  421979:	mov    dl,0xc1
  42197b:	push   edx
  42197c:	or     esi,DWORD PTR [ebx]
  42197e:	adc    dh,BYTE PTR [ebp+0x51ba408c]
  421984:	dec    esp
  421985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421986:	inc    edx
  421987:	jp     0x421955
  421989:	jb     0x42197e
  42198b:	pop    edi
  42198c:	mov    ah,0x21
  42198e:	(bad)  
  42198f:	cmp    al,0x88
  421991:	test   eax,0xfd87486d
  421996:	in     eax,dx
  421997:	rcl    DWORD PTR [ecx+0x2108ef95],0xc8
  42199e:	loope  0x4219b0
  4219a0:	mov    dl,0x5f
  4219a2:	clc    
  4219a3:	pop    ds
  4219a4:	xor    eax,0x5ad3aae7
  4219a9:	iret   
  4219aa:	lods   eax,DWORD PTR ds:[esi]
  4219ab:	xor    al,BYTE PTR [ebx-0x7aa8ad90]
  4219b1:	mov    es,WORD PTR [eax]
  4219b3:	xor    BYTE PTR [edi-0x6e830591],ch
  4219b9:	sub    edi,DWORD PTR [ecx]
  4219bb:	imul   esi,DWORD PTR [esi-0x68ac90c8],0xfffffff1
  4219c2:	in     eax,0x73
  4219c4:	or     eax,0x9791d80c
  4219c9:	inc    esp
  4219ca:	out    0x9c,eax
  4219cc:	pop    ebp
  4219cd:	push   0x1c50b62d
  4219d2:	xor    ecx,ebp
  4219d4:	repnz sbb dh,BYTE PTR [esi+0x66cb6913]
  4219db:	aam    0x7e
  4219dd:	add    BYTE PTR [ebx-0x145aa59b],ch
  4219e3:	jg     0x4219ce
  4219e5:	lods   al,BYTE PTR ds:[esi]
  4219e6:	pop    ecx
  4219e7:	daa    
  4219e8:	pop    es
  4219e9:	ficom  WORD PTR [ebx]
  4219eb:	push   0xf839beb5
  4219f0:	adc    BYTE PTR [ebp+ecx*2+0x48ef87e],ch
  4219f7:	add    bh,bl
  4219f9:	mov    DWORD PTR [eax-0xe],edx
  4219fc:	sub    al,0xa8
  4219fe:	jmp    0x421a16
  421a00:	rol    BYTE PTR [ecx],1
  421a02:	arpl   WORD PTR [eax-0x6f],ax
  421a05:	stc    
  421a06:	lods   al,BYTE PTR ds:[esi]
  421a07:	sub    BYTE PTR [edi+0x581e6f8c],bl
  421a0d:	mov    dh,0x3a
  421a0f:	ja     0x4219cf
  421a11:	mov    al,ds:0xa96276b7
  421a16:	mov    dh,0xb3
  421a18:	sahf   
  421a19:	fs into 
  421a1b:	inc    esi
  421a1c:	outs   dx,DWORD PTR ds:[esi]
  421a1d:	or     DWORD PTR [edx+edx*4],eax
  421a20:	or     eax,0xabd05453
  421a25:	sbb    DWORD PTR ds:0x3a928879,ecx
  421a2b:	and    DWORD PTR [ebx-0x18],edx
  421a2e:	mov    ss,WORD PTR [esi-0x28]
  421a31:	adc    DWORD PTR [edx+eax*4+0x35],eax
  421a35:	add    DWORD PTR [edi+0x5ea34e8f],0x73
  421a3c:	stos   BYTE PTR es:[edi],al
  421a3d:	popa   
  421a3e:	ja     0x421a30
  421a40:	or     DWORD PTR [esp+eiz*8-0x69],edx
  421a44:	mov    al,0xd6
  421a46:	sets   BYTE PTR [eax-0xb37f890]
  421a4d:	hlt    
  421a4e:	rol    BYTE PTR [ecx+edx*1],cl
  421a51:	hlt    
  421a52:	xor    DWORD PTR [ebx+ebp*1-0x45],esi
  421a56:	sub    DWORD PTR [eax],edi
  421a58:	mov    ds:0x7ef2133f,al
  421a5d:	outs   dx,BYTE PTR ds:[esi]
  421a5e:	repnz push esp
  421a60:	loope  0x421a09
  421a62:	into   
  421a63:	inc    esi
  421a64:	stos   DWORD PTR es:[edi],eax
  421a65:	shl    BYTE PTR [edi],cl
  421a67:	jne    0x421a4b
  421a69:	or     edi,esp
  421a6b:	mov    ebp,0x139a3363
  421a70:	pcmpgtb mm1,QWORD PTR [eax]
  421a73:	inc    ecx
  421a74:	add    eax,0x376617ad
  421a79:	loope  0x421acd
  421a7b:	add    al,0x2a
  421a7d:	fwait
  421a7e:	aam    0x65
  421a80:	xor    al,0xa4
  421a82:	push   ss
  421a83:	out    0x3f,eax
  421a85:	mov    ah,0x5
  421a87:	dec    ebx
  421a88:	dec    esp
  421a89:	(bad)  
  421a8a:	into   
  421a8b:	push   0xffffffc0
  421a8d:	sahf   
  421a8e:	or     eax,0xfedc3c56
  421a93:	or     ecx,DWORD PTR [ecx+ebx*4+0x4856ceeb]
  421a9a:	gs push ebp
  421a9c:	stc    
  421a9d:	push   esi
  421a9e:	mov    edx,0xc6540e13
  421aa3:	push   ebx
  421aa4:	mov    esi,DWORD PTR [eax]
  421aa6:	pop    ebp
  421aa7:	pop    edx
  421aa8:	adc    eax,0x13eead70
  421aad:	les    ebx,FWORD PTR [edx+0x7e]
  421ab0:	xor    edi,esp
  421ab2:	nop
  421ab3:	mov    WORD PTR [esi+0x400991aa],gs
  421ab9:	fxch   st(6)
  421abb:	jmp    0x2153:0x2ae623b2
  421ac2:	stos   DWORD PTR es:[edi],eax
  421ac3:	js     0x421b00
  421ac5:	jp     0x421ac7
  421ac7:	add    ch,dh
  421ac9:	xchg   edi,eax
  421aca:	das    
  421acb:	push   es
  421acc:	push   0x60
  421ace:	lods   eax,DWORD PTR ds:[esi]
  421acf:	pop    esi
  421ad0:	xor    eax,edx
  421ad2:	pushf  
  421ad3:	daa    
  421ad4:	cmp    al,0x50
  421ad6:	mov    ah,0x2b
  421ad8:	(bad)  
  421ad9:	out    dx,al
  421ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421adb:	jg     0x421b48
  421add:	rcr    DWORD PTR [edx+0x54],cl
  421ae0:	aam    0x6e
  421ae2:	call   0xdb24eafa
  421ae7:	into   
  421ae8:	cs xchg edi,eax
  421aea:	cmpxchg BYTE PTR [edx+0x4b0a134a],dh
  421af1:	mov    ch,0x51
  421af3:	(bad)  
  421af4:	jnp    0x421aca
  421af6:	call   0x31c3:0x63494955
  421afd:	int3   
  421afe:	add    edx,ebp
  421b00:	sar    BYTE PTR [edx+0x40],cl
  421b03:	adc    eax,0xd0161672
  421b08:	aaa    
  421b09:	dec    eax
  421b0a:	mov    WORD PTR [edx+0xb4ac7c1],cs
  421b10:	popa   
  421b11:	or     BYTE PTR [ebp-0x53b8b315],bl
  421b17:	cmp    DWORD PTR [ecx+0x2a51ee75],esp
  421b1d:	and    al,0xc0
  421b1f:	jns    0x421aaf
  421b21:	xchg   DWORD PTR [ebp+ebp*2+0x294e2e86],esi
  421b28:	popa   
  421b29:	dec    esp
  421b2a:	adc    BYTE PTR [edi-0x5f232778],dl
  421b30:	loopne 0x421bae
  421b32:	pop    ebp
  421b33:	xor    edi,0xc4bfca0f
  421b39:	ins    DWORD PTR es:[edi],dx
  421b3a:	push   eax
  421b3b:	xor    eax,0xa7d04c20
  421b40:	push   ecx
  421b41:	fmul   DWORD PTR [ecx]
  421b43:	ror    BYTE PTR [ebp-0x39fa6bea],cl
  421b49:	and    DWORD PTR [ebx+esi*4],eax
  421b4c:	clc    
  421b4d:	ret    0xe21f
  421b50:	loop   0x421b8e
  421b52:	test   al,0xcd
  421b54:	xor    ah,BYTE PTR [edi+edx*1-0x3c]
  421b58:	push   0xfffffff3
  421b5a:	mov    bl,0xf7
  421b5c:	jns    0x421b93
  421b5e:	mov    ds:0x7420014e,eax
  421b63:	add    BYTE PTR [edx+0x58],dl
  421b66:	push   ebx
  421b67:	xor    dl,bl
  421b69:	(bad)
  421b6c:	xor    al,0x28
  421b6e:	into   
  421b6f:	mov    esp,0xc721aa0
  421b74:	sbb    eax,0x6c6b85a3
  421b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b7a:	test   BYTE PTR [edi],0xc8
  421b7d:	repz ds sbb eax,0xfcfd0f06
  421b84:	jne    0x421b93
  421b86:	cld    
  421b87:	call   0xca57f21e
  421b8c:	pop    esi
  421b8d:	pop    es
  421b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b8f:	mov    bh,0x3
  421b91:	out    dx,al
  421b92:	test   eax,0xdd5e8fb
  421b97:	std    
  421b98:	nop
  421b99:	mov    ds:0x2fa88c9f,al
  421b9e:	add    BYTE PTR [eax],al
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0x6089:0xb2770da0
  421bb1:	in     eax,dx
  421bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	hlt    
  421bb7:	add    al,0x0
  421bb9:	add    BYTE PTR [eax+0x30f5d81e],bh
  421bbf:	stc    
  421bc0:	pop    es
  421bc1:	nop
  421bc2:	jne    0x421be5
  421bc4:	ss adc al,0xc7
  421bc7:	es mov esp,0xbde70000
  421bcd:	out    0x36,eax
  421bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd0:	mov    dh,0x54
  421bd2:	xor    al,0x54
  421bd4:	pop    esi
  421bd5:	mov    ebp,0x9ec8a948
  421bda:	xor    ebp,DWORD PTR [edx]
  421bdc:	lock jmp 0xab5ce349
  421be2:	sbb    BYTE PTR [esi-0x4d],bl
  421be5:	pusha  
  421be6:	pop    ss
  421be7:	push   es
  421be8:	pusha  
  421be9:	dec    edx
  421bea:	jo     0x421bba
  421bec:	xor    eax,0x8126d676
  421bf1:	je     0x421c22
  421bf3:	sbb    ebx,DWORD PTR [esi]
  421bf5:	test   eax,0x73540b06
  421bfa:	imul   ebx,ebp,0x2f
  421bfd:	push   ebx
  421bfe:	(bad)  
  421bff:	xchg   edi,eax
  421c00:	popa   
  421c01:	sbb    ch,bl
  421c03:	pop    esi
  421c04:	xor    al,0xce
  421c06:	mov    DWORD PTR [edx+0xffad34a],edx
  421c0c:	das    
  421c0d:	add    BYTE PTR ds:0x105d7335,al
  421c13:	and    esi,DWORD PTR [esi+0x7660c851]
  421c19:	push   eax
  421c1a:	mov    BYTE PTR [ecx],bh
  421c1c:	(bad)  
  421c1e:	or     al,0x55
  421c20:	and    DWORD PTR [eax+edi*2+0x608b883a],0x4b0a3fc5
  421c2b:	and    BYTE PTR [esi],0xea
  421c2e:	je     0x421bcd
  421c30:	sar    BYTE PTR [edi+0x6c],0xc4
  421c34:	jnp    0x421bfd
  421c36:	add    DWORD PTR [ebx+0x5619ae59],edi
  421c3c:	mov    ebp,0x900fbc28
  421c41:	jmp    0x2c:0xda31af79
  421c48:	jmp    0x6da0:0x70221a20
  421c4f:	sub    DWORD PTR [edx-0x6c],esi
  421c52:	inc    BYTE PTR [edi+0x75]
  421c55:	dec    ebx
  421c56:	push   0x3a
  421c58:	and    BYTE PTR [edi],0x2e
  421c5b:	jb     0x421c82
  421c5d:	dec    edx
  421c5e:	xor    WORD PTR [esi-0x2977271c],0x4a
  421c66:	mov    esp,0xf37d438d
  421c6b:	cmp    BYTE PTR [esi],cl
  421c6d:	lods   al,BYTE PTR ds:[esi]
  421c6e:	xor    bh,0x2f
  421c71:	mov    al,0x14
  421c73:	push   es
  421c74:	shl    dh,cl
  421c76:	or     eax,0x4bfcf098
  421c7b:	int3   
  421c7c:	test   al,0x51
  421c7e:	jmp    0x421c9b
  421c80:	pop    es
  421c81:	daa    
  421c82:	xchg   ebp,eax
  421c83:	inc    ebx
  421c84:	scas   eax,DWORD PTR es:[edi]
  421c85:	mov    ecx,0x783f326
  421c8a:	push   ecx
  421c8b:	mov    ss,WORD PTR [ecx-0x1635c0f2]
  421c91:	jge    0x421cbb
  421c93:	call   0xb52d:0x23aeb085
  421c9a:	movzx  edi,BYTE PTR [ebp+0x15cc289]
  421ca1:	mov    ebx,0xa2594d5d
  421ca6:	adc    DWORD PTR [ebp+0x5a],edx
  421ca9:	push   eax
  421caa:	test   al,0x94
  421cac:	ret    
  421cad:	(bad)  
  421cae:	jp     0x421d2d
  421cb0:	stc    
  421cb1:	and    eax,0xe390a05f
  421cb6:	addr16 call 0x4b43b852
  421cbc:	ret    0xddee
  421cbf:	loopne 0x421c4c
  421cc1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421cc3:	ficomp DWORD PTR [edx]
  421cc5:	push   cs
  421cc6:	loopne 0x421ced
  421cc8:	pop    ds
  421cc9:	(bad)
  421ccd:	(bad)  
  421cce:	addr16 inc ebx
  421cd0:	gs mov ebx,0x8cbf0bfe
  421cd6:	add    DWORD PTR ds:0xe80caa49,ebp
  421cdc:	arpl   WORD PTR [ecx],bx
  421cde:	loopne 0x421d52
  421ce0:	in     eax,dx
  421ce1:	push   es
  421ce2:	mov    ch,0x87
  421ce4:	neg    DWORD PTR [ebx+eiz*4+0x17ace917]
  421ceb:	lea    esp,ss:[edi+eax*2]
  421cef:	pusha  
  421cf0:	xor    ah,ah
  421cf2:	loope  0x421d0c
  421cf4:	inc    eax
  421cf5:	fcmovbe st,st(4)
  421cf7:	jbe    0x421d17
  421cf9:	adc    DWORD PTR [edi+0x44],eax
  421cfc:	test   BYTE PTR [esi-0x1403d37f],ch
  421d02:	out    0x70,eax
  421d04:	dec    ecx
  421d05:	inc    edi
  421d06:	pop    ebx
  421d07:	inc    esi
  421d08:	xor    al,0x7c
  421d0a:	(bad)  
  421d0b:	push   edx
  421d0c:	mov    bh,0x95
  421d0e:	sbb    BYTE PTR ds:[edi+0x52640bc7],0x6e
  421d16:	dec    ebx
  421d17:	sbb    al,0x99
  421d19:	mov    eax,ds:0xd3b5a459
  421d1e:	cmp    eax,0x61bb0821
  421d23:	xchg   ebp,eax
  421d24:	push   esp
  421d25:	nop
  421d26:	or     al,0x78
  421d28:	lea    edi,[esi-0x7f0a886f]
  421d2e:	fisub  DWORD PTR [edx-0x53]
  421d31:	mov    fs,WORD PTR [edx+eiz*2]
  421d34:	xchg   ebp,eax
  421d35:	arpl   sp,si
  421d37:	cli    
  421d38:	lods   eax,DWORD PTR ds:[esi]
  421d39:	cli    
  421d3a:	xor    eax,0x73523d36
  421d3f:	lods   eax,DWORD PTR ds:[esi]
  421d40:	mov    eax,ds:0x2eae3db1
  421d45:	xchg   edi,eax
  421d46:	out    dx,eax
  421d47:	sti    
  421d48:	into   
  421d49:	jp     0x421d6d
  421d4b:	std    
  421d4c:	cmp    al,0x50
  421d4e:	paddb  mm6,QWORD PTR [esi]
  421d51:	mov    dl,0x8
  421d53:	mov    dh,0xd
  421d55:	mov    edx,0x2bbe15f4
  421d5a:	or     BYTE PTR [eax],bh
  421d5c:	push   0x485984c4
  421d61:	adc    al,0x3f
  421d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d64:	mov    ecx,0x79e4144d
  421d69:	push   esp
  421d6a:	inc    ecx
  421d6b:	das    
  421d6c:	jne    0x421d1f
  421d6e:	ins    BYTE PTR es:[edi],dx
  421d6f:	push   esi
  421d70:	loope  0x421cf9
  421d72:	mov    ah,0x2a
  421d74:	dec    ebx
  421d75:	mov    ds:0x806e821b,eax
  421d7a:	mov    edx,0x61460597
  421d7f:	add    edx,DWORD PTR [ebp-0x7d08231a]
  421d85:	or     eax,ecx
  421d87:	mov    bh,0x7b
  421d89:	into   
  421d8a:	cmp    DWORD PTR [ebx-0x1a],eax
  421d8d:	xchg   edi,eax
  421d8e:	and    DWORD PTR [esi],edx
  421d90:	xchg   esp,eax
  421d91:	push   ecx
  421d92:	push   ecx
  421d93:	pop    esi
  421d94:	cld    
  421d95:	mov    ebp,0xd1133c9d
  421d9a:	push   edi
  421d9b:	mov    ebp,eax
  421d9d:	stos   BYTE PTR es:[edi],al
  421d9e:	cmp    ebp,DWORD PTR [ebx+0x5f3869fa]
  421da4:	sbb    edi,DWORD PTR [edx]
  421da6:	ds mov ebx,0x5a073489
  421dac:	xor    al,0x7a
  421dae:	call   0x9b66fb5f
  421db3:	cmp    BYTE PTR ds:0x8a63dabb,0x8b
  421dba:	std    
  421dbb:	loope  0x421d44
  421dbd:	(bad)  
  421dbe:	call   0xd5f7dd8d
  421dc3:	pop    edi
  421dc4:	outs   dx,BYTE PTR ds:[esi]
  421dc5:	pop    ebx
  421dc6:	outs   dx,BYTE PTR ds:[esi]
  421dc7:	mov    bl,0x8
  421dc9:	and    eax,0x8dff394c
  421dce:	inc    edx
  421dcf:	mov    edi,0xc2462e9b
  421dd4:	ror    esi,0xc7
  421dd7:	call   0x54f388a
  421ddc:	loop   0x421e31
  421dde:	mov    al,0xf8
  421de0:	out    0x64,eax
  421de2:	mov    bl,dl
  421de4:	and    bh,BYTE PTR [ebx+eax*1]
  421de7:	add    eax,ebx
  421de9:	scas   al,BYTE PTR es:[edi]
  421dea:	sbb    al,BYTE PTR [ebp+0x57]
  421ded:	and    al,BYTE PTR [ecx-0x59f5caf8]
  421df3:	das    
  421df4:	cmp    eax,0x85c378ca
  421df9:	xchg   esp,eax
  421dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dfb:	fstp   st(3)
  421dfd:	cwde   
  421dfe:	pop    ecx
  421dff:	pop    ecx
  421e00:	popf   
  421e01:	out    dx,al
  421e02:	mov    ecx,0x99ccb58d
  421e07:	push   ebp
  421e08:	or     BYTE PTR [edi+0x4d],ch
  421e0b:	jo     0x421e75
  421e0d:	(bad)  
  421e0e:	jl     0x421e82
  421e10:	jnp    0x421de0
  421e12:	mov    edi,0x12a8ee1c
  421e17:	or     DWORD PTR [ecx+eiz*1-0x3fbe5495],eax
  421e1e:	scas   al,BYTE PTR es:[edi]
  421e1f:	lods   eax,DWORD PTR ds:[esi]
  421e20:	icebp  
  421e21:	adc    al,0x57
  421e23:	inc    DWORD PTR [ebp+ebp*1+0x2c]
  421e27:	jmp    0x6083:0x8df0bb5e
  421e2e:	pop    ebp
  421e2f:	mov    esp,0x5836c878
  421e34:	sub    bh,0xda
  421e37:	mov    esi,0xda6ccedd
  421e3c:	popa   
  421e3d:	dec    ebp
  421e3e:	dec    esi
  421e3f:	push   ecx
  421e40:	adc    edi,eax
  421e42:	inc    esp
  421e43:	mov    ebp,0xd9443a27
  421e48:	in     al,0xbf
  421e4a:	mul    BYTE PTR [edi+0x7543aba0]
  421e50:	repz mov cl,0xf5
  421e53:	loopne 0x421def
  421e55:	xor    BYTE PTR [edx+0x92815a3],ah
  421e5b:	and    BYTE PTR [esi+0x3c],bl
  421e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e5f:	mov    ch,0x25
  421e61:	das    
  421e62:	jg     0x421e5a
  421e64:	mov    al,ds:0x8c9b1ef1
  421e69:	je     0x421e32
  421e6b:	(bad)  
  421e6c:	iret   
  421e6d:	retf   0xb6e1
  421e70:	mov    al,ds:0x37b4c7c3
  421e75:	adc    edx,esi
  421e77:	fild   DWORD PTR [ebx+0x7a]
  421e7a:	test   DWORD PTR ds:0x8e985d43,0xd12d6438
  421e84:	pop    ebp
  421e85:	ret    0x3622
  421e88:	stos   BYTE PTR es:[edi],al
  421e89:	pop    ebx
  421e8a:	inc    edi
  421e8b:	outs   dx,DWORD PTR ds:[esi]
  421e8c:	loop   0x421eb3
  421e8e:	push   esi
  421e8f:	mov    bh,0x48
  421e91:	xor    ebp,DWORD PTR [ecx-0x76]
  421e94:	cld    
  421e95:	sub    DWORD PTR [edi],edi
  421e97:	mov    dl,0x63
  421e99:	pusha  
  421e9a:	jp     0x421e48
  421e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9d:	shl    DWORD PTR [edx+ebx*4+0x3b],0x20
  421ea2:	push   edi
  421ea3:	jnp    0x421f1e
  421ea5:	pop    DWORD PTR [esi]
  421ea7:	mov    ecx,0x360fabb0
  421eac:	and    DWORD PTR [ecx+0x12cc9c02],0xffffff8d
  421eb3:	retf   
  421eb4:	imul   esi,DWORD PTR [edi-0x3b],0x3e5c45f6
  421ebb:	dec    ecx
  421ebc:	adc    dl,bh
  421ebe:	shl    DWORD PTR [ebp+0x41c943d1],0x9c
  421ec5:	imul   ecx,eax,0x56d39283
  421ecb:	rcl    BYTE PTR [esi],cl
  421ecd:	sahf   
  421ece:	out    dx,al
  421ecf:	cli    
  421ed0:	mov    cs,WORD PTR [eax+0x69ad54a4]
  421ed6:	(bad)  
  421ed7:	xchg   esi,eax
  421ed8:	push   ds
  421ed9:	mov    bh,0x13
  421edb:	hlt    
  421edc:	test   DWORD PTR [edx+eiz*4-0x4599e17e],esi
  421ee3:	jl     0x421e9d
  421ee5:	or     BYTE PTR [ebp+0x1f],bl
  421ee8:	jnp    0x421ed6
  421eea:	mov    edx,0x59ab87fe
  421eef:	add    eax,edi
  421ef1:	inc    esp
  421ef2:	pop    esi
  421ef3:	lods   eax,DWORD PTR ds:[esi]
  421ef4:	sub    esi,eax
  421ef6:	pop    es
  421ef7:	or     dl,BYTE PTR [ecx]
  421ef9:	jge    0x421ed5
  421efb:	aam    0x72
  421efd:	jp     0x421f56
  421eff:	cmp    BYTE PTR [ebx-0x3d],ch
  421f02:	and    al,0xa7
  421f04:	or     dh,ch
  421f06:	xchg   eax,esp
  421f08:	(bad)  [ecx+eax*2+0x4f]
  421f0c:	mov    ss,WORD PTR [ecx]
  421f0e:	cmp    eax,DWORD PTR [edi+0x5504830]
  421f14:	daa    
  421f15:	fucomp st(7)
  421f17:	xchg   edi,eax
  421f18:	aaa    
  421f19:	xor    esi,ebx
  421f1b:	sbb    DWORD PTR [eax],edi
  421f1d:	shr    BYTE PTR [edx+0x7245fd16],1
  421f23:	xor    eax,0x4c96f83e
  421f28:	or     esi,DWORD PTR [ebp-0xd]
  421f2b:	push   esp
  421f2c:	jbe    0x421eb6
  421f2e:	xchg   DWORD PTR [ebx],eax
  421f30:	adc    esp,ebx
  421f32:	les    edx,FWORD PTR [edi+0x67]
  421f35:	cli    
  421f36:	sub    DWORD PTR [edx-0x7b12b8d4],esp
  421f3c:	jmp    DWORD PTR [edx+0x35]
  421f3f:	fnstsw WORD PTR [edi+0x6fa4b558]
  421f45:	pop    ecx
  421f46:	inc    ebx
  421f47:	fwait
  421f48:	cmp    al,0x74
  421f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f4b:	xchg   esi,eax
  421f4c:	rcl    BYTE PTR [ecx],cl
  421f4e:	ss ret 0x82b8
  421f52:	fisub  WORD PTR [esi]
  421f54:	xchg   ecx,eax
  421f55:	sub    al,BYTE PTR [edx+0x1b94393e]
  421f5b:	and    edi,DWORD PTR [edi]
  421f5d:	fld    TBYTE PTR [edx-0x6e]
  421f60:	(bad)  
  421f62:	fdiv   DWORD PTR [esi]
  421f64:	dec    ebp
  421f65:	sbb    al,0xf
  421f67:	cli    
  421f68:	je     0x421fa4
  421f6a:	push   ss
  421f6b:	mov    ds:0x8405597c,al
  421f70:	add    DWORD PTR [eax-0xe],ebx
  421f73:	xor    esp,esp
  421f75:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  421f77:	mov    al,BYTE PTR [ebx]
  421f79:	or     al,cl
  421f7b:	mov    edx,0x31994a05
  421f80:	and    ah,BYTE PTR [ebx-0x2c5dd3b7]
  421f86:	call   0x9b93bef4
  421f8b:	xchg   ebx,eax
  421f8c:	jmp    0x152d:0x47508324
  421f93:	push   es
  421f94:	inc    eax
  421f95:	pusha  
  421f96:	mov    esp,0x7fcb9490
  421f9b:	xor    eax,0x1aed6746
  421fa0:	paddd  mm7,QWORD PTR [ebp+0x77]
  421fa4:	call   0x92e7bf2c
  421fa9:	ss sbb al,0xa6
  421fac:	pushf  
  421fad:	lods   al,BYTE PTR ds:[esi]
  421fae:	sub    DWORD PTR [esi+0x3dcd0539],0xffffffda
  421fb5:	push   ss
  421fb6:	xchg   edx,eax
  421fb7:	test   DWORD PTR [edi-0x2cd0c205],0x8eb83104
  421fc1:	sub    DWORD PTR [ebp+0x30cc2c61],0xb181cd7c
  421fcb:	xchg   ebp,eax
  421fcc:	imul   edi,DWORD PTR [ebp-0x7b],0x99c448d9
  421fd3:	push   es
  421fd4:	ja     0x422048
  421fd6:	xor    BYTE PTR [esi+0x6e0f869d],dl
  421fdc:	dec    esi
  421fdd:	pop    edx
  421fde:	lods   eax,DWORD PTR ds:[esi]
  421fdf:	ret    0xa68b
  421fe2:	xor    DWORD PTR [edi+ebp*4-0x61002617],esp
  421fe9:	mov    edi,ss
  421feb:	dec    edi
  421fec:	mov    ecx,0x40681b7f
  421ff1:	push   ebp
  421ff2:	mov    bl,0x85
  421ff4:	(bad)  
  421ff5:	into   
  421ff6:	jl     0x42205a
  421ff8:	mov    edx,0xa15af105
  421ffd:	ins    DWORD PTR es:[edi],dx
  421ffe:	jmp    0x421f80
  422000:	adc    eax,0xf348823e
  422005:	ss inc edi
  422007:	(bad)  
  422008:	or     al,0x1c
  42200a:	das    
  42200b:	ja     0x42200c
  42200d:	fwait
  42200e:	shl    eax,cl
  422010:	ja     0x421fcb
  422012:	frstor es:[esi]
  422015:	mov    dl,BYTE PTR [ecx+0x5a]
  422018:	add    al,0x14
  42201a:	loope  0x422037
  42201c:	test   DWORD PTR [ecx+edx*1-0x1b],edi
  422020:	cdq    
  422021:	out    dx,al
  422022:	mov    dh,0x62
  422024:	loop   0x422027
  422026:	scas   eax,DWORD PTR es:[edi]
  422027:	loope  0x422060
  422029:	loope  0x42200e
  42202b:	fwait
  42202c:	adc    al,0x1e
  42202e:	jb     0x422031
  422030:	leave  
  422031:	xchg   ebp,eax
  422032:	sbb    cl,BYTE PTR ds:0x48ceed1
  422038:	mov    bh,BYTE PTR [ebp-0x54]
  42203b:	cdq    
  42203c:	inc    DWORD PTR [edi+eiz*4]
  42203f:	in     eax,dx
  422040:	push   cs
  422041:	push   es
  422042:	push   ebp
  422043:	fimul  DWORD PTR [edi-0x45167255]
  42204a:	rol    edx,1
  42204c:	mov    esi,0xa5ff565
  422051:	sbb    edi,DWORD PTR [esi+0x63eaea9d]
  422057:	cmp    al,0x4c
  422059:	lea    esi,[esi-0x74609fb3]
  42205f:	mov    ebx,0xbefb8cb8
  422064:	test   al,0x13
  422066:	jg     0x4220a3
  422068:	in     al,dx
  422069:	sub    BYTE PTR [edx],ch
  42206b:	pop    ecx
  42206c:	mov    al,0xe0
  42206e:	adc    eax,0xfd632871
  422073:	dec    ebx
  422074:	dec    esi
  422075:	dec    DWORD PTR [esi+0x47]
  422078:	(bad)  
  422079:	retf   0x6edb
  42207c:	sub    DWORD PTR [esi],ecx
  42207e:	mov    dh,0x26
  422080:	scas   al,BYTE PTR es:[edi]
  422081:	test   BYTE PTR [ebx],al
  422083:	dec    DWORD PTR [ebx+edx*2-0x51934912]
  42208a:	scas   al,BYTE PTR es:[edi]
  42208b:	push   0xffffffb4
  42208d:	test   BYTE PTR [eax],0xca
  422090:	push   cs
  422091:	sub    DWORD PTR [ecx-0x5c],ebx
  422094:	ror    DWORD PTR [eax+0x7f],cl
  422097:	(bad)  
  422098:	dec    esi
  422099:	mov    bh,0x6c
  42209b:	popf   
  42209c:	in     al,0x36
  42209e:	aad    0xa5
  4220a0:	inc    edi
  4220a1:	mov    esp,0x5b67976e
  4220a6:	lods   eax,DWORD PTR ds:[esi]
  4220a7:	daa    
  4220a8:	xchg   edi,eax
  4220a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220aa:	add    eax,eax
  4220ac:	xlat   BYTE PTR ds:[ebx]
  4220ad:	or     al,0x0
  4220af:	add    BYTE PTR [eax],al
  4220b1:	add    BYTE PTR [ecx],bh
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	jmp    0x9957d5a4
  4220c3:	call   0x0:0x4f40001
  4220ca:	xchg   edx,eax
  4220cb:	xbegin 0x215bad2
  4220d1:	inc    edi
  4220d2:	shl    DWORD PTR [edx],cl
  4220d4:	jno    0x4220c3
  4220d6:	mov    ecx,0x3d6d3c04
  4220db:	mul    esi
  4220dd:	test   BYTE PTR [ebx-0x10],0x24
  4220e1:	(bad)  
  4220e2:	out    dx,al
  4220e3:	aam    0x3a
  4220e5:	xchg   BYTE PTR [ecx-0x61489023],al
  4220eb:	push   ebx
  4220ec:	inc    esi
  4220ed:	xor    eax,0xa5b3c5ee
  4220f2:	push   ecx
  4220f3:	jmp    0xc6c6:0x53dfdd4b
  4220fa:	shl    DWORD PTR [edi+0x46],cl
  4220fd:	shl    DWORD PTR [ebx],1
  4220ff:	sub    BYTE PTR [ebp-0xb334aed],bh
  422105:	lds    ebx,FWORD PTR [ecx+0x68eaa3a9]
  42210b:	xchg   edx,eax
  42210c:	mov    cl,0xbb
  42210e:	jbe    0x4220b8
  422110:	icebp  
  422111:	mov    al,ds:0x85cd4455
  422116:	push   ss
  422117:	test   DWORD PTR [ebx+0x36],eax
  42211a:	das    
  42211b:	or     BYTE PTR [edi+0x750fde8e],dh
  422121:	pop    ebx
  422122:	cmp    eax,0xc076ac3e
  422127:	or     edx,DWORD PTR [edx]
  422129:	mov    BYTE PTR [edx+0x71],dl
  42212c:	mov    ch,0xb
  42212e:	ins    DWORD PTR es:[edi],dx
  42212f:	pop    ebx
  422130:	scas   eax,DWORD PTR es:[edi]
  422131:	adc    al,0x47
  422133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422134:	frstor [esp+edx*1+0x5a]
  422138:	enter  0xe3e4,0x6a
  42213c:	ss sbb al,0xe1
  42213f:	cmp    al,0x19
  422141:	scas   al,BYTE PTR es:[edi]
  422142:	jecxz  0x4220d5
  422144:	or     edi,DWORD PTR [ecx-0x3d]
  422147:	push   eax
  422148:	sbb    al,0x33
  42214a:	je     0x4220d2
  42214c:	jmp    0x33a:0x431330e2
  422153:	jne    0x4220ff
  422155:	mov    bh,0xba
  422157:	icebp  
  422158:	push   ds
  422159:	xchg   esp,eax
  42215a:	stc    
  42215b:	ret    
  42215c:	outs   dx,DWORD PTR ds:[esi]
  42215d:	pop    ebp
  42215e:	ins    DWORD PTR es:[edi],dx
  42215f:	mov    eax,ds:0x3fe06a3c
  422164:	mov    ds:0x7186685d,eax
  422169:	sub    esp,DWORD PTR [ebx-0x583b605a]
  42216f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422170:	les    ebp,FWORD PTR [edi-0x60b29227]
  422176:	out    0x1,eax
  422178:	sub    dh,bl
  42217a:	enter  0xb12a,0x3a
  42217e:	inc    esp
  42217f:	jmp    0xc853c414
  422184:	call   0x9330:0x818046d9
  42218b:	loop   0x4221ca
  42218d:	xor    DWORD PTR [esi+ecx*4+0x41],esi
  422191:	add    BYTE PTR ds:0x96ee04b8,cl
  422197:	lds    esi,FWORD PTR [ecx-0x33a11656]
  42219d:	cmp    BYTE PTR [edi-0x5a876744],dl
  4221a3:	or     BYTE PTR [ebp-0x4b6a32e4],ch
  4221a9:	stos   DWORD PTR es:[edi],eax
  4221aa:	in     eax,0xf
  4221ac:	jmp    0xd31b6d85
  4221b1:	rcl    DWORD PTR [ecx],cl
  4221b3:	lods   eax,DWORD PTR ds:[esi]
  4221b4:	add    ecx,edi
  4221b6:	xor    BYTE PTR [ebx],ch
  4221b8:	(bad)  
  4221b9:	xor    bh,BYTE PTR [esi]
  4221bb:	js     0x422152
  4221bd:	rcr    BYTE PTR [edi+0x5f],0x5e
  4221c1:	mov    DWORD PTR [eax],eax
  4221c3:	cmp    DWORD PTR [ecx-0x5e867261],edx
  4221c9:	pop    ecx
  4221ca:	cmp    eax,0x4f77485c
  4221cf:	cdq    
  4221d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221d1:	mov    edi,0x4a3f20
  4221d6:	mov    dl,BYTE PTR [edi-0x6fd5bcda]
  4221dc:	jnp    0x422206
  4221de:	jecxz  0x422198
  4221e0:	jmp    0x4221b6
  4221e2:	inc    ebx
  4221e3:	popf   
  4221e4:	jbe    0x4221e3
  4221e6:	dec    ebp
  4221e7:	imul   edx,DWORD PTR [ecx],0xac324b1c
  4221ed:	pop    ebp
  4221ee:	dec    edi
  4221ef:	dec    ebx
  4221f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f1:	shr    DWORD PTR [ebp+edi*8+0x2f],1
  4221f5:	jmp    0x30163e78
  4221fa:	repnz pop esi
  4221fc:	xchg   BYTE PTR [eax+0x1d],ch
  4221ff:	lea    ebp,ds:0xdfd1b880
  422205:	popf   
  422206:	xchg   ebp,eax
  422207:	in     eax,dx
  422208:	shr    DWORD PTR [esi+esi*8+0x29],0x56
  42220d:	xchg   edx,eax
  42220e:	mov    edi,DWORD PTR [edi]
  422210:	into   
  422211:	push   es
  422212:	mov    ebp,0x34ae2e82
  422217:	fisubr WORD PTR [esp+edi*4+0x7f]
  42221b:	push   ecx
  42221c:	cmc    
  42221d:	adc    eax,0x825d1333
  422222:	not    esi
  422224:	xchg   ebp,eax
  422225:	loopne 0x4221e7
  422227:	mov    eax,DWORD PTR [edi]
  422229:	daa    
  42222a:	add    edx,DWORD PTR [eax-0x4e]
  42222d:	aas    
  42222e:	addr16 lahf 
  422230:	ds mov ecx,0xa6357531
  422236:	pop    eax
  422237:	mov    al,ds:0xdc90ad5a
  42223c:	xor    al,BYTE PTR [esi-0x69]
  42223f:	or     BYTE PTR [edi+0x31],bl
  422242:	mov    bh,BYTE PTR [ebp-0xf4838b4]
  422248:	inc    eax
  422249:	mov    dh,0x1a
  42224b:	pop    ecx
  42224c:	nop
  42224d:	jecxz  0x42224a
  42224f:	fs scas eax,DWORD PTR es:[edi]
  422251:	pop    edi
  422252:	dec    ebx
  422253:	(bad)  
  422254:	nop
  422255:	(bad)
  422258:	pop    ds
  422259:	imul   esi,DWORD PTR [ebx],0xa0406517
  42225f:	pop    edi
  422260:	push   esi
  422261:	mov    al,0x32
  422263:	fimul  DWORD PTR [esi]
  422265:	mov    ebp,0x738fb6da
  42226a:	jmp    0xe96d57fb
  42226f:	or     DWORD PTR [edx+0x50],ecx
  422272:	lods   eax,DWORD PTR ds:[esi]
  422273:	data16 repnz fwait
  422276:	cmp    ebx,ebx
  422278:	sbb    DWORD PTR [ecx],edx
  42227a:	out    dx,eax
  42227b:	repnz fs in eax,0x8e
  42227f:	shl    BYTE PTR [eax-0x34],0xb
  422283:	pop    ecx
  422284:	sub    ch,BYTE PTR [ecx-0x56]
  422287:	lds    edi,FWORD PTR [ecx-0x687a913b]
  42228d:	xchg   ecx,eax
  42228e:	(bad)  
  42228f:	mov    edi,DWORD PTR [ebp+0x370782b2]
  422295:	mov    bl,0xfc
  422297:	and    edx,DWORD PTR [ebx+0x2f]
  42229a:	std    
  42229b:	or     esi,0x7a67f514
  4222a1:	loop   0x422260
  4222a3:	(bad)  
  4222a4:	adc    DWORD PTR fs:[ecx+0x63],esi
  4222a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a9:	add    dh,cl
  4222ab:	sahf   
  4222ac:	out    0xdf,al
  4222ae:	xchg   edi,eax
  4222af:	pop    es
  4222b0:	mov    BYTE PTR [ecx-0x2c],al
  4222b3:	into   
  4222b4:	dec    eax
  4222b5:	ret    0x143b
  4222b8:	in     al,0x58
  4222ba:	push   0xbb01dad5
  4222bf:	push   esi
  4222c0:	mov    dl,0xea
  4222c2:	or     ah,BYTE PTR [edi+0x5e0a0235]
  4222c8:	scas   eax,DWORD PTR es:[edi]
  4222c9:	cld    
  4222ca:	lahf   
  4222cb:	retf   
  4222cc:	clc    
  4222cd:	cmp    al,0x64
  4222cf:	nop
  4222d0:	inc    ebp
  4222d1:	mov    ss,WORD PTR [ebx+0x5e]
  4222d4:	or     eax,0x49e6da4b
  4222d9:	pop    esi
  4222da:	dec    ebx
  4222db:	out    0xdd,eax
  4222dd:	lock sbb BYTE PTR [esi-0x4ecf6f80],bh
  4222e4:	push   ss
  4222e5:	dec    esi
  4222e6:	bswap  esi
  4222e8:	dec    edx
  4222e9:	dec    esp
  4222ea:	gs dec ecx
  4222ec:	and    ebx,esi
  4222ee:	mov    dh,0xac
  4222f0:	dec    ebp
  4222f1:	mov    ecx,0xd744f781
  4222f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f7:	inc    edi
  4222f8:	div    BYTE PTR [edi+0x24]
  4222fb:	jb     0x4222ca
  4222fd:	push   esp
  4222fe:	les    ecx,FWORD PTR [eax+0x4b]
  422301:	push   ss
  422302:	dec    eax
  422303:	int3   
  422304:	daa    
  422305:	pop    eax
  422306:	data16 cmp dh,BYTE PTR [esi+0x2e242188]
  42230d:	fcom   st(2)
  42230f:	lods   eax,DWORD PTR ds:[esi]
  422310:	or     al,0x8
  422312:	aad    0x53
  422314:	jno    0x4222f3
  422316:	cwde   
  422317:	jg     0x4222f4
  422319:	sub    bl,bl
  42231b:	setg   al
  42231e:	stc    
  42231f:	mov    esi,?
  422321:	lds    esi,FWORD PTR [ebx-0x7b6fb967]
  422327:	xor    DWORD PTR [esi-0x5d936532],eax
  42232d:	sti    
  42232e:	jge    0x422391
  422330:	int    0xdc
  422332:	push   0xa087fc27
  422337:	mov    eax,ds:0x176c9db4
  42233c:	or     BYTE PTR [eax+eax*4+0x4fa31f19],0x14
  422344:	ror    al,0x8b
  422347:	outs   dx,BYTE PTR ds:[esi]
  422348:	sub    eax,0x6dd441e9
  42234d:	mov    BYTE PTR [edx+0x455e6481],0x30
  422354:	sbb    esi,ecx
  422356:	xor    BYTE PTR [eax+esi*2-0x45],cl
  42235a:	aas    
  42235b:	sub    eax,0xd2a80c5d
  422360:	sub    eax,0xaffcd5bb
  422365:	mov    cl,0x18
  422367:	pop    eax
  422368:	sbb    eax,0xb39c8530
  42236d:	push   ds
  42236e:	mov    ecx,0x580e7f50
  422373:	mov    dh,0x2f
  422375:	or     eax,0xfefc54b6
  42237a:	xor    eax,ebx
  42237c:	inc    ecx
  42237d:	jns    0x4223d5
  42237f:	adc    ecx,DWORD PTR [edx]
  422381:	mov    cl,cl
  422383:	scas   al,BYTE PTR es:[edi]
  422384:	inc    esp
  422385:	arpl   WORD PTR [edi],si
  422387:	dec    edx
  422388:	sub    DWORD PTR [edi-0x6d],0xffffffa8
  42238c:	dec    ebx
  42238d:	aas    
  42238e:	cdq    
  42238f:	jo     0x422396
  422391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422392:	mov    cs,WORD PTR [edx-0x33935900]
  422398:	repz shl dl,1
  42239b:	sub    eax,DWORD PTR [ecx+0x10db478e]
  4223a1:	leave  
  4223a2:	push   ss
  4223a3:	push   ebx
  4223a4:	dec    ebp
  4223a5:	inc    ebx
  4223a6:	push   esi
  4223a7:	fcom   QWORD PTR [ebp-0x7caf6dcb]
  4223ad:	int    0x76
  4223af:	jne    0x4223e4
  4223b1:	sbb    BYTE PTR [esi],0xc8
  4223b4:	hlt    
  4223b5:	or     cl,ch
  4223b7:	inc    ebp
  4223b8:	inc    edi
  4223b9:	mov    cl,0x64
  4223bb:	div    edi
  4223bd:	ret    0x4a7e
  4223c0:	imul   DWORD PTR [edi]
  4223c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223c3:	pop    eax
  4223c4:	mov    ebx,ds
  4223c6:	mov    eax,0x485da9ad
  4223cb:	push   ebx
  4223cc:	(bad)  
  4223ce:	cmp    esi,edi
  4223d0:	xchg   esp,eax
  4223d1:	adc    esi,DWORD PTR [ebp-0x80]
  4223d4:	push   ds
  4223d5:	ret    0x81eb
  4223d8:	mov    bh,0x9
  4223da:	push   eax
  4223db:	jnp    0x42243a
  4223dd:	pop    ecx
  4223de:	xchg   ebp,eax
  4223df:	push   edx
  4223e0:	daa    
  4223e1:	pop    ebx
  4223e2:	cmp    DWORD PTR [ecx+0x46],ebx
  4223e5:	fidivr WORD PTR [ebx-0x608247bb]
  4223eb:	aaa    
  4223ec:	xor    DWORD PTR ds:0x54b268fb,edi
  4223f2:	aaa    
  4223f3:	lea    eax,[edi]
  4223f5:	fs ret 0x9d8e
  4223f9:	pop    ebx
  4223fa:	push   cs
  4223fb:	add    ecx,DWORD PTR [ebp-0x3f]
  4223fe:	xchg   esp,eax
  4223ff:	or     DWORD PTR [esi+edi*1],0x495f5ef
  422406:	xor    BYTE PTR [ebp+0x7f],dl
  422409:	add    edx,DWORD PTR [ebp+0x4eb4c8ed]
  42240f:	retf   
  422410:	ins    DWORD PTR es:[edi],dx
  422411:	clc    
  422412:	retf   0xaea9
  422415:	jae    0x422476
  422417:	cdq    
  422418:	mov    ds:0xea0e4495,al
  42241d:	outs   dx,BYTE PTR ds:[esi]
  42241e:	jp     0x42248e
  422420:	adc    ah,dh
  422422:	jno    0x4223f7
  422424:	std    
  422425:	lods   eax,DWORD PTR ds:[esi]
  422426:	fs je  0x4223ee
  422429:	cmp    BYTE PTR [ebx-0x62],dl
  42242c:	mov    eax,ds:0x9c098c3d
  422431:	pop    ebp
  422432:	test   DWORD PTR [edi],ebp
  422434:	lds    eax,FWORD PTR [ecx+0x32]
  422437:	in     al,dx
  422438:	mov    bh,0xc9
  42243a:	pop    esi
  42243b:	sub    ch,BYTE PTR [edx-0x28]
  42243e:	dec    esp
  42243f:	adc    cl,BYTE PTR [edi]
  422441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422442:	call   0xb1d474d6
  422447:	xor    DWORD PTR [ebx+0x7105a6d],ebp
  42244d:	mov    ds:0xbc9c14d6,eax
  422452:	dec    eax
  422453:	cmp    BYTE PTR [edi+0x8],dl
  422456:	fwait
  422457:	outs   dx,BYTE PTR ds:[esi]
  422458:	jmp    0xba9cc3f4
  42245d:	test   BYTE PTR [ecx+0x42],dh
  422460:	pop    ecx
  422461:	imul   BYTE PTR [edx+0x74e22fc7]
  422467:	push   cs
  422468:	mov    ds:0x33b40e0e,eax
  42246d:	or     BYTE PTR [eax],dh
  42246f:	cwde   
  422470:	loopne 0x4224cd
  422472:	iret   
  422473:	jmp    0x4224d8
  422475:	pop    eax
  422476:	repnz xor al,0xf5
  422479:	repz jmp 0xf7d1e9fc
  42247f:	cmp    ch,BYTE PTR [edi+edx*2-0xae70af0]
  422486:	out    dx,al
  422487:	xchg   edi,eax
  422488:	addr16 push 0x25181a6a
  42248e:	pop    ebp
  42248f:	xor    edi,DWORD PTR [ecx]
  422491:	jne    0x422472
  422493:	sub    ebx,DWORD PTR [edi+0x5a]
  422496:	or     ebp,esi
  422498:	adc    dl,BYTE PTR [esp+edx*4+0x7a]
  42249c:	test   BYTE PTR [edi],bh
  42249e:	fld    DWORD PTR [esp+esi*2-0x76718f1d]
  4224a5:	dec    eax
  4224a6:	test   ah,0x49
  4224a9:	jae    0x422463
  4224ab:	jbe    0x4224a3
  4224ad:	mov    cl,0x5d
  4224af:	pop    esp
  4224b0:	dec    eax
  4224b1:	cmc    
  4224b2:	xor    bl,al
  4224b4:	sub    dl,0xdd
  4224b7:	sbb    ch,BYTE PTR [esi]
  4224b9:	pop    ebx
  4224ba:	clc    
  4224bb:	daa    
  4224bc:	repnz call 0x518b:0xac1d5ac3
  4224c4:	inc    ebp
  4224c5:	shr    DWORD PTR [edx+0x70],1
  4224c8:	lahf   
  4224c9:	or     ecx,DWORD PTR [ebx+0x4]
  4224cc:	sbb    DWORD PTR [ebp+0x31],ebx
  4224cf:	inc    esi
  4224d0:	in     eax,0x17
  4224d2:	bound  eax,QWORD PTR [ebx]
  4224d4:	sub    eax,0x6d5bcad4
  4224d9:	sar    BYTE PTR [edx-0x75],0x16
  4224dd:	inc    edx
  4224de:	das    
  4224df:	cmp    BYTE PTR [ecx-0x70bbb4ab],bl
  4224e5:	pop    ebx
  4224e6:	pusha  
  4224e7:	inc    ecx
  4224e8:	xchg   edx,eax
  4224e9:	call   0x73b3d2bd
  4224ee:	mov    eax,ds:0x812cedcf
  4224f3:	popf   
  4224f4:	pusha  
  4224f5:	ds xchg ebp,eax
  4224f7:	(bad)
  4224fb:	cdq    
  4224fc:	fimul  DWORD PTR [edi+0x417a3f7f]
  422502:	inc    edx
  422503:	mov    ds:0x769b1006,eax
  422508:	into   
  422509:	lea    cx,[edi]
  42250c:	push   0xffffffab
  42250e:	std    
  42250f:	xchg   ecx,eax
  422510:	sub    dl,BYTE PTR [edx]
  422512:	sbb    BYTE PTR [edx],cl
  422514:	call   0xf20eafc0
  422519:	xlat   BYTE PTR ds:[ebx]
  42251a:	and    ecx,DWORD PTR [ecx+0x5e]
  42251d:	stc    
  42251e:	jbe    0x4224f5
  422520:	fbld   TBYTE PTR [ebp+0x701c6f25]
  422526:	cmp    BYTE PTR [ebp-0x44c2e841],ch
  42252c:	je     0x422557
  42252e:	mov    bh,BYTE PTR [ebp+0xc447931]
  422534:	test   BYTE PTR fs:[eax-0x25569d5c],ah
  42253b:	add    DWORD PTR [edi-0x1f6f11d3],edx
  422541:	loope  0x42254f
  422543:	mov    ds:0x16b73b62,al
  422548:	shr    BYTE PTR [edi+0x2e9eba8e],1
  42254e:	imul   eax,eax,0xfb3e7205
  422554:	daa    
  422555:	es cdq 
  422557:	nop
  422558:	retf   
  422559:	iret   
  42255a:	mov    al,ds:0x617d908d
  42255f:	outs   dx,BYTE PTR ds:[esi]
  422560:	test   cl,bh
  422562:	stos   BYTE PTR es:[edi],al
  422563:	loop   0x42258b
  422565:	out    dx,al
  422566:	add    DWORD PTR [ebx],ebp
  422568:	cmp    al,0xee
  42256a:	mov    ah,0xc2
  42256c:	dec    edi
  42256d:	cmc    
  42256e:	dec    eax
  42256f:	(bad)  
  422570:	fistp  DWORD PTR [edx]
  422572:	mov    esi,edi
  422574:	cmp    esi,0xa906480f
  42257a:	retf   0x4f40
  42257d:	cmp    eax,0xfd490483
  422582:	adc    ebp,DWORD PTR [edx-0x80]
  422585:	lods   eax,DWORD PTR ds:[esi]
  422586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422587:	or     al,0xea
  422589:	ret    
  42258a:	(bad)  
  42258b:	push   ebx
  42258c:	cdq    
  42258d:	adc    eax,0xc0329155
  422592:	mov    dl,0xf5
  422594:	xor    esi,0x52
  422597:	shl    dh,0x8
  42259a:	and    al,0xb6
  42259c:	(bad)  
  42259d:	pusha  
  42259e:	and    al,BYTE PTR [edi]
  4225a0:	test   BYTE PTR [edi],cl
  4225a2:	mov    dl,0xb4
  4225a4:	and    al,0x6a
  4225a6:	inc    ebp
  4225a7:	pop    esp
  4225a8:	xchg   esp,eax
  4225a9:	js     0x422567
  4225ab:	mov    ds:0xaf127858,eax
  4225b0:	jb     0x42257f
  4225b2:	add    BYTE PTR [eax],dl
  4225b4:	mov    bh,0xb8
  4225b6:	adc    al,0x37
  4225b8:	and    eax,0x9e63b6ee
  4225bd:	mov    bl,0x0
  4225bf:	add    BYTE PTR [eax],al
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f8d:0xc62f815d
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	hlt    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR ds:0x7c7e79fd,ah
  4225df:	add    al,0x62
  4225e1:	and    BYTE PTR [ecx+0x35],ah
  4225e4:	iret   
  4225e5:	(bad)  
  4225e6:	test   BYTE PTR [ebp+0x43],dl
  4225e9:	dec    edi
  4225ea:	test   al,0x4
  4225ec:	add    DWORD PTR [ebp+0x5f],0x3b
  4225f0:	jmp    0xdff4:0xbc672913
  4225f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f8:	mov    cl,0x6
  4225fa:	push   ecx
  4225fb:	scas   eax,DWORD PTR es:[edi]
  4225fc:	xchg   esi,eax
  4225fd:	mov    edi,0x2f3f9c5d
  422602:	mov    DWORD PTR [ecx+0x31c5cde3],esp
  422608:	in     al,dx
  422609:	jmp    0xa750bcc
  42260e:	test   eax,0x5fa38f4f
  422613:	jp     0x422618
  422615:	add    BYTE PTR [ecx],0x8b
  422618:	inc    esi
  422619:	outs   dx,DWORD PTR ds:[esi]
  42261a:	repnz (bad) 
  42261c:	pop    eax
  42261d:	je     0x4225d3
  42261f:	ror    dl,1
  422621:	stos   BYTE PTR es:[edi],al
  422622:	xor    BYTE PTR [edx+0x3099f5e3],bl
  422628:	sbb    ch,BYTE PTR [ebp+0x2d031e95]
  42262e:	xchg   esp,ebp
  422630:	lock sub esi,DWORD PTR [ebx]
  422633:	lahf   
  422634:	ins    BYTE PTR es:[edi],dx
  422635:	pop    ecx
  422636:	push   ds
  422637:	lods   eax,DWORD PTR ds:[esi]
  422638:	sbb    eax,0x2319daa9
  42263d:	sbb    eax,0xb606f498
  422642:	adc    esi,ebp
  422644:	mov    ds:0x46f7585a,al
  422649:	and    dl,ch
  42264b:	pop    esi
  42264c:	in     al,0x10
  42264e:	retf   
  42264f:	scas   eax,DWORD PTR es:[edi]
  422650:	arpl   WORD PTR [edi+0x56],ax
  422653:	in     al,0x32
  422655:	daa    
  422656:	in     al,0xaf
  422658:	mov    dh,0xc7
  42265a:	mov    esi,0xf08e8ff4
  42265f:	push   es
  422660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422661:	retf   0x81bf
  422664:	sar    esi,cl
  422666:	mov    WORD PTR [esp+edx*4],ds
  422669:	mov    bh,0x13
  42266b:	pop    es
  42266c:	cmp    eax,DWORD PTR [esp+eiz*2]
  42266f:	mov    ch,0x41
  422671:	xchg   esi,edx
  422673:	and    edx,DWORD PTR [ebp+0x5a]
  422676:	cld    
  422677:	sbb    ebp,ecx
  422679:	(bad)  
  42267a:	test   BYTE PTR [eax-0x5b9272e2],ch
  422680:	cld    
  422681:	xor    edx,DWORD PTR [edx+0x71]
  422684:	ja     0x422693
  422686:	jne    0x4226fb
  422688:	xor    esp,DWORD PTR [ebp-0x62]
  42268b:	cmp    dh,BYTE PTR [ecx+0xa2d1e75]
  422691:	or     esi,DWORD PTR [edi]
  422693:	jb     0x422630
  422695:	jge    0x422713
  422697:	ss dec esi
  422699:	inc    eax
  42269a:	or     dl,ch
  42269c:	mov    ch,0x20
  42269e:	sbb    cl,BYTE PTR [edx]
  4226a0:	and    bl,BYTE PTR [eax+0x57da9746]
  4226a6:	push   0x204990d
  4226ab:	mov    ah,0xef
  4226ad:	loopne 0x422716
  4226af:	jecxz  0x4226c7
  4226b1:	xchg   BYTE PTR [esi-0x67],bl
  4226b4:	(bad)  
  4226b5:	ja     0x422667
  4226b7:	out    dx,al
  4226b8:	sub    DWORD PTR [ecx],ebp
  4226ba:	mov    ah,0xb6
  4226bc:	inc    edx
  4226bd:	fsin   
  4226bf:	sub    eax,0x9eb6b6f8
  4226c4:	test   BYTE PTR [esi+0x66],0x35
  4226c8:	ficomp DWORD PTR [edx]
  4226ca:	xchg   ebx,eax
  4226cb:	out    dx,eax
  4226cc:	sbb    BYTE PTR [esi+0x49],al
  4226cf:	ds scas al,BYTE PTR es:[edi]
  4226d1:	add    DWORD PTR [edx],esp
  4226d3:	retf   
  4226d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226d5:	outs   dx,DWORD PTR ds:[esi]
  4226d6:	add    ecx,ecx
  4226d8:	mov    bl,0xbe
  4226da:	aaa    
  4226db:	in     al,dx
  4226dc:	dec    edi
  4226dd:	scas   al,BYTE PTR es:[edi]
  4226de:	bound  ecx,QWORD PTR [edx-0x16]
  4226e1:	das    
  4226e2:	repnz push eax
  4226e4:	xchg   esi,eax
  4226e5:	sbb    al,0x68
  4226e7:	loope  0x422758
  4226e9:	lahf   
  4226ea:	jmp    0x4226c7
  4226ec:	xchg   ebx,eax
  4226ed:	pop    edx
  4226ee:	mov    cl,0xf5
  4226f0:	call   DWORD PTR [ebx]
  4226f2:	adc    edi,DWORD PTR [edx-0x5f181fc]
  4226f8:	gs retf 0x3a18
  4226fc:	sar    DWORD PTR [edx],1
  4226fe:	xchg   esi,eax
  4226ff:	sbb    al,0x35
  422701:	into   
  422702:	out    dx,al
  422703:	jae    0x4226f0
  422705:	xchg   esi,edx
  422707:	and    eax,DWORD PTR [ebp+0x1f]
  42270a:	cmp    ebp,DWORD PTR ds:0xd8cc0d15
  422710:	adc    al,0x9
  422712:	in     al,0x58
  422714:	sub    BYTE PTR [edi],bl
  422716:	push   eax
  422717:	mov    bh,0x24
  422719:	(bad)  [edx+eiz*1+0x783692b0]
  422720:	or     DWORD PTR [esi],esp
  422722:	into   
  422723:	xor    DWORD PTR [eax+0x49b669dc],edi
  422729:	jns    0x4226ad
  42272b:	push   0xffffffdd
  42272d:	les    eax,FWORD PTR [edi+0x79]
  422730:	and    eax,0xdc9aee43
  422735:	nop
  422736:	jp     0x4227af
  422738:	jns    0x4226bf
  42273a:	sub    al,0x77
  42273c:	cld    
  42273d:	cmc    
  42273e:	cmc    
  42273f:	xchg   esi,eax
  422740:	xchg   esp,eax
  422741:	loop   0x42274a
  422743:	sar    BYTE PTR [esp+eax*1],0x71
  422747:	das    
  422748:	sar    ebx,0xa5
  42274b:	test   al,0x3b
  42274d:	outs   dx,BYTE PTR ds:[esi]
  42274e:	stos   BYTE PTR es:[edi],al
  42274f:	mov    al,ds:0xb15538bb
  422754:	gs rcl esp,1
  422757:	cwde   
  422758:	nop
  422759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275a:	xchg   DWORD PTR [ebp+0x2b],esi
  42275d:	push   cs
  42275e:	pop    esp
  42275f:	sub    BYTE PTR [edi+ebp*1],cl
  422762:	ja     0x4227cd
  422764:	pushf  
  422765:	clc    
  422766:	jbe    0x42270e
  422768:	mov    bh,0xe1
  42276a:	fdivrp st(6),st
  42276c:	sar    BYTE PTR ds:[eax],0x4
  422770:	retf   
  422771:	clc    
  422772:	pop    ss
  422773:	and    DWORD PTR [ebp+0x56],esp
  422776:	rol    BYTE PTR [edi],cl
  422778:	loope  0x4226fa
  42277a:	or     al,0x4f
  42277c:	add    BYTE PTR [esi+0x76afd9e9],dh
  422782:	mov    al,0xa0
  422784:	push   esp
  422785:	cmc    
  422786:	mov    cl,0xb
  422788:	popa   
  422789:	pushf  
  42278a:	xchg   BYTE PTR [edi-0x53f50ebb],cl
  422790:	cli    
  422791:	dec    ebp
  422792:	cmp    al,0x6d
  422794:	mov    ebp,0xc201fbc3
  422799:	sbb    al,0xe6
  42279b:	fadd   QWORD PTR [esi]
  42279d:	pop    esi
  42279e:	jbe    0x42272a
  4227a0:	sbb    bh,bh
  4227a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a3:	sub    BYTE PTR [esi-0x2f],dl
  4227a6:	cmp    al,0x2
  4227a8:	mov    al,0x78
  4227aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227ab:	mov    esp,0xcd014f39
  4227b0:	xor    BYTE PTR [eax+eiz*1+0x2d],0xa6
  4227b5:	int    0x68
  4227b7:	fmul   QWORD PTR [ebx+0x2e]
  4227ba:	sub    edi,ebp
  4227bc:	sub    ebp,edi
  4227be:	xchg   edi,eax
  4227bf:	add    al,0x37
  4227c1:	mov    eax,ds:0xd33637d
  4227c6:	test   ebp,edi
  4227c8:	push   0xffffffa5
  4227ca:	sub    BYTE PTR [ecx],ch
  4227cc:	pop    esp
  4227cd:	sbb    BYTE PTR [ebx-0x4d7d20fc],0xe2
  4227d4:	shr    DWORD PTR [esi],1
  4227d6:	repz sahf 
  4227d8:	dec    eax
  4227d9:	xor    al,0xb
  4227db:	es dec BYTE PTR fs:[ebp-0x45]
  4227e0:	sahf   
  4227e1:	inc    edi
  4227e2:	outs   dx,DWORD PTR ds:[esi]
  4227e3:	push   ss
  4227e4:	jl     0x4227d8
  4227e6:	push   ebx
  4227e7:	sbb    al,0x31
  4227e9:	(bad)  
  4227ea:	pop    esi
  4227eb:	mov    esp,0x4a28b2c
  4227f0:	ja     0x422834
  4227f2:	sti    
  4227f3:	push   esi
  4227f4:	jp     0x4227d2
  4227f6:	mov    ebp,0xc613cea7
  4227fb:	dec    eax
  4227fc:	vpcmpgtw xmm0,xmm3,XMMWORD PTR [edx-0x80]
  422801:	pop    ebp
  422802:	ds loop 0x42286b
  422805:	adc    al,0x4c
  422807:	bnd je 0x422804
  42280a:	mov    ebp,0xdf364a3
  42280f:	adc    BYTE PTR [eax+0x75],dh
  422812:	mov    ah,0x9
  422814:	scas   al,BYTE PTR es:[edi]
  422815:	aam    0xdd
  422817:	dec    esp
  422818:	mov    ch,0x3b
  42281a:	or     ch,BYTE PTR [edx-0x40]
  42281d:	pop    esp
  42281e:	cmc    
  42281f:	cli    
  422820:	sub    edi,esp
  422822:	daa    
  422823:	adc    eax,DWORD PTR [edx]
  422825:	or     edi,0x22ad1efd
  42282b:	outs   dx,BYTE PTR ds:[esi]
  42282c:	jns    0x422809
  42282e:	hlt    
  42282f:	mov    ebp,0xdf9d840e
  422834:	mov    WORD PTR [edx+0x1d],?
  422837:	push   es
  422838:	in     al,dx
  422839:	xor    eax,0x5674c20a
  42283e:	nop
  42283f:	push   0xc2334d7d
  422844:	je     0x4228ae
  422846:	imul   esi,DWORD PTR [eax+0x61],0xc4433add
  42284d:	shr    BYTE PTR [eax+0x19],cl
  422850:	pop    edi
  422851:	jae    0x422897
  422853:	nop
  422854:	int3   
  422855:	cdq    
  422856:	adc    al,0xbd
  422858:	int    0x8f
  42285a:	jbe    0x42283f
  42285c:	jae    0x422804
  42285e:	call   0x4f71:0x416a0ebc
  422865:	mov    dh,0xe
  422867:	adc    BYTE PTR [edx],ah
  422869:	dec    esi
  42286a:	pop    edi
  42286b:	mov    gs,WORD PTR [ecx-0x62]
  42286e:	dec    edi
  42286f:	adc    DWORD PTR [edi+0x26],esi
  422872:	or     esi,DWORD PTR [esi-0x3d5f3daa]
  422878:	sbb    DWORD PTR [edx+ecx*8-0x765af1cb],edi
  42287f:	stc    
  422880:	jo     0x4228b1
  422882:	jae    0x422815
  422884:	xchg   BYTE PTR [edx+0x5c7a555b],dl
  42288a:	push   eax
  42288b:	jne    0x4228ad
  42288d:	test   esi,edx
  42288f:	fnop   
  422891:	imul   edx,ebx,0x65
  422894:	out    0x1f,eax
  422896:	mov    edx,0x99a83cd2
  42289b:	ret    0x74e2
  42289e:	sub    esi,edi
  4228a0:	les    edi,FWORD PTR [ecx+eiz*2-0x60]
  4228a4:	sbb    bl,al
  4228a6:	ds in  al,0x47
  4228a9:	adc    eax,DWORD PTR [esi-0x126e9ae5]
  4228af:	cli    
  4228b0:	jns    0x422837
  4228b2:	xlat   BYTE PTR ds:[ebx]
  4228b3:	mov    ebp,0x4a6574e0
  4228b8:	cmp    BYTE PTR [ebx+0x66],ch
  4228bb:	in     al,0x5b
  4228bd:	add    eax,0xff1d62d2
  4228c2:	jnp    0x422872
  4228c4:	je     0x4228de
  4228c6:	shl    BYTE PTR [eax+edi*2],cl
  4228c9:	pusha  
  4228ca:	lods   al,BYTE PTR ds:[esi]
  4228cb:	dec    esp
  4228cc:	loope  0x42291a
  4228ce:	sbb    BYTE PTR ds:0x4362f232,cl
  4228d4:	or     ecx,DWORD PTR ds:0xd5377dda
  4228da:	adc    dh,BYTE PTR [esi-0x5b076a4]
  4228e0:	out    0xdb,al
  4228e2:	adc    esi,DWORD PTR [esi+esi*4+0x36832d2e]
  4228e9:	mov    al,ds:0x9866e615
  4228ee:	pop    ebx
  4228ef:	and    al,0xab
  4228f1:	int3   
  4228f2:	cdq    
  4228f3:	xor    eax,DWORD PTR [ebx]
  4228f5:	and    dl,cl
  4228f7:	lds    eax,FWORD PTR [edi+0x57e84966]
  4228fd:	dec    ebp
  4228fe:	test   BYTE PTR [edx+eax*2-0x8],cl
  422902:	(bad)  
  422904:	inc    esp
  422905:	mov    esi,0x49c8ba6f
  42290a:	int    0x15
  42290c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42290d:	int    0xa
  42290f:	and    BYTE PTR [eax*4+0x3865275e],dh
  422916:	pop    ebp
  422917:	icebp  
  422918:	loop   0x422900
  42291a:	jl     0x422985
  42291c:	gs pop ds
  42291e:	adc    al,0x8e
  422920:	mov    ecx,0xb11455d
  422925:	adc    edx,DWORD PTR [ebx]
  422927:	xchg   ebp,ebx
  422929:	pop    ecx
  42292a:	inc    eax
  42292b:	enter  0x9ff7,0x1b
  42292f:	fidiv  DWORD PTR [eax+0x75]
  422932:	dec    ebp
  422934:	sbb    DWORD PTR [esi-0x5e24213b],ebx
  42293a:	retf   0x9ed
  42293d:	stc    
  42293e:	mov    dh,0x75
  422940:	pop    esp
  422941:	fisub  DWORD PTR [edx+0x25]
  422944:	cld    
  422945:	pop    ebp
  422946:	ret    0xd8ef
  422949:	jne    0x4228f0
  42294b:	fs mov bh,0xd4
  42294e:	stc    
  42294f:	or     DWORD PTR [eax+0x53],0x34
  422953:	or     ch,BYTE PTR [eax]
  422955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422956:	sahf   
  422957:	or     cl,dh
  422959:	shl    edi,0x59
  42295c:	dec    ebx
  42295d:	push   edi
  42295e:	mov    ds:0x4bfd37f6,eax
  422963:	mov    WORD PTR [esi],gs
  422965:	adc    eax,0xbd33ab87
  42296a:	dec    esp
  42296b:	lods   al,BYTE PTR ds:[esi]
  42296c:	mov    cl,0x78
  42296e:	cli    
  42296f:	shr    DWORD PTR [ebp-0x51],1
  422972:	adc    esp,0xfffffff9
  422975:	ins    DWORD PTR es:[edi],dx
  422976:	jb     0x422918
  422978:	loope  0x42299c
  42297a:	cld    
  42297b:	ins    BYTE PTR es:[edi],dx
  42297c:	pop    es
  42297d:	pop    ebp
  42297e:	push   es
  42297f:	cmp    edi,edi
  422981:	cwd    
  422983:	das    
  422984:	jbe    0x422919
  422986:	repnz and eax,0xc7df8c8f
  42298c:	pop    edx
  42298d:	mov    esi,0xd2c53452
  422992:	in     al,0xec
  422994:	ins    BYTE PTR es:[edi],dx
  422995:	lods   eax,DWORD PTR ds:[esi]
  422996:	rcr    BYTE PTR [bx-0x393e],1
  42299b:	lock adc ebp,esi
  42299e:	or     BYTE PTR [esi-0xdf0e960],0x5d
  4229a5:	xchg   BYTE PTR [ecx-0x20a6eb7d],dl
  4229ab:	push   edx
  4229ac:	rcl    cl,0x79
  4229af:	adc    ebp,DWORD PTR [esi+eax*8]
  4229b2:	pop    eax
  4229b3:	das    
  4229b4:	sub    ah,BYTE PTR [edx+0x3b]
  4229b7:	je     0x4229aa
  4229b9:	inc    ecx
  4229ba:	icebp  
  4229bb:	cdq    
  4229bc:	jmp    0x4229a0
  4229be:	sub    al,0xfc
  4229c0:	stc    
  4229c1:	fwait
  4229c2:	das    
  4229c3:	fist   WORD PTR [ebp-0x691a155c]
  4229c9:	lock cmc 
  4229cb:	ins    BYTE PTR es:[edi],dx
  4229cc:	(bad)  
  4229ce:	mov    ds:0xe05b18d,al
  4229d3:	jecxz  0x4229d9
  4229d5:	xchg   esp,eax
  4229d6:	(bad)  
  4229d7:	sub    DWORD PTR [ebp-0x1],ebp
  4229da:	sub    eax,0x97771a85
  4229df:	imul   ecx,esp,0xc262a1ea
  4229e5:	dec    esp
  4229e6:	dec    ebp
  4229e7:	ss es dec edi
  4229ea:	retf   
  4229eb:	jb     0x422a37
  4229ed:	xchg   ebp,eax
  4229ee:	jae    0x422a38
  4229f0:	in     al,0x87
  4229f2:	jae    0x4229c4
  4229f4:	in     eax,dx
  4229f5:	fdivr  st(1),st
  4229f7:	push   DWORD PTR [ecx+ecx*4-0x56cf1e61]
  4229fe:	rcr    BYTE PTR [ebp-0x6e244055],0xff
  422a05:	and    ebp,ebx
  422a07:	pop    ecx
  422a08:	dec    ebx
  422a09:	mov    ds,WORD PTR [eax-0x46]
  422a0c:	cli    
  422a0d:	loopne 0x4229b6
  422a0f:	mov    cl,0x8
  422a11:	std    
  422a12:	push   ds
  422a13:	data16 js 0x4229a4
  422a16:	in     eax,dx
  422a17:	mov    al,ds:0xe1e88ce6
  422a1c:	mov    al,ds:0xc35f54a2
  422a21:	pushf  
  422a22:	fld    DWORD PTR ds:0xe774824
  422a28:	and    DWORD PTR [eax-0x2ac47100],eax
  422a2e:	in     al,dx
  422a2f:	pop    edi
  422a30:	scas   eax,DWORD PTR es:[edi]
  422a31:	sbb    esp,DWORD PTR [edi-0x28]
  422a34:	(bad)  
  422a35:	push   ebx
  422a36:	xor    cl,BYTE PTR [edx]
  422a38:	xor    ah,BYTE PTR [ecx]
  422a3a:	mov    al,0x5c
  422a3c:	ins    DWORD PTR es:[edi],dx
  422a3d:	mov    cl,BYTE PTR [ebx+edi*2+0x43b55037]
  422a44:	push   0x534787e4
  422a49:	inc    ecx
  422a4a:	in     eax,dx
  422a4b:	xor    ecx,DWORD PTR [ebx+0x3e]
  422a4e:	out    0xd7,eax
  422a50:	ret    0x81b4
  422a53:	jo     0x4229e4
  422a55:	test   BYTE PTR [esi-0x150b50f7],bl
  422a5b:	inc    edx
  422a5c:	xor    eax,0xcc016e8f
  422a61:	mov    bh,0xf7
  422a63:	mov    cl,0x5d
  422a65:	int3   
  422a66:	bound  eax,QWORD PTR [ebp+0x7f]
  422a69:	xor    esp,DWORD PTR [ecx+edx*4-0x5b]
  422a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6e:	cli    
  422a6f:	xor    eax,0xdcb7ee76
  422a74:	adc    DWORD PTR [eax+0x4d],eax
  422a77:	and    BYTE PTR [edi],ch
  422a79:	adc    DWORD PTR [ebp-0xa9157fb],edi
  422a7f:	wbinvd 
  422a81:	xchg   esi,eax
  422a82:	push   ds
  422a83:	ins    BYTE PTR es:[edi],dx
  422a84:	pushf  
  422a85:	push   0x5b988608
  422a8a:	push   ss
  422a8b:	mov    bl,0x2d
  422a8d:	xchg   ecx,eax
  422a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a8f:	sbb    DWORD PTR [ebp+0x59],edx
  422a92:	xchg   ebx,eax
  422a93:	in     al,dx
  422a94:	aad    0xc1
  422a96:	mov    eax,ds:0x395dd50f
  422a9b:	sbb    eax,0xf40acfdc
  422aa0:	mov    bl,bl
  422aa2:	fs out 0x30,eax
  422aa5:	sub    dh,BYTE PTR [esi]
  422aa7:	adc    eax,ebp
  422aa9:	int    0xd3
  422aab:	int3   
  422aac:	retf   0xc510
  422aaf:	and    DWORD PTR [edi-0x5d3f251b],eax
  422ab5:	push   ecx
  422ab6:	pusha  
  422ab7:	push   ecx
  422ab8:	sbb    eax,esp
  422aba:	addr16 sti 
  422abc:	inc    edx
  422abd:	imul   ebx,ecx,0xffffffb4
  422ac0:	ficomp DWORD PTR [ebx-0x16]
  422ac3:	jne    0x422b31
  422ac5:	jg     0x422b0e
  422ac7:	js     0x422acd
  422ac9:	push   ds
  422aca:	(bad)  [ebx]
  422acc:	push   ecx
  422acd:	add    BYTE PTR [eax],al
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edx-0x29],ah
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx-0x484e2043],bh
  422ae2:	and    DWORD PTR [ecx+eax*1+0x4f400],0xd29ab500
  422aed:	mov    WORD PTR [edi-0x1b99d1b8],?
  422af3:	and    edx,ebx
  422af5:	lahf   
  422af6:	int3   
  422af7:	sub    ebp,DWORD PTR [ecx+0x26]
  422afa:	int    0x18
  422afc:	mov    ah,0xa6
  422afe:	adc    esi,DWORD PTR gs:[edx]
  422b01:	pop    ecx
  422b02:	lds    eax,FWORD PTR [ecx-0x26cdc48]
  422b08:	bound  eax,QWORD PTR [ebx]
  422b0a:	in     al,dx
  422b0b:	mov    ds:0x3aa93671,eax
  422b10:	das    
  422b11:	repnz mov edx,0xee169e14
  422b17:	sar    DWORD PTR [edi],1
  422b19:	dec    edx
  422b1a:	nop
  422b1b:	jae    0x422b71
  422b1d:	in     al,dx
  422b1e:	mov    dh,0xb2
  422b20:	add    al,0x82
  422b22:	ret    0x6d09
  422b25:	leave  
  422b26:	mov    eax,0x66d70e7a
  422b2b:	add    DWORD PTR [edi+0x4e],0x3c
  422b2f:	inc    edi
  422b30:	retf   
  422b31:	dec    esi
  422b32:	in     eax,dx
  422b33:	cmc    
  422b34:	lods   eax,DWORD PTR ds:[esi]
  422b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b36:	sbb    DWORD PTR [eax+0x72],esp
  422b39:	mov    ds:0x193f82f8,al
  422b3e:	(bad)  
  422b3f:	fcom   st(4)
  422b41:	fisubr WORD PTR [esi+0x7e]
  422b44:	xlat   BYTE PTR ds:[ebx]
  422b45:	scas   al,BYTE PTR es:[edi]
  422b46:	jae    0x422af8
  422b48:	nop
  422b49:	int3   
  422b4a:	popf   
  422b4b:	inc    esi
  422b4c:	dec    esi
  422b4d:	fidivr WORD PTR [ebx-0x29]
  422b50:	daa    
  422b51:	pop    es
  422b52:	stos   BYTE PTR es:[edi],al
  422b53:	inc    edx
  422b54:	stos   DWORD PTR es:[edi],eax
  422b55:	(bad)  
  422b56:	repnz stos DWORD PTR es:[edi],eax
  422b58:	pop    edi
  422b59:	ins    DWORD PTR es:[edi],dx
  422b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b5b:	ins    DWORD PTR es:[edi],dx
  422b5c:	dec    esi
  422b5d:	jecxz  0x422bd1
  422b5f:	(bad)  
  422b60:	cmc    
  422b61:	dec    eax
  422b62:	repz or BYTE PTR [ecx+0x3960cb1f],ah
  422b69:	out    dx,al
  422b6a:	jle    0x422b4b
  422b6c:	inc    ecx
  422b6d:	sbb    ebp,eax
  422b6f:	sub    edx,DWORD PTR [edx+esi*4]
  422b72:	or     BYTE PTR [edi+0x7ef08396],cl
  422b78:	ds retf 
  422b7a:	sub    edi,esi
  422b7c:	mov    dl,0xcc
  422b7e:	ret    0xbfe6
  422b81:	daa    
  422b82:	mov    ds:0xecaa8f61,al
  422b87:	adc    cl,BYTE PTR cs:[ecx-0x69]
  422b8b:	outs   dx,BYTE PTR ds:[esi]
  422b8c:	adc    eax,esp
  422b8e:	cs gs push esp
  422b91:	aad    0x42
  422b93:	mov    edx,0x72955d78
  422b98:	or     al,BYTE PTR [edx-0x57]
  422b9b:	aad    0xb9
  422b9d:	iret   
  422b9e:	ins    BYTE PTR es:[edi],dx
  422b9f:	and    al,BYTE PTR [esi+0x56]
  422ba2:	and    bl,BYTE PTR [ecx]
  422ba4:	(bad)  
  422ba5:	fs and al,0xc1
  422ba8:	test   BYTE PTR [ebx],ch
  422baa:	cmp    dh,BYTE PTR [eax]
  422bac:	jb     0x422b51
  422bae:	and    eax,0x958cc496
  422bb3:	test   DWORD PTR [ebx+ebp*8-0x4cf6ca0],ecx
  422bba:	mov    eax,ds:0xd122f16c
  422bbf:	inc    edi
  422bc0:	out    dx,al
  422bc1:	push   0xffffffa4
  422bc3:	add    BYTE PTR [esi],ah
  422bc5:	jp     0x422bcc
  422bc7:	cmp    DWORD PTR [esi+0x34495fe2],ecx
  422bcd:	sbb    DWORD PTR [edi+0x32],0xffffffa6
  422bd1:	push   edx
  422bd2:	enter  0x1969,0x20
  422bd6:	xchg   esi,eax
  422bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bd8:	call   0x90386bb1
  422bdd:	adc    ecx,esp
  422bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422be0:	stos   DWORD PTR es:[edi],eax
  422be1:	adc    DWORD PTR [esi+0x7e],0xfffffffd
  422be5:	hlt    
  422be6:	fldenv [ebx+0xa]
  422be9:	fsub   QWORD PTR [ebp-0x424c0b65]
  422bef:	adc    cl,bh
  422bf1:	and    DWORD PTR [edx-0x47],ebx
  422bf4:	enter  0x94ae,0xc5
  422bf8:	inc    ecx
  422bf9:	pusha  
  422bfa:	clc    
  422bfb:	adc    eax,0x2e9f9c34
  422c00:	cmp    esi,DWORD PTR ds:0x12585501
  422c06:	xor    ebp,DWORD PTR [ebx]
  422c08:	aam    0x95
  422c0a:	loope  0x422bcc
  422c0c:	xchg   ebx,eax
  422c0d:	dec    edi
  422c0e:	cs or  eax,0xf3889027
  422c14:	mov    WORD PTR [eax-0x6f],gs
  422c17:	pop    eax
  422c18:	aad    0x84
  422c1a:	sub    dh,BYTE PTR [edx+ebx*2]
  422c1d:	cmp    al,0xa0
  422c1f:	test   BYTE PTR [edi+0x64],dh
  422c22:	push   0x7a19363f
  422c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c28:	inc    esi
  422c29:	pop    ebp
  422c2a:	lahf   
  422c2b:	rcl    BYTE PTR [edx+0x48],0x4b
  422c2f:	dec    eax
  422c30:	in     al,dx
  422c31:	bound  ecx,QWORD PTR [eax-0x4eb48177]
  422c37:	or     BYTE PTR [edi],bl
  422c39:	sub    DWORD PTR [ecx],edx
  422c3b:	fidivr DWORD PTR [ebx-0xc0d209a]
  422c41:	sbb    al,0x1
  422c43:	sti    
  422c44:	mov    eax,ds:0xd20a8f1d
  422c49:	xchg   ebp,eax
  422c4a:	not    BYTE PTR [ecx+0x25]
  422c4d:	dec    edx
  422c4e:	mov    bl,0x1c
  422c50:	push   cs
  422c51:	add    DWORD PTR ds:0xb1f6f4cd,ebx
  422c57:	cdq    
  422c58:	dec    ecx
  422c59:	arpl   WORD PTR [ecx-0x237bf5ae],sp
  422c5f:	lea    edx,[ebp+0xb117982]
  422c65:	repz fucomp st(1)
  422c68:	mov    ds:0x299df6b7,al
  422c6d:	imul   esi,DWORD PTR [edx+0x42],0x3a
  422c71:	test   eax,0x64188c6e
  422c76:	loop   0x422c73
  422c78:	sbb    cl,BYTE PTR [edx-0x5e4de25d]
  422c7e:	hlt    
  422c7f:	cmp    DWORD PTR [ecx],ebp
  422c81:	(bad)  
  422c82:	(bad)
  422c85:	sysenter 
  422c87:	push   ebx
  422c88:	push   esi
  422c89:	sbb    BYTE PTR [edi],dl
  422c8b:	sbb    eax,0xf4cd8828
  422c90:	popa   
  422c91:	ja     0x422c2d
  422c93:	ja     0x422cd5
  422c95:	shr    BYTE PTR [esi],1
  422c97:	jge    0x422c7b
  422c99:	hlt    
  422c9a:	lds    esp,FWORD PTR [ecx-0x53574dcc]
  422ca0:	fbld   TBYTE PTR [esi+eax*2+0x43]
  422ca4:	mov    al,0x41
  422ca6:	std    
  422ca7:	jle    0x422c98
  422ca9:	ins    DWORD PTR es:[edi],dx
  422caa:	inc    esp
  422cab:	cwde   
  422cac:	cli    
  422cad:	sub    ebp,DWORD PTR [ecx]
  422caf:	pop    ecx
  422cb0:	aad    0x39
  422cb2:	out    0x64,al
  422cb4:	xlat   BYTE PTR ds:[ebx]
  422cb5:	les    esi,FWORD PTR [edx-0x2dd28b91]
  422cbb:	imul   edi,DWORD PTR [edi],0x49
  422cbe:	mov    DWORD PTR [esi],edx
  422cc0:	adc    al,0x39
  422cc2:	jmp    0x2008:0x3cd9a50f
  422cc9:	enter  0x7337,0x47
  422ccd:	bound  esi,QWORD PTR [ecx+0x204229f5]
  422cd3:	or     al,0x5d
  422cd5:	fistp  DWORD PTR [ebx+0x19]
  422cd8:	mov    ch,0xea
  422cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cdb:	mov    ecx,0x71578f81
  422ce0:	mov    ebp,0xf3818dd
  422ce5:	stos   BYTE PTR es:[edi],al
  422ce6:	inc    ecx
  422ce7:	or     ebp,DWORD PTR [ebp+0x122a42c6]
  422ced:	or     esp,DWORD PTR [eax]
  422cef:	xchg   cl,cl
  422cf1:	in     al,0xe4
  422cf3:	mov    edx,0x1ae1d47f
  422cf8:	xchg   ebp,eax
  422cf9:	xlat   BYTE PTR ds:[ebx]
  422cfa:	sub    BYTE PTR [ecx+edx*2],dl
  422cfd:	mov    ds:0xf6bdcecd,al
  422d02:	stc    
  422d03:	int    0xf
  422d05:	cs mov ah,0xf7
  422d08:	sbb    eax,0x628e71a9
  422d0d:	not    DWORD PTR [eax-0x5a]
  422d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d11:	je     0x422d88
  422d13:	imul   edx,esi,0xffffffac
  422d16:	fisttp DWORD PTR [eax*4+0x5fbb58ab]
  422d1d:	les    ebp,FWORD PTR [ebx-0x61694ae5]
  422d23:	jmp    0x1071:0x9f8d205d
  422d2a:	pop    esi
  422d2b:	sbb    ebp,edx
  422d2d:	leave  
  422d2e:	arpl   WORD PTR [ebx-0x52],sp
  422d31:	push   ecx
  422d32:	pop    eax
  422d33:	xlat   BYTE PTR ds:[ebx]
  422d34:	push   ss
  422d35:	inc    esi
  422d36:	and    DWORD PTR [ebx],ebp
  422d38:	pop    ebx
  422d39:	sbb    eax,0xafca323c
  422d3e:	jl     0x422cc8
  422d40:	icebp  
  422d41:	mov    esp,0x591bac3c
  422d46:	pop    es
  422d47:	test   al,0x6d
  422d49:	push   ds
  422d4a:	or     DWORD PTR [ebx-0x59],ecx
  422d4d:	dec    edx
  422d4e:	pop    es
  422d4f:	ja     0x422d35
  422d51:	cli    
  422d52:	xchg   edx,eax
  422d53:	repnz xchg ebx,eax
  422d55:	jg     0x422d37
  422d57:	jmp    0x175ab9bb
  422d5c:	and    BYTE PTR [eax+esi*2],bl
  422d5f:	ss mov ebx,0x386cd686
  422d65:	(bad)  
  422d66:	fdiv   DWORD PTR [ebx+0x36b51da0]
  422d6c:	cmp    eax,0x156fd5e0
  422d71:	int3   
  422d72:	es pop esp
  422d74:	icebp  
  422d75:	sub    ebx,DWORD PTR [eax+edx*4-0x64]
  422d79:	in     eax,dx
  422d7a:	(bad)  
  422d7b:	and    edi,ecx
  422d7d:	cdq    
  422d7e:	sbb    BYTE PTR [ebx-0x56],ah
  422d81:	repz xlat BYTE PTR ds:[ebx]
  422d83:	mov    al,0xfb
  422d85:	push   ecx
  422d86:	enter  0x94,0x30
  422d8a:	mov    bl,0x2e
  422d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d8d:	and    DWORD PTR [edi],esi
  422d8f:	out    0xa6,eax
  422d91:	shl    BYTE PTR [edi-0x8],cl
  422d94:	dec    ecx
  422d95:	mov    ah,0xee
  422d97:	daa    
  422d98:	fcom   DWORD PTR [eax-0x65]
  422d9b:	adc    eax,0x2750b6fe
  422da0:	std    
  422da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422da2:	sub    eax,DWORD PTR [edi-0xd]
  422da5:	inc    ebp
  422da6:	stc    
  422da7:	pop    esp
  422da8:	jp     0x422d51
  422daa:	lods   eax,DWORD PTR ds:[esi]
  422dab:	xor    bl,ch
  422dad:	(bad)  
  422dae:	push   DWORD PTR [ebx]
  422db0:	sub    DWORD PTR [ecx],esi
  422db2:	repnz pop ebp
  422db4:	xor    ch,al
  422db6:	in     al,0xa1
  422db8:	inc    ebx
  422db9:	mov    ah,0xf9
  422dbb:	out    dx,eax
  422dbc:	fimul  DWORD PTR [edi]
  422dbe:	fcom   st(6)
  422dc0:	add    edx,esp
  422dc2:	lea    esp,[edx+0x75]
  422dc5:	mov    al,0x79
  422dc7:	mov    DWORD PTR ds:0xf8b973c8,edi
  422dcd:	xor    eax,0x7ca18376
  422dd2:	aam    0x2c
  422dd4:	mov    eax,ds:0x2c76f10e
  422dd9:	sub    al,BYTE PTR [ebx-0x446d312d]
  422ddf:	stos   BYTE PTR es:[edi],al
  422de0:	mov    ebp,0x79d57ec6
  422de5:	pop    ss
  422de6:	retf   0x9413
  422de9:	mov    BYTE PTR [ecx],bh
  422deb:	cmp    BYTE PTR [edi-0x4d],bl
  422dee:	adc    ebx,ebx
  422df0:	push   ebp
  422df1:	push   0x1c2693ec
  422df6:	addr16 in al,0x30
  422df9:	shl    ecx,0xf2
  422dfc:	cmp    cl,ah
  422dfe:	ss shr edi,0x9d
  422e02:	(bad)  
  422e03:	fadd   st,st(5)
  422e05:	lahf   
  422e06:	push   ds
  422e07:	popf   
  422e08:	inc    ecx
  422e09:	sar    DWORD PTR [ecx],cl
  422e0b:	js     0x422daf
  422e0d:	rcl    BYTE PTR ds:0x264d2fa6,cl
  422e13:	in     eax,dx
  422e14:	and    eax,0x2ff3258e
  422e19:	hlt    
  422e1a:	jle    0x422dc4
  422e1c:	adc    eax,0x872a59cc
  422e21:	push   es
  422e22:	mul    BYTE PTR [ebx+0x56]
  422e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e26:	xchg   ebp,eax
  422e27:	rol    BYTE PTR [edx+0x7b],0x97
  422e2b:	stos   BYTE PTR es:[edi],al
  422e2c:	sbb    BYTE PTR [esi],bl
  422e2e:	(bad)  
  422e30:	test   eax,ebx
  422e32:	mov    DWORD PTR [ebx],eax
  422e34:	aam    0x5b
  422e36:	push   edi
  422e37:	mov    edi,0xedd0a61f
  422e3c:	adc    al,dl
  422e3e:	push   0xffffffc1
  422e40:	jp     0x422e8f
  422e42:	clc    
  422e43:	(bad)  
  422e44:	xor    al,0x3e
  422e46:	int    0xe9
  422e48:	pop    edx
  422e49:	xlat   BYTE PTR ds:[ebx]
  422e4a:	mov    ebx,0x21c05416
  422e4f:	std    
  422e50:	shl    DWORD PTR [esp+eiz*4+0x4aa25d12],cl
  422e57:	mov    ds:0x5101d21d,eax
  422e5c:	mov    WORD PTR [edx],es
  422e5e:	dec    ebx
  422e5f:	push   ss
  422e60:	outs   dx,DWORD PTR ds:[esi]
  422e61:	add    eax,0xdc035992
  422e66:	or     BYTE PTR [ebp-0x54914636],ah
  422e6c:	mov    ds:0xde5ab24,eax
  422e71:	arpl   WORD PTR [ebp+0x18c1def],bx
  422e77:	scas   eax,DWORD PTR es:[edi]
  422e78:	mov    ds:0x3d2cc7f5,eax
  422e7d:	pop    ss
  422e7e:	mov    cl,0x1b
  422e80:	xor    al,0x7
  422e82:	sub    al,0xde
  422e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e85:	jne    0x422e9b
  422e87:	or     ebx,DWORD PTR [ebx-0x7a]
  422e8a:	push   es
  422e8b:	push   0x3f
  422e8d:	mov    bl,0xed
  422e8f:	sub    eax,0x3912c3ae
  422e94:	sbb    ah,BYTE PTR [ebp*8+0x213fb5b6]
  422e9b:	aaa    
  422e9c:	ret    0x424f
  422e9f:	xor    DWORD PTR [ebx],0x4901a785
  422ea5:	mov    bh,BYTE PTR [eax]
  422ea7:	inc    esi
  422ea8:	add    DWORD PTR [ecx-0x56],0x65
  422eac:	mov    esp,0x27149baf
  422eb1:	aas    
  422eb2:	test   al,0x46
  422eb4:	les    ebp,FWORD PTR [ebp+0x6074bf00]
  422eba:	push   ebp
  422ebb:	dec    edx
  422ebc:	xrelease mov DWORD PTR [edx+eiz*4-0x69],eax
  422ec1:	mov    dh,0xf7
  422ec3:	mov    esp,0x7482aeff
  422ec8:	(bad)  
  422ec9:	pop    esp
  422eca:	cmp    al,0xd2
  422ecc:	sub    al,0x1a
  422ece:	stc    
  422ecf:	mov    cl,0xdc
  422ed1:	push   edi
  422ed2:	add    al,0xae
  422ed4:	out    0x9a,eax
  422ed6:	mov    esp,0x95f7e0c6
  422edb:	in     al,0x66
  422edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ede:	icebp  
  422edf:	mov    bl,0x86
  422ee1:	ins    BYTE PTR es:[edi],dx
  422ee2:	enter  0xb147,0xcb
  422ee6:	inc    ebp
  422ee7:	dec    bl
  422ee9:	aam    0xb2
  422eeb:	and    dh,0x6e
  422eee:	shl    DWORD PTR [ecx+ecx*2],cl
  422ef1:	xchg   DWORD PTR [ebx-0x78a55988],ebx
  422ef7:	int    0x25
  422ef9:	pop    ds
  422efa:	and    eax,0xcbb8803e
  422eff:	ficom  DWORD PTR [edi-0x46942259]
  422f05:	xor    eax,0x6e8d8491
  422f0a:	pop    eax
  422f0b:	jp     0x422ece
  422f0d:	mov    edx,0xddf9d3b3
  422f12:	icebp  
  422f13:	dec    esi
  422f14:	cdq    
  422f15:	jno    0x422f3c
  422f17:	frstor gs:[edx-0x27]
  422f1b:	outs   dx,BYTE PTR ds:[esi]
  422f1c:	push   edi
  422f1d:	push   ds
  422f1e:	retf   0xc85d
  422f21:	out    dx,eax
  422f22:	sbb    eax,0x80a4de09
  422f27:	fst    DWORD PTR [ecx]
  422f29:	push   ebx
  422f2a:	adc    eax,0xca24fb66
  422f2f:	add    BYTE PTR [eax+0x1ac2cb5c],bh
  422f35:	sub    DWORD PTR [ecx],ecx
  422f37:	jge    0x422ed9
  422f39:	ds (bad) 
  422f3b:	ds jge 0x422f54
  422f3e:	cmp    edi,DWORD PTR [ebx-0x7e]
  422f41:	xor    eax,0xe4223c2b
  422f46:	dec    eax
  422f47:	jns    0x422f78
  422f49:	mov    eax,ds:0x9915faf6
  422f4e:	dec    esp
  422f4f:	stos   DWORD PTR es:[edi],eax
  422f50:	sub    eax,0x1a30ce3
  422f55:	sbb    eax,0x6de8d879
  422f5a:	out    0x31,eax
  422f5c:	ror    esp,1
  422f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f5f:	mov    esp,0x6cab0263
  422f64:	call   0x84ef:0xeb8603f8
  422f6b:	cmc    
  422f6c:	ret    
  422f6d:	ja     0x422f06
  422f6f:	daa    
  422f70:	scas   al,BYTE PTR es:[edi]
  422f71:	sbb    dl,BYTE PTR [ecx+edi*1]
  422f74:	icebp  
  422f75:	pusha  
  422f76:	sbb    al,0x1f
  422f78:	pop    ds
  422f79:	xchg   esi,eax
  422f7a:	xor    al,0x80
  422f7c:	mov    ecx,0xdb89bebc
  422f81:	mov    ch,ch
  422f83:	lock call 0x6dd3:0x38365ffe
  422f8b:	les    eax,FWORD PTR [ebx-0x3b]
  422f8e:	lock (bad) 
  422f90:	(bad)  
  422f92:	mov    ebx,0x91735ff2
  422f97:	push   ebx
  422f98:	or     DWORD PTR [edx+0x77],edx
  422f9b:	jle    0x423019
  422f9d:	mov    ecx,0xb6a271dc
  422fa2:	sub    dl,BYTE PTR [ecx+ecx*8]
  422fa5:	mov    esp,0x8409dc78
  422faa:	pop    sp
  422fac:	dec    edx
  422fad:	mov    ah,0xcc
  422faf:	dec    eax
  422fb0:	pop    esp
  422fb1:	neg    DWORD PTR [edx]
  422fb3:	cld    
  422fb4:	out    0x98,al
  422fb6:	test   DWORD PTR [ecx-0x55869731],esi
  422fbc:	jp     0x422f3e
  422fbe:	gs in  eax,dx
  422fc0:	sub    eax,0x4d25352e
  422fc5:	je     0x422fbc
  422fc7:	mov    edx,0xc80c0d7d
  422fcc:	in     al,0x5a
  422fce:	das    
  422fcf:	mov    edi,0x49a5b693
  422fd4:	in     al,dx
  422fd5:	and    DWORD PTR [edx+0x69bb51e5],0x5a6a89
  422fdf:	add    BYTE PTR [eax],al
  422fe1:	add    BYTE PTR [edi],cl
  422fe3:	pop    ebx
  422fe4:	test   BYTE PTR [esi],dl
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    ebx,DWORD PTR [eax+0x52]
  422ff0:	push   0xffffffea
  422ff2:	jne    0x422f9d
  422ff4:	add    DWORD PTR [eax],eax
  422ff6:	hlt    
  422ff7:	add    al,0x0
  422ff9:	add    dl,bl
  422ffb:	add    DWORD PTR [esi+0x6e],ebx
  422ffe:	fdiv   DWORD PTR [ecx]
  423000:	jmp    0x42302d
  423002:	test   DWORD PTR [ebx],0x2a3c97a0
  423008:	retf   
  423009:	out    dx,al
  42300a:	out    dx,al
  42300b:	test   BYTE PTR [edi+0x5656db6],0x8
  423012:	cmp    bl,al
  423014:	mov    bl,0xf9
  423016:	je     0x423059
  423018:	(bad)  
  42301a:	pushf  
  42301b:	imul   eax,DWORD PTR [edx],0x42a4ad1d
  423021:	xor    DWORD PTR [ebp+0x60],ecx
  423024:	jbe    0x423037
  423026:	cli    
  423027:	(bad)  
  423028:	clc    
  423029:	adc    eax,0x28523c4d
  42302e:	adc    DWORD PTR [ecx-0x55],edx
  423031:	jbe    0x42303d
  423033:	test   al,0x8b
  423035:	inc    ecx
  423036:	mov    BYTE PTR [esi-0x1682dc02],ah
  42303c:	(bad)  
  42303d:	jg     0x4230be
  42303f:	not    DWORD PTR [eax+0x7b]
  423042:	inc    edi
  423043:	test   BYTE PTR [ecx+0x44de1435],ch
  423049:	js     0x42306a
  42304b:	test   BYTE PTR [esi-0x7b],ah
  42304e:	push   edi
  42304f:	jge    0x423080
  423051:	ret    0xed5f
  423054:	sub    al,dh
  423056:	(bad)  
  423057:	mov    edx,0x8f52e059
  42305c:	dec    ebp
  42305d:	and    al,0xb3
  42305f:	aad    0xb5
  423061:	ins    DWORD PTR es:[di],dx
  423063:	in     eax,0x12
  423065:	addr16 add al,0x81
  423068:	je     0x423010
  42306a:	fnstenv [edi]
  42306c:	pop    ecx
  42306d:	stos   DWORD PTR es:[edi],eax
  42306e:	pop    ss
  42306f:	lock mov ?,WORD PTR es:[ebx+eiz*1+0x5a]
  423075:	pop    eax
  423076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423077:	call   FWORD PTR [ebp-0x64]
  42307a:	add    dh,BYTE PTR [edx]
  42307c:	mov    ebp,0x3de65831
  423081:	iret   
  423082:	inc    esp
  423083:	fcmovne st,st(7)
  423085:	cli    
  423086:	push   ds
  423087:	sub    eax,0x8ee779d8
  42308c:	push   0x38
  42308e:	int    0xfc
  423090:	push   ebx
  423091:	(bad)  
  423092:	scas   al,BYTE PTR es:[edi]
  423093:	inc    edi
  423094:	call   0x30fa:0x22a21224
  42309b:	es f2xm1 
  42309e:	or     eax,0xdf134a60
  4230a3:	pop    ebx
  4230a4:	dec    esp
  4230a5:	xor    eax,0xea5c2e68
  4230aa:	jns    0x4230ff
  4230ac:	pusha  
  4230ad:	and    edx,DWORD PTR [ebx]
  4230af:	ds enter 0xaa5e,0x8
  4230b4:	scas   eax,DWORD PTR es:[edi]
  4230b5:	lods   al,BYTE PTR ds:[esi]
  4230b6:	imul   esi,DWORD PTR [ebp-0x7b583735],0x4bd05860
  4230c0:	ins    DWORD PTR es:[edi],dx
  4230c1:	mov    bh,0x8a
  4230c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230c4:	cs inc edi
  4230c6:	or     ah,BYTE PTR [edx-0x2af4ae4f]
  4230cc:	outs   dx,BYTE PTR ds:[esi]
  4230cd:	imul   edi,esp,0x6c
  4230d0:	mov    WORD PTR [ebx],?
  4230d2:	(bad)  
  4230d3:	and    al,0xdb
  4230d5:	retf   
  4230d6:	cmp    eax,0xf1af45d5
  4230db:	jle    0x42310e
  4230dd:	call   0xcd65d119
  4230e2:	(bad)  
  4230e3:	pop    ecx
  4230e4:	adc    edi,0xffffff83
  4230e7:	retf   
  4230e8:	mov    eax,ds:0x1aca2c25
  4230ed:	outs   dx,DWORD PTR ds:[esi]
  4230ee:	pop    ds
  4230ef:	dec    edx
  4230f0:	in     al,dx
  4230f1:	xchg   edi,eax
  4230f2:	push   ebx
  4230f3:	jg     0x4230f7
  4230f5:	jmp    0x423080
  4230f7:	pop    esp
  4230f8:	jmp    0x8c587286
  4230fd:	xor    edx,ebx
  4230ff:	scas   eax,DWORD PTR es:[edi]
  423100:	xchg   edx,eax
  423101:	xchg   esp,eax
  423102:	cmp    al,0x6c
  423104:	lods   al,BYTE PTR ds:[esi]
  423105:	data16 jns 0x4230d4
  423108:	mov    ebp,edi
  42310a:	bound  ecx,QWORD PTR [eax-0x9a87438]
  423110:	adc    al,0x1b
  423112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423114:	arpl   WORD PTR [eax-0x7d],ax
  423117:	sbb    BYTE PTR [eax-0x1e670107],dl
  42311d:	cs push edx
  42311f:	dec    ebx
  423120:	stc    
  423121:	hlt    
  423122:	push   0xffffff8a
  423124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423125:	aas    
  423126:	xor    eax,0x51cf2852
  42312b:	lods   eax,DWORD PTR ds:[esi]
  42312c:	xor    BYTE PTR [edi+edx*8+0x43],ah
  423130:	mov    ss,WORD PTR [ecx+0x28]
  423133:	and    bh,bl
  423135:	(bad)  
  423136:	jnp    0x42310e
  423138:	(bad)  
  423139:	cld    
  42313a:	xlat   BYTE PTR ds:[ebx]
  42313b:	cdq    
  42313c:	les    ecx,FWORD PTR [eax]
  42313e:	loopne 0x423142
  423140:	popf   
  423141:	xor    eax,0x89498411
  423146:	stos   DWORD PTR es:[edi],eax
  423147:	ss out dx,eax
  423149:	std    
  42314a:	push   es
  42314b:	lea    eax,[edx]
  42314d:	imul   ecx,DWORD PTR [esi-0x2b46e87],0x126d9d86
  423157:	push   0x2c3f35d5
  42315c:	fild   WORD PTR [ebx+ebp*8+0x6d]
  423160:	sbb    dl,cl
  423162:	rcl    DWORD PTR [edx+0x38],cl
  423165:	add    edx,eax
  423167:	not    DWORD PTR [ecx]
  423169:	and    DWORD PTR [edx],esi
  42316b:	xchg   edi,eax
  42316c:	out    dx,al
  42316d:	sub    eax,DWORD PTR [ecx+edi*4+0x76a46aa1]
  423174:	pop    esp
  423175:	addr16 mov ebx,0x4451544b
  42317b:	fsub   DWORD PTR [ecx-0x10]
  42317e:	mov    ebp,0xbd9959b0
  423183:	fnstenv [ecx-0x3c]
  423186:	jo     0x423145
  423188:	mov    esp,0xb78253fc
  42318d:	int    0xc1
  42318f:	je     0x42319f
  423191:	mov    bl,0xb0
  423193:	add    al,0x2b
  423195:	in     al,0x4c
  423197:	call   0xa00c698e
  42319c:	jecxz  0x4231f5
  42319e:	idiv   ch
  4231a0:	js     0x4231c6
  4231a2:	mov    ebx,DWORD PTR [edx-0x23c0689b]
  4231a8:	bnd jg 0x423219
  4231ab:	sub    cl,BYTE PTR [eax]
  4231ad:	mov    eax,0xa1801c88
  4231b2:	add    DWORD PTR [edx],esi
  4231b4:	cmp    eax,0xad4b857a
  4231b9:	cli    
  4231ba:	or     ah,cl
  4231bc:	jge    0x423148
  4231be:	test   BYTE PTR [ebp+0x618e3c56],ah
  4231c4:	mov    esi,esp
  4231c6:	cmc    
  4231c7:	push   cs
  4231c8:	fisttp QWORD PTR [ebp-0x3b7b0fe6]
  4231ce:	pop    ds
  4231cf:	adc    eax,0x7073a3dc
  4231d4:	xchg   DWORD PTR [ecx+eiz*4],eax
  4231d7:	in     eax,0xd
  4231d9:	rcr    DWORD PTR [edx-0x430a24e4],0xb6
  4231e0:	mov    ds:0xbb53515d,eax
  4231e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231e6:	lock push esi
  4231e8:	mov    ch,0xd9
  4231ea:	jo     0x42325f
  4231ec:	cmp    bh,cl
  4231ee:	in     eax,dx
  4231ef:	dec    edx
  4231f0:	fmulp  st(4),st
  4231f2:	dec    ecx
  4231f3:	rcl    BYTE PTR [eax-0x7d824977],1
  4231f9:	jl     0x4231f5
  4231fb:	xchg   ebp,eax
  4231fc:	mov    ds:0xae50d0a0,eax
  423201:	mov    bl,0xdc
  423203:	dec    ebx
  423204:	push   ecx
  423205:	loop   0x4231fb
  423207:	inc    ah
  423209:	js     0x4231ce
  42320b:	rcl    DWORD PTR [eax],1
  42320d:	adc    cl,BYTE PTR [edx+0x5d]
  423210:	wrmsr  
  423212:	retf   0xf095
  423215:	cmp    DWORD PTR [ebx-0x32fca49a],ecx
  42321b:	clc    
  42321c:	call   0xa6b1defc
  423221:	fcom   DWORD PTR [ebx]
  423223:	and    esi,DWORD PTR [esi-0x76]
  423226:	or     BYTE PTR [ecx],al
  423228:	xchg   ecx,eax
  423229:	ins    BYTE PTR es:[edi],dx
  42322a:	fdivr  st,st(4)
  42322c:	sbb    BYTE PTR [ebx],0xc8
  42322f:	xlat   BYTE PTR ds:[ebx]
  423230:	pop    es
  423231:	pop    es
  423232:	in     eax,dx
  423233:	popa   
  423234:	repz push ecx
  423236:	iret   
  423237:	mov    ebp,0xbc2debcf
  42323c:	push   ebp
  42323d:	mov    eax,ds:0xd585193a
  423242:	sub    ch,BYTE PTR [edx-0x7e568513]
  423248:	and    BYTE PTR [ebx+ecx*2+0x10],0xbd
  42324d:	bound  ecx,QWORD PTR [edx+0x6a881273]
  423253:	popa   
  423254:	mov    ebp,0xa85a32f3
  423259:	out    dx,eax
  42325a:	lahf   
  42325b:	shl    DWORD PTR [eax],cl
  42325d:	mov    cl,0xc5
  42325f:	jae    0x4232cf
  423261:	sub    eax,eax
  423263:	popf   
  423264:	dec    ebx
  423265:	pop    edi
  423266:	or     esp,DWORD PTR [ecx+esi*4+0x3e]
  42326a:	cld    
  42326b:	mov    esi,0x7ced1303
  423270:	popf   
  423271:	adc    BYTE PTR [ebp-0x46358e06],0x62
  423278:	out    0xdf,eax
  42327a:	fidiv  WORD PTR [ebx-0x29332efb]
  423280:	adc    DWORD PTR ds:0x7972360c,esi
  423286:	mov    edi,0x338d653e
  42328b:	inc    esp
  42328c:	dec    eax
  42328d:	add    bl,BYTE PTR [edi+0x3b44ce4e]
  423293:	mov    DWORD PTR [esi],edx
  423295:	push   es
  423296:	ja     0x423308
  423298:	scas   al,BYTE PTR es:[edi]
  423299:	lods   eax,DWORD PTR ds:[esi]
  42329a:	pop    edx
  42329b:	les    ebx,FWORD PTR cs:[ecx-0x15]
  42329f:	stos   BYTE PTR es:[edi],al
  4232a0:	into   
  4232a1:	mov    edi,0xa9f425a
  4232a6:	xchg   esp,eax
  4232a7:	std    
  4232a8:	jmp    0xc06b08
  4232ad:	xchg   BYTE PTR [ebx],bh
  4232af:	sahf   
  4232b0:	neg    BYTE PTR [edi+0x5f]
  4232b3:	stos   BYTE PTR es:[edi],al
  4232b4:	sub    al,0x89
  4232b6:	retf   
  4232b7:	mov    ecx,0x1097da08
  4232bc:	loope  0x4232c8
  4232be:	push   edx
  4232bf:	les    esp,FWORD PTR [ecx+0x1796274c]
  4232c5:	cmp    eax,0x23070b3d
  4232ca:	outs   dx,DWORD PTR ds:[esi]
  4232cb:	mov    bl,0x77
  4232cd:	(bad)  
  4232ce:	jnp    0x42329c
  4232d0:	loop   0x423331
  4232d2:	lea    eax,[edx+0x66]
  4232d5:	test   al,0xfb
  4232d7:	(bad)  
  4232d8:	bound  ebp,QWORD PTR [esi]
  4232da:	jno    0x4232d6
  4232dc:	std    
  4232dd:	in     al,0x15
  4232df:	fidiv  WORD PTR [ebx]
  4232e1:	in     al,0x6d
  4232e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232e4:	inc    esp
  4232e5:	stos   DWORD PTR es:[edi],eax
  4232e6:	and    esi,ebp
  4232e8:	lods   al,BYTE PTR ds:[esi]
  4232e9:	mov    bl,0xf7
  4232eb:	leave  
  4232ec:	fadd   DWORD PTR [ebp+esi*1+0x5a8712d8]
  4232f3:	dec    ebp
  4232f4:	push   edx
  4232f5:	into   
  4232f6:	cmp    al,0x39
  4232f8:	loopne 0x4232e7
  4232fa:	cli    
  4232fb:	adc    al,0x94
  4232fd:	das    
  4232fe:	xor    eax,0xa89c666f
  423303:	fwait
  423304:	jnp    0x423360
  423306:	mov    edx,0xb2819e62
  42330b:	xchg   DWORD PTR [ebx],edi
  42330d:	ss bswap esp
  423310:	pop    esp
  423311:	fst    DWORD PTR [ebx]
  423313:	jno    0x423368
  423315:	jg     0x4232df
  423317:	lods   eax,DWORD PTR ds:[esi]
  423318:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42331a:	aad    0xf1
  42331c:	xchg   edi,eax
  42331d:	lds    eax,FWORD PTR [esi+ecx*1+0x67bfb0c2]
  423324:	sub    BYTE PTR [edi+eiz*4],dl
  423327:	xchg   ecx,eax
  423328:	shl    DWORD PTR [ecx+0x1c],1
  42332b:	xor    al,BYTE PTR [ecx-0x6f]
  42332e:	inc    esi
  42332f:	fadd   st,st(3)
  423331:	dec    ecx
  423332:	and    al,0x72
  423334:	inc    ecx
  423335:	mov    esp,0x8dda2bc1
  42333a:	je     0x42330b
  42333c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42333d:	lea    esp,[esi-0x12]
  423340:	ret    0x6241
  423343:	das    
  423344:	cmp    al,0x64
  423346:	mov    cl,0x75
  423348:	test   eax,0x8c081cce
  42334d:	and    BYTE PTR [edx],dl
  42334f:	push   edi
  423350:	cdq    
  423351:	jne    0x42334b
  423353:	fsubr  DWORD PTR [edx+0x2df88d17]
  42335b:	sbb    BYTE PTR [ebp+0x30],0xf9
  42335f:	dec    eax
  423360:	mov    ecx,0xa2a0bafe
  423365:	int    0x43
  423367:	icebp  
  423368:	mov    DWORD PTR [eax+0x19180782],ecx
  42336e:	xlat   BYTE PTR ds:[ebx]
  42336f:	loop   0x4233b5
  423371:	fmulp  st(7),st
  423373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423374:	mov    dl,0xb9
  423376:	retf   0x83e8
  423379:	dec    eax
  42337a:	sahf   
  42337b:	or     eax,0x3003c670
  423380:	repnz sub bh,dl
  423383:	adc    bl,BYTE PTR [edx-0x7ea0ab08]
  423389:	mov    ebx,0x95e98ba3
  42338e:	test   al,0x54
  423390:	(bad)  
  423391:	in     eax,dx
  423392:	add    esi,DWORD PTR [ebp-0xf]
  423395:	iret   
  423396:	ror    DWORD PTR fs:[ebp+0x6ebb70d1],cl
  42339d:	lock pushf 
  42339f:	pop    eax
  4233a0:	mov    dl,0x50
  4233a2:	mov    bh,dl
  4233a4:	inc    esp
  4233a5:	mov    dh,BYTE PTR [ecx+0x7411a4d7]
  4233ab:	and    ecx,DWORD PTR ds:[ebx+eax*4-0x46]
  4233b0:	(bad)  
  4233b1:	mov    bh,0xb7
  4233b3:	add    dh,BYTE PTR [ebx-0x25]
  4233b6:	hlt    
  4233b7:	sub    edx,DWORD PTR [ebp+eax*2+0x45]
  4233bb:	daa    
  4233bc:	sub    dh,BYTE PTR [esi-0x3982eda0]
  4233c2:	mov    eax,edi
  4233c4:	sbb    al,0x8e
  4233c6:	aas    
  4233c7:	es enter 0xdaac,0x42
  4233cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233cd:	cli    
  4233ce:	test   al,0xd6
  4233d0:	pop    esi
  4233d1:	rol    BYTE PTR [eax+0x733a98de],cl
  4233d7:	adc    BYTE PTR [edx+0x6b0627ed],bl
  4233dd:	add    al,0x50
  4233df:	pushf  
  4233e0:	inc    edi
  4233e1:	in     al,dx
  4233e2:	lea    esp,[ecx+edi*2+0x2333fb1a]
  4233e9:	mov    ah,0x3b
  4233eb:	bound  eax,QWORD PTR ds:0x4a592284
  4233f1:	pop    es
  4233f2:	cs scas al,BYTE PTR es:[edi]
  4233f4:	mov    cl,0x45
  4233f6:	pop    ds
  4233f7:	cmp    edi,DWORD PTR [ebx+0xa6ecc1f]
  4233fd:	mov    BYTE PTR [eax],ch
  4233ff:	dec    esp
  423400:	scas   eax,DWORD PTR es:[edi]
  423401:	add    DWORD PTR [eax-0x5],ecx
  423404:	aad    0x4b
  423406:	test   al,0x97
  423408:	aam    0xb0
  42340a:	retf   0x6ad7
  42340d:	adc    bh,BYTE PTR [ebx+0x7eb4785f]
  423413:	je     0x423472
  423415:	mov    edi,ecx
  423417:	not    BYTE PTR [esi+0x431d20be]
  42341d:	call   0x1734:0x4eba1894
  423424:	bound  ebp,QWORD PTR ds:0x8bf99957
  42342a:	xor    BYTE PTR [edi],bh
  42342c:	xchg   ebp,eax
  42342d:	jecxz  0x4233c0
  42342f:	jl     0x423422
  423431:	add    BYTE PTR [eax],0x68
  423434:	push   ebp
  423435:	int3   
  423436:	cli    
  423437:	clc    
  423438:	in     al,dx
  423439:	pushf  
  42343a:	jge    0x4233f2
  42343c:	mov    ds:0xecaec2,eax
  423441:	out    dx,al
  423442:	stos   DWORD PTR es:[edi],eax
  423443:	mov    edi,esp
  423445:	ds shl ebx,1
  423448:	repz out 0x8e,eax
  42344b:	and    cl,dl
  42344d:	mov    al,ds:0xffb86463
  423452:	ss sbb al,0x1
  423455:	sbb    BYTE PTR [ecx+0x3b],bl
  423458:	pop    esi
  423459:	xchg   edx,eax
  42345a:	add    bh,BYTE PTR [eax]
  42345c:	mov    ds:0x5dfc8768,eax
  423461:	test   eax,0xde2b9abb
  423466:	mov    dl,cl
  423468:	popf   
  423469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346a:	aas    
  42346b:	lds    ebx,FWORD PTR [ecx+eax*8-0x6]
  42346f:	aad    0xff
  423471:	cli    
  423472:	sub    ah,bh
  423474:	push   ecx
  423475:	mov    eax,0x3e404f70
  42347a:	mov    esi,0x39d2bb6
  42347f:	lea    edi,[esp+ebp*4-0x1b]
  423483:	sbb    eax,0x699347a4
  423488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423489:	adc    al,0xe2
  42348b:	sbb    eax,0x1da150e7
  423490:	sub    ah,BYTE PTR [eax]
  423492:	add    BYTE PTR [ecx+edx*1+0x314a5acd],bh
  423499:	add    dh,dh
  42349b:	cmp    ecx,DWORD PTR [edi+0x37e05b9b]
  4234a1:	pusha  
  4234a2:	jmp    0x9ceb:0xff9b4bef
  4234a9:	jle    0x42350e
  4234ab:	(bad)  
  4234ac:	fstp   DWORD PTR [ebx]
  4234ae:	fstp   DWORD PTR ds:0x42602390
  4234b4:	bound  esi,QWORD PTR [edi+0x7e]
  4234b7:	cld    
  4234b8:	(bad)  
  4234b9:	pop    esp
  4234ba:	iret   
  4234bb:	sbb    ah,BYTE PTR [edx+0x23]
  4234be:	(bad)  
  4234bf:	leave  
  4234c0:	(bad)  
  4234c1:	pop    esi
  4234c2:	sub    al,0x16
  4234c4:	ret    
  4234c5:	rcr    DWORD PTR [eax],1
  4234c7:	icebp  
  4234c8:	mov    al,ds:0xab6a2b73
  4234cd:	shl    BYTE PTR ds:0x9a87f408,0xb5
  4234d4:	iret   
  4234d5:	cmp    al,0xf1
  4234d7:	fwait
  4234d8:	inc    ebp
  4234d9:	and    eax,0x67ba2b29
  4234de:	sbb    bh,BYTE PTR [esi-0x25]
  4234e1:	pop    ebp
  4234e2:	sub    al,0x22
  4234e4:	cli    
  4234e5:	mov    al,ds:0xe4b00400
  4234ea:	popa   
  4234eb:	or     BYTE PTR [eax+0x65],0x0
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	or     dl,BYTE PTR [eax-0x43]
  423501:	inc    ecx
  423502:	imul   ebp,DWORD PTR [esi+0x4f40001],0x6d930000
  42350c:	in     al,0x37
  42350e:	ins    DWORD PTR es:[edi],dx
  42350f:	cmp    bh,BYTE PTR [ecx]
  423511:	mov    ebp,0x1b1f1b39
  423516:	add    esi,ebp
  423518:	inc    ecx
  423519:	int3   
  42351a:	mov    eax,gs
  42351c:	pop    ebp
  42351d:	jp     0x423526
  42351f:	jge    0x4234bf
  423521:	cdq    
  423522:	inc    ebp
  423523:	ror    BYTE PTR [edx-0x15a4ee4a],cl
  423529:	adc    ebx,DWORD PTR [edx+edi*4]
  42352c:	fist   WORD PTR [eax+0xd]
  42352f:	sahf   
  423530:	adc    bh,BYTE PTR [ecx+0x11651a57]
  423536:	ins    DWORD PTR es:[edi],dx
  423537:	pop    edi
  423538:	xchg   ebx,eax
  423539:	cmp    bh,dh
  42353b:	(bad)  
  42353c:	or     DWORD PTR [ecx],esi
  42353e:	cmp    al,0x56
  423540:	(bad)  
  423541:	cwde   
  423542:	mov    cl,0x98
  423544:	inc    DWORD PTR [eax-0x1a]
  423547:	sbb    BYTE PTR [edx+0x7fb87441],ah
  42354d:	pop    es
  42354e:	mov    ds:0xe43d3304,eax
  423553:	sbb    eax,esp
  423555:	dec    edx
  423556:	and    esp,DWORD PTR [edx-0x45]
  423559:	ins    DWORD PTR es:[edi],dx
  42355a:	inc    eax
  42355b:	jb     0x42356b
  42355d:	mov    ah,0x54
  42355f:	test   DWORD PTR [ecx+ebx*8-0x3abc9515],0x6cf6b309
  42356a:	rol    DWORD PTR [ebx+eiz*2+0x4da0cc2c],cl
  423571:	arpl   WORD PTR [esi+0x2612d386],di
  423577:	in     eax,dx
  423578:	and    al,0x2b
  42357a:	pusha  
  42357b:	mov    ch,0x11
  42357d:	imul   edi,DWORD PTR [edi-0x152fdb3c],0xe
  423584:	push   ss
  423585:	(bad)  
  423586:	icebp  
  423587:	arpl   WORD PTR [ecx-0x335bd1a3],dx
  42358d:	mov    dl,ah
  42358f:	push   es
  423590:	(bad)  
  423592:	adc    ch,BYTE PTR [esp+ebx*2-0x7a06f3cd]
  423599:	ins    DWORD PTR es:[di],dx
  42359b:	gs dec eax
  42359d:	call   0x26f1bd3f
  4235a2:	mov    edx,0xc558d2a1
  4235a7:	pop    edi
  4235a8:	inc    ebx
  4235a9:	sbb    BYTE PTR ds:0xf17a494a,dl
  4235af:	sub    edx,DWORD PTR [ebx-0x2f]
  4235b2:	mov    ds:0xd15a2b5f,al
  4235b7:	in     al,0xf9
  4235b9:	jns    0x4235f3
  4235bb:	rcr    BYTE PTR [ebp+eiz*1-0x43aceb48],1
  4235c2:	cmc    
  4235c3:	shl    BYTE PTR ss:[esi+edi*2-0x579e2c2d],cl
  4235cb:	sahf   
  4235cc:	mov    edi,0x1058abb0
  4235d1:	in     eax,dx
  4235d2:	js     0x423589
  4235d4:	ins    DWORD PTR es:[edi],dx
  4235d5:	push   0x4e
  4235d7:	shr    BYTE PTR [esp+ebx*8-0x3],1
  4235db:	fst    DWORD PTR [edx]
  4235dd:	push   edx
  4235de:	add    eax,0x64fadc4
  4235e3:	mov    ?,WORD PTR [eax-0x49]
  4235e6:	leave  
  4235e7:	or     al,0x3e
  4235e9:	or     ah,BYTE PTR [edx]
  4235eb:	xor    DWORD PTR [esi+0x39762178],eax
  4235f1:	mov    dh,0x66
  4235f3:	xchg   ecx,eax
  4235f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235f5:	push   ebx
  4235f6:	mov    ebp,0x292fce92
  4235fb:	lahf   
  4235fc:	pusha  
  4235fd:	jp     0x4235e9
  4235ff:	addr16 mov dl,0x9e
  423602:	icebp  
  423603:	xor    BYTE PTR [ecx+0x41],bl
  423606:	adc    eax,0x46755270
  42360b:	les    ebx,FWORD PTR [esi]
  42360d:	(bad)  
  42360e:	lock outs dx,DWORD PTR ds:[esi]
  423610:	cmp    edi,edx
  423612:	xchg   esi,eax
  423613:	or     eax,0xebddf111
  423618:	adc    eax,0xe77da7b7
  42361d:	jne    0x4235da
  42361f:	dec    edx
  423620:	pop    edi
  423621:	out    dx,eax
  423622:	lods   al,BYTE PTR ds:[esi]
  423623:	or     eax,0x49b70826
  423628:	in     al,dx
  423629:	je     0x4235dc
  42362b:	retf   
  42362c:	mov    esp,0x343873e2
  423631:	push   esp
  423632:	mov    ecx,0x222e2737
  423637:	jmp    0x1dfc32a8
  42363c:	mov    bl,0xd8
  42363e:	das    
  42363f:	and    ah,bh
  423641:	cwde   
  423642:	iret   
  423643:	or     esp,ebp
  423645:	aaa    
  423646:	push   edx
  423647:	inc    ebx
  423648:	cld    
  423649:	sbb    al,0x4d
  42364b:	xor    DWORD PTR [eax-0x4d],0xb7f5aa09
  423652:	icebp  
  423653:	stos   BYTE PTR es:[edi],al
  423654:	loop   0x423650
  423656:	jmp    DWORD PTR [eax-0x6620f8b0]
  42365c:	jl     0x423601
  42365e:	jno    0x42364b
  423660:	jae    0x4236b9
  423662:	retf   0x2b2d
  423665:	int    0x7c
  423667:	stc    
  423668:	(bad)  
  423669:	xor    ebp,DWORD PTR [eax]
  42366b:	sub    DWORD PTR [eax+0x2a],esi
  42366e:	stos   DWORD PTR es:[edi],eax
  42366f:	rol    BYTE PTR [ecx+0x5a],cl
  423672:	scas   eax,DWORD PTR es:[edi]
  423673:	jb     0x423645
  423675:	xor    BYTE PTR [ebx],0x95
  423678:	fisttp QWORD PTR [edx-0x4b]
  42367b:	div    BYTE PTR [edi]
  42367d:	pop    edx
  42367e:	fistp  QWORD PTR [edx]
  423680:	cmp    ecx,DWORD PTR [edi-0x23]
  423683:	xor    DWORD PTR [ebx],edi
  423685:	sub    eax,0xd6f271d9
  42368a:	scas   al,BYTE PTR es:[edi]
  42368b:	(bad)  
  42368c:	jmp    0xc8bb:0x271779cf
  423693:	mov    al,0xe9
  423695:	outs   dx,BYTE PTR ds:[esi]
  423696:	clc    
  423697:	cwde   
  423698:	push   0xffffffb9
  42369a:	in     al,0x3
  42369c:	and    al,0x39
  42369e:	mov    ebx,0x7cc7e365
  4236a3:	daa    
  4236a4:	call   0x5e43:0x3c1dc3af
  4236ab:	mov    cl,bl
  4236ad:	rol    ch,1
  4236af:	loop   0x42372c
  4236b1:	ror    DWORD PTR [ebp+0x77],0x82
  4236b5:	jne    0x4236bb
  4236b7:	loope  0x4236cb
  4236b9:	loopne 0x42368f
  4236bb:	loopne 0x4236b3
  4236bd:	xor    esp,DWORD PTR [ecx]
  4236bf:	mov    bh,0x74
  4236c1:	imul   esi,DWORD PTR [eax-0x45ba434],0x426758c4
  4236cb:	xchg   esp,eax
  4236cc:	test   BYTE PTR [edi-0x15a56908],0x23
  4236d3:	cs daa 
  4236d5:	das    
  4236d6:	iret   
  4236d7:	xlat   BYTE PTR ds:[ebx]
  4236d8:	and    eax,0xa40b35fe
  4236dd:	push   ebp
  4236de:	loopne 0x4236e5
  4236e0:	nop
  4236e1:	out    dx,eax
  4236e2:	adc    esp,edi
  4236e4:	adc    al,0xf1
  4236e6:	cmp    DWORD PTR [ebx],edx
  4236e8:	inc    ecx
  4236e9:	addr16 xchg esi,eax
  4236eb:	sahf   
  4236ec:	jb     0x423679
  4236ee:	mov    edx,0x729e0dc1
  4236f3:	and    eax,0x90e5534f
  4236f8:	cmp    DWORD PTR [edx-0x305bdb12],esp
  4236fe:	mov    ds:0x17c93052,al
  423703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423704:	inc    ebx
  423705:	pop    eax
  423706:	xor    ah,BYTE PTR [esi+0x49]
  423709:	les    ecx,FWORD PTR [esi]
  42370b:	cmp    eax,0xc2972e47
  423710:	jns    0x4236c1
  423712:	or     eax,0xe959fac1
  423717:	jne    0x4236dc
  423719:	loop   0x42377b
  42371b:	popf   
  42371c:	pop    esp
  42371d:	aam    0x1
  42371f:	and    DWORD PTR [esi+ebp*8+0x45],eax
  423723:	xchg   esi,eax
  423724:	lea    eax,[edx-0x1a]
  423727:	or     ebp,DWORD PTR [edx-0x7599ab7b]
  42372d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42372e:	nop
  42372f:	out    dx,al
  423730:	push   es
  423731:	xor    esi,DWORD PTR [edx]
  423733:	cwde   
  423734:	inc    eax
  423735:	inc    esp
  423736:	mov    ch,0xf3
  423738:	pop    eax
  423739:	pushf  
  42373a:	sti    
  42373b:	js     0x4236c3
  42373d:	xor    al,0x52
  42373f:	dec    ebp
  423740:	xchg   BYTE PTR [ebx],bh
  423742:	xchg   ebp,eax
  423743:	scas   eax,DWORD PTR es:[edi]
  423744:	sub    eax,0xaea0b5bb
  423749:	mov    cl,0x98
  42374b:	(bad)  
  42374c:	in     al,dx
  42374d:	das    
  42374e:	xchg   edi,eax
  42374f:	cmp    DWORD PTR [eax+0x6cecaf72],ebx
  423755:	dec    esi
  423756:	add    al,0x4d
  423758:	fst    DWORD PTR [eax+0x40]
  42375b:	arpl   WORD PTR [ecx+0x2cb74e09],cx
  423761:	fdivr  QWORD PTR [edx-0x3b]
  423764:	mov    esi,0xd741240c
  423769:	add    eax,0x3e84d793
  42376e:	mov    cs,WORD PTR [edx+0x1f]
  423771:	stos   DWORD PTR es:[edi],eax
  423772:	ds fcompp 
  423775:	daa    
  423776:	adc    bh,dh
  423778:	aaa    
  423779:	and    bh,BYTE PTR [eax-0x1283d091]
  42377f:	cdq    
  423780:	mov    ah,0xec
  423782:	cwde   
  423783:	outs   dx,BYTE PTR ds:[esi]
  423784:	bound  ebx,QWORD PTR [ebp+0x62]
  423787:	jmp    0x9c29:0xedfdea6c
  42378e:	scas   al,BYTE PTR es:[edi]
  42378f:	sbb    edx,edx
  423791:	ret    0x696b
  423794:	dec    ecx
  423795:	inc    edx
  423796:	mov    eax,ds:0x657b3f16
  42379b:	mov    bl,0x14
  42379d:	mov    edi,0xec7cf55a
  4237a2:	or     al,0x92
  4237a4:	es aam 0x5b
  4237a7:	into   
  4237a8:	repnz aad 0x94
  4237ab:	cdq    
  4237ac:	or     al,0x2
  4237ae:	inc    esi
  4237af:	adc    al,BYTE PTR [ebx]
  4237b1:	lock cdq 
  4237b3:	inc    esp
  4237b4:	ret    
  4237b5:	retf   
  4237b6:	mov    edi,0xf0b46276
  4237bb:	push   0xffffff99
  4237bd:	cs push eax
  4237bf:	fstp   QWORD PTR [edx+0x2a]
  4237c2:	lds    ecx,FWORD PTR [ebp+0x1bfc956]
  4237c8:	test   BYTE PTR [eax-0x2ee09bd7],0x44
  4237cf:	fild   QWORD PTR [edx-0x63cbf90c]
  4237d5:	jge    0x423826
  4237d7:	jns    0x4237da
  4237d9:	add    BYTE PTR [ebx+0x3831f909],dh
  4237df:	std    
  4237e0:	cmp    DWORD PTR [ebx+0x0],0xffffffc5
  4237e4:	test   eax,0x1867dd95
  4237e9:	gs push 0xffffff9e
  4237ec:	mov    ecx,0x96a6c93c
  4237f1:	popf   
  4237f2:	mov    bl,0xf9
  4237f4:	push   ecx
  4237f5:	mov    al,ds:0x27f22ee5
  4237fa:	push   ecx
  4237fb:	cmp    eax,0x74cf4481
  423800:	dec    edx
  423801:	or     ecx,edi
  423803:	push   cs
  423804:	pusha  
  423805:	test   al,0x42
  423807:	add    al,0xd3
  423809:	jne    0x42381f
  42380b:	test   BYTE PTR [eax+0x76ca52a5],0x1b
  423812:	sub    ch,BYTE PTR [edi-0x2f07f527]
  423818:	jae    0x423887
  42381a:	xchg   ebx,eax
  42381b:	jle    0x42382a
  42381d:	outs   dx,DWORD PTR ds:[esi]
  42381e:	push   eax
  42381f:	push   ebp
  423820:	mov    dl,0x2e
  423822:	pop    ds
  423823:	sbb    esi,esi
  423825:	mov    ebx,0xe74eb9ae
  42382a:	inc    esp
  42382b:	daa    
  42382c:	inc    ebp
  42382d:	mov    bh,0x33
  42382f:	mov    DWORD PTR [ebx+ebx*1],edx
  423832:	jnp    0x4237be
  423834:	sub    DWORD PTR [ecx+0x627a6a7d],eax
  42383a:	sbb    edi,DWORD PTR [eax-0xb73eca6]
  423840:	fwait
  423841:	sub    bh,BYTE PTR [ebp-0x5a]
  423844:	push   0x9993e169
  423849:	(bad)  
  42384b:	mov    bl,0x23
  42384d:	lock in al,dx
  42384f:	shl    BYTE PTR [edi-0x6fa05566],0xd3
  423856:	in     eax,dx
  423857:	xor    edi,DWORD PTR [esi-0x28]
  42385a:	sub    eax,ecx
  42385c:	add    BYTE PTR [esi-0x3ee7c44c],cl
  423862:	inc    edi
  423863:	inc    ecx
  423864:	fisubr WORD PTR [esi+edi*8]
  423867:	sub    eax,0xcc30f1a1
  42386c:	push   cs
  42386d:	push   0x32
  42386f:	sub    esp,DWORD PTR [edi-0xd]
  423872:	sti    
  423873:	sbb    BYTE PTR [edx-0x440719a3],dh
  423879:	lea    eax,[esi+0x6f]
  42387c:	pop    ecx
  42387d:	out    dx,al
  42387e:	inc    ebx
  42387f:	inc    ebp
  423880:	aas    
  423881:	fiadd  WORD PTR [eax]
  423883:	ja     0x42387e
  423885:	mov    si,0xcf88
  423889:	xor    bh,dl
  42388b:	stos   BYTE PTR es:[edi],al
  42388c:	loop   0x423815
  42388e:	repnz dec edx
  423890:	jmp    0x423837
  423892:	jg     0x423882
  423894:	cmp    al,0x83
  423896:	sbb    edx,DWORD PTR [edx-0xc86229e]
  42389c:	loopne 0x42386c
  42389e:	cdq    
  42389f:	cld    
  4238a0:	cwde   
  4238a1:	pop    ss
  4238a2:	push   0x1e
  4238a4:	jb     0x423873
  4238a6:	add    bh,BYTE PTR [eax+0x36480770]
  4238ac:	mov    dh,0x31
  4238ae:	mov    al,ds:0x51e06b59
  4238b3:	jp     0x4238da
  4238b5:	(bad)  
  4238b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238b7:	sbb    al,0x71
  4238b9:	xchg   BYTE PTR [esi+0x7d04f823],cl
  4238bf:	inc    ebp
  4238c0:	jmp    0x36f530af
  4238c5:	sub    DWORD PTR [ebx-0x215c1041],ebx
  4238cb:	adc    DWORD PTR [eax-0x54e5374b],esp
  4238d1:	daa    
  4238d2:	ins    DWORD PTR es:[edi],dx
  4238d3:	jg     0x42392d
  4238d5:	jl     0x4238ad
  4238d7:	pop    eax
  4238d8:	xchg   ebx,eax
  4238d9:	test   ch,ch
  4238db:	jl     0x423873
  4238dd:	xor    al,0x52
  4238df:	or     ah,BYTE PTR [ebp-0x20]
  4238e2:	dec    ebp
  4238e3:	je     0x4238c7
  4238e5:	and    dl,BYTE PTR [ebx+0x2360a7a6]
  4238eb:	aas    
  4238ec:	out    0x67,al
  4238ee:	jo     0x4238a3
  4238f0:	push   edi
  4238f1:	call   0x419:0xee1f3987
  4238f8:	dec    ebp
  4238f9:	mov    bh,0xf3
  4238fb:	jo     0x4238b7
  4238fd:	rcl    BYTE PTR [esi-0x6],1
  423900:	sub    DWORD PTR [ebx-0xd],edi
  423903:	adc    esi,esi
  423905:	sub    al,0xad
  423907:	out    dx,al
  423908:	ins    DWORD PTR es:[edi],dx
  423909:	mov    esp,0xfa21d9d6
  42390e:	pop    ds
  42390f:	icebp  
  423910:	mov    bl,0xa9
  423912:	dec    edi
  423913:	cmp    BYTE PTR [edx*4+0x3f279af7],al
  42391a:	cmp    BYTE PTR [edi+0x9],bl
  42391d:	dec    edi
  42391e:	mov    esi,0x4416e47d
  423923:	test   BYTE PTR [edi-0x47e5d97f],ah
  423929:	add    DWORD PTR [ecx+0x3075d8b],esp
  42392f:	xor    ch,BYTE PTR [eax+0x5d1ac0c0]
  423935:	jbe    0x42395e
  423937:	mov    dh,0x65
  423939:	neg    DWORD PTR [eax]
  42393b:	mov    ah,0x37
  42393d:	jbe    0x42398a
  42393f:	mov    BYTE PTR [ebx+0x6e],ch
  423942:	push   ebx
  423943:	jge    0x4238e8
  423945:	mov    ecx,0x50264065
  42394a:	mov    ds:0x2d026b13,al
  42394f:	iret   
  423950:	stc    
  423951:	dec    edx
  423952:	mov    WORD PTR [ebx+esi*4+0x60f6b476],es
  423959:	add    DWORD PTR [esi+eiz*8-0x7dc07144],ecx
  423960:	push   0x4a
  423962:	sub    esp,DWORD PTR [ebx]
  423964:	cmp    BYTE PTR [ecx],0xfb
  423967:	(bad)  
  423968:	mov    ebp,0xdca7bf06
  42396d:	jno    0x4239a3
  42396f:	and    DWORD PTR [ebx+0x8bd0775],ecx
  423975:	mov    esp,0x2126bc22
  42397a:	pop    edx
  42397b:	mov    ebx,0x6ba08856
  423980:	and    al,0xc2
  423982:	iret   
  423983:	iret   
  423984:	jae    0x423986
  423986:	(bad)  
  423987:	and    al,0xa6
  423989:	fisubr WORD PTR [ecx+0x67]
  42398c:	ficom  DWORD PTR [esi-0x4a0823a7]
  423992:	or     BYTE PTR [edx-0x7c38bd3e],0x6e
  423999:	jns    0x4239b1
  42399b:	fs (bad) 
  42399d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42399e:	loop   0x4239e3
  4239a0:	outs   dx,BYTE PTR ds:[esi]
  4239a1:	and    BYTE PTR [edi-0x5e4a161e],0x8
  4239a8:	js     0x4239ab
  4239aa:	gs cld 
  4239ac:	out    dx,al
  4239ad:	or     edi,DWORD PTR [esi+0x3c3400d4]
  4239b3:	or     BYTE PTR [ebx+0x42ab78fa],dl
  4239b9:	dec    edx
  4239ba:	test   BYTE PTR [edx],bh
  4239bc:	mov    esi,0x2c5fc532
  4239c1:	ja     0x423975
  4239c3:	mov    ecx,0x7c86909
  4239c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c9:	inc    edx
  4239ca:	(bad)  
  4239cb:	push   eax
  4239cc:	loope  0x423993
  4239ce:	jp     0x4239ae
  4239d0:	push   esi
  4239d1:	fisttp WORD PTR [ebx]
  4239d3:	jmp    DWORD PTR [eax-0x47bd2c45]
  4239d9:	jmp    0x42398f
  4239db:	cmp    ch,dl
  4239dd:	sbb    bh,BYTE PTR [edx+eax*1]
  4239e0:	cmp    eax,0x2450a4cb
  4239e5:	not    DWORD PTR [esi]
  4239e7:	pop    eax
  4239e8:	jp     0x4239ca
  4239ea:	dec    edx
  4239eb:	gs push ecx
  4239ed:	mov    ebp,0xaf715180
  4239f2:	adc    ah,BYTE PTR [ebp+ecx*2+0x76f2d755]
  4239f9:	xor    DWORD PTR [edx],edi
  4239fb:	lods   al,BYTE PTR ds:[esi]
  4239fc:	cwde   
  4239fd:	hlt    
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x2286fcaa]
  423a12:	pop    ebp
  423a13:	mov    bl,0x1
  423a15:	add    ah,dh
  423a17:	add    al,0x0
  423a19:	add    bl,dl
  423a1b:	inc    ecx
  423a1c:	daa    
  423a1d:	repnz out 0x86,eax
  423a20:	lea    esp,[ecx+0x75]
  423a23:	jmp    0xef47:0x41a84312
  423a2a:	dec    esp
  423a2b:	pop    esp
  423a2c:	mov    ds:0x8abafac1,eax
  423a31:	add    al,0x9f
  423a33:	lds    esi,FWORD PTR ds:0x96f69e13
  423a39:	add    esi,ebp
  423a3b:	iret   
  423a3c:	jl     0x423ab3
  423a3e:	jbe    0x4239cf
  423a40:	out    dx,al
  423a41:	xchg   esp,eax
  423a42:	adc    eax,0x1b53ed7b
  423a47:	repnz stc 
  423a49:	pop    ebp
  423a4a:	xor    BYTE PTR [edi-0x3b833560],0x8b
  423a51:	jnp    0x423a77
  423a53:	jmp    0x92be:0x2cbbd136
  423a5a:	pop    edx
  423a5b:	push   ebp
  423a5c:	jp     0x423a9f
  423a5e:	dec    ebp
  423a5f:	dec    ebp
  423a60:	push   0xfffffffb
  423a62:	fldenv [edx-0x1311c1cb]
  423a68:	pop    edi
  423a69:	mov    ah,0x1f
  423a6b:	push   edx
  423a6c:	fiadd  DWORD PTR [edi+ebx*4+0x6f8783a4]
  423a73:	xchg   ebx,eax
  423a74:	jo     0x423a97
  423a76:	inc    ebx
  423a77:	jo     0x423ad2
  423a79:	inc    esi
  423a7a:	and    al,0x78
  423a7c:	retf   
  423a7d:	adc    eax,0x8e30c679
  423a82:	xchg   BYTE PTR [ebx+0x16e1374],ch
  423a88:	aaa    
  423a89:	xchg   ebp,eax
  423a8a:	(bad)  
  423a8b:	out    dx,al
  423a8c:	aad    0xd6
  423a8e:	and    eax,0x3d95bd1c
  423a93:	in     al,dx
  423a94:	or     al,0x35
  423a96:	inc    edx
  423a97:	adc    al,BYTE PTR [edx-0x6d]
  423a9a:	fidiv  WORD PTR [ebp+0x12abdb2b]
  423aa0:	mov    ebx,0x96bc0fee
  423aa5:	inc    esp
  423aa6:	mov    edx,0x3075dcb7
  423aab:	gs pop ebx
  423aad:	lods   al,BYTE PTR fs:[esi]
  423aaf:	div    BYTE PTR [esi-0xb]
  423ab2:	sbb    bh,BYTE PTR [edx+0x78efec0c]
  423ab8:	je     0x423a78
  423aba:	pop    ebp
  423abb:	pop    ss
  423abc:	pop    ds
  423abd:	cdq    
  423abe:	add    dh,dh
  423ac0:	mov    eax,ds:0xc811574d
  423ac5:	(bad)  
  423ac6:	fidiv  WORD PTR [esi-0x5c]
  423ac9:	jmp    0x80b67c5
  423ace:	scas   al,BYTE PTR es:[edi]
  423acf:	les    ecx,FWORD PTR [eax+0x1b]
  423ad2:	jb     0x423aad
  423ad4:	stos   BYTE PTR es:[edi],al
  423ad5:	mov    bh,0xff
  423ad7:	outs   dx,DWORD PTR ds:[esi]
  423ad8:	fwait
  423ad9:	test   BYTE PTR [eax+0x8],ah
  423adc:	sbb    eax,0xc0a36568
  423ae1:	pop    ecx
  423ae2:	mov    ecx,0xfdde4ed0
  423ae7:	fldcw  WORD PTR [ecx-0x47ff2125]
  423aed:	push   esp
  423aee:	in     al,dx
  423aef:	test   eax,0x6139e6ba
  423af4:	jge    0x423b51
  423af6:	and    esi,DWORD PTR [esi-0x23]
  423af9:	lods   al,BYTE PTR ds:[esi]
  423afa:	and    al,0xdd
  423afc:	sbb    al,0xd3
  423afe:	call   0x6590:0x9c869a91
  423b05:	ins    BYTE PTR es:[edi],dx
  423b06:	jb     0x423aec
  423b08:	stc    
  423b09:	sub    eax,0x1f136b8e
  423b0e:	dec    ebp
  423b0f:	fnstcw WORD PTR [edx-0x51]
  423b12:	pop    ebx
  423b13:	repnz in al,0xb2
  423b16:	aad    0x51
  423b18:	addr16 jmp 0x423b7b
  423b1b:	or     ebx,edx
  423b1d:	and    eax,0x3094c685
  423b22:	sbb    BYTE PTR [edx+0x1f],bh
  423b25:	scas   al,BYTE PTR es:[edi]
  423b26:	sbb    al,0x12
  423b28:	cmp    ecx,0x3ec0e1cc
  423b2e:	or     BYTE PTR [eax],ah
  423b30:	sete   BYTE PTR [esi+0x33]
  423b34:	aad    0xc1
  423b36:	test   ebp,esp
  423b38:	cdq    
  423b39:	xor    dh,BYTE PTR [ecx]
  423b3b:	sub    ebp,DWORD PTR [ebx+0x70]
  423b3e:	jmp    FWORD PTR [ecx+0x4e]
  423b41:	outs   dx,DWORD PTR ds:[esi]
  423b42:	cmp    al,0x76
  423b44:	ror    bl,0x90
  423b47:	dec    ecx
  423b48:	jbe    0x423bab
  423b4a:	nop
  423b4b:	or     eax,DWORD PTR [ecx+ebx*8+0x3e369c82]
  423b52:	sub    al,0x3c
  423b54:	add    dl,ch
  423b56:	pop    ecx
  423b57:	(bad)  
  423b58:	cmp    ah,BYTE PTR [ebx-0x73238b4f]
  423b5e:	(bad)  
  423b5f:	push   edi
  423b60:	sub    bh,BYTE PTR [eax]
  423b62:	data16 aaa 
  423b64:	iret   
  423b65:	and    eax,0xe98abc70
  423b6a:	iret   
  423b6b:	dec    edi
  423b6c:	pusha  
  423b6d:	push   es
  423b6e:	inc    BYTE PTR ds:0x4d3a55c
  423b74:	xchg   esp,eax
  423b75:	jno    0x423bd6
  423b77:	inc    eax
  423b78:	dec    ecx
  423b79:	ffreep st(1)
  423b7b:	fcmovnu st,st(5)
  423b7d:	or     eax,0x428feafa
  423b82:	fwait
  423b83:	sti    
  423b84:	call   0x5da9e424
  423b89:	inc    edx
  423b8a:	lods   al,BYTE PTR ds:[esi]
  423b8b:	sub    al,0xaf
  423b8d:	cs jp  0x423bfb
  423b90:	mov    DWORD PTR [ecx-0x12],0x8f3f2c3a
  423b97:	inc    esi
  423b98:	test   al,0xdf
  423b9a:	jge    0x423c01
  423b9c:	inc    ecx
  423b9d:	out    dx,eax
  423b9e:	out    dx,al
  423b9f:	sub    DWORD PTR ds:0x22c4271b,ecx
  423ba5:	idiv   DWORD PTR [ebp+ecx*8-0x7d]
  423ba9:	mov    cl,0x3e
  423bab:	mov    eax,ds:0x2a05e739
  423bb0:	aad    0xa7
  423bb2:	fdivrp st(6),st
  423bb4:	lods   eax,DWORD PTR ds:[esi]
  423bb5:	lods   al,BYTE PTR ds:[esi]
  423bb6:	mov    eax,ds:0x463b3aa6
  423bbb:	sub    al,BYTE PTR [ebp-0x6b]
  423bbe:	add    al,0xcc
  423bc0:	mov    ebx,0x8d06407
  423bc5:	or     al,BYTE PTR [eax]
  423bc7:	fdivp  st(3),st
  423bc9:	mov    ds:0xa5c08610,al
  423bce:	les    ecx,FWORD PTR [edi]
  423bd0:	cmp    al,0xe3
  423bd2:	retf   
  423bd3:	xlat   BYTE PTR ds:[ebx]
  423bd4:	pop    ecx
  423bd5:	sbb    BYTE PTR [edx],dl
  423bd7:	loope  0x423bd1
  423bd9:	jno    0x423c0a
  423bdb:	jns    0x423bbf
  423bdd:	inc    ebp
  423bde:	js     0x423b6d
  423be0:	xor    BYTE PTR [ebx+0x5cbe4e0d],dh
  423be6:	xchg   ecx,eax
  423be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423be8:	dec    edi
  423be9:	gs add eax,0x63bb4a80
  423bef:	es xchg edx,eax
  423bf1:	adc    dh,BYTE PTR [esi-0x48]
  423bf4:	cdq    
  423bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf6:	cmp    eax,0xa8982879
  423bfb:	(bad)  
  423bfc:	aam    0x75
  423bfe:	inc    esp
  423bff:	dec    esi
  423c00:	xor    DWORD PTR [ebp-0x58],eax
  423c03:	bound  esi,QWORD PTR [ebx]
  423c05:	cwde   
  423c06:	and    al,0x75
  423c08:	jnp    0x423c1f
  423c0a:	mov    WORD PTR [ebx+eiz*2+0x754024ac],gs
  423c11:	push   es
  423c12:	aaa    
  423c13:	pop    eax
  423c14:	bound  edx,QWORD PTR [ecx]
  423c16:	jne    0x423c23
  423c18:	aas    
  423c19:	addr16 dec ebx
  423c1b:	mov    ah,0xef
  423c1d:	jmp    0x7ed8:0x9bc33bf1
  423c24:	(bad)  
  423c25:	jecxz  0x423c53
  423c27:	sbb    DWORD PTR [ecx+0x3e5e8b02],esp
  423c2d:	xor    DWORD PTR [esi+0x5f438be8],eax
  423c33:	dec    esp
  423c34:	sbb    DWORD PTR [edx+0x988fb4d],edi
  423c3a:	sbb    BYTE PTR gs:[eax-0x45],cl
  423c3e:	repnz clc 
  423c40:	loop   0x423bd6
  423c42:	xchg   DWORD PTR [edx+0x9],ebx
  423c45:	nop
  423c46:	inc    esp
  423c47:	mov    DWORD PTR [edx],esp
  423c49:	mov    BYTE PTR [esi+0x29d1beb4],cl
  423c4f:	sub    al,0x85
  423c51:	mov    eax,DWORD PTR [esi-0x1fcc4ff6]
  423c57:	sahf   
  423c58:	xor    BYTE PTR [edi],ah
  423c5a:	push   ebx
  423c5b:	sbb    al,0x32
  423c5d:	push   edx
  423c5e:	sub    ch,BYTE PTR [ecx-0x18]
  423c61:	adc    dl,al
  423c63:	adc    bl,BYTE PTR [ecx]
  423c65:	loope  0x423cd8
  423c67:	sbb    BYTE PTR [edx-0x42],bh
  423c6a:	xchg   dl,cl
  423c6c:	(bad)  
  423c6d:	ret    
  423c6e:	mov    cl,0x9d
  423c70:	add    edx,DWORD PTR [ebp+0x7e]
  423c73:	je     0x423c2d
  423c75:	jne    0x423c73
  423c77:	retf   0x72fc
  423c7a:	mov    WORD PTR fs:[eax-0x6711754a],?
  423c81:	sub    dl,BYTE PTR [eax+0x17631912]
  423c87:	jno    0x423c10
  423c89:	rcl    eax,cl
  423c8b:	push   eax
  423c8c:	(bad)  
  423c8d:	cmp    eax,ebp
  423c8f:	cld    
  423c90:	dec    edx
  423c91:	popf   
  423c92:	pusha  
  423c93:	mov    edi,0x9ae325bb
  423c98:	sbb    BYTE PTR [esi],al
  423c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c9b:	push   ds
  423c9c:	mov    ds:0x22a4ffa7,al
  423ca1:	cmp    esi,DWORD PTR [edi+esi*8-0x290524b3]
  423ca8:	cmp    esp,esi
  423caa:	in     al,0x51
  423cac:	pop    ebp
  423cad:	pop    esi
  423cae:	(bad)  [ecx]
  423cb0:	pop    edi
  423cb1:	and    eax,0xfd344c48
  423cb6:	rol    edx,1
  423cb8:	aad    0xfe
  423cba:	fdiv   DWORD PTR [ebx]
  423cbc:	data16 mov dl,0x54
  423cbf:	(bad)  
  423cc0:	ror    esp,cl
  423cc2:	ds cmp bh,cl
  423cc5:	std    
  423cc6:	out    dx,eax
  423cc7:	adc    BYTE PTR [ecx],bl
  423cc9:	jbe    0x423cf3
  423ccb:	test   BYTE PTR [ebx],al
  423ccd:	ins    DWORD PTR es:[edi],dx
  423cce:	cmc    
  423ccf:	loopne 0x423d02
  423cd1:	iret   
  423cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cd3:	(bad)  
  423cd4:	(bad)  
  423cd5:	mov    ds:0x2d7a664a,eax
  423cda:	jbe    0x423cb4
  423cdc:	sub    ebx,edi
  423cde:	jl     0x423c9d
  423ce0:	hlt    
  423ce1:	das    
  423ce2:	cmc    
  423ce3:	nop
  423ce4:	add    BYTE PTR [ecx-0x38861cc1],0xd2
  423ceb:	rcr    BYTE PTR [eax],1
  423ced:	push   es
  423cee:	xor    al,0xb8
  423cf0:	xchg   dl,al
  423cf2:	xchg   ecx,eax
  423cf3:	loope  0x423ca9
  423cf5:	ss hlt 
  423cf7:	clc    
  423cf8:	jo     0x423d5c
  423cfa:	sbb    eax,DWORD PTR [ebx+0x42]
  423cfd:	cs xchg edx,eax
  423cff:	int    0x93
  423d01:	(bad)  
  423d02:	cmp    bh,ah
  423d04:	dec    ebp
  423d05:	xor    bl,BYTE PTR [edx-0x1a]
  423d08:	loope  0x423ca7
  423d0a:	or     BYTE PTR [ecx+0x720370b0],al
  423d10:	jmp    0x423d90
  423d12:	icebp  
  423d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d14:	mov    ax,0xca99
  423d18:	je     0x423d22
  423d1a:	mov    ds:0xc10f536e,eax
  423d1f:	lds    esi,FWORD PTR [esi]
  423d21:	jmp    0x423d4b
  423d23:	out    0xf1,al
  423d25:	sar    DWORD PTR [esi-0x35b6c671],cl
  423d2b:	jbe    0x423cc4
  423d2d:	cdq    
  423d2e:	popa   
  423d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d30:	and    eax,0x11fafd99
  423d35:	sahf   
  423d36:	cdq    
  423d37:	sar    DWORD PTR [esi],cl
  423d39:	push   0x2a
  423d3b:	(bad)  
  423d3c:	out    dx,eax
  423d3d:	xchg   ebp,eax
  423d3e:	sti    
  423d3f:	ret    0x54c6
  423d42:	ins    BYTE PTR es:[edi],dx
  423d43:	jns    0x423db2
  423d45:	dec    edx
  423d46:	jle    0x423d38
  423d48:	cli    
  423d49:	fnsave [edi]
  423d4b:	mov    BYTE PTR [ecx],dl
  423d4d:	pop    esi
  423d4e:	pop    edi
  423d4f:	loopne 0x423d83
  423d51:	cmp    dl,BYTE PTR [esi]
  423d53:	adc    eax,0x229116eb
  423d58:	pop    edi
  423d59:	repnz lea esp,[edx-0x4d]
  423d5d:	mov    al,0x91
  423d5f:	je     0x423dc9
  423d61:	xor    al,0x41
  423d63:	xor    eax,0xff29d82e
  423d68:	imul   edx,DWORD PTR ds:0x3e34b89b,0xdc07aca3
  423d72:	sub    DWORD PTR [esi-0x78],esp
  423d75:	imul   esi,ecx,0x49852c80
  423d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d7c:	leave  
  423d7d:	inc    edi
  423d7e:	sahf   
  423d7f:	test   ebp,esp
  423d81:	fwait
  423d82:	jbe    0x423daf
  423d84:	mov    ebx,0xba189044
  423d89:	call   DWORD PTR [edi+eiz*1]
  423d8c:	push   cs
  423d8d:	pop    edx
  423d8e:	retf   0x3a6a
  423d91:	and    esp,esi
  423d93:	mov    ds:0xace11807,eax
  423d98:	jne    0x423d8f
  423d9a:	popa   
  423d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d9c:	test   DWORD PTR [ebx-0x4f6bce4d],0x79babf82
  423da6:	mov    db7,ecx
  423da9:	test   DWORD PTR [ecx+0x5],ebp
  423dac:	hlt    
  423dad:	test   DWORD PTR [esi],ecx
  423daf:	test   DWORD PTR [ecx+ebp*2+0xfe6e982],ebp
  423db6:	div    DWORD PTR [edx]
  423db8:	inc    ecx
  423db9:	into   
  423dba:	in     eax,0x9f
  423dbc:	push   ebp
  423dbd:	jnp    0x423ded
  423dbf:	xor    DWORD PTR [eax],0x5c
  423dc2:	inc    DWORD PTR [edx+0x2381f78]
  423dc8:	adc    ebx,edx
  423dca:	pop    esi
  423dcb:	sbb    DWORD PTR [eax+ebp*4+0x1e],esi
  423dcf:	dec    ebx
  423dd0:	std    
  423dd1:	lahf   
  423dd2:	loopne 0x423db5
  423dd4:	retf   
  423dd5:	jmp    0xec25:0x795653a9
  423ddc:	sbb    dl,BYTE PTR ds:[edi+0x30e48222]
  423de3:	fild   WORD PTR [ebx+0xe1e8ace]
  423de9:	mov    ch,0x6d
  423deb:	pop    esi
  423dec:	jns    0x423d76
  423dee:	inc    si
  423df0:	lahf   
  423df1:	icebp  
  423df2:	adc    dl,bh
  423df4:	retf   0xfe03
  423df7:	fimul  WORD PTR [ebp-0x42]
  423dfa:	(bad)  
  423dfc:	(bad)  
  423dfd:	ss int3 
  423dff:	test   DWORD PTR [edx],ecx
  423e01:	mov    al,0x2f
  423e03:	in     al,dx
  423e04:	cmp    bl,BYTE PTR [edx]
  423e06:	repnz push edi
  423e08:	fld1   
  423e0a:	jo     0x423daa
  423e0c:	leave  
  423e0d:	and    ah,BYTE PTR [eax+0x2a]
  423e10:	push   cs
  423e11:	retf   
  423e12:	ds or  esp,eax
  423e15:	enter  0x3026,0xbb
  423e19:	sar    DWORD PTR [ebp-0x449c59f8],cl
  423e1f:	or     bh,BYTE PTR [edx-0x5c5c7d69]
  423e25:	shl    DWORD PTR [edi],cl
  423e27:	mov    al,ds:0x868d4366
  423e2c:	fwait
  423e2d:	out    dx,eax
  423e2e:	fs popa 
  423e30:	mov    ah,0x78
  423e32:	inc    ebp
  423e33:	repz ss mov cl,0xe4
  423e37:	or     al,0x4c
  423e39:	jmp    FWORD PTR [edi+0x8b2c7ec]
  423e3f:	inc    esp
  423e40:	fs int 0x8
  423e43:	jmp    0x37:0xf9a402bb
  423e4a:	(bad)  
  423e4b:	push   eax
  423e4c:	cmp    al,0xa3
  423e4e:	fidivr WORD PTR [ebp-0x50]
  423e51:	adc    DWORD PTR [esi+ebx*1-0x5e6236dd],edi
  423e58:	fadd   DWORD PTR [ebx-0x768cf499]
  423e5e:	and    dl,ch
  423e60:	jne    0x423de8
  423e62:	dec    ebp
  423e63:	bswap  ebx
  423e65:	add    DWORD PTR [ebx+ebp*4],esi
  423e68:	xchg   esi,eax
  423e69:	mov    ah,0xac
  423e6b:	int3   
  423e6c:	out    0x88,eax
  423e6e:	fidivr DWORD PTR [ecx+0x1b]
  423e71:	adc    esi,DWORD PTR [eax-0x11356002]
  423e77:	and    al,BYTE PTR [ebx]
  423e79:	sbb    DWORD PTR [eax-0x5a66a0dd],esp
  423e7f:	ror    dh,cl
  423e81:	inc    esp
  423e82:	dec    ebx
  423e83:	frstor [eax+edx*1]
  423e86:	das    
  423e87:	xor    edi,edi
  423e89:	je     0x423e81
  423e8b:	(bad)  [ebp+0x6]
  423e8e:	cmc    
  423e8f:	adc    ecx,DWORD PTR [ecx]
  423e91:	and    BYTE PTR [ebx+0x2c],al
  423e94:	les    edx,FWORD PTR [edi]
  423e96:	lea    esp,[ecx-0x6b]
  423e99:	sbb    eax,0xac929e9d
  423e9e:	pop    ss
  423e9f:	mov    dl,0x6a
  423ea1:	test   ebx,ebp
  423ea3:	and    esp,0x9f3050f6
  423ea9:	dec    ebp
  423eaa:	stos   DWORD PTR es:[edi],eax
  423eab:	daa    
  423eac:	pushf  
  423ead:	xchg   BYTE PTR [esi+ebp*1-0x6c40fe4b],dl
  423eb4:	sbb    DWORD PTR [ebp+eiz*2-0xc],edx
  423eb8:	mov    ebx,0x4c1e7b38
  423ebd:	sbb    al,0x42
  423ebf:	ror    DWORD PTR [edi+0x22210c50],0xca
  423ec6:	(bad)  
  423ec7:	(bad)  
  423ec8:	push   ebp
  423ec9:	or     al,0x84
  423ecb:	sbb    bh,BYTE PTR [ebx-0x4d]
  423ece:	xor    DWORD PTR [ebp-0x76],ebx
  423ed1:	pop    ds
  423ed2:	ins    WORD PTR es:[edi],dx
  423ed4:	add    ah,dl
  423ed6:	jo     0x423e5f
  423ed8:	(bad)
  423edb:	sub    eax,0xb91c6b54
  423ee0:	daa    
  423ee1:	outs   dx,BYTE PTR ds:[esi]
  423ee2:	and    eax,0xe58e30bc
  423ee7:	pop    edi
  423ee8:	out    0x81,eax
  423eea:	mov    ds:0xff8f585c,al
  423eef:	jecxz  0x423f2d
  423ef1:	addr16 je 0x423e9b
  423ef4:	mov    WORD PTR [ebp+0x45],fs
  423ef7:	xchg   edx,eax
  423ef8:	xchg   BYTE PTR [ebp-0x48014588],ah
  423efe:	sub    esp,ecx
  423f00:	sbb    al,0x3c
  423f02:	mov    edx,0xf4af4ccf
  423f07:	jmp    0x423ea2
  423f09:	fwait
  423f0a:	mov    edx,0x98de81
  423f0f:	add    BYTE PTR [eax],al
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fisub  DWORD PTR [ebx+0x5181d6bf]
  423f23:	mov    eax,0x4f40001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f2b:	adc    BYTE PTR [eax+0x72],ch
  423f2e:	sub    BYTE PTR [ebp-0x18],al
  423f31:	and    esp,DWORD PTR [ebp-0x76]
  423f34:	adc    ch,BYTE PTR [edi-0x15185390]
  423f3a:	jbe    0x423f65
  423f3c:	scas   eax,DWORD PTR es:[edi]
  423f3d:	adc    bh,bh
  423f3f:	sub    edx,DWORD PTR [eax+0x60ac1308]
  423f45:	sub    al,BYTE PTR [ecx-0x37]
  423f48:	iret   
  423f49:	pop    edx
  423f4a:	pop    edx
  423f4b:	inc    edi
  423f4c:	xor    edx,DWORD PTR [edx]
  423f4e:	popf   
  423f4f:	xor    DWORD PTR [edx-0x49],0x6f
  423f53:	lods   eax,DWORD PTR ds:[esi]
  423f54:	fimul  DWORD PTR [esi-0x1]
  423f57:	gs or  al,0xf0
  423f5a:	mov    ecx,0xd6b62af5
  423f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f60:	test   ah,dl
  423f62:	mov    esi,0x7e3e27f4
  423f67:	dec    esi
  423f68:	xor    BYTE PTR [edi],bh
  423f6a:	sub    DWORD PTR [esi+0x2e],edi
  423f6d:	stos   DWORD PTR es:[edi],eax
  423f6e:	cwde   
  423f6f:	pushf  
  423f70:	out    dx,al
  423f71:	test   BYTE PTR [eax-0x4c],cl
  423f74:	rcl    DWORD PTR [ebp-0x61a4dfb7],0xb2
  423f7b:	pusha  
  423f7c:	iret   
  423f7d:	gs jmp 0x423f6e
  423f80:	or     eax,0xdd5a9fdb
  423f85:	xor    DWORD PTR [edi+0xf],ebp
  423f88:	test   ch,al
  423f8a:	and    eax,0xf5f7613
  423f8f:	mov    dh,0xba
  423f91:	dec    esp
  423f92:	retf   
  423f93:	mov    al,0x9a
  423f95:	fwait
  423f96:	into   
  423f97:	mov    ecx,0xe9762a1
  423f9c:	jae    0x423fc4
  423f9e:	loope  0x423fb0
  423fa0:	or     DWORD PTR [eax-0x4a8f14b5],ebx
  423fa6:	adc    esi,eax
  423fa8:	iret   
  423fa9:	rcl    edi,0x85
  423fac:	xchg   ebx,eax
  423fad:	mov    al,ds:0xab977fe6
  423fb2:	jo     0x424007
  423fb4:	fwait
  423fb5:	out    0x5e,eax
  423fb7:	push   edx
  423fb8:	xchg   esp,eax
  423fb9:	push   0x4f
  423fbb:	and    cl,0x1e
  423fbe:	adc    ebx,DWORD PTR [ebx-0x22]
  423fc1:	int    0xe7
  423fc3:	in     al,0x78
  423fc5:	mov    edx,0x8af0681f
  423fca:	das    
  423fcb:	or     cl,BYTE PTR [eax]
  423fcd:	push   ss
  423fce:	or     ecx,DWORD PTR [ebx]
  423fd0:	idiv   ch
  423fd2:	ins    DWORD PTR es:[edi],dx
  423fd3:	ins    DWORD PTR es:[edi],dx
  423fd4:	mov    esi,0x370290cc
  423fd9:	pop    esp
  423fda:	cdq    
  423fdb:	and    ecx,DWORD PTR [esi+0x1c200cc2]
  423fe1:	push   edx
  423fe2:	out    dx,eax
  423fe3:	push   ebp
  423fe4:	mov    dh,0x9b
  423fe6:	(bad)  
  423fe7:	les    esi,FWORD PTR [eax-0x2ef0b9ed]
  423fed:	sub    eax,0x8d8ffd3d
  423ff2:	adc    al,0x40
  423ff4:	int    0x39
  423ff6:	jb     0x423fbd
  423ff8:	inc    edx
  423ff9:	in     al,dx
  423ffa:	arpl   WORD PTR [ebx+edi*8+0x6921ebec],di
  424001:	xor    BYTE PTR [edx-0x6f],ah
  424004:	jp     0x423fc7
  424006:	add    BYTE PTR [ebx+0x13],dh
  424009:	adc    edi,DWORD PTR [esi-0x3eac40d]
  42400f:	sbb    bl,BYTE PTR [ebx]
  424011:	enter  0x80aa,0x3d
  424015:	cmc    
  424016:	es sub al,0x26
  424019:	mov    al,0x7f
  42401b:	inc    ebp
  42401c:	dec    ecx
  42401d:	mov    esi,0xa10ce6af
  424022:	sub    cl,BYTE PTR [edi-0x3f6c4345]
  424028:	mov    ds:0x4c287b61,eax
  42402d:	mul    dl
  42402f:	pop    ebx
  424030:	inc    edx
  424031:	xlat   BYTE PTR ds:[ebx]
  424032:	add    eax,0xd614d81f
  424037:	call   0x9146:0x391193da
  42403e:	imul   edi,DWORD PTR [edx+0x6328225],0xffffffb3
  424045:	push   edx
  424046:	cdq    
  424047:	sbb    al,0xbe
  424049:	mov    esi,0xb33a7618
  42404e:	fwait
  42404f:	ja     0x423fd9
  424051:	scas   eax,DWORD PTR es:[edi]
  424052:	ss push 0x4e3e3fb6
  424058:	(bad)  
  42405a:	mov    bl,0x6d
  42405c:	stc    
  42405d:	sbb    bl,BYTE PTR [edi-0x2d]
  424060:	aas    
  424061:	retf   
  424062:	addr16 dec esi
  424064:	inc    edx
  424065:	scas   eax,DWORD PTR es:[edi]
  424066:	lea    eax,[edx-0x18]
  424069:	push   esi
  42406a:	sbb    bl,BYTE PTR [ecx-0x766251c4]
  424070:	lods   al,BYTE PTR ds:[esi]
  424071:	outs   dx,BYTE PTR ds:[esi]
  424072:	mov    ebx,0xadea9fe4
  424077:	fnstsw WORD PTR [ebp+0x7389a64]
  42407d:	enter  0x9ae4,0xe4
  424081:	adc    BYTE PTR [edi-0x2d],dh
  424084:	push   ss
  424085:	sub    bl,bh
  424087:	retf   0x55cb
  42408a:	add    eax,DWORD PTR [ecx-0x67c89c5a]
  424090:	jp     0x424082
  424092:	sub    dl,BYTE PTR fs:[edi+0x574e5f9]
  424099:	add    al,0x8e
  42409b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42409c:	cmp    dl,BYTE PTR [ebx+0x79f2366c]
  4240a2:	retf   
  4240a3:	mov    cl,0x1
  4240a5:	out    0x6d,al
  4240a7:	dec    esp
  4240a8:	loope  0x424078
  4240aa:	arpl   WORD PTR [edi-0x20],cx
  4240ad:	test   ah,bh
  4240af:	xor    ebp,ecx
  4240b1:	leave  
  4240b2:	loope  0x42412e
  4240b4:	xchg   ebp,eax
  4240b5:	pop    esi
  4240b6:	int3   
  4240b7:	fcom   st(2)
  4240b9:	pushf  
  4240ba:	out    0x1e,al
  4240bc:	xor    esi,DWORD PTR [ebx+0x599d350e]
  4240c2:	sbb    eax,0xf091853
  4240c7:	(bad)  
  4240c9:	and    eax,ebp
  4240cb:	mov    ecx,0xc7d5ef1d
  4240d0:	cmp    al,0x8f
  4240d2:	and    DWORD PTR [esi+0x3f],ebx
  4240d5:	pusha  
  4240d6:	das    
  4240d7:	pop    ecx
  4240d8:	xchg   ecx,eax
  4240d9:	lock adc ebp,edx
  4240dc:	mov    esi,DWORD PTR [eax-0x74c9aebf]
  4240e2:	stc    
  4240e3:	retf   0xa3c8
  4240e6:	outs   dx,BYTE PTR ds:[esi]
  4240e7:	xchg   ecx,eax
  4240e8:	or     DWORD PTR [esp+edi*2],ecx
  4240eb:	adc    eax,0x3b37f23c
  4240f0:	fdiv   QWORD PTR [ebp-0x4d8ec7c4]
  4240f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240f7:	ret    
  4240f8:	ins    BYTE PTR es:[edi],dx
  4240f9:	imul   ebx,DWORD PTR [edi-0xf],0xfcbf2f4e
  424100:	sti    
  424101:	rol    DWORD PTR [edx-0x18bc7502],cl
  424107:	cli    
  424108:	sub    bh,BYTE PTR [ecx+edx*1]
  42410b:	cmp    ecx,ecx
  42410d:	mov    ebp,DWORD PTR [ecx]
  42410f:	mov    bh,0x3f
  424111:	or     edi,DWORD PTR [eax+ebp*2-0x6d07f3a1]
  424118:	daa    
  424119:	ror    DWORD PTR [edi-0x51b980c5],0x83
  424120:	dec    esp
  424121:	xchg   edi,eax
  424122:	ror    DWORD PTR [esi],1
  424124:	push   ds
  424125:	add    al,0x29
  424127:	gs jnp 0x424133
  42412a:	and    ecx,DWORD PTR [edx+0x2d0ddb36]
  424130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424131:	cmp    al,0x1b
  424133:	fmul   QWORD PTR [ebp+ecx*1-0x2c]
  424137:	gs mov ch,0xe1
  42413a:	cmp    eax,0xea2c02f3
  42413f:	outs   dx,BYTE PTR ds:[esi]
  424140:	shl    DWORD PTR [eax],1
  424142:	bound  esp,QWORD PTR [edi+0xd]
  424145:	(bad)  
  424146:	leave  
  424147:	test   eax,0x9e244107
  42414c:	cmp    al,0x37
  42414e:	sbb    edi,DWORD PTR [edx-0x401bf80e]
  424154:	mov    cl,0x40
  424156:	xor    cl,BYTE PTR [ebp+0x3fd6fee4]
  42415c:	mov    cl,BYTE PTR [edi*8+0x181d330d]
  424163:	and    eax,0x94afa84b
  424168:	retf   
  424169:	test   BYTE PTR [edi+eiz*4+0x65],dl
  42416d:	adc    BYTE PTR [ecx],dh
  42416f:	fiadd  WORD PTR [edi]
  424171:	nop
  424172:	call   0x82cb:0x1eb599a7
  424179:	mov    bh,0xc8
  42417b:	xor    al,0x15
  42417d:	fist   WORD PTR [ecx+0x1e6e8d34]
  424183:	test   eax,0x42b2ba3a
  424188:	add    eax,0x38eb8a55
  42418d:	sub    ch,al
  42418f:	sub    eax,DWORD PTR [edx]
  424191:	pop    esi
  424192:	jmp    0x424195
  424194:	sub    esp,DWORD PTR [edx+0x7f]
  424197:	or     DWORD PTR [esi],esi
  424199:	xor    edx,0xa0847768
  42419f:	dec    edx
  4241a0:	ds jle 0x42421f
  4241a3:	hlt    
  4241a4:	bound  esp,QWORD PTR [ecx+0x1a]
  4241a7:	mov    edx,0x45fd13f7
  4241ac:	(bad)  
  4241ad:	cmp    al,0x41
  4241af:	push   eax
  4241b0:	rcr    BYTE PTR [esi-0x2b],1
  4241b3:	inc    esi
  4241b4:	or     eax,0x2789912f
  4241b9:	mov    ds:0xf6964b55,al
  4241be:	push   es
  4241bf:	xchg   ecx,eax
  4241c0:	jecxz  0x4241b5
  4241c2:	mov    ch,0xf4
  4241c4:	xor    edx,esi
  4241c6:	dec    edi
  4241c7:	push   0x9
  4241c9:	dec    ebx
  4241ca:	sub    al,0xce
  4241cc:	mov    bh,0x74
  4241ce:	sbb    al,0x2e
  4241d0:	mov    dh,0xa8
  4241d2:	rcl    DWORD PTR [edi+ebx*8],0x50
  4241d6:	in     al,0xba
  4241d8:	repnz dec esp
  4241da:	ret    
  4241db:	pop    esp
  4241dc:	lds    edx,FWORD PTR [esi]
  4241de:	pop    ebx
  4241df:	pop    ecx
  4241e0:	push   ds
  4241e1:	pop    eax
  4241e2:	in     al,dx
  4241e3:	int    0x85
  4241e5:	jmp    0xfb2a3b5c
  4241ea:	mov    ah,0x98
  4241ec:	ficom  DWORD PTR [ebx-0x221ab727]
  4241f2:	add    eax,0x249b38e4
  4241f7:	pushf  
  4241f8:	push   es
  4241f9:	sub    al,0xcb
  4241fb:	in     al,dx
  4241fc:	out    dx,eax
  4241fd:	add    eax,0xf0c18927
  424202:	jle    0x4241eb
  424204:	mov    ebp,0x48502b4a
  424209:	sub    dh,BYTE PTR [esi+0x12]
  42420c:	ins    BYTE PTR es:[edi],dx
  42420d:	fbld   TBYTE PTR [eax-0x4389e8a6]
  424213:	std    
  424214:	xor    eax,0x99d04514
  424219:	mov    cl,0xec
  42421b:	in     al,dx
  42421c:	xacquire xchg BYTE PTR [ebx+edx*1-0x290d1284],bh
  424224:	popf   
  424225:	(bad)  
  424226:	add    BYTE PTR [ecx+0x52],al
  424229:	add    ebx,DWORD PTR [ebx-0x6]
  42422c:	jbe    0x42425a
  42422e:	pop    edi
  42422f:	scas   eax,DWORD PTR es:[edi]
  424230:	in     eax,dx
  424231:	ss jo  0x424203
  424234:	jbe    0x42426b
  424236:	jmp    0x6ba003d9
  42423b:	cmp    BYTE PTR [ebp+ebx*2+0x17],ch
  42423f:	pop    ebp
  424240:	sbb    DWORD PTR [eax-0x5f2280a1],0x45
  424247:	add    eax,0xdfcc0891
  42424c:	pop    ss
  42424d:	sti    
  42424e:	pop    ss
  42424f:	retf   0x6620
  424252:	das    
  424253:	xor    bl,ah
  424255:	daa    
  424256:	add    al,BYTE PTR [ecx]
  424258:	mov    dl,0x98
  42425a:	scas   al,BYTE PTR es:[edi]
  42425b:	aam    0x5a
  42425d:	lock xchg esi,eax
  42425f:	jb     0x4242cc
  424261:	aas    
  424262:	lahf   
  424263:	mov    DWORD PTR gs:[esi-0xbeb67a2],ebx
  42426a:	mov    ebx,0x533e9d37
  42426f:	mov    eax,ds:0x34ffc485
  424274:	inc    edi
  424275:	xor    eax,0x1afc1679
  42427a:	and    eax,0xa7739bf1
  42427f:	stc    
  424280:	sub    al,0x1a
  424282:	stos   BYTE PTR es:[edi],al
  424283:	call   0x4baa:0x96899103
  42428a:	mov    dh,0xbd
  42428c:	es push ebp
  42428e:	xor    DWORD PTR [esi-0x3b421f2f],0xffffffad
  424295:	add    al,0xaf
  424297:	sub    BYTE PTR [edx+0x6b],dl
  42429a:	test   DWORD PTR [edi+0x5474dfa1],edi
  4242a0:	jge    0x424236
  4242a2:	add    al,0x3
  4242a4:	add    esp,ebx
  4242a6:	mov    edx,0x23ca3a3c
  4242ab:	mov    eax,DWORD PTR [ebp+0x7a]
  4242ae:	and    eax,0xf846d052
  4242b3:	lods   eax,DWORD PTR ds:[esi]
  4242b4:	les    esp,FWORD PTR [eax+0x69]
  4242b7:	test   eax,0x35f4d1b7
  4242bc:	sbb    DWORD PTR [esi],esi
  4242be:	push   ebx
  4242bf:	cdq    
  4242c0:	fwait
  4242c1:	arpl   WORD PTR [esi+0x54],cx
  4242c4:	dec    ebx
  4242c5:	js     0x424281
  4242c7:	shl    BYTE PTR [esi],0xbd
  4242ca:	xchg   esp,ebp
  4242cc:	dec    esp
  4242cd:	out    0x2f,eax
  4242cf:	imul   esi,esi,0xd6bf7ea0
  4242d5:	mov    esp,0x8b88f208
  4242da:	(bad)  
  4242db:	cmp    DWORD PTR cs:[esi],esi
  4242de:	pop    ebx
  4242df:	adc    DWORD PTR [eax+0x44],edi
  4242e2:	sub    bh,BYTE PTR [ecx-0x8]
  4242e5:	jmp    0x919079
  4242ea:	ds adc al,0xeb
  4242ed:	jl     0x42428b
  4242ef:	(bad)  
  4242f0:	xlat   BYTE PTR ds:[ebx]
  4242f1:	stos   BYTE PTR es:[edi],al
  4242f2:	push   esp
  4242f3:	test   al,0x30
  4242f5:	aas    
  4242f6:	pop    ss
  4242f7:	cmp    ch,BYTE PTR [ebp+0x37c1f92d]
  4242fd:	add    dh,BYTE PTR [esi+0x43]
  424300:	jge    0x424328
  424302:	dec    eax
  424303:	pop    es
  424304:	sbb    al,BYTE PTR [ebp+0x2e]
  424307:	cmovae ecx,ebp
  42430a:	(bad)  
  42430c:	daa    
  42430d:	sub    BYTE PTR [eax],bl
  42430f:	dec    esp
  424310:	adc    BYTE PTR [ebx-0x4f],dh
  424313:	imul   ebp,ebp,0x73
  424316:	out    0x34,al
  424318:	outs   dx,BYTE PTR ds:[esi]
  424319:	aam    0xac
  42431b:	loope  0x4242fb
  42431d:	xlat   BYTE PTR ds:[ebx]
  42431e:	out    dx,al
  42431f:	xchg   edi,eax
  424320:	inc    ebx
  424321:	jecxz  0x424365
  424323:	and    ebx,ebp
  424325:	mov    ch,0x35
  424327:	pop    eax
  424328:	bound  esi,QWORD PTR [esi+0xeeede89]
  42432e:	pop    edi
  42432f:	popa   
  424330:	mov    edx,0xeea05e61
  424335:	call   0xc4bd:0xc42a0504
  42433c:	imul   eax,DWORD PTR [edi],0x37
  42433f:	test   ebp,edx
  424341:	sbb    al,0x99
  424343:	xchg   ecx,eax
  424344:	push   0x8b309226
  424349:	sub    ecx,eax
  42434b:	xor    edx,DWORD PTR es:[ebp-0x58]
  42434f:	dec    edx
  424350:	rep data16 ins BYTE PTR es:[edi],dx
  424353:	mov    eax,0x2de92e0b
  424358:	sbb    al,0x66
  42435a:	fwait
  42435b:	xchg   ebx,eax
  42435c:	stos   BYTE PTR es:[edi],al
  42435d:	(bad)  
  42435f:	jmp    0x42432d
  424361:	adc    bl,BYTE PTR [ecx-0x2cbf85e5]
  424367:	jno    0x424351
  424369:	xor    al,bh
  42436b:	aas    
  42436c:	cmp    eax,0xa8778215
  424371:	call   0xd6fa37b6
  424376:	pop    ebp
  424377:	dec    esp
  424378:	or     al,0xd9
  42437a:	or     eax,0x8c77cf8
  42437f:	jp     0x42432b
  424381:	cmp    DWORD PTR [edi+0x70],0xb58edfcf
  424388:	inc    esp
  424389:	shl    edx,cl
  42438b:	mov    DWORD PTR [ecx+0x6a],esp
  42438e:	mov    BYTE PTR ds:0x729f5156,bh
  424394:	push   ebx
  424395:	pop    ebx
  424396:	and    cl,bh
  424398:	pop    ss
  424399:	sub    ch,BYTE PTR [esi+0x52]
  42439c:	jmp    0xfac8:0x5a62fdf2
  4243a3:	mov    eax,ds:0x3e343b05
  4243a8:	iret   
  4243a9:	mov    esp,0x9e72392e
  4243ae:	ja     0x424397
  4243b0:	or     eax,0x82aa420
  4243b5:	add    al,0xc6
  4243b7:	loop   0x4243e8
  4243b9:	icebp  
  4243ba:	push   ebx
  4243bb:	lock test DWORD PTR [edx+0x1],edx
  4243bf:	jb     0x42434c
  4243c1:	inc    esi
  4243c2:	dec    edx
  4243c3:	(bad)  
  4243c4:	mov    ebx,0x809cb19d
  4243c9:	sub    bh,bl
  4243cb:	adc    al,0x52
  4243cd:	pushf  
  4243ce:	pop    eax
  4243cf:	xchg   BYTE PTR [esi+0x2fee1fc7],dl
  4243d5:	repz mov ebx,0x56994093
  4243db:	pop    ds
  4243dc:	inc    edx
  4243dd:	ficomp WORD PTR [esi+0x4d]
  4243e0:	jg     0x4243dc
  4243e2:	adc    eax,DWORD PTR [esi+0x4e910d88]
  4243e8:	xchg   ebx,eax
  4243e9:	xchg   BYTE PTR [esp+ebx*8],dl
  4243ec:	push   ds
  4243ed:	sbb    BYTE PTR [ecx+0x14a4cfba],ch
  4243f3:	cmp    ah,BYTE PTR [eax-0x548dbb3]
  4243f9:	aas    
  4243fa:	or     al,0xb4
  4243fc:	inc    edi
  4243fd:	shr    ah,0x66
  424400:	pop    esi
  424401:	and    DWORD PTR [esi+0x743e3468],0x423d8de0
  42440b:	pop    ss
  42440c:	xrelease mov BYTE PTR [ebx+0x25b07546],dl
  424413:	push   ebx
  424414:	stos   BYTE PTR es:[edi],al
  424415:	mov    ecx,0xd7813da5
  42441a:	cwde   
  42441b:	push   ss
  42441c:	repnz daa 
  42441e:	add    BYTE PTR [eax],al
  424420:	add    BYTE PTR [eax],al
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	jle    0x424447
  424430:	inc    ebx
  424431:	cwde   
  424432:	inc    ebp
  424433:	mov    ebp,0x4f40001
  424438:	add    BYTE PTR [eax],al
  42443a:	pop    es
  42443b:	icebp  
  42443c:	jmp    0xd0de:0xd8afae31
  424443:	clc    
  424444:	(bad)  
  424445:	mov    cl,0x99
  424447:	fild   QWORD PTR [esi-0x2f]
  42444a:	jle    0x42448c
  42444c:	nop
  42444d:	data16 cmp al,0xde
  424450:	jo     0x424480
  424452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424453:	mov    bl,0x72
  424455:	out    dx,eax
  424456:	aad    0xf3
  424458:	lea    esp,[ecx+0x23ef3668]
  42445e:	sahf   
  42445f:	repnz aad 0xf4
  424462:	mov    ch,0x25
  424464:	hlt    
  424465:	and    DWORD PTR [ebp-0x3c],esp
  424468:	aaa    
  424469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42446a:	dec    esi
  42446b:	mov    eax,ds:0x4656a647
  424470:	fwait
  424471:	mov    ebp,fs
  424473:	cmp    al,0x10
  424475:	and    DWORD PTR [edx+0x7b],eax
  424478:	mov    bh,0x80
  42447a:	bound  esp,QWORD PTR gs:[esp+ecx*1-0x1a]
  42447f:	mov    eax,ds:0x1e6e8be2
  424484:	test   DWORD PTR [esi+0x503444f3],edx
  42448a:	sbb    ah,BYTE PTR [edi+0x3c0038f0]
  424490:	adc    DWORD PTR [eax-0x579bcbf9],0xffffff81
  424497:	icebp  
  424498:	es popf 
  42449a:	call   0x2d9eca54
  42449f:	cmp    eax,0x36a2183f
  4244a4:	imul   BYTE PTR [ebx-0x45f86136]
  4244aa:	inc    ecx
  4244ab:	loope  0x4244df
  4244ad:	cmp    BYTE PTR [eax+eiz*8+0x74],dh
  4244b1:	enter  0x4430,0x60
  4244b5:	jbe    0x424485
  4244b7:	jb     0x424440
  4244b9:	enter  0x4f96,0xa1
  4244bd:	test   BYTE PTR [ebp-0x44],bl
  4244c0:	xor    eax,0xb2d1b5ec
  4244c5:	xor    dh,BYTE PTR [ecx-0x4d]
  4244c8:	or     esi,DWORD PTR [ecx-0x396629ab]
  4244ce:	mov    ah,0x68
  4244d0:	xor    al,0xa1
  4244d2:	add    ecx,DWORD PTR [edx+ebx*1+0x36f0579b]
  4244d9:	stc    
  4244da:	mov    bl,0x6
  4244dc:	adc    BYTE PTR ds:0x945ae2b,0x14
  4244e3:	add    DWORD PTR [edi-0x33437810],0x6e
  4244ea:	loop   0x424486
  4244ec:	pop    ds
  4244ed:	sbb    DWORD PTR [ecx+0x2e],edi
  4244f0:	cdq    
  4244f1:	lods   eax,DWORD PTR ds:[esi]
  4244f2:	hlt    
  4244f3:	pop    edi
  4244f4:	out    0x70,eax
  4244f6:	repnz cwde 
  4244f8:	jmp    0xc89f:0xdf10e52c
  4244ff:	jnp    0x4244e1
  424501:	mov    ebx,0x376a7318
  424506:	fild   DWORD PTR [ebp-0x17fa2859]
  42450c:	data16 jnp 0x42455b
  42450f:	dec    ebp
  424510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424511:	inc    esi
  424512:	mov    eax,0xed333a30
  424517:	cmc    
  424518:	sub    bl,BYTE PTR [eax+0x4a1e966]
  42451e:	test   al,0x6f
  424520:	dec    esp
  424521:	adc    ecx,eax
  424523:	xlat   BYTE PTR ds:[ebx]
  424524:	jae    0x4244f0
  424526:	xchg   ecx,eax
  424527:	add    eax,0xca0ebe4e
  42452c:	(bad)
  424530:	fs stos BYTE PTR es:[edi],al
  424532:	(bad)  
  424533:	rcr    DWORD PTR [esi+ebp*2],1
  424536:	xchg   DWORD PTR [esi-0x29],ebx
  424539:	or     dh,al
  42453b:	sar    ebp,0x15
  42453e:	aaa    
  42453f:	(bad)  
  424540:	jbe    0x4245be
  424542:	sub    al,0xca
  424544:	inc    esi
  424545:	lods   eax,DWORD PTR ds:[esi]
  424546:	mov    gs,WORD PTR [edx-0x5d]
  424549:	aas    
  42454a:	cmp    bl,BYTE PTR [ebx]
  42454c:	dec    esp
  42454d:	push   ebx
  42454e:	iret   
  42454f:	mov    dl,BYTE PTR [edx]
  424551:	dec    ebp
  424552:	not    DWORD PTR [ecx-0x22]
  424555:	and    eax,0x6dfa042f
  42455a:	int3   
  42455b:	out    dx,eax
  42455c:	ja     0x4244e2
  42455e:	xor    al,ah
  424560:	pusha  
  424561:	dec    edi
  424562:	clc    
  424563:	inc    esp
  424564:	sub    BYTE PTR [esi],ah
  424566:	sbb    al,0x98
  424568:	dec    eax
  424569:	ror    BYTE PTR [ebp+eax*2-0x1],0x88
  42456e:	inc    esp
  42456f:	pop    ecx
  424570:	inc    esp
  424571:	mov    ds:0x4b067fd3,eax
  424576:	rcl    bl,1
  424578:	stos   DWORD PTR es:[edi],eax
  424579:	add    DWORD PTR [ecx-0x17],ecx
  42457c:	dec    ecx
  42457d:	fnstenv [edi+eax*2+0x4595291c]
  424584:	in     eax,0xae
  424586:	xchg   esi,eax
  424587:	push   esi
  424588:	mov    cl,0x3d
  42458a:	xor    BYTE PTR [esi],dh
  42458c:	dec    esi
  42458d:	sahf   
  42458e:	call   0xb97a:0x55dbe1c3
  424595:	adc    al,0x24
  424597:	fwait
  424598:	iretw  
  42459a:	popf   
  42459b:	jno    0x42452f
  42459d:	pop    edi
  42459e:	mov    DWORD PTR [eax],edx
  4245a0:	nop
  4245a1:	mov    ch,0x26
  4245a3:	imul   eax,DWORD PTR [edx+0xa],0x78
  4245a7:	and    BYTE PTR [ebp+0x5],0x52
  4245ab:	jp     0x42461a
  4245ad:	mov    ss,WORD PTR [ecx+0x6ac21f76]
  4245b3:	inc    edx
  4245b4:	stos   DWORD PTR es:[edi],eax
  4245b5:	mov    ebp,0xf87df187
  4245ba:	out    0xe9,eax
  4245bc:	es adc ecx,ebx
  4245bf:	jle    0x4245e0
  4245c1:	or     DWORD PTR [ebx-0x27e286dd],esi
  4245c7:	ror    BYTE PTR [eax+0x21],1
  4245ca:	pushf  
  4245cb:	repnz into 
  4245cd:	dec    esi
  4245ce:	inc    esi
  4245cf:	mov    bh,0x9a
  4245d1:	pop    esp
  4245d2:	leave  
  4245d3:	sar    bh,0xc4
  4245d6:	js     0x4245d6
  4245d8:	inc    edi
  4245d9:	outs   dx,BYTE PTR ds:[esi]
  4245da:	call   0x4a9:0xfb81b009
  4245e1:	jge    0x42461a
  4245e3:	out    0x36,al
  4245e5:	js     0x4245bd
  4245e7:	mov    cl,BYTE PTR [ebx]
  4245e9:	(bad)  
  4245ea:	in     eax,dx
  4245eb:	cmp    dh,ch
  4245ed:	add    eax,0x662042ba
  4245f2:	loop   0x4245a1
  4245f4:	add    al,0x94
  4245f6:	pop    ecx
  4245f7:	jmp    0xab34:0x8e6e5fd9
  4245fe:	inc    esp
  4245ff:	push   esp
  424600:	idiv   BYTE PTR [eax-0xa]
  424603:	shl    BYTE PTR [edx-0x1f97b75c],0x83
  42460a:	fsub   QWORD PTR [ebp-0xd]
  42460d:	jl     0x424658
  42460f:	rol    DWORD PTR ds:[ecx+0x7ca68975],cl
  424616:	push   ebp
  424617:	sub    al,0xd4
  424619:	adc    ebx,DWORD PTR [esi+0x4a]
  42461c:	nop
  42461d:	pop    edi
  42461e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42461f:	iret   
  424620:	idiv   BYTE PTR [eax]
  424622:	outs   dx,BYTE PTR ds:[esi]
  424623:	outs   dx,DWORD PTR ds:[esi]
  424624:	lock dec eax
  424626:	or     bh,BYTE PTR [ebp+0x78]
  424629:	test   BYTE PTR [edi-0x8],al
  42462c:	mov    edx,0x35dff0bf
  424631:	sahf   
  424632:	inc    eax
  424633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424634:	inc    esi
  424635:	xor    BYTE PTR [edx+0x7a527d81],dh
  42463b:	seto   BYTE PTR [ecx*4-0x27444762]
  424643:	sti    
  424644:	rol    BYTE PTR [esi+0x256947df],1
  42464a:	cs std 
  42464c:	dec    BYTE PTR fs:[edi-0x73]
  424650:	std    
  424651:	(bad)  
  424653:	arpl   WORD PTR fs:[edi],dx
  424656:	fist   DWORD PTR [esi+eiz*4]
  424659:	mov    edi,0x78529d8d
  42465e:	aas    
  42465f:	pop    ebp
  424660:	pusha  
  424661:	cmp    esi,DWORD PTR [eax-0x3cbdac74]
  424667:	mov    DWORD PTR [esi],edx
  424669:	(bad)  
  42466a:	jp     0x4246ca
  42466c:	jno    0x42462a
  42466e:	mov    eax,0xcf1b5737
  424673:	ret    
  424674:	repz in al,0x81
  424677:	adc    ecx,DWORD PTR [ecx]
  424679:	pop    ss
  42467a:	test   eax,0x1aec610f
  42467f:	xlat   BYTE PTR ds:[ebx]
  424680:	les    eax,FWORD PTR [eax]
  424682:	jne    0x424655
  424684:	adc    DWORD PTR [ebx+0x196a3f8e],0xffffffe4
  42468b:	dec    edx
  42468c:	leave  
  42468d:	push   esp
  42468e:	xchg   eax,ecx
  424690:	pop    es
  424691:	xor    BYTE PTR [esi],bl
  424693:	add    ebp,DWORD PTR [esi]
  424695:	adc    al,0x34
  424697:	or     al,0xf8
  424699:	repnz int 0xd8
  42469c:	test   eax,0x83dd8386
  4246a1:	gs cmp al,0x69
  4246a4:	sti    
  4246a5:	in     eax,dx
  4246a6:	ja     0x42470c
  4246a8:	fs je  0x4246b7
  4246ab:	aaa    
  4246ac:	js     0x42468a
  4246ae:	test   BYTE PTR [esp+edi*2-0x72c766c9],cl
  4246b5:	xchg   DWORD PTR [eax+0x9],edx
  4246b8:	add    ecx,DWORD PTR [ebp-0x61]
  4246bb:	loop   0x424668
  4246bd:	xchg   esp,eax
  4246be:	shl    DWORD PTR [edx-0x6c],1
  4246c1:	ss push eax
  4246c3:	(bad)  
  4246c4:	fldenv [edi+ebp*4-0x52]
  4246c8:	ins    BYTE PTR es:[edi],dx
  4246c9:	sub    ch,bh
  4246cb:	bnd ja 0x4246c7
  4246ce:	push   es
  4246cf:	rol    DWORD PTR [ecx-0x596a820c],cl
  4246d5:	cmp    eax,edx
  4246d7:	push   ebx
  4246d8:	add    eax,0x1036dd15
  4246dd:	or     DWORD PTR [ebp+0x15256d58],0x64
  4246e4:	cli    
  4246e5:	cmp    ebx,DWORD PTR [ecx+0x13]
  4246e8:	add    al,BYTE PTR [edx+0x13]
  4246eb:	mov    bl,0x1
  4246ed:	das    
  4246ee:	inc    ebx
  4246ef:	retf   
  4246f0:	icebp  
  4246f1:	adc    DWORD PTR [ebp+0x62],0x28
  4246f5:	aam    0xe
  4246f7:	fmul   QWORD PTR [edi+edx*8-0x3c]
  4246fb:	bound  esp,QWORD PTR ds:0x83098dc5
  424701:	sub    al,0x29
  424703:	or     esp,edx
  424705:	push   esp
  424706:	mov    ebx,0xe6182a7d
  42470b:	sub    esp,edx
  42470d:	icebp  
  42470e:	xchg   ebp,eax
  42470f:	dec    eax
  424710:	adc    esi,esi
  424712:	xchg   edx,eax
  424713:	imul   eax,DWORD PTR [edi+0x281ae4cd],0xfa29066f
  42471d:	in     eax,dx
  42471e:	add    DWORD PTR [ebx],ecx
  424720:	daa    
  424721:	lahf   
  424722:	xchg   esi,eax
  424723:	or     ch,BYTE PTR [ecx+0x3d]
  424726:	in     eax,dx
  424727:	sbb    BYTE PTR [eax+0x1d9cb6ad],dl
  42472d:	aam    0x7f
  42472f:	clc    
  424730:	arpl   bp,cx
  424732:	pop    esp
  424733:	push   edx
  424734:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424736:	xor    DWORD PTR [edx+esi*2-0x5d],0xffffffcc
  42473b:	inc    ebx
  42473c:	ret    
  42473d:	test   BYTE PTR [ebx-0x6e],ch
  424740:	shl    ebp,0x47
  424743:	push   ecx
  424744:	inc    edi
  424745:	xchg   ebx,eax
  424746:	popf   
  424747:	or     ebp,ebx
  424749:	push   cs
  42474a:	mov    bl,0xca
  42474c:	int3   
  42474d:	sub    DWORD PTR [ebp-0x53],eax
  424750:	call   0x6c0f:0x454c5a32
  424757:	sbb    al,0xfa
  424759:	adc    ch,BYTE PTR ds:[ebp+esi*2-0x70d0827f]
  424761:	lahf   
  424762:	or     dh,BYTE PTR [edi+0x101d1276]
  424768:	pop    esp
  424769:	push   0x67e18193
  42476e:	dec    esp
  42476f:	(bad)  
  424770:	imul   eax,edx,0x42
  424773:	dec    ecx
  424774:	popf   
  424775:	or     DWORD PTR [edx],0xbf86a6ce
  42477b:	popa   
  42477c:	xor    bh,BYTE PTR [esi-0x1a]
  42477f:	ja     0x4247ff
  424781:	push   ss
  424782:	inc    edx
  424783:	inc    edx
  424784:	call   0x99e76238
  424789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42478a:	loopne 0x424713
  42478c:	dec    ebx
  42478d:	das    
  42478e:	fcomip st,st(0)
  424790:	mov    al,ds:0x91750789
  424795:	cmp    dh,BYTE PTR ds:0x49ed92cf
  42479b:	push   ebp
  42479c:	int3   
  42479d:	ficom  DWORD PTR [ecx]
  42479f:	in     al,0x7b
  4247a1:	(bad)  
  4247a2:	push   ecx
  4247a3:	in     al,dx
  4247a4:	mov    ebp,0x73403d2d
  4247a9:	call   DWORD PTR [edi]
  4247ab:	xor    DWORD PTR [esi],esi
  4247ad:	lock ja 0x4247b3
  4247b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b1:	ret    
  4247b2:	adc    bl,BYTE PTR [ebp+0x1e9a97ec]
  4247b8:	scas   eax,DWORD PTR es:[edi]
  4247b9:	in     eax,dx
  4247ba:	test   eax,0x1947a662
  4247bf:	ret    
  4247c0:	cmp    al,0x1f
  4247c2:	adc    eax,0x5590bc27
  4247c7:	sbb    eax,0x297e3880
  4247cc:	je     0x42475e
  4247ce:	pushf  
  4247cf:	repz mov WORD PTR [esi],cs
  4247d2:	sub    ecx,ebp
  4247d4:	jo     0x424852
  4247d6:	sbb    eax,0x99f12f40
  4247db:	jnp    0x424835
  4247dd:	mov    edx,0x70849a6
  4247e2:	aas    
  4247e3:	adc    eax,0xcdb05ca6
  4247e8:	cmp    dl,BYTE PTR [ecx+0x1af7182a]
  4247ee:	push   esi
  4247ef:	adc    ecx,ebp
  4247f1:	sbb    eax,0x5c95600a
  4247f6:	imul   edi,DWORD PTR [esi],0xffffffe1
  4247f9:	popa   
  4247fa:	in     al,0xd8
  4247fc:	cli    
  4247fd:	(bad)  
  4247fe:	nop
  4247ff:	jb     0x42485c
  424801:	jp     0x42481d
  424803:	std    
  424804:	aad    0x42
  424806:	(bad)  
  424808:	dec    ebp
  424809:	xor    esi,ebx
  42480b:	nop
  42480c:	xchg   esp,eax
  42480d:	test   bh,al
  42480f:	pop    edx
  424810:	icebp  
  424811:	sar    BYTE PTR [edi+0x4dfa638b],1
  424817:	jbe    0x4247b3
  424819:	daa    
  42481a:	jl     0x424806
  42481c:	pop    ecx
  42481d:	xor    eax,0x6eaec235
  424822:	sub    BYTE PTR [edx],ch
  424824:	cmp    al,0xcd
  424826:	repnz outs dx,BYTE PTR ds:[esi]
  424828:	shr    BYTE PTR [ebp+0x7b],1
  42482b:	push   ebx
  42482c:	outs   dx,DWORD PTR ds:[esi]
  42482d:	push   0xffffffb6
  42482f:	and    eax,DWORD PTR ds:0x6905f93e
  424835:	jmp    0x148c:0x6ab0a4b5
  42483c:	repnz dec edx
  42483e:	rcr    ebx,0xa9
  424841:	lea    ebx,[edi-0x1212823a]
  424847:	mov    cl,0xab
  424849:	and    BYTE PTR ds:0x63b5f1b1,0x0
  424850:	cmp    ebx,DWORD PTR [eax]
  424852:	jl     0x424868
  424854:	push   ecx
  424855:	adc    BYTE PTR [eax+0x12],0x98
  424859:	pop    esp
  42485a:	les    edi,FWORD PTR [ecx-0x1e50a5ee]
  424860:	or     DWORD PTR [ebx+0x778a2947],eax
  424866:	stos   DWORD PTR es:[edi],eax
  424867:	sub    ch,bh
  424869:	or     DWORD PTR [esi],esi
  42486b:	jle    0x42484e
  42486d:	js     0x4248e5
  42486f:	cmp    al,0x18
  424871:	mov    edx,0xcd0d7425
  424876:	pop    es
  424877:	addr16 jmp 0xe5a9:0x3a51a202
  42487f:	pop    ds
  424880:	jg     0x4248ef
  424882:	xchg   ebp,eax
  424883:	rcl    bl,1
  424885:	pop    ebx
  424886:	not    BYTE PTR [edi+0x4b]
  424889:	out    dx,al
  42488a:	mov    eax,ds:0x7d2b390b
  42488f:	add    al,0x1b
  424891:	mov    eax,ds:0x6dafc99d
  424896:	rcl    DWORD PTR [eax-0x397aca12],1
  42489c:	out    dx,al
  42489d:	lahf   
  42489e:	jmp    0xdafdc142
  4248a3:	and    dh,BYTE PTR [ecx+0x78e0efb4]
  4248a9:	and    al,0x55
  4248ab:	push   0x2c
  4248ad:	xor    al,0xb2
  4248af:	mov    dl,0x1
  4248b1:	rol    BYTE PTR [ebx],0x97
  4248b4:	lock and DWORD PTR [edi-0x1cf56185],edx
  4248bb:	ins    BYTE PTR es:[edi],dx
  4248bc:	fs int3 
  4248be:	inc    edi
  4248bf:	cmp    esi,DWORD PTR fs:[edi+0x7a]
  4248c3:	adc    DWORD PTR [edi+0xe],esi
  4248c6:	sbb    ah,BYTE PTR [ebp-0x77]
  4248c9:	jge    0x4248af
  4248cb:	cmp    edx,ebx
  4248cd:	out    dx,al
  4248ce:	inc    BYTE PTR [eax]
  4248d0:	jle    0x424925
  4248d2:	(bad)  
  4248d4:	inc    ebp
  4248d5:	out    0x42,eax
  4248d7:	clc    
  4248d8:	hlt    
  4248d9:	pop    esp
  4248da:	pop    es
  4248db:	fistp  DWORD PTR [ecx-0x6c]
  4248de:	xor    ah,cl
  4248e0:	mov    dh,0x8a
  4248e2:	ret    0xdc00
  4248e5:	pop    es
  4248e6:	sub    al,0x6a
  4248e8:	pop    ebx
  4248e9:	mov    dl,ch
  4248eb:	jb     0x42491c
  4248ed:	fs test eax,0xbc86f87b
  4248f3:	data16 aam 0xb3
  4248f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248f7:	dec    edx
  4248f8:	ret    
  4248f9:	push   edi
  4248fa:	push   ss
  4248fb:	jl     0x424925
  4248fd:	leave  
  4248fe:	fisub  DWORD PTR [esi+edx*4-0x5f94fab2]
  424905:	inc    edx
  424906:	sbb    eax,esi
  424908:	aam    0xc3
  42490a:	lods   al,BYTE PTR ds:[esi]
  42490b:	cmp    ebx,esp
  42490d:	or     ebp,DWORD PTR [edi+eax*4-0xb]
  424911:	scas   eax,DWORD PTR es:[edi]
  424912:	mov    al,BYTE PTR [ebx]
  424914:	fld    QWORD PTR [ecx+0x21]
  424917:	das    
  424918:	cdq    
  424919:	mov    esp,ecx
  42491b:	jo     0x4248d6
  42491d:	les    edi,FWORD PTR [ebx]
  42491f:	xchg   ecx,eax
  424920:	clc    
  424921:	dec    eax
  424922:	stc    
  424923:	(bad)  
  424924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424925:	cs push 0xfffffff9
  424928:	cmp    al,0x4e
  42492a:	fwait
  42492b:	out    0x71,eax
  42492d:	bound  eax,QWORD PTR [eax]
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	inc    esi
  42493f:	adc    DWORD PTR [esi],ebx
  424941:	lods   al,BYTE PTR ds:[esi]
  424942:	cmp    edx,eax
  424944:	add    DWORD PTR [eax],eax
  424946:	hlt    
  424947:	add    al,0x0
  424949:	add    BYTE PTR [eax-0x5c2cc30c],bl
  42494f:	xchg   edi,eax
  424950:	clc    
  424951:	push   ebx
  424952:	jne    0x42491b
  424954:	aas    
  424955:	cmc    
  424956:	popa   
  424957:	neg    esp
  424959:	or     eax,0x6e45413d
  42495e:	daa    
  42495f:	or     ah,BYTE PTR [esi-0x6d]
  424962:	cdq    
  424963:	add    eax,0x583a2e77
  424968:	aad    0xce
  42496a:	popa   
  42496b:	lds    esp,FWORD PTR [edi]
  42496d:	scas   eax,DWORD PTR es:[edi]
  42496e:	mov    BYTE PTR [edi-0x4a],dh
  424971:	mov    bl,0xe3
  424973:	add    eax,DWORD PTR [ebx]
  424975:	jg     0x424902
  424977:	pop    ds
  424978:	ficom  DWORD PTR [ebp-0x342ba10e]
  42497e:	rcl    esp,0xd6
  424981:	push   edx
  424982:	and    ebx,DWORD PTR [eax+0x41e878d7]
  424988:	(bad)  [esi-0xa]
  42498b:	sub    edi,DWORD PTR [eax-0x72]
  42498e:	mov    edi,0xd348ecc4
  424993:	fwait
  424994:	pop    eax
  424995:	fist   DWORD PTR [eax-0x32]
  424998:	es hlt 
  42499a:	imul   edx,esi,0x28
  42499d:	out    0x85,al
  42499f:	aad    0xaf
  4249a1:	iret   
  4249a2:	cli    
  4249a3:	jecxz  0x42496f
  4249a5:	push   ebx
  4249a6:	mov    ebp,0x85d7561e
  4249ab:	ins    DWORD PTR es:[edi],dx
  4249ac:	es std 
  4249ae:	mov    ebx,0x7aadca18
  4249b3:	mov    eax,ds:0x393810d1
  4249b8:	mov    ebx,0x6529a608
  4249bd:	pusha  
  4249be:	ret    0xe45e
  4249c1:	mov    al,ds:0xf156e8ed
  4249c6:	mov    al,0x3d
  4249c8:	fcomp  QWORD PTR [edx-0x79]
  4249cb:	dec    ebx
  4249cc:	idiv   DWORD PTR [ecx-0x12]
  4249cf:	(bad)  
  4249d0:	pop    ebp
  4249d1:	mov    esp,ecx
  4249d3:	xchg   ecx,eax
  4249d4:	jle    0x424a47
  4249d6:	outs   dx,BYTE PTR ds:[esi]
  4249d7:	aam    0x1e
  4249d9:	xor    esi,ebx
  4249db:	lds    ebp,FWORD PTR [ebx]
  4249dd:	in     eax,0x27
  4249df:	inc    edi
  4249e0:	test   eax,0x488feb4f
  4249e5:	sbb    dh,dl
  4249e7:	jae    0x4249e6
  4249e9:	cld    
  4249ea:	push   cs
  4249eb:	es jnp 0x4249a8
  4249ee:	mov    esi,esi
  4249f0:	out    0xfb,al
  4249f2:	out    0x6f,al
  4249f4:	retf   0xa30d
  4249f7:	sub    DWORD PTR [ecx+0x58],0xffffffd4
  4249fb:	sbb    DWORD PTR [ecx-0x76],eax
  4249fe:	or     al,0x5c
  424a00:	add    ecx,ebp
  424a02:	call   0x2ff7cd63
  424a07:	mov    eax,DWORD PTR [edi+0x18]
  424a0a:	sahf   
  424a0b:	stc    
  424a0c:	xor    BYTE PTR [ecx],bl
  424a0e:	jne    0x424a74
  424a10:	pop    ss
  424a11:	(bad)  
  424a12:	pop    es
  424a13:	outs   dx,BYTE PTR ds:[esi]
  424a14:	jmp    0x3abed008
  424a19:	mov    ebp,0xd4444009
  424a1e:	sub    DWORD PTR [bx+si+0x4b],ecx
  424a22:	inc    esi
  424a23:	shl    dh,cl
  424a25:	push   ds
  424a26:	fsub   DWORD PTR [ecx-0x8]
  424a29:	stc    
  424a2a:	adc    DWORD PTR [ebp-0x17],ebp
  424a2d:	sub    al,0x14
  424a2f:	je     0x424a7b
  424a31:	mov    ah,0x9b
  424a33:	add    esp,DWORD PTR [edx+0x74]
  424a36:	and    BYTE PTR [ebp+eax*2+0x6],ch
  424a3a:	inc    edx
  424a3b:	fadd   DWORD PTR [edx]
  424a3d:	and    ecx,ecx
  424a3f:	jle    0x424ab3
  424a41:	out    dx,al
  424a42:	jecxz  0x424a18
  424a44:	pop    ds
  424a45:	pop    esp
  424a46:	push   edi
  424a47:	xchg   BYTE PTR [edi],cl
  424a49:	mov    esp,0x5e1679ca
  424a4e:	sbb    eax,0xe4e1fe75
  424a53:	aam    0x4f
  424a55:	inc    ebx
  424a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a57:	xor    al,0xc0
  424a59:	mov    edi,0x508dbdb
  424a5e:	push   esi
  424a5f:	cmp    DWORD PTR [edx+0x18],ecx
  424a62:	push   cs
  424a63:	dec    esp
  424a64:	mov    esi,0x7ba01386
  424a69:	jbe    0x424ade
  424a6b:	aam    0x57
  424a6d:	mov    ah,0x55
  424a6f:	mov    cl,ch
  424a71:	mov    bl,0x62
  424a73:	xor    bh,BYTE PTR [esi+0x30]
  424a76:	leave  
  424a77:	sub    ebp,ecx
  424a79:	bound  esp,QWORD PTR [eax-0x396c0597]
  424a7f:	sbb    DWORD PTR [ebx+0x71],eax
  424a82:	fdivr  QWORD PTR [eax+0x5f54a56d]
  424a88:	mov    edx,0xa4dde4ed
  424a8d:	dec    edx
  424a8e:	out    0x25,eax
  424a90:	ror    edi,cl
  424a92:	push   ds
  424a93:	(bad)  
  424a94:	cmp    bh,cl
  424a96:	cwde   
  424a97:	lea    edx,ds:0x9b9d6e91
  424a9d:	rol    BYTE PTR [edi],0x69
  424aa0:	pop    esp
  424aa1:	mov    ds:0xfc61a0c3,al
  424aa6:	jecxz  0x424b1d
  424aa8:	aad    0xe3
  424aaa:	cmp    DWORD PTR [edx*8-0x3d354243],ebp
  424ab1:	push   esp
  424ab2:	ins    DWORD PTR es:[edi],dx
  424ab3:	adc    bh,BYTE PTR [eax-0x3af45501]
  424ab9:	aad    0x9d
  424abb:	cmp    DWORD PTR [esi],edi
  424abd:	push   ss
  424abe:	pop    esi
  424abf:	mov    al,ds:0x47b3bb13
  424ac4:	sbb    eax,0xeb7a6b4d
  424ac9:	or     dh,dl
  424acb:	gs lock aas 
  424ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424acf:	adc    dl,0xa0
  424ad2:	jg     0x424aa4
  424ad4:	shl    DWORD PTR [eax],cl
  424ad6:	xchg   ecx,eax
  424ad7:	inc    ecx
  424ad8:	shr    BYTE PTR [ebp+esi*4-0x63],0x6e
  424add:	cli    
  424ade:	inc    ecx
  424adf:	fisubr DWORD PTR [ecx-0x7e]
  424ae2:	xchg   esi,eax
  424ae3:	sbb    DWORD PTR [edi],eax
  424ae5:	int3   
  424ae6:	out    0xe2,al
  424ae8:	imul   esp,DWORD PTR [ebx-0x6c],0x62
  424aec:	dec    esi
  424aed:	pop    es
  424aee:	sub    bl,BYTE PTR [ebp+0x35]
  424af1:	jnp    0x424ab0
  424af3:	sub    DWORD PTR [ecx+0x60],eax
  424af6:	outs   dx,DWORD PTR ds:[esi]
  424af7:	lods   al,BYTE PTR ds:[esi]
  424af8:	pop    ds
  424af9:	imul   edi,DWORD PTR ds:0xe47ba23f,0xffffffae
  424b00:	cli    
  424b01:	mov    ds:0x751a27a8,eax
  424b06:	mov    eax,0xd1e56351
  424b0b:	sbb    BYTE PTR [eax-0x10],ah
  424b0e:	pop    edx
  424b0f:	sahf   
  424b10:	xor    esp,DWORD PTR [ecx-0x5241e248]
  424b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b17:	xchg   esi,eax
  424b18:	imul   eax,DWORD PTR [ecx+0x2981f164],0xffffffdd
  424b1f:	adc    bl,dl
  424b21:	dec    ebx
  424b22:	mov    cl,0x41
  424b24:	int    0x6a
  424b26:	aas    
  424b27:	es into 
  424b29:	adc    eax,0xa41d7fe4
  424b2e:	enter  0x4530,0x27
  424b32:	int    0x1b
  424b34:	push   esp
  424b35:	add    BYTE PTR [edi],bl
  424b37:	int    0x9f
  424b39:	sbb    dl,dh
  424b3b:	pop    es
  424b3c:	xchg   edi,eax
  424b3d:	push   ebp
  424b3e:	sahf   
  424b3f:	xchg   ecx,eax
  424b40:	mov    ss,WORD PTR [esi+0x242da75a]
  424b46:	cmp    eax,0x6a7b09a7
  424b4b:	ins    DWORD PTR es:[edi],dx
  424b4c:	test   dh,cl
  424b4e:	push   edi
  424b4f:	sbb    eax,0x90264187
  424b54:	xchg   esi,eax
  424b55:	xor    esp,edi
  424b57:	adc    eax,edi
  424b59:	test   BYTE PTR [ecx+0x28fa8724],cl
  424b5f:	std    
  424b60:	jb     0x424b3f
  424b62:	in     eax,0x83
  424b64:	mov    bl,0x4d
  424b66:	cs mov ah,0x80
  424b69:	data16 jns 0x424bc1
  424b6c:	jmp    0xbcddde06
  424b71:	fs addr16 push esi
  424b74:	mov    eax,ds:0xfe24e93a
  424b79:	sar    DWORD PTR [ebx],1
  424b7b:	sbb    dl,BYTE PTR [ecx-0x76]
  424b7e:	imul   edi,DWORD PTR [esi-0xd47c6aa],0xe7ecf3e1
  424b88:	mov    esi,DWORD PTR [ebp+0x4b]
  424b8b:	outs   dx,BYTE PTR ds:[esi]
  424b8c:	out    dx,eax
  424b8d:	xor    al,0x2c
  424b8f:	pop    eax
  424b90:	arpl   cx,sp
  424b92:	sub    DWORD PTR [ebp+0x21d0d112],edx
  424b98:	fst    DWORD PTR [edx+0x15]
  424b9b:	cdq    
  424b9c:	cli    
  424b9d:	mov    WORD PTR [edx+0x16],es
  424ba0:	sub    cl,ch
  424ba2:	es and eax,0xc3a06838
  424ba8:	push   edi
  424ba9:	adc    dl,BYTE PTR [edi-0x4a08e617]
  424baf:	dec    ebx
  424bb0:	lock lahf 
  424bb2:	leave  
  424bb3:	mov    eax,ds:0xd8e8e1c8
  424bb8:	call   0xf699dbd2
  424bbd:	sti    
  424bbe:	aaa    
  424bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bc0:	push   ecx
  424bc1:	sahf   
  424bc2:	rcl    BYTE PTR [ecx+0x276db181],1
  424bc8:	xchg   edi,eax
  424bc9:	std    
  424bca:	retf   0x3f7e
  424bcd:	jno    0x424c18
  424bcf:	pop    ecx
  424bd0:	jae    0x424b75
  424bd2:	inc    esi
  424bd3:	push   ebx
  424bd4:	retf   0xa4ac
  424bd7:	push   cs
  424bd8:	mov    al,ds:0x23ffd062
  424bdd:	jnp    0x424c19
  424bdf:	arpl   WORD PTR [esi-0x18],di
  424be2:	pop    dx
  424be4:	mov    edi,0x26e25af5
  424be9:	or     BYTE PTR [ebx-0x1bf1792a],ah
  424bef:	(bad)  
  424bf1:	cdq    
  424bf2:	test   eax,0xd355dc00
  424bf8:	scas   eax,DWORD PTR es:[edi]
  424bf9:	jp     0x424c51
  424bfb:	dec    edi
  424bfc:	pop    ecx
  424bfd:	xchg   ebx,eax
  424bfe:	adc    ecx,ecx
  424c00:	lods   al,BYTE PTR ds:[esi]
  424c01:	imul   esi,esi,0x5801ae94
  424c07:	aas    
  424c08:	sub    BYTE PTR [edi+0x70],ch
  424c0b:	fwait
  424c0c:	push   es
  424c0d:	mov    eax,ds:0xad84ab7a
  424c12:	popf   
  424c13:	int3   
  424c14:	mov    ebx,0xa4cb8384
  424c19:	mov    eax,DWORD PTR [eax+0x3672b31b]
  424c1f:	and    edx,DWORD PTR [eax]
  424c21:	lods   al,BYTE PTR ds:[esi]
  424c22:	mov    bl,0x8a
  424c24:	mov    al,ds:0xd4c91dcf
  424c29:	mov    eax,ds:0xbd95cb88
  424c2e:	lock int 0x60
  424c31:	test   BYTE PTR [ecx+0x64],ah
  424c34:	push   edx
  424c35:	xor    BYTE PTR [edi],bh
  424c37:	push   0xfffffff9
  424c39:	sbb    DWORD PTR [ebx-0x4d0618a2],esi
  424c3f:	aas    
  424c40:	pop    ax
  424c42:	add    ebx,DWORD PTR [esi]
  424c44:	xor    DWORD PTR [edx],eax
  424c46:	inc    ecx
  424c47:	(bad)  
  424c48:	or     dh,BYTE PTR [ebx+ebp*1]
  424c4b:	test   eax,0xd68aa774
  424c50:	xchg   esp,eax
  424c51:	ret    0xce24
  424c54:	push   ecx
  424c55:	add    BYTE PTR [eax+0x5d653e3],cl
  424c5b:	enter  0x223b,0x3e
  424c5f:	popf   
  424c60:	add    esi,DWORD PTR [edx+0x4635c5e9]
  424c66:	lea    ecx,[esi]
  424c68:	inc    ecx
  424c69:	(bad)  
  424c6a:	clc    
  424c6b:	fnstenv [ecx-0x7bca0923]
  424c71:	ret    
  424c72:	(bad)  [eax]
  424c74:	iret   
  424c75:	sbb    dl,BYTE PTR ds:0xf1bdd582
  424c7b:	push   ecx
  424c7c:	inc    edi
  424c7d:	retf   0x7727
  424c80:	pop    esi
  424c81:	popa   
  424c82:	ss (bad) 
  424c84:	pop    ecx
  424c85:	ins    DWORD PTR es:[edi],dx
  424c86:	mov    WORD PTR [eax-0x42],ds
  424c89:	push   cs
  424c8a:	jb     0x424cb0
  424c8c:	fdivr  st(2),st
  424c8e:	push   ds
  424c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c90:	dec    ebx
  424c91:	out    dx,eax
  424c92:	push   edx
  424c93:	xor    al,BYTE PTR [ebx+0x2c939db0]
  424c99:	dec    edi
  424c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c9b:	fisubr DWORD PTR [ecx-0x59]
  424c9e:	pop    ecx
  424c9f:	loop   0x424d01
  424ca1:	push   esi
  424ca2:	cmpxchg bh,cl
  424ca5:	loope  0x424c7a
  424ca7:	loope  0x424d01
  424ca9:	lea    edi,[esi+ecx*8-0x3d]
  424cad:	shr    DWORD PTR [esi+0x52],cl
  424cb0:	jge    0x424cf4
  424cb2:	or     DWORD PTR [ebp-0x4fc49044],ebx
  424cb8:	in     al,dx
  424cb9:	aam    0x8b
  424cbb:	iret   
  424cbc:	or     eax,0x1b7e85ac
  424cc1:	iret   
  424cc2:	lods   al,BYTE PTR ds:[esi]
  424cc3:	pop    ss
  424cc4:	adc    esi,eax
  424cc6:	mov    ds:0x2f3dca4,eax
  424ccb:	mov    dl,0x3e
  424ccd:	jp     0x424cf0
  424ccf:	sub    eax,0x8f765ca5
  424cd4:	xchg   ebx,eax
  424cd5:	add    al,0xca
  424cd7:	cmc    
  424cd8:	cli    
  424cd9:	cmp    ebx,DWORD PTR [edi+0x17710f20]
  424cdf:	jg     0x424cae
  424ce1:	inc    DWORD PTR [esi+0x155f1a76]
  424ce7:	dec    ebp
  424ce8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  424cea:	(bad)  
  424ceb:	imul   esi,ebx,0xc
  424cee:	jmp    0x424cc0
  424cf0:	adc    ah,BYTE PTR [eax+0x33536e3e]
  424cf6:	lds    ebx,FWORD PTR [ecx-0x41]
  424cf9:	adc    ebp,ebp
  424cfb:	push   edx
  424cfc:	pop    ss
  424cfd:	mov    ecx,0x47af7d41
  424d02:	pop    ebp
  424d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d04:	cld    
  424d05:	(bad)  
  424d06:	mov    gs,WORD PTR [eax]
  424d08:	sbb    BYTE PTR [ebp-0x7a],dh
  424d0b:	xchg   edi,eax
  424d0c:	sbb    DWORD PTR [edi],0x9ba10bb2
  424d12:	call   0x3e8c:0xcd64e284
  424d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d1a:	xchg   ebp,eax
  424d1b:	mov    eax,0xf32c70c5
  424d20:	mov    ebx,0x5454f33c
  424d25:	push   ebp
  424d26:	(bad)  
  424d27:	rol    BYTE PTR [edx+0x53],1
  424d2a:	or     al,0x63
  424d2c:	jno    0x424cb0
  424d2e:	sub    ebp,DWORD PTR ds:0x9b18fc77
  424d34:	ss test al,0x2a
  424d37:	push   cs
  424d38:	push   esi
  424d39:	sbb    bl,0x4c
  424d3c:	sbb    DWORD PTR [esi+0x465d3fde],esi
  424d42:	jl     0x424d61
  424d44:	gs pop ds
  424d46:	mov    bl,0x49
  424d48:	adc    bh,bh
  424d4a:	iret   
  424d4b:	(bad)  
  424d4c:	jmp    0x7f6d089b
  424d51:	out    dx,al
  424d52:	jle    0x424dc1
  424d54:	add    bh,BYTE PTR [eax-0x6e0a3fee]
  424d5a:	ja     0x424d2e
  424d5c:	dec    esi
  424d5d:	outs   dx,DWORD PTR ds:[esi]
  424d5e:	retf   0x47e7
  424d61:	dec    eax
  424d62:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d64:	sar    edx,cl
  424d66:	arpl   WORD PTR [eax],dx
  424d68:	in     eax,dx
  424d69:	rcl    BYTE PTR [edi-0x3],0x64
  424d6d:	mov    DWORD PTR ds:0x8727684e,ecx
  424d73:	xor    eax,0x9f90e81e
  424d78:	jmp    0x424da5
  424d7a:	lods   al,BYTE PTR ds:[esi]
  424d7b:	push   esp
  424d7c:	push   ebx
  424d7d:	popa   
  424d7e:	dec    esi
  424d7f:	push   cs
  424d80:	rol    BYTE PTR [ebp-0x1b],0x43
  424d84:	add    DWORD PTR [edi-0x17],ebx
  424d87:	mov    ds:0xb301aa21,al
  424d8c:	sbb    al,0xad
  424d8e:	mov    eax,ds:0xeab68d89
  424d93:	mov    ebx,0xba1f8a4b
  424d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d99:	push   ss
  424d9a:	icebp  
  424d9b:	jbe    0x424d3a
  424d9d:	push   cs
  424d9e:	mov    esi,0x100d2389
  424da3:	mov    esi,?
  424da5:	je     0x424e01
  424da7:	loopne 0x424e17
  424da9:	je     0x424e03
  424dab:	push   0x2c6a1692
  424db0:	xchg   edi,eax
  424db1:	aam    0xaf
  424db3:	ret    0x64e6
  424db6:	xchg   BYTE PTR [eax],bl
  424db8:	scas   al,BYTE PTR es:[edi]
  424db9:	sahf   
  424dba:	or     ah,BYTE PTR [esi+0x20c786f9]
  424dc0:	dec    edx
  424dc1:	shl    BYTE PTR [edi+eiz*1+0x6eeea979],1
  424dc8:	jbe    0x424e47
  424dca:	int    0x25
  424dcc:	bound  ebx,QWORD PTR [ebx+eax*2]
  424dcf:	int3   
  424dd0:	cli    
  424dd1:	aad    0x2f
  424dd3:	cdq    
  424dd4:	adc    cl,ch
  424dd6:	mov    dh,0xdd
  424dd8:	imul   ebp,DWORD PTR ds:0x6de2837a,0x5f5870ee
  424de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424de3:	jl     0x424d7a
  424de5:	and    BYTE PTR ds:0x22afacff,0xc2
  424dec:	loopne 0x424e24
  424dee:	pusha  
  424def:	lock xor ebx,DWORD PTR [ebx+0x27]
  424df3:	int    0xd8
  424df5:	push   ebx
  424df6:	cld    
  424df7:	fcom   DWORD PTR [ebp-0x4e]
  424dfa:	out    dx,al
  424dfb:	mov    cl,0x83
  424dfd:	jle    0x424e1a
  424dff:	or     BYTE PTR [ebp-0xd],0xc7
  424e03:	sar    DWORD PTR [ebp+0x5c7cf2ad],cl
  424e09:	or     BYTE PTR [esi+edi*8],cl
  424e0c:	mov    bh,0x37
  424e0e:	sbb    al,bh
  424e10:	jne    0x424dce
  424e12:	shl    BYTE PTR [ebx-0x7e],cl
  424e15:	and    ch,al
  424e17:	out    0xc2,al
  424e19:	add    BYTE PTR [eax-0x5f],bh
  424e1c:	sub    DWORD PTR [edx+0x64],esi
  424e1f:	dec    esi
  424e20:	stc    
  424e21:	dec    esi
  424e22:	inc    eax
  424e23:	mov    dh,BYTE PTR [ecx]
  424e25:	jno    0x424dec
  424e27:	adc    al,0xc0
  424e29:	jbe    0x424db0
  424e2b:	push   ss
  424e2c:	fdiv   st(3),st
  424e2e:	in     eax,0xd7
  424e30:	scas   al,BYTE PTR es:[edi]
  424e31:	ds mov esp,0xafe10462
  424e37:	and    BYTE PTR [ebx],dl
  424e39:	mov    BYTE PTR [eax],al
  424e3b:	fbld   TBYTE PTR [edi+0xe2]
  424e41:	add    BYTE PTR [eax-0x30f8b0bc],al
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     esi,DWORD PTR [ecx+0x17]
  424e50:	mov    al,ds:0x1c72d02
  424e55:	add    ah,dh
  424e57:	add    al,0x0
  424e59:	add    BYTE PTR [ebx+0x350dff7],al
  424e5f:	or     al,BYTE PTR [edx-0x67]
  424e62:	inc    ebp
  424e63:	out    0x44,eax
  424e65:	xor    BYTE PTR [esi-0x4ad09960],ch
  424e6b:	adc    eax,0x301f5340
  424e70:	rcr    edi,0xa3
  424e73:	neg    DWORD PTR [ebx-0x7c]
  424e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e77:	xchg   esp,eax
  424e78:	(bad)  
  424e79:	icebp  
  424e7a:	push   cs
  424e7b:	mov    edi,edx
  424e7d:	sbb    BYTE PTR [esi+edi*2],ah
  424e80:	mov    edx,0x48a9e5af
  424e85:	(bad)  
  424e86:	xor    ebp,DWORD PTR [ebx+0x2322aa44]
  424e8c:	push   0xffffffe3
  424e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e8f:	mov    ah,BYTE PTR [ecx]
  424e91:	xor    BYTE PTR [ebp+0x49cf5ef6],0x12
  424e98:	inc    ebx
  424e99:	dec    edi
  424e9a:	mov    eax,ds:0x4c967521
  424e9f:	das    
  424ea0:	je     0x424e3d
  424ea2:	fwait
  424ea3:	outs   dx,BYTE PTR ds:[esi]
  424ea4:	mov    esi,0x176f8482
  424ea9:	jno    0x424ee2
  424eab:	push   ebx
  424eac:	xchg   esi,eax
  424ead:	and    BYTE PTR [ebp+0x2ac2c2aa],bl
  424eb3:	in     eax,0xa6
  424eb5:	jmp    0x424e5b
  424eb7:	pop    edx
  424eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424eb9:	jno    0x424ee9
  424ebb:	mov    esi,0xd50e1be9
  424ec0:	call   0xd7a9:0x1a7ddce1
  424ec7:	push   0xffffffdc
  424ec9:	dec    ebp
  424eca:	jb     0x424ed5
  424ecc:	push   0x53
  424ece:	cmp    eax,DWORD PTR [esi]
  424ed0:	lods   al,BYTE PTR ds:[esi]
  424ed1:	adc    al,0x25
  424ed3:	(bad)  
  424ed5:	jns    0x424ec2
  424ed7:	adc    al,0xb0
  424ed9:	pop    ebx
  424eda:	shl    BYTE PTR [edx],cl
  424edc:	xchg   ecx,eax
  424edd:	add    dl,BYTE PTR [edx+0x2f]
  424ee0:	inc    esp
  424ee1:	mov    bl,BYTE PTR [eax+0x201ab9eb]
  424ee7:	or     al,0x52
  424ee9:	jno    0x424ec6
  424eeb:	xchg   cl,dl
  424eed:	retf   
  424eee:	push   ss
  424eef:	mov    cs,esp
  424ef1:	xchg   DWORD PTR [edi-0x1de289dc],ebx
  424ef7:	dec    ebp
  424ef8:	mov    ecx,0xa4214286
  424efd:	sbb    al,0xc9
  424eff:	jmp    0x424f78
  424f01:	hlt    
  424f02:	mov    edi,esp
  424f04:	ins    DWORD PTR es:[edi],dx
  424f05:	mov    edi,0xa48534b
  424f0a:	(bad)  
  424f0c:	leave  
  424f0d:	sub    BYTE PTR [esi+eax*2],0x3e
  424f11:	sub    eax,0x28dbe922
  424f16:	shl    BYTE PTR [eax],cl
  424f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f19:	sbb    al,0x8e
  424f1b:	test   eax,0x847f01a0
  424f20:	inc    esp
  424f21:	int    0x9d
  424f23:	jae    0x424f00
  424f25:	mov    ds:0x12c49201,eax
  424f2a:	ds push edx
  424f2c:	pop    edx
  424f2d:	dec    ecx
  424f2e:	push   ecx
  424f2f:	and    al,0xd8
  424f31:	dec    dl
  424f33:	pop    edx
  424f34:	pusha  
  424f35:	jno    0x424ef9
  424f37:	xchg   ebx,eax
  424f38:	xchg   esi,eax
  424f39:	ins    DWORD PTR es:[edi],dx
  424f3a:	xor    eax,0x7b93c456
  424f3f:	mov    bl,al
  424f41:	inc    ecx
  424f42:	ja     0x424f46
  424f44:	push   ss
  424f45:	or     al,0x73
  424f47:	inc    ebx
  424f48:	and    bl,dl
  424f4a:	push   edi
  424f4b:	(bad)  
  424f4c:	out    0xbc,al
  424f4e:	cmp    eax,0xf791a28c
  424f53:	dec    eax
  424f54:	xchg   esi,eax
  424f55:	adc    al,ah
  424f57:	pop    ecx
  424f58:	int    0x4b
  424f5a:	out    0xf8,eax
  424f5c:	fstp   TBYTE PTR [edi+edi*1]
  424f5f:	cdq    
  424f60:	data16 (bad) 
  424f62:	cmp    ecx,DWORD PTR [eax+ecx*1-0x54b2ae86]
  424f69:	pop    es
  424f6a:	fadd   st(6),st
  424f6c:	sub    eax,0x779f035
  424f71:	test   BYTE PTR [esi+0x41c83118],ch
  424f77:	cmp    eax,0x54068436
  424f7c:	adc    ebp,ebp
  424f7e:	xchg   ecx,eax
  424f7f:	inc    edi
  424f80:	pop    es
  424f81:	jne    0x424fdf
  424f83:	mov    bh,0xa9
  424f85:	xchg   ebp,eax
  424f86:	jmp    0xed7fb97a
  424f8b:	adc    dh,0xa4
  424f8e:	push   es
  424f8f:	or     eax,0x94b04fbb
  424f94:	push   ss
  424f95:	test   eax,0x2d04ad5f
  424f9a:	cdq    
  424f9b:	dec    esp
  424f9c:	adc    al,0xf4
  424f9e:	fld    DWORD PTR [ecx-0x70802e4e]
  424fa4:	mov    cl,0x1e
  424fa6:	mov    DWORD PTR [ecx-0x62e37a2a],ecx
  424fac:	cli    
  424fad:	stc    
  424fae:	mov    eax,0x61b62669
  424fb3:	daa    
  424fb4:	cmp    BYTE PTR [edi-0x19037fa5],al
  424fba:	or     eax,0x21788a21
  424fbf:	addr16 addr16 xor eax,0x82b62a26
  424fc6:	psrlw  mm1,QWORD PTR [esi-0x7c]
  424fca:	jmp    0x1c04f295
  424fcf:	div    DWORD PTR [edi-0x5d]
  424fd2:	inc    edx
  424fd3:	add    BYTE PTR [edi+ecx*1-0x2],dh
  424fd7:	daa    
  424fd8:	jnp    0x424f76
  424fda:	add    al,0x7b
  424fdc:	cmp    ah,dh
  424fde:	in     eax,dx
  424fdf:	and    ebp,0x3a
  424fe2:	xchg   ecx,eax
  424fe3:	js     0x42501d
  424fe5:	mov    eax,ds:0xce215a05
  424fea:	cld    
  424feb:	or     esi,edi
  424fed:	retf   
  424fee:	xor    DWORD PTR [edi-0x3a4a9b4d],0x78
  424ff5:	mov    BYTE PTR [esi],dl
  424ff7:	sub    DWORD PTR [edx+0x6a],0x52bca95b
  424ffe:	add    eax,0x645fd02c
  425003:	inc    ebx
  425004:	and    ebp,DWORD PTR [ebx+0x252a07a4]
  42500a:	in     al,0x5f
  42500c:	xlat   BYTE PTR ds:[ebx]
  42500d:	aam    0xdc
  42500f:	mov    edi,0xa01726d6
  425014:	sub    DWORD PTR [edx+0x7fd09554],eax
  42501a:	test   BYTE PTR [edi-0x20b64a4c],0x51
  425021:	sbb    BYTE PTR gs:[ebp+0x13b8d7e8],0xf6
  425029:	ror    BYTE PTR [edi-0x20bb25d7],0x58
  425030:	icebp  
  425031:	xchg   ecx,eax
  425032:	in     eax,0xec
  425034:	cmp    ch,dh
  425036:	pop    edi
  425037:	mov    bh,dl
  425039:	and    edx,ebx
  42503b:	or     al,0xb2
  42503d:	popa   
  42503e:	pop    edx
  42503f:	pop    ecx
  425040:	imul   ebx,DWORD PTR [eax-0x54],0xffffffc0
  425044:	fwait
  425045:	cmp    bh,bl
  425047:	cmp    al,BYTE PTR [eax-0x38ffb98b]
  42504d:	xchg   BYTE PTR [ecx+0x26cd3387],bl
  425053:	sub    ebx,eax
  425055:	dec    esp
  425056:	int    0x76
  425058:	mov    cl,0xd9
  42505a:	dec    ebx
  42505b:	or     BYTE PTR ds:0x1af30d6b,ch
  425061:	sub    dl,BYTE PTR [ebp+edx*2+0x13]
  425065:	push   es
  425066:	ja     0x42504e
  425068:	lea    edi,[eax]
  42506a:	rcl    DWORD PTR [edi-0x38],0xc8
  42506e:	push   edi
  42506f:	mov    cl,0x8b
  425071:	lahf   
  425072:	cmc    
  425073:	std    
  425074:	lahf   
  425075:	fcomp  st(6)
  425077:	push   esp
  425078:	jno    0x4250ce
  42507a:	sub    BYTE PTR [ebp-0x69],ah
  42507d:	push   ds
  42507e:	sbb    ebp,DWORD PTR [eax+0x12c613b8]
  425084:	adc    ebx,DWORD PTR [edi+0x44]
  425087:	fwait
  425088:	jp     0x42508d
  42508a:	aad    0x16
  42508c:	addr16 mov ds:0x1f4,al
  425090:	shr    DWORD PTR [edx+0x5c119ea],1
  425096:	or     DWORD PTR [eax-0x76],edx
  425099:	fsubr  QWORD PTR [ecx+0x4c70458d]
  42509f:	retf   0x786e
  4250a2:	int    0xef
  4250a4:	mov    bl,0xfb
  4250a6:	pop    ebx
  4250a7:	stos   DWORD PTR es:[edi],eax
  4250a8:	out    dx,al
  4250a9:	xor    ch,bl
  4250ab:	clc    
  4250ac:	shr    BYTE PTR [ecx-0x7a],1
  4250af:	repz retf 
  4250b1:	push   es
  4250b2:	fcom   QWORD PTR [ecx+0xb]
  4250b5:	xchg   DWORD PTR [ebx-0x10],edx
  4250b8:	sub    ebp,eax
  4250ba:	cpuid  
  4250bc:	stos   DWORD PTR es:[edi],eax
  4250bd:	push   ebx
  4250be:	repz push eax
  4250c0:	sub    ebp,DWORD PTR ds:0x2386b720
  4250c6:	dec    eax
  4250c7:	rcr    BYTE PTR [ecx],1
  4250c9:	jo     0x42512d
  4250cb:	xchg   esi,eax
  4250cc:	dec    esi
  4250cd:	sahf   
  4250ce:	ja     0x425118
  4250d0:	shl    DWORD PTR ds:0x1aecd5c,cl
  4250d6:	ss scas al,BYTE PTR es:[edi]
  4250d8:	cmp    BYTE PTR [ebp-0xf3cf267],dl
  4250de:	(bad)  
  4250e0:	xchg   BYTE PTR [ebp-0x9],bl
  4250e3:	imul   DWORD PTR [edi]
  4250e5:	mov    dh,0x18
  4250e7:	jl     0x42513f
  4250e9:	fstp   DWORD PTR [edi+0x54]
  4250ec:	sbb    BYTE PTR [ecx+eiz*8+0x50],ah
  4250f0:	mov    dl,BYTE PTR [ebx]
  4250f2:	mov    ebp,0xbe5edaf9
  4250f7:	pop    ecx
  4250f8:	cmp    BYTE PTR [edi-0x75529eb0],ah
  4250fe:	inc    DWORD PTR [ebp+0x42]
  425101:	enter  0x8f4a,0x88
  425105:	jns    0x425173
  425107:	push   edi
  425108:	stos   BYTE PTR es:[edi],al
  425109:	icebp  
  42510a:	mov    eax,0x16cb4781
  42510f:	inc    esi
  425110:	fidivr WORD PTR [eax]
  425112:	xlat   BYTE PTR ds:[ebx]
  425113:	jmp    0x9a28:0x2f55bafe
  42511a:	jae    0x42518d
  42511c:	mov    BYTE PTR [ecx],bl
  42511e:	ror    BYTE PTR [edi],1
  425120:	stos   BYTE PTR es:[edi],al
  425121:	cli    
  425122:	mov    dh,0x95
  425124:	mov    eax,eax
  425126:	mov    WORD PTR [esi+ebx*4],fs
  425129:	jmp    0xe94b:0x9dafd497
  425130:	inc    ebp
  425131:	mov    WORD PTR [ebx-0x11ff157a],es
  425137:	cmp    esi,0x37
  42513a:	aam    0xcf
  42513c:	(bad)  
  42513d:	call   DWORD PTR [ebx+0x720f05b6]
  425143:	mov    dl,0x19
  425145:	sub    ch,BYTE PTR [ecx-0x5264b45d]
  42514b:	adc    esi,0x199c9a46
  425151:	xchg   ecx,eax
  425152:	xchg   dh,ch
  425154:	lock lahf 
  425156:	xchg   esp,eax
  425157:	addr16 mov eax,ds:0xd6c9
  42515b:	mov    al,ds:0x640f2e52
  425160:	xlat   BYTE PTR ds:[ebx]
  425161:	enter  0x74c5,0x64
  425165:	mov    ebx,0x63162463
  42516a:	jns    0x42516a
  42516c:	pop    ebx
  42516d:	pop    ecx
  42516e:	pop    ebp
  42516f:	push   0xf33be1e3
  425174:	pop    edi
  425175:	setge  BYTE PTR [ebp+0x72f2dcea]
  42517c:	xchg   ebp,eax
  42517d:	xchg   ecx,eax
  42517e:	mov    dl,0xe1
  425180:	pop    ecx
  425181:	push   ds
  425182:	cmp    eax,0x5c402475
  425187:	pop    eax
  425188:	(bad)  
  425189:	fisttp WORD PTR [edx-0x7a3f9d7b]
  42518f:	xlat   BYTE PTR ds:[ebx]
  425190:	lods   eax,DWORD PTR ds:[esi]
  425191:	pop    eax
  425192:	sbb    DWORD PTR [edx+edi*8],edi
  425195:	test   BYTE PTR [edi+0x66],ch
  425198:	adc    al,0xd7
  42519a:	sbb    DWORD PTR [edx+0x2b],ebp
  42519d:	push   edi
  42519e:	(bad)  
  4251a0:	adc    eax,0xfce26364
  4251a5:	mov    esp,0xc546080e
  4251aa:	cmp    BYTE PTR [eax],bh
  4251ac:	sub    BYTE PTR [edi+0x643f107a],dl
  4251b2:	popf   
  4251b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251b4:	jae    0x42518e
  4251b6:	stos   DWORD PTR es:[edi],eax
  4251b7:	jbe    0x425190
  4251b9:	int    0x77
  4251bb:	cmp    edi,DWORD PTR [esi-0x6b]
  4251be:	push   cs
  4251bf:	popa   
  4251c0:	xor    dl,bl
  4251c2:	jl     0x42518a
  4251c4:	js     0x425187
  4251c6:	lock int 0xe2
  4251c9:	mov    WORD PTR [esi-0x1],ss
  4251cc:	or     BYTE PTR [edx+0x5c],dh
  4251cf:	and    DWORD PTR cs:[esi+0x4a],0x7bef339f
  4251d7:	push   DWORD PTR ds:0x541aca1d
  4251dd:	cmp    ah,bl
  4251df:	mov    esp,0x2dc023f6
  4251e4:	sbb    ebx,DWORD PTR ds:0x7b73ebe0
  4251ea:	sub    BYTE PTR [ebx-0x54],bh
  4251ed:	nop
  4251ee:	js     0x425185
  4251f0:	sub    edi,DWORD PTR [edi-0x5c]
  4251f3:	jbe    0x425246
  4251f5:	outs   dx,DWORD PTR ds:[esi]
  4251f6:	clc    
  4251f7:	or     DWORD PTR [ebp+0x50bd767a],eax
  4251fd:	jne    0x425216
  4251ff:	mov    edx,0x3a039ffe
  425204:	jb     0x4251fe
  425206:	test   BYTE PTR [ebx+edx*2],bl
  425209:	icebp  
  42520a:	xchg   ecx,eax
  42520b:	jge    0x4251ae
  42520d:	jno    0x425197
  42520f:	mov    edx,0xe235ae3a
  425214:	mov    bh,0xa5
  425216:	pop    esi
  425217:	push   ecx
  425218:	or     eax,DWORD PTR [esi-0x73]
  42521b:	retf   
  42521c:	add    ebp,esp
  42521e:	push   edx
  42521f:	and    ecx,DWORD PTR [edi]
  425221:	loope  0x42526a
  425223:	add    BYTE PTR [esi+0x1d],cl
  425226:	cmp    DWORD PTR [ebp-0x75f514a3],esi
  42522c:	das    
  42522d:	push   ss
  42522e:	fcomp  QWORD PTR [edx+0x20]
  425231:	cmp    DWORD PTR [edi+edx*1+0x24],esi
  425235:	inc    edx
  425236:	mov    al,ds:0x631c01de
  42523b:	retf   0xa80a
  42523e:	and    dh,BYTE PTR [ecx]
  425240:	scas   al,BYTE PTR es:[edi]
  425241:	jnp    0x4251f9
  425243:	stos   DWORD PTR es:[edi],eax
  425244:	push   edi
  425245:	fisub  WORD PTR [edx-0x5aa01b16]
  42524b:	aam    0xb2
  42524d:	mov    fs,ecx
  42524f:	jge    0x425229
  425251:	pop    ebx
  425252:	push   edi
  425253:	dec    esi
  425254:	not    BYTE PTR [edx]
  425256:	aas    
  425257:	fild   DWORD PTR [ebp-0x49]
  42525a:	cmovg  eax,esi
  42525d:	sbb    al,0xff
  42525f:	hlt    
  425260:	int3   
  425261:	cmc    
  425262:	mov    ds:0x8d550352,eax
  425267:	bt     DWORD PTR [ebp+0x1b],edx
  42526b:	hlt    
  42526c:	mov    bl,0x1e
  42526e:	pusha  
  42526f:	leave  
  425270:	push   ecx
  425271:	mov    es,WORD PTR [edx+0x3f]
  425274:	jge    0x4252a5
  425276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425277:	mov    ds:0x42c329a,al
  42527c:	stos   DWORD PTR es:[edi],eax
  42527d:	in     al,0xa
  42527f:	xor    al,0x20
  425281:	adc    DWORD PTR [eax+ebp*4-0x6d105b02],ebx
  425288:	in     eax,dx
  425289:	repnz adc BYTE PTR [eax-0x739bb691],bh
  425290:	clc    
  425291:	mov    esp,0x5bb47a67
  425296:	pop    ebx
  425297:	stc    
  425298:	pop    edx
  425299:	xchg   ebx,eax
  42529a:	test   BYTE PTR [ebx+0x1e],ch
  42529d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42529e:	into   
  42529f:	call   0x14eb:0x4178d127
  4252a6:	ins    BYTE PTR es:[edi],dx
  4252a7:	loopne 0x425287
  4252a9:	(bad)
  4252ac:	aaa    
  4252ad:	sub    eax,0x3a7d4dbb
  4252b2:	cmp    eax,0xb6787440
  4252b7:	sub    esp,DWORD PTR [eax]
  4252b9:	fstp   TBYTE PTR ds:0x86fe3272
  4252bf:	loope  0x425321
  4252c1:	fwait
  4252c2:	mov    DWORD PTR [edi-0x41],ecx
  4252c5:	lock inc ebp
  4252c7:	mov    ecx,0x508a74f5
  4252cc:	mov    cl,0x98
  4252ce:	and    eax,0x7581c06e
  4252d3:	mov    ah,0x7
  4252d5:	mov    edx,0xddee8257
  4252da:	dec    edx
  4252db:	xchg   edx,eax
  4252dc:	cmp    DWORD PTR [eax+0x37],ebp
  4252df:	push   esp
  4252e0:	pop    ebp
  4252e1:	cmp    eax,0x7526b5e4
  4252e6:	push   0xffffffca
  4252e8:	jp     0x4252de
  4252ea:	xchg   ecx,eax
  4252eb:	jnp    0x4252dd
  4252ed:	sub    cl,cl
  4252ef:	cmc    
  4252f0:	xchg   edi,eax
  4252f1:	push   es
  4252f2:	sbb    al,0xed
  4252f4:	jnp    0x42528d
  4252f6:	pop    eax
  4252f7:	ins    BYTE PTR es:[edi],dx
  4252f8:	addr16 loop 0x42531b
  4252fb:	adc    bl,BYTE PTR [edi]
  4252fd:	daa    
  4252fe:	dec    esp
  4252ff:	js     0x425317
  425301:	fcmovne st,st(6)
  425303:	pop    ebp
  425304:	les    edx,FWORD PTR [edx-0x1466975f]
  42530a:	outs   dx,DWORD PTR ds:[si]
  42530c:	es pop ss
  42530e:	aaa    
  42530f:	lea    ecx,[eax-0x3580159a]
  425315:	xor    ebx,DWORD PTR [edx]
  425317:	mov    WORD PTR [edi],ds
  425319:	mov    esi,0xdaecb888
  42531e:	pop    ss
  42531f:	mov    WORD PTR [eax],?
  425321:	or     eax,0x360cd193
  425326:	xlat   BYTE PTR ds:[ebx]
  425327:	(bad)  
  425328:	ror    al,1
  42532a:	retf   0x6e85
  42532d:	mov    ds:0xca71e05e,ax
  425333:	mov    dh,0x75
  425335:	gs inc edx
  425337:	mov    ch,0x6c
  425339:	push   ds
  42533a:	fld    DWORD PTR [edi-0x5c]
  42533d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42533e:	sbb    DWORD PTR [ebx+0x5a465b6d],esi
  425344:	pop    esi
  425345:	jge    0x4253ba
  425347:	fcom   DWORD PTR [ebx-0x2d860b9d]
  42534d:	mov    al,ds:0x0
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	ret    0xec3a
  425361:	repnz and esp,ecx
  425364:	add    DWORD PTR [eax],eax
  425366:	hlt    
  425367:	add    al,0x0
  425369:	add    ch,dl
  42536b:	xchg   edi,eax
  42536c:	adc    BYTE PTR [edx-0x44],al
  42536f:	imul   esi,DWORD PTR [esi-0x7e],0x4773096d
  425376:	sbb    DWORD PTR [eax-0x3c3510ed],ecx
  42537c:	push   0xffffffcc
  42537e:	and    esi,esp
  425380:	push   ds
  425381:	sub    BYTE PTR [edi-0x54],ah
  425384:	call   0xcf4c9e5
  425389:	adc    al,0x7e
  42538b:	mov    al,0xe8
  42538d:	or     eax,0x86aa40e3
  425392:	int3   
  425393:	inc    ebp
  425394:	push   es
  425395:	fnsave [ebp+ebx*2-0x11]
  425399:	cli    
  42539a:	or     ebx,DWORD PTR [edi]
  42539c:	sub    DWORD PTR [edi+0x45],ebp
  42539f:	jecxz  0x4253eb
  4253a1:	or     al,0x8
  4253a3:	pop    ebp
  4253a4:	or     dh,bl
  4253a6:	jg     0x42539e
  4253a8:	shl    DWORD PTR [edi+0x3dabc0bb],0x41
  4253af:	sbb    eax,0x88cf56f4
  4253b4:	fst    QWORD PTR [eax+0x523028d6]
  4253ba:	inc    ebx
  4253bb:	in     al,0xeb
  4253bd:	mov    ebp,0x8c09d783
  4253c2:	loope  0x425429
  4253c4:	adc    al,0xd
  4253c6:	int3   
  4253c7:	lods   eax,DWORD PTR ds:[esi]
  4253c8:	int3   
  4253c9:	dec    edi
  4253ca:	rcpps  xmm2,XMMWORD PTR ds:0xf7669392
  4253d1:	sbb    dl,BYTE PTR [esi+0x6d88b653]
  4253d7:	xor    BYTE PTR [edi-0x61],bl
  4253da:	cmp    cl,BYTE PTR [ecx]
  4253dc:	call   0xc04c:0x46635d3a
  4253e3:	xlat   BYTE PTR ds:[ebx]
  4253e4:	lods   al,BYTE PTR ds:[esi]
  4253e5:	out    0x82,al
  4253e7:	daa    
  4253e8:	sub    eax,esi
  4253ea:	sbb    al,0x10
  4253ec:	inc    ebp
  4253ed:	fnstsw WORD PTR [ebx-0xb7f393d]
  4253f3:	cmc    
  4253f4:	adc    bh,BYTE PTR cs:[ecx+0x17e55493]
  4253fb:	xchg   ebx,eax
  4253fc:	mov    es,WORD PTR [esp+ebx*4-0x72e4f023]
  425403:	fld    TBYTE PTR [ebx+eiz*1-0x13b2bccc]
  42540a:	jbe    0x425486
  42540c:	(bad)  
  42540e:	pop    ds
  42540f:	mov    eax,ds:0xaea6c054
  425414:	mov    eax,ds:0xf115a292
  425419:	fwait
  42541a:	mov    ebx,DWORD PTR [ebp-0x11]
  42541d:	hlt    
  42541e:	xchg   esi,eax
  42541f:	jge    0x4253ca
  425421:	inc    edi
  425422:	fidivr DWORD PTR [esi-0x7bcbc0c8]
  425428:	stos   BYTE PTR es:[edi],al
  425429:	push   0xfffffffc
  42542b:	mov    cl,0x43
  42542d:	jo     0x4253b4
  42542f:	cwde   
  425430:	mov    bh,0x31
  425432:	push   ss
  425433:	mov    DWORD PTR [edi-0x41737315],ebx
  425439:	rcr    DWORD PTR [esi-0xf7106ca],0x40
  425440:	mov    bl,0xf9
  425442:	(bad)  
  425443:	lock dec ebp
  425445:	sbb    BYTE PTR [ebx+0x3e],ah
  425448:	stos   BYTE PTR es:[edi],al
  425449:	mov    ebp,0x17e37042
  42544e:	cmp    ecx,DWORD PTR [ecx]
  425450:	(bad)  
  425451:	mov    esp,0x41d71489
  425456:	xchg   DWORD PTR [edx+0x51],edx
  425459:	jae    0x4254da
  42545b:	out    0x1c,eax
  42545d:	jnp    0x425479
  42545f:	fsubrp st(3),st
  425461:	ins    BYTE PTR es:[edi],dx
  425462:	push   edi
  425463:	mov    eax,0xa1f39c8f
  425468:	sbb    al,0xca
  42546a:	mov    eax,0x465871b2
  42546f:	retf   0x7130
  425472:	or     edx,DWORD PTR [ebx-0x4f59f5fb]
  425478:	faddp  st(1),st
  42547a:	les    ebx,FWORD PTR [ebx+0x37]
  42547d:	jl     0x4254c9
  42547f:	jne    0x425435
  425481:	fild   WORD PTR [esi]
  425483:	data16 (bad) 
  425485:	loop   0x42548a
  425487:	pushf  
  425488:	adc    DWORD PTR fs:[esi],esp
  42548b:	inc    ebp
  42548c:	adc    esi,DWORD PTR [ebx-0x10]
  42548f:	adc    BYTE PTR [edx-0xb],dh
  425492:	xor    dl,BYTE PTR [eax-0x94e14dc]
  425498:	jmp    0x4254a0
  42549a:	outs   dx,BYTE PTR ds:[esi]
  42549b:	push   ds
  42549c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42549d:	inc    edx
  42549e:	in     eax,dx
  42549f:	xchg   esp,eax
  4254a0:	cld    
  4254a1:	sub    BYTE PTR [eax],dl
  4254a3:	loop   0x4254ae
  4254a5:	pop    edi
  4254a6:	jmp    0x4254d4
  4254a8:	js     0x4254c4
  4254aa:	add    DWORD PTR [ebx+ebx*1+0x347752c0],0x16
  4254b2:	dec    eax
  4254b3:	les    eax,FWORD PTR [eax-0x4]
  4254b6:	test   DWORD PTR [esi+0xc],edx
  4254b9:	dec    edi
  4254ba:	pop    edx
  4254bb:	es mov esp,0x825321a
  4254c1:	pop    es
  4254c2:	pop    ebx
  4254c3:	xchg   ebx,eax
  4254c4:	adc    BYTE PTR [esi+ebx*8-0x31],al
  4254c8:	mov    gs,esp
  4254ca:	in     eax,dx
  4254cb:	xor    dh,BYTE PTR [ebp-0xe14ebdb]
  4254d1:	xlat   BYTE PTR ds:[ebx]
  4254d2:	push   ss
  4254d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254d4:	in     al,0x52
  4254d6:	je     0x4254d4
  4254d8:	jmp    0x4254f0
  4254da:	xor    eax,0xe213773f
  4254df:	sub    ebp,DWORD PTR [esi]
  4254e1:	xchg   esi,eax
  4254e2:	in     eax,0x8f
  4254e4:	out    0xfa,al
  4254e6:	mov    bh,0x44
  4254e8:	fucom  st(7)
  4254ea:	mov    cl,0x66
  4254ec:	mov    ah,BYTE PTR [edi]
  4254ee:	pop    eax
  4254ef:	jl     0x4254f7
  4254f1:	sahf   
  4254f2:	out    dx,al
  4254f3:	jg     0x425502
  4254f5:	fnstcw WORD PTR ds:0x86200ca4
  4254fb:	or     DWORD PTR [eax+0x59144c41],eax
  425501:	push   esi
  425502:	push   esi
  425503:	enter  0x39d5,0x7e
  425507:	aam    0x84
  425509:	sbb    al,0x2b
  42550b:	les    esi,FWORD PTR [bx+si-0xd1e]
  425510:	dec    DWORD PTR [ebp-0x41]
  425513:	add    bh,BYTE PTR [eax+0x1764fcdc]
  425519:	mov    dh,0xa6
  42551b:	lahf   
  42551c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42551d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42551e:	int    0x32
  425520:	xchg   di,ax
  425522:	push   edi
  425523:	jbe    0x4254a8
  425525:	fisttp WORD PTR [edx+ebx*8+0x3e75de24]
  42552c:	lods   eax,DWORD PTR ds:[esi]
  42552d:	lods   al,BYTE PTR ds:[esi]
  42552e:	pop    eax
  42552f:	(bad)  
  425530:	mov    ecx,0x8cfd92e4
  425535:	lock xchg ebx,eax
  425537:	sub    DWORD PTR [ecx],ebp
  425539:	lock jbe 0x425521
  42553c:	outs   dx,BYTE PTR ds:[esi]
  42553d:	push   eax
  42553e:	mov    edi,0x5f87426c
  425543:	out    0xe,eax
  425545:	adc    al,0x5e
  425547:	stc    
  425548:	mov    al,BYTE PTR [ebx-0x47]
  42554b:	jne    0x4255a3
  42554d:	push   edi
  42554e:	inc    edi
  42554f:	sbb    al,cl
  425551:	add    edi,DWORD PTR [ebx-0x49f2b9c]
  425557:	xchg   DWORD PTR [edx],ecx
  425559:	scas   al,BYTE PTR es:[edi]
  42555a:	clc    
  42555b:	pop    edx
  42555c:	pop    esp
  42555d:	mov    al,ds:0x22c2b667
  425562:	les    ebx,FWORD PTR [ebx]
  425564:	inc    edx
  425565:	mov    ch,0x60
  425567:	data16 arpl bp,di
  42556a:	push   edx
  42556b:	mov    cl,0xcb
  42556d:	shr    BYTE PTR [eax+eax*2],0xf4
  425571:	nop
  425572:	std    
  425573:	(bad)  
  425574:	in     al,0xf8
  425576:	cmp    DWORD PTR [ebx+0x5c],eax
  425579:	imul   ebx,DWORD PTR [ebp-0x29820cdb],0x147fee05
  425583:	aas    
  425584:	adc    cl,dl
  425586:	mov    ebx,0xa99ba7d6
  42558b:	dec    bp
  42558d:	mov    ss,WORD PTR [edx+0xfb433d6]
  425593:	(bad)  
  425594:	fisttp WORD PTR [ebp-0x33]
  425597:	pop    eax
  425598:	sbb    DWORD PTR ds:0xc1bbe4be,0xffffff8d
  42559f:	dec    esp
  4255a0:	je     0x42559a
  4255a2:	(bad)  
  4255a3:	imul   edi,DWORD PTR [ecx-0x4],0xffffffda
  4255a7:	stc    
  4255a8:	pop    ds
  4255a9:	pop    ss
  4255aa:	jmp    0x4255c3
  4255ac:	sbb    bh,BYTE PTR [ebp-0x19]
  4255af:	int    0xec
  4255b1:	fdivr  QWORD PTR [esi]
  4255b3:	xor    eax,0xa5959253
  4255b8:	cmp    DWORD PTR [edx+0x59],esi
  4255bb:	xchg   BYTE PTR [ebp+0x3c8191c0],cl
  4255c1:	xchg   esp,eax
  4255c2:	repz inc edi
  4255c4:	push   cs
  4255c5:	addr16 push 0x716dcf9d
  4255cb:	xchg   edx,eax
  4255cc:	cdq    
  4255cd:	xor    DWORD PTR [edx],ebx
  4255cf:	push   ebp
  4255d0:	push   0xffffffbd
  4255d2:	lods   al,BYTE PTR ds:[esi]
  4255d3:	jle    0x425637
  4255d5:	mov    eax,ds:0x2f988fe9
  4255da:	or     eax,0x9020a006
  4255df:	add    BYTE PTR [edx+ebp*2-0x76889e56],dh
  4255e6:	xor    edx,DWORD PTR [esi-0x54]
  4255e9:	cdq    
  4255ea:	clc    
  4255eb:	and    eax,0xa601f9a0
  4255f0:	add    al,0x50
  4255f2:	aad    0x84
  4255f4:	iret   
  4255f5:	push   ds
  4255f6:	fwait
  4255f7:	mov    ebp,0x1c98be72
  4255fc:	sbb    dh,bh
  4255fe:	popf   
  4255ff:	mov    eax,ds:0xbd23d56c
  425604:	push   ebp
  425605:	and    esi,DWORD PTR [eax]
  425607:	clc    
  425608:	pop    es
  425609:	sbb    bl,BYTE PTR [eax+0x20]
  42560c:	adc    al,0x1a
  42560e:	xor    bh,BYTE PTR [ebx-0x3b5e623a]
  425614:	mov    ebx,0x8232b234
  425619:	das    
  42561a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42561b:	cs mov bh,dl
  42561e:	scas   al,BYTE PTR es:[edi]
  42561f:	pop    es
  425620:	icebp  
  425621:	mov    cl,0xf1
  425623:	inc    eax
  425624:	inc    ebp
  425625:	mov    ah,0xc7
  425627:	test   eax,0x2341eba7
  42562c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42562d:	sub    DWORD PTR [eax+0x7e2c02f7],0x9f697109
  425637:	mov    eax,0x3555dc31
  42563c:	add    eax,0xd979c145
  425641:	aam    0xd0
  425643:	cdq    
  425644:	fidivr WORD PTR [esi+0x3e12601f]
  42564a:	add    bl,ch
  42564c:	test   eax,0x866e58ae
  425651:	mov    al,0xdd
  425653:	inc    ebp
  425654:	xchg   esp,eax
  425655:	test   bl,ah
  425657:	adc    al,0xdb
  425659:	adc    al,0x4e
  42565b:	lahf   
  42565c:	out    dx,al
  42565d:	int    0xee
  42565f:	fst    QWORD PTR [eax-0x9aecbfb]
  425665:	inc    edi
  425666:	cmc    
  425667:	mov    eax,0x36c89181
  42566c:	push   ebx
  42566d:	outs   dx,DWORD PTR ds:[esi]
  42566e:	test   eax,0x2e2af6f2
  425673:	lods   al,BYTE PTR ds:[esi]
  425674:	fcmove st,st(5)
  425676:	dec    eax
  425677:	imul   esi,DWORD PTR [edx+0x273351a6],0x28
  42567e:	add    eax,0x601a2da9
  425683:	adc    ebp,DWORD PTR [ebx-0x34]
  425686:	shr    edi,1
  425688:	retf   0xb2f
  42568b:	daa    
  42568c:	xchg   edi,eax
  42568d:	inc    edi
  42568e:	add    DWORD PTR [edi],edx
  425690:	adc    al,BYTE PTR [edi+esi*8+0x6b]
  425694:	mov    dh,0x2d
  425696:	mov    bh,0x9
  425698:	das    
  425699:	mov    ecx,0x21eb969d
  42569e:	xchg   BYTE PTR [edi+0x77027125],bl
  4256a4:	adc    al,bh
  4256a6:	ds dec esi
  4256a8:	lahf   
  4256a9:	rcl    BYTE PTR [esi+0x4e],cl
  4256ac:	lock (bad) 
  4256ae:	cmp    bh,dl
  4256b0:	int3   
  4256b1:	mov    DWORD PTR [edi+0x3bedfb33],edx
  4256b7:	pop    ecx
  4256b8:	sbb    DWORD PTR [ecx-0x26],0xffffffae
  4256bc:	cmp    bh,al
  4256be:	fxch   st(2)
  4256c0:	xchg   BYTE PTR [ebx+0x63],cl
  4256c3:	mov    ch,0xf0
  4256c5:	inc    ebp
  4256c6:	pop    eax
  4256c7:	pushf  
  4256c8:	jl     0x4256f6
  4256ca:	sbb    al,0xfc
  4256cc:	iret   
  4256cd:	cld    
  4256ce:	lahf   
  4256cf:	dec    ecx
  4256d0:	addr16 loopne 0x4256d2
  4256d3:	pop    ebx
  4256d4:	xor    eax,0x8e24ae46
  4256d9:	xor    DWORD PTR [ecx+0x717d3b62],edx
  4256df:	jo     0x4256ea
  4256e1:	out    0x62,al
  4256e3:	jo     0x42566f
  4256e5:	push   0x7b969b3e
  4256ea:	fsubr  st,st(0)
  4256ec:	scas   eax,DWORD PTR es:[edi]
  4256ed:	mov    ebx,0xb77db6b5
  4256f2:	pop    esp
  4256f3:	inc    edi
  4256f4:	inc    esp
  4256f5:	scas   eax,DWORD PTR es:[edi]
  4256f6:	fs daa 
  4256f8:	out    0x77,al
  4256fa:	mov    ebx,0x377bec55
  4256ff:	ds pop esi
  425701:	push   esp
  425702:	cmc    
  425703:	push   ecx
  425704:	mov    ebx,0xb73ecd0d
  425709:	pop    eax
  42570a:	add    eax,0x53582f7d
  42570f:	or     BYTE PTR [edi+0x74c5e142],ah
  425715:	mov    BYTE PTR [esi-0x51],cl
  425718:	retf   0x55b9
  42571b:	jge    0x4256b5
  42571d:	mov    DWORD PTR [edx-0x20],ebx
  425720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425721:	pop    edi
  425722:	mov    DWORD PTR [esi+0x1],esi
  425725:	add    eax,0x234528d5
  42572a:	lods   al,BYTE PTR ds:[esi]
  42572b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42572c:	cmp    eax,0x3d14fd51
  425731:	sti    
  425732:	mov    ebp,0x37546d79
  425737:	xor    DWORD PTR [edx],0x65
  42573a:	mov    eax,ds:0xbde8ec77
  42573f:	scas   eax,DWORD PTR es:[edi]
  425740:	jge    0x425713
  425742:	cmp    BYTE PTR [edi-0x4b],cl
  425745:	popa   
  425746:	or     esi,DWORD PTR [ebp-0x521a2cea]
  42574c:	aas    
  42574d:	or     ah,ch
  42574f:	int    0xd8
  425751:	retf   
  425752:	js     0x425729
  425754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425755:	loop   0x42577d
  425757:	cld    
  425758:	test   BYTE PTR [edi-0x79],dl
  42575b:	add    DWORD PTR [ebx],edi
  42575d:	aam    0xc4
  42575f:	jb     0x4257cb
  425761:	jle    0x425758
  425763:	std    
  425764:	push   esp
  425765:	mov    dl,0xb1
  425767:	cdq    
  425768:	sub    esi,esp
  42576a:	push   es
  42576b:	outs   dx,BYTE PTR ds:[esi]
  42576c:	mov    eax,ds:0x6bd095ba
  425771:	cmp    eax,0x9c16e7cb
  425776:	push   eax
  425777:	les    ebp,FWORD PTR ds:0x1bfe807
  42577d:	mov    esi,0x55f7c0b4
  425782:	jbe    0x42577a
  425784:	and    al,0xc8
  425786:	push   cs
  425787:	in     al,dx
  425788:	ss mov esp,0x9a2ae187
  42578e:	shl    ebp,1
  425790:	or     ch,BYTE PTR [esi-0x60]
  425793:	mov    BYTE PTR [edx+0x4d],bh
  425796:	arpl   WORD PTR [ebx-0x3f],dx
  425799:	fs adc al,0xe0
  42579c:	clc    
  42579d:	pop    ebp
  42579e:	mov    cl,0x8
  4257a0:	out    dx,eax
  4257a1:	xor    BYTE PTR [eax+0x66],ch
  4257a4:	cmc    
  4257a5:	call   0x2815ab8d
  4257aa:	mov    esp,0x73047a42
  4257af:	add    DWORD PTR [ecx+0x23],esp
  4257b2:	add    BYTE PTR [edi+0x60],dl
  4257b5:	xchg   esp,eax
  4257b6:	std    
  4257b7:	sti    
  4257b8:	jne    0x4257e5
  4257ba:	data16 mov ds:0xba582ad6,al
  4257c0:	push   ss
  4257c1:	cwde   
  4257c2:	mov    edi,0x1558b8a2
  4257c7:	bound  ebp,QWORD PTR [edx-0x52]
  4257ca:	jno    0x42579e
  4257cc:	fwait
  4257cd:	xor    al,0x29
  4257cf:	aad    0x97
  4257d1:	mov    bh,0xaf
  4257d3:	and    al,0xd3
  4257d5:	push   ebx
  4257d6:	adc    dl,dl
  4257d8:	cs stos DWORD PTR es:[edi],eax
  4257da:	inc    eax
  4257db:	std    
  4257dc:	test   BYTE PTR [esi],bl
  4257de:	(bad)  [edx-0x51]
  4257e1:	or     eax,0x5f667c70
  4257e6:	push   cs
  4257e7:	xchg   BYTE PTR [esi],cl
  4257e9:	sub    ebp,DWORD PTR [edi]
  4257eb:	pop    ecx
  4257ec:	jge    0x425861
  4257ee:	ins    DWORD PTR es:[edi],dx
  4257ef:	inc    ebp
  4257f0:	arpl   WORD PTR [ecx+edx*2+0x1872fd66],cx
  4257f7:	loop   0x4257bd
  4257f9:	cmp    eax,0x74cf9168
  4257fe:	mov    edi,0x1f893740
  425803:	mov    es,WORD PTR gs:[ebp-0x4d03b471]
  42580a:	jb     0x425796
  42580c:	mov    ch,0x4b
  42580e:	stos   BYTE PTR es:[edi],al
  42580f:	retf   
  425810:	(bad)  
  425811:	je     0x425879
  425813:	rcl    BYTE PTR [ebp+0x1d],1
  425816:	call   0xb5a0a59a
  42581b:	lods   eax,DWORD PTR ds:[esi]
  42581c:	lds    ebx,FWORD PTR [ebp+0x320dc8f4]
  425822:	adc    al,0xac
  425824:	pop    edi
  425825:	dec    edx
  425826:	and    al,0xfc
  425828:	sbb    al,0x1
  42582a:	xor    edi,DWORD PTR [edi]
  42582c:	leave  
  42582d:	cwde   
  42582e:	push   cs
  42582f:	jmp    0x4258aa
  425831:	pop    ds
  425832:	inc    esi
  425833:	pop    ds
  425834:	cmp    eax,0x4cd43d02
  425839:	fcomp  QWORD PTR [ecx]
  42583b:	inc    ebp
  42583c:	mov    ebx,0xf1c62174
  425841:	and    dh,BYTE PTR [ecx]
  425843:	mov    ebx,0x446fadbc
  425848:	xchg   ebx,eax
  425849:	outs   dx,BYTE PTR ds:[esi]
  42584a:	push   0xc1b8a87e
  42584f:	mov    dl,dh
  425851:	xchg   edi,eax
  425852:	jp     0x4258cc
  425854:	je     0x42583c
  425856:	daa    
  425857:	inc    esi
  425858:	pop    es
  425859:	adc    al,0xf3
  42585b:	jp     0x425812
  42585d:	call   0x425862
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x56a2c908]
  42586f:	test   BYTE PTR [edi+ebx*2],0x15
  425873:	rol    DWORD PTR [ecx],1
  425875:	add    ah,dh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [edi+ebx*8-0x55c5104a],dl
  425880:	jmp    0xa279:0x96bcb1e5
  425887:	adc    al,0x8
  425889:	icebp  
  42588a:	push   ebp
  42588b:	and    bh,BYTE PTR [ebp+0x4eefa2a3]
  425891:	stc    
  425892:	test   eax,0x977651b9
  425897:	push   edi
  425898:	js     0x42586d
  42589a:	mov    dh,0x33
  42589c:	popf   
  42589d:	mov    dh,0xcf
  42589f:	mov    ?,ebp
  4258a1:	inc    ebx
  4258a2:	fist   DWORD PTR [eax+0x1fbc1b54]
  4258a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a9:	test   eax,0x24587cdd
  4258ae:	and    eax,edi
  4258b0:	xor    DWORD PTR [ebx-0x81d8d7c],esi
  4258b6:	pop    esi
  4258b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258b8:	jae    0x425849
  4258ba:	xchg   DWORD PTR [ecx-0x6aff04dd],eax
  4258c0:	call   0x8c9a:0x6038ae3a
  4258c7:	les    esi,FWORD PTR [ebx-0x6834456d]
  4258cd:	xchg   ebp,eax
  4258ce:	hlt    
  4258cf:	pop    eax
  4258d0:	mov    ebp,0x6838e7db
  4258d5:	retf   
  4258d6:	leave  
  4258d7:	mov    eax,ds:0xac6bc075
  4258dc:	xor    al,bh
  4258de:	push   edx
  4258df:	adc    eax,0xb8f8b960
  4258e4:	ins    DWORD PTR es:[edi],dx
  4258e5:	lahf   
  4258e6:	and    eax,0x8dab986b
  4258eb:	dec    esi
  4258ec:	adc    eax,0xe055f432
  4258f1:	fldcw  WORD PTR [eax]
  4258f3:	outs   dx,BYTE PTR ds:[esi]
  4258f4:	push   0xd6428204
  4258f9:	push   ecx
  4258fa:	jl     0x42595f
  4258fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258fd:	test   BYTE PTR [edx+0x4cfab4d0],0x30
  425904:	iret   
  425905:	into   
  425906:	mov    al,0xc8
  425908:	dec    ebp
  425909:	not    BYTE PTR [eax-0xd]
  42590c:	aad    0x1d
  42590e:	add    dl,dl
  425910:	jg     0x42589f
  425912:	pop    ebp
  425913:	push   esp
  425914:	jb     0x425966
  425916:	jg     0x425918
  425918:	jp     0x425926
  42591a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42591b:	xchg   ebp,eax
  42591c:	add    edi,DWORD PTR [edi-0x3f]
  42591f:	xchg   ebx,eax
  425920:	int3   
  425921:	sbb    BYTE PTR [ecx+ebx*2],ch
  425924:	stc    
  425925:	gs jge 0x4259a2
  425928:	shr    DWORD PTR [ecx+0x5d055f22],0x4
  42592f:	cmp    bl,BYTE PTR [ebx]
  425931:	mov    bl,0xbe
  425933:	cmp    DWORD PTR [edi],0x6218bf33
  425939:	iret   
  42593a:	push   es
  42593b:	neg    BYTE PTR [ecx]
  42593d:	push   esi
  42593e:	cmp    al,0x50
  425940:	adc    al,0x29
  425942:	push   ebx
  425943:	mov    ebp,0x81a85271
  425948:	cmp    bh,BYTE PTR [ecx]
  42594a:	jl     0x425982
  42594c:	cld    
  42594d:	scas   al,BYTE PTR es:[edi]
  42594e:	jp     0x425928
  425950:	imul   eax,DWORD PTR [edx],0x77
  425953:	mov    ebp,0x6f0a621e
  425958:	pop    esp
  425959:	retf   
  42595a:	pop    edx
  42595b:	jnp    0x4258f8
  42595d:	fidivr WORD PTR [ebp+0x3e7a57f6]
  425963:	xor    DWORD PTR [esi-0x42],edx
  425966:	adc    al,0x34
  425968:	dec    esp
  425969:	mov    ch,0xbe
  42596b:	call   FWORD PTR [edi-0x62]
  42596e:	pusha  
  42596f:	leave  
  425970:	pop    ss
  425971:	outs   dx,BYTE PTR ds:[esi]
  425972:	call   0xccf8f569
  425977:	cmc    
  425978:	shr    BYTE PTR [edi+0x15],0xec
  42597c:	(bad)  
  42597d:	mov    bh,ah
  42597f:	dec    edi
  425980:	fnstcw WORD PTR [ebx+0x56]
  425983:	push   edi
  425985:	xor    ecx,ebx
  425987:	cdq    
  425988:	ret    0x8a32
  42598b:	std    
  42598c:	pop    ebx
  42598d:	and    eax,DWORD PTR [ebx+eiz*4+0x2]
  425991:	mov    DWORD PTR [ebx+0x4cbe478b],ebp
  425997:	loopne 0x425981
  425999:	das    
  42599a:	ja     0x425946
  42599c:	adc    eax,0x2a3c2e98
  4259a1:	int3   
  4259a2:	hlt    
  4259a3:	and    DWORD PTR [ecx],0xb
  4259a6:	test   eax,0xf5e889f
  4259ab:	(bad)  
  4259ad:	fdivr  QWORD PTR [ebp+0x1b]
  4259b0:	and    eax,ebp
  4259b2:	call   0x7333bc2
  4259b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259b8:	inc    edi
  4259b9:	les    edi,FWORD PTR [eax-0x46]
  4259bc:	and    eax,0x5aea8c1c
  4259c1:	retf   
  4259c2:	cmp    BYTE PTR [esp+ecx*4],dh
  4259c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c6:	mov    edx,0x35161f35
  4259cb:	jb     0x425987
  4259cd:	and    ah,BYTE PTR [ebp+0x56879a5b]
  4259d3:	das    
  4259d4:	pusha  
  4259d5:	xor    BYTE PTR [edx],0xe1
  4259d8:	jbe    0x4259b2
  4259da:	mov    esp,0xb5fbbd6b
  4259df:	popa   
  4259e0:	ret    0x5a6c
  4259e3:	int    0x57
  4259e5:	dec    DWORD PTR [eax+0x38]
  4259e8:	pop    esi
  4259e9:	pushf  
  4259ea:	push   eax
  4259eb:	mov    eax,ds:0x40bcf065
  4259f0:	jl     0x4259ce
  4259f2:	test   BYTE PTR [edx-0x57],ah
  4259f5:	sbb    al,BYTE PTR [eax+0x62]
  4259f8:	in     al,0xaf
  4259fa:	dec    ecx
  4259fb:	and    BYTE PTR [ebp-0x7c],ah
  4259fe:	leave  
  4259ff:	adc    DWORD PTR [edx],ecx
  425a01:	or     ah,BYTE PTR [ebp-0x5c]
  425a04:	push   edi
  425a05:	cmc    
  425a06:	xchg   dh,dl
  425a08:	dec    ebp
  425a09:	mov    bl,0x15
  425a0b:	xor    DWORD PTR [ecx+eax*1],esp
  425a0e:	cmp    al,0x13
  425a10:	cmp    eax,esi
  425a12:	popf   
  425a13:	int    0x6c
  425a15:	leave  
  425a16:	mov    ch,0xd6
  425a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a19:	add    ebp,eax
  425a1b:	inc    edx
  425a1c:	xor    eax,DWORD PTR [ecx]
  425a1e:	out    0xd0,al
  425a20:	adc    eax,0x9bf16997
  425a25:	imul   BYTE PTR [esi+0xc]
  425a28:	popf   
  425a29:	xor    eax,0xfd42db18
  425a2e:	mov    ebx,0xb519e4b9
  425a33:	ins    BYTE PTR es:[edi],dx
  425a34:	loope  0x425a4b
  425a36:	fsubr  QWORD PTR [eax+0x55]
  425a39:	out    dx,eax
  425a3a:	repnz aad 0xe8
  425a3d:	(bad)  
  425a3e:	arpl   WORD PTR [ecx-0x5b],bp
  425a41:	push   esp
  425a42:	pop    esi
  425a43:	fistp  WORD PTR [eax]
  425a45:	es pop edi
  425a47:	jge    0x425a36
  425a49:	fdiv   QWORD PTR [eax]
  425a4b:	sub    DWORD PTR [ebp+0x45dab495],ecx
  425a51:	gs loopne 0x425a7d
  425a54:	mov    ebp,DWORD PTR [edi+ecx*2-0x7d]
  425a58:	mov    ds:0x8b14d169,al
  425a5d:	outs   dx,BYTE PTR ds:[esi]
  425a5e:	bound  ecx,QWORD PTR [ebx+ecx*2+0x3f]
  425a62:	and    eax,0x7be4f7be
  425a67:	pop    edi
  425a68:	jns    0x425a36
  425a6a:	das    
  425a6b:	cdq    
  425a6c:	call   0x1558:0x735db3b2
  425a73:	xchg   ebp,eax
  425a74:	sar    dh,0x23
  425a77:	call   0xace9:0xff46a96a
  425a7e:	fbld   TBYTE PTR [esi-0x64]
  425a81:	fmul   QWORD PTR [ebp+eiz*4+0x67]
  425a85:	ja     0x425a59
  425a87:	in     eax,dx
  425a88:	data16 clc 
  425a8a:	mov    cl,0xa8
  425a8c:	jl     0x425b08
  425a8e:	(bad)  
  425a8f:	icebp  
  425a90:	or     cl,BYTE PTR [edx-0x27]
  425a93:	mov    al,0xaf
  425a95:	fcmovbe st,st(0)
  425a97:	das    
  425a98:	mov    ds,WORD PTR [ebx]
  425a9a:	loopne 0x425aef
  425a9c:	sahf   
  425a9d:	dec    edx
  425a9e:	test   BYTE PTR [ecx-0x4ac72fe3],bh
  425aa4:	lahf   
  425aa5:	lock sub ch,al
  425aa8:	mov    ah,0x3
  425aaa:	(bad)  
  425aab:	jne    0x425ad3
  425aad:	and    DWORD PTR [ebp+0xf],ebp
  425ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ab2:	dec    esi
  425ab3:	push   edi
  425ab4:	mov    ebp,0x7f76d32b
  425ab9:	mov    al,ds:0x58940f51
  425abe:	(bad)  
  425abf:	dec    edi
  425ac0:	mov    al,ds:0xf37ac371
  425ac5:	sub    ebx,DWORD PTR [ebx+eax*1]
  425ac8:	dec    ecx
  425ac9:	adc    BYTE PTR [ecx],al
  425acb:	imul   ebx,DWORD PTR [edx],0x60
  425ace:	enter  0x82d9,0xc3
  425ad2:	sub    dl,bl
  425ad4:	js     0x425a8b
  425ad6:	fist   WORD PTR [esi+0x35]
  425ad9:	add    DWORD PTR ds:0x929e2cfe,esi
  425adf:	add    DWORD PTR [edi],ebx
  425ae1:	push   cs
  425ae2:	mov    edi,0x7489e7ee
  425ae7:	mov    eax,0xa648ea66
  425aec:	jmp    0x53214237
  425af1:	and    eax,0x6088f531
  425af6:	rcr    ebp,0x54
  425af9:	ret    
  425afa:	inc    eax
  425afb:	inc    BYTE PTR [esi+edx*4-0x324cbbd7]
  425b02:	aam    0xf0
  425b04:	cmc    
  425b05:	pop    ds
  425b06:	enter  0xf66d,0x6b
  425b0a:	out    dx,al
  425b0b:	dec    edi
  425b0c:	jmp    0x425ad4
  425b0e:	pop    edi
  425b0f:	jb     0x425b24
  425b11:	fidivr WORD PTR [ebp+0x29c388df]
  425b17:	imul   esi,DWORD PTR [eax-0x30d504d8],0x48
  425b1e:	xor    BYTE PTR ds:0x1edc3ba5,0x3
  425b25:	cmc    
  425b26:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b28:	adc    eax,0xd857a755
  425b2d:	mov    ebx,0x7f1adb70
  425b32:	push   0xffffffa3
  425b34:	shl    DWORD PTR [eax],1
  425b36:	mov    dh,0x80
  425b38:	fidiv  DWORD PTR [edi+0x7]
  425b3b:	mov    WORD PTR [edi-0x279289ec],gs
  425b41:	dec    esp
  425b42:	ja     0x425b51
  425b44:	ins    BYTE PTR es:[edi],dx
  425b45:	inc    edx
  425b46:	retf   
  425b47:	cmp    DWORD PTR [ebx],ecx
  425b49:	add    bl,BYTE PTR [ecx-0x42c31c7e]
  425b4f:	(bad)  
  425b50:	adc    edi,eax
  425b52:	mov    bh,0x19
  425b54:	mov    ebx,0xc32ed6ed
  425b59:	lods   al,BYTE PTR ds:[esi]
  425b5a:	dec    edx
  425b5b:	(bad)  
  425b5c:	cmp    esi,ebp
  425b5e:	paddusw mm5,QWORD PTR ds:0x6eac4f03
  425b65:	pop    ss
  425b66:	imul   DWORD PTR [ebx+0x33]
  425b69:	push   ecx
  425b6a:	gs sub eax,0xbbf70ae5
  425b70:	push   eax
  425b71:	add    DWORD PTR [eax+0x6f741e5],0x53
  425b78:	sar    DWORD PTR [edx+0x72],cl
  425b7b:	dec    ebp
  425b7c:	int    0x73
  425b7e:	push   edi
  425b7f:	mov    esi,gs
  425b81:	mov    bh,0x8d
  425b83:	xor    bl,BYTE PTR [edi-0x74a5b64]
  425b89:	loop   0x425b14
  425b8b:	inc    ebx
  425b8c:	push   es
  425b8d:	les    edi,FWORD PTR [eax]
  425b8f:	pusha  
  425b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b91:	or     al,0x38
  425b93:	inc    edx
  425b94:	rol    DWORD PTR [ebx+0xfbd5772],0x5
  425b9b:	xor    eax,0xdf2d585d
  425ba0:	mov    ah,dl
  425ba2:	mov    edi,0xbefb1114
  425ba7:	xor    esp,DWORD PTR [ebp+0xc3c52c8]
  425bad:	cs imul edx,esp,0x37019eef
  425bb4:	dec    esp
  425bb5:	leave  
  425bb6:	pushf  
  425bb7:	sub    DWORD PTR [edx-0x35053ec9],esi
  425bbd:	pop    esp
  425bbe:	push   ebx
  425bbf:	int3   
  425bc0:	cdq    
  425bc1:	xor    DWORD PTR [ebp+0x186a760a],0x627c457b
  425bcb:	pop    ebx
  425bcc:	clc    
  425bcd:	ret    0x7895
  425bd0:	rol    dh,1
  425bd2:	shl    BYTE PTR [edx],1
  425bd4:	data16 (bad) 
  425bd6:	pop    edi
  425bd7:	lea    ebp,[edi]
  425bd9:	adc    cl,BYTE PTR ds:[edx*8-0x6465f04]
  425be1:	retf   0x822
  425be4:	ds (bad) 
  425be6:	cmp    al,0xc5
  425be8:	sub    bh,BYTE PTR [ecx+0x5b75c01]
  425bee:	in     eax,0xbc
  425bf0:	or     BYTE PTR [esi+0x7b3e2471],al
  425bf6:	adc    ebx,DWORD PTR [edx]
  425bf8:	xchg   BYTE PTR [ebp-0xc8140c3],al
  425bfe:	cmp    al,0x40
  425c00:	inc    edi
  425c01:	cmc    
  425c02:	hlt    
  425c03:	inc    eax
  425c04:	sar    DWORD PTR [eax+edi*2+0x41d947be],1
  425c0b:	ret    
  425c0c:	jo     0x425c3f
  425c0e:	push   esi
  425c0f:	sub    DWORD PTR [edi+0x4bcb0e0f],0x899f95a1
  425c19:	push   0x3cb4c730
  425c1e:	xchg   esi,eax
  425c1f:	mov    bh,0xe1
  425c21:	and    bl,al
  425c23:	cmc    
  425c24:	fwait
  425c25:	cmp    al,0x2d
  425c27:	sub    ebp,esp
  425c29:	add    eax,0xb0544d1d
  425c2e:	and    esp,DWORD PTR [ecx+0x439ef5c0]
  425c34:	outs   dx,BYTE PTR ds:[esi]
  425c35:	retf   
  425c36:	mov    edi,ebp
  425c38:	cmp    al,0xeb
  425c3a:	push   cs
  425c3b:	fist   WORD PTR [edx]
  425c3d:	cdq    
  425c3e:	xchg   BYTE PTR [ecx],dl
  425c40:	push   esp
  425c41:	es jp  0x425c4e
  425c44:	fnstsw WORD PTR [ecx]
  425c46:	in     eax,0xfd
  425c48:	push   0xffffffe0
  425c4a:	stc    
  425c4b:	dec    ecx
  425c4c:	sbb    dh,dl
  425c4e:	addr16 inc ebp
  425c50:	mov    ch,0x9f
  425c52:	mov    ?,esi
  425c54:	stc    
  425c55:	jnp    0x425c76
  425c57:	push   cs
  425c58:	sub    DWORD PTR [ebx],ecx
  425c5a:	fidiv  WORD PTR [ecx+0x6f]
  425c5d:	dec    ebx
  425c5e:	mov    bl,0x9c
  425c60:	or     al,0xf3
  425c62:	mov    bl,0x28
  425c64:	test   BYTE PTR [ecx],al
  425c66:	and    esp,DWORD PTR [edi+0x7059b93f]
  425c6c:	aas    
  425c6d:	mov    bl,0xcb
  425c6f:	repnz call 0x6132:0x46858e34
  425c77:	mov    eax,0x675102f1
  425c7c:	(bad)  
  425c7d:	inc    DWORD PTR [ecx+0x1e]
  425c80:	mov    es,WORD PTR [esi-0x6b431875]
  425c86:	rcr    BYTE PTR [edx+0x73],0xb1
  425c8a:	mov    ch,0x24
  425c8c:	xlat   BYTE PTR ds:[ebx]
  425c8d:	add    al,0x3f
  425c8f:	in     eax,dx
  425c90:	push   ds
  425c91:	mov    ecx,0x5ac47bcc
  425c96:	das    
  425c97:	inc    eax
  425c98:	inc    edi
  425c99:	pop    ecx
  425c9a:	xlat   BYTE PTR ds:[ebx]
  425c9b:	arpl   WORD PTR [edi-0x21],bx
  425c9e:	and    DWORD PTR [eax+0x45],esi
  425ca1:	pop    ecx
  425ca2:	sub    edi,eax
  425ca4:	inc    ecx
  425ca5:	or     BYTE PTR [esi-0x7],ch
  425ca8:	adc    edx,edi
  425caa:	ret    
  425cab:	fdiv   st,st(6)
  425cad:	and    bh,bh
  425caf:	sbb    BYTE PTR [ebx+0x66],ah
  425cb2:	push   eax
  425cb3:	test   eax,0x866da78e
  425cb8:	push   cs
  425cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cba:	cld    
  425cbb:	lods   eax,DWORD PTR ds:[esi]
  425cbc:	push   ds
  425cbd:	jmp    0x425c88
  425cbf:	cmp    al,0xc3
  425cc1:	in     al,0x12
  425cc3:	cmp    dl,BYTE PTR [esi]
  425cc5:	add    eax,0x161b92df
  425cca:	push   edi
  425ccb:	shl    ch,cl
  425ccd:	hlt    
  425cce:	push   es
  425ccf:	cdq    
  425cd0:	push   ebp
  425cd1:	clc    
  425cd2:	jnp    0x425c72
  425cd4:	pop    esp
  425cd5:	loopne 0x425d23
  425cd7:	outs   dx,DWORD PTR ds:[esi]
  425cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cd9:	pop    esp
  425cda:	call   0x2422ef51
  425cdf:	fnstcw WORD PTR [edx+0x2382df0f]
  425ce5:	sub    eax,ecx
  425ce7:	jb     0x425c6c
  425ce9:	xor    DWORD PTR [eax-0x20],0xffffff91
  425ced:	jmp    0xf339197b
  425cf2:	in     eax,dx
  425cf3:	dec    edi
  425cf4:	sbb    al,0xe4
  425cf6:	jne    0x425d3d
  425cf8:	hlt    
  425cf9:	xlat   BYTE PTR ds:[ebx]
  425cfa:	cmp    ebp,DWORD PTR [eax+0x74]
  425cfd:	sbb    eax,0x9bcbccd
  425d02:	jg     0x425d6c
  425d04:	sbb    cl,cl
  425d06:	push   edx
  425d07:	sbb    esi,DWORD PTR [ecx]
  425d09:	add    edi,edx
  425d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d0c:	ja     0x425d70
  425d0e:	xor    eax,0xb3568ee0
  425d13:	inc    esi
  425d14:	ins    DWORD PTR es:[edi],dx
  425d15:	jg     0x425d13
  425d17:	js     0x425d2a
  425d19:	lock out 0xbf,eax
  425d1c:	jl     0x425ca9
  425d1e:	pop    es
  425d1f:	mov    eax,0x5ac2cb50
  425d24:	inc    edx
  425d25:	popa   
  425d26:	arpl   WORD PTR [ebx+0x2e],di
  425d29:	pop    ebp
  425d2a:	and    dl,dh
  425d2c:	les    edx,FWORD PTR [edi]
  425d2e:	mov    bh,0x6f
  425d30:	(bad)  
  425d31:	ffreep st(5)
  425d33:	adc    eax,0xe36e4471
  425d38:	cmp    al,0xa3
  425d3a:	loopne 0x425d67
  425d3c:	ret    0x4dd7
  425d3f:	call   0x1ed:0x3eb8240
  425d46:	add    DWORD PTR [ebx],ecx
  425d48:	cwde   
  425d49:	xor    ebx,DWORD PTR [ecx+0x7dea2778]
  425d4f:	outs   dx,DWORD PTR ds:[esi]
  425d50:	cli    
  425d51:	outs   dx,DWORD PTR ds:[esi]
  425d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d53:	push   esp
  425d54:	pop    ebp
  425d55:	sub    BYTE PTR [ebx+0x1359c640],bh
  425d5b:	adc    ebp,DWORD PTR [ecx+0x24b9477c]
  425d61:	push   edi
  425d62:	js     0x425d83
  425d64:	sub    al,0xe1
  425d66:	into   
  425d67:	(bad)  
  425d68:	retf   0xad91
  425d6b:	inc    eax
  425d6c:	pop    esp
  425d6d:	test   DWORD PTR [eax],eax
  425d6f:	add    BYTE PTR [eax],al
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ebp+eiz*2-0x1b]
  425d80:	les    edx,FWORD PTR [esi+0x1d609]
  425d86:	hlt    
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [edi-0x226e1a20],bh
  425d8f:	pop    edx
  425d90:	aas    
  425d91:	dec    eax
  425d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d93:	imul   ebp,DWORD PTR [esi-0x1e86feeb],0xffffffaa
  425d9a:	sbb    eax,0x5226ea51
  425d9f:	push   esp
  425da0:	adc    eax,0xba25e4f3
  425da5:	or     al,0x6
  425da7:	mov    dl,0xc9
  425da9:	and    BYTE PTR ds:0x376230ad,ah
  425daf:	call   0xa08bfe88
  425db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425db6:	push   eax
  425db7:	jg     0x425df8
  425db9:	push   ebp
  425dba:	jmp    0x4e4e:0x40c54827
  425dc1:	fwait
  425dc2:	(bad)  
  425dc3:	into   
  425dc4:	push   esp
  425dc5:	scas   al,BYTE PTR es:[edi]
  425dc6:	es out 0x73,al
  425dc9:	out    dx,al
  425dca:	sar    bl,cl
  425dcc:	pop    ecx
  425dcd:	or     bh,BYTE PTR [esi+0x63778173]
  425dd3:	stos   BYTE PTR es:[edi],al
  425dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dd5:	sub    dh,BYTE PTR [edi-0x520e0193]
  425ddb:	push   cs
  425ddc:	cmc    
  425ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dde:	aas    
  425ddf:	fld    QWORD PTR [eax-0x1f]
  425de2:	out    0x23,eax
  425de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425de5:	not    BYTE PTR [ebx+0x5a]
  425de8:	adc    ecx,DWORD PTR [esi]
  425dea:	add    cl,bh
  425dec:	fwait
  425ded:	aad    0xe7
  425def:	and    dh,BYTE PTR [eax]
  425df1:	in     al,0xe8
  425df3:	xor    edi,eax
  425df5:	mov    esi,0x5bea0b67
  425dfa:	sub    al,0x1f
  425dfc:	ds push esi
  425dfe:	out    0x83,eax
  425e00:	or     cl,ah
  425e02:	mov    eax,ds:0x2b9ada9
  425e07:	aas    
  425e08:	gs test BYTE PTR fs:[ebp-0x11],ah
  425e0d:	test   DWORD PTR [ebp-0x275a5d4f],esi
  425e13:	stos   DWORD PTR es:[edi],eax
  425e14:	and    eax,DWORD PTR [eax]
  425e16:	gs dec ebx
  425e18:	sti    
  425e19:	push   ss
  425e1a:	lea    edi,[ecx-0x3]
  425e1d:	xor    ebx,edi
  425e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e20:	bndstx [edx+0x7],(bad)
  425e24:	mov    edi,DWORD PTR [eax]
  425e26:	test   al,0x84
  425e28:	repz fild QWORD PTR [edi]
  425e2b:	aad    0xf8
  425e2d:	xor    eax,0x399eae8e
  425e32:	lock enter 0xbcc6,0x80
  425e37:	push   esi
  425e38:	mov    eax,ds:0x2825fb4b
  425e3d:	loopne 0x425dfb
  425e3f:	jb     0x425e93
  425e41:	ret    
  425e42:	clc    
  425e43:	sub    edi,0x9091a26f
  425e49:	(bad)  
  425e4a:	dec    esp
  425e4b:	or     eax,0x56c714ee
  425e50:	xor    al,0xfc
  425e52:	jne    0x425dd4
  425e54:	inc    esi
  425e55:	ins    BYTE PTR es:[edi],dx
  425e56:	xchg   ebx,eax
  425e57:	jl     0x425ecd
  425e59:	fsub   QWORD PTR [ecx-0x5d]
  425e5c:	adc    al,0xe1
  425e5e:	sbb    BYTE PTR [edi+eiz*4],al
  425e61:	aam    0xbd
  425e63:	cmc    
  425e64:	jecxz  0x425e36
  425e66:	popa   
  425e67:	mov    edx,0x40dd74fd
  425e6c:	out    dx,al
  425e6d:	stos   DWORD PTR es:[edi],eax
  425e6e:	iret   
  425e6f:	add    eax,esi
  425e71:	leave  
  425e72:	fdivr  st,st(2)
  425e74:	pushf  
  425e75:	sbb    eax,0x38a5ee1b
  425e7a:	push   esi
  425e7b:	jbe    0x425e48
  425e7d:	xor    BYTE PTR [edx],ch
  425e7f:	xor    dh,dh
  425e81:	ja     0x425ea8
  425e83:	popa   
  425e84:	test   BYTE PTR [edx-0xb],bh
  425e87:	dec    esp
  425e88:	jg     0x425e87
  425e8a:	and    BYTE PTR [esi+0x4c],ah
  425e8d:	(bad)  
  425e8e:	fnsave [eax]
  425e90:	fwait
  425e91:	lea    edi,[edi+0x6e]
  425e94:	dec    esp
  425e95:	(bad)  
  425e96:	(bad)  
  425e97:	ss inc ecx
  425e99:	adc    al,0xd0
  425e9b:	mov    eax,0xf2da1fd6
  425ea0:	out    dx,eax
  425ea1:	shl    BYTE PTR [eax],cl
  425ea3:	ret    
  425ea4:	cdq    
  425ea5:	jge    0x425e4e
  425ea7:	or     eax,0xdea2d191
  425eac:	mov    eax,ds:0xf3b41a8
  425eb1:	adc    al,BYTE PTR ds:0xd23d2cec
  425eb7:	xchg   DWORD PTR [esp+edi*4+0x7e],esi
  425ebb:	mov    esp,0x66c68bd7
  425ec0:	sub    BYTE PTR [esi+0x4411353],dh
  425ec6:	(bad)  
  425ec7:	mov    ds:0xc7d946e1,eax
  425ecc:	or     eax,0x2fa0195
  425ed1:	add    al,0x39
  425ed3:	xor    al,0x37
  425ed5:	dec    edx
  425ed6:	(bad)  
  425ed7:	xor    DWORD PTR [ebp+0x6],ecx
  425eda:	push   edx
  425edb:	rcl    dl,0xd4
  425ede:	xor    BYTE PTR [ecx-0x68661fc3],dl
  425ee4:	aam    0x77
  425ee6:	or     ebx,ebp
  425ee8:	mov    al,ds:0xfa715bc0
  425eed:	or     al,0xb0
  425eef:	das    
  425ef0:	mov    cl,0xdd
  425ef2:	jl     0x425eb8
  425ef4:	add    al,0x61
  425ef6:	aaa    
  425ef7:	mov    cl,0x10
  425ef9:	dec    esi
  425efa:	dec    DWORD PTR [ebp-0x120a741f]
  425f00:	add    eax,0x50008a89
  425f05:	xchg   edi,eax
  425f06:	test   al,0x19
  425f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f09:	in     al,0x9
  425f0b:	dec    ecx
  425f0c:	imul   esp,edx,0xffffff98
  425f0f:	in     al,dx
  425f10:	jnp    0x425f4f
  425f12:	or     al,cl
  425f14:	add    ebp,esp
  425f16:	clc    
  425f17:	div    BYTE PTR [edx]
  425f19:	mov    esi,0xe0579037
  425f1e:	mov    cl,0x53
  425f20:	push   DWORD PTR [edx-0x22]
  425f23:	push   esi
  425f24:	call   0x8269:0x75bf7f2c
  425f2b:	lock xchg ebx,eax
  425f2d:	dec    ebp
  425f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f2f:	push   es
  425f30:	pop    ecx
  425f31:	mov    WORD PTR [edx-0x2d],ds
  425f34:	sbb    ebx,DWORD PTR [eax]
  425f36:	push   0x9d760358
  425f3b:	push   edi
  425f3c:	mov    eax,ds:0x3b4605fb
  425f41:	ss js  0x425fb3
  425f44:	sti    
  425f45:	imul   edx,DWORD PTR [eax-0x44],0xd524f7fc
  425f4c:	mov    ch,0x55
  425f4e:	cli    
  425f4f:	mov    esi,0xd2aae9f9
  425f54:	lock push cs
  425f56:	lods   al,BYTE PTR ds:[esi]
  425f57:	add    DWORD PTR [edi],eax
  425f59:	dec    ebp
  425f5a:	stos   BYTE PTR es:[edi],al
  425f5b:	(bad)
  425f5e:	mov    edx,0x9da18cef
  425f63:	sbb    al,0x1a
  425f65:	hlt    
  425f66:	shl    BYTE PTR [eax-0x38bcb21b],cl
  425f6c:	fisttp QWORD PTR [esi*8+0x404f958]
  425f73:	and    ecx,esp
  425f75:	mov    edx,0x89287fc9
  425f7a:	gs call 0x1366:0x974d4b8a
  425f82:	arpl   WORD PTR [ebp-0x3581d095],bx
  425f88:	pop    edx
  425f89:	pop    ds
  425f8a:	sbb    DWORD PTR ds:0xf60d3b2b,ebx
  425f90:	mov    bl,0xa4
  425f92:	idiv   DWORD PTR [esp+eax*4+0x27]
  425f96:	push   esp
  425f97:	scas   al,BYTE PTR es:[edi]
  425f98:	stos   DWORD PTR es:[edi],eax
  425f99:	cli    
  425f9a:	sub    al,0x3
  425f9c:	aad    0xec
  425f9e:	inc    ecx
  425f9f:	pop    ecx
  425fa0:	mov    ds:0xf689f2a8,al
  425fa5:	cmp    eax,0xa61072c3
  425faa:	xchg   ebp,eax
  425fab:	jmp    0x66d6:0x6b54a92b
  425fb2:	ret    0x8485
  425fb5:	test   eax,0x331be19a
  425fba:	jno    0x425fa1
  425fbc:	lea    ebx,[ebx]
  425fbe:	adc    al,0x41
  425fc0:	pop    eax
  425fc1:	and    DWORD PTR [eax+0x17],esp
  425fc4:	popa   
  425fc5:	sub    eax,0xa64399c2
  425fca:	pushf  
  425fcb:	mov    tr5,eax
  425fce:	in     al,dx
  425fcf:	sbb    eax,0x9f13c947
  425fd4:	daa    
  425fd5:	push   cs
  425fd6:	fs retf 0x947b
  425fda:	pop    edx
  425fdb:	shr    DWORD PTR [edx+0x79],0x3e
  425fdf:	in     eax,dx
  425fe0:	mov    ds:0xfc6df98e,eax
  425fe5:	enter  0xfe0d,0xe4
  425fe9:	mov    DWORD PTR [edx],ebx
  425feb:	cli    
  425fec:	movd   mm2,DWORD PTR [esi]
  425fef:	sbb    al,0x1a
  425ff1:	jb     0x425f7c
  425ff3:	jnp    0x425fe1
  425ff5:	push   esi
  425ff6:	out    0x57,al
  425ff8:	inc    esi
  425ff9:	gs jl  0x425fc2
  425ffc:	pop    ebp
  425ffd:	in     al,0x60
  425fff:	in     al,dx
  426000:	add    edi,DWORD PTR [eax+0x3]
  426003:	xchg   BYTE PTR [eax-0x7d5970a4],al
  426009:	mov    WORD PTR [esi],cs
  42600b:	shr    edx,1
  42600d:	mov    ds,ebp
  42600f:	or     esp,DWORD PTR [ecx]
  426011:	xchg   edx,eax
  426012:	sbb    al,0xe9
  426014:	pop    es
  426015:	in     al,dx
  426016:	fild   WORD PTR [edx-0x2b]
  426019:	sub    al,0xad
  42601b:	inc    ebp
  42601c:	int3   
  42601d:	lods   eax,DWORD PTR ds:[esi]
  42601e:	push   ebp
  42601f:	int    0x94
  426021:	mov    bl,0x98
  426023:	call   0x697411ba
  426028:	(bad)  
  426029:	dec    eax
  42602a:	outs   dx,BYTE PTR ds:[esi]
  42602b:	inc    eax
  42602c:	pop    edi
  42602d:	push   ss
  42602e:	call   0xb36a:0xef1dc001
  426035:	fldz   
  426037:	sbb    DWORD PTR [esp+esi*4],edx
  42603a:	idiv   esp
  42603c:	mov    ebp,0x46fa7f6c
  426041:	stc    
  426042:	ss pop ss
  426044:	xchg   esi,eax
  426045:	jae    0x426009
  426047:	adc    esp,DWORD PTR [ebx+0x1a]
  42604a:	fstp   DWORD PTR [edx+0x73f2047c]
  426050:	arpl   WORD PTR [ecx+0x31],bx
  426053:	fwait
  426054:	mov    ss,WORD PTR [edx]
  426056:	cmp    DWORD PTR [edi],0x70
  426059:	ret    
  42605a:	popa   
  42605b:	xchg   ecx,eax
  42605c:	hlt    
  42605d:	xchg   esp,eax
  42605e:	xchg   edi,eax
  42605f:	inc    eax
  426060:	or     BYTE PTR [ebx-0x62],0x38
  426064:	and    edi,DWORD PTR [esi]
  426066:	fwait
  426067:	cmp    DWORD PTR [ecx-0x5abf7667],eax
  42606d:	mov    ebx,0x34c10a95
  426072:	sbb    eax,eax
  426074:	xchg   DWORD PTR [ecx],ebx
  426076:	cmp    dl,BYTE PTR [ecx]
  426078:	test   eax,0x540d4d95
  42607d:	xchg   esi,eax
  42607e:	outs   dx,BYTE PTR ds:[esi]
  42607f:	xchg   ebp,eax
  426080:	fadd   QWORD PTR [ebp+0x2a]
  426083:	imul   ecx,DWORD PTR [ebp+0x32],0x62e24649
  42608a:	mov    esi,0x450264e4
  42608f:	je     0x4260d5
  426091:	shr    BYTE PTR [edi+ebx*4-0x5b],0x6a
  426096:	paddusb mm4,QWORD PTR [ebx]
  426099:	inc    eax
  42609a:	cmp    eax,0x38051456
  42609f:	adc    BYTE PTR [ecx-0x59],dl
  4260a2:	popa   
  4260a3:	or     eax,0xee08fc08
  4260a8:	xchg   ebx,eax
  4260a9:	(bad)  
  4260aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260ab:	sbb    ebp,edx
  4260ad:	stos   DWORD PTR es:[edi],eax
  4260ae:	sub    BYTE PTR [edx-0x3539897a],0x34
  4260b5:	jb     0x4260ab
  4260b7:	jp     0x4260a6
  4260b9:	mov    al,0x7
  4260bb:	mov    esp,0xba4ab55c
  4260c0:	xchg   esp,eax
  4260c1:	add    ch,BYTE PTR [ecx+eiz*8-0x42a346ec]
  4260c8:	jle    0x4260aa
  4260ca:	pop    edi
  4260cb:	int3   
  4260cc:	or     bh,ah
  4260ce:	hlt    
  4260cf:	and    ebp,DWORD PTR [ecx]
  4260d1:	inc    ecx
  4260d2:	mov    esi,0x28edf239
  4260d7:	in     al,0xa3
  4260d9:	arpl   WORD PTR [ecx-0x7bcfd809],si
  4260df:	arpl   ax,cx
  4260e1:	ja     0x42606e
  4260e3:	jg     0x426125
  4260e5:	push   ebp
  4260e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e7:	cmp    BYTE PTR [eax+0x75],ch
  4260ea:	lahf   
  4260eb:	xchg   ebp,eax
  4260ec:	adc    DWORD PTR [ecx+0x3c],esp
  4260ef:	shr    DWORD PTR [edx],0x7f
  4260f2:	imul   ebx,DWORD PTR [ecx+0x57],0x16af6dc4
  4260f9:	mov    ch,0x1b
  4260fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260fc:	ins    DWORD PTR es:[edi],dx
  4260fd:	stc    
  4260fe:	bound  edi,QWORD PTR [eax+0xdac9689]
  426104:	push   esp
  426105:	fs cmp eax,0xab3948f1
  42610b:	and    BYTE PTR es:[ebx-0x41],0x7
  426110:	xchg   esi,eax
  426111:	loope  0x4260b0
  426113:	pop    esi
  426114:	mov    edi,0x99851b22
  426119:	and    BYTE PTR [esi+0x1ea98566],ah
  42611f:	adc    al,0x87
  426121:	jmp    0x6a8a:0xd168727f
  426128:	hlt    
  426129:	inc    ebx
  42612a:	xchg   al,cl
  42612c:	fs push es
  42612e:	into   
  42612f:	hlt    
  426130:	aas    
  426131:	pop    esi
  426132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426133:	rcr    ah,cl
  426135:	mov    dh,0xf9
  426137:	add    DWORD PTR [edi-0x15],ebx
  42613a:	shr    BYTE PTR [ecx+0x3f],0x98
  42613e:	dec    ebp
  42613f:	mov    eax,ds:0x9ed3e34e
  426144:	dec    edx
  426145:	xor    eax,esi
  426147:	dec    esp
  426148:	cmp    al,0x72
  42614a:	pop    eax
  42614b:	push   ecx
  42614c:	cmc    
  42614d:	and    ecx,DWORD PTR [ebx+0x5]
  426150:	rol    BYTE PTR [edx-0x65b3ccc7],cl
  426156:	mul    BYTE PTR [ecx]
  426158:	rcr    edx,cl
  42615a:	cmp    al,0xc3
  42615c:	inc    ebx
  42615d:	sub    BYTE PTR [esp+esi*2+0x51],ah
  426161:	or     ebp,eax
  426163:	jmp    0x1f43:0x65c5118b
  42616a:	sahf   
  42616b:	adc    al,0x74
  42616d:	call   0xe7948265
  426172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426173:	ret    
  426174:	sar    DWORD PTR [ebx+0x3f],cl
  426177:	push   ds
  426178:	clc    
  426179:	lods   al,BYTE PTR ds:[esi]
  42617a:	jo     0x426142
  42617c:	ds cli 
  42617e:	adc    DWORD PTR [eax+0x4cc0862b],ebp
  426184:	mov    edi,ecx
  426186:	jecxz  0x42617d
  426188:	(bad)  
  426189:	or     BYTE PTR [edi+0x2316d7b9],dl
  42618f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426190:	(bad)  ds:0x45e1c80a
  426196:	outs   dx,DWORD PTR ds:[esi]
  426197:	push   ds
  426198:	xchg   BYTE PTR [esi+ebp*4-0xc],ah
  42619c:	pop    esi
  42619d:	paddsw mm4,QWORD PTR [bx-0x2f17]
  4261a3:	adc    DWORD PTR [esi+0x7e],0xb3545a67
  4261aa:	push   ebx
  4261ab:	push   esi
  4261ac:	outs   dx,DWORD PTR ds:[esi]
  4261ad:	pop    esi
  4261ae:	add    DWORD PTR [edi+edi*8+0x32307fe4],edx
  4261b5:	imul   ecx,DWORD PTR [eax+0x7ff24898],0x141b75fb
  4261bf:	xor    BYTE PTR [ecx-0x34],0x4d
  4261c3:	(bad)  
  4261c4:	xor    DWORD PTR [eax],ebx
  4261c6:	ins    BYTE PTR es:[edi],dx
  4261c7:	in     al,0x9
  4261c9:	cwde   
  4261ca:	outs   dx,BYTE PTR ds:[esi]
  4261cb:	jl     0x4261df
  4261cd:	mov    ebp,0x29bac4f
  4261d2:	push   0xffffffb2
  4261d4:	loopne 0x42615e
  4261d6:	inc    esi
  4261d7:	pop    ecx
  4261d8:	jmp    0x4261f1
  4261da:	pop    es
  4261db:	mov    ds:0xda171404,al
  4261e0:	jno    0x4261a4
  4261e2:	stc    
  4261e3:	cmp    eax,0x367ab476
  4261e8:	xchg   esi,eax
  4261e9:	mov    ecx,0x36647b30
  4261ee:	mov    ah,0x90
  4261f0:	jne    0x42624f
  4261f2:	shl    DWORD PTR [ecx+0x4f],0xb5
  4261f6:	push   DWORD PTR [ebx-0x39be602b]
  4261fc:	sub    al,0xae
  4261fe:	fcomp  DWORD PTR [ebx+ecx*2]
  426201:	popa   
  426202:	dec    edi
  426203:	sub    dl,BYTE PTR [eax-0x43287efb]
  426209:	dec    edx
  42620a:	jne    0x426220
  42620c:	aas    
  42620d:	jmp    0x426287
  42620f:	ffreep st(1)
  426211:	inc    eax
  426212:	out    dx,al
  426213:	aam    0xd5
  426215:	scas   al,BYTE PTR es:[edi]
  426216:	mov    esp,0x2102d4f0
  42621b:	jl     0x4261ef
  42621d:	xchg   DWORD PTR [ebx-0x57],ebp
  426220:	mov    bl,0x16
  426222:	fst    DWORD PTR [ebp+0x6a]
  426225:	push   ss
  426226:	fisubr WORD PTR [eax+edi*4+0x0]
  42622a:	aaa    
  42622b:	dec    esp
  42622c:	push   0x84734ee6
  426231:	mov    eax,ds:0xe8131bc4
  426236:	nop
  426237:	scas   al,BYTE PTR es:[edi]
  426238:	add    BYTE PTR [eax-0x4a],0xfd
  42623c:	mov    ds:0xc43e0b9c,eax
  426241:	fstp   TBYTE PTR [esi-0x7f033fd2]
  426247:	dec    ebp
  426248:	dec    edi
  426249:	mov    esp,0xc61816f9
  42624e:	pop    ds
  42624f:	loop   0x426239
  426251:	js     0x42629e
  426253:	outs   dx,DWORD PTR ds:[esi]
  426254:	jp     0x42627e
  426256:	ficomp DWORD PTR [ebx]
  426258:	jnp    0x42628f
  42625a:	bound  esi,QWORD PTR [ebp-0x7cff5983]
  426260:	adc    al,0xb3
  426262:	pop    eax
  426263:	inc    esi
  426264:	call   0x942a4764
  426269:	xchg   esi,eax
  42626a:	bound  esi,QWORD PTR [ecx]
  42626c:	std    
  42626d:	call   0x14:0x736f00e6
  426274:	retf   
  426275:	xlat   BYTE PTR ds:[ebx]
  426276:	add    al,0xc0
  426278:	inc    ebp
  426279:	leave  
  42627a:	dec    esp
  42627b:	and    al,0x97
  42627d:	bound  eax,QWORD PTR [eax]
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	jno    0x42628c
  426290:	lods   eax,DWORD PTR ds:[esi]
  426291:	outs   dx,BYTE PTR ds:[esi]
  426292:	std    
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    ah,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [ebp+eax*2+0x18],bh
  42629d:	(bad)  
  42629e:	(bad)  
  42629f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262a0:	imul   eax,ebp,0xfdfbbd0d
  4262a6:	inc    ebp
  4262a7:	xor    eax,0xf91a619f
  4262ac:	out    0xcc,al
  4262ae:	dec    ecx
  4262af:	not    DWORD PTR [esi]
  4262b1:	fst    st(6)
  4262b3:	and    eax,0x2598e230
  4262b8:	adc    ebx,DWORD PTR [eax+0x20]
  4262bb:	jg     0x426329
  4262bd:	or     ebx,ebx
  4262bf:	inc    ecx
  4262c0:	or     ecx,esp
  4262c2:	jns    0x4262d8
  4262c4:	sbb    al,0x85
  4262c6:	and    BYTE PTR [esi+ebp*2-0x4cb4d17b],ch
  4262cd:	test   DWORD PTR [esi],ebx
  4262cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262d0:	and    edi,eax
  4262d2:	call   0x6ff861f
  4262d7:	mov    ebp,0x3b3f3012
  4262dc:	(bad)  
  4262dd:	(bad)  
  4262df:	jle    0x4262c1
  4262e1:	pop    ebp
  4262e2:	retf   
  4262e3:	and    BYTE PTR [esi+0x6b866f50],0x54
  4262ea:	outs   dx,BYTE PTR ds:[esi]
  4262eb:	les    ebx,FWORD PTR ds:0x9925e455
  4262f1:	shl    BYTE PTR ds:0x3e0b37c4,cl
  4262f7:	lahf   
  4262f8:	ror    BYTE PTR [ebx+0x6],0x8d
  4262fc:	mov    ah,BYTE PTR [ecx-0x6dd1c21c]
  426302:	and    edx,edx
  426304:	lock mov esp,0xd7d77287
  42630a:	mov    ds:0xe3fa9c1b,eax
  42630f:	in     eax,dx
  426310:	fadd   QWORD PTR [ebp-0x61]
  426313:	inc    esp
  426314:	pop    ebp
  426315:	fwait
  426316:	and    dh,BYTE PTR [edi-0x34]
  426319:	pop    ds
  42631a:	dec    esp
  42631b:	retf   
  42631c:	(bad)  
  42631d:	fdiv   QWORD PTR [edx]
  42631f:	in     eax,0x3d
  426321:	and    al,0xc3
  426323:	leave  
  426324:	mov    dh,0x85
  426326:	pop    edx
  426327:	mov    al,ds:0x987a3cd
  42632c:	xchg   ebp,eax
  42632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42632e:	mov    ?,WORD PTR [eax+0x4d20cd5d]
  426334:	clc    
  426335:	sbb    BYTE PTR [ecx+ebx*1+0x6b],ah
  426339:	mov    eax,0x4c7e339f
  42633e:	out    0xd1,eax
  426340:	fdivrp st(3),st
  426342:	lds    edx,FWORD PTR cs:[eax]
  426345:	inc    edx
  426346:	sub    ecx,edx
  426348:	(bad)  
  426349:	call   0xa2f7ac13
  42634e:	repz test al,0x26
  426351:	data16 mov al,0x62
  426354:	dec    BYTE PTR [ecx+edi*8-0x74]
  426358:	push   eax
  426359:	lea    ebx,[ebx+edi*4]
  42635c:	fstp   TBYTE PTR [edi-0x18]
  42635f:	test   DWORD PTR es:[edi],edx
  426362:	xchg   ecx,eax
  426363:	inc    esp
  426364:	inc    edx
  426365:	fxtract 
  426367:	push   ebx
  426368:	adc    al,0x7f
  42636a:	mov    cl,0x9a
  42636c:	lahf   
  42636d:	xchg   BYTE PTR [ebx+0x48],dh
  426370:	sbb    dh,bl
  426372:	into   
  426373:	retf   
  426374:	inc    esi
  426375:	mov    eax,DWORD PTR ds:0xb70ff2a8
  42637b:	leave  
  42637c:	mov    bh,0x96
  42637e:	adc    DWORD PTR [ecx-0x1a],edx
  426381:	je     0x4263f6
  426383:	dec    ecx
  426384:	std    
  426385:	dec    edx
  426386:	adc    edi,DWORD PTR [eax]
  426388:	and    esp,DWORD PTR [esi+0x5f438f4]
  42638e:	or     cl,dh
  426390:	clc    
  426391:	jno    0x426313
  426393:	mov    bh,0xfa
  426395:	dec    esp
  426396:	adc    al,0x8f
  426398:	in     al,dx
  426399:	mov    ebx,0x3d922fb8
  42639e:	frstor [edx-0x6daaed38]
  4263a4:	arpl   WORD PTR [ecx],cx
  4263a6:	dec    edi
  4263a7:	mov    esi,0x1a19af85
  4263ac:	adc    DWORD PTR [ecx-0x1e],esi
  4263af:	inc    esp
  4263b0:	iret   
  4263b1:	jns    0x4263a9
  4263b3:	xlat   BYTE PTR ds:[ebx]
  4263b4:	into   
  4263b5:	jb     0x42638f
  4263b7:	cld    
  4263b8:	ror    BYTE PTR [eax-0x1dce29fe],1
  4263be:	or     BYTE PTR [ecx-0x18932f03],ah
  4263c4:	push   ss
  4263c5:	and    eax,0xfa1eae3f
  4263ca:	dec    edi
  4263cb:	stos   BYTE PTR es:[edi],al
  4263cc:	iret   
  4263cd:	outs   dx,BYTE PTR ds:[esi]
  4263ce:	jmp    0x42635e
  4263d0:	sub    DWORD PTR [esp+edx*1],0x2d0bbcd8
  4263d7:	xchg   ebx,eax
  4263d8:	and    BYTE PTR [edi],ch
  4263da:	aas    
  4263db:	sub    DWORD PTR [edx],edx
  4263dd:	shl    DWORD PTR [ebx],0x5e
  4263e0:	sub    eax,0x2b6b331c
  4263e5:	inc    eax
  4263e6:	es jle 0x4263ce
  4263e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263ea:	rcl    BYTE PTR [ecx-0x16],0xce
  4263ee:	or     DWORD PTR [edi],ebx
  4263f0:	arpl   WORD PTR [ebx],di
  4263f2:	xchg   esp,eax
  4263f3:	mov    ch,0xf1
  4263f5:	adc    ebx,DWORD PTR [edx-0x2bc5638d]
  4263fb:	(bad)  
  4263fc:	lods   eax,DWORD PTR ds:[esi]
  4263fd:	das    
  4263fe:	mov    al,ds:0xe802dea9
  426403:	xchg   DWORD PTR [ebx+0x4],edi
  426406:	mov    ah,0x59
  426408:	adc    edi,DWORD PTR [eax+ebx*1]
  42640b:	dec    esi
  42640c:	adc    eax,0x85255b1c
  426411:	pusha  
  426412:	or     al,0x33
  426414:	cmp    al,0xb4
  426416:	test   WORD PTR [edi+edi*1],0x141
  42641c:	jle    0x4263c2
  42641e:	cmp    al,0x2e
  426420:	push   0x4c4bcc61
  426425:	call   0xe4d2:0xd233168d
  42642c:	aas    
  42642d:	push   edx
  42642e:	inc    edi
  42642f:	xchg   esi,eax
  426430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426431:	or     DWORD PTR [ecx+0x4],esp
  426434:	dec    esi
  426435:	hlt    
  426436:	ficomp DWORD PTR [esi+0x7c3d7537]
  42643c:	stc    
  42643d:	aam    0xc9
  42643f:	pusha  
  426440:	pusha  
  426441:	mov    esp,ecx
  426443:	mov    ah,0xa4
  426445:	adc    ch,dh
  426447:	sub    ecx,DWORD PTR [eax+0x39]
  42644a:	jge    0x426429
  42644c:	jge    0x4263e4
  42644e:	mov    edx,0xd9199252
  426453:	mov    eax,ds:0xe2080902
  426458:	push   cs
  426459:	pop    ebx
  42645a:	(bad)  
  42645b:	adc    esp,DWORD PTR [edx+0xd]
  42645e:	je     0x4263f5
  426460:	or     BYTE PTR [ebp+0x378bcb42],dh
  426466:	push   edx
  426467:	loope  0x426495
  426469:	xchg   ebp,eax
  42646a:	sub    edi,DWORD PTR [esp+edi*4+0x3a7f1699]
  426471:	add    BYTE PTR [ebx],dh
  426473:	sti    
  426474:	jbe    0x4264d6
  426476:	and    edi,DWORD PTR [ebp-0x6d]
  426479:	xchg   esp,eax
  42647a:	pop    edi
  42647b:	sbb    BYTE PTR [eax+0x7c1d502d],bl
  426481:	cld    
  426482:	fild   DWORD PTR [edi+0x15]
  426485:	in     eax,dx
  426486:	push   edi
  426487:	and    DWORD PTR [edi],ebx
  426489:	stc    
  42648a:	fadd   DWORD PTR [ebp+0x0]
  42648d:	(bad)  
  42648e:	push   esi
  42648f:	mov    eax,0x7bb14959
  426494:	dec    esi
  426495:	xchg   ebp,eax
  426496:	or     edx,edx
  426498:	push   edx
  426499:	in     eax,0x18
  42649b:	ret    
  42649c:	imul   DWORD PTR [edi]
  42649e:	add    cl,0xa5
  4264a1:	jae    0x42645b
  4264a3:	imul   ebx,DWORD PTR [eax],0x7455b1ea
  4264a9:	popa   
  4264aa:	dec    ebx
  4264ab:	mov    al,0xf8
  4264ad:	loope  0x4264e2
  4264af:	mov    eax,0xb78184b8
  4264b4:	fs pop ebp
  4264b6:	jge    0x426515
  4264b8:	mov    dl,0x44
  4264ba:	and    DWORD PTR [esi-0x5b9bb52f],ebx
  4264c0:	jmp    0xd20f:0xf536d91a
  4264c7:	mov    al,0xe3
  4264c9:	jecxz  0x42645b
  4264cb:	imul   esp,eax,0xc59ade36
  4264d1:	pop    edx
  4264d2:	in     eax,0x83
  4264d4:	xchg   ecx,eax
  4264d5:	add    bl,BYTE PTR [edx+0x70fcad2a]
  4264db:	pop    ebp
  4264dc:	(bad)  
  4264dd:	xchg   ecx,eax
  4264de:	ret    
  4264df:	ja     0x42651f
  4264e1:	fs (bad) 
  4264e3:	loope  0x426518
  4264e5:	inc    edx
  4264e6:	adc    eax,0x3c0ea3eb
  4264eb:	pop    es
  4264ec:	push   0x31
  4264ee:	mov    edx,DWORD PTR [ecx+0x1d406879]
  4264f4:	inc    edi
  4264f5:	adc    eax,0x85d57771
  4264fa:	push   ebp
  4264fb:	xchg   edx,eax
  4264fc:	jo     0x426538
  4264fe:	rcl    DWORD PTR [edi],0xdb
  426501:	ins    BYTE PTR es:[edi],dx
  426502:	and    BYTE PTR [esi-0x5ca30cb7],al
  426508:	or     al,0x5b
  42650a:	sub    bh,BYTE PTR [esi+0x14]
  42650d:	sub    bh,BYTE PTR [eax-0x6037988a]
  426513:	push   ecx
  426514:	pop    ss
  426515:	stc    
  426516:	add    eax,0xf9cc2e61
  42651b:	inc    edi
  42651c:	jl     0x4264e6
  42651e:	ret    0xec8b
  426521:	(bad)  
  426522:	loopne 0x426501
  426524:	and    BYTE PTR [esi+ecx*4+0x65],0x1a
  426529:	add    esp,ebx
  42652b:	stc    
  42652c:	hlt    
  42652d:	xchg   esi,eax
  42652e:	mov    eax,ds:0x66f0c26f
  426533:	int3   
  426534:	jo     0x4264c9
  426536:	rcr    DWORD PTR [esi+edx*2-0x55],0xde
  42653b:	stos   BYTE PTR es:[edi],al
  42653c:	sub    BYTE PTR [ebx],bh
  42653e:	(bad)  
  426540:	cmp    eax,DWORD PTR [eax]
  426542:	into   
  426543:	mov    edx,0x4dc9c4b3
  426548:	jb     0x42658a
  42654a:	aas    
  42654b:	imul   eax,ebx,0x7566a6a5
  426551:	int    0xa8
  426553:	xlat   BYTE PTR ds:[ebx]
  426554:	cld    
  426555:	inc    BYTE PTR [esp+ebx*1+0x7f2b7ed6]
  42655c:	sub    eax,0xd8ebbe8
  426561:	cmp    DWORD PTR [edi-0x1f],ebx
  426564:	fs jl  0x42652a
  426567:	sub    DWORD PTR [esi+0x6b],ecx
  42656a:	mov    eax,es:0xc22f69fd
  426570:	push   eax
  426571:	push   esp
  426572:	cmp    cl,BYTE PTR [eax]
  426574:	mov    esp,?
  426576:	scas   eax,DWORD PTR es:[edi]
  426577:	bound  eax,QWORD PTR [esi+0x33d0fcde]
  42657d:	repnz lds esp,FWORD PTR [ebp-0x750cd599]
  426584:	psadbw mm3,QWORD PTR [edx+0x76bf4f89]
  42658b:	pop    ds
  42658c:	popa   
  42658d:	mov    bl,0xd8
  42658f:	xchg   esp,eax
  426590:	xlat   BYTE PTR ds:[ebx]
  426591:	rcr    BYTE PTR [ecx*8+0x139e1467],0x50
  426599:	in     eax,dx
  42659a:	sbb    eax,0x8355a5cf
  42659f:	and    al,0x8f
  4265a1:	sub    DWORD PTR [esi],ebp
  4265a3:	test   eax,0xca966561
  4265a8:	cwde   
  4265a9:	call   0xabdd593d
  4265ae:	es jns 0x426579
  4265b1:	jne    0x426565
  4265b3:	mov    esi,0x6ee8d7b1
  4265b8:	sahf   
  4265b9:	mov    esi,0xb6b545d3
  4265be:	mov    DWORD PTR [ebx],edi
  4265c0:	loop   0x4265da
  4265c2:	ja     0x426545
  4265c4:	and    dl,bh
  4265c6:	clc    
  4265c7:	jg     0x42656c
  4265c9:	xor    dh,BYTE PTR [esi+0x66]
  4265cc:	addr16 cli 
  4265ce:	sbb    BYTE PTR [eax-0xb],bl
  4265d1:	aas    
  4265d2:	push   esp
  4265d3:	ja     0x426625
  4265d5:	push   ebx
  4265d6:	and    eax,0xae61eae8
  4265db:	cld    
  4265dc:	fst    QWORD PTR [eax]
  4265de:	(bad)  
  4265df:	in     eax,dx
  4265e0:	mul    BYTE PTR [ebp+0xa]
  4265e3:	into   
  4265e4:	jmp    DWORD PTR [eax+0x405c62b6]
  4265ea:	xor    bl,BYTE PTR [ebp-0x30b2a4b4]
  4265f0:	enter  0x3c0e,0x95
  4265f4:	mov    WORD PTR [edx+0x589422b7],ss
  4265fa:	lea    edx,[edx]
  4265fc:	cmp    al,0xa9
  4265fe:	cs mov ebp,0x29da06a1
  426604:	je     0x426617
  426606:	or     al,0x58
  426608:	into   
  426609:	sbb    esp,ecx
  42660b:	mov    eax,ds:0xf21c97d3
  426610:	mov    WORD PTR [ebx-0x7d60d50a],es
  426616:	paddb  mm7,QWORD PTR [ecx+0x19]
  42661a:	gs popa 
  42661c:	int3   
  42661d:	(bad)  
  42661e:	(bad)  
  42661f:	push   cs
  426620:	fstp   DWORD PTR [esi+0x19]
  426623:	fadd   st,st(1)
  426625:	fdivr  st(4),st
  426627:	push   ds
  426628:	gs add eax,0x254f1f31
  42662e:	and    DWORD PTR [ecx-0x60],edx
  426631:	arpl   WORD PTR [ebx],dx
  426633:	inc    ecx
  426634:	dec    edx
  426635:	in     eax,0xff
  426637:	cs pop edi
  426639:	push   ds
  42663a:	sub    al,0x20
  42663c:	lahf   
  42663d:	repnz call 0x30dd:0x110aec0d
  426645:	fidivr DWORD PTR [edx-0xa4a4ce2]
  42664b:	or     dl,BYTE PTR [eax-0x3a50302f]
  426651:	test   eax,0xe1695448
  426656:	(bad)  
  426657:	mov    ds:0x4eafb099,eax
  42665c:	loopne 0x426627
  42665e:	popa   
  42665f:	jne    0x426651
  426661:	js     0x42661f
  426663:	add    eax,0xe409cc84
  426668:	jp     0x42661c
  42666a:	push   0x3f2f5ef5
  42666f:	mov    ebp,DWORD PTR [ebp+0x6336bd7]
  426675:	sub    cl,bl
  426677:	int    0x5
  426679:	jnp    0x426653
  42667b:	mov    cl,0x60
  42667d:	(bad)  
  42667e:	inc    BYTE PTR [edi-0x3e]
  426681:	out    dx,eax
  426682:	test   BYTE PTR [eax],dl
  426684:	(bad)  
  426685:	ja     0x4266a1
  426687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426688:	push   ebx
  426689:	push   edx
  42668a:	inc    edi
  42668b:	jb     0x4266b0
  42668d:	fucomp st(4)
  42668f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426690:	test   al,0x75
  426692:	lock or eax,0x96f76e58
  426698:	jmp    0x2a84:0xa47818e8
  42669f:	je     0x426694
  4266a1:	mov    ebp,0x4cc211f2
  4266a6:	(bad)  
  4266a7:	fs fwait
  4266a9:	mov    ah,0x4c
  4266ab:	adc    eax,0xdd487e1c
  4266b0:	xchg   ebp,eax
  4266b1:	xchg   esp,eax
  4266b2:	mov    eax,ds:0x85ccee71
  4266b7:	jle    0x426726
  4266b9:	cmp    al,0x9c
  4266bb:	jbe    0x426737
  4266bd:	sub    edx,DWORD PTR [ecx]
  4266bf:	ror    BYTE PTR [ebx+eax*4],cl
  4266c2:	fsub   QWORD PTR [ebx+0x53a837a3]
  4266c8:	mov    ds:0x9fd4add7,al
  4266cd:	pop    ebp
  4266ce:	push   es
  4266cf:	jns    0x4266c7
  4266d1:	call   0x4946029
  4266d6:	mov    al,ds:0x653e8bf4
  4266db:	aas    
  4266dc:	ins    DWORD PTR es:[edi],dx
  4266dd:	sbb    esi,DWORD PTR [ebx-0x14983934]
  4266e3:	cmp    dh,BYTE PTR [ebx]
  4266e5:	in     eax,0xd3
  4266e7:	sbb    BYTE PTR [edx-0x299f7d9b],dh
  4266ed:	scas   eax,DWORD PTR es:[edi]
  4266ee:	cmc    
  4266ef:	popf   
  4266f0:	pop    esp
  4266f1:	add    ebx,DWORD PTR [edi]
  4266f3:	icebp  
  4266f4:	es mov esi,0xdda829f5
  4266fa:	pop    edi
  4266fb:	mov    edx,0xda7d0051
  426700:	jb     0x42673e
  426702:	jg     0x4266fd
  426704:	cmc    
  426705:	jp     0x4266be
  426707:	or     eax,0xa850823b
  42670c:	ror    BYTE PTR [edi],0xff
  42670f:	fcom   DWORD PTR es:[eax]
  426712:	ss test al,0x47
  426715:	and    al,0x23
  426717:	push   edi
  426718:	bound  ebp,QWORD PTR ds:0xa86d3862
  42671e:	jbe    0x4266bd
  426720:	scas   eax,DWORD PTR es:[edi]
  426721:	ret    0x72e0
  426724:	lahf   
  426725:	and    ecx,DWORD PTR [esi+0x25bdf5da]
  42672b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42672c:	test   al,0x12
  42672e:	js     0x426758
  426730:	jmp    0xf627:0x17611a0e
  426737:	das    
  426738:	and    esi,DWORD PTR [edi-0x13]
  42673b:	call   0x43c:0x2ef2c4ef
  426742:	addr16 sahf 
  426744:	scas   al,BYTE PTR es:[edi]
  426745:	shr    DWORD PTR [edi+edi*2-0x73],0xad
  42674a:	sub    DWORD PTR [edi+ecx*1+0x6c],ebp
  42674e:	mov    bl,0xb2
  426750:	dec    esi
  426751:	shl    BYTE PTR [ebx+0x37d84ee6],cl
  426757:	add    eax,0xdf8568da
  42675c:	inc    eax
  42675d:	sti    
  42675e:	pop    esi
  42675f:	jbe    0x426780
  426761:	and    DWORD PTR [ecx],ebx
  426763:	pushf  
  426764:	mov    ch,0x9c
  426766:	test   eax,0xed3a9e64
  42676b:	sub    edx,DWORD PTR [edi]
  42676d:	add    bh,BYTE PTR [ebp+0x55]
  426770:	add    bl,BYTE PTR [edx]
  426772:	xor    DWORD PTR ds:0xab0679a2,0xffffffec
  426779:	mov    ds:0xa6f2149f,al
  42677e:	push   eax
  42677f:	fdiv   st,st(2)
  426781:	ret    
  426782:	out    dx,eax
  426783:	fbstp  TBYTE PTR [edx+0x439c2a4c]
  426789:	push   edx
  42678a:	cli    
  42678b:	arpl   WORD PTR [ebx+0x1a],bp
  42678e:	add    BYTE PTR [eax],al
  426790:	add    BYTE PTR [eax],al
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	popa   
  42679f:	popf   
  4267a0:	dec    edi
  4267a1:	add    cl,dh
  4267a3:	fild   WORD PTR [ecx]
  4267a5:	add    ah,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [edi],dh
  4267ab:	push   ebp
  4267ac:	adc    eax,ecx
  4267ae:	daa    
  4267af:	inc    ebx
  4267b0:	adc    DWORD PTR [esi],esi
  4267b2:	sub    BYTE PTR [eax-0x1390339a],bh
  4267b8:	sub    DWORD PTR [esi],edx
  4267ba:	cmp    al,0xac
  4267bc:	xor    al,0x3a
  4267be:	adc    BYTE PTR [ebp+0x1a4349e7],ch
  4267c4:	and    eax,0xfb46f8cd
  4267c9:	mov    eax,ds:0xba3aa38
  4267ce:	outs   dx,BYTE PTR ds:[esi]
  4267cf:	jmp    0x4267e3
  4267d1:	lods   eax,DWORD PTR ds:[esi]
  4267d2:	cmova  esi,DWORD PTR [ebx+0x18]
  4267d6:	xchg   esp,eax
  4267d7:	pop    ecx
  4267d8:	mov    ah,0x5
  4267da:	sti    
  4267db:	mov    al,ds:0xa77f18f0
  4267e0:	leave  
  4267e1:	sub    DWORD PTR [edi-0x1b],ebx
  4267e4:	xchg   esp,eax
  4267e5:	jmp    0xa94b:0x6352ae56
  4267ec:	pop    ds
  4267ed:	jmp    0xc554:0x60ad2f2b
  4267f4:	pusha  
  4267f5:	pop    ebp
  4267f6:	pop    ebx
  4267f7:	aas    
  4267f8:	push   ss
  4267f9:	arpl   WORD PTR [esp+ecx*2+0x71cec70a],di
  426800:	and    dh,al
  426802:	enter  0xdb24,0xa4
  426806:	mov    gs,WORD PTR [edi+0x49]
  426809:	and    BYTE PTR [edi+ecx*2],0x45
  42680d:	das    
  42680e:	xor    BYTE PTR [esi-0x12],dl
  426811:	jbe    0x426883
  426813:	imul   esi,DWORD PTR [edx],0xc0b6d950
  426819:	call   0x9aa7981c
  42681e:	pop    ds
  42681f:	adc    ecx,DWORD PTR ds:0xc6aebf67
  426825:	jle    0x42689c
  426827:	cwde   
  426828:	or     DWORD PTR [ebp+0x6cda3f64],eax
  42682e:	and    DWORD PTR [eax-0x44],0x6
  426832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426833:	hlt    
  426834:	mov    dl,BYTE PTR [esi+ebx*8]
  426837:	scas   al,BYTE PTR es:[edi]
  426838:	mov    eax,0xb8eae47
  42683d:	sub    DWORD PTR [esi-0x18],0x67
  426841:	mov    dl,0xb7
  426843:	fcom   st(6)
  426845:	sub    eax,0xe57cb3d3
  42684a:	fisubr DWORD PTR ds:0xa1b03f43
  426850:	loopne 0x426812
  426852:	dec    eax
  426853:	cmp    eax,0x160ef65d
  426858:	push   ebp
  426859:	jecxz  0x4268ad
  42685b:	jnp    0x4268be
  42685d:	sbb    al,0xb5
  42685f:	mov    esi,0x5dd31a33
  426864:	dec    edi
  426865:	xor    eax,0x7b1760ec
  42686a:	push   ds
  42686b:	lock out 0xe9,al
  42686e:	enter  0xda0c,0x2d
  426872:	add    DWORD PTR [edi],ecx
  426874:	loopne 0x426894
  426876:	inc    esp
  426877:	jl     0x426846
  426879:	jb     0x426851
  42687b:	mov    al,ds:0x49e98b44
  426880:	out    dx,al
  426881:	jbe    0x426823
  426883:	test   BYTE PTR [esi+0x11],0x5a
  426887:	inc    ebx
  426888:	fisttp WORD PTR [esi]
  42688a:	xor    DWORD PTR [ecx-0x7a],edi
  42688d:	mov    eax,0x2e9f990a
  426892:	pop    ds
  426893:	rcr    dh,0xcc
  426896:	in     al,0x7f
  426898:	and    ch,al
  42689a:	cdq    
  42689b:	pop    esp
  42689c:	outs   dx,BYTE PTR ds:[esi]
  42689d:	aam    0xbb
  42689f:	push   edi
  4268a0:	test   eax,0xb88587ca
  4268a5:	cmp    eax,0x6ca4295e
  4268aa:	sbb    DWORD PTR [edx+0x15],esp
  4268ad:	popa   
  4268ae:	cld    
  4268af:	mov    cl,0x8d
  4268b1:	jmp    0x97594672
  4268b6:	in     al,dx
  4268b7:	bound  ecx,QWORD PTR [ebx]
  4268b9:	add    BYTE PTR [ebx-0x25],bl
  4268bc:	and    BYTE PTR [edx-0x5a],ah
  4268bf:	test   BYTE PTR [edx+0x2d],ah
  4268c2:	pop    ebx
  4268c3:	idiv   dh
  4268c5:	mov    ?,edx
  4268c7:	jb     0x4268a8
  4268c9:	or     al,0xcf
  4268cb:	jmp    0x445a:0x69ce8d7b
  4268d2:	jge    0x4268eb
  4268d4:	enter  0x98fe,0xb2
  4268d8:	add    DWORD PTR [ebp+0x5d],eax
  4268db:	pop    edi
  4268dc:	push   ebp
  4268dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268de:	push   edi
  4268df:	ds jle 0x42687c
  4268e2:	dec    eax
  4268e3:	dec    al
  4268e5:	gs inc eax
  4268e7:	sub    eax,0x8690d7c3
  4268ec:	and    al,0xb7
  4268ee:	adc    eax,edx
  4268f0:	fnstcw WORD PTR [ecx+edi*2]
  4268f3:	cmp    DWORD PTR [edx],esi
  4268f5:	(bad)  
  4268f6:	neg    esp
  4268f8:	retf   
  4268f9:	clc    
  4268fa:	imul   eax,ecx,0x7f
  4268fd:	add    eax,DWORD PTR [edi]
  4268ff:	ret    0x36aa
  426902:	test   al,0xea
  426904:	das    
  426905:	xor    dh,BYTE PTR [eax+0x79]
  426908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426909:	hlt    
  42690a:	mov    al,ds:0x2c672c24
  42690f:	test   al,0x4a
  426911:	jnp    0x426974
  426913:	ja     0x426910
  426915:	mov    ebp,0x25e93f78
  42691a:	fnsave [ecx+0x1a20af9b]
  426920:	fisub  DWORD PTR ds:0xfb9002e2
  426926:	dec    ecx
  426927:	test   DWORD PTR [esi],edi
  426929:	pop    edi
  42692a:	(bad)  
  42692b:	push   es
  42692c:	and    DWORD PTR [esi+eax*1-0x2f],ecx
  426930:	add    eax,0xad6067a
  426935:	add    edi,DWORD PTR [ebx+0xc473e6]
  42693b:	xlat   BYTE PTR ds:[ebx]
  42693c:	imul   esi,DWORD PTR gs:[edi-0x1e],0x96c8ca92
  426944:	dec    edx
  426945:	xor    eax,0x7e8a4567
  42694a:	cs int3 
  42694c:	out    0xdb,eax
  42694e:	out    0xa1,al
  426950:	ja     0x4269aa
  426952:	xchg   edi,eax
  426953:	push   ebp
  426954:	sub    ebx,ebx
  426956:	adc    BYTE PTR [ebx+0x4a60d0e5],bl
  42695c:	cmp    cl,BYTE PTR [esi-0x52]
  42695f:	sti    
  426960:	out    0xf1,al
  426962:	sbb    eax,ecx
  426964:	dec    esi
  426965:	dec    ebx
  426966:	shr    DWORD PTR [ecx],cl
  426968:	add    dl,BYTE PTR [edi+0x4b]
  42696b:	sub    esi,DWORD PTR [ecx]
  42696d:	add    BYTE PTR ds:0xaad6906d,0xc0
  426974:	lea    edi,[esi-0x5a]
  426977:	dec    ebx
  426978:	test   al,0x4c
  42697a:	cmc    
  42697b:	retf   
  42697c:	or     BYTE PTR [eax+edx*4+0x25],dl
  426980:	pop    ecx
  426981:	aaa    
  426982:	and    eax,0xe4a96212
  426987:	dec    edi
  426988:	inc    DWORD PTR [ebp-0x7e]
  42698b:	call   0x5ab0cf79
  426990:	push   ebx
  426991:	cwde   
  426992:	aad    0x8a
  426994:	mov    WORD PTR [eax+0x7d1a5b6a],fs
  42699a:	das    
  42699b:	test   eax,0xaab23300
  4269a0:	mov    bl,0x74
  4269a2:	fdiv   st(1),st
  4269a4:	pusha  
  4269a5:	bound  esp,QWORD PTR [eax+0x35f7c0b1]
  4269ab:	sahf   
  4269ac:	xor    eax,0x3b64d924
  4269b1:	mov    DWORD PTR [esi+edi*1-0x251cb4d6],0xa9ef3b75
  4269bc:	fcom   DWORD PTR [edx+0x1f9bb118]
  4269c2:	(bad)  
  4269c3:	mov    al,0x94
  4269c5:	sub    esp,DWORD PTR [ebx+eax*4-0x52]
  4269c9:	or     dh,dh
  4269cb:	bound  edx,QWORD PTR [ebx+ebx*4]
  4269ce:	push   eax
  4269cf:	fcom   DWORD PTR [ecx]
  4269d1:	pop    ds
  4269d2:	cmc    
  4269d3:	dec    ecx
  4269d4:	inc    esp
  4269d5:	adc    eax,0xf32ff82b
  4269da:	loop   0x426a27
  4269dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269dd:	jl     0x426a23
  4269df:	out    dx,al
  4269e0:	cmp    cl,BYTE PTR [ecx+0x64]
  4269e3:	pop    edx
  4269e4:	stos   BYTE PTR es:[edi],al
  4269e5:	mov    eax,0x36593761
  4269ea:	xchg   edx,eax
  4269eb:	(bad)  
  4269ec:	repz ds into 
  4269ef:	pop    ebx
  4269f0:	cmp    DWORD PTR [ecx],0xffffff94
  4269f3:	adc    cl,BYTE PTR [esi+ebp*4]
  4269f6:	(bad)  
  4269f7:	adc    cl,ah
  4269f9:	mov    ebp,0x6b9f70e2
  4269fe:	in     al,dx
  4269ff:	fwait
  426a00:	adc    cl,BYTE PTR [ebx+0x64]
  426a03:	mov    al,BYTE PTR [edi+0x3aee2fb5]
  426a09:	pop    eax
  426a0a:	xlat   BYTE PTR ds:[ebx]
  426a0b:	push   ss
  426a0c:	in     al,0xbc
  426a0e:	sahf   
  426a0f:	std    
  426a10:	in     al,dx
  426a11:	fdivr  QWORD PTR [ecx-0x4e]
  426a14:	fsubrp st(3),st
  426a16:	xchg   ebx,eax
  426a17:	dec    eax
  426a18:	loop   0x426a5e
  426a1a:	test   DWORD PTR [ebx+0xc4d664c],0x2ffaede2
  426a24:	gs aad 0x9c
  426a27:	jl     0x426a79
  426a29:	and    DWORD PTR [eax-0x1b601d41],esp
  426a2f:	(bad)  
  426a30:	stc    
  426a31:	adc    edi,edi
  426a33:	pop    ds
  426a34:	jb     0x426a19
  426a36:	mov    ebx,0xfa6cf87d
  426a3b:	pop    ebx
  426a3c:	pop    edi
  426a3d:	xor    al,BYTE PTR [edx]
  426a3f:	xchg   ebp,eax
  426a40:	test   DWORD PTR [ecx+0x6c],esi
  426a43:	in     al,0xad
  426a45:	gs loope 0x426a6e
  426a48:	(bad)  
  426a49:	sbb    ah,BYTE PTR [ebp-0x60]
  426a4c:	ss or  bh,bl
  426a4f:	sbb    BYTE PTR [edx-0x7b],al
  426a52:	sub    bl,0x94
  426a55:	retf   
  426a56:	leave  
  426a57:	icebp  
  426a58:	mov    edi,0xf4d12187
  426a5d:	pop    ecx
  426a5e:	dec    ebx
  426a5f:	sbb    BYTE PTR [ebx],dl
  426a61:	dec    ebx
  426a62:	call   FWORD PTR [edx+0x5e]
  426a65:	ds mov al,0xe8
  426a68:	pop    ebp
  426a69:	cmp    BYTE PTR [ecx+0x41],dl
  426a6c:	and    BYTE PTR [esi],cl
  426a6e:	and    ch,BYTE PTR [esi]
  426a70:	sub    al,0x66
  426a72:	int    0xf8
  426a74:	cdq    
  426a75:	push   ds
  426a76:	push   es
  426a77:	push   ebx
  426a78:	xor    DWORD PTR [esi],0x3f601a64
  426a7e:	adc    ch,al
  426a80:	arpl   si,sp
  426a82:	sar    BYTE PTR [esi-0x77a23eb4],1
  426a88:	icebp  
  426a89:	mov    ch,0xa2
  426a8b:	push   eax
  426a8c:	je     0x426b02
  426a8e:	push   edx
  426a8f:	out    0x71,al
  426a91:	andps  xmm4,XMMWORD PTR [edx+edx*4-0x161501db]
  426a99:	imul   ecx,DWORD PTR [ebp-0x22c4d03e],0x545b2d4b
  426aa3:	int    0xf
  426aa5:	or     BYTE PTR [esi],ch
  426aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aa8:	add    BYTE PTR [edi],bh
  426aaa:	dec    ebx
  426aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426aac:	enter  0xc108,0x9c
  426ab0:	fdiv   QWORD PTR [edx+esi*4+0x7ab94f9b]
  426ab7:	xchg   esp,eax
  426ab8:	mov    ah,0xa9
  426aba:	mov    ds:0x7dbdd009,eax
  426abf:	jmp    0x3bb1:0xe5102664
  426ac6:	imul   edx,DWORD PTR [edi],0x6f288c52
  426acc:	jb     0x426ae0
  426ace:	in     eax,0x3c
  426ad0:	lods   al,BYTE PTR ds:[esi]
  426ad1:	in     al,0xd1
  426ad3:	xor    eax,DWORD PTR [esi-0x6e]
  426ad6:	and    DWORD PTR [esi],esi
  426ad8:	sbb    eax,0x4fa4bf2f
  426add:	xlat   BYTE PTR ds:[ebx]
  426ade:	or     al,0xd3
  426ae0:	push   ebp
  426ae1:	push   edi
  426ae2:	call   0xf754:0x4389eff1
  426ae9:	aas    
  426aea:	fcmovnu st,st(5)
  426aec:	jo     0x426b1f
  426aee:	pop    esi
  426aef:	dec    ebx
  426af0:	mov    eax,ds:0x61c714d5
  426af5:	pop    edx
  426af6:	mov    WORD PTR [ecx-0x6923b715],gs
  426afc:	(bad)  
  426afe:	cmp    al,0x3e
  426b00:	inc    esp
  426b01:	inc    edx
  426b02:	adc    eax,0x67c2efdc
  426b07:	ret    0xe95f
  426b0a:	daa    
  426b0b:	not    bl
  426b0d:	sub    ah,ah
  426b0f:	lods   al,BYTE PTR ds:[esi]
  426b10:	jecxz  0x426ac5
  426b12:	cmc    
  426b13:	(bad)  
  426b14:	mov    al,0x2b
  426b16:	(bad)  
  426b17:	or     al,0xfb
  426b19:	adc    al,0x39
  426b1b:	pop    ecx
  426b1c:	mov    ds:0xa2b1ed3c,eax
  426b21:	ficomp WORD PTR [edi+0x10cfc007]
  426b27:	jp     0x426b9f
  426b29:	fldcw  WORD PTR [esi+0x3181723a]
  426b2f:	shl    ah,cl
  426b31:	mov    bh,0xf3
  426b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b34:	sub    al,0x68
  426b36:	mov    esi,DWORD PTR [edi-0x72]
  426b39:	and    dl,BYTE PTR [esi-0xf]
  426b3c:	jmp    0x93e63694
  426b41:	scas   al,BYTE PTR es:[edi]
  426b42:	inc    eax
  426b43:	cmp    esp,ecx
  426b45:	xor    eax,DWORD PTR [ebp-0x4966ba36]
  426b4b:	xor    al,0xb8
  426b4d:	dec    esi
  426b4e:	in     eax,0x41
  426b50:	or     BYTE PTR [esi+0x18],ch
  426b53:	sub    DWORD PTR [ebx],ebx
  426b55:	sbb    cl,BYTE PTR [ebp+ebp*4+0x231b4e9e]
  426b5c:	popa   
  426b5d:	mov    dl,0xce
  426b5f:	fwait
  426b60:	jle    0x426b7e
  426b62:	push   ds
  426b63:	ss jl  0x426b57
  426b66:	jl     0x426af6
  426b68:	popa   
  426b69:	cmp    eax,0x7f0f0741
  426b6e:	and    eax,0xfb17ff01
  426b73:	imul   edx,DWORD PTR [esi+0xb],0x6bf44f8a
  426b7a:	jne    0x426bcd
  426b7c:	dec    ecx
  426b7d:	pop    esp
  426b7e:	sbb    DWORD PTR [ecx+0x1a],eax
  426b81:	jp     0x426ba8
  426b83:	retf   0x7207
  426b86:	mov    BYTE PTR [edi+esi*2],bh
  426b89:	out    0x4e,eax
  426b8b:	pop    ebx
  426b8c:	out    dx,al
  426b8d:	loopne 0x426b6c
  426b8f:	jge    0x426bf8
  426b91:	inc    ebp
  426b92:	out    dx,al
  426b93:	fstp   TBYTE PTR [eax]
  426b95:	push   0x47d8ea5
  426b9a:	stc    
  426b9b:	sub    al,0x88
  426b9d:	or     BYTE PTR [esi-0x653825f2],ch
  426ba3:	lea    ecx,ds:0x60354277
  426ba9:	push   ecx
  426baa:	sub    edx,ebp
  426bac:	(bad)  
  426bae:	fnstenv [edx-0x8]
  426bb1:	(bad)  
  426bb2:	cmp    dl,BYTE PTR [ebx-0x20f077b7]
  426bb8:	pop    edi
  426bb9:	nop
  426bba:	bound  esp,QWORD PTR [esi+ebx*4+0x4]
  426bbe:	xor    ecx,edx
  426bc0:	ret    0xc3c5
  426bc3:	add    BYTE PTR [edx+ecx*8-0x17],0x7f
  426bc8:	aaa    
  426bc9:	dec    ebx
  426bca:	stos   DWORD PTR es:[edi],eax
  426bcb:	xchg   ecx,eax
  426bcc:	fnstsw WORD PTR [ebx+0x276e3f11]
  426bd2:	pop    ebx
  426bd3:	push   esp
  426bd4:	mov    esi,0xa8937f58
  426bd9:	adc    al,0x97
  426bdb:	mov    edi,0x334b2efa
  426be0:	fldcw  WORD PTR [eax+0xd76e545]
  426be6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  426be8:	ror    BYTE PTR [eax-0x7b],0xfc
  426bec:	cwde   
  426bed:	call   0x94b7:0x75694331
  426bf4:	sub    DWORD PTR [ecx-0x7d],0xcb74fae8
  426bfb:	sub    ch,BYTE PTR [esi+esi*8-0x24f38b86]
  426c02:	stc    
  426c03:	jmp    0xc9cd:0xafaa3e7d
  426c0a:	mov    esi,0xe85f0e0a
  426c0f:	ins    DWORD PTR es:[edi],dx
  426c10:	call   0xc61f9ece
  426c15:	(bad)  
  426c16:	mov    eax,0xfb731f2f
  426c1b:	bound  ebx,QWORD PTR [ecx+0x1bdf0f83]
  426c21:	jno    0x426c0d
  426c23:	mov    dh,0x8a
  426c25:	push   esp
  426c26:	shr    BYTE PTR [edx],cl
  426c28:	mov    dh,0xcb
  426c2a:	jmp    eax
  426c2c:	stos   DWORD PTR es:[edi],eax
  426c2d:	rcl    BYTE PTR [eax],1
  426c2f:	icebp  
  426c30:	les    edi,FWORD PTR [edx]
  426c32:	test   BYTE PTR [ebx-0x1ca94f28],bl
  426c38:	dec    edi
  426c39:	and    cl,BYTE PTR [esi-0xdc0b7c9]
  426c3f:	and    eax,esp
  426c41:	cmp    al,ah
  426c43:	cmp    dh,BYTE PTR [esi+eiz*2-0x52]
  426c47:	icebp  
  426c48:	hlt    
  426c49:	pop    edx
  426c4a:	xchg   esi,eax
  426c4b:	bound  edi,QWORD PTR [edx+0x7e]
  426c4e:	(bad)  
  426c4f:	shr    bh,0xd8
  426c52:	pop    eax
  426c53:	inc    ebx
  426c54:	mov    ecx,0xbfc1251
  426c59:	pop    esi
  426c5a:	jbe    0x426cce
  426c5c:	stc    
  426c5d:	jmp    0x4809:0x3d0ac9d6
  426c64:	pushf  
  426c65:	pop    ds
  426c66:	outs   dx,DWORD PTR ds:[esi]
  426c67:	mov    ds:0xd6e8e23a,eax
  426c6c:	inc    edx
  426c6d:	pushf  
  426c6e:	jp     0x426c1d
  426c70:	push   ss
  426c71:	lods   al,BYTE PTR ds:[esi]
  426c72:	das    
  426c73:	pop    esi
  426c74:	into   
  426c75:	mov    al,ds:0x2aa7792a
  426c7a:	sbb    DWORD PTR [ecx-0xa1c1be5],edx
  426c80:	lea    esp,[ebx+0x21]
  426c83:	pop    edi
  426c84:	or     dl,0xc0
  426c87:	push   0x6e
  426c89:	lods   eax,DWORD PTR ds:[esi]
  426c8a:	mov    edx,0xd8c29eb
  426c8f:	push   cs
  426c90:	adc    eax,0xbaa35890
  426c95:	fmul   st,st(4)
  426c97:	push   edx
  426c98:	push   cs
  426c99:	cmp    al,0x42
  426c9b:	cdq    
  426c9c:	hlt    
  426c9d:	xlat   BYTE PTR ds:[ebx]
  426c9e:	add    BYTE PTR [eax],al
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x621771f0],cl
  426caf:	xchg   esp,eax
  426cb0:	lahf   
  426cb1:	xor    ah,ch
  426cb3:	in     al,0x1
  426cb5:	add    ah,dh
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [ecx],al
  426cbb:	adc    BYTE PTR [eax+0x776e469c],0xc3
  426cc2:	mov    dh,0x7b
  426cc4:	mov    ah,0x75
  426cc6:	int3   
  426cc7:	xbegin 0x7ca04938
  426ccd:	and    edi,edx
  426ccf:	fsubr  QWORD PTR [ecx+0x2c]
  426cd2:	dec    edx
  426cd3:	push   ebx
  426cd4:	push   ecx
  426cd5:	fwait
  426cd6:	mov    ds:0xc94240,eax
  426cdb:	test   eax,0xc52c9093
  426ce0:	fs out dx,al
  426ce2:	xchg   esi,eax
  426ce3:	rol    esi,0xbd
  426ce6:	addr16 out 0x65,eax
  426ce9:	add    edi,DWORD PTR [edx]
  426ceb:	(bad)  
  426cec:	or     edi,DWORD PTR [edx+0x51bb718e]
  426cf2:	mov    ecx,?
  426cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cf5:	std    
  426cf6:	in     al,0xfc
  426cf8:	add    al,0x83
  426cfa:	adc    al,0x5e
  426cfc:	sbb    bl,al
  426cfe:	pop    ecx
  426cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d00:	ins    BYTE PTR es:[edi],dx
  426d01:	(bad)  
  426d02:	adc    al,0x1d
  426d04:	sbb    dl,BYTE PTR [edi-0x7a]
  426d07:	test   al,0x53
  426d09:	jmp    0xd78a:0x65070b8d
  426d10:	cmp    al,0x33
  426d12:	pop    ebx
  426d13:	jo     0x426d40
  426d15:	call   0x97860458
  426d1a:	mov    ebp,0xd1753aac
  426d1f:	cmp    bh,BYTE PTR [edi+edx*1]
  426d22:	jg     0x426d0f
  426d24:	mov    eax,0x350ea968
  426d29:	cli    
  426d2a:	adc    ah,bl
  426d2c:	jl     0x426cec
  426d2e:	std    
  426d2f:	and    DWORD PTR [ebp-0x30],0x58654f29
  426d36:	pop    edx
  426d37:	ret    
  426d38:	cdq    
  426d39:	cwde   
  426d3a:	or     eax,0xd886dc85
  426d3f:	sub    DWORD PTR [eax-0x7e9a4ffc],ebx
  426d45:	shl    DWORD PTR [eax],1
  426d47:	popa   
  426d48:	fs pop ss
  426d4a:	lea    ecx,[edx]
  426d4c:	push   esp
  426d4d:	jae    0x426d78
  426d4f:	xor    bh,ch
  426d51:	popa   
  426d52:	xchg   ah,dh
  426d54:	push   esi
  426d55:	aam    0x62
  426d57:	jmp    0xab3549c8
  426d5c:	and    eax,0x4877e465
  426d61:	arpl   WORD PTR [ecx+0x9efb7fb],dx
  426d67:	outs   dx,BYTE PTR ds:[esi]
  426d68:	cmp    DWORD PTR [edi-0x1c208ed5],ebp
  426d6e:	repz cmp al,0xfa
  426d71:	ds or  eax,0xe0cf2cb5
  426d77:	int3   
  426d78:	cmp    esi,DWORD PTR [esi+0xe70ec5]
  426d7e:	bound  esi,QWORD PTR [ebx]
  426d80:	jp     0x426dbc
  426d82:	pushf  
  426d83:	push   es
  426d84:	fdiv   st(2),st
  426d87:	dec    edi
  426d88:	or     ecx,DWORD PTR [ebp+0x7a]
  426d8b:	push   edx
  426d8c:	(bad)  
  426d8d:	jmp    0x27c2324a
  426d92:	cli    
  426d93:	mov    dl,0x6a
  426d95:	arpl   WORD PTR [edi],cx
  426d97:	xchg   edx,eax
  426d98:	inc    esp
  426d99:	div    BYTE PTR [eax+0x5]
  426d9c:	dec    ebp
  426d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d9e:	pop    edx
  426d9f:	test   ah,ch
  426da1:	inc    ebp
  426da2:	rcr    DWORD PTR [edi],cl
  426da4:	sub    BYTE PTR [ecx-0x68c83dae],cl
  426daa:	imul   edx,DWORD PTR [ebx+0x418087e4],0x5c5d7c52
  426db4:	cdq    
  426db5:	fnsave [ebx+esi*1]
  426db8:	fild   DWORD PTR [ebx+edi*4-0x5]
  426dbc:	or     bl,ah
  426dbe:	cwde   
  426dbf:	sub    cl,BYTE PTR [edi-0x53]
  426dc2:	(bad)  
  426dc3:	adc    al,0x50
  426dc5:	lds    edi,FWORD PTR [ebp-0x5922cfac]
  426dcb:	gs push ecx
  426dcd:	jnp    0x426de6
  426dcf:	nop
  426dd0:	rol    BYTE PTR [eiz*8+0x29d74c69],1
  426dd7:	mov    eax,ds:0xc1f93bdc
  426ddc:	clc    
  426ddd:	add    eax,DWORD PTR [ecx+edi*8+0x3f]
  426de1:	add    BYTE PTR [ebx+edi*1],ah
  426de4:	push   ebp
  426de5:	xchg   esi,eax
  426de6:	nop
  426de7:	cmp    dh,BYTE PTR ds:0x20eab0a1
  426ded:	mov    edx,0xc60c8b2d
  426df2:	mov    esp,0xe50fc802
  426df7:	ficomp WORD PTR [ebx+eax*4]
  426dfa:	xchg   edx,eax
  426dfb:	(bad)  
  426dfc:	jg     0x426da0
  426dfe:	(bad)  
  426dff:	sti    
  426e00:	ret    
  426e01:	xchg   ebx,eax
  426e02:	mov    ebp,esi
  426e04:	xor    DWORD PTR [ecx],ecx
  426e06:	out    dx,al
  426e07:	pop    ss
  426e08:	mov    bh,0xf5
  426e0a:	and    al,0xc6
  426e0c:	cmp    DWORD PTR [ebx+0x57],ebp
  426e0f:	shr    DWORD PTR [eax+0x11b575bc],cl
  426e15:	addr16 (bad) 
  426e17:	out    dx,eax
  426e18:	retf   
  426e19:	mov    ch,BYTE PTR ds:0xaa17e4a0
  426e1f:	je     0x426e0b
  426e21:	ja     0x426e1d
  426e23:	(bad)  
  426e25:	in     eax,dx
  426e26:	jae    0x426e01
  426e28:	add    dh,BYTE PTR [ebp-0x160bdacd]
  426e2e:	pop    es
  426e2f:	aam    0x96
  426e31:	sub    BYTE PTR [edx+0x1c],al
  426e34:	call   0x72068791
  426e39:	sti    
  426e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e3b:	sbb    cl,BYTE PTR [edi+eiz*1-0x29]
  426e3f:	mov    al,ds:0x3d7597e4
  426e44:	lods   al,BYTE PTR ds:[esi]
  426e45:	add    BYTE PTR [ecx+0x1083af56],bl
  426e4b:	das    
  426e4c:	repnz mov ebp,0xb5ade5db
  426e52:	sbb    eax,0xe1ae9604
  426e57:	in     eax,dx
  426e58:	arpl   WORD PTR [ebp-0x43],ax
  426e5b:	shl    DWORD PTR [edx+eiz*1],1
  426e5e:	jbe    0x426df9
  426e60:	pusha  
  426e61:	mov    ebp,0x7e87d03b
  426e66:	fisttp QWORD PTR [edi]
  426e68:	mov    eax,ds:0xe50d9ba5
  426e6d:	(bad)  
  426e6f:	in     eax,0x77
  426e71:	mov    esi,DWORD PTR [esi+0x45]
  426e74:	xchg   esp,eax
  426e75:	js     0x426ee8
  426e77:	aaa    
  426e78:	pop    ebp
  426e79:	int    0x6
  426e7b:	int    0x4e
  426e7d:	std    
  426e7e:	fwait
  426e7f:	iret   
  426e80:	xor    BYTE PTR [edx-0x67],0x9f
  426e84:	push   0x4d
  426e86:	adc    eax,0x4a14d9f8
  426e8b:	loope  0x426e74
  426e8d:	inc    ebp
  426e8e:	cmp    BYTE PTR [ecx-0x53],ch
  426e91:	call   0xec988de3
  426e96:	and    BYTE PTR [eax+ebp*2+0x1e1bcf20],ch
  426e9d:	mov    dh,0xe3
  426e9f:	mov    ch,0x54
  426ea1:	xor    eax,0xb5e12d08
  426ea6:	sub    ch,cl
  426ea8:	test   DWORD PTR [eax],esp
  426eaa:	sub    esp,ecx
  426eac:	aaa    
  426ead:	test   DWORD PTR [esi+0x57e4a78c],0x9de8de54
  426eb7:	pop    edx
  426eb8:	aaa    
  426eb9:	push   edi
  426eba:	mov    ebx,0x8f2aecf5
  426ebf:	pop    ebp
  426ec0:	out    0x7,eax
  426ec2:	sbb    eax,0x3b881189
  426ec7:	jmp    0x426ebf
  426ec9:	mov    bh,0xe5
  426ecb:	adc    esi,edx
  426ecd:	jne    0x426ea4
  426ecf:	push   es
  426ed0:	fst    DWORD PTR [edx+0x79]
  426ed3:	sbb    eax,esp
  426ed5:	rol    DWORD PTR [ebp-0x71],1
  426ed8:	pop    esp
  426ed9:	in     al,0x3c
  426edb:	jg     0x426e8b
  426edd:	call   0x2e5e:0x7b4b5968
  426ee4:	jmp    0x426f32
  426ee6:	adc    cl,ah
  426ee8:	adc    BYTE PTR [ecx-0x8],ah
  426eeb:	mov    dh,0xd0
  426eed:	pop    esp
  426eee:	fcom   st(2)
  426ef0:	stos   BYTE PTR es:[edi],al
  426ef1:	dec    eax
  426ef2:	add    DWORD PTR [eax+0x2b],ebx
  426ef5:	mov    BYTE PTR [ebp-0x32ce9b7d],dl
  426efb:	xchg   DWORD PTR [edx],edi
  426efd:	mov    esp,0xfd201fef
  426f02:	cld    
  426f03:	imul   esp,DWORD PTR [ecx-0x2e4fec0e],0x44277418
  426f0d:	sub    BYTE PTR [edx],0x58
  426f10:	push   esi
  426f11:	push   esi
  426f12:	mov    al,0xea
  426f14:	xor    eax,0xa9701431
  426f19:	ja     0x426edd
  426f1b:	mov    BYTE PTR [ebx+0x32],al
  426f1e:	xor    BYTE PTR [edx+ebp*8-0x63465e2d],bh
  426f25:	outs   dx,DWORD PTR ds:[esi]
  426f26:	ret    0x5281
  426f29:	jb     0x426f67
  426f2b:	jo     0x426eb0
  426f2d:	push   ds
  426f2e:	mov    eax,0xbca7720f
  426f33:	inc    ecx
  426f34:	(bad)  
  426f35:	fidivr DWORD PTR [edx+0x77c7d2c0]
  426f3b:	xor    ebx,DWORD PTR [edi+0x4d]
  426f3e:	mov    edi,0x87fc9187
  426f43:	out    dx,al
  426f44:	je     0x426f42
  426f46:	inc    esp
  426f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f48:	jle    0x426f0f
  426f4a:	and    DWORD PTR [ebp-0x5a],edi
  426f4d:	mov    edi,0x820688f
  426f52:	inc    ebp
  426f53:	outs   dx,DWORD PTR ds:[esi]
  426f54:	pop    edi
  426f55:	in     al,dx
  426f56:	mov    DWORD PTR [edx+eax*8],ebx
  426f59:	push   ss
  426f5a:	sbb    ebx,DWORD PTR [ebx]
  426f5c:	inc    esp
  426f5d:	push   eax
  426f5e:	call   0xa7bab1b6
  426f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f64:	jg     0x426ef5
  426f66:	mov    ch,0x10
  426f68:	adc    ebp,DWORD PTR [edi+0x7b]
  426f6b:	cs push ss
  426f6d:	mov    ecx,0x5df26452
  426f72:	mov    ebx,0xba29c862
  426f77:	adc    eax,0xfd83ba71
  426f7c:	dec    eax
  426f7d:	retf   
  426f7e:	add    eax,0xe4e6762e
  426f83:	loop   0x426f68
  426f85:	pop    ds
  426f86:	cmc    
  426f87:	test   eax,0x6e15ef77
  426f8c:	ins    DWORD PTR es:[edi],dx
  426f8d:	jb     0x426f92
  426f8f:	(bad)  
  426f90:	pop    esi
  426f91:	aas    
  426f92:	daa    
  426f93:	add    BYTE PTR [esp+edi*2-0x3b6914fe],al
  426f9a:	inc    ebp
  426f9b:	rol    DWORD PTR [esi-0x426d3d58],1
  426fa1:	pop    ss
  426fa2:	jnp    0x42700d
  426fa4:	jmp    0x426fb8
  426fa6:	imul   edi,DWORD PTR [ebx],0xffffffda
  426fa9:	sub    BYTE PTR [ecx+0x1f],ah
  426fac:	adc    DWORD PTR [edi+eiz*4],esi
  426faf:	add    al,0xb4
  426fb1:	fs push ebp
  426fb3:	and    eax,0x7daaebc7
  426fb8:	xor    BYTE PTR fs:[edi*1-0x75520da8],dh
  426fc0:	sbb    BYTE PTR [ecx+0x4],cl
  426fc3:	push   ebp
  426fc4:	inc    esi
  426fc5:	push   es
  426fc6:	or     BYTE PTR [eax-0x1836fdd5],bh
  426fcc:	hlt    
  426fcd:	and    BYTE PTR [edi],dh
  426fcf:	xchg   BYTE PTR [ecx],al
  426fd1:	loope  0x426fd8
  426fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fd5:	loope  0x426ffc
  426fd7:	push   WORD PTR ds:0x9a5c
  426fdd:	xor    edx,eax
  426fdf:	adc    eax,ebx
  426fe1:	cld    
  426fe2:	ja     0x42702e
  426fe4:	jl     0x426fe4
  426fe6:	mov    dh,0x54
  426fe8:	or     eax,0xfd443e3e
  426fed:	add    al,0xa7
  426fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ff0:	dec    ecx
  426ff1:	sbb    eax,0xff21e6df
  426ff6:	test   al,0xe0
  426ff8:	enter  0x9262,0x58
  426ffc:	add    DWORD PTR [edi+0x7],edx
  426fff:	mov    edi,0x4e0afdfd
  427004:	out    dx,al
  427005:	xchg   edx,eax
  427006:	pop    eax
  427007:	jns    0x42706e
  427009:	popa   
  42700a:	dec    edx
  42700b:	inc    edi
  42700c:	inc    ebx
  42700d:	adc    al,0xbf
  42700f:	in     eax,0xa4
  427011:	pop    edi
  427012:	dec    esp
  427013:	push   es
  427014:	sub    BYTE PTR [esi-0x44c76f04],bl
  42701a:	les    ecx,FWORD PTR [eax]
  42701c:	jno    0x42708c
  42701e:	ins    BYTE PTR es:[edi],dx
  42701f:	push   eax
  427020:	repz (bad) 
  427022:	pop    ds
  427023:	dec    ebx
  427024:	mov    esi,edx
  427026:	cmp    ch,BYTE PTR [eax+0x0]
  427029:	sub    eax,0x62a80fd9
  42702e:	je     0x427002
  427030:	xchg   ebx,eax
  427031:	sub    eax,eax
  427033:	jg     0x4270a0
  427035:	cwde   
  427036:	push   es
  427037:	mov    ds:0x93f55b37,eax
  42703c:	int    0xc8
  42703e:	aam    0xec
  427040:	dec    edx
  427041:	or     eax,0x263aaf90
  427046:	cmp    ebx,DWORD PTR [ebp-0x71]
  427049:	xor    bh,BYTE PTR [eax]
  42704b:	setle  BYTE PTR [esi-0x4cd09b36]
  427052:	jle    0x427069
  427054:	sub    BYTE PTR [ebx-0x6d],bl
  427057:	int3   
  427058:	sub    BYTE PTR [eax],dh
  42705a:	jno    0x427013
  42705c:	loop   0x427032
  42705e:	inc    esp
  42705f:	lods   eax,DWORD PTR ds:[esi]
  427060:	jecxz  0x426ffb
  427062:	aaa    
  427063:	stos   BYTE PTR es:[edi],al
  427064:	clc    
  427065:	add    bl,BYTE PTR [ebx+0x3c]
  427068:	dec    esp
  427069:	dec    eax
  42706a:	test   al,0x64
  42706c:	and    BYTE PTR [edx-0x6e],0x3f
  427070:	jns    0x4270a8
  427072:	xor    edi,DWORD PTR [ebx]
  427074:	sbb    al,0xee
  427076:	pushf  
  427077:	sub    eax,0x9f512377
  42707c:	(bad)  
  42707d:	retf   0x887f
  427080:	(bad)
  427083:	inc    ebp
  427084:	not    DWORD PTR [eax-0x7b97ac]
  42708a:	imul   bh
  42708c:	stos   DWORD PTR es:[edi],eax
  42708d:	ret    0x869e
  427090:	in     al,dx
  427091:	imul   esi,DWORD PTR [eax-0x34],0x2f
  427095:	pop    ecx
  427096:	aas    
  427097:	les    ebp,FWORD PTR [ebx+eax*4]
  42709a:	and    esi,DWORD PTR [edx+0x6a]
  42709d:	mov    esp,0xe2cc5aea
  4270a2:	mov    ds:0x95e33eba,eax
  4270a7:	(bad)  
  4270a8:	outs   dx,BYTE PTR ds:[esi]
  4270a9:	fist   WORD PTR [eax+0x72]
  4270ac:	call   FWORD PTR [ebx+0x5bc4850f]
  4270b2:	xchg   DWORD PTR [edi-0x38],ecx
  4270b5:	(bad)  
  4270b6:	dec    DWORD PTR [esi-0x46]
  4270b9:	into   
  4270ba:	shl    DWORD PTR [edi],1
  4270bc:	mov    eax,0x79ad341f
  4270c1:	mov    bl,BYTE PTR [ecx]
  4270c3:	sahf   
  4270c4:	push   esp
  4270c5:	or     eax,0xa6914228
  4270ca:	faddp  st(1),st
  4270cc:	pop    ss
  4270cd:	xchg   BYTE PTR [eax+edi*2+0x48],bl
  4270d1:	mov    edi,0xf58cbb5e
  4270d6:	jmp    0x6e8a19b1
  4270db:	dec    esi
  4270dc:	int    0xca
  4270de:	pop    ecx
  4270df:	fisttp QWORD PTR [ecx]
  4270e1:	je     0x4270b2
  4270e3:	leave  
  4270e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270e5:	pop    ebx
  4270e6:	inc    ecx
  4270e7:	(bad)
  4270ea:	(bad)  
  4270eb:	mov    ah,0x4e
  4270ed:	loopne 0x4270f7
  4270ef:	jp     0x42712c
  4270f1:	or     esi,DWORD PTR [edx+0x521019d3]
  4270f7:	in     eax,dx
  4270f8:	arpl   WORD PTR [esi],dx
  4270fa:	in     al,0xed
  4270fc:	pop    ss
  4270fd:	pop    eax
  4270fe:	aas    
  4270ff:	ret    0xbc73
  427102:	pop    ds
  427103:	inc    esi
  427104:	or     eax,0xf78eaab5
  427109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42710a:	mov    al,ds:0x69021f54
  42710f:	js     0x427113
  427111:	mov    ecx,0x4fe31e86
  427116:	stc    
  427117:	jle    0x427184
  427119:	or     edi,DWORD PTR [edx-0xc]
  42711c:	mov    esi,fs
  42711e:	mov    dl,0x77
  427120:	test   eax,0x22ec343b
  427125:	je     0x4270aa
  427127:	mov    ds:0xb138076b,al
  42712c:	bound  ecx,QWORD PTR [esi+0x2db73dc3]
  427132:	xchg   BYTE PTR [ecx+0x75aba4ef],ch
  427138:	or     BYTE PTR [edx+ebp*2-0x795482b5],0x85
  427140:	lea    esp,[ebx]
  427142:	mov    esi,0xcf729f15
  427147:	call   0x74594e8e
  42714c:	adc    al,0xd8
  42714e:	and    esi,ebx
  427150:	enter  0x65aa,0xcc
  427154:	jle    0x427153
  427156:	fs inc esp
  427158:	sub    DWORD PTR [eax+0x3d77f1fb],esi
  42715e:	(bad)  
  427160:	clc    
  427161:	push   ss
  427162:	mov    al,ds:0x13ff61c3
  427167:	mov    bl,0xc0
  427169:	sbb    BYTE PTR ds:0xea995fc6,dl
  42716f:	sahf   
  427170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427171:	mov    BYTE PTR [edx-0xb4b3a66],0x2d
  427178:	rcr    DWORD PTR fs:[esi+0x6a],1
  42717c:	aaa    
  42717d:	fist   DWORD PTR [ecx-0x55]
  427180:	clc    
  427181:	fdivr  QWORD PTR [esi-0x6c84806f]
  427187:	mov    esi,0x64f83dcd
  42718c:	pop    edx
  42718d:	dec    esi
  42718e:	(bad)  
  42718f:	and    edx,DWORD PTR [esi-0x20]
  427192:	loop   0x4271c9
  427194:	mov    ds:0x74156fcf,eax
  427199:	test   DWORD PTR [ecx+0x4fa482a0],0x623a717
  4271a3:	inc    esp
  4271a4:	leave  
  4271a5:	xor    al,0xa1
  4271a7:	icebp  
  4271a8:	inc    esi
  4271a9:	cmp    eax,0x4a600381
  4271ae:	add    BYTE PTR [eax],al
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	pop    edi
  4271bf:	int3   
  4271c0:	je     0x4271ae
  4271c2:	fldl2t 
  4271c4:	add    DWORD PTR [eax],eax
  4271c6:	hlt    
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [edx+0x23ff4ce1],bh
  4271cf:	add    eax,0xed5498d
  4271d4:	(bad)  [edx-0x48]
  4271d7:	mov    edx,0xe4e3c5c
  4271dc:	bound  eax,QWORD PTR [ecx]
  4271de:	dec    edx
  4271df:	fstp   TBYTE PTR [esi+ecx*8+0x1911cd38]
  4271e6:	test   BYTE PTR [edx-0x24],al
  4271e9:	das    
  4271ea:	sar    eax,0x20
  4271ed:	(bad)  
  4271ee:	stc    
  4271ef:	pop    ebx
  4271f0:	cmp    al,0x67
  4271f2:	mov    bl,0x9c
  4271f4:	jae    0x427184
  4271f6:	pop    ecx
  4271f7:	push   0x67
  4271f9:	mov    ch,0xb6
  4271fb:	xor    al,0xcb
  4271fd:	int3   
  4271fe:	pushf  
  4271ff:	xor    eax,0x5ddc5243
  427204:	adc    al,0x89
  427206:	cmp    dh,bh
  427208:	pop    esi
  427209:	int    0x65
  42720b:	mov    esi,DWORD PTR [ebx]
  42720d:	xchg   ebp,eax
  42720e:	ss jecxz 0x4271cf
  427211:	enter  0x8d21,0x8f
  427215:	cmp    al,0xc1
  427217:	sub    esp,ebp
  427219:	je     0x42721c
  42721b:	or     al,0x2f
  42721d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42721e:	pop    esi
  42721f:	retf   
  427220:	pop    eax
  427221:	push   0x15097414
  427226:	pop    ebx
  427227:	cmp    al,0xcf
  427229:	icebp  
  42722a:	inc    eax
  42722b:	cld    
  42722c:	lods   al,BYTE PTR ds:[esi]
  42722d:	mov    cl,BYTE PTR [ecx-0x1c8220e3]
  427233:	out    0xde,eax
  427235:	shl    BYTE PTR [eax+0x1],1
  427238:	cld    
  427239:	scas   al,BYTE PTR es:[edi]
  42723a:	pop    ebx
  42723b:	sbb    esi,DWORD PTR [ebx]
  42723d:	repnz (bad) 
  42723f:	or     eax,0xa11a8646
  427244:	mov    edi,0x36f9bbc1
  427249:	es mov edx,0x46617cb8
  42724f:	xor    eax,0x79213bea
  427254:	push   0x6c54e742
  427259:	loopne 0x4271f9
  42725b:	mov    ecx,0x63574961
  427260:	push   ecx
  427261:	in     al,dx
  427262:	das    
  427263:	ffreep st(1)
  427265:	pusha  
  427266:	mov    esi,?
  427268:	push   edx
  427269:	in     al,0x2a
  42726b:	test   eax,0x8b05d574
  427270:	sbb    DWORD PTR [edx],ecx
  427272:	jge    0x4272ba
  427274:	mov    bh,0x90
  427276:	xchg   ecx,eax
  427277:	sar    BYTE PTR [edx+0x6b],0x46
  42727b:	jo     0x427280
  42727d:	aas    
  42727e:	mov    eax,0xe6f24540
  427283:	xchg   esi,eax
  427284:	sti    
  427285:	add    DWORD PTR [edi+ecx*4-0x6b],ebx
  427289:	pop    ecx
  42728a:	jb     0x427278
  42728c:	sub    eax,DWORD PTR [eax]
  42728e:	mov    ch,0x7a
  427290:	rcl    BYTE PTR [ebx],1
  427292:	outs   dx,BYTE PTR ds:[esi]
  427293:	retf   0x464b
  427296:	mov    DWORD PTR [edx],esp
  427298:	or     BYTE PTR [edi+0x277a3908],bl
  42729e:	or     edi,0x73777b11
  4272a4:	neg    DWORD PTR [esi]
  4272a6:	mov    esi,0xe44caccb
  4272ab:	mov    ecx,0x3b580ab6
  4272b0:	adc    dh,dh
  4272b2:	fiadd  WORD PTR [edx+0x16]
  4272b5:	mov    ebp,0x1a3253de
  4272ba:	cmp    al,0x7c
  4272bc:	jge    0x427277
  4272be:	pop    edi
  4272bf:	in     eax,0x21
  4272c1:	ror    ebx,0x5f
  4272c4:	cdq    
  4272c5:	mov    dh,0x3f
  4272c7:	dec    eax
  4272c8:	pop    ebp
  4272c9:	xor    esi,ebx
  4272cb:	inc    esi
  4272cc:	leave  
  4272cd:	mov    dh,0xcf
  4272cf:	imul   esi,DWORD PTR [edi],0x972c2af6
  4272d5:	xor    eax,0x7eced8c8
  4272da:	xor    BYTE PTR [eax-0x23],bh
  4272dd:	fs test eax,0x16ae1d42
  4272e3:	(bad)  
  4272e4:	adc    dh,BYTE PTR [esi+0x51295869]
  4272ea:	js     0x42730f
  4272ec:	js     0x42729b
  4272ee:	rcr    al,1
  4272f0:	add    BYTE PTR [esi-0x203df355],ch
  4272f6:	add    bl,dl
  4272f8:	adc    DWORD PTR [ebp+ebx*4-0x1c],ecx
  4272fc:	inc    edi
  4272fd:	mov    dl,0x23
  4272ff:	cmp    BYTE PTR [ebp+0x12689a03],dh
  427305:	cdq    
  427306:	les    si,DWORD PTR [edi-0x105463b0]
  42730d:	xor    ah,BYTE PTR [edi-0x16]
  427310:	mov    dh,0xa3
  427312:	popa   
  427313:	push   cs
  427314:	pop    DWORD PTR [edx+0x28709f3e]
  42731a:	cli    
  42731b:	retf   0x8f7c
  42731e:	lods   eax,DWORD PTR ds:[esi]
  42731f:	ficomp WORD PTR [edi+ebp*4-0x74c4b60d]
  427326:	les    ecx,FWORD PTR [edi+edx*1-0x261b96a3]
  42732d:	xor    bh,BYTE PTR [ecx+0xe]
  427330:	xor    dh,BYTE PTR [eax]
  427332:	retf   0xca33
  427335:	xchg   esp,eax
  427336:	scas   al,BYTE PTR es:[edi]
  427337:	outs   dx,DWORD PTR ds:[esi]
  427338:	add    BYTE PTR [edi],0x4e
  42733b:	xchg   DWORD PTR [edx],esp
  42733d:	shr    BYTE PTR [ebp+0x19],cl
  427340:	enter  0xbb7f,0x42
  427344:	sub    esi,DWORD PTR [edx+ebx*4]
  427347:	inc    esi
  427348:	xchg   ebx,eax
  427349:	pushf  
  42734a:	loopne 0x427341
  42734c:	mov    ch,0xec
  42734e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42734f:	add    esp,DWORD PTR [ebx-0x618624b3]
  427355:	mov    dl,0x64
  427357:	das    
  427358:	fdivp  st(4),st
  42735a:	ror    bl,cl
  42735c:	pusha  
  42735d:	outs   dx,BYTE PTR ds:[esi]
  42735e:	inc    ebp
  42735f:	push   edi
  427360:	sub    bh,0x36
  427363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427364:	int3   
  427365:	jae    0x4273d3
  427367:	or     BYTE PTR [esi],ah
  427369:	call   0x4a9e79fc
  42736e:	sub    ecx,esi
  427370:	push   0xfb0ca46
  427375:	fiadd  DWORD PTR [edi+0x6f976e56]
  42737b:	mov    BYTE PTR [edx-0x17935896],bl
  427381:	aaa    
  427382:	outs   dx,DWORD PTR ds:[esi]
  427383:	shl    BYTE PTR [ebx-0x57b3057c],1
  427389:	xchg   edx,eax
  42738a:	mov    eax,0x407a2a7f
  42738f:	je     0x4273b4
  427391:	pop    edi
  427392:	cmp    al,BYTE PTR fs:[eax-0x6ccfcaa9]
  427399:	cmp    bl,BYTE PTR [ebx+0x3cdbfc5]
  42739f:	ret    0x8401
  4273a2:	push   ds
  4273a3:	mov    eax,ds:0x7e2fe204
  4273a8:	or     al,BYTE PTR [eax-0x67]
  4273ab:	mov    eax,0xc395ba37
  4273b0:	lea    eax,[edx-0x62]
  4273b3:	push   ebx
  4273b4:	jecxz  0x42733b
  4273b6:	xchg   edx,eax
  4273b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273b8:	and    DWORD PTR [ecx],0x4f0de3c7
  4273be:	fimul  WORD PTR [edi+0x55]
  4273c1:	mov    WORD PTR [edx-0x4],?
  4273c4:	(bad)  
  4273c6:	sbb    eax,0xc6f2a1c7
  4273cb:	pop    ds
  4273cc:	push   edx
  4273cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273ce:	cdq    
  4273cf:	cmp    DWORD PTR [ebp+0x2c42c0c4],edi
  4273d5:	pop    esi
  4273d6:	lods   eax,DWORD PTR ds:[esi]
  4273d7:	mov    eax,ds:0xeed4af2a
  4273dc:	pushf  
  4273dd:	stc    
  4273de:	adc    DWORD PTR [esi-0x5f2f6617],eax
  4273e4:	jmp    0x427384
  4273e6:	(bad)  
  4273e7:	and    eax,0x9ba2e94
  4273ec:	fsub   DWORD PTR [ebp-0x64]
  4273ef:	pop    es
  4273f0:	(bad)  
  4273f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273f2:	mov    bl,0xf7
  4273f4:	inc    eax
  4273f5:	jno    0x427405
  4273f7:	aad    0x95
  4273f9:	xchg   esp,eax
  4273fa:	and    edi,DWORD PTR [edx-0x4e4d2ab4]
  427400:	mov    ebx,0x3db9e5c7
  427405:	add    eax,0xddc78b59
  42740a:	fmul   DWORD PTR [ebx]
  42740c:	stos   BYTE PTR es:[edi],al
  42740d:	loopne 0x42741d
  42740f:	sbb    dl,BYTE PTR [ecx]
  427411:	lods   eax,DWORD PTR ds:[esi]
  427412:	mov    esi,0x90e957aa
  427417:	ja     0x4273c7
  427419:	push   eax
  42741a:	fild   DWORD PTR [eax]
  42741c:	iret   
  42741d:	sub    bl,BYTE PTR [ebx-0x2e6c28c4]
  427423:	and    BYTE PTR ds:0xddaaeb4e,ch
  427429:	fs cmp al,0xda
  42742c:	pop    ebx
  42742d:	es hlt 
  42742f:	in     eax,dx
  427430:	loop   0x427449
  427432:	jl     0x4273c3
  427434:	jmp    0x4273e6
  427436:	fsubr  DWORD PTR [edi+0x446e84d5]
  42743c:	xchg   edi,eax
  42743d:	jno    0x4274b4
  42743f:	mov    dh,0x8d
  427441:	dec    edx
  427442:	sahf   
  427443:	dec    ebp
  427444:	dec    ecx
  427445:	push   ds
  427446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427447:	mov    esi,ecx
  427449:	and    esi,esp
  42744b:	cmp    esp,esi
  42744d:	jne    0x4274a3
  42744f:	fs clc 
  427451:	dec    edx
  427452:	xor    eax,0xab1fb2c1
  427457:	sub    al,BYTE PTR [edi+0x2b]
  42745a:	imul   ebx,DWORD PTR [edi],0x54
  42745d:	jecxz  0x427423
  42745f:	loopne 0x427477
  427461:	stos   BYTE PTR es:[edi],al
  427462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427463:	(bad)  
  427465:	stos   DWORD PTR es:[edi],eax
  427466:	inc    ebx
  427467:	sbb    ebx,edx
  427469:	ja     0x427407
  42746b:	(bad)  
  42746c:	(bad)  
  42746e:	xor    DWORD PTR [edi-0x33e07ed0],ebp
  427474:	mov    ah,0xef
  427476:	mov    cl,0xf
  427478:	bound  eax,QWORD PTR [esi+0x13]
  42747b:	dec    ebx
  42747c:	cmp    al,0xe6
  42747f:	fwait
  427480:	in     eax,dx
  427481:	ret    0xe1c4
  427484:	loope  0x4274e3
  427486:	push   esi
  427487:	icebp  
  427488:	call   FWORD PTR [ecx]
  42748a:	inc    ebp
  42748b:	inc    edx
  42748c:	mov    edi,0xb158f02a
  427491:	xchg   edx,edx
  427493:	pop    eax
  427494:	(bad)  
  427495:	in     al,0x11
  427497:	push   0x6ddafa56
  42749c:	sub    eax,0x3921e4a2
  4274a1:	fild   DWORD PTR [eax-0x4d]
  4274a4:	push   ebp
  4274a5:	xchg   ebx,eax
  4274a6:	in     al,0xaa
  4274a8:	sbb    BYTE PTR [ebp-0xd],bh
  4274ab:	xor    dh,bh
  4274ad:	aad    0xfd
  4274af:	xor    ecx,DWORD PTR [esi+0x4446991]
  4274b5:	mov    edi,0x3e329464
  4274ba:	pop    eax
  4274bb:	daa    
  4274bc:	mov    dh,0x3c
  4274be:	fs loop 0x427497
  4274c1:	jge    0x427446
  4274c3:	mov    edi,0xc0f7fc59
  4274c8:	mov    cl,0xe1
  4274ca:	daa    
  4274cb:	fistp  QWORD PTR [ecx-0x47]
  4274ce:	inc    eax
  4274cf:	fucom  st(4)
  4274d1:	ficomp DWORD PTR [ebx]
  4274d3:	or     cl,BYTE PTR [esi-0x1f]
  4274d6:	loopne 0x42745e
  4274d8:	mov    cl,0x1
  4274da:	jp     0x427550
  4274dc:	popf   
  4274dd:	icebp  
  4274de:	shl    BYTE PTR [eax+0x7e07536a],1
  4274e4:	aad    0x5a
  4274e6:	mov    bl,0xb4
  4274e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274e9:	jne    0x4274a7
  4274eb:	loop   0x4274f1
  4274ed:	sub    dl,al
  4274ef:	popf   
  4274f0:	lods   eax,DWORD PTR ds:[esi]
  4274f1:	jg     0x4274a2
  4274f3:	in     eax,dx
  4274f4:	sub    BYTE PTR [eax-0x2630623e],cl
  4274fa:	out    dx,al
  4274fb:	fbld   TBYTE PTR [ebp-0x7e0506dd]
  427501:	or     esp,DWORD PTR ds:0xbc90f32e
  427507:	sti    
  427508:	inc    esi
  427509:	sbb    eax,0x34f35303
  42750e:	adc    DWORD PTR [esp+ecx*1+0x4d],ebx
  427512:	mov    dh,0x6
  427514:	scas   al,BYTE PTR es:[edi]
  427515:	pop    ds
  427516:	(bad)  
  427517:	xchg   esp,eax
  427518:	rcr    BYTE PTR ds:[esi+0x5f0be96],cl
  42751f:	pop    ebp
  427520:	push   edx
  427521:	jecxz  0x42758a
  427523:	xchg   esi,eax
  427524:	sub    eax,0xa18c0397
  427529:	pop    esi
  42752a:	ss and al,0xf1
  42752d:	addr16 inc ebx
  42752f:	(bad)  
  427530:	retf   0xe9d6
  427533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427534:	push   eax
  427535:	lods   al,BYTE PTR ds:[esi]
  427536:	mov    ds:0xaffa5abb,al
  42753c:	hlt    
  42753d:	mov    ah,BYTE PTR [edi+0x3b3744f5]
  427543:	inc    esp
  427544:	mov    ds:0xeb350435,eax
  427549:	inc    eax
  42754a:	outs   dx,DWORD PTR ds:[esi]
  42754b:	stos   BYTE PTR es:[edi],al
  42754c:	pop    edx
  42754d:	mov    ds:0xd682096b,eax
  427552:	mov    dh,0xb
  427554:	xchg   esp,eax
  427555:	cmp    ebp,DWORD PTR [ebx-0x356b8ca0]
  42755b:	and    BYTE PTR [ebx-0x62],0x9b
  42755f:	(bad)  
  427560:	ds jne 0x42752d
  427563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427564:	dec    ecx
  427565:	pop    edi
  427566:	pop    ds
  427567:	xchg   ebx,eax
  427568:	outs   dx,DWORD PTR ds:[esi]
  427569:	mov    ?,WORD PTR [edx]
  42756b:	jmp    FWORD PTR [ebp+0x3f774fcd]
  427571:	mov    bl,0x36
  427573:	test   eax,0xc29533c7
  427578:	adc    ah,BYTE PTR [ebp+0x68]
  42757b:	ficom  DWORD PTR [eax-0x5c]
  42757e:	adc    BYTE PTR [esi-0x30727d1e],ah
  427584:	inc    ebx
  427585:	dec    edi
  427586:	jp     0x4275a5
  427588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427589:	leave  
  42758a:	add    DWORD PTR [eax],edi
  42758c:	ror    BYTE PTR [edx],0x55
  42758f:	shr    BYTE PTR [esi-0x4470c70],cl
  427595:	ins    BYTE PTR es:[edi],dx
  427596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427597:	cwde   
  427598:	out    dx,al
  427599:	scas   al,BYTE PTR es:[edi]
  42759a:	mov    al,0xcf
  42759c:	xor    edx,DWORD PTR [edx]
  42759e:	stc    
  42759f:	shl    DWORD PTR [ebx],1
  4275a1:	pop    edi
  4275a2:	imul   edi,edi,0xffffff8d
  4275a5:	and    BYTE PTR [edx+0x17a9aa7f],bl
  4275ab:	xor    DWORD PTR [esi-0x248586f9],eax
  4275b1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4275b3:	(bad)  
  4275b5:	ret    
  4275b6:	adc    BYTE PTR [ebx+ecx*8+0x5996a933],0x87
  4275be:	xor    edi,DWORD PTR [edx]
  4275c0:	fwait
  4275c1:	in     eax,dx
  4275c2:	nop
  4275c3:	push   edx
  4275c4:	ret    0xfaa6
  4275c7:	(bad)  
  4275c8:	int3   
  4275c9:	pop    ss
  4275ca:	scas   al,BYTE PTR es:[edi]
  4275cb:	inc    esi
  4275cc:	(bad)  
  4275cd:	dec    edi
  4275ce:	jl     0x4275c9
  4275d0:	test   BYTE PTR [edi-0x31],dh
  4275d3:	scas   eax,DWORD PTR es:[edi]
  4275d4:	test   eax,0x9532ae73
  4275d9:	push   es
  4275da:	mov    eax,0x507f1263
  4275df:	cwde   
  4275e0:	nop
  4275e1:	xchg   esp,eax
  4275e2:	mov    bh,0x23
  4275e4:	ja     0x427651
  4275e6:	outs   dx,BYTE PTR ds:[esi]
  4275e7:	(bad)  
  4275e8:	fs ret 0x950f
  4275ec:	mov    eax,0x1b46548
  4275f1:	pushf  
  4275f2:	sahf   
  4275f3:	(bad)  
  4275f4:	mov    dh,0x49
  4275f6:	stc    
  4275f7:	in     al,dx
  4275f8:	or     esp,edx
  4275fa:	test   DWORD PTR [esi-0x4ec6b5e3],edx
  427600:	add    DWORD PTR ds:0xe64e27dd,0x2aa01358
  42760a:	dec    ebx
  42760b:	mov    ch,0xe
  42760d:	into   
  42760e:	push   cs
  42760f:	jb     0x4275c8
  427611:	lods   eax,DWORD PTR ds:[esi]
  427612:	call   0x17b9:0xa1550c3
  427619:	inc    edi
  42761a:	scas   eax,DWORD PTR es:[edi]
  42761b:	mov    ds:0xd29717bb,al
  427620:	test   BYTE PTR [esi+0x58],0x95
  427624:	and    ah,bh
  427626:	arpl   WORD PTR [esi],cx
  427628:	cld    
  427629:	dec    edi
  42762a:	sbb    eax,0x503807df
  42762f:	or     eax,0x8b7bc4b6
  427634:	sub    bl,BYTE PTR [edi-0xd6319c4]
  42763a:	fidivr WORD PTR [esp+ebx*2-0x5e]
  42763e:	adc    DWORD PTR gs:[eax-0x1],ecx
  427642:	sub    edx,DWORD PTR [ebx]
  427644:	push   ss
  427645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427646:	mov    edi,0x3f59be95
  42764b:	fldcw  WORD PTR [eax-0x37]
  42764e:	fmul   st,st(3)
  427650:	adc    ebx,0x59
  427653:	and    edi,edi
  427655:	adc    DWORD PTR [edx+0x69],esi
  427658:	aaa    
  427659:	jno    0x42769f
  42765b:	pop    esi
  42765c:	inc    esp
  42765d:	outs   dx,BYTE PTR ds:[esi]
  42765e:	fadd   st,st(4)
  427660:	jo     0x42763a
  427662:	adc    DWORD PTR [eax],edi
  427664:	dec    edx
  427665:	sub    eax,0x4c767194
  42766a:	ja     0x427625
  42766c:	out    dx,eax
  42766d:	pop    ebx
  42766e:	dec    eax
  42766f:	xor    bh,al
  427671:	out    dx,al
  427672:	lahf   
  427673:	push   es
  427674:	fistp  QWORD PTR [esi]
  427676:	push   esi
  427677:	cmp    eax,0x83f984c7
  42767c:	loop   0x427643
  42767e:	les    edx,FWORD PTR [ebx-0x5b06ebcd]
  427684:	imul   edx,eax,0xab08f928
  42768a:	mov    al,ds:0x12a73d63
  42768f:	and    BYTE PTR [edi-0x7a75d0e2],bh
  427695:	fidiv  DWORD PTR [eax-0x5cb9e890]
  42769b:	int    0x65
  42769d:	xchg   esp,eax
  42769e:	jmp    0x427639
  4276a0:	arpl   WORD PTR [esi-0x46cf296d],sp
  4276a6:	jo     0x427651
  4276a8:	and    eax,0x5f61393b
  4276ad:	gs pop eax
  4276af:	sbb    DWORD PTR [edx-0x831248c],ebp
  4276b5:	dec    ebx
  4276b6:	shl    ebp,0xb6
  4276b9:	(bad)  
  4276ba:	push   edi
  4276bb:	xchg   ebp,eax
  4276bc:	in     al,0x93
  4276be:	add    BYTE PTR [eax],al
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0xff91c3b
  4276cf:	lock cmp BYTE PTR [ebx+0x1eecd],ch
  4276d6:	hlt    
  4276d7:	add    al,0x0
  4276d9:	add    BYTE PTR [esi+edx*1+0x609a4ef5],cl
  4276e0:	sar    DWORD PTR [esi],0xee
  4276e3:	push   es
  4276e4:	push   ds
  4276e5:	mov    dl,0x5c
  4276e7:	pop    esp
  4276e8:	int3   
  4276e9:	jg     0x427737
  4276eb:	cmp    eax,0x2df759e8
  4276f0:	mov    ch,0x5c
  4276f2:	inc    ebp
  4276f3:	inc    edx
  4276f4:	or     BYTE PTR ds:0xf5e14d42,al
  4276fa:	pop    eax
  4276fb:	pushf  
  4276fc:	div    BYTE PTR [eax-0x74]
  4276ff:	jmp    0xd6d9e59d
  427704:	lods   eax,DWORD PTR ds:[esi]
  427705:	and    al,0x76
  427707:	sbb    dh,BYTE PTR [eax+0x74747a53]
  42770d:	dec    esp
  42770e:	pop    esp
  42770f:	lea    esi,[ebx+0x1e]
  427712:	ret    0xf257
  427715:	dec    esp
  427716:	xor    bh,BYTE PTR [eax-0x6b36d8a4]
  42771c:	not    al
  42771e:	cdq    
  42771f:	cmp    ah,ch
  427721:	(bad)
  427725:	pop    ds
  427726:	mov    eax,0x4916555e
  42772b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42772c:	jp     0x42775d
  42772e:	cmp    DWORD PTR [esi+0x26f1f7d0],edx
  427734:	(bad)  
  427735:	repz add al,0x8f
  427738:	add    bh,0x28
  42773b:	mov    edx,0x3cabedcf
  427740:	inc    ebp
  427741:	ficomp WORD PTR [eax+esi*2+0x5f317ae0]
  427748:	in     eax,dx
  427749:	ds jb  0x4276e4
  42774c:	mov    BYTE PTR [edi+edx*2],bh
  42774f:	push   ss
  427750:	jno    0x427735
  427752:	fisttp QWORD PTR [eax-0x30]
  427755:	in     al,dx
  427756:	jge    0x427783
  427758:	fs int 0x2a
  42775b:	adc    BYTE PTR [ecx],cl
  42775d:	xchg   al,bl
  42775f:	dec    ebx
  427760:	das    
  427761:	(bad)  
  427762:	xor    DWORD PTR [ebx],edx
  427764:	jnp    0x427744
  427766:	stos   BYTE PTR es:[edi],al
  427767:	jno    0x427703
  427769:	mov    ah,0xcb
  42776b:	cmp    edi,ebx
  42776d:	sub    cl,dh
  42776f:	jp     0x427727
  427771:	retf   0x69c0
  427774:	xchg   edx,ebx
  427776:	nop
  427777:	cmp    BYTE PTR [eax],bh
  427779:	adc    bl,bh
  42777b:	and    BYTE PTR [ebp+0x7c521ee0],bh
  427781:	xchg   DWORD PTR [esi-0x44c9a229],edi
  427787:	call   0xe000a563
  42778c:	dec    ebx
  42778d:	jle    0x42773c
  42778f:	loopne 0x427751
  427791:	jnp    0x4277dd
  427793:	pop    eax
  427794:	(bad)  
  427795:	push   edx
  427796:	in     eax,dx
  427797:	jl     0x4277ec
  427799:	mov    ebp,DWORD PTR [esp-0x8]
  42779d:	in     eax,dx
  42779e:	mov    eax,0x8aa99948
  4277a3:	inc    ecx
  4277a4:	clc    
  4277a5:	cwde   
  4277a6:	lods   al,BYTE PTR ds:[esi]
  4277a7:	jbe    0x42779f
  4277a9:	hlt    
  4277aa:	dec    esi
  4277ab:	add    cl,BYTE PTR [edi]
  4277ad:	shr    ah,1
  4277af:	push   ebx
  4277b0:	jbe    0x427746
  4277b2:	js     0x4277ca
  4277b4:	pop    eax
  4277b5:	mov    edi,0xc83fa030
  4277ba:	rcl    DWORD PTR [ebp-0x29],0x5f
  4277be:	test   al,0x2
  4277c0:	imul   ebp,esp,0x3b2c739a
  4277c6:	push   eax
  4277c7:	mov    esp,?
  4277c9:	jl     0x427846
  4277cb:	into   
  4277cc:	pop    DWORD PTR [edx]
  4277ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277cf:	pop    es
  4277d0:	out    0xa5,eax
  4277d2:	addr16 nop
  4277d4:	das    
  4277d5:	sub    al,0x95
  4277d7:	mov    ecx,0xb2c1dd4
  4277dc:	(bad)  
  4277de:	in     al,dx
  4277df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277e0:	jmp    0xec41:0xa4597cc5
  4277e7:	mov    dh,0xec
  4277e9:	mov    edx,0x2b496d3c
  4277ee:	mov    edx,0xbfaf632a
  4277f3:	push   edi
  4277f4:	clc    
  4277f5:	push   cs
  4277f6:	daa    
  4277f7:	mov    ah,0x54
  4277f9:	outs   dx,DWORD PTR ds:[esi]
  4277fa:	iret   
  4277fb:	dec    ebp
  4277fc:	add    al,0x39
  4277fe:	cmp    bl,BYTE PTR [ebp-0x29132652]
  427804:	clc    
  427805:	xchg   eax,eax
  427807:	xor    al,0x86
  427809:	loop   0x4277f9
  42780b:	xlat   BYTE PTR ds:[ebx]
  42780c:	push   cs
  42780d:	pop    ds
  42780e:	(bad)  
  42780f:	xchg   esi,eax
  427810:	sbb    DWORD PTR [edx-0x13ccaa22],0x59987990
  42781a:	retf   
  42781b:	(bad)  
  42781c:	aaa    
  42781d:	adc    BYTE PTR [ebp+0x493f41a6],cl
  427823:	mov    esi,DWORD PTR ds:0x97403ee6
  427829:	xchg   ebx,eax
  42782a:	inc    esi
  42782b:	test   DWORD PTR es:[edi+0x64941d41],0x14650e63
  427836:	mov    dl,ah
  427838:	sbb    esi,0xec7411d0
  42783e:	mov    edi,0x62e383a0
  427843:	adc    edi,0xfffffff7
  427846:	lsl    ebp,WORD PTR [eax+0x22]
  42784a:	sub    eax,0x382da502
  42784f:	gs js  0x4278a4
  427852:	push   0x25
  427854:	xor    al,0x2d
  427856:	adc    al,0x59
  427858:	in     al,0x3b
  42785a:	mov    al,ds:0xbcb3a5d4
  42785f:	stc    
  427860:	jmp    0x93a9:0xe6e33432
  427867:	jmp    0xe65:0x648091da
  42786e:	add    BYTE PTR [ebx],dl
  427870:	adc    DWORD PTR [esi],0xac0b77e8
  427876:	clc    
  427877:	mov    bh,0x23
  427879:	mov    ecx,0xcbcea1c8
  42787e:	dec    eax
  42787f:	ins    BYTE PTR es:[edi],dx
  427880:	sub    esi,DWORD PTR [ebp-0x19c07ee1]
  427886:	(bad)  
  427887:	xchg   edx,eax
  427888:	in     al,0xef
  42788a:	dec    eax
  42788b:	pop    es
  42788c:	rol    BYTE PTR [edi+0x6d57c2d],cl
  427892:	rcr    BYTE PTR [ebx+0x17d29280],0x57
  427899:	jbe    0x427896
  42789b:	xchg   edx,eax
  42789c:	sub    ch,bl
  42789e:	push   esi
  42789f:	test   DWORD PTR [ecx-0x26865a82],esi
  4278a5:	cmp    al,al
  4278a7:	jge    0x4278b9
  4278a9:	xor    DWORD PTR [ebx-0x61],edx
  4278ac:	outs   dx,BYTE PTR fs:[esi]
  4278ae:	add    BYTE PTR [ecx+0x112959a0],cl
  4278b4:	jne    0x427867
  4278b6:	dec    ebp
  4278b7:	fcom   QWORD PTR [ebx+0x6b]
  4278ba:	and    ebp,ecx
  4278bc:	scas   al,BYTE PTR es:[edi]
  4278bd:	push   ecx
  4278be:	dec    eax
  4278bf:	jmp    0x427863
  4278c1:	(bad)  
  4278c3:	mov    esp,0x473ce02e
  4278c8:	add    bh,BYTE PTR [ecx]
  4278ca:	inc    eax
  4278cb:	fidiv  DWORD PTR [ecx]
  4278cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278ce:	arpl   cx,sp
  4278d0:	dec    ecx
  4278d1:	gs and eax,0x59a9cba8
  4278d7:	shl    DWORD PTR [esi-0x77],1
  4278da:	iret   
  4278db:	das    
  4278dc:	jbe    0x42785e
  4278de:	jecxz  0x427868
  4278e0:	jge    0x4278fe
  4278e2:	push   edx
  4278e3:	pop    ecx
  4278e4:	pop    es
  4278e5:	out    0x34,eax
  4278e7:	mov    edx,0xf760463b
  4278ec:	jecxz  0x427939
  4278ee:	jge    0x427969
  4278f0:	sub    BYTE PTR ds:0x4c98c83f,cl
  4278f6:	retf   0x1c4
  4278f9:	jl     0x42793e
  4278fb:	sub    al,0x1e
  4278fd:	mov    esp,0xc1b8cca3
  427902:	dec    edi
  427903:	push   edi
  427904:	xchg   ecx,eax
  427905:	imul   edx,ecx,0xffffffc6
  427908:	jb     0x4278c5
  42790a:	xchg   edi,eax
  42790b:	jmp    0xb57e539a
  427910:	inc    eax
  427911:	mov    bl,0x2
  427913:	xchg   BYTE PTR [edi+0x17909c22],dl
  427919:	call   0xa25a:0x18acb4a
  427920:	pushf  
  427921:	or     BYTE PTR [edi+0x3e],al
  427924:	mov    ecx,0x4f560b9f
  427929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42792a:	outs   dx,BYTE PTR ds:[esi]
  42792b:	cli    
  42792c:	scas   al,BYTE PTR es:[edi]
  42792d:	jmp    0x42793c
  42792f:	xor    BYTE PTR [eax],ah
  427931:	or     al,0x40
  427933:	inc    ebp
  427934:	shr    BYTE PTR [edx-0x8],cl
  427937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427938:	inc    ecx
  427939:	(bad)  
  42793a:	jo     0x4278d0
  42793c:	sub    eax,0x8cee228a
  427941:	xlat   BYTE PTR ds:[ebx]
  427942:	sub    eax,DWORD PTR [ebx-0x61]
  427945:	xor    esi,ebp
  427947:	mov    esp,0x64cfa864
  42794c:	add    DWORD PTR [ecx+0x79],0x42e1c181
  427953:	push   ds
  427954:	push   0xfa39b7c
  427959:	comiss xmm5,xmm6
  42795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42795d:	add    edi,edi
  42795f:	push   ecx
  427960:	push   ds
  427961:	add    al,0x56
  427963:	ss push edx
  427965:	cmp    ch,BYTE PTR [ecx-0x33]
  427968:	lahf   
  427969:	lock stos DWORD PTR es:[edi],eax
  42796b:	rcr    DWORD PTR [edx-0x7],cl
  42796e:	mov    fs,ebp
  427970:	mov    edi,0xbd094a64
  427975:	mov    bh,0xa
  427977:	call   0x47d8a84f
  42797c:	gs dec ecx
  42797e:	lds    edi,FWORD PTR [edx+0x75]
  427981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427982:	mov    eax,0x551c901d
  427987:	adc    DWORD PTR [esi+0x5],eax
  42798a:	pop    ds
  42798b:	xchg   edx,eax
  42798c:	pop    edx
  42798d:	cmc    
  42798e:	pushf  
  42798f:	adc    bh,BYTE PTR [eax-0x2130eb3a]
  427995:	icebp  
  427996:	lahf   
  427997:	je     0x427919
  427999:	mov    cl,0x7c
  42799b:	cmp    BYTE PTR [ecx-0x24260ace],bl
  4279a1:	mov    esp,0x4e856aa9
  4279a6:	imul   edi,esp,0x8d8d4f71
  4279ac:	jne    0x427940
  4279ae:	dec    eax
  4279af:	or     ecx,esp
  4279b1:	lods   al,BYTE PTR ds:[esi]
  4279b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279b3:	mov    DWORD PTR [edx+0x77],0xe97dbf5f
  4279ba:	jb     0x4279c3
  4279bc:	xor    ebp,DWORD PTR [ecx-0x1]
  4279bf:	xor    ebx,DWORD PTR es:[ebp+0x19707a29]
  4279c6:	jl     0x427a0a
  4279c8:	fdivr  QWORD PTR [edx-0x26]
  4279cb:	ja     0x42798d
  4279cd:	add    BYTE PTR [edx+0x71],al
  4279d0:	mov    esi,0xe7009257
  4279d5:	pop    ebx
  4279d6:	jnp    0x427993
  4279d8:	dec    ebx
  4279d9:	fisubr WORD PTR [esi+ecx*4-0x80]
  4279dd:	lods   eax,DWORD PTR ds:[esi]
  4279de:	mov    edx,0x250ef283
  4279e3:	mov    eax,DWORD PTR [edx+eiz*4-0x32a4b78c]
  4279ea:	sti    
  4279eb:	(bad)  
  4279ec:	xchg   esp,eax
  4279ed:	adc    al,0xda
  4279ef:	addr16 xor cl,cl
  4279f2:	mov    ecx,DWORD PTR [esi+0x22]
  4279f5:	and    edx,edi
  4279f7:	out    dx,eax
  4279f8:	sar    BYTE PTR [eax+0x39],0xe5
  4279fc:	xor    DWORD PTR [edx+0x13],edx
  4279ff:	bound  ebp,QWORD PTR cs:0x769fd86a
  427a06:	mov    edi,0x4b809ce3
  427a0b:	in     eax,dx
  427a0c:	in     al,dx
  427a0d:	mov    esp,0xc4fae01d
  427a12:	or     dl,BYTE PTR [ebp+0x50]
  427a15:	mov    ebp,0xd7f92264
  427a1a:	sub    BYTE PTR [ebx+0x1e5d204a],0xe0
  427a21:	fistp  DWORD PTR [ecx-0x642e8bbb]
  427a27:	ja     0x427a7b
  427a29:	xchg   BYTE PTR [ecx-0x60343ffe],bh
  427a2f:	rcl    BYTE PTR [esi],cl
  427a31:	sub    eax,0x1e6f8284
  427a36:	jbe    0x4279cb
  427a38:	jno    0x4279d6
  427a3a:	add    ecx,DWORD PTR [edi]
  427a3c:	fmul   QWORD PTR [esi+0xf6d1a41]
  427a42:	pushf  
  427a43:	add    BYTE PTR ds:[ebx+0x9],bh
  427a47:	xchg   BYTE PTR ds:0x6655bff9,dh
  427a4d:	push   ds
  427a4e:	les    edi,FWORD PTR [ecx-0x68]
  427a51:	(bad)  
  427a53:	bnd jo 0x427a1a
  427a56:	mov    ah,0xb6
  427a58:	xchg   ebx,eax
  427a59:	mov    ch,0xc4
  427a5b:	pop    ecx
  427a5c:	mov    ?,WORD PTR [edx+0x51]
  427a5f:	inc    ecx
  427a60:	stos   DWORD PTR es:[edi],eax
  427a61:	pop    DWORD PTR [ebp+0x5664ac7d]
  427a67:	ds xor edx,esi
  427a6a:	mov    ecx,0x666e24e3
  427a6f:	mov    ecx,0x176651c7
  427a74:	adc    bl,dl
  427a76:	xor    DWORD PTR ss:[esi],esi
  427a79:	xchg   DWORD PTR ds:0xc2624362,esp
  427a7f:	push   es
  427a80:	sbb    DWORD PTR [ebx-0x3f],eax
  427a83:	mov    bp,0xca0d
  427a87:	jmp    0xeffc1cdf
  427a8c:	or     DWORD PTR [ecx+eax*8],ecx
  427a8f:	fst    DWORD PTR [ecx*2-0x718c553c]
  427a96:	je     0x427a42
  427a98:	retf   0xc901
  427a9b:	inc    ebx
  427a9c:	aaa    
  427a9d:	(bad)  
  427a9e:	das    
  427a9f:	mov    dh,0x59
  427aa1:	adc    esi,ecx
  427aa3:	dec    ecx
  427aa4:	in     al,0x5b
  427aa6:	add    al,0xd1
  427aa8:	xlat   BYTE PTR ds:[ebx]
  427aa9:	sub    BYTE PTR [ecx+0x32575e],0xf1
  427ab0:	xor    bl,0x4e
  427ab3:	lea    ebx,[esi+0x74]
  427ab6:	mov    ds:0x7b3941c3,al
  427abb:	cmp    cl,BYTE PTR [edx+0x26d0f2db]
  427ac1:	inc    edi
  427ac2:	mov    eax,ds:0x6ac32f33
  427ac7:	ror    BYTE PTR fs:[edx-0x19],cl
  427acb:	cmc    
  427acc:	jecxz  0x427ab5
  427ace:	shl    BYTE PTR ds:0xcaf3946e,0x7c
  427ad5:	sti    
  427ad6:	adc    eax,DWORD PTR [ebp-0x40741a00]
  427adc:	push   ecx
  427add:	jmp    0x427b3b
  427adf:	in     eax,0xbe
  427ae1:	in     al,0x8a
  427ae3:	dec    esp
  427ae4:	inc    edx
  427ae5:	adc    ebx,DWORD PTR [ebp+0x57]
  427ae8:	push   ds
  427ae9:	jbe    0x427b40
  427aeb:	adc    bl,bh
  427aed:	into   
  427aee:	pusha  
  427aef:	dec    edi
  427af0:	je     0x427ade
  427af2:	fsubp  st(1),st
  427af4:	mov    esp,0x4ddc5c89
  427af9:	out    0xa7,al
  427afb:	test   eax,0x45aae4a
  427b00:	xchg   esp,eax
  427b01:	sbb    DWORD PTR [ecx+0x79],0x11
  427b05:	js     0x427b07
  427b07:	xchg   BYTE PTR [esi],bl
  427b09:	pop    ds
  427b0a:	pusha  
  427b0b:	jmp    0x427b61
  427b0d:	add    esi,DWORD PTR [ecx-0x4b]
  427b10:	outs   dx,BYTE PTR ds:[esi]
  427b11:	nop
  427b12:	sub    al,BYTE PTR [edx]
  427b14:	sbb    al,0xb3
  427b16:	pop    esp
  427b17:	xchg   edx,eax
  427b18:	mov    ecx,0xcbc1080c
  427b1d:	fsubr  DWORD PTR [esi+0xc6f1e28]
  427b23:	test   BYTE PTR [ecx],ah
  427b25:	sub    DWORD PTR [eax+0x5704208a],ebx
  427b2b:	xor    esp,DWORD PTR [esi+0x68cb5f4d]
  427b31:	and    eax,0x814cadc
  427b36:	fwait
  427b37:	inc    esi
  427b38:	mov    eax,ds:0x5c935242
  427b3d:	(bad)  
  427b3e:	mov    ds:0x907ebead,al
  427b43:	cmp    BYTE PTR [esi+ebx*4+0x78],al
  427b47:	xchg   edx,eax
  427b48:	ja     0x427b03
  427b4a:	push   eax
  427b4b:	sub    BYTE PTR [edi+esi*2-0x61c681ce],cl
  427b52:	lock cld 
  427b54:	add    al,BYTE PTR [ebx]
  427b56:	and    eax,0xb32246c3
  427b5b:	sub    ebx,ebx
  427b5d:	fsub   DWORD PTR [ebp-0x45fa7c07]
  427b63:	fsubr  QWORD PTR [edx+0x5e]
  427b66:	fnstsw WORD PTR [esi+0x3bea13af]
  427b6c:	(bad)  
  427b6d:	sti    
  427b6e:	jmp    0x427b07
  427b70:	xchg   DWORD PTR [ebp+0x19],esp
  427b73:	cdq    
  427b74:	jbe    0x427bd5
  427b76:	clc    
  427b77:	fadd   DWORD PTR [ebp-0x5a4094a7]
  427b7d:	dec    ebx
  427b7e:	push   0x2d
  427b80:	pop    ebx
  427b81:	lahf   
  427b82:	push   ebp
  427b83:	outs   dx,BYTE PTR ds:[esi]
  427b84:	addr16 popa 
  427b86:	push   esi
  427b87:	and    eax,0xf0964e50
  427b8c:	in     al,dx
  427b8d:	inc    edx
  427b8e:	scas   al,BYTE PTR es:[edi]
  427b8f:	pop    ebp
  427b90:	pop    esi
  427b91:	in     al,dx
  427b92:	and    edx,DWORD PTR [esi+0x332dc58c]
  427b98:	push   cs
  427b99:	sub    edx,DWORD PTR [edi+0x622993c]
  427b9f:	dec    ebp
  427ba0:	addr16 push cs
  427ba2:	dec    ecx
  427ba3:	jecxz  0x427b34
  427ba5:	in     al,dx
  427ba6:	mov    ah,0xd5
  427ba8:	push   ecx
  427ba9:	push   esi
  427baa:	push   ecx
  427bab:	movsx  edi,WORD PTR [esi-0x1a]
  427baf:	mov    WORD PTR [ecx-0x1e],cs
  427bb2:	clc    
  427bb3:	call   0x6b99ef01
  427bb8:	pop    ecx
  427bb9:	lods   al,BYTE PTR ds:[esi]
  427bba:	(bad)  
  427bbb:	shl    DWORD PTR [eax+0x1b],cl
  427bbe:	xchg   ebx,eax
  427bbf:	sub    BYTE PTR [edx-0x80],dl
  427bc2:	jp     0x427bcc
  427bc4:	call   0x2ced:0x4a69d84c
  427bcb:	cmp    DWORD PTR [ecx],ecx
  427bcd:	add    BYTE PTR fs:[eax],al
  427bd0:	add    BYTE PTR [eax],al
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x6681e2d0
  427be0:	inc    edi
  427be1:	test   cl,al
  427be3:	repz add DWORD PTR [eax],eax
  427be6:	hlt    
  427be7:	add    al,0x0
  427be9:	add    dl,ah
  427beb:	inc    ecx
  427bec:	jns    0x427b91
  427bee:	pop    eax
  427bef:	sub    esi,esi
  427bf1:	xchg   DWORD PTR [edi-0x3b],ebx
  427bf4:	loopne 0x427c5f
  427bf6:	xlat   BYTE PTR ds:[ebx]
  427bf7:	push   0x5fe8934f
  427bfc:	mov    ?,esi
  427bfe:	retf   0x2a9c
  427c01:	xchg   ebx,eax
  427c02:	jae    0x427c04
  427c04:	fild   WORD PTR [esi-0x220a238]
  427c0a:	daa    
  427c0b:	push   eax
  427c0c:	jmp    0x427b96
  427c0e:	cdq    
  427c0f:	push   edi
  427c10:	adc    eax,eax
  427c12:	xchg   edx,eax
  427c13:	enter  0xf3ea,0x58
  427c17:	cdq    
  427c18:	xor    eax,0x99e0899d
  427c1d:	lods   al,BYTE PTR ds:[esi]
  427c1e:	dec    ecx
  427c1f:	xchg   DWORD PTR ds:0x321b0285,ebx
  427c25:	or     BYTE PTR [edx],0x31
  427c28:	inc    edi
  427c29:	jp     0x427c5a
  427c2b:	std    
  427c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c2d:	add    eax,0x2a1d7032
  427c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c33:	inc    esi
  427c34:	loope  0x427c99
  427c36:	cmp    al,BYTE PTR [edi-0x4d]
  427c39:	js     0x427c42
  427c3b:	fcomp  QWORD PTR [eax]
  427c3d:	fadd   DWORD PTR [esi-0x632a0b5a]
  427c43:	lods   eax,DWORD PTR ds:[esi]
  427c44:	(bad)  
  427c45:	mov    al,ds:0x19389c43
  427c4a:	data16 (bad) 
  427c4c:	adc    al,0x37
  427c4e:	fadd   QWORD PTR [esi-0x1]
  427c51:	in     al,0xa
  427c53:	mov    ebx,0xe78b0790
  427c58:	jmp    0x427c48
  427c5a:	cmpps  xmm7,XMMWORD PTR [edi],0xaf
  427c5e:	in     eax,dx
  427c5f:	inc    edi
  427c60:	pop    esp
  427c61:	mov    ebp,ecx
  427c63:	lahf   
  427c64:	iret   
  427c65:	adc    BYTE PTR [ecx-0x58],0x3c
  427c69:	xor    eax,0x5aec13a0
  427c6e:	daa    
  427c6f:	dec    ebx
  427c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c71:	mov    bl,0xed
  427c73:	fst    st(2)
  427c75:	adc    ebx,DWORD PTR [eax+0xf47cd1e]
  427c7b:	jae    0x427cbe
  427c7d:	sbb    dl,dh
  427c7f:	jae    0x427c67
  427c81:	es pop ds
  427c83:	mov    ss:0x5ae0b70c,eax
  427c89:	fwait
  427c8a:	int3   
  427c8b:	dec    ebx
  427c8c:	inc    esp
  427c8d:	mov    ah,0xc6
  427c8f:	jae    0x427c7d
  427c91:	rcl    DWORD PTR [esi-0x3739f34],1
  427c97:	pop    ss
  427c98:	test   DWORD PTR [ecx-0x1c],ebx
  427c9b:	sti    
  427c9c:	push   0xfffffffc
  427c9e:	dec    esi
  427c9f:	lods   eax,DWORD PTR ds:[esi]
  427ca0:	mov    edx,db4
  427ca3:	cmc    
  427ca4:	sbb    ecx,ecx
  427ca6:	and    eax,DWORD PTR [edx]
  427ca8:	jae    0x427d16
  427caa:	xchg   ebp,eax
  427cab:	mov    eax,ds:0x1251796
  427cb0:	stos   DWORD PTR es:[edi],eax
  427cb1:	int3   
  427cb2:	push   ds
  427cb3:	data16 addr16 mov bl,0x7a
  427cb7:	mov    dh,0x77
  427cb9:	(bad)  [eax+esi*2+0x5264aef4]
  427cc0:	test   eax,0x9ca237d4
  427cc5:	movaps xmm2,XMMWORD PTR [edx-0x25f4154f]
  427ccc:	or     eax,0xd74fc08f
  427cd1:	and    al,0x9c
  427cd3:	mov    cl,0xca
  427cd5:	push   ss
  427cd6:	jnp    0x427d2e
  427cd8:	pop    ebp
  427cd9:	cmp    al,ah
  427cdb:	mov    BYTE PTR [ebx-0x52],ch
  427cde:	add    al,0x90
  427ce0:	sbb    al,0x7c
  427ce2:	cmc    
  427ce3:	sub    ecx,DWORD PTR [edi+eiz*8]
  427ce6:	icebp  
  427ce7:	adc    edx,DWORD PTR [eax]
  427ce9:	out    dx,eax
  427cea:	mov    al,ds:0x3cc99c63
  427cef:	ds inc edi
  427cf1:	xor    BYTE PTR [esi+eax*8+0x32186433],dl
  427cf8:	fwait
  427cf9:	cmp    eax,0xde14b9de
  427cfe:	jg     0x427d7f
  427d00:	sbb    BYTE PTR [esi],dh
  427d02:	mov    dh,0xed
  427d04:	std    
  427d05:	inc    esi
  427d06:	adc    dl,BYTE PTR [eax-0x60]
  427d09:	sub    ebp,DWORD PTR [ecx+ecx*1-0x460931d0]
  427d10:	jl     0x427cc0
  427d12:	or     al,0xf
  427d14:	test   DWORD PTR ds:0x399560db,0xa21a9ede
  427d1e:	mov    cl,0x1c
  427d20:	mov    bh,bh
  427d22:	popa   
  427d23:	push   es
  427d24:	lods   eax,DWORD PTR ds:[esi]
  427d25:	and    DWORD PTR [ecx],edx
  427d27:	and    DWORD PTR es:[esi],ebx
  427d2a:	mov    bh,0x1c
  427d2c:	nop
  427d2d:	xchg   ecx,eax
  427d2e:	or     eax,0xd280d6c7
  427d33:	retf   0x8f50
  427d36:	retf   0x2fae
  427d39:	scas   eax,DWORD PTR es:[edi]
  427d3a:	icebp  
  427d3b:	lahf   
  427d3c:	popa   
  427d3d:	jmp    0x427d61
  427d3f:	add    ah,BYTE PTR [edx-0x6ce6ced8]
  427d45:	rcr    DWORD PTR [edi-0x2088fe9c],0x97
  427d4c:	pop    edx
  427d4d:	repz pop ds
  427d4f:	imul   ebx,ecx,0x8fa2db50
  427d55:	jbe    0x427d43
  427d57:	add    al,0x16
  427d59:	mov    bl,0x57
  427d5b:	push   es
  427d5c:	in     al,0x7c
  427d5e:	mov    ch,0x69
  427d60:	in     al,0xcb
  427d62:	and    bh,BYTE PTR ds:0x1abf7cd0
  427d68:	leave  
  427d69:	inc    esi
  427d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d6b:	fsubr  DWORD PTR [eax+0x67114ff9]
  427d71:	pop    ebx
  427d72:	sbb    al,0x7b
  427d74:	lds    edi,FWORD PTR [eax-0x35]
  427d77:	ins    DWORD PTR es:[edi],dx
  427d78:	jno    0x427d78
  427d7a:	add    ah,BYTE PTR [ebp+0x3d3a84d9]
  427d80:	icebp  
  427d81:	add    BYTE PTR ds:0x10fcb968,al
  427d87:	mov    WORD PTR [esi+0x4a1a06e6],ds
  427d8d:	fiadd  WORD PTR ds:0x2f41190c
  427d93:	xor    al,0xe4
  427d95:	push   eax
  427d96:	ret    0xfcb3
  427d99:	jbe    0x427dea
  427d9b:	jnp    0x427d74
  427d9d:	mul    DWORD PTR [eax-0xf]
  427da0:	aam    0x0
  427da2:	(bad)  
  427da3:	js     0x427d5d
  427da5:	adc    esp,DWORD PTR [ebx+ebp*4-0x3c]
  427da9:	mov    ds,WORD PTR [ebp-0x35f3625d]
  427daf:	jae    0x427dce
  427db1:	in     al,dx
  427db2:	dec    esp
  427db3:	and    edi,DWORD PTR [ecx+eiz*1-0x6e]
  427db7:	xchg   esi,eax
  427db8:	stos   DWORD PTR es:[edi],eax
  427db9:	(bad)  
  427dba:	mov    al,0x1c
  427dbc:	mov    gs,WORD PTR [edx+0x7b101899]
  427dc2:	out    dx,eax
  427dc3:	push   cs
  427dc4:	rcr    DWORD PTR [esi],0x8d
  427dc7:	jne    0x427dfa
  427dc9:	mov    ebx,0xea7a2599
  427dce:	pushf  
  427dcf:	inc    ecx
  427dd0:	lds    ecx,FWORD PTR [ecx]
  427dd2:	push   edx
  427dd3:	xor    edi,DWORD PTR [esi]
  427dd5:	enter  0xac92,0x90
  427dd9:	cwde   
  427dda:	out    0x58,eax
  427ddc:	add    eax,0x3027111c
  427de1:	pop    ss
  427de2:	ja     0x427e49
  427de4:	jo     0x427e08
  427de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427de7:	sbb    al,0x2
  427de9:	inc    eax
  427dea:	mov    ebx,0x4c4d1cdd
  427def:	mov    ah,BYTE PTR ds:0x36f16cd0
  427df5:	inc    ecx
  427df6:	lahf   
  427df7:	ins    DWORD PTR es:[edi],dx
  427df8:	scas   al,BYTE PTR es:[edi]
  427df9:	pushf  
  427dfa:	push   DWORD PTR [ecx+0x238bd364]
  427e00:	enter  0x2644,0x4d
  427e04:	(bad)  
  427e05:	pop    edi
  427e06:	and    eax,0xe1366258
  427e0b:	push   edx
  427e0c:	sub    eax,0x6ddcc6b5
  427e11:	cmp    edx,edx
  427e13:	mov    esp,edx
  427e15:	push   es
  427e16:	xor    DWORD PTR [esi],eax
  427e18:	test   eax,0x1c34474
  427e1d:	fnstcw WORD PTR [ebp-0x37530efb]
  427e23:	popa   
  427e24:	test   DWORD PTR [esi+0x79],0x966515ff
  427e2b:	adc    BYTE PTR [ebp-0x6bf6d405],ch
  427e31:	xor    edx,DWORD PTR [ebx]
  427e33:	mov    ds:0xca254b71,eax
  427e38:	mov    ebx,0x7f2840d2
  427e3d:	sub    esi,DWORD PTR [esi+0x40]
  427e40:	jb     0x427e9e
  427e42:	cli    
  427e43:	or     eax,0xec28eccc
  427e48:	dec    eax
  427e49:	inc    ebx
  427e4a:	enter  0x1d5,0xe6
  427e4e:	adc    al,0x52
  427e50:	sti    
  427e51:	fsub   QWORD PTR [esi]
  427e53:	repnz icebp 
  427e55:	mov    cs,WORD PTR [ecx+0x641e5bee]
  427e5b:	neg    ecx
  427e5d:	cmp    BYTE PTR [ecx],ah
  427e5f:	ja     0x427e7b
  427e61:	stos   BYTE PTR es:[edi],al
  427e62:	mov    eax,ds:0xf7734a86
  427e67:	test   BYTE PTR [eax+eax*4+0x13d3ca32],bh
  427e6e:	cmp    eax,0x8581d6f3
  427e73:	int3   
  427e74:	nop
  427e75:	xchg   esp,eax
  427e76:	cmp    bl,BYTE PTR [edi+0x3b]
  427e79:	int    0xcf
  427e7b:	sub    BYTE PTR [ebp+0x2462646],0x1d
  427e82:	scas   al,BYTE PTR es:[edi]
  427e83:	jae    0x427e73
  427e85:	(bad)  
  427e86:	or     al,0xb2
  427e88:	(bad)  {k7}{z}
  427e8d:	xchg   edi,eax
  427e8e:	sbb    eax,DWORD PTR [eax+0x1]
  427e91:	xchg   BYTE PTR [esi+0x448c2a04],dl
  427e97:	or     cl,BYTE PTR [ecx-0x4cec7824]
  427e9d:	adc    eax,0x310055cb
  427ea2:	fwait
  427ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ea4:	stos   DWORD PTR es:[edi],eax
  427ea5:	xor    ah,BYTE PTR [esi]
  427ea7:	(bad)  
  427ea8:	lahf   
  427ea9:	retf   
  427eaa:	xchg   ecx,eax
  427eab:	push   eax
  427eac:	push   es
  427ead:	mov    ch,BYTE PTR [edi]
  427eaf:	inc    ebx
  427eb0:	sbb    edx,DWORD PTR ds:0x80c644d8
  427eb6:	mov    ch,0x60
  427eb8:	adc    esi,DWORD PTR [ecx]
  427eba:	mov    edx,0xf43f5807
  427ebf:	call   0x489e:0x3ec1f727
  427ec6:	jbe    0x427e90
  427ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ec9:	mov    eax,0x47c11b8e
  427ece:	sbb    BYTE PTR [edi+0x6f],dl
  427ed1:	fisub  DWORD PTR [edx-0x7a]
  427ed4:	into   
  427ed5:	jbe    0x427efb
  427ed7:	adc    ah,ch
  427ed9:	jno    0x427f4f
  427edb:	sbb    DWORD PTR [edi+0x2e9e01c0],ecx
  427ee1:	mov    al,0xec
  427ee3:	sub    DWORD PTR [ebx],0x11
  427ee6:	push   ecx
  427ee7:	aam    0x60
  427ee9:	cmp    DWORD PTR [esi-0x1575429c],ebx
  427eef:	cmp    al,0x59
  427ef1:	test   BYTE PTR [ecx-0xab73f97],ah
  427ef7:	hlt    
  427ef8:	ss and al,0x23
  427efb:	push   esp
  427efc:	sbb    al,0x51
  427efe:	pusha  
  427eff:	xor    dh,BYTE PTR [esi+0x535c8f21]
  427f05:	(bad)  
  427f06:	jmp    0x427f4e
  427f08:	mov    esi,0x83542d86
  427f0d:	inc    eax
  427f0e:	adc    al,0x88
  427f10:	push   ebp
  427f11:	test   DWORD PTR [eax+0xd],ebx
  427f14:	ins    DWORD PTR es:[edi],dx
  427f15:	pusha  
  427f16:	imul   ebx,DWORD PTR [ecx+ecx*2],0x59d666ef
  427f1d:	jb     0x427eea
  427f1f:	mov    bl,0x82
  427f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f22:	push   ecx
  427f23:	icebp  
  427f24:	(bad)  
  427f25:	loope  0x427f9f
  427f27:	mov    ah,0xa1
  427f29:	mov    ecx,0x23ef9488
  427f2e:	adc    BYTE PTR [esi+eiz*8+0x61d2e140],0x22
  427f36:	test   BYTE PTR ds:0x8a236072,dl
  427f3c:	and    al,0x93
  427f3e:	jmp    0x2116c08e
  427f43:	xor    al,0x2c
  427f45:	test   DWORD PTR [eax-0x4a],edi
  427f48:	sbb    eax,DWORD PTR [edi-0x47]
  427f4b:	jmp    0xf2a5:0xed7c9127
  427f52:	cmp    al,0xe7
  427f54:	push   cs
  427f55:	ja     0x427f68
  427f57:	pop    eax
  427f58:	sub    esp,DWORD PTR ds:0x26703745
  427f5e:	xor    al,0x1c
  427f60:	mov    bl,0xfd
  427f62:	and    DWORD PTR [ebx-0x5f],edi
  427f65:	jecxz  0x427f2b
  427f67:	xchg   DWORD PTR [esi],eax
  427f69:	pop    ecx
  427f6a:	cld    
  427f6b:	arpl   dx,ax
  427f6d:	fisub  DWORD PTR [esi-0x25]
  427f70:	out    dx,al
  427f71:	cmc    
  427f72:	loope  0x427fb5
  427f74:	push   ebp
  427f75:	lods   eax,DWORD PTR ds:[esi]
  427f76:	outs   dx,BYTE PTR ds:[esi]
  427f77:	repnz or bh,BYTE PTR [ebp-0x14]
  427f7b:	(bad)  
  427f7c:	lods   al,BYTE PTR ds:[esi]
  427f7d:	in     eax,0x27
  427f7f:	xchg   esp,eax
  427f80:	mov    gs,ebp
  427f82:	fild   DWORD PTR [ebp-0x1f0bd2f7]
  427f88:	mov    ds:0xfa4eec54,al
  427f8d:	ret    0x826b
  427f90:	je     0x427f61
  427f92:	adc    ecx,DWORD PTR ds:0x857cfcfe
  427f98:	mov    ecx,0xb8d291b8
  427f9d:	les    esi,FWORD PTR [eax-0x1c0fe2df]
  427fa3:	mov    eax,ds:0xdebb27
  427fa8:	xchg   BYTE PTR [edx-0x48],cl
  427fab:	push   0xffffff8b
  427fad:	add    al,0x79
  427faf:	sub    ebp,eax
  427fb1:	push   eax
  427fb2:	leave  
  427fb3:	shl    DWORD PTR ds:0x9eafc5be,cl
  427fb9:	mov    cs,WORD PTR [ebx+0x21]
  427fbc:	push   edi
  427fbd:	push   edx
  427fbe:	xchg   edi,eax
  427fbf:	cmp    bl,BYTE PTR [ebx-0xe]
  427fc2:	jb     0x427f65
  427fc4:	mov    edi,0xcb68ed1d
  427fc9:	push   0x2101028b
  427fce:	adc    eax,DWORD PTR [ecx-0x3867a602]
  427fd4:	(bad)  
  427fd5:	jg     0x427f97
  427fd7:	pop    ecx
  427fd8:	or     dl,BYTE PTR [esi+0x7c]
  427fdb:	xor    al,0x55
  427fdd:	sbb    BYTE PTR [esi],0xb2
  427fe0:	inc    DWORD PTR [ecx+ebx*1]
  427fe3:	dec    esi
  427fe4:	mov    bl,0x9d
  427fe6:	add    al,0x7f
  427fe8:	je     0x42803d
  427fea:	cmc    
  427feb:	(bad)
  427fee:	leave  
  427fef:	add    al,0xba
  427ff1:	add    DWORD PTR [esp+ebp*1-0x31],0x9e16653
  427ff9:	(bad)  
  427ffa:	repnz call 0xfd25:0xeb03cccc
  428002:	shl    DWORD PTR [edx],1
  428004:	mov    esi,0x53dcbb25
  428009:	lahf   
  42800a:	sub    eax,0xa980acd7
  42800f:	jne    0x428019
  428011:	ret    
  428012:	hlt    
  428013:	iret   
  428014:	aaa    
  428015:	pop    edx
  428016:	sbb    al,0x54
  428018:	mov    ds:0xe1adf2fa,eax
  42801d:	imul   DWORD PTR [ecx+0x4c]
  428020:	dec    esi
  428021:	sbb    dh,BYTE PTR [edx]
  428023:	add    DWORD PTR [ebp-0x10909bc7],ebx
  428029:	dec    ebx
  42802a:	pop    edx
  42802b:	fidivr WORD PTR [edx-0x1e]
  42802e:	xchg   esi,eax
  42802f:	mov    bl,0xf6
  428031:	test   DWORD PTR [edi],edi
  428033:	xchg   ebp,eax
  428034:	sub    ah,ah
  428036:	repnz enter 0xde8e,0xee
  42803b:	int    0x94
  42803d:	jmp    0xaca8f6f3
  428042:	fs jae 0x428004
  428045:	leave  
  428046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428047:	add    DWORD PTR [edi-0x34],esi
  42804a:	test   eax,0x463b53fa
  42804f:	mov    dh,0x9c
  428051:	push   esp
  428052:	inc    esi
  428053:	fisubr DWORD PTR [edi-0x6cd84a6e]
  428059:	lods   eax,DWORD PTR ds:[esi]
  42805a:	int    0xb7
  42805c:	jmp    0x12a23a92
  428061:	leave  
  428062:	jb     0x4280cc
  428064:	push   ecx
  428065:	inc    edi
  428066:	lods   al,BYTE PTR ds:[esi]
  428067:	jns    0x42805f
  428069:	sbb    al,0x5e
  42806b:	jnp    0x42805d
  42806d:	neg    al
  42806f:	(bad)  
  428070:	shr    BYTE PTR [ebp-0x26],0x1a
  428074:	(bad)  
  428075:	in     eax,dx
  428076:	shr    ch,1
  428078:	jl     0x428060
  42807a:	js     0x428088
  42807c:	cmp    eax,0x9d6fd40a
  428081:	mov    dl,0x42
  428083:	rcl    BYTE PTR [edi],cl
  428085:	ror    ch,1
  428087:	lock dec eax
  428089:	adc    edi,esp
  42808b:	pop    ebx
  42808c:	jns    0x4280c8
  42808e:	aam    0x25
  428090:	bound  edx,QWORD PTR [ebx+0x192c559c]
  428096:	add    edi,DWORD PTR [edi+esi*1-0x7a]
  42809a:	mov    cl,BYTE PTR [edx+0x36]
  42809d:	inc    esp
  42809e:	(bad)  
  42809f:	sub    ecx,esi
  4280a1:	loopne 0x428052
  4280a3:	xor    dl,BYTE PTR [ecx+0x64]
  4280a6:	stos   DWORD PTR es:[edi],eax
  4280a7:	sbb    edx,0x2ba57168
  4280ad:	in     eax,0xa2
  4280af:	sti    
  4280b0:	hlt    
  4280b1:	push   edi
  4280b2:	cmp    BYTE PTR [edi+0x38b5d6b9],bh
  4280b8:	js     0x428062
  4280ba:	xor    BYTE PTR [eax],0xe0
  4280bd:	xchg   esp,eax
  4280be:	sahf   
  4280bf:	clc    
  4280c0:	int    0xc5
  4280c2:	cmp    eax,0x865d041f
  4280c7:	test   BYTE PTR [esi+esi*2],dh
  4280ca:	ins    DWORD PTR es:[edi],dx
  4280cb:	adc    eax,0xc551b186
  4280d0:	push   ebx
  4280d1:	mov    ecx,0x9603f70a
  4280d6:	into   
  4280d7:	xor    DWORD PTR [edi],eax
  4280d9:	add    BYTE PTR [esp+eax*4-0x36],ah
  4280dd:	inc    BYTE PTR [eax]
  4280df:	add    BYTE PTR [eax],al
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx+0x7f2768be]
  4280ef:	lods   al,BYTE PTR ds:[esi]
  4280f0:	inc    BYTE PTR [edx+0x1f8b5]
  4280f6:	out    0x4,eax
  4280f8:	add    BYTE PTR [eax],al
  4280fa:	mov    esi,0x590fc982
  4280ff:	out    0x98,al
  428101:	test   eax,ecx
  428103:	push   ebp
  428104:	lods   eax,DWORD PTR ds:[esi]
  428105:	(bad)  
  428106:	or     esp,DWORD PTR [ebx]
  428108:	mov    ch,0x88
  42810a:	enter  0x8b38,0x1d
  42810e:	dec    ecx
  42810f:	push   ecx
  428110:	sbb    al,0x76
  428112:	push   ebp
  428113:	inc    edi
  428114:	stc    
  428115:	sar    BYTE PTR [eax+0x2be700f1],cl
  42811b:	mov    ds:0x9532a6ab,al
  428120:	int3   
  428121:	lds    ebp,FWORD PTR ds:0x7a7b57e3
  428127:	jmp    0x31a0304f
  42812c:	(bad)  
  42812e:	add    BYTE PTR [edx-0x36],al
  428131:	les    esp,FWORD PTR [edx]
  428133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428134:	jns    0x4281ac
  428136:	sub    DWORD PTR [eax+0x1],ebx
  428139:	jns    0x42819a
  42813b:	dec    edi
  42813c:	adc    DWORD PTR [esi],ebp
  42813e:	fbstp  TBYTE PTR [edx+0x29]
  428141:	sub    ch,al
  428143:	(bad)  
  428144:	jmp    0x428133
  428146:	lds    esp,FWORD PTR [edi+esi*1+0x7b332015]
  42814d:	cmp    al,0xe4
  42814f:	jae    0x428170
  428151:	mov    eax,0x7e54eac2
  428156:	nop
  428157:	mov    ah,0x0
  428159:	std    
  42815a:	add    al,0xe0
  42815c:	fdivr  st,st(4)
  42815e:	out    dx,al
  42815f:	push   es
  428160:	jecxz  0x428102
  428162:	loop   0x428170
  428164:	pop    esp
  428165:	repnz dec esi
  428167:	or     dh,0x68
  42816a:	and    DWORD PTR [eax+0x62a66b27],ecx
  428170:	mov    esi,0xbd5b09da
  428175:	dec    eax
  428176:	and    ebx,DWORD PTR [edx+0x4]
  428179:	sub    eax,0x22560be8
  42817e:	addr16 popa 
  428180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428181:	cmp    DWORD PTR [ebx-0x72],ecx
  428184:	fisttp DWORD PTR [ebx+0x40]
  428187:	iret   
  428188:	dec    ebx
  428189:	(bad)  
  42818a:	dec    edi
  42818b:	jmp    0x50de3ca4
  428190:	xchg   ebx,eax
  428191:	xchg   ebp,eax
  428192:	(bad)  
  428193:	sbb    al,0x3a
  428195:	mov    ebp,0xa7f6d8b3
  42819a:	cs repz and dl,BYTE PTR ss:[eax+0x21]
  4281a0:	sub    bl,BYTE PTR [esi+0x31]
  4281a3:	loopne 0x4281f5
  4281a5:	adc    bh,BYTE PTR [ecx-0x56]
  4281a8:	hlt    
  4281a9:	outs   dx,DWORD PTR ds:[esi]
  4281aa:	jl     0x428211
  4281ac:	nop
  4281ad:	xor    bh,bl
  4281af:	ins    BYTE PTR es:[edi],dx
  4281b0:	add    esi,edx
  4281b2:	inc    eax
  4281b3:	cmp    DWORD PTR ds:0x97a35b9b,ecx
  4281b9:	pop    ds
  4281ba:	into   
  4281bb:	loop   0x428207
  4281bd:	or     eax,DWORD PTR [edi]
  4281bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281c0:	mov    ebp,0x68d8bd5e
  4281c5:	push   eax
  4281c6:	dec    bp
  4281c8:	push   0xfffffffd
  4281ca:	mov    ebx,0x723d21fe
  4281cf:	xchg   esi,eax
  4281d0:	scas   al,BYTE PTR es:[edi]
  4281d1:	mov    esi,0xe30679da
  4281d6:	mov    al,cs:0xaa65d17f
  4281dc:	wbinvd 
  4281de:	mov    edx,0x5f2d33b6
  4281e3:	mov    eax,ds:0x12a1100b
  4281e8:	mov    ecx,0x148badb8
  4281ed:	int3   
  4281ee:	ins    BYTE PTR es:[edi],dx
  4281ef:	stc    
  4281f0:	push   0x9305bd15
  4281f5:	sbb    al,0x70
  4281f7:	push   esi
  4281f8:	pushf  
  4281f9:	in     eax,0x5a
  4281fb:	rol    DWORD PTR ds:0xeb619936,0x1d
  428202:	jmp    0x428217
  428204:	mov    edi,DWORD PTR [edi+0x38]
  428207:	cs mov dh,0xbb
  42820a:	xor    ah,BYTE PTR [ebx-0x37]
  42820d:	sub    DWORD PTR [edi+0x43],0x4d4e7665
  428214:	(bad)  
  428216:	je     0x428259
  428218:	and    eax,0xa1f591df
  42821d:	out    0x80,al
  42821f:	pop    esi
  428220:	jge    0x4281cd
  428222:	iret   
  428223:	pop    esp
  428224:	push   edx
  428225:	adc    al,0x4b
  428227:	repz call 0x76a2:0xddeeded5
  42822f:	ins    DWORD PTR es:[edi],dx
  428230:	xor    ch,BYTE PTR [eax+0xd]
  428233:	loop   0x428263
  428235:	inc    edi
  428236:	jb     0x4282af
  428238:	pop    ds
  428239:	call   0x40433d5b
  42823e:	jmp    0x3bb229c2
  428243:	pop    ss
  428244:	cmp    eax,ebp
  428246:	dec    edx
  428247:	(bad)  [ecx]
  428249:	outs   dx,BYTE PTR ds:[esi]
  42824a:	ins    DWORD PTR es:[edi],dx
  42824b:	ja     0x428232
  42824d:	loope  0x42823d
  42824f:	xor    DWORD PTR [ebp-0x13175ae8],ebp
  428255:	arpl   ax,bp
  428257:	mov    bl,0xe
  428259:	xor    dl,BYTE PTR [esi+0x24]
  42825c:	enter  0xc04f,0xa1
  428260:	clc    
  428261:	push   ebx
  428262:	add    DWORD PTR [edi],eax
  428264:	out    dx,eax
  428265:	jae    0x4281f9
  428267:	cmp    BYTE PTR [eax-0x2c],cl
  42826a:	or     al,0x27
  42826c:	jl     0x4282b8
  42826e:	and    al,0xff
  428270:	rcr    DWORD PTR [edi-0x34],cl
  428273:	xchg   ebx,eax
  428274:	data16 jg 0x428225
  428277:	cmp    BYTE PTR [edi+0x4f],dh
  42827a:	jmp    0xdee5:0x1e00672a
  428281:	stc    
  428282:	iret   
  428283:	jns    0x42828f
  428285:	xchg   BYTE PTR [edi],dl
  428287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428288:	les    esp,FWORD PTR [edx]
  42828a:	(bad)  
  42828b:	(bad)  
  42828d:	or     dl,al
  42828f:	lock ror DWORD PTR ss:[eax-0x67426344],1
  428297:	mov    cs,WORD PTR [eax-0x263de492]
  42829d:	inc    edi
  42829e:	inc    ebx
  42829f:	jo     0x428290
  4282a1:	or     al,0x5a
  4282a3:	cmc    
  4282a4:	jmp    0x428323
  4282a6:	repz inc edx
  4282a8:	sub    al,BYTE PTR [eax-0x61]
  4282ab:	and    al,BYTE PTR [ebx-0x60]
  4282ae:	dec    ecx
  4282af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282b0:	retf   0xcf99
  4282b3:	jae    0x42823a
  4282b5:	xor    al,0xfa
  4282b7:	mov    ch,0xa5
  4282b9:	sbb    al,0xcb
  4282bb:	jmp    0x42829b
  4282bd:	mov    bl,0x79
  4282bf:	cwde   
  4282c0:	test   BYTE PTR ds:0xe65a411,bl
  4282c6:	sub    dl,dl
  4282c8:	mov    DWORD PTR [edx+0x673e85fb],0x8774279d
  4282d2:	bound  edi,QWORD PTR [edi+0x2963e9c4]
  4282d8:	imul   ebp,esp,0xa
  4282db:	scas   eax,DWORD PTR es:[edi]
  4282dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282dd:	jge    0x4282f8
  4282df:	pop    ebp
  4282e0:	aas    
  4282e1:	push   edi
  4282e2:	dec    eax
  4282e3:	or     bh,BYTE PTR [bx+di-0x7601]
  4282e8:	dec    esi
  4282e9:	cdq    
  4282ea:	pop    esi
  4282eb:	push   0x90ea6b2e
  4282f0:	and    al,0x61
  4282f2:	lods   al,BYTE PTR ds:[esi]
  4282f3:	dec    edx
  4282f4:	cmp    DWORD PTR [edi],esp
  4282f6:	adc    edi,DWORD PTR [esi-0xc60589f]
  4282fc:	xor    al,dl
  4282fe:	mov    cl,0xe6
  428300:	test   eax,0xae0cfcb0
  428305:	adc    DWORD PTR [eax-0x249f75e9],ebp
  42830b:	fist   DWORD PTR [esi-0x4b]
  42830e:	sysexit 
  428310:	xlat   BYTE PTR ds:[ebx]
  428311:	lock push ss
  428313:	mov    eax,0xb9f30252
  428318:	jno    0x428385
  42831a:	sbb    ah,BYTE PTR [ebx+edi*2-0x71]
  42831e:	rcr    BYTE PTR [ebx-0x6ef84227],0xed
  428325:	cdq    
  428326:	sar    DWORD PTR [esi-0x1e],0xfd
  42832a:	lea    eax,[ebp-0x40b9f843]
  428330:	imul   BYTE PTR [ebp+0x3dcc175a]
  428336:	and    BYTE PTR [eax-0x2cb2c72a],ah
  42833c:	jne    0x428331
  42833e:	in     al,dx
  42833f:	mov    ebp,0x244d9763
  428344:	in     al,dx
  428345:	in     al,0xff
  428347:	xchg   ebx,eax
  428348:	dec    edi
  428349:	into   
  42834a:	sub    eax,0xb15e427c
  42834f:	rcr    BYTE PTR [ecx],cl
  428351:	push   ebp
  428352:	bound  esi,QWORD PTR [esp-0x10]
  428356:	jle    0x428311
  428358:	lea    edx,[ecx]
  42835a:	xchg   esp,eax
  42835b:	jge    0x42834e
  42835d:	in     al,0x16
  42835f:	std    
  428360:	jg     0x428315
  428362:	fld    DWORD PTR [ebp+0x10]
  428365:	fist   DWORD PTR [ecx-0x80]
  428368:	stos   BYTE PTR es:[edi],al
  428369:	mov    ebp,0x3a3fb32c
  42836e:	push   ss
  42836f:	retf   
  428370:	dec    eax
  428371:	xor    BYTE PTR [eax+0x40f8a9ad],bh
  428377:	test   eax,0x31040076
  42837c:	jbe    0x4283c0
  42837e:	aaa    
  42837f:	aam    0xe6
  428381:	jg     0x4283d7
  428383:	sbb    BYTE PTR [edx+0x4365e594],cl
  428389:	pop    edi
  42838a:	push   eax
  42838b:	sbb    BYTE PTR [ecx],ch
  42838d:	out    0xf2,eax
  42838f:	repz cli 
  428391:	mov    DWORD PTR [edx-0x19ebf112],ebp
  428397:	mov    edi,0x929f2798
  42839c:	shl    DWORD PTR [edi+0x7e06227d],cl
  4283a2:	pop    edx
  4283a3:	cmp    bh,al
  4283a5:	imul   ebx,DWORD PTR [eax+0x37],0xffffff81
  4283a9:	sar    BYTE PTR [edx],1
  4283ab:	test   BYTE PTR [edx],cl
  4283ad:	fdivr  DWORD PTR [eax]
  4283af:	push   ds
  4283b0:	mov    esi,0xbec60bc3
  4283b5:	push   esp
  4283b6:	mov    edx,0x642853eb
  4283bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283bc:	push   eax
  4283bd:	ds mov ebx,ebx
  4283c0:	fnop   
  4283c2:	mov    dh,ch
  4283c4:	(bad)  
  4283c5:	inc    esp
  4283c6:	add    ecx,edi
  4283c8:	jg     0x42839a
  4283ca:	scas   al,BYTE PTR es:[edi]
  4283cb:	and    DWORD PTR [edi],ebx
  4283cd:	sub    al,0x23
  4283cf:	cld    
  4283d0:	push   cs
  4283d1:	popa   
  4283d2:	and    ch,bh
  4283d4:	sub    eax,0xcd77c5de
  4283d9:	mov    ebp,DWORD PTR [esi+0x41]
  4283dc:	pop    ebp
  4283dd:	xchg   esp,eax
  4283de:	and    dl,BYTE PTR [esi+0x3]
  4283e1:	pop    DWORD PTR [edx+0x8]
  4283e4:	sub    BYTE PTR [edx],bh
  4283e6:	xlat   BYTE PTR ds:[ebx]
  4283e7:	in     al,0x41
  4283e9:	sub    DWORD PTR [ecx],0xffffffb7
  4283ec:	bound  edx,QWORD PTR [eax-0x387e340d]
  4283f2:	cwde   
  4283f3:	xor    ch,bh
  4283f5:	sar    esi,cl
  4283f7:	fucomip st,st(6)
  4283f9:	retf   
  4283fa:	in     al,0x5a
  4283fc:	mov    ebp,0x8cacfcfa
  428401:	jmp    0x273b:0xac850338
  428408:	popa   
  428409:	ins    DWORD PTR es:[edi],dx
  42840a:	xchg   esp,eax
  42840b:	push   esp
  42840c:	fdiv   QWORD PTR [ecx+0x5c993635]
  428412:	push   esi
  428413:	and    dl,BYTE PTR [ecx]
  428415:	call   0xac7fe0bc
  42841a:	or     edi,DWORD PTR [eax-0x2332241a]
  428420:	cwde   
  428421:	adc    eax,0x42a0296b
  428426:	imul   eax,ebp,0xffffff97
  428429:	push   eax
  42842a:	sbb    BYTE PTR [edi+0x2a238222],0xf2
  428431:	sub    eax,0xd26a2fed
  428436:	cmp    eax,0xf671febb
  42843b:	xor    bl,ch
  42843d:	sub    al,0x34
  42843f:	jmp    0x42840b
  428441:	push   esp
  428442:	test   eax,0x3e5ce89a
  428447:	fnstenv ds:0x4fd7a6fb
  42844d:	out    0x11,eax
  42844f:	mov    ebp,ebp
  428451:	stos   BYTE PTR es:[edi],al
  428452:	xlat   BYTE PTR ds:[ebx]
  428453:	and    al,0xdf
  428455:	dec    eax
  428456:	sub    cl,BYTE PTR [ebx+0x6]
  428459:	adc    BYTE PTR [edx],0x1
  42845c:	shl    BYTE PTR [ebp-0x66],0xdc
  428460:	push   edi
  428461:	popf   
  428462:	out    dx,al
  428463:	mov    ecx,0x66c521f5
  428468:	imul   eax,DWORD PTR [ecx+ebx*1-0x5e1e2d33],0x3a
  428470:	push   ebp
  428471:	test   DWORD PTR [ecx+0x3983002],edx
  428477:	mov    esi,0xdbb7b48e
  42847c:	call   0xa70:0xa2c41017
  428483:	sub    esp,ecx
  428485:	and    DWORD PTR [ebx-0x7bca98a6],esi
  42848b:	dec    edx
  42848c:	je     0x4284aa
  42848e:	pop    edi
  42848f:	mov    esi,0x212a3172
  428494:	xchg   BYTE PTR [edx],bl
  428496:	inc    ecx
  428497:	push   ecx
  428498:	pusha  
  428499:	bound  edi,QWORD PTR [eax-0x51117416]
  42849f:	or     al,0xfe
  4284a1:	xchg   esp,eax
  4284a2:	je     0x428449
  4284a4:	jmp    0x48f225b2
  4284a9:	sahf   
  4284aa:	cmp    BYTE PTR [ebp+ecx*8+0x41],ch
  4284ae:	call   0x73f1:0x156343e1
  4284b5:	retf   0xd2fc
  4284b8:	mov    edx,0x8a13f095
  4284bd:	jae    0x428443
  4284bf:	xchg   edi,eax
  4284c0:	mov    eax,0x46ca111e
  4284c5:	(bad)  
  4284c6:	push   ds
  4284c7:	cmp    dh,ch
  4284c9:	icebp  
  4284ca:	loopne 0x428468
  4284cc:	and    BYTE PTR [edx],cl
  4284ce:	cmp    DWORD PTR [edx+eax*4+0x4d3ea7c1],ecx
  4284d5:	push   ecx
  4284d6:	adc    al,BYTE PTR [ebx-0x1]
  4284d9:	pop    edx
  4284da:	cmp    bl,ch
  4284dc:	xchg   ebx,eax
  4284dd:	push   ss
  4284de:	push   edx
  4284df:	in     eax,0x72
  4284e1:	cwde   
  4284e2:	js     0x428475
  4284e4:	popf   
  4284e5:	mov    ecx,0xd9e74e42
  4284ea:	repz adc cl,BYTE PTR fs:[ecx+esi*1-0x57]
  4284f0:	call   0x932f3003
  4284f5:	int3   
  4284f6:	retf   
  4284f7:	aas    
  4284f8:	and    BYTE PTR [esi],dh
  4284fa:	and    al,0xa1
  4284fc:	inc    eax
  4284fd:	or     DWORD PTR [eax],edx
  4284ff:	clc    
  428500:	sbb    dh,BYTE PTR [eax-0x38]
  428503:	push   0xffffffb8
  428505:	nop
  428506:	pop    ebp
  428507:	(bad)  
  428508:	dec    ebp
  428509:	outs   dx,DWORD PTR ds:[esi]
  42850a:	xchg   ebp,eax
  42850b:	(bad)  
  42850c:	std    
  42850d:	jmp    0x5b87f0f5
  428512:	cmc    
  428513:	dec    ecx
  428514:	or     edx,esi
  428516:	cmp    BYTE PTR [ecx-0x4516bfa0],ch
  42851c:	fcom   DWORD PTR cs:[eax]
  42851f:	out    dx,eax
  428520:	rcl    BYTE PTR ss:[ebp+0x11],cl
  428524:	jecxz  0x428504
  428526:	sahf   
  428527:	sbb    al,0x60
  428529:	dec    eax
  42852a:	or     BYTE PTR [eax-0x6],cl
  42852d:	jg     0x4284f9
  42852f:	out    dx,eax
  428530:	inc    ebp
  428531:	sbb    bl,BYTE PTR [ecx]
  428533:	pop    edx
  428534:	mov    dl,0x61
  428536:	dec    esi
  428537:	sar    DWORD PTR [edi-0x7661190a],cl
  42853d:	or     DWORD PTR [edx-0x23],0xffffffa5
  428541:	imul   ecx,DWORD PTR [edi],0xaf76a477
  428547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428548:	and    cl,ch
  42854a:	sbb    al,0x45
  42854c:	sbb    dh,BYTE PTR [ebx-0x3fd97da8]
  428552:	inc    edx
  428553:	sbb    DWORD PTR [esi+0x76],eax
  428556:	aad    0x2
  428558:	leave  
  428559:	mov    al,0x7f
  42855b:	pop    eax
  42855c:	and    al,0xcf
  42855e:	push   edi
  42855f:	and    BYTE PTR [eax],ah
  428561:	mov    ah,0x48
  428563:	jns    0x4284ff
  428565:	fidivr DWORD PTR gs:[edi]
  428568:	shl    BYTE PTR [ebp-0x2b635945],cl
  42856e:	(bad)
  428571:	ss mov fs,ebx
  428574:	cmc    
  428575:	inc    edx
  428576:	jle    0x4285e0
  428578:	pop    es
  428579:	fwait
  42857a:	and    cl,cl
  42857c:	or     eax,0x5d5d964c
  428581:	lods   eax,DWORD PTR ds:[esi]
  428582:	fmul   DWORD PTR [ebx]
  428584:	cmp    BYTE PTR [esi+ebp*8+0x6a],dl
  428588:	push   0x4874fdde
  42858d:	fdiv   QWORD PTR [ecx-0x38977af0]
  428593:	mov    ebp,0xcf88d16e
  428598:	mov    eax,0x33db14a0
  42859d:	push   ecx
  42859e:	mov    ebp,0xcf6b7c8c
  4285a3:	fistp  DWORD PTR [esi]
  4285a5:	push   ss
  4285a6:	add    al,0x22
  4285a8:	popa   
  4285a9:	dec    esi
  4285aa:	sbb    DWORD PTR [esi],ebp
  4285ac:	inc    eax
  4285ad:	mov    al,ds:0x8fda11d5
  4285b2:	push   eax
  4285b3:	out    0xda,eax
  4285b5:	jmp    0x4285b0
  4285b7:	ret    0x6de3
  4285ba:	jns    0x428567
  4285bc:	adc    BYTE PTR [ebx],bh
  4285be:	test   BYTE PTR [ecx-0x27384895],ch
  4285c4:	push   esp
  4285c5:	or     eax,0x3bb68562
  4285ca:	xor    BYTE PTR [edi+0x29],0xfd
  4285ce:	mov    al,0xb1
  4285d0:	adc    al,0xd7
  4285d2:	mov    cx,WORD PTR [eax]
  4285d5:	xchg   ecx,eax
  4285d6:	xchg   edx,eax
  4285d7:	mov    WORD PTR [esi-0x610e42a6],?
  4285dd:	das    
  4285de:	dec    edi
  4285df:	sbb    ebx,DWORD PTR [eax+eax*1]
